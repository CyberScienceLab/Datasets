xchg inc sbb sub push pop cmp xor lods andl cmp insl or movsl mov mov call aad or or cmpb jmp push les insb jge inc out or cmc adc mov orl push mov mov int3 sbb test or xchg lcall mov ret ret fistl je mov cmpsl aam mov hlt pop cli adc fldcw cmpsb xchg jmp popa (bad) pop (bad) push mov sbb fimul pop cmp lds loope out push daa jp and push sbb loopne rcrb (bad) ja inc sub add add enter scas int push daa cmp outsl xor inc mov ficomp or adc je push push lahf (bad) lock xor pushl loope jbe adc jle mov cmp pusha movb push mov pushf mov jmp jmp call lea pushl movl jmp pushf movb xchg pusha call lea call call sub pushf repnz jmp add mov pusha pushf pushf lea jmp test cmp pusha lea jae call loop sbb xor pop cld sbb sahf sbb idivl lret lret xchg adc lods add cltd stc imul lods dec jae (bad) sti int3 daa sti cmp arpl ljmp (bad) xchg mov (bad) adc (bad) fldcw sbb and pop xor jmp data16 aas ja adc test jb jno push (bad) mov pop aad in or aas dec push fimul mov inc add fnop in xchg (bad) stc out push and push mov clc ret xor xor jp lea lahf addr16 imul aam adc mov popa mov lea add subl ja cmp popa bound lds sbbl push mov rcrl lahf jnp scas push xchg outsb jne rorb xor and fildll mov (bad) (bad) rcrb and (bad) push out rcrl sub cmpsl add xchg mov movsb dec sbb cmpsb cmpl stos cs aaa mov iret dec mov pop adc call dec jecxz in or in sub add mov movsl pop (bad) stos cmp mov jmp clc cmp mov mov pusha call dec inc push dec inc dec xor cs insb add add push add pushf pusha movl mov lea jmp (bad) (bad) dec mov in mov push mov out mov lods fsubrl adc sub movsb xchg push insl dec push mov mov loop hlt jp test jmp xchg and adc in jmp aam ficomp mov cmp and push mov aas add movsl (bad) out mov add inc fdivs lea mov clc cmp inc push mov leave dec jo addr16 (bad) in leave stos push adc sahf ret (bad) adc and cli fldcw xor leave pusha aad int bound or call daa cld cmp stc dec xchg enter js mov mov imul jb mov jp dec xor jmp out outsl lcall add jmp jp mov mov jns ja in in push jp aad mov mov sti loopne mov fsubrs jns fdivs mov mov add push jae or in pop bound jns dec scas push pushf xchg scas cmpsb xor cwtl test lods out mov les ret adc and (bad) push inc sarb jl les xchg xchg js pop (bad) (bad) adc int3 pop xchg xchg cmpsl aam jno ficompl mov mov negl (bad) pop jg outsl sbb lods jg aas es cld jmp fnop push dec fiaddl stos sar cli adc cli (bad) int3 call flds add inc fimull mov int3 adc icebp push in decl imul cmp ds jno jmp or xchg loopne,pt lret xor pop pop rol mov test aas les sbb xorb cmp pushf lea jb push cmp pushf call shl push adc stc mov cmp cmpb call pushf pushl test add pushl clc movzwl sub mov push pushf movl call push fldt fdivrs nop xchg fdivrl jns fdivs jns mov cmp mov in pop enter sub add repnz (bad) pop mov adc jae push inc adcb pop jnp arpl jmp in int3 xor mov mov movb fsubrs jecxz rcrl in jae bound (bad) stos sar and imul (bad) mov pop fsub sbb fnsave loopne shll out adc outsl push adc loop mov push cld into pushw jne xchg mov andl and mov enter test pop xchg js fisubr mov (bad) xchg test mov cmp or or movl and call cmpb pushl lea jne push sar rcl mov clc add test movzwl shld mov clc add pusha call add add add add add add insb adc add add dec (bad) adc add add jno adc add add jns add sbb add adc add cmc add add add sub sub jbe inc cmpsb test imul (bad) clc rorb lods fwait stos insb or push mov cmpsb fwait jb clc fcmovnb adc enter fdivp sbb pusha aas (bad) push sub stos fwait in mov loopne add inc stos cld in (bad) pop jo test int3 test sub xchg (bad) lock jne sahf push add push mov out dec xchg les in mov insl xor add lret push jmp add xchg pop iret and mov (bad) repz jle cmp bound insb flds test popa dec fwait or jmp jnp jne iret jp (bad) or and jge dec mov shrb adc or jno movsl xchg xchg add (bad) dec mov inc sub stos add xchg and inc lret test pusha stos js push mov notb mov gs xchg push test push sbb call jo (bad) inc rcl shlb movsl add loopne inc dec push inc jmp lea out dec push lock add mov jno (bad) mov mov mov repz mov cmp sbb test sub xor int jg xor ds and repnz aad sub mov shlb and and adc clc xlat sbb mov xchg pusha xlat adc in mov jb aam insl sbb shlb mov out inc cmp xchg adc jb pushf xchg mov clc sahf enter mov sub aam call sbb ljmp push jbe push jle mov (bad) push push lods jp popa jnp jo mov rol jge inc jno int3 call je xchg or enter nop add repz jbe fst popa push daa imul mov clc ret std cli jg or mov pop test or mov and lea cmc cmp xorb daa xchg (bad) adc imul xchg sub or mov dec test xchg sbbl push iret jl popf imul mov sbb popf or movsb and popa sbb pop test cmp aas fldcw imul ds pop sbb pop hlt sbb push sub sub cmp push adc mov je ss into pop outsl pop mov inc js sbb lock insb stc ds pop in fidivrl mov outsl mov and add jecxz ljmp ret mov jnp js outsb adc sahf das in (bad) out and jp stos js inc dec lods and dec rclb mov ljmp jecxz out dec sbb sub inc jbe cmpsl sbb in mul in inc shlb adc data16 enter inc loopne push cmp in dec inc push ja mov adc cmp sarl sahf sbb push rorl js cmp fwait sahf ljmp mov cwtl (bad) leave or iret inc adc dec jb mov roll test sub mov clc pusha inc pop mov arpl ja arpl ljmp aaa (bad) repnz dec in fist jae rorb xchg or sub cmp out adc movsl fwait xor scas pusha js push and push aas fisttpl dec adc mov cld adc dec inc or subl sbb cltd adcl aad cld fldpi mov scas sub push rolb dec rcrl push xchg sub je aam mov inc inc sahf nop mov push ds xchg (bad) inc push jbe sub popa inc xor sbb inc outsb js rclb repnz push sub clc add mov xchg gs pop jb (bad) jbe pop lods sbb push mov dec js int pop or jecxz fisub scas addl sub xor aaa add fnsave divb fdivrl icebp clc dec dec push (bad) adc or dec add or mov icebp jp or loopne mov mov mov sbb xor jle notb cmp add lret or push outsb jae cmpsl jecxz subl call aam adc stc lahf sbb jno imul test pop adc push lds push (bad) jecxz jmp sub mov js imul push dec dec lods adc loope inc dec jecxz repnz inc mov outsl cmp aaa scas ficoml pop xor sti sbb test jecxz add pop cld mov (bad) mov icebp stc fisubrl mov mov scas div enter xor ret xlat xchg xchg mov pop push fdivrl sahf cmp (bad) loope mov into jg xchg and test divl jbe xchg push dec icebp cmp sbb (bad) lahf jmp mov sbb icebp mov sub mov xchg lcall fadds xchg dec adc pop inc pop add int3 pop mov mov inc popf dec mov jp sub mull ret cmovl aaa xchg fwait test xor jle dec and jl jnp,pt inc add cmpl pushf or mov sub aaa fisttp dec cmp add xor cmpsl sub shrb (bad) cmp iret sub (bad) lcall jmp arpl or pop adc outsb mov shrb push inc xor lahf or mov fsubs (bad) lahf lods xchg std sub outsb shrl push jmp sbb mov fnsave pop mov (bad) pop dec xchg mov data16 decl insl out dec xchg mov (bad) in insb test add ljmp scas or or fsts sbb sbbb xor (bad) lock dec mov in test cmpsl outsb add rolb push aas fnstcw clc pop adc repnz in or jnp add out pop pop add fwait pushf aas and and in imull addr16 insw das xchg jae js cli dec mov test or pop add add mov std les hlt (bad) das dec or int3 push sbb inc push popf and xchg fisubr jbe int scas pushf call jnp and in push (bad) out clc fisubl cmc push dec rorl aas xlat pushl add std mov sub mov aad (bad) cmpsb dec lcall sub adc push mov fcomps ret clc stos outsl push (bad) pop scas xchg mov aaa inc sub in lods add pop mov jbe pusha shl outsl cmp loop jo dec sub push imul sbb mov jecxz and push bound movsb (bad) xor add rcll lret daa push test and scas sbb push inc lds pop sbb enter repnz sbbl mov cmpsb (bad) pop jne cmpsl mov imul dec cmp addb pop or js mov push ljmp jbe rsm mov mov rcrl add cmp mov inc jo push push cmc cmp mov sub addb out and adc mulb add jl iret inc jl incl mov aas xlat jbe cmp or lock outsb sub jmp pop repnz adc jmp sbb push les push std mov sub cwtl dec stc dec hlt (bad) xor pop and mov push dec enter sub mov cmp outsl clc mov sarb insl dec aaa adc pop (bad) xlat jne jb jl push dec (bad) (bad) gs sbb mov sub push pop xchg xchg test das lret (bad) jecxz xchg xchg ja pop mov (bad) in (bad) add cs cmp sarl mov inc mov hlt mov clc loop xchg mov clc sub mov mov js dec push lahf cmp jae repz xor cs pop out sub mull jg push out pop mov sahf (bad) or cmpsl idivl pop mov imul ja ret push sbb or pop (bad) aas pop mov mov fwait (bad) lahf mov jecxz (bad) mov push in arpl addl adc out dec roll fwait xchg mov cmpsb jns std imul or jge call jmp inc xlat push and dec fs icebp bound cmc adc clc les repnz cmpsb sarb icebp rcrb push cwtl lods (bad) fwait cmp daa fs aam loope mov and pop (bad) pushf mov les xchg adc mov les fcoml mov mov lea test fisubrl (bad) or cmp pop mov imull cmpsb in jmp xchg add int3 sbb lcall roll lods (bad) or shrl push pushf scas mov ret jnp (bad) mov movsl (bad) test test (bad) cmpsb ja inc inc call or ss fs (bad) mov dec mov xor cmp xchg sub pop imul sub or mov nop xchg arpl jg inc jg outsb test xor cmc loope lock nopl push xchg and dec stc fcom cs and cmp xor repz xchg xor push int3 cmp out (bad) hlt push sarl pop cltd xchg and fnstenv movsl dec mov fwait jl insl cmp stc insl aad mov subl popf pmullw aaa and push cmpb popf push and mov test gs fld es imul add imul movsb xchg out outsl fs insb popf mov arpl movsb loopne dec push push pushf ret sbb mulb jl jl pop inc pop mov pop mov add lock cmp gs jp cmpsb daa push jbe sarl jb jnp imul jnp test xchg (bad) xor adc or sahf popf fwait arpl mov sbb jp data16 fwait cli jmp inc adc pop mov addr16 cmc cmp mov xchg jbe pop push adc push mov sbb imul fidiv imul xor dec mov inc cmpsl aas test lods mov ja add dec repnz push push fwait xor mov lods sbb lds scas jl dec xor shll push cmp cli dec and pop cs call sti repz aad jecxz mov stos andb mov cli pop pop in fs mov outsb adc mov jle mov push mov mov xchg pop jl adc sahf push dec repz push orl stc jne pop pushf jo das cmp mov or mov mov mov lea mov pushf push or data16 mov cld test neg jl pop jnp (bad) icebp daa insl in cli in cmp adc and pop cmp adc ret push insl jbe mov xlat xor cmpsb inc sub int js sub sub cltd scas mov stc add inc (bad) stos xchg leave pop js loope push loope mov test add test adc jmp adc andl or scas out (bad) movsb add (bad) jmp repz inc std stos int3 lret movsl mov mov sti pop inc mov xchg cmp sub lods fist int3 in and add mov jmp xchg in or insl jmp sbb divl and fdivs adc (bad) xor out into adc add addr16 lret fildl jg sbb imul lret add mov lods xchg (bad) mov pop fdivs ror in call jg sub xor cmp push mov mov jmp fnstcw add push sub inc jnp bound or inc setnp inc pushf or push cwtl dec test popf push lcall stos into and lods xor adc scas icebp sub pop ds fincstp test mov outsl push in lahf sbb fiadd lods pop cwtl mov cmpsb nop pop inc xlat loop shrl shll mov adc int3 push sbb mov xchg sbb push in sti pop cwtl cmpsl fdivr (bad) out jns (bad) and pop (bad) fisubr jno scas fadds add push push inc dec push das jbe cmpsl push shll jae pop inc addr16 bound adc inc (bad) hlt test cmp mov inc (bad) pop dec fwait mov dec les aad jns sub test and bound jo imul imul imul mov lds (bad) fmuls (bad) lock int pop xor outsb leave mov push adc cltd les mov mull mov outsl sbb sbb add fnstcw loop cmp cmpsb jnp adc push outsl ret xchg jle add insb mov lea roll inc or sub mov dec shll sbb gs lods sbb push add jo inc xor outsb push outsb pop bound xchg inc push push jl cmp lcall scas ret or sbb push push insb mov sahf xchg dec leave mov cmp in leave lock jo pop xor test insl hlt jecxz in faddp mov sub pop shr mov int3 pop out push cmc in adc add xor cwtl sarl into je nop test lahf mov fnop scas mov lds sbb and sub add pop fstpl pop jne and sti xchg mov nop add xchg mov andb ficoml aad ljmp cmc xchg js and mov jmp jl adc xor mov iret out out aas (bad) jg sub dec sub scas cmp js cmpsl push mov sub jns dec scas (bad) cmpsl adc jno sbb pop push sbb ficompl pop pop adc jo push mov sbb sti pop pushf fwait jmp or cmpsl fucomip mov in mov lret inc int addr16 sbb loopne mov insl add out sub mov jnp sub ret dec imul pop mov jae add (bad) fldl inc jecxz sub fisub adc ljmp sti mov ljmp inc adcl xchg cmp sbb stc out stos bound pop push sbb nop (bad) idivb mov or dec cmp pop cmpsb dec test xchg mov aad cmp (bad) mov mov mov pop xchg aas push sub gs push xor (bad) or push loop sbb and (bad) jne sbb pop fldl dec pusha in aad mov mov imul add inc divl sub pop test jbe shrl cld and pop dec movsb fiadd inc mov and inc test or sbbb aaa adc adc jne or mov sbb imul xchg out out mov test neg icebp jb mov lahf xchg inc mov jbe mov loopne fistp cld push divl adc cmp pop pop and (bad) mov pop mov js cmp cmp inc sbb xchg gs in imul sub xchg shrb push mov (bad) stos mov aaa or mov icebp jmp pop popa psubb fwait insb dec cwtl push (bad) push (bad) lea jne shr not not btr sub sbb mov and inc add pushf adc inc jmp imul loope jmp cmc jl mov jl cmp mov test mov add scas inc xor sbb pop cltd test (bad) std sub jo idivb xor mov punpckhbw imul pushf bound test mov icebp cmpsb jns push imul jae push jnp push pushf mov mov xor cmp mov xor lahf or testb mov cmp fucomip stc push lods orl mov iret sub mov dec fisttpl jnp xor cmpsb jg lock xchg xor mov inc mov (bad) xchg mov adcl (bad) mov imul gs push xchg mov mov push jmp sti add mov sub or test movaps mov inc add loope pop imul notb add mov jmp mov jmp pushf jmp jmp movl pushf mov pushf push pushf mov pushl ret jb push push pushf movl push mov pushl lea jmp rcrl push pop repz (bad) adc adc lahf adc (bad) lcall icebp test xchg loope xchg add push inc repnz xchg sbb fndisi(8087 aad push dec push pop fwait pop fsub ficom xchg (bad) sbb test fwait mov shrl jecxz push push xchg aam pop loope push sahf fwait pushf inc loop push inc xchg mov dec loope aam mov repnz loop push push xchg fstpl and push (bad) jl int3 xchg (bad) sbb add imul push aam lcall add inc loope push mov mov or adc pop xchg repnz ffreep adc popa sbb bnd stos out lcall ret out adc sbb (bad) repz pushf repz jbe nop adc fcoml clc pop nop repz push dec pop stos roll adc lahf pop and popf decb mov scas xchg add cmp jl (bad) popf sbb lret xor mov nop pop mov je xchg mov je idivl adc popf aad jl jg repnz dec cmpsb push bound adc cltd push sbb xchg xchg pop xor adc cli adc idivb jg psubq mov pop repz sbb xchg shll ja push pop popf je movl inc cmp pop mov cltd dec dec lahf xchg (bad) fistp push jg cltd push lret jb xchg rcll cltd pop mov mov loop or aad jno cmp dec neg out sbb push cltd push (bad) call push mov cltd pop pop push jo jae pop pop jo fisub imul jo mov lret sahf push or (bad) jbe lret fldcw ja push adc ds (bad) jo clc pop xchg dec data16 or sub ja lcall hlt push and notb fwait rcrl subl jo xchg xchg adc fwait orl inc (bad) ja pop or mov push sbb push call cld aas popf pmovmskb pop in jns pop inc pop push xchg jg pop xchg push jnp sbb or lahf cmp cltd addb (bad) push xchg imul dec jb push pop or dec inc lahf sbb ficom loopne push jo sarl jae push add or int3 fs movl lds (bad) cs jg fwait loopne dec jo xchg js sbb (bad) xchg cmp xlat mov outsl jno or add in int and add or jbe mov push push aas popa sbb adc stc ret xchg mov enter mov sub iret (bad) aas pop push pop fstps movsb pop xchg inc mov dec fcomps sbb add cltd adc sbb inc sbb adc fbld sar mov popw outsl jl adcl jg adc adc es jae mov or pusha push add inc aam pop cmp mov xchg dec es out or sbb push dec repnz xchg icebp add sbb dec push add xchg icebp sbb loope push adc adc sbb push or xchg push sbb loope push adc shl add push or loope adc inc push sbb fwait cld loop push pop xchg xchg sbb (bad) loope jnp push lcall inc mov shll cmp ss adc fadds pop loope cmp adc fsts sbb mov pushf inc jge xlat sbb fimull andb jl and negl push lea pop bound int3 sub push mov xor repz sbb push iret xchg jl pop je jbe jb not pop adc sbb and mov pop push lds push hlt sbb mov xchg scas das pushf mov je lahf (bad) jecxz mov jp and sbb iret sbb push sti sub aas cmp adc xor repnz je lock in roll insb ret imul (bad) out adc inc xlat inc fs in pop xlat inc int3 sbb mov xchg sub push pop push mov cmpsb pusha pop push mov mov repz mov jno xchg nop shll ret mov loope inc sarb and mov sbb add pop rcr jae lcall jb nop fistpl jo adc into popf mov incl xchg cmp jae push cld xchg jmp (bad) ficomp pushf cli or jp push pop sarb and (bad) mov mov cmp (bad) (bad) sbb xchg adc mov (bad) mov lret push cmp push push cltd mov jg add (bad) push cmp inc push pusha cld mov push adc mov out and xchg sti fisttpll adc push loop (bad) mov mov cmp adc xlat cld sti push aam mov sbb (bad) pop cld (bad) xchg orl or movl sbb outsl sbb jmp testb add loope loope add inc cld pushf push sbb popf or or xchg mov lahf push push cli (bad) push adc lret loop cmp push inc push dec sarl negb jle (bad) jnp add loopne jle adc in sbb or or or ljmp (bad) cmp xor bnd xor insl mov adc jo xchg lods sti ljmp pop clc adc mov mov cmp jb sti jle bound sahf fwait mov fidiv sti sbb xchg jnp icebp aas push mov jo ja adc xchg out fcompp xor inc pop adc cltd pop lcall inc fwait adc xchg pop xchg sub mov jle lahf jbe xchg fcmovnb fistl push xlat cmp popf dec cmc jae jle push jnp cmp (bad) adc add push xchg sti pop dec movsb repz cmp adc pop orl add movsb cmp inc inc push clc push xor push push inc dec push jne repz push pop repz xlat push test push fwait push mov hlt push mov pusha stc adc xchg inc nop shr mov repz push push sub add insl inc xor add inc and add inc and add inc and add inc and pop out daa xchg adc xchg adc test adc test adc insb lret adc mov adc mov adc mov adc (bad) pusha iret adc mov adc lea adc mov sbb je mov repnz adc xchg jae mov icebp push adc xchg jb mov lock adc nop jno mov notl aaa xchg push push adc xchg ja mov cmc push adc adc push adc jne mov lcall aas lahf jo mov ds jg mov cmp sbb pop push cmp popw repz jge mov add sti pop cmp fwait jl mov adc stc pop cmp cltd jp mov push pop addl mov jo mov arpl adc adc adc movsl cmp jo lea lea dec sbb dec aam push sbb mov xchg mov fadd sbb jo call xor cmp dec push pop jo js mov pop pushf jg fdivp adc fstpl (bad) lock xor les jle stc (bad) movsl dec in pop jnp imul clc sbb jg and movsb int3 push imul out xchg fidivr fwait pop lret jne pop jo stos pop mov sti xchg push and adc lods mov rcrb mov cmp int3 hlt neg test xchg cmp jns sbb cmp add cwtl shlb pop adc mov negl std in fsubrp mov fstp sti imul push xchg sub cli pushf adc jle dec lea repnz inc sub jl push add (bad) or sti js pop cmp lods dec bound sbb sbb xlat add cmpsl or add cli cmp cmp cli add jo ljmp mov xor (bad) shrl lock push test sub movsbl and cli pop dec or fdivs pushf loop xor adc mov bnd ss push std pushf mov popf icebp lock repnz push divb xchg (bad) icebp mov fcomip push adc push jg add iret xor nop xchg (bad) lcall jecxz repnz (bad) lcall mov mov loopne rcrb mov pop adc sbb icebp gs pop (bad) adc jg xchg sbb adc mov sbb xor cmp push sbb bndldx repnz loope push xchg fwait adc (bad) push or popa xchg mov mov repnz mov fwait mov loop push add xchg push loope push pop fwait addb adcl loope push add push sbb loope push pop fwait cwtl sbb cltd push sbb fsub xchg push adc xchg sbb fwait adc sqrtps loope push lcall jecxz push push xchg add lahf loope push sbb push xchg (bad) icebp adc test xchg adc loope push add sbb (bad) out jecxz add xor cmpsb sub (bad) sbb jp (bad) mov dec mov sbb (bad) lahf aad adc stos mov mov sti in fldcw pop mov sarb sbb stos cli jnp lock mov xchg lock xor add sarb ljmp adc arpl xchg dec data16 fcmovbe lea pushf inc ficom fcmovnu rcl (bad) cltd jnp xchg insl mov (bad) arpl test fsubrl dec mov clc jp sti mov and int3 nop add mov je and daa mov lock xchg sbb fwait loope or out fwait xchg stc hlt xorl or push sbb daa push adcb push subb orb adcl cmpsl sub mov lds adc adc adc adc loope pushf out repnz (bad) xchg pop rolb pop sbb push push xor adc push sbb push fistl add (bad) push push xchg or movsb jl fwait hlt or xor xchg pop movsl sbb xchg and pushf repnz inc or je adc xchg dec xor mov mov sti inc xor fcomps jnp repnz xchg mov pop push adc sbb xchg add pop cmp or cmp push (bad) xchg or or push xchg add cli sbb xchg fs sbb js aaa push xchg xchg daa xchg fwait sbb adc das jg cmp pop adc outsl sbb and and popa mov xchg sub out pop imul ret or andl rorb scas in shll xlat adc popf adc xchg push out dec xor xor dec repz test sbb ret xchg in dec push push cwtl icebp cltd repz nop test sbb cmp xor adc cmp sbb insb sbb pop adc sti dec and push repnz mov loopne dec add ret xchg and imulb sbbl push xchg test mov pop xor pop jnp out add push sbbb sbb add or xchg jnp (bad) ret jecxz icebp inc xchg insb fcoml xchg inc xchg repnz and dec and (bad) xchg out cmp pop (bad) xor cwtl pusha mov inc lahf lret dec push push pushf rolb sub dec pop push fidiv test sbb push mov cld rorl in aaa ja jg push adc ret adc sbb outsl cli adc arpl adcl and xchg xchg pop mov adc loopne add sbb (bad) xchg addl sbb push test xchg xchg mov cmp cmpb add mulb jo ja shlb inc xchg jl push div (bad) loope and adc xchg in inc icebp div (bad) loope and adc div (bad) loope and in repnz idivl adc insl sti int3 mov push repnz or (bad) out lahf div jns in sar jl dec mov pushf and push test dec imull adc mov xchg adc icebp pushf sti and sub out mov cmp pushf std imul inc jl mov pushf and std xchg or icebp repnz movsb imull and (bad) in sbb in (bad) mov jg mov je sbb fdivrp loope imul inc jl mov pushf and inc mov push xchg jae mov fisttpl xor inc push mov mov (bad) repnz addr16 sbb mov iret jecxz mov les div dec mov ss (bad) push or adc push mov mov les adc in mov les loope and or jl adc icebp push loope je mov mov and xchg dec sub stc notl fcmovnbe repnz insb iret jb sti icebp pushf and xlat imul aad xlat xchg mov mov sub in out mov icebp dec mov in xchg fsubrp loope imul jl popf icebp and in out mov icebp dec (bad) mov xor sbb pop movsl cmc xor (bad) jns mov xor icebp and fistp fdivp icebp inc sbb and cmc in movsb std scas stc and (bad) std in mov icebp dec ja jns (bad) je mov add inc inc enter inc stc add daa dec mov cmp mov and movsb insb int3 mov fsubl mov (bad) jg lret imul fwait repz xchg je mov cmp cld rol jbe arpl das mov repnz mov cld mov arpl das mov pusha daa xchg sbb adc rcrl mov les in and or jl mov pushf and or insb int in jmp dec cmp fsts lods cmp xchg mov lock mov mov in xchg aad jecxz mov les loope and lods arpl movsl pop icebp cli in push test mov stos xor lret lock push out in jl repnz les loope and or and push add xchg jno mov arpl inc idivl loope movsb push fstl jl mov mov aad imul mov les fbstp jl icebp xor xchg push in xchg jb mov bound push (bad) dec mov pushf inc push lods das imul xlat push imul mov les lods movsl out or push testl in fmul (bad) sbb jle cmp data16 pop inc and adc xchg shll sub jle movsl adc (bad) or inc out xor dec inc scas cmpl or mov mov mov repz or rclb daa mov or lea xchg out cmp lods xor nop hlt xorl je pop sub xor sti sbb sbb cmp jmp lahf pop ficompl loope sbb jb sbb push jge insb mov dec (bad) or rclb xchg adc fs aaa adc push icebp xchg mov xchg loope inc xchg push int cmc nop pop nop mov xchg icebp pop inc add adc aaa or rolb in push cwtl or adc mov add aam cli jl stc js hlt out add sub push adc fsts inc mov or sbb sub (bad) aaa mov jns pop push jae sbb or push mov or pop pop mov or jnp dec adc mov jecxz out into xor stos aas adc nop add add fwait loope lcall orl pushf gs lcall or mov (bad) pop sbb jl aam dec in lahf stos data16 dec pop repz jae push mov dec sahf dec cmp dec jl movswl xchg xchg push sbb sbb scas or lock push cltd rcrb jmp imul xor jnp lahf jle push neg mov jg ja xor (bad) sub gs mov dec call loopne pop sti ret out aas mov fcmovu scas popa sbb cmp lret cltd jp aad adc add or jae jle faddl rcr dec jmp je pop call xchg sahf dec dec (bad) fnstcw push movsb orl fwait pusha sbb scas add jmp sub sti cmp sbb pop aam or loopne sbb sti jb cmpsb jecxz into clc test orl jno sub and out adc fimull dec xchg pop add sbb lock jnp nop dec mov notb jmp push sbb sbb ljmp in add stos nop mov push repz ljmp fldl cmp aas cmp dec jle fs or fistp scas push mov out jle lret adc jp push gs mov vmread adc mov xor fdivrs cli cmp lcall lcall leave xchg std sbb lock push nop xchg xor pop ss jecxz pop push cmp xor shl test iret pop pop xorl dec jbe insl dec xor or add cmp jnp lock mov mov xchg mov pop add das push das push cli jns xor inc mov cs sti pop ficompl sbb inc pop cmp jmp jbe scas mov insb roll push ret daa stos pop adc shlb pop ret lret nop inc pop lret add inc jo cmp rorl push inc loopne cmp xchg insb into cld cltd (bad) or aam fwait mov mov aam sbb mov js and push test ficoml lcall mov jg popw sbb jb dec aaa xchg pop leave pusha (bad) hlt push push nop fnstsw ret jl aaa adc dec or mov popf sahf jmp mov test jo inc loopne int pop cmpsb or jl xchg pop push rcrl push sti push adc jnp xchg push inc or aas rcll pop (bad) mov xchg add xor jp mov sbb jnp xlat cmp cli ljmp xchg push into gs pop mov lcall repnz fstps mov inc mov dec push mov push in aam cmpsl repz adc jnp add pusha mov jmp jmp push inc xchg imul bound cli les xchg push push daa dec ja jnp xchg jl and cmp cld add xchg pop sbb aaa (bad) cs xor daa pop (bad) imulb lret jbe add mov push mov aas fsubrs aaa xchg push xchg loop and cld push mov jne jb adc xchg addr16 test pop inc jecxz push push and fldt pop pop jnp scas fnstenv cmp adc mov pop mov repnz imul lcall addr16 adc shr test cmp pushf jmp jmp pusha pushf lea jne movzbl not or test mov not add and rol sub movsbw bsf mov pushf bt sub bt pushl popl call lea jb jne test stc cmp cmp jmp jmp mov pusha lea jne shr xor cwtl cmp mov push add rol xor add sub rcl jmp jmp call push stos push mov mov pushf lea jmp add inc js je jb arpl jae bt cmp pusha push push lea ja pusha bt clc imul pushf pusha add mov pushf lea jmp pushf call mov lea ja push sub clc data16 mull fs add rol sub call out pop xor inc xchg xor pop dec data16 push popf fstl test and in leave bound jecxz dec dec and sbb xor ss dec jbe sub je cmp ljmp mov or or push outsb out ljmp sahf pop movsl mov sub pop pop xor popa fisubrl in pop int dec and adc jbe pop fs cmp cmp (bad) jno jge jo hlt (bad) inc aas loopne xchg push dec icebp push dec int3 lods pop test das divb xchg jno popf push popa cwtl jno mov test lock mov das dec (bad) cmc aad adc xchg pop popa lret jmp je sahf push das ljmp jl test icebp xchg cmp adc insl pushf outsb lahf mov orl jae cld add lret js mov pop (bad) mov scas jnp jo fbld xor lods cli add mov push jb cmp and add ret dec sub loope ficoml das fidivl das mov pop jle and xor mov and pop movsl jbe pushl and (bad) jne mov popf das lods insl xchg ret and lret int3 and jl and xor add mov xchg mov popa fnstenv cmp cwtl adc sub pusha popa (bad) xchg pop and js mov mov sbb jecxz push in sti pop scas cmp lods fldt mov jmp jae or inc pop pop dec or and loopne ljmp aaa xlat xchg lea xlat mov pop pop popa mov xchg ds pop xchg das xchg jge jnp movsb insb cs xor mov pop and xchg mov xchg aam lret out xor nop xor rcrl jne xchg ss dec mov mov sub js xor std loop mov mov mov jg imull sub insl (bad) lret sbb pop in adc sub pop iret adc call (bad) test pop jl aaa imul cli dec es lret daa and xchg xlat mov (bad) icebp lret mov jmp (bad) std pop loop icebp ds imulb xchg mov ret loopne xchg mov mov std push inc xchg mov sti jp push pusha jle jge cmc pusha pop int stos add (bad) repnz ljmp pop jge push fisubl mov mov push lahf outsl iret inc outsl outsb jmp mov push adc mov (bad) testl pusha sbb dec mov jae dec addb (bad) push aaa push out add aaa or inc nop fstps and jecxz outsl (bad) fs sar dec leave insl in pop sbb jg fild xchg mov sbb clc mov loopne,pn scas cmc inc notl sub loop test stos sarb iret add dec pop add and add push pop add loop add or add pop pop add lret leave adc adc add popa pop add mov rolb imul add add add and add jno add and add add and call call mov jmp push pusha lea ja pushf lea jne stc pushf imul cmc jmp xadd sub shr mov mov shrd shrd rol shrd mov mov add dec shr and xadd mov (bad) test sbb cmp add pushl mov pushf mov pushl pushl pushf not lods pushf pushl call mov loope rclb and mov jp,pt enter in fadds hlt push xchg (bad) dec sbb xor jne fnstenv fs xchg mov jl mov adc imul mov and mov in and cltd aas mov cltd lcall ret sbb dec sub push pop faddl adc mov and or or loopne ja jp and sbb mov cmp gs sbb loop (bad) leave or popa pop movsb out int mulb mov lcall shrb fidiv pop (bad) fisub cmpsb mov jl inc or jecxz mov fmul jge inc addr16 jnp inc cmpsl bt cmc cmp call mov pushf cmp test add pushl test mov bt test push lea jg pusha pusha lea je stc cmc stc add cmc pushf call lea je pushf pushl bt sub stc clc clc cmp pushf jmp cld loope mov push inc xchg insb inc mov inc xchg rorl mov cs fmul adc mov shrl or fmull mov pop pop pop inc mov pop fstp pop jns adc cmp fadds add (bad) xor mov inc push mov lret dec mov test and (bad) fnsave mov stos lret sar push lcall dec jns adc (bad) lods jle ds mov mov jnp and nop push jno and mov jo xor mov movsl pop jge add push rorb loop adc call movb lea je jmp notb sbb push inc ss cmp push push insl xor mov mov pop xchg std dec pushf adcl and inc gs sti cmc (bad) mov ds pop test pop pop int3 test xor stos mov sbb sub and jp (bad) out pop enter stos gs inc xchg mov inc xor mov stos add lds stc inc movsb (bad) ja dec pop rcrl xchg (bad) mov inc push adc pop cmpsl push lods gs dec test (bad) cmpsl cmp cmp dec aad daa sub mov push inc mov lcall fnop scas addb jnp adc aaa mov or jg fildll sbb rorl inc add mov lds nop data16 add clc divb in cmp in enter mov into dec loope test inc test fs sbb xor cwtl cmp fnstenv pop in or adc xchg insb in inc mov xchg (bad) je hlt in xor mov jae jne test jae pusha mov lods sbb (bad) cmp (bad) (bad) push lret push popf xor and shrd sub lea dec ror aas push shl stc aam push aad call mov push inc mov sbb mov xor (bad) cmovl loopne pop (bad) sub mov insl loope inc mov les add fdivs sub andl inc jno jb gs test testb shll pusha test mov pop mov xor ss or inc ret jle sti int mov push cmpl sbb jno lret jl pop int3 xor push ja dec mov scas jnp fs mov xor divb jg sub mov rorb cmp imul int3 jge mov mov mov test jp aad xchg xchg xchg push bnd mov test xorl popf dec sbb push adc or in fidivr pop and sbb clc add add and pop fwait ja es cmc mov push cli jge jne inc mov pop push xchg xor mov cmp jge xchg out inc mov pop jbe sub mov pop cwtl xor jbe (bad) inc or pop cld jl jo or xor mov ss xchg nop adc cmc xor sbb clc pop xchg pop mov push and inc lret cmp cltd xchg cmpsb mov scas pop jle push int cmp (bad) into pusha cmp cmp push out (bad) js xchg and sbb in add adc popa pushf lret (bad) xor sub cld insl movsb rol (bad) dec fdivl out xor xchg sub out js cmc lret xlat xchg imul or enter movsl adc loopne mov or lahf push inc sarl jl jmp xor mov fwait pop movsb adc popa mov movsl ret inc cmpsl popf out mov repz (bad) dec mov repnz sbb xchg addl cs ficompl es jmp mov mov pushf pop bswap pop pusha mov mov pusha pushl ret lea jbe adc pusha xadd sub shr mov shrd mov dec inc add call call cmp push lea jbe dec call mov lea je jmp jae and add test out in shr ljmp sti sahf xchg pop test or xchg andb (bad) sub push dec xor dec jae aad pop mov ja test fstpt jl loopne imul inc int movsl mov aad cmp mov sub mov mov fnstsw cs mov loope es cli cmp ficom push inc xor icebp fisttpl js rcll call and popf xchg xor (bad) ja and pop and out and jno cmpb mov outsb out fsubs dec psubq data16 lcall xlat lods mov sbb fwait mov out (bad) xlat jae fwait mov sub cmp loope add out fnstcw cmp pop inc out ljmp pushf mov push or minps and (bad) gs mov or adc sbb sub pop pop inc sbb aad bnd lret lods jb dec nop xchg adc push cltd call fidivrl insb add stos jmp xchg sbb rcl mov add arpl movsl dec hlt add xchg fldl push pop push mov lods mov rorb inc xor fldt movsl imul cmpsb push movsl push inc cmpsb je scas std call xchg dec dec jmp mov clc push pop inc pusha (bad) movsl sub push test scas lods cmp mov push fadd (bad) scas popf xchg xor mov or dec jns outsb mov cmp inc xchg cmp jmp lea je call stos mov movl lea jmp call jmp jmp pushf lea jne cwtl movzbw movzbl mov pushf pushf pushl lea jmp aam mov es jnp inc js and adc jo dec dec lods jp inc and sub test fwait adc sbb in or icebp aaa mov cmc rclb push cmp or push cmpl mov pop lods rol es ja or xchg push stc jle int mov and jnp hlt pop sti lock sbb add int3 push add bts inc shr clc mov cmc jmp jl loop add inc sbb leave and mov lock dec mov or push inc xchg mov rorb jle add jp ss jecxz es jbe imul lods fs add je xor push aam int rorb cli sub xchg dec fbld xchg xchg lret ljmp rclb sub rcrl push dec cmp push xchg and jp xor sbb sub jmp stos push and cmp sbb inc repz pop int3 repnz stc (bad) xor gs jl (bad) out rcr pop aas add fidivrl jl rcrb xchg shr aas sar push mov jmp mov sbb mov in popa push jnp or pop inc stc insl movsl hlt aad or pop lret mov pop out mov sub push jno mov mov cwtl push dec popa cmp pusha gs add xor aad dec (bad) and pop lret jl xchg lods mov aam sahf mov rcrl push push std adc pushl jmp popa loopne lret inc jle pop scas out sbb and or mov mov dec cmpsl or xchg (bad) pop ljmp cli fbld divl je cmp nop (bad) push lret loope xchg lods sub dec js test loop js push dec xchg and xchg mov add outsb xchg xor ret adc pushf push lea ja pushf pusha call rol push sub call iret std loopne pop add call divb adc lock loope inc adc jnp (bad) sbb adc jne adc andl adc xchg push jl into dec pop adc psubusw mov pusha mov repz cmpsl pop ja test or mov cmp outsl sbb sub pop sbb add fisttpl repz mov in mov stc xchg jo or pusha adc das xor lock add repz punpckhwd popl sti sbb adc ds sub mov in fisttpll adc push cwtl pop dec sub adc pop mov jle,pn adc jecxz outsl out aas adc push and out push pushf adc or into jl (bad) adc adc xchg inc or sbb push xor adc push es xor insb jae xor push jle rorb (bad) fisubl cmc pop aas data16 sbb loop xchg sbb adc ljmp xor arpl je lret inc (bad) pop mov xorl enter sbb add dec mov add fwait test mov lahf jno jo pushf push js jp adc pop rcrb dec cmp xchg ret mov xor enter out adc mov inc or pop insb fldcw or adc pusha addr16 imul popf adc add loop jge adc inc jb jle mov or mov repz rcrb fnsave lahf pop cmp push in repz loope fdivr repz scas sbb push add out add or cmpsl xchg rclb lods mov add dec adc (bad) nop enter test sbb adc mov or push dec call mov or jo add lods inc mov mulb sub fldl decl push int3 adc or push test mov icebp adc pop loop inc adc shlb xchg in pop adc lds mull out std andl or adc pop and mov mov insl adc xor or or mov sbb sbb add adc lock leave push xor es xor inc mov (bad) hlt das ret add push adc inc popf mov cmc dec std adc (bad) mov push xor ficom push decl adc jbe mov in bnd lea test popf fnstenv or xchg daa pop adc mov adc rorl dec loopne (bad) xor xor add iret adc popf ja mov (bad) aas testb or in adc sub dec push ret mov sub xchg insb out jl mov aam pop in into pop or adc add inc cmp sbb fsubrl push int3 adc addl pop jno adc ss insb pop out cmp adc imul adc xchg and jecxz or adc mov xlat stos fwait cmp sbb xlat mov mov sti add mov loop pop fisttp xchg add out pop push push push mov xor jg jl adc push and mov mov add hlt or outsb adc fcoms mov inc jne rorl adc and mov (bad) fs (bad) xlat adc loopne xor inc xor push jnp cltd or cli int jo adc pop pop roll adc mov cmp enter adcb ja repnz cs cld dec mov jl movsl adc shl pop es repz mov sub push or scas sbb xor push dec adc jmp inc stos mov das (bad) outsb add add enter fdivs je js and xchg enter add icebp mov out (bad) push push pop sti test ret and std sub and cmp xor ja adc mov mull dec adc mov adc mov adc subb jl sbb cmp inc lcall fs jmp mov push mov push cli sarl bound cmp jl adc push xchg xchg xor or mov arpl into in add push or (bad) or ds repz nop push call xchg push adc cld push push inc cmpl notb mov stos adc repz add mov rcr pushf pop sbb or jnp or call shrb in lods xor mov pop mov mov xchg push int3 cmp fs xor adc insb ret push xor stos and adc mov jge daa rorl hlt insl and pop ffree jmp sub sub out sbb mov ljmp popa aam mov cmpsl inc (bad) aaa pop or decl pop mov pop and and or mov mov adc jle pusha add cli mov ret lret push inc cmp cmp add mov adc jns inc repz fistpll lcall xor fs movsl sbb mov test xchg stos mov add fs cltd add (bad) adc and sbb mov push inc mov fwait hlt repz xor sahf xor adc addr16 pop (bad) cmp adc ljmp push cmp xchg dec adc stc dec cmp cmp rclb pop mov leave push and sbb jne dec pusha scas in dec push cmp clc xor add movl inc js sub (bad) jno cmpsb pop cs fcoms dec adc jp out xor mov lcall pop add sbb or arpl xor int3 adc subl and in inc repz push jae rcll lods (bad) dec outsl add repnz cld xor xor insb xchg mov lret sub mov lods xchg mov mov push rcrl push or cmp fcoml cmp push push cmpsl jmp dec mov xchg jp jmp push test jg adc mov xchg cld or cs jne inc lock push push push mov xchg cs ret jnp push adc cmp xchg xor ss int pop out cmp adc (bad) aas int3 or add push aad pop adc jg mov xlat xchg mov icebp or lds push xlat inc dec jg xor rcrb sbb mov inc sbb addr16 adc (bad) inc mov push sub out and dec aas adc loopne out into jl repz mov lods adc push in inc imul and adc (bad) dec cmp int push mov push adc lcall js jo cmpsl adc dec pop xor pushf stc inc fisub xor nop test push cwtl mov loopne jecxz iret and fptan jb pop xlat ficompl shl jl xor popa clc dec adc xchg es mov sti icebp or xor mov inc (bad) push xchg pop inc mov rorb mov addb subl loop int addb aaa shr mov cmp xchg (bad) imulb insl mov lcall cld pop push mov push adc shl cmp adc int adc popf enter lahf (bad) cmp add fcomi dec push cmp inc lldt sbb push js arpl test in pop mov jns fcoml and or push jae mov fwait and add add in or scas stc jns flds pop xchg or adc xchg mov mov repz push or repnz jns mov repz add pop inc mov or and repz imul rol into lea push xor cmpsl dec jne push sbb sub daa inc mov inc push es xor fwait mov repz sbb ret or repnz push or sti pop sti xor mov sahf movb ret xchg data16 adc adc mov jp iret loop adc sub xchg cmpsl js in adc or jmp ficom ja dec int pop inc xchg xorb pop fnstenv std adc test add aas insl add dec and (bad) lods adc xor iret add dec push mov push mov sbb adc xchg fldcw dec jge adc jnp cmpsb (bad) xor enter sti adc jecxz and jne push adc mov pop mov orl mov jle sub cltd xor lds loopne out rolb out (bad) stc sub cmp pop xor add mov or dec and push sarl sbb (bad) lcall add movsl incl push push cmc mov inc add add or xchg inc jbe repz mov pushf enter fbstp xor push repz cmc (bad) stos inc pop mov iret cmp add daa add das js pop add pop mov xlat xor fs push cli dec add enter test mov popa and fs push and sbb inc out sbb mov or dec mov mov inc (bad) or in adc xchg pop lock ja sbb in dec add out test mov mov adc sbb inc cmp in mov jecxz lret inc mov xor pop push (bad) pop imul ljmp dec mov xorl inc mov lahf or rorl xor dec cwtl flds (bad) mov movsl jecxz or pop push out lds sub and outsl fimull xor jl inc mov mov xchg fimull rclb addr16 jnp push repz sbb dec loop push pop sbb into sub adc pop sbb (bad) push cmp repnz and inc mov lret cwtl xor add pop imul pop and sbb pusha mov push into push fstpl cwtl stc cmc ljmp xor mov addb out (bad) sti pusha mov sub (bad) xor scas lea xchg xchg ljmp gs (bad) xor or int3 stos pause stos mov scas xor imull jae xchg mov leave out push sub pusha and je insl pop xchg repnz cwtl jae insb mov push rorl mov cmpsb xchg xchg repnz andb sbb scas inc pop mov pop adc sub scas ja fucomip andb mov sbb push scas test popa jge mulb adc adc mov in sub lds loopne hlt loope jecxz cltd nop (bad) fcmovne or mov ror aam jo loopne and add pop xor pop or nop lock push outsl sub mov fcoms out out xor or and add add or mov arpl sbb inc adc cltd push mov xor xchg out stc pop add mov sti sub jge mov push es pop nop mov sbb shl test rorl aas sarb jge out and push call xchg and test push jne jae andl outsl insb lds add adc mov cmc adc push push adc shll mov xor in push or xchg les sbb (bad) push mov mov jns sbb popf pop lea pusha fwait in add adc fdivrs xor jno adc insl lea mov lahf loopne je or push or (bad) cmp mov lret mov adc enter out movsb aam insl ror es dec sbb add rolb pop outsl fdivl pop jo mov cs dec cmp test bound ss (bad) and cli int mov ljmp inc mov das sahf in inc testb pop bswap stos push sbb es or push aam pop stos sti imul inc adc into cli xchg push ror add adc or sub jl adc sbb lock mov fisttpll mov mov mov pop fs pop sar adc dec hlt shr xchg adc pop mov pop adc into out aas adc mov xchg xchg xor mov ja rcr pop subb insl mov push jae push enter (bad) fwait subl or push mov out push punpckldq cmpsl adc sub out mov mov add cwtl or mov out xor insl xorb punpckldq push or or sbb adc jnp subl aam mov stos int3 gs or jbe inc mov stos pop pushf aam ds out adc fsts pop mov lahf push imul sub lcall lret adc dec test pop repnz jnp outsl mov es ljmp addr16 adc push stos dec and add (bad) cmp cmp inc adc mov adc jbe div scas inc cmp adc sarl push cmpsl mov repz out push add loop adc mov adc xchg lods sbb jge cmpsl adc push mov push add and out aas (bad) loope and inc xor mov jmp cld dec mov lods adc cmp test adc lahf (bad) and lods orb bound lret push in subb out nop orl adc or adc add xchg mov in push insl lcall out push int3 pop add and add int fist or push cmpsl fiaddl arpl push out or sub xchg fdivp ss adc (bad) (bad) popf cmp data16 (bad) into sub jmp jne bound inc sub cmp mull loopne jb sbb mov adc insl pop inc adc in mov adc add push adc ficom xchg (bad) sub out je adc lcall (bad) (bad) jg mov outsl sbbl add adc mov xchg lea cli xchg insl pop or repz aam pushf adc cmpsb cwtl insb fldcw aaa mov mov jo and mov iret and add mov dec add mov or and orb or mov outsl add in rcrl les mulb jle lds add xacquire adc and cltd (bad) andps cmp fcompl push es add and lea jb fidiv add or add test scas pop sub pop pushf xor adc adcl mov imul pop adc jno mov dec je add pop add rcll (bad) or hlt add adc ret (bad) pop scas adc icebp iret aad pop insb adc sbb push mov add loopne push sub or iret jmp int lret mov daa lret lods mov aas mov dec add adc jb sbb mov jne lret and jo out mov adc lret pushf sbb adc (bad) iret and pop adc mov jnp out aaa xor les pop pop push lcall xchg out mov push in mov xchg push (bad) outsb and aam mov xor mov ret imull xchg fisttpll adc repnz add adc adc pop push pop sbb adc je jmp rclb dec pop or pop xor pop xor inc lea xor repz adc push jl loopne adc es cmpsb xor mov cwtl or lret adc add fs and out pop repz sbb pop sbb inc or pop das push stc (bad) mov mov ret loopne or fsubs dec xor pop cltd movl (bad) adc sub jle pop mov shlb sti sub sbb mov daa dec out jo in adc fnstcw add pop pop push xchg push test jo rcpps or sbb xchg mov adc out xchg push ret add ret adc stos pop mov lret ucomiss test cmp enter xorl xor ret insl adc repnz and lret push mov xor fldenv rorl jne pushf add mov lock arpl cld add mov cmp icebp out movsb add adc repnz xor cmp gs rorl adc dec outsb mov mov mov or adc pop (bad) xor push orb xchg xchg adc adc sbb mov mov jp dec push adc xchg push pop adc sbb add pop addr16 rorl inc xchg ja imul (bad) fucomi mov xor mov int3 movsb push (bad) jecxz adc lret idivl stos add mov test adc daa sbb pop or aaa in std mov adc popf repz adc xor adc mov adc es repnz sti xchg (bad) cmc pop dec leave jle xchg arpl (bad) mov (bad) and pop out movsb sub fwait push cld and jnp enter (bad) mov aas inc into add xor push inc cltd gs sub or mov pop add call adc pop push sbb mul xor xor out sub orb dec xor adc adc out cld repz xor push mov scas repnz push ss jge popw movsl lock adc pop repnz jp add aas adc mov loope cmpsl xchg adc sbb xchg mov sub cmp dec mov and insl jne lahf sub pop pop mov mov lea ljmp mov ds adc jnp cmp iret cmp cltd js jne mov sbb sbb mov lods out movsb pop push mov insb inc jmp repz scas loop insl sbb xlat outsl pop xchg sub cltd jecxz push daa in (bad) sbb cmpsl push mov inc sbb and or divb insl mov cmp mov stos in cmp js,pn sbb push adc lods test clc adc (bad) shrb adc stc push sub je add pop or dec mov (bad) xor lea in xor xchg setae sub jmp mov jno aas pop nop push outsl addl xchg adc or cmp cmc add adc test xchg jge sbb jmp adc inc mov and push mov adc mov stos mov repz cmp rcll mov or or sub sahf mov repz pop lods test outsb nop mov daa insl sbb pusha (bad) xor or dec (bad) (bad) out xorb mov je push xor scas bound push je inc sbb push fstpl aad aas repnz repz (bad) jecxz mov lret sahf and lods ret es pop add mov xchg fs pusha xor out arpl out cld sbb mov (bad) mov dec push sbb adc mov xchg std xchg push jne pop jecxz orl (bad) leave sbb adc faddl jb sti cmp dec xchg jns xchg call clc push ds gs nop lcall int3 mov pushf jno dec popa les fistl jecxz test cmp dec aas adc enter push popf pop push xor add mov xchg cwtl int push outsb add subl xchg movsb ss and xchg outsl inc fist (bad) adc in arpl decl inc add and adc test dec or adc int sub clc dec mov xchg imul sub adc lods add cmpsb repz push cs mov add add cmp adc adc fistl xchg hlt dec sbb in xchg sbb aad and (bad) mov rep xchg pop (bad) addl mov sbb lret cmp sbb adc xchg shrl jg (bad) lods dec and stc or imul and or pop xlat das sbb in xor call add mov dec xor je pusha pop pop inc hlt sbb pop pop add dec cmpsl or lods mov lar lcall (bad) repnz adc into xor push (bad) rcr shll leave insl rcr adc and xchg popa insb orl lods xchg jno inc or rep pop sahf jecxz repz jl mov xchg mov imulb aad out int3 in or xor call nop out sub pop xchg lods or lock dec lods loop or push and dec pop in inc mov cmp jp mov imul in adc push and mov sbb add xchg lods out inc (bad) (bad) push imul int les xchg js sub add (bad) icebp dec stos jecxz cmp pop adc add into mov mov add rorb push jne (bad) inc add das popf pusha repnz mov xchg xchg pop cmp jge out xchg lods lret jbe xchg xchg push jno adc sti enter or mov and cmp (bad) cmc cmp es inc xor push adc fidivrl jge adc inc jno test cmp (bad) add sub sahf adc imul lcall add test mov cmc enter push scas add out ret pop pop mov pop in ds jg call pop fisubl and dec adc mov imul xor cmp sbbb pop out out push cmp in (bad) adc and lods push xchg les out xchg inc loopne rorl mov dec adc sub mov adc hlt insb cmp fldl lock jl push sbbl es jp (bad) mov pop xor mov pop sbb adc pop fdivrs repz out (bad) or loope cmp (bad) repz aaa adc xlat (bad) repz mov add add fucomip adc jne xor icebp bound jmp mulb or call cmp in mov aad mul pop shl cs out xchg push mov cmp mov adc test (bad) aaa and adc adc jge xchg fstpl push sarb adc nop es lahf shll or xchg jno lret jae clc or mov mov pop sbb shll jne adc aas aaa xor inc or das repnz ljmp loope cmpsl cmp dec and jmp push movsb add mov lods movsl push out mov add xor adc or xchg arpl add sbb repz mov cmc push testl xor push jle scas pop adc imul push pop pop pop inc or loop push bound cmp stos out mov je mov ds pop and ret sbb add adc pop mov add repnz pop adc ret or aad cmp (bad) jecxz xchg mov or push adc mov repz pusha mov cmc add adc mov fidivrl addr16 das fcoms pop adc fist adc faddl test adc sbbl add lods test adc inc mov notb lret call mov sub push sub (bad) cld (bad) mov adc in int mov cmp pop inc mov cli adc repz int3 inc dec or mov jp orl test mov sbb adc aaa rorl mov mov or mov out fs xor loop in fcoml faddl jecxz dec sbb xor push cmc or add mov cltd cmpsb sbb ss adc and notl sahf fnstenv int3 shrl xchg and mov dec mov pop out mov xchg xchg shld loopne push hlt clc add bound adc test call cltd mov sub jp aas push mov repnz adc jns lahf adc jg cmp movsb xchg fist dec and fdivr adc sub lcall (bad) pop dec fcoms and pop add jns mov subb adc xchg or lret out sbb cli scas inc cmp call pop jne cld das adc xchg mov lret in (bad) mov xchg cmp pop adc fdivr iret repz cmp mov inc pop das in hlt or fdivp (bad) mov fwait inc leave inc adc sub push rcll jecxz jl dec mov and xlat push inc (bad) xor sub cs (bad) jo mov jecxz adc inc pusha (bad) mov adc repnz pop adc mov inc clc in sub stos mov pop mov push (bad) stc (bad) hlt scas pop pop cmp xchg inc xchg dec add add add push bound push xor in push inc inc call xchg and mov repz xor pop mov je pop popa push cli test ret push adc jmp rclb add mov and mov aas insb mov pushf push imul mov adc int fildl call pusha add pop push adc bound paddw dec push inc mov mov test jno pusha sub mov fistpl repz push cli jg inc cmpsb lea lock ljmp cs mov mov add sbb sbb rorb mov pop mov hlt test push xchg pop popf jo mov popa lds pop jae lret xor imul test add loope adc aaa mov and add stc lock lods inc pop cmc or xor jnp jo adc outsb mov cltd pusha fidiv mov pop (bad) cmc fwait cmp pop add pop jg push xor repnz inc xchg es int3 les mov adc pop dec push xor and insl mov fist mov sbb out inc (bad) out adc fstpl (bad) adc or (bad) xor mov sbb pushl pop imul mov and loopne daa sar mov out inc cmp xor or (bad) adc push cmpsl xchg mov mov sub addr16 mov pop popa cmp cmc repnz pop shl loope loopne je xchg and repnz das add rolb sbb add adc ja outsl inc xor std push mov andl out sti sbb jle int dec jnp jge pusha or push es repz outsl mov mov add inc xchg aad in xor imul xor pop dec or add adc mov rcrl imull xchg fnsave adc mov or fisttpl xor fcoml or (bad) sub sahf test pop cwtl in movsl mov lock mov mov mov pop adc mov xchg xchg in test adc mov repz iret rclb jg inc add popa push add adc lcall push push jns or clc jo iret jle std dec shlb mov in inc in mov lods add (bad) mov mov pop cmc add das jl mov int xlat loope xchg adc lret xchg and scas inc adc call stos adc or push icebp adc mov mov out data16 test das or push push (bad) fcoms mov add insb mov xchg nop out mov and pop push xor out pop dec and loope mov lcall jno dec dec mov adc (bad) mov test je or or jae or jne adc ljmp rclb pop ret push adc scas sub sbb aaa cmpl mov push inc cmp test out fnsave sub repnz adc int aaa stos fcmovnbe jge fldenv mov pop sub ds push repz adc arpl les xchg (bad) jge inc xchg and sti sarb mov les je fucomi das add std repz fisttpll roll pop loopne mov add adc fisttp jns mov test lret out mov lock ljmp cmpsl cmp mov pop dec and add inc (bad) addr16 outsb or mov xor jl sbb ret jae mov add mov sbb sub in add fsubrs adc jno pause jp jmp (bad) mov sub stos nop out leave ds jmp outsb int mov xor out aad int3 add int or in outsb jle push js mov ficompl add outsb push je cmp pop pop inc push inc push cltd jecxz hlt mov adc (bad) mov adc add push addr16 clc bound xor xor sub fnop es pop push lock adc lods (bad) (bad) adc xor sub and (bad) into or sub insb lods ljmp dec mov or adc aam cwtl in inc cmp popf pop cmpsb adc ret add shr (bad) test jmp sub and sarl mov in pop add std xchg xor adc xchg repnz or ljmp enter push aas int lds imul rcrl outsl loop add repnz and pop aaa out adc pop or and jmp cli dec dec mov nop repz stc (bad) mov lahf xchg mov and imul sbb aad cmp sbb orb mov ja mov loopne lret ljmp test adc sbb iret xor aad nop lret add push jmp nop pop and jbe xor dec sbb in adc repz and xlat push repz dec out xor pop mov mov adc push add out dec repz jb jmp stc mov and imul testl adc lea cwtl insb inc adc add xlat aam sbb (bad) popa or je pop mov xlat mov push xor add repz in lds sahf pop cmp cmp movsl or fstpt pop int pop js sbb adc dec xorl scas mov adcl ljmp (bad) sbb in aas mov ja shrl mov adc (bad) cs mov or dec xchg sub add std sarb add jnp scas mov sbb inc enter xchg jl sub sub push mov xor insl mov mov sub out cmp sahf pop push (bad) repz fadds (bad) mov inc jg pop sbb jbe jge mov loopne fnstenv pop lret inc lea or popa cmpsb rcrb insl pop inc mov or add inc add push aam jb xor mov call inc mov jb (bad) jg cmpsb fnsave mov lret loopne mov xchg jp push js xor (bad) bound mov pop mov mov mov into es xchg jmp push std push inc mov adc push cmp dec pop icebp inc adc aad sub lock mov or or out push and pop incb insl push sbb push push jge pop bound push pop lahf inc call hlt push xchg (bad) adc sarb push pop rorb aas jmp cwtl int3 mov aad out mov jno sbb xor gs mov adc mov fs out sbb hlt add jae xor out popf inc adc subl or imul ds loopne sub adc (bad) mov scas adc inc xor scas or and dec leave add cmpsl orl jne loopne (bad) push in sbb push dec jmp rcll adc hlt inc mov fisubr xlat in sbb (bad) and (bad) popa inc pop imul cmp xor call bnd scas push pushf sbb pop sahf dec push mov inc cmp adc mov test xlat adc mov or sub dec arpl add ljmp pop (bad) outsb mov pop orl hlt or or aas cmp lea or push mov jmp (bad) add outsb inc sub adc sti push dec aad mov add add mov lcall mov cwtl pop hlt pop cwtl sbb add xchg nop cmpb pop outsb mov sti mov repz (bad) pop jbe push sbb sbb or sub pop sub cmp inc push cld cltd mov adc pusha and or repnz cs pop jecxz xchg jmp jmp pop fmuls outsl add or sti jle lcall dec adc mov sub insb adc pop xchg dec sbb repz adc fcoms fimull mov in repz mov adc das fdivl jae jo mov adc pop popa aad jb adc jle imul pop mov jl lock fldl in xor xor sahf cmp inc push pop aam ja adc cmc test push push dec adc cwtl mov xchg push adc out sbbl adc add and outsl fisubrl popf push and stos adc push test jecxz cmp lcall mov fdivl in inc and insl adc mov clc dec aas pop shl fmull dec or insb push pop (bad) leave and mov sub inc loop push xor or ljmp nop adc push xchg jge adc aas add repnz adc xchg adc pop add adc mov (bad) adc inc adc fmulp adc loope cmp pop repnz inc aas stc adc cli sub rep xor adc push xchg outsl in sbb aas adcl fwait stc xor out xchg sbb sbb lds rclb xchg xor adc daa adc xor aaa lock lock repz mov bound aam adc adc inc adc clc sub add xchg lods (bad) cltd sbb repnz xchg aas out jns adc loop adc jl cmpsl aam adc hlt popa push jnp (bad) mov lret push lock test mov loope push push mov xchg (bad) mov sbb sbb xor xor mov pop jmp test xchg sub divl add pop lahf sbb (bad) sbb dec insb lods test inc adc lods pop adc test adc out add adc mov test add dec push adc fwait xor jmp test (bad) (bad) fstps adc push pop pop jb adc or pop data16 adc dec xor adc ret les adc aas pop sbb icebp dec scas outsl sbb (bad) dec mov shrl adc scas pop sti es pop xor fistpl sahf cmpsb in dec fimull inc rcll pop lret rolb mov inc pop mov rcrb leave fs adc mov insl imulb cmpsl outsl pop mov add in popa les lret subb jae mov cmc and popf add aad sub repz mov or adc lret mov sbb test xchg pushf imul or outsb nop ffree adc inc xchg adc dec adc rorl call adc adc xchg in ljmp jb pop and sub adc pop stos xchg adc int3 sub cmp out scas adc movsb push adc adc sub push push mov sarb add mov adc xchg mov mov shrl out test sub cmpsl ljmp iret int3 adc sub adc out mov out dec jne xchg sbb fnstsw adc mov fiaddl mov xor ret or mov jnp cmp adc jae gs xor mov jl jp inc (bad) cltd adc pop inc dec pop cmpsl lahf adc cli cmp push add enter push adc mov mov outsl mov movsb test orl xchg cvttps2pi cmpsl arpl push adc stc outsb mov dec cmp sbb pusha mov icebp mov addr16 and dec xchg lcall and aas iret hlt or adc pop mov dec and mov lret xchg mov adc jo icebp sbb or add mov out aad adc pop sub aas sbb rcr jl das xor xor sahf xchg or push idivb adc cmc pop fist mov aad pop and pop sub addl inc jnp adc lcall mov call (bad) fcomi push push adc mov mov adc (bad) mov (bad) fucomp adc pop pop outsb add pop adc sub mov adc mov repz jb test or mov adc add outsb mov call or (bad) aam inc dec movsl adc xor sub mov dec and jle (bad) outsb arpl rcrl xchg movsb sub push adc mov fidivl cmp mov lock pop fwait xchg repz add push or sarb scas scas xor shlb xor int3 sbb and inc and cmpsb jnp or jmp movsl adc mov rclb scas jl add into sbb dec add pop xchg repz push cmp sbb repz xor add int3 (bad) repz push cmp popf jecxz add (bad) ja xchg mov dec xorl lods cli or icebp call adc mov and xchg adc fsub mov and push fdivl and icebp lahf cmpsl (bad) xor add lods (bad) xchg jp lods and iret rolb loopne sbb adc mov lods sti adc iret insl rcll mov cmp and clc mov inc push adc pop fs fdivl mov ljmp mov mov movsl jbe push lds jmp pushf inc sub mov sar adc mov sahf jns push adc call mov push cmp sete jno pop push lods mov mov push or pop (bad) dec cmp dec fild fabs cs and inc mov jecxz jno mov stos loope or jg ficompl imul aaa add mov mov adc (bad) outsb ljmp add sbb mov stc adc pop xchg outsl mov insb mov xchg sbb adc stc dec jae loopne xor sbb js xchg sub div ljmp mov pop or out adc pop mov adc loop adc data16 adc fstl add je movsb or or xor jo imul cmpsl dec jno pop and les pop nop out or adcl fs test adc lahf out cvtpi2ps mov jge pop dec (bad) sub fcoml add mov je xchg mov fistp cmc adc loope (bad) or lea popa mov add adc sbb scas cmpsb dec mov xchg fldcw movsb jp int3 add shlb adc mov leave cmp add mov rorb jno popf daa inc addr16 dec xor imul insb xlat scas xor stc mov out mov dec mov nop pop add pop adc adc jb xchg dec jg xchg push sub ret jecxz or (bad) cmp pop xor jge setp not cli out mov push mov push incb hlt add mov (bad) lret daa adc inc jb xor (bad) sub adc adc sbb std jmp mov xor mov mov add cmc mov and lcall popa incb jno mov adc leave sbb jno (bad) mov out test add sbb outsl adc mov mov mov pop insb dec out adc out ja (bad) xor movsl adc xchg (bad) mov adc in call mov mov cmp aaa nop sbb mov fsubs lretw es rep adc mov mov xor and inc in add or popl cmp fnop jg mov cld hlt pop adc scas add ja sbb sbb or mov sub sub rolb xchg adc adc stc mull adc popa mov or inc cwtl or xor imul lret ficom ss adc imul and cmp mov sbb fcomps repz in mov jmp adc testl nop imul xlat pop iret fstl mov dec xor lods xor push mov add pop cld mov lcall pop adc xchg outsl subb sub xchg push xor xchg mov jne (bad) jbe add in lods dec test pop pop rcl into jg aas (bad) add repz adc arpl or sbb cmpsb xchg test mov mov xchg (bad) pop adc bound adc mov sbb leave int ret mov punpcklbw (bad) pushf xor mov cmpsl push push and mov fsubrp les xchg insb aad xchg test pop xor hlt loop cli in ret fnsave mov mov insb adc jae or adc js adc loope xor jle push aad adc adc and xor inc dec mov repz lods jecxz pusha (bad) cmc fwait lods or (bad) adc adc sti push test add fwait aam sbb push daa jecxz sbb adc ret mov mov shr jnp pop adc push add xchg daa cwtl add repnz movsb push mov inc jmp ds dec jle xchg lcall and mov cmp adc adc xor ficom mov popf sub push imul mov movsb push and int3 sbb push sub mov pop je outsl (bad) adc and ret rclb and add pop mov cmp or sbb dec push test enter add outsb xor popa outsl aam rorb adc daa adc mov adc (bad) or inc dec in (bad) inc pcmpgtw or add adc dec inc stos stc sbb in add adc jno push xor (bad) pop adc in icebp out adc jmp mov pop fldcw rclb shrb mov push enter clc cmc sbb adc pop ret out or fwait xchg (bad) aas mov stos aam jecxz outsl in movsb js sbb jbe pop cli (bad) dec aad call outsb pop push adc mov or hlt xchg sbb scas leave pop mov dec repnz cmp in push adc into fstl pop sub icebp mov pushf jnp jmp ljmp stos push ror pop inc insb cmpsb test mov pusha fstl or push (bad) mov sarl add pusha (bad) cmp insb adc out jnp stc mov dec inc xor sahf add in and lcall mov test mov xchg repz sarb js pop movsb push addb add into xor js and hlt out sub mov and pop adc adc sti sbb and jno mov nop and aas mov mov mov gs insl pop add int3 pop adc add adc pop aas cmp adc push out mov add repnz adc mov xchg (bad) enter test xchg insl mov pop sbb or sub dec mov lock sti mov fldcw ror js sub and nop enter into lds arpl loope int mov mov outsl sbb adc ret fwait add pusha adc insb in push popf mov cld jno insl add adc repz jbe adc out or cmp mov mov sub lock and cltd adc xor sub inc movsb movsl push mov cmc adc xchg inc push inc pushl in test popf pop (bad) sub decb addr16 js inc pushf xor pushf dec xor repz xchg repz mov push jb adc aam push imul cmpsl cmp in mov cmp adc dec mov mov sub jnp arpl iret or mov adc testl adc mov mov gs mov jmp arpl clc mov mov mov sub adc lods dec stos sarl cld test sbb cmp pop fwait loop mov push jg in mov (bad) int inc or stos or leave mov and ret adc mov xor and pushf adc mov out dec repnz cmp xor push or addb adc leave add jb mov fisubl jmp mov inc or jbe adc jns push orl or (bad) sbb sbb into hlt in xor stos mov push out loop sbb add scas mov adc or icebp lds inc adc out cmpsl rcll mov and cmc xor adc cmpl ret incb mov adc sub out shrb nop pop sub (bad) rcrb jp xor daa adc and mov std add mov adc iret lret jl into rcr lods cmp std jmp mov sub ja mov je or dec or adc testl xchg int adc pop mov repz test and (bad) fmuls loope mov adc push dec sti mov and (bad) xor inc adc stc push push adc je lret push fs mov or cltd movsb adc pop aaa adc and jnp imul xchg and imul sub adc aaa sbb mov pusha push ftst mov fdivrs mov push mov aas (bad) push mov lret inc push repz dec fbld (bad) adc xchg or aaa les inc call scas cmp shrb inc daa lods or push adc les sbb adc jmp push fimul fstpt add push adc imul sarb test (bad) and push ficompl out ret adc out sbb inc sbb add adc addr16 jecxz inc sbb in mov pop enter pop push jmp adc xorl fcomps leave int jb inc mov lret jbe popf loop mov cmp (bad) int in push repz imul es hlt sbb or mov in dec mov sub stos dec jmp jbe outsb in fsubs mov aas inc adc push arpl out jne cmp ret mov and add and test inc loop int3 sbb adc dec shrl add repz sti and mov js loop je lods roll mov adc xchg movsb adc push jb mov pop fcomip lods out mov and mov cli push xor push push or add out lds int3 dec les (bad) out adc cli es pop mov outsl mov inc xor sub out adc mov adc xorb repz sub jne xorl vorps test (bad) jnp inc cs ss fldenv rcll into sahf mov push pop in xchg aad cmp mov jne into call xchg mov pop rcrb mov fneni(8087 test dec cmp sbb shrl xchg or xor adc xchg dec add xor cld push call loop jl sub push out sbb js leave and adc mov xchg int cmp or push cmpsb (bad) add (bad) mov add pop test jl ss jno leave std sbb in jle adc sbb adc test pop ljmp mov cltd adc scas xchg mov popf jbe test mov lahf aam mov jmp hlt rorb mov out fs push ljmp add icebp adc cmp lea mov push les test pop pop dec jae bsf mov rcrl fs arpl rcll (bad) repnz out mov xor or xor adc jne pop adc out outsb add popf ficom mov mov (bad) adc mov (bad) repz loopne and xchg stos and and in inc pop aad push repnz dec adc aas lds dec jg (bad) loope adc push xor cmpsb imul cmp mov cmp stc mov xor inc lods or dec xchg hlt lret jb addr16 and adc mov push and adc jo test (bad) fsubr pop loopne mov or data16 mov fs add outsb sub cmp mov fmul lods adc repz jbe or xchg lock add out adc cmp push (bad) lahf sahf arpl dec push add fisttp dec int3 fbstp or mov mov lret or rorl inc xchg xchg mov into pushf mov (bad) sub dec or outsb in adc push add adc aam mov repz cltd mov movsl sub add inc sahf repnz out push jle divb imul adc dec cmp adc mov push xor fwait adc xchg arpl sub cltd inc and fnstenv sbb pextrw pop js fsubrl add aad or push ret mov dec cld xchg or sbb adc or adc xor outsl or in cmp aad adc int daa inc insl hlt and negb loope sbb int3 out inc xor sub cmp mov jne hlt adc push test mov cmc dec and mov sti idivl xor mov xchg pop jg jb and nopl hlt mov insl mov mov test mov adc mov pop add push rclb dec sbb cmpsl imul icebp pusha adc mov adc adc xor stc adc pop in xchg test sbb cmpsl jbe decl je loopne (bad) xchg (bad) push jmp pop xor int3 cld adc jns push fucomp lds fidiv push sbb es nop cwtl mov mov and mov xchg mov or jle adc pop imul fstpt aad mov xlat xchg sbb (bad) popf mov adc xor cmp mov bound in es scas imul out mov fmuls and or rep mov jmp jge outsl aam mov aam fwait rolb xchg ljmp xchg cmovns push nop mov cs add adc in mov out add shlb gs test or in jl mov adc sub fisttpl pop insb fistpll iret adc push sbb mov movsb test xor hlt (bad) xlat das add call fistp jnp push push jge arpl sub lea lea push push fldcw mov pop fucomi sub or shr lock mov adc stc jnp out adc lcall or sub notl adc das (bad) lret jl into adc jae pop jnp out divl repnz sub or mov subl iret test xchg push xchg sbb pop imulb mov addb into jp pop ljmp repz jnp test lock in dec imul xchg cmp pop or xorl lds cwtl mov and or jno or jns pop sbb push or addr16 xor xor cmp dec jo mov jge or sub popl and cmp push mov enter int xor imul xchg mov loop mov ret mov int cltd pop cs xor rorl imul xchg (bad) sti outsb sahf push lock lahf xlat or jmp jp ds or pmulhuw cmp lahf sarl jne add loop adc jno push mov mov test repz and nop push sub jb xor and sahf scas push (bad) mov testl mov mov pusha ret in fs sbb sbb dec cmp xchg data16 mov pushf stc movsl fs push fstps xor adc or or out jbe jg es stos cltd push xor dec push or pop test rcll cmp repnz add adc mov pop int3 gs cmpsl rorb imul scas stc test add xchg mov sub out push xchg xchg ljmp jmp jb xchg or or mov adc cwtl push pop das mov mov dec imul call cltd sub dec pop out dec mov mov push dec femms (bad) and inc lret sub shufps test repnz ret bound (bad) sbb fabs mov jns jnp push push or push bnd dec rorl jb fwait decl mov jge gs (bad) andb subl inc mov aam repz stos scas sbb inc lret lock or xchg pop sbb mov xor loope call and cmc cmpsb les nop push in (bad) xchg mov push test (bad) jle push and daa imul (bad) pushf adc lods fistpl repz or (bad) notl aas insb and or test pop outsl xor xor xchg stos call rcll into cmp inc mulb bound mov pop add add push adc das fdivrl cmpsb adc outsl add fldl je cmc dec int or cmp xor mov xor mov (bad) jp and lock mov sbb push stc mov or jecxz and cli repnz cwtl shl adc into les mov sbb pop cmpsb outsl cmp addr16 pop push cld (bad) movsl sbb add aad dec mov imul add mov jle cmpsb dec pop xchg and xchg aas mov rep push icebp lret mov clc cmp cmp dec and mov lret add out out pop repnz clc mov daa jne aad add call xchg bound cs sub ljmp test repz xchg dec jle out out fsts mov in jg add (bad) add add mov in (bad) jno (bad) adc in scas push mov push cld adc jp and sbbl insl movb mov inc pop sub bound (bad) mov adc (bad) jnp fsubrl imull mov sti sbb ret scas inc dec repz cli into mov mov sbb push sub sti iret or mov hlt sub cmpsb fdivp push orl loop (bad) and inc bound adc push lods sbb in xor bound dec xchg lret inc xchg addl repz aaa mov bound mov cli xor adc jnp inc jge xor ret orl or mov xor add add xor cmc adc sahf xor pop push lods iret je ret std dec inc test inc push (bad) pushf add repnz add andl mov mov and out pop out xlat stos add xchg or xor mov mov aaa adc mov mov xor loop cmp hlt or and xchg push imulb insl adc mov mov adc xchg sbb cltd xor add sbb aas lods lock in orl sub push add popl lahf popf or repnz push int inc (bad) movsl jecxz int inc nop xchg test sub pop mov adc lcall cmp mov pop stos or cwtl das leave mov or adc popl push adc ja or in (bad) fldt scas (bad) das ja hlt sbb iret lret mov pop out bound mov rcr rorl movsb fdivs shlb ficoml rorb xchg test push daa mov inc xlat aam in xchg movsl cwtl cmp into andl inc adc outsl sbb push push add xor lret xchg jmp jecxz adc loope xlat push mov stos sub mov and sub mov fisubr sti mov ljmp mov mov sbb test or (bad) mov pop xor xlat jecxz shlb or lock out inc sbb or add cmp xor push dec mov adc pop outsb xor cmpl mov shlb (bad) mov lcall pusha sbb adc xor mov jl mov int3 pop pusha inc jecxz dec call dec jmp into xchg adc nop xchg sub push (bad) mov pop test or mov test add lea (bad) pop jbe test or pop add in jbe sti jo cltd or xor mov xchg aaa movlps popf cmp int (bad) hlt mov sti out into aaa (bad) lcall inc sbb lods cmp xchg stc mov jp jne push jne nop inc popf mov imul aaa into je xor neg xchg mov mov jns hlt or mov jle jno adc cltd sub and cmp mov jl mov gs mov jnp inc xor adc mov adc (bad) sub out je jmp es test sbb xor int dec into adc (bad) loop repnz mov fwait dec out dec add adc mov push inc rolb fsts rorb movsl pop or xor js ret orps jp mov pop (bad) adc scas jne call pop rcrb lods push fsts leave (bad) shr and repz testb sbb adc mov test or cld in sbb mov ljmp cvtdq2ps shrb adc popf jmp pop testb jecxz push jp cs pop mov mov mov jne stc jne add test xor fstpl lods adc mov popf push movsl jnp xchg test adcb fmull dec xor stos mov mov arpl mov shr jecxz outsl pop xchg fwait sbb push jae push (bad) lcall xchg mov sub xor in in scas adc mov push stc mov (bad) xlat adc adc and ss js mov inc lahf int cmpsb xor pop push stos fimul or cwtl dec out jno or sbb (bad) repnz es push jne cmpsb add repz xchg cmpsl popf sbb in push sub outsl adc cmc jns cli in mov push les stos add dec jecxz (bad) (bad) movsb adc mov and fisttp pop jae push xor add cmp adc out lock push inc loop adc mov aam movsl push dec in jge mov dec (bad) dec pop pop or push sub or lahf adc lret add mov xchg mov ds jmp mov cs inc mov add push cltd cmp fidivr hlt test out xchg push setge push out sub or jecxz fildll mov or sbb xor xlat orb ds push clc mov inc repz add fstps fmuls ret or xchg adc adc clc and adc jnp,pn jae sbb adc addr16 mov pop int3 cwtl les aas insb vcvtss2sd sbb xor mov sbb cmc enter pmaxub cmp xor xchg adc repnz stos dec mov push in mov iret push stos or pop insb jmp ss xchg mov stos add dec aaa push cld adc pop jne aas mov mov pusha mov dec loopne fsubr out cmpsb push outsb push adc repz inc cmp adc jmp push out mov dec push cld daa adc push leave es arpl in mov test data16 packsswb sbb jbe cmp adc dec out rorl je cmpb fwait mov push lds push and movsb adc test sub insl out ss in dec xlat cld or fdivrl mov cmc inc mov inc test addr16 ljmp add jo mov fs lret adc popa sbb adc mov lahf mov stos in cmp aas std xor sub insl dec mov (bad) jnp mov cmp das xchg adc lds cmpsl inc aas (bad) mov cltd shlb out lea loop pop cmpsb sbb push mov sbb adc adc adc repnz mov mov add jns movsb cmp or mov mov scas fs cmp adc dec lods imul lret sbb inc js and out sbb cmp push fiaddl pushf imul (bad) jo lret mov and mov jae xchg sbb jne int mov adc std (bad) pushf mov addr16 mov sub rcll sahf inc nop aam push test pop mov lds adc repz gs mov or ljmp mov callw dec fs decb repz jne xlat mov (bad) xor push iret pop and mov adc sbb jo xchg sarl rol or and adc jge (bad) (bad) rcll push push push adc jl dec insb pop xor mov pop add pop out lcall xorl icebp cmp cmpsb daa sub stos mov (bad) jg adc pop mov mov push jbe movups mov jle xlat mov adc pop dec ss adc frstor mov sti scas daa dec pop add cmp les push inc xchg loopne dec add popa push inc fcompl adc lret sahf mov sub push adc ds pop rcrl int adc push xorb cltd jae adc popf mov push ja sbb stos idivb insb mov push (bad) mov repz fildll push pop mov daa addl jnp sbb and cmp dec push add es adc pop das lcall les pop pop cmpsl xchg pop lea push sub xor fdivrs (bad) gs sub sbb (bad) jmp stos mov jecxz and out push ss mov pop sub adc mov xor sahf pop adc dec sbbb or mov add adc push pop jns pop sub repz loope out lods fcmovb mov gs jbe in or xchg lds stc push pop dec pusha addr16 inc ds adc (bad) popa shll sub int aam xchg adc fdivrp iret mov adc mov mov movsl pushf (bad) adc mov in pop stos jbe adc fidivrl sahf xor ja rorb sqrtps mov or aad mov sub xchg in lcall ret js (bad) test mov push and sbbl out (bad) jno mov pop adc push test sbb out adc out daa xchg outsb fnstenv add fimull cmpsb dec imul xchg fcoml xchg stos pushf ficompl mov pop push arpl and xlat fimull les cmp mov insl movsb jecxz dec jge (bad) rorb repz pop (bad) mov mov mov adc and mov insl mov add mov or xor or fucomi push les clc sti add xor inc mov out jmp ljmp push mov int adc xor stc pop sbb and adc sub in mov xchg insb xchg lret rsqrtps sbb enter xor aad mov xor fidiv xor inc mov and or mov adc mov cltd adc stos or repz (bad) stos sbb sbb aad stc push cli int push sbbb mov lfs mov (bad) mov cmpsl cmpsb adc inc or rep decl cmp push fsubrl jl adc ja ljmp nop mov mov (bad) out pop rcll jecxz jl cmp adc xchg push cmp jns,pt repz and push xchg and mov lds adc add in stc scas popa (bad) mov and popf hlt inc jecxz stc dec cmp push fnsave (bad) lretw lds dec ds or je mov lcall repnz daa mov push mov inc in inc mov fldenv xlat fwait into (bad) adc push xor push cltd lds inc or pop cmp loope push (bad) or and push inc xchg xor add or add stos dec mov out lahf jo int3 lea lret mov iret test ss adc push out cmpsl inc push push add sbb (bad) lods inc mov fnstsw xchg pop mov dec les shlb sub pop iret add dec cmpsl push adc xchg ret pop mov int3 sti push push aad jns not sub fldcw (bad) push or iret jle rcl aaa in dec ficom int3 adc mov sbb mov xlat insb or or sbb outsb jecxz rcrb data16 pushf xchg rcll or sbb pushf xor and or in repz jecxz adc push aam push repz xor stos push adc (bad) xor push adc sub outsb mov rcrb adc jmp adc jo outsl cmpsb pop mov add adc call in mov ljmp addr16 (bad) adc and cmp mov lret xorps pop jmp sbb movzbl add (bad) and jecxz bswap orl xor shl or mulb cmc mov xor jno jmp inc mov adc push fmull cmp in pop push or adc mov out out jns ljmp sub movsb fidivl add jns push adc lret mov nop mov jae pop mov cmp mov adc outsb xor aaa pop insb push lea add cli ss dec cmp jmp shlb sbb cmc xchg adc cltd dec arpl fbstp call sub lds cwtl jle repnz pop lahf dec xchg orl mov hlt xchg xlat (bad) pop test inc dec add adc lods ret cmc hlt (bad) repz cmp fs mov adc cmp sbb jns or add adc ja sahf xlat jmp inc adc fsubp fildll xor xchg jecxz cmp adc sub jge pop inc and xchg pop add jno push jbe je packssdw adc cmp insb xchg or push aad xorl mov out je icebp (bad) jle movsb push bound xor xor add out leave movb rcll mov in cld mov push insl add in cmp js jle lock pusha mov add or jne fadds push daa repnz inc shrd inc fucomip push mov xor cs or lahf in pop psrlq lock (bad) cli leave outsb add adc in mov xchg xlat dec sub inc pop lea adc adc dec jns aam cld test lea in sbb movsl dec sub inc mov adc (bad) cmpsb sahf jle add push add movsb or xchg or xlat adc jp gs jb adc loop int jg mov repnz xchg (bad) and inc mov push leave nop gs outsl add adc and aaa repnz add inc xor or (bad) je icebp xor repz sub ss (bad) das pop adc scas nop push movsl pop and insb pop adc push jnp xor push add push push xchg lcall adc in (bad) lock mov cmp mov pop insl sub adc xor movsb adc loope ret mov adc cmc icebp pop sub cmpsb pop push sub bound pop push add into adc pop jmp ljmp into mov loope sbb paddd mov (bad) aaa loope xchg inc adc dec aad cmp pop fs cmpsb ficomp ss add repnz cmp test dec and and addr16 outsl xor mov add and or bnd or sub test bnd push pop shrl dec push xchg push cld jns cli mov xchg mov inc pop jb shl sub push (bad) lcall mov xchg lods jle mov push and loop cwtl lahf mov mov lcall or dec sarb out loop mov icebp adcb and pop sub addl jp jae mov push popa ljmp test (bad) enter aam jne mov into push push xor sbb and or roll dec dec xchg and rcrb pop sbb test dec loop fcoml (bad) pop push adc xchg in jae mov xor sbb xlat xchg outsb rol push jae mov jnp fs push sbb ja pusha fcompl cmpsb mov test ret pop inc jmp mov pushf jno mov jmp adc imul imul lcall insb adc out loop call jmp ret pop xchg gs and pop xadd mov in push outsb push xlat xor nop mov mov cmp pop xchg adc orl out jecxz pushl out inc mov jb mov or imul shll dec push xchg sbb mov fwait movsl sbb stos sbb lock cwtl lods jg enter mov (bad) int lock leave xchg fcom out (bad) imul lret push fiadd adc adc ret or je or cmp or pusha (bad) mov scas fstl aam addr16 lods hlt repnz sbb xlat pop push (bad) sti adc pusha sbb mov xor test xchg sbb js repz xor sbb mov adc jge mov sub out adc es pop jb add sbb inc add sbb in fsts xor or adc js fdivl cmp xchg cmp int3 xchg (bad) mov xor cld fimull xor pop cvtdq2ps repz je mov pop mov jno jmp das pop mov loop int and out sbb cmp mov lret jne cmp addr16 pop push or out sbb push out lcall and push xor popf pop and dec jp inc cmc in jle in inc jg push loop jno mov dec je sbb jg rcrl push sub and push add add or pop insl in jno lods aam stos add mov xchg loop xor or in mov or imul adc adc cmp push or or fcmovb stos jb out mov fildl dec xchg pop xchg dec arpl stos idivb cmp adc jle call adc add sarl adc pop data16 cld xchg lret push and xchg out movsl pop adc ja cmp dec cmc repz jns ljmp lock into out push outsl repnz pop or sbb aas xchg daa shlb cvtpi2ps mov addr16 sub xchg adc mov inc addr16 fsubr sub mov ja das ret add subl adc xor adc dec outsb es push ljmp push daa movsl int adc pop mov jle test adc or sbb dec aas call cmp pop pusha dec adc jle cmpsb pop sub dec outsl leave ljmp sbb aam lea push cwtl sbb icebp inc std add or repz mov mov popf jo jg addr16 mov push adc add xchg (bad) fxch dec mov sbb jmp das inc lea (bad) push insb xchg jle test mov adc push dec adc xor sti insl mov and ror mov dec fcoml jnp sbb in sbb jbe push test scas adc std sub sub stos es push mov icebp cmp sbb loopne in (bad) jae xchg sbb lea mov pop xchg int3 pop mov sbb xchg arpl add lods repz call mov leave jmp in xchg jno pop jbe stos test imul jne ds fsubs mov (bad) hlt add daa (bad) adc cmp mov dec orb adc dec pop adc sub push sub test add mov push repz xchg fcmovnb adc pop lods les insl adc mov ja sti (bad) popa or nop insb cld or inc addr16 outsl xor aaa inc jecxz or dec bound xchg int iret jmp hlt jle and pusha mov mov push pop dec mov icebp shl sub lds sarb loopne cmpsl adc repz mov pop insb (bad) pushf scas jb mov dec adc call inc mov sub push js (bad) hlt cmp imul push xor xchg call nop fmull out movsb (bad) and or lea shlb outsl push dec out add sbb or push pop or jl mov imul daa das mov paddusw movsl je adc jnp mov mov push sbb xchg test xor and mov lea sahf sbb sub adc das add jb pop mov in add pusha lahf fist xchg sbb loope aam ret add mov mov lahf xchg and adc add jg push jbe jp test adc gs sbb xor inc mov mov xor mov test push stos or or sti adc cmpsl push adc inc xor xchg pusha (bad) lock int3 pushf sub push cmp and lret dec incl push inc xor or push sbb cmp push fistl xor sbb or or cmp movsb (bad) cltd pusha mov sbb in cli mov adc ret movsb sub xor adc push add fimul mov imull loope add adc cmpsb pop mov dec lcall addr16 into sub or ficompl push adc sbb inc (bad) adc inc sbb adc cmp and push or mov push mov mov xor cmp and mov jp (bad) adc iret out adc in aaa add loop xor lcall mul dec adc idivl adc into mov sbb sti adc adc and mov ja sub cli add repz pushf enter or popf adc mov stc sbb push jb (bad) mov sbb lahf xchg cmp mov popf inc mov stc pop call push push out repnz mov adc pop xor mov jge fiadd stos add add push sub pop push popa adc pop xchg popl pop xor pop jo call adc xchg es cmp push push pusha pop icebp pop enter jnp adc pop mov mov mov adc int aas push pop hlt add adc (bad) movsb addr16 adc fdivrs mov cmc pop adc gs insb pusha inc adc fwait dec in stc inc jbe adc xchg dec lods pop mov gs cld (bad) cmc daa xchg mov adc (bad) jne insl inc pusha sbb je adc dec jp hlt sbb mov xor lret push imul sub insl clc mov add out sub lods fcompl repz out sub cmpsb out js scas and inc cltd mov mov mov jmp shr push push and int3 cmp imul inc into sub sub or jmp mov je sbb test rorl int3 and add jno test adc in jle repz and lcall imul repz pushf dec or inc xor adcw adc stos pop mov out imul bound jp (bad) popf loope out stc and push pop in in rcrl mov fldenv mov stos xlat imull mov and loop ficom pop (bad) jecxz pop fisubl pusha adc (bad) push xchg (bad) incb gs lods rclb xor sub inc rorl mov jno sub sbb adc aam addr16 add jecxz mov mov or into xchg out jecxz inc mov cmp pop sbb and jns les xchg jmp jge mov (bad) xchg test mov subb mov testl and adc das bound push (bad) aas (bad) mov pop and or jg cmp imul xchg stos cmpsb cld loop rorl lahf inc ja sub inc xor sub adc pop lahf and outsl and sub mov pop nop cmpsl aaa sti xor dec stc adc xlat js mov (bad) sbb cmp cs push leave outsl mov outsb push jno aas dec xchg test sub adcl stos push cmc in push inc aas in xor push xlat mov sub jb lods mov je cmc adc (bad) daa lds (bad) or ds mov leave outsb dec xor pop push (bad) out pop xorb mov ret mov xor mov repz and shr xchg lods pop or jle hlt mov mov mov inc lcall sahf pop xchg dec jle int3 add ss pop add lea (bad) mov push adc or xchg adc pop add xor fdivp add imull xor sbb mov pop xchg out cmp inc mov mov sub pop loop adc repz mov push push int push mov adc and testb fstpt jecxz dec repz rcll (bad) xor int ret out cmpsl cmp (bad) lcall inc mov mov push sub pop in aam xlat lock js jnp cmc and cmp mov mov xchg and lock stc dec mov adc adc inc mov dec lds lret add pop push jno add stos test push out cs dec stc sbb mov xor (bad) push xchg mov in pop jecxz xor jo or fstps cmp xor cmp jle jl xchg js cmp sbb sahf push and hlt cmp dec imul bound ds lahf aaa push and and jecxz jo shl push jl add test push in cmp xchg xlat add push sarb fsub sarl xor fiaddl je mov push jmp sub adc jo push pop push repz (bad) and inc roll xchg pop sahf xor movsl add std adc nop mov dec insb mov pmaxub xchg or or (bad) fadds neg adc in or ret sbb sub or sbb push outsl inc jne mov lods adc xchg jae lods push dec enter xor sbb add dec and int and mov lahf push xchg push pop push fwait mov test and cli cmpsb lahf lds inc cltd push fcomps lret out mov mov (bad) or jl mov or and push les adc loopne lock icebp jae dec and sti lock jbe adc jne addb mov dec (bad) push xchg sbb mov sub clc cmpsl ja jg push cld leave mov ret lret inc iret movlhps das sbb popa divb mov xchg push lds jge pop dec lret call lea in add repz mov pop xor jnp rorb cmp (bad) mov pop repz xchg ljmp xor mov pop mov mov (bad) push adc test mov mov xor sahf push sub xchg push xor inc xchg je and jmp out ds test cmpsb pop cwtl nop rclb sahf dec push daa xor cli add fucomip cmpsl inc jmp push das into enter inc cli dec jmp adc outsb lret in cld xor (bad) pop xor fwait outsl fnstcw adc and adc movsl jnp popf setno mov pop adc mov jg test outsb jno (bad) mov scas add fcoml test and clc mov adc sub xor add xlat jno pop sti push cmp cmp jo jns scas sbb adc shrb add insl sub ret push arpl inc ss add (bad) (bad) hlt pop lret push adc out in scas jle push lock and js add adc sub sub or fcomip test stos int test fsub stos sbb adc int jg jns dec movb sbb rorl mov xor xor or das andl xchg inc test cltd pop mov aaa add dec or ss out adc xorb pop scas (bad) and xchg mov pushw push fsubs mov or pop adc insl sti push xchg push and jp arpl mov inc cltd xchg int ret (bad) lret ss jns adc pop inc (bad) testl xchg mov popf fwait je mov rcl adc dec mov int xlat cmpsl and xorl notl dec mov sub iret jecxz fdiv lcall out or repnz inc lea add push or sub or (bad) into dec mov (bad) jno loop (bad) mov jmp adc inc rol mov stc adc flds cs lcall ljmp jg push and add mov adc lret jle add lock mov adc xchg popf xor repz or jmp push or insl dec push out js int3 adc faddl xchg imul add mov sub and jp movsl xchg outsl add pop adc jb out adc std pop xor cs mov jmp inc cmp hlt inc xor xchg adc (bad) mov insl nop (bad) cmp xchg jbe repz fldpi mov out adc cmpsl cmp adc out lahf jge jns je add mov fidivl lods stos pop jge push dec stos pushf mov push xchg div mov cmp cli call xchg dec mov push pop mov test cmp and jae imul hlt dec push xchg int3 ficom mov jo ds push push test dec jno mov cmpsb pop cltd or xor inc or shll je push leave push aas out test mov xchg fisttpll aam pop adc roll lock sbb dec mov je pop fidivl test fmuls sbb sti repz mov adc clc bound xchg xlat push inc scas pop xor testl outsl je leave imul addr16 sarb push sbb dec mov mov push (bad) cmc test sbb das jnp dec stos (bad) (bad) outsl xor sbb ret mov inc jno loope (bad) xchg xor xor mov int3 out mov aam adc loope inc insl shl adc mov xor mov adc (bad) xor xor aad push sub jne xor jno enter push stos mov sbb jne jae sbb out mov add dec ds ja adc (bad) aam call xchg mov mov add mov jbe push xchg addr16 fisttpl mov push jb nop mov stc mov inc inc mov repz ret jge xor std jl negb lods xchg inc movsb (bad) pop mov fisubr jmp mov mov insb jno pop add mov or sub test loop xor or jbe subl push dec insb (bad) mov jmp adc hlt dec in ja clc popa dec jl pop add add lcall mov mov popa sbb (bad) mov inc or fist and pop aas enter cmp int shrb sbb xchg mov movsl cmpsb jne sbb lahf inc or sub or adc mov push dec mull xchg mov mov aam jns xor or mov ljmp push xor mov shrb or scas cmp add les push stos mov lahf nop mov and and fwait repz mov out mov movsl cmpsl addl dec insl add lcall xchg lds xchg jae fsubrl roll out adc adc mov pop out lock pop add das adc or cmp inc jmp aad xor mov and rorb ret repnz cmc xor and (bad) cmp scas add sub or mov mov push (bad) add mov arpl dec adc inc cmp add fsqrt mov mov imul dec xchg push popl lods inc into movsb repz jmp fs add pop mov adc adc loopne out push xlat xor aas push sbb or out xchg sbb test dec or fcoml add scas mov iret stc out adc push repnz fwait adc sbb xlat adcl ss add jmp mov andl ja xlat in inc jns jo adc sub pop icebp jge notl pop mov into xchg xchg insl inc xor jo jecxz addr16 out or stc or jbe enter cwtl sub imul adc push jl (bad) mov std dec (bad) jmp jmp pop dec dec sbb mov je fs pop push lods (bad) jmp xchg mov pop loopne push fwait (bad) adc aam mov lods repz pop sbb pop sub subb int addb mov (bad) push add or add push pop or jo popf xchg nop adc aam imul sahf scas xor repz mov hlt or out bound xchg dec nop mov adc insb enter je mov adc jle jl icebp xchg push mov in sub or and pop movsb sbb xchg repz mov sbb push loop adc jg pop addr16 cs shrb jecxz insl gs cltd add icebp daa fldt psadbw xchg (bad) adc mov mov sub cmp fsts or mov adc ss or into cmpsb adc pop rol mov pop jl (bad) shl outsl test loopne add adc jp ss mov mov pop out imul mov scas inc fisubl scas (bad) nop jno mov test int sub and mov pop add sub pop mov pop adc dec xchg jmp xchg push sub mov out dec pushf xchg pop xchg clc cmc jbe adc mov icebp fiaddl stc xor or inc jp dec push cli cmp roll mov and lods pop add push mov stos adc add leave mov int xor cli or cmp mov std negb sbb insb fist mov push cltd jge mov daa mov imul push mov inc cmp xor mov dec add add push into mov sti push or jecxz ja xchg int3 xor adc push or sbb cmp push or push jecxz mov adc xchg and adc pop adc icebp push dec iret cli pop jnp mov fistp fs xor insl and bound (bad) loope or inc push test dec arpl adc jo cmp cmpps inc pop mov out leave stos out adc or test (bad) xchg rcll fistp xacquire xor xor or cwtl mov push rcrb adc xor sub sbb les xchg mov xor mov (bad) push and popf sub outsb push cmovae loopne adc push in inc cs add enter cwtl mov into mov repz jecxz sub mov dec or adc jb mov out mov ljmp or jg xchg insl inc adc and out call add aaa push lea inc xor bnd sbb bound mov rolb dec mov jl sub pop scas sbb (bad) js or jb ja mov push leave cmpsl add (bad) push rclb xchg repz push adc jp inc xchg jnp jne adc and xchg xchg and xor (bad) xor mov lods outsb adc xchg lret adc lods js dec cmpl iret xor xchg imul cmp dec adc pop jg adc aaa mov enter add (bad) lahf dec (bad) ffree adc popf clc inc push stos push imul sarl cmpsb add ret sub sbb mov test or pop imull push cmp or call out aas dec in add sar jb imul adc (bad) pop cmp popf mov ljmp enter cmp or or addb pop xor mov pop xchg test movsl fwait mov xchg adc nop rep mov add fdivrs dec adc movzwl mov dec movsb xchg push jns shrl repnz cmp or mov add pop test adc or push and js add loop fildll (bad) inc mov cmp mov inc cmc pavgb push sti cmpsb cmp pop fiaddl inc or out insl and imul enter mov fistl xchg sahf ret inc loopne sbb xchg adc sbb pop ljmp push or in cmp orl adc jmp mov pop mov adc stos aam lcall sub lds xor aaa or pushf jecxz mov setb and insl push test sbb add add adc jnp test adc (bad) cmc out fwait jecxz stos (bad) iret (bad) adc cld jmp movsl dec loope add jg cwtl jg fisubrl sti (bad) and pop mov test xchg (bad) cmp mov add mov xlat jnp outsb and or mov xchg enter jb arpl lahf mov xor inc sbb mov repz and cmp mov shl mov lock (bad) or mov mov testb cmp or inc repz popa mov add nop movsb sbb jmp add adc mov xchg xlat daa adc out ljmp dec xor sbb mov pop xchg mov jno adc mov add pusha jle cmc sbb adc push cwtl and int jns cmp lods add fwait nop (bad) das (bad) adc ss in xor add in pop stos ficompl xchg adc lods pop jmp xchg int3 sub xchg mov mov je xchg cmp and fmul jge adc push sub adc in mov xlat pop pop and dec cmpsl fisubl inc mov repz cmp mov insb adcl cmp add adc out fsts (bad) cmp inc add stc imul adc pop push call push or std ss inc icebp in pop mov repnz adc jecxz daa lcall add fiaddl sub push mov sbb inc xor call js loope jle add cmp cmp in adc push outsl je xor xchg mov test sarb movsl sahf insl gs pusha fstl xor ret mov (bad) mov iret xchg fidiv jne fnsave movsb pop or (bad) loope aaa lock cmp mov stc jp mov bound add xchg ror rorl add (bad) ficoml negb nop and loop or cmp push test xchg fstp adc push sub shll loop repnz dec xchg cltd testl out ljmp pop push (bad) leave dec mov adc adc ja push xchg insb mov movsb pop fbstp adc js dec adc repnz adc jo insl and cmp xchg arpl xor jg add out sbbl jno fsts movsl and int mov call dec (bad) jae loop mov aas pop imul divl pop push stos pop inc adc add mov mov adc loop mov sub pop or sub sbb push push gs or nopl xor movsb sbb les cmp mov int lret aas push mov pop mov cli fmul adc push das lcall (bad) add adc pop cltd dec adc dec loope gs cld insb lds popl in inc xchg leave xchg mov mov push sub cvtps2pd aam inc into loop sbb push adc inc push out cmc cmp adc pop repz out adc sbb sub pop fidiv adc or jge lcall mov cmpsb push jmp test xor cmpsl rclb pop xchg lcall mov das jnp sarl fnsave jmp test add or adc insl xor adc jmp mov and push pop pop sbb add jle gs xchg test add pop insb jnp ja pusha adc xor loop xlat mov xchg dec es dec add dec imul inc mov repnz inc loopne repnz mov sbbl aaa push adc mov sti mov inc cmp lods add pop xchg inc jnp xor sbb imul insb push inc lcall in dec add pop adc and push or jecxz and mov jnp dec pop sarl popa fdivs adc shlb sbb fs inc stos jge add ljmp xor fwait jmp popf jno movsb sub dec mov jae or adc int3 jg (bad) stos outsb dec adc jle and (bad) leave inc dec icebp sub cltd push dec pop xlat mov pop xor mov jns inc mov inc pop pop and mov xchg add into ds xor pop repnz and or or int or repz add push pop mov push mov mov cmpsl xor dec std sub dec das in and jecxz jge adc push sub movsb mov scas jle inc or xchg pop adc notb nop dec jge push push outsb enter psllq adc mov xor fidiv push cmpsl push imul nop mov repnz dec (bad) push ja mov and cmp and pop adc out movl int xlat push xorb inc and call cwtl push out add fsqrt rorl dec (bad) add jp popa repnz outsb adc in jge mov ds pop sub cmp sti test adc pop adc push push mov cmp addr16 xchg enter jge adc push out push mov sbb xchg or adc shl gs popf arpl ficompl lods add fsts mov stos sub out pop mov add mov mov cmp pop mov mov rolb mov add jecxz cld cmp sbb mov ret inc xor add pop sub xor ljmp mov repnz mov repz sbb je mov push loop outsb cmp shr push ja loope sub xchg mov cmp inc int3 mov out cmpsb fldenv lcall or mov sbb out rclb repnz mov outsb les out pop xchg sti (bad) gs sbb gs ret popa push push mov (bad) xor pop or add lods ljmp pop arpl inc rorb mov imul mov iret push jp cwtl (bad) xchg xor cwtl mov ficoml inc cwtl (bad) je sub mov cmc jbe add mov lret pushl dec dec adc (bad) or jmp mov sbb push cli je loop xchg ja inc imul out lcall adc add inc cmp daa lahf insb sarb push movsb jge or dec (bad) clc dec pextrw or push jne ljmp sbb imul fstps inc adc xor outsl repnz nop sub jge jno adc dec jmp fidiv ret or test push mov sbb repnz mov jnp push outsb add scas lock pop test ret sbb xchg out add lret cmp adc (bad) mov (bad) adc mov push fs adc cli xor leave mov decl jb iret jecxz sub fcompl or jae pop nop je call xchg mov sbb push sbb adcl fildll mov adc sbb iret cmpsl sbb scas sarb (bad) cmp push adc adc push je (bad) into icebp daa inc insl mov mov movsl dec lods adc xor addr16 sub add inc mulb cmp dec fwait push in mov push adc enter lahf mov fimull push dec cmp push inc xor (bad) push test pop cli push out jno ret adc push (bad) mov (bad) sbb adc mov es in popf adc cltd (bad) mov arpl sbb cmpps sbb cltd mov xchg cvtdq2ps lods adc or lds hlt ljmp inc jno xor push aas push movsb add xor int3 cmpsl sbb pop lods pop shlb mov test rolb out xor out add mov fimul int3 mov adcl mov loop or pop rorl mov repz jecxz push ret push mov inc addb jo fmull insb lods mov test lock adc sti mov push dec adc jl repz pop xor push popa addl imul sbb pop lea and loopne mov sbb (bad) sahf mov adc inc sbb mov sar pop icebp sub js js and push mov add hlt jl dec mov popf sub (bad) into sbb mov sub shlb cmp loope mov ftst mov aas push mov pop mov sub or (bad) sbb aaa insl or push xchg mov xor imul cmp das popf lock xor pop movsl sbb aam popa (bad) jne or pop push push mov icebp xchg enter sub xor loopne jbe test inc pop lods pop push adc add sti xor sub popf sbb pop push adc jno fwait ja mov mov adc xor or icebp orl xor xchg push shrl xchg inc cmp int fs push xor inc (bad) rolb xchg push fiaddl frstor jo jo or adc pop fcoml mov daa enter pop fcoms out mov add mov je pop int3 add out jbe into adc push ds fist movsb mov ret add int mov (bad) out jns add xchg cltd dec mov push (bad) and and (bad) push je int3 sbb addb and add cmp mov or jge or test and jmp pop push cli js inc lds and push popf ja rcrb dec or adc jae imul icebp aaa cmc pop fstpl insl cmp push data16 mov jp xor cld cmpsl repnz sub lock cld (bad) adc rcrb mov cmp sub lods or pop sbb add repnz imul lret xlat add mov (bad) lods xor mov adc and test push cmp popa lcall push ud2 pop adc or mov fbld xlat cmpsl sbb xchg sbb cli bswap mov aas xchg pop push imul push lcall gs (bad) fsts cmp adc imul fwait xor (bad) cltd popf fmull sub pop outsl mov xchg fdivr test rol and iret push push sub adc les adc in mov call bound nop xor mov push fwait shlb mov jecxz jae adc js adcb sbb lahf and inc call push mov jmp jne lea adc cmp je (bad) (bad) jne in (bad) ja mov loope stos iret enter incl sub (bad) movsb stos adc stos rclb les pop pop mov pop or sub (bad) cwtl lcall psadbw add (bad) xchg in xor jge loope dec mov sbb xor aaa (bad) adc es cmp int cmp sahf sbb sbb mov icebp test xor add jae insl xor iret add mov rep test lcall mov pop in in or sbb scas dec mov leave xor jmp popa pop sub mov add xorb cltd jge dec cmp (bad) xor outsb inc hlt push push dec mov (bad) lret mov xchg repnz stos pop adc andb sbb xor stos push aaa lret lahf outsb mov rcrb pusha sub int3 mov pop (bad) test shrl (bad) sbb push je fs enter push mov into sbb pop add xlat insb push test xchg outsb adc mov xchg popf bound mov mov push dec pop repnz hlt pop jnp and push xchg add stos push popf jbe cltd push nop cmp sbb lret lea frstor adc mov adc cmpb adc (bad) adc stc sbb cmp sbb imul repz jno arpl lods test mov fstps push fsubrl scas ljmp xchg jae fdivl out test int3 xor aas and xchg and sbb mov sti aas sub fstl jp (bad) xor push addr16 daa je mov mov gs out mov addl mov mov rorl pop jle and lret int3 jno lahf push sub jne mov xchg enter or sbb adc push stc inc cmp fsubl mov xchg bound inc push sub xor jecxz imul enter dec adcl adc or loopne insl pop leave rclb rcrl jecxz xchg dec jg insl les add nop cld add lret mov aaa mov inc jge into cmp aam jle sbb mov movzwl pop iret int3 nop je sbb sbb sub sub xor pop outsb lods pop and ljmp xor mov push fbld sbb mov push daa xchg std repnz mov fldcw adc (bad) dec cmp or popf push pop aas xchg sub sbb (bad) mov adc inc or mov and add rcrl roll icebp add cmp xlat (bad) or das cmp adc mov mov adc pop adc lods andl xor mov xchg bound inc mov xchg sbb ret xchg or test dec xchg ss sbbl push mov or xlat ljmp fistpl cmc addb nop outsb fdivs aas dec inc movups mov (bad) push cs sbb add adc pushf aam scas dec (bad) lcall fs sub jno inc sub sub mov or xor mov adc jmp iret movsb inc mov sbb aas mov and sbb adc mov jne add push dec and mov mov pop xchg movsl jo (bad) mov insl mov lods inc xor js or ljmp imul xchg mov movsl sti (bad) xor push pop jae aad cltd adc xor mov (bad) push push faddl aas dec inc or roll jp fstp xchg adc dec cwtl jbe nop ficoml push rcrl fcompl pop mov sbb ret adc (bad) lretw mov xlat aaa (bad) fist int3 push push mov rcpps (bad) mov leave xchg jbe dec mov lods xchg xchg movsb pop out pop lods pop adc mov dec pop add inc mov addr16 hlt or pop stc ss and out ja xor aad xchg push push out mov mov mov clc dec push lock mov clc fsubl pop adc xchg nop push mov push out push fidivl mov lret push fsubrs into push imul lods enter xchg int xlat in outsb mov aam outsl xor jbe dec pop shld in (bad) or ficoml inc jl adc fstpt xchg loop icebp xchg outsb adc xchg xorl (bad) push out cmp sbb out mov mov adc pop jbe xor lock push jecxz into and or push xor inc adc mov xor ficomp or push fnstsw loop jp mov fisubr repz test pop xchg lods adc mov out pop adc aaa adc and fmuls sub sbb pop pop fsubr addps cs push repz fnsave sbb mov adc pusha pop in repz mov add adc lods mov popf lock xchg xor in jbe cmpl fisttpll or sbb pop repz ss xor sahf add outsb xor cmp cwtl lock mov and stos fsubl adc push xchg cltd notb fsubrl fiaddl adc jl adc cmpb int nop shrl insb fbstp mov pop add xor sbb leave test fs rclb sub push and mov mov fdivl push ds and fsubr adc and es mov nop loop mov fwait or pop jl mov add mov mov aas fildll mov in test test aas rclb repnz cmp pop imul ja sub imul sbb mov scas mov sbb mov aas mov stos lods pop icebp or in int adc stos in and mov popa adc repz jge fmull push adcb cmp mov (bad) popf test in adc add into xor push xchg cmpl insb adc jge add sbb stos push ds mov push mov rcll push dec sub lret adc fdivrl adc fiaddl lret adc adc push xor adc out lds sub adc mov adc in in lret movsb xchg fisubr js iret les mov insb dec movsl jp adc shrb jne test sub ret push push push loop cwtl insb incl sub inc mov pop shlb adc ss (bad) repz xor xor add int adc fisubrl adc ljmp cltd and mov loope or gs adc in and add adc imul jp cmp sub into repnz aad inc cmp mov add push or xchg mov push jmp je or push loope xor addl and dec mov xor lcall shrl bnd jmp adc push dec out sbb xchg adc data16 je jbe cmp js (bad) test ret pop or xlat adc pop out popa mov scas sbb adc hlt xor aas (bad) int3 (bad) push cs ret add adc stc dec sbb ret and (bad) jne jg aas cltd shl pop ljmp inc repz inc cld mov (bad) mov xchg xor pop movsb or sbb adc pop adc clc push cmp cmp adc cmc inc mov ds pop (bad) loopne ret pop add dec mov adc cmp adc mov in (bad) mov jne sarb and out push lea outsb add mov lahf jmp into mov adc in js push sbb rclb leave cmp adc add es mov jl repz lahf (bad) cwtl lds int aad mov jl int cmp and mov jnp lret mov lcall adc sbb gs mov adc js push jne ret push and sbb rol pop out fisubr les sub in cmp cmpsb add adc pop xchg sbb imul or mov pop mov adc sahf aad sbb icebp or in push int xchg push mov into xor adc mov dec repz mov cltd sbb xchg loop call mov js dec mov jo adc leave adc jg in (bad) adc fucomip dec xor and out mov jle sbb adc loopne pushf mov out or lock insl pop lds popa sbb in add sbb out adc xchg lcall je sbb xchg cs (bad) iret sbb ficoml lret (bad) mov sbb mov add aad hlt adc pop add or mov push sub inc (bad) inc mov xlat cmpsl fsubr mov or and or insb loop repnz mov bound or mov mov hlt shl dec (bad) push adc repz mov andl cmc popf (bad) int3 lahf adc das dec jle loopne adc std mov xchg or js (bad) mov lret jl je in inc xor inc adc cmpsl cs das add scas mov mov push push sub mov clc aaa sbb insl adc or lods mov scas (bad) jno mov sbb stc or icebp xchg cmp xlat push push jno adc rcrl lcall inc adc or xchg cmpsb and inc sbb inc iret test bound inc mov fs in into push xchg push jp test aad pop sbb pop add jecxz and adcl sbb mov repz add push (bad) cltd lret sbb pop stc pop mov and adc adcb (bad) or rorl pop adc push mov adc fidivrl out mov mov arpl sbb cld test cli add or out jle cmp jbe adc out cwtl pop ror pop dec int xchg mov and push ljmp push inc or adc rorb mov jo loop rep push ficoml jns inc ljmp sbb xchg int mov adc mov lock jno sub in mov adc xchg xchg daa clc or call lret subb fcoml rcl adc xchg xor xlat movsb jae xchg push cmp repz mov daa lahf or scas mov cmp adc adc xor mov out pop xor testb cs sbb adc sbb stos jecxz nop (bad) xor sub and jle mov cs decl mov and fbstp mov or mov adc in outsb test (bad) pop imull sub or outsb pop repnz pop gs add jae,pn addr16 aad xor jns out inc sub ds scas xchg mov lea frstor push or adc sbb inc add xchg dec cmp or sbb mov aam add enter add push mov in cmp test movsb and or and dec mov jmp sbb leave ja lods (bad) xor popf jge pop sub dec inc cmp adc loop or dec inc repnz cli and xchg sbb ud2 pop sti addr16 (bad) mov push pop jb enter std dec movsl sbb push cltd stos add xor adc es sbb lock add out adc bound dec ret dec xor mov sbb push push cltd lds fwait test nop inc jns divl icebp add push je ret pop adc cmpsl (bad) ret mov xor pop je lret sbb sbb adc rcrb (bad) add xor inc or and loopne mov jns push pop adc cmpsb or (bad) pop cmp xor sysret add pop or adc xchg push adc push and or (bad) and or mov fldcw push imul test dec rolb dec movntps cmp nop dec repz pop jae cmp adc pop sub std ret jns inc push cmp (bad) jl mov adc aas cwtl icebp pop adc mov mov sbb push pop sub or (bad) clc jae mov xchg mov xorb jp pop sbb mov pop dec jmp inc stos adc mov lret adc (bad) decl mov sti mov into sbb (bad) test dec call adc adcb pop out dec sbb mov mov mov adc lahf (bad) les dec add insb ficoml sub ja adc sub pop js,pt repnz mov cmp mov loopne xchg xor and adc push mov mov xlat repnz xlat cmp test fcomps adc mov sub int3 inc cmpb ss fsubrl (bad) pop add loop stos fildl pushf in cld mov jp adc xor shll (bad) in shrb scas push outsl enter mov xchg out sbb int notl sub (bad) fimull rep and push nop in adc out jo ret sub xchg dec repnz rolb movsb (bad) pop jne out mov add fs adc xlat das lcall mov daa push add adc nop push aam addr16 adc xor addps jo and xor mov shrl aam shl inc cmc dec ljmp repnz imul enter (bad) adc pop (bad) cs xchg pop or incb add bound (bad) push loop sub arpl push dec xchg xor nop movsb jle xlat int mov adc mov lods fidiv xor lahf outsb insb xchg add leave mov out stc xor mov sbb jb cmp mov shll div and jmp mov mov popf adc sub and sub push repnz imul (bad) (bad) cmc in push xchg push fistpll dec mov leave and (bad) addr16 pop mov adc mov int3 mov jl adc push sbb imul push cmp imul stos shrl mov adc (bad) sbb xchg inc push mov xor adc test ja (bad) sub lods cmp push sbb sbb cmc loopne gs mov lret xchg xchg ficom ja sub scas lock xor (bad) sbb or mov jp imul orb pop in push int push orl adc inc pop sub adc call dec xchg push pop or ret push (bad) fisttpl test xlat test in push jl or leave push enter (bad) mov inc (bad) jg outsb repz mov or jno dec nop or lds ds and and and pop mov mov ret inc or rclb dec repz add (bad) xor jb data16 adc push add ficom mov loope cmp push out adc add lods mov loopne pop pop add adc hlt repnz arpl jle add adc add xchg shrd and movsl enter setns inc ror add dec scas jbe adc aam ja ret adc or jnp push popf inc xchg pop adc shrl arpl adc and xor jle cmpsl adc data16 jbe jnp push inc (bad) cltd adc adc bound lcall add dec mov lcall and pop push lods dec sbb repz xor dec sbb dec adc cmp push insb test mov icebp push insl sub sbb int (bad) mov in push mov lcall int aad data16 or push push ret lods subl pop insl and (bad) mov idivb sub push sbb in or out insl adc rcrb adc (bad) mov xor sub into cmp push xor je sbb mov and fcoml outsl addr16 sbb lcall insl movb es nop mov clc repz loope negb ja jo mov lds paddb sahf adc fdivs xchg adc mov pop mov ljmp mov mov int3 sbb out adc adc cmpsb sbb shll sub mov fistpl mov outsl mov add insl pop fistpl push xor add ljmp jp pop es popa mov enter clc push mov pop sbb repz mov sbb icebp add (bad) mov jnp cmp cmc stc mov or iret sbb or out adc sbb xchg mov divl add arpl cmp or in arpl test or insb iret xchg dec nop jle adc and cwtl lock xchg dec cld inc popa es std pmulhw sbb jbe shll mov pop int (bad) mov shl fiaddl sbb add and xchg jmp add in inc mov dec dec xor push and lods push in cwtl (bad) mov fistl jp repz mov mov mov dec lret pop lea add scas adc cmp faddl xchg mov jecxz in dec cmp pop test mul test outsb adc pop push iret sub ss lds xor sbb test add repnz fsubrl mov inc das sbb nop push dec cmp lret pop fcoms sbb adc push jge (bad) mov xor pop lcall sahf repnz and mov add inc adc xor add push negl cmpsb push insl and into pop (bad) cmc push cmp add jg enter cmp out mov mov ds repz or std enter stos loop iret cmpsl popa aad mov xor adc fcoml jge pop push mov or lock in in int push adc and mov adc xchg arpl fwait shll xchg rolb lcall (bad) jb sbb pop push adc fwait imul jns adc aad sub sarb test push outsb fdivl xchg dec add fcom lods sbb pop sub xor sub mov lods cwtl jb adc ret push out mov scas fs flds adc mov repz test fdivl jmp enter int3 test popf je pop test mov sbb adc nop mov fcmovne adc js push dec cltd jb adc cmp mov rcll fdivrl or cmp fist stos adc or dec mov pop xchg clc push out mov xchg xchg add adc shrb icebp mov (bad) adc push jno jnp and push mov inc xchg in sbb xor or xchg jne mov or push add pop mov repnz aam sbb inc xchg fcoml jle add call inc cmp repnz enter inc and shll nop mov sub repz mov gs hlt add xor pop repz or minps mov jg loop pop scas mov repnz xchg xchg pop mov bnd adc mov dec repnz lret int3 sub les push mov mov test out lods cmp or inc push je xor stc out cmp adc mov (bad) stc orb adc movsb (bad) or scas imul in into xor in repz jo les adc cmp call out inc cmp or adc mov inc push xlat (bad) mov pop cmpsl sti mov (bad) mov jp mov add fnsave xor (bad) or pop loop add and and inc (bad) or scas add mov cmp pop popa adc sbb out pushf adc cltd lock jne aas add pop mov adc and test inc shll out movsl movsb push mov mov enter aas xchg adc mov adc dec (bad) jnp adc add mov fcom pop in xchg xchg fidiv xchg leave jl mov adc roll push fcmovbe roll or out sbb out xchg pushf mov sbb sbb (bad) xor mov cli jmp xchg in push inc mov adc fimull clc mov daa adc adc ret fsubrl pusha mov add adc pop xchg fimul inc ja repz push push cmp xor adc jl cmpsl inc or adc andl pop sbb cmp lods dec repz or adc mov lret jp mov sub or fsubs lds and sub add sbb add pop loop popa (bad) push pop and dec and or pop cs shll cld stos sbb pop xchg dec cmp mov jnp and lcall mov je ret adc sub push (bad) or adc inc mov push fwait sbb pop cs mov aad xchg adc out les push or jb clc test sbb movsl pop cli jge adc rcrb int xor sub pop adc leave xchg adc push popa add mov push cld ljmp mov test ja mov cmp fmuls pop andl mov fldcw pusha and adc add js add adc adc pop xchg out jne enter cs add dec cltd adc int ret fidivl jb rcr repnz pop pop mov mov in shll insl je pushl stos insb inc sbb add or jge adc add push jle rorb (bad) fsts negl aam inc bound dec jns and mov pop push outsl jb mov fldt mov xchg (bad) stc adc mov mov cs pop sbb (bad) xlat mov dec pop jns sbb sbb cmp and daa sbb push aas cld xor cmpsl mov pop and adc stc xor push xor popa pop (bad) das ret xchg cmpsb add adc pop pop xor fisttpll inc add adc push sahf movsl ja push xor bound and leave adc flds fildll adc xchg in adc adc jl cmpsl add movsl dec je dec enter xchg adc or daa adc das stc int3 imull push stos add mov mov add hlt mov jg dec aad mov outsb adc mov inc popa lods lea (bad) es inc pop call xchg mov sbb mov cmp or adc pop repnz cmp outsl inc adc pop fmuls out pushf stc and loop add push sub pop xor fs roll mov repz dec jle data16 add add jno mov pop mov or xor add js ret pop dec cmova jp fstpl xchg cmp mov adc cmpsb adc pop xor xchg mov cmpsb adc mov xor (bad) push cmp mov jbe in adcb iret xorl decl addr16 scas je add pop or fstl push (bad) xor pop lcall mov popa or xor es jae sbb arpl pop or mov out sub fs dec lds jnp xor inc mov mov xchg adc push sub jne test adc xchg in lcall (bad) or push push adc cli push loope sbb daa mov inc aaa lea cmp sbb cmc push sub pop test add adc clc and mov les adc xchg add ljmp lods push pop push or pop adc push mov out fcompl fsts es das adc std push aaa rorb repz shrl dec (bad) sbb outsb fdivrl adc or and stos add adc cli push out (bad) jne sbb repz add mov fwait or fdivs popa int3 movsb pop imul xor adc test lock mov adc push and jp repz xorl or jmp xor insb fs cli enter dec inc jle xchg aaa in addr16 scas mov xchg popa repz cltd sbb (bad) dec push adc mov adc pop mov or xchg inc lcall movb orl xchg xor mov lods mov pop pop out inc inc pushf mov push in int out or je push loope mov fldcw movsl jle push mov (bad) xor in push in gs adc fcoml call push inc arpl rcrl push mov in lods es mov je (bad) hlt cwtl roll mov push ret xchg lret lret adc lcall in lods jmp rcrl loop pop addl repz push mov mov ret adc cmp xchg imul pop aaa adc les xor adc fistp aam aad aas and xchg ljmp mov outsb add out ret (bad) je push adc dec roll lret out adc push ret repz sbb icebp mov mov push daa sbb pop faddl adc dec adc inc sbb push lds jnp mov xchg mov imul adc adc dec scas mov jle pop andb push leave push mov stos push sahf pop ljmp cli pop mulb adc movsw jecxz dec add imull call add jbe xor bound pop cmp test daa xchg cmp lods mov mov adc adc (bad) push adc jl adc mov jns shrb or sbb aaa add add mov cmp mov xchg xchg mov or dec repz jg cmp sbb push xchg jbe push dec insb repnz out mov enter cmp push and rol dec or (bad) iret int3 icebp lods mov insb mov lret je inc inc xor jno sub mov mov shr lret nop cmp test sub or daa pop into fwait mov popf lahf sub sub rcl sbb adcb loop lds imulb push adcl xor adc ret imulb outsb or pushf inc push xchg flds dec xor inc push cmp cld jp add mov std jecxz movsl jg push jmp sbb add lcall sbb jnp xor xor jp shlb xchg (bad) in add pop in dec sbb pop adc cli pop adc mov or btc lods sub (bad) jno dec ss cltd addr16 jg iret fdiv pop mov stc (bad) out adc mov cmp das jl mov adc dec cmpsl adc aad pop ljmp sbbb jecxz mov (bad) mov xchg out and rorl or push xchg push push push das std dec cltd lret movhps sub xchg mov shr in sti xor xor xchg xor lea add fcoms test dec js fdivrl std xor mov andb cltd mov or mov jno cmp add pop rcll mov (bad) jb pop and jns jmp xor jno xor xchg bound sub pop inc jb or mov push dec mov push xchg adc xchg jno push and imul fcoms les clc mov fisttpl adc pop fstps scas stc iret arpl adc aam lods out or adc test or lret fnstcw popf cmpsb sub cmp cmc or arpl ret inc repz fwait iret test sbb out or xor nop jle adc test das test sbb addr16 inc out xchg pop in cmp cmp xor scas add test or (bad) jge sub sarl mov dec adc adc stos lret xor fimul mov mov bound pop scas rcr ret or add add jecxz xor xlat out shr mov ficompl dec mov orb mov xor dec push addr16 jp mov imul cmp (bad) mov lea inc pop jle dec lcall pusha (bad) push cmp into mov das cmpsb je ds or iret mov adc sbb rcrb xor pushf cld lret adc (bad) lock xchg adc mov fcmovu push adc add adc jne xchg jno jns cmp pop arpl loopne addr16 mov lea adc pop or int mov or jne mov sarl push clc arpl les mov adc test je mov pop call out fcompl push mov lods add repz mov pushf xchg mov inc mov inc jg fwait enter add imul es mov or mov repz pop movsl ja int mov push inc popf mov or or add xor cmp jmp out xchg in pop xor cld pop stos or (bad) mov cmp jmp push cmc dec push pop fbstp lret loop xchg stos repz xchg fiaddl mov or stos sbb (bad) enter adc icebp sbb adc push repnz sub add ljmp hlt pushf mov mov pop xor or test add out cs push sbb add (bad) test adc cmp push test sbb xchg add int add adc fs sub repnz dec cmp or shrb es test adc mov cmpsl add stos lahf repz cli negl adc in adc cs js arpl shrb repnz xlat es mov mov mov loopne dec mov js jns rclb xor mov or icebp cwtl stc xchg push adc mov mov lret cmp adc sbb or mov mov je jge enter xor sahf jns adc fs mov adc jb xor ror xchg rdpmc shll mov adc test dec fwait int3 mov or in aad jecxz xchg call adc shlb xchg mov jns mov clc movsb lock aaa or repnz adc inc mov cs je mov inc inc add repz push or addr16 (bad) int gs xchg repnz push pop or xchg adc pop ja rorl and fnstenv xor jo repnz in adc fstp sub aaa cmp test in jne pushf dec inc out mov adc cld cmp or scas int3 les push shr cmp cmp inc cwtl mov loope push push or mov cltd and lcall adc adc int3 cs cmp xlat mov adc jecxz adc add data16 xor and into daa adc add adc xor cmp adc add ret aaa outsl inc imul cld pop jno dec add into jb lret (bad) push adc (bad) cmp mov cmp stos int lock sarl dec pop adc adc cmp movsb (bad) adc jno push adc jmp fmul fs adc aam mov xor adc pop stos or mov mov or inc daa cltd add shll adc cld stc pop adc enter lret mov adc pop mov movsb or add pop add jae dec xor xchg pop insl adc xor jne insl inc jne adc mov xchg cmpsl adc pop fidivr or fildll adc inc mov xchg mov pop cmp int fistp adc rolb ja push aad jecxz sbb es jge cld add push dec jle mov adc les inc int repnz cmpl pop xor inc (bad) loope sbb push adc pop test cld movsl push push dec xchg pop dec or loope cmpsb sbb add xchg and push cli leave jge xlat add sbbb (bad) dec push adc xor inc lcall mov shrl lret mov add xchg xor (bad) test cmp cmp add and mov mov add jecxz (bad) mov lods pop sub fidivrl and out mov xchg xchg pushf mov aas repnz mov adc mov xlat iret sbb scas inc test xchg xchg leave dec adc sub adc pop test cmp mov iret mov dec jno pop in imul rcrb pop pop mov push adc sub lcall (bad) sbb add test cmp and or mov repz stos test dec out mov imull push fstp or and cld (bad) mov jb adc std mov (bad) jne sbb pop nop mov roll lcall fstl xor out pop jnp repz ds in pop push xor (bad) fcoml cmp aas xchg jle aad sbb fildll mul push adc inc cli movsl dec inc pop mov jl loop or pop mov movsl push idivl jp lcall adc xchg push sti repnz sub fstps sbb fistp stos shl mov andb rclb mov shl xor lea push popa or rcrb cmp ss pop xor pop roll dec xchg dec fs enter xchg out adc stc in dec jmp notl je and fisttpll lds or repnz adc xorl psubusw xor and nop (bad) fistpll mov pop mov sub je clc lea cmpsl sbb adc mov or jle lds pop popa adc pop ret jge loop xor inc aam fidivl hlt add xchg push and mov inc sub xchg repz ret mov ljmp or imul pop sbb pushf cwtl loopne xor xor imul dec bound jne outsb into fptan daa sbb leave adc popa pop out (bad) adc mov inc mov xchg rorb loopne ret pop pop scas fsubs inc inc cmp (bad) pop ljmp stos and loop lea (bad) mov cli dec jno or or inc fsubrl push outsl fidivl ds cltd icebp fiadd lock in push (bad) xor and sub xor lret loop adc dec cmp lds ret insl dec xor mov loopne (bad) je gs adc or jl gs mov addl cld dec repz push imul cmp fwait test xchg push mov (bad) jne je pop xchg sub mov or sbb and mov jg add movsb sbb in xorb or test push adc xchg test mov xor mov mov (bad) cld or clc dec sti xor cs adc leave mov adc out aam insl xchg and pop xchg mov cltd sub test lcall daa xchg xchg jmp adc lock pop incb repnz lods mov inc mov adc addr16 jp in mov sub adc mov mov cmp scas push (bad) lock pop adc in xchg daa stos dec pop aas nop jmp pushf (bad) leave out add mov (bad) in das sbb jnp sbb repnz jo pushf clc cmpsb adc xchg aas jecxz inc xor aas iret lea in mov imul or lds popf (bad) outsl adc clts jle fcomps lods loopne adc outsb popa lret and push xor xor test std push adc xchg out xchg sbb rolb mov xchg in add pop repnz fisub bound leave aad mov nop xor rcrl in shlb adc pushf imul xor sbb xor jp jno sbb stos sbb repz pop mov aam adc mov sbb pop inc inc sub push bound and out adc cmc sbb jmp xchg xchg cli xchg je and sahf fidivl (bad) xchg nop das push notl sbb xchg jg orl lcall mov test ja xchg cmc mov push sbb sarb in out pop add jno adc adc adc in sbb rorl mov xor movsb arpl mov push adc imulb rcll movsb (bad) mov in out hlt push xor push cmc cli push or nop mov sbb add sahf icebp mov jp in les ret stos or adc pop rorb jge sbb es aas pop push int (bad) sbb rcll pop dec xchg cmpsl cmp rclb add push sbb rcrl mov adc in lods insb sub sub outsl xchg lods daa jge repz sbb idiv mov dec adc mov xchg pop aam jne mov sbb adc jae outsb mov mov (bad) in in inc mov scas cwtl push imull pop sub sbb int adc (bad) (bad) mull dec cmp sbb aaa fwait adc adc jge mov xchg lds mov lahf cmpsb xor cmp out lods xlat adc or adc push sbb and imul sbb mov shlb mov jge mov ret jmp mov add jecxz or mov push add ficomp insb pop mov ja lcall jl mov dec pop movsl dec stos in adc mov mov shr adc fsts fbld sbb inc xchg rorl push cmp notl push lds push mov mov and idiv cmp testl arpl nop pop push dec out mov xlat fist push push pop jmp into repz test data16 cmpsb in pop fbld out iret push (bad) mov add stos push ljmp add sub fbstp cld mov lods pop orb (bad) cwtl aas push push pop push add inc mov loope test inc sbbl pop push push iret pop cmpsl fdivs add sub insb push xchg dec mov ret add dec sar mov adc nop lock adc mov aaa push dec (bad) mov push aaa out or (bad) mov or rcl xchg loop mov push out and xchg push xchg xlat mov jmp adc repnz out loop daa pop cmp xor mov adc stos sarl or repnz loop cli push add push push ds decl mov cwtl and push push je aaa (bad) jmp sbb js push leave arpl push or and addr16 pop or push pop fs fistp push mov das repz and test or inc cld xchg iret sar adc or sub xor inc xor orl adc pushf rcll xchg pop ljmp xchg xchg out pop cmp and loop out mov out push sbb fmulp xor or rcrl inc mov repz dec sub mov inc adc pop add fwait inc mov add int3 repnz lods dec xchg stos xchg jmp jl adc push xor push sbb xlat out pop xor push add inc lods push sub rcpps dec xor fs cmp dec adc mov sub xchg mov xchg ljmpw add inc aaa and incl test xor or int3 xchg (bad) je adc push dec jb jbe jne pop int pop adc dec jns int inc loop pop fbld pop jecxz or in add ss mov pop ljmp push inc enter les ficompl dec out or dec inc xchg dec out dec xchg adc xor or test outsb push test loop ljmp mov aam fcomi adc loop dec call out jbe inc lahf pop mov inc dec fwait push in and push or (bad) rcll pop movb pop sbb xchg dec push inc sub sub jl sbb in mov sub xor xchg jbe pop dec lock add js (bad) pop sbbl push ljmp mov fildl push (bad) or daa test popa fnstcw pop cmp cltd push add push lahf lods pop jp incb mov mov pop cmp adc inc les outsb xchg popa jg inc sbb xchg (bad) jmp adc pxor divl pop xchg ljmp jecxz je xchg adc and adc sbb lods mov mov xlat xchg popa jmp cmc shll adcl add jmp push dec push push aad push xchg pop into xchg xchg mov and push divb imul jecxz (bad) das lea xlat sbb (bad) mov mov sbb lock mov xchg fiadd push push push test pop insl cli bound xchg mov mov adc add adc push push push in daa (bad) ds inc pop push sbb xchg cmc repz int mov stos xor cmp out jg leave xor push cmp xchg or (bad) xor dec mov cmpsb pop inc mov mov out add mov adc in cmp xor nop cmp (bad) push jle (bad) rdpmc mov (bad) lea nop push mov mov jmp adc or push (bad) sub dec (bad) mull sub sbb pop ljmp movsb in outsb mov rclb mov loopne mov decl fdivl jo push call cmpsl sarl xchg repz xlat loop jp (bad) loopne xchg out std ss outsb pop in pusha xchg repz jno inc xor loope sarb xor push adc xchg xchg es xchg out outsb push jae imul popf dec repnz loop sbb repz adc jecxz maxps push jge nop add lods dec lret push sbb and mov clc leave xlat push sbb (bad) or iretw add cmp fcmovnb lods test or mov lahf mov xchg push or xchg arpl out leave popa xchg adc inc cs lea mov push icebp loop pop es xlat das xlat lock addr16 cld mov jmp out or sub dec fist lcall lcall pop clc imul cmp dec dec pop xchg adc push rolb ja and nop adc xor pushf out lock or ds and sti loope or (bad) sub loope cltd stos ss adc xchg loop movsb push mov add cmp aaa inc add sbbl repnz or mov sbb mov adc jmp loope gs out enter hlt insb add pop push xlat adc or repnz jmp add out dec popa sub adc xlat orl pop fildll push jge xchg dec jbe push xchg push mov sbb mov sbb out fs ret sbb insb sbb cmpsl (bad) decl or mov (bad) sbb sub sbb push xor fisubr add xchg pop andb stos pop adc fs jno imul adc fsub adc push and mov xabort pop es (bad) insb push pop rorl out movd test jo xchg out xor in in rcr sti and fcoml adc jne out mov movntps lcall push jmp out pop dec fbstp jmp mov pusha cmp hlt jno xor and loop cwtl mov push lcall mov loope hlt aam hlt nop lods loopne xchg lahf adc add or or out test (bad) pop sbb push and insl mov jg je jnp inc mov jecxz cwtl out pop bound push adc sbb ret movd pop pop repnz loop push mov adc add pop cmp jle ret jno inc sub movsb or mov mov in mov mov push js and xor add repnz adc aas jne xchg out pop ja add push inc sahf mov clc sbb loop sub mov out (bad) (bad) sub cli mov imulb sbb mov ret icebp inc gs pop sub mov lret imul mov mov and enter repnz adc test cli add push (bad) std enter dec mov or pop leave adc int add pop fadds (bad) or xor jmp out fsts sbbl xchg xchg dec xchg mov repz sub leave cmp shrl fistp jecxz stos sub (bad) pop insb pop add test aam sub xchg sbb and cmp pop fsts (bad) add mov dec and dec sbb adc xor call xor repnz js xchg jecxz sub push repnz sbb sbb fimul (bad) and adc fwait or push in fnsave xor adc sub jb jbe and fcmovne jp pusha pop jge add push xorl mov mov jnp inc mov (bad) rcrb lcall push (bad) gs dec and xchg ds (bad) gs std int pushf dec loop (bad) sbb xchg sub cs out test dec hlt test and mov aaa dec inc lcall in (bad) ja add and movsl cmp loopne sub fs pop push popf out mov mov repnz repnz mov les mov jmp adc push push xor add nop out ja sub imul je nop xor pop push sbb ljmp mov iret xchg sbb movb mov stos mov xchg outsb mov xchg inc fidivrl mov jmp loopne or sahf xor jmp jge jns xor push pop mov inc call insb out inc (bad) gs movsb xorl add lds mov pop sub testb sbb repz or push out push pop repz lret mov rorl roll (bad) xchg movsl iret and or test mov sbb ds mov clc cmp cmp inc ljmp (bad) int3 rolb cmc xor push into cmp mov jmp and jmp xor lea push jnp adc xor fadd ja add or or ljmp hlt or xchg js out dec lock lcall (bad) (bad) cs dec pusha and ret push adc out shll fcoml sub pop jp dec pop bound mov outsb pop rcrb insb pop push or in fidivrl pop ljmp xchg leave mov xchg in repnz in push mov mov insb cmpl push int fwait shrb xchg push fiadd daa data16 sub pop mov add gs sti xchg addb shr mov push in or pop out repnz arpl fldt adc subl mov paddusb subb or fs adc arpl mov pop cli fs fcompl jg fwait push mov (bad) call adc in jg add push sub jle clc or mov lcall pushw or int add jge aad cld dec es js sub cmp orl mov push sbb xchg std aaa repz and pop mov out dec int3 inc orb xchg pop xchg mov test dec orl add cmp fnstsw lea jecxz fdivl jg jl xor add (bad) stos mov rcl test rorb subb xchg stc out jmp fwait adc inc popa orl data16 cmp test push xchg leave pop push ljmp sahf mov cs stos out clc cmp daa divb pusha loop cmp pop rorb push sub bnd jmp mov push adc cmpsb adcl mov insl xor repnz push je mov (bad) pop xor or add out and add or xchg xor es insb ja out pop inc aaa fild adc jecxz mov pop pop mov loop jecxz push sub je aam imul ret icebp mov in ret movsl ss push notl push dec mov sbb sub insl jae pop ja push fisubl mov dec add mov sub out shll (bad) push (bad) mov cld rcl inc stos pop push dec sha256msg1 pcmpgtb lock sbb sub pop test push lret sbb mov scas shr pusha loop icebp sbb pop ds push mov mov xchg jmp sub movb jg pop inc xlat mov in inc rcll aad add dec mov test fucomip ja roll rorl xor in lret in xor mov and dec mov or movsl rorl sub outsl xchg bound inc (bad) adc dec ret push cmpsb add je in inc pop push ret jae add outsl subb lret adc cmp out test sahf mov push mov jb ljmp bound adc fild int test dec mov mov jle dec cmp xchg sub push and push (bad) div pushf outsb test jmp and js lcall inc scas dec adc push pop fstps aas arpl mov in hlt xchg fisub jp les je inc loopne mov or addr16 cmp cs mov mov jle out aaa mov enter push stos and fstpt nop mov jmp xor jle rcr or dec xchg mov gs repnz (bad) push mov ljmp adc jp (bad) mov mov xor out xorl xchg jo and je xchg adc xchg shrl cli imul (bad) cmp mov add pop icebp push aaa je cmc mov or mov adc cmpl hlt test gs or incb repz or mov test push les les pop cmc or push dec loopne cmpsl jmp daa imul push out adc xchg xlat cmp push mov out out sub add inc (bad) out (bad) push adc arpl out adc pop addr16 in xor imul in in xor scas jae xchg sub hlt adc pop mov add sbb ret or dec add adc or test add mov push rorb mov mov adc pop sub jnp xorb add jecxz add inc das icebp fistpl push mov jecxz (bad) mov xor ljmp ret (bad) test insl push xchg xchg jbe movsl (bad) mov dec cltd cmpb (bad) adc ret push mov mov pop push test sub insl cmp lods pop inc loope push jge push push fs cmp (bad) pop xchg cmp xor adc jbe xorl fld jo and push sbb dec pop roll fildl lcall sbb out fsts and sbb out push les jecxz or xchg (bad) sub fcomi mov stc jno or pop in sub adcl (bad) into dec ljmp dec aaa lods imul xchg inc mov gs mov adc pusha ret push daa iret cltd mov cmp jb cmc into sub lcall (bad) repnz xlat adc mov test mov int jg leave pop movb je iret sarl add aam int (bad) repnz icebp pop add dec adc in subb inc test ljmp ljmp leave inc cmc push outsb cmpb jl inc mov divl outsl and push mov adcl stc int cmpb inc outsl xlat ret out push leave xchg out sbb cmp loopne push mov dec adc jae xor dec pop cwtl les sbb cmc push dec push xchg mov and subl pusha vrsqrtss outsb fstps or or cs mov imulb jecxz xorb and loop or xor or sub dec mov mov cmovno push pop adc orl pop xchg sub adc arpl cltd aad aaa movsl adc xchg out dec (bad) sub push xor (bad) repnz aad adc pop (bad) dec shrb add pushf das fs fldenv sub lea aaa je push cmp jno mov std out jge add into adc bound push sub lret iret lret xlat stos mov mov or mov cmp xchg inc xchg and popa mov pminsw loopne push cmp cmp inc outsl sar mov adc stc pop xchg sub pop dec insl inc inc pop xor pop in mov fistp (bad) cli jo sti add test cmp jecxz ljmp or pop push je xchg jbe scas xor aad sbb je out ret jecxz out outsb xor push dec push cmp pop testb adc rcll shr out xor inc iret sbb call push xchg and shr repnz fidivl movsl mov mov in mov add aaa inc adc cmpl push mov push es das (bad) xchg outsl lock (bad) imul popa repz pop sbb sbb dec pop mov inc (bad) sbb add pop repnz and iret mov rclb movb loop adc sti or xchg loopne fwait adc decl xchg mov sbb loopne pushf ss and sbb (bad) or mov or mov cmpsl add inc lcall xchg add sbb imul push add xchg pop lahf mov sbb add sbb mov lea xchg out push addl xchg add sahf inc xchg push or xchg orl aaa or (bad) xchg xor fildl or sbb adc fs test fwait out adc or add adc mov sti add xchg es push inc popf or mov pop push push adc sbb pop inc pop or or push adcl xchg negl jmp (bad) call lock test adc xchg add sub data16 or jnp xchg test lock xchg (bad) (bad) or push cwtl jbe fild add loope mov sbb lcall add xchg dec push sbb xchg push popf mov push or add xchg cltd clc pop adc sbb pop pop or add pop pop pop xchg or popf test out aam cltd sub add jge xor jp fs ficoml out cmp flds mov call mov loop sbb xor mov push inc rol addl lar mov (bad) in inc pop loopne pusha cmpsb stc inc xor idivb sub idivl test adc lret adc or push pop test ret push js (bad) ja xor xchg (bad) inc mov push mov int cmp jnp mov push pop mov add cs imulb mov pop push push (bad) insl fsubs popa add stc dec pushf mov mov mov shr or call (bad) iret jno int adc inc mov xchg pop pop and cwtl out lods nop in jae in pop pusha and (bad) clc adc mov daa jg adcl sbb pop jp push adc sbb dec imul int fucomip stos test mov les movsl int3 test inc outsb aam dec push in je mov fs ss repnz xchg pop mov adc in cs add or mov mov xchg push dec push cmpsl cmp and daa (bad) pop cs add dec inc arpl test jl enter dec out inc mov cld js rcrb cltd sbb dec arpl jne dec (bad) cltd fmull mov outsl lret dec jg mov xchg vmptrld popa pop pop lods arpl sti or sub dec dec addb mov add xchg lods push jecxz cli xchg or mov flds xchg jmp in push clc shr or int3 sbb cmc adc dec outsl rorl and mov shl ljmp push cmpsb or pop push mov push pop out (bad) lcall adc cmp fs dec jecxz pop push rorb inc mov jno lahf (bad) sbb out out repz mov icebp lock popf dec sbb xor ret fist jle add adc imul or adc jb ja mov push cli push adc mov stc fistp insb xor outsl rcll xlat imull adc fcmovu or out cmp inc or (bad) dec jge xchg ret sub dec xor xchg sub int xchg cs int3 push mov push jle ja or sbb xchg aad add loop adc mov decb daa push repnz or push cmpsl jb ja sbb popa sbb pop (bad) sar repz inc ret (bad) in (bad) push clc fstp mov push aam cltd sub les loopne stos push js dec (bad) test iret outsb mov xor fdivrl adc sbb sub lcall push cmpl inc push pop inc ficomp int rorb lods dec in dec dec sub jae mov or lahf adc mov push lea xor lods fsubs ja xchg mov pop pusha dec cwtl jmp add lcall dec in xchg adc lods lea idivb sbb test push (bad) leave ret sub mov push mov inc in outsl cmp pop add pop push add sbb push shrb imul mov or jbe add popl jne repnz jle jg icebp iret cmp mov push mov and mov loope xchg or fbld pop fnsave xchg xchg cltd adc jge xor pshufw test sbb dec int fimull xchg inc xchg stc or (bad) stos rorl push leave push imul or (bad) lcall mov out or or out push cs lret sub adc cwtl fcmovnbe lods cld xchg mov aad push loopne fistp pop in push and xor push dec sbb sub cld inc and mov push cltd out pushf and add leave mov and or imul push hlt (bad) and out xlat cmovne enter sahf inc pop or xchg sarb xchg in orl xchg mov loop dec decb test fisttp iret adc in xor ret lret dec jecxz adc mov jle mov pop push je mov push add sub into sbb xchg sub add into xchg loopne std decb mov mov outsb pop insl push daa ss pop decb xchg fcompl nop adc js cli mov xchg cld mov mov addb outsb test jg daa sarl pushl lea cltd add push push in adc subl int3 xor rcr lcall sub mov push dec mov sbbl jo lret fsubs push mov mov dec inc sub leave cltd or mov bound cmpb movsl fcoml popf std inc cmp dec mov push jg mov in (bad) test inc in adc lock test xchg push mov or int3 imul daa out data16 push add (bad) rorl loop jae cmpsl add pop cmp xchg add xor je add mov popf mov jns or add or pop in pop jbe hlt or dec push xor inc cltd sub out std es mov pop sbb push mov mov mov mov inc adcb mov loop out fidivrl mov push loopne in mov jo into inc loop push push repz fistl je mov mov out dec jb cmpsl push nop mov push or lret test xchg dec int cli pop mov enter adc or dec sub adc daa adc lds fwait or lret rcll insb int3 cmpsl pop (bad) mov jnp daa fidivrl movsb push xchg xchg xchg and jmp je jp in mov fdivrs popa loope popa mov xor pop adcl fisttpl mov (bad) popa ja pop lahf cmpsb xchg pushf or push xchg lods mov mov outsb cltd lahf sub pop (bad) (bad) (bad) popf enter out lcall clc push pop (bad) movsb cmp sub xchg pop add daa imul xchg dec mov xchg test push dec out shrl outsb xorl and in enter lret (bad) loopne shlb xchg ficom mov and (bad) cwtl xchg and add shrb inc jecxz dec addl pop mov dec loope push jne inc inc cmp mov pop sub sub cmp pusha add fsubrs mov cmp scas dec jns (bad) push dec leave (bad) xchg (bad) jmp jbe or xchg push mov adc push xchg xor and div pop sbb lcall sbb jecxz lret sub cmpsb and enter and das stos hlt shlb dec or and mov lds add mov jmp movl mov pusha pushl movl pusha movb mov lea jmp push jno outsb fiadd inc jp testl pop mov xor movsl push or or adc movsb pop and sarb push mov nop mov in lds cmp mov outsb xor cmpsl lcall inc jge aad or xchg cmp sub arpl dec sub scas outsl jns xchg jl xor icebp and movsb jne stos ljmp mov or shl sub aad movsl rorb or mov (bad) jns cs mov rolb mov add jmp adc pop inc sub add sar cwtl (bad) sbb jns jns xor movsl pop mov cltd fadds scas push fiadd in scas ljmp push push jge or pop mov pop in es das cli xchg xlat lods dec out aaa out mov xor or scas jns ret sbb cld xor mov push leave xchg icebp pop int3 fwait or jb xor push outsl repnz inc jmp push (bad) test jo push sbb or sbb insl insl les mov xor jbe xchg lret push dec pushf pusha mov lea jb push cmpb push call mov movl pushf push push push mov movb pushl ret fs inc (bad) and pop inc mov dec mov cmp dec sahf ret cli ret dec adc ss call mov rol cmp xchg xchg arpl lcall xchg aam hlt mov adc outsb scas sub adc arpl je lcall loopne xchg jge adc lods repnz cmpsl cmp push cmp out fdivr repz mov adc je shl xchg aaa mov test dec mov mov add dec ljmp sub add inc test sub stos and push inc jno mov push not mov pop pushf setb movsbw mov sete pushl mov movl jmp add pop inc push and jp pop call addr16 and jl je ja jl push sub andb jns sub in (bad) push fsubr xchg xchg int3 sti jnp mov (bad) icebp add sub popf clc push ret inc mov xchg jnp pop test and shlb sub lret mov cmp sbb outsb push xchg imul in sub fldl2e push mov pop ficoml shlb xchg push out mov sbb icebp jle imul arpl mov push jmp stc inc add or xchg dec pop sub adc mov or (bad) lock not add ror not shl mov stc cmp pushl jmp btc or and mov pusha add sub xchg sar push mov btr rol xchg jmp insb lds lahf or xchg mov fistpll dec movsb ret xor cmp lahf dec mov fstps movsb cmp fistl add hlt insb gs (bad) ret rcll clc sbb lods mov loopne (bad) js xchg sbb rcl jmp mov enter push cmpsb xor and call jecxz test movb mov sub inc stos xor (bad) idivl xchg jne xor cmpsb sbb lcall adc mov (bad) xor aaa subl push push cmc dec jp jns mov pop jl push jp nop imul inc and std jge sahf inc test cmp cwtl call bt repnz call pushf mov movb movb pushl ret call jmp mov pushf lea jne shr bsf bt sub shl bsf adc mov rol setno clc add clc clc mov bt test pusha call lea jo pusha stos mov push pushf lea jmp jmp mov movzbl not movsbw mov pop pusha mov pushl ret lea jae pusha lea jmp call call pushf or mov movw lea jne cmc (bad) icebp btc mov push push pushf or jmp lea jne call rol mov pushf cmp push pushf pushf lea jb test clc cmp cmp pushf lea ja and test add test setl ror mov stc pushf cmp call dec push pushf inc in inc xlat xor fwait shr mov repz repz out add pop clc mov aas jne mov xchg ljmp and das inc xchg xor rclb stc lds adc push into and jne pop mov mov cltd sub sar outsl adcl adc jb ja lods es pop xchg add add outsl outsl adc lea jne or cmp lea sub rcl rcr btc mov setle sub shr add cmc cmp mov clc cmp test jmp lea mov lea mov movw mov call movb mov movl push pushf lea jmp jmp lea ja call sbb repz repz fstps lahf mov aas rcrb cmp nop sbb xchg sbb cmp iret sti and lock fwait dec (bad) repz repz push pusha xor xchg xchg adc je jae rcrl push adc repnz push (bad) nop cmp dec rcll dec adc xchg push adc (bad) dec jbe lahf sti pop cmp sbb cmp adc mov dec sahf adc sbb xchg rcll jecxz jo push pop and sbbl shl out add movsl pop or adc xchg mov mov or xchg xchg (bad) (bad) mov xor push adc lods mov repz add in mov (bad) aam mov jg xchg mov sbb adc add cmpsb (bad) out sbbl loope addr16 jbe adc pop aas lahf jo mov ds jg mov cmp sbb cld pop cmp sti pop cmp sbb pop cmp sbb pop cmp sbb pop pop xchg into cli xor prefetch psllq xor pop inc cld inc notl test aaa out push jecxz jl add push sub jmp dec addl sbb adc adc adc punpcklbw push add push adc je dec fsubs or add adc enter cmc fcoml dec mov push xchg sti adc loope xchg fwait addb adcl loope push lahf fwait cwtl sbb lcall fwait xchg adc xchg push adc loope push pop fwait adc pop sbb repnz loop push or test fwait xchg loop icebp repnz xchg push and repnz xchg lahf sbb fwait xchg xchg loop push adc lea sbb loope push add add add add fwait sbb push adcl or lahf push repnz or add add pop xchg sub sub adc repz xchg add out inc xchg push cmpsl add jecxz arpl add pop icebp je lock (bad) loopne add pop sub jp mov xchg xchg push add jge jecxz dec addb setno popf or xor fwait pop xchg test xchg mov sysret repz ljmp mov mov add jne jecxz sbb in pop imul popf xchg daa or pop sahf mov pop adc pop push testb push pushf mov add arpl stc inc (bad) adc dec push pop xor pop mov fsubl dec dec pop pop inc hlt push in movsl lods cmpsl add insl inc adc push mov je mov add xor xor add jg adc mov enter xlat cmpsl mov rcrl (bad) test test bound sbb icebp adc lcall sub cs jg lock test sub mov leave and or icebp rorb adc daa mov lods adc incl hlt (bad) and inc lahf adc arpl add fnstenv cmc (bad) not nop adc mov jge mov xor mov xchg cmp call xor das leave mov cs mov mov xor lods inc mov in cmp lods jbe pop fwait daa iret icebp repz add nop push mov mov pop mov adc dec test add ljmp mov mov dec sti mov mov test cmp xchg mov sub pop mov pop (bad) or data16 add cmp mov aas xchg add push addr16 lret adc mov adc pushf repz test ret pop pop xor adc jb lahf adc xchg adcl xchg mov and das dec test lcall mov (bad) adc ljmp sbb or pop adc daa frstor xchg je pop and adc sbb add push ret pusha in cmp jl mov xchg dec pop dec popf adc repnz out stos sbb ret mov push data16 shrl xor ret outsb je mov jmp and inc mov adc push mov adc xorl fldl adc sbb push ret (bad) ljmp nop mov call cli adc sub incb xor jae test sbb xlat xor arpl mov mov dec test inc adc int push mov push mov scas mov in shrb xor sbb dec movsb lea xor adc push fcoml mov mov pop inc cli sub addr16 dec adc jp dec xchg loop and aad rolb xor and xor mov adc or adc mov rolb pop jnp adc cmp stos sbb xchg adc in fiadd les sbb fnsave insl fsubs in adc or hlt sub adc cmp mov adc out inc popa std xchg insb enter insl aas adc push add xor ds shlb add cmp cmp xor adc or jae loop push loopne sbb adc fs jle add ds outsb mov adc push stc adc xchg repz cld or push sub jo fs adc les cmpsb cmp lock xchg pop (bad) adc test push mov pop mov push push mov js sub aam inc adc add push leave data16 xlat adc xor sbb lods xchg xor add lret adc add push cltd movsl jl ret dec xor sbb xchg scas dec adc syscall pop aam jno push in and mov and and lcall jbe sub mov gs enter aam adc (bad) or mov popf and stos jle out movsb jg pop lcall (bad) outsb adc lcall pop dec dec mov or arpl or leave and popf cmpsl adc dec stc cmp pop icebp aad xchg jp xchg adc roll adc mov jae stos movsb and adc (bad) lods mov fisubr rorl shll mov xlat insl jno mov mov push or test mov cmpl fisttp (bad) inc and sub out mov sbbl stos shl adc adc iret adc inc hlt insb lahf cmp dec adc mov xor xchg aad pop ret mov xor lock adcl push aam jo ficom or mov ret rorb inc jb mov xchg (bad) or cmp and mov int rclb fwait xchg sub adc jl test inc xchg jp xchg repz js xor pop loope lea (bad) mov mov addr16 dec out pop cltd adc cmp adc sub mov xor push adc add push inc inc and adc cmp cmp sti cmp rol scas dec sub adc or mov adc insl mov movsb ret scas cwtl jl jns pop loopne mov in jle fldenv cmpsb out (bad) mov sub mov roll (bad) (bad) aam or mov mov adc xor sub insl into push add clc adc adc or loope popf adc in rcrb adc out adc and jnp jge movlps je pop jmp sub xor pop or imul pop movsl xor jbe mov dec adc add ret in adc xor xchg adc lds pop (bad) dec jne loopne push pushf rcrb mov pop aaa (bad) and jbe ficom loopne ret dec mov outsb mov jmp mov ljmp or movsb add aam int out and mov mov jg fdivp (bad) shrb lods mov sarl aas (bad) je (bad) push in adc shrl push adc ret adc mull imulb stc sti leave addr16 inc pop mov (bad) sbb je in adc dec cmp aas rclb dec push sub (bad) adc lods adc movsl mov aaa mov or jl jg fwait xchg adc adc adc or pop fwait aas jo mov push mov sbb test int3 push push bound inc into adc mov add sahf pop or adc ljmp push daa add dec pop cmp pop aam or addr16 and in lcall movsb in ljmp cltd adc jle loope and adc jp (bad) out into adc in test adc jge add aam adc bound loope push push rcll sbb (bad) sbb dec adc and adc mov cmp jge movsb fidivrl add push add jbe cmpsl mov sbb (bad) shl fnop pop adc xlat inc out dec pushf cmp xchg pop (bad) xchg aas adc hlt xchg mov sub test add jo nop xorl movsb mov pop and ficom jae cmpsl test test dec stc adc adc fisttp pop xchg or loope cmp lret sub cmpsl pusha pop cmp mov mov push adc lret and adc rcrl repnz push adc xchg (bad) shlb jg scas in add xlat imul lods jecxz push ljmp adc addr16 jne popa fmul aaa rol mov or mov je ljmp push fisubl lds scas roll adc cmp (bad) repz add inc xor adc mov pop shr or movq xor enter sub mov adc repnz hlt xor add adc lcall push dec push or adc pop jecxz (bad) das (bad) mov stos sub lock sub aam mov inc popl cmp mov adc loope adc das xor fistl outsl ja mov and dec je jnp mov aad mov add lcall imul add repz fcompl incb nop or out rolb or add adc mov cli inc mov xchg or mov jle mov (bad) xor dec int sbb pop nop call mov punpcklbw cwtl (bad) out adc pop jbe mov and enter clc nop test pop add std test int3 or scas pop add pop out stos repz outsl movsl pop aas ret or cwtl (bad) xchg cmp and clc std in mov (bad) push mov sub or adc add xchg sbb pop or adc push in lea (bad) add adc pop inc cmp imul adc daa push jns push mov xchg popf int pop ss adc loopne adc adc and inc leave push out repz fwait out into add mov inc and insb fisttp or mov adc adc add jae insl pop inc xchg jle jae adc pop es out mov scas icebp ss ja mov js jno les mov dec adc cmpsb lock pop dec mov mov dec inc or adc push mov xchg cmpsb fs popa into mov test fwait dec mov xchg inc (bad) daa sbb adc (bad) xor stos dec xor adc out dec out add movsb jae repz sub adc push add mov sub hlt int pusha (bad) push mov pop fadd scas pop (bad) jecxz sub aam jns leave xor mov mov mov adc xor cmp inc ljmp pop test pop out pop ja lret inc adc jnp inc xchg mov mov sub test fstpl bound xchg call insl ror stc popa sahf mov cld movl repz in mov or dec jne add xor fidiv mov pushf sub nop xor repz ret (bad) inc cwtl pop std (bad) mov mov mov jp subb adc sbb jb lea outsl ljmp test into adc movsl bound sub inc jg pop adc repz mov jmp stc aas ret xchg lahf adc mov (bad) dec mov xchg mov push sar dec or jge adc into sarb sbb adc adc sub dec pop adc mov adcl inc fwait inc pop test push push lahf jbe mov or lds push or inc push clc and jae adc sub inc adc sbb call ficompl adc mov pop or adc mov aad scas jge fstl iret sahf rcrl xchg xchg push jp cmpsb or daa pop subw cltd adc mov sub rcrl cmp (bad) in cmp pop cmp push repz adc pop call mov mov adc mov mov es xor mov aam mov into pop jno dec xchg cltd cmp sbb (bad) cmc das adc add jno lods loopne jge jp mov xchg test or dec sub insl jae daa int in add mov adc pop pop cltd xchg push inc jge adc lcall adc cmpsl cli fs scas or adc dec xchg and inc adc sbb mov scas xchg int flds bound jmp pushf mov pop out scas lahf pop mov push call pusha hlt sbb cs stc or adc clc cli mov repz adc repz fisttpl orb mov (bad) mov scas push and packssdw loop jne (bad) sti dec add (bad) pop pop push js sbbl inc adc cmp xor insb or push sbb rorb pop sub cmp pop and add inc jb mov ficompl aad rclb ljmp push push add pop jecxz xchg hlt repnz add mov adc cltd pop insl stos adc mov jmp mov (bad) add adc xchg xor mov jb or adc push mov adc cmp xchg adc xor mov sbb repz jge int3 cmc popf mov adc and xchg adc stos (bad) mov lcall push sbb in jmp adc xchg xchg cmp add test pop xchg leave jnp enter push jno xor or inc mov add out icebp out cmpsb sbb sbb incl (bad) adc adc cli adc pop mov lcall mov inc and mov pusha enter push pcmpeqd std sub mov inc out mov or or ret stos rorl ljmp jns xor adc and es xor adc jns sahf rorl fldl xorl movsb pop mov adc mov imul inc mov int and add mov js pop push jnp in aam sub arpl lea out lret and adc dec add and xor (bad) adc cwtl pop or adc (bad) or mov push in push jbe mov je inc arpl rdpmc push bound js mov xor adc adc aam shlb cmpsl sbb es jge xor fmuls xlat aaa bswap pop jecxz mov or pop mov adc xchg push adc add icebp pop and cld jae sbb sbb stos lods imul push adc add xchg cmp lock and jns mov fimull rol mov mov (bad) sbb (bad) jmp data16 adc cmp or cld enter mov push mov adc scas add aaa or sbb fsub dec stos adc ljmp test or pop adc push mov pop (bad) outsb cmpsb mov (bad) shrb sbb sbb sbb repnz lea addr16 add aaa dec ds or lret rorb loope pop mov adc and sbb sub or mov jecxz leave pop (bad) das dec addr16 inc inc cmp (bad) lret jl stos shl mov fstpt push fild repz mov pop adc or inc xor sub add pushf pop adc sbb mov sub out add aad imul enter pop sub hlt pop fadd insl mul sbb fdivl outsb jg push movsl xchg in repz or fbstp sub mov push out jl out sarl sub adc fs jne shr sub or mov ror add pusha shr cmp not mov jmp fistpll jae repz inc rcr insl inc pop jle sub cmp pop jge push push jno sub daa xacquire fildl icebp ficoml sbb jnp,pt sbb xchg push out scas addr16 sub and sbb or inc xor cmp jmp int sti dec pusha sbb (bad) lret ljmp adc and jbe jo ljmp bound mov adc push pushf mov pop loop daa ficompl xlat dec sub sub pop int dec mov addb dec and push js mov mov (bad) incl dec fmull leave mov test mov jmp mov mov pusha pushf pushf pushl ret jge pushf pusha sub lea jne pushf inc lea push lea call push call inc jg pop cld pop inc jg lods lret insb jnp aas sbb mov es jle movsl pop adc mov test std xchg mov bound sub call mov sbb jbe xor (bad) pop iret lret outsb push jns push lods inc mov stos push mov sbb js repz mov rolb sub imul loope jae xchg addl mov insb ret or std pop inc xchg imul loop or xor cwtl push aaa lahf mull dec adc and mov xchg seta js inc (bad) (bad) xlat into sti lret hlt jecxz jae pushf mov cmp testb clc mull fdivl adc dec loope les lea push js test add fild stos jae xchg ljmp out out test jle repz jge (bad) xchg loopne stos out inc jne mov jnp cmp lds (bad) ror inc pop stos jle mov inc pop mov int je adc xor rorl push jecxz mov cmp pop push test inc inc ss adc fs call push call mov pushf movb mov bswap cwtl movl lea lea jmp push push lea je pusha mov push pushf mov jmp setle jmp not lahf lea jmp bt jmp jmp lea jae clc stc cmp pushf lea jae cmc cmp jmp je xchg pop inc scas jecxz fldl2e cltd mov ljmp (bad) mov and dec jae dec inc shll dec inc mov sub loopne mov mov aad and push ja cmp xchg push loopne bound pop mov mov popa loope inc mov jecxz mov push test inc mov and inc iret add xchg cmc hlt xor and push loope mov push incl inc fldenv je and or in aad pop pop in add add insl into movb in and or insl pushaw rcll push insb scas or cli mov rcrb cmc add (bad) cmp and push imul js or pop jmp push arpl pop dec fsub ja push jo (bad) imul loop or jmp popf xchg stos add jbe clc pop inc pop sub xchg enter push inc jp jae jns cmp inc jne xor movsb pop jns jg icebp test pop xlat stc xchg and cmp mov add fcoms xchg push cmc jns xor scas inc mov push mov xchg sbb (bad) imulb inc ja mov push and push push sub faddl dec jno scas scas or (bad) ficoml inc cmp add sub out xchg imul sub mov mov add (bad) (bad) jno add pushf call lea jp movb cwtl push pusha mov pop cwtl lea jmp lea je movsbw add ror shl mov stc add cmp clc mov not call push adc pushf pushf pusha jmp movb pushf pushl popl mov push pushl pushl ret cmp add push pushf mov mov lea jmp clc ja pusha test add mov lea jne push pusha pushl pushfw popw bt mov pusha test push xor stc stc call pushf lea ja bt imul stc stc stc pusha add push lea jmp lea ja bt call movsbw mov movzbw lea call lea jb clc test bt stc cmp push call jl inc lahf cli pop inc mov xor je and std (bad) add shll je xor jns sbb xchg arpl test sti xchg jne push pop cmp cmc ljmp dec jmp xchg loop ljmp sbb sub pop jns fsubrl adc push sub mov fisttp sbb out in shll mov repz out xchg add imul movb sahf into jns sahf mov mov mov call pop jbe sbb jne pusha mov clc bt clc pushf add pusha mov movzwl lea movzbw xor mov call js ljmp shl or fidivl into xor clc iret mov cmp sbb outsl out adc dec gs pusha aas sbb pushf cmp daa jecxz mov mov xchg and in xchg (bad) push add mov dec dec shl stos jae mov sbb xchg pusha insb pop and jne xchg jns sbb pop mov xchg pop mov or insb js das mov adc iret dec jecxz jne out and xor adc push ret aad pop data16 mov sbb fldt mov xchg push clc movsl imull jmp bswap pusha movb lahf bswap movsbw movzbw mov call mov pop inc sahf arpl scas sbbb or push dec pop imul push popf cld push inc pop jp jbe sub xchg inc pop inc jo call sub jnp jle inc je loopne or js adc je sub cmp fmuls lods cmp std pop xchg mov clc shrb mov push jae outsl das into add leave pop mov dec into in gs xchg scas es sub pop push pusha iret dec or mov sub and xchg mov jecxz and rep sub push adc fmull dec in stos pushl pushf call stc xor (bad) add inc ret subl mov adc (bad) ficomp mov andl popa stc sbb out fs add push cmp sub in nop push cmp inc shlb clc iret inc cmp lcall scas inc mov adc jmp jnp in popf pop (bad) mov and ljmp pop fildl movl dec nop das lea xor xchg out xlat int3 jl push (bad) push or inc ss loop adc les aas sbb pop mov es add loope jecxz fs ja stc jmp lea ja push jmp pushf clc clc repnz lea jge push pusha pushf lea jne bswap bswap movsbl movb cwtl push bswap lahf lea call into push inc stos sbb ljmp xor das adc or cmp pushf repz clc xor dec or gs xor mov sbb shrl out pop inc mov imul mov or je (bad) mov fstpt sub mov mov and rcrl push sbb bound pop mov or push dec xchg and xchg inc lock push pusha ret dec xor sbb dec sarb sbb inc adc js mov faddl and ss or mov push push pusha pushl lea jmp call jo pushf movw lea jb bt cmpb jmp call movl pushf movw mov movw lea jmp not call dec btr bsf mov bt push test cmpb pushf lea jne btc mov stc sub daa mov cmc sub add ror mov bt test test jmp call not bswap mov cmc cmpb pusha jmp scas mov inc add insl hlt cmc cmp xchg jmp sbb mov out fldl mov mov xchg jae divb mov movl push sbbl cmpsb pop lods xor mov xsave cmp jae jmp mov push aad hlt imul or scas push xchg inc mov add lea je cmp pusha mov or pusha pushl jmp pushf pushf call mov add shr ficompl arpl mov mov add pop (bad) xchg jae cwtl dec push push push (bad) sbb out jnp inc outsl outsb je bound ds add inc test (bad) or dec cld out sbb lds ja cmp xchg outsl xchg bound outsb fcmovu inc and or sarl in jne (bad) int3 push xlat jno (bad) repnz mov test bound add push pushf pusha lea jne sets movb setne movsbl mov pusha mov pop pusha call call add mov add mov aam or int3 lret clc push pushf add outsl fcoml cmc sarb orl call xchg fistp sti mov mov add fs int addr16 pop xor int push push adc fwait call or (bad) mov pop pop add sbb movups stos or jns jmp lret push sub scas push aaa mov jecxz xchg (bad) roll mov or popa xlat lods adcl jle dec dec mov jno sbb imul mov push ss push adc scas ja xor xor sbb adc sbb aas nop dec sarl out lods xchg fimul or push test rol cmp sahf and cmp int3 mov repnz sub test pushf pushl popl push cmp jmp imul jmp call movw lea jae bswap setne bswap lea mov pushf lea jmp repnz push pushl mov push lea jne lea mov pusha movb pushf pop movzbw not mov movsbl lea jmp pushf mov pusha pushf mov mov pushl ret lea call stc pushf pusha sub pusha push lea jne call jmp lea jne jmp shld rol inc mov clc test jmp hlt in leave pop add inc jp rolb cmp pop mov mov enter in inc lock jnp out xchg rolb fwait les pop pop xchg scas cmp rolb add hlt cmp add xchg test mov adc outsl call xor stos js jg sub sub push xor mov xchg mov loopne mov pop mov lds mov add mov sbb mov adc mov es jmp add jne cmp dec dec dec xlat mov lods mov or xchg pushf movl call call (bad) sbb add inc xor add inc cwtl inc arpl mov or sbb in shrb and lods or aaa and mov enter push push subl lods das mov mov push inc mov in mov xchg push dec (bad) or sub icebp push mov xlat lret arpl pop pop cld cmp not movw lea bswap mov jmp mov movb dec pushf push jmp movb repnz pushl call bswap pushl bswap mov pusha lea pushf movl pushf mov push pushf pushl ret lea jae pushf call call jmp ror jmp cmc or call xor add and push pop jg push dec bound dec roll rolb sub leave xor or mov cmpsl stos ss and cli mov mov in inc mov daa dec mov fcmovne fbld into mov inc (bad) lds dec ret lock jle cltd ds lods (bad) mov icebp cmc ds xor enter cmpsl mov rcr xchg insl fldenv pop in dec cmp xor nop push adc ss rorl fstpl inc jns jno fidivl outsl mov pop leave ljmp movsb ret fcoml sbb push sti jp aas (bad) jae xor adc sahf push add mov cmpsl xchg mov inc lahf or dec cmp and ljmp jge fisub sbb lahf mov and push std lods mov mov pop ret jmp sarl push fwait push mov bound jae aaa mov (bad) xchg (bad) push rorb adc inc push xchg xchg (bad) je out fs xchg call adc jg adc adc push mov (bad) xor and enter mov pop nop inc xor pushf (bad) fidivrl mov dec and es inc lret (bad) imul (bad) push test cmp jp adc jg fs ja call stos mov push push add (bad) xchg adc mov bound push je fstpl lahf mov das data16 (bad) or inc xlat jne jae icebp lock add (bad) ftst push mov mov mov cmp sub mov push movsb jb enter mov unpckhps and mov lods fist mov call pop stos pop push gs sub push cld addl (bad) dec mov xor inc outsb movsl inc mov aam pop iret inc adc inc into push lods aaa xchg out inc lret scas mov bound jno add fucomip icebp push adc pusha call push add sbb iret out lea and xchg imul xor aam (bad) mov add pushf or fcoms jo pop mov dec xchg or jne mov fs addr16 jl mov lds jecxz xchg outsb out mov pop xchg xchg add jne insl push jb cmp les (bad) popa (bad) xor mov xchg push stc pusha scas imul aaa xchg xchg or mov test cmp mov sbb jnp cltd out fist daa scas inc testl inc push dec outsb outsw add add hlt sldt iret cmp pop inc jne lods (bad) mov test dec pop and xchg mov inc test inc bound adc mov push and push test dec xor es xchg (bad) cmp fs xor int lret in jle repnz das mov or sbb mov add out mov fisubrl xchg scas cmp dec data16 push ljmp addr16 jb or jmp mov xor mov (bad) mov aaa fisttpll adc adc lods lds jb lock shlb lea je push bt bt test sub pushf pushf stc cmp pusha jmp cmp jae cmp pusha cmp call cmp cmp or pushf lea je clc clc pusha cmp lea pushf mov mov pusha pushl ret sub mov cmc stc stc pushl popl cmc push cmp test cmp push call pusha stos mov pusha mov lea jmp jmp adc call dec (bad) pop orl inc jbe add and fwait arpl idivl push xor xor mov push mov mov mov xor outsb mov add pushf roll inc mov pop mov and sbb dec dec mov jbe (bad) clc daa out je lret mov adc cmpsb ja mov and pop dec and pop jmp pop jmp (bad) loopne push push push jge push push stc loope lock cmpsl jns ret push dec clc addr16 out setge test cmp stos sbb push jne xchg mov in sbb push sarl inc loop pop popa ds xchg mov jns ret jne lret mov mov xchg xor call (bad) cmc test adc jne sti cmp cwtl lods and xchg jns pop or mov adc gs ffree pop sahf test adc push lea jb jmp jmp setl mov cmp clc movl bt test pushl push pusha pushf lea je bt clc sub push movb cmc cmp movl call pop pop rcrl call shrb (bad) (bad) call cmpsl js aam in sbb (bad) sub loopne in adc cmpsb cli mov (bad) push in xor sub sbb int3 jmp dec movb xor lock inc mov or mov cmpsb xchg (bad) push dec jge (bad) lea mov in daa mov loope outsb stos cltd push or popf or jp push push pusha ret ds lcall mov jb popa push cli xor jae fs xchg pop mov adc inc push adc outsb and cmp arpl fwait xchg loop aas mov jae (bad) xchg mov mov jno movsl cld in aam rcll stos sbb cmpsl ja xchg cmp dec jecxz out lods sar insb fstpt or call out bound fisubr int3 arpl imulb outsl jg int3 pusha ret or sub clc pop jno inc push testl jmp je jg test mov sbb mov adc cmc sarb lock cmpsl adc xor outsl ret mul push sub xchg push insl dec fsubs mov sub or add pushf bt pushf stc cmp call call pusha mov sub pushf pusha pushf cmp jmp jne pusha call movb call bswap push call stos pusha sub into (bad) mov dec jmp mov inc jae cmp dec iret out (bad) dec and add loopne das add scas sbb sub sub frstor andl push call jo xor int lret add cltd or mov out sub and mov clc jp clc pop push jl cmp cmpsb in aas push lcall add xchg jl das iret push aam cli add lods shll jmp sti imul loop xchg shufps repz pop pop push aas stos shlb push nop loop test inc push lcall fs jae or rol xor pushf mov bsr mov add rcl mov bt cmc call movl jmp pushf pusha jmp imul pusha movb jmp add inc push es inc stos fiaddl inc (bad) repnz scas xchg inc jle aas push jnp mov ficom add cmp inc add (bad) push jno rorb test jne pop adc inc lahf shll das sbb pop std push push or test dec pop or je (bad) cmp push sub mov dec push lods and mov or lret cmp and icebp outsb sub lahf xor imul test cmp add mov or sub dec test jp sbb xchg in jnp push in lcall push imul incl dec call out add push add lret fsubrl mov fisttpl cmpsl nop pop sbb mov xchg sti pop cmp movsl sbb push add andl es sub pop push addr16 in push and addb xlat negb roll std xlat xor pcmpeqd xor mov mov ljmp cmpsl out inc shl faddl xchg cmp sub xchg push jle adc ja mov jbe xor xorl popa loopne xchg sub loopne mov nop mov jae add mul pop pop data16 jo imul movb add push pushf lea jmp jmp call cmp call clc mov bt test test movw movl call push call sub cmc pushl popl cmc pusha clc cmp pushf movb pushf lea ja and sub push pusha cmc btr lea add add inc not rol mov call xor in add ss fwait imul ja sub inc mov mov (bad) daa sub test in jb push pop sti dec lret loop or or xorb sbb fidivrl ret ret and gs cmp cmp and xor or mov insl xchg xchg mov scas jo add sarl adc pop push (bad) and sub stos lods xor xor push pop hlt mov adc out stos mov fwait inc jbe cmp push mov push xchg xlat mov or rcl popf xchg cmc or fisubr cmp cli adc inc rolb add jne lods jbe pop test cmp jns and mov fdivp or subb ds jnp mov fcmovbe out ja mov out adcl test and out imul mov push scas sbb pop loopne xor push movl mov mov leave pusha in inc leave clc pop mov fdivs adc outsl xorl pop jp bound dec cwtl pop arpl in xchg (bad) or call mov jmp lea jb cmc cmp cmp cmp jae push push movw lea jae test setp bsr and mov pushf cmp not mov shl mov mov stc cmc sub test repnz pusha lea jne movzbw (bad) icebp sbb mov mov rol sub lea test or mov cmc sub pushf pushl popl call and loop,pt add cmp xorl in fstpl (bad) hlt mov pop neg xor xor out dec mov push adc cmpsl inc test stc icebp mov add xchg js ss lahf add into sbb imul lret pop xor lods mov pop push sbb stos inc xor xor fsub jmp insb fld or jo lods insb sarb cli into icebp and out out insl mov out xchg fistl mov dec xchg xchg test orb sbb (bad) lahf ja adc and jb pushf mov call add inc gs outsl fs gs popa outsb fs gs add leave jmp pusha lea jne rcr mov cmc sub bsf shrd mov clc sub clc call add call scas push xchg dec adc inc push aam fadd mov adc addr16 and dec into add mov or push lds sub lds sub movsb mov dec inc push or push cmp push imul and inc jge out dec and mov stos fsubr mov lods lcall ss pop cmpsb fwait test jae or push rorb and mov icebp push ljmp mov into sub xor add (bad) shll mov in aad in inc rorl test add scas push aas pushl je cltd mov or adc sbbl ljmp adc adc mov rcrb pop xchg push or mov cltd repz and or cmc lahf in mov imul push fstpt adc leave xchg pop pop cmc addr16 inc out popa dec jecxz cltd lods adc cli sbb xchg ror test mov or sub call pushf call scas jo or xlat and ret ret mov or movsb adc mov fucomi pop out std xchg mov push neg cmp add dec xchg mov inc mov xchg pop lret ljmp cli sahf mov or ds jnp push daa sub push xlat xchg add push sbb (bad) xchg xor in fwait sarb push aaa mov xlat ds lret mov sub sbb mov cmp mov sub cmpl mov dec lods xor (bad) fsubp push enter into jbe jno std fisub sti push mov sub sbb test repnz pop mov pushf mov adc or mov stc sub inc inc fmuls mov sub ror daa in sbb jnp add cld outsb pushf mov out and inc mov mov jnp in (bad) push icebp xchg out jmp int3 dec add test mov mov xchg in fstps aas iret push cli mov sbb fisttpll mov test mov cld sti shll fisubr mul fdivs fild sbb sarl pop fnop fucomip xchg xchg push aaa xchg jnp xor aam add add lds icebp loope repnz lret (bad) nop push cli sub in mov sarb je movsb mov ss sbb add mov and inc and push int3 xchg jecxz popa in xchg adc dec hlt mov into inc cmc outsl repnz jge cld mov inc cwtl push xchg outsl sti sub call test ret jae (bad) lock push mov add (bad) jmp enter not lahf push jmp push lea jne pusha pushf movb cwtl bswap mov movzbw lea pusha movl push jmp add bt pusha jmp or push ret inc in and cmp (bad) roll dec ret clc jg dec je inc inc jae xor mov add mov adcb sub mov mov ficoml je imul sub jle xor int3 pop mov or mov fldt mov mov bound popa aam out push clc xchg inc jge push aad inc sbb jb test push lock addr16 sbb adc shll dec xchg push call lret fcomps add insl xchg jge mov dec push or int push jge push mov push xor pop shrl aad dec cmp lret imul testb push and add push mov xchg xchg mov pop xchg xchg mov xchg jnp push lret pop repnz and popa or jmp push ret or jne dec in mov sub adc adcb mov pop in add lret scas mov push jbe enter mov bt shl pushf lods mov xor pushl ror movb pushf inc push clc pushf xor pushf push push lea call push cmp mov jmp lea jne movzbw pushf movb movzbw cwtl movsbw mov push not not lea pusha push mov movl pushf mov pusha pushl ret movl push mov mov movb push pushl ret sbb push mov xor add inc jg sbb mov and lds jp xchg xor dec and dec jp push sub roll jmp sbb inc lods fildl int3 cmp les mov push outsl push cmpsb cmp cs push lods sbb mov and fs je bt cmp bt sub pushf cmc pusha cmp pushl jmp push pushl jmp mov add je xchg push sub aas cmp mov sbb push std rcrb sub mov inc mov mov and jmp xchg or mov xchg lret and (bad) mov ljmp stos fwait mov sbb iret (bad) adc mov in dec leave mov dec ss test dec xor mov fdivl dec cld (bad) jp rorl and cmpsb inc inc mov cmp rorl (bad) negl fdivrl repnz rorl in imul xchg jmp mov adc or stc imul xor pop mov adc imul lcall and cld int not mov movsbw pushf jmp mov add rorl gs inc xor inc mov jo pop mov push popf or pop aas pushl jle xchg das pop imul test (bad) rcrb iret cmp cmp jecxz mov enter mov mov sub test pop inc lahf bound jg inc xchg mov mov iret imul into mov les lds pop leave jmp cs jb add rorl inc stc push mov and xchg or insb push movsl or jg sbb das inc push add bound cld arpl pusha pushf lea jmp lea jne pusha push pushfw popw stc call mov pushl pushf pushf pushf pushl ret imul stc stc cmp add pusha lea jmp call cmpb jmp mov jmp cltd or add add xchg adc add insb adc add add dec (bad) adc add add jno adc add add jns add sbb add adc add cmc add add add jmp movb lea call call repnz movb pusha mov push lea jne call mov data16 icebp or int jb (bad) (bad) cmp pushf pushf push lea ja stc sub jmp movzwl push mov test stc add cmc bt cmc pushf mov bt test jmp pushf mov inc jmp lods lahf call and ret push mov inc mov or aaa mov das scas pushf (bad) hlt mov xor (bad) mov pop pop mov dec jo in mov xlat aaa test mov out xchg mov lea aam (bad) pop aaa (bad) cs cwtl add fadds cmp cmp xor xchg in or (bad) and jl inc sub mov mov dec jbe lods fsub (bad) fldt push out mov nop movsl int3 dec sahf adc push repnz std insb mov xchg dec adc push jb fcompl xchg ret enter pusha lea jae test pusha clc push xor movb lea call call leave push subl inc dec mov fdivl push add cmpsb mov xor sbbb dec les stos iret dec and repz imul lret stos add adc or add das xorb sbb pop in add lods push clc pop adc mov add mov adc dec mov mov push stc out movsl out data16 and ret cmp (bad) adc js stc inc add inc xchg push jne test mov stc jnp dec inc insb rcrl jmp jne add add adc int dec incl push lea je cmp test add cmc stc cmp call push push inc push xor cs insb add add jecxz into pop lret adc lods cmp fisubl cmpsl (bad) loope call cld push es sbb loop adc loop addb stc orl xor jle div dec mov fdivrs pop mov mov insl fs (bad) (bad) idivl xor mov fsts sbb rep lods jne loop shrd data16 repz lret jmp ret pusha cmp pushf cmpb jmp jmp jmp pushl lea jb pusha cmp movw cmp jmp popa sahf fmuls inc imul pop xchg push aaa mov ficoml or test popf (bad) movsl jbe inc sub mov dec mov dec mov or cmpsl pop dec outsl jmp mov mov inc and xchg add jge sbb cli push sub test insb jecxz dec pop mov dec cmp sbb sahf mov or out dec sbb xchg adc or pushf sti push fisubr mov push daa add xlat adc mov je add in ret call pushf cmp xor insb jecxz jmp mov xor pop jae pushf or insb test je push scas aaa inc gs dec adc push (bad) stos (bad) sbb mov jg and jns pop lods (bad) iret shr shl lret sub cmp xchg pop pop int cli jbe mov sub mov roll push cs (bad) aas mov mov sub xchg xor dec int3 sbb push add stc jg mov das pop test jnp mov xor xchg shr dec std cmc fisubr pop mov lods adc and adc (bad) daa sub jp pop gs xchg cmp imul sbb push xchg xor push xor lcall popf xchg pop mov stos mov addr16 int andb or push test jo sub mov pop and stc jo in or pop (bad) sub sti push iret xor aam rorl and inc pop jb es mov mov (bad) xor loopne lods cltd iret decb pop idivb and popl sub mov aas jp lea jle mov cmp xlat enter and and (bad) imull das mov mov fsubp jne out sbbl outsb jmp shl inc inc pop (bad) pop xchg cmp mov mov and mov lods pop stos ss add push xchg aas mov mov outsb xchg rclb pop adc mov cmp and inc fimull sti lock stos test add pop mov xchg aaa decb stos add and xlat subb leave cmpsl xchg xchg cmp jno sahf mov add inc mov and (bad) std add in xor cwtl cmc push mov test dec xor pop mov jnp insb xchg cmp lret cmpsb andb or divl or and aas cltd int3 lock (bad) int sti push adc loope out sub or stos adc into adc add enter cmp push lods sbb jae mov andl fdiv adc das jg imul call jl sbb xor jge or js pusha mov in fisubrl in xor (bad) movsl cmpsb lahf mov (bad) (bad) pop data16 dec lret mov or xor mov mov aam test jno (bad) shlb sub pop mov adc pop pop imul jmp pop xlat subb dec push iret push inc jle arpl dec inc xchg inc push push aaa outsb cmp adc pop mov enter mov add (bad) mov call xor xor imul mov jns fdivrl pop mov xor les dec lret adc pop cmpsb and sub sub jnp ljmp adc adc or inc sub or and mov into xor enter inc push fldt pop add jb sete lret imul xchg loopne jecxz in jns aas cmp xlat add or xchg mov inc cmpsb sbb jno sbb dec mov sbb (bad) or rolb lods inc addr16 sbb adc nop adc in addr16 lea jne shr xor mov and mov rcl sub inc bswap dec not mov cmp sub cmp pushl pusha call sub add call push gs xchg push inc push add and xor out out mov or lods and jg mov (bad) and test (bad) int3 pop adc mov les pop sbb outsb inc mov call (bad) adc outsl fld1 cs test push dec (bad) mov jnp mov adc inc push xor insl loope shrb (bad) dec aad std sar daa scas xor sub popa pop sarb pop les push test push mov sbb dec jmp mov rcrl lea push movb movb mov jmp cld icebp pop xchg inc mov lock mov mov mov ret sahf cmp repnz gs xchg mov imulb sbb jns xchg cmp push cmp into pop cmp scas jmp imul jae dec pusha sbb rolb lea pop (bad) in dec test hlt js xor orl mov xchg imul (bad) add mov xchg mov std and dec inc mov inc out fmull xor dec js jo cmpsl xlat in mov jge and dec aad sahf sub and mov xor push jnp mov mov adc mov cld mov and inc sub mov inc inc xor mov mov adcl xor iret gs xchg loop popf mov sub mov (bad) loopne repz call imul stc es xchg pop and fsubrs or xchg sbb mov or test mov pusha sub aam aam btr mov not dec add setnp clc mov test test pusha test jmp pusha jmp cmpb add inc xor xor lods and mov cmp inc dec jecxz mov call mov mov out cmp mov mov movsb repnz jp ret mov fwait inc adc fbld imul das hlt and push aam insl sub leave pop iret (bad) and adc mov jmp inc push mov js mov dec xchg sub leave test or jmp ret pop gs adc jge adc and arpl (bad) add movsb das imul add pushl imul clc pushf mov jmp pushf jmp mov faddl add int pusha mov adc std into push scas (bad) (bad) iret push pop outsb xor jnp into sub popa pop or loop add inc push (bad) and xor mov adc jo push or fcomps dec xlat push (bad) in xchg bound mov xchg mov loopne or movsb push nop (bad) pop mov pushf or add hlt lcall fdiv fsubl data16 sarb add mov jg pusha dec push xlat xchg and shr add mov sbb ffreep push pop sarl ss out test push fbstp and pop clc and pop hlt jmp arpl or lds repnz add hlt jmp dec insw pop popa jb bound sub lret hlt jne,pn sbb pop fsubrl subb jmp add jnp lock mov bound sbb das xchg inc mov jno cmp movsb inc push (bad) pusha cmp xor jg cs test xorl pop addr16 sahf rorb xchg sarb data16 stc sbb cwtl movsl mov stos add std push jmp fmuls dec xchg dec xor je xchg mov cli push dec lock ja fs shll imul aaa inc mov test (bad) mov xor push (bad) jbe popa enter push stc fidivrl or add (bad) ss call mov mov stc call pop sbb sub inc push and in add lock or fstps jb pop pop rolb rclb (bad) jo sarb adcb jb mul mov cld pop sbb idiv in push push or add push mov pop xchg xchg mov jmp mov test jmp mov lock rol rcll test push mov pop sub leave push xchg insb fs cmpsl add or jns stos dec push hlt jae loope mov imul pop aad pop mov cmp sbb adc or lea jne push call jmp test push jmp push call inc push push pushf push lea jmp push pushf call movl push pusha lea jmp les adc add leave push and movsl scas or cwtl jp jno cltd popa and jle dec pop mov jno push popf out mov fbld mov fcmovb lds loopne,pt lahf adc nop pop xchg pop cltd xchg fdivrs xchg xchg loop mov push and cmp js pop lods pop out sarb jmp jae hlt pop pop dec push mov jns push (bad) cmpsl xlat inc imul xorb daa pop and cltd inc cmp push sbb in fnstsw ret ja icebp stc ljmp call (bad) mov cmp ja add adc add adc aam xchg mov fdiv xchg (bad) inc or pop push lock out xor and mov je pop cmp ret xor or cmp or out ret bt clc pusha cmpb jmp xchg pushf push movl mov call lea jns push lea je shl add sar mov cmp push add pushf clc mov pushl add shr mov call fwait lods (bad) inc sub inc gs mov test or mov inc jge cmp cmp pop loopne mov and xchg or sti imul jle and sbbl into scas inc xor xor xchg pop ss jmp test lds push dec mov xor (bad) fidivr test in add or xor in add lods fdivr sub in enter sub mov cs and insl dec dec fistp in aaa repz pop test es jp ds inc adc push or mov mov out fs sub call out insl test cs pushf pusha pushf movl lea jmp movb jmp pushf lea je push pusha sub clc clc stc cmp lea je ja call lea mov push pusha cmpb movw lea jne aam sub push das shr rol mov sub test rcr sar or add or mov bt test test pusha call pushf lea jne or bt mov call xor ror mov cmc pushf jmp (bad) xor jno add dec shl call jle and jns adc int3 add mov outsl outsb xor aas nop fdivs in push loop lds loopne cmp or xchg test clc or pop call enter mulb jl js inc mov pop (bad) cmp roll scas or sub mov lret xor push popf fstl add xchg jns es movsl pop scas mov shrb pusha (bad) enter jmp out or (bad) out fildll ret inc gs sar mov stc cmc call ret push xor call fisttpl (bad) pop or jmp movsb loop xchg ss cmpsl lods cmp or and pop jp inc fdiv sbb outsl sub icebp es cmp aam inc add mov lods cmp aas add pushf push inc dec push icebp jmp jmp sub outsb ret fsub pop inc pop or dec scas cmpsl xor and (bad) dec push fwait je sbb xor mull call hlt mov mov cmp ss mov add mov push lea jmp pushf lea je jmp movb call jmp mov sub cmp cmp jmp jmp cltd jbe xchg add inc imul add sub adc sub sbb sub mov je xor sub push adc jo jnp or inc xchg mov push or popa bound out dec sti mov adc pop jns or jnp scas push push rcrl pop int mov mov cltd jns dec jo scas fiaddl loope insb sbb or xor leave cmp cwtl pop mov dec int3 sbb pop (bad) jo fsubrl push in sbb pop loop cmpl xor lods cmpsb pop subb sbb and ljmp out (bad) sar push sbb add stos xor addr16 adc sbb inc inc test mov and sarb pop cmpsl pop scas jno cmp xor lds loop in jnp adc jae pop leave aad leave cmp je mov push outsl jae std mov push dec or cmp or jo pusha pop ds and pop xchg adc bnd pop adc jne jbe jg fcoms mov aam cmp jl movsb in shrb or xor inc sub lds dec mov xor lret in hlt adc xchg pop adc xor js sbb jne sub jmp pop or or pop xlat pop pop (bad) out enter outsl cmpsl or pop pop push std js in mov pop xchg jg inc jg incl adc pop push adc xchg sbb cmp cmp mov sub dec or push dec cmp pop jo test dec sbb rorl push aas idivl fnstcw loope cmp xchg pop jmp fisttpl cmc xor fcmovbe mov push arpl pop int pop (bad) dec (bad) ss insb sbbb add and sbb cmpsb and rclb stos (bad) push repnz pusha jmp push jbe fbstp add arpl adc ficom push dec dec xchg push xorb pushf iret push sbb fnsave cmp inc xor js xchg mov mov movsl jnp mov stc inc cmpsb mov push repz xchg push fsubl pop sub cmp and jo xchg sbbb in jg mov lret mov push jmp and mov cmpsl xor jo loop std sbb pop out in mov mov call add stos ljmp cmp iret push in cmp and fisub sub test sub sahf inc lea (bad) in shr fs rcrb push adc adc push push imul outsb aas or xbegin xchg push fstps pop loopne es inc scas sub xor (bad) mov inc inc and scas xchg jmp popf idivl (bad) aad lods jge jl out scas incl cmp fldl push ret pop push fdivrs inc jns fbstp subb cmp dec mov sbb cmp cmc mov push fisttpl lods hlt mov cmc inc aam int enter cld inc lods adc sahf into xchg and pop adc pop test add cli orb pop xchg adc bt cmp sub push clc cmp jmp pusha movw pushf pushf mov push push pushf dec bt bt clc stc not cmc call lea jae dec pusha mov mov mov inc inc lea jns mov call jmp lea ja bt call jmp pushf pushf lea jne shld mov shl sub jmp pusha mov call jmp cwtl jmp mov lea ja jns jb cmp test bt bt cmpb pusha pusha pushf call push lock std std mov xchg fs mov ret jno jmp mov sub mov pop loope xor sub sbb jge stc in sub fldenv aam push lret loopne and enter test fs xor aas mov inc es cmpsb add mov xchg int shrb jmp sbb inc mov ja xor inc (bad) fsubrs test sbb dec push jne mov xor sub and clc push rclb jno inc or xor push xor imul xor fistp add sub mul dec into sbb addr16 lock sub pop adc dec in sbb pop xor sbb cmp cmpsl and push daa xlat call dec cmp push fnsave stos test and dec outsb adc mov mov mov jl jo in add fisubl inc scas sbb sub cltd daa stos movsb pusha adc push cld (bad) dec and xor movaps cld iret rcl push test dec cwtl movsw jns push ret pusha lea jnp jne setns shr rcl cwtl xor clc test sar aad mov xor shr add ror or mov bt cmc test pushf jmp cmp sub bt pushl call stc stc rol call mov add clc cli jno inc push (bad) pushf push cli mov (bad) or sub sar cld jb (bad) dec fwait popl aad jg mov cmp jecxz mov call shll push arpl loope inc hlt ret jo dec push mov xor dec lods and sub fstps xchg xor sbb jmp and jbe aad popa fstpt sub rcl movsb addb mov cmp add push cmpsl enter shrb ret sub mov shlb push adc mov xchg push fcomps movsl push in arpl cmp add xor sbb xchg inc jg jle test mov dec gs mov jnp cmp out cmp and sahf fs mov (bad) push push push int3 jae repz cli xor xchg push pusha adc push imul jns jae out jp add jecxz mov xor xor jp cli pop and add add mov sbb mov incb insb iret sub xchg xor push repz mov jle dec xor call adc push inc add (bad) or in nop mov dec test pop pusha (bad) cmp xor fildll fwait and in fwait or out mov jmp aas push pop imul xor bnd xchg outsb repz inc xchg lock mov aaa mov lds pop fistp lret cmpsb insb jmp fwait xchg rorb (bad) enter cmp dec insl add push (bad) test push xchg sub sub arpl add jecxz fsubrp (bad) psadbw jno pop sbb in ljmp fwait cwtl (bad) enter pop popf push jbe pop sahf lret repnz cli fadds into add rcll jp lret jl mov cmp loop sarl gs jg (bad) or arpl fstpt jnp (bad) cmp por imul lds inc in fsts mov in xchg push adc mov dec leave pop sub cmp push lds mov test into add and add out rclb es or add mov push dec xlat in adc sbb xlat in enter xchg add (bad) mov stc (bad) pushf mov ret iret out (bad) (bad) into add out jne movsl xchg xor pop dec xlat sub test int cmp and mov fcmovnbe sahf movsl aam jae aas ret (bad) clc lret in es xchg xchg jb xlat adc adc repnz sub jp call push sub les or leave add movsb jmp lcall pushf aad (bad) mov or sbb xchg lea inc mov pop jp cli lahf jmp jo cmp cwtl cltd decb push pop imul scas xchg cmpl lea ja stc je imul pushf movb add movb pushf pushf pushl lea jmp mov adc das mov ds xlat lds scas in fadds cli cmp (bad) pop pop jbe sar pop mov js leave xor js lcall out mov jae inc mov movsb ljmp jg fldcw test push pop add adc adc loopne dec inc push bound pop fadds je xchg test or pop dec jp pop lods std das cmp or xchg aaa pop inc xor cmp push pcmpgtb cmp movsb out int jp popa pop mov sti lret aas cmp push (bad) fisub mov (bad) rol xor jno in mov ror int inc lcall add dec add add add add add add add add add or add or add add add add push ds sbb (bad) mov inc mov in pop sahf lods test (bad) push inc out and lds inc imul aaa sub mov rcl xchg lock stos pop push jmp outsb jbe mov fdivl mov test dec push sbb iret (bad) jne xor iret xchg icebp jae outsb dec scas dec (bad) sub int3 sbb ret push pop fidiv xor and fdivl push lock int test testl add mov sub add aas or out cwtl dec mov sub mov (bad) in fwait push dec popl hlt icebp mov xor lods pop jg push int3 sbb pop inc icebp scas xor xchg pop sbb rclb add test imul popf jecxz rcl lock jmp or jp loope subl fwait xor mov popf xchg iret xchg sbb cltd push xorb mov mov pusha pop inc lea in lods in ljmp adc mov xor bound adc push pusha xchg iret dec addr16 push mov fdivl push xchg lds pushl rclb mov (bad) sbb mov sahf adc (bad) idivb sbb xor cmp hlt imul xchg in lahf adc sbb shrl adcl or pusha or rcr jae loopne pop insb cmpb dec inc inc mov inc pop xchg (bad) pop add js push push or in int3 mov movsb cltd or mov dec lcall out pop or pop outsb push loopne inc scas popf test add das lahf jl inc mov dec mov inc (bad) mov ficompl sahf mov dec pop mov mov int3 mov or push out idivl sbb xorl (bad) dec mov shlb outsl std jns lods push pop or cmp ret lcall xor ud2 mov std ret out out loopne popf xchg mov mov test subl bnd sub aas (bad) int js mov aam iret ret or je stos fsts mov inc xchg add ret cwtl fs out mov cld mov lret sti ss sbb mov mov xchg and cmp aam pop jo add sub stos fidivrl push enter out add jnp jge outsb xchg or and pop in sub add inc mov in movsl (bad) cmpsb scas xor gs iret push xchg cmp lahf mov pop inc gs adc xchg movsl mov test and cmc push int and mov and pop sub inc cmp js icebp repz jbe sbb inc pop xchg andl mov jg add xor (bad) mov sub in or stc jmp lret xchg insb dec adc ja dec cmp out mov lods inc xchg push sbb xor hlt test jbe into add push mov xchg int3 movsl inc adc lret pusha and cmp int3 mov mov sbb mov fwait pop mov and xor sti inc cmp data16 in xchg add jae clc data16 ljmp cmpsl cmp repz mov xchg push mov cmc iret xchg xchg ret in loope test mov mov push (bad) movsb dec addl (bad) les out fsub mov pusha lcall lahf cld aas xchg jo out data16 stos movl ljmp push or cmpsl repnz xchg hlt (bad) dec lcall cmc negl sbb fidivr movsl (bad) aas mov pop mov ret int fnsave xor xlat (bad) jae cmp mov jg and idiv test inc (bad) mov sbb std adc add sbb cmpsl adc pop xchg push adc and inc dec pop fldl sbb iret mov dec fisubl jb (bad) push insl push sub push add and fbstp xor dec repnz unpcklps xorb push or js cmp aas add test mov mov pop loop cmp add xor xlat aas xchg pop push sti test lds je outsl (bad) loopne fdivl sbb pop outsb push test out iret lahf stc jecxz inc and and (bad) in xor ret dec outsl xor arpl and int3 jo or movsl pop push sbb stos sub inc cli cmpsl cwtl popa adc data16 dec mov pop or daa aad push xchg icebp les enter stos mov mov in mov inc in je lock scas in or and adc leave sub ss xor (bad) mov cmp mov jmp xchg lods rcl imul dec out leave mov cmp popf popa daa jecxz loopne inc lds cwtl pop movsb mov fst test rcll mov scas sub cmp (bad) jo jno int fldcw mov stc xchg in test fsub mov sub mov out (bad) inc sub js in inc mov inc xchg add icebp (bad) jo pop aad push fucom xor cmp leave mov loope shll fnstenvs jl std ret xchg in mov in ljmp dec jb dec data16 lahf add sub mov inc popa test fwait or test inc or leave lds cmp push aas int3 push add xchg mov push adc fs jbe popa cmp lock pusha and int enter push scas in leave add mov mov inc bnd push push pop cmpsb ljmp inc or pop jnp sub (bad) push jne pop cmp ja or mov sahf cld adc fldcw cmpsl and std leave sahf out scas xchg push fucomi fnstsw lock pushf sub stos cmp mov add xchg sahf mull gs sbb and pop rorl and pop outsl stc popa or je xor mov fmulp movl ja pushf ss inc out push out (bad) aaa dec ja jo arpl (bad) mov mov sub jg lea insb pop loope dec popa sbb push mov sbb mov push add mov les pop popa aad or stc mov (bad) aam push fcomi xchg mov pop cli dec sbb movsb shrb mov sti pop xor xchg out ja pop inc push dec inc fbstp insl mov (bad) add aad jg outsl jne repz fadd mov dec mov std mov scas push out push adc sub dec in or std dec popa testb imul lret aas xor xor pusha daa push ret push inc jnp adc xor mov repnz mov push in out aam mov notb jne cmp pop int3 mov call mov sbb (bad) sub call sbb orb add cld leave (bad) fildll xchg scas nop outsl in incl pop lret lret xor lea mov push mov pop add repz sbb loopne ror inc mov call mov loope inc mov push (bad) fldz fdivs push push jmp pop mov push in add cmp dec jecxz push mov call dec data16 insb rcrb sbb add notl lret sub cmp mov pop or jbe lret les cmpsl or inc mov and jo mov shrl jge adc mov or scas cmp xor int stos cmp in aad ret leave cld fisub mov cmp (bad) out or pop imul pop std or inc mov fs mov mov incl sub xchg lahf pop pop ret inc shll lds lea xchg jns mov in repz pop xchg icebp sbb pop aad push adc bt jb mov inc jne sub movsl push int3 cmp xchg mov inc lret shlb in pop jno mov sbb mov adc loope push stc jo loope mov ds jno push add das sub ja push or sahf mov mov lret push mov outsl loopne negl fs sbb pop adc sub adc add xchg scas lock pushf mov jl mov rorb jno pop sbb jns neg cmpsl sub adc (bad) int cld push sbb aad dec out or dec jl lock lcall stos jno fdivrl gs test out inc xor cmp add mov stos or addr16 mov aam jne (bad) cmc movsl jecxz or pop push cltd push xchg (bad) and push data16 mov sub stos xchg mov add rclb adc pop cli push inc ret mov faddl out mov subl xor test dec pop fwait dec xor loop dec xchg cmpsl outsl aam jno mov bound jne mov adc dec es outsb or dec flds jae jge adc or stos (bad) loopne fidivr fs mov das mov xchg out test (bad) pushf js loope jno and sub mov mov cmp push push leave mov sub jge js adc stc mov pop lret xor dec cwtl insl jne xchg js xchg jbe dec lcall sbb add inc stos push xchg outsb xor ret cmp inc dec adc (bad) iret sbb aas sub enter dec lea adc mov add adc aaa (bad) inc and mov mov mov jns sbb fwait dec xor cs mov push fwait icebp inc xor xchg mov mov add push dec adc jg adc ret jp std sub insb notl mov pushf loopne mov test or enter inc or sti ds stc xor jle push push add push nop es data16 mov jnp pusha dec sarl addr16 call xor mov dec andb in test mov pushf outsb (bad) jae notb cld andl test bound xchg stos mov mov adc in add shlb inc fisttpll mov sub test cmpsl (bad) test test cmp jno jge jle aaa lcall add dec in or loope rcr int (bad) cmp add push dec add (bad) in movsb jne aad lock lret clc push int3 cli add mov inc push add lock inc mov sahf and aad test cltd jne pop cld add imul jb sub pop mov mov or mov insb aad fs std nop nop and shll add into ret stos pusha or lock add jle dec popa jg loop xor loop inc mov cwtl (bad) mov push sbb or mov pop cs repz jnp pop fwait in cmc or fnstcw sbb adc cmp sbb imul and addl pop enter push inc jg add xchg ja fwait sarb jnp xchg scas mov xlat and and imul push flds push loopne out jne ficompl xorl idivl mov (bad) (bad) jle movsl and adc sub scas lret jecxz (bad) iret dec test lods cmp ret mov pop cld pop iret dec mov xor shr movsl cmp orb xor and push pop xchg or mov pop or popa dec fldl push iret xchg mov jmp lods cmp loope mov jno mov test mov add and (bad) cmpsb inc jg adc ja or xor dec mov pop sarl mov pushf mov call shl inc mov pushf pushf push cmc add pushl stc movzwl jmp cli jecxz cmp inc pop loop loop add xchg fucomi fwait aam clc es ss mov add jne push sbb jg jae push sub xchg xchg sub xchg mov andl dec hlt pop jo (bad) aad and push lds or push bound push hlt mov iret icebp adc int3 mov (bad) rcr sub repnz int3 add push pushf out in lret in mov adc add mov jno rcrl adc div (bad) fldt lahf xchg (bad) lcall add outsl je add sub (bad) (bad) call jmp sub rolb inc jle dec jle adc mov sti clc (bad) mov mov pop cmpsl dec cmp stos xchg (bad) cmp inc pusha mov jae clc cli xlat das sahf sbb (bad) cmp sub jmp cwtl mov mov hlt fs lret insb xchg pop sti in repz imul jb sbb xchg fcom xor pop gs mov or in test ss inc xchg push and lods inc push test mov popa pop cmp and fisttpl xor add (bad) xchg xor andl out pop mul jno jmp (bad) xor add push mov repnz jecxz mov ja inc fwait sub fchs jne aam into ljmp sub ss iret das inc mov pmaxub inc mov lret int3 or push fdivrs leave mov jbe jecxz das stos sub cmpsb sub ret repnz imul pop push test and mov push and xchg and push leave subb dec aad arpl sarl ds in movsl insl scas push bound data16 insl les push inc (bad) test into int3 fs cmpsl cmpsb lds clc cmc push add lea jmp call cmp mov jmp jmp movl movb pushf pushl popl pushf push mov pushf pushl ret (bad) testl shrd test mov pop bsr adc and mov clc push bt sub bt jmp push shr movsbl bswap call rcr notb loop dec pop dec insb stos or push jle push jo dec push popa cmpsb in out out mov cltd call test cmp (bad) aad and pop subb push add cmp fs jl inc jbe std add pop nop cmp sub mov lret jmp movsb adc pop insl jp cmp aaa sahf testb ret cs mov (bad) hlt sub jo (bad) aas sub mov mov scas xor rcl jmp test mov pushf movb lea je push bt sub bt jmp jmp pushf mov push lea jmp xchg ret push add insb mov icebp loope mov inc pop bound inc out clc sbb jge sbb lds xchg mov pop xchg push cmpl nop or add movsb mov ss xchg in add push xchg xchg mov push (bad) push or aad in cmpsl pop cmp sub outsl or jbe inc addl in les scas push jnp push lods jle pop jmp and std std aas dec dec cmc cmc lahf mov xchg sbb test insb sbb ret cmpsb xor cs arpl xchg or inc imul (bad) gs imul lcall push test sub negb xchg loopne pop dec mov mov pop into xchg lods into out loop in mov test jbe adc ficom test and subl cmp fbld nop sbb data16 pop pushf andb hlt jecxz out in iret cmp jo aad sub push mov sbb loope and ja stos push fs pop jg cmpsl arpl dec js adc push out (bad) rolb add add aaa jle inc rcll and jg sub add inc mov mov ds test cmc in rcl loopne mov into jecxz iret xor xchg jle push lahf int3 inc mov fistp mov xchg cld lahf and xlat adc inc mov out rcrb fistpl lcall sub cmpsl arpl jl std rcr and pusha repnz imul movsb and int fidivrl in sbbb out lock and call in xor and sti xchg push in and ja (bad) roll fs jb pushf mov mov pushl ret inc xor pushf jmp pushf pushf cmp jmp movb into push add adc jns sub jns push int movsl sahf xchg call xchg add mov hlt cli push mov sub push and lahf int3 mov lods xchg xor negb fwait not sub lock mov adc ja or es frstpm(287 rcll dec nop in icebp jmp jbe cmp (bad) fstpt scas sarl or leave out movsl mov inc lods gs inc fadd insb cli sahf addr16 cmpsl add jae inc xor fmul pop outsb fldenv ret adc and mov mov shrl mov sbbb add out hlt (bad) mov call mov inc xchg pop popa add push lret pop mov push addb (bad) test sub andl in mov jmp xchg rcrb ljmp and or jo jb mov dec push not repnz add cmp fstpt xor shll cmpsl mul pslld (bad) (bad) jp push iret xlat mov mov aam (bad) xor movsb push adc mov test xor jo sub cmp callw mov jmp push int3 ret push int fs jns jbe dec setb bts mov rol ror add ror mov neg sar add pushf bsr movl shld adc and mov mov cmp cmc cmp pushf call dec jmp pushf test cmp jmp lea jne btr mov shrd call jmp pushl lea je pusha call test lea add setns mov bt mov cmc jmp push jmp cmp add ret xchg sbb imul xor jnp jmp push enter push lods stos sarb clc and (bad) (bad) mov or je xchg mov aaa mov sub test shl jo (bad) adc das pop cmp scas je gs add xchg mov test xor lods xchg ljmp test xchg orl orb out adc jecxz stos mov pop divb lods xor cmp and push push xorl repnz lods mov push jl fstpt mov push mov dec imulb xchg lock pop mov in cs in shlb test test push cmp jmp lea je test call push lea je push test sub pushf clc pusha jmp pusha cmp inc loope dec je xor jne aad add or mov decl xchg cmp les out bound pusha jg cmpsb je js jnp imul mov fcmovnb (bad) dec je and inc cmpl repz sbb jbe push mov call sbb xchg cwtl out test pop insl loopne push or mov je in leave adc outsl in pop fcom jns cmp sbb int3 or test das insl (bad) mov call int scas push incl lea je bt cmc bt add cmp pusha cmc call cmc not call inc jge pop push add cmp repnz (bad) (bad) nop pop xor dec jbe cmp cmp fwait sub hlt xor test cld scas xor dec push push pop xchg arpl das sahf iret sbb and inc and pop xchg rorl mul xor loope or push in sarb jp fs cli and mov test cmp daa fsubr adc sbb jg fiaddl push insb rcrb xor xchg ret mov pushl xor jp mov mov push in sub sti push sbb pop mov pop add mov jns add xchg xchg call mov out sbb xchg loopne ret imul adc inc sarb push pop aaa mov jae and xor fbstp pop xchg lea mov pop sub add mov (bad) pop and sbb fist out imulb mov dec pop pop push and add xlat jo (bad) pop sub imul mov jmp prefetch out push nop (bad) push inc mov xchg jl pusha pop pop imul js repnz sbb mov jmp push cmp aaa int3 pop inc push mov inc fcmovbe bound fldt orb add and inc fidivr insb aad test mov sarl xchg and mov mov bswap pushl popl lea jmp lea ja clc bt imul clc add pushf mov lea jmp movb mov mov not movzbw seta lahf movl movzbw lea jmp bt stc stc clc sub pushf inc call add pushl lea jmp jb cwtl inc pop add (bad) cmc pop mov sub mov add fimul push xor pop xor xchg fscale mov mov dec jnp arpl push bound test cmc into push jl adc (bad) or mov mov ret jmp clc mov add xchg jb inc pop repz xchg adc push fild fsts vcvtsi2ss mov or add insb inc fidivl sub addr16 lret out mov arpl cmp inc push or movsl cmpsb sti loop mov xchg cmp pop lea fisubrl push mov xchg and inc test cmpsl sbbb mov push pop add (bad) pop mov dec stos cmp fisttpl insb dec insb fiaddl imul push jno dec ret das mov sti daa inc sbb push mov pop xchg fimul and jecxz cmp pop outsb adc (bad) pop shrb add sub ds aad mov push (bad) js xor les lahf inc push mov sbb mov add add bsf push inc test mov sar sub bts push rcl das pushf mov shrd pushf not cmc mov rol shr sub pusha movsbw bswap lea pusha call mov pushf call cmp pushf mov mov jmp and aam add and jle xor dec (bad) fsubrs test cs stc out data16 rcll lret (bad) hlt add mov or push jp ds mov pop sub fimull test and out scas je,pn rcll adc fidivr inc jle pop sub jae out jne xor sub mov cmpsb jecxz push in cltd add sub mov jno mov jle mov xchg outsb cmp repnz (bad) sbb mov jp sub inc jle fbstp and ss stos mov sub bound inc sbb movsl pop scas imul inc icebp add mov cmp cmp ret dec mov adc push sbb pop enter jg jb loopne xor mov cltd gs mov pop add ficompl lret cmpl lods outsb arpl jmp repnz loop inc jns fcmovnbe push or sub cs push cmp jecxz mov pop cmpsl out stos fwait lret xor cmc pusha pop cmp in push je mov roll shll mov mov xchg sti sub loopne addl lret clc jno addr16 mov fs idiv mov xchg shrl int rorb adc fiaddl and insb sbb fsubp inc jb pushf jecxz mov test jge inc sti out jecxz mov mov insl mov es adc sbb rcrb rcll int3 adc out jle,pt adc mov incl sbb mov xor xor cmp popf cmp jg adc test fisubr mov jne sbbl icebp mov cmp jbe adc xchg jno jno inc mov (bad) jbe movzbl pop andb stos cmpsb jecxz aas outsb add fimull rorl jge adc call push jbe sbb sbb xor in (bad) popl mov pop mov movb cmp leave mov add xchg sbb xchg sub ss jo loop faddp push pushf dec pop inc pop scas push inc imul fidivrl mov mov or inc in jnp scas push mov mov push dec fdivl jne addl pop dec test popf pop add cld cli jns sbb outsb inc mov and mov scas cwtl popf xor inc into mov adc pushf test imul mov inc leave adc repz lock icebp (bad) dec in mov lea (bad) out pop jno (bad) push in popf or gs sub je mov push aas jbe test fsubs fistp pxor fwait pop roll (bad) repz fcmovne mov ret stc mov bt pushf bt stc and pushf push add pusha lea jmp pusha dec movb lea jne cmc mov bt cmp pusha pushf jmp in push rcrb inc daa pop insb dec pop sub lods cmp jg push jo inc or mov lcall xor and xor xor and fs das sub int3 mov add add in xor jp sahf lcall mov jg adc popa dec cmp inc inc test jno rolb pop jl pop popa test das mov out iret stc lods mov iret jge adc xchg call sti bts test add add mov pushf or clc mov stc repnz pushf pusha movb push lea jne push movb lea setle movsbw mov movsbl not lea pusha pushf movl mov call xchg adc imul mov into les or sub dec jae insl jb aas (bad) pop push ficomp mov rorb lcall xchg js xchg shl jb mov adc cmp mov xchg sbb sub scas pop xor sbb sbb sbb push and adc pop and pushf or or and mov sbb adc cmp mov mov adc pop and mov and mov add or repz push mov ss add xor mov adc mov xor or adc push mov or adc psllq or or or mov adc add pop and es sbb or movsl or and mov adc int3 pop dec fmuls in adc imul add mov mov add sbb pop xor ss adc xor xchg pop xor mov xor dec sbb mov in cmovge lods sbb push iret pop mov (bad) (bad) push sbb pop push daa push xchg mov mov fwait mov xlat cmpsl lahf inc jbe mov mov stos or adc pop lret jns adc aad push adc pop fcomp lods cld xor daa mov scas jg mov and aaa nop add mov scas mov jo movsb jmp repz mov lret mov mov dec cmp lods dec mov test mov mov cwtl call outsb mov cmpsl inc pop mov scas push rep pop mov sub dec pop mov outsb call loop mov adc mov addb or mov cld xchg push add fwait test cmp cmp jle fwait pop add loop xor dec adc fistl add fwait add leave push inc push js cs xchg and add mov push cmp test adc pop ret sbb adc mov xchg pop in sub (bad) cmp cld xor scas xchg adc adc jg add hlt xchg pop push xchg (bad) idivl lods add xor sub adc push pop cmp mov adc data16 add sbb sbb fsubr push xchg xchg sbb movl icebp pop inc inc scas adc in or mov adcl xchg push ret mov or sub inc adc push inc lcall movsb mov pop out adcl sbb sarb or jmp and mov clc adc fiaddl jmp mov adc aas into cli xchg lcall mov adc lret adc (bad) enter stos adc (bad) adc out aaa mov and lcall test pop cltd push cmp fsubl and adc mov mov add jmp iret mov shrb arpl mov std adc jg fcmovnbe int3 ret insb (bad) pop sub into repz repz push dec pop add insl push adc mov dec pop xor in scas fildll jecxz mov jno xor (bad) adc adc pop fs adc dec pop les faddl jg and xchg and push fisttp inc rcll (bad) jp dec aas fdivrs jle bound inc notb dec jbe add sub sbb and sub mov ret insl icebp or mov pop add or push (bad) ret or les push and or add aad xor nop cli hlt sub mov pop sbb mov sbb cltd jno pop push lret pop repz ja adc and adc sti cmp mov adc ja inc flds jnp xchg lods cmp jge push in and pop xchg mov and dec cwtl mov (bad) out dec xchg jmp clc cmpsl ds (bad) jnp adc push iret cltd adc bound mov fnstsw sub dec pushf adc add jle fimul mov mov sbb xchg dec jae std mov mov outsb sbb sahf test lods pop sub cvttps2pi psrld imul dec imul clc dec mov (bad) xor or mov inc pushf sbb es pop repz push clc and xchg ret adc pop add into pushl cmp cmp jne aaa adc and mov jp fs inc adc pop in scas bound mov mov je lock insl push bound aas test in add scas (bad) lahf jg adc iret fiaddl cli movsb mov (bad) jne decl xor adc push pop movsl or mov mov mov cmp adc insb stc xchg and adc cld addb shl mov dec call mov cmc add imul sub std jno xor add scas sbb pop jecxz sub invd lods xor js mov (bad) push adc mov (bad) push lret fst cmp push adc popa rol rolb pop lds adc test or sbb adc lahf clc cs or add test divb mov adc sub dec inc inc aam rolb iret adc ss push ret in adc loope sbb out adc cmp pop inc jg adc std faddl xchg mov repz repnz pop sbb sbb sub rcll or pop mov icebp push sub sbb dec adc push adc mov adc cmpsb adc xchg cmpsl push mov repz icebp fdivrs rclb mov call in cltd mov jmp adc adc mov fidiv imul test xlat mov pop sub enter inc mov mov rclb mov out lea hlt adc and (bad) mov scas leave jno jo add popf mov (bad) mov or mov push stos dec in mov out fwait jmp addr16 cli mov add push xchg jo loope fisubrl xor pop scas arpl sub ret outsb dec das sbb aad repz mov mov mov pusha (bad) shl jp sbbl fldt into aad cmp jg adc jnp,pt fdiv lea jne setb and sti (bad) imul es mov or dec arpl scas jecxz setg insl xlat mov dec nop repnz test js rcrb test (bad) fsubrl insl mov cmovs jae xlat or (bad) hlt (bad) push push dec jns or call cmc jl lahf jnp xchg ret repz call dec cmpsb adc mov outsl or cli xor jle sbb mov mov lock jae sti jns insb add xor xchg pop adc cltd jl repz pop dec pop push movq in push scas fadds mov mov ds mov adc xchg roll sbb pushf nop adc inc jne ret push or or add push mov sub mov sbb or adc lcall adc ret adc lcall adc or adc adc add jg inc fiaddl mul push stos scas shr sbb and lcall or popa adc add rcl nop adc xor adc ret bswap add fistp adc adc cmp jb push pop ficoml xchg jo xor xchg and inc push adc sub xchg js pop pop shrb xchg hlt add jne mov aam ljmp add inc (bad) aaa iret dec adc ljmp adc mov or aam dec and iret inc mov sar pop dec mov push bt xor pop jecxz bound sub movsb hlt or (bad) adc inc (bad) adc jg mov mov movsl xor mov or or or inc ja test aad (bad) (bad) popa pop mov xchg or inc loop jno sub and fnstenv das movsb sbb jge mov sub movsl popa cmp mov cmp xor add sub scas mov mov scas imul daa or inc push call xchg jmp and add nop sbb (bad) cmc xorl imul or jns mov jmp mov je mov pop adc ja (bad) hlt fistp in sti loopne leave adc add inc adc test and xchg adc pop xchg pop sbb pusha mov ficoml inc mov jg mov iret in pop adc mov sub add inc (bad) popf adc repz hlt (bad) repnz xor leave test adc popf stos lea cld jecxz sub mov xor adc scas aas dec xor repz xor or inc pop push pop adc test cmc mov sub jg adc hlt cs inc outsb mov cmp mov in adc fildll out fdivrl pop add lods movsb adc cmpsl daa scas mov xchg ror sti adc lock xor cwtl lret rcrl push test aas mov dec jne lret ret mov bswap and adc mov adc xchg sahf test fistpl mov pop jne loopne and jmp movsl pop push std xchg cmp rolb repz jo sar nop mov test sbb jnp cmp cmp inc sar bound pop addr16 sub or mov adc inc movsl sbb jle mov xchg inc cmc add ret inc std adc jno (bad) sbb rcr xchg mov into adc sub in scas das fstpt sbb repz cmp sbb movsb mov and test (bad) lcall xchg in add (bad) add mov shll shl adc mov pop rorb fmuls pop inc lahf sbb mov adc xchg js popf lea sbb jmp lcall pop movb dec pushl push adc lea test in inc clc js inc adc push mov loopne out cmp xor sub or adc ljmp dec fidiv imul loope mov pop jge mov test push adc jl or scas jo pop fs pop xchg pop ret (bad) adc loopne push loop arpl stos dec outsb or fbld adc inc adc adc dec jnp mov adc cwtl mov shl cld add aad dec dec test pop xchg mov push stos jnp xchg mov outsb push aam push add sbb sub adcl or insb in adc scas or xchg push jno sbb adc out divps and pushf xchg mov lret mov cmp push xor mov inc adc fiaddl or xchg lods mov cmp sub pop data16 cld repz test enter ljmp add popf mov adc xchg mov lcall push call sub inc into xlat adc jl dec xor rorl imul loope add aad push xor mov cltd adc or cs or das fldl or psubsb sbb pop adc aam push scas adc sti movsb sub pop enter aaa adc adc (bad) inc fwait shrb adc add aas jns loopne adc xor imul adc jecxz sub adc mov repnz cwtl xor popa push xchg mov adc arpl out xlat jl sub inc inc mov rclw lret arpl adc testb and adcl imul pop mov xchg outsb test or adc xor mov mov leave sbb lcall mov mov (bad) push push (bad) popf add mov xor test out gs xchg mov sbb cmpsb add xchg pop adc sarl hlt inc mov incb mov (bad) xorb (bad) adc add lret jo and push loopne mov sbb mov setge sub (bad) mov dec sub mov push call mov sub add lds and in xor arpl outsb lcall test shrl sub adc mov sbb dec adc out sbb mov mov adc adc adc cmp xor cmpsl jbe repz push inc popa jle jmp mov pop mov add movsl ljmp push sti ficom mov std push adc int3 lret clc dec xchg push bound xlat cmpsb push leave mov adc cmp pop js mov and ret in int or loope push xchg imul inc adc cli aam lds call sub fdivs adc add adc cld pop test sbb repz les mov jne cmp mov sbb cld or or or mov adc ss repz xor scas push nop xor or pop sar leave fldl stc mov jecxz test fcompl pop adc jg xchg lock adcb pop mov bound push cmp cld dec cli mov pop jecxz xchg sub stos sub aaa xor mov adc mov xlat adc adcl adc push dec cmp ret jp imul in sahf imul add sti je push popf adc lods xor dec nop dec pop xor xchg sbb push (bad) clc repnz mov xor xchg pusha mov adc push das xchg fs and sbb sbb jnp xor or jmp push adc push popl rcll jno mov push pushw test adc jns jbe mov mov pusha scas pop adc lcall aam cmpsb negb les sub add adc inc dec mov mov mov fsubr jne cmovs push adc xlat icebp pusha notb add repz iret seta adcb adc push adc stc loop mov ss daa (bad) jb xchg add and (bad) repz mov sbb scas xchg or movups inc mov add les sub (bad) cli mov (bad) or inc cmp adc mov fidiv mov hlt in negb cltd cmc mov xchg push test pop cli int3 jne in adc pop orb adc adc dec data16 push add in js rclb je fbstp jo cltd pushf mov sbbl into xor jae jne shr scas lahf mov sbb ja sbb push sub or add sbb or aas pop ja aaa add xor pop dec dec adc lcall cmp sarb out jns (bad) jecxz rolb int pop scas mov aam std push mov pminub icebp adc pop cltd sbb nop mov ret arpl stos sbb jae push add comiss inc or cmp xchg adc mov jo jns clc adc flds adc add fdivl adc inc lods adc pop mov cmpsb xchg into sbb and push daa sbb push gs sub in and nop push loopne addr16 jbe sbb je fdivrl nop sub mov sbb xchg ljmp repnz adc pop inc aas or repz push lock pop leave repnz in inc fcom (bad) scas adc mov pop xor roll aad fidivrl adc outsb cmp adc jae adc xchg (bad) fcmovnu mov sahf adc push lods (bad) adc xor or add mov insb scas add adc je mov jbe adc xchg jmp adc outsl int3 popf mov cmp jle sub push jmp jb loope pushf arpl push add mov xor (bad) imul scas sbb (bad) data16 adc (bad) test aas adc ja lret adc adc icebp hlt (bad) repz repz xchg cmp out repz std int idivl push and adc and imul jnp dec mov adc (bad) inc xchg adc mov leave iret lods adc dec pop xchg dec frstor or xchg stc push iret push mov adc out arpl (bad) xlat push aas cmp mov pop or sarb and push out adc sub in mov xchg adc pop in or xor lds inc jg add ret enter (bad) pop mov pop mov push std push loop in push ljmp daa test in icebp jmp jne je (bad) adc cmp mov movsl adc out repz pop push add sub mov mov adc daa or cmp ss sbb nop inc add (bad) and leave inc cmp jne xchg lea out dec imul adc mov cmpsl push push jne adc cmc (bad) int3 repnz sar iret scas jge adc mov repz (bad) mov cmpsl out shll push lods repnz lds js jae sbb mov mov cld adc mov js cmp loop pop mov in push adc lea inc cmpl mov adc test mov and (bad) or add daa add sbbl fdivl xor adc or xchg xor add insl popl in xorl cli jae mov adc outsb cmp popf xlat test iret mov test sub leave rolb fmulp mov and cli dec adc mov cmpsl inc pop inc adc rcll adc push subb cltd cmpsb adc fdivs rorb mov adc pop xchg (bad) sbb out out jge or jnp ss popf push adc mov pop adc icebp jg pushf push jmp dec mov wbinvd jle mov ficomp subl jmp je insl mov ret jno inc and repz or loop add lods std jge dec sbb cmc or adc fdivrs sarb pushf jne cmpsl (bad) xor in mov xor and pop jl adc ljmp repnz add dec add jmp ja les cld pop push adc mov (bad) xchg adc in add lcall test adc (bad) xchg imul or push mov (bad) call repnz or (bad) stos sub sub push pop bound adc lea sti ljmp sbb adc mov pop adc xor cld mov stc aaa ljmp pop jno cs xchg sbb xor push add pop cmp push xlat or jle sbb (bad) pop push test mov int lea imul add adc in pop and adc mov xchg xor pop pop mov jecxz dec pop cmp jmp lock (bad) es adc ljmp mov sub push push pop adc scas lea jg push addr16 adc jle mov jmp lret daa push loop mov mov and adc jmp dec les jle xlat mov test push mov repnz ret adc add arpl adc ficoml or lock clc pop (bad) in dec repz mov lahf or arpl adc push scas repnz sub mov cld push xor bound sti ret repz (bad) outsl stos sub mov sbb ret or shl mov or add mov adc mov shrd mov xchg fist pop xor push adc cltd xor dec adc orl mov xchg dec scas pop mov dec das adc xchg cmc clc add mov sbb or adc mov popf xchg push divb add fcmovbe sbb cmp loop jp inc xchg add adc add xor jnp mov xchg pop mov mov in mov xchg mov push aam test (bad) cmp or xor lret (bad) loopne dec and add imul adc sub scas shlb jecxz fildll test pushf and add ss mov xchg mov cmp inc in adc dec out jp in lea push decl xor mov cmp jge mov mov fimul adc mov notl or std sub adc shrl inc sbb add adc push roll jge in (bad) scas mov jb sub pop mov out jmp dec (bad) adc mov xlat repz adc mov adc cmp dec xchg adc ljmp fcmovnb inc jl adc leave lret push adc and lds loop inc pop repz mov notb adc and adc adc jg cmp rcrl rclb in cmpsl cmp add call jae xchg add scas mov push xchg sub add iret mov sbb sbb loop leave cmp mov out adc (bad) gs pop cmp cmpl fdivl sbb xchg jle jne add push das mov not adc dec mov leave mov jb sbb cmpsl push adc pushl mov fstpl ret mov negb repz pushf cltd jnp xorl sub mov pop add rorb mov scas aaa loope in xchg or (bad) fldt sub adc cmpsb mov adc pop sub or mov mov in shld mov jns push adc add dec pop or stos mov inc (bad) icebp fs fmull pop (bad) dec inc adcl push cmp das inc jp jo mov div mov fs and fnstenv and fsub cltd in adc fmull push adc add mov (bad) mov les aas repnz push add (bad) xor out fdivs sub cmpsl add adc xor (bad) mov out loope sbb je cmpsl pop sub xorl cmp lret lahf jne or jne mov (bad) fbld out add lcall (bad) (bad) mov outsb sub adc out mov dec dec fldl cmp sub xchg sbb pop and mov ljmp loope jno cmpsl and mov scas jno and add insb aas push pop repnz adc fcoml xor and in scas movsl je stos bnd add adc adc cmp mov aam and and mov adc jl mov xor (bad) inc mov cmpsl cmp test mov mov xorb mov push pushf xor xor lods outsb je stos mov xor adc test pop sbb cltd ret adc adc in repnz add xchg inc insb push xor mov dec jle pop push mov rdtsc pop and jns mov std je xchg add rcrb jno popa out rclb pusha icebp sti mov rorb sub gs xor adc mov ret pushf cmp and or xor adc add push adc dec sub (bad) lret jne mov mov xor imul hlt xchg je or repz sbb pop inc adc cmp cmp pop jae das pop sub cmc mov xchg inc pop mov and adc movsb or sbb imul sub add fnstenv adc sbb in int3 push adc fsubrl adc dec stos adc int adc pop lods jne mov cmpsb sahf mov xor dec (bad) fsubs sub push pop mov sbb mov js mov subb adc xlat adc jne lret adc je mov add sbb mov jno insl dec sbb (bad) xchg cli enter jg xor mov int adc and adc cmpsl ds adc in imul push jl mov xchg test jns jae mov mov or adc scas (bad) dec in adc lods jne mov adc icebp adc adc aas mov jno lcall (bad) push cs (bad) nop adc push mov ja imul test ret adc insb aam mov fcmovbe push push (bad) inc jnp adc adc mov ror (bad) mov xchg mov jge or (bad) xor mov cli cmpsl ret sbb in mov mov mov jns adc inc adc in jnp pop push sbb gs fcmovbe mov outsl in mov or sbb sbb (bad) bound push fwait test sub and mov mov imulb cmp jne mov push ljmp out xchg daa sub mov jns mov pop xor pop or mov push jecxz push bswap outsl call lahf pop inc jo pop adc enter je push or jno mov pusha sbb cmpsl jno insb repnz xorl es insl add pop popf je mov inc jle mov add out insl stos inc imul shrd pop jp mov xchg hlt js sbb je jg adc lret mov dec or sbb mov sub xor sbb jae mov adc fwait xchg mov pop sub or adc sub add push cmpsl xchg pop add xor imul jp dec adc mov xchg adc jg test cmp insl popf mov push mov xchg or jnp dec xor (bad) push inc mov inc mov pop cmpsb pop fbstp inc sbb into xor lods js repnz xor je fwait cmpsl sbb mov jno adc cwtl int pop xor jl add fsts imul xchg push (bad) sub xchg addr16 faddl add scas push mov int adc or leave xchg or fwait mov cmp fldt mov cmp ret nop adc sbb hlt adc insb adc inc into lds es and mov nop or insb xchg inc adc and and ret out and inc in xlat movsl notb adc sbb sbb xor push xor adc shlb mov ss adc sbb adc daa sub dec pop and hlt add cmpsl mov adc sbb mov hlt fbld addb mov dec pushf adc sub jp rcpps push iret mov xchg gs add stos int push and xor xchg mov test adc out (bad) repz add adc gs sahf mov lret in sbb jno xorl aas xchg dec sbb mov push add adc das gs xchg rolb fs int adc dec testb dec rclb icebp adc add pop out cmp pop scas xchg inc in mov sbb inc mov mov test stos push lcall les jo xchg mov ficoml es add int3 adc pop sbbb (bad) dec add add loop xlat push daa mov xor add insl mov mov mov pop scas scas stos adc sar adc inc hlt fnop (bad) test jae shll adc sbb inc sub mov sub (bad) inc pop std into ret repz enter mov in xchg mov and or xlat cmp adc (bad) sbb mov idivl xor insb mov pop adc aad sbb ss adc dec xor adc lcall outsb ja pop mov adc in pop or movsb popf add push adc cld jno mov inc mov adc test jecxz jl insb imul cltd adc cmp sub xchg inc test pop rcrb sarb push add mov jbe jns jmp test out in popa adc or repz xor (bad) jne mov add lods add iret das mov inc stos adc push ss lock jecxz cmp (bad) xchg cmp shrl andl cmp sti xorl test adc cmp sbb adc sbb adc (bad) divl rclb inc sbb push pusha cmpsl cmp pop add rorl lret xchg andl stos ret fimull loope leave push mov xor adc mov in sbb (bad) xor push outsb icebp test xchg pop mov jae jo ret (bad) xor sub inc sub mov xor movsb sub sbb mov and lret pop adc adcb sub or call jns dec sbb push daa repnz std sub xor xchg adc jb repz popa pop jno setno adc push mov adc loope add adc mov out jne mov in adc inc inc mov sub cmp mov push push mov ljmp push cld inc mov sub push fwait pop adc (bad) adc xor sbb jmp (bad) in out or and xchg adc dec gs mov mov movsl stc stos mov adc in jl push jmp nop fs xchg dec sbb int3 mov xor or aad pop inc loopw rcll addr16 in sub cli push push and (bad) mov mov adc mov push sub in aam or int3 lods rorb push hlt (bad) repz aaa cmp mov mov mov pop xchg jae call xor insb and adc inc add add call fs dec adc cmc ficoml xor test xor dec or lea scas adc arpl pop jb fiadd insl adc mov aad daa adc imul mov xor mov push mov rclb or push jns adc push dec mov sbb adc js or dec cmp cmp mov pop subb mov adc insb dec sbb cmp adc std (bad) mov add xchg pop pop mov mov adc dec mov cmp and xchg (bad) mov lahf das (bad) mov or in lahf and rcrl or sbb jne ret pushf sub xchg xor push mov fmuls or xchg mov dec push repz and mov add sar loope adc xchg (bad) jne jb adc sbb sub mov sbb mov and out inc or push lcall adc cmpsb lock adc jge inc in aam clc int3 bound cmp (bad) scas adc jmp repnz sbb mov test mov in cmp mull outsb in jl sti sbb int adc insl add dec push shr sar push add repz lods ja dec out mov pop mov adc cli decb or jp nop in rclb inc aaa jge sarl adc xor pop movsb repz adc xchg or ret mov xor inc nop adc push pop cld scas mov mov jmp ljmp cmp mov lahf mov movsl mov mov aas jns xchg push and ret test daa mov xor pop push adc jb xlat call or in fsubrp mov popa push mov jae rclb cld lds sarb sbb loop mov and and shr adc popa xlat ret ljmp enter cmp pushl lds or inc iret je or cs out adc mov xor sub adc inc dec jbe rcrl add aaa push push xlat nop js cmp sub dec add les inc xchg dec in outsb jmp aas lods and xchg fcompl dec or add adc fstps lock mov add les jp outsb cwtl bound push add pop jbe mov int stos xchg nop adc add jne jb pop dec xchg mov adc test dec je and dec or sub in cmp das mov pusha mov push repz jp dec mov mov ja cltd adc mov sti mov push cmp xchg inc mov sbb arpl hlt lcall adc ret out shrb clc pushl and or repnz lea adc outsb out jne sbb (bad) jnp ss test sub adc outsl bound divl add cld fild inc pop adc cmp pushf xchg stc push into adc rorb int mov mov les orl mov pop fcomps scas adc push or fisubl (bad) dec mov imul xchg add mov repz rorl adc push out inc and ljmp dec and cmp sbb loopne mov and cmp movl dec pop je adc out int rcr iret inc adc (bad) dec and popa (bad) sbb cmp push aas movsb data16 mov lahf sub mov adc bound rclb lret in pop jg and xor std xlat (bad) jno adc or jbe adc scas bound rcrb ffreep and pop pop mov iret mov push mov cwtl mov orl push or ficom xor inc mov or push add sbb movsl ret cli movsb lock sub and mov jge mov cmp ret push clc pop std loopne or sub int les dec dec xchg stos adc sbb pusha sub mov and push lock sbb aas (bad) ret pop adc icebp cmp adc xor dec push test mov jg ret bound sub adc outsb sti movsl xor dec or cmp xor push mov dec inc adc rcrb (bad) mov out pop mov and mov adc (bad) addl adc jbe ret stc loopne mov adc mov mov cmp xor movsl or cmpsb cmpb adc mov movsb sub or fcoms sbb cmp jnp xchg adc or adc ljmp mov cwtl ret in xchg lods add pop pop icebp inc push adc dec adc enter data16 push adc arpl fs pop call dec fbstp int3 in imul push adc repnz xor jns xlat mov loope (bad) cmp sbb xor dec jp aas arpl push add xor js sub mov pop mov ret aas dec adc daa xchg add push ljmp out sbb adc lock fwait lods fcoml dec out jle lret xchg out ja adc sahf sub fstl in imul inc mov mov or jg push outsb pop loopne mov frndint dec adc add mov insb mov mov jecxz jb cwtl pop mov (bad) das xorl push mov mov adc mov dec in or inc cli mov inc cmpsl xor add adc pop adc mov (bad) jno aam add adc lea dec adc xor nop add cwtl fidivr popl xor xor sub aad cmp sub cli mov nop (bad) jb sbb aam pop sbb test sbb adc inc mov (bad) repz lret mov push xchg xor mov inc pop pop pop lret shld xchg dec imul jae fsts nop testb sbb adc push jno daa (bad) rcll push icebp push movsl add lds insl adc mov adc pop cmp hlt sbb add mov adc inc mov xor popf aam mov aaa push cs ret adc jp popa fistl inc repz sbb outsb adc mov mov xchg adc add pop jno shr adc sub inc xchg cmp hlt xor mov adc adc sbb push mov mov pop test or adc inc rcll xchg lock jno into or es xor or in inc pop adc adc or adc add and push mov and adc mov adc test cmpsl in push push adc and xchg adc faddl xor xchg adc cli outsl mov cmc lock adc out inc xchg lds xor xchg add cltd icebp inc or xor (bad) fwait loope cltd mov cmp or adc sub xchg inc shrl out pop mov pop xlat je into loop xchg fs xor add or (bad) lea cmp das push imul (bad) mov xor jne (bad) xchg popf lea hlt lret jp sub mov push xchg in push insb jecxz xor adc in adc outsb lret xlat adc jmp arpl inc mov adc in push xor lahf dec pop and dec mov xchg adc pop arpl call into loope add mov adc dec rorb jmpw adc movsb shr add sub fdivr xchg add xorb mov xor stos ljmp jge test or sarb popa xlat xchg pop fldcw fistl jge imul ss mov xchg adc xor pop mov xor xchg insb ljmp (bad) std sbb sub push out mov sub pusha jno add mov hlt sub (bad) insl pop out adc cmp push sub add xor jmp jecxz add into or adc mov xchg xor scas data16 lea adc (bad) fistp dec in and adc mov add inc lea adc cltd clc xor adc push mov pop adc rep js lret (bad) pop mov push adc xor and add lret out into cmpsb adc mov or sub add sbb ror mov fstl sbb test adc mov mov mov ss adc add xor sahf adc xchg movsl xchg jne push adc daa pop das addr16 add jg fucomip or lret adc inc loop out insl dec adc push mov sbb leave mov adc xchg in jle jl mov mov mov pop sub pusha mov test mov adc xor repnz nop adc mov out jbe push mov stc mov outsl idivb adc repz lahf mov (bad) negl mov sub sbb mov je xchg (bad) outsl addl push jmp jne add xor add add or inc pop (bad) in (bad) adc jo add icebp movsb adc push scas jmp xchg xchg xchg push inc stos xor dec add pop and adcl mov repz fimul call inc adc loope add lret push pop adc dec push popa sti popf idivl mov xor adc add pop inc push xchg adc mov cmp jp cwtl repz cmp sahf xchg or cwtl cld movsl in xchg adc sub gs adc cmpsl mov xor jg adc mov daa (bad) fdivrl sbb adc inc (bad) (bad) je jmp sahf call repz int xchg fdiv jno gs popl rolb xchg sub adc pushl sbb cmpsb ja cmp test adc jecxz call ret jno dec sub scas shrl shr cwtl jmp int3 pop sub mov sub (bad) adc lahf or aad rcr outsb jb mov stc jg xor mov cwtl push (bad) or ljmp pminub imul bound hlt subb xor test adc mov xor stos jle sbb adc (bad) (bad) xor in clc shlb pop dec nop popf jbe adc xchg xor adc repnz bound cmp idivb and ret movsl push jno,pn pop cmp std xor outsb add les mov xor rclb sar or push repz lock and aam sbb adc cmp inc sbb mov adc mov cld dec adc xchg cmc inc adc pop inc daa dec mov push adcb rcll adc push (bad) mov mov cmp ljmp ret in inc data16 gs xlat (bad) lods div (bad) and mov ds pushf or jno fisttpl cmp jmp sbb jne ja xor stos insl adc leave jecxz out pop repnz loope movsb jge fdivrp adc sbb ss out int3 imul loop out or fdivr adc add leave sahf adc addr16 xchg ret pop jo xor data16 sub push mov clc push cmpsl enter test mul or jb inc je xor push adc mov pop pop add lcall add ss stc fnsave push cmpsb add mov dec or pop lcall jnp je arpl xor es repz add aaa mov mov imul ret pslld sbb addr16 int push inc ja mov or lods shr lea and jb adc inc ret push sahf cmp adc pop cmp divb (bad) fimul adcl add dec fisubl lods adc pop fs xchg int3 popf push repz jno sub mov je arpl jle add bound cmp inc (bad) cwtl dec xor daa pop movsl leave shrl call adc (bad) mov add and ret fldenv pushf adc xchg daa insb xchg push bound jnp xor mov pop push ret mov sbb push jle repz mov scas inc jnp fsubr sbb xchg imul mov dec int lahf xlat adc fwait or and lods jle inc inc mov in stos dec xor stos sub xor in push dec xchg ret or cmp xor movsb pop mov add (bad) pop jg jne adc push dec mov xchg ja in je stos pop add or sbb xlat pushf lahf mov imul out in add daa std jnp mov ret aaa cli xor mov dec lret (bad) adc inc mov xchg and pop pop xor fistpll insl sbb or enter adc mov sahf jp or cld dec stos ret jge adc xchg cmpl jo jl cmc adc (bad) jno mov cltd fmulp jmp loopne mov xchg mov cld inc addr16 xor out (bad) icebp jle pop insb jae dec clc hlt sahf outsb adc or pop cmp lods data16 inc (bad) mov ficoml rorb mov jecxz sub jns xchg inc pushf dec adc mov fimul stos inc sbb icebp lcall inc pushf lret mov adc adc or (bad) repz dec jbe int3 out fdivrl (bad) jecxz add push mov sbb jp xchg in sub sbb jl sbb pop addr16 pushf out adc or dec inc pusha sbb or repnz xchg out sbb shrl inc lea sub push add mov jmp jl push adc mov test dec aam cli push lock sbb jmp int3 out jns fdivs (bad) mov xchg jp fldcw rorl aad pop pop cmpsl jo (bad) mov out push pause loopne or fsubl add sbb in adc push (bad) adc sub dec adc mov aas and adc stos scas or pop loopne shr or data16 rol lods call mov adc cmp lahf adc fnop adc push (bad) xchg scas int3 sbb adc xor cwtl rcrb lea or hlt dec test adc in dec loope cmc mov inc push (bad) repz pop push inc push (bad) fldl mov cwtl add stos fs aad add fdivl add mov clc sbb xor adc repz or popf (bad) adc in iret jne jmp dec jne push int dec ret stos jae and sbb roll fisubl adc daa sarb adc jb xor enter add or js add and dec shl add fstpt arpl outsl (bad) sub sub shl popa popf adc imul sarl push adcl rorb push cmp fadds sbb add pop arpl adc je fisubl jle cmpsl out cmp lea xlat mov je mov ret mov jg out mov xchg call aas inc xchg iret xor inc int jmp adc fwait (bad) mov and insb adc mov or dec xchg and and mov psrlq inc jns sbb xchg mov int3 dec mov (bad) ja jmp adc push lcall lret jl sub fsubr adc popa sub add test jecxz outsl das pop adc repz and mov ret cmpsl popa int3 in adc repz push and adc jne fs xchg call in cmp sahf push add test sahf nop movb dec repnz sub lea jae inc or sub mov jle jb addr16 std adc test ljmp mov jns (bad) fildl jb icebp xchg outsb in and je test add xchg or shrl (bad) fbld ret add es push cs xchg adc mov pop out inc hlt das cmpsb adc lods aaa (bad) jnp push xchg stos jb push (bad) add aad sbb xchg jecxz fucomp arpl (bad) hlt int3 add sti inc sub fwait jp push jecxz rolb or repz mov push sbb mov in jnp mov ficompl (bad) push xor adc lods gs into adc cltd pop lds push loopne push xor std dec inc repz outsl xchg adc or adc add lahf pop jno adc or add xchg mov jb jecxz pop adc (bad) sbb xor sub mulb adc hlt (bad) div adc mov and jno jle ret repz sub out add leave scas adc push dec jae xchg ficom fistl sahf test xchg outsb cmp pop not adc cld jne xor xor addb cmp cmp pop cltd adc outsb and inc jns jbe xor int inc mov (bad) dec lock cli jb cmp shl inc sbb mov xchg cs cmpb stc subl (bad) aam dec xor mov xor xchg cmp or lret pushf scas adc push lds jnp xor or nop inc daa add ja sub fcoms in add sub lret adc mov bound and mov mov rolb cli adc sbb into sbb mov (bad) lods dec je sub adc xchg ds cmp cli test mov (bad) pop adc js in aas mov (bad) fdivl pop add jl and mov sbb iret sbb clc adc sub pushf sbb adc aas cmp mov jbe pop sbb adc ss call lret popa jo add inc adc fstl xor iret adc aad mov adc (bad) mov pop stos into pop hlt addr16 add sbb dec clc mov lods sub outsb nop rcrb mov (bad) adc or jle sbb call lret mov adc cwtl dec xchg (bad) int xor sub dec add adc and loopne and insl mov adc mov daa push adc xlat test test out pop iret int adc jo xchg xchg sub sar xlat cs test dec leave add mov add out into push and (bad) or adc cs dec inc jle adc fstps mov fidivl inc cmp or movb insb adcl mov std test add cmp div and push xor xor daa inc repnz sbb or mov xor lods sub (bad) (bad) imul hlt fisubrl cmp mov adc aaa lods in dec lea std inc or stos leave adc adc pop cwtl in stos ljmp in and mov dec adc fst adc adc inc push fcoml lcall and push insl mov mov adc js pop adc xchg push ret (bad) mov adc sub loope rorb push sub add test lock rorb cmp inc adc lcall lods movsl push rcl arpl cmp fucomip xor adc out xor inc and sarb outsb into call mov jne popa adc mov ficompl and adc rclb jle mov jmp mov cmc leave dec int3 sbb pop inc and pusha test adc cmp pop xchg data16 rclb sub insl ficoml mov mov lods (bad) mov ds adcl jmp inc adc lret daa mov ret (bad) add push sbb adc xchg pop cmp enter push test jnp cmp push mov (bad) adc std xchg popa cmpl adc pop lds push jp adc es xor js pop popf jno jns push movsl sub jp xchg xchg pop mov stos mov int3 mov aaa cmpsb shrb lcall xor (bad) mov jmp jbe hlt nop adc popa je aam (bad) jae sbb aad testb cld push cmp nop xchg outsb std cli hlt loop das leave cmp stos adc inc jle sub mov bound adc xchg cwtl adc xchg rorl and xlat push cmp sbb xor push dec mov adc jno and ret ljmp sbb (bad) sbb shl mov mov or outsl adc jbe adc pop adc mov stos cli xchg sub adc cwtl mov lret mov cmp in pop popa pop insb aaa je out adc dec inc jmp ficompl jp test or add adc std or int3 cmp fildll sub (bad) sbb push rep jl xor in and aam xor jl pusha fwait dec adc mov pop adc scas dec in je ljmp mov add pop lahf sar sti or insl mov testb mov sbb pop inc or or fs push push fild adc sbb xor stos imul pop scas add stc hlt sub cmp inc adcl (bad) fbld cmc pop sub (bad) mov mov and out dec xchg pop adc mov fistp dec xor dec lahf insl adc js lock (bad) out dec lret dec scas adc or inc sahf sbb push xchg adc enter sub adc xchg cmc xchg repz push sar jg or add cmpsl add fistp stos popa (bad) mov cmp fcomps or add subl xor mov (bad) push push or repz jae jno daa xor push and in sbb adc push lret add loope,pn adc jecxz repnz fisttpll lock and ljmp arpl dec mov es xchg scas je dec or scas repnz jl adc fist jmp push pop jns jle xchg adc adc lock fidivrl and lods aam adc sbb ds pushf fwait adc jns fcom mov jl push adc and push loope adc xor cmp mov imul es adc mov mov inc aaa movsb jmp iret pop adc out loop sbb pop and push nop push mov adc cmpsl pop aad faddl and loop dec mov or movsb jae ret std mov mov repz sbb jge mov pop aam adc xlat push mov (bad) outsb icebp jecxz sub ss sbb adc pop mov jl sub fidivr cmp arpl out sbb lret mov in sbb lods adc movsl je adc loop or test ret lds adc or xchg cmp enter fmul pusha xor pop mov mov into push adc add arpl ja sub and and and or pop int and mov arpl pop ss loopne movsl xor imul mov mov or lods pop movq mov insb push scas adc mov lret std mov and fnstenv push fcmovne sbb add stos rclb push adc push int3 jb int loop (bad) out xor inc rclb dec repz adc stc imul mov xchg xor loope adc jmp adc arpl ret mov and sbb jmp push mov xor inc adc fs mov mov (bad) icebp or mov push sub movl in jns sti inc push int push adc and xchg stos cmpsl xorb sbb adc inc push sub iret pop insb icebp shrl inc sahf cmp pop jbe test lock icebp mov push add ss sub gs rolb mov mov int cli das pop mov jmp mov loopne adc mov add bound jno lcall sysenter cli stos subb jle xor repnz cmp jecxz ret xchg add cld cmpsl adc pop xchg push sub popa fucomi xchg out loope xchg cmp in popf push aas out or xor in add nop adc mov mov xor mov inc in pop jp dec adc stos shr outsl dec adc xlat cmpsb push adc lods cli out pop or adc addl arpl mov and or leave out rolb pushf sbb lods mov aad sub loop adc dec clc sub push push mov mov in push and add pop lahf sbb movsl push cltd inc adc and lcall sbb call or jo lea mov out ror adc cmp movsl adc adc (bad) mov rorl pop cmp loopne in mov or adc mov fs icebp add (bad) mov push jp cvtps2pd dec leave jl xchg mov sbb adc pop outsl sub inc cwtl mov push xor xchg adc inc daa mov out pop sbb imul push push je pushf add jl or jb int pusha add xchg clc adc push push aad idivb out (bad) loopne lret (bad) adc sbb repnz pop jge jecxz push mov dec and mov mov sbb adc cltd mov sbb mov add test mov lods leave dec push clc popf adc adc fs mov pop sub sub xchg loopne repz jnp pop or or cld adc push fnstsw adc and insb add adc fcomps aas insl and iret mov es ror sbb movsb int3 mov fucom fimull aaa add cmc jmp lock fmul push ficom jns pop pop mov bound xor mov xchg out sbb fdivrl or negb pushf xor clc sub jp jecxz ljmp jae push mov mov lock sbb mov pusha xchg xor xor mov enter sarb push and stos in test push das rorb dec pop adc cld cmp dec xorl dec hlt xchg sub mov and mov push adc scas sub sbb push (bad) jne xchg add notl adc popa cwtl aam jo adc out add jmp shufps push repz sub xchg adc sub or and cmp mov lock fstl jp (bad) in ds out dec push xchg dec fwait jmp adc jb (bad) lock aaa mov cmp mov jl mov (bad) mull jns mov xor fistp mov daa cld adc enter adc outsb xor movsb into adcl jne (bad) dec adc add adc cli mov ss (bad) jmp clc (bad) or adc outsb dec jmp and xor mov (bad) call or rclb and push adc mov jne dec aad xchg lret jg adc sub loop cwtl pop mov xchg cmp adc pop ss mov jle add jmp and sbb mov mov in outsb xorb add ss (bad) aaa jne xor loope mov sbb adc addr16 aas mov xor add jo add (bad) enter scas inc scas pop pop xor jns mov vcvtdq2ps (bad) lock cmp add add or ficom aam jge jne sbb jns add jg das imul lock xlat adc xchg dec push sbb adc add mov enter xchg sub sbb clc lret or push mov mov jecxz popf je push adc arpl jno mov mov stos notl lds xchg leave sarb push adc adc xchg dec and xchg lret into sub (bad) push aaa mov inc add dec adc jmp mov arpl or cmpsb mov sub mov out push push inc lock insb ficom test xor out add or mov sbb inc dec mov std xor push cmpb scas jbe adc cmp jmp mov lret jmp gs xlat test scas pusha mov sbb mov and outsl mov hlt lcall xor in adc mov or fwait jo or lret popa mov xor (bad) inc or xor adc and mov mov push sub mov pop loop xor jne enter jg xchg pop movsb xchg lea adc pop andl inc mov jp mov mov pop out aaa cmp pop shrb fist adc xchg pop or pop adc and hlt lret rcll test adc push (bad) fsubs adc (bad) ljmp push mov adc pop and jbe add aam mov push (bad) push fcomps lods xor sub xor jb ja jns in push jmp or adc push mov and (bad) sti leave cmpsb cld xchg adc mov hlt sub push xchg or sub in adc movsl repz pop insb js pop mov sbb cmpsl stc rorl adc inc cmp pushf fs shrb aad push cwtl push mov leave adc push rorb push aam pop mov lahf add mov cmp mov dec lock jecxz icebp (bad) scas mov or jle sahf xchg or inc add adc call lea adc xchg pop adc (bad) sub jl aaa fidivrl fdivs cwtl pushf push je adc jg push mov pop and scas nop adc cs fldl mov pop jecxz mov add test or add and adc fbstp adc fsubrl inc mov fstpt or or cli cmp jecxz adc add lret fistp cmp adc xor cltd mov std addr16 adc adc lds adc mov or sbb mov ja jns inc sti iret jo xor aam inc stos push pop add fisttpl or sub in jne adc cmp (bad) negl sub jle pop data16 fnstenv jae adc mov jl inc (bad) fwait push jg sahf lahf adc lods xor andl jge lea push push mov cmp lahf jb cwtl je jge fwait xor fadd jp dec fistl push sub loopne test mov outsl adc mov adc jno out nop or test adc push shld push loopne fucom in out int sbb adc scas rolb push xor push add scas jge in adc or mov xor ds jns lock sbbb (bad) leave js pop hlt cmp mov jne xchg sbb adc sti into xchg adc mov jo jno aad (bad) fist mov and jbe repnz cld add dec xor imul loopne sbb out dec insl cld (bad) nop fsubr adc movb ret out arpl adc lds mov adc mov mov adc mov adc mov pop (bad) push int3 xchg in adc push setno sub and adc sarb adc sbb fdiv xor inc push std out add (bad) mov sub les sbbb out insb aad cwtl inc popf push jne push cmp and cltd jecxz ret xor outsb ljmp adc sub dec mov xchg (bad) mov enter cld xor out mulb cmpsl mov pop jno jns adc adc xor call jg mov cmp inc add mov stos int3 adc mov cltd dec push cmp push push cmp sbb dec dec loope je xlat or es clc repz push das mov adc in cmp jp jge adc clc incb mov hlt pop inc add xor mov sbb aad cmp jle pop (bad) adc jb mov mov mov ljmp pop mov (bad) xchg inc lret les (bad) fidivl push sti repz orb adc or mov mov stos ss adc cmp or and out jo adc inc pop push and out add mov dec add mov adc lcall add rcr clc push lret pop sub inc sbb ljmp add pop adc or icebp mov lret xor arpl xchg push xor inc inc iret es push data16 stos mov pop adcb ret cmpsl clc (bad) xor dec sbb mov mov mov scas push gs xchg cmp fnstsw sub adc adc mul loopne sbb pusha push or mov aad sbb in lret rorl pop cmp push outsl in adc mov lods in (bad) out adc lahf stos xchg adc mov mov aam dec or cmp jp cld pop xor lock jne add mov xor lcall add adc fdiv out xchg test fstpt mov sub adc mov jl pop xor add adc rcrl xchg jo jge nop push xor mov mov fcompl xor enter pop aad sbb frstor dec ficompl repz sbb push jp push jo insb cli (bad) pop es lds mov mul addb push mov in pusha sbb adc jnp add lods sbb call mov sbb pushf into (bad) mov sahf cmp lret mov mov or cmp xchg add sbb mov or out cmp pop or cli inc jmp mov or into or les call dec aad je repnz xor xor popa inc adc hlt rorb pop push inc pop push pop fnstcw sub mov into dec adc jp aam push adc and int cwtl addr16 pop sahf mov aam adc xchg lcall ja loopne pop xor gs nop xchg out mov shrl jns fwait loope inc insl (bad) cmc shrb or out cltd mov fstps imul adc dec cmp xor sub mov xchg loope (bad) sbb jae loopne movsl jne test fmuls mov decb int imul add fsubrs movsl sti adc adc adc clc imul rcl xlat ljmp or sarl dec call jmp pushf add leave (bad) adc aam dec addr16 iret xchg shll test repz ret aaa dec adc push mov adc pop sub adc push jp jne mov aaa and cs adc mov push (bad) rclb jp mov in sbb and xchg add pop vrsqrtps jg and xor inc or push pop adc adcb aad xchg scas js cmpsb leave in adc lea aam mov mov or vsqrtsd push stos pusha add test jne xchg pop inc push aas jb push adc nop or and mov xor xchg dec cmp and xor (bad) dec inc sub int sbb pop or cli aam or mov jl mov mov push cmp repz mov fistp push push and jmp mov je mov jp repnz mov dec push sbb adc sub xchg inc adc jbe rorl lret roll adc add aas fcoml out mov adc xchg inc subps test mov and popf jl adc mov (bad) fcmovne cwtl adc (bad) rorb test mov and nop sub jmp mov adc mov testl push adc xor push pop cmp adc mov push lahf addr16 and push fdivr lret xor stos sub xor outsl fisttpl cmp adc popf aad pop mov ljmp or mov cld pop sarl add pop pop adc mov aam mov adc mov adc cmp jb int xchg lods lock gs call jmp out add movsb xchg add call mov inc shr fildll pop xchg xchg cmp adc sbb or stc xchg leave or cld mov dec movsl push cmpsb dec and call ljmp adc xchg cltd test xchg orb xor mov ret imul insb mov out (bad) mov xor fistl push cmc iret sbb xchg xor sbb xor popa adc xor xchg int fbstp push test add xor dec mov lea je movsl add xchg push insl adc addr16 ret fwait push adc or add loopne enter xchg xor and jb pop sahf ss jns pop cmp bound or stc lods movsb rcll pop es inc inc repz cs xchg or aas (bad) sbb mov mov jecxz jbe sets push push adc insb xchg popa adc lret and adc pop pop fldcw adc or jno and or mov dec xor lret (bad) fistp add sarb sub adc jmp enter cltd stos inc js add out adc (bad) movsl sub out adc addr16 scas add xchg push pushf (bad) lret push popl inc xchg adc or push hlt daa jle dec add mov stc mov mov jae xor rcrb adc inc pop xor movsb jg cs fdivs mov adc mov sub imul and mov push adc call in adc xor arpl adc lcall cmp lea aad inc xchg sub add push xchg sarl daa mov addl out pusha (bad) adc cmc xor fwait cmp jg leave xchg mov stos or movsl jmp pop scas daa cmp and sub int3 jge in pop adc fildl in xor push adc dec push sbb pop cmpsl (bad) xchg sbb pop dec inc mov pop iret mov xor daa and mov push aad jle in (bad) jno adc cmp push and xchg mov aaa fisubrl rsqrtps fldt enter lret lea mov xor out (bad) int scas mov sub lahf mov adc dec insl rcrb pop (bad) in or inc xchg mov adc mov push adc mov push sahf add xor push add jg shll push xor push jecxz movsb stos mov pop push addr16 adc fstps fisttpl fwait ss (bad) cmc into mov inc xchg push and cwtl nop adc cld stos scas sbb sub mov divl xor push in repz dec aam xor xorl ss mov arpl clc xor adc les xorl repnz add inc outsl sbb test adc cmp pop fsubrl xor and (bad) cltd call sbb mov and cmp dec ja stos adc lods pop cld add lret loop sbb mov aam subl push gs test out dec mov popa jmp aas pop or mov push test and in pop ret adcb adc ds push test jnp fisubrl cmpsb idivb adc decb and sbb adc add adc js es dec mov adc test enter dec add outsb sbb rclb xorb ret dec jno dec push or insl stc repz jecxz mov adc aam daa push icebp adc jmp rcr cmpsl clc and sarb cmp ljmp cwtl jns nop lahf aas push scas push in jno dec push adc mov pop adc jp test out xor sar aam fistp xchg adc sbb adc xlat dec pop lcall add test or test aad adc xchg mov mov mov pusha sbb adc fcoms out sbb repnz clc rcr popf inc inc adc out adc out adcl lds notb fstpl xchg push int adc push push dec mov xor push mov add movsl cmp jnp ja xor insl sub xchg fnstsw (bad) add xor dec push push inc fstl push ret cmp jb push sub mov pop add movsb push stos ds mov xlat in add or mov loopne dec mov movsl mov imul or stos fnop lock adc loope add pop ret add rcrb aad (bad) mov fs adc jp test xchg add dec add icebp or jmp pop adc push mov add ret movsb or xor cmp cld adc ret and jmp mov adc (bad) mov mov push adc test fwait adc sub addl popa icebp dec fsubl ja mov jecxz fist cmpsl not pop mov jb mov jl xchg out inc jg mov inc pop xchg dec mov (bad) das lret adc cmp pop int adc pop into pushl mov adc jecxz or (bad) mov mov lret push push jo adc mov jecxz fbld xsaveopt popf rorb and jp mov mov (bad) test mov cmp and fmul push adc cmpsb fisubl adc add cmp adc sub repnz jecxz add sbb in les mov dec pop adc ret clc xchg sub xlat mov adc cmp in inc sub adc (bad) stos into imul mov mov sub repz pop mov and or add test aam sbb pop outsb stos or adc iret xor arpl push xor jno cmpsl cli xchg add adc mov (bad) xor cvttps2pi and (bad) out and push xor jle jp push adcl mov mov and xor adc ss (bad) mov push pop mov adc push push push xchg adcl adc aaa imul jae jle inc (bad) mov sub std pushf dec aam stc repz gs test cmpsb adc mov adc sub enter adc sub sub jge mov inc adc and xor into or ss setb mov shlb xchg popf loope cvtps2pi mov ljmp test (bad) std and test add push xchg xor push mov pop and in add cltd ljmp sub xor outsl jecxz xlat sbb xor xchg adc aas stos jnp cmp mov push adc mov cmc mov jle arpl call fnsave mov mov and xchg dec sti je pop mov mov pop mov stc mov jne mov add mov sbb (bad) xchg insl mov adc mov outsb adc jle jbe rol push push test mov mov loopne push xchg scas xlat lds mov xchg jl jecxz je pusha (bad) xor lcall jne insb mov pop inc pop mov pop and inc sahf gs in push cld adc or adc jno pop out aam adc insl push rclb mov adc dec ja jp mov adcb ljmp push mov dec iret xor (bad) xlat shll adc sub push xchg adc cmp pushf adc pop pop nop hlt mov dec xchg cmpsb insl jecxz jg ja jmp bound pop cmpsl or adc test push shrl fs mov fidivl mov cltd adc sbb jl sub les outsb xchg sti push (bad) stos mov mov inc and adc pop pop iret and jb (bad) pushf dec repz sbb mov and mov sarb adc dec inc mov adc jbe stc mov adc push (bad) pop adc xchg and adc xor int ds divb pop push jle cmp ja inc add pop add mov lea sub dec fisttpl (bad) jbe cld or adc adc cmp push repz scas push jmp sbb in and es arpl leave sub adc outsb adc jae mov ud2 in movsb mov dec test hlt dec xchg add or adc push push roll adc lret iret dec lods out adc ljmp and jp adc jnp dec lea (bad) inc stos test cmp dec pop jp iret adc std roll fldenv gs out xor ss cmp xor mov or jns or mov (bad) je shll xor push push jo adc mov repnz mov sub test adc (bad) or lods loope mov (bad) ret or les sbb mov mov dec pop mov scas adc in orb int lods xchg movsl push xorl sbb imul ds ljmp or mov push test pushf push push gs mov jno mov ror aad or jp mov mul cli sbb sarb dec pop aam fs sub mov xor cmp lods clc jno (bad) mov add sub dec (bad) mov adc (bad) xor add psubw ja xchg cltd adc cmpl lea adcb fistpl adc inc or repz cmp cwtl jo arpl repz fstpt pop in jecxz adc xchg pop mov test into lahf dec xor iret add mov mov rolb pop xchg adc paddq adc pop test inc out pop into adc int3 out cmp adc sti xchg dec loope pop test xlat xchg cmp and mov js (bad) fstpl adc dec adc leave add mov jmp scas insl cmp cltd sub sbb jns repnz push ret rclb sbb lods push sbb sub add adc sbb cmp loop in push add scas sbb push jnp enter pop mov pop mov (bad) iret dec aad xor pop push mov cld sub mov out pop stos xchg xchg or fwait arpl xchg and les mov dec adc rcrl scas cli jne mov fstpl mov fcoms cli push rclb cmp movsl mov out xor insb loop das mov mov and xchg inc or sbb adc jbe jo inc xor adc cmp mov lds leave scas inc out and test adc shlb or aaa add movd adc shlb (bad) or sub adc stos jmp test fldenv pop adc daa (bad) into push lock sub pop xor inc out xchg pop fcoml or bound or xor out imul mov mov paddb psrld lock pop add or adc icebp xchg enter shll mov pop dec dec mov inc dec adc xchg and inc push adc and scas cmpsb rolb mov push adc mov jmp mov out xor (bad) adc sbb jbe inc jns push lds in lods in pusha add adc loopne hlt sahf jge adc cs adc dec dec je xlat xchg dec push stos rorb mov popl outsl call or mov in xchg push push push pop gs lea dec loopne aas adc or ds push adc es ret std push adc cmc mov outsb pop je les movsb mov clc xor sub arpl mov or lods sbb jnp pop jg adc testl inc inc inc dec aaa shr or movsl div xor das and sbb jno sti mov ljmp mov xor pop lods in pop xchg mov cmp adc add add roll (bad) mov sub pop nop sub mov andnps add (bad) xor and icebp inc and xchg sbb mov mov xor std ss in inc mov mov push adc add adc dec shlb int3 mov push pusha mov adc dec pop push stc nop stos stos (bad) adc out or enter or cmpsb mov fisubrl hlt ret mov arpl mov aam xlat mov lods adc jp cmp push or jg push sar add ja daa pop sbb std and sbb jl lret mov fldl aas or pop dec stos mov push inc pop cmp lods adc jmp sbb repz repz insb cli cmp or and ljmp inc int xchg push fcoml cmp in pop rolb (bad) sub mov (bad) jg adc into int add push or addb adc jmp inc loope test mov and adc sub cmpsb mov sti mov pop lret cmp pop add push (bad) mov sbb xlat ret jns adc xor inc mov (bad) fsub orb es add outsb mov jae sar adc test lahf xchg mov pop leave xor sub int3 repz repnz or mov pop jae mov adc andl adc sti and imul (bad) (bad) shll dec adc push (bad) sbb jl or aaa into xor mov pop out adc pop pop pop pop sub add adc cwtl loop xchg adc leave add mov jns das mov ljmp cmp dec scas add dec hlt and and loope das jmp repz mov movsb test or (bad) dec xrelease inc imul add adc pop jl call leave or lea inc (bad) and or pop hlt or mov insb push add mov and test mov scas xchg mov inc add std or adcb pop mov sti add in push mov adc (bad) lods sbb (bad) adc add cmp dec cmc adc movsl jae add push adc rep arpl dec leave sub push or cmpsl daa test fmull testl jecxz in lcall lret xor adc nop in pop mov pop jne cwtl adc adc std and sub jns sbb mov inc pop adc sub sub test xor jmp or out sbbb adc ss xor ret (bad) cmp cs mov adc adcl repz jecxz or cwtl (bad) les ret adc in insb inc xchg lds addl xchg xchg hlt (bad) bound nop out addr16 loopne pushf outsb mov mov ja jmp lahf daa xor dec add mov jns (bad) in out iret xchg xlat mov mov jnp (bad) adc push jbe ja adc mov adc add add int3 dec xor nop repz out add stc adc cmpsb mov jne clc or mov sbb mov sub scas mov aaa ficompl push pop popf fs repz (bad) pop int3 test pop ret pop mov in dec add mov test mov add adc lahf dec push popf int3 mov outsb movsb sub (bad) adc pop out in in cmp test dec pop adc mov fiaddl add aaa mov sub lods jnp fidiv sbb cmc mov lcall pop jmp xor mov enter push push push jle jg jle addr16 mov and mov push dec push and xor in pop pushl pop adc into outsb fdivs enter nop adc les mov cmp imul sub pop dec outsl not dec xchg int3 stc jp or cli pop dec xchg push or push test dec mov push adc mov fdivl push sbb daa sub sbb mov pop add adc pop inc jge adc sub adc pop push mov insl xchg dec xchg adc sti or (bad) adc cltd sbb mov mov add xchg xor roll shlb cs add stc loop adc repz and mov xor (bad) addr16 lret dec dec jmp and lahf mov push adc adc lea mov (bad) xlat adc pusha fisttp fwait arpl cmp sbb add roll scas dec out adc sbb shlb mov (bad) aam dec jo aas je hlt jne inc call push adc push sbb in fwait in adc mov xchg icebp inc lea imul adc (bad) add sahf mov out mov push fmulp adc sarb hlt lret out adc clc test lds dec and jae or lcall pushf aaa test es das adc mov xor pop popf adc in add ret sub bndstx and push jbe sbb and adc mull incb push adc cltd ja xor adc jge das hlt push xor xchg push mov mov adc movsb lds jno pop cmp sahf adc cmp cmp mov (bad) xchg jge push jno pusha adc add xchg hlt inc aaa adc loopne adc mov lock jg add xlat jne (bad) fcoms sub jp jge or adc cmp (bad) mov cmp mov das imul adc push aam xchg in sbb cmp inc jbe rorl loope decb fnop fcmove push mov sbbl fisubrl minps sbb outsl adc jge jmp adc xchg inc lahf and sbb adc xor nop std and (bad) sbb push adc jne pop icebp (bad) scas adc cli stc out mov adc xchg pop cmc lods cmp sub and in mov xlat pop and aaa mov fsts inc mov xor pop int3 cld (bad) adc call or jbe dec fmull lock repz adc cmp adc push sbb mov stos xchg scas sbb js popf (bad) adc repnz les push pop adc jbe movsl sub pushf sbb lret push xchg add dec push xor jne mov push xor adc into pop (bad) lock dec xor pop inc cmove adc adcl mov lock add and dec adc inc pop xor push xchg xchg int3 lds je pop fimull adc mov add mov imul jge xchg sbb arpl and jecxz mov test mov scas adc addr16 fwait dec cmp adc xchg lret in jb xor xchg insl and mov jno cmpsb cwtl das push mov imul inc mov xchg xchg scas outsb jo (bad) xor aaa xorl adcb popf out push or bound cli aaa jns xchg jl adc fs adc push lcall and xchg push push xchg adc imul or outsb or mov scas sbb pop sub cmpsl (bad) xlat test xor cld popa adc jae pop (bad) jno sbb dec fucomi test push fwait push stos dec jbe adc icebp pop mov inc ljmp cmp arpl push adc shrl sbb ret pop mov (bad) mov ficoml minps xchg faddl movsb and adc adc mov adc mov dec xchg dec push fsubs cmp out addr16 add ficomp mov adc dec cld out mov lods test or (bad) or (bad) adc sub adc test rcll sar clc ja icebp aad rorb mov adc xchg cmc rorb mov or scas lea inc adc lret push push sbb adc push fdivrl gs shrb dec loopne mov ljmp sbb mov mov imul mov add pop push adc pusha lea xchg (bad) adc adc xor xchg mov nop aad mov xor adc jl (bad) flds xor scas inc mov rcrb push mov or adc stos pop cmpsb iret or xor adc icebp repnz mov inc xor cmp adc hlt mov jns bound out add sbb cmp add xchg mov lods movsb adc mov into bound adc mov nop loopne push sub jmp mov fistpll adc adc es arpl nop add sbb add pushf ret xorl mov in jns out aad jge rcrl cmp and inc cmp cli adc int es xlat (bad) ja jle mov (bad) lock adc xor push push loop adc sbb lret repz add outsb adc loopne cld fisttpll adc and fcmovnbe xor inc repz push sbb notb daa stos or mov dec adc fdivrp add aaa mov xlat adc pop imull pop add sti aas mov adc pop or pop je dec data16 adc ret sbb (bad) and xlat sahf add xchg adc or pop adc push jg test shlb stc push cld cmpsb insb iret cltd adc test sbb inc jmp repz push push std adc scas (bad) xor mov fstps ljmp push push in (bad) xchg out add mov mov popf cmp pop adc cs adc push (bad) jns sub clc sbb mov bsr arpl adc aaa lahf push test lods repz add call add xchg cmp arpl inc cmp mov insb (bad) loopne ficoml in push stc fistpll mov ror adc repz in and imul push les mov mov (bad) mov or xchg pop xor inc out inc jge adc idiv movsb ljmp mov (bad) jb int3 mov sbb push idivl adc or xor mov and jge movsl fcmovnu and adc aas notb sub xchg pop into or sbb push mov into or rclb iret scas leave rolb adc sbb adc dec mov ljmp iret jecxz loop add dec jp and nop rclb pushf push push mov mov adc pop xchg adc loope push sar gs lret sbb stos adc mov pop neg xor mov adc mov cmp xor mov or mov add mov adc sbb repz mov mov add out mov lea mov jnp add mov adc dec ljmp cmp jb in repz mov mov or push pop cmp or push fisttp outsb and mov cmp adc add mov mov mov sti xchg (bad) mov das mov fstpt mov adc push pop hlt sbb ret fwait or adc imul mov mov add repz add or cmp sub ret movsb pop addl mov xchg js xorb adc inc and push repz mov push xchg xchg adc aaa (bad) sti mov push dec adc mov rcll cmp mov inc fdivrl inc cmp int3 sbb into pop add lock jg adc out cmp or jnp icebp adc or adc dec push pop jl out adc mov sbb ljmp loopne fwait dec out xchg test shrb aas jo sbb jae insl adc jbe mov sbb or add scas lods repnz hlt std inc sti and mov adc (bad) mov push mov and imul push dec les dec sbb jb adc and xchg adc ficom lahf push fs pop adc cmp aaa mov loope icebp gs cld maxps mov sti sbb push icebp cmp pop sub cmp add push ss out add jae adc test push rcll ret ja lcall fcompl inc pop jmp andl adc push lret push lahf add mov adc or mov add outsl loopne sbb popa (bad) rcr xchg rorb inc and nop in outsb mov mov notl das xor mov jnp xlat mov pop mov sbb popa (bad) adc push jl sbb and adc sbb stos incb xor jecxz xor adc xor mov fwait in adc std mov sarl adc and cli adc icebp stos popl insb call adc xor jp inc test (bad) mov adc pop inc or xor test xor cmpl (bad) xor sbb mov std add sar sbbl push (bad) pop fcoms add adc in leave cmp sub push adc inc or add or adc jb dec push xor sti and push mov jg in mov call mov cld lds in out int pop clc sbb dec push adc cmp les je push js push jp adc (bad) into (bad) adc pop cmp dec rclb push pop xor adc movsl out pop es lock shrl adc icebp xor mov adc iret jb pop jecxz add jge mov add (bad) repz ja fcompl jp add adc cmp scas adc inc sbb adc stc jmp aad leave clc adc loopne xchg rcr xor shll ljmp mov jb jmp repz test adc xor nop sub rolb mov or (bad) adc and cli mov sbb add push pusha mov psubsw mov call pushf ret adc inc inc xchg aaa dec (bad) add ja mov mov movsb pop mov mov stos mov xlat out or loop add mov add adc loopne je fiadd lcall sbb (bad) dec sahf xor pop jle aas ss xchg ljmp mov adc jne adc mov in push sub xchg add hlt sbb jb jne mov inc adc enter cmp bound dec xor orl hlt adc jmp adc sub adc push push pop push dec enter jnp pop dec pusha adc sbb fistl mov xchg xchg mov ret push sub into cltd std mov adc (bad) xchg negb data16 inc inc insl bnd push rcl push mov mov pop (bad) push inc push and mov mov popa sti xchg adc adcl sub xchg adc cmp xor and mov scas stc roll adc cld (bad) hlt dec inc adc pusha jmp fwait adc in dec adc data16 jb out xor cwtl loope mov inc mov and push mov cmpsb pusha jle adc inc mov push adc out xlat enter repnz dec sub repz cmp push jg dec adc out adcl shlb bound adc ret push insb adc repnz inc out mov push add push inc loopne push lahf adc add pop push mov repz adc in or inc insl dec mov loop mov loopne imul sbb xchg adc adc aad xor lcall xchg cmc scas adc push inc scas cmp pusha adc (bad) enter adc cmc rorl inc mov xchg lahf xor sti mov pusha adc ficom leave mov inc outsl mov mov fstpl push iret adc inc jp adc jno popa (bad) sub aam mov daa insl fstl cld gs in dec (bad) ja mov lock fmull lock sbb enter cmc cmp add outsb divl cmp adc mov std xchg pushf into cmp repz stos sbb xor loop decl fcompl (bad) jecxz cmp adc popa mov inc mov add jbe shll in adc out sub test mov aad inc icebp sbb cmp adc subb idivb mov inc enter sbb pop cwtl add xor mov adc (bad) mov adc stc (bad) push xor in mov ret xchg push inc lahf f2xm1 bound nop ficomp pop mov push incl icebp adc xchg adc stos sub push pop inc popf sahf adc mov xor mov movsl mov or std arpl jbe mov (bad) shrl xchg loop shrl add inc xor out mov cmpsb adc xor pushf adc lcall setb adc mov cwtl adc sub cld push in mov add nop jb jno mov imul push mov into sub sbb adc mov jne call mov cmp adc inc data16 sarb jns mov push mov dec push call adc and cmp adc cmp jb push out or test jno das ret sbb les adc and cwtl adc xchg sbb push sub jno andl mov lock mov mov adc mov mov xchg cltd adc push lcall dec aam xchg pop sub sub pop jno (bad) sbb in fisubr add jmp adcl dec imul jmp (bad) xor or jnp in mov rcl adc mov xchg xor and ror adc sub test or (bad) xchg mov lods out cmc inc or repz add data16 xchg leave shlb imul cwtl aaa jns fnstcw fs pop or adc out aad jns iret adc and mov mov push cmp sbb sbb sbb and loopne adc mov int inc sbb inc and sub pop daa jge push pop inc mov sbb jmp mov dec push cmpsb mov push push cwtl fildll in dec adc inc adc popa imul adc jb pop adc fadds hlt or xor jb popa sbb je cmp mov pushf and pop mov add sbb pop fistl push repnz test sbb jecxz in mov pop arpl mov inc add add adc lock dec call fdivl int3 push adc nop add and dec xlat jmp xchg ss inc fbstp push mov adc lcall jecxz inc push mov (bad) lea adc ja jp inc jns movsb inc mov cmp push push jae or mov orl xchg xchg push enter and adc mov push mov dec push stos into stos add pop xchg cld scas inc add sti sbb arpl adc jle sub sbb or pop push adc jno sbb sbb mov pop sbb inc dec call daa (bad) repnz mov xchg add adc mov (bad) dec mov sub lock sbb adc test cmpsl mov repz push mov or lea ret test adc popf stos push daa stc inc adc cld popl dec and clc sti ror neg lods jle adc (bad) mov jae push adc repz stc pop imul mov mov sbbl adc push xlat cmp ljmp mov fisubr and mov push mov dec lret mov adc sahf test (bad) lahf add adc sbb test shr ss paddsw adc in mov fistpl adc xchg cmp (bad) xor imul repnz or fisubl adc xchg sbb (bad) es adc jb insb mov out sbb xor push cmp popa pop pusha jmp ja int (bad) ss mov jbe scas addr16 jge mov popa (bad) call xor pop nop xor lahf repz dec arpl sbb repz scas cmp sub xchg or xchg mov mov (bad) out ja pop and push pop sbb or je xor jnp in push add (bad) cmp sbb push std ror cld or add mov adc mov and fidiv mov adc xor mov sub lahf sub adc sub push jo mov notb data16 js cld dec mov cmp add gs lret push sbb out jae mov jle adc xchg cld xchg cmp or xchg mov or test mov push dec insl jl mov inc in jb push xor stos ja adc or (bad) mov les or subl mov xchg (bad) lock jbe inc das jae pop adc out aaa push jo loop shlb mov dec xchg int3 adc mov mov push in or nop push ja mov fimul cmp and fistp mov mov (bad) adc cs into lret mov shll pusha (bad) adc insb sub jmp iret sub mov adc ret lcall sahf add imul enter insl mov sti sbb mov adc pop xchg movsb and push adc aas in loope and jnp jg adc dec and push jle mov (bad) xchg add (bad) in adc jl mov les lret or enter dec out adc mov mov add ds dec inc mov adc fmuls sbb adc adc fwait xchg mov cld jo or xor add loop jno fsubrs cmp or adc adc inc (bad) inc rcll mov xor out sti pop cmp out adc xor lods lea repz lret jmp pmulhuw push mov dec add xor pop std adc scas mov jg pop hlt and and int push inc pop push mov adc pop in mov mov pop jne mov push pop dec lcall inc mov add mov aas nop imul push pop lcall into cmp xchg mov les ret in or jns pop jae rorb add push adc or test loope mov shlb adc xor and xchg mov lcall push sub or sbb mov inc mov mov inc nop addb adc dec sbb mov mov pop cs das loope lahf ss (bad) loop aam icebp fdivrl inc jns sbb add adc daa push rcrl inc es push mov inc mov rsqrtps fs dec jbe push and loop test dec adc mov pop and add repz sbb adc xor in adc push icebp push and push lea pop push lahf pop cmp dec inc out sub jp mov mov xchg mov mov or push into jmp mov mov mov xchg int3 in repz mov adc mov push lret rol ror iret xchg (bad) les xchg mov scas push lock loop stos and adc fstps aas sbb imul inc idiv mov ja adc sub mov test clc jae mov lret mov testl sbb out call push fidivl mov movb ret lods mov mov add (bad) (bad) gs sbb and mov out adc xchg push adc sub or cli jl mov jecxz dec adc cmp cwtl out jnp cmc xchg (bad) rcrb add jl lret icebp push push and jo or repnz dec add adc pop nop mov xchg les je sti dec add sub push jp scas sbb mov and ret pop inc inc hlt (bad) adc sbb mov cs pushf or insb aaa adc nop sub mov pop cmpsb and test push daa or fidivrl push mov lcall or inc addl sbb cmpsl mov adc dec int push sub aas mov mov pop or cmpsb cmc lds std add fimul data16 pop cltd fistpll push adc add inc adc addb outsl ss adc jg add loope andl jmp add inc (bad) xor adc cmp cmp cli sbb sbb mov test in cmp sub jno repz arpl or mov stos xchg sub sbb in notl data16 test pop int mov sub or cmpsl in loope push mov add push fs inc adc rolb arpl sbb push ficom mov call adc pusha jle adc push mull adc jae popa fnop add test cmp dec inc pop mov daa rol mov jge sub repz scas shrl push negl mov mov fisttpl add xchg mov inc out mulb adcl into push shrb pop jbe cld push inc pop jno xor repz (bad) inc pop idiv enter jno adc push je add addr16 adc (bad) dec iret adc xor mov push out scas push cmp mov jne ss sbb adc rcrb xrelease mov sub lock adc mov and pop inc mov cmp mov add mov js dec jl enter jno or xchg inc sub push (bad) jbe ret or repz (bad) xor sbb adc xor mov xchg cmpsb stos push jno add cmp xchg mov add add and xchg and fs out sub xchg popl or test mov movsl jp and leave mov jns ret adc add fldl fmuls outsb or add fstpl icebp movsb push stc dec dec inc or fbld imul push test pop or scas mov nop ja popf addl fildll and js in xchg popa mov or pmaxub xor fwait mov add leave adc dec jecxz pop cmpsb (bad) cmp pop lahf lock aas fistpll adc cmp inc divl cmp dec out mov sbb mov adc sub repz in mov push pop jecxz add mov lcall es push ja jne cmp inc dec xchg aad in mov mov ja sbb add and (bad) xor (bad) mov adc aaa mov nop inc loop insl add movsb pop lock push fsts mov lahf je mov in pop jb jecxz (bad) bound or mov mov or cs es xchg in gs jl rclb iret or xchg repz sub jp jmp jecxz mov in mov scas pextrw cmp adc das mov and aam loopne lret es push add adc leave out pop xor ficomp pop ss pop fmull into xchg jbe sub xchg shlb lods (bad) push fnstcw enter mov aam add dec js mov sahf enter or popa sub sbb mov das jge inc push stc fstpl sbb repnz xchg mov push adc mov xlat stc jae mov jb push repz int3 add xor mov xor mov js xlat je lock sbb mov les repnz mov fsubrl sbbl xchg out xor pop add mov or cmp pop push sahf mov mov push iret aaa add adc dec scas xchg std mov pop je dec push pop fs int push out push add ret pop sbb jno sub fsts nop loope jp int inc adc lret jg (bad) adc jecxz imul dec das mov (bad) shr aam movsb push adc xlat mov mov push test or test push push mov (bad) pop jecxz in add popf or add xchg cwtl mov pop out mov jbe mov test pop jl mov repz sbb sbb ljmp cmpsl lret loop icebp xchg sub fldl loopne hlt pop add pop repz jo sahf or adc popf clc push adc mov mov xchg js push adc out sbb jno push xchg inc pop aas lret adc (bad) stos xchg sub adc dec outsb inc rcrl adc sahf sti push sub adc testl fstpl jne movsl xor dec movsb dec inc (bad) or cld xchg adc sbb sbb mov jp adc and inc adc repnz add popf pop add negb adc jo imul inc push lea or adc sbb jb push loope inc ret mov sbb add jmp sub xchg sahf fdivp jne repnz sbb mov cli adc jae lods push inc cmp cld out lcall fsts (bad) decl xchg inc loop xchg cltd or jae aam push test xor jecxz pop mov enter outsb xor or cwtl stos sbb jg lock pop push je pop push (bad) adc pop xchg pop mov add mov (bad) sti cmc lods loope nop pop dec inc std call adc (bad) fsts hlt push repnz jbe out pop jl cltd aam sub cmp addr16 pop outsl scas pop inc dec xchg adc adc mov jg inc mov adcb (bad) popf adc dec adc jmp mov mov inc mov jb sti adc sahf lret int andb add fcompl mov push sar repz cmpsl shlb ljmp sub pop adc sti dec mov adc aam fist and mov sbb sbb in mov sbb mov std out and or fimull dec rorl mov or insb xor adc add or mov aam dec stos adc (bad) (bad) xchg sub mov ror bound push stos mov add jmp fnsave hlt (bad) inc iret push adc in jns adc push pop xchg mov xor and stos pop scas cmp adc cmp and repnz ja and je test adc adc dec mov add ret cmp cmpsl cmp sbb fistl sub aas adc lods push lahf push test and loope pusha sti jae aas hlt mov xchg fldz sub pop xor adc add dec xor adc adc lret stos dec xchg imul xor lds adc icebp sbb adc mov into mov jns adc lret push (bad) movsb add repz xchg inc lea mov dec shlb push fstl push mov les (bad) xor push push push or and nop jl adc dec push pusha ret data16 (bad) xor xchg jno mov lea push xor stos mov mov mov pushf pusha call rorl pop lods mov inc xchg pop ds es or push inc orl cmp iret enterw and cmp adc pop rcll insb mov loopne bound invd (bad) mov ret adc das mov dec adc fsts fbstp and rclb fisubrl push mov loopne mov das (bad) sti jmp pop rcll mov cltd push aam and ret fisttp add rep pushl cmp cltd (bad) sar adc jo cmp mov push dec adc jns icebp xor pop lods adc jecxz vcvttss2si adc cmc jbe adc pop push sahf sub pop jmp mov xor popf push mov pop es cmpsb add adc pop test rcrl xchg pushf aam push (bad) int3 lahf dec mov add lods cmpsl sub rolb inc sbb push adc inc add nop shl enter adc cmp pushf adc dec jno jo (bad) or adc mov or adc test or mov sbb xchg push movups jns sbb cmp sub mov sbb xor into xor adc lods sbb lret scas das inc adc jmp rcr add mov sahf gs out stos add (bad) jecxz xchg xor cli fnstsw xchg and xlat jno xor push jb pop leave xor out add mov adc sub int adc lahf (bad) outsb sub pusha adc dec mov hlt xchg rcrl movsl or dec pop adcl lcall add add mov cmp mov adc imul je mov out adc push adc loopne or icebp fdivs sbb dec pushf push and xor outsb mov xlat rorl mov outsl test js test aaa adc scas xchg pop mov nop jno hlt test dec mov sbb mov pop pop iret and adc rcll dec or mov mov adc out subb pop stos xchg call in push out sbb adc and jb ss sub jno subl cld xor (bad) loopne xchg sub call nop dec adc and sbb ljmp int inc adc mov or adc scas faddl adc mov adc (bad) ljmp mov test iret or fcmove lcall movsb aaa ret inc test jb inc insb enter push ja loope loop mov adc mov bound scas aas jae dec mov sbb cmp les cli adc arpl repz adc popf mov xchg rcr adc ret pop dec in out int3 inc sbb xor repnz mov jp and xor mov pushf adc dec aad adc clc lods in adc std out scas lods (bad) adc add ljmp push rcrb mov adc push mov cwtl pusha stos adc (bad) out lds jge test aas mov adc xor and movsb mov popf inc adc cmp jmp adc cmc pop add jno add lea fdivrl inc and test out xchg mov mov aaa push inc dec sbb and (bad) mov pop (bad) or cmp push xchg jge sub lret repnz cld daa notb scas sbb xlat xor in cmp cwtl and xchg dec mov add add and sub in adc imul adc lock pop xor pop and aas in imul pop int je (bad) dec fmuls (bad) mov mov mov es sub out add out (bad) xchg into repz outsl xor in xor gs add icebp xlat adc inc push mov mov lahf and je sbb in in insl into xchg cmp jle cld lea add pop lret add notb enter jmp mov mov jae adc mov push add outsb cmpsl js push ret adc push mov std dec adc and add aam stc mov inc mov lods push adc sbb out adc adc mov scas dec mov clc xor xor and cwtl jge cmp das mov dec mov fwait in cs pop ss or adc dec data16 stos inc ja push mov mov int3 (bad) adc in inc pop push sub adc cmp mov and sti iret add xchg cli adc lret leave fdivrs xlat in lds dec xlat mov xchg cld or and dec mov adc sbb sub (bad) cwtl rorl xchg (bad) leave add out adc (bad) jp inc aaa into repz xor pop mov movsl adc mov inc imul and add (bad) repz dec inc lahf dec or mov add lea or jne in adc adc out push xor add adc jmp jle xrelease and inc lea mov push bound sub mov rol push inc popa adc push dec leave ficompl sub mov sarb dec mov and inc or rep add mov outsb adc (bad) mov test cmpsl insl add inc mov das or (bad) mov cltd lods lds mov aam outsl (bad) or pop js (bad) push xchg pop and popa dec jmp mov out adc (bad) in push lcall es insb out add add dec out adc fsubp ljmp jb push in mov into ljmp adc add jne push scas repz xchg mov insb cmc mov int3 jge mov cmpl mov aaa pop rcll jmp push ja jno sbb outsl adc stos nop (bad) jns xor aaa out sarb (bad) adc lcall sbb and jg adc pop sti out pusha mov fimull outsb dec jae add and xor test cmp in nop adc jne in jg jp add mov nop xchg push lock lods dec add nop out inc mov add (bad) or js shlb int3 mov cmpsb loop or je stos cwtl andl sbb push (bad) adc sahf push cli mull push rcll data16 and cltd stos inc push dec mov paddsb aad push les dec fs or mov cmp mov mov adc sbb or mov and pop adc aas adc out push jmp or pop insl leave adcb mov inc add pop pop outsb mov adc mov mov mov cmp or fcomip xor insl leave sti iret add cwtl adc inc mov and cltd inc pop pop mov (bad) adc aad dec cwtl jg jne or aaa adc push lsl fcoml cmp shr add jne push adc mov nop inc mov repz pop fimull mov mov push (bad) jecxz bound stos push adc ret scas aaa add push lret repz outsb xor (bad) pop pop lahf icebp mov inc sub and sarl (bad) cmp xchg or cs lods adc jnp jns leave pop fdivrp (bad) cmpsl pop ret adc ljmp adc jns sub xor mov mov int pop stos cmp fistp jbe sbb pop add ds push jmp js dec or imul mov add push push cmp jae es rcll cmpsb jnp test add cs adc push xor stc adc cmp adc push push inc sbb into pop mov inc aas (bad) lret adc sahf pop xchg jno inc jg xlat test dec sub add jne push movsl adc pop xchg mov mov scas xor push mov loop addr16 sahf insl (bad) in dec jecxz adc dec and pop pushl test rcll push ds adc adc push adc add fbstp pop jno bound mov notl lahf add (bad) dec mov and pop out mov fldt in imul pop cmp test (bad) nop loop sub or push lret imul jl,pt cli adc fmull mov pusha movsb negb jno sub ja lret hlt or cmp in out stos sti nop jne xor shll inc in in cld adc cmp add push adc xor int3 xchg std into xorl sub mov (bad) in lds dec cmpb add xchg call leave or xlat mov xor dec cmc iret imul push push add adc imul adc ljmp hlt in mov mov out insb add pusha mov and jne enter dec adc pop scas mov and xchg xor fimul add sub jg pop test mov sub adc mov push out loopne mov pop aam cld add rolb jno mov or xchg pop in pushf xor mov adc sub gs jno adc pop dec jo (bad) add adc sbb adc je mov add out dec repz (bad) bnd (bad) in mov adc mov adc aas xchg popf pop mov cmc jae aam jb cmpl dec cli push mov xchg (bad) mov xor add push mov xor fnstcw out mov sub dec cli adc ret leave xchg cmp adc xchg imul push cvtps2pi pop mov ret xchg mov pusha notb rcr psllw jnp sar xchg and lret mov (bad) xlat rorb sbb inc repz fwait repz fdivl or adc xlat and imul (bad) pop mov cmp sar outsl adc push (bad) loope sub sbb adc push (bad) jno inc stos add push dec cld ljmp sub jns jle xor or repnz js jnp inc dec sbb and fist sbb sbb pop cmc adc sbb xchg mov movsl int3 cmp clc nop popa and push outsl lcall adc inc mov adc push sub xor adc add adcl in daa adc lods mov sub mov pop pop adc pop adc mov out shl cmp mov mov fisttp adc lds xchg jae jecxz stc ficompl mov shll push setbe and cmc add sub mov cmp ja iret pop repz dec xor mov or sub adc stos mov cld pushf jne (bad) xor or jg ds ss adc stos iret or jnp insb repz ds mov dec xchg pop cmp mov sbb and mov adc scas dec pop jns (bad) rcll xchg enter sub jnp mov test loopne lcall jns ret cmpsb sti lock xchg stc imul insl or jl scas pop adc lret (bad) pushf cwtl rclb cmp stos push call xchg test adc mov xchg jo mov (bad) adc dec inc ja pop lock incl xor jne aad push (bad) stos repnz mov xchg aaa pop cld pop loopne adc lret jl stos add dec ds shr jmp loope das add adc scas ss iret mov dec xor cmpsl repnz rorl and sub adc dec fldl ja and sbb dec or in adc test and pop adc mov cld push push adc jp add bnd lods and dec pusha (bad) mov adc mov jge sar daa inc push add insl adc push jle pop sbb sbb popl gs in mov lods jl pop adc xchg negl xor jno test or push cmpsl dec int3 test scas (bad) xor and lahf sbb out inc or inc adc insl ror loopne icebp popf adc push adc (bad) jmp adc (bad) or xor xchg jne orl lock and pop dec inc mov fxch scas or jl adc mov push test adc sub mov inc sahf cmp andps cmp jno mov ljmp (bad) insl mov push cwtl xchg sti cltd mov and enter sbb xchg pop lahf push scas fwait pop lcall mov jg fdiv xchg adc pop push pop add adc test adc push aam mov flds icebp adc imul (bad) xor cmpsl or mov (bad) mov mov sub jne inc shrl jmp or outsl les adc jnp lahf adc adc rcrb test xor aaa ljmp faddl sti jmp xor and sub sahf push adc ljmp es adc pop cmp mov inc insb jecxz mov and adc push jne adc jae push mov sub (bad) cli div cmp pop jne adc add sarb adc fs xor adc jns mov imulb ljmp lea and in adc xchg mov fist repnz jo xor cld inc and jb adc out add fistpl movsl mov and std add stos loop mov mov mov pop jnp and adc xchg sbb daa adc xor mov cmp adc iret ret pop mov into lret hlt dec jns repz mov or push (bad) jb push jno movsb lahf adc (bad) xchg adc sub cli sbb (bad) adcb lds inc js mov push jmp test mov mov mov adc frstor pop mov mov addr16 pop mov lea pusha mov repz xchg popa addr16 scas fidiv (bad) xor fmuls mov aam std sub adc test add cwtl sti push dec mov push les (bad) mov push inc repz jo xchg jmp mov sbb mov dec xchg push ds ljmp hlt jae (bad) xchg adc mov jo push sbb ffree movsb push adc shrb jl jno sbb pushf test mov fbld daa sbb insb js loop cld xor repz inc mov lea adc fsts add mov pop cs lret adc add je mov clc rclb mov mov pop stos sarl add aam cld add jb push loope and loop nop ss icebp loope subl pop add iret xor adc cmc (bad) jnp jmp push sub sti (bad) pcmpgtw idivb hlt mov je sub xor or push les inc pusha dec in aaa into jnp inc add or fsubs lock adc popa repz sarl jno jne stc (bad) popf cmp or repz sbb push fldcw mov sub adc adc sti bound push push testl loopne insl les mov test in add adc jle or popw or adc pushf and push adc out rcrl (bad) movsl (bad) xor fcomps sub scas or stos adc jae (bad) jo (bad) sub out xchg lds adcl mov iret inc add cmpl adc mov adc (bad) cmp enter jl scas aas and (bad) sub mov sbbl das dec ret popa inc inc movsb xor xchg ljmp clc mov rcll fadds les add lret adc in mov adc mov push mov xchg dec ffreep push std lahf pop insl cmc sahf int3 push mov rcrl into inc sbb ror repz mov push outsb cmp mov test (bad) xor faddl fstpl stos or push xor ljmp ficom ret int movsb adc adc rolb sahf mov jle adc or adc insl pop mulb test push (bad) sub rcl test jmp (bad) push adc jb cs inc insb in push mov lds dec (bad) fistp xchg xchg stos sbb push cmpsb mov push sub loope adc fwait sbb pop adcb xchg (bad) in adc (bad) mov test and cmpsb dec adc cmp std cmp xlat xchg cli (bad) mov rolb (bad) bound adc adc fcmovbe orb mov mov iret xorl sub adc xchg mov arpl adc or shrb wrmsr adc call inc inc movl nop pusha lods adc mov movsl sbb sbb sbb aam mov sbb mov cmp pop xchg leave fisttpll cmp or or dec test jb sbb stos aam xor int mov fbstp and inc clc ja cwtl rcrl loop in into xor xchg dec push (bad) mov xor imul sub test mov movsb mov popa inc loop or xor xor jmp je sbb jnp fs push sbb sbb repz outsl mov (bad) adc xchg jl inc out jae and fcompl nop jle negb adc lods aam mov jge fimull pop dec movlps dec xor adc mov pop mov movsl imul jbe imul adc repz lahf pcmpeqw pop push mov in jecxz jno cmpsl jbe inc mov lahf adc fwait jo push scas adc jae push stos movsl adcb lret adc shll adc and cwtl or or mov mov (bad) aad cmp popa jo inc adc rolb (bad) ja loop icebp xchg insl leave cmp dec push adc fisubl adc add (bad) xor sbb jl mov mov cmp negb daa jno inc (bad) into cmpsb jg fistl fs cmp xchg sahf dec mov push pop cs jnp gs ja or stos fcoms (bad) in xor add adc xchg jmp adc jmp test loop cltd xor mov mov add (bad) ljmp xchg sbb add lea sub mov xor aam or inc xor cmp insl (bad) mov and out pop cs rcll rolb xchg add dec mov ret and popa xor xchg repnz adc mov xchg gs sub pop sub sbb push mov decl scas mov pop daa pop pushf jno xlat adc enter push cmovge (bad) adc add inc shr sahf jle repnz jno in lret adc out mov repz roll sub jns push inc jge test or test fadds push (bad) mov adc repnz scas adc or push cmc dec out dec lret adc cmpsb push aad jne sub jae xor rcrl (bad) xor lcall mov pop lahf adc xlat adc adc adc mov fcmovne clc es mov and lock cmc aaa pop or adc out jo adc mov incb fcomi jne pusha mov out add push add dec or adc outsl push dec adc lcall stc std fisubrl xor xor or repnz movl mov add adc cmpsl adc adc sub outsb ret adc fbstp imul nop push lcall ret push or mov test inc scas adc pop pusha pop add xchg push push out ss mov inc mov adc mov xorps loopne repnz xchg mov jae or repz xor sbb cs call or mov pop lret add loop mov pop adc mov xor adc lods movsb test fdivrl lea clc push xor call lret adc mov cmc dec adc ficompl xlat stos aaa rclb insb aas cmpl xor stc push sub pop cmp cwtl jecxz add aad mov and cmpsl fisubrl test mov sbb mov xlat cmp pop int3 adc addr16 adc lret shrl jmp or stos sbb les stos dec js rorb scas push xor (bad) movsl dec adc adc repz leave adc push (bad) mov inc lds adc lret imul adc bswap test adc int3 repz lret and inc mov js jg aam imul mov (bad) pop pushf or ficom insl outsb repnz addr16 imul inc (bad) mov cli test inc lret cmpsb adc ja xor mov adc cmp (bad) adc in xchg (bad) out fs xor rcl nop xchg int3 and push pop jl inc jge adc and notb or or xchg mov cwtl ret pop (bad) out cltd inc adc pop inc sbb movsb sbb or adc insb pusha sbb (bad) fucomi pushl xchg mov dec movsl nop mov aas xchg clc mov mov or jnp xchg xor adc mov mov cwtl clc pop xchg rcrb seto sbb out test subl lret loopne push dec rep push leave rcll insb or pop stos fild into or test push and cmp jle adc ret pop roll mov xchg das invd fldcw sbb ds xor cmp xor mov test jp push cmpsl sbb ja mov adc add xchg aam into add fcoml out mov je xchg and add pop mov mov or cmp cs adc adc adc pop jbe sbb popa insb jbe cmpsb loop negl adc xchg bound xor adc dec mov movsb (bad) mov fist movsl loope xor pop mov stc cld mulps add adc mov ljmp mov xchg fisubl (bad) jo or xchg gs xchg inc adc push sbb pop lods (bad) adc into and out adc pushf popa repz ja (bad) xorl mov push pushf add (bad) pop adc xor pop adc repz xchg rcll icebp fwait sbb movsb push lret dec push push cmp adc mov mov adc jns hlt pop or inc mov in xor call cmc pop jbe int3 push movzwl lret faddl ja mov (bad) fmuls push subl pop push dec xchg lods lods inc xchg jbe aam adc add mov pop add cwtl pop dec outsb movsb pushf xor inc loop pop pop loopne adc std adc lret lret inc xlat mov outsl repz or mov push adc sub das repz out push test scas add mov adc daa jno fwait lock xchg xor aas stos adc sti das je aaa div adc sub xor or mov stos xchg cld xor pop leave jno adc jne xor adc mov pop push mov adc mov in sub rclb push fildl push adc xor mov popa cltd subb jmp nop fidivr xchg adc mov push mov leave stos notl jbe loope aaa jmp add jp inc mov and mov mov movsl bound in aas inc dec add out adc (bad) aam fwait jl hlt mov adc subl dec (bad) mov (bad) push adc outsl push sbb adc into mov (bad) jne (bad) inc lcall mov cltd in scas movhps out daa aam jns xchg inc in movsl pop nop (bad) flds inc pop pop loop pop repz or (bad) cli push pop pop sar adc shl fldl dec mov adc fdivrs (bad) int inc sahf push cli (bad) xchg mov push pop cmp dec mov outsl sti dec or and loop mov cld jle daa fmull sbb add jecxz mov adc adc pop pop jbe push test pop in int fisubr out mov outsb xor pop sub mov data16 imull pop (bad) in cmp and iret mov sub stos mov dec repnz sbb adc adc adc mov jb mov cmp in xchg lahf nop cmpsl sbb lock dec hlt jb add cwtl or jecxz mov mov jns in sbb or inc mov sub xchg sub loope sub jg add daa inc push je xor adc cld adc outsb jecxz lcall add pop cmp repnz stos imull cld jo push movlps mov arpl jnp hlt rolb mov xchg imul lret and xchg das repz lret jnp movsb icebp or mov ja inc mov cmp jne or leave lock xor subb test movsb inc je mov aas fimull add jp jo mov or test adc in sbb pop mov in imul mov mov mov jno notb rcrb jecxz int push pop sub adc sbb pop and stos xchg call aam loop push mov cmpsb adc sbb loope dec adc and xchg aas jle pop mov mov lahf lret (bad) scas dec adc inc cmpsb sub addr16 push adc xchg adc popf inc loop mov aaa mov mov in movsl popf adc jns jo js fdiv add mov pop dec insb xor fcompl cld inc xor test mov mov mov add stos pusha cmpsb mov push adc lahf xchg xchg pop addr16 in pop popf fnsave out ret icebp xchg mulps cmpsb cmp fidivl pop cmp push test cmp pushf jns dec ret mov xor inc clc out lds inc (bad) xor cmp jle pop push sub adc sub js mov dec out mov fs xor movsb xchg popa fadds mov mov in cld in xchg lds push rcrb jae mov cs aad adc mov mov push test mov sbb (bad) and or in xor xchg sarb stos mov out mov cld ljmp xor adc or rorl fcomip das adc loope inc mov fnstenv pop mov pusha cmpl cld sbb inc or jmp pushf int3 repnz mov push and inc insl mov pop pop adc adc outsl pushf jno mov test sub dec add pusha xor sahf or xor xchg in out adc fwait add adc inc sub xor xchg fidivr hlt repz adc xchg outsb adc (bad) cmp test pop cld int3 int ss clc add xchg into jns or arpl dec xchg adc push mov dec into push inc xor cmp xchg pop incl jnp jb adc or les int3 inc xchg and pop pop bound mov lods aam icebp xor xor add lea lea ljmp lods jmp cli add adc das rolb pop xchg push fdivp ljmp movlps cmp repnz mov push pop adc xchg insl vpshaw mov jae add add adc add lahf stc dec subl test mov imul dec sbb xchg and mov mov mov add pushf add fstl adc cli adc mov xor cmp stos xchg (bad) mov sub call jne adc push mov push adc or mov adc mov std rol mov rcl cmovno adc cmc pop push sub add adc or xchg pop sbb pop adc push out lock adc and repnz cmp out push add loop divb sub aad and popf out xchg push jle adc (bad) push push shl cmpsb lcall adc mov push mov in inc js sub xlat fwait lods adc inc (bad) aas pop mov repz out xor adc lods push adc data16 mov push aam add mov gs mov dec not sub inc cwtl fistpl sbb xchg xor xchg je push pop add lret pop jecxz movsb (bad) dec xor push fcmovnb mov jne mov cmpsl stos cmp sahf rcl adc iret mov nop test mov imul not into dec adc enter ss int3 or add push iret xchg adc pop mov sti push fisttpl xorl stc dec jge inc adc inc out mov cmpsb stos jl mov mov mov lret adc push mov dec test cmp imul popf xchg mov sti pop adc (bad) jno adc stos movnti test sbb mov repnz popf mulb call mov iret lret nopl int pusha add adc push pushf sub or adc mov (bad) in daa int and sbb icebp lret ss pcmpeqw std jl mov xchg out mov pop call (bad) or push aad pop jbe jp push fwait cs lret repz sub sbb adc push adc add add push sbb adc test push fcompl pop dec jb aad mov mov dec rcr pop pop iret rcll arpl pushf mov or repnz cli adc or jbe mov sbb dec add enter repz sbbb popl adc cmp shr (bad) adc cld or push or mov push bound stos pop repnz pop ss xchg adc fadds pop sti in xchg jb adc inc and addr16 add hlt cld sub adc ljmp inc mov loop adc add call fcoml out cmp ffreep xor pop aam mov add dec push sub aas mov adc add adc dec xchg stos cmp adc cli xor dec or imul sbbb js cmp dec idiv dec adc sub movsb adc adc lea push stos inc push adc in fildl lods hlt inc pop adc pop cmc and inc shrb add mov jb popf movsb hlt mov cmp xchg dec in jl loopne sub icebp push xor mov jnp sub mov jp lahf sahf add mov out lret cmp popf into inc push dec psrld frstor adc test mov (bad) std adc test loopne xchg and inc push cmpsb stc and xchg repz mov push dec push adc shll push pop cmp pusha call mov add adc sti mov jl stos mov popa clc inc mov mov nop adc ss xorb sub jnp xchg sub and cmp sub dec jb movsb rolb and cwtl data16 test cmp adc jg test push lock adc mov xchg jp,pt iret int adc sbb insl pusha jne aam loop adc inc pop adc dec scas sub (bad) aas adc mov or aaa in outsl jo add adc cmp add (bad) jno jbe enter repz and add aam insl popa mov out outsb mov mov (bad) loop stos stc mov fisttpll out xor loopne pop adc mov popa push mov mov xchg adc add test mov mov adc push pop push iret dec fidivrl lret mov (bad) shll test imul sbb jle in (bad) sub call adc cmpsb mov xor jbe es fwait add sub adc sti cmpsl adc int3 movsl push sbb cmp (bad) cwtl js (bad) sbb std mov mov imul repz pop cld ficomp inc pop lds adc sbb hlt in (bad) (bad) pop rol jo cltd mov push icebp pop jl pop cld repz and jns sbb cmc imul leave mov roll pop mov (bad) popa cli and scas pusha (bad) lret dec orl and inc cltd daa xor jo mov out movsl rcrl into pop pop mov adc mov scas xchg mov fs stos addr16 mov sub imul hlt mov (bad) gs xchg or stos cltd lds adc in xor clc jecxz cwtl scas mov adc loop lock lahf addr16 xchg jne or jmp add jno lods ljmp inc mov or jmp dec mov aad dec adc jecxz mov lds jnp adc mov lods and sbb sub sbb cli push jl adc adc repz xor in ret stos mov stos in jle push call lods pop cmp inc push adc je rcrb mov adc jbe mov shrl sbb popa lcall xor adc bound adc out insl cmp adc mov ljmp push (bad) or adc js mov xor mov add repz mov aas fistpl xchg or adc xchg lcall adc or lahf xchg adc int test orl adc xchg cmp jb cvttps2pi test sbb or mov aas scas popf jo mov cli into adc dec subl jne adc jl pop mov inc into adc les hlt jno sbb adc dec or adc xlat mov jo lret xor ret adc mov jne adc sub (bad) adc dec xlat bound dec cltd movsl adc inc daa xchg out dec push pop (bad) adc test mov stos jae and out std arpl xor xor push adc jecxz adc fsubrl lret fcmovnb or dec mov xlat rorl add adc fisubl scas adc hlt aam add repz cmpsl lcall adc xorl or add cmp aad adc (bad) pop lret mov xor xchg xor jl enter xchg mov push or and nop inc push xchg xor loop movsb (bad) in sbb mov inc ffreep xor xchg test sub mov rorb push push test mov xchg cli and fidivrl xor stc imul and adc fwait xchg sub adc adc adc xor dec push mov fcoml (bad) adc sarb adc std lret inc add adc mov mov into or icebp (bad) and addr16 rcr push cmpsl pause subl jne xor cs scas sbb sahf psrld outsb pusha jecxz adc adc xor mov ret fldt movsb adc sbb mov enter push inc adc sti mov add jg stos mov sti test cmc shrb xchg adc (bad) sbb repz jnp adc mov fstpl xchg add mov adc jbe xor test or adc movsl mov add pushf adc xor rcll mov (bad) or mov add icebp adc je mov loopne xlat sbb les or iret adc sub xor mov mov outsl adc xorb mov outsb (bad) pop sbb fistpll dec lock or test ret adc rcr adc repz cmc mov hlt push inc mov mov dec pusha (bad) adc sbb or add fsubl dec and xchg pushf jne insl fcmovbe loopne cmp pop rcrl sbb adc ja mov cwtl sub mov pop (bad) fstl push inc test jg push in cmp jnp mov nop mov ds adc test rclb in adc jno orl shr fbld xchg dec jnp pop repnz inc stc loope (bad) adc xchg cmp lret dec call push out or jecxz pop movsb bound cmpsl and insb mov sub daa adc lea xchg adc nop xor mov (bad) negl mov cmp mov adc push inc xchg inc insl stos adc bound stos adc mov (bad) push rcll push jae bswap pop jo or insb das les repz aad or test dec (bad) cli inc mov je mov mov push adc ss xchg mov idiv fpatan out mov arpl or aas outsl inc mov push add jns adc push mov loope xchg lcall xchg sbb iret rclb imul adc repnz add push rolb mov add add loop mov fnstcw int3 add cs or loop icebp (bad) cmc cltd pop cltd add (bad) lret add jecxz test mov or repz sbb adc je pop repnz lods xchg fs mov shrb aas shrb jp mov or loop jae pop rsm aaa cmc mov add iret decl fst ret data16 sbb and mov jne ret push scas mov inc shlb or jp jecxz icebp scas push jle js mov mull and jecxz and or mov or push add sub push sahf out adc pusha pop pop aad adc lahf fsubrl adc je pop dec call adc mov lods (bad) adc loope jg xor jbe cli arpl aad xchg cmp lret fcoms aas jno mov inc push lods adc aam je into test cs cmp sbb call adc mov dec add fcomip mov cmp iret das jl push addr16 cmp sahf sbb inc ss orl (bad) fdivl outsb cld test inc insb sub xchg xchg cmc movl dec out cmpsb cmp nop fnstenv xor in pop sub add xchg jmp cwtl jg rorl fwait (bad) push inc jle mov cmp incl imul jge xor lret jl or jp mov cld add xchg test mov and lods pop push xor mov or dec xor inc mov adc push xor pushf mov or push aaa repnz fnop mov sbb pop decl sbb (bad) ud2 inc mov jmp mov xchg sar xchg add sub in adc call (bad) lock push adc pop pop cmp mov and jmp add out pop cmp psadbw and xor jecxz cmp pusha sub jae adc push add hlt mov jge rorb jo xor test dec push clc pop out lahf mov (bad) jne enter and outsl xlat sbb xor mov jge lods adc push dec addr16 (bad) cli adc jb int and mov pop adc mov jge xor data16 xor and cmpsl mov adc push jb adc mov inc enter int3 xor daa sbb dec out adc adc push xchg xchg sti mov adc outsl pusha jmp or cmp adc rorb xchg dec aad xchg std repz cmpsl jbe arpl or inc xorb mov adc lcall repz push pop jne xor xchg xchg shrl out xchg clc sbb inc loop cmp mov cmc push repnz xor push add loop in mov bound xor daa (bad) cmp and mov fisttp sub lret test in pop or adc flds sahf cmpsb je into hlt aas mov mov xchg ret push loope xor xchg adc pop std jge ret in fcoms (bad) sub mov repz or rcll lcall fldenv or mov and xchg stos int je adc jmp (bad) std mov mov mov cmp mov ja hlt jne test aas out testb fist test adc push aad dec xchg scas pusha hlt out jns int3 loope jmp add mov test mov imul add gs (bad) in xchg mov adc (bad) mov adc cmpsl je adc lods mov push adc xor dec xlat aas sahf inc adc ja loope adc inc cmp loop imul xor gs divl arpl pop aam pop mov sbb mov jb push add stos cmpsl movsl movsb repz or mov push sub test movsl cld pushf imul lock sub xchg testl gs (bad) adc cltd add aad jle adc and (bad) adc out sahf mov jnp sbb call pop sbb icebp sbb adc (bad) jno das and sub xchg (bad) scas or adc xor addr16 negl ret mov add adc and mov xchg mov aaa or lods sbb cld adc lahf scas ds into adc popa popf or sub jg test int and rcrb adc dec imull lods ficompl jmp fucom adc insb adc add rorl push sub sbb push and adc push sbb int (bad) xor (bad) cmc cmp or inc notl add incb call hlt mov jnp xorl jle std rcll aas inc cwtl scas sahf imul adcl les out push mov daa bound or cmp mov js sub add das mov adc rcrl adc adc jae les or cmc sub adc movsb test push (bad) mov sub add adc inc stos push adc sbb and movsb pop aam adc fdivr cmc or adc push and mov mov ds mov repnz mov out add mov mov dec call or out adc (bad) jl jnp or xor mul inc fucomp adc movsb bound cmp adc cli adc adc mov adc sarb fwait pushf lods xor inc sahf xor enter xchg and or mov add push xchg cmpsb add sbb mov and in mov or inc sbb adc pop arpl bound jnp push and cld adc push adc aaa xchg fcoms inc adc aad nop and and inc sbb ljmp jmp jle push xor stc add test mov repnz push rcr add lods xchg pop dec mov lods sbb fstp xor push cs push adc xchg inc aam cli add loope or xchg mov pop cltd mov rclb sub fist mov jle xor push and jno out out lret xor lea add adc pusha loop sub (bad) adc clc fsubs dec cs inc jnp push adc push adc mov inc adc cwtl mov repnz jnp lret mov jns sub adc (bad) xor std mov das lods lea jecxz cmp lret mov (bad) sub mov mov or imul in push inc int push mov mov mov xor into mov nopl cmpsb jns (bad) (bad) sbb adc int std pop xor adc repz popl push mov adc jbe adc or adc mov insb dec les bound dec mov xchg jae aas add stos mov loopne adc adc mov add ficom or pop adc out cmp jle mov repnz adc cmp xor add lcall or pop nop add fistpl push daa or daa xchg js call cmpxchg out lcall std loope push jne mov (bad) and adc inc jle out popa xor sub and jae or (bad) fs mov adc or pop movsb push call sbb add out into cmpsl add adc jl xor xor ds or mov add ss icebp shrb adc jmp inc cmp mov aam aaa jo xor (bad) jl fcoml push cmc sub mov sahf adc cmp pop enter adc ljmp cmp imul shrl cmp or in mov pushf adc push out mov mov adc lcall cmp xchg xor mov rolb mov and cmp lock push mov add stos xor xchg fisubr gs pop stos mov outsb adc jbe imul adc das inc xchg scas adc ss loopne mov mov lcall jb sbb jne sub pop cmp adc jge fbstp clc adc add jo xor imul ret mov xor adc insb cli lret popf or adc add imul pop ret pop jns xchg dec adc mov out (bad) mov das popf in add jno cld adc imul sub ficompl sti mov aad cld pop cmp mov rolb mov std fwait adc insb (bad) leave popa pop xchg sahf mov pop add lds and fs push or insl mov adc adcl enter incl adc add xor fdivrl int3 mov ret js adc push mov mov test jb imul add adc or and xchg sahf lcall xchg ljmp adc lahf ss and cmp or pop add adc loope mov (bad) in add adc lret aad leave adc inc add in into push fwait add loopne,pn cmpsl and mov or pushf adc je dec sbbb push sbb outsb lret sub dec and popf inc mov add add fldenv jnp mov jge ljmp or sti mov jbe in pop adc sub sarl clc lds popf cli in (bad) xchg adc in xor jnp xchg adc cwtl or loop sbbl pusha and movsb movsl shl mov lea adc (bad) jbe cld xlat es adc fdivs jge hlt mov shl jns sub pop sti lods test adc mov jp sarb and add sbb mov xchg or sbb adc into add stc (bad) mov fiadd rol or push xchg iret sub xchg sbb (bad) aas das movsl adc mov mov fildl sub fs add adc add adc fldl2t mov sti outsl fisttp in mov fwait shr popa ljmp xor hlt test sarb imul inc outsb add add ror jae cmp push aam or int adc cmpsb lods stos aas scas add repz or pop mov fdivl xchg adc dec add xlat cmp xor aaa add fcomp es adc pusha adc add ret movsb mov enter sahf mov mov cmpsb lahf xor (bad) stos ja or xor xchg mov rcrb scas mov pop mov cltd or rcr adc iret lods pop adc std push daa and test mov mov sbb mov mov pop push pop adc shl repz cld mov (bad) faddl (bad) jmp adc mov pop dec adc stos mov mov scas adc push (bad) adc fild adc int3 sub adc and push adc dec jns loope fs adc or fistp gs jae test push les sub std xchg mov xor lods adc fmuls inc icebp repz jge jnp pshufw or lods mov popf jecxz mov push adc mov sub xchg imul adc or stos mov xchg (bad) fcompl scas adc mov fstpl lahf repz ds orl movsl aam push add icebp js adc shlb pop xchg lret clc mov mov fild push adc adc and fimul mov mov push pop pop cmp jnp js jb pushf xchg adc sub scas jmpw push insl xchg mov jge ret insb jne and push lock fwait sarl xor adc adc push pop scas mov in adc lret in mov jmp fwait call push adc loop cmp test test mov adc jnp pop int3 out xor scas (bad) fbld push arpl jle sbb jmp or ret lock jbe inc mov lea clc sub lcall add ret or cs bound inc jge xor fsubrl xchg push mov jge mov popf sub push dec insl mov mov push call sti lds movsl dec pop push stos jl out mov mov (bad) add int mov jne test (bad) jle daa push jecxz adc add repz cmc fs mov or cmp sahf (bad) mov scas adc stos aam in or cmp and sti and imul lods adc fstp add repnz mov jb pop idivl dec or xchg lea int xor idiv pop adc sub scas adc adc addr16 ficoml dec (bad) pop pop sub loope fcoms pop fldcw jno out in les cmp lock incl mov stos icebp push adc adc pop inc fcompl loope jno (bad) aas or cltd adc (bad) test gs pushf iret jp daa cld jnp in int push jb popa fwait aad push or push sbb bound mov insb xlat dec push montmul cmpsb inc push cmp scas addr16 popa lods dec mov jnp or cs hlt notl inc jb cmp sbb adc stc dec inc mov insb xor or sahf cmp cmp adc inc addr16 push movsl lock sti in mov add mov cmp xlat mov movsl insl push mov leave test adc mov outsl adc into lock int (bad) adc jg call adc and adc mov adc ret or add xor adc adc movsb mov mov dec mov cmp popf pop adc mov inc jae mov test adc or ss mov setbe loopne repz test stc mov pop sbb flds cs in lods cmp adc mov out aad mov icebp adc ss dec rcl adc pop stos pop icebp add inc push mov (bad) mov jae mov push fimull push rolb or mov repz or cli lock jp arpl sti lahf mov xor jecxz inc je adc pop out (bad) adc xor push int3 xchg pusha push mov pushf scas pop and jge push movsl adc in loopne pop push call adc repz xor lret adcl mov shlb in mov movl dec enter pushf mov (bad) int3 popa int mov arpl adc das fwait adc clc add (bad) ficom pop sbb adc pop xchg jmp (bad) ret lcall lret or mov adc cmpsb cltd push pusha mov dec adc add (bad) icebp in repz lcall sbb adc orl and adc or loop cmpsl jl sub mov mov mov in mov adc jne sbb inc dec out sub stos and sub iret (bad) adc fdivs xchg pop daa rcll stos and cmp xor pushf or push nop dec xor adc pop je inc lds scas or add jno adc repz sbb sub jp daa push popf or cli dec psllq or fdivs mov hlt and (bad) jno jne and aad pop cmpsb lcall mov sbb aad sahf test push push movsl jg jmp ljmp sbb aas add ficomp (bad) std sub sub push jmp clc adc mov pop ljmp je jno insb movsl add imul adc (bad) cltd push test loope or (bad) mov adc xor jo aad mov cwtl (bad) sbb cli and imul adc adcl rclb mov mov cli fistl xchg jmp mov adc imul xchg adc xchg sbb mov cmp test mov jns lcall adc fnstenv rorl repnz pop (bad) enter jmp (bad) cmp leave inc aad mov dec outsb mov fidivr leave mov dec std repz sub jo mov loope dec mov in pop jne xor push or pushf div out fist sub mov mov test imul mov scas mov stc adc sbb and jecxz push push xchg int adc or test fucom adc popf pushf dec adcl mov ret adc jae mov jno fcmovnbe mov mov repz cmp popl adc pop mov jne stc adc xchg sti add pop pop repz inc push sub xor add rorb popf adc fidivrl adc aad repz push mov adc pop mov xor inc mov lret jne imul cmp xor fwait adc and mov (bad) xor js adc jmp jb es ds mov loope inc je jg mov dec adc dec outsb or adc pop arpl in jnp lcall test push add pop and mov cli sub fstpl jg or xcrypt-cbc cmpsl adc adc (bad) mov and adc adc lock sbb (bad) jo (bad) or (bad) and mov sbb cmp rclb push inc or sbb push (bad) repz js or aam fimul mov inc and dec sub mov fcmovnb add iret mov sbb xlat push repz loope sub es adc xchg pop xor xchg movsb cmp pushf imul iret fidivr adc push cld add mov pusha mov jb test dec pop (bad) push xor repnz je or mov stos movsb and inc cmpsb or adc and nop jle sbb xchg inc bnd stos xchg aas aam stos incb jns sub rolb loope sbb add mov xor addr16 mov in xchg je insl jp xchg or pop adc cmp out aas addb add ljmp es mov mov add add movsl mov stc add test push add lret ljmp int3 sbb jbe push jl pop adcb testl loop and repz jecxz add pop push xor (bad) out push fisttpl scas enter xchg and mov pop daa sub pop cmp inc xorl cwtl or mov insl js lock pop adc popa jnp adc sahf loopne mov outsl mov sbb gs or cmp adc pop add pop cwtl jae push inc int dec push pop movsb jge gs test adc or push in xlat cmp nop (bad) xchg mov scas inc sub jecxz sti mov mov mov fwait cmp mov cmp imul cwtl push mov mov mov insl xchg lea repz in dec daa ror or (bad) cmc xor xor adc iret add mov cmp addl sub mov adcl or lcall push push ds setl jno cmp jmp xchg mov iret sbb insl mov mov adc inc sarl push test idiv fmul cli das fldenv pop dec scas adc cmp fbstp bswap adc sahf xor mov pop scas inc adc xor sbb test fcomp stc add mov inc aad cmpsl popf mov adc sbb xchg adc xchg mov jle mov xorb adc aad pop out jmp fcomi sub mov jne nop aam push sbb je and and adc add (bad) cs je jne insb es inc (bad) rcr lret adc pop sbb sub fs mov pop push sub into (bad) xor test inc push pushf or arpl mov push paddb leave int3 es adc (bad) aaa push or jno mov add sbb addr16 cmpsl bound mov movlps lods out pop js sub adc clc mov push in addb es lock sub ffree out or adc mov leave push fwait icebp mov enter xchg mov cmpsl out je lock mov adc or inc sub jb mov fs into outsb dec sahf adc lods in add sbb push enter add adc dec lea adc cmp inc pop jmp je add and mov push hlt adc adc mov stc sub xchg add cmc pop (bad) bound adc mov adc xchg scas jb rcrb stc mov xor pop add cmpsl push jle pop xorb roll rcl add pop jns cmpsb repz xor cltd inc mov rolb pop arpl xchg pop and sarb push pop xchg pop enter push iret lahf lods mov push xlat pushf push scas repnz add ret or add jb shl add jbe or (bad) pushf cmp dec adc mov pop out cmpsl pop fadds test mov adc jae cmp fcoms cmp fwait daa sahf std jno xchg xchg or fldcw icebp adc adc or inc cmp loop jp incl hlt mov movsl mov test popw xor add dec adc pop sbb popa mov stc cli and movsb cmp cmpsb aam adc push sbb (bad) sti cmc xchg dec mov (bad) call dec enter push mov fcoms aad rclb js sub inc jae in inc cld arpl adc cli (bad) add sub jo mov fcompl imul rorl jl mov test dec or mov mov push adc jns test adc xor aaa mov repz ljmp adc in xor adc push add js xor inc jecxz icebp insl or adc es movsl sbb mov mov jno inc xchg xchg mov je mov adc in inc xchg jmp mov inc outsb lods (bad) int sub jge inc pop dec sub lret xor (bad) or cwtl lcall movsl nop shrb pop push sti cmp pusha in jns pop shlb int outsl (bad) fist sub in jg loope adc cmp mov jnp mov je jo dec ficomp jmp leave sbb lds lods sbb rol adc es or xchg push into addr16 outsb inc push lahf pop adc orl xchg cmc and test (bad) dec testb fistpll add fcoms lods inc cld fwait mov daa stos adc outsb sub call mov adc sahf adc adc in and gs test in (bad) test jle adc stc or mov (bad) je and xor mov cmp lods jno (bad) or adc fwait xchg xchg mov (bad) out fistpll xchg push or dec lods les popa xchg rclb pop scas sub push ja or inc push adc inc jmp xor add (bad) ljmp dec rcrb int3 loopne mov or push cmc test cmp adc bound aaa xchg orl jo push jge popf adc add sub adc enter lret in adc shl ljmp cmp pop das (bad) mov pusha in stos sbb fidivl aad xchg fistl and mov ljmp enter push mov xchg mov dec shrb pop jmp sbb dec pop pop jb adc jg xchg add mov shl (bad) xor fadds mov or and dec test sub xor or or in xor and cmpsb std xor imul sub mov push andl jl notl mov sarl std outsl pop imul fcomps dec cmc cltd jno mov jecxz push cmp jecxz das insb sub (bad) mov int3 cltd sbb add adc cmp sbb inc adc hlt push lds rcll fimull xchg mov and mov lock pop repz aas sub cli aad imul rorb popa movsb jecxz sbb sub or repz jg mov out (bad) add lret loop popf imul sub jmp cmp stc add sub fisub adc aam inc push add sbb icebp repnz cld and mov or add addr16 sbb xchg xor ret into jno adc jbe (bad) scas in cli fcoml push sub push int3 adc loope ja sub xchg cs jo mov mov dec adc xchg xor imul jb push mov jge jae icebp sarl dec hlt inc out pop mov (bad) and mov adc mov loopne into mov or stc fcomps pop jge pop mov stos xor jne insl adc push xchg ljmp arpl and pop jb (bad) pop adc add dec inc push roll dec xor mov pop jp xchg lcall sub icebp leave sbb jg mov nop xchg movsl push (bad) loop or imul jmp ss lret pop adc adc leave scas in adc imul popf fiadd lea mov movl (bad) lods ficompl pop ss out ficom adc sbb cld repz pop add mov ljmp adc dec xor pop mov adc ljmp mov imul xchg lods push cltd or xor test scas sub movb fwait lcall pop (bad) insl hlt (bad) add add xchg lret shll and pop out push pop jp mov xor mov or mov repz sbb pop insb imul jg jmp dec (bad) jl mov xchg sbb push lahf arpl into adc sbbb adc inc stos dec xchg or push sarb mov ret fdivs pop mov jnp xchg push out sbb xchg mov (bad) iret repz push lret or popa adc or xor arpl movb xorb loop (bad) adc mov jge jno pop pushf adc (bad) push in xchg sbb adc mov and (bad) mov pop addl aas cmp das ret insl adc in ficoml les add sbbl ja cld add add (bad) adc fdivl in adc xchg dec sarb fwait mov repz adc stc or and mov mov mov adc pop popa outsl jp adc sbb jle test dec push cmpsb int clc adc or sub adc jnp in loop mov adc cmpsb incb addr16 loopne pusha adc ss jnp outsl out shr jo leave pop xchg (bad) xchg fdiv cmp popf mov cwtl test jno or (bad) xor sub mov cli inc add rolb rep adc xor repnz jg fldl push ret fs adc xlat dec outsb adc jl jnp inc adc (bad) int3 add push sub jns adc mov jo scas fdivrl fcoms and stos movsl and pop mov nop ret mov mov loopne push iret adc les mov mov push adc cli orl (bad) fnstenv push push nop test cmp aas test lea divps mov stc sbb (bad) ret adc gs sbb adc adc adc fisubl lods pop dec repnz pop repz fstpl lret xor sub mov insb and xor jae js icebp sbb jne mov and inc (bad) mov adc scas pop add adc push bound lea das movsl and popa ficom mov decl adc outsl movsb sbb ss repz jge mov sahf lds pop inc in and jecxz dec cmp out das adc outsb shl mov loopne adc or hlt fmuls adcl iret cmp movsb mov fsubl nop xor divb dec jae test enter fidivl loop das push insb and popf pop sbb outsb xlat or push inc adc add push adc xchg rorb mov mov mov add gs inc sbb test mov icebp pop scas mov inc or lods xor in adcl dec (bad) mov jnp in mov mov xchg repz sbb out and mov push fnsave dec cs sub lcall adc repnz pop int3 push jecxz jl insl and jg adc (bad) fistpl dec mov xor xchg (bad) repz or jnp adc (bad) jmp dec inc fcoml out fidivl xlat jbe sahf insl movlps es jmp push movsb repz sub or mov or dec adc pop cmp adc adc outsb adc loope (bad) fstl lret ret enter adc imul cmp mov sub insl push sbb mov adc jno aam adc ds and adc nop jle mov or sub jl push repz mov or lret out mov add mov dec pop rcl xor stc mov data16 mov jmp jg insb cmc mov adc mov gs mov dec xor shrb test mov orl mov sbb lea mov insb pushf xchg push jns push sbb (bad) mov int3 mov iret in rorl in fbld mov or pop adc jg je inc daa loopne sub int3 rclb inc jge lahf cwtl adc pop in imul adc push in mov nop sti roll test cmpsb xor outsl sbb in (bad) icebp mov test cld mov cmp adc popa sti jne rol push adc ret dec inc xchg mov jle in xchg and sub jnp sbb aad sub adc fprem1 and inc push mov cmp pop jae adc cmpsl or push jno adc test lret or pop fidivl lret cltd adc push fs mov or std out mov dec add mov cld xchg popf out aas mov popa xor js mov mov fwait adc xlat xlat mov push cmp bound jae pop jbe repz adc inc sub pop dec push or clc xor in adc pushf (bad) (bad) lret sub test lcall outsl push hlt stos mov jne dec ret adc repz mov hlt sub or jo sbb pop mov (bad) loopne adc testb lds add clc (bad) je aaa inc rclb sub xor adc rcrb test jns adc pop mov adc mov (bad) adc sbb lcall pop ds adc pop mov cmp push xor mov xor jns (bad) je adc cmp test lahf dec adc add xchg jge push push inc lods rcll movsb sbb inc cmp xchg xor xchg jb bound divl xchg or sub and je adc gs imul adc mov jle rolb rclb adc pop ret es lcall out (bad) cmc std repz jmp cmpsl xor leave inc pushf add pop ret mov adc iret sbb adc mov mov call dec jae mov cld mov in fcoms mov insl (bad) test adc and adc mov pop fmul dec pop mov sub rorb adc mov cld ljmp mov das jecxz stc (bad) sbb dec xor pop add sub sbb ss test (bad) mov adc mov or xchg dec pop xor lea adc sbb adc je fs (bad) rorb lea cmp xchg adc test es dec in or (bad) lea loop cmpsl or push mov and ret dec and popf outsb mov jae mov adc push xchg cs leave icebp sbb or outsb or (bad) mov cwtl in mov pop int3 loop cmp inc xchg and lcall test adc inc ret push xor mov mov cmp lods xor das xor int add inc (bad) fdivp mov imul cli adc inc and xor xchg adc mov xchg push add mov adc int inc push inc pop xor fisttp pushl mov outsl out push shrb push bound push into sbb jne mov repz pop addb rcll sbb fst or mov xchg int push add mov jnp (bad) (bad) push into push iret xor xchg das mov lea push mov mov (bad) jae cmp adc push mov xor add sahf mov jbe or in movsb adc mov add push stc inc xchg mov dec cmpl xchg inc repnz adc adc hlt jecxz or adc and mov adc lret aas sti cmpsb inc sbb nop ret cmovs jg lock xor (bad) xchg adc cwtl lret pushf and adc stos mov mov int3 cmp add mov push test add cmp xor pop mov mov pop imul mov cmp aad mov push mulb inc pop imul fstp push bound add test adc sbb inc rcrl sbb cmp test stos adc insl hlt mov jg or rclb cmpsb jne int movsl test push adc ss jno add dec cltd movsb and mov or sub push and imul xor adc scas mov sub adc push int nop test xchg pop (bad) call xchg stos pop out popf push or stc rorb inc cltd adc mov sub adc rorb rcrb ficom in push imulb adc scas xor cli aad push inc sbb cwtl sti rorb cmp aad pop pusha jecxz lret call and xor adc stos jmp icebp fcoml stc pop push xlat adc xor cmp call xchg mov shll xor pusha mov lahf pop fadd cmp dec cmp xchg sti data16 adc mov xor leave jne pop add lea adc mov add negl sub js repz mov rorl lods movsb fsubrs gs movsl das sbb aas xchg mov nop nop push int3 adc push adc ret in sbb je sub cmp jge idivl mov fldenv inc adc and inc into or fwait or pop add xchg push dec xor or add loope loopne jmp call mov fs add or jns pop cld dec or cmpsl cli adc arpl cwtl gs jnp movsl popa int3 xor sub or lcall outsl xchg adc mov aaa dec pop lret loopne daa adc hlt data16 out mov inc adc imul nop mov mov int3 sbb cmp fisubr adc (bad) and shlb xchg in jle and adc xor imull ja cmpsl push and loope add fcmovbe adc push test xchg ja or jb pop push add fisub (bad) jp stc cli adc and cmp daa (bad) pop insl fcmovu mov cmp push xlat pop adc movb cmp jle (bad) cmp or mov sub aam popf addl setg nop adc cltd dec xchg push in (bad) rcrl mov mov inc jmp pusha lcall jp pop enter xor cmp sahf jge clc mulb sbb ja xor scas pop das cld push nop insb add ja fwait lods adc dec mov leave mov loop adc xchg jle mov pop mov fdivr stc dec rclb lea adc pop cmpsl adc pop data16 int xlat cwtl dec add jp cmc inc or dec (bad) pop ja mov sub adc and (bad) ds adc xor lods mov jmp inc in (bad) sbb dec lock cmpxchg les adc sahf mov mov cli mov push inc adc add iret mov (bad) (bad) aad mov test adc pusha xor jne xchg test inc adc pop mov pop mov negl or xor cmpsl jne adc mov cli adc dec jb repz cmp or stos fldl hlt mov adc xor sub add stc popa cmp (bad) mov inc mov mov jae mov scas inc stos push (bad) leave stos adc jb inc push xor jne inc mov (bad) bound adc inc popf inc jl test pop hlt sub ficom xchg sbb ja dec cltd xor clc or xor test or ret daa jg push lods xchg xchg iret mov loope data16 adc (bad) (bad) fcoms sub mov lret (bad) cmp fwait cmpsb adc movsb sub mov sbb xor push int3 push fbld stos adc loope mov and pop adc movsb mov ficom inc pop push (bad) sbb in adc (bad) add dec xchg pop adc dec and or fcoms sub sub mov or jne (bad) lock sub xchg sti mov push ret adc sarb mov pop fs jp sub add int pusha mov mov adc add cmp sbb (bad) jmp or pop pushf adcb loop cld ljmp (bad) fbld scas rcrl repz sbb adc outsl addl loop fimull lds js adc jle mov push ljmp adc mov ret or mov adc jae mov xchg in mov dec lcall fildll add cmpsl cmp stos adc mov or cmp add adc lods dec pop push shlb sahf pop adc xor push or repz sarb or call adc mov loope (bad) cwtl mov or add loop jo or or mov or inc adc mov (bad) icebp out mov dec jo sub iret int pop or cmp inc stos cwtl xchg xchg inc leave xor mov or mov int3 cmp sti test jb sub xor sbb sbb divps mov push sub adc add sti mov xor iret add mov cwtl ret jg add adc jmp pushf xchg sub add das adc sbb in adc adc dec mov push aam cmp push jae pop lcall xor inc add add in bound sahf mov test popl adc nop mov lea sbb fildl push jns adc rcrl adc jo stc orl jg xchg mov bound inc and mov imul xlat dec pop dec aad add lea mov adc ret repnz jp lea sub in adc sbb xlat push push mov sub mov rcl mov or out fwait sbb mov sti sub jg int and or lret repz or sbb jnp lahf ss imul in (bad) jbe je pop sarl mov test push lret add insl sbb jmp mov repz fldt pop (bad) stos adc inc inc adc test adc pop xchg (bad) lock adc jle xor push fistpll in ret mov push ret jns inc adc das mov xor call and outsl xchg or adc (bad) leave cmp sbb mov pop mov add xchg or xor adc stos ficompl jne pop adc out jmp push mov jl iret pop cmpsl dec in jno sub (bad) nop icebp push pusha notb inc dec stc rcl movsw add or mov adc xor je adc xor pop (bad) repz jg lods dec xchg sub mov idivl jecxz in jb data16 out sub icebp adc pop (bad) ss enter sbb sbb xlat (bad) adc repnz (bad) aam push bound adc fs xor mov xor sub or mov insl jbe mov das adc xor test (bad) sbb or pop in nop and mov xchg mov add pop (bad) repnz popa mov jb mov insl jl cmp add mov adc mov add or lods adc bound loopne insl out jp or fdivrl adc loop xrelease clc (bad) jb mov daa inc mov add outsb jl movsb push pop xor cld mov test shrb cwtl std push les xchg mov test adc and dec int3 dec xchg adc (bad) jns push outsl xor or xchg lds repz cmp lcall cmp sti scas insl sbb and add dec cmpsl cmp lahf adc outsl jecxz cwtl pop fistl arpl scas into xchg mov sbb xor fwait or loop adc dec jo add cltd inc aaa aas and push imul pop hlt jp adc les imul push nop lods or push adc shrl std xchg and aas lea cltd sbb xchg lcall jg ds or cltd (bad) in orb (bad) lock daa loop sub (bad) push mov xchg adc sahf rorb adc xchg inc ds jmp add (bad) mov dec push xor sarb and xchg mov adc inc xchg sbb or mul and lret and adc pop movsl xor pop push fidiv jno iret ljmp push notl loop add mov imul mov arpl fidivrl call or push dec xchg mov mov lret jge sarb or adc cmp xchg adc jge xor adc call rcll lods in pop cmpsb xor stos or mov dec xlat clc jg adc xchg xchg aaa push sahf xor mov test dec adc out xor cwtl jl dec or cmpsb adc xchg jae mov das mov fwait shrb sbb push data16 ffreep push or mov adc inc push xor ret cmp insb movhlps sahf adc shrb dec mov icebp xchg dec lret fsubrs sub outsl loop xchg push test adc xchg xchg xchg jle test xor lock mov fcoms imul mov test scas aam int3 lahf sbb pop adc mov (bad) mov cmp inc jmp scas mov pop pushf aas add shrb adc sbb loope syscall adc fidivr and testl ja mov adc mov sub movsl adc jecxz jg imul adc cld (bad) adc push push adc repz ret fisttp push mov ljmp mov lods stos adc std push in rcrb adc sub das jmp in cld pop adc mov out aam mov add sbb mov mov cmp dec adc hlt cmpsl out cs dec adc shrl inc sbb daa sbb cli repnz dec cltd lea lret jno adc mov stc lret mov loopne (bad) sti sahf xor push femms lock pop push lret aaa push dec jl adc adc jae and mov mov movsb jmp in mov aaa daa mov xchg push test movsl mov out cltd (bad) mov fcoml mov out xor lods rcl xor sbb je mov pop sbb or adc cld mov enter shrl sarl out (bad) pop popf adc xor adc sub adc inc push dec cmc adc into cli scas cltd jle adc stos bound add pop inc popa push cli mov jne (bad) and lret xchg pxor iret or (bad) or outsb repz iret sbb cmp (bad) mov add pop in mov xor sbb scas add pop adc pop inc inc movsb jo sbb and repnz fcoml push xchg mov mov sti jle xor jnp dec mov or mov (bad) enter add xlat xchg mov push adc stos decl xor and addr16 out inc (bad) outsl add (bad) and cmp jmp jo scas (bad) out into jne pop sbb or movsb adc mov fnstsw movsl das or adc fimull jecxz mov stc nop mov clc sbb xor adc pop fiaddl adc lahf cwtl jae int xchg repz (bad) pop mov ja sub aam adc ss and cmp adc imul add mov cld adc mov cmpsl mov jg out mov jo iret rclb xor or adc or test inc adc roll xchg and ret xchg pop xchg and (bad) mov xor dec mov xor pop mov test pop mov insb adc push jno adc xorl int3 fmul jae sbb lock inc outsl lahf int3 lea repz in cmp adc mov or adc dec sub pop adc push (bad) or mov int3 sub mov push jo out push dec cmpsl jbe (bad) mov lahf xchg out dec adc jo sub push insl lods adc xchg movsb mov fidiv inc jg push xor dec and icebp mov jge js cld add sub mov adc dec xlat shrl sub lret jnp mov (bad) mov push movsb icebp lret imul in fisubr jg mov int3 push adc or pop test fwait cmp push fisubr push jns dec xchg bound iret or xor cmpsl (bad) cmp in mov adc movsl mov fiadd adc push pop cwtl xor sbb or jecxz adc lcall sub sbb fcoml xchg cmc or mov jae sbb (bad) or adc out negb mov movsb xchg imul mov rcrl push stos mov (bad) xchg mov jmp or jo jno sub xchg pop mov mov lahf loop (bad) xlat adc cmpsb pop mov cmp sbb pop add xor mov and jae jle subl fsubrs in mov lret clc dec faddl out lock cmp and cli daa mov inc jbe cmp (bad) jmp andl adc and xchg mov (bad) xor outsb mov adc mov in push mov je xor lahf cs insl xchg or rcl jp ljmp xchg addr16 test rcrl fsub movsl adc xchg mov xor fmuls cld es inc jbe loopne fs add mov enter sub and rcrb (bad) aaa and push jbe or sti push adc fisttpll sbb dec xchg les (bad) pusha test aam mov not push mov dec out stc pop sbb adc loop repz mov data16 sub jg mov loope inc mov sub jnp or out adc das adc push data16 xchg sbb fs movsl stos popf pop sbb pop mov xchg fcoml push sbb out push mov pushf lea imul (bad) xor jns pop push fnsave stos pushf sbb adc jno push stc push xlat adc imul push pop xor orl pusha inc add sub jo adc jno (bad) repz ds mov (bad) jmp adc cwtl mov lods adc in dec hlt movsb jmp pop popf push mov outsl add dec xor std pop (bad) dec xor pop pushf lea cmc xchg sbb sbb cmp test add mov cwtl dec adc int and adc out push xchg inc pusha add sub popa adc mov xor mov lret divl add adc gs mov (bad) xor movsb xchg mov out xor or or aas adc xchg (bad) mov lods das lret rcrl hlt ret in cld adc or int push add and and mov fisttpl xchg or fwait repz stos test incl out adc sub or add dec pop ret ds push mov jno addr16 stc (bad) xchg dec inc adc xchg cli in (bad) xchg adc sbb leave adc fxch ds stos adc push and xchg dec cmc adc xchg mov mov lea shrb sarb cwtl mov icebp sub xor xlat outsb or cs push idivb adc (bad) push cwtl mov stc leave aam push rorb xorl xor (bad) punpckhwd test stos sbb movsb dec mov or stc mov repz (bad) xlat sahf and or xchg sbb sub rorb lret push push push aad ret inc adc or push lods push stos adc clc dec and outsb adc (bad) push mov sti sub sbb aaa insb and cmp add jecxz cmp into mov roll inc or pop xchg jne aas dec (bad) jns mov pcmpeqd cwtl xor roll add push movsl jge and cli hlt mov into out test push lahf stc adc cmpsl and push aas sti adc pop in pop mov mov test fsubrs clc jg adc loop cli xor (bad) fist jp dec ljmp push pop jae clc push loopne hlt insl lds mov push inc pop das sbb adc scas push repnz jns into into mov (bad) lret insb les cmp jp mov mov xor jmp popf adc or jns mov dec sbb clc cmp ja ret lods test int je or in adc repz mov adc xor mov (bad) xchg mov adc adc mov jbe fidivrl popa arpl cmp mov adc iret add jmp ja mov dec int3 push ret dec mov gs mov adc aaa ss leave jo adc andb adc loopne lret and adc lahf pop push xor mov adc fwait jnp repz xchg xchg pop ficompl and repz jge pop pushf add jmp int xchg imul mov push leave dec push sbb inc mov sub xchg out in cld dec mov cmp adc cmc ss fs adc lea xchg enter hlt ljmp mov cmp mov bound inc pop inc push adc pusha test es mov cld repnz insb int mov jne cmp mov inc push inc sarb mov mov aas adc fdivl in or mov inc or adc add lahf mov adc mov sub aad (bad) or push push cmp xor jae fidivrl inc je out ljmp ret sbb adc mov imull dec xor shrb pop mov mov inc mov popf dec xchg dec add mov and test adc aam mov ficoml or fs dec sbb icebp (bad) and adc pop cmpsl cmp and shl repz push stos (bad) in scas pop fnsetpm(287 rolb shll mov adc dec sub mov mov add mov sub jecxz je pop add or lahf lret test shlb subl sbb or loopne in xor xchg push sbb fst pop les cmp fidivl enter lods mov xchg xor lret mov adc cmp inc addr16 stos lcall mov pop les adc sub mov pusha int xor add lahf xchg adc outsb daa pusha adc lock stos repnz fiadd sbb call jg pusha ja xlat mov outsl mov sub mov adc scas mov test push push jge adc std aam lock das rolb fisttpl rcrb add lods cmp fisubr mov repnz fidivl decl mov add mov loope jns xchg push cmp rcr pop lret adc aad cmp adc movsl cltd insb adc clc pop xchg imul cmp push mov mov jnp out cli test inc pop push mov pop sbb mov std xchg and adc xor mov lea jns lock add repz jmp jp pop mov push popa pop pop sbb jbe mov lds xlat add and sbb adc cmp (bad) repz cmp clc sbb addb add sahf adc push pusha loopne (bad) push rorl outsb cmp ss xchg push jno add sub insb mov adc addl xchg xor test aad test adc adc (bad) movsb cld jno adc add clc xchg pop push add jmp cmp adc sub add repz test adc push inc cwtl adc jno out dec pusha adc adc sahf pop inc repnz mov push xlat mov repz ds xchg jnp jp aaa mov outsl pop or (bad) movsl push hlt (bad) ret or dec inc adc cmp scas scas push xchg imul jl dec inc cmc rcrl sub mov ficoml jnp xchg stos iret jb mov pop xor push rorb ds dec adc fistpl loop xchg dec dec xor or inc sahf lret jl xchg mov sub and lret es ds or icebp dec xchg push inc repz mov mov mov js mov cmp adc lock std rorb mov mul dec fdiv cmp add lret mov cli cwtl add iret movsb stc jle mov sbb inc and pop xlat mov ret add adc mov xor pusha imul and or (bad) shrl sahf adc or call xor add and pop insl pop xlat test mov adc mov xor aas rclb inc hlt push sbb mov iret push adc addr16 dec dec notl loope pop (bad) mov test insl add add cmp or imul sbb mov mov push pop adc cmp jae enter or jl mov and push pop mov xor ljmp sbb adc xor out jne add push pop or adc sub insb dec aam or lea pop or or inc clc sahf jp xor push (bad) xrelease push jl add inc je std aaa lock out pop adcb mov pop adc xchg cmpsl mov mov fisubr sbb dec inc or loop in jg cmpxchg dec adc jne sbb sbb cmp (bad) out adc adc pop adc add sub jo hlt xchg cli js mov addr16 add into push adc mov insb popf movlps and in std xchg adc mov or pop out adc adc mov negl adc cli fs adc (bad) fisttp push mov je sbb jle jbe or lret pop dec adc ret inc cld mov adc cmp rcll call jb inc adc push mov pop es das or mov adc arpl cltd in add mov sbb gs test cmc (bad) fistl and test adc jecxz add scas pop adc cmp es test movsl adc dec aas in (bad) jne adc fistl js icebp xor (bad) or shrb bound and lods lods outsb out sbb cmp std test sbb adc dec sbb adcl js sti push mov stos fiaddl sbb adc in sbb fwait lret adc xchg adc or mov cmp into pop add fstl cmp inc mov xchg pop mov inc jae out dec mov mov (bad) adc jnp and mov cmpsl (bad) pop hlt jo movb pop mov rcrb lea or xlat xor call mov pushf enter xchg cmpxchg or adc les mov adc mov cmc inc mov pop adc dec pop fcoml mov adc and lods xchg or mov xor lahf insb fbld inc adc push bound lahf ret pop or mov sub sub cmp divl test or rcrl out adc dec pop pop adc sub and out hlt add test insl adc jecxz clc in inc icebp dec push cmp (bad) test adc mov adc sub adc inc push aas sbb aaa int icebp inc int3 mov sbb add (bad) xor jmp and movsl ss iret cwtl lcall adc mov pop adc inc sahf mov fcoms lcall clc rcl loop ret inc cmp imulb cmpb adc clc mov mov mov js adc push mov das rcll mov jnp ja sub test mov inc (bad) adc fdivrl and mov adc dec test mov sub loope adc inc ror cmp pop push (bad) or adc cwtl (bad) notb roll push mov lret cs out pop (bad) aad sbb mov jns leave int rcll aam cmp clc mov adc cmp into adc xor dec imul sbb dec leave mov popa adc add mov jne adc repnz adc push jmp call sysret mov inc xchg pop adc add mov and pop aaa pushf jge arpl adc mov jle es push sub sbb int (bad) inc mov mov leave push push lret adc xor test and stc add shrl mov rcl sbb fist mov bound push cmp adc or xchg cmpsb jmp and fisubrl mov xor inc adc inc jge (bad) push mov pop (bad) fcompl pop sar mov xor ja xor incl fabs or subb jne lret lcall xchg dec sub mov mov je (bad) dec xchg bound (bad) rcll sub (bad) or add dec mov sbb subb pop ja scas rorl jnp jmp cmp adc pop stos sbb jle pop repz mov mov adc add mov dec mov mov push sbb int adc data16 adcl pop rorb sub stos add mov js adc in rclb adc push adc pop sub jle sarl call sbb xchg push and xlat rorl fstpl fld pop test adc jecxz out mov dec addr16 mov fidivl (bad) popa add test xchg mov ret jmp jo aas xchg mov daa gs cli push fnsave cmc adc icebp movsb repnz in out call adc xor jle sar cmp (bad) adc sub add xor andl push cmovbe mov pop sbb jbe sahf or mov mov push int3 out aad or icebp xchg xor movsl movsb push add popa lea gs dec or adc sub inc or cmp imul inc lea xor loop nop pop push dec insl adc je cmp sub xlat adc cmp movsl jg xchg or xlat jmp das fistpl aas sti adc insl push inc sbb pop in test jnp xor sahf push xchg dec adc sub xchg cwtl fs rcll out fstpt lods add rorb sub aas jnp int adc mov cwtl (bad) and xor jae mov adc call mov (bad) mov mov (bad) fldcw stos popf (bad) xor mov cs repz loopne mov adc fiaddl cmp mov or aaa fwait mov rclb ljmp lock lret test shrl add cmc int3 lods dec xchg adc mov je xor test dec movups xlat adc jnp adc sbb mov cmp xchg (bad) fidivl and jmp cmp xchg jle sbb std adc push dec add fpatan (bad) (bad) jg clc decb outsb pushf loopne rorl aaa ffree pop in mov aad jmp sub adc xchg mov adc jb stc rcrb jmp into cmp push imul xchg call adc aas loopne outsb add or or loope cmc rorb cltd (bad) icebp xchg cmpsb mov insb das adc sub hlt adc mov repz xor test adc pop mov jg push adc outsb mov cmp sub add mov test and jno popf jne repz sub pop cmp sbbl jmp aas or sahf adc jmp jl dec xchg adc jle sub dec rorb int3 fistpll xor cmp push cmp inc push dec jb adc ds cld into imul mov je lcall gs adc push cwtl addb or or pop adc xchg mov imul cwtl sub xor pop movsb jne jb je xchg fsubrs xchg adc jl xchg xchg sub pop inc dec dec add mov cld inc mull adc xchg js adc out or loopne in cli das sub add lahf leave sbb daa pop cld repz push pop adc xor aam adc or xchg lods xor out iret sbb sbb mov adc daa imul pop rcll dec xchg cmp aas xchg aaa cld adc jno sub (bad) mov dec pushf (bad) lds pop (bad) call je jne movsl lock dec aas pop or sub push mov cmpsl pop aam pop adc mov bound adc cmpsb or push dec idivl aam leave add popa inc push jnp adc loopne idivb adc popf sub cwtl leave retw rep sub pop or arpl neg xchg adc aam (bad) mov mov pushf jo mov pop jle dec sub xor jns jge cmpsl cmp mov xchg insb inc xor xor mov nop pushf in sbb push jp inc out or adc js ror pusha mov pop aaa add mov adc mov inc iret fist (bad) rcrb push adc add dec inc jmp and ss dec icebp je add cwtl insl (bad) repz ret in cs dec (bad) push push stc les fs adc cmp pop hlt inc jb hlt leave jge fstps mov adc lock add sbb sti pop push mov repz cmp jnp sahf lods sbb mov xchg nop adc mov data16 aaa (bad) jb rorb pop es cmp test das mov fldl and neg adc scas popa mov jmp out mov dec imul cltd daa inc xor or rolb (bad) mov scas push or repz loope adc add adc cmp adc clc push push adc repz (bad) in into mov hlt mov push push jo or fist mov aad (bad) jecxz fisubl dec pop popf lret je pusha xor mov out test xchg dec mov roll pusha dec std adc adc adc lahf mov push inc add in mov lahf or or testb std scas call adc jle clc xchg mov lret push adcl add fstpt std sbb or (bad) adc push or or xchg push pop xchg out cltd mov nop jae or and imul or stos les test pop mov jecxz mov or pop add jg fsubrl rsqrtps adc into mov add mov lock ja jg xlat or and (bad) pop add jo mov fistp (bad) jg iret cmp or notb fist push xchg push jns movsb adcl sbb scas in cwtl pop call adc sub cmp jle adc add jnp in dec add push movsl push (bad) aaa shl sar (bad) sub and aas dec lods cld adc shl adc mov cmp push adc add insb adc mov lods adc rcr dec pushf in das or sbb mov adc lret loop loope aaa add clc pop or (bad) cmc adc (bad) nop scas pop jmp repz ljmp data16 mov inc sti adc rcrb inc sbb leave por xor shrl cmpsb mov pop jnp (bad) stc xchg push les lahf popf dec sbb pop lret xor pop mov mov jp cmp mov mov jmp adc stos mov aam movsl jnp and pop sbb cmpsl xor ret out aad adc adc stc aaa jle adc gs mov xchg adc (bad) cmp add ret ds cmp adc (bad) mov or fist xor pop scas into popf cs mov push popa rcrl pop mov pop sub bound jae push idivb cli adc ds repz add adc (bad) jge push lcall adc adc fwait push stos pop xchg mov (bad) jb dec imul lods adc loope mov (bad) daa adc jl cmp mov lret insl xchg mov mov sbb sub and addl lahf push imul mov (bad) push xchg pop fisttp je enter or mov mov adc or ljmp movsb pcmpeqw cmp mov mov adc std mov inc adc stos outsl xchg pop adc jne dec (bad) mov ficompl mov test dec adc orl scas mov iret insl xor ds loop (bad) lret rclb and or inc and mov (bad) out or adc mov leave adc loop nop mov repz daa cld jecxz or sbb push insb aam mov fstpt mov push lahf mov pop adc dec shrl adc lret mov jmp faddl cmp pop pop sub adc xchg cs (bad) fwait mov adc cmp popf jne jl adc adc mov xchg cmp jnp (bad) mov mov shlb (bad) mov sbb push push repnz lcall loope insl adc inc cmp xor lds int adc (bad) adc lds and fdivp push jle pop in mov sahf add adc mov repz (bad) push bound mov mov fsubr jl test inc rolb (bad) sub fistp cmpsl out out push fstpl aam push mov scas mov pop push push stc add mov and and test icebp push mulb mov fcoms clc adc fisub inc adc mov inc sbb gs xchg out xor lock cld aas adc jbe mov (bad) jne mov out or adc dec cmpsl xchg sbb jmp sbb jge (bad) cmpsb add and jge inc push push adc test inc mov or adc mov lods and adc sbb out iret mov or push push stc pop adc inc bound cmp cli xchg sub int adc pop adc inc scas ret adc inc gs xchg push mov add xor mov adc add mov push or and sarl inc push adc xor jge es inc stos or cs or dec cmp stc adc jecxz cmp or stos daa adc int3 incb (bad) clc push pusha inc jecxz fcoms push (bad) xor ficoml add lcall inc add rclb push push sub inc sub (bad) hlt dec or arpl sarl or mov cmp scas (bad) stos test imul fidiv adc sub mov pop in push push iret jbe cmpsb adc out fbstp addr16 fildl decb pop push adc xlat add pop cmp mov inc (bad) adc sub dec cltd xlat enter rcll sbb adc fcompl mov cmp lea jle test pop sbb mov mov or adc arpl push or adc sbb es and sbb jns push int scas mov adc or xchg ja add gs adc xchg jbe,pn inc dec lahf xchg push faddl jecxz fistl and pushf rclb test xor adc dec mov adc lahf ret dec mov adc sahf inc out imul repz push pop mov bound push pop test push leave adc scas (bad) rcl dec fiaddl mov dec js adc stos and adc or and ss loopne push in outsb adc sub call inc test mov sbb dec jecxz push pop out inc dec adc rcrl sub mov adc cld or call and lods add (bad) mov mov pop leave lret ljmp jge inc mov push jo test push jmp adc xchg and in push test add rorl ss and push adc sarb fnstcw or jo dec sub mov and mov bound push mov dec pop mov push sbb adc test inc push push inc or fidivrl js out nop cli cld xor leave mov in sbb adc sarl mov cs loop or adc cmp or mov jge bound mov popa push mov in lea add ss jo or pop mov adc adc push and adc nop adc shlb loop scas fcomps push fdivr mov sub (bad) out into pop jl add add add adc ret mov dec por push inc cmp xchg jl adc mov or jle cmp and cltd mov jns cmpsl and adc rcl xor and adc shll mov inc and sub jno mov jp or cmp repnz pop lahf xchg sub and and call push xchg mov add clc ds xor jp adc ljmp adc sti ret divb adc fldl or imul push ds sbb push nop dec xlat loopne sub cmp setbe cld out inc xor int xor mov (bad) dec jns push nop mov and out scas or dec jnp out push adc sbb repnz mov (bad) xchg mov inc xor add adc orb xor mov std adc add jb jle adc push popf pop push lret dec jecxz pop addr16 sbb or dec adc test add in dec pop cmp std mov mov or sahf push adc daa sub fs loopne sahf adc pop push hlt (bad) xorl ficom pop mov jge je daa mov fucom adc adcl iret cli scas outsl jp cmp xor fidivl pop push mov sub fstpl cli daa jl mov mov mov rol dec adc jne outsb mov nop sbb dec test jmp (bad) sbb in dec cmpsl mov aaa dec out mov bound inc mov ret lcall mov mov mov (bad) imul das sbb xchg mov adc cld adc push or pop jmp popf push adc xchg cltd mov xor xchg add xor ret sar es mov jns adc mov (bad) sub and ljmp test adc and je in cmp push adcl push inc xchg mov add test jl mov or xor sbb adc sbb mov lret push (bad) dec fwait hlt std pop dec pop adc das mov mov (bad) cltd imul imul mov enter daa mov iret lcall paddq pop push or imul sahf scas adc jo loopne adc mov clc popa mov mov mov test insb loope jo mov and jmp adc sbb push arpl adc int mov clc mov sarb test mov loop fninit call dec xor xchg cmpsb adc push fsubl mov repz jno fldt fmuls les dec int jae xlat add pop and das add pop pushl sti rclb or push adc mov cmp test xchg dec cmc mov test scas adc lods sbb lret adc out xor das mov xor push (bad) call mov mov test (bad) mov adc in pop and pop or xor es iret inc movaps out adc dec jb mov xor mov add dec inc jae (bad) fmull adc sahf mov mov pop inc jmp sub mov movsb cmpsl ficomp mov int push stc or rcll cmc mov adc add inc push sub add incl add and cmp xor jle sbb adc sub sub (bad) in cmp lea leave push xchg out xor enter adc jp dec cmpsl add lock loop jno cmc inc lret sahf iret pop insb stc pop adc inc add mov jp jbe test hlt inc adc lea icebp lret adcl and xor pop sub pop enter and (bad) bound jno jne or adc or mov adc (bad) sbb and dec adc xchg aas adc inc nop (bad) rcrl mov mov jbe movsb enter push stos mov mov xchg add fistl out out test inc mov ret xor mov push pop adc xlat rcr jnp mov jg add insl out mov aaa sbb add lods mov push cmp xor (bad) push or rcrl mov fistl pop jmp (bad) lcall sbb adc leave sahf fcoms jb dec pusha jbe,pn mov mov cmpsl lret pop adc mov test mov add sub inc add sbb mov and (bad) int3 lea adc imulb notl test arpl xlat iret add adc (bad) jne loope fsubrl pop dec sub popa scas add add adc int nop fwait sahf pop rcll jae,pn dec xchg mov jg inc into int mov lcall jnp inc mov mov pop rorb test or je fnstsw lods fwait pop xor mov mov subl lds negb mov mov orl xchg je rorb test pop shrl out outsb adc add adc fbld xor add lea adc sarb sbb es mov or outsb ret push sbb out cmp cld cmp lret xchg adc adc outsb mov adc fcoms in and ret adc inc adc add mov int movsb xor lods mov cmp sub fdivrs icebp sarl mov adc lahf (bad) mov adc popa (bad) sub pop adc dec xor cmc stc and stos pop cmp pushf sarb dec nop (bad) xor jecxz ljmp jle mov mov (bad) xor les addl fisubl adc mov push mov mov js fsts in adc loopne sub rclb das data16 mov imul mov cltd xchg adc xor adc push (bad) inc lahf xchg les cmp movsb out adc and pop sarb das adc inc pop xchg xor xor bound jmp adc mov and xchg test sbb leave hlt push mov stos inc stc pop daa xor in xor nop or test add cmp xchg adc jo sbb aas fildl pusha adc cmpsb repnz mov mov rclb loop xor mov stos sbbb push out daa xor in add push fwait inc lret gs push repz lcall or pop push cmp sbb or rorl aad lock add repz mov sub jnp rorb or adc jecxz test rorb mov xor lods adc jmp scas sbb cmc adc dec shrl sub ficompl jge test adc lret enter arpl xchg stos shr repz jecxz or mov lds and jge jbe jb mov jo ficomp mov and or adc loope cmp xor test decb stos fcmovb loopne and pop cld push mov data16 inc inc mov lock sbb insb outsb sub fdivrl fcmovbe pop mov aas movb xor sar out xchg fcmovnbe xor outsb das adc mov dec xor (bad) inc xchg test movsl adc adc push (bad) stc mov call rolb and adc enter xor jg cmp jl inc in adc add sub jno out and jne outsl repz lods add xchg sysenter loopne shlb nop xor insb mov or mov jo adc push mov test add mov test push out test mov mov and sbb (bad) dec divl in adc test nop adc dec and outsb movsb xchg dec or adc idiv stos jmp lcall popf jne ret std mov outsb fildl jns inc das mov cmp mov adc mov adc mov mov (bad) sbb cld add xchg fidivrl enter sbb xor mov dec pop das (bad) lret xchg mov mov inc push cmpsb mov sbb rclb sti lahf mov mov in test dec dec adc lret lods inc push icebp jno or test hlt jle dec adc shll adc (bad) push insl mov mov (bad) in xor dec enter adc push sub fcmovnbe push jge mov int3 pop mov mov mov jle add mov fisttpll lock rcrb dec jp das add pop insl inc jno aas adc pop adc inc push mov pop hlt push (bad) cmp (bad) xor mov inc ds jae add pop cmpsb mov lods lds cmc mov add jo mov sbbl or rorl (bad) mov adcb data16 dec das pop mov mov jbe jecxz dec push ljmp sbb inc or adc int outsl sbb xchg pop mov inc or dec or lahf mov stos or mov push popl mov mov push cwtl rcrl or repz jns sbb pop adc rorl aam out adc rcrl test jb sbb push mov adc sub hlt jge xor pop mov (bad) jg out call mov (bad) mov bound adc (bad) mov insl inc sbb add jmp lcall or jl mov and inc lea adc mov or (bad) adc movsb shr adc pop imul (bad) daa mov jbe stc add mov pop sarl fidiv stos mov repnz adc or xchg (bad) movsl xor cltd and int3 add pop mov inc adc jmp rcrb push push xchg sti cmp fmul adc (bad) test lcall inc jl (bad) stos aam js lret sub mov in mov xor adc in fcoml sub xor frstor adc push mov adc cmp sub push xchg push loopne outsl adc cmp adc ds mov andl loope sbb repz aaa js jae mov xor or aam fucom xchg test pop loope xchg mov popf negb (bad) adc mov jns and adc (bad) cmp in imul dec adc es pop inc mov into push pop cmp ficomp cltd shll cmp adc and das cmc hlt ret jl jae cmp fnop test push (bad) mov mov jmp cmpsl add cmp stos mov adc dec mov cmpsb jne push add add mov add and int3 ret pop adc movl addr16 push xor mov xor pop shrl (bad) or adc adc gs (bad) out xchg sub mov int xor adc add mov cld enter xor (bad) in cltd insl stos ret adc xor int sbb mov cmp push ret imul gs ret jle dec pop inc jle sub cld hlt and push mov xor inc xchg cltd daa loop adc adc jbe push xchg icebp jae repz add xor adc sbb clc adc ss xor cmp repz jne sbb sbb aad aas add jg imul in adc cmp aad stos jge leave adc (bad) fs (bad) adc enter bound mov (bad) clc lcall xchg lea inc adc push into scas mov (bad) negl dec lds iret roll add int jp nop adc sub lcall scas inc mov dec adc stos jne mov add mov (bad) adc dec dec imul and repz mov or jg iret push lods jmp cmpsl mov adc and sub mov mov xlat cmpl sub test and push mov shl sbb adc xchg pop add push mov jge mov jno and jmp jnp popf loop cmp ja mov dec add adc cmpsb test daa jnp add mov add arpl adc jns inc adc into mov sbb and (bad) lock sub push xchg jb repz fisttpl push adc bound icebp cmp jno jb and add in push sbb dec popf ljmp push xchg adc in jmp xlat or fidivr add ja (bad) push pushf pop push mov int dec rclb scas lret jnp cmc aaa adc xchg xchg or repnz adc idiv lret aad xor lds adc bound jmp push add and pop or lock mov xchg jl pop push mov pop std cmp icebp repz ret out pop dec aaa adc sub loop fcomip imul icebp scas xchg jns ja or mov sbb add jbe sub or or int3 sbb pop dec int das xchg and push sbb mov fs add fwait mov in cwtl push test movsb lods sbb sub inc jb arpl pusha ja sub xor push out jnp cmp ds inc scas push (bad) ljmp push add sub sahf adc push in add popl cs push sbb mov insl jge or and lock cmp imul pop or xchg rcr (bad) xor shl cmp adc push outsb push mov pusha sti pop lahf add xchg jo scas andb jecxz or in mov xor inc fsubs andl dec fstpl (bad) lods data16 ret adc and pop adc pop jl fimull cltd adc fnsave outsl data16 inc mov add lret pop xor jl mov xor cmp sti outsb stos mov jne lds imul pop in xor scas mov adc inc fwait adc cli sbb or cmp add pop int pop jae jle adc or mov das or aam ret xchg shlb pushf add addl push jbe push out push aas aas sub add sub pusha nop adc (bad) insb xor add test comiss bound sbb repz ret pop icebp adc pop mov pop adc inc sahf adcl ret mov (bad) int adc push popf and int3 mov out xchg adc lods pop inc mov rcrb cbtw mov out xor add clc lea loop jno stos int3 sti pop (bad) and jno lret xchg or jae loope add int3 xchg push outsb popa fs imul mov out pop adc mov sbb es and jge addr16 mov mov xchg pop cwtl enter pop dec and loop xor pop cld (bad) rorb cltd test inc adc push push ss sahf in ja insl xchg sbb stos cs iret xchg subl cwtl adc rcl and mov je mov jns fmull dec mov (bad) repz jne mov imul ds fsubrl add pop adc cmp in lods jns push mov sti mov sbb pop jae sbb das push sub mov adc shr xchg aaa mov stos outsl and mov lds adc push lods cld shlb sub add adc es imul sbb and cltd xchg movb loope inc push mov sbb push (bad) push repnz lds cmp jnp mov and sahf movsl rcrl popf sub xor inc popa add push (bad) adc adc fdivrl pop lahf dec mov sub inc adc (bad) cmpsb nop sbb mov inc aas mov lahf push or mov repz cmpsb cwtl adc je sbb gs add push mov inc mov mov mov add add repz in int imul icebp inc sti pop mov fcomps or adc cmp xchg add sub lea and test adc xchg add add lret mov mov adc cwtl das ret not shlb mov orl adc ljmp bnd repz dec sti jo or es inc mov pop or mov mov adc adc jle mov push and int adc stos jo stc fwait js adc mov pop add add xchg mov nop shll mov popa xor lcall adc mov icebp mov adc mov or (bad) movsl push cmpb adc fisubrl mov adc (bad) mov cmp hlt mov and mov xchg pop cld pop cmp lock xor jns scas or sahf test mov (bad) rolb jne adc xlat dec xchg sbb test out mov adc xchg popa cltd add mov adc push cmc adc rolb nop pop mov (bad) (bad) mov push jp push push aam adc xchg (bad) adc mov test mov inc pop jl jb lahf jg inc or arpl movsl dec outsl pmaxsw dec add in or adc add mov cmp loope sti mov (bad) int pop mov and mov dec pop hlt jbe mov pop or lock (bad) push push jb adc enter adc stos jne mov or xor sti stc add in xlat cmc jbe cmp clc cld cmp jnp pop fsubrs adc int3 shlb xchg iret repnz cmp or xor jg ljmp adc mov push leave and mov or pop mov gs in ret adc adc inc mov es dec adc ds lods pop sbb add ljmp in and mov xchg xchg push inc out ficoml and lods mov and pop es out daa dec push aaa sbb xor popl adc clc cwtl and add repz hlt das mov push jp pushf sbb fwait int3 repnz ret jnp mov cmp mov (bad) push ja cwtl fiaddl xlat cmp and mov sub lahf dec jae iret aam or ret rcl mov mov add push fs pop inc sub adc jp xchg pop inc inc xchg push imul call shll fdivrl sbb adc fwait das jmp sahf adc xchg jl or lods les lea and xchg cmc and add push in les repnz mov pop imul push pushf xor sub mov adc mov adc imul dec push xchg popa sub jg jmp add imul dec cmc dec adc pop sub out jbe adc dec std (bad) lret dec cmp aad cmpl jle cld repnz cmp jo mov pop rclb xchg outsb nop cmp out lea aad pushf out (bad) mov xchg repz xlat hlt xchg xor push pop scas add aad sbb fs mov fist push xchg divl mov dec mov cmovs add add fisttpl pusha inc pop adc push or (bad) xor mov adc fidivl dec lret xor stos mov inc mov xchg rclb imul cmp jnp sbb cmp dec mov test iret xor cmp inc les adc insl setnp mov and adc pop int jne mov mov or jno sahf (bad) test adc push mov adc xor push pop jae lods sbb inc fstpl mov and sbb sub push repz pop cmp in cmpxchg pop jo pusha nop test scas mov outsb aas and pop mov xor stos mov lods jns adc (bad) mov frstor fistl lret fmull inc call mov test mov int3 inc pop xor fdivrs add out and clc adc out sub adc lods add xchg mov (bad) jb in hlt fisttpll daa jp pop aaa xchg sub pop arpl popf dec or sbb jnp and imul aaa sub repz mov or in or xor std mov pop adc addr16 adc movsb mov xchg imul sbb (bad) (bad) xchg mov add imulb sub push and or mov std push adc dec pop adc test daa xor mov jmp cld adc xchg add add or adc ret xchg jle mov pop sbb mov sbb or adc mov mov mov das les mov into loopne int add sbb jno mov xchg negl dec xor xlat and fldl xor out cs mov decl adc les adc or lods adc test sbbb repz movsb mov xor cld stos or mov xchg adc push ja into lret fnstcw lea jne jae adc ja mov dec ljmp hlt repz dec in add or pop test int seto roll adc fimull iret dec jl loop das (bad) add ret outsl call stos lret or lahf out icebp sub xchg int pop loopne dec jle (bad) jae pop stos nopl fsts pop movsb sbb adc and insl pop fimull pop idivb mov pop arpl (bad) add pop pop inc push add pusha adc fcmovb dec cwtl rcr lock negl adc mov in mov aaa lahf inc mov xchg loopne loope xor rorl adc dec adc scas xorl in or push sbb popf push adc sub ds mov ret mov add fcoml push mov out aam popf mov ret sbb fidivrl adc fisubr mov cmp clc pop mov inc arpl mov stos int dec sbb rolb adc je movl mov mov jo xchg in cmpsl or dec mov mov or pop clc fidivl push (bad) sub pop ss sbb cmpsb jno pusha iret adc mov mov cli and sbb adc loope fwait adc mov rorb adc psrlq std rorl push or inc add test push in cmp xor repz pop rcll add add dec scas adc out dec mov adc sarl pop jne sti jp daa jno fidivr push adc pop out mov mov pop push push jge cmpps mov (bad) add int3 iret push inc cltd mov call lcall loop outsl push dec and fist xor pop imulb or adc lds jp mov mov repnz movsb into pop repz lods mov pop ljmp out mov xor scas cmpsl cwtl adc (bad) mov adc les and ljmp adc or movsb mov addl pop dec mov mov popa xchg (bad) adc jge mov pop adc mov mov and ret and cs adc jmp mov lea sti xor ficomp mov inc mov loop sti stos mov mov jno mov loope rol xchg sub fisttp adc pop mov xor add sbb pop dec adc mov push jecxz mov inc add add adc adc adc fsubs push push movsl push ja inc aam (bad) add sti jge in jno push cmp lahf pop add out sbb adc sbb jecxz andl loope cmp jl pop sub adc cmc mov mov or enter xchg psubsw fs ret cmp add lods rol inc jmp pop mov es mov lods sub or jmp push dec mov (bad) mov xor mov mov adcb xchg or es ret sbb inc and adc push add in mov and jns push cltd dec push shrl dec mov and imul add repz xor xchg mov (bad) (bad) outsl or or cltd mov hlt add adc sub icebp mov sbb (bad) std push cmp insb sub lcall out gs iret (bad) and xchg movsb fwait mov call cmp adcl or subb adc mov fildl sub cmp dec rorb pop push dec mov xor sbb stos dec or in jnp mov fwait repnz mov cmp jg adc out imul xchg xor sub out cmp shrl sarb push adc jp arpl push push adc lock jbe add adc (bad) bound adc fs push push jp repnz sbb jne adc xor ret les fnsave adc jo leave adc cmp push adc sbb cmp arpl (bad) je push xor sbb or pushf mov push push dec mov outsl fisubl adc xchg dec adc iret adc xchg push sbb movsb or shrl (bad) mov lea adc or movq inc repz call adc insb jge es inc mov pop (bad) lahf add jbe adc stos pop and loop jp push dec adc jb push mov xor pop pop mov stos adc aam mov cmpsb dec mov sahf adc loop or (bad) xor mov movsl shrl adc or xchg xchg dec xchg push iret dec adc and cmc mov loope mov gs pop inc repz mov repz fcoml mov adc mov ja nop cs push sub sub frstor sbb adc jbe push adc jae adc pop stc adc jle divb mov sbb mov cmpsl or sbb inc cmp rcll test lret jb add les xor pushf mov and pop arpl je enter adc aaa inc jns adc lret mov out and mov add fsubrl outsb push mov scas mov mov jmp pop loope mov add lcall adc stos aaa inc scas push fadds mov lods inc sti lcall test jge sub movsb rcrl in jg (bad) adc cmp test adc and cwtl adc and hlt rep cli sbb scas add shrb or xadd lret popf shrl mov mov xchg adc aad fldenv jg adc push lods insl jns cmpsb xchg push pusha in adc outsb add mov xor repz movsl clc pop adc shl fnop xchg sbb adc aam jge popf add movsl push nop fisub cmp adc adc sbb jo out je or into push aad repz imul xor ja pusha and div shlb dec (bad) insl push pop or sbb jg cmp test xor push sub sub adc int3 arpl mov repz xor into test mov je and pop fs xor in jge incb jno adc mov or (bad) stc daa sub addr16 and stos insl bound jle hlt js aas or jnp (bad) sbb or sbb std dec add popf icebp push lcall xchg xor lock adc and xchg ret rcr bound stos punpcklbw packsswb (bad) lret stos adc sti cwtl sbb adc or bound sarb adc jl cmp in adc push pop dec and ret adc mov repz popf inc jge xor arpl push stos lock sub insl adc ja dec mov cmp std push xchg jnp or out lds push mov scas dec xchg test pop cltd adc (bad) sub imul adcb repz ljmp les cmp clc push imul insb cmp cmpsl adc mov push pop xor or ss jge adc lds sub xor or jbe rclb das pop popa xor adc out fnsave pusha stc pop lock cltd add adc dec dec out xor adc sti repnz call frstor mov popa dec adc inc incb dec adc cmp mov pop rorb mov adcl je (bad) sub and dec fsubl adc xor (bad) mov outsb adc clc cld out jle cmpsb (bad) icebp xchg push insl xor jne adc imul adc xor pop dec pop pop adc das hlt and or jl mov loopne push add dec cmp scas jge mov je xchg int mov cli adc mov and and adc mov jecxz ja rcrb xchg push mov cmp mov xor adc (bad) (bad) sti add adc mov xlat jp cwtl je adc push mov sahf or pop arpl mov xor push imul jg mov and leave ror (bad) int3 dec xchg dec pop sbb stos xchg inc test les push into mov add pop lods in adc int int3 sub out xor fnstenv in rcll out mov and (bad) mov cmp sbb adc insb test push (bad) mov (bad) adc es push mov mov xor fadd lcall adc mov jno loope outsl int push movsb pop adc (bad) lods add out out sahf jmp mov outsl aad jg mov in push add mov pop adc sub cmp or jnp mov push sar mov xchg (bad) sub mov adc repnz or add in xor inc adc mov adc jb in lret dec jge sbb add dec es adc jmp bound jl add adc imul and stos adc mul sub popf inc lea add dec jmp insb aad lcall dec xchg inc inc push lds jl add jno fwait add adc negl adc jmp lsl lret xor cwtl adc xor jne adcl nop cmpsw pop divl aas and addr16 sbb inc mov adc push sub adc scas jg cli fldenv adc iret pop adc mov or sarb int3 sti (bad) in push push in mov adc (bad) arpl dec adc ja ficoml pop insl xchg mov adc sub cmc jl mov cmpsb mov jnp xor mov xchg adc mov or fidivrl pop (bad) adc inc aas arpl add cld lcall mov or imul jg and sbb jecxz push mov popa cmp hlt lcall test nop scas pop dec mov mov mov (bad) cmp or cld xchg mov aas stos popa jecxz xor pop inc add adc mov insl std repz mov adc push push int3 adc daa jae fwait dec jno dec xor lahf adc xor xchg cmp inc xor mov sahf and popl repz or or rcll sbb inc outsb lock scas jl test in sub aad mov sbb pop std push adc xchg jp adc or mov aad outsl fdivrl sub adc mov adc push pop xchg cmp nop jmp mov test loope cs sbb jns mov cmp ret popa sarb lcall lods adc (bad) dec adc push out cmpsl inc cs mull jb mov cmp add inc adc out sub pop adc mov xchg cli inc rol fwait test lods xchg sbb adc or add jmp fist sahf (bad) aaa sbb cltd test push inc inc iret addr16 cmpsb adc mov mov stos pop mov movsb jg sbb pop pop dec jge sbb inc xor scas lock insb sub repz cmpsb fwait negb cmp push addr16 stos ffree test and shrb push into or lock loop adc jae mov push xchg pop xchg lret sbb adc movsl pop ja push icebp sbb mov jl ficom add or iret fistpll aas adc pop adc insl xchg adc je sub pop mov adc xor adc push pushf jge cmp jmp add call xor inc inc lea sub shr cli ret int3 adc xchg jecxz pop dec adc fsts xchg jne or dec adc ficoml mov dec jmp adcb inc adc mov or jg mov out pop adc les ret xchg adc add ja sub repz dec jecxz fimul cmp mov sbb sbb aam jge aad mov call jne imul or pop or cli mov inc stos dec xchg (bad) sahf rcrb and cmp loope adc push adc sub or int jns pop jl push mov push adc cld push cmp push lods mov sub jns sbb push stos mov fwait inc jae dec mov add push pop jle aas in je dec mov popa xor push in adc jmp adc fstl or scas shlb je cmp lock iret push dec dec adc cmp bound (bad) xchg cli mov mov adc dec jo xor stos rolb add iret adc mov push into lods popf icebp (bad) loop or sbb mov movsb sarl xor lds (bad) out leave push (bad) mov imul adc aad aaa xchg adc lret adc jo xchg test mov repnz test std cmp adc pop adc mov das inc push clc and and cmp pusha mov adc fmulp sbb adc mov gs add cmp xchg jb add test jmp add cmp mov les iret pop gs cmp rcrl xor mov mov imul cltd add lahf out mov xchg jbe lea mov adc cs push adc adc mov push mov inc mov sbb repz roll jae nop sti mov mov inc adc push push popf rcrb dec mov popa sbb jae sub sub push addr16 lock nop dec inc std into cmp fcomi out adc shr adc dec pop rcll testb inc adc insb lret jne (bad) mov repz in je in fcom loopne jbe adc push (bad) jmp mov xor cs fs push fwait adc mov mov shrl pop adc stc lret dec cli adc xchg xchg scas adc (bad) icebp push push ja push adc jns jne roll jnp mov xchg (bad) xor pushf mov jg imul cwtl (bad) ds sbbl xlat fstl pusha sbbb lock int3 dec (bad) and imul lea mov lret xchg repz sub adc enter or xchg inc mov aas xor xor and jo or add add inc test cwtl ret adc cmc leave bound loopne adc rolb sub mov repz jecxz rorb (bad) pop sbb dec xorb adc nop pop xchg (bad) mov jo cmp hlt orl mov sahf or popf (bad) add xchg cmp mov out push mov adc dec (bad) xchg mov mov repz out mov push pop ret push xlat cmp dec adc lea xchg jmp xchg xchg jno sub add popa mov mov adc jle mov adc scas ror movsl iret adc dec js popf lods xchg pushl aas or insl adcl dec mov lahf adc in and xor bound mov leave xchg fwait xor xor pop ljmp pop inc cmpsb jae js adc adc leave rcll mov push hlt push sbb rcr flds jg mov arpl adc lret add addl sbb mov stos aad jl jno and adc adc inc jo mov mov mov dec jle repz je mov xchg mov arpl int or pop dec sets adc dec bsr (bad) jmp fstl adc pop push std jg fcom mov ja movsb out adc jnp ret and sub cmpl int sbb push adc mov (bad) cmp call lods scas lret shrb add and test negl mov js adc jb pop push cmp push adc int adc pop cmp mov sbb jl push adc jae mov idivl xchg in rorb adc dec testb mov nop lods out cmp sbb sub das xor dec or mov daa int3 add scas dec inc lahf movsb jne subl ficomp xchg add cmpsb adc aaa cmp jb mov jae mov (bad) fnstenv fist cmp repz into loop iret jae adc sbb dec add mov push sub xor adc jmp fdivr xchg aaa arpl repz seta mov bound movsb cmp enter fstpl aam lods mov scas sarl sub inc or push and xor sti iret xlat mov es adc mov jns adc mov xor xor repnz mov (bad) in pop cmp adc jbe mov repz les fidiv adc fs xlat fnstenv ret repz repnz pusha add in xchg add adc sbb adc call sub inc arpl pop pop ljmp sub dec sarb jmp stos pop cwtl sub xchg xchg mov xor cltd imul add adc adc (bad) dec dec push stos js je sbb mov jge ja jge sbb sbb xlat repz or jae mov aas repz jno mov in mov (bad) cmpsl enter adc push xor pop shrl shl movsb sub lea mov ret gs adc in adc fistpll loope outsl adc ficompl (bad) ss adc lds inc mov adc and movsb xchg hlt cmp jns sub mov adc dec fcompl and dec sti bound adc push fdivrl jne lds hlt add mov sub mov inc add pushf pop lods push add mov mov add mov adc mov outsb stc (bad) or pop mov cltd jb cli mov repnz push sti mov lahf adc mov push adc andl aaa cmc aas pop rcl jno into adc fisttp fnstcw mov lret xor mov shrd leave adc xlat cmp pop or mov sub addl sbb sub mov adc add rcll sub jmp hlt shll lahf in mov inc mov adc push sbb fmuls je push and xor bound lds mov insl je lock repz add pop sub push cmpsl xor push (bad) divb out dec xor adc mov and fxch mov cmp mov pop or adc loope mov mov mov shr push jnp push or aam mov mov sbb inc fwait lock jle jne add int push movl fs aad fstl data16 adc cld pusha jecxz test and hlt in in jbe or mov dec stos pop adc shr xor xor inc and shrl cmp mov fsubr add mov inc add adc sbb adc xor lcall adc mov mov ficomp adc adc jle aad jl repz sub fstps icebp pop cmp inc ret cmpl mov adc int jo lahf pushf mov repz mov popa cmp aas adc mov adc ret xor mov push outsb testl enter add push cmpsb jno,pn inc pop or lods and sbb sub es aas adc stos (bad) int jmp jae aaa mov inc insl imul mov pop jg sahf outsb jecxz adc fildl mov mov adc aaa scas sub jg ret std fs dec cmp call cmp and sbb stc xor and or inc sbb cmp adc inc pop pop scas fdivs mov fst mov jge jae adc xchg pusha jg ror mov push add dec mov add add out or push adc (bad) pop aas pushf xchg dec adc into (bad) jmp and out adc cwtl and pop pop mov imul sub dec add hlt jno adc sbb xor into mov jle sub bound adc push (bad) in add xchg std stos dec mov repz sbb ljmp pop lea out loopne push pop dec adc pop cld fcoml pop push sbb mov adc ret mov xchg loope xor lock jb adc pop jecxz adc lods adc sub stos pop ljmp jbe jmp imul sar outsb mov pushl stos int lea lret push (bad) jno lock cmp push movsl push adc cmp sbb adc push lret fisubrl test mov dec adc loop cmp cli pop sub fsub jno gs scas adc mov xchg xor xchg xchg jecxz imul js ficoml cltd in mov adc xor mov pop dec int fsub leave jl jmp aaa xor fsubl gs sbb adc hlt lds jo (bad) mov mov js inc dec xchg (bad) mov push insb jno jbe scas push popa mov js cmp movnti in cmpsb fldl adc stc leave adc inc stos mov clc dec cs das insl es xor push xchg push xchg rcll fs sub daa xchg adc sarb and pop pop jp out out sbb jnp mov cltd cli add and mov bound pop pop and push or or pop in adc inc cmp push dec xchg mov mov rolb jae mov add les inc or mov cld repz sbb and mov nop dec adcl sbb xchg lcall jmp ficom std ljmp cmc out dec adc cmpl fwait mov adc movsb inc dec mov or push test pop xchg adc xchg pop mov (bad) enter pop adc hlt outsb lahf adc mov inc cmp (bad) ficom jno aas fwait mov push sub sub adc test stos gs mov mov repz out or xchg xor add jno jle adc sahf push fsts loopne mov lds mov hlt and xor push repz cmc stos fisubr xchg daa mov xchg inc mov or shrb jl dec mov test cmp adc loopne sahf out mov repz xor sub or xlat popf icebp nop xchg notl cmp fimul mov iret xchg repz pusha jp mov mov jecxz bound cli leave jmp jne dec (bad) lds adc mov int adc push rclb adc nop mov jne pop adc sub hlt sbb adcb and das cmp adc rclb inc xor aas push in jnp xchg pop lock into or mov imul xor pop shrl push xchg push stos (bad) inc ret insb adc mov std out adc and cmp out cmpsb iret mov adc push shl stos dec fdivp scas dec jns mov mov adc push inc mov movsl adc or popa ficoml (bad) jmp pop inc stos xlat dec adc and inc andl cmp (bad) dec clc cmpsb mov mov inc pop das loopne jnp inc into xchg adc mov mov add clc out lcall sbb sub mov mov divl cmp or jl jno xchg mov iret jp dec inc adc mov (bad) xor xor test fstp sahf or mov loopne adc rorb lret mov aaa cwtl jmp sbb leave mov mov shlb push push test sbb pop mov xchg mov mov mov jge inc jecxz bound adc adc mov or repz es (bad) testl lret mov dec and mov out jbe xchg adc pop ret movb and xlat sti mov adc into jmp js mov rcl outsb bswap xlat pop dec xrelease cmp add (bad) cwtl adc jmp daa dec adc cs fiaddl hlt adc mov adc xlat aam imul jg adc mov push mov xchg xchg add adc and mov loope push je pop rorl or arpl and ret pop inc jge loope push adc je cwtl jl ja adc inc cltd cmp sbb dec cmp cmp adc in jo in jno aam jmp sub mov dec (bad) or sbb scas rolb std adc nop adc outsb jo popf imul shlb int3 stc or cmpsb subl mov jb imul sahf loopne lcall into xor pop je test pop xchg or rclb dec ret add test dec loope dec mov cmp mov imul lods adc pushf daa adc xchg and rcrb cmp in or insb pop dec hlt mov in scas stc and push adc test push adc cmpsb aas cmp and in pushf adc adc (bad) mov imul ficom outsb jecxz jge lods insl test les cmp mov and (bad) push dec dec inc jno jnp,pn outsb ficom jo push cmp xchg and push scas or xor dec rorb xor adc or enter (bad) jnp adc adc ficom call sub mov sub ds mov and repz sub test dec (bad) repnz pop lods or sbb push xor mov mov enter sbb icebp lret sbb lods mov mov cmp sbb push jne adc push movsl lods adc arpl adc cwtl mov clc pop aaa mov lds xlat mov (bad) xor mov or popa mov add xor mov stos or fcoms in and and sub sbb mov jle stos adc sahf or hlt inc int3 jo psubq (bad) adc pop add push jns xchg or xchg subb dec lds popa sbb nop pushf das jge stos mov dec insb inc adc xchg and xchg out add pop xor sahf lcall adc in (bad) shlb pop out int pop fstenv add push adc adc xlat mov insb leave and (bad) cltd mov dec sub fwait (bad) daa lret cld push (bad) mov and mov add xchg and cmp push jp pop dec adc rclb and pop outsb adc rorl testb cld push mov adc push stos xchg leave push movsl adc and mov xchg stos stc xchg sbb (bad) nop daa sbb adc test shrl aad add adc or push xchg repnz scas les (bad) lea pop (bad) jmp mov (bad) inc cmp add jge addb or dec cmpxchg notl arpl enterw or adc aaa sbb insl or repz dec push push cs adc lea sub sbb into pop push push or mov dec insl push in shlb rorl and push iret cs xchg or adc sahf push and movsl cs xchg pop and (bad) out add mov dec imul jp mov adc lea sub fadd pop in add sbb push xchg or lret cli adc add mov ret mov icebp fildll clc mov adc push mov inc in xchg push adc inc pop cmp lock adc sbb dec sub mov in pop repz inc cmp mov jp icebp jmp into adc setne mov push mov cmp dec add push adc adc sbb (bad) stc scas jg adc mov roll push add ds aaa adc cmp adc push dec (bad) jns adc test sub mov add push adc xchg push jg sub inc adc mov pusha loopne pop xchg push mov sub pop addr16 scas test mov into or es (bad) fcmovu mov push xchg loop jnp xor inc aad fstpt mov xchg push rcrl in push (bad) push jne xchg mov les adc push aaa (bad) dec arpl adc push xchg jg rcll cmp movsb dec clc cli cmp repz (bad) stos or adc or jecxz,pt (bad) sbb adc mov dec jg and adc add jo sbb icebp call das cmp in pop mov pop enter mov sbb inc cmpsl sbbl adc jge ljmp sti xchg mov add and adc repnz xchg jl xchg jns outsb adc xchg (bad) and mov or repz and popa les jno xorb int adc inc xchg sbb add icebp jne repnz push jbe fldenv or jp sub xor call popf outsl inc ret and fcoms mov or push jg jne sbb mov jo roll or xchg popa in sbb sub xchg test cltd out out movsl repz leave sbb adc (bad) out jae outsb hlt rorl std mov or xlat cmp (bad) pop push adc enter imul adc jo mov xor inc cmp adc shl int sbb std cltd jae fisttpll rcrl (bad) inc insl sbb xor (bad) ja fmull pop jbe dec cmp mov add dec scas repz xor xchg lods mov push clc mov rol push ss push mov sub adc dec std push (bad) aaa xchg mov fnsave pop inc mov ret xor or repnz in mov xchg ja add test adc sub jp movsl jle data16 stos push fs add add jno adc lret sbb dec insl ret test add mov ljmp xor inc lods cwtl push sub cmp inc sub enter lods pop push xchg hlt add adc dec std pop pop jno mov sbb cmpsl adc ret xor sbb adc push pop sub xor inc jno adc adc in inc mov fnstcw pop mull ja aad adc sbb or mov loop cmp inc (bad) xor aas jg cld sbb xchg mov rol mov push mov roll cmpsb repz mov test inc jbe sbb (bad) fnstcw sbb mov or jno jp mov mov add int3 into loope sub add mov xor pop or aas sti pop mov adc mov out xor ja jno xor adc jbe test sbb push pop fadds lods pop push mov lods pop test ret jnp outsb subl inc adc pop or lods out fcoml inc clc int3 push popf mov shll add jnp imul or pop mov into jg jl lea stc or shrb add rclb pop xchg xor and aas mov add arpl jns icebp push mov mov aam sbb pop loop adc popf int3 test js cli pop adc mov jp cmp mov cmp sbb in add mov rol lds push push int3 add xor cmp dec push int (bad) mov into mov pand cli or mov rcl dec jns cwtl xor xor xor lds xchg push pop in sbb mov fistp jmp push mov sbb (bad) or sub ds or insl mov aad repnz cld xor ja or cmp fistl stos xor aad cli mov lds adc mov and adc leave fnsave pop into repz push frndint xor in pop adc and push lret adc inc mov mov (bad) icebp repnz push mov cmp inc aad jo test jns repnz adc xchg jno cmpsl xor int adc icebp es dec lcall push fwait adc repz inc enter outsb cmpsl loopne lods dec push sub insl mov movsl inc ds pop add adc (bad) (bad) sub imul jl mov or mov (bad) dec pop cmp mov dec sbb jl add decb adc lahf rclb pop cld popf scas popa fisubrl dec add lea ret mov dec inc popf mov lods pop aas or adc shrb mov dec sbb adc add xor sub nop mov fs xlat stos pop (bad) sub mov add leave int stc pushf lahf adc popa jmp (bad) jb adc ljmp adc push xlat ret gs and inc pop mov mov dec jmp stc adc mov out sti das (bad) daa fs jo adc xor out and fmul pop adcl lea lcall pop adc jbe push data16 mov push in inc mov jb movaps imul add jge cmp mov (bad) lcall (bad) testb sti jle mov add xchg mov adc pop lods dec adc popf mov jne adc lret outsl into (bad) and mov push mov stos and xor sti sarl jge and je sub mov pop hlt dec fstl lret or sbbb xor (bad) adc push in push mov cmpsb sbb mov data16 ljmp xor sub not push add add mov mov mov mov mov mov cmp adc xchg stos pusha out xor jno jmp mov imul pop jae adc decb nop fisttp inc add jmp scas dec flds dec fistpll in push add es addb xor pusha pop cmp popf add fcompl test xor or ss aad cmp xor pop adc jecxz jbe dec xchg adc rorl or jnp pop test stos adc adc inc sub mov mov pop push inc adc clc mov loope cwtl ret adc lods enter (bad) cmp mov push adc cwtl push mov pushf aaa pop add fs ret xor (bad) repz lea arpl shlb pop xor adc popa lahf repz loop or mov fwait sti or mov jne sub loope jno xchg fsub (bad) insb inc inc (bad) inc ret imul sahf shll ds mov mov mov adc adc push cmp test sub push pop adc adc inc rorl push jbe sbb pop insb jo std pop adc or fcoms adc mov jg adc inc or adc fdivl add sbb cmp (bad) inc repz xchg shrl or inc fwait les lahf mov or inc je lea inc push push xchg mov out or das dec dec mov pop cld pop adc adc aam inc adc cmp outsl fcmovb dec adc xor pop flds and xchg mov push loopne push push sub cmp fisttpll icebp adc (bad) sti jmp fisubr and push lods mov push adc pop movsl mov pop in cmp adc xchg out sub test out mov add mov sub adc push mov lods xor nop test sbb lret jge shr mov push data16 dec fcoms jne pop cltd fdivl push or jno popa mov out add dec test add dec mov cmp pusha jp sbb arpl or jno ljmp xchg daa sub cmp insb push adc pop test adc push lods mov int pop insl xor mov mul inc sub outsl in int3 adc sbb xchg jg repz insl push jb fstpt adc dec mul aas leave push std inc mov aad adc test lds mov (bad) push add cmp (bad) xor mov pop jge xor ficom xor xorl push and adc mov arpl sub push mov insb dec adc (bad) jae xchg dec adc shrl das cmp pop xor cli shlb gs stc vprotq add cmp in xor in mov cmp pop pop mov (bad) aas mov push leave das movsb (bad) cwtl (bad) loopne sti lock sbb js mov sub jae repnz imul insb pop stos sbb (bad) sbb add adc adc adc call cs or or outsb nop and ja dec pop test or sbb adc sub push mov xor xchg lds cmc or repnz mov loopne or xor mov sbb cwtl dec call push mov pop hlt repnz ret test adc pop adc xchg adc in mov popa ljmp out arpl xchg mov jp enter test push jae repnz imul adc jecxz sub test adc aaa lods imul cmp shrb adc jl mov mov push sbb adc sbb mov push add insl add adc popa jns out dec out pop popl jno scas rolb xor test push (bad) les (bad) xor dec inc stos pop sub push add (bad) iret sub pop push or (bad) xor or jecxz push ret repnz and mov sbb adc std jnp test fildl xlat adc push in push sahf push lahf dec (bad) xchg mov mov idiv insl adc dec push and lods xchg mov mov (bad) sti sbb mov add cmc mov dec or adc sub aas dec xlat dec adc adc outsl loop mov adc add sbb add mov mov ficom movsl push aas (bad) rcl das out add lds out adc fwait xchg cmp push push mov shrb outsb or cmp lret mov shll mov push inc fucom cli mov dec add mov hlt jne addl or in sbb (bad) jne testl in fcoms xchg cmp out out lods std clc sub scas lea inc out not jbe push in adc shll je int adc movsb jae xlat add shr mov fisttp adc pop mov mov cmp lods push cmpsl jae lcall into ja fdivrl xchg dec xor adc mov adc outsb out adc cmp ja sub jg sbb shr and add inc push add sbb xor push into rorb cld lods mov pop push incl aaa sbb nop cwtl adc aad ficomp pop jecxz adc sub and jbe mov js stos mov loopne mov mov or sbb push xor xor jns leave arpl nop cmp ljmp jecxz enter sub outsl mov lret mov or (bad) movsb lcall inc sahf mov jge xor fcomps repz push add mov push pop xchg rclb cmpsl sbb fidivrl nop inc mov push xor test jmp adc adc mov sti adc dec xor jae cmp cwtl pop mov push inc pop xlat test mov pop add lahf nop or aas adc test pusha adc jb adc les jne cld popa pop sbb dec mov outsb fisubr mov xchg mov (bad) addr16 adc xchg add adc dec scas dec push mov repz ret mov adc lock sub add push xor push shlb mov mov ja mov cltd outsl push adc jmp fisub aaa enter mov inc cmp sti or add add (bad) mov adc daa aas jmp incl cld inc push dec mov ret mov aad fldl icebp pushf test xor mov lahf fwait out lock mov dec dec pop repz dec or fdivrl mov mov lahf repz leave pop mov add loop dec mov repz scas mov xor inc or aad xor dec pop arpl out jns pop std sub les mov movsb test push div fcoml cmpl xor mov or lods dec ret jmp or movsb xchg add or js cmpsb pop mov stc mov jne or pop ror mov dec andb leave fcoml seta cmpsl add mov push xor repnz les push adc cld jne xor xor and mov aad jl insl add in sbb loope popf adc scas add clc mov lret mov pop pop dec repnz mov lret pop repz insl je adc mov lock push push ret push adc xor cmpsb or ret popf lea push mov cmp bnd movsl inc adc push div sub pushf lcall or (bad) (bad) xchg jge adc cmpsl and mov adc daa inc pop or test add rorb dec adc push inc stos adc and inc mov sti adc mov push rcrb sbb mov lret hlt addr16 cmp fld1 or repnz adc dec jge inc cmp sarl in jle push idivb dec aam cmp jne mov test incb (bad) stos inc sub dec sbb dec insb nop loop pop adc out sub imul sbb jo push adc (bad) xchg int adc cmp adc push lods fwait imul xor cltd push nop mov test mov xor push add or pop add icebp out jg fadds sbb sti adc (bad) insb in jno cmp aam jge sub es imul ss xchg and dec repz xchg in fmul rorl frstor pop rcll fsubrl mov sbb (bad) mov cmpsb call mov xlat or adcb jecxz xor adc enter (bad) sbb adc mov loopne sbb adc lock sbb adc dec and or adc ja xor movlps cwtl sbb pushl jns adc push cmp adc pop mov scas cmp pop inc or push adc push inc add shrb sti pop dec out stos lcall in int3 popf (bad) loopne add adc mov xchg jle incb jno push sub cmp xor dec cmp jl in push sahf inc (bad) mov jo into ja cmpsb stc lock daa sbb sub adc mov xor int3 mov add adc adcl inc push cmp jge sbb in gs mov sbbb out xchg sub fwait mov cld sbb push mov rorb fs repz sbb imul das cmpsl rclb rcrb mov enter (bad) add xchg and mov jnp inc mov pop rolb pop dec mov xor add cltd test insb adc sub mov xor popf test and sbb inc (bad) lret adc mov jns mov cld xchg out sbb gs mov inc cmp add dec jae mov repz lods je sti loope and inc pop cld popf lret mov ljmp xchg rorb sub and dec inc repnz gs jg outsb mov loop icebp dec dec jmp ffreep or push (bad) leave add xlat adc imul repz add push rorb adc scas jne push dec mov inc sbb lea sbb adc int fidiv test imul jg adc sti out repz mov ret adc cwtl test mov ds adc push push push adc cmp jbe xchg enter mov push mov repz sub das iret and scas dec cs pushf hlt add mov or pop jmp and pop in or jle push imul pop mov adc jle adc out int xor jne xor outsl or pop inc rorl fisttp xor iret lcall je,pt adc adc cmp scas adc repnz rcrl sbb ficompl mov into (bad) xor mov push adc sub adc and sbb adc lret jmp divl pop mov (bad) das sti jno mov or cltd outsb mov adc mov imul pop or lods movb cmp inc hlt jnp sub sub dec aam cmp xchg dec outsb add xchg std out (bad) stc lds imul sarb pop add xor pop mov adc sub mov xor cmp test fstpl mov sub sbb add pop aad mov mov iret adc add dec stos cwtl jae adc in sub push jns ret orl fs add rcl mov lods scas add sbb mov inc into ds aaa adc push fiadd jae insl popa and fisubr jno push scas xor adc roll mov ret (bad) repz icebp cltd pop jmp cmc mov push loope cmc inc add inc pop je xchg movsl out stos bound enter iret mov fsts pop adc data16 es cmp hlt pop cs xchg and orl jl ljmp pushf lcall adc inc mov sahf stos mov or jle xor mov adc add jno loop scas adc add mov jp sahf dec pop mov xchg pusha mov push adc lgs dec push fdivrs add mov sti stos add jl movb mov inc ljmp sub fidivl inc fwait mov cs cmpsb mov lea adc ds pop mov (bad) mov pop or or ja mov lods sbb pushf (bad) imul mov scas inc xor ret (bad) mov add inc (bad) mov adc adc fs jmp lods xchg add outsl add mov lods dec mov (bad) fsubrl mov adc js (bad) fstps and pop out std int aad orl out adc push mov adc cmp jge pop into (bad) jo mov cmpsl outsb mov repz enter mov inc pop adc lahf imul test (bad) xor (bad) or dec lea push adc ss jb and movsl jbe xchg mov inc adc scas and hlt enter xchg and outsb inc movlps cs and xor adc stos ds cmp (bad) cmpsb xchg mov mov int adc add pusha xor pop mov add jmp push sbb adc addb push or xor je xor adc out in pop cmpsl cmp fs mov jno push out adc add mov sub sbb in push adc aam and cld (bad) hlt add or jnp adc pop jle ss pop dec arpl ret xchg loopne popf popa sti das pop xor and push fisubrl sub (bad) jmp jbe inc sbb xchg hlt adc enter adc fdivl in or cmpsb mov clc and cli mov inc sub ficompl mov je and mov mov test adc movsl mov sbb stos push adc add je call xchg xchg ret add adc jno adc (bad) lret aam xchg inc xchg outsl fistl negb xor fsubrp insb jmp add add mov or xchg rcrl and pop add pop mov es adc in push cli out in je mov sti push push aad and mov scas inc fsts cmp sub pop sbb repnz mov (bad) jmp (bad) test pop push sbb pushf jecxz adc add mov xchg dec push ds push aam dec ljmp inc inc adc neg ret pop adc or inc xor pop adc fidiv inc pop push (bad) push adc shll lds insb adc or add xchg lret loope and mov pop push jb mov push adc frstor rclb and clc repz scas dec lret cmp ret cmpsb jno mov jecxz popf push (bad) js jbe xor daa sub cmp aaa aam push movsl icebp pusha lahf adc in pop (bad) dec ffreep jne (bad) adc cmp adc xchg das in fwait xchg rep mov mulb and mov (bad) pop ja mov dec orb pop xor fistpll mov adc dec adc out push test lret insl and mov pop sbbl sbb adc mov nop std adc insl and test jne add cld pop out or adc lods mov (bad) xor rolb or mov mov add enter add mov adc rcr aas in sahf adc jge inc test dec sub rcl mov imul divl pop pop lods add dec mov mov adc dec pop cmpsl int adc jmp lret or adc lea sarb cmp out xor mov or jb jg sbb xchg repz xlat cmp popf adc out fs call (bad) bound push cmp loop adc decl or inc sbb inc adc or pusha movsl mov sbb nop or loope (bad) mov (bad) adc sahf aam mov sbb push hlt add or ljmp sbb adc mov shrl cltd mov movsl cmp outsb testl xor dec inc (bad) (bad) cmp cs ret jne imul cltd or jo sarl lods push pushf cmp test jl dec xchg in into test fwait adc out dec aaa inc mov in dec xor aam cmovle ret dec shr and movsb cmovp aad aam (bad) cmp sbb push loop pop popa push mov mov adc xor add jae lsl sub adc in add mov and push cmpsl cmp mov aam sub inc pop mov cmp lahf out push sbb bound or aam test mov fcomps aas mov adc mov adc jmp test faddl mov adc loopne fnop sbb push jno inc popa sbb xchg mov or adc pop ret inc adc test add in mov pop cmp xchg jl packuswb and fidivl in out dec fdivs test mov cli scas adc push (bad) cmp adc shr sarb mov mov cmc sbb add push dec das or xchg mov push sub jp pushf mov insl in xchg sbb stos push cmp ss jae xchg sub pop xor inc push outsb adc pop add pop pop in or mov sub adc xchg push push xchg loop mov adc hlt das mov adc cli sbb adc fs adc lret adc (bad) sar adc aaa ret fwait xor cmp aas sahf and or push daa hlt cmp aam inc in adc dec mov mov fistl cmpl add cmp in adc sahf and xor dec mov jg outsl and adc enter call cld (bad) (bad) out leave (bad) lret lcall xchg daa dec outsl je xor jecxz loope inc lock adc push mov or cmpsb sub insb jo adc popa in mov cltd ja xchg (bad) and adc movsl mov fsubrl jne adc cmpl xor jb add ret inc xchg outsl pop (bad) xor dec push sbb adc in and rorl adc mov or xchg (bad) adc add lcall inc adc and adc out lret fwait sarb fidiv (bad) xor dec movsb adc roll dec or mov ret jl enter mov sbb cs repnz cmovs aad adc push repnz jb xchg out ds sub cmp sub shrl inc fcoml jecxz mov add jle xor jae rcll nop iret imul aad adc xor test pop repz dec push jmp sbb xchg nop mov das mov sbb popf pop adc cwtl push pop sbb sbb call adc and cwtl js push adc clc xchg push mov push xchg adc push mov shrl pmuludq inc es outsl (bad) insb fcoms cmpsb cwtl xchg cmc push add and cmpsb scas adc xchg test mov leave sbb test sbb push add mov ror cmp (bad) jae lods lahf sbb and fnstsw cmp cmp popf jae in lea gs (bad) aas mov adc test adc dec jmp hlt (bad) fimul notl xor movsl cmp lret adc orb addl aad fisttpl icebp add mov movsb add mov jmp pop push stc add jo jecxz cs xchg jae fnop leave js mov mov ja adcb cs xchg add (bad) jo mov nop adc lret sbb adc mov xlat enter jbe imul fwait lcall mov adc inc rorl nop popf xchg ret mov adc repz cmpsl inc pop adc inc or adc mov hlt imul das xchg mov push dec sub jp adc js inc pusha in inc inc mov adc cld dec mov mov subl adc cmovle inc inc sbb mov jae xchg scas lret jl sub dec out or inc mov mov adc out (bad) fcomps xlat outsb and adc xor sub adc cmp mov adc icebp xor div dec add fdivrp pop push sub adc (bad) mov ss add divb sarb les or inc or icebp (bad) repz call jbe adc aaa xchg mov pop repz push sub test sbb jo and aad mov adc int3 cwtl mov adc mov lods xchg movsb cmpxchg mov xchg or xor insb out outsl adc mov adc lock push inc out repz or xchg movsl mov adc or fwait popf into pop (bad) mov pop or (bad) mov xor pop pop movsb clc add cmp sub add aaa adc xor scas call das adc dec fisubrl mov fdivrs (bad) aaa mov fistpl cs inc push adc test aam fwait cmpsl and jge and ret push daa sbb mov stc jecxz (bad) pushf adc xor iret arpl or cmpsl insb data16 fstpt jl lods add sub pop adc mov fcoms sub sub dec (bad) fisttpll test pusha dec sar adc aam in ret adc gs jmp xchg cmp inc mov cmp in sti ljmp (bad) adc pop outsb lds out adc inc xor cmp mov stos into outsl int3 es pop adc aam adc adc fbstp push loop,pn jns jmp in cmpl andl mov cmp pop (bad) mov mov sub arpl dec icebp mov or mov or mov adc mov and (bad) mov ja lea sbb (bad) daa into das inc push (bad) shrb lea (bad) mov adc add bound jns sarb push sbb js fstl or sbb lahf repz test or xlat cmc test mov lret call jbe (bad) xor dec xchg add add add lods adc call stos mov iret ror popf jmp push (bad) hlt (bad) (bad) pop adc sub in add fnstenv jbe (bad) outsb rorb add xor mov pop cmovp lds adc ss adc jo push insb sub fsubrs xlat lods jbe dec inc pop push adc cmpsl xchg mov imul mov (bad) sarb fwait lds lret stos repz scas and adc or lret loope sbb out or (bad) pop popf push leave jg adc lea ds and in hlt cmp or inc jle adc mov lahf adc jns pushf adc fwait cmp movsb mov adc or adcb jmp ljmp fildll mov adc sub cmp adc jb pop adc push add or divps scas inc test rcrb ss add inc inc xchg xchg jns fild xor hlt add test mov dec cmp das adc or adc out jae mov cmp loopne pop fucomip ja mov push add cmpsb int3 ds xor adc jle enter dec cli out popa pop mov test mov fidivrl dec ficomp mov (bad) xchg or or shlb dec or push adc lea ret xchg sarl in pushf testl fimul adc push push ud1 and into out (bad) mov lret push enter mov adc adc adc test pop pop mov in xchg push (bad) mov (bad) sbb jne fs or mov cmp (bad) adc pushf sbb adc imul pop (bad) repnz pop loop xor out add mov stos pop in lret dec repnz imul mov or test add lock push mov dec in jae fldl fwait xchg dec cmp push loopne or das cmpsb adc jle loope fstl shrl mov inc dec jno (bad) std fwait mov roll lods mov (bad) (bad) int3 popf mov arpl mov inc xor (bad) outsb loopne xchg pop add in sbb adc jnp push dec push add insb inc push (bad) outsl add or (bad) mov mov test ds mov sub inc sbbl (bad) icebp enter daa sbb add xchg (bad) dec xor sbb add pop clc mov sub add add adc nop ficoml aaa add pop adc xor inc and (bad) (bad) and add mov mov adc mov movsb adc sub dec sarb xor jg aaa dec arpl lods or adc cmp (bad) fistpll jle cmc enter in (bad) shl imulb cmp cmpsl adc gs or xchg out lea adc pop jbe adc call stc fist xchg cmpsl loope and mov adc test call jle adc rorl (bad) push adc dec push adc jbe adc xchg xor mov fndisi(8087 pop adc add rorb xchg (bad) out mov pop outsb arpl mov pop test test push jg xor push mov or pop mov xor pusha into xchg push fcoms outsl adc aad int out std repz scas mov pop jno mov je add das in rorl negl lret adc mov dec pop mov push xlat repz cmpsb mov mov in dec popl adc dec cmc jns push daa adc lahf or add scas imul xlat adc hlt mov (bad) push adcl xchg movsb cltd cmp fist adc lcall cmc ja push adc inc ljmp jl ds push scas pop add and mov pushf faddl mov xorl mov iret add adc fs adc divb and nop cld xor or enter (bad) lcall or inc jmp mov (bad) xadd and leave icebp fdivl js enter mov sbb mov inc adc rcrb mov aas std pushf test fdivrl dec in sahf and lods push out lock mov adc pop pop mov jae lods rolb push mov loop lea dec mov sbb pop es adc push mov icebp xchg int3 adc push pop sarl in shll in push and (bad) fs ret sbb ficompl data16 mov xor pop add dec xchg adc data16 adc rcrl test inc loopne dec dec (bad) (bad) sbb adc and mov pop in mov pop cmp xchg jecxz in inc mov mov dec mov loop (bad) adc hlt cmpsl les addl jne mov je sbb (bad) xchg nop sbb mov mov shll mov loop cmp aaa adc inc lds mov aas mov sbb jne adc inc and bound push xor test das repz lods mov adc mov mov lds sub jmp loopne cmp pop in jp xor shrb shrb push flds or dec xor stos or mov add lds ljmp adc xchg nop in and xchg loop les or pop or cld pushf aaa (bad) ficom pusha cvtps2pd mov push into out hlt pop dec (bad) adc es lret push mov lock xchg or sbb cltd (bad) lret adc xchg ret aaa clc and xor idiv scas add into adc xchg xchg pusha jno mov xor sub adc pop xchg and adcl adc es or push subl cmpsl hlt adc fcmovb xor push adc dec or adc ror mov dec ss adc sbb push lahf in ret repnz rcl pop jecxz stc or out mov dec (bad) jmp or adc aaa adc ja push jne mov (bad) cs mov mov leave or xlat xchg test xchg push and and push xchg fs lods sub cmp incl adc lds loop push lahf mov mov sbb (bad) cld adc addr16 adc std cmc and rclb mov sbb lods ja mov cmp test xchg jae jp adc fild mov xlat loop mov jo (bad) adc testl sbb lahf (bad) pop int mov xor jnp cmp cmpsb adc lea sub jne scas pop lods adc adc cld std adc dec imul adc test xchg fwait (bad) jecxz decl and pop cmc rorb fistpl ljmp into test ret movsl lcall sbb mov add jbe cmc mov add jmp adc ret xor jno adc aas in movsb mov in ja sbb outsl push pop adc adc (bad) xor mov lcall dec jnp sbb fwait add rcl (bad) xor ret imul and inc xchg inc ror add adc in mov lds xor add adc aad imul add dec sub push xor adc push jnp push jbe mov (bad) or lods movsl enter pop mov add movsb add adc xchg fcmovnbe adc pop and sub in ret cmp imul pop pop adc (bad) repz adc add test jmp add xchg cmp lcall adc sahf mov shlb lods movsb rolb inc or xlat fs push add push cmp arpl dec js into xchg lock xor fimul add sahf je rolb add and leave sbb mov adc pop dec jge mov in or (bad) xchg sbb hlt cli pop sarl popa daa imul fsubs fldt dec add imul add mov int push movsb jge push dec mov pushf add call (bad) jbe cmp scas add mov pop bnd mov pop aas xchg inc data16 (bad) sub push pop or aas pop adc and insb adc pop scas xor insl cmp sub and scas lret dec test dec sub jnp pop inc std ljmp ret xlat loope xor popa mov into cltd pop xchg stos cmp lods adc mov xor inc aas nop repz imul fwait dec aaa insl jns ret xlat xchg int3 jl outsl repz pop sub cmpsb sbb mov or iret (bad) rcll cld fiadd (bad) lock pop int3 xchg sub cli cmp xchg inc adc adc xor jnp push bound and sbb cli adc pop push fwait aad cmp jbe pushf nop or mov in adc aas add rep aaa adc sti dec sub xchg adc mov shl (bad) loop cltd ss paddusb add sbb nop iret mov mov sub pop and adc or lret inc leave lds push mov dec and inc (bad) mov mov lods mov out popf cli mov mov repnz sbbl pop or fsub dec repz jle xchg bound add inc jns jb xchg mov data16 movsl xor stos mov adc (bad) jae pop or adc push clc jno push aas adc push stos idivl fadds dec or pop out push or (bad) adc xchg loopne out cmp adc scas fs and out mov div fdivp imul nop stos cmp sub lret repz shl or mov ljmp stc adc test in mov movsl xor or test xor andl mov fstl mov adc call icebp adc dec fnstsw push and mov adc xor jle fadds jnp push and adc adc lock mov add xor jecxz add mov xchg inc aad jecxz hlt jp jle ficoml or shrb scas push int3 outsb adc testl adc je cmp sub es repz cmp dec (bad) mov mov sbb in lods insb jne and add xor mov push dec int xlat fdivrl push and aam mov mov jmp int3 int mov ret adc dec test adc mov insl repnz lcall test sbb adc paddb xor adc push or xor lds mul lods nop stos or adc cmpsb adc and (bad) fwait sbb adc sbb notb and fimull jmp adc add jge fsub adc xor daa pushf adc test jg cld enter mov addl adc lahf xor adc mov int adc les stc aam adc push push mov mov cmpsl std movb je adc inc arpl adc push in adc inc pop jno push cmp mov aad dec mov movsl adc mov xor test pop add cli pop mov pushf mov push adc push (bad) (bad) jb movsl outsl push inc sbb ljmp les xchg sbb jge outsb fstl sbb adc mov mov cld pop js rorl mov mov (bad) in jp daa adc xchg aam repz incb or xchg xor (bad) dec add jle mov push enter and js mov inc sub jnp popa push mov xor cli xchg aaa mov push (bad) and adc sbb jno pop push incl hlt inc movsl sub add mov mov mov inc int3 pop mov cmpsl adc fisubl fist jecxz sbb or sti int paddw jg fisubrl xchg xchg sub sbb mov xchg adc daa push test adc jmp adc inc orb add mov pop adc loop lret mov adc push mov popf es sahf mov adc imul add mov loope sarl dec fwait adc jbe loopne dec xor movsl out ficom jge push in pop pop pop or dec hlt adc adc mov adc pusha jo popa inc stos add aam scas mov adc mov aaa xchg ret test adc mov jnp pop adc in add push sub movsl or jp loop xorb sbb and add mov orl test in leave dec cmpsb push adc mov adc dec test push fstl pop mov std addl jb out dec data16 repz xchg sub aam es adc lods or adc lcall adc xor enter cltd cmc cmpsl xor mov adc pop ss mov js adc xchg ljmp cltd add add cld push or test repz outsl mov xchg pop sti add jmp mov test aam fidivrl stc jno cs sbb mov imul cld jl outsl out fcoms sbb adc decb add call fcmovbe sub inc scas jo add repz jb cmc fidivl insb fisttpll inc or pop pop aaa xrelease adc inc rorb fmuls loopne xor push mov fwait mov and cs dec imul mov add pop jo push dec out or push out cmp adc xchg repz push adc outsb jmp xchg popf sub out mov data16 dec cli and mov fcoml pop fisubr rorb xchg xchg pushf mov in call cmp sub test pop cmpsl mov mov adc sbb adc jg push enter not mov mov push fimul adc dec lods xorl or push cli mov shlb (bad) lds repz aas mov pop adc ljmp shrb mov aad data16 repz shrb pop mov adc cmp adc sbb cmp mov mov inc cwtl xlat (bad) sbb test sbb sub mov sarb cmp je repz test pop movl sub inc pop push push sbb adc sar push mov fisttpll pop ds jnp repnz roll cld adc mov ret push loopne shrl xor int sbb ljmp (bad) adc inc mov mov scas ja xor cmp and xlat pop fwait mov add lret pop hlt sub sbb stc and xor fcompl add ret lods arpl jmp xchg mov jnp ret mov cmovg xor add sbb mov xchg mov and testl or movsl jg adc cmpsb adc mov lds movaps xor mov mov mov push push fiadd imul sub push adc hlt sbb outsb enter scas lea jmp push fnsave inc out add xchg pop (bad) sbb insb andl pop ret sbb xchg mov xor adc cld arpl adc (bad) mov and and mov xor mov (bad) rorb cltd testb or out mov sbb push pop sub cmpsb fcmovne (bad) pop call mov test mov (bad) adc push pop adc sub mov out outsb jns adc je repz add dec repz les cld jbe inc xchg fisub ret popf sub mov and adc push pop adc aad dec xor sub mov ret adc (bad) mov add std mov lock arpl push popf stos sahf fs lret adc xor sbb loope inc mov xor adc xchg xchg inc add int3 adc push stos enter add dec js jbe pop loopne adc inc push out je bound sbb dec add test adc loop add lods or jle scas notb xchg and jbe add or pop jmp dec push adcl repnz das mov push dec adc leave mov push loop out mov adc adc adc jno jmp mov sti push or push jnp lea cld lret notb nop push les repz jg shrl mov out mov cmpsl std inc inc pop adc pop adcb sbb cs xchg imul mov lods out pop push push adc adc adc push cmp adc cmp add jne or lea adc push mov sub adc or jecxz xchg adc outsl xor jnp inc xchg std fcmovb cwtl mov sbb loopne push loopne inc imul push or pusha sbb in (bad) repnz mov mov lret fdiv add adc outsl in ret mov addr16 push adc pop es clc xchg mov dec adc add mov adc or sbb repz adc das jb or xchg adc test repnz (bad) jo movsb push jl adc cwtl fsubs or movlps in jb loop xchg push adc xlat cltd sbb int cld jnp lods rcl inc adc stos adc test aaa ret (bad) push pop pand adc mov push adc cli fimul lcall adc (bad) push inc dec cmp xchg sub lds inc out adc mov jmp call push push adc dec mov jo insl jb lds std jp adc lods lahf xchg scas mov outsb insb sbb shrb rorl push shlb cmp cmp pop sbb sbb mov adc jge outsl push out adc sbb cmp mov cmp adc push enter xchg sub and push or xchg inc mov sbb cmp jne jge popa jmp js push mov lds push jno gs xchg loope loopne adc xor push (bad) leave xor dec mov push ss rcl scas sbb sbb adc adc add sub jle pop push test ret pop adc test aaa inc adc movsb jno mov lret adc add and xor push test (bad) pcmpeqw es add jmp dec inc sub cltd jo add mov jae push add es mov or jbe out push jns insb adc notb fwait push cwtl mov ret sbb rcrb out aaa mov shl adc dec ds dec sbb das cmp or adc sub dec push inc xor fcompl out pop leave adc push mov push inc addr16 mov ljmp das adc cmp rcll cmp scas je xor dec repz movsb mov cmpb jmp repz (bad) xchg pop pop adc jle mov xchg repnz sub int3 xor mov adc std pop sub out or pop ljmp mov xchg fwait fs lods verw adc fistp or daa mov sbb decl or mov das xchg scas mov cmp lods or popf inc jge adc xchg mov mov out or xor xor aas or dec push xchg (bad) sbb xlat loopne cmpsb cld xchg xchg ljmp pushf imul adc gs push stos inc (bad) lods adc jmp mov push mov lcall push rorb jno decl je outsb test clc adc jle and or mov insb add add xor and adc inc and xchg or mov (bad) xor iret mov mov adc adc push scas decl mov adc sahf sbb pushf or dec iret repz out xor aas adc xchg dec pop into lahf xor jecxz jle jnp push add jb adc and stos adc ds xlat push (bad) push adc lret iret (bad) rcll mov repz xchg mov daa dec and sbbb sub add fadd mov leave std lret inc lcall and popa dec stos loop mov jae mov adc xchg adc shrb or xchg and dec cs and out rorb cmp repz dec (bad) push dec sbb cli aas adc (bad) fucomi inc sub sahf sbb mov mov adc in push bound sarb adc mov jnp mov inc add jle js add lret (bad) xlat mov pop adc cli test xor mov jle adc pop lock in add dec mov pop or xchg adc mov mov lods fcomip push push fdivl insl leave jb bound push mov lock std push imul push test add mov xchg and or fs (bad) adc mov xor in lea pop iret mov cli pop push sti or inc adc out pop xchg iret insl std pop adc rcr movsl and dec repz repnz hlt xor out or std insb mov inc xlat or xchg adc ficompl cmpsl add adc scas out and or adc aad pusha adc cmp pop adc lock ret mov xor sub (bad) test sub je pusha mov jne,pn popf into mov xchg in adc int3 push xchg inc adc std push sub pop les inc inc psadbw hlt sti nop fs das lret cld mov xor xor inc push stc leave xchg in inc adc mov pop jg test scas mov adc mov mov clc fisttpll loopne adc sbb and (bad) pusha sahf adc or pop mov hlt adc das (bad) mov adc adc mov clc mov push cmp stc pop push adc mull repz inc add stos enter adc (bad) sbb sti xor lahf movb clc pop adc dec sub (bad) jmp sti add in test adc adc jg int3 lods sbb mov (bad) and adc dec (bad) andl or and aad scas popl leave cmp pop scas ljmp loopne add xorb lcall inc adc or in fmuls adc fcomi sub imul inc lea adc icebp scas cld addr16 mov stos ja mov cmc ljmp aam int3 adc lods lret push cmpsb pushf (bad) adc out mov adc sbb adcl dec push pop popf mov push aas dec or or xchg push in adc cld add in aaa mov push lock xchg sbb cmpsl cli adc iret lcall mov add dec fdivl add and mov ljmp xchg mov mov les aaa clc sbb jo dec lea lods out cmpsl mov jl xor cs push xor cltd sbb lea adc mov call cmpsb insb fcmovbe cmp dec adc or xor mov in mov pop cld jg or mov stc fcomp loopne xchg ficom push aaa xorb lods fmull adc stc push adc sub add lea or fcoml add cltd loop xor adc jne mov imul aad mov fimul push push movsb in nop mov adc mov cmp xchg aaa push adc sub dec jg adc lock pop leave imul mov fist in shll insl xor jne sub xor (bad) mov pushf mov xchg into (bad) es xchg adc in outsb mov dec pop sbb jmp push pusha cmp cmpsl adc bound mov ja xor pop lds aam add push sub and aaa (bad) adc cmp inc jb jge cmpsl loope xor repnz adc lods mov lds dec pushf adc cmp jmp jnp push test shrb sub sti pop data16 dec mov xchg push adc and or mov xchg inc outsl jne push adc lret call jg mov fsubr les enter mov jmp adc or bound dec sub pop adc lds test mov mov cmpsl cmp imul adc ret sub movsb daa push mov hlt jo int sarb aad pop insb push inc arpl mov dec xor pop sbb push cmp mov les stos xor sbb aas xchg and push sub xor lock jb jg cmp int3 sub sub les mov add out jecxz sarb sub imull mov jo fs (bad) adc mov cltd push mov inc mov rorb icebp loope lret shrb imul rcr cmp popa idivl pop decb lea (bad) mov jne adc xchg hlt nop lret add cmp inc scas cmc lret jmp xchg adc movsl js shll sbb clc sahf pop cld push adc jp negb stc sbb sbb jno jnp sbbl add sbb pop mov adc pop mov in xchg add sub push subl out pop or int (bad) adc push cltd ljmp dec fnstsw mov std sbb lret mov gs push push sbb xchg mov jecxz lods pusha adc mov subl sbb xchg sbb lcall fs mov lock cmp adc lds mov dec adc mov popf or xor (bad) xchg push mov cmp dec jno mov pop dec sub scas out jne fistl nop imul int sbb in adc sbb popf and les push inc sub lds jbe ds adc or jb or mov hlt dec movsb pop cmp pop daa add mov cmc insb mov jl sti (bad) xor mov test jmp xor sbb pop adc jl jle imul adc add shr xchg rcr in pop cmc push insb aam and sub push test repz cs bound scas adc nop sub xor fistpll xor pop mov or adcl and or push sub mov mov (bad) adc pop xchg and fldenv adc fdivrl or xor mov into pushf jbe push dec fcom pusha xchg pop sub xor mov ds or ss adc jmp pop (bad) push ljmp adc pop gs inc (bad) mov (bad) and sbb push sbb scas in pcmpgtd repz xchg dec lret icebp das pop xlat dec dec adc addl xchg and dec fstl pushf xor xor outsl incl jb mov cmc mov mov ficoml push int lcall cmp push fdiv mov xchg xchg std hlt add xor mov inc push xor adc stc int3 pop mov pop dec je shl stos outsl cwtl jmp and cmp push cli inc test push push pop jmp cmp repz sbb pop or mov sbb cmpsl nop jae pop lret push adc outsb xor fs pop bound call or and or xor int3 jae fidivr call sbb or sti clc xor cmc xchg into or add (bad) lock repz push pop fmuls sbb in shll (bad) and adc les adc insb test xchg sarb aad or sti mov loope in scas and cmp add lret mov and loope adc jmp inc les repnz inc scas xchg fcomi pop lods hlt into (bad) insb mov pop jae or sbbl repnz push ja inc adc adc jns cmpsb adc lock sahf and inc mov pop push pop jo mov ja add push adc jns (bad) in cltd xor mov clc inc and fist sti rcrb (bad) rolb or push add push leave sbb jp sbb out repz cmp sbb xchg inc mov pop (bad) ja push fbld imul adc push addl dec ja rcl or xor fs cli dec call mov popf pop mov dec inc (bad) into mov fiaddl pushf mov pop sbb cmp jno pop mov jno das push sbb add lea incb pushf or mov (bad) xor (bad) sub cwtl ljmp xorl push adc dec pop add enter and mov add push jmp leave loop mov dec (bad) mov mov lock push sbb stc js jae mov jno fs jmp mov mov xlat fstps (bad) mov lock jnp jmp mov mov imul pushf xchg xchg ss in insl fs jb add mov adc dec (bad) sarb and add push ljmp adc cmpb pop scas adc int push std lret cmpsb int3 jo mov sbb loop mov sbb dec jmp jg adc xor mov (bad) mov push dec jp adc pop stos sub push cmp sar adc pop mov pop xor (bad) cs lret in int3 adc mov or aaa arpl adc imul lods mov es adc add insl adcl mov xchg aad enter adc inc xchg es pop add outsl push mov repz mov xchg and loop adc shrl out xor push mov pop in pushf adc clc (bad) ljmp adc cs add repz or sti and dec lds hlt cmp push adc push in adc pop dec push pop test outsl repz mov push pinsrw (bad) dec pop (bad) mov pop jno mov imul stos pop idivl mov push push punpcklbw jecxz jle (bad) repnz sub and add mov fsubrs fwait push dec addr16 and imul insl adc mov cmpsb pop adc sarb ds jmp repz cld es add ljmp add jae test bound (bad) mov sbb stos push jns mov or xchg cmp or out lcall jl adc aad adc pop rcrb jbe jno jne addr16 xchg js jae out add push mov mov aam lss mov or push add (bad) nop sbb cld sti movsb lahf mov adc fidivl scas adc (bad) shrb dec adc push dec in xchg push test fistl adc es pushf cli testl jbe shrb sbb mov pop lds adc jle fwait adc loope mov jecxz mov test cwtl adc push pop lret fwait sarb mov mov dec cwtl adc mov sbb cld or mov es inc jae or jo out addr16 adc leave push sbb div xor adc mov cmc outsl and adc call mov xchg inc and pop or mov or loop xorb add pop mov jbe pop and xchg push in lods inc stc cmp jnp loope pop addr16 mov daa pop push mov mov add aad leave adc (bad) lock or adc xor mov xchg push iret lcall cwtl test add push sbb adc push fldenv out xor into (bad) push xlat pusha lock adc mov mov repz inc push fisttpl sbb dec xor sarl inc adc sbb shrb sbb push out jnp push ret sbb lea (bad) test fdivrs sarl pop popa mov adc loopne out repz or fcom stos push pop adc lahf and pop shl push push mov aad lods mov outsl mov jle push adc inc inc mov rcrl mov mov mov or fmulp push push movsl adc add fs mov fnsave push les int rcr adc pop add push xchg adc gs mov or int3 fstl pop dec push sub and ret xor pop xchg jl movsl (bad) cmp pop imul or cltd insb and ret cmp adc cld xor out lods adc insl jle or or push xor mov fcomip or jge out movsb fs inc jecxz inc mov cli push out sbb out ljmp cltd xchg sbb pop jb int adc mov xchg adc jne adc xor adc pop clc mov mov sbb mov nop adc or lcall xor leave sbb xchg and outsb dec pop scas das and pop xchg add push loope ja in test push push daa adc cld aad sub (bad) mov jecxz pop push mov jmp mov cltd adc push and inc les push and jp dec or mov lods in sub push repz out dec dec orl inc es adc jbe cmc adc mov aad xor adc xor loopne mov mov or mov jge add mov adc (bad) out or pop push jne arpl (bad) repz jecxz in or insb imul pop fld cmp push fiaddl lods mov jae movsb rol inc cmp or rcrl loop adc jne inc lret dec stos cmpsl imul (bad) adc sub xor (bad) or mov add pop push adc add pusha push adc or mov mov cmp xlat push inc scas adc push jecxz xchg ss mov xor pop mov jne repz pusha sub mov add jae xchg add movl inc push jge in jo aam les sbb repz pushl inc xchg clts adc cmpsl into and loopne mov pusha inc adc adc add je loopne mull cwtl aad nop mov or mov jo insl adc shrl adc mov cmp cwtl mov aam xchg jecxz push ljmp sbb cs js int3 inc push mov cmp nop fisubl adc ret adc inc decl xchg or aaa pop inc fisttpll das and aas mov (bad) icebp stc stos sti in mov std cmp out jns into push mov scas add cwtl jecxz or inc xchg imul add repz sahf adc jnp or out sbb enter jne xor mov iret mov add outsl imul sbb push out fcom mov add out cltd sti aad adc sarl cli (bad) arpl lock les test clc mov xchg or nop inc sbb add lea fs add mov adc mov imul add jnp fstps mov mov in sbb pop xchg ljmp add mov ret iret xchg jnp push cmp dec xchg leave push notl (bad) cld imul mov movsb mov adc rcrb dec inc add nop xchg fnsave sub push mov popl jb mov (bad) je stos call mov dec xor out pop pop mov inc out mov (bad) xor movsb das xchg repz mul mov bound jb xlat adc test xor (bad) sbb nop mov or add stos test pop push push repz xchg into (bad) cmc (bad) push sub mov mov dec (bad) mov xor jb loope testl cmc daa add repz mov imul sub cmc xchg rorb aas out jmp lahf pop pop fisttp shll inc fs xchg scas add (bad) cmp inc adc cmp add js test or cmp jp mov jo loop sbb mov jmp xchg iret pop xor inc mov shlb pushf int3 repz push lahf jmp or rcll or jle adc push sub push mov ret xchg push mov xor xchg add xchg lcall jb or mov cld insb mov sti jge sub fs imul ja aam adc test mov jecxz fs inc cmp or adc adc mov cli ljmp xorl (bad) adc mov enter and mov inc mov fs xchg mov adc nop/reserved sbb fisttp cli in pop out adc or lock adc ds adc adc mov arpl adc subps cmp pusha lcall bound cmp sbb cmp mov ljmp jo adc loopne fcmovbe mov sbb and ret test jns popf inc adc flds pop sbb push add outsl jno mov xchg xchg int3 pop adc subl push adc jmp jno and xor mov test mov cmpsb add les dec mov mov inc fwait mov pop mov fstpl loopne fdivrs orb popf ja xor pop movsl cltd add and fidivrl sub rolb fs movsb fstl jp xor (bad) or or repz lea adc ljmp adc lods fstl adc sar inc push movsl mov xor ds imul push in aam xchg sub xlat add adc roll xor stc outsl adc sub cltd mov jge adc xchg push sti lret jne adc rcrl shl adc xchg mov xchg sub add cmp lds xchg adc or adc inc lret xor in stc mov jl pop leave or (bad) adc sbb gs or push cmc mov pop adc lahf mov aas add push inc mov cmp stc mov sbb xchg repz call adc out mov lods push push pop xor nopl jne lahf add dec ja (bad) imul inc (bad) cmp adc ret mov adc inc jno jmp jl cli popa push push inc or cmp adc fnstcw xor jp shrl sahf fsts adc sarl adc in outsb add pop psubq icebp mov adc mov movsl pop cmp and sbb gs cwtl mov (bad) adc mov dec sbb or push xor pop arpl adc mov sub mov les pop xchg push xlat arpl (bad) (bad) out mov (bad) in xor or inc add mov xchg int3 lds push adc jne cli fimul outsb adc aaa pusha lock jl mov imul push mov insb adc fs lret xor push (bad) jmp pop jecxz adc into mov jge iret aad jnp clc jp cmc inc (bad) xor sub mov mov nop pop div sbb mov jecxz sbb sub out adc push ja adc xor mov je mov xor or repnz jbe xchg pushf adcl add mov repz into and ja int3 das hlt adc pop aas adc jb xor fstps inc add jge,pt iret lahf popf jne push out lock das sub adc mov hlt adc mov adc mov xor mov sti dec xchg mov leave adc ljmp adc sub sbb pop push push cmp lods (bad) arpl inc mov or pop push stc jmp mov repz jae jmp test nop stos inc dec push insb and push pop mov adc mov aad adc jmp mov sahf hlt xchg adc jo adc test sar jns rcl push sub icebp or adc (bad) add out test dec cmc mov cmpb cmpl push mov (bad) dec scas adc add xchg lret inc push push xchg add jmp adc fwait xor push mov jae aad mov xchg mov nop pop pop rolb leave add adc jne mov inc pop dec pop adc push and cmp adc scas cmpsl fsubrl scas sbb sbb std adc cmp adc es pop xor leave or jmp adc dec mov add jb xor in cli pop mov daa rcrl ficoml mov int daa dec (bad) notb mov inc push dec cmp push outsl mov adc dec adc cmp cmp push add (bad) add nop or mov mov sbb loopne push adc jae (bad) stos mov jmp push ljmp push gs pushf shrd adc add pusha adc imul lea xor or sbb adc mov adc cli in mov hlt xchg xor xor fninit lods push mov fsubrs add rcll mov test sub adc and pop adc mov mov scas xchg sbb vmovss adc pop fdivrl jne fstl xlat ljmp cwtl sub lret adc xchg jo into xchg aaa test adc jge sub dec imul jb test xchg push inc push mov scas xor xchg push jns lds add hlt pop xchg and pop and mov push mov fimul dec jle or call decl repz fnop aam arpl dec ret sub pop xor adc adc mov mov notl into xchg adc data16 gs fidiv clc in fstps dec insb pushf or scas fiaddl jp dec call repnz lds add cltd inc xor outsb and adc test dec sbb dec or xor xchg sbb sub addb mov repz pop mov mov add push push xor push stos rorl (bad) or outsl loop stos mov xchg add sbb xchg aam fist jl mov adc ret out outsl mov or push or inc mov insl int pop or sub cwtl imul sti (bad) scas add repnz and mov ret mov cwtl sbb pop cli xchg lea loop mov rcrl sbb nop neg sti adc fstp in int3 xor adc dec (bad) pop pop inc notb incb mov sbb mov pop push xchg aaa lea pop xor mov ret push nop xor and adc mov add adc enter mov ds (bad) sub ficomp adc mov adc (bad) mov mov inc adc test lods push pop adc sub and into and inc push sbb adc sbb xor nop popa lret lret in lea inc ljmp sub faddl cmpsb lds (bad) fldenv add and jg xor sub xor xchg pop bound shrl dec inc ss cmp adc mov dec adc jp jmp xchg adc scas push mov lret loope ret jb cmp loop xchg mov lea pusha in fs adc pop stos mov insl stc (bad) jmp sti loope adc imul cmp and int push or pop adc loop mov jl adc add inc daa nop pusha scas xor orl inc (bad) sub (bad) and or and mov mul pop dec adc xor iret lret xchg push mov xchg mov inc push lock add (bad) mov sub loop lods mov jecxz push enter add add cmp fadd (bad) gs adc and or adc pop jg add push adc cltd dec cs aas mov push nopl into repnz mov pop adc push mov or loope adc or mov lock jne mov nop sti mov loopne sbb cmpsl jmp je adc popa push dec mov out daa repz inc stos (bad) pushf cmpsl ljmp hlt inc clc decl lds jl jg into adc push pop jp cmp sub dec pop shrl rclb xor xor sahf aas cmpl mov imul mov add repz jp or pusha mov inc aam into push je sti adc int3 movsl and mov jnp arpl retw ljmp loopne out adc mov inc mov aas (bad) pushl sahf lods pop mov cmpsl dec adc sbb adc mov push mov ja sub or lahf rcr inc cli adc cld and sub pop repz inc xor lds into push mov dec jmp jnp outsb stc out loopne jle jp adc adc push cmpsl fimul cmp test mov push cli add jp sub mov dec ret icebp mov and push cld adc or sub xchg movsb (bad) add ss xor adc push mov adc js jb outsl fisub aad mov ret adc sbb (bad) mov fwait outsb fs pop enter adc cmp adc inc adc mov (bad) sbb jmp stc or repz rorb add lcall adc mov sub dec fbstp bound int3 faddl xchg jb les mov lds loopne adc dec adc fstl pop dec not add (bad) out test adc mov inc push ljmpw push xor adc pop push cmpl inc mov insb adc pop xchg push test add popf mov push sbb cmp frstor adc insl iret aas jns or mov and xor mov xchg lods adc addl xchg jecxz mov ret adc ror out or sbb add clc adc andl adc or adc bound xor or out mov imul (bad) adc cmp cld stc push loop or (bad) jno cmp or dec xchg icebp and fbstp out mov sahf imul or out jge inc pop aas (bad) aam push jmp push adc jne movsb or dec adc mov pop (bad) sarb adc test cmp je inc pop mov in add shr ds adc lret mov notl pop (bad) pop add imul adc jp inc int adc hlt adc add mov push rolb xchg push (bad) push adc add jg jnp pop adc xor fdivrp cmc int3 adc lret add inc adc pop and (bad) jo adc repz ljmp in addr16 and adc negb jno mov mov ss pop dec in push and (bad) jno add jl (bad) pop adc cs mov adc pop mov hlt push int pop xchg dec in pop (bad) lods adc aas fistl inc or popa sti adc sub cltd bound imul out jecxz into sub ret mov inc xor mov push das outsl adc or xchg adc xor cmpsb xchg dec mov mov add stos sub lret test or adc cmc ret mov jmp sahf in mov jl (bad) mov pop mov push test adc jo insl pushf or pop repz decl into push das or iret mov ss out add or inc sbb (bad) mov xor xlat cs xor unpckhps cmp xchg cmc cmpsl sbb stos sbb xor adc rclb inc insb hlt push iret dec (bad) cmc xchg inc mov mov or (bad) bound out lcall pop adc jb mov add adc xchg stos sub test adc test mov nop add and push or mov sbb dec or mov jecxz sbb (bad) adc cli xchg ljmp into repz sbb pop pop outsl push repz mov mov mov cmp mov mov fsubrs or int3 ret dec mov sbb sahf mov adc jbe insb mov rcll pop shrl pop xchg dec mov push mov das ss sub out mov pop sbb bound dec lods mov clc jmp adc test sbb inc cmp cmpsb push (bad) dec adc sbb fsubrs ds jl in xchg cwtl mov cs mov jns int dec and mov mov mov sub or jl push inc loopne fxch adc sub adc cwtl xchg es push sub adc enter mov adc orl push adc hlt addr16 xor push adc jnp scas jmp xor into pushf add add hlt mov mov xor or lcall (bad) icebp pop xchg add mov sub stos xchg aam cli fcoms add adc pop mov (bad) add imul pop inc pop jg lea adc (bad) pop cmp adc fidivrl jle ss push pop mov clc and in iret xor lret pop iret adc lods mov sub jg xor lock lret sbb mov imul sarl es push sbb mov into xor movsb in xchg out ss test test inc adc (bad) or xchg mov mov add popf adc int3 mov imul or mov adc int ds je outsl xor enter or mov out jns mov adc mov dec xor movsb xor adc xchg stos lret leave mov pop out mov repz lods lock insl jecxz sbb adc in adc cmp jnp jp jle out mov mov movsb cld outsb out das (bad) xor mov (bad) repnz cmp lods movsl hlt scas call push aam xchg sbb lea dec jg aad adc orb adc jo call xor cmpl add icebp lea xor loop jl notl clc xchg cmp loope sub adc jae jmp adc adc popa lret mov aas xlat jnp pop mov or adc shr mov adc and cmp test cwtl cmp adc dec outsb and je mov roll cmp sti aad rcl nop popf sti jns jnp mov add adc bound cmc rol push rclb sarb push pop jge jns mov dec push xorl in dec popa outsl xor das or mov mov pushf in mov mov adc add jbe iret lods pop or inc rorb sub mov mov and push add ss jmp test clc movb or mov adc mov inc sub js inc mov jecxz adc mov adc adc scas nop adc imul cmc cmp (bad) or and ljmp sahf adc popa fldl xchg gs or push xlat nop or icebp (bad) mov cmp das dec add aas cmpsl add xor sti (bad) (bad) dec sbb es adc add xor call js sub sti mov lret repnz push xor jns dec lcall mov xchg cmp adc sub xchg dec arpl xor mov adc xchg dec adc mov sub je add out sbb or addr16 (bad) rcl cmpsb xor or inc mov enter aas test cmp mov mov adc cli mov icebp adc mov xchg stc cmp jo or adc and inc arpl xchg insl lds adc cwtl (bad) outsl inc jno hlt adc mov xchg jp adc and roll stos push bound jnp ja adc in cltd in and mov stos push loopne mov fs stos leave adc test movsl jns and mov sarb loop loop add cmc repz lods dec (bad) inc lea dec pushf jae lahf addr16 adc clc pop addr16 call bound xor xlat and (bad) mov insl pushf add in mov adc lods and pop inc sahf push adc push or repnz mov or push pop add adc in push das inc call iret dec adc addb cmpsb inc adc push ja adc inc lock or lds jnp,pt adc stc adc mov adc pop lea cld push repz mov gs dec mov xlat repnz es adc mov inc call push add add out sub notl cmp movsb xchg (bad) adc push xor das push mov out insb std rclb dec aaa (bad) add jmp in or fwait cmpsl lahf inc mov mov in out movsb imul xor iret loop mov daa mov mov mov adc xchg jmp addl adc sub sahf out faddl adc out insb xorl out pop mov dec test ja dec lahf aam cmp push sbb pop neg xchg vmread mov mov lods adc jl push pop dec gs adc icebp dec bound pop cmpsb jmp push sti push lds dec adc (bad) clc inc hlt test shr mov (bad) xchg call lods inc adc jle mov jnp xor dec test popf push daa inc dec mov lret dec or sub mov push adc std lods xchg lds jns lret push inc fcomi fimul mov jl (bad) icebp adc push ret adc cld mov pop pop add xchg cmp adc loope das popa bound mov adc js insl dec sar adc cmpsl pop mov add adc ss xor and (bad) fcmovnb mov std out sub cwtl lret or outsb xchg inc adc loope daa dec dec cmp push pushf adc (bad) mov ja sbb mov js mov (bad) fist repz rclb mov xor cmp sti icebp fs nop cmp push mov jno dec or fdivrs add xor scas push ret cmpsl (bad) push sahf inc sarb cli out adc xor lock cld mov mov loop add loopne inc or mov and cs or ljmp pop xor data16 loopne adc repnz enter cmpsl jmp adc dec int3 adc (bad) popa aas adc sahf lods push repz lock in adc mov and dec adc pop inc adc jne pushf outsb and adc add push xchg adc inc fsubrl xchg sub adc inc cmp int (bad) push enter in xchg adc and mov pop paddd pop cmpl cmpsl or sbb add adc add jns pusha jbe sbb fdivr pop je adc iret lret cs cmp sbb decl inc je mov outsl jmp xchg lods sbb test jne jo mov xor mov adc adc jl out sub or lahf not das sbb adc movsb ljmp sub mov push fistp cmp (bad) adc sbb addr16 add outsl push adc and dec adc fistpll test inc mov insl push jle pop popa mov scas adc (bad) dec ret mov sub jne mov sti pop repz mov adc xor fcoml sti out mov pop leave dec adc cmp and mov dec adc dec mov push dec aad mov xor fidivr xor in jno,pn pop add xchg dec or and lock pop les cmp sarl into inc pop sub mov stos adc push xchg gs jl and or mov add mov sub pop adc jmp xlat adc cmpsb outsl addl (bad) imul popf adc xor jge incb mov sbb xchg movsl mov and xor mov adc cmp adc iret aad mov inc dec mov int out sbb xchg dec pop xor (bad) mov stos jg adc push xchg cmp (bad) mov xchg sbb or lds aad gs lods (bad) jmp mov inc mov cmp test and lds lret adc cmp into divb xor adc jecxz arpl stos mov add cmc arpl adc popl out jg xor xchg aad addl push pop scas or outsl jge loope ljmp jle clc je mov adc push jmp stos mov ficoml mov mov in outsl (bad) adc loope sub cltd or pop dec mov inc xor jns ror adc out fisubr outsb nop adc addr16 stc adc fist adc xor rorb (bad) mov scas lcall xchg cmp adc ret pop aaa mov adc ficompl lods inc add out insb stos add adc shl cmpsl adc mov daa sbb jnp xor pop insl (bad) sbb clc mov cwtl outsb or add push sbb adc lret mov mov add adc (bad) xchg sahf mov stos inc sub hlt adc insl je fsubr add fistl xchg push popa inc mov cmc ljmp jne clc bound push popf xchg adc arpl sbb push minps rorb pop aaa (bad) adc dec jbe adc lds scas cmp stos stos pop decl das xor inc adc or adc ffreep inc mov cmpsl adc mov popf mov cmp dec adc jno jmp leave outsl push push and mov mov mov (bad) jbe repnz inc (bad) out mov jge jle mov (bad) xlat xor mov test and xchg dec add push xchg add and adc outsl sti inc fsubr xchg mov cld stc mov mov in dec movsb xchg xlat pop clc pop mov andl ds adc cli std ret cmp into lret inc push cmp out mov outsl xchg mov sbb rcrb loopne in out aas jg mov mov repnz fsubs xor or hlt jno pop sbb icebp adc push xchg fcmovnb jb sub mov mov jge xor arpl in fidiv std or adc sub xor mov nop inc hlt test adc enter repnz cmpb mov out ret pop (bad) or xchg test sahf mov adc scas mov mov xor (bad) sti hlt ficom and mov dec mov cs popf icebp or lcall adc push in lods orl mov dec xor push push (bad) shlb add (bad) mov xor fildl add int3 rcl sahf icebp stc adc nop ficomp push sub mov pushf inc adc cmp cmp inc xlat mov and int3 mov push mov bound pusha cwtl push adc jnp adc sbb jno sbbl pop (bad) loop push (bad) out inc xchg adc inc cld push adc je ljmp psraw adc push push mov fwait repnz popa call cmp mov dec adc aam cmp outsl sahf test stc mov push rcll test sub jg adc std ljmp inc (bad) and mov inc jl add pop adc data16 lock jo les hlt push xchg stc mov jbe jle pop cld sbb adc fadds fs pop dec inc adc mov cli jo cmp pop or sbb out lods mov add loope repz mov repz stos push push (bad) std popf pop adc or xchg push int xor or push xchg (bad) jno and sub xchg xchg jge gs or push mov loopne push cli push xchg sbb adc outsb shlb repz dec adc jmp mov jno mov push add cmp adc in popf adc mov int cmp scas or (bad) ds rcrl adc lret cmpsb push lock imul fdivs or mov out arpl mov push pop or es adc cmp (bad) push outsl mov sub gs adcl push test dec loope mov adc pop aam sbbl adc jae fucomp repz and jg out cmpl pop insb repnz mov sub imul aam test outsl push cmp sbbl ljmp xor sub push xorb jbe or ret cmp mov mov lods add sub addr16 push cmp adc mov andb out adc sub lods repz bswap icebp popf lret or ss add and adc dec inc in not xchg adc push xchg xor adc push adc sub adc ret push orl loope sub xchg adc dec fcmovne lahf mov mov xlat sbb adc rcrl aad xchg jns push repz decl mov das enter imul adc pop mov adc (bad) outsb jge gs adc fcomi adcl insb sub pop inc je adc pop hlt pop out mov xor test cmp rep enter inc (bad) je mov xchg xor fs adc add inc mov out mov scas cmc fstpl lods das jl push pop sub dec (bad) mov imul dec mov push inc inc xor xor or mov aas or pop test and outsb adc fldenv xor mov mov mov ljmp add inc rolb mov dec add xchg mov test push pop stc pop adcl or sub cld push (bad) and mov ja pop mov or test mov xchg cmp adc inc arpl xchg sbb cltd sub nop mov movsb pop das or add xchg (bad) cmpsl in jmp popa push pop les mov ret sahf adc loop sbb mov pushf lea cmpsb addr16 mov les ret rclb test pop sbb and xchg test mov cmp scas sti imul ja imul sar repz mov fdivrp mov (bad) adc xchg bound jl adc arpl adc outsb mov inc jle repz (bad) push ja pop pop jecxz adc clc aam or xchg nop jl fildl pop inc sub lea arpl cmc (bad) jno pop iret adc js mulb mov (bad) sbb dec cmp int3 imul add add sbb icebp and mov push adc ficom xor cmp jp adc mov cmp adc imul push js ficomp or push jle,pt mov icebp adc pop push repz sbb and sbb mov hlt adc sub dec jbe pop push jae mov jmp adc hlt sub js add dec sahf add jmp adc fisubr leave xor push sti fisttpll adc scas addl inc mov lea xchg adc pop adc pop bound xchg les sub mov pop mov fincstp out int3 cmp into rcll sub in psllq cwtl jns test mov adc jmp inc sub xchg adc cmp mov fcoml xor mov pop mov bound rolb pop dec sub (bad) sub push mov nop adc arpl mov lods mov mov add scas mov mov fldcw adc xlat jl rclb sti xchg or dec (bad) mov jl adc ja push test pushf xor jmp cltd js push xor mov ds jecxz adc and add jae jne mov pushf mov inc test ja xor (bad) xchg movsb imull add sbb xchg movsl mov push pop mov or lret jg xorl cmpsb je scas and outsl nop adc jb mov mov roll or pop dec scas pop adc add and roll mov sbb cli out or adc cmp or jo test jmp iret xchg pop adc push cltd dec (bad) fldcw adc (bad) repnz xchg andl dec adc mov mov sub shlb mov adc lea mov inc sbb dec xchg imul add xor mov adc jmp popa fptan jecxz out jnp loope cld iret pop (bad) and adc push (bad) out flds (bad) stos xchg xor sub paddw inc mov mov adc stc ret xchg adc xor xor test popa or (bad) or sarb lods or jge adc sbb adc (bad) leave cmp daa mov sbb adc stos xor xor jmp leave stos sbb pop movsl xlat and push out das or sbbb adc mov mov arpl and fcoms (bad) cltd (bad) lahf or or add fdivrl loopne push mov iret inc out rcrb mov add sub rcll hlt jmp xor das fist sbb or leave adc ss push adc and dec adc mov pop mov out icebp pop (bad) pushf xor pop adc fsubr adc incl xchg xchg pop testl (bad) xchg push adc inc popa std push inc cmp mov fstpt lods cmpl or sub push xchg sub add mov clc dec adc lods pop les lock jmp push mov lret nop mov add pop adc imul adc lods mulb mov or insl mov add push andb or (bad) outsb mov repz sbb dec enter jmp pop mov pusha std adc rcll xor (bad) push shlb sub rolb and pop sub mov add enter movsb fs cli (bad) fimull sbb pop adc sbb ret lcall and push sbb jbe sbb cmp loopne adc add mov cmp rcrb cmpsl mov mov (bad) jb scas popf in ror add sub call mov or adc dec push fwait popf iret jl je imul xor xchg adc cs in adc xlat rclb fstl jno sbb adc lock or sub test push mov jl jbe ficoml test jno cmp xor repz mov pop (bad) xlat adc (bad) ss sub push repnz jmp pop add mov stos mov xor out mov add lcall cmp jg cmp xchg adc jne fdivs divl sbb and (bad) lds adc fmulp lock push test ret fdivr nop loop and sub dec mov push or or cs (bad) xor mov sbb adc jge ss in out adc vmread add jno xchg pop or cmc mov mov in test repz adc cmp xor insb adc adcl gs adc popa pop shl scas std mov adc lock add mov xchg fsubl ret stos lahf inc pop mov repz inc (bad) std dec mov mov xchg adc jecxz xchg daa cmc imul test mov mov jne push fldt adc inc push or lods insb and ret add inc movsl call in rcrl mull adc xchg popa adc lret test call test (bad) aam dec adc subl sbb jmp lods (bad) test les aaa mov jnp adc mov sahf ret adc adc arpl sbb cltd out mov adc loop cli add push sahf enter leave cmp add fsub aam inc clc adc lret and adc aaa repnz out push dec je pop in negl xlat or lret js inc or mov adc mov mov xchg movd inc mulps vmovss push sbb clc outsl in mov sub adc lea or data16 dec mov rolb and sbb cmpsb pop or push inc push add js repz sbb aad sbb cmp dec mov int3 mov inc pop leave rcrb loop xor jmp in loope jno pop ja adc sti (bad) xor out mov scas ret adc add adc fwait leave xor xchg mov push mov movsl sbbb addr16 dec or sbb in cwtl jmp mov pop push movsl sbb stc (bad) cmp xor xor pop xor int3 push adc addr16 stos mov sub aam outsb (bad) mov imul dec out pop mov xchg aam lret xchg movlps call aad and fcoml aaa leave sub cmp cld cli and test cmpsb fisubl jne jnp cmc daa or cmp adc idivl pop popf aas xor fwait js dec xor testb ss shlb adc xor adc jg sub adc mov mov or dec aas add adc ljmp adc add mov xchg fwait pop and jp xor cmp and xchg lret outsl (bad) push adc in xor xchg cs fwait lret adc add xor aad or sub les or mov fiadd push cmp int jb jle lcall arpl sahf hlt or aas cli scas sub lret pop add hlt lock mov cmc adc insl scas dec xor pop rcl inc pop adc icebp sbb nop push nop in xor arpl mov js xlat dec jmp es pop (bad) mov or in jle adc (bad) lret mov add jno aad push sti outsb push sbb push sahf mov notb pop jg pop push andl movsl adc xor fsubp (bad) imul loop fisttpl inc sbb or pop decb push repz inc inc or jnp imul femms jp adc mov inc adc mov jno adc jg and and faddl adc push je add adc out movsb inc or in add rolb jae das adc or xchg xchg movlps std jnp dec mov or and xlat imul das push jp lret adc cmp pop jno fldcw fcomps stos pop cmp mov out add (bad) scas pop cmp in inc movsb adc jae lahf add dec adc sar xchg je adc jmp push jno aas lds adc mov cmpsb movsl mov mov and inc sbb dec adc jl mov test adcb add test and mov pop clc mov test mov push dec out pop cmovae nop gs add xor ja jnp sub jecxz adc pop mov adc xchg outsb jmp push lret adc jg adc pop lods clc lcall sbb push fisttpll xlat pop xor ss add mov loop js insb mov in pop add jp jb insl lret repz iret jmp lea cmp lods push sub xor imul leave and push or sub cmpsl nop pop pop fstps adc push sub je popa int3 push inc stos les lods inc imul sbb inc adc pop sbb addr16 out orl lret mov sbb jmp lea outsb mov inc frstor movsb shrb rcr lret xor sbb adc jge jle cmc out dec adc lahf rcrb hlt mov test icebp rorb jl mov pop push cmp xor sbb (bad) or sbb stos adc adc fwait adc inc testb jne add xchg sahf adc aad in shlb mov adc int3 pop add pop mov icebp and xor mov mov cli repnz pop add lcall mov cmp scas mov stos fwait in out jno adc pop fs inc push push ja cltd popf in mov aas jno les lahf adc arpl sahf add adc inc mov xchg rorb gs je jmp int pushf adc mov not repz in mov hlt cmp pop mov daa xchg repz push sbb dec xor pop mov and fwait dec adcl adc dec pop loopne notl mov add cld adc mov sbb dec add aad adc sahf lea dec cmp cwtl out jg mov (bad) xchg in pop dec pop adc insb inc sbb jecxz nopl add scas lret dec push pop shrb test add aam je xchg stos int adc fstl out popf sbb sbb mov call fsubl pop test pop pop into arpl or push out dec inc mov xchg inc into repz sub sub (bad) clc lds add cmp int3 mov cs mov pop sub xchg jg cltd xchg mov adc dec testb xor dec push insl aad or repz push (bad) in hlt mov adc jbe fcompl adc sahf push addr16 cmpsl adc mov push add (bad) fs adc mov inc outsb lods repz and cmpsb (bad) fnop adc jp mov push adc jne xor mov mov mov das cltd cmp mov push sub repz add dec adc cmp lea cmpsb gs cmp or (bad) adc and cltd add out adc andl adc dec mov mov mov out (bad) je push movsb push pop adc (bad) dec adc jbe lea adc call stos rcll inc add mov dec movsl adc adc out jo mov pop in inc test fdivs in cvtps2pi or sbb push sub adc ret add gs adc jmp stos test push clc icebp cmp and or popa or lret sub cltd push xchg mov or push or fsubrs (bad) add pushf sti flds out push jp adc xchg mov dec sbb arpl stos jns iret add bnd ror or rorb ss jno mov call push mov mov push repnz adc cltd or mov or adc mov repz into pop lods fmuls jnp mov and popa adc pop or adc pop and adc inc pushf call jno (bad) xchg or and mov lret push mov jbe dec or stos es push mov dec popf jno pop cmp popa lea shlb mov mov mov add insb pop mov (bad) repz scas mov enter push adc out in loopne rcll fisub int adc (bad) xchg pusha dec mov mov sbb sarb pcmpeqb fsub addl (bad) lret in pop add dec rclb mov mov mov push dec ret jne adc stos scas rcll jbe sti or jnp std jmp fbstp int mov sbb xchg imul push das shrl lea scas rclb leave adc js jle dec cwtl setp outsb es xchg sub test push sub fstl scas fcomi xchg loop stos lods aam push adc cltd push cmc jae mov sar adc fcmovu cwtl adc addl push jb jbe lock sbb mov add adc mov mov dec inc jge movlps sahf out in lret adc into lea pop aam mov or andb imul jg xchg es dec out adc cmpsb js mov adc xor test aas dec adc mov in adc push mov adc jbe popa fcomp adc mov jg push mov mov add scas adc stos push insb lcall nop dec mov adc lret call repz or fstpt lret test mov adc fisubrl fsubrs add mov cmp (bad) mov adc stos mov (bad) adc scas cmp sbb mov xchg cld movsl push aaa xchg jl adc mov dec adc sbb add mov adc popf lahf in cltd adc rcr push call dec mov cltd test stc sti fmuls std xchg jne stos adc xchg das adc sbb fdivs pop add aad repz pushf pop push lret or xchg adc ret clc lret scas jmp mov dec call lock jmp or loopne scas movsb adc adc popa xor add jb push pop stos adc fisttpl adcl js jno jge sbb add stos loop test les adc lret imul mov and push jmp adc aas and mov cmp dec sbb mov sbb adc jecxz fwait inc or pop jle pop add int3 imul pop fidivl add imul mov xchg mov mov and inc psllq sub test mov or repz repz es stos ljmp out xlat jp inc adc cltd and add pop test adc adc (bad) and adc pop es and lods adc jle dec test dec loop pop mov mov outsl (bad) sub mov inc andnps gs lea pop adc inc dec xor (bad) adc cmp ret push sbb mov xchg lahf scas repz aad imul ret mov adc xchg or jno loope xchg mov xchg ljmp adc rcr ret push cltd nop lods jp jmp or jle adc jg add jge jl or mov adc push cmp push stos dec adc xchg repz inc push call or addr16 fnstsw inc repz lcall cmpsb xor jmp pusha movsb bound fisubl shr lods mov nop adc mov iret stos push jne (bad) adc sbb adc stc xchg push aaa test mov adc xor sbb repz jno (bad) bound insb iret push or rolb cmp aas std mov dec xor sbbl jno pop push shl enter lea in daa fstps push adc ja call (bad) jge adc ret adc stc leave sub push adc fdivs gs lret sbb adc jg sbb shrb je add pop jmp pop adc out and add enter fistl adc push repnz (bad) sbb pop mov hlt imul scas xor cmp sub mov nop push pop mov (bad) jle adc dec xor clc push push (bad) int3 adc sub inc adc std pop pusha das mov xor je dec sbb (bad) outsb adc sbb jmp repz enter xchg pusha (bad) dec into add ljmp mov mov das fist sbb cmp bnd mov fsqrt ljmp nop jae adc into insb inc adc js clc mov adc lahf or add jecxz das dec or add mov scas adc rcll pop dec out add test cltd sahf push jmp or int adc data16 mov ret mov adc pusha adc lods or jae cmpsl cwtl jne xchg (bad) mov loope les popf pop fiadd xchg sub inc mov push inc and sub xor fdivl daa mov ja dec jo out outsl push adc xchg repnz fldenv leave mov je jmp mov or xor jl test insl dec xlat es jae cld mov pop sbb sahf adc test iret sub jne insl sub je or or popa inc (bad) mov loope (bad) or pop data16 dec adc add lods popa test call jmp push mov bnd shlb lods adc in dec sarl add pop int mov xchg stos fist das pop or add test rolb sub ret add ret and pop inc stos jne rclb aas out fwait or xchg adc mov std mov or (bad) ja cmpsl fstpt loope cltd dec repnz xor dec gs mov and call sti adc xchg mov lods stos cltd adc sarb fucom adcl pop jge repz nop add ror dec movsl insl inc adc push ljmp fnsave add mov cmp lahf inc pop push or andl out push pop cwtl mov mov call xchg xor mov je sahf xor dec out lret xchg stc adc pop or cmp repnz inc inc xchg adc cmp lcall pushl clc repz dec push jecxz sub adc and dec subb repnz scas mov enter repz jbe (bad) stc ret lock mov std adc sarl push and adc pop sub sahf in dec mov js stos add sub dec push inc and lods pushf pop les mov fcoml rcll jmp mov xchg pop mov int decl pop cmp adc out rcrl push jb jp loopne repnz inc xor jg xor or int3 adc cmp insl repz pop push das jno jp nop cmp pop roll loopne (bad) xchg jl (bad) jbe adc xor stos mov adc jo sbb repz mov fdivs lahf mov test sub inc imul mov and lret and movb ret out in cmp or arpl cmc cmpsl ret mov mov cli repz add jecxz or rol fwait and xor stos or rcl inc add sti pop sti and fs push jno lods jmp aad and jge sbb fistl pop addl je or pushf mov in add or xchg jae dec push adc jp mov pop xor aas sub mov fs or xor mov pop in and leave icebp sub sub mov movsb ret dec jl stos shlb icebp outsb in (bad) mov sub js push and pop xchg sub sbb add mov jmp or mov repz clc int icebp xchg std jb dec outsl xchg stos and inc dec adc mov rcl outsl push adc mov adc in pop cs dec out ds xchg mov pop add push xlat xchg mov or mov movsb dec js inc repz or fstl pop sbb push pop (bad) scas lds jg xchg loope incb (bad) jmp cld push insl mov adc xchg lock xor js inc dec adc sahf jecxz rorb xchg push mov sub xor (bad) icebp push jecxz sbb mov adc leave mov pop xchg mov dec ja adc mov mov lahf out insl in adc pop (bad) sbb adc pop js lods popa xor mov scas or sbb ret sub xor jle mov mov popa jns inc out cltd and in (bad) lock sbb and or sub dec aaa jne cmp mov adc jnp lods outsb and bound in dec xor xchg xchg jmp and lcall mov out sbb mov or call and xor dec mov add in mov jb call xorb dec xchg add xor (bad) sahf adc shll cmp xchg mov lcall lea or pop dec adc mov scas dec popf xchg outsb mov mov ret sbb or xor push push ds adc sbb ljmp aas idivb shrl adc inc incb pop pop cmpsb test ss xor aaa cld in mov pop jb adc xor ljmp or adc xor (bad) (bad) adc les adc je jb and fwait lds cwtl mov lea mov mov sbb ret or add loopne (bad) iret inc mov mov adc xlat sbb adc push xchg or mov mov sbb repz imul inc xor xchg lods sahf adc (bad) movsb cltd insl dec or stos mov insb mov dec sub int cmpsb add mov dec test add addr16 lods and std mov mov repz ficoml mov xor jmp cmp ret cmpsl cmp mov push push xor jno xchg lods dec mov jmp js add into arpl les clc xchg jb or lahf decb fwait sahf aad adc lret cld scas push shll dec adc iret out xchg rep mov sub xor adc test cmpsl insb adc jmp repnz push xchg cli push cmp dec jnp movsb (bad) test adc in test sbb mov push xchg cltd inc mov or pop jge xchg stc pop adc and jb cmpsb pop lods jmp leave mov add mov outsl xor cltd or cmpsl repz sbb es push in jl icebp cld jmp inc sbb add into pop adc sbb xchg sub (bad) or in adc cmp jg xchg mov aam jo pop xor push mov aad or adc cmp or adc mov es push lods (bad) inc decl stc and movsl sbb cltd fsubrs test js adc daa stos lea xchg inc adc xor int3 ror pop xor dec inc adc cwtl inc jecxz cmp mov mov fnstenv xchg adcb sub data16 mov lods xor mov xchg icebp pop (bad) sbb adc add out stc sbb jecxz ret outsb or adc sbb adc insl cli fisub mov (bad) pop in arpl adc testb mov add mov cmpsl and mov lock xchg mov in or cli rclb adc lret cltd scas sbb cmc dec iret adc pusha cld fdivs imul pusha mov mov dec cmpsb aaa mov jo hlt cmp jge xchg out pop add repz adc sbb mov jle insl pop xor nop push adc add lcall add out dec ss (bad) ja push mov push cmc in xor stos xlat xchg xor ret mov dec push cmpsb in or cmp repz clc push inc jecxz insl mov enter daa jne sub out insb jp mov arpl add or jmp fst mov add repz clc xchg xor rcrb mov jns add (bad) mov mov int3 or xorb xor mov cmp enter push pop mov (bad) cmp fsts sub sub jns adc xchg xchg mov adc fs outsb sub pop hlt or add mov mov lds sub adc stc ret inc nop add push loopne xchg mov xor add lea cmp add ficoml jmp aaa out stos gs jno mov or push daa xor adc icebp xchg inc adc gs nop out imul xor or adc or add aam (bad) xor mov mov nop mov xchg sti push jb push cltd or ds push adc test add jne into in mov jbe or mov mov loopne cltd or or cmpsb imul pop sbb and inc rclb pop sbb and cmp pop fcmovbe mov lret adc sub mov imul insb push arpl sti out xor add xor adc out aad arpl dec adc sub inc int3 fistpll scas mov push jno pop adc popa gs adc push mov xchg dec adc test loope mov inc mov or adc add (bad) adc dec dec outsb ja jno push ficoml aas sbb repz add inc sbb pop pop and and adc fwait out outsl mov xor fsubr mov adc xchg pop leave ds or sbb push mov lret shlb pop ss leave adc bound ffree inc cld in push movb push sub sub lcall and in xlat stos sbb leave jmp icebp fistpl iret push lea rcl int or loopne xor pop adc add cmp ds mov rclb cwtl jg adc dec test jecxz mov in out xchg test lea ja js adc lcall add xchg jmp mov scas and add imull or icebp fild adc adc mov clc adc adc mov xor push in addr16 push add les mov sti pop mov imul inc in std cmp add movsb je pop add dec cli movsl cmp xchg jl testl sbb adc stos test adc jl pushf in xor xchg out sahf adc sbb xor mov or add fldcw adc aam test mov sub ds dec or dec and (bad) icebp adc cs mov loope das lret inc xchg adc cmpsb jns cmp sbb insl mov scas lock xor (bad) ss and faddl sti dec push xchg push adc hlt cmp adc loopne popa mov (bad) xor jecxz jge push insl jae call pop rcrb or je adc or adc (bad) or jecxz or adc adc fnsave adc cmp inc cmp je nop (bad) out adc enter stc jae sbb add lds sub lcall adc (bad) jl and (bad) std enter push push int adc push rorl popf fst xlat in stos faddl sub inc into adc mov cld add mov rcrl inc mov lea scas rcrl out adc sbbl jl cmp stos je push push push xor rorb or xor ja ds outsb repz stc cmc out push or or inc lds and nop sbb dec jecxz loopne mov out (bad) adc xor add mov mov push sub sbb fmuls pop mov xchg out adc int lret xor lods inc add sti fs movsb mov pop cwtl mov xor xchg dec sbb jecxz xor cld (bad) adc fs adc loopne fdivp lods or repnz in repnz add cmpsb add (bad) push sub jge adc in mov ljmp xchg cmp mov sarb (bad) stc or mov loop scas push cld loope fcomi sbb andl sub out leave movsl repz adc fnsave mov lods adc xorb push fistpl data16 xchg adc icebp sbb add adc rcr jo mov aad (bad) or dec adc jne imul adc adc (bad) in cwtl adc scas and adc add mov push fcoms sbb adc jnp pop sbb mov pushf fisub aam lods addr16 add mov inc cld adc sub mov adc dec and add adc aas pop js in outsl dec ror out (bad) popa aam repnz push ss jecxz push mov nop push xchg adc dec adc jns adc fsubs lods adc dec mov inc outsl aas mov jno adc cmc ljmp or xchg adc scas push ljmp fucompp popa adc adc inc daa sub fs imul adc jp (bad) repz je mov push dec or xor addl repnz pop cmp inc lock push je adc jbe cmp mov in mov outsb lahf xor dec aad jo jl scas in mov sub mov or xchg cmpsl add data16 fcoms stc aam sbb iret pop aaa inc scas push rolb test rcr add add sbb cmpsb pushf popa roll or xor lds in sbb repnz shrb cwtl (bad) jno cmp mov call rclb subl jmp add adc inc das decb adc mov into notl loop xchg push fs nop ja cltd in pop data16 cwtl lcall mov lahf or xchg repz push push insl add negl insl and and lahf jb cmp pop xor scas inc popf add adc lcall pop mov pop shll xchg jae fwait lods fstl in scas outsl adc faddl adc push mov sar inc in lock cmpsl dec xor fstpl add mov mov sbb inc popf adc mov dec fcomps cmpsb das push add dec and mov xor adc mov iret (bad) adc mov out lcall hlt repz fcoms add and and or xchg sbb xor dec inc fs add sbb movsl xchg and mov adc jne pop push pop xlat int xchg popf rcrl jns adc adc iret std sub sbb mov mov mov mov push insb hlt adc into inc pop adc xchg lods mov fcomi cltd cs sahf mov (bad) xor movsl and or popa test pop subl test or sbb (bad) outsl inc and scas adc cmovg aas push rcll inc into vmovq lock enter sarb movsb adc inc pushf inc xchg mov sub ret fidivl pop sbb adc and and nop xlat fwait dec lret adc in fcomp adc sbb adc adcl jo orl mov sti mov add clc (bad) hlt cmp sbb rcr adc outsl cli inc adc mov arpl adc mov aas dec daa data16 sbb and xchg in cs mov ficoml clc push inc adc out xchg add ret push addr16 dec (bad) mov out cltd out mov loop mov adc test pop cmpsb jecxz adc adc add adc test mov mov fidiv out rcrl adc js sub in and mov fimull dec dec adc nop cmp data16 jmp jae clc adc xor mov sbb mov fildl sahf fmull lods mov xchg das fmull mov mulb xor xlat add push push pushf xchg mov and xchg cmovne lcall mov inc mov stc jno loope out (bad) push cmp mov sbb out clc push xor mov adc cmc or push xchg mov je stc jo ss lock mov outsb adc inc xlat sbb cli sub les aam adc push lcall inc nop xlat int xor mov lods xor dec arpl enter fdivrl adc jmp (bad) xor and jnp addr16 sahf adc aam inc push idivl xor jb mov ficoml mov leave lret stos adc adc push lods mov ret add adc add daa jnp or imul sub cli sti sub mov lcall stos sub mov jg adc cmc or xor or iret adc adc fxch je add aaa add loope xor adc and push mov pop adc (bad) sahf pop or inc iret push adc sub inc (bad) dec jns daa out in mov nop dec mov adcb xor adc mov cmpsb call (bad) cmp jno jecxz pop (bad) sub pop popa dec jge loop add les movsb adc in int insl std fwait pop adc or adc adc sbbl mov mov sbb mov add adc stos adc adc mov inc xlat lds shlb adc hlt adc dec mov scas xor mov add add lock repz push or adc es out sub adc xchg adc cmp jmp dec cmp (bad) fsts add sub push lods iret nop push push jg inc mov imul stos repz dec js or pop pop arpl test add cli int3 mov imul pop xor add xchg aam fs and cs imul je adc (bad) popf push movsl out xor mov lods add scas or push mov dec test (bad) loopne mov xor out das cvtpi2ps notl out into test xor lret arpl sbb addr16 jle xchg jge adc add sub dec sbb stos (bad) cmpsl adc xor mov ljmp pop jmp pop pop sbb adc mov fist sbb pop adc out fdivs pop jecxz adcb xchg and data16 adc test adc aaa aam jle hlt adc adc cmp icebp push in xchg inc outsb jb mov pop xor sub test arpl (bad) outsl push sub in xchg mov adc add adc (bad) xor test or out cmp clc adc iret or inc sti (bad) test xchg xchg mov aad dec dec pop xor loop pop out in and inc adc cmpsl xor sbb jno add mov mov mov daa push aas push push push ret or sbb mov xchg lods add aam vmovlpd sub (bad) jle mov call sbb je mov sbb in xchg fsubl xor outsl push sbb cltd es test ret push pusha or mov addr16 mov adc repnz into push adc outsl cltd cmpb lea leave stos xchg adc pushf jbe jne inc xchg adc das psubusb dec mov adc add jecxz adc mov stc js adc or arpl repz xor loop incb fsts mov push push xlat jmp and cmp sbb outsl or es cmc pop mov lea movsb push aam das add es (bad) leave adc jb mov pop push cs cmp mov cmp nop or dec addr16 sub mov jb jno add add pop adc push cltd std dec xor xor loop or test and add adc addl adc aas and add push sub jp pop movsl cld and rolb sbb pop and out jb sbb repnz imul adc fs arpl or repz ja add popf or mov xchg pop cmp adc out inc adc adc pusha add sub push or jae adc and dec test out jmp or sbb data16 aas and jne mov adc fdivrp iret imul aas (bad) dec mov and pop push adc mov ret and adc mov dec adc sbb jbe cmp ret in and xor cmc dec fmull add adc lods (bad) cmp adc mov jnp cmp pop (bad) adc ficompl imul test xchg adc cmp lds lret repz clc or mov (bad) nop (bad) repz jg stos inc adc lcall repz test (bad) xor mov mov mov pop cmp adc push and jae inc adc es lahf push outsl (bad) mov push pop cmp cld adc jne pushf jle add cwtl pop inc adc jbe dec outsl xor loop jb pop lahf adc sbb das jnp rorb int (bad) ja lcall push repz out outsl je lock inc cmp ret rcl adc jp cmp xchg scas sub adc cs mov in dec stos inc push repz mov xchg iret sub outsl mov fwait in (bad) adc sub sub mov loopne xor rclb push fdivr or adc adc out xor inc (bad) cmp cmc roll jmp jno mov daa adc rcll adc or jne cmp adc mov insb scas ja shrl ret fisubrl out rclb lea or sbbl roll mov daa ljmp fdivrs adc sub das adc and inc mov call mov pop push mov sbb and addl lds jno or sbb and mov cmp fsubr imul push ljmp mov mov mov insl xchg mov cmpsb sub cmp adc test jl and repnz (bad) popf mov adc cmp adc fildll push adc mov dec test push pop inc push mov xor test and movsl and sbb push orl pop lock mov jae jle sbb or scas mov push (bad) mov iret pop decl in loopne mov jp sub repz aas push add mov xchg mov sub fldl jo test jg adc imul stc (bad) fbstp int3 in adc xchg decl lock (bad) xchg aad xor cmp adc push pop das (bad) dec adc (bad) loop sub stos aas push xchg adc dec fbstp pop loop cmp rorl popf sbb sbb cltd fcoml xchg sbb adc inc mov and adc xchg outsb cmc cs mov adc loop xor cltd popf and and mov mov (bad) adc cmpb xor sbb dec adc pop divb aas mov stos mov loope push fsts (bad) fiadd mov sarb add adc mov cmp into lods fstpt jb xchg pusha notb push lods adc pushf add mov xchg inc adc sbb mov mov rolb mov push nop/reserved sub sarl adc test out leave sbb mov inc add jp iret mov adc lahf sbb (bad) bound fisubr daa sub mov sub jge in adc cmp mov cmp int3 cmc adc pop test fsubl out pop inc rol add dec add mov add int cmp aas sti sub es pop mov shrl mov cmc clc std pop pop loop xlat adc or adc jmp add xorl lock shlb or adc dec inc ret sub adc pop hlt bound lahf stc or xchg inc (bad) xor mov xchg adc pop (bad) outsl data16 (bad) xor xchg adc pop sbb inc fdivs cmpsl adc adc dec ds or out lret negl sub cmc sbb add or loop mov and jae (bad) mov movsl (bad) lock out notb or int3 fsts jnp cmp ret popf dec out sahf adc push into (bad) repnz mov adc cmc adc sbb adc pop mov jbe (bad) std push xchg (bad) repz loopne cmpsl add outsl ja sbb enter popf adc bound repnz add adc hlt lret sbb (bad) mov dec pop pop lock xor ja adc bound in stos mov mov mov frstor add shrb lahf xor jmp adc jmp icebp push mov repnz fsubrl bound xlat cmp adc pop mov cmp repnz add sbb fisttpl adc rcll cmp cld sbb adc mov pushf aam or in ret push (bad) dec cmp shl dec add lods mov mov sti or and pushf into daa adc push jmp adc out imul stos int cmp xchg adc loop adc aad lret xor adc mov push mov (bad) (bad) nop adc les nop fidivr jns testb repnz outsl xor jecxz arpl mov xor cmp xchg or or fsub push adc add ja int adc inc (bad) js add pop fs mov lods popa cmp loopne loope push mov add inc inc xor jo and leave dec inc mov xchg mov adc lods outsb rep adc outsl pop mov inc xor test push (bad) fs sarl mov lods xor (bad) aad adc mov mov ror sbb pop (bad) fisttpl popf repz sbb mov adc fs mov adc sub sub mov out adc cli daa mov or xchg xchg repz fsubs xor pop xor inc push jecxz jge test mov inc or push adc ds and or adc test jne mov lea roll or test mov cs mov xor pop adc or mov mov lret or es sti push lcall fwait mov xchg and mov orb push call xchg pop stc insl sub adc int3 mov out lds into sbb test aam ficompl das lods repnz jl inc repnz lahf aad dec bound loop adc and fs jne popf or (bad) enter insb (bad) xor shrd adc push cmpl mov xor stos pusha outsb (bad) xor aaa iret movsb add inc pop pop repz mov mov mov shr cmpb pushf cmc outsl test imul incb mov fwait and notl sbbl js jae jbe pop or incb inc shrb or mov jge dec push fisubr jns ret jp or rorb mov mov xor lret and mov sbbb cli cmpsb out es in cmp mov test lcall popf inc mov adc xor and xlat adc ja xor adc push aam adc stos dec jp pushf jle rolb jg or push and mov (bad) mov adc fs inc or add js pop push push ror mov mov enter inc (bad) push rolb fistp sbb pop std push mov sbb leave mov push lods test jb imul cmpsb lods cmp jne mov mov fldl insb xor mov mov or or jno mov fisubrl push lret xchg (bad) push sub push fisub mov push (bad) push xor xchg jge push xor adc xor inc (bad) mov (bad) into daa adc rcrl push xchg into pop jecxz int3 fdivl pop push daa stos xchg jns adc ljmp or xor cmp fcoml or insl adc popa jnp hlt push popf adc sbb xor sub fs (bad) out inc mov adc push sbb mov jmp jl movsb push adc adc andl xlat mov data16 or in ja int xor jle pop cwtl xchg or sub cmp xchg dec adc imul inc push sub add pushf pop jae inc push lea sub xchg mov adc lret cmp pop ret jnp movsl adcb outsb mov mov jge fwait sbb xor cmova out movsb cli stos add pop mov xchg lahf ret hlt stc (bad) jecxz (bad) xor or dec pop cmc icebp inc outsl (bad) fistl ja pop (bad) jmp call (bad) repnz mov push inc mov adc stos fmull repz ret mov std cmp dec movsb ja sub or je out out and adc loope jle adcl adc add dec inc mov sub arpl rcrb pop insb add and push (bad) adc cmp adc pushf mov adc sti frstors int and cmc jo das adc and mov dec pushf dec jne xlat divb adc mov adc add orl popf nop ror fidiv fldl inc add add pushf jno inc xor mov or push imul pop movsl fiaddl and xchg pop pushf adc sub gs bound lods adc aam mov out pop adc shrl scas std jns out dec jl leave adc cmp aam das jg inc out mov rcll add int3 add xchg dec in inc decb jnp jmp or sbb ja inc into mov sbb lock fwait pop mov stos adc adc cmpsl fisubr mov mov out mov mov pop jb xchg inc or repz lea in pop inc pushf xchg adc inc lods arpl pop add or adc cmp xchg mov lcall push pushf push (bad) adc inc std enter adc shlb popf icebp pop xchg jno lods jmp fcoms push je mov ficoml bound push cmpsb les sub aaa jo pushf (bad) stc adc aam lds inc out adc and ja lods add or xchg adc push sub pop roll adc and dec sub sub mov int adc mov pshufw jle jl jno add jge (bad) mov arpl fsubs dec repz icebp push mov jl sahf js xor loop pushf mov xchg inc imul (bad) (bad) insl add pop imul test shrb sbb cmpsl mov inc jle ja inc adc pop push (bad) lcall xor lock mov loop sbb movsb jmp cmp xchg and inc mov lods adc mov cltd insb jecxz cmp stc clc or int3 pop sbbl test sbb ss (bad) arpl scas lret mov adc int3 xchg stos and adc xchg inc or pop add adc call je ds adc mov test or jno sbb or and jbe inc sbb adc mov ret add test cmpl or nopl int mov xchg mov ficoml cli push push sub std dec adc (bad) into adc mov add outsb mov iret and in push xchg jg add iret sbb loopne cmpsl repz sub stos adc ss mov and les cmp or out aad xor xchg (bad) xor push adc rcll imul pop popl jne fcoml aas xor or cwtl jge xchg inc outsl pop (bad) cltd pop jns dec loop fisttpl pushl adc dec inc mov push test push std scas lcall movsl mov pop mov shlb mov cmpsb xchg ret and lods ljmp js popa adc ds cli adc xor dec sub repnz push ljmp std xor cld mov lods lret adc or push jle adc cmp test or mov fndisi(8087 add xchg or fcmovbe pop push loop lock je pop adc imul daa adc xchg mov inc mov push add arpl pusha adc pop mov sbb push dec clc push and rcrb add sti xor add rclb mov test jge mov ret jg movzbl nop jns jbe mov iret fdivrl repnz jecxz hlt (bad) out jo scas mov xor ss out je cmpsl cmp in repnz xchg mov or mov push call or pop sbb repz fs pushf pop add lret out adc cltd popa out imul push xchg loop test dec hlt mov adc fwait jl or adc aaa xchg insb leave push std push adc ss and notl icebp sub addr16 and pushf int mov lods in jecxz adc insl and clc add data16 jle ret adc je lea sbb icebp add jmp in sbb fwait test pop adc stos mov adc add repz and dec lret test jae mov adc repnz cmp push adc mov insb jge idivb push add pop cmpsl jo cld or lea adc into (bad) sbb (bad) mov inc fcmovnu cmp or xchg ljmp loop cmp jmp repnz xchg pop adc (bad) sbb movsl xor pop cvttps2pi shrb lods jne dec test add hlt jno xchg pop lock mov mov dec mov aas call mov sbb adc push mov xor jnp es push sbb inc push xor les xchg and inc inc adc std xor popa xchg xor push xchg xor xor adc hlt add sbb dec shrl cmc pop jno hlt out sub cs jno fmul adc out add dec or inc sub xrelease mov cmp mov adc add test std cmc pop in mov ja sbb jmp arpl or ljmp mov and dec int3 sbb rcl (bad) xchg mov loopne ljmp fwait adc adc sub sbb mov mov outsl dec mov mov sub cwtl xchg imul pop xchg push mov pusha jno daa push pushf push sub mov adc in or and sbb in adc adc outsb adc mov and cmp cltd pop test sub nop std fs movsl sbb cli mov adc cmpsl and in mov jno imul mov mov push ss adc and mov sub lahf pop imul scas or cmp fisub cmp adc mov xor mov and xor mov ret xchg mov mov outsb clc dec add ss das stos adc test mov adc mov adc sahf rcr add add in (bad) dec repz js ret fisttpll gs xor mov int inc or adc out mov adc and ficomp or jae cmp dec sub mov adc xor sarb sbb mov lcall push out adc adc adc aas in cmp xlat clc adc mov cmp repz lret sbb notl mov insb rol lret lods scas lods ret xchg adc inc in add add nop daa sarl int3 add addl fstpl jne cld adc mov xchg inc std fcoml movsl daa adc (bad) (bad) aaa mov repz xchg movsb or rclb mov mov jbe mov cmp jl jecxz lods int sub push fisub ds gs and xorl sbb xor cmp rcpps insb mov loope sub pop dec out loopne addr16 or mov popf jne repz add stos or mov repz test jo sub (bad) mov pop rorl push or lea adc adc fcomi movsb inc add in or adc jae stos push iret addr16 push ss sti out push dec loop mov xor xabort inc or cmpsb das mov mov aam lods xlat jecxz scas fist outsl dec stos pop das fnop mov push insb adc xchg pop jne fnsave push or sub push (bad) mov aam lods jno idivl adc cwtl mov push or or nop aam (bad) adc adc enter ds inc les dec xchg add mov adc loopne ljmp jp xchg (bad) ficompl cmp addr16 stc mov jl,pn pop aaa xor outsl or sbb imul inc mov (bad) stc add adc jnp hlt imul push sbbl in mov sahf push push dec loopne outsb lret add ljmp dec adc jns mov inc mov je jmp mov mov ret xchg adc pusha mov adc push out inc andb mov fisttpll mov xor in stos push mov adc push jb xor jbe sbb mov xchg pop popa sbb sub rcl pop loope dec dec and shl adc adc xchg mov adc test mov rcll add adc nop aaa or mov add adc lock aad xor std xchg adc push and cs rcll ret mov xor cmp mov adc rcll dec pop jae add ret jmp nop mov xor (bad) dec mov and arpl pop jge cmc cs pop gs xchg sbbl mov adc inc ret ds mov inc cmp loop jno xchg add (bad) jbe sbb cmpsl icebp jae,pn cmp fstl pop mov sub (bad) xor or mov pop mov jbe out andb int3 inc adc sarl xor dec repz adc ret popa repnz (bad) adc pop add test sbb cmp in fimull jb pop sub lret sbb pop pop lahf pop faddp push adc dec daa xchg adc insb inc xor cmp lds bound (bad) pop adc xchg adc cli dec inc mov add mov jecxz mov (bad) hlt inc test stos adc sub push push hlt add cmp adc sbb mov adc repnz in stc in push aas jp and and adc dec and adc insl fidivl lds scas jo (bad) mov cmp and push imul js and adc gs pop stos rcll repz mov and add inc lods scas adc xor pop adc shll (bad) adc xchg nop in sub (bad) into out mov sub adc dec jo pop dec pop lods sbb aad inc xlat js inc xor mov inc lods inc test add mov push das xchg fs mov (bad) lods adc mov dec mov sarl mov out dec iret push or adc inc or popa sub mov mov jge xchg mov scas xlat loop or (bad) jbe adc fcomip out ljmp xchg xor adc lock stc mov push jo or mov jno jp adc in pop cli mov jg xchg xchg repnz jnp loope repz mov adc outsl bound movsl jmp adc notb jecxz rcrl call xor pop fimull and sbb cltd pop rclb cmpsl iret push jne test adc (bad) jne cmp mov mov mov xorb lods pop call je adc leave mov sub push fs cwtl adc movb xor gs mov negl xor sub adc sbb adc dec dec jae and adc (bad) (bad) shl adc or mov aam sub pop cltd jne arpl cmpsb shll int3 adc inc jae push popf xchg xor test lret adc xor arpl das adc (bad) adc and cwtl ret inc test insb mov iret mov repz jne rcrl scas jle and (bad) xor leave add fstl adc mov std adc (bad) daa add cli in adc jmp nop jl loope lcall fimul adc xor cmp pusha adcb inc shrb xor xor pop jb aas lods xor iret ja push movlps sahf lds adc adc aas sti (bad) ss lods push testl mov into repz loop mov enter xor mov xchg mov pop mov adc adc push sbb push rolb cwtl movsl (bad) std adc xlat mov jno jne stos mov push cmp adc or adc jbe (bad) leave jns mov xchg push into mov and cmp addr16 inc dec mov xor (bad) int3 jns mov lds sti mov jg xor loopne ficoml adc sub mov mov xor sbb es aad sbb je pusha stos adc push dec or fidivr shr imul stos adc repnz std mov mov lds inc adc lods rorl movsb xchg (bad) mov jne mov fbld adc sbb test enter push mov push rorl adcl push aam jo inc dec or mov addb test lcall push pop bound pop sbb rorb adc shll fwait mov inc std adc add push insl xor cmc cmp push adc mov mov dec pop cmpsl out mov adc push fldcw adc leave cmp jle adc mov adc push mov out fstps (bad) adc inc and daa or sbb (bad) scas jl nop sarb mov inc lods sub add xlat jae and adc fsubl icebp mov push in das scas out xchg adc or ret push cld imul and dec divb sahf and addb inc add (bad) fstpt adc leave jne adc or cmp frndint or sub xchg arpl ret movsb and imul xor rorl repz adc adc (bad) push adc out fs pop loope pop mov lds add and jne sbb in test jnp mov push push mov xchg movsl cmp (bad) aam sub sbb add stos lods insb int dec jno (bad) xchg mov fistl xchg lret add dec add xor test xor out frstor inc and push sub xor cltd or add fstpt sbb push adc cmpl jno notl mov mov icebp cld push xlat scas sub mov lret pop cmp inc push lods bound mov sbb test mov sub pop cmp or add or dec adc cld inc les out jp mov repz lea or mov lods imul in js out nop mov and adc or fcmovbe adc sub mov (bad) adc jns,pt bound (bad) xchg adc leave add cmp mov sub mov adc push std mov out lods xor loopne push sub adc aas mov lock (bad) cwtl les std aam mov leave adc add adc sti lea iret loopne cmp hlt insb mov mov cmc pop cli or sarb adc or mov jns out test push mov pusha pushf stos cmpsb dec xchg iret lea add dec repz push addr16 pusha std xchg in pop add pop xchg or popa out adc out adc lea adc (bad) stc mov test add rorb jg mov lret adc das add and (bad) out pop sbb aas and mov push inc mov jl je or xor rol ror ds adc pushl inc mov sti adc pop (bad) jno lcall iret adc je cmp cld sahf aad adc sub adc data16 idiv sarb mov adc int3 int sbb adc test adc out idiv xchg into dec adc (bad) mov cmp mov sbb insb (bad) add jmp or mov loop xor repz mov (bad) in test fiaddl add inc adc pop inc fucomp jbe mov pop ljmp adc in or xchg cs fwait pop push adc and or fsubr jle push mov xchg (bad) mov notb gs insl or adc in stos cmp push cmp or mov pushl adc lcall or mov push cmp std and or lret dec add js cmp out mov shlb mov adcl das mov jns daa sub jge inc cld (bad) rcll scas adc js pop jecxz adc pop test add cmovs mulb mov adc lods lds jp push adc mov in adc mov inc add sub mov cmp adc jo out mov (bad) das pop mov xlat sub adc test ljmp xchg pop pop inc xor outsl fisttpl out loope (bad) sbb into mov fsubs mov vcvtps2pd lock mov jne bound jecxz inc or les xlat inc mov xor (bad) loope or scas (bad) insl icebp in popf adc test lock arpl cmp cmp mov lret ficomp iret and adc and jecxz das jl pop or jle cmp int3 mov sbb repz mov adc inc mov sbb test jns mov call cld movl jb sbb stc and in mov mov mov mov loope mov push inc mov adcl xor fsubrs rcrb ret cmp out je aas inc xchg sbb push clc enter outsb test jl adc xor test pushf aaa adc cltd popf push es scas adc jecxz inc fildll fmuls mov movsl lret pop dec adc pop subl sbb pop movsb dec push sbb add jmp sub es shrb fisubl imul das cmpsb cmp mov adc add pushf in stos inc into cmpsl lcall mov adc loop jo pop into add jl sbb shrb push adc pop inc push mov adc hlt jae sarb push pusha mov add insb adc aaa mov xchg scas push outsb test cli jb add sub mov and pop cltd adc insb mov daa je adc test jo xchg and adc int3 not cld push (bad) dec push (bad) repnz push or call lret mov and xchg mov enter mov xchg pop sbb ss mov and jmp sbb jne call cmp and cmpsl daa fist push inc xchg inc jp sbb test sarl popf cld dec rep lcall mov adc fidivr xor in mov mov cwtl pushf test imul adc mov aad cmp lret std sub xchg cli adc call in add mov sbb mov sarb rclb cmp lret mov out int3 xor outsl add cmc repnz stc xchg push add repnz sbb adc sub adc (bad) pusha adc (bad) jecxz mov sarb add stos mov jl,pn outsb xchg add shrb adc jb adc (bad) call scas dec addr16 fcomip fildl jecxz mov push repz cmp movsb push xor cli mov mov bnd int3 xor adc movsb loop in or lcall push shr adc fidivl fnclex pop repz fsubp mov lock adc aaa inc cmp clc aas cli sub add mov mov sub cmpsl cwtl pop inc out lods sub lahf frstor (bad) stos loope pop and decb int3 xchg pop das sbb push fldenv cmp iret jo push jns adc (bad) or inc clc mov jg mov adcl add mov adc lret int cwtl out adcb add inc pop lock js sub push inc push loopne jecxz or pop sbb mov mov loopne xchg xchg iret adc movsl fwait mov push js adc lea mov les jns xor adc jmp hlt fistpll add adc push lds mov adc pop stos ljmp xchg mov sbb pop dec fmulp (bad) ret push sbb sub out repz (bad) in push jle push sbb test add repz mov scas add cli add xor std addr16 je cmpsb jl jne fdiv jno out imul adc enter rclb out fisttp adc adc (bad) sbb adc xor xor (bad) fdivrl xor dec aad xor dec push jno test add xchg in out or push aad or roll das adc xchg mov lret cltd shl je jl jecxz (bad) out dec push pop add imul mov lods mov pusha loop lret mov pop scas (bad) lret pop adc rcrb mov push popfw sub jl cmp adc insl jp setae repz ds sbb add adc push adc rcr jle and push cmp enter popa adc mov pop repnz lea repnz pop fcompl cmp xchg sub xor ja mov adc fwait ljmp dec out add add outsl sbb pop rolb push repnz fs push pusha adc mov sub int jb out xchg lds stc push mov adc adc (bad) dec loope stos mov adc jnp fs ja dec scas pop mov cld xor xor pop mov xchg mov cmpb pop (bad) xor inc or mov and sbb xchg inc std dec push fcmovnu out adc ds loop jecxz push inc adc cltd fidivl nop dec mov stc or push je test xor adc loop adc inc sbb adc adc or push das cld xor add (bad) jo pop mov leave jne mov jns inc testl jg fsubr jecxz mov mov shll sahf add lds sbb (bad) xlat cwtl push outsl adc and push mov popf or dec in xor ret add push outsl (bad) repz outsb add xchg add mov mov inc pop adc mul adc lea mov mov cmpsl out jle jae je mov pusha pop cmovns add addr16 aaa xchg add jo push xchg das aas or lret pop pop arpl fisubr (bad) je push pusha aam jge (bad) xchg pop and push push fcoml sub sbb mov jbe arpl jo sub push daa push lret push stos xchg inc adc mov (bad) repnz cs pop aad outsl jp mov sub je mov jbe flds sbb outsl pop mul rcll or gs lea repz push adc outsb xchg adc dec (bad) gs in lea js mov popa inc out adc jns icebp add adc dec cmp (bad) (bad) adc mov int3 rcrl js pop adc mov fwait inc cld gs jnp jmp rolb jge inc adc xor popa and add rcr add outsb inc jle cmp out xor lret bound jae adc roll out or jecxz mov les gs loop insb jmp cmpsl add cmp ja pop adc test xor mov int out nop dec or adc sbb xor scas hlt (bad) mov stos push jno test or jle adc lds inc push rorb and (bad) out inc incb ret jbe push cli sbb lock js jae adc in lahf adc mov mov je out adc and adc inc sub push int3 sti aas push loop mov jge leave dec insb jae pop adc out pushl fildll mov cwtl jne in repz clc or mov push mov paddd je xchg sbb stos ret cmp pop jecxz mov add adc adc je mov test inc add out daa and (bad) addr16 (bad) xor cmp sub mov sub mov ja arpl adc insl adc sub jo loope (bad) adc adc sar dec or pop mov adc insb cmp hlt sub adc or dec movsl push mov dec or leave call xchg lahf (bad) pusha in sahf dec xor in and ret inc (bad) int sub int3 adc jb jmp dec cmp jns cltd cmpsl adc pop lods roll adc in mov imull iret inc sti add (bad) fstpl movb imul mov or aam sub minps jnp pop cmp les cmp cltd loope xor out mov pop fcoms aam xor mov rep mov es dec adc sub iret jnp xchg mov mov mov and mov fdivl pop inc adc add test adc jge jecxz mov mov and mov cmp xchg pop hlt mov loop dec mov mov adc data16 inc jno ja int3 mov pop sbb adc int cwtl xchg adc lret ret cltd mov out sbb das repnz leave arpl mov jge xlat adc inc sahf push adc cs push lea hlt aad rorb stos repz das mov xor cmp movlps push xor jnp or iret pop nop mov rolb es dec or adc dec test xchg (bad) pushf adc ficompl repz (bad) mov sahf push cli ficom call inc mov push mov icebp xchg add in push adc int (bad) adc mov sub aam and mov add cwtl mov nop push ljmp pop and mov or lods add push test insb mov aad adc jo mov adc lret fucompp mov inc push std ljmp sub (bad) in (bad) cmpsb xor mov xor adc inc xchg rclb and adc cmp mov push fnsave pop nop xor or and adc dec mov inc aam addl or xchg adc jle sahf fs push adc cmpsl subl (bad) fsts sub add adc jl aam adc add mov mov adc sub cmc sbb loop inc repz sub or aas adc les add sbb push (bad) out mov add dec into xor inc repz jmp (bad) insb punpckhwd mov push adc mov jg sub sbbb mov or lret add (bad) fwait stos les stc dec dec sub and cmp mov jno movsb mov scas shr jnp xor ljmp nop push cmp cli ja or jno enter stos (bad) push outsb pavgw adc cld cwtl daa push sbb js sbb xor in aas ljmp jmp adc push out mov aaa dec notl enter inc pop xchg sub cmp les shrb adc fwait adc push divl mov sbb mov push pop jmp das xor lret (bad) mov popa insl adc dec in icebp pop push repz leave pop out mov or repz sbb (bad) xor loope and adc scas loopne adc pop xlat sub mov fsts nopl inc int3 ret cmp (bad) lock adc push xchg adc test sbb ret test es jecxz (bad) repz icebp mov mov mov mov xchg add cmp je lahf rorb outsl inc test ss add and sub and push popf (bad) stc xchg lcall outsw (bad) aam repz pop je daa and pop add pop cltd cmp outsb jae xor aaa daa out add lods adc xchg mov dec xchg jne lock lea mov add sahf (bad) adc pop imul mov add inc mov push adc hlt leave adc inc xchg nop inc mov or stos mov lret aam fnstenv add stc test insb jbe lock pop scas es adc in lret push pushl sarb push adc pop xor leave xor ret dec incl mov or psubsw js mov out mov aam adc negb jbe cwtl sub ret sub je cli lock loop outsl daa rorb or repz xlat cmpsl lods cmp (bad) jle sub (bad) fmull jne xor ljmp rcll push icebp xchg sbb mov bound (bad) pop adc mov push scas popf push mov mov jne and push lds adc or es jno or dec inc mov mov lods mov and mov cltd out inc xor nop jo insl sbb or mov push cld sahf dec (bad) fnstenv in cmp or mov and imul add aad mov xchg ret inc mov inc or sbb inc cmc add xor into test leave mov push mov lcall fsubrl enter fdivrs lods jns loop lea push pop jecxz dec mov aam shlb jmp or xor inc sbb cmp cmp push (bad) adc jle push inc shrb mov sub add rclb mov lods xor xchg sub inc adc sbb nop fstl iret and xor rclw mov imul jo jne pop pop or xchg adc mov fwait cwtl adc fisttpl int3 adc cs mov (bad) dec push adc mov ds popl adc dec push and adc test sbb adc mov int jb mov aaa lcall inc repz cmpsb jmp or lods dec fdivs stc mov cmp jmp xor pop cmpsb pop stos out adc daa sbb pop pushf and mov adc gs jne insb add dec je call std and inc or push mov hlt repz aam xchg movsb sub paddd or mov adc sub xchg push jp (bad) xor jge inc (bad) sub fcoml aam lret and je fistl bound fildll mov loopew xchg xchg aaa repnz cmp adc jo lods push jl loopne into add inc mov mov iret xor (bad) arpl adc push jmp xor sub and jns xchg js add and clc int3 repz (bad) xor rorb mov cmp cmp jne pusha lods mov inc adc jmp fldt ficom stos test insl and cmp scas in push aad push test inc pop push (bad) adc mov xchg adc pop cmp and in adc popa push mov jb inc insl les sti jl jp imull inc add int push adc add jmp push xchg inc iret sbb mov mov xor out pop subl xchg xor in rolb pop push lcall dec push mov add in adc xchg pop rcr adcl data16 adc test adc pushf movsl fcomps mov mov push inc lcall out adc pop popa bound adc (bad) mov add ds pushf or xchg pop and mov mov sub pop pop addr16 jecxz adc stc dec xor pop test adc xchg mov adc sub mov mov stc nop call mov jo adc adc inc and outsl lcall pop insl xchg jae mov loop fldt mov adc push movsl pop inc sbb cmp mov push out push mov adc pop in lock jno enter xchg fstpt mov pop cmc rcll push xchg add mov outsl jbe fwait js adc cld int xchg sar mov jo mov mov test test or mov cmp call lods mov pop sub and mov push pop jns sbb outsl in or mov test incl pop int cwtl fcmovnbe mov out nop jmp lret (bad) arpl sub test adc mov ret cli popa adc mov js dec pusha mov adc sti aaa add and mov ret pop lcall pop adc dec incl mov roll mov push push fstl ljmpw mov pop or stc jge pop jb jne (bad) xchg and adc ss sub (bad) int decl inc jae loopne (bad) mov cmc (bad) pushf xor push push es dec inc sbb mov cmp inc mov scas inc cltd test mov mov int3 pop xor cmpsl push ret push mov jecxz mov adc outsb mov jne add dec mov adc xchg push pop arpl and repz (bad) or daa add cli repnz xchg addr16 (bad) and psubw sbb pop adc cmpsl fiaddl or add sub fisttp repz aas mov fsubp xor in pop push sbb ja inc xor xchg push lods adc cmp adc inc ds cmc jecxz sti pusha mov les repz cmp xchg outsb xchg adc mov cli fldenv outsl xor enter jp into mov (bad) cmpsl sbb ret popa in xchg push xor popf mov fisttpll lea out sub fnsave imul repz ja dec fwait or mov daa pusha and dec adc test mov or and mov add imul sbb jae enter repz jmp xchg pop and fcmovnb mov adc lcall sti dec inc (bad) aaa sub adc push pop (bad) mov enter ficompl xor imul movsl adc mov or adc pop xor xorl cmovbe adc adc xor push loop or aaa stos fwait add out mov jp and decl add xchg sub push cmp (bad) dec jbe adc mov jnp mov iret into xchg xlat cmp adc and lods mov pop add xchg xchg pop add push lahf mov sub jns push aas cmpsb xor pop or out mov dec ljmp repz imul cmp pop stc mov mov mov fcoml mov xor outsl xrelease xor mov pop lcall adc jmp inc jne js or mov pop mov push inc inc testb pushf mov testl movsl or imul cmpsl push in mov and into dec jge sub cltd adc subb adc xorl cmp bound dec (bad) repz or cmpsb jae add mov popa js xor adc mov jo in lahf cmpsl and into rcll xchg sbb add test mov out xor pop lods cmc sub fcmovu dec jne jge aas ljmp and push pop add scas add xor mov (bad) aam dec ret dec or jecxz add fist jecxz push pop dec pop adc (bad) jns xchg mov pop xor insb mov out mov mov or test inc push rcll mov jae stos adc sti popf mov pusha xchg xchg push mov mov ljmp sub xchg cmp push adc fidivl xor xor jo inc sub test leave jb xor push pop bound adc sbb add inc push sarb mov ljmp xchg hlt loopne dec jns nop cmp dec jl (bad) adc sbb mov pop pop mov push dec fist (bad) jmp stc add sbb jns out test cmp jne cli pop gs jl or or dec xchg (bad) mov mov je and fwait mov mov sub out mov push mov jle rcrb xchg mov cltd insb addr16 pushf adc push pop (bad) gs pop adc fwait push add aam frstor xor mov mov cli xor in in xor shlb pop and inc xor push cmp inc jle lcall sbb repz mov cmp adc rolb jb lods adcl xor stos inc mov and sub or pop mov aam cli xlat pop rep xor ret or (bad) call pop sub dec ror or xchg add popl push adc es pushf bnd mov cmpsb repz fnsave mov xchg lds mov push mov lss mov jnp push adc (bad) iret sbb cmp call xor rorb or sbb adc fwait (bad) int3 pop mov adc lds out das mov int xchg adc push cmp rclb shrb push jne scas adc fs mov mov lods repz xor push add gs out (bad) pop mov sbb fwait ljmp scas jns sbb inc push adc imul adc aas xor int3 out mov mov aad ds jmp adc xchg sub ret mul add sbb adc mov xor adc bound inc shr add es add hlt adc (bad) icebp xchg adc ret mov rcll fwait imul or (bad) adc mov bound cs idivb fwait das mov xor lds test jb adc xchg cmp rcr les loopne scas cmp adc (bad) (bad) or adc add in adc mov push mov pop xchg lock or add addr16 xchg xchg sbb (bad) mov mov mov lods andb repz fidiv test adc sarl inc popf sbb lock lcall pop insb jno adc ljmp rolb jae sbb adc push sbb xor push sub fisttpll cmpsb in add inc pop int es or pop outsl adc lret bound jmp jno adc adc (bad) adc push psubb jge adc out xor dec and adc lahf jns pushf (bad) cmp mov enter iret mov xchg mov adc insb xor movsb (bad) dec out das adc sar add mov shrb add bound push hlt lahf mov xchg cmc lock mov xlat in xchg je arpl popa enter xchg inc push xor cmp push arpl jl mov test (bad) cmp jl out and (bad) not mov test adc (bad) jmp lods adc test adc insb data16 loop rcl dec (bad) add mov pop inc adc outsb push sbbl cs mov fmul cwtl xor jmp jl stos push out sub jg lahf pop mov adc jle in fidivr movaps call adc imul inc int scas mov (bad) jno movsb xor pop nop jb (bad) or aas les repnz call lea xor in mov adc (bad) or into push movsl mov adc scas pushf (bad) xlat add stc push and repnz xchg cld push lret xor push outsb aas xor int3 and push jnp mov test fidiv scas xor mov (bad) push pop hlt xchg dec mov pop and and mov jne not icebp insb rcrl stos sbb js inc push mov cmp xor dec xchg adc in jmp push add nop mov dec and inc fwait push cmp sbb add sbb push xchg into adc cltd adc out popa in mov daa pop js adc mov mov mov aaa (bad) sbb or mov test ret adc adc (bad) xor or sub mov xor cmp push (bad) sub mov cwtl bound xor jle je cmpsl mov daa loopne clc add icebp adc mov xchg aaa repnz inc into cmp pop xlat sbb add mov xor and dec int icebp inc test add jns std or pop sti adc push add jmp xchg cmc or or inc mov insl sbb lahf lret loopne fist shll cmpsl aad int mov rol mov adc jmp mov adc mov or push fwait adc sub or in adc jnp push dec fidiv add xchg cmp fildl adc rcrb scas or adc mov sub lods jl int3 decl mov iret cltd add inc and enter pop push pop ret mov mov push adc fistpll sbb insl inc out or rsqrtps or adc jns lret lods adc mov or sbb hlt pop sahf cmp add test xor pop xlat push ljmp repnz idiv ret cmp lret outsl es xor mov and sti or cs mov scas fisubl mov jmp fwait mov dec mov stos xor and les es out adc lods cld adc std push dec adc fnop and pusha shl push mov adc xchg stc xchg pop sub aad test xor adc hlt xor or lods adc std mov and icebp test adc mov and pop adc pop pop fdiv xchg lock das scas and sub fldcw sbb pushf in adc fild adc pop mov loop mov in push inc jns jge int3 xchg rorl dec jp sbb xor sar mov ficomp jae xlat ja sbb adc sub jge repz test pop mov adc aad (bad) pop lods rorb ret adc outsb daa adc push cmp rcll faddl inc mov out (bad) (bad) das push lea in sqrtps mov in mov dec roll xsaveopt es loop mov sub cwtl adc stc add adc dec cmpsb inc push lcall add inc popa insb adc in (bad) pop mov cwtl adc dec push mov dec ret rol shrb aam (bad) mov jmp or in sahf mov adc mov mov cmp push outsb aam loope xchg in cli add nop dec push enter adc sbb in adc push fmull (bad) adc stos pop adc and sbb mov mov adc fildl (bad) pushf sarl adc mov (bad) mov and call mov jle adc or xor push pushf mov mov stos mov adc imul adc jo in adc es (bad) mov mov mov mov fisttpll in inc cmp jp adc and hlt dec jg sbb (bad) mov sbb mov mov inc or dec mov jge adc lahf sti pushf push in insb (bad) adc add xchg movsb ret call push cmp mov into pop sub adc sub jb fsubs call lods stos loope jbe outsb repnz mov insb lret mov adc adc scas xor les adc push adc out jmp dec push mov adc and jp pop adc movsb adc lcall arpl sbb adc xchg lods jo jecxz (bad) adc xchg data16 adc fsubr mov add adc mov lret add pop inc shll pop fcompl jne xchg sbb push testb or aam or cs sub repnz xchg in std into jo cmp adc aas movsb cld es sbb insl (bad) sti add movsl xor xchg fisubr adc fstpl mov repnz loop add mov dec (bad) loopne xor or adc test dec xchg loope scas out aad sbb sbb adc xor popf jb adc arpl cmp push xchg push orl adc test ja sbb add xchg scas das adc ljmpw dec add xchg dec ficomp push aam add insl pop lret in aad inc popl loopne pop adc xchg jmp xchg cmp sbb (bad) ret sub xchg dec lock lahf jns push repnz dec bound sub mov cwtl cmp adc push lea insl add js cld push xor movsl dec add (bad) repz fbstp or sbb es inc lret stc adc mov mov test arpl xor fdivl loope in push std std and sub jle cmpsl xlat sub orl xchg and adc jns and andl jle fnop stos add mov adc mov add hlt or jo call xchg adc int or sub mov adc or or and clc ds sub nop xor adc push test jmp loop mov pop inc mov pop cmp or inc adc jne add popf adc in adc cmpsb sbb stos fwait cmp lods jno cmp loope adc inc sub repnz aad or sbb out push lret jne cmp insb mov shlb pusha (bad) in or adc loop (bad) incl pop test sbb pop inc push cmp scas pop adc sti (bad) enter and sbb (bad) push mov jne daa jno add cmpl fiadd movsb mov sbb mov int sqrtps cld out (bad) xchg jecxz fbld lds dec das adc dec addr16 ja mov lahf inc (bad) hlt mov repz jge icebp fwait int3 mov dec out add pop mov (bad) aam add mov (bad) adc sbb mov and lock movsb xchg push jnp adc out ja ss add sub xchg sub push bnd out mov push mov xchg cli jne outsl jns cmp jno mov push xor (bad) shlb iret mov xor loop adc incb roll sbb ret cmc push movsl and pop insl iret push push fildl sbb jmp hlt and into and cmp mov cld dec sbb pop adc outsl ds adc pop lret dec int3 outsb mov jge lods sbb leave mov adc ss fmuls out in movsl aad leave scas push fisub xchg adc pop cwtl adc notb fistl int incl adc add lcall sbb scas subl ret leave adc (bad) push mov xchg mov and loope xchg fisub push pushf repz inc push sbb xchg pop adc in ret scas dec lcall or sub dec outsb xchg xor dec mov or cld and cltd mov push call fldl add xor stos pop or aaa sbb mov ljmp or mov adc xor sub repz mov in repnz jnp push mov aas pop mov stc xchg mov mov mov mov data16 (bad) pop (bad) out adc test addl shlb sub lods pop push xchg xor data16 sbb pop and jnp (bad) imul sub or dec sub shlb and outsb icebp xchg dec stc adc push jno and out push and dec xor pop (bad) mov add adc pop push mov dec push mov popf movsl pop sar sbb push repnz mov arpl mov loopne fs ja mov in mov adc push cmp insb xchg pop call xor cli add out aaa or es (bad) mov nop sbb stos cwtl (bad) fstl jb push loope or ds or testl lea aad mov xor pop hlt int mov out push jp stos enter mov fildl adc cmpsl xor sub jae add in into pop xor add ds pop jmp daa adc inc pushf rol adc xchg mov xor sbb add shr dec jb std pop cmp sub lods rclb add pop dec and adc pop sub cmp bound arpl and adc lcall (bad) sub mov jmp adc pusha decb stos xchg call outsb shll (bad) popf mov push call je popf jne ljmp mov adc insb mov cmp adc (bad) sti push and xor insb adc bswap add add arpl inc adc insb mov repnz shlb adc xor or dec pop or gs jo stos lcall xor mov and mov lods add adc fucomip decb jo dec mov leave mov mov xor sub adc inc xchg in sbb push lret adc inc imull int adc das xlat mov xor (bad) gs sti push mov stos mov jp inc aas bound cmp xor inc add and adc pusha dec mov mov inc push jne mov xor xor mov dec cld jge or add out cmp pop mov (bad) mov fxam inc adc inc sbbb fisttpll inc adc xor insl std rcll test dec inc dec aaa and adc push scas popf ror adc xchg xor mov pop rcl es xchg test (bad) imull or jbe hlt add adc mov push adc test dec bound adc jmp push das pop ljmp and adc (bad) loopne adc jbe or cmp push adc or jp fidivrl mov jnp pop mov sub cs adc inc movb scas ret sub cmp dec shll jecxz add adc sub test cmp xchg and jne aas scas adc xchg add push jg push mov push aas lret shr push mov sub popa fldcw jno pop or inc shr stc out lret jl jnp pop sbb xchg push mov subl (bad) mov pop xor inc jecxz (bad) in (bad) push or adc fsubl iret xor xchg imul fisttpl push inc scas adc xor push sbb das shlb outsl pop pop mov fsts push mov je adc xor push mov mov push mov adc or jl adc pop and adc movsb cmp adc arpl cmp aas adc cmc sti (bad) mov mov stos ljmp les fcomip movsb loop loopne push xor pop push cmp adc mov add jge and pop test adc dec insl inc and mov sbb pop (bad) fcmovbe xor scas add lret lods int3 adc push inc hlt jg push mov shrb mov shll jbe nop push fstl repz xlat scas test mov repz sbb and std cmp into loopne xor mov sbb fwait add mov inc cmpl inc push xor add sbb pop aaa sub or add adc roll jns test pushf jne aad hlt cli es test adc pop lcall xchg gs adc je popf clc (bad) add test in out add sub mov int3 dec mov lcall gs test mov (bad) pop mov enter je inc add nop or pop or lods jge int3 out leave stos xor sub pop lea mov adc in mov pushf cmp or popf jecxz sub jge xchg cld jle adc mov mov lret fsubs mov nop mov rcll cmpsl push shlb (bad) add mov (bad) repz or lahf rolb fcoms mov stos movsb pop ja xor mov sbb lcall fcomip movq lret push rcl into es mull add (bad) xlat adc jmp add push cltd add or aam adc sbb aad xor fwait inc test aaa adc movsl data16 adc inc pop lea cs hlt subb dec or inc adc jmp adc push enter (bad) jne repz pop mov cmp popa adc xchg cmp fcmovbe test adc loop cs mov lods mov test sahf sbb xchg icebp dec mov adc nop push mov cwtl mov push pop cmp leave adc sbb or in subl mov loope push jp push mov rorl and add xor add fsts or or sub mov add lods adc out sub scas ja inc rolb idivb adc mov pop inc adc xor mov fidivrl or dec sub loop push (bad) test outsb cmp or daa fistpl call and dec mov add and fs xlat pop push xor scas cltd cmpsl adc fmuls div xchg xchg mov dec xlat mov xor inc adc sub dec cmpsb adc mov cld mov subl movsb rolb js (bad) dec pop adc clc aas xor dec mov inc jne cmp xor add sti sub jmp cmc int3 insl mov cs loopne inc adc or shlb ds testb cwtl pop dec scas aaa dec push insb push jo cwtl inc out mov sti xchg sahf out je adc popf sub sbbb rorl xor fwait pop cmpsb xchg mov sub mov (bad) adc clc dec fstps dec fcoms (bad) les xchg add dec outsl shr push das sbb aaa inc imul in mov adc inc sbbl in xor lock stos sbb out adc movzbl inc push and push loop or xlat add adc call mov icebp enter push jo jle imul aas inc dec sub adc mov rcrb xor mov btc adcb std das mov mov stc or cwtl rcrb imul cli jo popf cmp or rolb jnp mov out sbb imull adc dec fist jo adc shll out push jecxz adc (bad) xchg fisub dec xlat adc ret mov lock sbb jg push pop stc adc leave or push push xlat adc xchg adc lahf hlt mov sbb outsb les cmpsl add adc mov add fucomi iret cmp ret adc enter pop mov xor adc mov adc daa xor outsl aas call adcl xor scas notb test xchg sti push rorb sarl jle fcomps cmp idivl xchg stc pop andps scas jecxz push sti inc push mov add xor add adc push dec adc shlb lea mov inc movsl adc fistpl cmpsb mov add and cmc adc mov dec xchg fsubrs mov je movsb push or (bad) adc mov jge inc dec mov sub adc or adc adc lods xchg movsl arpl divb std or add f2xm1 xchg loopne,pn repnz test push adc jno sti mov lds xor and mov into popf push psubsb adc inc sti insb and or in pop ret repz dec movsb sbb in and cmp and gs pop pop mov pusha push aaa test fstl mov int3 jne loop mov repz mov mov dec cmp repz loop jecxz xchg sbb popf in cmpl adc sub rcll (bad) addr16 (bad) (bad) sbb out adc cmp push add lgs adc pop fld push xchg sbbl in stc fcmovne sub icebp fdivr fcomps (bad) add dec lock stc cmpsb adc jp cmp pop sub xchg push xchg push xor dec adc pop ja ljmp xchg push push cltd (bad) hlt sbb dec mov in pop sti or insl add daa imul xchg and inc sbb pushf xor loop or push push xor or jecxz xor jge or sarb (bad) push lock imul imul xor scas mov in pop out adc fnsave jno cmp in lea call adc add sbb daa mov push enter jg mov xchg pop cmpsb adc bound xchg nop fs scas mov adc mov sbb adc out icebp fidivrl aas adc adc xor test pop xor push fwait mov test push pop and les push fildll push repnz mov xor dec movsl adc mov mov jg xor mov pop or adc or sbb pop ror cmc push add jecxz loope jle repnz dec icebp or rcl imul lds pop int sahf adc mov xor mov jae cmc in (bad) faddl test pop imul dec xchg js outsl mov adc in xlat cmp add stc imul test jmp test pop ret rorl adc mov fild mov inc adc mov adc and and mov sub sbb aad push cmp and mov cmp xor test inc notb mov mov (bad) sub pop sahf (bad) sar ficoml stos add mov lods xchg sbb mov push xor mov dec icebp adc push xchg pusha xchg and imul adc fnstsw jbe bound cmovg xor add push pop xor and std cmp xchg xor push push adc mov mov sbb cmp xchg push sub push scas repnz fmull cltd mov xchg (bad) xor sti addr16 fsubs repz (bad) xchg and xchg pop (bad) (bad) dec fs mov das pop repz dec sbb inc adc lock adc stos or adc push mov adc std rcrl and sub fbld cmp adc or out icebp ljmp test and clc adc mov retw adc jmp popa sbb lret test mul sub sub aas mov pop jecxz pop or push dec lock ror stos inc xchg cmp sbb jge scas sahf imul repz lods into inc sub rclb pop mov xor and push cmp dec adc pop adc xor add sub sub (bad) xor fdivrs add je xorb cmp rcll or add pusha fldl cmc rcll add adcl sub xor faddl cld and push inc (bad) sub xbegin mov mov sub or push stos mov test or cmc outsb add cmpsb sub lret adc inc sbb sbb inc (bad) or sub cmpsb mov hlt pusha (bad) or imul shrb psubusw and jo addr16 hlt enter movsl lret mov (bad) adc adc imul rclb add cs push jle imul sbb xchg sbb fstpt adc shl popa outsb xlat rcrl adc insl (bad) sub xor adc push int3 jmp leave dec cmp andb add adc movsl xor call popa dec movsb loop cmpsb hlt repz push or sub sbb xchg fsubp adc mov in cld sti (bad) icebp mov mov ret insl das ss addl mov add movsl insb adc (bad) adc jno push adc (bad) cmp sub pop inc xor xor mov outsl pop enter push sub out add adc sub insb lahf sbb insl fbstp push mov mov mov mov xor jnp fstcw adc sbbl sti adc imul (bad) push xchg adc pop sub adc leave pop sbb jle cld pop dec mov scas lods loopne les pop repnz imul or inc ret push adc mov xchg or jg cmp adc adc lcall xchg int3 mov add mov sahf in pusha arpl push jl jp,pn cmp (bad) icebp mov pop or pop pop pop adc notl adc mov in inc (bad) fstl adc add dec xchg push int out or (bad) ss je xor jne (bad) xchg sub cmp xchg mov je dec mov push inc jae iret fninit adc mulb hlt adc mov xor lret nop cmpsb cmc cmp xor insl loop leave cwtl inc (bad) push push xor icebp or (bad) repz (bad) pop (bad) mov cmc adc ljmp notb add mov mov mov xchg cmp call adc fild out adc push insl dec cmpsb sbb adc out call cmpl xor mov and (bad) xchg movsl add testb adc fmul gs in (bad) shlb ds or cmp rcrb ret push sbb adc outsl dec sahf mov pop and fistpl aam int cltd and jmp jb inc sub xor jae icebp adc leave adcl adc sbb loopne aas les rorb (bad) daa scas ret nop add stos push adc push xchg pop push scas lret in imul mov std loope pop xchg fadds rcrl insb xor adc or pop cmp out adc stos jno sbb sbb outsb ficomp vmovntps xor mov jnp adc insl fmul in ss mov aaa in das xor movsl add insb adc cmc add mov in mov push adc int3 jne repz xchg xchg shrl ljmp out (bad) int3 and lcall adc ret dec sbb in lods adc lret inc xor insb or jmp xchg lret cld mov add push cmp cmc aad mov subl in in stos iret lock repz inc mov xchg or cmp pop jmp js inc icebp ja and mov jmp daa lret inc pop outsb mov xor cmpsb rcrb push and popf or mov stos add and adc outsb stc push adc dec rorb cmp push jns pop in jmp or adc lods mov pop xor mov int3 lock xchg mov call sub pushf js scas addr16 sbb mov rolb cmpsl pushf dec nop push jbe adc inc adc ret mov adc adc push fnstenv push sub inc sub int3 in adc addl adc rorl fdivrs xchg cwtl out adc mov sti adc sub ja lods std hlt adc jns sbb xchg jle popa cmp mov xchg into add mov das mov scas push push xchg adc inc popf inc inc in xor std call fimul call pop outsb les adc sub jns push lcall pop add adc jns adc cwtl push inc sbb mov cmpsb push pop push jg lahf push in cltd add push jmp adc aam mov stos sbb xchg jno leave dec nop inc jo xor mov adc or lods mov adc sbb and sub or jb xor push inc lcall pop in adc cmc or mov inc xor lahf xchg inc or lods mov mov mov les roll pop mov mov insl add or fdiv sub jecxz,pn insl xchg or xchg sub pop xchg jne,pt fwait adc arpl sub push loop gs notb mov add add adc (bad) in mov mov dec fiaddl out ret cs mov cltd lds js or out or cmpsl mov cmp push inc add loope xor lahf xor roll scas push repz push dec add ret push mov fcompl insl inc test out push push das insl xchg adc xchg push adc rcll adc adc nop mov cvtdq2ps adc fdivs inc sbb dec adc xor xchg movsb or xorl lods (bad) adc idivl xchg outsb aas pop pop (bad) sub adcl (bad) pop adc adc inc jae xchg mov xchg mov into xchg sbb jno mov add (bad) in cmp mov push fnstcw push sbb dec lea sub aas sbb jno mov mov cmp adc xchg int3 stos daa dec pop into ja mov dec adc ljmp std mov dec add add xor inc sbb adc jo fcomip loopne adc mov push popa cmp (bad) int sub fsubs dec out dec mov mov pop shll sbb lds shr xchg out test sub or xor rorl xlat int rclb out cmp mov sahf repz icebp sub mov popf mov mov lea xchg pop out xchg ds push or and cmpsb nop int adc xchg xchg push aam push adc dec fnstsw mov and fs adc lret hlt subl test cmp cmp sbb mov adc adc jge or and das popf cmpl sbb fwait nop cmp xor sub adc (bad) push mov call push pop dec fcoms pop jb daa outsb lea add in test cli adc lahf cmp sbb dec adc inc popf shrl es adc xor jae mov (bad) adc and pop jmp jo dec outsb daa jp adc insb stos cld or imul out push jae or mov adc adc sbb movsl (bad) pop je or and inc xor adc dec cmpl xchg rorl std loopne (bad) orb or cld test xchg add (bad) imul dec scas push cmpsb movsl sbb pop sub adc out (bad) in shrl push fsubs in enter pop cmp sbb ja adc fnsave rcrb cmp mov push lret mov std fimul adc sti mov pop negb repz pop insb and test test inc xor sbb sbb add rol jge or dec jl jns rorb out mov or jno fisttpl repz popa int3 das (bad) or mov adc iret dec add std lods jecxz sbb cmp movsb mov cmovbe ja pop jne fstpl cwtl cmc push mov or jge adc sub push imull shlb std ret into lret jno lods pop xchg das adc iret xchg (bad) aas push mov cmc pop sbb dec adc or inc dec repnz lea adc lock fcomp psrlw pushf push sub les adc xor mov add out adc mov jmp test rolb push mov mov in lds sub negb notl add lods mov mov int xor adc adc bound mov and test dec cltd jo push (bad) sbb (bad) int ss sbb or jnp sti mov pop lods adc pusha sbb xchg lret sub ret adc jo or push inc or (bad) mov mov stc sahf movsb andl (bad) add arpl popa mov and jno mov nop xor sti ja mov adc test shl adc fdivrs push movsb adc fisttpl adc mov adcl sub cmp popf mov rcll stos sbb mov gs in inc jle mov or adc xchg xchg mov dec lcall adc adc icebp cmp dec xchg mov add sahf cmpsb mov xorl cltd pop mov or bound cli hlt dec insl adc test cs repz jae daa mov pop mov mov dec mov or cs push scas mov insb out xor adc repz mov bnd xor popf jmp orps ljmp add push dec mov and or inc jno and out adc xor inc cmp rolb mov out push xlat add push mov adc mov add into adc leave fldl shl divl pop pop and sti mov lock clc pop pop rorl mov or in (bad) mov fwait push mov xlat jno pop pushf test sbb jnp mov xchg sbb (bad) dec adc lret shlb mov pop and jb sbb add lock xchg andl popf int3 adc mov comiss outsl jne nop mov fcompl jle cmp xor xchg jge iret adc adc xchg push adc push dec std lahf repz out sub mov adc cmp fldt adc add inc or aad outsb adc push cmp cmpsb push out sbb (bad) jae mov and mov inc pandn negl or scas (bad) adc xor iret out adc adc mov cmp mov and add xchg add mov xchg lret test xadd inc (bad) loop inc mov adc push leave dec cmc pop in adc out add mov sbb frstor lcall mov dec cmp sub arpl mov xor adc fisttpl sub add jecxz out push pop mov pusha aam test or in adc mov lds fsubr add mov xor jno add jge mov scas or xchg mov pop fidivr pop popf mov mov dec inc jmp adc std adc repz out jns adc fidivrl adc into testl lret movsl es movsb and pop adc dec inc add inc rclb out sub mov cmpsb pop lcall add das popa popf push stos in pop fwait loope das pop push sbb adc fs mov mov movsb cmp xchg push xchg (bad) cmp sti adc jecxz cmp sahf sub gs out adc dec dec mov sub or cmp sbbb not or aaa adc push cmp mov into stc mov scas adc cmp fdivl mov in les pop outsl push fldenv or orl dec sahf add push out roll sbb fnsave add mov das push maxps sub rep inc sbb stos ret push cmp mov lods leave dec cmpsb in jmp or mov sub rcll lds mov stos js sbb clc adc (bad) push add loope out sbbb mov cmc inc aaa das mov xchg mov loop hlt inc adc and aam stos lods xor aad pop dec xor rclb inc adc and cmpsl adc loopne stc ret gs jp fdivs pop adc or psllq inc aas add call arpl xchg in imul sbb sbb repz mov dec int adcb pop mov (bad) jl xor movsb neg add (bad) hlt mov adc or jae aam (bad) jno popa aas adc clc sbb sub (bad) (bad) mov insl xor fistl adc xchg fdivs adc mov in inc sub cmp decb hlt cmpsl inc insl (bad) adc das (bad) jp packssdw int3 pop jge cmpsb repnz andl in in adc add ficom test pop popf pop add fcompl lcall int lret test adc pop cwtl jns sti js scas cmc mov adc stos or xchg mov mov mov sbb nop adc sbb cmc cmp pop ljmp inc adc adc mov les adc jno lods pop cmpsb imul pop int3 dec push mov xchg je dec sub xchg inc test dec dec dec outsb (bad) mov mov pop pop xchg adc adc pop pcmpgtb jmp (bad) fnstsw push dec xchg mov mov jnp mov cwtl aam mov adc cmp jne out adc cld loopne mov push sub cmpsl jge xor (bad) or in loope sub test pop arpl adc sahf movsl mov xlat lret push dec or or daa jmp test lods jmp adc inc push adc aam pushf add test (bad) xor repz push cmc bound insl push sti les inc pop mov addr16 inc push dec sahf mov fsubrs adc xchg jnp fdivrp cmp xchg subl (bad) adc pop dec adc stos fs mov loop out fcompl out adc cltd dec test jg das cwtl movb dec adc and adc sbb xchg std inc ljmp sbb pop push lock clc in js (bad) adc mov pusha mov sbbb sbb mov xchg iret xor add (bad) fild add push data16 mov jbe test sub pushf inc sub repnz aaa mov repz mov addr16 stc sahf adc pop mov notb xchg lea xor sub inc jg (bad) sub (bad) jle or jecxz loope andl out adc nop andl adc outsl and pop xlat cmp mov lods cmp sbb adc call mov jge pushf les add push sbb sbb iret out mov jl imul stc out lahf pop outsb int lds jp xor mov repz and mov cs outsl cltd mov aad jecxz inc cmp mov cmpsb jne leave push mov dec xchg insl out pop push dec mov movsl mov loopne fisttpl fs mov dec inc (bad) int3 add adc mov sbb adc out sub push rolb mov das pop mov movlps xor cmpsb mov xor fwait mov pop iret xchg rorl or mov daa rcr stos push sbb dec dec push cmp jp fwait lods or cmp mov mov adc and cmp lcall jno pop sbb adc test hlt adc lret mov jle (bad) and pop inc adc ds adc mov jg dec jmp shlb test push adc or mov sbb sbb adc pusha or inc mov mov jno push dec push adc into loop xor stos movsl adc adc lahf xor mov jns adc pop bound adc pushf inc call adc aaa jb popa mov jno cmpsb scas inc int3 push cmp mov lret das jbe lods adc dec pop lock data16 jl xor ss push (bad) adc adc aaa xor pop pop cmp mov or pop outsl mov insl and mov ret insb or inc bnd stc add je cmp sbb dec pop add je xchg stos push adc push (bad) sub adc sti push jo imul pop shr add sbb clc nop (bad) jmp hlt push pop dec mov push mov ficompl push call mov nop int3 ss mov (bad) enter adc and mov rcrb add push insb popa adc sbb sub popf adc mov mov pop adc dec xchg fcompl mov ds lods cmp inc pop adc lock or inc out mov movsb pop adc add pusha ret push xchg cwtl inc mov jl dec pop hlt cmp push adc mul int inc mov outsb adc inc lock xchg fistpl loop rclb sbb mov or add adc movsl rclb repnz adc mov icebp xorb ljmp cmp push xor xor dec add adc out add cmp jno mov stos adc adcl mov (bad) mov leave xor xchg jb stos aam in mov clc sbb pop xchg test repz pop sub push or mov cmc jecxz (bad) loop or add mov mov rolb adc jmp and jnp mov (bad) jo adc loope inc bnd (bad) jno push xchg xchg push xchg add mov xlat or rclb dec je out and jbe aaa dec inc cwtl fldenv jg (bad) cmp addr16 repz ret push cwtl push leave adc and add sub jmp mov mov jo adc adc xor dec mov inc xchg mov dec pop add nop call pop push jle out push mov sbb push pop int3 add jecxz cmc fchs fistl into ljmp jno and add pushf mov mov mov lods sub enter negb out push mov adc scas ficom out mov nop repnz dec (bad) xor cld add or imul fwait jo jnp jl xchg mov dec and or jne je pop push aaa xchg push pop shrl mov test adc sbb (bad) mov adc imul les cmp pop fstpt movsl es or mov movb mov add repz jnp adcl xlat int3 enter dec xor lods aas mov add push pop mov cwtl xchg ret adc inc xor outsb mov lret cmp cwtl repz popf or adc insb aam mov pop out cltd xor cltd push scas push inc adc shrb sub or stos shll adc into inc sbb cmpsl pop jns or fildl xchg in std mov cmpsb sarl cmp add mov and xchg sbb (bad) jb adc or ret and mov mov or stc adc test (bad) xor mov xlat rcr inc pusha enter rcrl xchg dec out sbb adc add lods xchg sub xchg arpl add add fwait pop xor sub jp add (bad) or stos dec subl fcomp daa adc addw fsts ds rclb xchg jo shlb push xchg int3 adc jmp xchg mov (bad) les inc arpl adc sub jle mov (bad) loope mov pop test mov sbb divb jnp or stos and adc stc clc mov sbb cmp add mov adc or xchg xor lahf int (bad) out adc pop add add test jo lods sysret sub test movsb pop int popa add jge adc test je cmp dec adc iret sbb lahf into in nop sti adc movsb sub mov xchg std in pop mov cmp jge mov ja and xchg js xchg adc cmp push adc cld (bad) ja out push jmp adc repz imull aad jbe aaa jle outsb xor rcrb int push cmp pop shll ficoml mov dec pop xchg (bad) mov sbb in shrd mov cmp out jle lds pop push stos jmp mov clc int sbb rolb movsl adc loop outsb add mov sti pop sarb or das or or orl ret pop mov popa inc mov lret and mov lods sbb or push adc xor sbb adc inc stos adc mov test add ret lods insb cwtl lock jl adc xor and pop adc fdivrs jns aaa xchg lea push mov sbb sbb jg pop inc sbb dec adc in push stos cmpsb fs nop sub ljmp adc xor pop sub rclb mov jge test adc dec push or xor std out hlt xchg mov pop pop fidiv (bad) pop xchg aam jb mov mov pop xchg adc repnz jo xor pop cmc cmpsb cmp insb (bad) sbb or mov stos lcall adcl in ss pop inc aam mov xchg add sub inc jmp adc sub sub xchg jns cmp shrb adc or push leave dec fnsave addr16 in ljmp out push or mov hlt lcall pop shrb popf daa arpl cli pop mov ret dec setns mov adc push mov test mov mov fiaddl jbe test pop cmp shrb lds arpl jbe decb (bad) adc jg xchg das cmp add sub nop stos pop lret rcrb dec loopne sub insb shlb adc pop test adc add pop xor and cs adc sbb rcll ret sbb pop fmulp mov push jns lods (bad) mov xor iret xor xor sub out jecxz hlt imul loopne cmp fsubl rclb lahf add scas lods mov xor push aad add (bad) or mov movsl push adc cwtl mov cmp push sti or jg cmp sub mov adc cmpsl fiaddl fisttp repz sbb movsl (bad) cmp or rcll ljmp adc jecxz adc ficom sub and notb or xchg les mov mov add fisubrl mov pop arpl sbb push in hlt lret jnp fnstsw xchg in adc ret inc imul mov decb mov or mov inc mov mov movsl adc xchg push inc xchg ss add std es jno aad add int nop prefetcht1 sti sahf loopne mov lock xchg outsl and add stos lods in movsl add ljmp cwtl jle repnz dec pop adc mov jecxz in pusha lret sbb jp jmp adc mov stos xor pop out loopne jmp lea das ret sub iret pop push jp rolb xchg mov mov adc xchg pop xor and fwait out sub push cmp stos sbb lods adc jae sbb out pop adc inc jbe mov dec movsl adc imul adc imul cmp adc mov mov roll dec pop push adc iret pop mov sub test xor cld xchg fstpl cli loope mov ficom pop lock je ret cmp cmp int3 xor jbe test les sbb xchg xchg daa pop push mov mov fs (bad) enter aam push pop adc in mov scas std push rolb ret (bad) unpckhps jge mov loop mov lret xchg nop push out (bad) adc adc lds or test test iret ret pushf inc and pop jno and lods push add xchg outsl jns fdivrl jl add gs xor jne mov sbb (bad) dec xchg adc sub repnz rolb mov lea mov in mov jg shl es lock jnp pusha out or xchg mov lods jecxz mov aas xor jo out movsb cld inc or dec or adc or (bad) sub mov fsts inc sub adc pop lea sub adc add pop mov jecxz adc jns adc push jmp cmp nop adc dec js push stc xchg dec mov pop fidivrl sub aas imul pop jno push ss fcoms push (bad) and xchg or test cltd dec insb les adc fsts pop xchg adc pop cmpsb push adc inc bound mov xchg adc inc daa mov imul in stos lea les or (bad) imul and out pop xor mov std xchg push mov pop pop cmp sahf lret sbb or mov ljmp fwait in test add shll bound push cmp (bad) aad sbb jns push out es repnz and adc ror push das or repz dec mov mov mov leave sarb pop push shrl cs push hlt into (bad) outsb sbb push xor mov add jmp push hlt orl push xchg add int3 into adc add ss leave repnz push adc xor sbb cli inc sbb add dec mov mov jns and mov pop insb inc xor fstpt adc stos jle adc push push jo xor decb xor jno aas sub cltd int cmpsl in repz iret js adc (bad) jo inc pop sub mov dec adc lock je xchg repz pop fisttpll add clc cmp adc lds lock nop xor arpl movsb dec adc adc test cmp bound rcrl jp mov mov scas stos xchg in push lds and xlat or popa jge adc mov sarb ds loopne rolb outsb mov cmpb cltd js inc mov out or xchg (bad) cld stos test cmp clc mov sub adc addr16 xlat dec sub or add notl cmpsb stos ja mul jne rcl std xchg out mov mov sub adc xchg paddusb test lea adc cs dec adc jbe push je and pop xlat inc pop push out adc movsl fbld mov inc sbb (bad) jae call push rolb das xor mov xor fimull push xlat inc sub adc ja daa push mov add lahf js fwait loope sub mov popl mov push adc pop icebp jmp push pop jl call or roll lds inc sbb pop mov cmpsl (bad) sbb adcl bnd test imul std jmp movsb pop xchg iret lea call cltd into call repnz cmp adc or stos adc fcomps (bad) jns sub xchg movsb ror add aas mov mov dec pop cmp or sub dec adc mov push push add jne or pushf mov rcr sbb or mov or cmpl adc add sbb fmuls mov or div stos pop outsl xchg mov sub fild sarl inc jmp dec lea mov dec sub or and inc repz lods mov sbb out mov repz push ret scas stc ds or xchg jo fld xchg stos dec jbe gs pop add mov movsl xor pop in dec (bad) adc sbb add ficompl or addr16 inc mov and adcl xor and mov adc mov mov test mov jecxz sbb movsb pop and pop sbb xor scas jg cmp mov lock les mov mov pop sarb in adc push ret pop adc jge dec pop and bswap out xorl xlat (bad) es adc loope pop lcall push cmpsl xlat and jecxz stc sbb xchg jle adc das mov adc jge xlat pop repz bound ljmp (bad) mov dec jge (bad) adc mov sbb adc mov jecxz cmp in sub add aam adc ret sbb inc (bad) je mov inc adc in push xchg pop xchg inc xchg (bad) or (bad) jne sub mov aad movsl cld adc mov xchg xchg adc insl and adc imulb loopne inc pop movsb adc rcll mov cmp push flds stc arpl sub add mov icebp adc adc imul xchg push mov push adc ljmp adc sub or push push adc sub cmc add imul aad add sbb sarl cmp sbb cmpsb xor aas cmp pop mov cvtdq2ps daa jns outsb or adc sahf push and inc cs enter adc (bad) push adc inc cmpsb insl das jl add pop mov inc (bad) xchg adc sti aad dec test adc icebp clc pop mov and jo insl ret fcomps push nop push fidivr sarl cmpsl mov lds sbb (bad) in je xchg adc mov loop fnop mov outsb mov mov (bad) fldenv (bad) adc cmp aam lock hlt fisttpll movsl fsub fsubp aam push and sub mov mov stos das xor pop sbb adcl pop shrb add add sub pop sbb jns sahf test mov add push popf cli fwait cmp aas mov in xchg add and jb ffree adc add inc rolb mov (bad) xor popf fldenv jne mov and daa jae in lahf sub sti push out cmp mov in fsubl aas out std nop dec rclb outsb push (bad) movsb sahf daa dec in mov pop out pop frstor mov (bad) int or stos mov add pop sbb and cmp enter insl xchg sub (bad) adc dec pop jbe orl cmp rolb in cmp adc add lods adc lods dec or lcall int3 add rcll jl stos mov adc xchg lods add sbb dec dec xor inc ja pop mov cmpsb ljmp insl and es push inc lods jg loope bnd or adc pop scas adc sub xchg lods push lcall ss jmp inc fbstp es pop into push adc jbe xchg adc lret fstpl adc sti mov jne and xor adc leave or xlat lods rcrl pop inc mov add insl pop adc sub add mov mov cmc fistpll repnz mov sub int pushf nop adc icebp bound lea dec xchg jl adc out movsb dec jmp add mov xchg mov jmp jno adcl pop cmp pop sbbl fisubl lcall jmp cli mov sti int lcall (bad) in stos stc fwait lods mov push imul aaa jo notl mov adc jle xchg adc sahf int3 (bad) outsb jo adc cmp dec push fs lods mov adc je mov popf push insl adc jnp,pn out jge add popa pusha mov sbb ds inc xlat inc dec lret adc (bad) mov adc jnp add enter cmp (bad) loopne sub or adc loop jge das movsl dec xchg push lcall pop cli rcl cmc mov dec pop adc cmpsl push adc aaa mov cs adc in or int fnstenv cmpsl adc out sbb notl lahf or lods inc rclb lret cmp inc fidivr mov mov mov jns jle repz adc inc sbb jmp mov mov in push or movb je shrl cwtl xchg mov (bad) imul lea jne adc stc adc mov mov xlat add push pop adc cs jmp mov (bad) adc roll adc xchg mov inc clc dec fnsave roll lcall (bad) mov (bad) mov pop test movsb repz jg adc xchg mul (bad) mov lods (bad) je adc sub add icebp cmp or adc out push daa mov cld jne adc mov mov lahf lret sub push mov push adc adc or jne cld das push cmp jno cmp mov inc adc js cmp adc enter cmp jge sbb fwait or cwtl fnstsw push js in insl fbstp mov mov (bad) aam popa (bad) jae mov push cwtl cmp negb inc addb push cld or scas in lock iret mov hlt or aam fcoms fs add adc xor push cmc jo adc xchg movsb pop pop fisttp into mov or addb adc stos pop adc cmp push mov loopne dec xlat in xorl mov inc sbb pushf push adc and push in push adc pop jae adc loopne out movsl mov add in add adc mov sti push (bad) adc mov dec mov adc imul ror or cmp fmull inc xchg cmp out push inc jo push iret adc inc data16 loopne rcrb mov loop xchg mov out lock call out ljmp outsl push jb lods add sbb and or mov sbb stc xor xor iret adc or mov push sub adc cmp stc mov push xchg mov and jb test dec xor mov int3 out xchg mov mov push rcrb jle adc mov sbb push jb jne or (bad) je mov cwtl out (bad) syscall jno cmp sahf aaa aad push inc adc xchg xlat jecxz cli jmp adc ficompl icebp mov inc adcl scas or aam js into or into cmc adc push add xchg lret pop pop mov repz nop iret movsl xchg or sub mov test mov outsb mov adcl movsl je inc repz add pop sub jge mov repz cltd jne push cmc xor mov test jg cmp std mov adc cmp sub js ret int lods xchg out mov loope sbb adc pop mov outsb and lahf (bad) push push stos cld rcll addl rcrb push mov xchg or cmp sub and ljmp rorl adc push push add adc jns and mov aam lret pop icebp sub mov xchg outsb pop xchg adc mov adc add mov mov inc push xchg iret xor mov sbbl mov jo pop cmpsl aam test push mov sbb add loop test adc jo xor push adc xor xchg ljmp notb cmovbe les fwait lods out mov mov das adc icebp pop out fistp jnp sub pop sbb cltd inc fsubl loope fwait aam sbb aam mov adc jne rclb pop orl xor sti add stc sbb nop test pushf out dec mov in out nop loope mov test mov fiaddl and dec pop add adc sub repz jno sarl inc mov cltd pop sarb cld jmp into lock arpl std inc (bad) or pop mov stos mov leave into je into xor mov inc pop jae stc dec cmp je fidivr rcr add adc cs pop aam xor mov push daa and (bad) adc (bad) adc nop push sahf xchg lock pop xchg jmp adc insl stc fbstp xor xchg xor xchg aaa adc into fcoms push bound adc sarb in lods mov call cld popf (bad) lcall adc or subl adc cld sahf mov sbb lcall loop sbb iret popl adc push lret scas push adc js hlt daa aad jbe (bad) fisub dec cltd mov mov add aam mov test js mov xchg movsl pop (bad) mov mov add mov pop cmp adc push outsl sub gs pop insl sub lret dec jnp pop dec (bad) call inc addr16 mov mov mov je lea mov movsl pushl pusha mov mov add xchg pop jl jno aaa adc movsl cmpsb int3 adc add sbb mov hlt adc out pop cs aam jnp mov sahf mov out dec mov (bad) mov push dec mov aad inc sbb icebp adc add movsl cwtl out imul pop jns rorl scas mov (bad) cli pusha mov push je fimul idivl dec pop adc sub and sub hlt test pop jno inc mov int ljmp push adc push in stos jp pop adc inc ja adc xor cwtl xor out shrl das cli pushf xor adc cmp sbb cltd out clc stos or push sub mov push cmpsb dec push sahf xor (bad) mov insb lret xchg mov push rolb mov call add mov mov imul ret dec ffreep pop jmp adc and jmp and gs or adc in mov test jmp adc aam ja cwtl push lods cltd pop subps jno add adc das dec loope adc dec imul adc pushf add enter aam test in fistpll mov push sahf push lret or cmpsl inc inc ss push mov add stos loopne repz adc leave pop popf data16 pop movsb movsl cmp jne adc push dec add add xchg inc xor inc xor enter dec int popa adc icebp cld xchg adc pushf cltd xor or (bad) cmp jge cmc adc add dec mov xor sbb enter insb imul repz add sbb or xor pop pop ficoml ds mov push add pop sbb mov adc inc inc rclb dec (bad) mov stos rclb inc repz mov mov nop pusha mov test xchg mov adc jns (bad) push sbbb lcall fwait mov sar cmp pop (bad) rcll xchg mov mov popa je jnp mov or loope pop mov clc sub (bad) cld pop shrl lds add xchg daa popf sbb adc adc mov push (bad) nop add out ds idivl adc mov jbe adc call data16 and int3 ffreep adc dec iret or mov ja shll outsb nop movsb sahf add es push jmp fs xchg popa and test mov inc ficom leave push ret addr16 loop (bad) sarl mov int fist inc or cmp xchg sbb push pop (bad) adc setp inc repz push (bad) mov and insb cmp dec sahf aad pop adc jg popf sub mov movsl rcll mov mov xchg gs add clc lret iret xor es mov loop movsl je adc add cmp repz sub sbb mov push sbb fcoml xchg jle outsl mov stos mov or add lea fldl push pop adc and lods loop ja mov push aas adc sarl mov mov add sub push dec stos adc outsb cmp pop inc sarb loope rclb cmp mov je fdivp xor (bad) fildll and add jnp lahf imul repnz lods cltd ja mov in pop mov adc aam lds clc rclb (bad) jo repnz imul or iret pop leave out adc aaa and xchg xorl sbb push push sub outsb rcl xor out std loope adc dec (bad) push and nop jp adc dec out xchg cmp mov iret mov in sbb adc ret pmaxub xlat adc xor xor lods jne (bad) ret jns push shrb sti out or mov pusha inc repz mov pop mov adc mov xchg mov sbb sbb lahf (bad) sar adc push int3 sub sbb in cmp jbe adc xchg sub fcoml or insb and lock xor leave adc sbb mov out xlat mov add pushf test xor ja mov aam mov imul inc les adc cld xchg andl dec adc aam pop repz dec orl jb jl mov sub dec inc adc pop adc push das ret push jmp push xor adc or or leave inc jbe jle in repz dec (bad) aad adc ficom inc sub aam pop xchg jns adc lea int3 add icebp movsl inc push loope mov jne out jbe nop not push xor mov mull mov adc sbb cmp ss pop scas lahf jmp mov cmpsb stos cltd test adc test inc jne mov jle outsb dec xor push mov xor dec imul mov xorb xchg lret jne push add mov adc mov adc in insl in nop test ret pmaxsw jno cltd or adc lret push or repz (bad) int psraw mov cwtl in xchg push enter sbb stc and nop icebp gs mov ret sar cltd outsb mov aam mov xchg adc adc out mov pop mov shll xorl xchg loope adc leave test xchg pop inc xor (bad) mov (bad) adc popa and push fildl jmp xchg or inc pop jp in insl and mov push push rol test and dec pop daa adc mov (bad) iret jl add in adc (bad) out cld shl adc lret rcll aas mov hlt jp mov sahf repz scas data16 add lods sti repnz sub es jle jne les das dec nop mov ds xor cmpsl sub dec sbb movsl mov jb mov jecxz add cmpsb dec (bad) jnp adc (bad) imull adc (bad) stc pushf mov cmp sub sbb mov cmp setge into or mov cmp inc movsl pop and adc mov jnp (bad) sub (bad) stos dec daa mov cmpsl rclb out mov rcr sbb pop in xchg xchg pop xor in xlat adc movl (bad) sarb add xor nop mov or adc enter jo sub adc insl adc scas add adc fxch scas jle sbb push fs pop or lahf add xchg mov jno xchg nop add adc aam ja mov push frstor cs adc adc or stc out testb push leave das cmp (bad) test dec adc rolb adc loop testl fmuls jne,pn cwtl adc (bad) mov sbb in incb push mov cmp shll lahf and jno mov sbb cli adc sbb xor cmp adc adc mov push xchg inc cmc cmp sub sti sbb pushf (bad) loopne adc mov xor test scas in pop mov lds dec jmp movsb into mov cmp xchg cmpsl jecxz (bad) jns add out or pop and sub jle scas adc nop dec out add jae lds ret add outsl or rclb cmc pop adc loop mov lock jns cmp sbbl lret je mov nop push in cltd pop adc movsl fs jg pop cmp sub sub xchg repz add dec nop xor dec in push push push xor stos add or popa push push sbb test add bound lret push adc pop loop xchg cmp jl and adc fsubrs adc imul mov lahf add mov or aaa nop push push push or insb xlat popa add push push cltd dec xchg xchg mov lods xchg fmul jle mov addb arpl adc enter jo call das rclb shlb sub in daa enter xor adc adc jge xlat push dec mov adc and movsb popa and in jle xchg cmp clc xor sbb xchg cwtl xchg orb mov adc pop xchg lock xor adc fld1 insl cmc lea adc pushl idivb (bad) sti int3 lods dec cmp or (bad) cmp mov imul out mov adc adc sbb adc mov test lret and scas popf cmp push movsb ficom jmp pop test adc sub or xor fwait pop jnp adc out adc popf pmuludq add pop clc sbb jnp rclb adc hlt inc sbbb bound add mov inc movups into std or sub ljmp loope add push push sbb or adc mov lahf stos mov ret xor jmp out in adc jp in mov inc jo bound imul mov sbb lea dec inc jo mov adc lods add adc push pop push add push inc out pusha (bad) repz cmp outsb adc scas mov jb (bad) ficomp iret pop insb push scas mov cwtl or js ficomp mov pop loopne iret pop xor cli rcl push add sbb mov std lret test cmp xor inc jle popa dec (bad) fnstcw nop mov jp subl adc scas leave and mov (bad) pop sbb or loope movsl push xchg daa data16 jmp (bad) xor ret ret jns ss mov iret jmp sub push adcl fcomps rorb mov int fucomp repz cmp jo dec mov inc negl mov jno cmpsl sbb push inc jg sbb repnz mov push add adc jae fldcw dec hlt inc fistl ss aad call gs mov hlt and inc loopne icebp push (bad) cmpsl (bad) repz push fiaddl je in adc jp inc lret cltd lods mov adc cmp movsb aad sub std les int3 pop add lock out add test mov adc add sti cmp stos mov iret ja out xor mov and jge (bad) push fmulp pop cmc adc lret in mov or adc mov cmp pop pop add adc aad out adc add dec sub outsb fsubl fs pop repz adc cmp mov nop push loope cmp or lcall adc ja mov dec cmpsb aaa test pop mov dec xor cmp add and rcl jo pop xor hlt ljmp out jb push sahf adcl test lcall cmovo or daa leave jecxz icebp sbb lods popa sub les push jp movsb ja inc sti adc sub or (bad) mov adc outsl rdpmc lea push cmpl xchg rcll sub jle sbb adc dec adc adc out xor push push fiaddl dec xchg sahf adc jne or add (bad) and dec dec and movsb adc sti out repz repnz xor adc or mov push cmc sub adc jne pop jnp inc inc adc loope and mov shlb add adc sbb lods and out mov aad (bad) jae adc mov jne popf test arpl mov repnz enter sbb xchg outsl adc into imul shrl mov mov sbb loop add or out sub aas jge add adc pusha aad pop lock adcl pop out (bad) repz nop repz sti repz xchg fwait or dec mov test in push sbb xor clc pop push jns pusha insb dec repz sub pop sub leave jnp push rcll jno sub add inc adc jo sub gs adc xchg test xrelease dec out push mov push xor sub pop test fs xchg cs jb fnop mov sbbl and or pop gs outsl jmp xor fucomp sbb decl pop fnstenv lods sbb out add (bad) jge nop jnp cmpsb into sbb stos cmp pop repnz rcll and cmpsl mul es out jle into sahf cmp fcoml enter ds jne mov or or push xor scas in xchg pop in insl sbb adc sub xor adc in push adc imul jge push aam pushf (bad) repz test mov push lret repz cmc push push fcoms mov mov jb cmp mov aaa aam sub hlt jg hlt or pop pop mov dec mov adc fldt lea jno pop sbb jl mov in (bad) or sub jl mov xlat fldenv (bad) jbe jp xchg sbb das ret pop mov cmp inc ficompl mov pushf mov hlt mov repz movsb mov testl and or les mov and inc repz test pop adc vmread scas stos pop push and pop sahf sbb xlat mov js repnz fistpl leave dec lcall cmc rorl adc xor (bad) jno fs adc cmp push stc adc mov je into aaa adc repnz and xchg imul nop int notb push jne jp adc (bad) je inc jmp test pop sbb pushl stos sti mov push pop pop adc call div push frstpm(287 jecxz (bad) sbb adc lods stos pop xchg test (bad) mov pop rorb gs les mov xor adc loope fnop ret cld xchg adc cmp xchg daa aaa (bad) stc jno cmc data16 adc and mov adc push fwait jmp imul sbbl in xor mov dec movsl sbb int cmc repnz fs aam rcll xor pop mov lea sbb jp xchg jb adc js lret adc jmp orl inc adc mov xor push or clc or mov cli icebp in xchg add repz push push pusha into mov add jmp pop pop add or rclb (bad) mov test fcomps div sbb (bad) fldl jmp mov adc add fistl bound fcomip pop sbb repz mov mov sub mov jle rclb fidivr pop lret (bad) insl xlat pop cltd sub and add push lea arpl pusha sub mov mov popf or iret loop sub fwait test xchg adc dec xor push xchg or jmp fcomp or aad test xchg mov fcmove rcrl jne (bad) rorl pop mov adc mov cs out jne dec loop and mov adc mov popf cmp add cld fcoml xor xor lock movsl xchg aad dec adc push out nop stos addr16 mov arpl push aaa pop xchg test insb fimull push addr16 pop (bad) add pushl shl ja fadd adc xlat mov pop scas adc imul popa rcll pop xchg (bad) lahf aas adc sub inc sub dec sahf lods jb dec movsb pop xor sub lods stos mov jo popa (bad) into and add mov xor adc cmp imul xchg push into dec mov mov adc in lods mov (bad) hlt test xcrypt-cfb cmpsl and dec mov rclb adc stos and pop or dec dec fnstenv mov ficoml (bad) imul inc data16 adc out or adc popf repnz bound add (bad) addr16 adc jle enter aaa adc fildll jmp test imul arpl (bad) in sbb mov mov and testb push mov adc call (bad) pop adc mov (bad) js xchg pushf adc jbe ret or adc jb dec stos loop pop adc das in std leave push adc jecxz cmp add movsb adc sti xor fcomp xor scas mov pop adc in pop pop out std adc das rolb bswap adcb xlat pop sub mov pop jle jmp xor jbe fdivs sti roll arpl adc mov ret adc and mov jge adc sahf dec icebp scas fisubr popf frstor in jno cmpsl sbb xor add mov gs add sub imul mov adc mov and mov pop cmp aam or adc fdivp arpl repz sbbl addr16 mov inc add ret push inc adc mov lcall sahf sub jnp push adc nop imul jecxz sbb or pop test (bad) dec call pop cltd adc mov lods adc les dec cmp add mov sub push mov in push xchg sub xchg dec cmp cwtl out (bad) adc clc sub mov in or sbb stos (bad) cmpsl ret xchg add adc xchg mov adc adc lods (bad) xor cli jb (bad) cs pusha lock int3 and loope mov or pop mov and push jp push add xor loop pop sti add das into rclb divl call scas mov lds lods jecxz sbb addps fcmovb adc jl (bad) sbb jge daa loopne and sub pop inc test pop enter jp ss icebp popa adc cmp mov sub sbbl insb add pop push mov popl sub adc adcb jne adc leave es push pop testl stc dec lock mov rol daa mov mov int3 in adc std pop inc das mov sub sub inc aad cld lret (bad) aas push adc in leave mov shlb inc into or jmp mov call xchg adc fmul push setae sbb fisttpl adc mov mov sti push aam jge mov imul cmp lods nop scas xorl pop adc mov (bad) clc lods jne xor out mov nop into cmp push dec sbb sar mov hlt sti cmp mov adc shll je fimull mov fs xor fwait popa stc jmp push out sub int adc sub les aam sbb je add push mov out pop xor dec mov xchg sub int push jae jnp cmpsb or (bad) jbe xor push or inc (bad) ss sbb push mov outsb int addl insl xor sub in sub imul pop add and push js test mov data16 mov inc sbb pop push xlat mov mov sti aaa sbb jns dec adc out ds lea add mov test xchg pop popf push cwtl in xacquire sub or and sub add fistpl jmp lcall mov xchg enter fwait iret push mov cs ljmp mov push adc sbb ljmp inc adc add pop jle mov xor jb ret fcomip push dec xor fnstenv xchg and not mov aad adc mov lret push orl adc fwait xor aaa xchg stos lcall xlat cwtl adc int push fwait inc sarl roll adc ljmp xor sub int3 sbb test das orl add outsb (bad) jge jne rcll mov add outsb mov jbe pop rcll lods push arpl inc mov push xor into rorb and pop dec cmp cmpsb add pop stos mov aad pop adc mov sarl sbb xchg jbe xor or mov push mov cmc sub mov xor daa ds or push movsb mov pop bound icebp shrl jecxz mov pop cli push jmp and fcoml inc dec stos xlat test cmp sub icebp cmp movsl stos popa push fsubrs pop adc vmread pushf adc fldcw add cmp call inc xchg adc shrb jbe and jnp andl mov ficoml cmp or adc xchg outsl adc jecxz push push adc rcrl push adc lret popa in adc mull imul movsb nop adc cmp iret mov cs lods adc in xlat pop push cld push shrb sbb aas sti cld orl lret push orps or faddl sub or cltd dec sub and mov add xor inc aaa pushf inc jle or pop ja hlt sbb sub or ret dec lds pop inc push sub push sbb fcoms insb into (bad) fnclex jne add mov and cmp mov add fmull repz add lds pop pop pop adc imul in adc jl ds or push les mov adc mov popf jge mov and out dec add sbb jmp adc jb ss stos add aaa mov fmul inc push adc popa jg adc ret cmp hlt adc adc sbb xor or les add xor mov adc mov ljmp testl out lds ja adc push sarb xchg cmpsl ss (bad) sbb int adc xchg xor stc cmpsl add mov sub bsf push fcoms xor jne mov loop mov cwtl rcrb lods cld adc adc mov jb xor in (bad) into lahf arpl xor mov mov out aad or pop dec addb je out call push and jo sbb cld dec dec jl xchg lahf movsl adc loopne cmp or adc sbb cmp dec (bad) in popa nop mov mov out test imul jnp mov cmp adc sub jl aam mov sbb arpl push popf cmc test xchg sub mov lods jnp dec xchg dec xlat hlt mov mov add (bad) out lret pop xchg sbb push xchg stos adc popf bound adc test ljmp mov mov dec pop adc inc out or into inc push in xchg dec xchg xchg dec add addr16 repz insw mov jb mov nop adc jmp mov pop (bad) xchg movl adc lods fistl cltd xchg adc sub xchg inc incl movsb adc stc jg aad jo mov mov outsb mov mov hlt jb or out das jns xor push mov xchg adc inc dec push js sbb jl adc adc inc mov xchg push push push sbb jecxz (bad) shr das aad sub adc cmpl lds adc sub dec adc (bad) jne pop xor adc into sbb dec jg icebp dec les stos pop in dec lret test and adc in hlt movsb adc sti (bad) ficom out pop icebp push pushf andl sti xor sbb mov sti into mov loope pop jmp xchg icebp xor xor dec or mov mov push movsb push adc add (bad) adc iret mov adc push (bad) jle add repz js mov lret xchg adc or dec cmpsb adc mov rorl pop leave mov push ret jle fidivrl jo xchg imul xor sbb sbb pop sbb cmp jno stos out adc pop mov adc or pop add int aad adc dec movb adc gs adc in dec lret sbb rorb call sbb icebp adc mov dec jmp movsb mov sbb ret adc addr16 jbe or inc add test iret ret cmpsb pop clc mov xor or in pop mov or adc (bad) push fcmove aad sbb xchg dec adc inc push xchg adc icebp out mov xlat add cli outsb sbb cld and adc inc mov adc outsl pop cmp pop shrb xchg adc add insb sarl mov jno xor cwtl repz mov or repnz data16 push sub fsubs adc mov adc push add adc mov ja dec adc mov lds (bad) mov adc jne je or jbe fadds lret mov pop ljmp and bound mov adc mov push mov jne mov pop sbb adc pop mov cmp or sub in adc xchg shrb adc int adc cmp dec js mov sbb pop fadd out fwait stos lret je outsb inc data16 adc cli xor jle arpl mov or xor out out adcl int3 pop cli lods jle addr16 push inc test dec (bad) popa jne push rolb pushf repnz sbb call aaa adc out in adc mov mov les xor sahf and adc jle lds out aad push inc xor mov mov adc or jg pop push jle ds fisttpl inc clc les cmpsb push mov adc mov and xor fwait out pop das lret jmp mov testb popa call jnp sbb or jmp js jbe lock xchg loope daa xchg mov outsl adc movsl mov adc mov clc stos xor mov adc jg jo fnstcw in dec mov enter jl (bad) pop cmpsl adc cmp mov mov fiaddl and cmp repz iret push add orb sbb clc psraw cmp mov push fistpll scas mov lods xor decb call outsb mov cld (bad) adc cli stos jnp push cltd ds push lds xor scas stc sub daa and jl dec xor xchg dec aam jp popf stos jg,pt mov repz pop jnp and sbb fsub mov sub sub push push stos (bad) dec push inc movsl add jecxz pop cmp out adc and adc mov push adc jg insb out sbb int3 lock bound gs dec fimul mov sarb pusha outsl rolb or xchg fsubrl push adc je (bad) mov xor pushf lret (bad) mov xor shrl mov dec adc add popa and mov hlt shrb pusha or and mov loopne lods fcompl jl mov test jmp scas inc addb dec push mov fnstsw jns out adc lcall mov sbbl push cmpsb in push dec pop icebp lods das mov popa adc (bad) xor fbstp adc test adc jecxz ficoml adc movsl movsb into push adc idivl pop adc fcomps xor fldt dec aam xor std fistpll cld xor (bad) aad imul lret adc iret jecxz inc xchg and out adc adc xchg push push pop test push adc sbbb in jbe adc out aam jp cs dec push imul add xabort (bad) repz dec popf lds jbe xchg repz insb jle or cli adc adc mov xchg xchg pop sub pop ljmp mov pop adc or lahf pop outsb pop cwtl xchg dec dec pushf das jge repz jo repz adc mov sub adc loopne arpl pop cmp outsl push (bad) push sbb jns test rcll gs xchg int or ja adc jbe mov mov sub cmp repnz sbb in sub imul stos gs js add outsb xchg pop or in adc jecxz add stos pushf aam or xor in or adc lcall shrb adc mov ds adc daa (bad) jp xchg push out adc push or stos aad pop aas bound (bad) stc pop xor push cmpsb jnp rcr sbb test push adc add scas sub into mov cmpsb pop in loope dec lds mov xor adc std mov sub (bad) and sbb mov cmpsb (bad) cwtl dec xchg push in or add ret jns pushf jl (bad) mov rorb negb das pop movsl jmp (bad) and sub outsl test dec cmpsl push mov lea jno push mov nop push jg jl repnz adc out cmpsl xor xchg cwtl (bad) dec es mov mov pop inc add and pushf scas div lcall cmp add mov insl dec mov cmp adc mov adc sub pop ds xchg push mov aad out hlt psrlq icebp divb adc inc sub dec xchg das mov scas pop and mov dec jbe xor inc push or out (bad) xor ror inc adc loop or movsl sub fstl adc mov aas es adc out fdivl aam call cmp mov vmread jecxz xchg sbb mov adc ds pop lock pop adc mov sub loope repz pop aam mov cmp je adc stc cwtl test ss les ret clc xor mov sbb in and or adc lods fs cltd adcl jecxz sbbl adc add popf imul adc (bad) repnz xor xchg inc fucom adc or repz sbb mov imul mov fimul lahf repz fdivrs sbb fwait jl or pusha scas repz mov arpl add jmp in sub or and pop pop rorb arpl fist adc inc fldt orl pop xor inc outsl in mov inc insb mov dec mov jecxz js or dec mov dec fwait jmp adc shr lea mov out cmp aas dec test mov out adc mov (bad) inc rorb xchg xor xchg ss test cmpsl sbb mov ljmp push xor (bad) and sub repz push imul inc pushf jb mov cmp lcall (bad) adc rcr scas inc or adc lods fcompl adc fs lds lods cmpsb cmp imul sub movsb lods out sbb ror stc repz popf lock add test push inc cld push (bad) cmp or lsl mov add scas push adc mov xchg lret and mov dec hlt add (bad) mov jp fisub dec aas ret cli cmc test inc xchg pop insl lods mov icebp ljmp (bad) mov push mov dec adc (bad) (bad) push push xchg repnz (bad) ljmp pop jns stos dec enter imul sbb rorb out insl pop lds cmp scas pop or addr16 push ret das adc adc cmp out adc (bad) sub adc sub sbb stc iret mov fcomi inc cld (bad) aad lret inc fstl cpuid add pushf pop stos adc into inc adc cmp hlt scas rcll testb loope,pt mov imul push dec stos inc add mov test adc xadd lock mov bound jg xchg (bad) and sbb push jno mov mov (bad) sub mov stc out xor in fildl cmpsb adc cmp push inc out hlt adc stc fistl and leave xor add shll stos lret adc push add or cmpsb adc mov adc pop lret stc aas mov jge movsl enter inc sbb xor push in (bad) (bad) movsb fistpl repz mov xchg (bad) cmc mov (bad) in jbe sub std push mov lock jle sbb lret dec rcll div popf jne inc xor or dec adc and push (bad) addr16 push fs lods daa xchg mov lahf adc inc mov mov popa mov pop mov sub cmc fs jmp mov mov pop dec sbbl xchg jb out pand insl adc sub popa jne into push adc aam lret xrelease inc xchg adc insb push xor shrb mov nop adc jle push ja pop inc mov jl sbb aad jle sbb ljmp fcoms adc push sbb mov ret pop or jae subl dec fwait adcl pop scas idiv and (bad) jmp loopne mov jae aaa mov and (bad) sub cmp enter and ds in cwtl mov or orb paddusw mov movsl int3 cmc call mov jo shll xor test dec sub mov popf imul jns mov adc pop sbb nop imull mov mov sub pop or sub dec sbb pop int cwtl push inc push xchg sbb aaa out xor mov lahf adc adc icebp test add sub adc into sarl out adc inc sub dec jns insb adc and or fsubrs adc cmp adc lods pop test imul insl adc (bad) mov in (bad) scas push mov jle sub adc pop xor int adc inc dec mov mov ja imul dec sub sbb das notb pop and xchg arpl push fldl rcll or inc xor daa int dec mov imulb mov push sub add cld adc xor std mov xor (bad) repz mov mov or add adc xchg push pop out pop fwait test cwtl addl lods loopne jns scas das out unpckhps jbe adc inc push adc dec shrb xor insb outsb nop cmpsb jmp stos pop jecxz frstor add lcall sbb out leave add xor sbb mov icebp test xor sub subb adc push orl push adc lea lret je into mov adc dec dec dec mov paddusw jns sahf push xchg or mov fnsave sub fcomps jmp iret loope pushf js hlt mov lds pop lcall ja lods jb mov cld adc adc in rcrl mov int3 imul or push ja mov mov out lods adc pushf or xor add adc and ja jns add je out mov (bad) push cmp sbbl add (bad) sbb jb popf push dec adc or repz sti ds jae pop rcll (bad) cmp add adc xlat movmskps (bad) je mov lds dec in nop add jae mov and add inc mov pop mov push adc add jp bound or mov (bad) shlb mov addb lods and ja mov adc xor adc add pop xor test push in leave dec adc lcall mov pushf les mov xchg or jp daa lock or ret xor push jbe cmp lea daa mov jbe mov mov inc outsl xor cmp enter mov xchg cmp ret aad push mov (bad) jmp push xchg fwait aas xchg add (bad) adc hlt dec stc cmc mov adc cmpsl mov mov sti adc out pop pop enter cmpsb sub movsb pop repnz mov mov and mov fidiv dec pop ss adc adc (bad) or xor xchg fdivrs add loop mov pop std ss pop adc xor fist mov insb (bad) xchg add push adc scas clc leave add jmp icebp loope adc pop int3 iret cmpsb int adc inc xchg dec cmc jmp xrelease or adc fisubrl add adc push sub shlb adc inc xchg out call inc (bad) jmp adc pop add lock pop sub jl aam adc pop negb mov xchg ljmp repz push out fsubl jmp sub (bad) pop push mov outsb repnz jmp repz mov jp jne dec add imull mov sti add mov push aad int3 adc cmp loopw and adc xor adc xorl sbb test movsl dec and dec mov xchg enter mov lock cmpsl add mov stos das lods lea repnz add mov int3 ret arpl push push sub adc mov or dec std lods mov sbb push repz rcr add or adc out adc dec and insl mov add add cmp enter sbb push adc inc loopne and pop add xor or fnstcw push dec sbb fcoms decb jb gs pop mov inc sarb add push sbb aam in add sbb adc mov jp adc adc adc xor jmp pop leave sub ret sbb stos xchg sub call popl scas add adc push adc sbb mov cmp cld jmp imul jnp cmpsl inc dec inc cmp cmp inc and adc mov ffree mov dec xor dec or cmp ret int or scas jl xor pusha adc dec and int3 xchg sbb jno daa and or or (bad) bound jbe adc cmp adc dec mov or clc mov inc dec rclb adc out lret scas sahf push adc or je or mov jno jbe or mov lcall adc bound sub sbb cs lahf mov pop hlt adc inc lds out (bad) iret mov sbb rcll mov das jne jmp repz inc push adc pop mov adc aaa push push push adc adc jmp popf adc add fs mov out mov (bad) xor or xor in fmuls xchg add mov xor in push mov ds addl or out test int3 jle mov add sahf dec lahf adc add or cmpsl aad push pop mov leave mov adc jle mov adc fdivl sbb jg add adc aad xor mov pop int3 push add or push gs rorb test sub adc add pushf mov pop test in jno mov cmpsl xchg sarb aam push repnz adc stos push push mov pop push fcmovb loope cmp out in clc xchg fstl nop test sbb sub or push popf mov data16 movsb adc sbb add mul push sbb shrl std adc or rcll push pop xor fild xchg fs les insb jo mov and in cmp insb mov pop shlb or insb in adc into push in mov xchg lods and pusha sbb mov in mov in push (bad) cltd nop dec mov je lods xor mov pop cs jg test arpl jle insl sti repz addl push push inc xor lea dec cs gs rorb lret sub xlat int3 repz andb mov sti jo movsl xor lds mov and cmpsb je jmp outsl sti test iret mov adc stos lret mov iret repnz or repz push sar xor xchg mov sub aaa xchg test dec adc or inc sbb adc adcl jno inc dec mov mov mov lea xchg test xor (bad) (bad) adc daa jnp jge inc movsb mov ret push enter and sbb mov xchg pop xor roll or pop sbb cmp mov ds sbb outsb cltd inc push repnz sbb pop xchg push int ror xor sub (bad) scas sub xlat stos sbb adc mov adc xchg xor push icebp ss fnop into jp cwtl gs rclb xchg sub adc sbb xchg out test push push mov mov mov test add add mov push xchg lea cmp pop adc insb push or paddb lods jns and or mov mov adc pop cmp in dec dec and fdivs fsubr gs xor push push dec hlt std adc mov test or sub loope mov xchg push push xor out cmp imul cli jp cmp pop call jns push insl jno mov add icebp cmp xlat je sub ss or pop fs jecxz insl mov jbe pop or mov push sub jae pop adc jns lods (bad) lock push lds por xchg inc sbb (bad) or push sahf mov adc pop ljmp sub fdivp insb jle cmpsb dec adc adc ljmp push inc push add mov cmp xor cmc adc mov mov cmp movsb jno loopne push or into pop add cld mov mov movsl sbb mov fmuls mov aaa cwtl popf inc adc push lahf fwait push xlat pop std loop int xor (bad) mov mov cltd (bad) dec adc inc aaa jmp out cmp adc fucomp test mov push sti insb mov jbe inc adc in arpl sub xlat insb mov mov adc adc add out xchg in stc jne mov adc dec ljmp imul and imul cmpsb repz pop mov xor data16 jmp adc or xor adc loopne sahf aad movsb repnz mov adc fsubs iret into icebp dec xchg pop bnd out aam pop xchg adc arpl jle ja (bad) pop iret push test inc sbb add cmp lods xor stos or cld xor adc mov stos add (bad) lock (bad) push addr16 mov popa mov mov inc mov sbb pop mov lods scas mov iret loope adc mov dec add adc fldl adc int sub loopne (bad) jno add pop or adc leave iret outsb lods aam push adc call mov mov (bad) repnz je jmp add inc stos gs fstpt sbb pop adc or jnp repz jecxz add loopne sahf (bad) add sub sarl push jnp sbb and mov add sub sub mov scas jae inc ljmp imul push das (bad) test and rclb xlat loope or push adc inc adc daa stc mov aam mov rcrb imul add adc dec mov pop cmp loope (bad) xor fcmovbe push push test lds jne in add jmp (bad) ja and bound adc mov js mov cli fist insl xchg roll imul and nop dec and mov movb movsb add push xor xlat pop jo pop adc hlt (bad) out mov sysexit or outsl xchg push xor (bad) insl pop and mov push lds daa repz in in xchg xchg int3 cs xchg lahf aaa repnz adc jo es loopne (bad) pop or std sarb pop xor sbb pop jnp mov (bad) add push pop test stc xchg add add arpl lods xor push divb mov mov (bad) xor pop cmp jno pop push or jne cmp daa int jns mov dec adc mov sbb xchg ljmp cmp xor pop xchg aas add adc xchg mov or fimull push divb (bad) mov xchg mov adc jecxz mov xchg sbb aad pslld cmp fcmovne pop sub push (bad) pop adc cmpsb outsb cmp inc stos jp push sbb fnstenv lret dec adc mov cltd repz fwait rorb fistpll loopne mov pop or lods adc xor xor adc mul jnp mov pop inc popf inc xor or add mov insl pop orl lcall adc jne adc and mov push mov or mov rcr jb ret sbb adc pop (bad) adc push adc mov cmp mov pop (bad) mov push sti scas and ret aas adc xchg aam or xchg and js adc dec ret rcl push bound nop clc out push or dec and add mov or dec fcomps jge je mov jecxz inc adc js test repz push popa mov out pop (bad) inc hlt fsts adc fild adc lock test fwait adc and insb mov adc mov sbb inc adc cwtl in aaa loope pop jno inc or mov in pop loop xor mov iret sub sbb hlt inc in jl add pop mov mov sbb fist add test jae int3 out mov inc dec lods pop adc sbb out lock daa jnp loop jo cmpsl mov xchg add mov ficom jge xor dec mov ss lods or xlat repnz add inc adc insl push jl inc jno xor dec repz mov in pop xor xchg pop cmp xor xchg mov adc cmp shr andl imul cmp dec in pop pop push jo pusha adc sbb cmc hlt or adc pop jb cmp xchg cmp imul lret inc push andb (bad) clc adc std nop jbe lahf mov inc xchg add or dec bound jge shrb jno (bad) ret int push pop repz push xor or sahf mov mov inc in cwtl mov loope adc pop push xchg mov nop push cs inc gs pop mov arpl mov xor inc push pop mov dec fisttpl push jns add xchg ja andl shl sbb and cmc loop adc fisubr mov insb xlat bound xchg mov js cld aam cltd mov push adc add pop jmp fisttp dec es std adc pop cld jne jecxz enter scas mov std adc cmp mov adc add ret jno sarl lcall out popa in mov adc outsb and push jecxz mov xchg pusha decb adc sbb add adc jbe arpl cmp insl orl adc cld cmp scas xchg adc sahf add (bad) mov stos sub jp push test adc test sub push leave enter sarb jbe push adc out adc mov dec adc mov cmp ror fstl test cmpsl mov dec repz bound hlt into jo in dec mov int xchg sbb cmp inc cmpsl mov or in fsts insb int3 adc lret add jb mov outsb xor popa repz movsb sub es or loop outsb inc ret inc mov add jnp addr16 pop jmp pop fldl xor sbb das je leave inc or and les push insl mov pop jne and dec ljmp dec xchg subb fild jae rorb or push adc jle add leave ljmp lret add imul bound (bad) aaa adc repz movsb insb cmp adc jp pop js iret push adc push add pop adc fldenv mov insb jbe sti adc adc jns jae (bad) mov push fisttp and xchg std sub popl shrl pop rorl cs sub mov xor stos adc fwait dec jno mov pushf xchg adc lods sub stos addr16 outsb push in mov sbb jns movsb fs cmp nop xchg ja adc test sbb add adc mov inc xor jl (bad) jbe xchg jmp adc push sub adc sti insb dec adc jmp inc adc fidivl scas adc mov mov mov sarl add sub xchg sti jne jb lods jmp pop mov pop lods push sbb in clc xor fldenv (bad) inc or mov adc add add fstps jne,pt cmp fcmove mov cmp mov test pop push lcall in sbb adc lods mov xor cli daa idivl outsl mov and (bad) push mov jae stos sub clc jmp xlat shll rorl pop adc pushf repnz ret mov outsl hlt repz pop (bad) (bad) adc (bad) icebp add pop adc dec add mov mov cmp nop inc xor xor jg pop mov push cmp cmpsl test shrb sub roll pushf adc pusha or imul push push xchg stc scas mov or popf mov adc outsb and sbb sub or movhps call (bad) shlb mov inc rorb hlt out adc adc adc fdivs adc add xor cmp add mov jp stos repz mov arpl push in jo fwait dec add bound lret mov mov call mov sub cld and xchg cmp jno pop fnstcw (bad) test and sbb fistpll fsubl mov inc pop call sbb fwait imul pop mov xlat leave jnp,pn mov mov mov adc aam add push adc ret clc mov mov add push rolb popf adc and add mov xor push pop or push push add pop jmp or stos cli pop cmp mov mov test cmpsl dec icebp adc rcl stos xchg or adc mov icebp loop fmuls repz push xchg sti aaa or mov push rolb jp icebp mov xchg rolb jae div sub or ror mov xor repz inc movsl sub loope lds cmp stos pop loop and mov and xor cmp xchg fs aam iret das inc adc mov or pop outsb dec add jo out mov mov push rcl adc adc fmul (bad) stc aas (bad) rorb mov push adc sub addb mov (bad) cld adc cmp and insb sbb call sub imul out adc in dec jecxz mov sub sbb (bad) test add xlat adc jnp loop iret pmullw fistpl sub fs mov cmp call cmp pushf adc lods cli add jmp mov pop les xlat pushf lahf adc popl loop imul xor push clc adc movsl mov adc cmp lcall mov pop (bad) jae cmpsl ror stos sbb sbb push arpl je (bad) imul bound xor push repnz iret adc jns xchg test scas adc xchg fmul aad test adc xchg cs mov cmc adc cmp sbb mov xchg arpl ret sbb mov xor das or jne adc imul adc jnp mov arpl xor sub push test in out and jnp sbb rorl sbb mov nop adc (bad) xchg icebp shll mov sbb mov hlt repnz or mov and fstl jbe mov adc sub mov mov cmp sbb stos add mov push mov sbb sub mov adc sub push adc adc (bad) addl sbb call aas repz sub dec or mov push sub scas adc mov or sub dec enter jbe mov mov lock xor movsb sahf aaa out pop xchg loopne pop imul lcall jne or loope cmp fstpl mov inc push imul jle dec mov out pop out jns push dec mov clc and lea and xchg cmp mov pop push notl cmp mov repz out fwait or mov lods pop xlat adc (bad) int3 in xor je ljmp jo push jb push test int adc adc lock das sbb mov mov orb xor (bad) repz lcall roll (bad) push sub pop add xchg add dec aad call and jbe sub gs dec sub inc adc or adc loope xchg enter adc pop dec jge jo hlt out xchg aaa arpl out sbb data16 sub push mov pusha addb cwtl adc repz std sbb add and adc mov loop cmpb cli or mov adc lret in das adc mov mov xor adc mov adc adc in pop rcrb imul xor pop and xchg or xor push cmc ja xchg pop mov not fcomi out jne push dec pop sub push jmp xor xor sub mov adc imul sahf xor cmpsl outsl mov inc mov sub push es push stos mov popf int sysret xchg clc (bad) (bad) mov dec pop adc pop jno shlb rorl fidivrl repz add fwait lea xor jle push inc add imulb insb icebp push das mov inc and or dec adc xor push sbb dec ja std sub push pop mov mov mov sbb imul idiv mov leave aas adc das mov (bad) xor in sub xchg (bad) mov mov test xchg xchg dec mov inc mov mov jle icebp cwtl nop adc fdivr cld in dec sub and cli pop movl adc sbb adc add push push jo out mov stos adc or adc (bad) and adc or push adc rol pop xchg and adc adc loope adc pop imul inc je cli sub in pop pop outsb adc addr16 fildl cmpsb cld cvtpi2ps inc push jne pop call repz dec adc stos adc call lret es adc pop fstpt cs jge adc ret adc cmp mov jle xor sbb adc in inc jae shrl mov js jb dec (bad) mov adc rolb fisubl inc adc or rorl jmp mov push mov lock aad xor js adcl std les das jge out and jp test sbb out sbb adc xchg jmp pop push popa lock clc pop sbb jne inc and xchg aad jle jnp mov gs divb sbb pop cltd jno out cmp in jcxz imul insb aas dec test or inc push cmpsl movsl jne cmc or sbb rorl sub mov sbb faddl jmp clc in aas cmp adc push jle sbb hlt mov xor mov shl imul movsb adc sbbb int cmp clc sub repnz fmuls sbb inc inc adc jne inc dec pop insb mov mov xor (bad) insl adc sub imul fimull adc add cmp pop arpl mov push adc loope or jmp repz cmc cmp push jl xchg adc xchg pop and call sbb pushf adc jg inc adc dec jnp sbb adc add adc ja mov out pop push xchg mov xlat iret inc xchg dec adc repnz cwtl inc push cmp lods aas or in int sbb xchg mov and or mov sbb fcomi or dec hlt mov hlt fiaddl cs adc mov jmp add movsl adc insb inc out and pop adc mov mov in cmp cld loop lcall push call mov sbb pusha sub nop js xor mov test ficomp mov cmpsl push adc outsb and (bad) fcoml dec iret xor jnp jne dec push sub sub push mov stos dec adc sbb push fmulp pusha ljmp cmp imulb les mov pusha pop out adc jge arpl and mov pop in pop cmpl jo mov imul mov xor inc call xchg repnz aas cltd nop inc adc fnop out mov mov mov adc loopne sub sub loope fisttpll in pushf adc (bad) mov adc mov jno pop xchg ficoml iret jbe mov inc mov mov mov movsl jns inc dec jmp adc sub add stos ljmp xor adc mov mov adc scas jge movsl fistpll mov aas in int adc aad mov adc fs lea sti lods jl int3 insl jle pop sbb into test adc dec incl adc addr16 add mov jbe push adc stc rcrl sbb fwait mov ds cmp (bad) enter adc pop push mov mov aas sbb loope mov lea dec cmc mov je pop jle lahf aam incl jnp push nop mov jmp lods daa fisubl add cli xor je lret or mov or adc (bad) xchg push mov aaa adc (bad) lock cli mov inc adc sahf cwtl xor cmpb mov and test jl mov cmp mov in or inc jno cmp sub nop enter adc lock jne test cltd sub js adc repz mov mov fstl adc mov pushf jne popl les subb jns adc xchg or out push std stc adc mov ficoml push mov adc out cmc adc lcall adc aad dec adc jecxz pop mov mulb pop mov out addr16 fwait sub aas cld xchg bnd lahf or hlt sub (bad) aas and les push jle push or pop test enter xor out jnp das cmp test ret sub adc je pop (bad) repz andl dec jne repz pusha pop mov pop dec adc xlat and adc adc sbb adc movsb mov adc xchg lea ljmp xchg aam xor inc inc mov ficoml add aaa cmp mov xor sub cmp lds imul or mov add and jmp lcall pop ret daa dec aam cltd jecxz movsl pop xlat pusha aad insl add ja xchg or repz push xor pop sub jne sbb (bad) jecxz mov dec notl lods lock dec adc mov mov inc xchg xchg (bad) inc dec insl pop stos repnz pop test iret mov mov sbb push xor testb sub mov rolb jle adc enter sub lahf into (bad) jmp ret xor movsl push dec scas test cmpsb push adc mov jbe jecxz sbb xchg icebp bound adc jne cmp repz pusha mov inc adc push sbb bound mov aam jns decb mov jmp stos and cld add data16 pmullw ljmp push pop adc fcompl bound dec sub cmp xor popa gs into jne rclb mov mov xor aam pop push sbb mov pop push sub (bad) add inc dec dec fmull jno cmp imul adc sbb das incb test aas les sub dec rcrb push cwtl int3 sbb int dec (bad) push xchg mov push or add lods jecxz loopne inc inc clc adc aad fnsave popf xchg inc xlat (bad) int pop add pop jle xor fwait (bad) xchg or lods ficom insl or dec push pop jns insb lahf dec pusha or jae sbb stos and repnz adc rcrl shrb pop mov mov bound push push incl jle aaa cmp xchg mov movsb or stos add dec inc mov adc or movsb je lret adc jno inc adc mov incl mov push and scas xchg or out fs adc cwtl lahf rorl adc cmp adc sub ss xchg repz fistl mov sub or push scas add lock xchg pop rolb mov sub sbb pop xchg negb adc in dec ss inc adc stos xlat mov lods xor cmp pop mov sub jno lcall (bad) sbb test push shl or adc and xchg repz ret jl insb or adc aad jno sub inc pop xchg sbb push sbb fs in sbb dec (bad) adc jmp mov adc xor inc out test pusha shlb clc je cwtl enter sub add call inc dec sahf adc xchg dec mov adc fsubrl ljmp adc pop inc int3 push bound mov cli push mov adc insb hlt push and cmp test xchg adc mov sub mov add insb out dec push je dec xor lea jb bound mov or sti xchg cmp repnz adc inc es (bad) clc stc rorl inc adc loopne scas cs iret dec in or adc int3 xchg mov aad push (bad) jecxz jbe lea into fistpll push (bad) adc cwtl bound repz mov xor ja xor mov cmp mov pop int3 xchg adc es xor adcl aad adc mov rclb xchg sbbb adc scas adc jg dec nop addl mov ror adc jnp lea mov fwait iret ja sbb lret jmp aas outsb pop imul add shll dec js xor divl push xor or xchg push adc dec xchg xchg sbb adc xchg mov dec int3 rep test add adc popa and push sbb lods repnz adc (bad) xor dec add push js push add out lods mov cwtl jmp mov cmp nop inc stc or int cld and pusha push mov adc ret jmp out popf add lods call fidivl push nopl imul xor and jbe aad xor cmp adc cltd mov repz or imul cmp add mov jg sbb insb in sbb mov clc loopne pop fcoml adc arpl dec loope adc jg lcall push jge mov pop mov adc das popf dec add pushf aaa (bad) movsl mov std popa out jb adc or dec sub mov js or mov repnz ret mov jle mov jle adc sarl push cmp or fwait add inc insb adc jle movsl adc ds sub aas daa imul pop xchg mov movsb adc xchg cli pop insb adc ja jle push xor adc jb xchg mov fiaddl and pushf mov adc enter sbb mov mov (bad) cmp mov inc or xchg push outsl push mov sbb int3 bound sbb jns and out ljmp adc outsb out adc mov jle mov or nop xchg sbb stc pop enter xchg loop lea adc mov es and int xor into nop jg rolb icebp mov adc mov daa int3 adc iret sub aam test pop sbb and mov (bad) mov push jno imul push pop enter cmp mov add fisttp pop xchg inc nop lahf adc pushfw (bad) loop add inc push arpl movsb aas adc adc mov adc clc mov adc in dec pop mov repz inc ja fstl icebp push cmp push xorb aam add xor test xor xor cmc sub in sahf mov adc or mov cmp out xchg xor mov adc sbb cmp or lock adc (bad) loopne sarb hlt sbb insl adc arpl add xor adc ja outsb xor or fdivp (bad) or cld movsl and (bad) in jle xor loope or or push cmp repz pusha psraw pop cmpsb add xor add adc push dec adc push cmc aaa jle adc xlat je leave stos out adc test pusha icebp lret inc jp adc jnp cltd iret xchg into pop adc or adc aaa popa pop adc jecxz (bad) daa xor les jae xor sbb fimull sub sub mov lret jge sub es push in adc lds loop xchg call fist xchg or rorb adc and int mov xchg scas aad das fldl pop in push add mov arpl lret sub scas xchg xor insl xor adc push pop jne dec lods in cmp adc push shrl mov mov cmp and and js mov aam sbb fcmovnbe (bad) sti sbb mov pop fisubl mov adc and cmpsb cmpsl add xchg cs jmp add (bad) (bad) rorb rcl lahf push xchg adc movsl mov push lret or xchg (bad) ret pop adc add inc jne jo pop pop mov adc dec xchg into lcall scas mov jmp lock out adc sub in aam rolb mov aam mov push push (bad) leave adc fcmovnbe les and cli dec popa pop enter jbe or es xchg add mov mov into rol (bad) push push int3 fiadd xor xlat (bad) jno add or jge ror adc jecxz mov pushf push sbb out (bad) imul in jmp add aam dec repz pop or mov pop mov pop adc add lret pop adc movsl add adc stos pop mov adc (bad) rcll and outsb sti std adc lods es push into adc int xchg xlat sahf adc dec xor pop adc mov push dec repnz mov rolb int roll (bad) in or cmp add sub jnp,pn sbb mov mov lahf in adc mov mov push push dec cmc xor or mov fistpll stc and adc add test sbb adc mov les adc inc (bad) repz in gs cmp loope (bad) nop mov jecxz sbb inc pop fistpll add movsl (bad) iret xor sbb movhps or pop repz or xchg rorb xor das ljmp inc out add jle adc sub imul mov pusha int3 aad shrl add les loopne adc pop pop fdivrl out fisubr adc in jl inc insb mov fcoml test les shlb push out std pop adc mov xor jne xor dec lret adc nop insb inc mov pop xchg push or in xor arpl clc rol and ja mov scas mov mov fimul cmp fidivl js sbb call xorl xchg xchg cs daa jge clc rolb sub add ret adc or bound jno clc out notl mov shlb jge jg add je mov in fisubr dec pop incl pusha rcl test sub mov les xor push mov pop ds fsubl nopl mov js xchg add (bad) dec mov jne xchg (bad) lock imul sar popa add xor imul lcall mov arpl adcl adc out jno out cwtl cs cmp cmpsb repnz and fdiv lret xor adc jno iret mov xchg mov jb cmp xchg xlat test mov mov ret movsb mov loop pop nop mov adc fiadd fwait int jbe into inc cmp xchg lcall icebp push pop das or mov hlt (bad) stos or adc mov mov jnp adc add daa repz lahf movsb pop add lock dec loope sbb jno jno mov sbb cmpsb sbb sbb push cwtl push fsubrl aaa sub jg add movl cmp adc shr mov orl jno sub stos cltd and xchg inc bound inc (bad) adc adc ja adc pop push mov push or dec inc mov inc jae xchg pop push mov jl adc and jb fmuls ss push mov jbe js push cmp stos repz cli mov sub push or cmp and in rorb push adc mov add jne jnp cmc aam (bad) imul mov inc add xchg imul aas adc in test adc ljmp xor add rcr sbb sbb push scas mov out rol imul or adc sub jns or cmp ljmp aaa or and jae adc mov push fstl cmp in test mov ficom lea mov dec jge je aaa lock cmp (bad) cmp pop sbb sti and sbb repz stos out mov movsb adc aam sub in cmp stos insb adc lret and inc inc test ret in push cwtl fprem1 adc test mov call cmpsb sbb pop iret xor sbb pop loopne call adc xor (bad) ret in jp hlt jne rorb dec sbb ret adc mov push pop xorl aaa sub loop por mov push popf adc mov ret xor shll ja jp adc adc mov outsb adc jno push mov fiaddl push repz cmc push pop inc xor mov stc mov jge xor repnz lahf or pop repz outsl (bad) and and mov lahf cli in adc push je adc fs insl cmpsl ds adc push inc sbb push adc pop cmpsl or pop adc (bad) cwtl push ror pop adc pusha pop xor arpl cmpl adc repnz adc cmp and adc test in push (bad) xor jae add cmp push in stos adc (bad) xor (bad) fcomps cld leave fdivl shll and mov insb mov sub repz (bad) call or stc or imul push cli fwait loop mov dec jle mov in adc pop add int mov push and push lcall or mov xor fdivl (bad) std subb dec mov nop ljmp sub lds jb adc add xchg out adc ret ljmp and mov xor adc ret adc mov mov shrb popf stos aas sahf call adc in mov adc or jle adc xchg sub mov add lret push loopne je mov mov push enter bound fisub (bad) cmp pop ret jge rorb ss mov frstor inc out adcb jno adc (bad) hlt push sub divl pop cwtl adc jo insl pop sbb (bad) adc lahf xchg adc pop out push movsb leave adc mov dec aas jmp cmp or cmp (bad) pop out lret adc cmpsb out ret inc mov scas bnd nop sti in sbb cmpsl pop jnp repz insb adc cmc cmp jbe fdivs mov loopne or pop xor jno pop push insb inc sub test cld pop xchg lock sub mov xchg mov mov sbb or cmp mov in add push and jne lea movl push sub sbb and fmuls aas movlps jns pop adc sub fldt adc stos or adc fwait icebp out ljmp std mov decb dec rcrl or push clc out lret adc add pop cmp repz lds xchg in imul insb mov je jae lea jle xlat cld int jne addl inc mov repz cmc sbb rclb pushf fdiv cmpsl ret loopne mov into add adc xor or inc dec adc movl adc add hlt fstl repz and add lea xor mov add adc les fdivl xor jns cmp mov sahf fs xor fs xor sbb mov rcl xor pusha adc xchg jne mov xor or je mov enter fsubrp movsl loope (bad) or (bad) rcrb xor push adc ja xlat jge insl les inc in push sub or addl mov xlat add nop outsb imull mov push mov xchg pop in rclb add ficoml jb mov push sub lahf sub adc test or pop mov mov int3 lret sbb out xchg scas out lods cmc (bad) adc std jb test ror inc jno into push je cmp dec repz mov mov sub es xorl loop cmp lods dec push sbb pop jne add imul clc gs or mov lods jae adc ljmp aad ficom sbb add mov (bad) bound xchg shrl push outsb add enter add lds stc xchg aas popf sub dec jbe push inc dec sbb push lret add repz mov bound xor cmpsb (bad) mov sub inc push adc and jae add repz cltd jb sarl fs and push mov out outsl lcall lock dec or clc pop dec aad push mov xor int3 adc lcall outsl mov add dec js sbb in mov popf adc rclb (bad) adc rolb pop inc xchg mov adc pop push shr jne loope xor cmp (bad) sbb cmc imul add pushf sahf and cmp cmpsl sub adc movsl in scas subl mov in lds je scas sub push aas out adc dec lods inc in xlat sbb mov int les sarl mov icebp gs movsb repz sbb adc frstor inc bsf push jb dec rclb and or pop and rcrl (bad) jno dec mov test sub mov pop mov fstl push cmp call test adc push cmp ja adc je add lods jle (bad) jae sbb lret inc push rcrb mov cs pop sub test pop es adc cs adc push mov add jbe mov rcl mov test add xor mov fs mov add fwait mov ss jl adc xor testb sub rorb jge call mov mov rcll das sub pop mov mov sub ljmp addr16 inc adc wrmsr xor test aaa adc aam scas adc (bad) sahf loopne enter jno add cmpsb pop jno into push xor push add repz sbbl sub adc sarl aas ljmp adc sbb sbb adc jae dec mov sahf push and fnstenv hlt mov mov sbb in pop out jle scas mov dec bound (bad) sbb sbb lds icebp and pop loopne mov cmp pop add sbb (bad) jp push adc nop ss test insb sub mov lods dec loopne xchg mov inc adc loop inc adc mov cmp adc or cwtl imul cmp mov mov adc data16 enter adc push or mov or cmpsb cld cli xchg and adc sub adc xchg flds adc mov xchg std fdivp ds add add xor and (bad) icebp xchg outsb mov enter mov fs imul adc es adc cli push (bad) test or adc cltd sbb (bad) dec (bad) mov loop add cmc in imul or or bnd adc imul shr adc (bad) enter and cltd jp popf (bad) mov jo add add mov sbb stos repz adc ret jle xor shl pop sub je jno pop mov in dec lret pop cmpsl out dec and mov cmp loopne jge adc sti mov adc jle adc sub or out mov (bad) iret hlt dec mov pop bnd ret les adc inc popf mov push adc mov in pop mov adc fsubrs sub jle ds insl sub jg xchg dec xchg jp repz xchg adc (bad) repz mov or xor mov pop dec and or mov nop sub cmpsb xchg gs and xor adc mov and aas mov ljmp in stos mov out adc stos sbb subb xor xor push add fildl lock mov xor mov or pop clc fcoml shlb jg lods jb adc mov ljmp adc push aam out fild cmpsb js test lahf xchg adc sub inc sub stc add mov or and pop (bad) std imul pcmpeqw adc fistpll and cwtl out ja rcr sub xor push or roll adc dec testb and jmp add adc aam xlat or or fldl sub inc lahf dec es adc xchg loop scas cmp push (bad) mov add lea mov push pop push imul sbb pop sub or outsb rolb adc shl insb adc adc push sbb pushf sub cmp xor hlt fstl push adc mov dec adc mov sbb sbb jecxz decl or enter add cmpsl dec lock adc jno cmp adc pop dec scas xchg testl adc jecxz pop xchg inc jmp cmp negl int adc inc loop adc xchg cmpsb or push xor jbe cmp push enter outsl xor jns ret mov pop mov adc jecxz xor and adc mov lods mov pop mov ret cmp test push gs es push stc repz sbb jns jb adc pop xchg data16 gs mov mov std inc xor in pop mov add jne jmp and repz pop push fucomi bound lock xlat repz in push push add adc mov fisttp mov pop adc sarl jp xlat pop or ljmp mov adc fld lods mov push (bad) mov adc xchg sbb sahf popf push adc jne adc mov pop xchg xchg rorb out cmpsl pop cmp adc in jecxz test mov or pop out cld jp jmp mov cmp sub repnz loop inc push test add xchg sbb mov insl xor sbb cmp xchg inc xor add leave dec out ret mov pop aad movb add sbb out mov dec js xchg imul adc xchg les lret movsl jb push mov enter dec mov adc xchg dec repz pop mov adc iret rolb adc fs or pusha jnp sbb adc mov xchg pop mov xor adc repz pop adc insl sbb mov sbb adc jnp mov mov int3 push mov (bad) stos mov data16 ret inc jp dec rolb jge cmpsb movsb sbb bound pop mov sub add insb cs and les test xor mov loop xor jecxz outsl dec adc push sbb mov fadds dec sub ds pop dec adc add aad fisttpll fisttpl or mov js xor adc and popf pop adc mov pop rorl out adc int3 and sbb mov or jmp fwait sbb or or add sar lock cmp aad sar sbb jno mov sub mov fsubs insb sub mov and adc fdivs std divl (bad) xor cmp sbb (bad) out mov dec push test adc cltd xor mov imul mov shrl add xor insl adc mov imul add and in inc pop lahf clc repz stos into sbbl sbb insl pop xchg arpl rol popa and or dec sub and mov fcoml or pop mov int3 ljmp lds push cs or idivl adc jg xchg adc add cwtl mov adc fcoml adc add dec les pop mov jnp jecxz jge cli jle jae repz imul cmp and pop les popf lock mov pop pop push lcall data16 aaa or xor xor ss mov xorb pop sub (bad) or mov inc sbb pop je test sbb push ret adc movsl inc outsl adc je pop adc add in dec aas jb repz or dec adc pop dec xchg les fucomp jb ret lock or inc bound out push sbb or xchg ljmp sbb negb cmp scas (bad) push ret int and push mov ret xchg or mov xor jge cmp sbb adc pop cltd adc out and (bad) xor pusha inc sbb or movsl mov and in mov (bad) mov add xor cli and iret dec pop (bad) mov pop xlat (bad) sub repz xchg push out stc push icebp (bad) mov adc cmp xchg pushf adc pop xchg jmp inc fmull bnd mov je adc movsb or cmp fsts int3 imul dec adc std aaa mov hlt and pop jbe int3 and std push pop xchg adc mov push (bad) and xor lret mov pop fwait adc inc dec out pop mov mov xor add sbb (bad) jbe addr16 or mov push xchg flds movups xchg cmovae mov int add xchg jbe flds jo xchg shrl scas lods dec les push in mov test xlat adc jno and cld daa lea lds cmovge (bad) repnz or adc stc jae adc cmp out popa call sbb popf dec or xor out jo adc mov adc cmp jecxz stos stc adc sub jnp cmpl jns xchg std push adc push lret mov dec (bad) div add call inc jl xor mov xor popa jecxz mov loopne fmull xchg out repz imul push subl stos shrd lea lock test and cmp jmp or in clc aad fcmovbe xchg cmp lret adc mov jnp inc dec push adc cltd jae dec or cmp je lret dec (bad) loop push mov add nop rolb int ficom pop inc (bad) loope xchg dec cmp (bad) push rcrb ja call out xor push mov adc ds loope shr lods sbb jg stc daa repnz adc aam and push shlb sub outsl adc xchg push adc test xor hlt inc mov pop jmp test xor gs rcr (bad) mov xor mov adc pop ds leave pop cmp sub jl roll push (bad) xlat mov mov imul (bad) mov mov pusha imul jo add ss bswap adc sub cmc pop icebp xchg pop jg dec lahf adc leave push add repz into mov dec pop adc and mov shll add mov mov or xlat into stos adc sub out aad mov xchg adc ficom inc call (bad) or or lea lret jbe pop pop push iret rcrb scas and or test in and (bad) dec mov lods std dec adc lds pop dec repnz divl fcoms xchg cmc imulb stos addb xchg or in jp add mov adc or es into notl fwait add movsl push cld pop cmp xor fbstp adc clc sbb ret pop mov cmp adc cmc pushf repnz or cmp aad mov xor push clc imul mov sbb fsts fnop call mov dec cli push adc jb fwait mov ret jo je ljmp dec cmpsl call not sbb inc sbb fistpl xor sub mov ds cmc dec mov idiv cmp loopne xchg dec pop mov dec jae cmpsb mov ljmp inc adc outsl add imul push (bad) int3 xor mov pop lds xchg mov adc jnp adc jbe mov hlt das adc outsb or btc (bad) bound push out test ljmp adc pop (bad) sbb mov int add loopne andl das cwtl aaa push jne add jnp push daa adc sub (bad) xor lods repz mov pop in mov mov mov adc fldt or hlt stc cld add ret jbe xor dec or dec in stos or repnz imul cld mov inc cmp fstl mov push xchg repz ret xor out adc fwait stc aas adc cmpsb mov stos dec in js in pop push jl push movb mov xlat pop icebp adc xchg rolb jne adc std or pop lds xchg mov in lahf and mov cmp rcll cs add or test jae fs sbb fidiv dec adc imul sub cmp aad pop sarb ret hlt pop call adc movl lods add (bad) adc jne add pusha inc insl outsl sarb stos add cmp shrl je aam loopne or jbe push add adc jp loop cwtl jg dec std pusha pop inc inc (bad) mov or add adc xor inc adc sarl inc xchg pop pop adc jbe mov rcr and or enter lods dec sub lret mov adc andb push (bad) or adc lea insl jmp mov sub adc pop in ficoml jo or out or rolb ss daa mov sahf ror add leave rclb adc mov das add jecxz pop shl insl or loop popf sbb jns (bad) mov xchg cltd add lock pop add jnp rcrl or cmp xchg int3 into jo jl lods jg fsubs jae movsl clc out lcall xchg sub sbb dec adc or dec mov shrl mov mov or and xor dec adc mov adc lahf or adc push mov paddd adc fdivs in push (bad) lods adc xchg (bad) fnstenv adc add jecxz adc xchg iret sbb xchg dec lret adc adc xchg adc push sar fcmovbe cld lds jg inc stc jae add lods cmp sahf inc hlt jmp and push fisttpl ds jle stc or jno lcall loope lds ds test test rcll dec and and mov loope push adc stos std mov adc dec test xor jmp mov adc xchg fdivs mov sub xor add sbb (bad) enter pop adc shrb movsl cwtl add xor add cltd lods add mov jge imul pop out dec inc mov adc sub pop aaa mov jle jecxz fcoms mov xchg push inc add sub add add cld insb repz and mov mov pushf aas inc in les ljmp dec jnp lret mov cli adc js mov sub out sub mov into sarb adc add iret (bad) neg ja adc outsb mov cltd push fiaddl adc cmp push and pop scas outsb dec jl les cmp mov add addb adc pop and pop sub push loop xor adc xchg pop (bad) or pop adc jmp sub mov adc mov aad adc ffree leave dec popf adc or into aaa sub push repz jge or inc mov xchg sbb cmp fistpl (bad) dec push xchg mov shrl pop in dec mov stc scas push sub push mov adc sbb add push or mov hlt jnp mov dec lds dec push mov lcall mov adcl add ret test sub and addr16 push mov mov or pop lret jb mov cmp (bad) sbbl call shr dec inc fildll jns lods add jp cltd and sarb dec inc je mov fwait clc test push movsb lock shrb rcrb jo and pusha inc je dec pop jecxz add je sub xchg cmp test inc jg imul mov pop push adc jge popf adc sbb dec push rolb mov xchg add jle pop inc sbb adc inc (bad) inc push fnstsw adc xchg dec xor movsl jbe mov mov pop rcrb or imulb stos push ss sti xchg push pop mov sbb sub inc add fxch popf adc fidivl in popa ljmp add adc (bad) in cmc adc inc cmpsl rcrl imul insb cs int3 (bad) adc les pop nop dec inc dec dec xor sbb adcl das ds test adc out inc adc mov pop cmpsl adc pop xchg (bad) fnstcw xor and bound lahf mov lds or dec adc push sub xchg jne add push mov ror sarl fist fcoms adc (bad) push push (bad) xchg add je stc montmul cmpsb add dec cltd mov popf cmpsl adc loope cmc sbb pop adc and pop adc mov mov add or (bad) ret push clc insl rdmsr and shl dec and lock jne adc or adc sub dec lcall xor je jns add mov arpl pop add jg push or in int push sub test std xchg adc cld jle adc shlb adc imul xchg scas repz inc pop fimull pop inc xor mov out iret mov ds pop sbb adc dec push fiadd add sub cmp adc leave int3 adcb jno inc mov sbb das push test (bad) dec insb pusha adc cmp pop popf xor movsl xchg xchg rcll adc lcall adc divl rorb fld mov dec add push cmpsl lods sbb xchg xchg mov mov pop or xlat insb int3 mov mov and mov add fdivs movsl cmp pop push or inc pop adc mov (bad) lcall pop lahf imul xor in jno (bad) dec scas or hlt gs adc adc hlt mov push scas cwtl cmp int3 xchg rcl daa leave stos cmpsb or lds (bad) out mov cmp adc mov (bad) mov adc out into pop adc movsb cwtl mov mov add push imul aam inc mov daa adc sbb add and les int adc jmp roll dec jle adc mov das jno inc or dec fwait push adc adc into and adc lcall (bad) (bad) adc or mov push daa gs mov pop xor js xor xor xchg movsb adc lcall add cltd jbe ja adc and mov aaa shrb pop out iret loop adc jp test mov jbe jmp lret jle movsb mov push mov adc imul push ret adc adc jmp mov jbe arpl fs adc sbb jmp fxch adc dec add sarl cmp ss sarl add mov repnz xchg push dec adc adc push push mov mov ss dec add test xor loop xchg add lods push xchg aam in jecxz sti (bad) test mov inc jmp loope les lcall add stc outsl inc ds hlt adc dec xchg pop icebp sub push lcall or or add or xor or inc adc or rorl dec leave lds pop call std or and pop or (bad) neg push outsb adc adc jl lods adc cmp pop je (bad) mov inc inc lea sub jne push or sub adc adc push mov adc pop pop xchg adc add (bad) mov outsl pop push inc cmpsl push inc scas sub xchg jae aad adc dec cli sbb leave adc fisttpll inc or in adc mov add out pop lea jge push das pcmpgtw add je ret lahf test mov dec test repz inc outsl or xor adc (bad) nop fadds mov adc mov lock mov xchg (bad) xor jecxz int and xchg (bad) cmp lods in sbb in xchg mov sbb pop shlb adc leave pop aas xor dec pop xlat cwtl lea push stos adc inc adc decb sahf enter push add int fistl cmpb adc ret and add in test test pop xchg out or pop mov add or lret dec repz push js das pop add add push in jecxz sarb sahf sub pop jb insb iret out nop jecxz xchg xchg icebp inc ss (bad) pop fstl pop and cmp mov push es jb adc dec inc loop cmp test xor test jg out mov jl repnz rclb pop or xchg in jmp out push add mov jl lock sub or jle and or mov add cld xor sub push dec cmpsb adc push enter mov ja cs push incl into adc sbb push mov xchg jae push pop xor loope pop lret add icebp scas rcll mov push adc jbe jg andl lcall mov sub inc pop data16 cmp xchg es adc shlb xchg push mov inc pusha sbb adc pop orl repnz cmc ss int adc daa xor int mov and xor xlat pop jl insl dec and cmp repz insl ficom cmp or or adc adc jb xor mov jae es repz mov cmp inc mov notb dec mov jle repz jo cli mov adc jnp je mov into aas inc mov mov dec leave out push adc dec rcrl sub xlat (bad) mov stos clc pop mov add adc ss or stos outsb adc pop adc adc xchg mov mov cmp mov add adc inc sarl das adc sbb scas out push mov stc mov mov xchg sbbb jle or lds fmull mov cld mov mov aam rclb hlt stos add lods call cmp fsubrl call mov sub and inc (bad) lret fdivs add in add out pop jae (bad) adc push xchg mov mov js int cld xor sbb add test out scas adc cmp (bad) mov or cmpsl loope lods sub imul (bad) mov xor and movsl (bad) dec fsubl inc (bad) ret jge adc sbb out adc mov pop je push add test pop aaa icebp adc add jbe push rorb adc pop outsb test xor sub and xchg and dec adc out inc dec cwtl mov divl pop stos mov and mov adcl or inc add add insl aam in inc mov nop lds movsl or rolb fadds mov xchg pushf jmp and mov jo pop iret xchg ja,pt push mov xchg (bad) (bad) and (bad) aas adc xchg push lock ljmp push out adc sarl in pop adc cltd ret adc fs fistpll jnp sub xchg cmpsb cmp xchg adc jp sahf xor xchg adc and cmp mov test wbinvd out adc cwtl out pushl fimull scas lea das or mov adc adc scas divl inc mov dec leave sub mov repnz adc jle cmp loopne mov fnstenv jg add jae jne je add insb lods int3 and into mov xchg pop or adc sub imul test adc lock jle adc je adc jmp add out xlat call adc (bad) cmpsl aam jbe mov fwait and dec nop push mov ret popa adc movl add mov repz xor adc arpl ljmp insl rorl fadds and mov or mov mov jge push mov adc andb pop xchg dec inc mov dec sub lcall cli icebp pusha push pop stos adc nop gs or int3 and iret mov adc push dec adc mov add mov dec adc lea xor add mov mov pop adc dec clc repz test dec mov js jb adc push in in xlat cmpsl push adc stos mov xor call dec sysexit adc hlt mov dec xchg add xlat fistp lahf scas daa jge nop nop rcrl rcr sahf cmp nop xchg adc or out out sbb in jbe xor mov add addr16 inc mov sub jg mov clc aad dec mov mov cmpsb mov (bad) sub loop adc dec mov jnp ljmp inc lock jmp jae add pop out jecxz xchg mov adc stos iret add sahf or mov adc mov fisttp ss repnz pushf or push pusha popa push sub pop pop (bad) cmpsl mov xchg mov addl adc es repz fstl mov or mov fwait leave push pushf fsubl jo cmp cmc (bad) cli imul jbe rolb aam xor mov repz jno sahf add and push roll popf daa pandn adc push rorb pop sub jmp sub push ja pop into (bad) adc mov test (bad) daa mov or mov aas or inc adc test (bad) mov xchg adc xor sahf sbb mov fist sarl mov cltd xchg lds push cli pop mov adc push js sbb in xchg jl outsb das stc lcall xor cmp xor and cltd (bad) stos in dec je into push aad lret mov sub outsl adc mov xor jb (bad) pxor int push push or fmuls popa xchg rclb aad jmp and or sub mov mov (bad) cli cld test test adc scas and sub jecxz rcl sub or rcrb fwait psubw mov jmp adc rorb test xchg rcrb mov pop xchg mov mov add popa push out adc add daa aas sub mov out push dec jns push push inc in sbb sub fnstsw pop jae mov dec test push pop adc and icebp sbb (bad) cmc jmp lods and add imul push push xchg inc sti mov les push sub jg and fnstcw push or (bad) sbb mov sub mov push dec or xor adc cld imul jl jge popf pop jle pop js cmpsb dec (bad) aaa cmp jecxz or notl jp mov stos adc pop and sub cmp pusha mov xchg stos mov pop adc or ss call mov les dec adc (bad) mov and add scas adc loop rcl out fistl jno fwait sub xor sub jb jne mov fldcw inc adc cmpsb mov shl cmp pushf mov sbb repz mov inc adc pop (bad) jb lock arpl mov andl pusha mov xchg sbb imul shrb adc pop mov inc cld inc adc mov push sbb enter push aaa push ljmp clc pop inc mov mov and adc inc jbe imul lea mov add rolb sti fwait and push xchg jl (bad) loopne mov adc xor xor xor pusha stos add mov or adc mov insb fadd cmp mov (bad) ret xor jbe mov lock enter or imul cltd dec iret repz cmpsb sub fs in jmp sub lock (bad) jp dec cmc xor (bad) xchg je sub cmpsl mov inc lahf stos xchg adc xchg xor dec xor fwait push dec adc jmp mov jne xchg pop lcall movsl in test adc lret subb into inc dec adc push pop push ret (bad) repz mov call imul aad les es add into fdivrp adc (bad) icebp push scas jle adc loopne std sbb outsl pop test scas sarb mov add adc jmp pop push lcall or insb adc and into mov lods add ret out xabort adc out stc xchg imul dec xchg add popa add mov sub adc sbb xchg push cli or iret mov mov dec jo adc mov sbb popa mov xchg add dec push or sbb mov aas (bad) xchg sub inc mov lea rcrb in pop int3 fwait out xor pop lods sbb add testl lods cvtdq2ps scas jne adc cmp xlat stc adc sub (bad) xor xor cmpsl fistpl pop inc push loope push cmp repz sbb (bad) mov repz seta pop mov or mov cltd pop inc add test jb adc xlat cmpsl add (bad) addl adc xchg movsl loopne pop add adc movsb (bad) dec (bad) mov (bad) lods loop icebp push aad lea pop mov jl in movl jne fs or pushf fwait adc repz jp push adc fstl sub into lahf cmp add or mov jp fldt mov push and add adc pop fwait sbb pop fsubl xor lcall aam mov dec cltd mov jle adc aaa in mov shrb dec adc repnz jbe adc sahf pop sub (bad) (bad) jecxz xor xchg inc and loope or adcl or cmp jle mov mov dec js pop adc int3 pop fnstcw and mov sbb or xchg pminsw outsb adc out aas mov inc (bad) dec (bad) pop adc add repz push or xchg adc cmp adc sub in in aad xor mov mov jno xor arpl pusha repnz mov push ret fcoms bswap mov (bad) lock iret adc jnp mov cmpsb xchg lahf clc inc fsubrl adc mov bound xor int mov add fnstenv xchg hlt sahf or (bad) or xchg push aad fs sbb or sub out ds loop adc cmp xchg xor jnp fwait adc cmp push lods inc xchg imul or loope dec cmpsb rcrb pop out repz push jbe std or sub cltd or push test adc fs cmp test mov or mov in cmp push mov cs pushl xchg mov out pop iret push (bad) push dec pop mov mov lock cwtl prefetch or pushf xchg push jge icebp or stos test xor or andb mov mov lods pop dec das pop (bad) sti or xor in repnz in loopne pop test push fcmove fistp add outsb mov rorb pushf cmp mov aaa lcall adc pop sub stos bound adc mov fmuls adc push lahf mov xchg pop push push adc adc shrl cmp xchg add mov mov (bad) push adc sbb lock popa aad mov int3 sti adc test repz fldenv push pop call sbb cli pop imul and adc push les fmuls ljmp clc aad adc jo mov popf mov cmp js push sbb ret xchg adc call pushf inc add popf popa in mov das add mov lea jb (bad) out adc (bad) jbe shlb add mov cmp stos gs andl fsubl xor adc xor cmp ljmp popa test or (bad) scas adc in mov push stc jbe (bad) int adc adc inc pop push mov pop add movsb adc add faddl test outsl aad push adc sub push mov jns outsb repz (bad) add mov and xor cmpsb sbb loop mov adc data16 imull xor rorb (bad) out (bad) pop inc nop push aas lmsw fidiv lret sub fs fild adc out jb cwtl dec pusha popf xor sbb (bad) int leave add fdivrl clc mov push xor cmp inc shr outsb add sub popa fisub pop shll adc pop mov into lcall scas in bound sbb das lret pop push pop cld adc loop out test adc cli jg pop rcl test sbb bswap push adc lods loope inc mov stc adc jns or aas xor adc add adc sbb mov jnp xor or mov sbb shl pop lods inc (bad) xchg mov and and add adc in or xor std add test mov jl dec or jmp sbb adc call cmp ret pop (bad) jge std mov adc xchg jl push (bad) int adc jmp je dec aad mov push mov lea jne or lcall adc outsl lods cld jge add cmc and je mov jb test cli adc cmc hlt iret test mov pop mov enter mov xchg xor cmp sbb data16 add out ret ret sub into adc aad adc cmp test xor mov (bad) aam and test nop aad scas or push aam mov inc jno movsb stc inc jno jmp or ficoml cmpsl adc adc pop (bad) mov cmp adc pop push mov test sbb test cmp gs fwait push pop fmull or mov adc fnstsw sub adc test pop shll push add cmp clc adc and push fwait inc push aas repz adc add mov jbe aaa dec in or jp push jl dec pop test mov adc add add mov adc mov nop das movsl adc dec mov insl std loope inc cmp stc xchg idivl out xor lcall and mov insb das jns add xchg insl mov sub mov out fstps fildll xor jo and stos push adc push outsl sub adc fbld xor mov inc mov insl xchg ret xor aad hlt imul adc or sub adc ljmp mov xor pop stos add push xlat adc test xchg dec popf scas negb jae add mov ficom sbb inc xchg es in xlat adc sahf aas or push inc xchg in cmpsb push lods iret adc sbb addl sub xor enter mov jge and xchg mov fsubrl adc mov rorl push mov mov add mov cmp test dec (bad) call push cwtl fwait adc xchg lcall aam imul mov (bad) sub subl mov es sbb xchg add clc push stos sub adc and int adc int lret xor popa mov imul jle dec mov mov and call jno lock es pop push mov mov roll data16 pop or fidivr jmp fstpt cmpsb call and pop outsl lods sub nop loop call or (bad) je ja and (bad) cli adc icebp ds pushf and iret xor stos in sbb dec adc xor shrb out cld sbb cmpsb or jle fisttpl cmpsl decb sub adc xchg jae xchg mov fldt repz test adc fbstp xchg nop (bad) xor cmp adc push dec mov xor adcl bnd bound (bad) cmp jmp ret lea sub adc mov outsb mov xchg pop ljmp rolb push push mov je xchg stos imul jecxz (bad) pop imul push lods lock mov das rcll xchg jmp loopne or and sbb mov xchg test xor enter xor in je inc leave adc js int3 adc mov lea (bad) xor (bad) mov mov mov adc mov adc xor or push xchg xorl (bad) xor sbb neg or test or push enter test mov mov adc jbe push adc pop rorl cmc push xchg mov adc lcall adc (bad) out fbstp notb sbb fwait repnz xor int xor mov lock addr16 (bad) mov pop call adc mov jle mov les lods pushf inc mov push sub dec or adc add mov mov dec mov movsb es sahf xchg adc loope xchg test sub hlt stos cwtl and iret or les (bad) or pop adc cmpsl mov aaa or xor push std add cmp ret rol add nop mov xor lods or loop xchg sti xor and fdivrl mov push lock sub imul cmpsl shlb ljmp adc rcrb mov sbbb cmpsb xchg mov adc pop scas mov lret insl (bad) mov jns clc ds add (bad) mov and jo mov std xor cmp lret xor mov xor mov pop pop rcrb mov sub lock call dec push add sub je xor arpl sbb leave jge,pt jmp imul and pop bound mov xor pop mov xchg in or cs inc pusha and xchg mov in lds adc clc mov in addr16 js pushf hlt scas es inc or xchg or rol lahf mov or add sbb push (bad) out xchg scas (bad) pop dec mov xor inc popa adc mov jb inc jo adc cmc mov pop adc dec mov rorb mov add imul sbb sbb and cmp sub push andl lea jecxz jb call sub and ret mov sbb jne cmp int adc adc mov push mov popa mov call sbb mull sub insl loopne testb mov sub adc push dec ficoml pop dec mov push xchg xchg stos adc lcall test in cli inc xlat movzwl pop fimull mov ja mov pop cmp pop xlat outsl xor sbb std aad (bad) (bad) xor pop jl mov addr16 add adc pusha aaa outsb ds push inc rol cmpsl imul mov jle mov adc pushl sti jge sbb bnd fidivrl mov add inc jmp adc xor mov pop iret cmp push add sub jo inc dec sbb dec pop adc insb sbb add mov popa inc push jno lcall pop lods adc pop xchg jne inc int3 dec adc push (bad) pop insb cmp ljmp jle sub mov sub scas test pop or pop adc sub sbb movsb ljmp adc stos insl repz call mov cmp ret add enter es cmp aam int cmpl adc and add fnsave outsl pop add xchg jmp movsl flds push add dec adc cmpl jnp insl or dec sbb inc mov movsb or aas out dec stc in adc push adc add jno xchg xor ficompl insb dec movsb cmpsb lods rolb incl dec dec stos in outsb int3 xor pop add pop lock arpl mov cmp mov loope jge add mov jge push pushl into je adc std outsl adc sbb adc jp pushf xor sub add movsl jnp aas ljmp mov mov decl js stos popf add aam push inc in into pop rcr pop push dec bound adc rcr xchg adc cmpsb aam inc inc add xchg jb daa hlt add gs sub or mov inc jae xor (bad) push nop or mov popf jp add outsb hlt je and pushf out fisubl enter dec mov repz cltd out (bad) adc add aad xor mov in or insl dec cs data16 dec scas adc sub sbb adc cmp stc arpl jbe mov pop dec push adc sarl test imul mov adc lret mov aaa adc dec pop mov ljmp lea xchg daa (bad) cmp adc push push cwtl mov mov inc push sub sub pop cmp adc jne lods insl repz cwtl push fldcw cmp mov scas jbe pop movsb test pop loopne push les in add pop es aad inc adc jbe sti adc test fwait stos push (bad) out rorb lods aas and ljmp mov add xchg mull insb add leave call xchg push adc push xor mov imul js adc pop xchg push fdiv loop and insb dec push xchg sbb in jle pop mov loope add xor aaa call or inc lahf push aad add ficom leave daa dec push jne push pop push test popf sbb sub or and xor jg mov xor adc and mov push cmp adc fisub mov inc int outsl enter xchg mov adc push or sbb and push ret xor jno imul mov mov mov loop in sbb loopne xchg add mov sub rcll ljmp pop adc cltd and adc fnstsw es or add xlat and dec xor xor mov dec mov or xchg js repz stos sub jl jae add adc cmp jecxz xchg sbb sub out outsb xor xor mov test ret loopne jno add push insb adc lret dec or rolb push adc adc fisubr xor dec pop pop or xchg pop sarb repz cmpsb or cmp push stos test cli adc (bad) pop std adc dec cltd adc je push cmp in test jmp push jge sub add mov call cmp xor mov xchg insl adc imul adc dec (bad) addr16 nop icebp ss adc repnz jg ja cmp mov lcall aaa stc mov popf push ja sub sbb adc push mov mov (bad) les or and data16 iret adc int3 or (bad) negl jecxz std fmuls scas jl xchg add mov hlt mov sbbb mov push daa dec adc ret pop mov xor stos inc loopne or imul (bad) sub mov loope scas add jecxz xor lret aaa into mov rcrl push es jns lds pop push sbb xchg mov dec mov pop cltd (bad) or insl mov rcl add adc pusha push jle adc fsubrs xor cmpsb xchg loopne (bad) fldcw repz rcrl mov inc cmp rol or jg or jb inc adc in test xlat (bad) xor je imul in fsub movsl adc inc out jno,pn add pusha or jmp add cmp cli lea incb movsl mov mov es cs add int cmp push xor push push (bad) enter mov xor add fnsave adc jecxz std fs add add sbb and adc pop cmp xchg dec add cltd xchg out or (bad) shrb in out xcrypt-cbc cmpsl push mov insb (bad) outsl push cli pop lods adc stc jg push cmovae mov int in les adc pop add sbb adc push cmc xor divb out push rcrl xor in rcrb into dec lea adc in bound dec movsl mov push xor jns,pt out inc fstpl pusha jne inc add dec loope xchg mov shrl adc in out mov fdivr cmc mov out jne mov rclb xchg sub adc popa jnp pop xor into dec repz or or mov cmpsb push mov mov add sub adc lods ljmp mov adc les adc icebp je,pt std mov hlt mov mov scas mov out test mov jbe adc mov cmp daa adc aad in inc imul pop and or stos adc ss pop jl push mov cmp test adc inc pop fisttp adc mov (bad) sahf in xchg xor mov inc dec repz pop or test or mov and cmp out (bad) xor adc in addr16 je mov sbb and sub mov sbb mov lret (bad) mov int3 or xchg sbb xchg mov cmpsb mov fstpl dec pop inc sbb adc stos xchg mov xchg and xlat ljmp sbb movsb adc inc xlat xchg xchg cmp (bad) pop pop scas in mov push mov pop icebp pop sub sub sub fnstsw pop pop rolb sbb jb dec jmp enter scas or fidivl lret pop lea push adc (bad) jbe repz (bad) adc jns pushf sbb movsb adc in ret jno (bad) es pop fwait jns pop jnp inc add fstps sub sti push js jecxz (bad) stos pxor add aam dec or or icebp std mov xchg adc sub sahf cltd sbb xchg stos (bad) cmp lret pop xor jno cmp aam or (bad) iret sub mov xor xchg sbb icebp fiaddl push popa pusha adc dec push mov dec xor stos dec (bad) xor fmuls adcl int3 (bad) jbe adc xlat lcall movsl sub cli shrb pop (bad) arpl xchg jg xor xchg add push jae add push push adc jo or fsubr jns dec es adc push clc js (bad) xor mov cmpsl push loope inc adc insb gs adc in adc mov int3 xor ret sbb xchg (bad) cli lods jnp or or fcmovb pop shr push xchg adc nop icebp lahf in pop jnp enter mov out adc mov mov or mov js mov nop push add fadds sbb popa sbbl add lcall jmp inc push sub pop ret mov jns (bad) or sub ja dec jae inc out call ret pusha fistpl mov sbb xchg mov aas or cmp mov xor inc leave cwtl and xlat lock lret dec and xchg daa xchg mov xor imul call add xchg sbb insb jl lods jmp pop sub dec adc in rolb xchg add inc jp mov xchg adc rcr in xchg adc adc movsb add pop xor sbb add rorl adc and adc and xor push push jbe leave sbb sub push stos jp lret out ds cmp (bad) (bad) int3 pop adc xchg jle adc rcl daa loop in adc push lret js insl dec ja test jecxz adc lcall shrb mov out pop jl add pop int3 inc mov sti inc sub test mov adc mov adc inc push dec cltd pop fimul rol push out sub add mov roll dec sub pop ds stos lea xor xchg fs add ret inc adc in in adc push (bad) dec repz fbstp jecxz repz es cld bound (bad) rorb adc pop daa fcoml imul je xchg test or pop or inc out sub adc movl (bad) (bad) sub jle shrb add jg or aas or call jle enter cmp mov movsb idivl std jne and cmp or sub adc les out lea sub add xor in cmp dec clc jge adc mov xlat mov xchg (bad) sub jb imul sub dec and lahf andb mov push jmp into adcl hlt jmp outsl inc shrl bound aaa cld add dec add int3 (bad) adc mov mov adc popf rolb xorl jg out cmc or imul adc icebp jle adc push xor mov xor lret repz mov rol hlt lea cmp adc jle les push adc lret fdivp adc xchg jecxz aas enter mov aam out xchg scas adc test test adc push stos test sahf out fisttp jo pop xchg arpl cmp popa xor out mov fcmovne int3 loope jge adc into test adc adc xor or or adc and dec or push scas lret outsl (bad) push lea loopne add add icebp adc out mov dec adc or leave adc xchg jo xchg xchg int3 adc and repnz pop inc or xor inc div lock ss shrl fidivr adc sub lret lea mov mov pushf mov pusha loope ja push lgs xor in sub lret adc fcomip or out jle xchg cmp std loope lock adc (bad) rcrl or lcall mov xchg pop stos fldenv adc cmc mov sbb add hlt aaa lods cmp push out push dec push andb lahf je movsl push xor or pop push sub jnp std or adc test sbb xchg xchg xor lods aas adc mov lret repnz test popa jl (bad) mov in jp sbb mov out mov mov mov adc mov aaa loopne cwtl mov loop mov xor xor int3 (bad) mov (bad) cmpsb cmp xchg pop inc push pop rol out add inc lahf iret xchg add dec pop sbb mov sub pop pop inc sbb test push xchg push movsb or pop add (bad) jbe daa mov or mov addb and es mov ja mov pop and or aas ret cwtl es popf out adc xchg push jge rcll push lahf lods sahf cltd inc add and (bad) mov xchg add popa mov xorl cmp outsl ret and sahf out loope mov cmpsl nop lds out or out les sub mov pop scas cmp ss scas pop loopne test add mov stos xchg movsl pop xor mov mov (bad) loopne imul sar into out fs insl mov mov dec sub or test stos ja push je fdivl gs fcoms adc pusha loopne cmovb jno xlat dec and mov sbb or inc adc push cmp les mov sub (bad) iret xchg or xchg (bad) cmp push and (bad) push arpl jns js sbb nop adc je repz xor push std pop fidiv js rclb pusha dec in pop sbb daa adc jge rol test jne repz imul xor lret inc leave lock adc pop movsl mov inc loopne and in (bad) ja popw xchg cwtl or mov adc mov adc data16 (bad) iret loope bnd sbb out stos add xor sub dec std xor (bad) fisttp add test adc imul adc add out add fdiv add cwtl inc lods repnz cltd (bad) daa and fidivl outsb or mov cmpsb push push cmp js repz or rolb adc dec (bad) adc sti es aas into pushf (bad) xchg xor rcll sbb lea sbb movsb cltd add jp sub cs mov sti into cmpl sub mov outsb imul sbb in pop out adc add cmp sub and dec pop adc ljmp adc or xchg dec idivb out push inc push lret inc dec scas mov add movsl imul jecxz mov pop sbb inc aad lcall lods mov and jae pop jge lcall rcrb lret inc imul out les fimull inc pop mov pop nop mov jp cwtl fisttpl or push or inc call mov mov dec daa loope adc adc dec mov sbb xor adc ljmp add je add push loop dec adc inc nop xchg hlt subl fbld cmc dec pushf rolb adc jmp push jle dec in mov lret rclb adcb jmp sub int3 mov mov clc dec loopne mov test imul lret push das data16 adc lock jne les ret pop sub dec adc inc (bad) je hlt imul rcrl xchg adc lock xchg mov vunpcklps cmp addr16 cmp push sub psrld cld int cli adc jbe xchg jne mov xor mov adc pop and inc xor xor mov test adc pop add adc pop pop lret push sti and or and add inc push into and add mov insl xchg addr16 ds insb add rcll ja push cs add cmp and fld and pop pop adc movsl mov rcrb jae sub mov lock push adc lods or cli fild or sbb adc out push loopne mov mov mov mov adc push and cmp mov test sbb sbb lahf fidivl cmp dec das push jo push inc leave lods add or adc cmp pop aas adc inc sbb adc sbb adc adc out mov mov add out adc pop or or jp add insb notb ret inc mov pop mov jmp lock pop adc xor rolb nop sbb adc sbb imul lret pop mov and add dec adc rcl sub xor mov push xchg test rcrl and stos push enter or iret ficoml into sti stos or andl (bad) adc jns in push adc sbb xor sbb adc cmp leave int3 sbb push xchg mov lret adc xchg lock pop ret fwait stc mov mov dec fist sti enter push inc and loopne lea ljmp in mov mov aam jge dec ds xchg lock mov stc adc aam sarb leave stos and push push mov into (bad) push fnsave or call pop add (bad) mov (bad) repz out mov jae jmp mov test aad (bad) adc (bad) stos dec (bad) out nop lcall jecxz iret xor bound cmp hlt cmp popf mov ret pop adc pop adc xor jno jge xchg or rolb push (bad) xchg repz fbstp out lea and ss sbb fdivrl leave mov mov nop enter (bad) push add inc aam adc mov adc cmp adc push ljmp lods adc stos pop mov xchg adc (bad) jge sub ficompl push xor inc (bad) adc jae scas std mov les enter mov mov or xor dec cmp mov xchg jo mov cwtl popa call mov mov repz pop xor or or mov nop scas ret adc pop pop adc iret loop sar lcall xchg inc inc pop (bad) adc cs arpl or xor sahf pop loope movsb adc data16 pop push pop imul dec sub insb xchg mov cmp shrl mov jg rclb pop sbb sbb cmpsb stc adc out push inc inc clc decl dec insl jnp ret xchg cmp sbb adc stc lods mov aaa adc daa dec iret add xchg and jg rcrl mov neg mov push mov jnp mov add frstor pop repz das js sbb pushf fs lcall inc lock in xor or and or (bad) lret xor scas jge jecxz inc sbb arpl andl (bad) adc iret scas jge pop int lock repz xlat mov mov mov mov xor aam xor lret lock ljmp (bad) in js sub xchg es pop push jb ja mov push xor mov mov icebp adc repnz aad inc sbb lods adc xchg iret (bad) adc xor ja,pt loope sbb nop add rorl mov adc fwait dec sbb adc stos mov push fist into shrl ljmp mov push (bad) jo test out add sbb adc add lahf adc xchg nop xlat push notl fiaddl stos jno xchg dec mov push adc shll add adc push and call aad stos inc and rcr rcrb jb (bad) notb addb xchg adc mov cmc fs call sarl push mov loop adc rcr negb pop (bad) cmc mov addl test imul aaa jl add and andl xor (bad) pop mov ljmp and pop in hlt call adc insb mov int3 xchg jbe orl dec adc sarl adc mov out inc sub mov mov push jg stos in xchg adc add xchg inc (bad) (bad) sbb inc mov xor mov lods jbe nop push js adc out stos fidivrl adc sbb lock or stc dec (bad) mov bound sbb jb xor adc addr16 fsubl das mov pop sub ss adc test dec adcl std lea adc inc lds jp adc xchg push cmc cmp xchg fistpl repnz adc jo dec and mov xor mov jmp or fidivr je adc mov adc lods std mov movl subb ss mov jp loopne sbb lods aas mov mov mov fcoml shrb or hlt mov sbb fcmovbe sti push aaa mov sbb adc loope jo pop xor cli mov adc push xor mov sbb divb divl das jbe clc mov (bad) repnz insb jb aam or repz fwait gs or pop xchg test ret pop fmuls adc xchg ds xchg loopne test dec adc jo mov mov and mov fild in mov inc sti mov repz leave pop sbb inc movsl imul test xchg mov incl aam mov data16 (bad) adc sub sub pop cmpl adc bound add sub insb lret mov mov cmpsb add mov (bad) sti int add xchg test cmpsl and nop addr16 ss xchg int adc lea in imul or cmc mov gs xadd pop iret hlt bound add outsl fmul push or into std push xchg and stc mov or bound cltd mov outsb rorl adc push cli mov xor pop test and cmp jne leave jns pop adc fldl push inc mov loope loop and and call repnz dec mov pop jb pop adc mov std mov mov lock pop js lcall push adc push movl lcall mov mov dec sbb imulb mov movsb xchg add adc mov test scas fistl jg sub sbb imul sub (bad) adc arpl inc push cmc mov out adc sbb push and jmp sbb jg xchg dec fwait rcrb mov repz lret cld stc cmp jle mov lret push std daa jl rorb (bad) aad push and adc jae push adc add loop push cmp enter adc jg inc adc daa lods pop fsub adc in adc push aad mov pop xlat jl mov push or pop jno adc pop and rcll test repz xchg xchg dec hlt in movsl adc loopne adc fs (bad) xchg cmc cmpsl add cmpsb jne in sub adc dec fisubrl cmp sbb sub pop cmpsl adc leave or jno jge sbb ja repnz push shrl adc mov sbb xor (bad) fdivrp mov pop dec xchg adc hlt pop cmp notb and rolb push fwait loop pop inc fmuls adc mov pop cmp inc adc adc pop std or dec fdivrl or push push fistp pop jle das into inc repz add mov (bad) jns jge adc test stos jae or xchg movsl mov mov mov rol sti xchg adc inc pop (bad) repz jmp jp into faddl sub jns sbb aad mov dec mov dec fmull xor lret or jns mov mov push es jae push imul rcr adc xchg lret int mov dec test sub neg mov push jbe xor adc pop popa adc sub xor xlat inc pop xor cs (bad) adc mov das pop (bad) fsts cmc stc fcompl adc es xchg adc pop mov jmp add fildll in or test nop jl mov add sbb pop push adc adc ja test adc scas dec nop sbb int3 mov mov xchg mov or adc cmp in int frstor adc dec xchg sbb push sub adc stos leave and es adc inc push jle lea or cmpsl cwtl adc push sbb lea stos lret (bad) push test pop pop mov ret inc (bad) push cmp pop mov xor jns or jb popf mov ljmp add into adc rol (bad) mov add jns or and in cmp dec dec push aad xchg fmuls mov inc in adc nop inc aaa movsl and fisttpll xchg sub and push pop mov (bad) or cli loopne mov sahf cmp adc adc xor add (bad) dec jbe jl scas pusha mov outsb pusha or hlt adc add and aaa sbb sbb ret mov insl adc xchg jecxz addl pop and out pop std and cmp in cmpsl aam lahf rcr adc and adc jae in icebp out adc addr16 clc or sti push repz lea mov adc sub loop cs push mov ss pop in cli adcl pop dec out cltd inc mov inc test les pushf movsl test add popl rcll jb,pt lea add push inc insl pop fidiv pop mov sbb jmp into xchg jecxz pop adc dec rcll jno mov push arpl adc cli jp imul jns in leave rcll (bad) mov jne sub loopne xchg in and std call fisttp cltd ja mov repz jge in or sbb mov pop hlt pop adc xchg sbb cmp adc dec aad xchg cmp adc (bad) ja out fmulp adc (bad) lahf jb dec adc xor enter pop adc ret adc push mov mov inc pop push out adc push xlat sub push cmp cld cmp adc cmp and xchg mov mov cld inc ds inc add lea imul adc mov adc mov lea xchg mov inc pop aas adc jb call or aad je in rolb mov cmpsl mov xchg iret jb std adc out jo inc insb cmp adc bound rorb loope cld mov adc or dec outsb loop mov loope data16 iret adc add adc sub add stos adc lock cmc inc fucom adc (bad) jno xchg mov pop push or pop mov ret sbb pop cmp das xor push enter test and sub addr16 adc (bad) and inc mulb sbb daa sbb insl (bad) jne adc ret lods inc das pop adc xor js ret leave scas jno mov pop in test jbe adc sbb xchg and and push lret dec int (bad) loopne repz mov nop mov inc icebp sbb aas adc xchg pop in jg (bad) repnz fnsaves jno cmc xor into adc xor xchg push push loopne cmc fnstenv pop inc (bad) rolb jb adc loop cmpsb mov addr16 adc sbb adc adc mov movsb pop sbb repnz dec adc (bad) sub rclb insb cmpsl dec sbb adcb push int push xor sub sbb mov imul scas sarl jecxz adc je add sub mov dec lods sub stos jle ljmp gs arpl dec pop mov push in cmpsb out decl add xchg adc das cli pop mov pop xchg sahf sti adc cmp cld (bad) dec and push ficompl paddd jae (bad) in cmc sbb or (bad) sbb dec repz pop mov or inc sbb pop push cmp xor repnz push bound int3 loopne adc arpl out add push sbb and add cmpsb std inc adc mov push aaa ljmp mov int jno and mov xor add sbb movsb and add push ja (bad) (bad) xor mov add cmp (bad) pop jno movb sbb xor ds repz sub lret mov or add adc jl mov sbb dec lcall mov push adc xor jmp loop and adc test mov jno out cli stc or icebp js mov push cltd pop divb add adc adc enter inc sahf lea popa pop mov sub push (bad) mov push adc fwait inc icebp or test addl mov call dec mov or mov xor rcr mov adc push sub fnstenv gs (bad) nop xor push popa xchg sbb rcrl jae pop adc and rorb mov xchg fisttpl icebp outsl iret ds out add sbb xlat xchg pop or cmp mov adc pusha adc es sbb ljmp sbb ret or or imul inc imul adc negb adc repnz mov add (bad) jo sub adcb add inc or cmp xchg pop nop mov daa jg into pushf add lcall test mov es jno jnp jne dec mov lock xchg pop inc push adc and adc push fidivr mov xor popf adc mov and adc data16 (bad) xlat mov cmp fisttpll sahf xchg add outsb leave jns jae push adc aad xor fstpt outsl xchg fisttpll cmc adc xor inc enter pop xchg cmp arpl repnz adc (bad) divb in add adc mov ficoml mov mov (bad) sbb mov cmp repz pop lea adc ljmp push out cwtl xor dec je xchg adc jp inc mov cmp push adc xchg lock adc mov stc addr16 lret and adc and mov cmp jbe test adc ja sub imul ret adc lods mov push into pop adc mov mov push data16 lea out jns dec dec js mov pop repz addr16 adc pusha insl (bad) adc lcall jl rcrb je in mov jle mov es adc sti (bad) cwtl adc xchg cli ret fdivrs adc lret push adc pop and and add fsubs add in inc xor leave push mov arpl popf dec cmpl add jle dec shrb cmp xlat push lods aaa insl add cli inc and aam pop fs cmp call movsl cs js fidivr lret pushf ja xchg aas xor fcompl lcall xchg sbb fs adc test nop xchg fist adc movsl add insl fwait mov or cmp daa push mov adc cmp lock test dec add jnp (bad) in push div xor pop add (bad) cmp push insl jl es (bad) fildll aaa inc dec fdivrs sub sub push sub xchg adc mov push sub notl push push repz mov aaa adc pop or add xor shr inc fucom adc cmpsb xor pop fwait add adc xlat pop jno cmpsl rclb xorl js adc add outsb clc adc aaa stos sti or adc and xchg dec mov cs add cmp rcll sbb arpl shlb xor loopne outsb push mov pop push mov stos xor jle mov sub outsb fwait popa sbb cltd and sbb xor aaa pushf dec sub in pop jg out pop adc ret push fnsetpm(287 mov (bad) xor sub xchg ret dec stos push adc or xchg call sbb gs stc mov add push stos mov (bad) ljmp jmp mov xchg push pop push rorb cmp push adc das push ret scas insb mov or rorl mov frstor adc rolb jno rcll int aaa adc mov loopne packuswb pop fsts and jge out pushf or in outsl xor xor repnz nop lea cmpb mov adc xor popa js dec push shrl sbb (bad) xor ja sbb dec stos gs movsl scas xor orl adc icebp add jge mov out dec mov add sbb test cmp jne ljmp sub rorl out jnp add loop outsl cmp add dec jbe cmc cld popa sbb xor loopne add or or mov insl xor push sub jmp popf jno jne adc lcall and push repz loope out push adc scas pop outsb mov cmp stc sbb sub imul xchg repz sbb mov push out jl ss sahf outsl sbb sub pop aas or xor loope add jnp in adc out mov sbb sub and (bad) adc mov ss xor cs (bad) xor inc movsb arpl int3 adc mov cltd adc (bad) hlt jae aas jle mov xchg repnz dec fldenv and lcall sbb sti rcl cwtl scas or adc in inc int3 xchg fucomi adc push (bad) daa jne add inc push pop jecxz addr16 adc and fidivr fucomi popa fbld sbb fs fwait mov iret jle popf neg mov repnz incb add xchg add mov and xor adc pop and mov cmovno (bad) adc mov xchg call (bad) cli and test push and mov push dec jmp adc fsubrs in sub jne sbb addr16 fimul sub fwait dec or or aaa rclb repnz (bad) icebp xchg adc inc sub adc jecxz mov shlb enter xor ficompl add fisttpl mov adc (bad) mov jg mov popa cmp adc in mov lods push or movsl out or cmp cltd repz aam pop or (bad) mov lcall pop adc aaa pop jge sub cld cmp mov out fistp lcall mov enter hlt pop xor mov (bad) mov out adc sub dec scas or movsl cmp lcall fcomip fidivrl addr16 cmpsl les test test xchg dec fbstp ret adc arpl inc iret push adc fistp adc sbb inc mov xchg lods sub adc fadds loope dec mov xchg mov repz jmp pop clc sub push mov xchg out xlat int dec xchg pop dec mov ret or outsl mov mov adc arpl cmp (bad) ljmp iret push (bad) bnd adc test repz std or xchg lcall jbe das mov or jmp or into int3 lds test shlb sbb pop inc cs icebp mov pop adc fstps or adc test dec pop ja dec iret daa adc popa pop xor jecxz sub or call mov adc push repz adc mov push mov insb sub jb jecxz loop and sub loopne or pop adc dec jbe and adc repz das inc cli lods xor add adcl fsubs sbb adc int inc lcall cltd cmp fcoml loope adc add into int insb mov out xor enter mov ret lcall dec pusha xchg sbb lea out xchg fwait adc nop sbb out int mov xor or jo cmp mov xor (bad) and jne cwtl adc aad loop push js enter sub sbb mov xor jle (bad) pop cwtl int3 rolb push xor repz or adc or aaa cltd lret mov mov in insb incb and cld pop adc and cmp fcmovnbe sub adc loop sti addr16 pop pop (bad) sub lret stc or imul fld mov adc xchg ds repz add push daa mov adc lock xchg sbb push fnstenv popa add adc es stos repz mov lock add mov int3 adc pop xchg dec hlt and adc icebp (bad) jp test aad xchg adc arpl push nop pop jmp adc out out movsl dec cmp addr16 mov lret push mov dec daa je mov mov adc or ss sahf add je dec popa fmuls dec cmp (bad) xchg sti push mov xor fwait push or push das or cmpsb notl nop clc and ret dec pop jns jnp (bad) add pusha cmp adc push test lock sub jnp jmp (bad) test mov mov push stos jo xor mov mov lods add iret cmpsl add ficoml mov pushf adc jb imull sub adc push scas adc xchg rcll dec adc jg jmp jno jne push and xor jecxz adc xor mov lahf ljmp std mov lods xor adc push xor mov mov inc add cmp sbb mov popf icebp ret xor push adc decb pop adc xchg and (bad) xor mov (bad) andl insb mov clc repz mov push lret adc or mov aam push mov test lods jecxz jne pop inc adc inc movsb gs pop push adc (bad) xchg (bad) jae push shll and pushf sub ss add repz lcall xor mov adc sub cli hlt jnp adc cltd xor xor in adc loop sub jnp je inc popa hlt jge mov sbb fwait adc dec icebp and xchg adc add adc lods pop pushf inc adc insl sahf xor push mov lds jmp cmp outsb imul mov xor ficompl test js push leave mov ds lret sbb sbb mov dec adc test xorl cmp xchg jmp push ror lahf aam mov inc and ss dec jl push mov inc mov xor lods pop sub adc icebp or and jmp (bad) cmc push push cltd into add loop or dec (bad) lock dec pop decb jo adc mov lds push aad in enter adc bound std add idivl stos adc inc push sbb test mov fcomip cmpsl adc inc stc or inc out cli adc push sub imul pop mov in or adc outsl dec mov notl fs mov nop repnz push scas adc adc aaa stc (bad) adc xchg stos into adc out les and adc aas fcmove inc push or jg pop test push lea pop (bad) iret enter jb adc (bad) cmp or test mov sti aam mov icebp mov sbb cmp ja cmp cmp push jno cmp scas and stc and dec pop incb test bound subl loope dec fdivl and arpl sub loopne adc adc push sbb mov mov stos xlat fmull pop cmc add push push in and insb fwait dec dec aad mov shrb push lock pushl rclb aas mov push sbb mov call push fdiv add ss sub nop adc mov mov adc data16 adc out jbe test cwtl xchg cli adc jle xor xor test test and inc adc dec clts adc popa fcoml push ret out pop (bad) fimul push adc adc adc mov test xchg outsl kmovb sub mov je daa adc aas cmp xor outsl sbb mov push data16 sbb test mov dec mov mov cmpsb inc push adc insl and outsl and or inc adc add adc mov nop shll mov cmp push sbb pop push adc push ret arpl mov sub or (bad) pop test imull xor sub adc mov jmp (bad) mov cs adc test xor dec adc loope dec ja jg add testb push mov les xchg pushf inc lahf xlat add and adc jns fmull push data16 adc scas mov or lret (bad) out xchg in jnp stc icebp cld xchg xchg shll sarb repnz repnz push call sti mov aas icebp scas xchg ds lods pop dec add (bad) push adc push cmp outsl test mov stc xor cmp mov es dec test add test jno xor mov lcall fisub (bad) sub lea lock enter pop inc bound jb nop xlat in mov mov pop pop mov mov or data16 or adc mov dec push mov cmp mov lahf adc sub mov movsl dec mov mov notb xchg or add mov js push adc dec mov xchg out enter test mov mov or mov pop xlat adc icebp xchg lds mov outsl rep dec mov std adc xor dec nop adc or xorl lea call push rolb xor imul jne arpl lahf adc in inc test mov cld mov outsb jp sbb mov cmp push add aas repnz es repz xchg fidivl pushf xor jle pop xchg mov cmp call ret mov lret inc inc cmp ret rep push loopne in mov xchg mov add lea out repz repz into (bad) rcrl sbb test in mov dec push das cmp lock mov lahf add xchg aad mov outsl jb xor test jae mov jg cmp adc std ret aam dec shlb scas jmp das imul mov mov rcll adc out xchg sbb cmp xor adc sbb jl inc or pop cmp mov int3 jge stos divl pushf xor xchg aas add shrl and cwtl dec xchg cli xor loop mov dec jge inc test out adc sub jg lds insb xor shll imul adc in adc js fs mov pop or push movsl push pop les xchg lods cmp mov xchg pushf dec jo sahf adc sub std insl dec jno or cmp ret jmp hlt int out adc das aaa loopne dec sub pop mov jle lods jno ret lcall xchg outsb fldl lock xor fimull and dec cli or leave test dec or or int3 push jl cmp bound or push pop ret mov mov cmp add int bound popa decl adc ret adc pop pusha push inc (bad) sub xor adc sti adc xor or test sbb pop and adc sub mov xor push pop push mov cwtl insb inc nop pop jp dec adc adc xor fcomps pop push pop aam arpl mov lods or jl push aam pop adc inc adc test mov sti mov xchg in mov mov (bad) adc loop and xchg pop bound dec adc sti fbstp aam inc roll fisubl cmp jg dec pop lcall cwtl dec pop lret es pop mov xrelease fisttpll mov or lcall mov mov test movsb repz sbb push lock mulb pop out fnsave test arpl push and xchg addr16 repz adc scas dec sub les (bad) xor out cmpsl adc or repnz popa mov cmp and adc jecxz out dec scas adc jg ljmp jo xchg test or in outsb and sbb adc repz sarl fistpl int data16 xor jnp cld add mov aas and lcall adcb les int3 sti shlb faddl sub rclb xor fcmovne sbb inc pop lods fdivl xchg push out xlat cmp (bad) or mov cmp adc xlat data16 loope jmp or daa cmp or push pop xor (bad) mov xchg repz dec test daa lcall imul cltd imull or sbb or cmp push pop test in adc mov push (bad) cli adc sub cmp cmp and pop aam sahf cmpsl pop ret sub outsl lret stc adc push pop pop mov imul aad adc inc movsb cmpsl hlt push adc cli test lock adc sbb adc pop mov fnstcw (bad) xchg shll lahf popa push fs hlt push and popf data16 cmp loop pop cmp pop or mov sarb aaa scas push mov aad paddsb in fiaddl arpl sbb dec mov jle aad pop inc inc and cld adc mov cmpsl shrb mov pop inc loopne xor pop (bad) lcall dec fmulp (bad) add into adc mov mov mov lahf aam (bad) mov addl add mov addr16 sbb stos bound fcompl mov push pop lahf dec dec adc std in lds notb (bad) jbe pop mov cmc push ror push and adc bound inc enter mov or fnsave std jae xchg inc xchg test and mov subl push out adc mov ret adc les jne lds adc and nop add mov push mov mov out lods repz pop fildll lret adc inc jne adc mov std pop adc mov pushf imul mov out cwtl xorl mov test push (bad) icebp aaa ret leave mov ficom out sbb adc add xchg xchg in mov int mov xor sub or scas addr16 xorl inc out call aad add pop mov sti xchg adc mov jmp shlb sbb dec loope adc mov jp xchg shrb xchg adc data16 not inc int out pop and push jno push xchg pop aaa dec mov in adc mov dec adc (bad) sub hlt in xor mov les jne xchg adc adc sub mov xor jbe aad cmp sbb (bad) repnz bound jg adc or loope add cli (bad) out pop dec push lea (bad) dec popf pusha sub adc sbb rcrl out jmp mov and push ret cmpsl mov lock loope fwait add stc repz out (bad) (bad) push movsb or xchg mov mov mov popf clc test mov mov xor jmp scas mov in push xor lods pop mov sub add movsl and stos add (bad) mov fdivrl int3 icebp and lods bound or mov mov mov adc inc jne lds sub adc lret lea insb xor sahf sbb mov jp mov xchg int mov or in sbb pop in add fsts inc sahf adc xor adcl cmovne lahf mov popf mov mov cmpsb xchg xlat inc pop mov stos lock jg mov rcll xchg cmp jo cs scas or mov cmp loope adc int pop pop aad adc aas es adc mov mov sbb adc (bad) xor fidiv repz xchg mov fistp fcoml push ljmp and push dec adcl mov test sbb pop push add sbb mov addr16 sub frstor add mov mov adc sahf xchg and add lea mov pop repnz cltd adc pushf imul mov mov adc mov stos out fwait jno mov (bad) clc insl ljmp popl sub adc xchg repz pusha inc mov cld adc das lcall sti ret out sbb cmp adcl lds leave stc xor das xchg cmpsb jmp mov inc or jge push je adc xchg dec adc lods add gs loop inc add (bad) push shr movsl mov enter jle ret cmpsl dec cmpsb mov xor push rol mov addr16 cmp push sbb out rorb and pop adc fpatan and push bound shrb (bad) mov int3 out insb out pop lods jg mov push daa loope in dec adc aad (bad) mov mov sub cmp or int3 xor inc and inc jmp inc mov jo into xchg sbb (bad) ret adc in loop and xor stos test push mov jne adc mov movsb mov ret push pop outsb adc add push fucom rclb lahf gs scas push jl pop movsl mov cmp adc xor mov pop jbe iret out adc inc and jl adc and imul (bad) jbe lcall or int pop adc gs aad (bad) sarb fldcw add xchg mov ret mov add pop jno adc jl mov xchg mov shrl add mov mov mov add adc cmp repz xor inc sahf arpl sbb or jmp xor add mov dec jl es and cltd push or adc push xchg xchg jge,pt repz sarb add mov pop repnz adc jo cmp lret in cmp fsubrs or hlt rorb leave nop in xor add fldl mov ret adc rolb and repz (bad) jle mov or push mov adc sub adc aam xor push xor add aas xchg jl cmp dec cmpsb cmp jmp cs mov sub sub fsubrp roll hlt ljmp scas out mov xor jns dec mov fcoms and inc mov js aam ja pop ljmp gs xchg je orl dec or out jmp call cmpsl and mov je js add pop push int int3 jg push (bad) aaa out fs xchg cmp scas bound into adc push jge push sarb subb mov pop mov and (bad) jle mov add cltd lcall mov xchg pop mov popf jns (bad) lods mov push out push adc cmp int adc fs push sub pop idivb clc fdivl in inc add outsl sbb adc scas (bad) jne lcall mov pusha movsb pop push xor jg xchg dec pop and push in sub dec mov ds adc xchg mov inc arpl push aas pop push sbb xlat icebp adc mov or pop pushf cmp cmp sub fcomps add jno stc adc aaa push adc (bad) push lds mov ret mov dec sbb in adc add sbb add rcrb jge cltd sub cmpsb adc adc adc cld pop jle mov pushf jmp lods into sbb loopne add adc push inc sub arpl mov dec pop sub popf cmc hlt lret adc pop mov adc outsb dec mov rorb mov mull adc rcrl jno jo repz xchg pop push sbb dec mov cmc test int adc xchg fimul cmpsl stos xchg lcall aam add insl ja movsb inc jbe xor jmp cld bound or pushf scas loop push adc fs add js xlat jmp repz out not aad repnz adc ret sbb sysexit adc mov cmpsl scas ljmp xor orl ss push call push sub (bad) hlt ds and shl and inc xlat jl cmpsb xor pushf leave shll or in adc test test xchg adc and adc xlat xor insl les arpl sub mov (bad) out dec xchg cmp inc adc mov cmc pop mov das xor cmp inc adc imul xor outsb fwait pop jl leave xchg push inc dec adc push out arpl xchg cmp push cmp jl test lock mov into mov jge repz pop fsubrs out repz lock std test out mov dec sahf loopne adc aad in cmp ret sbb mov sbb (bad) pushf mov and dec lea cltd mov fwait or in mov mov add data16 push jae pushf imul das push aad pop and inc mov out jno and (bad) mov or mov mov xchg pop out mov adc mov bound imul xchg xor inc hlt (bad) or out adc mov movsl adc jl mov mov hlt mov stos dec nop push fwait js cmp sbb mov mov aad (bad) pop mov add es movb xlat dec call xchg sbb aam outsb cltd jo (bad) ds (bad) mov jmp ja (bad) adc xchg hlt and repz ja adc out cmp outsl inc les sub adc sahf mov jno repz adc in fcomps adc test pusha fsubl and push jle repz inc xor mov adc and mov jae dec mov xchg cmpsb adc out shl jecxz incl dec and add cmc (bad) lea pop adc inc inc dec in ror cmp scas inc test adc pop dec repz (bad) imul jecxz sahf xor movsl adc in jbe lret sbb mov adc fucomi jmp and stos cmp outsb ja add inc mov push inc in push or add je fimul xchg clc movsl sub mov mov mov push push je jmp gs push sti dec addr16 inc pop adc insb iret shrl cltd jns adc call dec mov inc loop lcall push pop mov add rcrb xchg or std ja outsb mov xor rorb test or adc loopne xor adc rcrl dec call sbb push sbb jno sub addr16 xor test repnz or cmpsl pop adc pop aad repz xchg test insb pusha add cli adc sub adc ldmxcsr outsb xchg cmp test adc xchg jle les loope mov push inc fnstsw adc pop arpl or movntq out pop mov jo mov xchg insb inc mov xor jno aam cmp cmp ror pushf or cmpsl mov xchg loopne push inc outsb push add dec mov sbb mov mov sahf xchg jo idivb jle mov pop (bad) jne xorl or fstpl adc lods stc dec add rcrl dec dec fistpll or push push (bad) sarb dec test dec das add cmpsl add imul mov rorb out lahf jmp adc movsb cmp incb xchg add and xor pop subb push add cli mov repz add mov rcrl imul rclb inc inc fcmovnb (bad) in (bad) adc repz sar (bad) mov cmp xor push icebp jge faddl in pop pusha mov repnz adc cmp imulb mov jae add ret aad int inc (bad) das adc mov mov mov add jl es or lea or add add mov xchg test int add cmpsl rclb cmpsb es push icebp jmp adc jne xchg iret sbb pop lods loope test inc cwtl fs xor mov mov add push adc out mov jo and add sti mov adc in mov ret push jne pop adc lret cmp pop pop icebp dec mov dec stc and (bad) into fsts notl or (bad) rorb int hlt sbb sub xchg daa jns insb jecxz and adc jo push adc scas (bad) (bad) adc aaa outsb roll inc add std jbe daa adc cs cmpsb pushf insb adc add mov push in stos and lock scas hlt les xor mov xchg add or fcompl fistpll sysret and ds and fildl rcll shrb fcoml jne emms mov insl loopne ss (bad) scas out adc jle pop xchg inc (bad) and or and mov cmp (bad) push arpl or inc ja cmpsl stos or add sub cld (bad) mov jns out mov jp insl rorb mov jle mov cmc imul mov inc dec pusha and jo add inc mov loope repz je out mov push das mov cmc mov mov adc push imul (bad) lcall sub adc adc fsubl popw sbb adc js scas mov mov insl and xor lods aaa xchg add and mov xor movzwl fst rcl add adc adc int cli jmp jge fnop or mov and or adc lea xor adc pop lds loopne dec xchg xor jg add sbb or ret lods add adc sbb adc rorb adc lods mov ret adc loopne xor adc or add mov (bad) aaa and jno pop std pop pop sbb add repz cmp sub cmp xchg rolb pop sbb push adc push rolb movsl xor xchg rcl jae fldt sti mov pop sub sbb mov js leave jae (bad) xchg (bad) xlat or je pop mov jnp jl xchg or notb leave adc das sub js sbb mov add fwait out testb push adc jle push inc xchg int out push aas lcall mov mov adc adc test dec sub outsl adc sbb cwtl out jle or mov jo sub dec adc in movsb in adc test or nop push ret mov repz xor sbb dec or jmp cltd ds mov stos cmpl inc js jg push adc adc and cmc xor push mov (bad) divl les jmp pop xchg repnz hlt push and mov ret adc fist xchg sbb repz clc ja jmp push adc or rcrl or sbb adc adc repnz arpl push jo lds bound xchg mov fcmovnu adc in pop push aam lret pop xor mov lahf xchg cmpsb fs pusha popf add es adc or cmp test sahf adc pushf or or or fst mov imul leave stc adc lods cld inc pop cmp addr16 mov xor or fisubrl jne fcoml jmp mov stos aad xor call xchg jg ffreep adc mov mov ljmp out xchg adc mov mov xchg test lahf or ljmp jg and adc stc adc out sub jbe rorb or push lret fcoml mov push loopne adc dec xor sub addr16 jno mov (bad) xor int xor cmpsb nop dec cwtl or pop pop ss jno sbb jmp mov xor outsb stos mov fmull inc and dec or jb or mov xchg sbb aas bndstx mov push mov shlb repz adc out sti pop test addr16 aaa add and adc mov fsubs outsl sbb aas cltd adcb (bad) or gs test mov mov cs mov repnz in outsl rolb fidivl mov scas cmpsb pop lods scas loopne sub inc jbe sub repnz mov mov fnstsw adc sbb adc or loop stc js and adc sub test int adc (bad) xor fisttpl adc stos bnd add mov cwtl mov pop (bad) push xchg ficom mov lods cmp add sub mov and push xchg les aam in mov cmp sub lds jo (bad) adc push in daa shrl adc aaa lahf mov sarl addl mov lret bound jg rcl xchg inc cmp movsl jno inc in adc into sbb popf pushf adc push cmp cltd gs cmp sub popf push cmp adc dec dec jge or data16 iret ds out arpl insl mov sub int add mov jae ja pop loope lret movsl fist pop cli adc lret xchg mov push adc les dec adc test mov lcall push lret imul (bad) pop adc xchg add (bad) mov fs pop outsb ja xchg pop inc add mov int adc push or push lret je mov dec mov or adc popf pop jge cld push xchg pop xchg dec push jmp cmp repz adc in xlat lea pop xor sub frstor shll push pusha dec xlat icebp mov jno pushf decb idivl or cmpsl popw add js fcmovnu and jmp rorb xor mov pusha repz jmp mov mov cmp mov adc cs ljmp iret sbb shrb fidivl rcll sbb nop push cmp ret mov in adc aaa das lods push mov lret std jecxz iret repz movsb mov cmp call rclb sub insb adc (bad) fnstsw inc inc stos adc or xor sub push xchg adc mov adc (bad) dec into adc or out adc lret adc jnp pusha je repz sbb imul loop js outsb jle fidiv pop or inc xorl add adc add scas add add outsb xor add xchg lods add adc mov mov jae push jl lock repz cmp xchg xor arpl mov xchg inc xor cltd cmp push test std (bad) insb sbb je repz clc xchg cmp jp cmp add hlt imul xorps ja dec sub inc cmp add aaa test inc mov pop or mov adc xchg cmp push enter int3 dec cld outsb adc cmp push test adc fs sbb adc insl ret jecxz je arpl gs or adc lods test cmpl adc push add cmpsb rcll mov push scas nop lret sti mov pop (bad) mov xlat outsb mov roll lret adc ret rep jg sti sub neg add in push push iret adc mov data16 int3 cmp icebp adc lahf popf cmp or sbb mov mov mov lods cmp mov adc cli (bad) cmp pusha loopne test pop rorb xor cltd mov push pop lret lea push outsb aaa xchg adc adcl adc jg push mov xchg enter or xor pop jge stc jbe adc mov adc mov std or push rorl pushf sub inc je dec xchg or scas and push and sbb cmpsb popf xchg repz inc daa mov or xor into cmp push jb repz or shlb xchg (bad) shrd notb sbb mov or adc insb and adc sub or scas int3 add pusha jmp cmp adc sahf adc loope cmp popa (bad) mov das push sub add xor mov adc dec repnz sahf in repz and mov lahf mov loop adc imul adc fidivr mov mov inc mov lods dec imul or xor lcall stos rclb jg in fs daa ret pop loop add adc or je add push dec stc adc sub xor (bad) fstl sbb xor icebp (bad) rcrb cmp mov push das lea xor fnstcw mul pop lret adc xchg add cli arpl nop fnstenv xchg and xor aad add adc mov xchg lea dec mov inc rcll adc and js (bad) push insl cmp hlt add push in pop add sbb push (bad) js mov (bad) or xchg adc out or mov pop (bad) cld push adc push pop sbb sbb int repnz push data16 adc mov int3 cld neg test xchg cmp cmp sbb adc (bad) jge adc jnp adc xor fistpll shrb int enter pushl popa or mov cmp repz push adc dec (bad) ret pop adc call pop add xor mov push sub std add popa push dec cwtl xchg andl mov mov (bad) pop loop into loope xchg out (bad) bndcl push jb jge adc mov or lds adc popa (bad) iret out insl aas inc (bad) repz sbb push mov rclb add cmp adc add sbb mov mov push xor test cli dec mov inc nop jg clc or mov cmpb jb nop outsl xchg clc and pop stc lods lret pop mov push mov mov xor dec ret inc cmp adc xchg and jl mov (bad) mov adc xchg adc (bad) jge push mov dec insb xchg in (bad) enter pop mov xchg xor test daa popa mov enter test std (bad) or xor cmp pushf hlt and mov test rorb fstl (bad) jmp sub adc dec hlt in add arpl pop push icebp xor xchg adc mov add loop mov divl xor mov negl push inc xor cmp jb hlt movb push push lock outsl or sbb lret or xchg mov xlat adc mov adc mov dec sub adcl (bad) adc int3 dec imul ret cmp pop adc shlb nop adc iret and data16 popf xor out inc or aad add jle daa nop fcmovb adc adc fistpll sub pop dec mov pop insl scas in mov hlt rcrb add shll adc notl cmp fucomip ret imul bound mov adc nop pop mov xor aad pop fsubrl mov jmp decb pop pop adc ljmp push mov push ljmp cli pop xchg js hlt (bad) scas (bad) xor pop push ret clc in cmp and aaa sbb arpl in loope mov mov push cmc pop xor or lahf nop lret inc insb jl inc iret add dec rcrl ret jle int3 pop (bad) insb inc xor gs insl mov push ljmp and jecxz ja and mov sub mov pop adc test adc loope xchg adc add push cmp lds xchg mov int3 inc jne adc push ljmp xchg js adc fstpt pop jo nop cmp into mov or arpl mull (bad) jno test push mov jecxz jbe add adc stos add ja imul xchg bound repnz movsb movsl adc fisttp xor cltd cmpsb jno in or mul outsl (bad) stc jl adc push fsubs xchg xor push inc jae or inc dec pop adc sbb dec and sbb sbb push sbb mov (bad) aaa mov cwtl test mov mov lcall adc es mov adc push out jns fwait (bad) fcmovb lahf pop repnz ret adc push sub mov mov ljmp mov pop and lock push mov repnz out dec rclb ret inc pushf jne cmp arpl out adc mov repz fimul xchg xchg fldt cs mov and adc cmp dec adc adc cmp xchg test call xor stos adc aad andl es push adc or pop xchg push pop out mov sub fmull adc push js adc stos xchg pop push xchg jbe jb push ljmp adc sbb mov lods sub cmp sub add lea inc mov cmp out insl adc sbb add pop (bad) sub mov popa and rorb nopl shrb inc rorl icebp jbe pop adc sub push xchg fcmovu aas adc pop in aad sub or stc and adc mov xor sbb mov fsubrp ss pushf sbb push dec adc arpl es inc adc (bad) fwait insb cmp pop (bad) ja loopne incl and movsb lods xorl cmpsb rol adc pop push rol sbb sbb adc and rcll jmp or adc pop inc das cmpsb mov add (bad) mov scas dec sbb xchg adc and pushf mov daa mov pusha ds cmpsb ljmp mulb scas dec lret imul xchg xchg xchg jle negl dec cmp lahf aam scas jl or ret js out push add bound cmp nop imul mov sub xor or adc (bad) data16 insb rorl aam pop adc mov adc sbb ret adc out xchg jg push ret repnz adc pop mov mov mov mov push adc cs pop fmuls (bad) and fisttpll mov adc pop add scas mov inc pop push push sbb push push fcmovnb nop sti in pop pop dec jae mov or push mov fcoml bound mov arpl (bad) push in dec insb nop push fwait jns aaa inc popa repz adc fisttpll les cmpsb push sub idivl pop jecxz sub adc loop call push pop adc out adc in adc or xchg mov dec movntq adc lret push jge adc call mov push test cmp notl rcrb ror shl lods into sti jbe fstpl mov xchg std cs adc lcall dec test fcmovne enter leave add xor cmpsb or xchg xor nop dec sub cwtl push into adc divb pop adc ja dec xor dec int mov cld push pop and adc loopne adc addr16 adc js rorw adc outsl shlb mov mov push mov or pop js adc aam xchg mov xchg iret sub scas sub mov cli std push adc jl test dec rorl rcr ja and jb add inc adc (bad) xor (bad) out ss jne mov sub sub mov inc inc loop mov push fstps xchg jmp pop inc xchg sti sub in xor loope sbb add or popf nop sub sub (bad) sahf fcmovnbe ja jns bound adc repnz (bad) pop jg mov jo scas pop mov add fdiv jle sbb adc jns sbb xchg mov jo stos mov lds sub into das or add jne xchg pop dec mov fstps stos or mov pop pop in das not (bad) sti or addb add es push (bad) mov xchg les arpl nop inc push repz ret pusha dec dec jo mov cld adc std sub xor jl mov sub pop je add icebp pushf xor adc cmpsl rorb (bad) push sbb adc pop jne adc stos ret mov data16 cmp adc test stos dec pop mov insl or nop and sbb add dec or mov addr16 cmp (bad) xlat (bad) adc das in sbb xor loopne loop pop adc push lock into sbb cmpsb loope inc xor decl pop pushf (bad) (bad) aaa or mov or push mov fildll jecxz xchg adc xlat test fcoms inc ds mull (bad) cmc popa adc push xor xor and cmp add adc insb scas mov mov inc push cltd push sub jg adc pop or out icebp mov or add shll sbb ret ja adc xor adc enter idiv sbb push sbb adc mov xchg sbb and sbbl lcall stos inc aaa mov (bad) add push sarl (bad) and clc lret add adc scas rcrb pop fsubrl mov xchg cmp pop adc loopne xor andb xchg sbb jne inc xchg rorb jmp push mov inc and std cmp xchg or test fs mov push mov std push adc sub popf cmc push push push test comiss ret mov nop mov test cmp adc dec (bad) ss pop adc jge out adc or pop fldl js out xchg dec and (bad) rep inc pop std in jo sub in mov or mov mov shrl ret in dec adc (bad) cwtl (bad) (bad) nop fneni(8087 add push mov mov inc stos ja scas mov rep ss out mov cmp insl adc incl mov arpl (bad) push inc adc dec dec fs push loopne sub jl lods test mov mov cmp mov adc imul mov bound repz gs lds sbb jecxz out and ja aaa xlat sbb in push int3 xchg xor rolb mov xchg inc and adc add mov adc std xchg cmpsl inc enter das cmc pop adc xor dec xor mov or std mov nop mov lock cld dec jge rolb aaa call mov out (bad) push push xchg dec jp in insl adc mov adc mov rcl adc cmp inc fnsave adc sbb sbb sub dec pop or out pop addr16 xor add fbld test add dec sbb sbb or out repz mov lret or push xor clc iret push adc jle push pop adc popa mov mov jbe push fldt scas adc sub sbb inc push push hlt lahf popa mov arpl add repz aaa xchg add xor nop outsl adc add xor sub adc mov sub aas cmpsb testb out xlat ficompl stos mov pop gs cwtl (bad) jbe pop and sub shll divl das stos sbb cmp sbb adc cmc or adc cmpxchg and rcll in out ret or and sbb decl lea push adc nop lret and mov flds lgs push sbb int or pop pop or jnp int3 (bad) and xor adc jbe mov sbb cmp popa cltd cmp orl push mul jle mov mov aam pushl xor inc jp xchg xor xor sbb jle lcall nop repz mov xor jle shll and cmpsl (bad) das into out adc and mov dec jge jne pop mov into dec adc (bad) pop ret rcll adc jb ja jl xlat loopne ret sbb add inc repz sbb adc dec lods adc ja mov orb lods add (bad) adc jp,pt (bad) and jbe mov fild mov repz add (bad) in or mov ja aam dec adc lret sbb xor loopne mov jns jecxz adc int pusha and pop sar mov inc sub adc add sbb lret jge or inc movsl stc adc dec xchg repz xor adc out mov mov shrb dec movsl in aaa sub push test cmpsl cmp sbb jnp jne fsubl xchg adc mov ja cmp inc xchg stos xor mov xchg rcrb adc jo or adc mov insb cmp mov lods outsb pop cltd sbb add sarl lea scas xchg rolb ret or adc lea and pop ret mov adc add popw sub inc dec jle jmp ljmp inc pop sub jecxz hlt dec fs int3 (bad) fstl sbb popf push sbb (bad) cs pop xchg pop mov imul js es rolb or add sbb pop out pop push cli add adc inc and adc lods lods (bad) jno les int3 lahf aad and dec xchg cmp jge sub adc cmp adc cmp adc gs fidivl push lret jo dec mov pop fs ffree or mov xor in cmp sbb cld test fildl cltd pop add jb adc (bad) push lret pop inc xor adc adc add lods dec adc and ficompl in test add mov or cli mov sub jbe and arpl out fsin jp mov (bad) mov fidiv rep adc jne and cs add xchg dec and dec lahf inc xchg mov sub subl adc xor int3 adc out lea adc js xchg xlat pslld pop push jmp aam xor lock (bad) jecxz push mov hlt rclb jbe fadds dec test xor or lcall popf cmpsb mov into adc js cmp push mov repz adc jbe rcll ljmp mov add aam dec adc xchg inc cmp push sub adc in adc rorb mov cltd add movsb adc (bad) gs out aad xchg mov pushl inc lea les cmpsb adc xor push or loope pop push xchg sub add stc imul mov leave adc gs mov sahf sub daa inc or mov sbb sbb pop mov adc loopne jl xchg sub push push xchg scas fsts lret mov enter inc adc call xchg int xor into jbe dec int3 adc shl in cmp ja jle push call adc js adc inc (bad) jmp pop clc popa add das adc push or lds add xor (bad) adc test (bad) arpl inc mov jns push sub mov lret ds les hlt mov rolb jno dec sub fildll loopne inc sbb inc aam push add mov pop movsb incb and pop mov sbb lods outsl ljmp xor (bad) sub jno sbb mov adc (bad) adc mov cmp arpl dec pushf xchg nop lret or fcmovbe std jmp adc mov or or ljmp jne mov push sbb into sub cmp mov scas xchg adc fsts xor fildl (bad) mov aas xchg test andl xchg jno es adc xor test jb adc bound push adc dec (bad) mov iret loop mov shld mov repz pop int3 lods (bad) mov adc pop add adc cltd mov mov inc xchg addr16 pop push add mov rcrl or push lahf call fsub adc and outsl pushf cli scas xor fxch adc cltd inc push call and bound sub mov fistpl lods adc iret lret sbb leave adc mov cmp ret cmp test mov jbe dec in movsb xchg pop add push dec push add pop sub and gs add clc xor adc jecxz push mov pop dec sbb adc pop cld xchg cmp adc or pushf nop or xchg sarl xor jne mov test lods push or and into adc in clc mov lods fstl std rorb fcoms std jg js mov jp in shl inc add sbb pop adc add loopne in fmuls popa stc into xchg pop adc movsl sbb dec dec xchg push orl js clc outsb cmovbe jle pop adc mov adc xor mov adc test dec adc jge gs aad pusha adc lret xor fmull add adc stos or mov (bad) adc lret nop fwait or rcr sub inc adc test or sub mov dec xor dec cmp cmc (bad) pop scas jbe jo sbb sub cli cmpsl or push add vcvttss2si repz push fwait xchg cld cmp push mov ljmp fst repnz mov adc adc mov adc xchg mov addr16 sahf addb jmp push test dec sbb cwtl and jo pop stos xchg xor xchg adc xchg jno jnp sub xchg iret inc loope mov clc mov inc fistl pop adc sahf pop dec popf add mov fwait cld jbe xor adc (bad) ror jo xchg std xor out push jecxz push inc leave divl cli adc xlat and add mov in xchg sti stc jge adc fnstcw stos imul adc ret (bad) jne jo (bad) adc or (bad) xor ljmp jns icebp push adc out adc push xor nop cltd cmp add cmp loopne mov mov ss mov mov mov or iret adc mov cmp repz add sub gs mov popa sbb (bad) xor mov adc ret loope mull mov adc (bad) (bad) std stc pop int adc dec lds xor sti push rcll cltd out rorb out sarl aam push ret movsl daa into mov adc jno gs and lock xchg mov sbb dec fnstsw lods loop in adc sub mov bound sahf jg repnz and jo lret xchg ss int fwait stc repnz loopne sbb xchg pop into lcall insb xchg adc adc jge xor or fs mov cmp insb pop scas or pop lods movsb sbb adc cmpsl xchg dec (bad) iret adc sti loop je mov adc push lret inc add not push mov in icebp adc add mov in pop adc inc jns,pt adc mov adc leave mov dec mov rcr dec push xchg loop aas into mov pop cmpsl daa sub mov add jo fcompl mov jnp xor bound dec jecxz pusha inc or jns test cmp cmp rcrb rcrb pushf push je nop js xchg sub mov outsb mov xchg jp push pop mov add jnp fdivrl mov push and adc mov fisttp rorb adc repz lahf loop add add fcoml jp jl sub push mov insl adc in adc cmp pop orl fidivr (bad) frstor mov push shr push cmp clc mulps cld outsl adc pop add stc dec mov fcoms nop and lods adc fs insb adc (bad) jae pusha add jne lods xor dec std adc daa ss lret push sub int3 insb mov addr16 es lea inc dec iret add adc jg push dec fdivrl ficom jne lea or or hlt scas adc in pop aas push adc fistp adc repz jne mov or mov movsb mov xchg fisubr and lret in mov nop lea je or mov mov sub push arpl and push mov cmpsl (bad) stos lock shrb mov (bad) daa adc insl inc ret test xchg test push negl jae mov addl in sahf mov sub cmp pop add shrb push jno daa sub add sbb lcall adc pop sahf (bad) icebp mov popa cs cwtl push jno inc adc nop (bad) sbb push adc movsl pop xchg sub cmp jle adc movhlps test lea mov stos xor scas frstor in xor sarl adc add fdivl jne fwait xor pushf mov (bad) dec pusha paddd push adc xchg mov or fcoml lcall pop push xchg add movsb pop cmp adc aaa mov rorb cmpsb mov lahf rolb gs mov jecxz push adc clc or cmp sbb aas add adc sbb xor sbb imul xlat add sbb push fistpll add and dec adc loope pop adc mov xor jbe sahf out add adc adc rolb xchg adc test loopne das inc je sub or or lea adc jb jecxz add or (bad) xor in (bad) sub and cmp inc fistl mov outsb leave call push pop mov push push add mov fisubl jge lret mov (bad) mov add stos adc sbb xor or mov jge mov jbe bound cmpsl outsl test jg das xchg lcall sbb call (bad) (bad) fnop pop cs jb mov inc adc in jg inc adc daa js jnp pop xor pop std or sub fadds mov xor xchg scas mov dec repnz cwtl imul add repz or pop adc jle pop pusha xchg jl add push adc adc negl xchg ret insl jp cmp or adc adc cs lcall ret mov cmpsl mov adc data16 add (bad) hlt dec adc nop bnd or add push fidivr adc xlat insl or mov xorl jle fstpl lods jl fist lock fs xchg fsts sti rorl mov es mov inc adc hlt inc (bad) sub lods xorb push daa jecxz in pop out jge (bad) xor rclb adc fsubs jge lret addl testb mov xor sbb mov hlt or out jmp adc adc dec add das in mov loope push outsl pusha enter adc push adc mov push into rcl and movlps jae xor stos xor xor aaa sbb adc in jne jmp mov pushf loop rol adc add mov (bad) mov hlt adc push push and sbb xchg mov inc movsb sbb xlat adc mov push push es (bad) sub adc xchg outsl or aad xor dec js fsubrs sti fwait xor pop (bad) enter sub (bad) adc xchg fistpl sbbb repnz mov loop push mov mov jns repnz dec std fildl inc dec push (bad) mov ficoml add pop cwtl adc adc push cmp mov fidivl adc repnz scas mov in jmp add mov cltd (bad) repz lret mov lret mov mov enter mov adc scas xchg mov lcall lock xchg jno (bad) aaa add cmp (bad) adc nop in xor jge nop mov add sub inc xchg adc (bad) add jmp mov adc or scas adc clc divb pop cmpsb jmp mov cli mov ror test (bad) jnp cmpb mov jb sbb jl imul pop jl bound sbb cmp adc or cmp aad sub dec xchg xchg insb xchg adc mov mov adc jno mov cld imul cmp pusha sbb cmpsl lea cmp in pop add or insl push mov xchg adc jnp outsl out sti fcomps and mov andb or push add jo stos negb lea out (bad) cmp test push pop adc sti rolb fsub rorb js jecxz push adc mov xchg xchg pop xchg (bad) dec mov lea rcr mov xor add popa add mov dec xchg pop adc aas das mov pop jmp repz clc loop pusha jne xchg or cmp mov pop adc mov xor adc dec fsts mov pop and push adc pop loope int3 sbb bound loop mov es jmp sbb xchg sarb iret (bad) jne out int add fsub dec or adc popf mov dec movsl hlt (bad) mov sub dec mov (bad) fcomp adc into pop xchg pop nop cmp mov clc pop test fs adc sbb pop adc data16 adc iret xor jbe adc mov popf fiadd adc (bad) scas pop adc inc mov es aam pop pop fwait add adc mov addr16 outsb inc ficom xchg ret push pushf adc pop popf out (bad) mov mov jb ror cmp cmc sbb inc pop add fistpll clc add mov adc pop mov scas repnz fsubrs xchg scas cs jg push pop (bad) das out inc repnz test fcoms lret fisttp adc loopne js imul adc xor ds cmc mov and mov xor stos nop or xchg icebp aad jo and imul mov fs stos and jnp lea daa sub sbb leave sub les or out adc es mov test addr16 push adc cmp std andnps mov mov movsb adc xor fucomi mov fisubl xchg adc aas enter xor lret loopne mov mov adc push dec adc mov sarb cmp adc inc dec in jmp ja mov sub mov dec jns pop leave lods push pop daa arpl int3 inc sub (bad) fcomps bound (bad) iret adc add adc (bad) jl xchg imul jp arpl fadds xchg cmp xor push cmc and loopne jecxz fstp xor cmp jle adc add sub into test pop mov daa add nop nop jmpw ret adc test dec jo jge int adc sti pop mov and push sub or pop idivl loopew,pt scas xor icebp or fwait cs or adcl shll dec add mov hlt stos insb adc nop dec (bad) cli dec mov mov dec jg repz test imul cmp lock aam adc fneni(8087 test inc adc fdivs lret jne push sarb pop rorb jecxz mov and loope subl or sub push fsubl lea adc data16 inc pop test add mov mov inc inc loop cltd mov pushf mov pop call pusha adc adc dec adc mov xchg xchg jne loop rorb xor sbb and loope ja out mov xor xor xorb jl mov cltd or lret jbe mov jne adc dec lahf xlat imul push jmp popf icebp fdivrp xor inc adc jge call rcrb ret idivb adc dec aaa and mov cld mov adc lds push adc stos repz mov dec loop in mov inc jo jg loope jbe lcall mov cmpsl or cli adc xor mov mov and and mov stos sti mov push lahf mov sbb push or imul rclb adc pop xchg cmpsb mov in bound out fild pushf out lds call pop jo push inc scas mov sbb movsb mov ja stc pop adc ds cmc adc (bad) xor fimull add fcoml adc mov gs mov adc arpl adc mov test cld add adc mov cmc adc lods xchg jp pop test aaa fisttpll (bad) adc or or repnz and pop pop or add ret icebp adc sbb mov xchg push ss stos popa into mov out adc ss dec leave mov or adc aas es lcall enter inc mov js (bad) dec mov stc pop loop sbb xor adc test xor enter arpl aas xchg push int scas mov ret adc popa cmp push (bad) mov mov dec and mov icebp aas adc mov push jnp stos dec add add mov ret adc inc sarb (bad) adc decb insb sub (bad) lds or fsts mov loope xor or (bad) cmc repz outsl mov lret (bad) push faddl jns cmp pushf jle inc loope arpl mov inc jae sbb mov dec xor pusha fwait mov scas sahf stc dec mov push adc mov insl adc dec push mov loope sub (bad) cmpsl test das shrl push or aad adc imulb jle int3 int jne cmp fdivs dec mov repz or int cmc mov imul popw inc adc adc mov sbb lods xor mov mov in add ljmp arpl cld addr16 jb adc sbb jg adc fs jae shrb int lcall movsl iret or adc pop lods adc push mov cld dec pop push adc mov sahf pop enter imul fstpl adc cmc repnz xchg fstps mov xorl lret nop cmp sarb test add xor aad pop daa stc add cmp out adc adc mov sub push adc jno dec call outsl js test inc sbb lcall (bad) popf mov sti lea mov pop sbb mov repz pop cmp or cmp adc loopne fnstcw and sahf pop sub call and jg divps aam flds inc repnz (bad) xor mov hlt inc mov imul into inc repz dec push outsl jnp jne add adc enter adc sti push xchg xlat mov lds xchg sbb outsl fsubl adc xor (bad) adc mov imul sub adc rcrl dec and add push adc mov fs in mov add adc popf or xor (bad) stos adc nop daa mov addr16 or jge mov add adc mov push mov (bad) xchg inc psrlw (bad) out adc mov daa adc test mov repz jecxz jo gs popl dec adc loope mov fisttpll xor sub dec lods inc and addl mov das arpl inc xorb jge mov push adc jl or mov xchg adc cmp imul jle or loop adc js rclb push test jg in rcrb xor insb sub ds les jl mov sahf (bad) pop jp pop cld jae sub or outsb mov std xor imulb sarl movsb adc repz stos pop pop (bad) cli repz movsb inc call popa js sub leave and stos jno jmp hlt or jg sahf pop adc mov pop push jb adc xlat add mov rorb insb mov mov or outsb adc mov sub inc push repz repnz mov sub (bad) mov jnp dec pop dec adc fdivrs lahf pop mov push adc xor test pop jmp popf int pop lds push (bad) dec or dec je jmp xchg imul imul fsubrp sbb cli or test sub push adc int adc sbb jno fcoms jae push cs in std (bad) scas in mov rolb adc push jb pop pop cmp (bad) repz pushf or (bad) push inc or adc push mov mov test push mulb popf ds xchg push hlt mov out push add sahf cmp jo adc into adc test insl inc adc lret jne mov lock int adc adc push test mov mov movsb stos (bad) fiadd jb dec adc ficompl test inc adc sarb stos mov mov mov jle pop sbb sbb mov cwtl call adc mov xlat or cltd adc outsl and push adc insl loope lcall arpl stos fiaddl mov (bad) cmc adc mov pop push cmp mov and inc scas sub cmc leave adc xor or lcall adc cmp sti sub inc in dec inc xchg cmp push mov add mov out pop pop push rclb jg sbb pop imull sbb dec mov shr and and mov mov (bad) adc and sbb aam loop in adc (bad) ss in lods sub xchg adc scas cmpsb lcall adc std or ja jge jne xor xor mov sbb lods xor mov mov rclb inc pop adc call mov loope shlb or push dec enter push pop dec je in xor or mov sbb mov xchg jge adc push sub in adc sbbl adc cwtl or adc imul cmp add stc inc pop or jae sub (bad) jmp shlb mov cmpsb pop int3 sahf xlat out adc mov xor dec xor inc pushf push fistpl sub cwtl aaa add mov mov cmp mov inc adc fs mov dec popa xor or pop adc cld (bad) repnz pop push jmp mov mov test jno or sbb mov pop add or shrb lcall mov add sbb and rclb fldt int adc and mov insl sub inc das aam in lods ds inc rcll adc xor aas jo rolb movsl inc pop lea cmp stos fwait vmread insl or and adc dec gs xchg ret push enter (bad) mov add and aas pop cmp lods xchg bndldx call xchg fldl nop mov mov imull sbb push nop mov sub cltd xchg mov sahf adc or mov fmuls jbe xchg dec scas ljmp xchg jmp in out dec sti adc xor ds xchg adc sbb lock mov fsub cmp call mov lock inc add xchg subb cmp mov dec pop icebp pop push adc mov push test mov lahf stc jle lods dec adc int int3 jmp sbb in xor fisttpl add mov adc jno sti or rorb gs sbb mov aas inc mov adc dec jl insb test repz mov pop add mov pop cmp (bad) lret sbb mov and cmc repnz add sub pushw into and outsb push adc jo addr16 movsb pusha int mov sahf mov in mov (bad) xchg cwtl push push aam loopne sub mov iret std adc lret nop add mov imul cwtl (bad) (bad) lods sub fcoml stos rcr adc push (bad) scas (bad) (bad) cmpsb adc cmp aas adc lods sub lock repz mov mov push out scas cmp or aam add out fsubrl jno cltd rolb std leave sub icebp mov into scas mov pop aam sub pop leave lret out adc mov pop aam pop and lea lret movsb and adc ja add adc push sti out daa inc int lock aam mov and jmp adc lds popa adc mov cmove adc test cmpsl popa pop int adc js and adc mov and add jns sbb add rcl xor sbb adc sbb push (bad) inc mov or sbb push mov (bad) lock xor jo ret xor mov imul pop push (bad) jbe movl dec bound popf mov outsl cmp inc push fidivr aas pop mov adc jecxz repnz adc or mov out or push add xchg push sub mov in in ret inc adc nop (bad) cmpsl jo sub aam and mov cld test sub or adc mov xchg dec loopne rcll or xchg mov dec fdivrl mov sbb or mov lea dec cld push mov mov and or test insl push pop mov add jno ljmp loop pop adc leave outsb adcl aad fs repz push xor or (bad) mov je rcrl push and (bad) jg cwtl adc jmp daa adc and sbbb adc pusha lahf jo nop dec sahf or adc xchg cltd pushf or sbb ret sub rclb push stos lret mov cli adc dec ds lods (bad) sahf rclb cmpsl pop pop cmpsb add test adc cmc stos sti sbbl sarl sahf jl adc cltd loope mov cmp fbld jle xlat adc sbb (bad) repz jmp mov adc stos add dec lods mov pop mov push (bad) pop adc or lods jae mov scas add sub mov fistl rorl add xor mov add loopne das in or test inc sarl xor mov (bad) adc jne xor xchg or fwait xor sub and adc mov jnp adc adc in mov add jb adc xor mov mov mov dec push (bad) hlt dec push add imul addl adc (bad) inc jb mov adc push mov adc sbb out int rcll jnp lahf and (bad) adc push lcall mov sarb pop lods or repz jecxz imul mov pop push aad inc mov inc dec and jae movsl das mov int3 arpl push je lds xchg pushf sub shrb int3 inc add pop pop lahf mov mov mov loop mov cmp adc xor stos add stos push int3 bound mov and test lahf jne jne xchg jecxz push mov test cmp jg add cwtl adc ds iret add adc ja repz inc pop pushl outsl cpuid pop cmp mov mov jno out rcll mov fistl push iret mov inc je sbb out jl adc add adc test jl xor push or and and or addr16 stc add xchg push adc push jo adc jno jge mov cld (bad) or jmp xchg int3 lock xchg adc imul test in mov pop sar repz cmpsb cld jae (bad) mov add mov xchg jp shr insb pusha or lret aad adc push mov xchg out mov cli js psraw fsubrs mov xor ret mov mov pop mov aas adc outsl mov sub push pop or rcrb inc jae adc xchg (bad) xor sub std xchg popa add xor adc mov lahf rorl insb adc or sub mov inc out or pop cmp dec inc test mov inc cmp or loop xchg mov inc lret xchg inc adc pop cmp psubusb outsb adc insb fdivl test mov xchg add ficomp adc mov in mov or popa popf jnp mov sahf int add (bad) adc ret xor imul xor imulb lahf add jo pop pop sti stc adc push jbe nop int3 jnp in sub adc or loopne inc movsl mov pop and mov shl cli dec mov push mov cmp xchg scas and xchg adc mov mov push cs data16 add aad sub fisubr adc lret adc aad add dec mov sub mov mov adc lea int sub (bad) adc sahf sub je (bad) or shrb xor or push sub inc adc inc inc pop mov stos or inc adc inc or xchg (bad) xor popl rorb inc je dec adc inc fimull sub add cs sub inc mov adc push movsb or sbb fwait dec leave hlt mov add jge adc sub repz pushf mov sti insl fwait insl push and repz outsl sub cmp mov lcall ds ficoml shll ja ds and dec iret adc out cmp cwtl sub dec adc call mov psubsw adc loopne (bad) out (bad) cmp sti lock jbe jns or sub stos xchg div mov enter gs sbb sbb add lahf mov adc xor ljmp add mov sbb adc jne mov mov adc arpl push lcall cmp sbb (bad) loop sbb add sbb adc mov scas insb fiadd pop sbb xor imul arpl rep mov in icebp (bad) dec lea mov push repz pop popa inc fisttpl adc in jge inc lahf inc mov xchg hlt aam mov dec insb sbb bswap inc lcall sbb cmc and cmp xchg mov push hlt cmp mov cmp insl cmp addr16 jnp and add sub inc cmp cs dec jp jo adc adc inc addr16 jmp adc sahf loope adc pop sub arpl and pushf mov adc fninit popa insb mov push lcall repnz cmp pop inc (bad) imul inc or cs sub adc scas adc subb adc sbb cmpsb add xor cmpsl sub cmp mov pop and cmpsb fcmovnb mov adc jbe test loop add sbb adc cmpsb or xchg add lea adc es sub loopne push data16 lea adc or adcl fdivrs and stos pop push mov imul add adc (bad) fistpll dec imul pop xchg gs adc (bad) jno imul sub push loopne fist pop mov ret lret mov dec fwait pop stos sub adc adc sti mov or adc fild inc fcoml bound shrb inc push stc adc aam iret daa fwait cmpsb (bad) adc mov dec bnd and mov dec xor adc imul lods scas push test stos gs roll lds jnp movsl iret xchg subl xchg cmp or mov mov add daa pop xor in cmp fscale adc insl inc jno sbbl and pop dec adc push cmp xchg add dec pusha add adc mov xor jmp movsl int3 inc addr16 jl add imul xchg stc and shl inc mov icebp inc mov repz jo dec or nop test fwait sbb call aaa jb xor adc add int add adc popa sarl mov adc outsl cs mov or int mov pop mov add mov mov xchg lret rorb adc jmp mov in in in pop pop or push jno mov sbb and hlt xor lea mov adc inc iret out adc cmp std mov cmp jnp adc jb lahf mov dec sbb movsl icebp xchg test movsb popa add in cli mov lcall in and cmp xor sbb sbb popa loop push repz cld aas rolb or pop call int3 inc push inc cmp subl adc movsl cmp std lret cmp add adc scas addl popa or (bad) pop aas xchg xchg inc fdivl dec cwtl xchg adc xor clc and jnp repnz (bad) scas (bad) push mov sbb ljmp cmc adc and push mov or jmp es cltd movb cmp pop or lcall scas adc insl sub adcl (bad) mov inc (bad) rolb sub cmpsl adc pop imul push stos adc iret ret mov (bad) cmp add inc stos xchg mov jnp inc lahf fsubrs inc std (bad) jg sbb jns rclb push in loope aas scas pop jno outsb or xor popa push pushf dec adc mov cmp sbb (bad) movsl (bad) fstl xlat mov mov adc das or dec jmp mov xchg lahf or out xchg ljmp adc jp mov (bad) cmp add xchg out mov lret or fisubr adc rcrb fwait lcall push jecxz (bad) aaa ds jmp out push daa inc rcll cmp cmc mulb adc cltd ja mov xchg or aaa popf xor push out (bad) jecxz dec test mov int loop pop enter or push sbb icebp (bad) add dec cmpsb fsts pop mov sbb sbb (bad) out adc (bad) jmp adc and cmp mov adc aam (bad) mov sarl fsts in mov adc jo fcoml int3 out repnz dec or or stc sbb jns push xlat shrb adc mov fsubrs ljmp sahf xchg mov or out int3 pop xor data16 push xor cmp fbld cmp sbb or push movlps mov ffree test pop push adc fs nop in adc jne aas pushf mov test adc stos mov or jo xchg xor jg scas adc or sbb into push es movsl push push inc push add adc cmp in (bad) mov mov jnp popf or mov xchg and jne lcall outsl iret and push xor pop mov sti add mov outsb lret mov rclb out sbb repz fs lret sbb sbb popa mov stc cmp xor out xor mov xor dec popf adc pop int3 arpl or add pusha iret loope rep jbe (bad) ja mov pop (bad) xchg inc xchg or mov add fwait cmp adc out dec pop test enter ja or in cld fimul jecxz pop adc sahf sti xor sub dec cmp xor (bad) into jae sti dec inc mov inc rcrl mov adc pop icebp dec out adc add add adc pop lea (bad) repnz jnp arpl and cmp das adc or cld ret repz aam imul mov (bad) mov or out rorb roll and sub mov outsl insl adc mov sti add repz and xchg pop or je rolb fcomps xchg repz cmp js (bad) sbb hlt daa into pause push int (bad) rcll jle fidivrl aaa xor testl mov out stc sub push in cmp xchg mov mov lret cmovs call aas xor push fmul dec sar mov or xchg (bad) scas jle sti lcall cwtl pushl mov sbb xchg aam or dec xchg and sbb and sbb add dec cmp adc cmp inc adc mov mov cwtl sahf lea jnp inc push in mov mov lds clc xchg xchg sbb pop loop mov fndisi(8087 push pop cld and aad sub xor mov jne adc ljmp inc icebp xlat inc sbb bound mov or jp push (bad) or sbb add flds pop mov aas adc lea mov cmp das xchg mov adc push addb and and dec rorl xchg aam movsl test stos roll and aaa das lea xorl or inc and pusha mov lret fimull xor (bad) pop int3 insb adc mov fsts push (bad) sbb pop bsf xor repz sub fdivp sbb xchg sub xor jno mov movsl add hlt je xor pop in adc pop mov lret mov scas mov jae jge fwait pop xor mov out (bad) sub repz cld fiaddl iret scas mov ss mov ror std mov cmp add add cmp adc add call movsl adc sub dec add icebp xchg (bad) xor jp cmc movsb pmaxub adc inc loopne cmpl sbb jecxz repz cmp add rol frstor cmp push mov jae xchg cltd sti and push adc ficoml repz in xor xlat adc and pop repz fwait mov adc mov addr16 xor test adc sbb add out outsb scas mov push insb (bad) hlt dec xor or pop jae mov jle insb jg and pop xchg cmc jno gs mov stos std out lods adc push add leave movb ret (bad) xchg addr16 nop loop mov push (bad) aad sub test sub push (bad) loopne rorl fmull xchg into jno mov mov adc in cmpsb adc mov pop cwtl into inc xchg pop or cld xor jno fisubrl push test das pop ror xor pop js jne outsl add cmp adc test adc xor sub (bad) fiadd std jnp inc imul xor jae push sub mov aad dec hlt aaa adc lret cmp popl andps inc jae out push adc push mov js pop insl mov fnstcw dec arpl push or add outsl mov inc sahf repz iret cwtl test cmpsb test in push mov sub ret pop rcrl adc cmp or loope inc and pop lret jge adc scas xor insl sbb and subl push and xchg pop mov das clc repnz xor cwtl les sub ljmp insb das mov test out xor mov pop test leave mov fldt lds push lcall aam test dec and rcrb xchg sbb cmc sub cmp iret movsw insb sbb and std call jge pop imul inc push adc jle xlat or adc out cmpb popa fldt or aas daa sub lret or adc jmp (bad) or adc sarb add cmp enter pusha cld out sbb daa (bad) insl stc or les adc sub dec pusha (bad) (bad) daa xor sub or cs mov cmc adc sub je adc mov pushf xor in shl out dec (bad) lahf outsb pop adc (bad) notb pop lods je mov fist (bad) int dec lods rorb adc push loop mov pop mov xchg sbbl ret pop cmc repz (bad) scas or add pushf out xchg pop rcll cmp jmp clc xor cmpsl lds add subl xor cmp pop test adc loop les mov sub aad in negl ds xchg pop imul (bad) mov in cmp inc hlt loopne adc push jns ja into out (bad) mov test xchg mull (bad) and sub jns adc mov hlt adc jne fcoms sarb pop out mov and mov jne je (bad) pop jp adc (bad) js int dec dec repz loop movsb xor add repz hlt mov xchg push fprem cld xor mov repz stos (bad) into mov push sub enter xchg lods adc jp,pt jge push and pusha test mov ja xor push mov popl mov jecxz (bad) inc push jae or and lcall mov call daa lods fdivs sub ret sbb mov adc mov test jmp and stc cmp add mov mov cmpsl xor pop ret repz sub pop mov or (bad) ds or lea cmp jne xor adc into jne add push xor inc rol dec add ds repz imull mov xor movsb repz push inc popa or icebp popf (bad) sub dec std frstor push mov shll je,pt inc rcll stos out mov pop sti pop add or popa sbb cmp nop cmp dec mov jbe test testl adc pop dec jle fdivrl push rcll out mov jp push loopw xor sbb adc leave int3 sub subb jmp adc rorl xor add mov and or movsb cs pop or pop mov (bad) iret sbb mov ret mov je pop call int3 das lahf mov dec mov dec mov adc pop add gs pusha mov lock adc inc xchg fisttp bound sbbl je adc dec sub das in mov sub negb dec mov mov inc adc out adc icebp sti sub mov fldcw and lock mov add push dec adc popa mov cmp xor add das cld cmp cmpsb nop mov push aas mov add ljmp adc jne jns aaa xlat push or adc lods mov adc lods adc lret es push and pop or xor cmpsl and adc fsubrl xchg out push push adc pop mov jp inc or shl pop dec inc sbb lret push lcall stc add sbb adc stos xor add mov insl jecxz or jp mov and pop andl pop mov adc inc test xchg xchg sbb pop cmpsl xchg push popf push push in flds divb hlt and jnp les pop push fidivr mov lds notb aas add inc rcll psllw xchg rcl sbb arpl leave mov fbstp adc adc or fstpl jns pop sarl scas or sbb fild in adc fidiv mov rcrb mov repnz pop adc std jo fs repz scas mov arpl sub enter xchg dec repz stos mov or (bad) pop adc (bad) jne ja or push in aas dec test lea jp xchg push adc dec fsub adc mov xor jne test inc adc jg mov push pop rcll inc sub xor cmp mov bound adc cmpsb lahf test or mov sub scas lods adc lcall je cmp and (bad) jp mov push jbe mov scas and adc adc loope jl pop rcrl in into sbb cwtl mov adc mov cmp xlat pushf rclb xor and repz cmovae push faddl sti add aam mov (bad) sub cli adc xlat sbb xchg repz leave scas adc inc in repnz nop cmp addb jmp adc test sti adc (bad) bsr mov fcoms xor jle adc xchg push clc mov inc repnz adc adc push ret daa pushf mov push cld ficom or sbb mov arpl adc pop mov adc pop mov adc add adc loopne lods es rorl and cwtl lock adc out jno pop sahf xchg cmc jno arpl rorb mov jl or iret inc mov mov add mov xchg jb aas bound or xlat xchg dec loopne imul outsb push and repnz std loope or repz mov pop push (bad) lea in adc mov pop popa repz sub jns xchg adcl mov in xlat mov xchg mov or push adc rorb call push popa pop push adc and mov sbb jbe adc std addr16 push sub mov dec inc jp sbb enter inc cmpsl push sbb sbb cmpsb adc mov and mov push cmp popf xlat sbb mov cltd inc xchg movsl push adc aaa push xor mov mov sbb mov jge or jae les xor pop test xchg or stos mov ds adc sbb xchg stc mov and adc xchg add outsb dec ds bound hlt imul and or mov xchg mov mov xchg ja into aad in push mov push push sahf nop sbb test fisubr mov pop dec jno test sbb scas mov test sbb jge xlat mov or and cmc dec push pop lock addr16 psraw sbb xor sarl push in js push daa push mov call and shrl xchg repnz sbb adc mov pop adc fldt dec adc mov (bad) js adc xchg test add or dec lds jge or mov clc loop xor push sbb mov dec xlat ds xchg sbb pop into call add pop inc xchg test imul sbb sahf sbb iret loope inc test mov fcomps pop stos mov and scas repz scas sub nop iret mov add (bad) rcr lock push cli lahf fdivl popf pop mov and add frstor push mov rcr and mov repz mov sbb insb and hlt scas mov xor (bad) adc mov mov adc mov push outsb add arpl sbb lret push iret xchg adc fisttp or mov inc and stc daa into cmp adc fstps adc push mov pop (bad) and and adc inc lock into arpl fildll loop xlat push mov adc mov lret sub int aam loopne adc bound and push adc arpl pop je inc adc pop lret mov in adc iret xor jg (bad) std adc in imul xlat adc pop negl sti xchg ret mov ret inc fsub and sbb hlt add dec add adc mov mov cmp loopne cmpsb adc adc (bad) in push cmp mov mov mov lahf xor adc sahf adc repz add and das add stos test dec lods sub pop hlt pusha iret dec xor jge inc mov adc push mov fistpll or ljmp es push aas rcll cmp mov lret fs mov mov mov adc or scas dec inc adc push xchg js or push aad adc push pop jbe jecxz outsl and mov adc loop mov add popf mov rclb in roll cli aas std popf xor cmp add pusha xchg cmp jne roll mov enter mov icebp mov mov add jmp xlat arpl ja mov xchg dec xor cmpsl xor ret xchg mov adc mov dec lods jno (bad) or ret aam or xchg mov shrb fadd mov mov sub jg js stos xchg je push outsl mov insl rcrb and add adc adc add fcompl pop pop cs push mov call movsb repz mov in inc adc sbb jo movsl xlat jl repz dec lcall jg push adc jle xchg jne out adc and mov or mov inc pop stc repz pop xor mov or cmp mov (bad) mov lahf (bad) dec arpl outsb in or lret mov es inc mov je add jp add pop int3 add ljmp inc or mov sbb xchg mov ud2 rcll gs jecxz inc insl mov or (bad) push mov pop iret cli in adc push push pop lahf xor enter jg adc sbb dec out add fistpll movlps fildl aas adc outsl xor adc out in dec lods dec lcall out adc jae dec divl call and push xchg cmp (bad) sti add loopne or cmp xchg sub jl sub sbb pop bound out rclb jb adc add or xor mov aaa hlt inc call addr16 popa mov imul pusha dec es (bad) nop clc call or pop lods adc mov pushf adc push ret fisubr pop xchg jle cmp push gs and test sti int3 cld mov push pusha inc (bad) aaa outsl scas stos daa jne pop adc repnz mov xor jae pop scas hlt mov outsb aad pop aaa cmp xchg stos adc mov int3 mov xor fnsave popf mov xchg sbb sahf mov test push mov into and test loope lret aad (bad) adc aas and jl adc xchg cmp xchg adc stc popa inc sbb std sbb ljmp addw xchg rcl scas ss mov or sub repz test scas mov and push mov dec mov cmp add mov daa mov pop das fisubrl adc pop nop pop fs jno xor stos dec cmpsl adc sub ror pushf cwtl mov push and sbb test adc fwait mov jo jge adc jb cmp and leave cwtl int adc fnstenv adc adc adc mov push scas aad inc xor xlat or and mov xchg adc adc inc pop popa adc (bad) je xchg and adc (bad) mov shrb xchg sbb lds rclb fimul xorl xor cmpsl out add stos pusha arpl dec insl cmp mov mov and mov cmpsb adc jno das mov (bad) sti cld xor (bad) (bad) fldt adc mov adc aaa pop mov ret mull stos mov movsl decb outsb loopne xor or mov rclb adc pop cmp mov lret subb xchg or jnp bound hlt lods cmp lock movsl notb pop cli jo out adc add push or adc mov fwait adc (bad) xor enter mov std push lea lods ret notb ja cwtl cmp cmp mov sub xor and fimul lahf scas dec test aas sar ljmp (bad) jbe mov daa cli mov xor or mov je and popa push sbb mov add or adc ret iret jno prefetchwt1 lods xchg add mov mov add mov push adc push xchg mov xchg movsb mul mov adc sub xchg inc ror xchg in sbb and insb jl cmpsb pop adc aas xchg and stos mov outsl mov push inc pop rcrb icebp xchg lret or adc mov call adc popa and and je mov adc cld int xchg into nop (bad) jp int3 add mov pop adc fidiv dec cmp push es xchg pop fildll jle adc or stos mov lods mov ljmp inc mov mov pop test out cmpsl sbb push cld mov add jne dec adc jbe adc xchg jns push add sti adc cmp arpl push orb jge add or or push mov adc sub mov mov movhps mov ret out jecxz clc negl xchg bound inc dec mov scas imul jne lds cmpsb push xlat jge adc dec mov xchg shl fwait sub sbb inc into mov lcall dec dec cmp int outsb jl push xchg sbb sbb mov (bad) cmpsl mov adc xchg inc lret scas mov inc push pop jbe jecxz incb xchg dec or or sbb mov mov adc xchg ss aad stos adc sub dec jmp jne (bad) cmp shrl jno jl je adc cmc dec push adc scas xchg rolb call lcall pop cwtl aaa lds fsubrl dec adc add ja push xchg cwtl add push aam dec add and (bad) xor leave out (bad) ja ss (bad) xor adc mov push arpl sbb pushl sti mov cwtl xor nop lea out add loopne fiaddl lret mov repnz js daa mov dec cmpsb adc fldcw sub movsl mov ffreep adc xchg mov cmpsl pop hlt jg sbb xor sbb inc xor xchg adc inc es add daa repz pop pushf add dec sarb pop xchg cmp jecxz cld scas out pop test cli xchg lods sbb push mov in pop test adc iret and stos (bad) (bad) adc pop pop sub negb mov push xor mov and enter mov ss mov rcr mov sub test or mov push inc int3 or jns or cli imul xchg lea and dec push dec sbb fmuls inc sub xlat adc and jae mov mov lret repnz and dec xchg mov cmpsl test or shrl or xor test adc and adc stos sub adc mov jo adc cmp stos adc repz adc (bad) lods cmc sub dec out pushf test fild fs std and ja pop js pushf fstl mov push int3 xchg push jg sete sbb jle out adc xchg addr16 inc (bad) test fwait sbb and aas in xor bound inc (bad) repz xchg or adc pop pop add adc adc push mov adc pop stc stos sub int mov (bad) mov adc aam pop and enter repz mov decb sbb loope scas outsl rcll xor dec push bound fs lret sub pop cmc in loope adc es lea ja call and dec mov inc test mov adc shrb and push insl test sar fdivrl divl movsb cld xlat or sbb xchg insl jmp sbbl jge xor adc xchg sbb mov jmp ja xorb insl sti push (bad) xor rcrl je mov (bad) jae mov mov jo xchg int3 out mov movsb or mov in xchg cli popa add push pop jmp sub mov xor pop (bad) faddl lea out xchg or sbb (bad) xor push xor lahf jge les scas mov shll jnp adc out jmp pop cltd inc jb cld rolb cmp adc pop insl mov in sub mov inc add mov pop mov push (bad) adc dec and int3 les push adc push sub shrb pushf js mov aam jnp dec ja cmpsl sbb mov adc add inc jne dec fnstcw stos fsubl mov adc dec or fisttpll mov mov mov add push les cmpsl dec lahf insl paddusw cwtl sbb or ljmp enter lret sbb adc and aaa adc int3 sbb adc inc ret dec cltd mov nop pop popa jge xchg inc out lahf test cld xor jb push call mov daa in pop pop jbe jno or and sbb es stc push xchg test and notb jp js outsl (bad) adc fmul fwait stos insl xchg data16 adc xchg mov std xor aaa sub loop adc mov ss jg push int3 enter inc movsl loopne or ret mov dec adc mov adc (bad) xor mov mov sub aad push je iret xchg add add mov fdivrl and mov (bad) ss ljmp inc js mov out daa sub pop xchg mov adc pop or mov pushf nop mov test xor lcall mov push xor jmp cltd mov (bad) adc dec sub adc or aas mov jg push mov push rclb sub or mov js add jne adc stos lods enter adc fidivr jb push sub in bound cmpsb add adc lret ss enter adc in mov movsb aad out jp jno sbb cmp in mov adc movsb sbb popa adc sbb xor push push xchg cmp repnz shl aas sub xchg (bad) add pop dec popf insb adc lahf das sbb adc ljmp lods adc push xchg mov xor imul xor or in shlb add add jnp icebp push sbb lret pop jb lea adc cltd loope into pop push fdivl mov jbe (bad) (bad) mov stc adc stc push mov or lods jle aas insl xchg dec adc aam add ljmp inc adc push mov (bad) sub adc sbb repz mov add out mov dec pop mov xor mov sahf call cmp adc pop lea adc cmpsl and mov repz les push mov or (bad) push adc rolb lock mov int3 leave xor adc into fldt je mov xor cltd outsl xorl (bad) dec mov inc adc push stc cmp sub imul bound adc push or int mov loope jo mov fdivr mov rcrb int3 arpl cld shrb in minps iret adc enter inc adc ret lds pop ds fidivr insl sub adc movsl (bad) sbb dec stos adc lret les mov and xlat adc in cs xor mov cmpsl adcl fimul adc xlat push mov lods jp adc or xchg adc cmp xchg cmc mov cld test cmp xchg addr16 add xchg leave adc or rcrb add sbb in lea mov sub xchg inc mov adc (bad) std icebp sub mov ja cmc xchg pop inc scas add adc xchg mov stc jnp pop lret adc vpaddsw mov fcmovnb jns scas adc das add repnz xchg mov xchg pop inc dec xor mov push pop hlt mov adc fs mov notl mov sbb scas shrb (bad) loope push push fistpl cmp or js push mov jmp and inc sti nop sbb in xorl push adc jecxz adc mov addl out jns ret add aam ret sbb sub idivb adc pop loope mov fidivrl inc lret sahf aaa push rclb andl shrb cmpsb dec and mov cmpb xchg fcomps mov jle dec in mov push sbb mov repz cmp stos mov or dec fildl push jno out fwait push ss or jo fmuls sub adc hlt ret dec pop fdivr pusha sbb lahf mov inc out mov mov mov sahf cwtl stc xchg adc inc popa pushf inc push xor or push dec or out adc scas mov cld adc (bad) mul rcr notb fbld push lsl (bad) hlt subb xlat or xchg insl pop (bad) xor push sbb ds or jg pop or xor push lods adc out ljmp les cmp xchg ret adc or (bad) mov addl jg lret insb fnstcw or push xchg inc adc rcr adc and adc pushf aam and sub pop loopne arpl in lcall fsub mov jbe mov sarl and push fist mov cmp ret mov mov maxps add pop sbb add lds adc loopne leave jno lods inc add or mov addl xor jecxz (bad) gs pop mov int3 adc push (bad) icebp or adc data16 dec adc inc pop inc xor push test adc aas inc push cmp cmp adc les pop cmpsl adc outsb dec (bad) mulb sbb adc dec in shr stc dec push pop lock mov mov inc fst sbb ret ret adc pop adc gs lds ja test push sub push xor pop mov jo xlat mov mov inc gs adc stc repnz mov cmp sbbl cld push (bad) dec rsm (bad) dec sar mov lods pop inc pop test stos adc push aam xchg xor push push add imul out mov pop out dec popa pop sbb mov std lcall inc or test add mov or pusha (bad) imul xor mov call adc ficomp xchg jnp lret leave push add movsl mov xchg pusha xor xor scas ljmp adc mov lcall jmp adc xchg sbbb int3 inc adc mov inc sarb xchg lahf cmp outsl repz push loope pop or adc sarb push lds das mov push fisttpl cli mov xchg xchg adc sub lret and adc mov arpl jns loop pop adc stc jmp xlat movsb shrl mov inc loopne mov rcll or aad mov and scas push or adc fdivs fldenv aam pop mov mov mov adc sub push adc mov mov or pop or xor je mov js lahf mov push lret pop sbb adc mov cmp rcll test arpl inc je and leave out add jne imul in daa stos adc ss into push sub adc ja (bad) out insl aaa adc xor in xchg adc mov outsl inc jbe cmp das repz or lods (bad) jo sbb rclb cli dec (bad) mov jl push shl into fs mov test les xor bound frstor mov (bad) jne adc addr16 mov push mov adc mov adc hlt and adc push dec repnz roll lods mov inc ret std (bad) xchg push call daa mov adc dec push sub stos (bad) fdivrs std adc hlt cmpsl test stos inc mov sub push fmulp cmc fmull icebp or sbb mov notb test jecxz lock jb xchg xor aad dec mov pop jne push jecxz loop repz mov adc xor jae in mov xchg (bad) sbb xor or or pop pop adc out mov mull (bad) hlt or loope mov push into jnp negl stos sub test fnstenv add fild in xchg adc push repnz movsl jmp nop cmp mov sbb mov sub add call out pop lcall push (bad) adc dec and jbe mov jge add sti mov sahf sub push leave outsl cld (bad) or cmpsb xor aaa repz add xor (bad) adc mov cmp xor add cmc add adc pop sarb pop sbb adc push les repz xor orb add (bad) jbe notb xlat adc add pusha or adc (bad) cmpsb mov mov jno add sub insb add jae jg jmp cmp and fldenv mov aaa (bad) mov push mov out cmc and pop mov mov aaa andl out jecxz cltd lret xor xor add in add clc ret or add dec pushf adc push out xor jns adc scas jge adc mov adc insb fidiv test adc push insb inc add add notw xchg dec outsl enter fcom adc lret (bad) out or mov fistpl dec inc mov push lahf or push je dec rcll into adc jne sbb and mov lret shrl mov (bad) push dec iret sub adc cmp xor repz call mov sti (bad) push xor adc das sbb cmp push inc std adc pop dec testb test stc into mov inc out cmp (bad) jnp loope rcrl or daa jmp jb jecxz mov add adc mov fadd (bad) fs adc sbb jl loopne loop nop jmp cmp ror jnp adc fildl jmp adc cld mov mov test xchg adc sbb dec pop inc in push mov loope mov inc ljmp repnz add jmp add fidiv mov dec xchg and adc lcall add cmp leave mov or lahf icebp push pop inc or pop adc cmpsl stos jns lea popf jecxz dec enter adc or adc insb pop cmc outsb adc js xor push jb in arpl cmp pushf cwtl jo loope daa push pop push xor fcmovnbe mov fidivr mov mov out stos sbb out xchg mov xor add add push adc (bad) in xchg fidivl and mov adc test fnstenv push aam dec jo mov adc test mov xchg popa sub and add fxch push push hlt pop enter or adc fbld adc pop inc xor enter jb mov gs int3 cmp adcl push dec add xchg repz cmp pop or xchg fidiv (bad) xor bnd jae pop dec jnp pop (bad) mov (bad) adc sub jne adc pop jp add xor adc ficompl adc dec shrl (bad) mov or repz xchg mov or mov out lock xor (bad) mov scas pop adc mov and add test leave jb std mov xchg mov adc jae jl cmpsb lods adc mov cmpsl pop add or imul cli fdiv loopne test out mov push sbb fisubrl jle dec mov adc add dec into pusha mov xor adc movsl xor test and pop mov xchg mov push fcoml in push fwait out in xor addb xchg push (bad) adc push stc fcomip bound xchg mov cmp mov pop imul enter push lahf xchg adc cmc cmp nop adc js mov adc cmp and push cmpl push jmp cli lea jl dec rorb leave inc ds mov in push or pop add aas or clc repz and scas loopne ret ret cmpsl or adc (bad) in ds (bad) adc ret or insb pop iret add dec sub rclb add pop (bad) cmp mov or aam pop ret (bad) lar jns ja out lds inc or and adc inc or lret adc or and js pop inc aam enter dec sbb add out pop xchg lahf outsb repz ret inc pop and sub pop sti nop inc mov imul fcmovbe mov inc stos inc jb adc or adc aas xchg lret mov stos adc mov adc daa jne es dec addr16 dec push xor aad inc roll cmp sbb cwtl mov loope in sahf mov push jnp sbb pop stos adc rclb jo cmc jecxz xor or fisub adc ss call stc or push inc xor xchg imulb or adc pop or lret mov jge cmpsb das mov xlat cmc mov dec dec sbb (bad) mov adc std pop adc movsl jne ds clc adc mov add es repz sbb inc (bad) and push popa imul scas or jae lcall jp or push (bad) adc fwait ret xor pop nop in popa inc sbb iret xor roll pushf inc lods cmp pop fwait push cwtl int3 mov jno leave adcl outsl mov add push sbb mov jo jae mov cmp fnstsw adc cs ds push xor and popf push pop fxam (bad) outsb ss (bad) cmp pop add repnz mov int and je daa push cmpsb add dec push xor xor fistpll cwtl and pop jge pop dec inc jbe mov ja insb popa push lods mov sub orb mov push les jnp pop mov or mov dec cmovs nop rcll add sbb jbe inc adc std gs sub xchg xor and or scas dec test adc lds stos aam jl mov adc or (bad) mov lods test (bad) popf mov pop sub pop xor das call mov pop jge xchg jecxz cmp adc pop pusha mov (bad) hlt adc ret loop inc punpckhwd nop adc aaa outsl push vminsd adc pop push jmp mov dec cmc adc (bad) xor mov jno lret xor stc cmp adc xchg sti enter jb aam in mov add add sbb dec int mov pop repz jge or xchg rol sbb sbb sub adc push (bad) xchg ret (bad) push popf and mov lcall cmp addl mov sahf insl push sbb cwtl test cltd mov movsb jno (bad) adc mov ds mov lahf lcall pusha xor cmpsb lret cmpsl lock enter cmp cld dec mov insb int repz inc add cmpsl mov xlat and inc nop xchg xor add xor sarb xchg mov outsb dec or bound repz or mov enter (bad) test add push loopne adc or insl scas fwait xor out in jge add test adc pop dec cld ja mov add inc sub mov xlat fincstp dec jge xor add add fs adc dec in push mov sub fcompl lret xor fistl ret test or xchg popf adc xor inc xor cmpsb aaa inc xchg in push adc xor rcrl adc lods push pusha pop inc rcrb (bad) repz mov adc push out dec jmp (bad) pop div or xchg push mov xchg mov adc sbb gs add mov incb push pop inc inc scas adc hlt mov push ss cltd mov or xlat xchg (bad) adc sbb mov adc sbb aad (bad) mov das notl xor pushf cmp or adc (bad) imull cmc gs repz adc lods push test fistp ret adc and or inc lahf add sbb sarb ljmp xchg inc adc push loope xchg rclb pop mov call out jb dec add sub adc mov hlt pop mov popf adc mov rclb add int3 (bad) adc outsl and pusha jp sub adc push xchg js (bad) repz test cwtl in adc aas stos xchg jne sub mov lods sbb add mov sbb mov ret adc add loope or pop cmp push push jnp cmp xor (bad) lcall test dec lret xchg and adc dec (bad) lret xor jne xchg add push xlat jle jo mov adc test iret mov sbb jo push or movsb out sub in cld daa adc mov xchg lods jp out lret fsubs add rcll repz in insl aad dec ficompl inc outsl je (bad) rcrb ds sbb (bad) aas cwtl inc push mov cmp int sbb rol and pop add jno xorl push pop xor (bad) incb or push paddw mov nop pop sub lcall adc and cmc jns pop adc xchg lea sahf popa add scas xorl int3 outsl dec adc inc sbb push scas ficomp insl push cmp int mov mov adc out sub subl jecxz adc pop (bad) jg call pop pop and lret add mov adc sbbl xor inc or cmpsl or mov or adc lea pop cmc pop sbb pusha or sbb xchg sti mov lock lea jle add dec push adc and pop insl add jp mov (bad) mov mov push (bad) xor outsl adc xchg cmpsl push adc stos imul mov bts add and cwtl pop call (bad) imull cmp jae mov inc adc push adc mov mov mov xchg mov inc inc push inc sub adc add rcl and cmp push mov mov xchg sub adc (bad) mov cmp outsb xchg scas in cs fist adc mov ss (bad) int3 dec adc stc adc mov fistp int3 lods xor inc loope sbb sbbl pop pop mov (bad) push lret pop sbb popf fistp (bad) fs adc add lods mov adc shl push jns adc fstpt push out adc (bad) pop add daa xor adc add mov sub in jecxz push adc sbb xor (bad) lods fmull pusha sbb dec adc fidiv leave jne maskmovq mull adc sub pop sahf sti adc icebp mov insl mov push mov cwtl xchg test fadds lret and dec js xor jno jnp pop out adc and sbb or int3 or fdivr jge mov dec adc loop sbb mov mov inc mov inc xlat imul mov adc js scas daa shr mov pop paddsw sbb jno cwtl push incl pop repz lock xor ja xchg and jno sbb movsb pop cmp jmp sahf push and push dec adc int lcall sub cltd inc (bad) movsb imul mov ljmp test adc icebp (bad) mov pop arpl out fsubl repz adc jno pop jae ret pop or inc adc cmpsb cmp adc jecxz pop adc sub xchg xor pop xor adc into shlb cmp dec sub rcll pusha test pminsw push or and inc lds mov pop adc mov sub adc or adc outsl les mov cmpsl adc push in addb jae adc mov not inc xchg adc in cmpsb or adc jmp adc mov mov xor leave adc popf mov dec fiadd mov sarb sbb aaa mov sbb icebp mov pushf cmp and adc int pop sbb add adc jle ljmp add jmp cmp test sbb insl xor add adc stc inc mov adc lods icebp xor lret (bad) bound mov fidivrl push loope movsl mov cltd mov popa imull movsl mov (bad) fisttp adc rolb push push sbb ljmp add daa add les lahf or adc dec jp pop imulb adc and scas pop adc cmp rolb mov cmp adc push xlat sbb rcll jb mov or mov stos mov std mov loopne,pt addl icebp je push dec or mov pushl pop pop pusha addr16 dec adc and lret add notl cli cmc xor pop add mov xchg cmp cwtl sti xchg fsubl nop rorl insb cmp pop movsb cld insl sbb fdivrl adc pushf loopne lock pop scas adc sbbl adc imul or adc pop add adc outsl jno add test inc subl add rcll inc test insb cltd idivl push fcomps test push std sarb xchg scas icebp adc stos popl insb stos into sbb sub jle and arpl cwtl mov (bad) xchg cmp xchg fidiv adc push test cmpsb repz mov fmull inc aaa adc pop stos adc hlt leave adc jl adc xor adc push fstpt or adc pop test add pop sub lds cmp mov repz jo sub popf mov mov fisubl adc add (bad) cli in xor sub hlt dec and cmpsl clc xchg popa mov dec adc stos in mov jo mov ja fs mov repz push jmp mov jge,pn jo scas lea add inc (bad) pop or aad adc lahf test or lea mov xor adc pop pop mov adc mov into jl lahf jle jle jo push xchg aam mov data16 fnop call (bad) fs pop in adc pop mov lds sbb mov push adc lods add mov test mov fs push jmp sub pop pop or add xchg inc ds xchg test (bad) pusha pop adc pop aas roll adc cmp push xchg repnz pop aaa clc add adc dec push insl jg adc xor xor add dec hlt ret scas inc mov add outsb jl pop int cmc add adc cmpsl cmp add sbb notl or mov jmp stos test lahf aas repnz (bad) mov stos dec pop fcmovne test adc outsl repnz mov adc in negb ljmp sbb adc jmp (bad) jne jae js ljmp mov fcomip jb pop int3 or dec or int or mov mov mov adc adc rclb mov fimull cmc xchg sbb adc mov clc and outsb dec out adc jmp subl shll push adc add hlt adc add or adc jnp sub sbb aam or push imul repnz js add adc je pop pop jmp mov jno mov (bad) test icebp pusha push adc cmp mov mov or addr16 add xor push notb pushf test cs in cmpsl into sub ret sbb adcl cmp in pop push adc jge (bad) adc pop push iret imul out insl and mov stc add xor sbb pop dec sahf xor cmpsl sbb push test adc fiaddl mov adc jmp mov jl pop push jg mov fcoml or repnz fadds xor sbb insl push pop lahf mov xchg lret jecxz fistl rcrb insl sub ds fnsave or mov shlb sbb int iret daa adc sbb (bad) imul adc shr inc inc test cli push lods sbb mov test int adc sbb mov mov mov push xchg add stc ret ds adc sbb pushf adc sbb adc lods xor xor lods or sarl test scas mov cmpsl punpckhbw mov (bad) addl pusha dec jle out or adc sbb push sbb and cmp lret addr16 adc mov pushf xor insb push pop or bound pop push loop loope mov mov jge or mov loop sbbb pop inc adc repnz out frstor ret mov int cmp in cmpsl cs js and inc sub cmp mov xor xchg mov jno pop adc rcrb hlt lea pop mov add in ret or mov test pop lock and adc or fxch pop pop dec or bound push ss mov imul in loop mov xor fs data16 inc sbb pop push mov cs sbb aad and add cmp mov push push or adc lret push jmp adc push mov pop cltd push mov jno sub sbb inc inc jl mov xchg add daa sbb lds xchg sbb cmp mov iret mov mov clc mov xchg adc lahf jge adc mov jb pop mov pop add cmp js dec sub add rcr mov add cld adc jg (bad) push rorb and call hlt popa or stc mov sbb adc mov sbbb jns,pn jmp out or inc mov push push pop (bad) or pusha cwtl clc adc or xchg mov xor out or call ljmp add inc pop fisttp or ds enter pushf nop adc jne rorl xchg add sub xor pusha mov cltd dec rclb mov stos cmp repz or (bad) or mov adc or iret xchg sbb std xor movswl jmp push mov add pop jg (bad) call xchg ljmp pavgw adc pop in pop fstpl mov imul ficom push fistpl sbb adc adcl imul aam mov inc repz jp das sbb and ret mov mov stos mov mov in adc out xchg xlat inc movsl out loop xchg mov push jns jp xlat rorl add pop sbb rcrl stos sbb fcoms out cltd and pop adc mov (bad) mov xlat ljmp xchg adc test sahf xchg out mov fstl call mov insl adc adc push (bad) ja loope push adc loopne cwtl cmc mov add (bad) cmpsb pop pusha adc rcrb push jns (bad) mov xchg cwtl rol push test xchg inc scas and dec lcall and sahf lret movsb mov xchg mov enter dec jnp or cmc adc push ja pusha or rclb ret dec test test pop shrd sahf xor jns adc repnz mov aaa mov enter cmpsb ljmp hlt in dec adc loop mov inc pop es xor sbb in jns arpl add pop cld mov and or sti sub adc pop or push repz xchg cmpb cmp adc jl aam shlb push push rolb mov push aaa fwait adc push and jns sub adc mov mov inc xor push push push loop out cmpsb mov in mov lea cli (bad) loop cmp lret sub add cmp mov pop mov add add es test mov sahf dec pop mov out loopne aad in xchg and leave mov inc dec adc imul out add pop jmp mov mov (bad) adc inc pop int3 (bad) xchg dec adc push dec xchg fucomi push push repz xchg cmp sbb inc adc mov mov je dec popa push and xchg ficompl mov inc lret cld pop pop xor dec jecxz and sbb push (bad) sahf fimul fstl lock dec sbb and subl out sbb or call jno daa out push adc into xor lds aaa pop shrl adc jg ficoml and adc (bad) aam adc popa lret cmpsb mov iret mov popf bnd mov jmp aad or in sbb nop mov jbe adc rorl (bad) in pop mov mov test add out and mov xchg push dec daa cmp push mov jbe push adc stos pop outsb fdivr outsl mov mov mov inc mov jo or sbb mov nop push (bad) cmp out into adc fiaddl rol mov mul dec adc mov pushf in and push pop fbstp repnz (bad) adc repz out xor dec pop or (bad) mov adc fs iret es imul xchg xor ss dec mov fwait adc push push scas fcoms add sbb adc daa mov int xchg pop adc repz sbb icebp adc adc pop inc mov fcmovne sub mov jmp adc popf mov xor push or adc adc popf sub adc xor (bad) or popl xor adc sub jle test lods adc movsl pop (bad) xlat cld adc cmpsl in sbb adc jp stos inc mov jne adc adc pop adc jmp jb jno lea ds sbb push cmp dec or into cld out or out cmp add ja xchg add adc and sub movsb sbb pop sbb push adc sbb cwtl push add push mov (bad) mov fildl int3 jne and jecxz rclb (bad) sti mov lods inc loop xor fistl lds stos ljmp and adc insb add and mov movsb adc xchg repz arpl xor pop jnp xchg inc sub mov xchg stos inc fs or hlt daa sub popf cmp add faddl or or adc mov push arpl mov pop adc mov fstl in lret xchg push scas adc dec cmp sub jnp dec inc arpl enter popf ret push mov sbb add jp in scas jbe cld test push decb (bad) loopne mov pop loope roll in pop dec cltd xor push xchg sbb add add push je mov aad stos inc add sahf inc divb push sub push cmp adc divb push adc in out test dec mov hlt sub sbb adc adc mov push call mov xchg rcll js fmull or cmpsl fnsave (bad) popa adc mov hlt push add inc xchg sub adc pop mov mov out xchg lock nop insl movd add cmp repz pop cld pop mov out mov fdivrs mov int xor cmp mov adc ret lods push popf lock sbb push xchg cmpsb xor (bad) xchg mov sub mov (bad) pop mov stos icebp leave and mov adc cmp adc icebp and dec repz sbbl mov insl jo and sbb (bad) out repz xor dec and and adc inc sar adc mov sbb adc ja mov push mov popf adc repz movsl lret adc addr16 sub sti popa jno and test jb cmc and or sub or push cmp inc adc (bad) xchg adc imull xchg jb push gs jbe mov icebp mov maxps lock adc loop dec mov adc adc sbb rcll adc inc sarb mov int3 or mull adc fsub adc scas xchg imul and mov lea jp ret sbb cltd inc shrl xchg adc out int push adc jecxz pop aaa push scas ror loope sbb push or cmp add rolb inc xor sbb xchg and in or adc lock adc cli and add jmp jb mov test push js movsl repnz push push add sbb jmp fcoms loope add inc jmp push mov (bad) sahf jge,pn adc adc jg (bad) pop add dec jno adc daa pusha jo push aam cwtl inc enter and hlt mov out inc in xchg adc cmpb stos mov adc fcomps cltd lcall dec lcall rorl cmpsb jmp add cmp mov inc mov xchg xchg loope aas push and xchg push adc sub shrb adc sbb scas adc jle adc adc sarb mov pop ja pop pop popf xchg out push or xor mov (bad) lahf fs lods adc test fist cmp inc jp or nop or (bad) adc (bad) enter cmp (bad) jno mov psubsb cmp ja mov loope or sbb hlt jmp mov jae push push pushf xor adc dec fild adc pop inc adc mov inc lods cmp outsb or in adc (bad) popa adc lcall pushf sarb fsubrl inc mov arpl addr16 mov adc fdivl adc xchg push inc movsb (bad) sbb mov mov inc sti sbb or bound add inc adcb test xchg mov arpl xor jae test add lcall adc popf cmp dec mov adc test add sbbl scas cmpsb xor pop xchg scas mov (bad) xchg sbb adc and pop push (bad) jb adc sbb (bad) cwtl gs adc dec sub loopne lods (bad) icebp insl inc sub and push es imul (bad) mov mov lret rcll scas mov daa adc sbb pop (bad) mov and jle ds jbe cmpsb mov push dec adc push or sbb out lret ret mov test int3 rclb xchg call xchg aas cwtl mov add push mov or mov sub pushf mov loope mov test adc inc push mov add out add lret push cmp adc xor (bad) pop adc mov sbb pop jmp pop mov subl repz movsb mov push addr16 or xchg xchg out mov dec jecxz bsr jne adc rcr test adc mov or orb outsl mov add repz sub arpl push gs loop adc mov aam and es mov std pop push dec in mov inc push jle pop cs out adc imul lcall rolb xorl pop cltd bound test aad in jnp js mov por or dec mov xor iret jle mov lcall xchg nop xor jecxz ljmp adc out inc loope mov mov push sbb inc (bad) mov sub test jo outsl hlt fsubrl (bad) adc repnz push pop in rcll out scas sub add adc xor jne inc add cmp data16 mov cmp or cltd dec add inc (bad) out hlt adc scas movsl inc sti xchg mov loope arpl jl enter cmpsb mov add sti movsl xor adc jnp lret fistl mov fmull cmp std ss cmpsb adc (bad) push sub repnz in fwait fs movsl inc cli or inc fmul cmp adc jae cld repz in push or test cmp adc hlt lcall or xor mov adc inc les outsl jp or and or adc jbe aam js add outsb mov adc add dec adc std stos sub pushl and xlat adc loop (bad) lods adc jae ljmp adc daa cwtl sub or adc sub testb adc lahf inc push mov mov pop or adc pop lret cli ret cmovb loope imull or inc mov mov sub fcmovnu mov das decl pop jno and adc jae mov cmpsl aaa cmp cli adc mov cmp ja lret jge neg nop push add sbb repnz jb xchg das jae xchg push fist mov imul sbb add or adc jmp mov jne mov inc add mov mov xchg add push pop adc aam xchg leave int adc lods mov loop movsb repz adc sarl mov xchg jge mov push push mov scas dec (bad) add adc xchg aas and addr16 xor test mov xor icebp adc in pushf inc mov loopne cli fst dec cs (bad) adc adc jno xlat roll pop mov xchg xor sub adc pop sbb and int3 (bad) push orl in adc sub cs jecxz pop into xchg jp mov ss xor mov testl fdiv lock and fisubrl std push les push lahf icebp popa mov adc dec int3 xor adc or push mov jle add pop lods pop inc ret fwait idiv cmpsb mov add and int fsts test repz sbb movsb dec pop mov repz mov xchg hlt call rsm out rolb mov std lcall cmp inc add scas stc jb imul or inc or xchg int imul shrl fcoml out mov xor xchg adc int3 out icebp leave jl mov arpl and scas mov and jge loope (bad) jo in jns pop in add es gs xchg push fsubrl pop xchg mov scas sub pop dec xlat lods add sub jnp loopne or aas lret scas hlt cs cwtl push shlb jmp jge or mov sbb adc dec sub sbbl jg and inc sub jb loopne frstor adc cwtl adc cli (bad) pushf stc iret pop cwtl (bad) mov adc inc fcmove adc lods sbb loopne int3 in lcall and pop mov ds xchg fstpt mov fstps ret mov mov pop in ja jp add push mov pop in add enter push adc xor jge adc xor mov repz push stos sbb div fbstp (bad) adc xchg cmpsb lods cmpsl mov add in xlat xor sbb xchg pop test adc shrl jns or xchg push stc push gs mov xchg adcl jae adc ja mov (bad) mov adc insb xchg xorb (bad) rol and sub add add or adc inc lea push insl ficom out mov or insb xchg adc hlt sbb dec jb cmp push adc pop sbb sbb repz mov mov jne (bad) mov cld sbb das lret or xor shl negb sub xor daa dec (bad) (bad) or aad ss mov and jle rcrb xor push pop clc xchg mov sub divb rorl jo call mov mov pop adc inc push leave outsl inc enter xor popf push mov or dec jmp lahf adc cmpsl repz fdivrs (bad) mov mov sbb mov or in adc daa adc adc push inc jae jl add add dec adc (bad) hlt or nop and inc mov add pop mov in jle dec inc adc inc loope fadds je rorb push cmovl jp clc dec add (bad) pop mov aas mov push adc sbb sarb in adc dec rcll ret cmp daa cltd adc les mov aad mov or jg in iret add nop lds xchg mov cld cltd or enter xchg cmp adc push fdivr cwtl xlat mov lods dec aaa in inc cmc adc daa hlt mov adc and add inc or xlat xor jl push aas and es dec mov jmp stos std (bad) mov lods or jne and mov jmp adc imul dec ds adc std lds dec (bad) adc test repz mov pop pop mov sbb inc out push ret adc and flds cmp hlt mov into movlps inc push mov outsl pop pop pop (bad) flds xchg int3 pusha adcl fbld rol jne fistl sub jno pop sbb push mov cwtl jmp adc ret repz enter sub xchg popa adc js and dec test stos cmp and cld pop mov rcll out dec cmpsl sub mov test mov mov pop movsb mov or jmp pop stos fisttpll sbb aas fcoml mov inc shrb push jmp shrb enter aad or sbb test dec adc loope add dec popl or inc or push jge sbb addb jno mov sbb cs push loope adc push add mov cmp nop inc hlt scas sub pop add dec and xchg bound repz loope cs or or xchg adc stos (bad) (bad) mov sti ljmp int3 daa xrelease aaa ucomiss ljmp adc div mov lret popf adc cmp and lds (bad) jne ss push cmc push jecxz xor dec adc cmpsb outsl test stos shlb faddp add pop test decl adc push lds sbb push scas mov dec adc lcall hlt xchg or addr16 xchg nop adc aam and ljmp push cmpsl mov or pop xor insb dec insl icebp pop das or inc std inc adc sbbl adc fmull xchg scas or (bad) inc add dec daa mov push cltd xlat adc popa and enter (bad) nop dec or cmp adc xchg test jno push test scas gs pop cld push adc and stc repz jle loope,pn stos (bad) pop jmp pop neg (bad) scas push inc xor jge push js lret adc fstpl (bad) popa adc adc sbb ljmp mov xchg add pop push in imul push addr16 out pop push xchg xchg sub adc stos fcoml inc insl cmc jnp rol jmp popa xchg mov add bound mov imul idivl repz icebp jb rorb add adc sub push jae lea lods incb adc mov sbb add adc or sbb fbstp push adc push lret loopne pop int3 adc jae add decl push adc pop insb adc mov pop mov (bad) jbe je sbb ja mov cmpl daa imul not (bad) ret mov xchg mov dec mov xchg fstl push mov call cmp addl xor mov das sbb push iret add inc push adc aaa dec dec mov imul mov repz sbb or fwait inc jle mov shlb out fisubrl jge or add test aad loop das ds lret fisubl ret scas out push les mov adc add js adc xor scas mov fisttpll lods dec and hlt xchg adc xchg dec adc insl movsb adc psubusb dec cltd adc das add mov rolb inc lods inc dec cmp push movsl pop test (bad) jmp ja push stc pushf nop imul adc in adc adc aaa mov or pop sbb cmp mov das sti jbe pop mov ret dec (bad) fwait mov add adc mov lock adc out ret xchg jb xor rcr or hlt dec xor and (bad) mov inc fildll std lds and sarl jbe clc adc lret adc push dec out or test xchg adc jge (bad) adc ret mov adc sbb or jmp jmp xor lods jno fcmove add xchg fisub mov push idiv dec cld sbb mov out movsb ds and movsl repnz stos or (bad) sub push insb mov pop sahf sbb sbb call dec stos (bad) shr adc cmp adc loope (bad) cmpsl add jecxz jne addr16 stc sahf sbb repnz lock nop (bad) inc lahf sbb xchg inc mov jae shl adc adc add cmp in test out adc mov mov mov cmpsl sarb mov mov sbb mov adc clc fidivrl in out dec xor add fnstcw pop int and repz sarl pop push or pushl inc pop and or pop push loope (bad) and jmp or inc jle adc das ret push adc inc imul lods add ja das adc cmp push aas sub shll xor mov sbb jl sub in rclb fmuls adc outsb inc pop sub aaa adc mov jne sti test out data16 mov or fdivs lret sub or push test mov in imul add sti and xchg xor mov jg (bad) adc popl adc add adc aam jmp adc jge adc pushf adc push xchg imull stos lcall (bad) enter and addr16 sarb negb std push arpl mov pop fisttp adc xchg lret cmp adc out cmpsl pop cmp aas jp sbb jo mov repz add std jp or lods adc stc nop out adc cltd sub add adc in xchg xor mov pop xchg nop inc shl or cltd fldcw mov mov psubq jne or dec in inc jg daa lret adc mov inc test xor sar adc xchg sub mov cld xchg in daa xchg lret push ja int aam pusha lret mov test and jno sti mov dec cmp or mov in mov in push flds (bad) mov pop cmp xchg (bad) xor fstl dec add fwait dec adc lods add popa adc repnz adc jmp jb pop data16 inc and mov jo out xor xor add adc pop mov mov lods divl cmp outsb je pop jnp cltd repz imulb loop adc jp fwait cmp call outsl and mov test lret adc dec sub mov push and fs adc sbb mov in inc sub repz daa mov sbb je push (bad) lea mov xor movb cltd stos push xchg mov vandnps mov add cmpsb rorl cmpsl inc out and dec imul add divw xor test lret pushf sub dec cmpsl out setb dec lcall mov aaa add push int3 mov or adc in outsl jo push (bad) or pop test int3 sbb loope pop push mov daa and mov jg out xor insl mov or jmp ljmp or mov mov mov mov dec pop mov and jbe out rolb enter jecxz adc ja loop push addr16 fsubr cmp add sbb jecxz pushf insl enter cmpsl or inc adc stos cbtw adc pop movsl (bad) mov loopne cltd lock sbb adc cmp adc inc iret insl adc or outsb bound ljmp jg pop (bad) ja fdivrs insb adc hlt aas pushf sub mov rcr adc mov xchg aad adc dec and out push (bad) adc push pop daa mov and inc mov adc idivl pop adc sbb fimul int3 push cmp adc adc lods pop xchg cmp adc test push andb push das inc jae sub and xlat mov mov xchg mov (bad) adc push inc lods imul jno inc and jns loop hlt mov sbb lea sub pop xchg mov fs ljmp adc sbb fnstcw sub cs and dec pop icebp adc fs sub fisttp dec lea or jns mov push in xor jmp sub or jp pop mov add ficoml jg cmp adc adc scas mov enter xchg out dec dec xor dec add rcrb push mov xor mov bound adc mov jb rorb sbb nop div mov mov pop sar (bad) mov jl fstpl adc arpl aaa dec into test movlps pop movsb push xchg aad pop mov loopne push inc pop ljmp jp pusha fidivrl xchg jge jnp mov fstpl cmc sub aaa pop in and push mov adc jo mov repz xchg xlat and pop and aam adc fldl adc or adc js dec cmp jb repnz ljmp xchg adc or sbb rclb mov outsb addb sub cmp stos in lea xchg (bad) push cmp fdivp xchg std stos adc add nop pop sub xor jge lret jno mov es mov hlt push sbb rcll lods jmp xor cmp jg xchg add adc mov test fld int mov mov pop popa mov lods mov mov push mov or call out stc lea xchg add imul adc inc stos mov leave add js cmp mov mov test movsl aas pop in jp adc and adc cwtl and adc scas adc aad fsubl fstps fs xor and sbb inc add movsb dec imull out or into xor movsl imulb cmpsb cmp rclb insl add mov mov cmc xor jb idiv pop outsb dec jecxz adc dec sbb out add adc into lods inc popf xor mov faddl xor xor adc inc dec or adc in xor outsb inc movsb adc adc mov adc fwait aam lahf push pop jge adc inc xchg jbe or in fstl add shl mov aad out popf sbb mov xlat sbb pop adc gs adc mov add pop sub push les (bad) in adc sbb or push pop sub movsb sub fcmovnu insb adc mov ret adc sahf jb or sbb add sbb das xor loop inc sti es add jns out add lea adc mov adc push xchg mov adc mov xchg push mov adc jae add cmp adc pusha stos cltd repz lods pop dec inc pop or adc sub push adc mov xchg adc test push mov cmp stc mov je stos mov adc dec pop and andl int3 pop das or (bad) imul sbb push sbb cmpsl aaa pop xchg sarb jbe sti pop add adc jae icebp subl mov adc dec jle and mov mov sbb add imul nop adc insb pop les xchg dec cmp stos inc lock mov pop sub notb inc out imul push push ret xor cmp cmp lea sti imul mov test aas push lahf add mov adc xchg inc pop int3 mov add adc add ja add push or xchg gs lea fistl mov mov mov pushf cmpsl push pop jne xchg xor pop ficomp imul enter adc pop (bad) xor inc idivl xor dec adc push adc jl cmp xchg cld inc (bad) push and push xchg inc and adc sbb (bad) mov or push lods sbb adc xorb dec cwtl inc adc push adc mov call jnp ret mov loope mov mov adc cmc adc mov mov loope ficom lret cmp adc pop and and shrb movl jo pop xchg cmp imul fimul adc add mov add jns mov or cmp stos jge sbb jecxz inc stc mov and dec cltd sbb mov rol in inc add mov aad dec xlat int3 xchg mov adc add lds movsb pop xorl pop pop mov (bad) inc sub mov popf push loope (bad) jno or adc sahf and cvtdq2ps add outsb mov mov mov sti cmp icebp pop mov xchg add in pop adc enter xor ljmp adc dec cmp int3 fwait test push jno push in mov es pop mov rolb gs (bad) push adc stc lret jne xor sub xchg and mov or out ret stc lahf test adc xor sti ret inc test scas adc dec fcompl pop dec mov stos adc ficoml cmc and mov inc (bad) je or pop or int3 pushf xor js push xchg mov adc inc jge mov ja xor pop jecxz in jl pop mov mov daa fdivr adc jp push movsb pushl aaa arpl notl in fsts adc pop rol into inc adc adc or xchg inc push fistp jne stos dec nop push mov repz int3 (bad) pop or push adc je lea rolb loope mov pop fisub (bad) (bad) jmp mov and fsts hlt add xor or sti dec cld mov push repz movsl adc roll dec lret cmpl test adc and fsubrl adc xchg stos add adc cmp and or jbe out sbb add rolb sub mov push stos xor push adc lret cs pusha lock dec xor mov imul inc pop xchg ret rorb mov or sub jo xchg (bad) jmp push sub xor adc sub cmp fsubrl or repz pop xchg add lret cmp je push adc sbb insl jp mov rolb sti jmp lcall jne jbe push adc sahf js xchg (bad) sub adc out pop and pop (bad) (bad) xor jge fcoms adc fldl aaa (bad) adc shll cmp clc push sbb pop in jle cmp sbb jbe cmp out into or shrb sub cmp cwtl pop fisttpl bswap cmc ja pop pop or jecxz pusha cmpsb sbb or (bad) repz (bad) xor xchg lods push sbb sub adc out mov xchg bound arpl mov adc sahf adc rclb std jge test (bad) push addl sbb sahf adc fbld loop pop in sub (bad) mov pop repz push jle jge push mov into add stos in or inc (bad) mov arpl mov mov mov (bad) cmp adc lock dec jg or notl repz jnp or ja rorb aaa mov aas mov cmp pop mov test push xor mov adc sub leave pop or mov pusha mov xor popw fdivl inc cmpsb xor lahf sbb jl sbb inc jp mov adc push loope sbb xchg in out or in ljmp inc adc test dec cmp outsb jnp nop or adc xchg jb jmp loope push mov pop push (bad) aam out adc add inc push rolb sub mov adc sbb ljmp rcl pop inc mov repnz xorl stos jecxz add xchg sub add sbb jmp inc pop xchg mov jo xor lcall int3 subl xor pop lods cmovs mov add sub adc hlt mov xor mov outsb notb sbb dec mov std mov adc pop adc lods aaa or dec xchg out pop mov adc inc sbb pop cmp (bad) jmp loope outsb dec xchg xchg jnp jno or into jp fnstenv out and hlt adc add push mov xor push add jl adc xchg fisttpll repnz mov xor popf daa mov es push addr16 movl jae cmpsb ljmp repnz jge add xor cltd adc pop jle adc data16 dec mov sbb xchg gs dec adc imul cmp pop push sbb add add adc jmp aam mov pop addr16 cmp inc cltd int adc call sub adc or cwtl inc in pop mov jno in add dec in mov dec mov jmp mov ret adc rol cmp adc mov sub cmp mov scas mov add jne or sbb jle and lahf out push mov (bad) inc push mov ja stc sbb adc in adc std adc adc xor xchg adc scas movsl cmp fdivp jmp xor jge adc pop add jne inc subb std (bad) and push inc add fwait call out stos jne (bad) jns push adc daa ret lahf std inc cwtl cwtl mov adc jmp ja mov mov mov mov dec pop mov fchs adc jmp mov adc js dec and mov adc push or lds lret in outsb inc pop sbb (bad) std ss cmp fsubrs dec lock xchg push lods repz mov repnz pusha push aam popf mov add stos insl adc (bad) jne pop and (bad) je cli fstpl push movsb loop cld fstps lods mov push shlb shl out jns lock dec sub pop adc sub std lahf and xchg xor adc stc repz and pop cmp or cmp or in fmul imul enter ljmp xor nop xchg je popa call jo fs mov test outsl cmp xor sti push loopne js icebp lock dec pop adc gs mov adc pop dec popa adc sub or rcll inc dec es sub imul imulb jmp or or in sbb mov das cmp lds xor and adc mov rorb mov mov adc push mov in pusha dec sbb add (bad) loope adc test or adc call cmp xor and push push mov sub call (bad) lea sub add scas sbb sbb fildl adc and push ficoml mov cld cmc out mov mov mov xor in shl insb call outsl adc add into fs xchg repz dec push js mov lret dec shll jp lods adc sbb mov (bad) adc add or pop adc pop cmp nop inc fstl imul rcll jmp add ret in insb dec popf push (bad) adc mov imul dec ret aas mov mov mov out sub cmpsb fsubrp les clc (bad) in dec ss xor adc adc adc repz insb push mov int3 fcomps pop mov adc cmpsb mov inc push daa rcr sbb or and or inc ja mov arpl mov icebp inc add adc push fstps leave bound xchg add xor pop jl pop xchg das dec push adc test jg jbe enter jmp dec (bad) dec adc jns icebp adc mov rclb test cmc adc jg (bad) std mov fidivrl mov dec insl test inc jnp sahf ret push sub (bad) mov mov aam popa hlt add leave icebp mov sub sub or adc incl imul (bad) pop sbb pop inc xchg data16 adcb inc push jecxz fisttpl sbb sub cwtl rorb jns cmp fsub jmp adc repz outsl jg (bad) (bad) cli adc lock lcall sbb mov mov imul adc (bad) xchg pop xchg movsb rcll jp test fidiv cmp call fisttp into mov push mov pop adc iret dec in sbb sahf adc adc add push not mov adc xor cmpsb nop shl jae dec xchg adc add dec or aaa dec mov int xchg sahf hlt repz xor (bad) adc nop pop test stos in jl inc adc and inc push out mov pop adc mov ja repz and push dec push fisttpll mov fildl ss mov push jne or movsl inc cmp mov sbb xor adc push orl shr adc repz mov cmpsb jno fcmovnbe repnz xorb pop mov hlt sub ret ret and icebp js push lcall (bad) and mov sub add xchg hlt dec sbb int3 jnp ret cwtl xor arpl jne movsb adc cmpsl shlb pop dec test repnz sub cli bound fisub (bad) pop adc pop sahf jle fadds inc mov aam ljmp adc jb loope aad add aas jg sti sahf mov test outsb fidivl call sub mov cwtl loope jne stos adcl push fimull adc in cmp out mov adc inc sub xchg add (bad) pop fwait pop cmp mov test inc adc addr16 leave shl mov pushf outsb add jle mov or movswl mov adc jl jp fdivrp (bad) mov adc xchg stc mov dec mov rcrb or out mov and cmp sbb adc sub (bad) fdivs pop adc pop inc mov es stos jge add jnp mov inc lds pop jmp inc jl mov daa mov sub je int3 inc mov mov jbe imul mov push adc inc jns adc or enter add push (bad) fsts stos or imull (bad) or inc in in adc sub inc stos loop (bad) push addb lret push cmpsb jo push das or dec adc cli and push aam cmp jg into mov sbb test cmpl fidivrl mov pop (bad) cld pop adc stos (bad) ficom inc shrl mov and sti xchg loop adc mov cli cmp cmp lret cltd xchg xor hlt dec inc add sbb in movsb mov adc clc lock cmpsl sub inc orl dec push jno adc cwtl fidivl mov jae adc cmpsb inc dec mov sub dec sub mov push out and rclb cmp mov into sbb pushf xor add aas pop dec loopne movsl jb aaa fucomi pop lea fs adc mov adc or or mov aas add js jp mov jo adc jecxz mov test mov out shrl sahf pop aas jno ret mov adc mov icebp push pop out mov mov aad adc jns jmp popa (bad) xor pop adc xchg sbb xchg jns jecxz into outsb fcomps bound add inc mov iret sbb pushf lcall gs enter or jecxz ss adc jbe push cmc out sbb cltd dec aas jmp lahf mov adc mov notl push and sbb stc inc or (bad) in aam mov aad adc loop daa out or lret (bad) mov adc mov jmp mov lahf add dec les adc inc adc inc into mov dec cmp or in lods les mov jmp cli in xchg inc and inc cmpsl repnz mov adc sub mov mov pop das xchg out adc push arpl pushf cmp dec fbstp pop (bad) int mov adc nop mov adc mov sbbl pop cld lods movsl or orl mov test in dec or pop repnz jecxz push pop out fdivrl test or push adc sbb push adc lret mov aam lock scas mov int adc fldcw adc push sbb pop add jecxz in dec cmp data16 lahf paddw lock and add sbb adc js pop sbb mov add cli mov inc pop jge jg cmpsl jns dec sub outsb cmp js push rcr pop lock and xor and jmp cmp sub outsl pop cmpsl jl adc push add fdivrs adc inc jmp jle add cwtl xchg das rcll xchg icebp jbe mov mov or in in adc das push js je (bad) adc lahf add or push jns pop xchg xor mov jp mov les xchg pop (bad) lret es cli pusha adc outsb mov gs clc or lcall lods adc int3 inc adc ror add jmp mov push adc test xchg jno adc clc jae sbb xor add js mov adc jno jge add shr sub jnp or js adc push (bad) mov ficom inc sub dec jle push add adc xchg mov adc sbb jno xor sbb sub daa jle adc cmp les mov je push loop fstl inc rcr push pop adc dec inc lahf inc ljmp daa pop lock mov icebp jne or (bad) and pop popf adc sbb jecxz addb adc jmp rcrb roll and leave adc sbb (bad) repz mov (bad) int3 lahf ficom cmpsl jnp mov insl or lret mov adc adc sarb and int lcall loop xchg sub mov loope out rorl adc xchg jns adc ss scas adc jp add xorb mov out int3 inc mov mov mov orb mov mov notb xchg (bad) xchg mov mov xor adc adc adc xchg aaa add fistpl xchg fdivs jecxz mov orb mov mov fist mov adc sbb mulb aam mov sbb cmovno pushf sbb and mov xor push outsb je sar dec jle adc adc jl aaa mov sbb inc mov mov movsl loop (bad) pop push movlps stos sbb push add xor xor or cld test sarb inc sub jl pop mov lret push ret jno mov adc xlat out mov imul (bad) lods mov adc or or adc xchg out push rcrb add sti fisubl cmpb xor cmp fwait repz sti mov inc or add aam imul mov cwtl pop sbb mov addb gs jge push aas pusha sbb mov rcrl xor push cmc lds and and (bad) nop shrl in gs mov sbb mov mov popf outsb add inc cmpsb je xor dec add mov mov adc fwait insl test loop rclb mov adc or lea xchg sbb popa sbb cld sbb outsl push or dec cld out xchg add add mov loope or out cmp mov mov inc cmp mov std sahf push xchg sub pop jecxz dec sbb mov pop push adc notl add pop mov jge lock daa mov sbb dec int3 xchg cmc add adc jae push xor loop lods inc mov adc sti mov pop cmp sub decb add xchg test arpl push cmp pop ljmp jp fiaddl jno jle gs push adc clc mov ficoml jg add divb adc fadd ss mov push jmp aam or outsl push adc popa inc xchg mov jp cltd xchg xor adc (bad) mov in sbb mov adc and mulb aad mov movsl mov das pop or div push mov xchg mov lock std repz pop adc nop test arpl ja adc rorb daa adc push nop adc or test mov ds jo and sbb sub lcall mov xchg repz neg mov mov repz dec ja or decl and ror das adc fld mov stos lds pop pushf test adc and push div cmc rcrb idivl (bad) loop jb adc cli sub adc xchg (bad) icebp inc fstpt mov je test cli mov sbb or inc sarb lods inc stc sahf imul adc stos ljmp push lahf cmp add mov fmul dec xchg stos pop or and ret dec adc cmpsb or xchg sbb insb inc cmpsl mov dec lock mov adc mov mov je pushf lods mov test fld mov sbb xchg mov inc push add into adc (bad) sbb daa pop je sub mov pop or repz mov jb dec jno scas das (bad) adc ds rclb int jnp lea mov add jbe ret movsb adc sbb xchg adc lret out repnz mov inc mov fist sbb pop (bad) popf mov and lahf mov jns push int add gs add or adc sub loopne push xchg jecxz in or aad mov movsb cwtl jo das adc xchg dec mov adc add clc jp adc jl icebp adc sbb repnz nop push push imul lret add cmp push loop jae call or add xor mov jno cmc repz adc aaa insl xor arpl in push test push jl pusha adc cmp inc loopne dec mov ds mov or jne sub icebp lahf push adc lods adc (bad) imul add aas adc xor lea js (bad) or cli mov inc xlat dec or (bad) loop dec outsb int3 mov xchg je nop sub lret inc into pop dec adc fstp (bad) cmp iret test cwtl inc jmp inc mov aad mov in sti dec sub testb imul inc add adc movsl adc repnz (bad) jnp bndstx cld and lret push dec adcl jecxz arpl fnstcw int3 ja repz fimull gs adc cs mov lds jne nop and cmp cli xchg mov imul push sti and or pop xor xlat in jns dec shrb push syscall adc daa jge stc pusha xchg inc mov icebp adc xor xor aas adc in or cmp dec scas jne xor fdivs add jmp mov jge adc subl mov mov sub in add pop dec push adc and movsl mov adc rolb mov push jge or cmp mov add mov iret lahf mov fistpl jmp mulb call ja mov cmove aam add mov test lret mov ljmp xor lods inc adc rorl pop push sub mov ljmp pop jecxz push rcll mov jmp loopne adc negb adc mov es cmp ljmp test sub outsb insl mov adc pop dec sub cld push mov xor push out cltd add pop leave aas add adc (bad) mov lahf scas inc xor fs mov dec lods scas adc test mov dec in and std repz cmp pushf adc test cmc ret xor pop hlt cmpsl fmull or xor add mov mov adc iret dec jl mov xor cltd outsb dec xchg fs int3 cld sub xor mov cmpsl adc and push mov inc cld xchg add fcomps adc jnp es in mov loopne mov mov test adc xchg (bad) aaa int scas enter (bad) mov (bad) call packuswb scas and sbb cmp adc or pop lea addr16 stos mov mov int (bad) push mov fwait mov jmp adc ja inc test les and xor fimul sub add inc sub rolb hlt aam repnz in psubw or (bad) jae mov scas std repz cwtl imul xor in enter xchg call mov jge xor dec dec pop push es lcall int3 int adc lods push jbe dec cld mov mov xchg mov loop call xchg fisttp adc (bad) popf ret inc adc pop out out shlb push dec sti cmp loopne and pop and fstpl test (bad) repz and lret bound push push mov sub js imul lcall neg sbbl inc mov sbb rclb bnd ja (bad) ss (bad) inc popf xor sbb js mov adc loopne mov mov cmp sbb (bad) ss ret cmc fs xor repz sbb daa mov inc in dec in loop sbb fwait xchg or xlat sar clc (bad) xchg xor add sub shr movb push jg dec repz repz mov (bad) xor lea cmp jp push fstps test scas pop xor ficom icebp mov mov add xchg adc xor cld notb cli push push (bad) sbb cltd adc lahf add aas (bad) (bad) fidivrl adc daa xlat outsl adc lret mov pop je sti mov or adc jns lock loop fist dec stos mov clc inc adc std xchg mov sti cmp adc mov rcrb cmp popl (bad) pop adc push add lods sti adc cld rep adc jg and iret mov inc or adc xor adc fcomps sbb cmp loope jb jno sbb push ficomp jnp push jge (bad) adc sbb sbb lret mov inc or pop sbbl xchg inc mov scas sbb (bad) lcall test (bad) push cld (bad) pop mov popf inc mov cmp out xchg xchg out pop aaa mov loopne pop enter ret adc jecxz jmp stc pop nop sub push scas sub faddl shll cmpsl repz aaa push pop push or popf adc imul push mul adc out sub mov insb and in bound dec adc sub ss sbb xchg xor leave repnz pushf sub imul push icebp cmp or (bad) sar add mov xchg cmp bound adc push cltd (bad) aam push inc fldenv adc pop sub lods mov roll and or leave adc fcoml sbb mov adc enter addr16 movsl adc cmp repz out inc inc lcall push adc sub das adc addl pushf xchg bound int cvttpd2pi psubd adc rolb pop in jecxz dec sahf lods pop pop imul ss nop aaa jge or movl (bad) sbb sub cmpsl pop (bad) jp cltd jae aam loope lock cmpl mov mov xor fs ret notl popf ljmp xor hlt rol pcmpgtd adc xor push fnsave adc out lock jecxz mov cmpsb lea ret add sbb adc out pop arpl fistl jle jge adc pop cltd xchg negb call bound sub cwtl push dec adc xor lods pop jae gs adc imul or inc lret fadd dec int mov or imul popf or dec xor xchg cmp in imul or nop lcall lcall xor rcrb les xchg int3 xor or pop dec cmp sbb xchg mov jecxz mov cmpsb jnp cli inc stc inc adc fisttpl mov jecxz jbe cmp adc in sbb push sahf pop jne mov and adc sbb shr jg,pn dec das or adc add pop loop adc stos pop inc adc int3 shrl push mov mov punpcklbw rclb pop stos cs cmp cmc fisttpll pop popf adc inc lret lds (bad) rcll outsb pop mov adc xchg in or xor xchg pcmpgtd mov cli clc dec adc dec add repz dec fimul add clc and add fidiv adc jae mov adc sahf mov adc inc (bad) inc les adc inc or stc bound ret loope (bad) enter adc lret pusha xchg fcoml lods sbb jb cmovo ja pop pop jmp mov jne cld xor or (bad) xor lcall je mov cli or adc and push xor inc aaa add fist inc cmc loope addr16 adc dec out jne lret inc push push pop mov xorl adc xor cmp adc lea adc stos loop adc jp or and inc das jle inc adc cmp lock mov les fcompl mov adc stos pop dec jp xchg icebp (bad) add fstpt adc fcompl adc movsb inc lods mov jnp fcomps adc shll push lret stos jae ds cmp adc push rcrl pop in adc or nop mov aas cmp in fdivl adc (bad) imul adc xor xchg dec je xchg jno adc adc cmpsb lock xchg or movb fistpll cmp jb adc dec jo aam fldcw add mov adc dec xchg mov (bad) mov push xchg mov (bad) arpl or scas clc sub push daa adc (bad) push push sbb es and sbb imul fdiv jle mov xor jae adc add movl jecxz mov mov loopne adc inc orl push jno adc scas add into pop adc inc inc inc adc cs clc sti push imul cmp mov sub or dec xlat adc mov xchg (bad) adc mov or ljmp loope ds jp add push outsl movlps xor (bad) xor push add jnp xchg jae fnclex fdivs test adc scas enter ljmp add pop cltd adc fiadd adc adc mov adc addr16 cld pop sub js and mov divl lret sbb cwtl xchg push adc or mov mov sub ss fdivl pushf mov sbb adc mov dec dec adc mov push adc mov adc and adc mov aad shr lds or and incl sti fidiv lds inc mov pop dec out ja mov lods adc in js inc (bad) adc into scas jmp xlat lds xchg and xor jl std jbe dec and sub add and xchg sbb repz pxor ror mov mov dec cwtl fs adc jnp fcoms push dec int jmp pushf mov (bad) (bad) pop std adc stos push mov and jge mov or rcll mov pop xor add cld js fwait shl iret leave cmp mov nop outsb stc adc push mov clc jecxz inc pop dec and adc sbb mov adc loop xlat mov pusha xchg mov mov je lea sbb push adc push aas repz nop mov mov ret in je jle or pop pushf cltd mov mov pusha lahf push insb jnp inc aas mov mov insl out pop mov xchg xchg test dec pop (bad) popf adc test cmp mov idivb shrl pop adc xor jg aad dec imul outsb jge jl pop or and aas xchg (bad) out insb or adc movsb loopne push inc dec fsts loope shl je std adc mov shll inc stc sti inc imul sub sbb jl or fbld (bad) int3 push (bad) mov adc out stos or ja sbb clc aaa (bad) (bad) adc adc push pop repz dec jae adc repnz cs xor mov stos adc add call cmpsl mov inc push add movsb mov adc sbb popa cmpsb cmp stos xchg mov rcll (bad) cmc lcall and cmp je adc int3 pop push std xchg insl mov (bad) sahf jecxz sbb and cmp or aas adc out mov idivl mov lret (bad) pop dec and add fdivrs fild push sahf mov mov sbb sti adc push out pop push jecxz das sar jo adc adc stos adc in movsl adc xchg or (bad) les outsb xchg add jo inc mul mov fistl inc hlt inc xor arpl xor cli inc sbb lock das dec cmp jecxz push jl xorl mov out jbe gs imul daa mov stc mov sti aaa lea lret cld mov adc adc mov push adc sbb mov in fwait mov adc (bad) mov incl das and or test fidiv cmp cmp push fcompl mov imul test mov or out mov xor (bad) in pop or mov test test inc mov data16 fsubs push movlps movsl sub daa aam mov and sbb dec (bad) fcmovnb adc push pop mov fwait jmp push xorl pop cmpsb leave iret pop rcl inc rcrb mov jbe xor inc push loop add lods add jle xor adc and adc fimul adc pop in hlt mov add mov adc dec nop mov fildll pop mov xchg leave jo out jbe xchg les fcomps hlt and adc mov test adc push xor ljmp (bad) inc cmp movsb push adc cmpsb orb stos jo xor cmp jbe xorps xchg inc or xchg or add jg push push cmp lcall in jae adc jne sbbb out push repnz adc enter mov test cmp fidiv mov xor pop mov push jns push and cmpsl divl pop cmp incb xor fs dec sbb pusha icebp cmp adc mov mov xorb lock das mov adc (bad) mov mov jmp nop and adc sbb test popf hlt adc xchg jne hlt add xor lock mov jno adc insl (bad) mov xchg adc nop inc mov adc jae shlb pop lret popa rclb fsubs xchg fucomp adc add and cmpsb adc and lahf xchg push je jnp lret adc cmp adc cld xchg sbb ret scas xchg mov pop cltd cmp (bad) adc test push cwtl out call jne mov adc xchg jp imul hlt leave dec adc (bad) pop mov (bad) into pop xor mov mov call push aam clc mov adc jmp adc sub jo fistp outsb loop adc test mov jnp popa inc add cltd in pop loop in push mov (bad) sarb sbb adc nop inc into rorl test les (bad) xor (bad) stc in (bad) mov rclb jmp cmp adc sub test sarb insb xor adc mov scas pop inc scas loopne mov cli push lea add mov das xorl push dec sbb mov adc scas cmp cmpsl jae sub xlat mov dec iret and (bad) stc lods jl in pusha lea clc add aad adc insl push int3 jae adc fisttpl mov sbb mov push insb xor adc and fnstsw mov dec hlt xor jecxz das mov fs sbb (bad) cltd gs mov pop adc adc sbb lock scas xchg nop or add in sub xchg sbb lea jno repz mov or (bad) hlt adc test jge lods inc sub adc push push stc hlt fcom mov xor pop mov dec daa dec adc push lea jge pop and mov outsl adc mov mov mov out lods jo rolb inc sub aam jp and test xor inc sbb fcomps mov adc push cmp adc and add add inc sbb inc mov mov cmpsb inc xor mov rolb xlat daa cltd sbb repz (bad) sub insb jp mov adc pop inc or xor in pop adc dec sbb dec adc cld sub aam std push adc cli cltd lret adc in jne xchg xor ds and and xchg dec jno sahf pop or xlat pop dec in add mov xchg inc xchg shrl mov mov ret adc repz xchg fsubs sub es xchg adc bswap mov jp dec sbb adc push inc inc repz and or outsl dec push adc mov addr16 cltd dec repz xchg cmp mov scas popf sbb mov mov or stos shlb mov dec sub scas or das adc out fistl nop xchg dec ret or shll adc pop add lcall mov repz xchg aas mov mov sub lods out std test popa outsl dec mov xchg fisub mov es cmp fisubrl adc fcoms imul mov lods movsl or rorl lea pop adc notb pop jno dec mov dec inc mov jnp in divl mov shlb call (bad) push repnz and cmp aaa mov mov iret rcrl (bad) pop lret adc and bound xlat or adc xchg (bad) and popf ds pop dec pop sbb push out test lret outsb jo in push adc loop lret nop add and rclb pop inc shrb (bad) dec add pop xor or jbe adc int test aas sub rcr sbb mov adc ja or adc mov adc sbb inc dec xchg std cmp (bad) mov lret mov ds xchg icebp daa adc cli in sub jecxz mov jb push scas add jg push mov in mov sbb mov cmp loopne cmpsb or pop jno pop lock jge lea lods mov adc loopne mov adc fs adc dec popf and adc sub iret jne inc adc cmpsb in pushw mov movsl insb mov mov mov (bad) repz jg sbb adc daa jmp or fstps push cltd pop adc mov cld enter adc movsb js dec je adc (bad) pop push es adc and push mov and lds add and ret test adc jmp fsts sbb int (bad) adc addr16 sub orb push bound das lods ficom aaa ret mov adc inc lahf dec call adc xor push movsl xchg inc push sbb adc sbb sub mov mov int3 out dec mov push push cwtl repnz mov stos out insb cmpsl adc test cli cmp xor sti jae fcmovne sbb push cmpsb outsb dec jle adc test xchg or ret adc (bad) xor xchg (bad) mulb sbb adc fwait rorb mov adc fisttpl pop xchg dec clc adc push andb addr16 mov mov xchg cli ja ss add in cmpsb pushf mov mov fmull push ret jmp mov cmpl push in inc adc cmpsl popa jge adc lea lret add pop adc int3 test lcall icebp sub in add lods mov js sub jnp xchg adc mov adc call roll (bad) xor mov sahf hlt repnz cwtl or repz push and inc sbb sbb fsubp mov ljmp into push adc pop (bad) ds rclb test rep add cmc shl cmpsb or fiadd int3 dec roll xlat push fwait mov mov mov fxch add push pop sysexit adc adc enter xor jno pop sbb dec das in dec adc mov add in jnp repz dec pop loopne test or xchg adc mov sub fs adc out inc xchg xchg sbb dec adc and punpcklbw lock jle mov fcomps add mov les ficoml sub aaa xchg das mov mov and pop js push ljmp dec mov punpcklwd sbb in cmp mov rclb (bad) and xchg pop mov adc test jmp andl mov insb push sbb (bad) xlat subb xchg shl inc out adc gs push adc test sbb stos xlat jbe aaa adc push arpl cld inc mov loopne adc lret mov and jp xchg lds aas inc cli dec inc fmulp (bad) repnz mov mov cmpsb mov add mov push imul sarl lret jle xor jb sub adc lea popf lcall adc fcom xor cwtl stos mov jge daa shlb inc and fs jecxz pushf loop fstl push pop push mov pop add adc adc adc inc mov adc dec dec (bad) xlat mov cwtl jae imul loop and adc outsb lcall popa jg,pt lock cmc push xchg movsl mov gs push lods mov out lea test lods lcall add adc mov push adc scas add aam cmp in push jg adc mov push adc pop xchg fildl repz adc jl leave inc dec ja adc int3 loope mov shl insb pop xchg push xor adc pop cmp fidiv nop rcrl adc mov or scas cmp push pop and dec cmpsl shr or inc dec push popf ljmp jmp and cli pop jge scas add nop add push jmp int3 xchg adc or jle rcr jecxz aas jmp or test out dec jo add nop xchg lcall pop int adc ret call adc cmpsl imul out adc jl mov or ret nop sbb fistpl mov cmc into mov (bad) int xor cmp or cltd bound mov cld les dec mov mov xor push xchg jp jns ja dec clc cwtl adc push ret dec add lahf data16 out jle cmp mov or jns nop push pop sbb sbb push xor xorl insl rcl outsl push cltd push inc mov ja inc sub xor adc add jo es mov aaa in insl fisubrl mov mov push jg cmp xlat lds dec lods adc out test insl xor sub (bad) test popa mov mov std dec mov cmp adc push addr16 das out adc push jno mov pop in js and addr16 stos or add add adc popw or (bad) call in (bad) sbb adc jle aad lods dec add out insl (bad) adc iret push add inc (bad) hlt push pop mov js xchg inc inc xor xchg jmp les cmp jb js popf pop adc inc out fsub dec out or je fs fimul dec int3 push (bad) jp scas adc and orl fs push fwait sbb adc mov jecxz call mov xor sbb popf cltd dec dec dec je std cmc jg or mov fistl inc pop cwtl add (bad) mov das mov rcrl inc or pop pop mov repz (bad) and push sub adc xor aad loope mov cmp and int3 pop rclb daa out jge dec or popf adcl ljmp nop push adc dec mov es stos push pushf xor mov aaa and outsb xchg adc mov fs cwtl das adc dec cmpsl ljmp mov jbe test sub or lock rclb add stos cmpsl cmp (bad) jne inc xchg std mov stos cld (bad) or mov mov cmp or push in mov jbe ficoml pop ljmp dec sub inc pop push sbb pop cmc inc pop adc into rcl cltd pop pop fnop je imul fistpll bnd movsl cmp std xchg nop ds lock loope aaa clc out cmpsb adc jl and add adc xchg mov es cmp int3 fnstcw mov adc adc gs ljmp out cmp push in jle fcomi imul jb adc gs out jp lahf cmp add or xchg stos mov aaa fiaddl icebp lret adc xor adc (bad) pop movsb xchg mov decb xor mov cmp pusha subl adc push cmpsb or jp adc or mov addl jns push cmp pop test ret cld popf dec mov and out fnstenv mov mov lods adc push mov xor lods xor jl or pop fldt adc add adc ret sbbl xor int xlat jg push adc rclb push sbb mov cmp pushf adc (bad) xchg mov out repnz mov mov xchg mov xor sbb push mov insl or sub cld std adc mov jmp jne adcl pop ficom scas xchg mov adc icebp in inc sub xor mov cmp movsl (bad) aas or push dec pop jno mov xchg addr16 cmp int sar push push add mov mov mov leave data16 sub cs movb sub pusha mov sub push in cmovs mov test mov das stos add sahf fs mov lea in ret std push mov push mov mov push push dec out dec inc push notl fstpt mov or adc push scas je pop adc cltd inc inc push ss movsl lea adc out inc lock sahf je jo aad or push xchg cli decb adc adc fsts das jle pop adc (bad) enter es shrb mov sbb aad in repz shrl and mov jne sbb mov out dec sub adc xlat push stos adc sub pop adc pop enter mov mov xor pop movsl sub add popa xchg add mov pop adc int pop repz or xchg sbb adc sub adc xor aas xchg cs test sub jo pop dec inc mov dec dec stos pop mov cltd nop add adc mov inc adc mov ss mov pop ficompl push or push sub mov sarb insl mov fsubl adc mov mov cs (bad) dec or das dec pop cmp jl add xchg fbstp mov add call inc jmp aam lock xor inc or xchg adc adc adc pop xchg rolb ret or lcall aam mov daa loopne aas mov pop subl jo repz mov leave adc mov mov sbbw add adc dec mov adc jae ds mov push orb pop imul cmc adc mov or pop int adc lcall or adc aaa adc mov sbb adc in jl xchg mov into (bad) sbb push roll test adc test mov rclb or cmp sbb pop adc xlat js inc sub xchg mov sub pop test dec adc mov nop cmp rcrb out adc xchg add repz pmaddwd push hlt mov inc pop push xchg insb and jne jge vpminub dec or adc adc xchg gs xchg bound cmp xor icebp in mov lcall adc or and aam adc mov (bad) sbb out aad popf in mov mov nop dec or or daa sahf shrb sbb push test or adc or xor dec push adc cld arpl adc mov nop inc sti sub movsb outsl xchg xor adc jno leave daa faddl (bad) mov into adc fbld clc inc daa lock adc mov jle and call sub es pop jle notb add sub out mov lcall pop stos adc xor ret push mov adc ret ss adc push and pop cmp and int inc cmc fistl stos out or push lock int3 shrl sahf pushf ljmp pop or xor and lcall adc pop sbb push pop sarb lods in std add adc and inc mov ljmp lcall mov mov andb js icebp adc mov sub adc aad dec int aaa nop (bad) dec mov xlat sub mov add mov aaa popf sbb adc shrl mov stos jo pop fisttpl jmp repz (bad) jae sbbb adc incl int pop dec or clc and roll mov cmpsb inc rcl cmp push inc pusha mov xchg sub cmp imul mov fneni(8087 mov mov sub fistp sub pop cmpl test pop leave adc xor jl adc push add sub gs daa lea (bad) xchg rcrb adc mov or inc jmp sbb dec (bad) stc jno mov sbb cmovge xchg out cmp les add js push lahf pop les mov test sahf jns fadds out dec addl xchg aam pop jno pop fbld inc adc cwtl cmpsb es (bad) sub add inc dec mov push (bad) std jg (bad) xchg test mov mov stc cltd jge inc adc outsl imul adc out jb hlt fstl xchg push jne lds (bad) jmp (bad) pop fs xor mov sbb js jge jbe cmpsb loop divl out jno mov adc xchg dec gs or repz mov jle out jge repz mov in ds pop or cld test mov roll mov add repz xchg jle cmc dec add pop jmp fldz mov aam mov cmpsl push xadd test in xchg jb cmp daa mov fwait push sbb data16 push adc rol pop scas ret ja (bad) mov adc sub mov jle and call xor stc add mov adc sub mov adc cmp mov std outsl mov and push (bad) test mov jmp mov jnp adc inc insb enter cmp sbb and push (bad) pop or adc inc iret aaa lea mov cli xchg leave sbb call mov mov and add iret sub adc sbb adcb outsl jp fs rdpmc mov sub xor or add ja outsb sub xor jbe stos (bad) push mov dec push pop sub repnz sub or test dec xor adc dec add adc sbb dec aam mov (bad) (bad) jo (bad) leave mov sub jmp mov adc or adc push pop pusha inc xchg test mov imul sbb imul frstor adc testl clc shr mov mov popl pushf sbb adc repz xchg pop bound cwtl adc imul scas xchg jnp adc xor fwait pop adc mov pop in outsb scas push adc ds cmpsl loope lret and mov rcr mov jns gs loope cwtl repz aam push imul lds mov adc inc mov std xchg adc rcrb adc lret loop add int3 sub out mov xchg daa in or xchg arpl xlat mov xchg int3 sbb in jns gs mov or icebp sub int adc inc addr16 enter jbe lea or and xchg xchg xor je pop pop xchg or sbb hlt pop push inc adc mov mov sbb leave jge dec jno mov jmp pop and adc mov add sti fstl cmp (bad) (bad) xor jp int mov inc adc and push add cmp inc js mov shrb (bad) and or jnp fwait adc adc sub fnstsw pop stos fiadd leave pushf inc sbb orl loopne pop mov mov adc into adc cwtl aam loopne outsb xchg mov fmulp aas incb mov mov stos xlat call into push dec pusha adc rol cmpsb repnz test dec add mov cmp cmc lcall and mov test movsl jo sbb (bad) lock add and jbe mov add outsl insl jae call fistl scas adc xor adc sbb xor cld lea adc jo mov mov subl popa push mov ds push aas jmp leave dec adc xchg mov shl dec adc pusha sbb int sub out cmpsl stos adc sbb clc lods add int sahf or adc jmp inc sbb mov popa fmul repz iret (bad) pop out mov pusha or pop xchg cltd mov pop lcall adc mov stos add (bad) xor ficoml cmp aad push adc and mov sbb mov adc sbb cmc push adc (bad) add add cmpsl call or aas pop xor jne test aam into repz inc mov jmp xlat arpl pop xor ret enter mov int push pop loopne imul push xchg adc jmp in adcl (bad) cli lcall dec cs dec mov xor pop ficompl sbb pop int push adc sub (bad) mov dec push dec dec adc fnstcw lea mov imul out mov scas scas add lret dec adc or cld adc jl pop test je jp cmp adc add fbstp shlb aas and sub xor xor cmpsb or mov hlt scas (bad) add shr push mov adc xchg imul add jno mulb or out push test mov ror cld adc stc dec inc adc subl cs mov in adcl inc jne cltd add mov adc mov inc mov xor dec adc pop loopne xchg jae adc (bad) call decb sbb or inc pop adc popf psadbw and je sbb cwtl adc cmp and scas or neg adc sar mov sbb adc mov and or clc sub ss rcrb jg inc jbe pushf xchg adc into xor (bad) lods cwtl push fsts cmp call add xchg pop add adc dec adc aaa xchg in xor shl mov mov mov xor das or outsl test sub push add or int in lds outsl xchg loop stos dec shr and insb mov jne int xor (bad) jb add dec add or mov sbb pop cmpsb adc mov subb xor scas test adc jle xchg adc loope imul jmp adc ljmp sub push inc adc js inc adc push cwtl mov stc rcl sub adc outsl shl stos pop adc xchg mov pop or adc or hlt adc aas imul out jnp lahf xchg ss jp gs rorl pop pop adc adcl xor xor inc inc add inc movsl aaa ds cmpsb adc adc mov out insb mov lods xor les mov dec push push xchg in (bad) clc adc cmp push cli add jo cltd inc and sbb cmp outsb add pop mov ret pop mov adc popa jle adc xchg aam add adc dec jl call cld mov iret inc mov xchg fsubrs repnz and andl jl mov ret test pop push cmp push cli pushf cmp and repz xor in push adc mov cmp or jle xor or xor repnz and popa add ret mov (bad) jle dec icebp pop add sbb adc add jg repz push fnsave mov add outsl push mov mov lods adc mov pop adc jae rcll dec adc adc cmp add adc inc lahf mov dec (bad) icebp jge and out xor lea xor int out outsl in add popa or loopne out into xor sti push adc and cmpsb xor xchg jmp push rcrb jp mov mov pusha mov add xchg mov pop adc je push inc pop or iret jo,pt inc or jmp (bad) sarb rolb adc je dec enter adc jnp popa adc dec xchg scas rcr and sbb mov or jb je sub push fsts inc add testb adc mov mov mov push mov subb scas xor and test adc or das or in mov pop dec push adc push mov cs daa pop mov mov cmp xchg stos mov dec push lahf lcall jns (bad) movsb dec ficom mov jb adc out cmpl clc push in xchg adc dec test jl xchg shll jnp push jg add jecxz fidivl out les stc (bad) loopne pop or sub fisubl adc sbb fdivrs sub cltd mov iret xchg mov xlat pop sbb cmp adc fisubrl adc sub out cmpsb mov adc xchg cmp js jns adc cmp adc (bad) movsl push mov out adc sbb inc fcmovne inc xor ss aad sahf pop cmp or pushf test dec cmp cmp enter fsubrl xor push pop icebp adc iret and into adc sbbl lock ficom adcl movlps or out shr repnz add mov test imul adc lahf cmp test push or repz xchg rorl ljmp icebp dec test adc ret iret cmp insb cmp sub or mov or xchg and dec fwait sub insl adc dec xor inc push lret dec int test pop int3 sbb adc xchg add xchg add or pushf mov pop es insl mov sub nop cmp mov fsubr inc lahf jmp push fildl and and mov pop inc pop (bad) dec test and insl mov ret icebp ljmp mov mov fcoml and fwait pop (bad) adc popl adc popf pop inc mov mov adc scas dec push es repz sub mov jae das xchg fistpll negl inc dec lods jmp push insb xchg dec push stos sbb dec sar insl adc pop lods pop push out mov fldenv and push xchg and or ret adc mov dec in mov push ret sahf dec pop cmpsb fucomp loop hlt test jns lea scas sbb jp pop test movsb fst adc adc ret fmull adc cwtl testb adc xchg adc es cmp add stc xor test icebp mov mov push pavgb lock out fsubrl (bad) imull push fistpll outsl push cltd rdtsc mov sbb push inc inc jg cmp sub addr16 nop adc mov or je sbb cmp xchg adc mov (bad) es outsb xor repz inc add aaa popa icebp mov test (bad) enter cli mov pop mov and in add mov adc mov outsb jb mov adc jle (bad) xor (bad) adc stos and std xchg addr16 push rcrl adc sub push je (bad) imul fisttpl jl adc gs dec xor mov in in fisttpl mov stc (bad) pusha or cmpsb inc adc cmp leave and popa repz cld out and or sbb ret movsb (bad) daa mov adc jge mov pop dec adc pop mov adc cmpsb int3 jecxz mov xchg sub fisubrl ja in or xor into cmc cmp jl hlt or adc lahf dec cs jo dec cltd into xchg loopne je cmp aaa mov adc into fldt mov dec (bad) lcall (bad) call push xor sbb cmpsl es jbe (bad) xchg add stos push int loopne jo push mull xlat sbb aad mov insl push jecxz and stos adc pusha adc fdivrs cltd jmp daa adc pop sahf (bad) je mov lahf xor add test mov sbb inc and add mov out mov lds adc dec pop outsl push jge adc dec mov mov ret loope shl dec int sbb ret cmp xlat (bad) mov jmp sbb mov mov pop dec adc insb lea jns pop inc adc test popl fs hlt nop inc and lret sub lods mov mov mov scas ret loopne (bad) out push icebp adc push dec pop adc mov mov shrb (bad) fistl cmp xor mov clc pop imul rcrb cwtl adc cmp das or xor cmp or imul popa pop add js jo xor inc push sub cs outsl xchg or jno inc adc sub adc jg xchg lods dec inc fbstp movsb pop test and adc lahf jae lods mov movsl bound adc mov and adc xchg (bad) out shlb aas les gs int3 jno sub in add pop cmpsb adc addr16 jns scas dec cmpb xchg or test cmp stos push mov add dec and popa int3 (bad) adc lock cmpsl jnp mov add jo in outsb les adc fnstcw das xchg scas sbb sub mov adc data16 adc sbb xchg jecxz sub shrl xchg cwtl mov das repnz lods sub mov fstps pop bound into xor push (bad) hlt mov (bad) aaa adc add add divl jnp sahf fnsave paddusb fcomip cmp or std adc stos ret sub mov pop mov mov adc out in cmp xchg pop adc enter and adc stos push xor clc leave xor popa das jmp xor jle add sysret pop repz std fsubrl or test ret (bad) sub dec add adc shlb cmp ds (bad) movsb adc nop mov lea dec pop pop push lods adc pusha pop push add jge in jg iret sbb repz clc cltd xchg jb pop or mov fmulp call loop adc push adc jno aaa mov add lds push sarb adc or dec fimul xor mov push add sbb popa outsb or out xor inc mov mov push test outsb (bad) add adc sub inc cmc mov or lods push or mov sub cmp add dec adc or sub dec xstore-rng cmpsl (bad) sbb adc sub jecxz adc or pop rorb andl xchg mov mov out adc jo rclb pop (bad) stos rolb test jge pop adc loop fwait sub mov and sbb add into iret scas (bad) mov push adc inc mov mov xor xchg add and (bad) test mov cmp push sahf pop out adc dec les add adc push jne adc and xor and cli dec jo cmp addr16 cmc pop stc inc xor fs repnz xchg lea adc xlat loop insb xor mov and mov push adc jne mov fisttpl pop (bad) mov das mov jmp xchg lods and lock lods pop imul ss (bad) adc repz movsb mov mov push mov xchg (bad) and cld xlat pop sbb imul xor jle adc aas mov adc (bad) enter aaa and pop adc std cmp int3 out cmpsb (bad) mov fwait pop lock nop lds push or mov xchg or mov enter call js out mov mov loopne add pop add mov (bad) jo mov sahf adc loopne insb adc push sub xor mov or dec shl scas dec fnstsw mov jg cli in and nop or dec out xor pop inc fwait mov push ret out adc inc mov xchg in call xor pop enter addl dec adc into sbb xchg xlat mov cmp pop insl stc or jmp loopne out mov inc adc pop pop movsl test mov mov sbb xor xchg adc (bad) or sahf jmp add xchg sub arpl test mov lahf loopne adc mov jns dec mov sbb pop flds inc push pop sub sbb stos push sub loopne addr16 (bad) dec out xor lock jnp pop (bad) push pop ja mov or and stc test push xor cmpsl push xor cmp (bad) mov xchg cwtl scas pop adc insl (bad) call adc mov jo adc jmp lret pop (bad) xor pop or dec fucomi repz imul and sbb xchg lcall adc jb adc int3 ja or mov pop loope adc or xchg sub mov pop adc sbb leave adc dec pop adc mov cmpsb pop mov stos in or cmc js add les adc lods lahf cli cwtl icebp sub mov mov push fwait nop add repz mov or stc repz xor mov xor or movsb out stos cmp lds and xchg stc mov imul or adc ljmp insl xchg push imul js fwait sbb adc test cli stc mov dec jne jecxz nop cld jae (bad) repz lods lods dec movsl adc xchg (bad) cli xlat (bad) jge xor stc xchg cltd outsl (bad) repnz sub popa jae lret adc mov jne cld sbb adc xor gs rol jb push aas adc mov ljmp lret adc mov sbb or mov frstor test inc sub adc and hlt xchg arpl ret stos and pop pop dec test jecxz xlat sub cmp jl hlt pop call mov adc jg test repnz jns cltd sar mov push or fcoms or jns mov rorl (bad) sbb cltd inc add loopne or mov stc sahf mov pop adc pop push (bad) inc daa adc (bad) sbb mov ds adc xchg adc cld cmp adc es jecxz sbb push aad add ret and iret mov (bad) in shrb cmc adc mov imul out xor lods hlt xor add mov lea fwait and jo pop or mov aam nop cmpsl jne add and test outsb daa adc xchg cmp fildll pushf test xlat mov (bad) ss cs push add les xor adc (bad) mov je adc adc aaa ret test flds fisttpll test adc xor adc inc out out in test adc nop repz pop jl add call jne mov fnsave into mov jno movsb mov xor adc cli ret pop mov je iret mov insb jo ficoml pop pop (bad) xchg lds mov leave out push cmp lcall inc xchg les movsl pop lcall sub xchg adc mov rcll jae lret inc xor (bad) adc jmp loopne loope jbe cmpsb call mov dec bound insl fstl cmpsl fsubs mov rcll or sub inc add jnp adc dec add (bad) rcrb sbb mov dec sub dec test movsl inc push jae mov aaa in popa cmpsb arpl nop ret fildll scas inc test stos jno outsl xchg or or adc xor mov add (bad) push aad je pop popf clc adc test jnp sbb jbe movsl hlt sete xor xchg inc shr add jno mov leave scas sub les sbb popaw sbb shll push or adc clc sub rclb (bad) mov rolb or sbb enter ret push stc cltd cld mov fsubrs dec rcl adc fnstsw mul pusha fsts fistp pop sti sub scas adc imul loopne aad xor adc sbb xor jno adc pop xchg xor (bad) gs enter adc aas lods fild xchg int dec adc dec (bad) loopne test push xchg cmpsb movsb mov cmpl sbb push mov adc orl pop jo dec (bad) div push lahf adc (bad) fbld pop push inc idivl js jae adc repz jle or add int jg mov ret or into hlt and and xchg lret jb scas out xchg cmp sahf ucomiss adc mov in push or mov xchg xchg xor (bad) data16 sarb decb xchg push inc fsub pop adc jo cmp sbb adc aam jl (bad) xor mov leave mov push adc arpl jo or repnz dec sbb ret (bad) loop jg jmp cmp pop iret sbb cld mov mov mov push inc mov repz aas sub mov pop lret jg and cwtl mov sub cmp in or fnstsw mov xchg pushl pop or push mov sub in cmpsl adc xor lcall imul xlat push (bad) mov lahf cmpsl repz xor mov xor xchg popa xchg push adc push pusha dec pop sarb sbb or aam adc ret mov or lods sahf xor movsl test inc xchg dec cmp jge and jecxz sub popl mov aaa mov xor adc cli enter inc fist aad and adc and popf xor jge adc sarb sub mov (bad) add sbb adc mov cmp div or push cmp loope jecxz insl jmp adc adc mov js ret in xor push xor jnp or cli jno lods mov imul lods repz insb sub fnstenv sub mov leave adc xchg mov mov dec push xor mov add dec fwait sar push ja add lahf dec or xor xor adc add les mov mov and movlps push (bad) cmp adc mov aaa jl adc or scas xchg sub sub test insb dec ret std adc add xchg sbb adc pop in sbb mov (bad) sbbl fmull into (bad) sbb mov inc jo (bad) (bad) xor jge lds ret aam push sub lds (bad) mov scas dec loopne add adc adc cld test loopne mov cmpsl imul pop rep sbb adc mov ficompl sbb adc aam sbb lret adc cmc enter or outsl adc aad cmpsb dec xchg jns repz dec shlb cmpsl inc or test cmp in add (bad) cmp rolb adc dec ljmp mov and xlat push xchg cs mov sub adc lods fwait adc dec cld cmpsl adc fnstenv cmpsb insl jne adc aad inc push stos div jp std jge iret stc or mov and (bad) repz jno xor je sbb pop add jno ficoml xchg dec xor mov pusha lods frstor prefetchw ja lcall leave mov ss jge out add gs pop adc mov inc hlt stc mov ljmp cmp out jne movsl adc push insl xor jmp inc rolb sti adc out cli adc outsl or mov lock adc inc xchg (bad) jne scas fimull adc lcall add dec xlat jmp leave push stos daa sti xchg shr or fcoms adc inc sbb imul pop je mov inc and pop push or push repz cltd sbb out (bad) sbb enter in mov test repz xchg pop cmpsl jb mov fnstsw cmp mov scas adc jle sbb jns and mov das add mov push int adc test xchg push insb xlat repz js test mov repz adc mov sub adc (bad) lods xchg adc mov into push mov loop mov jno jecxz push adc mov adc sub (bad) fsubp nop lret or xor and inc or repnz add inc mov push xchg imul adc scas add fmull (bad) jl inc sbb les add lock jnp pop or rclb fs xchg ficompl (bad) test jge inc lcall jae pusha jb repz mov ret mov jl adc je mov sub stc inc nop sub push and cltd xchg test repz rcll aad mov lock push mov mov adc addr16 push jbe xor fmuls xchg sub push inc cmp enter or pop mov push ret add insl adc cmp inc test cmc push int insb jmp pop (bad) lods lea mov loop lods mov sahf pop adc or adc in xchg xchg (bad) jns adc mov adc mov das arpl call jno sbb out add pushf cwtl (bad) das xor adc pop push daa scas cmp xor clc push bound xchg adc push mov adc add das pop adc int3 imul lds and fldcw cld sbb push sub pop mov orl push dec mov icebp das push pop (bad) adcl and movsb add push pop inc insl ss bound cmp push and adc in stc add ljmp jns clc repz xchg fist mov lock push ljmp cwtl in call rcrl fnsave mov lahf xchg pop push sub addr16 fbld pop jp outsb pop lcallw cmpsl (bad) iret adc mov jl fdivr mov gs faddl sbb adc movsl pop mov cmp (bad) jge in ljmp aam lret adc xchg cmp dec lds mov push jg fninit dec data16 xor aaa inc imul add adc dec cmp adc adcl and cmpsb adc hlt or jne (bad) fildll rclb mov mov push mov clc dec stc adc mov fistl test mov adc fdivr cmp add fistpll or xchg fwait add pusha lock cmp sbbl adc and sbb mov insb adc add mov movlps sbb inc sbb adc insl sub xor ss adc call jno xor or xchg inc call mov inc lea mov or jp adc mov in xchg adc shr pop or je mov fildl adc dec mov cld cwtl adc gs jb daa adc cmp adc or fild aad lods add xchg (bad) mov add adc jae fisubl xchg pop rsqrtps xlat sti in pop in hlt je adc ljmp (bad) jle adc insb cmp sbb cs daa nop insl fcmovu cmpsb (bad) cmp rcrb mov aas or fdiv inc pop sub lret xchg adc push push mov cld mov push adc (bad) (bad) subl es enter rcll lds dec inc in aaa or jg out popw adc outsl ja push xchg add adc mov xor pop insb xchg sub ud2 cmc aaa (bad) jge push decl (bad) adc mov les popa mov push inc (bad) xor adc jle rorb mov inc cli adc popa stc pop orl test mov repz mov pop adc cmp push xor or push nop xchg dec xchg mov (bad) cmp dec shr sbb das sbb or inc sbb or roll and (bad) dec je pcmpgtd cmp ficom or les and repnz adc cmp (bad) lret insb rcrl mov loope lods or push push cltd in repz sub sbb xchg mov xor sub (bad) call or jecxz add adc (bad) xor sub leave (bad) xchg pop xor inc das or repnz mov outsb jecxz stc inc pop lods mov lahf hlt sbb call sbb xchg bound add (bad) lds adcl test mov rolb adc mov out imul jle add xchg out mov add jmp dec adc mov jns (bad) mov sahf aas sbb adcb in stos pop mov test adcl add lcall pop cmp bound pop adc push sub mov pop ss xor xorl (bad) or adcb stos fs jne cmp fdivrs in adc push adc mov cmp push xchg adc std notb popf lret sub xor xchg xor cli adc jb cmp adc hlt xor ss mov mov out adc mov or push das xchg lcall xor push mov cltd imul dec pop mov mov outsl sub sub and stos sub enter lds sbb mov jg dec add xchg je mov scas adc or or sti or mov add (bad) lock fldcw and push mov hlt push daa jecxz push stos or std neg stos ljmp and shlb test repnz std cmp push adc sahf jmp and pushf adc dec mov aam pop mov mov pop adc pop loope xchg int3 and lods mov std stos das jl lcall pop jge mov sub jecxz xchg add mov adc cmc add push (bad) imul or data16 adc inc jbe adc lods je test lret xchg add pusha adc pop adc (bad) jg adc cmp sbb cmpsl mov ss sti sarb fwait cmp ja mov adc sbb test rcrl cmp push pop cmp jno das xor mov push add scas pop sbb mov jmp scas stos out adc hlt mov sub cmp or fmul enter pushf movsb mov jmp adc je mov xchg lahf xor dec add adc jg cwtl dec xchg cmp popf imul add aam xor (bad) xor out adc mov aaa lods xor mov xor js mov jecxz,pt inc add sbb mov adc mov push mov and adc push clc dec je xchg adc cli lahf mov (bad) hlt adc xchg inc into inc ds rclb sarb inc mov dec rcrl mov mov pop push sahf and jno jmp sbb repz pusha mov je adc (bad) mov mov enter scas pop cwtl xorb in outsb or (bad) add xchg repz stos jne sub (bad) movsl je xchg adc (bad) arpl sbb pop sbb mov (bad) add pop test pop mov leave adc jge inc xchg mov (bad) xchg jle pop mov cmp into cltd sbb jnp xchg leave movsb pusha repz icebp fisubr push ja and mov push (bad) xchg inc sub les adc inc out ficoml (bad) fistpll bound add arpl push mov sub sub adc test lods adc gs pop roll adc xchg js popf shrb push dec dec add dec lahf sbb mov mov js scas (bad) aaa jp hlt add test mov adc mov test fnsave mov subl add cld jbe sarb push je pusha popa xor cld fcmovu adc and push adc lods ss daa int sub or lret repz cld xor aad adc jbe mov push ret adc inc insb cvtpi2ps stos pop adc jbe aam (bad) mov movsb mov gs lods ljmp adc mov adc or iret adcl lock stc dec dec repnz mov pop push scas lock adc repnz xchg jbe stos sbb mov fdivl (bad) fucomi jno call pop push mov push mov add es or jmp adc dec add daa adc and xor mov out xlat cmp cli dec (bad) mov fnsave clc inc lret addr16 arpl xchg adc dec push push adc sub add inc popf dec data16 push push mov xor bound jae mov sahf clc or fs sbb adc pop movsb cli push jne mov dec jge ljmp in adc push scas xchg movsl pop xchg adc adc imul push xor inc popa int dec cmpsb adc jp dec adc or dec bound xchg les xor loopne add jo jno fadd repz mulb sbb les push outsl xor in js (bad) mov sbb clc dec mov sbb adc fwait jecxz or rcll adc (bad) cmpsl std xchg leave fcoms sbb repz mov rcrl cs in cli push sub mov lock adc add mov movsl dec or dec lret mov xor sub jle hlt (bad) iret xor cmc pop hlt js mov pop add loopne xor or mov not mov adc cwtl lock xor rclb (bad) push mov cmp movb iret or sub lret dec adc popa push jnp pop jg test mov mov outsb aaa out clc jno jbe jmp fisubl cmpsb adc jmp (bad) insl repz and aas or cli or xor adc mov or jecxz adc popa mov (bad) je aad jmp xchg mov dec adc in pop call das movl out rorb mov lods (bad) mov in movsb add mov outsl cmp es xor lods lea fs xor and gs push dec inc xor cli sbb adc lea faddl adc out addr16 sbb or push hlt popf adc jp mov dec sub testl sub lock out and outsb mov inc das ret dec sti push daa out mov cmovp lods fmuls enter (bad) out pop mov pop dec out add outsl int add ss repz xor (bad) in lahf mov in mov popf daa imul icebp je xchg mov sbb pop jp dec pop jae jge int3 js push or mov pop adc push icebp mov adc dec cli add sub data16 mov add adc cld clc cmpsb mov xchg push lret scas adc dec pop adc rcr movsb pop jmp leave mov jg lea ud2 aas mov je sbb divb into or add mov pop pop xor adc push cmp fcoms inc sub or dec aad add and pop dec jl push dec adc enter jbe mov mov sbb jne aam std pop cmp add adc pop mov out inc ret xor add adc scas shrb adc add aam inc loopne adc mov jae jp sbb mov adc dec fidiv pop adc cmpsl dec imul xor out cld jnp push mov adc adc popf (bad) cmp mov adc cmpsb roll jne dec mov arpl sbb addr16 adc sbb pop add jo das mov insl adc xor xorl lahf dec cli lea cmpsl inc sbb lds or add mov mov insb (bad) lcall fwait repnz add hlt mov insb and insl mov gs sar jp push mov push mov sub outsl or imul xor test add ljmp fsub mov or adc xlat scas xor xchg xchg fbld push fdiv ficompl aam and mulb xchg and push cmp adc (bad) push push in mov jno mov dec push inc mov addr16 fwait lret leave cmp notb out jmp add imul lret pop fmul cmp rorl add fs mov xor add adc mov mov (bad) cmp xchg push jle dec jl sbb decb repnz add iret adc int ljmp xor or cs push xchg mov repz or or (bad) out lret inc cmpsb inc xor cmp iret mov add subl (bad) adc cmpsl jmp adc xchg insb jge fmuls stos inc and cmp jbe push (bad) out (bad) dec adc mov push cmp xchg mov inc adc jp fdivrs and adc in pop fwait aam jge adc scas cmpsl cmp fist cmp sbb adc ror xor mov pop outsb movsl sbb mov mov adc iret popf nop push sbb test cltd mov (bad) lods insb pushf movsl fisttpll pop jp adc repnz icebp fs loopne cmp int dec or mov adc mov sub jo in add ud1 add fnsave (bad) leave scas test xchg call jmp repz cmc mov and lret cmp ret mov xchg rep xchg xor push in or push xchg fisttpl sti adc mov sub shrl test pop outsb jecxz out adc jnp aad sahf cmp mov ljmp cwtl adc ret subb jae dec cmp repz sbb lea lcall cs xchg xor out jbe mov mov add push jp push xor js cs movsb mov add pop lahf rclb push dec jle adc mov fstl pushf adc sbb movsb push pop incb xorb inc cmp or call or mov movsb pushf shrb (bad) adc jp jl dec adc ja loop (bad) scas adc lock adc adc xchg mov push cmp jo call divb test jg add push xor xlat mov shrb mov or cmp xchg push and jmp push test testb sbb fmuls or (bad) in pcmpeqw pop adc jge adc in fcomip and and sbb pop repz dec xchg cmp push push addr16 rol iret or jg jne nop pusha movsb mov mov movb jnp adc (bad) xor dec movsb or xchg mov push or jmp popa lret add shlb (bad) xor rorb lods pop xchg or xor out or ljmp or cwtl or adc mov test pop adc dec xchg jb jmp out divl imul ret push sub scas adc test inc sbb jb repz frstor ljmp push call loopne cmpsb fnstenv xor ud2 in xor cwtl sti adc es mov pushf inc adc in in lret adc aaa leave push jno push adc push fnstsw add push and sub pop xlat push sbb pop mov adc and jge out pop sub push addr16 in pop loope rcl inc ss add and ret decb sub and cmc in call ljmp adc jne flds adc mov pop mov adc inc adc mov out adc fs cmpsl mov and mov xchg adc push add cmp stos in scas sbb xchg cli (bad) xchg sub adc adc loope out xor adc adc fmull inc dec inc sub adc xchg inc cltd leave lea loop mov js idivl je ja rorb mov jmp call lea (bad) (bad) les add (bad) or mov sub dec popf lock rcr repnz pop dec push sub aam pop add inc pushf dec fadd xchg adc gs jne xor pop in xchg pop fcmovnbe and adc sbb (bad) out cmp pop outsb bound popf mov loope leave loopne in out adc test pop adc sbb adc or cli fwait and jbe adcl insb fcmovnu adc icebp cwtl iret mov adc push xor sub loope xchg fsubp fsubrs popa imul xchg iret repz bound push push clc mov fcoml test jne ret subl mov pushf push sbb cli inc sub push sbb xchg rcrl adc jl jns or xlat insb mov mov pop dec xor adc pop cmp adc xor imul adc mov jge push jne push dec mov or cs rcrb pop mov lcall add mov and cwtl or push push or xchg dec push sub xor rcll arpl jecxz lret dec adc xchg sti mov mov mov cmp add ficoml sahf jp clc cmpsb test inc adc mov (bad) (bad) (bad) out mov imul rclb lret gs les mov adc ds pusha aas adc lods jne scas push sub sbb inc pop adc xchg inc jg adc xchg add jmp stos or push popf fs mov add les cmp mov pop sub jmp inc insb adc jl mov pop pusha xchg ljmp insl fwait mov arpl xor cmpsl or jge adc aad stos pop pop insl int3 xchg adc mov xchg adc mov inc daa or jl or mov adc and test insb fisub in adc cmp mov jbe adc shrb imulb adc popf cmp pop inc lods mov ret adc and dec lcall mov adc adc xchg mov or mov movq mov adc int3 sbb insl xchg pop mov fisubl mov dec add jle lods out mov mov push aaa cwtl mov aam jge xchg jnp pushf js dec mov popa lcall arpl gs loop mov (bad) mov push xchg adc xchg bound dec sub repz scas ja (bad) sub mov push loope mov adc adc dec sub repnz mov xor stos mov xlat mov mov lret or sbb mov lods or insl pop mov insb inc stc pop mov fcompl popf aas (bad) xor int roll xchg adc clc adc sub sbb adc pop lea adc les pop stc xor aam adc sbb dec mov cld cmc gs adc (bad) popa in (bad) mov sbb xlat xor (bad) sbb and in push cltd adc fmuls xor jmp add mov push jmp (bad) sbb daa mov test pop adc dec xor mov adc mov mov stc or cmp imul mov lret or pop sbbl mov cmp sbb adc data16 or imul pop sbb sbb sbb cli sahf inc or adc ficoml arpl sub jnp xchg push xchg aam into les ficom lods adc insl adc lods mov shrb out insl movsb js je mov scas mov (bad) sbb ljmp aad mov mov cld pop xor adc adc push xchg or popw dec shl or pop xor imul (bad) cmp adc sbb repz faddl push mov push movsb jl jnp jne mov mov or or adc mov mov xor popf (bad) dec inc repz add or incl ss popa testl (bad) adc mov sbb in lds ret xor pop sti mov ss sbb adc jmp push mov push in and inc xchg into loope mulb adc ficom push or fwait jge repz data16 cmp (bad) mov mov call mov rcrb or add in (bad) ja pop ljmp mov cli cmpps mov popf push add push jns or add mov adc pop inc repnz andl xchg push add or pop lock lahf jne adc push cmp call xchg imul ja cld outsl adc out les adc jo imul nop jno mov fistpll es jp pop out inc xor jge pop hlt push mov sub movsl xsha1 cmpsb dec mov leave stos cmpsl js (bad) inc cli sti adc or cmpsb inc or adc sub out jno mov call add xchg pop imul jae je aas in outsl mov (bad) lret sbb adc adc sbb fucomi rcr pushf or adcb and js stos loope adc mov jg mov inc mov idiv aad add repz pushf or cmp ret popa mov xor and jecxz test cmpsb lock inc adc add out xchg pop push dec push loop cmpl adc sub or inc dec cmp cmp inc adc cmpsl adc adc inc (bad) in fcoms dec mov or into mov or dec std pusha mov xor in and int dec rcr sbb add jmp cmp mov arpl xor in fwait ret movsl mov aas cld in adc test adc inc inc rcrl xor dec adc mov mov loopne adc xlat adc adc aas (bad) mov jge sub inc ljmp pop pop pop cltd notb adc js sar in (bad) adc pop (bad) inc lahf cld pop adc sbb fsts jle jne xor hlt rclb movsb ss push (bad) insl xchg adc cmp repz inc jne js cmp (bad) bound mov or mov cmp es aam dec sbb sub fmull (bad) rorl adc mov push adc stc lcall adc sahf xchg adc aad push ret adc sub andb cmc int3 test add mov jno mov mov punpcklwd rclb sbb xor sub shrb sbb jb jp ss and mov xchg mov in fsubrl pop arpl xor lds bound xchg and test je mov test adc lcall mov hlt cltd xor inc mov les push ds pop popa jnp jp and fs ficompl jmp inc inc push jge adc (bad) add dec pop add cmp mov and inc out pusha inc mov repnz sub loope mov aas sar and push test daa and pop mov les jns mov ss mov popl movsb push iret arpl inc lret les pop inc test loope pop adc nop xchg push adc call xchg push pushf mov cmp mov or dec hlt rcll in sbb push ss mov push repz xchg decl clc mov lret (bad) jb inc adc sarb das fbstp dec enter adc sbb jns add jno lret pop mov lods push mov push int nop sahf rcrl ds insb mov adc jns adc sbb icebp je lock test pushf sbb or mov nop repnz sbb xchg mov (bad) pop enter or iret adc scas icebp mov pop dec or pop (bad) sar into adc call pushf adc push aad adc das lods xchg push pop inc mov divl rclb shrl fldt xchg xor mov icebp adc ss test (bad) popf pop mov imul adc sti mov pushf int3 adc sbb test inc adc add scas jecxz aaa adc jp push adc bound (bad) jno (bad) scas mov push mov addr16 cmp jb xor psubusb sbb popf pop mov sub cwtl ss xchg or (bad) mov or or dec std js adc test loop xchg jg mov cwtl sbb cmp jmp adc pushf insb jae (bad) jecxz sbb (bad) lea jne sub rolb dec out (bad) xlat sbb push mov int scas mov ficompl idivb sbb jb movsb mov push lods fmull push call xor pop push xchg ret adc jecxz adc mov les lret adc push pop insl stos idivb adc fildll dec std adc sbb ret aaa add mov xor mov adc mov xchg jmp xor push imul out xorl jge int3 popf dec adc jnp jg bound mov std out cmpsb adc insl sub repz xchg lret loop imul je (bad) scas xlat stos sbb (bad) cwtl lcall jno pop popa add inc or mov adc push adc rcrl inc adc mov push adc popf jl jp dec pusha adc icebp rcrb out xchg lea popa mov mov decl adc sarb pop call ds movsb (bad) adc jge cld (bad) mov call add fs add ja out cmp adc jbe (bad) int3 and xchg loopne adc push jecxz push sub pop (bad) popa adc js pusha outsb loop cmp add push push in and adc stos push mov adc or and xor adc and or cmp mov mov xor inc cmp adc outsb mov pop lcall adc fisubr fisttpll xor adc mov sarl aad inc add adc std stos je jmp add xchg mov lods xchg in daa test je stos pop adc dec dec mov lea (bad) mov subl dec jb dec sbb inc adcl mov fadds test iret mov fild fmull dec adc movb pop inc sbb mov mov scas dec int hlt xor pop add mov lods ret mov pop mov sbb out aam or and or mov jge dec lods jmp xor mov pusha mov aas mov pop popa add mov cmpsb aaa adc adc int jmp stos insl mov lea dec notb loop iret repnz out pusha push add mov adc lcall mov fdivl shll (bad) in es icebp jle adc lock fisubl adc movsl pop push jecxz pop repz inc ret or ja out fs mov sub dec hlt cs pushf sub xor add fisubl adc mov test fstl imul and mov inc loope pop or xor pop mov push call fwait (bad) push aad add in int and popf test pop leave lret fdivrl mov ss xor dec mov pop adc ljmp stos imul pop xchg fwait push sbb or ret adc lods pop dec (bad) dec jbe push ljmp mov cmp pushf push pop inc shrb dec pop setbe xorl add aas cmp adc jb (bad) adc add arpl sub or or hlt adc pop cld imul loope rorl fnop rcll in insl and xchg adc jnp sbb add scas adc popf push xor adc dec punpckldq mov dec jno fadd adc std or gs adc xor xor in push push cmp sbb xlat test add aad outsl dec lea test sahf xor pop adc or adc adc cmp shrb mov sbb pop lods pop xchg pop jl push hlt pop jecxz and stos sub leave adc add movsb rorb ja data16 lds and push decb mov or rcrb mov mov pop insl das lea nop xchg roll fimull pop insb aad push cltd adc das rolb xor (bad) add add cmpsl sbb pop test (bad) lods in adc dec js adc addr16 mov icebp iret gs hlt adc dec cmp inc adc lea shll xchg aaa (bad) adc sahf cli fwait xlat xor sub sarb (bad) cwtl mov adc jae fistp stos sub adc mov add adc xchg and scas adc inc sub arpl add dec sti adc cmc or adc cmp mov sti adc clc (bad) mov js (bad) arpl ss mov jo jne or cmp adc scas loope xor xchg jg sahf rcll pop (bad) repz or jns cmpsl cltd inc or and in adc mov gs mov mov xchg push dec and sahf hlt int and dec adc cmp push adc cmpsb popa cmp out inc dec mov test jae push jns out or mov (bad) xor mov mov ficoml cmp js and mov dec sbbb mov push mov add and cmp cmp dec pop xor leave scas je test das rcll add push push insb jmp and dec sub sub pop adc sbb xchg adc sbb ret iret sub xor sar cld lfs cmp dec inc sbb pop inc xor adc mov and push cmp syscall push lods adc notb adc addl lods stos mov xchg je and sarl test and sub in and add adc test aas cmpsl aaa pop lods adc fldcw dec xchg es repnz sahf loope in imul cltd js pop add push addr16 sub icebp inc aam aaa adc adc sbb or mov scas in xchg adc loopne data16 mov pushf or scas sbb aaa hlt jp adc adc (bad) in pop repz aaa push add jmp adc mov or mov or data16 int3 xchg (bad) lret insb adc mov cmpsb mov inc sub cli add push icebp imul push add cmp and js jmp repz test rcrb orl lds xlat adc lret or mov add adc adc pop pop dec sbb sbb mov push test jge loopne movsb dec arpl or sub popa and scas mov rorb adc shl (bad) int3 mov les adc ss pop cltd sbb ficoml inc inc sub push ret and adc (bad) arpl repz in inc adc xlat dec and push push cld adc pop jp mov xor dec gs arpl or hlt mov loope push push outsl scas push clc adc pop (bad) jmp add sub add call lods and ljmp pand push and xchg add push push mov inc scas adc sub mov adc xor jns popf or out scas ret imul fwait stos add into stc jmp ljmp push stos dec jecxz mov cmpsl div lock mov sub and hlt fsub add test xchg popf (bad) push lret adc insb pop xchg adc les dec dec pop and xchg add loopne cmpsl scas lcall inc mov rclb jne into js stc mov rolb and les loope pop xchg jnp flds pop int3 mov or adc mov adc add fildll sub mov (bad) and add and lcall push or adc es and push mov push push mov or cmpsl or aaa test xlat fidivr push xchg adc sbb insl push mov xlat pop jecxz lock xor (bad) test push mov movsb xor loopne aad adc pop cld sahf mov out dec push or sbb adc dec adc adc adc jg jne lock addb lods mov adc push (bad) dec rcrb mov add ss iret pop mov repz cli fstl out mov data16 movsl and nop jbe int3 cmp rclb sbb sbb push loop,pn mov imul jge popf js sub shr inc or dec aas stos adc (bad) xchg adc rcrb adc jg add fwait xor or pop jae lret sbb adc add imul add adc cltd jp pop loopne sub ret pop push lret adc add adc sbb and mov not lfs repz inc pop dec sub sarl rclb jnp insl sar loopne or mov jp les bound inc and cmp scas test pop jge jbe mov (bad) adc fwait mov fldl fdiv ror into adc jmp (bad) gs or hlt xchg sbb out mov jne push jae jmp adc cs sbb ret aad cli adc shll mov mov std or (bad) bswap mov repz add imul adc adc xchg dec xchg ror pop jmp nop stos sbb mov jo jnp or psubsb fbstp fnstsw mov pop shl (bad) shl and sbb pop xchg xlat lock pop add adc xchg (bad) push xorl mov lcall pop mov fimul mov lods mov lret hlt fistpl dec xor fdivrs stos dec lds (bad) repnz pop or mov pushf push adc inc call pop inc mov inc pop adc inc int3 or movsb adc loop std in add inc adc dec cmp movsb and mov cs outsb cmovb lahf imul js popf dec and gs or xor (bad) rcll add mov adc not sub std and sbbl adc push test pop (bad) repz fldt jl adc addr16 mov xor bound pusha lock adc pop adc inc mov in xchg movsl insl adc sub stos fsubrl mov sbb or insl pop pop sbb mov or mov jmp adc jp cli (bad) adc push fstps movsb adc ret out (bad) in adc mov xlat adc xchg outsl cmp sarb adc ret add stos es pop bound adc fisttpll xchg cmp ss or arpl roll outsl inc adc add ja loopne cwtl push xor sahf psubq (bad) out outsl int3 lods (bad) movsb stc iret fidivl pushf inc sub or inc cmp mov dec push rolb test icebp jmp adc bound adc stc adc pop sti jo xchg jmp mov (bad) jns fsubs mov and lret nop adc repz insb jb cmpsb outsb mov stos adc or cli xchg sub mov loop push mov test adc jb popa adc xor push test cmpsl fstps out outsb daa add adc xchg inc test ss in pop sbb and stc cmpl adc out mov gs stc repz push loopne test adc scas lds pop aam repz ss jno jnp push pop xor stos andnps inc xchg js repnz in cmp mov mov jle mov add sbb es inc sbb adc aas shrb cld cmpsb pop cmp push std mov call in pop dec adc mov ret sbb lret push or pop inc adc and mov (bad) mov (bad) iret and jns jbe into fild adc mov mov in (bad) pop pop into nop lcall pop in cmp ret es pop (bad) jmp ret pop fwait enter adc lret cld das adc idivb inc cltd jno int3 xor dec scas sahf das and cmp jl sbb xchg adc jns sub fcmovu inc or dec subb adc push jo mov out mov xchg mov add jbe lcall add mov cwtl sbb mov loope cltd clc aaa push cmp xlat adc sti test (bad) lock stos outsl adcb jne sub adc aam (bad) cld aas adc lret pop pop adc (bad) cli sahf adc and jmp adc dec loop roll jecxz dec or mov lcall dec inc mov or xchg adc sub xchg mov xchg sbb mov sarl enter fnstenv inc orl stos mov jecxz jno cmp jp or adc aam jae mov out xlat sbb in inc adc (bad) mov paddusw lret mov push pop aam adc aad or jecxz test adc adc pop es mov adc mov mov adc mov in repz push xor pusha add mov adc inc mov push gs lret dec stos push test outsl xlat mov dec add dec sti adc jecxz clc adc ficomp dec hlt pop call js dec or in mov popf adc push iret jno lock add dec mov xor or add push dec (bad) adc mov movsb add out sti mov hlt lea adc in aaa xor out imul xor outsl jg add nop jnp jne les inc or rcll sub cltd pop insl aam xor jns repz mov mov call mov cmpsl adc jbe stos enter sub movsl loope lods xchg insb lcall mov jno adc imul iret mov mov sbb add into cld push jge test outsl or jge and fcmovb movb pushf adc add or test loop push adc enter push nop movl adc out test cmp shl bswap cmp adc pop mov imul ret jecxz jbe (bad) iret adc inc jg mov jle imul adc (bad) or jmp sbb jbe adc push lock cmpsl adc hlt addr16 lret cmc scas decw adc add aas dec sbb mov jae xchg out daa popa push xor cli repnz sub mov movsl add add or movsb xchg jp xor hlt vpsllw adc pushf mov (bad) push adc fsubrl repnz call mov bound std jmp mov repz pop add add insb push enter inc repnz test or popf xchg jae (bad) cmp xchg out push jbe xor dec xor jmp xor test pop dec fildl lcall mov test mov in cwtl frstor jge xor pop mov fidivr and xor pop in repz andb out jne aaa add cmova stc pusha adc repz jo and sbbl push rorl (bad) adc inc and add adc jne ja bound mov (bad) inc xchg dec dec inc adc adc imul shrb adc enter mov (bad) mov or or ret push adc aam pop xor gs mov xor push adc add jbe cwtl orl dec sbb inc test ja inc aam add stos mov (bad) (bad) nop ds add add mov (bad) mov ret adc rorl std daa adc adc adc mov xchg add ror sub adc sahf std adc loopne cs xor lahf and add rcrl dec loope cmp mov js fisttpl idivl repz mov push dec ds cs outsl insb adc jns cmc adc loop lods sti and stos stos pop xchg inc adc test das shrl int adc std inc inc inc xor int3 nop (bad) cli add rcr add cmpsl arpl xor xchg fidivrl daa sbb adc dec jg repz or mov mov stos jl call adc les pop add or sub stos pushf popf pop push js adc xlat pusha inc xor adc mov lock int3 xor scas cmp rclb in inc mov xchg adc fbstp and (bad) lea adc cmp inc adc frstor mov adc adc sbbl add clc xchg add mov dec out push push mov rorl and or sahf sbb xor fcmovbe incb add les cmp push mov cmpsb adc cmp lcall inc daa pop or inc add fsubrs push in mov fist scas mov add xchg mov mov jno and call mov xor aad jmp xchg jge adc sub adc pusha mov pop adc xor out pop xor and stos rcrb call add mov pop das daa ret mov inc adc ficomp mov dec push adc cld dec and pop mov pushf mov push xor pop or add sub ja adc pop xchg fistl push add popa add mov inc icebp inc adc std mov mov mov lods add mov xchg stos adc sbb pop sbb mov sub push lret push push adc ror pop out out cmp lret cmp imul stc xchg xlat mov fsubrs cwtl mov pop leave adc or (bad) xor xchg adc xchg mov inc repz adc cs imul sbb ljmp addb mov lahf popa jg pop jp inc cs xchg outsl cmp pop out push mov and loope sbb pop adc aaa push les stos repz xor cmp adc xlat jno jno fs adc xor fnop adc stos xor xchg out hlt pop mov pop and cmp mov xchg cmp add jmp adc inc pop inc sub daa adc mov mov pop enter pop icebp loope adc test jl imul movb in orl adc sbbl ds daa sub mov fisubrl jb add mov adc mov insl repz jge xor sub aad sbb cmp pop xchg dec jmp repz inc dec pop add pushf and mov pop rolb sbb enter mov mov fiadd jle nop adc sbb mov dec hlt pop xchg or lods add jmp inc stos adc lock add mov andb dec out dec divl dec or lods or call cmp push sbb cwtl adc (bad) adc mov push test mov jbe xor mov push and cmp leave mov repnz bound outsb nop mov movsb or dec dec xchg pop xchg (bad) lods adc hlt or loop adc mov out jnp jbe cmpsl cmp adc adc mov rclb xchg dec jmp (bad) fidivr mov mov jp in lds cli mov rep pop into xor push (bad) mov fucomi lock fs add xchg adc scas sub adc or lea xor (bad) push mov cwtl add xchg pop in jnp call adc add sbb cmp rcll xlat loopne (bad) out out mov cld test in (bad) leave bound and adc and inc sub in pop cmp adc push add cltd inc enter sti inc mov or add mov cwtl inc push (bad) mov (bad) and sbb ds scas adc fsubs cmp mov cltd stc daa dec jns jno dec fistpl imul inc add lahf jl repz fldl xchg in pop rorb daa mov push imulb push add adc push cwtl sbb jbe adc fmul cltd ret xorl sub repz lock les pop pop or jne insb xor outsb xchg repz and ds lock cmovl dec cmp sbb add lret jno in jge adc loop sti aaa lods xor xor push ja lret jae xchg scas mov js push bound and (bad) hlt pop aad je hlt inc loopne dec dec inc ljmp jmp sub ja js mov adc ljmp fs mov notl mov pop push add aaa outsl test sub jmp lds mov and test lahf aaa imul push repnz add pop in test icebp adc loope in ficom xchg xor fdivl data16 or (bad) adc icebp frstor push popf out inc sbb jns cltd or push nop jmp push cmp fistl es repz lds imul cmovb std sub push adc loopne adc fs iret imul std ljmp cld jno add icebp dec cli adc jnp stc jb mov push repnz or ds sti lcall mov mov test xorl adc subl adc pop mov popa ja es (bad) rorl mov repz imul cld adc jne xchg addr16 test cltd cmc sahf adc and fbstp adc (bad) or repz push rcr testb adc fiadd repz xchg push jns and aam adc fnstcw lret ss xor sbb push cmpsl add dec movsl push aaa and push and loope and lret test adc add cld ss push mov or pop dec adc jae je jne aam or inc mov push push jl cmpb inc adc pop jo push sbb rclb adc sahf mov mov xor cmc outsl push or xchg push fistpl scas in imul xor jne sub stc jmp (bad) mov inc jmp ss pop les cmc std xchg jmp push xchg mov or popa sub pop sarb repz iret push out les add add ja rclb sbb cmpsb jmp mov lcall test fbstp or sbb cmp cmp adc inc or (bad) lock adc into push test scas popf adc add enter sbb jmp push mov or push test pop je loopne int3 mov aam xor cmc inc mov add xor mov hlt and sbb mov pop fs pop mov or or adc bound imul test (bad) sbb sbb (bad) mov push jmp dec fcompl outsb push push addb pop add out prefetch or xchg add inc dec test adc pop sub adc sbb mov mov adc insb add mov or aam ret std sti adc mov sbb dec pusha xor std repnz cs jnp cmp repz xchg dec repz mov adc shll mov lcall fdiv les (bad) adc int3 sar inc mov nop push cmp adc sub sahf mov add inc cli push and inc andl gs sahf lods xor lret cli jl xchg mov repz xchg cmpsb mov inc int jp test adc push xchg mov scas mov mov sbb adc sahf pop or rcll insl cmp daa push (bad) jns (bad) jno cmp push inc jb mov xchg xchg out fiadd mov aam fimull mov int shrl inc cmp add adc clc mov xchg ret aas in shrb adc mov and mov (bad) iret pop lcall shll jae dec or xor xchg lret cmp jp (bad) repnz cmp aaa sti out xchg nop inc xor jns add adc xlat push popf sbb out movsl push (bad) cmp int xchg (bad) lock repz (bad) mov fisubrl out scas arpl and adc in lock (bad) cmc (bad) jb push adc sbb sub or adc pop dec adc addl aad mov cwtl mov fs mov mov lods popf wbinvd bound fist popa add or mov lea fldl xchg in sbb cmp aaa adc cltd add (bad) cwtl adc push in sahf pop mov xchg out adc in xor cmp add push jle movb lcall pop add xchg fldt mov and mov dec xor fstps cmpl xchg pop (bad) ljmp lock mov cmp sbb add dec jb pop (bad) push rcrb xor cmp fcompl inc mov in adc sub stos mov add push rorl enter inc dec ret leave (bad) aaa lret inc jmp or jecxz in scas ds mov lea adc lods mov dec mov sbb adc cwtl popfw ds jno aas inc mov mov sbb add jge adc out repz std scas fcompl adc jb fucom xchg jge or xor mov add movb fsubp adc fnstenv push ja loope in rorb ret sbb les mov repnz pushf (bad) loopne adc xchg lret adc jno addl gs pop rcrb mov pop outsl adc jmp mov xor sub adc out xchg sarl pop movsb lcall insb jle push adc cmp hlt xchg mov or mov jp sarb arpl fs lods sbb test xchg mov mov sub lods imul adc inc jl mov dec cmc je mov out add (bad) adc inc sub xor repz sbb push xchg dec pop ret stos xor xor cmc les adc sbb push ficom stos into jo das (bad) xor and jae insl push inc loopne scas adc repz push adc sbb jae,pt mov mov outsb adc jmp (bad) int xchg mov pop mull sbb inc and and sti adc int imul std xchg add or add test adc les std in mov arpl je or push pushf (bad) adc shlb adc push mov pop hlt (bad) sbb mov fwait into in pop int push fcompl sbb mov movsl ljmp aas adc test mov adc jge cs int adc (bad) scas sub rorb jae fwait push cmpl icebp mov and xor sbb jmp jmp decl inc ljmp sub add sbb push (bad) xchg pop out sub aad inc mov adc lcall das or int xor jp adc mov (bad) repz jg je cwtl into or mov (bad) out (bad) lcall xchg leave inc adc std mov mov mov repz mov int3 sahf adc ficompl mov ljmp out or into out adc sub and add scas lahf sub or ror jae mov add adc test push xchg xor add mov adc sub add fldln2 and jo (bad) dec leave mov sbb (bad) enter adc jp push add mov adc or adc adc hlt fisttpl ror shlb push add rcll test stos in fnstsw adc adc dec fwait jbe xor into ret or mov xchg push aam mov mov or iret sub into mov data16 lret jns stos xor cli push mov jbe push int3 repz std pop adc inc and test lods stos adc push or adc cld mov adc (bad) cltd and jge rclb push clc addr16 dec sbb repz dec imul push jne mov mov sub cs adc sbb jbe adc xchg outsl ret add leave cltd jno mov pop sub nop mov int3 outsl sbb aaa and push nop and dec test fiaddl dec les repnz je adc (bad) sub pop sub shl insb jmp adc repnz jle adc cs pop test imul cwtl mov add sbb sub fcmovbe mov mov (bad) and fisttp loope push popl lds lret cwtl mov inc stc idivb adc in mov push loopne add cld and adc int test fs lock add repnz push pusha add mov add mov cli ja scas add mov push lods and andl xor and jl push addr16 mov mov inc cmpsb mov pop adc xchg js or adc test imul scas lret adc add mov add xchg adc cli sahf (bad) adc addl xor adc add xlat jle jo push mov adc (bad) arpl adc or and xor cmpsb jo fnstcw pop fadds cwtl push mov (bad) mov jle adc pop inc jo xchg sbb cmp repz notb int3 dec out or adc leave adc jmp push stos popa outsl pop adc dec testl mov repz ja idivl sub pusha adc xor pop gs scas adc idiv xchg pop mov sbb or jl scas mov (bad) aam mov and sub popf (bad) daa hlt push pop in adc inc xlat adc or nop test sbb xor scas ja pop jo mov push clc in or add xor mov xlat adc loop idiv cmc xchg rcll jo imul adc lock adc or repz sub or inc adc xchg fsub or adc push xchg or pop inc cwtl push add and (bad) or (bad) cld adc push mov adc aad enter add fstpl adc cmp dec push out adc fisttp pop repnz outsb adc xor push jmp mov push test adc xchg xor jle xchg call adc and (bad) dec ficoml xor (bad) movsl fcoms hlt fnstsw mov mov (bad) aam inc insb adc ret adc addr16 adc mov (bad) in sarl mov and xchg mov fwait add jne mov in adc add mov (bad) rcr adc inc loope adc in mov sbb bound les xchg mov adc adc icebp dec pop popf sti adc fstl ljmp js or mov repnz nop call stos adc (bad) test out adc jge outsb fbstp lods xchg cmpsl (bad) mov js mov adc xrelease jge (bad) int adc ficoml rorl in adc loope sub into fwait adc pop out adc insb pop adc out loope pop jnp xchg cmp mov jae dec shrl aad push (bad) sbb cld movsb hlt dec xor out scas movsl cvtps2pi adc fwait jae sbb mov and jo cmp jbe pop pop adc pop (bad) lret inc mov dec adc repnz out sahf add mov enter xor inc in pop inc je cmp fdivs or jo test pop ja rcr jno fdiv (bad) bound popl jno,pt loopnew adc movsb or inc aad fxch or mov and xchg adc cmp jle pop dec adc dec cmpl ds fsubl repz sub sar aad push adc ljmp mov daa mov jnp sbb xor cmpsb pop adc jl js xor test (bad) stc mov jne adc sbb push push adc cmp dec sub adc xchg repnz (bad) clc adc ficomp mov aad and or or adc (bad) shl decb mov sub pop jb adc test clc lahf das insl push jno xorl fmull or outsl inc sub into in or cmpsb loopne adc stos xchg ss add in xchg stos rolb sub and mov ja das inc adc and inc repz add adc mov or xchg mov mov and pusha adc out bound xchg (bad) outsb push scas dec adc aam sahf call push rcrb adc movsl mov cmpsb adc mov cmc adc xchg sub adc inc or adc xchg dec shll push sub iret loope add (bad) xchg test lret xor mov mov xchg loop jp add push pop aad adc mov imul (bad) push adc dec inc loope daa lret xor mov add jp pop (bad) or adc popa addr16 and mov sbb ja inc xchg mov add pop mov loop dec int3 pop adc adc add ret mov imul cmp sbb loopne adc mov and xor mov shl outsl jmp xor mov adc fldt scas pop rolb adc (bad) or cld aas adc jl xchg jmp adc out pop adc pop fcmovnb imul cmp loop push pop jmp repz cmp sbb test push mov inc in imul insl cmp push xor dec add movsl sub adc mov mov ss inc pop lret mov adc jae mov add fimul in pop mov xchg xor push fildl pop test bnd adc outsb mov andl xor icebp lods add (bad) mov lods xchg adc imul rcl rolb cmp dec ss (bad) mov mov mov sub in or xor hlt or cwtl mov call mov ficoml dec test jg adc cltd jnp adc sar dec xchg data16 in xor jmp push mov shrb fs mov fimull daa sti test adc dec and popf in ljmp movsb leave (bad) cld (bad) adc add lcall xchg adc lret adc frstor xor shll dec hlt mov test decl adc lock adc mov pop adc (bad) jnp mov rolb adc inc sub sbb push jg lock push jns sbb fidivl nop adc inc ds add std repnz arpl cltd adc pusha add mov lahf loope and jecxz sub mov push adc in mov cmc xchg sbb adc lcall es add enter lret (bad) movsb push adc jne cmp frstor fucomi negl xchg clc jmp cmc or sbb iret adc cmpsb sahf mov jp fwait mov (bad) lods in pop sbb fst adc mov daa add bsr add adc addr16 les dec inc dec lods adc or xor adc loope fwait lahf sub sub or adc add pushf pushf adc inc push lock sub adc cli test dec loopne js adc adc xchg fidivrl ret xor mov xor cmp sysenter mov adc xchg loopne loop adc sbb gs and pop lcall mov test lods nop sbb push fscale lret adc pop mov pop or xor decl inc cltd adc insb mov adc int adc pop mov out inc ss push mov pop (bad) mov sub push xor or add or sub xor add mov xchg adcb mov iret cmp out mov icebp adc test test and dec push or jnp sbb ja xchg cli push stos or mov push ucomiss pop pop adc nop cmpsb sti inc adc ss inc mov pop adc cmpsb push jb ja inc adc outsb sahf popa push adc out out in sub push adc push mov rcl mov lcall push bound sahf adc jmp std sbb nop add hlt mov cli lods adc mov mov outsb pop push shrb inc adc mov mov scas or test cmp aas stc push mov and inc add imul jo or mov push xchg aam inc sbb dec sub xor mov xor dec leave jle or pop cli mov inc inc mov nop (bad) repnz test notb jmp sbb cmp iret dec sub lock (bad) repz leave jne jb mov pop lods jg inc add jp loope cld cmp xor dec or leave push add add fwait mov jne adc mov mov leave jecxz add adc inc mov adc in add daa sub mov roll dec push cmpsb repz lock iret adc fidivr or jb xchg push mov and stc inc xchg push and mov inc xchg pop sti xchg bnd ds mov addr16 pushf cmc ret repnz adc imul mov js adc int sub xchg sub adc xor xchg xchg and inc jo test add adc adc repnz mov scas in and clc rol add enter or dec stos inc add loop adc or insl aam adc (bad) xor adc cmpsl xor (bad) xor mov mov jmp shrl mov adc sub cmpsl insl or fisub mov aas pushf repnz sbb cmc push inc cwtl adc lret or mov movsl in adc cmp shrl test jmp faddl push mov jg adc cmp in lock sub mov push push xor sbb imul dec xor and add mov lods or xchg cld add cmc and inc fadds mov les aas mov mov popa jno hlt cmp dec xor add fcompl ss call pop mov daa mov adc mov stc scas push sbb sbb mov mov sahf je cmp inc pop mov movsl mov or adc arpl adc sbb push adc lds in stos int3 jle cltd arpl mov mov lods inc mov jnp pop call inc in add fmull pop or or jno in cmpsl mov int3 jmp xchg enter scas or mov jbe push scas inc mov push inc mov cld mov outsb in dec dec add test add adc sbb (bad) mov or sbb lret jge jle xchg mul pop xlat imul adc or inc gs and add push leave jae add xchg (bad) testb mov imul xor pushf daa xchg adc sub mov clc sbb sub js mov out cmp imul adc bound lds fs repz jnp into fildll rcll fimull jle mov or inc xor xchg out mov pushf rcr adc cmp mov (bad) inc and mov mov sub pusha add inc bnd adc add sbb cltd xor inc (bad) jno mov push sub or pop sti mov outsl mov rcr arpl jae xchg icebp inc add nop sbbb sbb lock and mov popf cltd adc dec fnop repz mov xor jbe (bad) adc push mov repz cmp scas push pop shrl adc jb aad cld mov adc sbb (bad) adc mov add test cmpsb clc xor pushf nop jmp xorl xchg arpl adc add popf jae out and mov loopne scas idivl or adc xchg test mov cmc icebp call push sbb jg xchg sub ja loop pusha or and xchg rorl pop jne push adc or sub (bad) lret push out xchg hlt pop pop into cmpsb adc mov adc imul adc icebp xor imul ret in adc rcll mov pop add xchg lret xor adc jns rcll adc js cld roll cmpsb fcompl repz push outsl pop mov mov adc push mov jb pusha adc or subb enter mov adc int3 incb notb push lcall adc pop adc test jnp imul hlt xchg or xchg or fcmovnb sub and adc sub mov repnz cmp std cmp dec sbb stos lods outsl push pop and adc popf adcb adc mov repz or jp inc mov inc adc inc jmp and out ja gs into adc js xlat mov adc decl int (bad) jne loop sub cmp das adc adc mov jge js lahf mov push enter add (bad) pop adc xor nop add movsb lods dec xor shrb cltd sbb add or add cmp call adc mov lds xor test and out pop adc xchg mov fdivs loope pop mov push pusha jae add adc std adc insb fisttp aas add loop inc sbb push jb int3 repz and cmp or and aam out mov insb push sbb pop mov cmpsb jge jns adc xor notb xor mov mov xchg and xor divb push std pusha bound cltd test xchg pmuludq shl add (bad) sbb and jge mov xor mov leave shrl dec es mov jae jae aad pop shrb int mov call sbb mov dec jl mov test mov fs mov jo adc test ret adc gs (bad) pop stos jbe or in adc hlt mov lods pushf mov test imul pop movsl xor pop cwtl cltd pop sbb adc stos jecxz adc ficomp loopne sbb jne push gs mov mov mov shlb xor jbe mov adc (bad) add xor loop cmp pusha outsl mov push push jns add mov das popf lods loope jnp and and lret movsb out add jno cmp xchg data16 xor mov or mov dec cmp test fwait jp pop adc hlt insl aad arpl mov push cmc sarb adc fldenv add aas ljmp pop repz pop xor adc mov cli rcl xlat add scas jg xchg popa adc les adc ret in cld mov aad jbe and js pop scas add push jb mov das inc mov sarl outsb adc dec mov xchg adc cwtl call jno xlat inc add pushf psrlq adc cs std adc push sbb xor add add pop push mov aad cmp outsl fwait mov out adc cmp jno decb bound jo out adc xor sbb (bad) push adc nop js cmp std push sub gs jbe jmp iret inc repnz jmp movsl rcll adc imul insl pop jns xor xchg adc inc roll idivb adc add cmpsb adc jnp mov mov sar pop xchg (bad) adc fdivr std inc cwtl pop xchg test inc in or add inc jo out dec jns or xrelease gs or pop adc inc into jmp jno xor lods out fsubs push test out adc adc adc jns jge inc inc rcll mov notb jecxz xchg arpl adc lods mov rclb adc or insb dec xchg aad scas lods push lea push call in pop sbb clc (bad) lds adc mov dec and xchg pop fldcw hlt jno add out lock popf fcoms push push (bad) adc sub cmp or push js and sbb sub test jecxz and sbb add popf in pop adc sub dec adc jecxz test add cmp cld test sub cwtl pop pop pop insb mov mov cs xchg fcomi test lock mov dec sbb adc (bad) jl jp dec lahf je test pop and sub jmp jnp data16 cmp or adc mov bound in pop fistp lods adc cli or test mov and sbb adc in shrb mov lret or push nop mov test aas sarl add adc fcoms das pushf shlb cli in out int std jmp dec inc rcrb mov pop pop sbb pop adc scas jmp repnz cmp out mov adc out aaa js das and rorb aas mov inc sbb clc aam lea mov daa fisttpl add xchg (bad) adc lret shll xorb dec cmp out xor xchg shlb add (bad) adc mov xor imul loop or jg loope icebp adc add adc push imul or adc xor jo rcll push or stos push lret pop push adc aam pushf shrb rol sahf adc mov fnstsw jno xchg xchg xchg test dec adc pop inc repz pop cmp movd xor test lahf sub mov (bad) push fsubl das in jne jo mov adc fistpll adc push call pop pusha cmp adc rol mov push dec sub mov xlat jmp add pop push sbb out in adc mov mov xchg mov mov mov mov faddl jns into pushf mov and cmc jne insb push dec (bad) icebp xchg xchg iret or (bad) push insl jmp into adcb mov inc mov inc popa push (bad) inc add pop mov pushf mov cltd adc sti out outsl add push jg adc lock cmp jmp or popf adc or jbe jl imul pop pop lock sub xlat adc mov stos cmp repnz aaa fcoms lahf pushf movl sub out shrl and push mov (bad) (bad) adc outsb push push ljmp cwtl les cmp lahf loop xor mov fldt adc xchg mov mov mov or jbe adc les (bad) rep push xor or pop or movsb jle aam js lahf mov iret repz movsl movb in movsb dec push scas mov (bad) adc push cltd jmp rolb mov sbb xorb or (bad) inc rclb lock ljmp push pop xor push mov fsubrl ja jne xchg sbb dec adc insb mov outsb adc or scas popf inc imul mov cmp dec enter inc sbb lret cwtl mov xor (bad) jno ror mov (bad) aam pop adc lods sub sbb aas jl popf stos push adc mov add jnp jb dec or ret in push int stos lahf je popf lea add popa or mov or and (bad) mov arpl push adc mov ret imul inc js adc dec je xchg adc xchg jno adc adc (bad) xor loope or arpl outsb mov adc mov ret pop pushf and mov stos cmp push jge mov sub movl xor sbb or jb xlat or iret test nop lods (bad) mov inc call les int3 shrl adc xchg (bad) or add int pop mov das sub stc nop sahf fs pop pusha mov jmp jl mov xor (bad) pushf out int3 adc jecxz or lods sub add orb (bad) hlt imul dec mov (bad) addr16 mov (bad) in xor mov mov hlt pop push xchg sub imul in shrl add lock xor adc cmpsl adc not out jmp mov ret je jl or cmp pop cli or iret adc inc jae fcomps lret outsb xchg shr cmp nop es repz fcmove cmpsl aam sbb or adc into dec loop or sbb lock ret repnz adc push push sub bound fcoms cli push pop std inc hlt test leave setne inc pushf repz cltd fsts xchg scas or fcomp adc lsl xchg pop inc sub push mov adc sti test push adcl es in push (bad) hlt aam adc dec sahf mov jmp or or sbb sub clc aas (bad) jno add cmp jmp (bad) adc stos icebp xor push loopne repz cmp les adc out and pushf jg popf sahf add xor push in leave sbb mov aam xlat add scas loop add jbe pusha and pop in push repnz mov aad adc inc sub adc mov fistpl adc xor sbb adc mov movsb loop cmp adc lret adc dec mov (bad) notb test ljmp push cmp adc jb fldt xchg (bad) cmp movsb pop add sub mov insl pushf or pop mov add fistpll push push add inc lods stos jae adc jne mov mov lret xor (bad) lock test push add jle push in adc dec loopne lret lcall inc add aam js or mov repnz ljmp mov test lds in mov push jge (bad) jecxz je mov jnp or adc xlat fcmovnb into out int3 repz dec add jmp xor xchg push adc (bad) push mov fcmovnb loop jl push fs cmp or and adc jne sbb adc inc adc dec sub mov int repnz mov sbb adc shlb ret mov int add cmp xchg xorb pop lcall or mov mov mov fwait add stos adc jmp mov rcrb push or (bad) push jle mov (bad) mov dec or in out cmp std addl or and jp scas ja out pop out adc clc mov out sbb adc adc hlt adc fs xlat inc cmp mov loopne push xor loope shlb push adc ljmp fwait lods or xor adc das jne mov insl jp lret mov pushf adc add mov cs adc mov notl icebp daa aam je add nop ret repz adc or adc outsl loope dec int add mov rcrb ss sbb and inc movsl cltd sbb xor or sahf adc adc rolb test ret dec notl popa push inc (bad) mov xchg stos adc lret movsb out pop stc adc lret pop jle mov adc push pop pop das adc xor jge pushf cmp xchg cli inc mov js push mov (bad) call les mov pop adc in movsb mov enter sti mov stc popf adc cmp push adc enter sub mov adc adc lea adc push in adc or je cmp jp mov in fisubr and jno push out pop jle test push fisttpll adc shrl push outsb int3 mov in lcall adc nop and scas push sbb sub mov add push xchg pop call mov mov sbb adc adc or xchg inc leave mov out xor lods sub xor and sub add pop push les out or sbb sarb shr cwtl fnop mov jmp adc mov push aaa adc lock jo mov ss and jae stos enter loopne loope je push sub mov inc xchg xor mov push ljmp or dec adc xchg mov rcll sbb mov fnstcw dec nop sbb adc enter loop jne fs adc outsl repnz or loop or lret adc push nop dec add mov cltd shlb or pop and adc cmpsb stos sbbl pop add fmul adc push mov xor adc cld imul jge scas push pop popa fimul adc jnp adc mov stos addr16 adc lea fst dec or test cmp imul push ss inc mov jae in mov decb gs or fcoml add adc push ja mov sub (bad) jbe scas cmp out (bad) mov mov ja dec shrb out adc push and or mov jbe mov and adc mov andb loop aam mulb adc dec mov xor mov push (bad) gs mov cmpsl adc test cmp adc cmp mov jbe iret add cmc push push sub and adc or jg lods xchg mov insl out pusha loop adc and jae cmpsl xchg mov push mov rolb fnstenv or into ficom cmp (bad) pop and push jb lock push ficom jle sbb divl cmp adc pop pop fisubr mov (bad) (bad) jp push data16 xchg into lods push inc in adc cmp mov mull clc fnsave xsha1 cmpsb mov lret mov push dec je mov andl sbb mov lods enter add adc pop insl xchg punpckhbw jbe jle inc mov fisttpll jnp xchg mov jb and and in insl repz xchg test inc pop adc sbb adc xchg jmp mov xchg and sbb adc fidivr (bad) ss add add jbe (bad) sub hlt mov cmp xor push jmp mov and pop mov pushf adc fidivl jecxz jmp in push je jnp (bad) or xor inc push adc mov xor out adc pop rclb mov inc push push dec adc cwtl cmp mov lret adc aad adc or leave pop pop cli xchg ja and repz test sar cmp in adc pusha dec idiv and mov ret add push daa pop mov jmp rorb or ljmp adc lcall sub cmp inc adc pop bound adc inc int mov test cwtl aaa popa mov add adc jns call xor pop push inc addb mov rorl adc movsl inc out aam jnp add (bad) sbb cmp mov push jp sbb hlt stc add out fsubl shrl movsb inc inc and adc test call pop cmpsl cmc sbb adc jmp mov pop nop add xorps int3 add gs pushf aam je fimull and add add fstp sbb adc push xor sbb mov pop js hlt inc and ret xlat mov (bad) jno push data16 rep das push mov xor adc or leave iret fildl adc daa lea pop call push mov pop mov adc and (bad) call adc push repnz mov je adc xor adc pop or xchg mov cmpsl mov (bad) fcomp movsb adc sbb sbb and (bad) (bad) scas dec pop std in movsl dec adc lahf or loop adc loope das push xchg adc sub aas cltd lock div (bad) (bad) cmp lcall xlat adc aas xchg mov dec rolb xchg adc into xor ds pop (bad) outsl or sub mov shr cli dec bnd mov add loopne add xchg lahf ds scas aaa adc aas mov les jle pop cld jo out xchg adc inc or dec ret adc push xchg mov or mov fwait adc adc inc movsl adc imul inc jle fisubl stos (bad) jp test xor ss pushl pop std in (bad) adc mov and or xchg mov iret and dec imul es movq lcall dec sub adcl popf cmpsb imul sbb repz mov jmp mull push movsl int3 mov adc (bad) popa aaa xor (bad) sbb mov out dec mov mov (bad) or mov mov dec add jne lea hlt ret inc adc push mov jnp lods cmp (bad) fmul adc add mov adc adc aam or es adc ljmp adc arpl mov (bad) push popa mov jge lods adc scas push sbb and out adc xchg faddl mov stc lret sub push or mov adc mov mov leave or mov daa or arpl dec push jg mov sbbl aad adc shlb dec mov out std lcall jns sbb sub stc push das fwait xor loope mov dec push in pop arpl outsl add movsb std leave lret jo add repz mov adc fsubl inc mov ret xchg aas mov adc das xchg jbe aam or cwtl xor push adc inc jns mov scas imul inc fcoml addr16 jp dec sub andl or js test mov mov lret enter stc adc jge and je lcall or sbb adc inc sbb fdiv lea sbb mov sti jne jmp add adc out xchg (bad) mov enter in (bad) test test fwait pop adc fimull (bad) hlt sbb sbb adc adc decl add fstpt sbb jno in mov jp cmpsb mov add (bad) fstl mov clc jecxz cmp test jmp xor in jae repnz rcll add adc aas (bad) out push cmpl lods push sti nop outsb mov pop cmp scas pop or xchg mov xchg cmp stos (bad) jle out jl xchg iret sub pop aas push daa bound lds leave adc adc and jge nop ja cmp adc push ret repz adc mov xchg daa xor aas rcrl pop scas jne pop fstl je,pn sbb mov xchg sahf (bad) iret xor xor loope or cmp pop sbb cmpsl insb push mov mov pop dec dec mov nop and add xlat pop adc push ljmp leave pushl or add adc add movl xchg std cmp outsb xor (bad) nop fadds add cmpl add sbb fstl mov cmpsl les sbb call mov leave sub roll adc cmpsb sub push insl jg repz arpl fcomps pop adc js add mov rclb or xchg and jp push aad adc stos sub daa adc nop pop stc jne movb test adc lret or lahf adc add pop dec aaa mov pushf int repz inc out cmc pop in mov push add jns cmpsl adc xor iret xchg cwtl jecxz push and sbb out pop mov adc push repz mov fsubs data16 jge loop (bad) (bad) mov stos adc add add les mov es pop sub xchg lea jo jecxz repz data16 mov fnstcw lcall adc mov fnsave daa out adc add aas xchg aad adc lds adc adc fcmovb sti ja adc je aam push sbb pusha ret in dec xor and xchg and (bad) fldl adc dec or outsb sub mov (bad) adc in sub decl push fistl test cli mov dec cwtl xor repnz pop add fsubs pop jo push mov in xchg les mov in pushf or sqrtps notl pop out adc and jecxz add data16 add jnp into mov stos sbb adcl scas aam adc push sbb rorb test arpl movsl movsb imul adc push sub mov mov push lcall xlat or mov jp enter adc addr16 jge and adcb data16 out xchg cmpsb push xor lret adc test mov cmp ffreep mov jbe sbb shll mov xor sub mov stc sbb or add and sub stos mov adc xchg movsb pop adc mov stos and adc lods sbbb jmp pop sub cmc mov inc jge inc nop sbbl inc jnp cmp stc sbb rcll mov sbb fs pop add movsl and jmp xor sbb dec push adc push rcrb adc xor sbb adc xchg sbb inc sti ljmp imul pop cmp adc bnd adc mov dec inc adc adcl (bad) jle inc in or in pop pop adc adc pop push adc adc pop pop add fwait mov pusha repnz xor cltd popa mov adc inc mov repz push xor subl clc pusha adc mov (bad) ror insb jae fwait sub pop (bad) repz adc add cmpsb test loop xor cmpl insl xor dec dec pop and fidiv loop sbb cltd lock adc pop iret pop bound adc mov pop jo adc scas fisubrl aam fstl es aaa andl test (bad) jmp add fsubl fwait mov push mov xchg cmc in adc mov cmp pop add cmpsl pop test pop adc outsb jbe loopne out sub adc enter lea sub shlb fwait movups jp adc mov jo xchg add jmp rcr sbb sub movsb push jne iret and sti push mov add pop cmpsb punpckhbw inc adc mov and jae jge and push jle push mov mov cld xchg adc fwait lcall int3 inc xor bnd adc fwait push pop jle and les loopne jge stos addr16 pushf test push jecxz xchg push sub btc adcl loop cmp mov mov fimull test adc stos and imul es out loope or ss repnz pop iret xor or jle dec xor icebp lods imul (bad) shr insl or sbb pop dec leave or addr16 jnp mov cld sbb int add and cmp jo leave jbe add je repz fnsave or adc inc sub or mov mov fbstp sti adc out xlat adc mov fisttpl int3 dec shrb outsb dec (bad) and pop or (bad) adc mov cmc pop adc imul addr16 popf je fisttp add fcmovnbe fcompl ret xchg lods dec (bad) mov nop adc jb lock ffreep sar push cmp mov mov incb add push mov adc scas xchg leave das and pop test mov sbb repz test or xor push enter addl jno xchg jmp pop or add push push adc pusha mov xor jne pop (bad) mov (bad) clc jno jecxz jge in pop or adc jno arpl mov mov lcall adc adc (bad) ja aaa mov insl es adc cltd sub test daa dec adc ja pusha jle and mov imul fstps jle (bad) pop arpl lock and iret adc rcr xchg sub adc jo xchg inc nop (bad) lea pop fiaddl pop lgdtl ret roll jecxz adc fbstp dec adc daa adc adc mov nop adc stos xchg push (bad) jne dec xlat lret push cmp xchg jbe movsb or imull call push mov outsb sbb sub fs mov mov (bad) pop aaa sbb adc mov xor scas mov addr16 in test sub adc xchg cli ljmp and test js sbb (bad) (bad) jns inc rcr outsl adc ljmp sbb push xchg je add mov xchg mul add xor aaa in adc sub ret and mov add jb test out adc jne fist and mov adc out or xchg sbb push scas pop add mov and mov and mov mov dec outsb or jae or xor les sarl sub and pop xchg sbb loop iret rcl aam jmp (bad) negb jl mov in push or push push cmp jl fsubrp int3 cmp jecxz push jns sub in adc and xor es adc add test and mov pop aad xchg push aas jmp mov jbe sbb add mov arpl adc xchg mov (bad) adc orl mov scas jne and (bad) push inc daa repnz push xchg dec mov lods push adc mov jo int3 cmp cs push cmp pop add mov scas sarb ret paddw ficoml xchg push dec call aam lahf mov or (bad) pusha scas add sti test inc mov jbe dec rcll pop cmp mov (bad) movb rcll in adc or dec mov ss xchg jnp pusha xor dec adc dec faddl adc andl mov loopne add movsb ret adc push adc popf test std imul fsubs js inc mov jno fimul add pop adc pushf jle mov pop dec lcall in fwait xchg adc adc jne sbb dec mov xchg sub add xchg (bad) xor push imul or xor in shrl imul popf inc pop xor aaa push bound mov in jae and repz cltd xchg lods lret arpl jg shll add add loopne pop cmp adc das or sub mov lds or dec push nop mov repz (bad) or pop rolb lock int daa aas fwait out mov adc jbe rol nop lret xor adc mov pop jns popf mov or lret jnp push push sti (bad) sbb repnz movsl adc mov aas ljmp pop (bad) mov dec sub xchg jp adcl cwtl sbb cmpsl push cmp mov sti cltd mov jo cmpb scas mov sbb jmp sbb jmp int fcomps mov fucomp test sub dec cmpsb jno ds fisub pop xor es xor jne push add cmp jnp ja pop jno cwtl int sbb jae scas push lret jg cmpsl mov movsb jno dec testl xchg pop jo fstl xor mov add leave mov jge dec adc repnz js test or adc push gs clc pop pop adc mov jmp std inc adc adc adc lods lcall fwait push pop int xor sbb and inc pop mov mov mov cmp lret pop out (bad) into (bad) negb fnstenv xchg mov inc add aad fwait push mov pop xchg mov and cmpsl out xchg scas pop mov leave pop sub cwtl add pushf loopne jo pop adc sub dec mov adc test lock jbe not js xchg lahf repz xor xor or jmp ror hlt adc add push test push mov or sbb xor call xchg mov sub cmp repz test xchg mov mov push repnz dec adc lret repz loope (bad) stc insl int push repz mov jmp loop pop xchg xor adcl adc stos adc daa (bad) jl fistp mov adc (bad) sub adc loop (bad) adc test cltd adc lods add pushf bound xchg mov adc lahf imul mov inc push ret xchg inc and jb stos cmp das cmp sahf js jno addr16 jbe sbb cmp stos in sub xor aad jno dec pusha add push and popf adc into imul cmp pop js pop inc pop (bad) mov lahf lock rcrb scas sbb adc das push jl push mov mov jno adc mov das jne adc adc dec std add adc sub mov es andl pand jb repz fsubl je adc icebp popa imul mov dec lds (bad) cmc divl or inc dec jne xor push jbe lods dec insl gs dec fld1 sbb scas xor gs in add leave mov (bad) xchg adc pop pop frstor clc mov adc cmp jno mov (bad) or lret repz mov pop jmp xor mov and inc push mov adc adc test mov push fldt mov lock pop inc iret xchg out in je sbb mov mov adc cmpsb stos jnp and jne push or lea adc xchg imul dec and mov mov mov or sub jne shlb lock push popf dec sub adc pop xor xlat mov shrl std cmp test mov pop xchg push lods nop dec lods adc mov push jp decl jg push jbe fcomps mov mov push int3 aas mov pushf pop xor jb repz or dec shl xor mov xor adc fwait std ljmp mov jb adc sbb adc fldcw cmp mov (bad) fisubrl stos adc lods sub aaa adc inc xchg cs xor xchg push loope outsb adc mov xchg rorb cli push or dec mov inc mov fucomp adc cmp adc out fmull or adc adc aam dec xor adc stc daa adcl inc (bad) outsb ljmp mov (bad) cmpsb pop mov inc sub mov or repnz pop cmp xor lock int mov mov cmpsb data16 dec jno sbb (bad) (bad) inc adc adc push jo clc cmp sbb ss jae add and stos xchg lret pop shr push or mov out in rcll lods and outsb adc jae jno mov call les sbb and adc adc outsl addr16 fwait mov jg push sub fs bound mov in sbb (bad) mov sub mov pop pop fs xor inc mov test add pop sti pusha mov (bad) (bad) mov js xor xchg dec dec pop mov cmpsb les dec nopl jg aaa adc adc pusha pop notl icebp stc push lods (bad) mov jmp fucom adc mov loopne xchg js sbb insb and repz push daa scas sbb sbb popf das repz adc xor push and xor mov and stc test push xchg pop adc out sahf push test and repz xchg stos (bad) dec in push arpl push push jns idiv xchg dec adc (bad) jle ds xchg shrl xor mov push mov adc mov xchg loop adc (bad) sbb xor mov mov pop mov fwait push mov jle mov pop adc divl test in pop ss add mov fdivrl adc jmp xor xor jge (bad) and je out cmpsl adc enter int3 sbb popa fidivl fist mov xchg mov mov outsb int adc jmp mov add loope pop lret call sbb and sub xor in adc mov (bad) xor mov repz cmpsl std or out enter nop int3 popf cmp push jl mov (bad) adc xor dec aad sub inc mov stos push call cmp sbb aaa addr16 push imull aas xor cmp imul inc cmp lahf jge pop pop adc push mov mov add aas cld mov ljmp mov mov imul or sbb or dec out push sti add mov dec mov push mov add xchg cmp inc jl icebp enter mov adc das xor adc sarl sub push xchg push adc adc lahf cld dec inc dec jnp adc sahf sbb das pop cld jb or adc push lret fld pause xor in xchg xor mov push dec lcall mov xchg cmp insl mov hlt lds rcrl adc mov add adc mov repz jp add mov cld adc (bad) lret adc xor sar mov or adc mov inc mov stos sbb lret inc data16 jno xchg pop adc hlt (bad) sbb dec mov mov lcall jb mov or les cmp js add mov adc movsl mov aas sbb pop push cld pusha cmp adc add mov xor mov sub or or inc adc pop mov pop imul mov shlb sbb in mov adc mov or sub add xor push jle and out adc out pop dec xor and adc ret pop xchg bound jle loop mov repz (bad) or xor xor adc lret adc (bad) pop pusha adc sub addr16 jb aas cmc adc shl pop xchg mov js das lret mov repz mov outsb add xlat sub inc adc and and sbb fsubrl mov and pop je aas cmp and pushl testb adc add adc lea addr16 loope leave test pop lods push in in jecxz jne sub mov push adc mov aam aad xor outsl loop mov jmp cmpsb adc ds pusha cmp mov xchg iret adc cmc cmpsl and jp stos add leave into iret pop pop adc inc push jge icebp fmull mov in sub sub push gs or dec adc mov inc imul fcmovnu rcl cmp push jmp pop pushf mov hlt jbe push test mov mov jnp ds hlt (bad) out mov jmp aas mov adc movsl dec jb sbb adc std mov xchg insb sbb in cmp imul sub adc dec loope push jo popf and inc fwait or or mov test xchg aad adc sti jl jns push lods les mov jno mov cmp popa pop fwait dec pop sub scas int3 repz test fs adc test sbb sub adc mov fldt push mov mov mov xor cld add rcl out cmp mov (bad) lock inc mov sbb pushf adc cmp ss int3 mov cs pop push jae add pop std addb or (bad) and inc test out ljmp mov adc fidivl outsb sub and enter pop inc dec dec pop rcl sub jae xlat js or xor fdivp xchg sub mov mov pinsrw shll mov arpl scas das add aas mov adc es push inc adc pop cmp xchg or cmp cs js sbb iret pop nop call add pop push (bad) repz mov xchg dec mov call rcl sub push adc (bad) push adc out sub aaa xor rcrb pushf icebp mov and mov jmp mov cmp outsb movsl leave adc jge es fcmovnbe aam xorl mov in (bad) iret sbb jmp clc push ret cmp xor sub insl jecxz dec sbb or adc dec outsl mov adc arpl fadd push mov mov insb dec add adc pop ret ds jnp cld inc mov jne inc (bad) fimull mov jb mov sbb fdivs inc adc mov int sub adc inc pop gs imul push add sub out fst pushf lea xor out cmovg adc fsts dec cld mov popa add xlat adc fisttpl inc in mov xchg ficompl arpl fdivrs adc adc or adc dec or adc mov xchg push adc add mov or adc gs pop sbb and sbb popf xlat xorb subps jmp rcll adc shlb inc je and xchg pop enter movsb cmp outsb push fsub mov mov loope (bad) stos or std mov movsb xchg or xor dec pop adc push pop mov int3 pushf mov adc repz movb sbb jl std pushf iret je out sub leave adc push lahf sbb js in stos icebp jnp repz ljmp xchg test adc lods jbe out mov stc ss icebp and int3 xchg cmpsb js popa jb fwait mov inc outsl sub test or lcall jae inc cmp pop mov pop cwtl or (bad) repz sub mov (bad) testb je xor out add cmp mov nop cld or adc roll jns and jp push jnp push sbb mov shl inc ss adc dec jl fdivrs inc adc insl mov xchg xchg jb scas ljmp inc nop movsb xchg outsb aad pusha pop es cmpsb lds adcb aam cmp sti push imul adc scas pop and fdivrp and in pop push in push adc or aad mov inc fwait or jg (bad) ss movb xchg xchg rcll mov fnstcw add adc or pop stc mov xchg clc fsubs mov lret adc outsl or adc (bad) insl mov inc mov jge int3 aam and (bad) arpl scas insl mov dec jmp scas pop push mov mov adc repz out push jge shlb mov jno xor fisub cmp mov nop pop and js pop pop dec int (bad) dec inc stos adc and dec mov repz lahf dec adc nop add (bad) sbb adc add xchg adc out mov xor hlt (bad) pop movsb jnp xchg cmp insl pop dec xchg jg xchg js xorb or (bad) das adc cmp and push in xchg xchg test xchg jge adc ror fs fwait sbb jbe pushf enter or mov imul lret fwait adc add test cmc lahf stos sub scas mov je jns mov adc jne and adc aaa dec mov cld xchg fbstp adc outsb es mov adc pop add push fs leave adc or fstpt scas sub (bad) fstl inc sarb dec add hlt xor adc push inc adc (bad) mov in jle add adc lods sahf and (bad) adc repnz jg adc clc je sbb flds adc mov jecxz push cmpsb jp mov push sbb addr16 std outsb mov cmpsl scas mov jb dec repz adc js pop lock notl das mov mov or (bad) fidivrl sub in mov cmp lock dec lods sub repz or pop sub ds lock adc arpl (bad) rclb mov cmp loop fcomps xchg (bad) mov mov adc lcall adc gs (bad) adc add out (bad) adc dec cs mov (bad) incl add ret ficomp sbb repnz push adc (bad) jo es push xchg jg insl mov negl test out fisttpl lret push jmp push (bad) adc cmp mov scas xchg stc outsb sub fucomp xlat push lahf call add pop add mov dec mov in adc add icebp inc mov sbb lock mov push or adc push adc (bad) xor jecxz adc sahf mov xor cmpsl mov (bad) or rclb mov adc mov movsb das (bad) push aaa cld xor adc and dec or xor cwtl lods sbb nop fcmovnu mov xchg adc jg pop adc dec jno sbb adc outsb stos xor xchg scas or dec data16 jmp jp fwait mov sar insb rcl (bad) adc jecxz adc out push scas pop cmpsb loop bound nop jmp or push mov sbb pusha sub adc jae and lods inc cmp or cwtl mov mov add addl (bad) cmc sti push call into aas pop and cmp jae xlat jbe adc pusha xor adc mov jmp fs add adc jno bound loopne adc mov icebp mov and fs sti jp movsb cli jne (bad) adc sbb (bad) in xor test adc or pop xchg imulb push test dec sub mov mov xor add adc mov mov lcall daa and inc add (bad) aam cmpsl adc fcmovnb mov mov pop imul mov xlat add mov xchg mov mov mov jne movsl cli push adc xchg insb push jg adc push (bad) repz and jmp mov and sahf hlt cmp mov scas in cltd jno mov sti addr16 or repz push mov int cmpl cwtl mov sbb frstor test lock adc mov xor mov cld xchg adc push xchg inc sqrtps mov jg or repnz adc jns and dec test mov iret divb sbb in addr16 cmpsb adcl icebp rol jae test push cmp inc loopne xchg jecxz cld mov push mov mov inc imul js lret mov adc mov adc jg aaa pushf out adc add xor (bad) js adc cmp fadds shr adc push push loope outsl mov add aas jmp adc sti mov mov lods mov popa iret mov add xchg inc scas cld imul (bad) push outsb or push call cmc adc adc xor in push or push (bad) xor in cltd dec and cmovae xor cmp loope pop sub sbb mov adc xorl scas dec icebp mov cwtl push pop xor insl or scas mov stos (bad) adc mov or test test or adc push gs lods popf arpl jbe push stos fs xchg rcrb push (bad) out rorl divl jae int3 pushf lods or mov sti jg lods rorb movsb pusha jp jnp ret lea (bad) xor cmp rcr jg xchg ret insb je jmp add adc push popf dec add sti or or cltd dec aas lret mov add popa xchg jo and or (bad) sarl pop or cmp mov loopne rcll lods cld sub cmp pop ss adc cmp jno sahf mov sbb into cs shrl cli iret scas jnp int3 adc xor cmp pop and sub cli xchg adc mov xor add or mov or dec pop out popf pop add xchg adc mov adc pop xlat repnz loopne loope mov movsb adc arpl push dec popf and pop inc push adc out fbstp repz addl adc (bad) (bad) repnz mov outsb and mov lret cmp xor ja xor (bad) adc adc push (bad) push xor roll mov aas inc ljmp test pop jns iret xor rcr adc lret jo jl xchg adc ds jp xor adc data16 xor out adc loop push adc xchg lea fwait xor add mov mov and imul jne and div sub int3 pop paddsw rcrl in adc cmpsl add out and pop fcom add jns push iret sbbb dec repnz test add out repnz enter idivb rcpps ja ret push outsb sbb push mov movl andnps mov inc xor jmp jmp test jp cmpsl xchg repz movb hlt loopne push sbb adc xchg or jnp mov adcl mov mov les and adc (bad) mov add and movsb or (bad) sti sar aam inc cmpsb adc inc adc repz decb adc mov mov mov adc test inc add sbb adc ss mov push xor push in or mov sbb rclb hlt mov pop lods or fstpt je push outsl adc shrb aaa movl mov jne cmpsl lds les xor pop fisttpll push push cmpsl cmp addl sub or add add xchg test mov xchg idivl pop scas xchg xor or adc fwait aas call (bad) iret jmp push mov sbb inc xor sub mov fdivs int pop rcrb aaa hlt adc int3 mov in xchg sub test jp fs loope jecxz inc fdivs push adc push jg cmp cmc sub add enter or adc xchg sbb adc dec adc push push roll (bad) fsqrt mov or imul outsb pop int and xchg adc cmp out loopne sar das adc fimull sbb fsts cmp mov sub cs repnz cmpsb movsb mov dec stos jecxz aad jp cli scas inc jnp scas mov mov mov or xchg sub pop adc add dec or dec sbb xchg push adc into hlt push xor test je sub or xor pop (bad) (bad) fsubs jbe hlt xor add add cmp (bad) ja mov cmp (bad) out jle xor pop add add xor rclb imul (bad) xor adc icebp outsb les mov bound sbb and sub and gs pop mov mov test fnstsw push mov addr16 iret xchg adc or lret jecxz cltd mov fnsave mov or (bad) int adc cmpsb (bad) out cmp jecxz imul adc push mov cwtl pop lods xor mov jb adc daa adc lods and ficoml cmc pop pop clc imul pop dec adc rorb out or adc imul xchg rcll dec pop cmp add xchg mov iret ljmp sahf imul repz mov cltd push int add enter lcall adc cmpsb xorb adc add pop pop mov adc add sbb inc or adc imul mov adc out fist inc loope pop addr16 cmp repnz bound mov lds sub adc lahf adc dec jne or insb adc (bad) out jo push imul push push inc mov aad incb cmp adc flds cld xor ja pop or mov mov adc mov push pusha loopne scas out lahf lods nop cmp adc pop push xchg pop jmp mov cmc lcall lret scas stos mov mov push mov adc push xor aas lcall inc sahf jbe movsl or or sub jmp (bad) repz add inc sbb out ss mov and mov push adc mov push dec pop adc mov cs jecxz mov (bad) xor jns xor out sub scas loope adc cld bnd mov gs push loope ficoml mov pop cltd xchg popa adc cmp or out sub scas inc daa ss jl je insl lds js out pop ficoml mov xchg cmp mov ffreep xchg sbb cwtl pop mov icebp add cli inc push mov xorb xchg jno pop stc (bad) mov mov outsb mov dec loopne mov xor rcr rcrb mov adc fnsave fs aas and shlb push (bad) fistpl lods jae ret mov sbb mov imul negb xlat adcl push adc mov cmpsb pop sbb adc test or fwait and (bad) mov fidivr mov (bad) adc cmpsl out and and jp cmpsb inc lcall shrl outsl adc adcl orl push push xlat ja cli adc xchg adc cmp mov push imul dec cwtl add adc das fistpl jbe adc sbb jb sub adc ss es out pushf adc xor xchg loope test adc cmp out decl sub xchg adc sbb xchg hlt xchg mov xchg in adc jno (bad) pop adc pop mov adc (bad) push iret and xchg jb and xchg lcall push mov (bad) xlat rcr push cmpsb (bad) fdivrs mov adc pop mov mov add ja int3 push sarl loopne jb mov cmp add dec xchg insb sbbl push sbb sbb cmpsl inc jp in sub stc push adc xchg adc push mov adc imul int ja stos adc mov (bad) xchg aas add cli aad lods (bad) cwtl cmp adc push pop pop (bad) in mov jno rcll mov jae adc xchg jecxz sub pop cs enter xor (bad) lock lret mov add jp adc pop mov push lea sub call jb jge aad cmpsl loopne cld movhlps jae sahf xor pop andb add jns into pop and adc fdiv subb leave jno mov dec mov ds idivl inc pop stos inc mov adc test adc push ret icebp mov lea movsl adc sbb fisubrl mov adc (bad) outsl (bad) adc lcall aad adc call inc fs movsl cmp pop mov push adc jbe stos ljmp mov lret mov fistpl (bad) mov pop jo pushf das repz inc sub inc or popa (bad) adc stos mov cwtl sbb adc fs jl sub into push outsb popa adc loop mov inc clc adc xchg test sbb loop cmp adc cmp insb push lret push cmpsl sbb sbb negb ss dec jb inc rcrb xchg sbb fnstsw (bad) cmc les jmp inc adc faddl data16 mov xchg loope clc orl iret (bad) in sub mov mov enter add iret or repz sbb aas adc pop ss std or adc in jbe xchg bound xchg jb,pt adc mov aad xchg out out inc or repz stos movsb add lea push adc push mov out inc or fucom je jb data16 add getsec addr16 inc test adc sbb add or sbb rcrb mov mov lea push fstl cmpsl les je mov xchg cmpsb mov xchg in or and adc sbb push popf push push rcll pushf daa adc mov sbb and cmp outsb sbb outsl xor xor or mov xor aas les fmull loopne arpl jmp int jne push xchg push adc jge enter mov mov sbb stos mov pop and mov stc sub cs mov jle test aad repz aam cwtl stos jnp mov adc nop outsl jo jle jle adc popf sbb lds push or mov ficomp shll push push scas movsl loopne adc cs pop mov adc mov mov and adc sbb hlt sub xchg lcall js cmp mov outsb pusha mov aaa adc aam or ja ret inc push (bad) push or pop fsts testb ljmp mov xchg mov adc mov sti fldln2 lea jmp add insl adc arpl push mov mov out movb in clc sbb popf repz push mov lock icebp repz adc or (bad) xor ds stc cltd mov xchg and movsb sarb or mov xchg test repz mov adc sbb add movsl adc mov and mov aam add xorb (bad) push shlb adc lock pop xor cld push sbb and ret jae pop inc push sbb pop sub sbb xor push dec add daa std js cmp lods insb int mov mov (bad) mov mov mov cwtl ficoml and adc cmpsb nop add aad and pop add fisubr jae jno or nop mov push (bad) cld or cmp into dec adc push mov push jno mov push adc pop test adc movsb sbbl in popa icebp adc jb out mov mov xor add pop movsl push nop xor (bad) sub adc mov arpl nop je sub out mov adc jbe lahf xor test cmp out jg inc push mov lret jmp mov xor (bad) pusha in jge adc cltd or adc or add lahf xchg repz mov (bad) and sub adcl push and enter adc fwait scas add repz inc adc ret push fnstcw push mov pop aam loopne sarl sbb adc repnz cmp (bad) arpl (bad) mov stc adc push jecxz (bad) adc popf mov lahf pop test adc push (bad) sub adc dec pusha (bad) idiv loope and mov xor out sub data16 int3 (bad) mov js inc cmc int test mov ljmp mov cmp std push insb mov push adc dec es adc cmp nop into mov insb lds sbb mov (bad) ja inc and stos adc xchg clc jnp sarb sbb (bad) or add adc mov mov adcb movsb repnz ljmp mov loopne adc test jge dec rclb pop shlb movsb lcall addr16 add xchg lea jmp jno adc adc imul pop or xor push cmpsl adc xchg adc add iret adc mov mov out mov lods rolb xor ljmp adc adc mov push sbb xchg es xor stos xlat test adc (bad) lods mov pop adc outsl mov push leave cmp roll dec mov sbb xor pop jns stos pop cwtl cmc inc adc (bad) aam mov scas out jmp into inc mov mov bound mov sbb mov and (bad) (bad) inc js adc and fist (bad) je imull aam adc movsb test mov je mov mov (bad) mov sub add fcomip mov or in or in jo xchg dec xor rcll xor test push dec lret push jle push in adc or adc mov pushf xlat iret sub pop cmp in xor adc (bad) lret cs call jecxz adc adc nop clc and fwait out imul push or ss movsb mov jne xchg mov jmp push enter pop dec xor adc push adc pop les fwait sbb or cltd lock repnz push stc adc test adc inc int sub xchg stc xor push (bad) push repz pop mov addr16 (bad) cmp add pop push fldenv sbb jnp aad icebp dec outsl xor int repz sahf fdivl call adc inc add push dec xor insl or (bad) scas jge adc xor or out repz or inc into mov movsb adc test jne sbb test xor mov add jg fdivrl and xor mov sub pop repz jl (bad) enter adc cltd cmp mov cmp pop sub xlat sub sbb in cmp adc push sbb stos adc (bad) or sbb adc je repnz mov popa mov jl or push mov shrb popa or adc push (bad) jno mov mov or repz adc add ja push test (bad) loop pop bound aam add das arpl xlat cmp adc out or imul mov mov pusha mov clc lds fisttp adc ds pop xor xor clc lock xor pop adc int in mov jnp sbb test xlat cmp rcrl mov push jecxz cli stc mov out pusha ljmp adc push sti out inc and movsb dec insl jg es add repz push pushf jnp adc jns mov (bad) leave and pop mov lea fiaddl stos sarl jne and xor cmp push adc cmp sbb push loope jl push push unpcklps icebp mov mov outsb dec repz xor movsb gs (bad) xor mov test adc dec sub outsl xchg mov sbb in jp xchg mov xor adc cmp addr16 dec movsl push repnz stc inc in mov sub adc icebp mov das std lods shrb xchg mov xor sbb xchg mov sbb mov sub not lea stos adc jp in (bad) arpl test cs xchg pop icebp or aas mov jg sub adc js hlt out mov sbb cmp (bad) jno loope cmp scas mov call aad or (bad) scas or sbb call sub icebp mov out js (bad) adc sub ret aam push push sub mov xchg sbb add ret lcall push data16 push and rcll dec xor push adc decb sbb mov aaa popf mov xchg adc stc adc lods lret (bad) sbb xor mov adc push and mov add jbe add mov test or sub adc orb add scas lret xchg mov mov and inc mov nop inc (bad) jp adc ss mov cmp sbb dec jge out add lret jnp mov and cmpl xchg aad daa je add lds adc ja aaa mov mov add pushf mov shrb aaa cmc mov (bad) cltd adc loope stc dec cmp dec (bad) xchg adc push jb adc das cli insb adc (bad) xchg mov ret dec test sub adc dec push pop movsb lock adc sub in jnp int3 in or adc add hlt int3 je,pt push adc fdivrs paddusw out pop add jg (bad) adc (bad) outsl popf fs mov insb push into push dec jne (bad) xor aam jl pop movsl mov sbb imul mov ja add cmp fs add add cli in outsl xchg orl sti loope jno bnd out mov pop adc push sub pop sub dec test (bad) je and inc repnz sbb aam test and stc mov dec mov sbb das adc xchg dec adc inc add jp fucom repz popl adc push bound pop push std adc scas rorl jns (bad) jae loope nop adc pusha out inc adc std fdiv jmp in popa sbb mov mov xor jle repz popf or aad push fwait rolb xchg adc cmp jmp or cmp movsb xchg pop dec xor repz outsl mov stc or pop cmp adc xor les xchg and (bad) push adc das pop aaa bound sub imul shll mov jbe xchg cmpsb es dec xchg sar inc jae adc repz movsl pop cld xor or insl cs or adc out stos mov lds xchg mov push xor ja inc mov jbe xor test in aad sub mov shll jmp les jbe popf outsb or cld mulb jno je sub gs in test adc sbb std (bad) scas fist out or or enter add and jbe in adc ret adc mov es or dec pop sub adc cs test imul pop (bad) pop and mov push inc jns jne aad in int3 cmp adc xorl xchg pop push mov inc adc (bad) movups rolb dec adc mov adc insl inc push jne fucomp push cs mov rorl ljmp out in nop or and pop push sub shlb inc pop mov pop mov rclb mov dec ret or cmp sub adc test fadds outsl jmp aaa lds add in push roll pop int3 aam dec fwait adc pop adc cmpb repz mov loopne test call pop mov xchg xchg fsubp sahf or jp or adc add xchg jle cli adc dec test movl mov jle hlt aad mov or bound aam pop (bad) int stos mov pop pushf dec adcb push sbb add ljmp ss adc or mov dec adc dec mov push add jle js sub or inc out adc mov pusha aad repnz cmpsb rclb ss cltd xor xchg into and imul adc dec xchg xor in mov adc stc inc inc lea mov insl jl outsb pop roll jg cmp stc cmp sbb xor in mov (bad) mov dec inc test add adc imul jnp ret mov pop push into lods pop repz cmpsb mov rcll pop js daa aad test mov pop xor pop movb jl rcll push popl mov adc stos xor icebp mov dec insl sbb adc aad cld add or aaa mov push mov data16 in and cmp sar jp push adc or ljmp negl into int ja enter ret xorb adc sbb (bad) xchg rcll and fimull cli xchg mov dec repnz ljmp jl aad dec lahf and dec outsl mov lock jl lcall ret dec pop xchg stc or adc inc aad fcomi js mov cli dec scas cmp out mov or hlt out or arpl test xchg xor lcall fcoml adc fimull scas (bad) outsb daa add mov sbb xor out loop shrb test (bad) pop (bad) push adc xor andl cmc insb mov arpl test add xor pusha (bad) jle push sbb adc scas mov add xchg std (bad) mov lret add jp into adc js cld add adc lcall mov jg adc xor (bad) dec rclb adc sbb adc out mov mov sub cld inc fstl es inc scas mov or mov jg adc inc std add lcall pop adc hlt push jb jmp mov cmpl sub jl xor (bad) test sbb mov pop jecxz pop cwtl addl addl mov mov hlt inc inc add out push xor adc call mov adc pusha dec cmp pop dec sub lcall movsb loopne dec jo frstpm(287 (bad) mov lock loope test imul mov lret xchg or outsb jge adc mov jg imul cmp lock adc xor adc gs cmp fucom mov cwtl loopne inc adc push mov dec xor mov or pop jnp inc mov or fldt repz bound loope or decb mov leave inc pop bound out adc insb pop mov add iret je fmull arpl and mov pushf push add nop cmp ffreep adc jge clc dec dec add add push loop cmp add xor mov scas imul adc les mov jnp lcall or dec adc jle ja lods leave push adc int push mov (bad) roll pop je dec out jl dec jo outsl lods mov mov inc jg jecxz and adc movl push inc or adc mov xlat xchg xchg repz adc mov push adc loopne movsl dec pop outsb sub out xor pop or nopl or daa mov adc push mov jns fidivrl or xchg repz lds xor in pop adc in pushf adc pusha add mov push aad rol rclb cmp cs mov cmp fimul push and fbstp imul adc xcrypt-ecb cmpsl (bad) fwait icebp or je add adc loope jne enter loopne mov sbb push or dec xor repz mov lcall les mov rorl (bad) sahf cmpsb andl mov xor sbb testb xlat pop mov test pop out push xchg lds adc jns xor pusha adc adcl push dec hlt daa add adc lahf sahf lret pop in xor xorb (bad) jno sbbl ret rcll dec dec cmpsl lock adc inc rorl addr16 int xchg stc cmpsb mov pop mov lret mov imul adc insb and cmpsl or sbb popf int3 adc outsl xchg flds or inc ds cmp mov (bad) sbb adc jo adc push cmp adc xchg sub dec adc pop and jle es jae icebp pop adc mov clc lahf or adc sti ret outsl es dec sub xchg lea inc or dec xor adc arpl adc out pop pusha call in cwtl and inc scas pop mov mov add adc inc xchg cwtl popf adc movb and xchg fldenv and pop jge jg jbe scas sbb adc adc push out jl repz mov mov outsb in lea jg push stos inc cmpsb pop aas sub pop sbb adc ljmp lods mov int fsubl sbb inc mov and jae lods add xor jle fldcw cmp (bad) sbb imul xchg sub mov fistl inc (bad) das push repz cli pop fidivr mov mov mov sub (bad) out adc add je test cmp xchg push popf jo adc dec sub ss rolb fidivrl int3 hlt in mov mov push inc cwtl pop fcomps pop ret cmp add stc inc fwait in lcall mov mov fmull stos add hlt sbb aam adc shr jae xor test in sub adc fs aam push adc int3 and dec pop mov test into xchg xor adc mov dec aaa repnz ss jne into jo mov aas gs pop clc out xchg push mov pop or jl xor addl lds jns iret rol dec stc fidivl pusha lahf or adc jbe jno add pushw imul lock mov outsb sub mov xor sbb adc mov mov (bad) xor pop push xchg mov outsb pop or xchg adc rorb (bad) divb les mov jp xchg mov cwtl lock push cmp mov sub lock je imul movsb fbstp mov jge insb jno fstpl cmp cmp jns push mov adc adc pushl mov faddl pop jecxz push fimul jle incl adc fs or bt outsb dec pop (bad) fisubrl push adc sbb mov xchg insb pop enter push jg dec movsl adc out lds clc adc inc push std cmpsb mov adc xor cli pop or outsb shlb sub cmc movsl sub push out inc repz mov es mov notl add popf cmpsb inc xrelease repz fisubl mov fist mov push xchg and xchg ret cs pop ja in arpl stos sarb nop dec ss adc je sbb adc push mov jg mov rcrl mov inc test insl adc in mov sub or out pusha movlps dec push daa adc jne,pt mov sti xor ret mov push cmp adc ret sbb fcomps push jecxz push mov jns pop jne xor inc pusha stc es int3 rcll test xchg (bad) mov sbb ss inc stos mov push pop pop mov xor add dec pop and or sbb adc stos cmp inc xchg mov cs sub popf imul adc loop sbb ret jecxz adc mov cmp in push push cmpsl mov lret add mov dec cmp jl mov push push and pop sub pop jmp pusha dec loop pushf repz add jb (bad) aam dec pop sub adc scas inc pushf jb dec adc cmp rcrb sub adc ljmp ds adc (bad) mov jge xor mov push xor fsts lahf cs jl nop (bad) cltd adc and xor push cld cmpsl repz lea jae adc mov mov lods daa sbbb pop adc mov push mov in add xorl pop shrb cs adc cmpsl fs into stos adc lea ds adc ret scas sub mov outsl push or icebp mov insl test or repz sarb not adc dec rolb adc add mov jne cld mov adc data16 adc push cmp and adc (bad) jbe es mov adc xchg cmpsb popl pop cmp lar xchg ss and into inc adc inc aas mov xchg arpl sub (bad) jno inc xchg (bad) rcll adc loopne out adc sahf mov adc (bad) insl mov xor sub arpl sbb mov rolb add add cld cmpsb and push imul push inc into pop popf pop adc mov mov push arpl cmp adc mov pushf jle pop mov and test outsb (bad) add inc int3 aam out loopne (bad) xor adc std jbe cmp pop loopne jb int mov in punpckhdq push jne dec cmp jmp cmp test push (bad) adc ds lods cmpsl xor fisubl movsb adc (bad) int3 mov cmpsl jecxz pop cmp pop jne (bad) test popf adc adc cld jge out ja dec adc (bad) jbe push add sub mov sub xor test cld aaa xor push sub or xchg adc push sub into movb xchg shrl mov jle mov decl dec sub add xorb mov pop inc xchg adc add arpl sbb inc pusha movsl dec or cwtl mov inc popf jae xchg and sbb pop repz ss lcall (bad) iret mov mov test loope out pop push (bad) mov pusha ljmp push fnstenv je push rcrb daa movl dec inc adc mov cs ja icebp test outsb sub or push mov adc lods pop mov jb and pop and test adc jno int cmp fs movl aam mov dec push fcomp shr (bad) adc xorl sub sbb imul adc xchg mov rcrb inc xor loope xchg pop adc aaa cwtl imul add call incl push pop push mov fist pop and daa inc or (bad) xor jmp xchg xor seta fsts stc fs sbb pop fdivl push adc mov xchg addr16 push xchg adc (bad) jp sti (bad) adc push pusha and (bad) popa inc push lret push ja aaa xchg sbb iret adc gs out xchg repz call (bad) sbb pop push mov ret adc out cmpl dec add or mov push xor pop jo adc push rcl int3 dec adc lods cmp xchg fptan loope sbb adc loopne jge sub xchg and ja,pn adc cmp lret dec push cmp test adc push cltd dec pop adc pop xchg inc adc push dec push das or mov sbb and sbb sub adc pop push inc dec clc jbe int3 ja cld dec aad mov inc cmp push test cli shlb xchg bound push repnz mov jbe mov add adc adc lock push cmp cmc adc and adc inc dec sub and shrb jge jp lods scas cmp je jecxz adc pushf dec inc xor daa xchg enter fiaddl repz call shrl ljmp adc dec out movsb pop cs mov xor mov ljmp push nop daa cmp loop sub adc arpl jne xchg or out xor xorb fcoml rolb insl or sub pop addr16 (bad) mov cmp add adc sbb inc mov call int adc jle movsl mov adc roll adc and sub fcmovnbe divl fistpll or adc sbb test aaa imul and xlat ds rclb mov fisttpl xor pop cmpsb add cmc adc or int mov push xor shll pushf add cmp sub cs mov fcmove mov jge cwtl (bad) dec add stos cld add xchg jb fnsave jmp cmpsl or lds sub pop test xor jb mov pop push sbb cmp (bad) scas pop or mulb inc inc (bad) nop add adc xor add push mov mov pop movntq cwtl xchg jl jno lret cmp pop int jnp cmp lret dec test push push pop push aam adc jae sbb pop adc je adc xchg enter int3 fs xchg xor es xor loop aad add add mov xchg not push pop movsb adc and sbb js xchg imulb push lods pop adc xor fwait mov cmp inc insl jbe daa adc mov jo mov cmpsb add xchg xchg int inc jnp (bad) adc pop (bad) xor fldt flds or jno das pop or and sbb xor pop adc pop mov hlt adc pop jl test add sub adc pusha jmp push in cmp add xor mov adc cmp sbb add (bad) cmc mov jnp mov and jp lret adc jne and mov loope push subb mov jp popf loopne pop adc imul jmp divb mov mov add rol pop pop xor mov xor sub (bad) rcrb jmp negb jb add pop pop sbb adc inc push xor into imul mov dec adc jg jno dec mov shrl enter lods pop mov or cmp stc mov push adc into iret xor imul (bad) push xor adc lret pop push adc enter decl test aam adc inc push and pop jbe xlat adc lods jno inc pop mov sub dec adc stos aas or dec jbe out das arpl lds sub push fnstenv pushf jbe push dec insl or in and inc mov pop scas adc or or js adc divb push or rorb stos loopne and ficom xchg leave (bad) and dec rorl adc icebp pop inc add xor iret sub shrl dec out xor rorb outsl xor nop mov rorl pop fbstp cld notb (bad) xor icebp push mov scas adc pop test and mov cmpsl jb (bad) addr16 dec orl repz movsb stos es (bad) incl adc dec jle hlt push cli stos add shl push adc int das inc lds dec xor push fbstp mov cmp (bad) das inc outsb xchg in adc scas sub jae mov lods push sqrtps xchg rcll cmp imul pop std or cli dec push adcl jae je or repz loop dec xor and js cmp mov cmp adc fucomp mov jne test adc addr16 scas clc out xor jmp push add or adc shrl jb adc push es and adc push (bad) xor lds sub xor jo mov lcall adcb faddl adc pop repnz jne mov iret xchg xor mov (bad) hlt pop (bad) icebp or mov in ret mov adc orb adc sub add adc add mov pop (bad) adc sub enter jge jl lods aas stos es stc push cltd adc push mov pop and sarl arpl cwtl lahf jo jae mov mov pop mov adc mov daa xor fcom sub stos adc jo mov fisubl jg repz movl aad push movsb lds mov int jne lods nop mov sub adc mov loope (bad) movsl inc lods les inc pop push scas das adc ret mov lock std xor sbb insl xchg cmpsl add punpckhdq rcr es int pop loope ret ljmp xor sti pop mov rcr leave jno repz mov scas adc or out repz adc xchg in or mov and adc das jl into call enter add iret xchg xor sbb inc lahf lds repz clc (bad) mov cltd xor cmp inc bnd mov or cmp adc sub (bad) cwtl mov add (bad) jle jns push fnstcw jne in and adc adc jae jb cmpb and adc pop cs or mov adc lock adc aam adc lcall adc jmp in test jmp les or repz add mov inc adc scas sar sub adc jmp jle mov inc fcmovnbe nop in adc fstpl xchg outsl inc add mov mov lock ds adc jge sbb repnz lret pop loopne xor adc cmc loop adc test (bad) xchg adc and rolb xchg adc add inc ljmp ss inc adc sub mov ljmp xchg jno mov adcb data16 scas xchg lock je inc lea lahf adc movsb outsb cmp xlat pop repz lcall idivb lret rclb mov or pop push pop inc add gs xor cmc dec adc cmpsb lahf es jns in xor leave outsb das mov sub adc jne or inc cmovnp insl dec push xlat push rorl xorl out or mov sub lds in or fstpl add sbb lcall adc and mov scas xor insb scas sbb ljmp or cwtl lods jle shlb rorb cs cmpsl stos aas sbb dec sbb movntps jp cltd fwait mov adc lahf (bad) jmp mov inc mov lods mov div adc scas inc mov mov out xor cmp leave adc hlt or pop lock adc xor sbb repz mov out mov rcll add test adc xor or add xor testl and popa jp sub stos andl pushf or roll mov inc add in or mov sub fdivrl stc sbb sub adc aas iret repz cmp imul je mov xor sub mov jbe pop call inc call sahf lods cmpsl fadds lcall clc iret mov add out int3 test mov rcll imul or inc add mov cmc movsb (bad) sti imul rolb inc das lret dec fldt inc test xchg insb sbb ss xor adc add popa or xor adc outsl lds adc sarb xchg stos or aas into (bad) decb bnd push test jne adc mov mov or testl repnz leave sub cmp rdpmc int adc lahf cmp shlb adc hlt cli loop jb inc adc or repz insl lds popa cld adc movsl push add adc mov aaa enter push add push inc dec mov mov pop inc push or dec push dec xor negl inc stos push int3 and adc pusha or mov (bad) clc push jmp pop adc in push popa dec loope adc (bad) pop mov pop adc jecxz dec leave dec mov rcrl stos pop sbb test icebp xor sub cmpsb mov mov loope ficom jbe inc popa ja rcrb dec aad mov aas fist mov mov fdiv sub mov mov mov invd adc sub mov lods aad adc call xchg stos imul sub imulb adc je mov jge aaa cmc or loope xchg enter dec xor xor inc scas pop test hlt in scas repz pop mov ret or and fmull gs lea sub adc nop pop or dec mov iret scas push push repz outsb pop cmp (bad) pop loop sbb sbb adc iret push and popf sub mov add mov mov jbe mov adc mov cld fimull mov scas xor mov push sbb es xlat pop sub test mov sub movsl adc adc pop fcomp shr popf adc push cmp add stos mov divl inc (bad) adc out dec data16 adc popf cmp hlt push and sbb dec push adc sub test sub dec xchg pusha loope pop mov fxch les adc or test jmp movhps or imul mov sbb dec fwait jmp lds xor adc (bad) test stos fcoms insb mov and xchg push adc fidivrl mov lcall push mov xchg mov jno jecxz add iret lahf mov sub add sbb adc xchg enter jne mov or sbb mov je cmpsb (bad) sti pop lea mov es ljmp das hlt dec jmp mov lds mov xor (bad) fcoml sbb mov sub xchg adc dec mov xchg xlat mov jno out inc add mov adc xchg xor mov lods xorb dec push test adc bound cmpsl rcll cmc pop sub ss fcoml inc movsl repnz dec stos jg cmp add sbb std mov xchg and xchg aaa jge sbb fnsave call jno add cmpsb cltd movsb hlt and pop adc out push and xor inc mov jo pop add sbb xor or rcll mov jp push lock jno add sub into (bad) pop clc mov mov adc xchg ss or scas or imul fcmovbe pop notl push mov mov cmp or repnz loop in jecxz sbb aas das xor test fisttpl movsl mov clc imul cmp pushf into add adc jge xchg lea push test adc jnp and cmp push mov xlat std sbb sbb xor sbb jg scas push adc push cmpsb add rcll sbb enter jno or push inc ret adc push out shlb icebp orl adc xchg int les sbb push or push cmp ja or pop inc rorb cmp jnp adc loop jmp mov sbb lea and sbb mov insl into add ja xor imul push loop inc adc xor xchg mov add inc push sbb mov cmpsb inc dec loopne add fimul loop stc fmuls adc mov push shrb das inc rcll add ja adc xchg sub push adc loop adc cld adc adc mov idivl cs push jno pop pop sub fistpll mov adc dec inc les adc int3 cltd rclb fs adc fwait ror cmp imul lds xchg xchg lods enter lods adc xchg adc dec mov js daa movlps xor lock mov xchg inc rcll lds repz cmp mov adc xchg sbb and enter jne repz in add rorb lock add cli xchg mov mov mov adc sbb jl cmp into call in mov (bad) cmpsl xchg adc sbb fldcw xchg adc xchg negb popa cmpsb jl adc in loope mov cltd jnp fistpll lcall adc jbe xor pop into mov mov outsl sub (bad) faddp fs xchg adc (bad) cmpsb movsl inc jb jmp pop add lahf or (bad) sti (bad) int3 and pushl cmp mov add dec mov ljmp sub adc dec lret (bad) (bad) push or rcrl sahf pop inc jbe stc adc mov adc push loopne dec hlt out add mov jecxz loop fisubr mov add lods (bad) into or addr16 sbb sar or sub adc pop adc frstor adc dec fdivrs mov and stc add mov add lods push negb lcall cmp movsl mov sti xor adc out push or or adc xchg pushf aas adc sbb sbb push nop pop or stos (bad) (bad) in pushf scas xor in outsl imul mov loop mov push aam inc jecxz iret (bad) dec int (bad) or fnstsw stc mov inc add jo imul pop ds xchg nop pop cld mov mov movsb or xor fwait adc testl jbe test bound insb stos sub jae or pop xor adc lcall fsub add iret dec jne cmp imul sbb (bad) fsubr jmp add adc push data16 movsl adc mov aad sub mov pop fsubrp hlt pop mov icebp or aad adc sub mov mov xchg loope mov sbb mov cmp add addl es pop push xrelease lret int3 mov mov in ret clc add stc xchg icebp adc imul lods adc loop pop adc scas sbb xor ror adc jle jno dec call xor js xchg mov mov add adc out xor jo dec xor cltd push repz or push (bad) mov dec dec sti leave xor das add push nop aaa add jge dec ss scas adc adc lcall hlt jp add ret je or movsl xor sbb imul int ret xchg pop (bad) xchg pushf cmp fild fmull or das sbb sti adc mov fistpl jo scas out cmp xchg jb sti pop push fisttp sub popf jp adcl (bad) and in sbb fidiv jns out mov test jg bound adc push ficoml cmp mov push call jmp (bad) iret pop cli xchg adc sbb sbb imul outsl outsb fnstenv xorb xor js adc stos aam xchg into mov mov dec fwait adc inc sub adc movsl sbb dec (bad) sbb in xchg sti pop scas in rclb popf dec mov and cmpl dec sarb (bad) adc inc pusha mov mov bound fstpt hlt fucom nop pushl sbb jp cmp dec push xchg inc adc jbe (bad) sbb sub sbb add mov adc fildll cmpsl out add adc or or mov push inc sub xchg mov loop aam push push (bad) add lds out sub inc cmp js fwait adc jbe dec pop jmp adc pusha lahf sbb mov mov (bad) jne test xlat cmp mov (bad) hlt mov push xor adc test sub mov or fcoms mov sbb xchg scas repz jle or pop rol stos pop in adc adc ljmp adc jnp xor ss mov mov and jmp popa xor or (bad) (bad) gs sbb and jmp mov insb popf flds adc in add int3 jae and clc cmpsb repnz push push cwtl mov repz or cmpsl mov repz cmp mov adc call (bad) jbe jle gs or cs repz stos xchg mov mov pushf xchg (bad) adc pop jno lock push nop cmp popf or repz add xor push xor add mov addr16 mov lds xchg aas mov push adc jg sub es adc mov test inc jnp mov inc mov sub test cld cmp test lds or mov imul or js pop mov pop mov dec and sbb jecxz dec sbb loopne mov daa in jle push in cltd scas or mov cmpb push xor xlat rolb or bswap and std xlat cmpsl mov sub xor lcall iret adc loope nop mov adc jbe pop ds adc popf stos xchg (bad) jmp imul sahf inc dec out mov enter aam push dec hlt pusha cmp jl ds repnz cwtl sbb xor push dec test nop les pop xor jmp adc sbb addl add adc sbb jbe mov push subl aam sbb pop stos icebp fisubl repnz sub pop push aaa add xor gs inc push or pusha clc xchg add repz push add push mov repz mov jge adc out adc roll xor push adc in xchg xchg adc popa cmp cwtl mov adc test fnsave test nop mov sbb adc push sub enter adc mov push adc push insl push xchg test adc push es in sub mov in xor adc xor dec fcoms mov stc inc js arpl sbb pusha jg insb pop inc adc movsl addr16 adc outsl repnz inc lret adc push dec adc out les mov lret lahf int adc jl xor mov in cltd repnz add cmpsl sbb cmc ljmp xchg imul mov ja pop jno mov popa pop or and dec das inc lock cmp adc stc test jne dec jmp dec dec jl jp ja adc out les xor mov std out fs xor push adc stos cmp lret (bad) dec adc xchg inc xor xor ds cmp (bad) mov in xor pop adc enter ja sbb int3 jmp push adc (bad) adc or pop jnp cmp xorb sbb dec jne int3 mov std mov or sub or push pop ret shrl dec into mov mov int adc mov mov orl (bad) xor out push div cltd or add test add outsl add aam adc jne lea adcl push mov ljmp test pop or sub pop stos outsl loopne sbb push popa mov aaa (bad) xchg mov push xor mov add sti jae push adc adcb cwtl inc dec xchg sarb rol repnz adc mov and xor sbb cld popa xor cmp pop pop or mov mov xor cmc adc dec xor jno dec adc (bad) sub mov flds insl and push int lret jne add cmpl je xor lahf add or adc mov ret test lret iret (bad) xor mov or adc cltd mov test loopne jae mov hlt pop lcall sbb xchg stos repz mov adc jno or add add mov mov add adc pop mov jae aad jp cmp (bad) lds std mov xchg adc push jae push jge dec xchg cmp adcb jg cmp add adc jge pop adc push sbb xor add xor dec jae and pop adc adc jno jmp mov rcrb mov dec adc stc movsb lds ja sti adc cmpsl jb adc inc test sub pop (bad) icebp les xchg out sbb jp jne scas xchg hlt jo add jle,pt lds rclb mov out inc shrb pop jl adc or xor add add (bad) jle orl adc and cli cmp xchg (bad) in mov pop cmp sbb shrb push or lods or (bad) cmpsb sub inc inc pop adc ljmp adc sti add adc cmp sbb pop xor push push lods icebp adc cmp adc pushf imul dec xchg xor inc movsb or add es cmp adc lret mov xor aas popa xchg pop imul rcl cmp add jae push inc add scas pop out sbb std adc repnz (bad) cli cld sub enter adc mov mov into stc cwtl mov sbb repz jno adc movsl add adc insl cmp aam mov push sbb push mov cld gs test fucomi adc ret sub cmp mov add aaa and xor sbb sbb or sub mov ficom jo call jns xchg and movsl push repnz or jbe lods ret je sbb adc cli mov out in (bad) dec ja add stos mov insl fwait pusha aam adcl jmp mov les movsl outsb or das sbb adc int3 call adc and and mov xchg xor leave mov rorl add adc jbe mov hlt pop movsb inc mov adc iret test mov lcall cmpsl idiv repz (bad) mov mov xor mov adc stos sahf jl hlt inc and jg and xchg mul loope (bad) stos xchg add fistpl sbb cs jno sub cmpsb pop icebp jmp adc sbb sbb dec jecxz call popf push divb imul xchg repz lods popa or imul bound call rdtsc data16 lahf xor (bad) pop leave lret adc cld pushf push das lea adc mov lds push sbb out push xor mov out sarb adc adc add setnp xrelease leave or cs insb adc dec mov int3 sbb dec xchg mov aad cld or xlat pop cltd add mov adc inc pop outsb mov jns loop sbb scas adc mov nop fs sub or jb outsb adc rcl inc imul pop adc mov mov jle xor hlt or iret or or adc pop mov sub stc cmpsb adc dec and dec addr16 imul mov push sbb repz mov movsb negl mov adc rorl fs out shrl xchg ficompl mov inc sub jae pop cmpsb cld pop mov repz adc jb adc ret adc inc adc cmpsl mov cmp mov enter or mov push (bad) jge sbb rolb sub push jb stos sbbb nop push leave add dec mov add add fisttp lret adc adc push ret pushf stos pop xchg sarb mov movsb fucomi rclb mov adc (bad) cwtl rcll mov mov or mov add sub xchg sbb adc stos das (bad) lret adc (bad) les and adc int3 xchg fld1 bound out adc inc loope lods mov leave inc sti push push pop jl mov sub mov xor pop add sti pop arpl cltd in xchg leave mov mov fmull stos adc mov jbe push dec or sbb inc adc xchg in mov adc sbbl mov jp ficoml rol cmc or pop xor (bad) push scas or fisttpl test sar cmp pop jle dec mov cli or movsb js sbb inc daa fsubr in loopne add dec sub or adc out jns ss ficom jecxz rcrb adc ret daa mov push xchg inc sbb aas pusha js jnp xchg fwait test les pop add mov adc ret ret jecxz fcoms je lods fidivrl adc or xor into les std int3 xor jo hlt mov add push push push arpl adc test loopne imul sahf pop push inc add cmp and push pusha pop in ret movlps cld mov lea push jno or adc and sub xor aam sti add lea pop pushf and xchg mov aad mov mov rcrl sbb dec sbb sbb add push scas pop mov hlt add xor sbb jmp rorb (bad) cmp dec adc and cltd adc sbb sarl sub adc xor adc in mov pop sub or fistpll jo adc stos dec aam (bad) xor ficomp add frstor mull or lea adc jns xchg std xor (bad) ss push scas mov or and mov inc mov movsb sbb adc ret adc push aaa aas and xchg xor mov mov or adc add xchg sbb stos add sub pop xlat xorb cwtl aam test cmpsb inc das adc mov repnz inc push adc adc pusha adc adc data16 or lret aas popf inc cmp hlt sub add ret out sbb out mov sbb push mov add and pop cmp lods cs loop mov adc fisubl or push adc mov das sub sti sub aaa adc jno test adc cmpl and scas adc pushf sub pop adc arpl inc dec push in push and lret jne and mov and pop dec repnz jb mov xor inc xor in lea add adc loope dec ss mov jmp dec iret push in dec push mov fild adc sahf xchg (bad) mov mov into adc gs mov fisttp adc pop rcll and adc notl call scas dec lcall stc jl adc adc sbb jle adc sub test loop cmp pushf adc imul jns mov sub sar mov jae push push mov addr16 add jb cltd insl adc scas sbb inc ss fsts xor push jecxz push adc pop pop pop repz lcall sahf adc jne or pop (bad) mov jp imul (bad) xor mov fwait (bad) idivl fistp es test jb,pt adc pop dec sbb add cmp mov push outsl in sub adc cmp lods adc nop pop inc fistl fistp (bad) jecxz cmp xor add jo sub pop loopne cld lds xor push dec adc sub xchg lahf mov and mov mov jmp je repz loope add out (bad) mov push rcrl sbbl or mov aam sub xchg sub cmpsb mov xchg insl mov (bad) std cmp or jns inc or inc int3 dec cs js into cmpsb adc fldenv (bad) adc cmp (bad) mov adc into test jb shrl mov adcl sbb das pushf jo fdiv xlat and test out or rcll xchg sti in je lret and repz mov sti or adc adcl cmp aad dec mov or adc xor mov aad mov xor xchg inc clc mov mov ret je pop loopne inc xorl icebp into mov cmpsb pop jg sub adc fcomps cs popa (bad) or cld xor xlat adc outsl jo fnsave adc pusha sub sub adc stos lahf outsb mov or inc xchg addr16 bswap out and dec xor addl adc movsl int3 add dec loopne adc leave cwtl test daa (bad) mov call inc inc stc mov mov and inc rclb pop (bad) test out mov adc test adc leave jno add ret fisubr shrb cld lret fbld adc xor pop stos push fcoml dec and sbb stos nop jp push pusha mov pop adc jl xchg enter xor sti and xor add aam fisubr fwait loop int add rol lds or mov or inc bound fwait add repnz clc fs fstpl sbb add test sub mov jecxz pop repnz out xchg clc sub (bad) lahf add sub add cmpsl adc sets mov mov push lcall adc (bad) inc jmp mov adc repz adc mov push ds loop adc inc sub adc cli imul sub loop cs lock cld stc pop arpl push xor and cwtl adc loope dec push dec sbb jmp divb aam mov addr16 mov push pop dec or cmc pop jge (bad) xchg and mov mov jg bsr into lcall push daa push and add loopne mov or adc sbb xor adc scas add pop adc imul orl mov sbb les repnz add pop xor cmp out mov mov aaa mov pop fisubl fcompl imul gs pop pusha (bad) int3 push adc fucomip movb xchg or pop (bad) or into ret outsl jae pop repz (bad) std insb mov cwtl add icebp adc pop ret call mov xchg and addl jb mov pop test mov mov mov sub adc pushf mov movl jae adc divl pop sbb repz inc out add fwait pop xchg dec adc push mov hlt lods dec nop dec loopne jmp mov or sub cli mov jne (bad) adc jge xor push adc jp test or lret sbb in push sbb adc stos xchg xor sub cmp repz fbld and cmp mov pop lds dec mov inc push jo cltd mov and pop xchg lcall add mov gs mov fist mov sbb or adc and jecxz repz mov or jmp cmp sbb jle dec jbe mov or cmp pushf pop jno outsl rcll cmp xor (bad) out mov cli in pop adc (bad) jle jp lods jno lahf or sbb adc (bad) or xor or push adc inc sbb adc dec or inc and mov jmp ja nop ficom int3 rolb push add shlb inc lcall mov add adc hlt dec repnz adc jns loopne or adc jecxz jg pop mov adc incb inc push test iret xchg sub test in sbb sbb adc sbb hlt je into adc std outsl aaa in rclb pop mov js repz push aas cmp out adc sub add sbb lods mov or jne (bad) xchg dec cmp je mov xor mov (bad) mov adc push sbbl mov cmp adc imul leave sbb aam pop adc inc jecxz fild push hlt test add pusha rorb lock or (bad) adc fucom jge dec sbb cli jns mov pop sub pusha adc lcall mov jo in shrb sbb outsb fsts js cwtl push adc and xor dec add stc sbb das mov add mov lret lret divl mov inc clc test add adc inc or mov fnsave jns xchg pop fs call (bad) pop adc xchg (bad) test adc lea mov jo jl xlat adc adc into xor jns scas adc out pop scas jo push repz insl jmp xor stc sahf lods jo mov pop and cmpsb gs jecxz ret int jb mov fcoms pusha pop hlt orl push xor mov mov add and movsb arpl xchg int3 add push adc dec outsl mov pushf add and adc push (bad) fcoml adcl in imul push dec std xchg or push adc loope inc cmp fdiv mov cmp adc and add lock (bad) cli adc or aad sub mov inc lods pop adc adc xchg in and jne outsb xchg mov clc adc in cpuid mov mov xor or adc sub cmpsb mov fbstp xchg lods mov push cltd pop xor cmpsb jp out inc mov push push loope pop jnp sbb sub xchg test jno pushf sub (bad) lea push cmp inc adc (bad) or mov mov int ljmp push pop or and push adc xchg dec push in or pop ss push (bad) sbb adc bound xor adc or add adc dec adc mov adc adc mov jnp inc adc (bad) mov cmpsb (bad) xor lcall pop pusha repz fsubs mov adc jae sbb ficoml push push ljmp or mov fdivs (bad) ljmp cli xchg sbb in inc enter imul push outsl lret rclb pop mov icebp xchg out sub stc ljmp mov adc xor scas jae xchg dec jp,pn repnz das (bad) adc jg mov lods or add pushf out ret or shr or data16 rcrb js into scas pusha sbb rcll repnz mov stc ret insl xchg jecxz dec aam mov adc mov xor repnz cmp dec pop stos dec xchg adc fdivs mov loopne fs push mov inc mov xchg (bad) sbb pop pop jmp xchg adc inc mov lahf int adc mov sbb xchg dec pop ljmp sbb (bad) fidivr inc and imul mov pop test movsl fdiv adc sbbb jmp add in mov jle pop mov jbe stos mov adc int push cli jb mov push sbb and xor pop adc outsl sub xchg cmp adc push mov push movsb and mov dec mov imul rclb sbb pop mov xor jmp add mov inc adc cmp jns rcrl jmp add mov jecxz xchg inc add aam jno enter ds pop lret int3 gs pop outsb lock lods fcomps icebp stc lret xor sub sub shlb aas sbb xchg add push add das loope test mov mov mov xchg cmp loop nop/reserved out das lock add pop sbb adc fs loope cmpsl fnstenv adc rolb sub bsf pop roll loope loop mov jne pop or js sbb mov (bad) adc xchg dec dec int3 sub gs int jbe adc adc pop adc rclb adc lss jnp stos mov add pop ret push push fnsave gs adc jnp std pop aaa xchg inc adc lods push xchg mov repz adc pop dec shll or (bad) enter jae fs ret adc xchg sub jmp sub js and outsb adc sub adc add lods jg aas push push (bad) mov mov pop adc xchg mov xor movb fimul adcb idivl dec xor out mov xchg push call call add adc add cmp imul mov in add adc push and cltd mov mov jno test or bound sub fldcw adc or or cld aas and cmpsb mov inc jmp lcall fstpt or adc lods pop rorb pushf repnz lcall std or inc xchg cmp int3 jle in (bad) mov xor mov pop mov pop adc enter push test add popf xor jo loopne lret push in adc (bad) repz ret mov popf mov adc cld inc cltd bound jns sbb add adcl aam mov mov adc pop xchg nop dec int3 into and pop dec adc xor fnstcw stos add insb rolb fistl shlb leave pushf adc aas dec movsb cmpsl rol mov push inc data16 hlt xor sbb mov xor adc mov inc add adc mov mov mov push adc pop adc mov ljmp (bad) rol sub push inc cld pop xorb call sub (bad) lret nop divl adc addr16 jge adc xor pushf enter pop push loopne (bad) xchg xlat add fs xor rorb jp nop mov sbb adc es pop dec mov adc leave pop (bad) (bad) iret and mov cmp mov and aas or jge sbb mov mov (bad) aam adc icebp adc inc mov pop adc and ficompl lock push arpl pop mov inc pop and add fldcw push in lahf (bad) icebp mov adc negl sbb mov arpl push sub sbb js popa mov add dec adc xchg jge in inc mov pushf ret mov rorb jle and hlt pop jge adc mov adc rcrb adc jl movb adc insl cld ret idiv adc sub repz xchg mov adc ret les adc xchg mov and jp pusha testl and into jb mov pop adc and fwait cld cmpsb add xor mulb pop add lods (bad) adc arpl add out mov fbld jns sbb (bad) mov nop into movsl inc mov pop cwtl add dec dec rcrl sbb into adc test jg inc leave stc lcall clc cmc in adc icebp (bad) lret (bad) mov fidivl add imul or pop stos nop dec (bad) mov cmp icebp addr16 adc push and xor push cmp rolb dec adc lea popl adc addl mov lret psubusb arpl in push xor fstl mov pop fwait mov pop mov push ret mov push popf adc aas jbe (bad) mov adc lcall ss (bad) sub and adc lea xchg cmp xchg div ret lret movsl add sahf ljmp adc cmp mov push pop nopl jmp scas lret add push mov daa xor jp stos pusha pop jmp push adc jl mov adc scas mov pcmpeqw and xchg adc xor xchg inc mov outsb je add sub std pop xchg (bad) repz add mov loop xor call movsl push enter lcall xchg (bad) adc adc sub cmp mov xchg rcl xrelease push jae adc ljmp inc inc mov out push cmovs xor lcall testb push adc xor adc loopne xorl inc sti lret adc lods cmpsl xchg jge stos adc mov sub stos xor (bad) add sub mov adc sbb inc adc pusha fwait adc dec subl push int3 push mov out cmp mov xchg mov pushf int sub and mov push pop adc pop xor xchg mov shr jb adc ficoml sub je xor aas out aaa adc sbb sahf lahf xchg sbb add adc xchg xor jge fcoms adc jb mov cli pop adc push pop mov lods push add jmp pop pop xor sub mov fstpt cltd add push cmpsl inc fcomps shrb rcpps sbb sub (bad) mov jl call or stc adc xchg and mov adc das clc sub lcall lds mov push dec shlb pop bound in or sub or xchg jle add cmp inc mov bound lock cvtss2si mov cmc xchg push xor cmp add xchg or out (bad) scas stos add ja adc add dec adc xlat sbb es xor cmp mov mov shll cli fimull pop dec test xchg adc popa push es insl mov xchg dec (bad) mov dec adc pop ljmp das push fs mov mov fstp jmp cmpsl into test shrl sarb xchg pop stos xor sub rclb xchg in mov (bad) inc add lret mov fcoms ljmp in addr16 js xchg test mov arpl add mov or jno std cmp cmpsb scas stos mov xchg adc sub mov cltd cmp test adc or fs adc lahf inc std mov dec cmpsb loope pop adc mov sbb lret int repz push xor add mov cmpsl sub adc jne rorl adc ret ficomp inc pop fdivl xchg xchg faddl adc pop jle lcall idivb ds (bad) aas sub fdiv adc cwtl sub push adc fcmovne scas icebp movsb in mov pop add add lods mov cmpsb js dec mov push stc out pop push jecxz je ss or dec or ror xorb insl adc inc mov iret mov cmp jne and dec scas cmp clc dec int mov out mov je (bad) cmp les (bad) loope rcll pusha ret out inc inc mov fildl or xchg aas mov pop cltd jge xor js push pop fsts mov inc add add or adc or adc jns (bad) jge mov cmp mov ret jg fisttpll inc or xor push xor adc sbb mov xchg cmp or (bad) pop adc fidiv adc jnp inc fwait sbb pusha adc in (bad) xchg in stos lock pushf xchg push lods add push ja xrelease enter jg cwtl jbe push outsl cmp hlt iret in cmp adc inc mov lahf pop insb test lret pusha dec roll bnd out jge adc mov fistp add pushf mov jmp outsl lret fisubl and in cwtl mov mov pop jmp xor push fst adc daa (bad) or jecxz adc jl and rcrb adc sub sarb into mov jp mov cmp xchg xchg mov test xchg mov out and fcoms jge jae push ja imul push push or pop outsb add pop mov ja inc repz enter insl call (bad) dec jo test adc mov in fist mov and sub lods pushl addr16 mov mov cmp jno lds data16 mov xor lea mov jns sbb sbb or loop jmp hlt xchg mov cmpsb fdivp dec adc push (bad) je push mov jp or hlt dec (bad) adc push dec cwtl pop mov das pop mov outsb out xor adc adc test pop stos (bad) int or inc adc cli lahf xor jne cwtl ljmp mov loopne test addr16 jecxz mov adc popf repz (bad) testl call and adc and out push and push jns daa xor jge fldcw ja popa mov adc xchg add push dec movsl insb adc jae scas adc aam imul mov mov lret xlat mov ds in cli jb mov scas xor movsl leave cmp or pop or (bad) cmpsl inc aas fwait jb stos pmaddwd iret sbb scas jno jnp adc push adc out lret sub sti xor fimul xorb fwait add movsb dec pop adc sbb ljmp and dec ljmp outsl dec mov lcall sub add rorb cld push test sahf cs je dec push ficom xchg cmp xchg mov test in or adc adc movsb repz in mov or add mov fwait xor lds and std adc mov xchg xchg adc pop cmp out js ss mov sub xor inc push mov add pop adc pusha mov shrb adc rcll arpl sub pop dec sbb mov call imul adc pop mov push roll adc jecxz dec sbb adc push mov xlat adc and aaa cld xor aaa adc jne or mov popf pusha mov cmp xor xchg jno cmpsb push dec rcrl mov push adc push pusha lcall fcmovu ret pop bound xchg fcom xchg mov and int pop pop sub sarb out fwait scas jns rolb ds lcall jle add iret imul insb cmp inc imul adc jl nop add (bad) hlt adc idivb lret (bad) cmc mov dec stos bound out cwtl inc dec adc and pop dec mulb sbb mov mov dec dec rolb dec jmp repz adc xchg mov jecxz xchg fwait xchg aad adcl fsubl pop cmp mov pshufw mov and imul adc jmp rcrb inc mov icebp add lods in mov dec pop cmp mov mov negl cs push sbb rorb dec xlat or push das out inc adc outsl sub cmp inc ss xchg adc (bad) sbb fwait cmpl sbb js jb push mov xlat outsb add cmp fdivrs mov fisttpl cmc sahf aad sbb lea mov lahf sbb stc xor adc push scas push repz inc inc or repnz (bad) xor adc add add iret cmpsb adc adc rcl cli xor pop les push push push jb mov dec adc movsl orl adc cmp mov xchg mov push push sarb ret popf adc dec mov shll push repnz add sub jmp mov or (bad) jbe push xchg das mov mov adc test mov mov outsb mov and jmp or inc adc xor and jle push adc aas xchg sub repz dec pop dec mov mov cmpsl dec and adc in outsl adc int xor imul add sbb shr mov inc pop pop add sub adc push xor ret js lahf jno movsb ja les sbb leave inc or decl sbb aas outsb fwait pop sbb or lcall xor into fcmovb adc js xchg adc mov mov inc clc pop adc jae das aam sbb repnz cltd mov mov dec bound notb stc inc adc xchg fildl adc pushf cmp mov mov add loopne mov jbe rorb cmpsl adc jmp lahf imul mov jnp adc jbe scas adc and cmp enter add mov jno xchg clc xor cmp wbinvd mov test pop push jns fistl sahf sbb add adc popa dec imul dec jne popl loopne mov push les lcall push loop jge aas sub push push adc movl push or add xor and popl nop lock dec push adc add leave dec mov ljmp jg or imul sub fiadd inc mov push cmp push cltd jecxz into test xchg repz (bad) fistp mov dec bound outsb pop std arpl adc mov adc add push or adc or sub cltd and mov cli dec fstpl add lock (bad) sub call std xor stos sahf stc les arpl push and mov mov or adc mov jno or adc stos aad xchg cmp adc xchg adc fsubs out jecxz jo je (bad) cmp lcall bound movsb jmp add inc jp inc adc iret jae jno mov jl pop pop orl adc adc loopne arpl push incb cmp pause mov pop cmp pop jbe mov test adc cwtl add add lahf into pop lret mov ja lret xor xor popa loop sbb pusha adc mov ja push xor push in stos adc fildll rorb imul mov outsl push subl pop push lret jb out int3 lahf mov fstl push xlat movb push mov cld lea pop pop icebp and stos push push adc add fsubr (bad) cmp jnp pushf icebp adc cmp or adc mov in lds xor sbb and pop add shll add out (bad) test cmp sti mov std adc cmpsb and adc mov xor popf cli popa jnp or repz les lock adc mov jg pop stc xchg adc cmpsb repz inc std test jo xchg dec fldl inc adc mov lods out dec pop test mov inc lret pop aas xor mov (bad) fneni(8087 les outsb dec (bad) cmc pop stos mov adc fcmovbe push add js mov dec (bad) aad or std aas push mov les add xchg inc push xchg stos adc roll enter jle fadds decb icebp adc mov pop sub mov std adc cmp repnz pusha (bad) mov outsl add inc push mov adc add loope or fnstsw mov jae int ljmp pop push psadbw cmovns cmp and lods jae adc aaa pop jg popf addr16 adc inc jecxz jnp xchg mov mov pop repz int3 adc fild (bad) push and popa ficoml sbb mov icebp adcl cli xor movsl jo sub xchg push xorb nop jle xchg mov adc fsts adc (bad) ljmp mov scas jg jge xor (bad) insb (bad) (bad) out (bad) add mov popa jno fiaddl fbld lret mov je add pop movsl cmp bound adc outsb or sbb nop jmp iret xchg pop adc hlt adc lahf and stos jnp daa lock sbb sbb adc inc ljmp int popa adc mov xor jbe adc mov fldt push ja and mov in mov imul xor sbb iret sub adc push and imul cmp es lods add adc mov hlt xor mov loop inc or mov sbb (bad) outsl cmp sub cmpl adc mov mov sahf (bad) mov adc out pop js fdivrs mov mov mov test or xor mov add xchg pop addb jp inc adc shll aaa movsl xchg repz mov packsswb jae cmp adc lods pop in popf enter lock adc dec fisubr iret adc pop inc addr16 jb sbb repz adc ljmp sub push iret in adc loopne lods shll in ds daa psubw xchg in adc das jmp mov cmp sub loope cmpsb jp sbb in (bad) mov leave mov xor rorl in dec mov xchg jae fsubrs adc cmp mov adc inc scas add mov pop andb mov int3 insl iret inc lahf inc add aam mov sbb mov or adc jg push push inc pop je in test push push psllw mov xlat loop stos adc insb dec lcall and mov sbb jl (bad) fstl mov ret imull (bad) adc mov xor sbb dec out repnz mov adc inc bound inc sbb hlt xchg (bad) push pop sti or or ret (bad) mov cltd sub (bad) dec jp adc mov xor mov adc adcl aas push pop dec stos mov adc sbb daa mov sbb adc rorb push loop dec scas cld and mov nop decl pop push rcl jns out call add ret aaa inc mov mov test lock mov adc lret mov cmpsl adc push jne adc stc lods xchg xchg mov adc cwtl lock aas add add lcall mov sbb popw xchg and sbb add jo ret stos adc xchg and adc sbbb push jnp mov xchg pop sub xlat mov pop dec leave mov mov mov push xchg or into (bad) je loop icebp cmp pop loopne andb mov sbb and scas or fprem1 cmp push xor or add sub cld movsl outsl jp out and out or das cld loope pop mov repz mov mov jmp and mov je mov movsl jno push mov jge adc fildl sbb int3 adc or sahf adc push and leave jno adc mov mov mov adc outsb jg mov test pop (bad) stc xor dec fs in jae jne outsb jo out incl jp inc rclb fmuls fwait lods push xchg xchg inc mov adc lods icebp push shrl arpl mov ss xor clc push lcall (bad) lea inc mov inc mov cmp push outsb call adc pop push jae nop sbb int adc add and mov mov cld jne movsl fdivrl mov adc stos xchg adc push fucomp sbb pop insb jecxz xor adc ljmp repz add push int rorb pop mov adc pop jns pop jecxz mov mov cltd adc popf outsb push nop jo pushf loop mov xlat adc aas inc imul xor mov xor (bad) out jns pop int3 mov pop jmp adc adc mov jne out je add or adc nop cmpsb lret pop pop adc and mov xor cwtl aam jne add sahf mov and (bad) hlt gs cmp rcl stos leave inc enter and mov sbb rorb cwtl or nop in out pusha or adc or mov pop mov push ret (bad) pop (bad) mov pop test pop das mov stos jne (bad) or adc (bad) push nop dec in daa hlt xlat xchg xor clc outsl lcall and mov mov out cmc hlt xchg pusha dec adc xchg clc ljmp and adc ficompl cltd loope adc incl sub movsl jno cmpsl adc xor xchg repz xchg pop scas pop adc dec sbb and insl push nop mov fmul jmp fstpl sti or aas add dec cmc or dec sub inc adc and push fstpt imul rolb mov adc pop sub repz in aad adc adc or sbb aam adc sbb dec je push jns std lods mov jbe and push lret pop mov addr16 adc pop sub aaa mov lods (bad) cli sub jle jae sbb xchg (bad) (bad) cmpsl pop icebp stos pop mov lret nop sub addb popa adc gs outsl test dec in repz pusha (bad) addr16 mov divb mov mov cli push inc xchg add adc push scas repz outsb inc or xor lret int3 mov mov pushf add dec jnp xor fs and dec lock and dec mov adc das jbe xchg mov jg mov pop (bad) jno cmc ljmp inc mov sbb les aad dec je pop mov sbb (bad) ds imul nop lcall add fs (bad) lock mov xor or imul (bad) sub jp popf fs xchg jno ffree dec dec adc xor sbb pop or aam sbb daa insb cmp jecxz rcrb in adc sub mov hlt adc vmwrite add or push icebp inc test xor dec psadbw and mov lcall lods test je orl out xor (bad) insl pcmpgtw adc test inc in movsl fimul mov shrl stos lock or xchg cmp addr16 xor out popf add inc or outsb xor outsl pop jge push add xchg dec adc idivb and inc leave or sbb mov mov out jb pop iret inc insb sbb mov shlb sbb xchg jnp fstl jno js les push mov dec sbb dec mov adc out (bad) adc stc cmpsl enter push adc mov int pop ss and adc movsl dec pop and rcr push inc jecxz insb fs std push cmp adc adc inc lds adc nop ret dec sbb arpl sbb adc into add cwtl test or mov nop xchg pop jne xor or stos int3 jmp leave int xlat fidiv aaa cld adc rcll imul mov cmpsl lods inc imul es add mov adc xchg icebp push adc popf (bad) sahf frstor (bad) lds cmp enter cmc push mov sbb push shrl (bad) mov push clc adc or mov dec imul push mov push adc mov aas repnz das xor (bad) in jp das les stos mov repz inc and and adc aad movsl int (bad) mov or mov aam mov stc adc loopne in add mov xor add or xor mov incb push adc fldt mull mov inc into adcl cli jmp arpl nop push cs ljmp mov inc xchg scas xchg jae movsb sub mov nop aaa popf sub xor setns mov nop dec xchg mov (bad) xor pop xchg inc mov inc adc lret fmull pop adc mov cmc fwait int3 ja test mov ja iret lea dec into hlt adc lock lcall jae,pt sub adc (bad) sbb mov stos mov jb inc ja shlb and fwait jge adc fist adc adc lock xor dec test pop sbb inc mov repnz sbb mov jle xchg pop ret leave (bad) adc (bad) loopne mov out pop hlt add inc dec enter jl adc outsb and fdiv std add ficoml lea das adc pop jno mov xchg and mov and fild dec mov adc dec mov pop std adcl mov inc cmpsb adc cmp lret dec sahf or fbstp clc stc cmp adc cs les adc fcompl pushf pop test in adc fwait mov push xchg outsb add popl out sbb popa cmp jno push js sub mov and daa iret add sbb adc xor rcl sbb pop or loope adc sub push adc addr16 fimull sbb cmpsb xchg push mov pop ret sets sti fist adc add pop (bad) js in jecxz adc jno sbbl in stc or pop rorl mov das adc sub fiaddl std pop cmpsb fmull cmp pop negb pushf push scas mov jle jo mov xchg mov add and xchg jae in mov movsb scas inc jecxz out (bad) stc mov movsl cmp mov cld push push adc mov or mov (bad) pop data16 jmp cmp adc insb and shll push cltd push and xor push movd fmull (bad) cli adc mov mov es sub jecxz sub jno nop adc inc pop aas adc xchg jns mov out lret adc pop outsl outsb (bad) lock out mov pushf sub arpl pop sbb adc dec loop rcr ja adc mov cmp sarb add mov subl sbb mov movb jge sbb ror jno cmpsb mov lods jno ret mov and mov (bad) inc jge jo adc in mov adc xor repz cwtl rclb jns rorl xor push mov jl adc push push sub loopne dec scas push insb repz cmp mov adc imul sahf xchg (bad) sub lods lahf mov push imul loopne mov adc pushf add ret jne push dec cmp fnstcw or push adc testb xchg rep xchg lock push je in enter and nop shrb dec push dec fwait push sbb test nop das in push jmp stos inc or inc pop sti subl test cmp call movb repz mov inc lds mov and or xor and imull aam outsl add lcall dec int3 movsb inc add ss aaa fcmove or push dec jp adcl popa and lods mov add cmp dec pop aam repz pop clc cli (bad) and or cld add xor pop or xor or fstpl pop sub stos (bad) mov xchg shll lods sub push mov mov xor jne adc mov pop mov push aas pop mov xchg mov ds xlat mov int3 dec xchg xor adc pop mov cmp mov inc adc int3 mov cwtl fs inc sub js pushf pop inc nop xchg cwtl add cmp scas sbb shr (bad) add ret icebp sbb adc (bad) sbb int sarl mov mov enter icebp mov sub inc adc pop scas notl out orl imul outsb orl pop or inc test imul imul pop test sti add das mov sbb ja (bad) xor add popa (bad) imul add ljmp sub or rcl lock add std cli xor mov repz test add addr16 aaa adc clc inc xchg mov in xchg int into jae adc pop inc stc sub sbb ds test cmp jbe test xchg mov mulb add pop les bound xchg adc mov popa cmp jo inc fs push ret sbb mov aam enter adc sti mov and repnz inc dec sbb adc mov inc add jo das ret adc mov mov and jle mov push hlt sub adc mov xor cwtl add pop push mov add mov aam std insl icebp sub mov inc mov mov xchg shl out test adc mov inc mov jno adc hlt xchg in repnz adc push dec cmp adc xchg sbb arpl imul push dec xorb pop xchg sbb xchg (bad) (bad) jns mov push or enter mov imul popa push ja and sbb pop lea adc fildll jge jmp xor insl daa rolb adc fidivl pop (bad) (bad) mov cmp repz lret stos jne pop or int xor sbb pushf mov cmp push add dec jne push add or icebp adc or jp adc mov mov repz pop cmpsb mov aaa adc cmp xor orb aam sub ret addr16 jl adc jp neg enter dec rolb lods cld push jmp jp and xor mov push pop push sahf cmp setns sbb cld cmp (bad) je daa mov inc popa adc sbb mov xor popa add adc (bad) sub inc and aas or adc cmc push leave repz mov add cli mov rclb out bound xchg pop xor adc adc pop push inc pushf (bad) fdiv arpl movsl pop and test xchg sub (bad) mov inc dec icebp adc in adc pop mov adc sbb sti sbb repz addb iret push mov mov cld xchg shll xor sahf movb cwtl sbb (bad) pop repnz jb nop stos jo sbb and xchg inc stos js ja inc leave call cmp mov iret push nop pop xor jmp xchg cmp les push popf lods sub inc lcall pop jge stc adc inc dec das add adc mov jp cld cmp pop push loop dec pop rcll fdivrs push dec insl repz rolb pop xor scas and mov jmp mov adc mov inc or push jno scas adc fs xor jae jge test lcall sahf adc cmpsb sbb mov lcall insl mov jb push pop xchg cld or pop pop adc mov jne dec shll xchg jecxz les in mov leave cmp or mov rcll fistpl leave xchg and stos mov sbbl loopne pop gs cmp scas aam ret loope mov jecxz das adc arpl jo icebp out lcall hlt adc bound fs sbb pop pop xlat cmp xor cwtl mov push mulb add (bad) or mov add xchg cmp or lods add push mov jae je adc mov jns inc jecxz movzbl ds mov push sahf arpl adc lahf sbb adc rorl (bad) adc stos xor mov into jns stc (bad) xor mov push jp cs jge movb int fdivrl fcom sub out mov sbb or dec mov int3 test adcl mov push in shll test add sub add mov xor jo xchg cmp or mov repz cmpsl xor fist sub loopne push mov pusha or in addl pop lods xchg and sub jo mull mov std ds jbe fimull stos adc (bad) adc popf adc pop xor inc or ss imul movsb rorw inc dec fistpll or sahf adc jg pop or stc xchg outsb dec icebp cmc adc jo sbb lods xchg jb mov fisubl subl mov xlat mov mov movsb fdivl adc inc xor xchg xlat xchg push adc dec fldenv push das dec addr16 pop out sub in sub cltd outsl cmp mov loopne pop stos xchg sti adc and or ds fcomi jbe jo pmaxsw mov shlb repz repz jecxz inc pushf pop popf adc outsb and out adc pop pop xor dec clc nop xchg jbe or adc sub sbb xchg add inc in aam adc lret das mov xor jbe movsl dec pop push rcr lods test dec lds call mov jbe push in icebp adc mov js outsl scas in jmp scas popa sub dec repz lock aad jns inc jecxz mov (bad) push mov jne lret sbb mov inc and test adc mov fwait inc adc lock adc mov inc adc sti pop cmc cmp add pop mov mov pop or lods push adc push inc mov (bad) xor hlt xchg jno mov mov rcl push dec mov adc cld stos shlb std or add sbb (bad) xchg out das mov xor jo cs dec sbb xlat std jb adc sub repz icebp xor or aam scas fldlg2 adc mov cmp fcmove (bad) lds int3 enter imul mov mov mov push push add adc sbb repz bound adc or fcoms fsts jo imul xchg (bad) in or inc and adc loope (bad) les or (bad) jecxz adc pop push add ret sub adc daa fstps mov sub aas lcall ficom inc andl adc imul lret dec cmp xchg adc jno mov mov pushf fcmovnb adc fnstcw scas cltd jge ror in and adc or or lods ds push mov nop test loopne add adc cmp rclb (bad) shll les adc (bad) (bad) fstl or mov loope cwtl mov movsb or add into and lods iret adc jl push push in or fbld out fs push mov or repz imul inc lods adc out inc sbb fsubs xor dec inc jge daa adc mov sbb shlb or stc cs xchg insl int3 rclb add jle push mov test mov mov xchg pop mov or pop add cltd and xchg mov fstl cmc xchg pop int sbb test adc inc fidivr dec add sub xor add push cmp divb (bad) or (bad) mov mov jl fistpll movsb repz inc pop rcll ds adc jne in dec push adc inc sti cmpb push (bad) adc test cmp dec adc adc lock mov das cs cmp loop add lds (bad) pop or adc xchg add xchg (bad) jp hlt jno push adc mov adc arpl clc adc inc xchg mov lcall push cmpsl into jno or jo jmp (bad) mov lret mov mov enter or adc outsl mov push fisttpl movsl loop mov repnz into pop jge adc sti lods je inc test adc add sbb xor or mov jle aad jns gs lahf adc pop pop cmp arpl xchg mov out enter hlt lds fisubl stos jnp loop out jbe xchg push test movsl mov adc call call adc fisubrl mov push stc adc push jno in stos adc sub (bad) lock adc es sub pop insb lret fdivrl adc xchg (bad) je test push adc imul sub pushf dec ja xchg out loopne,pt clc lahf das dec stos insl jbe cs adc cmp push fwait (bad) mov mov push xchg adc xchg imul dec aaa mov int3 cmp gs mov xor sub adc aad lahf mov (bad) xor incb or das adc (bad) jl mov inc rcrl jnp adc mov (bad) pop stos ja sahf mov movsb daa adc cmp out aaa adc mov mov mov and (bad) lret adc mov lahf int3 adc xor push mov fildl pop pop pop loopne xchg push xor incl cwtl mov xor daa cld cmp adc push lods or mov lods pushf daa pop das test cmp sbb jge xchg (bad) add xchg and test inc lcall js outsb adc adc cmp movsb mov aas cld push jno jo dec jl sbb dec cwtl sahf jae or repnz xchg mov adc xchg mov pop pop popf (bad) cmp (bad) repz dec insb dec pop mov rolb ljmp cmp fsubrl sub fimull jle mov in cmp mov pop adc gs mov nop in xlat jmp arpl jb dec sbb adc sub push xchg loope fstl mov pop xchg and outsl adc insb enter daa mov or popa js xchg jecxz or mov pop inc mov adc mov jg and mov adc outsb jb into cmc mov dec pop rclb xor popf jge cltd imul cld adc mov test jmp ucomiss pop repz pop test and inc pop sbb cmp sub xorl jne adc dec pop cmp adc lea lret daa push push adcl mov sbb dec mov mov dec mov fiaddl into in adc in xchg pushf or sub sarb (bad) mov sahf test xchg jo adc cmpsb inc (bad) adc mov dec adc xchg dec add and and repz stc popf cmp adc cmpsb mov imul xor gs jno dec bound jns push stc push insb push ja ficomp adc sti gs loopne repz movsl push fldcw xor adc xlat sbb ret scas les and jecxz aaa cmp adc jg setae ret (bad) or mov shlb mov adc sarl pop xchg aad repnz cmpb adc push in adc inc lea push sbb add pop mov mov xor leave push adc and xchg add dec adc fstp out nop cs sbb shlb push adc pop pop sub daa lret sti sub adc and mov bound jae loope scas (bad) gs jecxz jle iret fdivs push lock (bad) add xor sahf aas inc pop sub dec std pushf adc imul cltd nop lea js mov sub mov lods fidiv jae leave subl loopne adc cmp pop and js jo mov cmp xchg cltd pop insb xor jbe pop div leave mov sbb rorb aam dec adc push push jnp imul (bad) inc mov adc cld imul repz mov adc sbb adc call out xchg mov pop jl xchg stc and adc inc adc lret push pop ljmp push out push pop scas mov es xor test in mov cmp add js mov clc int3 repz jae or jne cwtl add popa mov jbe out dec push mov mov pop xchg lret lds pop rclb adc aad add neg dec adc cmpl xor push add pusha push fsubs stos aam aaa add mov jne call aad out test jle adc jb xchg mov jp in js scas inc adc outsl (bad) incb imul data16 mov xchg ret add add lret add in mov mov out leave xor push fwait pop xchg pusha dec sbb cltd mov popa xlat adc sub rcll cmc imul push and lock out dec adc int3 sbb xor sub add jmp cli mov mov adc ljmp scas mov and loopne adc cs cmp scas (bad) cld push mov insb jae pop fcomps adc cmp cwtl js xor xchg mov mov jmp loope (bad) mov sbb cmp or xlat adc fs test push xchg sbb sahf scas out add jmp xchg flds add adc mov fstpt lock jge out out int mov sub je pop ret fisubl mov sub repz or pop cmp pop mov jne ret mov adc inc cli mov lcall or into adc jb lods sbb inc repz sub jle aaa pop mov loop cmp jge fyl2x push mov int adc arpl sbb sub arpl cmp je mov inc out push adc inc ret cmc xchg ljmp adc adc pop jns push fsubrs sub lods pop sbb adc add (bad) aad (bad) ret mov test adc rcr test mov adc daa ds adc push pop sub add adc adc sbb xorb pop adc push and nop bound imul adc xchg icebp adc and in pushf mov mov push aad out jns outsb je pop das cmp xor js mov outsb add mov adc outsl xchg xor clc btr mov push cmp enter xor add cmp jmp pop push cmc or xor dec cmp shrl adc adc sarb insb movsl sti jle rorl mov push sbb adc stc cmp adc cwtl push jge ljmp mov xor jns add fistp xchg (bad) insb mov dec adc ret mov cli fldenv dec adc mov (bad) jne dec cmp xor bound out int3 adc jle mov roll cmpsl les xchg enter pusha mov (bad) push pop cmc out or xor (bad) sub jno cmpsb arpl adc loop aam (bad) std adc nop sbb inc lods mov mov ret jbe cmp push test pop jmp rcrb repnz lret push scas paddw adc stos pop test inc xor dec pop ficom scas pop movsb out mov xchg es mov xlat rol insl fwait adc push pop mov (bad) sub into push xchg leave adc jp lock les je xor ret jbe movd push adc mov cmp dec push sub xchg pushf (bad) or addr16 sti mov (bad) in mov cmp clc sub (bad) add (bad) cmp pop xchg jmp mov cmp sub sub mov or repnz jo sbb mov or call in cmc in addr16 xor sbb add xchg cmpl inc mov cmpsl bnd jo adc xchg xor orl push in adc es mov or and pushf sub (bad) (bad) movsl mov mov (bad) sbb pop insl or adcl stos push push pop frstor shll insl rolb int sub addr16 lds add (bad) xor adc dec out lea fs push inc add mov movsl push imul je mov cmp aaa int into (bad) pop push inc rcll sti aad or xlat pushf mov out mov adc jp and leave inc (bad) je push xor push shlb inc das lret and testb ljmp dec xlat jecxz ret jge sbb pop and roll scas iret jle mov xor mov loope loopne cmp inc adc fistp cmp adc repz push loope cltd sub mov xor lock pop daa xchg aas or adc pusha adc lcall adc xchg push xchg hlt sub adc sub pop jo aad or gs xor add mov sub cli fcompl xchg mov adc jl or sti rorl xor fcoms aas (bad) jne and pushf inc ficoml mov adc mov adc xchg mov shrb sbb adc test fist call and loop pop mov adc mov inc adc stos lahf stc adc loope pop enter adc xchg pushf add rep fcomip aam out push mov xor add inc add or inc loopne nop pop mov adc push mov sahf push push mov sbb and adc in pop adc lcall adc leave fisubr rorb and cmpsl mov pop jp pop and jne lret mov pop ja and fcompl shlb inc test movsb mov push mov push (bad) mov and mov inc inc mov xor pop push repz mov xor test mov or xor sbb loope xor or xor lretw ja movsb in pop (bad) jne push push adc dec sahf adc sbb dec outsl (bad) jb xor negl xchg mov sar int3 (bad) repz repz ficompl cmpsl xchg adc popl aam adc inc ss jl adc fdivrs and mov out dec sub fldenv inc rcll xor (bad) fmul ficom xor lods inc mov push repz das je and sbb push jecxz mov xorl jbe dec xchg xchg jne mov pushf jmp ret push fmull es pop sub mov mov xchg rcll push jl aam outsl int3 and jle ds mov lret outsb je pop cmp sarl in inc in dec or adc xchg dec stos pop pop lods lea lock test arpl jecxz adc mov inc fist fidivl (bad) hlt adc xor jbe ds loope or adc cmp cmc popa repz lcall and bndldx xor addl inc rclb fistpll (bad) int out jbe mov jo out cmp or cmp (bad) negl adcl rcll ds push in lcall jl out xchg add fiadd jmp ja and mov adc xor xor mov cmpsl add jnp sbb mov adc ljmp fdivrl adc icebp dec sub out xchg jecxz jg stc mov nop jne outsl sbb dec mov xchg jle pop sbb call insl cmp xor mov sahf lret add idivl adcb cmp test xor jp mov fwait divl push adc nop daa insb and repz fbld lcall nop cwtl adc sub cmp or inc std mov clc pop rolb adc popa pop pushf adc push adc mov notl add movsb test jmp stc xchg movzwl pusha inc adc roll (bad) lds repz jmp or adc or out and and and mov mov ret pop rorl lea mov pop and sbb and lea adc dec pop insb cmc (bad) or push pop adc out fwait and adc sbbl dec pop test ret xchg incb or cmp repz sbb or push adc aam mov cltd jmp icebp adc fwait out sub inc adc ret pop scas orl push dec enter dec add ja jb add out adc jns jno sub mov adc mov cmpsl sub loopne pop es jge arpl adc clc cmp cltd mov jne pop xchg mov lds push scas adc icebp (bad) cli pop ds xchg fdivrl and rcrb sub add xchg pop pop xor repz pushf jo or or mov adc dec cwtl inc fistp adc fsubs push jo adcl and in adc pop into jbe or push repnz sub test mov stc aad imul adc add mov sahf scas mov fldenv jno inc push mov lret add sti cli sbb adc loop sbb xchg sarb lds dec fsubrs lea ja sub ret lcall pop xor lds pop cwtl fs insw mov or int3 fistl jg pop xlat cmpsb imulb adc and sahf loop xor inc rep pop add inc stos fmull mov add sub aam test xor scas outsl int or in xor xchg lods jno add sbb ljmp and jne bound insb add repz push xor and test or (bad) push pop and sub adc fs repnz xor adc adc cli mull sbb or (bad) jb push cld push mov lret jnp ss int3 push pusha (bad) jae loopne sbb hlt sbb jg (bad) pushf fmull idivl mov lcall xor cmp fdivrp scas inc (bad) lahf adc pop lcall imul mov mov repz push pop inc cmc xor and xor outsb add xor xchg pop xchg int3 adc pop (bad) sub (bad) add xor in add imul mov lret cmp fwait sbb dec imul nop or lret mov inc mov aam fdivrl lahf bound notb cs and dec push inc jp and pushf fistl ljmp mov jecxz xor mov cltd add std adc cs mov xor aaa rolb das test loopne adc ss int3 pop (bad) adc lea mov or cld out mov inc stos rclb nop adc or and mov sbb daa aaa test adc test mov stc push mov push cmc adc adc ljmp iret mov psllq and out mov mov shr mov jae cli jle push ja repz insb pop xrelease mov mov outsl cmp add sbb cli movsl aam adc sti cmpsb adc lahf and adc pop xor ss inc es flds jl test nop push out mov sbb and cmovo or pop sub mov mov jae xor cmpsl aam gs xchg pusha jg repz adcl inc pop inc fldenv ror mov mov adc repnz in push adc js xor cmpb pushf outsl (bad) pop dec xor or pop mov cltd pop adc mov jmp adc (bad) dec clc sub dec mov adc xlat mov and dec adc (bad) hlt aas adc mov (bad) mov fisub fwait jl lods lret out aas adc (bad) aad lcall repz push std jae xor js insb movsl add xor bound ja mov sbb and pop nop ljmp outsb fdivrp xor add sbb movsl (bad) ss dec cli xor dec test imul sbb pextrw mov loope adc sub in add pop lods xor xchg adc je lret add cmc mov (bad) shr (bad) or ss mov and dec sbb push fist (bad) mov xchg scas mov jmp ljmp mov or cmp dec aam ja lahf fwait pusha (bad) mov aas arpl or fildll hlt mov sbb adc sbb call pop jb adc mov dec aam jge shll adc insb sbb cmp push repz jle jmp adc sbb push adc push mov mov icebp popf jno add dec add xchg sbb push daa inc adc mov inc or xor cwtl inc jp js jnp sbb rcll cmc leave push or mov rcll insl aaa push jno shl sbb das cwtl mov dec repz dec movsl dec cmp adc mov (bad) (bad) in xor or subb push mov out push push push test repz mov lret xchg cmp jg sub subl (bad) inc in repz xor jg test lahf mov leave dec adc adc xchg jmp adc popf insl pop push inc jae push sub orb movsl out push mov and lret sbb xor add inc popf js push adc mov mov mov xlat repz push or push sahf mov sub in pop lock sbb xchg mov mov and test jge xor in (bad) nop insb or xchg sub nop pop jo or (bad) loopne ret adc (bad) sbb add xor inc movsb sbb push out in and pop test insb adc aad pop mov sbb shlb push rorb mov ljmp mov scas jne pop (bad) out or aas jmp lret and push (bad) pushf adc mov mov cmp push or aas and (bad) mov ss inc jo xchg ret cltd push mov xchg sbb xor outsb or xor hlt orl cmp arpl dec or lcall fimul (bad) mov je mov fidivl or xor (bad) mov sub or mov xor in add dec sub and sahf negb sbb pop (bad) mov mov hlt repz sub inc insl mov fnstenv insl adc xchg xor imul mov xchg aaa adc and xchg aad adc adc sub in adc mov in iret xchg mov (bad) xor ds jg jno and jle (bad) adc in dec dec leave adc jns xchg mov rolb lcall xor pop dec out xchg inc (bad) cmp leave sti add and addr16 xchg and adc ret dec or popf adc mov hlt nop xor sbb insl test (bad) inc dec das bound sbb push sbb push fstl adc xchg dec arpl call es aaa lcall xchg fcmovnbe mov dec fcomps jge nop sub cwtl add xchg adc in aam lcall (bad) dec rolb loope jnp ficom sbb or es push cmp fdivp aaa adc xor jns cmp fistl add or ljmp pop decb adc xchg loope insb adc loopne sahf adc jae insb adc fisttp lret sub dec movsl adc inc push jne adc mov lcall xor inc push out lock sarb xchg dec inc pop into mov mov jnp adc iret push xor repz sub mov xchg adc testl mov movsl sbb adc bound jmp addr16 sub push movsb aam and insl rcll add dec push test adc adc sbb jmp adc mov icebp xchg (bad) aaa sbb jp add nop mov xor cmpsb jbe mov ret sub or dec daa jno dec xor sub repz mov in insb icebp cmp ja pop outsl iret pop ficompl adc mov sbb inc jmp adc pop test xor in call push mov rcrl fisubrl inc adc pop cmp adc and push out loope lea pop mov or mov pop sbbb lds insb (bad) rclb sub movsl jl adc dec push sbb adc mov pusha aaa repz xchg lea ds sub lods xor dec int3 sbb add insl or xor jg adc cmp lcall ret adc and cltd sbb jge rclb cmp arpl addr16 cmp push dec jae adc aad repz int3 in repz push cmp mov xchg mov fcom or lods adc addb adc mov xchg ss repz sbb dec aaa (bad) (bad) mov outsl roll sbb cmp out cwtl mov stos (bad) sbb jno adc jp cltd jbe xchg push pop adc subb cmp pushf adc (bad) nop mov and sbb cmp inc test je mov push inc iret sub scas jb inc aas fmull popa stos repnz (bad) jno dec or clc adc mov aad inc daa lea push outsb fcoml adc xchg (bad) mov sub mov pop fucompp and inc pop push push pop je test adc add les adc push mov pop je nop push lret lods or imul or adc xor fistl in push int das fcomp adcl xor push and cmp xor dec push sub imul aad mov std ret pop or cmp sbb sub xor pusha addl adc cli clc scas in push sub sbb stos movsb or psubusb insl adc jbe es xchg push sbb or or out adc lock mov out jl jg iret aad jns out into adc xor adc nop jmp adc mov jns push stc pusha cmp mov sbb sub sub std stos or popa lret mov mov shlb in fisttp out cmp daa iret into mov inc add jno cli mov fisub dec or pushl mov outsl icebp add mov stos inc adc cli cs add adc and into mov repz jmp sub dec lock aad sub mov repz mov adc pusha dec gs pop dec sbb sub sbbl fcoms sti out mov aas and ret xchg mov mov adc cli ss lahf int aad jle adc mov pop inc repz push test add aam adc adc mov push (bad) or mov adc mov xor bound arpl int push mov divl push adc inc dec jge dec in ds xchg sub or mov xchg inc mov mov cwtl and and push out mov repz xchg pop hlt popa and mov adc mov jmp xor call or mov xor arpl xchg or (bad) mov add sahf das roll test pushf addr16 dec es xchg stos (bad) ljmp dec xchg and clc mov mov pushf adc pop inc sub adc lret aam clc mov arpl das dec mov add inc daa dec enter sbb insb lahf les loopne pop out adc add aas adc ja test test rcll cmp rclb std out push inc adc pop ffree aam in and xchg arpl dec sarl imul mov in dec add repz (bad) bnd mov js cmp adc xchg pusha jmp std push adc cmpsb add jae sbb lsl xchg dec lahf cmp adc or jle mov call fs js sar sbb cmpsl repnz sub (bad) imulb por jl adc sbb stos (bad) adc cmp mov cli cmp sbb and xchg xchg mov or add sbb mov jnp or outsl push adc cmp adc cmpsl adc add insl daa sahf or cmpsl push pusha ret sarl mov in std mov mov int3 sbb lahf ror lods adc jp leave sub lea mov ljmp fisubl in mov sub and push or add pop inc icebp int3 ljmp and dec adc inc nop dec (bad) test add xor xor mov das (bad) test dec adc negb call cli outsb xchg lods mov int3 pop rcrl cwtl inc mov icebp inc push aad test mov mov das or xor sbb outsl sbb push pop adc xor imul sbb xlat add into hlt xrelease sbb scas lds push stos adc mov in jnp btr loopne mov sbb add test push xchg pop sets add lahf and adc mov jae xor or enter mov and mov or les add push jg push hlt xchg mov sbb jmp xlat xchg pop seta das adc fildll mov adc fldt adc sub sarb push (bad) std mov jmp mov ret xlat outsl js push jo cmpsl adc mov jge es rclb pusha ljmp mov sub sti adc xor cmpsb adc pop ficoml fstl clc (bad) divb xchg hlt pop adc es mov pop loopne pusha add or inc jnp adc mov xchg out clc adc pop sub dec popf mov mov ja push cltd mov aaa cmc repz adc hlt stos imul cs xchg and jl inc outsb clc test cmp dec adc sbb mov in rclb or sub xor adc lret rcll xchg xchg ret add je es aam test mov outsl add in mov adc ret mov je in xchg inc scas cmp inc mov cmpsb lret sbb inc (bad) adc insl xchg xchg jle cwtl divb mov popf adc lods jae ja clc insl dec xor loope mov jmp dec mov dec adc pop addr16 rol ds mov (bad) shlb adc fisttpl push dec clc shrl cld fwait outsb adc aam adc imul (bad) lock mov mov adc jmp shr inc icebp (bad) iret shlb cmpsb pusha inc adc in pop cmc sbb inc xchg adc nop pop cmp fnsave data16 ljmp movd inc xor sbb (bad) mov add frstor and cmpsl add scas pop pmaddwd cmp push icebp (bad) pop adc imul or mov fisubr adc mov fist out out (bad) push push pushf sbb aam adc out adc (bad) fcmovb icebp sbbb push or rclb xchg test lcall js jl mov int3 jno sbb jge adc imul jb jp pop sbb mov aad mov xor add xchg and push push jp cmp scas sbb dec repnz jae pop cmp jecxz scas jb or mov cmpl nop aam out mov xorb stos loop loopne xchg or mov mov fwait adc lcall adc mov or stc pusha test adc mov push adc jl aas popa int3 enter cli xor cmpsb rcll adc clc xchg cmovg xchg test test jno inc xor sahf jae jnp ret ja je loopne mov push push adc xchg icebp sarl adc push and jge adc ljmp mov add mov arpl xor xlat mov adc adc cmpl mov inc notl mov popf inc repz enter xor insl outsl adc out add sbb cmp psllq ja sbb cltd cli dec cmp lret mov hlt jl xor sbb xchg dec mov aaa mov dec push jmp mov xchg into mov fwait (bad) dec iret adc insb repnz lods aas lret mov dec rcrb and int3 jbe adc test dec cmp xchg cmp lods loop xor aaa sub adc ret movsb arpl inc cmc lcall jg (bad) mov push xchg adc and std bound rcl mov pop and inc mov jp into iret xchg adc mov dec adc les pop adc subl adc std add mov stos push add cmp repz xor jo push inc adc fbld mov or inc ja and fnstenv callw dec or mov sbb gs jne les rorb pop dec int3 adcl inc pop jmp out jno cmpsb lock xor cmp push and fsubl cwtl in sub pop lret js add push mov sbb jno fimull adc mov adc sub movsl jp dec jge sti push mov (bad) mov jecxz lods jne jle hlt xor mov cmp sbb rcl cli mov inc adc pop mov mov sbb mov sub jmp adc jbe xchg fmull cmpsl cmp mov pop hlt cs lret stc inc sbb test xor int3 out icebp mov push mov aaa adc inc pusha xchg out adc test pop adc nopl into push cwtl xchg loop mov mov mov stos add cmp stc clc add lcall test sub loope cs mov push push sarl adc rorb repz test and repz lock adc adc push imul push (bad) xor cmp pop fldl pusha or out add repnz or icebp loop adc pop nop fdiv inc dec inc add adc or clc jne cmc add movsb sbb pop sbb addr16 (bad) mov scas test das fcompl add (bad) ret orb aaa mov inc adc movsl sbb and test jnp cmp jmp cmp pop add loop adc aam add pop out or adc jb sahf mov ret push mov mov and cmp adc add mulb sti and (bad) fildl in mov fdiv (bad) ja pop mov add add outsl adc xchg xchg sub sub or adc mov mov lods xor enter xlat leave mov xchg jmp mov inc ret mov xor or adc std clc pop ficompl adc mov lea bnd das mov jecxz xchg xor in cmpsb mov push out adc test add sbb pop sbb lock fistl stc dec ljmp nop jp pusha xchg pop jge adc mov loop nop mov jns xor pop pop cmpsb movsb mov out add scas aad pop cmpsl repnz mov lret pop lock nop in sub cmp and or xchg dec push xchg jecxz popa add jmp pop xchg pop pop in xor outsl push je ljmp out or adc add movsl and mov xchg xor test adcl mov lods ds jnp adc jp xor mov nop int3 mov jl in (bad) adc clc testl ja lahf les loop mov test iret push repz sub orb mov dec mov es mov jge push dec mov stos adc pop push aaa mov sahf and decl push sti add adc lea or (bad) int adc xchg adcl ret sub cs call nop mov push nop add lods or or arpl mov imul push push icebp (bad) idivl loop lods pop jne add out sbb shrl cmp lods push jg outsb dec aaa adc cmc repz add xor sar imull cltd xor mov fwait adc lret nop pushf rorb cli scas mov inc ficom adc je outsb adc cmp push sub pop adc fcoml mov fmull lret adc adc cmpsb mov and or imul movsl stos push add adc lock jl sub jae or (bad) repz or xchg jge (bad) adc sbb imulb mov (bad) mov int pop nop fildll jge lds ret orl dec lods cmpsb repz push push push adc sub adc push je xchg or sub mov adc (bad) xor sub mov adc mov fs cmpsb xor popf int cmp lcall adc inc xchg rorb xchg adc sub leave aam adc pop pusha lcall mov sbb dec add and mov sti in cli (bad) sbb adc popa fldt inc and adc nop fistpll adc cwtl mov adc ja scas loopne mov sbb int3 into adc imul leave inc adc pop jmp shll xchg adc aas scas pop jle xor inc add mov and jl adc jmp xchg and scas lcall xlat jp cmp mov lahf mov xchg call xor jne pop add mov jecxz adc das add pushf (bad) adc xchg pop sub outsl in rorb and addr16 jno or test sbb out test fldt push adc insl xchg fcoml mov push mov adc xchg enter bnd repnz inc arpl movsb cmp out (bad) dec punpckhbw sbb adc sbb add pop mov xchg mov enter pop push add in stc repz xchg dec push mov (bad) mov adc xor mov je sbb add test mov adc cmp mov lea fiaddl push or fsub adc xorl xchg lahf cmp dec adc pop adc inc jmp imul mov cs cmp outsl ret popf mov in jg adc (bad) adc out add lcall rcrb cmp adc call in add dec jp add xor in sub push mov xchg cmc mov push push cmp or inc scas adc inc jecxz push scas leave mov cmp stc es mov mov scas sbb lds repz out rcrl adc jb (bad) xor (bad) push mov std je or lods dec mov xchg arpl mov dec cmc adc (bad) sbb or xor adc (bad) lret (bad) shrl xor xor (bad) adc ja jecxz pushl lret stc or xchg xor aas hlt scas rolb cmp xchg fcoml cmp inc nop adc leave inc repz push lock je fidiv movsl shll test test cld adc dec xor scas cwtl xchg adc (bad) jns mov mov sub (bad) adc fdivrp daa cld xchg fistl lret into add jae mov in and repz ja jge jg and nop adc dec xor cmp addl jne dec adc scas mov xor xorl pop adc or es adc add dec mov cli mov rorl xor xor rcrb gs scas aam pop sti jo mov push movsl dec push ss dec jecxz lock imul jb and adc sub popf adc clc ljmp fiaddl rolb xchg pop dec daa adc mov mov (bad) rorl jae popa lcall mov or sbb xchg mov adc adc mov push lahf repz sahf mov (bad) imul stc pop mov pop out mov ret sbb pusha loope adc std test iret enter xor mov add inc fadds adc adc imul jge loop jg stos adc pop in adc test or push adc lea dec sub xor sbb push test pop pop mov mov inc adc cli gs xor scas and or jmp sbb jl stos cmc adc or adc mov (bad) xlat rcrb cmpsb push push and adc sbb sub pusha inc adc stos insb fwait lds outsb mov popf lcall out pop in or cli xchg jb jns pop sub mov int3 in dec fbstp mov mov adc add mull (bad) fstpt add push mov xor adc push push or adc add rclb mov jne mov jp xchg adc sub xchg into hlt (bad) cmp push insl out sub or or (bad) cmpsb jno pop push adc jae mov cmp pop cmp adc xor xchg push mov outsb andl das aaa int adc jge js imul adc cmc mov (bad) xor mov test adc pop push loope or out adc (bad) into adc pop jnp jmp repnz sahf std orl fs cmp sub dec add repz out sbb aad xchg cs ja adc call hlt iret pop adc pop ret bound push pop das ss push push push mov (bad) div adc adc bound mov add jno subb arpl jne fyl2xp1 notl push xor pop iret mov mov inc mov adc arpl mov adc lods push or mov sbb adc inc rclb pusha push decb adc push jo adc xchg adc mov mov into pop mov retw xchg es mov adc mov outsl sbb loop test cmp in adc (bad) cmpsl xor adc stos pop (bad) repz mov mov mov (bad) js xchg mov sub loope adc lds mov mov xchg rclb adcl mov cwtl adc lret aad ret popf jne aas test adc cltd push adc fwait addl ret scas jae iret xchg je icebp xor add repnz les xchg sub mov clc (bad) in pop daa sbb lret aaa add sbb jg pop push pusha sbb or adc inc dec adc add dec rorl gs adc xor jle cli add mov in fistpll cvttps2pi pop xor mov inc add inc mov stos movsb sti jl and fmull (bad) cmpsl sbb push adc jno mov xor rcrb lods or adc add cltd lock scas cwtl push add fiadd adc mov mov push int3 jle mov inc repnz inc (bad) jae mov cmp pop pop or (bad) out mov inc or scas or rclb mov addr16 push xor push push inc xchg rcrb fsubl push pop cmpxchg (bad) fnstsw test (bad) fisttpl or nop mov or mov add xor je insl icebp mov pop jae xor adc inc sub imul adc inc sbb adc jp mov mov xchg fisttpll cwtl movlps dec pushf sahf push jmp adc lcall add pushf out fs adc andl adc cmp sti push adc call pop ret ficom adc fdivrl imul sub call mov mov insb adc dec dec das mov (bad) adc ret fs push adc clc mov xor lods (bad) je rcrb fs (bad) pop nop sbb mov inc aam mov pop mov out pushf adc or mov sub jb inc aaa and dec fbstp adc outsl (bad) jecxz cltd add cmp enter repz out lea jecxz fstpl inc cmp pop mov adc shll and popf in js adc out lds xchg aam xchg (bad) (bad) pop jns jmp lods mov mov and ret (bad) enter mov mov adc xor sub add sbb cwtl in scas dec jbe dec push adc jne fnsave and repnz and or cmp cmpsl mov adc xor inc nop jnp xchg add imul jbe or repz push push insl das add adc mov cmp sub lret add mov orb adc ljmp movsb xor rcr pop sbb mov cli xorl leave das repnz nop cmp fldl sbb popf int3 push cmpsb loope inc xor mov fisub or sbb pop adc adc xorl rcll jbe mov jmp movsb ret xor xor mov gs rolb lock or adc xor jmp pop pop adc (bad) (bad) repz daa jp xchg aas sbb add ja jno fwait or test fsub (bad) or ret xchg sbb addr16 mov mov adc dec mov pushl int3 mov adc rcll push mov jge pop shlb mov cld out lret test mov rolb add sbb jbe stos lods lahf adc outsb sub mov daa adc push ror fsubr jns enter leave add int3 pop daa popa div (bad) dec and mov mov imul mov or rcl cli jno clc or dec cs ret leave jb cmp les cmp sahf pop bound out imul sub or dec xor mov or arpl test lret cmp rorb cld flds dec clc sbbb inc aad jge dec call (bad) adc pop jmp je ret pop push fmulp or jno xorl add adc out adc xchg push movsl adc ss je dec aam add mov (bad) and rol aad mov adc mov push xchg xchg lods hlt cmpsl out add (bad) test lea xchg pop jmp cmp out or jl cmpsl (bad) ret adc (bad) pop fidivl push insl mov jmp outsl push sbb pop adc loop cwtl popl arpl ja loope xchg push ret cmp sti fsub stc push sbb push and xor pushf mov addr16 adc cmp lea adc inc nop icebp mov push cli dec mov bound cmc mov add push adc pop stos mov std jbe rorl lret push xor lcall xchg out cld jg adc mov repz mov in sarb xchg add (bad) enter mov test daa mov sub xchg push or loopne xchg out jbe inc stos cmp orl mov (bad) lahf adc arpl enter repz pop icebp add dec mov xor ljmp jno lea je adc ret mov sbb lods rcll dec push push les push push jno add add mov pop leave adc lcall add mov (bad) scas adc movsl mov sub fstl pop xchg repz rorb jge xor adc pop xchg sarb xchg cld and jl repz push roll ret sbb pop mov dec js dec adc lea je and repz movsl inc dec movsb add mov push xchg daa bound js out xor test sbb sbb adc scas add adc or lods mov cltd jne sub sub cli sbb pop and inc adc pop movsb (bad) xchg popa out (bad) int3 or das rolb push aaa imul lds sar xor mov (bad) testb test movsb pop adc pop lods sub mov lds dec cmp xchg dec inc sahf ds and mov adc sbb add xor sbb inc (bad) rcrb mov adc sbb cmp adc push jecxz loopne mov pop adc fidivr out adc mov adc dec inc adc jb mov adc dec xchg cmpb cld adc xor cltd movups inc pop sahf xchg inc xchg cmp dec lds xchg fwait rcrb mov mull in hlt out inc (bad) fs jecxz push inc lods push jb pop repz jl sbb (bad) or lret adc push movl jns inc repz lock pop push adc fwait adc jne sbb in push (bad) xchg xor mov jo mov mov shrb fstpt push popa pop pop dec adc add jae adc fiadd adc and lods xchg ret cmp addr16 (bad) dec jp adc test mov in ja inc cmpsb std xor xchg cli jne repnz cmc xorl jecxz jno outsl inc cs sub inc sub inc xor rsm cli push lods into dec adc sbb inc inc fs jge xor (bad) pop xchg inc rorb aam mov sbb mov dec out add push pop lret xor outsl add push pop pop or pop test icebp adc ds mov sbb call xor loopne aaa (bad) push pop adc pop in lcall popf pop (bad) or push fdivs adc jnp hlt int3 repz stos xchg outsb jns mov arpl scas mov adc aas pusha loopne or lock mov mov mov (bad) mov fisubr pop scas lret and pop xchg (bad) sbb stos mov pop int3 and add mov jae adcb stos xchg and sbb in rcrb out pop cmpsb xchg aaa ljmp (bad) inc jge adc jae (bad) addr16 bound push cmp add lcall hlt cmp lock dec lret adc xor call dec leave mov cld mov xchg jb and or adc xor adc xchg sbb lcall or sub ficom mov cmc sub stos push push pop in push or or or adc push cld lahf xchg jns repz xchg or (bad) adc fsubrl xor movb adc mov sarb and imulb ror sub jecxz adc sub das pusha aad xor mov and sub xor sbb cmp daa shlb iret push test mov push lods adc pop xchg cld ja roll and sub add jl (bad) jge mov pop mov out jle push sbb jl mov xchg dec pop pop arpl je push and sti rcrb xor or xchg (bad) (bad) repz subb inc fadds adc pop mov call mov mov adc and popa lahf cltd fimull lods stc jb dec xor pop adc test pop outsl std nop push adc pushf add rcrb xor out mov and inc or inc xchg ljmp and cli adc loop or jecxz adc pop push adc stc fiadd addr16 fdivrs sbb mov xchg sub dec imul ss adc or lret je test pop hlt or mov stc imul mov scas ret pop mov icebp and jno push mov je mov stos mov clc mov stos inc mov adc cmp inc and or adc loop sbb out add sub scas push fisubrl test xchg lret adc pop jge scas fstps in nop push lds mov stos pop rclb adc xor stc push xchg adc pop (bad) aad pop repz or cmp adc (bad) aad adc int3 xor out xor mov push cmp fidivl idivl and ds adc mov subl jne out mov adc int3 bswap adc lds insb adc inc cmpsl ret notl jle movsb mov repz sub (bad) pushf jl mov adc mov scas xchg into mov or aad dec and sub jnp scas jae (bad) add add sub imul lods pop out jmp cmp pusha stc mov dec jb or xrelease pop sbb adc sbb mov cmp adc outsl push xchg push movsl sbb test or xor pop aaa sti sbb out ljmp sbb js (bad) pop dec jmp fdivl das adc ret inc push jle adc mov dec nop xchg lds adc cmc iret xchg add and pop mov push or fisttp ds sub inc jo mov inc lea adc divl rorl and push adc jo xor pop (bad) lods adc int mov cs mov pop lcall jle (bad) mov rorb fsubr adc adc arpl sti jne mov aaa ret xor rorl jp mov aad or mov mov fnop fnstsw lea adc rcll add xor jnp (bad) cmp js (bad) fsubrs adc bswap test mov bound xor mov sbb mov pop movsb gs and or sti fscale lret mov addr16 imul testl rcrb xchg xchg xchg mov (bad) cmp iret add adc int cs and (bad) std xor adc mov mov pop adcl xchg pop xchg faddl adc orb movsl mov in xchg add test mov aas (bad) jbe stos jle fcoml push jmp fldl jp movsb dec push push push mov add stos pop lahf mov adc sbb rcll std mov int and repz aad or xchg or fcoms pop cmp movsl pop pushw adc outsl push jo or std fcmovnb (bad) out (bad) or pop pop jle pusha mov xchg loopne xchg dec jno insl or jbe inc xchg and mov pop popf out mov fisubrl push movsl icebp or xchg xchg loope jp sbbl lods fst enter inc sbb (bad) pusha add adc adc sbb push adc (bad) ss dec or dec hlt rep pop fst test (bad) or dec clc adc xchg adc xor adc rol rcll cmp out dec enter and xchg test out xchg insl jg pop js out inc imul cltd adc push lods ret incl adc daa in mov sbb adc lret jge inc cmp sbb jo push dec dec inc lock dec adcl fwait prefetch or fimull ljmp dec mov iret adc std cs adc (bad) mov cmp into jecxz mov mov mov push jl jno ljmp out movsb adc sub xor dec clc rclb shlb (bad) cli pop in xchg sub add cld cmp jns fmuls or sub push inc aaa mov lods adc jae jns cmpsl jecxz adc pop jg mov addr16 popa pop loop (bad) leave fcoml push mov cli imul xchg dec adc add fnstcw sub movsb xor pop mov adc outsl daa pop push hlt mov mov jmp lods mov arpl add dec xor sbb scas aas (bad) pop xchg int3 or outsl nop mov push into cmpsb adc mov popf lret lret je rcll adc test aaa shrb or add adc mov sbb int3 add adc pushf je mov (bad) mov push (bad) cs adc cmpsb in test es call jne mov and inc cmp xchg (bad) jmp sti (bad) lret js insl movsb sahf inc pop iret adc add test mov xor cmp out test loope adc rclb cmp mov cwtl sub je loopne jae sbb xor (bad) imul adc fmuls (bad) mov nop push repz pop cmp movsl adc movsb loopne fwait mov dec xchg loop lahf in pop cli movlps call xchg cmpsl jp mov (bad) repnz arpl aam xor maxps fcoml sbb mov adc lret jle adc mov cmp adc into mov scas int jno mov inc adc xchg lea push aaa inc add das sbb adc cli sbb nop ljmp add out bound scas mov arpl sbb cmpsb sub xchg pop test sbb push cmp pop cs push adc sahf in sbb negl cmpsl xchg int jne add add mov adc (bad) xor dec sahf fwait sbb jae inc mov inc mov adc push dec test loop imul int3 sbb xor sti and inc adc ret xchg clc faddl jno inc out movsl out adc xor pop negb repz sbb bound cmp adc notl pop push and mov pop (bad) in repz jae xor add loopne jl in jnp xor push lock pop sbb pop js jle mov adc jns clc push aam cmc add mov push sbb repnz mov aam (bad) sub push sahf sub mov inc pushf adc int3 xor inc adc pop sub inc mov lock adc (bad) scas xchg and lret insb add dec (bad) mov push arpl jp or push adc test insb call adc in (bad) xor rcrb xchg add mov inc cwtl rolb adc mov fwait aam mov sahf cld adc negb push adc lcall adc mov push adc and aaa or push repz lcall stc push mov mov inc dec push mov push or orl fstpl sarl clc lock push notl out ds pushf sbb lods ss mov jo rep std cmp jecxz (bad) push mov jae add les xchg jmp adc pop adc sub cmpsl loope dec adc insb jne jnp pop iret mov in sub rorl dec lahf adc jb sub popf lods inc rcr mov pop push sub rcll popa xor xor adc lcall mov cmpsb jecxz repnz adc ret loope mov pop sub stos mov rcll fs adc mov aas inc or xchg pop imul mov push mov repnz add push adc add mov adc xor mov fmuls loop pop push mov dec jge adc cmp adc pop or adc push inc cltd repz sar imul lea sbb xchg mov fcoms or and xlat lock rclb cmp add mov adc test xchg jne rclb (bad) stos dec lds pop sub sub or lea adc fsubrp fimull notb rclb fwait imul das or out push push ret dec imul mov jecxz xor or adc mov pushf out aaa ljmp sarl or mov loopne adc cmp test stos adc scas mov cs inc lret lods xor pusha sbb lds dec stos pushf and dec cld inc jecxz ret (bad) pop fcompl adc lret dec gs dec mov inc mov arpl xlat fisttp xor mov mov inc push imul pop cs and sbb in cmp fsubl (bad) nop loope mov sub push push dec inc push adc aas sbb or in and mov inc dec aaa push gs movsl adc stos mov mov dec (bad) ljmp adc mov sub shrl sarl adc push pop stc adc xchg adc cwtl les bound sbb ss pop cld jae into pusha lods fmul jns sti imul stos daa in adc add pop jb cltd adc xor jecxz mov stos loopne fstl inc and adc pusha outsl add mov hlt insb subl sbb pop jecxz jns adc hlt mov lret push adc add shrl xor pop push movsl insb jb call gs pop cmc mov push xchg cmp (bad) jg lahf cwtl adc mov or repnz addl ljmp das dec inc push adc ret iret repz popa xchg lods rcrl add jne (bad) mov push pop adcl sub push dec adc sub inc adc sbb into aaa cwtl (bad) (bad) mov sub pop sub add inc loope pop mov adc cwtl in test (bad) inc xchg lahf imul insb jle mov push daa sub dec adc (bad) mov mov adc pop dec adc adc add test add mov fwait dec adc cmpsb stos mov xchg or mov int3 xchg repz std or negl icebp adc arpl (bad) cli dec dec repz cmp pop loope (bad) mov and out add bound dec ds adc gs inc push xchg js xchg loop xchg addr16 xor adc stos mov pop mov push icebp in xor inc lds xchg xor rolb (bad) ljmp addl pop mov add inc shrb cmp test dec mov les pop jno mov inc push (bad) xchg xlat adc andl jp push repnz shlb xchg xor das mov (bad) mov shrb or sbb mov (bad) jno xchg mov inc pop xchg cmp xchg rclb push xor mov adc add mov inc cmpsl sub pop enter repnz mov das cld movsb jg lahf add sahf psubusb in cli adc adc (bad) mulb mov fnstcw lds xor mov test int loopne daa mov lret mov popf jl pop or add jnp xor loope (bad) pop icebp stc repz mov lock pop mov adc mov ret loop arpl mov cmp jae and fwait dec cmp out mov repnz enter mov mov mov rolb nop add adc mov cmc pushf adc test js pop jecxz and or out das aaa bound mov sbb or aad adc cli int or and mov dec (bad) dec lea in sbb xlat or rcll call sti insb jg ret out pop push pop adc (bad) push lret xor pop fdiv or sbb adc sbb mov pop rcr and mov cwtl orl adc fsubrs dec sbb mov mov xor pop scas or and frstor imul adc adc cmc test nopl es shlb pusha inc jmp adc mov fisttp lock call xor aad sbb rep jge push push lcall adc pop xchg xor add or call mov cmp push pop out cmp mov stos mov mov xrelease loop pop xchg push nop mov insb jecxz pop mov inc in addr16 dec and jno push roll or cmp jmp fdivs pop adc pop leave push add or out lods adc test ss repz insl js into sbb lret stc hlt mov push lret mov add dec adc fimull arpl insb and out out (bad) push repnz add jbe add adc adc and into cmp iret sub cmp mov pop movsl and mov push arpl sub and (bad) push adc pop ljmp or cli int3 push adc aaa xchg aam add cmp popa movsl jae mov pop insl push outsb loopne or lret pop mov adc (bad) and push cwtl (bad) cmp lahf dec adc insl bound push test mov (bad) cwtl outsb dec scas adc fisub sbb rclb or push fdivrl out jno stc lods adc or add pop jns mov inc push mov aad adc mov aas ds hlt sbb in adc arpl mov dec cld push int and and adc inc pusha aad clc push nop add mov mov adc push sub dec inc xor scas ret cmp mov cs adc adc aas cli fwait xchg imul push jno pushf dec je xor outsl insl in or pop adc movsl cmpsl or cli mov push lea loope push imul adc cmpsb out lret jle adc adc xor xlat or arpl adc (bad) xor fadds stos pop jne out add (bad) hlt (bad) xor mov add pop jmp popf mov aad mov (bad) int3 pushl xor jno sbb adc mov fninit cs bound jne xchg (bad) sarb cld mov push push xor daa adc repz jns mov adc mov (bad) adc scas adc jl adc insb lods addb pop xor cli jae push loopne lcall lods das sbb ss jecxz,pn (bad) push cmp jecxz (bad) in fimull in cmp adc push ret jp test xchg cmp push and std adc sbb mov mov sbb insl (bad) push fadds pop adc inc xchg lcall repz pusha leave cmp loopne mov (bad) jbe adc pop and cli xor lds add push mov lcall sub setg pop in adc aas ror rcrb mov imul mov dec (bad) or pushf lahf inc and xor aas lcall pop or and hlt pop mov pop sti and fcoms lahf (bad) ficoml or pop (bad) mov loope adc arpl mov and jnp push sub dec sti repz and adc mov mov iret lea mov pop adc xchg mov faddl mov out or test sbb push adc rcr dec add (bad) pop rolb repz sti loopne pop ficomp mov adc xor dec xor scas adc call pop jle mov adc subb repz (bad) mov sub mov add test jno je pop (bad) inc adc mov mov xor in pop jl or add add mov push rol je (bad) mov test adc adc xor dec sahf stos (bad) in add adc pop or xor insl out (bad) int enter inc inc inc lea loopne xor pop je and icebp adc js (bad) dec cmpl mov jmp movsl mov dec cmpsl adc lret push push mov xchg mov das mov cld dec sbb loope inc imul and rcrl xchg push or adc and adc add adc insb outsl gs loopne mov iret out jle or jmp pop inc popf sub cs adc dec pushl push and jle outsb mov xchg inc add es adc sbb outsb adc push lods cmpsl inc jne test pop pop add adc call adc cltd pushf inc ja mov push imul adc cmp add icebp inc popl pop sub jmp xlat loopne add int pop neg sbb dec fdivs mov dec lods push repnz or jno test or adc adc lods mov jp adc push jmp leave movsl aaa push cmp inc rorb lret movnti mov (bad) jo mov jne out mov imul lahf movsb dec int notl mov xchg push push mov push mov sub adc loopne sar cmc ficom mov sub (bad) push insl dec adc mov adc dec and imul mov adc repnz int3 idivb add mov pop adc dec adc or sarb push pop mov and mov repnz sbb jmp and inc gs je xor mov (bad) sahf jne rcll mov inc pushf in sub cmpsb mov push push repz nop pusha or (bad) adc mov push adc in jae aam xor dec pop mov arpl pop lock (bad) xor popa cmp lea cmc cmpsb (bad) xchg out mov mov insb mov notb jge in or test loop push fs push je mov inc sbb xor test repz push or dec cld or (bad) std mov cmp jl add pushf pop mov inc jp sarl xor and nop roll dec cmp outsl adc aas enter and adc xor xlat adc pop pop ljmp jmp xor adc and sbb adc (bad) xchg lahf cmp in dec push push call sub mov adc jbe dec xor arpl add sbb out repz xlat push sbb in pop pop shlb mov adc imul jg adc inc jae lret rep adc test scas dec adc cld xchg pop inc fsub cmp pop mov mov xor or call mov lea stc fwait cmp cmp adc and movsl sbb notl into (bad) loope leave cs ficoml lcall in ja xchg cmpsb js loopne cli mov mov lret sub inc adc outsb sahf imul and add dec push adcl fisubrl pop or mov cmp cltd (bad) mov mov push repz scas ss js out hlt adc sub rclb jmp mov fnsave out xchg adc fwait ds out xchg lcall or adc insl or std push fwait push test jae sub (bad) cli (bad) adc loope adc outsl jle rcrb fsubs mov daa mov adc add in mov inc cmp xchg add adc ficoml adc out pop sbb loop ret dec mov adc sub cld stc xchg sub gs xchg popf mov sub rolb (bad) cwtl sbb adc mov mov adc push pushf mov or jno mov adc rcrl repnz imul lahf je fstpl (bad) dec and mov mov stos dec (bad) push hlt add push dec gs push sahf sub jle cli adc sub jp adc (bad) pop test pop sbb divl push rorb and cs movsb xchg jecxz mov imul add add repz mov leave and (bad) jmp fisttpl pop push inc adc fisubrl nop popf imul pusha insb pop call adc cltd jmp rolb cld sbb adc mov ret sbb loop je xchg or mov (bad) xor xchg aas mov dec push xchg lock mov mov lcall push mov adc fildll testb nop movsb mov lret mov sub int aas mov push inc mov sbb repz and sbb dec and xchg push inc adc (bad) or push mov hlt cmc loopne mov dec repz enter scas les mov lea adc and cli mov js mov push pop sub fbld push popf adc jmp push dec or cld lods xchg fidiv mov pop add add push mov popf cwtl aad jno push add and loop mov loope sub pop xor sbb (bad) xor mov loop pop stos sbb or adc inc xchg inc rolb loopne inc and cmp xchg sti faddp jg adc addr16 inc in std test lods jecxz out outsl cmp pusha adc fnstsw mov dec jbe mov ficom test rol sub loop add xchg adc push js jnp inc popf or in push outsl adc mov out sti or adc pushf cmp pop push adc xlat pusha popf adc cmp iret in adc aas pop sahf jp adc nop sbb xor pop adc mov and or in (bad) shll (bad) xor lahf adc in sahf xor in adc mov movzwl rclb push mov jmp arpl dec aaa xor leave adc fiadd add jns or arpl adc xchg adc pop out out xor jb or xlat jns test mov push mov dec sub dec push test repnz cmc int3 xor icebp jno jbe gs adc cmp dec adc (bad) add push mov adc rolb xor dec or (bad) sub add mov adc mov nop mov aam into adc mov add mov jle aaa adc cmp and xchg pop or arpl pop mov test divl out inc in push dec xchg adc xchg jo xchg js xchg sbb adc mov or xchg mov std fninit popf lods adc mov sbbl outsb adc xchg cmp add adc mov dec or sub andl scas pop mov test stos xlat push rcll xchg dec sbb in bound es outsb push jbe push pop and pop and daa jg or (bad) jge adc addr16 ja mov adc xor xchg dec cmpsl adc lds mov mov inc adc cmp xchg adc add les adc inc out pop lcall mov js fidivrl dec jnp adc test xor mov or (bad) repz (bad) outsl and outsb push adc jno rorb dec cs outsl js pop in lahf lcall inc jbe mov ljmp cmp shl pop mov jle adc pop xlat jo inc mov cltd cli es js mov repnz jmp pop jo adc fcoml rorl adc (bad) adc mov adc mov js sbb adc xor stc (bad) mov xchg mov cmpsb inc das cmp (bad) adc mov adc jge movsb adc inc lods adc pop jo gs jg dec pop push mov aaa in xlat lods cmp xor int je fs inc xor mov imul sbb inc adc dec sub cmp and cmc shrb daa sub or inc fsubr out lods mov adc cwtl and outsb inc and mov and xor loope adc inc jge add imul loop lret jne es mov xlat mov paddusb rorl pop mov jb fistpl xor into rcll daa aad sbb fisttpll je loope push inc nop int3 adc mov dec dec adc mov pushf xchg jae in hlt push out add inc adc cmpsw jo xchg adc leave dec mov repz call and in cmp adc sub rclb nop sbb xor cmp sub clc iret xor sti pop cmp lret stc rorb push push out mov in sbb idivb gs repnz or js dec (bad) xor outsb and (bad) cli outsl sub xchg adc mov and cmp in pop repz ss fldenv xchg jg stos gs nop push push ja and (bad) out pop lret lret sub cmp arpl inc stos dec jae sub out jg inc mov mov les loopne adc pop mov adc lahf mov stos stos stc mov cwtl cmp jo pop repz pop jno adc fwait es xor inc and cmpsl jecxz bound dec or cltd adc imul cmp pop mov xor mov xor mov add xorb or push nop fstl mov cmp adc jns sbb rorb push (bad) adc or xor jp (bad) jo cmc shlb adc mov out adc dec jg jne fistl mov adc pop push mov incl les or das lds aas movsl xchg aaa scas sbb jo inc pop adc xor test adc sub jns push test mov pop sbb ja push push loopne mov es adc decl xchg adc xchg mov pop and mov andnps cltd ljmp mov lods or push inc xchg ds push xchg or jbe jecxz cmp lock xchg adc jp push loope pop adc mov call scas movsl fistpll adc orl cld jecxz (bad) adc roll push inc aam mov (bad) sub mov fstpt mov outsb adc test sahf mov jle push in jp cmp adc add sbb lahf dec jno or jle mov ficoml xchg mov les hlt add imul adc push mov test mov les sbb cmp adc mov jmp mull outsb mov and adc sub repz and jo mov adc aas int xor mov orb xchg pushl and xor sub adc push nop (bad) adc (bad) cmp or inc hlt xor adc sub lods mov aad adc adc xor leave adc sahf scas xor sarl adc jne adc insb scas test adc test adc adc std loop sub dec lahf add inc dec stos leave int sbb movsl xrelease pop and xchg sub cmp jno bound mov add (bad) or add adc adc add mov out or xchg sti or mov add mov xor pinsrw jle and lds sbb cltd repnz jb push loope and jmp adc push add in fbstp adc xor pop add lds push jge pop inc out adc sbb pop xor dec sub enter mov out pop push xor jecxz inc ja dec data16 push imul mov sbb repz mov call fstl adc icebp hlt sbb add (bad) adc or push jge aaa rclb out les adc push inc mov (bad) icebp fistpll push adcl jl mov fwait adc mov sbb jecxz popf cwtl adc fsubrs dec mov jne stos rdmsr pop sub pop adc movsb adc movsl cmp or shl push dec sub adc shrl sbb stos pop out call or mov fnsave lds adc loope int3 push js push inc adc push rcr pop lods add sti jecxz and xor mov lret decl xor mov repnz add cmp jle jmp dec es cmp flds bound in outsb jle add repnz pop xor jecxz adc (bad) clc adc jne adc repnz imul lock insl xor stos hlt test movlps cwtl mov adc xor movsb jecxz mov nop test mov sub dec add cmp rcr clc adc xchg cltd insb xchg sarb stc ret shrb jle or pop adc jp sbb inc xchg pop imul int dec and mov sbb in jg mov jns dec imul adc scas sub mov je neg (bad) adc fisttp adc daa mov xor mov or xchg xor lea in push bnd pushf popa rep test int3 xchg sub inc and inc jnp test icebp fnstsw push ret dec adc jg sbb cltd hlt loop add add into rcll test lods orl adc lcall in push ss pop fist test push sub (bad) std in dec mov and or push mov pop xchg js outsb popf adc shrl notl mov (bad) xor lock sbb dec int3 mov mov repz test or push fisttpll jae lcall cmpsl (bad) or xor push jle mov sub xchg lods mov mov cltd and aad sbb add xchg ret mov dec test pop in adc mov adc (bad) loop jbe jp and sbb mov xchg or mov adc cmp and sbb cmp pusha cmp cltd add mov adc arpl adc dec dec xor ja cmp leave insl aas adc xorl push mov push inc push outsb movsb (bad) repz and adc adc sbb adc je into adc icebp das xchg stos cs adc cmp imul out fs jge fwait sub or add ficom adc ds cmp outsb inc iret cmp push mov jnp pop dec mov es ret xor nop adc adc lock pop jno bound aaa ret jae add mov stos repz inc test adc (bad) repnz inc mov shrb inc sbb pop inc aaa adc fidivrl mov scas lods or mov push lcall test aam fistl add add popa sbb xor mov and aas push add sbb adc or in in and ds pop mov cmp mov pop out jne dec mov jno fildll inc mov fidivl pop movsl ds mov nop push xchg out push sbb add ja mov rcll insl test js scas pop xlat adc pop dec sub adc loop or sbb push pop shrb sbb enter add adc fstps adc imulb xchg call rcll test and icebp rol sbb or test andl push movsl and cmp push fidivl out mov stc add scas inc shr (bad) adc (bad) dec xchg mov sub xor out loope insl or ja hlt push ficomp add leave pop add mov mov mov push jb add stc mov dec mov imul rcl fistp cltd outsb sub dec adc jmp or mov mov cwtl ljmp xchg push mov add jb pop adc sub cs ja push adc inc loopne adc add cmpb pop xchg inc fcmove sbb pop cmp je lock (bad) and push jo lods (bad) cmc xchg inc adc cltd int xchg loop,pt int3 enter inc and mov mov call or jge adc inc mov mov sub push add add dec pop xor cwtl (bad) xor mov out push adc push movsl sbb cltd mov lcall xchg int3 lahf xor jmp cmpsl movsl out cmp pop movsb clc jno pushf mov into mov aaa mov xor push adc or nop xor lea mov and in mov jmp xchg (bad) lcall adc and jns sbb adc mov xor vmread cmp test xor popf stos fstps push sub fcoml incl dec out sub xchg sub mov mov iret (bad) cli xor imul dec xchg adc (bad) xor cmc mov pop add mov loopne adc mov adc dec fild cld movsl pop mov scas mov scas test loop mov repz dec xor movsl ret jle jbe sub sbb mov adc adc dec std or loop pop cwtl sbb mov and dec jno mov repnz pop fistl pop mov jg cld sahf push lahf add add and or aaa inc daa insb adc cs mov pop dec xchg xchg std push adc add xchg jne or cmpsl (bad) adc inc cmc add ret js loopne mov pop or sub in loopne popf cmp roll dec adc inc sahf jno cmc aas adc (bad) (bad) jmp or pop adc nop mov lret mov cmp xor adc xchg test bswap and add sarl xchg repz cs pop cld inc cmp or adc push and xor out int subl sbb in xchg cltd xor add cmp cmc repnz mov add fbld add jb scas push movsl je stos rclb xor icebp aaa mov pusha mov adc mov xchg (bad) xor lret cmp stc pop inc inc pop ret push mov cvttps2pi repz into dec out sub push js adc loopne xchg push adcl inc xor xorl and adc jnp loop xor add popa xor adc cli mov cmp ja xor bound rclb xor sbb or adc sbb jb sbb adc (bad) stc adc pop in out out adc fcompl pushf pop mov jp lock fild adc (bad) aam sbb ja mov (bad) sbb cmp mov fwait arpl ljmp pop std or in xor into and scas jge add sub xlat mov lret xchg jmp sbbb dec mov jp mov lock int icebp imull in mov push mov cltd test or sbb bound repz popa pusha out sub jg adc xchg pop (bad) adc mov cmp adc dec repz arpl xchg or jb adc dec mov push das adc push stc dec cmp loop repz mov adc or imul int pop leave aad clc cmpsl adc mov fnsave sub sub stos add dec (bad) stos nop sub mov cmp inc xor aas decl (bad) mov push int3 inc cs cmp cmpsl xchg daa (bad) cmp (bad) xchg adc (bad) test pop rcrl aas add adc or push push adc flds dec (bad) scas in adc xchg (bad) repz push add or jp inc adc jbe mov cli or or sub mov mov aam ret xor cmpsb dec test adc nop pop test push mov add lret fnsave out adc mov inc adc jbe adc test xlat ja adc fstpl arpl lods and call xor inc add loope adc pop cmpsb pushf xchg cmp xor mov jg decl mov int in sbb pop fsubrl xchg xchg sub push lret push mov xor fstpl cmp sub out aam xchg fildl push and stc sti (bad) xor adc movsb shlb sub pop push mov sub mov lods jg cmp adc daa incb mov sti or imul dec sbb xchg push out fildl mov setge rol adc mov adc inc mov push lds or clc enter mov adc out push mov cmpsl inc fsts pop insb mov pushf xor cmc xchg fmull push adc inc stos je mov int3 dec adc lds outsl int3 test in loope iret cmp (bad) pop andnps mov repnz ss mov pop loope mov cld sti jecxz pop imul int dec pusha jl add adc int3 mov cmpsb xchg adc cli clc fs push pushf arpl jo nop hlt jne mov stos xchg mov mov (bad) push add jp sbb js adc push pop cmpsl pop push add repz and cli movsl test nop xor adc pushf shrl pop or or sub add jle dec out adc repz xor iret xor or jo wbinvd scas or aaa call loopne adc push xor push push dec sbb or sbb xor movsl push loop add pop xchg shl sti pusha pop push mov cmp lar in loope and and sub test pop cmp je imul cmp repz adc fimull div (bad) mov jno fidivr ja mov dec push sarl push outsb cmp adc pop cmp push mov mov mov dec jnp repz cmp mov push mov adc push loope (bad) adc xorb add jle xor fwait jns add adc jle adc loope sbb pushf fsubl lret out mov adc cs push shll mov adc xchg add mov daa sbb cmpsl pushf dec rclb nop in arpl push repnz inc or xchg fstl cmp repz imul loope arpl push pop xor xchg or leave inc and popf andnps enter mov popf shlb call mov add add cmpsl xchg jo lahf adc leave (bad) mov mov int addr16 pusha mov or push adc cmp sbb ds cmp xchg mov xchg leave adc pop dec mov adc popf xchg imul fistl xor pop loopne xor mov ja xchg addr16 ss lea xchg popa lea adc pop adc sbb into adc sbbl adc cli mov test sbb (bad) (bad) push pop stos adc mov stc adc jecxz inc (bad) pop xlat add mov mov mov inc scas jne lea in or jmp out pop xchg lods mov pop dec adc fsubs int fs mov lea int adc ror inc and or imul xor inc xchg sub push push xlat and jnp pop loopne popa std bound adc repnz lods fmul pop je test into push dec out xchg insb mov daa mov cmp xchg and repnz xchg scas or dec adc dec jmp je or clc pop inc xlat dec mov inc push int cmc aam add push lods or cld inc push mov aas push or lods xchg mov mov icebp dec xchg mov stos sbb stos adc enter add mov mov popf cmp repnz mov loopne sahf jle xchg dec mov pop jo rolb stc adc or stos cltd mov add jno dec mov push push int3 out jle xchg mov xor xchg adc mov lods jno cmpsl outsb stc adc bound cmpsb xor and push adc stos dec adc (bad) aam repz adc sub insl int3 fwait xlat adc ret mov mov and (bad) aaa or xchg and and dec stos mov cmpsl js adc aad pusha jne xor cltd or mov dec inc movsb mov mov cmp sti mov mov pop inc push adc fs outsl adc iret cmp lcall jo push or mov dec or sub add jl push iret dec lds xor cmp xor xor fdivrl fwait rorl pop jns nop out pop bound rclb call ss leave mov jle int3 or adc xchg xor dec sub jns pop lods add pop out cli push cmc xor add add nop test adc and pushf adc add insb repz arpl sub pop pusha outsb adc or cld popf dec lock pop add mov jns adc ss mov add rcrb jmp adc pop inc adc push in adc jae xchg das shl loop dec adc and adc lret pusha aam pop rcrb or sbb xchg (bad) push inc pop add adc (bad) jecxz or or popa pop lds xchg inc adc pop mov fadds or outsl nop ja mov loopne popa pop inc sub inc push or decl dec std pop adc mov test shr (bad) nop or xchg (bad) cmp cwtl add xchg xchg repz adc or int3 addr16 cltd xchg and adc clc or and test add test xchg xor notb pop clc rcrb cmpsb jl add aam lcall cmp pop and pop in adc fistpl adc jp push or sub repnz loop or adc int3 jecxz cltd mov jae fistp xchg xchg stos cmc pop mov adc inc ret adc mov enter or jnp sbb xor incb loope cmpsl das add mov mov jle xor mov mov xchg or adc cmp xorb fdivrl jg sbb mov adc (bad) cmp xor add test inc xchg aam jge sub pop lock fldenv xchg pop out adc push icebp (bad) cmpsl mov adc mov cwtl call in fcmove fist packssdw add dec nop cli cltd inc mov repz das pop movsb loop orl push lahf xor loop xchg adc iret iret adc insb fwait add sub dec popf mov adc int3 loopne adc sbb mov sbb inc add add inc pop dec arpl hlt outsb addl and sbb adc (bad) idivl pop adc imul dec out or (bad) std add fs push mov xchg inc adc cmp add lea mov push add mov aaa adc roll mov and ret adc mov loope mov mov je push ret mov mov adc sub mov pop cmpsl add gs mulb cmp insl xchg sbb lea jo push cwtl test adc mov std xchg roll ret dec jne nop add jo in adc mov cmp repz setne adc push jmp sub sbb pop lret xor dec sbb or pop in movsl ss mov popf or adc inc mov xchg imul loopne sbb std stos push into mov adcl pop xchg adc popf cmp pop enter adc push (bad) lods loopne or fidivl adc in adc xor adc adcl movsl mov xchg icebp (bad) mov adc xor outsb ljmp int3 aad lods scas add cmpsb int out lahf call iret hlt push pop mov out cmp jne insl add movsl gs push mov in ret mov fcoml repnz jle iret jns test js mov lea mov cltd sub cld adc pop jo mov adc test cli jno adc (bad) in fwait aaa mov add in int mov (bad) mov or fpatan (bad) cld adc sbb xchg fsubs dec xchg xor faddl lcall cmp pop mov ret mov xchg or mov fistp adc jge pushf je mov pop sbb clc adc nop ljmp adc dec sub xor mov push pop lea mov out jns negl mov push jl or popf push jle mov mov sbb add pushf or cmpsb adc sub loopne add dec bound jg call repz or adc pop xor enter mov sti mov ret adc jecxz dec popa or xchg frstor push sub jnp lret test je cmp lahf rcl leave xchg cmpsb adc outsl mov pop cmp pop pop ds push ss mov adc sbb adc xchg out and adc sub mov popf pushf dec xchg jle dec and inc sbb dec jb jno cmp cmp adc pop (bad) (bad) xor mov adc mov pop dec mov test ds inc aas add (bad) jo sbb in rorl adc push jae popa pop pop adc mov xor push fwait or sub in sbb adc mov sbb inc xchg nop adc sub stos adc aam push lret lock in (bad) jmp sbb insl bound and push or jecxz mov add adc inc adc pushf pop xor sbbl out mov adc inc and add shrl out and and repz cltd push push adc repz xor jo push mov mov push jmp xchg mov push jecxz sub daa (bad) push or adc jecxz mov sti mov xor adc mov dec dec test notl mov sub sbb aad adc mov mov imul hlt or adc repnz adc jp cmc inc inc mov fmull push hlt lods je pop inc add mov daa loope adc lock cmp pop insl push adc jmp jb sarb push aad movsl aam out shll loop les scas mov inc ds (bad) or inc xor orb fisubrl or or cmp shrb or cmpb adc movsb fnsave adc out sub xchg lcall loopne lock adc cmp sbb adcl (bad) xchg or fnstenv fistl pop push sbb test les arpl data16 pop dec shlb xchg shrb add mov dec xor xorps adcl sbb out sbb or aas in mov repz and xchg call loope fwait lahf out in mov repz adc push aas inc xchg mov ficom inc xchg xor adc jl sub repz push pusha adc aad or int3 mov mov out xchg adc andb ds test hlt in pushf imul pop (bad) int3 or sub push adc insb mov xchg adc push push inc pop and out push push dec inc xchg ss into test jae jb mov push adc and mov cmp push int3 jge xchg xchg and stc arpl outsb adc push and and mov cltd cmp insb rorb (bad) xchg int adc adc repz mov or mov mov adc (bad) ljmp fcomps and orb insl aad movsl adc adc mov out lods ds mov mov jnp inc (bad) std pop cmp push js cmc add mov inc push or adc mov cltd pop adc lds arpl out bound in es xor cmp adc sahf cld fsubrs out notl add sbb ja mov sub iret in xchg lds jns sahf pop in or inc or lock cmp adc sub out mov xchg cmp jg add adc fmul mov pop ljmp pop dec insl xchg and jp xlat push jno pop repz out aaa sub pop dec int3 scas int3 adc ds lock xchg mov jle add cmp das xor mov insb jb or hlt sub or adc mov adc jp jle ret repz adc fcompl test sbb fistp inc ljmp mov cs pop ljmp cltd sub inc xchg or cwtl mov into inc stc (bad) int mov jecxz roll jae (bad) jb adc xchg mov lret jbe es pop or pop add lea fimull xor sbb xor dec push push mov sbb daa adc repnz add jo and ja sbb jnp fsubl cmp xor das add sahf adc js pop (bad) xor jns in jnp jmp leave ret sbb adc mov mov enter subl aam xchg cmp or pop dec xchg repz add adc cmpsl xchg jns mov and mov icebp in sub jle add xchg mov (bad) adc mov xchg and mov out push or cmpsb cmp add lahf iret sbb fildll mov adc push dec jmp push push adc xchg xchg mov adc mov inc in dec notl push inc mov nop mov icebp mov popa in gs adc arpl adc loopne inc (bad) fldt rep imul ficomp adc jb push repz cs lods dec ret pop adc jne sub test or popa mov mov sub js mov adc adc addb dec nop cmp xchg scas adc pop adc cmpsl adc push adc ja leave mov (bad) ror imul adc int3 mov xchg stos pop clc pop cmp sbb add in inc push mov dec push mov loope fnstenv adc mov adc lds int3 xchg idivb sbb mov add cmpsl inc xor in mov (bad) dec adc ljmp mov fs aas dec pop xor xchg cmpsb xchg cmp add das rclb mov gs into fcomps adc fisubl adc inc push je mov mov out iret inc add xlat jle adc insl inc jo (bad) adc lret adc mov pop scas mov ret stos in or addl insb sub jno jl nop ljmp xchg jbe xor icebp mov push (bad) out enter mov mov repnz cmp movsl or cltd dec flds xor inc adc jno and jmp xor lahf outsb scas xor adc fmull sub and addr16 mov ja (bad) xor xchg push scas adc mov sbb shll adc mov (bad) and stos add inc sbb lods ret sub xchg lea ficoml cwtl jns push xchg leave jne adc outsl or lods rolb push xchg mov adc enter icebp rclb jmp (bad) mov adc xchg mov adc sarb scas fidivrl mov (bad) cmp jbe rcr sub andb int3 adc push sbb stos test rcll movsl mov add adc ljmp movsl or cmp jl arpl in push dec movsl mov sub xchg ljmp cs mov adc and enter sar push in mov stos fs pop dec pop sahf jge xor loop mov or in adc mov (bad) mov mov insb addr16 loopne add or mov popf mov in (bad) ficomp push imul mov repnz cmpsl sub cld and push shll stos lock mov adc mov sub xchg (bad) idiv adc push xor divl jns cmp popa jo int3 push or arpl stos fidivrl dec psubw or (bad) stos sti adc sub inc xchg fnsave sub das in cld adc (bad) cmp jl movsl adc mov sbb cmpsl leave push stos or adc aad xor adc pop add mov (bad) xorps xor pop xchg mov mov dec add mov add scas clc pop or push adc addr16 decl jg,pn and mov jae outsl sahf and adc out pop mov inc adc xchg cmp out mov jae mov sbb add test cmp popa xchg loopne sbbl repz out mov pop or xchg adc jno sub out add jmp push int3 mov inc cmp or sbb xchg jbe adc jge adc add aaa ja mov and pushf out mov fcoml pop sub movsb mov sti or jno inc add scas adc fwait data16 pop arpl insl adc rolb shlb lds dec rcll repz sarl rclb in cmp adc std mov jo and cmc mov push adc adc in imul push jo popa push clc insl mov pushf inc sub adc mov mov mov stos mov mov lret jae mov push movsl or adc add mov mov es aad repnz xor (bad) mov in int3 dec jae inc mov push add dec xor out adc fimull fidiv insl andl jnp xor mov mov sbb xor mov repz in sar inc add aaa pop jmp pop mov push lods int3 adc xor cmp dec sbb push rcr mov repz adc sub scas push or fcompl pop inc repnz sub inc imul test xor add insl leave and or jnp nop test movsb cmp bound repz loopne or repz clc cs aam packssdw adc xchg jns add adc call test aad popa adc add rcll push sbb lock cmpb daa sbb adc dec outsb push sub xlat mov adc jle repnz (bad) jmp enter inc adc mov mov mov adc jns adc int test lcall or outsl movl fldenv pop and sbb lods push inc imul outsl or add adc adc cli and dec jae pop xor xchg scas pop mov add jno in mov dec jmp xchg inc notb stos or inc push cmpl and sahf adc jne xor push pusha cmp adc fdivs sub outsb add push (bad) pop mov xchg sbbl jl xor adc sbbl mov inc adc or xlat loop mov stc or rcrl or loopne or std fmull cli out addr16 pop movsb insb adc cs adc sarb push sub jns (bad) mov xor jb mov or lods sbb imul mov adc push jb lods pop pop xlat je adc ret xchg xor or mov ljmp iret psubd add ret xor jle out out push adc or mov fld repz or mov sub mov dec mov push fmulp and inc xchg push adc jns xchg pop nop and xor (bad) jecxz ficomp adc ljmp (bad) fsubs sub jno (bad) in sbbl jno jnp xchg xchg imul in fistl sub pop iret lock adc std loop inc jle inc test push dec sti out outsb pop mov cmp mov call data16 and js sbbl fwait sbb fbld and jg adc sbb stos mov data16 fimull mov adc pop jmp and pushf adc jo push int sbb lret movsl roll fsts xlat xchg shrb out jbe mov or push add and les push push jb out sub adc fidiv adc icebp insl cli daa dec adc lods in cltd jg mov cmp cmp sbb adc pop adc xchg adc mov jmp pop mov xchg jbe xchg ja sbb push jnp fldt pop lea aam test mov or (bad) (bad) int movsl shlb mov roll lds adc jmp leave adc arpl jno add xchg (bad) leave rorl loope xchg cld jb lahf cmp pop push ret mov sbb fdivrl or cwtl lret movsl mov jecxz push dec cmpl pop pop popf nop hlt cltd xchg add or cmpsb and push popa jbe repz dec sbb aam xchg adc or scas mov pop shlb mov add lods (bad) dec mov repz pop icebp mov sub jmp sbb movsb into add adc inc hlt xchg int mov cmpsl dec lods adc lahf xchg inc xor mov cltd dec js stos fstpl mov adc in mov jge lea jecxz push sbb fsubrs and lret (bad) cmp gs cmp adc adc jb and fsts xor mov jp mov xlat xor xor into adc scas rcl rcrb and sub int (bad) loopne push ret test fdivrs fbld jge adc jne xchg pop rolb out or xor loop cltd scas pop fdivrp adc mov xchg (bad) ror dec sbbb sahf out cmp adc mov sub xor adc addr16 aaa push and pop xor dec dec out and fidiv je inc cmp push sbb mov mov sub push pop xchg jg adc and notl rcrb dec testb cmp xchg adc xor (bad) repz cld pop iret ret in pop fisub adc cs sbb loopne adc jmp out rclb aam in jns shr jl and (bad) lods adc lret adc pop push insl mov cmp pop dec mov lods jle mov pusha movsl (bad) mov adc inc sti mov test mov test and test dec xchg mov lret adc incl xor sbb jns je es je aas sbb dec pop data16 pop adc mov je cmp push stos push incb aas adc xchg in mov shr inc xchg pop mov jg decb adc fadds adc adc int3 out sbb popa adc pop mov add add jno push cmpsb mov rcl push sbb out std push repnz pop adc sbb je leave shrb sub mov mov push mov pop repnz cs ficom mov sbb jg scas mov xlat push mov and lods into rolb jns pop mov lods xor repz mov pusha xor ljmp repz insb xor mov adc int sbb xchg es out ljmp sub andl mov fisub adc nop pop mov clc icebp push std adc popa pushf adc fstsw push cmpsl les mov imul repnz fwait mov je xchg sbb je push jbe xor mov xor xor adc sbb adc mov lcall adc pop jb hlt xor leave xor popf fcoml stos or cmp ret test push test stos adc pop repnz xor in inc shr lret or pop mov adc and jo fwait xchg inc add adc sub xchg psrld aam jnp outsb mov std clc jb outsb lret lods pop ret push or mov (bad) popa das adc scas stc sbb clc lods mov push repz subb push shrb and or leave test popa fcoms fistl jmp push inc mulb imul inc loope mov pop movsl inc ds adc pop loopne sarl adc cli adc mov add ss adc ret or (bad) icebp test pop and aad or call loope ja sub (bad) xchg cmp aaa jmp or pushf (bad) mov add mov inc repnz cmp xchg push mov and aad xchg add push ret lret (bad) xor push add dec mov add sti mov daa fwait test xchg ficomp mov cmovle into data16 stos mov mov pop stc pcmpgtw pop push fldl add test adc dec inc xlat ss or adc mov dec and fstpl stc and adc ficoml add push sub lea fildl inc dec push daa mov adc stos lods shlb adc (bad) cmp xchg adc sbb movups cmpsb fidiv jae into call movlps xchg stc mov xor add ret xchg adc adc xchg mov data16 dec adc pop in dec and stos adc or leave addr16 xchg bound pop fmuls xchg sub pop and insl or dec aad rcrl mov loop add push jl add rcll mov pop repnz pop (bad) adc mov mov sarb sub mov push aas cli das stos inc int3 stos mov (bad) lcall loopne adc lods cmpsl mov mov adc adc add sti mov hlt push aaa fidivl pop pop adc sub sbb or and push addr16 enter lret inc sbb repz scas mov fisub out dec iret stc add xchg sbb xchg nop nop in adc xor js mov out push or loop adc scas lods and xor icebp jmp in push pusha or out repz and lds mov adc aas or fwait mov xchg int push jp xchg loope adc push inc dec inc and lock mov xchg adc xor cmpsb ljmp aad or into adc cmp adc inc xlat xor rolb test lahf or adc aas xchg mov or xorl addr16 xchg adc push add cmpsb mov test in mov call jno xor adc es or adc or inc mov pextrw push sbb push sub push es or push xchg cmp mov (bad) dec movsb adc jge pop dec test mov mov scas add mov xor sbb mov xchg ss or daa mov cld outsl or repz fcomip sbb or adc mov enter pop adc out xchg dec arpl xor cltd outsb or iret xchg inc xchg adc test jb lock outsl jnp std dec cltd sti les or xor fwait mov add sbb in add dec xor insb fwait adc xchg pushf sub push repz xchg or das lock ljmp mov sub and mov xchg adc nop mov and movd adc hlt xor mov das or xor jg adc nop pop mov lret xor pop jmp lds fs push pop loop pop or mov ret mov or fisubl pop and cwtl lea push mov push adc andl jno movsb inc imull mov faddl mov and adc pop jg dec cmp aas cmp and adc push jnp sti and mov pop loopw bound ret jo arpl add leave (bad) pop in jne (bad) sbb adc or lahf std cltd inc adc sub or out mov out or mov pop fsts js jmp fidivr adc push je xchg inc and sbb mov repz and aaa das mov sub orl insb push aas iret sahf mov (bad) hlt push and mov lret leave ja mov jge repz push add rorb repz inc ss je dec jne xchg and pusha add jo ret cmpsb xor cwtl repz sub faddp jle add (bad) dec insl push das mov xchg ret mov leave mov lds rorb js fcomip pop (bad) xor rorb or adc jg jnp roll jecxz ficomp xchg call jmp or aam es adc loopne lahf adc xor fbstp ja sub dec jno pop inc je sbb cmp mov xlat lods pop aam mov pop sbb cmpsl std (bad) cmp xor adc and enter lcall mov bound push xor ja stos mov cli popf sbb adc popa jae push sub adc ror lret push xor adc aaa mov cmpsb dec sbb ja push mov into fisttp pextrw add subl dec mov fwait call xchg stos fstps xlat out dec pop popa or adc flds popl dec adc adc mov adcl push inc inc or sahf arpl lds mov adc push mov dec mov movsl and pop sbb into stos repz push lods bound jnp inc les dec adc sbb dec shrb pusha repz jnp je sub xchg inc test pop mov in rcrb push sbb rclb popf mov pop sub push sbb fnstcw cltd ja adc shrl mov sbb repz jg cmp hlt out sub mov adc xor scas adc fs mov clc pop pop add (bad) and icebp adc pop mov fistp adc leave scas jg jae imul mov or loop xlat push mov mov mov dec jle adc cmp rorl or adc cltd push push fdivs insb in add adc and adc cltd push adc dec jae stos inc fwait adc fcoms fcmovne sub adc rorl sub adc lock cmp rclb js outsb fmuls lea bound jmp (bad) iret sbb jp (bad) xor adc adc repz into mov ret hlt jns push aas jg inc add out mov add sub aaa loop or out rcll aas fwait (bad) fnstsw lea mov dec test je into mov and aas push jo imul fdivl stos dec es inc or cli pop fnstsw or and and sbb lahf push imul cmp xor hlt cs jp xchg adc les push cmp pop mov shrb aas add mov std pop sub mov pop out add adc jp rcll (bad) aad push icebp (bad) hlt xor adc nop adcb or lock mov ret dec xor daa in (bad) push out and inc das data16 add repz cwtl mov push adc mov mov sarl (bad) mov fucom fdivr nop dec or mov jnp jbe add iret adc ja cmp mov inc mov push inc in add dec cmp adc ficomp out add mov mov or int3 mov repz lea dec fnstsw pushf pop ficoml sbb inc mov jnp clc fdivl xchg outsb sbb scas sub and pusha into add xchg mov or clc adc (bad) push fstpl out repz jmp sbb loope jmp mov popa cmpsl test (bad) rcll mov mov add cmp rcrb adc rorb and push jne outsb add xchg xor fwait mov and push adcb mov push clc gs lods push (bad) stos (bad) add or mov or sti adc xor nop fwait pop aam push nop inc sbb enter cmp rorl pop xor rcll inc rol cwtl popl adc cmp push scas adc sbb mov sbb into adc xchg lods inc adc jnp mov push cmp hlt mov leave add xchg xchg sahf scas stc decl adc lcall pop mov test (bad) xor inc aam jmp in fs cwtl int3 add flds mov xchg pop push dec repz and mov or addr16 (bad) xchg mov dec adc pop xchg or pop lds mov sub lahf (bad) sbb shlb imul adc adc in adc xchg cld mov notb js daa sub add sbb jne push xor add mov xchg outsb addr16 jl fisttp and mov jle sbb cmpsb rcrb mov xchg mov lahf ss pop adc bound inc adc cmp push andl adc adc cmpsb push push stos cmp mov jns or mov (bad) push pop adc or into outsl fistpll cli adc lret in mov jle adc repnz sarb test mov into aam pop cmp xor rcl sub fnstsw jmp cmp mov es add dec inc movsb cmp sbb adc add adc imul sub xchg test lret mov pop sbb mov adc into out mov shrb xlat cmpsl mov (bad) xchg pop mov inc mov jne push cld adc sbb cmp and repz or ror xchg rcrl push lahf js sbb fwait jle pop adc cmpsl push stos cmp push adc repz xchg sub scas lods adc jns push imul adc test test adc jns xor faddl int3 imul popa bound inc repz push shr (bad) cwtl mov xor mov add ss decb fwait xchg arpl in inc cmovo test push outsb cmp aam lret or or mov mov repz sbb mov xor cli adc mov adc push in sub mov jns sarb adc jg test clc or adc jnp push cli lods sar cmpb in rcl adc std and xchg pop adc adc mov fisubl xor out test mov and sti add loope adc add mov mov scas movsl and jno adc daa add mov adc push xor nop repnz or adc sub js push cmpb in out cmp jbe movsb out pop adc test jns aad mov lods lock fstpt aas and push jecxz jl inc shr adc mov (bad) (bad) shl ret or imul cmc inc arpl adc mov mov fcoml fnstenv cmp push cld in lods adc rep mov je test inc in add pop bound incb mov icebp jmp jle sub movsl mov cld lock add sbb jo mov nop add add cmp out call adc mov stc scas rcrb adc jae aad add ds jl adc sahf mov mov jle adc cmp adc dec int3 jae mov lods adc sbb outsb adc cli scas push xchg xor or lods push or mov cld fcoml push mov xchg push jmp lods or iret push cmpsb movb in mov out loop pop or inc das out or adc ret add adc cld nop mov (bad) xor (bad) adc xchg insl jo imul repz dec inc (bad) jmp pop mov gs mov adc mov out div jbe adc sbb sub imul jmp push movsb push adc push dec adc aad arpl add int fisubr cmp xchg repz mov xchg cmpsl or lods adc dec sub lea mov dec or add xchg out test cld xlat fidiv sahf pop dec das inc iret int dec sbb dec test cmc jae dec push pushf pop xadd adc inc movl popl loopne movsb sub lea out sub loope negb mov mov mov (bad) mov mov jp das push test cltd dec sub inc in jmp adc je mov aam inc adc adc pop lods cld outsl adc xchg (bad) sub sbb out sbb rolb or adc xchg jb andl fst adc cmp pop mov mov mov adc dec jo xor fwait imul mov mov je lahf fistl jg movsl stos mov test js mov adc ror adc pop fnstenv mov xchg xchg dec adc test hlt lds les pop je or add xchg jno cld xchg repz loope dec loop xlat stc adc aas jmp sarb lahf or stos lcall adc mov ret adc cwtl lods pop jns sbb test cmp mov pop loope leave aas in mov xchg fsubl std xor push adc jp push (bad) pushf lret adc xor mov mov mov jmp lods ljmp pop and or jno pusha fs adc mov ljmp std scas (bad) adc mov je repz test hlt enter jns imul or cmpl dec sbb pop push add fdivp jb icebp mov sbb mov push cmp aas push dec dec les adc push arpl icebp jge pop mov mov (bad) sarl push adc rcll mov hlt lahf (bad) loopne ss inc xor nop adc cmpsl rolb cmp xlat add iret repz imul push inc adc jne aad adc xor adc les cmc adc adc mov hlt (bad) iret and or cmc xchg cmp mov call repz into sub and or lcall in xor mov xor mov shll mov (bad) adc mov ret xor adc rcrl scas faddl jle dec je stc mov call stos adc sub lods mov pop xchg and dec inc es adc cmp jl or dec aas repz outsb sbbl mov xchg sub inc lcall int adc xchg push cs inc adc call int xlat sub cmp sti sbb adc aad scas jmp fsubrs adc cmp mov adc js fsts imul clc adc (bad) imul das movsl lods repz movl add aaa cld inc roll repz in subl and aas push mov sti aaa push inc pop fwait cwtl adc sub jno (bad) add mov sub and negl jg sub ja movsb adc adc xchg outsb pop cs adc mov sub stos aaa cmp push sbb call mov push inc aaa adc inc mov xor adc add mov aam sahf test adc push sbb push mov push and imul icebp mov mov push jne add xor rorl fcmovnbe sbb jb adc ljmp push aaa mov fs pop dec jbe (bad) jae mov out cmpsb lea adc inc cmp ja mov and dec push adcb fs push push adc int3 pop test sbb xchg push add xchg test jo xor sbb sub xor mov sarb in pop xor dec adc xor xlat sbb pop insl dec scas iret outsl hlt call loopne addl cmp adc push lret inc repnz sbb push push in dec ja sarb xchg js cmp push adc inc popa add (bad) sub enter adc iret daa cmc adc mov out xor add inc push inc inc pusha adc adc cmc xchg adc addr16 testb push in sub pushf scas mov dec icebp push mov out outsl inc or jp push fbstp int3 mov hlt (bad) mov xchg mov cld mov and ror faddp ja inc mov daa pop lret xor adc jbe push std pop fcmovb adc sahf cmp mov inc hlt iret imul int3 jno rol sbb stc adc xchg mov scas pop inc (bad) xor into in push out cmpsl adc shll push outsb mov mov push (bad) sar or mov dec notl cwtl outsl loop sbb pusha jmp xchg lds xor sbb repz ficom js jp sbb pop and lret pop in adc sbb insl add jbe loopne mov dec mov gs jns xor movsb mov adc movl repnz xor jae jbe cmp stos fistl pusha jns jecxz out test ficom leave out adc rcrb mov daa xor mov hlt mov inc dec pop repz pop cmp push xlat add xchg sbb (bad) popf sbb jmp stc mov mov mov mov or sbb adc mov sti adc movsl cmp (bad) std add pop clc mov cltd lret cwtl sbb pop jle adc (bad) cmp add adc outsb es aad popa xchg xlat pop lea stc arpl int jg adc adc popa repz xchg sbbl dec jnp scas cld or add push ficomp aam faddl add mov arpl adc xor (bad) enter mov push movsb add pop cmp repz dec imul sub sbb dec cwtl call int adc xchg mov sub and and pop inc pop adc movsl push cmp jmp imul sub popa test mov int cmp mov adc push lods cmp scas xchg inc ret cli lds add add call insb inc test pop adc fnstcw mov adc in mov adc insb insl adc add lcall call xchg rep push pusha adc sub and lret jae rorl cmp adc sub jp add adc inc nop push adc push fs xlat xor sub and dec jne ds adc stc prefetcht0 jns cmp repz xor mov add hlt dec outsl mov dec jmp sar add adc mov ficom dec pop sub cwtl (bad) mov (bad) adc fbld mov jo mov adc inc sbb mov mov (bad) out hlt decb lcall mov mov xchg jae inc adc aaa push stos fdivrp add (bad) jbe push add aas add call mov rcrb insb or mov adc sbb mov lret test pcmpgtb sbb or test adc mov int iret scas adc les mov push jmp cmp gs adc inc dec jb pusha adc xor push sbb (bad) or adc pushf daa fisubr sbb cld cli mov mov or push cld push mov xor xor and mov sub je xor insb ret push loope adc xchg fwait inc sub pop sbb adc mov add ss cmpsl jns mov jne,pn loope hlt push or adc outsl into dec fcoms jle loop lcall jge inc sbb insb mov mov lds mul push pop add test stos xor lods int3 (bad) xchg jg adc cmp pusha je sbb lret adc dec xor mov jg jnp mov cs into test ljmp dec scas mov dec int jae jnp mov gs xor stos mov fstpl mov pop jp mov adc pop outsl adc mov pop icebp movsl cmp iret insl adc inc cmpsl add loope mov sbb sahf adc popa push mov adc sbb out adc cs lods xlat add adc notl sub mov mov setb jmp jle mov push (bad) pop aam ss mov or adc jno push push adc cltd mov push xor movsb sbb mov or pop sub rorl push sub pusha enter push pop rep rcrb movsb lds idivl iret aas adc push push add lea sbb pushf add adc jge (bad) lahf int3 push adc inc mov push dec sub cmpsl je inc (bad) adc mov lods cmp jne adc or xlat pop pusha mov adc and enter cmp ds jae xor loopne cld adc xor ss ret push test adc jns or cmc loop and sbb inc mov xor pop call xchg and ds adc std imul pop outsl dec mov inc and pop (bad) lret pop repz repz or mov test out lods adc push pop adc test in cs dec sbb push mov roll adc fwait adc adc flds out fistl mov int3 leave cmpsw pushf repz push adc fsubrl dec xor push adc lods clc test cmp test adc mov aaa xchg sti pop std add lret leave mov clc and and mov cmp or cld out push jno cmpsb add cltd mov pop pop push pop add adc dec or (bad) scas jb stos out dec and pusha fstl adc aaa in sbb adc repz (bad) das ret mov arpl jbe daa jmp rep push add push sub push pop pusha pushf xchg xchg jle inc lcall adc iret xor clc fsubl jb inc adc mov cmp xor (bad) cmpsb and or aaa leave push nop sub call sbb (bad) int3 mov inc inc sbb xor dec push call adc sar insl sub scas pop lock mov in imul mov cli mov pop mov inc mov fistpll add xchg loope cltd mov mov mov outsl adc roll mov cmp adc xchg cs add sbb mov mov push sub and je mov in loope xchg repz mov jp sub sbb adc enter cwtl ficoml in (bad) xor add xchg mov lock inc adc (bad) addr16 or sahf iret add ret push out daa push loopne mov or out hlt (bad) mov in test and fidiv cmp adc jp addl lcall adc add les leave xor mov mov movsb in movsl mov insl add cmpsl out leave mov and rcr sbb dec (bad) xchg daa repz inc lret adc inc sar mov dec adc pop jnp adc dec pop adc jmp addr16 lds push dec out adc adc sbb push (bad) sbb test mov in mov add adc inc xchg mov inc aam adc rol push mov mov insb adc mov outsl adc pusha or add inc adc and push mov pop mov jmp adc (bad) js icebp mov adc mov sbb adc hlt cwtl cltd mov fisttpll adc fisubl movsb (bad) fist and rcl sub (bad) jae cmp call cmpsb pop std add je gs ljmp sbb lea mov pop (bad) sub xchg das push jle addr16 cmp (bad) mov mov adc fcmovb and fldt jne repz movsb and andl in jge xor fsubs sub xchg sbb subps in push adc mov mov adc adc inc aam fstps xchg dec or push inc jg scas dec jne decb mov mov sarl mov sahf inc or mov mov or add push add dec iret int adc movsb push cmp fwait js xor add add (bad) incl xor loope in mov adc mov mov lea imul lret or lods xor lret (bad) in mov jo xchg pop add rclb je mov insb rorl cwtl mov out testb add test or adc push jg xor add add dec popa add xor sbb adc jno jne push cmp mov (bad) stos jge fstl mov scas mov adc push stc mov jg pop inc pop jl mov (bad) fsub push push xchg or push cmp sub (bad) cli or aam popf jo je dec jge gs add or adc add js xor adc clc cmpb jle adc pusha xor aam xchg sub out adcl add test aas add mov xchg push xlat inc das mov cmp (bad) scas push xor pushf pop dec and adc push mov adc ret adc sahf test adc mov into repz scas repz xlat dec adc lcall (bad) xchg cmp outsb push add test fmul cltd cmp repz xadd jne pop mov push xor xchg bswap sbb mov cmp test push mov xchg pop pop dec cmp push (bad) dec mov into or jnp mov mov mov (bad) pusha mov sbb dec stos lcall push add pusha sub cli lret shrl mov xchg jae subl js int out nop sti jb jle or fidivr push jge adc cs pop mov repz sbb add int3 (bad) std xor test stc or push fmull push xor mov inc push adc negl mov xlat mov mov xchg push xchg mov out push pop or adc fimull lods adc jne enter nop stc subb xchg lea push adc incl mov pushf mov (bad) dec repnz (bad) adc mov repz mov jne or call sub inc inc adc add add jle aam icebp repz xlat mov cmp jnp sub adc sub cmp repz mov imul and push pop rcrb cmpsb mov bound das dec mov aaa adc lods mov mov push or stc adc adc lahf cmc add add adc sbb cmp mov outsl adc test fdivs icebp pop jo rol inc adc jne into inc xorb add adc nop sahf sbb mov dec das cmp adc and xor mov adc pop into jle or xor nop jmp cmpsb jae and sub adc mov push enter inc mov ss push stc lods (bad) adc dec movsb dec add cld popf lock xor mov dec mov adc or fstps fistpl xor gs dec push inc sub or (bad) xor pop push lret xchg test cmp repz pop xchg fiadd insl fstp adc and in movsl xor jge aad iret xor and stos sbb adc cmp test js imul pop adc cmp int into mov mov scas push xor out push inc or aas gs rorb mov cli pusha sahf aam aad mov rclb xor or push add insb hlt jle xor adc xchg push out clc sbb cmp add (bad) into mov mov sub cmp ret adc jmp ds xchg jns lahf push std cltd repz cmc test lea adc idivb jge jle adc fstpl cmp pusha jle repnz flds adc bsf xorl stc or sub sbb add outsb pop cs jns shr call push fnstenv adc fwait xchg mov sbb push xchg fcoml add test aad xor int pushf fwait stos rdmsr test mov xchg sahf paddd add jnp xchg out outsl jecxz or add inc and repz and and repz adc jo scas aas test mov ds stos stos mov xchg les adc dec pushf insb adc fildl adc int xchg mov push test sub jmp cli adc pop cwtl xor mov adc bound aaa sahf sub xchg push sbb adc push rorl outsb aam in and or xor dec sahf repz lcall adc push ljmp or adc push pop mov xor dec adc mov (bad) call mov dec xor jns outsl mov add pop push inc adc mov jecxz shrb mov and dec mov pop in call mov xor adc add or cwtl leave adc pop adc hlt div sub xchg xor pop lods clc out mov in ljmp out repnz insb or push fistl dec rcrl adc adc repz mov jl ds adc stos lcall loop add mov insb xchg adc dec les sub mov inc je xchg adc cmp adc xor adc popf enter dec and outsb fisubr dec dec add push adc push cli mov mov popa adc ficom out add ficoml mov daa ret fwait les and das add xor into sbb lock push repz enter or (bad) mov sbb xor dec xchg into lahf or cmpb cld loopne adc pop adc mov xor adc test sub inc std iret lock adc arpl in or dec adc jp jle add mov test adc clc adc jmp pop cltd mov jb jecxz xor shrb in loop mov mov adc dec mov loope pop mov adc pusha and pushf sub stos mov push mov fldt add jge adc push adc inc ss inc movsb adc jne adc lods cli addl xchg stc cmp jo or lahf xor mov lock repz pop mov push mov nop (bad) mov xor dec or imul into sbb xchg cwtl jl lods jnp icebp mov repz mov mov (bad) sbb adc jno jae repz jns push jle adc adc clc fcomi adc mov pop mov pop adc ror xor hlt fwait jmp xor gs test adc (bad) out ret hlt pop movsl adc mov mov add push cmp nop xlat mov push mov lods mov pop in adc popl pop les fcoml sub test movsb mov jecxz cmp lock mov mov and inc fwait cmpsl stos adc out push xor sub testb push xchg aas push sti movsl ret inc inc lret or sbb outsb repz adc mov inc hlt test notl nop (bad) adc mov add adc xchg push in and mov pop cmp jecxz adc or sahf adc cmpsl and adc lock adc call dec notl test nop jb add mov xchg mov and xchg xor (bad) (bad) lock mov hlt in arpl sub test nop mov sarl mov or pop or mov and sbb rorb pop adc xorl dec xchg rcrl add add ja adc push jge mov mov out jns cmp push into test pop pop das (bad) mov xor mov or int adc ja mov adc push jb dec inc push sbb mov pop repz leave adc stos in repnz sub popf rcrl and enter (bad) mov inc and or mov nop jge cmc out adc shrl jno mov or data16 lret sbb lcall popf in sbb gs outsb push sar sbb mov jl mov cmpl es out adc outsl test popf ja adc push sub cmp loop jl mov das aad pusha cli adc and mov push je add adc push or call xchg ret mov xor push sbb mov inc cmp xchg xor fnstenv dec inc out addl and pop pop jbe adc insl adc jne popf add loop loope (bad) repz xlat or ret popl je insl out sysenter adc push adcb fs push mov pop sbb icebp xchg cld lahf adc das fmull dec sbb dec and cmp adcb sbb rclb xorl adc hlt cli int addr16 add jmp je andl adc dec test int pop orl loop or adc fcmovnb fidivl adc inc lock adc ds and push (bad) ret scas mov adcb sbb push adc pop mov sbb pop xchg sub ljmp jle clc lods and pop xchg push and bt and out adc mov ljmp mov sahf rcrb adc xchg adc lods insb rcl xchg cmpsb or (bad) arpl bound mov xor std rcll notl cmp adc push sub rcll icebp mov pop (bad) ljmp jl sbb cwtl out mov xor cmp iret jmp sub in or fcomip cmp shlb pop lods cmpsb add hlt sub jmp in adc adc mov xchg loope cmpsb adc lahf ret mov mov mov pop mov adc test xlat or pop out dec mov xchg jno ds or xor lcall add pusha xchg lds mov xchg icebp nop or dec push and adc scas pop xchg mov adc repnz dec adcb aam sub push (bad) insl pop add outsl jge jp mul inc mov (bad) pop std adc push loopne and xchg mov sarl loope push jnp xor imul mov xchg fcmovne push pop fwait rcrb adc mov ret daa cmp mov dec xlat xchg fucomi add dec (bad) enter adc cmpl cmp cmp sahf mov mov aad jmp test and jne inc and inc xor and inc mov fwait scas hlt fimull adc push cld or movsb movsl repnz xchg nop adc cmpsl je (bad) jno sbb test add aam inc add sahf sub out adc insl inc jp sub add lods (bad) jns pop popf inc outsb adc mov test mov add adc cmpsb lret xchg sbb pop int or pop mov outsl loope (bad) nop adc insb scas jbe jge sub mov push enter mov inc ds xchg je ljmp rcll xor lret push es adc cli je dec dec add adc imul insb (bad) popa ja add xchg mov das push adc test adc cld or push xor es int add clc gs xor rolb xchg mov mov xorb movsb dec adc aaa jns cmc inc add adc xchg and ja pop (bad) fisub adc sahf int3 xchg popf push (bad) rcll sarl scas jne mov xor xchg jg push mov and sbb lcall inc stc mov adc sub jmp push (bad) dec jnp dec adc pusha sub push lea sub xchg lret sbb inc ljmp push adc sbbw push push pop pop iret adc insl scas cs outsl das lret adc roll adc mov mov push aam popa (bad) adc sbb xchg in repz inc jno jns stc mov cld pop push addl adc fiadd sbb setne addr16 leave je repnz sub xorb jns scas sbb push add add in rcrb sarl mov cmp adc push cli scas mov roll out (bad) jb dec les inc jp adc adc and or jns inc fs adc addr16 push rep inc leave pop stos mov imul std jp test adc mov pop adc xchg sbb jge stc xrelease xchg xchg fmuls pop sub adc push xor adc pusha push inc jno jbe sbb push rcr lds mov int mov inc repz push or es lret test ficoml adc or push xchg jl test scas je nop add adc cltd mov jb pop mov adc sbbl adc test cwtl nop in sti adc xor pop lock dec pusha jle cmp daa (bad) imul ret insl push mov (bad) dec bnd dec jl mov jae fcoml adc xlat lret add sub inc mov xchg imul sbb (bad) jb inc push hlt fstl mov xchg bound jge add fxtract rcll insl push lret scas fwait jp adc adc or shrb adc aaa cltd mov mov jne ds jbe and inc adc mov pop fcomip sti outsl mov ficom stos jmp popf push enter or ljmp call cmp lds push xchg cmc adc imul push aaa int3 addr16 repz mov add scas lods lahf adc cmp fs xor ret icebp mov adc push (bad) mov aam repnz (bad) iret cmc xor ja xor adc (bad) mov int3 fcmovnbe dec dec adc jno pop cmp cmp daa fwait adc mov insb mov and out sahf cltd call outsb push out or adc push into pop adc xchg data16 mov pop adc js push cwtl cmc test lahf mov dec test push iret mov xor test sub addl outsb adc inc mov adc adc sub pop sbb rolb add js pop jno aas dec or stos adc scas fnstenv push rcrb add xchg jmp push mov data16 popa dec pop pushf in mov mov std lret add ret jge adc lret adc int3 in arpl dec test mov imul cmpsl inc outsl pop adc push cmp add xchg pop repz insl dec adc jns mov adc cmp adc or aad mov pop pshufw test decb mov in dec sub icebp lahf cltd sub xor add or mull hlt push bound sbb fdivp jmp jg mov push movsb xchg mov or loop fucom adc dec cmp nop fidiv push les xchg xlat das lods xor mov notb adc pop push imull mov xor push dec xchg mov fcoml (bad) fldcw negl mov add push add pop inc scas jns adc es adc mov xor inc xchg fnsave clc in add das stos lcall pop pop inc lret xor popl stos in add sub rep sbb dec sbb or cmp sub mov mov pop aas enter and or cltd adc sbb out imul rorb addr16 cmp lds mov ficomp adc inc ret sub ss adc aas in clc sahf bound pop lret push adc imul inc cmp mov pop dec pop pop clc aas push rorl push add adc cmpb cmp or mov lock xor stc je adc mov mov les loopne stos (bad) mov dec mov aad or gs js test sbb ds xchg sti or mov add lret jg es shlb fwait shr xchg cltd cmpsl lock int je or sbb pop loope adc (bad) jbe adc jb jecxz push mov (bad) aaa xchg fcompl leave cmp call sub aaa mov push lahf mov out mov mov and popf adc addr16 test jg aaa adc xchg in sbb lcall sbb push lret mov dec insb lds cli adc mov adc inc xchg lods and jne inc cld adc xor sub xchg cmp pop scas cltd lds adc sub adc jno fiadd xor ja aam jle push mov pop icebp push dec pop scas adc mov pushf outsl jg push popa adcl enter cmp pop int3 rcrl lea adc xchg push ja insb xor in or adc decl insl adc push sub and pop jg xchg mov adc fucomp and add ja stc aaa test mov sub push sbb sbb addr16 pop dec dec mov repz and aam (bad) ret push inc push sbb aad push shll sub int pop adc lcall rclb imul add add adc les aam xchg cmp scas pop adc jmp pop xchg push xor sbb fs or lds (bad) in pop adc in xlat iret fist inc sub movl push cwtl push dec pop xor and mov mov inc setae add adc lcall cld sub arpl push hlt pop jb pop int scas mov in fldl sbb push sbb jmp shr pop dec mov xchg cmp adc push push scas icebp mov and push adc xchg (bad) pop fwait jnp cmp jecxz jno or mov xor cmpsl mov and imull test adc dec adc push sub pushf or push push adc inc pop dec xchg popa pusha adc mov idiv and (bad) mov je or lea das push repnz cmpsl adc push enter mov repz ja adc pop jno sub mov push mov mov adc lods sbb xchg xchg fist inc test pop cld xchg adc ss add repnz sub add mov lcall pop xor iret or lldt lahf jle popf scas jp jns inc jno sub shr rcll dec xlat inc sbb sub add loopne sbb cmpsb pop xor stc xchg push outsb cmp fsubl imul ja mov adc call sbb iret adc mov push xor in adc leave fnstsw ljmp mov in adc inc xor mov call notb out fs adc repnz inc jnp or test xor data16 xchg push add loop adc imul dec (bad) and xlat mov cmc adc mov push sub inc pop std jg imul (bad) movsb pusha nop fsubs adc or xchg sahf push or ficom lahf push xor mov movsb lret and pop dec movl jb std adc jmp rcrl rcll call mov dec fimul cs inc sbb mov add cld adc push popf mov adc adc mov mov ret mov imul int jl shlb add clc and (bad) adc mov adc or mov sub lahf inc add leave fs sbb xor adc or adc sahf adc lcall jbe fwait orl and adc xchg inc adc lahf xor adc pushf sbb cwtl cmpsl and (bad) mov in fucom xor pop push lods (bad) jbe push adcb pop add fimul rclb sub mov aam mov fldcw lret add dec sahf mov pop and inc out mov dec push mov sbb mov push sub fs into nop cmp xchg test imul add ljmp clc icebp stc popf (bad) fdivrl dec dec jns mov lea mov andb mov pushf mov dec loop cmp cmp mov inc xchg std add xor imul mov jecxz (bad) jmp jl ja adcl adc xor cltd dec xchg and mov jb dec xchg je imul mov leave loop push adc add bound adc sbb lret scas sti inc add insl loope adc inc insb call adc iret aad xchg mov in cmpsb pop mov nop out jo pop push mov in pop decl adc pop sbb out push or cmc mov mov push mov popf rcrb lock adc xor sbb cmp jge pop add adc mov (bad) repnz stc pop pmaxsw add test or and arpl pop adcb mov mov dec fsubrl bsf shlb add jmp in imul pop les mov jecxz xor add or adc out shrb xchg or dec push out adc sub ljmp add and pop rolb mov xor fisubrl push mov jp adc fwait cwtl jmp imul mov mov rorb inc pusha pop push mov adc repnz stc push xchg cmp adc mov test inc pop lahf or fstps adc pushf (bad) dec sub xor lods jle inc mov adc arpl popf add cwtl inc imul fmuls (bad) stc sub adc sub loopne (bad) dec fs daa (bad) out mov mov int3 adc lods push mov aas or mov xor arpl sahf (bad) (bad) ljmp adc jl ds adcl repz (bad) (bad) out scas cmp mov test testb cmp ret divl das add (bad) push cld mov adc test nop push insb incl ljmp adc mov insl int3 adc sti pop lods adc or or add xor push inc ljmp pop idivb aam xor iret or (bad) in adc pusha inc mov sarb out lods adc mov icebp xor in out cltd fisttpl clc adc shrb mov hlt adc (bad) sahf jnp sti icebp arpl jg sub pusha dec outsl repz add adc jbe adc (bad) push bt jmp mov pop outsb cmp cltd xor jb lahf incb adc mov repz mov pop lret mov jl insb mov cld mov jmp mov xchg adc les std es lret adc dec xchg push bound or jne sub adc jns add pop enter vpgatherdq push lret adc repz adc fild stc push imul pop test ret or leave sti adc aas mov push dec xchg enter xor cltd fdecstp pop or rcrl pop jmp icebp cmp loopne test adc aaa shlb xor stos pop rorl jnp sbb mov and push push pop add sub jle loope,pn gs mov push mov xchg cmp ud2 (bad) lods xor jmp shll sbb adc and pop xchg fdivl jmp pop repnz sub lcall jbe scas mov cmpsb sub dec je and adc jecxz mov or inc out decb (bad) xor mov inc cld imul insl mov cmp sbb adc movsb and pop stos and sbb adc rclb dec mov lods add outsb test aas xor divl xchg (bad) in into out adc xrelease ret jl jle cmp das ljmp cmp lcall adc dec and stos ja mov jp out mov (bad) negl xchg inc test add add insb sub movsb loope aad dec xor cmc and mov dec or adc xor adc jl lods pop xchg mov adc (bad) mov out daa xor jnp sub or repz push mov add (bad) daa repz mov push add rorb mov xchg inc inc inc jg add sub dec pop (bad) adc popa or push loope adc test push adc sbb push pop jl lock pop pop pop adc icebp inc fimul xor cmc adc sub xchg push add adc dec fidivrl loopne adc pop dec sahf jb cld cmpsl nop and sbb adc or incb sub shlb xchg (bad) fisub mov into ss adc repz push dec lods adc insl cmp xchg cwtl and lret xchg cmp jbe add add (bad) insl call mov in mov mov xor jbe cmpsb mov jmp lret mov push daa dec shrb inc roll test mov adc jg nop ffree inc popf adc mov mov push (bad) adc xor cli ss adc jle loopne call xor jle cld adc cmp push mov jmp adc fdivrl arpl daa sahf jne out test add pop inc cmp xor imul dec scas xlat xchg xor push pop or adc (bad) je mov fisttp push sbb sbb inc mov xor repz dec lods sbb mov into push mov jge mov enter mov rcrb mov xchg pop adc inc xchg push int3 dec adc hlt push mov or xchg push dec in adc sbb adc push xor lods in adc shrb rep mov inc scas add inc cmp or or addr16 adc mov sarb xor pop out sbb mov lahf sbb (bad) dec or pushf add jl daa adc (bad) repz gs dec int mov in jl scas sub (bad) xor loope out add xchg adc fild adc fwait inc sahf mov cmpsb mov aam cmp popa mov iret fild add cmp (bad) xchg movsl enter xor lahf jnp shlb shrb cwtl (bad) pop dec incl sub mov into adc insb fsubp xor and sub and aaa add (bad) movsb sub adc pusha jge adc sub dec dec mov mov rcll inc stos mov cmp cmpsb inc adc sub mov xor add inc push cwtl mov pop sti aaa cmpsl inc mov mov adc inc (bad) int3 inc pop and adc push fdivr aam call aad mov lds mov inc loope pop add inc xor mov add inc xor (bad) out xor inc pop cmp das inc pop pop fst adc push jns movsl fsts mov mov mov push xor xbegin outsb or adc pusha mov jl adc jae arpl add or or or mov (bad) adc push or sar int xor shll pop pop push das std ret add push mov xlat adc xchg popf comiss adc ret ret test push cmpsb (bad) dec mov mov addl fstl push pop sarl (bad) sub pop pop mov cmp aas fnsave adc ss push cmpsl ror jnp mov fcoms pop outsl push lods (bad) push lock mov push sbb outsl adc test out ror cld adc and adc and aas mov loopne shlb sbb (bad) push in movsl lods fist mov dec adc sub mov sti sarl adc shll and jp ds pushf (bad) stos sbb mov aas sub pop aam adc sub xchg out mov cmp sub add and adc and pop push adc fwait mov cmpsb or xor lds sbb mov and mov adc push inc xor cld sub mov adc adc call scas push adc imul into inc daa cltd cs adc (bad) dec (bad) (bad) xchg fcompl stos mov adc pop nop push inc iret sarb adc sbb dec push or add and jecxz mov adc mov adc lret adc cli xchg aas or push adc std cmp xor adc push outsl mov pop dec aaa pop xchg fisttpll cld repz out and sub cmp adc pushf xlat out xchg divb jns jg cmp repz pop lret dec adc ret add push or stc popf mov adc add mov (bad) (bad) adc test mov fstl ret data16 cli movsb mov shrb jns idivb in push inc sbb (bad) jne fild mov (bad) xor aas fwait jnp add roll and outsl ljmp pop cltd sahf imul push out jg hlt std add stos mov mov fmul call xlat ja adc addl cmp fist loop dec popf pop add call orl aaa repz sub dec pop cmp psubsw cmp xlat test out rolb mov adc mov xchg adc movb lret push adc loopne dec into xor push adc fstpt repz push insb lea hlt mov mov adc into ja pop lret jmp adc inc mov stc mov dec push mov pop fistl push xor jmp add insl sub and xchg adc lret loope mov add test mov fisub fldcw mov gs stos adc inc cmp inc insl push xchg test dec jmp adc mov adc int3 push dec insb repz outsb cwtl fistp mov mov xor or adc push mov lahf scas adc jp adc mov out shlb pop movsl add mov lods fs jae mov paddw sbb inc aam mov lret or push fwait pop movsb ja jl push (bad) daa cmpsb mov pushf repz dec inc dec add adc rclb jp aas and xor mov adc roll ljmp popf decb inc jno jne shrl pop call dec and fstl insb adc mov (bad) lock add jmp xchg adc pop pushf mov test adc mov mov or or or sub loop sub push adc test repnz pusha or push aas xor rcl add dec cwtl adc mov and jno movsl cmp test mov repz and repz mov jno jae or fnstcw mov in adc jp or mov mov addl aas mov dec xlat int pop add dec lods add pushl xchg dec adc jmp sub aad out adc test push mov repz setne dec adc push inc js xchg adc aad or mov test mov mov dec xchg loop sbb clc pop jno xor fisubrl mov cmp fistl adc adcl xchg cmp repz js push jbe cmpsl or call stc movl mov cs pop ss adc repz jb movl add xchg fdivrl lds jo leave xlat adc mov aas cwtl sbb pop repnz adc orl shll repz pop test repnz repnz jp rolb pop pop mov daa jnp adc push test adc enter bound scas mov add js sahf jno fist out push ja leave xchg fs push mov popf and rclb les not pushf jne pop into jg sub add pusha inc ds repz pop ja add inc pop into sub mul idivl jle push push pop adc dec inc adcl ret arpl addr16 push fucom mov (bad) test leave rclb lods out adc sbb dec push mov jbe mov adc out push inc add (bad) xor nop adc movsb ret mov mov (bad) lcall mov stos xchg or fstl sbb adc cmp dec roll adc stos dec adc mov cmp xor push mov adc pop test sbb (bad) pop pop icebp adc xchg int3 xchg add adc sbb popf lock mov inc jl shrl js jb mov repnz push jecxz mov and add jns dec push adc fwait adc adc sbb ret pop test jmp pop xor jge pusha mov mov adc cmp mov adc std push rorl stc pushf xlat inc mov lock orb (bad) inc sbb sub or loope lcall repz or jge es test adc jns (bad) dec ds sarb cmpsb or pop pop fsubl hlt fimull insb (bad) ja nop addr16 adc out push xchg repz mov sbb mov mov xor adc cltd adc sahf outsl insb sub jmp les mov std jecxz jo sbb dec daa adc xchg addr16 xchg rolb adc jmp pop arpl adc add les rcrb fwait xchg ret call in adc test je adc jnp ljmp daa adc shrb pop ret fs xor add add adc push sbb push push repz pop mov sti and adc rolb (bad) sti adc leave loopne adc push and iret push mov loope jns adc sti cwtl dec push xchg mov loop fstp sub out (bad) xor pop sub lret xchg cmp xchg repz mov push push ret enter push repz popf mov push test jecxz pushf mov imul xchg or dec adc imul ds xchg (bad) nop and push fadd and inc xchg cltd outsb adc inc mov adc repnz sub or xor mov cmc call inc insb push fild sbbb cmp push ficoml add (bad) aaa adc hlt xorl inc incb stos inc pop push add adc mov sbb sub (bad) loopne nop movsl (bad) jb adc push loop push adc jbe repnz cld adc (bad) sub jae dec mov adc popa in mov stos mov push xchg or adc xor adc mov inc jae jmp xchg pop xor lcall rclb ljmp push repz out imul mov inc and imul or xor popa xchg mov pop dec out mov aad leave popa mov push mov out lds rcr pop shrb int3 sbbl ljmp cmpsl inc (bad) and insl mov xor xchg or mov cwtl adc pop imul pop adc test cmp mov mov dec (bad) inc repz loope imul mov test xor lds repz scas add and and (bad) sub es pop mov adc adc movsl adc pop out jbe dec dec rclb test test inc sbb pop imul adc push lcall (bad) fs xor out in popa pop add jno icebp rorb outsl out cmc inc push xchg imul (bad) adc sti xorb xor pop push push jp imul lret mov subl clc (bad) xchg push outsl rclb xchg into pop pop pop lock sarl sub dec add subl push leave arpl int sbb push out addr16 lgs ret sub jne and iretw stos jmp rorb cli jecxz add mov jecxz jnp imul adc xlat shrl adc push and adc test xchg repz and mov xchg sub or imul adc dec mov or mov fucomip jns mov pop data16 jb repz dec mov daa jns nop ret mov sub sahf sbb test adc cwtl out jno aad das enter outsl outsb insl cmc je inc add incl pop idiv inc or and adc aas out and fild jle add inc add pop xchg out adc mov test mov (bad) sbb adc lods mov xor scas or out or and cs jnp andl adc sub es lcall adc cmp nop jg cmpsl adc push inc mov adc rcrb jns sub inc (bad) adc lods mov sarb dec into (bad) xor cli dec aas lret pop xchg inc repz pop cmp dec (bad) jmp arpl xchg (bad) mov xchg test pop fldenv fcomps adc cs (bad) clc inc mov mov (bad) js push scas push je repz adcb add xchg adc outsb jo fisttp inc jns add int getsec push xor lret dec jp pop divb leave adc mov adc std inc loope dec dec out adc ss cs mov push sti xor je lock dec add andl adc push scas adc test punpcklbw fcoml bound sbb push scas lods das pop dec sub and stos repnz cwtl mov pushf cmp lods mov add lods add dec dec adc imul fisubr adc pusha js pushf jl pop mov fwait lret mov lods xor jns mov dec and adc push loopne je adc in push jmp das xchg fistpll adc pop cmp jge mov mov add push (bad) sti ss mov sub mov ljmp call push push dec mov movsb push jbe lahf jge fs jecxz ljmp scas mov inc cld dec fwait adc ret adc clc push test (bad) xor addr16 cmc adc testl jp add rorb gs xor xor sahf xchg mov (bad) mov xor xchg das xor test cmp test push repnz dec or add fisubrl loop adc repnz scas inc adc xor in loopne (bad) mov sub jecxz add mov ret test jb ds adc loope inc out mov mov test push adc addr16 dec ljmp jl jne imul mov push inc int3 add std adc sbb aas inc xlat mov clc stos and ljmp in or dec rcr jle mov pop loopne push ret pop shufps fstl std xor pop adc pop sarl inc repz ss mov adc xor push mov cmp lds lock (bad) adc js jne test outsl divb ret sbb xchg xor repz loopne jmp imul punpckhwd loope add ret shrb jb jle adc imul mov inc in push mov xor testb enter dec cltd outsl jp ss nop int jecxz sahf dec dec out push mov loopne aas xchg inc sbb rcll jle mov cmp adc fildll test mov ss mov fnstcw jp xor mov (bad) pop pop adc js and jp aam cmpsb inc cmpsl pop pop add adc das jb sbb inc nop mov mov adc or mov jb adc xchg fstl xchg stc inc sbb jle aas mov or xchg fstpt pop cmp jl js jle cld (bad) mov lds icebp outsl sub sbb adc add jecxz nop lahf shrl icebp and data16 jle aam mov sti fdivs ss loop dec or or in mov rclb (bad) icebp add dec cmp xchg fldcw fwait cmp or ret pop xchg or inc sub cmpsb add popf jae push pop out pop sub adc sarb sub lods repz das mov data16 insl jl xor rorb lock inc cli (bad) pop push mov push xchg sahf or les frstor lcall dec adc cmp dec adc xor push adc sbb lods and push fdivp add sbb sbb adcb mov test inc lea jmp mov adc sbb xchg mov dec call es adc push out push jp add push and insl cmp adc cld test hlt add jno xchg rcrl adc out popf cmpsb pop adc sbb cmpsl cli and das pop movsb mov mov jnp adc push push add sub imul popf mov push or (bad) js adc adc cmp int sbb mov ljmp add and data16 adc xchg out dec fs cmp clc mov push adc push adc ss out loope sbb pop mov jmp adc sbb adc and adc mov pop jecxz,pt xchg mov adc xor or adc fisttpll ret or insl jno mov push push nop cltd push lock xchg outsb mov dec insl inc mov push ret push shr adc fistp push in push inc enter mov mov xor repz sub or inc jno ja cmp rolb jecxz adc hlt fsts xor dec ljmp je adc push or add in adc fstpt stos mov jmp repz add or (bad) loopne adc pop adc fmul test jl and adc rol cs pop jmp je jo sbb xchg or push lret adc iret ja (bad) (bad) jb jg es sbb add adc dec mov and shrb movsb cmovl out mov add sub jae dec cmp mov scas mov adc clc data16 flds fidivr mov mov push dec or xor rep aaa jmp test push cli xor movsl mov cmpl loopne sbb (bad) mov push iret jne jns inc call sahf pop add enter push (bad) repz sub pop sub mov lcall arpl jno pop imulb popa add mov and sub daa mov jb outsl cwtl outsb pop lods or inc dec in lea stos cltd dec or test adc push dec xchg cmp adc jne sub and add repz inc imul sub add int sbb xlat movsb pop push mov lea mov pushf add (bad) mov push enter addl mov adc push ljmp push mov mov repnz ljmp test add (bad) adc inc push (bad) jno jg das and dec test mov subl outsl adc not mov lds adc lret in repz gs repz adc sub pop out scas das pop inc and adc rcl xchg adc aad inc xor out dec pop movlps loopne sub rcll pusha and lahf scas xchg push lret mov pop dec roll (bad) jb pop movsb aam loop pop movsl ss idivl jecxz mov sbb push xlat into sub int test repz ja jecxz gs adc cmp adc cltd aas fistp fcoml or pusha dec inc jg repz sbb test mov cld or adc loop adc fldt aas adcl adc fist cmp mov add pop sbb daa call sahf fild jns outsl dec test sbb (bad) pop mov test mov fsubl or and adc sub mov stc mov sbb adc mov pop pop (bad) sbb xor push add lret fnstenv mov adc add dec push inc addr16 lret enter scas cmp subb jge movsl test sub adc xor xorl test adc jbe mov xor xor xor pop movsb mov dec subb mov mov push lea in and or or les pop lret hlt je jmp xor addr16 in mov mov out mov hlt jns adc (bad) jae mov cmpsb fdiv (bad) das mov inc popa imul pinsrw or xlat mov rorb adc fildll arpl aam cmpl xor test cmpb add movsb fsubl fisubrl call jle icebp cwtl into les fwait pushf push add cmp cwtl or test cs (bad) repz sub in dec pop ret push mov movsl nop repnz not cltd or cmp and or xchg (bad) mov or adc add adc out pop xor ds push (bad) int (bad) xor adc inc push and (bad) sbb adc out pop add shrb popa mov adc pushf jge mov add adc pop dec or adc int into popf sub lock inc mov adc inc push gs xor sbb add jae (bad) sub push jmp push inc rcr hlt adc or adc add in mov aas ja push and lds mov aad addb testb scas pushf mov add mov mov add add sub repz js adc leave mov sub push cmpsl clc ja lcall xchg std ret adc pop test xchg dec mov adc add xor insl test std xchg repnz jg mov or sbb xchg popf add mov mov mov pop xor sub push sub or dec fnsave mov test sar (bad) mov arpl jbe repnz std repz push stos or fstps int3 cmc mov xor xor mov repz imul add hlt cmp adc pop xlat fist inc cmpsl ss push loopne xchg mov cmp add pop stos into inc adc jl push adc test andl cli mov inc ret sbb mov in dec dec jg mov (bad) jnp aam mov cmp cmp int3 insl nop xor in repz sbb dec cmp sbb dec mov jne adc nop mov shlb xchg dec lods xor or dec xchg in clc mov mov fwait push std icebp repz dec in sbb xorb loopne mov sub rcl imul push or inc cmpl inc adc insl push xor sbb test lcall add shr cmc enter lock aam push mov adc mov iret dec or adc fs popa jns mov pop repz cmp outsl pop mov repz jo cmp mov decl adc mov popf rclb sti mov call push or sbb in cmp rcrl add pushf cmp add cltd in mov fildll pop or adc mov in daa stc add (bad) ret jnp arpl (bad) fiadd cmpxchg dec adc jae jmp rcll out rcl addl sbb ds mov mov xchg and into mov jno adc jbe and lcall mov adc shrl mov add nop push mov std cmp sub imul adc je adc cmp jnp cmpsb fcom jecxz (bad) into xlat adc or pushf adc inc mov sub adc popf mull dec sub aas pop lret (bad) adc xor fisttpll sub mov pop popa adc or mov lods push adc lahf inc mov daa mov stos mov imul xor rol cmp out add jns popf sub mov insb sbb pop loop adc mov adc daa sbb lcall cmp cmc movsl out inc xchg mov mov lcall fs lock fmull and icebp mov fcomi stos mov sbb pushl sbb scas adc outsb icebp adc test lahf add mov adc mov pop sbb pop xor dec and push subl or push vmovdqu sti add fldcw add nop and adc (bad) mov adc jno lahf adc and xor jp lret lea xchg mov aaa ret inc dec sbb adc sbb cmp cltd and adc stos int adc jecxz (bad) adc mov adc adc add daa js call jne dec and adc lahf addr16 test mov das xor cli xchg stc and hlt out arpl inc cmpsb bound cmpsl push push push xchg sbb repnz jle inc mov imul mov xchg inc xor lret add mov cmp mov sarb dec push fcmovnbe xchg adc fcoml adc inc dec imul scas mov enter jl jo xorl sbb cmp nop adc ja mov adc in test orl dec adc sub inc mov sbb lahf adc movsb inc xor and test mov adc dec out cmp cmp adc jbe mov mov pop mov sbb adc xchg pop or adc repz sbb adc loopne ficom adc cld xlat bswap adc pop fistpll rolb movsb and or adc mov adc xorb mov cmpsb xlat pop push adcl jmp xor and lods cmpb push daa or inc adc fwait mov xor lcall gs xchg or lret sarb (bad) (bad) adc jle (bad) (bad) jo adc scas adc jae aam add movsb push push fld or xor cmp and and and dec adc cltd mov das mov sahf mov sti mov (bad) arpl cmp adc lret aaa and mov add faddl adc pop test fs jne adc out push (bad) addr16 adc in xor and ds pop lock shrb mov lahf push adc insb (bad) xor (bad) jmp (bad) icebp dec adc cwtl jne xor adc jo mov adc pushf pop ss scas sbb cmp add int3 (bad) pop dec lcall sbb mov pop mov pop or arpl imul cltd ret push mov lds sti (bad) lcall (bad) xor outsl sbb pop das fisubr (bad) mov pop push adc stc in push adc out lret mov jae ljmp xchg dec sbb adc repnz stc clc daa add adc push mov or xlat in negb or shlb nop repz mov mov cli roll aaa rorl adc mov jnp andl stos pop sub mov lods adc test or ja pop andl xor adc inc xor mov xor lods cmpsb call xor mov push inc and and push xor mov sub (bad) outsl repz lods add or jg mov adc ret push sub fcmovnbe cmp adc mov pop jg hlt adc cwtl out lods subl (bad) mov rcll push dec sub adc push loop xor cmp adc dec cmpsl sub sub lods pop dec xchg sbb leave test pop insl adc cmpsb xchg cmp movsl andl push shrl test out push xor inc nop lods sahf mov adc lcall (bad) cmp mov adc xor data16 bound sub add mov jae mov mov adc inc arpl adc push add and sub cmpsb pop and fisttp insl mov jge xchg jle mov cmp sub or cmp lret push les or adc icebp jae fwait mov add adc cmc inc lret (bad) adc pop adc mov (bad) jl sahf adc sti jmp je ljmp and test jge adc mov or cmp adc and scas adc cmp insl lahf js adc and xchg sbb adc and pop insl jae mov jbe mov sti imul dec sbb aaa push mov push cltd pop clc insb jne mov xchg ret das sub or scas sub add dec adc mov ret test cmp scas imul or jecxz xor addr16 inc sbb int3 and push ss cmp cmp mov dec or test and cltd or add sbb add sahf int push fisubr iret int3 xor push xchg jmp mov rcr push push loop lds pop and push mov out cmp movsl sub push add icebp adc or mov sub lods jae adc and jge adc add mov (bad) cli out outsb sti ficom cltd or mov mov cmp in jno dec bound jnp mov sub movsb cmp add jle inc jno mov popf leave rcr mov pop jp sub jns mov pop adc dec push mov adc dec jl mov sbb es cmpsl inc rorb push dec mov mov xchg xor sub dec dec or movsb mov add mov push gs vpxor cmpsb add adc in adc in and sbb xor les xor fnstsw flds add jbe add or xor mov flds cld sub pop iret sub pop adc cmp adc xchg add daa mov (bad) cli iret mov (bad) or push in pop sbb dec push mov adc rcl aas add cmp std xchg adc sub dec mov and arpl int3 push or adc mov mov sti pop cmp adc mov pop imul stc (bad) sti lea xchg sahf dec and incb arpl xchg xor clc inc dec aaa jae repz pop adc stos jmp adc scas popf fldcw or jnp addr16 cs xor jp push pop xlat adc loope add fist aaa icebp cmp pop mov js mov mov pushf xor mov mov mov adcl jae adc (bad) (bad) out pusha pop daa rcr add jecxz cmp fdivrp adcb sub dec adc xchg mov sbb push jb orl std cmpsl pop (bad) nop mov mov adc neg test add and lahf adc loop iret adc mov push adc (bad) lock or adc and repz (bad) dec push das add lods fnstcw rcrb mov add repnz lods aam dec test push cmp xor push fisubr ret xchg inc (bad) mov xor mov add out xchg je adc cmpsb insl icebp adc push add pmullw adc mov adc data16 pushf mov (bad) loopne mov ljmp dec jmp cmc mov xlat adc cmpsl sub dec fnsave int add cmp stc ljmp mov outsl repz (bad) or repnz cmp sub pop iret adcb fwait pop add push clc test pop add pop inc push jns adc loope xchg adc adc fyl2xp1 cmpsb test adc pushf dec lcall ret jnp mov pop dec adc xchg lcall xrelease jl imul sub icebp (bad) xchg adc arpl sar fimul dec adc mov icebp push sti adc rcll bound mov sub pop icebp sbb mov ja repz inc push jae rcpps cmp mov mov rcrl arpl (bad) out xor mov adc or jno push pop adc int mov lea test and push in xchg test mov sbb sahf add and dec push ljmp dec into xor push pushf lea adc mov pop pop sbb adc or scas adc sub adc bound mov adc ds xchg js adc xor xchg dec jp dec and sub add adc or loop imul rep pop mov adc xchg adc rep cmp and mov cvtps2pd adc pop push popa loopne sub pop je stc ds fist dec dec dec add ret pop adc cmp mov cmp or ja lret bound adc and in lcall aam mov mov sub fsubrl rcr xor pop call daa push in pop fildll adc (bad) aad jne adc popf jmp jo xor mov imul push js adcl mul fs rclb inc aam test sbb fdivrl adc inc (bad) data16 loopne inc pop fldenv jns fcompl adc shr cmp insl call inc adc jge fdivrl (bad) mov mov dec xor adc bound push cld rcrb xchg push add and (bad) jnp lods pop mov scas push dec mov push adc xchg cwtl cmp outsw sub (bad) addr16 cmpsl loopne rclb push jecxz (bad) ljmp lds bts mov inc lret or sbb iret lea mov pop push pusha nop push mov add in adc data16 outsb lret xor pusha mov sbb jge adc jnp rcll movsb xor inc dec stos push xchg or adc adc call mov addr16 jae,pt ss out fisttpll fdivrs cmp (bad) fisttpl or dec and pop jbe pop dec push aas adc std cmp adc mov inc adc call sbb jmp xchg into add add sbb sub add shlb lcall fild mov add cmp inc push lds stos mov adc or (bad) adc jno cmp stc fcompl jne cmpsl negl xor jns cmp inc repnz adc jbe rcr jo insl outsl push icebp pop and pop (bad) scas adc push (bad) and or aas inc test test movsl cmp or add out subl mov std sub in cmp push jne (bad) pop aas jl nop sub sbb ret inc aaa adc xor int3 adc xor out inc scas adc push add stos add das xor and imul mov loop sti adc fisub jb adc roll jmp jp jmp out adc lret xchg xchg shlb and shr jp (bad) and (bad) (bad) lcall or mull jae adc hlt or adc nop push add arpl or pop dec iret mov and xchg mov cmp jae aaa pop pop ds xor jb incl cld cmp adc xlat cltd jmp xchg and sti xchg pop lods and andl in sbb adc movsb roll adc adc and int3 mov cltd mov cmp or iret icebp dec ja xor fsubrs jne sbb loop xchg cli push cld adc shlb rep cltd stos cmpsb out dec mov rorb test lods xor stos insb repnz pop pop adc leave cmp movsl test and cmp fistp inc stc xlat xchg (bad) push outsb nop jecxz add loop jbe pop add mov fwait lods pop adc negb mov rcrl push repz mov add out lcall inc inc leave movsl cmp sbb jmp sub fadd sahf mov xchg xchg rdtsc imul or push jns fstl les inc ret aaa sub scas pushl sbb add je adc (bad) cmpsb sub nop or mov dec loopne xor (bad) adc outsb pop test jne stos dec sub imul sbb daa pop xchg hlt inc adc fwait leave decl jo push xchg adc mov shrb and pop fwait adc in adc ljmp (bad) sbb adc sbb shlb cmp cld xor pop jnp or in popf adc pop or mov test lea (bad) mov divb adc push xlat jge rcll stos nop xchg xor cwtl movsb ficomp mov and rcrl lcall std cmp xchg pop add sahf test sub sbb mov (bad) ds not add cmp inc mov sbb es jmp sarl or mov lock cmp loope int pop insb adc mov xlat out or nop adc sbb jmp adc or mov push cmpsb pop dec pusha in sbb xchg sbb loopne shrl faddl lea bound (bad) ja or mov clc mov pop lahf into jb adc pushfw mov repnz sub mov cmp out (bad) or test xorb add bound inc scas fdivrs mov ja (bad) inc or xor (bad) cmc push faddl ss ds je mov or mov mov sahf call and fsubrp adc sarl lds push jg sbb outsl inc lcall add lret leave je or jmp ljmp (bad) movsl daa adc add lods adc (bad) or mov jecxz or lock jmp mov pop jno xchg mov pop jae pop scas pop adc mov push addl (bad) data16 push (bad) xor xchg lret jno mov lea and and sbb xchg mov je adc fildll inc cmp scas add subb mov jge mov das hlt aaa (bad) adc inc cwtl arpl mov rclb or (bad) push xchg adc sbb push adc jl fimul xchg xchg ss and adc pop icebp and jno adc add push jae adc jns or std data16 fwait adc ja mov icebp adc mov cs rorb adc mov lods ja dec js loop in shlb xor xor cmp push mov or sub jl push jecxz add adc rcrl push jecxz shlb dec or test adc ss mov and cmpsb mov mov repz mov jmp jl notl dec loope add stc (bad) dec repz cmpsl jecxz sub out stos jmp xchg (bad) xor lahf cmp lods cmpsl dec pop xchg jecxz lea push dec jmp jno jo (bad) faddp int push inc dec add insl add mov repz push jb (bad) repz fild sub jmp mov das jmp into add jae scas mov add push (bad) imul (bad) lcall mov cli stos bnd shl jb adc in and xchg or sub fidivl into addr16 push mov mov add adc (bad) pop mov pushf push or adc test lahf call movlps mov out sbb int mov sahf stos xlat or and mov or and sub jbe in imul ja adc rorl in loope mov hlt sbb adc xor mov addl push xor ds iret and out jmp xchg adc push sbb hlt push and js iret ja test movl lods mov add jp test movsl mov rcrl imul mov (bad) xor lret jns push sbb adc mov (bad) mov cmc xchg sub mov arpl dec mov popa xchg cltd rorb xchg imul push lods adc sub mov fs mov adc mov je xchg push orl adc or adc notb popf in ss or adc (bad) dec pop jo lods lahf xor inc inc jle push pusha jl xor adc je repnz dec and les mov scas movlhps ret xchg dec adc jo ss bound push inc (bad) (bad) fisttp mov mov adc xlat loope fcmovnbe jns in jge and add test out adc mov or and rclb imul nop push lds mov mov jno pusha push xchg std int jns (bad) cmpsl jge (bad) mov aaa jne adc mov cmc int dec pop fadds scas xchg sub mov xchg sbb movsb inc cmpsl and adc mov dec mov dec mov or in in sti ficompl add xor sub fmulp adc sbb (bad) lock rorl pop push jmp sbb sub mov out sbb mov add lods pop lcall cmp js inc sub xchg or (bad) adc push or jnp pop mov sub out outsb scas fsts xchg call pop movsl sbb cmp lret add push pop adc mov pop add xlat lret jno adc iret mov stos adc xor fstl dec (bad) fsubs pop sbb add mov pop push xchg jno les repz cld xor inc shll aas mov push sub ja sahf push mov add adc fst pop lock jnp adc sbb nop adc sub stos dec adc adc cli add adc lds push aad fstl and mov dec add rclb add mov or in push mov pusha xor mov mov adc jecxz dec mov pusha iret std fnstenv sub pop adc icebp orl mov clc xorl adc xchg mov xchg shll test aam add adc test adc cmpsb daa fldt adc mov cwtl sub fidivl dec xor adc (bad) xchg push sub es add lea jg dec out add add cwtl push addr16 mov mov adc fstps mov in lds xchg pop pop cwtl push mov mov sbb repz push movsl jne jo push mov jbe adc dec loop iret or (bad) cltd or mov loopne sti adc jecxz test adc push ds adc mov repnz repz aam push rcrb fcompl nop hlt repz ds daa jmp nopl adc dec pushf fild das cld mov sbb pop jns jno mov or mov cmc dec pop addr16 adc mov add adc (bad) imul xchg fwait scas pushl inc std inc outsl pushf xor lea xor (bad) mov pop or fnstcw (bad) adc popa out adc adc or and inc xorb bound push mov (bad) cmc pop gs xor or (bad) pop arpl add or mov test or lds cmp xchg mov dec push push and jo ret int dec fstps mov stos js movsl dec xor or dec ljmp je adc mov xchg push sub pop xor cs adc in repnz hlt inc pusha mov in xor mov adc add ja inc les pop adc cmpsb or data16 xlat mov add pop leave cmp mov adc or add mov push mov inc or add jno pushf ds ljmp adc out xchg jle lock or jecxz adc jae mov or jbe hlt jle out adc push add adc push inc adc aam repnz (bad) or sbb jno push int dec fcoml mov dec lods insl add ja addr16 sbb (bad) lahf dec sub out rcl sti or popf lock jno mulb push jmp mov push (bad) stc adc jno sub jns out add mov stos ss ljmp movsb inc lcall fisub xor loopne adc xor mov pop sahf mov cmp mov mov inc xor cmp movsb sbb xor mov cmp mov repz mov bound jne mov push mov pop outsb stos lcall add pushf ljmp mov sbb adc sub aaa sahf xor xor sbb std lods xchg add movsb mov lds mov (bad) push mov push outsl test data16 sbb cmp repnz adc jno (bad) mov clc adc icebp add stos mov add lock xor notb sbb fsubp lods scas mov xor xlat mov adc pop push pop lahf out push ret (bad) cmpsl test and adc or addr16 gs inc push or pop cltd adc out fsts jo jae inc add pop push cmp cltd gs or or cld adc addr16 jle push pop adc sbb daa test fcomps sbb ljmp insl jl jg mov repz sub call dec adc or faddl test into mov rcll jmp inc jp adc cwtl pop aad int and pop cmp pop mov movsl sub adc jecxz sub imul xchg and pushf adc xchg inc xor and xchg aam mov sub mov adc pop push rolb (bad) enter adc das loopne xor repz jge or (bad) jg inc mov decb (bad) jns sub adc mov adc sub adc push (bad) inc scas mov adc daa inc sti adc pop ret adcl fwait iret loope cmp test ljmp push addl pop insl das and fidivr xchg adc cmp pop shl add mov mov sbb adc sbb cmp popa int3 pop sbbb pop adc pop adc pop push js adc mov sbb or adc cld push jge inc mov into rclb ret add test adc adc adc mov sub adc cmp mov lahf clc xchg repz add cld stos dec cltd or xchg mov and xchg rcl mov lea loop sbb or nop push jne add imul pop mov and repz xchg pop and ds xchg jno fistpl repnz xchg adc (bad) sub adc daa add dec (bad) mov adc mov roll inc sub cmp dec or jb inc xor mov adc imul pop mov test mov sbb dec adc loopne (bad) mov out mov push arpl repz cmp cltd test adc cli add mov sbb jae addr16 or cwtl add scas jmp adc pop out pop fwait or adc jbe rcrb pop xchg add hlt dec jl mov mov pop (bad) sub or test scas xor inc push push add pop iret rclb inc or adc push aad repz loop xchg repnz wrmsr xor (bad) mov xchg push sbb jecxz adc push cmc push repz cwtl mov or xchg (bad) ss or arpl (bad) push and adc clc mov adc cwtl or in and repz mov inc add scas add dec xchg inc adc sbb jecxz lret dec lods lock imulb mov xchg in jnp pop jbe adc das sbb aam enter popa lahf add jle movsb (bad) dec mov arpl lods adc rcl push and mov fbstp (bad) sub insb (bad) jmp and rcrb inc int cmpsb stos (bad) adc outsl mov movsb (bad) pmulhuw adc dec scas xor mov loopne outsb rclb inc lret cmp push pop repnz xchg adc xor mov adc das into add mov pushf cmpsb rep movsl loopne mov sub js ja stos pushf aam mov test cld adc and xchg jae cmp cmp lcall lods inc das cltd or mov or pop adc and imul rcl subl dec mov aas rclb mov adc dec mov cltd rcrb jmp add adc cmp notl xor pop cmpsl push pop test dec pop (bad) lods out xor fsub or lods adc add adc sbb inc lcall (bad) cmpsb add cwtl enter inc or adc ret sub pop jns nop adc aad push mov (bad) lret mov insl pop sbb or jno outsl negl and (bad) (bad) mov ja and sbb sbb mov mov xor enter and movsbl icebp (bad) cwtl (bad) inc mov ror fadds jle adc pop adc adc sbb mov cmp add sbb nop repnz dec les mov lock ja rorl xor out push adc inc pop mov mov jmp push and insb sbb loopne clc and mov add or lods adc jns push int ret cmp and out ret sub jg sbb (bad) jns adc jmp ja dec ljmp or xchg xor jb sub add adc in dec lret ja jmp push mov xor mov adc sub and adc sub (bad) xlat adc mov push rcrb ja adc fidiv jp cmp (bad) or pushf (bad) pusha (bad) lea xchg and test sub test adc pop pop mov xor (bad) xchg repz or movsb lea adc push cs js adc ret push sub mov xor inc or cmp add xchg xor test mov cmp push sti in repz cs xchg lcall dec out js adc dec flds mov jo rcrb mov xor push inc dec add stc das or inc add or int3 pop mov sub aaa rcll pop int popf xlat adc cmp mov xchg adc inc jo arpl sbb pop and adc and movsb xchg pop add cmpsb mov xchg adc sbb jp repz push sbb (bad) repz enter and in negl adc daa loopne mov leave pop adc nop xor (bad) xchg push mov adc mov xorl adc jbe rclb mov and iret stc mov popa out gs pop (bad) mov in add push pop outsb scas lret adc mov xchg testl push and xor inc incb adc iret jmp pop jne or add (bad) (bad) call notb jno xchg pop stos jmp mov fistpll sub pop jbe cmp xor add cmpb mov shrb rol adc (bad) adcl movsl inc shrb fs pop jg or sub or push stc pop leave mov ds xchg sti lods aaa dec xchg (bad) jno pop mov mov test stos ret (bad) pop loopne lds cld jo add aas mov push rcrb je add adc mov movsl popf lea lods inc into mov imul pop adc cld mov bound jnp outsl adc mov jae repz lea pop xor sub fidivr jne test inc shrl push test inc sbb hlt and add pop ja popf and rorb mov xor adc arpl xchg fiadd lahf addl adc cmc js push adc andl in aas or xchg mov adc jae jne pop mov scas adc hlt adc push ss dec clc repz or lret or mov inc sahf push cli out adc inc jmp pop adc mov lds stc add adc and mov mov dec adc or mov pop push bound xor or sbb and fnsave pushf add lods or mov push cs dec movsb adc xlat xchg lock (bad) jle mov xchg rorl or repz xor inc sete out stos jnp (bad) mov sub xchg sahf sbb adc out das in mulb loope mov rcrb push shl scas add pop sbb rclb pop test adc pop popa jp adcw pop or dec pusha cmp inc dec sub jg call (bad) in mov cmpsl fmull into xchg push lods jbe popa mov daa mov aaa mov adc adc push cmpb stos xor adc ss leave js jecxz adc add in adc scas adc mov movsb sub pop push xchg es sub repnz xchg mov jae mov sbb cwtl test adc aas mov cmp adc (bad) hlt jns je nop outsl stos mov (bad) ja and dec add mov jg add es test adc cli and arpl dec aaa cs and adc movsl (bad) call shrl adc cltd adc mov ds mov pushf cli inc adc push shr inc gs push sbb iret and adc movsl cmpsb xchg add lods add (bad) xchg sahf xchg pop mov mov hlt (bad) and pop test ret sbbb lods in sub add fidivl inc pop les subl sbb ljmp adc sbb adc aam adc sahf sub scas rolb (bad) adc jl mov adc shlb mov add mov lods adc and ret adc inc sub push (bad) out mov jge adc mov je mov pop pop adc fdivl mov les or (bad) adc cmp mov into iret or mov add xlat dec push push aas adc sub jmp std popa xor pop mov xor sub inc adc and fs (bad) in jns fmul push lret add mov mov jmp jg xor sbb dec add test bound imul dec xor orl sbb icebp setae (bad) adc xchg in inc cwtl add std ljmp mov nop pop mov mov xchg jmp fwait lods pop adc xor or adc sub push pop sbb adc mov test repnz cmp xor and pcmpgtb jno push lock fldenv or mov (bad) add sahf mov sbb lods stos adc adc push rcr outsl or mov sub stc js xchg dec jge mov mov xlat aas les add mov jbe mov mov cmp addl repnz outsl popl pop push cmp rorl es pop daa dec mov add mov and lret jecxz push pop pusha roll adc notl ss jle xchg adc add movsl imul mov jb int3 clc les ret scas lea xchg dec jmp test cmp and xchg pop repz lahf or cmp (bad) jl jge xor cmp mov jb dec mov jae xchg sbb movb sub jns pop xchg push and mov mov fmuls add adc xchg lods jo add adc push adc mov arpl adc fs cmp into mov cmp lds cmc lahf or mov movl pop bound mov repnz sub jp push lods mov jle xchg pop addl in adc xchg mov push ficompl adc or dec bndstx adc jnp jae sub fdiv adc xor mov out movsb push push mov add adc pushf sbb xor (bad) push mov lahf adc repz dec int adc sub inc adc pop xchg mov mov cmp push mov adc out shlb pop mov adc scas adc push sub (bad) cltd xor xor pop lret lds lcall insb popa adc and rcrb (bad) pop add jne jns inc xchg push sbb lods adc dec add daa (bad) adc dec test pushf xchg mov adc popf cld sbb movsb cmpsb pop adc adc in push mov adc mov or call xor mov jne adc sbb adc out mov scas and adc mov adc push xor and xchg or adc pop and dec psllw inc sub xchg adc pop (bad) add push sarb notl adcl stos pop pop imul icebp test rdpmc lret sbb push adc xor (bad) and adc jle jnp pop jg jno sub sbb (bad) ja xor adc scas cmp mov push adc adc sbb into sub movsl jg dec data16 jmp sarb mov loope adc pusha push (bad) add sbb insl out xchg sbb mov fsubr mov into cmp lret jnp std adc movl movsb js xchg sub into fild adc (bad) xor jno mov add fistpl mov cli test es rcrb pop inc adc sahf cmpsl mov sub jle insl adc xor nop std xor inc sbb dec sti movsb fist js inc pop shr xor adc mov pop (bad) adc imul xor mov mov pop mov pop data16 pop inc adc scas mov adc rol nop pop aas movsl add jbe mov adc push addl loop push add mov adc scas adc sbb aas rcll mov adc hlt adc out (bad) adc pusha sub mov sub fs mov xchg adc fisttpl adc push mov xchg in pop add or in jmp fldcw clc adc sahf mov outsl mov nop andl sbb (bad) in rorb adc flds (bad) aas inc adc mov dec adc xor test adc push lods les xchg inc push or mov std mov mov xchg lds call inc fidivr push mov adc stc aaa ds sti enter mov cmp test fild sub adc dec xor inc push psrad mov inc push cmpsb dec out xchg and mov add mov mov mov dec sub scas inc pop add jns xchg push repnz xor xor jg mov jmp mov sbb pop out adc xor xchg or cli imul xor call sahf das mov idivl rol ret mov sbb adc aaa mov stos adc scas mov repz and xchg and pop rorl sbb scas pop jb and aaa mov adc pop adc adc (bad) je inc sbb fisttp pop cmp adc hlt movsl (bad) shll scas cmp or adc jns inc and inc adc les sub dec shrb pop notb popf cwtl inc loopne ret or inc mov nop (bad) cmp pushf (bad) fwait test dec xchg pop mov adc loopne hlt cmc (bad) movb sbb jns jne and and mov pop sub es xor fwait or cmp das mov xchg dec adc fisubrl sub std (bad) xor sbb das xchg loop clc xor or push sbb fsubs cmpsl adc lea pop (bad) out mov pop sahf outsl stos xor push inc in sbb mov addr16 fs inc pusha rcrb adc inc insb pop fcoml sahf shrb mov arpl popf (bad) mov test mov xor stc imul dec icebp hlt in fiadd jmp cld mov (bad) and adc xchg push and std mov es hlt subl or mov scas repz aaa cli inc popa adc aas mov xchg imull push mov pop xor cld adc lcall push pop or mov (bad) push test adc push in sub sbb or dec jno mov (bad) adc loopne dec icebp int3 xor adc out mov mov cmovp jnp repz jne rolb rcrl adc push mov cli adc push xchg sbb adc jns xorl repz mov adc xor fcmovnu lods adc adc cmp int3 push and sub sbb dec pusha mov sub cmp movsb adc dec ficoml stc xorb dec push mov mov lret pusha adc loope loopne pop (bad) testl push sti mov adc pop outsl jge movsl aaa int scas mov mov xor dec stos adc push jg mov test add testb adc add fnsave sbb or scas adc mov mov adc sbb adc repz add arpl and xchg int pop mov cs adc loop push repz mov sub xchg ds cmc sub sbb jb repz push sbb std xor test mov adc sub stos pop push push repz cmpsl in repz or movsl pop sti pop icebp push and mov call jl mov push or adcl sbb xor mov mov jbe out roll adc xchg pushf aas push (bad) data16 xchg xor push das sbb mov pop adc push notl cwtl xor pop adc cld pop cmp and jmp sti adc xchg xor jecxz and clc pop dec xchg adc les shll adc and xchg outsl adc aad outsb std and jmp jbe mov sbb push jo and jl mov sub mov (bad) fisubr clc jp dec ljmp jmp ficoml stos lret add adc lock inc arpl dec sar lcall mov mov xor cmp xor cmp adc fcompl imul xchg adc int adc fildl dec adc int3 es push cld subb pop dec sbb mov fnstenv mov jecxz inc or adc js addl mov adc dec mov rorb lcall outsb subl out ja das or jae fcomps mov test cmp and adc movswl jge in sbb or sub lods daa fucomip mov pop mov (bad) cmp bound xor add mov pusha xor mov dec fstpt insl push daa mov adc xor aaa lret adc jae bound stos popa ja push sahf or adc mov mov adc pop sub (bad) repz repnz (bad) mov mov pminub sbb xchg ljmp pop rol adc cmp push popf stos int repz mov xchg xor adc outsb cmpsb adc gs add mov shr dec arpl cwtl lret adc jnp sbb pop outsl xlat push hlt pop adc test (bad) daa call jnp fs lahf mov dec cmpsl or or adc enter and mov les rol cli xchg lret mull dec (bad) (bad) fiadd or adc adc test scas arpl add mov subps adc jne dec adc lcall lcall push stos jb bound add add aad or mov adc xchg add sbb dec xchg push mov inc imulb push xor xor (bad) pop lds jmp loop push jg (bad) inc int sbb mov xlat fwait mov jge je jne ljmp std push movsb add (bad) adc xchg nop and xchg sub jns sbb adcb leave out ret adc (bad) jnp xor in (bad) xor cmp lea leave sub xchg adc iret dec repz ja dec ljmp xchg cmpsl cmp cmp adc jp addr16 and adc sbb insl inc mov pop inc adc (bad) sti test or aas mov ret push mov dec fnstcw jmp cmp test arpl inc js adc dec adc shlb (bad) rclb inc push cmp inc mov daa jmp dec mov add scas inc xlat insb adc dec dec icebp xor and cmp mov insb dec mov add mov and adc push int pushf lods cmp pop jo xor stc pop add iret add fbld lock xor adc cmpsb mov adc inc pop rcll pusha lcall cmc sbb fisubrl sti jge adc xchg xchg adc dec popf insl add out test lock cmpsl jne movsb cltd xor shrb hlt jmp scas xor mov xor pushf nopl sbb (bad) (bad) fisttpl cld or dec mov nop call call mov pusha inc test push xchg cmp push dec add xchg or ss in add adc xlat add addr16 mov pop mov xchg jecxz sub xor cmp lea loop add add (bad) sbb ror mov fwait mov inc dec adc aaa sarb stos in adc stc (bad) sub mov inc inc push push adc mov mov xchg mov jl jp mov imul push cmp mov ds inc mov adc jbe xchg aam int (bad) cs xor mov inc popf xchg xchg cmp adc loop data16 movsl mov mov pop adc sub int3 aam cld xchg mov or mov add pmaddwd je shr (bad) repz outsl stos mov adc cwtl sbb jo cltd adc jne jl dec adc mov data16 adc andb rcrb or cmp ljmp or xchg inc inc sbb and mov lock add mov mov mov test adc dec and fldl fsubr pop adc lahf cmpsl push (bad) xlat or mov add xorl mov cmp jns xor iret cmp int adc mov dec jb xchg fiaddl lods push test mov pop push inc pop dec fdiv sbb push add mov enter xor ret loope adc aad jnp and call cs mov div scas gs mov lods sub out clc mov push addr16 add ss cmc ds test (bad) mov jne cltd jecxz lcall sub popa cmp adc inc cli (bad) add ficom ja xchg push or sbb inc fstl gs js insl (bad) xor push in pop mov sub (bad) xor or (bad) out adc or scas nopl adc lahf test adc repnz popf mov fisubr nop gs cmp mov adc inc rorl inc add nop mov adc test fmuls lds jb adc addr16 xor dec adc and and cmp test push xor rcrb and mov mov daa sub pushf cmpsl or test mov movsb fidivl xchg xchg adc (bad) mov adc lds and das and xchg jge adc adcl xor js pop inc imul and add sbb adc ret popf mov sbb jecxz (bad) jle fidiv sbb xchg adc ja test pop mov cmp icebp into pop shll mov (bad) mov adc push outsl mov push out adc mov xchg push push adc stos mov cmc dec je inc cmp adc push rorb (bad) scas ret push fimul insl lret mov in fidivl pop dec cmpsl (bad) pusha pop repz push arpl mov pop adc or mov rcrb dec sbb lds (bad) lret aad push aas mov inc mov mov sahf in jns (bad) pop insl jp mov adc mov inc and out cmp lods adc add dec sub lods sbb insl add cwtl xchg push adc inc add adc mov xchg jle std stc adc adc test in cwtl xor cmpsb adc sti pushf add mov aas leave and adc mov cli adc das mov push enter stos adc and arpl mov xchg or dec push popf xor cmp inc mov inc out adc gs lock dec ret and or dec adc mov mov loopne into lods stos sub sahf adc arpl jo inc push sar sbb pushf adc sbb pushf (bad) adc mov int sub iret jbe lods add subl mov lds mov (bad) js adc and push mov jns dec xlat ja daa adc sub mov insb aad sub push mov mov adc push int3 add pop adc lret cmpl ss pushf sub adc stos outsb sahf (bad) mov add jns fnstenv mov mov pop lcall shrl cmc mov dec pusha ljmp push and mov leave mov std jp aam xor shlb xchg mov fdivrl test in imul es inc or in movlps adc insb dec jp jg cwtl mov mov cmp mov fs add add rorb jno test bound dec dec int jbe pop stc adc outsl push (bad) ljmp xchg ds lcall xchg or xchg popf lahf adc lds jno je test insl pop stc orl rolb dec xor mov cmpsl pop add adc inc test call xchg rclb push xchg or xchg rorl stos hlt pusha xchg push inc out mov and jae loop iret jle jo lea shl adc (bad) adc call ficoml in jbe out fimul adc mov adc stc mov imul xchg enter dec mov and mov sub sbb (bad) in adc jl lods faddl push add adc test mov adc dec inc loope rcrb sbb pop mov icebp adc push inc test test int3 and daa and mov xchg rorb js pop dec mov ja rcrl jbe xchg mov mov jmp sbb cmpsl data16 ret mov lcall nop dec or xchg push dec mov or xlat cmp inc adc adc sub fisubr adc popa imul push loope dec bound mov sti cmp in inc xorl sub mov adc test sbb add xchg lret cmp dec adc movsb or hlt push aam add jnp push (bad) jno out sbb jb lea jbe lods pushf mov lods inc ret jno dec stc movsb sbb aam negb (bad) repz mov adc dec jne movsl mov add inc dec mov mov repz xchg nop push shrb test outsl push stc mov scas repz mov adc clc sbb into adc cmp push jge mov rclb test adc aad adc mov and mov insb add cs repz adc mov xor add add cs adc add out adc mov jae lock aaa mov into and in leave add xor int3 lods add mov adc sbbw push cli loop adc adc xchg hlt sub scas scas (bad) mov jno push xchg movsl cltd dec sbb and out lods adc sbb or adc pop fmull xor adc mov mov addb into mov sbb lds repz orl dec mov adc (bad) mov cmp xor mov lea scas cmp pushf out and (bad) cwtl (bad) mov jl adc xchg mov fwait jecxz add lea pop les adc out push xor shrl lcall adc ret inc inc es arpl jbe dec rcl cmp dec add xlat jecxz mov push mov jno or call adc adc iret mov or outsl jp pop out or push movsl adc xor xchg mov and or lret push add mov dec bound (bad) repz sbb rcll insl test loop pusha out scas dec and sbb dec mov add jno out call std dec sbb mov pop mov or lea repz bound jmp sub (bad) xor or leave ja adc ds div setge adc arpl lock and lods xor insl push enter sub test out sahf aas mov and or jnp jge dec pop scas jmp test cmp or ret lods lock jno mov xchg (bad) xor (bad) xchg mov adc (bad) mov jb dec adc loopne movsl data16 adc pop adc sbbl repnz popa movups inc fldcw adc outsb adcl nop stos faddl xchg repnz add sbb into mov in jns push push out rcrb mov aaa fs hlt xor dec adc notb addr16 jg arpl clc inc into xchg bound adc push cmp sbb lret or repnz mov (bad) adc arpl fsts sub pusha mov mov adc and (bad) mov push enter in ret lods sbb addr16 push (bad) push inc adc imul xchg fisttpl ljmp std mov es mov ja and mov adc punpckhdq in adc mov sub push or in dec adc add adc dec bound dec pushf xchg not and mov fwait in pop xchg cmc insb dec mov sub test aaa mov inc pop xchg shl and dec xlat xor cpuid dec add cmp adc xchg xor push mov mov flds or xchg stos call adc adc mov dec aad adc pop clc (bad) jecxz mov out adc sbb push or adc fldl lret xor mov pop mov js xchg out jle ret (bad) sbb es std jmp mov popa test jnp outsl repnz dec pushf adc add pusha call push pop xor (bad) loop cli or lods mov cltd cwtl jno scas stos adc imul test mov push fisubl fstp or xor xchg xor pop jecxz inc dec cmp mov aas mov mov adc popf mov das adc mov mov xor jl add in inc xor sbb dec out adc cmpsl sarl pop mov mov lods (bad) adc pop pop inc fwait mov mov cld adc adc and clc sub arpl jns mov xchg popa enter cmp daa or imul mov das sub or lods and jb inc or adc jg mov or repz icebp sbb enter adc fldl lods mov cld repz push and in or push sbb mov xchg adc mov fs std push sub sub push aas xchg push add cmp or fbld cmc fnsave in xor or lds rcll cmpl xor mov add adc dec jns jne repz imul mov jae mov cmpsb jmp jl popa data16 mov dec pop mov mov mov cmp imul outsb xor jb mov mov and push insl pusha cmc xor or hlt jge add push xor jp fisubr dec mov mov mov mov fwait pop cmp and adc jecxz aad adc sub adc sub movsl adc jno inc lods sbb adc jne or push sub sbb adc push lods xchg imul notb out dec dec mov movsb in aas insl and popf mov adc cld insb adc add scas sub add adc xchg inc pop cwtl arpl (bad) test sbb cltd adc int xchg adc dec popa push fs sbb xor jmp mov add push push lock nop cmp adc sbb movsl ja adc shl dec and cltd (bad) mov mov cmpsb fcomip dec adc ficompl adc mov in je push xor xor adc and fisubr mov cmp or lods adc out adc pop imul mov mov adc sbb lods xor bound xor sahf pusha pop repz jl dec shrb and push inc repnz mov xor pusha jae fbld xchg xchg repz add aam adc and inc fisubrl add psubusb not adc popa stc es mov fidiv mov mov (bad) mov add dec insl or (bad) lret in xchg mov inc jmp jo adc (bad) adc rorl sbb pop les jno pusha test push lods mov (bad) in sub std xchg rorb fcomp sbb cld fildll add iret aas mov aad imul dec jno dec xor mov xchg jno pop push in int out adc std movsl adc sbb add cld es jne cltd add cwtl (bad) ret adc int insl or cmp hlt repnz imul dec inc or lret add sbb cltd lds xorl movsl pop outsl xor repnz icebp cmp mov lea je stc push popf dec adc sti jnp sahf add int3 mov les or mov or add inc push int3 cmp ror lcall in and cwtl cltd cmp add and xchg dec bound ror or and xchg movsl add sbb imul mov mov cld in adc jns adc push add enter stc and in or mov out adc sbb shrb movsl fcoml mov iret sub inc push das xor hlt ret or int3 push dec loopne scas xchg (bad) xor addr16 dec iret adc test mov cmp mov (bad) cld fdiv and into pop adc push lods sbb jo xor movb jno mov fcom sub movsb mov in iret stos sbb test mov movsb xchg roll xor add and mov pusha (bad) sti mov lahf scas or lea lock mov (bad) or es adc or rcl jns fsubl jg in adc adc adc jbe insl andl adc movsl rolb xor cwtl pop adc loope jmp push sbb sub outsl out aad in mov inc out lds push lret or push inc sub mov mov out mov mov pop ficom loop xchg adc push adc call jle adcb sbb inc stos adc out or out sahf dec enter add (bad) sbb into insb mov mov (bad) jno cs scas insl sbb jg jp iret stos hlt inc add fistl lahf outsl dec mov xchg fwait mov or lea sbb inc imul cltd adc ficom push movsl push sub int3 pop xchg adc nop std adc inc or mov lret sub mov xor lea push dec (bad) xor stos or jbe adc in out mov movsb or jmp pop sub hlt adc aaa (bad) outsb or pop xor outsl (bad) aam push push add pop gs fidivrl add loope (bad) and push pop call mov and mov sbb movsb (bad) push push (bad) push adc (bad) icebp cmpsb cmp inc mov popf adc dec push test push jne movsl adc add sub xchg int3 imul test add push addr16 inc push mov mov xor push test fsts es sbb cmp aad ret jg sub aas pushf adc pop mov mov cwtl xchg or int mov shrl xchg sbb dec ret sbb adc mov lock add adc cld mov xor repnz pop pop fsubl inc movsl jbe mov cs cmpsl push jo (bad) imul pop inc or mov imul xchg bound mov into xor mov (bad) jns xor iret and push mov leave push shlb dec mov mov pop popl je call mov mov adc ljmp add jae loopne adc iret mov jo inc add xor or fs or xchg loop and and in push pushf popf lcall adc (bad) xor lret out push mov and ljmp cli adc jle push xchg shr bnd dec adc xchg mov mov push mov (bad) jnp rorl lds es icebp mov in dec ret loopne cwtl aaa adc out mov xor lods out icebp lods or popa adc or adc fcompl sbb adc insl pop mov pop out push ret mov or scas dec pop sbb adc jne xorl dec pop inc jb in loopne or xor and lcall loopne pop add je (bad) pop outsb sbb dec repz sub out mov and mov inc hlt imulb fadds add mov mov xor jge loop jmp mov in ljmp ljmp subl jecxz or dec dec rol jno arpl (bad) pusha movsb sub cmc or xchg dec adc push mov adc movsl jo xor mov or sti mov rcr je inc push hlt adc fiadd adc lret and add dec xor setp daa roll mov sbb dec jnp out enter add test mov mov cld aam mov push jmp es lods rolb inc pop mov jge out fsubr mov in pop inc (bad) mov pop jae loopne out popf mov mov (bad) jbe nop inc repnz std out or jns or push jno adc adc js rolb push frstor andl mov btc data16 and test test inc out mov mov push xchg add pop repz push jne leave adc add outsl repnz mov fistpl mov and adc add sbb or mov jl mov leave inc jb aaa mov ret test pop push daa stc jl sahf aaa test lcall call and jnp adc sbb xchg (bad) ljmp xchg sub push sbb pop mov jmp imul shr int3 nop add adc divl arpl stos xchg cmp inc add adc xor xor jns sti repz cmp aam loope adc mov adc jae mov (bad) adc mov mov add in mov fldcw repz icebp push adc push pop xchg scas jecxz jno rorl adc int movsl adc or rcll clc jnp aad xchg lret jmp xchg rolb bound add jle mov int3 sti mov xor adc cmp inc sub or sub out mov (bad) dec inc adc in ds sahf int3 adc fisubl xor repz jbe scas pop mov adc adc enter inc or mov cmc popf rcll flds adc pop fnsave daa mov add sarb xlat popf rcll iret ja adc adc orl and int3 in adc sbb push sub test insb xchg ds adc ljmp adc push pusha (bad) mov cli push add inc xor mov jnp in stc bound inc nop dec repz jb inc arpl pop sub unpcklps pop (bad) das (bad) in adc loope or sbb mov cmpsb push mov xchg adc js out enter xor out ja adc push iret mov ret or jle cmp inc call or mov insb dec movsl add scas sub lahf push in add shr pop cmc inc nop adc xchg inc imul in mov mov mov cmpsb pop pop pop pop fs or repnz inc lods xor std (bad) out pop or inc push cmp inc and dec rclb pop daa sub arpl mov repnz sub clc repz faddp data16 pop adc add mov out jae imul sbb pop mov mov stos fiaddl and insb mov loopne fadd adc xchg push jg pushf cmc xlat jbe lods mov jl lock xor clc cli jne hlt mov add icebp cmp mov scas jb pop idivl jecxz xchg inc adc mov mov or and cmpsl push cmp aam jl pop sti enter or mov lods lock dec lea lcall adc cli adc nop jmp jp rcrb pop mov mov cmp decb andb adc (bad) lock les adc negl mov xchg and cltd adc ja stc push sub aaa xchg xlat addr16 fcompl xor push dec jmp or pop mov cmc mov dec cld push adc lcall ds pushf (bad) and adc out adc jmp jg xor push je jo pop hlt jbe adc iret pop adc mov out adc ja mov xor fld push adc addr16 mov insb cmp iret adc adc inc inc add sbb mov lods xchg fs adc add es push in mov fstl pusha push or add adc mov mov xor adc sub repz test mov cmp lods fadd xchg mov adc loop xchg or or sbb cltd and (bad) xchg jno ja pop test pusha icebp sbb adc outsl mov sbb dec stos fidiv sbb jecxz addr16 fs ret ss addr16 mov xor mov mov fistl std push adc or adc fcmovnu lret movsl adc ljmp jns xor xcrypt-ofb cmpsl sub mov nop inc dec fwait adc xchg mov iret insl adc in push rep cmc mov pop lret cmpsl lods mov das aad mov and mov push pop adc pop test mov push pop divl dec pusha int loope push and sub xchg xor sbb rcr fcomi jle ja adc mov cmpsb adc and cmp mov jbe xchg movsb mov pop ficomp mov mov addr16 xchg adc les adc in sbb push loopne xchg xlat adc js in cld mov pop cmc (bad) cs pop adc fwait jmp adc imul fdivl sub imul xchg enter push clc add mov xor mov or movsb (bad) pusha out repz bound mov push jno imul fsubl adc and ss jnp lea cmpsb mov inc add insb jae or pop arpl iret inc adc jmp add gs mov pop pop pushf hlt mov popf mov ret int inc adc cwtl popa loopne xor in cmc cmpsb pop outsl xchg adc pop xchg dec test bound fnstsw cli sub push mov or movsb cld lods dec lret pop stos aam xchg and push ljmp outsl enter adc push mov sbb xor mov sbb jnp jmp mov xchg (bad) inc sbb bound xchg xchg sub sub add cmp adc pop add ljmp arpl jno mov hlt mov insl fnsave popf xchg std ja inc jae lods mov cmp es adc pop (bad) ja (bad) adc popf sbb or xor dec push inc inc dec pop adc fmul push pop push (bad) fstl xchg fdivs js add data16 (bad) sti mov jbe dec lret xor insl mov adc js out mov stc cltd repz fs sbb mov movsb or mov rcr cwtl adc pop cmp (bad) mov incb cmp dec add stos out fs leave or and jp jg xchg adc jne xor xchg pop adc sub and dec add or orl jmp cmp mov cltd pop jmp es pop out and in cwtl test btc adc pop jg xor adc gs nop inc es rep jno data16 adc dec xchg (bad) aaa mov xchg cmp cmp aad mov xor pop aaa (bad) bound sti adc cmp pop shrl mov adc ds sub or pop mov cmp adc cmp lret (bad) adc dec mov popf adc lds add adc lods insb cmpsb movsl in divl cmp aaa sarb lahf loopne fnop shr sub mov cmp icebp mov lcall (bad) sub push and dec loop repz add add out adc repnz outsb pop sbb sbb nop jmp adc inc adc test mov mov adc or push cs jge popf mov cmc jae mov pushf adc or mov fwait scas (bad) sbb cmpsl adc pushl int3 jo adc cli xchg cs shll dec adc jae or ror js dec adc sahf sub xor sub mov arpl sub push (bad) inc js jnp mov scas add adc jg xchg xchg adc mov outsl sub or inc sbb adc popf js dec sub inc sbb xchg push jb mov repz mov inc adc in mov mull fisttpll cmpb jns enter scas mov (bad) pusha rorl sbb pushf sub (bad) pop mov adc xor push sub push movsb adc push (bad) or mov fsts jge in data16 push mov sbb aas pop sub arpl fdivs cmp shr fwait jp mov push dec and push adc jbe add arpl dec inc inc mov loope std scas add pop aad (bad) sbb adc xlat xchg sti cmp pop (bad) jge xchg addr16 loop push push (bad) mov inc adc mov pop add cltd sbb push repnz and add cld lods loopne adc imulb cwtl add fnstsw adc cltd add into jno or sbb xor mov popf insb adc inc push leave xor inc adc ds sahf adc roll fdivrs adc mov dec dec adc dec and adc loopne aam or lea adc mov jle xor (bad) mov test xor xor mov stos sub in inc add mov adc scas pusha in mov ds xor push mov in imul push enter pop cmp push fiaddl sub fdivrs lock adc dec jg mov out inc stos push decl pop test aad (bad) repz adc xchg adc pop and cmpl xchg push imul sarl je std cmp pop inc mov mov dec add outsb sub or leave mov xchg arpl push js int3 mov imul inc out cmp icebp (bad) jne push xor pusha push fiadd dec mov movsb fidivrl mov pop adc xchg test cwtl movsl nop add sti adc mov adc fwait cmp adc sub lock sbb clc test repz pop mov mov xor xorl rcll xchg aas dec in jg adc xor stc push loop clc adc daa test push cli sbb adc sbb in xchg mov jae into jp clc cmp ds lods imul call cmp jle fidivr fwait jns or mov int stos push rclb into ret leave push adc lock addr16 movsl loopne xchg mov loope sbb add ficom mov mov cli adc or xor or sbb (bad) fcmovnbe sbb add adc xchg adc int call shrb or repz pop cmp mov sbb out or mov (bad) cmpl arpl movups (bad) mov lret (bad) fcmove sbb add jecxz mov cmp dec dec pop pop jae inc fsubl scas xchg jns sbb adc mov aas pushaw test adc in icebp jp shlb mov ds inc daa mov stos adc xorl clc ds xor int3 push fstl and mov adc mov pop adc mov pop push insl jns xor inc xchg loope popa adc fwait adc dec jl outsb xchg dec push add mov sub (bad) ss repz sub sbb cmp scas sbb hlt xchg fstpl test ja mov out mov inc adc icebp mov push daa jbe xor adc imul pop xor inc adc scas cmp dec sub imul loopne (bad) enter jb (bad) dec sbb mov sub (bad) adc and jp push movsl aad lret mov inc pop nop outsb mov aas push mov out cltd or xor adc testb mov and movl ss add jo dec adc divb xor je in cmc or pop and dec mov adc jmp mov (bad) ja divb repz cmp aam jo xchg adc adc adc adc xor iret mov insl loope loopne and adc (bad) mov pop xor into lock aam popa jmp or sahf (bad) rclb in or push imul cmp int (bad) in ficomp mov push add adc lods add adc inc or cltd sub in arpl aad lods sti mov sub add mov pop cwtl push fucomi pop adc sbb adc push jbe mov mov xor cmpsb push xor inc mov cmp rcrb adc rclb leave adc jp adc jo nop adc mov loope out push pop adc test fcoml (bad) mov mov adc adc outsb adc shll mov sub jne adc adc stos adc mov push loopne clc (bad) xor loope js rolb sub fcmovb dec mov (bad) fiadd add and cmp sti stos repz stos pop add (bad) cmp popf push (bad) scas fstl and jle ja (bad) mov add adc push pop or push jl mov out add push lock (bad) (bad) push int nop push pushf inc adc aas pop (bad) adc lret pop cltd in sbb adc inc adc or into movsb adc icebp fdivs xchg js cmp push mov fcompl push (bad) jnp add bound pop mov iret rolb and mov in das ljmp mov lret cwtl inc adc or xchg mov xchg adc fwait cmp mov or incl mov pop js fcmovnb ret and push enter ja cmp jo repz out inc or cmpsl add pop xor add scas or hlt dec andl ss fbld shrl icebp adc repnz ljmp push and test sbb je fnsave or into mov adc flds push push xchg pop sub stos dec mov imul mov outsb ja or enter repz loop test in xor add ret divl adc add daa inc sbb or and insl mov movsl shrb jmp and in xor pop jl sti jne daa sbb cmp pusha pop shr inc push adc movsl flds mov and and lods scas xor loop xor mov cmp inc adc jbe jae loope pop adc sarb repz push or into jae stos pop add mov inc or adc iret fs in mov andb and cwtl sbb xchg pop xchg mov imul test pushf outsl lea jns in fisub adc mov xchg addr16 push inc mov adc (bad) sbb mov xlat or sbb adc clc mov adc incl jbe popa sbb adc ljmp cmp adc and in adc cmc jmp sbb adc pop inc xchg adc iret (bad) sti pushf scas push xor mov adc add lahf add cmp xchg (bad) inc and testl sub aaa xor mov push or cmp adc jo jnp add leave mov data16 imul sub mov ljmp cwtl adc push pop adc mov into (bad) cmc leave sbb repz jp mov mov aaa pop repnz inc adc lcall jmp fbstp fdivs popa mov xor jmp adc mov pop enter mov dec insl rcll push mov mov loopne adc ret cmp ljmp stos subl ds adc call in nop imul xchg adc adc mov jle cmp dec cmp xor push pop and mov fcmovb lock sahf pop (bad) xor adc dec mov xchg mov sbb (bad) mov (bad) dec loope mov push add int3 dec xchg mov cmpsl and cli (bad) rolb sbb or repz in ret or adc data16 fidivr and sub cli (bad) push rcrl enter ret mov out adc fildll mov adc mov test adc shl int3 adc pop sbb inc or mov jecxz sub test or icebp ljmp sub sbb cld dec scas aam test inc adc cltd lcall adc (bad) aas dec mov mov adc pushf lea in cmp movl fwait pop cmp (bad) repz pop xor int3 adc mov sbb aad movsb enter inc adc sti sahf mov adc aam ret cli jmp mov push add and cmc push inc xchg jae nop and inc movsl hlt adc (bad) bound adc insl leave test inc fiaddl sub (bad) xor dec sub out sbb insb aaa adc cmp mov mov gs das arpl (bad) pusha xchg push adc mov mov xchg fwait (bad) sub cmp pushf divb inc push cmp adc sti or in sub scas fsts xchg (bad) adc inc xchg std dec sub fcompl add out inc mov ds xor icebp (bad) and clc pop adc lods mov popa add lcall lea mov xchg mov add mov or mov push stc movsb mov jns adc sbb adc add xor call mov rorl mov jmp adc std sbb adc ljmp das lcall pushf sbb mov adcl sub adc gs repz pop cld mov mov or fwait dec movsb add icebp pop sbb lret add popa repz cmp mov outsl sbb inc rclb (bad) movzbl adc mov test sub jae clc inc add sub jl in lods jno mov xlat das (bad) pop repz repnz clc mov int3 pop in push hlt jmp jecxz cs pop push add pop cli adc xchg pcmpeqd hlt cld adc pop ror or sbb inc repnz (bad) jne mov pop (bad) sahf ret mov sbb aas jecxz decb cltd push pop xchg pop adc and adc gs fildl lcall cwtl xor clc rdtsc add xor xchg mov lds popa push repz or adc jl loop das xchg mov push fidiv fs icebp sbb adc test pushf adc sub adc stc mov xchg dec popf movsl dec sub sarb nop cli pop cmp add subb sub adc push inc loopne jmp adc imul (bad) add adc cmp repz adc pushw enter int3 movsb daa adc (bad) dec mov xchg mov pop and popa loope pop out sbb repz cmc pop and bound add push dec inc and cmp push or fwait push push lods adc ljmp out ror loopne or push sub dec movsb mov jbe ja or cwtl xchg mov test add pop adc rcrl ljmp fidivr lcall pushf push adc (bad) aam loop insl pop in sahf outsl xchg icebp mov push imul outsb mov fisttpl sub ds cmp insl repz faddl in mov dec adc xlat and sub adc pop es xchg daa cmp adc jp sub fmull aad (bad) (bad) sarb repz push or add adc push xchg scas fstps ljmp aas adc ss xlat shl jae and test xchg and adc push sbb in adc daa jo gs imul or (bad) adc mov dec pop inc in mov fwait adcl addr16 mov xor push lcall mov scas adc jmp adc fsubrs shrb js xorl sub enter mov sbb pusha and popl aad and lea mov push xor dec sub xor int mov xlat daa pop fwait lahf add fmul lods fildl push inc jno mov pop adc lds or mov inc mov jb fisttpl int3 xor adc cli dec jae sub dec or gs and in pushf mov xchg adc pop adc outsl or popf (bad) in add loopne sub pop xchg or mov and inc xchg outsb adc jmp sub addr16 aam cld in sub mov or lcall sbb or jne adc ret ret add js push notb adc add push insl adc (bad) cwtl jno dec orl jbe mov lods fsubrs sub push push ss jb push test lcall shlb mov sbb xor imul fdivrs in xorb cmp das mov mov xor sbb push hlt out jae scas pop pop movl out pop in pop mov sub sbb sbb and push icebp and and (bad) js (bad) adc pop mov (bad) sbb scas loope stc data16 or mov test dec or adc xchg sub add push inc mov mov insl cmp test add pop mov fucomi sbb push mov frstor xchg mov in das jae paddb dec adc lretw cwtl push mov mov iret sbb (bad) xor adc les mov jle fstpl call enter or std mov lods xor mov push subl stos nop ljmp pop sbb mov pop adc stos or sub ret mov outsb xchg adc push or or mov idivl cmc adc inc cmp or stos jge int3 add (bad) or mov fsubrs push pusha aaa adc xlat sub adc mov fstl jb imul inc mov pop adcb test in movsl cli dec clc in adc jae scas sub out adc daa call adc mov mov nop adc cmp dec mov mov stos shlb movsb call mov pusha mov stc popl loopne out call adc push mov mov mov loope rol dec arpl pop je scas test hlt inc push loop sbb repnz lret movl add stos or inc push adc dec popf or add or pop sub gs lret cld mov popf xor mov (bad) jecxz add cmp ror mov adc mov push mov cli or adc lret xor push mov es psubb xchg outsb push nop shlb aas nop xor and xchg adc and int cmp rcr insb jl jmp loop rorl mov pushf adc push sbb mov out pushf (bad) mov out sahf jle pop ljmp add mov pop (bad) adc lahf scas (bad) mov stos (bad) sti pop (bad) sbb xchg data16 stos inc pop or sub mov das insl mov mov adc negb or mov cltd adc jno scas shrl and scas adcl xchg loope cmc inc xchg ljmp pop outsb out and lods mov sbb mov (bad) adc stc cmp jp nop adc movsb jnp iret sbb je inc and push mov mov int sbb xchg loopne adc lods jg jl (bad) or push je lret mov js mov sub loope mov (bad) fsubl lods fildl repnz xor daa add mov inc sbb mov rcll sbb push push pop std adc mov dec lcall lods arpl sbb adc mov push push loope adc inc push pop (bad) xchg mov inc push (bad) sti bound adc dec scas cmc imul mov (bad) sbb loop leave add mov jle (bad) aam fsubl pop repnz xchg int3 cli dec cmp mov ret mov lahf xchg addl sbb mov sti mov (bad) mov loopne adc in imul sti xor repz or adc (bad) lock loop cs cmpsl or test add mov cmp jb jge repz repnz adcl clc xchg adc fwait push repz std pop aad lret push adc and xchg mov pop sbb push jno pop icebp adc fcoms fldenv std mov or rcr dec loop stc sub adc out clc int3 jecxz lret repnz sbb cmp jno push mov sub adc sub jl mov rclb imul add shr adc aad mov sub sbb adc add and adc lea xor (bad) jns xor sti adc jge ret mov out mov xlat (bad) gs cld adc jp icebp pop dec imul repz outsl mov or cld lcall xor ret fisubr sub or aam icebp or or test add cld adc ljmp push stos add mov mov cmp fimul adc fld out and xor xchg (bad) aam inc xlat cmp roll test ljmp adc pushf movsl or (bad) inc cld test lock adc (bad) dec cmova add std lods repnz cmp or mov xchg sbb sub xchg sbbl rcll int3 mov mov mov sti ss push or loopne adc lods dec mov xchg pop sbb push std adc mov cs nop sbb mov adc sbb xchg divb test pusha fwait adc xorl movsb fcoms jl inc das rorb iret jmp aaa inc push imull outsl test push insl jecxz (bad) leave push popl fsub jo cmp cwtl (bad) sub add adc jb jbe or or push jecxz jb aad fisttp push arpl dec mov xchg cwtl jnp mov push sub inc add sbb push xchg and mov dec out pop test aas mov or sahf sbb cwtl nop xchg sbb roll dec add mov or popa pop mov jge lcall cmpsl es dec or inc jp mov (bad) add mov adc insb inc daa push jnp in adc lods loop repnz xlat scas push insl int adc ret negl outsl ljmp push nop xchg into jl adc outsb repz mov pop jle nop outsb pusha mov cmpsb popf jb mov repz (bad) sub mov pop or sbb adc in mov adc mov or sub mov sahf adc ret iret mov adc mov sbb dec ss sub out cld sbb xor nop repz jle hlt adc or adc out add frstor push scas adc pop movsb sub test mov xor pop sub subl cmp inc in cmpsl mov pop mov fdiv daa mov into pop mov shll ds scas sbbl adc adc das adc aam aad xchg lods enter xor push adc scas mov mov and push push adc inc outsb dec test jbe pop (bad) xchg lsl mov pop (bad) and dec std or popf adc ss pop and lock push push cli mov popa adc mov test mov lock ret or fwait mov std mov lcall and mov addr16 sbb cmp xor outsl adc adc sbb mov adc aaa mov xor lods or arpl subl or adc lock sbb adc pop es adc and cwtl test jmp jns ljmp mov movsl cwtl xor subl mov add les mov arpl adc jbe stos lock mov sbb push inc sbb xlat arpl adc je out bound dec rclb mov (bad) adc addl xor ret adc jg dec dec sub inc adc icebp jno adc shrb lds push sub cmc or adc fs nop mov movsl into sbb arpl mov fstps in js in dec nop (bad) cmpsl or cmpl cmp pop jb add adc xor mov decl mov ds adc adc jns push mov ds fistl fwait adc mov ss sti lret mov cmp into test or or mov outsb mov orl arpl or call inc pop push fcompp dec fsub shr andl and mov or add or fnstsw idivl loopne imulb or xchg cltd xchg pop inc inc repnz jae pop xor rolb jl jp mov into pushf dec jb test (bad) jo lret xchg push stos sub adc mov jmp leave popa movl aad xor into pop add imul pop pop rclb mov or in lea cli xor lahf roll jbe frstor sub test jo cwtl mov aaa (bad) push movl popf adc push shr iret jl adc mov adc xchg mov adc xor pushf out lret dec xor cwtl call xchg mov iret in mov pop clc test or push adc xor bound jle inc les arpl adc lea jp lahf adc and add (bad) xchg sbb mov adc adc iret xor pop pop adc sub lock adc jle mov (bad) hlt xor push call mov mov mov add mov adc aad adc insl call push or das addr16 pop rcll (bad) pop addr16 das or into out hlt push cmpsb add fnstcw mov (bad) mov dec clc pusha jl mov stc push push nop fwait (bad) xor adc rorb mov fistl xchg and sub (bad) rcll sbb je push lret adc dec mov add mov push aas dec jle lods dec or jns mov pop loop jmp (bad) jnp movsb mov jno adc cmpsl pop jbe cs aaa (bad) dec or sbb dec iret mov ret push add add pop clc adc jg jbe push outsl sub lods mov lea popf int xchg out sbb scas in fucomip adc (bad) adc or repz jbe sub xor adc cmp add fld adc test arpl lods adc cmpb rclb js sbb scas mov jge mov adc xchg lock mov jb mov sub cmp fstl cmp pop and pop mov inc mov and sub add cmc (bad) adc andl fist sbb dec iret lahf or addl inc sub sbb ret test mov jle cmp aaa jl sbb add nop mov xor sub (bad) rep jl inc push aas dec sbb add pop push in rorl adc push jo not pop repz adc popf cmp dec test and mov jle cmc or or ljmp pop jno sub push mov jge lds lea pop repz add mov rolb stos pop pop sub xor mov adc mov push or adc sub icebp fwait mov inc pop inc adc adc inc jecxz pop lods adc rorl test into adc cmp jecxz addr16 mov jne ljmp pushl pop movl jo pusha adc cwtl rorl xchg add xchg fimul mov movsb add adc mov inc fisubrl daa mov pusha adc jns dec dec aam mov in push lcall dec or jb movb add push push adc mov jg mov inc shll mov adc mov pop cld not rolb das sbb ja adc pop push cmp cwtl add aas in jne sub push adc mov or cwtl push xchg adc pop push (bad) adc fcomip int inc xchg imul sahf jno adc mov adc adc mov adc popa pop add out adc out adc movsl adc outsb adc decl loop cmpsl out ret pop or pop jae outsl sub or scas adcl gs inc xchg out mov mov lcall out adc mov sub xlat mov pop or fildl xor push xor loopne mov sbb movsl je jg push xchg inc dec mov xchg mov outsl mov cmpl push adc sahf insb sub scas pop adc cltd subl jmp imul inc adc pop pop ss push aaa sbb jmp mov dec dec (bad) mov xchg rolb icebp aad leave pusha adc adc mov dec sub xchg xor in and jecxz and xchg adc push stc mov pop or mov sub bound pop push scas or loopne inc adc mov rcrb dec (bad) stos sub sub repz push mov (bad) or adc out ret test push testb outsl into sbb mov arpl sbb int push add mov movsl repz es xchg js jecxz xchg dec or mov adc (bad) cwtl dec sub cmpsl adc xor fs stos adc incl xor sbb mov inc test hlt inc and lret xchg jp mov pop mov adc xchg push adc cltd das pop jmp push cli mov adcl cmpsb lods ret mov loop inc jg jge icebp arpl hlt dec dec add or aam xorb scas mov insb das adc xchg fldt int cmp lods dec dec mov or fmull or lcall and push dec ss movsl adc xchg adc xor sub jge or jl mov sbb adc pusha lcall insl int imul xor push cli fdivrp loopne (bad) ja mov adc xchg addr16 or ss dec sub mov mov (bad) fdivrp cmpsl dec jge adc ret movsb sbb cmp lcall jne mov adc addr16 cld adc clc dec call add xor repz and (bad) xchg test pushf adc mov and clc and (bad) adc call adc sbb or cmp inc pushf rolb cld lcall cmp rclb xchg std in addr16 xor loope ljmp mov repnz enter fstp roll adc dec out mov xor mov jmp mov sarb lret push or xchg fwait inc mov mov (bad) hlt sbb xchg mov in adc jno test adc imul mov inc scas add adc jne cwtl outsl stos clc adcb inc pop daa xor xchg and cltd push ja jl (bad) aad movsb pop lret mov mov jle ret pushf insl outsb mov jne sbb adc mov sbb icebp outsl adc sbb pop add inc (bad) adc jge xchg enter or fs sbb or (bad) jno loope adc sbb inc or xorb xor das adc sbb (bad) inc adc xor cli adc sarl arpl (bad) jecxz mov adc nop outsl mov movsb or sahf xor dec jne adc ljmp sub jno lods pop push lret mov add sbb fptan scas push hlt sub adc popa mov adc (bad) jno ja insl lea ljmp mov call mov mov add mov cmp sbb jne mov pop fiaddl ljmp mov scas mov das dec jo pop xor out xor inc add pushf mov subl fwait sub out jne jb mov sub adc mov mov inc (bad) xchg sub jnp pop mov xor adc movsb int3 test pop (bad) push adc mov test xchg jg gs out outsl lods and outsl or fs add int mull pop add xorb dec mov xchg mov lea mov int xchg (bad) movsl test cmp cltd adc xchg push jmp lret repnz sub insl xchg adc cs out loopne leave adc pop jo sub dec xor (bad) rep lret or push movsb pop adc lods mov test testl cltd push or mov out adc inc in jne insb mov sti iret dec mov aaa popf push cwtl daa mov adc mov call xor pushf adc repz loopne les jecxz cmp and adc push lds pop aaa out or pusha jl cmp out ljmp leave iret jno out or lahf incb inc adc pop cltd sahf adc dec scas xorl std adc xchg inc mov int3 xlat mov and mov jb xor adc sbb (bad) stos xchg cmp inc xor lods test loopne int3 adc movb sbb ror jecxz bound add adc cwtl mov iret mov mov adc jl test sbb fs insb hlt addr16 sub mov pushf out push add fisttp sbb mov cmpsl add xor adc out pushf jecxz cmpsl idivl ds cli jge adc sub pop adc gs fsts adc jg cltd and pop mov mov mov pop mov cmp test mulb pop xor push sbb (bad) jb add arpl insb sbb add call mov dec push jmp cmp push cli frstor mov jb xlat mov in inc adc pushf or adc mov enter adc mov mov push (bad) ss adc push adc ds movsl or mov sub adc push pop mov nop rcrl add (bad) adc xchg xchg adc arpl add adc and mov add out notl xchg cmp shrb ret popf xchg xchg imul xor (bad) mul mov pop sarl sbb mov adc inc xchg out in mov mov jb inc xor pop sub repnz sbbl leave jl xchg (bad) and jns addb mov lea sub push sub scas adc sbb jl adc mov insb and leave daa sbb int3 xchg lods (bad) jno mov insl or xchg mov or mov dec test std aad adc aam int test inc adc rclb fwait sbb adc adc mov call cmp and push je xor or mov ds xor roll dec js ret (bad) adc (bad) push rolb pushf and dec shll inc jb mov sub mov ja inc push stos inc adc cltd mov je data16 push or jle adc fnstsw lahf aad xchg cmp and fnstenv mov jmp (bad) xchg add and (bad) add lcall in push xchg (bad) dec int3 jecxz adc add andnps mov (bad) sbb sub int adc subb adc jnp fdivr push ret mov sysret or sbb (bad) into inc aas sub xor inc test es cmp mov mov iret rcrl cmpsl pop xor (bad) mov mov adc cmpsb add popa adc cmp dec repz fsubrl lds xchg jo lods icebp adc add sbb adc in int call dec mov cmp push into ret xchg aas add sub mov add jo fist ret test mov lods repnz mov adc sahf cli adc sbb adc sbb jno insb out leave cwtl roll movsl adc mov dec rol ret pop cld dec lret adc dec mov jno (bad) jmp sub adc adc lret dec inc push sti xchg sub subl fildll adc lds xchg (bad) into in pop dec jb popf xor aam push adc lahf out cmpxchg ret adc dec push dec sbb inc adc shrl andb inc adc push insb fdivs sbb mov rorb mov or fadd adc push pop (bad) ss pop lock (bad) fisubl rdmsr sub sbb cmpsb mov lods add xor mov mov cld inc mov fwait adc je pop dec dec or mov mov push int mov adc pop ljmp push and mov lret mov faddl xor jno std xlat or fdivr jno (bad) adc ljmp jmp push xchg dec aad push adc test jg bnd mov mov or fwait sti mov mov jecxz stc ja decl and xlat adc cltd mov jae adc lods mov dec fdivr sbb loope mov mov ret mov xchg push movsb dec xchg sub mov xor fnstsw arpl inc cmp sub sti jnp adc ds and xor sbb xor add popa mov out sub xor les adc adc cmpl (bad) inc scas inc mov push lock cmp repz pusha in mov push push (bad) xor les inc xchg (bad) pop mov xor jbe outsl or adc movsb mov adc ds push adc das cmp jge lahf mov icebp cs into inc sub flds mov lret aad push xlat call inc xor or fdivl roll shr or mov dec xlat js int3 (bad) xchg jbe mov adc sbb mov dec inc repz ss inc pusha ljmp push cmpb adc cmp dec xchg mov hlt push dec inc pop sarl outsl mov daa popa jge (bad) mov lea adc adc les xor movb xchg mov rolb data16 push jb or adc pop inc push das and gs adc ja pop stos setno inc in shr insl pop sbb adc divl adc hlt cmp cmp or xchg push sub push out adc xlat dec lret pop repz sbb sub or (bad) xor push or out lahf inc iret sbb push dec aaa imul jbe adc adc xor enter inc or sub dec addr16 adc push jge insl ja jecxz pop adc mov lret mov scas xor adc add pop add icebp adc fdivrl jl mov push in jmp adc cmp addl jbe ror call fs adc sbb mov or dec mov xor lcall ficom sub xchg jne (bad) enter stos and xchg dec nop adc ret xor mov push out es leave cwtl pop daa pop sbb xor int3 push adc mov shll iret adc aad rcrb lea jle loope adc stc pop cltd adc mov out xor or pop pop cmpsb push cltd cvttps2pi leave mov (bad) sbb adc imul or adc out mov add add into rcrl jno push mov adc (bad) mov adc cmc mov movsb push rol push xor jnp jo loope out sbb ljmp pop sub sbb popf mov xor cwtl cmp fstl cli scas (bad) rcl popa arpl adc inc mov test cld adc je xchg sbb into icebp adc fidivl xchg popa cmp imul mov sbb insl and into mov sahf (bad) hlt test sbb fnstsw shld dec lock adc out rorb sbb mov push mov push jns movhps adc mov xor icebp add dec adc fiaddl cwtl push cmpsb iret mov xchg adc xlat add push stos adc lea pop pop push push sub jno push pop cmp or cmpb push out cwtl ljmp cmp adc lret or dec xchg imul jp sub rcr cmp lahf adc cmpsl jnp idiv (bad) adc in push icebp sub mov popa clc mov aad cs xchg xchg sbb lcall aad std pushf mov frstor or cmp lret mov lcall stos inc mov lods ror adc pop jbe adc mov loopne pop cmp fcoms lods hlt push push sub in cmp adc popf rorb adc push mov and and cmp mov push outsl sahf es into adc out mov and out xchg adc jne jp ja xchg adc mov clc sub movsl jae mov add dec insl jns cmp add or or mov adc and pop into cmp lds mov dec repz jns adc mov sbb adc mov out adc push pop push jge pop hlt push sbb loope or roll jne adc jl orl sbb leave addr16 repz lds mov and imul into js loope and pop stos xchg call inc push push rolb loopne hlt cmp add add xlat (bad) sbb inc or sbb sbb jge adc stc and mov movsb lcall rcll adc outsb adc dec imul test fbstp jno dec and fsubrp push lods jmp stos aad shl ljmp test scas dec adc mov mov push xchg into addl push mov popa loope pop mov fstl push ja in add fisttpll das outsb fildll inc adc add repz cmp adc icebp sti leave xchg and adc push rorl adc mov mov mov mov and bound lea jno mov sub sub adc fist dec imul cmp sbb push int inc ds or sub cmpsb (bad) sar mov xor inc sbb push adc (bad) aam enter adc cmp loop mov cli bound add dec sub adc inc aaa popa in test xor repz lret adc dec xor sbb rclb movsl rcll push adc adc inc into add test in and leave mov xchg in icebp adc ljmp push inc adc jge testl popa fwait sbb adc lret repnz orb enter mov adc or mov inc sarl adc ljmp sbb insl add jg add mov stc test mov add inc add lods mov push fwait push (bad) adc (bad) out mov inc add xor push movsl adc pushf sarb repz push fidivrl pop push sbb mov inc pop jo arpl and add sbb and das mov cmovne xor adc inc mov jmp pop loopne add insl push sub pop aam jp int3 xor popa push or add pushl adc (bad) mov mov push hlt or gs inc lcall movsb and psubsw loopne cmpsb dec mov and xor jns ds add adc (bad) mov (bad) cld push fwait adc in cmpsb adc out inc dec mov jae je and fidivr add stc add xchg pop or out adc xor jl mov jmp (bad) mov xor adc push shr or jmp jmp pop xor and mov and cmp dec xchg testb repz (bad) jl adc dec cmp int jge adc in or in adc pop lds mov dec adc pop aam sub dec stos jmp enter fwait stc push movl cmp lea repz prefetch or js inc mov cwtl adc adc sub pushf sbbl popa test sub movsb adc ret pusha xor sbb and faddl adcl mov and ror cmpsl add or in fsubrl jl into dec int3 mov adc inc cmp adc idivb int push jp push sub and out jno adc mov movsb adc xchg cld stc adc (bad) adc jne sub adc pop mov adc lahf flds divps jg adc jmp ja cwtl rcrl pop int adc out push movaps push jns adc pushf aaa je mov pop pop xor std stos or jb xchg mov faddl nop adc stos ja sbb add subb cwtl (bad) fcoml je sub repnz (bad) sbb outsb dec stos and add xchg daa shrl dec aaa dec out out or dec jbe lds idiv adc loopne es or cmpsb xor paddsw adc mov push stos adc and enter js popa mov cmc adc into mov icebp not sbb repz cs insl mov and inc ljmp dec sbb adc inc scas lret adc in lea xchg pop sbb fsts call add movsb adc shrb adc divb and daa xor test in test push adcl ret cld imul mov push shll dec jbe xor int pusha rcr lock jb jno add jae adc pop ficoml stos out popa jp sbb or fcoml lock lahf lods stos xchg dec rcll sub jns hlt push adc jne add in mov fwait inc mov js adc or int3 sbb and popl jnp and ret push fcom cli or hlt xchg jecxz or and call sti fdivrl cmp xorps adc ds or mov (bad) cltd cmc pop cmp insl sub clc movq sub mov cwtl push aam xchg xlat adc ficom and mov ljmp sbb aad jo cmc loopne adc inc (bad) pop push popa subl jnp cmp outsb xor adc jo icebp mov jne iret (bad) fimul (bad) inc in bt cmp pop rolb loop add jmp push rcr addl aaa mov lods cmpsl xor or xor and aam (bad) int sub repz cwtl xchg pop mov cmp ds jle (bad) pop adc sbb mov cli int or (bad) cs pop adc (bad) or adc out (bad) sbb xchg clc cmpsb add pop mov adc sbb xchg xchg call adc adc movsl sbb sub rcll mov xor sbb mov jl xchg nop or icebp pusha sbb sub push stos (bad) aaa and ror outsb xchg adc shl mov xchg out inc in jp mov rolb daa xchg adc xchg outsl inc daa movsb add sub sbb xchg mov pop inc add sar adc fxch cmp adc mov cli sbb pop adc imul jne xlat daa mov dec fcoms xor push pusha or jmp (bad) popa mov inc cli add repz push cmp jns xchg out ja ds xchg cwtl je sbb int3 xor in in popa add add cwtl fcmovnb adc test sahf jmp or and je and mov mov adc rorb cmp adc push mov adc test cmpsl dec mov loop cmp xor xchg repz push mov bsf and lods sbb repz and mov add jae scas mov or loopne pop lahf push cmc add xor (bad) hlt mov mov vorps adc sub mov ficom jo push pop shr adc add into mov out adc inc push stos test lea xchg loopne xchg adc xchg pop data16 shrl (bad) or rcrb xor xchg lret movsl jge mov or dec nop adc cmp bound adc pop mov imul cltd daa adc lret (bad) mov pop pop xchg int and popf xchg xchg aas mov and jle es add outsl or adc fstps inc xor in les iret pop mov adc loope dec dec mov adc add lret or add repz test das mov mov cli mov adc aas orl push dec xchg pop add es rol fwait inc sbb or adc inc dec fcoml cmpsb adc xchg mov (bad) ds or scas inc adc jno pop mov mov mov push adc shrb call ret or mov pop outsl in push adc mov cli aas add repz mov dec (bad) adc popa mov and adc xchg and test xlat mov mov push shll movsl push and je sti adc push sbb jns insb xlat mov xor adc lods push enter inc rcrl add xor jp (bad) cld ret inc (bad) fsubrl lret cmp adc pop pop out xchg test xchg (bad) xor sub and outsl mov popa imul adc jb fldenv adc cmp xor add cmpsl clc xor out push jg inc fist ljmp jecxz movsb and pop test pop adc cmp (bad) cmpsb mov push cmc aas add shlb inc mov (bad) nop in jne sbb pop cs mov loopne dec popa gs rcrl xchg xor and mov push xchg (bad) mov cwtl or xchg pop sbb fcomi adc das scas cmpsl out sub jl nop mov (bad) addr16 pop dec rclb or cmpsb lock add outsb aam mov fs pop and mov mov mov es int add divb mov rcll sub sbb cmp stc ret insb hlt jle outsl sbb xorl mov pop push enter adc lods lods or lcall aaa lret adc add scas in push mov mov je pop push mov popl push sub sbb push fbld adc dec hlt push push call adc cld clc or jmp adc mov adc sbb adc in adc mov call mov xchg in sbb lods fmuls push sbb inc add mov movb testb popw leave add fistpll pop (bad) mov dec mov daa mov or adc fdivl fldt mov repnz les mov pop dec ret push mov sub ret (bad) imul push cmpsb js cmp xor shrl pop adc adc xor adc xlat jne cmpsl add xlat pushf incb cmp inc jbe push shll or cltd sti add mov int3 jge xchg loope sub adc inc adc cltd dec mov int and arpl jg and in stos adc mov jb insb repz push (bad) shlb adc add repz fimull sub lahf inc test loope mov push lret sbb pop push in jne fwait popa mov sahf jnp push fucomp sbb std hlt in out sbb adc jns lret inc adc pop push sub out push adc mov dec jne pusha cmpsl insb int3 pop adc add adc lcall pop pop and or mov and ud2 mov cltd push mov xor or inc rorl xor sbb data16 sbb mov mov xor xor inc out dec add jo inc xor js mull mov push and xchg add pop aad arpl jnp mov jp mov out lahf in fadd pushl adc (bad) mov das js jb ss std adc test cmpsb jl mov mov sub pusha adc rorb lret lods jge jbe mov orb add mov push inc fdecstp cmc mov lea enter cs mov rol xchg mov sub push adc (bad) nop jmp inc sbb daa xlat dec ds lods ljmp into jne sbb inc pop sub aas sub xchg jl mov daa mov lods cmp fldenv (bad) fild out lds dec adc jbe cwtl adc pop cmpsb adc mov imul push (bad) jne int hlt add pop lahf cmp xor fsub popa int3 out loop mov xchg rolb leave pusha gs mov loopne or adc xor lcall pop dec and adc xchg scas adc roll ja ljmp pop repnz adc movsl cmp test pusha mov xor xor jmp das or pop jno out lcall adc ret int ljmp jmp jge out sbb loopne xchg rcrl arpl lcall or fisttpll mov cltd in inc xor imul mov sub iret mov mov icebp pop adc (bad) sub aam (bad) std mov mov or pop ror adc sub into xor insb (bad) lods mov adc jmp dec add repz rorl cmc out adc bound test push adc cmp cmp adc sbb and repz loope lcall jbe push push pop dec add ljmp dec jge call loope in mov push add lcall dec inc adc dec je insl (bad) cmp aas pop movsl push pop mov rorb sbb sbb (bad) xchg adc int mov mov mov push ds inc xchg or shlb nop (bad) or stc scas fmull fwait (bad) xor xchg rolb mov jmp xchg inc or sti lock adc xchg scas icebp adc and test repnz mov fmuls fnsave rol lock and pop sbb add jne cld dec jbe mov and imul adc ret or mov adc test (bad) subl or push rcrb adc push dec mov pop in sbb jae push xor pop iretw adc scas (bad) mov inc out adc push xchg arpl xor or dec fldcw cmpsl mov addr16 cmp fs clc or dec mov xchg inc xchg adc lea stc jne mov sbb mov pop push mov adc sub mov pop add xchg sub adc mov xchg (bad) fstl arpl inc dec sarl xchg test pop mov xchg adc sbb jp adc jecxz push das rcl mov adc test adc lret jbe cmpsl adc jnp pop jne ljmp add pop jp adc inc jbe jmp outsb mov es adc notb push repnz sub cmp movb adc push scas jns mov mov shrb sti add fdivr rcrb push iret sbb shlb lods pop pop sub or adc push aad inc (bad) xchg iret adc dec (bad) adc xchg xchg int das jbe or pop aam xor clc sbb adc cmpl aaa mov ljmp adc (bad) gs je jne pop (bad) popa xchg pop rorb push movsl (bad) adc or lcall adc add push xchg adc notb jns movl mov adc movsl sahf shrb mov pop or inc cmc adc aaa cli sbb mov enter xchg dec mov hlt jae or pop repz dec leave test adc pop xchg pop mov mov adc (bad) jle fsts dec (bad) movsb dec in pop ss jp xor or sub mov movsb and lods cmpsl adc in shrb jae adc incb inc mov sub movsl or add repnz xor scas repz adc sbb add push mov push adc mov pusha mov cltd inc sub and movsb xchg adc and sub fimull loopne ljmp adc or push fcompl outsb inc xorl in jns add stos adc mov xor rclb xchg into stos and loopne pop mov out xor mov push pop (bad) out dec push xor fwait je add inc (bad) xchg mov jno sub add or or and jl xor in imul punpcklwd js aaa pusha cmp jge fist inc adc xor push or inc adc sahf sub push push xor push fcmovnu sbb or loopne repz icebp push pop popf int mov mov cvtdq2ps mov xor lahf pop cmpsb enter pop sub mov mov ret test sbb dec adc aaa repz nop mov ret sbb mov mov mov inc jbe add pop or cs or (bad) cli xlat add fadd (bad) mov repz cmp imul mov loopne dec fldl rorb icebp dec sbb jecxz dec imull data16 mov int3 lods sbb pusha mov inc lock movsb pop mov mov aaa jns (bad) nop adc jne (bad) adc inc out adc insb mov lret repz lret xchg or pushf lock cld data16 or or rorb sbb push lcall xchg jnp and das loop ljmp mov mov add jecxz pop or mov divb mov popa or mov sbb jae xchg mov sahf sub nop adc jle cmp push invd jg popf adc cmp out lahf sbb mov mov and or or or xchg addr16 enter into pop add pop mov loop lods lahf pop das or jno adc or pop adc xchg scas sbbl mov cld adc or dec (bad) push stos lods xor lds enter xchg sbb adc cltd mov fwait lret std sbb xor stc cmp sahf mov adc xchg jae dec inc sub (bad) and call push aam xor adc lahf mov xor inc inc pop pop paddusw adc jns adc and cwtl dec addr16 adc cmp xchg sbb mov mov cmp out adc xchg pushf (bad) loop pusha cmpsb adc cmp xor fisubrl leave xchg test push mov repnz adc mov pop orb rcll xor aaa or push dec jb pusha insl pop add ret lea mov mov sub sbb mov xlat cmp xchg mov mov lods sub test loopne jbe mov push adc pop cmc cmpsb ja stos ds or (bad) adc jns dec mov mov jmp movsl pop xchg pop adc add add pop sub repnz sbb adc nop lock lret push adc je test adc outsb clc cmp out push add sbb jg aaa ss in adc pop out loop mov outsb pop shl adc and (bad) les in paddsb jp sbb jle cmp pop xchg xor in add insl add mov or into mov scas (bad) pop rcrb lods or addr16 adc (bad) sub xchg dec dec repz out ljmp repz pushf mov push mov sbb dec jns in adc jae dec out jno shrl fdivl mov gs mov jmp imul aam mov dec movsb mov sbb cmpsl call and jl and mov and daa aam adc outsb fildll adc andl mov mov aad push sarl push outsb mov pop or arpl dec xchg repz sbb cmp repz mov adc lods mov fldcw repz jae iret pop mov pop sub in out fs dec cmpsl xor xlat push rcr shrl sbb ds repnz adc inc jge xchg mov mov iret add fdivs pop (bad) sbb push adc lret sbb stc repz imul lahf push xchg push dec incl sub adc dec repnz pop pop and dec sub incb in (bad) sub mov adc in jbe ss or add outsb dec xor adc and adc lahf (bad) repz and jmp loope jnp rclb inc cmpsb mov fbstp jecxz mov cmp std loope or fisttp sub cmp jbe imull push rcrl adc pop xor stos pushl mov ret mov inc adc outsl outsb (bad) add push fdivs cli sbb fidivr dec dec xchg push or pop das (bad) (bad) adc inc cmpsl ss push scas shlb stos lahf pop push lods in test xchg mov xor xchg or lcall sbb dec mov int ljmp dec sbb add cli popl xchg in pop aad jae adc xchg in fisub cmc ljmp int sbb movsb mov xor outsb (bad) pop mov adc scas imul adc cld loope mov add or imul add jae mov add test sub fbld xorl adc lcall adc mov adc movaps push call jno,pt mov (bad) and (bad) mov imul adc mov insb (bad) mov cmp xor mov pop test clc popa push push lcall adc inc (bad) pop jne adc xor adc dec stos adc cs fadd adc mov push push sbb add lret add pop hlt xor ret sti jo and rcr sbb adc pop fiaddl and arpl sbb adc rcrb mov adc (bad) repnz dec test imul in mov push mov shlb jb in lock mov jl ret data16 out adc inc inc popf iret mov jge lds mov iret jecxz adc adc push cmp jmp push cwtl mov mov cmc push push adc mov jg adc addl das sti mov and inc insl mov ss pop inc (bad) adc xor cwtl nop ds outsb out jne mov jle push and adc in adc cmpsl and (bad) sbb pop lahf sbb adc xchg xor lods scas shrb rcll mov (bad) mov adc mov cmp xor test push in data16 in dec out or (bad) sbb insl adc rclb fldcw (bad) mov mov dec testl adc lcall xchg aam push lds cmpsb mov or jge iret test adc or jbe push lea pop loope roll inc and nop dec or inc mov ret psrld adc icebp out jno jnp (bad) xor xchg xor gs mov mov adc pop popa push repz adc inc dec pushf insl mov int3 dec insb mov mov inc cwtl mov sti loopne out add adc sahf xchg test dec xchg adc inc int mov lock sti xchg dec icebp or stc push adc add ss (bad) std or fwait dec dec and bound notl add scas push fwait add add jo inc pusha into popf pushf pop push adc jg enter adc mov test leave iret sbb mov xor pushf push adc scas mov sbb mov sub mov pop cld cli push mov in adc lahf dec sbb cmp jno adc mov jecxz jg dec pcmpgtd loop or fdivs xchg cmp in shl stos int sbb xchg xchg idivb in sub inc lea or cmp push clc pop xchg and add pop adc mov or je mov sbb data16 nop andb lock hlt rorl add push xor xchg mov adc xchg xor adc push jp add fist scas and fsubrl adc cmpb lret (bad) (bad) loopne mov pop aas add cmp mov in pop (bad) cwtl pop pop scas xchg adc cmp or movsl dec push call divb out mov xchg jl adc adc out xor test adc out rcr and out mov and xchg sbb sarb es cmp out dec adc aam fstl adc jp sbb and push fs pop adc sarb cmp push fist pop das les test mov xchg push testb cmp mov adc mov fsubl push pop insl int push adc adc dec mov push cmp ljmp adc adc cmp push or sbb stos popf xor (bad) xor js or xlat adc mov pop adc lcall xorl dec mov adc enter inc and sub mov (bad) adc test pop push cmp int3 and aam xor (bad) fiaddl dec adcb xchg pop icebp dec lret mov dec mov imul sbb adc adc xchg cmp xchg xchg push fnstsw movsb in push or aam push and insb daa adc xchg rcl or dec cmp aam xorl jb cwtl xor adc je sub fistl insb dec adc fs pop int3 adc imul add dec outsb and adc push rol push jg adc inc aas test out adc scas idivl dec add cmp std xchg add dec xor daa pop icebp test (bad) pop imul lds adc lock ljmp call xchg out andl ret aas arpl push pcmpgtw push push repz jns in or push jno nop dec test fiaddl cmp (bad) jecxz pop mov cmp pop jno push xor mov or stc cmp fcoms int pop sbb inc pop sbb fisubl sbb repnz mov cld repnz pushf in add mov pop lcall cmc mov xor dec jnp roll inc rolb mov popf int3 lea out dec push mov sbb cltd jae test push xchg ss xor adc xor rcl int3 out mov dec rcr loop jmp insb mov mov adc jb adc stc mov (bad) repnz (bad) fwait mov loop mov xor out mov test mov jb in lods (bad) jmp cmpsb cs push lcall inc jns sbb adc push cmpsl (bad) loopne mov loop xlat aaa sub fcompl ds mov pop (bad) jne add push (bad) dec aaa nop and adc mov mov addr16 clc rorb jne nop adc pop adc or mov mov adc addr16 dec jbe dec loop out adc cmp xrelease push add mov icebp add adc call loopne sbb incl aam sbb (bad) pop add mov and (bad) adc push jno iret mov pop test adc mov ret push xor adc dec push pop jno jne into and fsts ss and and jnp xor xor jo pop adc pop add lcall inc sbb adc cmp rep test cmpsl mov into repz inc movsb aas lock mov hlt xlat mov lret cld sahf push sbb xchg add adc inc and test pop (bad) hlt lds rolb xchg outsl push mov ja aas popa cmp mov mov push sbb or jp mov jno repnz cwtl adc inc int scas or test int xor xchg or push mov xchg sub adc mov xchg rclb mov in rcll test js jp xor push out arpl dec cld scas cmp or sub mov and xlat (bad) sbb xor (bad) xor ret or or loope dec test mov ret sub outsb movsl out cltd jmp inc push cmp xchg adc sbb pop xor inc out flds lds mov pop mov xor lret cmp hlt xor xchg or xor inc inc and xor mov sbb rep (bad) (bad) mov aad pop dec adc je lcall (bad) cmpsl inc mov dec jnp sub adc sbb xor xchg adc int sub or jle pop (bad) icebp adc stc nop es (bad) jb stos test cwtl mov jg sbb push jns jnp add xchg aam mov mov mov push rclb outsl mov adc pop and pop xor add enter in xchg sbb adc pop scas inc adc or std mov dec adc sbb cmc shll mov je push cmp or jg in mov cmpsl add adc rclb adc insb (bad) mov ss push adc lret pop sub fwait sub int adc inc scas mov or lret xor in dec sbb out sbb inc xor or aas adc arpl repz testb fsubr popf or dec adc pushf ja mov jg adc stos outsl adc cwtl outsb mov jmp cmp or xor pop xchg lret adc mov mov adc fnsave test pop js jo sub test sbb jge out mov mov jmp add add pop cmp lea sub int (bad) fisttp loope pop cmpsb bound jg cmp xor mov and push (bad) dec mov inc mov adc cld dec (bad) mov and sbbl adc adc inc test xor mov icebp pop lods or sbb popa mov dec xchg adc nop inc and icebp push mov insl adc leave ljmp insb fs sub or jle xchg jae xor aad xor add dec stos and xor mov leave sbb inc push push fnsave scas pusha lods lcall mov adc outsb mov mov int push (bad) repnz pop int3 inc repz or and adc outsb fisubl nop push xor add ret adc int3 push or sub out adc lock les lds xor not dec (bad) adc out xchg imul cmc or push pop jl jne daa and jo les or and lret repnz or iret or dec lahf (bad) popf inc incb dec mov cmpsl sti and inc adcl stc xchg fwait popa xor aaa push lods push xorb push or es sub push rol dec add loop pushf xor call mov or push addr16 movl je add sbb nop imul and notb enter je out adc dec lea loopne add (bad) mov flds xchg xchg xchg aam sub or jbe pop dec adc mov jp or and mov je and add push or rcrb data16 ret addl sub (bad) or push dec mov xchg sbb shrl hlt adc push jp movsb adc (bad) outsb das push dec adc out jg imul pshufw or xor mov add mov repz push (bad) ja mov adc aad or lret xchg sbb pop mov cmp into add xor sub dec leave mov dec call les fistpl outsb adc mov jmp fucomip inc fistpl sbb aam mov das adc mov push stc adc fwait mov outsl pop mov jo pop mov (bad) aad jb nop jbe jne fwait adc jmp out int adc mov cmp ljmp pop adc mov repnz cli rolb adc push fwait push rorl cmp test mov stos adc lods push inc pop insl or pop movsl cmp jp jne adc xchg nop rep mov daa sbb adc adc lret mov inc test (bad) jecxz add mov mov push and xchg cli xor or mov lcall dec xor ret jnp je mov cmpsl sarl jbe push add sub adc jno pop fsubr push repnz and fbstp or mov lods je xlat (bad) stos push mov (bad) in pop mov adc adc pop pop icebp sti inc mov sbb lea jae add roll call icebp adc (bad) push (bad) repz pop mov adc sub test arpl loopne mov lds test cmc sbb cmp xorb bound sahf ficoml pop imul xchg xor xor mov xor (bad) movsl sub repz test mov sbb or pop into pop repz mov adc adc lock (bad) add adc add cli jne fwait mov cmc push mov aam mov add test add dec fcoml pop jle and in in std push sti je add xchg cmpsl push adc xor lret cmp jecxz fcoml outsb cmp xchg and push stos and mov lock push or adc pop lret inc out jnp popa inc inc inc cmp and mov add mov mov sub push shrb inc ficomp mov and adc mov inc xchg (bad) xor fcoms sub adc cmp sub (bad) lods adc lcall adc loope mov xlat insl shr cmc push call out sbb lahf adc sub mov push fdivrl daa mov pusha cs repz and js mov hlt test outsb lods (bad) ds adc mov jecxz mov sbb or sbb (bad) xchg popa stos jnp sbb sub fsts arpl mov add in sahf push dec and cmp js add aam dec aad hlt clc ljmp pop sbb lahf pop jb adc arpl (bad) outsb ret fcompl sub mov adc imull push cmp sub add jnp xchg stc mov and addb xchg add (bad) nop lds sub pop fs add add dec adc mov jmp into movsb xchg icebp (bad) mov lds pop mov sbb push adc jae push cli addl adc jle sbb out out sub ss mov fs ja mov movlps push lahf adc push aas lods daa repz mov lcall out and das sti mov icebp adc and pop int adc (bad) aas push (bad) xchg adc loopne imul cmp xor dec mov decl cltd insl pop movsb lret pop shlb mov mov adc jecxz adc data16 shrl mov (bad) adc pushf jo test loopne test push or xor js aaa outsl call fbld movhps inc dec lret icebp pushfw push push shl xor push fsubrp sub add push clc popf stos test std adc in mov add push fcoms xor adc fwait leave or (bad) repz jnp jp lcall in pop ja sahf sub in mov xchg lock gs xor add add aam sub std xchg test dec adc divb cmp dec adc mov add adc jns add (bad) aad pop fistpll jne sub inc lret lock adc lods push add ret test adc push push imul mov adc roll sbb (bad) shll mov adc mov lahf psllw dec cltd and push mov lods inc lea sahf ror (bad) hlt or push aam push fdivs add movl pop pop out xchg jl cli repnz stos jp inc adc int3 (bad) sbb fsts or sbb ret xchg xor or cmpsl pop jne cmp cmpsb adc pop xchg aad sahf xchg inc arpl adc lcall iret adc adc mov push mov sub mov clc inc xchg adc fnstcw adc sarb int xorl push lods mov adc lret push das fistpll push adc xlat adc scas mov rcrl xor adc mov add jg xor in sbb cltd mov xor mov adc xchg push add jecxz mov roll ret jbe out pcmpgtd int sar adc fisttp lahf xor cmc pminub nop xchg (bad) jne push int adc cmp pop shlb (bad) bound xchg shr or push lock insl movsb push ss push popl xchg (bad) or enter push movsl adc outsb dec inc xchg and add mov repz ret (bad) and push or int push mov push xor sub fcmovnbe mov movl out push cs into hlt push push adc xchg dec movsl dec test (bad) mov lcall pop add push dec sbb mov adc mov mov sahf fwait and movsl xchg (bad) nop mov jp jae and or outsb (bad) or jbe lods cmp test lcall add jp bound mov daa rclb xor adc (bad) fwait mov xlat lock clc lods push int rclb xchg mov (bad) into jl cmc mov imul call jae push nop dec or adc inc cli rclb cmp les jns gs stos leave dec adc xchg sti ret nop in push adc dec in mov adc and pop (bad) out sahf sbb mov adc lock push stc dec adcb orl sarb fcompl loope pop pusha dec pop test adc push mov pop ds fidivrl test jno iret jle in shl add dec xchg adc bound sar xchg out sti or hlt mov repz push xor adc jg xor dec push push rol aam call push mov xchg mov push lea mov pop sbb adc hlt arpl jecxz mov mov std xor ret xchg xchg adc sti notb push mov mov cmp xor lods jl cld movsl add sarb adc aam das iret pushf adc xorps push sub nop dec sti mov adc xchg lret inc xchg out dec adc jmp sub push mov add mov jg or cmp pop xchg inc push in add xor int dec adc repnz mov xor jle in and insb or mov or popa mov mov loopne cwtl outsl adc fistl mov fs adc scas call in out cmp xchg movsb pop mov mov sbb inc xchg lock mov jb (bad) repz adc lea stos push mov aam add lret adc xchg cmpsb push sahf and lcall movsb jno add adc cmpsb ljmp iret invd aas mov push loope jns and nop fsts lods jmp or pop sub xor rcll (bad) pop mov enter dec sub test ds lods mov (bad) insl fistpl fimul xor pop push sbb fcmove pop sahf jl cmp mov imul lods movsb repz loop addl adc dec cmp ljmp cmc pop popf dec xchg mov adc mov and test (bad) call mov mov mov ret mov xchg mov push adc pop sub pop mulb mov lret loope addb push adc dec out (bad) and or or ret mov push jb lcall cwtl mov pop gs or jle test stos push jmp lea adc jle,pn adc jecxz push je repz mov and dec les repz not repnz inc pop push icebp call push adc sub sbb inc push or push adc out test add jge or aaa push mov icebp adc adc sub stos stc les lcall pop adc mov sbb xchg push mov (bad) xor pop adc mov xchg lret push popf adc mov mov pop push out or sbb pushf xor fistl jae cwtl xor sub mov ficomp push adc scas test cmovb push adc test ja loopne adc repnz mov movsb in xor mov mov jb adc test or iret pusha add jle or ret in arpl fdivrs sub jno into and sbb mov (bad) int and cmpsb imul sbb bound nop sti push imul test mov gs outsl sbb cmpsl imull push sub (bad) xlat ja cmp (bad) mov sub or mov or xor lahf pushl xor jb hlt nop push mov add pop mov push lock jne lods loope clc mov repz imul jo and mov syscall test sbb add cltd mov in jp fist imull adc push leave push xor dec je sbb nop mov out jno inc and sub inc pop leave rolb and xchg fnsave jecxz pop dec sbb mov subl mov loope adc and add or or (bad) xchg je sub pop jecxz hlt out adc adcb dec sarb or lods push (bad) pop mov repz inc or sub stos dec push lret pop lods push xchg mov iret in and movsb cmp add sahf inc fldl and cmc adc ror dec (bad) cmpsl mov clc int jecxz and test xchg mov jno cmp and (bad) sbb mov int3 icebp mov lahf push or (bad) mov cmp (bad) jns js adc cs addr16 add jl scas je pop sbb dec (bad) je add mov inc adc imul popa push repz insb (bad) xchg jnp dec cmp xor mov adc sti movsl mov mulb jle into add xor adc jae shlb andb push (bad) fldcw imul fildll and jmp pop mov sub add xchg adc mov cmpsb std out pop subl mov push cltd and repz andl mov sahf enter popf repz hlt int js inc psubusb mov dec adc pop fwait xchg movlhps mov (bad) (bad) mov sub sbbl stos adc mov adc mov sbb stos push test inc pop push cmpsl cmp mov (bad) stos cmp adc test mov adc movsb cmp mov push xchg dec adc imulb inc jp out pop jl or int into outsl adc or js xor popa mov xchg jns xor lret pop rolb adc inc jo fadds int3 xor jnp add scas hlt jmp adc mov xor mov push cmovo adc jne scas movsb mov or add cmpb adc push bound cmpsb mov fistpl sub mov mov sub fadd rorl (bad) fmull mov lock mov mov mov push jne xchg mov iret xchg mov or aam jecxz adcl scas test repz sub inc adc inc cli adc loope pop adc ret std dec adc xchg test push push adc jg out imulb or adc mov and call (bad) adc xchg (bad) imul adc mov inc (bad) shrb adc cmp pop and int pusha loope adc shr inc iret sub add scas fnstenv imulb adc add (bad) push xor test dec divl or mov int3 fwait pop jl enter lods push insl loop sub ds je lret fcoml cld fbld rorb ljmp iret repz sub mov cwtl sub call mov jmp mov lret xor fistpl xchg adc mov adc stos imul pop das mov adc pop loopne lcall add adc ret mov cmp or dec dec or xchg push repz mov xor fsub mov jle sbb loop pop (bad) mov (bad) inc aas add push xor sbb adc mov sub in adc loopne std adc inc mov int3 cmp pop jge cmp leave loopne mulb push sbb hlt mov adc push mov or dec test mov stc inc fs testb cmpsl dec hlt loop adc jge popa jno cwtl movsl or cmp push lods dec or cmp ret hlt pop je xor sbb ljmp xchg (bad) in fidivl or dec adc cs in sti fdiv xor pop inc incl repnz pop lahf xchg scas jg dec notb fild push push pop adc mov adc outsl jne adc pop out imul sti rclb jnp inc mov or test sti jg xchg xchg mov sub pop xchg loopne leave mov sbb (bad) (bad) repz stc mov adc push sbb sarb lds push daa jae and sbb mov popa push cld gs aam pop dec stos or sub push pop jmp jae loop adc int3 push bound adc sub sbb cmpsb nop adc or mov outsl jp adc sarl insl xor xchg stos push push and scas loope xor clc fstl fbstp sub popf push mov sub xor add adc cltd rorb daa dec int3 mov and (bad) out adc pop pushf cmp (bad) adc lret xchg inc cltd dec loope sbb xadd subl xchg gs scas pushf adc xchg adcl and rcrl cmp mov lea xchg mov sub aaa add mov mull mov xor sbb adc test cld jp inc mov (bad) pop jle or stos xor xchg xchg push call fistl dec bound pop shlw jno in push add (bad) sub jmp adc negl jmp pop aaa aas mov scas je ss aad add int3 outsb lahf rolb int popa sub stos (bad) cmpsl mov add adc aam mov jbe mov add sbb and adc jns inc adc clc dec repnz cs iret repz rcrb ja sbb or xchg mov add (bad) mov xchg leave sub loop adc fist movlpd and pop inc and jmp mov divl jl inc movsl inc mov aad out lods les xor jb inc or popf ret dec adc sti (bad) into clc rorb or cmp sub lret push (bad) rcll add mov mov xchg mov xor add sbb jno popa fsts sbb jg add xchg or xchg push adc jns mov mov adc cltd pop adc inc (bad) repz aad mov hlt or and testb insb jae add adc mov or mov test sti loope test lcall in sub dec fbstp add adc fdivl in adc hlt dec xor inc pop dec adc divl pop dec mov ljmp mov stos adc ja mov mov jle lret xor jb xchg mov ja mov aad add mov sub mov mov and mov sbb sbb adc lahf pop fxch push jmp adc sub mov rcrb cmovo into adc cmpsl mov repnz (bad) mov imul xlat mov (bad) adc sahf inc out add pop inc xor jno sub sbb repnz sbb fmull adc dec (bad) mov and or mov sub adc leave xchg cwtl std arpl xchg popa inc sub ds cmpsl in mov test and mov adc jo xchg or dec and mov jno jl pop mov mov imul inc dec fcompl out das test in mov sbb int adc addl cmp rcrb pop inc xchg xor mov pop mov je movsl or adc ja out outsl addr16 sarl push into mov inc in repz xor mov add mov lds insb lcall adc sub icebp jge xlat jge adc lea test adc cmp in in lock xor test add iret sahf jae js adc inc xchg les ss ja movsl cmp xor fadd jle adc leave repnz adc jle xor sbb bound daa mov mov add iret call loopne,pn sbb les stc pop (bad) pop inc cltd xchg shrl add sub sbb mov xchg adc lea mov mov dec jne out adc xor aas hlt imul jmp mov xor add add shrb call out nop inc xchg cld push add sub fstps pop pop cwtl xor mov repz and and imul pop jnp test mov (bad) adc push jae xor jne les (bad) mov repz push shrl cwtl enter xchg sbb push adc jo mov push in sub push xchg xor and lret daa loop xor out push mov rolb in repz sub sti xchg jmp xor or cmpsb push mov ffree mov xchg and jbe rcrl test lret push mov mov out insb pop mov jmp adc pop jo arpl nop xor sarl clc int aaa pop xor adc sub jne inc cld jle mov mov nop stos adc pop xchg sbb sbb mov (bad) jmp fwait adc pop mov adc xor jcxz test push adc sbb sub sahf pop push mov cmp les jl imul lods std ret or mov rcll stos xchg (bad) or clc adc outsl pop adc bound stos int3 adc dec scas or and push jecxz lods es fldcw (bad) push lds mov incb inc jp pop outsb inc fisttp or and push (bad) xor adc mov cmp sbb mov xlat int sahf adc push push cmc inc sbb in call mov nop adc enter or js test (bad) leave adc test ljmp xor push lret push mov sti dec (bad) adc stc ret lea mov int3 test mov mov mov scas sub mov loopne int adc stos cmp adc fs adc adc call (bad) xor imul test cmc je adc xchg xor fs sbb jge inc add jmp pop cmp outsl mov sti lea adc jne inc lret adc cli mov call scas test sbb adc jae loope icebp xchg sahf xor mov fdivrl xchg or push les cmp in sub cltd pop xor shrl and add popf sbb repnz jno sbb clc vmovlps ljmp adc jg pop mov dec loopne or sbb sub mov aam rcll cltd shrb adc dec adc jmp stos stos sbb pop dec rclb dec push mov cmp mov sub mov pop adc sbb repnz mov xchg adc or jp out call add movsb das mov maskmovq idivl mov (bad) cltd sub in iret jle sti fisttp mov adc sub inc push loop into push addr16 in mov sbbb ret arpl mov mov jns push adc stos mov jle adc and cmpsb add lea outsl and scas mov fist jg cmp xchg adc mov adc mov dec out adc pop into out fisubr in ret dec xlat adc out add imul mov adc push lea xor jge push or jne jae mull mov mov mov ret jmp jmp push and daa clc repz adc ja arpl mov rcll (bad) dec test mov mov aaa sbb and bound movsl add repz dec mov jmp sbb data16 aas fcomip and mov (bad) or dec iret pop mov sti jge loop sbb xor add popa dec xor mov sub movsb add sbb or jo and or lcall xchg dec xor jbe jno xchg addr16 std add adc push dec icebp adc mov mov bnd out xchg adc cmp adc mov repz arpl cmpb out inc sbb xchg adc and mov xchg pop jg add fsubp adcl cmpsl dec push mov int arpl or push jno std mov adc dec mov jns fscale inc xor in stc loopw ljmp adc data16 adc mov pop sbb cld cs add shrb rclb cli cmc mov inc adc mov inc sbb sub scas stos jno adc jns xor sbb aad jmp fdivrs xor sbb std mov inc ficom sbb adc mov mov das dec or jecxz push lea rorl pop aas adc adc inc xchg mov adc stos add jge incb inc adc or adcl sbb dec stos mov push ss sub int test adc jno mov nop and out xor jns push mov jne mov adc nopl adc shl xchg or mov sbb int3 xor repnz xchg add addr16 adc and fs jbe push add push icebp aaa sub repnz ja add adc mov pop jae xor jne pushf mov mov push rcrb and je sub test ss mov ret adc adcb sub inc pop fisubrl adc sbb orl adc add (bad) mov or adc lods popa outsl hlt in ja push xorl push push arpl inc mov shll movsl adc cmp cmp sbb ja enter ret or adc mov sub adc aam mov dec adc test lret push sbb mov fbstp iret adc mov rcr fimul mov aam mov or icebp cmp repz lock sub data16 push adc sbb and pop and test mov push dec scas rolb data16 jp popa in ficom adc jg shl mov outsl shl add leave xchg pop and jb adc scas pushf dec pop es jne xor push fist lret ljmp les das mov repz (bad) cmc in repz inc rcll stc negl insb xor popf test faddp cld push cmp ret inc arpl sti adc jb cmp lea sub lock sbb adcb insl shr lahf push arpl jmp cmp ret pusha pop lods or mov loopne jge add out cmpsb or mov xchg stos or loope cs adc fistl mov fisubl int movsl dec pop cmpsl or cwtl adc (bad) cmp push jo adc daa scas outsl jne xchg adc ret inc dec (bad) adc xchg xchg (bad) jg mov xchg inc dec fcomip mov xor jae mov mov mov aad mov adc cmp mov adc sbb movsb xchg imul xor mov sbb (bad) add hlt inc adc jns jg dec and adc jne mov pop fisubr and nop xchg xor push lret sbb leave js xchg xchg xacquire xlat push outsb pusha xor push xchg lds jbe gs movsl mov shrb fs cmpsb aas adc push dec mov int3 xchg fcmove mov cwtl outsb adc arpl inc adc jecxz pop pop into movsl or xchg sti jb fisttp out js inc push inc push push repz cwtl or enter fstps sarb push out mov outsb int or xchg jo fs pop xor pop cmc adc adc dec int3 jb push or cli pop sbb loop adc adc in test mov adc and sub cmp pop adc fisubr jno popf int sub adc cli fldl jo,pt outsl popf imul lcall adc js mov movsl (bad) push cmp data16 jno sub nop in or pop cli jp add cmp decb cmp sub icebp das push mov mov loopne inc adc lods add adc test es pop cmp xchg mov inc adc adc xchg std out mov repz jl mov test clc inc aaa scas mov mov rcll hlt or scas (bad) adc enter adc adc (bad) dec push pushf pop lret scas mov icebp fxch pop xchg xchg inc out lcall xchg hlt mov aad dec jge dec pop adc iret fdivrl push cs sti xchg pop jl bound jne stos adc in add (bad) sub sub or mov in (bad) adc loop movsb adc out inc lods cmpl xchg sti test sub add adcb lret pop orl push cmp ja arpl test adc outsl gs mov sbb push sub cs fistl pop jnp ljmp adc cli jo shrl sub push inc mov add adcl pusha adc or adc jge or lcall adc mov jb in adc (bad) out xchg sub (bad) fidivr push gs pop mov mov negl sbb pop sbb cmp jns inc jl or cli lds mov xor sub std lret push mov or adc dec cwtl movsb xchg and aas sub pushf adc arpl notb or and aam iret jle mov mov bound lods scas jnp lret repz pop or jge adc std stc adc dec pop nop push adc mov sub xchg mov out (bad) push (bad) rcll xor pop lds mov add adc repnz cli mov repz jecxz scas in and adc pop sbb add sahf pop mov fdivrl jmp push into or jns mov inc out mov test mov cmp jno test adc icebp aad outsl loop push and test jp mov mov jle dec cltd mov and add les sub mov mov push adc sbb xor inc mov ret jmp stc sbb dec (bad) adc pop rcl (bad) loope adc jo out scas (bad) jns add es inc adc adc mov adc nop out add adc clc leave mov stos cli dec into xor and dec xchg pop fs adc ja fildl lret adc stos xchg push out adc or nop inc daa pop mov adc popf jae xchg popa mov adc mov loopne mov and mov xchg mov adc and sti cwtl mov mov loope popa imul iret pop add es xor pop mov adc and sbb (bad) fsubs dec cmp adc cmp int test fwait pop inc adc sarl out adc addr16 and push das hlt cmp adc (bad) je shlb pop adc sbb lock shll mov js pop mov and pop lea add push adc cld sahf sub inc arpl mov (bad) daa push jp pop pop dec xor cmp adc sub dec adc sub out xchg adc xchg adc or into mov outsl in gs or xlat insl (bad) adc sbb scas adc mov into jl pop sbb (bad) xorl loope out jo push aaa mov sub mov imul cmp sub inc into dec pop sti mov out (bad) sub and cmpb xor mov cld xor xchg das jg or pop adc cmp rdtsc cltd into call inc pop pop (bad) aaa nop dec adc (bad) je jmp insb fwait xchg adc cmp jl (bad) xor ret xor adc insb aam pop sbb (bad) aas dec and jno mov xlat leave repnz or push lods movsl adc clc or inc out lahf adc sub arpl out ja xchg xchg cmp jl adc sub adc js lea adc sbb mov adc push xchg mov cld loope mov leave cwtl stos adc pop enter sbb jmp adc cmp scas xchg push push out jecxz adc jne push jnp pop (bad) mov loop cld nop mov fwait adcl adc xlat in cmp xor mov adc sbb adc xchg or mov add push jne lea stos add adc mov push pop sbb jbe iret addl ret ja adc jne (bad) addr16 enter lcall fwait out add adc mov iret gs pop mov aaa mov les pop fisubrl popf insb adc xchg sub jnp lea dec (bad) repz in inc sbb bound adc cmp loope push push hlt movsb jl cs mov xor adc xchg addr16 cmp cli add jne push add inc add mov daa cmp push insb fidiv jecxz adc push movb (bad) xor aad pusha cmc adc int jbe and popf mov sub mov mov push out xchg add in addr16 stc out les push dec aaa cwtl fisubl imul or jg fistl adc divl adc xchg (bad) popa dec lret add mov push ret (bad) adc xor and sahf adc pop mov in hlt inc jns cmp cltd sbb cli sbb repz cmpsb in push push pop mov adc pop sahf daa xchg loopne xchg fwait add movsl sub or push mulb mov aad sub adc test push sahf jbe push repz mov js scas das xlat mov insb dec dec add repz and sbb jge je mov xchg test dec jne mov push (bad) arpl or test mov rolb loope mov adc leave test mov mov cmp jbe movlps sbb xor out loope notb adc hlt outsl xlat int3 push mov jg jl (bad) xchg mov data16 jg lret xchg arpl mov sub and pop cmp pop xchg fildl inc adc (bad) mov push addr16 int3 lods adc pop sbb lret cmp sub aaa mov and xchg rcll dec in xchg es xor arpl or out dec push jns xor rcr clc push popa imul cli addr16 push out lods adc jno into inc add (bad) nop orl (bad) testl mov mov and inc jne xchg lahf cmpsb mov in jo rcll iret xchg mov loopne (bad) ljmp or dec cs jb fs (bad) (bad) jmp insl pop adc dec mov in aas leave cmovne movsb push pop xor sbb pop adc fs or adc and add mul jbe jg push xchg xlat jmp mov popf (bad) cmp (bad) xor les xchg push jge ret cmp adc mov nop add dec and jb cmp lcall fnsave fs cltd inc lcall out cmp outsl jno lods mov (bad) adc lea out ret adc mov push in ss inc jmp pop push xorl jb dec roll pop cmp push jecxz les xor push nop push adc dec popf pop add xor cwtl pop insb pop orb sarl mov jecxz ljmp adc (bad) enter or adc xor add fs or adc rcrl popa lret js sbb push xlat cmpsb dec fdivrs (bad) (bad) adc sbb adc repnz idiv push adc enter push aaa jb adc and mov scas rorb stos inc fild test adc out jne lods repz jle inc adc adc xor push sbb inc adc xchg jl adc jnp sub popf xchg push dec (bad) adc xchg sub mov jge adc and fistpl sub or xchg push cld dec xor dec lahf mov add out aas jns cmpsl sbbl and ljmp jns mov push stc repnz lret pop sahf and scas mov or adc out stos ss mov je lock adc jbe push xor pop dec push or mov (bad) notl inc sbbl fs outsl (bad) idivl das xchg and mov or pop sbb dec addl sahf in dec push (bad) cmp in adc stos pop adc sub mov je or pop inc pop fsts mov imul mov and add push xor jge ss adc pop and rcrl inc push inc mov dec add cmovno jge in popf das (bad) push je push sub sub and nop sahf jb pusha or mov dec push mov fstl lds sbb dec dec (bad) lea sarb jge sbb adc mov mov repz mov mov adc xchg add or dec ror adc out or (bad) dec sbb movsl xchg sub hlt jns adc fisttpll outsl cmp js jbe into xor bnd sub inc jge push scas repz sar or (bad) out sbb iret or arpl inc pop adc push stos push jg fwait pop adc cltd mov adc push add dec sbb imul xchg addr16 sbb push xchg mov adc or jae fmull mov jmp push dec and mov xchg push outsl sbb lahf mov push adc stos pop rorb or and mov repnz push (bad) mov mulb push xor (bad) adc cmpsl fucom adc inc out adc push and mov in fcoms cld bound call pop sbb add decb aam jle mov fs pop dec (bad) lods test mov pop mov rorl or mov dec movsb adc nop (bad) mov xor pusha push xchg lds (bad) jo cmp push xor push add pop pop inc xor ss jge mov sbb mov fidiv gs cmp sub or ret je leave iret jae xchg add loope addr16 (bad) adc pop aad add dec fwait adc outsl sub jno,pt into pop int3 sbb ret ret popa adc dec and out jns or adc push xchg imul stos mov lods push je adc inc test fisubl sub push std clc pop inc dec adc pop xor mov adc jge bnd mov add decl adc sub adc xchg jg or xchg mov and mov fcomp push adc sbb aaa repz pop xchg push jb inc push shrb bound mov and adc adc xor pop cmp movsb cmpsb mov lods cltd xchg aam ja and jge arpl adc jle mov pop mov out mov movsl dec adc sub mov cmp inc test add fadd jno push lods add adc arpl xlat pushf movsl jae out iret js repz jo pop adc lea sti shrl or mov lods fs add mov sub add xchg and or add std rol fistp jns add (bad) add enter push mov loopne (bad) push hlt jbe adc or dec mov out popa popf mov mov jp adc xor fldl dec subl adc and shrb fadds aaa jno xor int mov scas adcl mov push rdpmc mov push call adc jae int xorl adcl shl ret mov xlat popa jl cmpsb mov cli sbb mov sahf call popf mov int3 add pop mov fdivrl (bad) jno and daa adc sbb enter xchg xor jb sbb loope mov jno (bad) jae adc cwtl es sub push inc adc outsb mov in jmp int3 shrl add cwtl xchg xchg adc push add gs mov add add adc daa (bad) ja test (bad) push adc dec inc inc mov fmull cwtl xor push pusha push scas orl adc xor or xor adc jnp hlt fwait ss adc xchg adc pusha ret imul mov push jb stos js pop adc repz and sti shrb sbb pop (bad) mov je stos jmp cmp mov fcompl jnp shrb in adc dec gs loope fucomp sbb cmp mov jl or pop jbe vsqrtps int3 adc push adc arpl outsb inc (bad) shrb pusha les sbb adc pop lcall inc scas ds or adc sbb sub adc fldcw push (bad) mov mov push fs fisttpll sbb je mov jbe js add hlt scas cs jecxz dec jno xor jae adc daa cmp addr16 push into adc dec (bad) pushf lock cmc into lcall lods jne mov mov js add add push push int adc addb or and pop push xchg jmp cmp inc mov dec fstl adc sbb pshufw mov cmp sarb pusha adc xor mov jmp (bad) mov stos in adc mov (bad) fcomps idiv adc sbb inc stos out adc outsl sub lret in push xchg xchg jno mov int or lods mov jmp sub pop cltd mov adc pop adc ret insb repz pop cs add add jle xor jne add cld add fldcw add (bad) jb rorb movsb call pcmpgtb hlt xor adc or xor addl cmp jle,pt adc sub xlat fisubl shrb ds hlt pop push js xchg cltd adc call adc mov push out negl nop or cmpsl mulb xor test pop and fs cwtl nop or jb push adc gs mov pop bound mov cmp ja sub std sbb and mov xlat (bad) xchg or aas iret jns test clc push inc lea sbb mov add cmp mov xchg sarb ja mov push mov jae cmp mov jb rorb adc mov cmp stos inc pop mov arpl or lea mov jmp or in or pushl into idivb seta pop adc jns movsl adc rclb lcall cmp inc fmuls sbb inc adc sbb adc inc cmp (bad) int adc pop js adc mov aaa or xlat addr16 lret jmp js xchg dec add mov adc mov insl add cmc mov pop and dec in into mov in mov (bad) gs inc test sub pop mov mov mov xor or insl adc push and out adc fs mov cltd adc push or mov pop roll and jl pop jbe mov xchg jne cmp fisttp push enter mov adc outsb or es jge sub and inc xor ret hlt imul mov lock dec mov and negl adc push or adc dec stos mov add xlat pop cltd mov jns pop ss cmp jmp or lea sar sub pop mov mov add mov jp mov or sub inc mov xor jbe and mov push ficoml ss or xor adc scas loop lcall sbb adc add mov (bad) fwait sbb stc adc shlb call jnp shlb sti xchg adc mov stos lahf jo adc cmpsl push ret and cmpsb inc es adc aam stos mov dec ds inc repnz js or cmp aam xor cmpsb movsb lds int3 jnp js pop adc into xorb sub pop sub je push xchg outsb jo int3 test sbb adc lahf jge,pn mov mov imul lahf sbb out notb add or mov and fwait inc fstl test xchg adc fwait sub dec popf imul adc or mov add pusha cmp fsubrs xor sbb rorl in mov mov adc mov jno mov and adc std inc pop dec push xchg mov inc push movsl or push sbb xchg sbb adc outsb imul add stos xor fist mov pop mov adc mov int3 adc mov cli adc out and aaa pop adc clc inc cmp (bad) das adc inc in adc lcall cs add mov imulb xor jg adc lret sub push call scas out repz lock or push sbb cmp xor sub add leave push adc and movsl push adc mov and sub fwait cmp mov sbb add pop xor inc std mov adc push or adc mov mov fs icebp mov mov cltd xlat mov lods xor movb mov xchg mov inc adc jae nop or ud2 xor jmp insl jbe pop xchg add adc jecxz inc in rcl adc push sbb std insb adc pop xchg mov push sub sub into push pop adc mov mov test adc sub inc push adc push movsl jp pop mov ss bound and in (bad) dec or aas dec adc xchg rcrl aaa insl add insb mov push and shrd in push cmpsl std aam or in call repnz adc jae mov cs fbld sbb (bad) ss adc cmc (bad) jg cmp jns xchg jb test inc add bnd insl pop or push scas add mov ficom and loop sub lahf lock adc out je cltd fnstsw or rcrl xchg sti notl adc jns lret sahf int3 cwtl adc jno fld cmpsl stos mov add in and pop inc iret inc daa ret rclb test pushf jecxz jl rorb adc or shll adc adc dec aas insb shrb cmp or cltd in repnz lds mov aam xchg pop and adc addr16 jle into mov clc jbe jno mov or inc dec push jno nop mov xor popa stc add or adc cltd xor xor (bad) mov jp xor jno hlt or mov push push adc (bad) fcoml out hlt mov (bad) movsb adc cmp mov ret arpl or adc mov adc ljmp jae decl adc test scas mov sub mov dec cmp mov add sarl push cltd out inc mov mov ficom lret sbb inc subl adc inc lcall dec fwait mov jle add call add fidiv dec data16 and adc xchg or jg out idivl pop loop adc (bad) cmpsl mov mov pop jecxz bound adc lret fcmovbe enter adc lahf and sub cli mov out out pop mov lcall add mov adc push sub pop adc xor cs imul fidivrl add lds cmp adc sbb es pop rclb pop repnz or cli pushf (bad) out std mov add pop repz sarl xchg or xchg adcl repz pop popf out and xchg in prefetchw hlt pushf mov pop repz dec push (bad) cmc cltd scas mov test add mov call mov lret push sub cmp movsl adc les ss es dec mov add ret jmp adc clc xchg arpl aaa sti dec adc in push dec stos xrelease xlat outsb adc clc mov cmp xchg add ss nop pop add and adc lods cli movb xor sub mulb lea jae out call in fnstsw push aam or pop les push mov push cmpsb push cli jo imul rclb ds jl and sbb mov repz adc outsl adc jb mov rcl adc mov lret out push xchg pop or mov and imul in sarb fimul mov outsb dec cmpsl mov push icebp call lds jbe mov (bad) repnz mov cmp loop xchg cmp jmp jg jle (bad) adcl mov or aas (bad) push mov cmp dec add flds add inc xor (bad) aam or (bad) ret bnd into popf (bad) ficoml jb aaa maxps shl shrl iret or adc repnz dec xor or sub loop (bad) enter xlat dec inc and mov sub dec shlb adc fst pop gs inc in adc cmp daa mov mov roll adc int3 pop xchg mov or adc frstor fisttpl pop aaa (bad) xor mov adc inc ret adc push gs test mov mov (bad) fimul cmp sub mov jp xor out or lret std cld fucom nop jno sbb add aad das mov push and outsb cltd dec pop (bad) dec mov cld push nop adc mov mov insl xchg fadds mov loop dec mov xor addb mov sbb pop mov (bad) inc adc xchg xor loop stos rcrb mov inc adc sub cmp outsl cmpsl lcall push dec ficom fsubrl sbb (bad) mov dec dec xor loope imul adc adc js out push xchg pushf insb jae and dec xor ss in mov add mov mov sbb cmc aam adc in push cmp sbb lea adc xchg sbb imulb inc cmpsl adc pop jg jge fmulp adc mov mov daa std fcmovnbe jg jecxz pop cwtl iret movsb sbb adc outsb cmp push mov pop or add inc (bad) in adc push icebp lret adc inc sti pop into mov imul mov inc dec xchg add andl sbb inc jge adc dec movsb fmul push dec fs dec mov mov cmp divl rcl push and dec fidivrl test adc lret adc outsl das adc dec (bad) xor push je adc fldenv pop lcall adc lret adc sub (bad) lds inc adc (bad) mov lcall lahf imul sub mov hlt add pop pop mov ja sbb add adc scas adc sbbl add mov adc jl sbb cmp adcb cmpsb lcall mov add pop (bad) mov or adc sbb loope pop adc in je dec int3 sti insl push mov adc adc cwtl repz icebp and (bad) mov xchg daa push adc leave cmp inc test adc dec loopne sbb xor xchg or pop push xor dec (bad) pushf push sarb loope jge pop stos repz jo xchg je cmc mov adc push sbb adc adc in test arpl aas imul sbb lret (bad) out adc roll xor in addr16 add daa cmc int3 out mov gs xor add push adc jmp pusha lahf add add mov movlps xchg into and shl xchg rcl pusha add xchg lahf jne sar dec popa jae pop and cmpsb sub jecxz adc and adc mov mov inc sbb gs xor rolb add int scas jecxz fisub gs bound xchg stos sbb xlat lds mov sub dec adc inc xor and data16 repz adc into cmp xor cs pop xchg (bad) in arpl ss in cmc fldcw push rcl hlt (bad) repz cmp pushf xchg adc adc dec clc push int3 xchg cltd aam cmpsb add loop in xor and inc sub lret cmp and mov lock or mov loopne ljmp jae mov cmc dec adc cwtl (bad) dec sbb repz aad pop pop dec adc or (bad) out push repnz adc cmp (bad) xor testb iret pop cs shll outsb dec pushf roll subl dec cmpsb test xor mov and (bad) adc add (bad) xor xchg mov jp fist xchg notb mov push shlb sarb test or jnp jno cld decb shrl call (bad) std icebp jecxz movsb dec gs xor lods adc jmp jbe or incb push pop aaa mov icebp repz hlt insl scas cmp insl mov lock mov or ffree pop xor int adc pop call jae inc movsl push pop sti xor pop cmp dec ljmp mov inc shl std test dec jno outsb in or mov adc mov jne pusha fiaddl mov push mov dec add fnstenv mov movsl push rolb pop mov add hlt push push lret adc arpl cmpsb and adc lcall lcall and xchg adc imul aas jp daa sbb adc out mov (bad) push add sbb lods xor faddp sub mov mov out ror adc push jbe movsb jnp pop xor out sbb or push add sbb ds sub inc cmpsl adc cld addr16 icebp aaa sub push adc cmpsl dec jo repz dec (bad) pop (bad) fmul mov add push (bad) invd (bad) (bad) mov in fstps out sub mov or ja sub adc push jnp adc pop mov or lahf dec xor sbb adc gs movsl mov cld out adc loopne adc (bad) jg iret adc pop cli mov clc gs mov mov xchg repz lret sti dec inc add push sbb hlt aam pop and cmpsl movsb mov adc sub mov or sbb jne inc inc mov cmpsl mov jns cmp out in mov push leave sub sbb (bad) dec sbb ljmp inc adc add cmp pop jo in scas adc (bad) sub sarl fildl adc push loope lss mov and jbe adc arpl sbb mov pushf adc divb stc mov jge test mov testb and add loope in (bad) je pop iret cmpsb sar mov repz xor jl adc mov into fisubrl out sbb mov out js mov repnz out or outsl pusha repz cltd jns cltd mov push pushf jl je mov or and dec fs adc dec xlat adc push mov adc inc or sarl xlat pop call mov fiadd pop outsb adc mov cltd ffree inc lock adc and mov fstl jae mov adc lret xor adc cmp inc adc and mov in pop pop loop push lods mov xor pop pop (bad) or adc adc (bad) jb adc cwtl int3 adc lea cmpsb cs mov mov addr16 out psrlw outsb or addl pop push jo add adc icebp push dec mov fcmovb mov xor mov pop jno mov fwait cmp das mov cmp adc rcll xor iret push adc adc insb sub adc pop push loopne adc jle (bad) stc xchg adc mov xorb jle shll jmp sub mov mov xor add stos cmp shrl mov and (bad) std cmp xor mov mov lods dec dec mov jmp pop lock mov (bad) sub cmp add mov inc mov cld add mov fwait xchg and add or les and push jno cmpsl daa sbb clc call adc (bad) adc out add outsb or adc sti sub test loope fwait jo adc sub dec adc fs adcb pushf (bad) in adc (bad) jb sbb pop aas inc outsl rclb jge or testb es inc cmp jmp mov or data16 cmpsl mov xlat pop or adcb repz add incl xchg js rcll (bad) sbb pop pop and sbbl lcall fstpt sub add neg adc jo push fcmove or (bad) push mov pop mov dec inc xlat outsb xchg je xor and adc push inc mov mov adc lcall daa ss call fwait dec jo sbb incl out pop adc mov jbe dec adc or xor adc adc lcall push jmp jle mov push mov (bad) mov jl adc mov fdivl adc sub mov ss add jge cwtl popa mov ja adc sub adc imul adc in dec fsub rorb addr16 push scas xchg xor pop bound mov pop lds push adc les jae rcl loope add cmp pusha in pop inc nop fwait or adc (bad) fldcw or mov fwait xchg and out icebp jg inc push sbb aas imul pop (bad) out sub xchg ja add std outsl xchg pusha hlt or fimul sub or pop (bad) fisubl sbb sbb repz xlat enter mov call icebp push int3 in xor dec mov js pop jns add in xor (bad) dec prefetch or sbb loop sub or adc repnz sti xchg (bad) adc es repz pop dec pop jnp adc test jns push es lea ljmp push push xlat lds repnz xchg stos (bad) xchg ret (bad) fcompl cmp sbb jmp mov xchg aad push lcall inc push es adc jae jl add nop cmp (bad) call sub pop ret mov das insl adc aad xor lret iret sbb jge push adc inc and test imul or mov mov add xchg mov lcall js adc mov push adc or adc or outsb adc movsl mov cltd mov (bad) pop out insb adc daa movl lods push xchg gs xchg push adc inc cmp adc (bad) sub push ret mov adc je bound add pop and jmp add cmc cltd add pop adc and rcll outsb jne sbb mov test lea push or repnz cmp or mov mov mov lahf stc sbb mov or es test adc sbb jl mov cmp inc fcompl mov cmp aas sbb daa mov in decb adc rol adc and adc adc call (bad) sbb add mov rorl xlat js fcomps mov jno mov mov (bad) xchg xchg mov cmp mov pushw mov add negb cwtl repz sub sbb in dec or idivl push mov push cmpsl mov push push mov mov lcall cs out xchg cwtl jnp adc outsl outsb adc cld add jp dec lcall jne add sub add dec (bad) aas mov loope (bad) and cmp xchg push adc add adc cmp ss jae sbb cmp sar push lret push adc jo (bad) fisub add movsb arpl mov cmp and negl adc and fwait adc push test shlb popf mov pop adc dec aam mov out mov dec xchg jbe add push pop insl cltd adcb push outsl dec and push adc fstl or xor mov les mov nop in adc sub jge in or pop dec es inc cmp sbb push jbe lds in cwtl xor ret push cmp scas push dec movntps adc xor cli jp lea arpl xor cmp jnp and sbb xor push dec imul inc es ljmp mov and mov (bad) shrl leave jle pop in lcall hlt fwait lods push movsb aaa xor std pop add out hlt shrb mov mov clc in ljmp pop fstpl lret adc lods or fs dec inc mov add dec (bad) and stc pop dec aaa repz xchg pushf out out push lods sub leave dec jp dec xchg mov (bad) mov adc nop stos xor sub ja pop jp xor and sub nop cli push jb in loope std xchg xchg adc push inc push add push pop xchg sub or adc sbb cld rcrl aaa ret add imul pushf pop adc or inc mov (bad) pop popa (bad) syscall fsubs repz xchg aam xor dec leave inc mov dec arpl inc rorb push ficompl xchg inc test push add into cwtl push mov rep cli (bad) in jno or fcmovnu adc xor out popa lods xchg hlt out out pop je push push (bad) push pop pop jns aas lea jmp sub stc fmul jne enter fcmovb movsl outsb lret xlat jle lret mov jb cmp (bad) (bad) (bad) (bad) add or jle rcr add xor ret int3 aaa pop or xchg fisubr call jno imul (bad) push (bad) sbb dec adc int enter cs pop data16 mov ficom cmp adc (bad) sub fild arpl sbb push (bad) jmp adc xchg jbe adc mull ret adc ret in dec nop fisubl sub pushf push faddl mov adc push ss xchg test mov in sti adc or xor sub or push mov out sbb cmpsb cs jbe fistp sar add push adc add pop mov jnp cs adc sbb xor (bad) cmpsl sub pop pop cwtl adc adc imul push or jp sub data16 arpl outsl push in in std (bad) cwtl inc sbb jbe adc in adc adc or data16 sbb xor in lds xchg adc push out xchg pop adc cmpsl push mov adc lcall faddl clc lock hlt inc stos and push lret jg ss push cld rorb adc ret jno repz xor pop xchg out mov adc cmp cmc adc xor mov xor cmpsb (bad) mov ja pop in in adc (bad) int3 mov push cmp outsb cmp mov popf lcall es adc push cmp ss push mov nop xchg push push adc fidivl mov add xchg pop sbb and inc jge adc shl xor cld fimull roll mov insl jne sbb clc adc dec push jge push mov fimull popa dec sub mov xor pop icebp inc (bad) or repnz xor adc sbb ss dec mov adc fstp mov std adc push and lock xchg arpl adc mov fwait pop push adc ds or push dec inc fsubrs and adc cmp adc mov sub mov xchg addb into test pop xchg pop jecxz or push nop jne sti adc adc dec adc mov mov xor pop mov pop sbb xor pushf adc cmp pop lret push mov mov mov inc inc int js adc or jle push pop sbb mov mov inc mov imul push sti outsb pop push mov jl imul mov dec fsubs out cmp adc adc xchg shrl mov ljmp mov movb in adc xchg cmp adc leave and adc pop mov (bad) mov xchg push inc insb sbb inc mov ds pop in and and inc adc in ljmp and dec mov mov pop jae outsb adc hlt mov pop push mov sbb faddp in xchg inc cld mov (bad) push lcall adc or push repz push ljmp nop mov push nop inc jmp imul shrb adc push sbb lcall (bad) or es xchg adc ret adc (bad) adc adc ret adc popa repnz imul out dec mov sbb adc je das adc aaa xor rorl sbb sbb mov clc adc lret or mov inc mov sub sbb mov jns adc iret sub mov call or xchg adc inc jnp adc sub adc jne sbb rcrb lahf subl sub jl mov fsts test movsl (bad) frstor lds int adc ss cmp adc adc leave and push shrb rol mov add xchg dec mov or mov rolb fstl adc xlat jae in (bad) sahf test push shlb or mov cmp adc xlat adc xorb leave dec ret jo adc mov imul test push jne mov fwait push mov adc jle in push repz adc jno cmc adc or rorb xchg xchg pop or pop add (bad) cmpsl roll jmp adc aam push pop stos mov test loop cmpsl mov repnz adc mov ds adc cmp adc sub shll dec or nop insl mov sbb inc popa into mov out dec sub inc adc ret lcall out jne rcll xchg pop pop jle aam sub stos mov repnz cltd das wrmsr dec fsub repz mov mov adc adcb lock and mov iret pop adcb test lea xor push xchg xchg (bad) adc rcrl (bad) sub adc scas cmp pop mov sbb in fbld (bad) scas pop cwtl es fstps in mov call push (bad) movsb aaa mov fild and fmull push out add mov movsw or movb adc xor xor mov cs xor test adc mov daa insl bound adc mov xchg add bt insl fwait ljmp dec sbbl jecxz int mov adc xlat loope adc sub pushf xor clc adc or lods xchg test inc lret enter dec fstl add push jl jmp dec xor jecxz xchg add rorl lahf fnsave adc fadds mov sbb mov loop sbb fwait pop aaa int shlb push pop dec adc xchg dec ss notb xchg iret stos ficompl sbb and in xor je cmp movups mov outsb mov adc jle inc sbb aaa or adc je pusha dec sub cmpsl pop xor test inc mov adc adc das test lret pushf cmpsl lods fisubl incl pop mov insb sub leave mov xor daa rorb pop inc out adc pusha or sahf lcall adc ret test or sbb (bad) and adc nop clc call jbe adc pop dec jb repz or push test adc mov cmp arpl dec mov jg push push or sub into sub push add lret mov fwait adc popf cmp xor orl or nop insl loopne add aam arpl jno jb sbb mov jbe add (bad) outsl push mov inc call pop push adc inc add sahf dec mov out dec xchg out mov and cwtl ljmp dec sbbl leave ljmp mov xor outsb ja out out (bad) adc in rol adc sub add sbb dec add inc adc and add adc and mov hlt pushf repz and or enter mov sub push push jle inc add adc cmpb push inc stos sub dec xorl nop fistl xlat int3 adc fwait sbb adc test xchg std add sarb int xchg mov out add movsl or ljmp repz add mov inc mov or pop stos adc add push mov repnz in and mov mov cmp jnp fsubrs popf mov mov sub or stos and shl imul adc in (bad) loop push fwait adc sti cmp repnz cmp mov adc cltd sub (bad) in insb or stos out scas test ret cmp jno push push or mov mov mov mov pop mov mov mov dec cmp push call in xchg cmp adc scas mov adc jno loope xchg and imul movsb roll push cmpb adc ret cmp xchg xchg adc hlt stos jns mov outsb bndstx orb mov lds enter mov xor xorb push (bad) rol adc xor adc les ret arpl je leave or add adc cmp (bad) and jge xor or out idivl daa inc adc icebp mov push leave xchg enter pop aad cwtl jge mov pop jmp jg clc add mov cld (bad) out rcrl adc fldt add insb adc push push cwtl repz mov fidiv test xchg jmp xlat or dec pusha sbb test pop sbb or or or lock jo sahf sub repnz push xor push adc jp adc (bad) mov mov adc cmp fist jnp test push jge adc scas out inc insb rorb cmp adc lcall xlat mov mov sbb fisttp dec sti mov dec jle xor cmp scas call clc adc xor mov pop bound adc roll mov and inc sub adc mov pop adc xchg fist xor das rcll adc dec cmp call (bad) mov sbb aad xchg mov pop mov pushf aaa adc insb xchg cmp lcall es lods ret xchg pusha pop add mov test clc and sub pop inc imul loop (bad) out push mov out insl add or clc mov lods dec (bad) xlat mov stc iret imul (bad) cwtl imul or cmp imul mov movsb or scas adc adc out xchg xchg repz mov cmpsb pop push in and subb sahf mov or mov scas adc or lds xor movsl pop xchg adc test scas mov add repz pop out sar jo (bad) cmc adc inc jge rol jg pop xchg cwtl repnz mov sub js inc lea xor enter inc cmc popa dec mov cld dec cltd adc mov ds test add in fildl push shr das dec jge adc push push rorb out test in loop or xor cld mov dec sarb cld fcoms cmp or adc lcall mov mov lcall mov push push adc into inc dec cmp adc lea cli dec dec (bad) daa sbb adc aas xchg jo dec (bad) nop pop and jns cmp lea dec int3 mov sub (bad) aas dec pop adc add lods jle jmp adc sbb push jo lea adc or scas dec add inc push inc dec inc or ficompl pop das insb inc adc mov xor adc (bad) int adc mov and push lods jecxz fmull ret testl (bad) sub cmp mov mov or out adc add mov js aas dec mov mov sahf hlt adc sbb pop (bad) xchg inc cmc adc lds call ja dec or cwtl sbb (bad) (bad) out push dec mov add sub add or and adc sbbl mov jp mov in push xor (bad) adc dec jnp mov ret repnz jo arpl mov inc jg adc out adc inc xor stos dec stos sbb scas dec lcall cli push jmp rol lret gs stos adc or das (bad) jb jecxz pop adc cmp adc insl rol xchg sub pop add xor adc ds test sbbl lock outsb mov adc fldt cld inc adc jl sbb clc rclb (bad) fwait pop dec mov (bad) aam and jmp sahf jnp inc push or mov sub adc ret out sbb jbe out ret lods hlt (bad) rclb cmp mov push mov push adc aam iret dec xor stos or mov mov jo fs mov adc ds dec cld test xchg or mov inc inc adc data16 cwtl cmp cmp les jo insb adc xor sbb pop ret mov push or adc mov xor sbb repnz stos or adc in pushf repz nop pop xor pop sbb adc lods sbbl and cmpsl add mov xlat imul adc push jg mov adc (bad) fildll push push add in fidivrl and std repz pop mov mov daa out gs adc push or repz rep mov sbbl jmp in js pop adc jne cmpsl xor dec inc icebp or arpl ljmp adc pusha sbb sarl or repz ljmp movsl xchg xchg in dec adc hlt dec cmpsl mov clc test loop outsb test inc stc sbb sti insl jmp xor les jl add (bad) mov sub and mov fstpt fsubl faddp jnp inc cmp adc inc bound jae cmp sbb or mov adc dec idivl mov mov and (bad) enter mov mov insb xchg or jecxz add ds lea push mov or adc pop out adc add loop mov jnp arpl sub clc jno inc lds gs idiv pop adc repnz adc adc dec fisubr rclb clc and adc (bad) in jge xor movb cmpb xchg rclb jp insl adc pushf addr16 bound adc ret cmp movsb sbb into push xor cmpsl popf lods push out add xlat and adc mov xor dec mov gs or inc xor (bad) adc fild notl mov adc jbe xchg sahf rcr aaa xor or dec push (bad) add ljmp or repz push xchg xchg dec dec push sub mov mov dec hlt add adc push stc sub adc iret or or xchg xchg adc ds js and (bad) xchg (bad) jecxz xchg movsl sub rcr sbb push adc jae iret lea lcall leave in mov add pushf adc mov ret insl lcall out cmp rolb pop lahf pop insl dec xor je adc adc add dec das push xchg rcrb add adc (bad) mov or mov xchg mov jb lods sub aaa fadds (bad) popl mov xor or mov xor aam lds cli rcr mov hlt loope add into inc adc mov and jno dec (bad) cs in adc adc lcallw adc scas decb mov or mov push jb xchg push je jne icebp fdivl inc int3 add les ljmp enter xchg addr16 xor cmp mov mov ds out and mov jne mov aas repz xchg mov fisubr lea adc (bad) notb inc out push adc (bad) mov xchg imul lods pop xchg xchg adc cmc mov or push adcl clc dec fwait add movlps mov xor lds mov mov (bad) repz stos clc mov adc movsb mov jge std pop adc dec mov ret ds lahf mov dec adc add (bad) int3 ret movq popf movsb sub mov push (bad) xor xchg or cmp mov adc das scas in xchg sar sarl loopne repz xor (bad) ljmp cltd das pop adc mov xor fild pop daa inc xor add popa stos test ret xchg sbb mov test push push sub xor mov ret adc pavgb icebp jmp out adc arpl sub push adcb mov (bad) mov mov jb stos imul in mov jno add push mov dec cmpsb fxch paddw adcl jle leave jb adc adc rcrb rclb push push xorb adc xchg push xor aam jle pop or andl sub lret adcb mov pop jns das sub cltd adc jl sbb cwtl inc adc cmc adc mov mov cmp rclb pop push mov xchg dec adc xchg (bad) xor adc (bad) lock shl test add aaa xchg jecxz cs inc add push pop out in adc out mov insl mov jmp jp pop je divps sbb inc cmpsl dec add adc add ss cmp (bad) (bad) adc ds pop pop push cmp sar dec fcos aas stos insl je fwait jle pop adc lds jne stos mov mov repz pop loopne rorl add rolb rep enter (bad) int ljmp adcl pop fwait pop jg ret jns (bad) mov inc insb xchg pop test mov repz dec lahf jae pop fcompl das cmpsb fwait inc mov adc inc jno mov int3 (bad) int cli adc enter mov repz fs mov fist jno sbb push scas jl adc call pop jecxz adc cs adc push mov ss unpcklps test imul lock and sbb xchg or repz cs inc mov enter ljmp outsb adc adc daa out stos adc int3 push xor push clc test in leave sbb and adc (bad) push or push xchg adc popf mov jl add pop sbb xor xchg xchg aas repz fwait add inc in mov or push inc movsl jns lret mov inc into add mov mov (bad) sti jg ffree adc loop xchg push fdivs mov fld1 enter mov push jns mov (bad) mov lock or mov push stos mov mov add popf mov stos sub cld (bad) lock adc sti mov pop popf pandn jns mov cmp jne loopne mov call adc addr16 xor or jge mov in (bad) mov pop addb push call inc pop xor push sbb xor dec test in xor jge aad inc push mov data16 gs test in std dec mov aad jb jl adc or or inc xor int and in call jnp ret gs push add xchg test add pop sbb mov adc ficompl push or xchg loope pushf push fsts adc inc test xor out push iret mov cmp add pop les xor adc gs or jns lahf mov add mov out sbb inc push test out loopne xchg mov lods pop or fsubrp test mov xchg mov pop aad test xchg ficompl push divl cmp ds out repz pop pop (bad) idivl mov adc movsl xchg sbb loope aad xchg xor hlt cmp (bad) dec add ss push int3 xchg adc pushf in shll insb xchg (bad) adc cld lcall call xchg cli test push add push inc es add addr16 lret jnp xor xchg inc test mov in std xchg add cld cwtl or ds add cltd and nop adc xor inc bound mov jno fcoml add cmp push in repz adc adc fldenv push mov mov scas sarb cld sbb cltd movsb adc hlt lock dec adc stos mov nop adcb fwait pop adc movsl inc jae mov cltd ja dec xor cmp imul imul add fild mov out lds or maskmovq inc jbe mov xor cld sub test jnp adc es in sub cmp mov pop adc clc test repz adc xor and or add sub or (bad) ds iret sub xchg pop cmc mov and jp add xor loope mov clc jno or pop into das aam mov mov push hlt adc jne addr16 insl mov jg sarl mov test adc mov out pop xchg add adc mov ficomp out pop xchg pop cmp mov or mov push rorb and dec loop rorb mov cmp inc pop pop (bad) mov push pop xchg sub push iret cmp sbb xor pop sahf stc or lahf movb shlb and insb add fimull lds mov adc sarl sub cmp mov xor adc push adc xlat shrl jecxz push xor in jb sub das sbb inc (bad) jge jl pusha xor scas cld cmp repz jae (bad) sub sahf and inc je mov outsb mov fwait and pop mov xchg and pop sub jo pushf (bad) repz popf scas nop mov add les xor mov xchg inc imul iret jo adc pusha mov push mov push das mov sbb lea rol sub and nop cmpsl imul dec fstps push out add adc insl sti adc mov pop adc scas mov push xchg xchg sub sub test dec arpl adc (bad) pop jnp popf movsb add repz mov mov (bad) mov xchg adc pushf cli fcoms jmp xchg adc mov add or lods pop int3 mov push dec popf add cmc inc adc loopne and (bad) mov push add adcl nop pop bound repz cmpsl jge das lahf mov pop adc maxps adc cmp sub push inc mov adc in cs pusha xor and push bound mov popf out xlat mov push adc (bad) or sub cmpsl adc inc xchg and lods mov test dec daa pop cld jl jecxz pop adc add lods repz sub scas ds sub sub mov xor lcall xor sbb ss jns stc inc push or ud1 out push and cmpsl insl out adc cs fmuls push adc ret cs test das ss add aam js or mov dec and push cmp pop xor test sub push sub imul adc (bad) arpl pushf jbe xor dec nop jge fcmovbe adc mov mov push mov test adc inc add jae mov adc into addl mov xchg xor js in adc idivl adc mov repz cmp mov sub pushf and cmp sbb out xchg cmp stos pop sub inc push push adc (bad) sub jno mov popa lock clc push mov pusha dec push cltd and mov add or xchg inc fldl test (bad) adc leave sti mov fist imul adc mov sub mov rorl packuswb sbb ficoml lret add test xor pop adc push mov repz aas or push in mov hlt xchg add adc sbb fwait in xor adc ficompl mov loopne adc fbld js in shr scas lds mov lods shlb out push or add pop mov xor cs (bad) mov cmp push add or repz adc fnstcw hlt lss (bad) sbb pop adc adc mov dec adc jns,pn xchg push popf sbb xor test pushf and mov mov test sub ret sub jnp add inc adc xor mov jns mov ljmp nop jecxz inc jns add loop lock sub push outsb rcll stc daa xchg cld mov mov lret jl or and enter (bad) in jle xchg fstp xor test mov mov dec jle lahf fyl2x xor xor out cmpsl sbb jno push adc pop adc adc xor fs mov cld cmp add or cmp mov adc insb mov pop push cmpl sub mov adc pop add cmc and adc or in mov xchg inc int3 mov cmp adc stos adc add into and cmc daa adc jae stos int out xor bound icebp xor adc js or xchg adc mov stos mov int in mov scas sub call sarb mov push sti jecxz adc popf push adc sub xchg adc movl dec lods stos add popf (bad) ja daa mov adc scas inc hlt inc cmp xchg shlb inc (bad) pop xor insb in imull or mov test dec dec mov add adc hlt sbb inc pusha push adc xchg (bad) mov sub adc je stos and (bad) adc not cmp adc aas adc lret xchg mov fnstenv and adc std lods mov and pop test popf pop adc cmovg mov call inc cmp outsb aaa scas push cwtl rclb popf adc adc rclb adc xchg adc int3 push adc cmp (bad) outsb fcmovnb loope (bad) adc mov stc adc insb pop popf adc testl push lret jb mov fdiv daa jnp jp stc clc stos ret call rcrl and fmull adc jb sbb mov (bad) je adc cmp adc xchg icebp repz mov int dec add mov repz (bad) mull sub mov adc mov mov movsb jl lock adc aaa pop int3 adc (bad) jbe sub (bad) scas inc aad pop sub mov jp cmpl (bad) cs scas nop inc adc inc jno fisttpll rcl pop jb adc xor push or inc jmp daa xor pmaxsw adc xchg sub pop movl imul xchg je js mov add popa xor push add adc sbb call out cmp outsl ss xchg mov sub cli pop aas add jne jno pusha mov mov pop mov sbb push cltd pop xor mov xchg jne (bad) lret fcom shrd hlt iret sbb nop push aas cli push mov mov xchg aam inc add xchg cmp jb out mov lea adc xchg or push jno adc cwtl xchg and adc or xor fidiv rclb sbb cmp jne imul jp add mov repz popf lock lods and std add pop sbb pusha mov dec imul xlat test ret test sbb add pop arpl or (bad) ja sarb cmp and cwtl sbb sbb or adc adc adc pushf inc cmc mov and mov fyl2xp1 xor push leave adc out inc adc pop mull jmp movsl addr16 dec sbb cltd push nop pop sub inc sti adc scas adc cwtl jne xchg roll mov pushf push and rorb pop mov in xrelease ror mov enter das adc mov and sub mov lds insb rorb test mov out push or xchg cld jae add hlt adc add jmp sbb xor sbbl mov and adc scas inc cmp adc push dec adc push dec mov adc jle stc push inc test or xchg mov mov lcall dec xor xchg sti dec jmp test pop adc mov jl and repnz call inc sarb mov adc sbb lahf cmp jge push les adc cmp jbe adc jmp arpl into adc je adc xchg and mov dec iret push dec or int jne imul mov pop pop pushf fmull push scas call xchg pop stos notb add rcr xor out or mov repz cmp xchg adc add ret das out pop int or inc (bad) fcoml pop add push lcall jno adc fcoml mov les dec rcll mov add cmpsb cmp incb or ret call dec sub adc bnd adc cmpsw cmp adc cmpsb lods pop inc adc push jnp jmp andb das adc hlt xchg inc adc pop sbb push leave out adc mov cld out hlt push cmp jecxz xchg popf popa (bad) clc jns xor imul seto pinsrw ret mov sti fildll stc rorb dec mov mov mov jmp sub out insb sbbl call or sbbl and mov sbb (bad) add pusha add scas push cld sub inc ret fistpl adc or fstl sub pop or out repnz repz lret gs aam inc adc sbb mov mov aas sti jno mov adc sub xorl xchg sub fisttpl push nop jp lds jmp (bad) idivb sbb cmp adc out clc sahf or nop idivb aad movsl insb nop mov lret fwait cmpsl int adc jb in cmpsb lea rol in stc push push jle mov adc loopne pop cmp fistl in mov mov mov pusha orl stos add (bad) pusha stc scas and outsb cmpsl adc mov jge sbb jae (bad) adc push addr16 sbb adc add outsb inc movsl adc mov xlat addl and adc mov xor adc cmp xlat push inc mov pop jle (bad) sbb sub adc inc add mov lds adc sub dec xor out (bad) push mov xor push mov adc adc ret popa repz (bad) mov mov std and sbb jae dec add js out (bad) movsb adc pop adc lahf pop ror jl inc test jl mov clc cs xor add outsb out (bad) or push and sbb lea dec xlat jnp dec push adc sub mov adc cs adc bound adc lods or mov push loopne cmp adc fwait adc es cmc adc (bad) xor lock mov adc adc addb sbb adc idivb adc repz ja nop (bad) jbe ret mov lret push test cld (bad) adc sub loopne nop aas mov cld in add xor push or push iret xor sub sub fs nop sub insl loopne sbb xchg dec add cmp pop adc pop fmull inc lods adc mov enter dec scas nopl fnstenv mov dec adc (bad) fistp adc or rcrb mov pop add adc test inc adc cmp aas adc mov cmpsl mov test adc dec imul es pushf fcomps and iret out loope cs sub jno jp mov arpl nop aam (bad) sti dec cmpsl adc repz adc mov out pop and lret in loopne data16 xchg xchg jl insl xor inc xor ret lods (bad) cmp mov jp test dec aam add and data16 add imul cltd mov int sbb aas test cmp rolb adc (bad) jmp nop push int adc scas movsb lods mov dec mov shr fmuls rcrb jle (bad) lods xor not dec mov insb int mov jb lea xor adc sub adc add xlat shr cmp mov adc mov xchg adc pop sub loope gs loopne add or and adc inc daa jb loop ret xor jae fistpl cmp pop push adc ljmp jl popa or and xor repz and dec repz cs inc cmp fwait or xor sub adc mov sbb push int3 lea jno in mov push (bad) push mov cmc mov push mov idivl inc insl mov mov cmc popf xor in rolb pushf push jnp and push xchg out mov sbb adc mov leave out daa bound sub cld fsts fadds leavew adc negl dec ds adc adc popa icebp cmpsl xchg hlt or push ja adc cld je js (bad) mov lds out pop sti aam xchg cwtl adc push sbb rcll lret lcall push out inc pop xor xor jno insb mov push xchg jbe dec or loopne jge xchg adc adc pop sti ljmp pop add mov push adc das lret enter cmp or lcall inc sbb test or fild xchg push push gs int adc sub data16 mov adc mov or sti std sub rclb mov jge iret out dec xchg adc test icebp mov pop inc mov adc push adc popa dec lret popf loopne inc add jne jbe adc and sarb mov in jecxz sub lcall popa fs pop jl adc in aaa shrb aam xchg xor stc je add pop movsb fstl mov dec rclb mov in test jecxz adc push adc adc outsb mov xor adc (bad) (bad) (bad) mov (bad) repnz xlat xor pop cmp shl push popf lea loop xor (bad) ds mov sub (bad) hlt mov lock in push jb mov add leave adc stos fldenv das sahf sbb dec mov aas leave jns popf clc adc mov lds cld xor scas mov fcomp mov call rcll sbb es imul (bad) repnz stc adc push lds jne les mov mov in xor cwtl nop (bad) daa mov mov push cltd adc lods mov mov int3 lret repz adc cmp aas adc inc xchg push pop (bad) hlt jno mov jo push fwait repz dec (bad) jae fdivs negb sub daa mov insl xor pop ljmp adc pop leave jge cmp adc (bad) adc js jne xchg std dec lock inc (bad) push jp add adc clc jge mov lret or lcall mov inc adc sahf rcrl jno push fmul js or repz mov arpl dec fistl sahf or movsb pop push lret add add lcall inc jl jae popa mov dec adc mov add nop int cmp dec adc (bad) pop jne adc call jle aad addl jo sbb push imul imul jno sub mov cmp sbb iret mov addb adc insl sbb and stos ret ficomp inc add cli test sub mov or adc fstl in loop jns roll jb xor repnz inc or sti out adc scas das dec sbb movsb push cltd xor xchg ljmp push adc hlt fs push adc je ds dec pop fadd jo push adc out sub pop push (bad) enter lea ret lret and mov sti (bad) mov sbb inc fcoms pop fbstp aad lcall add test movsb adc xchg sub lcall xor mov sbb sbb (bad) (bad) sbb ret orb hlt and xor pop add enter mov sbb adc adc inc inc inc sub sub sub lea mov mov or sub inc ret clc (bad) je int3 jmp push and xor pop mov rclb addl pop ret xchg (bad) repz int out (bad) (bad) lret aam outsl adcb or rcll ret mov xor cmpsb inc fwait (bad) cwtl jecxz pop ljmp iret sbb sub add rcrb dec adc mov in adc stos push mov mov lods repz ja pop leave adc adc sub cmc or adc loop roll rcll (bad) and (bad) mov flds adc call repz mov inc mov xor xchg fbld mov adc dec jecxz sub inc mov fcoml mov jno pop daa adcl ja add daa je aad loopne dec das xor in adc negb orl (bad) adc outsb inc (bad) adc mov fildll push xchg push pop in mov or xchg jecxz pop int3 fidivr cmp aam cmp sbb add shr xchg stos data16 mov pop (bad) push and jne (bad) mov xchg sbb scas sbb adc mov lret pop adc push dec ds adcb ss jns mov adc push adc push addr16 mov cmovl adc stc pop inc adc out inc sub inc adc rclb adc cmp in add fcmovnb pop hlt fdivrl xor pop dec inc jno mov sbb adc pop aaa sbb ds push mov (bad) dec int3 arpl xor adc jnp mov mov in add mov mov xlat clc adc add movsl xchg xchg adc scas push (bad) lock xlat (bad) clc cwtl sbb jo add jecxz sbb adc adc jae pop xchg mov imul in sub or push adc repz cmpl aad fwait inc jnp inc ljmp leave lods test mov (bad) in loop jnp push es rorb data16 ljmp xchg outsb push movsb pop mov adc mov (bad) or pop add pop nop xor paddw inc outsl adc mov adc push add adc ret mov cmp jne imul cmpsb dec fwait inc mov xchg aaa dec or add adc xchg jns adc jbe xor xor jecxz cmp sbb test cmp add mov enter or iret mov xchg adc mov push adc pusha in or mov (bad) (bad) jmp enter lahf fcoml jg xchg lods jecxz push (bad) jae fs daa adc mov lods mov lret adc loop test mov (bad) mov or sti adc hlt inc jo or scas repz ror loope into push sbb sub repz dec sbbl jl (bad) loopne (bad) inc mov or out fsqrt xor adcl pop mov mov dec mov popa (bad) xchg mov lahf scas (bad) mov push sub mov sbb jl and mov mov push xor adc mov adc sub das or xor mov mov sbb bound test movsl test rorb adc adc mul outsb add adc add cmp cmp insb jg ret adc hlt enter repz hlt ljmp mov inc dec jo rcrl adc sbb aam je sub fmull jmp or mov push mov pop mov adc mov adc cli imul pop cmp arpl jge test jecxz xor cmp adc les adc sarl adc in fdivs pushf xchg xlat sbb xor sub adc sub and mov (bad) xor bound add adc lcall adc bnd mov or pushf push sbb mov push fdivrl xchg int in pop enter jle daa addr16 repnz je out xchg or jno outsb das sti fcoms repz sub test (bad) cmp cmp mov push inc or shrl xor out lret adc repnz xor popf (bad) daa mull fmull or out jne mov mov testb cmp jge dec adc lds aad push sbb dec dec rcr mov outsb push int xor and loop fnstenv pop lahf or cmpsl and cmp (bad) jno xor xchg dec mov lds mov push adc push insb add cwtl inc stc inc adc je inc int je fnop daa outsb add nop and add mov lods cmp repz cld rcll inc mov adc cwtl mov inc inc mov sub xor sbb dec fisubrl mov jnp adc and xor in dec add mov add add (bad) aam test adc clc push inc pop cmpsb rol adc addr16 bound lret ss lods mov pop push aam dec ret adc jns stos mov xchg mov mov pop sbb rolb pop lcall add cmp mov add mov inc or adc sub adc in sbb daa pop stc fdivrl xchg imul and js jno add adc in mov dec enter aam inc inc out adc push jmp in mov xchg mov push or sahf pop fisttpl outsb pushf adc pop lret mov call push (bad) out repz xor mov adc fistp xor fsubr push mov push clc adc jge stc mov sti sub adc sbb (bad) fsubrl xlat imul repz (bad) adc lock xchg rorb xor pusha cmp out push jmp test inc or adc jns test jl cwtl pop xor popf sub dec aas arpl adc push int3 cltd inc mov adc in dec adc push (bad) (bad) int xchg repz jo jg jmp sbb adc cmp out fisttpll vpsubusw mov clc popa xor adc arpl jecxz pushf lahf sar out cmp add data16 mov daa sub aaa xor jae adc push lcall jnp sbb adc pop jae or mov mov sbb out lods add xor pop add mov xchg jecxz in les add sbb hlt inc insb push inc inc sub test pop cmp cmpsb sbb sarl adc out arpl sub nop lret xchg sub lea iret push xor dec sar test push rolb repz sahf hlt scas jb inc mov cwtl adc negl xchg adc pop sub je (bad) xor roll jg out inc jae ljmp ja push sub jg or jne cli adc cmp cmp mov lods add mov pop jl add repz inc push adc std mov ret mov addb aas mov repz and shrb add les sub adc cs mov rcll cmpsb adc fdivs js xor mov mov sbb stos fucom pop and (bad) jbe push mov stc push sub repz popf sub xchg les adc mov shll roll lock loope mov pop push int3 fbld pop sub lahf push cmp std cmp or mov adc fistl in pop popa add lds add dec popf shl out pop pop push pushf lret adc push nop mov jecxz xchg xor popf and mov ljmp inc cli jmpw test adc add rorl and xor roll stos or adc enter imul adc fs lcall leave and sbb cwtl loop adc push (bad) ljmp dec cltd (bad) adc aad xor rclb or int outsb xchg adc xor mov enter and outsb mov lds ret push lea dec ds (bad) or insl xlat jge js xor sub push flds stc sbb jb popf xlat xchg pop xchg mov mov add mov cld adc fcomps xchg mov jle adc arpl xor or sbb jle mov cmp xchg push std add test adc pop das in push adc stos pushf cmp or mov out cmc push test stc aam add fnstsw mov mov add flds add push ret fidivl mov mov fsts aam adc sub inc push std adc xchg into cmp dec hlt add xlat adc pop push pop xor push xor xor add rcl adc mov je mov adc insl dec movl pop inc adc mov pop jae pushf pop mov ja mov (bad) mov stc xchg sbb or jns pop sbb dec push pushf loope lock sbb jmp add mov movb mov or popf icebp sbb adc sti cmp cwtl xor mov movsl mov xchg test push mov dec mov mov xor sbb pop push and mov xor add sub and adc cmp scas mov sub mov xor cltd jl out std pop push mov mov rcll sbb mov ljmp mov mov push adc cmpsb mov cwtl xor xchg decb pop je jle xchg sub adc adc push cld add (bad) xchg (bad) cwtl lods out jb mov xchg (bad) push loopne push les adc pop aas pop or in xacquire mov add leave lret (bad) push ret rcrl sahf mov sub push stos arpl pop xor repz mov dec mov add ljmp je add push xchg and adc xor enter mov sub dec sarl cmpsb push into lahf jb pushf add or add lock int3 adc out and inc imul scas xchg or and repz xchg stc adc in fwait outsb lock sub je jbe ficomp lcall in out mov pop leave adc pop push lret sub mov mov adc mov test mov mov and lock bound xchg scas adc dec jge mov (bad) mov (bad) mov arpl (bad) lods fdivs jp (bad) adc jns mov int shrb inc or mov hlt mov outsl push push (bad) cmpsl insb push mov pop and cmc xorl xchg leave rcr scas mov pop or or pop pop lock stc cmp jno adc test and adc pop xor sub es cmp fidivrl and adc adc mov fsub and fisttpll loopne push sbb add push inc mov xchg cld aam popl mov imul or in adc aad xchg nop push xor adc adc ja jne mov ret adc add jg in cmp mov xor pop and cld or adc mov or popa test hlt shlb into sub pop pop out fcoml adc in sbb adc arpl std adc ds sub inc int lss xchg push pop movsl mov push xlat adc out (bad) mov mov jge jae or dec loop xor adc pushf fstl fisub cmp jne adc into add mov pushf push sbb inc cld pusha movsl adc bnd lret outsl hlt ficom inc clc mov xchg and mov adc divb adc bound and cbtw dec fildl adc faddp inc mov js rclb adc mov xchg rol in add sbb pop mov inc xlat mov jo (bad) mov cmp push jge inc adc test add in inc lcall add and xchg pop or out outsb pop add mov mov mov or and dec sbb lock mov jae jne rcrl jbe notb leave sub scas js jb mov xor js add mov repz fldl2e loop jo pop ja adc pop insl dec jbe push cmc adc lret jg xor xor mov test xlat pusha mov or add in sahf repnz pop inc in repnz bnd imulb out mov and dec mov cmp int3 loopne hlt lock sbb push sbb cmc stos repz adc or into lods adc pushf popf imul xchg call pushf lahf fbld push jmp inc adc and jne mov adc jae clc pop mov cmc xchg cmpsl nop adc and lea adc shlb aas mov pop std fstl pop mov scas push adc cmpb cmpsb ja mov out lahf mov mov mov dec addr16 arpl dec pop xchg jne jnp fcomi pop pop cmp adc in in bound xor dec stos fwait data16 in jno repnz rorl les or ret ja mov adc cmp cmp and loop adc lock dec push int (bad) ss adc add stos into inc adc fiaddl jne jl pop push jg jnp adc (bad) push xchg or mov inc jmp pushf add call xor adc nop xchg mov jo mov mov fnstcw daa push adc lahf add andl sub (bad) scas xor xor repz adc into pop ss mov jnp and fwait mov mov adc dec jno mov clc add push (bad) pushl movsl sbb push add and jmp test hlt ds mov cmp lods nop pop in adc sbb dec sbb sub mov adc and or fnstcw aaa mov cld adc scas rorb push ficoml mov (bad) xchg dec out mov jle in call sbb bound mov xchg sbb pushf add lods mov jl cli inc movsl xchg rcrb ret aad ss sbb xchg push mov sub aas and push inc adc sbb int test jno add add adc sub inc into xor (bad) sbb shr push sub or add pop into adc clc int mov sti mov mov or jp adc xor inc xchg icebp scas push adc xchg jg into sbb adc shrl in xchg repz adc (bad) xchg push sbb lcall bound xchg xor or inc popf cmp add outsb adc bound or jmp pop push push adc mov aas mov push out int or fimull push sub adc jae pop xor hlt inc into mov add ds adc mov mov xlat pop scas sbb push stos lea lods mov js adc cmpsb jnp out add sub repz rorb orl add iret adc leave insb push adc shrb adc stos mov cli test xchg cmpsb adc mov notb movsl aas lds clc scas jmp mov fstps xor repnz push mov in adc sub (bad) jle fldl adc pushf jns mov mov mov jne jl in aam movsb xchg addr16 add add leave out pop fsubl ja shrl mov dec push loopne flds jle or xchg push out (bad) call sub lret mov cwtl add fstl push xadd imul ljmp adc leave or mov orl pop adc das mov inc test push adc dec ret xchg mov inc stos sbb int je pop mov inc int3 adc cs outsl aam pop sbb cmp mov popa cmp divl add test ljmp aam cld or out jl mov jge nop int3 and add lahf adc and ret adc jno out mov (bad) (bad) adc jmp adc testb inc loopne dec mov movsl cltd icebp cld insl jns xlat repz lcall sub adc repz adc sahf dec fldenv leave jo fisubl sbb add and mov iret jns sub or lret adc dec dec data16 test das pop clc xor dec int mov pop xchg cwtl imul xor rclb push notb (bad) sub popa sub pop or mov mov push xor fimul adc dec ds int3 std sbb fcmovb add in adc xchg jbe or int adc cld pop mov mov mov push cmp mov xor inc lcall sub push add std and pop xlat fdivp inc adc adc mov or fistpll push sub mov insl lret adc push hlt xchg sub das add sbb push arpl push dec test cmp or adc outsb loope dec pop mov adc pop adc and ljmp adc addr16 or jne mov in int3 adc xchg mov (bad) dec lahf ja or fisubl jno sub hlt add lds repz jmp stos jecxz fmuls add mov inc bound lods cmp mov jbe notb outsb js test sti gs adc (bad) (bad) dec xor inc (bad) aaa out adc push arpl add xchg (bad) imul and push int3 cmp cmp hlt and arpl pop adc (bad) lcall ljmp (bad) mov insl loop hlt pop sbb enter push xor lods and jmp int adc rolb cmp mov scas xor adc mov lea jle or dec faddp jge hlt loop adc inc popa mov and xchg push pushf leave adc mov adc in adc icebp mov xor js popa int3 sbb adc adc inc mov test into jle subl and sub hlt clc les inc and pop test adc (bad) pop xlat cmp adc divb push push pop inc jge jg cs mov push mov add cltd ret adc lret mov (bad) jle cmp test rclb (bad) scas or daa mov and hlt mov add (bad) shrl adc or jl test add dec aaa mov std mov mov in xchg inc cmc or stos lods daa popf cmp cwtl jb jnp cli mov aad jne or inc push loopne jmp dec inc dec adc arpl adc js movsl insb push dec fnsave or lret xchg cmp pop push repz dec lret pushf pop dec insb mov dec adc jne xor adc push ljmp out das pop mov add dec nop push cmp imul and dec mov push sub lcall fidivrl xchg adc fildll gs arpl sbb add sbb mov inc jo mov adc clts push mov popa cltd or or loope adc sbb jle cmpb mov pop aaa sub xchg (bad) insb incb in add mov adc sub xchg fcmovnb call mov mov push sbb push pushf dec nop arpl mov sbb sbb lret (bad) or mov cmp sarl (bad) jb push cli fwait adc lea sub fdivrl fstpl movsl in fsubrs (bad) hlt jl mov or xchg xchg lea ljmp cld cmc repz push or aad insl sbb (bad) mov mov xor jo nop shrd sub or xor push jb aaa stc add pop mov push or je xchg add adc inc ds fstl cmp clc lret push (bad) jecxz outsb leave adc or push cltd rcl sub mov mov pop inc ret dec xor aas add (bad) fucom jno pushf cmpsl or mov popf cmp adc lcall xor mov pop ret (bad) out sbbb fs pop inc rcrb out jl cwtl ret divb xor scas lods xchg mov sahf push andb int3 call cmp jmp loop push mov xor mov pop (bad) xor xchg dec incl push or dec mov adc scas nop cmc inc adc ror push sti or fwait or mov loope adc mov sahf shrl adc mov adc adc xchg or and enter aas lret scas dec mov lock jne sub adc cmp adc xchg adc rcrb xchg adc jmp or stos mov xchg mov fildl mov test lahf lea mov leave sbb scas cwtl push push dec inc (bad) les icebp push jecxz cmp push jns push shrb pavgw adc call xchg cmp cmp cmp shrb or cli xlat pop mov adc push idivl xor add dec sbb in mov aas sbb mov enter jle test rcrb mov jge adc cs ds notb dec adc adc push mov outsb out les xchg in dec adc (bad) rcrb mov mov pop repnz movlps pop cmp push enter pop cld (bad) mov adc insl and adc fbstp (bad) pushf mov adc inc mov push lods or add lea js adc or sub mov pop rorl adc pop xchg imull dec add out icebp xchg xor mov xchg sbb aaa inc insl stc xchg mov inc adc push mov hlt call inc lods adc jle gs pop rep sub pushf into xchg mov dec adc mov clc cmpsb hlt (bad) inc aas adc and xor adc dec outsl test fwait rcll add das rcrl bound inc xchg aam dec add xor pusha daa mov inc lsl jl insl jb xor int3 lds or and or xchg mov repz pop jl sub adc inc and rsqrtps sbb int3 repnz adc xchg jl lds mov and shrb cwtl or addl xchg and aad mov push xor dec (bad) movsl (bad) mov popa mov xchg in or dec mov repnz pop test adc ret adc pop mov repz mov add jno sbb psrld cltd mov adc or and test arpl adc xlat fadds sbb cmc pushf xor lods add mov push mov pop xchg (bad) xor inc popf fwait xor and loopne bound lahf xchg out push mov das cwtd xchg dec mov test add mov dec adc or leave adc mov in nop mov sub and pop nop stos flds ficompl insb inc (bad) mov push add je hlt inc jbe or jmp jo mov stc out xchg outsb idivb or imul push jecxz mov outsl push (bad) pop lods adc inc pop mov stos jne int3 ficoml xchg lock bound out shlb adc inc push fimull cwtl insl enter (bad) pop mov mov adc mulb cmpsb repz sbb cs popa mov push mov adc test pop test fs mov mov fisttpll pop jne mov xor cmp mov addr16 xchg adc jne shrb bound xchg xchg rolb adc insb mov adc jnp out xor xor jg adc nop xor adc dec inc add (bad) or aad jb pop xchg ficom test stc mov in imul movsl adc adc pop test sbb cld out lret pop bound or mov data16 mov pop ja xchg (bad) fwait sar sar mov xor dec sub hlt mov call push and lods adc dec imul xlat adc out inc scas (bad) mov xchg sbb es (bad) mov (bad) popw sti xor mov pop icebp xchg mov xchg adc inc adc sbb and add (bad) xor sub mov pavgb outsl adc repnz into shr dec mov push movb addr16 mov popf clc mov aam adcl jg push repnz xor sbb push xlat sbb push jne cmp add adc mov cltd movlps pop ljmp pop fidiv popf iret mov ds les fnstsw ror mov cmp add repz lods xor inc adc sbb shl or aaa adc loope cmpl ret inc ss and xor or ja mov mov xchg (bad) add mov ret jmp popa sub test add xchg mov sti test xchg clc and cmc adc jl mov jmp pop jp xchg je (bad) xor and mov xor jmp jp aaa adc sub rep (bad) mov rclb mov mov test add adc add (bad) ljmp mov outsb inc mov xor out movsl mov push add test test mov xor arpl jbe enter int3 ja mov xor pop lea lahf (bad) mov push aam jb dec stos push cmp loope adc mulb xchg dec dec inc xchg rclb in xor cld aad test and (bad) jno pop xor xchg push lretw adc or mov popf adc push in jge jbe xor jae pop mov adc imul mov sbb fistl adc out fdivp adc jmp jo add adc cmp clc jne mov pop mov adc sbb (bad) cmp adc xchg int3 push lea sbb popa inc dec pop sbb test in sbb or xchg or insl adc mov aaa xchg cmpsl adc int and mov mov adc ds inc cmp (bad) shrb jecxz mov in mov cmp sub gs jge adc sbb repnz int adc mov mov gs divb (bad) repnz mov fimull outsb push mov sbb dec mov aam adc sub jge xor sub adc push push imul das adc fs add aaa mov fcoml jno lods loopne (bad) adc mov push jecxz mov or adc xchg (bad) xchg lods insb or adc testl and cmpsl out or or pop adc pop jb sbb nop xor cltd add cmc cmp (bad) mov (bad) jae in shll xchg adc xor fdivl daa mov sbb mov xor (bad) adc push (bad) jmp loopne mov call xchg ret sarl fisub cmp das pop fsubs scas stos aam into add js pop arpl nop cmpsl in add cmovo cld push adc sub push mov inc dec mov enter pop fucomip mov fidivrl xor adc inc mov jge icebp dec adc xlat ljmp sti mov jns rcll adc xchg push adc mov xor adc mov in mov iret stc adc setns jmp fidiv out lret push jno push jge and push (bad) xlat out inc incl loope mov cmp cmpsb add addr16 adc data16 dec pop and adc mov pop imul sahf jge mov mov mov cmp cmp mov jle add mov inc add add sub mov loop jbe add sbb test mov call jecxz out leave xor or lcall jne xchg mov fcoms lods add jp repz dec mov push pop adc and mov pop sbb js or mov mov xor (bad) pop adc movsb xchg cmpsl mov stos outsl dec sbb adc or fwait adc jmp out pop loopne adc xchg lods adc clc rorb sbb arpl pop dec add pop push (bad) (bad) ljmp rcl dec (bad) fsubs xor adc and pop jno pusha adc scas or mov daa adc mov in push jns cs adc dec das mov arpl (bad) negl or leave sub outsb dec pop xor push repz adcl or dec adc or enter xor adc jne mov dec leave ja orl pop test cmp sbb jl sub push dec dec adc test push adc imul cwtl movsb push cmp jecxz rclb cmovle dec pop aam dec mov out icebp mov mov push or mov jl mov mov rcrb and cmpsl mov mov mov jns bndldx cwtl or mov rol dec push into add cmpxchg outsb push cmpsb push in sbb adc add adc (bad) push or mov push icebp mov adc dec adc sbb addr16 jle inc mov cmpsb push adc sahf push dec dec icebp xchg push adc in test mov push stc pop daa mov adc pop push dec and adc mov sahf mov dec pop sub add in cmp push mov and (bad) ret inc push sti test lock jno dec or fmuls clts adc int adc sbb cmp lahf mov adc out nop mov pop in or xchg dec int3 add repnz or or adcl add mov inc repz pop call test je jmp adc jge adc dec sbb sti xlat sub mov pop sub js insb lods aaa adc hlt or out aam cmp pop test adc mov xor xchg daa or loope adc push adc dec addr16 sahf rorb push mov jns pop cmp inc pop cmp push repnz popa rcll fnsave dec incb scas and test icebp mov push shl fs push or push xor pop es or or rep add mov scas mov iret and cli (bad) mov adc xlat adc inc mov (bad) jno adc mov nop fimull jnp fldl sbb repz mov jmp out adc mov jl les into jo loopne (bad) mov mov and adc mov jae or inc js sub loop shlb imul sub xchg dec add aam les aam add push sub (bad) cmpsb xor imul pop adc idivl test xor inc jno (bad) add push test jle jmp sarl adc and hlt lods and mov mov mov scas push mov decb or or xor xor pop dec adc hlt ds arpl in mov (bad) repz or (bad) mov scas idivb sbb adc hlt aam xchg cmpsl imul mov or pop icebp loop mov lods mov xchg repz mov cmc jae sbb xor fwait push cwtl mov lret hlt in and pusha in out add rcr sar repz out sbb fsubrl add mov push out insl pop adc mov mov mov in dec (bad) notb push or stc pop scas adc pop jp or adc mov jnp dec xor int push leave lcall fscale cltd pop jo mov sub push pop pop jo stos adc cwtl mov sti nop repnz add xor dec imul (bad) ss or inc clc lea orb loopne std es and cmp sahf xor xchg nop inc and add dec lea sbb mov jecxz mov inc jnp aaa popf or outsl pop rorb fdivl cmc pop bound stc jg jae std cmp mov pop cli ret push add int3 pushf repz add mov jb add stc nop stos xorl scas cmp aam adc imul xchg stos inc ljmp popf stos into std or sub sbb push push mov mov mov jge sbb mov dec jmp (bad) nop inc imul sbb xor push dec adc push sub outsl xor xchg movsl (bad) enter sti repz ljmp fcoms pushf sbb ds movsb clc inc push inc and push mov pop dec lock xchg bound cmp adc scas mov fnsave dec (bad) cli notl fadds or (bad) xchg ret mov test adc lcall jnp jbe addr16 jb cmp loope and int3 push pop es adc and adc arpl ss xchg pop gs std dec ljmp xchg xor fdivrs add icebp in adc dec test ret mov rcl push (bad) movsb (bad) adc mov pushf jbe sub add mov mov fcmovnbe addr16 in dec dec movsb mov (bad) in xchg (bad) fldl add dec mov adc pushf rcrb xchg in repz out mov dec push xor mov adc sbb nop pop jbe ret xchg add rorl imul (bad) inc nop sti imul sbb dec ret add fisub dec xlat call cwtl (bad) jno mov ss or test mov mov imul lods pushf jb ljmp xor push xchg mov in mov cmp adc imul sub push xchg pop adcl xor in push dec dec mov clc mov add dec fdivs sub jg movsl and mov (bad) incl rorb in cld xchg cmp and add lret cmpl loopne into xchg cmp mov or jne jo inc pop loopne out adc adc and pushl fimul adc xor insb mov out adc ljmp sarb outsb xchg test xchg incl adc mov dec adc sbbl movsl and push sub sub stc aad stos pop adc adc jno outsl adc dec mov ret sbb lods jae ret adc jne adc pop pop add sbb adc push out lea cmc adc add jmp andl xor mov ja cmpsl icebp out fst adc ficom es push sub test adc stos pop aas popa jb shlb mov sbb adc outsb shlb pusha into insb xchg xor imul xchg fwait mov divl xor repnz push and pop adc mov repz jae fldt pop push les adc lea sbb xor mov jno push dec jmp adc lods movsb popf loope jbe sbb adc sarb xchg pusha rcll mov iret int push inc cli lahf mov xor push dec icebp adc fidivrl repz pop mov xchg or (bad) iret sub call adc stc lahf int3 jo and push add (bad) push xchg jl add mov mov adc cmp pop pushw mov push inc repz or jl sub sbb inc in stos arpl and mov fldcw adc movb dec mov or jecxz mov out bound xor add adc jp fidivrl xlat ret mov movsl in test rorb add mov imul stos inc pop into sub pop adc pushf adc dec push cmpsl mov js cmp popa lods adc (bad) xor shlb add push adc outsb jno repnz inc sub arpl adc add mov rolb (bad) mov adcl jge rolb inc xchg sbb xlat add sbb repz gs daa clc call orl mov je and test sbb xchg dec in push push pop cwtl nop dec enter sbb shr notl mov int jae adc sbb outsb pushf cld movsl inc mov sbb push mov adc lret jle in inc or adc imul dec ja or sti jecxz jne mov adc sub scas xor mov jge mov js adc movsb push arpl or adc pop fsubs leave and push adc mov mov sub sbb dec add mov push test pop jb adc xchg popl rol icebp mov je or dec pusha cld xor jmp sub mov or xchg repz inc fstps jp (bad) bnd xchg add enter insb push arpl jl lahf or and sbb fnstcw adc xchg jns pop add adc out inc adc mov adc mov adc addr16 add adc add mov mov inc cmpsb cmp adc loop daa repz insl jp popa add jg stos xchg ror fistl jle lock xor cmp pop xor mov movsl stc cli insb (bad) adc mov nop mov inc adc lock mov cltd (bad) adc xor cmp cwtl inc adc hlt rcll mov pop repnz int3 mov or mov rep movsb pop test adc icebp jne or push mov xchg in cmpsb sbb stos xchg sub jnp stos ja dec ret adc pop in lret sbb daa sbb fyl2x adc std mov push adc rcl fisubl (bad) pop insl gs lock lret lcall xlat loope jno femms sub cwtl dec mov rorb inc pop aam pushf jle jecxz xchg cwtl nop add adc or xor push jnp inc loopne pusha xor xor adc dec mov xchg ret mov mov pop mov add mov adc push xor push lods cli sub enter cmp rolb pop sbb jno loopne sbb dec adc dec fidivrl push test enter jns mov int mov out pop mov mov hlt je add mov das sti adc fs outsb xor inc xor xlat fisttpl sbb (bad) fdivrl mov mov and les mov fidiv jl sbb xchg pop mov je lahf (bad) or mov inc fimull js adc mov adc sti imul or sub inc iret nop out or loope lock add addr16 adc pop add push mov subb pop adc bound popf ja jmp push inc stos pop adc arpl sbb sub adc mov cmp jg sbb outsb pop aad adc mov stos pop adc fidiv cs push das mov lcall mov cld fisttpll push (bad) sbb test lahf and adc pop mov add not addr16 adc shrb scas push fs or mov stos add push imul push add xor out int ja or cmpsl add mov or es xor or adc out loop xchg add in ja popf enter mov push mov sbb shld dec jle adc divb jnp je add adc cmp insl out mov adc cmp mov add sti loope (bad) jle bnd ljmp xchg add outsl cmpsl mov into repnz (bad) jb out inc pop cs test sbb adc call mov in adc jnp movsl out push ljmp into add int3 rcll loop jmp stos aaa aam sub (bad) into jmp jns pushf mov mov aam lea push lret push or test (bad) xchg pop mov sahf xor aam or mov imul xchg mov push push or dec repz sub push cmp mov xorb jge xor decb xchg pop xor mov adc sbb dec fcomps clc test gs addl sub sti repz xlat dec pop rorb pop mov fdivrp in add loopne rorl mov push push adc dec bnd ret das arpl add int js movsl loop aaa adc mov inc push outsl fdiv mov popf in push inc cmc es hlt stos pop movsl push mov sbb ret cmp and pop loope and repz jnp sbb test adc or lret push sub adc dec loop jnp enter pop fnstcw inc into (bad) lds cmp repnz add lret fwait sbb adc fstl inc push lds into and adc lret std push aam add xchg add (bad) mov stos mov adc leave push popf inc mov out sbb rcr dec lret sahf add movb test or mov mov sbb fcmove icebp aas inc inc adc mov push outsb dec cmp adc jae inc mov popa mov inc setp cmp adc cmp fnsave dec lock pop clc bound repz mov mov xorb (bad) popf mov lahf push sbb sbb mov aam pop jb mov (bad) inc pop iret sahf adc rorb aad sbb mov sbb adc cmpsb stos push fldenv add adc nop mov jl pop js adc sub sti xor scas cmp fwait adc push jne jbe mov sbb xchg testl adc xchg pusha xchg repz sub (bad) pop lods cmp pop ret xchg and ja dec xchg xor mov sub lcall pop or jo sahf lds sub inc pop xchg jo adc and les adc cld das pushf std movsb cmpsb adc stos adc sbb xor adc add inc (bad) sbb and (bad) sbb in adc push fcoml lea adc push xlat sub (bad) or mov lods es les cmp pop loopne (bad) push ret insb and mov adc push fs push pop ficom lock jg or cmc xor xlat mov rcll rcrb add mov pop ret iret loopne xor loop mov popa jne adc xchg (bad) in mov cmp push dec pop aam adc outsb fcomps (bad) icebp jl or cmpsb cli add xor xchg lods ja adc sbb mov and push sub cmp lods in dec and rclb mov jge adc hlt mov adc jecxz xor inc aad xor clc xlat lods (bad) cmovs in jno inc xchg dec adc rorb pop fistpl shll mov stos repz in push adc gs out (bad) xchg mov mov insb or notl rorb mov addb lds adc mov and int3 aaa mov push imul pop or fidiv or int3 adc mov jmp mov push inc sbb faddp adc pop int3 addb mov movsl lock scas lods adc inc enter adc xor mov add mov xor xchg mov add sti fcoms push cs push daa add or out insl pop cmp cwtl arpl nop mov sub xchg mov adc fdivrl and jae mov adc cltd push pop cmpsl and inc scas mov or repnz jg jbe inc pop cli inc and mov cmp dec aam ja bound fcoms jl (bad) repz inc push adc mov inc pop push adc insb cmp lea or sbb push (bad) int cmp xor repnz adc mov mov divl adc adc sub cmpsb adc push aam add repz cs out repnz mov lcall fwait je push nop or lds or addr16 daa out call xchg jne xlat nop gs push rorb add and outsb fsts mov fcoml adc adc pusha iret sub sbb adc mov out cmp and jmp ds push (bad) adc shl push int (bad) rep sbb adc lea bound aam sbb and pop stc push adc pop jg in cmp rorb and sub adc outsb popa stos push dec cwtl dec sbbl repz fdiv xor jns xchg dec pop div inc pop out sub mov and sbb scas ret stos pusha arpl mov lods sub inc jge xor jmp or pop test out lcall ficoml xchg adc dec or fsubs xorl jno mov pushf adc cmp (bad) sbb push ret rorb cli stos adc pop push notl sbb xchg orl cmpsb in mov adc sbb loop add push jne mov sbb pop adc psubq sbb in adc sahf mov or lret je xor pop pop or adc shlb mov movsb pop leave mov fnstcw cli sar push adc adc add es jle (bad) xchg (bad) mov push bound add adc dec ljmp xchg out lahf xchg push stc adc xor call (bad) cmc mov mov fwait sub stc jg sti mov xor or pop (bad) adc jge aam dec mov mov or cs and insl lcall push stc adc out adcl sbb xchg aam add mov mov dec dec or pushf dec pop (bad) mov mov or fstpt ss lods sti cld pop test iret mov in inc xchg popf jmp xor inc aas (bad) js jl loop dec roll push enter sub add scas nop xchg or mov adc xor (bad) out dec and mov les mov lea (bad) in pop adc jg jecxz sarb (bad) out je mov jp jle or test mov push and adc push jns push (bad) test rcl aam and stos imul cltd cmpsb or pop clc inc sbb fstl mov pop adc cmpsb inc pushf mov out adc mov fdivs mov test mov movsl loop daa (bad) xor jb adc push xor pop scas test mov std in push (bad) jmp mov mov cli push cld mov mov incl or adc test mov add mov add shrd lahf out notb and sub sub adc cltd in sub xchg test adc fucomi pusha mov test push mov rcrl mov inc jg repz imul xlat shr add mov mov lea mov pop inc push mov push shl mov lret sbb mov nop movsl popa dec adc movsb jp bnd jno push in loop cmp fdivl adc xor jmp dec push xor jecxz add adc jo jnp mov xor add stos orl add fwait aad sbb sti inc adc (bad) mov loope aaa pop in dec ret psllq into xchg mov (bad) loope sti pop (bad) jb cmp out add fwait imul jns xchg test jnp (bad) cmp adc lods xor mov fwait xchg xor (bad) cltd icebp push cmp movsl xchg les adc jno xlat pop cmp lods push icebp push pop (bad) push mov daa inc mov outsl lods inc mov and loop adc mov dec fsubrl xchg mov fidivr mov loopne fisubl pop pop adc and and sub pop dec jno push repz jl lahf inc ja test outsl js adc lcall aaa mov mov mov xor push jns jno mov adc cmpb mov xlat cmp stc or adc test dec hlt mov and scas dec push cmp xor dec movsb test pop out dec adc iret test dec adc jo adc (bad) push nop fisttp stos mov iret pop push dec or loope out (bad) mov sti or rol (bad) (bad) movsb paddsb insl xor test (bad) push sbb dec data16 sbbl movsl loope out xor pop dec gs mov adc arpl xor or or ss mov cmpsl mov pop sub add sub std jp scas shll aam mov icebp xor jbe or adc dec push add mov adc enter arpl and lds mov inc sbb scas xchg (bad) xchg push lods inc sbb adc jo pop mov in adc dec das add enter movsb push test xchg mov adc mov xor stc pop sti and stos loopne popf or push out dec jge xor xor (bad) sbb mov pop mov sub jbe cmc setp fwait adc cltd dec and xor mov xchg dec cmp adc add cmp aam or sbb call mov adc call movsl ljmp sub inc inc xor jmp out std jb (bad) hlt fucom adc mov sbb mov orl sahf in fstl adc enter test jnp pop add push inc adc lret mov fcoms (bad) test (bad) aam imul add scas outsb adc dec call sbb mov xchg sub rorb add xchg loopne and adc repz mov sub adc test adc sub mov adc cmc scas incb in loopne dec shlb cmpsb lahf pop xor test adc test loop jle inc add xor jae (bad) adc add adc mov loopne es push clc jno imul jne std cmp fldcw (bad) pminub insb xchg mov adc mov mov xchg outsl mov iret in lods gs xchg push and std adc xlat dec jl fisubr pop popa (bad) xor nop lds fstl or jecxz dec outsb adc cmp nop xchg das adc push xor pushf and and mov mull adc or pop push jns pop adc jmp xchg pop jno adc and sbb popf repnz cmpsb cmp adc sub sub (bad) pop adc stos mov xchg loopne loop lds push nop add adc imul inc insb xchg rorb inc fnstenv repz jo pop inc push push stos int pop and aaa scas adc cwtl mov sti inc fwait rolb cld mov xor (bad) loop jmp add in adcb pop xchg cmp jg lods repz sub mov cmpsl adc ficompl jb adc in aas jnp sub sub clc scas scas loopne mov cmp add mov adc adc inc mov xchg rcll mov adc repnz jno fist adc out push mov inc icebp outsb hlt adc jns mov pusha adc je add stos push loop or xchg push (bad) insb stc sub cli xchg ret scas out aad jns jl test cmc movzbl push and loop xchg adc sub adc xchg mov cmp cmp sahf inc pop scas jl sti dec shll mov xchg into cltd adc into scas add cmc mov bound cmp adc and stos or shlb int cmp call cmp (bad) hlt inc mov jmp jle insb adc adc lret pop andb movsb adc aad xchg adc xor adc cs fwait or mov iret xchg xchg int scas les xor jge ror mov nop xor sub dec jecxz jg sti mov sbb std mov int3 repnz pop and add inc test adc int sub daa push inc cmp jmp aam push adc or xchg cmp xor adc rcll and cmp into cmp mov xor (bad) insl push adc pop jmp cltd movsl pop test sub dec mov fcmovnu es std xor ret cmp jnp dec (bad) pop push les mov int3 inc scas adc (bad) arpl adc out inc add jecxz pop push cld push adc mov push adc cld mov movsl xor adc int3 push mov nop arpl inc pusha or ja lds pop in mov aas adc nop sub or fadds inc adc shrl shrb repz ja push int3 mull or mov (bad) rcrl xor scas push or mov test inc or lock mov mov or adc loope movlps sbb or and cmpsb mov daa aad xchg pop adc and movsl xchg adc sysenter lds dec jae adc in xchg out xchg sti adcl push imul pop mov cmp push fld sub adc loope push dec aam stc mov jge enter cmp adc adc adc jmp imul push adc cmp adc xor add enter inc gs adc adc aad popa (bad) mov fstpl mov fstpt mov cmpsl mov push mov ljmp mov jecxz add jb mov cmp (bad) out mov ljmp push xor call sahf adc ds sti addb xchg push rclb shrl cli mov mov xor push adc fiadd xchg inc andl jecxz xor and cmp mov sti loop mov push xor add sbb and adc pmulhw adc loopne mov xor xor or adc and mov bound sub adc ss adc icebp or inc das cmc sbb adc cmp lahf xor in mov or push scas mov xor sbb sbb cld mov mov xor adc add mov jle rolb mov pop and push movsl sbb and pop cmp adc je pop xor dec xchg insb xchg (bad) aam pop (bad) adc lock mov imul jo dec push int ret adc mov push push adc ret adc xchg push inc (bad) mov xor sarb or notl xor shll jg add fsts xor push pcmpeqb jmp jmp push jns in sub cmp adc je inc adc adc sbb xchg xchg test ljmp adc clc jecxz lods rorb hlt orb mov cmp adc inc push sub mov push jmp or pop lret ja cmpsl jae int3 pop xor push mov add cltd adc adc in cmp sbb adc push and dec out inc loope inc mov or dec jnp adc adc push sahf xchg mov push dec adc lea popf in sti adc cmpsb adc fcmovnu dec mov into cmp add mov add pop jp in adc jl scas js mov add (bad) jbe test sub fisttpl and adc cmc or scas mov insb lret cld pop mov rcrb jnp ficom add adc fwait push repnz adc pop nop fdivl ret repz mov lret daa adc adc mov mov int3 mov cli and das cld call dec adc (bad) or or adc sbb push push dec lahf push (bad) dec xor add or sub mov xor lcall jbe sub inc or fcmove adc lret or fcoms sub adc sbb push adc bound (bad) mov mov dec sub or mov std cmp das pop ret add ret adc inc xor adc test adc pop lret cmp inc insl movsb xlat loopne pop mov mov jo adc adc xchg in movd nop shrb mov push and adc aam push adc loop mov sub add les loopne adc fidiv inc and scas iret lret into aas adc out or idivb push shlb fidivl sbb sbb test adc and jnp mov add xchg gs pop (bad) push stos (bad) mov lods add cwtl (bad) dec push sub mov clc (bad) inc in adc dec nop movsb popa sbb xor mov adc sbb xchg hlt out dec mov or push leave adc popf push inc and lea nop jecxz iret adc mov push xchg xchg push lods xor xorb push aas pop aam add add jbe popf cli cmpsl sbb scas adc incb and adc push in adc aas adc or adc fcmovbe call add imul pop fpatan dec mov stos hlt dec loopne adc push xchg stos add fwait bnd jmp add dec mov mov push add sbb pop mov movsl (bad) fisttpl or mov xorps inc into sub adc test jg cmc mov (bad) xor in adc pushf xlat lock jno nop lcall stos jbe data16 sbb pop mov mov adc mov rcll popf in and inc fsts mov imul enter or or cmpsb adc or (bad) xor adc adc nop cli pop and dec xchg adc push dec adc add push in (bad) rclb lods xchg sub fcomi js cmpsb or ss push xchg xor xchg inc or dec rcrb xor lods and sbb fcmovnu imul jns nop js cmp pop movsb jbe sub cmp inc mov cmp mov test fcomps repz sub scas pop lea mov adc cmp and repz push xor mov in test fisubr add cmp rolb xor mov mov (bad) repz mov push adc test popf push repz adc pop in adc js enter sub sbb jle pop jmp imul repnz popa adc cmpsb jns rcrl mov inc push pop mov fsubrl (bad) in add jecxz ja aaa sub adc sti stc dec inc lea adc cmp adc popf cmc mov repz xchg adc mov fcoml pop stos fdivs or xor adc push ret shrb leave ds les xor xchg mov int pop insl (bad) cmp jmp or jnp jb add adc xchg sbb jns cmp mov push inc mov add mov sbb cmp fnstsw sub sub inc sbb aam popf mov or xor or jb lock push add pushf or arpl imul inc movsb mov push cmp mov add xor pop sbb mov inc pop pop out jge scas adc sbb (bad) je mov cmpsl insb je lock ficoml pop cmp pop cwtl idivb orl sti or call or or mov arpl sbb cmp inc inc mov mov add mov pushf adc faddl (bad) adc cmp aam out adc lods inc xor lods xor inc into sbb aaa dec adc ljmp push (bad) daa push scas jnp adc push aaa dec cmp sub stc mov lds inc rclb test mov stos (bad) cmc mov ficoml popa cmp jnp and bound push add iret adc cs adc gs notl mov pop lods inc jno jne or (bad) cld fwait pushf aas xor clc cmc jecxz add add adc outsb adc jle and mov mov aas jbe xor xchg pop dec mov nop mov sahf adc aad push sub movsl adc mov jecxz aas sbb sub nop xchg adc sarl insb fnstsw sub adc outsl rolb jno jl rorb aaa setnp pusha xor add and adc adc test rcll jl aaa mov jno sti je dec mov cld (bad) pop add (bad) mov adc cwtl mov lock xchg adc dec stos jne mov xchg xchg xchg push out xor or push fnstenv into in adc dec loopne repz inc mov pcmpeqb adc jmp push xor inc inc mov adc sub (bad) repnz out (bad) fmull in xchg sbb or adc cmp hlt movlps imul mov adc outsl sub pop clc add (bad) sbb ss inc push sub mull add or jg cmpl or es addr16 jae xor add inc adc mov mov sub adc call inc adc ljmp adc lea jno xor in pop and or cmp add pop int repz aad loopne jp int3 inc mov pushf push sbb dec nop mov push mov shlb icebp jns push push adc sub xor pushf pop adc xor add mov xchg dec into and (bad) mov adc fwait pop js rcl test xchg lahf out adc jp hlt mov sti push (bad) adc xchg int mov xlat nop icebp push lods adc mov dec scas add ror sbb movsl mov arpl pop (bad) ds adc hlt adc jp pop stos jne mov je adc push insb popf push pop xchg inc (bad) divl jmp adc rcrl adc sbb add nop out fsubl mov int sbb sub xor loop jno jno mov adc pop dec push xchg adc inc lock outsb movsl cmp repz mov pop jge repz xor js mov and shl in (bad) aaa data16 adc je mov xchg pop push pop adcl hlt mov out enter psllq rcl cltd mov mov clc in js stc imul inc mov cmp push fbstp inc and cmc bound add (bad) shrb or push leave mov stos out adc nop in into cwtl lds insl sti adc pop inc mov or jmp mov xor dec inc in movsl cmp lds lcall stos nop or es (bad) adc and sbb jae loop aad sub mov stos leave out nop or or mov add ljmpw pop sub fimull or sti icebp loope sub pop fstl fcoms jbe outsl push data16 adc (bad) mov dec or lods adc fcomps in sbb adc xor fbld mov push sbb fisubl pushf imul jle adc cmc lahf iret xor rolb mov or adc icebp mov mov mov add xor cmp or ffree adc push insl stos sub pop mov loopne aaa pop mov push pop adc xor adc (bad) mov pusha ss stc mov add dec ljmp daa inc pop (bad) dec mov jne jle or js jg or int3 cmp rcrb jle pop fiadd ja or mov adc xchg adc bound adc mov aas out adc (bad) mov add push ret (bad) cmpsb mov shlb push adc dec scas jno ja fsubrl nop mov add mov xchg pop xchg sbb push pushf mov int push test adc inc ja push cmpsb fild adc xchg out jae fs inc sti in loope decb pop and movsb xchg mov push add repnz mov imul psrld mov pop cmp out dec or es (bad) inc cmp pop out adc dec xor lea pushf scas std add (bad) lahf js out rcl mov popw or cmovo mov dec je adc pop pop dec adc inc int3 imul stc adc fdiv outsb mov and jmp rolb push sahf stos or paddd adc into popf test in add adc xor mov xchg rclb push sti adc int3 lret cmc and stc repz mov jb or adc rorb call mov mov dec test js mov insl cld in jle fucomip adc sbb mov cmp inc push pusha repz adc mov aad cltd pop xchg push lods imul (bad) xchg adc adc push jne add insl fcomp jg inc mov jno iret lock in fidiv mov mov push fild cltd pop sti stos adc sub sbb mov adc icebp cli repnz dec int3 mov and (bad) jno and bound sbb xor dec add mov fwait adc and xor cmpsl aam repz lock sub push aad cmp jne sub xor aaa jp lret dec mov add jns aas and adc add xor pop into or xchg jno cmp mov jb dec jle fistl mov loope add adc mov ja cwtl and jne loopne push adc mov mov mov mov mov inc add in push jnp lcall jo lds or cmp adc push ret aam movsb adc dec push mov mov fsubrs sbb or (bad) add aaa adc jo xlat (bad) repz ss lds push mov xchg pop sbb cmpsl mov mov jbe adc lcall mov out shrl into dec or mov jae repnz adc lock pmaddwd adc xor lret imul jae jg lret sbb pushf dec mov pop nop into outsl lods adc jne sub repz mov sbb bound mov xchg dec int and adc notb addr16 sbb add adc movsb sub adc shll dec inc xor in in sahf orl repz pop cwtl jp adc movsb aas ljmp adcl daa jl or repnz push dec mov xchg insl mov pop mov jg sti mov in cltd xchg pop adc inc xor or shrd out add sub or sbb pusha jbe push imulb pop int xchg sbb jns lret pop xchg adc add mov add push pop adc arpl sub adc mov mov ret imul and addb xchg pusha lea pop inc inc scas sub adc rorb (bad) mov jbe mov pop add mov mov shlb add mov aas int3 dec pminub adc imul cmp and push insb xor shlb sbb ss xor mov inc fs addr16 mov xchg fiadd fistl imul stos (bad) dec and adc (bad) adc or xor (bad) outsb mov adc ret pop cmp xchg aaa or adc add cs sti call pop mov jbe sub insb adc int add adc xchg aaa sbb lds adc test cmp mov xor rorl lds pushf andb sbbl loope insl adc or mov sbb or lea enter or push (bad) mov push shlb sbb adc fwait or xrelease bound pop leave (bad) jmp repz mov xor out into sbb fnstenv push in dec add mov lea int out rcrb sbb mov pop and (bad) or push cwtl lea in int3 xchg push cli push xor dec movsb or cmc dec sbb inc dec int3 fs pop jmp push orl adc jno ja add lods mov arpl sbb fisubl jne test xchg dec insl mov ds roll arpl inc lds repz (bad) adc test adc ljmp mov pop xor dec and jno rep cmp in ror or or test bnd or xchg adc fild std jo arpl push jae jp (bad) xchg popf adc dec mov mov ror push jne addl mov add xchg lods (bad) sbb xor insl sahf mov mov addr16 outsb dec inc icebp out push sti adc xor mov daa enter das xorb gs xorl xchg into and pusha add clc in dec xor sbb daa (bad) push test cli cltd pop jbe adc psrld sub push or mov xor mov fcomps int3 lret mov inc (bad) repz daa xchg add push mov (bad) aam jns fsubrs repz xor sbb iret xchg lock ja jbe or (bad) sti xlat mov adc jecxz mov ds add fcmovne lea or push jl sbb subb es adc mov jmp jcxz sub dec and mov sti sbb stos adc and push mov repz fisubr sbb fild je sbbb cwtl adc mov pop or sbb pop bound test sub sbb xor inc sbb adc in cmp and pushf arpl outsb add adc adc push shrb repz push cmp pop ja es flds pop cmp mov repz or jnp dec sub jae in push lcall pop ds cmp mov xchg mov push adc fldl fisub test xchg insb push int3 and mov push xchg outsb cmpsb inc repz mov movsl adc inc xchg sbb and add push xchg loop adc cmpsl enter shrl negl stc lcall movsl push jge xchg pcmpgtd pop mov fisttpl in push sub xlat dec cli mov and mov mov adc repz mov inc push loopne ficompl mov dec pop sbb shll push add cltd jge adc sti in and scas jp repz xor loope mov adc sbb rolb dec gs adcb (bad) mov dec xchg cmovbe dec ret inc adc add adc sbb jecxz (bad) pop adc mov add push sti test adcb out test adc aaa arpl lods mov and popa icebp push adc mulb xor and mov pusha and adc inc cmp adc cmpsb mov cmpsl (bad) stc cmp adc push popa dec xor (bad) int3 cmp adc push stos and xchg leave ja mov xchg (bad) mov sbb or std iret shlb (bad) jbe add xchg cmc sbb dec gs pop cmp adc pop cmp push aaa xor or push lcall fcompl add data16 or lret in lock add stos dec test cmp xor daa adc pop repnz popf cmp lods outsl pop fwait xor mov repz adc les push jmp ja,pn sbb cld lcall in rcrb in push xorb sti and cmc (bad) outsb xor push push sub push xchg stos rorb ud2 movsb movsl (bad) fldt mov dec mov sub pop add adc lds out dec lcall (bad) std pop push adc fstl adc lsl adc aaa mov rclb loopne sub dec test pop mov stos adc mov adc adc mov push jmp adc mov adc jbe or out movlps popa add les jg dec xor adc repz movsb cli (bad) mov inc pop dec push fwait or push adc add xchg jno sbb inc mov insb mov push in lds pop xchg add (bad) (bad) iret int adc sub mov add mov mov push pop mov insl inc add mov xor daa fisttp add mov cmpl jbe push add mov (bad) adc xchg (bad) les mov adc adc and into sub rclb xor inc gs in add lahf ret (bad) jge cwtl rcll sbb sub inc jl adc out or int lret mov std mov xor xor ja outsl shlb bound lds (bad) mov adc dec sbb mov sbb pop faddl outsb int3 adc fcomi sub push adc insl fcoms aad mov cmp pop imul repz add arpl xchg das iret mov testb sub data16 orl ja xor adc mov pop xor jecxz xor push adc xchg push xor cmp or push lds xlat xor and xchg (bad) sbb fmull dec adc nop adc mov xor xor add ret in nop lret sub push int jg fcmovbe adc ret popf mov pushf adc jmp fsubrl inc mov pushl fidivl fist mov adc mov inc mov pop lea (bad) repz lahf (bad) test negb sub icebp or div dec sub xchg push add arpl leave and in cwtl mov xchg mov xchg add cmpsl sub cltd adc mov jb or jno cmp (bad) mov xchg add cmpsl or dec xor jne lret cmp mov sub insb jbe stos sbb adc ss adc out insl and mov ja xchg pop pop adc push enter mov or add sbb add ds adc lahf in mov pop js adc int3 inc lods cmc cmp xchg repz pop mov fcoml test adc stos js xorl xor (bad) push sbb add flds mov cmp jne xchg or mov popf les jbe enter fistpl or dec test fdiv add int3 push adc jnp cmpsl iret jge pushf adc add lret (bad) sbb rcll (bad) xchg inc xor jo jns adc dec adc iret lahf mov adc into xor dec (bad) ret loope daa scas mov rolb fdivr inc adc mov adc call clc mov (bad) adc inc aas cmp adc mov mov inc sub jne imul xchg pop insb out sub or adc inc jl mov cs xchg sub adc cwtl pop adc hlt xchg pop pop jecxz adc stos outsb out sbb adc mov out dec xchg int mov mov insb push and int xor or arpl adc xlat push xchg dec xor adc inc aam cmp adc cltd adc mov dec mov jg es ret inc pop cmp movsl cmp js subl out out jb add jmp bound push call adc scas push jge jmp push push pop dec or mov pop in fwait or add je dec mov mov adc stc sub jo mov outsb mov xchg dec mov daa dec into movlps xor or adc cmc loope cltd push inc mov or out lcall pop and add in cmp stc cmp lea mov dec lret add adc push adc ds mov adc jp out lods add sub push aam cwtl daa fisub (bad) je rcrb les sub pop fcoml adc jmp push pop dec xchg aam or mov inc adc or jo adc push mov fcmovbe aam sbb in lcall pushf aas outsb cwtl orb pusha jl pop jecxz adc stos or sub cmc add xor adc mov decl dec dec jge or and into and adc jmp repnz out addr16 (bad) lods mov mov in ret (bad) iret adc andb xchg leave adc pop sub nop adc dec add jle loop xchg jnp das or add pop stc push mov xor inc inc sbb push mov fsubrl inc scas in mov mov popf push jb mov into test stos movups add push add adc dec jo xor icebp mov mov (bad) jne adc jle pop lea mov popf push mov ret add adc cmp mov adc pop shrb sbb add cmp repz mov mov sub inc adc jge push dec addr16 jle into out cmpsl imul jb icebp and jae add or cwtl pop adc cli rorb lret mov adcb or xchg adc pop (bad) out je sbb aad or pop adc cmp adc es or gs xchg mov mov repnz ss loope hlt adc lods sbb lret mov push call sub in pop lcall fidivl inc rcll ljmp aad dec jle nop enter adc mov lds dec adc sbb mov add adc inc test imul add fwait imul (bad) jb pop jbe mov lahf sub inc pop adc pusha adc (bad) mov jno (bad) cmp adc mov push inc xchg movsl pop in cmp push enter pop inc add repz jecxz leave mov mov xchg mov inc inc adc call cmp jae adc rcrl pop int and (bad) or jno shr cmp lcall in adc sub xor adc mov (bad) fisub je leave or push std or push sbb adc jbe or push mov int3 push fimull cld cmpb cs pop jecxz sbb fcoms mov xor adc pop adcl sbb push push inc jl xor aam (bad) and repnz xchg sub addb mov loop,pn or inc cmp mov movsl (bad) rclb push clc pop mov inc mov ss adc (bad) mov cs ret in adc dec lcall xchg outsl adc loope mov cmp dec pop clc stos mov xlat mov fmul pop or fcoml inc cmp andb fild xchg jmp movsl fcoms add pop fs mov xchg int3 push push adc subl daa adc arpl jno lods cltd adc add sbb mov loopne aas dec aam adc fidivl sahf in cld adc outsb pop add ficom pop nop and pushf mov or es xchg jmp outsb sbb inc cwtl aad adc mov outsl jl outsb test enter in inc adc dec xchg out mov test and lahf mov loop adc in in sub repz push (bad) mov jo mov add sub and sub mov dec xchg xchg push xor fcompl xor test push inc cmp mov les mov (bad) jne outsb lret adc jbe pushf jno push out adc pop jns xor adc xchg sub adc jae and pop loope jb in push paddusw xchg mov add outsb lret adc mov stos adc xchg call mov (bad) std sbb (bad) clc fsts aas gs cs mov loopne mov ds mov test mov or mov jle jnp mov add adc imul enter inc cwtl sahf adc mov adc hlt mov xchg sub adc cmp push adc push sbb outsb sti adc insl xchg push sbb and adc dec lahf ss jb fildl (bad) mov sub pusha inc idivb adc xchg dec mov repz cwtl add or sbb inc jl xor mov popf or add pushf mov sbb adc xchg pop push inc and sarl and and adc sub out iret cld pop jge adc push (bad) mov adc adc sub decl shrl repnz add adc adc ss (bad) movsl outsl call js pop push mov mov pop adc dec mov fdiv in mov sbb rorb ja pop (bad) add adc xor mov sbb dec mov fwait rorb push divl add jnp adc xor call adc xchg dec rcll adc dec cwtl enter jno insb mov jae lods adc jg aas sub jnp out xchg ja je push push cmp test (bad) and scas lret ret test jg sbb pop pushf adc in cmp ds pusha divb imul nop adc jmp xor ljmp inc (bad) adc notl ljmp or xchg adc insb push cmpsb and clc cwtl adc sub les (bad) call mov int3 roll fucomp add mov sbb dec outsb sub inc fistp sbb ds rcrl repz adc mov fistl add push push mov and mov mov push mov ret push push lods pushf paddd inc jp mov mov ret dec adc call int3 jne sahf mov mov inc ja or lcall in mov xor cmpsl iret (bad) pushf sub xchg mov mov adc or sti mov xchg inc dec shrl in jnp loope mov sbb repnz push ficomp pushf rclb sbb (bad) repz mov add dec mov xchg xor mov adc aaa pop rcll mov push xchg xchg cmpsb sbb pop mov lods jl daa mov insb xchg adc ljmp push lods lea and mov xchg push fnstcw pop mov andl sbb ljmp mov and aad js add push setnp xor ja jnp sub ljmp mov cltd sub push adc push and lcall jno fcom jecxz scas ret mov popf adc jge hlt adc inc sahf sbb sbbl incl sub or or iret fldcw rep jmp mov push xchg pop xchg jns call jle push adc movl fs mov jnp stos ljmp push ja xor and push dec jns push add or or inc adc sbb adc jecxz push adc sbb or and cmpsl adc inc push movsl cmp jnp icebp and xlat adc (bad) repnz ljmp mov das das rorb popf xor cmp gs add sub fwait xor iret xor aas shlb mov xchg adc test fprem1 add ret repz rcrb xchg cwtl cmpb dec cmc inc stos pop adc aaa mov jno push mov or mov popf or fsub sub mov iret push cld cmpsl add pop lods cs enter leave test adc int3 test adc xor rcrl lret xchg push shrb adc mov notl aam lret xor imul add pop add adc adc mov adc push and fsubl cmpsb out mov add lods push pusha pop dec sub mov psadbw jmp xor int3 xlat mov out cs lds in pop adc push mulb adc dec inc test and jno and mov out adc mov pop adc push xor test pushf lret and sti mov sub lret mov push into jne add adc imul rorb pop mov fisttpl or push sbb pusha sbb sbb dec mov push pop inc cmp adc cld imul ja mov adc push add shrb mov notl leave adc sub cmp sbb repz sub jecxz arpl adc mov xorl insl rorb jno mov aaa popf inc adc dec (bad) adc push arpl mov push bound xorl adc insl push int3 jge fbstp and sub js jnp lds mov mov (bad) outsl add sbb and or cmp xorl mov adc lahf xchg sbb or pop xchg mov jl mov pop push mov pop jmp orb pop push or iret xchg xchg mov push mov (bad) xor insl mov movsl cmpsl mov pusha adc add pop xchg ljmp push and sub dec mov add mov adc pop lds data16 xor mov fwait stc pop or lcall loope push or cmp call mov aad adc push cmp adc sub cvtpi2ps push adc jle outsb add (bad) jp icebp mov mov sarl cmp adc jecxz cmpsb cmp adc jl pop mov repz mov jae lret cmp dec xor sub popa cwtl shr aaa jne dec mov push adc out (bad) hlt pop xor and xchg loope xchg sbb je push and adc cmp or sarb (bad) or inc pop xor (bad) loope mov or mov sbb hlt std xchg mov fildl and insl jl in xchg adc data16 mov out imul adc (bad) and negb pop pushf xchg scas in mov push cmpsb add shrl pop hlt aam imul adc xchg fs push (bad) sbb sbb mov and mov loop (bad) hlt add adc adc mov or jg test adc insl aaa inc adc or and push cmpsb inc (bad) jno xchg clc dec add scas shlb adc es ljmp lods lods inc adc cmpsb jmp rorl cmp or mov dec mov stos fidivr xor cmp test cwtl repnz mov and jbe adc loope sbb (bad) rcll popa cmpsb data16 add add fldl adc or outsb add jo leave fcomip and jb sub cmp mov cmpsl ret stos in cmc (bad) aas add mov cld stc insb cmpsb lock mov add dec xchg repz mov aaa dec or test adc stos xchg cmpsl lods ret insb out aam std add jb xchg ja adc icebp and mov add scas rclb mov lods in mov sbb (bad) popf cmc stos pop fisttpl imul pop dec rcll xlat adc out fcoml aam gs pop and cmpsb sub xchg cmc (bad) mov in inc dec xchg aaa (bad) mov cli cmp pop xchg test sub add (bad) xor pop add mov cld dec adc dec lods sub scas pop adc and adc mov fstl stos jge adc add out adc inc mov arpl (bad) int pop jmp jb add (bad) xor mov push int adc push sbb lods pusha pop or push adc lods mov mov int sbb lret pop pop ret addb rcrl adc mov or jmp push dec push (bad) mov fisub xor mov mov add enter jno xchg xrelease ds mov mov and rcll shrb jl dec xor sbb adc adc xor leave mov mov sbb push das adc sti and lock sub sbb mov nop sub aas add cmpsl repnz inc mov in in loop pop sbb cmp inc lds xor adc adc xchg push xor jmp stos dec in xor scas jle jne mov cmpsb mov adc into out xchg imul outsb ret (bad) repz jno lds sbb jnp icebp adc mov jecxz into js adc test push adc fldt lods (bad) sbb repz leave adc add lock sahf inc jbe push ret push nop push dec aam xor pop out and daa add mov sub iret jge push notl mov mov jb pop je (bad) pop add or mov and adc adc cmp mov adc xor les add mov sbbl cld push adc cwtl lcall xchg and scas cmp lock or sub sub xchg mov ds arpl pop lret add test fnstenv and lea and inc mov add mov push adc fstpl mov adc in stos mov mov bound add add xchg mov jmp cmp sahf ja adc jle xchg sbb push rclb adc add lds sub push adc cmp mov (bad) mov xor adc cltd xlat pushf push jle push xor fcmovu push adc xchg mov pop xchg inc pop mov repnz pop movsb and (bad) pop (bad) stc repnz cltd xchg mov (bad) pop movl cmpsl (bad) lock ficom repz lods dec arpl ljmp and lock sahf enter bound add xor push dec jno and mov or and jne mov cmc sub push bound xchg loopne ds mov adc scas imul adc inc mov adc into xchg push jp (bad) aas fisttpll dec xor (bad) push inc cwtl or mov adc dec sahf jae pushl adc fildl jmp push sub addr16 sub or stos cmp popf inc in leave repz dec aas cmp ss pusha adc xor cmc stos cmp std out cwtl leave insb or cmp or adc mov sbb aaa movsb push mov mov push mov xor adc out sbb mov hlt loop (bad) inc adc xchg cs mov dec push nop flds sbb inc sbb adc cmpsl leave dec ss shr je sub cltd inc out dec adc push xchg add lods jbe xor (bad) ret adc ja popf jbe into out adc inc (bad) (bad) xchg adc (bad) xor cmp jae sub push loope mov fwait sbb pop cmp pop ret adc adc leave xchg push xchg xchg mov mov test stc mov stos add ds (bad) (bad) je add int3 push pushf xchg iret mov xor pop or mov out cmp (bad) sub shlb jle push push fwait mov add out or xchg adc jbe pop test push xchg adc cltd cwtl fdivl xchg add insb repz jp pop dec xorps insb push dec mov adc xchg jge push addr16 (bad) data16 fcompp adc nop outsl cld dec les adc mov sti xchg xor lcall inc mov sti pop pop or imul sub xor scas cmp cmp popf jmp ds sti push (bad) mov push lods test push add push test sub ret or cmc rolb or or or dec fisttpl adc add cmp fwait mov xchg paddsb into jae fdivs jno,pn mov xchg pop rcrb inc clc int out lea (bad) into jle and jl mov repz xchg or aad cwtl sbb pop lahf pop xchg out addl and fwait ja aam adc pusha and mov mov and sbb mov out adc mov lods inc inc dec rcr push fisttp addr16 mov int mov mov shlb les add fstps push ds mov add adc (bad) lret enter std cmp fimul cmp gs jnp fwait nop adc fsubrl cmp gs mov or adc push mov (bad) out adc add sub in ds adc mov mov loopne xlat repz dec ret js lods subl jmp cmp (bad) scas fimul add arpl xlat jl and xchg sub in aad inc sbb insl out adc xor adc xlat mov hlt subl addr16 dec adc sbb rcl and mov enter (bad) adc data16 int adc jle xor adc or mov adc add lahf push jecxz into (bad) repnz gs adc jno cli push or xchg dec in cs negl mov mov mov sub fsubp or bnd ds imul inc stos arpl dec mov jmp adc mov rol sbb or and adc ret shrb adc lret mov outsl enter aaa xchg (bad) in gs adc jle jge dec and adc jp call adc inc xchg insl mov sbb sbb jmp xchg call adc and in je adcl aad (bad) adc and adcb loopne imul repz aam dec sub imul in or cmp stc sbb sti out mov popa jae lds pop movsb adc je je mov sub jmp fwait cld ds cmp jae jmp jne (bad) jecxz arpl js xchg mov or or outsl mov inc (bad) repz xchg mov adc cwtl cmc mov push inc mov adc jns sbb out hlt jmp adc xchg daa shlb adc fisttpl jg loope dec adc clc fiaddl rolb add movlps mov xchg mov std jae adc sub mov aam mov pop jnp cmp pop add push test xlat adc dec cmp mov cltd adc adc leave or pop daa adc add jae not mov mov and add jmp adc cmp adc lret add and xchg repz dec adc inc dec (bad) xor cmp gs adc roll std mov adc (bad) or mov push adc xchg and mov lret dec hlt or push std sbbl pop cltd or popf push pop xor or pop adc sbb aas mov adc shl icebp aam ss xchg dec dec aad cmp adc and jb inc pushf hlt jne dec je adc fs out xor clc cld jbe pusha notb cmpsb das push xor push mov fstps cmp pop inc xorl adc mov ror repz cli pop cmpsb mov inc mov mov dec es ret pop xor sub mov stos push out sub or xor jmp cld adc pop sbb pushl mov add adc hlt jg repz and stos out or aad add imul inc mov adc mov int adc mov and dec stos jns insl je sbb (bad) or adc fcmovne mov cld pop shll loopne and mov xor fcmovbe sbb mov or test adc sahf rolb adc movsl outsb pop jle dec xchg sbb adc (bad) mov push xor hlt add ret and std dec mov jnp jne,pn aad sahf pop or stos loopne add pop (bad) and adc xor int xchg jge mov sub jl fs pop push xor and add jno (bad) pushf mov mov cmc mov imul (bad) int test sbb sbb dec push arpl mov stos std mov in push xchg adc pop push jns sahf mov mov hlt adc stos inc incb stc jp pop cs movsl lret push loop dec inc in push or sub sbb fst (bad) xor mov inc orb jne sbb repz fs push mov hlt xor mov out dec adc outsb mov ss stos inc scas adc ds xchg xchg leave pop adc je cld dec mov and sub or cs dec mov adc xchg repz sub mov repnz div ds int into or adc cmpsl cmp lahf arpl rorb rcll and jmp arpl push sar push inc adc les rcl jbe mov xchg and inc adc pusha mov adc mov adc leave and xchg sbb repnz mov pushf xchg nop push xchg or je fisttp sub cmp cltd xchg xchg fiadd gs in cmc and int3 or push ja adc sbb adc pop mov gs push or rol jle adc iret sub lret pushf test clc je andl loopne ficom sub lods mov adc and cmpsl lds mov jae xchg inc or dec lods adc scas mov inc push and mov pop mov fstl push jns jae dec adc add adc test mov xchg add jp rcl adc cmp push xchg daa mov loopne lret mov (bad) aaa push push xor push call jecxz dec lods stc dec pop mov inc sub xchg add popf inc imul xchg cld ficoml sbb push xor push stos adc jno adc push jbe addr16 call pop add (bad) je sub movsb cmp add xor imul mov adc daa aam hlt cld rcll fdivl cmp (bad) jbe push adc mov mov lahf mov pop push dec pop arpl outsl jl lret sbb fildl dec int push xchg cld adc and int3 xor mov repnz cmp divps or mov mov aas add push sbb cmc xchg adc sbb int3 adc jmp arpl mov cmp xchg frstor fistl xchg adc stos (bad) jl je inc aad add pop adc ficompl push repz stos lods aaa cmp mov mov adc or test ja mov adc (bad) loopne mov mov ret cmpsl lock out fwait adc push xchg adc cmp (bad) jo in lods push sub mov mov je pop outsb fcompl inc pop aaa cmovge ds dec ficomp adc jne push nop lcall adc inc sarb push pop adc roll jle add adc or pop push inc mov pop or fadds pop cmp hlt mov call clc mov and pop adc dec mov sub push jge mov (bad) jo adc insb inc adc mov int3 mov mov dec sbb nop xchg (bad) aam sarl dec push adc mov lret adc pop or int3 adc into xchg dec adc add test arpl sbb jno in sbb jge repz leave xchg addr16 out jnp adc arpl jno push test adc jp hlt fdivs into jge pop adc jle stos mov ja add jne (bad) sbb lea cmc mov mov and repnz mov cmc sbb mov adc mov xor or ds icebp or cmp mov loopne movlps mov lods mov ror jae push mov jmp mov mov cmc and jnp movsl mov or pop imul adc hlt or mov je fsts jo mov sahf inc (bad) jnp hlt mov inc sub icebp xchg sub cmp into loopne adc mov test mov pop rcrb fldenv into aad lcall or lret adc cmp xchg xor cmp nop dec ss stos push jp (bad) adc call clc aad adc test push (bad) fsubs (bad) or xchg repz jns mov repz dec out push push or mov adc fildll fnsave push jmp repnz add movsl adc adc dec adc push or lock mov jle jbe fsubs fs pusha push int3 dec aam dec push pop mov jl mov insl xchg mov pop (bad) xor aaa lock inc cmp adc mov inc cmpsb sbb adc (bad) pop mov inc movsb je xchg sahf xor lea mov push stos pushf adc mov xorl aad mov push jns repz add cmp mov xor or (bad) mov aas lea xchg add adc mov test pop add (bad) arpl pop adc imul jb or negb mov mov add push adc jg orb and adc adc sub jbe out sub scas cld cmpsb fwait repz stos adc sti outsl fmull (bad) adc pop fsts mov or xor fsubs rcll mov ret push mov mov repnz ret adc cmp pop adc jecxz sub sub adc and mov sbb aas inc jge cld push je mov stos lcall sbb sahf lea dec sub (bad) enter xchg add push mov fwait push and jl mov lahf ret push mov adc fdivp das call xchg sub pop mov cmp mov mov repz mov mov (bad) adc in pushf push rclb mov scas mov pop jmp pop fsubs addl pop adc lahf (bad) int add das adc inc push add xor dec mov fwait pop ljmp cmpl mov aad or mov jmp icebp adc xor add sbb jmp rclb sahf xor push out mov pop lds or inc je pop lret pushw adc les aad mov and std jle gs push adc dec and daa mov inc sub test jo xchg xor mov aam out mov adcl popa jbe jns jecxz outsl dec cmc fs mov adc adc pop lret adc iret mov sbb mov (bad) xlat sbb in cmp jae mov (bad) jns repnz (bad) cmp and dec cmc pop lock xor mov rcll pop call push xchg scas xor add or dec push fwait cmp scas mov aas outsl mov pop test sub adc mov lods and add repz pop es xchg dec sbb dec je lcall addr16 mov mov es push lahf or mov dec mov dec sub aas cmp add pushl pusha aaa (bad) add int adc xor jnp or ficoml enter sbb mov jge jnp or xchg jne sub sbb cmp sbb pop adc data16 mov ss call je jo mov insb or mov mov cs mov xchg push lret shrb decl aad mov inc loop hlt sbb add and jbe sbb pop dec cmp pop xchg dec and inc arpl (bad) dec sbb mov xor mov lods dec sbb and jbe xchg and push arpl data16 xadd push sahf (bad) adc (bad) xor enter jno decl cwtl and pop or and adc mov jno imul in push pop xorb mov lods cwtl add and cld mov adc lcallw lods lock cmp (bad) cwtl jnp adc scas sbb mov pusha or ret ss decb pop add pushf fsts icebp cltd xorl xor neg (bad) aam imul call sbb xor xchg cmc jecxz add mov and xchg push imul leave int ret and xchg adc lods test or imul cmp push or ficom adc mov sub movsl sub dec aad repz inc inc ret dec maxps in mov pop adc mov xchg pop sbb jnp dec sbb xor rcrb push popa inc jne xor mov xor fcoms sbb cmp dec ds fsubrp fildll or comiss rorl jno lods jecxz pop lods mov sbb fnstsw cltd stos or xor inc loope aas setno push ds push cmp sub mov or (bad) mov movsl push xchg or mov call and or push jg test adc popf inc std int ret cmp ljmp lods xchg add mov add dec adc adc loope nop add adc mov mov adc rcrl adc (bad) mov shr mov in add adc xchg pop mov lea decb aad adc call (bad) mov stos sbb add outsb sbb out mov lods insb cmp mov adc cmp repnz push dec adc repz les pop out sarb sub movsl jbe ljmp cmc les int adc jmp mov and mov mov push dec aam push sub leave or loop sbb jno faddl test add add rcll fdivrs (bad) xor adc aaa and pop add add xor adc rclb push clc fstl xchg mov (bad) bound outsb lock mov lods adc push cmp stos insb (bad) dec nop rorb lcall add cmp sbb jns push or xor stos jo fwait rcrb gs adc cli mov pusha mulb mov pop jnp push add adc add mov jecxz int3 adc (bad) adc daa movb mov adc mov movsb es fsubl jne sub mov jae ja add cmc push data16 or lods out mov int3 mov aas sub sbb jae adc or pop dec (bad) inc add xchg jno add jl push push mov iret add decl test adc sub adc cmc pop in jmp jbe cmpsb mov inc adc pop and jmp mov adc mov adc sbb jnp cmp adc (bad) mov lahf mov jp shlb daa xor sub add mov push sbb pop (bad) in xor adc add cmp adc js,pn int (bad) jle roll add inc add fmull adc mov loopne into sub adc adc out shl clc div jne fstl out je (bad) gs xchg jecxz repz or push loop nop repnz fsub jp js into mov or stos jb adc sti add mov int3 (bad) adc xlat stc cs outsb inc ret or dec add dec xchg enter xchg data16 xlat and adc int xor lcall das movsb adc int3 dec mov int jle mov iret or mov jecxz add sbb cmp fisubrl pusha les clc mov test into or jp cltd sub dec push jge push ficom ret je mov scas fnstsw repnz adc sub or packssdw mov add mov adc xorl jnp negl (bad) cli int3 pop mov dec jmp aaa sub jecxz js xor stos mov add pop lods repz (bad) hlt pop push mov adc dec or adc jo and ds or outsl cmpsb roll xlat jbe xor in mov rcr dec cltd xchg stos inc push sbb (bad) adc in or sarl add lock leave xlat inc mov adc mov cmp ss mov pushf mov mov xor xorl dec or mov add adc jecxz lea and xchg pop cmp iret pop add mov fnstsw movsl ja loope dec mov cwtl mov arpl (bad) sbb jae fs icebp cmp mov enter and das (bad) call cmc adc jbe cmp pop push clc xor adc hlt (bad) dec adc sbb rcll lds xchg mov xchg add ficompl or ja lahf andb mov fdiv add push in insl pop inc xor in fisttpll adc xchg loopne sbb xchg dec push mov or sti add xor js or popa scas dec cmp loop adc stos mov adc or aas inc lcall in xor mov xchg push cmp inc jg not pop imul cli xchg adc dec sbbb sub xchg mov rorl mov dec xor movl xchg cs jge out or push jae xchg les sub popf lahf mov sbb sar mov (bad) cmp sbb cmp mov ljmp imul lcall adc xor xchg cmp fwait lret or pushf pop int mov xor xchg add mov and addr16 (bad) ja in cwtl arpl mov cli inc pop hlt mov (bad) push xchg xor mov addr16 adc mov xchg adc test pop adc js pop icebp sti mov adc mov cmp fcomps jns lea mov mov jo pop push mov repz dec sbb cmc call loop add jl xchg pop adc cmp push xor adc sub inc sahf xlat popf add ja pop pushfw xchg sub daa pop out sub mov or xor jl jmp lock pusha adcl dec or xor sbb dec jno outsl add aad sub push dec add mov cmp pusha add add pop xchg shlb add xor pushf inc mov mov or push dec sub enter mov jl xchg mov adc pop pop pop rol mov loopne imul rcll rclb xchg jge mov adc pop (bad) push push dec mov or clc out dec ret adc cmp add clc push mov jle rcrb js fwait or (bad) dec lcall stos push mov push ret iret cmp push (bad) adcb cmpsl and js or inc jecxz or movsb popa (bad) mov and dec aad xor sub mov (bad) xor mov push mov pusha adc dec cmp push das adc pop cli pop scas rol cmp dec je jo mov push xchg gs shrl add fs cmp je add adc leave cmp adc cmc fstpl (bad) pop rcll jecxz mov xchg test les scas call pop sub jmp jo xorb xchg mov mov sahf into int3 adc lds scas ss push into add or adc mov daa out adc sub mov add outsl mov sbb movaps adc xchg aas xlat je stc dec cld cmp jne int repz lea xor test movsl pushf repz fiadd mov or cmpsl ror mov in and push xchg loop (bad) mov pop (bad) testl je arpl xchg fcmovu add adc push push mov add cs adc in adc dec lock out or into sbb lahf mov pop sub fstl adc mov mov pusha (bad) repz and pop in add xchg mov push mov dec add sbb add jle test lds ja and push add (bad) xor (bad) fist jg xchg cmp jp or nop xor push sbb (bad) iret fdivs inc inc rcll (bad) jae pop sub adc repz test and xchg dec xor in or popa aaa xchg imulb xor in inc rolb mov xor js (bad) (bad) pushf push adc popf in mov adc mov sub cmp adc loopne ja roll mov pop push jns sti add cmpsb outsb xchg mov xor and loopne stos lods mov (bad) ficom mov fadds movsb pop adc xor repz sbb and ud2 pop mov inc fistpl bound cli xor mov add mov adc xor pop popa orl jecxz movsl inc and mov push jg pop adc cld adc mov push leave mov iret sub and xchg dec in jp add into test dec mov test mov jmp and adc add (bad) nop xchg in push adc imul mov push es dec test adc mov fcomi jge fld lds or adc inc leave loopne inc fildl cmpsl fnop xor or mov and fsubrs push test jmp fwait repnz mov or push adc fcoml mov movsb mov lahf mov roll push repnz sbb pop mov leave xchg repz pop test jb xlat lcall mov scas or hlt add add pop adc inc sub rcr jnp sbb dec aam jo push pop fucom mov add pop adc int3 (bad) mov xchg and (bad) leave stos xor fsubl xlat mov adc xchg (bad) xchg leave adc gs inc lret push adc sub or int jmp xlat outsl cld insb jmp adc cmp test movsb pop call jno jmp add adc icebp jnp dec adc (bad) adc jb pop pushf push adc out imul adc cmc mov es adc out push mov jo adc (bad) cmp or mov insb inc outsb popa or pop lahf push or call push adc dec repz scas lahf xor lods cmpb test inc xor jnp fstl repz imul cmp lahf call push xchg adc cwtl popf pop push fist lods cmp fisttpl in mov (bad) ja js pop fistp repz and inc add ljmp mov xchg dec adc xor and loope cmp pop or adc in aam jmp sub jle adc xchg dec sahf negl xchg xor or dec jle adc jecxz inc adc sbb dec insl lahf fiadd jge jl cmovnp bound push adc (bad) das stos mov mov adc rcr sub adc jnp lods mov cmp gs adc movl push sbb pop xchg dec push (bad) rclb push dec and xor cmp dec pop add mov sbb and cwtl or les std add jbe mov das fcompl (bad) sbb cmc xor js cmp dec stos adc lock pop hlt nop and inc xchg dec dec jns aas (bad) pop sbb mov jl jp or xlat xor jbe pop jnp int sbb jl push stos cltd mov imul mov lea mov aaa out mov fcoms jbe mov adc insb or repz incb push mov call loope divb data16 push adc and adc cmp mov pop or into (bad) je sti adc cmpb jb lret jne (bad) call xor mov out jle sub aam push jno divl insb test mov aam adc or mov scas js pop pop pusha mov movsl jle mov and push mov out ret xor aaa dec (bad) jno imul or push sarl mov adcb sub xchg sbb adc sahf out xchg xor dec jno mov cmc fildl test cwtl push mov xor mov mov push fwait std push adc jp sub vpmacssdd test mov fld inc push pusha int3 daa jle mov jg mov repz mov xrelease xchg ja jmp nop bound sbb sub cmp sub dec adc inc jns fstpl jnp gs mov push mov xrelease repz sbb xchg xor repz fidivr pop (bad) mov cmp outsl or inc adc je (bad) xor xor jo mov cltd lcall mov and mov aam lods scas or les mov add scas xchg dec (bad) mov nop cmp add repnz mov jmp lcall push imul jp cmpsb (bad) mov dec iret imull push scas adc dec add mov adc faddl adc and inc adc in or adc mov lcall sub sub jmp adc test and xlat fs pop aad mov shll mov cmp pop mov mull js pop cmp mov lods jno add add test adc outsl movsl mov cli nop cmp xchg mov mov and (bad) push lret ficom adc aad mov xchg xorb cld add movsl push adc test scas pusha into out or out lcall jmp xor call insb add push add outsl arpl mov adc lahf push (bad) or adc aas std xor inc adc jg cld mov lret add dec adc sbbb out adc lods loope mov push pop gs pop inc (bad) fldl std add (bad) push sbb xor dec packssdw adc add popa xor aaa add pop cs mov mov inc xchg mov cmp inc jo and sub mov into je popa mov mov fisubr push adc (bad) mov mov insl jle adcl or push sbb mov add cmp sub sti adc xor jne sbb push xor adc ret add inc adc in xchg jne fwait adc xor adc push std pop cmp adc mov jecxz add inc adc ror out scas pop mov jo bound inc xchg roll push mov mov outsb ss pop mov fcmovu add call push sub sbb adc leave (bad) in adc jae add (bad) insb repz xchg sti es adc out jp stos cmc int cltd cmpsb or das out adc pop clc xchg test lret stc fisubrl push cmp jg add test or adcl (bad) jno jle xchg and andl or movsb adc cwtl or stc test movb push in cmp jae mov insb pop loop add mov jmp repnz sbb mov add adc and negl pop add adc (bad) push lcall in jae inc mov jb adc xchg pop cs inc mov stc mov mov test and adc pop adcl (bad) jecxz adc adc sbb stos adc outsl adc and adc push fiadd mov (bad) gs loop xchg adc sbb add out mov dec sub mov cmpsb inc adc leave mov pop or dec pusha popf fucompp mov add jbe stc int3 mov or mov inc adc scas mov insl adc arpl outsb sbb sub aad loopne ja repnz int3 out and adc fcompl xchg in pop cmp not movl in lods adc adc inc aaa dec mov xchg pop test xor fildl dec add sti xor adc mov aam mov dec int3 xchg in lods dec adc bound das movsb leave jne sub pop xchg push rolb sbb fwait sub mov test sarl push pushf dec push jno dec or mov adc rclb jecxz insb out mov jo pop dec add inc repnz or adc loopne or push lods out fdivrs pop divl adc mov and stos mov push gs mov subb pusha dec adc mov psubusb mov cmp push pop bnd outsl dec inc mov fstps xchg xor push ss add lds adc xor mov jbe xor movsl dec movsb push fisubl jb add sbb stc cmpsl xor push xchg jo cmp mov mov adc mov adc outsl (bad) adc mov cmc adc pop ds repnz push jle add jne pushf sub add adc and cld fsts xchg stos fs mov push or outsl adc inc jg pop add sbb fadds call mov or ja push (bad) xchg jle test add dec mov mov sbb cwtl leave fcomps sbb mov inc jne pop xor mov test pop pushf dec adc xchg nop imul sbb aas scas mov sbb xor lahf stc xor imul std test jb insl movsb aas adc shll adc lds adcl cli xchg out out push nop divl push and or mov prefetcht0 repz xchg and or and mov push inc imul (bad) in clc out cld mov lcall mov mov fmull adc or bound or pop mov push and repz cmp sub ja pushf test adc movsb gs addr16 sbb les aam ret cmp sub push inc cld out cli inc dec sbb sub mov je fistl gs or adc jb sbb insb mov mov test dec std daa adc lods jg adc gs push xchg sbb adc jp add lods mov jg dec adcl in nop pusha sub lret pop inc ret fcmovnbe or xchg es adc stos push inc dec mov test push sbb pop fidivl adc (bad) push out test adc xchg lcall inc inc add insl mov repnz sbb push sbb xchg out aad mov xchg sub repz mov dec notl leave jle sbb test adc jp adc jecxz xchg adc pop out add mov mov scas test aas mov shl adc (bad) out xchg xchg xor cs mov pushf ja rcll mov add mov xor xchg jae es in inc rcrl (bad) or xor (bad) mov rcrb xchg movsb addr16 pop and dec lods pop fiaddl pop cmp out xor mov pusha jl enter (bad) int3 (bad) mov divb push or pop stos fisttpll sub adc into imul mov pop add jge pop rcrb jg adc repz mov push xor mov pushf cmp shlb enter adc sub repnz xchg mov and scas loope xchg pop or movsb nop xor ljmp push fst mov jp mov mov adc inc adc mov lahf psllw adc cmpl ret aad adc mov lods dec mov sarb cmp mov out mov dec inc or (bad) repz arpl mov in adc fcomps lret fs pusha add movb mov mov adc push stc aam mov adc ja pop popf sbb aaa enter jae cmpsl popf movsl adc jmp cmp adc adc insl mov adc dec add lahf lock or aad adc sbb mov adc cmc sbb mov mov xchg mov arpl bound sbb mov pusha out adc cli pushf std dec test fldt mov cmp cld lret pop add mov adc (bad) ljmp pop xchg rorl inc adc jecxz jb pusha mov hlt or inc pop xor or lods cwtl adc inc popa adc aaa push rclb insl shl sbb ja xchg aad and enter pop inc (bad) push repz xchg mov xor mov lahf loopne pop and lcall xlat popa jge adc ljmp pop enter mov sub mov xor stos stos xor outsl adc xchg cmp jmp (bad) out das test (bad) xor or (bad) les adc out aam adc sub adc pop dec ficoml pop or sub aaa loop lahf pop aad sub repnz cmpsb adc add out fdivr mov cs leave in in mov pushf xchg lock push popa adc insb ds daa sti lcall insb daa add hlt les push inc xlat sti mov nop enter leave cmp adc stos push dec pop ja,pt adc faddl outsb inc mov xlat cmpsl insb movsl jne push je sbb adc push pop cmp adc popl xchg and adc jb imul es mov and or in sbb in movsl cmc fistpll cmp or (bad) add cltd (bad) notb push in ja test dec adc fmull dec lret ds push mov loop insl repz scas pop and out mov xor xchg mov push pop sub lock push ja jo subb sbb cmp (bad) jb hlt xchg mov dec out inc jecxz sbb inc std jno fwait jp loopne (bad) xchg pop ds orl repz xor mov jp pop cmp inc mov adc test xor sub arpl shl rcrl mov adc cs mov xor dec stc das repz pop mov popf push adc push and clc inc mov push mov pusha adc cmp mov inc and pop or shll movsl loopne std adc sub fcoms cmpsl fnstenv add test xchg inc ljmp mov adc fs icebp (bad) or cmp adc mov cmp xlat cmp or or adc lret add mov inc push add std and aaa add cmp adc scas loopne addr16 fdivrs mov adc loopne fstps cs or mov and leave dec in dec insb adc sbb movsb test sub outsl dec push and rcl inc test push jecxz sahf (bad) xchg jne insl or adc or outsl push repnz fwait movsl call xor lahf pop rclb (bad) and xor mov js mov sub nop ds pop mov push aas lea subl adc pusha test push and or push in push sub hlt lcall lods pop (bad) adc push enter mov or das or (bad) (bad) jne pop cmp fs inc mov adc mov sub lcall lret pop jns test hlt ljmp into lds and sub addr16 cs test (bad) adc sti or imul mov clts mov push fadd lods nop scas adc fimull xchg shrl mov lea jge mov push sbb adc mov cmp or or jbe push out inc stos (bad) repz dec es dec repnz andl out fs mov push mov xorb outsb cmp cmpl mov es lcall adc scas mov pop (bad) (bad) rol lods jb or insb sbb adc mov jmp adc cmpsl mov adc cmc mov ret rorb mov lods cmp jl fisubl hlt push fbstp adc cld ret mov adc cmpsb pop jb xchg mov outsl sahf add aad std leave adc cmp das ljmp adc mull cmp adc ljmp adc mov push (bad) mov push lods mov loope add add mov adc addl sub or andb fidivrl adc xchg mov sbb push cmpsl jbe mov outsl mov adc pusha (bad) jae push cmpsl ret clc cmc loopne (bad) (bad) mov cmp rcrl cld sahf data16 jo cmp inc sub repz adc jo dec jbe lock js rcll and jmp mov mov inc rolb sub in jno repz pop lcall mov xchg sbb rcll dec adc xor adc es dec lods or mov adc aas xor clc mov or and aam pop xchg shll std incb aaa fildl xor rcll push pop cld pop adc roll sub mov and insl inc pop jb pop mov pop out into pop lret xchg lock mov idivb adc insl xchg dec sti dec je pop sub sarb into xchg dec ret xor test fisubrl pushf pop orb adc lock adc mov rcll int3 sti lds stos cmpsl cld imul (bad) jae (bad) adc popf pop push iret mov mov (bad) cmp pop xor movd daa or push nop xchg cmp adc cmc or out repz and and pushf add jg inc adc sti xchg adc and mov fisttp mov ja or rol pop lds dec in jge lods shlb xchg and (bad) mov addr16 jmp sub cwtl test dec sbb push adc sbb xchg cwtl in adc aaa push cmp push adc into mov fadd dec das adc fucomi bound push in faddl (bad) adc lret pop xor insl sub or movsb mov xchg aad inc dec inc repz dec lret xor mov mov xchg (bad) dec push or push inc fstps lcall vmovlps mov mov adc mov push fist jmp mov adc xor adc xchg nop loopne inc adc mov adc pushf xor or or insl cwtl lds cmp rcll jg or cwtl mov mov mov mov push les cmp and fisttpl in adc repz (bad) fisttp pop mov add push adc mov push jmp (bad) xchg adc pushf pop shr jp xchg mov clc push dec cs push pop sti pop dec lods mov js stos inc (bad) (bad) repnz pop adc enter popa dec xchg mov jne xor sbb stc sbb xchg negl test sub loope into push xchg adc or cmp int3 inc mov inc js movhps mov adc test jne test call cmc dec adc xor sub add adc jb cmp cwtl ret leave adc adc mov adc mov loope or idivb cmp pop enter sbb aam fimul (bad) roll xor sub mov lock sbb mov popf dec jne jns lahf pop outsb subps push cwtl mov dec mov out xor push push xor mov jecxz push outsl xor sbb sbb nop push cli add adc mov push xchg pop mov sub jnp mov jl ds aad ljmp mov mov adc jae jle mov nop sbb loop imul mov or aad jno lods cs sbb test inc add jns add mov adc stos aaa jbe xchg or testl je int3 (bad) sbb out adc and (bad) sbb sarl dec dec push fldenv cld adc cmp xor movsb stc jne sbb les pop cltd push add (bad) (bad) adc add mov loopne add and xchg jae,pn aaa dec gs inc sbb shrl pusha adc out pop loopne push xor repz mov fidiv sub or sub add jnp jbe lcall dec repz pushf pop (bad) jge rolb loope sub (bad) decl test (bad) xchg lfs adc cmp jo mov icebp cmpsl cmp mov xchg dec add jb mov xchg mov test in insb ljmp cmp adc sub movsl sahf mov cld or push int3 adc scas inc aam pushf adc xor xor rcll cmp adc decb adc leave gs mov jae cmpb mov mov (bad) and rolb insl std and iret mov add (bad) add mov pop adc pop pop lods jge repz adc andb pop (bad) clc mov aas xor adc cmp adc jns adc in xchg repz mov xchg pop shrb dec inc xor sarb dec lret add in mov aas fidivrl sbb mov out pop rorb mov (bad) in imul adc insl sbb and movsb add sub mov push fstpl into je repz or cwtl add xor mov adc fs pop mov stos (bad) cli (bad) std mov mov scas sub (bad) mov jle rep dec jg popf mov adc (bad) or adc iret sbb push test fs insl pop fildll jge sub cwtl pushf popf out in pop adc adc or xchg jecxz push adc in xor je cltd inc mov ficoml aad int3 ljmp outsb cmp out sahf push ds or nop xlat stc add adc mov sub sub xor insl add sbb orb imul pop test dec (bad) mov adc jle sbb or mov add arpl xlat jle adc (bad) std adc jo cmp repz fnstenv adc frstor and les mov pop mov jno out lods add in aas daa out fisttpl in add jne xchg or aas testb mov pop cwtl mov repnz jle clc sbb cld cs mov call xlat inc adc mov and mov dec (bad) jns adc xor and mov adc sbb adc xchg stc sarl sbb repz aas test xor int3 jae inc pop mov fwait and adc xor aas inc stc ret pop push mov ficom jge push and push sub punpckhwd cwtl or subb mov add adc ljmp adc es rclb or fisttpll add or leave adc out pop adc (bad) or xor mov push test mov test mov pop mov mov adc jns push xchg adc data16 mov (bad) add adc adc daa jecxz and adc jmp mov mov dec and test jmp xor rorb cmpsb movsl inc fwait stc cmpsb adc adc mov inc jmp pop mov inc push stos hlt adc or aam cmp int push scas je jno jo adc cld lds jne push (bad) cli adc dec or (bad) mov (bad) iret jle shlb push adc adc pop test mov mov in inc sbb add das or xchg mov xor sub loop stos scas mov or fimull nop mov pop orl repz cmpsb pop xchg jg out adc js test fwait inc mov (bad) inc sbb sbb mov imul mov ret aam dec shl (bad) mov jns pop jp or and jo es clc jne xlat jge jmp mov mov adc (bad) lock jne jns push pop push and add pop fdivs sbb lret jle push nop push pop mov sbb adc pushf sbb cmp push cltd pop fimul push push jge lods shrb add adc (bad) xchg dec add inc repz adc sub mov or inc sub repnz cmp push imul adc lods jecxz (bad) push mov pop arpl faddl add sbb jecxz rclb loope popf pop push addl push jns int add jecxz mov in mov scas adc (bad) bound push adc jmp dec push repz push inc ret mov adc sub fsts adc mov out push adc sbbl push pushf xchg mov pop mov push and pop jne xor cld push repz cmp mov daa sub adc into mov adc dec push std push out cmp adc iret mov mov mov jbe pop enter adc or xchg scas call cmpl fstpl aas pop mov andb je dec jl imul sub add and loope xor icebp xlat mov and adc and fldenv jle add pop outsb mov sbb or xchg adc adc mov xchg in or (bad) repz cmpb fucompp adc ret jecxz jne aam fs jns inc ja mov xor cmp nop mov pop adc test stc add mov mov out (bad) xor mov mov std fldcw js cli ret push inc mov stos mov nop iret les jl pop or (bad) adc loope mov xor clc icebp les mov fst ds or scas xchg shlb out cld test add ror addl adc cs xor mov (bad) aas xor (bad) lock lahf mov jns inc adc fcomps adc scas pop mov pusha outsl pop jnp xor push out or adc leave push xor mov pop and inc jnp mov in sbb daa add rcll pop cmp adc adc cmpsl iret insb enter sub loop dec call cmc mov sub and out inc pop push dec aam adc aas (bad) into mov xor xchg push add adc or fbld int loop stos dec adc dec cltd add jp dec mov std inc loop sub ret jns shr xor inc rep lock mov xor mov push inc inc add (bad) jg xchg stos pop (bad) or scas and cmp stos insl jg xlat adc push fstpt test adc inc bound stos sub ret cmc sbb or adc (bad) xor xor adc lods repz pop dec sub jecxz bound mov movsb inc add adc add pop adc mov popa or mov adc lods xor jne mov jge js repz dec jnp push (bad) jmp pop adc mov out xor jno push scas adc mov mov adc cmp add mov add daa scas add repnz andb pcmpgtw lds outsb jecxz lret fwait xlat test cmp ss imul push mov sub mov jno es fisubr xor adc adc repnz xchg or inc jns and leave cmp adc ss icebp fndisi(8087 je addr16 out mov push push adc mov xchg sub adc cmp adc pop jle out jmp or inc mov xor adc cld cmp orl fist add in mov lcall stc xlat add adc or cwtl add or popa hlt gs jo imul add adc mov adc cld adc cmp repnz pop or mov or ss setno jbe pushf and adc xor rcrl shlb shlb xor xchg fsubs cwtl sub mov mov mov int3 or add pop pop add mov add movsl das mov ss lods xor out and repz xor (bad) push dec outsb adc daa xlat mov sbb push dec dec nop faddl popf mov movsl xchg add test adc lea repnz sbb adc fsubrp rcll mov dec inc adc test xor push lods pop aas int arpl lea clc push pop adcl je mov jno xchg pushf push adc push mov mov push push lds mov movsb jmp shrl or popf and mov mov addr16 adc je mov into xchg cmp (bad) jbe adc scas cmpsb inc mov mov cmpsl repnz adc iret (bad) adc mov (bad) add inc xchg adc jg sub mov mov outsb mov rclb lods enter outsl test push sbb jmp ja (bad) sbb add dec fnstenv jb sbb (bad) test out pusha mov adc cmp scas (bad) jo movsl adc iret cwtl iret rcll (bad) add pushf fadds inc adc divl roll push xorl push mov xchg push mov sbb jle adc xchg sub adc lods or ret leave shlb lret jl lds fdivl adc dec push jmp adc movsl imul sub mov fsts xchg push mov mov sub jno push xor mov arpl cmpsb jae or adc and push cmpsl mov push arpl pusha (bad) jg push imul lret jae cmpsb adc jle mov mov inc sbb push cmp xchg shr pushf cmc pop sbb adc sbb adc ficoml pop test adc xor mov adc inc fisubl aam rolb pop cmpl aad hlt cmpsl in adc cwtl mov inc (bad) popf repz lret push cmp bound stc dec aaa adc add lret xchg pop xor hlt adc pop movsl fsubl mov mov fcomi mov in xor mov pop add jecxz lret jge xor pop mov dec inc fs ret xlat jne or fcoml jnp adc push adc movsb and imul cmp adc mov out jnp or outsb mov cmp (bad) mov adc and jmp jecxz xchg push nop pslld cmp test xchg inc xlat xchg jle adc mov (bad) xor mov mov push sbb stc mov xchg (bad) repz jae xor xorl jle pop testl jecxz sarb ret pop (bad) icebp push mov (bad) adc lahf or mov adcl xor dec sbb sbb jl test sarb pop inc inc cmpsb repz cmp ja xchg push test (bad) loope mov (bad) pop adc fcmove sub sub adc inc or or mov adc mov push jl (bad) xor lret inc xlat add stos loop sbb sbb sbb repz jle ljmp pusha or sub aam ja push fwait adc xchg pusha fdivl out scas pop sub rolb xchg push mov fldl pop scas inc adc or sti xor aas (bad) lret cmpsl cmp sub xor pop push mov adc test cmpb push movzwl push cmpsb hlt or xor (bad) aaa popl adc out popf mov xor lahf lcall test sbb pop xor or iret sbb rcl into (bad) xchg repnz adc pusha cmp mov jnp fiaddl adc and (bad) aad repnz or (bad) sub sbb add sbb pop adcl add movsl repz icebp ss test out push pop mov lock in aam or xchg lods or push (bad) lock insl nop out adc (bad) and movsb (bad) or std or fmull dec in push std pop mov dec push and add inc push adc dec xlat lret xchg and fwait push jns pusha dec sub push hlt icebp enter cmovne fsubrl (bad) adc repz sarb sahf int3 dec pusha pushf adc jns mov push adc ffree sbb mov test mov (bad) xchg andl and jmp cmpsb aam adc sbb dec mov icebp push call sub test add stos xlat pop (bad) mov sub mov jns or inc or xor adc fmull and mov pop fild push jns ss icebp jecxz xor xor sbb sub cmp adc mov mov loopne sub jp orl cmpsl add dec ds and mov mov dec jge adc adc cltd in adc xchg test enter lds pusha cmp dec mov add xor or imul adc gs mov outsb mov add adc pop (bad) bound popf push adc ljmp push call iret sub imull fisubr inc or hlt out call push std pop insb je add rcrb or (bad) mov and adc (bad) mov clc dec sar out sub in push jnp ror mov sbb mov rclb pop scas sbb push push sub and push xor pop mov mov adc je cmp test adc lret jae or sbb sub nop rcrb cmp xchg stos rcll adc ljmp or or sahf push aad js loope fcmovnu adc or pop adc mov jb mov add gs arpl inc pop xor call fimull adc lcall jno jg adc or lock dec cmp aas fiadd adc leave jp xchg cmp adc pop mov dec hlt and fcomp sub repz pop sbb loopne sbb out pop cmp loop adc pop and out stos adc mov and adc xor jge,pn xchg mov into fnop es pop mov sbb paddsb fisub stc push add (bad) dec mov sbbb sbb and std int3 adc dec imul bound dec scas dec adc (bad) mov cmp or inc call adc mov ficom cmp push adc add add jae push pop cltd mov xlat unpckhps adc mov loope dec sbb movsl call cmpsl push sub loopne out or adc aad rclb mov in icebp cmpsb adc and cmp popf pop adc fsubrl sbb adc dec dec movb xor xchg mov in mov pop adc mov adc rolb adc out sub adc popf das jmp inc and push mull or add test jl lret adc and cmpsl push popf jnp pop adc or push (bad) cld mov lods sub stos repz rcl pop aas inc pop add in leave adc stos and std mov pop xchg ret xchg fnstcw in add add mov adc ret mov (bad) (bad) jno pop cmp dec sbb lods stos outsl adc inc imul fdivl adc mov adc dec push into mov inc leave enter xor xchg inc insl nop loop mov addr16 cmpsb shrb mov mov or mov fwait inc jp xor xor sbb add pop cmp stos adc inc jl mov adc nop mov and pop hlt push insl sbb xchg jno push repz je mov imul (bad) adc or cltd cmpsb fcmove repz in mov adc ljmp ficoml call push lods iret xlat mov pop mov sti adc lret js adc loopne xor fistpl jmp jg sbb mov cld fsubp ret push into cmpsl adc lds cwtl ljmp in xor mov into test adc popl jl sbb push and sub or pop sarb push adc stos test or or rclb mov xor add xchg cmp sub orps adc push push sbb adc (bad) ficom mov lcall mov inc orb xor test or sbb pop cmp test pop adc lahf scas (bad) mov fwait in cmp mov adcb adc dec xlat and sub pop mov and in adc and adc lods jb mov push movsb pop dec adc mov jecxz xchg adc les cmp jno dec jmp xchg (bad) adc jae lea ja mov pcmpgtw test jp aas sub inc push mov sarl fmulp push rol outsb adc jne sahf dec inc jae adc mov repz fsubrs mov adc push (bad) jbe sti sbb sete add (bad) inc ljmp mov push or or arpl xor out adc addl mov in pop xlat inc jno les jecxz repz sub (bad) rorl xchg mov mov adc push adc mov adc (bad) and stos or sbb outsl test repz cmp jl (bad) adc mov jmp mov sbb lds loopne and bound pop sbb hlt adc (bad) stos jp or jno xor mov mov fisttpl test push mov lcall xchg inc ljmp gs outsl lret xor mov (bad) ja and mov mov or or cmp popa lods pop adc mov sbb mov jl mov arpl movsb (bad) mov hlt int div mov call push xchg cmpsb push or xor xlat xchg adc cmp push pop mov and inc push xor mov dec jno imul cmp ljmp xor mov sbb (bad) insl fisttpll aam jg pop adc pminub imul mov adc sub out je cmp adc mov scas mov jge xchg mov add adc mov lcall xor (bad) mov daa js and xor cmp adc fs push lods mov dec lahf fsts iret jo hlt adc ret movsb xlat cmp jbe (bad) and fidivr insb xchg cmp (bad) fcomp (bad) fildll or fsts adc into js mov test das sbb adc popf les mov xchg fstl cwtl enter push push inc rcll adc aas xlat dec cs (bad) (bad) jae adc inc sbb mov xchg sbb scas xchg out roll iret mov add sbb adc addr16 adc push lds adc stos fwait push sub xor sbb mov repnz aas or xor pop push sbb sti adc xchg (bad) or or rcrl aad and adc ja fadds negb adc mov push fdiv adc stos nop mov negb test repz sbb cmp lock mov dec in mov aam fldenv hlt mov adc imul in sub decl icebp adc jno iret adc or dec pop jg mov push adc test insb js xchg mov dec (bad) repz add outsl out (bad) mov outsb xchg adc divb fsub pusha out or mov xchg push fistp js add in outsb aas add out push stos push in jl cmp dec xchg lock mov xchg sti mov sbb xchg push in test pop mov inc jbe push push pop jnp fs jecxz bound dec arpl xor jl call mov adc xchg inc lret les fmul out xchg dec adc lods xor adc fimul jns dec (bad) push xchg fcoms mov add rcl popa mov adc or adc adc jb sbb fistl in int (bad) aam dec mov in scas or xor repz jecxz sub mov mov xchg out pop jnp cmp mov loopne in ficompl mov push pop enter mov decb insb loope adc ja and rolb adc jge cmp adc or ds mov xor sbb repz movsb push repnz xchg mov mov cmp xchg xor dec pop inc pop adc int arpl xchg mov sahf jbe pop pop dec jp jo loope ret pop into sub iret scas lret fwait mov repz mov mov test adc repz and or sbb add push loop inc shlb push and int3 mov (bad) mov adc mov je xchg dec dec lahf adc roll or jl xlat cwtl scas out cli data16 xlat or lea mov lret mov (bad) (bad) fstpl arpl (bad) es adcl xchg lods lcall aam adc pushf rcll dec cmp adc lods pusha out mov hlt push dec mov fdiv adc cmpb stos rcll mov cmp call repz or mov (bad) pop cld cwtl and mov mov mov push cmpsb mov and pop adc and xchg xor adc add ja push adc adc ficoml push sbb mov mov inc jle adc cld fisubl xchg xchg pushf aam sub mov cmpl outsb out adc sahf xor adc (bad) dec xlat sbb cld mov ds dec add sub int3 jmp dec repz mov inc mov repz sub test out xor call adc cli ja lret or mov outsl push mov pop dec arpl mov popf pop pop sub sub push mov mul mov popf lods repz out rcl mov adc jae pop call loopw sbb lcall int3 pusha cmpsl int inc xchg adc bound pop outsl xor mov adc inc mov mov sbb aaa sub adc cmp cmp inc in std dec lahf dec mov pop xchg scas orb inc jno movsb jo pop in adc cmpsl jne or ljmp test (bad) jb fwait shlb add inc jg movsl sbb adcl repz ret adc jnp cld xchg out mov and jp mov xor pop adc xchg fnsave pop in sbb imul cmc mov movsb or inc add mov call pop xor (bad) cmp pop dec aam or je dec xlat push pop or fstpl mov ljmp xlat jl jmp cmpsb loopne lret icebp int3 add inc adc lea insl movsl idiv (bad) fisttpl or jns mov insb ds ljmp cmp int lods adc mov xor insl mov aaa mov repz mov cmpsl cmp add nop lcall loopne jl cmp sti push jge jg or int3 mov pusha out enter push dec and add bound adc insb loop sub or rcrl daa jecxz pop nop aam stos inc xor ds out jp inc mov add nop mov mov lahf bound or fist adc call inc shr popa sub decl pop adc mov sbb test ficoml sbb push stc cmc sbb mov add into push adc daa mov mov jl outsl movsb pop adc mov pop sbb (bad) adc in and push mov leave adc outsb into lea addr16 sarb cltd andb cli pop loope dec pop les inc inc xor aam dec xchg mov decb cmp adc add xchg out pop sbb mov inc mov shrl in test outsl mov or lock jo adc adcl mov push mov fwait adc mov mov cmp cmp arpl jecxz dec xor sbb ja add adc repz cld in insl xor push pop xchg sti xchg or adc or out xlat mov push rcl repz sub or jg iret imul loop hlt sbb adc xor xor sbb nop in cs dec mov pop loop lcall push inc add push adc inc or sbbl xchg mov int3 rcll mov add cs xchg dec push xor xchg out cmp lret out shrb mov mov or mov dec sti in mov pushf mov and in das call dec (bad) int3 push add in adc clc sbb jmp push xchg push mov test mov mov cltd mov std inc ljmp imul bound cs js jp das outsl push ret loop (bad) jnp adc lods movhlps (bad) inc das (bad) cmpsl adc (bad) mov lahf mov xor dec subl lock imul repz pop lods jnp adc stos gs pop adc bound cmp mov imul dec jge adc cmp xor loope ljmp loopne dec or mov test pushf sti mov mov or push addl adc mov lock mov imul cltd gs fildl adc shlb mov jnp adc adc (bad) aam hlt mov push pop cmp adc cwtl xor xor add dec nop test (bad) mov fcmovbe adc arpl fistpll and (bad) fcoms cmp inc aam roll in or sub mov push cmc lahf std pop xlat (bad) mov aam mov (bad) fwait xchg push xchg jg xchg pop sbb push xchg shlb insb mov pop rcll xor shr mov push mov inc add icebp xchg test add and jae rcll inc fld insb dec adc cmp je fcomps dec add fcompl repz mov in jp adc adc adc push mov adc sbb inc sub add insb fldenv sbb push lods sahf adc adc xor mov (bad) call mov aas dec pop and adc mov push xchg mov dec xlat jmp dec arpl fsts xor adc pop les adc inc xchg pop sbb insb and dec daa add add jno jb pop cmp adc add test sti scas shlb push push in fisttpl btr add cmp add outsl sub pushf mov push aad add (bad) mov cmp inc pop xor sbb or adc xlat jle scas lret sub repz insb sub out jmp cld jno rclb xchg adc shll mov test bound shlb xchg in (bad) js (bad) stos adc adc daa pushf imul inc jg mov daa adc (bad) lahf lds fistl xor mov adc mov xor out negl jecxz iret pop or jle seto int3 xchg sbb cwtl mov push clc mov add pop das inc adc outsl mov inc fwait (bad) clc lea leave add adc es shrb data16 and push push sbb push sub test mov jecxz pop repz mov sub repz add inc adc pop adc and ret jb (bad) out (bad) ss lods cs adc sbb or je int test out inc movsb jo jge cmp cmp les int push adc fsubrs fidivrl test dec adc dec mov movsb adc nop xchg jmp dec imul lret js mov xchg jle cs incl cmp sub or cmpsl movlps pop test scas pop mov lahf (bad) adc jbe (bad) push out fpatan int3 add sub jmp cld inc nop or (bad) (bad) popf adc mov fidivr push cwtl clc je call add (bad) xor into adc fdiv xor aad out pusha sbb xor add sbbb scas adc test out adc jp decl jg repz push or lea adc les mov data16 add xchg popl cmp pop and xor bound loope adc adc push gs out arpl shrl aam inc xchg mov add mov dec sbb ljmp pushf lock sbb inc pop adc addr16 mov mov sbb mov repnz mov lds mov icebp test jmp adc neg pop or fist int3 icebp add mov (bad) repz aad add adc xor data16 cli fcoms jb lock stc adc cmp xchg jmp hlt push jns adc fstpl dec lds mov mov add add ret add mov or mov rcrb into lea arpl test leave ljmp dec cmp aam sbb ds mov (bad) lcall or lods pop call cmp mov xor clc add cmpsb cmp adc sti mov mov mov xorb or or adc mulb dec sbb loop aad adc adc cltd add and insb enter mov mov scas xchg ficompl adc (bad) push add mov (bad) inc adc adc dec push xor test add adcl js enter sub jnp addr16 sbbb jno sub or dec int3 fmuls icebp mov dec fstl mov imul loope adc mov mov cwtl pusha mov repz in pop adc into fdivl push sti enter jmp (bad) in stos nop or push sbb mov adc sub sub lea movsb nop jo push pusha dec or out repnz xchg xchg xor imull add mov outsl adc ret mov add mov pop and je mov mov pop jo xchg mov leave enter lock mov mov cmc adc and push outsb fucomi (bad) std inc cmovnp pop xlat mov add mov adc popf dec stos divb adc idivl js mov sarb jl jne shrb pop sti dec mov mov fcomps les add leave adc push dec sti sbb lahf adc out xchg mov lcall xlat ret add neg push inc mov xor pop imul push daa adc out mov adc pop cs xor aad or rcll fildl xchg push mov mov insl sbb sahf nop daa xor mov sub pop (bad) call out ja in push mov mov xor add adc pop insb or add das out aam stc popf jno pop ret sti fsubs int3 mov mov inc cmp fisttpll xchg std int adc sub fsts mov mov or adc out xor das add and outsb adc divl mov xor ret ficoml aas int mov adc out push and adc test jno (bad) sub cmpsb mov pop mov loopne sbb icebp adc push and std jno adc mov jo mov and lret push mov and sbb xor mov xchg outsb dec mov adc mov (bad) mov mov fnsave pusha inc lock hlt jbe dec inc adc lea jl sti in adc lahf and or pop ljmp test adc cmp shrb or testl jge xchg test push repz xchg adc (bad) adc sbb jns adc mov daa dec sbbl repz xchg das nop bound adc mov es or rorl divb out pushf mov mov sub or fdivrp inc push mov adc cmp fld notl lret jle aas pop lea aad (bad) jb adc rcl inc je or push popa les fdivs mov test inc mov xchg pusha mov jge jne icebp leave lea out test adc mov cwtl pop rcr movsb sub adc sbb sbb (bad) fnsave mov out ja js (bad) jns dec inc sub (bad) add das aas cmp sbb rorl or pop mov repz sub mov inc cltd mov mov or adc mov mov adc push test cmpsb adc jle mov adc std and pop fsubrp jmp lret test add jnp pop xchg or in bnd push cs stos scas adc adc jmp (bad) stc adc or mov adc cmp xchg fwait movsb xchg adc (bad) cmpsl mov mov mov lret cmpsb cmpsl sbb and sti (bad) imul adc add xor dec loop in rcl jecxz movsl (bad) jle adc or adc pushf add mov mov adc ret or pop hlt enter repnz xor jne lock insb inc xlat std push and lcall push inc mov jecxz loopne fs repz repz cmp jle nop ja stc add (bad) push jmp inc adc push aaa in jg add dec repz adc rcl sbb cmp les adc out or adc faddl sbb ret das push sbb inc bound leave lds (bad) sbb mov adc push push or int adc imul jbe sbb mov insl add mov and or add push inc pop insb push repz mov ljmp inc cwtl mov in xor pop ljmp shlb clc mov rorb xchg jnp push repz pop dec push sbb xlat std pop mov iret and pop mov cmpsl imul stos xchg dec push mov ficom mov fisubrl test and adc dec movsl or dec loopne xor sub sbb imul jno mov cmp sbb lcall mov aam and (bad) mov bswap add movsl imul push or jge dec popw sbb inc xchg ja in sbb or hlt lahf gs and je jns out add lock (bad) repz dec push and in xor mov ja fs into xchg xchg cmp jne out stos sti jl adc fild enter mov or adc imul and mov out lock cmp repz mov or mov je inc dec rclb pop xchg mov push jl add shll (bad) mov sti (bad) jne cmpsl lea cmpsb xor (bad) cld inc addr16 jmp adc push ljmp (bad) icebp mov (bad) mov sahf xchg outsl adc mov mov adc jns je fisttp rcr and (bad) push push or lock (bad) xchg jb add and outsl lahf adc cli push out lods adc outsb idivb xor add xchg mov cs mov sub mov cmp or jp sbb add sbb jmp xor pop xchg push (bad) sti pop lds je dec icebp inc stc fbstp adc mov repz sbb adc call loop sbb sar xchg adc test cmpsl les aad (bad) and mov inc andb and aam inc and insb in loop or xchg cltd or adc out pop es xchg mov test mov xor adcl rcl push add mov mov (bad) dec lods adc adc jp insb dec pop repnz dec pushf sub lahf cmpsl inc and xchg sbb adc mov push jle outsb loope xchg xor hlt xchg popa movsb mov adc pop rcrl jae nop adc pop data16 movsb pop sbb push dec dec adc adcl jl mov lahf mov hlt mov imul adc xor ljmp inc sahf invd push std cmp int3 mov sbb pushf adc aaa shrl lret std jnp loopne stos push lahf dec adc lock ja lods cmpsl rcll add mov test fs pop ljmp out jo or xchg stos and pop or lods and jno sar adc mov xor xor in cmc jl in dec xlat or mov adc push imul arpl sbb lock insl dec xchg jg adc imul in enter (bad) adc mov test mov (bad) nopl dec and adc push gs jae incb test or mov xor pop call nop (bad) repnz sbb aaa pop pushf icebp das xchg and adc or inc fcoms ds loopne jge arpl popf out mov sub lret cmp daa pop dec (bad) push adc pusha pop fwait icebp (bad) gs cld ss ret rorl adc and adc inc cmp mov adc mov push push push sbb out shr stos sarb adc fsubrl inc adc jbe sub mov adc mov push ljmp out add or ret mov mov mov dec mov repz dec add ret data16 and ficoml testb xchg sbb mov mov sub mov mov mov aam (bad) fadds xor xor (bad) fwait dec adc fs pop jne push lods imul sub push test push jg lahf (bad) xchg pop lret adc mov xchg adc cwtl add jl sub (bad) push arpl dec pop push xor nop mov clc xchg mov xor add dec mov int mov push stc add mov jmp lods adc out outsl mov pop xor or adc lea dec push fimull or imul pop cli out and mov sub mov test xor xor mov mov sbb sbb push mov btc or adc inc jo ds sub fild inc clc dec enter xchg pop out sub push jge jmp and cmc push cmp cli pop or bound push (bad) dec jp adc xor mov adc xchg adc mov push adc dec outsl push lret lods adc repz mov fsubp add inc ja lcall lds push adc ret adc mov jp xchg dec popf imul ud2 mov mov movsl cli mov rclb or cwtl inc ljmp rcrl cwtl sub dec and xchg sbb arpl pop mov mov (bad) je dec mov mov inc xor push (bad) jnp and aaa sbb sub popf mov push sub adc int3 inc inc mov je sar jmp sarl add popa sbb lcall or and adc pop adc and xor jp (bad) cmpsb xchg xchg cld in mov fnclex adc jb fisttp sbb call jecxz ja dec fmuls sub or jl in cmp loop add fsubl (bad) inc mov lret call pop adc mov sub ljmp sub jmp pop jns rcll or imul cs push (bad) aaa pushf adc (bad) mov icebp pop push mov mov push mov and pop mov popf pusha pop jp jbe mov mov mov movsl xor fcoms cmp add aam cmc push add xchg dec test cmpsb inc push push stos mov mov xchg inc std inc mov pop aaa push push jmp jnp dec lahf sbb in loope jecxz and push aam push aas add inc mov addps lea clc repz push enter cmp xchg fmuls or repz xor cmp or test int nop aam jae sub push stos xchg adc sbb imul jmp pop push mov div lret insb daa popa in mov push adc in sub inc jp sbb lock (bad) mov jge pop or fwait jbe adc adc xor test rorl pop cmp cld pop or cmp int fsubrs mov adc jecxz pop mov mov int3 gs lret xchg xchg adc mov mov jge hlt xchg cld xorb nop sub pop xchg aaa lea repz xchg mov mov rorl xchg pop pop cwtl or and xor mov or xor or mov lds rolb fcompl frstor ljmp addr16 push lahf mov int inc das pop adc sub rorl jge mov adc lret jl mov xor mov adc popa push add cmp cmp idivb scas std orl mov adc das xchg sbb or mov inc (bad) mov cltd (bad) xor sub adc inc fcoml add jmp rclb xor ljmp cmp adc out rorb mov push fcompl call test roll pop or hlt mov adc sahf xor fisttpll maxps pop push adc outsl adc test push out stos gs lods xchg sub movsl add (bad) adc mov mov (bad) jb sbb clc add (bad) sti notl and (bad) fwait cmp pushl pop icebp cs cmpsl lcall push adc scas push nopl repnz cmpsb add adc add sarl dec popa xlat dec xor pop and inc (bad) insb pop (bad) pop adc and int mov adc mov pop cmp int3 daa in mov sub adc or (bad) push fwait daa sbb mov push or add outsl xchg and xor inc dec cmc mov push rcr adc dec jge xor jp cmpsb rorl pop and inc and adc push push xchg pop sub (bad) push test sahf notb adc call lret pcmpgtb into add aaa mov mov out ret sbb int3 in adc shrl mov mov test jb adc adc lds (bad) jecxz sbb es push adc add imul aaa adc movsb aad insb lahf dec ljmp div in cmp mov lcall mov repnz push xchg lret adc std sub outsb mov ficom sub xchg xchg mov push sbb pop mov (bad) xchg dec popf mov add adc cli adc sarl sub jno jo adc aad nop jns adc aas adc cmp adc or loop pop inc add push mov scas dec (bad) dec or cmp jno popa mov cmpl or mov out sbb cmp mov and into fs loopne inc pop adc pop cltd repz add jge shlb cmp adc dec sbb sub leave inc ja in xor adc push or mov ror sbb mov push pop lahf adc pop inc mov int3 es enter mov mov pop inc cs pop sbb sbb adc (bad) mov pop jmp aaa lods jbe ret adc adc mov (bad) ljmp test pop sub pop repnz adc cli jno das hlt fs loope add fbld pop popa ds mov mov fwait cmp mov or fst rcr stos sti stos xor xor je js out data16 ffree sbb cmpsl clc loope mov xchg mov gs ficom jp add xchg inc mov xor rorb (bad) out sahf adc inc mov sbb jl pop (bad) das or add es rcll push popa xchg mov mov out (bad) imul cmp scas push adc rcrb (bad) mov imul and adc and inc mov adc dec lds adc lahf mov sub add pop repz retw test and inc push in mov call inc add shr fnstenv rclb mov dec lret (bad) xchg int add push sub add out pusha adc (bad) xor std fistpll push imul int3 xchg (bad) and or and sbb sbb jge cmc cmp iret repnz pop adc rorl roll push lock push add icebp sub sub es cmovae mov int cmc sbb cmp push jmp add or xor (bad) les push add mov fisttpl test push outsl pop xlat (bad) negl dec jp adc outsb (bad) sub mov mov bound adc xchg xchg maskmovq mull pop daa flds in lret sub aam icebp mov popa xor xchg adc lock add ret and rolb lods xor stc adc jge adc mov xchg adc adc mov mov lret mov mov insb sub setbe and repz xchg add or mov ficom inc lea out adc (bad) icebp sbb jno nop inc rcrb mov mov mov add lea cmpsl stos inc ss xchg leave mov mov push adc dec ds cmp push into adc mov repz addr16 push lods cmp xchg cs adc add scas jl jno sbb and popf aam cld xchg inc fldt pop mov lret ljmp and (bad) sub jge cmp sbbl icebp xor pop jl and push mov adc and adc sbb adc sub mov push stos adc test outsl insl add xlat mov adc cmp call loopne inc clc ret nop add lret sub add ja or adc mov loopne insl cmp add gs pop cwtl rorb scas sub repz pop lret mov or push (bad) sub out in add dec popf mov aas adc push xchg (bad) jecxz dec sub jle stc sub mov inc je and cmpsl popf sbb hlt lea fwait pop jp dec add push push cs mov test aas inc insl cmp loop faddl cltd pop test stos cmpsb pop lahf add adc or mull adc int stos nop jmp enter sub cltd mov nop rclb xchg (bad) adc mov das mov xlat adc ret sbb mov out add sti cmp inc gs (bad) rorb iret jmp mov adc (bad) sub pop cmp in or jae repnz mov add add xorb not push sbb xchg and inc sub insb cltd or cmp adc xorl xchg lahf dec and and xchg and inc scas js lock mov adc rorb adc jb xlat fnstcw sub fwait xchg (bad) aas mov or or sbb inc insb and jge pop (bad) sub jmp int3 adc dec (bad) into sub lcall shlb sbb inc ret notb xlat lret insb (bad) adc js int adc adc mov xorb stc (bad) fiaddl (bad) mov das cmp adc dec lret ret (bad) adc mov xchg xor xchg add cltd repnz in push xor pop lds loop std jmp lods push mov adc test and cs and xchg mov mov in gs (bad) (bad) xor adc fpatan cmp mov sbb cmpsb and sub ret xchg cmp pop sbb mov xorl push inc std adc xor xor out xchg mov ljmp adc xor push adc fistpl (bad) xchg iret mov push stos add or daa loop adc int3 jae mov adc mov sbb clc rolb das bound push jg adc jge xlat shr (bad) imul pop test jle rcrb mov mov or adc sbb or mov fcomps pop fsubrp rcrl jns mov ffreep jg sbb int add jo mov enter aam dec jb mov mov cmp add lea dec test mov ljmp imul push xchg mov adc iret jmp dec arpl pushf pusha inc adc scas cld stos mov outsl sti mov in aaa or mov xchg pop aad push (bad) aas cld xchg mov xor xor (bad) push mov cmpsb insb or (bad) rcll mov cmp xor pop adc add insb pop dec adc push mov jb lds mov cltd or lret add sbb ja push (bad) jo nop (bad) je add into add adc sub mov test or adc mov out sahf sbb adc sub insb mov js das out (bad) mov sbb (bad) mov int pushf incl lret cmp repz repz scas test fild adc popf repnz adc out loopne repz cmpsl xor pop test jl xchg sbbb adc lret jg push outsl mov xchg mov adc pusha clc (bad) mov mov daa sarl adc imul jmp xor mov xor and adc cmp lock push or push cltd cld out mov add xchg rol iret decb add fsubl sub idivl adc pop mov xchg sbb pop fimul cmp lcall adc xorl adc mov xchg aad repz adc repnz fsubrl push adc and cmc and repnz inc sub fdivp push or fist sub (bad) pop or lods imul inc dec jne aaa out adc scas (bad) mov in fwait push add (bad) adc dec inc fisubr sbb mov mov dec cmp and fimull mov stos maskmovq (bad) dec aad notb in add jae cmp inc sti loop jge ret adc sub mov push scas jae scas imul xor inc sysexit push icebp add or out or pop lods dec cmp xor xchg repz scas push pop mov adc sahf pop lock rclb addr16 jle xchg dec out and pop adc scas leave in or sbb sbb mov outsb mov adc mov inc adc adc push adc (bad) pop dec adc push mov and lock cltd adc fidivl or xor ror movl aam and jmp pop mov mov or test cwtl push ljmp mov and mov push movsl adc sbb push mov cmp in mulb push push adc addr16 xchg jno mov das lret mov sbb mov test les shr scas xchg xor movsb pop jge rolb notb mov add notl fsub shrb subl mov sarb xor lcall mov mov pop mov mov push and les adc stos shrl add rclb lcall inc aam mov rcrb sti test inc cmp jb cmp mov add sti or rcll rcrb push dec dec sbbl mov mov mov jne push adc dec mov cmp push mov add adc (bad) mov out pusha cmpsb leave sub adc cmp sbb lret xchg loope insb add outsl shrb repz mov jl push imul clc fstl cmp ret sub mov test cmpsl int dec sub dec push jge mov xchg mov inc cmp lea ficoml cmp movsl rolb insl sbb xor clc sub lock adc mov cmp adc inc (bad) jmp (bad) nop push mov popa adc push mov jbe rcr sbb pop imul mov adc jp adc sbb adc (bad) (bad) scas (bad) lock jae lods mov imul jo call rcr sarb fcoml pop fidiv enter shlb fisubl sahf icebp (bad) adc and test aas xorl scas stos jmp out movsb hlt sbb mov insb adc in (bad) fist sub repz inc mov das jnp repz push dec mov jge xor pop lret cmpsb or pop cltd mov lds or inc jb pop mov xchg clc add xchg and movsb out repnz sub fmuls add mov dec sbb fcmovbe fcompl daa xchg mov mov in push ficom mov js push pop sub (bad) cltd adc (bad) rcll mov xchg xor je mov push rcrb mov repnz lock ja mov or js adc lea mov test xchg movsl fs mov sbb jbe xchg adc (bad) repnz insl fdivr adc add jmp sbb adc mov add jbe movsl ds cld adcb push push and adc pop mov nop cs add xchg faddl xchg xlat js sbb mov jns pushf mov cmp mov aas sti push add in int add out fwait cwtl rorl sbb adc pop adc mov and adc loop cmp (bad) icebp sbbl sti lods mov je addr16 jge add sbbl mov loop adc pop adc jbe daa adc imul stos or jecxz jl lds stos loopne xor (bad) (bad) ss xchg sub mov ljmp sbb push adc pop and sub pop sbb incl js pop fwait jbe cmp incb xchg or rcll mov adc push xor mov add lods adc xchg mov xchg inc adc rcr mov adc lret jle jo stc adc cmpsl repz push mov pop nop adc fcmovu jle push mov push dec mull xchg test test adc push xchg adc add mulb aaa (bad) gs imul test cmpsb test pop std pop jg (bad) in sbb push loop dec lock jns sub mov mov sahf and adc pushf inc or pop adc std xlat test or push out mov and ror cmp imul cwtl adc adc xchg push mov rorb mov mov pop popa xchg xor incl xchg out inc pushf lods add inc inc rorl inc xlat jo test xlat pop lock sbb mov mov and adc lods mov adc mov sti or adc pop sub mov pop jbe add cwtl sbb in adc cmp pop addr16 int3 push mov lcall mov decl leave lahf sti daa out add or pop mov and ret mov dec add pusha push outsb jge mov rclb jg add xchg add inc lahf lock mov push mov sbb mov push cmpsl sbb jae into imul rorb pop stos inc loope adc dec mov sub xor movsb test jl add sbb mov hlt ficom aas fstps fcmovnu sbb jg mov and push sahf pop adc push mov mov mov add iret pop or mov gs and jmp cmp xchg and inc or insl add push dec mov or or adc sub or inc mov cmpsl addr16 xchg int3 xor adc or or repz jnp (bad) sbb jb adc push mov mov enter clc ret adc add movsl (bad) loopne xorl movb inc outsl sbb xor lods (bad) notl xchg cmp aaa xor mov sbb mov outsl movsl sbb adc fcompl repz cs mov aas daa or jl mov cwtl adc adc fcmovu cmp add mov adc inc pop push (bad) daa inc jno cmpsb idivb jmp xchg das adc lods inc nop lcall out and push ds jp mov mov jae imul mov inc daa lcall add xchg stc adc and clc add adc stos pop push imul jb popa adc sbb bound adc rcrb (bad) adc pop icebp mov xor adc dec and push rol jmp mov xchg adc cmpl loope mov (bad) cwtl ja pop call xchg jl adc popa mov fcoms pop mov or sarb test sti loope les pop stos int3 dec jmp int cmovbe jl xor dec mov add and adc mov bound push adc cmp pop sbb mov jg adc sbb dec repnz sub ficoml mov sbb pop and out mov add mov xor or (bad) clc jne sub jnp jle mov adc jbe pop movl scas adc sub pop repz mov add mov (bad) pop jb adc and mov xchg ret (bad) mov sbb into sbb mov xor cmpsb rcrl adc lret xchg (bad) inc xchg and jmp iret out test nop mov or test rcrb cmp and decl mov sub mov pop xchg inc jge frstpm(287 push fs add adc mov into lods sets adc xchg mov push test xchg rolb imul adc out mov mov adc pop (bad) fnstsw add and xchg dec je adc (bad) push or sti mov punpckldq kmovb cmpsl xchg pushf (bad) aam test repz mov or test mov inc (bad) fisttp or pop cmp and shrb shufps fwait push jae xor outsl jmp cmp mov std and cmp scas sub cmovo mov jno add cmp xor lea fwait inc push (bad) icebp jnp mov inc adc sbb cmp sti adc shlb or clc into test mov decb adc xchg xor jbe lcall mov and sub out pop out sbb into jle and pop push adc add inc sbb and cmp mov mov (bad) scas xchg daa popa jb sbb xor push cmp cli dec divb repz or adc pop sbb das fistpl mov divl sbb xlat add sbb es sti jge or mov dec xchg call or mov mov push stos inc inc sub lods sar in scas adc pusha dec addl fistp fcoml mov adc test pop fs xchg sarb lcall rorl shr push push mov adc lods pusha aam xor arpl pop push rolb adc (bad) mov adc dec jb cmp repnz sub sbb xchg ss nop int adc lret jmp out into dec adc pop or shll (bad) nop in mov jo aaa cmp adc fisubrl fnstsw cltd out xlat xchg cmp ret xchg adc add mov xor push repz clc jne call fdivs imul adc cld mov xchg lods clc sbb adcl shrl mov fdivrl cltd fwait lock shll mov loop inc enter fs jge adc pop and lods mov mov and aad mov pop mov imul xchg sbb add cmpsl jns fistl lods inc rclb insb add and xor xchg pop xor bound mov loop aam lock repz inc inc or clc mov dec out or mov or fistl mov aad (bad) popa ret inc nop inc xchg out in sub adc repz push pop les or int adc cmp inc fsubr adc and (bad) xor sub mov and dec xchg hlt insl push test add pusha xor push push xchg das frstor mov leave mov in mov adc xchg or iret rcl xor xor push pop dec jl adc add push leave scas and repz xchg jo cli cmc mov xchg stc aad nop mov std jecxz mov (bad) push push pop jmp push imul sbb push dec inc push adc inc and outsl sbb int ss and mov movsl pop das (bad) aas mov loope push scas inc xchg ljmp stos in jp mov add int3 dec sub movsb add loop xchg or adc out js test jp inc pop xor fnstcw add sbb test mov mov btc bound jne jno or scas (bad) adc adc push add lcall inc in ja cmovb (bad) mov adc pop mov sbb inc fnsave fild adc fs or adcl pop mov call mov pop push rcll pop ret pop jp ficoml je cmp mov cmp pusha mov shll cwtl dec xchg jne sbb or mov jo out movsl lcall lret mov (bad) (bad) (bad) je push cld das js out pop fyl2x adc (bad) adc orl adc fwait and fxch inc mov sub mov and inc das fcompl (bad) push fsubrs jnp cmp sbb jmp mov dec adc cltd mov mov test adc out insl test or sub lds inc push neg lcall fcompl mov cmp fisttpl xchg inc jns adc cmp fwait xor mov mov push push or xchg or mov icebp int3 cmpsl mov dec mov mov adc loopne push je in mov rorl mov sub and div mov cwtl xor roll xchg rcll aaa pop adc sahf gs adc adc ret adc xor mov mov repz sub push dec lahf int (bad) adcl adc mov adc (bad) mov mov mov (bad) xor mov or imull movsl mov fcmovbe loope add lea mov aaa add out cwtl add inc jecxz shrl sub fwait cmp popf cltd (bad) stos jecxz add mov inc adc pusha mov adcb aam jg ljmp mov inc jecxz sub push shlb add dec adc mov mov popa add xor add pop adc int or xchg arpl or inc sbb adc push adc pop fnstsw adc lods ficom iret pop dec xor mov lds adc pop adc and fistl repz jp in sbb pushf push cmp pop out sub rclb dec punpckhwd xchg leave mov adc repz jge cwtl mov lcall adc inc push sbb rol push mov mov add arpl fimul mov push adc sbb jp sbb ja outsb jns or jae (bad) pop mov pusha xor xchg add adc stos (bad) repz push rclb pop adc or jp adc jl and push xchg adc outsl outsb dec (bad) loope mov test test sub adc insb pop inc xchg inc cmpsb and (bad) mov aaa adcl lods sub mov inc mov inc pop mov mov dec arpl xchg sbb jg imul xor xchg cmp insb test add gs (bad) std dec sbb divl dec or sbb sub jge in mov mov out sbb jbe fcomi inc add adc pop int test stos out popa lea (bad) or in insb sbb into xor adc fwait mov add sub (bad) push andl test mov mov pushf adc stos lret test and adc push fistpl or adc mov cmp sbb adc scas mov nop repnz mov popf adc lcall inc iret andl jne adc ret mov mov call fwait jns (bad) xchg and leave adc jno fistl mov test jmp push xchg addr16 mov test mov insl push outsl leave adc or dec repz arpl repnz ja jmp divps xchg adc dec in rcll adc mov lods ret adc cltd push pop cmp leave inc pop popa sub insl add in hlt jne pop movsb or inc repnz pop pop lods cltd (bad) dec jge ds jl je mov scas cmp add dec stos popa jle ss arpl adc jno mov mov adc ja mov adc insb das stos ret cwtl mov fldz cld ja mov loop shrl add pop pop adc jb icebp mov mov pop or gs (bad) mov (bad) pop pop fwait jl je push jle insb or (bad) nop jnp (bad) mov jbe repz dec push sbb mov std and push out (bad) dec mov xchg jp jmp rclb xor mov mov mov add shll and adc fistpll push int je adc loop test mov (bad) sbb rorb je push pop popf mov push push mov fimull add pop repnz adc mov mov sbb lock and adc lcall lea mov out or adc pop and xor lods sbb lods xchg sub adc push rcrb (bad) cli xor inc sti sub adc repnz mov mov (bad) pop add pop adcl cmp imul sub push jge paddsb sbb mov add xchg les sub mov mov xorb adc pop add jb pop outsb hlt adcl cltd mov out imul adc sbb jecxz roll lods sub js mov mov push out adc xchg aaa rclb sarb arpl pop fiadd xchg mov pop mov push (bad) frstor add adc addl add and icebp xchg dec pop fwait into adc out pop enter adc in mov loopne xorl leave jge jno icebp test fisttp (bad) pushf rol adc lret mov lods sbb sti mov in mov jg (bad) lds arpl lods adc or adc loop mov sub int3 call adc lcall add mov adc adc jbe cmpb push cmp adc mov mov jno push adc or fsts mov clc cmp negl in or (bad) addr16 adc push mov in out add push xor pushf mov or adc pop lods mov mov cli js add xor fsts (bad) cmp (bad) repz add inc pop pop ja add xchg mov adc stos bound sub daa xchg push fcompl popf adc cmpsb mov dec iret sbb mov aad les inc repnz (bad) neg out adc (bad) enter and mov mov pop (bad) test jl sbb out mov pop jno ljmp jecxz adc int adc aas rclb lcall dec dec fist test scas ljmp mov jmp (bad) mulb cmpsb pop and inc icebp sbb aaa lret jmp aas inc mov mov sarl ss movsl mov ja adc js adc shrl out out jle rcl dec sub stos ret out mov mov dec (bad) push adc push ja into aas mov or cld orl das adc cmc out repz mov or outsb into or adc incb ret adc popa mov out div adc xor mov cmp pop aad or in mov sub js in jb or sbb pop clc test pop adc gs inc mov (bad) movsl add rorb in data16 fdivs mov call test add adc cmp sbb ljmp gs push (bad) stc movsb sub adc mov adc jmp cmpsb pushf adc mov lcall lds punpckhdq push mov and fiaddl (bad) ret in lret (bad) pop adc dec je lock mov aaa aam or in adc sub mov repz aas mov lea sub jecxz lock (bad) xor sti pop push movsl mov xchg mov inc xchg lret pop adc mov daa mov sarl and adc call aas jp sub sbb nop dec sub out (bad) sub adc (bad) mov push test add adc xchg sub pop push dec xchg repnz or adc enter idivb pop dec sti int loopne dec adc leave test sahf repnz push insl jo popa std adc adcl dec mov lock push ror popa mov flds (bad) mov out mov out xchg test fisubrl dec sub dec cltd cld sub mov jl shrb dec push (bad) jns adc add fneni(8087 sbb orb mov pop rolb dec push adc mov ss pop loop push sbb cltd lods incl sbb test pop adc dec push fwait dec rcll fild addl lahf sbb lret push jle lret call mov xchg test adc rorb push adc cmpsl loope cmp adc popf jg outsl sub movsb xchg mov pusha and add test lock sbb jo (bad) je mov loopne roll sbb fsubl xor adc mov mov adc ret xlat ljmp cmpsl fisubr mov ds inc ljmp dec clc stc cmp push out mov fdivrl orl push mov cmp or mov mov add adc xor fnstsw out xor jp adc sbb imul or jnp pop pop orb fs sar push data16 mov cmpsb xchg add xor dec icebp fstl sbb and add adc mov gs in cmpl mov and adc ret jmp les fistpll sbb add loop adc adc or adc leave popf ss push subb and mov adc pop ret jo in mov testb sbb sbb fisub adc fildll adc sub add inc sbb mov adc pop add mov sub and inc outsl (bad) fcmovnbe xchg (bad) mov jae lea push ss jg scas adc dec pushf pop xor mov mov popf icebp mov addr16 mov jp pop or cmp mov xlat sbb inc mov fisub nop jg sbb out pop (bad) dec pop add mov add cmp xor aaa lahf adc outsb in push xchg inc test inc js xchg xor adc push repnz mov mov ljmp in adc shr inc mov mov pop out lfs pusha or movsl insb js dec adc lds imull scas stc mov fnstsw ficompl clc jge xor xor shlb or xchg pop sbb inc outsb and popf leave adc mov dec pop test mov add pop sub faddl mov pop lea sub mov into adc jge fisubl pop lods icebp adc jmp dec mov jns roll mov scas xor jmp lods sbb in fmull sub mov and rcll lret mov pop inc fmulp aam add pop loop mov mov xchg mov mov or sbb sbb call lret or sub and lret js rorb mov jmp xor mov iret push psrld insb inc adc sbb out push fcoms push lea repz jecxz pop adc adc repz adc sub icebp mov ss popa push mov nop adc mov movsb data16 jae xor inc cs out bswap or add or dec xorl scas lods push adc inc fwait mov cltd (bad) addr16 test stc in or cli mov jg notb add nop cmc pop mov dec xchg add ljmp xor mov jne stos daa icebp sbb xchg mov pop adc out add into mov fnstsw mov shl popa add adc (bad) hlt loope frstor jmp pop xor mov and push adc pop lods adc cmpsb hlt xchg push mov adc repz xor dec sub stos mov movsb fldenv test or nop cwtl movsl mov je int mov adc xor scas push repz adc sbb jecxz addr16 loope subl (bad) cmpsb or je adc pop insb repz xchg or popa mov adc aas cmp adc in cmp xchg jne scas icebp xchg (bad) cmc mov inc add test xchg push es adc inc sbb sub push in hlt xor push and adc and push cmc jge adc pop fisubl jnp (bad) adc insb push pop aad mov or and test pop pop adc xchg popf imul or fwait and adc mov xchg stos push ret ds sbb xchg sbb rcr sbb dec xor fs outsb fimul es xlat push inc clc adc loope insl (bad) mov cmp jne fwait adc push pop pop adc jecxz and dec fdivl pop std sbb inc adc xchg jno adc fbstp mov ret (bad) xchg ret xor push add cmp into mov xchg pop sbb pop pushf mov repz mov std repz add add sar adc repz test daa int xchg pop lds xor imul mov shlb mov sbb add ja mov mov (bad) popf push sub mov out add lds movsl cld jbe xchg popa mov frstor data16 (bad) or aas sub stc xor pop adc lcall nop test push in out sbb sub and movsl push (bad) xchg adc adc push xrelease leave push fsubl adc or hlt pop mov sysexit iret adc xchg es cmp repz jbe adc (bad) mov push add add les mov fisubr sbb mov cmpsb rcrb mov leave sbb jb push adc fbstp ret shrl (bad) jle into xor imul and push mov jnp repz out test add lock fisubr inc xlat adc frstor stos sarb stos nop adc adc daa adc aas xor xchg lea int repnz pop ja aam in ret negb cli std xchg adc cltd inc or fisttpl mov nop inc jns sbb pop xor mov mov xchg push mov addr16 out adc (bad) repnz js add hlt push es xor (bad) cmp mov jns pusha sbb sarb stos ret add and iret out ret pop mov lock outsb mov cmpsb jae pop daa xor adc loopne adc call push adc ss or (bad) or lock fstpt andl jnp cmp sbb rcrl test fisttpl mulb dec add repnz out xor xchg ljmp pop cwtl xor clc lret fnsave orl inc jne fdivl repnz add scas push test adc push adc pop out (bad) enter repnz adc add or mov movsb mov or push jg int3 repnz adc hlt add or aam sub dec bound sbb sbb mov (bad) jg lods pop jo lock lret add xchg pushf das into push adc pop mov popa adc xchg std (bad) adc cltd cmpsb mov scas mov std and bound movsl sti adc loop inc les fistl sbb loope sbb jge popf ja xor jmp add xchg out into or enter push test out mov push pop imul inc loope adc scas lret or mov xor xchg es push mov xchg or sub sbb add or jl and mov sbb adc mov and in (bad) mov pop aam jne sti in mov mov push add xchg sti mov and into push and fwait lds outsb iret movsb lcall in or call in and add rcll pusha pop mov xor add add scas jns and in cmp adc dec adc and repnz inc (bad) aas (bad) pushf repz jge mov ljmp or loop adc push loopne inc test cli arpl mov roll scas pop xchg adc lds mov xor andb stc es push and adc add into int3 sbb add fild aam or xchg jae dec cmp hlt enter lock std out into btr jp lahf add xor movsb cmpsl jno inc lds ja,pt push push push adc mov leave rclb (bad) shrd push cmp loope mov mov pushf cmp rcll fldenv lret push sub dec jnp adc sub notl add arpl jbe mov xchg add push repz std sbb (bad) xor adc cmp pop es sti adc dec repnz mov out sbb push push ds or or (bad) xor daa adc jecxz cmp lret jp xchg mov ret xor dec mov aam adc scas add mov ja inc loopne daa xor dec repz inc addr16 sub pop mov add push jbe arpl sub adc jmp inc inc mov jne jg shrl adc cmc adc ds xchg pop dec add test int3 adc pop loop xor bound nop jecxz adc lret pusha hlt xchg scas adc ret (bad) adc enter add rorl adc jns test inc notl (bad) out repz mov je fdivs cmp and sub inc xor jle or in adc dec nop pushf mov sub mov mov sbb add inc mov lret jno push cmp (bad) sbb stos mov mov adc repz cmp fwait or pop push dec sbb aad xchg pusha mov int3 or sub ljmp addr16 ret notl xchg jp clc and sbb pop xchg fwait mov je mov cli jmp pop push lock (bad) roll adc pop decb cwtl cmpsb xor push push jnp test adc jecxz adc addr16 adc sub adc sbb mov cld movsl js adc push subl mov adc xchg in sub ljmp jno es adc rcl cltd mov and pop sbb into cmp icebp fimull fs int3 stos pushf adc lods lahf jae sub sar fisubr adc sub xchg out dec adc pop adc push std jmp aam test scas faddl and nop mov stc adc push adc rclb mov sbb push sbb adc lea sub mov gs cmp or stos mov adc lds sbb shrb jns adc dec sbb mov call aad (bad) repz jno jg sub imulb loop add push push adc pop jno mov repnz sbb aam outsl add das stos nop mov mov inc and sbb add adc mov sbb repz popf sbb lahf adc nop xor sbb cmp repz icebp je adcb fildl adc repz pop mov call mov pop lahf sbb adc (bad) xor mov or mov iret loop fs add push mov cli aas mov mov sbb lods adc mov pop cmp sub clc add or xchg xor in pop call adc jnp push inc jmp push inc push adc dec inc pop or mov pop mov sti insl orl adc dec pop jb pop outsb xchg in add mov outsl out jl vpermpd add push sti fistl sub lods jae jns xchg xor mulb push jecxz or popf mov xlat adc add adcl cmpsl and adc sbb mov test cmp add gs adc addb adc sbb clc or icebp inc aam outsl sub adc push insl aad mov inc adc test mov adc pusha ret cs and cmp adc mov ja insl lock or mov lcall clc push mov (bad) add pushf inc pop push xchg jbe adc lret jb adc arpl pop (bad) cld pop frstor dec insl sub pop mov xchg add (bad) mov jno fildl sbb cmp (bad) repz xchg adc popf leave adc test adc xor jb movsl icebp jo jg pushf adc jnp push ret sbb add fsubr adc pushf lahf dec add push adc rdmsr xchg adc jle xchg mov cwtl rol test repnz (bad) dec loope in mov adc xor add mov (bad) jge mov inc in test sub outsb mov mov enter hlt cmp out or lahf fidiv aas cmp pop push pop das jno xor or dec cwtl adc or mov inc cmpsl xchg mov outsl xlat adc (bad) lret addr16 je adc pusha adc (bad) iret aam dec add jle fadd mov add sti or in icebp sbb mov adc cs adc outsb jb mov jecxz repz mov hlt fdivrl xlat mov jno dec loope fnsave pop jb lods outsb mov sub gs cmp dec mov mov std popa (bad) mov mov cltd adc lods jl outsl sub out daa push jp mov add cltd fnsave mov loop adc mov int je add and dec cld push adc dec pop rcrl sbbb ficoml add or test inc je mov dec jne jo inc mov subb adc mov jg shl add outsl popf nop cld (bad) and jg lahf cmpsl adc jbe loopne (bad) mov adc icebp jno adc insl xor cmc adc cld xchg ja fsubr inc xor push lahf dec inc nop cmp out stos push push pop jp lods stc rcll fadd cltd mov adc inc lock data16 xchg fildl es sbb (bad) mov jae mov add xor jnp or pop scas adc jl movsl bound jecxz add insb sub inc lcall mov push and push sub insb pop xchg lret fs inc dec and mov cmp mov cmp adc (bad) rorl je dec out or aaa gs add (bad) (bad) jo sbb add rep xchg stos pop mov add aas xor add mov sub add cmp push mov inc mov push mov adc daa xor mov xor or add ss pop adc adc (bad) mov wrmsr or push adc add sbb (bad) imul pop repnz xor mov sbb repz pop and push mov sbb xor adc xchg pop xchg push mov xor mov cmpsl inc jecxz sbb pop outsl adc mov and mov adc add pop mov out in ss adc sub scas pop and push adc sbb test xchg pop sbb ret adc int dec mov cmp adc repz movzbl adc adc jae push out mov or fsub add adc xchg adc mov cmp je or lret lock rep ret aaa mov jmp adc cld in adc (bad) adc (bad) jae mov xchg sarl cli and insl jmp xchg adc pop inc jno jp aam pop cli pop sub or sbb rcrl jae pop jp push scas add vandnps jno arpl adc mulps mov mov push test cmpsl fldl jbe sub mov aam xchg into fmuls xor xor lods rclb push enter mov adc sbb (bad) mov stc mov adc fmull or imul add lret push mov adc sbb sub rcrb jge cmc sbb mov sbb je imul adc orl fwait add adc jle ds sbb daa iret call pop xlat sbb adc daa jno mov sbb jns fwait jle jno inc xorl add repnz add cmp int3 cli jg adc mov mov fstl adc aam push (bad) adc xchg or and insl popf push mov cli ficomp or cmpsb adc dec cmpsl inc mov cli adc mov add iret test push fwait jl nop (bad) ljmp xorl icebp enter jg dec (bad) adc lea stos ljmp movsl mov fidivrl sub dec outsb pop push cs mov pop sbb jecxz ficom hlt inc test pop xor addr16 push ret out dec add xchg adc int3 mov inc push mov mov mov hlt imul pop call cmpsb int inc pop divl loope fwait dec imul lret cmp stos cmp mov ds repnz cmpsb adc clc sub or push adc in cmp fdivrl lahf sub fidivr imul js mov xor mov or inc push aam inc jecxz outsb and cwtl mov push pop scas sahf xor loopne imul iret jecxz notl push push ret cmp mov sub pusha mov aas inc nop pop pop cwtl fcmovb push call test mov sbb scas xchg mov into or movsl mov adc (bad) xchg mov mov xor and mov add scas and ljmp cmp test fcomip adc fwait mov sysenter out repz mov adc push jns loopne (bad) mov dec add xlat or jae adc and movsb push pushf adcl movntq out or xchg mov jnp mov mov and mov adc push jmp (bad) pandn push adc fldl2e lods adc xchg rep or ret mov adc movsb sub mov sub pushl imul lcall push adc push out add jg adc inc push mov inc lea repnz imul dec adc fs add pop cmc xchg adc loope cmp gs dec hlt into shrl nop cld adc outsl aaa push clc jg jnp xchg push outsb adc inc push pop pop lea adc ds in adc (bad) jae (bad) lahf nop add add ds jge add call int adc push je adc and test add lret push pushf xchg xor shrl adc xor push scas jp adc lds mov out out (bad) inc mov imul repz mov stos rclb std pop mov adcl lcall adc jle pop js jne sub sub jo dec push adc pop inc push mov cwtl adc sbb cmp (bad) xor adc orb cld sub xlat and adc or (bad) inc lcall push inc sbb mov mov lcall xchg int3 mov leave ss out cmp lods lret sbb jbe and stc movsb add xor inc adc addr16 jmp popa and adc adc sub dec clc adc lret mov orb cmp dec js jb pop mov outsl adc rclb je mov (bad) adc out xor jno lcall or xchg xchg sbb cwtl adc xchg mov icebp xor pop orb scas lods adc add rclb mov mov daa adc sub in (bad) sti mov pop arpl cmp stos mov loop,pn xchg setno scas daa sub jae leave je add jo,pt mov jg sbb xor jnp mov in push adc loop mov adc push leave adc (bad) movsl jl cmp imul fimull adc repz ss adc test xchg subb js pusha in into cmp sub adc (bad) insl imul pop adc ja jae dec mov (bad) push inc gs push int3 leave mov cld (bad) sbb jbe rclb mov lret subl add dec in lods and nop ret clc cmpsl repnz lds movsl gs fistl and test push add mov fadds jb jnp and int3 xor mov fsubrl in out (bad) xor aam jae adc repz and xlat cli and das pop mov int cmpsb adc push push cmp xor push rclb test sub sahf sbb out adc xchg mov movsb adc roll add cmpsb cltd adc jo iret mov int out adc leave jmp xorl adc out push and xor test adc jmp (bad) cmp inc sbb repz mov popa int3 inc lret stos hlt fldl pop popf xchg adc stos je sbb push (bad) mov jp or push mov mov xchg cli sarb inc dec push jmp lahf push repnz pop imul sub adc in inc shlb jecxz and inc clc fcoms xchg mov dec and pop sbb adcl adc mov or inc rorb or daa pop push jmp shrb jns and rclb or sbb cmp xor mov clc xor stos icebp mov mov cmp mov mov mov insb inc fwait sub xor int3 xchg jno xor sarb aad into mov push (bad) movsb sub xor add (bad) xor setp mov mov leave lds xor adc mov push repnz push adc cli dec rcrb in dec cmp insb sarb ljmp int mov dec jecxz nop and aaa cmp mov push in adc sbb jae lret mov hlt xor xchg xchg cmp cmp pop mov adc int xor xor lods stos pushf jmp test mov adc icebp pop adc ret push sub in adc jge mov adc fwait movsb lods mov adc dec sbb jmp je fmull lahf out ss and fmul mov mov mov lods push fs adcl rcrb adc test push js repz sbb shll mov pop (bad) (bad) cmp sub adc dec (bad) loop pusha sbb xchg cmp enter and popf xor jne pop mov jo loopne cwtl mov mov mov icebp ja or or jns leave fwait pop clc enter fdivl je add cmp inc add mov call iret adc aaa sub stos mov cmpsb adc xchg sub fldl adc mov aad repz pop add sbb pop pusha insb (bad) into sahf xchg cmp push adc mov xor sub push dec adc push popa (bad) syscall adc mov out pop adc jae (bad) xor sbb adc sub adc hlt aas ret mov (bad) loope sub mov and inc push cli jle aaa mov data16 xor adc dec mov push mov cwtl pop popf mov dec or or mov out jp adc xchg roll xchg cmp push cmpsb outsb mov dec mov cmc or pop shrl or jno push jnp push add cmp xchg xor adc push xor mov pop rolb xor inc pop lds jno lods lret push cwtl pop das push mov inc push in (bad) (bad) lret adc into (bad) sbb std push fistp push jne xchg cwtl ret test in adc sub or jmp mov jecxz dec inc sbb xor ficomp push mov imul outsl mov mov ret jecxz pop add into out push insb movsl in aam add inc aaa mov inc pop (bad) xchg pop mov mov in add pusha inc mov adc sbb cmp push adc mov outsb out add cmc dec scas sbb out movsl adc test repnz outsl adc mov cld loope cmp inc xor add xchg ss dec scas in mov or xchg dec add pop out or imul inc (bad) push mov ds rorb mov out inc js mov jge mov and (bad) dec pop rcl cmp lret and and cmp loopne in in test stc inc and xor jne push adc push cld push xchg bound xchg das fdiv repz mov and add lahf pop inc add adc imull xor cwtl push add inc jp adc mov test xor test (bad) aad dec repz imul fst or iret repz mov mov adc push sub les lea inc data16 add xchg into mov inc xchg xchg out fsubr adc scas cmp adc stos popa add sbb in (bad) (bad) cmp mov mov push add ret dec mov sbb icebp xchg jg mov adc jb iret mov adc cld lahf mov nop add pop xor dec sbb push adc imulb mov lret xchg in orb fwait xchg push adc shrb repz push xor or push jp outsl popa repnz fldenv mov out mov adc push outsb ds ret loope test lcall pusha cmp xchg pop repz test adc repz sbb push and adc dec gs mov sub int test sbb mov pop ret mov aaa rclb fidivl into cmp adc sbb xor stc add hlt dec xchg and cmp cmpl sarl lock mov mov push inc pop or lods (bad) in sbb call ja imul adc add test adc icebp cmp stos popa mov adc lods xchg ficompl insl adc jno lret lock arpl insb dec xchg in add adc lcall adc mov push inc jmp sbb or mov push lahf jecxz dec xlat int3 push inc adc xchg repz je jno scas jle push adc mov hlt jne (bad) xor add cmp sar lret ja or adc sarl repz xchg pushf mov loopne subl push dec mov adc adc mov clc inc dec cwtl xor or adc inc cmp loop lret sub nop adc jne mov pop ljmp pop or dec repz insb jnp rcll mov (bad) divb addl fidiv cmpsl adc ljmp mov jge or or mov jbe or icebp adc (bad) mov xor fbld pop add mov adc xchg call repz mov or mov imul mov sub ror repnz xchg inc int hlt or jae adc xor movsl lods inc addr16 mov (bad) jle xchg pop rcrl add jg mov loop and ds mov xlat (bad) push adc das mov shl cmp or fdivs loope mov das cs popa adc out mov mov jmp adc in sbb xor (bad) xor out popl mov pop lretw push sub cmp or lds dec cmp jnp shl dec inc add mov (bad) int3 scas lods scas mov popf adc out (bad) adc mov int add adc sbb mov (bad) mov or bnd pop sub cmp adc and call pop lret stos rclb in sbb pop adc jmp mov push test push push in cld in add (bad) movl jnp fwait xor aas jo mov negb adc xor inc cmpsb (bad) adc mov sub inc mov (bad) mov jmp shll push cmp push push fs adc fsubrs adc mov lret mov dec sahf mov jp (bad) repnz cs cmp adc clc mov adc addr16 jp mov pop rep mov jns cli sbb nop xor mov (bad) mov fiaddl mov sub je dec insb rcl iret pop dec or lock icebp rolb mov stos xchg adc in push cmp mov adcl into sbb or mov mov mov out mov xchg (bad) (bad) xor sbb sub adc das pop imul pushf in jno jns xor dec dec adc aaa out ficom inc cmp pop rcrb mov adc loop push (bad) pusha fcoms hlt jbe lcall (bad) xor mov ss mov push adc adc fiaddl fwait out clc xor xchg or and loop fcmovb fisttp inc repz push (bad) inc test imul test or or nop addl xchg fldenv jae (bad) dec jb jbe lock (bad) xor adc and sub add fsts cmp stos in mov daa push lds scas enter mov jnp out inc push movsl or mov divb adc ja loop imul xor jl push jmp adc jae push pop mov adc jp pop dec enter push cmp aaa orl adc loop cmp lods das stos or roll repnz dec adc and sarb mov or add xchg adc or es cmpsb mov inc insl rorb inc lea in adc sbb push mov out push inc pop (bad) jb pop nop fnstsw lret inc out push sub hlt push imul add add mov (bad) xor shll inc xlat adc repnz jb sbb lahf jo cld lcall fnop xor adc push push notb aaa jl cli push jp mov mov iret add cltd jmp add sbb sbb mov add sub or dec lahf mov sbb popf rcll xor adc push xor fwait mov pop mov xchg pop mov adcb jecxz dec xor mov mov mov adc mov mov xchg das adc lods xor movzbl adc mov cmpsl dec daa lods movsb andl mov push jmp movsl sahf pmaxub adc mov (bad) adc adc out or adc out movsl outsb adc xchg xchg dec test imul scas xchg adc mov xor mov mov xor cmovp sbb sbb adc shrb push adc gs xchg fsubrl loopne movsl outsl xchg adc ja hlt push sbb push fldt clc out adc mov xchg add sbb adc movsl scas and mov cmpsl push aas push mov shrl push subb dec icebp (bad) jmp jmp mov pop xchg nop xlat xchg push add mov shl lcall aad mov (bad) sub add (bad) adc (bad) jae icebp repnz jge std gs (bad) adc mov or xor pop mov scas mov (bad) cltd inc mov mov mov inc mov adc in arpl clc push popa insb out sahf fstpl jmp mov cli adc mov or adc mov clc je fstpt pushl ficom push xor mov mov maxps pop xchg lahf adc ds loopne inc xchg rcrb pop sbb (bad) cltd add repz or adc mov lds sbb mov sbb shll in (bad) sti out js jne jmp jo cld adc (bad) repz jb lock xchg out js fwait in jl cli mov (bad) xchg loop (bad) xchg fisttpll jle int pushf mov sbb push enter arpl mov mov aas adc inc cmp pop dec decb add adc (bad) jle pushl mov stc and pop add (bad) xchg lret shrb (bad) adc add add and cmp sarb adc int3 push stos repnz adc push adc mov xor mov xor xchg xor jp test cmpsl adc repz jg cmp push jge loop popa int3 loope xlat outsl dec or mov pop adc xchg mov lcall push pop xchg mov bound loopne push js push dec test adc xorl xchg push xor pop sbb xchg or add push insl adc es stos in adc gs ret je into xor sbb push icebp jmp xchg nop mov pop je idiv lahf lcall pop and mov add adc mov cmp test repnz xchg mov lds inc mov add gs adc fmull mov out subl push out add adc push jne cmc add mov inc mov xor rcrb adc rolb pushf push adc std dec jge sub ret mov adc or xchg lds adc pop aaa (bad) push inc adc arpl loopne bound push shrb inc adc repz mov push cmp adc ret push xchg iret leave dec (bad) mov add fisttpl pop push fsts jb sbb gs xor fbstp je aaa add mov or xchg adc repz xchg xchg adc ja int3 pop fwait cmp inc in cmp push adc in repnz sbb cwtl sub es movsl dec and sahf pop inc mov popa les adc loop xor decb jle cld imul outsl lock push push adc pop mov pop mov mov dec push jno mov push dec jb mov or push cltd (bad) aas push jg cmp dec mov cmp pushf icebp add inc mov lods mov xchg xchg (bad) fsincos inc jp (bad) push mov adc loopne js in pop out push loope xchg add or ljmp pop cmp push push rcrb dec cld outsb sbb jmp sbb adc sbb adc sahf jbe adc xchg fcomps cwtl in mov xchg pop rorb inc out sbb cmp adc mov dec enter xchg pminsw adc sbb outsb push sbb adc (bad) adc cmpl pop loop bound out pop jg std nop pushf xchg adc out adc scas pop or scas jmp push stos xchg scas adc pop xchg adc dec mov or add push test or mov mov mov lea or mov add mov (bad) and adc xchg and or xchg and push mov adc mov xchg je pop mov xchg xor sbb mov adc xchg sub adc adc sbb mov xor mov xor add jns ss mov lcall pop fistp cltd inc sbb or iret adc push sbb or sahf pop adc xchg pop mov adc inc sbb add mov out xchg movups mov inc add test fild or mov insl rorb push int mov addr16 out mov push sbb stc fwait push push add bnd icebp mov jbe das loope sbb adc xor cltd pushf mov add adc xchg mov xor mov mov adc inc (bad) les inc pushf or pop inc or adc arpl mov push mov add xor push cltd out js in fwait sbbl pop add sbb add notl fmuls pop jnp pushf lahf add pushf popf sbb or lea pop stos adc mov sbb test cwtl add andb xchg add (bad) pushf xchg add adc xchg or fstl or sub push sbb lcall pop sub push mov xor sbb or mov aam adc cmp and mov scas subb add pop mov sbb cmp pop adc add inc adc gs loopne js out add nop rclb addr16 incb jle cld sbb lcall insl pushf call out gs or mov popf xor icebp mov xor outsl nop aas xchg adc cmc out mov inc rcl or (bad) xor nop sbb cmp adc loope in (bad) ud1 sub test xorl (bad) push push test xchg std sti adc dec movsl repnz mov and out pop sti add fs add and or (bad) jmp pop xchg insb adc xor ror add (bad) push inc out jnp inc cwtl roll push adc xor mov out push ret rorl cmc jne pop adc adc dec mov jmp adc rcrl adc rcll in insb aad gs (bad) ficoml pop int or jle adc sbb inc adc inc add add mov inc xor mov inc mov and or mov adc jb lock sub iret pop pop loope sti push jnp sbb insl aam cmp call rcrb loopne movsb nop cmc pop jo ss je adc aad sar jbe or add sbb stc sub push xor mov sti and adc sbb add ret and rol loop orl adc cmp xor (bad) iret mov pop push out insl js in fwait push fidivl pop and rcll add push sub mov sub div leave xchg insl adc xor mov push insb ja and cltd jle cld push arpl mov cmp pop test adc mov popf cmp mov cmpsl push inc inc data16 cltd mov mov movsl jecxz cmpsl add inc jmp test xlat arpl mov fsubr push and icebp pop adc lock (bad) adc les hlt jl add inc push push mov and cmc addr16 notb mov cmpsb mov xor xlat adc pop and adcl shrb sub in adc imul fildl out xchg add and add and pop into (bad) pop in scas orl das decl adc mov lds xor dec push xchg sbb or push pop adc repz push sahf ja (bad) divl in cmp inc push (bad) adc jge loop add call in or pop sarb adc add mov and xor or jmp or ret and arpl adc sub adc push in jb push repnz push fsts push mov cmp mov and pop aad repz xchg push dec push adc (bad) lcall inc xchg (bad) adc ss mov mov push loope dec outsl sbb push push out jne cli jbe dec jnp adc mov mov mov in (bad) test rcll fsubs adc lret cmpsl dec pop fstpt in sub das pop fcmove (bad) in adc mov in lds and test adc negb ds sysexit adc pop int mov mov mov add scas shll inc std xchg mov push adc or je xchg add jne (bad) aaa rol xlat sbb add fdivrp adc cmpsl mov test lods pop xor adc and adc imul mov push cmp adc mov jnp fstpl loopne fcoms xchg sahf pop add adc testl pop xor adc or lret aas push xor incl fildl call out inc add test inc mov (bad) call sarl adc repz popf adc sti daa leave pusha jae adc push push sub mov test outsl mov ret fsubl ror mov nop aam push jns sub pop add test push test imul cmp push dec or and add ret vminpd out lret (bad) xor lods (bad) outsb adc arpl mov add ret pop mov or push pushf dec adc (bad) arpl out fnstenv adc (bad) pop jne inc cltd loopne in add lret stos add (bad) test push mov mov pop movsb lods popf sbb (bad) (bad) leave pop dec outsl cmpsl sub paddusb mov adc lds mov push sbb xchg jge and pop add xor rcr pop ss movsb add call add jo sbb adc pop lahf (bad) sub int mov xor sbb pop mov test adc xor sbb add (bad) (bad) adc stos imul mov loopnew xor adc lret pop cmp jecxz je popa subb mov xchg mov sub aas pop out sub mov repnz add add (bad) and mov dec je les jae enter rol mov sahf std mov jb or fwait sbb nop inc inc adc or mov out xor jns imul jae ss loop and adc lcall mov push popf jb adc loop adc or push jb cmc lea fucomi push add cwtl pop fimul xchg enter lcall dec mov out test mov and mov repz push dec call jg std adc adc adc jecxz cmp jmp mov fidivl adc jb loop jl cmpsl repz enter hlt adc icebp push lock dec inc arpl or sahf mov mov jns sub fadds inc (bad) cmp jae addb out mov dec adc and xchg pushf adc scas push and outsl sub in adc adc cltd adc inc stos mov clc adc and fistpll jnp ret lock jne jecxz sub adc mov popl xchg rol mov jge fisttpl sbb jle or pop mov jmp push pop dec cmp xor adc aas cmp or nop andb test add loope mov mov js inc sub stc lret jbe cmp xor or pop adc xor mov xchg int3 lds add test push mov minps xor and xchg (bad) mov push ljmp aas subb adc ficom pushf adc mov or mov aas pop add cmp std sub dec xor ret les repz adc sbb js,pn aam and adc psadbw xchg rcr adc sbb adc jecxz sbb mov (bad) pop adc mov sbb hlt dec mov adc inc aaa dec cwtl out adc sub mov jnp adc outsl cmp pop les xchg aaa pop cmc cmp test push mov test mov pop xor adc pop jl imul mov push xor lock adcl movlps and and add mov adc xlat mov sbb repnz aas stos or pop test ss mov push lea dec adc test loope add out shrl addr16 xchg xchg imul push inc das push adc mov or xor pop push lea jae adc pushf inc sbb push xor inc iret adc inc mov testb adc push mov pop pushf jmp adc inc pop mov xchg repnz adc xor jbe stos aaa inc int3 pop aas xchg movsl nop xor loop insb call adc sbb push mov popf das adc lea ror adc sti movsb imul cmp imulb jbe adc sub push sbb popl aas sahf add pop and adc mov jmp int enter aam imul or mov sbb lea cli dec lahf mov adc in jo adc test adc or rcll jbe ljmp xor enter cmp test inc adc dec xor (bad) xchg xchg lcall ds xchg adc xchg mov out jmp push mov or mov mov and nop insl hlt mov add push add mov scas push sub popf sbb in das je cmp stos (bad) adc mov daa add adc jecxz outsl fist aad insb negb dec mov (bad) (bad) mov ret sbb xchg xchg cwtl cmpsb notl pop in lds push stc inc sub adc inc arpl jb inc adc and fdivrs jns sti sbb xchg or pop xor popf arpl cmpsb lahf lea out pop mov xchg (bad) mov sub adc sbbl aas jb fsubr adc cmpsl sub imul ds adc test add hlt jle out xor adc cmpsb mov insb adc xor test inc mov test mov enter out inc xor adc sbb into mov push test adc cltd sbb jne dec add ljmp jle imul cwtl push push xchg leave popa stos inc hlt movsb sub push adc add rclb sbb daa sbb mov mov adc mov inc sbb and movsl pushf test xchg xchg cltd dec push adc orl jge dec movsl push adc mov mov adc xor hlt lock mov or xor loop dec (bad) mov adc mov sub es or cmp ret js (bad) rcl jl sbb movsl dec nop mov cmp and push into repz or loope cmpsl or xor mov loopne pop in or jno scas push adc sbb inc mov inc mov sub dec mov addr16 adc xchg or sar imul roll scas mov push jg or adc je cmp lds loopne xor fiaddl mov sahf nop adc dec or ss cli xor mov dec daa jp adcb mov or add push hlt leave ja jne aam cwtl xchg mov pop cmp push xor mov mov pop sti push js iret adc mov lahf test adc or insl pop loope mov mov (bad) mov add dec (bad) insb adc js and cltd jle sub rcrb mov sbb jecxz mov xor jo loope adc (bad) out pop jg xchg push ss or mov jnp xor mov outsl mov shlb popa test add sbb xchg repz mov xor loopne cmp mov cmp jmp dec mov ror aas sbb in xchg fldcw adc pop sbb fstpt sti and mov rcr repz data16 inc mov or jge pop loopne lods rclb cmp cmp test mov sbb ljmp jne les (bad) repz jle (bad) fisttp adc shll into adc dec inc adc inc daa (bad) cmpsb push movsl repz outsb pop stos push ss sub sbb data16 imul mov push adc adc (bad) jl cmp ret int3 in mov shr inc out leave add (bad) fdivs mov aas push subl arpl mov leave lahf mov addr16 rclb mov mov lahf adc mov jne sub add int3 sub std sbb cltd test pop xor mov add adc stos les (bad) add cwtl (bad) adc (bad) cmp out fcoml xchg adc enter mov lret repz dec sub mov jns jmp fstl int3 jo cmpsl dec ss adc push push inc mov mov adc inc push test mov ja add fstpl or sbb xor push inc mov stc call pop adc jns push cmpsl js popa xchg pusha sub add std push adc in jb add (bad) dec adc mov mov and jno popa or (bad) mov adc add lock fildll dec mov add aam push loop mov negb scas sub adc pushf mov push mov mov xor sbb pop ror out sbb movsb sti sub push add nop js or pop ja adc xchg adc popf xchg adc adc rcll repz inc arpl xor andl repz jg jmp call xchg lahf mov adc xor xor dec jnp pop adc inc jo xchg jne adc pop pop mov adc xor push int call mov stos add jns sub pop or pop jnp adc jp (bad) push sub lea fisttpl adc adc out xchg into dec adc (bad) cltd mov lds (bad) xlat adc dec fldt and push fisttp jmp xchg mov insb xor or sub and cs sbb adc mov negl cltd jbe or xor sub leave stos adc cmp ljmp nop out enter lret pushf pusha adc add push xchg ss adc mov loopne leave mov sub (bad) (bad) adc xchg cmp jne dec jb popf jecxz nop push insb or cmpsb lret in adc pop (bad) hlt data16 jno scas adc outsb mov adc lret xor inc imul pop out jae adc push les jne adc sar test sbb test xchg mov nop mov pop aaa or enter sbbb jnp jo xor cmp aad xor out mov mov mov stc in mov add push adc andl adc mov repz cmpsl inc test adc sahf pop mov sbb jne adc fstpl pop inc mov add xor xchg cltd jb mov push cli sahf js mov stc into push mov addr16 call push push adc jg sub adc xor (bad) repnz xchg push xor cmc xor and xor sar xor out xor movsb add jae adc sub rcrb mov mov (bad) adc adc push cmp imul mov ret and fsubrl jb,pt lcall andl jge pop lock adc (bad) adc add sbb mov (bad) jo cmp adc ss arpl fbstp jge push pushl add int3 cmp sbbl in adc outsb adc js pop mov add add rol lea mov sbb and movsb adc push subb adc mov cmp cmp or clc xor mov ljmp lahf orl mov adc daa xchg mov inc jno pop push or jne scas ja popa dec inc ret mov cmpsl inc mov inc mov adc or loope stos rcll xlat clc xchg sub and insb xor mov sub repnz jno mov push sub adc pop xor nop addr16 repz jo scas xor or adc out push movsl adc cmp loopne cltd in fs test or popf int add sub add and (bad) out in sub push stc std xchg adc (bad) and fs loopne push adc mov loop out sub sbb cltd mov push popf out dec pop mov mov xchg xor cmc lcall pop popf add adc test adc mov out imul aam or fcoms adc in in cmp jbe test inc inc sub shll ja sbb adc mov into jo in sbb adc fadd push notl aas shll dec call bound (bad) pop adc jno push add and aam addr16 jmp xor adc pop leave or shll rcl les rcr adc pop aaa ret push xor call rcl sub icebp lock in pop sub adc push or fstps sbb mulb adc popa repnz jl in xchg movlps movsl add lods fild adc icebp (bad) cld jmp adc jae pop mov sub push pusha inc outsb fnstenv cmpsb lret sub int jnp mov shr pushf add mulb cmp (bad) xor jnp jle adc adc test push add subl and mov mov adc jne pop (bad) (bad) and data16 daa test mov push cld mov sbb cmp fcoms (bad) or and movsb outsb ficoml cmc dec call sbb jne movsl scas inc (bad) add lock or mov data16 pop inc leave push xorl mov insb adc inc inc push xor aad adc add or or adc and int3 push push sub and repz pop or cmp nop and das add fs mov xchg aad adc push push pusha xor cmp adc into mov pop mov jno lock xchg fs push adc adc je inc scas sbb adc aad fmul add xchg xchg mov mov adc inc add cmp insl (bad) aam sbb sbb mov mov mov lret nop mov stos loop (bad) notl add mov pop sbb pop pop pop mov push xor sbb lds aas not or lret repz aad pop orl push (bad) pop xor push add insl mov ss cwtl or mov (bad) jbe push sbb lahf inc mov rcrl das es loope adc mov pop mov jp mov fidivr sbb sbb inc push add jne adc fsubr push jb cmpsl repnz into incl xor adc xor xchg es outsb push push adc (bad) cli or notb sbb xorb push or cmp ret pop les mov scas xor xchg sub adc xchg in je cmpsl pop mov mull adc shlb xor push xchg mov inc insl pop jl adcl pushf incb sbb out lea int3 out cmp loope sbb outsb adc neg inc pop jecxz cwtl push mov inc jg jge repnz jmp scas mov repnz dec add jecxz adc (bad) stos xchg test dec mov adc cmp enter fnop adc mov push sbb jp add shrb cs mov (bad) adc add test aam jne mov add mov adc mov pop sti pop adc xor enter adc movsb xchg xchg mov nop dec sbb push scas aas adc push mov stos adc adc es push into adc aaa fmul mov pop outsb scas in add adc test je scas mov mov mov jns out adc shrd add jo push imull jmp sbb std pop out ljmp out stos rolb sbb mov xor (bad) dec lods popf add push adc pusha jmp sbb bts mov xchg js lock xor adc fmuls sbb jne cmp pop cmp or mov and adc das out pop addr16 jno and lret or jo mov and fdivp xchg pop repz loope outsb lea loopne je aas sub and call movsb mov fistpll xor (bad) rorl cmovns mov daa add ja popa inc addr16 or jl mov add cmpsl movsb adc adcb mov cmp xor sahf xchg test sub inc sbb (bad) lret adc pusha pop mov int3 adc mov cmc pop adc divb sbb sbb adc scas cmpsw int cmp xchg xchg insl sbb dec aaa enter in push add je adc fnsave jbe mov sbb mov sarl sbb (bad) xchg inc sbb sub xchg adc inc xor mov les mov mov xor mov insb std jno imul push xor mov or out mov mov pop jle (bad) xor sub inc xchg pand mov inc mov pusha into es (bad) fnop push daa out add sahf or jno enter adc lock and add je pop push pop jmp repz mov fmul repz push decb cltd test shrl adc jb sbb pop fisttp jle jno int3 lcall ret adc xchg (bad) loope mov testl roll or daa dec mov jb fnstsw adc or add sub push clc adc inc pop (bad) scas mov addl adc lea jl sbb hlt aad adc pop imul enter int3 add and (bad) cmp mov inc adc lock pop sub pop test (bad) dec mov fild jg inc adc scas add je daa adc mov es pop dec mov stos popa cmp xchg xlat push test subl mov into xor mov loop add adc inc sti cmp (bad) repnz cmp push push dec adc nop test add inc lods into loopne cwtl js adc push stos cld mov mov or fldcw adc lock test stc dec or movsb addr16 adc dec mov adc nop dec sbb jns shl lcall lods adc cmp lret repz rcl fldl add sbb jo shll xor inc ss fxch ds mov pop inc mov loop cld xlat mov or pop push out sub (bad) out push adc lds jg mov adc into sbb push iret add add rcll or ret mov andb pop fs jp and mov shll or lret mov dec inc adc insb and dec bswap repz xchg push push pop jae mov bound jns (bad) or fcomip mov push int3 cwtl das ds imul ficom xlat mov jmp mov add or mov rorl xor jne add fwait or push pop mov popf jge jp xor lea push mov rorb outsl adc fwait aaa popa iret xchg out (bad) hlt ficom popf je js jbe jnp (bad) mov cmp in mov sub adc pop enter rcrl rorb add cmp mov cmc mov fwait (bad) pop inc rcrb iret jbe adc jns adc test jne pushf add inc add shrl aad test sbb lock sbb push xchg fildll dec out lea dec loopne cmp jl dec mov (bad) jae lcallw xor mov mov adc push pop cwtl dec cs xlat cmc mov mov mov mov jbe hlt inc bnd (bad) mov xchg push push adc int adc dec jmp or mov sbb push jmp fs mov push mov mov adc stos and adc int3 (bad) fldl movsl adc loop lods adc divl bnd cld inc add sbb and push push ss (bad) fsts fcompl xchg rol push cmp push div mov mov or add sbb xchg adc mov sti adc lds cmpsb push leave call sbbb sub mov or and cmpsl fildll push xor frstor mov add xor push push cmp mov cld adc or fimull and xlat adc mov xor mov pop xchg cmpsb adc adc test (bad) dec sbbl adc enter xor fwait push in cmp inc sub dec pop cmp mov aas sbb adc sbb outsb mov adcb sbb push jmp jmp bound in outsl test mov adc jb xchg (bad) adc out and outsl xchg imul adc loop and mov scas lcall out sub sbb cld mov mov stos xchg inc jmp fdivr mov push out imul adc (bad) movsl xlat push into mov cmp pop sub mov cwtl fs or xor xchg jmp push mov daa fcmovbe ljmp cmp xchg and es daa jp loopne push fistp repz mov daa int (bad) pop jecxz add adc pusha sbb bound mov xor pop cmp adc add cmp sub inc push repz inc bound bts and outsb jne mov push and pop out push inc popl cld jge test adc push pop dec out js mov mov hlt int3 fs adc mov pusha jge mov or fcmovb (bad) xchg adc cld lret mov push arpl push in adc (bad) mov adc cmpsb (bad) dec loopne adc sbb adc test inc fdivp leave adc and pop and stos adc mov ljmp into adc mov push aas aaa (bad) dec cwtl outsb xor test push lret rclb mov loopne loop adc adc cmp adc jbe cmp adc fwait cmp sub loop adc fcompl pop add xor sbb xchg push push (bad) adc mov xor adc mov repz loope add cmp sbb ss adc adc int loop fs jb push or xor sbb mov (bad) lods rcll mov rcrb pop or stos adc pop inc cmp es orb out xchg push jecxz sarl repz jb jg sub inc and push push lods pop inc mov cltd adc iret adc lock cli push jecxz and jl push mov push jns push push test fistpl sub addb clc nop xchg mov test adc pop insl pop out iret adc sbb (bad) out stc dec mov or pop mov outsb adc daa xorb cmp add mov push and out or adc sub nop mov lret add cmp pop inc mov aam (bad) pop adc xchg out sbb add lret jae mov jns jp sbb test xchg push sbb pop inc or fstpt in pop ljmp out add aas adc jns add xor jne sbb jmp xor out mov adc or fidivl adc decl sbb xchg dec adc or (bad) ss fist jl mov adc sub repnz xchg dec repz sbb sbb cld adc sub clc enter adc jp cli add test pop movl pop stos pop inc xor xchg add jmp ret (bad) jge mov daa fnstsw pop clc add stos mov dec xor jb adc outsl mov cmp enter fadds xchg pop insb cmpsl inc sbb sti and adc cmpsb rcrb arpl mov repz adc sub ret lea je push ja cltd xor icebp int sarl (bad) cli jmp inc mov xor mov popf sub adc adc jb pop jmp push leave mov push cs pop mov (bad) jnp std cmc adc xchg or test inc or adc pop pop inc (bad) xchg test adc jg cli dec rorl jmp push xchg repnz sub add inc in dec mov sub fucom adc es jge ffree cmp mov pushf inc add mov (bad) mov mov (bad) mov adc in (bad) xchg adc inc mov mov pop leave insb cli or push int3 push rclb ss inc dec or movsb stc repz pop jo jl push or lock mov push mov xchg cmp cmp aas inc sbb push xor sub adc jo adc pop bound popf or std mov mov adc push mov adc lds repz rcrl adc cmp ds leave jbe icebp lea sbb mov gs adc push push sahf lret bound adc or ljmp pop xchg pop adc mov cmp lods mov push lock inc cmpl xlat dec cmpsl std adc rcrl fistl pop jle mov repz roll inc sub dec cmovge and in jmp mov enter lret mov inc call adc mov and nop xor mov aam incl lea mov inc add pop cmp mov mov xor inc adc dec mov adc scas jns js and or and xchg adc rep mov pop ss and mov sbb xchg mov int add jae adc pop es push pop loop insl ljmp mov cmc sbb lahf lods repz insb sti adc or cli (bad) popa xchg cmp mov or cmpsl cmc mul and bound xor or outsb xchg xor ljmp int3 adc les jb repz iret or push ljmp sub call into lcall push push and loope fsubrl push sbb pop movsl sub adc cmp arpl adc ret xchg fcoms iret int nop scas and xor jmp insl add rclb adc cmp pop xor lcall lods or push lea mov aas push cmp push xor adc rcll pushf lret xchg sbb sar out std adc insl push jae lret jno xor or jnp adc adc xor cmp and fwait jle mov mov ret pop into adc iret cmp fnsave (bad) cmp mov lods pop adc scas mov shrb lods pop iret dec push mov adc stos in divb sbb cmp cwtl (bad) fsts in and iret stos fcmovbe dec negb (bad) cmp je arpl (bad) sahf sbb adc cli mov setge outsb cmp adc (bad) in mov bound mov jecxz add adc xchg loop jp mov mov test sbb insl adc jne push push inc jge pusha jae pushf mov aas loop scas add cmp adc pop pop cwtl adc mov cmp pop adc dec add pusha and jnp xor mov inc in das pcmpgtw pop sub (bad) lods out push adc fwait jae js adc aas sbb adc test or and pusha adc lret and xchg cmp inc mov add incb sbb ss flds xor add lahf sub sub test fs out mov add imul pop mov outsl xlat adc pop mov mov vmovapd jmp adc insb inc test add mov mov cltd mov mov xchg daa and adc and xchg push push loopne hlt add add inc mov (bad) inc adc call outsb adc daa xor xor enter sti adc cmp roll mov test ljmp xchg push daa les ret cmp mov and mov mov add repz xor (bad) loop mov loope push cmc add (bad) call push das jno and adc dec mov jge and cmp in dec adc dec rcr jo lea (bad) sbb int3 fisttp test inc lret out int (bad) adc adc clc scas call enter pop adc xchg sub push lods add mov dec inc xor adc inc pop arpl or xchg cwtl adc sub jae xor (bad) cli push mov dec arpl mov aas mov sbb jne aaa xor mov sbb jo add int3 cwtl mov dec in add fpatan sub adc sbb call jbe adc pop mov add mov push push adc jns add ljmp jmp loope (bad) cmp and fstl repnz adc je pop mov cmp add popf cmp push adc mov xchg lea pop mov pop je adc cmp push mov add bswap jmp fadds xchg (bad) jbe mov dec popf pusha nop rclb test cs add sub js bound ret lods adc clc sbb jb jbe and sbb nop pusha adc negb lretw outsl mov daa (bad) mov insl in sbb or into pop adc mov mov xchg jl adc imul cmpsb xor push add je and fidivrl adc repz pop pop xchg mov (bad) lret roll pop mov aam or mov pop mov sbb (bad) push movsl fsubrs adc add ficoml ja pop adc mov cmp mov ds xor into sbb imul adc in cmc mov xchg sub add xchg shl xchg jno mov mov icebp pop pop cmp (bad) je rcrb sbb or adc push or push bound mov sub inc fimul add mov cs aad hlt cli adc xchg rolb mov xor dec xor mov sub and pushf nop xchg lret loop cli lock rorl cs sbb cmp cmp in mov (bad) push adc cmpsb in std arpl js add dec sahf add jne adc or jg adc pushf push jns arpl mov movb sahf scas imul adc inc xor jle int3 xlat jl (bad) sti xor push jp leave fmuls inc popa (bad) dec mov inc pop mov sbb cmpsl fsts xchg lods or phsubbd xor (bad) stc imul push sti sbb push xor sarb (bad) fwait nop out sar sbb adc ljmp in dec xor jg hlt stos jns es pop cmp fsub (bad) repz test or and ret push pop adc test adc ds rol or (bad) cli gs xchg inc adc dec push stc mov mov aad mov push popf pop jo repz (bad) iret es pop adc adc adc xchg icebp rorl push jecxz cs push setle scas loopne push pop cmpb fdivr js test lds push sub lcall cmpsb mov mov rolb das dec jl in mov fbstp cwtl add xchg xor push adc sahf leave and or or je rcrl adc into popa shl or xchg adc stos xchg mov push out or lods imul outsb push jg pop jg cmp sti xor xor jnp sub mov and sub sbb adc cmp mov ja aaa inc rol inc fwait es cvtps2pi mov adc aad (bad) adc push lock bound pushf outsb xor dec inc aad lea mov out pop roll je fwait vmovlps add jo xchg cmc cltd fs (bad) cmpsl cwtl inc lods sbb repz dec xchg adc pop or push adc out rolb dec (bad) stc and pop mov dec ds loop jge pop dec cmp mov sub mov cmc xchg sub pop or mov jnp mov sbb stos jle push hlt pusha sub mov pop jb adc scas sbb out cmp mov cli jp enter int and jne enter (bad) push aam dec jne fldl push dec shrw adc and nop ljmp movsb mov and data16 and sarb pop pop std xor adc loop push adc ljmp or inc test push aam (bad) xchg mov pop jp arpl or mov sub jae adc xor adc xchg int cli or lock fs rcr adc xor stos out pop cld mov push movhps adc add pop mov decl stc add mov mov fisubl xor push adc or xchg loopne sti les mov lret pop pop adc lods repnz adc xor (bad) sbb mov and or sbb lret push js dec mov test adc in cmp ss jno std xchg sbb xchg adc lods xor xor stos add and out pop add ficomp mov jmp cli push cs mov add pop mov cmp jne scas add frndint ss sub imul adc mov movsb dec mov mov rclb out (bad) js mov jmp mov (bad) adc pop emms popf inc push push add dec mov stos sbb adc ret pop pcmpeqd adc push mov das (bad) mov aas adc decb pop mov or fbstp sahf jmp add mov lock sbb cmp and jmp test mov insl data16 jle inc push pushl sub xor sbb pushf adcl mov das bound push sbb add in dec jl push xchg out push cmp icebp mov test inc mov sarl adc out cmp pushf mov xor xchg into mov cwtl mov stos in and adc xchg adc into xor xchg or jnp xchg stos cmpsl push add push fisubr xor iret (bad) test mov adc jp sub ffreep lret add loop push mov adc scas outsb aaa jle cmp fmull and sbb fild mov mov adc add fwait int mov or pop jnp adc dec outsb xor aam (bad) lock pushf xor out or sarb adc pop push enter mov in pop lret adc dec adc adc mov xchg ds xor mulb adc (bad) js adc neg jbe inc aad sbb out pop dec cmp lods imul add adc out cs cmp mov sbb xor xor dec adc adc adc adc lock insl xchg jns addr16 mov adc jl xchg outsb aas mov ret sahf add js out or repz inc outsl add xor push or imul push push scas int adc lds mov outsb popa in (bad) dec dec scas mov das xchg jge into pop push rclb lods add jmp outsl (bad) cmc adc enter mov stos bound out je adc and adc adc loop pop push adc mov xchg adc jb jae leave adc in and jmp xlat shrb sub cmp subl into repz adc mov or sub (bad) mov add dec jb mov sbb enter fdivr cmp (bad) sub lods insl mov clc push adc cmp pop (bad) adc aam dec nop xor test inc mov dec sbb cwtl subb out call jo aaa xor add lret sahf mov mov outsb lea mov mov outsl adc xchg inc in jecxz push add repz sub xor mov add je dec inc jmp mov in (bad) push adc loopne and or jecxz subl xlat adc inc enter jae adc lret add mov loop (bad) add adc jl push hlt movsl pop adc sub mov js add pop sbb imul adc call stos lods xor movsl adc scas fsubl xor call push cmc sub mov shlb aam jbe mov push lods xor ja jb adc mov inc xchg push lret push in add mov test push (bad) push es loope adc test in loop xchg int add and (bad) jbe repnz xor xlat or pop push push jo mov mov or pop sbb add adc xor pop lmsw xchg jmp jecxz mov stos jge adc push xor cmp repz push in les push (bad) mov inc lods and xlat mov std push lea int xchg jns test adc in clc mov jo rorl adc cli (bad) xchg xchg loopne jmp (bad) repnz (bad) les js aas push push push ret cmp inc push adc lods mov sbb mov or add adc lcall jge ljmp nop repnz mov int3 ret mov scas xor in cmp inc loopne cwtd push xor or mov (bad) icebp push aad and jge adc dec xor lods add js pop cmp xchg xchg lahf bound fsubrs cmpsb push adc cmp inc adc mov adc stos dec lods inc jne and ja adc (bad) bound clc jb in jnp or js and pushf (bad) adc into xchg scas lds fxch sbb bound adc add sbb dec decb insb pop cmp inc push jbe ds ficoml addr16 xor mov cld mov shrb mov jmp cmc add mov adc in or lret jp jo push in xchg repnz dec ficom pushf xchg push movsb lods dec std adc sub xchg mov sub xchg jne adc repz jae inc aas adc push mov das xor in or (bad) in add movsb cwtl imul adc movb adc xchg cmp je mov push jo cmp shrl in adc inc shlb adc into and adcl rol push int shlb sbb test in adc add les mov xorb dec pop (bad) lods rorl push iret and add sbb adc add dec into enter sub mov xchg or imul fmuls aad jmp or add adc fs sbb jge cmp or pop or sbb fwait adc add mov mov (bad) pop mov aam jns aaa inc (bad) xor xchg jp shld adc (bad) stc pushf shll arpl jge ret adc push xchg testl adc xor call inc movsb fldl mov xor xor jmp adc aad xor pop test scas adc outsl sub in mov data16 rcll xchg adc rcr mov ficompl pmaxsw test jnp (bad) int3 arpl push andl adc sbb imul pop test (bad) out pop bound inc lds sets sbbb xlat pushf inc push push jmp leave imul in inc mov lea adc xchg push mov pop test ficom dec or cltd aam jl test mov ja adc pop mov js test adc jecxz jb jne dec adc xchg xor adc dec mov inc adc ja jns out dec lcall repz ljmp push andb popf push adc xchg and mov pop jecxz xchg lods loope dec adc and jb (bad) cs xor push adc xchg adc and dec jno (bad) loopne call dec add test mov and mov xor mov out mov sbb cli add dec loopne and (bad) sbb mov sbbl jae adc (bad) lds fisub xor or sbb push fsts xchg loopne call adc mov sub nop dec (bad) adc mov xchg arpl test inc adc clc data16 mov xlat pop pop jne inc sbb les add fiadd adc daa sub fldenv lahf xor shr ret imul jae leave test in aaa hlt nop add fstpt std mov cmpsl cld push mov mov adc ljmp adc jle repnz xor dec adc sahf rclb xor in jl pop sbb adc ret in std ds into adc xchg mov xchg or or pop mov cmpsl (bad) scas inc sbb inc fs adc popa sbb jmp jne inc adc inc lea fnsave xchg cmp pop sbb pop repz push rclb add push inc not nop xor xor sub adc inc mov adc bnd push movsl imul rorl and inc popf inc adc push lods xorl sbb adc out rcrl mov or sub inc pop (bad) in aaa xlat or adc pop and jl pop in dec mov inc cs sbb movsl lock pop mov pop adc (bad) push mov mov stos xor fistl adc cmp sub sahf pop (bad) pop sbb xor and push mov fwait dec xchg adc lods out jne mov in adc stos out inc fdivrs inc cld inc add pop mov out add paddd out out mov adc shll int popa rclb (bad) cmp mov lcall add (bad) in adc sahf fwait jmp fildl push daa fmuls test or jecxz mov or adc xchg and into inc hlt stos loopw mulb xor mov (bad) fadd xchg (bad) jg mov and mov or gs fistl popf inc rclb dec dec jbe mov sub add lds adc scas decl sbb adc sbb adc stos bound ret rclb push mov dec jecxz push comiss adc mov cli fiadd je inc mov out out fidivl (bad) aaa sahf mov adc jnp out xor pop and pop (bad) sbb push shl inc (bad) scas pop jp add clc mov mov xchg (bad) mov push xorl pushf adc sarb mov insb dec rcll arpl out add jmp lods js insl and loop or push outsl pop and lret add je mov sub outsl gs add adc jp mov test push xchg iret (bad) adc fbstp popa in jge divb jg sbb (bad) xchg pop sbb (bad) mov (bad) fildl mov arpl inc leave cmp leave pop adc xlat inc sub mov cmp add fsubs jnp fistp xchg push adc imul cmp adc jg pop mov and fbld sbb adc shrb dec out (bad) call in dec fwait xchg lods mov daa pop mov push xchg hlt stc xor je jmp pop (bad) imul jge inc xchg (bad) pop sub and imul pop pop sub lret adc adc neg mov add lock fwait cli out test std (bad) mov mov pop es lahf pop notb (bad) mov inc dec mov and mov add jg and stos aam movsb jmp dec sub lock pop xlat adc sub xchg (bad) lods mov push fwait adc loopne fcoml fstps mov pop jae adc xchg sub xchg push xchg repz out push ds repnz lret ret mov (bad) sahf and lock dec inc adc mov dec adc dec inc pop jne fist push (bad) push imul adc push mov sbb (bad) (bad) or test jmp xchg (bad) icebp shlb sbb adcl cmp mov mov outsb loope aaa scas adc test xorl sti outsb mov aas cmp nop dec push out push fnsave or or and repnz (bad) popa les or adc iret mov adc add not mov loope test mov lods int push adc popf mov outsl scas fsubr nop lea jecxz (bad) pop push pop mov movsb mov jge push adc dec cwtl (bad) mov divb adc jb adc or inc jne jno insb nop mov ret adc cwtl enter adc lock mov push pop jecxz out or adc aas pop test xchg mov push xor add (bad) cmp mov or mov flds dec stos sub sbbb aaa repz lret cmpsb add mov add xor push add cmp in iret pop mov dec outsb fwait mov hlt test push shlb rolb stos cmpsb lcall adc loopne xor mov mov jo sbb out dec int3 adc sub pop (bad) jl mov cmp or rcl movsl mov sarb into faddl sub adc fist in sbb lcall addr16 sub int test adc stos repnz dec jl xchg ret bound add adc repz gs xchg (bad) lret push andl pop xchg incb in aad adc adc mov data16 mov das mov push mov mov dec mov imul decl and jp mov sahf cmp mov adc cs xchg mov in scas or or imul ds inc sub push mov push insb ret imul (bad) sub jne outsl xchg fabs repz or cmpb js adc dec adc je mov ja clc repz aam dec and mov push rcll or pop dec adc call pusha adc addr16 push xchg aaa jle maskmovq divl adc je push mov sbb cli dec fwait adc xorb mov lock push fs lcall push push (bad) cmc movsb or ds adc mov adc and outsb adc mov mov xlat movsb cmp cmp enter insl movsl pop fisttpll push roll fs inc adc popf cmp xor sub mov cmc or and adc test sbb push fsts cmp fimull adc adcl (bad) lret jne and (bad) xchg sub add mov repz jp nop push pop cmc pop mov xchg (bad) sbb (bad) jae cli adc stc adc mov mov jmp repnz test je mov push mov lret imul mov xor in push aam jnp jp inc mov nop adc lock or out jge outsl in mov xor push call mov mov jle (bad) in jl or movsb std (bad) negb pop lahf mov sub es ds adc jecxz (bad) jp loope sbb mov jb inc mov xchg adc je mov stos adc cld fimul push sub adc nop mov pop imul inc bound lods adc in and add adc ret ret xchg lds jmp push and adc test cmp (bad) mov and mov ds lds cld add in pop push mov mov stc imul cmp mov lods mov pop mov add ficoml jo mov and loop pop mov cli sbb jne addr16 jnp adc jns test inc add out adc cmp add mov clc mov add out or adc icebp sbb mov cmp push outsl inc mov inc mov pushf or bound pop dec loopne or in movsb or pop andl mov adc add fdiv in xor bound adc test or xor ljmp repz mov lods sub cmc (bad) mov or jmp loopne mov rcl fwait adc cs push pop repnz data16 xor xor push std fmuls adc cwtl mov pop aaa xchg cltd jge mov adc xchg fadds xchg imul addr16 and sub (bad) sbb adc enter stos lret adc roll mov cmp ret xchg outsb (bad) push adc add ljmp add xlat jg lods or mov inc adc rclb jo decb adc pop mov adc mov xchg dec adc push jbe out fchs xor adc pop iret dec adc push inc call jle lock add inc inc mov cli cs mov mov push inc in and add sbb adc sub shr jns or aas xchg aaa jne int3 in sti ds xor cmpl mov arpl and add xor imul rcll sub in push xor jge or testb lret lods (bad) pop adc jle and pop xchg movsl adc (bad) jp aaa xchg mov mov xchg or push sbb mov jne sub lods arpl xchg xor mov xor pushf inc or add in (bad) pop es pop mov jnp jbe lods lahf lock jae adc and aam add add dec iret cli push int adc dec adc fisubr dec sub xchg pop fdiv (bad) push add popf fwait out jge adc bound adc movb inc data16 (bad) scas adc xchg mov cld cmp mov pusha mov out mov fiadd jp cmp adc mov loop adc push lret lds inc fcmovbe imul adc push int3 (bad) xor repz push into sub mov fsubrl or or test in fmuls xchg daa (bad) aas ror mov into push aad icebp faddp add lds sahf cmp adc ret subl or sub lods add cmp addl or adcb clc mov mov cltd xor pop (bad) pushl mov cmp fistl pop pop mov sub movsl (bad) adc mov hlt xchg cmpsb push jno and adc inc scas dec and cld mov push inc mov cmp stos fdivs adc push adc mov push (bad) add adc adc jne jle cmpl (bad) lock add lea mov cli adc mov adc add repz dec add dec and test cmc lcall mov fstpt mov jno les push repz cmpsl jmp sahf int into pop push popf lea sbb lods icebp out xor adc mov sbb es rcrl inc mov subl mov addb xor adc aas xchg adc pmullw adc iret jb aam xchg gs sub fsubr fxam or (bad) pop and pushf fisubl xchg stc nop pop adc cmp sub adc and adc scas cmp repz adc or sbb sbb imul cwtl push repnz xor inc sbb inc and test adc sub push adc add outsb adc scas jbe pop inc aaa call cmpsb dec dec pushf dec sub loope xor fadd adc out or jbe push test adc adcb ja fdiv (bad) decb inc sarl pop xorl push or jo mov in push mov mov xor add adc push movsb push imul adc shrb adc ja js mov and fisubrl scas add data16 inc pop int xchg pop rorb sub (bad) (bad) ficomp fwait sbb imul or xchg xchg cld mov jbe adcb and fstl testb adc dec sbb mov add jg mov jp (bad) mov fistp repz mov call or mov and sub jl in sti cmp jp add dec pop scas iret inc mov push xchg push roll add out adc xor xor ljmp mov push hlt stc leave loop sbb sub lahf mov les jl in adc cmp jmp dec repnz fiaddl dec jno movsb ficom nop ror stos cmp jae in xchg call div imul inc adc push pop shrl push xchg frstpm(287 push or mov xchg loopne push mov testl push inc adc addr16 cltd sarb inc xor daa mov xor inc cli mov sbb dec jbe outsl (bad) add into jle pop add std ret jb mov test in sbb sbb (bad) arpl adc push cld pushl pop mov cmpsb into (bad) (bad) mov in adc andb adc mov (bad) clc mov ret jp lahf sbb or cmpsb inc sbb pusha adc test dec sub mov dec popf mov xchg sbb mov arpl jmp rorl pop out int push pop (bad) (bad) mov in and sbb adc mov repnz loope jecxz shll mov out das and stos (bad) es xchg dec cmp pushl popf pop aam sbb adc imul fcompl test loope xchg lock bound repz cmpsl pop test push mov or daa fbstp inc mov stos cmpsl push sub in add add and stc mov lea shll (bad) or addss xchg pushf adc pop test pop dec (bad) lock mov movsl or rorb xor push mov icebp push sbb cmpsb push adc cwtl pop fwait xor xchg cmp sbb call repz or push jecxz sub jmp adc leave cmpsl xchg shrb add fisubl fcmovnu imul inc (bad) jecxz ja (bad) mov adc fdiv mov inc mov adc xchg repz adc arpl daa xchg lret adc xchg shll sbb movsb xor test add dec or scas jmp push adc sbb lret pop dec pop jno cmp cmp lea cmp (bad) mov scas adc add mov popa or xchg adc mov dec mov (bad) adc push scas fstps adc or js ret mov sub outsl xor mov or loop adc xchg jge bound je xchg sbb jecxz dec lds adc mov jp mov mov mov adc mov divb cmovs int3 cmp push mov sub push jge push xor pop mov push aad sub xor dec lea loopne (bad) int stos push dec adc and sbb mov icebp sub add lea lods rep nop stos or sahf aas adc mov loopne dec shr pop adc jae xchg scas sbb lock jmp cmc mov push testb addb pop xor pop adc fisub or sti adc jp xor adc pop iret adc xchg int lahf bound das fist and mov push adc xor (bad) mov aam xchg adc imul jno je pop fnsave xchg inc mov pop xor xor inc nop add fdivl adc ss lcall outsb cmp outsl adc pop pop (bad) adc bndldx and jmp jb dec xchg lea adc inc xchg jge enter aaa in lea adc add lret out adc into or mov or iret scas add inc movsl lret (bad) mov xor pushf pusha sbb rorl mov test add fmul adc push push sub add cltd xor sbb mov (bad) lahf adc jmp pop rep data16 ds mov mov xchg jb lahf sbb dec push jmp mov into or xchg mov adc repnz cli (bad) add cmpsl aad lcall dec addr16 or scas cmp movsb cmp inc mov sbb test jmp (bad) jle sti and adc dec or movsb push faddl adc cmpsb jo aaa xor lahf xor sbb sbb inc jae aad cmpsl dec pop adc cld int push or dec add sub mov aam adc mov dec fidivl jge rclb sub adc cwtl xor push mov rcrl dec adc ss ja dec push or mov inc rcl jne (bad) ljmp adc mov mov ret sti test jo adc or inc cmpsb dec mov stc dec adc mov rclb stc outsb jnp sub xor inc adc loop lods inc fadd sbb or adc mov cmp or mov xor popf xchg scas test ret sub out cmp mov sahf cwtl ja call cmc adc in cli nop pop pusha aas or pop repz push jae lods sbb in sub scas add (bad) cmc repz adc xchg repnz xchg test adc cmpsl lods hlt mov nop or add xchg icebp add mov adc xor xchg cmp xor mov (bad) mov jnp adc sub cmp aaa insb int incb dec xlat icebp xchg adc and (bad) xor in push loope and pop mov test adc adc inc xchg xor dec push nopl decl mov fnstsw int3 adc cmp seto pop push sbb sbb lahf popl sbb push popf cmp dec iret adc cmpsb sub push enter mov imul pop int3 orl add stos aam call dec push xchg ret jne push pop sar movntps add xor es or inc in mov adc mov add jp push mov adc das (bad) add dec cld push aam sbb push std inc or repnz rolb cwtl add mov test dec dec rorb adc addb movsl dec ss imul repnz nop lods pop pop scas mov das sbb lea ds out push jnp out jmp cmp jl test push push sbb xchg jle ss sub cmp sbb push sbb adc xchg xchg int3 mov out push push hlt cli loop mov xchg xor adc add jecxz mov movsl push mov sbb adc mov arpl shlb ljmp cltd adc and fcomi or xor jmp lea adc popa adc ficompl (bad) cs popf mov lods fbstp rcll fistpl lret mov leave mov lods ljmp add sbb sbb mov shrb add push pop jns nop push cs xchg xor push sub mov cmp sub int js push mov xchg adc sbb push pop xlat sbb iret mov jle ljmp adc je pop jmp das int3 loope pop push js sub ljmp add xchg (bad) out mov cmpsb add or inc or and adc add stc mov bound mov xor xchg into adc jge mov xchg adc mov jno outsb (bad) cmpb xchg stos mov pop cmp pop sub (bad) aas push push aam adc and xchg dec bound adc mov out dec mov push mov sbb mov cld jmp xor lret incl pop jge xor or xchg xor mov imul jne xchg gs inc pop push adc adc adc cmp sub insl adc dec in lahf xchg add xor pop cmpsl (bad) testl mov mov lods stc mov add repz repz mov int cs mov repz mov or mov push mov add mov pop fidiv clc (bad) imul xchg daa jb iret dec ud2 sbbl loopne sub out and cwtl push out xor js sub and push jae es or mov push xor adc xor fwait jnp add xchg mov jl lods in xchg test in neg js pop lods adc ficomp sub leave popf adc lahf adc add sbb adc add enter jne cmpsl ja xor or pop mov mov adc jo mov int3 nop rcll dec mov cmpsl push add adc popa out sub mov mov int insb and shrb or fcmovbe aam int hlt dec mov jb cmp push xchg ret dec cmp repz sbb rcrl lcall (bad) lret xor fnstcw out adc mov rcl fidivl adc cli jns lea xchg imul shrl cld (bad) lock or or sbb adc (bad) and imul jl adc add cli ljmp xchg lds jmp sar shrb les movsb jg xchg in daa test pop fwait cmpsl mov push ret xor inc mov xor je inc xor xlat int3 sub insb ret add sbb stos fdivrl mov test and xchg (bad) jne jp in lods (bad) stc pop (bad) lods fldt adc call mov (bad) mov adc pushf sub fwait xor in icebp sbb adc in and lods xor adc (bad) cld push icebp (bad) lock cmp jge sbb in adc bound cmp adc or out adc icebp nop xor mov jnp push mov stos inc ret scas mov xchg rorb ss pop pop or popf add push sbb mulb repz mov mov sub sbb sti rcll into push xchg popa in jmp push mov adc jp add mov cmpl cwtl in fwait cltd (bad) (bad) cmp inc push iret sub mov pop loop gs sbb jb xor in push or jecxz inc scas cld mov fildl adc repnz lret jns add adc inc mov (bad) push adc adc iret lock xchg aas fwait test sub ljmp pusha adc ss sbb mov in xor dec mov fs dec repz lds push addl mov popf fidivl mov int3 add rcll je out mov lahf out adc std popf xor movups adc sbb jns hlt mov dec pop xor imul in add iret js mov adc out jl inc dec aam lea ja pop and xor seta push mov scas in xchg aam cmp sahf (bad) out pop xchg fidiv loope cmpsb (bad) lock rcrl ds stc jbe sub adc ret fidiv aaa mov adc xor adc mov push inc inc xor cli sub xchg push xor pop xor cmp xor mov mov stos test dec push faddl adc cmp adc xor div imul pop adc sub adc movsl add mov loope sti inc mov fild mov adc faddl mov add jge and adc pop loopne test fcompl adc dec ud2 sbb cmpsl xchg scas mov mov adc adc add sbb adc adc imul adc mov sub lret rorl in xor push xchg pop arpl or xchg lret out jecxz xchg lea test push xor push or cmp ffreep cltd sti lds adc adc inc pop adc daa cmpl ds stos cmp pop test xchg add jnp pop je push mov mov xor sbb test push leave mov add cmp adc inc xlat out mov nop mov jge or adc mov and push or adc (bad) adc adc xor mov mov adc pop cmp jno inc enter mov pusha out sbb adc pop lret gs mov mov enter xchg sub and in add sbb push flds clc repz adc lock rolb push mov js mov lds sahf mov add gs push xor adc inc clc (bad) test adc loope outsb dec pop sbb adc pop mov pop out ja in push imul jle lret cmp push dec repz pop jl stos mov jns cltd dec ficom and lea xor subl (bad) push imul mov aam stos push mov adc jp cmp icebp leave sub lods out adc or push cltd adc and inc lock leave mov sbb addr16 adc cmp add lcall xor call scas adc sub add or (bad) int add xlat nop jno adc into cmp push dec mov add fldl xchg les fist vpsubusw pop cld adc jecxz dec ljmp sti imulb mov pop jg xchg cld lret loopne clc mov push adc dec cmp or inc push dec test push call incl adc cmp push pop dec adc mov adc xchg inc les mov pop dec adc shr pop addr16 call and repz xchg mov add and add or lcall xor fisttp or jmp loop pusha sub cs pop push in pop pop pcmpgtb xor bound jb inc push sbb test or sbb pop jmp iret push or mov lds lret add sub mov sub pop mov xor mov push pop xor mov push xchg lret enter mov push cmp push push mov std insl adc popf (bad) negl fwait push dec xlat std xchg adc into jo push lret daa (bad) mov scas popf adc dec jl adc test outsl mov cltd nop and mov pop dec mov add mov xor movsb jae (bad) pop fnstsw incb add sbb adc mov movsb push jmp ds adc or xchg adc mov dec adc rclb repz lods icebp call or lret adc imul aaa mov push in pop jbe test sub shlb adc mov jb push and ljmp pop inc adc add xor sub ljmp sbb iret inc cmp xor sets das dec inc adc ret lret test stos nop push and xor in or hlt rclb push adc (bad) sub cmp pop les repz scas setbe pop adc push fwait xor test out mov andb scas mov xor add xor mov int3 pop inc sbb das sub push dec jle adc test add adc push into negb dec and push or stc daa mov push (bad) xor add pop fwait push mov rolb mov adc in popa or dec push sti outsb adc or jecxz mov popa xchg and mov cmp adc les jo sub adc repz leave push jns lret xchg inc sbb pushf aaa xlat rol adc push sti sub mov cwtl or clc adc popf cmpsl cli notb (bad) ret adc fsubr ror ss or call fsubr mov mov mov mov mov add adc repz xchg lds jg adc popf or pop lods (bad) xchg sub das add testb dec mov (bad) mov es adc xchg insl mov pusha lcall cmc mov pop lahf mov imul je rorb mov daa inc pop adc jnp popf pop les repnz and sub or and mov ret lcall add mov fisubl inc in mov test je xchg cmp mov pushf (bad) mov int xchg dec insl sub sub hlt adc sbb sbb std ljmp inc push cli adc int arpl mov adc push loope cwtl lret rolb dec jnp lret std mov sahf popa push or push mov repnz inc int inc adc (bad) fistpll lret fadd mov mov in adc imul rcr adc ss pop jecxz adc call add xor out insb inc add lea mov push loop jnp lret push mov mov popl adc jno pop push fsubs dec cli pop call push cmp mov push or rorl sub lods rorb xchg xor mov cwtl adc pop sbb data16 pop mov push xor ljmp add movsb sub cmp lcall adc fmull jae test mov pop popf insl add push mov imul into dec out xchg rcll and sub movsl xlat outsb adc cmp leave xor dec jp cmc loopne jle adc popf adc and sub adc in jb adc and adc or rorl fisttpll mov ds sub aad mov adc sub dec sbb (bad) mov jl out or and clc inc push sbb adc int xlat mov xor pop jg repz in test adc or test xor cmp rolb pop sti dec cmpsl pop lcall ficoml pop push adc cltd insb loopne scas pop adc dec aam mov in adc clc jle cs and adc pop pop fbld xchg mov xchg (bad) std outsb adc stos xor gs jbe mov mov lcall les adc test and cld in cmp and popf dec xor ja pusha pop dec (bad) or stos adc and push push les adc clc daa and xchg xchg adc movsl dec inc sub adc jmp adc test adc xor scas adc jns ljmp mov lods and aam std pop pop jno sbb mov sub mov adc xchg inc iret mov add (bad) hlt adc adc je or movsl outsl jb jmp decl or xor inc push sti adc dec dec push fisttpl out gs adc mov pop mov and jmp loopne dec aaa mov adc add test cmpsl lds (bad) decl clc sub enter out mov add mov (bad) jg std (bad) lret in shll adc mov insb and imul mov xchg adc jo adc push leave fnstenv pop cmp dec jbe in mov adc sub pop lret (bad) adc or sbb xlat adc xchg movsl sub cltd inc adc nop ds icebp mov imul push jle inc lock rcrl mov inc stos mov loopne add sub adc shrb or adc lahf dec xchg adc cli xor bound xchg jns mov rorb xchg mull cmp popl hlt push adc fmuls stc mov adc cltd hlt shl mov xlat dec xchg jmp or jns mov scas loop mov mov cld popa dec or cmp or xor pop pop sub mov pop aas pop jne mov lock adc mov (bad) sbb (bad) push mov adc scas xor adc add mov push popf data16 faddp or movsl adc mov sti adc fadds push cld and inc cmp dec mov dec js push inc inc fstl sti stc and jmp stos lds dec adcb notl daa mov mov push cmp (bad) cmpsl mov cltd (bad) sub mov je adc fcoml jecxz push dec loop ret push mov pushf cwtl adc test dec jbe fimul movsl adc popf lret enter fnstcw push cmp adc cmp loopne sub adc add adc lea nop inc sub int mov or syscall pop fwait daa cmp cld rep ss pop xor jl or lds (bad) mov mov int xor push out out push jno hlt or lock mov or or cmp push insl jnp ss jge cbtw jb gs call fsubl fwait sub je (bad) das loopne (bad) icebp mov xlat jno xchg mov xor inc mov mov adc ret push xor and sub pop sub dec pop add int repz push cld repnz mov mov loopne adc adc int3 cwtl rep lods rcr cltd lahf stos insl leave or das adc iret xor adc inc xchg add adc lahf xchg push (bad) add out or cld mov or das jmp adc lahf cmp out outsb mov sub adc and dec js aam mov (bad) sbb adc sbb adc sub movsb lds and or in push aaa adcb mov jb out mov adc test fwait dec push adc data16 in (bad) adc sbb add je aaa push xchg dec sub or xchg xchg add mov adc jmp repz rcrb (bad) rorl sbb lock cmp adc mov hlt pop xor sub cs (bad) lcall insl rorb imul shrb jno (bad) aas add outsb adc lods push (bad) mov add decb mov jle pushf push adc cmp dec adc imul jg fidivrl xchg pop into and (bad) loopne xchg repz in pop push dec pop add jne jo adc int3 cmp ret rcll hlt push adc aas popf mov push adc in inc xchg aam dec popa mov push xor or into xchg adc pop xchg dec out mov add lock or pop jo adc dec or lea cli pop xchg add jg lcall sbb fadds dec mov xor or jp,pt inc adcl sbb sub ror cli in es mov xchg dec push rclb insl loope call lahf jb cltd xor js pop jle xchg adc inc dec push cmpsl add rcrb sbb mov cwtl mov xchg fildl adc leave inc push pop sar push pop lret inc mov in addb mov lods lahf or inc mov ds fs je stos mov xor fmull into push push mov xchg sbb insl cli cmp add dec incl fs adc mov cmpsl push ret sti repz data16 ret sbb adc xchg jmp xor addb mov xor or inc adc xor arpl lds stos repz mov mov push mov lret dec adc jl out aam inc adc imul lea std shrb nop orl mov mov in sbb sbb cmp dec jne sub test or daa dec es pop cli adc jge and inc inc adc in mov mov (bad) mov dec into adc pop bound push leave sbb mov nop adc or arpl (bad) dec popa insl add leave lea dec aaa ja lahf or movsb inc (bad) xchg mov sbb pop xor adc (bad) ljmp data16 and mov std outsl xor jg icebp leave ljmp lret inc cmp dec fistl in icebp lock or xor aad add stos jns int add jl adc popf jae mov repz orl and aad cli push sub aas add pop ret pop sbb mov jbe push out pusha adc mov and ss fwait dec lea bound dec add popa add mov jb and push in repz scas jg pop adc add movsl dec pop and adc lret push icebp ret les mov test jecxz cwtl adc sbb push jg jl lret push rolb cltd jne cmp out roll and inc sbb iret jg (bad) mov xor xchg sub daa rclb push adc push sub cmp mov testb jo int adc test (bad) fstl jle hlt xor dec push adc mov dec mov adc adc mov incb adc aaa sahf int rcrl push lds mov jge fnstenv scas adc mov movsb adc loope xor push sti push mov mov pop add fdivr adc and pop mov inc adc dec fcomps sub mov rcrl adc out lea in test jnp in fadd cmpl inc xor inc es adc or mov stos add sahf or and mov lods push lds push add sub andl cmpb mov mov je fildll adc add inc add jg xchg inc pop cli or xor xchg (bad) push cmp sbb clc or mov sbbl (bad) adc cwtl inc pop and out adc xlat mov xchg std movsb lret sbbl pusha or cwtl push aaa arpl mov ljmp push sbb out cmp pop push xor inc (bad) or (bad) fucomi adc or push popa mov and je sub cltd adc add sahf xchg mov adc mov push mov mov jmp (bad) icebp adc jnp ljmp repz sbb push (bad) xor js shll je (bad) daa push mov jle orl mov adc out dec popf mov scas jecxz mov xor or pop dec mov add pushf inc repz ret (bad) (bad) nop adc mov (bad) and cmp adc adc jns adc and dec dec add adc out les loopne fiadd aad mov or push fdivs adc imul mov mov push mov adc ljmp xor rcl cltd int hlt sub stos arpl imul popa xor repnz pop or (bad) movsl add rclb and fs sarb int3 loopne loope in sbb inc stos xlat xchg or jo jno fcompl jecxz movsb mov pop dec arpl dec notb mov fnsave aas mov xor (bad) mov jae test or addr16 mov mov add mov pop repnz mov sub lret je test sub fwait lods adc imul jl dec dec adc scas and repnz enter idivl push mov or lods aaa in sbb cmp aas mov fisttpl cli (bad) xor sub or jge xchg iret xchg or or rcrb lahf adc adc dec lds repz add pop gs lods (bad) xor insb pop scas cs push push xlat (bad) faddl je loope mov push or lea cld jb (bad) mov insb adc daa fst adc sbb and jnp push sti sub repnz push insb loopne movd dec adc lret sarl je push ds xchg nop fimull cs pop shl test xchg push popf dec adc ljmp jmp out fsts push sbb rcrb push xchg mov fsubl jbe or push leave je repnz and and das push (bad) xor hlt sar adc mov mov sub addr16 mov scas dec nop cmp sub pop add jno inc shrb mov sbbl unpcklps xchg sub mov mov aaa xor in in aad adcl xchg adc lcall iret lock into jae or adc std sbb adc dec aad mov scas lahf test lock adc cwtl mov int3 push enter inc iret cmp jmp xchg jns inc popa jp or into sbb mov cmp inc adc cwtl das inc stos lea jg and xor jmp cmc pop mov test ffree pop adc mov sub adc dec xlat jle inc mov js dec lcall pop adc lea adc cs mov mov jp xchg inc adc sahf cmpsb (bad) jb adc movsb inc adc mov push xchg cs and sub adc jge call adc div pop adc rcrl lahf mov mov adc shrb (bad) fs jmp loope fwait (bad) dec shll adc cld popl dec add shlb scas adc das cmp pop sbb jae mov shl shrl je mov push add shlb pop mov adc les jo (bad) imul fdivrl push mov or loop dec dec inc psrld (bad) pop rorl cmp fmull sbb mov mov xchg xchg loop push pop or imul mov gs negb aam sub mov mov pusha and dec and mov push rcrl and jge sub sub mov push es fidivl add xchg fs dec adc aam stos in (bad) repz int3 iret push pop in adc in push cs sub jbe fsubl daa call std adc lea adc (bad) dec adc push into das dec adc iret nop fstps ret int3 push mov addr16 pop movsl xchg dec imul adc sbb xchg cmpsl push jmp in mov adc mov fstps xor subl frstor mov or adc stos popf pop xor mov arpl cltd clc (bad) ljmp adc dec pop lcall push xchg dec adc adc outsb adc jnp sbb ja int3 fdivrs sub push and add adc fwait shll scas cmp pop dec int lea mov push jno fbstp loopne adc imull mov adc add push dec mov cli xchg pop adc push rclb mov das mov mov cmp push repnz std sbb add cli push mov xor pop imul sub cmc xor fsts mov adc pop and adc daa dec les (bad) out sbb or imul lea enter dec pusha add fstl push cmpsb test data16 and cmp adc test repz enter and inc test dec cmpsb pop addr16 mov dec aas dec rol (bad) (bad) or and sbb insl (bad) loopne out in adc mov jbe jmp (bad) sti xchg scas inc adc cmp sub push fwait sbb popf mov ret sbb inc jecxz mov cmp in cmpsl ljmp sahf xlat mov (bad) inc pop aas adc lahf cmpsb repz jo shll pop xor push popa dec je cmp sbb or add mov fxch push adc inc test stc adc fcomps pop jl mov push movsl add mov push cmp hlt and int3 and sub add popa or (bad) adc rcll jnp test aas (bad) imul bound push pop lods ror ret fidivl and xchg orb in xchg popa iret jno xchg inc mov ds sbb sahf pop enter aam lods mov jmp ss sti mov repz and push adc jae addr16 cmc pushf adc int pextrw xor dec sub fdivl jae out (bad) xor (bad) lods adc mov mov lret fcoms repz add or jbe adc js add sbb xor adc fisttpll adc stc add jbe popa xor movsl out inc (bad) cltd sbb jb mov test add movsl imul xchg sbb adc arpl aad xchg adc xchg adc popa mov shll bound pop sbb or push outsb insl dec sbb dec pop (bad) xor jb xchg cmp test jo sbb mov adc jnp bnd data16 push push std lret xor loope (bad) adc cmp inc rep push push xchg xchg aad mov shl pop mov scas adc adc scas dec push add out int adc sbb orl adc div xchg divl inc adc pop pop in dec and jb xchg xor inc rcrl xchg xlat xchg adc mov and (bad) adc inc or inc mov sub jb loopne stos adc stc push fstpt ja xor xchg in pop roll adc dec adc xor sahf inc sbb loop insb or mov sarb call jmp jg aad adc mov lret inc mov rclb mov add movsb insl dec in jmp adc add outsl scas adc in jecxz mov xor fucomp xchg mov jmp imul adc add mov push adc adc cmp (bad) (bad) jb hlt lods add lahf pop shr cwtl add mov lds fimul sbb icebp or iret insl popa jno dec add jmp test xchg adc push mov mov mov adc dec (bad) mov movsl dec adc repnz cltd test std lds mov sub push sbb xor fdivs les jnp pusha xchg sbb xor mov jecxz jo xor movsl das add outsl ljmp aaa sbb test push pop pop pop cmp inc jno xchg scas loope adc shrl sbb adc in add mov pop popa adcb cmp mov dec fcoms pusha pop popa jge icebp xor or or test popf (bad) xchg mov and xor add xor movsl sbb dec pop lret mov stc (bad) call mov out into adc pop mov xlat cmp fimull adc pop mov push js shrb add test in pop push sbb sbb adc cmpl add test repz xor pop clc aaa rolb out test das aas sbb rolb sarb add mov lcall pop mov push insl mov cmc jbe push loope cmp das dec (bad) adc scas add shrl mov sbb lahf fucomi pop adc sub js xchg mov test xor jbe dec add stos cmp fs inc adc out sti sbbb jle mov mov cmp xor aad pop mov mov mov xlat in xchg dec adc inc pop or gs adc iret pushf into adc mov inc mov or popf add inc sub cli add adc add adc xor addr16 adc mov int sbb pop jo imul dec mov ss mov cmp popf xor loop push push add sbb jnp jge pop pop adc xchg xchg xor mov cmp jb xchg sahf jecxz mov scas repnz les cmp lret in xchg adc jnp dec loope mov adc mov or add inc xchg inc add imul lret cmpsb pop call lods into adc and adc bound shr cs pop pop test jmp mov lds inc mov add stos adc sti stos lret cmp dec out rcr mov fwait pop xor pop in lds xor mov jl inc mov (bad) fmuls pop xchg cltd pop mov loope int3 cmp cmc adc stc jg sti rorb aaa mov inc xor pop adc adc aas lea mov cmc sti push test dec adc rcr sahf int mov stos mov or dec push xor mov cmp and adc xchg (bad) into fs mov cltd aam sbb add sub test ja add mov in push push or ss and inc mov aam pop xor movlps mov xor xchg cmpsl dec jne es and cmp lret insl xor clc dec bndldx (bad) mov push mov pop dec jl aaa enter cltd xor mov cmp insl out pop dec sbb rcrl lods pop pop jae cmp add adc dec fs je fidivl xor out repz pushf sbb cmp push jno and sub xchg sbb adc mov rorl push out mov shlb test sahf xor lahf xor das in sbb or sbb inc int3 in gs xlat xchg enter sbb push lds or test adc insb cli movsb adc es ret imul adc out xchg xchg xor int3 lcall add insl xchg (bad) sub add dec and popa mov push test add dec pop mov rorb add or adc in out jb sti dec mov movlps adc imul icebp adc dec mov push int ret adc je mov gs repz out sub xlat add mov (bad) or imul gs adc stos and adc (bad) fidivl cmp shl xor mov inc add roll or jle adc add xchg cmpsb mov mov mov pop sub adc das add imul adc adcl lds xchg push lods inc jno cmpl js xchg repz dec cmp jecxz adc or push (bad) mov xor cwtl jbe dec decb push mov shr mov adc cmp sbb xor das xchg lods push mov dec test cmp les cmp jns xchg and adc outsb in sbb repnz xchg jnp inc sbb jle adc fwait xor cmpsl pop adc xchg dec pusha sub mov xchg shll cld hlt les jmp out cmpsl imul jne jnp int3 jmp or xlat popa rolb das sbb push xor dec (bad) in add mov repz loop (bad) fldt mov repnz xor sbb jne pop idivl ud1 lea adc sub adc add inc jle cmp or loopne loope xchg imul adc inc jmp sbb repnz xor jo insl dec insb add mov jl test xchg scas mov lret cmp mov or das hlt test jle sub sub pop lret insb jl out imul dec inc aaa fcoms pop lahf fidiv adc leave cmp mov roll dec out xor ljmp or (bad) test add cmp add push daa mov inc dec loopne pop sahf and pop adc ret lods push movsl loop mov add fcoms fiaddl call add push xorb add mov add out sbb imul xor pop sub adc (bad) pop mov arpl (bad) pushf cmc jne mov jmp and ret dec lds cmp ror cld sub enter adc adc pop (bad) push xchg mov out hlt ss fiadd adc int3 xchg pushf and mov mov adc dec rclb int xor inc jl add fcmovb test (bad) int3 aam lods inc add xchg jb nop dec inc popa adc (bad) icebp mov mov push adc leave ja mov movsb int into movsl (bad) ljmp jns fisttpl xchg adc or cmp dec loopne cli lret add push add fcomip dec xor adc dec movsl mov dec in adc push popa mov inc sub pop fs adc adc out mov test cmp cmc pop pusha mov cmp adc adc aas ficomp jns add sub arpl or mov pop mov adc ret push pop inc sub in movd call jecxz popf (bad) loope and jb mov pusha jl xchg sahf icebp les int enter popa or mov mov inc inc subb pop cmc pop mov loop mov aad nop adc and aaa jne aas int hlt fcmove inc mov lcall ljmp fistpll je out adc jbe mov inc jb jns adc or jnp push and lcall call or popf mov (bad) and leave (bad) jl iret cltd adc xor adc shr adc adc sub (bad) lahf movsl mov xor mov lods or xchg adc xchg pop test pop xor mov lahf push pop push adc loope sub and (bad) inc loopne inc mov fnsave pop pop jl insl add mov ljmp adc cmp fnstsw cmp xchg sub cli fsubs lahf adc push out adc cmp lret mov data16 mov movsl sub adc mov neg insl arpl jecxz jnp fmull or into adc mov inc mov mov or jle adc gs adc repz jno scas fdivl movsl mov addr16 ds push xchg in adc jae out cs lahf adc mov add xchg jns mov mov mov pop jno cltd jnp cli mov in pusha fldenv (bad) or jno push mov mov push or pusha (bad) call cmp rcll inc or and adc das jb adc push push fidiv inc add adc adc mov mov rorb push or pop and and fldcw dec daa lret or sbb rorl scas mov sub pop adc lcall pop bound add pop (bad) xchg or push cmp ja xchg in fimul (bad) iret or outsb (bad) or xchg and mov sbb xor mulb repz jmp push fnsave loopne cmpsb jp mov inc push inc adc mov je adc sub mov lcall jge fdivrs adc jp in lea sbb (bad) jb nop into in dec add mov xor dec add test movsl sbb std pop cmp push mov push xchg adc enter rcll cmp (bad) std sti adc clc push (bad) lock enter jp imul xor and adc cmp add repz call lods sbb dec sti scas mov xchg lock enter loope daa jl mov (bad) hlt fwait xor push adc or frstor adc cltd test scas fstps push or jp inc rorl cs ret lret add and sbb loop pcmpeqw addr16 mov or aaa mov cli (bad) mov repz bound pop sub push inc es and pop lcall xchg and adc lret mov jge add rorb xor repz in push jg sti ds insb mov mov pusha movsl add xor adc arpl (bad) mov (bad) jle and in cmovle adc lcall test (bad) loope mov adc jp dec sbb ss loopne pop adc or les mov push mov xor fdivs adc dec push mov inc in fiaddl mov inc sbb call ror sub adc icebp mov into or ficoml test adc (bad) mov imul leave cli stos or pop and sti xchg mov ret pop adc cmp adc loopne jl push add adc sub push js jge push inc rol jne mov out jmp mov es test push ds sbb lahf ss (bad) in xor int3 sub fwait lods add adc fcmovnb lcall cmp mov add das add in pusha adc arpl mov loope sti or cmovle adc aaa enter out popf leave mov fwait cmc imul ss into mov or add xor or or adc (bad) test sub adc sbb sbb out cmp scas push aad ja cmp std cs call adc xor out adc cmp and inc lahf sti push mov shrb mov pop les adc dec push mov sub mov and jle pusha out fwait mov repnz mov pop adc fs int3 cmp sbb xlat and inc xchg outsb and add xchg adc jle mov cmp rorb mov dec stc adc pushf js mov arpl lods adc stos bound ds sub adc dec sub out cld xchg adc xor xchg sbb insl sub add out rcr cmc aaa subl repz pushf out xor movsb repz xor and div sub sbb (bad) cwtl clc adc xor fisttpl loopne jb fstl cltd pop inc out mov cmp sbb in bound xchg int3 push cmp pop sbb adc push mov stos adc jmp sbb adc xlat xchg or adc es sbb xchg loopne rclb sub xchg into (bad) rcrl xor add pop adc mov (bad) adc pop pusha or or mov lods iret daa (bad) lock cli adc mov adc outsb popf mov cmp jb and lods adc and gs call shrl mov movb xchg xchg pop adc push fildl loope stos adc popl lea imul adc xor xlat adc jnp push in xor jno sbb test adc cmp sub adc push adc sub mov rcll inc jmp pop push xor or insb (bad) mov mov shl sub mov insl ret adc outsl cmp scas jmp adc in sbb lret lods dec xlat xor mov mov mov sub (bad) out mov xchg pop push or add adc lods jno rorl sub or jo,pt out call lock xchg lcall arpl rcrl jle mov dec (bad) (bad) int3 xlat or mov div dec or aam enter (bad) rep scas aaa mov mov or mov push iret xchg adc sub push adc xchg popf cmp enter mov outsb test inc pop inc or add jbe mov adc push mov lcall sbb arpl iret xor fisubl jmp outsb adc inc xchg mov rcll adc xchg jle mov push pushf add rorl jne xor adc out int xor clc inc and pop addr16 add ret cmp je ljmp (bad) adc outsb popa and scas push lock xchg mov aam int3 lods int or adc ljmp punpckhdq ja mov lods dec test fdivp popf xchg repz xchg jl movsl pop sbb stos decb mov enter (bad) test adc adc insl sub popf cmp push scas lahf jmp xchg and bound pusha xor jle in adc bound jne mov cmpsl imul loopne clc and popa test jecxz insl into or adc cmp lods adc pop movsl push nop das adcw push std and not mov jbe jo cs dec adc insb daa in cmp dec push mov mov jns (bad) (bad) repnz lods xor xor call aam xor cli jo cmp rol adc mov adc jne adc dec out mov imul inc cmpsb aam mov dec ja add enter jge repz fisubrl pusha dec dec pop cwtl int3 add jae cwtl pop or sbb sbb push adc mov adc pop mov cmp push sbb sub iret dec aas ds and inc movsl mov cwtl adc push push mov sbb pushf push mov pop cmpsl iret adc or jo xchg cld stc rorl cwtl scas xor leave add mov cmp enter mov into ud2 test pusha lods and dec je js dec loop inc aad xor movsl xor adc adc cs adc mov negb add push inc rcl mov rcll adc je push push lcall adc add mov cmp je testb inc jmp pop mov lock fcom sti enter iret cmp adc sub test jo pushf loop in adc cmc lods xchg xor cld adc mov movsl lcall (bad) cs adc adc incb lds mov push pop adc mov insl pushf adc leave xchg loope sahf xchg jecxz mov sbb addr16 cmp xor xbegin std pop std das mov push dec cmp sbb outsl loope stos adc sbb adc repz dec mov repz xchg fimull popf adc xchg adc mov and mov popa sbb mov xchg imul icebp dec test sbb sbb (bad) cltd mov adc jo jg mov stc outsb nop daa xor es mov jno pop adc call fcmovu mov jge adc rclb icebp jno adc adc lcall out loope add jle mov scas aas and loop insl or adc aam adc inc (bad) or stc sub (bad) (bad) push ds mov xchg jns test ljmp in mov sub add call outsl sbb mov xor push xor cwtl mov adc mov insl mov sbb lock mov fsts jnp pop jp mov adc std mov adc scas jo pop in mov ds ficompl lods movsb adc mov test lods (bad) pop lcallw jae xchg hlt mov push cmpsb scas stos mov ror dec jno jp (bad) and fidivl mov mov (bad) mov and fcoml int3 popa repz adc inc push imul pop cmp jne add mov add adc push mov sarb ja xchg icebp adc popa and or fistpl mov adc xchg sbb or jl adc aaa push outsl adc pop (bad) dec adc mov push test fwait adc inc or jb jp ja mov xchg sub in cmp mov rcrl mov push add mov cld or mov jb (bad) cwtl cmp adc lret pop divl sub sbb das mov sub test fsts xor cmp mov push or fcoms mov sub adc (bad) sti imul (bad) or inc adc and ret sub and xchg and add imul mov call stos sub cs jmp cmp xchg sbb in rol repnz mov rclb outsb insl in fisub andl pop lcall jg mov ljmp jmp adc call push dec ljmp and repnz or push jge dec jo sahf cs lret shr jae and popf pop and adc icebp mov xor jmp loopne or push pop or adc mov lds dec push and jne mov fmul or or out jb and rcll add rolb dec sbb jb ljmp mov mov dec jge loopne int3 sub mov jecxz cmp dec mov cld xor decb ficompl adc jecxz ret push or or jnp mov mov dec adc cmpsl inc sub sbb test add cmp mov mov adc sub sbb loopne pop aaa das js cmc ljmp add jle push cmp sbb fstl mov sub pop jle inc movsl inc outsl fcoms push xor xor adc fmull in mov mov pop push pop lcall inc popf ret gs add test adc or jecxz fidiv sysexit and mov sahf push das adc aaa sbb mov imul ficom shl leave mov adc imul xchg push stc sbb and pop lods popa xchg nop int pusha add dec lahf inc push adc fdivrs cltd sbb xor (bad) sub and cmp dec dec inc imul pusha adc jns mov jae xchg add mov push cli xchg lds push push mov aam mov scas in sti in adc xchg stos test jb negb mov fdivp call mov lea sub lret gs mov das adc and test mov ss jne push adc popa in bound jecxz les pop adc adc divl inc adc sub aas add push push jle adc mov ja shl mov xchg aad outsl push cmp xor out jg enter jge adc jnp cmp imul (bad) jbe lahf lcall jl push and faddl cmpsl push aas daa or rcll push jp movsb or sarb lret jg adc popa mov xchg push adc fnsave push inc sahf dec mov adc enter mov fsubr xor lds mov adc adc iret (bad) (bad) std adc out into loope dec cmp cld dec adc test mov jne adc mov pop popf mov adc cwtl mov ficomp mov repz in (bad) pop push sub cmc push jb or mov adc mov scas jecxz out mov lds push push in mov adc int cmpsl jl inc push add test jmp or dec or sbb cwtl jo jg add adc push je mov mov fist cltd or imul lea mov adc xor sbb int add adc pop in push stos test mov mov add lea cmp pop lret adc repnz pop cltd xor mov jp mov (bad) xor jle adc lods arpl mov aas ljmp cmp imul xor rcrb mov loop or imul mov xor clc pop adc jl fsts scas mov pop insl in daa adc xor (bad) cmp cmp (bad) movsl movsb sbb xchg (bad) (bad) mov lret movaps push sbb ss pop aam sub push adc mov clc xchg ja ret mov stos or and ljmp xor les jae fisubl das cwtl (bad) rcl mov sbb out and xchg jmp mov push push mov repz jg sbb cld sbb add jnp movsl ds bound add inc icebp aam pop lods adc xchg adc (bad) fsubr pop fs adc sub mov dec iret call xchg mov push adc push xor sub push (bad) nop (bad) leave js xchg adc or adc sarb xchg mov aas fwait std rcl or adc rorl xor push adc pop (bad) push mov repz and popa push jnp push dec mov jle addr16 xchg (bad) jl adc (bad) pop or scas adc xchg mov dec sarb xchg sbb out jnp mov into aas repnz adc roll dec fucomi push imul adc pop adc dec ljmp inc ja (bad) pop adc push mov mov jl popa push jo jb or pop fildl (bad) xor pusha jecxz aad add test dec lret out fstpl shlb or in cs mov mov (bad) mov inc adc shll jecxz stos mov adc pop cmp xchg lods push jg repz push or nop out (bad) dec dec loope dec fcomip shl stos call push xor test and (bad) xor fisttp les adc xchg test xor dec mov sub rol mov sub mov jnp adc xchg rorb fldl jle (bad) cs xor mov push clc mov mov test adc pop ficompl mov push jecxz mov fwait adc jmp in icebp xor sarb adc dec dec sldt pop mulb jp mov in jmp xchg (bad) dec xchg pop (bad) or jmp push and or fwait cli push adc xchg push scas stos add adc repz js rorl mov adc fbld mov movsb push test bound xor fsubrl jbe push dec jge mov mov and daa nop push adc test fsub push fwait mov adc lods adc and pop stos pop cwtl movsl or es lcall outsl and roll push adc adc insl pop nop inc push add mov cli add push inc jne adc sub mov aad test cltd loope (bad) or jl push fs jp imul sar and and je iret jge pop add mov dec and jno sub cmp repz add xor shrb jbe mov mov neg jnp adc bound mov and xor add lods sbb add push sti or jbe imul enter adc pop fwait movsl (bad) stos ret rcl das and lahf sbb js cmc pop enter adc sahf and data16 adc stc mov sbb sbb adc lahf (bad) push test insl jl repz outsl mov mov cli pushf sti adc adc bound (bad) adc add dec mov test and fisttpl sbb cld popf jmp mov sub inc mov adc scas cltd adc cmp adc add sub pop adc inc dec mov adc mov cwtl adc data16 fwait (bad) lret pushf (bad) (bad) push repnz adc pop leave xchg adc mov mov push scas jmp adc loope add push insl adc cmc inc adc mov mov add mov adc mov mov sbb sub enter push iret xchg imul movsb mov mov pusha lea repnz js xchg adc sub dec xchg adc push movsb mov int3 mov jo mov cs mov lock rep pusha fstpl mov mov adc push push mov dec addr16 sbb dec stc aas inc adc in cld roll fs xor push or pop mov jmp push rep pop in dec ss adc adc pop pop sar xchg sbb enter shl mov add pushf mov mov (bad) ja (bad) stc sub add mov xor jns xor inc xor ja xor dec ds dec pop mov fcmovnu dec pop paddsw add outsb mov xchg mov (bad) ss repz push mov movsl mov add addr16 and add mov sub sbb inc adc add shrb (bad) xor ja aaa xchg nop movsl sub or sub hlt mov and or cmc mov lea xor lret mov sbb aaa scas mov cmp in cld xchg movsb mov dec xor js in adc sbb movsl mov popa cwtl jmp psadbw mov adc (bad) inc mov lret cli mov adc loop mov scas or imul loope adc cld out push dec out push out out mov or ret cs es inc fnstcw adc cmp mov sar jbe cmp insb push push inc rcl and sub adc imul xor out jno movsb sbb sbbb adc lcall sbb xor shl call rcrb insl test and xchg add mov call or push sub mov iret outsb pushf loopne pop pop jecxz int3 dec adc in pushf xchg loopne sbb xchg loope sbb or adc adc jmp int3 rolb ficompl cmpsb adc inc into push rolb (bad) add fdivl lock fsts js sahf mov sub mov sbb dec iret in icebp adc shlb vpand xchg inc rorl je mov lock mov xor push pop je aam (bad) test icebp jle mov and sub lret aas mov in jb iret xor jp xchg arpl adc adc mov pop mov mov ret adc mov and sti adc jmp mov push jo adc popa push xor adc jno lret popf jae fs outsb jmp dec shlb mov ja sbb adc gs shr adc scas sub adc pop inc fnop jbe fistl or test adc mov out mov xchg push xlat mov call adc loop mov repz xchg jg mov pop adc (bad) jge jo adc push in adc das xchg mov inc icebp (bad) adc fcoml negb lods adc jecxz ds in dec subl push mov imul cmp rcr adc adc sbb rol add adc fnstcw sub fwait add xchg test inc sbb movsl adc mov cmp xor repz mov push loop add aaa cmp (bad) pop enter mov (bad) adc adc daa mov pop mov or pusha pop mov sbb pop add mov es sbb (bad) adc pop repnz int3 dec mov mov dec test sub (bad) lcall inc sahf lds add mov adc mov xor sbb adc pop stos adc adc adc mov bound mov xchg arpl xchg sub adc enter xchg mov repz jno lea fidiv leave loopne jp fs jnp jne test (bad) push push push or jp adc jle inc mov insb fnstcw rorb imul adc mov bound and (bad) hlt cmp add inc jae aam mov push mov clts mov lds add or jle lods shr loop mov pop xor cmp aam inc enter push lcall push les mov adc xchg sbb lret jecxz push test push sbb sub mov fcompl out pop jns pop sbb ret adc jae or nop adc add xchg adc cmp push inc push cmc dec std xor or push mov adc mov inc adc adc mov mov popf call push mov inc imul pop orb adc push add pop clc cmp xchg push out int arpl inc and add adc das jge mov arpl repz rorb jne mov adc inc icebp movsl ds nop and sub in jae lahf add adc mov mov adc sti and adc das and std xchg mov xor or pop das arpl js mov das clc adc jge std data16 insb pop fiadd aas pop xor jnp push mov inc and mov mov xor jge lret lds jle xchg ja or push add xor cmp adc dec dec outsb icebp aam push rcr in adc stos (bad) xlat xor cmpsb insb les dec or sahf ret adc mov push nop and push sub cs mov xor sub addr16 xchg adc out fimull inc inc test rolb faddl jnp push sarb xor idivl test or adc mov outsl lcall movlps and push inc add mov repz adc sub outsb ljmp mov pop mov jmp out popa xchg ljmp pop loopne movsl xchg adc rorb scas fildl into in xor cmc pop mov adc push xor adc outsl push je push jge jmp das imul sbb inc mov push sti popf push sbb ret ljmp pop lods mov pop cmpsb aam cwtl push mov mov xchg pop push decb mov nop jmp retw add pop sbb sbb sti push leave sub xchg mov inc xchg jno sub jns sbb rcrl pop arpl aaa lcall adc out or add push push movsl xchg adc jnp xchg pop mov test std xor lret jg (bad) sbb cmp adc xor adc adc mov sbb cld aas mov adc cmp dec and sbb push pop adc fsubl psubusb inc mov sbb dec mov test gs xor adc push into push xor lock xor incl repnz cmp iret adc imul adc cmc test ret sbb cmp mov pop mov jns mov cmc jne lahf or dec das lock xchg jns fcoml hlt sti mov adc enter mov mov push (bad) push add mov mov js mov loope fcoml lahf ret inc add add mov mov adc cmp jno pusha test ds pop xor adc fmulp cwtl fmull lock xchg das bound inc jge xchg jo push mov add std movsl (bad) pop scas iret xor adc mov sti inc or into pop adc sub (bad) adc mov cli in adc dec xor lods or push sub inc cltd je cmpsb xor stos mov add adc dec push test in fmul adc sub adc adc mov scas test dec stos mov cmp js daa push mov push scas cltd divl pop push add into pop mov or jne add je outsl mov fcmovnbe add add push adc das sub (bad) std adc adc adc das lret (bad) adc xchg push push and fwait adc pop add fdiv mov xchg repz jl mov mov (bad) ds mov dec add xchg repz imul pop and adc pop add push adc mov inc iret int3 sbb xchg adc lods adc sub push fist out movb sub pop or inc sti push insl adc xor adc add lock jp jae bound pop xor (bad) cmp mov or stc jmp dec into mov mov dec sub out adc out (bad) xor adc loope iret repz add fstpt movsb sahf jbe pop imul jae push sbb adc jle sbb mov into cli dec and add or dec adc jecxz or adc je mov mov les inc fisttp cmpsl adc ja rcl ret scas mov mov push adc outsl push nop inc out or mov and ss sbb dec push jae (bad) adc or jno mov sbb mov mov xchg (bad) mov lods les jge rorl dec mov inc sub mov and cmp sub mov aas outsl pop adc mov adc pop cwtl mov adc or pop cmp adc xor inc sub popa mov adc cli sbb and or nop loopew pushf adc push push lret (bad) and loopne int3 pop cld (bad) adc aad cmp mov jl pop lret and xchg or xor (bad) popa aas add mov sbb mov add std fcomps movsb or cs inc call or sbb mov test je aad fwait adc push sub adc fld lahf mov lock jo dec pop stc mov aaa lds clc and popa adc jbe xchg dec cmpsb inc jge and sbb mov mov xor push adc pushf cltd adc lds push pop xchg in adc mov ss out jg pushf adc mov call adc stc pop add mov lods mov cmp xor push push xchg jge push (bad) or add popa lods (bad) cmp xchg je dec loop xchg and cmp mov adc outsl jmp sbb xchg sbb push adc sub scas jne inc jecxz out jmp (bad) mov mov adc mov lods adc hlt lret jecxz mov ret or adc add inc ret xor stc add cmp jbe into int3 lods cmp push adc (bad) jmp sbb dec movsl mov mov sbb lcall div jbe adc hlt xchg call popf or xchg push insl lea adc in xchg mov mov sahf cmp fldenv ja jecxz pop mov data16 mov fisub aaa xchg cli add jnp je addr16 loopne mov mov fdivl in repz ret lock mov sub jl mov mov inc aam mov fwait ja cltd imul rep xchg pop popf xor add insl mov add adc sbb iret lret mov test mov sarb adc lret cli outsl adc in call and cmc mov or sbb add out cwtl ljmp sbb cmp fmuls lods jnp mov movq xor sbb jb add daa iret repz in cmc hlt and pop mov xor test jno add add or mov sar add shlb adc test pop or test (bad) xor stos test repz sbb pop push (bad) adc fisub mov (bad) lret xor lahf adc bound mov mov inc jle call lds xor lock xchg jl rcl out ds push aad mov xchg push ret das adc fistl mov or mov sub (bad) mov adc mov push gs sub addps imul sub mov or nop sub or adc mov (bad) aad pop adc dec or xlat out pusha mov xchg test sbb pop enter adc out pop in mov inc ja cmpsl rclb inc popf xchg sub mov cmc out aam (bad) sbb rcll mov test pop insb push pop (bad) repz or lds mov or (bad) mov jp adc mov xlat adc mov test daa int3 ret adc std push mov inc adc xchg or mov retw xor mov mov add adc lahf mov xchg movsl add lds push or ret xchg add mov cli int3 fiadd cmc adc jg xchg mov mov arpl out add sti pop call pop mov adc inc jae sbb loope cmc mov xor pusha insb pop jbe xchg adc mov adc mov (bad) add popf pop adc add rcll movsb popf cmp xchg mov sub xchg xchg push jmp enter lcall cli rcrl adc pop cmp cmpsb add pusha xor push loopne movsl adc mov or adcb addr16 je sbb (bad) or sbb or pop dec sbbl jl sbb icebp and nop xchg imul adc int pusha mov jno inc ds adc sub adc shrb dec mov fdivrl leave (bad) hlt adc or xchg lcall xchg adc push dec jo in pause mov into dec add or or xchg hlt mov mov lahf and jb subb push jae in inc mov push out jecxz (bad) mov add jmp xor pop jl aas movl add mov fcoml pop mov add adc mov push hlt lds fldt mov out ror popa movsb (bad) adc sti leave mov jmp jmp add and ss mov loopne push inc repz fnsave cld jne inc movsl jb mov cmp inc bound adc adc push jg jbe insl xor jge xlat add int shlb loop ljmp into ficomp stos int nop pop mov jmp js xorl mov seto or call pop cwtl aad shrb fistpl xchg inc or add pop xor out pushf je mov out and push add insl dec sbb pop push sub pop aad test (bad) out std aas xor and mov das dec adc lret mov xor ss adc xor insl jp (bad) add int xor mov (bad) pop adc notl stos and xor sub arpl cli cmpsl fcoml mov xor jle adc mov jno jl add dec arpl jnp or adc xchg dec pusha nop xchg pop push mov scas insb pushf insl mov repnz mov rcrl or jg add shlb lahf lds adc (bad) and shl adc out jmpw adc fnstcw loope sbb mov mov call out add dec inc inc sbb je adc mov repz sbb pop les (bad) xchg insb dec sub adc adcl outsb pop inc pop sub pop cs jb loopne adc aam push adc fldt ficom pop cmc jnp mov xor xor stc cmpsl add push movsl dec (bad) cmc xor outsl inc sbb dec iret adc cmp jp adc lcall mov xor repz mov fdivrs jge icebp jle divl adc cmpsl pop dec flds repnz push mov adc das or push andl adc (bad) mov inc ss andl adc sub sub push adc add repnz jno sbb or shrb adc cltd push fmul insb pop repnz xor arpl aaa test or push aas pushf int3 inc std mov jne sbb dec inc lods enter lret ja sti mov mov jne sahf bound xor xor xor popa dec jnp repnz sbb jo mov adc add mov stos mov cld sbb je dec pop adc lahf arpl jne sti test loopne lods fisttp shlb adc es repz inc push pop pop out and (bad) xor cmpb stos dec push cs cmpsl jns adc stc adc lds adc lahf jno adc inc mov cmp loop xchg xor cmpsb and add fsubrs mov fisttpl (bad) dec mov inc dec out or scas ja jae dec adc js lds xor lods mov daa popf adc out cmc push int data16 les rcl test hlt popf mov mov xchg pop (bad) adc mov ja fdivr and bound jge xlat aaa repz jb ret inc mov bt inc rclb into sub or loopne mov imul out mulps or sub loope adc dec dec cmp xor pop xor jle stos (bad) sarl aaa mov jp adc push lahf shl push stos dec xchg aaa and cmp das adc sbbl stos repz push sbb shrb cmp aas cmpsb cmp adc lahf bound xor add push leave sbb jmp mov call jmp lods jl dec jbe adc push cmp adc (bad) xchg or jge adc test cwtl mov test xchg mov lahf sarl jmp repz pusha cmp jno adc mov daa int3 aam push push test jp lds inc cmp inc test loop sbb sti xor (bad) sbb mov lea or je mov scas das adc (bad) arpl std dec fimul out xchg nop or xor mov into (bad) aam scas adc xchg push fstps shl ficoml mov ljmp in ret mov fdivrs xor adc in jno inc stc jno mov add mov (bad) lret sbb mov or sbb add adc out repz cwtl hlt ficom cmp jecxz cs adc out adc cmpsb or jno xchg sbb daa xor jmp loope ret mov or pop scas mov les cld test push in dec cs lds fdivl insb in push leave cmp (bad) sti pop mov rep mov dec mov xor pusha loope fdivrs ret or mov rcrl pop pusha pop or adc push xor enter in imul adc stos or push insl adc add lret xor mov stos ss and mov xchg inc test add idivl add sub xor aaa popf push mov mov push fstl mov push outsb xchg pop daa mov ror mov or es adc push cmp adc cmpsb or jmp std aad bswap je adc xor fmulp pop adc cmp sub adc out hlt add adc ljmp and pop adcl sbb fistl xchg int3 negb adc jle xchg inc pop and and outsb mov shlb mov push repz rcrb mov lds sbb sarb imul mov leave mov je adc mov sbb mov adc jae pop (bad) adc push inc (bad) sbb dec sbb scas out pop aad sbb mov into sti sbb pop aaa xchg mov push adc lret pop int push (bad) push ljmp frstor pop pop adc fldt jp dec xor push add and xlat jbe adc jle repz mov push lds pop rcrb jne test int3 lods out repz subl pop sub imulb pusha or enter addr16 adc nop push sbb push cmp jns lock (bad) xor (bad) popf cmp add mov icebp dec push insb call dec pop mov adc fiadd xor xorl push add xor fldenv shrb cld mov pop add adc inc mov push shrb cmp lds repz clc mov lods jnp cmpsb and les mov ret divl fmuls mov pop adc sub push loopne in jg and mov bound outsb leave push test jne cmpsb out add insl and mov sub loopne sbb sub movsb aam fstpl movsl rcrb jle lds in das push std add adc xchg stc inc sbb cltd adc lods pop mulb cmp mov adc (bad) in fdivs ljmp cmpsl aad adc pcmpeqd fdivrs mov int3 call pop cmpsl jne aam or or ljmp mov mov dec or adc loope out and sub sbb enter loopne ljmp mov lcall adc inc pop mov (bad) fimul rcrb std add imul jge cmp mov cmpsl call das adc scas jmp mov test ja cmp sbb fisub shrb and (bad) loop test (bad) mov cmp sub mov mov nop push clc sbb in movsl int imul gs rcll ret cmp jg adc pop dec dec adc pop push (bad) pop ret dec push mov xor adc and js jno int dec adcb or fistpll adc aad xor push test adc jle push xchg dec mov or inc pop sub std jnp mov loopne es pop scas mov jno test sub les sub fisttpll js mov adc repnz fs cmp adc dec (bad) in adc jl adc fs and adc (bad) inc adc mov xor (bad) mov outsl or jg (bad) jbe (bad) xor arpl sahf or ja test addr16 xchg int jae or add lock iret nop cmp fildll push adc mov xchg setno adc inc jne push mov sti sbb adc adc xchg cmp pushf ficompl jg adc adc je fdivrl jge mov pop out out mov pushf push xchg not in divl cmp inc mov xor fdivl stos inc xor or je mulb add adc or insl add cli adc dec jbe loopne pop inc adc dec or and aad out pop arpl std mov push in sub push fs xor fwait push sbb roll adc push call cltd mov (bad) mov ds insl out cwtl fisubl pop rclb push lahf xor shrl push imul mov sub cltd out test adc inc push adc lods (bad) or fs adc sbbb adc mov aaa xor cmpsl jle fist jl sbb cmp adc adc jb push cmp repz fstl xlat ljmp icebp incl jge jmp add movq in adc push incl divb jp imul das sub adc sub and push push sub cwtl push (bad) adc sbb and jmp (bad) pushf inc push adc cmpsl lods divb xor xlat (bad) lcall rolb adc repnz jo imul (bad) out xchg repz rcr insb orl push dec mov jns mov sbb inc xchg stos scas dec stc or adc xlat xor adc (bad) mov inc aaa mov imul adc sub inc ljmp cmp jge adc testl ficoml cwtl push or sub pushf and add loope lret jge adc outsb bound push pop push loop stc cltd or add push movl rcr arpl jae mov xor ret bound js out roll loope clc (bad) sti cld pop xchg out lea repz or and test insl repz dec lods adc in arpl add adc stc hlt xchg call ficom inc mov add loopne cmpsl movsl in or invd (bad) mov sub mov cmc cmpsl in xchg popa inc sbb push out inc mov adc push or stc fxch pop clc in ficom fwait add enter add lods and icebp pop jg aam pop xchg mov and mov (bad) mov aas add adc out adc out push cmp movsl mov or fsub pop adc adc xchg adc dec and or push repz cmp fidiv cmp sti idivl or pop mov das pop cs jbe inc pop movsb (bad) adc inc sbb loopne mov dec js pop dec pop jmp adc insb or mov xchg jg sarb xchg int adc xchg cmp stos call adc adc inc pushf dec int3 test push push lahf inc xchg bndstx mov cmp or into stc mov add enter mov in mov or and jl or cmc adc add cli adc inc ret bound cmp insl cmp mov ljmp or adc fcomip and adc gs ds adc push (bad) cmp out jnp (bad) in pop scas mov adc inc jle fnsave or or or test shrl mov xchg in lret pop arpl inc xchg aas scas cmpsl and adc mov pusha adc nop inc test pop jnp jae mov add inc mov call (bad) out adc test enter push test lahf shll mov xor pushf push popf sub add mov sbb xchg iret sub les push push repz das mov punpckldq adc jb into adc scas cld (bad) mov mov add or mov xchg bound adc add or std popf (bad) out pop mov inc mov lea push fdivl adc xchg cli xor adc clc js mov xchg ljmp xchg or fs adc out adc dec arpl mov lret sbb push andl sbb cmc adc adc dec aad xchg jnp popf cwtl movsb sbb bound and or push cmp xchg ss flds and repz mov or cmc leave adc mov loope add lea adc sub pop adc jae aaa movsl sbb sti inc or adc arpl sbb lcall push add test imulb mov pop adc imul xchg aas fimull cmp mov imul (bad) mov icebp dec jg not lret mov xor iret pop gs mov outsl loop unpckhps daa mov repz test adc pop lret stos (bad) ret dec push dec fwait adc fs fsts ja loop mov and adc popl cli adc pusha dec lcall in xlat ret jmp adc mov push pop adc adc fsubs dec insl sbb mov repnz test xor cltd or mov repz or movsl adc outsl adc (bad) cwtl mov pop xchg jl out test push pusha mov ror in add mov iret cwtl dec sub js ds sbb std sbb adc mov sti mov jne cmpsl je mov out mov leave xchg mov repz bound mov sarb push mov pop out call push pop fldpi or and rcrl push mov mov sub lds add mov dec mov pushf lret loop or test inc add xor adc adc mov jb fucomi popa rcrb dec cmp dec xchg cwtl pushaw je outsl jno adc dec cmpsb rcrb (bad) sub xchg mov sbb or pop imul xchg lock push and push adc mov dec icebp mov adc cmc movsl aam adc lds adc ret adc add sub enter sahf adc fsubrl push mov int dec aas jmp adc cs into adc push jne cltd movsl call lret std push cs pop adc dec inc fildl into sub insb mov ret (bad) and pop out cmp lret xor in jnp xor or or mov pop mov push outsb cmp push xchg or and std into adc xor sub cmp in mov add jge pop mov sub or nop adc (bad) mov xchg jecxz divl sahf (bad) hlt xor sbb into xchg popa bound mov mov insb (bad) cmp adc in mov jl dec lahf cld xchg adc xchg ljmp adc outsb notb addl sbb icebp movsb sub or add push sahf clc pop sarl jnp sbb jbe lock ficompl ljmp xchg sbbl push adc clc mov jmp ret xchg shll call sbb xadd movsl out adc jp cwtl (bad) popf adc xor enter popa int3 or mov push cwtl jne imul fcmovne or icebp sub xor sarb imul (bad) repnz cltd xchg cmc jnp sar mov (bad) shll ja mov cwtl mov stos jp stos sub stos xlat pushf dec adc scas mov leave rcll cmp mov pop jbe or aas aad and cvtps2pd xchg inc adc pushf test adc orl mov (bad) dec nop test fcmove push sarl mov scas dec cmp sub mov lea enter test (bad) sahf pusha outsl add pop mov pop mov mov or fcoml lock sbb nop int mov push out aas dec (bad) rcl sub clc lahf iret scas std mov cwtl fcomps or icebp lods sbb dec (bad) push inc or sahf mov jmp sbb das cmc adc sti push not cmp in cwtl test into in xchg mov pop mov push dec xlat fildl (bad) dec and das pop fisttpll sbb push adc mov aaa into dec adc jb outsl pop sbb jbe lock xchg jnp ja xor pusha inc push xchg aam rclb lcall fisub xor adc xor xchg cmp adc jbe jo push in adc enter addr16 rcrl or gs je out jno push mov nop inc cmp mov dec mov std mov xchg push inc xchg imulb in popf ret mov adc mov adc div xlat sbb out data16 pop sbb mov mov insl enter stos adc pop dec and adc sub jmp xor outsb dec cmp test lret push (bad) in hlt fcmovbe and or out dec add xor imul loop int push int3 seto push repz dec aad xchg or daa or jne and xchg jecxz mov xchg and or roll mov xchg stc sti lret adc inc sbb rorb cmp out cmp xchg dec imul dec cmp cltd dec adc push adc add xchg jle mov mov insl out dec (bad) inc xlat mov adc or pop test mov adc notl sub (bad) cli or rclb ret popa dec cmp adc dec (bad) lds xchg push fucomip xlat push pop inc rorb les data16 and stos xrelease push mov jp pop sub sbb inc into aad and outsl sub sbb push je (bad) movsb lds add sub adc call mov mov mov loope lods cs lods les cmp sarl mov pushf fistl in push xlat or cmp add mov mov inc jo dec pop mov pop cmpsl mov dec lret xorb add xor rolb jmp jbe je add and inc xor or and loopne jno xchg (bad) sar repnz xor mov divl mov adc fnstsw std sbb (bad) hlt (bad) or push fucom adc aas jo mov and sti sbb out adc adc jb sub int jae popf inc loopne adc adc jmp repz pop and push adc or sub test sbb sarl mov mov lea push int3 adc popf adc fwait inc fistl sti add push adc (bad) scas stos inc xchg je lea or xlat and sub lret mov pop pop xchg aam add nop cmp xor mov shl push mov pop lcall (bad) adc fidivl adc mov mov push add add imull in dec scas mov adc (bad) fldpi and stc idivl inc adc enter in jb insl dec inc mov pop loopne rcrb mov pop mov adc pop inc or (bad) sbb mov adc je adc pop outsl mov adc test adc jecxz in pop ficom es aad lods int sub dec jne repz flds rclb sub pushl jge adc and cmp shrb roll es xor jmp stc or sbbl adc xchg je mov pop dec repnz pop dec add pop pop pop mov xchg sub xor cs in jb into mov and mov imul dec ret cltd mov lea ret push jae pop notb addl cmpsl subl push adc test notl cmp pop imul cltd mov adc test push pop or cmp jno ds inc adc sahf and imul xor stos add or mov jae ds mov cmp xor cld rcrb sbb lds adc cwtl mov xor scas or in push fisttpl adc xor test (bad) xor (bad) mov (bad) pop adc lea adc in inc mov shl adc test sbbl lea xor cmp cltd mov mov in lods xor xchg adc cmpsb mov push and mov lods add cltd pushf jle mov repnz out out sub addr16 push mov add dec mov xlat adc or sete add mov mov insl or pop (bad) outsb cmpsl jl cli (bad) ss adc push lahf or xor jne xor aad jp imul hlt cli push push std adc add or je or mov xchg insb adc notl push adc (bad) and mov pop xchg cli jb adc mov add mov clc xor repz inc das sbb sbb fstl pop dec xchg das jae rep repnz iretw or and aas adc hlt pop adc pop dec imul jb iret repnz pop jp fisttp fs imul lahf movsb pop mov adc pop or cmp jge repnz fistp mov sub outsb clc (bad) dec adc lods mov out cli out pop mov (bad) mov addr16 stc jecxz and insl add std adc mov stos mov idivl xchg repnz jae movl (bad) sti ficoml nop jecxz rorl push jb cmp std adc popf push inc lods mov stc adc fimull addr16 pop push push in rclb push fidivr pop mov add adc inc daa loopne sub pop das repz rcll scas adc fdivl lock pop mov fild dec sbb in pop hlt mov adc cmp pushf jle adc push or pop xlat (bad) sbb orl push cmc leave je inc adc (bad) pop add pop fist sub adc insl jl mov lods push mov pop outsl pop loop adc lods (bad) popf fisub and add push cmpsb xchg lcall into jge adc or cmp aaa jno test xchg (bad) mov mov cltd push mov adc cmp in nop shlb push rcll bound cltd je enter in adc adc pop mov sti or call pop adc mov nop inc mov adc imul das adc push stos push xchg cmpsb jl pop mov adc pop cltd cmp pop mov mov lods jecxz hlt aam adc xor fsts mov mov adc bound adc arpl clc adc adc push jg adc mov popa pop or lcall xchg adc mov orl addr16 aas call push or jp js sahf dec cmc scas (bad) push cwtl jns repz mov or sbb mov mov lcall mov sbb push fs sub insl pop adc sub mov pushf mov pop movsb adc out mov mov jl pop push arpl jae adc mov mov daa mov mov jle add or pop into movsl mov fstl pop xor dec imul pop xchg lret mov mov fs push mov jno shlb lods sub ja and lcall push adc loope xchg fwait mov jg or (bad) call loop push out les sub icebp and pop or adc repnz jl push jecxz in jae orb jge adc pop jl mov repz scas push push mov stos xchg cmpsl cmpsl mov sbb adc insb test sbb hlt or out faddl mov push sbb jo and sbb mov inc mov xor jg xchg mov ficompl lods jbe arpl add inc iret fcompl rcr sub movd cld adc scas xchg pop mov dec adc test sub pop cmpl add push jno ja mov and push aad ljmp pusha cltd movsl popa jnp jl imul std loopne dec and repz in sub jae adc dec jecxz mov or pop mov adc jae aad data16 rcrb imul xchg push adc mov adc jp cmp mov lds xor lods and sbb (bad) lahf xlat cmpb adc pop je outsl (bad) repz std scas push ret mov cmp jne (bad) mov (bad) or adc adc sahf adc enter cmp jl rcl fadd addr16 rcll out jns sub or add xchg (bad) lods mov adc mov jbe sbb adc jns loopne mov xchg jecxz dec (bad) push iret mov test arpl push push (bad) adc pop lods xor jp mov mov sub lret adc lret rcrb loop (bad) adcl mov mov mov jecxz (bad) pop push mov loopne and add adc insb push out xchg inc stos push jb outsl popa lahf jo cmp lock xchg push jae data16 aam mov lods push or add xlat add fwait ret pop push cld xchg adc mov int3 mov adc cmp loopne mov cmp std pop in push dec lret mov lahf clc dec nop adc scas aaa mov lods push mov mov and and inc stc daa iret and xor cwtl (bad) mov jns adc andl (bad) jp adc push adc push mov sbb xchg in aas iret adc mov orl or stos fimull adc push mov xor push repz and sbb add test sbb (bad) cmpsl loope aam or data16 cmp pusha xchg inc neg add push notl jecxz fs stc or ror push (bad) adc imul push mov push jno cli push add arpl jge repz rolb inc adc add adc push popa xchg mov mov lcall add fstl test stos push push aas pop or mov (bad) adc xchg sbb jecxz loope outsb repnz or or adc mov sbb sub (bad) fsts or xchg xchg jp inc lods sbb sub pop ret dec mov cli (bad) or mov push add sub sub dec roll jmp popf int adc out cmp icebp cvtpi2ps jb or stos xor mov shrb repnz xchg mov fstpt pop mov popa (bad) lods nop scas sub xor pop ds pop in adc push (bad) imul cmp in sahf mov insb cmpsl (bad) xor sub int3 or inc sti scas dec pop adc or inc xor repnz push push outsb adc (bad) fs mov jo std sahf fldl2e jns pop shlb adc and sub and call adc pop loop add mov adc leave push pop xchg aam adc mov mov mov insb mov push enter add inc ficom adc mov shrl adc and push movsb mov mov adc mov cwtl mov insl adc mov jmp xchg add (bad) in ljmp (bad) adc jns imul lock xchg in or frstor sbb js repz cmpb adc push add adc (bad) ret jae popa into test sub cld adc std and loopne inc adc in mov hlt shl sub rclb imul push mov pop fs pop lock movsl adc (bad) push dec dec lret adc adc dec pop pop pushf xor xorl cmpsl shr inc jb mov and in jae sbb dec or orb mov push out xor es jecxz sahf or insb xchg mov adc iret jno,pt movsl mov xchg push mov repz cmp in cmp mov and mov adc repnz xor (bad) addr16 icebp jne add mov ficompl test xor cmp in int or or cmp xor mov jno push mov lods ljmp repz insb insl xor jmp movsb scas mov sub xchg stc or mov add mov test push shrl xchg pop jge adc cmp xchg add (bad) push adc mov icebp xor xchg push push mov adc or pop add enter fcompl sbb ds adc je jns push mov sub jge rcll loope sbb repz xchg dec mov fstl jecxz sub mov int out pushl popa adc dec cmp fbstp inc and inc ret pop sbb adc (bad) mov mov test fcom push mov outsb scas fistl stos xor imul pusha mov fdivs setne int3 mov adc pop mov aad jg push icebp jns cwtl pushf fcoml mov hlt in notl cmp inc sarl xor xchg test out loop adc ficom jg sub dec out inc sbb dec xchg test mov inc adc or lock cmc cmp cld (bad) dec adcl push inc jbe cmpsl push sub mov xchg mov (bad) repnz sbb pop dec ds sub or cli cmp mov add icebp enter fldt decb hlt and dec dec js (bad) lock mov stos pop mov pop adc (bad) mov or xchg and cld loop mov dec iret ficom cmp xor jb push sbb adc nop mov daa mov mov je pop cmp add popf and add cmpxchg jle mov fmull cmp out aas mov je xor mov adc add adc dec add cmp mov lea mov inc pop adc add adc xor enter repz mov pop popa dec jmp mov cmp fucom sub (bad) (bad) xchg call stc xchg add sub xchg jecxz xchg push ficomp cmc repz adc lods or out xor add inc stos dec xchg (bad) xchg xchg popa jl dec js int3 xor adc inc xchg xlat movsl pop rcrb sub sub dec adc pop pop jg inc les nop into adc jnp int cmp xchg inc dec or xor call and jno outsl pop add cltd and movsl popf mov jp in cwtl or daa inc dec outsb addl (bad) aas push ds into mov je and insb add push ss lcall mov (bad) je xor ret inc add adc mov int icebp mov add sub loopne lahf rorb push push test arpl cmpsl popf test jne stos push dec jmp adc int loope xchg adc lds xor add jb or mov push adc imul pop jnp push mov adc fist stc (bad) int pop lret adc or (bad) jns gs mov jmp test imul fcoml js aaa jmp or adc push or mov inc rcrb fsts es ret lahf stc (bad) jge adc out mov rol jp adc dec sbb mov lret fcom iret subl add aaa sbb pop jmp xchg inc ja or adc nop sti push rclb test pop rcll inc fs push sub jecxz cwtl stos aad adc sti mov jne pop es xor adc xor (bad) xchg stc adc daa aam pop imul xor pop jl sti mov adc jg mov push movl push mov ror adc clc les in or test mov jmp (bad) mov cmp add sub or loop inc xchg sub (bad) pop popf aad ja adc xchg jb adc imul pop cmc test jb jg and push rcrl ret insl rcrb jne into mov cmp mov sahf mov outsl and test dec cmpsl rolb movsb mov sti stos adc and ss add lods loop add popf out add xorl out dec mov adc pusha jp xchg mov sub mov adc in (bad) add sbb aam lcall push mov dec xchg in xstore-rng cmpsl ret adc pop lock adc sub push outsb fs cltd add fldl xor adc sbb xor jb pop add pop xchg or and adc push pop adc mov mov pop sbb xor call adc add pop icebp aam cs inc (bad) adc push (bad) bound jp xchg lods sub adc cwtl xchg std jp rclb out lock add and adc popa mov (bad) push xlat mov repnz pop inc test or sbb aam push xchg or not iret and pop pop sbb sub gs in je jo jle faddp adc orl neg xor adc test jecxz and dec in pop inc xor iret sub lds fiaddl xor push sub in sbb and mov adc push or (bad) xor dec std (bad) jmp in in int and cltd xchg repz sub mov xor fisub testl cs adc jge jl stc mov ds loop push pop adc xchg mov sti sbb test jge addr16 xor pop pop les mov inc mov test int3 sarl cmp cwtl loope and les int3 cmp jecxz sub push inc push imul jge adc out bound pop aaa adc movsl push lea ret out (bad) inc pusha xor add mov (bad) cmp push adc dec dec (bad) leave (bad) adc sbb cli adc outsb dec or jns gs mov addr16 (bad) in jbe mov inc cmpb cmp pop out adc adc mov push dec inc mov js xor adc mov adc shrb add mov jge jne ret nop push push push pop leave push into or pcmpeqb xchg outsb mov mov add fisttpll ja xor mov lahf dec scas or adc add aad insb or inc shlb lds xchg cmpsb mov jp fimul adc outsl pop stos push pop inc cmp leave adc stc push cmp jecxz xchg popa popf lea adc cmp push sbb insb (bad) loop add rolb xor pop les mov pop dec mov xchg ret mov repz adc (bad) rorb dec or in adc scas outsb adc fnstsw pop adc cmpsl cmp mov pushf aad addr16 rorl inc sub add mov or (bad) mov dec push loop xor adc int3 test mov test in push inc or jmp rclb test adc adc popa pop insb nop mov nop pop push cmp aas sub sub xchg or cmp stos xchg test (bad) rcrb stos insb or pop repz aaa xor repnz jg cmp xchg jne push adc xchg fild pop lock ljmp sti cmp and orl xchg pop rorb cli repz mov lcall push push addb leave insb adc mov jae,pn pop or cmpsb negb sub bswap add sahf popa adc mov mov sbb jo push jmp adc dec mov aas repz xchg fsub and cwtl or movsb test pushf adc adc arpl mov xor cmp inc (bad) daa or adc cmp sub adc pop sub int loopne inc repnz popa dec and mov dec mov stos jg test orl pop or je aad sub and enter punpckhbw fidivr adc push fcoml pop sub jmp jo in push incb hlt and mov xchg mov mov cld aas setl (bad) rcr fidivl adc (bad) icebp fsts leave sub mov mov pop sarl das cmp (bad) xchg mov jp sub mov icebp (bad) jnp adc pop adc adc adc aam fwait nop aad movsl or sub or xor or adc mov or mov cmpsb les adc bound xchg jl outsb mov add xchg or fldenv stos mov inc push or adc sbb add outsb push lahf je jg rclb scas push movsl dec pop mov outsb mov dec rolb hlt mov lods xchg addr16 mov aad adc test leave gs shr rol inc aam int adc lods cwtl dec (bad) shr adc (bad) outsl mov mov jp aam fs (bad) adc sub js mov ljmp (bad) mov jno jge add sti adc cld fdivrl adc inc adc jl push mov dec lds (bad) or aaa pop cmp in cmc sti xor jno les add movb adc ss push mov xor stos out lods (bad) dec in or adc push neg push jg enter jp add lahf jmp fiadd pop adc pop adc iret and pusha sbb mov repz inc push jne leave sbb fsubl adc cmp (bad) adc std lcall dec orl sbb pop dec xor sbb pop (bad) outsb adc in sti repz dec stos pop (bad) xor jmp add add roll jae or dec lods mov jb ss cmp inc mov lock rep pop sahf in cmpl jle movsb push adc or bound in rclb enter adc add jl mov cmp sbb cmp adc pop pop push fsubr (bad) clc mov mov xchg pop movsl jnp mov mov xor sub xchg mov cmp (bad) dec adc cmp sti xchg test sub fnstenv cmp xor push in icebp sbb rcll mov sub adc mov add fistl jns mov out or pop add mov in fs pop jne shrb loop mov xlat adc adc inc mov cmc (bad) (bad) cli ja dec mov out (bad) cld inc adc scas int3 fisubl dec dec adc xchg dec test xor xor inc out adc sub adc xor cmpsb mov out lds jae pushf xor cmpsl aaa (bad) push adcl pop dec leave mov xor (bad) scas sbb adc repnz cmc std adc addr16 add mov adc mov clc add pop sub inc cmp xchg add or jae adc sbb xor xchg xchg int ffree sbb das adc pop mov inc adc in mov adc ljmp inc int3 clc dec sbb push insl sub sar adc sub push or adc and loopne mov sbb xor or ret push jl adc repnz addr16 aas cmp and cs (bad) repz into dec sbb adc pushf pop mov lock and xchg out cs into lods jl daa leave fdiv loopne test adc ud2 jae pop fisttpl jns scas push pop mov fadd enter and and inc (bad) lret sbb ljmp jo sub mov mov xchg mov dec out fisubl mov push and rolb ds mov ret jp inc push test mov dec out push nopl adc outsb sub nop test fcomp jmp jne fsts pop push cmpsl mov mov cmp xor (bad) ret test dec (bad) adc shrl test lds ret sub (bad) mov mov pop in ret mov std int3 xchg insb lea and pop add dec repnz xor and adc jne ret adc fnop add test inc mov pop pop fisubl xor jl (bad) lods lcall fisttpll pop and test mov and push mov adc fdivl in add sti (bad) loopne adc xchg dec add mov rcll int or repz out dec and or adc mov int3 movsb stc jnp adc les cmpsl repz adc imul popa add loope jl pop mov adc mov push or adc adc adc jmp mov int mov xor bnd sbb (bad) add adc inc xchg icebp test insb (bad) repz ret insb sub repnz stos jns fwait inc rcrb pop and das adc xlat and sub hlt lds add gs adc mov (bad) inc xchg sbb std lret jnp pop test push xor xor sbb popf pop cld jp cmp mov or repz adc or cmp adc mov or mov sub and xchg rcll adc test mov out loope dec mov xchg xchg cmp xchg shrb clc add hlt notl out push insl out cmc sbb cmpsb sub sbb sub jnp push (bad) insl pop loopne mov cmpsl sub insb adc aas fistpll std jno repz jg lea pusha repz mov or add mov fsubl xchg gs sahf es inc insl push je ret dec adc (bad) mov mov iret adc nop inc mov int3 adc pop test mov jg lahf loop hlt movsb dec adc mov jmp dec sbb sub pop xor fidivrl (bad) xchg sub adc dec mov pop jle mov adc pop into test mulb push rcr cwtl xchg sahf sbb test sbb lea xor mov lahf (bad) (bad) adc (bad) popa add sbb mov add sub ret mov cmp adc push ret add adc xchg push xchg pop push adc jne mov pushl arpl jbe xchg mov loope push xor dec sub mov sbb jb aad mov jle xchg (bad) repz dec idivb test insl adc jmp in sbb pop cmp adc or (bad) jb push add lods ret or mov cli in jnp into mov jo sbb fcmovbe clc sub mov les arpl insb pop add inc adc sub pop lods adc mov enter pop addr16 jno xlat mov inc stos adc push push jbe xor adc cmp mov jne xchg arpl aas cltd add pop jae adc (bad) sti imul movsb mov outsl mov mov fdivrl adcb lods mov or and repz int3 adc and push push repnz xchg sub clc xchg adc or cmp mov je jno mov cs mov dec mov jle adc inc mov xor or fwait lods loopne xchg ljmp (bad) inc cmc and adc xchg sbb lock xchg push (bad) jno repnz sahf adc rcrl sti inc adc shlb adc adc cmp cmp pop movq dec inc (bad) adc xor jle outsb pushf scas (bad) fcmovnu adc lods ljmp add sbb rolb mov or pop cmp lahf xor push repnz adc in mov les mov insl inc ja adc in add push add bound inc mov leave push push inc test std repnz push cmp insl cmp nop xchg ret out sti ja inc adc adc inc dec fldt mov out pop mov or pop push adc xchg jp shll loopne adc push outsl and mov xchg xchg ss cmpsb adc sahf ljmp fwait popa aam fsubp add shlb movsl sub adc das lock (bad) out leave sbb push pop sub inc push push inc adc jge inc std fidivl movsb (bad) pop xchg stos das adc add fildl pop int mov insb adcl xchg and out (bad) sub jne imul adc mov jle adc xchg inc push cmpl dec mov xchg nop add repnz scas mov (bad) fmuls push pushf sar mov gs sahf xlat adc int test popf pop mov iret dec paddusw cli jp sub out rclb and mov dec adc inc ds fnsave lcall sti ljmp jae adc or ret or lret test arpl ja mov fistp pop sbbl jbe or lock mov fistl mov ret adc sub out push mov mov jmp pop xchg xchg cmp psllq inc push cmp adc and (bad) adc fisubr daa repnz mov flds push xor sar xchg (bad) jae push pop out dec ficoml (bad) push (bad) sub insl sbb rcr push loopne add je push andb in adc jo dec adc push (bad) shlb add adc test adc mov sbb adc std jecxz xor (bad) mov rcrb sbb popf adc out loopne stos mov sub add xchg sub cmp cmp pushf mov push adc sbb (bad) mov xchg mov sub out sbb sbb sbb sbb imul scas sub ljmp cmp insl in jl adc xor mov adc sbb add pop or add inc orl sub std adc test (bad) into cli push cmp aaa out or push mov adc lods cmpsl rclb aad mov xor mov pop xchg pop inc in adc mov xor pusha fmuls aam adc xor ja dec loop adc sub lock jge adc inc scas adc out mov pusha repz (bad) dec push fdivrl test pop hlt mov imul mov xchg inc jae xlat arpl dec xchg push or sub movsl (bad) add aaa mov push nop add jle mov sbb push into pop xor inc rcll arpl jg adc scas divl cli sbb mov pop adc daa adc inc je mov xchg les adc xor hlt lcall add and add rcl push cmp pop in xchg adc ds gs adc leave mov repz xchg scas loope cmp movsl sub pop repnz add rcrb inc stos cmpsb push aam aaa hlt out scas or repz mov les mov xchg clc out xor cmp imul or mov stos xchg mov add insb inc cli adc cmp mov pop xor pop or clc mov or jle pop fcomi sbb add or test xlat cmp jae repz xchg jns adc or xchg repz sbb or imul fildl inc pop leave lock jp imul add dec mov int popf (bad) push jmp xor in insb adc jo fldt or enter mov clc pop adc loopne push mov (bad) adc (bad) in inc stc mov arpl mov sbb fsubrs mov adc pop fwait movsb adc mov jl xchg sbb adc addr16 mov sbb mov shrb call leave mov cli xchg adc jle pop rorl rcl inc aas mov push lock xor outsl out mov loope jl sbb add mov jnp xchg movsb andl (bad) rorl xor sub das cmpsb push xchg lds adc ss cld mov push in add mov adc (bad) mov jno stos jno aad or mov shll dec xchg cmp ficoml in mov mov imul mov stos iret loopne and inc adc test xchg add inc xchg data16 xor add pop or js lret add and adc push int3 lods dec mov adc cmp lret subl mov jle rorb pop mov adc dec sbb in dec sub jno sbb lods sbb popf xor add push test (bad) jmp sbb inc mov fs push xor movsl and sbb adc iret dec ficomp (bad) jae mov xor push stos add sbb ds or movsl inc je adc cmp adc jl gs mov adc cmc sbb adc dec daa mov sti xor jns or fsts mov out in cmp ror insb out lret sub cltd nop fstl sbb inc sbb jle jge addr16 or sub lods adc imul mov jge jno and mov shl ficom add sub pop pop (bad) lsl popl adc push mov add insl test adcl jne adc pop pop sbb xor int jp addl xor in daa cmp mov out outsb dec nopl stos call stc mov in xchg pushf arpl lcall adc and add imul adc inc jl adc sbb inc mov fnsave pop loop lret adc sub mov pop cltd test sbb adc mov dec out sub xor stc test out pushf clc test cmp mov cpuid jl add lcall adc mov adc fimull push xor loope rcrl mov mov ja push adc out push pop adc outsb xchg inc xchg cmp clc pusha (bad) into or adc (bad) js push (bad) add mov inc decb xchg push pop mov or out test inc jge xchg push aam adc (bad) lret lahf (bad) mov lods adc test lret add mov loopne lock push lods mov mov iret inc adc lock fistpll xchg fs loop es adc cmp div std mov push aad fsubs int3 inc (bad) adc adc (bad) jge lods adc std xchg add mov sbb shlb lret incb adc fsts shlb adc sti jne add outsb sub in xchg mov adc mov xchg nop add or aad cmpsl nop jb sbb pop and xchg or add sbb test push push js xchg lcall jno xchg add mov inc jns ss xor jmp js aad (bad) sahf jp xor mov xchg in pushf inc fs call fwait cmc sub mov push icebp adc mov inc je fdivrl out (bad) sbb mov (bad) fiaddl adc sbb insb sbb fsubrl mov sub adc fisttpl adc jb imul lea xor mov aaa adc dec or or sbb inc jle scas or mov jge sbb cwtl adc mov adc rcr xor adc dec je out adc add repnz xchg and sbb ret xorl ficom out (bad) adc sbbl gs int3 bound bound mov mov insl lea xor mov jbe outsb jno cli push adc bswap loop mov in mov sbb adc xchg mov (bad) int3 leave lods xchg cmp roll in or push cmp sbb jnp adc and mov xchg lcall xor or push or jge pop mov cmp adc adc insb rcrb lds adc shl cwtl jns or xor cs sbb movsb lods jb jbe test mov shrl and adc dec adc jp push inc insl xorl sbb jnp xor pop adc sahf adc adc in into add icebp nop movsl dec mov mov xchg adc cmc jl add xor add cld xchg (bad) int xor lods test or mov push cmpsl cmovae jae push xorb add mov adc insb cmp adc movsb std xor jo test fidivl dec xor in add lods test pusha adc or iret pop mov adc jg xor fwait cmp ret sbb sub test push rorb jmp push push sbb push adc lods push out scas push cmpsl fdivl out add xchg jp adc out aam mov adcb push fwait adcl rcrb aam pop adc xchg lds fwait jp repnz stos adc cmpsl enter mov pop add jb pop aas adc inc dec fidiv call mov jp (bad) adc jne int3 jl push iret insl jae aaa ret pop dec mov adc adc mov sub sbb lret adc jmp add in icebp mov adc inc mov rorl pop addl cli pop and adc mov stc add repz jecxz (bad) push jmp movsb sahf int3 sub clc in (bad) je cltd mov lock dec mov out lahf inc adc outsl adc pop aad push sub cmp add mov adc jno cmp pop stos dec cli adc push mov pop pop xor std ficomp aaa int3 ljmp notl insl jo imul cld sub push jecxz and cvtps2pi and bound mov push pusha dec mov pusha inc sbb add mov cmpsb adc ficom adc mov cmc loope sub lret pushf hlt dec mov xor add dec or stos jo subb sbb xchg iret jge cmp or mov jl bound mov mov dec cwtl ja fs mov stos inc mov fstpl aam dec push mov adc movsl or fstl mov pop or xchg mov pop enter mov notl gs cmp jno in mov jne jae fldenv in add adc jne leave adc loopne pop fstpl scas adc arpl xchg jle cld lods adc les push js ds mov adc stc (bad) mov cmp rorb lock or adc and dec or gs xchg adc adc lahf jle xchg (bad) adc insl (bad) or mov pop push sahf andl cmc lar push jmp jne push scas test cmp pop in adc je mov jmp push and lock add insb orb and mov pop bound xor xor fcoml fildll (bad) adc add pop mov js je movsb cli dec push add dec outsl adc das mov lods xor or adc loop cmp add ds mov adc jl push out gs or push mov pop ds sub enter scas mov pusha xor xchg xor imul mov bound out add dec lret xor push jb sub adc xchg inc mov aas jecxz cwtl movsb adc rcr (bad) or ficompl repnz addr16 fiadd mov sub pop adc cmp popa fisub jbe pop mov call sbb adc in leave insb mov fisttpll push out mov add fisubrl bound mov adc (bad) testl push xor daa sbbl cmp in cmc push adc scas mov or pushf sbb xchg fwait pusha jnp inc (bad) ja add cmp int3 and adc xor icebp cmp xchg mov daa shl pop adc ret out in pusha adc xlat pop test xchg push call addl insb sahf mov lahf lods fcom out (bad) lock adc in cmp (bad) scas std cmp adc fwait sbb push fstpl ss icebp imul mov (bad) adc clc pop ret push sbb and mov aad dec adc sub xor adc jp test xor mov arpl (bad) mov adc xor mov adc pop adc cmp std mov adc add pop xchg adc adc cwtl cmp pop xor fidiv adc pushf push cmpb inc mov xorl popa xor fisttpl jge adc mov push lea pop and lret cmp mov jmp in xchg call or and cmp pop push jmp inc or clc jge shl test rcrb mov dec fcoms sbb fs fist ret sti je sub out mov imul fcomi jno adc (bad) (bad) ret xor loop inc cmpsb imul rolb add mov adc push pusha je lahf or adc jbe or jg add or daa mov push shrb mov push push fnstenv mov insl inc xor fmuls or mov and stos call aas jo xchg movsl repz (bad) mov popa adc or gs push xchg js dec test adc aad sub sbb lahf jnp movb insb dec xor jge cmp fisttp adc sbb mov iret or jp jbe mov cli fs imul sbb mov inc aam in sarb outsb adc data16 lahf jge aam add adc mov pop adc outsb inc add mov and pusha xlat bound sub dec mov ljmp mov inc push popf dec cmpsb add mov sub pop cmp jne mov mov or cli pop bound sbb xor push ljmp (bad) fwait cltd fildl and in or bound arpl or pop adc rorl mov jnp sub push add adc ja jo mov adc sbb pop repz shlb pop pop fdivrs dec icebp mov cs lock mov adc sub adc scas or pop or mov pop dec mov xchg fwait inc repz cs push test sub pop adc and adc mov jne or cmp add pop popa insl lock mov sbb and inc insl xor jne loop add push push sub in lods mov pop or dec add adc sahf jo into outsb cwtl icebp inc inc xor stos xchg sbb (bad) les cmp or adc mov push (bad) adc add sub or inc pushf adc inc sbb mov add out push push js jg outsb repnz adc lods cmp dec fcmovu jno xor mov adc mov jge out lds push push sahf cs mov and pop inc addl or mov hlt movsb ds in lods (bad) lds mov stos pushf cmp add lret mov jmp and stos lods clc adc xor pop adc push shrb adc jg mov icebp inc notl imul rclb call push adc cmp xchg pop fdiv add cmp ds add (bad) rep (bad) jb in adc mov mov xorl inc sahf xor idivl jns push lcall sbb stc pop xchg shl mov outsl pand add xchg add mov or neg stc je xchg mov dec mov pop push adc ret dec stos adc jp ss sub adc mov inc mov mov lret idivl adc test stc inc sbb push es insb sti lea push mov cmp adc pop test rclb mov mov fistpl fadds jecxz push outsb arpl std je mov mov xor sub (bad) push cli mov or mov ljmp jp loopne sbb sub inc sbb fistpll nop adc pop fs ja (bad) adc cmpsl into adc sub lock mov mov adc xchg sub pop adc jp repz gs repz push push mov adc ret and mov jl lock cmpsl imul pushf inc nop adc jne mov sbb (bad) mov add push js arpl out xor stos mov movsb fbld lret jne sub xor (bad) dec add or dec push adc lcall or push lods and adc sub cs (bad) scas repnz add xor sub insl adc sti fistl test jecxz outsl divb lods movsb arpl inc dec push repz or pop mov fcmovnu xchg insb mov xchg lahf dec sub mov and xchg or mov jno lcall lret push rcrb jmp testl sbb add ret cmp pop fstps out mov fwait arpl mov out (bad) adc call imul leave mov xchg icebp outsl jb and adc fisttpll adc (bad) icebp sub out lds scas call enter addr16 dec jp cmp mov (bad) clc mov insb in arpl mov jae (bad) das xor mov sub xchg pop jb adc outsl inc cmp adc inc rcll adc mov leave or push nop (bad) jno xor lods mov mov aaa mov mov cmpsl adc loop dec adc push jmp jecxz or jbe nop shlb xchg ja cmp pop das pop sbbb (bad) bswap adc jmpw mov out add mov repz into imul mov cmp mov adc ljmp sbb std insl loop fildl rcrl rolb dec adc xchg fwait out jl adc (bad) lock mov (bad) (bad) adc xchg push sub mov insb call adc test mov call adc sbb test pop repz add js add scas lods clc pop shrb push dec pop inc lret xor loop sub (bad) mov outsl in loope (bad) mov out call cmp cwtl stos popa xor loopne push fistpll (bad) fsubrp or adc cli pop mov adc adc push imulb daa add inc andl mov jbe adc jo sarb pushf rorl jnp mull outsb add mov pushf adc mov xchg sbb (bad) mov sbbb jecxz inc bound sbb mov xchg jnp adc push adc adc and mov sub popl pop mov call insb or (bad) les hlt loopne mov mov repz mov jbe push adc (bad) xchg xchg cmp movsb mov lock sbb test jno fcoms pop aas fiadd mov jecxz jne mov mov add xor je jo adc scas mov sarl adc inc leave jnp (bad) jno pop pop adc outsl loope mov pop inc cmp sub sub fwait xlat clc cmp adc mov push stos leave out xor (bad) cmp nop or das loopne dec hlt call gs inc into jmp stc scas sbb xchg add mov lret push lret jge fiaddl sub dec sbb mov or cli jb xor stos adc fimul adc xor xor ss test mov jmp jmp dec lcall mov pop pushf sub or pop jg adc pop and adc inc arpl aas gs mov call pop cwtl loopne xor pop adc imul adc addr16 jge stos add in fadds mov mov pop (bad) adc adc push fsubrs jns insb add pop daa xchg inc scas fcmovne adc adc cmp push adc mov dec adc dec (bad) fildll mov movsl push xor ja adc pop inc pop out sbb sbb mov cmp inc xor pop mov in mov mov int3 shl (bad) negl and es xor mov out mov push inc idivb lds mov leave idivl add mov fwait imul xor daa mov cmc adc push cmp in pop les out shlb adc pushf cmp fwait push out add jecxz ja adc xor jnp mov xor hlt out add add aam add fsubl int3 sub mov mov and mov cmp add test cmp arpl jecxz cmp fildl mov and adc jge inc mov aam sbb and xchg sub adc mov adc shll xor cmc inc lret iret out sub test inc xchg nop lea aad movl leave mov cmp adc sub push adc xchg (bad) pop push push gs (bad) lock sub leave add sub lahf fcmovnbe or mov and (bad) cmp cli fcmovnbe jecxz int3 jae pop sbb fdivs lret sub mov adc out imul test jbe rolb std adc xor adc pop imul cwtl xor fnstenv ds in sarl rorb mov jg cld jo cltd test int in fs clc push adc repnz daa pop in xchg hlt adc out adc dec mov sbb cmpb push popa and cmp lret divps jno test (bad) daa rcr adc jbe pop adc cmove jno sub add mov mov inc jge mov cld repnz xor scas push adc in add adc popf test rolb adc push jnp les call jne mov out xchg ret addl dec adc in pop push xor cmp or pop jae pushf arpl xchg movntps adc jecxz mov lock adc mov data16 add mov sub sbb adc jae (bad) enter fstl movsl pmuludq mov das sub les mov adc mov and adc jb or or add lcall mov sub cmp (bad) cmp test loop pop pop cs popa aam les out (bad) lret in xchg add adc test ja out mov mov pop or repz jecxz insl lret jnp in adc rolb cltd test adc jl ret jne jnp stos movsb dec sbb mov xchg (bad) out xlat adc loopne mov std (bad) adc jle daa (bad) std adc out dec adc cmp and push xor sbb inc add repz test outsb push cmovnp inc dec dec push inc mov fnstcw dec stc and push stos movsl cmpsb mov xor test pop push push sbb loope aad daa xchg jo or jmp mov sbb add jp in mov call (bad) pop or loop adc sub in insb xor loope sbb pop and dec (bad) or xor jg cmovne adc jl imul jno movsb push int3 cmc out or frstor movsb mov sbb adc bound adc jb ret jbe fldcw adc fadds mov sbb mov in adc jg ljmp add xchg adc jo scas mov out psllq loop pop pop icebp popl mov arpl or adc push inc push lret push adc (bad) pop and into adc stc test rcll mov adc movsl jl mov sbb mov jnp or pop sub pop adc and mov mov in fnstcw xchg cmpsb lods movsl into pop xlat adc lahf or adc mov icebp into adc or or or pop and lret adc decb (bad) fdivl mov cwtl adc jae cmpsl (bad) and push ficompl cli or or je adc or loopne xor adc adc in iret adc pop cmpb jbe lcall dec dec iret sub push pop adc rorb hlt (bad) xchg nop dec or adc push int3 (bad) dec jp into into inc adc aad movsb push fs xchg cmpl pop roll jns xchg xor in arpl rcrb imul test xchg jp sbb and adc adc (bad) les loopne pusha adc in scas sub mov mov insb int dec test xchg push sbb mov dec mov sbb adc pandn repz (bad) mov dec push mov rorb or lahf sbb mov push sahf leave adc xchg adc pop xchg movsl adc loope push or data16 cmp aaa cmpsl xchg adc or and aaa scas xlat mov adc loope xchg adc mov icebp adc iret nop push lods out repnz test or jo xlat pop inc xchg lods into mov xor jb xchg cli mov mov or inc ja xor mov lods or mov mov sti pop ficoml xchg rcrl stc out scas in adc xor shrb insl dec pop xchg push out xlat aas lcall data16 mov xchg mov dec aad sub sbb ficoml xchg mov xchg cmp js mov scas adc mov fiadd mov movsb out sbb addr16 mov mov adc cmp fstpt or fisub aaa repz aad cmp repz xchg push push in (bad) or adc mov fsubl dec pop xor mov dec (bad) cmpsl adc mov pusha jb xor cmc andb xor ljmp inc xor adc jae ja xchg (bad) push (bad) rorb cmp or repz sub dec mov pop or cmp mov or cwtl adc loope mov leave pop mov xchg xchg mov mov or shll in repz or sbb adc xor (bad) mov push adc test xor dec jb and or pop leave js insl xor int enter outsl (bad) mov mov add mov push bound outsl movsl and sub jbe in sti sub rclb mov int push jae pop xchg addb jl mov in adc cmpsl mov adc inc jne jnp add fsubrs rcll mov clc jge adc mov jg or out sub xchg in rcll push mov mov enter in inc (bad) push jbe mov or iret aas loopne or fcmovnbe ret orl lods mov dec inc mov adc dec stc mov inc dec popa arpl cmp adc sbb and pop sub push ja hlt aas stc in or mov mov jns push out insl mov dec xchg or stos add jno lock addr16 adc (bad) adc inc int3 repnz dec lcall xchg fisttp pop mov mov adc mov std inc mov dec adc popf or sub dec adc mov fildl dec mov pop js push pop push adc lock pop je cmp mov or push xchg pushf adc dec icebp mov jp adc adc notb and (bad) sbb jno out sbb dec outsb bnd push xchg fidiv jmp jbe push adc lret jge cmpsl (bad) push adc cli fistpl imul or adc call sub into es gs sbb test xor inc add cltd adc fdivrs fwait repz pop jo fldl dec shll add or push fnstenv mov pop stos leave adc mov mov adc out sub adc lock test adc fcompl pop imul inc and lret loope xchg fnstcw jg add or push les add add mov loop or inc xchg lea scas inc js adc dec rcl (bad) mov adc cwtl jl and lea stos test xchg lret xchg out fcmovbe (bad) loop std cmc mov jle dec popf lret adc or fcmovne inc sub loopne xor enter outsb mov jns mov mov sub lods andl pop cmp int or or stc fdivr cmp sub sub insl movsb mov pusha mov (bad) push xchg add sub les sti pop iret xor mov call adc (bad) outsb push sub rcll mov mov movsl cmpsb adc (bad) sbb je and xchg call sub sbbl movsb pop mov cmp push jmp jecxz cmp sbb adc pop fiaddl adc popa mov xor jbe sbb mov sub dec and adc pop lock out ljmp mov shrl scas mov add nop lret leave fcoml inc push inc test adc pop loope mov dec xlat add dec fs sbb add nop sahf hlt roll mov (bad) cmp adc lret frstor xchg shll lock loope (bad) xor call pop sarb mov sub adc inc push xchg aad cmp pop in inc adc (bad) das out cwtl xor mov adc inc int3 add in mov push mov jns pop std sarb jmp adc (bad) mov shlb ljmp jecxz adc fwait add rcll sbb icebp adc cmpsl sbb mov lcall pop decb adc or push test xchg dec insb shrb push (bad) setne scas adc repnz pushf mov adc mov mov mov mov adc das (bad) fildll fmuls add adc dec mov jbe push adc fsubl mov and sub scas adc mov test push das xor lock push jecxz inc ret adc lret mov gs popa lfs ret fs sbb jno and arpl xchg or cltd mov jp dec fcoms pushf or mov jb sbb adc es pop dec adc aas in cmp mov and loope popf dec das xor jge add jp pop adc and out pop (bad) lds popf pop mov inc int xor aam adc das je lea (bad) pop test repz scas and adc add add pushw jecxz std je mov push testb pop jmp icebp adc add in push mov aad dec sub ds je cld shlb mov add mov or jp out mov add lds popf xchg push jmp adc adc adc pop cmp xor movsl add jno push dec adc out mov mov adc add xlat out xchg xchg loop js xor mov fs push pop mov or sub adc cmpsl mov sub and imul enter cmpsl mov pop jo (bad) mov adc or xchg adc add jmp test nop adc jp test in cmp xor outsb test and mov mov dec add mov imul inc xchg xchg jp adc xor pop fmull adc pop sbb bound adc mov in add sub fs and aam ret icebp je mov lods test movnti cld adc sbb mov repz add adc js rorl sbb lahf dec mov dec mov inc lret pushf mov sbbb stos mov and adc test adc dec inc (bad) xchg cld or add scas into xorl or and repz xchg repz sbb ss dec mov xchg sbbl adc push mov jl test inc cmp mov xor adc lds sub loop lea xor inc add pusha sbb adcl jb (bad) loope imul push adc mov mov lods out mov int3 outsb mov add or mov scas cmpsl jo mov jle loope repz mov (bad) negl sbb lea sbb cmp dec mov rolb inc (bad) loopne add aad pop dec mov test ret movsb mov lock das mov bound adc aam add dec adc jp repz fnstenv or cs adcl jl mov data16 les add add dec adc outsl cmp sbb mov popa adc enter push data16 fdivrs xchg mov push rolb xorl jnp jp push mov adc fcoml mov cmp xchg cmp je fcmovnb in dec (bad) push mov or inc movups push push dec push das xorb out cmp adc test test add roll add lcall xchg cmpsl sbb or and fwait pop add mov imul dec popf test sub push test stc push cmp loop rcrl je dec in pop push dec dec mov leave sahf call rolb mov cmpsb jns movb xchg fiadd dec (bad) mov inc dec notb sbb dec adcl lcall repz mov push jl dec rcl int3 add adc pop pop repnz adc add mov out push scas add outsl ficoml adc fisttpl jbe mov in int adc inc in mov sub int3 mov je sub daa and test ds mov push pop mov pop ja inc xor aad push inc adc lods xchg push xchg or mov push insl les adc inc pop inc lods je orb inc sub scas imul sbb outsb mov or sbbl adc das cmp (bad) mov test cld ficom cmp (bad) rcrl std xor (bad) rclb lahf adc xlat jne enter lods movnti dec mov adc sbb sbb sbb (bad) dec mov pusha and push (bad) pop jns adc inc mov xchg adc (bad) add adc lahf dec lea addb insl dec popf and sahf add lock mov dec dec jnp adc pushf sar sbb adc sub cmp push test ret in insb add (bad) inc mov orl loop dec mov pop out dec iret mov sbb jae fstps adc add and shll test cmp adc (bad) and popf loop adc stos mov lea xlat jb or mov add mov outsl negl (bad) adc dec ret fcompl movb sbb adc rcrl repnz dec pop adc mov daa loope addr16 adc in add stos adc mov lahf inc push jb mov mov adc lods loop mov xor push sbb ljmp bswap lods sbb pop aad nop push insl or jg (bad) xor dec fsubl jo mov loop scas mov adc add movsl cmp pusha jg and jmp or pop adc sarl and and push daa frstor (bad) cmp loop jmp fsubs dec push mov sub sbb fbstp ret xchg mov fisttpll cmp loop pop adc sub add lret add adc shll repz pop xor mov ds or adc jp push fldt mov adc js adc adc adc pop xchg cmpl jno sbb cmp data16 notl xor push popf sub mov cltd cs xchg cmp adc mov xor or in or (bad) adc adc push adc arpl push adc xor fdivrl or jecxz and xor pop notl jbe jae inc sbb lret adc xchg aad fisttpll adc xorl cmpsl fcoml adc inc xchg je or and dec mul sbb adc adc push pop push sub cmp adc rclb pop int in dec add outsl sarb mov or inc adc jne cmp push repnz clc sub out sbb aam in adc mov cmp jns jb pop and dec adc movsb push mov in mov mov mov test pop mov sub fistpll fdivrs clc sbbb jo xlat push xchg (bad) jp pushf aas xor inc stos mov mov cmp adc push mov sbb inc xor mov loop mov adc fs push enter dec into test es sub and jns inc clc mov add out adc add dec xor fiadd cmp scas je mov add (bad) aad mov sbb push les and inc xchg cmpsb cwtl xor push adc repnz mov xchg movsl mov xor movsb sbb pop clc hlt inc pushf or inc lds sub add cmp cmp mov or mov inc cwtl adc push std dec and addb fldenv sub jmp test stos dec jg mov mov ja mov adc jnp sub (bad) dec mov dec sub cmp and cmpsl sbb loop add lcall dec (bad) dec adc fdivs push adc push in sbb imul das add int3 add push fst repnz sub cmp jmp adc aaa enter add (bad) ss inc test or jae cmp cwtl test enter adc adc in ficompl mov (bad) mov cmpsb (bad) xchg add mov pop add inc cmp les adc test in mov pop add add cmp jne xchg outsb mov dec ljmp adc adc fisubrl shlb xchg out adc sbb test or scas jne jo loope adc out test into and sub jae adc and daa incb and lods adc or iret repz aad aam adc dec incb rep jl (bad) cld cmp pop mov adc push or out xor adc mov repz adc mov push or scas out and jbe cmpsb pusha mov ficoml xchg sub into jge jecxz pop sbb mov xchg fnsave adc nop ficompl lock adc dec xchg sub jb mov mov sub mul adc pop push (bad) jne movsl jae xlat test dec pop imul popa loope pop out add bound mov fistl mov test pop mov fs (bad) xchg or pop jl adc mov xor mul push inc adc push dec cmc push adc ljmp adc xchg dec sbb sbb daa mov (bad) adc lcall xor jno sbb movsl adc lds imul sahf pop outsl sarb sub pop inc xchg push mov les lods sub lds pop out das shrb (bad) dec mov outsb jb inc movsl test mov ret in add mov push loopne outsl mov or mov rcl adc mov (bad) and xchg test xlat orl adc xchg mov push adc sub insl ds or adc push xor sbb adc loope mov adc jnp pop std sub jge mov lea mov push push addb ficompl mov (bad) fadd adc xchg add rcll (bad) pop subl push stos adc int add cmp mov mov sub jp rclb shrb sub es xchg shrb enter mov repz dec popa xchg nop test mov (bad) fdivrs and xchg hlt mov into jle pop (bad) mov xor aam nop push add pop stos popf (bad) int3 xchg adc xchg and xor cmp cmovle (bad) jbe int sbb mov mov ficoml mov test mov outsb push jecxz or mov out lds pusha push mov arpl cmp ss mov xchg inc imul sub push mov xor adc cld inc inc mov pop push lret inc push sahf lods adc mov and pusha push mov mov adc xor sahf adc jl mov adc jb fdivl fnsave adc ret inc mov adc ja pop shll cmp adc out (bad) in mov add (bad) xchg lahf loopne lods andl pop dec add adc or out adc enter mov and mov stc dec std outsb jno into bound mov ret mov mov cmp adc mov leave xor mov je push int out aaa jmp cmp lea out fs movsb insl int3 mov mov aaa sub in mov mov adc in push nop and adc xlat into adc (bad) mov jle adc lds and shrb adc stos inc jne push outsb popa jge pop mov adc (bad) jnp sub sti mov cltd adc ret xor mov repz mov inc sbb fs sbb int mov cmp adc adc (bad) jb jne xchg push mov mov out std ds adc mov pop lret xor xchg and insl (bad) or lods mov mov pop popa imul push dec mov es fs rclb aaa out in scas mov jecxz sbb pop sub lcall (bad) push popa adc fisub imull cmp adc enter das fs jbe iret dec sbb mov xchg mov adc and pop dec pop fcoms jns xchg int3 les sub (bad) shrb add enter push pop push jno inc pushf sbb xchg jbe jg adc cmp clc repz daa dec inc jnp mov movl add mov add push inc movsl cltd mov sbb bound (bad) in outsl js je loop pop loopne cmc adc iret aam shrb adc gs mov fstl xlat dec mov adc in scas jl push call dec aad jno les cli aam es (bad) pop fdivl dec or add xor stos mov ljmp out data16 pop lahf or ss in nop test mov mov pop inc wrmsr push push mov lcall sbb xchg push sldt (bad) xor ret loop jg push (bad) jmp adc outsb inc mov xchg pop test mov dec dec jbe gs sub adc adc dec pop std js call adc std hlt adc mov jbe dec jno jae add test stos xchg out mov mov push movsl mov sub add jbe dec adc and jns nop insb (bad) ud2 (bad) jo xchg adc xlat sti fwait mov sbb adc clc push and or sub aad les loop push insb aam adc jno jo enter cmp scas cmp int3 nop adc xchg add jnp,pn mov (bad) or mov add add je les jnp cmp mov cmp (bad) ja sub sbb cwtl and jns and stc sbb adc incl inc xlat lahf sub push arpl fwait cmpsl adc cmp or add rolb add dec xchg pop add push icebp mov jecxz jnp inc jb adc push imul sbb adc mov adc jo sbb lret mov in jle jne xor or mov fsubl lcall adc fisttpll sub clc and add mov jmp jo jle mov fs xchg addb mov pop inc sbb iret (bad) pusha adc cli sub xor add ret xchg adc xchg (bad) lahf nop sbb pop push dec xchg in sub adc int sahf inc mov into adc adc daa scas or popa push cmpsb cmpsl mov jmp sub xchg mov jecxz scas movsb (bad) lds push sbb xchg hlt sarb adc fstpt pop adc in dec mov adc mov adc mov push int3 imul call lret mov xor fadds mov fdivl rcrl or add sahf (bad) sub adc and outsb call lret inc stos mov sbb pop ja out cltd add cli cmpsl adc inc (bad) in je mov pop sbb call nop loopne cmp dec pushf aad or dec sbb mov mov cmp je dec and int3 int mov adc mov mov push je mov or (bad) (bad) xor (bad) imul leave xchg lea add lods jle sbb or jmp mov je sub xor or imul mov arpl mov rclb out cmc adc int3 sbb push les mov neg mov pop leave je dec or test and mov int3 test add loope inc mov adc aad hlt xchg push addl and test (bad) cmp mov addr16 fidiv sub adc push push or pop adc dec (bad) or (bad) adc cli leave dec xchg dec clc adc mov push aad aas sbb iret inc out imull push mov pop negb clc sbb add and scas les dec int pop push insl xor adc xchg lret hlt jp rorb jns xor jle lds jno push nop pop movsb mov push dec and inc cmpsb add nop pop push and or push rclb lock mov sbb inc sbb out outsb orl mov sub pop mov cmp xchg sbb sbb mov les addr16 adc ljmp lret sbb addb mov lods or push test je cld fs cld xchg dec xlat or push negl push mov mov aad lods add mov stos jno xchg out sub jbe mov mov sbb and fsubl movsb call pop popf mov xor scas lds add hlt jns or fs add xor daa or imul pop sbb je mov pusha add push out inc cmp sbb mov push rorl push (bad) int pop call or adc xor insb or adc mov sbb adc or sub clc sahf repz daa cmp xchg jge add bound je mov mov jp daa push add aas hlt mov add aaa push cmp push add jae jle adc cmp nop les (bad) into outsl jge pusha adc cltd sahf jnp lods ja aas pop pop sub repz repnz scas jb and repz std mov mov pop xor cmp cld and data16 xchg test pop and in xchg loop pop or aam jge aaa xor or adc jno ficom (bad) jbe ds jnp ljmp pop mov imul xchg cmp mov dec js into enter xchg mov cmpsl dec (bad) adc rcll stos dec adc ret in ljmp movsl ficomp call (bad) add mov out repnz pop or mov adc iret sub rcll dec xchg out sbb das dec mov xchg jp insl cld cmc leave push push into adc lods bnd pushl dec je inc mov mov cs add mov dec out test rclb daa rclb hlt rcrb push cmp inc int call cmp popf or lret in jne pop sahf adc xor xor mov (bad) adc dec xchg mov sub lcall fdivrl pop mov (bad) dec sbb fimull jnp pop push rorl fdivs sbb adc loopne cmp fisubl lcall inc sub push dec lods adc scas and or mov cmp dec pop (bad) hlt pop xlat cmpsl push insl loopne adc pop outsb fldl in out sbb (bad) lds mov shrl jnp or fs dec adc push mov pop xor cmpsb adc fwait mov jge adc or xchg stc mov sbb dec imul add xlat sti cld sub xchg push push adc lret xlat and adc xor push jno or mov outsb fdivrl adc xchg mov adc push ret dec std xor jl cmp (bad) arpl jecxz inc and in scas mov fsub dec add adc dec pop add mov or sti inc rcrb mov xchg lret popa jge imul mov jo fwait add pop adc sbb xchg xchg pushf xor push call scas lcall inc test adc sarl cltd sub dec nop adc jle addb loopne hlt xlat push out mov bound rorb push mov insl and jno mov shrl pop mulw stos xchg xor mov mov in out mov push pop (bad) stos dec add adc rclb int loopne test xchg repz (bad) mov xorb mov out jg in xchg cvtpi2ps mov lret lret repz testl aam inc nop hlt test out leave or inc daa mov adc mov jmp dec lods (bad) mov adc fnstcw sbb and and cli xor xor test cmp cwtl sti jl pop nop sahf inc adc and adc sbb dec lods or punpcklwd push test adc sub xchg adc das sahf sbb xchg mov (bad) pushf pop adc push add add fidivl push or fldl xchg mov ret into jmp mov jns xchg cmp sub pop sbb sub clc xlat or std out rcll fidivl cld add pop cmp adc loopne jmp cmpsb lods push and add adc mov push repz (bad) lods call test pop mov and fnsave daa mov mov pop sbb sbb inc mov add add adc ljmp (bad) cmp out push out adc outsl cmpsl jo push add or icebp addb adc das int cmc addr16 xchg int3 jns loop adc sbb repz rep and and pop and sub decl inc outsb adc push call adc jae pop adc pop enter jp adc shrb test int adcl into rcll mov pop sub std cmp adc dec mov scas rorl adc cld lock mov movb repz pop or stos dec bsr (bad) iret adc push dec or mov adc dec fistpll sahf cmp adc sbb cs frstor mov and repz pushf adc stc cmp je out xor or push les xchg fnstcw xchg pop sbb adc adc xchg mov pop jl loop add inc dec jne jo mov add sub xchg out pushf pusha adc and icebp jmp cli xchg loope pop nop lds test pop xchg mov add cmpsl (bad) push outsl (bad) adc into xchg cmc out fwait adc movsl xor or adc fistl xlat mov cmp shrd cwtl mov sub dec mov pop or rorl push push mov cmp sbb out mov es mov add fisubrl hlt dec repz pop ret ret mov into sti jecxz out adc ljmp adc xor imul pop and ljmp mov dec repz adc jns pop les xor mov mov mov pop or cmc fsts push ljmp adc aas data16 inc stos std jecxz xor cmp mov (bad) into pop jae inc xor or adc push cmp adc sub jae adc stos pusha inc jne lods jge ss jle jb add mov inc inc add mov out sbb or fistl hlt add inc jg or pop cmp lcall mov xor pop int3 popa leave adc out (bad) push jg,pt gs lock fs jno (bad) imul add adc lcall sbb adc lods hlt lock out pop adc push sbb adc dec loope insl mov xor int3 syscall xchg test scas fcompl inc loop adc loope jle std (bad) jbe rcrb ficoml jg push and adc out aad or mov adc les sub adc cmp xor or and in test (bad) dec data16 les adc jl cmp sahf push sar mov leave addr16 sar call and jle mov pop xor pop jb dec cmpsb adc xor push xchg push sbb adc (bad) mov ucomiss pop dec push jae sub fistl insl cmp rcll adc or fwait dec cmpsb repz mov mov ds mov daa aaa in ja add xor in es aad sbb and movsb sbb or (bad) pop in push sarl jg test in notl pop adc xor push or xchg add and xchg sbb adc lock jle add jne repz mov pop stos repz leave (bad) cmp jmp mov loope jp or cmpsb pop (bad) rclb gs xchg faddp mov cld sbb xchg cmp int3 pop mov adc clc add add loopne aam loope pop rcll adcl or dec cmp push stos imul or loopne mov stos gs pop stos sub push xlat mov xchg das test pop push je xor stc xor inc or mov rcll fneni(8087 subl mov xor adc jns adc mov std jno jge or cltd aam pop jle adc test adc addb fwait push add xor push mov add aaa je adc xchg inc inc sti decb nop and jl adc add xchg cmp (bad) sbbl dec stc add pushf mov add push ljmp (bad) push pop xor in or repz jmp sti adc icebp call in mov push pop das jno (bad) or push ret mov pop (bad) inc (bad) js cwtl cltd xchg test cmp popa je mov lret shl int or jge test push pop pop leave fdivrl pop jno xor adc andl xchg lret stc dec sub repz mov mov roll cmp xor jns (bad) jno xchg leave cltd movsl push bnd lds adc xor and call dec lods add je sarb das test or (bad) mov push jns or rclb jae jne mov or xor fnstsw sahf push sbb js push jno and sti dec fstl ja clc (bad) jg mov adc xorb jns div xor mov jo daa clc adcl add lods (bad) (bad) xor and lea cmp lds in jl pop jnp leave lock xchg popa stc lods push mov fldenv sbb test mov lcallw les inc or das pusha mov loopne xchg cs scas xor aad add adcl inc xchg aas jb push adc jecxz dec rolb (bad) dec adc aam sti ficompl mov out pop les popa imul dec sub dec inc adc pop mov cmp addr16 jb aam mov adc mov adc mov push adc push pop clc testb rorb addr16 add pop dec mov add mov movsb mov fimul adc ljmp adc mov sub and pop (bad) xor (bad) adc pop dec mov inc nop lcall and xor aam imul xor mov subb rcll xor rcrl sub movsb mov mov daa outsb cmp std adc hlt inc push inc lret jmp adc loop push xchg inc mov arpl push pop fstl adcl pop pop daa or pusha adc (bad) cmc xor data16 xchg adc mov inc shlb adc pop push mov nop inc rclb outsl icebp cwtl add xchg or repz (bad) adc sarl mov lret xlat add mov bound rorl sbbl aad or insl mov dec out (bad) cmovle or test jmp pop mov adc ja imul pop inc xchg fldl pop adc dec adc gs and out pop jb (bad) adc cmc stos scas fwait adc adc mov xchg adc out outsl repnz sub movsl cltd popl inc xchg mov sub xor xor test push gs mov sub xchg cmp call iret packsswb xchg jle push icebp and adc sub gs repz pop sti jp imul (bad) je sub push adc shl enter cmp lea adc xchg aam call loopne stos pusha ss pop or into or es mov mov lcall loope pushl dec or or repz inc cwtl je cld mov mov cltd or hlt push scas add inc jns lea movb int fcom jp adc inc ja (bad) pop outsb push lea adc xchg add loopne in mov push das imull imul lcall add push push gs and mov ljmp test fdivrl imul ss enter adc or mov mov xor inc xchg rorb mov adc (bad) adc adc addr16 sub mov sti sub mov inc adc mov add xlat jae mov movsb sbb nopl or enter cmp adc mov mov push in mov out addl adc and loop add scas xchg adc xchg mov xor add cs popa loop add jne xchg adc fisubl adc int mov push ror lock or cmpsl das sbb pop sbb and test mov sbb (bad) adc movsl (bad) (bad) aaa sbb or push push push xor ficoml out xchg xor mov push in insb adc scas in fistpll outsb and inc mov (bad) or imul insb shrb push xor popf xchg repz jno cmc popa aam mov adc je rdmsr xchg lds test cwtl icebp lret ja int fdivl add daa inc leave adc ljmp jecxz aad push stos mov lods sub mov popf lea fldcw xor ja aad or mov push jno xchg pop xchg inc or adc inc call fwait jecxz mov sub or data16 stc cwtl adc imul adc (bad) push cld je cmp adc sbb (bad) mov lods jp dec leave rcrl mov (bad) je or enter pusha dec roll insl push je loopne daa mov pop ljmp pop mov pop adc addr16 inc rclb sbb pop pop mov xchg cmc dec dec test push (bad) loop shrd adc xchg xlat cmp pop fmuls xor rol mov insb out or repnz mov xchg pop psllw and mov dec cld adc rcll shll adc xchg adc int3 mov xor mov call js adc sub cmp pop jg mov lea inc pop inc stos mov mov dec movsb into dec jecxz lahf push or stc loop ljmp rorl jo mov jecxz cmp adc or mov xor nop cwtl stos (bad) hlt adc dec jb jle enter imul push adc push xlat mov pop mov or adc out shll fisubrl loopne adc mov lea xor icebp sahf push push popf cmp insl add push add jecxz mov jne push sub pop jl ljmp mov add adc jbe ja ljmp xchg lods nop pop scas fildll adcl jno sbb ja mov xor and cmp mov xchg pop dec adc iret adc (bad) sub repz sahf (bad) mov outsl repnz xor int3 mov sbb inc cmp sbb xor inc xor and mov pop jno or push and cli add lds mov lods jns (bad) xor clc add mov fwait xor out xchg pop jns adc loopne dec adc jae mov aaa sbb or mov push pop cmp add xchg lods mov push sbb xor js inc lea (bad) fisub mov inc mov movsl call adc add adc (bad) ljmp sarb fadd mov in (bad) xchg add push fidivl mov mov nop in mov insb xchg pop int mov mov mov fcoml push repz jbe or lea adc daa dec imul xor sub or rcrb lret jae or inc dec sub xchg push mov xchg mov inc adc aam cmpsl es cmpsb add repz fimul jg jmp sbb fwait smsw mov xchg leave adc (bad) shlb mov dec ds inc push fwait dec adc cmpsb je nop fcoms movsl mov enter loopne out pop fisubl add in repz adc cmpsb lret in or adc fsub mov dec xlat xorl lret leave adc cmp mov fsts rclb adc mov jle adc mov mov mov adc rolb es push ja loop mov mov or adc stos xor mov sub xchg mov in jno leave shrl mov mov std in mov rcr or popl repz mov stc cltd movsb cmp push mov sbb xor xor sbb xor movsb pop or mov out sbb add mov adc int3 (bad) mov xor in or adc mov arpl lods mov repz jno movsb (bad) test xor lock adc mov (bad) xor mov xor lods idivl ss hlt mov shr sub adc pusha mov push aas js xor out or jbe mov sbb xchg jae adc xchg ficompl sub jns inc (bad) repz ljmp pop es test adc fisttpl outsl daa int adc inc cld pop mov mov lret paddw inc mov dec and orl pop and aam lods adc cmp sahf mov push ss xor add mov and daa and adc (bad) movsb pop ss adc jl jne adc push or adc fisubr dec adc js sub mov cmp xor sbb push icebp add pop sub cmc mov fdivs xor movsb outsb dec push xor dec sub dec adc pop test mov dec jecxz test and adc call add sub xchg test or cmp or and add sbbl loop wbinvd jl mov mov or test adc mov out mov icebp mov xor mov sub loope jns stos pushf mov in dec adc pop sbb jl jae (bad) pop inc or popa mov and mov pop jno cli hlt dec xor sub (bad) es data16 adcl incb lahf ja mov jp jb jge arpl popa enter push lods or xchg (bad) sbb jg xlat lahf add xor shrb aaa add mov adc adc enter call jmp xchg aas mov popa arpl std push jbe push jp adc in mov pop jge bnd lock sbb sbb jmp loope out pop jae xchg cmp das jno add or popa sbb sub or ljmp mov xchg icebp mov cwtl xlat test inc cmc sahf lret xor (bad) adc add into xor addr16 inc mov add repz (bad) push (bad) push fmull and fbld outsl shrb add loopne (bad) add jle adc push sbb jbe pop jno lock xchg insl xchg xor (bad) imul test stos adc mov das (bad) int3 popf push xor ret ret cmp dec add fwait push pop dec add adc xor cwtl cli add loopne jno rcrb jns in sub das cmp mov adc int3 ljmp add pop xor dec mov mov and pusha lret sub (bad) xor xor dec (bad) jle adc mov (bad) mov add jb or adcb sub cwtl adc pop cmpb jnp imul sbb addr16 dec adc pop enter hlt in cmp pop xor adc outsb mov bound mov iret mov sbb sub push adc mov out fs adc dec incl push enter leave popf (bad) cmc bswap mov pop rol insb xcrypt-cfb cmpsl mov and dec jo jnp and rolb pop push into adc pusha jne push outsb mov xchg call js je inc push mov jle dec sbb dec and sub lods test fidivrl lods fisttpll dec popa not sti call rcl icebp lock xchg sbb sbb inc xor or lret leave jl imul scas stc or rorb adc mov clc adc xor jnp pusha in test push rclb bound into lahf add jns lock ret mov fimul mov xor out fs add sub xchg mov adc mov or jne,pt lcall mov test sbb fdivr adc pop sub aad (bad) adc mov pop lret popa mov insl add cmp enter in test xchg adc jg (bad) cmp adc rorb pop and in gs fbstp (bad) pop das adc jnp push lahf lcall sahf xlat rcrb orl sbb in jns mov outsl fcoms mov mov clc jle pop loopne es pop pop test xor imul call jo mov int3 les push test cmc int bound pxor out xchg fcompl inc sub lods jp or repnz push adc in arpl adc int3 ds cmc sub out into jbe mov add pop xchg add cmc (bad) in xor xor loop jno test mov jo cmp pop enter loopne cmp sbb and insl jmp sbb inc popf xor or int3 mov adc scas (bad) jo dec jmp sub pushl mov jmp lods lret out mov jnp push shl rcll cmpsb pop aas jmp sub adc mov pusha xor xchg xchg jmp and out push inc push sbb jg mov pushf pop adc cli jne pop ljmp scas iret mov push sar or cmp fdiv sbb adc mov test cld xchg or leave add dec out dec fwait jmp sub adc ja leave xor nop imul lods adc cmpsb mov mov ret dec movq rcll fisub incl adc xlat dec ljmp mov xchg adc pop gs sti int3 adc pop es adc xchg cmp gs sbb out or add cmp jae test adc stos sub sbb adc data16 mov jp adc test mov repz nop adc scas fisttpl les sbb jnp loopne lods movsl mov test rorb dec ficoml nop pushf mov sbb xchg add or xor xor sub mov and lods xor outsb mov add xchg add addl jecxz imul ja push inc (bad) mov repz mov sbb adc jmp sub adc mov test mov jge adc jnp popf aam fxrstor hlt sbb lcall stc or and packsswb mov cwtl cmc xor or sbb sbb pop arpl adc adc or push mov pusha push aaa sub je mov mov nop sub cltd add fist adc add (bad) xchg ret popa outsb xchg adc jle movsb lret adc pushf xchg cmp adc fbstp adc mov je adc iret stc imul cltd jnp es loope adc sbb pop sub cmc adc lea stos add jno je repnz je ja push fbstp dec cmpsb leave push add shl mov xor adc insb repz dec aaa shr popa or sbb lds mov cwtl imul jnp call sti mov xor adc fildll out adc sbb push jp xchg adc and mov fmul cmp mov call (bad) and ficoml mov mov (bad) mov mov dec mov lock pop mov adc rclb ljmp fs in lds stc sbb jae clc pop lock push outsl adc jg lods int3 xor cmpsl mov xchg adc in sub add rcrl rcrl hlt cmp mov loopne adc xor and adc insb xchg lcall jne popa lods std ss adc mov inc xor mov out pop push xchg or icebp decl pusha mov cmc gs cmp sub sub into jmp mov adc dec in testl sti mov inc (bad) rclb cmc ja cli sbb lds lret or dec daa loope inc xor inc fisub adc icebp mov cmpsl pop ljmp outsb mov jge sbb push popf cmpsl push mov push sub jo xchg mov mov xor aas int3 inc dec or dec pop adc adc cmp mov mov xchg in repz mov add push cld sbb mov sub out add adc loopew adcb push mov mov (bad) hlt cmp push mov adc cmc xchg incb mov call fs push adc rcr xchg inc rol xor mov cli adc hlt xor add icebp inc jns sbb fisubl dec js xor add hlt loopne pop cmp jbe or pop add ret push sub iret out adc mov mov fcoml stos nop rcl adc jl lahf dec mov fimul sub mov in dec add imul aam arpl clc cs into xor and sub aaa add (bad) repz jo dec mov repnz dec icebp roll test xchg xchg jmp xchg sbb ss shrb jle push push sbb adc shrl mov and fidivl mov (bad) cmc cld out stc or je pop push inc mov mov xchg (bad) adc fwait (bad) icebp adc ds (bad) push mov pop fwait sbb inc outsb dec test (bad) fs stos push mov push adc mov adc (bad) adc popf insb (bad) or std adc invd imull cmp lcall repnz pop push jecxz adc dec mulb dec lock (bad) lea push out xor jl xchg add cltd push adc dec adc jno test inc xchg cmp pop pop sbb out jns mov and add out dec mov add lret and sub mov xor mov mov dec adc lds xchg dec or outsl mov pop aad sub xor (bad) xor scas out jmp insb jae push std aam add stos out lahf inc pop (bad) repz and or lods xchg xchg sarl add adc shll clc (bad) fist jmp jbe xchg add adc dec mov sub add inc mov cmp fdivrs sbb add mov addr16 test mov imul loop and adc jge mov jg sub out inc int and push push sbb pop adc dec aaa adc mov hlt xorl push or mov nop adc adc xchg sbb adc jle mov xlat xor pusha adc pop jb movq mov add lret pop jbe ret inc cmp jo clc bswap rolb (bad) adc sub adc mov adc loope movsb xchg sbb adc js shll dec adc push add mov ret cwtl add gs insb repz jnp (bad) jb mov push mov jle ret mov test lods xor adc add jnp lahf stos add pop pop into mov push add call inc (bad) jb dec cmp loope xchg add push adc mov inc jns add sbb lret push jmp sub adc add pushf scas arpl fsubrs cmp test mov call mov pop stos cmp sub inc push adc rol sti int mov test inc pop or ret pop pop sbb cmpsb ds adc mov in xchg mov pushf dec jae mov sbb sbb xchg adc add sbb cmp adc xlat bound cwtl mov mov jbe daa add jno dec cmp push mov (bad) jo mov xchg push or push sub mov fcompl and stc movsl jle daa adc xor ret icebp dec add lret sub or pop bound (bad) mov ret or sbb leave and push shlb xchg push fnstsw hlt mov and sbb add push adc add push stos sub jne push sbb aam push outsl adc jmp iret jae fwait adc mov lods pop or sahf adc pushf xchg mov inc push test xor adc jae mov mov inc sbb cmp push mov mov int3 out adc dec dec and mov aam dec adc mov dec sti loop shrb jmp test into (bad) pop inc aas pop sbb scas xlat mov sub mov (bad) push clc xchg cmp (bad) je and outsl out jl mov cli mov cmp adc adc push add adc pop mov or jae loope mov out ss cmp mov add cs inc jnp jmp je cmp or test sub outsb ljmp adc xor dec js cmp push or fnstcw mov outsl push or movsl scas out clc mov aad div call ret cmovbe add popf leave movsb pop pop imul ds aad mov pop push add adc sbb adc dec sub adc jnp adc pop sbb jecxz outsb pop push mov jae or lahf pop test adc inc (bad) cli iret sti lods scas cld insb mov fldt loope cmp outsb fmulp push xor cld jo mov jns and xlat adc mov movsl push jl cmpsl adc clc mov adc or or lret adc push pop mov adc add dec mov rcl mov gs pushf push xor add xchg inc add addr16 or push popa cwtl popl push cmp cmp inc mov xchg pop adc into jg addr16 lods and pusha repz dec fidivrl loop aas adc mov adc cld sbb adc rclb scas adcb inc imul mov ret sub mov fist ror sbb adc mov mov fimull push dec les loop jg jle jne ret push adc push adc leave (bad) jno (bad) adc xor jbe jne jl sub or inc sbbl adc dec (bad) sub leave xor push mov clc adc jne nop xor xlat out les mov or pushf sub jnp and sbb or std or adc jle dec mov push lcall stc pop jbe mov std ljmp sti xchg xor jmp stc fnstsw clc adc jbe fdivrs adc inc rclb repnz mov hlt sbb in mov das mov mov cmp mov mov add mov in adc mov or data16 mov adcb cld sbb push loop movsl adc in jne adc inc scas adc add and xchg ljmp les push pop rorb test xor push sub test mov xchg inc xor mov add test cmp mov xor dec lahf adc loop cmp stc mov dec and imul pop clc cmc mov cmp repnz sub push push stc add fimul jbe add lods pusha xor cmovge dec int3 pop and push cmpsb call out adc iret test or adc (bad) repnz shrb divl sub xchg es test pusha jmp jbe les (bad) pop adc cmp popf mov rorl jnp adc xchg test push mov xchg and out sbb pop pop test mov js loope cmp fiadd sti adc jns mov pop push push adc mov popf arpl pop mov sbb inc and movsb shrl pop stos (bad) (bad) hlt hlt xchg add pop mov inc fpatan das arpl cmp and or in out int3 iret lcall pop mov mov (bad) push jecxz mov add sbb adc adc cwtl mov test (bad) lret shrl adc insl in xchg gs sti adc rcrb dec (bad) popf (bad) pusha cwtl cmp cmp hlt mov xchg sarb sbb rclb test mov mov adc xchg outsl mov les jnp sbb and iret pop mov leave adc lock mov lret mov add push fnstenv mov and jbe mov or subl jo out pop jp pop and fldenv decl mov xchg in xchg add pop xchg adc test sahf adc ss bound out aaa mov and sbb sbb xor mov lcall adcl add in jmp fstpl fwait clc enter ret pop lcall adc (bad) fildl xchg mov in pop xor jecxz xchg rcl sbb (bad) adc mov imul mov add repz std rorb test dec rclb ror adc xchg nop or add cmp pop jo mov mov aam cmpsl ret out adcl cltd fcmovb rorl sub cmp movsb xor sbb fwait ret std pushl mov repz loop push stos fnsave jmp jmp mov mov inc adc sub fidiv adc jl in xchg adc dec xor mov xor dec (bad) xor jb lahf out into pop stc cmp dec loop pop mov push lea adc (bad) push cltd jecxz pop mov or adc aam add and fs xor or pop push lret stos repz pushf jo mov mov xchg mov pusha call mov adc adc mov popf into pop (bad) adc jbe adc inc fistl pop ss adc (bad) mov jmp adc inc data16 ret scas iret pushf cmp test and xor cmc fstpt pushf adc imul adc adc xchg lea dec xchg xchg movsb dec mov sub xor stos adc jl mov sbbl mov mov std cmp xlat (bad) add dec (bad) mov or xchg (bad) inc insl pop mov xchg leave in jbe adc sbb scas jecxz pop push adc repnz jbe adc sbb sahf leave icebp inc dec mov or cmc add jge (bad) mov or xchg mul sub test es push adc dec mov movb mov fild popa cmpsb repnz stos (bad) mov outsb iret jmp cli mov and mov or (bad) adc mov into adc fs int3 (bad) mov test or dec mov sub in adc adc mov int3 and cmp push ds bound cmp jp fucompp xchg sbb and inc add xor push addr16 add or adc pusha stos inc mov ret pop movsl pop movsb imul loope or push cmpsl sbb es push rorb mov adc iret cmp and mov aad and mov mov dec lea rcl call sub neg jbe (bad) repz std adc sub mov mov mov sub push mov in cwtl aam scas jge mov adc mov pop sahf dec lahf aas es xor xor cmp loop aaa or (bad) push mov cmc and lea cltd adc push pop js je push mov inc in or es adc test mov scas lea (bad) repnz xchg shrb or pop and adc pop test sbb mov xchg sub test imul jo popf sbb into rcll stc cmp test mov jno mov fsubrs adc sbb or dec fwait add repz inc into mov adc cwtl mov ds pop jno mov jle mov movlps daa jo jno jns adc jl mov into stos sbb fs (bad) xchg popl adc sbb xor scas jae adc push (bad) leave mov pop icebp adcl repz ds lods mov sbb push mov mov push lret test ss std popl lock fistp xchg lcall hlt adc adc and pop adc out into jecxz outsl lret adc pop lock add mov jge imul xor or pop sbb xor dec pop adc mov outsl push sub adc ret adc ljmp xchg int3 xchg adc insb fistpll out ja add cmp fimull test and aam test bound cmp icebp in rolb mov xchg mov push movsb xchg int3 add dec dec adc arpl jbe mov (bad) xor inc pop adc and adc out in jbe and pop mov jno xchg (bad) push xor lcall pop dec add inc lds adc icebp jle mov iret ret push cmp (bad) hlt push adc pop lods dec jmp loope scas dec jb jae (bad) mov clc add mov jbe mov lods cmp ja adc call imul fs icebp adc insb push pop lret adc jle mov dec jbe fisttpl hlt push push sub pushf mov sahf fistpl imul xor lods adc jae outsb inc into (bad) test sbb jle dec fcoml jb mov ja pop add push mov lahf ret fisttpll nop test icebp push add adc and hlt push aad sahf cwtl ljmp dec and scas cmc adc aad repz inc daa jmp or in stc inc lcall js push bound add mov pop in mov sti inc jmp cmpsb sbb sbb mov mov xor xor lods sbb clc int3 add in in sub jmp xchg fldt call ljmp and rcll stos sbb leave fwait adc fs nop sbb nop iret (bad) pop adc aaa lret pop adc and add aas (bad) mov mov and adc mov leave pop pop jp imul inc loop mov outsl mov adc inc rorb out ljmp sub jmp push repz cmpl call sbb and mov (bad) adc loopne xchg mov (bad) and adc (bad) lahf jns adc xchg lods mov dec mov adc cmpsl (bad) push call stos lret lcall fwait int3 push lea adc push adc mov push adc xor mov dec mov ret fsubrs pop and aam add outsb xor cmpl call mulb adc dec mov xor clc jno imul mov push xchg in and mov testb imul add int cmp jg ss (bad) out and repnz mov xor xchg int mov pop cs aas mov ds fwait cmp add adc nop out cltd js add adc out arpl dec or sbb (bad) dec icebp int sub lret pop adc shl popf call test adc dec xor jae mov add push dec inc pop fildll pop nop shlb cmp lret insl mov adc jle stc sarb push adc mov outsl add mov sbb js lea das les add push push mov adc orb into (bad) cs aaa adc jecxz xchg mov or mov mov pop push pop pop outsl mov adc and inc or xor pop adc orl nop in adc lock enter in jns xchg inc ficomp mov int3 push adc push jo mov insb outsl adc imul (bad) jmp xchg hlt pop jbe popf (bad) repz xor movzwl jp adc sub jns data16 cmp lahf in pop cltd test in inc pop mov dec (bad) cmp mov data16 icebp ss repz scas sub call push adc mov sbb adc sub xchg and cmovns insb repz mov lods sbb adcl jmp pusha mov bound or add std mov or dec out (bad) adc mov push pop into push bswap into fistl jge sbb mov inc addr16 in adc je sbb push adc xchg sti adc cwtl clc and add ret hlt or jecxz out pusha imul pop outsl roll mov mov pop or shlb push xor inc sub xor decl mov test mov test test xchg lock jle sbb fcomps (bad) call adc jns jne outsb cld adc fbld push loopne add xchg out in adc js xchg adc int sarb cltd add aam push inc add jno (bad) mov jge popa enter mov mov xorb or cmpsl test rclb call mov mov scas pop es xchg cmpsl or arpl lods xchg and (bad) mov dec lcall std in pop add mov repz and mov and sbb dec lds dec adc (bad) lea adc mov test mov outsl insl enter adc dec popa loopne jne jbe sahf adc push mov (bad) jns sbb stos cltd lcall call mov ret adc push ret movsl mov nop and pushf fistpll or or ss stos sbb (bad) rol adc in adc add push adc mov dec xor add xchg gs out clc adc sbb jg ficoml adc mov aas push mov or xor add pop mov or cmpsb jge mov cmp add (bad) (bad) je adc xor nop sub imul pop fsts mov (bad) jnp jno adc pop loope xor xor pop add repz xchg xor dec lods and (bad) adc adc lret popf dec mov fwait pop cmp std mov sub pop cmp adc sahf int3 cwtl adc (bad) rcrb adc xchg daa xchg mov jno mov fcmovb pop and adc and (bad) fwait movsl xchg adc loop xchg aam xchg loope xchg mov lahf stos jno and lret scas repz or mov and add adc xchg mov cmp call notl and (bad) inc cmp dec mov jecxz or adc dec adc (bad) rclb cmpsl mov adc adc out sbb rolb mov fiadd inc cmp fs mov add mov adc add aas push enter and sbb or and repz test sbb or add xor jp movsl jg adc sub xor pop xor mov ficoml or cmpsl mov (bad) sbb mov lcall sbb push or xchg adc and adc inc pop pop jmp adc adc cld mov fist sbb cmc pop movsl sbb leave adc fistpl call nop sbb shl jecxz (bad) mov int3 jmp (bad) cmp xchg mov or push adc hlt mov hlt mov std dec adcl mov mov dec lea push jbe adc or mov daa test jns cwtl ret mov inc dec fisttp and and mov das rolb adc popf movsb nop push mov repz adc out add mov xor add dec push lret movsb insl sbb cmp sbb test xor lcall push mov sbb mov adc cli dec sub mov adc in arpl adc adc sbb out and push ret sbb adc xchg adc xchg mov adc xor adc test adc out fst mov xchg xchg fs mov adc repz jmp ror adc mov push xor or ret mov insb adc mov imul push enter or adc mov aas (bad) stos icebp testb jmp mov lods dec (bad) xchg frstor popf adc into andl or aam push add mov mov je xchg adc hlt stos push adc mov rcrl xor mov adc ficoml xor sub rcr jg ljmp adc fldenv clc stos adc orb jns dec in sbb adc push pop and nop dec lret (bad) out xchg pop pop pop jo cwtl cmpsb xor nop and dec mov push out jecxz (bad) out repz (bad) insb and xchg fsubs xchg mov ljmp sti mov loope sub aaa ss adc iret in mov fiadd dec sbb adc nop xchg jg repz xor or adc (bad) push inc ljmp dec aas insb add add cmp or mov or cmp repz mov mov mov adc cmp mov mov andb int stos xchg push add xchg movsb adc mov push push xchg or mov fidiv xor push (bad) mov idivl jle jno (bad) mov dec or add in cmp scas dec mov (bad) pop push and push sbb push (bad) enter jne test mov aad repz mov jo adc pop xchg cltd and mov push push mov add or sub adc adc aad cmp lret xchg mov test adc and fwait cmpsl adc adc add cmp inc (bad) xor mov add out xchg cmp dec sahf add mov cmp pop pop dec divb js lahf mov xor pop mov inc add testb scas or xor and das jge subb mov xor mov int3 subb mov nop xchg xor aas pop jle xor xchg ja fwait (bad) je xor insl (bad) stc pop push pop pop mov or mov pushf pop ljmp sbb mov dec cmp jecxz cmp sbb xchg adc xchg mov pop (bad) mov sbb xor adc push lods lcall xchg daa jmp movsl enter cmc aaa adc (bad) mov push fistpl sbb adc xchg jl rcl adc mov lahf inc sbb pop push add leave xchg int3 scas xlat mov jno push call mov dec jle outsl xor lcall cmp mov mov pop rcrl adc xor mov mov adc andb out sbb sbb cmc adc or cmp into cmc dec add or aas xchg aad mov mov into ficoml insb sub xor mov testb xor or xor pop adc mov inc adc add xor jno adc mov cmp mov sbb sbb jl cmp adc es sub rorl cwtl add and adc stos mov loopne inc stos in xchg adc pushf fwait adc mov and scas repz xchg xor mov sbb adc mov hlt sbb add fnstsw gs jle add scas or and adc pop dec pop push mov stos jno mov cli fisttpl cs stos ja mov cmp sbb mov jl xor adc push adc insl xor adc das andl nop out (bad) sti push add repnz test and push jnp adc xor pop cmp inc xchg into xchg xor mov push xor dec and pop adc ja movsl scas lcall lods stos adc push xchg sub sub rcll mov xor adc js sub pushf mov mov lahf cmpsl jg xchg loopne hlt adc dec sub mov push mov push lahf pop adc jo sbb xor inc or adc xchg scas fstl add mov adc adc dec rclb sub outsb hlt add mov pop ds dec lea xchg test adc add das cltd shlb mov ud2 sbb out call pushf (bad) pop aad sub sub lods xchg lods fistp or idivl adc lds xor dec xorl jo jge adc push mov jbe andl std adc in mov inc mov fimul jmp cwtl adc aad xlat adc cmp adc sbb and leave inc rcrl push cltd daa pop push loopne mov cmp sbb into pop pop (bad) jo test xor xchg jecxz pushf nop and cmc or pop pop xor out lods sub mov adcb adc add or repz fsts out call addr16 add mov push scas cli dec sub scas aam pop or xchg xor adc cmp sub mov sbb mov popf mov mov cmp lea mov (bad) fwait dec not test pop jae mov insl repz adc adc jmp aam sbb bswap sbb xchg out mov push adc and mov test into xchg iret mov aaa push pusha or movsl cwtl sub xchg push jle je xor or (bad) sbb push les cmpsl inc pop mov popf sub shlb add andl sbb dec setle pop add adc mov scas je nop cmpsl xchg ss add lods test and xchg aas out pop ljmp adc sbb jl adc aas scas mov adc lret (bad) mov add adc sbb and (bad) xchg xchg sub pop mov pop insb (bad) mov stos je cld in mov or gs add bound xchg shrb and adc cltd mov fiadd (bad) stc (bad) lock jle adc or movsl icebp sbb cmpsl mov pop sbb jle mov int3 fmuls pop adcl add or push jmp outsl pop push xor stos mov jp xorl popf gs int3 mov mov mov and add adc outsl push sbb out lcall adc xor or sub xchg sub mov mov xacquire push push and pop fwait or or pop cli stos scas xchg cmp cmpb push loopne bound mov lahf stos rcrb mov xchg mov pushf mov mov adc (bad) push adc adc ljmp xchg xor popa repz ret fwait pop lretw test in mov lcall in mov adc pushl add xor push call fist scas push lock pusha jmp ret test pop cmp call sbb enter or movsl out (bad) jl push or add adc xchg adc dec inc dec repz mov sub (bad) cs stc aas xorl mov mov or cwtl pop sub xchg add adc mov jno dec and fldl adc clc dec movsb out and jns cmpsl push xor mov pushf pusha daa adc (bad) adc or int3 stos dec mov adc icebp xchg mov mov mov add fmull jecxz adc push mov outsb out push cmp movsb xor sti mov fistl xor aas mov mov (bad) pop out adc movsl mov adc mov dec int test mov sub adc adc mov jecxz xchg mov movsl repz sub add adc push out or xor dec mov add xlat mov pop cmp mov mov nop adcb mov pop or xchg adc mov mov mov scas adc rcrl adc xchg mov mov inc in xchg cmpsb adc add and and lea mov call adc sbb adc cmp dec jns jp dec adc adc daa imul sbb int push mov pusha add stos push aad mov (bad) cmpsb incl adc icebp add movsb (bad) cmpsl into fistl leave dec lret push cmp mov movsl mov test fisttpl wrmsr add mov int aas movlps or in push pop adc loop xchg and adc mulps mov ja add mov mov test lret popf adc sbb scas (bad) xor loope xor mov dec fbstp xor mov adc cmpsb xorl sbb in fstps push cltd mov es mov xchg scas lcall mov xorl popa sbb notl lahf xchg mov adc ja add push shll nop mov adc pop pop cmp pop fwait mov aam jbe test lods lods lret icebp jp adc roll into cmp mov adc mov push outsb ss ret push icebp mov mov cmc or jae add cmpsb mov mov mov xor scas xchg adc inc add mov mov aad mov cwtl roll jb adc mov outsb cmp movsb xor adc or mov adc lret add pusha mov pop mov sbb subl in leave mov add adc xchg cmp aaa into inc enter adc mov out and cmp sbb push aad mov push inc and inc cmp mov push cltd into in xor xchg adc push pop mov das jno int3 dec sbb sahf iret add lret adc or add mov and push lock fcmovnbe andl cmp mov lods lea cwtl push adc mov dec jb aam or mov adc repnz add adc mov lea sub add mov mov jp lea and xchg or add mov mov sbbl jno xchg (bad) lahf adc test mov push or fwait cmp xor pop pop sub mov cmc adc mov adc mov insb rclb adc in push out pop jnp pop push adc inc or jbe lds push add xor mov cmp adc (bad) das fwait sub lcall in push push movsb outsl in pop adc ret cld lret mov andl pop lcall mov outsl call cld push dec adc adc insl dec cli adc sbb (bad) xchg out adc mov add or adc mov cli hlt mov inc adc adc adc xchg mov repz xor cmc xchg mul mov test das xor std sti in mov lds outsb stos div outsl xor and sub lret adc mov ljmp lea enter mov pop xorb repnz (bad) sub int3 xchg rorb inc pushf xor mov xor mov pop xor push push inc inc pop adc les add and adc cltd gs (bad) lods pop xor sbb xchg mov pop ret adc imul adc xchg movsl mov (bad) in dec adc jmp enter xor cwtl or pop adc adc xchg mov ljmp mov cmp clc and lcall cmp mov fsubrl jmp ljmp xor aaa or mov hlt sbb mov mov lea mov lahf sbb adc hlt insl ss add push fadds cltd mov adc sbb mov mov or lret fwait xor daa in cmovns adc lds dec adc push add mov mov outsl mov aaa xchg sub or aas sti cmp xor inc xchg xor mov mov xchg add cmpsl loop popa xor imul mov movsb mov xor mov adc in cmp mov fmull adc sbb xor jmp cmc mov int cwtl jl adc pop adc insl mov nop dec fist and mov lods aaa xchg cmp (bad) xor dec dec iret mov adc mov aam das adc xorl fistpll jge adc (bad) fmuls mov or push inc sbb pop sbb mov mov mov stos out imul push mov (bad) push add pop faddl sbbl sbb rcll jg,pn mov repz sar pop add and movl inc xor dec fcoms adc mov or xor outsb cli xlat mov sti movsl adc arpl lret xchg aas adc in mov test adc popf xorl add adc fistp imul sbb xchg adc adc fwait mov movsb sbb pop or add adc out jecxz or call or adc add cmp arpl mov movlps pop adc (bad) mov push cltd add add xor bndstx adc adc adc ret mov mov mov adc mov and dec pop add popf daa adc das jecxz lods xor push adc cli ficompl adc stos cmp test mov test fldl repnz (bad) cmp mov xchg xor sbb cmp mov popf push (bad) adc adc ret lea inc or test cmpsl jb cmp scas mov clc sbb pop out fcomps mov push movsl pop fdivl adc nop aam mov nopl adc sbb xchg add xchg sbb jns sbb adc pcmpeqd sbb aam mov xchg mov jmp dec mov or mov mov push adc pop mov addr16 scas fnstenv mov adc mov adc lret mov ret rcll das mov xor xor js pop and frstor push sbb and xor outsb adc sbb aaa aam adc dec mov (bad) movsl cmpsb shr inc add (bad) pop sbb adc mov adc xchg jns adc sti xor xorl cwtl mov mov les adc xchg and mov das popf sbb pushf xor sahf int push roll xor in aaa mov dec adc stos mov sahf adc or jmp push xor das test jge or xor and adc adc adc jp and xor xchg stc or mov mov mov adc push xchg aaa mov movsl rorb mov fimul adc or pop cmp jle xchg orb daa repz (bad) xor cli mov addl add mov sti xchg pop push xchg mov jg sbb cmpl mov pop mov adc rolb inc push xor or insb mov adc inc stc pop js xchg in imul xchg add xor adc jmp lcall adc xor add aam cltd xor fwait mov movsl xor mov popf sub mov adc fdivrl mov xchg cmp jp and repz cmpsl clc test movsb add jmp cld pop pushf adc jecxz jge adc fsts xchg cmp xchg mov sub xchg movsb jmp mov push inc cmp in stos mov adc sub popa push adc aaa test dec fmul movsl rol nop mov and imul or mov mov add nop loope mov mov inc push xchg mov jno mov jo (bad) (bad) bnd adc jecxz cld lret dec stc and add mov hlt jbe add xor iret and fidivl repz lahf sbb mov lock adc je inc cmp and cmpsb (bad) pusha cmp xor mov push imul sti movsb cmpsb sbb jno add sbb test sub adc fwait push pop ss adc sarb pop mov adc jl push repz mov stos (bad) out jo mov cltd xchg sbb adc add out mov adc xchg jns pop adc lods sub xor inc pop sbb aas negl dec or sub dec mov mov icebp adc mov mov cmpl mov mov jmp mov mov xor xor in clc lods or (bad) push adc sbb mov xchg and cld pop nop push xor add ja push mov test adc outsb ss adc xchg pushl mov cmp adc add in sbb xor xchg inc lcall push adc sbb xor and adc pop xor int (bad) iret movsl adc iret loop jmp inc adc adc sarl arpl push add push pop jbe jl js push hlt movsb adc ret shr mov out cmp push adc pop adc popf loop or jae sbb mov lock stc int std mov dec xchg icebp sti mov push adc in xchg pop pop push adc fs cmp push or imul adc int sbb pop inc imul je push cld add pop mov data16 adc enter mov mov adc sub cwtl dec adc jl adc and cmp cmp mov sbb mov cs insb sbb jbe adc mov daa insl mov cmpsl adc fwait loope mov aad dec xor jge push sub or int mov insb sub mov mov cmp adc xchg loop mov test mov sti enter decl in mov sub xchg adc xchg sub push dec adc push xor das pop sub jg adc stos clc jge jmp movsb mov dec jno mov (bad) sbb or popa jmp into or lcall mov popf mov (bad) dec outsb stos ja cmc inc pop adc ficom in std pop hlt mov ret (bad) mull push xor xchg (bad) call fisttpll add ret mov mov loopne into repz nop adc lods lods dec stos mov call cmp je inc dec imul shll fwait push pop xor movsl stos cmp lea (bad) jbe mov add adc icebp call into lcall sbb adc cvtdq2ps (bad) mov pushf xor clc ficomp scas add sub stos push jg sbb faddl fwait mov sti push movsl (bad) mov mov in hlt sbb cmp mov sbb in mov mov adc inc xchg add push pop adc mov loopne mov mov xor mov mov push lcall mov add adc (bad) repz adc mov outsb mov mov xchg adc pop les test shrb stos adc lahf ror (bad) and or mov mov or lret ror adc sbb mov sbb (bad) and mov fdivl xchg mov cmpsl popf push mov or xchg pop jb mov fdivs push adc mov push rcrl cmp movsl cmp ljmp xchg mov outsb or mov ficomp loop xchg mov popf adc mov add scas mov ds mov movsb mov aam adc clc pop flds push xor add mov mov jmp movlps sbb std add jp push lods sti repz add mov lods cmpsb xchg repnz push adc or loopne lods adc and andl or shll fstl cwtl mov and out adc or lret push or xchg mov adc dec insb push fldt dec cltd sub lea adc mov pop popf jle pop sbb adc mov adc mov add adc in movsb pop or add test sub adc sahf mov push aaa clc sbb repz xchg sub mov push test cmpsb lods mov or mov fsubrs adc pusha faddl push repnz add mov sarl addr16 adc push imul sub out repz mov xor imul test adc cmpsb cmc pop popa test mov arpl fnsave adc mov sbb mov push mov repz fwait mov cwtl sbb inc inc cmp imul hlt out adc pop fild movntq adc xchg pop xchg fmuls jo cli outsb pop (bad) sbb push add insl xor in xchg hlt and and dec insl (bad) mov adc mov mov inc adc mov out pop pop imul mov inc adc xchg (bad) fiaddl xor test mov ss and mov jns (bad) rolb movd in and adc mov sub int3 shl imul sbb mov adc pop cmc leave or (bad) mov clc shlb sti cmpsb pushf std pop sbb push mov xchg idivb mov mov jbe xchg sbb push js data16 test int3 add sbb aam xchg aam adc add mov xchg or push mov nop adc pusha inc xchg push outsb bound sbb xor pushf inc mov mov sbb or fsubrl movsl xchg hlt sahf xor or mov leave xor mov or sbb sbb adc fisubrl mov push jae mov cmc mov ret adc (bad) sbb mov gs sbb repz (bad) sbb imul xchg adc inc pusha adcb ret push lcall add adc or push jne mov mov fs orb stc mov adc ficompl pushf sbb call sahf mov out incb push mov and adc and mov adc cmpsb adc js out adc adc adc ret jl sub adc adc adc add jo adc mov movhps push push add jae (bad) mov sbb cld es rol mov rorb aam inc pop pop push jo or add loop pop mov inc adc movsl hlt push or sbb sbb sbb sbb (bad) fucomip mov cld push rclb out xor mov hlt adc mov xchg push inc jae push mov jne jne iret lea and push out push mov mov mov xor repnz (bad) mov mov add mov adc xchg add and mov xchg adc adc imul push push xor adc pop jge and xchg loop pop adc jecxz fsubs mov xchg push gs mov xchg popl xchg xchg jl,pt add pop xchg cmpl rcrb mov insl repz repz adc les add add add add subb popf rolb and and push mov push jg push jno push xor push push loop dec adcb push mov push pop mov sub rclb mov push adc dec mov push adcb jb lahf add push pop sub pop rcl pop push push xchg and add xor enter add lret mov xor mov mov or jbe adc mov xlat mov dec std stos push jo push jmp mov jg divb adc xchg xchg push adc in mov mov iret xor mov add add jecxz dec push (bad) or jae push sub adc mov sti (bad) mov adc xchg adc subl sub cmp fiaddl jne test cld (bad) fcoms adc mov and add mov out mov xchg mov mov xchg adc xchg mov adc cmpsl stos xchg repnz cltd movsl call adc cmp repnz mov lahf aas xchg ds adc xchg imul lock inc adc mov cmpsl lahf test and jns sbb lcall dec mov push adc repnz push roll cmp and adc test shrb ds (bad) cmp mov cmp lahf xor test adc xor (bad) not jne and subl xor or mov (bad) mov cmc push dec fnstcw mov adc push iret mov push testl outsb cmpsl outsl clc adc into inc jl xor pop lea fist push mov jae (bad) int mov std mov xor lret movsl or sub adc mov xchg movsb jnp mov push jge aad imul inc cltd daa lea push cwtl mov aas pushf movsl sbb into pop mov test cli xor stos xchg or sbb xchg movsb add and sbb fmuls ja adc mov xchg cmp (bad) xor jb adc es das sbb cmp fldt add mov jno mov mov mov lret adc cmpsb xchg mov mov jg mov hlt mov add repnz cli daa inc xor add pop test scas mov xchg adc adc xlat add mov enter mov rcrb adc fcompl (bad) cmpsl lods or iret adcb jecxz insb (bad) pop out int adc test pusha je xchg lods test mov aaa fwait mov push add shlb adc mov mov cmp (bad) and cmp mov jl (bad) xor and xor lods cmp mov cmpsl into xchg movsl out ds dec sbb xchg adc lcall mov mov cs mov adc int3 das xchg mov mov lods or adc into sahf jp and ss pushf lods icebp mov test fimul adc xor dec cmp insb rorl lods dec xor mov adc mov mov mov pop push jmp ds push cmc mov fmuls repz out adc mov mov add aam mov das (bad) cltd sbb notb enter xlat add sub pop adc push sbb push add loopne xchg mov adc fldl bound adc mov jp mov and jecxz adc or adc or mov arpl test pop xchg mov sahf int3 cmp movsl add add push push movsb jle or mov cmpsl sub add mov add add shlb jecxz mov iret or adc adc popa push fmuls mov push mov and ret xorb dec cltd int xrelease stos fldt mov xchg out adc adc in rolb mov cmp mov sti and xor testl cwtl inc mov into and jle mov sbb popf cmpsl mov dec adc pushf push lea adc pop fs mov add (bad) mov mov mov fcomps xor push jno jg jae or mov mov iret adc lea in jge sti stos mov xlat mov jbe stc scas (bad) mov fcom rcll mov pushf aas sbb rep aad leave jno cltd cmc dec lea cmp into mov js adc or or pop xchg and mov and mov push push movsl sbb and mov mov adc adc push scas (bad) sti adc mov (bad) xor mov xchg jmp scas int adc mov adc inc push or test wrmsr or mov xor mov je adc push cmpsl sbb sbb sbb sbb sbb repnz movsl or and pop cmp jns adc mov ss add scas pop and adc sarb mov rcll mov cmc push mov repz xor clts xorl pop cmp sbb sbb out sub sub push fnstenvs fdivl cmp je (bad) and push (bad) jecxz and adc mov (bad) and add pop ret cmp movsl add icebp lret or mov or adc popa jmp adc jbe lods ja mov jecxz mov xor add fistl lods xchg pop xor adc icebp mov add xor mov and test inc adc ljmp xor adc cmp mov cmpsb cmpsl push add or mov pop add dec push or mov icebp jmp lock add add fwait and mov xchg adc add (bad) fcoml fcomip mov sbb mov add add loope cmpsb cmc pop add adc scas out cmp stc sub adc xchg inc push sbb or add add (bad) cli add icebp test pop add adc lods inc and aas xchg push push sbb xchg mov add push push sbb adc sub fwait adc inc or rorb adc adc lcall dec push mov push sbb sbb cmpsb cmp cmp repnz aas xchg inc adc push xor ret adc test mov inc adc adcl inc dec xor push mov xor aaa xchg pop sbb sbb ret adc cltd adc inc add sbb pop mov adc xchg add iret dec push scas push cs adc mov pop aaa das (bad) adc jl sub jmp push daa mov adc sub mov adc aas xchg add xor cmp add mov xchg mov stos push es cmp mov cmp das lahf (bad) push mov sub adc mov push pop aas pop add fwait and adc pop adc mov or and or adc adc cld xor jae sbb je pushf lret es testb push adc (bad) popf mov push and mov jp hlt add leave in adc jbe sbb das or jge fcomi or xorl jne inc push or arpl or test push and pop pop cmc push mov or es add add rsm inc add mov sbb mov inc adc mov insb or mov jge adc xchg add rolb mov sbb into fs add adc add incl dec xchg in push jle lea xor pop divb adc std cmc or in mov mov xchg adc dec repz sbb shll add aaa nopl adc sbb sbb enter jno mov adc pop (bad) push mov fld daa add cs xchg adc out dec fcomip adc xor popf adc mov mov adc pop or dec cmp mov dec pop sbb lds pop or adc jge ror add xchg test add push arpl or inc sbb push into loope or inc lss adc or push fcoml loope or inc pop or mov pusha mov movb pop adc sbb dec ret adc arpl mov rcrb xchg xchg ret xchg cltd add xor xor stos jae xor or adc push je push xchg xchg aaa pop rcll push push lds adc or or popf cmp or cld adc sbb test adc sbb or sbb adc das mov sbb inc je sbb sub (bad) jmp ljmp push stos fwait stos or sahf test outsl popf ja add imul scas dec dec repz popa leave push ss or xchg xor adc in jle into or push ds movsb adc popa add adc loope adc daa jne push ret push adc jle push daa aad repz adc add outsl inc mov or pop add jmp dec mov out (bad) cmp orl pop clc or std repnz or sti lods add mov rcll push sub mov fwait xorb pop jo cs sbb push inc (bad) xor repz adc maskmovq jno push aaa mov add or xchg add xor sbb outsl cmp dec adc fsts out or adc fadds mov sbb push lcall sbb (bad) sbb xchg mov adc ja push mov in sbb adc fcomip sub jg xchg test loopne xor or add add jb negl test sbb cltd push stc cmp adc lods cmp mov mov mov adc inc imul jg cmpsb pop push mov xor jae push imul jmp sbb sarb push push add or cld int3 push push pop mov or jo or cmp adc dec stc out or jg adc fstps push or add adc mov add pop sub addl cwtl add pop mov push mov data16 (bad) mov sub add cmp add cmp sbb inc adc adc xchg ret jg or icebp jecxz xor out add or ret sbb lret aam add jmp loopne cmpsb out test sbb sbb cli mov adc or or mov faddl xchg mov pushf push xor or pop in (bad) test dec in pop or ja xor clc mov pop and outsb repz aad aaa pop aam push or insl (bad) (bad) adc ljmp add pop mov cmp mov adc (bad) cmp aam je adc roll xor dec adc pop (bad) std jns jmp mov push adc gs mov mov add rcll loopne arpl movsl pop adc pop (bad) pop sbb and pop bound adc (bad) jne jbe push adc rclb dec mov push mov mov divb adc enter or push inc stos pop out inc insb inc repz in jmp sub adc enter lcall call xchg mov in push int adc (bad) mov out mov push adc push (bad) mov sub sbb xchg (bad) cwtl mov (bad) addr16 adc lret mov mov mov movsl enter loope xor adc lahf xchg cs adc push inc mov lods and jl std adc lahf cmp adc push push in push repz add jge adc adc pusha sub push lret outsb shll xchg hlt fisubl inc in inc or xor mov push (bad) add in fcoml std pop sbb xchg adc gs lods add dec test sbb fnstsw mov cld dec xor sub and adcl sahf loop and cltd dec sbb adc ljmp fisubrl sbb int imul adc inc mov push mov push test sarb (bad) sbb rorb mov dec aaa bound xor (bad) jb iret inc lods adc decl xor dec add daa stos mov jbe mov roll jae sti xchg push ret in pushl cmp daa and push and mov rdtsc sti repnz sbb dec push ss mov inc aaa sub decl insl ffree or repnz pushf add cmpsb out jge adc sub cmp enter mov ja repz inc dec icebp and pop xchg popf jl js adc movsl sbb cmpb mov loop jp adc loope and xorl xlat pop inc adc rclb scas ja aaa inc or imul push test sbbb iret and aam sub dec add enter push xor out and iret pop cs sub lret shrb out sub adc push aad fcmovu fcomip cmp xchg pushf adc mov add push pop push stos aas sub clc mov adc stos sahf test xchg add xor sbb mov adc xor in mov sbb mov mul in adc test ljmp repz repz stos mov sbb sbb inc scas xchg push pop lcall push ja adc insb aaa dec adc xchg jecxz (bad) push mov xchg adc mov push mov jae or negb rclb pop sbb jg mov mov mov movups adc xor or fbstp sbb xor cmp add adc inc js mov jge xor shlb adc fcoms inc push loopne sahf adc iret pop shlb push cld add test pop js inc aas mov adc lahf fcoml test inc (bad) jno sub adc sub mov mov adc or and or or rol scas das and pop jle dec cli jb sbb jns or es aad push mov sbb mov inc adc pushf out (bad) bound adc push pop repz adc je jb inc icebp push mov inc ss add xor xchg add pop or adc adc dec mov lea adc fwait or mov adc in adc push lea cs sbb xchg dec (bad) repz or inc mov jl outsl (bad) out xor lods push push in lret xor movsl sub or pop stos adc cmp imul push sbb or adc js rclb loop lcall adc adc adc mov cld lret adc fsubl or std stos push or (bad) out lods mov sub sbb mov sbb inc add mov and mov je or jle pop sbb push push scas pop outsl or das lods adc repz popf add mov cltd sbb inc pushf adc (bad) lahf adc (bad) fwait add cltd repz push icebp pop test adc jns mov xor adc xchg mov sti adc int3 add dec repnz push mov repz mov (bad) ss (bad) mov adc adc fcmovbe xchg adc cmp sbb mov jbe inc cmp je rcll dec insb ja cwtl inc rclb in outsb and orl pop adc sbb xchg rcll rclb lock jnp jle std les incl mov xchg jl sti aam push add push jo fldl pop gs js and stos popf cmc fistpl adc sbb mov xchg mov and je add add adc mov fwait (bad) cmc add sub push xor add cmpb push inc pop lret insb in adc inc add xchg adc (bad) mov leave sub push ja test or xor xchg sub mov xlat std adc aas push cmp repz repz mov cmpsb xchg mov add adc xchg adc or xchg mov repnz (bad) clc mov (bad) sbb jle adc pop push add mov cmp lret popf pop repz xchg sbb pushf sbb sarb sbb push adc test lock mov and (bad) fstpl or sti mov sub jge push mov call adc dec imul xorb mov out jmp mov fcoms mov repz pop lods pop cmp adc cltd das sbb or adc pop push sub jnp adc pop push cmpsb xchg dec je addr16 rcll lea adc movsl (bad) je outsb mov dec mov or mov mov push mov dec stos sbb xor lret mov test test cmc lahf adc jnp,pn dec into inc mov mov lds push das sub jecxz,pn adc adc push or adc into and imul fstl lret jle fsubr punpckldq dec ljmp push or cmpl outsl movsl nop mov sbb jb lret xchg adc dec jns int3 mov jno repz adc inc repnz mov mov pop adc lods mov sbb adc (bad) loope dec pop and mov adc pusha (bad) cmpsl push jecxz mov fnstenv dec out repnz sub cld mov jmp fnstsw mov cmp mov ds repz setno adc mov (bad) mov loope xchg nop adc sbb adc gs out cmp (bad) mov jo inc int das movsl pop lea sbb sub pop push movsl lds push cmpsl sub stos or cmc or adc test cmp sbb mov fwait lret xchg sbb hlt stos mov jl pop test insl adc cmp sub mov lahf stos mov push add sarb leave lea mov test jno push rcll add mov jp rclb xchg push sub int3 mov into mov inc xor jp popa jmp or lods adc push push les jmp cs mov mov cmpsb mov inc mov dec (bad) mov mov das or mov iret nop scas jae ljmp mov mov sbb mov or and lcall roll push mov pop adc (bad) adc jne in ja push and add adc (bad) fnsave mov rol pop movsl shrb pop sub inc xchg jne in adc mov inc mov mov repz lahf out aaa loop pop adc or dec push adc repz mov daa fwait push xchg mov sub add mov push lea iret insb rorl stos mov mov shrl test push adcl stos inc jno not fsubs icebp cltd inc adc in jo mov loope xor pop pop into test stos push mov sbb add push mov adc mov lret xor movsl loop aam in div test bound rdpmc mov xor or adc mov (bad) jno adc out popf mov test jb sbb je rorl jge adc xchg (bad) (bad) mov add test mov es adc or mov xchg cmp inc movsl mov aas rcl mov (bad) lock cmpsl or adc cmp adc xchg push xor bound jne (bad) mov stos or sahf and push lods sbb sbb xchg xchg xchg cmpsl xchg dec adc psubsb adc adc or mov mov bound sbb jb and mov mov outsb sub xchg mov mov add adc mov scas sub mov out adc adc pop adc mov ret mov mov add xor sbb mov add mov mov outsl adc mov xor mov or js cltd push inc add fiadd mov push outsb loope or loopne cltd mov enter ss lahf mov xor push aam xchg adc sbb jb addr16 mov repz mov mov fwait add repz mov bound (bad) mov daa and rolb pmaxub adc mov mov ret jmp aaa and mov mov mov adc mov loope cmpsb sbb adc mov mov jecxz or cmp scas cwtl add jnp jno and mov in ds add xor adc mov mov ljmp ret int adc jno arpl mov loope mov mov push adc adc sub icebp mov inc sbb adc dec test stos fbld lods mov jle scas imul and ss notb mov adcl fst test rclb adc cld jb int3 pusha outsl pop adc inc hlt add jecxz dec push into nop push push mov movsl jmp loope mov mov pop cmp push adc inc out or lcall (bad) jb popa jle stos xchg fsts loopne adc push cmp mov mov or jno mov adc aam mov mov or cmpsl or decb stos ret sbb (bad) adc inc mov add (bad) repz mov or dec push adc or scas cld sbb adc dec and dec add add mov jb add add add pushf add and test adc (bad) mov dec push test and pop adc mov xchg bound mov mov es mov jecxz adc sub xchg mov adc repz mov pop adc cmp aam push jno rcll push add push push stos rcll sbb incl dec sarb push (bad) jae mov mov xchg lea repz rcll pop adc sbb mov mov add popa jecxz lret repz jno mov and cli mov cmp stc adc cmp fucomip imul divl (bad) movlps movsl out jbe cmc cmpsl or mov mov loop sbb jo xor and mov ud2 jno outsl xor push inc (bad) mov xor fnstenv inc add mov mov rcl inc lods repz scas out arpl mov (bad) addl adc xor orb js jecxz jmp push xchg mov or movsl lret xchg sbb jp sti ljmp mov (bad) je (bad) lea adc cmpsl adcb pop mov repz movl pop push sub mov xchg stos pop add cld scas aas mov lods push inc sbb popl or adc repz mov xchg psrlw push mov add xlat push aam mov xchg adc sub sbb test mov (bad) xor push in popa push mov inc and pusha nop hlt mov (bad) jmp cltd mov adc int xor repz call (bad) or dec pop iret adc dec mov push sarl repnz mov mov mov lret adc dec mov sti divb iret jbe mov mov orl in adcb call adc movsl dec dec mov cmpsl fist inc jecxz adc fist enter mov inc in add mov movsl inc adc pop scas insl aas ja bnd add test test leave lsl add dec add add adcb inc call fistp pop les ret popl mov test mov and mov xor pop mov xchg or js mov push dec add mov popf add pop and pop pushf inc mov mov mov lods mov jno mov mov stos rolb mov jb adc test or mov rorb xchg mov add jecxz shll fs adc xchg aad xchg aaa inc xchg or xchg xor mov fucomip adc xor iret ret or xchg xor or pop adc lods (bad) decb xchg adc jecxz mov jo (bad) mov adc push movsl or add inc je mov jle mov fnstenv add and mov cltd xchg mov xor sbb prefetch or imul add mov mov mov xchg cmc dec xchg das mov adc add fwait mov sbb mov inc lahf adc cltd mov mov (bad) mov nopl or mov adc insb adc jp adc push xlat movsl repz cmp jl adc cmp test mov inc mov mov decb xor stos sbb or movl (bad) ret test stos jl dec lods sbb pop scas sahf fsubl push add adc adc push mov mov and repz mov jle pop adc adc push rclb cli push sar pop pop sub in fdivl imul insl int3 or sbb mov pusha lret fs adc adc adc cltd cs add data16 push mov adc pop mov or sbb int mov jge sub cltd mov cmpsl inc das dec movsl sti sub rcll inc adc dec (bad) mov fnop sti cmpsl push imul and addr16 dec xor push pop mov mov adc xor push cld xchg lods out fwait cmovp add pop out pop cmp pop cwtl insb pop mov add fdiv adc cmpsl movsb adc inc popf mov cmp xchg imul sbb data16 xchg cwtl inc adc stc lds adc ljmp lods fwait pop mov mov jp mov les adc mov adc aad adc pop xchg fdivs adc mov mov mov add mov stc pop mov adc adc das hlt xchg mov mov cmp and repz pop dec outsb movsl mov jo pop adc es test in or adc mov imul adc mov adc xlat jg adc mov or adc bound mov pop sbb jg dec push or sbb adc fisubrl mov jns mov mov jg mov mov pop or cwtl add ficomp mov mov fldenv and xor mov lods pop mov gs jge mov push cwtl test mov icebp mov rorb jmp dec test xchg mov add scas xchg xor lods je adc push mov popf adc mov cwtl mov xrelease in cltd jo leave xchg adc (bad) xor cmpsb or sub sbb stos jo adc pop cmp adc mov mov sub add scas jg je hlt inc sbb adc inc addr16 loop adc pop add ret jae xlat mov sbb nop mov mov mov stos mov pop adc adc jge mov fisttp lcall out add jmp dec rcl mov and mov or sbb adc (bad) stos dec inc mov mov xor sub push movsl dec mov mov stc adc jecxz cmp xchg fwait sbb mov jnp out mov stos sub lcall iret xchg mov mov mov cmpsl (bad) mov add mov push movsl repz sbb gs add adc in test push sbb pop mov mov pop cmpsb test scas sub xchg fidivl das fimul test stos xchg fwait push fsubrl xchg idivl repz loopne mov push mov push mov mov test adc inc sbb push sbb cmpsb repz out sbb jnp or dec adc cmp adc jp lret cmp (bad) add adc mov pop xor mov adc in stos xor push mov sti add pop mov adc fidivl mov mov adc push sbb mov (bad) adc add sbb dec jecxz dec mov mov or jge rcrb xchg ret stos in adc test dec cmp dec mov jno iret mov or adc mov mov mov scas and cltd adc lcall pusha adc fldenv xchg adc test xor pop cmp fimul mov arpl scas mov jo mov jp mov xlat popf mov mov fcoml adc xlat fucomp push repnz adc das or cmp enter push test xchg adc ret fnstsw int sbb or outsl dec mov jge adc (bad) jge jp add xchg push sub mulb adc in mov cmp jns pop dec je pop ja (bad) les adc jbe movsl repz lret jecxz call lret stos (bad) mov adc mov pop sub mov sub ror jge add or mov add lret add or push daa sbb adc cmpsb lcall push adc mov ret sbb xor sbb or add adc stc in sbb and pushf mov jp loopne dec inc and dec adc sub xor mov adc mov jmp inc or jp (bad) mov xor ja dec adc sub pushf stos mov ret mov rcll adc cld mov xchg pop leave xor stos in or sbb fistl movsl mov scas sbb adc dec jmp out or das mov fwait add pop mov fsubr adc mov fildl xor scas mov in btr or movsb jp stos (bad) repz and outsl pop pop adc or adc push scas push repz cmp cmpsl inc adc add mov (bad) loope mov push fidivl ret mov mov iret mov mov add adc test gs fadds adc (bad) xchg enter mov popf mov (bad) mov scas nop cmp out dec pop push mov pop jne push or xchg xchg or xchg in stos stos xorl mov std jecxz insl xor lods pop mov mov or cmpsl rorb movsl pop sub inc adc push mov adc aam cmpsl sarb popa adc fsts add stos popf repnz aad les xor adc mov ja inc mov arpl and lods or clc mov adc std mov movsl adc xchg cmpsl xor mov repz jl mov jnp mov push outsl mov mov add nop push mov sub fisttp push mov mov sahf insb add adc mov add adc sbb or mov add repnz mov rcl int mov (bad) mov sbb or push mov pop mov mov cmp in mov inc jns sbb xor call adc in jns (bad) adc stos cmp mov adc imul adc test and xorb dec jg mov or adc imul pusha lods pop dec push fwait mov lds rcrl adc push ds movsl leave lea cmp sub cltd mov sbb andb mov jge or repz pop divb mov pop and push es loopne mov lret mov or clc out push test lods or push inc repnz in imul pop mov dec call inc fsubrl mov aas xchg mov repnz adc mov mov popf add movsl shl ljmpw mov pop jmp cmpsl sbb lret jmp outsb sbb adc (bad) cmp mov adc push fmuls lods je loope inc adc or mov out fdivrs xchg sbb movsl add std push mov mov xor movsl gs mov adc stos mov or and pop ret test jnp int3 mov mov in jmp (bad) mov jns or call lcall sbb cmpb aam test fistl pop or sti adc sub sbb pop mov jle adc adcl mov bswap adc (bad) movsl sbb test movhps movsl add mov stos mov mov jecxz out (bad) adc repnz mov lcall fcoml int3 adc loop mov adc nop mov xchg mov add push movsl push xor add xor cmp xor add pop sbb dec mov cmp add sahf xorl push psllw mov dec mov mov insb jo mov mov xchg iret mov cmpsl mov fadd mov mov rdpmc sbb adc jne je outsb mov push jns push (bad) in adc rorb mov xchg adc (bad) jae jecxz xchg ja adc pop mov mov mov or xchg xor div shrl test adc gs frstor loop lds and adc sbb inc repnz lods xchg adc push dec rorl add jno scas add std adc ljmp mov mov mov movsl adc in push xor divl or mov movsl mov sbb psrlq sbb adc enter in cmpsl cmp jmp out mov push push inc adc jae cmc je push mov out test movsb xrelease add jno aad leave xchg sbb xor jae ror adc xor add or mov adcl mov cmpsl add in or stos pushf dec outsl test mov and scas shlb adc pop scas jl cld cmc lods inc and int test adc lods inc xor scas js mov daa dec push aas or mov push repz mov adc cmp adc in mov bound les xchg cwtl and adc (bad) mov jno mov stos xchg lock add sub mov repz mov mov out xor decb mov push js push mov ss mov pop in mov adc xor cmpsl fistl or adc add or idiv cmpsl call mov stos adc (bad) in cli push insl movsb fs in adc (bad) into lock push data16 adc jne xchg xor clc inc mov xchg cmp mov fwait aaa repz aas xchg mov std pop push cmp mov xchg adc fs adc push (bad) add adc cmp lea mov sar adc in mov or adc mov lret mov arpl push mov or lods add xchg repz jecxz js andb add in pop scas jns jno xchg xor sub adc stos (bad) popa jno lods jg jp mov mov mov jbe adc movsl ss cmpsl rolb mov push repz (bad) cmpsb repz mov add mov mov pop mov cs inc bound repz push adc adc mov and leave bound or or das rcrb movsl dec jns xor mov sub adc cmpsb (bad) test mov sbb mov loope adc mov (bad) sbb inc test fistpl push lods pusha in adc pushf or push push xchg jo test scas or test xchg push daa inc (bad) jne loop or fnstcw mov mov dec mov mov jo lahf jle xchg rcl mov xchg pop mov or adc stos mov sbb xchg adc sarl xlat cwtl adc adc adc mov out movsl jne jecxz pop repz mov lea cmp iret adc les pop mov ljmp mov sarb push mov cmp mov pop sahf mov sbb adc xchg xchg daa scas adc cmpsl mov lods xchg adc add mov dec pop mov int repnz sbb mov pop push sbb pop pop adc sti mov stos pop fsubl sbb bound scas cmp rsqrtss mov rclb mov mov sbb adc and lds mov mov pop dec ret push mov adc cmpsb adc or adc lods jmp not loope push jg test adc sub add (bad) hlt push mov test lods mov mov pop popf add cli nop adc mov mov or mov or xchg sbb sbbl out sbbl and sbb mov sbbl mov sbbl mov sub mov mov or icebp in cmpsl icebp call icebp std mov fwait call mov adc divl adc sbb sbb mov lahf adc adc fwait mov sbb sbb and mov cs popf mov add mov mov sbb jno cmpsb adc add or sbb lcall push adc lods adc fstpl lcall hlt pop adc ret dec adc in cmpsb test js adc sbb mov xor xchg mov notb leave cwtl cli fmul push xchg adc loope push mov jae xchg adc push lret sbb mov test in outsb cmpsl xchg push loopne adc adc xor fisttpl scas repnz lret adc mulb loopne fidivl or push adc and mov mov mov push cmpl sub sahf bound lret ficomp movsl adc sub cmp mov jge mov sbb sbb push adc mov adc adc push in or adc popa cmp lret fistl adc int3 sub aam in mov mov lcall cmp scas mov rcl push dec adc sahf add adc inc stos mov ret mov aam mov sti sub scas mov iret push xchg mov push mov jb mov xchg add lahf or push dec inc adc ror mov mov mov test xchg hlt es xor push mov push pop test adc mov sbb and test fbld mov xchg arpl adc rcll sub scas pop fisttp mov push sahf sti xor sub adc pop push mov mov and adc test mov jmp ror jbe sbb hlt xchg inc lods adc in test mov cmp sbb repnz xchg insl xchg jecxz lret and adc movsb mov or int3 not ja rclb (bad) mov or roll sbb cmpsl push sahf push in adc je mov movsl stos push sbb sub jno bound adc xchg push and adc mov stos test sbb lahf pusha add lret add sub sub sbb pop test mov out movsl jae repnz sbb lods inc jp int add mov mov ret repz xchg pop mov mov inc adc jne jcxz push lds lods insb pop add gs fidivr jle pop jb fmul add lahf add cwtl (bad) add cltd add clc add xor xchg xor dec adc ret mov cmpsl mov movsl xor pop mov ss adc lds cmpsl cmp sbb repz (bad) stos mov and mov mov nop mov test sahf test stos xchg push int3 xchg das mov mov adc lea xor scas add xor mov mov fs add cmpsb add mov inc dec mov orl mov add cmpsl movsb and test push popa lods inc sbb scas adc aaa fwait mov mov fdivrl mov push psubq jg xchg push fnstenv stc std jne pop or ljmp jmp scas mov loopne adc mov bound xor lods (bad) push pop into and xchg or aam adc out out clc adc in jp jecxz xor adc loop cmpl sbb adc adc stos in fildll scas pop sub xor add in add add cmpsb mov scas mov inc das mov push (bad) xchg cld xor pop add sar xor push mov or xchg mov inc cmp (bad) and xorb cmp ja mov xchg mov clc mov mov pop es and inc mov mov adc mov int3 jmp (bad) mov mov adc adc cli repz arpl adc insl inc mov mov pop hlt je add iret jne (bad) out mov jmp lock mov fmuls orb sub pop scas add movsl addr16 cmpsl test movsl add pop and pop adc xchg adc inc movsl adc js adc sarl insb lods mov sbb adc mov and (bad) cmp sub adc repz add aad adc adc int nop mov out sbb jge repz lcall cmp repz or lcall pushf jns mov (bad) mov test cmpsb and adc mov add jmp loop mov aaa dec mov jmp repz mov sbb or in jns outsb jno ret stos and fs dec jno dec imull mov fmulp push insb shll add sbb mov cld push out adc ret mov mov (bad) xor cmpsl inc lods test xor lds stos in inc test push xor sarb iret and dec int stos cmp xor enter push sub mov dec add adc mov pop push mov out mov or adc jg stos scas in mov ja (bad) mov jne cmp add sar fnstenv mov fdivl mov jle inc jecxz or bound ljmp lods inc loope sbb sbb ffreep mov lcall ljmp (bad) sbb imul or (bad) (bad) push mov les out add adc lods xchg out inc into lock dec hlt xor adc movsl sub cmpsl daa lods cmpsb pop mov insl pop or lea movsl shrl dec (bad) je das test or rolb jg mov mov xor push jmp mov mov dec sub imul cmp sarb cmp mov mov xor mov movsl adc lock xor xchg and push lods mov mov jo mov mov xor mov repz mov cmp cmovne or inc in adc lods mov pop adc sbb ja mov pause jae mov test scas push (bad) mov dec adc sbb stc int3 mov clc mov sbb stos loop adc xor cmpsb or xchg jae adc inc or movsl fmuls out loop dec sub xchg movsl mov das adc insb stos xchg test adc sti dec mov sbb outsb stos pop and adc mov sbb add test bts ret adc stc lahf xor adc pop std mov xor cmp (bad) cmp xchg pop push mov pop cmp mov cmp cmp pop loopne loopne int3 mov mov fwait mov cmp xchg aaa mov fsubrl sarl loop or add lods add scas fwait cltd dec mov push mov and cmp xchg adc test fs mov mov adc int3 mov stos add or and push popl or clc mov inc lods mov movsl fxch in and int mov es mov inc imul push jmp pusha pop push bound fsubrp mov mov ja repz mov cmp imul add sub popa mov jg or (bad) scas jns je or jno fistpll mov mov xchg unpckhps adc push adc gs mov mov jle mov lcall mov mov lods or or ds mov add test mov mov jl and jno add push xchg mov out out das add sub repz imul fnstsw mov adc std mov jg (bad) xor enter arpl push in lea xlat mov cmpsl add push movsl or into or mov xor jnp movsl jl aaa cmpsl sbb or mov (bad) out mov gs sbb mov cs or iret dec xor adc mov cmpsb xor lods in daa xchg jmp inc pop adc mov pop lods (bad) repz cmp xor adc lock ficoml repz lahf push or (bad) xor adc sub jecxz dec pop aam mov cmp mov add mov (bad) mov mov mov mov mov cmpsl lret xor int3 adc fdivrl mov adc pusha jb sarl repz dec mov sbb mov mov adc or mov inc sbb cld pop stos daa adc adcb fbld lds or aas cmc lds pop push dec add rclb test mov jp sub sahf pop hlt enter add adc inc cwtl scas mov popf sbb rcl loopne in adc adc adc sbb ficompl or and adc lds or xchg push outsl cs cmc movsb mov inc adc cmp (bad) mov mov mov mov pop sub movsl sbb adc mov mov test cmp fist cmpb push xchg fdivrs je (bad) nop repnz mov sbb dec mov mov add mov adc cs pop mov movsl outsl shl cmpsl dec insb iret pushf mov push bswap repz or jne movl adc mov fwait ljmp mov out adc stos out and adc ljmp adc test stos stc popf cmpsb lods movsl dec sbb insb cltd or mov sub or inc insl push mov inc and cmpsl adc dec popf mov mov clc aam lcall adc incl inc repz mov add push lods out gs ret std lcall push aad jmp test pop adc xor ds push mov call js push test sbb or pop cld push xor xchg inc jle xor popa sbb dec aaa movsl pop mov mov sbb or add adc and pop adc loopne and shl add adc repz xor mov adc sbb stos adc mov (bad) sub fdivrs adc les lock inc mov mov cltd ret fcmovb mov or mov lods es ret aas jno mov or js add or in adc mov sub jl rol mov gs sub enter push adc pop jmp movsl push testl test and bsr and and rcl stos adc add adc lcall nop sbb adc adc inc leave (bad) loope lea mov out adc aam call dec xchg add rorl adc stos mov mov movsl sub mov jno mov mov mov adc negb mov xor movsl xor mov sbb push add nop cmpsl fwait mov loop adc (bad) mov push dec xchg sub jecxz fsts push sub pop not movsl js push lock cmp sub test dec rolb xchg xor movq pop fsubs stos popa fnop mov fyl2xp1 mov lods rcl clc rcll sahf data16 adc in pop out and out adc out dec lahf cmpsl sub adc test xlat loop sub and mov adc fdivl inc adc add inc addr16 mov rolb xchg cmp ret adc sahf mov mov cmp sbb adc cmp mov repnz push adc daa insb adc mov out xchg sbb mov inc adc mov adc mov sarb mov faddl xchg mov mov loope adc push mov jg and mov inc dec adc stos cmpsl inc cmp push pop insl pop adc lock add jo icebp test rcrl cmpsb adc es mov pop sbb mov lods leave adc mov jae xchg lcall adc xchg hlt pop push out mov or mov cmp mov or xchg insb inc jecxz jno mov js add pop mov repz repz adc mov mov adc repnz dec jbe ljmp fsubl stos xchg loopne mov (bad) mov repz out xor mov mov repz xchg out inc adc mov mov mov add cmp ror adc fldl mov sbb mov mov push jmp int or push pop mov mov lretw cmovge push aas test xchg xor gs int adc xchg mov pop sbb adc mov push adc add add adc fdivs mov inc pcmpeqw or mov jmp dec cmp adc cmp aam mov or sbb ss add adc cwtl in mov add xor arpl mov jnp scas mov mov loop adc dec dec ja and mov repnz xchg addr16 adc jae ja mov and mov jecxz xchg add mov arpl pop fisub lahf adc pop pop (bad) (bad) mov in mov adc xor mov nop or adc dec stc xchg mov and loope adc jae lret push movsl insb sbb mov outsl out repnz lds into scas adc mov adc mov adc out fwait in in out jecxz loope loope mov mull adc sbb push push mov and (bad) adc or pop xor mov push push adc cmpsl mov jno pop cmc iret pop adc cmp inc or adc lds mov repnz ja es sbb adc push fsts adc push adc stos pop in jno add mov adc xor aaa or popf mov lcall mov popf or rorb jb or or xchg (bad) xor or or (bad) or aad or mov (bad) sbb inc adc stc mov out aas inc adc add aam xor repnz mov jnp ficomp mov pop adc adc adc mov add adc adc push cmp adc xchg sbb movsb add mov stos push mov call pop leave sti es or add add pop sbb or adc xchg adc cmp adc xchg clc adc adc xlat adc adc adc fdiv mov push pop adc sbb xchg sbb and pop pop test pop jp adc je xor xchg or aam ljmp ret jle aas mov or daa push int3 imul adc pusha push dec sbb sbb rcrb outsb lahf adc icebp repnz cmp adc in mov in loop dec add add icebp add jl cmp lahf pop fstpl cli adc mov or adc jle aas pop ja pop adc hlt pop ficomp fistpl mov sbb mov lds cmpsb push xchg xlat popf sbb mov sbb sbb add mov mov mov or pusha pop adc add daa push adc int lret or xchg xor or add out ret addr16 pop adc daa ss mov push repnz rolb jno adc mov pop lcall pop or repz or or lret cmovne sbb sqrtps or mov or fxsave lret sbb mov mov dec add call movl add add inc push xor int3 add push add aam pop iret push hlt pop jp cmp xchg adc adc or sbb popf push popa pop xor cmp pop add push adc sub adc add sbb sbb push sbb mov dec adc and cmpsb or or add repz mov dec cmp in (bad) push cli sbb push iret adc push sbb sub sarl pop or (bad) (bad) fiadd jl std add xor or jp pop sbb adc dec or stos dec addl adc mov adc push gs adc cs bound shll cli pop dec adc ds arpl insb adc les adc imul xchg outsl jno rcl inc xor or inc sub or inc fld aaa adc test idiv fstpl (bad) cltd insl hlt jno jo shrb adc fdivs xor pop je or push inc xor add pop divb pushf sbb sub pusha or cmp loope adc scas outsl or (bad) es iret lock jb lcall cmp sahf (bad) adc pop fcmovnu popf lods pushf rol fadds add cmp mov xor push and sbb int pop mov mov jp cmp sarb popa aaa loop xchg lds js addr16 xor lods fs popa inc sub stos cmp repz adc int xor jmp sub bound fwait add in jge popf dec fstp xor gs mov dec dec aam push popf mov pop pusha ror sbb or lret imul outsl dec sub insl push push jb lods pop scas std (bad) xlat xor adc xor jge clc aas (bad) call out out add leave push inc repnz xor sbb add mov sbb xchg ret pop xchg fdivl sbb and cmpsl adc adc push or push inc inc das sbb sbb sbb cmp (bad) adc adc clc sahf inc jne (bad) and in push pop pop pop adc push xchg jne push sub imul popa jecxz mov fdivl add fisttpl mov movsl jbe leave or daa bound dec das mov stos or adc or (bad) and inc cmpsl add add repnz frstor and adc movsb and adc test adc gs call dec adc bound into jb flds push inc adc lcall notb clc pop push adc adc push std mov cli ss pop loope scas adc repz push pop aaa push repz adc daa enter in repz mov movsl (bad) push jp jno mov adc fbstp push dec adc icebp xorl (bad) adc jnp cltd adc ficom xchg xchg and add mov sbb jne jl mov adc mov xor push xchg ss adc loopne (bad) das pusha sbb add movsb mov int dec dec into mov mov jg pop lods push jns fcoml notb inc rcl imul cmc fcomp mov movsl hlt or jg sbb push add sti inc cmp mov fmuls pop adc xor mov std stc adc pusha mov adc adc sub in or adc movsb js addl push mov lock mov adc xchg mov mov cmp mov adc aam aad (bad) adc hlt mov rclb xor xchg out push push jns mov sub (bad) pop (bad) sbb or fucom xchg cmc sub jmp loopne dec xor sarl popa and cmpsb adc imul xlat sub sbb cld mov jle adc and xor dec lea js dec loopne sbb rcrb test loop or call mov push adcl rcl ficompl insb negl and lcall pop fistp jae adc pop cwtl sub adc ss push mov pop adc hlt xchg aad mov cmp xchg xorl mov out dec pusha push mov jae xor call adc pop icebp cld repnz push ret xor mov das push push xchg fidivl divl jnp nop rcpps xchg adc into xchg inc fsubrl xlat adc cmp cmp cwtl jno mov cmp jns rcrl sbb adc push inc dec test mov adc (bad) data16 xchg dec sbb in mov xchg adc add dec insb test aaa iret repz jmp or and add adc fiaddl or mov mov push (bad) mov loop inc in adc fild inc xchg xchg mov negl jbe out mov sbb nop cltd sub adc sarb mov aaa pop jge lea inc dec cmpl xchg movsl hlt xchg mov mov or or add adc idivb cmp (bad) mov (bad) fcmovne pop lock inc pusha cwtl decl xchg adc out outsl rclb bound stos sbb scas jne add aas cltd lea mov or mov adc inc push or stos fdivr cmpl adc nop (bad) push leave adc (bad) dec xchg push cwtl xchg aaa daa xchg mov call jecxz test dec adc pushf pop int mov lods repz punpcklwd (bad) or or adc mov sub sbb push adc mov adc cmpsl outsl push or sub sti add (bad) adc icebp and add ret mov xor or aad xchg jo adc aaa leave mov sbb adc jb adc popa bound mov dec jg mov push cld adc xor mov lcall hlt repz adc add movd (bad) scas or loopne xor ss je sbb fldt or mov pop jno xchg mov adc push cmp movsb sbb adc mov jne int3 sahf adc cmp sbb arpl es lret and int3 pop rolb or or rorl (bad) adc insb ret push and adc cmp jo std inc lods xor xchg adc iret and into js test sbb mov add sti push imul or and mov nop cli push cmp aam mov jae adc cmp or hlt adc xor (bad) sti xor adc xor jmp adc cmp and adc (bad) int3 adc pusha jae loop adc (bad) int adcb push adc xor xchg adc shr dec xlat ds inc rcrb pop (bad) (bad) and nop repnz rcrl popf jge movsl dec int adc in (bad) sbb out repz pop pop or mov inc ljmp add jbe jecxz sti adc xor xchg adc and xor sbb dec push dec jp in jmp fdivrs adc ret fwait fs std je outsb icebp ljmp push jmp mov add je faddl (bad) mov jae sbb push mov data16 dec pop dec sub stos push jns repnz mov insl das add mov sbb mov std (bad) faddl sub jle pop fcoms jp xor sti out in ljmp adc lock sbb fadd sti nop and scas inc sub push pop push mov fistl lcall dec and in icebp add add push and int inc dec sub cmpsl adc ds popf in out (bad) pop aam push mov sti cli cmp pop enter jle xor jg cld push std rcr or mov (bad) flds xlat mov xor and add mov push xchg in out movl das jne stos xchg popf inc mov or mov repnz lods push dec and test push adc xor cmp pop mov inc adc enter (bad) lea repz add mov stc mov sub xor js (bad) ljmp cmp popa xor pushf iret mov fcoml repz adc mov repz push push (bad) push inc in mov (bad) pop pop sbb fstpt out jp mov push adc aad adc imul or in push out or mov sub imul aam loopne arpl jbe (bad) cmpsb and inc movsb sahf and out adc fsubrs jne stos jecxz test in sub adc fmull and adc ret dec adc adc and mov (bad) cli dec and xor xor (bad) mov test std sub mov pop adc push andb lock push ja movsb adc mov cwtl mov gs pop mov push insl lds push sub xchg mov adc inc fiaddl dec test inc das lcall call (bad) mov ret fstl fwait cmp xchg lods xchg or add jno jo iret test pusha adc push sbb das jecxz xchg rcrb in clc adc mov ss negl in lea and add sbb or in adc push nop mov fwait pop mov sti (bad) cmp mov pop adc repz aam pop cmp je adc (bad) scas xlat loope test mov repz negl rclb adc dec jb mov or out add leave push adc mov xchg dec cltd lods adc push lea mov loop mov xchg sub popa xor arpl mov lea push pop inc test push mov pop divb add and loope ret push arpl pop lcall fdivrs lahf sbb push stc pop pusha packuswb pop cmpsl xor mov xor jge adc adc lahf mov out xor xor push sbb xor jb fistpl adc add mov popa fmuls inc adc int3 mov int movsl out xor mov mov mov nop stc push pop rcr adc xlat cmc mov scas into sub add (bad) mov icebp insl jno lahf mov add lret stc outsb clc jmp repnz adc divl adc out pop pusha adc sub sti and data16 js pop and add mov adc call jle lock sahf adc mov pop push test jbe pop ret sti jle xor movsl mov (bad) addb lcall cmp sbb jmp ja dec dec or insl push mov loop push flds pop fs adc pusha fstl xchg pop adc call jns dec push repz sti add push add neg xchg call rcll adc jp cmp or mov jae and and repz or out call popf fs into ror adc imul xchg (bad) fwait push sarb fnsave xor divl test dec fldcw jo push xchg adc pushf fdivrl adc mov jno xchg insb mov and pop cmc pop notl jle pop cmp pushf fdivrs or mov push leave inc jmp or imul dec or out jno out mov or movsl dec xor pop push cli in adc (bad) imull out call les inc adc sub popa xor mull and dec leave das pusha add lods repnz adc dec pop mov scas jo adc jl xor xchg xor in adc pop sub mov fsubrs sbb repnz leave push jmp xchg fcoml mov aaa mov and jl rcr pop jae sbb (bad) jmp pop inc mov loopne pop repz sbb repnz cwtl shlb pop push andl adc imul jnp je xchg or int stc loope dec (bad) out pop adc enter dec pop sbb xor outsl dec nop cmp add adc cld inc jae push stos adc mov in mov fldenv lret and jae repnz in mov int3 push dec mov and loopne mov pop jns test adc imulb cmc popa xchg xchg mov mov push or sbb mov (bad) ds adc push jo inc lods adcl fisub mov (bad) repz mov mov aad pop sbb sbb mov sub dec add add outsl loope popa push inc or pop das sub mov mov in xchg push adc cmpsb shl sub lock mov shrb es adc in (bad) adc notl adc ss adc dec notb xchg loopne adc jl jne icebp mov xchg xor repz mov jbe cwtl push sahf adc add xchg jb and (bad) (bad) mov cmpsl or into adc insb test adc lea into adc insb xchg or fstp jo xor scas lods sub or adc xor lret fisubr mov les pop js push jl adc adc mov inc or movsl sub dec jmp call adc (bad) (bad) adc das lahf jb xchg sbb rclb pop adc inc adc (bad) icebp daa fldenv test or or enter xchg test daa aaa into xor jbe movsl rcr sbb xchg or ss ja lcall mov dec in in (bad) mov dec jge sahf rcrl adc inc adc lock cwtl rcrb xchg pop mov add ret jnp jb adc push cmp lock jno mov outsb mov add mov jo inc jle xchg xor jmp js sub repz lret mov shrb xchg push popa (bad) int3 mov xchg mov push add test pushf adc out cmpsl cmp adc rcrl adc sub xchg inc mov aaa mov bound repz scas nop xchg push addr16 adc popl out adc out jp fdivl xor push jno sub aam pop fldt adc fs sbb sbb adc push mov lds push sbb dec xor je pop clc ds or outsl rcl dec rorl sbb add pop (bad) icebp and add orb insl adc pushf hlt rcll and out hlt adc repz mov cli mov adc pop sub cmp or inc dec mov incl jecxz sub into xchg ds cltd in inc les lahf adc fsubp xchg adc or adc sahf (bad) js test sbb repz inc inc push es nopl adc in in movsl inc cwtl adc mov jns mov icebp rcll inc jno add mov faddl mov add jbe ficom mov pop imul add push xchg fldl repz cmp fsub je icebp fwait adc lahf xlat mov xor mov outsb cmp xor lea add mov dec dec or mov sbb xchg cmp dec cwtl dec adc cmp or pop ret mov adc repnz rcll cmc xchg ljmp bound mov fidivl ds cmp adc mov xor (bad) or adc adc into push jg pop or mov jno out stc aam sbb dec add popa adc cmp cmc add push adc xor mov dec test jp je mov pusha xor imul dec leave repnz ja sub mov adc (bad) cltd clc nop pop scas pushf adc add adc sbb pop jb push cltd adc push je lock push xchg lret jbe adc and mov jle cwtl neg adc fsubl rol shlb xchg out int3 rorb scas dec mov adc or lret sarb movlps decb adc daa adc mov clc pusha jo fcom pushf push add lahf pop adc aad xor jmp xchg xchg rclb idiv pop cld mov stc sti movsb (bad) or sbb stos addr16 lret lods add mov sbb pop push xchg movsb jp lea or add (bad) sbb icebp mov repz pop inc scas movsl adc hlt in inc icebp out adc add add mov mov punpcklbw pop jmp sub (bad) adc and jb dec and adc aaa lock push add dec cmp mov inc adc leave std sbb scas mov xor lahf push sub pusha or into push xor je add cltd inc inc push movsl imul (bad) mov mov push and push adc jo lock ret push cmp mov pop pop hlt push adc push mov cmpsb adc adc nop cmp add cmpsl repz lret cmp lahf or adc repnz or rep cmpsl push fdivrs mov int sub popw push mov jne adc int3 push stos sti repz mov fsubrp mov mov or ret sbb cmp add iret jae xor and repz adc cli and adc push ss sbb jp loope add (bad) adc iret mov call (bad) jecxz dec xor add sbb xor mov adc aad adc add mov mov cmp pop and adc fidivrl adc sbb xor adc xor mov jb or loop adc andl inc sbb ret or sbb inc (bad) cmpsb jo mov xor push mov sub mov jle adc loopne jecxz cs xor pop adc xor sbb sbb (bad) int3 adc imul fnstenv xchg adc sub out jno imul jmp sub adc out push mov pop or cmp cmp aam adc mov mov cmpl call dec mov test mov pop fs add adc xchg or or mov movb adc in pop (bad) jmp mov popf repnz pushf sub sbb xchg rep (bad) push xlat add sbb idivl cmp push stc or adc in xchg out scas mov adc mov js iret push fstl flds icebp adc mov daa mov dec and into add dec add adc (bad) fincstp cmp inc hlt pop loopne rcl push mov adc mov sti and mov arpl mov sbb mov sub mov xor sub xorb mov push int scas cmp fwait xor xchg adc call fistpl adc xor in push movl pushf pop loopne,pn not in jg or add add adc or jbe aaa jl in or mov int3 ror out push adc inc outsb aaa xchg insl andl ret in lods loope iret inc scas adc xchg mov mov aad mov data16 or inc mov xor adc xor xchg dec add test add cs mov ljmp repnz adc jbe push fwait adc dec movlps lds ss pop out adc inc call inc mov dec es pmaddwd dec adc jns bound jne repz enter or (bad) dec bound jmp insb adc or pminub adc xchg dec lcall ljmp lret mov dec dec dec sub mov insb cltd movsl hlt outsl loop,pt adc gs in push jmp ljmp insl cltd mov leave adc test xlat cmpsl add mov sbbl sbb cmc sbb jp sbb mov mov push faddp adc mov aaa into adc dec xor pop xchg cmp movsl mov jne pop lret xor sbb dec ja push jno pop sbb rcl push (bad) xor in pop or adc orb mov repz mov sub outsb sti xchg (bad) mov std push fidiv cli pop fwait cmp mov stos jae push mov pop pop adc jp pop or inc xchg pusha jb aam inc adc (bad) lcall jnp adc imull xchg cli arpl int push adc dec or in (bad) loope fwait out (bad) cmp int3 inc test jno xchg in lret aaa dec mov pop dec and cld dec dec xchg or sahf add adc and or and (bad) pusha daa out xor adc inc adc pushf mov (bad) jl push sbb ja sbb inc mov cltd loopne and stc aas push rcrb dec push adc les xchg pop adc mov mov mov mov lock pop xchg inc inc adc loope iret sub adc jge hlt (bad) jbe adc fwait adc push pusha (bad) (bad) in in mov or pop scas orl adc cmpsl (bad) icebp sub mov mov push lahf and xchg jp pusha push adc mov ficoml test cmpsl clc sbb jne repz mov test push pushf add mov stos dec or push ds pop dec jmp inc inc (bad) out imul or sbb movsb add adc insl dec jp enter mov mov cmpsl or mov out jle les mov pop mov ret aad xchg add movsl pusha pop mov mov xlat jmp pop mov push repz cmc aas xor push mov mov popf sbb popa cmp addr16 int3 mov lcall jbe mov inc mov repz xchg mov imul mov mov int sub add jno dec fidivrl adc push or scas notl adc int3 and push lds ret das mov push inc into cwtl adc inc roll adc pop adc xchg add adc fbld xchg mov or push into iret pusha shrb mov mov xchg dec test shr jmp mov push mov in sub aas cs int gs inc movsl loope mov stc xorl inc xchg sysret scas test mov insb out jmp clc sub dec aas sbb jge xchg (bad) xlat scas mov xchg add jno xchg (bad) (bad) movsl rclb icebp sbb adc push adc inc mov mov fcomps popa repz mov push testl xor sub and xor mov fwait scas adc jg lahf popf push mov jp std xchg or ljmp or aad cld jle push aaa rcll addr16 lods jmp mov pop loope mov aas cmp mov cmp adc aam push push movsb (bad) into or repz and das (bad) mov inc cmp mov mov pop push ljmp add movsl adc adcl adc sbb add or push pop push cs scas repz fwait test push dec aam adc (bad) cmpsl jle aam cwtl adc mov add (bad) jo mov lret add rclb add fstl mov cmp sbb icebp push lock inc mov mov pop sbb adc push jnp cwtl std cltd mov (bad) cmp mov notb mov sahf jle,pt mov push add add adc movsb pop mov xchg sub test test div push sbb xor cmpsl jae repz (bad) xor repnz adc std inc imul mov add inc xchg sbbb jae inc cs adc lea or push out repz mov jecxz imul rcrb enter out push and mov add inc jo and sub call popa mov pop mov adc test mov pop push xchg or or and push jb fildll scas or cmpsb inc vmread daa popa sarb add pop movsl xchg fldcw sub pop jg movnti mov cmc loopne lcall popl xchg jae or enter lcall xor cmp adc pop aaa imul (bad) (bad) and sub negb movsb jmp inc aaa inc cltd xadd xchg scas adc xor (bad) mov xor pop mov mov mov xlat push out xor adc adc iret sbb and test pusha sub mov sub nop (bad) add pop cmpsb lock adc repnz rcll subl test insl add repz or and punpckldq enter out sub and out and jmp dec (bad) mov stos stos insl add rorb aas sub cmpsb xchg repz mov rcrb or fcoml mov (bad) add sti jne sbb adc pop jg adc cmc xor shrl lahf xor xchg xchg push adc dec (bad) pavgw add and dec and pop call mov loopne adc fidivl push push adc insb into mov xlat inc xchg roll fnsave push mov repnz mov xlat loopne loop jge fdivrl adc mov bound mov int3 ja jb cmp ljmp out cmpsl ror imul stos sbb ror pop dec enter inc and lds movsl pop xchg sbb push and lcall mov xlat xor loop data16 sub pushf rorl add ret add out loope cmp and or jae lcall jp rcr jb xchg clc imul jecxz (bad) or loop js mov fstpl bound jae imul insl pop add movsl or adc mov movsl notb adc jmp out dec push xor xchg pop pop lock dec or hlt add imul inc sti pop pop jns adc cli mov dec repz xchg mov adc into ss sub stos xor rorl dec lods orps dec into dec rolb hlt adc adc adc js dec xchg (bad) xor push popa cmc dec mov repz into push js jmp adc push in in adc stc sub push jecxz add fs nop adc pop jno inc jnp js xchg mov fchs sete (bad) bnd add jb adc or mov ret push dec roll xor xlat (bad) popa nop rcll std or in adc adc (bad) push insl xor mov repz fwait in and (bad) jae sbb mov jo sahf push rcll jmp sbb fildl jg and pop mov out loopne in or mov sbb or ljmp jne xchg jo sbb lahf add jbe mov adc movsl pop fdiv mov push mov sub push movsl outsl xor mov mov hlt adc inc adc jmp jmp test mov fldenv ficom outsl nop push in push and push pop ja adc dec and out jecxz int3 test popf je repnz mov sub addb aas mov push inc mov in pop push dec rorl decl jno inc jecxz loop rolb mov movsl cmp repz mov sbb notl lahf les ret add xchg fadds jp (bad) repnz ja sbb (bad) cmpsb adc xchg mov mov xchg pop mov inc (bad) test xor imul (bad) cli adc sub mov popf adc inc sbb adc fs jmp push mov into adc jne (bad) adc test loope mov pop enter lret add loope xor fcompl mov pusha mov aas cmp xchg or add std adc mov cmp popa outsb adc es mov inc mov adc adc mov lods adc cwtl adc and repz ja scas and in mov adc mov sbb jle or push and mov pop fisttpl lock push inc pop ljmp dec insl cs inc sub sub cmc jle adc inc je xchg fsubrl mov sbb gs pusha cmpsb inc adc sbb fstpt xor addr16 adc push loopne shrl jno fcoml test sbb mov cmpsb pushf adc pop adc inc sbb dec push xor mov pop push movsb mov fwait cmpsb div mov shrl xor pop (bad) or sarb mov push jb pop pop fnstsw and adc cmp mov mov idivb add dec popa xchg repnz rorb adcb mov std adc mov adc pop sbb inc mov push pop mov std sahf cmc lret adc rorb repz push shlb xor or mov dec mov pop notl xchg rclb xchg adc adc ljmp jl push adc xchg mov add out mov mov adc cmpsl sbb or dec icebp adc ja (bad) sbb fwait sub aaa daa add adc push and mov (bad) icebp popa (bad) dec lods scas xchg and add pop adc lahf ficompl aas fwait bound pop xchg mov adc lods adc ljmp adc sbb or mov push loopne dec lcall or pop push or pop sbb lahf (bad) into aaa repz repz push or movsl jmp adc je mov or mov repz dec jmp pop repz insl xor adc xrelease stos pop or gs popa jnp pop adc sub lock popa xchg aam mov sub lea iret mov sub pop push add xchg xor mov cmpsb jne jmp mov cwtl fwait adc loope adc xor pop xchg and scas mov adc fbstp imul lcall cmp add adc xor mov sbb repz ficoml and mov push xor and jns cmp int pop adc adc bound shr mov arpl cmp or jl push fdivs add sbb int3 xor jp cmp mov cmp and call stos xor jno mov sbb repz lea adc mov and adc dec (bad) repnz push cmp and adc ds sbb lods jnp jno adc push mov sub xchg loopne lcall lods movsb mov or jg pop aaa push and push adc int3 and xchg push pop add or xchg cmp enter add decb jns icebp lds negl pop adc mov mov enter xor mov mov rcrb cmp sbb adc stos mov xor add xchg mov (bad) aam dec xchg adc push test or and and adc sbb push mov imul mov fisttpl fiaddl aas xchg insb cmp pop inc sbb xor test aas mov call shrb pop cmp sbb adc inc and pop call fildll add xchg push mov out adc imul sbb clc pop adc jne adc mov xor dec mov shrl popf jno dec andl int3 and ret add mov cs add addr16 into lcall adc out lods bound or sub mov add bound sbb ret add or fcompl dec jle jge data16 adc pop push adc mov aas adc sbb push and or inc adc mov adc pop mov popf inc add adc xchg test xchg mov mov mov inc mov insl xor adc in adc jb sub mov or mov adc andl jle sub lods stc jno and add sbb adc jns add popf loope jl xchg iret rcrl sbb adc cli and pop repz mov repnz sbb xchg add add nop sbb sbb adc sbb or cmp xor xchg adc add push pop inc rcll dec sbb adc popa dec adc imul jae (bad) in add or push sbb add add or out (bad) jmp cmp test lods inc fwait and mov mov xchg xor add sbb xchg sbb add inc adc xchg insl mov inc adc add sub adc pop add stc or les xor fbstp cmp adc adc lea cmp adc mov mov mov jns pop adc cmp test jo xor or repz or sub add icebp xchg mov rcll xor sub push dec and push adc in ljmp adc movsb mov cmp adc fwait sub add pop scas or in jp sbb xchg adc out pop adc xor and or movsl or movsb push cmp or cld mov xchg (bad) sub push add icebp stc mov adc idiv or repz inc popf push outsl or in insb cmp ja andl (bad) mov pop xlat popf aas add dec adc add xor jecxz or or in adc add sub pop pop adc xchg mov xchg lods mov adc jne es mov add push (bad) mov or sbb mov xor fbstp lahf mov leave lcall or dec fwait mov xchg push test xchg cmpsb sbb inc cmpl rcll and sbb mov ret or or xor movsl push adc push jb ja,pn adc cmp add adc pop adc fldenv mov mov push lock sub mov mov adcl or add push sbb xchg adc add push test out rdtsc or push adc int3 lret outsb mov sbb xor mov mov adc imul mov adc rorl add cmp push xor push popa or in arpl xor nop sub xchg jb outsb cmp mov or sahf movsl push adc jno jns loope adc test adc pop mov mov mov (bad) cltd sub or push ds sti push (bad) mov inc xchg inc sahf mov sti fsubl subl mov pop (bad) icebp sub xor xchg pop cwtl scas xchg sti aam (bad) sub sbb push icebp lcall cmp add jne adc cmpsl xchg mov popf mov mov adc xchg mov push adc mov or and mov xor jg adc inc mov or or push mov sbb std repz fiaddl sbb sbb lcall xor movsl fiaddl adc hlt outsl push je jns mov xchg movsb push mov gs mov and adc xorl scas rcl xchg (bad) xor adc cmpl jg mov std cmpsb subb je mov xor pushf into icebp je test cmpsl or adc adc push pop fadds push xchg jl adc es lock adc sbb mov fdivl stos pop sub dec sbb adc xor dec sbb (bad) movsb add pop xchg add mov fstpt push mov mov adc mov xor cmp add mov jno xor aad adc sbb cmp mov sbb gs shrl push cmc cltd inc sbb adc lahf stos push lods ds in ss and sahf (bad) jae adc and repz xor xor test dec add push xor pop push jno mov add adc or cwtl cmp adc add sbb xchg xor add in add andl or adc add add out aam and pop or adc xor leave test mov mov push call out sub adc data16 push add cmp mov add cld sub cmp cmp repz inc or out fwait mov roll and xchg jl xor adc mov (bad) adc xor sub adc mov lods sbb pushf mov xor mov adc sbb mov xor pop adc xchg adc test in sub pop and adc cmp or adc scas repz adc xchg cld or hlt mov (bad) cltd repnz inc or adc mov std xchg xor or lret adc subb lahf xchg add ljmp push adc add aad mov negl sub rcll ret sahf in sub out in xchg adc adc xor push mov add jecxz mov testl sti add adc adc push mov adc stos sbb pop cs xor je,pt or pop das stos mov push adc push adc ud1 add push rcll xor mov mov add pop or repz adc adc adc mov adc mov test adc lock adc adc cmp mov idiv ja cmp nopl sub into adc or sti mov pop push mov push and daa adc loop sub adc pusha sti push cwtl adc sbb add cmp or add call es mov sbb adc jmp mov adc mov dec sub or fdivl add jl loopne cmp ss adc mov sub pop idivl ja sub xchg jmp sub xchg popf xor fist adc shll inc stos pop rcll lds xchg push daa jns pop mov sub lcall xchg adc push adc xchg (bad) repz mov xchg add mov xchg sbb shr adc adc pop nop int3 jne push mov fs les test loop add lds nop out fldenv rorb fcoml adc pop jb and fwait push lret les add adc add or roll negl xchg ret push loopne xchg pop adc sbb jb or sub rcrb icebp in jmp add mov inc lods popa (bad) nop adc nop mov sahf and pop rclb ror pop dec pop or in sbb mov mov outsb add clc dec mov sbb movlps or add imul cvtps2pd mov cmpsl mov mov add jnp mov xorl and pop imul sub sbb mov jnp mov adc lcall into mov dec dec push sbb repz mov mov repz jae negl or loop adc lcall push push mov in add xor mov add add xor push cli push xor stos adc mov mov adc inc rcrl movsl add pop add out or adc addr16 dec clc mov cltd cmp insb lods fadds shr test nop or add arpl or aas and das pop (bad) repz arpl adc stc scas and adc add das in imulb adc aas lods imul es (bad) mov add das (bad) push pop lret push inc daa cld jmp stos inc xchg inc loop adc inc cmc xor cmp sti or repnz ds adc jnp repz nop xchg roll daa xor inc int3 shrl out aam cmp xor add arpl or sbb sbb or mov notl mov adc push iret cwtl adc sbbl cmpsl adc popf movsl adc fwait mov lods aam adc adc movsb adc adc adc xor pop or and jl cmp mov adc stos (bad) mov add xchg aas xor (bad) and add sahf cmpsb mov inc xorl imul sub insl jmp mov push cmpsl into xor push sbb sbb mov in jl add and mov jne adc cmp adc push cmpsb or cmp sbb pop push xor xchg cltd adc mov scas adc add rclb sbb cmp repz adc test movsb add mov mov sahf adc jecxz xor xor or adc adc arpl mov fwait xor aaa or xchg call pop cld loop mov adc mov mov daa jo push jne out or cmpsl adc xor bound cmpl inc mov add xor stc add inc and andb scas mov mov mov movsb add push add fstl add das sub adc mov sub pop syscall notb xchg ss cmpsb mov push inc pop add jge and test sahf sbb (bad) or jb sub or xchg es cwtl (bad) sbb adc pop mov das sbb adc sti test mov adc and xchg xor dec xchg adc stos inc xchg adc sbb adc rclb adc jns adc cmc insl adc push adc xchg int3 mov mov inc test mov add mov xor or nop mov adc cmpsb sub rcrl inc adc ss lret iret stos outsl push jge test adc dec mov mov push adc nop jno sahf xor add pop adc cmp nop add jbe aam (bad) and imul sub sub stc add inc pop adc es out mov push lea xchg cmp pop aad push xor inc pop mov adc stos adc mov sbb add jnp adc jp ret adc push pushf mov mov lds vmwrite xor (bad) int adc adc adc movb mov adc or sub adc xchg pop xchg mov push adc add xchg (bad) mov ficom sub je test arpl adc dec mov stc aaa pop pop adc add lds pop sub xchg sbb push das outsl and adc push dec push xor adc test adc inc popf inc adc fwait mov shrb xlat stos pop or push scas add jno mov pop ret mov imul lcall mov add jg adc adc mov adc xchg scas pop xchg movsl es mov or pop xor adc mov xor sbb adc lods sahf fnstenv mov in push jecxz stos sbb xor (bad) sarl push jecxz adc dec lahf adc popw adc pop adc and push mov cmpsl push mov in (bad) cmp add xor es xor ficom nop movsb xchg roll insl xor jmp pop push xor ja lds xchg mov adc mov adc stc or pop cmp inc adc popa sub jle xlat insb rclb ret imul pop jg xchg adc mov adc insb jne adc in or pop adc fwait mov rorl movsb adc adc and sub je and mov or dec lods jp fs cmp cmpsl psubb inc sub popf add int3 cmp adc stos mov mov rolb (bad) push jae cmpsl cvtdq2ps or push ds xchg jge leave adc sbb push pushf test ss fisub popf call xchg movsl add adc sub inc insl push fnsave mov scas pop fs mov out lea and pop xor xor xchg push adc mov mov xor cmp dec test sbb sub mov push pop push mov sub sbb movsb repz push sahf xchg mov adcb adc push sub popl lock mov or push cmp and adc push xchg cmpsl popf iret adc cmp lret test and lods adc inc lahf mov adc xchg in (bad) pop sub and pop jnp add je sub popa mov int (bad) mov in xchg adc sbb cmp sbb mov inc dec (bad) pop mov jecxz add xchg adc lods jns repz mov mov rolb inc and add sbb ds es xchg cmpsl adc xchg cltd movsb xchg lret jg mov mov sbb mov sti adc test fsubrs adc cmp leave mov mov xor sbb or cld adc cmp rorb adc xor mov pop mov out pop sub sbb mov lret push scas das adc xchg cmp sub sbb jns sub lea adc cmpsl dec cmp je sub insb xchg jecxz daa mov jno lahf adc ljmp jecxz pop rcr adc inc cltd mov inc xchg cmp push adc adc add out mov lods adc mov in xchg xlat out lret inc adc cs mov mov or xor mov jns mov push xchg sti adc repnz pop adc nop xor mov add and ja,pt lea adc xorl add xor push sub add add scas aaa aas jecxz mov rorb cmp push ljmp adc int3 cmp adc cld fcoml jne stc xlat insl mov aaa add sbb or sub sub cli push inc or inc adc xchg sbb and inc pop (bad) inc mov outsb push call xchg and cwtl cld mov cs out pop adc repz ja adc arpl xor push leave add (bad) mov scas pop fs nop xor cmp mov mov aas inc cmp popf add fistp adc dec jp in dec jo adc jmp mov mov repz ja cmp adc pop adc cmpsl pop cmc insb adc rcrl (bad) cmp (bad) mov hlt test add xchg (bad) popf sbb adc loop outsl push fsts adc clc andl pop adc lret ljmp (bad) xor xchg pusha mov xor push fnsave dec adc or mov sub adc adc xchg xchg mov fistl adc xchg and xlat xlat or mov cmp mov or dec adc sbb xchg xchg popf mov lahf mov and fwait adc inc pop pop sahf movsb adc mov shr arpl mov add mov adc cmp jle push sub xor add stc push mov mov sbb imul adc cmp subl or add adc mov nop pop stos add sbb inc adc xchg mov or jecxz test add adc mov lahf repnz scas dec adc xchg mov adc adc cmp (bad) ss cmp adc adc xchg sbb mov sub push adc sbb add mov mov sbb and repz lods in cmpsl cmp add repz int3 pop and mov adc imul notl jb scas clc dec adc fstl adc mov shrb dec mov pop jmp fisttpl sti pop jbe loopne adc mov mov mov adc xchg testl and mov stc mov lea cmp jnp (bad) idivb xchg adc inc lods xchg cli or outsb xor fsubl addr16 in cmp dec repnz out sbbb push mov adc add mov xor mov and pop hlt xor mov mov mov xor stc shrl mov dec fwait in adc xor cli jp xorl pop mov mov mov pop cmp adc mov xor or add adc pop sub xchg xchg cmp adc mov imul (bad) jmp inc sbb bound adc jbe data16 adc sahf aam xchg rcrb cmp or push scas and adc xchg or (bad) aas (bad) push jbe addl sbb mov mov lahf mov pop test adc adc loop jle adc scas ds roll inc adc aam and (bad) adc nop mov sbb add mov xor adc cmpsb lods cld repz std push push lahf sbb inc sbb or in mov cmp adc or dec xor out pop icebp pop adc stc repz jb xor inc (bad) or in xor mov or adc dec adc iret jmp cltd and cs adc pusha into (bad) loopne imul adc jl add rcll je adc pushf and xor popf in in lods sti adc repz es mov or pop add sub mov sbb lods out ret add scas pop push or add aaa mov adc jno loope jne (bad) adc sti xor fistpl scas dec adc cmp ds mov adc repnz cmpsl (bad) mov mov mov mov test and int3 push adc push xor and adc movsl out adc mov repnz xor test or insb insl mov mov sbb jl add add ficom dec hlt xchg leave cmpsb add mov xor addl mov dec xchg mov lods mov repz sub jno sbb inc push mov hlt mov stos sbb lcall iret xor xchg mov loope in cld adc mov mov sub fsts mov loop mov adc add mov out or inc adc xor add movsl adc test xor and push gs mov cld mov cld mov sahf cs push pop rol cmp jno movsl cmp andb (bad) and add add mov adc sub cmpsl cld pop (bad) call push push mov adc adc stc xor xchg adc mov stos and or mov mov cmp xchg inc jg adc mov es xchg clc or xchg sbb jns add add aam cwtl mov mov shll mov outsb into insl sub inc adc adc sbb lcall jecxz xorl adc data16 (bad) test xchg sahf xor imul dec sbb ss xchg test adc mov mov subb push jb xchg adc cltd xchg add rcll mov test xor ror jb xchg or repz adc cmp add xor aaa lods mov adc jl stc and (bad) mov or pop add xchg scas push mov cmp adc or inc mov sbb lret mov aad cmpsb mov cwtl mov sbb popf (bad) imulb ds push cltd cli add adc adc stc jae test and adc fnop xchg dec add pop mov adc xchg cmp lods enter pop push in mov or cmp xor sub aad xor push pop sahf adc or mov out outsb mov xor or mov adc ffree adc add push push das and xor sarb std xchg xchg adc imul pop adc or mov sahf (bad) movsb nop add and adc mov mov leave cwtl adc xor add (bad) xor add into xor add incb cs adc mov push sub sbb push add mov adc psubw adc inc and sbb mov cltd adc movsl xchg sbb ljmp and push lahf or popa mov mov mov push dec (bad) aas mov pop out jbe mov pop add push paddusw sbb (bad) adc lret add adc pop xor mov mov fsubrl add rcl repz fwait sub sub xor or inc and mov sbb imul adc add fstpt repnz sub sbb adc jecxz add and cwtl (bad) jae outsb adc adc adc adc or add mov mov push or fistl adc pop sub scas pushf notl dec bsr sbb xchg cmp sbb jbe or cmp test mov adc lea dec cmp rcll out rolb fwait jp xorl dec lea mov daa mov xchg mov and adc adc lea or outsb es adc and test (bad) xchg add (bad) movsl mov jecxz movlps adc mov lret lods adc mov cli fwait inc adc cmp add adc xor stc aaa xchg test adc cmp mov mov pop repz bound and sti or sbb cmp xor outsb xor cs in sbb pop push pop adc mov jle,pn sbb ss and mov jecxz fnstcw movlps rclb ret out adc sahf pop adc xchg push or push adc xchg stc fwait cmpsl cmp add mov sbb popf or xor adc lahf xor adc outsb mov mov aaa sbb sub jp push (bad) fucomi adc mov mov cmpsb orb (bad) sub adc lods or movsl xorl cltd jecxz adc mov ja mov push repz mov repz icebp outsl xchg or xor xchg scas out mov adc push mov and lock xchg mov jmp adc leave mov jbe enter (bad) push test scas cmp and jno scas add cltd aas xor add xor or sbb scas repz pop and stos lcall xchg jo adc pop dec xchg jle fs bound or adc xor cli sbb pop adc xchg lock add les xor xor arpl inc sahf mov adc mov mov movsb aaa repnz cmp (bad) adc add add xchg mov rclb mov mov mov jo adc scas cmp and pusha push add stos jno push sbb xchg popf jmp mov adc xor ja mov das or adc cmpsb inc push adc in outsl mov push cmp or adc das dec adc popf mov adc bound pop and pop mov mov xchg cmp adc mov popf mov mov xor pop or add xchg pop and sub dec mov pop adc xor adc rorb mov mov mov mov je adc loopne adc (bad) pop sub fstl cmp adc test mov outsb mov add xorl insl push adc (bad) hlt xor adc cltd mov shlb imul das ds xor mov cmp mov push adc or mov push mov cmovbe test add adc int mov cmp and push test ss xor adcl adc sub push push sbb loope push repnz or xor sbb pop mov xchg (bad) xor adc gs cmpl (bad) xchg int3 mov xchg jmp mov jge inc clc adc jl les cmp adc inc and (bad) mov fisttpll or stc mov or mov jmp sbb insl push xor lea and rolb ret pop fs mov sbb adc push mov adc sbb dec lds mov jecxz in lea adc mov sbb xor adc xchg adc lahf cmpxchg repz add adc or push mov adc xchg pushf movsl mov aaa mov adc test lea (bad) icebp out push test add repz mov aam cs adc adc mov xor mov fisubrl pop jmp inc ret movsl sub sarl add adc xlat rcll push inc fisubrl aas sbb adc mov aaa push das popf movsb in lock sbb mov add sbbl repnz sti adcl cmp jp and adc cmc adc sbb add out push mov add add testl xchg adc lods (bad) repnz adc inc mov mov xlat sbb sub int aaa mov adc imul add mov adc movsb scas fistl add int stos rcrb aas mov mov rcll daa adc imul sub cmc adc cmc xor adc movsl mov adc adc pop mov and or mov mov popa or cltd xlat adc xor aaa pop repz fwait sub or adc sbb xchg inc dec mov pop adc mov add out xor popf fxch push mov xor faddl sahf (bad) pop mov ss add adc std negb stc adc add in push rcll ja sub adc loope sahf pop jnp outsb xor dec push jle sub xchg jnp adc mov sbb cmpsl clc xchg xor push push fstl decb adc or mov ss pop push and cmp adc out adc adcl pop adc loop adc xor xor lret imul roll rcrl leave mov adc sbb rol adc lods pushf in push movsb pop mov cwtl xor movlps incb scas pop adc mov lea adc mov mov (bad) iret mov (bad) adc das or cwtl int sbb push aaa pop push jne cmpsb xlat mov adc adc inc mov pop xchg push xchg stc ss xchg dec and stc ss adc jecxz inc or adc or cs xor or adc aam mov adc scas leave push movsb adc data16 mov repz adc push dec leave adc pop xchg sub ret cmp mov rorb int sbb jecxz add (bad) aas push sub adc dec or cmp je mov cmc push xchg scas fnop mov add lods push int mov repz xchg mov aam adc xor mov dec push jb in mov or push pusha push xchg add shrb jge mov mov stos or xor frstor dec add cmpsb cmc dec out or xchg rcr call or rorb and adc jmp sub push push ja adc push pop and mov or pop dec sbb cmpsl xchg mov inc or xor adc sti adc or sbb and sub js push adc push inc inc and or adc or lret cmovns sbb jo or push sub scas jbe or push push orl in int repz in stos xchg adc call ret adc jge andb test adc mov and add or adc pop mov es push sbb mov notl lcall repnz xchg mov bound add outsl in aas lahf rep cmp push ds push test xchg adc das lea std push lcall fadds adc push movsl sbb movsl jecxz ficompl cli ss add jl (bad) adc or adc mov jnp adc add pushf lock adc sbb das cltd pop adc xchg lds in stc push mov adc xor pop enter pusha scas sbb (bad) sbb dec sahf pop inc mov mov xor dec cmpsl add pushf add nop cs sti ds inc xor push xchg adc adc popa add adc adcb adc sbb mov test aaa fstl cmp jmp dec adc in es mov movsb loop adc or cmpsl nop jno and xor jns shrb cmp movsl push je mov pop xchg or mov add mov inc out adc nop cli xchg dec lcall jno movsb xchg adc sbb sub scas int pop test (bad) repz sub jp adc sbb mov (bad) arpl aam xor movsb test adc fisub jmp or adc pop fdivs out js out outsb or or or insb pop add sub add jns and dec cs adc sti in add mov sbb std mov sbb addl je sbb lock adc sub ljmp or xorl xlat sub add inc add add setns insb sub adc lods nop and add mov mov push adc add xor lret xchg push mov aaa push ds adc add adc sar mov xchg pop or aaa lea fsts fs and sbb rcpps outsl push adc mov std mov sub scas mov or cmp adc xchg adc adc push add sbb xor adc sub push cmp sti dec ret xor cmc call cltd mov cmp mov adc fwait ja xor jp adc xchg adc cmp mov adc adc stos rcrl rcll xchg mov mov cmpsl cs cmp inc mov mov adc mov lock mov sbb adc jge (bad) fnstcw in adc inc clc mov movsl push adc int and adc rorb sbb and adc inc push mov or je sub push adc jecxz bnd adc cmc push loop in xchg loope andb rcrb incl xchg paddw dec push jmp cltd xlat push faddl xor adc jb cmp adc mov or enter or push jecxz pushf adc adc sbb cld in pop and adc xor or inc xchg xor inc pushf in adc mov jge xchg js fstl xchg mov scas add arpl mov or push push jl push cltd xor adc pop idivb movsl sbb cmpsb xchg sbb xor test das xchg xor sbb adc mov scas adc pop cmp hlt movsl pop cmpsl adc repz adc pop jp adc arpl daa sbb mov lcall add pop ret sbb test fldl repnz scas adc in mov xor adc adc adc mov and mov or data16 test rolb adc xchg jl mov mov scas or and xor das add adc xorl std adc lds cmp lret xchg (bad) or push adc enter pop adc or adc jl xchg imul pop sbbl fldt add movsl mov int xchg cs loop sbb push and es sub data16 adc cltd mov adcb mov or adc cmp jle rorb pop aad mov loopne adc or mov stos mov movsb cmp cmp or lds pop cmp push dec mov or pop add jnp test sbb repz adc fchs frstor loop in xchg cld jg add push aam mov mov sbb pop add cwtl or movsl dec adc stos cmpsb inc mov mov add adc sahf add xor sbb loopne jnp or or jne cwtl mov pushf or mov sbb push cmp cmp pushf dec jmp mov and cwtl xchg sahf xchg and sub mov and dec (bad) pop nop das sub sub xchg adc pop xchg mov and adc jp into das daa fist add adc xor cmp mov mov jmp cmp mov mov cmp stos or cmpl pop icebp cltd scas xchg pop adc fildl add dec cmpb movlps xor xor out or mov outsl cwtl adc lods or push cmpsl add mov adc test ret xchg xor mov mov adc or mov lock adc pop stos cmp adc test test adc jbe shrb cmp call mov xlat xchg sub push or ret xchg and std or insb sub mov popa adc cmp mov xlat cmp mov fwait push pop inc pop cmpsl mov roll sti adc xchg mov dec mov sbb xor iret sbb or adc das push or mov pop outsl sahf xor fistl mov sbb aaa cs (bad) shrl pop xchg adc adc mov sub lea mov dec (bad) mov mov mov mov mov mov adc mov adc dec in adc add or inc mov mov mov int scas adc xchg xor mov xchg mov mov push sub hlt mov xchg mov roll xor ja jo pop add pop adc sub repz xchg lea jg repz sub xchg sbb pop and or push add sbb fwait movsl sbb test mov add xor cs sbb pushf mov and xchg jae (bad) adc jne inc xor jmp pop lea jp mov mov int adc adc or sub fs mov adc test pop or adc jnp ds (bad) mov add iret mov aaa jns stos inc xor jmp add in add dec xor or add push xchg (bad) xchg cmp sub aaa and lret add cmp mov rcrb lahf cmp add and xor ss mov das lds adc outsl mov inc cltd cmp adc push je rcrb das xchg dec cmpsl xor mov movsb sub mov or adc jns adc repz push dec mov mov dec push xor mov or outsb sbbb push cmp and jbe xor adc add cmp insb sub sub aas adc leave enter aad add xor jmp mov cmp cmp push pop adc in jecxz xchg push mov lcall adc in adc mov fistp mov push je add cmpb ja jge jl add dec sbb or xor jp and cmp inc ret mov push add test or rorb fwait pop cmp adc xchg sub fisttpl loope jne mov xchg notl mov jle pop rorb cmp sbb push movsl outsb cmp lcall mov sub ja adc xchg sub movsl stos mov mov jmp or adc aas movsb inc sub pop movsl push cltd and mov es int adc adc lods mov pop push movsl or rcll mov ror mov jnp jge movsb jo push push add mov sbb cmp adc or sbb mov and xor and sub or enter clc mov mov push mov repz sub rorb adc mov adc ret sbb sub and xor inc dec insl movsl add cld pushf mov ror movlps cmp mov push sbb adc adc mov sbb xor sub push lea pop push xchg push adc xchg mov push arpl incl jmp or scas ja and mov add mov loopne push xchg mov xchg or mov adc sub xor add jne sbb cmp shlb std aaa sti (bad) push cmp fwait movsb adc adc pop jl xchg cmp adc cmp sbb adc xchg ss push and jp cmp adc movlps mov popa fmull (bad) push xorl adc pushf mov dec push adc pop enter movsl sub mov adc mov setge push outsl sbb fidiv mov sub adc mov and sbb pop rcll and adc lea jle loope jne adc xchg mov jne fcmovnbe mov adc rcll mov gs jne jbe push dec test movsl adcl or push cmp adc mov lods dec das mov es adc adc fisubrl (bad) xor xor (bad) cmp test xchg test xor xor int push clc mov loop push xchg (bad) stos fldt adc inc xlat xchg and adc push jp jo adc add add pushf adc out pop call cwtl nop scas add mov pcmpeqw add cmp xor andb mov fcmovnu adc mov test sub insb mov adc pop daa xor mov lcall sbb dec and pop adc adc mov call adc sub or fisubl inc mov call lahf add lea adc push mov movsl popf or push cmp movsb nop stos sub int3 mov dec bound adc add xchg cmp adc outsb xor aaa and cs repnz mov dec adc cmp xor (bad) xor and call rolb mov adc cmp pop and xlat mov mov mov dec adc cwtl add inc xor repnz push (bad) adc (bad) mov ficom adc lahf movsl xchg dec in adcl les lock test dec je xchg jmp push xor or xchg xor fdivl js arpl xor sbb push adc bound adc push pop adcl mov mov mov inc push and flds push mov shr mov stos mov adc jmp adc push loop adc pop mov adc pop xchg add and jae (bad) sbb mov add mov jmp repnz mov mov adc sub test add xchg sbb mov sbb and shll or xlat dec ficoml jecxz or lahf push adc sahf in in cmp xchg ljmp sub pusha and add xchg inc xor ret fs nop xor adc movsl pop cmp and adc lods stos and xor add add push mov mov std pop pop xchg inc push xor gs sub push add mov pushf xchg push sbbl test adc cltd mov add adc adc add das xor push cmp adc mov add adc cwtl and adc fcoml add or cmp inc mov xor adc shrb lahf mov adc inc add xlat adc sbb adc or clc mov mov mov mov sbbb cmp cmp adc adc add and enter and and xchg stos jmp sarb xlat bound or adc mov inc sbb xchg adc (bad) dec pop xchg pop push mov jmp dec dec or popf mov mov adc fisubrl add arpl clc mov adc fwait sbb cmp push dec push sbbb lea test int3 sub push add imul lods sbb aas or das adc xorl scas mov test and pop sbb popf cli dec mov mov jg aas mov jl pop push das inc adc mov xorl add pushf mov sbb jne mov (bad) adc pop popf cmp mov ret daa int inc mov cmp xchg jne mov test and push xor fwait and mov mov adc or or cwtl mov pop arpl sub mov hlt add adc aaa mov add (bad) adc sbb clc adc incb rorl jnp jl xlat mov or xor lret or cmpsl scas cmp test comiss arpl sbb sub xchg dec enter mov aas das mov mov or add xor (bad) shlb lods imul lret dec pushf cmp adc sbb je cmp xchg xor cmp mov lock inc mov push push inc xchg xor fwait je call adc sbb adc sbb insb jmp adc xchg leave pop mov push sahf mov add adc stos adc (bad) mov lods ficoml inc mov add adc mov gs or sbb sub push sub adc xor mov inc add adc xchg inc loop mov (bad) jae das mov mov lahf and dec cmp les mov sbb adc pop adc push lods (bad) pop adc sbb cmp add sub adc add mov xchg cld xor push in data16 sbb inc add or pop sahf push mov sub mov xor adc add xor cmp mov mov mov adc fbld push inc xchg cltd adc adc in sbb lods jno icebp adc mov test sbb mov sbb xor test and add adc push enter mov test xlat mov repz adc les xorl xor cwtl or shll sub test ficom loop push or cmp mov adc add inc cld roll jg,pn adc loope or mov cmp dec aaa scas cwtl dec outsb sub pop cmp adc (bad) ljmp xor rorl add or loope and or or or aas sub xchg push inc adc xchg jmp mov mov adc mov inc mov adc insl xchg and iret adc mov (bad) repnz mov in sbb push xchg cmpsb sahf sarl adc jge dec and mov test fwait adc sub cmpsl adc or scas push or mov push bound adc popf inc je ret xchg and adc mov inc out xor fcoms int jmp mov pop sahf in jle aaa dec add clc dec add inc hlt jmp aad les xchg push adc inc movsl cld dec adc in cmp add fsubrl sbb idiv shlb add idivl push inc hlt in mov inc stos push xchg adc jle xor jmp or aas and lea mov enter adc sbb xchg adc mov sbb adc adc sbb sub ja popl adc add adc push xchg inc arpl xor adc or adc cld out dec adc mov fidivl push xchg imul sub clc xchg mov inc sbb xchg mov les adc call test xchg ss or add aaa inc fcomip stos movsb xchg adc xchg adc pop (bad) adc dec cmp dec ja lods (bad) scas (bad) adc mov cmp adc mov xorl inc adc fmuls test out push mov xor int adc sub adc stos jb pusha ds mov cmp mov scas (bad) adc orl sahf adc into sub cltd das xchg fdivrs adc in mov adc or inc adc xchg je ret dec inc inc adc add bound jae test sub sbb add in dec mov and fwait jmp xchg pop aam adc call cmp dec add adc add mov in mov adc jne xor or lods push adc add adc mov or mov adc pop mov cmpsb xchg adc jmp andb add mov sbb push movsl ja test cmpsb or pop xchg mov out lea (bad) les or inc or out adc push add test adc aas cltd xor fdivrp aam repz xchg sbb adc or and les or or std sub xchg adc mov daa in add sub sub cmp repnz adc cltd lahf dec clc adc cmp and xchg das sbb mov jb add and cmc dec pop test test jne or lods fcoms sbb repz or adc sbb mov mov and sub mov (bad) iret sbb xchg mov mov add or cmp jmp push and out adc pop sarl iret mov movb mov mov aas adcl sub roll cmpsb adc test xchg add mov adc pop xchg adc stos jmp ja (bad) xor cpuid adc (bad) mov mov sbb dec or push popf ja cmpsb sbb movsb mov jle dec adc adc xor (bad) out push cmp sbb adc aad daa push add or es xchg xor push es sbb loopne mov mov sbb xor mov cmp push jl or pop adc jp daa cmp xor fstl add cmpsl sbb adc mov loop lock cmp adc or mov xor add add adc sub pop rcrb xor pop (bad) inc add mov sbb jecxz adc or mov sbb out xor cmc or dec mov pop adc xchg data16 push xor xor adc adc cmp mov mov js mov daa lods adc rcll adc out repnz mov adc xchg adc out aad add repnz xor adc fdivs and push les sahf fisttp xor movsl rcrb or pop add mov xor pushf pusha adc or adc pop mov repz sub mov shrb fnstcw sub push mov ljmp adc insl add mov sbb mov and push movsl repz inc and mov mov jno mov adc adc jmp adc pop adc push sbb or (bad) mov loopne les xchg xchg sbb push mov nop cvtpi2ps mov mov outsl adc mov xchg loop clc pop mov sub pop dec sti adc and xchg dec jns inc push adc mov or sub lcall mov push pop fsubs (bad) rcl cltd and adc xchg jge adc jg or add push (bad) adc pop (bad) xchg scas cmp divb jle jno xchg push jns scas or xchg sub mov test pusha fimul inc cmp add andb xchg mov add adc rolb xor add ret push insb mov lret inc sub lods inc xchg and adc gs movsb rcll mov mov adc enter adc int int3 adc faddl bound jno push roll mov adc fstl sub adc sub pop cwtl push push push enter (bad) xor pop push test (bad) mov les loope insl mov adc icebp sbb and pop jbe mov push (bad) sbb adc pushf push or stc adc in sub adc dec adc mov adc push xchg mov xor or das aad jae adc test add mov pusha and add adc push imul sbb cmp adc add fcoms cmp xchg and sbb or daa pushf add xchg fwait loop adc sbb stc adc sub mov adc (bad) adc cmp adc jns popa push aaa xchg int3 adc roll adc cmpsl ja aam and adc hlt adc adc sbb (bad) mov aas out and pusha adcb push cmp loop adc imul out cmp dec dec test adc nop cltd mov fcompl sub and lea adc fidiv add orl (bad) mov xchg push or imul insb xor mov mov test sti adc push add faddp cmp push setp sub mov lods repz push add cmovg adc xchg lods or sbb push pop inc pop adc lret mov test xor sub pop fnstenv leave mov insl adc lods ret adc insb in out pushl pop mov jge add pop iret sbb cmp rcrb adc dec cmpsl dec mov xor dec adc mov inc nop or xor and mov adc or adc fs push xchg aaa sbb and and movsb mov jo aaa or xor aas sub les xor jmp pop inc sbb pop xor adc cmp int les and and cmp add cmpsl aas dec or mov cmp lcall cli imul and aad shrb adc jl ficoml adc xor scas or mov sbb repz pop (bad) push dec enter pop mov pop push jmp pop push add mov pop dec sbb sahf lds inc out or xor test mov cmp mov adc popa adc mov mov stos adcb and sbb mov adc fs pop mov mov or adc dec adc lcall rcrb int3 adc les and icebp outsl outsb or mov jns dec push add aas repz push out and shrl or xor and or cmp fidivl das xchg int push adc test lret xor adc sub sub adc test jl xchg idivb mov pop movsb or and adc lds or cmp push adc dec jb push (bad) scas xchg je mov adc jno,pn push xchg in adc stos adc jns adc stc sbb mov xlat outsl sbb cmpsl add adc adc push or mov stc adc mov push (bad) mov cwtl xchg scas sbb pop add adc mov mov pop or lcall inc sub jae setle cwtl adc cltd lods ss adc or popl mov mov cmp xor or pusha mov xor pop add fistpll sbbl in or xchg and dec repnz pop add adc les adc sti sub xor inc adc fimull inc adc push adc cmpl repnz rcrb (bad) adc mov adc mov mov adc dec adc cld cmp daa inc cmpsb or or or mov adc in jb ss fnstenv push push adc mov xchg adc repz fsubrl sbb jmp lods jbe sub fstpl adc test cltd into sti adc push adc fwait mov les or in sbb stc sti add sub xor xor in add aaa mov sbb xchg add dec or lods int3 xchg icebp adc in adc xor adcl stos cmp (bad) pop adc lock adc push daa add dec adc ret pop add or mov or adc sbb mov push push push mov or das faddl adc adc cmp leave lahf mov adc adc popf push fsubrs xor sahf iret insb dec scas dec iret adc out fs jp leave ljmp or test mov adc cmp mov adc push push sub je cmpl lret pop adc iret adc test icebp add add lret sub jae push mov push repz mov pusha or adc jecxz repz dec or dec pop cmp repnz dec push movsl inc xchg aam adc ss lea adc cltd je adc jl mov adc adc push mov out or or dec mov pop and adc adc leave dec xchg and sti adc repnz or push fsts rcrb add or and push jg cmp dec jb mov adc lea and jnp loop movlps iret jge pop imul dec adc or nop inc mov test xchg inc sti pop sub adc add nop (bad) rclb xor scas inc loope (bad) repnz push mov xchg lret adcl pop dec or add mov jb sbb lcall in xorb jns or xor dec mov aas xorl ret cs push arpl dec paddd adc xor xchg sub push cmp mov adc je ret or pop aas add inc sub adc sbb mov adc (bad) pusha sbb insb sbb nop mov and xor add push push mov add or movsb lret xchg ret pop pop inc xchg out mov mov pop sbb push adc lea repnz mov add jp add loopne mov xor adc into and adc fwait movsb shrb out lods adc mov dec mov xchg adc cmp test (bad) mov adc adc mov sbb (bad) cmp xor shl je sbb or mov adc adc jmp lahf mov mov mov (bad) pop push int3 outsl xchg add adc insl adc rcll mov fwait xor imul or nop in adc mov ret xchg test xchg outsb adc or sbb fwait (bad) or fcompl adc aas xchg ss jle or and lret ljmp das mov pop aas and stos mov add xor adc adc xchg cmpsl xchg popf push adc call movsl xor sub lods or mov inc (bad) mov cwtl jns loope pusha int loop add or jno xchg or jge xor push mov mov add leave inc jge jp sbb scas inc mov adc cwtl das adc inc cs push cmpsb adc aaa sahf rcll push movsl xorl xchg xchg xor js lea push lods nop movsb or jmp xchg and sub or mov push cli adc sbb ficompl and adc sbb mov push adc ds mov add lahf fistp negl mov ljmp cmp push mov add cli sub adc jne repnz adc mov incb or xor and sbb cmp sbb (bad) mov hlt sbb xchg (bad) cmp adc adc or pushf adc xor paddsw cwtl sbb sahf jg test mov pop and mov cmpsb repz ret add ret mov push mov mov fsts cmp pusha dec daa adc mov mov xchg adc add popf pop adc stos lea adc sub scas jb lret adc adc fidivr cmp mov mov adc cmp push lret cmpb out mov pop adc cmp mov clc js cmp add adc cmpsb or and inc and sbb pop and and out add xchg adc add mov and add adc lods ret adc pop mov repz sahf mov and mov add add mov mov push test (bad) mov lods xor xor or sbb xchg jns mov std xchg cmpsl sbb adc inc adc inc dec adc sub jno xor pop jecxz add cld mov adc and adc mov adc out mov xor mov mov sahf xlat jl in adc add or movsl sti jecxz (bad) adc mov stos scas xchg mov xor ja adcb dec out sbb or in xor test xor cmpsl mov pushf cmp adc xchg sub xchg xchg xor imull mov stos nop and cmp out shld and add or sbb mov mov ret or sub enter int cmpsl repz andl jp push insl jae (bad) adc sub jl,pt sbb pop or adc xor push mov scas test add repz mov jns adc push adc pushl dec add mov inc (bad) je and or out xor (bad) inc adc sub or adc repnz test cmpsl fs repz adc loope in adc adc dec lea in je stc fwait add fisttpll push iret add adc adc fisttpl mov xchg mov jecxz mov push cmp mov les adc adc mov and aam adc test adc or sti sarl aas je ficompl jmp iret int cmp add stos sarb push pop adc bound lods mov pop sbb psubw jnp sbb das add mov add roll (bad) std repz and mov repz xchg adc adc adc inc out nop adc ds add jno adc mov ss adc jge lcall das jnp sbb xchg mov pop mov scas out or adc add pop pop jmp adc cmpsb xchg cmp jnp std add xor adc iret es jge adc mov stos dec xor adc scas ds mov cmp adc jg jnp adc nop adc out test mov jmp insl std or sbb lds adc or mov pop or adc push xor or or add xor push call xchg test inc sub add out stc sbb les sbb jge mov jp adc aad pop ljmp mov test adc jns sbb mov lods sbb push movsl or and xor adc hlt mov xor das dec xor loop adc adc pop rcrl inc mov ds cmp jge add xchg sbb repz shll imul aaa adc add roll sbb insl movlps pop stc add cmc push mov push aam push add sbb sbb adc insl aad int3 scas sbb mov push sub xchg popa repz test push int3 mov shll ret cmp adc mov cld adc mov in mov xchg int3 sbb adc adc fcmovnu insb imul or insb adc (bad) out xchg cmp add add cld adc arpl fsubl xor adc (bad) xor mov movsl stos and sbb je fidivr adc mov adc adc icebp adc cmp std mov leave fiaddl adc sbb pmulhw xchg adc add mov xchg add iret roll adc lea xor adc call sbb es mov sarb xorb test rcrb adc das mov mov adc sbb adc mov push jb adc test adc or mov push pop xchg dec mov xor rorl jg rclb pmaddwd imull xchg adc lea outsb xchg push xor xchg xor les adc xchg jnp shlb add adc xchg adc xchg andb cwtl out jg out pop xor push push push adc fsubs sbb nop shll pop ret pop and mov mov enter xor cmovns adc pop cmp clc pop cmp adc xchg cld sbb je adc adc out adc call pop mov mov mov xchg sub xchg test popf mov std cmp inc mov mov or jmp jb adc cmp clc jne hlt push sbb mov mov sbb int adc sbb adc mov or xor mov notb sub rorb cmpsl repz xor cmp jg push sbb cmc arpl pop std mov xor adc (bad) pop xor cmpsb stos lcall adc sub fcoms ss mov and or ja xor adc adc popf or (bad) mov jo xchg or and mov test mov sbb push mov xchg popf adc push ja daa adc sub andb mov nop hlt mov mov and test int or pop adc leave xor loope aaa fisub sbb mov imul mov repz xlat popf das pop add push xchg stos adc mov jns or dec test xchg xchg jnp adc adc mov lods pushf scas sub sbb adc xor cmp popf mov jecxz popw mov mov adc scas add push stc pop and adc das xchg sub negb adc push sbb ss pop and lods or scas movsb xor pushf cmp adc push xchg rcll mov jns xchg das (bad) xchg repz mov mov push and shrl call sti or push mov andl es adc xor test adc mov sub pop das sbb or jmp mov mov push sahf movsb pushf test ds xor mov mov je loope out cmp das std push adc or fnsave lock sub cmp stos adc mov out insl scas xchg adc das mov xor adc out xor sub push adc adc sub movsb adc mov sbb push adcl mov sub je mov adc adc ja mov popa and cltd adc cmp mov mov inc aaa push rorb imul sbb sbb or mov jle scas in pop adc adc sbb repz mov pop or mov lds or adc repnz ss xchg and sbb adcl cmp andb int3 adc adc stos xor dec push nopl nop add adc mov mov pop fdivrl xchg fldt repz add pushf inc hlt xchg mov jne lock lcall sub mov adc sub addr16 gs add add push stos jb adc lcall test loop mov push or inc xchg mov shlb notb jge cwtl or fisubr xchg sbb adc jae xor sub adc sahf mov rcrb mov (bad) jne nopl or mov and stos adc push adc inc in mov push (bad) cmpsb lea dec push clc and sbb adc adc (bad) sub xor push sbb loope rcrl dec sbb fs and push push mov lea adc push adc add xchg lahf mov iret adc sub add rolb push sub imul push lods cmc push pushf adc fstpl inc adc nop and push cmpsl add or or add imul jle adc and movsl sub rcrl adc popa jbe mov adc xor mov and xor out xchg mov adc cmp and push mov or jecxz add frstor adc adc cmp push out dec jge sbb call adc or add repz sbb test adc cmp adc adc pop stos stos adc pop and xorl punpckhbw loope adc out icebp pop or adc and ficompl shrb or pop inc or movlps pop adc cmpsl inc inc repz mov mov push adc mov jne outsl mov lret cwtl aas adc scas push repz cmc adcb mov (bad) xor adc cmp jge ret mov mov rcrb popf je or adc lret or xchg or mov push inc test mov ja jecxz adc push popf lods jbe push fcmovu mov xchg fldl rorb es ret (bad) and cmp repnz pop xor adc cmp adc pop orb nop xchg xor adc jp add cmp cmp push adc movsb (bad) adc adc sub (bad) je sub or adc fldl adc mov push aas pushf adc sbb pop je xor adc inc adc sub es mov or repz cmp mov push or adc adc add inc jp adc aaa or or dec in sub add and les sbb cmp pop add xchg push in inc cmpsb sbb test repz xor or and push and pop inc adc aaa negb out mov cmp (bad) fwait adc and cmp sbb repnz push adc sbb jb inc pop aad rcrl lcall jge aas xor rolb aas add orb add xchg cmpsl sbb jmp add adc fstps cmp fsubrs adc in inc fidiv test sub out sub bound pop test inc xorb jecxz push or lret sub push fwait movsb jb lods jmp adc es push sub sbb insb stos xchg sbb (bad) repz sbb adc and and jnp sub xchg repnz xor outsl mov push sbb mov adc in bound ss push addl xor mov es pop scas sbb test dec je push mov jbe xor adc pop int rorb fwait ret pop movsl add pushf mov adc xchg cmc movsb call push scas pusha sub fsts nop rolb xchg push sbb mov adcb adc add mov adc daa adc dec add xor test adc loope and adc rorl in mov icebp pop pop mov psllq js pavgw pop adc jle add xor add adc xor cmp js xchg mov rorb mov xchg xchg bound sub daa xor popf jg ds or xchg (bad) rclb or adc pushf inc or adc xor mull cmc and stos addl mov xlat (bad) sub mov xor jp adc sbb adc popa jl mov adc bound cmp xor add mov or and adc mov pushf repz add mov test sahf prefetch je jl mov xchg sub push je (bad) mov mov cmpsb inc adc sub adc sub add jno cmp cmp or cmp or inc repz push sbb jne adc sbb xchg imul pop adc pusha mov subl sub push pop pop push mov pop lcall jp add sbb push jmp add push add and sahf jns xchg add pop push sbb mov xor push or push or mov outsl and cmp adc (bad) push adc jl or xor sbb jle adc or push add sbb rorb sub mov cmp scas adc repnz js mov aas cvttps2pi mov test add sbb xchg jae xor add xorl mov adc mov jmp jp add bound xchg mov add xor push or pop adc mov clc scas push cltd insl sub movlps insb push mov mov adc add clc pushf test cmc sub out or ja ja int3 adc push insb cmpsb cld lods or imull push adc mov (bad) aam mov push push data16 hlt push cmpsl pop lahf popa test xor mov or add mov out or pusha add mov divl in mov repz jmp sub adc in cmp push jo call xor mov sbb adc jae subb or adc lock add sub sbb out adc adc daa loopne or mov cmp and or test das xor add adc mov std cmp and xor cmp lea in adc cmp push adc mov lcall push outsb xor cmpsl jg push aam adc outsl cmp adc fs hlt scas sbb mov sbb loop setl imul mov adc hlt mov test gs icebp mov or sub mov xor adc js lock xorl and cmp push dec xor adc ds jb pop mov push xchg cmp adc ss mov dec adc dec xor dec mov notl and pop es adc pop xor push adc pop and xor cmp adc inc subl divl inc adc in adc pop pop adc cmpl idivl pop adc pop andl mull pop adc pop pop pushf pop ja ss xorl divl pop adc pop push adc push andl idivl push aam pop adc push andl and adc push subl mull dec adc in adc pop dec adc dec rolb mov inc idivl adc mull adc idivl and xor pushf pop sub xor mov cmp mov cmp sub jle and sub sub adc adc pop xor lods xor (bad) mov sub ds adc sub movsb pop aaa adc divl mov sub cmp in xor mov sub scas and mov and mov subl lods pop fstpl adc and sub mull cmp test adc pop cmp and mov xchg mull (bad) bnd lahf adc xchg cmpl divl xchg adc nop cmpl divl mov xor aaa xchg xorl idivl lea sub mov (bad) imull mov sub adc subl mov (bad) aam pop adc lods (bad) adc pushf adc mull adc lcall adc xchg xorl mov xchg adc divl xchg adc test sub xchg jp gs mov and mov xor (bad) repz or sub pop or mov mov pop adc cmp das sbb js inc cltd add sbb or jns mov in add adc fmul xor loope,pn or repz mov xor lods fcomps repnz add mov push adc add stos sub xor dec adc adc push test sub pop jmp rclb dec or adc dec sub push adc sub (bad) sti dec and adc pop cltd adc xor xchg xor adc inc xchg faddl hlt mov add push xor xor mov (bad) jb das pop adc sub adc pop add mov adc jmp outsb xor inc sbb adc jno sbb stc mov aas cmpsb rcrb add movsl fisttpll add and mov sbb adc xchg shll out test adc std mov (bad) adc scas xor repz xor xchg into jns lods pop mov (bad) jb bound xor adc xchg es cmp aad or movsl repnz inc xchg pop xor (bad) pop and mov adc jno cmp push cmp pop adc push sbb adc nop aad adc lods loope adcl mov notl sbb lret dec push pop or in lahf repnz push adc pop adc popa mov or jg mov adc adc add mov add pop inc adc sub mov mov adc push jb mov mov adc repz pop aas xor adc sbb add or hlt mov mov mov dec xchg xchg test adc xor mov test ret sbb pop cmp add (bad) mov sbb cmpsl mov jecxz cmc mov sbb (bad) jbe or push (bad) push std in popf addr16 ss rorb xor rcr mov or les xlat adc mov sahf push test adc stc test sub lret mov lcall (bad) adc fs pop dec loopne mov int xor xor and pusha or push push bound repz sbb (bad) cmc sub add je fisubrl ficomp repnz mov adc adc xor insl adc adc adc popf adc aas mov std int3 xor in cltd xor jb repz cmpsl sbb xchg mov adc cltd mov or mov push push test mov bound pop xchg inc add pop out clc jb xchg fs add xlat adc sbb adc or adc adc add adc fwait add xor outsb xlat sub mov adc stos xchg mov and adc sahf mov arpl push fisttpl pop xor cmpsb punpckhbw (bad) push ljmp jle nop sbb scas adc inc lock mov pop sbb aas sbb shrb jg push adc (bad) repz mov adc cmp arpl adc leave or jmp mov pop add lods mov jl dec sub iret push fabs mov cli out movsb mov sbb pusha mov lea repz or sub pop sub outsl rcr pushf mov adc loop sahf test scas add or stos mov pop push sbb adc jo push lods sarb in and adc stos out dec jae or les cld in jnp ret mov adc sub test pop lret mov adc rcrl add mov sbb xchg aam aad adc sbb adc dec sub adc cmp mov mov cmpsb push pushf je mov xchg sbb or xor mov mov lahf and lcall adc aaa or adc pop cmpl push mov xor add outsl pop mov xchg xchg andl xchg jne in cmpsl xchg mov adc out inc xor cmpsb movsl andl mov adc mov packssdw adc cmpsl adc mov push test mov repz call mov push stos ja mov adc adc lods stos xchg sub imul movsl mov adc mov xchg adc xchg test and xchg mov cmc je mov mov sub push push add loope fwait mov push stc inc sbb fist mov xlat or jno icebp add jb fisttpll mov mov mov mov jnp sarl mov mov or xor adc arpl test xchg adc stos orl in or xor ljmp cmp xchg mov cltd out xchg xchg push jne jmp adc in loope mov or add cmp jns dec jns in mov inc jnp icebp in je mov add mov sub jge icebp scas xor adc jmp pop push xor test imul dec jno mov push arpl stc in flds dec mov push adc loopne cmpsl jne lods add push gs movsb stc mov sahf add outsl es mov fisttpll xchg test adc push dec imul push loope rcll mov adc scas adc sub insl pop loope ret mov mov mov sbb testl scas sbb xor mov adc mov mov add mov mov scas popf sub cmpsl out icebp in adc mov mov jno xor push and cmc lock or cli mov mov add xchg adc adc adc (bad) push mov add mov aaa ss mov push int3 std mov push adc adc loop mov lea mov add stos adc sbb mov or and and mov adc mov adc in lods movsl push add icebp test push popa mov jno mov jle (bad) adc xor sbb lock sbb adc stos mov adc movsb fild xlat add mov repz (bad) mov xchg cmp rorl jl dec pop pop out adc dec mov pop mov mov loop mov jo pop fwait mov mov mov pop adc sub mov adc push add sbb incl test add or mov adc adc add xchg and loopne push jae jmp test sbb aaa fwait leave or fwait xchg or mov mov out lods int3 adc scas movsl mov mov mov push adc cmpsl mov add pop xor jg pop adc xor gs mov adc leave sbb adc hlt jmp fs jno popa xor cltd lods add (bad) sbb push mov dec mov and sbb clc outsb push or cmp pop (bad) and sbb add adc repnz or loope popa push dec outsb sub mov mov or adc cltd cmpsl adc jno xchg in adc xlat icebp imul or or or adc mov lcall sub xor mov jge icebp repz or rorl adc js adc dec sbb and jae mov add mov sbb mov cmp incl loopne,pt pop pop mov lock mov testl jg,pn mov scas cli and mov movl lret xchg in dec into push stos adc sub pushf dec ja adc sub mov adc stos (bad) jne adc push adc popl in cld inc sbb fsts adc mov stos fcoms in lret movlps adc push gs push add xor add (bad) push adc push jbe or subl mov xchg jl (bad) mov aam sbb push adc mov js icebp arpl add mov ljmp cmc xchg into xchg xchg xlat lock lcall add jmp adc adc cmc adc push movsb sbb lret das outsb leave repz (bad) repz repz repz mov cmc sub mov iret push scas xchg repz mov shrb movb sbb or (bad) xlat sbb bndstx sbb sbb push sbb out pop mov repz div (bad) dec repz rep in xchg pop xchg pop pop mov sti adc cmp js adc sbb insl sbb scas pop adc cmp movsl push adc dec adc insl or push xor xlat inc sbb sbb sbb out mov adc icebp adc movsl sbb scas fistp sbbl cli je ja sbb sti dec outsb stos rep dec repz mov fimull cld dec rep enter adc push daa jne sbb sbb sbb int3 sbb sbb sbb sbb jae repz inc repz and sbb repz mov (bad) lahf repz shrl mov repz repz push hlt push sbbb sbb (bad) jl sub adc jmp lret jns sbb sbbl negb xchg mov push or push addr16 insb sbb sub push add mov sbb sub cmc mov aaa adc adc les pop lahf jmp ljmp call xor adc adc pop adc adc adc adc adc xchg push popa adc adc loop add adcl pop adc icebp cwtl hlt pop jmp jae pop jbe pop aam pop stos lahf pop adc pop cltd jge mov inc cmp cmp fsts pop push inc aaa push rorl push test push mov push push fstl fist aad xchg notl icebp mov sbb pop repz adc mov jno pop pop lds cmp pop ret pop fwait inc test aaa rcrb mov sbb in dec sti mov idiv adc or cmp repz sub dec adc stos adc adc adc jo sbb sbb sbb sbb gs repz inc xor mov sbb (bad) xchg mov adc push adc or mov adc push lcall int3 sbb sbb adc (bad) pusha cli repz push xchg ss call lods add dec cld add add push jecxz icebp pop push xor stos icebp repz repz rep adc jbe repz test cli xor mov das adc or xor mov imul xchg cmpsb xchg dec fwait xchg jbe xchg int3 push xchg ror xchg das out xchg mov xchg outsb inc xchg mul xchg daa xchg movsl xchg sub jmp rcrl notl jg adc adc out test adc adc adc icebp pushf adc cmp aam or ljmp lret repz rep (bad) rep add (bad) (bad) mov (bad) adc rcll (bad) sbb xchg aas fsts rcll mov in repz mov cmp xchg cld mov repnz add mov mov sub (bad) pop sbb cmp aad adc add adc icebp cmp mov jecxz push add jno movq mov mov stos cmpl mov adc out sub cs ret sub add add cmpsl shrl fistl sub mov fnsave xorl sub cmp push pushf loope xor mov adc or bound ds insb mov sbb jp push jecxz cmp or cmp sbb mov sub je js or cmp push cmp or xor mov sub jne push adc jle adc sbb xor mov push xor add outsb pop adc repz and daa push add or add or push add outsb cmp add repz xor adc xchg cmpsl add inc adc mov je push adc sub cs xchg or repz repz jbe mov xchg cmp xchg sti outsb xchg mov xchg cmp xchg mov fwait stc loop push imul mov out mov adc (bad) jecxz push jne sub in mov (bad) out xor mov pop ds pop stc popf pop mov pop mov mov out adc jecxz icebp mov loope adc push adc push xorps cmc mov jne add add push cmp arpl xor std call iret jecxz add sbb cmp push daa pop adc stc mov push inc cld adc mov ret mov push lea mov xor fistl cmc ret adc adc adc (bad) adc loope push fs and loop push jge cmp jb out mov adc arpl adc lods mov or insb scas adc test mov pop das int out rcll stos fist outsb fistl sub pop jmp pop scas lret pop xor frstor stos lahf add mov jp xchg cmp jecxz adc sbb out daa sbb (bad) loop push jp and out stos push jae xor js es loope push gs and sbb sbb fs jmp mov repz push mov loope push scas jl out je in jle stos (bad) das insb repz adc sbb sbb scas sbb das je adc xor repnz repnz adc scas hlt adc mov shrb pop mul push or mov push push push cmpsl push mov push adc add mov adc adc out add mov pushf jle and mov add push mov push ds push loope mov lods adc adcl mov and scas in inc adc sub pop pop adc pop and insb leave or push jle pop sahf adc add jecxz adc pop xorl xor lods add mov xor adc fwait stc movsl in push imul mov sti push mov cmp cld fs mov adc adc push xor pop adc sbb loope push cmpsl fwait mov add jb divb stos dec push mov push and push lock mov mov (bad) xchg xchg adc fwait mov (bad) jae adc adc sub lods icebp adc push adc sbb adc cld in repz stc adc adc mov lea lods imul mov mov add mov or pop test pop mov pop test cmpsl pop jecxz push adc or mov cmpsb add inc jnp loope push scas or rclb rcll (bad) cmp lahf inc fcom or push les xor sbb push int sbb bound repnz mov fwait popa mov (bad) sub (bad) repz mov xchg mov xchg and xchg clc push jp xchg cmp xchg stc fs mov xor cmpsl adc or mov push imul inc adc call in mov and in add and push gs addr16 cld jbe mov cmpsb push adc loope push lods fwait mov lock repnz rep sbb das sbb in xchg mov nop add adc adc sbb cmpsb aas sbb cli sbb pusha xor nop add adc cmp cs movsl (bad) adc xor repnz mov test push push add pop mov cmp adc xchg movsl mov repnz std adc shlb ret xor mov xchg adc add add push and push loope push movsl (bad) push popa ret push lods mov rcll je mov push es jmp adc adc jle in pop call xor adc add adc sub notl pop test inc adc das sbb sbb sbb sbb sub jle sbb sbb ljmp adc or mov push xor lods pop fwait fs adc (bad) repz repz xchg addr16 adc mov aam sbb fwait push daa jecxz lahf adc sbb adc mov xchg adc test sbb mov xchg mov xchg sbb mov (bad) shr repz repz repz rep fdivp aaa ret push out movsb sbb xor adc bound lods data16 pop fwait and jo jle push in cld xchg mov or adc insb adc push test aam sbb sbb sbb sbb adc pop jae pop jge lea cld jl mov cs divb jb mov mov repnz inc adc mov sbb add add loop mov add add jecxz dec push movsb push push sbb sbb out push push push mov push mov push negl mov push mov push movsl daa push arpl or scas movhps mov xor adc and mov lods adc in loop mov adc repz xor adc add imull inc fstl fcoml sbb popf jecxz stos lahf repz repz repz repz rep fpatan popa (bad) stos popf repz fcomip out jle lods (bad) push repz repz rep jp outsl jl sub xchg adc adc js stc bound cmpsl data16 sbb out xor (bad) repnz adc ss mov clc adc mov add jecxz xchg adc loop push mov ss dec xchg mov adc pop adc inc adc adc push adc push adc pop xor notl test sub hlt or mov adc xor cmc dec adc adc pop adc pop adc and pop xor xchg mov scas sbb sbb pop fwait adc xor sbb push mov (bad) adc mov lods es movsb lds js pop and pop jecxz pop movsl fstl popa rcll bound daa lret pop out pop movsb outsb into insb add jecxz iret jae push push addr16 adc mov fsts loope adc adc je ljmp repz pushl mov xor xchg mov adc pop sbb sbb outsb outsl sti xor je mov mov shlb sub push iret adc pop pushf jns cmp add add jecxz lret cmp and and out mov repnz adc adc mov cmp adc pop adc mov push mov sub dec adcl jecxz mov repz repz repz repz xchg repz leave xchg stos dec xchg aaa rcll out movsb adc push xor rep sbb in xor push mov loop das repz repz adc push ljmp adc jo (bad) jp scas xchg adc adc adc jne pusha pop cld insb add dec push cs push mulb bound push adcl mov loopne loope push push out mov sbb push sub cmpsl ds add push imul xor adc sub out adc lea adc test xchg mov pop into imul test jmp jae into adc pop push loope cwtl xor or add fdiv push test scas test sbb adc leave mov adc mov out push adc mov mov dec mov xor xchg lods movsb adc fisttpll adc bound adc pop add xchg mov pop adc fldl jl mov and inc addl sbb int loop repz unpckhps xchg adcl aaa adcl push pop mov or (bad) or pop sbb pop (bad) or adc repz or aaa adc ret icebp mov mov add repz mov es adc mov adc sti aam adc cli mov sbb jmp pop adc adc lods cmpsb adc cmc add mov jl xor fwait adc out sbb stos mov or insb add lcall jmp sbb push add jmp sbb add cmp or mov movsl sti adc mov repz icebp add stos js out shl adc push scas aam cmp mov adc hlt inc ljmp adc popf xchg mov dec fistl (bad) movsb inc adc mov add scas imulb test popf mov mov jne inc adc mov xchg adc adc mov (bad) mov adc mov xchg adc adc sbb adcl sbb or mov adc test movsb dec cmp lret mov cmp cltd cmpsl mov rclb stos dec flds push jp sti fisttp adc stos adc mov push adc and enter aas in rcll dec arpl cmp stos pusha add cli rcll xor or lods repnz scas stos aas cmc adc adc dec mov adc rcll xor cmp test adc fwait leave stos ja cmp aam mov mov cmp jecxz xchg adc mov mov fild mov test or fildl adc je mov inc adc stc adc bound mov scas xchg adc push jecxz lahf adc adc mov nop or xchg (bad) adc mov xor adc mov jle adc mov adc icebp roll xor adc (bad) je lds adc sbb jae adc sbb adc into add xor cmp inc cmpl test push add sbb xlat push jbe loop popf xchg adc jmp adc sub lcall jo vmovlpd add int3 jecxz mov xchg xchg sub adc icebp mov jno sarl icebp outsl xor push adc xlat push sti bound stos push adc adc adc js cmc adc jns aaa mov mov jb adc jne xlat rcr lret hlt (bad) adc sbb dec rcrl sbb mov xchg adc adc adc lahf fistl mov test (bad) aaa mov stos jo add rcrl mov adc sbb push or push push test xor scas or pop (bad) mov add push pop adc adc mov sub or iret adc mov mov fwait shrl xchg scas ljmp add xlat and add jb,pt sbb push ss adc lods je mov push and sbb scas sbb mov insl repz out aaa adc popf adc fsubl xor mov mov push xchg faddl adc stos add sub call clc mov jns or jp out xor mov sbb pop sbb lret int in sbb cs repz inc repz jecxz mov repz repz sbb inc (bad) repz lret repz test in xchg ds dec popf shr sbb sahf cwtl adc std adc lret shr mov push adc enter push fld push add test (bad) cmc push pop rclb push push lods xor hlt push rcll test pop scas icebp pushf xor adc add and divb ljmp dec xchg (bad) sub dec xchg push scas sarb adc adc adc pop adc adc jne sbb add add add and push test loop jo push sub inc pop push in push adc jnp pop orb negb pop imul fstpl pop add cmp sbb sbb sbb sbb sbb sbb sbb jge repz repz repz mov pop push repz xchg repz repz repz mov xchg pusha xor sbb call sahf xchg pop cmp pop outsb int rolb mov inc iret add jmp les push call out imul xchg mov add push add jecxz dec push ss mov sbb stos mov push pop pop xor push test in mov or sbb aaa repz add repz repz std repz repz rep cmp cltd xchg sub xchg dec fsts aaa xchg inc dec xchg xor ficom xlat adc pop push pop inc push push xchg sbb jg xchg jo xor sbb sti (bad) je jno or les sbb fistpl das out sbb mov sub sbb mov lret int3 out xor test xchg push icebp xchg aas or test xchg iret adcl adc pop pop fsubs std add add and and add add add add jle inc mov add in jp xchg mov ljmp adc adc jecxz dec pop adc call add pop adc pop pushf icebp pop cmpsb mov mov pop and pop mov pushf push add mov inc adcb push test adc pop outsb sub leave (bad) sbb sbb bound out mov or call inc mov add adc pop scas out add adc and push jb push jl push fwait inc push jmp mov sbb and pop or pop or aaa and push mov repnz notl adc adc adc adc ficompl pop int pop xor pop push pop xor jecxz pop sub pop ds out adc xchg and push cmpsb sbb imul cli repz (bad) repz lods repz xor xchg or cwtl add daa fstl fildl sub xor mov sbb jne add adc adc and adc fistl rcll mov aam sbb (bad) xor aad adc repz mov add test cmpsb mov loop repz repz stos repz test cld adc inc roll cwtl push je xchg cmp pop add mov pop adc push fwait test push lock ljmp or fsubs adc ds jg mov repz fs outsl lcall mov mov aas or jno mov sbb mov cwtl ja aaa fcoml aas mov cltd mov add cld setge adc loope mov movsb add or or adc mov mov lea or pop mov adc cmpsl adc pcmpgtb subb add insb mov xlat out pop jns jp sbb or adcb ljmp add xchg outsb mov jb fcomip cmp pop adc inc adc inc fisub aas lods jo pop fmul repz lcall ja enter adc xorb pop mov ja or mov rcpps mov sbb data16 adc or scas dec dec xchg adc movsl sbb xor jnp pop xchg lock jl sbb inc (bad) mov jle mov xor lcall adc cld int pop mov xchg xor jp sbbb pop and mov adc inc and adc mov push push pop mov xor dec in xchg xor cs nop adc lods jo sbb (bad) jecxz sub std mov adc fwait push int out mov xor outsb pop mov push pusha lods sub in rcrb fmuls adc aas add cld lcall fstpt adc mov fisttp add mov mov mov or (bad) xor add pop hlt xchg mov sbb adc clc sub repnz call add add stos adc adc out or cli aaa adc negb clc adc lahf inc push outsb pop call scas test xchg pop adc (bad) aas jo mov sbb mov add inc sti cwtl jne mov adc out adc (bad) push add pop dec sub adc xchg jno into mov or gs dec cmpsb xor or mov xor adc sub adc (bad) xor dec xchg or inc mov or mov cmp cwtl push mov mov outsl aam popa mov je in mov outsl lock int3 fisubr xor sbb pop rcrb pushf fcoml jge loop,pt or in neg imul lahf push icebp xlat lcall add push wbinvd aam ljmp mov popa mov fild data16 in movsl adc dec sub repz daa pop or lea sahf lods fs push or mov lret fstl (bad) xor ds in and add dec dec int scas mov adc in mov pop (bad) adc pop push mov or mov mov xchg mov repz aaa test dec rorb rol lea cmpsl inc xchg lret ret dec cmp subb jle adc cld push mov stos or pop fcmovnu push (bad) stc adc xchg dec daa test mov lds (bad) lret int3 push and dec (bad) jne (bad) adc dec fxch or or adc lret aad popf or jne dec pop leave fs mov lea scas addl fs xor insl aaa mov mov adc cmpsb sahf push js test insl xor xchg jbe xchg adc add adc cli or cltd lahf xor pop push jl add add imul fsubrs sbb stos ret popa sub xchg (bad) push mov mov adc icebp aas jns xchg mov adc mov pop push adc aaa add jmp jp adc xchg push xchg xlat jge (bad) xor mov mov adc push lock pop or sbb push adc mov xchg inc test adc testl daa sbb icebp leave jns jb movhps test inc add in mov jnp je and mov dec adc xor popa adc or sbb pop xchg push jo imul fisubl adcl xorl aas xor xchg imul fisub pop outsb adc or dec mov inc fs icebp pop pusha setl mov adcl pop fcoms adc xchg aas pop mov xor cmp jnp cmp in fcompl popf nop pop je cld mov xchg push and adc popf lods pop jb xlat icebp pop jae adc and sbb xchg das xor lahf adc (bad) rolb stos repz or rep bound lret out int insl (bad) sbb or (bad) mov push das dec and or push cltd div adc jmp and mov jge std push test push cmp dec add je sbb push inc inc adc adc or mov pop xchg (bad) loop mov daa xchg jmp fs sub adc add adc pop shrb xchg sbb cmp cmp pop dec mov adc jg adc das lods xor adc cmp pop adc sbb sbb add out gs jg mov add pop xlat iret push sbb adc ss xchg movsl aam push je sbb and or in (bad) sbb js push mov (bad) loopne sub mov adc push sbb mov or cmp add adc lods fild cli in xchg mov add repnz push adc inc adc add mov xor rclb movsl sbb mov adc or inc scas stos add jl mov mov mov adc fwait adc push add inc add push add cli hlt adc scas sbb xchg or loop add cmpsb mov adc xchg mov push xchg pusha adc cmpl repnz add push pop add inc adc ljmp cltd adc fcoml mov or cli outsl adc mov push xchg pop mov fwait xor sbb push add mov cmpsl repnz mov fcmovnb pop push fwait push sbb add and lock adc push pop loope dec pop or pop dec pop ficoml dec pop imul es xor cmp push pop cs lock jecxz adc jecxz adc jecxz repnz xchg xchg xchg and xchg inc push es jecxz pushf xchg xorps xchg fcoms xchg imul xchg mov adc add repnz scas pop nop pop xlat pop jae popw jno mov outsl pop das pop gs dec pop ja in pop insl pop add imul imul pop imul pop fcompl pop into pop cld pop les pop ret pop rcrb ret pop rcrb ficomp pop aam dec pop (bad) pop out pop mov lods adc jecxz adc and push mov xchg add xchg stos push mov rcll xchg bound or adc adc adc add adc add adc or pushf add adc add adc in adc add push dec pop loope test pop loope fs jecxz (bad) pop std pop sub negl pop in jmp pop pop pop pop pop pop mov pop pop pop arpl pop pop sahf pop push pop cmp dec pop pop pop pop pop cli pop push das adc mov loop repz notl push sbb xchg xor adc loope daa icebp jbe mov das repz push sub in xchg sub out pop sub jmp sbb lahf icebp gs lea in sbb add xor out adcl mov sbb xchg icebp je pop test in jo fwait (bad) jp inc std loop repz push jp sbb xchg jl movsb sti sbb ret pusha icebp arpl pop jle cmp push jecxz adc adc jecxz adc jecxz adc jecxz adc jecxz adc jecxz adc jecxz adc jecxz adc jecxz adc jecxz adc jecxz adc jecxz adc xchg ds mov xchg call push mov xchg fist xchg jo movsl xchg jge push xchg nop mov adc add push pusha xor or lods push je sbb and mov adc or jecxz add pop repz adc push push adc push mov push lods ljmp sahf adc add sbb add int3 add add add add add add add add add add pop push sbb add incl add roll out std roll pop adc add adc icebp movsb push hlt adc add scas push xor and mov or or test push inc in jl xchg adc inc add xchg adc dec push das adc adc aaa adc mov cmp mov push add mov clc adc aam nop inc add pop imull fdivl add stos push out adc push push xor fs dec push das dec push cmpsb sub inc push daa sbb jb,pt inc push cmp adc cmp (bad) adc repz and and daa lea movsl adc adc mov inc push and push rorb das sbb cmpsb nop push push adc aaa add mov push cmp mov mov mov ja les add pop daa add ja mov adc idivl xor mov push xor jb dec push das push xor inc push daa or mov inc nop or stos adc push fdivrl xchg aam add pop aaa add pop scas xchg loopne call fdivrl addr16 popa mov ja jns (bad) jnp idivl jae or cmp imul mull fidivl (bad) dec (bad) mov (bad) mov mov int3 in ret (bad) cmp dec fdivs mov aam stos mov movsb fdivrl cmpsb dec mov mov idivl fdivrl scas dec test add sub mov sbb adc (bad) paddsb cmp sbb notl in adc in mov jecxz cmp dec out add mov mov sti in cmc mov jmp cmp dec out mov stc mov mov jecxz pop mov push fdivrl push dec push mov inc mov (bad) dec mov dec in inc mov pop fdivrl pop dec pop mov dec mov (bad) push mov mov and and mov aas fsubrl mov cmp cmp sub mov cmp mull in popf mov xchg fdivrl xchg dec xchg mov orl mov fdivrl cltd dec lahf mov mov notl fdivrl bound mov jb jo (bad) jle idivl mov insb fdivrl push pusha mov jp js (bad) data16 fs fnsave rorl mov rorl lret in lds (bad) mov leave mov mov shr lods mov mov cmpsl fsubrl or mov stos mov scas in mov movsl mov mov jae lea xlat loop rcll adc scas xchg int3 loopne movsb push ret mov cli adc mov insl aas adc cmpsb (bad) repnz sbb adc stos enter mov adc mov mov mov lock dec adc stos dec loop or movsb loopne adc push adc lods mov add mov loopne add lcall repnz adcb mov lock add sbb mov mov or test aaa sbb lods cmc add mov lock (bad) mov test sbb mov mov pop fildl dec mov movsl dec lret dec mov mov push sbb mov adc (bad) push and or mov mov mov cltd dec stos pushf xchg aaa mov dec lods sahf xchg aaa mov dec scas cwtl xchg aaa mov dec mov xchg aaa mov xchg icebp mov ja aad lods aad add cmpl lret mov mov mov scas mov mov aad mov mov arpl mov scas adc add dec cmpsb pop xchg pushf stos mov inc clc xchg aaa stos repz mov xchg aaa lods std dec mov xchg aaa scas decl push xchg mov adc fcmovnb dec mov push fcmovnu dec lods xor aad mov rolb subl sub (bad) mov aaa lcall adc (bad) fcmovnbe dec mov mov nop shlb mov mov mov js stos outsl mov inc fcoms lret lods fisttpll fcoml or daa mov xor mov mov xor push jae adc or jnp mov cmp mov arpl cmp stos pushf popa xchg mov rclb jnp adc jecxz mov mov sbb or sbb mov jnp push movsb (bad) adc ja push mov and mov xor adc repnz jae xchg mov or outsl adc xchg je sbb cmp cmpsb imul add or imul (bad) and addr16 fwait cmpsb lods mov mov popa xor mov adc xchg mov adc sbb mov push xchg mov hlt in ljmp loope test jb adc mov mov mov adc adc cli adcb mov sbb test and adc adc cmpsb arpl mov sbb jg xorl cmp mov xor adc daa inc pushl mov xor inc dec mov mov addr16 arpl out arpl adc cmpsb xchg pop or test push aad mov mov stc mov cmp adc mov sbb idivl push push nop mov cmp sbb mov sbb sbb dec mov aaa out mov mov outsb add add and sbb out mov sti sbb sbb mov sbb movsb pop mov lock sbb dec nop xchg movsl and adc repz divl or pop or or or or inc adc nop push addr16 adc dec mov mov jmp pop mov mov add cmp repz lock sti aam adc mov add adc pop mov mov add push add and fsts xchg mov mov add adc sub adc mov push pop adc ficompl cmp adc pop adc adcl add mov adc mov adc jne adc sbb fidivl stos or pop push mov add xchg cmp mov adc andl adc mov test adc (bad) pop adc mov adc pop js loope call bnd adc (bad) cmc cli repz lea clc adc in pop js mov pop repnz scas mov bound in into popf mov mov neg cwtl mov mov cmpsl lea mov pushf mov iret outsb or mov lcall adc mov test adc and cmp bound mov (bad) mov sbb adc pop xorb mov cmp add push ret mov mov mov ret mov xchg add test fstpt adc and xchg (bad) xor pop daa push mov (bad) out cwtl ss adc mov mov cmp test cwtl cld cmp adc sbb and das lea mov out movlps xchg nop and adc push movsl mov mov addl cltd mov add shll mov aas xchg or pushf test jne xchg mov subl and adc fwait stos mov adc in and jecxz icebp add adc push mov or lods add adc add mov push or out mov xor xchg adc adc scas xor pusha sub push and xor adc je sbb cmpsb adc mov test add cmp mov scas add and cmpsb js out sbb mov push (bad) cwtl cmpsb jecxz xchg mov pop pop mov or pop or lock repnz mov push stos mov adc les clc push std xchg stc movsb or mov adcl js or nop nop pop adc xor push mov xchg sub or nop mov adc mov push xor add push stc adc cmp pop sbb or arpl pop adc mov add sbb repnz adc add mov xor adc xor add adc or or adc (bad) mov mov pop mov sbb xchg movsl mov mov icebp stos loopne push mov (bad) jo adc push adc loop adc adc insb in jae jo adc in push (bad) mov ljmp xor mov call in (bad) pop push jl das adc shrb sbb lea adc mov adc jecxz cli test adc adc cmp adc adc mov mov adc fldt fwait and lea add fcomip adc mov pop lods xchg mov icebp xlat mov scas into xor sub daa test jmp ret adc adc xchg mov ret sbb mov or fcoms (bad) adc cmpl sub push lods mov enter adc adc popf mov cmp repz or cwtl sbb add add mov xchg pushf in add add cwtl cmp mov mov mov adc (bad) das inc sbb repz cmp sti add mov add cwtl scas or xchg xchg cmp andl sub add mov mov dec mov stos jns sbb scas clc and push test fwait add add rcll xor adc sbbl repnz pop adc mov adc and mov loope aam xchg ss mov mov pop mov and loop das and adc adc sub mov mov mov xchg xor inc adc sub test and lds adc fnstenv sub scas xchg sbb cmpsl add test sub sahf das addl popf adc push sbb aas aaa call or xlat sbb or daa or stos cmpsb inc lods jmp adc mov adc pop movsl mov fwait adc mov or mov (bad) xor sbb mov scas sbb xlat or in push pop rolb jo adc les inc and adc movl adc push cmpsb xchg mov movsb mov movsl add add rcrb mov push pushf scas sbb or (bad) test ja lahf cmp pop mov or adc stos push enter lods mov scas or push mov mov add scas lahf cmpsl add add orl repnz mov xor mov movsb lds test test mov adc fisttpl cltd and inc int3 sub ss adc sarb adc xchg addr16 daa add jno outsb push (bad) adc out mov call (bad) inc adc add hlt push add add add adc cmp movsb add adc pop add or fwait pop sarb adc adc xchg sti enter xor sbb sbb pop xor xchg mov xchg repnz add adc out pusha adc sbb adc sbb out popa push pop loop inc add xchg lods xchg jns fcoml and add cs push jmp sub push mov xor cmc repz xor and sbb sbb push push aam sbb or or pop (bad) or mov std inc mov inc ss jmp or jmp adc (bad) sbb sub sti out adc loope or ret adc xchg pop mov jbe mov push add xor lcall push adc pop xchg mov or xor repnz inc inc mov push push adc push mov adc ljmp dec sbb push sbbl mov sbb or stc mov mov mov jmp subb jl inc sbb cvttps2pi adc divl repz add lahf add stc xchg hlt sbb sbb decl icebp xor fmuls pop or lods movd add movlps push notl fisttp cmp inc or js xchg adc sbb sbb loope inc or adc inc repz stc adc aam sar add adc lock out jle lahf sbb pop adc mov lcall pop or lods cmp pop push pop xchg add loop pop inc jg mov adc pop xchg push sbb sbb rcrb sahf movsl inc xor adc add add mov sbb int3 push hlt push pop adcb push pop adc dec leave xchg pop data16 in popa fist adc xchg push jb cmp adc adc in cmpxchg sub cmpl adc mov or sub add icebp mov cmc xchg fist adc push mov xlat sbb adcl add push lods pop mov pushf mov push or mov push add lds jns push imul adc dec ret push or pop or or adc or adc adc cmpsl adc in mov jecxz jmp or adc rcl push sbb (bad) adc incb add sbb sbb (bad) pop adc mov or into push inc ret movsl adc xchg push xor stos adc or adc movq in lea pop adc fdivrs adc jmp sbb add pushf sahf mov add sbb pop push fcomps pop adc stos lcall xchg add sbb sbb lahf adc adc icebp (bad) in sbbl sub push mov push adc rclb mov lods cmp push adc pop push aam sbb push sti ja fsts jl mov clc add incl xor fcoms repnz ja ficom idiv add mov stos mov adc cmp or push or push or sbb ret sbb mov pushf mov push adc add pop (bad) add and cmp push sub roll fdivs xchg fwait sbb lds pushf adc pop pop push xchg add mov xchg inc adc test aam adc cmp rclb sbb mov rorb push test repz or or adc pop mov pop lcall or add imul xchg in inc inc xchg (bad) sarl adc adc mov adc sbb jnp xor push adc shr repz or setbe push lret sbb sbb mov or adc or movl or mov jns adc adc pop mov cli pop pop push xor fiaddl adc rorl roll pop push fadds sbb adc xchg sbb sbb or or hlt repnz jle adc dec mov mov into pop xchg leave push ljmp add or pusha pop mov mov sbb scas push mov mov sbb jg pop lcall movsl or jne popf rcrb sbb pop psubq cltd add pop add add xlat pop mov push mov in or xchg or aas out or cld popa or pop push dec or add pop enter or dec repz adc lods add add mov jne sbb adc xchg ret pop lods add mov mov mov push add popf pop sub inc adc mov pop push cmpsb mov or repz pop push push mov repnz push les sbb push mov xchg inc sbb cmp repnz push cmpsl adc jmp adc std adc add xchg add nopl ljmp jae (bad) jmp push adc lds (bad) push inc inc adc or adc adc or btc repnz adc add xor adc adc pushf push adc or dec xor adc aam push rcl or add pop stos push adc je pop xor fsubs adc mov push mov xor add add push ret add mov add loop inc or mov adc or pop jp flds sbb repz sbb sbb jmp mov add mov jmp dec adc sub or ret addb mov (bad) cmc and enter fstl adc int push push out add jp adc push fistp cmp in or rolb ja add inc and daa dec and push add push clc mov mov mov test rorl add sbb popf jmp xchg pcmpeqw xchg xchg sbb push pop push mov xchg sub scas lds mov lods and inc dec leave clc adc repz mov adc mov lock xchg insl adc repnz (bad) adc in and stos xor scas mov adc adc xchg add and adc xlat or mov scas rdtsc outsb adc add pop popf cs mov cmp in insl rclb mov push add sub aaa insb int xor repz jno sbb pop mov fnsave pushf mov inc mov and adc cltd add adc push aam mov or mov add mov fwait adc mov test (bad) mov aas adc mov test adc lahf adc loopne adc jne addl aam xchg lea cld or push int add leave adc xlat (bad) sbb std fistl (bad) adc sub aam cltd or adc (bad) or sub or adc or adc adc lods mov mov xor jmp mov add mov pushf scas adc cwtl mov fcompl lcall and sbb je lods push (bad) or std out repnz hlt mov sbb adc test lret sbb mov mov repz push adc or adc movsl sbb push mov movsb decl mov mov aam add shr pop push push sbbl movlps adc lods inc adc stos inc or push mov adc rorb inc adc mov call xchg inc push xchg cwtl inc add adc sbb sbb adc (bad) out or incb push lahf cld dec adc push or rcll adc pop push fadd inc or mov inc or mov push add cwtl and sbb cmp xor mov adc ds pop dec add add xchg or inc adc mov adc cmp jno repz jg mov jnp adc mov les sahf adc xchg pushf jns mov jle push adc ja and push aam out imul push mov jge adc jo sbb aad sbb daa outsb or xlat outsl adc fldt add roll cmp adc (bad) cmp jmp adc lahf xor mov rclb js fcoml nop insl adc shll adc adc or mov les mov std mov movsb mov mov and sbb pop push lret or mov add adcl push repz clc adc ss pop or adc hlt add sbb add cwtl rcrl xchg aam das shr ret push push add (bad) leave pop sub and add and adc in or repz sbb xchg pop xor add push pop adc xchg adc inc adc mov adc mov sti mov mov test adc sbb sbb add and in adc es and lock in pop pop shll fldenv pop fstpt pop fbstp sub xor and aaa cmp mov sub leave adc inc adc dec test sti or sbb adc xor or cmc or adc sti or in sub imul inc push adc lahf and das push jne cld int stos push mov jno je les add inc add add push xor dec add (bad) sbb add dec cmp mov jmp or popa add add dec adc jae stc or arpl adc pusha push dec xchg cs xchg lar fidivr xchg sbb push or push and insb sbb (bad) bswap sbb scas mov sahf jno mov jns mov mov sbb xor (bad) femms cmp or xor pop repnz ljmp icebp inc lock sbb adc sub std lods shr das xchg and scas ror (bad) jne roll rcrl adc xchg xchg adc xchg lods push sub shlb insb jns int mov (bad) jae lods adc sub xchg movsb adc sbb adc pop mov and popa fisub dec xchg std dec adc inc jns mov sbb sbb mov clc lret jle jmp jge (bad) adc addr16 sbb sbb pop test imul iret pop out pop (bad) jno lods push xor mov xchg cmp in inc adc movsb aas add mov lret push clc mov sub rcrb pop or sbb adc loope inc das mov scas pop outsl popf adc in ret push lea gs outsb sbb or repz je and jnp adc lret call push outsb adc adc adc cmp mov mov adc sub adc ret adc hlt gs push pushf adc pop lahf pop sti fstps xor lods mov je adc aas cmp inc (bad) and out jb lea mov pop daa mov mov pop adc and and xchg pop scas cmp mov stos lea mov adc sub cli add out or jl lcall jo movsl lea jecxz cmp lahf adc (bad) cmpsb lea adc cmp and sbb xchg movsl sub adc cs mov ss xor xor and popf out fstl test lcall push pop or adc mov fwait xchg shr sub adc popl out sub adcl sbb and js adc ja xchg jo cltd xor xchg sbb into adc cmp cld xchg popf adcl inc out push xor dec imul enter or movd or add pop or test hlt sub dec daa ror bound addl adc aad (bad) adc lahf cmp add je data16 cmp adc or mov scas lea sub pop mov imul mov addr16 and sbb in fisubrl xchg sbb jmp sarl outsl test pop rcll xor xor jb (bad) repnz insb or push loope daa adc faddp fcmovb sbb push imul aas int rcrb sbb sarb mov (bad) pop mov cmpsb sbb sbb xor add and push xchg sub nop lret push imul sbb adc add adc in add daa mov sti adc rorl lret adc scas xchg push fsubrl lods pushf adc add mov lods adc cwtl mov xchg (bad) sti add out or add lret mov idiv lcall cli adc ret (bad) or (bad) repz into lds lahf xchg lret or aas cltd adc cmp aam lahf adc sub push xorl cmpsl and add add les mov lahf xor pushf mov es adc push xchg scas pop scas stos adc rclb sbb (bad) pushf lods sbb adc sbb mov ljmp sbb call movsl push sbb xlat mov mov aam add xchg iret mov push sbb mov mov adc mov lods adc aaa mov lea mov mov inc repz test xchg inc stos mov mov (bad) adc inc add mov movsb inc sbb test push xchg pop stos inc adc dec or xor push or nop pop adc mov inc xor add dec or daa push or clc push adc hlt push push sub repz fist cmp femms (bad) adc push add leave push push lahf repz dec add popl xor daa pop push adc push add and rorb mov add sub pop inc push les inc adc call sahf adc mov mov mov sbb js adc (bad) jo into xorb repz pushf xchg outsl mov push add imul pusha add aam insl add in or sub imul (bad) and mov adc fnstcw in js adc pusha adc aaa jno popf es adc xor jp adc add sbb pop adc (bad) adc or ja adc test xchg add xor push xor iret fstps push xchg add cmp adc sbb test adc incb add idivb xor hlt sbb div mov jecxz repnz add iret add sbb repz adc mov or or add xchg std and push xchg and sbb cmp sbb sbb sbb sbb sbb sbb mov lea mov shlb xorl adc cmp jmp icebp lahf mov pop out pop loop pop in pop loopne or and push fbstp push ret xor leave xor xor xor sub pop sub pop sub das leave push wrmsr push or push or add mov adc pop adc shl xchg adc inc add push imul sbb sub mov add mov enter inc and fstps or mov notl push cmp sbb in xor repz xor jmp jbe std movsl lcall xor adc adc aam adc movsl jbe rorb mov mov push outsb test pop fnstcw sbb and jns enter insb adc stos push push jb push repz jns add mov loop dec sub dec mov pop stc mov adc add mov add or mov into mov subl sub push lods sbb stos push das sbb add pop (bad) mov (bad) int sub scas mov or bound pop cmp repz in pop rolb xchg sbb cwtl sarb add ret repz mov push jbe jge jle lcall sub cmp lods std mov cld ret incl inc jp sahf push ljmp rsm ret adc mov dec xchg das adc ljmp inc outsl addl jo repz lret movnti mov inc fbld sbb or adc std sbb icebp addl mov inc dec push imul push mov mov adc lds (bad) int hlt outsl sub in repnz ss fwait adc aas dec jle in xor nop sar imul (bad) push lds rorl push xor aaa mov adc sti sbb fnstsw std push sbb xchg adc dec and fisttpl add (bad) idivl les in jle data16 cmp xor xor push lcall lahf inc adc mov shrl out adc int push jmp adc subl sbb mov push cmpsl xchg (bad) xor arpl dec (bad) pusha (bad) loope (bad) jecxz sbb mov mov out pushf sarb mov jp faddl std ret aas add sti leave fucomp in (bad) repz lea sub mov xor push mov fmull std (bad) push push mov pop in iret into jb icebp int adc cmp inc adc mov lods or or test shrl adc je jbe ss sbb repz push pop xor push (bad) adc lods xor push mov sbb pop xchg inc adc ds cmp stc inc sbb or cli shlb or adc adc mov jnp mov vstmxcsr sub pop je push pop bnd pop mov or outsb adc jg (bad) mov add scas lret test pop lods jo jg adc or stos (bad) leave in sarb popa loopne adc cmp cmpsl push add int3 shrb bound sbb and xchg iret pop mov or adc push popf pop jp xchg adc adc ja fsubrs xor orb or mov cli ja hlt test xchg lret xor adc das sub dec movsb adc adc cmp cwtl pop sbb rolb movsl lea or iret ljmp xchg scas mov and dec adc sbb lds pop pop scas push adc mov das mov cmp adc daa cmp sahf out sbb push add repnz adc or cmp aas lcall fildl fwait mov and mov adc xchg xchg sbb repz stos push imul int3 pop adc add add pop sub enter push and dec mov in push pop pusha (bad) mov cmp adc sbb mov pop ud2 jnp,pn rclb adcl sbb lods clc and adc sbb sub adc xlat stos mov sbb push lahf mov or out icebp nop mov fcoml xchg (bad) or xchg mov fwait or add adc popf add cmp push aam cltd sbb out adc mov rcrl lret test negl iret xchg or or push adc lahf add adc addl push mov sbb cmp adc adc (bad) xchg std pop pop dec adc movlps mov or push mov sbb rolb mov adc sbb mov repz lock push (bad) repnz mov push lahf in adc mov fldcw mov (bad) mov mov rclb mov stos or cwtl sub repz scas add and add mov or lods or or bt (bad) or xor mov adc inc or mov or mov dec or rclb xchg push adc push sbb cmp adc xchg push add pushf adc push add dec add lock add (bad) testb repnz or shlb int add jmp adc call inc push xchg fstl add shrb adc (bad) and sti push cmp lahf cmp sbb sbb pop or add sbb push push fwait outsl push imul insl fcoms imul jnp js insl push pusha fwait jno loop push jp jnp jo jge loop push jle ja push imul jge loop push outsb xchg outsl sbb imul push add loope sbb (bad) std push add adc adc adc jl dec xchg adc pop and add add xchg push sbb add add push sbb mov pop loope push xor and xchg cmp xor xor fwait ss xor xor push sub jmp and and xchg sbb loope sbb and and xor push mov arpl adc insb xor add rorb aam lds pop adc rclb or inc aaa push or popa jae (bad) hlt adc lds outsb mov mov sbb or push aaa push xchg sbb adc push in (bad) pusha popa adc cmpsb pop or xor out jns inc add xlat jmp adcl movsl add push fst adc adc adc mov pop and xchg aas pop adc ds or int3 cs or xchg (bad) mov mov mov jne xlat stos dec mov mov or adc adc jbe mov push rclb sub (bad) stos adc push cmpsb inc adc cmp jp xor sahf stc imul or pop repnz push jp sbb cmp mov cmpsb aas outsl pop cmp adc mov jnp xchg aam aam sub bound adc negl xor cmpsb ret dec fs arpl and pop adc sbb arpl fildll lret inc dec xchg adc in dec je jbe lcall (bad) outsb cmpsb iret ja sub lret xchg scas add dec nop iret jb (bad) mov adc repz in lret outsl (bad) mov rorb xor bnd inc push pop sbb (bad) mov dec rorl popf and mov mov adc (bad) jnp mov js add rcrb (bad) mov popf cmp mov test cmp xor mov mov popf adc inc push dec or mov mov lods mov sub push adc lea dec adc leave jecxz loopne loope adc movsl out mov data16 rolb loop adc sub out push out xchg pop aam adc insb fmulp pop rcl fcmovnbe add pop std cmp jecxz ljmp adc cmovl lret outsb hlt or dec cmpsl loope jmp mov out inc out rcrl in iret in repz repnz mov je pop ss sbb enter cs adc dec mov leave repz (bad) icebp inc testb adc jbe adc push push mov sub push adcl xchg adc jge jl gs (bad) add dec mov lcall cli fstps cmp fucomip fmul fstl xlat push pop adc pop cwtl std mov lahf mov pop adc ss (bad) into gs mov jmp fwait push jnp sub stos (bad) lret adc cmp xchg sub movsl push aas push cwtl or and adc sbb pop lods jns cmp jle adc add push fist fidivr out test (bad) mov inc (bad) mov test adc lods sub dec mov pop nop into mov sbb fwait lods stc adc nop adc into rclb jno (bad) aaa mov fadd adc lret aad or xor adc mov fwait cmp push adc jns movsl (bad) sbb sbb cmp push add test sub mov out mov adc add ret subl pop in pop test sub dec mov dec (bad) je xchg cwtl and xor or in adc lcall xchg or (bad) cld jle shlb pop sub stos xchg int3 sub pop push pushf cmpsb mov dec mov test push insl xor adc mov mov adc movsb push adc sbb out push mov mov adc xchg sti fwait insl sahf mov test mov lahf xchg lock mov sbbl rcrl mov sbb sbb mov cmp cmp xchg aas xchg xchg pop (bad) xchg sbb sbb xchg popf (bad) mov pop adc mov stos icebp mov mov mov loop mov test loopne xchg cld lods xchg repnz xchg imulb fistl adc lods adc test ret mov sub sub sti movsl jmp repz mov sbb sbb ja mov adc loop icebp sahf push repz inc mov inc adc adc inc adc inc xchg hlt sbb sbb sbb sbb sbb sbb sbb sbb sbb sti dec jmp repz das push repz add pop mov push xchg pop dec nop adc stos fwait scas test lods mov inc fwait mov jg sbb sbb sbb sbb in repz repz jle cld ja clc push mov cli js ret jge (bad) jo lds adc sbb sbb sbb sbb sbb in repz and pop ja add add repz insl repz mov fwait mov xchg push xor pop adc and or sbbb loope push add mov mov loop mov and or xchg sbb loope push xor xchg xor xor cmp fwait es xor xchg cmp and and insl push and and loop push xor loope jge cmp xor ss xor push movsl add add push adc xchg sbb enter dec add repnz sbb into cmpsb test (bad) test sbb popf (bad) adc adc mov or xor dec aaa jmp ret sub push adc cmp adc sbb dec scas cmp pop or lahf adc xor jne mov adc push xchg add sbb sbb or sbb jae pop or scas xchg mov cmp or popa dec or push insb (bad) bound adc cmpsb data16 popf cmp les mov js dec mov mov cmpsl popf adc std jmp sub jl cltd pop (bad) adc imul adc das inc stos inc push adc or ja lea pop inc ljmp iret add adc pop and lahf push hlt adc int lea add pop and sbb mov out sub pop xchg jp test pop adc pop les shrb cmp sbb (bad) loop sbb sub addr16 adc pop push push jg dec adc in add leave adc das add jae push subl test jmp cwtl repnz adc inc push cmp adc mov xor adc xor sarl mov (bad) xor cwtl pop push push mov fwait adc inc enter fiadd add lret jle aaa xchg push mov lcall mov pushf int3 and jno xlat mov sub scas mov push dec mov sub sti jecxz ljmp inc fadds jnp fs adc inc daa cmp lcall imul mov xchg adc inc mov sbb aas btr into lcall outsb enter (bad) mov ja push imul lods adc or std outsb adc add adc adc (bad) in addr16 mov adc push inc adc sub test adc mov push (bad) adc adc or ljmp and add mov ja push xchg adc jl addr16 lods dec repz fimul push fwait in mov (bad) rep lahf xlat cli jle movsb or enter sbb adc mov sbb (bad) jnp scas adc iret frstor arpl fs add mov pop stos mov xor fldt or sahf dec popa dec arpl daa add ja or enter aam popf pop loopne shlb ljmp popa ds mov fistpl sbb pop cmpsb cmp imul mov addps adc test mov sbb pusha or adc xchg outsl mov mov mov push mov or push jb or adc inc jae xchg movsb mov adc pop sbb adc jne jmp fld push rclb inc cmpsb mov repz sbb jae cmpsl cmp push sti mov xor adc jp jns pop mov jnp mov js adc mov add daa mov jg repnz int and adc daa dec (bad) ror cmpsl adc mov or jns mov lock sti in fimul je inc and test or gs (bad) xor movl mov jg pop out (bad) sbb pop sar adc xchg jo adc cmp pop add (bad) mov ljmp xchg jmp xchg fdivl test ljmp test jmp adc mov inc je pextrw adc push test in out adc iret adc push xor ss (bad) adc adc movsl mull mov movsl adcl sbb fwait mov mov lcall mov mov hlt adc out mov in test call adc xchg adc (bad) lcall dec mov sahf xchg push cmp loope push sub push adc in push adc mov scas movsl shlb mov push cwtl scas push pushf stos push (bad) test mov cld mov (bad) mov cld test lds (bad) mov aad pop sarl sub xchg and and fwait pop add (bad) jns pop mov pop scas inc pop stos inc pop mov sbb add xchg (bad) push and push sbbb inc push call rolb push aam push pop in pop lds rcll push sbb add push add push jecxz push xor loope push xor icebp push setnp add test add add add xchg jge xchg jo dec jno add clc outsl adc push ljmp insl sar pop pop shrl outsb pop lret ja iret jp jnp int jecxz push and in push cmp or fwait add push movsb add add or movsb adc pop pop pop (bad) add mov pop nop add xchg add in jecxz into push out push in mov adc (bad) fisttpll fild pop xchg xor push and sbb in push or xor xor cmp add aam and mov pop test pop mov sbb add hlt cmp lock repnz hlt and lock int and push iret xor xor fnstenv xchg sub push cmp push sbb sub add adc inc or sub add xchg test add or lea xor jb or adc mov push adc add pushf mov xchg outsl adc into lea push jbe push push lds adc push jecxz sbb stc inc adc in dec or imul push push inc push or add or adc xchg or mov (bad) sbb mov or or insl sub push daa cwtl lds sbb cmp xchg mov sub adc mov stc repnz sub push pushf mov scas fcmove cltd into ja,pt cmp xchg push pop add je pop sbb xor lods inc sub dec and into repz xor or or fisubrl fdivp fbstp xlat add test les clc ret (bad) test (bad) lock out and sbb xchg cmpsb std adc fs daa cltd lret cld adc jnp clc (bad) jp (bad) rcl jge mov jo mov add xlat fs out add in imul xchg lret (bad) into jne lock dec jge loop fs popa mov (bad) mov add in shrb call out fisubrl pinsrw sbb mov ljmp push add shlb adc pop adc notb lock shr aam aad (bad) fs xlat loopne std adc add sbb cmp out addr16 clc int3 jo (bad) jne jge cli sarb fcmovbe sbb (bad) xchg dec pop enter pop fstps lock jo (bad) fcoml push loop fs push (bad) lret ret outsl test jge mov add xlat out fcoms fldl2e fisubrl ret and data16 lret sbb pusha adc jmp push andl xchg (bad) jg popf mov adc adc xor lcall std (bad) adc jg mov popf xor or xchg scas mov lods inc in xorl test mov jge in mov sbb xchg adc sub dec icebp mov outsl xor mov push mov fwait cmc mov add (bad) repnz icebp mov lods aad ss jg mov pop adc cmpsb sbb ret nop pop iret or push add mov cmp adc into fnstsw mov ficom sbb add cmp (bad) in adc imul je int mov or stos push sub dec and fwait or pop adc xchg dec sarb inc faddl adc arpl add (bad) fs push lcall push xlat inc adc cmp pop sbb xorl aad adc dec int adc dec dec sbb or cmp (bad) jnp adc loopne in fcoms sbb adc adc jge jo add push sub mov iret adc xchg (bad) adc in cmp jecxz popf (bad) adc mov xchg in xchg adc push pop adc jnp rcrb movsl lcall in mov lods mov adc mov leave mov mov rcr out adc inc adc jne rcll jmp mov call sub inc adc sarb adc push push push outsb xlat bound adc dec daa push adc mov repz jg inc push push push aas push adc xchg and bound cmp daa adc dec aad mov adc aaa push mov mov popf mov mov mov jl cmc xchg outsb adc adc adc popf cmp sbb mov adc mov add test adc movlps xchg mov test (bad) lcall adc adc adcl call pop cli cltd pop (bad) pushf pop iret lahf sbb add fwait add sahf add test fisttp aaa xchg add lahf add rolb mov lea jp add sbb jecxz push mov mov mov fwait mov xchg dec push xchg stos push nop movsl rolb mov sahf mov out mov cld add mov lret mov leave scas add mov lret mov daa movsl and push and push aaa scas push xor pop add add adc mov mov movsb and push pop mov nop push pop xchg push pop lcall add push add dec add inc and push loop push fistl fist fisttpll add pop inc pop ret inc pop daa inc pop and cmp xor sub cmovns or or add inc add inc jecxz mov loope push mov mov xchg dec push xchg imul push lcall js hlt insl push lock mov jno pop jle iret jg sarl fnstsw fnstenv (bad) jge lret add jns cmp cmp cmp push aas js pop jge sbb sbb add pop outsl pop pop push mov loop push mov add mov add add sbb inc pop mov or cld pop mov add push jecxz dec push fsts push rcll ret sbb movl das or repnz or fwait sbb loop push add insb dec xchg and and cmp fwait ss and xchg cmp xor xor fwait ss xor xor push sub cmp and sbb loope sbb and and mov xor push push jp adc and arpl mov adc test adc inc cmp loope adc and pusha sbb insl push mov fs outsl push rcrb repz loop sbb repz pushf push test cmpsl adc sar rorb sbbl add mov xchg sbb add popf adc insb push adc sub ret xor pop test add and or jmp adc inc insb faddl mov mov sbb adc jle test loopne into jp adc pop pop sub xlat pop xor (bad) out jge adc mov leave shr insl push out and bound pop and adc mul mov push adc andb loop jge test sub adc jg cli repz fsub pop and fsts test inc lock into push or push hlt int3 ja adc adc cmp in add outsb loop insl iret dec sbb dec jbe decl scas adc outsl cmpsl ljmp iret imul test mov add or in fwait jne (bad) xor notl sbb adc push mov sbb cld jne lcall out inc jecxz sahf iret jmp push call jb jns adc data16 pop xchg aas pop jns sti mov cld sbb int jg adc jge popf lea ret or shrb or bndstx stos pop sub adc pop in fisubrl popa dec orl fwait iret cmp and daa pop xchg arpl pusha sbb inc popl mov inc test sub test sbb (bad) jae fnstcw and cmpl dec pop mov cmpsl lea sub or mov cmp jg and dec mov outsb lods mov xchg sbb stos mov or cld jns rcll mov push dec jb push xor xchg sbb ss notl or sub adc out or loopne inc jbe mov iret ficomp inc fsubs pop and cmp adc rcrb jp cmp cmpb dec jl (bad) adc jno sbb aas push mov inc popf or daa or or or imul sbb test adc cmp adc in inc adc (bad) ljmp xor test (bad) sbb adc lcall adc pop (bad) jecxz insb xchg or fsubrs sub add lock dec das jp adc adc dec mov scas fstpl scas or outsb rorb push jp into adc insb (bad) iret sbb nop or mov dec pop push nop mov xor push push (bad) mov push mov mov adc aam jnp jg fcoms bound xchg mov adc std idivb mov mov mov lcall cmp sbb mov pop xchg test pop test mov mov adc and mov mov sahf fwait cld add add outsb lahf fmull mov test or scas enter mov out cmp mov jmp outsb and loope out pop (bad) mov adc or or mov or imul mov cmp adc add add lret adc mov mov push xchg das push adc std dec addr16 mov popa int3 jecxz dec iret sub or mov mov dec and test lret pusha lret leave push in (bad) in or mov xor adc adc icebp outsb mov or sub mov cmp int3 adc lcall mov sbb pop lods aas out mov sbb in mov test or int3 ds jno sahf sbb mov fsubl adc mov or test mov adc pop xor mov xor movsb sbb jl dec mov push test nop cltd pop xchg pushf int jecxz dec push test in push loopne push out repnz push ds adc mov es sbb lcall ret xchg loop icebp or (bad) xor sti sub xchg mov xor xchg fmull xchg std or fwait loope rcrl mov adc xchg lods sbb pushf mov lcall mov hlt mov repnz push test dec stos push in lods push (bad) (bad) test leave lods adc test cmp cmp cmp sbb sbb or push mov loope push lods pop mov mov mov mov dec and push loopne push cld inc push repnz push testb inc mov add flds roll dec adc push aam push pop lds sub sub push push and push and sbb sbb rorb pop pop or fwait mov mov add pop lcall jnp mov clc jge hlt add jns out jle in ja call add js sarl xlat jo dec jno add cmp adc imul pusha adc pop sbb pop pop ja jp dec jnp adc test lods loope popf and movhps mov mov add clc add incb add or clc adc inc pop push movl add add sub pop sub pop and pop and add or adc loope push pop fwait xor xchg xor push fwait xor loop push and loope push xor push and loope sbb and and ss and xchg cmp pop fwait xor sbb sbb movsb lcall push ss invd dec inc mov or sbb add pop push xor jp or rolb or scas mov inc add int3 leave addl xor sbb xchg lret nopl mov sarb in pop add sarl adc mov adc and jb int add push mov add ss pop adc push push adc mov or lcall push push or sbb push pop xchg adc xor sbb mov or push push adc add (bad) dec imul popa xor pusha pop jmp jae push mov jno fild dec fistl iret inc and insb inc daa into hlt mov add iret push adc call mov mov sub adc fcoms sbb scas divl xchg xor lds fnstcw adc arpl (bad) add push aaa mov jl mov sbb cmp cmp popf icebp adc sbb adc cmp popf and cmovb inc adc or mov add sbb and adc inc mov push (bad) rorl adc xchg xchg out sbb mov or sbb adc out adcl (bad) cltd sub inc push cmp adc sub adc lea jno xor dec pop sub or adc sub push sbb inc or jno push mov adc sbb test nop cmp pop negb setp push cmp call adc mov repz push add movsb sbb std xchg and xchg icebp mov adcb xchg popf jge daa inc add adc leave cli jle loope adc inc in insl mov sarb and out or inc push movsb in test and inc hlt mov (bad) pop inc cmpsb inc inc xor sbb jmp adc mov push sti jb sar add push mov mov adc (bad) (bad) xor jecxz fsubrs adc enter adc jns jp xchg mov sub or mov sub push mov inc (bad) adc movsl xchg adc cli rcr jbe xchg mov adc dec mov xchg mov arpl ja adc jbe push adc cli (bad) iret bound jge fisttp std push cmp mov pop addr16 and jns adc pop mov adc std jg pop repz cmp pop adc ret ljmp aaa adc dec jnp mov subl shll adc jns cli popa (bad) test sbb pop add les or cmp cli jne std call inc pop ret mov adc pushf dec inc xor or iret dec enter loopne pop nop push mov insl icebp in iret dec mov and xchg adc enter repz push push js inc test push cwtl xchg lcall and push pop or pop adc (bad) add clc lds jno pop sbb fsubs add or fidivr std dec or and adc add int3 cld mov dec xchg shrl (bad) dec jg mov outsb repz cmpsl add lret xchg and cmp adc mov and mov mov fwait test and lahf mov pushf pop mov lea pop pop repnz (bad) mov call out add mov ret test (bad) lcall add popl (bad) mov das andl sahf push sub push aas cltd push cmp pop pop or pop pop test add mov popf add add add push imulb in mov add roll pop xlat stos pop aad push mov fstpt mov cmp adc mov pop mov adc pop pop mov mov loope push mov mov jecxz dec push mov xchg inc push xchg dec push xchg push push (bad) push push cli pop push cld inc push clc inc mov dec push pop push pop (bad) push pop lret push pop aad pop rcll fist ret add push add push add dec add push daa pop push pop push push add add add pop inc pop pop inc fwait scas stos loop push mov add adc xchg (bad) jo ljmp outsl pop in pop cli imul pusha pop iret insl sbb add imul ja fistpll xor aaa js xor xor rolb jle pop jg (bad) jae xchg adc jge fwait adc mov sbb add fwait or sbb add jl into mov push add sbb loope cmp xchg pop sbb fwait adc adc push adc xchg add es fucom xor xchg and and and and mov and and fwait xor and xor fwait xor xor push cmp sub (bad) xor lods push add pop jmp pop xchg add adc push call mov sbb pop adc sub adc add dec popa push ja add xchg mov cs fcmovbe adc ficom add mov add mov mov xchg jg sbb aaa fstpl add pop add dec add sbb dec mov mov hlt out push incb int3 scas push sbb xchg divl (bad) mov sbbl sbb jmp sbb adc push mov adc (bad) leave fild push sub mov mov jecxz icebp stos leave xchg imul dec (bad) adc stos in jne cltd outsl stc out inc insb jge adc adc mov mov adc jno dec push lods mull shl dec xchg cmp (bad) mov fisttpll or insb cwtl repz and sbb jns pop notl jnp in push adc out mov enter int lret scas xchg push push sub test sti rcl and pop clc out cmpb hlt test not lods imul ljmp mov cmpsl add add ss dec (bad) iret adc sub lret ja push and adc aas call rorl push xlat cmpsb mov cwtl dec js xchg stos insl adc push mov cwtl xor cmc out jp pop je adc repnz push icebp pop int or adc (bad) fstpt sbb mov xchg or dec pop adc into inc push clc cmpsl pop inc fsub jecxz xor adc idivb mov sbb add adc shr push or popa mov jne mov sbb pop repz add (bad) out jp je cmpsl fstpl repnz popa adc rolb or pop inc pop enter mov jmp lahf mov ljmp adc dec adc out stc dec add jno lods adc js adc scas dec dec icebp out add into das fldenv or sbb xchg fs inc xor mov std mov sar xchg adc sbb fs xchg xorb ficom fidivrl std (bad) jo inc or xor and add push js (bad) xchg pop (bad) adc fdiv (bad) sti jae arpl adc movsb pop push add std sub adc int enter cs dec adc (bad) adc inc push adc jl sti sarl hlt test fs ds and adc pop jmp sbb mov aam sarb (bad) test cmp adc mov sbb or lret ret into xlat lcall dec or bound data16 mov into jb xor mov mov cmc add sbb dec adc dec js insl ljmp add in pushf daa push das mov adc iret bnd jecxz sarl insb leave fdivr (bad) mov pop push dec adc pop lods loope mov fadd add jne jo cli aaa pusha adc adc ds xor sub rclb sub jmp test cltd je mov call test and jns in xor jge pop scas adc add mov xor daa adc xchg sbb adc push movsb jl outsl mov xchg mov xchg test xchg lcall adc (bad) adc mov cli sbbl hlt lcall repz rcrl test mov lahf xchg and jno mov add adc mov mov mov mov xchg adc sbb insl repz mov in mov mov fildll mov xor aaa movsl popf sti test stos repz stos repz xchg inc adc mov push mov adc push mov mov nop dec jno push adc adc adc push xchg cld sbb sbb sbb sbb sbb sbb sbb sbb sti push in dec mov inc xchg and xchg aaa inc xchg xor sub adc adc dec adc push pushf sbb sbb loop push cmpsb (bad) loope loop icebp nop imul pusha repz imul xchg out xchg loop xchg in xchg loopne xchg fnsave adc fistpll ret jp int adc jo cmp xor jns sbb sbb sbb sbb sbb sbb sti jo jno fwait outsb adc mov xchg add pushf pop repz sbb lcall or sbb pop mov adc in adc fstl adc adc lret sbb sbb rcrl pop cmp cmp repz or cmp jno pop adc add pop add or adc mov test lods je mov mov mov in mov loope push cld fwait repnz call sbb loope push (bad) in push lds das popf and sbb sbb adc sbb add jge pushf add mov push adc cld cwtl add arpl insb add adc sbb shr jg push icebp adc cmp or out jns push pop lret ss leave jmp les add jecxz dec mov adc (bad) adc mov sbb scas mov adc adc push or xchg loopne push je pop add pop xor sbb xchg pop push sbb pop adc add xchg (bad) sar (bad) xor xlat and adc outsb sbb adc adc xchg imul ficom jmp dec jp aas test out jns adc push or push sti or (bad) push lock icebp out (bad) mov call fs aad adc fcmovnbe neg inc add adc jecxz iret cli into pop out sti aas mov push sbb call jns adc push and mov sub repz pusha rolb and pop (bad) adcl lea mov adc adc push mov jno mov sbb ja add adc call ja cmpsl lock mov cmp pop cs xor jns pop cmc pop lea mov jp adc sbb xchg pop xor adc add repnz sbb ret cld stc mov add pop (bad) fstl adc cmp xchg mov pop xor sbb ljmp jge clc adc cltd xchg mov jecxz cmp xlat adc rorb adc mov ja int cs fadds stos jg lret and les jp cli xchg (bad) aam adc cs out mov adc enter jmp push jge mov adc inc jnp fldt fwait and adc xchg push mov dec mov (bad) insb push imul ficomp outsl ret push jecxz adc pop jmp adc into js xchg je shr pop mov xor fidivl repz xchg popf xlat adc je jae sub ss inc ja xchg push adc fidivrl push int fsubs adc mov jbe jae pop jno out repz pop or push jnp fsubl jg fdivl popa inc jecxz dec mov dec adc sub xchg in ja cmp jle negl les mov mov inc xchg bound lods test dec add adc mov xor je xchg xor sub cmp jmp je xchg loope outsb or mov stos adc shr aad sbb push mov adc mov add push div mov jbe or jno mull aam add mov (bad) fildll repz loop fadd adc cli out fxch sbb aad jle pop adc adc enter inc sub in dec call out adc sti das xor mov xchg adc outsl jge push dec aad xlat mov je iret and rclb sti push sbb mov in cmp ret adc cmpl int3 mov mov in adc enter push mov mov (bad) loope xchg popf mov cltd test pushf mov lahf xchg in repz fwait repz lock xchg xchg lret lahf xchg iret pushf xchg int jno mov aaa sbb sbb mov cmp sbb sbb mov (bad) loope movsb fwait test loop icebp lcall mov mov out xchg loop xchg in xchg loopne mov movsl popf sbb sbb stos xlat sbb lods repz sub xchg das mov wbinvd adc stos adc movsl popf sti mov mov sbb mov sbb sbb sbb sbb sbb sti dec jmp repz inc repz repz xrelease inc xchg roll rorl xlat push xchg cmp aas pop xchg cmp cmp popf sbb sbb sbb sbb sbb sbb in push mov loope pushf loop icebp mov mov mov fwait jle adc xchg jp bnd divb call out jns sbb sbb sbb sbb sbb sbb sbb sti jno outsb repz repz imul pusha mov insl mov adc or adc ja add mov mov lcall adc mov sahf mov pop shr or sbb ljmp sbb pop mov add fildl adc add sub cmp cmp pop sbb rclb xor or sbb add push lods fwait mov loop repz inc adc xchg push (bad) fwait cli cld loop mov inc fwait (bad) loop push aad rcrl (bad) ret push sub loop repz push cmp adc mov adc xchg xchg pop cmpsl or adc xchg stos dec or jno push jns aaa push push int adc mov adc cwtl sbb fucomip outsl add das sbb inc clc mov xor sbb lds adc stos jns mov pop mov add cli inc mov mov jl adc and test pop cmp push shr jge out ljmp stos mov or jbe cmp mov sbb mov clc push push repnz lcall or adc adc and adc xchg mov cmp leave adc paddusb fnstsw lahf add hlt push pop fcoml pop in sahf jnp adc int insb jl (bad) push mov or (bad) adc inc dec mov int cmp loop and imul pop enter xlat std (bad) push jg rcll or pop repnz loop adc adc lret adc sub insl lcall prefetchw stos fisubr push out adc mov sahf repz je xor xor push jb push pusha adc push fs loop inc xchg push and adc (bad) ja mov mov jo std push jl jnp in mov inc or das aas mov cwtl push jp fidivrl cmp push pop inc and lret scas sub dec (bad) adc dec or adc clc or mov scas and fadds or shrl push bound or outsb rolb or sarl (bad) (bad) or sbb adc nop pop test cmpsl mov pop idivl or adc push call mov out gs adc repz sub in frstor lea repz std (bad) pxor xor mov xchg ror adc adc ret push jmp daa add cli cmpsl cltd test cmp iret adc add mov in sbb adc repnz fdivrs popf and xchg scas xor cmp enter mov push call or insl inc ljmp jmp loope loop int sbb psubusb pop repz fscale pop (bad) (bad) out loopne call loopne out sub adc fucomip pop in sub adc insl imul ror adc dec out jmp jmp adc xor jno push iret iret adc (bad) and mov cmp add xor push aas fwait clc (bad) mov fnstcw sti jno pop fadds rcrb adc jg adc or mov cmpsl ret gs out jbe cmc xchg dec (bad) iret stc adc or lret in mov inc and adc out jmp mov insl adc (bad) jg mov adc mov (bad) lods adc adc sbb push or add stos in iret test jns call xor movsl lea adc cltd stos repz adc sbb inc (bad) adc enter push mov mov pushf mov cwtl xchg repz lahf xor popf sbb sbb sbb repz mov rorl xlat lcall xchg cmp aas xorl pushf sbb sbb sbb fwait repz lods sbb lods icebp mov mov cwtl scas adc in out lods (bad) sbb sbb mov sbb movsl mov mov and mov sub or mov sti lods in scas repz sbb mov mov xchg inc mov adc pushf inc adc call adc pop adc inc adc inc adc dec popf sbb sbb sbb sbb sbb sbb in repz xor xor xor repz pop push mov push mov dec popf sbb loop push mov loope adc xchg ja xchg push sbb sbb sbb sbb sti jno outsb mov outsl xchg hlt push aad xchg shll fildll ret adc shrl outsb adc ja and adc js and and popf sbb sbb sbb sbb sbb loop push mov loope adc xchg adc fwait pop xchg call xchg cli add push mov adc or sbb fistpl sbb out mov or xor adc popf sti pop sub mov or push pop in mov adc fwait mov loop push mov mov add adc fwait sahf and push loopne cld sbb loope push hlt fwait lock loop push lret xchg iret mov xchg cmp aaa loope push sub push jns,pn adc mov adc movlps aam adcb mov cmc sbb cmp cltd adc cmpsb jne push mov mov add jno add arpl xor inc push adc int adc mov pop push adc sbb out out xor add pop outsl das jge xor pop push ficom ljmp jno sub mov mov out mov (bad) push nop adc adc or jns adc and inc or xchg pop push inc push or adc or mov in adc rcrl (bad) cltd or js pop pop adc push imul out in loop add adc into jle fsubrl push dec popa lret stos aad mov push pusha fwait jl rep lds mov dec sbb lret xcrypt-cfb cmpsl loop jne add fdivrl popf test ficom push in mov data16 insb fdivl dec or inc lret cmp cmc xor das ja jmp pop or int lods pushf and xor lea movsb jmp into pop mov mov dec fildll adc mov roll gs adc jnp pop call adc or iret adc loope and aaa rcrb clc int notb jnp fsub roll out add mov sar mov (bad) addr16 xchg add scas jg iret call fidivr sbb pushf fucomip (bad) loope mov jmp pusha add callw lret or pusha shr fildl fimull sbb repz flds xchg je (bad) inc xchg aam outsl fwait and mov bound adc vunpcklps sbb push sahf pop pop sbb mov popa jp (bad) stos adc stos inc ficompl dec scas in emms lods nop xor adc mov iret jo mov loope mov adc insl adc lods out inc fwait adc in lret pusha stos test dec mov or imul adc fistpl ss pop cli aam adc pusha mov mov push jno fbstp fildl add repz or mov rclb mov cwtl repz jno imul lret test pusha cltd sti xor cmp inc pop adc sahf inc loopne mov adc inc dec inc sub lods mov inc pop out notb adc (bad) dec fs mov addl les jle outsb push adc lods mov rcll adc dec std ljmp xchg sahf icebp loopne sarb idivb adc sarb insb or (bad) ljmp out lret mov iret (bad) xadd adc pusha popa scas insl mov mov test shll sub add xchg iret xor in push (bad) negb push or adc pop inc jns mov sbb imul cwtl repnz pop fadds into loope fimull adc xor adc aas fldl xchg sbb arpl mov mov lret or adc lcall mov mov (bad) les (bad) mov (bad) cmp sub hlt mov (bad) arpl add cld enter clc ja sbb pop mov dec adc push dec mov (bad) test sub adc daa adc (bad) ret out loop mov dec or stos push inc mov or mov into xor mov or loopne mov mov mov lods lock push add push mov (bad) sbb mov xchg test lcall mov adcl popf sbb jl dec xchg fwait sbb fwait mov sbbl loope push mov mov loope cld loop push mov loope push stos fwait movsl mov xchg mov sbb mov sbb mov test stos sbb test inc repz rep push mov push xchg cmpsb pop xchg xchg (bad) inc xchg orb push pushf sbb sbb sbb sbb sbb in repz push repz repz fild flds fstpl fistl fist aaa (bad) loope xor and xchg pop sbb fwait or js sbb sti jo jno fwait outsb xchg xchg outsl xchg sahf push subb pusha xchg mov xchg adc (bad) imul ja lock sbb sbb sbb sbb sti jno jle mov sarl aaa loope push sub cmp xchg sbb sbb fwait sbb xchg movsb add test xchg mov xchg mov xchg lcall or mov xor test push xchg loopne mov sbb xor xorl adc push xchg fistpl xor sub xchg sub psrad push or loope and and adc mov adc adc adc adc popf sbb lock in sbb sbb (bad) sbb lret in repz xor (bad) xor sarl repz and sbb loope pushf and push or loopne or adc ja push sti mov adc movsb mov fs xor push rcrb cmpsl adc adc adc std int sbb aaa rorl dec push push or es sti iret mov sbb test mov adc jae sbb sbb sbb stos push pop out or repz andps fcomip add aam push xor add hlt cmpsl mov stos adc dec imul adc add push fild stc xchg test lock add lea cmpsl add or add hlt adc mov or mov jle cmp mov hlt ljmp popf out jg adc add cmp jns cmpsb loop mov push ret shrl mov pop adc cld leave fsubrp pop call xchg pop roll jle jb mov ljmp js inc xor leave insb aaa mov adc hlt mov mov ljmp imul add push dec adc dec sub jno jo int3 adc cmp (bad) (bad) adc or test xor inc adc jne repz push add push es jb adc jae mov xchg and hlt lods pop xor cmp jns in pop arpl cwtl int mov jbe adc dec add stc js fmull sti dec (bad) xlat call mov nop cmp mov mov out jecxz adc in fisub dec bound insb mov enter xor movhps adc das inc adc loope lds adc sti inc jne ss push nop and and ficoml dec pinsrw pop out mov lret mov fdiv pop pop cli add aas xor jge (bad) out adc test call imul lods adc jmp adc int3 repz adc out (bad) xor stos pop ss pop mov into mov leave orb cltd or (bad) shlb (bad) (bad) jns sar mov push (bad) mov sub push dec or aad xchg rcrb mov mov rcll mov cli lds cmpsb pop cmpsl cmp pop dec adc mov xchg mov fwait sbb sbb mov jg jge cmp xchg int3 xchg push jp sub push sbb outsb lahf xchg push adc (bad) adc das add pop adc or inc sub fsin cltd das sbb adc loop mov cmpsb push cmp or cmp movsb adc mov call sbb adc cld inc aas bound adc cmp or jb cltd mov int3 or btr decb dec scas adc push sub lret adc stos xor and popa xor mov and pop out insl push das adc xlat fcompl push mov xchg xchg or sub movl sbb cmpsb push adc fnstenv aaa loop adc lock pop or je ja jmp adc jg pop stc adc sar dec jae fisttpl mov stc push fistp movsb sbb pop cmpsb sbb push ljmp adc mov push insl pop adc insb add pop scas imul (bad) adc jmp sub stos adc sub gs cmp lock pop es and daa xchg (bad) rolb js pop daa add cmp lea pop adc sbb adc mov dec out ja cltd adc sbb adc (bad) cmp cli enter mov das or push adc fist pop int jmp in lcall sbb lods add adc inc jp mov cmp adc add or pushf jecxz sub stos repz pop hlt push xor (bad) mov xor xchg nop rcll test or inc pop inc idivb push push clc fcompl or mov ss pop add repz (bad) (bad) jo in lcall mov add arpl or xchg fidivl hlt fsub adc call push adc rcrl xor daa adc xchg or and sbb and bnd adc push sahf fwait popf lcall fcoms fwait sahf loop push mov lahf push pushf fwait orl mov mov (bad) sbb mov xchg test lcall stos xchg movsl sbb fwait mov add mov lods loop push mov mov push test stos lods loop push stos xchg test test mov sbb jl ss movsb push repz repz repz repz xchg test mov mov mov adc mov in adc push adc dec popf sti inc in inc repz inc repz repz inc repz inc xor mov inc adc loope push sub push or loope or icebp lods insl repz repz repz repz repz js sahf insl repz jle lock in jp loop adc jo clc jge hlt sbb sbb sbb sbb sti push imul js cmp jl xchg xor or or sbb sbb lods adc or test adc sbb mov or call out adc sbb cld sbb sbb rcrl lds or sti adc pop adc fwait cmp mov cmp loope adc adc in xor mov repz repz xor sahf mov xor and ljmp xor and xlat and (bad) sti and xchg cmp cmp xor fwait xor pop (bad) icebp cmp adc fildl jle push lcall sbb sbb repnz int mov addl add mov or mov push xchg push repz or bound lahf or mov pop mov insl mov push stos xchg les mov mov adc lret cmpsb add mov pop mov push es int3 add call adc or or cmp add ds jmp decl sbb adc insb adc mov movb xchg outsl or call jnp test adc sbb cs adc into in in ss adc jnp std ss jg jo inc aas in mov addb (bad) mov out mov jp outsl or mov jmp dec sti into mov (bad) dec out dec int and ret xchg fcomps (bad) or dec xor into hlt dec cmc (bad) and mov push jp xchg sbb jecxz addr16 adc add icebp push fcmovb pop pop mov sub enter lahf mov push pop cmp pop dec ret jecxz adc or dec loope out sub sti adc dec jbe sarl adc dec stc lret jecxz adc lds les pop adc fsub pop out out xchg and loopne jecxz adc or adc mov cwtl enter jmp (bad) jmp fdivrl ror imul rcrl pop int3 cwtl in dec adc movsb cs repz dec in (bad) fildll or push adc push fnstsw sbb adc ret out shrb xor add dec icebp repnz inc fsubs add jecxz sub jmp enter adc jl aaa in sbb xchg pop repnz dec push adc push jae dec (bad) in adcl and inc cli jecxz stc ficom out out inc mov sbb xchg xor pop cmp push adc jae insb cli inc mov adc mov adc into lahf sbb adc cmp xchg inc mov sti movsb and clc dec adc in mov loop (bad) adc mov dec push daa outsb out shl inc sbb xchg out adc nop cmp cmp stos pop sub jmp pop mov cmpb stos movsl ljmp out cld xchg dec fstl sub imul orb sub sub pop arpl add jb xor adc adc adc repz nop sub loope popf icebp xchg cmp fidivr sbbb mov or je adc jne sbb inc jg pushf mov std pop adc mov xchg jl mov xor imul repz or leave mov push add adc mov fwait data16 (bad) out popa sub ret mov adc lcall fcoms sti rcrb add dec xchg cmp add pusha lea dec adc imul xchg xor mov adc push sbb das es rclb js int3 adc cmp add adc cmc out js int3 mov pop in adcb sbb cld movlps mov lret in adc std cmc lcall aas adc push ficompl jecxz sub shrb mov push or push imul push loop lret adc adc inc (bad) adc bound adc sbb das push mov pushf push subl xchg mov mov mov in push mov lcall mov xchg sahf sbb fwait pushf lahf and push mov mov mov fwait test loop push scas xchg stos sbb test mov loope push test mov sbb in push mov js adc stos inc pop scas pop pop test int3 push and rolb inc adc adc adc pop out pop incb cld dec pop clc push or add pop add inc add inc add dec and mov push adc push icebp aas push cmp push and add add mov push mov push scas jnp stos jo xchg jge sahf add pushf jns test xchg (bad) push out imul js in jge call push outsb add outsl add push lds shll insl jecxz dec xchg cmp xor xor in push aaa xchg pop cwtl push jl dec (bad) icebp push bsf movsb push jecxz dec push stos adc pop push xchg sbb xchg add add or xchg adc add adc add hlt add ljmp nop add add leave pop add sbb iret dec xchg and daa loope push and add fwait adc push mov push mov mov adc adc push pop and add add and lock in dec push out and out push fstpt push fbstp (bad) push (bad) push fbld xchg aaa jns fwait xor and adc adc cmp xchg adc adc mov sbb pop or pushf jmp adc test and sbb xchg lcall out dec fwait push sbb movsb add dec lods mov pop ret mov jg mov jnp jne push (bad) aam add pop jmp in pop push ljmp jge push push cmp or dec pop adc xchg dec push mov jae mov daa int setge fidivrl mov sbb jmp adc and adc cmp stc sar inc xor int3 adc repz shl arpl jecxz cmp xchg pop mov stc adc sub mov loop xor arpl jecxz or clc adc or cmpsl xchg xchg mov cli jge or or in sbb rolb fisubrl or sbb adc (bad) jecxz adc and negl cmc adc xor pop fist mov cmp sbb inc (bad) adc ret mov push mov adc inc (bad) jge jno push pusha das adc imul (bad) jl mov scas fwait xor clc push dec arpl movsb pushl add sub in xor xchg and inc addr16 sbb aas cltd adc mov xchg push pushf and enter jo movsb stos xchg in xor push into adc pushf mov out mov mov jge push xor int3 test and ror add or sub dec pop int3 je icebp xchg repz pop ja sub sub mov adc hlt mov xchg popf push fsubl adc loopne jecxz mov mov adc jns sbb cmp add (bad) fist xor mov ds add loope lock pop imul into in adc jns test adc (bad) mov stos adc fwait dec repnz out pusha mov pop mov xorb (bad) cmpsb add movsl pop movsb mov push xchg sub cld adc push aas cltd jge sahf mov sbb mov sub sbb add insb cmp out ds ret je dec (bad) sub add into mov xchg adc les dec gs js ljmp je repz les adc rcl adc cld xchg push ja jb cmpsb aaa adc inc or inc adc insb mov ja sbb cmp pop arpl outsb pop insl jne pusha jne adc or adc inc fnstcw cmpsl pop xor jo jg jp adc pop imull adc sbb adc dec insb dec pop int3 jbe mov iret xchg sub inc pop lds ljmp daa adc adc bound scas xlat sub out xchg inc cmp and out sbb pop dec mov pop popf jle push add punpckldq leave mov roll mov push xlat push adc or ds mov in cltd xchg adc int3 mov ficoml xchg pop dec cmc dec add dec adc test loope (bad) in cmpsb popf adc mov hlt push les add ja je testl adc pop jno jb xor jl jnp or sbb mov xor in mov jl jge jle jg mov outsb sbb add push dec sahf movsl push jp jnp lahf adc push mov pop (bad) xchg and or lea (bad) andl xchg adc adc cmpsl xchg sub adc bnd adc push mov mov loope cld loop push lcall push mov push lcall sbb fwait push sahf xchg test mov mov fwait lahf pushf loop push mov scas std loop mov loope push test mov mov jmp mov xchg mov sbb mov sbb mov test stos sbb movsb enter cmp mov mov mov xchg push xchg nop pop xchg xchg inc xchg xchg inc mov dec popf sbb sbb sbb sbb sbb sbb in repz push repz dec repz inc mov inc xchg int xchg and and jno inc pushf sbb sbb sbb sbb sbb in repz push mov loope push mov jno outsb repz outsl repz nop imul pusha rep xor mov outsb xchg in xchg loopne xchg fnstcw fnstsw fldt xor pop adc jle jg jp jnp jo jge push jns jle ja push imul sbb add jl into mov push add sbb loope cmp xchg pop sbb fwait adc adc push adc xchg add add or lret sbb loope push es and and push cmp push and xor fwait xor xor xor loop push es in xor push and add xchg mov xor lea adc cmc int add mov adc jmp xchg fstpt ds add mov rclb xor pusha push or sbb int dec sbb arpl mov adc lea repz js test test fcompl je in mov push lock or or adc (bad) notl in pop or shr addl movsb pop or xchg mov popa lds mov xchg xchg sbb xchg jle fwait adc ljmp push sti adc lcall sbb cmpsb xor lds inc inc shll in sbb xor ss adc xlat scas mov ret popa cmp mov mov adc xchg jl fisubl xchg jo push mov (bad) clc fmul pop fstp xchg fimul test sahf ds mov call iret or adc in out adc cmp pop mov adc cld das fs js xrelease mov sub aas fsub adc mov mov clc adc jo fwait xor adc inc mov xchg adc dec cmc or jmp (bad) xor adc loop adc sub pop repz xchg pushf stos iret inc push dec adc rcll addr16 in xchg cmp cmpsb xor aad roll xchg ret mull mov adc cmp stc repnz shrl or push cli add pop adc cmp xchg in popf aaa loop adc mov xlat inc add mov pop adc lods mov decb icebp or insl cmc das add or adc xchg (bad) and push inc (bad) adc jns fwait test clc add inc cmpsl jmp loop dec cmpsb xor adc fwait adc sbbl adc xchg js out dec ror test adc scas jno dec cmp (bad) in mov or inc inc jns adc (bad) jl shrb (bad) or xor xchg and cmpsl call lea xor sbb adc lea and aam pop xchg adc out pop xor ficoml adc xor rclb add fnstcw into fist sti pop push nop popf es sbb rcll cmp mov xchg adc enter out xchg dec inc sub lret repz mov add inc ds cmpsb cmp cwtl lods int cmpsl pop adc out pop adc aas rcl pop leave pop pop push pop or les adc mov mov pop pusha ficom add inc xor adc jg movsb pop adc call push sbb lods orb iret adc scas xchg xchg xchg push jg adc lret (bad) push (bad) shrl dec emms mov adc js es add jp xchg adc sub pushf and add mov int sbb adc std mov adc jnp pop mov rorb or or pop imul cmp inc xchg adc scas pop imul or shrl lods mov dec cmp pop mov adc movsb pop cmpsl inc mov mov and or or xor xchg sbb std and setle es lea adc add and dec in or int stos sti adc jl les adc bound adc push cltd xchg xchg sbb fwait sahf popf loop push cltd xchg pushf sbb sahf push test xchg push lahf fwait pushf and push lea mov in push mov lcall stos push movsl xchg mov fsub mov push mov lods push scas xchg mov mov fwait test loop push scas xchg stos sbb test mov loope push test dec and push mov push mov push mov mov add xchg push adc lcall pop adc push adc push aam dec push inc add inc add inc add inc add inc add inc jecxz dec xchg and cmp cmp in push aas xchg pop sbb loope popf and imul pusha adc mov pop mov mov mov mov mov mov loop push jle loopne add jp bnd divb xlat jge fisttpl fnstcw sarl ja (bad) push sub das loope push sub or fwait sbb (bad) addr16 ds jl dec xchg mov adc xchg adc push fwait adc loope push pop scas push add push push adc add add add jl dec mov push pop jl dec xchg sbb loope push and push xor loope sbb xor xor es sub push and es and xchg and and cmp fwait ss and mov add sbb adc sbb xor push stc decl adc mov xchg outsb or add mov daa outsl push lods cltd or ret ficompl rcl and push pop adc sbb fsubrs outsl sbb or sbb push dec ficom scas outsb pop adc ret adc imul adc add arpl mov mov push sub fcoms imul add mov sbb adc jg push add enter sahf jbe adc sbb adc addr16 inc sarb push mov add loop sbb push (bad) out adc scas shr cmp adc loopne mov fdivr adc mov (bad) out leave push nop adc cli or fistpl mov (bad) cmp jmp rcll jb sbb fadds stos pushf sub jnp xchg push cmp or mov lret jmp jp adc inc inc push adc inc fstpl ss sahf adc mov or fwait jne push mov pushf cmp adc mov inc in (bad) out dec jecxz mov mov jne adc and (bad) lods mov out sub scas movaps cmp clc cs pop mov clc adc pcmpeqb xor push push push xorb xor xchg push and adc adc (bad) push ret adc cmp mov adc popf cmp pop outsb pushf xchg mov int3 adc mov push stos adc cld xor mov fsubp jg pop adc add or dec call adc into aam testb das jge adc mov push movsl inc add add loope adc xor and repnz adc xchg in cmp call adc push fidivr sar enter inc sbb popa jns adc in in push xor sub insl (bad) sub mov popa (bad) lods adc jo adc jns js mov in call imul (bad) xor jb xor mov adc xchg in repnz hlt dec add jge or or mov mov mov adc std in cmp sub adc clc jno mov cmpsl stos mov dec jp pushf xchg cmp lcall adc jne cld dec fcomip fsubrl scas xor pop lret inc sub mov ss xchg xchg in adc enter roll cmp sbb pop (bad) cwtl mov fwait in test or dec popa loopne and pop pop jno xchg fwait sbbl cmp lock pop cmp jg aad adc pop enter jne cmpsl mov test mov mov sub imul adc sub mov adc push leave mov adc lods add js sub adcb repz repz adc sbb adc jne cmc mov mov popf outsl pop mov adc xchg (bad) mov xchg sarb mov mov loope out (bad) dec sub adc cli lods jno mov mov pop rcrb rclb sub outsl mov cmp adc enter imul cmp repz mov or popf adc sbb or adc fcomps in adc sub mov loop (bad) in gs sub adc outsb aam loopne (bad) mov adc pop push test adc mov mov pop xchg push lcall add fwait push sahf fwait test xchg lahf mov loop push mov (bad) sbb mov xchg test lcall mov adcl popf sbb fwait mov mov fwait scas mov mov sbb fwait scas stos loop mov loope push test mov mov jmp mov xchg mov sbb mov or mov adc adc sbb sbb sbb sbb sbb sbb in repz inc repz dec repz repz repz xlat inc mov dec jno push push cmp sub xchg cmp sbb out mov loope adc adc in jg mov repz jnp pushf jo (bad) jge mov xchg jle cld ja clc push (bad) imul xchg clc jo lds adc (bad) outsl adc push aad adc pusha push xor and xchg and push pop jl dec (bad) loope mov scas sbb stos sbb in xchg cmpl adc scas push add push push adc add add add jl dec mov push pop jl dec (bad) in push or sbb mov sbb loope push xor push and and xor cmp and es and xchg and and cmp fwait ss and xchg cmp xor xor fwait ss xor xor test popa sahf gs mov out jae mov (bad) mov jbe mov push outsl add fs adc in inc adc mov adc mov lret test (bad) int xchg adc inc out adc ljmp add pop mov or cmp inc push push inc push add lds jne jbe adc push sub in push mov dec mov or cmpsl (bad) call pusha push adc fisttpll add adc mov into and fcoms inc mov cld cmp out adc ljmp push enter add mov mov adc int3 dec push stos dec outsl xlat adc mov icebp lods sbb xchg jne leave dec lret inc or es shll ret mov pusha adc rorl into pop mov in repz mov dec adc push jecxz xor mov into cmp inc movsl int fcoms mov dec in aam push jmp shr mov push adc dec adcl je push adc clc dec pop mov cmpsb dec test stos sub mov add adc icebp icebp sti push mov mov or cmpsb nop pop mov int3 repnz push cmp adc fmulp nop cli pop mov adc fdiv sahf repz pop dec in mov je (bad) pop out inc aad push adc call cltd sbb pop and sub fs in xor or in mov imulb cmc or sub movsl inc adc call (bad) mov add adc repnz and movlps add add mov insb push fldcw adc mov or cmp mov movsl sbb push or adc outsl dec in dec std adc pop sub psraw push outsb int or adc repz jae jle fwait pop mov adc (bad) mov (bad) jbe mov push dec jb push dec adc dec push pop mov xchg imul and adc aam (bad) push rclb or fcoms movsl lahf sahf xchg pop jecxz push sbb add push gs adc xor pushl das sbb (bad) cmp pop adc mov leave into dec ds adc sbb addb add adc cltd (bad) fisubl push and pop add lcall loopne jno call fidivl mov fistp pop inc push and lahf movl insl push outsb xlat (bad) or loop dec inc mov push int3 jmp insl xchg out xor adc loope adc jne jbe mov sar in or rorl push sbb pop data16 (bad) fild repz mov jno je ss adc push adc jge jle jnp ficoml sbb adc ljmp ja shrb jne jl jnp jb stos adc (bad) adc push fs inc pop adc add jp insl jae adc fs xor movsb jg cs jge adc int3 xlat imul imul pusha adc jbe xchg sti xchg and dec js jecxz dec dec lds leave dec adc iret std adc int3 push int pop push adc cmpsl mov mov mov adc xchg push lahf fwait pushf and push lea mov loope push test push (bad) xchg mov and push popf fwait lcall icebp push fwait fwait sahf test mov xchg xchg sbb fwait test and push test test mov fwait mov loop push movsl xchg mov fsub mov push mov lods push scas xchg mov mov fwait test inc mov push stos inc push mov mov add mov adc adc xchg (bad) inc adc dec push pop push pop call pop cli push pop (bad) push pop iret push sbb add push add push add dec add inc jecxz push aaa xchg xor xor icebp push setnp add push stos jns mov push mov push mov mov imul js xchg jge xchg jo nop jno pop outsb or add add pusha add insl jecxz dec push (bad) imul push iret jp leave jnp int push lret insl push iret pusha xchg daa jns fwait and xor add sbb mov add and pop (bad) add mov pop nop add xchg add xchg out into push out push in mov adc mov fildl add add inc pop mov nop jecxz push and xor fwait ud2 loop push or mov push pop and mov pop mov mov jecxz dec push xchg and pushf and cmp xor repnz and and xor iret xor (bad) xor fnstenv pop (bad) xor jecxz push cmp fwait aas loop push sbb mov sbb mov std add xcrypt-ctr cmpsl sbb fiaddl push aas push mov dec adc and loope movsb push mov mov fcoms add mov push or add fucomp xchg add ss sbb ds sbb fstps mov xor (bad) or adc in or loope or add pushf ds xor or adc sbb mov (bad) int mov cwtl pushf fiadd inc fwait test add (bad) adc aam decb cld idivl add cltd push cmp add and mov mov fcomps (bad) fmull push js pop out sub pop (bad) (bad) adc dec push sbb xor out popf add mov sbb rorb jmp (bad) adc inc xor cltd push or lods inc mov arpl aad (bad) loope inc sbb sbb mov rcll adc sub stos lcall pop loope dec add adc scas sub outsl rol repz sbb or jg push aam adc repnz sahf jp adc repz ja jb push or mov mov pop mov sub repz cld pop jle cmp loop inc std dec jp push in repz jno lock cmp add data16 aas mov cmc repz jb (bad) pop sahf cmp jle or adc sub mov pusha pop in adc inc mov pushf dec adc push push dec push ljmp lods sub adc inc in inc inc cmp lcall cmc inc shl mov pop addr16 and or inc jo inc cld dec jle cmp mov adc (bad) fidivrl adc fmuls shrb in and dec add adc sub push push xor outsl inc push out or or stos push rep adc rorl adc inc dec mov dec push sub sub mov popl std adc xor cmp push out mov rol adc adc jb jno sbb fmul pop adc jo adc fbstp pop push clc (bad) fs and adc imul inc popf xchg test mov dec jns add ret pop or adc jmp dec mov adc or sub add push adc push push pop sub adc rolb mov call jno sbb repnz adc dec adc lcall xchg in sub sub adc bound or mov xchg in pop (bad) in movsl mov xchg das pop dec push call jbe (bad) mov push or push cmp fimull cmp adc push cli subb adc lods adc or ds pop fwait test jecxz fsubrs pusha test outsl adc lcall loope inc sub xchg adc subl cld ret cli mov loope pop sahf fidivrl ret xor adc adc test mov adc scas pop test add or push xchg icebp adc pusha xchg mov xchg mov mov adc or jb les mov xchg mov xlat xchg push jb nop adc mov pop or lcall ficomp adc ljmp sbb push mov sub hlt adc add mov jp inc adc and adc adc test lcall mov xchg sahf sbb fwait pushf lahf and push test push lahf xchg pushf sbb fwait mov mov push mov push mov fwait stos movsl loop push mov loope push mov mov push scas fwait mov loop push movsl xchg test stos loope push scas fwait stos test loope push mov mov push movsb inc push cmpsb dec rolb push aam push pop test pop nop push pop xchg push pop lcall add loopne add inc add pop add push add push add dec and push fild ret inc push int push leave inc xchg cmp push sub push or jl push mov push mov push mov mov add xchg imul ja lcall js hlt insl pop lock pop bnd jle dec jg in jp fnstsw fnstenv (bad) jge lret add leave jns sarl cmp fwait cmp loop push cmp fwait sbb loop push or cmp fwait stos test lods xor mov xchg mov sbb loopne xor xorl adc push xchg in fstps adc sbb ret sbb sti add add lds sub xchg mov adc fwait add loop mov test cmp sub fwait and xor xchg xor push xor push xor xor cmp and dec xchg xor cmp and fwait and and and loop push ss sub cmp sbb jo or or scas push push or add jno repnz negl adc xlat push notb push inc mov out adc push ja add push pop in mov or rcrl adc faddl sub add std adc sbb ret jmp adc out adc icebp mov adc add imul cmp push pop jb ja sbb push (bad) and add out sub and push adc jp adc iret loope in (bad) scas ret (bad) or repnz cmp cmp cmpsb adc mov mov pop dec mov adc fdivrp add mov cld sbb out inc jle adc sub dec mov or push and outsl into or xchg adc mov push adc dec adc imul add add mov cmpsl adc lods ja (bad) inc jbe push mov ja sbb add pop fcmovnu and and je mov (bad) pop adc adc clc inc jmp mov sbb jle mov test rolb shlb daa xchg dec dec pop insb mov push sti shr out adc in dec jmp (bad) out add stc mov loop adc fiadd ficompl adc fdiv cwtl sub loope jno sub loopne adc fldt dec test shrl enter push out pop xchg lret cmp out iret imul shl leave push int3 sbb bnd cmp adc inc in out int rep dec outsl iret xor lock xcrypt-cbc cmpsl adc xchg jb ja or adc iret repz sahf enter jae je idivb jo xlat pop hlt pop jge or lods push add pop jmp out pop out adc jbe cwtl sbb fstps pop jl aas imul dec jg (bad) daa pop je lcall mov inc lock cld dec sub pop scas js add mov dec imul stos xor repz dec (bad) cvtdq2ps imul shl dec fs adc aas pop fldl pop roll loop adc adc xchg fsubp incl jae repz mov cltd cmp mov pop xlat add mov sbb xchg xchg dec adc sub adc dec pop lea aas jmp fmul rolb xchg mov dec in into or out rorb dec sti or sbb adc sub (bad) enter icebp ret mul aaa sbb fmuls cmc push xor test adc pop mov fdivr ja stc or sarb fucomi cmp mov out (bad) cld mov mov repnz dec sbb adc dec das adc xor dec lods sub repz ja popf int out dec lock adc inc adc test mov and add push add addr16 shl adc fdivl sub or repz (bad) pop fsubl pop add or inc xor in (bad) cs loope in and mov jmp fsubrp addb adc dec sub shufps mov jne sti adc subl mov pop xchg fdivl push push xchg aam lahf adc lret xchg inc sub adc jnp inc adc adc sbb adc adc bound mov adc loope mov sbb fwait lods dec adc xchg popf sbb jl dec xchg fwait sbb mov xchg lahf sbb lea xchg (bad) fcoms mov xchg cltd sbb sbbl mov sbb mov sbb mov test stos sbb test test mov mov test sbb insl push mov adc mov adc pushf sbb sbb sbb sbb sti dec jmp xchg xchg inc xchg repnz xchg testb inc mov adc out adc inc adc dec adc push adc push adc pop adc inc adc inc push das out push sub loope sbb xchg add adc adc pushf sti jno jle lcall jnp mov xchg jge sahf mov jle in ja call adc js sarl xlat jo aad popf sti outsb in outsl repz das xchg sub and fwait xor and push pop out icebp scas sbb or xchg mov mov adc mov adc xchg add incb adc or clc adc pop xrelease add roll ret adc fwait and loop mov loope push pop fwait add and scas sbb stos sbb mov xor repz repz and subb xchg repz xor ljmp and or (bad) and iret and fstps and sbb fistp xor xor cwtl push fwait smsw add movsl or or dec loop push push test or jge xor adc xlat sub jmp jp hlt adc out push push clc xchg nop sbb pop mov adc pop int3 aas adc add in push and inc adc push jns jae or push cmp add jle push repz addl cmp bswap pop push lea test aas pop xchg add std adc or xchg and aaa popa xor push add mov mov cmovno repz add out push push out cmp adc pop das pop imul popa dec adc push std lock out or mov adc sub xchg push nop adc int3 jb fsubrl (bad) adc mov repz stos push sub cmp in rorb inc adc test sub push and cmp je aad aam test mov sbb and jle test adc jnp shlb cmp or leave in enter adc mov sbb in ds adc sahf aaa pop aam hlt fmull iret (bad) pop pop cmp pop add into fucomip pop add jbe sbb repz (bad) mov insb lods mov push dec fxch cli dec jle dec rorb add cmp inc adc mov adcl int3 out bound pop addr16 icebp pop ss jns adc arpl roll push pop add adc jmp dec push sub cmp (bad) pop or dec popa popf int3 adc xor insl xchg mov push jmp push mov std sub dec leave int3 dec dec mov dec sahf mov sbb js ja adc push jp sbb xlat repz jno xor dec fstl adc ja and pop adc cmp jp es or imul adc pop fadd adc lock jmp push fwait sbb enter cwtl mov pop sbb dec mov lods inc jmp inc push adc pop push jae dec adc int3 push out cld das jnp adc mov or inc lds nop mov cli inc sti xchg adc js xor add add daa repz aas cmpsb lahf mov adc xchg jae pop sbb dec mov pop repnz and xor cwtl sub push decl jl pop dec call mov ss adc inc mov xchg mov dec jns rep fwait adc pop call and lds adc mov popf lret push inc xchg xchg adc clc xchg call jne not into xor popa mov mov jno pop xchg pop cmp add sbb adc mov dec jle pop lock cwtl and inc cmpsl add dec jge daa pop dec sbb pop enter ds mov popf aas std inc adc add pop adc pop and sub (bad) dec mov (bad) mov xlat insl xor cmp das pop adc rclb movb add popa fldcw or mov fsubs lea adc (bad) pop out fnstsw and imul xchg fidivl mov sbb popf push push adc adc iret scas sub or lods xchg stos mov sub adc and outsb popf xchg mov adc ds mov or mov adc nop xchg rol repz xlat jle and cli dec adc xor xor adc inc push cli icebp adc pop clc test lea dec and cmp sbb cmc mov fsub xor pop outsb stos jmp add popa jg adc and out ja push adc and pop mov fld1 xchg mov adc sti adc pop and and jl out jp adc push lahf fwait pushf and push (bad) (bad) in mov sbb fwait lcall mov and push popf fwait lcall icebp push fwait fwait sahf test mov xchg xchg sbb fwait test loop push scas xchg stos sbb test mov loope push test mov sbb in push mov loope push scas fwait mov loop push movsl neg adc lods inc adc adc shrb pop xchg inc pop xchg dec pop xchg push or add add inc add dec and mov push adc push adc push adc push adc push rol pop pop rcll push fwait and xchg and and add xchg adc adc mov adc adc cmpb jge (bad) jo pop jno outsb inc pop test push imul imul jp loop push insl xchg pusha sbb jle jg jp loop push jge icebp push jns jle loop push add adc add add xchg add add fwait adc or push sbb sbb loope push push in push adc add loop push xor and fwait and and and loop push ss sub and and fwait xor loop push ss xor xor cmp and dec xchg xor cmp and adc xchg push add xor add push ljmp push aaa adc je mov lods adc mov fcomps adc fldl mov lods stos mov mov in push push push push adcb adc je jnp xchg push or sub inc sbb push mov inc sbb and sbb inc aaa gs outsl cmc jle adc mov mov dec xchg adc lods or jp adc faddl js fild adc pusha pushf push sub pop adc sbb push ret jmp dec jno dec leave jecxz loope add push inc adc lret imull inc add jmp fidiv adc adc inc add sbb xchg fstps test adc repz sarb or idiv mov xor fidiv dec fwait repnz inc push lret dec mov nop (bad) sub out dec push push sub push rcrb adc mov bound aaa dec nop adc shlb in lds add std pop loop rclb add jns adc incl and loope mov cmpsl mov data16 adc jno jg dec sbb sbb loop cltd adc (bad) pop lods push xor mov mov sbb (bad) adc mov stos xchg aad sbb adc xchg cmp lea nop push adc push outsl mov adc cwtl xchg mov (bad) rcrb mov mov cmpl fdivrl jg mov inc jnp cmp aaa daa clc jmp pushf xor mov lcall cltd xor pop cmp cmp mov andb das cld xor ljmp adc xchg xor xchg mov (bad) pop jecxz stos orl bound and add mov sbb adc mov in xchg adc and cmp mov es aam adc xchg cmpsl daa cmp push lcall rorb xchg mov scas enter adc mov ljmp push adc dec xchg dec imul add sub xor or xor add outsb mov jo adc bound ja jno or ret sub adc in mov or mov jg adc mov sbb sti and adc mov push cmp test fwait mov pop pop loopne loop leave arpl lea add lods mov xchg xchg int3 xchg or lcall mov repnz (bad) xor add pop mov pop push imul mov or jg lahf xchg dec mov adc (bad) repnz (bad) scas nop push adc mov push push stos dec dec add jns rcll psrad jmp lret in jns mov dec lods outsb mov out cltd mov (bad) repz pop adc inc imull adc push push aaa pop ficompl mov xor xchg xchg pop test or dec pop xchg (bad) or pushf mov adc adc push ret or hlt outsb or jmp lock fdivrl sub les fiadd adc lea in inc imul repz pop lock adc sti adc adc mov mov adcl sbb mov xchg lcall mov xchg sahf sbb fwait pushf lahf and push test push lahf xchg pushf sbb fwait mov mov push lods fwait test loop push mov fwait stos movsl loop push mov loope push mov mov push scas fwait mov loop push movsl xchg test stos loope push scas fwait stos test loope push mov push add add add xchg push adc adc xchg pop pop (bad) push pop notb hlt dec pop lock or add pop add push add push add dec and mov inc adc inc icebp aaa push xor push cmp sbb sbb cmpsb jno inc outsb push movsb outsl push test push mov push mov push lcall imul ja mov out adc js in adc pusha aam jno jle fistpll ret jp int add jo xlat jge fisttpl xor sub sub in push das xchg bndldx loope popf and add mov sbb add add push pushf adc or lcall pop pop lock in add adc out add push jecxz dec push leave adc pop mov sbb xlat add cmp fwait cmp fwait sbb loop push or pop mov pop test pop lods xor sub mov add and mov xor xchg xor divb adc xor in pop out pop (bad) xor ret cmp (bad) and lds pop ret xor (bad) xor xchg sub cmp sbbl loope push add cmpsl add aaa rorl pop or adc insl test out lods call cwtl inc jae or mov imul test or xchg adc push pop flds dec fsubrp repnz jbe jecxz and sbb fldl dec dec insl pop push rclb sbb and or jecxz imul jnp push repz fwait or in add (bad) fldl adc adc push push cld xor adc add pop xor das adc sbb mov or bound adc adc push shrd mov adc cmp cmp adc pop cmp or rcll bound aad pop lcall dec mov adc pop fwait cmp nop out sbb adc lret popf add sub or and mov cld xchg shr add shrl or adc inc int and cmp inc sti ljmp pop push out out cmpsl adc cli nop loope jp push mov adc sbb scas add das push xchg push adc add dec adc sub and adc (bad) adc mov out jp cli adc js add adc xlat adc icebp mov sub xor bound mov loopne inc mov ljmp lahf adc pop and adc test lods decb mov push jp lcall inc or cwtl pop stc mov adc ss jle fbld loope mov or inc adc ret dec rclb in push emms and outsb fstp push nop insb mov (bad) scas adcb mov or add les das mov jmp ret loope sbb lods ficomp adc push push fisttpll arpl sbbl push xchg dec ret in inc adc mov insl fwait iret ds cltd or hlt and fs or insl xlat push dec out repz arpl into stos adc cs push insl aad repnz adc icebp pop cmp jno insl xchg and dec dec adc and push ds movsbl (bad) jecxz cmp fisttp push mov repnz fidivr push mov in adcl (bad) int call ja mov or mov inc sbb cmpsb popf mov sub add loopne test jge fwait ret fisubr jae popf mov mov adc adc mov pop fs leave pop cmp cld or add int3 dec nop stos outsl int rolb push or mov dec decb sti mov out or mov rorb adc mov push insb mov (bad) lret ljmp (bad) fs in (bad) push lcall jno (bad) dec mov inc dec adc or mov sarb push mov adc popf test adc pop cmp int3 dec jbe (bad) adc aas out pop mov jnp jle mov adc repnz push cmpsl or out adc lods mov scas mov fcoms cmovns mov xor daa adc pop add rcl adc imul fldcw cmp adc mov push stos test je pop or adc add mov dec rclb int or (bad) adc adc mov mov rcll xor adc sbb mov adcl jns in push mov test add xchg fwait pop mov test xchg lahf sbb lea xchg (bad) fcoms mov xchg cltd sbb sbbl jmp dec xchg mov push lods fwait scas mov mov sbb fwait scas stos loop mov loope push test mov mov test push mov mov lods out adc push mov inc cwtl sbb sbb sti push in dec mov inc xchg lock xchg in inc xchg loop xchg out xchg clc inc mov adc leave inc adc inc adc dec adc push pushf sbb sbb sbb sbb sti dec jmp xchg xor or or mov adc sbb push test lods stos loop push test lods fwait mov adc mov xchg jp cwtl jnp pushf jo call out jns sbb sbb sbb sbb sbb sbb sti jo jno fwait outsb xchg sub xchg aas imul mov adc or adc ja add sbb sbb loop push mov mov mov sahf mov pop shr or out add ljmp adc pop repz add fildl repz repz mov pop adc sbb xor adc xchg add sub lods xchg mov mov sbb movsl or fwait lret orl sbb loope push repz xchg mov cmp add cmpsl leave adc and les push mov push mov es ret xchg mov adc lock adc subl das pop mov xor push rcrl dec xchg or dec pop sbb jp or jnp adc mov mov enter daa mov adc fist adc xchg adc sbb add adc add (bad) adc push xor adc push adc sub adc lret fmull fstps push lret ljmp or repz mov (bad) inc jbe or sbb add sub cmp pop adc aas test test bound pop pop jle pop jle mov sahf loopne dec lods inc ljmp jl inc adc iret jge jle inc pusha mov call out jns adc mov or rcll and in add fisubl sbb rol or in and adc std call cmp mov out adc pop and shrb sti outsl inc adc dec aam imul test int3 inc das add addl outsl xor adc or dec pop or movsl add adc wrmsr xchg gs xor pop mov fwait adc outsb (bad) xchg hlt int3 xor aaa jno ss sbb popf cmp sbb es (bad) faddl adc fcmovb sbb cmp cmp mov adc dec push xor mov pop mov cmp aas add andl or and and adc jbe test sbb mov or mov test mov and loopne out arpl or inc xchg std (bad) mov sub push cmp nop jne test (bad) ds pop movsb pop inc mov repz jecxz popa jmp (bad) or mov insl xor pop pop in dec and das ror xchg test mov mov adc test or rcrl sbb fwait pop repz popf inc mov or mov push adc rclb aad aaa add ds sti pushf cli pop mov push mov or mov fcoms push cmp sti repz (bad) mov adc push mov or sbb adc or xrelease dec ds adc outsl adc adc lahf enter sub inc adc movsl add mov (bad) fiaddl adc add and and rcrl inc neg imul nop push xor stc xchg or dec std jmp insl add xchg lods push mov in adc push mov call int3 imul push repnz adc insb out adc aaa mov in adc add cmp xchg xor pusha push scas adc (bad) std xlat (bad) outsl sahf cwtl jge adc test clc or dec je xor pusha std fbstp js add or or push stos pushf mov jb lret jo cmp int3 test or jae sub sbb cmp and adc repz mov sub fcoms (bad) jmp cmp int3 mov xor insl adc add mov iret lret sub adc mov test cmp cld adc mov xchg aam adc inc adc and jge adc sbb ja out adc push mov lcall and push xchg out push clc (bad) mov add (bad) mov out mov roll rcrl rorl aas adcl cmp pop das cltd pop sub add add test inc mov test lods in mov add adc adc pop out pop (bad) test cld mov mov ret dec push (bad) stos push lds pop mov aas mov xor sub pop mov add add mov mov push mov xchg inc jecxz dec push pushf inc push test xchg (bad) push push out push push ljmp inc mov dec push pop push pop xlat push pop fistl lds rcll push sbb add push add push add dec add push aaa pop push pop push rclb push adc dec push pop inc cmovno cmovbe mov sbb pop xchg ja xchg push xchg imul js xchg jge xchg jo cli jno outsb add outsl add push ljmp insl jecxz dec push shrl outsb push lret ja iret jp and daa js and and push pop jle add pop jp adc adc sbb jecxz push mov les add rolb pop aam add mov pop cli add incb in jecxz into push out push fistpl fist jno (bad) fisttpll fild pop jecxz int3 mov adc adc pop and mov add nopl or icebp mov mov mov and xchg cmp mov push aam in sbbl sbb ds lret mov repnz adc xor adc loope push les mov cmp xchg and aam in mov shrl push push fs cmpsb add jns mov adc xor sbb or popa add adc sbb or adc push add push mov pop mov adc jo (bad) fistpll adc pop dec adc cmp (bad) adc jnp push in pop test sub not dec repz adc mov fldlg2 xor test add das enter push setge push fldcw bound out xchg add dec insb push (bad) lock loope mov and xchg enter repnz adc and dec fsubs mov push and sbb popa insl ret push ds bound dec imul loop adc mov jl mov repz fwait inc push icebp aam push in das mov adc es jne push push mov ds adc (bad) pop scas mov mov outsb test push (bad) lret pop jmp das out adc dec push adc test inc ja adc stc rcr jbe lcallw ret adc pushf imul (bad) jle adc jnp adc inc in movsb adc adc outsl dec pop push push out xchg jno adc pop cmp out xor stos add leave int sbb outsl push mov fstpl ret out inc js (bad) sar jbe inc not xchg arpl inc and out and jle (bad) rorb dec fucomi cmp push dec sbb sbb push pop sbb adc stos adc jmp dec js push cmp dec ljmp xchg lret pop test xchg rep dec sub (bad) push outsl mov jmp mov adc and js mov rorb (bad) out repz pop xchg pop push cli rsqrtps adc xchg xor xor aaa ljmp clc sbb arpl das repz xchg adc push imul int jl adc ljmp xchg cmpsb out xchg cmp pop int ljmp push sub adc in orl mov mov mov popa adc in cmp add in jle xchg divb and xor pop repz cld (bad) stc das cmp pop mov ds fild lret cmp movsb adc call adc insb test adc outsb xlat imul pushf lret adc iret mov int dec je push sbb adc cmpsl mov jne adc cmp xchg in mov xchg mov (bad) aaa adc mov out sub mov push xchg adc ds repz aas push adc lcall adc inc xchg sbb jmp jne xlat mov adc fstp push push and popf sbb mov fs sub faddl adc or fsts adc push jg mov cmp pop cmp cmp adc repz push stc pop lds inc lea ret pop lahf leave pop imul mov mov xor repz popa cmpb adc fs shrl test lea push adc leave fstpl dec jge adc std dec dec xadd push repz repnz imul lea stos adc (bad) in mov scas xchg (bad) leave adc cmp jo push adc fwait mov jmp dec adc xchg mov mov (bad) sbb mov xchg test lcall mov adcl popf sbb jl dec xchg fwait sbb fwait mov sbbl loope push mov push stos xchg lods fcomps mov mov test push mov lea mov mov sbb mov test stos sbb test test adc adc adc adc (bad) sbb sbb sbb sbb sbb in repz push repz repz repz repz cmpl push sbb inc push inc fwait inc inc loop push inc mov push inc fwait inc dec loop push push xchg pop sbb jo jno outsb outsl loop push imul imul jp jnp js insl fwait pusha jno jle jg jp jnp jo jge push jns jle ja push imul jno outsb sbb add fwait add dec fwait pop sbb cmpl or sbb mov loope push push in push adc add fwait or sbb add dec add sbb adc adc pushf (bad) xor adc loope aam sbb sub (bad) xchg clc adc push lret fnstenv xor pop aad mov push aas (bad) loope loop push or pop cmp adc pop repz jo pop adc lcall ds sti xchg adc fdivrl nop or (bad) cmc mov fmuls add imul push xchg je lahf push xchg push fimull push or jecxz push nop pop xor pop push mov outsl pop adc xchg repz scas xor or push push or (bad) div mov lea push adc lret adc xchg adc (bad) jg mov jl pop add ljmp adc push repz add mov bound adc int3 insb push or lea fidiv adc negb loopne adc outsb (bad) jmp and add adc mov aas inc (bad) fstl sub dec in aad sbb push mov xchg fucomp cmp xchg jno adc dec xchg add enter fwait cltd adc dec in fs dec lcall adc dec jo mov das add xorl xchg sbb enter lahf jp adc sti inc inc mov mov movd repnz inc sub fsubs adc out mov and dec adc sbb mov es cld push adc test imul sub push adcl out les cmp adc ja jb mov mov lcall adc decb mov pusha clc adc cli sbb or push mov push dec mov pop adc test adc repnz adc std xor adc and jmp add in fsubrs lds pusha cmp jno or mov adc xor out jl xchg repz hlt adc shr repz lods cmc lea xchg xchg mov adc fdivl mov rcrl xor sarb sti repnz out or jmp ljmp bound fcompl (bad) repnz xchg test insb add or mov adc mov vcvttss2si repnz mov sbb cli rcrb hlt adc out and cmp or insb cli mov sbb or add sbb adc xor int adc mov jnp adc sub add adc mov leave ds pop xor mov or sub add mov in ja adc es (bad) (bad) adc and daa int adc pop mov jl inc es sbb ss adc xor mov in (bad) popf push xor cld ljmp adc icebp loope mov sbb and iret and dec imul mov (bad) and or push dec das movl inc cmp adc daa ja repnz adc mov daa adc cmpsb cmp mov xchg jp add cld rolb loopne xchg cmp mov mov fisttp mov iret (bad) stos pop shrb xor dec push iret pushf mov mov outsl mov stos adc sub jmp mov and adc adc jge adc sub scas (bad) lcall pushf sub adc xchg enter lods (bad) test adcb sahf das into pop pop cmp mov adc lock stos add stc adc daa push fldcw lcall fcomip jge inc jo cmp mov adc fwait mov pushf adc xchg dec adc adcl popf lcall fcoms fwait sahf loop push mov lahf push pushf fwait orl mov mov (bad) sbb mov xchg test lcall mov movsl push mov loope push mov mov push lods fwait scas mov mov sbb fwait scas stos loop mov loope push test mov mov jmp mov xor push or adc mov push mov mov mov mov mov mov loop rolb inc adc inc adc inc adc inc adc inc adc inc rcr pop pop flds roll dec pop (bad) push pop sub das pop pop sub sub inc push push or pop push push sbb sbb rorb pop fwait mov loop push mov pop sahf insl pop lcall and push xchg loop push out push clc jge hlt add idivb out jle (bad) ja xlat push shrl aad adc jge xlat jo aas jno pop outsb pop cmp pop das imul pusha pop add pop add add ja inc jp stos sbb in mov mov jecxz int3 push pushf adc mov adc adc (bad) pop adc sbb clc add pop add cli or (bad) adc pop and push lret add add add sub pop sub pop and iret sbb add add jae sahf adc adc repz je (bad) adc jecxz push sub sti push lahf xchg (bad) shl push xor dec mov sbb push push cmp iret add ds lret mov aaa sub cmp xchg insl adc shrb sbb int pop push xchg out das or outsb adc add prefetch or mov inc or adc or jae movsl xchg popf xor fist jns push call pop mov adc repz ret adc pop (bad) sbb fdivl sub xchg mov cltd pop add fcoml add jecxz shlb std pusha sbb rcll push stos dec ljmp fs cmc or add push outsl sbb mov mov sbb push adc adc jecxz ja cmpsl idivl adc mov adc mov sub dec cmp mov jg mov dec inc dec sbb (bad) dec adc int dec cld scas std dec jno in inc jmp dec pop lret repnz (bad) mov adc pop outsb in mul sub stos push sub std pop pop xchg cmp ds mov movsb sub bound jg pop cmp push bound loopne inc xor int3 and mov sbb sarb cli mov mov popf adc fnop lea test adc loope insl repz pop incb and add dec adc jg aam (bad) outsb aad out fsubrs cs imul call rcll xchg cmpsl push test ret shr outsl (bad) loopne sub loop mov adc push cmp adc mov cmp ret clc xlat gs ds out pushf lods and pop adc or (bad) adc fsubrs scas or in add adc mov cmpsb xchg lret and divb pusha shl sarb loope xchg pop adc jns mov (bad) repnz jmp outsl xor or mov jo cld (bad) add adc xchg mov push insl sbb push or xlat jb int3 in js nop in or cmpsl mov mov adc aam jge clc (bad) sbb push sbbb (bad) rep rcrb cmp mov into enter pop sub jp xor push lret gs rol js in stc mov pop adc ret aam outsb mov adc adc dec loop cwtl mov stos std sbb push rcrb repz mov rcrb mov lret in mov sub notl add jmp jg pop push loopne adc sub xchg in adc imull adc dec shr lret call std xchg inc xchg je (bad) insb imul rcl outsb adcl push loopne (bad) aad push jge adc pushf (bad) mov sbb rol sahf scas cli into jle adc fdivrs in push xchg pop mov mov insb fstl or (bad) fsubl pop loop stos pop stos (bad) adc pusha inc add and outsl enter out push xchg and ljmp movsb add or add xor jl cmpsb adc data16 ret xlat shufps les cmc sarl iret jo add daa add rorl ja fs sarb outsb inc insl rcl xor adc add int jno sti adc dec ficoml sub dec addr16 cmpsl negb jmp push lock pop adc ja dec add outsl cmpl sub sub pop xchg push xchg pop adc push out jae adc sbb pop pop lahf lret adc sub adc sbb test adc mov out and inc adc test push adc fwait stos (bad) ja xor adc gs add push sahf xchg test mov mov fwait lahf pushf loop mov loope push mov mov loope push mov push xchg xchg (bad) sbb popf lcall fcoms fwait sahf loop push lods xchg scas sbb movsl push test stos sbb test test mov mov test sbb insl push mov fwait mov lods xchg scas pop test adc scas sti dec jmp xchg mov xchg cwtl inc xchg pushf inc xchg (bad) inc mov adc mov xchg inc adc dec adc push adc push adc pop adc inc adc inc adc dec sbb test push push fwait push push loop push push mov push push fwait push dec loop push inc xchg pop sbb push push dec fwait inc jg jp jnp jo jge fwait jns jle ja push imul push jge jo loop push outsl xchg push imul push insl in push imul js loop push jno jle jg jp jnp jo loop push adc add fwait or sbb add jl into mov push add sbb loope cmp xchg pop sbb fwait adc (bad) sbb test adc push mov push mov push cmpb and (bad) and mov xchg and lock add and out add cmp loopne add ss sub (bad) add and dec cmp add icebp xor and cmp sbb mov add push mov (bad) mov add push inc bound or insb (bad) adc pop lret push insl xchg adc mov jns mov scas mov jne adc fstps add in dec sbb sbb out adc loop add or pop test push mov push adc xor sbb nop (bad) push and adc mov pop jmp sub adc adc das push mov or pop mov mov js (bad) mov popa repz xchg iret in or into repnz fcoms sbb cmc bndldx push mov popf notb int push mov cld ja cmp fisttp sub imul call rcll dec inc mov lods push or rdtsc dec xchg ja (bad) cwtl adc sbb jns cmp pushf cmpsl adc pop jae jp adc and flds ljmp aas sarl jnp rorb pop scas ret inc rolb jae enter inc jnp es in in loop jge lds add movsb inc sbb pop sbb adc jns adc pop mov xor or and dec pop iret shr in rolb (bad) sub mov or rorl push jmp pop enter sbb wrmsr adc cmp cmpsb push fdivs push adc outsb push or jne xor cmpsb add sbb mov inc in gs nop jg pop pop movlps cmp std (bad) repz jo mov adc pop cld mov lahf (bad) std cmpl push (bad) out arpl add inc pop out mov xchg cmp inc pop and sti js and adc jmp pusha inc int3 test daa adc out lods push lahf dec sbb jg inc push (bad) (bad) mov adc test shr daa test dec ret push mov dec orl das mov in mov xchg pushf jecxz rorb pop mov mov out test mov int icebp push repz sbb into mov ss cmp cmc inc hlt lea adc push mov stc js fisttpl adc push jb lock stc ficoml jp sti les leave mov pop adc outsb mov cld inc std ret decl add mov or mul leave sbb outsb cmp adc loopne pop xchg in adc data16 in fld1 (bad) pop adc push xor mov test jge imul jne (bad) xor sub stos mov (bad) lret in dec call gs mov into adc jnp mov sub repnz (bad) jg rcll dec out out in xor mov (bad) xor sbb sar rcrl std adc jno int3 push adcb adc mov divl cwtl arpl fdivs fisttpl adc cli fsincos pop fwait and repz jg fiadd (bad) repz pushf add std push scas and adc mov adcl test js lret int3 push adc adc mov das movsl mov adc adc cmp adc mov lea fwait mov mov loop push lcall push mov push lcall sbb fwait push sahf xchg test mov mov fwait lahf pushf loop push mov scas std loop mov loope push test mov mov test push mov mov fcoms mov lods xchg scas sbb fwait movsl test stos push lods xchg scas sbb adc repz repz repz mov push xchg mov xchg xchg inc xchg xchg inc xchg nop dec jno push pushf sbb sbb sbb sbb sbb in repz push repz lret dec repz inc repz inc repz repz push repz push push daa (bad) loope and xor xchg pop sbb fwait sbb js sbb sti jo jno fwait outsb xchg (bad) outsl xchg mov nop imul mov adc out imul ja loopne pushf sbb sbb sbb sbb sti jno jle mov ret jp daa loope push cmp sub xchg or or fwait or xchg mov enter push mov dec push xchg add pop push sahf sbb lcall or lock pop push iret adc rcll adc adc fsts lret pop add popa xchg adc jns fwait add loop push push xchg adc add add xchg and and cmp sub fwait and xor xchg xor push xor push xor xor cmp and push loope push cmp and loop push es and and add jae push or add add add cmc push mov sub mov mov out add pop add add sub je jno xor adc pop jle or add int xchg scas push (bad) adcl push adc ret test das rcrl push add mov jmp enter adc shrb jae xchg push idivl sbb cmpsb adc test inc pop or adcb dec adc mov ja adc xor push cmp push bound inc adc cmpsb or das inc jno stos mov mov mov mov stos subl add or sbb sub xor mov xchg xor stos push mov sbb or int3 lcall mov push add cltd in (bad) lret mov decb sbb mov pop cld push push push int sub cmp adc outsb out mov jnp add test sbb push je adc xor jo sahf adc cwtl stos sbb sbb cld icebp adc adc pop jg mov test hlt push lods mov into or sub xchg or push mov pop or mov xor xchg (bad) xchg or lahf or adc and lods mov cmp adc imul cli inc std xchg mov pop add repz jb rclb (bad) mov out adc and mov adc call in fs stos add inc mov sbb lcall push mov sub adc adc inc dec jg sub jmp rcll cmp shll adc imul stos dec lods (bad) bswap or loopne sub sub dec pop loope insb mov adc push xor nop push mov sbb add xchg pusha xor sbb repz xchg mov out mov ja dec push mov push lahf adc cltd and mov mov mov jno lcall push lcall sbb xor cwtl cmp inc sahf scas leave xor add in or sub sub ret dec mov inc clc dec ficoml loopne and xor and adc (bad) cld test add adc dec lcall sbb (bad) xor mov dec addr16 call xchg cs xchg xorl fdivl mov into xor or stos lds sets adc les aad (bad) sti xchg cmp xchg fbstp or xchg ja,pt push popf pop sbb adc adc cmp pop in mov popf sub jecxz std sarl cs lods adcl stos subl sbb dec icebp xchg pop adc xchg mov je out inc mov adc mov mov xchg mov pop pop (bad) dec adc inc or mov mov jbe dec mov push mov rorl xor push adc bound adc push (bad) xchg mov and push popf fwait lcall icebp push fwait fwait sahf test mov xchg xchg sbb fwait mov xchg mov popl test xchg fucom stos push movsl xchg mov push mov mov mov fwait lods scas loop push mov loope push stos fwait lods scas loop push test fwait test loop push mov loope push movsl bound adc cmpsb push push mov mov add xchg push adc lcall pop pop hlt push pop lock pop repnz push inc and push in inc push fldl flds movl inc adc inc icebp cmp fwait cmp loop push cmp fwait sbb loop push or mov push stos outsb push test push lods jp mov mov mov mov add pop jle loopne pop cld jp bnd divb call fnstcw sarl ja (bad) push dec imul xchg sub sub (bad) sbb loope push sbb or sbb mov pop mov mov and push lcall adc mov hlt pop pop notb pop out pop mov add add aad add push add adc pop pop fwait cmp sub sbb dec mov push adc test pop lods and scas cmp xor dec adc xor add icebp xchg mov mov push push xchg and aam in mov adc es out icebp adc sbb jmp lahf or xor xchg in cli fcoml stos mov sub (bad) cmp sar dec or test adc into sbb cltd dec push mov xchg jo sbb push sbb shlb push push jmp scas sbb adc add sbb mov mov adc jns sub adc scas or rclb (bad) jo cmpsl pop sub rcl sbbl adc or leave adc add push (bad) adc adc mov adc outsb add cmp or pop and add ja (bad) mov jno sbb repnz or adc pop add nop adc (bad) not adc cmpb push inc add push adc lret stos mov jns rcrb shrd jno xchg ds fildll mov or imul rcll cwtl adc les adc jns fnop gs sub out xor push iret stc dec fmuls sahf scas fs addr16 jecxz adc flds xor push or iret sbb jecxz cmpsl jle lea mov inc cmp sbb adc aaa adc sbb add clc add sub out data16 adc sahf sub lods add iret xor or loopne and outsb out int3 or push xor jb adc sub out addr16 push imul sub dec jb adc xlat (bad) xor aaa pop xchg xor out or scas xchg and pop add adc fistpl pop jp (bad) adc ret cmp dec jo fstl jnp mov rcr mov adc mov mov clc int ja adc fcomip and or mov sub dec add push scas or push adc lcall subl mov xchg adc mov aad repnz inc mov xor pop clc mov popa adc sbb or pop sbb sbb adc outsl xchg mov adc orl dec push dec mov daa sbb leave cld mov cmpsl and sub scas add adc jg mov and scas negb and ja mov test adc outsl or mov test or xor cli rclb sbb ret mov adc xchg push outsl cld xchg adc cmp sti int3 adc decl lret stc in mov mov xchg and sahf std mov arpl or dec pop ljmp dec loop sub dec mov imul mov adc cmpsb or in cmpsl popa cmp and push push mov mov out inc pusha (bad) repz mov or adc out call adc xor cmp sarl inc jg fcmovb mov insb mov jmp in adc dec or lret push sub xchg dec aam xor ds hlt ret stos xchg xchg les out out xor je xor lea call cs iret jmp pusha xor insb xchg dec push inc xor les ret push jnp adc pop aad jno shlb dec mov mov xor xchg sbb data16 fwait jp pop and pop cs movsb call xor pop inc adc push bound pop leave fisubr cmp cmc jle adc xchg cmp cwtl cmpl push adc dec dec leave xchg pusha xchg insb aaa or sbb cmp xchg jle sub add mov addr16 rcr xor repz adc inc and jp and and mov aad jnp pop (bad) jo or jecxz sbb mov sub lcall dec ror into jmp xor cmc int out pop add fisttpll mov stos scas out insl dec add call jmp adc insl adc and ja push out push xchg dec push mov push mov sub adc bound adc sbb fwait mov mov push sbbl mov fwait mov mov xchg lcall fwait mov xchg lcall in push mov add scas loop push mov loope push stos fwait lods scas loop push test fwait test loop push mov loope push movsl fwait mov mov test mov mov adc aam dec push inc inc pop sub adc inc xchg inc sbb fwait inc loop push dec xchg push sbb pop push inc fwait inc dec loop push push xchg push sbb push push push in push push xchg push sbb inc push inc fwait pop push loop push jno jle jg jp jnp jo and push ja push loop push jge jo jno outsb push outsl fwait push loop push insl mov push imul sbb pusha push jno jle loop push adc fwait adc pop mov loope push add mov loope push add add loop push push mov cmp pop push sbb icebp mov xchg add mov fwait adc adc push mov push mov mov adc adc push pop and add add and loopne jecxz dec push (bad) and mulb push lret cmp xor int push lret and and and xor add adc mov sbb mov rol sbb cmpl gs sbb xchg adc jg adc mov cmp or adc pop aam push jg push xchg adc pushf lock ret enter and in mov xchg jns cltd in xchg adc cmp adc xchg insl xor jne aam sub mov cmpsl adc insb or adc test sub xchg std (bad) adc push aam fcomip iret adc sahf mov pusha adc or loop sbb adc mov sbb das or mov add push out (bad) pusha add adc pop cmpsl adc sbb rcll fbstp (bad) lret addr16 adc mov push scas inc sub add outsb lds insl fsubs jnp adc inc scas and and adc addr16 cmp mov jbe xchg (bad) xchg or int3 mov xchg push xchg adc iret mov cmp sbb lcall adc aam inc cmp imul (bad) test lock (bad) mov xchg or movsb ljmp ret sbb outsb jne repz rorl pop lods pop adc push int3 jecxz adc jmp shr repz lock aaa xchg (bad) cmp sbb xor insb dec mov push mov cmp or hlt jge repnz mov sbb test adc add jnp fcmovu (bad) inc jp push loopne fdivl or xchg adc mov jge adc arpl (bad) jo std out xchg jle loop shl or sub adc lods repz fsubr adc imul jecxz add or add xor jae int3 out jno gs (bad) jns adc ljmp mov adc jnp,pt jge sbb mov dec lcall jl sub add xor jae cmp xchg mov sbbl mov es or mov or adc add xor adc sub adc push sub sarb divl add lods xchg bound adc cmp cs sbb cmp adc js mov add pop outsl movlps cli jl fcoml cmp lea dec fs gs adc cs in mov jecxz call adc jne and sti sti dec pop sbb push (bad) loope addr16 out (bad) adc adc or and ret (bad) jo pop data16 xor sub push adc sti (bad) cmp and add cli ret jmp insb fildll fcoml push sbb adc mov sbb lcall add insl into dec dec repnz xor pushf adc loope xchg adc insl mov mov ljmp daa dec (bad) aam ss dec adc xchg mov pop mov dec repz mov xchg xchg ficomp sahf cmp mov fisttpl pop repnz ljmp loope lcall adc lods add pop pop inc rcrl mov adc dec fisttp mov pop hlt bound (bad) mov loope das sbb jp daa mov (bad) dec fs es pop (bad) adc pusha inc int aam loope out xchg mov lds fmull adc rcll repz ss ret adc inc fadd sbb dec add xor enter repz sub arpl adc add cmp scas dec out lds sub jbe fwait inc sahf adc ljmp adcb sahf push mov sbb les bound xor mov mov fwait mov das repz (bad) xor xchg test call xchg ljmp mov sahf adc popf adc lcall adc cmp fwait xor sahf xor test mov sbb mov xorl push lods fwait mov loop push movsb xchg test mov xchg mov sbb outsl repz stos repz movsl mov mov hlt mov sarl ret sbb sbb sbb sbb sbb sti movsl jmp repz lods repz mov mov push mov push sbbb xchg inc (bad) sti inc in dec mov push xchg call xchg cli push xchg (bad) push xchg lock mov adc rcll fsts fisttpl fild sbb sbb sbb sbb sti dec jmp xchg sub add add mov adc adc push mov mov loop push mov mov nop jno adc xchg outsl adc adc cld sbb sbb sbb sbb sbb sbb sbb sbb sti pusha in jno fwait jle and xchg aaa jnp xor sub adc adc ja or inc adc js push loope cmp xchg add add add add pop push sbb mov loope push push fwait add or jl xchg adc adc pop push sbb add add loop push sbb and and mov and and fwait xor and xor fwait xor xor xor loop push es sub xor xor fwait and loop mov inc add insb adc mov push in adc repz push xchg mov (bad) dec pop xchg mov sbb adc mov adc ret xor dec xor inc sub adc enter mov imull adc jge push popa cwtl lret shl push scas mov mov or cltd add jp push xor adcb pop data16 xchg addr16 or js pop cmp (bad) adc stos mov adc cmpsb cmpsl push adc lods or adc lret fst sbb pop push push adc adc pop adc dec sbb adc das sbb xor sbb sbb lcall or adc and (bad) adc dec adc mov sbbl dec addr16 xor or mov (bad) int sbb push mov add sbb pop jnp fnstcw aaa and test mov cmc or cli xchg adc (bad) cmp mov out pop je push mov adc (bad) cmp xchg decl push sti xchg pop cmp adc popf sub movsb adc dec loop dec sarb imul test movsb inc pop les inc push cs mov dec adc test push xor call lock adc mov add cmpb test adc mov or adc jmp mov (bad) int ljmp nop into ror jbe decl cli adc js adc out mov or data16 lret push xlat int3 mov xor lock outsb jno fbstp or fldl pop fdivp xor cltd jg mov mov (bad) mov sti jb add xor cli mov js repz leave movsl imul (bad) clc push mov (bad) pop jnp pop push inc aad js loop insl mov subl mov mov dec push imul loope cmp adc ret in cmpsl test addr16 sahf (bad) mulb fwait out xchg sbb mov sarl mov cld xchg repz repnz std xchg in cmp cmc pop fs fwait adc cli enter mov add push ljmp sub dec xorl mov (bad) sub out adc or cmp jnp (bad) adc dec test and xchg sub repz inc push daa hlt adc ss jb xchg stos xor sub fmuls loope mov push jg jns cmp fildl add add push mov adc sbb fcmovnb adc adc stc cmpsb adc adc pop pushf sbb cwtl jle mov sbb fsubrp add cmpsl in loopne nop test fisubrl imul adc mov push mov les ret pop jecxz inc jmp xchg pop add adc movsb dec out mov inc rcll iret dec icebp shlw pop or or cld (bad) std push cmp fucomi por mov or adc adc jne fsubr mov add adc sti lea sub adc mov ret lea enter adc adc sti adc jl les mov js adc mov fwait lcall mov and push popf fwait lcall icebp push fwait fwait sahf test mov xchg xchg sbb fwait mov xchg mov popl test mov xchg mov fsub mov push mov lods push scas xchg mov mov fwait test loop push scas xchg stos sbb test mov loope push test dec and push movsb push push test push mov push mov push lcall push adc mov out adc pop adc push adc push aam dec push inc add inc add inc add inc add inc add inc jecxz dec xchg xor sub sub in push das xchg bndldx loope popf and imul pusha adc mov pop mov pop lcall js sahf insl pop lcall add jg in jp loop add jo (bad) jge lret dec push leave jns sarl (bad) ja xlat push cmp aas loope push cmp sbb fwait or mov add jg push lret adc in push scas push mov push mov add aam jecxz dec mov or notb in pop out pop (bad) pop pop ret sbb movl lds (bad) adc pop add add add cmp movhps or inc sbb add icebp mov mov cmp mov push sub xchg add loope,pn push negl adc xchg into sbb mov fldt cmp cmpl cmpsl xor push push and mov adc daa inc or pusha scas sub mov cwtl iret hlt add push mov cmp add fwait xchg inc rorl add mov cmpsb jp or fs or pop adc adc scas es adc rorl jl jecxz push and add fmul push mov (bad) adc loop push pusha push stc dec add (bad) adc xchg nop mov cmp hlt add mov push sbb loopne out add pop add mov adc pop sbb test inc xor adcb shlb clc inc jnp ss shll call adc clc dec adc sti push jge sbb stos cmpsb adc into insl nop add (bad) fsts fcoms mov push imul mov in (bad) and pop std mov jnp mov (bad) adc adc (bad) (bad) dec mov and jge fucomi fdivl inc mov pop push mov xchg test sbb ds sbb scas leave lret xchg in mov sub xor adc or inc fs outsb add cmp dec pop out arpl es inc and (bad) loopne inc adc cmpsl xchg dec mov or nop rcr mov adc fadds push mov pop lock xor adc repz sbb xor pop les sbb imul jb mov jae cs mov or rcll out mov sbb pusha iret sub push adc je xor shrb sub dec aam lods add iret mov adc inc mov push fnsave jb mov enter xor adc lods pop int adc push fcmovnbe pop repz cli adc gs adc dec jbe jge adc scas pop vmwrite jo ja jnp fucom dec or or out cmp jmp dec dec sbb or jne fistl add add aas sahf loopne pop in adc inc or outsb jnp adc and push pop lahf cmp or pop (bad) mov mov pop (bad) jle jl loopne sbb push jns add movsl movlps lret in nop outsb pushf outsl xor lret fistl outsb in adc mov adc cld dec stc or add xchg adc lock outsl repz jne adc pop cmc aam adc xchg notl cld (bad) (bad) cmp pop (bad) in loope loopne imul test sbb xchg int3 hlt int add daa std aam add adc adc or mov inc add es adc dec jmp ja cmp pop and repnz adc adc in inc xchg fcoms or mov sbb adc cld mov pop jg call rclb aaa sub mov sub js mov pushf jne popf sbb neg xchg pop std adc add xor sub adc fwait std lcall push mov (bad) sbb or rcrb adc fisttpll stos data16 or outsl jecxz push cmp adc push addl sbb sbb fucomp mov adc inc lea test test repz je jno xchg (bad) adc add mov fiaddl adc push (bad) mov adc aam out add adc mov sbb (bad) cwtl dec pop adc lcall imul pop sbb repz fstl push dec sbb shll lret test popf lock pop repnz (bad) pop mov sti ret push mov and in cs leave jl call sub iret mov jecxz xchg int3 add pusha into xor psubw out inc insb inc mov out enter adc pop adc icebp popf xchg inc jns push out sahf add pop sar cwtl ljmp (bad) add jecxz in fldln2 adc psrlw pop repnz xchg mov (bad) sti dec (bad) push adc lods repnz repz or pusha call push mov mov clc jmp adc dec (bad) and ja rolb loope push out mov dec (bad) xor shrl mov push or rclb jle inc jp xchg jecxz fisttpl adc stos xchg imul mov dec cmc mov pushf dec fdivl lds add out mov xor adc push inc imul (bad) sbb push push call adc ja lea aaa cmp xchg mov xchg cmp add pop hlt bound fistl into fnstcw lcall (bad) in xor std jge lahf or pop xchg scas sbb mov scas add push jge sbb pop repz mov add decb bound mov into cmp pop jmp scas cmp repz test adc xchg aas cmpsl in fisttpl mov fisub adc jo (bad) data16 mov pop adc test cwtl adc jl (bad) push inc sbb inc mov cmpsb mov adc cs mov fisttpl mov push popa mov inc dec mov gs stos (bad) sbb adc les jb jl sbb xchg repnz or scas mov dec repnz lcall add addr16 sub sbb aaa popa mov loop xlat (bad) hlt pop push xorl fucom cmp sbb and lods jg rclb shrb cmp (bad) and fild push sbb sub mov add adc aas mov loopne or iret adc sub stos lods cmp xchg cs shl push nop cmp sti adc mov das add test in jns popa xchg mov mov popf in in lcall roll adc pushf jb xor idivl inc jecxz sahf jg jo bound lcall add out mov adc dec lods jp aad mov inc repz mov adc inc lods or xor jmp fisubl lret cmc je xchg adc sbb in mov aas jl adcl adc scas mov pop dec adc inc cld adc (bad) adc das cld adc cmpsl int3 add adc cmp add daa xchg mov out mov mov adc add or cmp mov sti lds sbb popf mov ds repz xchg or or nop xorb push cmp fistp lahf lea sbb mov xchg push inc pop rclb repz adc js jl jnp (bad) pmuludq add fiadd hlt es mov popa xchg jne jle (bad) es adc mov dec arpl int in pop xchg push adc subl int mov mov push mov repz vunpckhps push data16 or jno dec (bad) jle adc xor sarl jecxz sarl adc adc lods sahf das jg (bad) nop hlt pop or jns (bad) jnp jge addr16 stos pop adc adc cmp add sbb pushf imul push test arpl adc push divb aaa or or pop pop adc push (bad) pop add addr16 repnz pop pop jb mov xor mov or cli adc (bad) jle mov sbb bts sbb movsb adc dec stc outsl jle int int3 cmpsl dec sahf dec (bad) lods mov enter leave mov jbe mov mov sbb mov lret in adc push mov sub lods adc cli iret sti dec in xor dec cmpsb mov adc mov jmp imul adc loopne mov pushf mov hlt lock mov xor popa sbb repz jp pop fcompl jns repz sbb fild in dec sbb scas pop xor aam pop add dec sub test jg inc or mov mov mov push pop xchg out xchg sub into cs adc sbb iret or hlt pop cmc mov (bad) xor push stc mov aam push fs cmp test gs js adc xor out pop push loopne mov xchg inc repnz aas pop sbb scas fisubr insb xor imul cld lea mov sti dec push fidiv in adc outsl lods in ss int test push adc pushf fldcw inc out sbb adc add xlat bound sbb adc or imul jno push icebp movsb roll adc adc adc add mov loope jae repz ss pop jl pop adc es adc out dec dec cld mov jnp sti jecxz fdivrp pushf adc (bad) jge adc mov cmp adcl add inc aas popf mov pushf jecxz ds inc fisubrl sbb and repz dec dec push add jns fistl enter imul and adc clc xlat cmpsl adc mov test xchg adc inc adc int3 (bad) pop mov popf mov adc push and fdivp call lret inc adc or outsb out pop scas adc pusha pop imul repz loop or push mov jnp mov nop insb ret dec or mov push adc lds sub int3 adc jle imull rclb and int3 push mov mov ja xor cmp int3 pop adc mov adc jl jo and pop pop jno adc arpl jne (bad) repnz jnp push fcompl enter rcrl int3 cmp push leave fsubp adc or sahf out clc pusha adc enter inc mov inc into and pop add bound hlt (bad) lods js popa imul mov jne mov adc pop mov cwtl adc inc jo cld mov out adc adc add adc lea ja cmp mov xor fcom push pop pop aam adc data16 or enter push add lods push out test sbb mov sbb mov xchg (bad) push or ja sbbb xchg repnz mov adc push jmp jno in les push push mov das movsl jns mov bound adc xchg add xor push push pop jge scas sbb rclb aas je nop mov add popa and bound adc dec mov test inc jb xchg test cmp mov rcr adc daa pop adc adc jno xchg bound aaa (bad) mov xor pop (bad) sbb sub repz jp or xchg repz push lea hlt push fcoml (bad) adc sbb outsl pop dec add orl mov push lcall loop popa scas mov adc pop in pop add repz (bad) out push pushf inc sbb arpl pop int3 sbb push jl cld nop fdivrp leave adc add mov lcall inc sub adc rorl or lea xor sub lods push insl jae xor shrl cwtl inc (bad) aaa adc pop stos sub in je push loope js popf adc push mov pop aad adc cld or cwtl xchg and xor xor sarb pop xorl test cld pop cmp arpl add movsl sbb mov mov mov lcall ret lock (bad) (bad) loop cmc adc mov sbb jmp sub add adc dec out add clc unpcklps push mov cmp test rorb adc (bad) mov fdivs jo sbb cwtl mov mov fwait pop in push js loope in inc pushf out adc mov adc xorl pop sub lahf adc fstl push jo dec mov outsb test sub imul pop mov or scas int3 mov not cmc push mov xchg loope inc xor push data16 or (bad) xchg push xchg fwait mov insl xchg in or adc mov dec pop mov cwtl cmp and fadds or inc xor out mov adc in inc push adc push enter fisttpl adc xchg jle mov adc (bad) push test pop sbb and scas dec and mov sbb or adc fwait addl and clc in xor lds and adc pop mov adc mov push mov push sbb mov add xor (bad) pop and cmpsl mov adc sub into add dec push dec dec push pop dec pop push lret stos xchg loope sub int3 lock pop pusha clc imul arpl scas adc nop sub dec repz test mull pop adc push mov aaa sbb mov sbb adc push and pop or xchg inc push xchg jnp xor mov gs xor mov aam fcoms sbb inc adc cmp or dec adc lods mov jmp pop jb cmpsb (bad) loop pusha aad int3 adc inc movsl cmp cmpsl repnz adc sbbb cli rcll and bound mov insl adc mov cmp cmp xchg sub xchg adc outsb dec cmpsl cltd pusha adc test push mov jb bndldx sub lret push push lods fsubrp xor icebp xor adc push adc adc or test inc inc add stos push mov mov adc dec sahf push mov pushf and out sub mov iret aaa rclb movsl adc push test adc cltd or or dec push mov pop push sbb (bad) sbb (bad) rclb or xchg pop out jl or sub (bad) (bad) out add inc adc inc bound movsb sbb je jle pop xchg inc test push movsl hlt cmpsl add out popf jle cld je pop ljmp insl pop adc movsb fsubrl pop out sub xchg iret stos or jmp add sub pop xor mov mov pop push inc mov and je test xchg jns lcall pop inc adc stc cmpl (bad) into stos outsb (bad) add aaa ss scas fistp dec lea int3 adc in jae sub xor imul mov leave mov adc cmpsl push testl xor jbe pop shll xchg and push fdivrl ret pop inc sti inc mov push or icebp sti cwtl sbb js inc es jg adc pop jmp jne dec sarl jne adc popf lods sahf dec cld insl adc arpl imul jno push aam push and (bad) push adc adc mov mov adc ret ret mov pop imul sbb sbb and adc scas mov push rolb sub mov mov xor scas adc into or mov xor popf jge sub jnp,pt xchg mov jae sbb jbe icebp mov (bad) xchg xchg mov rorl xchg mov ds cmp fsubl mov popl lcall pushf stos fisttpll imul jae sbb sub push jne orl adc lret xor andl push pop popa sti test push push jecxz loop xchg out test stc mov mov insb pop or (bad) (bad) repnz sbb adc mov pop daa (bad) dec pusha mov dec jp adc or mov push nop das xchg lret je jns adc clc dec out lret les mov movsb xchg cmpsb xchg daa mov push hlt push repz adc mov mov aas mov inc adc mov ret pop lcall enter adc pushl cwtl cmp add mov subb mov jmp enter scas adc dec decb add arpl jecxz xchg mov push orb repz pop test mov push mov cmp xlat jge sbb push int andl and test sub repz stos xor adc or adc lahf or lods gs mov ss adc xor xchg mov dec push dec es dec lods adc add xchg repnz (bad) add sbb roll adc inc adc adc dec push xchg cmp cwtl je imul or adc adc push jecxz mov adc test adc out outsl or movsl or notl mov dec add adc push adc or dec (bad) adc mov fs mov cmpsl cmp push jg cltd int3 or stos or mov or add or clts lcall adc add cwtl repz push push or jbe mov or pop popf mov pop icebp fnstcw mov aas daa push pop and (bad) out mov repz inc stc scas pop insb cmc pop adc add hlt mov mov sub and and repz fwait shll fidivr mov je fimull mov mov push mov leave lret test pop out xchg stos adc test push int3 mov fs loop add push adc (bad) aaa add add adc (bad) lods enter jns test adc outsl sti sbb daa or fxrstor mov xchg mov push loop mov mov adc cli fdivrs (bad) repz and adc sti pause cli pop sbb (bad) mov adc jns jle aaa mov and neg sbb mov jle sub mov xchg and lods xor push or xchg add subl popa test and sbb gs push sub adc dec inc inc ds data16 fisttpll jmp mov add cld pop adc movsl xor cmp dec sbbb xor mov in int3 out iret stos jno lods (bad) adc sub dec mov loop ret mov lock push adc std mov mov mul xor lods mov dec add lods sub inc aam mov cltd xchg fdivs xchg nop xchg shrb push mov fisttp das and jge negl sar fdivrs out mov dec xchg in push out xchg or je pop mov pop mov pop in adc test mov daa xor fwait adc pop aas adc ret pop lods and and (bad) or das imul mov cmp sbb pop mov cmovo vmovlps aas inc push pop add and add lock push cs and mov daa fucom adc xor push adc push pop xor sbbl inc adc dec jnp cld sub jmp int3 mov out push mov or or pmaxub adc push ds arpl loope push dec xor das int out jno repz adc imul pusha inc adc inc in les push sub adc xchg test mov idivl cmp pop push jne repz xor nop in push cs mov push inc jmp std xchg xor pop sti jp loopne pop or push sbb std adc ds jns fsub jnp adc gs cmpsb loopne lahf push pop lret adc cmc std push jp es in inc negl inc orb ror mov shll jno enter sub adc push inc test leave loope imul inc cmp in and xchg out adc push add fs adc inc stc rclb (bad) js add push inc stos (bad) jmp xchg fidivr loopne jle repz std inc dec pop sub daa repz push push lods (bad) lret insb fdiv pop xor je lock or dec jmp in in xor daa lods in outsl or xor mov or adc add negl neg xchg inc fidivl dec mov cs xor xlat pusha (bad) pushf aad push mov mov (bad) shll fwait iret jge insb les adc sti bound adc cmpsl mov or and fwait pop adc (bad) xor mov mov cmp add add ds mov (bad) or pusha ret int3 adc or or mov jnp adc in adc push add (bad) dec adc xchg push nop repnz or adc arpl push pop aad add cwtl push push in adc mov jge push or push or ss outsl push add int3 leave pop push or push adc dec mov add mov cwtl mov adc jnp and mov aaa pop push add inc int adc mov pop test loop xchg gs or (bad) addr16 adc or hlt fnstenv push mov fisubl or mov stos fcomip mov test jne rcll pop test and fisubrl iret lds shl mov xchg rcll pmulhuw jns mov mov xor and aad daa pop (bad) adc nop rcll mov xchg adc adc loope adc xchg mov sbb (bad) dec adc ds xor sbb popa fcoms inc and pop (bad) sub add fwait mov nop xchg ljmp arpl cmp dec fisttpll or (bad) outsb adc pop xlat mov aaa into push out mov int3 addr16 pushf mov lcall js adc add hlt pop lds (bad) les js addr16 inc sbb push repz repnz adc fidivr lret call pop fisubrl push or cld pusha js or jge adc or xor adc repnz insl inc icebp pop pop test jecxz repz je push or adc inc cltd scas adc mov jl (bad) (bad) lea enter jae ror adc (bad) sbb add adc sti into xchg repnz ficoml shr mov (bad) int dec stc inc push adc sbb add sbb repz les mov outsb dec cmp add sbb test xor cs les xor jns xchg adc fmull sub cmpsl mov push je into pusha mov jmp push rcrb ficom out leave add test fcomps out adc adcb ret fs adc add movsb add adc pop sahf and leave imul lea lret adc lcall sub notl int3 pop pop or push adc test mov insb ficom repnz testb add scas (bad) mov imul mov sub mov dec adc aam sbb (bad) aaa or push xchg std xor sub or int3 rol pop jmp sti ljmp (bad) or adc out je sub cwtl aad (bad) cmp mov imul loop push fwait cmpb mov hlt mov push cmpsb xor or adc (bad) loope pop fpatan pop dec jns out arpl iret adc lret sub push adc rolb sbb stos jo gs mov jo jg xor lods out jl pop loopne (bad) in (bad) fiaddl sbb sahf faddl push (bad) cmp mov ret addr16 adc pop xchg add add movsl popf adc dec xchg adc pop (bad) fidivrl cwtl mov adc sub out shll mov add icebp (bad) push js rcll mov popa pop adc xchg cmpsl repz cmp mov popf push cwtl mov xor sbb (bad) jge adc (bad) mov or fimull dec lods adc add or push sub or mov jnp repz (bad) verw mov es or cmp pop or cltd arpl test sar lods pusha stos push adc adc into pop gs jne fucomi sbb add lahf xor xor mov add nop clc push adc jmp ss push mov hlt adc sbb or in xor fsubr fwait push mov adc dec pusha sbb outsb mull pop adc in inc rep loopne loope daa and daa adc pop and and lret cmp or leave and xor jge cmp imul or ljmp xor or (bad) in mov ljmp mov loope (bad) xchg ret jbe xor insl shr xor pop or jnp sar jno int pop (bad) out push push pop adc sahf ss jo jg mov inc jecxz cmp dec fdiv adc je adc (bad) jns xchg jl nop cmp mov mov xor pusha test fsts add push int add adc iret js imul (bad) test add clc mov daa mov adc ljmp (bad) fs cli cmpl mov xchg sub sar adc fwait push jl lcall fildll jge dec cli lea xor (bad) sub das pop dec mov or sti add xchg js push dec stos mov lret xor rorl xchg int3 sbb movsl lods in loopne sub dec insl or aam mov mov push cmpsl xor xchg cmp sti repz repz mov outsb aaa dec push daa jne adc inc mov icebp ficoml pop mov mov shr pop addr16 lcall mov fwait mov rcrb or push mov pop int add popf mov lahf pop adc into jecxz insl lret push pop fstps aam nop dec shll call orb (bad) cmpsl test xchg adc pop sarl lds xorb aam and lcall adc clc sarl jno stc mov ret add jp mov (bad) les adc movsl mov pusha jmp mov xlat jmp into pop in push mov mov test adc xor jmp xor pop or cmp mov scas jb or adc jno jbe hlt adc dec pop jnp adcb repz cwtl lcall push pop daa mov cmp sbb nop (bad) mov adc cmp sbb sbb lret adc movsl pushf push daa into adc inc cmpsb enter test pusha adc repz pop jnp lods pop test mov inc repz push add mov movsl adc mov adc jle mov insb adc (bad) and stc adcb (bad) jnp add out add rcrl mov mov fst adc cmp loop push and iret sub sti int enter test dec sbb dec out mov or sub sarb inc adc movsl icebp test sub and mov sbb push pop jb push insb mov adc aas outsl pop adc cmp sbb leave movsl cmp lods inc inc fist scas popf cs xchg scas inc fisttpl add jecxz inc add mov lea push jb repnz pop sbb xor adc adc pushf (bad) adc add mov add push das shrl or mov sbb aam sbb mov adc add out xchg add pop cwtl or sbb outsb int lcall adc (bad) xor inc push mov idivb sbb dec mov cmc lds shrl int push imul add aam adc js lcall xlat add pop and int or cmc repz or sbb adc cltd shrb in cmpsb (bad) sbb adc mov or adc inc sbb mov jns push and inc push jp adc jae push jnp push lcall add ret mov loope pop lcall movsl cmp jns mov mov adc into sbb loopne loope (bad) lret push cltd movl adc sbb adc cmpsl lea adc xchg adc imul pop jne pushf adc cld addr16 adcb imul inc add test pusha dec adc call lcall rcr mov dec outsl pusha mov xor je mov jns in in xchg adc cld imul jno mov jbe push ss jne push rclb ret sbb pop adc push jl sbb or dec cmp aaa pop stos xor scas in fisttpl cwtl add inc scas pop mov sbb and add xor cmp pop int3 cmp jnp and xor and fs into mov adc jg cmc stos mov testb les (bad) jecxz pop in fdivrs cmp (bad) mulb xchg aad mov adc enter adc rcrl mov (bad) fsubrs fld push mov adc (bad) adc push push pop dec daa dec adc (bad) mov out inc or jmp lods mov mov or mov xlat (bad) outsb stos inc dec aas sub or and xlat nop adc sub das push jne,pn push add and test inc dec xor push in mov push cmpsb add mov xchg adc xor adc mov ret mov fdivrl sti test adc add lret mov xor dec jnp mov cmpsl or enter adc stos sbb outsl mov sbb popa jo daa outsb pushf add std arpl lea loope dec push cs sbb push mov ja push and pop test or mov add js adc sbb movsb adc scas and mov cs popa or adc cmpsl mov cltd lret mov jecxz or adc fbld cmp and sub shrb imul call scas mov inc jae int (bad) mov mov mov mov mov outsb adc test js lret inc inc or repnz (bad) gs mov mov adc in scas add push cmpsb rclb test push cli ljmp sbb adc ret loopne fnop fistl jne adc adc mov pop rcl sbb push repz out rcr aas adc jne std mov imul mov mov mov clc lods and cmpsb inc add loope mov pop mul mov mov sbb pop cwtl inc rclb or add rcll lret (bad) adc add call sbb adc sub popf aam adc jbe adc sbb cmpsl movsl adc jl nop push mov mov sbb push xchg pop adc repnz out movb cli imul sub cmp aaa mov sbb jp mov adc (bad) je xchg push xor or lret test sti jle mov push add rcll pop jg mov scas stos adc sbb mov push mov mov adcb repz es inc add rorl dec adc push cs push (bad) lock not (bad) dec or popf call pop adc add add pop in adc dec decl adc add push push fwait and jmp stc adc cltd mov repnz loop inc out adc cli cmp aas add jmp ljmp mov pop xor adc or jmp adc inc mov mov mov movsl mov mov notb adc sub inc cli jmp repz mov mov adc xlat mov fistl adc dec pushw or adc out (bad) (bad) mov dec mov adc sub lods add mov data16 icebp enter into fwait lods adc pop dec adc in rorb mov cli xor adc sarl xchg aaa xchg mov inc adc push (bad) repz inc jne aad movsb sbb int stc fadds subl push ficom les cwtl cli sbb je (bad) leave mov mov adc add or popa inc rcl mov adc xchg adc or and repz movsl inc mov push adc xor cmpsl inc movsb in movl pop push cmpsl imull pop test adc mov pop popa cltd pop imul (bad) repz mov das loope push pop dec cld adc outsl fisub lods test inc jae lds ja mov jno jns adc imul repnz test pop rcll mov mov push cmpsb mov dec dec adc repz push dec ja repnz adcl sbb fwait imul jae fidiv cltd maxps nop jg jecxz pop jae std mov pop popa mov adc cli dec dec mov adc or push adc test mov cld adc js add inc es hlt sbb push mov popa aam jo cmpl aam push mov cld pop pop sub loope sahf push repnz scas (bad) adc adc lret jne adc push fs mov out (bad) adc mov icebp inc jp fcoms outsl cmpsl mov sub or sub aad mov push jne aas adc call mov dec xchg mov adc cli inc sti mov mov jmp in aam adc (bad) and je dec pop jge cld pop negb adc inc xchg xchg add mov pop adc ljmp push xor xor or andb sbb jns mov inc mov daa xor mov xchg fcoml or adc cmp inc cli setae and mov lds or adc xchg imul cmp pop cmp inc pop scas stos dec adc sub or cwtl or push cli xchg rcrl mov or mov jns inc mov adc push fcomps lock sbb (bad) jg adc adc or push mov popf xchg add dec adc cmp mov aad adc loope in adc or icebp dec xchg push push mov aas adc lcall shrb and or hlt std push mov cmp adc loope sbb sbb adc call push xrelease femms (bad) push dec jge (bad) sbb push aad mov mov and adc clc popf flds push adc sbb cmp add jl fcomip scas jle (bad) out loopne or mov lahf (bad) ja pop dec jnp xchg shr jg or inc adc js or test out inc (bad) aas andl test fmull cs adc xor popf mov inc cmovne xlat sti dec clc dec or mov or stos xor push jecxz loop lods arpl test dec inc dec das lea jbe ret lcall imul insl enter shlb adc or daa xchg movsb xchg and mov ja push jne push jmp imul addr16 dec cmc loope (bad) xchg sar push or cmp inc clc dec jge sti mov jg adc fiaddl (bad) int3 icebp adc cmp mov and sti or pop addr16 out gs pop pushf (bad) repnz in ret stos xor jno imul push push (bad) adc pop out inc insl loopne out cmp lret add pop xchg aaa call or sbb out repz (bad) cld (bad) jo out mov lea movsb add repnz std push jnp clc adc inc decl in pop lret in js out pushf stos repz sub aaa adc outsl jnp push dec repz out gs ja,pt rcrb xor stos sbb sbb and dec call adc pop scas adc cli pop aaa adc cld loopne xlat das or std xchg xchg out mov pop push out gs adc pop push pop mov sbb push and adcl mov repnz fsts adc stc pop pop mov or cmp call dec push shrb adc adc scas fwait mov and bound mov xchg lods out jmp jge nop mov call cld pop fimul push aad (bad) repz jge or js stos add lret mov mov test push adc inc pop lods or push into dec adc inc repnz and insl adc xor pusha or and jne push or xchg iret hlt mov adc fmull adc jmp adc jl sbb lcall adc add idivl xor lods sbb lea or imul adc call movsb cmp inc les adc loop adc gs push pop cmpsl mov jnp add sbb push xor xchg pop ret jo xlat or mov call test push cmp dec out pop xor inc push test mov cs imul nop lods scas sub adc jbe jne and jne mov sbb jmp mov push std adc adc push in sub lods or aad add mov and push or mov xchg int xor add repz xor and and push shlb sub sti add or adc push cmp push inc adc sbb rcll sbb insb or adc mov or fistpl jmp jp mov adc in jge test repnz or inc xchg or mov mov mov xchg adc sahf cmp sti dec adc invlpg lahf shrl test and xor or pop fildl mov (bad) adcl je or adc lret scas les mov adc inc lret call ficompl je jge or mov jmp lock mov or sbbb stos mov in repnz cld test adc dec mov (bad) int out (bad) mov adc xchg sub pop mov or das push int3 pop adc aad (bad) jns pop mov sbb adc cli dec hlt ret testl adc fstp jns fdivrs loope or (bad) xor je push cli pop cltd repz in or jg jl cmp mov mov mov in inc int imul mov out or mov mov in pop (bad) cli ret push sub ja aam mov xor mov sbb mov jle pop call lock ja mov add arpl scas mov adc stos xchg adc lret adc mulb xchg adc dec add inc insl int3 cmpxchg push jmp ljmp fwait adc inc into pop xor fs adc je push xchg hlt (bad) repz adc adc cli push into mov dec mov or fcompl pop or mov clc cli (bad) and adcl shl mov xchg pop jp outsl adc jl push cmp cld ljmp int adc ds pop and dec adc add mov ljmp push aaa dec adc imul fs test in push xchg mov arpl add add fdivrl sbb sti pop adc lock pop cmp adc mov dec xchg lods in adc outsl int mov imul xchg repz pop jge cld mov adc jne jbe sbb jg dec xchg adc add mov mov adc xchg and (bad) jae pop pop or lods push jb push xchg adc pop lods mov mulb fs fdivrs fidivr (bad) shl cmp inc add test jle adc fdivrl add fisubrl out sbb mov xchg icebp pop clc mov mov nop mov pop ja add stos xor add or push adc push lods clc push dec add push mov jg sbb xor or or sub movsl in sbb cmp (bad) decl outsb mov xor adc hlt add fsub pop jmp sbb imul pushf dec push out in and or insb (bad) ja das mov adc push mov out aam xlat movsl repz cmp jge or cmp xchg mov cmp pop adc and mov jmp adc stc push aad cmp xor ret cwtl mov push adc add or loope push js mov repz adc mov cwtl mov push inc add adc mov or xchg std push adc inc add clc adc push dec mov sbb rol das js push arpl push push rclb add sahf rcll jno ljmp mov clc add mov pop adc pop inc add jnp add sub push push dec cmpsl and xchg and or or pop adc lret imul sub loopne (bad) sub adc cmpsb in mov sti mov mov mov xorl lods subl or or sub jmp jns nop mov popf and adc mov cld or iret ljmp mov adc mov cs int3 adc jmp add mov mov cmp scas (bad) mov repnz notl xchg lods dec mov dec notl xchg and test adc xor adc or add (bad) lahf (bad) push cmp mov cwtl adc movsl (bad) cmp mov xor inc push adcl and daa mov xchg mov test gs sti adc ret adc xchg mov pop gs adc std jmp clc (bad) mov repz lahf mov gs or (bad) out xchg push out push or or scas shrb dec mov adc mov into sti in in sbb loope stos hlt ret mov pop ljmp or jb les push adc adc adc pop cwtl out loop fbld in xchg mov or mov mov shl lret pop cltd xchg or add in pop repz jmp lods and call adc sub adc insb loopne in movsb ret loope icebp addr16 (bad) pop adc sbb and imul popa pop (bad) and adc xchg (bad) clc push mov adc mov lahf inc adc jle ret adc por ljmp loop dec dec test inc fstl shrb adc add xchg repz aam or (bad) repnz xor fstpl adc pop adc sbb cmp dec adc cmp sbb test call dec add inc dec test adc addl gs movsl (bad) sti mov cmpsl pop lds adc sbb adc jmp je rcrl adc js sbb mov test adc outsl cmp push rorl mov mov dec cli xchg add inc xchg les repz jae adc sbb sbb cltd cmpsl cwtl out jo imul sti test ficom sahf push ja push movsb pop adc or adc jl push adc rcrb stos dec loopne mov adc adc inc xchg adc std sbb sbb fistl cmp push (bad) cmc pusha or adc or xor or clc xchg adc aas ficoml push cmc loopne sbb shr adc mov jl xchg push push jp mov jnp or add inc adc push es mov sub add rorl jno jne cmpsb sbb aam xor icebp mov sub das adc fild adc sti bound adc inc mov add (bad) mov (bad) rolb sub adc xchg lahf adc dec sti repz ret es icebp lea pop mov and jge shrb and dec mov add adc or adc push push mov push or adc (bad) lods scas or mov (bad) mov lret dec add mov test or test sub jno mov mov adc add ficoml adc push repnz (bad) dec mull pop fdivs cli jle and adc bound fistl mov pop repz aam aas and adc inc add adc xlat cli xor and cwtl cmp sbb sbb jle or (bad) pop xor ljmp mov dec xchg sub enter and adc loopne js sbb mov inc fcmovnb mov xlat add adc dec subb clc and call cmp pop mov fistl mov and mov cmpl mov adc inc out mov adc dec mov (bad) or adc pop call pop pop insl dec adc adc sub adc in jns mov sbb push stos js mov and jmp adc inc jb (bad) lret jo or xchg repnz xchg mov enter adc aaa ds mov cmp mov std add decl dec mov ss rorb cwtl in inc jg popa or mov lret int3 cmc xor popf or ficoml cmp xor adc out cld scas sbb mov int movsb add sub or mov or push adc inc out xor add adc add mov adc mov xchg in add dec xchg clc int3 jg fwait fs adc pop jo mov movsb pop cmpsl cli lret mov sub (bad) fcmovne mov leave in into pop or dec imull push insb adc scas push adc mov lods das or cmpsb outsl aam adc (bad) sbb dec out test int3 mov lods insb lret sub adc rolb adc nop cmp adc jae repz or pushf mov push mov fidiv (bad) mov add out pop ss mov (bad) je jp fadd pop adc les adc inc adc roll std and mov ja aas test adc add insb dec int3 mov mov sbb adc jns stc call fcoml adc add test pop int3 inc mov in loop cmp insl and and pop adc aas in lret jg cmp dec pop jbe lock mov aam stc sbbb or sbb adc mov dec or lea jno adc decb loopne xor and lods roll jmp pop adc inc push pusha (bad) out stos push outsl sub repz mov nop adc mov xchg inc jne aad clc sarb not or (bad) mov ror xchg mov and fild ds jnp jns fidivrl fldenv arpl dec mov adc je jnp pushf fistl jns cwtl add (bad) mov dec push add f2xm1 fsubr lcall jne inc test adc pushf lods and ror dec add xor cmpsb pop adc pop (bad) pop flds adc dec into sarb orl jae adc add add repz leave or add mov mov pop mov push (bad) adc dec push lock int add mov setl add (bad) push xor mov add mov push repnz mov add pop ret sub fisubl or jle or jecxz into push pop sbbl mov cmc repz sbb insb cmp ret (bad) push movsl repnz xchg popf jns adc inc jecxz dec pop push dec cmp jg clc and pop jle pop aam sar dec jge mov mov bound rol hlt outsb adc and fimull int3 jecxz mov sub push out xor mov movl adc push mov xor clc adcl adc scas cmc movsl add push loope (bad) and aaa push mov jl adc fdivrs pop lock pop cli pop into out (bad) mov shrb mov jo mov pop push adc mov xor or adc in sbb pop insb mov ret bnd inc mov xor scas mov dec in inc pop inc loop fsts in pop jge fsts or fdivs adc sbb cmpl jp or push push into add adc fcomi add push fucom leave xor and dec loop bound ror into mov rol adc icebp mov mov mov gs imul cmpsb mov adc mov xor push xor ja into push adc xchg mov add jnp pushf repz das lcall push jp mov inc mov bound adc (bad) adc cmp xchg fnstsw mov pop fsubrl dec shr imul inc xor aaa or repz repnz imulb jns adc in push out jl adc jno or inc adc gs push cld mov fdivrl fnsave jge jns dec adc inc mov imul subb xor jno pop mov and dec (bad) into xor mov xchg cs push movsl pop adc push imul adc jno leave jb adc adc mov and adc fnsave jnp or adc push (bad) jbe divb fwait mov adc lea jle adc push mov fstpt std leave repz lahf and sub adc cltd jno mov mov jle adc inc mov add fcoml add lret push jmp add pop mov cmp bound mov test addr16 adc add lods mov adc inc adc addr16 sahf sub roll fistp lahf scas mov movsb sbb mov imul mov xor stos call rolb cmp bsf adc add sub ljmp xor and pop mov push adc adc sub data16 daa sti jp std adc stos cmpsl or jne push push xlat pop fcmovnu jl insb adc push int daa jle xchg adc push cmpsl jl lret jns adc je sti sahf add loop fdivr add pushf lods pop rorb outsl dec inc out adc lret jne adc orl mov bound adc enter and mov add out cs pop repz or bound push dec push lcall inc push in mov add adc (bad) mov out (bad) sub cmc xlat push addr16 minps in push adc xchg or cmp rolb mov (bad) outsl push add sbb pop inc inc push pop adc jnp push sbb jns sbb aas cwtl addl xor adc roll lea test jecxz mov mov and xchg add xchg jns adc ficoml pop je adc jl adc cmp int mov inc fimull adc movsb lea cwtl mov in dec ljmp movsb ret dec xchg cltd adc repz aad ret hlt xchg call xchg pop cmp adc negl jnp pop jp adc in es adc aas pop sarb fbld mov in orl xchg dec cld int3 cmp fwait ljmp aam xchg repnz and adc lods mov or mov sbb sub sub mov push or pop xor popa jle jl mov sbb gs movsb pop adc xchg dec push leave or pop adc fildll lods mov sub dec insl dec pop or push mov mov mov jns or mov push in push gs cmp (bad) clc jne jnp cwtl push jno adc sub xchg add pop add pop jnp outsb adc cmp pop insl fist xchg cmpl pop out addr16 call test push jg jae jns pop iret xchg xor lods adc inc outsl lcall or int3 mov adc mov jns pop mov scas movntq out sbb inc xor cmpsl std clc push loop (bad) iret nop fs gs test arpl or mov (bad) in fucomi jl jae cli fist sbb sarb cltd imul or test into push outsl aam push push imul fidivrl adc push outsl xor cmp bnd mov jne or sbb adc push repz cli push mov arpl movsb mov inc mov inc mov (bad) jge add lcall sbb in mov cwtl fsubl es adc mov jp adc xchg aas push push jo fnstcw fist fwait adc push loope mov or (bad) and push leave add lods (bad) iret push loope fcmove fs add inc test and data16 out sbb call mov dec lcall roll faddp jo mov add pop ja (bad) xor jae sahf loop add aam ret test out sbb mov outsb dec orb sbb xchg mov int into ja loopne xchg dec outsb lods adc dec jno jb and xchg dec jl mov jne mov neg sub adc std dec adc jno push lahf clc xlat mov (bad) xor mov not ja mov adc jl jns clc mov push xchg adc je jno (bad) push stc sbb jnp jp jns jo cmp adc adc sbb jle push mov adc jge push bound ret cmp mov adc popa lds ficompl and fsubr adc inc add adc (bad) pop fsubrs scas jg mov fldcw pop repz (bad) aam adc enter mov jb jg xchg sbb pusha pop repz lock adc cli mov pop je sbb xchg (bad) adc repz pop mov sbb repz in xchg push cs sbb sti or adc mov xchg mov and adc push dec les sub pushf decl push jg sbb adc fwait pop xchg xor ret adc add sbb lcall clc adc lock add negb icebp rclb push clc mov sti arpl decb in outsl aaa sub lret jo mov (bad) loope pop jae adc mov push sub adc scas iret imul or call insb add les xchg sbb imul pusha sbb inc cmpsb add jecxz loop add mov and adc jno stc fnstsw lcall std loope mov mov int or cwtl cs fbstp dec push push leave movsb outsb adc (bad) out frstor xor or or ret lret (bad) adc push int out leave outsb jmp nop push mov xchg movsb adc test je jbe push sti cmpsb push mov push jb xor (bad) repnz loop sbb dec mov mov cmp fs or fdivp add cli sbb pushf daa lahf adc dec jp sbb rcr pop mov adc push movzbl pop lods push sbb test scas or xor push or push (bad) test gs (bad) daa add adcl cmp inc fwait (bad) pusha addb loopne pop sarl or mov (bad) push and cmp push jo test repz cld ljmp adc test jno push adc xor ss jmp pop dec or or loopne sub mov xchg sub mov jg jle adc cmpsb insl shl shlb mov adc sub xchg mov call ficom adc mov xlat sbb jo xchg mov test into jl xor ja pop adc (bad) out jge add (bad) cmp and push mov jl xchg adc and insl fucomip mov inc or xor adc (bad) dec jne sbb push das imul sti clc cmpsb jns sbb lret jg loop adc dec mov clc mov fildll jp mov popf xor ds adc cld pushf sbb inc adc cwtl lods subl das adc rolb push jmp repz mov adc mov sbb inc add int3 pusha insb xchg adc xlat or push push pop adc test lds adc add mov xorb lea mov insl test xchg fistpll je mov dec sub jnp addr16 push fildl jecxz adc pop dec notl in mov adc or ljmp xchg mov (bad) sti pop (bad) ds cld movsl sbb sub adc (bad) incl cli xchg mov in jmp test and pop in adc add jecxz repnz xor mov adc ficomp rcl repnz hlt repnz push sbb mov fisubr out in (bad) mov push jae adc inc imul scas cmpsb xchg xchg add aas add fimul adc xorb cld xchg xchg aam and push lds push adc (bad) adc or xchg stos mov xor adc daa mov leave adc ret iret adc cmp addr16 flds or fmuls adc jns add inc dec in or adc inc sahf or into inc hlt or adc adc pop jo stc sbb adc arpl cld in jns adc dec pop je jae jb fcoms sti stc mov pop adc jmp pop repz pop xor icebp mov fistpll jle adc cmp out xchg inc pusha add add or adc lea push out mov adc out xor iret inc dec cmp adc sbb stc add or mov repnz jb cmpsb lea adc lds (bad) dec stc pop hlt jns repnz xchg jns adc loopne mov add mov js jmp rorb mov mov jb fisubr std mov add adc lea adc push or mov popf adc (bad) adc es adc add xchg lods xchg int3 xchg rolb js fcmovnbe push into or xchg mov mov in mov inc xchg mov jp pop push jl fcomps xchg mov adc dec sbb std mov xchg push xor adc sti inc into js adc pop call adc pop (bad) pop jo sahf iret inc push jge ss dec pop int dec js push gs shrb mov push adc push adc jl in sub adc lds jecxz fs inc les mov cmc inc add outsb shll fadds xlat cs lcall fcomi mov rcrb add mov and jmp inc sub sub mov dec iret ss mov cwtl or nop or lods add and add adc dec lock push into adc je stos stc out mov xlat push in notb lods jp ja aad adc shlb push stc and push xchg movlps xchg mov repz jecxz inc jae xchg adc clc out stc pop sbb adc mov adc adc sahf jns push jg cmp push dec mov pushf mov scas sbb mov int3 add mov jnp insb mov add adc mov (bad) scas aad mov adc ret mov in rcrb inc fisubl repnz push in jno mov repz lds or fucomip sahf or mov mov jbe fidivr jo popf mov cmp sbb test or stos (bad) out dec or lods jne shrl dec enter xor shrd push scas aam aad lods cmp and fildll lods add sub lods jecxz xor cld mov mov aad xchg je jae jb or (bad) and rol jne sub mov into pop mov cld mov ds pop push mov jl adc add fwait sbbb adc mov mull push jnp bound adc (bad) sbbl mov cmp or mov rclb test int dec adc enter add arpl push inc pushf es add mov mull sbb bound pop or add loope cmpb sub mov pop inc inc lahf and fsubl (bad) clc or push adc mov dec dec mov int imul fildll or mov lods sub cmc insl (bad) adc or mov je out or dec adc push loope popa push cmp mov adc repz pop sub (bad) repnz dec pop adc push cli aad jmp dec aam push (bad) je js lock add xor call repz pop push insl out sbb (bad) mov adc cld pop enter dec or mull adc sbb (bad) lret ret xor or pop out push pop shll mov movsb xchg or jle push adc mov dec lahf xchg pop add or xor adc mov or push mov sub push test add lea push mov fs cmpsl adc mov and sbb int3 cld dec popf fs add add imul enter mov adc add mov out inc ds cwtl in les push dec jl (bad) setnp mov stc dec pop mov adc out pop outsl lret pop outsb jecxz or imul dec movsl sbb jne push shrb jno mov adc subb outsb dec out dec push test int and hlt mov ficoml mov pusha cmc mov repz add pop adc imul fwait adc mov cwtl cld adc and push ds mov mov fiadd scas sbb fs sbb insl mov push adc xor adc xor adcl fs in add inc push andb pop inc adc sbb std xchg inc fisubr push dec adc cmp sahf jo pop adc cmpsb dec std adc daa or mov lods sub in outsb push mov dec pop das pop mov aam rcll cmp jno add insl mov enter sbb popa outsl fsubl data16 mov (bad) jb or push and out cmc inc mov negl push xor push push lea add adc xchg lcall cli pop adc frstpm(287 jns lahf mov dec pop into pop jne mov cltd xor lcall out pop (bad) decb dec mov mov jg aas adc jecxz adcl sahf out inc into adc sub or add out dec mov lahf mov sbb cmp xchg xor insb repz pop xor out pop push add repz loop movsb mov daa ror js cmp call fiadd cmp clc push loope sbb mov and xor sub jg jb adc push sbb or int3 adc inc dec cli lret and stos mov clc adc dec nop or imul dec pop jo or test push adc divl mov adc xchg inc xor cmc adc cltd aaa pop inc adc cmp mov fbld fucomi aas or adc lock cmp jno int3 and push jmp mov std or pop popf mov pop test das pop mov adc or xor lret pop out jbe jnp adc add cmpsb add sbbb cmp sti add (bad) push shr out adc aas repz into add pop push adc pop or adc push xor mov adc push call and adc sub adc adc in int3 lea mov out test cmp adc adc pop or lret ljmp or test push shl adc addr16 xchg mov pop je push xlat rorb add jbe push aad sub adc mov mov cld inc fildll ficomp xchg xor xchg inc int3 dec adc enter xchg xor or mov mov sbb sub fwait inc pop hlt push (bad) xchg cmc add loope jecxz inc insl adc movsl repnz xchg scas add lcall adc xchg push out mov adc pop dec push add push sbb add xor push fimull add mov adc adc daa xchg (bad) xchg adc add sbb scas add orl add movsb jns add mov push dec push fs push pop jl jp adc sub stos ja cli repnz add inc add add popf add xchg test mov daa adc dec das cld inc ljmp or xchg jae pop pop adc sahf jg cmp lea add pop stos lds inc sbb (bad) test outsb or adc pop sub pushf adc arpl push lods hlt das xor setae dec fldl in fwait lea cmpsl int3 loopne cmpsb bswap in sbb pusha adc xchg xor cmp xchg (bad) jb pushf aam notl xchg pcmpeqd icebp cmpsb adc cmp adc cmp mov ret or pop mov xchg cmc (bad) cwtl cmp les cmp pushl sahf sub push fdivrl jb ds mov cld adc lods aas adc mov sub push mov insl sbb int3 push sbb test jp mov mov std adc movsl and and out xchg cmp adc adc aam out mov loope add add mov movsb cli mov jmp pop pop cmp push sbb mov adc adc add sbb movsl or sub out test push icebp loop push enter or lods mov jmp sub lret insl xor or mov (bad) int3 inc outsl inc push sub dec or xor add aaa mov lcall rcl mov lahf adc add fwait sbb pop cmp es adc out mov adc pop xor add ds and mov aad mov jp mov cmp ror icebp cmp cmp iret inc or in cs adc mov lret std mov sbb rcll js popf push outsl push cmp (bad) ficoml add loopne in stos shlb sbb out jle outsl lret aad push jnp jmp fiadd scas clc adc sbb sbb lds mov adc mov shrl mov rcl sbb or add subl mov icebp enter pop in je fwait call xchg jecxz push or mov cmpsb adc mov push fnstenv push jb scas xchg sbb xor lret jecxz (bad) out aam adc sbb xchg mov add xchg or and xchg popf out std pop xchg add sahf pop cmp adc xchg sbb add (bad) fcoms js adc lods aam inc push cwtl dec pop adc add in fidivrl (bad) or xchg mov adc sti mov int3 mov fidivr xchg lret push sbb xchg js adc jo sbb pop inc xor dec pop cs enter into adc dec out mov call adc mov addr16 arpl add insl rclb sub pop test aam sbb mov dec or shr mov cmc mov pop cwtl aam cmp nop push into notl jno mov xchg adc loope pop icebp fidivl cmp jl pop cmpsl cwtl loop mov mov xchg jecxz cmp mov add jg adc adc les sbb rcrb pop popa inc out mov repz mov push dec pop adc mov mov insb or xchg int xchg loopne mov or bound or pop mov insb movsb mov pmulhuw adc pusha push xchg sbb mov jno add push cwtl lock add sub push add shlb cli hlt push mov rcr add adc add aaa js rorb (bad) enter adc push fcmovnb loope xor xor or xor or ljmp sbb cld xchg push mov adc sbb lahf add inc push lods sbb adc test mov mov lock adc push mov adc stos jno imul mov xchg into add or dec jge cltd rcr inc popa pushf adc push fidivl adc jno (bad) or jle adc mov xchg aas adc fdivrs pop push in xchg loopne loop stos adc ficompl cwtl daa cltd pop in adc enter test mov pushf sub ja adc pop fs (bad) pushf das mov enter pusha leave sub push or callw mov andb in jl fdivrs adc pop out movsb mov push loop adc inc and arpl cwtl test jns adc xchg mov mov or daa mov push stos push add mov bnd adc popa mov adc enter pushf stos jp jns repnz test adc or cld push pop mov xchg xchg add adc adc icebp fcmovnb adc add cmp ss pop fprem daa adc sbb (bad) sub pop push clc jl hlt mov jg sbb or sbb cltd pop clc jge adc add out popf (bad) adc add inc rcl lods mov xor adc pop or into adc mov fstps adc bound sbb mov pop add insb fldcw cmp cmpsl fistpll jle inc std adc adc ljmp outsl les lea insl adc dec std loope adc mov mov mov mov data16 ret sbb adc dec test pop xchg je jae xchg in xchg xchg mov fstl xor (bad) adc mov mov je fnsave mov cld pop push mov fwait mov (bad) sbb add adc (bad) ficomp inc jns aam movsl loop mov push cltd xchg fbstp sbb adc cmpl adc sub dec daa dec das adc scas mov mov mov pop (bad) rep in (bad) imul or cmp (bad) fisubl ja xchg inc adc lcall ret pop xor jmp mov pop jno push mov or and pop movsb adc into jnp inc insb (bad) insl repnz mov adc cmp pop xlat out pop adc loope in imul iret xor mov push sbb jp adc sbb (bad) imul push pop jb mov add icebp push cmpl test cmp adc test in mov jg jnp and decb fistl cmpsl lea mov pop mov adc call lret add pop mov inc in pop mov movsl packssdw inc out inc out clc inc push rorl xchg repnz sarb push adc es sbb mov dec adc (bad) ss add aam or adc jb mov adc cmc add adc lret add jmp jnp adc pop sbb or add mov or popf xor mov adc push gs adc addr16 adc std sbb mov aas repz out sub mov rcrl rorb rcrb mov (bad) pop or icebp cwtl lahf adc inc push mov pop cwtl inc bound inc and adc lods pop mov jle cld add xchg xor sub pop lret jp into adc dec es test push outsl or scas rclb adc cmp adc push pop xchg enter adc xchg scas mov mov sub sub sbb lret popf xlat cld push shrb mov in pop icebp mov (bad) cmp mov call xchg insl xor (bad) div mov pop mov pushf xor cmp adc pop insb aad push loop adc outsb imulb dec clc lret sbb popf sarl add adc sbb daa fnop pop sbb xchg xorl sahf jmp adc push imul cmpsb xchg pop mov pop push adc add jmp mov mov call push adc shrb pushf fdivrs shlb mov insl push mov imul pop mov out inc xchg push cmpsb outsb data16 sub fsts sti mov ja iret fimul test sub jae in adc ret (bad) dec mov (bad) fstps mov daa rcrb jnp std dec jge xchg repz stc sti jb es adc mov jae std pop cmp imul pop add dec add stos popa mov mov cli imul adc scas fwait lret sbb xlat adc movsb into in jmp jl pop fs xchg mov insl inc scas xchg ret out movsl and fsubl xor jbe jnp adc pop pop fsubrs adc add adc test lods add pop dec mov dec out dec call dec adc sub mov or out mov test push imul imul adc popa pusha cmpsb in xor xor sub or int3 mov adc push popa sar sarb push lods add stos imul mov mov mov popa stc adc mov pop adc lret pushl (bad) adc pop cld fdivrs fstps loope popa cmp test fldt mov pop rcr (bad) lret inc and icebp into (bad) push inc imul imul push insl push lret repz and rcr (bad) hlt inc dec mov das testb inc popa mov incb mov lock jne inc stos (bad) in inc sub dec jmp mov cmp int adc rcll jge pop add arpl (bad) dec inc mov jns pusha dec xchg insb or jecxz push in mov fildll stos or inc or inc xor nop test adc in sarb (bad) dec sbb lods pop mov jno sub add push int or push scas push xor int3 mov push pop mov test jp pop lds arpl adc frstor adc pop clc cmpsb inc adc sub movb jge cld push push lea test pop int3 fldl pushf adc sub sbb xchg lods xchg hlt subl jmp jmp (bad) xor out outsl push es or fcoml pop enter add sbb mov mov rolb add xchg lret add fimull xor sub call cli push xchg roll aaa mov and pop lods xchg pop xor dec push (bad) data16 sbb fild adc (bad) sub mov jo pcmpgtb or cmp xchg jnp in inc sbb out rcll hlt loope sub movsl push in stos add dec xor sbb dec test jl rcll dec ficom mov mov push mov insb mov loope rclb js (bad) adc (bad) or cmp mov jl movsl (bad) repz pop xchg jo or adc push sub lret je or clc into jl xor push mov cmc nop aam das adc dec int3 aad out adc add jge adc sbb jle pop jno mov out pop rorb sub mov inc mov or adc push std aam mov popf leave adc mov std fimull ja mov xchg scas mov fwait mov mov xor sbb adc sbb gs es fbstp adc jg aas pop cld or pop adc sti dec jns fildll imul into or cmpsl push (bad) bnd shrb pusha ret inc push scas mov inc push adc rcrl xchg sbb jmp jae std push xchg nop daa scas (bad) mov sub (bad) xor (bad) lock or xchg inc push sbb mov adc mov in fsubr adcl nop mov add fwait inc cwtl daa mov paddusw inc mov (bad) mov cmpl jns adc pop popa push adc mov adc int3 xchg hlt mov pop lcall arpl add loope adcb mov mov mov dec xchg ret cmp ljmp adc pop adc sbb inc sahf inc mov cmp mov daa test jno sub fisubr adc dec rolb mov mov jmp cmp fimul xchg xchg mov stos adc adc scas repnz xchg adc dec xchg aam insb mov xor inc adc sbb mov adc pop xchg adc dec (bad) fidivrl adc lods sbb dec adc cmpsb xchg pop lods jecxz jmp xchg adc repnz mov mov push int ret pop lea mov ljmp pop jbe adc cmp bound inc arpl leave (bad) pusha push add je ret push cmp adc sbb adc in push fnstsw icebp (bad) jns pop adc aas fs sbb adc lret push adc (bad) push clc adc adc dec sahf in pop jnp adc sub data16 push pusha push mov or (bad) mov and jne push xchg cmpsb xchg rcll xor (bad) add negb sbb fcoml (bad) mov mov dec or pop pop pop xor sbb adc xchg (bad) out cld mov xchg cmp or fsub std mov pop outsb rol adc enter imulb adc or adc loop or adc sarl xor cmp dec jp adc mov pop (bad) fisub xchg std inc mov pop stos sbb jo loope inc int3 ret mov jp adc dec dec adc push cmp mov clc sarb xchg imulb mov and push dec fwait push sbb negl xchg insl xchg cmp mov adc into adc mov lcall add inc js add adc mov xor dec xchg adc cs adc movsb push cld sub adc xchg sub aam (bad) fdivrs or in mov xor jno pop lret sbb sbb lret mov adc test mov insb flds or mov cmpsl adc movsb repnz jbe adc cmp sti mov mov (bad) lahf jp inc sbb mov in xor cli (bad) jle jge int sub test in or int3 out xchg bound sarb fninit or loopne fs out sar jmp imul idivl adc xchg pop push pop adc (bad) sub out les ljmp dec inc outsl jns push in pop pop daa xchg int3 repz lret std mov pop stos adc mov dec icebp adc or hlt pop or lea pop lock aaa jle adc adc cwtl test lcall xor rcll pusha add lahf pop mov mov sub jbe xlat adc push aas jo and pop adc jp dec std add jecxz adc call adc or repz xchg and movsb mov cwtl cld add adc out out (bad) jecxz sti xchg test mov adc test push pop jle pop sbb sti sbb sti add sbbb (bad) and xor lret adc out sbb jmp stos cmovge (bad) rorl xchg adc mov mov adc ljmp adc xor xchg pop adc mov xor xchg mov aad jl notl sub into push mov pop and cmpsb mov fcomps lds inc and gs dec jg je sbb cmp adc insb mov fdiv fstl xor xor lock adc std ret push sub scas push pop dec adc in leave psrlw movsl rorl dec loope and dec adc mov cmc in (bad) insl xchg (bad) in jb js and dec and (bad) jge lahf dec pop jae repz push fdiv cwtl mov mov or ljmp insb es lea test aam nop add xchg mov fmul jg inc insl (bad) repz and in or sbb sub lahf rclb xor imul sbb insb dec int pop jb xchg aad lods adc xor fwait xchg aam adc mov dec pop lret imul mov inc adc cwtl cmp (bad) cmpsb lcall sbb and sar sbb pop icebp pop fs gs pop adc lret xor adc mov fsubrl pop mov insl mov inc mov (bad) test sub imul (bad) adc pop popf loopne mov fsubr popa dec mov add js mov cmpsb popf sbb imul or test push imul adc xor xchg enter imul addr16 push xchg insl aad push es cwtl ljmp mov cmc sub stos inc lcall jp adc mov xor add hlt ret lea loop push sub daa adc jmp adc adc pop (bad) enter int jnp test adc sub rolb push inc dec adc mov dec mov adc push repz jp add out mov shlb mov pop rclb sti mov lea xchg jecxz adc adc push xchg or sar inc or fsubs rcrb inc mov rcll add adc pop pop lods inc ret sbb out hlt sub ja jbe adc lahf push out or mov ret adc sub sub xchg or scas push jmp fwait add movsb push nop js ret mov adc cmpsb rclw adc fnstsw cmp push jge pop jle repnz jecxz,pt outsb std adc or or je outsl ja testb cmp int ret repz lret adc in pop int dec data16 testl xlat ficoml adc ja aaa jns adc jecxz fiaddl pop mov lahf jge aaa sti outsb std or or mov push popa repz fiaddl adc stc (bad) fisttp hlt pop lock push outsl adc adc addr16 gs imul dec jmp pop dec and adc int sub lock stos pop push and mov ljmp aaa adc cmc fcom mov adc push pop mov lahf xchg pop cwtl sbb xchg cmp cmp pop fidivr and cmovp or xchg popf repnz jnp fcoml (bad) std scas jo pop adc jns cs repz emms or jmp adc lock pop nop clc (bad) and cmp loopne leave stc dec dec nop mul stos aas add or mov ret sub or adc in adc in jecxz fiaddl inc adc scas clc dec mov pop sub dec sub negb rorb inc mov mov iret je ror xor mov into add lret cmpsb (bad) mov jmp push adc mov sbb fwait xor jb xchg adc repz xchg in shll nop and inc add xchg fdiv fistpll hlt mov mov or nop cmp jg sbb adc (bad) jge aas or insb in pushf xor xor movsl popf adc add adc push sbb popa cmp mov push xchg mov xor mov jns fldcw fimull subl push and je cmpsl in xchg enter repz mov xchg inc mov adc lds repz fsubrp pop adc je nop sbb pop add es cmp mov sub ja mov cs scas jne bswap sahf dec mov adc pop (bad) mov out sub aaa iret push push mov mov ds ret ljmp xor outsl adc pop jb ja sbb adc push cli push (bad) cmpsl adc xor or mov fldenv jg add adc adc lods rcrb push dec pop je cs mov sbb cwtl aad push dec xchg imul cli (bad) or or xchg push rcll fwait bound pop in xor pop push or outsb fs lods pusha or notb sbb inc rcrl xor add aad fmull adc fs repz xchg sub pop arpl repz cmp pmuludq push push xchg loope xchg or push in sub sbb xchg scas cmp mov adc and and (bad) hlt adc push lea cmp out les mov cmp add mov adc jo cmp adc sbb lret pop sarb cmp cwtl mov or push pop (bad) sub or jmp dec mov mov imul jge ret rep mov outsl imul cmp xor sbb (bad) sbb leave dec or cmp roll (bad) je adc adc call lock push sti sub adc xor xor mov sbb sbb sbb inc (bad) mov subl xor pop xor fldt and adc sbb test adc jo pop push jp jnp ds and fildll add xor insb or into ja sbb sub cmp add pusha sbb cmpl adc (bad) into arpl lds ret pop and push loop popf (bad) mov add mov (bad) or jle add and inc fwait jecxz,pt or test adc repnz mov adc repz sub adc (bad) adc inc adc sbb bound mov outsl adc sub push leave jb mov movsl jne push mov addr16 adcl push jb (bad) or xor popf or adc fnstsw pop mov mov and sbb adc flds jle adc xchg mov adc aad push out and pop cmp or sbb movsb or mov aas push repz inc mov or ror inc ret adc test jb sbb xchg int adc jne mov mov add adc (bad) cmp mov fsubrs rolb mov fcompl push repz jb (bad) (bad) cmp adc add adc loopne dec popl jmp leave mov pop add repnz dec ret or imul outsb mov or dec jo nop mov ds cmp lds mov lea or cmpsl mov popf lahf mov aad xor mov into out push idivl adc adc adc cmpl repnz jmp xchg rolb adc sbb adc cwtl enter rorb jle cmpsb inc pop xor loope and sub cs lods stos scas iret or adc push dec mov mov jns rcll data16 xchg out insl (bad) cmp in and shlb bound push pop scas (bad) sub adc fwait xchg mov mov loope mov adc dec inc or out mov (bad) cmc fcoms dec xchg or xlat test pop adc (bad) xor jmp int mov mov or or je push outsl sub mov adc mov aaa mov push out mov je sub mov pop je push es add xor fsts and pop jnp cmp daa pop bound fisubrl sbb mov adc sbb aas fisubr adc push cmp push mov pop push dec pop adc mov jle mov cmp roll push or adc (bad) push adc pop or in mov cmp adc ret or mov or add (bad) jb dec adc and repnz xchg pop lock enter lret outsl testl sarb xor clc out sub add sahf adc dec pop addl dec pop outsl adc aad sbb divb test or inc mov jecxz adc shlb dec inc add jp cli cmp adc push rcrb lods test xchg (bad) cli adc pusha clc insl pop dec mov jle dec adc aas pop std dec xorb sar mov outsb xor (bad) lret loopne add pop mov jbe xchg cmp repz fadds or lret out in enter repz mov mov daa or pop add cmp sub test adc loopne sti dec adc pushf cmc aam mov sub js adc and adc jge (bad) clc cmp add inc cld loopne or out jo lahf jb pop adc ds repz aas mov adc rcll pop cmp and push mov rcr mov sub adc ror dec mov femms ss mov stos (bad) enter in add inc out lock and and dec data16 mov sarb iret pop lret inc adc jo pop fnstsw adc repz mov hlt mov (bad) into jmp adc add xchg sub repnz pop popf adc and xchg mov shr cs adc data16 es dec dec imul sub aam xchg xchg pop (bad) xor mov movsl jae xor push sbb push xor fsubrl mov into lahf xor movsl sbb mov pop cltd out daa fcmovnb sbb pop aam fistp cmp xlat jle push adc popf out cmp add add adc jmp adc aaa dec cmp jns cmp repz out es jle adc std adc cmp mov (bad) and (bad) adc xor jnp ds adc adc lcall movsb and (bad) xor pop adc push cwtl adc lods push outsb pop xor iret call and adc jecxz popa lock dec int cs push xchg sub mov sbb sbb int pop stos mov outsl rol add cmc push ret repz push in into dec adc mov and xchg sbb mov je inc je faddl sub jb cld (bad) movsb sti adc pop std cli mov push adc data16 jecxz sub inc push jnp adc and shrl lods decl sbb or aas sub stos adc xchg lcall lods out dec lds adc movsb adc test arpl loope insl xchg data16 loopne mov cmp sar inc jo or mov mov fsubrl sbb lahf scas jp add pop or xchg dec hlt dec xor adc outsl inc lods pop (bad) jecxz iret ret scas in inc fcoms or sbb adc push mov mov and adc pop cmp test adc dec push xchg push arpl test or scas pushf lods sbb sahf push cmp lahf push mov js sub or pop cmp repz repz scas adc mov movsb pop cmpsb enter pop test adc mov std or (bad) adc and adc es or (bad) sbb pop jmp fisubrl fisttp dec lock jge push pop add push add jns add loop aas adc sbb adc pop sahf add rclb clc sbb jmp cmpsb push and mov or bound int3 jae sbb ret movsl outsl push sub sbb das inc lcall inc adc adc fcoml sbb (bad) dec mov add mov idivl mov leave js push adc sub jl clc and pusha adc outsb xchg cmp lret divl test (bad) adc fwait xor pop pop add mov ljmp mov or dec dec mov pop mov jbe sub and shrd jne mov loopne adc (bad) mov lea sub lods mov sarb mov xor pop sbb mov fcmovnb clc mov (bad) xor and sbb sahf xor mov adc jecxz sbb mov or repnz push lods loop cwtl adc adc fldenv and das (bad) fs and push pop jmp mov cmp es xor add cli sub pop test lret in inc out (bad) in enter imul mov sub sbb add repz lock (bad) out mov shrb adc dec mov mov push hlt mov xchg mov adc aam lock push adc jbe jne adc aam sbb aas sbb gs (bad) ljmp push cld sarb adc pop pop sbb jns cmp cmpsl lock jo std enter jle pop jno (bad) push sbb sarb fs push mov cmp loope out pop push mov dec repnz unpcklps and cmp insb bound int sub addb jecxz push or adc adc dec sti scas ljmp data16 sahf or mov repz fadds mov mov dec jl fisttpll stos es lods (bad) enter test fisttp call int fs sub outsb lcall push jo (bad) out lea (bad) adc sub pusha adc dec adc xchg xchg arpl adc test cwtl mov adc lock adc mov outsb xchg mov push xchg push inc adc pop adc xor cmp mov fbld push pop test lcall mov fildl or stos sbb popf adc mov pop mov inc sbb pop dec or add mov mov push iret sbb lret fldl2e add dec jmp and cwtl sbbb adc subl pop out addr16 js or mov sub imul repnz pop jmp xor fildl dec add or (bad) das mov outsb lret sub or int insl (bad) adc cld imul pusha ret lods adc dec jb xor aas insb sti dec jns sbb pusha jmp and adc xor rcrb (bad) adc mov or js add (bad) xor pop pop paddusb add xchg cmp out jecxz mov mov push repz adc add cmp jns sbb mov jl jo (bad) mov pushf (bad) add push int3 arpl mov sub mov mov dec mov or xor (bad) or fadds xor cmpsb xor subb or adc cmp call or nop cli mov dec mov aaa push nop (bad) adc hlt int add clc lret pop adc insb dec add sbb push mov dec popf jae adc push dec dec adc adc or mov stos sbb mov push adc push daa sbb outsb (bad) ja fiadd xchg imul je xlat aas rcrl mov lods add or adc add xchg jne lret add xchg adc push add push mov mov cmp (bad) notb dec xor pop sahf inc arpl push jmp imul add into fstl mov cli sbb mov movsl repnz mov testb dec sarb mov pop xchg popa mov or ljmp jge add add adc (bad) fsts stc int ss sbb ret add shlb movsb in add or lret xor jg mov (bad) sbb inc cmp scas inc js adc dec adc outsl sti or push xor pop adc sub adc add test cltd inc sbb or (bad) adc test iret xchg add inc add dec pop fsubrs pop ds sbb (bad) ficom jg popa jo mov sub hlt cmpsl xor enter sub adc dec mov mov lds adc mov jae enter ljmp push outsb xchg jl imul xchg stos adc in xchg data16 cmc or push cmpsl imul outsb rorb (bad) xchg (bad) cmp repz sahf and pop adc pop popa fisub sub je adc adc lcall xchg cmp adc add mov repz mov adc adc mov dec push (bad) mov add push aaa dec pop out sbb imul adc sub xchg sbb adc popa (bad) iret loop inc pop scas xchg daa ret arpl sub sbb jp sub or cltd repz fistpll inc incl orb imul pop dec ficoml lret andps fcompl idivb pop mov cwtl or insl xchg mov mov add gs dec adc leave adc add xchg xor mov or or clc jbe adc xchg mov mov push rcll or xchg cmpsb xchg and or xchg jne popa mov pop daa clc adc roll insl mov sbb adc cmpb cmp data16 jo cmp or rolb inc adc es pop scas mov lods pop adc enter or adc mov adc adc or dec add (bad) adc popa pop jp (bad) outsl xchg cld or das adc (bad) sub mov jge pop mov mov sbb rorb fnop pushf fcoml loopne movsb pop cld pop (bad) sbb imul adc js push pop sub in xchg paddsb lock add add (bad) lods mov xor jmp arpl or test lods dec cs out sub jne xor sbb push pop xrelease aaa xor (bad) xor sub jmp mov std loope adc out test inc add fmull sahf lock pop and test adc or ljmp mov pop adc jge (bad) pop inc cld sbb lea sub mov push inc mov sti out or add lods pop or rolb std idiv adc cmp xchg jbe dec inc jae push dec loop inc out inc sbb inc cmp fs mov cmp fstl push std aas lar inc add xchg ror mov inc lods mov dec call xor xor decb cmpsl adc mov xchg call adc ja or pop adc inc mov mov adcl pop sbbb pop inc or mov lahf jb xor mov sbb or or adc xchg loope psubd or jb add or cmp mov dec adc mov mov adc or outsb pextrw data16 adc fiadd repz jne fwait add push ds out add shr js xchg sbb hlt pop pushf hlt push mov push push xor js stc jne sub aaa dec ja aam nop inc mov jecxz xchg call adc aaa sbb fistpll je and aas pop into mov outsl sbb fcoml je fiaddl xchg adc sti add lahf lret xchg cli (bad) repz xor pop jge add bound adc adc loopne adcl sub out or xor pop jo dec push adc cmpsb adc in gs adc arpl (bad) mov xor or sbb cmpsl leave adc sub jns adc int3 or sti fnop sub adc xor cwtl sub xchg lret mov mov add out out jae adc lret fildll sbb mov (bad) orps mov sub test repz je sbb jns or pop (bad) je xchg xor push insl push push push xor (bad) push adc fstl jp stc jns cmp mov lcall imul adc cld dec std xchg sbb mov xchg cmp (bad) repz add popf adc int and loope movaps or push cs xchg shlb out push mov xor movsl adc and in add mov push and adc add mov sbb pushf sub adcl rcrb lcall push inc and jp push xchg daa mov dec in test push int push ljmp pushl dec inc jmp pop adc int xor dec icebp jmp (bad) adc imul scas xor into imul out dec mov adc (bad) jbe push cmpsl or ret push dec push sti aad ljmp lcall cli and mov add xchg jae inc pop rcrl cmp out and adc pop (bad) (bad) xor adc in jecxz (bad) loop fisub adc mov test inc sar pusha sub lret jne mov inc or jl (bad) or sub push test cli in loop daa adc bound and inc dec data16 loop push adc push cmp push adc adc je stc fdivrl into jg popa cmp fsubp scas out stos out enter mov ljmp push push adc in ljmp pop push jmp les stos sub jb test (bad) sub in and jecxz in dec in into add adc int3 (bad) dec cmp xchg mov pop push jns fdivs repz xor cmp icebp (bad) jbe push gs pop aas nop (bad) jns sti pop jns pop out loop je fsubr pop insl adc pop xor lahf cmp fstl shlb xor adc dec sti xchg aas push sar jne push stos icebp jns flds insl adc and or ljmp dec in daa sbb adc pop mov nop popa shrl adc pop xor int3 out or loop adc fs stc loope out pop jecxz and sub lods mov (bad) fs out (bad) lods repz rcr repz jne repnz cmp cmp sti fbld sub and int3 adc insb jmp or insl adc or mov lret mov roll dec imul xor sub lods lahf loope das mov pop out add add out into pusha shrb fldl (bad) cmpsl adc add adc adc xchg sbb add cmp mov loop sub jb or dec orl push push push add xchg and call xchg pop ret push push sahf or enter adc ret lcall adc pop les push clc sahf mov scas cld hlt adc ret ja inc pop rcrb xchg add and sbb inc lret add push lds xchg xchg loopne or sbb push adc jo fildl or cmp jecxz mov push dec pop adc cmp sahf scas (bad) pop sbb cmc fdivp pop decl (bad) pop pop adc mov adc push jle jnp jl sbb mov ds pop adc push mov add loopne adc adc cmp mov adc jecxz sbb movsl push inc push inc and adc iret jno sbb mov sbb or es pop xchg pop mov pop std adc outsl sarl insb pop ljmp dec xor jo lahf sub ret inc outsl dec push or pop jmp sub mov es push sub in lret imul jae scas push and push pop push jle repnz mov push rcrb (bad) aad adc ja xor pop mov inc jnp adc mov gs adc stos pop cli add and mov in sbb iret cmp cmp jecxz arpl inc loopne dec pop sub adc add imul push xchg xchg sbb or adc (bad) and add inc adc inc jae scas (bad) xchg and push xchg lds arpl inc js in mov adc or sbb push add sbb adc cmp add bnd call enter nop into in dec adc outsb xor movsl repnz lea adc pusha nop sub iret xchg enter std in dec adc mov insb daa in add into lods rorb test nop icebp arpl inc hlt and std adc push xchg push scas aam adc cwtl mov adc add adc cmp (bad) xor clc int3 pushl out mov rclb dec adc pop dec sbb cmp add hlt aas ficoml popf mov sbb lret jle pop jge adc sub call sbb das pushf cmpsb aam lcall xchg arpl popa and fimul mov xchg inc repnz xor adc push mov dec jns cmp nop popf xchg mov pop aam and or mov mov imul adcl push imul ljmp lea adc iret adc decl adcl leave add xchg sub icebp push xor adc push nop jbe mov xor push lods dec nop mov xchg xorl cmp add pop and push adc add xchg pop xor cmp mov out sbb adc lcall ja sahf jp adc add mov add aaa or inc fwait scas lcall outsb jne push clc and xchg lods mov test cmp sbb or pop lahf pop pushf adc popf enter std sub jns adc insb repz mov adc mov inc rclb into inc mov mov call mov xchg dec xchg insl mov adc xchg inc ja mov adc pop push lcall fistl (bad) int3 mov add in mov xor push jmp pusha adc outsb std (bad) gs mov adc insl or in push call mov mov sbb add jns or pop popa rorb push sar stos in orl add mov jb push cs mov xor and or jle add xor nop adc (bad) adc inc jl jmp arpl (bad) js add xor adc cmpsb (bad) pop es pop cmp sbb pop outsl pop dec mov ret dec sub pop dec fwait imul addl jecxz data16 adc scas ljmp sbb and sub add repnz cld pop jp adc adc push es das pop outsl cli cmp adc popa imul (bad) icebp ja add pop sub ja outsb mov sbb shrl rep jnp mov adc outsb jmp into mov xchg daa movsl sbb jnp adc lods push sub push pusha (bad) and pop adc test or adc cmp adc adc or cmp fidivrl cld ficom mov dec daa add and lea (bad) adc adc push (bad) loope push adc repz push pop adc data16 rolb pop pop movsb add xchg mov sbb std sbb adc cmp xor daa (bad) int3 or stos mov adc push or cmp outsb mov sub mov adc int3 popf stos cwtl sub repz add dec test or xor xchg movsb add xchg cmp xor push adc nop sub adc lahf mov xor cltd and (bad) rcrb cmpb in push xchg into pop sub sti cmpsb add fdiv repnz ljmp fcmovnbe or mov pop cli pop sbb inc dec popf jecxz mov and loopne pop push add lcall sti adc test dec movsb add iret daa cmpsl in mov rclb dec jmp xchg jno mov and or (bad) (bad) jns aaa xor adc movsl imul mov jmp nop popf lods xor enter adc mov xchg bound cmp fwait mov insl push push dec push rcll in cmpsb cmp out dec popf dec cmp mov pop adc jb cmp push adc and adc into lahf sbb adc inc sub adc call sbb jle jge adc fimull les adc (bad) (bad) mov cltd adc out jmp or pop add (bad) add adc call iret adc mov adc repz cs xchg lods xchg pop (bad) sub sbb jecxz mov inc adc pop aad jbe mov fstpt sub movsl (bad) and mov in xor push outsb adc je mov rep xchg sub stos rorl jge das sub movsb sbb or es movsl xchg and or leave adc adc aam mov xchg ds mov cltd sbb or pop cmc xor int3 fdiv mov test out gs cmc or xchg add or adc sbb or movsl cmp call jne or (bad) mov das push adc dec pop pop or cmc mov or mov mov jge lcall push and mov arpl jno rclb push xchg sbb dec pop sti xchg pop adc sbb mov insb (bad) into outsl adc add (bad) repz cld int3 das push push inc sbb or sahf adc jns mov pop out inc mov adc cmpsb mov int3 xchg popa dec imul aam repz mov jp or push in jg and ljmp xchg xor mov jmp adc push pop popl sub scas in inc push adc rcrb adc xor sub dec icebp pop ss sti adc mull pop sbb jmp xchg push (bad) jmp cld imul sbb sar push std aam pop xchg lcall jo stc (bad) and push pusha ret imul sub out add repnz pop (bad) std rcll je cmpsb out les adc aam aam dec out andb adc xor jle cld pushw adc negb fdivr pop sbb xchg ret lahf adc arpl enter adc shr push in aam pop out push (bad) cwtl sbb cmp (bad) adc dec out adc push adc jo jns or xlat les jno repz repnz leave add test fimul mov mov aas sbb pop aad (bad) pop ret xchg (bad) notl jl stc inc mov pop ljmp xor pop fnop pop pop adcl jl and outsb into adc pusha push dec pop xorl cmpsl insl aam adc ret testb aad push sti adc loopne inc mov add mov mov jns cmp fadds in sbb adc leave xchg or movb test stos push add dec shlb loope or cmp je sub int3 add dec movlps cld scas adc cld ljmp inc hlt (bad) lock icebp fdiv adc jne aaa xor mov imull adc mov push inc adc pop icebp mov add sti pop cli frstpm(287 into repz arpl xchg scas sub (bad) xor nop aad push mov cli lods sub add sahf jmp pop int3 nop dec fstl fildll jp je mov lcall test add lods (bad) pusha add pop insb dec enter push mov and jecxz (bad) cmp adc mov cs cltd mov notl mov repnz adc xor addl inc and xchg ljmp cmp pop adc rcr cli fcomp push xor mov pop test sub andb push xor test add mov xor iret adc inc andl cmpsl mov inc into jbe adc nop and jmp popa lods xchg lret scas adc xchg je ja je adc push or push call pop or lahf push cli jno mov jae lock jp adc dec and stos mov xlat cli repnz repz dec mov das and mov push mov aaa out lods adc and shl jbe sbb mov movsb cmp add lea popa push repnz add (bad) jae cmpsl inc xchg adc cmp dec cwtl or lcall lahf insl xor js xor cmp sbb xor or rcrb cmp sbb mov inc sub jp push pop adc pop sbb cmp or adc test jl sbb sbb pop inc adc jnp fdivs cld nop ret pop ret sbb mov mov adc out adc cmp mov push outsb push mov dec dec adc test adc jno inc xor into push sub push movsb mov adc daa notl insl adc sub adc xchg adc push adc mov int3 (bad) and mov mov xchg sahf xchg pop mov mov aaa inc sbb insb add mov adc cld dec ficom lahf and test jg (bad) mov movsl cmc lds stos in test adc rclb imul mov fwait sub movsb mov or xor xchg pusha shr cmp test repnz (bad) mov xchg xor sahf and xor adc lock cmp adc cld pop mov jns mov test xor or adc pushf push dec push mov (bad) and inc sbb cmp or sub push add lcall adc inc das jmp adc pop xchg and xchg es sbb cmp das cmc xor and and xor mov mov inc jg nop sahf in dec adc stos mov and fwait jns jg mov sbb adc sbb add cltd xor add jl insl mov add inc ret test push clc adc loopne cli mov adc adc lea dec dec dec adc xor test sub add (bad) sbb xchg fiadd cmpsl cmpsb cmp mov ficompl mov mov and push push xor (bad) xor pusha rcrl mov add ret jnp cmp push mov out sbb in adc jmp popf cli push jecxz arpl add adc aas push scas adc stos mov inc push adc xchg fsubrs or rorb loopne pop not jnp mov pop jb out xor (bad) xor arpl das nop call mov inc mov repz std dec jp push cs fwait je or fxtract adc fcomps das lcall cmc pop jb add cmp mov mov adc pop dec imul push add push lret fimul sub gs clc adc inc cmc inc jb out jno adc xor lods sbb popa in call or stc push clc push jecxz mov mov fcompl add test daa add adc call lds jecxz int3 push outsl ja loope mov mov xchg xor cmp sbb add pop sub dec sub xor icebp and adc xor mov rclb mov and jbe mov pop or adc hlt mov xor mov dec adc inc push call jp mov xchg pop inc sbb ds jb stos out adc push stos jecxz add sub fs test (bad) mov add mov add adc xchg test inc jmp je add fwait test rclb push mov aad flds or iret adc sbb adcl push jns sti sbb dec mov sbb int3 aas push sbb adc nop sbb pop add add pop adc or push push add sub add or mov std push sbb in arpl jl adc pop int3 jge shr mov std adc jp adc in mov adc testb push fnclex lret xchg add pop xchg cmp xchg sarb mov add int3 cmp les lock adc inc pop sti fdivr iret xchg mov sbb and clc aas cmp stc (bad) mov jg inc ds xchg mov pop adc sub mov (bad) adc in cld iret (bad) ljmp xchg and xor jae (bad) out inc jno into adc lret (bad) or cmp adc pop gs sbb or imul jne sbb lahf mov jne adc stos inc dec in add into dec shr lcall push test scas repz scas add cmovl or in push insl push or cmp int mov and (bad) or adc rolb push fwait push and or mov mov mov mov adc xor jnp jge jns lcall mov (bad) jecxz lahf mov mov pushf mov add movsb jg pop imul jns lahf mov outsb aaa adc mov rorb (bad) dec inc imul dec (bad) mov mov or dec mov add cwtl cmp pop leave xor push adc cli push jne push xchg movsb add cmpsl sahf mov dec sti (bad) cld rcll add mov xchg pop pop pushf push test xchg inc adc mov lods outsl or adc fist outsb add lea push xlat fldt add stc dec xchg (bad) mov or pop cmp mov test add mov mov add xchg adc adc xchg xchg xchg rclb mov arpl outsl pop div movsl pop loope xchg xchg sbb mov cmp and fsubl pop cmpsl or cmp insl adc mov adc add mov adc pop jns xlat lock mov jno dec pop test cmp repz sub adc (bad) int3 shr pop scas push xchg or lea or cmpsl popa orw inc cwtl mov rorb inc mov inc adc in inc lcall or push cwtl xchg movsl mov add add xor xlat add jmp or inc movq sub dec sub adc (bad) insl or adc dec dec (bad) repnz mov pop adc mov cmp sub adc xor or adc lds addr16 pop sbb pop repnz adc xlat jo push xchg adc add add jmp mov push push cmp les adc xor cbtw adc (bad) fnsave mov std fstps pop push mov pop ret cli dec (bad) push scas cmp lret sbb (bad) sbb lea mov push lea adc and jno mov pop inc ds mov and cli mov pusha stc dec decl add cmpsb lods sbb sub divl in add lret pop jno mov inc dec adc sub push lcall fistl adc sbb mov (bad) or mov rclb mov mov or add cmp daa rorb mov add imul outsl aaa adc add xchg mov pop lcall push cli scas add add inc adc xor loop or (bad) sbb inc mov or repnz sbb mov xor add xor aas aad pop rcrb sbb push add xlat scas mov inc push (bad) pop ljmp stc adc jg orb adc outsl and or push call or mov (bad) test push add inc sbb dec sbb bound dec and mov or sbb dec adc fisubrl negb cmp and movsb pop shll or inc or gs outsb out adc (bad) lcall mov adc scas stos jb push or adc popf add aad stos add test rclb mov pop popf or adc ja repz adc jp out (bad) int3 jl ljmp mov sbb or cli mov fidivl les cmpsb adc fwait mov cld or sub sbb fildl cld pop fidivrl mov sahf and mov mov sub dec or sub in push lret inc xchg imul (bad) sub fwait movsb adc gs mov in cltd aaa mov adc dec inc lret repz pop xchg stc cs cmp sbb sub rclb aas lahf lcall jle sti sbb mov rorl into lea sub mov aaa or fcmove jle add adc insl or adc mov adc mov or imul out lds xor or or gs add (bad) pop sub push notl xchg push or outsb hlt add add jno lahf mov inc cli inc jle inc decl dec pop int3 popf fdiv imull cmp push std (bad) ss adc stos sbb test adc pop pop jge fwait xchg lahf mov push dec cwtl pop (bad) scas hlt add adc jmp ss mov sti call stos adc (bad) dec loop fs cmpsb adc jnp aad and in shrb out inc ret inc adcb std cmp adc sti mov xor repz jo sahf cmp loop repz mov pop stos (bad) insb daa adc or sub sbb rcll inc jmp in outsb aaa ljmp adc lods clc lea vmptrld adc xor mov add imul dec push xchg test adc or (bad) cmc (bad) sbb int mov imul hlt adcl fcomps cltd mov and adc xor sar (bad) adc fwait cltd mov cmpsb cmp jo jg stc sbb aaa aam adc pop sbbl aas mov push and insb adc and test daa sbb hlt fildl movsl pusha adc into das andb push andl jns sub stc jmp jne stos adc ret pop cmpb dec vcvtpd2dq cmpsl adc dec pusha ljmp inc mov das mov jae xor enter aaa popf xor push cmp adc js adc xlat push int3 jle icebp sbb daa inc sbb cmc push test adc jae addr16 adc pop pop sbb jb loop mov xchg dec adc push rclb jns add inc into stos adc xor push enter or (bad) adc cltd adc adc sbb push push xor or cmp adc sbb in out sbb lock push ss push or mov mov js,pt or (bad) sub dec jecxz out rclb cmp mov pop movsl mov sar pop std (bad) movlps xchg sbb or push jp adc andl dec stc test repz or or cmp ret lret mov xor aaa add or mov test lods (bad) or sbb rorb loop movsb lcall mov add sbb mov adc jge push mov test jle or in pop daa adc inc jmp dec cmp adc lods sub xchg test dec bound adc dec pop cmc lea dec adc xor sbb push jmp sub adc shrl pop sub xchg mov adc sar cli jp adc push and cmpsb mov cmp cltd outsb or mov xor sbb sub cmpsb aaa ljmp or mov mov sub sbb outsb adc jbe shll (bad) adc arpl sbb cmp pop adc rclb gs or mov add cmp lcall and cmp inc pop loopne adc imul int or mov adc fimul xchg int repz (bad) jne adc push hlt sub jns adc stos mov lock loop sarl push push push (bad) xor iret stos xchg or or sbb pop pop inc adc arpl pop jmp scas jns adc sti fcomps popa mov add xchg fmull enter inc adc xchg (bad) (bad) cmp add jecxz fmull icebp adc pop shrb imul jmp (bad) pop loope push in dec and daa push add mov icebp and repnz add sbb adc les adc sbb popf cmpsb adc sar sarl stc mov mov pop sub repz test in enter adc pop fiadd loope xor test fldt mov (bad) dec in adc rorb test repz xor mov jbe and adc adcl sbb mov bnd fstl mov or fcmovnb jecxz jbe (bad) or stc add les dec add adc repz imul (bad) or std add pop (bad) adc stc ret xchg jns aaa out les dec les add stc xlat jns push mov push mov pop in ret movsb mov cs adc pop aaa mov jl aaa adc cli adc xchg adc (bad) loope in dec push mov ret repz adc push adc push inc rclb movq hlt fimull arpl or loopne add mov push lods aad xor jb push decl outsb adc mov stos sbb xor adc or cld std mov adc add js adc push or popf mov add xchg outsl jo pop subb pop jno xor out push adc push pop sbb (bad) or add push lods incb insl or in mov bound add mov push inc test fdivs adc (bad) pop push popw pop repnz mov adc adc lahf pop arpl hlt jmp sbb cwtl and pop addl adc outsb pop out fnstcw fsub jmp (bad) xchg fwait add mov (bad) adc pop outsl lds in stc mov ja adc je mov daa shl in sbb cmp adc ja clc inc push xchg popf add aas mov clc dec jl pop mov mov stos add jge adc pop sub sub or add and xorb push mov jp adc stos xchg inc mov mov decl ss popl sub adc sbb jns mov push xchg xor jns mov insl sbb add ds inc insb adc xor cmp cltd cwtl les pop pop bound out or mov mov sarl cld mov or adc push jmp inc pusha cli mov dec mov ret and add or mov mov cmp add repz cmovo inc stos adc and loope repz cwtl and (bad) and std cmp (bad) pop call jbe in roll jg pop pushf int3 cmp mov pop jmp adc popf and outsb sahf cmovnp lock (bad) adc push pop dec cmp std adc outsl jno,pn sub stos xor jle in in addr16 sub lea lret je repnz xchg and adc inc jbe mov jb xchg call pusha dec lock sub lea xchg ret xlat inc negb (bad) xor cmp cli pop jp sbb adc cld sar outsl js push adc daa mov jno repnz (bad) and push jle adc dec cld leave fwait pushf stos sub adc (bad) ret inc fnstsw jg xchg sub mov ror dec add mov mov int sub dec fs arpl mov lahf jns inc in in or adc out ljmp js addr16 adc jmp sub mov mov and adc mov pop insb clc mov int scas jne jno outsl dec xor xor stos rsm xchg xor sbbl jle inc pusha loopne push addr16 stos sub insl push ror das or adc pop xchg cltd sub xor arpl jmp mov pop xchg (bad) xor imul inc mov call (bad) das (bad) adc adc lret dec and inc adc xchg jo sbb pushf mov xchg pop inc jns pop cmpsb add mov xor add mov out and push jmp lret and xor pop cli fistpll or aas popl pusha pop (bad) cmpsb lods xchg hlt aad xchg (bad) dec movsb mov out mov stc adc jns fisttpl into and ret sbb sub mov push gs adc shl adc rolb (bad) xchg adc mov push inc ss sub jno adc fscale ficomp popa cmp mov push adc movsl lods pusha repnz push xor mov shr mov ljmp add adc push imul or push into imull fcoms add dec push out std movups mov adc pop hlt mov pop pusha push adc (bad) icebp cs pmullw mov cli mov mov addr16 test pop jbe bound aad aam ret (bad) add mov pop stos adc pop data16 fidivl enter sbb cltd in push push imul sbb xor jne rclb gs mov adc into orb xchg inc out adc push cmpsb dec xchg xor test jmp pop enter sbb adc jle lock mov jp xor jge xor jo rcrl push loop adc push aaa xor push push imul adc movl iret mov xchg jbe xchg insl call lahf fsubrl mov adc adc or sub jns cmp dec adc mov out bnd sti add jecxz and in outsl (bad) mov addr16 and mov popf cmp mov xchg jge mov mov jns adc mov mov jmp mov xchg fcompl push pop test adc int3 inc out rorl xor mov pop or pop ret adc into push dec and and imul jmp adc leave xor out cmpsb push inc or jbe adc xor mov icebp jge adc into adc bound (bad) idivl adc xchg sbb out pop cmp and mov cli adc outsb cld rolb adc jl fsincos aas sbb push pop jb mov insb ds clc leave (bad) xchg xor mov (bad) adc adc add ljmp sbb pop shrb add add les adc jl fcoms push leave jecxz add mov loope cmp (bad) jbe push arpl dec (bad) pushf outsl xor les lds inc adc mov arpl sub cmc push lcall fsts add jp leave cmpsb jmp or lock cs or notb fstpl adc int3 (bad) int adc in scas dec or jno push lret mov mov push cmpsl sbb pop lret inc or leave mov adc and cmp dec les xchg and push push repnz cmp pushf mov and fwait test mov xchg cmpsl mov mov add in movsb pushf lret dec adc pop ja push mov pop pop jg fnstsw hlt fsubl mov mov aam sub jle dec outsl imul sbb fucomi fdivs or stc inc inc adc jl pushf xchg xchg movsl mov addr16 adc test sbb fmull pop mov and jae sbb aam push adc shufps adc dec pop dec and sub or flds hlt or cld adc mov cld outsb adc sub imul mov or push outsb xchg data16 adc xor fimull push sar movsl ret lock pop negl pop adc xchg hlt push push nop push out xchg repnz (bad) inc push mov dec daa cwtl adc cli cltd sti mov mov nop jns dec and repz jg sbb or and fisttp stos int3 sub mov xchg push pop pop mov cmpb pop std sub or into and jne ljmp push outsl adc cmp pop scas xchg lea or cmp push arpl cmp adc add pop rorl (bad) sbb dec sbb pop dec add mov lock ret pop data16 cwtl clc sbb adc mov lret mov mov pop jmp mov xor xchg adc lcall orl sub xlat mov xchg in xchg movsl adc cmp cmp mov xchg xor push stos xchg sub inc adc and pop popa sbb fbstp sbb or mov add mov xchg mov mov sbb int3 outsl aam sub lods fwait xor pushf mov push and sub bswap js push test (bad) cmpsl adc add rorb scas push repnz icebp or and push push xor or xchg in roll xchg mov and sub cmpsl mov jae fbstp imul xorb or add das out repnz mov fadds xchg repnz xor add sub add pusha cmp aaa push lods jbe add push idivl add dec cmc xor pop mov adc push scas adc and sbb xchg push imul cmpsl sbb dec mov mov sbb mov jns adc adc dec and in jnp cli and adc adc push pop inc std out pop inc push adc roll adc int mov (bad) xor jle jecxz loope popa pop (bad) adc sbb adc or mov xor push test or jmp imul xor shlb xlat in jnp pop jae adc testb adc push scas mov xor mov adc xor mov adc mov and mov pop sbb push sti pop lods inc mov mov test push jg push popf xor and rcrl mov sbb add loopne xlat lret dec sub adc dec mov push mov add js pop adc lcall adc shlb xor adc rolb sbb push inc pop cmc mov lcall xor fdivrs pop (bad) cmp scas mov icebp (bad) mov jmp mov ss inc jle into adc lea add (bad) lock je jae lret scas add in and test pushf jne mov adc mov xchg push mov cmpsb xchg fsubrs or mov icebp (bad) xor repz sbb mov loopne fs fwait mov mov mov stos mov arpl dec cmp adc fsqrt nop fwait mov fucom fmulp stos fmuls jmp adc rclb pop sbb fsts or mov or xchg adc push mov cld outsb iret adc leave call sbb push loope mov or mov shll xor rcrl adc mov dec adc jg dec mov jnp jp add iret test stos fsubrp pop pusha inc insl rcll int3 dec das outsl iret jb repz pop dec jo xor add into jmp int3 adc test xchg mov clc ds pop adc mov roll jle cltd adc (bad) adc into sbb adc xchg (bad) mov decb push adc aas lcall mov out imul xor or inc dec jl adc in adc fsubs repnz lcall adc dec push jle mov jnp mov cmp stc mov pop xor adc mov stc stos mov or mov outsl push sub leave (bad) scas sbb aas pusha and or lea lods adc shrb mov adc int3 test inc out adc mov dec stos pop jmp push adc pop (bad) mov adc cmp xchg mov sbb rorb or mov adc or push hlt fnstsw pushf cmp imul adc fcmovne jg cmp sbb adc push jns fild out les dec fisubrl aaa cmp jg inc pop ja adc fmulp jle fsubrl xor orl inc push adc adc int3 sahf scas daa mov or and andb push sbbl mov bound xchg addl out sbb mov push int cmc loope mov insl push pop andl jno push push leave jnp adc scas arpl dec xchg fwait mov xor hlt adc adc add in adc outsl sbb mov mov or and lret insl pop push repz push in or insb sbb push aaa stos add push stos mov jle lea jge adc mov or jno mov dec mov test push dec hlt adc adc stos in punpckhbw sti iret pushf in push das ss adc mov pop jmp (bad) mov into bound inc stos lods push fldt or push pop jb or push mov mov cwtl push int3 adc data16 mov or xor push xor adc jmp jge adc or push aas add arpl inc jmp add call outsb jnp test cs adc rcrb js stc pop pop mov in inc xor mov inc pop mov jo mov mov pop lock enter push cmp adc js leave dec mov adc jbe adc push or mov adc loop out into nop push pusha push hlt push outsb jp sbb push lods add mov adc (bad) push daa testb pop cmp push (bad) mov adc adc or jo push pop fldcw adc jnp or sbb adc and inc pop sub adc fcoml jae or cld enter nop and jecxz dec jo add jbe adc adc dec outsb rorl imul adc stos or rcpps ret mov inc cli repz jbe push pop jae fiadd adc outsb mov adc (bad) jl mov add sbb adc sbb xor xor (bad) dec adc adc stos jno lret jae cmp popl ss pusha rorl insl xor ret adc mov push dec inc or or je repz mov xor pop cs push adc clc cmp jno shrl add push repz xor jnp (bad) adc cmpsb adc decl (bad) push cld push pop push sti stos out cli lahf sbb jns pushl and imul test fstl push pop add jg cld pop inc pop adc pop mov jge int sub insb movsb mov adc jbe push hlt scas ja sbb or add fs cmpsb movlps pushf mov adc add add addr16 adc mov insb pop imul add jae adc sbb mov mov cltd insb fdiv test lret les int mov adc pop aam xchg add adc (bad) push jp das rcr pusha outsb or clc mov jb adc sub dec jnp and push (bad) jl bnd add test sub xchg push jle fwait repz xor xlat push ja xchg mov dec out push cli adc cmpsb adc pop aas adc cmc ljmp pop (bad) sbb pop loop (bad) xor clc mov cld jae jnp adc xor aas sbb rolb inc test pop dec jnp adc sbb flds std push adc fildll push enter push dec adc scas adc adc stc (bad) dec adc add jecxz sbbl mov js mov mov mov jmp adc jo sbb adc (bad) fnstenv xor sahf push adc push add sub push add dec jecxz repz mov sbb pop mov push stc pop mov mov jge jns or cmp push or xlat sbb repz add repz push outsl push scas sbb or dec or mov out pop adc (bad) fimul adc addr16 adc xchg mov inc jp push xor aad adc or push imul adc or mov inc sbb push jl adc add jecxz dec xchg adc fistl dec loopne ljmp push cmpsb pop ss aaa sub adc repz mov xor sbb aas mov and pop jae (bad) pusha lcall add aaa fistl cmp fdivrs mov bound mov scas pop mov test ljmp adc push ret stos or imul rcl ret sub push jo test adc das adc xchg mov xor in xchg dec sarb mov int3 scas out and lret imul iret divb mov jg mov repnz or int je mov dec icebp enter adc insl (bad) into outsb repz jle dec (bad) cmc jecxz add inc testl ja (bad) lock jae outsb cwtl hlt push pop and int3 add xchg sarl cmpsl cwtl jecxz mov int3 inc outsl daa mov sbb mov inc and mov or xor adc js push mov sub adc or icebp push hlt je nop (bad) cmc xchg add adc (bad) fsubrs add mov add movsb repz rorb sub scas sti or and adcl adc gs adc and (bad) pop sub add insb inc clc push out adc lret mov dec or adc popl repnz loope,pn mov sub push bound in (bad) jmp xchg sub mov xchg dec insl push rorl adc lds adc test (bad) push adc jae adc loope inc imul adc fcos js addr16 adc aaa sbb std pusha ret outsl stc mov cwtl mov mov pop fs push mov sbb mov fs jno pop bound jg jnp cltd dec xor dec push out aam lahf add in mov mov js loopew imul mov lock jnp mov sti rolb pop or loopne cmpsw add cmp pusha cmp lret add xchg imul sahf addr16 pop adc int adc enter aad (bad) ljmp adc and stos or push push adc enter xchg adc push subl (bad) mov adc aam pop mov popf adc push push xorl je in adc jo addl sbb std push and push aas fistpll adc enter dec imull pop jno mov mov xor insl adcb dec xchg mov jmp nop jno js jo adc add out stc adc mov outsb mov or adc lods fisub jne jle bound (bad) je mov rolb pop jecxz sbb cmp adc sarl sbb lea xor repz test mov or add bswap sbb xchg or mov sub aam inc (bad) xchg add pop xchg xor rclb movups adc (bad) or stos push loop dec jb pop adc mov fdiv sbb out enter adc pop test or adc xlat pop mov adc xor xchg outsb fwait push fisubrl icebp jns adc (bad) mov test sbb adc loope pop add subb add jp adc imul push and push jns popf push mov adc mov jle pop adc jae push fucomi xor sbb lret icebp jns nop cld xchg popa dec subl insl cs int3 iret xlat pop mov shlb leave or repnz pop jl add inc sub inc adc cmp in (bad) jno lret push cmpl adc jle popf pop adc pop jbe rcr pop xchg mov xchg mov int3 cmpsl imul fdivrl add xor add push sbb adc pusha lret fbstp mov sub fs bound inc adc mov int3 or test or xchg lcall xor adc cltd adc mov cmpsl sub fcoms or push (bad) pop and adc and adc int pusha jns fcoms std enter dec fcoms insb fisubrl clc or inc int adc fwait repz vmread and and pusha es adc sub sub adc fadds mov and xchg adc xchg cld call int3 mov xor in (bad) push push or pop adc push shlb out sar mov enter xchg (bad) shrl movsb aam pop loope jno mov divb xchg bswap adc lret aaa jecxz cmp popf lcall icebp pop jg add push pusha stc repz mov xlat (bad) cmc (bad) adc mov jle cld adc inc std ret pop pop dec sbb and iret mov xchg outsb aad fimull cli leave rcr dec shr adc lahf aam cmpsb add inc xor out jmp test out shlb faddl insb pop mov xor adc sbb mov popf fsubl pop and push and lret frstor inc pop pop mov and and cs int out or js mov dec mov mov mov scas sbb dec call lods icebp out dec fs notl xchg lahf mov int3 xor or jns adc or mov aad xor cmp cmp fsubrl test push jmp push xlat and mov mov inc mov repnz adc and fstpl jg add jmp fs (bad) (bad) sbb imul adc movsb int3 jbe hlt out mov or mov push repz inc lret adc es lcall adc xchg popf ret lret sbb push adc push pop cmp pop aas ds clc add jmp das fwait xchg push stos aam cmpsl push sub sub jecxz and mov pop stos cmp jg dec and (bad) mov call xchg sub and popa jp adc add fnstcw sbb nop jmp repnz and mov adc add rcrb fcmovne adc jne mov mov xor sti lods adc cmp add sub and xchg pop pop adc rorl sbb jge mov popa adc (bad) cmp xchg sbb imul lds outsl jb or lahf adc (bad) adc add mov pop movsb test mov outsb adc repz xor mov sahf frndint dec test decb jnp adc or pop outsl adc lods inc mov mov ja adc inc xor popa mov test sbb arpl adc insl popa js mov pop sbb jge,pn adc xor xchg fistpll jo adc dec cmp push adc dec stos lea xor sub xor jecxz bound or dec lods adc sub adc addr16 in xor push adc int3 xor xchg loopne push dec mov push loop adc pop push adc and mov pop cmp fildll daa lea repz add push mov push stc adc cld ret rcrb push out xchg popf les adc mov scas lret xchg loope add sub adc sub js movsb adc sbb sub adc fs incl test repz cmp adc xorl loope orb dec test adc jmp dec mov adc pusha mov bound dec jg repz add add mov push xchg xchg out push js (bad) jbe aaa xor jns lods fldl sbb iret push (bad) notb push xchg xchg mov or sti mov sbb adc arpl add sub mov push hlt test adc daa int popf cs fisub sti xchg cmp hlt sbb out inc daa fild jge adc xchg stc stos repz adc or mov std scas inc bound jge test ret repnz mul (bad) adc mov and sbbl or neg adc lcall add jo fcomps repnz int int3 es mov imul jmp push rcl push arpl jle inc lret in imul (bad) into adc dec mov dec ljmp sahf movl dec lret out xlat adc (bad) sub jne daa push jecxz mov xor push adc push (bad) mov mov std push jg jns pop jp fsub cmp push pop adc push stc push cwtl adc cld cltd popf fisubl addr16 inc add sub jge or std xchg push faddp lea inc in sub lods pop adc clc sub in sub lods jmp mov dec mov enter in subl (bad) cld jp jge cmp popa jmp mov cmp out adc jg inc imul cmc cmp inc lret mov or inc push out test out and adc int3 gs push mov cmp dec lods rclb mov xor insl add daa xchg adc fxch inc adc movsb mov adc inc rclb pop cli push adc stos js adc sbb and test mov insb daa or pop psadbw pop xchg jl rcll repnz mov stos add pop or jge scas adc xor mov or icebp adc or jle or scas repz mov outsb or popf add dec jg outsl or add push sbb pop dec sahf dec add lods mov adc adc lods std xor xchg cld adc jp rolb dec and movsb adc movsl bound adc adc mov or cwtl adc xchg es sbb mov adc pop push push sti mov sbb lcall sbb mov sub sub data16 or imul pop sub enter dec out sub sub push jmp mov orb xchg sub mov sbb mov xchg mov clc stc adc ljmp jg adcl adc fistpll popf cmp cmp ret adc lods mov outsl pop jne adc cmp adc cmp call xor pop sbb xchg stos and mov add out adc imul call out push (bad) adc mov (bad) dec andl lea xor adc jno out add popa pop push xchg rcrl popf push aas or mov in mov adc pop test jle push int3 jecxz adc sahf mov mov sbb insb outsb push imul push mov repnz lahf lods sbb (bad) push sub scas nop (bad) adc sub push jg fimull fwait (bad) ljmp enter mov adc inc aaa cmp mov push xchg jbe xchg mov loopne xor das adc adc in mov push hlt jmp lock mov lahf fs mov sahf daa adc clc repz push sahf or pop stos cmp jg jo cmp loop dec sbb and inc mov mov rorb add dec mov adcl mov ret mov adc xchg lds cmovns jecxz iret sub xchg or cld mov xchg pop nop sbb adcb sahf and (bad) jge repnz cwtl xor outsl aaa mov (bad) adc imul subb lea mov sub sbb shrl outsl pop pusha push xor xchg shrb sti dec inc xchg pop xor cld (bad) bound mov mov inc cmpsl clc mov adc jnp cmpsb arpl adc fildl xor cmp pop ljmp jg leave out dec adc cs add fs pusha fsubp pop cmpl push and adc adc test and adc add sub jmp sub push icebp jmp mov adc leave cmp or lret and adc xchg (bad) imul movsl add mov sti mov jp adc shll push mov je cmp push push adc cld jecxz xchg adc xor xor add adc or adc insl or out or in repnz pusha adc xlat repz (bad) push push adc (bad) adc adc add out add xchg adc add mov add cld dec add inc ret push adc icebp fadds sarb xor mov std push sub repz push adc adc adc xchg mov hlt inc adc outsl adc popa insl movsb adc xchg cli rcll cld mov adc mov cmp setb (bad) jmp mov fisttpll mov enter or mov int3 adc ljmp bnd cs outsb scas adc xchg (bad) xor adc xchg adc cmp adc fdivl fidivr add aam (bad) repz (bad) ficomp push enter outsb push ja insb imull jbe fsubrs fs xlat cli sbb push jecxz push int3 arpl cmp adc mov jno jo mov and sahf xchg xchg mov dec in into add ljmp (bad) decb loope pop adc mov sbb sbb adc dec in push int sub or fsubrs aam repnz sub scas repz xchg loop loope (bad) hlt sahf cmpb add mov into imul jns pusha lahf push adc cwtl adc xor pop jno add cmp mov fwait sbb push sub adc in xor or ljmp xchg adc (bad) loop pushf hlt xlat adc orl mov rolb adc pop mov cli lret jge pushf xchg jle adc pop stc mov push (bad) fwait arpl xchg mov outsl push pop lret push outsb adc dec je pop scas sbb (bad) out loop add dec cmp adc sub pop dec jp pop addr16 xor into call out xlat adc rcl inc mulb fistl push ja hlt adc je lock adc (bad) sbb mov add fildl popa jge lea jl fmull push icebp jne (bad) xor sub ror jge mov sahf xchg jg mov pop fstpl lods repz aaa adc lret mov dec dec mov int3 (bad) dec adc push mov or insb add rcl xchg cmp bound and (bad) fs adc mov fstp hlt mov xor sbb jge sbb sar jl adc scas test or mov or adc adc icebp cmp repnz mov push pop es outsl enter aaa loopne sbb rcrb ja push push adc xor xlat aaa and sbb jp sti inc cmp pop sbb push (bad) aas out retw cmp sub xor pop jae fnstsw out (bad) jg mov ret mov inc out push lods jecxz xor inc and adc adc cld (bad) mov jne push pminsw jmp adc sbb mov adc inc adc imul xor repz push stos add mov push xor add sti movsb or mov (bad) jmp adc push sbbl pop stos adc xchg sbb jmp fdivp pop mov sbb and sbb xor popa or iret xor push adc jecxz sbb or sbb fcoms jp adc cmp pop fstpt out xchg es inc push fwait int adc jmp adc mov xchg sti aam imul iret adc mov adc or push nop test imul aaa push in push repz das xchg lods jbe sub adc in pushf hlt ljmp pop sub mov in adc paddusw xchg jae stc repz add adc jno xor in stos cmp repnz pop push and cmpsl mov adc xor xor aaa (bad) ficoml outsl push mov push enter mov inc pop adc movsl adc loopne jecxz outsl (bad) movsb adc les shlb inc repz mov sahf adc xchg or mov pop or sbb adc mov lods adc scas outsl popf adc mov lret sub jecxz cmc daa insl or mov adc sub (bad) movsl xchg mov mov lret bound adc rcll in push aaa sahf sbb cmp push shrb das push push (bad) cmc add jge jle sbb loop adc jl in cwtl adc popf mov adc lahf pop (bad) mov (bad) call or test sarl mov adc jecxz arpl inc imul push pusha sub dec insb repnz std mov pop pop sbb not push sbb adc xchg jns jecxz adc fnsave add vmovlpd sbb out (bad) scas ret add test and mov or lds add repnz xchg adc inc jns adc fldcw mov dec add adc stos adc xor dec xchg popa dec rorl in xor std adc repnz cmp inc add mov push imul adc mov sub inc pmuludq xchg jo mov adc js adc daa scas pushf int3 pop pusha ret jmp adc fdivs pop mov and xor adc xchg adc popa dec pushf lods cld inc popa fstl jmp adc adc dec into ljmp inc and xor adc mov push jge xchg insl adc repnz mov les adc xchg clc fcoml adc mov push jle (bad) call rclb arpl fwait mov cmp pop jb jno mov dec pop outsl cmpsb in adc mov ja and sbb icebp cmpsb repz xor andb scas pop adc ret xchg adc dec adc mov jl xchg mov adc fdivrl sub adc cmpsb mov mov push mov icebp ljmp pop sub jne enter lods adc add adc jle or addl dec xchg leave incl mov sbb std out lds mov add add sub xchg fnsetpm(287 mov push ljmp (bad) lds sbb movsl mov mov test sbb lret xchg mov jg push (bad) xchg les adc pop push pop xor sbbl inc lds push inc jle adc adc or out or push push adc jnp adc inc cld push lods andb adc repnz adc sbb insb xor jge lods dec loop fcomi fiaddl adc imul or (bad) and (bad) or dec (bad) xor repnz push mov cs adc jnp push negb jne adc adc pop insl mov push inc hlt push and (bad) push jg pop cli jle stc jnp (bad) fwait bound adc cmp fwait cmp pop mov lret lds mov (bad) xor incl sahf add rcll cmp outsb (bad) leave insl ljmp sbb inc cmpsb addb mov inc mov lret test lret mov sti andl adc movsl das test jg pop sub adc and iret out xor mov (bad) inc adc (bad) fucomp or adc xor in xor xchg adc mov (bad) jo cmc jg std pop cmp add roll fs jns pop stc adc pop and insb pop dec push sbb lock mov pop and pop popa pop dec sbb hlt adc and push sub ljmp xor mov mov cmp jecxz out loope sbb sub xchg or jg scas sbb outsb repnz into fdivp fistpll cmp xor cmpsl repz (bad) test sub insb int jmp or mov sbb sub mov cmp add repz in fiadd pop adc adc cmpsb or pop sub adc xchg out push xchg loopne xor loop mov dec or rolb mov testb adc mov xor jl adc dec cli scas sbb xchg jno mov sub dec mov aaa dec cltd or xor pop repnz sahf and lret dec fsubrp es adc xrstor dec lea push adc mov mov cmpsb lcall mov ret shlb or jl xor mov bound inc or shl lret out psubw lahf pop ficom sub cmp mov add jg pop scas mov fisubrl test dec dec push icebp sub lret mov dec push lret inc imul sub or push insl std pop mov or fldcw adc ja adc xchg mov adc xchg sbb negl repz pop (bad) or js scas adc xor jno lahf cmp and push or pop inc jge adc mov fidiv push adc sarl cltd lcall push fwait mov cmp aas ficom fisubrl ret adc gs test repnz (bad) int3 mov adc in sbb or cmpsb imul cvtpi2ps ficom (bad) sti sbb movq mov cli (bad) xor mov pop cltd dec pop dec enter push scas lcall es imul mov xorl sbb adc sub mov notl adc mov pushf push adc push push push mov cmp aad or add push adc dec xor rcrl sub or test adc hlt inc push lds adc insl mov xor and adc adc es adc push (bad) movlps lahf mov fs pop adc (bad) mov add jle inc adc cmp fwait pop push add push clc aam (bad) js pop int push mov adc pushf sub push rcrb sbb mov lods ficoml mov push cld (bad) call jg mov shll lahf xchg outsb jmp or adc cmp inc mov shrb jg aas adc adc nop dec add cmp cld (bad) fidiv daa adc sub andl jmp and xor cmpsl (bad) les test (bad) adc sbb push js add or inc lea add add pop negl xor xchg pop int3 mov adc sti adc movsb pop in pop sub out inc lods mov or dec xor lods lahf adc ja mov rorb jb jno cld aam cli lcall into or out dec adc jno sub xchg pop sub adc cltd push fdivl adc xchg or aas jge lahf jle adc mov add adc fbld sbb mov fstl sbb cmp sbb mov sbb fnsave pop pop mov repz scas cmp add sbb jecxz adc adc push (bad) dec adc insb add and sbb sbb or and adc xchg js in in jp push cmp or pop cmp push sbb lahf lret mov stos (bad) push cmpsb mov or shr xchg lret push or adc int3 dec jmp imul repnz lock mov adc xchg lock dec cmp (bad) test shlb ret ja mov adc mov cwtl adc and (bad) repnz sbb jp fcomps test ret mov std dec pop (bad) adc (bad) cli sbb pop pop jp sti push repz or xchg adc aam lcall adc jno cld das or outsl add adc imul push push ja ss lcall inc dec sub ret jecxz mov fildl repnz movsl adc push adc dec push adc adc pop xor out adc fwait dec cmp cwtl rclb pop push (bad) jo repz (bad) pop pop adc mov dec inc mov les sub je xchg out xchg or (bad) adc adc sub movsb scas paddsw imul icebp imul mov inc push adc adc dec adc dec std jl inc xor repz mov or jl or push xor xor jo (bad) cltd adc js out mov pop inc adc mov (bad) adc loop xchg repz sahf dec stc sub dec sete pop push movsb push adc adc adc cli dec stc mov in push adc adc push adc in adc loopne pop int3 cli adc jns adc inc jecxz fimull in pop in fdiv pop mull adc daa adc in inc jmp call pop dec dec jle jle movb dec cmc jns adc bound test xor add adc xor sbb mov cmpsb sbb jnp adc push popa push dec dec lds mov inc loop adc (bad) adc enter fcoms pop adc cld aas adc aad packssdw add adc xor adc frstor cmc adc mov test or and mov lea sbb and adc leave or pushl inc push cli adc pop test or shlb in lea jmp pop aas rorb inc xchg (bad) js or int3 xchg imul xor adc out cs int dec jge dec adc fstps js scas pop enter jns pop xor push add (bad) and xchg rcrb insl jg sbb dec dec or lret int test sarb lods jae jp adc (bad) repz inc fsubs std mov out push sbb in outsl inc repnz inc xor fcoms sbb mov stc dec jl fildl pop pop (bad) pop jo push cmp pop daa and dec insb fidiv mov mov decb push adc outsb int daa push jns adc push adc and jnp in mov out push out push dec push push adc js sahf xor jl cmp or jb push out adc fstpt mov cmp cli fistl rcr loop jecxz dec jp dec ds mov (bad) cmp adc inc pop out xorb pop xlat push pop jb sbb sbb fisttp inc in pop dec daa imul lock ljmp cs scas sarb mov jecxz mov (bad) cld inc adc mull data16 rep add sbb out or fistl negl pop sub (bad) adc cmp ficomp sahf xchg sarb jmp adc dec push repz lret (bad) pop xorl adc scas inc repnz adc (bad) lret mov imul rclb and xchg sub mov add push xor jnp mov xchg xor xor repz shll ret notl cmp inc jp sub sub cs push adc stc sti xlat nop pop sbb adc insl (bad) mov pop xlat sti jbe add adc loope (bad) xor add test dec adc pusha mov mov cmp inc adc int in out adc fisub adc adc loop push pop fs (bad) jle mov inc inc mov xchg lods sbb adc ljmp ds sbb sahf mov adc leave aad gs andl fcomi push out cmc dec add or add (bad) test icebp insl seta push pushf mov fcmove iret aaa sti call push scas or lret icebp aaa and fcmovnu push sar (bad) and adc scas add pusha (bad) adc sbb or cmp sub jg (bad) jno mov in (bad) adc popa xor jno adc push adc pushf xor sub xchg sarl ror ljmp xor mov cmovl outsb repz mov mov xor bswap in push xorb jo or test shll daa out sbb (bad) fnop lds adc in in dec sub inc mov mov jg pop in fmull or fwait pop test pop gs add dec out nop adc dec lea adc insl mov cmp rcll lods mov dec out mov mov std es sbb dec xorb int mov adc gs cmpsb and out cmp xchg fst repnz mov jbe adc push out (bad) mov add inc rclb pop xor testl rorb insb xor adc xchg adc adc loope rcll pop adcl mov sahf hlt adc cld push or test loop add mov je sbb lods mov adc push mov stos add add push mov xchg sbb or xor or add mov push or negl or cmp mov call push daa mov xchg repnz clc (bad) pop mov push faddp jo sbb pop test mov stos repnz adc shlb and lcall jl (bad) bound mov repz lods mov int lods mov insb sub pop outsb sahf mov lods or mov jg sar inc into fmuls push adc or mov add ret adc or or ret mov and pop jne xor inc jge (bad) outsb jns popf adc mov repz mov push cli sbb repnz and hlt cmp cs adc cmp lahf outsl fsub adc pop sub dec mov xor pop in pop insb add dec loop cmp cmp add push ja xor adc inc fs out mov push jl repnz test and jo std inc jl pop ljmp leave inc sub adc sub xchg das adc pop adc std dec fs out rol out dec in out outsb in xchg or inc (bad) adc dec cmpsb lea mov push in dec stos or adc push and icebp adc push push adc sbb cmc xor mov stc (bad) (bad) and adc fbstp jp jle repz rcr pop scas popf adc adc jns pushl cmp pop xchg enter adc dec lret xchg fsubrl cmp mov sub xor into fsubr add dec and mov lea cwtl adc xor dec inc dec shlb pop xchg sbb push mov movsb ja push pop (bad) int3 repz test adc xchg jge push push call jnp adc jg cmpsb jle adc sahf sbb mov stos lretw inc rorb dec fist sbb push iret xchg mov adc fisubr and adc int3 lods xchg shr rcll jns ljmp lret or das mov paddq ja rclb push push xor sbb mov cld ss adc xchg add outsb cmp adc pop je (bad) sbb stos js cmp adc inc repz and pop cld cmpb and jle pop imul das jbe jne push fsubs arpl mov lods (bad) (bad) mov les adc ret js xchg movsl lcall adc jns adc bound fistl insb pop outsl pop ljmp adc mov fs seto movzwl jns adc insl in imul enter or mov adc (bad) (bad) xorb cmp and adc cwtl repnz fstps repz std pop add adc enter out mov adc gs adc cmc and xchg or repz adc sbb xchg sbb push mov rclb push mov sbb cmp sbb push aaa push pusha adc les cli test jle (bad) xchg or ret loopne ss outsb and rcrl bound sbb scas lahf or ja fwait add sahf jg push stos aas out aad push rclb xor sti sbb sub add stos mov mov sub jo outsl repnz ds mov outsb fwait sub (bad) out pop dec cmp and test scas roll adc cmpsb cwtl inc flds and aas je dec push outsb jle out inc or xchg loop outsb pop adc jne push fcoml add jl adc pop and inc pop sbb lcall sub or ljmp aaa mov stos pushf add iret pop mov dec (bad) scas or mov pop insl fs cmp sub dec adc fmulp jae push out xor pop add jl adc imull mov mov mov out xchg loop ret adc lahf aad mov les jno add add sub rcrl cli pop jp (bad) cmp adc lea in fldl cmp pop mov adc sahf (bad) cld mov push movlps sbb out pop out lcall imul lods lret pop ljmp pop adc inc push pop push sub dec adc hlt inc ss xchg (bad) scas adc adc loop pop mov sbbl add jl mov jnp fbld jns cmp sub repz out push pop or sbb hlt push in xor cmc mov adc loop,pn das or scas or push adc in fdivrs call into dec jno,pn dec (bad) xor adc out fwait cmc cltd mov add jno into sbb mov xorl cmp adc mov fwait and lahf sar pop int3 xor adc je pop adc sbb mov mov aaa add add popa sbb xchg (bad) test test push shrb mov adc bswap adc dec ja and popa add sahf jecxz cmpsl xchg stos loope add sbb hlt stc xchg jecxz (bad) lods push inc xchg cmp andl stos (bad) adc mov cltd mov inc lea and pop loope adc imul mov lods push rep test scas dec stos repnz icebp xchg jmp cld adc push out shlb adc dec mov adc rcrb mov pop or or adc imul xchg pop jne mov cmp (bad) je dec mov push adc adcl mov fadds cld scas adc sarl xchg adc (bad) fistpl cmp or mov sub push fimull andl mov push mov xchg adc ret sub insb hlt shrl rorb leave sbb lods and and adc cmpb mull inc adc mov push cmpsl adc popf ret and and (bad) cmp (bad) adc lret sbb lock mov jp (bad) mov lahf imul cmp scas or insb stos aam int dec shr adc ror sbb mov repnz mov outsb push jmp push lret push pop push cmpsb adc (bad) in xchg btr test adc cwtl adc sbb lcall adc mov mov add adc add sti inc cli cmp or xchg jge ja repz hlt stc sbb mov pop xchg shlb pop aam adc data16 fnstcw js nop (bad) nop and xchg inc shll or pop adc mov (bad) das push add pop adc mov or dec cli adc bound xlat pusha dec adc mov and add mov sub xor and icebp sbb adc pop add (bad) adc add push mov outsl or fsts cmp xlat nop int3 psubd add mov adc test addl nop sbb sbb dec mov push add sbb popf out or pop push jb push sbb and insl push (bad) shrb sub and out inc pop out call into sahf mov adc sbb push add mov enter mov mov jnp or adc movsb add xor test aaa scas push mov ljmp inc or je or inc add pop inc in ret adc adc std je lock xlat mov fwait dec mov jne imul clc ret push push cmp fildl xor add ljmp push insl fsts jecxz idiv pop push adc sbb xchg adc mov mov mov mov (bad) and lea adc out ret or test mov mov insb inc adc popl adc cmpsb cwtl cmpsl sbb movsb ja repnz loop dec rorb (bad) jecxz fdivrp push adc decb cmp sbb mov mov mov fistpll add xchg jnp adc (bad) hlt ljmp adc mov mov pop icebp leave jg fildll addl mov das add or into movlps mov movsl mov mov or jae adc inc push adc cs pop cli mov fwait mov mov rcrl aaa mov xchg adc inc testl inc add mov stc fwait mov adc jecxz in or repz add adc lcall adc ja xor stos adc pop sbb pop ds push xchg arpl pop adcb mov out dec icebp mov xlat std push and sbb imul jg mov and pushf cmp xor adc pop xchg inc add (bad) repz inc popa decb pop inc sar imul sbb sbb or lcall adc dec jns jg addr16 shrb lods adc mov dec push adc incl cmp adc pop out popa dec dec dec adc int3 (bad) or push call in leave lds cmpsb mov dec not out insl push add ret lds pop je ja push push out mov push mov push mov andb adc add mov jo leave push pusha mov mov cld pop adc clc aam sbb bound adc leave and nop arpl jle sbb push fstpl lods in adc pusha xlat mov or iret mov andb out adc or ret out (bad) int3 inc dec call and daa push push push jge xor pop jo inc or jl pop push mov adc dec jae mov jmp jo lret (bad) mov adc adc call imul int3 dec pushf pop mov sarl les add int3 dec scas cmp xchg xor out inc push push push lds xchg rcrb notb xchg shr aam jne add jge mov popa stos loopne pop decl cmp pop or dec rclb xor push int3 adc fidivl (bad) sti shrb pop mov lock repnz ss fisttpll lods or in out and lock or push xlat sar std adc sbb loopne pop push clc ret fsts cmp iret dec int3 jp adc les mov push imul or add pop sbb push push adc aad add xor push stos insl cmc add scas negb add cmp jne bound mov fidivl sub ljmp int sbb push sahf hlt dec sbb lret (bad) sbb pop add xchg mov and gs repz jo xchg testl or jmp push (bad) mov or bts stos int adc (bad) push sbb jnp jle adc push jmp (bad) mov sbb dec in dec insl xchg adc ds les dec scas mov jae adc jmp in push push adc mov xor hlt lods xchg and bound xchg cmc std push mov pop inc cwtl push test or push xchg fnsave xchg pop stos pop pop std pop mov push mov jo adc popf sti std cltd push cmp adc dec insb mov xchg dec adc iret pop jmp cli xchg loope inc or push fs mov mov mov js add inc test aas sbb popf xchg pop icebp add add add adc sarb enter arpl sub add mov add adc fisttp lods bound xchg in mov pop push pop mov int (bad) adc cmpsb js mov xor int3 iret dec or adc dec sarl cmpsb jl add xor pop ja xchg xor adc lods push adc shrb push add ds mov cwtl je cli cmp fnstsw out fcoms repz and mov mov clc movb pop (bad) xor sahf stos out add push mov fsubl loop push cld into ljmp data16 mov dec outsl pop enter shr push xor add sbb adc dec loopne push inc daa test sub inc adc shlb gs cmpsl je sbb push add stos adc es in mov adc mov mov ja cltd cmp fstpt add jne jmp (bad) stos add or push imul xchg push (bad) adc push mov test add push or dec jg cli xlat sti push fs movsb xor pop rcll pop xlat jmp je jae sub mov lock or jmp hlt add pushf xor adc adc sbb lds js addr16 mov mov je sbb mov and or adc adc mov pop sahf mov incl cmp jne loope push dec lret adc clc mov cmp arpl popa adc add pop mov push pop jmp (bad) push ret js out pop (bad) (bad) std dec sbb mov add push mov mov pop and into imul scas out pop enter test lock adc out xor push leave jg push fmul adc (bad) mov pusha or add scas adc xchg aam push mov mov or or pushf adc mov dec js (bad) push mov dec cltd adc push rclb jbe or and (bad) aaa jo pushf (bad) fdivrs sarl jns repz stc or mov adc sti pop cmp fwait pop mov in fsubrl sub enter pushf aad xor aas fstps dec mov (bad) popf and adc bound das enter int mov hlt sbb cltd scas inc or andl add adc inc mov adc and add or xor add cli dec bound push jle ret pop mov mov mov push adc sub ror add insb repz push or add sbb repz les add adc or std or add add repnz sbb mov out out nop push adc cmp sbb jg adc aaa jecxz adc push adc push xchg stos add lds mov adc pusha push push mov ret dec cmp jo add pop ficom sub sub cld mov adc test movb cwtl lea mov int3 lcall mov push test ja xchg cmp mov adc xchg xor xchg das sbb (bad) neg adc popf mov cwtl pop jnp adc pop add (bad) nop push adc mov test test dec push cwtl jge adc and incb inc mov mov test push test popa movzbl sbb (bad) adc sub dec mov and xchg das mov adc add lods pop xor sbb (bad) popf mov mov mov or adc fcompl aas pop movsb add jns cmp repnz lea adc stos sub xor (bad) or pop sub (bad) jb push mov hlt sub scas xchg mov mov mov sar dec sbb adc adc xor and xrelease pop or mov popa mov mov or ret xchg cmp push cltd adc mov mov repz test or cmp adc and jns test popf inc lahf mov repz mov sbb cmp adc faddp jle std adc pushf dec sbb adc orl hlt iret push push stos pop sbb adc cltd test dec add (bad) xchg sbb pop mov adc or repz and pop adc sub push adc repnz add (bad) cmp adc movsb mov (bad) jo adc fidivr xrelease sub or sub and test leave out int into loope jnp dec adc jae xchg or cmc iret jns mov or jmp xor dec je out jb ja adc cli push xlat xchg xchg mov adc lods lahf adc inc push (bad) das pop adc pop pop cmp cmp jecxz leave cld test adc sbb cltd cmp mov cmp inc push in or adc jg repz fisub sar cltd push in pushf into sbb mov inc int3 in leave psubb sub adc lret cli dec adc mov cmpsb inc out add sbb cwtl out adc xchg loope movsb mov cmpsl or daa jecxz and test stos sbb xor std xchg aas push pop or fstsw sti and mov adc les xchg adc xchg (bad) xchg stos cld scas rcrb in fs and pop bound adc adc decl stos mov jns adc or lds add xchg adc sbb into adc or and mov repz mov adc std adc dec mov mov mov jl cltd sbb sbb jo fcmovbe sahf test adc or cmp pop popf push sbb std mov ret adc (bad) mov outsb push mov push out insl pop adc fwait dec jecxz rolb pop ret push push test adc mov adc jno or adc mov pop jecxz test adc jo add adc adc aas ljmp inc adc in xor std dec mov loop arpl sbb bound adc push jmp loopne es icebp mov xchg cmpsb sbb lret (bad) push push dec push adc pop push xor push sbb jae or repz pop sar or adc xchg add in add nopl xchg int mov sahf adc sub repnz call popa fwait adc or jne mov adc jge or mov fmull adc aas add arpl sbb jae sbb daa pop push mov sbb sahf push ds or in xor or sbb lock rolb bound sbb fbstp bswap or mov fcmovu (bad) adc rcrb sti pop cmp cltd in addr16 sbb sbb push pop pop push add fisttpl push scas mov cmp or in inc jmp adc das out repnz cmp adc xchg inc rolb in fist repz or gs sbb mov pop or fnsave insb cld adc lcall and es inc or adc (bad) call push shr sub dec imul cs sub (bad) xchg sbb movb insl mov or enter sub push ljmp int3 mov mov adc push insl jo cli repz and adc pushf cmp inc neg and or nop push pop mov and adc test lahf mov fstpl jbe adc popf cld cmp cmpb cmp scas jg adc arpl icebp stos in jmp jl or and inc arpl repz pop aam adc loopne test mov add push and cmpsb xchg mov jecxz mov or lcall (bad) outsb adc dec movzwl nop sbb fwait or fisttp das ret int3 arpl mov icebp dec add adc repz scas fwait dec les pop mov or insl in dec cmp sub adc push xor sbb repz mov cmc push or xlat ret adc pushf ss mov cwtl pop (bad) xor sbb (bad) out add test scas sqrtps stc xchg xlat fidivrl xorl (bad) call es test jnp mov mov or mov ds mov movsl (bad) movsb and mov notb mov int add das mov in add cmpb kandnw mov movsb pop xchg xchg lahf add ljmp xchg mov mov lahf arpl std mov (bad) or ds test dec dec lods xchg pusha adc arpl test adc das shrl mov in pop rep xchg sub mov int3 movsl hlt into out call sub or dec je adc and xor sbb aad push hlt mov mov add xlat push ret xor adc mov fsubs fwait mov iret adc sbb adc jnp mov xabort aas add or jo fcomi mov mov inc sbb (bad) scas inc repz or mov adc jne mov mov enter push fs and std pop lock (bad) (bad) outsb out cmpsl adc popa hlt loopne mov movsb add fbld fisub push es add add adc mov pop bound mov jmp (bad) push repnz adc fs stos pop lods (bad) dec sbb mov scas lea in int3 jae adc enter adc lods out cmpsb dec push imul push xor nop repz cmc cwtl dec int loop mov cmp push ror push push adc jnp (bad) push (bad) sti mov mov out mov push mov push es adc out mov jmp movsl rorb adc movsb rclb fs into daa sar adc pushf movlps adc pop (bad) adc outsl lea xor mov push or add push mov insb or lds adc adcb xchg std xchg adc push lods stos pop sbb or (bad) xor pop xchg lds add outsl xor push add lds sub cld pop jns adc mov in faddl pushf push mov mov aam repz xchg adc out loope sub or adc int3 loopne inc sub imul stos push mov shlb inc popa movsl inc jno es mov inc cmp ja aam xor ret dec mov cmpsb inc cmp pop pop test adc cmp jns sbb sbb push adc inc pop inc dec inc adc stc or dec xchg sub sub icebp out mov int or into loope inc mov mov or movsb or xchg lds out pop add scas adc rorb nop je,pn adc xor lcall add fwait xchg out aad push adc xchg ds cmp movsb lea cmp mov mov mov hlt pop jl push mov jo add adc cltd push pusha mov cmp xor scas jg push mov sub push ljmp ud1 lea cmp or mov bound daa lcall aam xchg or mov bound (bad) (bad) ds clc xchg sub mov sbb and popf jle adc mov or pop sub mov nop stos xchg xor adc cmpsb sub adc mov test icebp mov adc pop sti iret mov cmpsb pushf adc repz mov adc xorb nop xor daa adc iret add adc add mov rcll fdivrl repz or fstl push icebp adc sbb cwtl sbb mov movsl jle aas dec push cmp push xchg mov jg sahf cwtl cmp sbb add aas mov subl lret popa sub test mov aad aaa idivl or pop adc or adc pop adc loope (bad) mov ljmp imul add cmp mov mov lahf mov inc jle jo cltd mov mov scas mov cmp loop xchg es add sbb subl push (bad) adc mov xor aas stos mov shlb (bad) lds push out xor rorb roll lea mov repnz in (bad) enter pop loop xor xchg adc movsb cmp or and xchg add xor xor fiaddl pop sti les test stos pushf xor mov mov add fisttpll decb push into orl popf dec jmp push pop pop sub outsb ret addr16 cmp jnp cmc lds (bad) into fs rorb ffree std (bad) jg push lret jp sti (bad) jnp dec jns adc fdivrl cmp insb (bad) or call lret sub insl xlat imul fcmovnu adc xchg mov sub mov adc cmp push es pop (bad) and mov inc push fidivl xchg or out sbb cmpl clc inc rclb or adc lock mov push mov cmpsb pop xor adc ss or adc sbb mov enter cmp sbb mov push pop push jnp or iret int3 add mov je addr16 or add ds xor xor or mov lcall push sbbb lahf sti sbb out or jae ds or pop sbb test add outsb sbb pushf xchg ss leave int add ljmp repnz jmp imul rcrl jns adc in addr16 inc lock or (bad) sub popf adc dec adc sar inc dec sbb sub or in add mov adc jnp clc mov dec cli leave adc mov xor mov aad clc icebp jnp sbb pop push adc mov outsl rorb popa notl jmp std pop lods add incl add mov int3 aas into adc cmc jg rcr hlt sbb mov dec sti imul fdivs lcall loope and mov arpl lret iret or mov cmp dec out fistl cwtl (bad) xor xchg cmp mov rclb shrl lds mov loop jecxz (bad) adc (bad) in adc out call mov mov pushf adc adc out jge loop mov adc sub xor xor xor pop repz mov adc sbb adc sti lods test sub (bad) mov mov scas je push insl shll test jne repnz adc jb (bad) fmul scas (bad) and push subb insb aaa sti adc pop fdivl pop jecxz cmp adc jo mov jge sarb dec cwtl sbb sbb mov push mov pop or mov dec pop sarb pop mov xchg adc mov adc adc push ljmp push das mov stc dec fmuls pop pop adc les and cwtl adc cmp adc inc out fs and in loop add sbb adc das cwtl or or mov add movsb fsubl jnp fcoms or int3 rcll orb mov xlat (bad) mov adc lods and sbb scas or leave adc jne repnz test fisubrl pop in repz inc mov je sub xchg and inc jne cmp fisttpl loopne scas push mov push jb add (bad) push push addb pop adc adc (bad) cli cmp es cmpsb adc adc std xor dec push cmp cwtl cmp sbb inc jl pop scas jp sahf mov rcrb mov add add adc scas mov or or adc cmp mov dec (bad) das add in inc mov push fistl sbb and loopne (bad) cs push and icebp cmp enter mov push fdivrs jne sbb push pop (bad) add jo sub or or xchg or outsb push insl adc mov leave inc mov and add adc aam jbe cmpsl adc outsb jg (bad) in pop jne add insl imul rcrl adc push jne mov sub adc xchg xchg cmpsl xor xchg fcmovb sbb adc mov aam adc cmp cmp push adc std bnd jle mov xchg stc fdivrl cmp pop adc ret add xchg sbb fsts pop pop adc cmpsl (bad) adc test and (bad) mov adc sti hlt scas or je or int and add std jg repz xchg mov lea adc adc lods adc cmpsb dec push insl loopne push add pusha das push mov adc add int3 cmpsl add and adc test test test mov mov roll sti push fcoml adc pop sbb xor repnz fisttpl jae mov fiaddl inc je sbb inc xchg sub cmpsl add adc popl jecxz add dec subl es inc aas or adc dec pop mov popf rolb push mov sahf inc cmpb adc mov sbb adc into mov push or xor and mov das lea int push xchg xchg cmp fisubrl push inc xchg das or push rdmsr lods xor daa xchg add icebp mov ss mov test rolb lods nop outsb push out or ret cmc ffreep adc (bad) pop std fsubl popf mov and adc scas cld in jle adc cmp fcomps cmp pop sbb dec test add pop push repz push sti pop clc jle stos or add and pop or int inc imul lret into ja push adc hlt int dec cli leave stc adc inc insb sbb pop in cmp adc loop inc fsubr mov out add loopne add (bad) pop mov add jecxz ljmp pop bound adc loope dec jl and pop mov test data16 push aam divl or ljmp int3 inc sbb dec jno ud2 adc adc mov add adc ret stc out xchg mov jnp dec mov lret dec adc js cmp xor mov icebp pop (bad) jl or cmc divl xor xchg ja push pushf (bad) mov jbe sub or lcall pop loope and jle (bad) xchg xchg fcomip fyl2x clc or sbb repz addr16 aas stos or mov std push sti in push and mov inc mov jecxz fsubr popf in push xor mov (bad) repz dec call out jne jbe pop adc dec inc punpcklwd adc and xlat lahf adc cmpsl pop in clc test aad xchg jecxz orl adc sbb addr16 lahf mov sub push jle mov jge adc inc pop cmp popf dec dec rclb int3 or scas jmp push adc push mov stos mov mov scas sbb dec xor push (bad) dec sub adc mov dec mov cmpsl lods test stos lea adc mov xchg les adc movsb pop push xor cwtl ss jne call xchg push scas mull xchg mov mov lahf push pop pop jg fdivrs pop ret and sbb mov sub fcompl adc sbb fimull adc xchg cmp cmp mov mov or (bad) xlat inc push adc (bad) mov and or mov add test add add mov xor jb and cwtl push jns mov add sub mov mov (bad) std mov sbb or adc verw adc sub lods mov xor cmp and mov or pop push jle adc sub pusha js mov sub test adc out rol adc repz (bad) xor push sub adc xlat popa aaa mov pop mov sub adc pop out addr16 adc imul adc sbb xor sti rcr psubd adc cltd popf jp lret mov int3 fnstenv mov dec and adc insb mov cmp stos add repnz inc xchg imul and push adcb cmp xor add push enter or inc movlps jle xor int test adc mov add ljmp or pop scas add stos pslld fwait pop add mov adc add cs sbb and shrb sub adc insb into pop adc cmp aaa push jge sbb cltd xor xor addr16 sbb sbb das je inc xchg push mov int3 sbb addl sbb std add jmp push sub adc aam (bad) jne mov lea mov stos in test int3 cmc cmpsb mov adc (bad) and insb movsb or mov sti repz nop or jp inc inc lea sub jp adc and xchg dec arpl cmp aam adc push mov dec xor in mov ret testl mov popf jl ficoml popa pop add mov jno mov (bad) (bad) pusha mov aas xchg daa fisttpl shrb clc or out mov arpl cmp iret movsb sti cli das sbb popf sub inc adc lods or adc mov lods push unpckhps adc sub mov adc jmp adc cmp popf rcll push pop adc mov scas add js push mov adc jno dec inc and xlat sbb cmp pop push push adc xchg fildll adc out pop in jecxz clc xchg ret punpckldq adc adc repnz decl jmp imul jmp adc push movsl adc insl cmp das xchg sub adc aas bound adc repz js (bad) or push xlat xor popf mov mov jns sbb stc push or xor pop adc mov mov lret ljmp in stos sub jmp lods scas lea or adc stos sbb rol push cs clc scas add mov jmp push mov shrb addr16 movl xchg cli mov jns adc mov adc mov jmp push call sub mov (bad) push int3 adc pop push daa pusha add adc imull out repz pop lret cwtl (bad) mov dec cmp dec insb nop int3 mov adc in lds lock adc mov xchg adc out aad (bad) (bad) movnti push add adc cmp (bad) pop mov pop and cmp push or xor jo lcall adc ljmp dec fistp push mov ret icebp adc mov jmp jo or sti sub daa adc cmp add inc ljmp popa out test xor fs pmaddwd mov mov repz mov aaa rcr xor fucomip pop mov adc lds adc in mov mov sbb adc andnps sahf sbb and mov (bad) das iret xchg or stc sub jmp pop dec jb adc int sub cmp jae jno clc inc or (bad) mov push jle adc ror push fs inc push adc test jle jmp mov push repnz xorl cwtl in cmp lds (bad) repnz jp sbb xor adc (bad) sbb cwtl lret enter adc push adc xchg fwait scas testb adc cltd and scas ds adc out (bad) adc enter icebp nop adc incb scas xlat and sbb ds mov pop adc sub add xchg or cld adc sbb ds push pop in or adc xchg or or adc roll cmp jle pop adc xor dec (bad) sbb push (bad) das adc adc mov repz hlt cmp or or xor (bad) and push jbe sbb push adc ja popa jp adc int push adc out inc adc andl lods adc cmpsl fwait sub push int3 xchg out rclb imul dec lcall add repnz testb jae aad or icebp sub mov cmp notl stc adc push int3 in (bad) push pushf paddusw jp xchg (bad) cmp aad mov cmc add adc cmp fist mov or lods pop dec jp adc inc jp mov loope adc xchg pop imul push mov push and push sbb pop xchg adc mov (bad) sahf pop pop fisubrl add mov jo adc lret in sub push lea add xor xchg add xchg in iret scas mov (bad) lcall dec fildl adc mov mov add (bad) repnz ja adc (bad) hlt xorb cmp dec push cmp fildl mov lea mov or js adc lods lret jg int3 xor popf pop push into pop adc dec adc es add int3 mov adc xchg into adc mov andb xchg mov adc (bad) xchg popa in jnp data16 jne loope pushf lds add adc cld sub xor jo sbb popf mov jmp mov (bad) adc fldcw adc sub call mov pop add and into loop xchg or xchg push pop test enter fwait in ds leavew inc mov jle repz call adc and cmpsl pop movsb repnz add fcoms adc push rcll inc repz adc push add into sub or fsubs inc out adc ljmp sub pop jle fdivs fwait stc iret movntq jmp mov jmp enter hlt pop nop adc popf jge je add sarl dec out sbb cmp enter outsb or mov xchg lods adc jns adc or dec add pop mov sahf in in popa clc and add in mov cld test ds jmp call push jl mov lahf adc sbb fisttp sbb mov outsb mov outsl enter dec dec mov mov lods xchg mov shlb add mov mov mov dec nop jmp add jge dec adc mov lea insb dec adc lods hlt xor cs push mov jae add xchg lods xor adc mov jbe je adc (bad) pop std int3 jns fucomi xchg repnz fcoms adc mov ret ficompl push mov adc (bad) (bad) call std mov sbb cmp jo sbb jg mov mov adc repz sub popa xchg jmp dec and adc and (bad) adc (bad) mov fidivl pop sbb call insl push movsb pop adc std mov push pop dec push repz pop mov insl xchg pop adc sbb sti daa call jnp add adc (bad) sbb movlps mov sbb mov jno push stos or jmp sbb adc push push adc cs push adc addl sarb movsl iret adc rclb into cmp sbb adc arpl sbbl adc push push jmp add mov inc sbb push add push pop jo (bad) js mov adc gs xchg mov adc js addr16 jecxz and gs adc push jns dec cmpl mov xchg iret xchg sarb lods xor pop mov xor mov jg sbb cmp pop (bad) and adc daa or push push into aaa scas sbb pop aam inc mov clc test div inc je lods popa scas in addr16 pop push jne push (bad) nop pop (bad) jl mov and mov out call ljmp xchg pop out ret xchg imul pop dec sbb (bad) jns in pop in test (bad) jmp add xor mov icebp adc rcll cmpsl jmp push xchg ret repz adc in and adc pop (bad) repz lock push mov push sahf insb sbb sub adc stc rcrl cmp inc loop gs (bad) sub repz ljmp cs enter insl cli inc adc in inc aaa out xchg inc pop dec adc adc js out and push sbb (bad) push das or adc jne lock adc cld jge loop mov fsubs add fldcw inc mov ljmp test mov push xor inc adc out shrb sbb dec mov repz dec sbb in jl daa mov xor or mov je gs inc xchg jne mov sub int je sub test jge pop fistpll pop adc sbb jp adc cmp pop repz loop sbb inc pop daa jg cld mov ljmp cmp std adc cmpl insl jg (bad) adc inc imul add shrb fistl into cmp adcb popa (bad) sar inc in fldenv jle adc adc push or add adc mov loope and das adc enter cmc cmp adc pop sbb pop jecxz xchg inc dec adc jns push repz mov ljmp out pop out inc lods outsb mov adc repnz pop or insb inc lods and ljmp pop push mov ficoml xor scas xchg nop add enter sbb shlb in popf repz pop dec adc out adc jl loope mov adc inc cmp jo mov cli sahf adc cmpsb outsl mov jbe dec xchg inc mov adc jge les adc and cld adc push rclb push mov scas mov aas xchg jo insb clc add ja aam push repnz mov out inc ds stos loope dec aam adc enter pop dec adc insl mov push adc push sahf sbb add add jo push xchg xchg sbb add sbb adc xor fwait adc pusha sahf repnz iret dec test clc mov insl lret aad push popf mov popa cmp jmp xchg cmpsb imul mov adc xchg jne sbb adc test or (bad) xchg xor pusha dec or and sub popf or leave push jno pushf sub or lret (bad) sub inc mov adc popf lods adc lods sahf dec call jle bound adc add out test xchg lods fimul adc (bad) pop xchg cld ret incl pop adc cmp pushf lods subl stos mov inc stos sbb mov fnop pop imul leave repnz inc test fsubs sbbl inc and ret out cmp adc sbb pushf (bad) mov fcomp sbb fistp stos aam mov pop bound dec in or sub lods outsl cltd adc fs push mov pusha dec adc dec cmp cs mov xchg lods aam in adc orb xor adc push (bad) jno mov mov dec jno repz and pop inc fnsave mov fbld ret sub (bad) lock or xor fcoms cli inc int hlt jno nop stc mov push jg pop (bad) mov jle add add gs test imul adc xchg pop enter int arpl pop mov iret adc lods subb (bad) jecxz frstor pop cmp outsb xlat adc mov add adc jns sti leave jle inc repz in cmpsl cmovs adc hlt jmp popf mov fldl jle adc pusha jp xor adc daa bound repnz lret dec or adc rep rolb les add adc je push sbb loope popa xchg xorl fdivr call adc imul popf pop outsb hlt xchg (bad) mov sarl or sbb (bad) jmp pop push jo xor sbb aas mov popa faddl mov jecxz (bad) jmp insb scas mov jmp jne cmp fucompp fldcw mov sbb out test adc fs sub adc and xchg lds adc in push mov mov repz (bad) fnstsw lea pop adc fiadd adc or dec in (bad) out adc (bad) sbb mov jle mov loop ret in out in iret push adc cli dec ror addr16 (bad) dec mov sub sub repz sbb test pop add adc push mov add or ja jbe repnz fnstsw pop icebp adc in in outsb fimul mov cmp cmp mov cmpsb inc in xchg notb adc rorb cmp jg pcmpgtb (bad) jo leave scas sub inc int dec data16 adc push push jmp je sub mov jecxz mov adc mov adc mul push inc adc pop das in inc out add sbb cld sub jmp pop push cltd fidivr sbb and jp fmul in add adc imul push dec xchg mov jg rcll pop out hlt in sub dec add sti jne inc push imull in add add xor push cmp adc push cld xor stc adc scas adc mov inc xor rcll pop repz fisubrl xchg pop (bad) push inc fcomps mov adc pop mov adc mov pop jnp or push hlt roll fmuls and insl push pop cmp mov es push adc bound or inc pop cmpsb rcrl or jo or (bad) imul loope xor es push adc adc adc lds (bad) in and jp sahf add push adc pop std jp jo pop popa int adc pop das cld sub mov cmpsb pusha and adc push int in pop out pop test mov das fs data16 in sbb adc arpl pusha shrb pop inc gs adc jmp sub jmp mov adc scas fwait adc xchg add aaa int3 mov shrl cltd pusha xor psrad out or shrb adc les push call mov mov gs inc cmc and movsl cmp pusha mov xchg sub mov nop xor mov add cwtl adc iret (bad) mov lock adc fcomps inc push je std dec pop inc movsb add nop adc pop cmp adc add push aaa das dec xchg std sub push add stos ficoml xor xor or sub or addl add loope add and subl test inc adc sahf test push or cmp adc cmp mov movsb fisubrl fnstsw lret enter (bad) into dec iret imul sub and xchg and mov insl pop int3 (bad) into xchg mov enter cmp adc lds out adc and movsb sbb pop adc mov cltd xlat sbb fwait xor xchg or jns (bad) aas mov and fdiv sahf mov adc mov mov pop (bad) lcall adc stc daa pop pop hlt mov push pop mov jg ficom enter mov cmp lcall adc lods repz int3 testl cli mov bound cmp mov pop cmpsl pushf int sbb jecxz data16 inc test daa loope gs inc mov adc cmp push xchg xchg pop test mov cmp adc fmuls lods daa push pop scas dec out dec cmc popf stos cmp (bad) call mov jecxz popa push cs add add add lret and adc mov movsb call or adc adc jb push in and adc mov in mov mov xor xor adc pop inc push cli push repz fnstsw jnp adc aam sub out push push fdivl mov adc (bad) cli popf and xadd sbb adc jg cmp adc sahf pop pop pop addr16 out fsubl ljmp in push cmovnp push or xor clc int3 pop mov iret js cli lret popa popa iret adc pop inc stc inc test nop or int lds (bad) jp inc xor fiaddl jge repz stc or push adc inc sbb pop inc in pop div dec outsb je imul adc jmp adc xor gs adc dec int insl push ljmp lea dec jmp add dec push adc loope gs xor mov ds push adc jbe jne sbb clc xchg mov outsl adc xor xor out pop cs pop bound add mov xchg sbb pop test add aad sbb adc hlt push cwtl adc inc push dec mov aaa decb pop rcrb xchg push or mov cmc mov or aam or daa sahf or push jle add fnstcw jno cltd ja mov out lahf adc aam push adc fistpll adc data16 dec add inc mov adc mov push pop rclb pushf add mov add rol add rolb sbb scas mov push das jmp gs adc fisttpl into movlps adc in inc mov inc mov mov add loopne dec loope or ret out dec mov add stc ljmp adc fwait jns adc out adc movsl adc inc insb jns inc pop jno (bad) mov pop (bad) ljmp in or mov mov mov cmp out dec xlat add push shl rolb fwait mov mov mov sbb lock jno cld or dec icebp (bad) xacquire imul fsts jl stc (bad) jns aas ret repz clc jb das fimul cwtl cmc push std adc (bad) fcoms pop gs sub pop ja jne xor adc lahf cmp adc fisttpll adc sub jmp test adc dec sub push lret dec aam pusha xchg sbb mov jno out (bad) or inc pop add pop adc push fcomip fisubr or es js gs inc scas dec mov fsts lret cli aam sbb pop mov orl (bad) adc stos and popa fcom leave iret movsb call xchg div stos adc mov das adc inc adc or test pop imul lods movsl iret or mov mov stos jae dec shl je mov add fnop mov xor icebp sub add mov xchg inc pop mov int3 dec lea push adc xchg fiaddl jp jge and inc adc clc jmp sbb or fdivr sbb adc mov adc fsubrs cli scas xor mov jle insl ret and push repz out out inc mov add cmpl shlb fsubrp pop jmp fidivl mov fimull sbb stos in pop adc xchg dec out adc pop iret andl mov lods mov cs dec repz lret stc or dec stos mov leave (bad) in ja mov adc cmc xor hlt testb subl jle adc inc adc adc mov jnp adc add stc inc ja push int mov mov push ds (bad) mov stos in daa ret andl ja mov ljmp lret mov fldt adc add inc js in movsl es jns sbb adc movsb xchg outsl or dec jno or add incl cld test stos stc xlat clc mov nop adc mov movsl adc cmp popf adc dec cmpsb mov (bad) fstpt jmp in aam jbe repnz ljmp adc or push scas or xchg das xchg test push adc jge xor lret xchg shrd int3 xchg rep test mov cmc adc mov adc or adc (bad) rcrb jge jle jl scas lea adc bound jmp (bad) mov add in in sub hlt popf xor adc cli mov repz shr sub adc mov bound icebp mov sbb adc mov bound lret or xchg jmp sbb rcr or dec loopne add roll adc pushf add cmp adc pop adc push ja adc add add lea test icebp xor adc ja add dec dec inc adc pop sbb adc push jno pop sbb inc or (bad) pushw mov enter sbb jg pop lock sbb inc sbb xor adc xor sbb je (bad) adc lods scas roll js mov (bad) es push (bad) gs xchg push cmpsb lahf popa push inc pop adc into mov jmp mov pop adc mov imul bound insb test les neg jb (bad) xchg sub adc in jg,pt pusha js jle adc push xor mov shll jmp (bad) push or ficoml pop stc shl cmpsl inc jle dec mov repz aam push xchg ret jns adc lahf dec jle jl sahf (bad) adc hlt out pop and adc cmp fist sub das adc cld adc mov xlat push emms sbb outsb dec adc pusha add test inc cld jne pushf or xchg and mov repz and popw adc mov mov pushf mov jae fnstsw adc (bad) sbb jns sahf adc mov or adc pusha sub dec mov pop adc mov rcl dec int sub lcall mov dec adc mov mov or xor adc fdecstp fcmovnbe xchg mov or in jno sub jbe push or ja pop push adc inc sbb xor pop int3 mov cld dec add pushl adc cwtl jns mov out daa pop or mov (bad) fimull fstpt pop std mov add pushf gs or adc ret mov sub ss xor cmp repz mov or push gs mov mov inc xor ret dec xchg cmpsb sbbb inc adc push imul xor int3 jge lock pop pop ret mov push mov pop sub push insl js or mov push dec xor sbb repz popa mov add das bnd jmp int3 clc dec out mov dec in dec mov nop insb adc or out data16 adc sti push jne hlt push push jae sbb scas sbb popa push or adc (bad) lea jo pop cltd sti jnp sbb push jge das lcall repz lock cwtl fwait cli fldcw mov xchg ljmp adc (bad) jge jl jnp data16 ds inc out add ret jp inc pop in adc ret push lret leave in imul adc dec mov enter ret inc cmpsb les pop cltd push sbb sti jp pop jns xchg (bad) sarl out sub adcb (bad) (bad) fwait or (bad) sti mov jnp loopne add std ret adc and dec pop jle (bad) adc jmp xchg int3 mov push or iret lahf add repnz ficom cs pop adc dec cmp gs inc mov sarl scas out inc jmp or inc adc xor jl rcrl dec imul xchg outsb mov adc mov mov fsubrl sbb jg pop mov mov loopne scas sbb scas pushf dec xor adc jns cmp fsubs in jnp addr16 push into sti dec cld xchg cmp repz (bad) jle add fdivl fisttp xorl or adc adc dec and popa insl test and xchg inc inc (bad) out xor push dec pop adc (bad) mov sti adc or and add xchg add cmpsl mov stos or push (bad) mov in xchg daa lar jl add fs inc (bad) xor pop adc adc cmpsl ja adc xchg pop aam and inc (bad) repz iret jmp cs adc xor sbb outsb aas adc push jno adc ja pushf sbb rclb rclb jnp fwait or repz cwtl add jo or xchg adc sbb aas push nop push adc dec cmp pop adc pop lods insb (bad) imul int sbb jb outsb out (bad) lret insl add adc xor (bad) dec adc pop dec xchg cs adc (bad) (bad) push jg pushl adc clc hlt inc pusha adc fdivl jae jl pop loop inc out add pop sbb repz or push movlps add adc into push imul add das dec test xor xor pop xor mov adc in mov (bad) inc adc in add mov rcrb and pop and sbb or xlat and inc add push jle scas adc mov push mov fdivs inc adc adc pop and pop push pushf push mov jmp add shrb call hlt orl ja std imul (bad) sub test inc cmp mov push adcl cmp jmp dec push adc xchg cmp adc xor nop scas je jne int3 jbe ret push pop sub lahf cmp adc pop movsl jl cmp pop insl bnd adc jp jge cmp mov lret cmp mov xor sbb repnz mov cmp lahf dec loop adc dec outsb lret mov mov sahf pop push imul int3 lds out inc insl mov xchg sbb (bad) int nop or test ljmp (bad) mov adc insb pop ljmp jb mov xchg out (bad) sbb adc mov push in inc shlb sub stos or in mov lods push or jecxz (bad) cmp adc add mov insb sbb das out adc dec jmp jmp jb adc adc mov fwait xor adc adc into mov jne loope add push mov jo sbb icebp lds inc or mov push (bad) adc push stc pop xchg jp gs adc pop xchg dec fmulp clc out jbe jle repnz adc jno pop loope cmpl and out loop ret adc in sub push mov testl dec loop js ret and loopne in in push inc test into out loop cmp adc lods sbb mov pop mov mov std mov stos (bad) pop sub sbb lea out je test jmp mov or or sub adc lcall jno into mov rorb (bad) stc or cmpsl add pop mov dec mov leave mov mov and cmpsl cmc add mov mov mov hlt adc mov push je mov xchg pop add repnz fmuls aam pop into jl adc push movsl adc adc (bad) cli dec mov mov jl add hlt push mov cli fiadd mov mov cmpsl (bad) and adc loopne mov shr pop mov push mov adc dec mov push int3 ljmp adc cmc inc mov insb popa insl cmpsb (bad) in or mov jg std movsl lcall mov mov mov lcall (bad) cmpsl adc or adc mov xor xchg mov jmp lret adc push rol adc lock mov add push cmp sbb cmp push dec (bad) or iret insb add imul mov dec or int sbb pusha mulb adc stos adc jp test dec cltd test hlt jae sbb lock add cmpl adc mov data16 sbb jecxz sbb adc nop push popf cmpb shrb fstpl ss in nopl pop dec push decb adc imul jbe and mov mov adcb mov push cli adc sahf xor jnp jp das dec jns adc xor clc fiaddl adc (bad) cld lret jge xchg pop pop into sub mov ret fs and adc insl mov fstpl or testb test scas and and std test and fsubs push sbb push ret sbb outsb or aas test or adc roll fbld lret lret jo daa mov mov sub xchg outsl xor xor sbb arpl bswap pusha mov das lea adc xchg pop imul icebp adc stos xchg jmp out movsb xchg push movsb sbb xor push push xchg cli (bad) adc or push sbb and loope xlat jo call jge cmp or mov inc adc std in jnp lret xchg pop mov out xchg adc pop ja pop fist and pop jnp add mov mov fstl insl ret insb and push ror dec outsl dec cmc adc fmuls sub (bad) in mov sbb and test push xchg adc adc mov loope adc aas lds std adc sbb call fstp jnp sub mov out pop test daa leave adc sub or adc sub mov sub das xor mov int rcl in adc cmp xor rorl test daa adc adc sbb sub dec push or or roll aam xor (bad) mov lods push adc repnz rcrb aaa sbb xor cmpsl cmp mov mov sbb adc inc adc arpl add push add and sbb push jae lods imulb or adc dec sti mov or fimull pop inc mov sbb mov adc inc push sub dec ror sbb repnz mov adc xchg popf jae lods sbb aas fwait dec adc popa jo jp (bad) cmp sub nop scas mov test lea sub imul or push stos xlat xor adc stos adc mov leave sbb pop insl mov mov rolb int3 sub pop inc enter mov xor fcoml sar loope rorl push rclb jbe push js ret push lods adc sbb fnstcw rcrb dec lcall sbb mov mov push or (bad) jle inc pop leave fldlg2 fisubr xor jo adc fiaddl mov adc outsl and fucomip dec adc insb push jmp adc jnp fnstenv jle and or cmp fistl stc lcall adc out jne push shll out adc sub aaa xchg jnp adc cmp sahf xor pop pusha ficompl je dec lods jl outsl adc jnp sub dec cmp es dec lods adc adc aad stc rcrb push inc and out mov repnz dec daa int adc sub jo cmp inc lea or mov or jg add xchg lcall inc out jl adc into jg cmp push adc sbb adc das loopne int (bad) repz out fwait pop adc cmpsb pop or xor jecxz jl lret lcall push push andl mov sbb push push shlb adc mov pop movsl dec or and repz cmp out sub push dec pop adc dec adc imul mov fiaddl pop repz inc ss adc pop int ficoml jo jge fsubrl sub push arpl xchg clc lods pop lock adc xchg ljmp lods add cmpsb adc sub scas lret aad push movsl push cmpsb adc adc fnsave roll (bad) fstl mov fidiv in mov dec add bound and inc ja push lea add daa or mov jo jge out addl enter in and dec int3 xchg in xchg mov adc adc fs or adc call cld ss sub cmc out adc mov pop nop push rorl xchg outsb je dec cld adc xchg inc test popf repz sub int mov iret adc mov push mov pop sti cmpsl in jno sbb add fsubrs xchg cmp pop out mov popa mov add nop mov xor dec mov cmp pop jecxz in decb jp add mov cwtl mov mov adc scas mov mov in adc rolb out inc mov in (bad) stc mov cmpsl loope adc inc xchg out inc pop mov cli sbb jno test lds jge call stc repz pop jns push mov inc cwtl mov dec sub adc or imul or xor push in add (bad) out popa xor xchg sub mov enter outsb les into call jmp sub in movsb ja in ret jne je hlt adc mov jb in push adc xchg out xchg and adc fstl pushf sub arpl clc js sbb (bad) jge loope int3 push push adc dec mov push adc jns pop cmp out iret adcb fs mov popa adc orl pop repz ds and fs adc adc scas aas mov jg jb xor shr xchg emms sub out fwait sub adc add popa cltd jnp add adc lcall js add in add iret xor mov adc jns jl (bad) (bad) bound int3 mov mov adc or movsb iret lcall imul adc sbb (bad) pop jne rolb int3 outsl or or jae aam aad mov or mov inc cs add sub sbb or mov imul aaa push xor into cs jecxz stos loope mov push ficom lea add sbb adc ds mov fidiv adc jp cmpl sbb es or ds cmp push pop cmpsb push sahf xor pop or lods push into popa outsl mov sub popf sub push iret ja ss push inc sbb sub inc or or mov cmp mov inc mov arpl pusha mov pop addl insl iret adc pop mov jl (bad) or fcompl dec cwtl push addr16 sub add repz dec push sub inc ds adc dec sub nop dec je adc sub cmpsl push sub jecxz adc adc in js pushf cmp cmp xchg cmc je adc dec adc enter test xor lock xor loope,pt dec loop scas push adc repz jg adc xchg rcrl or push xchg add fs stc push push js lods xor xchg in adc mov cwtl sbb cmp and dec fmuls mov inc pop add xchg sbb or js adc es adc outsl or movsl sar mov and add push adc lcall or and mov push mov push das aaa nopl divl pop inc scas ja add stos jns adc popf adc jle jnp pop xchg rcrb fcomp sbb jge hlt mov shrb xor jle or jecxz xchg lea outsb sbb negb pop cmpsl xchg mov add fsubs popw mov adc xor repz lcall add cmp stos arpl push add inc pusha cmp sbb lahf ds sbb sbb cmp mov test in mov or test mov loopne sub int sub adc (bad) fsubrl jmp and pushw push call enter inc pop add adc mov mov push jp adc sarl xchg aaa adc push cltd dec sahf dec mov jne sbb adc xor cwtl jns (bad) cld lea jecxz cltd push or insl or pop jno aam or push loope je pop imul or adc cmp ds add and shrb mov mov mov ljmp dec lock negl cmpsl adc loope lea jno sti xchg or test pusha and pop jb pop jge test inc and inc jno mov pop push pop enter fwait mov sub inc js adc bound jecxz sti or stc mov sub daa and iret repz pusha mov push adc add or add in (bad) mov push outsl xor push mov pusha mov mov es adc adc jmp stos sarl and dec mov add mov xor (bad) dec adc jmp ss pop adc rcr sti pop fcmovnb pop adc fnsave out bound repnz mov stc mov adc and es in adc fisttpll push push enter jns out adc loop fsub adc loope inc lcall inc mov or adc mov ja push pushf adc jmp dec bound pop cmp jl sbb adc inc testb rol xchg les adc mov adc aas dec add sbb icebp jnp mov pop adc pop das cmp mov inc mov pusha test insb adc pop sub mov dec rcrb and je sub lea in pop or out inc mov dec and mov push je and fldz adc push jbe notl pop or sub dec push insb mov lret add pop stc fidivr loopne cli mov test or push addr16 jns (bad) stc movsb xchg cli inc std (bad) aas and adc cmp nop cmp fwait add pop mov pop push ljmp adc movsl mov adc add cld adc push (bad) or adc in out sbb adc and arpl push adc popa enter and and dec mov or adc or ja push jge cmp movsl push xchg xorl mov (bad) sub dec jbe lock pop jle test jmp push xchg mov in fdivp popa scas mov xor mov adc and dec out sub outsl push dec rcll mov repz xchg push lock jne in mov or sbb sbb adc sbb adc out adc mov cli xor mov add (bad) cmpsl adc test sbb adc or movsl cmp jb adc mov sbb adc xor adc push (bad) jae add lcall sbb movsl rclb push jb cmc or cmp jne add inc or sub adc stos cld insb push rcll add adc leave or sub rcll push (bad) in or lds push mov pop mov adc je add cmp add xor add xchg orl xor adc sub cmp addr16 dec loopne adc jp adc fwait adc repz (bad) xchg ret jo fldl xor xchg xchg mov out or jl push lds adc jmp pop scas decb and popa adc pop jo ds xor dec adc leave stc xlat jns dec bound inc js pop jns mov (bad) push sbbb push lahf adc (bad) (bad) shl jmp push jmp xor add adc add and ljmp jb repz and mov in adc dec xchg data16 cli cld into adc out push jmp ja rcr adc add add adc shrl xor pop add pop mov bound adc (bad) jo adc inc fcoms mov mov dec jecxz stos mov adc std add fildll test sbb sbb adc pop out (bad) movsb push sahf leave add mov daa push out in hlt ret sbb mov mov or fwait dec (bad) outsl adc push sarl in adc sub sbb jnp fsts lods pop mov pop adc cmp cmp and push sub add scas fmull cmp adc sub add or adc lds cmp mov js sahf ljmp pop push incb adc dec test xor dec pop int lods pop out into outsl adc lret adc lahf mov xchg roll sub das add mov js push movsl mov jb stos sub lods pop pop xchg push adc (bad) and sbb mov jg rclb pushf adc fnop (bad) push insl cs scas cltd xchg pop daa and adc (bad) cmp adc flds (bad) (bad) adc outsl xchg adc push stos aaa scas das jmp xor hlt mov or dec jg (bad) js cltd adc mov xchg adc mov aaa xchg mov movlps push mov mov (bad) mov mov or repz cmp cli fsubs into pop or insl loope aas mov and in sub pop mov cwtl sbbl sub dec xor mov rdmsr or in sahf jecxz dec daa or imul push aad push scas ret cmp adc xor rclb push xor xchg adc mov movsl adc cmp pop dec sbb sbb fyl2x fistp cmp rolb in stos (bad) ret adc dec mov xchg adc fwait mov adcl pop sti and xor push cmpb dec adc in xrstor sbb leave jg and cltd aas lahf cmpsb jl test mov pop mov adc outsb daa (bad) push xchg and loope jg mov mov mov (bad) fistpll pop jl adc popf and loop fwait scas cli out adc (bad) mov mov adc in adc adc adc sub imul push mov pusha stos nop pop mov fldl xchg and sub pop mov xor dec or adc rolb xchg sbb ret push je dec adc aaa adc mov push cmp pop adc mov adcl popf xor xor fwait cmp cld add call stos stc adc cmp adc mov dec test movsb jp adc adc fstps div repnz push pushf aam adc push mov daa (bad) iret or mov das in mov sub shr or icebp pop pop add mov add pop cwtl mov push loopne mov adc push push js mov mov jl fs in push imul popl adc mov push dec or pop add lret fsubrl sub and mov sbb adc mov mov or and adc dec sbb pop adc push rclb cmp inc jnp out adc gs sbb pop mov out cmp push add xchg jle adc repz jl loope (bad) (bad) test mov cltd aaa sbb add out or or push and lcall cs sub mov das adc and test pop cmpsb cli xor mov push movsb xchg repz dec ficompl jno rcr sub ljmp adc imul cmp inc loope pop ret orl into movsbl lcall movsb mov xchg call mov stc loopne bound mov push cmp mov adc mov push xor rclb inc or imul repnz xor add movsb add test and inc adc pop xchg test mov inc (bad) cmp mov mov js pop scas sbbl cmpl add inc adc or fwait setae lea push add divl pop lret test push cld push mov mov xchg sbb jb xor je inc push dec or (bad) psadbw jbe hlt dec push lahf lock xchg jne push jb adc out mov adc dec and ja sti pushf inc adc cmp mov adc pop jo iret mov adc inc add pushf sarb fcomip pop je,pn sahf lods int3 mov adc mov mulb std push popa pop ret push and cmp outsb and push mov inc adc xchg dec cmp pop adc pop pop sbb dec cmp sbbl je out or xor add pop and adc (bad) mov mov pop test clc repz insl aad pushf adc jno call xor lods rcl xchg xor push mov sbb pop mov or mov movlps or ffreep fidivl sub adc dec out aaa sub xchg stos xchg and xchg cmp cmp lods arpl fdivl mov popf mov xor adc pushf add das xchg jp jg jnp pop adc pop jge pop cli cmp adcb scas cmp fdivl mov adc gs ljmp test add rorl push xchg (bad) lods sbb dec lods pop adc ljmp dec lret sti mov mov jb xchg mov daa push jbe inc cs adc comiss jp sbb lea lahf sbb repz arpl rcrb add mov (bad) scas test xchg jmp jb (bad) mov add out push int3 adc lea dec in scas or pusha repz bnd aam mov push xchg mov jne scas je mov inc push addr16 mov lcall adc int cmp movsl cltd adc push pop fcomps mov in mov out adc (bad) mov jle repz lea (bad) lcall mov cmc mov adc cmp mov pop int3 mov adc or jmp inc push out jge adc dec sbb cmp bound xor push jnp pop xchg test adc jle fadds or fldcw push rcl pop push sub repz movsb add fs mov mov sub js adc incb ja popf xchg popa mov push (bad) out add or adc sbb add (bad) les push es jl (bad) and sbb inc aas psraw push jmp andb arpl lds pop or and jb or data16 push into xchg pusha sbb shrb in mov jbe cltd add adc xor add js add mov bound adc push jp cli fwait mov lret ja mov or adc lock or mov scas loopne int3 (bad) cltd das enter xor jmp cvtpi2ps fdivs pop into test jg inc std stos mov rclb xor adc xor rclb fbstp notb nop sbb adc cmp gs pop nop into fwait cpuid stos jle mov cmp into mov cmp fcoml jle dec pop mov sbb cmp popf fbstp nop cmpl mov scas pop in inc rep test mov jg fcoms int in adc and add push inc subb (bad) call push mov adc inc andl adc inc cld adc pop cmp push add arpl inc fwait mov mov and sub sub inc pop jl adcb sub call mov je jl mov ret sub shrb xchg aaa in push adc jo pop scas sbb inc or (bad) mov lods jge dec or push mov ljmp data16 jne adc loopne mov rclb in xlat lods dec dec ficoml add fs cmp fmul adc pop pop lcall mov out adc sbb fidivr test push les test jno pop adc mov sbb cli imul repnz sub dec (bad) lret popa mov mov lahf xchg sub sub js insl (bad) (bad) adc arpl xor inc adc add and pop adc cmc repnz (bad) arpl adc add sti dec mov add lahf sahf mov jle cmp enter or inc jecxz (bad) test dec pop adc add add sbb or dec sub jno jae adc adc xor inc pop pop sub sub jmp hlt popa sub or clc push in inc add add xor add outsb adc cli push jbe push cld fistl adc es push repz fwait or repz mov mov dec adc fist adc fstpl push outsl orl cs fsubrl inc jmp popa dec dec enter out fsubr repz lret fxch sbb adc sub mov fisub inc dec pop xchg add ja and ret enter dec or imul xor cld or or fsts (bad) js cli ja cltd cmp das jl add iret rcrb imul arpl push (bad) dec lret mov mov mov sbb jno loop add mov mov jnp into (bad) (bad) imul jle mov repz inc ljmp xchg scas adc es loope adc notb mov jbe call adc jecxz sahf stos sbb pop jne fwait (bad) loopne xor xchg movb out cmp dec jge add scas movsl pop adc cld lds lahf and stos popf sub std jnp adc pop rclb jecxz sahf mov adc popa lret dec adc int das pop jmp adc stos xor mov and cmp jl jle aad (bad) lock sub jecxz (bad) push (bad) loope push inc or xor dec sbb mov xchg fcompl mov push loopne rol adc fstpl notl adc adc and add repz mov inc cmp or mov cld mov cmp pop adc or or arpl or fiaddl shrl cmp pusha adc push or insl or das push (bad) rcrl or push mov lahf cmp pop rcr push push add cltd or inc or out adc mov aaa adc adc lcall adc stos lsl sti push xor pop xchg adc fiaddl adc cmpsl pop arpl pusha (bad) mov pop ja cwtl adc test dec in fsts (bad) mov add inc rcrb jb mov sub xlat cs sbb mov adc mov fdivrl mov nop (bad) lds xor adc mov pop dec popf dec pushf mov fdivrs (bad) inc adc adc dec mov push bound adc out fdivs sub out add jl pop ret clc leave stc dec dec call push cld sar insl fldt loop add cmp test in andl sarb pop dec mov adc mov movlps and outsl lock divb enter push fsubrs out inc int3 jecxz insl or out adc cmp mov cli xlat sti nop fs lods mov movsb or (bad) jmp sub (bad) pop cmp mov lret mov jne mov adc aas push mov mov mov cmp cmc cmp fcomip push mov jns adc pushf pop mov ss xchg mov hlt fdivrl fdivrs int push or adc in adc jmp imul and enter jmp push push and cmc out loopne adc movsl inc and cmpsb rolb cli loop or or fucomip cmp adcl movsb or fdiv jnp leave fsubr pop adc sarb (bad) cli mov mov ss adc (bad) adc or repnz ljmp xchg jg movups push jns xor xchg pop data16 adc dec ljmp (bad) dec adc aas adc mov jae mov dec test jecxz xor lret push cmp loopne mov outsl out pop or or rcr xor mov push sub dec cmpsl mov aaa jnp mov pop aas push (bad) xor mov dec sub das push cmpsl xchg dec adc sbb sbb rol dec sarb sub mov aaa sub inc dec add mov ficoml xor lret cmp mov xchg push adc mov add into stos mov mov ss adc fnstsw push adc shr pushf xor clc int and inc push mov sub lret mull adc (bad) sti mov adcl lods div adc adc fiaddl adc cmpsb dec and std jnp into repz mov or aad (bad) push andl int mull cli notl xchg push dec add mov jp or add test adc sbb rcrl aad cmp out push dec popa or orl adc cmp mov xor mov jecxz inc push jno jnp jns call fiadd adc repnz dec test mov je cld scas push adc daa lea inc adc pop test adc sahf and or sti loop iret (bad) push xor add add push jmp push jae adc in pop aad pop mov add test add mov and adc add shlb shll mov add out sbb pop adc adc repz or jno push pop adc sbb mov push adc mov cwtl es push adc push loopne xor jg xor jae std sbb out inc adc jo popa push xchg sti push or dec enter and push cmp push ss test shlb dec add adc xor push lcall add mov jne mov push push inc dec mov adc int3 adc popa icebp push sbb sahf xor and or les push scas out adc dec int3 pop hlt imul add add lods loope mov ret adc push or inc sbb sti adc xchg mov repnz push rol push adc cmp repz push add lods (bad) mulps or xor add prefetch in dec nop push add push adc aaa sbb mov nop xor cmp add sbb mov rcpps push sbb xchg xor adc mov enter (bad) decl push pop xchg lock pusha sarl inc xchg aad mov jno adc jnp push pop repnz or rcr sbb adc leave push xchg xor fwait bound out lea lret xchg mov cmpsb pop adc mov jae mov in jo mov mov add (bad) mov imul xor test sbb dec mov or push mov aad or add push mov jne (bad) mov mov inc adc adc xchg or add or test xor and push push xchg ret adc out addb data16 stos ret push test lods adc or shlb mov xor add lret nop sub dec insb mov or outsl sbb sbb cmp sbb jecxz rol inc lds inc xchg aad xchg daa addr16 add sub mov pushf add ljmp adc hlt jns fistp ret pop mov int3 cli push insl sub or loope stos or lea push iret pushf adc js mov xchg xor dec lea push (bad) fimull and (bad) sbb sub or xor cmp adc cwtl or fist push cmp jmp or pop mov dec push mov sahf adc aaa popf add adc push repnz sbb adc pop adc repnz jbe imul enter add mov or push pop pop lahf add adc sbb lret fwait ret add mov sbb leave or adc orl imul push dec sbb les aam daa sbb sbb add or mov fiaddl dec add call test psrld push pop adc and push dec inc dec or (bad) fdivrl add rcrb adc fisubr inc adc jmp adc add cli adc out adc addr16 adc cmp popa or and add adc addr16 sti mov or mov adc clc fdivrs (bad) fisub repz adc sub ljmp repz int3 jae cmpps cmp movsl add cmp and ds xor push arpl aam jge xor jnp (bad) cmc jge xchg fild adc mov xor mov cmp push adc loopne arpl adc movsb mov xor popl mov pop rcrl push outsb cmp adc push iret pop adc stos add movsl mov loopne (bad) stc sti mov sub mov xchg neg push jae cmp sbb xor adc and in rclb bnd les sar pop gs push adc pop or or insb mov sahf xor in pop (bad) incl rol out sarb loopne (bad) inc push and into add add adc jae mov repz pop ret push mov and adc push stc adc cwtl adc pop dec push and xor test (bad) or adc (bad) sbb add pop mov xor repz xchg rcll pop adc jle xchg js adc nop fwait xor sbb jmp xlat imul mov pop ss icebp push fwait adc mov test rolb push inc xor jae ficomp in adc push ret push push sub mov iret mov push mov adc loope mov push (bad) pop pop jns pop mov leave jbe pop lret push adc rcll sub xchg stc pop push xor xchg dec adc cmp add xchg adc mov sub xor or ljmp xchg pop es clc mov adc nop mov sub ret (bad) or xchg mov sbb mov jo mov adc fdivrl add lcall cmp out cltd ljmp pop jae incb lahf mov adc or xchg sti sbb mov cld in ret push lock sbb cmpsb rcrl or or or sub mov sbbl lock jbe rcll and add sub test and sbb sbb lea cmp xchg add push inc xor sbb jmp stc fwait aas pop adc (bad) xor dec cmp pop xor (bad) jb gs js push mov outsb pop ficoml dec out std loope and int ss (bad) movsb add cmpsb mov xchg lock adc insb pop dec out jle and sbb mov fwait add add mov mov adc add sub or xor add ljmp adc or in push push sub dec out xchg stos adc orb clc xor mov divl adc jmp adc sti push out adc pop call adc pop mov push nop mov push imul adc nop inc mov adc rolb dec adc outsw jmp mov out ss xor xchg jg (bad) xchg mov or dec adc in pop adc jle enter dec adc cwtl xchg and jnp popa adc inc mov (bad) (bad) adc sub repz xor cmp sbbl sbb cmc pop lea hlt adc jmp mov mov mov mov adc imul adc push adc add call repz cmc push jb icebp out xor insb cmpsb adc cs dec or add mov xchg xchg fcoml mov cmpsb lods loope adc pushf sbb xor or xor push or pop insl ds clc ss adc (bad) insl adc mov adc pop ds adc mov sbb data16 jp mov ja gs lods dec add iret add mov pop and inc push repz push hlt cwtl adc or rcrb rorb or adc push mov adc xor cmp out mov pop and add mov mov pop push push push fildl pop or cs xchg mov mov stos cmpsl out inc or adc or out rorb push sub popl add adc inc sbb push adc adc imul add movsb and xor push jmp add (bad) pmulhuw ljmp js add inc sbb xchg sbb xchg push repz xlat or jno icebp or inc adc loopne rcrl hlt xor sub sbb add jg adc sub lds adc sbb mov sbb mul add xor push dec roll add add dec jbe adc mov imul sbb jne aaa adc xchg pop xchg adc jmp loopne inc adc fsubl sahf cmp rcll pop adc into aaa add adc xchg in popa inc adc push insb rclb rclb xchg push sti jae push or dec hlt push cmpsb mov or push push pop xor jo push fsubp push cmp push pop or jb fimull pop jp sbb add add repz fisttpll rdmsr aas mov push push je add mov repnz aas mov push (bad) rcrb loop or mov or push (bad) psubw sbb pop out push iret adc test outsb bound (bad) mov xchg adc mov lods sbb inc mov sbb sbbl loop or xchg mov cmc jns add out add add fwait adc pop dec sahf push and or popa dec sbb adc mov push mov lahf adc leave ret dec sub dec pop mov mov jne push adc xlat xor pop imul xchg outsl adc ret orl or out or in jns pop jbe or adc into or sbb mov sbb xor pop sbb xchg outsl hlt adc (bad) lds push mov xchg clts leave adc dec add mov or push cltd fidivr mov call mov adc adc jmp ret sahf or inc xchg sub push xlat or sbb cmp mov je jb dec pop rcll mov test adc imul cld add jl adc jecxz push leave mov add add test mov push dec lods adc shlb cmpsb repz push adc in add adc add adc repz adc out inc push cmpsl ljmp add adc je mov sbb mov adc and mov dec adc lret mov sahf or push add stc (bad) or lahf lds jo dec cmpsl adc mov test dec hlt push mov out adc inc inc dec jns cmp jp inc jg repnz mov (bad) insb movsb or arpl in lret mov fdivs or sub pop push pop pop adc jns js rcrl adc (bad) enter movsb int3 (bad) int add adc sub lret repz jne je adc outsb paddb test and xchg cmpsb xchg xor mov add bound pusha shrb pop cmpb adc adc cmp adc jge jl sbb cmc inc dec add adc (bad) mov lcall insl fldt add rorl jno aas push lods scas adc cltd and cmpl (bad) push std xchg cmp lret shlb add push enter test adc cwtl pop fsts sbb jb jno adc aam xor clc icebp fidiv repz pusha sbb adc fistl pop out add div out xchg mov mov (bad) jmp imul push mov adc dec fstps jge push dec loope or dec jecxz fnop xchg sbb out mov mov aaa pusha dec icebp or push sub jge lahf xor jp xchg adc jne xchg add cmp adc xor mov int3 sub pushf lds stos aam add mov inc jecxz nop jmp adc jne cmp mov jle ds pop loop (bad) xorl and or or and push std adc xchg mov xchg push lret mov mov jno push mov mov and jo push cmp adc pop xchg mov mov movsl xchg jne mov rcrl stos and pop nop insb push pushf shlb mov scas jb dec push mov test dec aam test lods out adc pop clc sbb dec ja dec imul or mov adc cmpl mov (bad) lods ret push ljmp mov sbb cmp adc movsl pushf stos cwtl mov adc add or out into popf inc mov pop in xor adc lret sbb adc (bad) imul repnz adc lods faddl mov ja or comiss or push data16 dec fstl adc and and rdpmc push fptan dec xchg ret lods push scas xor or sarl xor xchg fs inc jmp adc xlat sub (bad) stc adc jl xchg adc fcomip and (bad) jo mov (bad) out adc adc or xor inc push or or sub insb mov adc pop sti fs popa loop adc jae sbb sbb xor xchg stc adc pop sub pusha pop inc add xchg stc adc mov shl popl dec lcall imul or and fcomps jno (bad) enter add bound adc xchg fdivr jne lret adc popa fldcw push imul dec xlat adc xor adc (bad) gs mov dec inc pop jp adc (bad) fsubrl es call adc in fs rorb (bad) cmc or out imul and add mov or loope cmpsb mov mov enter add adc insl mov fwait xchg inc jp adc repz dec in cmp clc jg adc sub repz or in adc sub pop fs pop shl cltd repz adc (bad) (bad) sbb and pop pop adc jnp push xchg dec add or dec jmp les adc pop adc lods mov loopne mov cmpsb adc xchg pop daa adc fistl inc nop sub adc lahf je push pop repz pop rcrl (bad) cmp push xorb and (bad) xor sbb fnsave (bad) jne push stc (bad) mov adc push dec inc or popl cmp out or sub scas xor in or arpl add cmpsl test lods sbb sbb sub cmc adc mov adc xor notl and test dec add mov mov xchg or sbb jnp push cs rcll xlat or jmp adc jns pop cmp push notl cld cmp xor add bound in std push sbb (bad) lock dec push or adc mov loop mov es fcmovnb sub test push add cmp test nop dec push loope ss jns pand shlb push mov cmp adc xlat outsb mov mov adc sub adc push repz mov notl push pop xor sbb mov push or repnz cli sub xor lret dec les (bad) push loope xchg sub orl mov arpl adc lods add adc dec push hlt mull scas pop sbb adc imul add call pop sti add sub cmc add inc adc push icebp rolb scas imul add cmp jle pop push (bad) jo adc pop inc fisttpl sbb or imul push insl jp test iret or mov jb adc stc (bad) ss enter addr16 repnz adc adc mov mov or (bad) or (bad) mov and insl xchg mov add push cmp adc aaa or push pop fadds mov adc repz mov adcl cmp cltd or sahf sbb inc adc push mov in push pop xor xchg push hlt adc or out faddl cmp adc push sbb cltd sbb sbbl repz adc push adc jp jg daa mov cmp add push push xchg int mov lahf add pushf adc es sbbl sbb cli pop push test in fsubrp add into push adc sti imul sbb mov sbb or fldenv aam push jbe out and pop push pop adc outsl sbb cmc or lcall pop roll add adc mov push fiadd sahf push adc mov int sbb push xchg (bad) xchg push std inc or adc jmp adc out or aam adc sub add cmp adc test inc rdpmc push xchg or or mov adc stc or push ret and call or mov cmp xchg or rorb adc test adc imul adc push mov sahf push movsb sbb mov int or loop cwtl lahf mov int3 push out xrelease mov xor sub ljmp adc push or or mov inc xchg mov out or push adc rclb (bad) xor pop inc aas cmc adc push cli mov sub push and repz stc jmp and mov insl int3 loop aad xchg xor adc and adc fcoms repz adc bound add add mov lahf pop out (bad) and cmpsl xchg out or adc dec cli cmp adc (bad) sbb xchg cmp pop fdiv cltd mov pop mov daa xor push push cmpsb and repnz in add (bad) jle inc fmulp jo lds test mov xor loop add or cmp lods push imul mov sub stos imul cmpl out jp push hlt out adc dec rep dec in dec fyl2xp1 repnz adc pop cltd cld sub cli jno sbb or dec adc dec mov or cmp iret jmp out push xor nop int mov out inc les lds adc inc jo adc addr16 push test jno loop adc popf stc lea jae test stos nop adc xchg mov adc fstpt cmp push adc fdivrl fwait cmp and adc mov jg loope xor sub adc pop daa and and mov mov sahf dec mov adc test ss sarb push ror enter push jg andl adc fiadd sub mov push loop xchg and fisubr out lahf sub adc push or (bad) dec pop cmpsl or in pop and rcll test flds jp (bad) (bad) dec xor mov xchg sub lock daa and mov ret mov sub adc sar pop cmp xlat xchg cmovne push sub adc jno je pop jecxz iret add jb or out pusha or (bad) and adc dec push adc xchg jae shr outsb das push in rcll dec adc xlat dec sbb add aam mov negb sti inc fiaddl lea xchg add inc sbb adc sub adc dec js pop addr16 or push inc mov incb sahf adcl mov mov xchg out inc out mov push push lret push sub adc loope fdivl enter or icebp sbb add xchg outsl mov pusha push mov aas cwtl in dec or adc test push push cmpsl ds adc sub push adc adc dec jno jp negb rclb ds adc int3 test adc xchg mov stos xchg gs push lahf jnp jb icebp adc in (bad) iret xchg cmpsb test scas call or test mov int insl loopne cmp pop inc pushf lds repz xor adc add and xchg jns out mov repz je jmp pop adc pop cmp cld lret std stos jno mov adc jge arpl loope and daa shr xor and or cmp xor jb mov mov loop,pt inc cmp push (bad) inc xlat test add xor enter or repnz mov mov in pop cmpsb sub pusha dec or mov pop jle adc fwait adc int3 adc scas sbb xor sbb cs or ficoml adc jbe push test in adc test add and adc (bad) jp push mov (bad) (bad) xchg pushfw push inc das inc adc push ret adc jne fcoms or repz sub daa adc mov dec adc sub mov cmp sbb mov inc sbb ja mov push sbb or xor or pop or in sbb pusha adc or and lcall pop mov xor pop loope adc mov adc test push push xchg (bad) sti xchg add push adc pop cmpsb test iret add pop or sbb rcrl in addl push out or sbb mov fwait insb add add or pop (bad) adc leave rorl les iret push dec shufps xor sbb cs or hlt adc clc lret sub push sbb pop rclb pop stos mov jmp push aas mov push sbb or push cli add sub adc xor or adc jae inc adc enter cwtl movsb push mov pop adc adc popf adc and daa xchg inc cs jmp cltd mov outsl pop push aam jne inc sbb sbb adc jns bound cld mov or cwtl cmp adc hlt push enter or dec movsl or daa popa mov mov fbstp push je adc iret pop sbb or ficom adc lcall add push pop push adc mov pop xor dec add dec mov cmp adc pushf lret xchg icebp jle add sbb lods sbb mov push rcll enter mov and push mov sbb adc push adc mov insl pop stos fwait sub push xchg lret sbb in adc aad dec sbb cli movlps pop cmp rclb ds orl jmp add aaa sub popf push inc and ljmp fs push adc inc aas adc js adc inc and adc adc loopne push jnp and adc ljmp xorl adc push inc pop inc or pop mov or or aas add push jne out or test sbb or cmp adc add adc sbb adc push cmp and add cld mov adc (bad) mov add lea push jle push mov fist push adc mov (bad) mov aas xchg fistp push (bad) pop adc mov adc push mov into sbb cmpxchg xor sbb sbb fisttpll push les rclb ficompl (bad) mov mov ja pop dec cmp add or inc addl add arpl adc jnp push adc dec stos adc out sub fisubl sbb dec sahf add add movsb add (bad) int3 or test mov lcall sbb das (bad) pusha rcrl or mov push sbb repnz out loopne push mov enter sbb leave or test push add bound icebp sbb repnz movsl xchg repz js adc in daa adc notb push fsubr sbb and push fcoms mov popf push outsl mov adc and sub sbb pop and push adc scas adc push inc or sub adc mov fcoml sub jle daa inc dec nop movsl test loopne inc or mov mov pop lods adc cmp mov mov push std sti cwtl inc sti xor jp adc xchg adc seto adc jbe jno mov xchg fstps lret add fsubr mov pop sbb (bad) sub (bad) jmp dec orl cmp repz or scas pusha mov adc outsl cmp stos xchg adc mov xor xor and cld push lahf xchg ja mov adc dec xchg test jmp js cmpsl jne shlb mov repz push or sbb and xor sarl jl add xor mov jge mov inc adc push lret dec mov and insl clc enter cmc bound mov (bad) dec repz jae mov push aam cmc cwtl cmpsl idivl loope call cltd adc imul call lret lcall repz fs cmpsl out out pushf js pslld lcall je mov int push loope mov push lret movsl adc push inc jmp int or nop sub sbb repz clc sub scas pushl sbb stos ffree add repz cmpsb vpunpcklqdq pop adc in and fcoms push jo fmull xchg xchg push push push mov sub cli adc testl jno addr16 add addl aam inc lods sub push add mov jo mov sbb fwait xor adc ror cmc in xchg aas xchg adc add out pop pop or lock stos adc pop xor adc dec or nop cmp adc inc icebp dec inc int adc mov cwtl adc push jp sti mov out push push in cmp lock out aam adc in popa pop xchg jecxz adc or dec mov test dec loopne mov sti mov pop (bad) aaa ret lret adc mov popa inc (bad) fsubp pop inc (bad) fsubs fstpl xchg (bad) ds (bad) lock (bad) repz stc add lahf out mov dec pop outsb and mov das test or scas jno xchg lret fstl cli push cmp adc sub mov xor jmp lods addr16 ret push es sub (bad) dec insb adc (bad) mov push out push push adc or mov stos arpl loop mov and sbb mov nop pop adc add lret push pusha adc dec cli xchg adc push cld ljmp aad push add lock movsl xor push adc jo out pusha dec call jmp xchg cmp jb add jecxz movlps add inc daa arpl js movb push adc jb cltd adcl sbb mov inc push sbb pushf jl stc pop xchg adc repz jp fstl mov jbe xor adc imul mov adc xchg iret cmp xor dec adc fcmovbe lods or lock push imul pusha sbbl and aaa stos repz jle call out adc fldenv fidiv mov sbb stc call (bad) mov test pop imul pop mulps stos mov adc cmpsb outsb add test push hlt movntps push pop mov rcrl adc rclb cmp mov aas pop js test aas jno adc adc or or js push push in adc xorl into push adc rclb mov pop or je xor fisubr or push and mov mov mov push insl adc xchg or in popf or stos add test sbb out out adc adc mov adc xchg out push cvtpi2ps add lret (bad) or lea mov add sbb adc imul ret adc and xchg sub rclb adc mov repnz pop mov push popf adc pop sar or js push or aad push adc repnz push adc mov sbb test inc rcrb xchg adc adcl sbb testb xchg adc jbe out inc repz or sbb ljmp imul or adc mov test icebp push ss adc push rorb adc adc jle adc sbb adc push or sti adc ja sbb add arpl jg or and sub xlat rorl aam test ret sub add sub rorb iret movsl pop or test xchg xlat or and sbb xor jecxz push pop inc adc mov out lret daa and adc roll outsb clc add mov je repz add adc add mov add inc push add out adc cld mov push jl ss fldl adc jmp push adc cmc sbb pusha xor xlat dec jno mov xor and es adc push ds sbb roll out jne adc bnd adc movsl push lods dec sti adc cmovo add fs xchg xchg add inc push sub faddl mov fsubrp repz jo add loope adc xchg sbb jne or adc push push cmp jne stc lcall jle xor pop cmp or push mov pop or mov dec bound add das test jmp add repz jne lahf jp add jle or mov cmp dec repz data16 adc mov xchg cmp push hlt pop lahf adc sbb xor adc add arpl mov inc inc unpcklps or add (bad) fstl jecxz mov js push adc and sarl and adc sbb call inc cld inc cmp push pop sub lcall mov add fstpl rclb stc adc sub inc adc (bad) enter leave or loopne ja xor cwtl in shlb jno test leave push and pop pop dec pop cmpsb dec stos sbb and lods or sbb or or mov icebp push (bad) fist inc or sahf mov test jne outsl add aad mov sbb and adc fcoms ret push imul lahf push jbe add jno or mov mov lods jae test add sbb mov leave and push mov jne jle adc fcomps or int jg mov pop je push (bad) mov mov push mov out sbb push xor aam adc cmp sbb dec mov adc or inc sub add push in (bad) adc cmpsb cmpsl adc rcrl hlt lahf mov inc bound jb mov adc subl push push sar mov pushf dec adc inc shll mov or dec scas jb mov idivl sub stos data16 adc and leave adc or cmp xor lret mov in stos icebp adc dec (bad) dec jno iret lcall pop adc push pop (bad) mov repz mov test push out jns adc sbb mov arpl and bound inc out popa inc xchg cmc mov pop cs jno xor sub fnsave or dec push or lcall imul or fdivl in icebp or adc negl and fstps lret adc or adc rclb lds pop jmp adc inc mov decb enter cmpsl popf imul les pop dec xor inc arpl sbb adc popa or lods dec mov inc sbb adc xlat ficoml adc mov scas mov mov in gs imul jg mov adc mov jge mov pop repz xchg adc xor fdivrs lods push adc add leave adc mov xlat jne ljmp gs fistp mov xor aas mov or adc incb add cmp and xchg aad push add fadds stos (bad) cld sbb rorb negb or mov jge adc dec sbb fst sbb lds jno adc pop jo push push xchg (bad) xor dec rclb ja dec clc dec xorl std mov cltd ret pop fwait or (bad) adc adc test dec aaa adc mov add push mov pop sub fistl adc hlt out jno enter dec repz dec pop (bad) xor mov stos ljmp xor mov add hlt fistl mov jo ficom (bad) xor repz push mov jecxz outsb xorl bound (bad) add ljmp pop xchg cmp xlat mov cmp adc adc ja sbb cmpsb call test xor adc jle adc (bad) (bad) xchg sub dec xchg sub inc psllq out les call dec sahf (bad) sbb repz stos sub add ret pop cmp in xorl mov jl je xor sbb std xchg faddl xchg orl or cltd cmp call (bad) adc int3 pop mov jae (bad) mov mov enter xchg nop (bad) xor and ja cmp ret adc cltd (bad) pop adc ret cld test repz lods push js xchg adc or ljmp add push pushf adc ret lock adc cltd dec and sub mov enter jbe (bad) ja xchg xchg pop dec ds inc mov fsubp cli ret (bad) call in cld mov pop into xchg sti jp jo adc or pop (bad) sti sar xor mov js add jecxz fildll xlat pop jp adc adc xor mov xor das or or push rorb push and mov sbb xor adc or icebp mov or mov dec in test mov adc into hlt or or leave stc or pop lar arpl in push add adc mov adc (bad) out mov push pop (bad) incl mov adc or inc mov adc (bad) jecxz enter sbb mov add mov rcrl popf mov push sbb mov sarl adc vxorpd adc xchg adc add lret xchg shr pushf adc mov cmp sbb adc mov or je adc xchg inc cwtl push push adc xchg ja add fcomps push test stos push dec scas sbb sub mov repz or pop jecxz movlps push andnps aas or and push and pop int inc or inc push outsb mov sti cmpb xor in (bad) lods and mov push sbb cld dec inc and push std imul cltd popa adc jle lcall test clc adc dec adc push mov call add iret add fs jmp mov addl add sbb add out add jnp sbb sbb jp fstpl and imul jne add push (bad) and sbb ficompl adc xchg sbb xchg enter push jmp das roll adc mov xor jg packsswb adc mov add push pop or and adc cmp inc jno push adc xor adc je sbb adc repnz xchg adc adc pop lock pop sbb adc in push push ret aaa lea outsl pop adc pop ja xchg sahf cmp mov cmp mov mov or mov or add add std lock adc jl or fisubr or enter push mov dec or add dec mov notl lea sub adc push mov mov std push mov sbb sbb add daa sbb xlat lds rorb add mov push cmpsb sbb stc fistp push jo fs jno add pop or push scas incb xchg outsb jns repz push rcrb ss add sbb jbe lahf adc cmp xlat sbb pop pop sbb rcll jmp adc test xchg andb call movsb adc sub push push mov push rclb fistl adc je and rol or test adc shr adc xchg test push adc sbb ja jo or (bad) lahf sub repz mov sbb cwtl inc push les xchg push sbb clc das ret xchg inc xchg repnz mov or xchg in adc dec sti or insb or add lods mov and xor adc adc out push push inc lock (bad) mov fsubs fisttpl push jmp leave pop adc dec mov cmc push lret fiadd repz xor adc or mov mov sbb fimul push (bad) ss sbb stc push outsb popf add adc xor adc (bad) or and add or mov addl mov test adc push push mov (bad) xor mov popa ficom adc (bad) lahf adc mov xor mov dec gs js sub xchg adc repnz nop es inc aam andl adc sbb add mov jno cmp push imul loope mov mov xor hlt or xchg adc add push cmp inc cmp push repz jae push ror iret popf out mov sub dec in sbb jbe das pop je nop xor xor adc scas (bad) add rorb jo sbb adc adc test out dec or imul jecxz icebp sub test adc or mov jbe outsb adc das loope adc push (bad) clc adc mov (bad) push mov sbb test adc xchg push jns fdivr (bad) hlt add mov fsts and in jmp adc lods push popf xchg xchg inc testl or nop data16 (bad) dec stos lea mov rolb ja out cmp adc or sbb in (bad) mov rcll mov dec dec cmp push outsl lret jb lret mov cwtl lcall rcll out jg ja js mov jbe outsl mov aad ret les pop sahf mov sbb adc jmp or push (bad) leave or or loop popa in mov pop push dec sub iret popa popf sti jmp push inc pop sub pop add push in adc mov fistl fnstenv or adc cvtdq2ps popf mov push stc aam push adc xchg loope not divl aad jno repnz fisttpll xor or les xor mov dec out stos and jle add gs rep mov imul adc (bad) xlat in ljmp push jmp mov jmp aas test repz bound adc fistpl adc sub pop sbb mov repz xor pop or adc mov lahf jo jmp jmp out mov out out mov push push mov sahf adc aam stos adc leave sbb xchg pop mov inc xchg movsb adc dec sbb test addr16 out xor (bad) lret fstp adc pop pop inc hlt sbb mov repz sub adc aad xchg arpl dec jecxz call cli lret fistp cld mov mov sub pop cmp and (bad) jns and daa nop cltd outsl pushf lods xchg push push inc addr16 adc fdivrp cmp rclb add sub push imul nop pop sub adc sub and xor push out mov adc jmp cmpsl jp inc adc mov cmp in mov insb js popa mov or xchg adc addr16 jge out adc cmp sub gs pop rcll jns push mov pop icebp xlat outsl jl push fs repz in cwtl adc push iret (bad) push xchg dec adc repz jns adc repz adc xchg in lods nop int cs adc aas add adcl inc inc mulb ret cmpsb mov mov xor push xchg and test std in repz jnp and and mov jecxz jmp pop adc fbstp adc daa cli adc addr16 add cltd adc test adc or icebp push sub adc pop test adc sbbb or mov mov and cmpsb or xchg ret xor mov sbb add repz sbb loop repz outsb lahf adc mov push popf adc add fcomps test dec pop mov iret xchg mov xchg push cmp popf push adc pop sbb adc imul lret adc (bad) or notl out or jo and inc es push in inc adc sbb out sbb jnp adc mov add lea mov and jle sbb adc pop adc inc cwtl push cmp mov or mov jge nop outsl dec push sbb lahf adc (bad) jno push push xchg adcl sbb sbb adc (bad) pop adc jmp adc inc (bad) mov bound or popa in mov fdivl iret add xchg les mov sbb push adc sub or inc addr16 andb adc mov or repz mov adc push into push adc adc dec push adc cld add sub xor icebp or data16 mov pop adc add stos add or or sbb xor (bad) adc add and add push adc adc roll (bad) repz out xchg adc pop adc cmp adc ds sbb sar sbb xchg adc aas xor push add adc (bad) mov cmpsl push stc adc sar push lds xchg adc xchg or adc adc (bad) cmpsb adc jae xor divl adc test aas xchg mov adc ljmp add sahf adc (bad) jg sbb adc mov or adc push jns aad sbb mov outsb mov mov adc mov cs add sbb adc xchg mov adc and add add and mov jl dec add inc call push dec inc je inc inc xor add and push sbb sti movsb push pop sbb or scas add icebp adc mov les adc adc stc mov insb sbb adc jo push test jp (bad) sbb mov mov xor or out je or fstl sub ja push adc xchg dec adc mov or push scas ficoml adc xor mov jg cld shrb int3 mov mov sbb jo adc push rol push xchg pop in or lds or jmp daa into mov sub int or push or mov or mov adc enter inc syscall fisttpl adc das adc add add mov pop imul cmp push dec bound adc daa mov add inc inc sbb mov xor jnp rcl lcall and mov out mov sbb out or add pop sbb aas hlt fcompl jecxz nop sbb cmpps insl adc xchg dec push (bad) scas adc or lret out into add inc sahf stos push in scas adc xchg push fcoms adc cmp nop adc sbb mov adc and adc or repz mov std adc mov test sbb mov mov mov daa cmp sbb adc lret outsw adc pop jecxz aaa jns sbb adc xor les adc test fist (bad) dec (bad) pop stos nop pop jecxz fwait adc aaa aad out and sbbb insl pop and mov test mov and add adc adc adc mov and fs adc adc or mov push adc adc clc jne push sub scas adc das xor add mov adc adc sub adcb call jp jnp cmp mov adc pop hlt jo mov repnz rclb push test in (bad) or mov adc push call call jno push fmuls or popw arpl sbb orl xchg dec std insb pop or mov fnop xchg and loopne fxch jb lret mov sbb mov out lcall add ret orb jno add push dec mov insb add sbb or in loop cmpsl push lret fildll mov dec or fcoms (bad) mov cmp mov pop push loope loopne idiv push sbb (bad) adc jecxz xchg scas xchg sti stos or push std mov add mov sbb test inc insl sbb je movsb xchg ret std hlt inc cld adc push rcll repz mov lea sub daa mov lahf adc addl xchg fisttpl sarb pop repnz notl adc sbb cld push aas in or push stos lcall adc or jb xor test sbb cli lea adc inc andl aam lods test clc mov lds cmpsl or leave ret mov xor add adc data16 adc scas push adc xor mov sahf mov imul mov pop dec in xor jb xor aas mov adc sahf jns jbe and (bad) mov or sbb stc xor dec push mov xor (bad) and popa lcall pop (bad) clc test jle adc subb push xchg or mov gs adc fisub out push hlt repz or xor dec push mov jae sbb stos adc ficoml adc push xchg fdivrl mov (bad) psrlq mov mov and xorl iret pop cmc jne in (bad) mov cmpb mov loopne mov bswap movsl das or and popa in and (bad) jbe push roll jmp mov repz mov mov adc xor mov xor cwtl or adc (bad) jb das sub mov adc lods jns mov mov dec add adc (bad) xor jp add xchg push mov jb mov icebp adc push pop rol push ficomp mov outsb inc adc inc mov adc add dec lret xor pushl testl dec jae scas xor mov sub cwtl imul jo mov lock clc push dec dec xchg jl in dec add ljmp or popa (bad) repz add in add fidivl (bad) mov mov arpl jnp (bad) adc or stos push mov aas iret insb inc push dec pop adc sbb jnp adc aad jbe xor popa out sbb sub adc outsb pop sub or mov test sbb adc sbb sbb adc mov scas jge push inc lret adc add push jbe call push mov mov xor insl or or aad push cmp add xchg mov sbb lea sbb mov cwtl mov sbb or or es adc fnstenv cwtl adc pop test dec jo sbb and push fcompl sarb stos pushf sub std mov cmp (bad) std push jo and adc int3 pop rcll in mov imul imul dec (bad) repz into cmp jns push or ror xchg xchg stc arpl mov jbe mov lea and (bad) dec fsubl jo mov enter cwtl xchg sahf mov pop or pop mov mov cltd imul in movsb pop dec scas jne mov push ja lea or add xor das subl sub pop nop call sub or adc or dec adc push test xchg (bad) pop hlt mov das mov rclb xchg stos adc adc xchg and andb adc adc cli mov sbb test adc ds adc xchg inc push movsl push sahf sub mov xor lods or and (bad) mov add subl adc jmp push mov outsl pop scas adc sub dec and cmpsb push scas adc add mov add daa imul loope addr16 out add fldl (bad) mov xchg adc mov clc mov pop (bad) add xchg or movsl int3 daa dec popa dec mov mov (bad) push mov (bad) aam pop out jnp adc mov push adc in dec enter push xor push sub lods jecxz cltd scas and and inc push mov repz adc push popa push mov cmp adc icebp sub mov xor jne mov or jns cmp pop adc es outsl mov add clc pop out or fistl test cmpl stos sti mov adc aas stc jmp xor pop mov sub fildll pop xcrypt-ecb cmpsl into adcb pop test mov xchg or cmc add movswl inc adc es inc mov cmp add mov scas inc mov jmp adc js (bad) cwtl scas sbb mov pop push sbb je jle bound movlps cld insb xchg subb or or or pushf int insl inc int3 loope rorb (bad) into cmpsl cltd test adc lds ljmp enter das dec xor dec lret xlat pop jno mov in adc adc jp sbb int dec push adc sub dec push psadbw add inc test lahf jbe jp fsincos pop xor popa sahf loop outsl cmp pop pop repz aam mov xor adc inc jnp std in call lea adc push adc mov cmp repz scas mov lret je dec jl jnp jp cmpsl or (bad) lds inc adc mov and arpl and sbbl pop pushf out add sbb adc dec pop ljmp xchg fnsave adc fcomps cwtl lds jmp sub in add sub push mov sbb sbb adc pusha jns inc sub in imul dec xor fist lret ret (bad) int3 adc dec jmp adc roll pop adc hlt push jae pop xor divl js inc xor jne mov or mov jns ja mov sbb mov cmp mov mov adc add xlat mov and or repz add xchg add inc or pop arpl clc mov out add push data16 jmp lds or pushf movsl push adc fwait mov shr pop push adc sbb push in adc or (bad) xchg test xor adc add lret outsb fnsave adc outsl aas rclb dec repz push insl add add or iret push movb pop aad xchg mov cli cmp pop push add popa xchg fsub add cld bsr arpl sub ljmp adc int imul inc adc pusha mov adc cli add in adc repz cs add rol in in dec jle or xor push pop icebp mov adc mov mov cmp enter add inc outsb lret repnz insb dec stos test hlt insl rcrl scas fnsave mov dec or dec sub dec jno or dec clc xor test mov add lret jmp jbe xchg add repz cmp (bad) xchg adc xor push adc push (bad) (bad) loope daa xchg fsubl cmp fnsave or popf and addr16 adc sti dec fstl lahf mov mov pop cli pop xchg add add stos and jle cmp pop mov push jo loope mov sub and lret add stos adc mov xor push int lods add jp shrb mov fildl mov (bad) shlb lods xchg js movb adc fidivl pop mov sbb mov pop std repz ret fmul or inc sub insb cmpsb in sub adc or jae adc call inc repnz popa lods fs adc dec das push xchg xchg scas icebp mov flds sahf or mov adc les push imul adc push ficoml adc xor rclb outsb push popa mov add push pop xchg lcall repz and pop adc out fstl adc pop jb adc sbb pop pop arpl jno mov adc xchg cmp cmp pop mov rcr adc imul leave pop xadd add cs ljmp lods or jmp push loop add adc add mov inc inc mov pusha or in add push adc inc sbb pop dec fimull repz mov mov loope inc jl pop test lret scas pop pop int adc repz mov fisttpll mov loop,pn push (bad) in outsl in repz push out xchg dec or popf mov stc int3 sahf sbb adc lret ljmp xchg adc adc cmp sbb je xchg fs (bad) mov push pop push and add push insl adc jo xchg lcall cmp mov pop mov (bad) ljmp lret fwait adc lock or sarb adc imul in mov cs addps adc pop mov jmp cmpsl add adc fsubs shlb lcall mov lds (bad) mov aas in inc stc adc decl fcmovu adc xor sahf fistpl mov sbb adc or adc sub aaa nop orps jge jg mov scas int3 adc xchg lret adc jle cmp test leave int3 lods and jmp scas adc mulb push cmp xchg xchg nop adc repz sbb adc pop mov fnsave fcmovu sti lds or mov fsubrl mov jle xor mov pop fnstcw push cmpsl (bad) data16 cld jp adc push and push in xor and push adc push push in dec repz xchg imul jge mov jle or sub stos shrb push leave (bad) or ss mov jno or repz (bad) icebp pop setae aam fstp enter adc or push and dec fsubrl adc jnp inc pop adc sbb xor mov sbb xchg cmp adc or lock shr mov cwtl in inc add ljmp add jmp mov unpckhps adc sbb fsubl insb inc add cmp test sbb jp lcall jecxz loop hlt out adc mov add adc test adc ret mov adcl cmp fidivl mov mov fiadd sbb fisubrl jno jmp jecxz test dec stos add jle int adc subb in add mov lods mov or (bad) push adc mov mov push sub mov or and gs repz sbb push jno scas adcb dec xchg popa push loope popf arpl fstl mov mov cmpsl sbb fsubl insl mov jae jmp jns add mov or imul nop mov sbb (bad) add sbb popf dec and adc sub scas xor xchg bound in stc push (bad) lret xchg loope loopne and jl cmpsb pop into cld adc fiaddl mov inc dec popa or adc jle mov pushf cmpsb sbb cmp and push push mov sbb and das pushf jmp ljmp sub pop iret xchg mov (bad) dec mov pop enter adc xchg lea (bad) sub scas nop outsl repnz fmuls cmp addr16 lods adc mov int3 xchg and cmp or push fdecstp cmp (bad) mov push push in mov dec xchg fcoml jge and push pushf arpl loopne loope scas mov xchg jae xchg fsts mov pop test enter push int xor mov (bad) sbb push cmp or test add lea test sub cld (bad) je outsl scas xchg dec mov push movsb out nop pop xchg mov test inc (bad) mov inc add fldl cmp pop jmp lea lods or adc cltd cmp fstpl movsl into movsb lea mov jne jecxz and adc dec lods in aad mov add sbb pop and orl mov repnz mov repnz lret jp mov push pop mov lret subl (bad) repnz jne xor push xchg mov push jno sbb lods mov sub mov xor sarb jns jl cmp push insl shrl pop jmp mov mov fnstenv cld adc cmp cmp inc jo fucomip or xor jno pop pop ds adc mov fldl2e fsubrs scas and mov imul cwtl lods mov sbb and out in or sbb mov xorl into test rclb xchg (bad) sbb sbb adc jl sbb pushf aas pop fiadd adcb xchg dec jge mov xchg movsl out dec in xor daa add nop mov fdivrl cld mov dec imul outsl lea push mov lock call adc add in inc dec test out into call xor insl ja dec push es test mov repz notl div or nop jno push das dec dec adc repz pop xor ficom cmp fsubs inc mov ficom lea jge push jp clc add std enter ja adc mov and fwait arpl push pushf dec adc cmp scas push test cmc jp adc adc xchg pop or out xor repz test out int3 inc sbb push cmpsb cmp adc xchg adc loopne ret or sti sbb xor cmp add fisttpll push jg adc adc xor adc sbb push xor iret add lock popf push maxps repz das stos cmp cmc push insb mov int mov lods or mov mov push mov in xchg mov sbb loope or jle addr16 mov sbb aad ficomp aas fadds pusha sbb pop inc push push int mov adc cli rcrb ljmp mov mov mov mov jecxz in bound adc stos pop insb inc in (bad) push out dec into inc adc mov xchg ljmp lret out sub mov movsl test jno or pop loope insl or int3 in adc push adc jae repz aad adc or adc adc repz jno jne adc lock faddl jbe idiv xlat push pop clc pop adc sbb sar dec mov push pop adc jp stc jle movsb pop out push cmpsb decl mov mov sbb pop pop cmp mov ret mov mov mov or dec imull mov mov jl mov sbb inc adc and add fstps xor rolb sub mov rolb add add mov fwait lret pop add mov jp cld mov in loope test dec or push push inc into sub mov adc std adc int adc or cmp adc or or ficom and daa dec out lret dec adc test mov xor sarb push cld adc (bad) repnz aaa xor iret mov ja mov adc pop pop sarb popf pop jg add aas adc cltd or dec fist jo jae icebp jns sbb cld lcall pop sub adc add mov aas (bad) fdivl std lahf jg jge add ja lsl push sub test outsb fsts add in shrb pusha adc jnp fimull outsb loop inc in test xor add adc add hlt add pop inc (bad) movsb (bad) loop xchg pop cmpsl (bad) or mov push jle adc (bad) jns fwait (bad) std pop adc jo sti popa cmp mov pop out stos daa movlps sub sub or pop adc and lods mov push sbb repz pusha dec mov adc out imul scas test dec shr shrl in push out test xchg paddq jne or aad jae mov aas (bad) sbb adc pop xchg sbb movsl lcall adc pop iret sahf sarb xor fcomp mov in cmpsb pop movsb or adc adc jg (bad) sbb (bad) xor ret fiadd (bad) push lods mov and or pushf mov push leave xlat lea out cmp into adc insb mov xor mov movsb jbe mov and sub (bad) loop js in dec sbb xchg adc cwtl mov push std pop adc imul adcl cmp dec repz test into jno insl xlat or imul (bad) (bad) ljmp adc scas nop or pop mov pand inc xor les daa dec imul repnz jle adc clc push jnp pop aam mov push repnz rorb je pop adc push idivb pop stc mov ds jle cwtl shrb (bad) xor adc jl mov repz jo lcall adc fistp pushf cld pop mov jg sbb outsl shr adc popa mov enter movsb adcl add cltd movsb adc pop mov jle xor inc xchg daa cwtl jmp addr16 adc scas inc outsl inc lods pop test es xchg mov ret add (bad) adc adc mov ja pop adc fadds add fs add aas jle push je rcr add mov jl lahf les mov push sbb adc adc adc out or mov push push jbe pop sbb scas xchg push xor mov fistl dec jo push (bad) cmovo sbb push adc jg mov (bad) xchg mov andb mov sub (bad) or mov fidivr adc push out dec or or mov xor mov out xor adc jg or scas xchg xchg or ljmp lds repz jne adc mov push xor mov xor xchg lods xor adc (bad) xor jnp fstl negl call push js inc scas lea mov mov repnz adc pushf sahf jnp (bad) inc pop mov sub add pop xor adc movsl leave adc add inc cld ret cmp fsubrs out call adc ja int pop lret stc dec jno loope lds jecxz in into add push loope mov outsb mov movlps (bad) fucom pop call imul push std push lahf cmp mov xchg cmp xor jmp adc dec sbb jecxz sbb in xlat fwait aaa rcl or lock repz push adc adc sub or xor jmp hlt (bad) negl cmpsb xchg push mov xchg xor in aaa and fcompl push pop cltd mov adc lcall lcall xchg cmp jge add (bad) int3 dec xchg (bad) jmp setae pop adc fiadd adc adc dec loop (bad) sub mov aaa mov fwait scas pop push adc mov fndisi(8087 adc xchg and and adcl subb push dec xchg lds adc pop jno fcomi adc cmp pop cld pushf cmp repz imul das test jmp mov data16 mov and dec (bad) das mov in into pusha cld jb nop leave jae jle fadd pop add adc scas mov mov test incb out fdivs icebp xor push ret repz pop adc add adc mov (bad) fstpt pop in cmp xchg mov sbb sti fistpll sbb mov adc cmc pop sub fwait jne pop adc sahf jge pushf add push adc mov mov iret dec stos add cmc or push adc lret pop add fcmovb in (bad) cmpsb adc and mov jbe scas (bad) and cs xor test movsb pop in mov mov aaa sarb xor mov cmp enter cli dec pop sub pop sub daa or jmp rep int in ja xchg mov push aas adc outsl push out xlat dec int3 adc repz push jmp imul in xor test jmp or enter xor xor fidivl jbe icebp push pop rorb shlb stos arpl loope jo xchg push sahf jp cli frstpm(287 adc sbb or sbb clc repnz jge xor fsubr adc cmpsb push mov or rcrb fistp add loope decb add or lods or jmp lods mov or or aam loop loope xorl (bad) push fnsave ret pop shrb andl movsb xchg inc stc dec cmp xor (bad) jle mov pop (bad) fwait lea sub out dec into repnz sbb rolb loop pop inc cmp adc sbb xor repz mov jno or fs or ret jae add sbb mov sbb stos xchg iret mov or mov popf sub sub ret adc (bad) sbb out out sbb insb adc push ja clc push or or adc push scas icebp jno lret pop jno adc lea jb cmp adc mov xchg jno adc stc adc push push mov aas dec fldcw out push insl or insl call lret rep adc (bad) push adc repnz je adc push bound das fstl fidivl inc jle xchg aas out adc jg adc cmp jp pop adc jge sti cs mov push hlt fdivl cli nop mov jle mov cld adc inc cmp enter in out jecxz or push outsb scas cmpsb testb mov dec sti jne in adc mov gs xrelease mov adc js sbb dec in shll lcall jo (bad) hlt cmp mov mov jl mov and jns adc jnp cmp cmpsl repz inc dec add iret mov outsb adc cmp push ret insl xorl xchg mov scas repz mov pop jmp pushf sti insl add dec pop leave adc loop mov ficomp (bad) imul xor xchg insl pop scas mov xchg rcll aas xlat mov dec jns sbb js cld mov xor fwait mov jno fnstcw pop mov lds in inc aas jmp enter mov push orl pop sahf mov jle inc pushf lods dec int or loop mov dec push jns in jbe cli jne fwait cld sbb cmp (bad) clc adc and xchg cmp push jecxz mov (bad) fsubrl jp and adc mov jo jmp lock mov jnp cmp incb loopne pusha mov js mov scas iret dec adc jmp rorb lahf (bad) adc in mov mov lret push dec shrb repnz sbb fbstp push int3 inc or sub mov lock rol (bad) mov xor mov push adc (bad) xchg hlt lret xor adc xchg sbb adc pop cltd mov adc pop rcrl fwait xchg sub sbb pop adc (bad) jle mov adc sub lods push sub adc push jp fstps enter (bad) loop popf dec adc mov sub lods or push adc xchg lcall into xchg mov int3 addr16 push mov sti mov es arpl scas mov cmpsb and cli adc std call adc ds cmp push cmp jg fidivr pop adc stc and adc ret dec shr sbb adc aaa scas xchg mov adc mov insl (bad) dec pop shlb bndstx dec push mov push stos dec mov in push movsb dec or es adc imul out dec push mov sub adcb ljmp cmpl aam mov xchg pop icebp adc adc mov sbb dec and hlt fdiv pop sub stc (bad) cld (bad) incb shr cmp push scas adc cmp sarl (bad) fcoml test repz call int3 adc adc mov rorl and out mov fs aam (bad) adc movsl push mov int test inc loop,pn xor in (bad) out rolb fs in stos push imul mov mov pop add cmp cmp outsl imul or dec in insb adc mov fdivl adc or stos in dec sub mov adc shrb repz shl pop sub test sbb mov insl sbb mov sbb jle sbb xchg sbb add inc mov adc xorl add mov test out xor adc adc adc cmc xor adc push xor addr16 adc mov sbb wrmsr adc or mov add adc enter (bad) pop inc pop dec or adc push cltd scas mov adc dec or in jp adc jb dec xchg cli rorb arpl mul pop xor fstsw pop adc sar inc lahf (bad) cld insl adc push int push enter push mov stc sbb adc xor add xlat aaa adc rcr push cli fistp push fcompl fldl lret mov sub (bad) mov and outsl jbe sbb push pusha stc adc lret cmp or add add (bad) mov inc jbe repnz dec and pop in les xchg mov inc jge cmpsb mov or mov cli xlat jns pop repz sti pop lahf loope ret mov sub test cmove and dec add (bad) rorb pop dec jo adc cmpsb ljmp adc andl xor cmc adc cli dec jl pop fsubs (bad) dec (bad) outsl push sub rorb mov ljmp adc jbe adc mov cmc insl lahf loop cmp or sbb int3 jge pop pop iret ret adc jle stc sub lock adc fstps xchg pop pop push mov push add xchg jge fyl2x adc fnstsw mov nop es sub stos sbb cmp repz xor push adc dec xor adc xor dec mov popa jnp aas mov xlat mov hlt mov loopne and jbe jp mov pop mov dec cmp dec hlt dec adc cmp xor mov cmp sbb and or xor adc int imul call dec mov jb iret mov sahf adc mov stos adc out movsl or imul pop add push (bad) or jb pop mov loope rclb stc push rcll adc hlt xlat cwtl mov pop inc mov xorb and repnz fldl adc fcmovnb popf push rclb stc pop push (bad) dec sbb or dec into lret sarb add test (bad) mov rcl ds add gs cmpsb das mov adc imul adc adc jge cmpsb add push sub inc push inc push bound and gs into pop adc or (bad) fsubr sbb cmp (bad) adc cltd pop repz lock cwtl mov dec mov repz or or adc in sbb iret fimull push nop (bad) mov sbb xor in aas mov fistp pusha (bad) insl inc jmp js sbb pop sub scas adc (bad) xor ljmp mov xchg mov inc imulb cmp adc cld xchg sbb ret incl movsl (bad) mov lods adc mov scas shlb cmpb cs mov popf dec cmp mov ljmp push sbb adc pop xor sub nop push jae adc leave adc subb add pop stos lcall and (bad) and mov scas push sti gs sub repz or xor dec cmp in cs jle movsl jecxz adc pop xor lea call mov xchg mov sbb int adc xchg ss adc or xchg adc sbb cmp pushf and addr16 cmpsb int mov shrl mov mov xchg xchg push xchg mov rclb minps test aad hlt jecxz jmp and arpl fistl lods lea call test stos adc mov dec adc cmpsl shl jecxz sbb pop jge adc dec repz adc cmc (bad) adc push jns or pop adc push add xchg dec adc clc nop mov push scas pop mov xchg scas jno push push (bad) shll add repnz sub adc clc cmp xor adc std rolb sbb fstpl xchg outsb push adc cli adc (bad) cmp sbb ds (bad) cltd xchg jmp jge adc xor jg pop repnz sahf add das pushf iret popf mov subl mov into push insl (bad) jl jmp popa das adcl add (bad) stc mov ja mov mov repz xchg js lds loope hlt cmp xor pop or ja xchg sbb adc fwait popa adc cltd test jns adc xor adc sub mov stos jg adc ror ret scas scas xchg adc les push xchg jp (bad) cmpsl add outsl (bad) pusha dec mov adc jno je and fwait adc jb xor push rclb push and add aam xchg adc pop arpl mov adc mov fstpt out movsl xor adc jmp test adc lcall mov mov and or xor or fisttp push dec xchg cwtl ret dec mov push add das mov je inc sbb sbb adc adc mov lods (bad) dec push xacquire test mov and adc xchg fbstp push jno mov add sbb mov outsb (bad) std adc dec pop xlat insb repz push ljmp jno mov jl dec xchg stos push adc push sti pop adc jmp stos xchg lods mov and notl xchg fimull sbb (bad) xor mov hlt and inc rcrb sbb push pop adc jle out (bad) adc sbb jne mov lock adc popf ret cmp ljmp jo xor jle push lahf popa mov pop or push ret sub xor jge mov sub fidivl cmp sub mov mov mov popa mov test xor and mov pop in rcrb pop sub mov xor push adc negb push adc mov adc mov or sub dec xchg outsl pminsw dec jmp stos adc xor pop into adc lret adc dec call int3 pause or mov leave or movsb int3 insb adc jmp adc dec jno mov popf in xchg cmp repz xlat je mov adc or cs xor xchg mov sets xor in lods fsubp jne dec adc inc mov pop mov cltd lcall push sub mov mov sub mov mov jno (bad) hlt mov mov fsub sbb adc push xchg cmpsl das mov lret lret ficoml cli adc or adc inc shlb jns xchg or and and sub in push int or (bad) pushw mov inc leave sets adc mov js sbb loop fisubr pop faddl faddl jnp,pn add shr adc mov lret mov hlt insl inc adc mov push in test pop jb mov test (bad) in daa das push int test call add vmovntps ds xlat sbb and add (bad) jne arpl into pop sarl push (bad) aas pop jge sti cmp js dec shlb scas adc lods fnsave pop roll or jo ss mov scas cmp pop (bad) adc std push (bad) cmp cmp xchg sbb popf mov push hlt push push jbe jmp imul adc pushf adc xor cld jbe push xor out pop outsl add pop push inc call dec dec out dec sqrtps adc push ljmp push jnp pop jbe cli (bad) jns pop sti adc xchg jp adc pop adc aas pop cld fistpll js adc and adc jmp pop fiadd sahf jnp popa arpl loop jno jb out cmpsl or pop stc pop ds je jo jns mov imul pushf push jno adc dec cmovle shll add fs xor xchg mov push repnz mov mov push push jecxz push sbb push cmc adc xchg mov dec jae adc jb adc mov dec ret adc add adc inc out inc pusha ret je mov lock jb mov mov sub cmp pop bnd jne notl lea push imul inc add cwtl xor push mov mov dec cmc mov xor testl dec popa (bad) bound pop jg inc cld adc xchg mov sbb les syscall inc cli push sbb and push adc outsl inc bound jmp outsb inc loope sar inc sbb pushf adc jo jg cld pop jns data16 pushl into cli sub outsl loop loope in sbb dec out and icebp or dec stc repnz cmpsl xchg movsb adc xor outsl push dec jne sbb inc icebp les ja je jae adc mov mov adc cwtl add movsl mov enter push dec bound xchg mov xchg xchg add push or mov adc mov sub push xchg cmpsb adc lret xchg stos mov scas xchg lods adc aam sti iret xchg mov jl ret or repnz je xor outsl push out stc add and dec fdivrl daa adc andl pop xchg cmpsl popf mov or bound dec gs movsl inc in lret negl loopne js les arpl lods add add jp cmc dec adc pop outsb jge jle jnp rcrl mov (bad) jl pop mov jle sti lret lahf dec jnp mov mov push jne fisttpll pop dec repz adc aam adc sbb push jns adc notb outsl jno push xorb ret jbe jae sbb cmc push mov xor jno inc adc in mov arpl add cmpsl repz and setb push jae insb dec adc dec mov loop push rorl dec (bad) insb pop dec out fdivl mov sidtl test cmpsb push xchg mov divb xor js mov push repnz arpl out rclb dec gs popa inc andb aad fsts jmp movsb or sub jmp insl adc in ret jns xchg xchg mov xchg incb sub inc in inc fs loop popa add jl cli jnp repz mov xor adc fucomi (bad) hlt insb pop pushf adc repnz jg xlat push ja nop mov dec mov dec hlt enter subl push and mov lock mov mov push jecxz iret std dec adc rcll notb ja pop sti les adc dec (bad) aam addr16 in sbb dec add in popa dec adc hlt ret imul sub adc mov mov dec scas pop scas popf test adc in pusha dec insl mov mov inc aam push ficoml fcomps pop push jb notb push push imul xchg mov scas mov and fiadd push inc fninit adc movlps sahf bound scas push and mov xor adc outsb inc popa les cmp cli pop adc pop adc lock repz jno pop nop mov adc in add or mov push adc push xchg jno nop stos ja push cmpsl adc fwait mov adc xchg sub dec push bound jno jo fsin sti adc or adc loope popa push adc xchg push add (bad) cmpsb popf movsl sbb cli lret xchg test aaa xchg adc sub mov fmull aaa adc mov loopne loope mov sbb repz jns fwait mov nop adc push push pusha adc inc jno testb adc add test mov push or inc mov call in popw adc add xchg scas xchg scas test xchg adc rcll inc mov mov mov cmpsl fwait cmp jle sarb mov out fldt pop insl pop repz je dec nop ljmp pop pop repnz push addr16 adc mov adc adc notl push das xchg adc or hlt mov pop jne je sub push imul nop (bad) out xchg add adc add mov sbb pop out enter push fs inc jns in outsl or repz lods imul dec jb xchg dec lods movlps addr16 loope loopne mov xchg pop sqrtps rcrl push js xchg and and adc xor loop aaa xor je gs icebp subl cmp mov push ret (bad) (bad) repnz cld inc jns xchg adc inc mov xchg cmp js pop xor je inc adc addr16 mov repz cs pop mov icebp pop (bad) lock mov sbb add mov mov xor sbb fbld xchg fadd lock (bad) add adc mov adc in orl or mov inc adc xchg in xor push cmpsl andb push test inc add dec fs xor push dec insl leave pusha dec pop shrb xchg imul jg cld stos sbb repz scas lahf adc out pop inc jno push lock push xchg xor push aas (bad) dec lods or rorl or adc xor jns adc adc xor add add shll (bad) and (bad) shll (bad) add xchg inc or fneni(8087 fcmovb add push mov repz jb mov pushf cmp cmp popl test push jg jle pop cmc mov add lcall inc rcrl adc push fdivrp adc outsl push in push outsb sti push dec cli push repz cltd xor pop jne sub fnstcw es pop sub mov popf mov dec add sarb cmp movsl adc xlat pop dec gs and sub mov dec aam popf mov sbb adc imul inc insl add sbb faddl push (bad) (bad) dec push ret adc sahf mov jbe and jge adc push imul repz (bad) adc andl testb ljmp adc fs popa ds mov das adc cmp imul inc insl inc stos subl push mov js out mov push mov cmp scas ss push pop arpl push test adc out out aad into jae rorl adc imul inc notb xchg mov or xor xor fisubrl adc push mov adc (bad) insb sbb or lock adc dec adc inc test sub inc jp sti ret jno and pop sub popl inc js es fwait and repnz arpl int push inc outsl (bad) xor adc imul adc xchg cmpsl adc jl pop mov test or test lret add iret js gs (bad) andb sbb ss rcll nop (bad) xor movsl add fnsetpm(287 fadd jp inc push loope addr16 dec dec mov arpl fisub adc pop adc pushf (bad) mov neg sarb sbb cwtl addr16 or adc or push push push int add add xor cmp adc repz jmp imul mov xchg cmp (bad) in dec adc lret push leave inc adc cli repnz stos mov jecxz popa inc pop inc mov mov jne push jecxz and loopne out dec adc insl dec repnz dec shrl dec fidiv pop xchg ret dec out imul mov sbb nop add add adc insl dec lods (bad) scas mov xor push mov in test dec arpl and jecxz inc out fiadd inc mov add fs out insl dec sbb (bad) loope pop cld sarb lret pop adc (bad) insb inc outsl lds xchg int (bad) mov movlps xchg pop adc mov sub mov and (bad) fadd jle pop jmp pop imul xlat jb push mov mov insb aam adc adc inc cmc inc cltd aaa sbb aad mov xor sub out (bad) data16 ds adc jne (bad) repz xlat xor daa adc jl lcall jecxz lret inc loopne xchg mov adc bndstx or push push ljmp adc repnz and adc or lods xchg scas mov sbb xchg or xor xchg aam repnz mov mov jns pop je icebp inc cmp adc inc outsb push (bad) jne inc jne adc cmp outsb fcoml sbb movsb repz add imul lods adc insl dec sub pop rorl xlat jns aam push aam adc sbb hlt out adc in loop out adc push jo mov mov xchg mov xor and cmc xchg add adc jne adc mov and lods add xlat in adc ret push loope jg push cld push jp add rorl into xor jne sub xchg cmpsb mov sarb jl pop popf mov test add (bad) xchg adc cmpsl adc outsb and mov cs das adc adc xor ljmp call pop imul push in aam adc repz or je jae xor lcall adc inc bound jge xor inc jae and adc test data16 lds loop bound jb inc push in je ret pop and pop popa faddl mov adc mov xor mov cli pop jg cmpb pop shll gs js xchg mov ror jne sbb (bad) repz adc mov sarl (bad) std push adc scas mov or fisttpl or or es lret insl dec or dec in push shr push out push dec adc dec je or or adc xchg xor adc leave jmp adc push jecxz popa dec out test test repz xchg mov mov cpuid sbb aaa nop xor sbb jno lret push imul lods sbb xor add sub xchg dec mov enter in cmpsl or adc add adc in test test push mov adc jo or lahf adc cmp inc jmp or cmp cmc adc jp sbb in sbb pop (bad) mov xor adc pop test xchg pop imul rcrb xchg and jecxz stos nop call adc mov leave ljmp cs js sar sub mov scas or adc inc push popa push and pushf cmp sbb pop data16 fldcw push icebp fcmovbe je rcll pop adc shrb dec std sbb inc (bad) push sti adc adc in fucomi repnz jno adc and jne or adc lea jle add jl push loopne in insb pop xchg adc xor loope loopne adc jg jo cs sbb add pushf mov mov lahf fdivr adc loop mov xor js jnp push adc add fsubl adc inc mov xor jns cld push repz push adcb or push jb inc mulb and adc (bad) or rorl jae push jge std or xchg adc push shrb or test pushf cs fcoml mov fcomi popa fcomps cmp adc push inc out lds and (bad) repz push push sbb adc adc scas cltd mov int js inc out dec stos push sub adc push xor outsb pop add loopne mov adc imul xchg jl pop or adc mov rclb mov ret js (bad) ficom jnp stc add fsubr fistl adc sbb std mov fimull xor or enter hlt std repnz mov add stos pop outsb adc arpl sub in into insb aam push add imul test mov pop mov loop pop xchg jae ret push test xor push insl dec outsb add jo mov shl shl mov xor rorl or mov fcmovnbe in loop imul into call xor repnz jne adc mov xor adc shlb mov jmp cmp push cmp pop jg adc jle (bad) pop out rcrb push sbb adc data16 addr16 in push repnz adc pusha out adc add cltd xor or inc je adc jo xor lds inc or mov adc push (bad) mov adc adc xchg and sbbl mov jecxz ja lock xchg mov repnz icebp inc add testb pop jb dec arpl push or mov nop sub sub dec cli enter xchg repz pop clc pop jo std jmp addr16 adc add adc dec repz dec jo fadds xor lods add inc bound (bad) outsb push insl aad adc push jg jp or mov push xor adc or adc cmpsl mov cmp or adc xchg inc jnp vmread adc shr scas subl add mov cmp sbb xchg mov sbb (bad) pop jmp jo xchg popf xor cmc inc hlt inc out insb ljmp add clc fdivrs xchg mov lds jo mov hlt push jbe jle jb lock jne sbb (bad) repz imul adc adc sahf adc ja push xchg mov adc dec outsl into out or scas xchg sub jmp or xchg out fdivl xchg ja cmp int3 out es adc pop not imul xchg and cmpsb xchg add adc (bad) icebp push mov push call xchg or repz lock adc sbb iret xlat adc test inc jb xor xchg outsl inc mov adc enter mov les adc movsl xchg dec addr16 dec pop sbb mov or aad clc aam loope sub sub lahf and popa fucomip sbb sub adc jne adc pop clc pop xchg or xchg lea das push mov and or in (bad) scas mov sub mov xchg scas add bnd xchg sbb dec push inc jbe ja aad adc xlat pop daa push out aaa push imul add mov addb mov pop out js or inc jno shll xchg adc mov cwtl fstpl adc and mov add xor mov push out push sub fwait aaa push pop ds pop clc pop (bad) adc sub cwtl cmp pop mov rolb mov adc ljmp adc mov icebp adc push cmp adc push and pop sub insl clc pop adc pop nop mov (bad) jnp or xacquire or pop jbe pushf cltd xchg sbb jo push inc daa in sbb aas or ljmp push hlt xlat adc push mov xor push ret mov sbb int3 xor (bad) sub in push lea mov in shr sbb push std rcll jl daa andl pop (bad) (bad) mov jb adc insb add in dec outsb (bad) mov xor adc adc sub cmp bound wbinvd push xchg mov adc (bad) push xchg das add outsl pop sbb xchg test cld pop cli pop adc fisubl and (bad) push stos adc or sti adc mov cmp sarl fistl mov add insl or outsb fistp fs adc or ljmp mov push pop push mov xor push and xor sbb movsl aaa out clc push cwtl adc jno hlt or rorb pop jbe jae rclb mov fnstcw mov pop xor fisubrl fdivp paddb adc (bad) popa fldcw lea imul dec sti sarl jne ja aam push sub ret push sbb sahf pop adc call cmc pop adc adc adc fistl mov sbb xor inc and mov cs popa sub dec dec insl loop adc xlat fs inc mov inc das adc mov jp pop cwtl loopne je movsl xchg and mov push sbb xchg push out dec out pop repnz icebp (bad) xor sbb pop push ds adc movsl lea scas addl xchg mov cmp xor pop call or push xchg mov adc clc insl push loop push adc add mov xor add adc (bad) hlt inc jmp call in leave inc out add adc test call or mov xor adc adc jl mov xchg xor outsb (bad) add btc jnp vpackssdw in adc sub lea adc adc dec jo mov rorl shrb mov adc cmp adc imul sbb mov repnz mov mov adc mov jmp xor and cmp adc lock jg jo xchg mov or adc pop and in dec cli int push jnp fwait repz outsl dec into outsb dec sbb mov fldlg2 fmuls adc ret pusha ret test repz sub mov ja aaa (bad) xor adc adc mov xor (bad) xchg scas xchg in fldcw adc dec in or loope addr16 or (bad) (bad) (bad) jecxz shrl add in dec adc mov xor gs mov adc data16 lret out inc pop loopne insl aam adc xchg xorb orl pop lock lcall sbb add int rcl in push mov xor pop adc mov ds mov dec pusha ficom icebp popf mov sar pop (bad) adc (bad) jp clc add add cmp mov mov and and enter adc push mov adc lock cld test (bad) jo adc jle jge or push jns mov adc loope inc (bad) lret jbe mov mov jl repnz js lods push in xor xchg mov nop rclb repz lret add mov pop test test repz jnp sbb (bad) add cli int3 jns push adc sbb mov mov (bad) xor in loopne jecxz insb pop imul leave mov mov imul ret jne inc adc jns adc lock or dec and add pushf or or loope jg sahf pop mov xchg ljmp addr16 dec cmc lret pop adc jecxz loope sbb mov push mov fdivrl (bad) (bad) pusha sbb sbb icebp mov or outsb adc arpl test cmp pop mov fldcw fwait sub xchg mov je jg setge mov adc xchg mov roll adc (bad) mov adcl adc xlat fdivs std (bad) jge jl inc sub pop repz dec inc mov inc or cwtl out and xchg dec in repnz sbb loopne repz mov adc xchg jge adc jno jb mov xor xchg xor xor fnstsw pusha adc imul ss fadds (bad) insb or mov pop insl push xor gs adc sbb mov out pop int adc movsb or out ret jp jnp push les xchg adc cltd outsb (bad) jmp adcl adc xor jg jp or popf mov or lock icebp xchg mov adc push iret jg cmp or ljmp sub xchg xor mov adc (bad) xchg cmp jno pop pop jnp lds hlt cld xor ja jbe adc adc lods inc in ret inc std add adc adc push mov dec xor xor xchg mov popa inc fwait movsb aam adc pop imul adc dec push xor (bad) jae inc pop adc pop cmc fcomp jne or out dec jae xor adc testl jmp inc loope adc xlat add add jmp addr16 pop mov adc add gs adc or int in fdivl adc adc adc xor push xorl push sbb xlat mov pop fs xor imul clc adc mov mov jae hlt je fwait inc stc ret pop adc pop shll adc adc repnz mov mov adc add cltd adc out jno in mov pop adc jno jb int3 cld dec pop imul ret lea xchg icebp dec jg shl jp cmp dec push outsl lret pusha call cmp xor repz and repnz adc fisubrl negb jmp mov add jmp loop in xchg test mov push imul adc lret inc iret mov mov adc inc outsl dec loopne (bad) out loop ret cmc (bad) ja cmp repnz adc push icebp push not push ja or out imul repnz mov push cmpsl fucomp push outsl rcl xor adc jno xlat js adc jp jnp mov add xchg sub in jecxz call sbb call fnstsw add mov call jle mov loop mov shr (bad) sub add adc push inc imul lods icebp stos or shll out jecxz add popa lds loope pop loop push cmpsl in fisubl jns mov lahf adcl adc lcall (bad) jp rcll inc call iret pop arpl rcl push adc adc paddw repz xor and fstpl jg xor or in adc test stos adc jno xor cmpsl negl sbb xor aad ja shll adc lock jae je adc sahf and add pop dec cli dec jns push cmp jge mov adc xor jecxz xorl pop icebp jo jg cld flds inc fsubrs repz xchg adc mov cmpsl sahf mov fstps out or repz or jb out or adc push jecxz loop subl movsl andb pop pop or add cwtl sarb loop mov sub dec subl (bad) adc stos push (bad) lods mov adc mov lcall popf test inc adc cmc push out jne xor dec mov out adc clc rorb loop test clc (bad) xor pusha adc mulb lcall adc jl and divl mov xchg imul fcoml xor fwait push add lock mov js dec (bad) sub pop outsl mov stos xor rorb or dec mov imul movsb and cmpsl test xor push push sbb movsl mov and pushf push add adc mov aaa or adc cmpsl cmp and pop pusha sarb mov or pop push fdivrp cmp das adc gs sub cmp ret pop xor repz adc or adc or dec mov cli mov sub mov push cs xor out or mov and mov cmc adc push jmp mov in adc rcrl lret cltd mov daa mov pop sbb push fnsave je mov loop jo add mov mov xor adc jecxz cmpl addr16 pop or or dec bswap pop divb adc jnp jl js das pop adc jecxz push daa xchg dec adc adc add xchg mov inc adc inc adc lret mov (bad) repz push js cmp mov push scas sahf mull mov out lods jbe mov scas lcall movsl dec pushf xchg pushf bound lods mov or jae or mov lret movsb jb push add push cwtl aam rol xor xchg (bad) repz push (bad) pop adc xchg push (bad) jne xor or mov repnz and and push or mov cmpsb aam js sbb lahf adc jnp and or adc jl add mov add pop sub adc fwait mov out cmp fildl loope adc cwtl (bad) cld or mov in lret jb scas insl sub aam xchg out push cmpsl imul cmp lcall fwait and push push lock jb sbb sbb rcr test and sbb sbb lea add or cmp adc adc scas sub pop repz push or adc jne mov dec repz or adc test or mov repnz psllq mov rcrb xchg adc or in dec mov push xchg add cmpsl mov (bad) mov in jle sub sbb pop mov fidivl pop push push adc pop pop sahf sbb cmp (bad) push mov adc xlat pop adc adc fwait add imul enter adc adc mov cwtl icebp (bad) (bad) push ss jne add add sbb mov mov adc sbb movsb add pushf add inc cmpsl mov in and or or push mov add add mov (bad) mov pop test and lods xor adc adc pop xor add lret lods mov adc jne add int pop mov enter or mov sbb insl pop rclb sub and dec xchg jno int3 dec adc jo or xor rcrl and push cmpsl ss xchg movsl nop and mov mov aas in pop ret mov add xor mov push aam ret pop add std andl mov push out add in dec stos cmp adc push pop xor sbb mov pop loope mov mov pop lds dec mov (bad) fistl xchg daa inc lods sahf xlat ret je (bad) push stos or out into test mov sub and rclb rep adc or dec xchg push aam and sbb mov scas nop xor push rorb mov mov or repz sub or xor lods adc xchg pop adc adc adc or mov push pushf add daa sub or ficomp mov mov inc xchg imul (bad) insb notl cmc push mov sarb cmp test mov add or xor push mov repz push adc jb or mov add mov jecxz push cli and pop movsl jecxz cltd pop xor das adc rclb xor adc fwait adc cmp push aas mov sbb test shrl into hlt jge add mov sub sub in ret adc ret adc pop mov mov adc sbb or loope push jecxz cmp xchg add jo cmpsl aaa cltd adc mov sub adc imul xchg mov daa add or repz nop popf popa cltd mov sbb sti adc push jnp jbe adc adc sbb out adc adc mov pop adc dec and loope insl stos adc jmp out mov adc int3 fist xor imul mov (bad) xor lahf adc lods adc ret dec mov icebp sbb call adc (bad) stc repz int3 sbb mov sbb (bad) ds rol fwait mov jle adc cmp sbb adc mov jecxz push mov or hlt sbb push (bad) (bad) cwtl add popf pop jnp stos push adc repz mov xchg pop cmc adc xor imulb xor repnz sub adc pop jge mov ss mov adc in or sub ud1 mov movsl pop fwait add mov pop add pushf int ss (bad) or dec sbb and mov pop xor test adc push add mov mov mov loop adc stos jecxz push cs cmpsl repnz adc adc adc rolb inc xcrypt-cfb cmpsl and (bad) arpl in popa addr16 adc adc sub push pop adc pop jmp dec icebp add je push pop mov pop repz sub icebp test fwait aam and add and rdmsr xor rcl mov push adc push dec xor maskmovq (bad) mov adc cmp sbb jecxz push push xchg push rcll cmpsl ja fwait xchg pusha jns inc into or test js mov adc xchg mov adc popf inc test adc sbb mov push add mov sbb aam add mov xor add cmpsl pop adc mov insb stos add push adc push scas mov popf enter dec jl or adc mov add mov mov mov inc cmpl adc xchg adc (bad) fist jge jmp push dec adc dec inc xlat adc add mov adc and movsl (bad) lods add mov leave pop sub push or sub pop add mov cwtl sbb jge cmpsb adc (bad) jb test push mov mov lock jo add push divb repz aad push sub mov adc adc cli adc cmp adc and adc cmc pushf and out jb adc push xchg ret push ficom or cld (bad) mov in add ljmp stos push xor xor dec mov jg sbb xor mov (bad) rorb test mov push pop jb popa (bad) push mov cmpsb pop xor adc push pop mov adc mov stc mov add sbb jecxz adc mov pushf into xchg ss adc pop lret movsb adc and mov subb repz mov (bad) sub or xchg cmpsl fadd mov adc pop sbb or aam or mov adc pushf push lcall cmpsl sbb sahf adc into add stos lahf adc sbb add add int jne mov mov lcall adcl mov mov movsl xor pop lcall jae test decb xor adc mov mov pop push es test or sbb sbb mov push pusha ret cmpsb push daa push jbe sahf stos imul aam cmc adc lahf add push adc mov sbb test mov pop mov pop mov adc ret aam repnz push or add mov lods repz adc xchg jecxz mov xor dec mov mov xor xchg dec lret cmpsl adc jmp gs mov and push cmpsl out push sbb sbb push mov push in jp or dec loope mov add mov mov adc adc mov add inc and sar mov loope lret adc into cmc std add mov sbb lfs push push out test inc push out adc cmc adc mov pop jg rcll or movl xchg mov or es mov cmpsl add add and addr16 call aam test cmc add xchg mov adc lods and jnp mov inc gs sbb adc lods mov lea add sar mov nop sbb imul adc repz or or ficom stos mov mov adc push or dec xchg adc pop pop jae ficompl cmpsb es sbb pop lods aam lds sbb lods nop sub and add mov cmc cmp adc test add xor inc (bad) xchg inc jae sbb pop addr16 xchg and mov in add mov adc pop lret mov sbb bound jp jo adc sahf fisttp add ret pop es lock xchg mov clc pop flds sahf sbb movsb and ret sbb repnz or mov repnz stc adc mov stos add nop cmp adc lock cmp fs divb sahf pop push jb insb sbb xor mov dec rcl fwait adc jae adc jb push repz xor aam or in push xor jns lcall scas lea push leave mov popf sahf dec inc or or frstor es add inc (bad) push sbb adc ss mov lods insl push adc adc adc repz movsl or add mov adc sbb xor add dec push or xchg xchg sahf xor nop ljmp aam cli (bad) mov mov xchg xor sbb repz fstl xor cmp adc dec ret insl mov mov (bad) and adc pop in adc push pop (bad) push aam dec test cmp jbe mov scas bound lcall add pushf mov add add mov and repnz jbe fcoml cld sub add cmpsb sub psrld inc and cmp in adc inc aam daa mov add loop jmp add jecxz mov and push jo sbb aad inc adc divb lea js stos mov loop adc in xchg data16 scas (bad) jecxz and xchg scas ss adc (bad) xchg adc add sbb pop int sub aam lock into push sbb xor (bad) sbb xchg mov or adc mov out pop dec (bad) icebp subl (bad) lret xor in adc or (bad) out notl mov add sub in pop pop aaa mov sti mov mov push mov xor je add xor and mov mov loope adc cmp incl or cmpsl cli cltd or movsl pop adc out pop in stos mov (bad) sahf or pop xchg mov mov mov ss rcrl into gs lds pop adc cmp adc push sub xor es aas loopne or inc pop cwtl mov mov jb xor push sub xor xchg dec repnz testb rcll adc lcall es mov fild adc leave adc out mov add adc cmpsb cmp add aam pushf mov int3 je cmpsl pop mov sbb idivl push xchg mov pop or dec mov xor scas push lds push iret push inc mov jb or adc sub adc pop clc push repnz dec in add xchg stos sbb test std dec mov sub inc jle repnz jl int3 addr16 xchg or test in dec push or jo cmp repnz adc xor sbb push mov imull mov movsl mov mov adc dec mov or xchg push std mov add adc ret xor repz adc cmp adc push aam sahf mov addr16 out adc sbb add push popf jmp insb sbb insl or pop jne jo arpl cmpsl adc and add out and mov shrl pop mov orl pop test xor lods add xchg test adc nop movsb push xchg add popa cltd mov add and (bad) sbb test loopne or push jg mov mov cmp clc lret pop push dec ret xchg scas repz icebp (bad) leave lret pushf cmp inc or jne daa xchg push adc sub mov add jecxz dec push adc daa add int lds movsb adc adc cs xchg add pop mov adc std mov xor ljmp pop stc inc mov add dec add jmp push dec mov sbb movsl cmpsl imul bound mov adc pop outsb pop pop xchg push mov outsl sbb jg push (bad) mov push mov fsubrl jl mov push pop adc pushl cmp mov mov cmp sbb xor adc xorb inc mov sbb cmpsl sbb mov add or test cmpsl sbb mov out out mov jne or adc mov xchg pop adc sub hlt jge mov mov insb jmp adc loop pop jne mov adc scas in xor cmp mov jecxz into adc inc xor push inc sti adc push xchg (bad) mov jbe xor lret cmp mov imul mov movsb lods mov sete push pop mov mov sbb push adc hlt mov cmp fcomps xor call adc clc pop pop cmp dec push les pop jne mov xor xor fcompl repnz pop inc fbld int adc jl adc adc adc pop int3 lcall es and push movb cmp or mov or mov mov mov xchg cmpsb sub sbb lahf mov aam repz fisubrl adc xchg fistpll lcall sbb dec jecxz mov or insl mov sub mov pop (bad) mov sub jb cwtl test dec testl stc jge movsl sbb or adc pop jb sar push fidivrl dec adc fldl adc jmp sbb push or lahf add daa sbb sahf push je test inc add stos lods mov push mov sbb add sub shrl mov int3 push xor or sar aad inc xchg outsl adc pop clc jns ror mov adc cs iret push repnz or psubq sub sarl pop or pop mov add xor inc scas add out mov repnz sbb mov in in inc inc add adc xchg mov mov add adc mov adc jbe mov or adc mov lea cmpsb mov mov je or xlat mov repnz push popa mov inc add sbb adc pop adc xchg test js fsts adc sbb bound pop mov sbb lret fist mov sbb jle sti adc fldl and mov jbe push repnz push pop lret adc lock inc adc add and mov adc pop or aam mov jecxz xor adc pop popa test in cmp adc (bad) aam adc cwtl sub repnz mov adc daa xchg pop adc lcall mov repnz or push adc stos out inc xchg cli xor and jne sarb mov adc cmp jo pop xchg inc aam push mov mov add mov jle pop inc mov sbb mov pop iret cmpsl mov or add mov and mov (bad) xor insb mov xchg mov cltd adcl adc adc inc add push adc cmp fcomps rcll mov inc jne adc push sahf (bad) (bad) mov (bad) repnz add or das int adc es aam ss repnz adc push call sarb lcall pop push or or mov xor add jmp or and repz mov cmpsl insb cltd mov mov lahf cmp adc xchg push fiadd int cmp mov sbb cmc adc pushf call dec cmp jns mov repz cmp out mov (bad) jecxz add inc rorb push ficoml adc jp pop sarb in sti std and leave or push adc push aas rcrl stc xlat or movsb adc and jb cmpsl fstl cltd or mov negb add adc push shll push mov mov out adc mov mov into pop outsb dec xchg repz mov or sbb shl push std xchg test mov ret xchg mov pop aas (bad) adc push outsb pop imul out test int3 mov test jmp enter mov outsl ret or popf lds cmp adc or xor push push mov mov sbb test das mov xor mov push jl sysret add mov dec or adc mov jbe mov add or jge loopne ss and mov mov sti push pop mov adc sbb fcmovu cmp jp inc sbb push ret je notb jecxz inc enter loopne daa popf and movsl mov xchg negb ficoml ljmp xchg das jge dec mov mov insb scas xor push or mov pop mov ss (bad) add (bad) sbb adc mov imul mov sub outsb mov pop fimull lcall dec xchg adc outsb push cmp push adc xorl sbb and cmp pop and cli jecxz xlat push mov hlt dec and in out movsb mov fucomp xor outsl pop mov push push add dec mov mov rolb inc mov mov push mov add adc mov adc cmpsl insl xor movlps mov jae out dec push push mov pop negb mov repz in adc adc xchg sbb aas rcrl lret add inc xor cmp mov adc xor movsl repz add pop adc add adc push stos mov adc push mov pop cltd adc fnsave movsb xor dec (bad) pop add or mov cmp adc push rcll in sbb pop pushf out mov inc push xchg dec adc adc push loopne add add mov jo mov icebp ss adc mov shlb add xlat hlt lahf adc ja cmp sbb adc push adc pop xorl mov mov scas add add xchg adc adc or sbb pop xor insl fwait adc pushf adc xchg pushf add lods pusha in xor push sub cmp adc rolb mov mov pop sub add adc jo dec push (bad) xor pop cwtl sbb mov xchg adc push sbb cmc mov adc (bad) mov movsl jo add mov pop test add add mov in jge add lret (bad) iret faddl dec mov loopne push xchg pop sbb out lods xchg lret adc ja out sbb sub mov dec push mov xor lds jbe jecxz push rcll aad cmpsl push pop mov daa mov ret adc jns add and push adc sahf cmp sbb add xor adc sbb fsubrs adc out push int3 repz hlt add sub cltd dec cmp sub lock loop mov mov in or loopne sbb pushf jecxz push xor adc pop and push (bad) jecxz push aad push lock repnz add mov das mov (bad) or pop addr16 mov stos mov fmuls or add mov mov mov repz mov sbb rorl (bad) nop adc sti push push mov mov add dec adc movsb cmp push mov inc jne mov adc xor imul inc push jne iret faddl jp lret inc adc mov mov xchg arpl sbb mov sbb and orl or xor imul pop push jge jg jmp jbe ret jne and xor inc stos xor adc lea fwait adc mov add fsub xchg loopne jmp jnp dec das mov je mov pop mov inc imul mov add mov call xchg jne inc adc scas or std arpl sub and cmpsl test adc andb mov nop adc adc mov dec test je (bad) jno jecxz pushf rcrb jnp adc cltd lock mov (bad) addr16 inc push test popa cmp daa scas mov outsl inc or int3 ret shrl adc (bad) mov cmp cmpsl mov insl jae (bad) adc clc (bad) jmp add std xchg dec dec (bad) xor out pop adc push stos xchg clc adc adc lcall adc lahf adc sbb sahf adc aas mov icebp scas (bad) repz push xchg mov sub dec lret xor mov jmp cli or sbb hlt mov adc push or jecxz adc mov pop mov xchg mov mov add xchg pop jno xchg lods jecxz adc es adcl lods mov repz sub push test add mov (bad) iret dec cwtl hlt mov insb cmp fcmovnbe push mov hlt jmp (bad) xor out adc mov xchg bound sub nop mov xor scas pcmpeqw lods jp (bad) lret gs mov jmp pusha or mov (bad) pop adc mov and mov scas insb pushf psllq mov imul fsubrl cmpsl mov push fwait sbb mov push inc mov (bad) leave imul mov adc push mov mov mov xor mov adc push mov push repz mov icebp mov mov mov xchg pop mov mov aas andl cld stc dec (bad) iret mov push cli mov lcall fisttp (bad) (bad) or pop xlat popf adc fnop pop repnz mov (bad) js add pop in loope push popf aad ja int dec loop out ffree in fs fcomps out stos push sbb pushf lret cmp adc jmp jbe or adc hlt std dec ret iret in jno xchg (bad) out shr dec mov in stos divl sub lahf das lds adc lods xor mov or repz pop call (bad) cmc xchg out mov fnstcw lcall push lahf or add ds sbb arpl adc int3 push bnd or lret cld icebp pop iret popf (bad) push xlat or mov or or sub aam (bad) repz out outsb mov adc cmc sbb or add pop and mov inc mov (bad) dec mov loope sbb pop out xor fstp jmp ljmp cmc pop lret (bad) popa popf clc sbb adc es mov ret jne outsl adc pusha loopw lds push bound mov testb mov scas rolb mov out push (bad) imul into adc call (bad) outsb shrb mov adc call (bad) data16 ret rolb in cld jmp jno mov dec cmp aas cli jb or fidivl jnp pop mov rcrb enter fcmovbe (bad) je jno aam ja ror shr or push inc or (bad) (bad) clc jbe aam push jle mov mov push stos enter lock dec vpavgw loop fimul add cmc jno ror repz xchg sbb or mov jo jg fadd fucom jp push dec in cmp imul rcr sub jl clc (bad) fnsave out pusha jle bswap jnp adc rcr sar mov jp pop lcall push loop in fxch out jbe ret fiaddl cld loope pop fisttp repz loop out pop or fldt or scas dec shlb repz or xchg imul lret in or (bad) je lock fcmovne (bad) stos jle inc add in dec iret adc lods mov jno jmp (bad) sbb pop mul icebp pop mov mov or in pop into fbstp add rcl (bad) testb mov adc rorl pusha ja xor vcvttpd2dq inc pop pop jne or adc or (bad) jno dec call out js lds imul call adc lea pop jae rcll movsl push rcr jmp ret ret fist adc ds xor (bad) repz cmp (bad) bound pop ror jo adc fst (bad) jbe push pop repz pop jge loope popf pop push adc push es arpl shr outsb rolb push in adc faddp clc data16 push adc sarl shll lods (bad) adc int in popf enter push imul push outsb jg pop into jo loop (bad) out insb mov push imul and push cwtl adc (bad) jo fstpl ficomp jno ret clc push iret pop mov jle (bad) rcrl (bad) rolb cwtl push imul push jp xor pusha hlt adc aam imul lret jl sbb je mov fcmovu fsin stos jle inc add in ror fucomip stos imul hlt fmul fstps lods adc jl lds repnz adc mov in dec mov xor or push iret int push leave mov lea mov lret cli sbb adc sub in fsubrs push scas mov push rcrb pop mov in sbb iret nop aam push (bad) adc xor or pusha fisttpll fisubr repnz jg pushf cmp push jns adc mov and sbb (bad) stos adc jp jno stos jle ret (bad) mov inc adc ret popf ljmp insb adc popf imull movsb mov stos sub mov xchg pop sub push push outsb into lret pushf push add hlt enter inc fidiv cmp sbb mov jno (bad) aam dec rcrl movsl xor fcomi lahf jno add mov xor mov addr16 call xlat dec (bad) outsb jnp fsubrl sbb push add adc cmp insl popf push mov stc pop adc pop and push xchg jne roll aam lock aaa pop test test and adcb adc xor pop adc test push stos adc dec (bad) sub data16 imul repz or ja dec sbb cld or sub adc mov popa cwtl mov test mov sbb adcb adc push dec dec stos adc push jae lock jne sahf mov insb mov pop xchg fwait shlb mov movsl pop cld (bad) pop loop and mov mov pop lahf aam xchg mov rolb cld pop test dec cmp cmp sub xchg or or stos push lods xor mov push cmp cmp out pop (bad) pop or sbb (bad) pop or cld lods adc jmp lock adc xor jb dec pop mov mov lret ficom pushf adc dec in std sub and lret cmp push lahf fisubl cwtl es adc std mov movsb adc cmp sbb pop pusha aaa pop mov xchg mov cmp mov adc mov xlat cmc jmp adc dec adc and dec dec insb clc adc adc adc sub les adc andb pop cmpsl enter popf aam (bad) xchg fs push push les ret sub inc adc push rcll cmp notb jno jnp pop xchg jl push or scas js ds flds (bad) dec leave movsb (bad) jb es mov push pushf fistp out xor mov sbb call sar std das jne gs adc rcl in adc fmuls jne jne jns rol movsl push inc adc ret sarb mov call or xor stos cmp in jecxz dec xlat leave out jae sarl or int3 repz in pop daa mov mov lods lcall rcr xchg (bad) or adc pop push out idiv push push repz mov std sbb mov rcrb jmp ret (bad) jmp outsb (bad) adc sub push jne,pt mov and or arpl icebp fs les pop cld out pop fisttp insb adc lea loope idivl mov mov adc pushf (bad) out adc pop loop jmp js repnz pop hlt ljmp les dec fbld add ljmp push jge sar push ret aad addr16 mov inc push pushf adc or adc iret loope shr leave aam mov push pop add adc loope (bad) out ljmp jmp addr16 pop in out inc mov in sbb xchg lret rolb mov rcll adc lret push ja int dec (bad) repnz testl inc add pextrw je lret sbb push lcall dec mov mov pop call and test xor enter cmovl (bad) push jns (bad) pop mul cmc pop sbb dec (bad) repnz dec rcl pusha pmullw mov clc loop pop or adc (bad) jmp repz out in (bad) in pusha pmullw mov loopne adc int ja push lret or xchg dec adc enter xchg jns (bad) out repnz dec jge or in ss iret (bad) addr16 lock pushf (bad) fdivrp add fcmovnbe push pop in loop pop sbb adc adc lret repnz mov int ja mov jecxz adc jmp dec hlt mov repz (bad) loop jo push adc in loopne shrb out dec jmp adc adc or test repz stc je lret fmull adc adc adc sub (bad) xor xchg push adc adcb insb adc add adc clc adc cmp mov adc push mov push or push xchg adc mov add jmp clc adc lods or arpl sub mov add clc lcall push inc mov adc sbb sbb pop jnp sti add add xchg in adc and push adc jo add add push add outsb add and push dec dec test push or push rorb adc push sbb sbb pop cli sbb sbb push test sub das (bad) mov sbb pop cmp ja fcoms jne adc push and inc or mov add mov mov pop adc inc int push icebp out adc jne adc mov scas xlat adc adc in or mov or dec mov xor sbb movsb cltd mov stc push push idiv mov or and push jge sbb jmp add or inc dec push (bad) mov rorb aam or xchg (bad) or mov mov push cwtl cmpsb adc adc rorl fildl fidivrl add add ja mov push mov cmp repz add mov dec mov rorb xchg push repnz adc push mov adc add out push data16 cmp adc push jno out sbb in adc mov fldenv and adc aaa add cwtl xor test mov adc inc cmpsl adc dec jge mov adc scas adc adc adc int3 cli and pop mov mov shrl inc punpcklbw adc adc mov adc fsubrp adc add and pop int3 lods or inc sbb bound adc pop int mov lea mov in mov mov mov cli adc mov cmpsb (bad) adc lods js movb mov cld adc loop or mov fnstenv fmull sub out adc sbb cmp and adc bnd lahf adc adc sub add pop push mov push or mov push ss inc adc push out cmp adc add sbb sub movsb jmp outsb mov sarb lods mov pop sub (bad) adc dec mov xlat adc cs adc or jo or or in or enter push das push or xorb movsb adc jno adc mov bound adc adc jl div sbb ret adc mov fwait add lds sti repz jp xchg sbb pop adc repz stos xchg inc imul lea mov or push call add scas sbb test add push cmpsb dec adc lcall insl adc outsl lock je inc in inc outsb inc out dec pusha push push ljmp pop in mov push aam dec (bad) dec arpl jbe (bad) dec push adc xchg fs in and adc adc insb lock je mov add mov xchg je lcall mov mov lea mov repnz xchg jp adc pop xchg mov mov xchg xor stos out sub je push insb (bad) lods or stos mov xchg repz cs scas lahf in sahf push pop adc mov je lcall lahf sub mov fwait xor mov xchg test test or mov mov xchg adc xorl scas lods mov lods jecxz (bad) mov xchg sbb push xorl pop add repnz mov xchg in xchg js fcoml rcrb push scas pushf (bad) adc mov xor mov mov stos (bad) mov push ss adc mov adc dec decl dec adc negl jbe adc insb pop in pop jbe notb sbb adc push mov add push adc push fs testl ret mov jle lcall adc sbb fistpl stc push jl adc jnp cmp shr adc pop lcall inc jl inc mov incl jp adc push lock je mov repz call push jbe int3 repz incb inc stc xor icebp inc notb insb adc xchg adc fs rclb call adc inc jle or push out icebp fs cld lcall push out push cmp pop push adc je adc adc inc std inc jbe adc mov inc insb xchg adc mov pop adc or mov loop jb adc popf cmp xchg out push push adc jb lock pop je xchg out sbb pop pop jp xchg push jbe adc dec sub cwtl adcl add mov push jl pop inc adc jmp ljmp adc in dec cwtl outsb adc pop data16 xchg fs in pop mov dec push jb adc clc sbb pop push adc jle push push jb lock pop adc or xor bound or std dec jle (bad) push pop adc push fidivrl mov sub ljmp jne (bad) mov aaa push jp fildl in push jbe notb sbb sbb insb adc push fs dec adc adc add push adc pushf jmp mov adc adc adc adc scas adc adc fcoml inc cmp mov adc mov stos adc adc push out adc xchg adc and adc adc and test adc adc xchg adc adc mov adcl adc xchg adc dec pop adc mov movsl adc pop adc js adc dec cmp sub jne lods sarb icebp test movsb outsl cvtps2pd ffree adc push xchg scas push sub ljmp adc adc adc out pushf adc adc clc push jl adc pop insb inc ljmp pop mov adc cltd adc push dec adc and mov adc test mov gs adc lock adc dec push jb adc out cmpsl adc (bad) lahf adc adc dec cli cmpsl adc (bad) adc into mov mov adc adc ret pushf cwtl addr16 jmp mov out dec popf adc pusha adc adc dec clc mov mov adc loope addr16 xor lret mov int inc dec jno out pusha adc adc lock sbbl add sbb ljmp adc dec adc xchg adc mov popa cwtl jb xchg sub push or pusha mov dec in xchg adc in adc push ljmp jle sti or and adc loope inc ds mov adc pop sbb repz or (bad) inc mov pushf dec add adc add sbb mov pop movlps mov dec mov mov aam or pop roll cli insb adc sbb sbb and dec out cmpsb or adc lods sbb in mov aas bound adc mov ficoml pop (bad) jp push mov push jmp mov int adc mov movsl pop mov adc xor xchg paddq mov push adc sbb push aaa sbb les push scas sbb push je xor xchg cmp or mov daa nop mov nop or insb mov pop lret (bad) mov or mov repz fdivrs loope (bad) cld adc mov mov adc sti mov add mov mov lret dec enter xchg adc and adc inc add cwtl adc cs lods sbb mov or imul dec (bad) out push adc neg jb pop jo fiaddl fwait dec sbb xchg adc js ds adc movsl adc adc adc adc enter and fisubrl adc adc int daa sbb add adc ss adc repnz inc mov mov xchg in push push enter push or adc xor adc push adc mov or mov mov sbb xchg sub (bad) into out push scas mov cmp lods loope mov dec adc sub inc mov cs scas add and jp adc adc ret mov add push adc cld jge out adc and movsl jge adc sub adc repnz subb adc inc adc int loope mov imul xchg adc push add pusha inc notl daa xor gs or jp cmp out xor cld lret mov lods pop adc cmc sbb stos cltd jecxz ljmp call add mov sbb and xchg enter push aam add insl cmp rsm pop push repz inc mov inc adc mov movlps fwait add in pop adc xor rol ss pop stos cmp push lret popa sbb repz mov push add mov or fimul fwait xchg xor adc (bad) push (bad) icebp dec adc adc or sub mov out adc pushf out repz movzbl adc sbb push ljmp out pop add jmp in ja in lea xor dec call aad pop or neg cmc pop hlt (bad) pop pushf (bad) sar pop loopne loope loop in inc in fucomip daa (bad) or sti cmc push cwtl sar loopne or mov push cmp aam (bad) xor mov add pop scas add pushf add mov sub mov adc pushf sbb mov xor mov sbb mov xlat mov lds push sub mov sbb push je cmp mov xor or mov add pop mov repz mov sub scas in das out mov cmpsb push cmp pushf xlat jno add add or ldmxcsr das adc mov sub mov add pushf or mov adc mov cmp mov adc and cmpsb push sub mov xor pop test mov bswap sbb add push add mov add pop mov xor mov sub negl repz lock push icebp dec adc int xchg sbb pop cmpsb mov fxam pop in jmp loop sub (bad) inc add push mov adc (bad) dec icebp stc dec sbb push iret fstpl cmp adc shll jb dec cld rcll pop adc fstl gs adc int sti inc push lds cli arpl inc adc adc mov jbe aaa adc fcomi pop adc sbb jb std push cli rcrl sbb adc pop push frstor loop jecxz xor icebp repz adc adc int in pop adc adc adc adc fistpll xlat adc push repnz push cmc fmuls popf pop adc dec push (bad) jne adc pop clc (bad) pop (bad) mov int adc in dec xchg in int xor lret mov clc cmp adc push lds test cmpsb adc xlat imul lret (bad) adc dec decl adc adc pop adc mov pop in in mul roll mov adc lret sbb dec push int adc ljmp adc mov sbb adc adc inc hlt lds divb (bad) adc lret out sbb jmp push iret push adc push cli aad adc repnz pop cld fist lcall repnz push sarl out call push adc out ror out dec dec xchg (bad) push ljmp adc adc repnz icebp dec mov int dec xor inc push lds sti and cmpsb std dec xchg dec push xlat cmp push cmp mov aaa push fstp js jmp add hlt adc pop adc pop push fild clc dec out (bad) hlt adc pop dec sbb in push adc sbbl ss add cmpsl adc pop cmp mov cmpsl movsb adc icebp dec dec std push adc xchg adc adc mov adc adc in cli out out jne outsl xchg adc adc je adc adc fstl adc rcll push adc (bad) pop adc rclb les dec sub pop cmp call adc adc sbb pusha cmp dec adc mov adc out dec adc in cltd rclb adc pop adc sbb in fnstcw notb sub pop adc js adc dec cmp sub jne lods adc add mov lret mov adc call inc mov dec mov sub mov adc adc or cld kaddb cmp sbb pop icebp ss loope adc jecxz in pop adc test test add adc fcmovne adc (bad) idiv test arpl lea adc fwait scas mov jnp pop aam mov pop icebp dec jno lods or mov fwait push add adc dec adc ljmp adc (bad) mov xchg adc adc sbb lds (bad) xchg notl ljmp adc adc andl push push repz out adc adc fnop adc dec adc dec cli mov push mov aaa mov xchg adc stos mov push sbb jns ficoml ja push adc sbb jnp inc movsl mov adc sub or jb push sbb clc loop push push adc inc orl sysret add mov mov adc push cmpsb enter lods mov adc scas aam or adc inc outsl ret adc mov scas fcoml push insl push ljmp adc neg jno push push xchg mov xchg sub dec cli or jmp inc mov cltd lds out aam cld adc adc adc inc repnz xor popa mov (bad) dec out adc mov adc or ja xchg test cltd jmp adc adc mov add in pushf mov mov inc or popf mov cwtl adc (bad) xchg push mov int3 add dec adc lea mov add adc stos push stc adc xor sub sub jmp push jle adc jecxz popl adc push adc in push mov cmp jmp push adc adc push push jmp push mov adc sti pushf inc mov sahf lahf scas out adc inc mov lea or xchg ret into in out pop xchg and adc cmp sbb sbb xlat sbb int3 aad cs adc mov add test in push les mov push lret sbb (bad) adc dec call fcmovu out adc adc lods and adc outsl adc mov push adc jle adc or sub add sub sub xor pop push ss adc push and lds fistl pop outsl int3 jmp (bad) rcll add cmp imul mov pushf ss jns adc adc and movsl lods push adc mov adc dec adc scas adcl cmp sbb repnz push aas fidivrl pop adc cmp push add and sub xadd lahf add (bad) lea sbb outsb jns adc lods mov adc mov mov fisubl sub add mov mov mov mov movlps stc mov or ja jl cmc adc adc or pushf push push movsb fwait or movsl popf sbb insl popf or sbb push repz sbb fadds sbb das sbb push fcomi in add cwtl ds adc adc scas data16 add adc pop xor mov nop xor (bad) mov mov mov xor mov cmp aas lahf mov or lcall lahf mov cmp mov sub repz mov mov out add inc xchg fs jge sarb (bad) push push pop jne je jno sub das aad dec jae adc jne push jb rcr je mov shll insl (bad) mov push arpl js sarb jns sbb repz icebp push xor pusha or pop insl fldcw (bad) aam inc xchg lds dec imul dec insl (bad) xor imul insb pop push ret or push js gs inc jp adc ret je insl or outsl aam js daa mov fs popa (bad) bound cmovp enter ret js popa mov bound fbld shlb push jge (bad) jle jae push imul push addr16 jo jg jle jge jl pop jns sbb stos lds dec jnp jle dec jge jo jns push pop jmp jl jmp shrl jne jbe imul out test aaa xchg mov scas push sub mov jbe push adc imul pop push xchg cmpsl xchg dec mov xor inc rolb adc add mov jl sbb test pop adc adc cltd cmpsl adc push and xlat scas adc cmp and sbb mov cmp mov addl xchg push movsl xchg cmp adc cmp adc xchg mov xor mov sub adc andb mov adc repz adc cmpsl add cmp addr16 adc adc adc adc and mov fwait cmpsl lcall or scas xchg sub loope mov into cmpl adc mov mov adc popl cmp lea aam icebp cmpsl adc outsb pop adc xchg mov sub test test mov aaa fwait mov mov push xor jne cmp sbb pusha sbb adc lea push jle sbbl pushf dec xchg pop adc adc mov mov adc adc and and adc adc aad icebp push sub adc fistl in out fistl sbb pop xchg adc jnp pop adc dec inc adc adc xchg adc xchg inc adc sahf adc adc adc jno inc adc adc sub mov test adc cwtl xchg adcl test sbb mov loop adc xchg adc adc and adc lret adc mov cmp movsl (bad) (bad) icebp mov xor aaa sahf xchg scas push sub adcl adcb out sbb adc push xor dec adc xor adc adc adc adc dec rcll adc dec rcll adc dec rcll adc adc adc adc adc addr16 dec adc mov adc rclb adc adc adc popf js cli dec adc jmp cli adc mov inc add adc and popf test cltd push pop adc adc pop sbb rcll notb cli dec adc adc adc pop cmp int adc pop push mov aaa jp mov xor xor dec adc repz adc dec mov mov adc xchg adc adc adc xor dec adc test adc adc rorb adc pop adc adc adc adc mov push sub mov fidivl loopne xchg adc adc enter rclb xchg lea cmpsl mov adc xchg adc cwtl adc cmp cmpsl movsb adc adc adc mov out scas adc cmp cli lds xchg adc adc and mov cmpsl test fsubl popf adc adc out cmp popf adc adc adc cmp adc loopne jne test cmp xor cmp and sub adc adc xor jo cmp dec adc pop adc push jle in cmp adc and aaa inc adc adc rcll cmp dec adc pop xor dec adc sbbl outsb inc adc cmp (bad) notb sub sub adc test adc adc sbb xchg pop ds les adc pop movsb mov out sbb sbb sti mov mov rclb cmpsb add ret add movsb adc adc negl adc imul ss adc pusha push pop inc inc mov nop loope pop loop push bound push pop cmc adc popa (bad) push pop mov add or jecxz daa push dec arpl or pop inc aam aaa cltd (bad) or xor pushf add out push adc cmpsb stc sbb arpl rcrb jg pop mov xchg sti mov inc or mov cli add add or or push rcrb mov adc data16 aaa popf adc sbb in (bad) std inc inc xchg mov pop test adc cmp sbb sbb xor test lea mov adc iret and mov aaa adc pusha into test mov mov or mov push adc inc mov adc adc pushf inc insl adc test or or dec or cltd movsb addr16 jecxz push jge adc sarb cmpsb or jmp add adc adc sub cmc lret sbb cmpsb mov test dec pop adc adc adc sti mov or xchg inc movsl cwtl adc stc pushf push adc adc mov adc mov xchg adc ja xor adc sbb push adc add push aam add push or pushf add and flds add ja adc fild pop scas pop aaa xchg pop in pop loopne pop loop push test dec lea xor adc mov (bad) mov add mov enter dec push fidivl sub push into or pop pop cmp pop aam or add xor cmp mov and and push jnp inc adc push adc adc cmp leave adc jg (bad) adc mov scas lods cmpsb adc adc sub jns dec adc and ds es gs and movsl insl notl cmp add adc pop push notl sub pop addr16 push cmp sub (bad) movsb mov xchg xor and adc push fistp xchg jne and loop push adc cld jp adc adc mov adc adc push push xchg push add mov or push mov xchg adc add repz in popa jge adc adc imul sbb push adc stos jne jmp sarl mov or push adc xlat jns push mov or arpl iret std dec sbb int adc test add xor cmpsl sbb mov in pop mov pop add sbb jle lahf adc cmp cmp popf cwtl sbb pushf xchg add xor mov add xor daa sub or (bad) cmp add cwtl mov sbb adc mov or scas xor pop xor cmp aam mov mov aaa xchg mov adc xchg mov mov mov mov adc or adc mov and mov mov mov mov aaa lea mov xchg movsb (bad) and and xchg movsl xchg mov cmpsb xchg mov adc or adc xchg xor mov das xchg cmpsb (bad) daa test xchg jmp mov adc xchg mov or jmp xor jo lcall mov mov or lahf lods je sub mov cmp mov sub shld mov mov add cltd movsl cwtl and fwait mov nop aas adc mov xor or nop sub xchg cmp push adc xchg and sbb test push xchg imull daa fs (bad) sub adc out popf adc push cmp mov ret enter mov adc adc fisttpl cs icebp mov pop repnz lcall (bad) and xchg lcall xchg mov or adc add sub adc adc push xchg adc adc pop nop or sub sub adc dec cmp pop ss cmp mov or xlat mov adc jne adc push xchg fwait and out adc push sahf in pop insb adc pop adc push adc inc adc sbb cwtl or xor sub adc scas xchg xor sub dec push jmp mov and aam cmp and push int3 sahf mov sbb aam add clc lcall adc sub (bad) adc sbb add mov or xor sbb ljmp je xor xor push nop dec add push sub sbb pop pop adc xchg sbb lcall adc or jmp adc and adc adc jno imul jbe aad jp aad aam stos bound add adc nop call push adc jbe jbe add push xchg push sahf adc sti adc fist jmp and adc adc adc jno inc adc adc jo out (bad) repz mov adc cli adc adc cmp cmp inc xor repnz lcall adc adc adc adc cmpsl sbb dec add cmpb lret rclb aaa (bad) and or cmp mov adc adc adc sub outsb sahf adc push mov incl lcall push mov and adc adc mov adc dec adc pop mov (bad) pop adc test data16 adc mov inc adc test adc addr16 adc adc adc inc sbb cmpsb adc dec adc adc arpl cmp sub enter (bad) in adc adc nop mov adc sub cli adc xchg adc test jl pop aaa dec adc adc mov adc (bad) and nop cmp and and dec cltd adc adc dec adc add sub outsl xchg adc in sahf adc pop and mov test inc lds clc adc adc insl sahf adc sub inc mov shrl test adc xchg rcll cmpsl movsb adc pop cmp int adc cwtl xor movsl sbb arpl in adc sub aas sub adc test js adc adc adc mov mov pop adcl adc cwtl cs ja (bad) pop adc aaa xchg ss adc adc adc adc xchg mov adcb rclb mov lahf adc ja mov xor loope (bad) pop adc adc adc dec jne (bad) lahf adc sub mov push adc mov dec pop adc addr16 mov adc or pop mov push jno push cli jmp popa nop adc mov adc notb push notb push adc lods rolb and mov jnp (bad) out adc stos adc cmp test mov adc push (bad) cmp leave mov adc outsl (bad) adc cmp stc cmp addr16 adc mov adc adc dec mov push or les (bad) pusha adc dec adc testl jb or add rolb mov adc adc adc adc push mov mov cmp adc sub mov or into xchg iret scas rclb adcb fs xor loopne into sub mov xor adc add in sbb rcrb push push mov dec daa adc fwait dec in and inc mov push test cmp add pop mov push mov add mov pop mov int3 jo adc push cmp push adc add cld dec add or popa push add fs jmp lahf and adc repnz xchg call or dec dec adc adc adc sbbl adc xor adc xor push (bad) aaa pop push mov xrelease adc cmpsb or jg xchg bound adc xor fcoms adc adc pushf or incb lahf cld mov lcall test adc fwait jno or add test adc out adc jmp adc dec add aam lods (bad) sti sti mov and cmpsl adc jmp add jmp outsb sbb xchg xor sub adc movl insl adc pop push cmc insl pop adc adc adc ljmp (bad) adc dec jle adc sub adc adc mov mov add repnz adc out sbb fwait adc xor adc mov fbstp nop ret pop mov jnp adc inc adc test out adc jle cld dec adc mov nop sub or dec mov sbb add cmpsb and mov lods xchg pop mov (bad) mov ds and pushf add add fsubl add and es mov or sub adc fnsave jge pop xchg imull (bad) xor in cmp adc out cmp sbb ss test push xor rclb mov outsl adc push mov ds mov push mov mov lods mov insb test dec lea cs js leave adc and sub adc inc or into push adc mov xlat push repz inc mov jp adc mov cli js sub out stos cmp adc jle adc sahf sbb sub mov mov push mov adc mov mov (bad) iret xchg sti dec out adc push iret pushf aam fistl cltd sbb mov adc out addr16 (bad) bound or push in push movswl sbb addr16 fisub lds inc clc sbb jecxz pop cmp adc mov (bad) sbb pcmpeqb sbb adc lcall loop adc add adc mov aas xor mov xor lods adc rsm adc and pop mov mov adc or mov xor mov ss jecxz xor add adc rorl mov xchg mov mov or xor mov getsec adc cwtl adc and add popf and mov rcrl daa push roll je mov add xchg add xchg xchg aam xchg xor stos add movsl mov daa push mov inc xor sbb mov xor in adc xchg add add sbb sbb mov stos and lods (bad) cs sbb mov aaa or sbb cwtl and adc or enter and sbbl pop mov rclb and adc pop xor push mov xor and movsl pop es mov and setge or arpl add das mov std add mov mov (bad) out and movsb (bad) and xchg jle mov aaa xorl mov jecxz das sbb mov adc push push mov bound sbb push mov mov es mov push mov jmp aas shlb mov adc cmp lcall mov adc adc (bad) cmpl repnz mov mov movsb push mov cmp add add xor mov mov pop fsubrl shrb mov xchg pop and mov adc adc adc adc push adc mov adc aas or mov adc movsb sti daa add es mov add stos add add sbb mov xor mov ss mov fdivl cmp adc or add xor mov adc test xor adc cs stos sarb mov adc adc xor add add aas add in add adc dec adc (bad) femms xor out add sbb pop mov adc adc (bad) adc movsb xchg xchg sti sbb adc jne push adc adc adc adc adc adc mov adc and xchg adc xor mov mov sbb adc adc out adc adc push mov adc cli adc adc or cli icebp adc push adc adc adc mov and xchg adc (bad) xor cmp fistpl adc pop dec adc adc fidivl and dec adc adc mov adc jmp xor hlt adc sub adc dec adc pushf (bad) or (bad) scas adc adc adc adc scas adc mov loopne dec dec adc pop adc adc adc push adc out dec adc adc les rclb rcll add add xor jne xchg adc sbb adc adc into pop (bad) adc adc pop adc mov pushf cmp mov add or (bad) mov arpl adc adc mov sub adc mov xlat adc rclb in adc sbb mov xchg adc xlat adc adcb jno js adc pop adc adc lret jecxz sbb rclb (bad) adc adc in (bad) scas adc sbb and daa push mov pop mov push adc mov insl pushf adc adc adc xchg adc adc adc or cmp clc mov pop adc dec mov add adc mov inc cmp repnz or xor cmpsb adc ja loop sub mov adc cld adc adc fidivrl adc sbb adc or adc popf adc push add add sbb and (bad) outsl adc dec or and (bad) outsl adc cmp sub adc lea push ficompl adc adc sbb mov adc mov (bad) int pushf (bad) xor cmpsl nop adc adc stos adc push adc cmp das mov hlt adc cmp cmp stos adc cmc adc xchg adc sbb rclb mov adc aaa adc mov sub adc mov mov cwtl adc adc sbb mov pop adc sbb push xor mov adc adc adc adc mov adc adc (bad) xor pop es or mov xor shrb pop pop mov rolb das pop in addr16 or adc or add ficom ds sbb cli push js inc sbb pop pop add sub mov lea add inc and push out add in mov repz xchg cmovle sbb pcmpgtd add xchg add sbb sbb push jg or stos dec or mov jne lsl imul cs xchg fwait in cmp hlt push adc adc movsb insl sbb (bad) fs xchg addr16 test push jns push stc or repnz add sbb add adc fs inc jle adc xor push mov push cmc adc xchg push movsb outsl adc daa xchg add xchg mov ss and sbb xor push xchg xor adc bound (bad) insl adc test adc cli cmp cltd mov outsl add repz push push sub push mov adc xchg add imul sahf mov jmp mov cmp loope xchg repz std add pushl pop jp sti adc insb adc (bad) insl dec adc stc daa sbb cmp jle cmc cmp idivl dec or aad push adc rcll sbb xlat jo pushf icebp bound adc in xchg cli imul add sbb in jmp adc mov jp adc ljmp jecxz adc mov adc jmp repz xor sbb add xor mov or lds or movl sahf pop clc add hlt push ljmp lahf pop xchg and or sahf add lcall push fdivrl into or pop pop ret sub pop les pop sub or inc insl adc pop dec push (bad) push ss cli adc sub xchg sbb (bad) adc lock add cmp mov push and mov add mov push mov push and pop cmp (bad) adc push adc mov adc pop push push adc jo jp adc xor push adc sbb mov loop push push xchg sbb ds movsb dec out and cld pusha (bad) adc negb cld mov jmp push cwtl mov sahf xchg push lcall movlps scas add flds sti mov jge pop in (bad) rorl (bad) sbb adc mov push call iret popa sbb leave bound test and or mov rcr push fwait xor incb fscale pop in adc mov push add lods pop adc mov adc adc mov mov jno xlat adc xchg mov stos adc adc xchg xchg mov xchg mov mov mov stos add repz scas sbb in orb scas adc stos pop lods mov lods sbb xchg add into fwait and cmpsl sbb es invd mov xor daa mov mov mov xor add cwtl and nop popf sbb pushf mov xor mov xor mov xchg or adc mov xor mov aaa bound repz in and dec mov sbb mov xchg daa (bad) cmpsl push push adc sbb mov es cmpl sbb pushf adc daa inc (bad) push cmp mov push xor (bad) adc xchg sarb push mov add mov xor mov xchg add (bad) xchg nop adc or cmp mov insb and inc mov or mov jmp and push movsl add or pop adc mov negl mov adc add add mov add or sbb mov xor mov test mov aaa or adc ljmp adc xchg push adc adc add adc jg fsubrp xchg adc adc adc mov test push pop fs out movsl test sbb lods xchg loope dec xchg mov xor mov sbb test mov xchg cli mov mov adc rcll loope pop adc xchg jmp mov mov xchg sbb xchg mov js adc mov int adc mov and lsl mov or adcl and add mov mov sub je mov mov push sbb xchg and adc jns pusha mov pop sti mov inc test add or stos adc mov mov adc nop mov lcall jmp push pop rcrb mov push mov stos pop stos sti sbb lea aad jp xlat adc add hlt (bad) mov cmp adc icebp and xchg adc sub adc adc adcl sbb pop and xlat adc out xor js adc sbb mov pop sbb xchg pop pop (bad) adc pop xor mov mov push xchg adc mov inc push adc mov add pop adc lods xchg adc xor push repnz adc test mov lods icebp test addl test in or adc pop adc adc adc adc push pop pop push adc sbb cmpsl adc mov lea mov (bad) sub test test dec into adc cli scas adc mov xchg adc out xchg adc adc out wrmsr cmp adc adc adc inc imul lea les (bad) rclb rcll add adc adc cmpsb sbb rcll lret adc pusha adc sahf adc adc mov mov rcll lret adc adc pop adc adc rclb les dec mov in enter xchg lea leave cmp adc jb notb pusha adc adc rclb add mov jne (bad) mov mov and loop aas adc adc mov aas adc outsl ficoml sbb add out xchg adc pop push adc insb adc adc mov adc cmp pop cmp dec lcall adc adc clc adc adc clc adc adc adc (bad) lods adc adc adc enter adc adc adc test insl (bad) adc ffree adc adc (bad) adc adc lahf mov mov mov mov adc adc (bad) daa adc adc adc hlt cmpsl mov adc adc add mov adc xor sub adc loop jnp (bad) pop adc add pop sub mov adc scas (bad) lea mov in xor test adc or dec xchg mov adc faddl mov loopne pop cld adc mov cmp mov cmpsl in movsl push mov lret or adc mov cwtl adc xchg adc es xchg jnp ficoml lods sbb popf rclb push pop cld adc add scas adc data16 adc and adc adc (bad) int ljmp pushf int in adc adc inc aaa or fadds pop xchg adc adc adc adc adc or mov mov roll xor inc les jmp push mov lods push adc adc lcall loop adc mov adc test add add pushf imul xchg cmp mov xchg mov dec xor and loope pop pop adc pop xchg or push mov pop push mov or std sti cmp sbb sbb int je shlb adc inc arpl and movsb sbb pop popf sub inc or (bad) jecxz cmp pop push jnp sbb fmuls data16 dec xor add mov adc dec cld adc push out inc adc mov mov repz jbe push (bad) (bad) add jge xor xchg cmp sbb repz aad cmc push or mov jl mov (bad) adc xchg sub jno popf cltd ficoml jmp adc push adc (bad) int3 mov jle adc lock xchg idivb (bad) adc pop push mov mov cwtl add popf cltd sbb xchg xchg lcall mov adc mov int push movsb mov push adc jmp add in js push jecxz inc push adc sbb aas and adc xor jmp int3 adc pop adc mov push jmp fldcw cmc (bad) adc icebp out repz repz push loopne add std data16 fwait (bad) sti push adc jns adc mov push mov push cmc jle adc adc sbb pop inc fwait or and xchg sub mov fbld adc add dec leave push push lret mov notb push bnd hlt push push lock cwtl xor test pop xchg les xchg mov mov pop test lret enter mov fcompl pop sub pushf and es push sarb ds push cmp mov and cmp or inc jns adc and adc fstl ss adc sbb push xor jno es inc dec sub xor mov and sbb sub pushf into xor scas dec adc imul test or add push adc adc mov test sbb xchg or push add lret lahf add lock cmpsb test jle adc in lods les dec mov rclb adc test movsb es adc xchg test adc or sti popa jle adc outsb add cmpxchg add push subb adc inc jecxz or imul push xchg sub jge (bad) xor ret out inc adc scas sub lea sbb out adc sbb mov dec adc xor or mov adc inc out mov dec adc enter (bad) in push aam fcmovbe pop out fsubs inc (bad) loopne inc loope incb psubd hlt xchg inc notl inc jecxz loop loope fsubp pop out in in mov push push into and or inc in or out fstps pushf xlat adc stc push clc (bad) not push repnz push in xor push out sub or shl aam cli adc push clc (bad) pop (bad) mov std inc cld shrl clc adc stc push cli xlat pop nop sbb adc (bad) std inc repnz icebp inc lock ljmp inc out stc add ret sti inc pushf repnz inc lock pop neg mov push hlt shll dec lock adc inc repnz cmc inc hlt fisttpl push neg xchg push adc or ljmp out loop shl push cld mov push (bad) mov repz pushf ljmp pop out fnsave mov dec call ljmp pop out fldenv inc sub cmove (bad) inc push sar cli in sti and sub or ret jmp inc loop jecxz loopne loope out fucom push in stos push add out loopne leave loope fcoms divb sub push std push sbb adc push in or jmp mov lock push ljmp mov loopne pop pop adc adc adc cli adc adc and pop jl cmp dec in enter xchg adc adc in aad inc rcl adc adc (bad) out jbe aaa adc pop fsubs dec push adc push push shl adc shrb out stc fidiv fimull rcll lock out inc adc adc rolb fdiv push cmc shr mov jne adc cmpsl lret cli push adc push push (bad) jb xchg pop jl rcll (bad) adc push sbb adc ljmp (bad) pop dec mov repnz shr push sbb jnp adc inc sbb mov popf fcomps (bad) xor les xabort stc ret adc (bad) repnz or enter adc call out jecxz sub mov jmp ljmp out fsubr inc dec incl fidivrl aas adc out clc loope orps (bad) mov loope loop sti add in out and dec sub clc push mov (bad) lcall inc push sar adc push mov fadd out (bad) pop in fdivs aad jp aad xchg sbb mov (bad) adc rclb adcl arpl xor adc xor ret xchg add fisttpl add clc shlb adc adc cs and jno inc adc adc jo out (bad) repz rclb adc cli adc adc repnz cli icebp adc push adc adc dec push enter stos adc adc cmp sti push aas adc inc sbb stos adc push mov push push shlb adc imul fcmovbe adc fisub inc sarb rcl mov mov adc dec testl sbb out adc adc adc adc fwait adc push notl fadd adc lock loope jl,pt mov adc mov stc adc mov adc adc adc fdiv cld inc std rcrb adc adc lock adc pop loope into xchg adc pop adc loop adc pop sub sub adc adc adc rclb in adc adc jnp xchg adc adc adc adc icebp shr out rclb adc adc rcll adc pop cmp xor call dec adc loopne aad dec push repnz inc adc cmpsl adc jno mov adc imulb push mov push push shlb (bad) in adc adc notb (bad) in adc adc inc test jp xlat (bad) adc xchg adc lea push adc xchg adc add dec pop adc adc adc fwait clc xchg out fwait adc adc adc (bad) dec adc dec jl cmpsl bound ja adc enter adc adc adc adc mov jb addr16 adc adc cmp ja adc ja adc adc rclb pusha xchg adc adc adc adc adc lea mov adc test adc mov pop les pop mov insl pop adc adc adc adc test sbb notb and adc adc adc adc lret out adc adc adc adc adc adc push pop ret sarb adc adc adc (bad) mov push jne ljmp adc rclb in adc rclb adc adc rcrb xchg adc rclb adc out jmp pop adc adc adc dec adc adc push mov ss cld adc pop cld adc adc adc inc in adc in nop adc loope out jnp rolb mov ja adc adc rclb adcl adc test frstor adc adc enter fsubr push mov test fisttpll popf adc adc outsl mov adc fiaddl adc inc mov pusha mov inc inc adc adc sub adc adc push pop adc xchg adc dec adc xor aam jp mov adc sbb pop inc adc inc jnp cli in adc adc enter jnp ja adc iret adc inc inc sub mov pop mov pop cltd adc jg pop cmp ljmp adc inc loopne movsb mov adc pop repz sbb adc adc adc rclb (bad) adc or or adc or mov aam dec jecxz and adc test fwait xor mov or mov push (bad) mov adc lahf cmp sahf mov femms fcoml lea pop xchg push notl adc adc adc adc or cwtl insl push dec pop adc push jns push mov aam xchg es push and sbb lods sbb stc insl mov (bad) std adc fs inc push pop mov or mov pop add jp adc (bad) adc adc jbe jmp xchg push movlps loop push icebp repz mov stos mov ss add push sbb ja pop push add ds sti push cmpsl shl or in fwait or mov hlt push mov dec or jne sub sbb push jg add sti adc mov mov daa repnz mov lods or xchg mov test adc xor xlat jmp jg add push adc push enter adc or inc mov movsb mov sbb mov (bad) xchg sub aam (bad) adc pop add xor pop and int push pop add roll (bad) clc push adc jo testb test in test (bad) and pop adcb xchg ret into add cmpsb add movsb add mov aam and mov mov (bad) sbb and nop and pop les pop xor mov add xor sbb sub adc ret mov aas adc dec adc icebp fcomi sub notl or and ja and push mov ds xchg add adc xchg adc or cmp repz dec jle adc repnz mov and adc sbb adc and and mov test pop cmp jmp fstl je stos adc loope mov leave mov out xor call adc ljmp jns (bad) push lock mov xchg push adc cs adc mov mov sbb sbb xor mov xchg fstl xor adc mov sbb shl ret arpl fnstsw mov sbb add or insl adc push mov or push mov push (bad) icebp inc add xor push jns (bad) cli adc adc cmpsb sbb mov push or mov daa push lea or adc pop sub adc add repnz sub daa sbb fwait nop/reserved cltd je pop xor cmp and mov sbb mov adc xchg inc sbb nop aaa nop repnz das ud2 xorb adc xchg sbb xor or mov or aas mov mov mov or jecxz or out ss ret cmp or adc xchg cmp cmp cmp aas xchg or popf mov cmp sub adc sahf sub sub mov sbb mov popf sbb daa adc repz in (bad) jo xchg sbb pushf xchg add or cs mov add add mov and pushf sub nop adc xchg sub sub sub push test or aam rclb mov and mov sahf sub das cmp add sbb movsl sbb js into lret test pop sbb daa push aas nop mov jne popf lea sbb fwait inc xchg and mov xchg push lea xor adc sbb cltd adc aaa or mov mov sbb adc adc push repnz xchg jno inc jnp xchg adc jnp sbb mov lahf das stos xchg (bad) wrmsr lea dec add test mov (bad) lea xchg inc adc fldl adc das sbb popf xor mov jmp fwait and orl mov sbb test leave ja mov adc pop push popf jb hlt adc ss aaa sbb xor ljmp push xor adc and adc adc xchg mov pop cmp lds fstl fstl cmp es and adc lahf dec loope orl and test adc cvttps2pi mov or or or aas adc sub adc sbb jnp adc sub (bad) aaa push lea or jmp push test pop adc and sub adc adc adc es daa sbb xchg and adc adc mov xor xlat cmp cmp adc adc adc pop adc add cli xchg adc jo adc test adc adc sbb insl std adc mov test adc sbb adc adc adc or mov or adc cmp cmp jmp (bad) push adc clc adc adc adc ficoml sbb pop or adc adc add test xchg xor mov jbe push lea xchg or mov adc adc adc pop push popf fs inc adc adc or or xchg (bad) adc adc mov stc adc out lahf hlt adc mov adcb xor and mov adc cmp loop mov dec cmp adc data16 adc cmp adc js adc dec adc adc dec adc adc das sbb adc adc adc pusha adc out sbb push adc lret xchg adc add and ljmp adc ljmp adc adc sbb adc adc adc adc adc adc adc adc adc lea push adc sub adc negl adc adc pushf loopne push adc in (bad) adc adc sbb leave dec adc lret inc adc in adc ficom pop jbe and mov fcomp adc adc mov adc cmp pop sbb rcll bound push cmpsl push adc adc push adc adc rclb mov jb (bad) adc (bad) adc gs adc das sub mov es adc adc popf mov adc adc adc pop lahf push aaa in adc adc dec adc icebp xor roll jbe push adc adc roll jbe mov ss adc adc pop adc push pop cwtl adc adc cmpsb rcll and (bad) mov lea and and push adc stos adc ja mov dec ret dec adc in adc aaa outsb popa adc movsb inc mov rcll stos adc adc adc out aam fiaddl mov mov test repnz adc rclb fsts xor mov scas adc adc scas adc pop stc adc adc popf cmp pop adc adc les fmuls push cmp fcoml mov in and mov loope out cmp adc or adc rclb popf and adc pop adc adc mov mov pop cmp adc adc dec pop adc adc lds xchg adc adc lahf cmpsb adcb adc mov jno (bad) adc dec popf adc sbb andl sub lcall fisttpl data16 adc and push lahf adc mov adc adc adc adc and int inc bound dec adc sub pop and rcrb and (bad) movhps mov sbb popf xor adc pop mov mov adc adc lahf adc adc adc hlt pop adc adc jg pop out jmp das xchg adc inc fidivrl bound dec or push xor adc push lea adc adc mov or ljmp mov pop xchg sbb pop mov push or or adc lcall pusha jnp xchg adc mov mov pop fs push scas pop nop je push sbb sbb and adc adc inc push pop or or adc mov sbb cli loop adc mov test adc imul call outsl xor scas adc xchg xor push adc add adc mov dec pop adc or inc ret or iretw push sub jne repnz push or adc add dec sbb inc adc sbb xor pop adc mov xor fidivl pop push addr16 add stos sbb repz add cmp add mov mov push sub push out imul mov insb sbb es test mov xchg sbb xchg push push popa (bad) sbb adc insl sbb ret sbb xchg xchg adc dec cli push fdivs adc pop mov lea lods stos adc mov movsl add repnz and pop sbb sbb sub lods repz repz add cmp fcmovbe sbb sbb scas mov outsb xchg call xchg cli cltd xchg xchg and lcall test push adc lods add test enter adc stos mov push fcoml lods sti scas adcl xchg adc out mov adc jp add sub cmp push sub fstl addl scas in adc lcall push ret xchg sub and add clc adc cmp add ds imul push adc loopne adc cld pushf adc cmp pushf into pop adc and inc aam cs scas repz xchg scas push adc jno dec adc mov jecxz adc adc xor adc stos adc loope jle push push adc add cmp adc in mov (bad) pusha add lock scas jmp mov fwait adc mov adc adc or adc lods mov add aam sbb sbb sti xor jecxz or jge fisttpl rorl mov or fnsave sti fildl push adc pop in repz mov or setge adc add pop clc push (bad) sbb adc cmp mov xor sbb jecxz xchg inc repnz inc adc add xchg mov jmp adc pop jmp fdiv hlt pop cmc fdivr pop decl shl pop jecxz in repz fsubrp pop (bad) or (bad) hlt push repz lock aam int3 xchg dec adc repnz cmc (bad) hlt pop xor fnop pop icebp (bad) xorps aam mov inc movlps cld int dec out sub aad data16 stos roll (bad) mov stc dec clc xlat jmp cli aad out or add jmp out or leavew adc pop and adc adc js and adc push fdivp (bad) je movsl adc outsb adc cmc pop neg mov pop mov dec cmc push dec pushl ror adc and fsub out in or add pop int3 inc adc sub nop mov roll les notl fwait adc icebp pop sbb gs lods xchg nop mov push pop adc ficom sbb inc fdivr aam lret out add sbb adc jg lahf (bad) hlt cmc adc mov les adc adc out xor int3 loope jmp adc push into cld ret in les fsubr pop fs (bad) mov lcall lret push pop adc push (bad) out mov stc int3 clc dec sti cmp rclb jmp adc sbb adc adc adc adc adc adc je push les rolb dec cld dec std repnz loop out adc std sar push sti rcrb clc adc adcl push (bad) stos adc mov (bad) rcrb mov pop repz adc adc int3 scas dec jecxz loop mov dec or dec add lret dec in out xchg mov ret mov in dec mov pop push mov aas adc dec stos adc icebp add pusha sbb mov je adc pop pop (bad) pop out in adc adc adc push fimul cmp adc adc adc in dec in int3 repnz (bad) lret inc adc adc adc jmp adcl pop adc adc loopne adc xor adc sbb stos adc adc adc adc out stos adc adc jbe jle loope inc push aas adc adc loopne add pop sbb rcrb in data16 notl adc cwtl xchg cmp xlat dec adc pop and dec pop insb adc adc adc add jne push pop fistl cli lret adc dec push int3 jnp out rcll inc adc popl pop xor adc sbb notb gs adc mov xchg notl cmp push into hlt adc pop adc adc out in jb adc (bad) hlt adc pop adc adc adc adc cmp in out jnp jmp push les push dec loopne or dec sti lret and adc int ror adc repnz (bad) insb adc dec adc adc xchg testl adc or adc clc adc icebp adc adc lcall inc cmc adc xor sub jecxz jmp call adc adc jne popl rcll adc out lret push (bad) notb mov das cld mov pop adc dec push adc adc adc jg pusha mov mov and bound sub sbb arpl push adc adc adc (bad) dec adc adc xor (bad) pop cmp jne notb xchg jge ja adcl and ja loop mov test dec cld adc adc adc adc adc adc adc aad pop sbb dec negl into dec adc jl scas orl mov adc les cwtl rclb jle adc imul inc push les test adc es adc addr16 adc mov xor mov mov mov adc push adc loopne push adc xlat adc jnp mov adc adc mov mov neg jbe adc adc adc fist loope cs adc adc mov ja adc adc rclb add fist and ljmp inc adc adc xchg adc (bad) adc adc adc jge xchg adc adc sub push adc mov adc adc inc adc sub test addr16 adc adc adc pop lahf adc insl sbb inc stos adc xchg adc fcoms inc adc adc dec in shr jmp bound loopne push jb adc leave ret notb push gs xchg adc in adc xchg adc dec daa adc mov push adc cwtl adc push adc lret adc adc adc sbb adc push hlt adc adc adc adc out adc adc insb adc adc jne clc adc mov jne aaa adc sub mov pusha mov inc adc and insb adc adc adc inc adc adc les adc adc adc notb scas adc adc pop cmpsl adc lahf adc notb out std push adc adc adc adc cli repnz sub mov add rclb bound cmp cli pusha adc adc out aad adc adc adc adc jmp popa nop adc inc out enter cld adc adc adc adc pop jo push adc rcl mov lret adc dec inc adc lret pop nop adc adc inc adc adc pushf inc adc adc adc fnsave adc adc jno inc adc pop dec sub cmp adc push pushf xlat fcoml adc inc adc lret leave dec adc jmp pop push xor pusha adc adc rclb out stos adc std adc rclb fistl mov enter adc add les cmc mov adc cmp in or add std push push test mov adc adc adc adc push out mov xchg xor mov pop xor int xorb add lcall bound adc in sbb inc xorl add sub adc cltd or or add add mov add sbb dec movsl adc adc jmp lods sbb insl fcoml adc mov adc imul mov repnz sbb aam daa adc stos push int push scas dec adc jmp ret or scas adc push test ret aam adc cmp and (bad) out add mov fadds add mov push push adc jns add repnz xchg pop dec xchg add adc (bad) mov mov leave adc sbb dec xchg mov adc mov arpl adc and sbb ret adc addr16 xor (bad) sbb inc jecxz shl or ret push cmpsb or push or lods fwait adc popa (bad) jo adc add push jp cli adc repz cs int3 sub popl scas mov ficoml inc add je repnz insl shr aam or shlb xlat out jp clc sarb (bad) hlt (bad) jbe mulb insb fucomp fisubr fucomip shlb les bswap push leave sbb mov in aam fisttpll fsubrl lock je repnz rcll or cltd mov xor lfs cmp adc mov mov nop mov popf mov mov xorb subl add mov mov push xorb test mov (bad) lods mov mov scas xchg xor cwtl or sub lea mov xor mov mov mov mov mov aaa sti mov xchg adc xchg mov pushf or and cmpl mov lea xor xchg lods xchg das in scas mov adc xchg cmp mov popf aaa mov sbb adc sahf adc subl test xchg xchg xor setge mov xor loope jmp push (bad) fstps scas adcl insl ret adc and push xor jnp ret sbb push cld fstpl cmp xchg pop adc lock inc mov xchg or adc and or lret decb push out adc mov xlat adc add xchg icebp jnp hlt out mov paddusw ficoml imul fcomps clc stos adc adc jbe test ret icebp call push out mov pop adc jl ret push fdivs jnp (bad) aam mov outsb loop jp loop sbb imul in fucom adc jp sar repnz fdivrl repz lock adc adc jge add adc adc arpl out adc adc adc inc imul js xchg jns clc adc adc adc adc adc in push adc add int3 jnp incb adc adc push cld push adc or call in les xchg imul fcoms adc (bad) aam xlat lock pop je push insl sbb ret sbb fpatan repnz (bad) fdivl repz out adc adc push shlb addl scas adc stos jnp adc add mov insl aaa push out fnstsw sti jnp (bad) hlt adc pop imul adcb out sbb mov adc (bad) icebp jge decb jbe cmp ja jb pop fisubrl adc adc imul es jle adc adc adc adc adc loopne arpl out push sub adc inc jns lock (bad) je bnd pusha and jp clc mov jnp hlt and adc repnz dec sbb adc enter int lret jbe idiv cmp (bad) aad sbb adc xchg adc adc jl in call aaa adc adc xchg adc adc call fnstenv (bad) (bad) mov cwtl adc xlat adc pop inc adc adc int into lods iret out mov pusha aad aam fildl mov int3 imul adc jge (bad) fdivs clc rcr jnp mov jp mov jle adc rclb adcb mov das icebp xor jb adc jg out adc xchg adc dec sbb (bad) loopne sbb sub jb adc (bad) dec adc ss js adc sbb je xor adc mov into push sub ljmp adc pusha adc pop dec adc xchg or (bad) adc pop adcl fiaddl jge aas xchg int (bad) adc sub bound or ja adc push push adc sub adc adc xchg xchg add aas fdivrs adc xchg dec adc push adc adc sub xchg adc cwtl xchg adc jns pop mov fbstp cmp adc cmp xor scas inc adc xlat adc lock lea pop adc adc cli dec adc adc xchg adc push cmp aaa mov adc add loop cltd fistl add cwtl notb adc fidivrl adc (bad) pop out adc dec je jmp adc addr16 adc adc push mov mov xlat add cwtl rclb adc pushf loop loope test repnz hlt pusha adc dec adc adc sbb dec les mov loop jg pusha xchg imull aam mov idivl push repnz adc push adc cmp popf inc adc xor dec lret dec jbe jl test outsb loope push stos fwait lods pusha mov clc (bad) loop mov mov in test jns jns clc test ljmp test pop adc mov cmp dec call adc xchg das and imul test loop inc adc ljmp lods adc adc adc mov (bad) mov out adc mov adc push adc push adc sub fsts inc adc fstl insl add clc pop jbe mov fdecstp call sub ffree adc adc adc adc jp adc adc adc jns lock fcoml lods subl pop lret jne sbb out out (bad) mov out xor dec adc ret sub adc fwait add adc mov mov adc inc cwtl adc out fwait push aaa lret hlt (bad) clc adc cmp mov stos ret or push mov icebp add repz adc (bad) call add (bad) push adc cli sti push in sub cmovbe imul adc (bad) cmc xchg (bad) mov mov (bad) adc xchg popf sbb jmp in int push out (bad) mov push call frstor inc sub out inc out or sti inc incb jmp push (bad) icebp xchg inc repnz inc in adc inc out out inc in in loop loope push loopne rclb jecxz in in inc add loope loopne or sbb pushf rcll push (bad) xor aad push imulb negl xchg aas push pop push decb call mov mov inc clc lds dec cld int std push (bad) sar enter add (bad) inc clc pushf ret push inc imulb xor (bad) out das out pop add xchg std adc (bad) (bad) fbld out xor fprem1 pop repnz icebp push lock notl repz hlt int repz test inc lock pop rolb shr push in aad jecxz out out clc cmpsb sub hlt xlat not push out repnz push in leave (bad) repz jmp inc ljmp mov ret incl or push iret add ret mov push js fs dec xchg or xchg in adc push inc popa (bad) bound outsl icebp push sbb divps inc xchg adc rep pop jae push fsubs push pop testl push outsb push insl loope sbb repnz jmp push adc add popa lret fs insl push lret inc add fistl adc pop (bad) push inc jae adc jo push or adc sbb jbe pop ja jo jg xor call out adc jnp jp stc aad or shl aaa push inc gs loope adc clc (bad) xchg push xchg adc sar pop in push pop inc imul aaa adc dec outsl int shl adc jno call adc push lock loop rcll (bad) ja push fsts jne divb add jb jno xchg add adc adc loopne or adc push add in dec adc mov dec jmp adc nop mul xlat cmp fs repz iret jae adc out (bad) add jae adc adc push test and scas or dec adc adc or lds loopne call adc ret cwtl aaa push xlat dec in mov sbb pop adc add rcll adc shll adc push dec scas adc adc or adc adc push fnstcw out xchg popf sbb dec in xchg aaa sbb pop adc pop (bad) adc adc push adcl (bad) adc adc (bad) or roll jno aaa jb dec or xchg mov pop arpl js in add aad push or jnp jle sbb add rcrl jno je std jnp popa sbb adc js popa push out (bad) ja pop shlb outsl and pop adc cmp ficompl insb inc imul xlat dec imul adc (bad) jbe inc jne je jno adc or jg (bad) adc adc adc icebp jp jg jnp call pop pusha dec outsl rolb adc adc push fxtract adc sbb jnp das adc das adc xlat ret sahf adc adc js adc (bad) jne mov sbb add xor ds adc js adc out jne out adc push xlat dec adc push adc inc adc jo (bad) adc adc (bad) (bad) insb inc mov into jbe (bad) loop jb adc (bad) outsl fnsave jae imul xchg sbb jg push imul or (bad) jns push or or gs jg adc inc popa fisub sarb inc jecxz adc pop frstor fistl adc adc adc out adc pop out adc push pop test lahf jns xchg lret ljmp popa out pop jecxz adc pusha pop (bad) jnp adc out inc push sti adc aad sub adc push pop jmp notb test rclb xor adc adc mov adc fptan push adc adc pop cld aad adc xchg inc (bad) lret and push loope adc sbb pop out lahf divb cmp dec push adc into int add sarb mov mov adc sbb push mov repz mov adc lock adc mov or into adc xor mov sbb ffree adc adcb rclb push (bad) adc rclb adc adc pushf adc mov int adc mov adc enter cmc push adc adc ljmp jge loop jns adc jge adc popa fdivrs jnp adc dec gs jle imul or enter iret js out xchg adc jp or sbb pop or loopne adc add adc adc fisubrl fldl2e rclb jbe insl fisttpl adc pop leave push adc or outsb dec outsl sbb adc pop fwait adc adcb push jae je adc mov js adc mov mov xchg or adc outsl cmp cli adc scas adc cmp lret mov adcl adc ja notb div cmp adc in insl xchg adc sbb test dec cli adc adc jne adc pop mov xchg imul adc (bad) jb js sbb or (bad) jmp and dec jmp (bad) (bad) negl negl adc or lds out lret xor sub mov rol adc adc or out ja addr16 insl ficoml ret rclb adc dec adc leave cmp cmp adc adc adc imul adc adc rclb arpl ja outsl hlt adc in test lret fsts adc mov inc adc mov negl div inc cwtl or pop out out adc or (bad) test out fnsave pop jb adc xchg adc adc xlat jns adc push nop push or imul pop pop out push repnz cmp mov adc adc jle jge add arpl clc push push adc adc out or mov dec mov pop adc frstor arpl adc jns adc xchg adc loope loop sub out iret adc pop aaa fnsave mulb inc dec adc dec icebp jmp pop testl pop jle sbb cmp aaa push icebp je inc push sbb popa ficomp fistl xor gs out cld adc (bad) adc adc adc adc adc fsubs adc push push adc into insb adc dec imul adc test add dec xchg dec add out insb pop fs dec push scas sbbl dec adc sbb (bad) dec adc dec or mov (bad) or adc pop sbb lret mov or int dec mov sbb notb ja lret fsubs call adc push mov xor ds in dec arpl push pop repz jge in add pop testl adc loope jle pop imul gs sti add mov pushf mov cli (bad) pop cmc mov test cmp jnp icebp mov in lea rclb dec arpl in gs out mov dec out dec repz clc gs cmovle dec adc jmp inc ja jl mov repz mov dec adc jno pop pusha jae sbb adc jns loopne arpl sbb xor jnp push adc imul inc out jne push jecxz push push add mov pop dec pop adc lock (bad) pop jnp pop in push ja push lock jae sbb inc cmc inc jne pop idiv push arpl jecxz jnp adc push notb pop adc rclb push add ficoml xchg inc loope push adc nop out in outsl scas adcb dec in gs pop hlt dec jne dec push xchg push lock pop jne (bad) dec pop jno stc inc outsl mov push push adc cld adc jmp pop arpl pop and xchg adc cmp dec jge dec sbb gs rclb lock not inc negb stc jb call push push adc dec int pop inc push jb push lock in out jb cld adc jmp int mov push fldenv adc push cmpsb adc mov push (bad) fnstenv aad out adc pop int3 cwtl pop adc hlt pop aad adc loop xchg insl push loope outsl mov push dec addr16 mov inc pop adc inc adc push adc ret pop repz jne add mov mull inc cmc inc jne jne test xchg dec gs push pop or imul adc hlt adc adc gs adc push fcoml and fs ret fs xchg insb gs adc adc jmp neg stos adc push jmp jge pop test arpl or dec in imull xchg lock rcll mull decl rorl ja xchg adc inc jne adc loopne jno clc add inc loopne mulb cwtl adc push jnp xchg xchg jmp push adc das test add pop repnz xor scas sbb popa jb mov adc ret (bad) (bad) mov push lock in xchg adc adc xchg dec adc hlt sbb inc pop inc push adc lock xchg inc loop notl cmc (bad) jae cmc push sarb push loop and pop adc adc out cld adc in repz in adc inc adc hlt sbb mov loopne adc dec push cmp sbb inc adc pop fcoms cwtl add mov cmpsb div fcoms out addr16 push adc adc or and pop loop mov ret or pop mov mov adc or fistl clc or in lcall fdiv pop sbb lret dec sbb adc jle adc xchg push cltd aaa aaa or es adc clc mov xchg testl or sub pushf xchg cmp xchg adc mov cld ret icebp adc out dec adc xchg cmp adc xor add xchg add mov dec adc and nop repz sub call pop aas subb push sub movups sahf adc sbb xchg pop (bad) xchg in xchg cmp xchg sub int3 repnz adc adc nop xor aaa mov sub xor and mov xchg adc xor daa mov adc sub xchg cmp xchg daa repz adc cmp or mov push cld push jecxz and daa pop adc adc push xor adc (bad) xor push push adc sbb xchg adc sub adc sbb cwtl sub adc push sub or inc mov aaa subl adc daa int icebp and repnz scas adc push cmp xchg cmpb adc (bad) mov xchg std push pop sbb mov adc (bad) jb cmp add rcll sub dec nop add fsubr and and adc clc sbb mov or adc xchg adc add adc xchg cmp icebp cmp aas dec adc adc (bad) repnz push cmc adc lcall lahf adc gs repz xor xor adc fstl or adc xchg xor mov dec sbb cmp pop (bad) rcrl adc das popf mov adcb and adc adc add and mov mov xor rclb aaa ss adc repnz xchg pusha jmp test notl mov adc push adc in fistl cwtl cmp cmp mov sbb adc push adc repnz adc xor ficom push and pop adc and dec adc dec jb pop sub adc push adc mov or loope dec xor sub add sub cmp in add sub cmp cmp and xor repnz xchg sti ja sub daa adc pop repnz cmc adc mov adc add dec adc adc push vpsubsb xchg adc push lahf ret pop negb dec fcoms pusha adc pop adc adc pop mov adc xchg (bad) jmp mov adc test in aas pop rcrl xor mov (bad) adc pop adc jmp ljmp adc adc sub rcll add sahf out add icebp pushf cs jnp call mov adc and mull test pop lock divl sahf cwtl push mov ss arpl push movsb mov loope adc sbb mov push mov adc add in inc add sar hlt in xor mov cwtl xor xor push push sar pop adc lds inc adc pop test push push cltd aaa sub mov jmp dec cld jnp jb loope jb push out loope out inc mov arpl inc mov push pop xchg and dec jne push cmc dec arpl or inc cld adc outsl push cmp mov sub pop pop inc adc leave rcll pop add inc sub xor adc push icebp pop ret xchg adc mov pop dec (bad) xor adc dec loop aad adc dec dec adc add movsb loopne inc icebp push iret xchg adc mov pop xor adc jge adc loope inc lret push fstl lahf (bad) lods adc add popf fistl imul cmp out gs hlt cltd or adc cmc lock rclb push xor adc sbb inc hlt or repnz push lret popa mov adc sbb xor stos adc repz aad fcoml lahf push and insl mov xchg push pop imul outsl adc in inc int lock divl cltd cs xchg fiadd in fistl dec mov adc aam pop in mov jmp push outsb adc ret jmp jae xor pop cwtl adc adc or cmp adc out adc push adc jno pop loopne arpl mov cmp adc jae repz icebp jge pop and adc adc jae push adc add in (bad) enter jnp adc mul adc adc push adc js pop adc pushf incb inc adc dec adc adc adc push clc ret cmp adc pop adc sbb push adcl repnz stc adc adc in aad add fwait adc outsb dec adc adc adc mov (bad) out adc enter jb dec push jb jnp out push push mov mov adc adc xor push xchg adc decb push adc adc adc mov adc pop clc adc addr16 jnp out lahf adc adc add jne mov push push pop int cmc push jge or cmp add adc in arpl adc ljmp adc push mov mov adc push push in xor sbb cmp loope pop arpl pop pop or adc dec adc adc popf movsb push adc adc adc ss adc inc (bad) loopne push adc inc aaa aad repnz adc mov pop ret fcmovnbe mov mov js adc adc dec loope add lahf jnp pop sarb cmc hlt xchg popa (bad) cmp pop add adc ret pushf jne imul adc adc adc adc shll dec popf adc xchg or repnz in notb cld adc xlat jb arpl or inc (bad) in insl sti jb or in push mov cmc mov adc pop mov push adc xor push cmpsb inc adc mov scas imul push xor out push jecxz ljmp push gs add shrl repnz scas adc data16 adc adc and jbe loop add inc adc jge adc jne stos adc gs test add movsl adcb jae lret adc and in cmp hlt adc inc inc out adc adc lock sbb pop xor out adc jnp inc inc adcl adc push add (bad) mov jmp adc (bad) dec jae test xor outsl adc adc lahf aad ljmp push or mov lods adc push mov push adc and pop lea cmc loopne cli fcoms and adc adc ss adc sbb pop adc sub adc rclb sub cli mov xchg adc outsl andl fst shr ret xchg adc out sub or pop pop gs pop out push pop mov push pop cld in dec adc arpl pop imul rcrl jge adc adc adc adc adc dec daa adc mul sarb push push adc adc (bad) aad pop std adc in cmpsl lock fldl dec jg inc adc adc adc adc nop out mov and adc fs push add xchg xor hlt adc call mov mov fwait lret cmpsb and sub (bad) loope inc (bad) adc out rorb adc imul js mov adc pop popf adc adc aas adc adc adc ret stos adc mov (bad) arpl mov push adc adc jne adc adc sbb push cmp adc icebp insl sbb ljmp clc adc clc and adc dec jge adc rclb adc adc cmc push mov or js adc adc adc ljmp inc cli adc adc cmp out adc push sarl pop adc adc adcl push bnd adc imul push jae add shl xor adc xchg inc int sbb inc adc test dec arpl (bad) adc fsts dec test hlt adc data16 repz adc sub fisubr adc imul inc call or mov out adc adc push jne adc mov out jne jb add inc inc arpl stos adc jg movsb notl divb shr adc adc in adc adc es adc dec div arpl cltd int divl cltd data16 cli lea cwtl dec adc adc pop mov cmp mov sbb adc or aam add inc add mov in push mov add adc sar adc loop adc outsl fimul add aad add mov jb jne xchg cmpsb and adc inc (bad) adc adc adc insl repz mov ljmp clc jg in out pusha gs xchg adc jne sti add mov ja or loopne out adc adc sbb cmp adc in mov and adc dec jnp dec gs out jge xchg mov adc in push jne iret adc ret sbb cmp mov adc or inc inc adc ja dec cmc out xchg gs fwait dec dec in mov repnz inc xchg int mov inc push (bad) xor imul ljmp enter xor adc sbb dec ja adc adc in mov adc adc pop fcoml xchg pop adc jnp scas adc loop cmp jne mov adc in (bad) adc mov inc push adc jo adc fs pop adc daa lea cltd movsl loopne inc xchg roll adc or pop jge adc jno inc adc stos adc adcl adc push leave mov inc clc jnp notl ss adc adc adc adc adc fdivl adc test mov bound adc adc adc gs pop insb add fdiv arpl pop adc lret ljmp scas add call fistl adc call sbb mov popa adc call out mov jmp pop imul adc pop adc adc imul bound insl mov arpl lret lock adc iret adc rclb mov lret (bad) fdiv inc adc push adc out (bad) dec push mov adc dec dec adc pop adc popa aam jecxz inc push sub cmp dec inc jb pop (bad) jecxz adc lea jle lret add dec jp adc adc pop jnp push sbb adc push lock rcll push pushf jne inc push fsts insb adc adc inc adc sbb arpl mov adc sub adc repz jge std dec in insl fwait pop pop dec icebp notl jne push pop push lock sub inc decl jb loop insl push in addr16 push out gs xchg dec arpl jge clc fwait adc notb push adc rcll in arpl pop push adc inc out inc adc adc adc adc adc in in add inc adc jmp jae outsl adc add jp adc mov mov mov adc iret out push enter or loopne or repnz or mov mov xchg ljmp repz sbb or (bad) icebp fmuls adc add xchg mov push adc daa push arpl mov push insl pop outsb fbstp push arpl lds jecxz dec jle gs jns push cmp push adc add jno jb int rcll or nop jb imul punpckhbw into repz aad dec js jg adc mov ja lret stc inc dec mov xor jne adc insb inc jae out (bad) (bad) mov arpl or fsubrs fnsave je fcoml clc data16 adc adc push loopne pop dec out bnd jo xchg (bad) adc loop push int push push dec xchg jle adc js popa sub lahf fs inc ret mov cli out adc call rep mov loop inc repnz xorl imul fsts push stc into jp out lcall adc leave js movb int pusha dec out xor lods cli adc adc cld adc bound jo inc inc adc jnp adc pop xchg adc jl in fist mov adc push inc jmp adc push xchg or sbb adc jb push push adc je sub jo jb inc ret adc cmp adc js adc (bad) rclb xchg adc insl pop int3 adc popa (bad) call data16 xlat je or hlt xlat adc push out pop mov or dec jg xchg push popa lret inc adc push push xchg adc fdivs adc outsb push jne int3 cltd adc (bad) imul pop pop adc adc je jne mov adc adc xchg or mov adc cmc adc adc jo addr16 adc sbb mov popa dec inc adc adc adc push imul insl lock xlat jnp sbb jg adc jo cmpsl sub sbb jbe pop cmc and adc sub mov adc mov call jg js adc fneni(8087 loop test adc (bad) add (bad) sarb jl jno adc lds adc outsb pop repz cwtl jns adc adc (bad) adc adc dec adc xor dec mov cltd adcl adc adc xchg adc pop push adc adc loope pop adc sub clc popf adc push stc adc adc mov mov popa inc xchg adc adc fisubr adc pop clc adc hlt addb adc or adc adc scas adc sbb shrl rcrl cmp dec out cmp jns,pn adc inc incb fdivs adc or rclb push (bad) jb or dec jge jle out lahf adc pop adc adc or adc cmp rclb pop adc adc outsb iret pop mov idivl pusha adc out adc sbb adc add push sbb (bad) adc popa outsl adc pusha push adc mov dec dec xchg mov shlb std push loope fwait adc cmp les ja adc out test adc add fucomp popa dec adc adc inc sbb lret icebp add popa nop adc lret loop in push cmp fisttpll adc xchg adc pop lahf lds popf adc add lret mov out adc adc (bad) adc mov cmp (bad) ja xor imul add jmp (bad) out popa xchg jbe xor xchg adc dec adc jno or adc xchg fiaddl push insl pop jbe ja inc jg in adc addr16 cli adc inc adc arpl inc jnp mov repz data16 sub pusha cmp test add push outsl mov dec mov push cmp lds and mov ds aam mov mov adc adc jle int adc (bad) sbb mov lcall (bad) repnz movsl in push test dec push lret (bad) (bad) xor mov rcrb add push jne sub cmp xor cmpsb inc shrb ficomp jb inc jl adc fs fs adc jp cwtl adc adc outsb dec arpl aad lret jg adc adc add mov ljmp mull push imul hlt aad rcll add xor mov fnsave adc inc sbb adc pop push fsubr (bad) pcmpeqb inc in in hlt adc cli test repz fldl adcl push (bad) dec sub add fistpl sti xchg adc js sti sbb or mulb jmp data16 adc idivl or mov push adc icebp enter insl std adc pop (bad) mov or mov mov sbb loopne sti lret fs insl dec rclb push dec xchg je adc push adc out lods pop push in sarl rclb inc add jle lahf inc cld or xchg es mov lock in insl xchg pop int repnz loopne insl notl sti sub adc loop andb loope jp push jne (bad) mov adc jmp add push pushf popf sub pop (bad) fxch xor adcb inc jge adc sbb pop cltd ds mov adc lds pop or lock pop adc fsubs inc push lahf adc add push cmc push je popf adc inc lock adc xchg scas pop out adc repz or in (bad) icebp pop or adc adc xchg adc dec out jmp pop dec testl adc lcall adc add sbb scas pop mov pop loope adc adc mov mov mov add xchg stos xchg lahf lods cwtl adc or cld lods xchg mov cmp mov jnp push inc fsubs sbb mov mov mov jno mov daa adc inc ret rclb pop adc xchg mov mov pusha pop adc mov loope adc ss ja xor and (bad) or or xor stos adc mov imul js pop or cmp adc in push adc orl adc push fildl jecxz adc push push mov push dec cld push or jbe xchg adc mov lods in xchg adc sbb pop cmpsl add xor mov repnz mov adc inc sbb mov mov fucom repz ret pop adc and sbb notb int mov jb mov adc adc out popa rclb adc sbb jne pop insl xor sbb sbb adc imul adc or (bad) inc adc out sbb add std lea sbb add movsl pop cmp dec loopne mov adc lahf scas out adc xor roll jnp adc aaa data16 push xchg xor xchg test cmp mov cmpsl or jp mov sbb (bad) xor pop xchg adc ds cmp add mov add cmc daa sub pop sbb cmp fstl nop or repz adc rcrb mov sub mov cs push cmpxchg inc jmp rclb xor and cmp fbld sbb pop inc in cmpsl stc rclb and lds adc cmp xor xor test cmp subb xor pop push jle lods cmc adc adc nopl adc or pop pop cli mov adc daa adc and mov ds out inc or loopne adc mov cld movsl (bad) jecxz lock or xchg ja push xchg xchg and mov ss add sbb adc subl iret or xchg adc push adc sub shr rclb pop fisttpll or repnz ret out adc mov ret outsl ds out and add aad in adc mov loop push sbb mov pop jle sbb add sbb sbb stos adc xor push adcl mov mov sbb add mov (bad) mov add pop (bad) mov push pop jecxz loop add adc (bad) adc adc pop adc xor or mov frstor daa adc aam mov ss test adcl xlat in push adc lret cs test xchg movsl nop cmp xchg ss mov adc ret adc pop adc push es xor in push adc (bad) popf adc rorl fwait and cmp adc sub sbb pop repnz adc out mov ss cmp repz lret stc push adc fwait movlps pop in inc adc adc adc popa repnz fidivrl adc xchg dec mov and (bad) xor add hlt pop in push aaa xchg scas xorb test cmpsb jecxz not cmc pop inc adc adc ljmp (bad) adc lea (bad) cmp mov adc repz (bad) cld mov adc or adc adc (bad) popa cmc adc adc lret sahf pop adc mov cmp mov leave pop adc popa cmc adc adc push in popf or mov mov inc adc adc adc push repnz fwait pop adc ret push ficomp adc adc gs xlat inc adc cmp inc adc imul (bad) adc ret add in xor or mov out add add shll adc lret fs cmp mov jmp inc in pop repnz repnz mov sub int adc (bad) jmp push adc cmp add lcall xlat pop stos cwtl dec fsub adcb popa lock xchg mov adc adc shr mov push cmpsl push iret push xlat or jl ljmp sar mov add pop pop sti sbb jp ds adc fidivl adc adc pop xor and adc pop repz in inc jne ljmp lcall pop pop or pop in repz imul jbe loope adc popa xchg adc int movsb aam mov jl repnz mov ja adc jle mov adc mov adc test (bad) mov cmp mov push jl lret pop rcrl adc lods pushf adc call jns sti or lahf fistpl adc ljmp sbb xchg pop push sbb mov mov inc adc adc fwait dec mov lods mov adc (bad) and push mov xchg sub lds test int sahf push mov sbbl adc std adc std push in lds adc repz adc pop sahf mov adc push out pop rclb adc cmpsl xorb movsb mov notb inc xchg mov adc dec lea xchg push mov adc cmp (bad) and adc cmpsb xor inc adc cmp pop adc mov and mov adc push push cltd xor cmp add and movsl cltd popf es dec add adc aas pop mov cmc mov pusha adc push test test inc sbb negl in adc inc cmpl mov pop aaa xor es mov sbb mov adc adc pop xchg and mov add sub scas mull xchg ficompl dec jle rclb push dec cs xchg scas popf adc loop xor xor in test cmp inc dec xor push xor repnz add jmp pop jmp mov int lock lock inc or in or in daa push and push jecxz fwait cs dec cmp push adc mov add mov mov push cmp icebp lea pop adc adc xor mov push cmp and mov xchg adc xchg xchg lcall xor hlt movsl or ss add cmp hlt push mov aad repz lret icebp sub cs sbb and xchg adc insb adc (bad) stc adc repnz cs hlt out adc push push adc inc adc cmp and rclb scas adc inc incb adc shrl push mov cmp adc add es pushf (bad) sub adc mov cld adc push ljmp add jmp sub mov sub adc adc push sbb mov mov pushf xchg xor xchg loop and adc inc hlt xchg adc idivb adc adc scas xchg add sahf sbb idivl add adc xor xor pop sub es adc das scas (bad) push nop cmp pop mov adc mov and push mov repnz add inc out test adc add adc xor loopne (bad) fsub mov mov sub or mov push xor adc pop mov lods sti (bad) pop adc subb rcr sbb jno adc push mov nop and xchg sbb adc aaa (bad) fincstp adc lock add pop xor pop setae adc xor adc cmp in xor sub enter in cmp or xchg or push or cmpsl jmp adc inc out repz popf mov add cs xor in jmp scas (bad) loopne test xor push cwtl adc mov test mov adc xor xchg adc sub xor mov je mov push adc or push cld xchg nop (bad) xor or add push rcrl adc add cmp mov sbb test xchg lods xor and and sahf xor cmpsb xor xor push xlat subb adc adc cwtl prefetchwt1 mov cmp sub mov fidivl cmp (bad) sbb add or adc adc lcall add test sbb and adc sbb adc xor out in popf xlat push (bad) adc pop xor sub cmpsl xchg sahf xor clc mov fcoms jmp sbb mov movsl std lea adc pop adc sub sti and adc push xchg test shr push dec or adc sbb mov adc adc pop mov adc inc adc aaa or xor daa add cmp repnz adc add sbb sbb sbb sbb xlat pop addr16 (bad) adc xor xlat or push cmpsl add mov aaa in inc aad adc add lret sbb aas scas xor cmp out adc es cmc or pop adc sbb adc or jmp add push push adc aaa cwtl and add mov ds add mov sarl adc mov adc ror xor hlt and xor add cmp fldcw std sbb lds lcall sahf pop add inc push in mov or movsl and (bad) scas jno mov push push loop or int adc push pop adc mov cmp mov push hlt or mov call xor adc adc inc pop popf or cmp pop popf xor in xchg inc xor popa lock loop adc mov test out mov sbb xor adc mov es adc push xor cmp hlt adc in push lea xchg rcll into adc mov shrl stos cmp cmc (bad) jmp in cmpsl adc push adc pop and adc push adc loop push popf adc adc add or std xor scas mov adc mov sbb inc clc call jns adc test jecxz mov or rcll inc out mov fiaddl adc xchg xchg loop and test mov mov mov push push adc pop adc sbb mov test rcrl dec adc xor push fstl nop mov popf (bad) adc xchg ds inc notl and movsl xor test pop pushf sahf repz fwait iret push push adc inc icebp adc sub xor mov and or xchg leave popa adc test push adc mov mov sahf mov adc adc sti inc add push push notl mulb xchg push adc xchg pop hlt sti and or mov seto sub mov in mov adc insl adc dec mov in push jecxz dec ljmp pop and sahf adc test leave test add mov cmp lahf mov or xchg fdivrp push and sti cmpsl mov lods sbb adc (bad) xor mov push sub pusha out push adc mov adc mov test push or jge sbb and outsb jbe or icebp in pop mov ljmp movb clc shlb fsubl xchg mov inc xlat (bad) pop notb mov adc mov data16 repnz inc cmc adc repz mov aad inc adc or popf mov push pusha push rorl repnz xchg jbe mov fdivrs adc pop push push push loop jns adc enter ret adc jmp mov imul pop (bad) fidivrl lds les sarb push repz loop pop adc in mov fisubr pop adc fdivl fcomi fidivrl fisttpll das fmull hlt sbb or hlt (bad) outsb inc in fisubrl leave lea call leave jmp (bad) jbe mov loopne (bad) (bad) aam jl jmp adc add pop jecxz sbb (bad) adc cli enter idivl int into dec into adc push pop fistl adc mov cli into adc out imul adc adc or dec js out (bad) jns (bad) adc aam rclb sbb rolb ret repz push mov push adc (bad) std addr16 jmp inc jne stos push mov out loopne flds push add notl notl out fs faddp adc cmpsl adc sti sbb adc pop sbb ljmp mov stc jl adc pop cmp (bad) or pop adc in mov loop xchg adc jae aam in or inc clc mov imul lea sbb dec int3 push aaa imulb adc pop adc cld in ja adc xchg negb xor adc adc push divl push aad sub movsl lds mov mov or and mov adc adc movsl adc add pop xor mov dec push dec adc adc add mov leave cld mov push sbb or cmc xor aad adc xor add push sbb add sbb dec (bad) cwtl out mov sbb rclb adc mov adc push add jecxz sbb mov adc push adc pop cmp mov mov or das js adc fs or adc xor in adc sub scas movd roll cmp add and roll loop adc mov mov add pop jg xchg fcmovnu in sbb adc add ret add push dec jns add pop pop incb adc adc jecxz in add push pusha pop sbb aas cli cmpsl shlb adc data16 xor cld movb xchg jns jl out adc cmp sub inc adc or adc inc xor inc sub sbb insb notb sbb push push outsb dec sub sbb push enter adc push in (bad) push (bad) adc or adc and pop enter (bad) clc xor and add js jge (bad) fadds adc fcoms xchg pop add adc sub sub cmp add sbb (bad) xor fstps mov lea or adc add negb lds (bad) or push adc push mov or adc stos pop rcrb insl adc or daa adc xor adc push push jg sbb jecxz (bad) sub push test and std adc lods icebp adc push cld imul or js loopne fdivs mov cmpsl mov cld insl (bad) mov jle pop shll shrb sbb push add fcom js popf adc add enter push cli (bad) xor mov (bad) cld sbb push sbb jo push decb repnz outsb mov pusha mov ja sahf adc aam repnz ja push sub sbb dec movlps or into sub mov push int roll jae pop adc ficoml adc aad or out inc jno mov sbb in xor lods cld or xlat inc pop and cmp cld or fldt push clc sti and pop push push adc test mov and mov cmpsl jecxz sar pcmpgtb jae mov push leave int adc test adc push jo add popa xchg adc rol lods repnz add cmp mov icebp inc push clc cmp adc and pop xlat or ja repz aam fwait dec out adc repnz sbb adc sbb xchg lock das sbb repz fincstp adc pop rclb dec xor lods add mov aad (bad) out adc movsl fadds adc (bad) (bad) ret repnz push movsl sub fwait push inc adc imull out adc mov mov mov pop adc or in or pop repz push aad jno in push adc adc (bad) mov xor push adc mov add mov sarl mov mov es loop or adc pop lock into imul pop fs sbb sbb mov jmp repnz adc mov push add sbb xchg adc push add shrb icebp vcvtpd2ps movsl or or adc lret loop push inc call (bad) in add lds adc repz ret push sbb je jecxz loop or fucomip stc repnz lret add adc mov sub and pusha shr push pop ljmp xor aad or sbb xchg push out pop adcl adc cli loope pop push hlt les repnz sbb sbb stc pop pop pop add push push adc xchg jl cld or sbb inc jecxz and (bad) cmc inc push push pop or adc rclb repnz inc sub into and int3 dec adc popf (bad) repz in mov push pusha xlat (bad) sub adc call (bad) mov or adc or adc pop adc aam xlat cld mov pop push xchg out les and inc sarb sar xchg adc fiaddl out dec mov ljmp pop adc lods push push adc xor in add out ret fistl repnz jbe fcoml jecxz lret or pop xchg adc cli sbb clc dec inc sbb in push mov sub stos sbb inc adc adc aam aad push sbb xchg repz jo jge std adc adc mov (bad) pop dec int in adc adc (bad) outsl out inc adc int3 pop outsb add idivl fxtract ret xchg adc lds adc xlat (bad) jmp adc faddp adc lods icebp inc repnz and shrb adc xchg adc sbb adc movsb dec adc call fsts adc mov bound pop daa or adc dec cmpl push and adc sbb mov inc push mov mov jecxz add pop cmpsl adc sbb cmp adc inc adc jecxz push mov clc add mov xchg cmpsl int3 xchg scas mov adc lahf lods pop pop in push cwtl divl leave cwtl pop mov sub pop adc add adc xchg (bad) push jecxz mov shld adc sbb mov mov mov mov add or mov (bad) mov inc mov mov mov sahf cmpsb adc movsl jnp jae cwtl scas adc adc mov xchg mov adc mov fcoml imul stos or (bad) adc or adc std int3 xchg lods xchg cmpsb adc mov xlat cmpsl push adc scas mov popf in mov sahf mov pop cmc cs sbb sub mov rorl stos cwtl mov mov int3 add mov pop leave adc jp cmp mov movsb add fs add in sbb cli mov inc iret adc mov jns adc roll mov sbb mov mov bound adc jns repz pop sbb call push push adc inc push shl or mov out inc add xchg out inc adc das fnstcw aaa pop test adc sbb sarb dec addr16 adc (bad) pop in fs leave mov adc mov mov adc adc dec jmp imull (bad) bound lds arpl clc mov push adc fcomip inc out scas adc enter pop adc loop imul in loop jne in (bad) jb test and adc add pop push adc pop adc rclb cs ja or dec mov adc fistpl jge adc pop addr16 dec icebp int jno inc or adc ljmp adc cmp cmp pop shlb mov dec jl sbb fs fs adc sub sub movsb inc inc inc adc ret (bad) (bad) add pop pop lock leave adc ja iret dec imul dec jae lock adc int inc jne adc adc jnp adc (bad) jno push push cmp mov adc out adc adc mov psubusb jmp jge (bad) testl jb enter xchg pop fldenv js adc fbld cld adc testl xchg or pusha pop dec test add pop out rclb in std inc fisubrl xor bound jbe in mov adc and cmc jle adc add mov add adc repnz fmulp cmpsl sbb hlt sbb pop test mov lret cli int3 adc sbbl cmpsb sahf (bad) inc adc imul in xchg adc xor cmpsb mov scas adc mov adc out gs push inc inc jb pop ret jb mov xchg adc lods xchg pop xchg jmp adc inc inc adc mov popa jecxz adc fwait adc xor dec adc dec push outsb gs adc pop fiadd lea mov adc cmpsb repnz rclb leave adc gs pop adc arpl adc pop jnp dec in dec dec jne mov jne imul nop mov adc sti add add cmp in loop insb adc out sbb (bad) leave adc shrl adc inc rclb testl adc repz mov adc dec lea mov mov adc lea lea or loop fstl int call cmp mov ja lock cmp adc lret dec adc inc push adc xchg push in jb lahf ljmp mov arpl push gs fcoms cld inc lret mov sub push adc pop lock imul adc clc adc int movsl clc adc inc dec adc sub adc adc mov and cmpsl adc jae jne roll lds dec gs sub adc push dec lods insb adc adc scas pop adc movsl and mov adc rcll idivl mov adc jns sub add dec pop popf adc dec inc pop jge dec fs dec dec jb imul jno test outsb adc adc jbe call insb add adc jecxz push inc push adc sbb adc adc call jns (bad) cli or ljmp loop sbb mov pop or ror inc and and cltd aaa xor mov hlt mov call data16 (bad) jl fsts shr jmp hlt adc push ja repnz ja jns adc shrb ja pop jns adc (bad) das adc (bad) loope (bad) in adc inc adc fstl pop and inc loop adc (bad) mov adc cli adc fdivrs adc fcoms pop adc jge adc ljmp aam adc adc mov cli insb adc insl icebp adc push mov jge ds adc jle inc dec adc mov dec (bad) xchg dec int3 arpl adc outsb inc and adc cli (bad) lcall adc lods pop adc adc stos adc mov adc sarb push js mov xchg adc bnd inc repz js fcomp lret mov dec adc (bad) dec mov mov enter out mov fbld mov insb xchg jbe push push adc into jbe pusha es adc (bad) adc inc je in mov adc stos adc addr16 adc fbld pop daa adc inc adc adc lret popf adc lock mov adc push adc (bad) adc pop mov fisttpll outsl fisubl adc xchg shlb adc adc adc fstl dec pop adc inc adc adc cmp lahf dec adc xchg jl sti xchg jae or clc outsl adc adc jle rcr or adcl loopne adc fsts popa adc loop es call push pop orl cld dec (bad) adc xor push adc adc pop movsl mov adc popa pop loop adc int3 (bad) inc add jecxz add in call sbb push sbb mov cld movlps mov push adc mov adc aaa sbb or gs mov notl mov cmpl mov scas adc lods push adc adc pop (bad) testl adc jo mov cmc lods loop jp adc mov clc lock call adc mov adc sub adc (bad) and adc jmp out push push adc cmpsb fcoml fdivrl rorl ret fwait stc inc inc adc jge adc mov pop int mov adc adc std pop pusha in adcl lods adc hlt adc jnp loopne sub mov sub adc fcoml mov adc lock jmp insl sti push in ja dec ret push adc pop inc test inc addr16 adc mov lods xchg adc dec adc popa adc adc gs fcoml mov int3 adc adc fcoms mov jns lock adc aaa inc lods clc cli push out call scas pop dec int out push pushf arpl dec test loop fcoml aam inc mov sub adc inc lods dec adc rcll push adc adc push lock adc mov inc in loopne adc inc daa adc imulb adc adc xchg out adc insl test js adc dec loope in push jge mov adc adc adc push adc out testl pusha adc dec repnz arpl jp adc xor lods imul cld jmp jae or shl adc push outsl notl jne and pop pop arpl ljmp adc hlt inc int adcl orl and cmp adc adc mull das dec push adc push loop sbb out push stos aaa leave or xor repnz mov rep or sahf cmp adc test adc xchg (bad) cmp cmpb jno sbb pushf mov arpl push jle adc cmpsb xchg adc adc cmpsb push cltd adc add (bad) aam pop add mov aad sbb mov repz mov cmp push or gs repz inc push rcl or aaa sbb or dec add xchg mov mov or add xor out xor push push leave push adc das pop fwait adc adc fs mov mov mov mov cmp lds adc mov mov cltd adc pop or pop adc outsb or js mov pop adc add and adc inc adc inc cli adc add add (bad) fcoms in xchg pop mov inc std adc ret adc fstl and notb pop out adc loopne fwait (bad) repnz adc cs push adc movsb test sbb jecxz notb sub test mov add mov pop adc dec adc lret cmpb pop sbb (bad) or adc lahf scas lcall cmp or adc das mov mov push push ret rcll mov (bad) push xchg jmp adc int3 sbb add aad adc push leave push out or push out push aad out add push out sbb push out sbb push out push rcll adc orl addl sbbl sbbl xchg mov add out or xor stos out xor xor adc pop xorl xchg sbb lds xchg adcl ret nop and ficoml fsubs cs adc in mov pop adc roll adc gs adc adc pushf jle pop adc jle adc adc adc iret insb adc mov mov adc adc adc (bad) fdiv cs adc adcl call adc mov mov mov xchg cmp adc aad push ret lret aaa lea mov xchg adc or pop xchg test je fs inc adc adc mull lahf pop add rcll mov pushl adc int movsb sub fwait aas adc fcmovbe inc adc push ret push out add push out or push out adc push out push leave push out sbb push out push aad out adc aam adc or push out or push dec push sub jns push call movsb adc jge adc cli mov inc xor xchg adc cmc mov sub xchg sbb das aaa adc xchg xor test adc sbb push mov xlat adc xchg sbb xchg adc adc inc adc xor adc mov adc jecxz xor mov pop pop adc push xor aas in fwait test stos ljmp adc mov dec adc and jnp adc dec adc (bad) adc std fwait mov pop daa incl and loope jo xchg in mov ljmp pop sbb lcall add fwait loope xlat test sub sub adc xor pop out sub adc std mov adc stos adc xor popa jne mov adc adc adc mov repnz mov fidivrl rclb add je sub arpl push adc adc pop adc inc int3 adc push inc or add adc pop mov mov insl scas adc out mov fldenv fimul mov in add adc es cmpsb push and lds into pusha adc pop adc or jns adc adc xor imull adc xor adc adc fs shll cmp adc and jmp (bad) arpl aaa sbb (bad) xlat rclb push stos rclb mov xor mov cmpsb outsb push sbb pop movsb jl jecxz or gs adc or push xor mov aaa cld aam pop mov xor test nop push push daa add adc jmp or cmp or fs sbb or scas or jecxz pop mov xor (bad) movups pop fnstsw adc adc or adc or sbb push or and and pop mov adc mov adc mov pop mov sbbl ss insl cltd (bad) or mov mov add adc push and sahf cmpsl adc mov cltd xchg movsb or or adc dec adc dec sbb fsts dec adc mov mov out add adc adc in or sbb adc test rep sbb (bad) xor xchg adc in outsl adc adc adc xor aam adc adc dec adc xor cmpsb sbb aam adc or (bad) adc adc divl sbb push icebp cmp out loope add call mov and inc xlat mov xor outsl adc jnp adc lahf adc or lds xchg adc lea int adc adc or adcb or insl xchg adc add fs adc pop and adc adc adc xlat and pop adc sbb pop sbb and ljmp adc inc add sub add adc pop push push jns adc push mov and cmpsb stos adc sbb movsb sbb xor adc not mov adc push dec add repz and or (bad) adc cmc fwait sub jns adc ja xchg adc push cmpl or add movsb cli rcll adc adc sbbl or pop jecxz or xor sbb adc pop roll aaa in or lahf sub adc mov shll mov pop xor mov sbb add ja sti jbe call push ss adc sbb popa fbstp adc mov push mov in push or pop out mov (bad) lods xchg out or cmp call add mov inc stos fsts jp sbb pop dec adc xor sbb pop mov pop dec adc repz std inc repnz gs jp out jp out sar dec imul in cmp hlt dec (bad) loop imull add jno mov adc stc mov in adc adc adc adc addr16 adc out notb mov push push push out push mov aam adc adc push ja loop scas adc push adc jmp adcb jae fcoms in in dec mov adc adc mov gs push inc xchg adc or jmp inc imul adc jge aam adc loope outsl adc adcl push imul imul mov jp push adc adc and adc icebp fst or adc jno mov mov and mov enter mov cmpsl jge adc adc arpl mov mov cmc jne mov (bad) push gs decl sbb inc adc hlt adc (bad) mov popf and ja insl mov hlt adc sub adc mov adc fcoms dec outsb call fstl leave lcall inc jne push adc push adc scas jl lahf dec lods (bad) adc xchg dec das push outsl mov in arpl rolb repnz imul stos imul pushf popa mov mov notb cmp dec mov adc pop loopne cmpsl sub dec mov dec inc push jge adc adc decb xor ret pop adc arpl mov adc in xor dec or pop fs cmp and cld adc mov imul jg and mov pusha cmpsb mov mov std pop outsl adc dec push push hlt adc adc dec adc adc mov adc adc mov dec cli int gs repnz adc xchg push ret loopne push cmpsl adc push adc xchg popa lahf adc push ja jo adc les adc adc lret hlt fsts mov adc test adc jns ljmp sbb in aaa jne xchg adc lods (bad) adc repz mul clc aad xorl adc push imul jns adc push jne adc inc adc adc cli jge jb hlt push jnp jb test adc adc out jae (bad) adc xchg mov push ljmp sub or adc xor mov mov add push add aam push inc adcb ret xchg and movsl push jb shlb lea push mov dec jg cmp mov adc push imul adc sub adc push insl add adc xchg test mov xchg xchg adc pop inc adc dec xor mov mov add or adc sti (bad) repz xchg divl adc cmp dec test not lahf inc sbb mov mov icebp xchg mov stc mov aaa mov lock mov lcall hlt aam adc fistp mov int std aaa adc adc daa out fstl dec icebp mov adc test adc repnz adc adc cmp repnz adc jmp adc xchg movlps enterw xchg xor push ret or lds (bad) mov mov lods repnz add mov scas test fcoms cltd mov aaa negl inc adc inc mov in aam adc xor adc inc mov inc adc adc adc (bad) adc aam adc jle adc add and adc xor adc adc bound stc mov push adc xor lea pop pop push xor adc fcomip xchg (bad) adc test adc adc push xlat or and cmpl hlt xchg mov dec (bad) adc adc lcall push push scas adc xchg jns adc adc sarl adc xchg adc xchg adc aas aad sub adc inc adc stos adc mov cli les notl sbb and repnz mov lock adc cmc inc mov test adc sub add pop fwait sahf adc add mov and sbb inc adc mov push adc jo cli jns adc adc daa mov test pop test ljmp in adc dec adc in notb ss repnz int or xchg rcll cld adc repnz popf loop rcll pop mov inc adc fildl adc adc adc pop adc adc scas hlt or sahf cmp add pop test ja sub mov dec test adc xor adc mov aas xchg sbb mov fcoms xor adc xchg iret fwait and xchg mov adcl adc lcall mov movsb xor push adc aas push out pop scas mul mov adc lahf stos icebp cwtl aam adc in (bad) mov fucomi adc jne leave push adc lds xchg mov in lds leave hlt adc adc adc xchg push xchg adc cmp sub adc adc in aam adc adc pop push mov (bad) jge adc adc adc int jge adc dec cwtl and jb pop adc mov inc jge push iret adc dec ljmp adc sbb stos adc or int3 adc popa imul ret adc cld push mov (bad) loop push push jge sbb aad ss adc lods mov stos mov adc sub or mov adc inc sub adc inc dec int mov dec push inc xlat push mov inc inc push ret push mov push inc xchg inc push mull add pop fisttpl adc out jmp push inc aad mov imul inc out push jnp adc push (bad) leave inc out mov dec adc push inc mov ret pop inc adc gs adc imul pop inc adc dec inc adc stc adc hlt jns adc js adc inc push test adc call movsl int fdivrs clc scas (bad) adc cmp xor xchg and mov lods adc inc ja ds push lods sub pop roll adc fcomps addl mov add pop (bad) repnz call pop cmc les cld ret movsb aas adc pushf adc mov ja test bound adc (bad) add ret cmp out add (bad) cmc lods imul jmp loopne cmp adc mov xchg jo movb inc adc inc adc fadds adc jg adc (bad) adc pop push adc pop in insl shll adc incb and push inc cmc in pop cld adc adc inc pop out mov mov aam dec adc push adcl or adc cli loop fsts push adc adc cmp sahf adc inc inc adc loope jns adc adc (bad) std adc cld stc hlt adc mov outsl adc rcll movsl adc adc lea push lock adc aaa in mov add (bad) call pop push push adc notb ror lcall mov add fsub inc adc push adc cmp lods jo test addr16 adc movsb sub adc lods imul push out cmp mov sub test mov push push jge incb aam pop mov jp lock rcll jo mov xchg jge ret cmc in xchg adc repz in and adc addr16 call pop sbbl push adc push popfw adc adc mov out idivl icebp inc call sbbl cmc jp adc outsl adc std adc pop sub adc in out dec adc inc inc inc jge sbb mov ljmp inc cmp jae mov mov pop sarl adc push and adc dec (bad) push dec imul adc test arpl or cmp mov xchg adc jae or mov sti mov adc aad mov mov inc mov pop dec int int3 int3 push inc adc adc movsl cmp jns mov and adc inc jmp mov adc mov sti fwait dec xchg adc cld push mov aaa mov adc test mov cmpl insb adc and arpl pop mul leave cwtl pop std test fs loope dec adc fs cmc rcr mov or mov jmp adc inc adc cmovb aad repz repnz push std lds cmc or mov in adc adc and fmul xchg dec add fsubp push call cld jne ljmp xor xlat push mov jno push aam incb inc pop sbb jmp pushf sarb xor mov pushl out mov inc je js push push adcl adc jecxz loop repnz xchg adc cmpsl adc xchg or adc in dec jmp stc daa cli inc adc sbb push mov adc adc in in jmp daa adc xchg xor adc aam adc push loope out jecxz (bad) xor iret pop push adc sbb push adc cmp repz stc xor sbb adc add or or enter cmovnp lret inc incl repz or or push push mov inc cmc aam cmp addl mov pop xchg in repnz pop sub adc and mov hlt xor ficoml adc loopne repnz push adc push mov and add out les out inc pop add cmp clc adc pop adc adc cld adc mulb or sbb adc xchg add xlat into dec adc mov lock sbb adc adc rcl lods lods xchg adc adc mov and xlat stc mov sti mov nop inc push adc adc mov sbb push xchg xchg add cmp adc and push adc inc add mov repnz sbb mov leave adc push syscall and push sti cmpsb or push adc pop or sbb push xchg adc mov stos adc add mov pop popf xor test adc ror jne dec add push and pop push cmc adc or and pop cs adc repz sbb or sbb ljmp mov xor sbb push push loope (bad) adc cmpsl push pop xor scas (bad) adc stos add and adc add push mov sbb sti es movsl adc add repnz outsl adc (bad) clc mov or cmc mov dec inc dec adc add add adc xor add xor add mov daa sbb jecxz add mov or mov pop add add ljmp sti cmp andl push add cld adc repnz adc push push adc adc sub scas pop jecxz mov adc sub jmp add std adc xchg aam xor pop and add sbb sqrtps lret adc push or or sbb lods call adc adc sub adc mov and mov fidivl inc sbb das adc pop add add adc sbb sbbl push sbb cmpsl into xchg adc push push fistpl add (bad) or adc out scas push push push shlb sbb or xor add lock fisubrl aad sbb sub mov mov and add sub into mov add pop and lcall adc add cmp pop int3 adc or sbb jecxz cli shl add imul add adc add add adc scas xchg adc adc add mov sbb or jmp push (bad) xor adc mov test pop and or arpl xor adc out call or push dec mov mov lea adc mov adc lea mov add sub mov mov mov sub fcmove mov mov xor mov xlat or mov rclb movsl sti add repz out sbb jns xchg sahf adc mov popa enter incl adc mov loop xchg mov adc xor xchg adc repz xor lret adc movsb xchg adc fadd das adc loop adc not hlt push cmc xchg mov fwait push mov sbb add mov ss xor jmp popf fwait or xchg mov aaa cmc mov ljmp push sbb jnp push sbb adc mov or repnz adc loop inc adc cmpsb pop or ret sbb push test sub adc push jecxz push scas adc mov push mov repnz out shrl adc repz mov adc adc in mov xor imul and adc inc jmp push mov pop add pushf ret pop or aam push clc imul push (bad) out sbb add in pop push adc repnz cmovae outsb sbb add mov and adc clc inc (bad) scas push adc (bad) cmp add inc clc movsl xchg or adc scas incl ret inc jmp pop inc out and sbb add add (bad) mov out adcl add adc lods pop and cmc int3 loop xchg popa cwtl adc or adc sbb in fldcw adc fdivrs inc add (bad) cmpsb xchg adc jecxz adc movsl notb lret dec repz dec adc je icebp iret jecxz inc adc loope add or add inc hlt inc sbb adc sbb (bad) push ljmp fisubrl stc in dec divb adc les inc (bad) rcl out push push mov loopne push add out leave xchg les lea adc adc icebp aad pop pop shl ljmp out in push mov mov je cwtl adc call mov ret ja jnp adc movsb or pushf push sbb movsb inc adc add add mov (bad) adc ret cs adc lods add mov adc int3 mov cmpl or in sbb cltd adc xchg mov push mov fist or movsb mov sahf lcall decl loopne fiaddl adc xchg sbb repz mull push adc std pop aaa adc xchg repz adc add add cmc mov lret mov movsl xor or add sbb xorl pop adc (bad) adc call test push out push xchg sub cld adc call pop adc daa cmpsl sbb mov nop and lock mov pop loop ds pop or add adc fbstp loope clc sub repz cld xor xor mov jecxz xchg xor notl pop inc fwait xor std xor jmp xor sbb adcl xchg inc pop fwait or add and inc push pop adc xchg mov mov lock push inc cs cmp add aam and sbb xchg adc stos adc adc aad hlt popf sub pop scas push adc rorb push and pop adc adc daa or xchg jmp lods adc pop ljmp add pop pop add es cmp sbb loop adcl sbb in sahf mov add pop sbb xchg pop push rol push inc xchg mov xchg sbb push adc mov mov xor repnz lahf cs adc xchg adc cmp push push shrl and adc fnstcw lcall sarl or sbb sbb adc adc xor std adc push repnz (bad) adc pop mov pop and adc adc or mov sub aaa ljmp cmpsl sbb popf mov in xor out add push jmp pop mov add pop out adc or sbb loop mov sub popfw adc push fxch and inc add or (bad) scas pop xor mov sbb or mov (bad) or mov and mov std add adc adc adc mov (bad) adc sbb rcll and xor (bad) adc lcall push repz jmp adcl xor inc push adc out movsl adc add pop aaa push mov popf adc repz add popf mov add mov rcll or ss adc push cmp xchg or sub xor sub inc hlt addl mov mov mov push adc sbb repz xor pop adc mov or adc adc nop and int push add fldcw adc pop nop xchg mov adc and xchg sub pop adc movsl sbb push push shll push clc mov mov mov cmpsl pop xor fwait test popf xor inc adc adc mov daa lahf mov sub mov loopne cmovnp popfw adc inc push xchg adc adc movsb (bad) ds mov and mov mov xor adc (bad) xchg jnp repnz repz and cld leave and add xor and es adc lea lods cs adc or or fucomip inc add adc add call test (bad) xor sbb loopne out adc add adc cmp sahf lcall sub pushl adc adc or xor or cmp leave jnp adc mov mov (bad) pushf push repz inc or or adc sbb mov or mov and shrl repz mov pop adc lea sbb add not popa aad sbb mov xchg out xor fucomp out adc sbb cmp sbb adc lock mov inc add lds mov scas adc mov loopne sbb mov loope or sub sbb sub mov adc adc sbb cmp adc stos or sbb inc je ret ss hlt add inc push mov xchg adc xchg adc aaa adc pop mov push repnz cmp sti mov mov dec adc xchg add nop add pop push shll adc mov and adc inc mov xor insl outsl adc xchg sbb fisubl sbb adc or jnp add jno mov adc je (bad) adc adc xchg or push popf add loope cmp adc out pop mov push clc mov adc and mulb mov mov movsl je cmp es or ss push lock lret push push adc pop adc mov sbb pop push inc sub push lods xchg pusha sbb sbb or jmp rorb mov mov xchg xor adc inc push xor inc sti ret pop mov xchg xchg cmp adc inc add fs add cmovns int mov inc inc adc popf adc mov in ss adc dec adc adc lods inc xchg shll push movsl adcl test mov sbb inc js xor adc adc mov adc pop pop inc push adc sub lock es imul adc sub cs scas loop cld adc sub adc cmp lds or dec xor adc movsl xchg sbb call and add ja or adc mov adc xchg pop add adc sbb add dec adc and xchg dec (bad) sub push add xor pop call pop lods adc clc ds or mov pop push cld rcrl and adc mov cmp lods adc movsb test jmp dec cli sub cmpsl adc and mov pop out inc rolb xchg pushf mov mov stos push add lods mov add or imul mov mov cltd or enter jns cli sbb xchg int je hlt inc mov (bad) int3 or insl ficompl dec adc push mov adc mov lods test sub repnz lods jb pop daa sbb adc xor jb jno insl (bad) rclb mov adc adc adc imul idivl mov jg adc push push xchg push adc add and mov lcall gs adc fwait sbb je cmp movsb push insb mov adc popa jecxz cli shll inc adc movsb mov lods dec adc adc rep or inc adc ret (bad) in adc add adc adc insl and xlat cmc mov cmp push les dec jae mov mov aad lcall mov adc bound mov add push add inc adc adc js jns clc push adc int push mov xor jno push cld xlat std jmp mov fisub adc ljmp fildll sbb adc (bad) xchg insb popf and adc xchg cmp fincstp pop mov cmc push adc int loop pop dec rclb rcrb mov or sahf adc adc push jo dec popa lret cld (bad) add dec movsl fstl into sbb mov fsts xchg rorb enter jmp cmp popa les adc adc dec pop ja pop adc fs jecxz xlat xchg adc outsb call rcrl mov adc out ljmp xor adc sub adcl or xlat sbb adc mov mov (bad) adc es movsl pop and sbb xor lret out adc frstor mov xor adc xor xlat sub fwait shlb ficoml call lds sub lods push xor rorl or adc and push enter adc xor push adc in adc mov xchg adc xchg test or mov adc sub fsts sub repz sbb (bad) (bad) sbb mov adc inc sbb or (bad) sub das repnz xchg adc fcoms pop or outsb test mov xor cmp dec mov jecxz (bad) pop xchg adc cmp sub (bad) mov mov adc and mov adc and or mov or pop sbb adc cs pop mov inc sub pop push dec nop sub xchg adc or xchg pop mov and adc jp popa stos push xor mov add mov cmpl rcrl mov jo pop and xchg pop adc cmp cli sbb cmp repz mov out test rorl aam cs adc rclb repnz xor adc mov or (bad) adc fisttpll pop or ficomp (bad) es ljmp pop push mov adc push xorl add adc popf mov pop xchg mov or push xchg cmpsl adc push mov test cmpsb jnp push les cmp mov jl dec adc movsl add adc xchg pop rep cmp movsl (bad) and push adc (bad) jbe jne imul xchg and or (bad) mov xor mov push jnp adc hlt popf mov xor cwtl adc in mov mov inc jnp xchg push push inc or sbb and movsb jmp add mov movsl xchg popf cmpsl add xorl adc sub xor dec test push pusha notl jmp movlps imul je xchg adc and clc test push mov popf adc les es repz adc inc sbb add jnp adc insb mov mov (bad) mov mov jno inc mov adc bound mov shrb scas adc push out mov enter jno adc or pop out pop test and fstl push nop pushf andl rcll push shll adc xchg add adc xor pop push je mov ss movlps jae cmp add mov sbb add push repnz test mov push adc lea ds inc adc dec adc xlat xor stos rcll in push adc sahf adc sbb xor mov or loope push adc or or add mov adcl dec push xchg xor pop adc mov xchg adc inc (bad) and xor xchg sbb adc rcll cmp inc adc (bad) add rcll dec (bad) jge adc inc adc out xchg daa hlt cmpsl adcl add or mov jl xchg les and adc into dec ja xchg leave icebp sub (bad) adc xor lock cmpsl adc adc push jnp jo aad clc adc xor mov xor repnz sub push sub cmpsb jp adc or dec jae xor or mov mov inc inc popf adc xchg sbb pushf adc in out sahf out loop cld adc into jle in inc jo push adc push cli adc shr push adc push (bad) push adc push dec jg js call xor mov sti xchg inc cli or adc adc arpl and repnz inc (bad) mov xchg in mov popf adc or pop insl je insb fcomip aaa loope adc xchg imulb adc or dec adc lret clc xchg rcll adc icebp inc adc ja sbbl into sbb shrl or and pop sub cmpsb mov jle adc jne push and mov ja pop adc addr16 or pop adc add mov fwait pop sarl mov ja dec push jmp test adc stc inc repnz cmpl xchg cmpsb ret lods adc jge in bound pop jae jb outsl lret dec imul (bad) int movsb adc imul dec out aam adc arpl adc ds jle adc cmp (bad) icebp push mov insb mov mov outsl mov loope or call aad xchg sbb adc idivb and testl into leave loop adcl dec test inc pushf adc mov dec adc xor (bad) adc div fsubr push out loop push out stc inc push pavgb fs dec pop fucom cmp adc cmp out adc adcl dec jp adc std adc mov js iret adc adc pop lds lock imul jp lods xchg adc adc push jae out push fstl dec jle adc adc adc (bad) cmp loopne cltd bound adc adc mov push fildl adc cli adc fstl int inc xchg imul lds in pop imul adc iret les push pop mov push pusha mov dec imul lods bound pop inc cmc jb inc inc scas adc scas add shl jae mov adc das adc sub adc stos adc push sbb inc pop insl loop jge adc push pop (bad) arpl jae inc jne js adc adc jle adc and push adc adc fdiv out add stc mul outsl fsts idiv arpl adc (bad) cld pop roll fs inc xor mov sbb add fldenv adc stos test mov push mov jmp add out push or sar adc sbb mov xor or out or xchg mov test js adc push adc adc dec jge adc adc aam adc daa mov inc or adc pop iret addr16 insb adc adc dec adc pop adc adc imul adc sbb sbb adc cmp mov cli adc adc dec adc xorl (bad) xor rorl adc rclb daa adc pusha adc and mov jno add adc out adc cltd add push adc cmc adc adc push out pop cmp xchg mov (bad) adc adc mov push adc adc mov stos inc adc xchg adc or adc ss repnz jge adc out pop push push js adc sbb movsl sub jmp and cmpsl cmp dec jns adc adc in and push adc adc es adc adc adc push push mov mov adcl adc test leave test popf popa mov xorl inc into adc jmp mov xlat aaa add adc pop cmp ja in adc adc cwtl adc adc test adcl (bad) adc and mov pop or add adc or test xchg movsl in repz push adc add adc mov fcmovb adc xor adc enter adc adc faddl mov xor adc adc fsts ljmp cld jmp nop rclb out adc mov rclb mov xor shlb sbb mov repnz adc pop push gs push mov call in mov loop adc mov in push dec jns adc jmp pop stos dec adc xchg mov fild mov adc (bad) int adc jmp mov add in dec push adc call inc add ja adc fcom clc femms mov adc js in adc pusha jge xchg mov sbb adc pop add pop add (bad) or flds and popf movsl fs or popa adc adc fwait pminsw adc or adc adc outsb adc lea out jl push and mov cmp (bad) cltd adc inc xor add xor rclb cli adc (bad) notb push push rclb and cmp and int and pop adc sub adc insl inc adc imulb out test sub mov lock adc pop add (bad) in cld adc int stos and mov xchg xlat sub roll push adc xchg xor repnz scas adc sbb loop add hlt (bad) or repz xchg adc xor push adc cmp mov mov adc adc enter xchg adc or in dec jb xor int jp adc movsb adc imul mov nop and (bad) icebp inc or adcb cmp call mov nop xchg sbb dec rcll out adc out cmpsl push push adc push mov push xchg adc xchg push adc or rcll and adc or pop xor in ret or mov adc adc adc gs scas movsl sahf adc loopne loop mov ljmp cli adc mov clc popa jb xor inc push adc inc cmc or adc cmpsl cmc sti cmp mov aaa fisub adc enter push sahf adc push adc xor fcoms call adc adc adc adc and ret adc adc pop les (bad) adc negl mov xor sbb (bad) pop movsl addr16 in adc mov lods (bad) adc mov xor adc xchg pop cli mov adc fisttpl movsl insb mov mov testl mov or adc loop push ret pop inc add sbb adc jae push add sar repnz mov (bad) fs mov insl push sbb rclb adc sbb mov dec adc mov std push js adc adc adc xlat test fldl (bad) stos adc or rclb leave adc daa mov adc adc movsl repz push and pop dec adc adc and mov sub pop dec adc adc inc adc sbb test adc adc mov inc mov adc adc insl inc adc repnz push mov adc sub call (bad) adc dec adc hlt adc push mov jecxz iret scas adc adc mov lcall ljmp push pop pop sbb sbb jmp cld adc in push add ja adc cmpsl inc xchg adc adc inc jns (bad) adc cmp call adc popf inc mull adc wrmsr out push in and dec push mov lea int mov push sub adc adc jns adc adc pop cmp adc sub ljmp cli fstl mov adc mov add or notb stos adc sbb ficompl mov mov jl sbb xor es adcl popa adc mov pop mov adc enter stc adc (bad) repnz push mov adc out adc sbb adc ret cmpsl or or add rclb adcl push adc adc push mov and shl xor push hlt adc in adcb and xchg or sti jg loop icebp adc adc or movsl lds xchg loopne fwait mov lahf adc (bad) out add fist (bad) inc adc jecxz sbb faddl adc lret and popf adc mov mov cmp adc adc adc inc pop adc jo mov adc in lods push adc or mov out sahf adc out mov (bad) adc mov push mov adc das adc adc adc cmp cmp adc adc adc adc jb es aaa (bad) movsb pop adc adc fwait sbb mov mov push mov push push enter jns cli or fnsetpm(287 inc mov mov push insl lret mov push adc lods repz data16 ja pop dec adc sub adc (bad) xor mov adc (bad) push adc dec adc inc xchg cmpsl pop out or add (bad) xor adc mov sub lods mov mov adc sti mov adc (bad) adc xorl mov clc adc js pop adc adc test adc pop adc cmp xchg (bad) adc adc adc adc into adc sbb bound push adc adc mov adc add xor stos adc ljmp adc adc mov roll mov inc adc ret in mov adcb push adc mov push adc adc adc mov push adc push cwtl sbb adc pop mov adc adc js mov movl mov adc adc or jmp movsl bound (bad) xor cmp mov mov jno mov adc fstl or adc adc ja loopne adc adc jnp js adc push adc adc adc lds cmp scas push adc adc push adc adc adc jae call xor add push repnz aas adc adc pusha adc and repnz adc notl and adc aaa adc stc adc mov popf adc movsb jg jp lea outsb adc flds adc adc std adc adc repz mov adc push sarb or mov sti sub sbb sbb jle adc xor cs adc cli dec adc or lock nop adc xor in ja call aam adc pop adc imul mov adc adc xchg adc fimull mov push jle or xchg xchg inc adc repnz adc lsl fidivl ret adc inc adc adc add (bad) pusha adc and adc adc hlt mov xor adc and adc add adc cmpsl repz xchg adc mov pop push mov adc fsubl pop test div int divl sbb dec adc sbb push cmp cmpsb stos adc adc mov add adc cmpsb int3 adc sar push or fdivrl jne fisttpl mov loop add in push push fcompl lea add mov (bad) movsb mov pop adcb push cltd aaa xor mov test test adc and movsl sbb movsl pop adc pusha adc adc sub or cmp cmp adc sbb cmp mov fwait in mov xlat call pusha adcb mov pop push mov sbb adc sbb rclb mov loopne xor adc lret add adc and rclb ficom lcall dec xlat not and test movsl rorl adc lea or pop inc adc stos mov push roll xor pop aaa push mov icebp push adc mov fwait mov adcb ds adc dec adc adc adc mov inc adc adc adc mov jno push fstps or push insb adc adc and mov adc inc adc jg (bad) add ljmp movsl les data16 sbb adc mov adc mov insl adc adc mov bnd rcll out and adc adc icebp add and es adc and mov std push cmp adc adc pop sub sub xor fadds in mov adc int mov adc adc adc aam adc xor push adc adc adc adc sub ljmp cld and call ja push adc adc aam adc adc repnz int3 xor int mov mov xor adc scas fwait mov loop adc jmp aaa add psllw sub and clc add aaa sbb sbb xor sbb mov adc cmp ja adc push mov lcall mov adc mov adc push aam adc pop adc pop adc popa nop adc cmpsl inc jge adc and in adc cmp pop add adc pop (bad) in faddl adc aaa or sbb arpl sbb and adc or adc hlt adc push adc dec adc adc (bad) adc rclb inc adc push fisubl leave test add push xchg out mov (bad) dec adc mov sbb cmp cmpsb stos adc adc fwait test and add std push or fdivrp push rcrb call push sbb aam push push jg add rcr xchg clc push push mov cmpsb xchg test mov adc or xor mov adc adc repnz xchg cli lea sbb sbb pop std adc and (bad) push jmp repnz adc xchg xor adc adc adc jmp jb adc cs push adc adc adc xor xor mov adc mov rcll adc dec adc repnz scas adc adc adc add or (bad) aaa sbb hlt (bad) dec adc jge adc push ljmp dec int3 adc adc fadds adc sub xchg mov adc add out adc push adc adc insl adc scas mov mov adc adc mov adc (bad) adc adc push mov xor dec sbb add add loop cld adc adc adc popf adc or adc jmp mov dec adc adc push mov add clc ljmp movsl adc sbb pop add mov cmp pop push mov nop adc adc pop jnp adc or adc cmp sub bt ret and adc and add testl in (bad) xor mov mov push popf movsl rclb add pop xchg fcoms cwtl add mov adc xor xchg cmp add gs adc outsb out adc push sbb sbb inc adc adc popf adc adc out mov mov movsl in call inc inc mov movsl scas adc adc xor stos add out and loop mov dec adc adc sbb adc sbb movsl (bad) jmp out xchg adc in xor or fs cmp adcl sub adc push mov iret pop inc mov leave int inc or test outsl aam adc cmp in add push popf cwtl xor xlat add ret loop cwtl adc dec adc cs adc sbb and dec adc popf adc adc adc adc and aam adc adc adc or adc aam adc mov push xchg inc pop mov scas adc adc movsl add and test add sbb mov scas adc adc mov cmp pop adc stos adc fwait or sub adc jecxz xor lock push in push dec sarl adc adc or outsl adc push adc adc push sub adc push mov inc pop stos adc adc lds and test and sub stos push add cld ret cmp adc adc sti push adc loop subl test pop adc jnp push or fisttp push or ljmp adc push adc mov ficoml and adc adc and mov (bad) icebp (bad) mov xor mov sbb dec cmp les adc movsb test mov imull adc out dec pop pop adc adc adc cmp mov xor test adc dec lea jmp mov adc aam adc mov mov cmpsl mov (bad) fcoms ljmp ficompl adc xchg adc daa push rclb add mov adc scas or xlat jge adc dec xchg pop call leave mov or in pop inc sub pop mov cmpsl cmp and sbb mov adc ss mov inc adc adc mov adc rclb mov cmpsl adc adc adc adc aaa push mov or leave sub mov repnz adc es adc movsl test mov or out hlt adc clc adc xchg sub adc cmp lahf adc adc adc inc hlt mov push sbb adc adc adc mov push ljmp push and mov and add xchg adc mov adc xor adc xor adc cmc pop mov cmp enter (bad) insl adc mov cmpsb cld adc and cli adc adc add adc loop rcrl popa pop adc adc xchg adc int3 xchg adc pop (bad) push adc adc hlt xchg in cmp adc enter lcall pop fwait adc or adc adc push adc adc icebp add and add mov dec adc out adc sbb cmp insl adc dec cld xor sbb outsb test push test adc js adc push adc or stos loop int mov lret jp and adcl std adc cmp stc divps ljmp adc sbb or xchg (bad) loope adc adc pop lods scas adc lock xor aas adc jno xchg push pop push lahf adc adc popa sbb mov adc mov cmp adc adc mov inc mov scas adc adc mov sbb inc mov (bad) ret cmp (bad) inc jne push in (bad) mov pop insl adc mov adc test jecxz pop and fstl mov adc out iret adc adc adc test sub mov ficom clc adc in adc add inc mov insl push cmp (bad) icebp push stos xor sbb mov jnp adc add call adc (bad) adc cmpsb cld and mov mov clc push or push lods jmp sbb push inc adc mov dec adc insl mov in add and (bad) in adc pop popf cmp push adc out mov or mov add lods adc pop push add add add sbb adc xlat or adc mov push push rcr sbb adc sbb cmc sub or pop fcoml sbb adc popf fldenv movsb jge dec xchg (bad) jne adc int jnp loop scas adc add mov pop sbb sbb add xchg mov (bad) adc adc test adc sarl xor xchg stos sbb xor xor fisttpll popa mov cld adc adc adc cmpsl mov cld adc sbb adc adc js adc adc nop adc inc loop jecxz adc push adc xlat loopne out jns adc fstps or (bad) pop iret adc jmp (bad) fcoms pusha loope adc and mov (bad) xor (bad) adc xor ljmp pop call dec pop pop sarb dec test cmp adc mov pop inc adc adc and arpl fisub adc push sahf adc adc adc (bad) mov add fcoml stc xlat pop adc or mov adc mov sub or and test adc inc push mov adc mov out adc test out xor xchg mov push loopne (bad) xor sarl insb sbb bound pop scas adc cmp cmpsl adc lods adc mov add dec hlt adc or or add sbb test mov pop adc adc adc mov ficompl or adc adc pop adc and les mov adc push adc sub pop leave adc fimul adc test cltd testl adc ljmp mov add adc rcrl cs adc cld adc adc adc stc or push adc adc insb movb daa adc adc adc pop mov adc inc repnz out xor adc cmp adcl xchg mov add or rorl xlat lods loop cld adc dec adc fcoml fwait cmp adc adc mov adc mov dec mov in mov fcoml dec push mov bound lods jns push and adcl and adc add adc push xchg adc adc mov sbb inc adc adc mov push adc xor push sbb out sbb push or add sbb add rclb push or or sbb pop sbb adc stos call adc inc test dec adc cli mov pop mov cmpsl jge adc or dec repnz mov sbb pushf add mov adc mov mov dec adc xor add adc push fnstcw loop jge adc mov jns adc adc call aad add pusha adc nop mov cmp inc push sbb sbb adc adc adc movswl add mov nop fldcw rcll ficoml mov adc out push push cmp adc xor lahf mov sub in dec mov adc add xchg adc mov mov mov (bad) rorl adc adc rcll sbb xchg jmp enter add push into xchg adc pop adc push movsl adc xor scas sub fiaddl clc adc pop adc stos rorb sub xchg jmp fiadd cmc fcoms cli jge adc adc xchg lods pop das into (bad) shlb adc mov movsl cld adc push adc sbb call in out into dec repz cli adc ficom (bad) fist popf pop xor jmp (bad) inc (bad) stos stc cltd adc inc call add adc or ss adc ret push ror in xor mov mov or xchg cmp fwait aam sbb (bad) mov xor and adc stos push mov fsubr mov pop std sti xchg fnsave adc adc loope lcall inc ficomp adc sub sbb dec push out pop sub xchg and adc push (bad) (bad) adc cmc xor adc fistl lods or mov into dec cs adc adc in sbb pushf cmpsb sarb add mov adc lods or gs adc or sbb push fs ret repz jb pushf jecxz or jns push push pop jne or jnp fistpl inc cli xchg movsl rorl push adc mov stc sbb fisubrl mov inc (bad) mov adc jnp mov sbb ja movsl jmp mov add mov jge adc jbe sbb adc sti mov mov push int3 into mov les adc sar mov adc nop or test test nop fisub loope push test jno (bad) repz xor enter jecxz in jge sub xchg mov adc das adc je adc sti repz mov push adc jge pushl adc out fldt jmp (bad) imul rol jle adc xchg ljmp test repnz inc aam jns adc jae push mov ja sbb xchg jo adc jge mov xor stc mov adc lods mov out (bad) xchg lods mov pop enter addr16 sbb adc jmp repnz and cmc mov lret subb adc (bad) repz or mov les adc enter push mov aas adc stc xor jecxz (bad) mov adc sbb mov mov adc test test in lods rclb push fcoms adcl mov adc xchg mov jecxz sub mov xor scas incl jp mov shl xor sbb mul jnp or inc xor or insb scas mov xor pop movsl xor icebp mov lret repnz out mov adc fildll mov cmovno pop das adc ja leave insb add add ret xchg cmp add scas lahf ret push xor adc ljmp adc sti std lahf mov mov mov idivl sarb adc mov xchg adc sti insl fsubrs jns adc rcrb jmp xlat pop or fwait jp xchg adc mov mov mov add adc add mov lcall pop or repz std xor enter add mov push mov cmpsl repz into jmp pop add rorl int add adc enter scas rcl add mov xchg adc add movsl ds lret jnp fstps sbb sbb xlat cmp xor repz outsb aam sub inc out aam mov mov push adc and dec adc mov fcomip pushf mov fstl adc je fwait mov std inc iret adc cmp mov adc out mov leave loop (bad) add or adc cmpsb adc repnz sub adc adc jnp xchg pop push pop andps xor adc ret loope std adc jle adc adc or fcomps mov (bad) mov jge adc adc out pop adc xchg leave sbb lods int3 insb adc mov xchg or mov and mov xchg cmpsl adc aam add idivb jle adc adc mov (bad) repnz adc or mov adc in dec dec adc aas adc pop jne push adc mov adc cmp inc adc lret fmull push or or test adc repz add out lret rcr loopne xor cmp mov mov jecxz adc adc push adc mov icebp ss repz push aad push adc inc movsl adc adc (bad) push or fsubrs mov cli popf mov adc daa push add add add adc pop adc adc lea add loop fcoml and mov orl iret adc xor pop popf adc adc xchg adc adc or xchg add repnz mov or mov adc in adc mov adc test add movsb sub adc mov xchg sbb in stos pop jno adc mov pop mov (bad) (bad) imul adc dec adc es push cmp adc adc (bad) popf pop roll fldl pop mov sbb dec inc adc push mov ficoml icebp dec add push or adc test mov sbb out add lret repnz repz push sbb or (bad) jne or adc test dec adc adc dec adc pushf add aaa xor mov push jecxz sbb loop add test leave test cltd adc xlat adc or pop cli std adc rcrl es adc sub ss pop std sub das mov daa mov adc adc mov mov xchg and pop mov and ret mov lea mov adc adc sub add leave icebp sub adc pop dec fsts mov or loope test aad dec adc ja adc adc sbb jmp xor jns adc mov mov out (bad) in aam in sub xor mov sbb mov xchg movsl jmp xor notb (bad) mov mov mov pop add and mov fistpl adc adc push cmp cmp xchg xor mov testl notb add adc xor adc test adc loop push push add push lea mov sbb push sbb xchg push bound push xchg and ljmp inc cli adc into adc pop daa lahf add mov adc mov mov mov sub in pop sbb shl ds add adc pop stos rorb scas or adc xor adc pop jp pusha adc adc push int sub adc sbb mov mov pop mov add cmpl pop adc jno lock movsl xchg test add lods push popa mov mov sub mov add dec or mov adc xchg test adc add ret xchg nop push adc cmpsl mov adc mov lcall adc xor (bad) adc adc pop adc mov xor or test mov adc stos movntps mov inc adc pushf cs adc or xchg in sbb rcrb mov xor (bad) and mov cmp (bad) or mov cmp add adc xchg sub push push sbb lcall adc push push cwtl cmp sub or or xor (bad) xor movsl pop mov push mov add repnz mov adc sbb in rcrb xor (bad) sub cmpb or clc fstps or and xchg lcall jge adc adc mov push addb push test and mov dec adc sub mov adc sahf mov enter mov adc and sbb sub repz sbb and xor pop jecxz adc mov dec cmp xchg adc mov cmpsl add sub add adc or cs sub or sbb or movsl xchg repnz mov jge adc cmp cmpl sbb lods sbb sub adc mov popl mov adc add into push adc or jno and movsl mov fistp ficoml mov or adc push lods and ss adc push push adc adc adcl pop sub adc add mov adc and mov sbb sbb pop adc aad (bad) adc and jecxz cmp cs push not imul push sub lcall ja mov adc cmp (bad) adc sbb add loop into int add lods add adc sahf pop sub cmp popa pop adc adc adc xchg subb push sub sbb daa aaa (bad) xor push out and adc cmpsl xchg xor push adc and sub mov mov or xor mov insb adc (bad) adc push add xchg popf xchg (bad) rcrl adc adc sbb mov xor mov movlps and adc das sahf cs sbb sbb mov sbb adc push cmp adc xchg mov add adc adc imulb fcoml aaa hlt ret pushl or (bad) adc aaa scas popf mov adc mov mov or cmc inc mov cmp nop cmpsl in xor fild adc adc and orb sbb dec dec adc repz xorb cmp je push add push jge adc icebp dec adcl inc pop adc aam cmp mov adc stc push clc rep cli ds jp adc (bad) jmp adcl adc adc push adc adc loope lods pop sbb out stos pop dec adc popf adc adc xor hlt mov adc cs sarl adc adc out pop sub xor or or jecxz adc or nop mov popf sbb sbb adc adc iret adc pop adc pop or dec xor out adc notb lea xor mov sub adc pusha adc sub sbb cmp mov xchg cmp adc xchg adc adc test mov es inc push outsb adc rclb pop adc jmp andnps adc add push adc repz ljmp js adc add and loope adc cmp cmovb adc adc xorb xchg repnz adc lea mov cld adc and adc jl and rcrb inc repnz push sbb int3 adc xor mov inc adc sbb pop ljmp mov adc and adc jge adc xor inc (bad) movsb mov pop inc adc or mov add mov pop mov push sbbl adc jmp adc sbb leave sbb pop sbb hlt pop cmpsl sbb sbb jno push gs sbb inc adc cmpsb add sbb adc movsb popf fimull es icebp sub cmp xor or roll sbb mov or or adc ret popl and adc outsb and push hlt mov test pusha xor xchg push add pushf mov test mov mov push fwait mov fwait add cltd push inc or sbb pop adc adc or and xchg mov lods sbb cmp (bad) sbb shrl (bad) aad adc mov test rcrl fwait ljmp xchg outsl adc repz push cmp pushf sbb sbb add adc mov push lahf mov adc adc push adc mov mov adc mov mov or (bad) (bad) sti add sbb sbb push cmp mov sub mov sub cltd and lds push jecxz repz or (bad) jo icebp or sbb xlat in clc adc out hlt add jmp aam sbb out push adc loopne adc cld pushf push pop jmp push adc sahf dec add lcall pop in sbb xor add mov movsl add add shr push les aaa inc adc mov or or push (bad) mov sbb sbb adc sbb rcrl adc aad push fdivrl jge mov xlat inc sbb mov adc call in push jns test (bad) lock add xchg adc mov push lret adc mov adc scas adc test adc mov adc rorb int3 mov lea psllq add sub adcl (bad) xor in sub ja and mov xchg push ss decl (bad) pop push into rol jno mov mov roll ds jecxz insl adc cld push mov cmp mov push and add xchg pushf jnp xor mov je and and es pop or mov mov scas mov sub push or rolb jo mov cmp push pusha cmp push fcoml push adc (bad) repz xlat xor add popa xlat shrl adc push adc fstpt adc pop adc (bad) lock add out push adc out fcoml push in call or jge mov sbb scas pop or or mov mov xor xchg movsb jge adc or jns or mov push shrl cmpsl test push jmp add fldenv test add notl sbb jge push fwait mov (bad) adc shr pop adc xor xor popa adcl adc jno adc add adc push push fs movsl adc push adc testb or push adc jecxz loopne decl sbb fdiv inc adc mov (bad) or leave icebp dec adc iret testl mov (bad) sti xchg push dec mov adc push in mull clc push add aad in adc aam or leave jmp push in mov jmp push adc adc ret out out (bad) stc inc cld arpl add lock in popa popf adc (bad) pop loopne fninit push loop or mov rorl adc call push hlt das cmc sbb xor push call test bound mov jns adc dec jge adc cld sar push push jmp pop clc xor adc adc jmp neg icebp repz adc in add (bad) adc push xchg jmp xchg out lds adc adc pop adc adc (bad) fnstenv adc pop adc push xor and test adc std jb adc adc lcall adc push adc adc fisubrl adc test (bad) repz sarb (bad) adc lock repnz iret testb icebp xor xor adc or insb adc popa lret loopne fs loope xchg rcll pop or (bad) adc cmp jl call push adc xor mov mov stos mov stos xchg test inc adc adc adc es icebp adc adc inc mov and mov adc loopne lcall adc push adc cs adc bound cmp adc scas and adc adc adc jg adc decb fist cmp test or mov loop adcl out push adc adc jl xor xor enter add pop sbbl adc dec pop adc jl dec push fistl sbb sub out scas mov adc adc mov fisubl xchg and imul cmp loop (bad) mov add ss notb pusha or adc stc adc and mov arpl lahf adc inc lods call std jg pmaddwd lock cwtl adc mov push adc adc out mov out xor or (bad) adc (bad) adc adcl flds adc pop inc incb adc xchg adc mov adc mov xor mov push adc pop negl and inc icebp adc xchg xchg cmp adc popf inc pop adc adc sti and adc jmp mov adc mov in adc pop adc xor adc iret adc mov adc adc or test adc push push cmpsl sub and adc movsl xlat adc sub icebp inc adc xor mov adc adc xor and mov adc mov xchg int3 push adc adc loop add inc cmp adc push scas or mov jge sbb inc adc adc adc adc or out cmpsl mov (bad) mov adc mov adc adc adc xor mov (bad) icebp mov push mov xchg xlat mov mov mov adc adc adc mov mov pop xlat sbb mov mov mov das xchg dec or shlb sbb cmp adc ja xchg adc adc out mov test out or test xchg scas push scas xchg or jae dec and movsl add icebp es adc mov add push cmpsb pop and push and inc jno adc fstpl repnz mov repnz adc (bad) adc test fadds adc sbb aam lret aad (bad) adc int lods (bad) pusha ret add adc in mov push push ficoml fbld xchg or into adc push xor fidivl adc xchg notb cmc xchg in push in push scas cmp adc outsl adc mov add adc or add dec rclb adc add add and push mov and cmpsb fwait mov ss (bad) mov push adc lret pop adc hlt les notb add inc adc mov lds inc adc fsts mov mov loop xor dec mov or mov mov add pop cmp pop mov or mov adc jecxz jl mov int3 xchg es and imul pushf jno call adc call (bad) repnz and fsts call push or add cmpsl scas push sti adc sbb xchg ljmp pop jne not outsl adc add out mov adc sbb adc mov push out push adc mov adc lahf adc xor clc jecxz scas push mov cwtl mov rol mov xor push loopne fs adc out aam sbb call shr push mov fs adc mov pop adc pop adc push repnz aad cmp dec adc pusha adc adc adc pop fstl sbb inc xchg add adc push adc adc (bad) adc adc adcl lods (bad) pop setnp inc or mov or adc adc (bad) (bad) mov adc adc outsl adc sbb adc std adc adc jb lock (bad) mov std adc adc popa push adc adc push sbb mov adc adc xchg lods adc add in adc push sub add fwait iret lods add stos pushf sbb pop (bad) adc jecxz xor add dec lods and adc scas adc ret cld add jecxz or xchg push repnz ss adc stos xchg mov lock mov pop cmp adc popa fistl push xor pop call out rorl arpl mov fsubl (bad) adc push repnz adc adc pusha adc adc mov movsb loope xchg sbb int adc scas sbb xor mov pop xor adc adc inc scas icebp lds adc ret notb les mov scas bound add or add cld adc push adc loop jecxz sbb repz out pop xor xlat adc mov rclb sbb fwait mov sbb xchg repnz xchg adc pop (bad) repz and loopne mov jle push xchg adc push or adc xor scas adc xor (bad) xor lock enter adc fs add adc adc clc adc scas adc cmpsb inc movsl shll adc lock je adc adc fwait adc adc push push mov fsts fwait out add mov data16 idivb das adc adc add and adc popf adc scas push adc ljmp or lea and xchg adc inc call cmpsb ficom pop hlt adc dec xor adc mov jb adc adc outsl adc cmp mov adc jp xchg adc jle push lahf adc adc or adc adcl adc or or adc ljmp dec push or les cli and mov mov pop adc mov jmp rclb push adc pop cli test push and adc xchg adc setb mov les lahf push ja adc or adc ret pop adc bound inc adc negl loop adc dec adc push adc sbb or adc bound pop (bad) popa adc adc jb js adc dec in adc adc repnz adc push adc or inc adc call setg xchg stos test cltd sbb sbb adc adc loope adc adc mov adc mov adc adc outsl adc sar xchg clc loop push inc or push sti adc xchg adc adc push adc adc mov mov psrad push fwait adc (bad) adc divb sbb popa nop adc adc mov pop out xchg adc add out pop cmpsb ficom popf and iret adc adc leave sub adc mov pop adc cmpsl mov divl notb test adc push scas inc adc mov push adc push lods rclb adcl mov jo cmp adc and mov mov adc inc adc andl or rcll adcb fisttp fucomp adc xchg adc mov addl adc cmpsl xor rcll mov adc adc into icebp (bad) ss adc push adc or and adc adc adc mov shll adc (bad) adc (bad) adc adc adc ljmp adc data16 (bad) adc mov gs adc inc adc cmp test adc cmp cwtl rclb inc adc dec sbb movsl adc cwtl fsubrs in mov xchg xor cmp jb (bad) mov inc adc scas mul pop mov xor mov fcomi inc xor divb inc repz push push mov add movsl mov repz adc nop mov ss adc push push jae pusha adc inc add adc repnz push adc in jle adc dec pop jb lock rcll repz aad sbb mul jnp gs adc jle adc dec mov pop adc scas adc mov or adc jnp dec ljmp mov aad adc adc int lock insl bound adc dec adc shrl adc adc fs lods movsl adc int jno jnp cmp fcoms mov movb inc adc outsw adc inc adc adc inc ficom push push push fcmovb out adc jmp or int3 stos adc adc loopne (bad) movsb (bad) adc adc sbb fiadd test into push push pushf loope sbb sbb adc dec push outsl mov pop addr16 inc pop arpl shlb scas das adc dec adc (bad) lret sub adc scas dec adc push or (bad) fs popa icebp aad push rcrl pop jmp sbb xchg pop adc in mov insb add inc cmpsl adc push or int3 inc adc aam push leave pcmpgtw mov iret (bad) mov push adc push or iret add pop roll pop fldl pop ret add in push out sbb push out adc push out or push out add push out push ret push popl adc dec jno addl insl adc bswap dec dec mov ss hlt adc lods push adc jle adc adc jns adc mov dec jnp adc inc jne fsts push imul neg aaa pop jne adc cld lret pop incb (bad) lea cmc mov adc xor movsb mov xchg adc inc lds (bad) in adc adc fucomi adc adc pop jno jne cmpsl out pop gs jg push adc rcrl jne adc repz jnp sub (bad) adc adc rclb test mov push add loop add cwtl adc mov mov shr push sbb int3 clc push adc testb (bad) repnz out inc add jb (bad) jbe adc popa sbb fistpl les adc dec adc movsl jmp push adc adc cli (bad) adc or sbb outsl adc add mov stos add or mov push adc adc cld mov adc ret adc sub xchg adc adc adc adc test fsubr adc add fcmovne adc movsl adc adc sub and jmp in adc inc dec mov sbb adc adcl inc cmpsl adc and sbb mov adc bound ja adc adc mov lods (bad) adc adc mov push mov jle adc adc ss adc in cmpsl adc sbb and xor push adc sub inc adc push insl adc cmpsl fwait mov push sub adc mov and pop movsb mov mov lea pop push adc inc adc adc adc push lods mov push adc pop push scas adc inc adc mov cs jecxz and mov push adc aam adc fucomp sbb call les adc adc mov adc inc adc adc xlat mov imul rcll mov pop loop jge adc adc sbb sbb out mov adc mov xor xor in mov adc fcoms push pop inc dec sub popa adc (bad) xchg mov push and pop out or pop daa adc xor mov push adc or mov adc adc (bad) xor sub sbb sbb mov lods adc dec test stos jb or sar sub jmp int sub mov sbb xchg test mov cmp jge sbb test xor divb adc decb jno jno sbb pop mov rcll dec adc or xor mov push hlt movsl push add lcall adc (bad) fwait adc adc out adc sub popf or mov xchg scas add (bad) mov sbb nop pop sbb mov adc or test lods or sbb aam (bad) mov or inc cmp or movsb repz ljmp add xchg xor push jg mov add lods adc daa mov adc sahf mov adc sbb and nop out out push lods mov xchg xchg out add ja add mov mov iret out lahf mov rcrl adc in xchg adc and in cmpsb jb mov sub lods push imul negl je sbb push push lret adc or rorb push push adc sbb fistl sahf mov push or or adc test rorb push popf daa repz adc test adc mov or andl sbb addr16 sub jecxz orb aaa adc or (bad) mov or xorl add aas cwtl sub mov add shrb xchg push add adc sbb fwait adc adc popf add adc lea sarl or add sbb add adc push aam add adc push add stos adc rorb loop or push andl or xchg test sbb je push ficom mov push adc mov inc shl adc dec dec sbb int3 data16 insb mov adc adc call icebp add mov adc adc mov adc adc jbe adc xchg mov addr16 test pop push adc mov adc out add in push (bad) xor inc add out loope push push adc sbb inc adc push hlt cmp orb in (bad) stos out movnti adc pop js cld fwait daa or sub mov and push mov pop repz sbb or adc add stos adc and push xor repz stc add (bad) adc push test xor push (bad) push jne add out cmpsl xor outsb push xchg daa test or pop test xchg pop nop dec sbb cwtl adc sbb mov sbb push jb popa push sbb dec notb sbb push push ret mov push adc test mov adcb push mov sahf adc adc jb mov mov add push adc push push adc sbb fisttpll andb jno movsb add mov repz xor adc mov or mov xor push ds cmpsb or mov mov or mov adc adc inc sbb adc xchg adc xlat (bad) and push test adc repz icebp add mov add mov movsl push cmp push imul mov mov jmp lea sbb mov or (bad) mov cmpsb add or or mov lss (bad) cmpsb add sub sbb adc mov mov sub or sbb repz (bad) adc push pop je xchg pop adc mov outsb insl adc jb mov mov mov adc sbb rorb add or push in adc ja negl sbb jae add call test sbb inc popa into adc dec mov push mov fnsave dec lds (bad) jg or loop test add adc popf adc shll repz outsb adc mov sub pop fldl pop (bad) adc jmp js adc in mov xor sbb push mov icebp or push adc dec jb lea or add fdivl popf sarl stc rcrb jnp fwait aaa add pop and pop adc sarl sarb mov pop adc dec aas (bad) adc or xchg adc out out mov pop push cmp test adc lahf push pop xchg sbb fnsave icebp enter pusha push imul loope mov adc call jb adc jne lods mov add fsubrl mov jg out adc mov pop pusha cli dec jl pop outsl sbb sub shlb (bad) movlps xor (bad) in xor pop adc dec lahf leave and repz and movsb adc add (bad) hlt mov sbb push neg bswap mov mov inc push xchg push adc inc jecxz mov repz arpl mov adc xchg xor mov sub repnz and sbb ret imul xor pop mov sbb mov lea mov push cwtl push sbb mov call ja or add addr16 xchg inc pop jecxz and das pop adc pop push pop adc test arpl popf add test xchg add movsl pop or notb adc adc inc push lea pop add mov cwtl mov adc or nop adc add rcrl in mov or cmpb fldcw push adc cmpsb loopne push sbb cli inc xchg mov es pop and fildl add movsl test cmpsl mov aad mov push sarl adc mov mov jo or fiaddl or push test mov mov sbb adc enter mov xor xlat sbb adc mov frstor fmuls mov out mov loopne xor cs sub insb fistpl loope lods idivl mov shl mov popf rcrl adc fdivp or cmp mov cmp cmp mov jae jne shll nopl push mov stos or sub xor sbb jecxz mov push rol pop arpl xorl xor or pop scas adc mov ror stos xchg sbb (bad) fwait inc adc decl subl or dec mov or mov and pop xor xor inc xor mov or add xchg add inc jo adc xchg add pop xor xor adc xchg lods jmp pop cld js outsb pushf adc daa push mov or mov adcl sarl sahf rep popf xchg push adc adc xor adc cltd mov jnp inc jl adc ss mov push sub or mov or mov push das fsub (bad) mov (bad) dec in js addl add (bad) mov (bad) int nop mov test xchg or cmc xor shlb add iret xor testl inc adc push sbb jns push xlat xor mov (bad) pop jbe js add sub mov mov sbb cs das adc into jmp in shrl jmp adc xor popa jno pusha mov data16 les inc sbb dec jbe cltd mov aas scas lcall clc les lahf jne mov xchg pop and xchg cmpsb adc movhps mov push or jne aad (bad) lret ret adc xor cmp cli pop pop adc adc lds ljmp fldl adc inc jle adc dec aam xchg popl add mov add inc (bad) lock mov and les add or mov jbe push or push dec jb ja movzwl sub push inc xor jmp mov (bad) in dec sbb je cmp mov adc enter adc int3 adc sub fisubrl adc (bad) mov dec pusha shrb insb cmp in notb inc rcrl adc sbb add push int3 add popa int out andb pop (bad) cmp sti xorl mov ja mov stos (bad) adc add leave add popf bound inc repz icebp or dec mov pop ja (bad) mov int shlb rclb imul popf jp in fwait rcrb sbb pop jmp adc fdiv (bad) sbb lahf cmp adc mov in xchg xor mov push in cmc pop pop test mov jae add add divl hlt (bad) mov or repz push adc inc adc repz jb sarb je mov xchg das cmc or add mov fisttpll insb xorl mov mov mov push imul lods dec sub xchg pop adc add cmp rcrl push data16 cmp adc jecxz inc je jno add sub adc cmc push push mov xor jecxz mov inc mov mov adc push addr16 adc and psllq jae xor push mov xchg xor adc adc roll data16 ja adc cmp nop xlat or cmc iret aad imul dec mov mov mov jge movsl or dec jnp fiaddl pop mov mov push sbb int and loope mov xor daa xchg push push pop push iret pop call fildl sti loop cmp adc inc mov mov in adc pop movsl inc pusha xchg nop stos adc adc jbe repnz lea sbb fwait jno (bad) divb adc xor or mov adc lds inc xor test lea or add adc ret sbb (bad) mov nop adc lock mov add (bad) icebp cmp mov xor sbb gs daa lds adc mull adc and (bad) xstore-rng cmpsl inc adc test pop loop push adc int gs sbb lods repz lret loop insb mov cmp mov (bad) xchg mov or fistpll xchg fwait movsl lcall cltd lret fisubr push jl mov sahf sbb test fucom push sbb cmp (bad) xor push push hlt push adc xchg in inc mov mov mov sbb jno adc mov stos (bad) out mov adc rol rcrb cmp cmp lea mov out loop adc and mov mov nop pop scas push fiaddl mov adc xchg push adc adc xchg aam mov std leave jge mov loope jecxz cmpsl incl or add ljmp push dec stos adc ljmp adc sbb xchg mov mov or test sbb push adc and lahf xorl pushf xor xor jg adc adc xor in adc lds jne mov sub or jbe adc jns mov (bad) mov cwtl mov lahf adc pop fwait mov adc xchg and arpl adc xor test notl loop adc inc (bad) cmpsl and push in mov xor mov cwtl xor push sbb mov push mov jle adc mov or push and adc je xchg fwait mov icebp adc (bad) ja jbe lods pop adc outsl pusha out les add fcompl fstpt movsb add ficompl push stos adc das add repz sbb xor xor iret mov les js lcall cwtl xor mov add sub in out pop or sar xacquire loopne jne hlt mov xlat mov (bad) jno adc test repnz xor fistpll cmp jle lods mov andl sbb push ljmp xor out cmpsb inc gs or adc xchg and sbb jl clc xchg push adc aaa mov xor xchg xor xchg (bad) stos stc push cmp fsubl test cwtl pop sbb loope ret pop repz sub or mov xchg mov adc shlb ja aam adc mov cs iret nop inc mov sub aad xchg adc movntq sub sub dec dec jbe repz mov ja mov adc aas adc lret mov arpl (bad) jp cmp imul call ficomp adc mov mov add and xchg inc adc lock sbb or and clc sbb pop or aam repnz das xchg mov xchg add clc lahf movsb lcall rcrb testb lahf cltd add cmpl inc push (bad) mov and push fwait adc in lcall das loop (bad) push fs jno test ja mov mov aam lret dec jge push loop push or mov push mov iret mov aaa orl sbb adc push or adc pop cld fs and pusha mov inc arpl (bad) out test add cwtl mov jg and pop cmpsl adc push cs jmp (bad) je nop and cld add scas and push stos sub jmp mov dec push xor data16 sbb mov je aad imul pusha repz xchg cmpsl adc in shrb into adc adc xor adc xor mov xor out sahf dec xchg add push out mov bound jmp jne out mov adc cmp xor jp and je cmp adc movsb aam cmpsb xchg add cltd aaa jno adc xor loopne clc pop sbb fucom mov inc (bad) (bad) adc loop pop push inc xorl popf sbb or xchg adc repnz mov xor xor adc xchg pop pop lods (bad) pop sbb fcmove movsl adc xchg adcl loopne pop pop xchg out ret test dec or scas pop imul mov or dec arpl xor or mov int adc cmpsl lcall add inc adc sub das int into repz sub adc lods or fcmovu adc bound pop repz aas in repz sbb lcall imul cmp mov add adc push fdivl fwait mov negl daa rcrb dec adc inc jb push inc jbe pop or lret cltd scas add or stos movsl mov or or mov sbb sub cmp adc or cmp adc adc fdivr fnstcw stc adc jo push in adc jecxz cmpsl out mov ds fldenv out ret mov jle push pop jbe pop in aam jmp hlt xlat or add adc adc (bad) pop test andl int3 jmp fmuls jbe ja cmp aam repnz test lret roll test xor adc sub mov pushf sbb add sarb jo adc xchg mov xor adc sti int int3 adc dec cmp adc lret adc int3 shll aad je sahf rclb test mov hlt icebp mov lea loop inc popf clc lds je dec (bad) int adc aas sub mov xchg xlat daa xor cli sbb sbb fidivrl dec cld adc movd dec cli adc mov dec test cld std or aad push (bad) (bad) gs repz rcr icebp leave or adc mov xchg (bad) jl mov das mov mov mov cmpsb add pop pop pop jle adc addl push nop les gs out (bad) repz mov dec lret mov jae adc dec or pop inc adc adc fwait sub xchg test add insb (bad) adc or push mov add in jo adc jae shl mov inc ljmp or jbe hlt adc rcrl jo sarl jl add xor xor mov adc cmp adc adc dec jb jg inc icebp in mov insl rcll xor mov mov adc leave mov fild ss cli push sarl or (bad) jno pop push sbb add xor cmp or xchg jae mov (bad) aad sbb adc and jbe mov popa jecxz and idivb jns xchg fs push xlat cmp dec add ja dec add (bad) adc dec sbb mov pop mov add or sbb adc jecxz mov push ret push or mov xor fldt das or gs inc jecxz jle cld dec jo (bad) adc mov mov xor aad add add adc inc pop adc jp popf mov xlat rcll inc push je ja jbe xchg jmp jae jb orb jo adc pop bound jne aaa test adc inc int3 and rolb repz fs fstl mov jle cmp push (bad) stc jecxz jno or scas adc push jge mov je adc sbb ja xchg adc xor mov mov mov lretw in inc mov jecxz jo ret rclb dec fsubr adc push rcrb outsb xor es adc xor xor sbb pop (bad) repz mov jnp sti ret or subb insb xchg dec mov mov (bad) into fcomp dec adc jno inc insb repnz loope adc pop jns add xchg adc and (bad) adc pop fdivrs push xchg scas nop scas or mov xchg push push rorb push dec mov es mov arpl jno jbe int push iret dec jae xor dec cltd aaa sbb rclb popf mov (bad) mov mov jns cmp adc loope inc adc pop cmp mov test or pusha adc js fs popa fdivr cmp adc je push sub xor dec or jl popf sbb cmpsb int int3 or pop out jg imul jo or push mov (bad) idivl je jns cwtl adc fdiv aaa mov mov adc shll and adc adc adc inc testb mov jae lock mov sbb pusha adc mov es jnp adc add or in ljmp fadds jne (bad) mov adc popf cmp aas cltd or adc rorl mov loop and test pop movsb popf sbb lahf insl outsb cltd or cmpsl loopne arpl (bad) (bad) lods adc adc in and mov xor mov pop adc adc fnop fsubrl or xor mov aas and mov nop cmpsl adc jno imul fstpl jl ja xchg and ror stc in movb rcrl sub sub adc or loop fs (bad) sub jle cld sub repnz (bad) mov mov mov mov mov mov push je jne in loopne cmp xchg sbb mov jg loop fistpl jg adc cld adc mov sahf adcl cwtl mov pop adc pop xchg stos seto add mov cwtl imul fist dec adc adc sahf add xor push std mov xchg cmp cmp xchg fs daa cmp enter xchg pop adc cmp jnp sbb adc inc pop arpl jns movsb sub push cmp xchg pop jne xchg lea enter adc mov dec outsl and es push add cmp (bad) out popa or pusha jnp push or push loope cmpsl xor lcall jmp push and push ja (bad) repz inc (bad) movsb or vmovlpd jns xor fwait hlt mov xor pop mov pop pushf pop je es mov int3 andb mov adc out cmpsb cwtl mov stos xlat fisubr adc adc fdivrs sub loop cmpsb or dec addr16 in add inc inc sub ljmpw popa das xlat fldcw pusha sub shrl xchg mov inc repz rcrl adc xchg jae shr push xchg jno xchg inc rol hlt xor cli push pop adc dec ja inc cmp adc xor pop mov jo jne mov sbb mov cmp cmpsl adc insb mov adc cltd addr16 xor test mov sub lds cmp xchg push jno aaa arpl cmp ds xchg sbb inc pop popf ficomp lahf or or adc adc push sbb cmc in sbb fcoms (bad) pop nop fcmovu sbb adc cwtl (bad) leave pop lea add mov rcll and bound pop and lea and pop and adc adc cwtl inc in xor cmp (bad) add adc adc aam add sbb or out in movl sub dec xchg (bad) and and jno cmp mov inc adc lea adc out pop xorb inc jmp nop in addr16 sbb mov or pop jbe xor jae xor jb xchg sbb xlat and je das add lods sub inc out out jnp sti ret cmp xorps out (bad) loope mov cmp push repz adc (bad) mov lods mov xchg rclb xor ds aas mov and cmpsb popf inc je jp adc fbstp std xchg fistl jnp mov bound cmc sub (bad) daa adc out shrb xor adc mov cmp fsubrl insl push xor aaa xor or push (bad) xchg popa xor xor adc adc lock das adc push in loop lcall push dec inc xchg dec mov pop mov mov das adc sbb push nop cmp leave pop adc loopne adc xabort sbb repz inc adc (bad) and cmpsb test jecxz cmpl adc mov add test ret fs pop push loope inc adc icebp add fdiv pop (bad) xor mov aam xchg jp (bad) ljmp out in std paddb adc mov loopne xchg leave incl add sub cwtl aas sbb repz lds (bad) adc rorb and jg or adc adc push repz fcoms push adc add mov lods popf adc scas movsb adc repz inc icebp inc jno xor sti ja je mov pop adc out stc adc fimull movsl adc daa jmp out into iret xor repz xor mov pushf mov out cld push push loope fs popa push sbb mov mov inc or mov jbe (bad) adc test sub jecxz cltd jg std pop adc xor je out inc in sub dec xchg pop sbb mov adc jne push pop adc fdivrs sbb pop xor xchg adc mov pxor jno icebp adc je fdivr pop sbb adc (bad) (bad) cmp and pop out add and loope mov fisttpll push ficom hlt xchg mov xchg notl enter aaa pushf mov push fcoms xchg (bad) mov dec adc pop jle and mov icebp test sbb fwait repz sbb mov adcl mov into dec in mov leave ja or add enter mov pop sbb addr16 adc jg lea (bad) cmp cmp jbe (bad) or inc imul inc pop add les xor mov adc adc notl ja mov mov jmp sub or adc cmc and cmp push adc and adc adc sbb pop scas fist jno mov jnp cmp popf (bad) push arpl xor adc ffree test adc cmp aad xchg mov sti xchg mov adc aaa shr imulb xchg adc xlat mov repz push std push fdivp push push adc push jne xor xor push mov testl cwtl icebp push je adc adc ja xor stc (bad) sti repnz (bad) add or out (bad) sti in je std pop adc popf jg inc in popa dec jecxz arpl push loope xchg es sub test repnz xchg adc add repnz adc stos adc das daa mov xor bound adc adc hlt jecxz cltd push scas daa repnz mov mov mull xor mov xchg adc test adc push push pop jno repz cmp call or xchg or (bad) out call stos inc popa test adc (bad) in gs out adc sbb mov mov push jmp dec sbb adc inc push jge pop adc jg mov xor push xor mov (bad) dec adc push pop push (bad) adc push jae mov xor jge jnp dec dec adc mov push xor add lea and push mov mov xchg sahf scas xchg mov mov mov mov xor mov mov push sahf mov jp adc es cmpsb adc aaa push sbb fdivs sbb ss shufps and movsl inc sbb push dec xchg sbb pusha les push shll push (bad) jmp adc adc push push dec add popl hlt push cmpsb mov adc (bad) dec add xor pop fstpt add add stc test adc scas pop adc pop jbe insl nop les mov outsb shr sbb pop pop (bad) mov adc lock adc add or or in or rcll movsb mov sbb or push push dec jg bound adc xchg aad push mov jns adc adc popf adc ljmp jnp cmpsl in adc xchg and in mov jo dec (bad) adc cmp mov sbb xor out adc cs adc or and scas daa sub jp adc adc sbb sbb xor add jnp adc lds fisttp es adc inc fcoms or mov adc mov push adc push or adc push stc xor stc adc push gs pop mov add xchg adc push jmp lods notb mov adc and adc (bad) inc out (bad) repnz push dec cmp sbb and sbb adc fldl enter sbb ja int jmp cmpsb or sub xlat or sbb push ret cltd sbb pushf xchg xor add movsl cltd ds cmp rep push ds jmp mov push (bad) cmp adc mov inc (bad) adc sub stos or pop mov repnz sti hlt add sbb fs and clc adc or push jae lahf adc shrl inc inc iret adc test dec rcll lods jg xchg pop adc add fcoml stc fst dec adc stos adc adc or incl pop jle cmp add fwait push inc out adc sbb sbb adc add fdivrs mov sbb adc outsl fisubrl insl shll push es adc or dec or imul jmp lds dec xchg scas insl add xor mov pop test int enter ret adc (bad) push mov adc adc inc push adc add or jnp jo sbb mov adc mov adc pop xor call pop adc sbb (bad) xor xor adc mov push and sbb mov adc sbb out adc dec or (bad) adc ja or or or sub outsl push aaa (bad) ss adc xchg adc xchg mov or mov xchg mov inc adc jle add sbb pushf rol adc sub adc add mov stos lahf je cmp les adc xchg repnz mov adc or pop test scas int or or add sbb cld mov mov andl fs adc outsb mov ds adc inc into enter xchg adc mov shrb insb inc add mov mov push adc sbb sub cmp push and sub (bad) leave adc xchg sub ss adc sbb gs cmp jmp adc sbb add xchg sub cmp pop mov xor popf mov pop aaa sbb xchg xor or xor ss xchg test ljmp pop adc cmp adc mov adc and adc or jp jnp mov adc rcl adc ja cmp imul adc adc test mov inc adc ss adc mov test adc xor bnd xchg mov outsb les adc and fcoms (bad) fiadd test adc ret mov mov jg jle jge jl or pop ss adc mov psubb pop adc push dec mov inc adc pop popl sarl sbb sbb sbb xchg adcl out adc and repnz add adc or adc test dec inc int loop push sbb mov lret repnz mov adc add or jmp sbb adc out inc ss adc test adc andl xor and adc adc xor adc dec notb outsb adc mov push pop adc cltd adc cmpl jle adc inc adc sti inc fwait inc add adc lcall je loop dec out adc adc pop xchg inc or adc pop pop notb push xor int adc adc adc xor fcoml adc add push adc mov xchg inc ljmp push stos repz fbstp lods jo les repnz xchg xchg adc sbb cltd adc and jge adc sub nop inc test sbb adc jnp adc inc adc add dec adc adc fstps mov dec cld or jno xor inc xchg and jmp mov jecxz xchg mov fsts add push xchg ss mov jns adc and rclb sti pop push in mov mov xchg adc or adc adc jbe jne lret push rcll mov adc sbb sbb (bad) (bad) cmpps jl cmpsl in lret inc repz dec add sbb sbb jp popa es adc mov jge adc or ljmp repz jge jo cld adc rcll fcoml sbb sbb pop xchg es fstps push adc ret mov notl cwtl ja scas sub mov sbb enter (bad) adc sub call jns push adc std outsl push adc jl sbb cmpsb fstpl or jne out pop (bad) sbb xor lods sbb sbb mov adc push adc or inc and pop sbbb inc adc pop mov adc sub leave adc adc push das pop nop adcb and jle sbb pop xor sbb adc push push call out fisttpl dec sub mov sarb cvtdq2ps out (bad) or or adc jmp adc jge cmp or add pop test out sbb jo mov add mov bound sbb add or push mov rcrb fdivl adc jno rcrb xchg adc loop faddl (bad) cwtl adc xor pop cli mov pop cmp xchg or push jns mov and sbb (bad) pop xchg sbbb inc aaa aam xchg sbb (bad) sti sbb mov add inc aas jecxz in and push sbb or sbb sub adc xor repz cmp jo xor push lods in or jmp mov mov movsb prefetcht0 dec adc jae push cmp adc (bad) xchg sbb jmp mov or mov dec or mov orl cmpsb negl mov ficomp xchg mov push lods or jp pushf repz addr16 repz adc push inc mov scas sbb mov mov int push repnz mov dec or into mov or mov sbb in mov sbb sbb (bad) xchg pop adc movsb add jecxz add rolb les test cltd mov or mov add fnstcw push movsl fstpl sbb adc mov adc scas jbe into test jg mov or insl cmpxchg in or nop dec push push xchg mov dec sbb xor mov push adc mov or mov or ja push scas mov pop adc dec mov sub xor adc xchg sbb andl adc and jnp push mov jns add in mov pop in mov or adc cmp add mov fiadd pcmpeqb mov mov adc mov (bad) insb pop jmp test sbb pop addb stc inc sbb push mov repnz popa iret repnz mov out add call push cltd or adc add mov inc fwait adc imul adc rclb test adc imul mov je xchg add mov nop push mov add test cmp mov je mov xor push sbb or cmpsl dec cltd sbb jmp xchg or sub jmp (bad) pop in loope push sbbl dec fiaddl and inc cmp gs xor lcall push shr adc mov xchg aas xchg xorl add insb adc int3 jbe jne push dec mov bound repz fisubl in fstps das addr16 sbb repz gs inc or sbb pushf pop adc insb pop imul fnstenv xor push mov pop mov mov or or cmpsb or or adc or or mov jmp sub sub test sub bndldx pop xlat mov sub cmpsb adc and adc mov mov adc adc adc pop mov push cmp sbb mov add out adc adc adc fiadd inc sbb sbb adc sbb sbb mov jmp sub sub test sub or enter rclb rcrb repz add adc cmpsb add mov cmp add sbb mov mov adc or mov mov adc outsb test repz pusha push push aam push xor or or aam mov jno je adc adc adc sbb negl cmpsb or jle ret jo into add mov testl adc std sub sbb nop adc or jg jl int3 test adc loopne ret push mov push xor insl fbld fmull pop jl lahf push cwtl aaa loop or mov jb adc xchg into push inc jne adc push mov jae jle jge jo popa fsubl mull repz or pusha adc adc add sbb sbb ret xor jns fmuls xlat popa push mov mulb xchg int or or fabs adc xchg fldcw aam push stos adc inc negl addr16 mov arpl adc (bad) push fsts aam push jae sbb adc leave add add jl faddl sbb dec dec xor pop jbe jne adc jns inc cmc inc arpl fs js inc daa loopne jo mov push iret add mov sbb pop loop nop adc pop fsubl out bound stc xlat jnp sti insl stos outsb xchg (bad) or push imul ret cmovo outsb repz insl int dec adc in dec mov dec imul lds jne adc js (bad) aaa sub adc leave adc inc ja push fisttpll adc jp jle push inc add rcrb (bad) jle mov jge fs dec popa or leave adc push sbb or data16 add gs and dec xor pusha adc jae xchg adc jo adc push sub fldt fmull mov repz jb xor sbb dec mov adc jb lahf adc ficompl push adc cmovle jne jbe mov push adc pop cmp arpl jns adc pusha pop jno jb jae fstpt ficom sti lret adc push push adcl jle icebp lret (bad) dec repz push xchg cmpsl adc add adc push pop inc adc gs imul loope adc imul push adc adc dec inc outsl aam je add insl fsubrl adc inc push into adc adc adc (bad) adc push or dec sbb push stos push adc adc testl ficom adc push fiaddl pop ret adc jb adc sbb jo fwait jge sbb add xchg sbb mov and adc pop int adc mov adc pop int3 in push adc adc cmpsb adc out xchg adc adc mov das sbb lcall adc adc adc adc xchg add insl pop rclb jo add fs (bad) dec adc sti adc sbb push cmp mov cs mov and or jnp jp pushf call inc jg adc pop je adc add (bad) xor cmp cmp fsin push add clc adc jecxz cmpsl jg xor lret mov or adc adc adc outsl sub adc adc std lds adc push push or adc cmpsl ret cs push loope add in (bad) aas icebp jo popa xlat arpl aam imul push leave ucomiss mov sbb lret dec and jb push leave inc ret mov js inc adc stos imul xchg adc xchg push adc pop add xor or adc dec insl inc adc (bad) scas cmp jecxz xchg adcl call rorl sti mov xchg cs test xchg adc dec jns data16 inc lret add xchg adc cld ja adc popa mov repnz xor lds adc faddl pop (bad) popf mov pop adc movsb adc les leave (bad) or mov mov ja negl inc outsl lcall repnz cmp cld adc adc inc jne jbe sbb fcoms iret mov dec dec repnz pop adc adc loope jne jl jns jp adc push lods xor fistp sub mov jle jp cltd add addr16 xchg jmp jge jmp lret jbe not outsl popa push ja add test cwtl dec adc adc or add es xchg (bad) out testl xchg (bad) jge ja jecxz adc into aaa xor std xor sub adc adc test outsl inc xchg icebp (bad) jae adc jno jb repnz jl out adc loope addr16 or jae lret and fdivrs sbb fdiv xchg xor adc jns cmpsl xchg adc push vaddsubps adc adcl add aad inc dec ror or shr mov cmp adc imul xchg fwait js adc adc nop adc repnz and stos adc jle and fs gs (bad) rorl ret sahf adc add push in pop mov fimul inc push imul sti adc add or push fist add jmp imul not rolb xchg adc aaa imul mov fildl cmpsb mov adc adc mov (bad) ss js stos add into cmpb jmp pop adc jns rclb icebp xchg clc mov adc outsl adc roll sbb (bad) xor jp je jl or push sbbl out adc popa lret add sbb fdiv sub cli adc adc adc fbld pushf outsl sti lret aas adc push ja ficompl xchg jbe jnp adc popa (bad) in test adc jns push adc rcll adc jne adc jg adcb loope iret into add imul jae (bad) scas insl lds test mov inc adc jp test push mov lds neg adc repz rcrb pop push in jge aam mov pop mov cmp popa adc sub insb out adc (bad) fidiv mov out push mov scas adc fcmovu adc and and cmp inc pop sbb pop jbe arpl stos imul mov rcrl loope add adc ret insl je push ret das adc stos adc bound adc incl adc out xlat fscale adc sub insl cmpsl mov call fisubl sbb jbe cmp sbb adc push cmp (bad) xor push adc or sbb or xor inc xlat movb fs rclb (bad) cmp xorb int3 pop arpl or leave jl dec mov imul int jl push adc stos push dec xchg popa inc fbld adc lret push push xor pop (bad) call fwait call sbb push dec pop adc jb rorl icebp xchg cs adc xchg fnsave mov adc add gs je mov pop sbb adcb divl pop adc (bad) out bound adc stc adc outsl adc inc (bad) jb dec inc in xchg ret fsts adc adc jecxz enter mov jnp adc repnz adc scas adc pop adc je pop ja lods rcl jae icebp mov mov bound mov adc lds mov lret adc outsl and adc adc cltd adc scas adc pop or xchg (bad) ficoml adc xchg rorl inc je fcmovne xchg pop inc sub psubusw add xchg adc iret jl fistp sarl fldenv adc jl jnp adc bnd inc jge adc sbb adc into push push jno inc pop aad sbb inc aam adc xchg (bad) lods adc jb or cmp pop int add rcrl iret or mov sbb ret fadds ss or lcall ja fsts std fdivr adc xchg imul jno roll std or sbb add flds adc jg les lcall lock adc push sub cmp push adc jg dec cmc adc jl add rol cmp adc je or rolb movlps cltd adc adc adc ret sti adc mov jle mov cmp adc and xchg dec dec stos cmp adc dec push lret add pop pop push adc add push mov fisubrl adc je jae pushf pop bnd inc pop inc adc mov rolb pusha sti push mov outsb loope push adc adc outsl adc xor loop jecxz jg notl loope xchg into ja pop adc dec js pop adc adc stos aam pop repz xchg test (bad) sub addr16 movlps shrb jp cmp adc sbb mov stc movlps addr16 pop adc into std inc push adc adc nop insl inc mov addl lds sbb gs data16 iret repz pop popf adc test call mov adc push xor adc insb mov jl in outsb ja adc adc adc (bad) cli icebp adc xchg lods sbb ja push add shl sbb adc xlat addr16 jns and jl lahf push lahf add aas in pop jo jg adc jge lods popa sub adc pop adc loop adc jnp lret test mov mov sbb dec mov pop or sbb pop das cmp je cmp adc pop rorb adc sub imul push imul pop jo in adc and lret adc sbb shlb js imul je sbb pop addl stos icebp jae pushf adc adc push jne adc sbb pop fstps adc or mov out adc adc inc sbb repnz jnp adc lret into add (bad) adc adcl aam adc sbb adc bound jo aam adc adc jmp cmpsl adc adc mov push adc ljmp push adc adc sub adc adc fwait or test icebp adc imul adc jae adc adc adc jne adc repnz push fcoms xor das adc ljmp inc mov rcll adc adc icebp adc (bad) notb dec push jbe pop adc adc adc adc cmp sub stos xor adc test fidivl dec adc push adc sub sub out sbb popa push adc adc std adc je adc das xchg adc add out pop jno adc pop adc push fsts adc insl xchg aas push xchg scas push (bad) adc loope mov adc outsl cmp jecxz aaa scas sbb movsb lret mov mov out fdivl or add cmp sbb adc push stos jnp cli pushf push xchg adc jl int3 jmp adc adc pop mov adc cmpsb aaa add sbb data16 out addr16 iret scas nop int3 icebp sub mov dec adc adc popa mov sbb sahf adc mov adc pop inc push jl jge jle std rclb jmp jb adc lods adc inc adc popa pop adcb rclb mov int3 test sti pop push push pop imul dec adc xchg adc adc rclb sbb inc bnd out adc mov int int3 sbb scas notl xchg adc xchg adc pop jb adc adc cmp loop loop adc (bad) mov loope sub adc adc ss fiadd out (bad) icebp add push cmp pop cld adc std int3 xchg add ret scas iret ljmp xchg rclb pop adc adc pop fidivl cmp xor cld adc adc xor outsb std adc movsl mov cmpsl add push leave adc stos adc out adc ja adc or adc xchg cmp adc mov adc mov mov in push insb sahf pop pop adc or movsb lods cmpsl adc neg lahf pop hlt xchg adc adc inc jo repnz test mov (bad) sbb sahf or adc pop ficoml daa xchg or outsl out pop sbb adc pop push add cwtl push adc cltd push in pop xor test push punpckhbw sbb sbb adc add rep push mov jmp repz sbb sbb pop movlhps xchg cmc insb or dec or stc pusha sti adc fwait or js xchg push push nop (bad) or adc xor std or pop push loopne bound xor inc movsl adc es sbb (bad) jmp daa or mov or adc xchg test loop mov mov mov push jg mov fdivrs add stc faddl sahf pusha push out push or call push (bad) cmc xchg or sbb clc xchg lods push add lret sbb sbb (bad) cmp pop sbb sbb lret adc outsl mov repz jge cld sbb add fwait add push inc adc mov push adc push loope adc ficoml in sbb imul xor adc mov and mov adc push adc pop out adc iret xor lcall adc aaa xor imul or mov stos add fwait lods sbb xchg push mov add jno or mov lods or (bad) or xchg sbb push rorb adc and sbb pop popf repnz sahf xor nop cmp (bad) mov add mov daa repz add or sub sub adc jns add mov fdivrl cmpb out mov xchg adc mov je mov cwtl adc (bad) push test pop daa nop mov cmp mov fsubl adc sbb or adc mov push cmpsl adc or lods add fadds jo add xor mov sub adc int3 mov adc outsl mov xor test xchg adc (bad) adc loop iret mov lods pop or mov push xchg jmp push mov mov iret sbb test mov mov or fwait xchg mov or cli adc inc or mov mov adc sbb inc cld adc rclb pop adc xor add jnp push cltd lcall aaa sbb lods adc mov sbb pop push out (bad) repz inc xchg adc push or add xor adc scas fsubrs sub mov adc cmpsb mov movlps in adc push lahf pop andl adc adc and mov mov mov sbb adc aam scas adc mov adc or pusha aam push mov xchg add pop test adc add sbb mov lret jl shlb mov insl or adc mov xchg xchg adc stc adc cmpps nop lcall or loope repz iret out add and push jle (bad) xchg add lods sbb jo mov push push imul xor mov cmp sbb loop push out ja sbb adc sbb out add add jae int3 adc ds adc or mov mov cwtl mov mov xchg in adc test stos xchg stos add adc mov mov mov mov test stos sahf lods pop scas subl stos or jl scas sbb cwtl lods sbb xchg adc mov mov mov mov stos add mov sbb nop cmpsl xchg cmpsb aam xchg adc mov cmpsl xchg sbb xchg or mov mov xchg mov mov repz xchg lods out mov mov xchg mov mov add (bad) or or cmp sbb cwtl mov add adc xorl xor xchg mov mov mov mov mov pop mov mov mov (bad) mov je test sbb adc loop cltd adc adc out jmp inc loopne fwait adc adc push mov out into icebp lds push adc outsl test adc lcall cmpsb adc enter pop iret je push adc fcompl xor add add add jo pop adc adc inc adc (bad) adc adc adc pop mov insl pop fsubl fwait lret jl xor jne dec xchg adc jl sbb jno xlat ficompl ja push sbb dec fsts fcompl adc pusha add (bad) adc adc add pop jge adc stos push sub inc rclb mov jbe iret xor adc lret repnz adc adc adc test push lcall pop (bad) xchg push adc adc adc bound fcmovnb adc adc adc adc pop cmp sbb stos mov leave adc dec (bad) int3 pop gs dec pop jb lds xchg adc adc push cltd adc xchg push adc ss pop into fsubrl repz xchg movl lret mov loopne push xor xchg adc adc adc jns shlb fdivl or push cmp (bad) popf adc or xchg iret lods adc adc adc xor adc xchg and dec add adc out imul cmp cmp fs adc dec mov jae pop adc fxch call pop adc and inc ficomp sbb mov add test xlat adc sbb in stos add adc adc adc loopne adc movsb sbb lock popa and repnz out cld adc adc adc mov sbb adc fstps adc fidivl and data16 adc adcl adc mov push (bad) je xchg test aaa adc fcmove rclb test inc scas bound adc mov mov fucomp notb xchg insl adc or int3 fcmovnu repz mov cld adc movsl sbb in dec inc sub adc adc xchg clc adc xorl xor (bad) fcmove pop in fsts adc mov mov pop ja xchg test and pop adc fsub cmp imul imul mov adc adc adc mov mov lcall loopne sbb adc into iret daa jo push push test add adc mov lods xchg mov daa xchg addl adcl adc adc jl dec adc adc sbb adc jo idivl pop adc jo adc sbb xchg jl mov adc sbb xor scas pop adc adc imul popa adc or int3 or lcall and adc imul rcll sbb adcl adc jno mov mov mov adc test dec sbb sbb pushf push jnp int3 or sbb pop bound adc adc jp out push adc movlps or adc leave inc and mov xchg mov xor adc push fistpl or mov adc adc adc inc pop or cwtl rclb cmpsl repz repnz bound cmp add sbb test mov push into fild lds adc adc adc or inc repz gs loop adc int3 arpl addb pop or add aas mov lret adc adc in xchg adc pop test nop dec lret inc push dec cwtl movsl js (bad) jae hlt nop imul ret scas ds (bad) mov jbe or fidivr adc iret lret ficom outsb pop pop xchg fistpll pop jae rorb out adc (bad) push pop aam or adc popf push fcoml adc adc dec adc rcrb lods gs out or (bad) adc or adc push (bad) fdivr fsubrp fstpl adc fidiv cmp push xchg sub sarb (bad) (bad) aad aas adc xchg test pushf movlps sbb into lret rcll ret sahf adc aam mov mov hlt out dec jecxz cmpsl jne lret cld pop adc dec adc xor pop das xlat fisubrl adc xor loopne fdiv push adc xchg notb fist cmp add sbbl mov xor leave push add es lock mov adc adc adc cltd pusha int3 adc or add xchg int dec arpl adc sarl fsubrl adc fdivs adc outsl adc adc and adc jnp mov das scas push adc and negb leave pop xor sbb adc adc sub aam xchg push pop (bad) adc push push lods or out ss adc sbb adc sar lret mov or rclb gs imul cli adc mov ficoml sbb lods pop pop adc inc xor or mov sbb mov adc ret lret xchg adc cmpl mov imul sbb xchg mov sbb mov push mov cmp push add ret sbb mov add mov int adc adc lahf jae daa adc (bad) adc jbe enter adc popa lret arpl jl pop das cmpsb adc cld adc adc test and cmp cld mov xor adc mov cwtl mov jp sbb (bad) lods adc repnz popa mov adc fstpt jle jmp mov push adc (bad) xlat test js add pop lea movsl jo adc mov adc fwait cmp xor outsb stos pop repnz adc jno stos xchg adc adc adc loop ljmp adc ficomp icebp mov mov cli or fwait mov add mov lds lods xchg pop and or adc adc lahf outsl xchg pushf insb sbb cmp test stos pushf fisttpll inc fnop fidivr cli fisubl out adc popa popf sub (bad) jae xchg adc fist adc and sbb add push xchg in pop push inc lcall mov jmp add nop sti adc adc or test adc and ds pop sub inc fwait mov sbb xor sub cmpsl test pop adc xchg rclb xchg ret pop adc jo pop push jp jns mov lea add xchg andb or adc adc enter fimull xchg js fdivs or dec jae or fstps mov fisub adc adc movsl sbb pop adc sub repnz test pop adc push repz add jle cmpsb mov jno adc adc jg jl xchg sbb adc adc lret pop and adc push adc cwtl leave (bad) pop aaa jbe pop sbb gs shl mov xchg jb sbb sub adc (bad) sbb xchg cmpsl pop sbb adc (bad) dec adc adc repnz notl push inc adc xchg cwtl lock sub je cmp mov adc push or xchg adc add or ss pop sti mov out popa dec adc xor mov repnz xchg xchg sbb into test dec pop adc adc push mov cmp xor gs out xor add sub add scas adc and lcall xchg icebp mov mov lret push (bad) out das sbb adc push inc inc xor cmp cmpsl lds mov add xor adc jno pop mov iret pop lock sub add repz xor pop mov xchg adc adc push pop rcrb inc add dec push push push add fild mov adc shrb dec daa lret mov sub mov cmpsl mov cmp push add sbb es adc push test or gs out xchg lahf mov add adc loopne push adc dec or cmp popa adc in cmpsl xchg adc (bad) sub adc int or sbb add sbb adc je fstpl arpl adc adc adc inc mov adc adc push ja xor mov xor jo xchg fsubl adc cmp sbb lods add mov adc ja adc or repnz adc lea icebp adc push ja imul cmpb mov xchg mov adc mov cmpsl rorb xchg push inc dec adc lods repz mov loopne push shll mov adc adc idivb sub cmp add (bad) fist ret inc (bad) adc popa pop mov andb sahf pusha jp mov pop leave fcoms adc insb pop mov push sar outsl inc adc adc pushf adc ss lcall adc lods inc sub and jmp sub push xchg enter sbb mov adc sub in cmpsl bound je cmp movsb movsl inc adc adc jno jo xchg adc xorb jne fbstp push adc xchg (bad) mov mov ja adc pushf iret mov pop adc inc adc pusha adc adc xor popf adc xchg mov sub ljmp add xchg adc into xchg es xchg jl adc iret xchg (bad) popf adc lahf adc jge fcoml adc (bad) mov mov arpl jae lcall xor sub adc adc xchg imul mov pop adc adc pop cli xor add inc adc dec adc cmpsl test mov mov fwait adc adc adc push cmpsb or fimull mov mov lahf adc into fcoms adc pop adc adc stos push into repz sbb movsb adcb fidivrl mov adc fiadd adc adc mov outsl adc jne shl test dec cld adc ss jmp popa adc pop arpl sub mov mov pop fisubl mov xor ja adc sub adc adc mov lahf cmp or adcb stos dec ror adc sbbl adc dec adc adc daa adc or (bad) jp push adc jbe sahf adc lahf leave hlt xchg adc loopne push push adc adc jbe adc add jp (bad) fmul add sub insb iret cmpsl adc ja test push adc sbb nop and add xchg iret adc pop hlt adc xchg mov adc adc fstps push pusha cmp iret movsl adc fstpl adc add ds adc sub or sub inc adc dec fs push inc popa mov fcoml mov stos sub adc pusha push adc adc cmp push jno adc xchg icebp lods pop add stos cmp adc inc cmp adc adc sbb sbb js ja gs adc adc mov fs jg adc mov adc mov fld adc movsl popa adc cltd hlt into push cmpsb mov adc scas fwait add adc adc lea mov stos cwtl adc mov mov cmc mov xor adc sbb stos sahf push fdivrp pop adc ret fwait rcrl int dec push leave adc inc adc incb ja ret jge loop push pop adc cmp sub leave int3 xchg adc push mov adc and insl jnp popf cld out jae mov mov cmp inc push sbb cli fs dec sahf dec cmp out inc push adc test dec icebp pavgb arpl movsb jmp mul out mov jae sbb jle negl pop (bad) pop jnp fs inc inc lods dec adc in pop in adc jl lods int or cmp arpl adc dec jnp in dec rcrb cmovae div dec dec push outsl mov push les pop arpl insl jb mov adcb in jge insl jb popa arpl notl inc push adc lcall push mov mov push cs cmpsb mov lea mov adc jecxz les out inc shll test pop fldt dec push (bad) cmp sub push inc out addr16 mov pop in sbb add dec out fs in rclb mov loop mov insl adc outsl mov inc adc lods jl mov clc inc (bad) adc lret cmp mull notl scas xor mov lock gs packsswb fs xchg inc lret push inc cmp dec ret stc mov mull cltd add push adc jge cmp or inc testl inc arpl adc mull xor mov xchg adc push add push pop fwait std fcomi sbb popa stos negl add mov nop add stos shrb sbb repz mov or add sbb adc lods adc mov scas sbb adc add cmpsb or sbb cmp xchg mov add or mov sub mov or shrd mov sub add and stos sbb pushf adc mov daa add mov or pop mov aaa add pop cmpsb adc adc rorb sub mov push xchg mov xor mov mov or mov aas adc repz mov mov adc sbb mov add sub adc aaa or mov mov or sbb mov and or mov repz test sbb push lcall pop mov cmp mov aas adc pop mov push out lods or push cmp push xchg push or push sub cmpsb pop pop add (bad) mov cmp mov or pop mov mov and movsl push es stos add or repz mov or add mov mov and stos mov adc add adc or add pushf mov adc pop shlb add or and mov out nop mov lea push ss or adc mov aas adc push xor lods pop movsl add sbb xchg mov mov mov cmp sbb mov repz and das or xchg jne and mov popf and xor xchg fwait mov mov adc add lods mov xchg dec lea and rcll push and cmpsl popf xor or je test add pop scas pop adc sbb daa xchg push push xor push add pop and test xor sbb and nop/reserved push stc mov push add xchg xchg mov push aas or mov cmp lcall xor mov cmp aaa add cmp mov (bad) mov rolb add add or sbb adc stos xor sbb and test xchg aaa sbb int3 adc xor mov sbb rcl sub mov mov test push das pop pop xchg or xchg and adc mov push sbb cmp scas add xor sub sub mov cltd sbb cmp cwtl xchg xor mov cmp xchg push ss sbb adc sbb movsl mov and sub cmpsb pop inc sahf or xor mov push or adc xchg lods ret mov adc or dec sbb mov mov pop aaa pop mov mov cmp inc sbb push pop inc xor mov and lods and stos inc and mov pop cmp push adc xorl sub sbb add add adc scas xchg mov adc sbb xchg add adc sbb cmpsl xchg mov push add add or cmp mov or lcall ret sub das push movsl jecxz push or pop in sbb push sub xchg test into xchg or xor mov mov (bad) ds and push mov mov sub mov mov inc or cmp insb (bad) xor or sbb ds pop cmp xchg adc shrb movsb in std test sbb xchg add add movsb cwtl push adc mov and ljmp xchg test xor mov sbb sbb pop test clc mov fwait daa sbb mov xor daa sbb addl pop jno xor ret sbb pop daa fisttpll pcmpeqw or or add xorb or cmpl and test mov mov mov push fwait movsb out sub stos pop and mov add mov or add mov or adc rsm mov sarb or mov mov add cmp mov fnstenv mov inc test adc out mov pusha or mov sbb test mov pop mov sub mov xor pop pop push and das push and adc sub pop mov mov cmp adc adc sub and mov jecxz xchg out adc adc movsb mov and dec xchg push repnz sbb lods sbb sbb xchg mov sbb sbbb adc fsubl xchg or lcall roll repnz decl mov sbb or xchg xchg lea setae adc adc or add dec jecxz mov adc adc jb xor scas xchg mov push and mov adc repnz je cmp xchg mov orb lret cmp adc stos xor or lea mov mov or add sbb repnz sbb sbb lret je mov add lods or pop test sub in ljmp adc mov push cmpsl pop cmp sub hlt add sbb sub mov adcl adc xchg mov or sub aas or adc add pop jno subb sub scas sbb rorl pop mov mov stos sbb pop or mov add fnstenv test push test add add mov and push lea or sbb push mov or repnz add cli cmp xchg pop ds mov push xor or sub sub in sub mov sbb sbb adc cmp mov nop mov mov add or stos andb and fs lods xchg pop push adc xchg and test mov (bad) adc adc and xor push pushf xor push iret mov cltd mov pusha adc scas add add (bad) sub push push pushf pop adc sbb xchg xor and cmp cmpsl ret cmp pushf adc xorl mov sbb repnz jecxz mov adc or sub nop cmp xor sbb popf mov andb (bad) and orl aaa into inc cli mov mov and addl dec orl adc sbb mov mov cli mov jecxz mov xchg sbb adc xor lods sub or push and push mov (bad) or test add xor test xor sub xor mov jecxz mov scas pop pushf mov lcall (bad) test stos or sub fistpll and or cs repz add std int test imul xor mov inc xchg pop adc sbb mov int scas mov or lods xchg daa rep sbb adc adc pop aam pop rcrb or push sub stos lea (bad) sbb fcompl add scas pushf repz add sbb sbb or or push lret xchg mov cmpxchg sbb pop mov cmp xor addl mov scas (bad) fs jecxz and adc add adc xor or ret xor sub xlat sub mov pop aam xchg mov adc pop xchg sbb test mov xchg sbb push scas xor xchg sub adc lods xchg or call repz mov sbb ds adc mov mov sbb push sub mov add sbb adc xchg test enter and xchg mov adc psubusb cmp repz das adc int3 xor aaa sbb push cmp mov paddusw cmp lea add or sarb xchg cwtl adc lcall sbb add mov xchg adc mov push xor add push mov adc sbb xor add sahf mov sub jno repnz and andl jecxz adc pop cmp stos jae xor lea pop xor pushf and mov cmp mov mov sbb dec xor xchg lods jecxz sbb movsl pop add add push scas xchg mov hlt sbb xchg test daa push mov das xchg pop sub repz mov aas adc xchg fwait or aam iret adc rclb es xchg sbb dec mov test xlat pop xchg add xor fwait mov lea and mov add add push dec je mov sub test or mov lea sbb add xchg mov adc xchg mov pusha std xchg cmc test pop je push into mov push cmp (bad) or and popl pusha or xchg pop roll and xlat adc cs sub sub xor adc repz mov dec xor lods nop out push cmp or push pop sbb jmp mov adc adc nop movsb or repz sbb xorl or rolb popf and in adc push sub pop movsl sahf or or adc cmp mov adc and push add xor add mov ds sbb cmpsl sub add mov adc sbb sub add xlat movlps xor mov adc dec movsb dec adc add sbb xor add add xchg push mov xor mov inc cmp add mov adc adc sub test lret pop xchg adc or sbb pop adc xor pushf adc sbb push add add dec imul adc mov adc repnz sbb aaa add add (bad) lcall sbb or mov cmpsb cwtl and xor inc test lea fwait add sub (bad) mov xchg pop add rorl sub push mov cmp jno adc sbb scas sbb sub sub and shll scas adc sbb cwtl test xor add mov mov enter xor cwtl mov add pop mov add add xor mov xor inc pop adc adcb push and add sbb adc movlps sub and pop mov or jno (bad) push mov adc mov add cmp lret je sahf movsb or and cmpsb repnz inc or mov xchg xor mov sbb test and and and insb inc add sbb sbb lcall je push cmp das adc and repz sub loop push test jecxz sbb cltd adc mov sub add pop or das xor mov dec es mov pop dec scas add aas xchg mov xchg and xchg adc and test xor mov in es inc rorb mov or mov mov xor mov mov mov or add cmp sub sbb add mov stos or adc int xchg movsb adc aam mov push daa pop mov mov sub push mov adc pop xchg stos mov mov mov repz lahf sub add add xchg mov mov pop push cmp and dec xor adc mov push and lods sbb mov add mov mov or adc sbb add (bad) insl pop or bt add mov push add or mov push xlat xor xor mov lahf cs adc repnz stos sbb adc mov or xchg push push add fmull mov xlat xlat (bad) aaa push adcb sbb add pop mov xchg sub jecxz movsb xchg cmp adc xor mov xor adc fwait mov (bad) xchg adc xchg cmp and pop rorb and repz cmp xchg add add mov mov cmpsb pop sub or lods and cmp adc xor mov mov pop adc sub mov sbb adc pop incl pop cmp (bad) or add dec xor cmpsb lcall sub sbb cwtl or mov xorl lahf mov movsl xchg cmp lcall (bad) sub es or xorl popf or xchg mov or lods adc xchg adc sub xchg add pop adc add or xchg movsl or and sub sbb push adc popf add adc mov sub loop repz mov and adc pop ret test xor or xchg mov adc sub mov xor sbb mov cli inc pushf cltd sub xchg test push sbb stos push dec shrl pop xor testb xor mov cmpsb imul sub xor lret mov aam xor and add or mov cmpb mov add add or sbb add add mov and mov mov xchg rdtsc (bad) or mov or xchg pop xor dec pushf (bad) mov adc ds add test add setl or push test test mov adc xchg sbb mov fwait or hlt add mov mov or mov cmpsb je pop or pop xor sbb mov (bad) aas call lods add ret lcall and paddsw xchg xor mov xor scas or cmpsb andb test xchg (bad) or push pusha xchg mov xchg mov adc mov repz sbb or dec sti or sbb sbb mov mov or andl sbb and push adc xorl xor repnz mov aas add or mov mov push xchg adc xchg or pop popf nop xchg cmp test xchg rolb aaa fidivrl adc lea xchg subl adc add adc add add or adc inc xchg sbb lret xchg and dec repz push xor and pop add sbb mov popf scas stos pop add cmp add stc sub or adc lods xchg adc or mov pabsd sbb add jne or and mov sahf mov adc fstl mov adc push scas popf pop xor test sbb or xchg das or xchg inc mov sbb sbb push fwait shll add or adc lcall dec mov xchg mov adc sbb xchg scas (bad) adc cmp mov scas sbb or mov sub xchg or sbb xchg sbb add movsl (bad) xor lcall movsl adc mov mov add mov sbb mov mov add (bad) xor cmpsl or dec sbb adc adc mov lcall sbb and mov adc cmp or stos sbb inc adc push jecxz cmp sbb cmp or or push push test lods bt and sbbb mov data16 jecxz push mov adc sbb cmp sbb movsl push lcall xor mov add dec adc lcall adc pushf mov add or mov or shufps jecxz sbb xchg cmpsl pushf pop push mov sub mov add sub or xchg adc adc adc push add mov and add add add add add adc and cmp or push sub out adc aas xchg inc (bad) xor mov jne mov lods or mov aas mov add or (bad) lds repz and push movsb or repz push scas sbb inc push mov es cmpsb adc xchg cmpsl add cs sti mov xchg sub movsb popf pushf cs lods push mov add mov add adc adc test cmp jle,pn adc or mov push push sub jb fwait xor mov (bad) or test inc xchg xchg (bad) aam sbb fwait stos push test or or lahf stos sbb pop mov xor mov stos add daa loop or cmp xchg adc mov sarl or add adc xor dec mov sub mov add sbb xchg setae test mov mov inc aas lahf lods sti adc pop pop sub or sbb mov add add test cwtl popf roll or adc sub or test mov push sbb push sub mov (bad) repz in movsb push xor add pop fwait or inc sub sub pop pop sbb mov add cmpsb or pop scas and aas pusha je mov insb dec xor and or push lods mov aas or and add pushf cmp dec mov pop mov mov sub mov and aad call or pop add popa adc add mov mov or jmp add or mov and xor sarl xor add sbb mov stos or push data16 mov cmp movsl or mov or pause mov mov pop sbb xchg adc add mov adc xchg scas lret mov sub adc aas adc or mov mov mov rclb sub add pop aaa fs add adc mov inc and mov pop pop add mov leave daa adc sub lods cmp adc cmp add mov cmp adc xor xchg pushf fsubl or or adc xor pushf cs cmpl popf sbbl xor sub (bad) lea nop xlat xor ret repnz dec mov and rolb add sbb lcall adc movsb sbb dec pushf mov adc adc mov mov ds popf xchg adc and mov mov adc adc or sbb adc pushf sub setae sbb add mov mov pop rolb mov push cmp sub inc add inc xor pop test mov adc test xchg fdivl popf mov sub test adc xchg test xchg xchg xchg sub pop xor mov and dec adc adc add pop nop cs mov and mov aas sbb or push stc cmpsb lea lahf popf sbb or test idivl adc sbb or adc mov (bad) xchg mov and pop ss movsb ret xchg adc aam repz sub sbb adc or out jbe (bad) adc stos push xor mov add pop scas adc push (bad) repnz mov inc repnz sbb out pop das (bad) sbb popf add adc adc ret or cmp insl add and into leave movlps lods add push mov or (bad) sti or sbb cmpsb sbb xchg lcall or mov loop clc adc push fwait push mov out cmp adc jmp mov xchg mov push test pop or and add add xor test insb and adc mov mov mov or sti push or or pop mov adc movsl adc dec adc insl adc icebp jge testl adc (bad) push adc inc into (bad) adc or pop out (bad) pop dec xor pop mull jmp push pop jne cmc nop icebp jecxz adc mov push lcall pop out adc add xchg out jne loope sti or fisttpl jge (bad) push outsl or ret mov dec jmp dec adc xchg lock jae repz loope cmovp adc adc out push push push test jne imul movsb cmp push repz adc out arpl pop in xor pop mov outsl ret cmp pushf repz in gs out xor out jb repnz loop pop adc imul out adc add addr16 negb pop inc mov xor or inc (bad) adc jne mulb dec sub push xor adc or adc icebp and push loope dec lock jnp sbb pop push pop xor adc or jno repnz sbb loopne icebp jne and out pop (bad) dec adc mul or scas adc add push lods js lcall jecxz push adc (bad) pslld adc ja jecxz push lcall adc dec test adc pop lock popa scas dec adc dec in addr16 pop mov adc push push adc jg mov push movsl adc add std dec mov dec cli jns adc in es adc cmpsb mov or je pop mov adc addr16 mov cmpsb sbb es stos sbb adc rdtsc sbb and dec enter add or or push mov mov sbb or mov sahf in or mov jmp pop test jns (bad) cmp pop fcoml cwtl add rclb push sbb push add mov test adc popf xchg mov fwait xor aas in es mov sub xor fnsave push mov or mov mov mov adc xchg sbb aas add push xor lods shld inc or xchg repz or call shrb sbb adc xchg adc adc xchg adc adc sbb popf pushf mov sbb pop mov adc sbb call fsubrs imul xchg xor cmp cmp adc adc xor stos andl or xchg daa adc ret out pop or mov ds pop adc dec mov movsl cltd das mov cmpsl mov adc sub add repz cmp mov shlb xchg jne adc sarl add or sbbl dec adc sub mov adc pushf lods mov add sub adc mov popf xchg repz adc aam sbb or or adc mov jne dec enter cmp or adc mov xchg mov scas xor push add jecxz stos or stos dec pop dec pop or sahf out pop and sbb add sbb lods sbb add enter mov divl push fsts mov scas (bad) daa sub lea adc and lods push xchg dec adc cs movaps pop cmp movsl mov pop dec add push mov add mov adc cmp adc or mov cmp push or adc mov pusha dec push and push push lods adc xchg aaa mov mov sub lods das es sub adc movsb xor shrd pop lods push sub movsl adc add mov mov adc adc push cmp mov mov jecxz sub popf mov cmp mov add push add or pusha test sbb stos rcrl das xchg add sub add xor mov or test mov xor add repnz adc add or and mov fdivl xor adc pop mov sti push mov adc adc dec adc cltd mov aad mov push nopl mov and pushf xor cmp add and sbb dec xor xchg push outsb sbb mov sbb or pop add cmp lods or add sub pcmpgtb and sbb xor and cwtl es fdivl mov scas mov loop jmp mov mov push mov and sbb and in cld adc add push sub sbb es out sbb mov mov xchg lcall cmpsb pop push pop mov sub pop cmp xchg sti (bad) adc scas mov cmp add mov add nop xchg add sbb lods pop das or xor mov pushf in pop add cwtl aaa sbbl pop xlat xchg mov push xor or push and mov cmpsl add addl mov add xchg push xor cmp inc adc cmp cmpsl andb ds and inc lea sbb mov cs mov repz aam lahf cmp mov inc cmp or add or xor mov xor adc push or mov adc mov inc mov xchg sbb cs mov sub add lcall mov ret test mov cmp xchg adc movsb xchg adc fdivrl lea or pop mov mov push cmp popf add adc add rcl adc xor or mov mov pop cmpsl and or test (bad) (bad) das sbb repnz mov sbb int3 push cmpsl xchg cmp dec adc lahf or mov xchg xlat (bad) adc add mov or (bad) mov pop dec or mov mov enter sub adc pop xor mov adc adc sbb mov mov stos or adc xchg inc repz mov movsl xchg fcmovnbe push sbb lcall mov and add sbb push and pop mov sbb add sub sahf add mov sub push mov xor je lods add or xchg aad test into repnz fcomps adc add or mov xchg es pop leave mov aas roll xchg (bad) mov adc std or lods adc add pop xchg es xchg xchg fwait daa sub jecxz lahf jo rdtsc adc movsb or pop adc je mov scas xchg fs mov push xchg cs xchg push repnz repnz and push adc xor sub mov sbb cltd test lods pop test mov xor mov cs inc xor xchg test add repz and mov xchg mov or rorl mov cmp cmpsl sbb test xchg orl sub sbb push adc add mov iret adc popf xchg adc mov sbb add aam adc xchg scas jecxz push sub lahf fcoml aas sbb xchg sbb seto test test sbb mov xchg and popf or hlt push cmp sbb repz adc hlt adc sbb lahf movsb sbb sbb ss xor xchg mov mov (bad) mov jecxz movsb add sub xchg lods adc mov sbb and add cltd adc adc lea mov sub adc sbb xchg sbb sub call cmp xorl mov and mov mov adc mov or roll mov adc add or mov sbb or ljmp xchg cs adc adc xchg movsb or push push stos sbb push adc mov sub scas jns or xor xchg mov cltd inc or push aas cmp daa adc and xlat adc ds lahf sbb fs jecxz mov add mov mov cmp repnz repnz cmpsl (bad) xor push mov xor dec orl and mov sub je mov mov or jbe dec or cmpsl test (bad) rcrl adc mov sub xor push xlat mov mov push and adc es lds mov mov rcr sub ljmp sahf scas add dec xor sbb xchg mov orl push xchg xchg movsb repz or or aam add sbb add adc fwait mov xchg adc add sbb xchg es or scas or adc pop cmp lcall or stos add pop or xor cmp mov add cmpsl adc repnz add cmpl sbb xor inc sbb adc mov fisubl adc add ss scas or xor lahf xor add xor adc sbb lea cmpsl push add and xor cmp out adc repz add sub dec cmpsl push pop cmp adc xchg mov push popf add sbb je comiss aas pop add pop push push mov add adc and adc fmull leave repz std pop negl jmp sub or cmp mov dec adc add or push and (bad) sbb add cmp adc sbb lea mov mov dec and add sbb or xor push daa pop dec push cmp jmp mov sub mov and add lret cmp mov cmpsl pop adc cmp cmp mov or xor lods add and xchg mov nop xor repz das (bad) mov orl xchg cmp or pop mov xchg and mov cmp xor repz sub or push lock cmp mov sbb sub push sub mov mov xchg push xor mov cmovae aaa or add aad or cmp sbb popf and test nop mov repz xchg push test (bad) call adc lods adc sbb sbb mov mov jge adc cs xchg std add test adc adc pop xlat mov xchg sbb mov xchg nop sbb das or sahf xor dec inc xor or pop stc cmpsb or dec or fsubrl inc ss mov adc or sbb in or adc add repz sbb pop rcll and adc gs dec or add xchg mov lods (bad) mov mov or or fwait bndstx cmp cmp xchg sbb lcall fldl rcrb mov xor repz daa add cwtl fwait add xchg push or and adc xchg cwtl xchg cmp pfrcpit2 mov ss mov sub cltd xor es pop and (bad) sbb xchg xchg adc adc mov mov xchg mov mov sbb adc push xor nopl or xchg add xchg xlat ds xor je add pop push adc or add sub xchg cwtl rcrl mov xor test adc and subl push add ss scas add and jl (bad) mov adc xor nop mov scas push inc cmp lods add adc jae xor sbb mov xor mov movsl outsb jmp lods adc add mov fdivrl mov mov sbb test sbb popf test sbb lods test or add cmp mov mov mov add ret xchg adc or mov loop adc sub cmp add xor sarl dec add xchg mov int3 scas lcall xchg test adc sbb adc sahf cmpsl nop/reserved or dec or mov sbb mov mov and stos jmp or sub sbb rolb sub dec pand and push movsb push and scas add mov sbb lret xor sbb inc dec xchg aas push cmpsl loop add push or mov mov xchg aaa sbb mov or pop pop cmp mov jle jns stos dec mov xchg cwtl xor adc xchg das sbb or push adc sbb push mov adc lods xacquire pop xor add jbe das mov movsl out pop sbb repz push cmc nop cmp adc paddusw mov sbb sbb pop push xchg cmp add aas or push adc xchg pop push cmp nop mov lcall adc xchg mov cmp mov rcll and sbb sub push popf cmpsl or xchg mov adc mov cs mov add add adc xor mov je cmp and inc adc push or aaa sti sahf sbb sbb cmp outsb or adc lcall adc xchg and repz mov xchg pop or adc es movsb adc out xor test mov mov pop mov and loop das adc mov je cmp pop adc (bad) adc incl sbb sub or fcompl cwtl adc lods lea cltd je cmp add scas adc ds sbb add loop sbb adc movsl sbb sti add mov repz add shlb mov scas or cmp mov mov adc gs dec pop pushf xor js mov ret or push and stos and adc pop xchg lods sbb xor pop in sahf lgs daa dec pusha sub add mov and movsl in sub pop cmpl cmp repnz sahf inc fnstenv push repnz test loop add lods add adc mov nop and or cwtl adc sbb sub mov mov pop flds sbb or lcall ds adc test add inc (bad) and rcl fwait ds adc mov or add mov push nop xchg mov mov sbb xor ret xchg adc mov xor mov (bad) (bad) push andnps pop pop sub pop or push fwait test xor sub jmp pop xor sbb (bad) add xchg sahf push sbb mov sub adcl add mov xchg scas adc aaa std xchg mov pop mov xor test fsubs xor mov cmp adc pop mov jno subl xchg test aam repz pop mov mov mov aad mov or pop push in xchg out scas mov and test scas bsr out in mov xchg dec inc mov test add xchg mov add ret rclb xchg cmp movlps add sub ss push pop cmp adc and mov das or stos add cltd (bad) mov adc sbb movsl jne inc xor sbb sahf mov scas push mov maskmovq notl cmc xchg fwait dec pop dec fwait sub sbb xchg xlat xchg mov fwait jno test mov cmp in loop xchg xchg paddusb repnz cmpl sti adc or or nop mov ds push adc mov push movsl add adc subb cmp cmp add xchg xchg mov sbbl xor and ds (bad) test ret movsl jno cmpsb cmp pop stc adc repz (bad) sub and xor mov xor (bad) (bad) mov xchg aaa or or sbb jmp lods or sub or je push mov daa cmp add pop add xchg cmpsl adc stos push scas xchg fs es repz aas add mov xor mov xchg or sbb xchg (bad) cmpsb inc roll mov cmpsl xchg adc mov mov mov sbb jnp sub xor pushf rorl movsl add mov mov sbb xorl mov or xchg in sbb lcall mov or sbb mov jne pop mov or adc sub xchg mov dec aam cmp stos push pop pop mov popf pop leave or mov pop push push xor mov adc dec or adc mov xor xlat pop xchg xchg mov xchg cwtl cmc adc adc mov adc add outsl cmp adc nop js xchg or mov mov xor fsubrl pop or xchg pop mov sbb (bad) mov cwtl push sub mov xor sbb stos add inc aam push sbb rorb mov loop ret mov lcall mov mov xchg cmp sbb xchg mov jae aas sbb das adc jnp outsb je cs mov dec pop sbb or lea adc push (bad) xor sbb adc pop ss mov and xchg rorb sub add jno push and mov pop movsb add rcrb cmpsb adc imul or out in ds mov aad or sbb adc xlat adc pop xor shrb je cmpsb pop xor mov cmp or adc xchg add movsl push es or cmp mov mov jmp sub aam adc je cwtl or vmwrite ret add sbb or repz xlat inc or je and in jp or jge nop or daa int3 sub push sbb pop dec repnz dec sbb adc adc cwtl std fbld adc popl dec dec nop dec mov mov int3 pop icebp add je out shll (bad) jp loopne or cmp lods arpl scas pop out xlat adc jbe adc push adc add pop and jecxz mov inc scas adc pusha or popa pop or movsl mov adc sahf jnp pop or adc ja sbb push fs popf push adc ss or or lret cmp adc test mov popf or (bad) mov cmc adc cmpsl jl jnp (bad) adc jns addr16 and mov or or adc gs pop (bad) mov fcoms lods scas pop movsl mov test pslld call adc and or outsl mov dec lcall mov fsubrs xchg or xchg add mov adc fsts sub jb adc push scas mov sub pop pusha push sub das push sub cvtps2pd shlb add or fild sbb pop mov adc push repz test jl dec inc wbinvd aam mov jle sub add inc mov movsb leave aas pop outsb sbb or mov int3 sub jl mov push adc int or fs add cmpsl or add mov pop add sbb mov adc add mov pop insb push inc sbb or mov and jo sbb mov cmpsb fdivs pop pop adc dec xchg int3 adc leave insl enter or loope or lret cmovle mov dec jle adc pop push xor test sbb or push xor add or adc fs pushf xor jl inc mov add sub dec adc mov adc in adc les pop xor add rolb adc fistp aam (bad) je ds or repnz mov inc adc jecxz inc adc sbb pop pop and cwtl cmp jg cld movsb arpl repz mov punpcklwd int adc dec out imul adc dec adcl jmp push mov int3 in sbb ja lods jnp push hlt add dec xchg dec imul dec subb pop mov xchg sub adc jg int decb sbb push fxtract jnp mov pop outsl ret loopne shlb or adc ja enter adc sarl xchg mov mov sbb in dec hlt xor mov xor cmp lods (bad) add ja push xlat out cmp cmp cmp and adc add iret adc sub pop inc or push adc jnp sbb sti adc add mov mov mov and push cmp lds or int3 cld mov adc lock push out je jno and int cmp mov inc repz sub pop inc lods sbb add xorps nop and jecxz (bad) bound or js adc adc mov mov sbb pop sbb les (bad) test pop or push imul out xor adc aas das popa adc orl cmp adc xor jne (bad) jno adc xchg cmp adc adc es cmp pop xor enter lods sbb xor mov adc inc add push (bad) sbb in loope sub ja hlt enter mov jecxz lea xor adc adc push sbb mov aam mov sbb std push pushf rclb mov dec pop mov add test dec or lret or fmull or adc fs add mov out popa sbb int adc adc sub add jo xor mov movl add adc add sbb sbb adc cwtl push fwait adc adc push adc mov mov adc adc push (bad) lea ja and mov sub cmp cmp add add call pushf pushf movl push push jmp aad mov jb and pop dec jnp xchg push pop jp out das outsl (bad) out iret (bad) notl popa test aam in or stc addr16 repz mov fs int jb in lret inc push mov pop je aaa cld sbb xchg mov or xchg mov leave rolb adc cli dec cmc fs sub sbb je repz out add cld push inc add sbb out cmpsb and pop mov out lea sti and fcmovb xor lea je stc push pushl sub test bt pushl cmp jmp mov setno mov lea jmp das shr or mov pusha shl call jmp push imul cmc jmp sbb mov (bad) scas cmc (bad) aad cltd sarb scas mov jns sbb in xchg and add push nop mov add xchg cmpsb add cmp insl ret cli repz repnz cmp mov pop lahf sbb nop mov movsb xchg cld es mov jno inc mov negl push fsubrs pushf arpl sub adc (bad) ret jb jns test inc or cmp fwait das mov mov xchg orl jbe xchg xchg repz ds aad andl andl movsb xchg push cmp adc cmp mov and cwtl adc sub mov popf aaa mov aad cmpsb in (bad) sbb mul push mov mov test je inc stos mov mov movsbw movb sub add bt inc pushf rcr mov shr inc mov test jmp adc cltd xor inc mov adc jns xchg inc xorl cmp pop mov push (bad) dec pop pop and (bad) lods jb test xchg fldt mov test mov icebp fnop adc sbb addr16 adc fldenv inc in les and sub (bad) mov add jb lahf addr16 dec jl sbb pop std push pop mov pop pop jge orl ds in mov pop inc cs xchg insl mov test xor push and jp push (bad) cmp xchg out or and (bad) xor pop int mov lret pusha mov (bad) push mov popf (bad) mov add mov repnz fnop and pop cmp add xor sahf dec je jne popf or push test movb pushf and call and jge push outsb out cmpsl es dec ja and xchg mov pop xor loop push mov (bad) sub fs je pushf add pushf pusha pushf lea jmp lea inc lea bts mov pusha cmpb jmp xchg lret cld adc adc sub sub xchg jo push fiadd pop scas push sub mov pop xchg out test sahf (bad) stc fistp in into in inc pop loope int3 mov cmp fdiv xchg rcll ret sbb shr mov dec in ja push in scas xor std pop (bad) repnz decb into out decl cli stc pusha xor bt stc ror push pushf push jmp jmp movsbw bswap lea pusha pushf push pushf movl pushf pushl push mov pushf push pushl ret movl pusha pushf pushf lea jmp bt xor stc clc movw cmc shr jmp int mov cmp inc roll clc in aad leave adc xchg pop fdivs inc (bad) aas dec daa or cld jl push adc xor jge xor adc lret ret mov sbb rclb (bad) sub mov sub jb hlt push ja sub adc lds out mov icebp (bad) es scas push test bound addr16 xchg stos pop push cli iret mov sub rcrl (bad) repnz ljmp mov loopne push jb inc popl cli out out lock out sub cmc and adc mov std (bad) (bad) aad fldl pop sub pop std xor push xor (bad) push cmp bound xchg (bad) std xor insl pop dec add inc fucom mov add add es cli cld pop sbb cmp add adc xchg sbb inc pushf push stos mov in mov (bad) push movsl inc mov es stc mov sub inc popa repz mov add lret movsb jae dec push sbb add decl divl lds jp xor xchg mov cmpsb mov xchg dec inc mov mov pusha cmp jmp add mov pusha lea jmp mov pushf pushf lea je test jle stc bt sub stc pusha cmp jmp inc clc xor cmc cmp cmc cld pushw popfw jmp pusha push jmp pushf pushf lea jne bswap mov bt sub test mov js cmc cmp sub pushf pushl popl stc pusha pushf cmp call pushl popl movb pushl ret sub jge adc cmp fldz int mov loope in aad mov aad popf xchg xor cli cmp xor cs push cmpb xchg mov ss inc sahf mov sar (bad) setle cmp mov sbb add add jge push and push jb jno or mov push xor arpl sbb cmp mov sub ja mov push adc out sbb jmp sub pop push pop and adc push roll cltd lea sbb repnz (bad) (bad) ja mov mov divl popf (bad) vmwrite mov cmpl stos js in and rorl and mov mov mov loope scas (bad) cmp mov daa push popf and loop mov test sbb push mov push inc mov lcall icebp add hlt xchg pop fimul mov test sbb test cmp xor and xchg sub pop mov pop push mov push dec shl out pop icebp (bad) (bad) sbb leave dec into mov jb fstpl daa mov nop sub cmp mov mov dec add (bad) out in imul mov pushl cmc pushf ror pusha inc cmp call jmp jmp jns xchg dec aas adc sub cs aaa pop js mov sub lods sub scas sar das lahf mov ret sub orl dec mov std repnz loop pop fwait nop and cmp cmp out inc leave insb fcmovu mov fildll fwait push imull xor insl or lods pop inc mov inc in jecxz lock aad test cli ret in ss dec xchg push (bad) (bad) out cli or inc imul fadds ret jb stc add jae pop in mov (bad) lock mov push aas test mov bt pusha pushf test push mov lea je test shld neg mov bswap btc sbb add btr bswap mov bt cmc pusha test jmp call call lea jae cmp test pushf sub call push pushl lea call pusha lea jmp clc xor cmp stc repnz jmp pusha bswap mov jmp (bad) mov cmpsl xor pop hlt (bad) mov (bad) jne cmpsl jae push enter dec xchg add lret mov cmc fidivl cltd adc mov dec lea dec pop repz adc aas cmpsb in inc gs adc out dec add js add out sbb orl loope ds out mov (bad) clc xchg popa mov xor testl sbb cmp inc sbbl sub mov enter adc adc mov mov out mov test (bad) dec insl insb sub push out (bad) idivl pop insb sarl sti (bad) pop jbe iret add mov push movsl imul push bound jb sbb dec movsl mov push mov push lods cmp push cmc test add stc ror pushf push not call lea call movl push pushf mov push movl mov pushf lea jmp sub or into lods cmpsb xor lea or notl not mov insb sarl sbb fstl dec xor push insl cmp int cld fistpl mov in sahf and push inc adc hlt int3 add test fadds xchg ret mov cmp insb repz push repnz mov aas (bad) sub lahf lds imul dec mov pop insb bnd pop jle movsl fidivl rorb add add mov add pushf pushf lea jmp fmull cmpsb dec cmp inc insl nop mov mov sbb push inc dec pop xchg add rol inc mov xchg cmp jae test and push std je push inc clc popf pop jne (bad) aas and addr16 mov push xchg jno jo lds mov push daa ds leave mov hlt xchg mov sub int pop xchg fadds stos push sti clc imul pushf dec fs cmpsb (bad) (bad) jb add and pop ss daa popf mov stc pop dec xchg sbb addr16 inc and cmp xchg xor aad sbb in pop inc inc jmp test sarl sub and jge lock lahf adc pusha das cld xorl mov mov mov cmpsb (bad) add mov lods sub dec pop or vpshad cmp xchg (bad) std cld push testb aaa stos mov es adc xor or fwait out xlat add cltd adc or adc add jb and (bad) pop icebp clc add jnp lcall adc ficomp mov ds fisttp mov cmp mov adc add jmp imul mov dec dec shrb sbb in jg (bad) jnp mov in popf ret sbb inc (bad) test pop es push add xor hlt hlt xor int3 sbb xlat jg cmpsb jo add outsb inc mov cmp mov ret aam enter adc push sub jne fsts ss adcb mov push data16 sub rolb loopne or (bad) lsl pop jmp pop addl inc pop sub icebp inc shrl testb bound jb aad nop sahf xchg xchg push pop pop jecxz push arpl jnp aam mov movsl rorb int3 rcrb incl lret (bad) movsl (bad) repz aaa inc push (bad) aas sub aaa adc push push cmp adcl es ljmp stos push jmp dec leave icebp xor in dec pop cs dec rolb xchg xor mov mov clc es mov roll adc popf sbb test sub jg inc adc fiaddl cmpsb mov stos orl cmpsl js in mov mov pop xchg pusha jg add out lcall fdivp add mov jp (bad) mov sbb fmuls or xchg loope jbe dec fstl in jg cmp mov pop push jno dec mov mov repz sub xlat dec mov faddl cs push lock or loope mov enter (bad) (bad) jno pusha cmpsb hlt jno adc shl jmp clc repnz adc in dec shlb test mov jo sbb inc mov adc lea pushf push call pop btc mov cmc pushf cmp call mov adc or lahf outsl cs jbe or gs push popf mov call push xchg repnz (bad) lea orl and xchg stos ret cmpsb fstpl sub scas push int add jmp leave sub fistp scas pop cli mov sarl lret scas test and sub adc and stos arpl pop push push lahf ret jnp jl ja mov cwtl lods pusha std push lret cmp loopne cwtl movsl js jp pop adc rcl jmp fwait mov mov out cmp xchg sarl iret loope mov or jnp int3 popa mov das (bad) loopne nop aam xor divb mov sbbb je popf pop pop dec mov pop into mulb sub (bad) sti mov push jl lock outsb stos dec stc mov stos (bad) lods push dec dec mov cmpsl xor loop pop mov fwait mov outsl in mov adc pop jmp push mov sub gs (bad) psrlq inc hlt or mov add (bad) je sti mov test imul pop xchg mov mov push aas sub aam hlt jecxz ret hlt dec pop sub cs mov and aam loopne xchg dec lock pop (bad) call jmp jne std and popl scas jno cmp inc add inc and and jo out lcall js cwtl call cltd jnp xorb sbb (bad) xor in pusha lcall lcall mov adc aam insl fdivrp jne ja lock pusha mov lahf jno aam xor icebp aam jno ss popa outsl pop ret mov (bad) jnp xchg xchg jp int3 inc pop repz cmp arpl popf jg (bad) mov out data16 push cmpsb fbld cmc xchg dec cmp and out stc stc aaa cwtl jmp outsl dec mov insl or into xor cmp je xor popa pushf rorl cli stc fcomps cmpb fstps cmp xor mov jnp loopne aas negl cld add mov and notb hlt sbb sbb or sbb cmpsl js movsb das je jne idivb aam jg iret lcall push cltd mov sbbl xchg fnstsw push pop mov jno mov stos sti adc fwait shrl mov movsb test jge add nop fnstcw cmpl mov (bad) aad jo xor push mov sti les xchg pop clc aaa inc mov inc push daa clc cmp jae pop cmpsl les (bad) jmp addr16 aaa sub icebp sbb xchg or mov push adc sbb hlt jbe jno cmpsb outsb xchg xchg cmp rcr int or and and in push out xor (bad) pushf insl int3 hlt in add mov dec insl in mov sub xor xlat fnstcw adc jg ljmp data16 or inc inc push lret fwait test mov dec pop out mov fwait sbb js or jo xchg jl orps cltd repnz adc jge xlat push mov (bad) xorb fs movl pushl push movb lea jmp out in xchg inc adc dec insb xor es in push bound jae inc push xchg call pop xorl mov mov imul nop pop xchg gs cmp pop jle ret inc xor incl mov fldenv lds mov xor push lret inc test dec jmp adc xlat inc push jae ja dec test gs adc sbbb push and xchg aam push push mov btc cmc rol shrd mov cmc cmpb call mov call jmp pusha lea jl jne jg bts add rcl mov clc clc pusha bt add pusha jmp mov jmp pusha movb push mov pop lea lahf pushf lea pushl push movl pusha movw mov push mov push pushl ret sub pusha push cmp push mov call add add addb addb addb dec push add push add inc add add add mov shlb ljmp mov pop pusha jmp mov setnp mov test test repnz movb pusha pushf lea jne bswap jmp mov mov pushf pushf cmpb pusha pushf push lea jne movzbw ror pusha xor rol shr neg mov inc add add push mov clc test pushf push lea je push call call mov push cmpb pusha lea jne neg movzbw cmc sub pusha aad mov mov not add and rcr or mov clc jmp cmp adc dec push repz sti lock movsb jge add add mov sahf mov popf mov jo adc imul add jno inc mov outsl scas out pop push (bad) fwait jecxz mov stc or (bad) mulb dec data16 js jmp inc mov out clc adc jns cmp in add pop jne and arpl gs mov insl iret data16 movsb outsb lea cmp cmc sub sbb gs xchg mov xlat into xor cmp push lea jae pushf cmp add pusha pushf call call adc jl fnstenv adcl xchg (bad) ja pop jg sub jno ss dec xchg out mov mov cli and movsl in push rolb hlt and addr16 cmpsb test outsb popa ljmp cmp mov pop lret scas addr16 xor pushf xchg inc data16 pop and push xchg and (bad) cmp shlb jmp mov daa mov sbb xor push add int3 mov lods sbb js sbb js xor pusha mov lret push xor inc loopne dec inc out inc out imul cli pop sub inc xchg jl (bad) sbb dec lods xor adc cmp das or cld arpl cmp add stc push mov stos add dec outsb inc mov movsl or aas test sub and adc (bad) shrl sarl push insl push cmp fcmovb sub das pop test mov shll xchg scas (bad) push jbe or insw inc pop bound dec jge inc jp dec pushf setae sti popa dec icebp inc mov (bad) js (bad) fiadd push in mov mov jns ficoml adcl push (bad) xor lods xchg xchg pop not xorl das xchg jecxz dec and out rol inc mov pop movsl (bad) dec imul jae fimull ss into sub pop xchg (bad) sbb in bound (bad) jmp int3 xchg jo mov test mov xchg cltd adc push lea ja dec bt neg bt sub shr call pop xor cmp inc add sub jne sub push mov and (bad) fstpl mov mov push mov fdiv fisubl aas sub or mulb test cs mov out push and imul add jno test dec mov cmp daa (bad) mov mov push out dec out inc inc iret mov stos mov in adc dec lods das or cmp and add aas sbb cmp int mov sub jnp cmp push lea ja movsbw sets mov pusha mov seta call lea ja lea movzbw pusha lea mov pushf bswap pop pusha mov setnp call call inc jmp movl pushl pushf movl mov pushl mov lea jmp pusha call mov inc les pop data16 push lea adc jno jo adc xchg sub fs xchg mov mov or or outsl pop xor pop and mov pop xchg jne adc cld pop nop insl cmp out popf movsl in (bad) xor (bad) or (bad) mull jbe push fs (bad) decb xchg lods fsts daa add lsl inc mov movsb cmp call cmp push cwtl gs add xor xchg ret jge movsl adc ds inc or pusha pusha movw call sbb adc xor push pop xchg jp pop enter pushf int sarl mov sahf dec in pop adc add mov adc push mov int3 cli xor mov push in divl cmp jmp jo aaa shlb xchg inc scas test inc xchg ds pushf call lea jae dec bsr mov adc stc lea btc mov btc bts mov stc clc pushf stc xor cmc call sti loop adc inc sub outsl xchg pop pushf stos jo push cmpsb jnp fistpll pop dec push test mov dec nop mov add ja mov frstor mov imul (bad) ds call xlat sbb sbb inc mov sub adc jns cmp in jl das shrb les xchg jne ret xor cmp jb push inc aam inc call std adc das test push sub test dec (bad) mov js jne pop out inc dec int3 sbb lea jne mov test bsr mov bsf or sub bt inc bsf mov clc jmp lea ja push neg clc sub bts sub add bsr push mov rol mov cmp pushl cmp repnz mov lea jne cwtl pusha movb pop setl push setb mov pop jmp bt ror pushf not pushf inc pushf cmp cwtl lea push movsbw mov movw lea ja call pusha lods pushl xor cmc cmc rol ror call bt cmp pushl popl pusha bt mov cmp pushf lea ja cmp sar sbb sub bsf jmp jbe nop dec push adc int3 stc stc sar fstp stc inc aad sub cltd clc jmp inc lcall aas pop jae fwait jae push cmpsb push nop aas cld cmp jmp adc cmpsb mov faddl xchg es fdivrs rorl push mov push push cmp add mov popa inc sbb push push jno and fwait call insb dec setp xchg pop xor int3 inc jnp or out repnz fadds test jmp pop mov mov mov adc rcll push lcall pop sysexit test xor insb fsubs sbb sarl jae inc push jb push stc lret xor pushfw mov pusha movw mov push pushl ret pusha inc xchg adc and xchg sub mov push mov push lods (bad) fimul mov sti pop sub lcall xchg mov mov push or bound rclb in scas mov movaps adc xchg xchg mov je adc push add xchg into ror fsubr fidivl rcll mov (bad) dec addl xor ret repz mov push xchg int xlat sbb bt bt bt add cmp stc stc test call bt imul bt pusha mov add pushl pushl lea jmp repnz push call inc dec jmp rclb lods outsb cmc add fucompp rcl push lods jle inc mov lock repz or and mov mov out push mov pop (bad) mov fcompl ret lcall jp pop popf dec stc in sub cmp or sbb xlat mov xchg fsubs aaa push lcall leave out outsb dec pop popf adc inc pop add arpl std je add push xlat inc add mov jl out push fdivl je (bad) into outsl dec pusha push lahf mov adc leave scas ret loop jg aad xor and sbb lea jns cmp shll inc adc in sbb mov xchg add dec outsl arpl inc insb insb outsl arpl call adc pushl movb lea call jmp mov lea je clc add pusha cmp pusha pushl jmp lea pusha lea jns pushf movl pusha mov pusha push mov pushl ret lea jae (bad) cmc ror mov bts shrd sbb mov btc add (bad) icebp mov pusha call int sbb push adc cld and mov adc movsl jbe adc test or mov idivl push (bad) cld sub (bad) (bad) cs (bad) ret inc fwait mov mov cmp inc jle cmpsl test or scas pop dec jns adc int3 or fcompl js mov fsubrl xor mov test mov mov das pop add es fdivl cmpl pop adc jne jle leave jp,pn add dec ja adc sbb sbb push add mov jb loopne lds inc xchg (bad) xor mov mov jg ret and add pop push lea jmp cmp stc repnz push push lea jne push pop mov dec btr sub or cmp cmc stc mov jmp add inc gs outsl fs gs imul add and dec loope (bad) sti pop sub push adc sub mov mov aaa cmp lods add outsb jg js fsts cmp dec movsl rclb cltd lods sbb repnz mov adc cltd jmp inc inc repz add mov push sbb cmpb pusha adc xchg lods push pusha sub and xchg incb sub les mov xchg add xor subl pusha movsl jns stc repnz mov rclb lods les mov or (bad) jnp clc icebp xor inc inc cltd dec je or loopne cmpl rcrl pop sti pop fcoml xor incb js adc add inc and push add es jmp pusha lea je call or push jno xor int3 sbb lcall addl push stos dec das lcall iret lea ss movsl cmpsb sub cs jns jno imul jbe inc push xor xchg push int cli and mov dec std cmp jnp dec inc mov bound call or es jge jle js rorl test xchg out push fimull mov xchg int out pop mov nop daa test adc pop pop xor add sub mov js daa popf xor push mov inc dec mov call cmpsl out jb pop sbb sub mov iret mov scas ja xor xchg and sub (bad) repz int3 adc popf cmpsb fucom js sub aaa in sahf mov (bad) push (bad) sbb mov outsl jp hlt ss inc push mov xchg dec dec clc push inc and ret mov xchg xor adc shr out repz lods mov mov inc test mov push lods add hlt std (bad) inc inc (bad) mov push lods sbb mov jns jb ds xor inc pop leave and sbb (bad) clc inc mov mov (bad) sbb out adc and test aam mov addr16 cmp pushf push lea jb bt jmp pushf pushf movl pusha jmp lea pop pop push pushf pushf pushl ret sub pusha push bt cmp jmp mov lea je clc cmc cmc add cmc push clc bt cmp pushf jmp mov lea ja call cmp call jmp and sbb sti pop cltd popf bound movsb jb sbb mov out (bad) mov je icebp dec pop mov cmp movsb add mov push pop pop mov pop inc mov (bad) cmp xchg int shl in adc sbb insb mov popa imul in mov sub scas jl add negb dec rolb subb ss (bad) outsb xor divb (bad) scas cmc lahf repnz lcall mov mov add notb cmp jo inc jge popa inc push inc test ret or cmp subl aaa or add shrl out (bad) decl movsb lret pop jns bswap dec mov bt stc mov btc not ror mov bt stc push pushf sub jmp cmp out xor inc or pop cwtl jbe push xchg and mov cld out jecxz or pop mov pop xchg (bad) mov ja cmpsl jo hlt or loopne,pn lahf add insl (bad) in vshufpd pop cwtl xchg cmpsl test aaa scas cmp stos jmp data16 (bad) arpl xor popf dec cmp mov mov inc mov jne pop cmp jle or xor repnz xchg (bad) fistl push out and ret push dec out xor nop jns push jae sahf aas and test in cmpsl dec pop adc xchg loop loop ret scas ja dec fwait nop out loopne rcr je jns push shr xor call cmp pop addl lret cld add add mov cli and mov movsb sub psubw out mov sbb jo pop xchg inc mov in outsl mov lods pop lea das dec pop xchg jns sbb mov inc pop jmp jge fildl pop adc aam sub aam nop fprem in xchg push xor fs lds push (bad) jnp or jg cmp test repz pop xchg jmp mov fxch cmp push mulb rcrb push push add bswap in inc mov je adc adc or cwtl or adc mov int imul imull or pop mov or mov inc push inc inc dec push inc or pusha inc js push (bad) push jb,pn leave jo lahf or sub xor jnp test fs setge pushf mov pushl inc sub xor rcr stc neg xchg sar pusha mov movb or shr mov lea cmp pushf mov inc call call pushf pushf movl jmp mov mov bt add cmp cmc test pushl call xchg lods jns pop adc sahf mov pop popf inc dec mov pusha jge cmpl cmp inc leave cld mov ds xchg push hlt and enter outsl mov dec jbe notb sar shrl xor push lcall clc stc jae stc repnz sub loop xchg adc adc and je jbe adc adc lods lods out leave pop ljmp lods cli push repz imul xchg icebp push add shld mov shld adc mov clc xor clc cmc add jp stc repnz pushf mov pusha lea jne rcl setle add mov rcl sub shl neg mov cmp stc cmc call jp mov adc xchg popa movb sbb (bad) (bad) ficomp lods jbe or mov cmp xchg out outsb push ret push adc pushf sub xchg mov cld jnp fidiv pop cwtl insl jne push mov dec rorb jmp xchg sub sbb mov sbb inc les (bad) adc mov (bad) jecxz in push movsb aad mov int cmp cmp and mov add fistl call add mov lea pop mov call call clc repnz call inc gs out pop adc jns loope fstps leave (bad) xchg loop movsl adc dec jno ds push jmp fcomp int xchg and jae mov in sbb mov (bad) shl fprem fldcw stc (bad) icebp imul arpl mov add cmpsl std fs dec aad lock or mov add je add scas call (bad) out fwait pop adc jmp cli inc lahf pop push sub (bad) sub or pushf negb in adc mov mov fmull dec push testb (bad) or xor push mov ds test add jmp fmull adc outsl sbb loopne vmwrite push test push rcr xchg sti sbb shlb dec jne sub or loope push adc int dec pop popf inc pop adc fwait shr stos mov push cmp jg dec sbb jge vmwrite nop dec cmpsl iret fsts adc xor dec jno push sub jo jnp addr16 fistp xor ja insb mov xor sbbl pop or push or pop pushf fst pop arpl xchg sub and pop xchg jae int3 mov scas xchg sub mov dec leave xor pop mov loopne insb mov lods xchg shrl call xchg movsb or call bound gs lds test push ret shrb xor adc dec clc add mov and cmp lea jae pusha pushf mov add push push jmp pusha jmp lea call pushf lea ja rol sub rcl shr and add cmp (bad) lock mov pusha sbb add add mov pusha repnz mov lea jne bswap mov pusha movb jmp add dec outsl popa fs imul add movsl lcall call mov adc scas jg pusha inc insb and orb mov cmp push fwait outsb icebp push pop insl adc mov or inc xor cld xchg in xchg adc in jecxz or lahf hlt pop fist stc insb movsb movsl les mov mov mov shll mov pop addr16 in rclb push mov or xchg mov xchg shll in into ljmp repnz test push mov mov adc fwait arpl sub adc mov add out into iret jge pop iret fild adc mov xchg (bad) mov xchg mov inc aaa adc lcall adc cmp sub andl fadd rol and lods mov push jle mov jae lea adc dec sbb (bad) lock sub adc test (bad) int3 jmp jp jnp jns mov dec jmp adc rorl sbb (bad) mov cmpsb dec push jmp cld mov test fcoms mov pusha lret ljmp push push repz insl or iret outsl pusha leave pop lret jecxz jns or xor pushf mov sub ret inc outsl push or shr rorb inc scas mov mov pop sub ljmp dec rorl mov aam das (bad) push mov (bad) in jae cmc lds sbb cmp adc mov xor sub test pushf test call call repnz data16 notb into shrl (bad) sbb inc lahf lret xor jg scas cmp add sbb mov pop jbe push je adc inc push data16 mov int3 push mov (bad) mov inc stc sub in (bad) mov sti push xlat jle adc mov sub push insl pop ret (bad) lret mov sub add and lea xchg and loopne jo scas xchg dec push fwait xor in or push loopne push dec movb insb imul repz ret cld mov ret adc jg daa xor popa mov movb mov pop cld inc stos push fs movq and mov jg fdivs fsubrs loopne into clc cwtl insb scas movsb mov sbb subl pop xchg adc mov push add scas adc nop in pop or jmp xchg sbb fucomi ljmp mov adc fildl or orl jl xor jl imul cltd inc insb repz jne lock stos mov jb fs dec pop iret xchg sub and push mov pop lcall test fdivp inc sub push push pop mov adc push pushw or dec push lret cmp xor xchg outsb cmp seta enter rorl nop inc stc mov out mov sbb test lahf in fdecstp ficomp push mov mov notl jbe mov sbb xchg pop mov push (bad) add xor add dec cmpl stc add ss mov outsb cltd (bad) mov xlat (bad) cli cmp jp and sbb push lods lcall rorb add add mov and jmp movzbw not mov xchg mov mov mov pushf call mov pushf call movb lea jae sets bts mov call sbb adc mov push push movsl jns and movsl lcall jge test sub arpl and inc dec jbe aad into popa nop (bad) xor fistp addr16 mov (bad) cvttps2pi cmc or xor inc mov inc xchg fst movsb jge out outsb std pop mov push leave (bad) lea daa mov sbb in imul clc jl out inc movsl and cmp sub (bad) ja mov stos xchg jg in and dec mov aaa cmp in pushf mov mov in in dec (bad) or xor fs ja or stc sub or sub xor shr or add mov rcl mov add mov call mov mov lea call push mov pushf lea jmp push je pop popa adc xchg add push addr16 cmp js xor mov out xchg out dec loope add xor cli inc cmp pop or ljmp les cmp nop mov mov mov add sahf hlt out repz int3 adc push sahf push cmp mov mov fcoml ja int3 jmp loope or xlat sbb into sbb jo and call push or out mov bound inc fisub sbb js jl adc add add fsubr push mov out xchg or mov in fucomp cwtl mov and popf pop sub add aas stos pop js mov and jns lret jp push xchg jp std addr16 or lahf imul pop jp fadds adc test sub nop mov adc push jle push gs lea arpl jle pop in cmp push xchg movsb xchg add (bad) std push in imul mov mov test pop mov xchg or mov aam pop cmp jl cs (bad) jae imul dec xchg xchg inc daa adc out jne lahf ja sub lcall mov outsl aam pusha push xchg lods jbe push outsb ficomp lcall lds jbe sbb pusha inc js mov enter (bad) repnz jmp push dec inc dec dec xor cs insb add xor incl and in stos scas out shr iret ficomp ret fcmovnb sub mov or cwtl movsl les clc std or int dec sti xor aaa popa jge push push fisub addr16 push lcall gs push mov cli out enter mov mov (bad) push lds push rclb test or ret fmull cmp fldt mov fsts ret xor scas jae in inc inc xchg cltd test pop cmp xchg push and adc mov cmp dec mov inc mov lcall mov call pushf mov movb pushl lea jmp pushf pushf cmp jmp push mov push pushl movl pushl ret inc je shrl inc push cs mov jo jl pop push aas das xor fadds dec mov fmul dec shrb daa es nop testl sub push mov je adc jno out jle push jae fildl testb mov fs pop xor test jnp inc scas ja pop mov rcrl cmp fdivrl sti xchg pop sbb jge mov sbb sub out rcrl sub call outsb int3 mov negl or jecxz nop cld aas movsl adc pop imul out cmp cmp pop call add mov mov sub mov sbb lds jo call (bad) fstpl sar sahf aad cmp sub or mov out xor jb icebp adc rcrl dec lods pop rcrl dec ret stos jmp mov mov mov sbb xor test scas dec sbb sbb outsb adc mov ljmp mov ret (bad) or and xchg scas lods cmp mov das dec pop jmp test jmp xor fsin xchg mov test push inc out ljmp fcoml call sti pop pop add (bad) jecxz push iret mov lock shrl jmp dec fisttp mov cld push test rorl or scas mov imul inc adc adc (bad) mov and jnp out (bad) adc out fs aam fcompl or add cmp add xchg pop pusha push inc jno jl,pn push popf fstpl pop or jecxz rcll in in stc xor cmp and push pop mov mov pop js ja lock insb sbb imul push jno imul arpl push mov inc lods mov mov fiadd leave divb mov cmp dec jmp or cmp mov mov lea sbb outsl fs adc and cmpsb in pusha pop mov xor or gs stc mov xchg lods xchg sbb push outsb jo push add xor xchg sti mov sbb jg cmp imul inc cmp lcall xchg iret rcr addl int3 pop inc leave adc fs jne call pushf lea ja clc sbb bt sub cmp setae shrd or add bsr sub inc mov seto mov push repnz mov lea jne jmp add inc jb jo push gs gs jae inc outsl outsb je js add mov setne mov setns jmp pop rcr lods xchg xchg pushl (bad) sbb mov push add test out adc jmp ret nop adc int int adc out mov lahf jecxz mov shrl xchg pop add fsubrs push adc mov add loop sub aaa out ret adc push (bad) xchg adc jl sbbb pop dec ss std adc outsb int mov (bad) push cmp adc cmp xchg call out and mov push fiadd fwait add xor enter mov iret or repz or and (bad) add fbstp push jge mov mov (bad) ret xchg out mov fadds je push and add xchg sbb xchg test sbb aas xchg jb out xor cmpsl hlt or pop sarb sub orl add push jns xchg out dec outsl add adc out les movsb xchg mov xchg mov xchg inc test ror pop or in outsb cmc mov enter sti pop imul lock pop pop lret add mov sub push outsl add sbb stos xchg sbb js adc insb and mov xor adc push push data16 jmp jnp repnz xchg mov sbb jb add pop pop xchg gs sbb and lahf (bad) aaa psrad adc bnd (bad) push lcall sti add lcall xchg adc fwait adc adc mov or js sbb ljmp repz sub xchg adc out xchg (bad) or ss sti or xchg gs or daa pop or sbb xchg push pop push jl aad push adcl or push sbb pushf or push outsb fstl add adcl inc or push adc sbb pop inc pop or or push adcl xchg negl popf sahf testl fcmovne sti test cltd in call (bad) or notl testb jns fwait or inc sbb inc adc xchg lea or pop push cwtl pop sbb imul add sbb lea inc popf je (bad) fisttpll adcl popf push ljmp pop pop or sbb icebp addb pop inc or add sbb ss or repnz outsb out test cwtl stos cmp lahf xor out jle jle (bad) mov or pop dec pop jmp add cwtl and adc lods xor mov repz out xchg ret adc hlt inc mov subb add push sbb das (bad) sahf jg out (bad) xchg push adc mov fucomip dec jae dec dec cltd stos (bad) mov scas adc scas xchg ficoml aas add int (bad) adc dec add fisttp push gs xchg xchg and adc stos out push jmp daa dec arpl test outsb cmp in xor sbb xchg es arpl shr cmp das in rolb xchg xchg aam repz add lcall bnd jg leave stos jb iret cmp sbb dec pop mov and mov adc sbb dec adc mov loope or push movsb mov mov leave orl xchg repz adc jmp jmp test sbb dec sbb or adc or cld mov stos rcll lods nop push scas divb lods rol jnp push cmp cmp negl xchg in dec push pusha jge pop shrl dec mov outsb push aam push cltd push xchg fisttp or arpl push int3 add cmpsb sti out pop mov pop adc jne and out aaa jae pop ljmp insb mov das mov mov push ljmp ret mov mov loop fs repz dec xchg cmp sbb mov icebp cmpsb lock or push mov mov push mov out repnz push push nop push icebp sbb xor jecxz nop int3 xchg stos (bad) shrb ret stos mov xchg (bad) andb jg dec push mov loope repz jmp aad xchg stc sbb mov sub leave push test pop dec xor les int xor or sbb cltd jecxz mov push or aam mov lea leave fisttpll jp and cli (bad) jp in nop mov jae xor push out fcmovbe push cld lods push lcall xchg adc jecxz xor ss add call fwait roll adc push mov shll addb push push adc fild ljmp fimull mov dec jmp out xchg pop mov push push jl lcall mov cmp stos fs test pop or shrl loope mov sub xchg fstpl fstpt into out int3 test in out mov loop or (bad) into cltd roll mov dec or jnp cmp daa lcall sbb cmp data16 push push pop xchg out aas aaa rcr les xchg test rolb and xor stc push lahf adc out jb rorl dec xor pop pop and (bad) in cli xchg stc cld push inc (bad) cmc push in js xchg adc xlat fwait in add push div daa push scas out ja xchg sbb sbb adc cli int3 pop pop mov andl ljmp aad jle dec fidivrl pop sti xchg out stos es fidivr push idivl xchg outsb cltd lahf add pop pop push fs out insb sbb push adc out gs xchg cmp add sbb push test fbstp or lods mov lcall nopl loope int stos mov xor arpl aas lea or and xchg mov xchg adc push dec fwait (bad) out xor lcall cmp push mov jecxz lss mov test jno in jmp scas add cltd push and pop inc cmp jno jbe repz insl dec aam scas cmp loopne loopne jb cmp scas gs mov icebp pop sbb out push lret xchg xchg rorl push shrb pop stc xchg mov arpl add lcall push jg fstpl aad lock pop pop jle dec sahf imul jecxz pop fwait je sahf rorb xchg fcomi repnz push insl leave into mov mov push sahf cmpsl and inc aas addl push sbb loop mov inc sbb push pop rorl dec outsb nop repz mov cmp jb fs inc mov rcrl mov adc aaa mov xchg cmp sub xor cmc or and (bad) shll repnz loopne mov ljmp test push mov push in jecxz push jmp dec repnz out rclb sbb xor xchg data16 mov add int cltd sbb jne sbb sbb cld test nop xchg add xchg lahf pop sub xor lods stos push adc cmp pop xchg mov xchg cli repnz pop cmp xchg and lret sub lahf adc xlat add pop add sub je push xchg sahf push cmp sahf icebp stos sbb pop cmp jle and pop xor mov fistp xchg mov jg (bad) fisubl add pushf rcll adc lcall mov mov sti xor adc mov call (bad) add push push repz sbb into mov mov flds xchg push xchg imul pop stc adc adc push add decl xchg sbb adcl or push mov jmp push ficomp sbb repz pop insl pusha jo repnz jecxz mov dec add xchg out lcall mov pop insl cmp fwait or popl dec mov mov lcall push clc sti (bad) das repnz adc xchg xor sbb in mov pop mov jge jecxz push (bad) or daa xchg test pop add push add in movsl adc xchg out jnp in jp push ret mov cmpsb jecxz mov daa xor imulb xchg mov rol gs xor jecxz or call out test jecxz cmp cmp cli jb xchg push pop xor je out inc or jne add jb inc (bad) mov shl pop push dec lock push mov insl push subb pop loopne and add (bad) sahf rcll dec xchg or repnz arpl pop jmp ljmp adc and cld xchg or jnp push cmpsb adc inc movsl or cwtl push sbb add xchg lcall lcall jmp push inc or xchg push mov xor or pop sbb mov into loope sbb out dec mov sar jbe xchg xchg mov stc inc test fistpll add pop out les sbb pop divb xchg in adc iret rcl subl mov testb arpl mov pop lahf add or push xchg int3 and xchg adc fidivr lea pop dec imul leave rol inc fs sbb adcb lcall (bad) mov js jl push mov mov cli loopne dec fisttp jns out out jae dec ja mov std mov lcall data16 sarl push pop nop push lock or hlt out pop xchg out addr16 in stc sti sbb scas mov std lret add xchg or mov movsl fcmovne push mov push add lods hlt inc stos int mov arpl test mov adc out bound sub icebp mov icebp xchg inc xchg jo scas (bad) cltd dec (bad) fwait adc pop and mull push aas jnp call push cld lods xor inc push aad or in sarl pop pop push out sbb (bad) data16 xor outsb jp lahf popf xchg inc dec lcall sub bound outsl arpl in adc movsb out push xchg xchg das lea xchg and sti popf (bad) out xchg or movsb push test or xchg fdivr fcmovnu mov mov pusha add rorb sbb sub pop scas into or das les pop int pop mov fldt call sbb mov ljmp mov fbld fcmovnbe jl sti adc xchg loop dec xor mov stos push jnp insb jle pop stos cli xor mov or outsb and push movsl sbb jp mov jb (bad) out (bad) pop mov push jb mov jl fwait loopne int3 inc cmp out mov or pop leave adc repnz orb (bad) fwait data16 clc mov sub sub mov cli or fcom xchg rclb xchg cli lock push xchg ljmp inc mov lahf inc cs out sub jp push jge cmp dec xor out leave ss js mov adc sub pop push xchg and clc rolb adc out pop lahf sub mov xchg push mov jmp ret mov pop adc jp xor cmp rcll cmc je add mov sbb in lods mov push fs pop negl (bad) hlt xor pop insb or add push inc sahf mov sbb loop jg ja dec mov lds rep jae add and stos pop dec jmp out mov sbb dec in jne and jecxz jno loope mov das xchg (bad) divl stc mov out sbb xchg shrl stos (bad) in sub mov mov mov pop in lcall bound ficomp icebp xchg push xor sbb mov (bad) jl push jl push adc (bad) mov cli mov (bad) mov or jmp test movsb daa je jbe idivb insb fisttpl bound xor imull out xchg push sahf into loope repnz inc mov inc dec sahf jnp hlt rorl mov and enter or sbb loopne cltd xor lret int cwtl or xchg scas out pusha daa adc out loopne dec inc loop leave adc aaa sbb or push pop push outsl pop cli adc adc ficompl arpl lcall adc push pop xchg push lds inc movsb aaa pop ss cmpsb xor enter xchg fs dec mov xor push (bad) ja cltd inc out in mov adc push cmp loope loop int fadd sub adc or dec test dec inc jne dec xchg adc imul push push xor dec or les lea dec mov out sub (bad) clc adc sub daa jo setb push jae cld push or or add cmpsb arpl fwait and mov xchg gs mov push insl xor sbb push xchg xchg adc mov push push repnz add pop stos je pop adc fadds pop js sbbb fbstp push es push mov xor mov pop pop pop loop adc cmp inc lcall in xor adc xchg jecxz mov dec aas sub inc aaa adc add xchg out xchg lea jno (bad) and cmc cmpsb daa jo mov sahf push fnstsw inc sarb cmp int3 jno setns lock mov pop int adc in xchg les lods pop test sarb stos sub sub stc sub into xchg adc arpl sbb dec sub or popa fiaddl stos fldenv pop clc fs dec or xlat cmp xor push pop adcl pop mov sbb push outsl cmp mov and jb repz stc pop mov mov push int fmul pop cli adc jo pop push iret sarl popa bound ror mov dec clc push fwait popa jecxz mov loope fcmovu (bad) xor outsl (bad) add ja pusha call adc scas test dec lods enter adc dec push arpl jecxz cmpb xchg scas rorb or or sub dec jmp and pusha push test mov dec or push push xchg jmp cmp or arpl aaa dec loopne repz mov jp stos dec lret mov movsb lcall pop xchg add cmpl nop cmp into mov mov add sub xor dec mov xlat adc adc bnd cwtl repnz mov lods xchg imulb sbb nop int3 ljmp pop pushf jl ret lret cmp pop pop addb std push xchg inc popf rolb add aaa lods jle adc mov lcall push inc nop repnz cmc adc ficomp xchg lock out sub pop push loop fbstp fwait jo jae call add test push push sub add jp dec push adc mov je inc mov push sub mov xor inc push push sub add and and fstpt dec aam xchg loop outsl dec mov and adcb aad sar leave adc xor jp loop dec call jl,pn mov dec nop (bad) adc add lret orl xlat pop push je out xor mov fcomps add xor (bad) mov add call push mov dec sub or add push cmp je popa sub repnz pop jno aaa cli add fwait arpl fcom aam repnz sbb push cmpsb xchg loope movsb or aas push add push xor sbb ret movd adc adc cmpl push addr16 (bad) popa push inc xchg arpl je pop sbb gs arpl out jge popa mov and outsb popa jg sbb incl testl dec pop (bad) cwtl outsb rclb add xchg (bad) or daa ss pop incb cmp xchg arpl mov rcll mov addb out xor pop inc jbe mov in xchg sti out and adcl dec dec mov adc inc (bad) jge cmp mov cmp or repz cmc sub jno and cmp sti dec push subl fwait popf and dec lret sbb lahf das (bad) outsb mov xchg inc jo xchg or xlat ljmp lret shrl inc (bad) mov xchg xor (bad) push lods dec loop add sbb or in lfs push fistpl cmpb mull xchg sub out scas cmp jae daa arpl pop cmp jns add popa out sub popa or (bad) sbb (bad) or xor outsb mov adc pop push add sbb mov icebp cwtl cmp mov fwait jge adc pop mov cwtl inc sarl mov loopne stos mov outsl mov jns iret xlat xchg ret (bad) mov loopne in fucomi ficomp dec mov push test into lcall cmpl sub in enter dec mov and sti shr (bad) add outsb mov sub test and pop scas push dec hlt insb pop xor pop xor adc inc ds inc mov pop or sarl xchg lds fsubrs lods sbb and jecxz lret mov and jno inc add jmp es sub cmpsl nop mov push dec mov push shrl xorb repnz dec fbstp in outsb loop out inc sub mov add mov fcoms inc aad fs mov lcall pop dec daa arpl xlat xor jecxz or mov and push xchg xor movsb mov int int3 dec sub int3 dec pop mov dec pop add mov inc mov push xchg int3 add lods dec or xchg adc pop mov pushw add daa sub inc loop or xchg insb push xchg inc outsl adc inc in adc xchg mov mov in in lcall sbb (bad) iret add push lret adc (bad) adc add mov loop popa in stc push aas sbb dec jne enter sub cmc sti jecxz push or sbb mov xchg mov out jg (bad) dec adc xor lret push lock cmp mov cmpsb fldl adc (bad) push gs hlt xchg xorl sbb dec mov std mov jb push scas sbb loope in or push push mov inc xchg lahf mov fistl sbb cld cmp scas inc rcrl fwait push lock sbb mov (bad) cmp aam ficom shr out fdiv notl add nop dec ljmp loop cmp sub inc leave out (bad) mov divb (bad) negb sub mov dec fstps dec enter mov push (bad) and lret out adc mov or mov or lret pop xor inc ja xchg adc xchg mov mov xchg dec sbb dec std mov adc or fwait or lret jecxz sub cmc xchg scas dec pop mov xchg and scas xlat cs xchg push enter inc mov (bad) sbb add adc fs dec lods fucom xchg inc insb js adcl loop pop xor push adc sub dec push add fwait ret lret inc and jno sti xchg pop sarb (bad) pop inc mov cmp adc sbb loop or or stos ret push cmp stc mov andb sti cli js les popf fwait push nop xchg dec adc stos push or jnp movl mov pusha outsl push cmp pop out push ror movsb decb dec jmp data16 dec iret int (bad) jecxz push fs cwtl insb xor icebp mov adcl sahf lahf adc bound nop out jae inc ret pop ja aas push mov sub add pop mov and cmp in sub lret sub push push pop add fnstenv sbb add cmpsb test test xor in (bad) mov xor pop (bad) aaa fs jge and cmp imul addb dec xor in andl or rolb cmc push or or add int aam push or and push mov mov fidivl adc push mov push fstl repnz xchg mov inc repnz or xor and movsb push nop push fcompl sub aas push and mov dec add outsb xor or lods (bad) adc add or je push or js or int fsubr push jae sti outsl out adc pop sub jae scas push jne add out push dec push sbbl pop pop je inc xchg loop rorl nop push mov pop es sub (bad) (bad) inc cmp add out adc fwait xor fbld cmp xchg in fcoms fsts jne out mov repnz rorl ja xchg dec fldl stos loopne xor push orl dec (bad) jmp or inc mov push dec rol fpatan daa bound add sub outsb lods cltd lret push cmp loop cmp xchg out cmp lea std push xlat push cmp in in mov cwtl mov sbb adc enter test add or sti lea out loop and stos mov mov pusha test dec out push adc mov xchg into sbb fucomp or jne orb jmp pop push xor push mov aad dec push clc test or addl ljmp ljmp push jg inc ljmp push sub lock jle pop xchg mov fwait cltd push push sub stos and jnp push (bad) sbb pop les dec jg cli inc dec adc aaa push lret inc push lcall fwait inc sbb out ljmp icebp ficompl mov fcmovne xchg or dec sub push pop sub dec sub mov xchg cwtl or xlat push add ret iret js or lahf fdivp sub icebp in push cmp or mov mov jno int adc sub pop dec sbbb std push cmp xchg clc fcoml (bad) mov test cmp mov lock cmpb addr16 aad adc mov ret imul cmp xchg push adc pop ljmp pusha jle pop push xchg jp in xchg decb or int3 xchg insl push or adc push pusha pmulhw mov jle (bad) adc sub cwtl adc aad ret test ljmp ljmp dec sbb xchg or inc xor mov loop xor out dec loope pop lret dec xchg or dec outsl add adc sti pop dec dec sbb je fisubr xchg data16 cltd ljmp test rcll mov out pop int3 adc push jae cmpsl add inc or mov lret sbb cmp xor lds mov push orl and pop sahf or in sbb or mov popl mov ss ror ret ret jne popf adc stc jecxz push or roll mov pop out jp out outsb in cmpsl inc outsb add fiadd (bad) jb out stc scas or adc (bad) pop add (bad) inc sahf pop out add push adc sar add inc ret push (bad) in arpl hlt push (bad) pushf pop ret out mov loop add mov fisubl pop (bad) mov pop (bad) ror sbb (bad) rolb test or mov xchg or push in int fcoml xchg lods sbb dec orl std insl jnp mov adc lret fnstsw lea jb out clc mov cltd loop std iret rcll inc xchg icebp sbb push jae ljmp xor mov pop push add and xchg mov dec push jnp sbb push adc xchg scas push outsb add repnz mov mov push fisttpl repz and pushf loopne pop cmc inc jae outsl cmp mov inc jno xchg push push adc nop add scas dec lret add popa es orb xlat push loop jp push or xchg fimull cmpl push xor mov ret xchg pop lahf (bad) data16 dec call push or xchg push jmp (bad) (bad) in xchg daa jge xchg adc or jns sbb jbe es test scas xor push lret testl iret repz or inc pusha mov mov sub pop push test add mov int jbe mov adc cmp aam lods xchg add xchg stos inc loop xchg fs pop iret sarb inc sbb dec cmp in (bad) push push push mov dec mov pop adcb and fwait mov cmp and adc add xrelease mov cmpsl mov push cmc pop (bad) fmuls popf dec add lods xor or imul enter jl adc sbb fnsave push jnp fisubr scas mov push xor out pop and out mov or xorps pop gs adc mov fdiv shrb xchg leave std xor cmp mov mov pop sub in adc mov lcall inc xor stc repz inc (bad) int3 test loop adc sbb pop lahf adc data16 fnstsw sbb push int3 pop jmp enter shrl idivl adc clc in shlb sbb repz mov mov int3 sti cmp sbbl pop mov adc jle hlt leave pop add sub push inc scas jecxz fstps dec or adc or popa nop adc pop pop sbb xor sarb scas mov sub jmp neg inc mov sti outsl and mov sbb pop add adc into push cmp popa lods mov inc (bad) jne adc push inc or and addr16 xchg mov popa aam punpckhwd js rcrb jmp cmpsl push mov adc xchg xor mov or dec repz cmpsb sbb out sahf xor pop int3 and cmp sbb push or test cld femms out lret or mov add jle sbb jne mov fldenv lcall (bad) cmp mov cmp mov xor sub ss call fcoml push mov mov (bad) adc or add repz mov xchg xor inc aas dec test (bad) dec adc push jp or repnz pop mov pusha dec ds iret out xor and adc sbb mov sub fsubrs repz pusha add jg (bad) or popf cltd fwait add cmp push lock xchg cli adc adc push cmpsl stos add mov dec push in scas adc (bad) repz push or outsl push inc adc pop les push mov pop or adc cmp inc mov cwtl xchg push adc arpl lea adc jbe,pt push cmpsb imul (bad) push pop push xchg fldt jo subl cmp bound out cmp push push add ret inc mov cmpsb ljmp or fcoml add inc insb adc jle cmp lcall push test xor in stos sbb sbb lods push flds push add mov pop mov add xor push inc es leave adc xor cmp fwait pusha (bad) int or cwtl les (bad) (bad) push inc sub or xor adc jmp sti adc in mov push dec pop xor xchg adc xor loop and inc pop repnz loope repz int3 pusha xor movsl icebp add in jg cpuid cld xor xor (bad) sub mov adc sbb xor loop and pusha add and popa sbb xchg jb je xchg dec add pop or add mov mov lcall movl lea sub adc repz xor xlat call xchg jl pop int3 mov mov pop inc add lahf out shll out mov rcll loope mov sub pop inc fiadd adc or div push jg test sbb xor cltd sub adc inc sub push movsl sbb repz mov xchg jecxz and adc stos in inc fs dec or cmp inc lea inc inc sti jnp xchg xor pop hlt notb adc adc add push push insb je (bad) adc adc adc in mov adc cwtl and pop aaa inc or adc nop movsl out sbb adc push sub repz enter cmp movzbl mov dec cmp fildll add and test dec clc (bad) mov pop cwtl mov ret cmp leave repnz mov adc orl jge inc push (bad) jbe jbe jo daa push mov xorl push test lcall daa int3 into scas dec es dec (bad) xor add daa mov adc fnstcw loope punpckhbw sbb push add int nop and add xor movsb bound push call std mov mov add imul cmpsl (bad) clc cltd out and adc popa jae sbb jg mov les mov test popa or mov js cmp leave in mov push cmp aaa push push cmc shrb repz cld mov popf pop add scas vpsrad mov lock cltd out popa adc aad loop jns out add or sbb cmp or inc xchg ficom xor rclb (bad) int3 mov push stos mov jmp fdivrl adc cmp adcl mov xchg gs xor push mov xor (bad) (bad) mov jmp (bad) jp push lods icebp sub pop repnz mov add ret or push movsb pop jmp push scas pusha gs bound jg scas cli test xchg mov inc sahf push data16 insl test pop bound xchg aam out and or xor sti (bad) dec xchg ret call cmp fistl xor gs adc mov mov sub pop jmp xor test adc jo jae xor jecxz jg rcll or add mov add mov jp adc sub jo cmpsl adc mov xchg out pop xlat cwtl xchg mov fldt fwait call jno xchg or xchg and mov lods mov push adc add mov pop test add shll sbb lret rclb (bad) loope jno sub pop cmp bound jge fildl xor or inc lea sarb jae (bad) adc aam and mov fcomip mov loop (bad) repnz imul push and xchg mov or inc adc test mov jb fstp call (bad) mov sbb mov mov ds popa adc pop in jmp and aad adc adc pop xor sbb inc adc jbe scas fs or mov mov repz inc mov cmp divb mov lret adc cmp xchg add jmp mov roll mov (bad) cmp shl push aam or mov lds dec jle push clc (bad) adc std dec and (bad) out xor scas clc rcrb rorl adc hlt loop or and fdivp iret mov lods xchg cld xlat fwait das sbb mov xchg shll mov sub mov xor mov xchg stos jg inc adc ja inc lcall repz xor fildll pop xor cs add mov mov pop mov xor or xchg aas mov adc stos pusha ret and sub sbb cmpsl (bad) int3 pop jns xchg push sub or clc (bad) push repnz jns std repnz ja jo (bad) mov sub pop xchg iret adc inc maxps int bound xchg adc out push shl xchg and into adc or gs int test inc pop call (bad) scas (bad) lods or mov add icebp pop jge,pt adc push mov fidivl jne dec add hlt inc mov adc xchg cmp dec mov push loope jbe dec cmp mov mov data16 sub dec mov punpckhwd jmp ljmp add addl jp icebp inc shrb lret or imull test je jecxz dec mov lea stos xorl or mov xchg mov mov pop pop (bad) bound test or jmp sbb incb repz adc xchg in fisttp adc xor xchg xchg ja jle leave sbb or dec xor add or (bad) jb sbb stos pop mov mov jg xchg cmp sbb mov adc jle pop arpl scas and push test loopne push pusha ja mov call adc or repz clc sub or enter add test rcrl sbb xorl push loope and push call lods xchg (bad) adc pop stos not dec (bad) sub and inc mov and cli cmp sub repnz lcall add les imul outsl add mov (bad) dec scas mov cli dec adc pop bound (bad) notb or xor jno repz push and test imul sbb mov adc inc mov out repz xchg imull iret xchg sbb jecxz xor pop or jnp push mov (bad) js leave adc add mov dec and in repz imul pop or es inc scas or mov rcrb stc push sub and or adc pop pop sub testl adc insb cld mov dec call ljmp js dec rorb std mov push dec and jne repz rorb dec inc ljmp jno add cmp data16 scas xchg adc dec mov jne je ret aam adc jmp in js (bad) mov sti mov cs jmp pop jae (bad) into xchg leave xor adc movsl aad clc and lahf mov repz mov cmp test xor push lods adc mov sbb sahf lods nop xchg aam inc xorl inc pop mov add ljmp sbb (bad) inc pop push jl out out or bound popf or add mov (bad) aaa xor mov dec or xchg pusha fisttpl shlb addb adc adc ljmp out xchg pop mov cli or (bad) sbb cmpsl push mov jbe xor ljmp cmc testl pop add mov and (bad) pop dec lcall pop mov adc loope icebp fnstsw mov and xor pop insb arpl pop jmp adc mov sbb adc es jbe dec cmp adc cmp fnstcw js mov mov sub call fnstsw popa dec push or cwtl jb xor les subb test enter dec bound jne rorl mov cmp daa insb mov cmp outsb (bad) adc sbb lahf or lds loop es ret test into mov or mulb pop imulb pop jbe repnz and dec int ret stc xor adc adc repz add push jns mov lahf mov cmpsl jmp add push inc cltd dec arpl sbb mov out (bad) into sbb negb mov ljmp or clc adc add lds xchg popa adc test lret add dec cltd dec bound jo cli hlt mov push popf lret xchg adc shlb sbb bound dec mov mov sbb repnz jne add adc (bad) movsb sbb out shrb jle aad sahf lock mov push ljmp or ret adc cmpsl jp fnsave adc mov in out icebp jnp sub mov inc mov inc mov (bad) (bad) adc push xor sub fwait xchg and in fisubl dec and mov xchg mov sbb mov ficom clc aaa adc xchg ret push pop sahf (bad) add sti mov mov mov je insl cmp in cli cmpsl inc pop psrad ja (bad) jb adc or cmp mov pop dec inc movsl incl jnp jnp push mov adc push movsb aam fdiv jmp loopne and mov adc inc test pop xchg push pop mov popa sub mov adc and repnz jne adc lcall adc (bad) mov mov cmpsl into pushf jle hlt std push es ja stos fiaddl lds pop mov leave mov xchg fst das inc js data16 mov test (bad) mov popa imul sub daa jmp andps xlat pop push or adc cmp test lods fnsave sub (bad) fidiv js (bad) xchg mov mov push mov sti je adc fistpl (bad) push xlat mov mov pop (bad) repnz inc loop in scas adc rol push pop mov adc out leave mov rolb cmp loopne or xchg lds adc cmpsl mov ss mov adc out pop aaa adc fs mov xor sbb fdivrl int fcmovbe or xchg push mov dec je outsl mov divl das repz or arpl in pop add mov outsb fcoms scas ret push xsavec pop mov add adc jno cwtl adc jg push sbb in and dec sub adc imul sahf mov in rcll (bad) jp fcoml cmpsb mov inc cmp xchg in pop xor mov (bad) jns adc add adc jg (bad) std push nop rclb or add adc (bad) lods pop cmc (bad) into lds push sbb fisub push aam push push push scas mov loop je mov mov add lea mov lret rcr pop jl outsb sbb adc jge lret (bad) mov xchg repnz into jecxz or mov rolb and push pop adc xor mov mov shll mov add in jb sub scas mov sub pop pop mov icebp sbb xchg movsl aad movsb rcll mov push stc dec mov dec adc and pushf sbb xchg adc mov fist adc or cmp jmp adc outsl (bad) movsb add pop push dec es push pop xor lds push fs loopne adc hlt ja (bad) fs repnz loope sti test xor ret int les jecxz sti pushl add jmp ret sub outsl adc xor add xor roll arpl pop sbb sub mov (bad) fiaddl sti int mov testb stc mov adc adc sbb ret imul out insb push adc mov lods add (bad) xchg test adc mov gs mov dec add aaa adc push jmp xchg mov jg push sti cs ret pop push insb mov outsl xor add cmp js xorl das adc push cld dec push in cmp push insb sbb out adc (bad) dec aaa jns jno movsb pop ss out fs (bad) adc and pop lods (bad) aad sub mov (bad) inc (bad) fdiv or fldcw lods pop fisttp subl sbb jecxz sbb cmpsb mov add jbe mov stos push or adc mov mov adc mov cmp pushf cmp adc call pop adc add mov (bad) sub pop pop popa pop mov add push into adc sbb lock adc cltd imul pop sub inc and add adc dec sbb lahf icebp adc clc bound push adc jns (bad) hlt ja adc pop insl (bad) sahf jg xor (bad) adc mov pop bound and push leave out outsl adc xchg cmp adc mov push js shlb insl adc in cmp pop mov xor cwtl dec bound js clc cmp lds insl sub mov pop icebp ljmp push pcmpeqw xchg adc mov pushf fisttpll adc sbb mov add jbe fwait movl aas imul xchg sbb adc movsb adc cmpl mov pop sub loop rclb adc xchg cld nop xor pavgb jle into and adc jae iret xor ss adc dec mov js jg cmp xchg sbb aam ds xchg xchg dec insl cmp inc mov (bad) aam xlat push jmp dec adc pop cmp je,pn pusha nop cmpsl js mov cld or mov adc call sbb pop das repnz js sbb enter and push fcomps mov jno or adc clc loopne cmpsl or call loop or mov mov das fnstenv sarl push repnz inc sbb mov lret jecxz push push mov insl daa negl in movsb sub (bad) mov mov xchg pop decl pop (bad) and popa mov xor mov xchg aam seto jno xor hlt sarl ret cltd ja rcpps fnstcw (bad) adc jle mov iret gs push adc jle adc cli inc mov fisubl sbb lret cli movl xchg (bad) or pop (bad) out addr16 sti adc out and out or add xor sub dec xchg out cmpsb outsb loop or adc mov aas adc mov cwtl add out add pushf add mov sub fldz and sti sbb ja mov je adc movsl pop lcall or dec add cmp adc sub ret insl lret jl cmpsl sti mov jg sbb adc rol mov adc movsb sbb cmp pop add push mov rdpmc pop in out out or pop push mov scas xchg shl xor mov int pushf jne (bad) enter data16 decb adc jns out sbb cmp call add adc and jg (bad) xchg (bad) or adc das ret test (bad) loopne aas jg aad leave sbb xlat ljmp adc jecxz sti adc fbstp xlat mov adc daa insl es leave lock js push aaa inc cmpsl mov adc sbb pop cwtl sbb adc mov insb xlat add nop and sbb mov cld xchg lret iret add xchg rorb dec pop test inc subl scas out pop mov mov (bad) jbe adc cmp pop jg ss aad shrb icebp adc mov cmp dec out popf push ja loopne prefetch sbb (bad) jno adc arpl push pcmpgtw (bad) mov (bad) in mov std add loop sub xchg xlat cmpsb imul stos lods or addr16 rcll pop xor pop imul adc (bad) aad xchg cmp jl je cmp loope addr16 sbb adc jmp xor and cli or add sub add cmp adc sbb adc cmp mov test push mov dec ja push push jecxz inc stos arpl out inc sti xchg adc inc hlt daa sbb sub mull xor pop in sub subl mov cltd nop insb fidivl push inc sub xor cmp mov movsl adc fildl adc or add test dec inc xor jge pop (bad) pusha adc push (bad) movsb xchg fisttpll mov scas dec pop jb and adc and sti adc fbstp in enter mov aaa mov jb adc imul or mov inc pop mov adc test mov pop ljmp add fwait sbb subb cld pusha loope adc fwait inc xchg pop mov mov mov add int sbb jno add in into pop xor or das rcrl icebp ret dec sbb adc inc mov test sub cwtl or sarl mov mov divl (bad) setle cld pop mov sbb ficompl jns stos adc and mov jnp popa dec out xor int3 inc xor daa adc movl imul jecxz adc adc xchg cwtl repz and adc aam mov cmpsb pusha enter jmp fldl xchg lds aam cli (bad) ret ror mov adc add push fwait sub sti adc push pushf mov adc sub add mov mov mov xor loopne mov dec push sbb rorb call cli cmp adc inc in pop pop out adc xchg push pusha cmp jae xor (bad) ficompl inc insl lods jo jae int3 inc enter fwait cld xchg repz cmp lods rorb dec mov mov lock mov fwait iret lret adc jmp mov adc stc cwtl pop adc imul push xor bound push repnz subb add lahf cmp fwait add and scas lock adc dec jnp sbb mov repz addr16 fcomip mov nop mov rolb add jge repnz repz adc xchg das mov push (bad) jnp in jmp sti (bad) (bad) or sub adc (bad) mov dec pop icebp icebp jno ret inc mov adc test and std pop repz (bad) mov xchg mov mov adc imul sub xor xchg cltd mov enter add mov jge out (bad) sbb xor inc xchg fcmovne dec sub outsb adc ja and add adc sbb push arpl jae fidivl pop sbb push stos movsb jg pop sti xchg xor mov adc xchg ja pushf loop adc mov mov dec adc push jb pop rol lds popa add std (bad) jp fwait push adc aaa frstor or xor sub pop imul xchg mov pop adc in dec repz add clflush neg out rcll mov pop sub clc xchg pusha jecxz mov sti xchg rorb out test jb mov sub lret xor and and jb push sbb sbb adc add adc fiadd test dec out (bad) repnz pop adc adc mov icebp inc fdivrp jae adc mov sbb out add mov cli pop imul (bad) mov iret xor js out out fwait jo outsl outsb push adc sbb sub and xor stc fs mov dec mov xchg je push cmp jae popf push cmp or sub js inc (bad) jp mov shl scas jno xor sbb adc divb adc or pop fs call lcall rcrl fidiv scas sub notb sbb insl mov xchg lods inc adc xchg cmp popa mov mov in outsl test jl loope xchg iret int3 adc sar mov ja movsb xchg cvttps2pi adc loopne js aam and loope into mov xor jb movsb push int3 pop je insb adc (bad) bound scas scas repz lahf push loope adc pop icebp call pop fbstp sbb bound adc adc jbe adc popf sub cli loope mov pop scas nop mov mov xor add sub push adc sub mov add cli cmp rolb jns xor or out (bad) mov insb mov (bad) insl mov adc xor insb mov pop push cli adc mov out jnp neg (bad) jecxz cmpsl xchg iret rclb sbb in mov mov or pop adc adc imul add dec cmpsl push xchg testb or jnp mov mov or cmp push and jmp sbb add push leave jne adc pop dec adc adc and and push lock mov lods cmp mov fbld dec sbb lret or adc jg adc jnp ror in pop adc jns repz or push adc mov add insl cmpsb imul jno xor aad bound jge cmp repz jns cli pop push cmc mov mov jne mov mov mov lahf test jbe repz adc mov mov lret scas sub xchg adc imul insb idivl or or dec mov pop int3 adc fsts pop test ret loopne popf adc jbe push adc jmp sbb pop cmp adc adc cmpsb sub movsl mov dec adc push loopne xor popf or out adc into push in mov adc jmp loop mov mov repz pop push sub lods cmpsb xchg dec adc call les test rclb je loop ja lock xchg std stos xchg iret (bad) mov pop jmp xlat jbe data16 lods test jmp icebp or pop lret push xor push std or push scas sbb jmp jl shlb cmp or xchg aam push scas lret jmp sbb pushw iret scas repz jl ret (bad) repz je lret add gs shrl mov aad cmp xchg adc into pop divl lods adc dec xor mov push cli push icebp out in lret lret add pop mov sub inc xor call xchg (bad) adc pop int3 pop sbb repnz aam cmp mov push mov fisttpl jmp adcl fdivs pop jecxz xor aad pushfw lods hlt dec cwtl xchg sbb dec xor je push (bad) sbb cmp push arpl in sbb prefetch fstpl rclb jl lods lahf jmp call frstor dec jecxz imul stos xlat dec sbb fs inc push jge pusha adc mov adc shll repz scas shlb jb mov or movsl popf and cmp xlat adc mov pop data16 repnz divb mov repz scas sbb or add loop or push dec jl mov sbb insl test repz data16 decl xchg push std arpl lock out mov add mov mov mov sub (bad) scas hlt stos cwtl add sbb sub pop and loopne adc not mov adc scas in add mov sbb outsb mov mov jno mov icebp enter or lret cmc stos fwait sbb outsb add add lret subl inc mov cmc push or shlb add and adc xlat push push cmp push inc scas add pop push call fdivr mov lea jo jns repnz xor mov pop mov pop add cmp rolb inc pushl jp aam mov mov (bad) addr16 dec repnz mov mov testl mov test adc imul and adc test cmp (bad) mov mov sub jl (bad) xor je mov pop sbb repnz push repz push xchg push inc mov (bad) (bad) nop fisttpll cwtl sbb or jb adc popl pushf insb mov adc enter adc shrl fimull cmp cmp lods xchg lds imul jae ja or popl pop inc inc cmp mov adc mov cmpb pcmpgtd push mov add cmp adc adc ja push aam adcl lea xor stc in adc cmp mov pop push cmc jne in test (bad) adc sahf cmp adc jns icebp dec movq adc pop ds jne mov pop sbb es pop jnp dec mov add or dec leave adc xchg test adc xor push mov in je sbb sbb fldenv insl sar add push jmp mov mov adc test xchg and mov push rcrb mov push (bad) pop mov push rorb movb cmp test adc cmp fcoms xchg push outsl nop rclb inc pop mov adc stc test xlat (bad) stos adc pop adc out mov mov jnp add xorb and xor or scas adc cwtl or pop sbb inc adc mov and gs loop call mov xor jecxz adc leave (bad) mov xor data16 imul rcrb into mov sbb mov xor adc stos mov adc inc outsb jmp (bad) test int3 mov cwtl mov lret sbb mov pop popa fidivr jo push adc sub insb mov repz les push out (bad) mov adc in or adc inc rcll adc pop pop lret (bad) fiadd sbb mov adc outsl pop hlt or fstpl repz (bad) std rclb dec imul and cmpsb repz imul sbb push iret mov push adc sbb jecxz lock lcall stos add popf nop adc sub mov push (bad) jno pushf out adc ljmp int adc leave xor adc loop daa (bad) out addl jns mov cmc sbb das nop int data16 mov icebp jo adc out mov (bad) pop mov xor cmpsl pop lret dec nop mov sbb imul sub xchg fsubr or ret outsl cltd add mov pop cld mov xorb arpl adc adc (bad) fldl jnp and ja rcrb push jg or fild add pop jne adc imul mov mov adc pop jecxz mov mov int loop movsl (bad) mov popf push iret enter adc fldl movsb repz ret pop popf or inc mov (bad) mul jb xlat pop (bad) xchg adc sub cmpsb sti dec ljmp jno lds out jne xchg std mov sub add or sbb adc jno aas mov sbb add cld dec adc push xor push mov xor outsb xchg jge pushf inc test fsubl add fidivl (bad) out xor sbb inc jg push inc or cmp mov cld xchg xchg into mov add insl test pop lods lret imul not inc xchg push rcrb fistpl popa jne in jno pop mov jg mov inc pop sbb xor add dec imul adc or pop cwtl mov aam fldl adc in jnp test mov jb lea jl cli sub mov insl (bad) repz pop adc insl enter xchg xor mov cmc or inc cmpsb cmp dec insl xchg lret std and dec pop sub push adc insb mov imul xchg or jbe mov fcmovb pop adc divb out jne mov insl pusha stc push adc sbb adc mov je cltd xor repz jno mov mov adc jg call loop enter clc nop pop stos jl rep adc xor adc sub mov xor inc fldenv das popf gs adc pop mov adc movsb rclb pusha add add nop adc add lock pop mov imul roll and mov mov adc adc pop jecxz xor loopne nop negb insl addr16 adc fs repnz stc add push aaa sub inc pop mov andb add mov sub shlb cwtl pusha mov iret push imul call lcall ds aad cmovb ljmp add pop into adc or hlt mov adc and adc xor mov jmp sub cmp insl or rclb jnp mov jle add pop dec and sbb jb mov or movsb adc jne and lret adc mov cmp adc push lahf and jbe adc dec push xchg daa jle pop js push add mov xor lret xor pop cli jg dec movsl sub adc mov cld adc scas notb repnz xchg adc fbld ret and pop cld lahf repz inc mov (bad) mov inc js mov push jmp hlt hlt sarb xchg or cmp push jne adc sub jnp adc das mov iret (bad) xor cmpsb subss sub es mov (bad) sbb inc or cmp adc mov push cli mov jo mov fild xlat out out xor push mulb adc loop sti sbb cmp push inc stos add xchg aas xlat adc dec stos lods adc jg,pn ss push mov negl and or pushf mov add cmpsl mov incb jnp std lea scas leave or rcll push jae xchg loop adcl mov test push add cmp dec in jo cltd int3 cwtl dec pop scas int adc adcl xchg push or and lret push fist test add (bad) pop rorl out sub adc xchg dec xchg shl adcl push cmp adc add ljmp js pop (bad) sbb mov lcall or lods adc sub add ret adc sub jne or xor inc mov or shr mov and cs xchg dec adc xchg into imul jae lea inc (bad) fs mov pop jmp push pop nop fwait inc stos or (bad) int adc xor sbb push adc (bad) enter inc fcomps mov pop and adc mov test cmp (bad) lret dec sbb sbb xor and or dec sahf or fs pop rcrb (bad) std xchg lea adc xor cmp add call gs dec or lock jb xchg adc jo push stos rolb scas xchg fimul (bad) repnz adc and cltd bound int3 mov or xchg adc xchg xor adc int3 cld ret (bad) notb outsb or push fs sbb add (bad) mov rclb pop adc inc xor ja lahf mov mov xchg xor xor and mov inc cmp mov je repz mov jbe adc test mov (bad) adc mov (bad) adc adc movsb (bad) fiaddl fs repz jo sbb outsb imul adc jle adc imul add (bad) (bad) xchg test adc sub aad adc xlat fildl or int adc sbb sub in fdivr mov js pavgw mov or jg sahf test mov pushf adc or adc pushf jge ja nop dec sub in (bad) loopne mov dec repz inc adc in sbb mov cli adc mov lret mov jbe roll and sub ffreep or js fwait es and mov push sti sub pop faddl push (bad) (bad) popf mov lret cmpsb inc and je adcl pop push outsb shl mov adc xchg ljmp int3 jbe dec xchg add mov stos ret jmp test int or or push gs add adc sahf jne (bad) repz mov and nop xchg adc dec or test add je cmp mov dec (bad) (bad) pop jg loope adcl jp into dec adc lods push and adc in cltd mov adc fucomip lahf (bad) jp mov mov adc sarb add repz lea dec jns repz movsl fwait mov cmp icebp mov sbb pop adc gs adc xchg test add fmuls add cmp test test sbb popf repz sub cmp push cmpsl push mov faddl pop adc mov adc iret push and int rol cmp pop pop nop and jecxz dec and mov imul test jecxz dec daa add sbb xor fistl jmp mov in xchg out fcomi cmc inc sbb fmull (bad) mov mov repz enter aas pop sbb cmp jno adc ja sbb adc stos cmp mov xchg mov jp xorl xchg cmpsb fs mov mov sub outsl add jnp add and dec cmp and stc push adc xchg mov inc mov mov sbb insb jae mov stos mov add mov nop fwait xchg pusha or inc jns push adc aad add pop sti adc and ja adc pushf xor mov dec push bt fist inc add mov loop xchg dec adc mov imul push das test add pop imul fadds lds adc sbbl adc xchg lods xchg rcrl aam and into or lahf mov dec adc inc dec mov sahf xor out std mov repz mov dec clc ret pop add mov mul sbb popa repz mov adc jmp div scas mov sub stos cmp sahf mov mov add mov ja hlt inc and mov test sub xor mov mov push outsb das rsqrtps (bad) push inc push lods into popa inc cmpsb xor push mov mov (bad) xchg lea in pop sub int3 xor ret jmp (bad) cld leave add gs mov imul jl ret pop mov gs cmpsl mov in fstenv push dec sti push movsb mov das push mov pushl mov pushl ret jmp cmc mov cmc movsbw rol btc mov test mov test mov pusha sub mov bt pushf pushf repnz call test add call jne mov adc (bad) ret pop add ret mov popa push nop add js and pop lret ss into in xorl in sti ficoml push stos adc mov sbb fcoml flds add and stos addr16 mov adc shll roll div dec ret and adc pop in test sbb sbb (bad) repnz imull (bad) lds sub jecxz das and or inc movsb adc and mov sbb inc fildll dec xor jbe repz jge cmp stc inc mov jno add add jb cld push jg mov in add push jno jbe adc xchg mov pop je test sbb out sbb sub daa clc nop mov daa outsl into cmp arpl pop mov mov incl (bad) out jnp xchg push aas mov decb mov outsl mov pop jle cwtl gs sbb ljmp pushf popa int3 imul std pop icebp (bad) mov popf std outsl scas in popf jp (bad) xlat lods mov sub sub dec and bound pop repnz orl (bad) fwait in dec repz stos jecxz and aas shrl fs add xchg movsl aas mov mov pushf mov push setge lea pushf call pushl popl cmc stc cmp pusha movb mov pusha lea ja rcr clc bt cmc sub lea add bswap clc shr mov adc bt bt neg mov push cmc push repnz pushf lea jne cwtl lea cwtl pusha movb mov mov movzbw not lea pushl pusha pushf call iret clc ret adc mov rcrl adc xchg push pop mov icebp test fs lds adc and push fnstenv adc mov movsb icebp jb pop push cli adc imul arpl xchg mov in into movsl insl cmc mov call xor mov dec dec push scas int3 xchg push jb adc scas icebp iret or ljmp stos cmc fcoms fistpll pop negl dec pop and xor mov mov pop rolb popa ljmp lods mov cld leave mov in mov loop std lods test fistp out pop xchg and push fs ljmp jno xchg dec jge bound stos imul insb lods sbb sbb xchg cmpsb inc and or mov in xchg cmp add cmpsl aam dec mov les clc mov mov and cmp pop mov sbb lcall scas int3 movsb pop in in add dec sbbl jnp das jbe pop mov movsb add es cmpsb mov outsl fisubl iret dec leave das testl lock test dec mov xor inc jmp out pop test lcall aaa (bad) sub or call xorb lds inc jmp mov pop pop sahf cwtl dec imul daa ror mov and xchg sbb js fstpl scas push insb les stos call out mov dec scas je pop (bad) fdivs cmp addr16 xchg add jecxz mov call jp rorb sbb ss nop lods mov push xchg cmp or sub xor lret in dec cmp push lcall jae ds rorl inc cmpsl xor pushl popl pushl cmp clc jmp push lock std std (bad) addr16 push mov ret jns xor ret shrl mov pop dec ss pop lcall icebp sub pusha and aam pop ret add out shlb xchg test mov pushf jno push inc add lods add xchg push (bad) stos in sahf daa push and iret lock (bad) push push mov pushf lea jmp jmp cmp test pusha mov test pushl cmp cmpb pusha movb lea jne rcr bswap not xor sete pushf lahf mov mov sub ror add call jmp add in (bad) adc mov sbb not lds cmp dec test cmp outsb push stos (bad) xchg (bad) or ss cmp push (bad) cld stos out (bad) arpl add mov ret insb aad repnz shrl push int pop xchg add nop cmpsl mov mov add sbb pushf mov dec test jnp fistpl fs lea mov inc xor push gs outsl es sub jns jo jle out daa dec enter cmp dec dec push int pop (bad) pop aam bound es cmp mov xchg call pushl movl pushf pushf movb lea jmp push cld mov inc in ret test mov add push sub mov cltd clc loope icebp or test jle rcll loope mov xchg xchg stos out daa in push dec sub les sbb mov pop mov lods les in cmp cmp sbb shrl adc mov add insb out pop fninit fucomi jp rcrb and mov dec pushf xchg pushf sub and jae call stos xchg nop mov jp adc mov lods cmp jne stc out lea sub outsl call xchg and mov jl inc add dec lea icebp stc xor or in mov dec int xor lods jns rolb cli arpl cmpsl push fwait add insb nop ja enter out cmp in add push roll cmp and fsubrs div cmc add xchg ficom das out and pop pop cmpsl les ljmp sub pop leave and cmp stc cmp xchg int3 sub jne xchg pop stc xor pop outsb mov notb add rcll xor push push lea ja cmc stc pusha bt imul push movb pusha add movb mov movb movb lea jmp int3 popf jmp setb push mov mov call add push dec inc gs outsl insb fs popa je inc add sar (bad) not jmp mov movsb testb movzbl add mov movzbw push mov lea pusha push jmp sbb adc pop sub sub mov fcomi lahf mov call ss lret add jne je ret nop adcl iret fsubs mov bound test cs jnp mov out add sbb push fiaddl clc lcall jno test hlt icebp (bad) sub xor flds sti adc (bad) lcall (bad) push aaa test loope xor das push sahf addl mov ljmp hlt shll mov (bad) gs lea loopw std or push test inc mov xchg xchg pop mov dec fwait push xchg std adc loope loope and sbb mov movl call add inc (bad) jle (bad) xchg and fbld push and push mov arpl lock jbe test int3 in (bad) lods mov and loopne,pn insb cmp loopne jge cmpsl out sbbl xchg xor inc in inc jecxz mov fwait and xor sbb bndldx mov sub mov push imul loopne jmp cmc push push cmpsl test inc jbe sbb iret push call fildll sbb call lock in and add pop mov gs and popa popf add js mov dec test pop (bad) xlat xor enter stos incl enter xor icebp lea fwait xchg push pop fnop cmp ljmp decb fdivl test test mov cmove loope and jp adc add stos bound movsb mov repz dec xchg outsl fistpll call stos cli pop (bad) mov bound inc in loope (bad) dec ja push js and sub cld sub out xchg jmp cmpsb adc sub adc frstor outsb xchg bswap sbb sbb push movzbw inc bts stc mov neg not neg push neg bsf push pusha mov jmp lea mov pushl mov pushl ret call push pushf movw movl pushf call lea jae call jne gs xor fs insb add fs jbe btc mov neg shr btc and add shl sar mov shrd add shr movl stc mov test clc clc jmp add test mov pushf test call inc inc push inc push dec xor cs insb add fnsave xlat pusha mov lea setno inc mov mov jno push mov call jmp lea je call jge sbb into adc int push test bound fsubs imul pop pop dec and xor lods fldl mov stos imul pavgw mov loopne outsl dec adc or (bad) sahf loop popa cltd out fisubrl and rorb push insl adc push sub cmp mov pushf shlb mov (bad) out xlat out flds cs adc icebp (bad) enter inc jne insl out xchg addl xor inc mov push pushf pusha lea jne xor mov shrd adc mov push cmc pushf cmp jmp mov cmp jmp lea ret lea ja pusha jmp pusha call mov lea pushf lea call jmp add call push pushl movl pusha call ret clc stos ds adc in sar pushf popf int xor sar mov rorl dec fdivrp icebp cwtl lods rcll push jge sarl enter lock xchg dec sub ucomiss jne push jno (bad) xor lods inc dec cmp xchg in xor outsl out test fbld (bad) fcomi pop test (bad) fs (bad) add data16 inc xchg nop jbe sub je add movsbl bswap mov jmp rep movzbw pop pop mov push pushf mov lea jmp adc movb pushf pushf lea jmp xadd mov btr pushf add not mov mov pushf call not jmp rol inc mov cmp cmp cmp cmpb pushf jmp mov adc loop mov movsb add push cwtl ss fcmove mov js push xchg pushf xor sbb rcrb leave nop imul xchg out cltd js sbb or mov je icebp rorb xor scas xchg inc mov sbb fidivrl (bad) int lret inc lcall nop movsl dec sub aad scas mov (bad) mov inc or shrl inc nop jo mov fnstcw xor jge jp test and adc loop test (bad) cld (bad) jmp add into jle idiv aaa mov pop scas out xchg xor in jle std in cmp xchg mov call mov out xor or ficompl (bad) cwtl or xor jecxz jl repz and das and lods hlt rcll clc in int3 jg xchg jno das add sub out addr16 xchg cmpl add xchg pushl sbb sti pop imul add enter lods aam dec movw lea jae call push lea je clc jmp and pusha movw call cmp inc inc aas xor lods add dec leave xor loopne rorb in repz sub inc es add mov sub or (bad) idivb dec mov lods xchg (bad) das pop push mov xor mov jne movsb jle pop mov pop cmp or (bad) outsb fldenv cmpsb out mov arpl jnp in lret push adc push cmp and dec lret in mov test test inc in dec loope lcall cmp aas dec ja push cmc cmp jmp add adc bound lahf add adc imul arpl fcomps and push push xchg and (bad) imulb inc outsl clc pop fildll (bad) add sub and adc or xchg cmpsb dec and call das sub idivb (bad) mov cmp outsb pop push push dec ficoml pop cmpsl cs jb (bad) sub jne loop pop mov pop mov fidivrl scas adc mov mov or es xor in loopw push ret mov std mov push cmc dec push dec insl aam cmp pop inc test mov dec pop ret xchg (bad) pop into mov movl pusha lea jmp pushf movb call sbb bts jmp cli jmp inc lret adc cltd fimul inc inc pop hlt sub cmp shl aaa ljmp lahf inc pop mov ss insl lds mov loope (bad) aad sub hlt xor out ret ds mov sbb out cld jo push lret jbe xchg jns es lea jae js pushf push pushf lea jne call push pusha movl push pushl push call movzbw dec mov adc cmp mov xor bt mov stc cmp call lea jmp leave out stos inc aam inc jge adc pop das fistpl or mov cmpsl cwtl sbb adc nop pop pop lahf outsb xchg test cmp cli int inc js dec dec adc or daa lret imulb ret jbe roll fsubrl xchg pop cwtl jg xchg mov icebp sbb cs lret shlb mov roll stos sub orl negb fcomps inc sub push mov cld adc jnp aas mov sbb in iret ret cmp aaa cld in jecxz add and adc aam inc dec mov out stos jnp daa cmp shlb xchg fisttpl add std fidivl mov or subb leave loopne xor mov dec es add test out sbb jg test cmp shr lock push fwait call popa (bad) adc cmp jmp popa (bad) jmp iret pop js add jmp inc mov (bad) loop (bad) repz aad aas mov icebp cli flds dec icebp cwtl je sti or dec xchg ja inc clc repz xor add int3 and or dec test fdivr sub sub imul (bad) jmp enter outsl ret adc fwait imul mov clc pusha pushf sub lea pusha or push push lea je call lea je push pushf cmp pusha movw mov movl lea je cmc pusha cmp movw lea je pusha push lea jmp pusha cmc sub call sub mov je movsl sub sarb (bad) push lods (bad) sbb outsb mov test lcall scas mov (bad) dec lea loope xchg cwtl xlat lock add gs mov mov (bad) jp gs and inc adc push ja pop adc mov jmp push aam in fucomp bnd and arpl lea sar pop jl js imul mov (bad) lock rcl jl add shlb jp enter xor mov test pop decb nop test addr16 jmp pushl movl push pushl pushf push lea jmp lea je push clc test add movb add jg pushf test cmp jmp (bad) iret mov imul repz mov fcoms mov cmp outsb dec int sbbl dec movsb insb (bad) nop mov jb push inc sub cmpl xchg pop push je test daa jno nop and cltd addr16 rcll mov rclb dec adc adc and jae std xor pop xlat inc or cmp xchg loopne loopne jmp sub adc into and nop sub mov or jmp out (bad) xor pop outsl (bad) sbb in sahf xor inc imul sti jp leave inc sahf rclb inc mov sub dec mov dec (bad) pop (bad) fldl test jp dec icebp arpl pusha mov xchg loop out mov sbb sbb imul fyl2xp1 gs int aad lcall and xor cmpl mov xchg leave mov dec sub jno lret pop and push ret ljmp lahf add into push test jbe pusha cmp cmc cmp call clc pusha imul clc test call stc push cmp pushf mov call pushf pushf lea je btr pushf add inc sub shrd shrd shr rol mov setae cmc adc ror add setno or cmp add movsbw or pushf not mov bt mov stc call jmp pushf pushf movl pusha pushf movl mov push movb lea jmp push pushf mov pushf lea jp movsbl push mov pusha pushl movl pushf pushl ret cmc sub cmc pusha cmp movb cmp jmp jmp mov lea call jmp cmp inc decl mov xor pop jl mov adc mov lcall arpl pop insb icebp or mov aam add mov mov pop dec mov mov mov scas mov dec inc xor pop and (bad) jecxz push lods dec or add mov mov ss pop sbb insl mov addr16 pop dec mov outsl mov or cmpsl or pop outsb adc pop psraw push or lahf mov int3 mov in loopne das push test mov mov xchg aad int3 ja insb xchg mov push in adc or jp adc cltd jg xchg in mov iret mov pusha lea call jmp and inc lds cmp insl lds push gs popf das (bad) insl movsb fmulp adc xchg and or pop mov mov or jle jne je xor dec rolb rol or xchg cmp push or ss inc fwait mov outsb cmc aas mov and repz jne btr not mov test test pushf pusha add stc clc pusha movzwl lea shr rcl rol mov clc cmc add bt jmp xor adc js inc xchg push inc sub jne xor fnstsw lret rorb stos rclb sarb loopne pushf push scas cs aad test je adc and adc sub gs mov (bad) outsl (bad) jp cmc and test sbbl out or imul mov inc xchg and xchg push lods daa mov pop mov push lcall push pop push test inc fnstsw arpl inc call xchg ficomp lret (bad) sti ljmp repz inc int or pop jno jl xlat pop dec imul sub jae jae jl stos ret aaa outsb arpl push fwait aad scas cs xchg adc divps push xchg lea mov insl pop mov fs jne movzbw bsf shr sub bsf mov setnp ror or not add ror sar rcr xor mov test stc test jmp call mov inc add test fs and sbb fsubr inc scas push or fistpl rcr nop mov or repnz das mov push jns hlt or jmp dec push fcoms (bad) pushf pop cltd xor out out sub (bad) dec int pop cmp outsb xor mov ret fcmovb xchg ret lock sub xlat stos lods lods xchg jnp pop js dec and js and or mov repnz sbb inc outsb in xchg inc (bad) stos rolb cmp mov push lcall jl shrb add outsb out push sbb test out ljmp pop push and xor lea jmp lea call jmp push pushl popl pushf pushf pushl ret push adc sub xchg push (bad) mov fs jno or mov loop mov dec shrl or sbb jmp sete mov aad mov jl sub stos push outsl push and mov gs lods xchg loop (bad) or mov fdivl jl test xchg andb dec fldenv leave adc adc adc or xchg xchg orb pop nop pop dec out and stc jmp daa sub jp dec call jnp outsb fs pop je and mov lret push cmp sbb add cmp or inc sub aad mov xchg add jae cltd mov in xor stos xor mov adc fwait aam sbbb out and call jmp mov adc sub adc out cmp xchg iret call sbb stos mov loop xchg pop cld jge repz mov cwtl pop les mov or jmp shlb add mov int3 (bad) xlat scas add repnz xchg sbb test or mov mov scas or mov cld mov sub adc xor imul out adc jmp imul je mov mov push xor in xchg in stc xchg leave les adc sub (bad) in shl pop call std aam inc xchg sbb (bad) fcomip in adc lods mov and adc jmp subb in xchg out dec stc mov rcll lds or xchg jecxz int int xor out call sub push insb nop jae arpl push dec inc out roll shlb fmul xor xorl add notb xchg out push xchg movsl adc scas and add pop cli add and push out test mov mov jo xchg out stc or (bad) inc jl nop shr cs push std flds xchg subl push pop pop push adc inc and mov pushf fwait push adc jb sbb xchg xchg lret pusha xchg mov jmp add xchg mov and test adc inc adc lods cmp xorb mov xchg or and popa mov add lods mov pop lret mov pop push (bad) cwtl push add mov nop sbb xor adcl out mov cmp mov and loop outsb push mov xchg mov mov pop xchg inc mov sub xchg dec mov nop jle bound inc fstl cltd dec pop push xchg repnz cmpl sti inc xchg js xorb or repz push xor push adc mov xchg ret push ret xchg sub pop gs push pop (bad) rorl leave adc dec sub dec mov xor add lret sbb lcall pop xor lret add add out lret or add jge xor or cli mov adc js sbb cltd dec in out addb pop add add add out or aas addl loop push and repnz out sbb sahf lcall cmc or xchg push repz sub sub mov outsb adc sbb or int3 sbb fistp cmc in or or aam push xlat inc push mov jle movsb ljmp sbb out xchg mov and dec das aas xchg aam (bad) or shlb sbbl cmp cmpsb mov cltd into icebp lret jns inc lret cmp xlat xlat inc push pop push loopne mov rclb (bad) or (bad) hlt mov mov mov outsb sbb (bad) or (bad) or inc xchg shrl pop mov adc xchg or mov in push jmp fstpt pop sbb sbb je and test stos xchg fwait jbe mov adc cmpsb add xchg push dec out adc sbb adc std gs aam sub lret inc mov cmp int pop aam pop movsl pop push jle push xor adc jo adc (bad) adc cli mov xchg pushf jecxz icebp ret push push les xchg pop push cltd push push xchg pop xor sbbl pop pop sbbb mov not aas cltd jno pop add adc cmp sbb push (bad) jge sbb cmp cmp mov mov lret dec clc push add jbe popf std popf adc or add cmp adc xchg aam dec fwait cmc pop loopne mov add push cmp xlat xchg sti add adc sbb (bad) mov sbb inc (bad) push pop adc add fs fdivrp add aas xlat lahf push pop adc repnz jl jo stc adc pop adc sbb sbb adc add fsts push or popf add (bad) lcall fildl sbb adc push sbb add mov popa push out push push xchg sbbl or inc add xchg hlt fwait loop sbb (bad) push or xchg adc pushf ficom add adc mov xor loop nop or mov pop add addl inc adc inc sbb sbb push push or mov xor sti (bad) repnz out xchg bnd cmc nop adc add mov xchg sbbl sbb xchg repnz fwait sbb loop xchg push cs rcrb sub sti xchg dec adc mov xchg mov cwtl pop mov test scas dec test rolb jle pop int andb movsb mov nop jge lock inc and or sbb add mov and enter pop iret iret mov lods aad and int3 pop xchg inc push stos jg xlat cmp xor inc add xchg out loop cmp mov mov sbb ret push dec loop out push mov rcl out or xchg js ja repnz cmc das iret cmpsl pmuludq pop popa sub push movsl movsb pop pop clc jmp stc cltd repz mov ret enter mov mov (bad) sti out aaa push (bad) or daa dec jb je,pn fstpl in adc inc enter dec add js mov push sbb or xor jge xor dec call dec adcb lock lea aad jnp pop add xchg out mov pop lock clc mov xor mov out push and jno adcl mov sbb orl (bad) and xchg sub movsb cmc inc dec rcrl repnz pop fldcw or xchg ds xchg add cmp pop sbb das push outsb out sub aaa add ja push nop out sbb in cmp push add push pop jbe (bad) ds xor insl (bad) ret dec rorb push adc or add and int3 push or fwait mov cmp and mov inc iret xchg add adc out xchg sbb shlb icebp lahf add ret inc jae repz fcompl cmp es pop xchg cmp aas mov addl or xchg adc or pop push out xchg or pop pop xchg xor sub sub imul sub (bad) scas pop gs push mov pop lea xor in dec repz add aam outsl js out push aad push or dec jnp add xchg out shrl inc adc lahf out int3 sar rolb movb push mov cmp adc pop adcl or jne gs bnd lea ds arpl out push fnsave mov dec and and call fwait jp outsb push scas cltd mov int3 and out loope mov add xchg lret add adc jg push cmp ljmp push popa int3 xchg clc lret jae sub mov adc dec jns in xchg or test inc stos xor adc xchg adc mov ja jl inc xor xchg xlat pop xor fcomps jecxz movsl mov adc cmpb sbb pop sub jnp maskmovq notl push (bad) jmp fwait xchg stc dec xor enter cmp push dec lods xor push pop mov pop xchg pop push loop xchg (bad) aas cmp aam mov addr16 push add jae push pop push (bad) jbe push in cmp push push js insl add cmp xchg orl loope int3 or inc push or mov add btr daa push inc jp and pop sbbb mov pop mov adc inc dec pop mov in add xor push hlt lret pop sbbl mov test xor (bad) push faddl movsl shlb leave mov and leave stc loop dec imul sbbb add scas pop inc mov push repnz (bad) push mov lods pop loop fildl fwait es dec cli xchg mov push stc jnp add push int3 adc in push fild sbb leave mov xor cmp ret fdiv std test loop or repnz adcl mov sub cmp stos dec (bad) (bad) (bad) imull in mov xchg int3 push and and mov inc je cld fsts pusha adc popa mov xchg popa cmp (bad) mov jno mov stc rclb sti adc repz pop dec xlat js int3 lret lcall mov icebp stos cld adc jecxz stos lods scas and push pop cmpsl xchg jp xchg adc xchg xor push ds inc mov loop inc xchg rcrl or dec mov or dec ljmp push int mov xchg scas andl in cmp gs lret je leave cli data16 adc loop sti and adc xlat out inc mov or setp cmp adc inc or rcll mov ljmp xchg iret push mov out mov cwtl ljmp lret jle pop popa xchg jl jae cmp out jge or jle pop mov and dec pop inc imul mov add dec sub imul mov add inc jp iret shlb sbb pop xlat cli sbb (bad) sbb push arpl jl scas test inc adcl je aas jb jecxz lea insb adc fs arpl jb sbb add sti outsb push jp or push cmp add or xchg pop and push (bad) gs imul mov push push dec add add out mov test fwait or lret loope sbb repz enter insb and out mov and xor xlat rclb stc sub or xlat shrb hlt nop int xchg xchg subl push push sbb or add jnp ja push loopne movsb sub inc sub mov mov je loopne and pop pop pop mov fs fidiv mov loop clc dec pop xchg push stos cs add mov dec mov jbe (bad) lcall and jo adc pop jecxz repnz imull cmp lahf xor xchg cmp add lret mov in jecxz int xlat (bad) push xchg aas jnp cli movsb jns (bad) adc cmc mov int3 inc cmp in sub int3 aas decb sbb lods xchg outsb cmpsl loop jmp mov mov dec xor adc and dec sbb or xor pop push inc dec push or int3 xchg mov arpl stc dec push adc iret adc scas adc dec jb dec mov push insb and and sub add push cmp push je test and pop scas cltd mov sbb in inc push dec out cmp push inc insb sbb cmp fldenv ret pop xchg mov xor and nop dec mov cltd dec jl out mov arpl dec shll dec cli test pop add arpl push fs adcb xchg inc sbb je daa insb xor loopne sbb ret ficomp push jns int3 xor xchg push test xchg inc cli push push sbb js pop mov out lods mov or xchg sbb adc out xlat add inc mov popa adc sbb mov out mov and sbb add mov or loop pop xorb repnz push xor and xchg xchg sbb (bad) adc movsl stos and adc fs fcomps loope adc xchg dec mov outsl cltd jge pop aam mov arpl and jp push imul push lds and xchg out out inc xchg adc push add mov test int sbb or into mov gs adc xor or mov enter int3 ljmp add gs rcrl adcl enter push rorl adc js and sbbb (bad) pop push sub jg js (bad) faddl aaa or xchg mov xchg mov fst loopne cmc fs push xchg (bad) popf add add mov push incb dec (bad) cmp sub rcpps sub jmp loopne ret xchg adc (bad) adc pop xor stc adc loope popa stos lcall fcomps js outsl xchg cld adc test mov jmp leave mov xor or popa dec xchg (bad) or sub test add (bad) sub push cmp lahf mov xchg jmp pop popl mov pop (bad) pop adc dec int3 decl cmpsb rsqrtps test xchg mov inc xlat push pop iret lds bound jmp cmpsl notb sbbl insl pop addr16 out or fs (bad) pop popf inc (bad) mov push (bad) mov add sub in xor push mov pop fldcw pop pop mov dec in loopne push and repz daa push mov mov xor sahf fmull add in inc icebp cmp addr16 imul sub ffree push add cs je sbb adcl xor inc sub push push mov sbb xor aas push popa js loop pop cmp (bad) xchg addr16 pusha add xor jno lods jmp xor addb add adc sbb lock dec fldenv or inc outsl test into cmpsb enter sahf mov mov mov ficom cmpsl cmp mov dec roll lds dec cs pop fs in cmpsb (bad) cmp inc int mov push dec inc (bad) lock lock lods push push es out js mov mov andl mov jne inc or add sbbb je and fcoms push dec pop (bad) repnz (bad) lahf sub xor mov jecxz mov ret (bad) dec int and inc jle (bad) and sub les sbb sqrtps popf and cltd jns into adc inc or fwait adc adc lods jbe ficomp out push stos js pop dec pop les arpl sbb xor lods lret cmpsb adc dec stos push scas scas cmpl (bad) push jmp adc repnz mov test inc loopne inc xorl loope,pt and push mov mov ljmp cmp mov sbb sbb outsl stc test mov pop das inc sbbb inc mov orl jmp inc adc (bad) sbb xor lea push adc pop inc insb add add out mov mov or sbb pop int shlb or (bad) imulb jmp inc pop mov stc pop or pop push push int3 push xor push test push xchg out notb push mov push test push dec in jno imul insb mov call scas mov xchg out jmp hlt or adc imul in cli xchg add test add jnp outsb pop clc mov mov ret (bad) pop add inc cli mov pusha orl cmc repnz fnop sbb jb lcall mov fistl std repnz cwtl mov mov xchg lret outsb in out pop (bad) lcall mov js dec cmp xchg mov xchg mov repz pushw stc push popf aam cmp (bad) enter adc pop call jns loop,pn or sahf cmp or out ljmp pop push rolb jl mov xor or sub (bad) lcall js shr es sti adc ljmp add or pop and lods or mov jae or lods int3 imul xor outsb xchg mov mov adc cli sti mov rep arpl adc (bad) hlt dec loop push in rcrl ret push iret cmp pop fdivr xor adc icebp insl inc andl push jge sarl inc push or std or xchg mov xor push jl loopne out repz pop mov jae add or and lods push out mov inc cmpl pop (bad) repz push or sub ds incb sbb mov dec xchg xchg or or fcmovnb bnd mov nop mov mov dec push xlat call xlat mov mov sub push cmp test les or loope hlt sahf popa push out mov stc sti push cwtl in push fdivrp test inc outsb daa dec mov mov push mov pop stos aaa push daa pop fildl jmp xchg fnstsw sarb sub adc cmp (bad) or mov xor in movsl xchg mov out addl inc dec push dec stc or xchg mov xchg stos jno cmp (bad) call xchg shrb cltd out bound int3 push dec push adc stc jl fwait mov xor dec xor lret or push sbb pop cltd sbb out inc scas (bad) push inc mov add xor add xchg repz cmp sbb add pop mov add mov in mov or insl jecxz mov mov adc sbb mov movsb outsl ss out fldl lods mov aad adc mov jns jge loop stc add pop xor xchg mov inc in enter rcr repz add decl pop xor or xchg lret pop daa mov adc dec (bad) mov rol mov mov rolb test sbb cmc xchg cwtl es adc pop mov aam dec mov pusha les roll leave xor test pusha inc and lret or lcall mov and mov jno mov fwait insl adc mov adc xchg jne lods daa or sub fs xor push jno mov mov mov in pop jo jns jae dec iret sub mov xor xor or je orb insl or push jae jno enter fwait cmp lret cmp pop popl mov cld jne jne jl stc movsl test fsubrl adc out mov mov adc sub mov xor test jbe add inc and mov out cmovae sub or xchg lahf dec or lret cmp cs jnp loope and inc sahf jne pop popf fcmovnbe rorb xchg cmpsb jge mov add mov jge adc and fcomps mov jb adc or cmc mov enter sbb and pop out insb nop pop add add bound dec xchg pop add test in mov hlt (bad) dec and icebp test in sub adc or pop out adc mov popf jl xchg sub cmp jecxz cmp lcall sbb lahf adc sub mov loopne adc dec mov fs (bad) mov out ja cli in sahf (bad) sbb push dec jns test loop or xchg aaa rclb and push insl mov push loop ret nop fdivs cmp xchg mov aam xor mov xchg cld iret rolb jp lock mov mov adc test xor cmpsb and sbb and cld add or imul mov mov mov sub stos jmp jecxz adc ret jecxz or ret inc popa scas push cld add out mov inc push adc nop push xor test or mov jle xchg aam andl test pop jno lcall cli cmp aam in fstpl data16 push (bad) sub adc or aaa repz mov push or notb or pop sbb insb xorl xor je and cmp ljmp addr16 in repz mov hlt adc cwtl sbb test push out mov icebp or adc sub or fwait push ret push movsl adc mov aaa aam pop mov push push lret leave add lcall adc jbe fldl pushf sub mov sbb push scas (bad) jbe push cmp int mov mov inc push and into dec mov sbb lret scas push sbb adc in pop pop scas jns imul ja push repz mov dec not scas inc insl mov xor mov mov adc jb ds xchg or mov mulb clc pop jnp out mov cmp stc mov mov xchg scas hlt and adc xchg or dec (bad) icebp and inc push add push cmc or inc dec punpcklbw jl (bad) outsb sti mov movsl inc (bad) std test fcompl cli cmp adc in repnz out test ja jge (bad) adc fidivrl xchg rorl enter pop and adc clc jg repz xchg sbb fbld repz je jb cwtl inc pop aaa push icebp dec inc adc lahf incl or int cli lods jp dec mov mov (bad) (bad) mov lret mov out sbb bound mov subl pop loop cld scas adc adc xlat movsb xchg jecxz jg xlat adc jp aaa (bad) dec adc or xor out push fdivr pop mov adc lret rol scas adc repnz or pop repz inc loop xchg or xchg mov jle mov mov loopne sbb add sbb stos iret sbb jp icebp mov and popa adc mov rcll test mov imul push pop in adc outsl dec leave push jae lock adc fldt xchg shlb xchg sub add mov jle mov inc ja (bad) sti jp test adc sbb pusha loope fimull cld xchg jp (bad) jns or and divb (bad) xchg subl xchg xor push sub adc push inc dec xchg adc rcrl repz adc stos inc adc mov add insb sub lods pop iret negl sbb push mov insl jge adc pusha in ficompl movsb xchg rorl pop jns mov das call rcrl cli popa sub lea enter aad lret fldl jb cmpsl fisubl fs add pop xchg rdmsr xchg xor iret jmp or lcall adc or fimull push xchg adc push repz mov adc adc xchg fistl adc sbb cmp orl in push adc mov dec lods icebp or jno pop addr16 lahf ret mov pop adc sub repnz mov xchg sbb sub jo sbb lods pop into jbe cmp mov mov xor insl push call sbbl xchg adc test loope xorb hlt ds or call jle push sub push rorb add inc cmp push adc lods sbb lret mov sti mov movsb or out sub mov sub mov fcoms or (bad) aad adc insb dec loopne std push push jbe add mov cld adc scas mov push push sbb adc ret and das mov mov push inc fs push or inc adc cli cmp into pop in adc sbb ljmp fcoml push sbb lods adc fs jb xchg cmp outsl mov flds (bad) mov jne jno in pop or mov pop xchg lcall sti mov or xor adc out push testb loopne push insl pop and das sbb adc lret jne cmp lcall push test inc rcrb adc dec mov adc mov test sbb xor push fidivrl cmp int3 mov pop pop mov scas jmp leave lods adc stc sti rclb call fcmovnu or das rcrl jle adc add add mov orb cwtl test dec dec sub jle into test ljmp adc mov or std ljmp orb cs (bad) mov outsl and ret xor fisttpl fwait sub mov xchg outsb jo add mov mov pop fisub mov mov add sub in roll push adc sahf jno out pusha out fidivrl sub mov sbb lret mov rcl or cmc pop rorb test loope xor js je push mov pop (bad) sbb nop jno fist adc in lahf popa sti ficoml and mov mov ret mov aad mov pop test jbe int3 popf adc or sub pop inc xchg scas icebp sbb jbe lods cmp xchg dec mov loopne push push cmp adc bnd adc repz sub push in jno xlat jns dec adc adc div mov xchg cmc bound inc insl mov adc adc adc ret fidiv xchg dec inc adc (bad) call cmp mov insl jecxz cmc repz mov sub mov or lret imul mov dec adc inc push xor mov (bad) xor pop fstpl cmp sahf adc rorb and ret jb push pushf pushl ret pop xchg repnz adc std push dec stos leave cli leave out xchg clc sbb pop add mov add sub std std adc jmp or jle fdivs push inc inc jbe jb jp jae jl add stos dec aas dec lods stos ljmp dec test icebp pop inc xor push out pushf test pop sbb fldcw addr16 shl mov pusha lcall jne iret stc loope dec cmp pop stc (bad) xor inc enter in lret xchg inc push push mov xchg xor call sub adc rorb sub push jge sub push or outsl push mov push in adc adc push dec (bad) xor nop xlat mov mov jbe jnp push cs or test fs sub outsl outsb and aaa or dec stos xchg sbb inc add mov jns mov ss pop jl (bad) mov int3 xlat push les adc (bad) jo pushf loopne xorl jecxz fildll add xor aam inc popf cmp adc movsl pop mov fs jb pushf pushl ret pushf call push call call lea jne call movl pushf movl push lea jmp and sub lret mov mov stos sub dec mov sbb addr16 pop and int xchg and test sbb pop (bad) js hlt mov sbb mov fmuls inc sub xor adc jns ds sahf jo in orl out push fcoml lahf test adc movsb mov insl xchg sub sbb add sbb xlat sub rol std (bad) push cmc cmp idiv jne int3 xor fisttpl out gs loopne xchg xor mov push data16 in and dec dec cltd xorb mulb cmp push lds lods xlat mov adc mov and jnp mov movl pushf pushf call out rcrb inc or dec or fsubp mov cmp xor mov sbb popa xchg sbb popa xchg and and ss movl jo aaa and test mov test xorl add test push dec (bad) inc int loop mov mov test pop ret fsubrl add inc data16 test (bad) fiaddl adc push sarl lcall movsl push (bad) stc (bad) mov fbld enter inc shr int or inc addr16 cmpsl cs sub jae inc jmp inc mov add fsqrt adc push pop dec imul and push gs xor jnp cmpsl dec xchg aam push (bad) stc jnp dec (bad) cli pop in inc aaa mov add fsubr out (bad) clc lods xchg pop stos leave pop ret mov repnz mov dec jae sbb pushl rolb dec mov test and push leave or je repz jmp lea jne aas cwtl sub aam bswap sbb movzbw mov cmp or add pushf pusha pushl mov cmc jmp add add inc add add xor and daa xor xor dec xor jp mov scas xor xor push xor xor xor jb mov xor xor xor xor xor xor xor xor dec xor xor xor or jl xorl xor xor xor xor xor xorl ss fnstenv or cmp inc aaa inc aaa dec aaa pop aaa push aaa adc aaa cmp dec cmp cmp jns mov xchg cmp cmp cmp mov mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp push cmp cmp jge (bad) cmp cmp cmp cmp cmp cmp cmp jp mov mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp ss pop cmp (bad) cmp out cmp into and cld aas add add add insb add add sbb aaa xor xor xor xor xor xor pop xor jno movsl xor xor xor xor xor xor xor insb xor xchg xor xor xor inc xor fidivl add pusha aaa outsl aaa mov lahf cmp cmp popf aas add add faddl add cmc xor xor xor xor xor xor xor xor xor xor xor insb xor jg mov xor xor xor xor xor mov clc cmp dec aaa (bad) aaa mov int fdivs loop repz (bad) aaa mov cmp cmp cmp cmp cmp sahf cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp dec cmp jne xchg cmp scas cmp lret cmp jmp repz or sbb and sub xor push imul aad (bad) ds aas cmp pop aas fnstcw cld aas add add add add push xor xor (bad) xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor pop xor xor jae js xorb xor cmpsb xor xor xor xor xor xor push xor xor xor xor xor insb xor scas xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor mov lret xor out divl xor jnp xorb ss ss xlat ss inc aaa dec aaa push aaa fnsave in aaa cli aaa add push cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp movsl ds or pop aas xor dec aas mov mov add add xor push xor xor xor cmp jns cwtl ss aaa or cmp cmp cmp cmp cmp cmp cmp cmp xchg nop cmp cmp cmp cmp cmp cmp cmp cmp cmp sub jb mov int3 cmp dec ds aas nop aas scas aas add add add add xor inc xor jo js xorb xor xor xor xor xor xor xor pop xor mov xor or xor xor xor xor xor in aaa or adc cmp cmp cmp cmp cmp and dec cmp lea xchg cmp cmp mov cli cmp cmp or or jb jge cwtl cmp cmp sub cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp adc ds jge xchg ds or xor dec aas gs xchg aas mov aas add add add add push xor and inc xor xor scas xor xor xor xor adc pop xor xor xor xor xor xor lret ss enter in cmp cmp cmp pop cmp cmp cmp cmp cmp cmp cmp cmp cmp and es cmp aas push aas jo cmpsb aas mov add add cmpsl xor xor xor xor xor mov aam pop xor mov mov xor xor xor xor xor xor xor xor ret xor divb xor ss outsb ss test adc inc aaa dec aaa push jo jne jnp xorl lahf aaa movsl aaa stos aaa fdivs cmp dec cmp pop cmp cmp cmp cmp inc cmp cmp cmp cmp cmp cmp out cmp cmp mov cmp cmp cmp cmp cmp cmp nop add pop add add xor xor xor pushf xor xor cmp cmp movsb cmp les int3 cmp cmp cmp cmp cmp cmp cmp or adc dec cmp cmp cmp cmp cmp mov add pusha aas fs push aas je js jl cmpb aas mov mov nop aas xchg aas cwtl aas pushf aas mov aas lods aas mov mov mov aas les enter sarb aam fdivrs fdivrl loopne in call aas hlt aas clc aas cld aas add add add add or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc xor xor xor xor xor xor xor xor xor nop xor mov xor mov xor xor xor xor xor xor xor xor xor add rolb js add mov mov xor xor xor xor xor sbb and xor cmp dec xor xor push xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor dec xor test enter or sub dec ss ss nop ss (bad) add add add sub add add sbb (bad) xor xor xor dec xor push xor pop xor xor insb xor js sbb sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp cmp cmp cmp cmp nop cmp mov cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp dec cmp push cmp mov cwtl cmp movsb cmp mov cmp int3 cmp fdivrs in add add or or adc adc sbb sbb and add add and add pop xor xor (bad) cmp cmp cmp add xor add das xor xor push aaa xorb aaa sbb daa cmp cmp cmp fwait aas mov add add add add add xor inc cmp nop add or add arpl add add add inc xor cmp ds add loopne add add ret xor add add add cmp cmp cmp or adc add add add xor ss add add add or add cmp dec xor xor add add iret xor add add add push cmp add add add add jns (bad) mov xor sbb and jl add add add add test add lds test sahf xor xor add adc loopne adc popf aaa and sub in dec cmp add and add mov xor cli ss leave aaa scas cmp cmp addb or add out xor xor nop add adc add jp inc ss cmp cmp cmp lods add lds or mov push imul loope lea push and add push mov xor das pop pop jg push pushf jbe rcrb jbe inc lds xor adc add xchg lea jg dec jae pop jae adc cld dec and das mov sub mov ljmp shl stc shrb cmp ljmp dec cli xchg imul sahf (bad) je and mov enter daa mov inc jge popf movb mov inc pop cmpsb or xchg dec cmp fs out jbe and cmpl jl pop hlt pop imul cmp test pop push test mov cmp pushf lea jb test jmp add pusha lea jmp pushf lods push test add clc cmc stc ror jmp bswap mov pop push setp mov call inc aas push mov or lea popf pop stc and test mov repz push orl mov xor (bad) sarb (bad) aad push daa out xor dec mov push mov imul lods mov cmp ja lea pusha jmp push sahf sti pop movups outsb aas inc xchg push dec push inc jo sub pop mov jl jl xchg pop scas test xor and or mov dec mov sub fwait mov jecxz les lret push jae add outsb adc roll inc ja hlt ffree xchg dec or popf mov es fimul test pusha in ja push cld aas cld xor inc sahf or pop in mov addr16 enter dec pop cmpl add xchg pop scas xchg push push out stc stc cmp mov sbb pop add push pop pop ret cld mov out in mov (bad) (bad) xor xor movsl adc incl mov stos mov push clc lock loop xchg adc fnstenv ljmp and outsb test scas ja clc add push mov adc dec mov (bad) (bad) fidivrl insb inc and xchg inc in xchg es pop or ret dec out dec movsl loope xor rcll push (bad) mov pushf je mov push lcall jno cwtl cmpsb aaa sub loop adc xchg aaa imul ret aas sbb in arpl stos lods fldl2e faddp test jb adc pop jl int3 outsl in pop sub addr16 and ja push addb mov jge and int insb pop sub out pop cltd inc xlat jne jmp sub sub jae fsub pop out popa test call lods es xor pop sahf adc xor sub stos xchg sbb pop cmc daa mov cmp fwait push mov jo xchg notb js pop cmpsb insb outsb (bad) call inc xor push mov arpl mov mov dec inc stos pushf jbe stos or xchg and lret sub sub fdivs sbb jb xchg aad jae pop push mov jbe sbb int3 mov mov xlat js cmp scas mov mov les popa stos mov push in pop in push or jmp xchg (bad) sub int push and jbe mov sub sub inc pop sub ret mov in jbe add cmpsb cmp sub add mov pop std mov jns mov xchg mov inc or inc arpl adc aas ds cmpsl test in add test add clc addr16 fidivl ret call xchg punpcklwd xor out aas divb fbstp lea or sub psrlq push jg shlb in dec pop jmp ljmp mov jge ror ror jle aam mov lret loopne jo mov ds (bad) fistpll sub rorl ret mov lods sub hlt cmp insl les mov jmp mov test test test pusha pushf push call jmp lea jne pusha pushl mov cmc pusha pushf add stc cmc movzwl mov mov push test pushf mov add stc call seta seto setge mov lods jmp push pushl jmp cmc call bt mov ror xchg bsf mov setl sbb cmc rcl mov inc sbb pushf shld mov setg mov bt shr mov add rcl inc sub lea jmp in into adc adc xchg mov leave out lock lret mov pop push sub dec insw push insl bound std pop xorb and xchg inc sbb or std addr16 ret mov pusha push or inc out imul xchg (bad) dec (bad) push add out and sbb cmp jns jecxz pop insl sbb mov mov xchg mov andl jne pop jg arpl push sbb sahf inc jns inc pop std inc imull mov jle sub mov mov int mov pushf pop das enter mov sbb sub pop test outsl cmp (bad) xor xlat adc mov pop jbe and mov jno or roll push pushf test mov aaa or xchg jo mov jo imul aaa in xor inc pop ljmp adc xchg movaps pushf sbb sbb xchg and lcall ret arpl push push je adc mov jmp jno lods cmp repnz cli cld pushf cmpsl ret and sarl xor lods dec jmp rol push loop or lea add push add cmp popa (bad) scas pop repz and cmp lods jns mov outsb mov insb rclb insl addl cs and sub adc out aaa popf dec jo xor xchg test gs sub mov daa lret inc test cld stc or (bad) jo adc push lods shr mov xor pop cltd dec jne inc dec int ror insb cmpsb idivb out out adc ljmp decl xor in (bad) repz aad add (bad) sbb inc sbb adc into add enter push cli cltd adc xor sti and jnp lods adc mov dec repnz lret cmpsb mov pop inc ja sub mov inc mov into dec mov jl decl sbb les jns and std cmp lret add xchg or mov shr pop add movsl sahf cmpsl jnp adc (bad) loopne test dec ja dec ficoml fnop dec fdivr clc xlat call jne and or adc jbe js cltd mov mov rolb call mov pop push aad jo xor inc inc (bad) mov int (bad) mov sub inc jae (bad) insb out sar loop jge jbe fisub insl call xchg pop outsl lahf (bad) mov in ljmp jb sbb sub imul cmc arpl jno lcall lea clc dec lahf cmp xor repnz pushf call add dec outsl arpl inc jb add (bad) (bad) not rol lea test pushf jmp pushf pushl lea jbe inc sub and ror rol mov bts xor mov test lea add add jmp int3 mov inc stc add fs push jns or popf scas or mov mov icebp xor mov cmp mov sub loop sbb repz out out push pushf std sub mov out push mov adc int3 or out lret dec add xchg cmc and bound xchg or lods test inc popf cld jmp and mov scas ja fcomip je xlat (bad) aaa mov mov fnop xchg ja sbb sarl dec inc rcl jno out pop dec mov fdivs fistl popa cmp xchg in jg inc (bad) in xor dec and mov pop mov xchg mov leave sbb push push arpl cs sbb (bad) dec (bad) icebp push xchg mov sub dec in mov mov inc sahf adc inc mov jno icebp out sub inc (bad) in push fs jne clc jp mov out pop pop adc mov pop into mov ss adc pop sub enter or mov xor adc test cltd xchg push lds in or push fiaddl es fsts mov loope lods mov test sbb jne inc cmp rcrl mov xor xchg pop push jbe or cmc jbe sub mov push cmp or addl push (bad) jno and cltd mov push leave pop mov flds mov cmc mov mov iret add add jge les movsl or pop xor inc test mov cmp pop fisubr jmp bt bt sub bt stc mov jmp pushl movl pushl movb pushf mov movb pushl ret sub mov cmovl mov dec jl pusha into pop jnp dec jo sub mov sbb stos inc mov fwait push jae mov lea out cld mov push daa mov cmp or xchg dec loope jmp ljmp xor sbb and int3 mov es clc pop mov test fsubr dec fucom push or adcb dec outsl fs gs imul add lret adc pop cwtl scas pop sbb and mov push fsubl adc repz js sub mov andl mov out scas lahf das push fwait enter test sub cmc pop mov shll xchg cmp movsl test push push mov mov xchg sub mov inc xor xchg add jle push and pop rcl jno or aas test movsb cmp adc nop or test scas cmp sub repz test adc decb ja jbe inc ja bound es pop adc test pop or vandps sahf fstpt call nop jno in call jge hlt fsts add dec add add cmp pusha insl insb inc pop jge sub push push sbb inc sti sub xor sub cmp shlb stc roll or les adc cmp sub jle sub loope xchg mov shlb mov leave lock pushf call inc bt bt xor stc clc bt pushw popfw call sub push mov addb sbb nop (bad) cmc in pop lcall and mov iret inc pop mov cmp les and das add les inc insl add xor push jnp push fistp dec pusha call call mov lea jbe bswap (bad) repz adc mov rol add not not mov xor add bsr jmp push lea je movsbw movzbw lea movzbw pushf movzwl not jmp bt and pushf cmc movw pushf add add clc cmp cmc cmp add js pusha pusha dec pushf lea jns jne bt mov mov jmp imul call push mov pushf sub pusha cmc cmc jmp push lea je and seta xchg btr sub inc das lea not mov test mov ror cmc pushf shr sub bsr pusha stc mov test or lea jl push pushf lea je neg push add rcr cmc sar add sub or pop shr shl mov btr movzbw sar add bswap mov shrd add shl mov test test clc clc shr cmp cmp push mov push lea je jmp into out add sbb cmp and xor loope in out lea xchg or push popf scas xor es push pusha xor cwtl jae lcall lods adc movsl insl mov pop mov mov cmc cmc mov push pop jo push data16 popa jmp adc aad pushf dec fisttpll jo dec mov aad push sti pop pop in es (bad) arpl iret outsb lods (bad) mov jnp mov adc pop jno sbb push cmp gs jg jne mov xor inc scas ret push out pushf push insl cmpsb ljmp outsb push or sbb sbbl iret (bad) cmp xchg gs int3 jno mov xor mov pusha pop adc push test add or test add mov add add (bad) push mov iret scas sarl pop dec int and insl push loop sbb repnz cli inc fs dec xor mov push aaa push xchg test fldt daa pop xor in adc stc (bad) cmp stos fldl2e call push popf xchg adc jns xor out mov clc (bad) pushf fnstenv pop (bad) hlt iret pusha jp rolb xor (bad) dec xor jle lds call jp in lcall ret cmp xchg xchg incb mov push fsubs or jns (bad) add jmp imul cs nop (bad) (bad) test lea dec lret or insl aam ljmp cmp mov xchg push lea mov and add adc sub call push lret sbb daa in stos cwtl notb iret xlat sub xlat and pop xchg pop scas and mov push aas lods dec sub lods ret push lcall fwait xlat lods fsubp (bad) repz aad or ss sub add mov sub add (bad) insl cmp outsb adc push or mov jl add imul out dec leave pop cmc (bad) cld leave stc clc ret ret call rclb jl pop mov or and mov ror movb not movb movw jmp pop int3 fstps adc add jp shll jae (bad) sub dec dec pusha outsb test fisub cltd jne pop xchg push xchg lcall inc jl lret outsl int jae jp jne xchg sarl or iret xlat mov scas xor xchg scas xchg loope add add xchg gs out inc (bad) (bad) repnz ja xchg cwtl xor sub pop push icebp popa jecxz test decb push sub cli out scas in mov push mov xchg ret and push inc jmp faddl mov bswap jmp pushf lea ja push stc imul pusha bt stc cmp add pushf lea jmp movl jmp lea jae pushf (bad) icebp or ret bsf mov movb mov push mov pushl mov test sub stc call test jmp movl pushf push movb lea jmp out addr16 cmp pushf sub scas nop daa (bad) push testb dec adc jne mov inc jmp mov (bad) pop push (bad) and test cmp mov (bad) push pushf jmp jmp dec push xchg stos cmp loope mov mov mov lea ja push imul cmc add movb mov lea jmp jmp test sbb shr mov cmp clc repnz mov pushl pushf mov lea jne pusha movb not jmp call mov lea jb cmc stc test cmp cmp call jmp movb jmp pusha pushf jmp movl pusha movb pushf mov movb pushl pushl ret movsbl lea mov movzbl mov mov lea pop not mov push movw mov push pushl ret jp and mov sti nop push int3 repz and add add shl jbe cmc or daa lea je and xor adc ret pop enter test and lret xchg jecxz xchg pop out push xchg inc cmp add adc and sub jecxz nop movsl out xchg or loop mov cmp sub std sbb dec nop lods sti stc (bad) fs icebp push push fsts adc mov push test and bound sbb adc fs mov sbb lds fincstp mov cmc inc push jbe and lcall jb push or sub mov inc and mov fs jne cmp mov sub adcl bound js sbb into orl (bad) sub sub jge sub shrl jo mulb (bad) pop lods mov jne pushf fwait popl fs jne push jne jne mov mov loop or jae or xor jnp mov cmp sub (bad) sbb addb and icebp push inc and loop or mov mov fdivr adc xchg add mov and jp push jecxz sarl mov jmp push cmc out push xor das dec sub movsb test jmp lret dec cmp int3 pushf in adcl jne dec gs popa je,pn int3 or adc scas or xor out ror das cld xchg jae push xor dec lea jno pop sbb pop bound or call and shlb and or iret aam popw inc dec les xchg leave lret mov iret jecxz mov mov add adc dec jae xchg fs or test sbb push iret scas jne xor xchg or pop xchg jg xor xchg sub mov sbb push imul dec dec mov out adc bound cmp (bad) pop out inc roll adc in add mov mov movsb sbb jecxz arpl adc xor stc pop xor loopne adc xor xor lret mov nop aam (bad) sub (bad) xor (bad) xor pop sahf mov push sub cli and jbe jbe (bad) iret mov leave or sbb mov push sub xor mov jecxz jns push ss mov pop jle push jns mov idiv fnsave cmp (bad) xor popf mov pop mov xchg jle push ret mov std clc daa rorl arpl lahf adc push push popf mov jmp push or xchg add gs bound jge jle xchg jne clc mov fsts daa lcall jb push xchg ljmp pop pop push sti push sbb mov sbb ja je jle pop adc fsubrs (bad) and cli movsl shr xchg push add dec repnz push sbb jo daa pop scas (bad) xchg cmp dec pop (bad) pop lret arpl mov dec jmp aaa aaa sbb or or sbb mov movsl add and xchg mov jne or adc push divb or rcrb lods gs inc scas xchg sub xor add sbb dec jbe pop add cwtl and xchg fdiv je push ss jae cwtl leave loop mov aam mov pop lock imul pop push cs xchg pop data16 mov xchg sub and cmpb arpl (bad) sub jle push push ss jl mov inc push repnz subl cli lahf lock xor ret add pushf cmp xor mov addl fisttpll (bad) xchg xchg repz aas xchg adc out push sbb psubd mov adcl int nop lods ljmp inc xchg push jae lea add ljmp rcrl xchg pop add lcall adc lahf stc rcll fsts loope pop mov jbe jno stos rcr popf xchg stos repz out xlat popa jno push test in stos rcll int jl popf mov pushf js sbb lret insb pop dec xchg aad stos lret cltd push add xorl pusha pop jae push sbb sti jae insl sub je scas sub rep pop push jae aam jle and (bad) pusha xchg pop xchg sbb stos dec pop xchg sbb inc xchg loop ja push mov jnp sub lods push mov js mov ficoml pop mov add out push movsl xor lea mov jge jbe xor jp fistp fadds pop imul add add pop sbb sub aam fwait rcll cwtl or inc push add rcrl cmp xor push mov add push push cs aas mul pop jne and push (bad) xor mov les add sbb pop mov xlat sbb add push hlt jbe inc add jle fnstenv inc repz mov pop mov fcomip pop fnstsw push das rorl lock jecxz push xchg sbb dec in repz xchg add mov mov add add rcr sub push mov (bad) jmp and xchg mov jne (bad) cmp mov mov mov pop push push push lock xor (bad) dec sub jb cwtl sbbb test push dec add xlat fs (bad) xor icebp mov fs in xor negl lahf out push xor (bad) mov jnp add pop push clc push stc sbb push mov push dec pop xchg pop rcrl dec xchg push jo ds push jl push mov sbb push nop stos std loope sahf pop jo (bad) mov pop adc xor out inc fisttpl jbe jecxz pop push repz loop jae jecxz dec bound dec fwait rcl jb adc pop jbe adc add (bad) add cltd ret divl xchg push mov push inc andb (bad) lcall dec adc xchg adc fs add jno cltd jno push pop sbb or fwait shlb mov xor and mov out jb dec ss test mov jl negl idiv je push cwtl lahf adc pop sbb xchg push adcb fwait mov clc dec push pop lahf lahf dec add mov cld fwait add ret push push xorl hlt push inc or dec pop lcall mov adcl push clc bound xchg hlt jl pop popf fimull movb mov lea xor mov mov mov xchg adc mov or sbb jb jo jl loope jl xor adc aas push loopne (bad) pop testl pop jb cmpsb add mov xchg adc fsubs push cmp mov inc adc shl lds jmp nop xor sbbb xchg lock adc mov xchg lock push jnp xchg xor pusha inc sub pushf mov xor xlat cmpsb cli xchg jle (bad) rcrl sahf jne pop pop or add hlt les inc xor xor mov cmp dec dec or stos repz pop in add sbb push push je movsb ss pop xchg cmp inc push lahf jecxz (bad) xor (bad) dec pop push sbb sar pop xor push pop mov adc xchg les pop mov or mov inc jl inc add (bad) fs xchg sub insb leave xchg sub push arpl and or jge adc and sub cmp push jb and mov outsl push xor lods mov xchg push push mov jge pop sub inc xlat (bad) cmp pushf jle pop jnp popf stc rcrb and push rcr inc dec shrl andnps jecxz (bad) mov stos andl rcll smsw addl test inc scas dec mov push mov xlat inc fwait aad gs jecxz popf not push xor add adc cmc cmpsb (bad) loopne bound or fwait loopne pop (bad) div push loop pop mov push pop push mov mov and ljmp mov pop adc adc in loop loope arpl (bad) jge pop imul push inc or repnz mov push sub jo lahf daa mulb jae mov mov ret insb adc iret xchg mov cmp mov xchg ror jl pop orb adc inc int3 popf jae and xchg xor push and neg adc aam aam or xchg fildll push lock mov sub cmp lret sub inc mov sub lcall sub cmp cltd push sub or sbb rcrl mov or jle add loop xchg add and adc push sub aas or add cs hlt aas cmp lcall sub xor daa push icebp stos xchg jne push and inc pop dec (bad) jae xlat sub push lahf push test xchg sub add (bad) fbstp sbb (bad) icebp inc sub repz sbb stc out dec notb fwait adc cmp xchg mov es lock rorl xor insb push inc xchg pop into pop lds xchg insb sahf inc stc push mov mov out pop in mov clc loop xchg imul cmp rorl mov into push (bad) (bad) jae rorl xchg push into out adc int3 mov jae aad cmp xchg dec adcl push setbe call add push aas xchg cmp dec repz cmp daa dec (bad) testb push or mov push popf and push jo andl sbb xchg push (bad) icebp xchg rol fstl jl pop push jl cwtl out push ss jmp mov cmp pop jge cmp lahf loop cli mov or js and loope pop pop ret adc add clc idiv fdivrs sbb out cld lods jecxz adc pop out push popf mov and jp adc inc xchg mov adc fcomip nop lods pop lods sbb jne add cmp inc lcall add push cmp xchg daa icebp push dec inc pop in push xchg ljmp cmp jb xor mov pop push push push xor aad push lods mov xor mov xor jmp xorb iret shr xchg imul popf xor push arpl mov sbb jbe cltd or adc clc xor xor jno jmp adc xlat push movsl lods aaa (bad) nop roll jmp xchg test dec into sbb stc loop outsl inc js cmp sub jns add pop adc inc cmpsb xor ret xor sbb push push xlat stc add xchg les lds clc push inc jle push pop lret push test pop xchg xchg out mov and sbb fimul cltd jl push add das lcall shl fcoms mov adc bswap loop (bad) (bad) jnp shrl jl dec sbb or jle push inc xchg jmp or xor cmc mov sbb loop sub sub mov rcrb sbb push ds enter push or or ss dec dec sub pop fdivl mov push mov jnp mov bound cld push push add xor xchg roll in and je adc xor stos pop stos add fiadd sbb popf xchg pop lcall daa jmp dec cwtl inc pop fistp cmp add mov mov jge popf repnz push adc push mov and push sub push hlt cli push sahf fwait ljmp mov xorl cmp inc adc sbb sbb sub dec das push je dec xor gs push pop sbb xchg pop mov xchg xchg ja and push jle and add xchg and push stos xor jo int xchg pop and push xchg lods adc xchg sbb and add aam in or xchg les jmp scas ss mov pop xor repnz in lret int cmp mov jp scas sbb (bad) add repz aam mov bound adc pop xor xor shlb aam jle push mov and push faddl ss push add je xchg loop nop stc jecxz add sbb push ror mov ret jp and or adc pop fs or push (bad) mov test mov orl pop mov push xchg jae add test xchg sub push int jnp jle fsub testl add rorl mov adc xchg dec push and pop xchg mov pop lock xchg add xlat jmp mov dec sbb xchg add mov std js pop mov add xor arpl and cltd or add add scas sbbl repz inc aaa hlt data16 mov cld xor sete mov push roll or xchg xchg nop sub mov mov clc adc (bad) (bad) xor mov pop decb cmc jp loop pop cwtl add inc test dec or dec mov dec or out xor push xchg xor aad adc push sbb sub adc xchg xchg in inc xor repz (bad) cmp lcall push add loop dec fs pusha and mov pop xor mov pop sahf pop lods popa (bad) jb pop push or add fwait adc xchg ret out mov jecxz push adc add (bad) jb push movsl flds mov pop xchg cli popf jp push dec fwait jecxz out adc fs adc stos adc cmp jb adc cmpsb out testb pop cmp pop inc xor cmp xchg add push xchg testl xor js mov (bad) or fwait lahf dec aaa fildl fwait mov adc fwait sbb xlat fwait sbb rolb negl and icebp pop sbb rcl xchg mov xchg inc mov or inc push fistpl jl xor aaa mov add addl mov sbbl xor cmp rolb popf lcall xor repnz adc pop es add cld stos loopne mov repnz std lods lock adc shlb mov jle js push and insb lods sbb loope inc adc push or pop mov add xor mov mov and sbb mov xchg out mov jb aam push xor jmp (bad) xor cs xor fldenv popf adc mov push jb sbb lea push outsb push fdivrp cmp sub xor fadds (bad) or push hlt sbb mov mov jmp xchg out push cmp lsl cmp or xchg mov or int inc sbb outsl repnz je jne test jo sbb and movsl fs (bad) popf pushf push push fiadd (bad) add adc push int cli add pop or loop sahf xor je cs and xchg and jecxz mov adcl mov lock fistp mov adc pmaxsw je pop push cmp bound icebp shrl pop (bad) xchg hlt push mov inc xchg push jg or loop cli loopne leave cmovb add mov es icebp shrb addr16 mov push jb hlt xchg mov rcrl jecxz sbb sub cmp jecxz jns cmp shll dec add inc cli adc adc sbb push inc (bad) mov cmpsb fldcw inc inc pop add cmpl (bad) jo in aas mov push xchg shr xchg cmp push (bad) cmp mov (bad) or scas pop sbb popf jno out adc cmp sahf nop clc dec add push sbb adc cmpsl notl push out xor divl jns push enter push cmp jmp sub test cs pop xor mov mov mov ret (bad) and push add stos mov pop or push inc out xchg stc lret out mov icebp adc mov push sub int3 (bad) mov add aas jecxz int sbb adc lcall fs loopne adc sbb dec rcll dec subl rcrl lods or leave inc dec orb add push and jle mov or pop push and (bad) xor xor sub stos jle idiv cmp arpl imul out enter mov ja lods pop loopne sbb add and adc jbe and hlt xchg inc xor add fisubrl pop gs sub add jp jne cmp add sti mov add adc push dec roll lret repz cli fcomip jecxz or (bad) push and fbld add int3 lahf or adc sbb xchg pop inc sti test adc idivb lods loope xchg xchg xacquire fpatan (bad) mov pop xchg fcoml icebp cwtl cs mov lret ss xchg sbb xchg jle and repz outsb cli inc xchg rclb mov adc andl sbb iret adc push push outsb push sbb add xchg and je cs mov sbb or add pop sbbl in data16 xor add push rorl push xchg mov push and push push push adc imul int sbb jnp push cmpsl push and lcall aaa dec arpl add sbb (bad) loope push fisubl lret push std push divb aad dec sub pop ret (bad) repnz jo,pn cmp xchg clc and repnz xor (bad) mov ret mov rolb or pop inc cmp hlt cwtl in js add dec out sti add lahf mov les loope push in out mulb movsb cmp push mov xchg mov mov adc adc dec icebp js mov lcall daa adc mov push jo adc inc rorl (bad) cmc popa mov (bad) bound mov mov mull add js adc add or loopne adc das cli mov push pusha jnp and (bad) push adc push push pop and iret movsl lock arpl mov bound cltd pop cmp inc pop xchg les inc mov (bad) jmp fsubrs jae xor lock jle rcll cmpsb fimull fcmovnbe (bad) cmc (bad) jmp into adc mov loop xchg lret mov adc into out je sbb insb cli sarb pop repnz aaa mov xchg out lahf es mov pop (bad) xor mov (bad) fcmovnbe bound push add sbb adc push fmuls and leave adc mov popf jno imul and sub cmp dec and out and mov andb insl dec mov (bad) add push cmp ret stc test mov xorb push pop in (bad) jl mov popf jecxz arpl sub push xchg mov and and mov loopne in pop loop or mov push data16 pavgw add push shlb sbb xor xchg and xchg jne pop je lock jb mull aaa mov mov or fwait imul pusha (bad) xchg push popa hlt jns jge repnz push dec ficompl xchg mov xchg or or push pop scas jecxz push and cmp push bound jae push adc dec je and sbb (bad) out repz or loop fcmovb xchg and adc pop xchg jecxz fcompl lahf pop jmp jecxz inc pop pushf outsl (bad) test lahf xchg jne roll pop repnz fisttpl fdivl sbb jecxz adc jne inc adcl jne and fs fidivl push testl ret adcl jne inc inc adc jne push add cmp test fwait mov inc cmp test stos je cs out stc add push cmp ja xchg pop dec pop sbb jne jp cmp and and test popa adc xchg pop mov (bad) cwtl divb pushf pop jne mov repnz xchg mov push fbstp sub cwtl jle mov and repz lods divb fstps js inc das gs cmpsb (bad) jne mov xor arpl dec pop xchg mov das popl jne data16 subl xor add test pop or cmpsb sbb sub mov stos pusha mov sub pop sti push test out ss mov xchg mov adc or xlat cmp repnz pop hlt sub loopne stc push nop xor mov aas push jl pop dec dec adc repz mov adc push out (bad) xchg lods push out popf adc into add loop popf push rclb fisubrl sbb push mov adc push pop pushf and or sub push aad pop mov add pop and mov pop lods or loope sbb out xchg mov loop inc sub lock sbb out jl adc push cs (bad) fistpl rcl mov mov push add or cs jae inc sbb jmp push cli jge push cwtl pop mov mov popa popf out xchg and cmp or adc scas fnstenv stc test inc pushf nop dec insb or mov mov pmaxsw outsb xor movsl lods sbb cmc push adc (bad) ss dec fdivrs and repz scas xchg enter mov mov pop or xchg add in push nop xchg out sub dec arpl mov mov jle xor mov dec push lea push int3 loop fsts add mov sbb lea add (bad) xchg mov repnz aad sarb or push xor mov insl sbb daa sahf sahf call repnz cltd dec cmpsb pop ret shlb icebp icebp test or pushf cli mov fcomip xor adc mov stc fsts sub jmp xchg movsb lea test popf adc xor mov test jbe sub (bad) jnp loop push jl push push cmpsl sub push cmp xchg xchg push or lret jl (bad) or scas ljmp adc dec mov pop mov push daa mov aad adc cmp iret sbb sbb push loop xor mov lret sub add mov dec adc sbb lret pop sti xor push pop imul iret bnd inc movsl (bad) repz xor mov (bad) xor adc mov add sbb pushf push and imull mov fwait rolb adc pop (bad) divl and pop arpl out mov sarl xor adc jae pop popa lahf mov mov push xor bound jmp adc pushf inc addb inc imul mov mov dec mov repnz xchg jle xor jne and stos jmp je psrlq notb data16 add xchg push pop mov decb xchg add or fildl add xchg sub pushf ret and sbb pushf xor push add cmp lret add fwait loopne mov int jmp loop repz outsb sbb add sbb aam cmp cmc loop (bad) push jle sbb shrl pop adc add movsb pop pop cmp sub xor arpl sbb sbb push pop enter je bound xlat adc popa aas jmp dec lret or in push mov or jle insb xchg (bad) in movsl pop push xchg (bad) (bad) xchg pop mov lock mov cld mov sub push in out lcall jbe mov out popf rol pop lea pop mov sti femms andb clc shrb andb fisttp sbb rcrl jns cmp cmp rcrl (bad) pop push repnz lods fstpl loope or push push aam pop xchg push dec not loop mov jle mov out popf jg lahf mov lret push push jne mov fcompl add and mov mov scas xor xor mov or mov push cmc xchg push out repz call dec push popf push fldenv push xchg xchg push pop pop inc mov adc aad xchg fwait mov xor outsl xchg xchg xchg mov loope mov xlat repnz pop push cmpsl pop ret test sub sbb test arpl xchg sub push (bad) jnp xchg (bad) (bad) mov loope add mov dec (bad) fistpl add dec cwtl jne cmpsl jecxz js pop mov push add and clc push jno push cmp dec xlat inc pop adc cmpsl in adc add xor adc divl xor movsb icebp aaa xchg add add inc and in inc fs pop mov xor bound xchg movsb lock lret or mov div push xchg sbb inc pop pop sub pushl or cmp leave push mov xchg daa pmulhuw (bad) testl lock add mov daa mov (bad) adc popl push repnz xchg out pop mov fincstp shrb mov rclb lret imul or mov pop push sti mov into cltd push aad sbb push ficom and and mov sbb jns or xor test (bad) or pop leave loop orl adc add adcl or push test mov std test push cmp into and pusha std xchg xor adc repnz xchg and mov xchg insl xchg xor mov pushf sbb movhlps mov push mov xor les fs jae mov mov or lods leave and jl loopne pop and push aas into out int3 add mov sysexit dec sbb cmp cmp insl adc jns mov mov test or repz pop and bsr lods incl mov pop cltd into push add or nop xchg nop pop psubb dec jl lods sarl xchg jae,pn adc notl mov and scas jmp (bad) (bad) imul inc adc inc cmpsb jle test or out test int push (bad) or jmp mov mov (bad) pop aaa mov push sub or cs pop pop adc enter stos cs (bad) int3 xor movsb or outsb xchg xchg mov mov jno xchg lcall lea subl pop pushf sub dec jle fdecstp insl xor loopne mov fld xchg mov mov and xchg repz sub sub or xlat pop jns adc int3 pop sbb mov mov repnz xchg jle sbb pop pop iret fdivrs bound adcl add mov xchg jo negb jge inc (bad) jno sbb fildll imul jae mov fistpll xchg test inc arpl dec lret jg push sbb cwtl sub pushf xchg xchg enter sbb push push sbb loop jle lock mov mov jmp punpckhwd jbe jno xor (bad) mov stc xor mov loopne testb test cltd adcb xorb call or test mov aad xchg loope test sbb or mov dec xchg in sub sbb mov icebp jne inc or adc dec adc jle fs (bad) mov and fdivr aaa jge mov jno sbb je fwait sbb shrb push xchg popf mov xchg ds cmp rorb jmp lret pop mov (bad) push jo fmuls je mov loop xor add pop or out pop shrl pop push xor sbb ss push or adc lock pop lahf or and cmp bound test cltd sbb les adc mov jns aaa push arpl stc inc and pop mov sarb mov cmp cmpsb notb cs push and sub push in cli cs loop enter mov in mov sub leave xlat hlt rolb push xchg pop inc adc int3 call imul push es es push xchg jle and mov mov lahf add stos insl call sbb push mov loop pop mov repz and stc mov icebp mov imul hlt adc (bad) repnz mov push lahf cmp rorb pop cs jnp or xchg popf inc xchg add fwait mov inc nop xchg mov add lahf sti test push cltd stos ret sbb sub mov adc inc xchg xor loop inc xchg or lods rcll pop iret shrl pop call mov xchg xor jecxz test pop dec iret dec repz mov dec and jns sbb cmp mov sti xchg aas xchg std shrl mov xchg (bad) jge push sbb sbb xor mov repnz pop andl aaa push mov push push adc fistl and lahf or test inc loop hlt inc push push push push push cltd out ja xchg sbb push test push jmp mov adc mov addr16 or ljmp dec loopne push and cmc pop push or adc and mov pop sbb stc ljmp (bad) aas mov push sbb pushf push push xor and dec popf mov dec push pop xchg mov fst jno hlt inc cwtl and loop cmp push and and faddl xchg xchg in push jae aaa cs mov js mov aad push pop xor xchg or mov lods loope push adc lahf dec rcll push xchg push aam push mov xchg pop stos loop add mov sub lods std nop add adc push or mulb dec cmp dec popf fadds xchg mov inc pop mov cmp popf mov push lret ljmp dec fist pop push (bad) sbb adc mov push sahf xor stc out es int3 lock inc mov pop lock cli bound (bad) cmp icebp add in gs inc (bad) mov and inc lods push stc fdivl sti dec or pop xchg out repz jecxz push adc push arpl rol test jecxz imul and rorl xchg pop int3 or mov jp mov xchg xchg rclb (bad) push icebp dec lret and fsubr adc sub xlat push jle rcrl sbb testl or (bad) adc repz cmp insl xchg sbb ds fldenv push pushf xchg push xchg lock daa jl xchg adc adc lahf in popa repnz dec jb sub pop xchg push sahf stc out pop in (bad) fildll mov jae jl out xor or mov rdpmc xchg popa fs mov inc lock scas stc pop lahf xchg xchg or insb mov int repz jle jecxz ds pop inc jle out (bad) xor setge sbb popa imul xchg out push push aaa mov adc mov enter xchg in xor mov or dec jnp xchg sub mov ja add and xor mov iret mov sbb leave ds shl ljmp push test dec dec push push mov scas ss adc push rclb and dec aas push dec xchg fnstcw lods mov inc mov mov fldcw jle jns mov jp bound inc addr16 in lds push arpl mov dec lahf lock cltd or dec pop lea dec ss arpl cs adc dec adc adc test mov cs je mov in cld cmp sub fwait pop int3 sbb lahf shrl (bad) push adc out and inc xchg rcr jp sbb nop jmp jns stos mov mov or cmp test stc or les jb push (bad) mov inc mov mov xchg enter and push fcoml xchg out pop (bad) xchg loop and mov popl stc sahf clc sbb adc in mov cs lods clc xor stos jle cli nop mov test stc xchg sbb mov and loope sub sbb push call (bad) clc cs fwait femms or xchg ljmp arpl lock sub (bad) mov test (bad) je clc stos fcmovb sub push inc and pop and lds ja xchg xchg add or les adc sbb cmp negl int3 bnd repnz subl cmc xchg out repz lret sti fnsave int popa push mov test popl je ucomiss adc inc roll push and sbb sub dec pop sub pop sti add push inc jle in repnz and fs ds gs rcll cmp (bad) (bad) (bad) je jo push out popa mov imul and arpl push and inc lcall xor popa out out arpl out ja nopl movsl push cltd sbb js adc in rclb pop add movsl dec xchg fnstenv lock mov inc mov and jae inc fidivl jb push into ljmp mov rcll sbb or in adc rcll pop paddsw inc pop sbb popa loope inc jne mov sub cmpsl mov aaa je sub xor inc stc jbe stos ljmp and xchg ja imul jno jno stos push repz sbb jnp int3 pop or imul icebp adc add push and arpl lock mov repz fs test cmp sbb fdivs mov xchg or cmpsb cli xchg pop adc jno and xchg iret jns xor xor jne jo arpl inc sbb xchg mov data16 mov bound adc into adc hlt sbb mov int xor mov pop adc adc dec in hlt push lock add sbb mov lds xor testl jmp sub pop paddusw arpl pop lods stc xchg push imul sub xor push push push popf idivb jmp sbb stc pop push pop mov inc ja ret hlt sbb out rcll inc sti and inc xor xchg add loop sub out scas jbe xchg js and out pop gs fisub idivl push push xchg ficompl hlt jnp and or xor mov push cmp sti adc add xor add (bad) xchg sbb add adc add movsb push sbbl mov xor cli push mov push cmp push push repz lret add sti xchg sub cmp push inc sahf lods imul push aaa imul adc and cmp es xor ss and push repz std repz loop and mov lret pop push cmp push jecxz gs int3 dec icebp add adc repz lods mov mov mov sub jle jb add in jno and outsl andl out push sub inc push stos add roll rorb push adc pop sarb ds dec in stos adc or mov adc mov stos popa lret fcoml jbe mov xor adc in adc dec fildll push bound outsb ljmp jp (bad) mov cld incb fistl pop adc xchg cltd dec jb fwait add fwait adc jle push push xchg popf ja pushf fdiv in jecxz xchg push cli mov mov adc jp clc pusha cmc (bad) mov mov jmp adc mov repnz nop adc add pop bound loop ss jb mov testl xchg pop stos cmpsb in mov jle xchg and mov mov sub imul and in dec repnz shrl sub pop fwait adc push loopne (bad) lds xchg fimul adc mov hlt pop jl mov hlt jns or rorb and pop out mov jmp sub mov push rorl aam adc sti (bad) sti mov and xchg outsl stos outsl adc xor icebp mov xchg aad xor pop xchg and repz sahf sub lea arpl jbe scas sqrtps loope xor adc sub enter mov inc dec test repz pop fadd sub xor pop xchg fcomp arpl (bad) mov jge and push pop xchg sbb xchg xchg fnop cmp xlat xchg (bad) jbe xchg push xor or or mov cs jmp mov dec jecxz (bad) shl pushf dec pop int3 fsub jl xor les (bad) mov loop dec lret test and cmc cmc mov icebp lret lea pop sbb lods cmp data16 adc mov jo fldenv adc or in mov test in adc pop jl add ficompl js pop stos push repnz pop fldlg2 adc ficomp push fwait jl,pn xchg jecxz adc push pop sbb xchg push ret dec bound mov jecxz pop popf (bad) mov cli ja dec lahf enter mov ljmp xor xchg js cmpsl mov leave sbb push inc pop or ret neg call loop ja pop cs push jno push xchg clc mov jae mov (bad) mov mov rorl icebp icebp dec (bad) dec gs or mov jge pop inc pop xchg jmp or loop fcoml xchg and cmp push sbb lret mov ss hlt inc fstl mov arpl jno sbb push ficoml fdivrs arpl mov xor xchg fstl push movsb loop cli push mov je fwait sbb rorl lret push icebp cmp or scas aaa mov or xor cltd rcll push sbb arpl je pop push mov inc cmp das cld rcrl jle or sahf add out sbb or sbb stc push xchg adc test sahf cmp ja jecxz jns cs negb add loope (bad) lret inc xchg notl jl mov add inc (bad) je xlat push mov rcrb jb pop or add dec addb mov mov mov idivb bound arpl or or sub aad push xchg adc cwtl fsts rclb repz sbb xor pop test cmp sbb jno ret or out popf mov sbb sahf mov push jge pop push test jae lock fmulp pop in test cmpsb jecxz xor cmp in imul fyl2x push fucom push out push loop push and inc mov fwait je aad and sub sti push cmp movsb cli dec rcrl loop pop sbb sbb cmpsb jmp in je xor pop inc pop loope adc mov xor lcall (bad) jle fwait nop fldt sub sti mov jno stc mov icebp test (bad) sub pop std and lahf sub jge out rcl into xorl out out and call popl loope lods jl pop dec adc pop scas jecxz push insl rcll popf jp out ret jl pop push stos inc (bad) ja loope mov adc push inc pushf add xor inc repnz nop int adc xchg xor cmp mov jp mov add cmpsl sub jb jle inc shrb ljmp fistl adc out mov decl sbb in xlat adcb iret push negb insl push mov and inc add xor popa xor mov and xor in dec sahf seto mov and adc imul pop shl imul and pop fbld cmc mov in mov jle ljmp pop rcrb or jno xchg push push jmp int rcr in ja pop ficoml shl int3 pusha mov jle mov icebp mov adc adc mov cmp cmpsl hlt jbe push xor and push add push test (bad) adc add les jnp cmpsb inc jecxz lea mov push jb push fmuls jl scas mov push push pop test insb sbb loopne fcomi in hlt add mov mov aaa das xor test clc ljmp pop bnd popf and xlat sbb and clc jne andl ds jne mov sbb lea lock imul xor add mov adc popf add or jge add mov cmp xchg int mov cs push push jne je jge inc lcall or fucomi sbb adc adc call (bad) jo arpl xor adc inc jno mov in jo adc adc shrb push jecxz aad cmp mov ror cs mov push add jae out insl push fld daa clc repnz lea dec sbb pop out jmp mov popf xor sbb arpl test cs add jecxz or pop lahf mov nop and mov adc sub push jnp jle and ja fidivrl xlat push andl and movsl jecxz stos mov mov xor and imul pop aaa fdiv adc pop nop add mov or pop les call pop xchg ret test dec popa nop mull push push add xchg pop mov hlt or mov ja sub mov movsb add ss add fisttpl (bad) jo sbb fwait ja lods pop lock out pop jne fwait mov xor add and negl jb fstl fcoml mov inc sbb test and mov mov or stos fistpl je sahf (bad) xchg add out xchg mov adc mov push push into mov and faddl stos cmp fadds insb add inc push bound in mov lock adc faddl nop push mov dec mov cmp inc xchg and xchg cld mov pusha xor dec clc inc idivb add sbb jns out test js sub paddusw cmp mov pop sbbb xchg iret jne xor jno je fnsave dec jno push loop sbb xor arpl xor push xor movsl test daa lret popf out adc add jl hlt sbb fist in lods repnz popf mov xor rolb xchg push and insb adc and xchg add lahf jg repnz push pop push fnstsw push fs pop add and cmc sub xor add stc cmp xchg push loop mov push xchg das mov cmp movsl pop (bad) call popf gs push add sbb arpl sbb ret ds push sub adc lods pop dec leave cmc jmp jns (bad) ja in push mov loop (bad) and push fdecstp je push aaa jp add fcmovne mov xor or dec lcall lods in in or jb icebp mov sub cmc or adc xor cs cltd or popa sub add xor jle lods sahf sub jl mov iret cwtl pop (bad) xor stc mov clc fnop repnz xor lock jb adc popf and and popf sub call adc and sbb lcall add xchg jecxz or cmp out pop or dec mov pop cmc lods call xchg mov jmp repz out add test andps xor mov add pop dec xchg out push sbb sub push fwait dec xlat sub outsl fisubrl mov in (bad) and adc sub xor add dec mov mov inc adc xchg rcrl sub std enter xor lret push (bad) insb or and lds cmp fisubrl xor inc add bound (bad) push hlt bound mov xchg mov push pop fadd ss repnz movsl stc push mov inc add cs insb movsl push mov inc and xor push push lods xchg (bad) push test or mov xchg jno stos loop sti push das lock ss cld xor add add aad xorl or nopl cld repz inc push aam mov scas pop pushf mov adc xor lret lret pop fwait insb mov std adc int and xchg adc cltd repz jle int fwait push sub aaa sahf shrl or mov xchg sbb enter (bad) push push inc mov fsub inc mov push rorl lret int je outsb cmpsb sbb add fnstsw adc jge adc ficoml roll dec repz (bad) pop or inc fadds cli inc in loopne nop push mov cwtl and rcrb mov xor xchg inc pop inc sbb in add js xchg bound or add add sbb xchg fs pop or mov icebp subl jmp or dec mov cmpsb lahf push test push stos jns mov arpl pop xchg jl dec rorb cld sbbl add ljmp lods out (bad) loope push mov xchg or mov popf loop mov loope popf loop mov loope popf loop mov arpl pop or inc outsb fistl repnz xchg adc test inc add int3 jae jb jg cltd mov xchg arpl hlt cli hlt adcl cmc mov sbbb lcall (bad) pop adc mov mov repnz xor mov ja ret pop inc cmp push xchg addb jmp ja out test into test and add xor repnz fwait push sbb xchg and push nop out loope adc loope popf loop mov loope popf loop mov xchg addb repnz mov inc roll add lds dec nop xchg test (bad) mov push je adc in cmpsl jne icebp pushf out push jne mov in jmp arpl dec int3 testb jg clc mov inc cli insb jns je fstpl in push push xchg xchg mov lea push pop push adc or cmp (bad) insb test leave jp std int3 push sbb test adc arpl lahf cmp int notl push popf push mov (bad) xor repz or and leave mov fcoml icebp mov fwait addl movsl movsl push repnz rsqrtps cld xchg xchg add aad mov pop mov mov sub cmpsl sub loopne and cmp stos cmp dec ds jp stc sbb nop mov cmp lods mov dec push mov sub repnz dec in data16 into (bad) mov cs adc scas mov (bad) jno jge hlt adc in dec (bad) xor pop lea add dec xor push int jb loope sub sti xchg roll ja test lock loop addl jmp push cmc test xor xchg mov (bad) xchg ss and push cs or sbbb in test add cs or pop movsl stos pusha cmp mov call ljmp jbe push jge out adc fs jle xor (bad) and add inc xchg popf jno fisubl inc pop sbb out leave mov mov test sbb mov sahf sbb andl adc pushf push inc adc out (bad) add dec shr fs sbb test popa adc xchg popf outsb sti popf dec fbld cmp jb mov (bad) adc sarb push xchg pusha inc mov jp pusha divl or sbbb vmovaps dec leave out ja pop lcall outsb movsb aas sub cmp adc repz pop xor test pop lahf xchg mov pop repnz adc outsl sarb push pop adc xor and outsl scas mov pmaxsw lock dec in iret daa arpl pop mov xor bound mov and movsl jb fdivp mov push cmp inc sbb js clc imull sti pop pop stc fisubl ja pop and and xor pop sbb mov addl sub fstl in out lret icebp in xchg outsb sub mov out mov xor mov jne outsl sbb cltd cmp add hlt mov add int das adc sti aad enter add mov xchg pushf push fnstenv mov add data16 loop mov outsb add xchg inc xchg mov jne imull add out xor das mov fistpl mov add xor (bad) test aad inc add popf mov mov orl cld add cmc insl loop cs inc gs sub mov push pop out mov and (bad) bnd mov clc cs pushf data16 add lods sbb xchg push sahf (bad) or xchg mov pop stos (bad) or es lret inc mov sbb rorl fidivl mov push jb mov xchg je adc nop loop stc jo fwait stos cmp cwtl mov sbb int aam mov jp or int inc inc loopne rclb cs jo xchg xchg in cltd add adc jl outsl push adc fldt addl out push psadbw add ljmp scas pop rorl push rorb je push (bad) cli es addl xor mov sub jp (bad) add xor or cli adc adc mov ljmp popa fstpt sbb lcall xchg jle ljmp xlat sub jbe inc imull adc jmp insb data16 xchg mov xor les scas pop (bad) mov cmp inc mov pusha mov pop mov sahf mov jne push lret xchg mov mov nop stos push mov pusha fsincos mov pop (bad) mov bnd sbb mov jno mov mov xchg or jl pop jnp paddsb loopne add push lahf leave jle ljmp cmp negb pop xorl hlt sbb cmp xchg pop jge sub fcompl (bad) aad xor mov sub popf push stos mov inc and xchg cs sti gs mov sahf xor inc dec stos or push in test shrb sar push inc mov xchg das or push mov pusha fildl arpl out cld jnp inc imul push call rcrl push push bound mov cmp outsl mov mov scas cmp nop push jge adc add addl xchg cs fcoml mov (bad) mov inc shlb int3 inc dec inc mov pop pop mov adc mov jl ss movsb push adc ja xchg xor pop lock ja mov adc mov cs fwait nop push clc mov xor push cmp outsb xor adc adc stos xchg adc mov aad xchg cmpsl mov outsb xchg mov mov push adc lea sbb cmp rclb mov inc mov (bad) mov jmp rcrb mul rcrb out sbb cmp xchg sbb loope cwtl adc stos pop adc mov push dec std lock testl lock out clc xchg sbb stc ret sbb mov pop addl xorl adc or icebp mov addl adcb pop adc ret pop xchg or push add test lock movsl ret pop mov xchg or out mov push and xchg add jge xor push pop lock mov cwtl add add lahf mov lock adc push lahf or mov mov xchg ret psllq in addb adc das out adcl xor mull nop push out pop adc ret pop xchg mull add add lahf xchg push jge adc xchg idivl lahf xchg push stc lock fcmovnb pop fwait divl sbb and ret pop sbb mov cltd add lahf cwtl (bad) int adc cmpl jl fadds dec (bad) xor add imul and push push (bad) push add xchg adc ret add jb jbe push adc push add decb cmovle sbb pop ret push fistl xchg add sbb xchg jecxz nop aad sbb pop ret pop nop mov pop aaa push add pop xchg mov or or mov dec mov add fwait adc xchg or push dec rclb inc adc xchg mov or cmp loope dec movsb mov mov mov loopne movsb sbb repz adc pop icebp adc sbb pop je arpl or out or rcr int3 xchg xchg lock adc xchg int call xor aaa adc lock or add sbb (bad) mov lods sub and (bad) lahf add jmp cs into xchg cmp out jp cmc pop push dec jb sbb xor jb sub test pusha push outsb jmp dec adc shll and mov dec stc (bad) pop fcoms repnz mov push fisub (bad) fdivl xor fwait mov popa cmpsb lahf xchg jecxz daa pop jae cli iret psubd sbb adc mov scas inc loope push xchg rcrl xchg jae sarl loop fstl xchg or lcall mov pop shl inc adc hlt or stc icebp xchg testl mov clc out xor sbb adc push ljmp rorl jge or loopne push test test fistpl pop sub push int3 leave pop adc jb adc and stos addr16 cmp outsl mov pop pushf xor pop popf lcall sbb aad xor call les fs sub push dec mov les push lret aaa outsb mov and push mov dec (bad) mov mov cmp (bad) jecxz leave lods mov xchg outsb mov arpl mov fiaddl jecxz cs in xor jmp aaa out push push inc jns outsl hlt stc loop dec xor out popa out lret scas lods adc push pop xor (bad) xchg mov loopne sbb mov test lock sbb or test divl cs fisttpll test out les push mov mov es xchg cs bound out mov cmc pop mov lret adc xor pop test sbb jp xchg push cli pop xchg jecxz arpl lods cli pop aaa fiaddl (bad) xor sbb inc mov mov add nop push stos nop mov fwait inc push rcrl in clc repnz sub outsl sub fisub sahf add xchg clc jb ss xor lret in xchg xor add fwait push pop lahf cmp add sbb mov call icebp jmp push test dec inc jge dec jmp mov and cs repnz jne adc popa sbb push and cmpsl shlb push faddl lods (bad) cld push push test push mov rcll cmpsl push mov lcall add mov lods out setnp test dec and inc push or sub movsb aad movsl lock push xor xor popf addr16 mov sti and push xlat push push (bad) repnz mov push aaa (bad) xor pop (bad) mov mov in sub lret dec cvtps2pd lahf shr xor movsb (bad) clc lcall lods call mov mov (bad) popf mov fstps je pop lods add adc loop pop pop jle pop (bad) push cmp xorl jmp adc ret pusha insb push or shrb inc cwtl xor push bound xchg (bad) or mov in jmp mov push shll (bad) lock xchg mov mov add jl jge pop sbb hlt mov nop ljmp (bad) mov (bad) ss or push xchg imul shlb sbb sbb idivl add adc xor dec mov dec jp stos rcll inc cli jl dec gs add xor mov in xchg mov lea popa mov in or sub (bad) xchg popf xchg cmc popf jg xchg push cmp movsb mov add or xor popf pop cmp push jnp stc sbb cli mov and (bad) lods call dec mov mov mov jb dec ds mov xor jge xor or xchg rcrb push mov jo hlt rorl push ljmp loopne fwait adc lods mov pop inc bound jecxz mov imul repnz dec xchg cli sub ss mov push or or adc out push (bad) imul inc xchg fistl testl lods out jno xchg in sub xor or sub lcall add rcrl xor mov stc push dec fs sub push xchg gs sbb inc xor popa into movsl or xor jecxz push dec je adc xor or test xchg or fs and sub mov jmp bound cmp shrl outsl mov ljmp aad xchg xchg push or notl clc pop aas aam jmp rcll jno lods repnz aaa xchg or mov xchg mov xor sbb ljmp dec sbb pop call push push aaa repnz or popf test (bad) loop mov rorl test push gs push jmp mov adc xchg ljmp adc pop aaa and mov inc push sti loopne inc jae je pop repz cs daa xor mov jb jno lea rclb jp push adc pop sbb or xor pop mov adc pop jle and fyl2xp1 add xor push mov or mov enter mov dec dec cmp popf xor hlt rcrb push movsb mov loop add sub xor xchg imul and adc fwait inc xchg sub loope je jae mov push test sub fbld lahf dec lock adc stc negb stc into jb scas jl dec and push inc (bad) mov ss dec adc dec jne pop rcll ss xor jo (bad) ds mov pop int3 and mov jnp stc push jne ss cmp pop ss adc add mov loope pop insl iret adc push sbb roll arpl divl aas daa mov xchg xchg sub out add add push loop jno pop fisub mov stc (bad) mov push sub or jl push xchg xchg inc sbb xchg icebp jmp je mov mov mov inc xchg je mov enter mov add mov ret jne in jecxz pop jne adc adc rcrl popf push sbb pop aam rolb ret xchg hlt sbb clc adc xchg cmp adc xor adc jae xchg xchg adcb lods test mov sbb ret or xchg xchg push scas or cmpb into (bad) ficom ja (bad) push pop cmp mov adc add loop fbstp test andb movsb ret or stos xchg lds xchg push or popf inc cli lock scas movsl sahf je adcl push xchg (bad) jno call lret mov dec jp mov mov push and xchg cmpl iret test push sub rcll fs in sbbl sbb sti push inc and adc repz pop xor inc push adc (bad) popf (bad) mov push pop sub andl cmp push (bad) sub aaa cltd shrb pop loop lods es rcrl repz int3 test xchg icebp sbb and out xor add inc sbb xchg idiv lahf test add daa in push inc popa adc or cmp in mov cmc sub xor ljmp jg aam cltd inc sti data16 es mov jecxz cmpsb xchg cmp add push cltd inc adc (bad) repz jae pop sub pusha xchg mov xchg mov sbb adc xchg xchg repnz mov repz negl sbb (bad) jp adc les sub cmp jecxz push add leave cmp jge sbb mov inc and mov mov scas mov dec mov in je test lds push mov pusha adc pushf movb mov lea call push call pushf push lea jb clc test cmc bt cmp pusha call dec cmp xor and mov bt pusha clc pushf cmpb jmp repnz fdivs adc mov aas xchg mov mov sarb mov aam pop xlat hlt sub call ret dec xor loop mov lock mov or cwtl out (bad) lock lahf in ja push stos outsb popa xor xchg add xchg push insb push mov xchg xchg cmp es clc mov fstl xchg pop and dec dec and repnz ret sbb out or outsb push push popf xor fcmovnb mov add cmp sub loope xchg or call push ds push lahf cs xchg (bad) mov rcrl dec orb andb jmp lock xchg inc lahf stos push dec jnp pop icebp pop push dec sbb mov dec add ret scas jmp pushf call jmp lea ja xchg pop pusha mov not lea mov lea mov call movb cmpb jmp and adc mov (bad) ror jmp rcrl push dec xchg cmp cltd fimull push mov stos or sbb add aaa mov pop dec xor xor fs fcmovnu jecxz mov nop add cmp sbbb mov cmp pushf movsl fucom sub inc sbb out sub sub sahf cmp xchg add scas imul and int3 pop inc jle xchg jne sbb lock xchg fiadd inc pop mov mov fldcw xor push js dec mov sub xor push mov push outsl std add sahf inc outsl into push fnstenv pop std or pop in push or lock push test sbb xor es movsbw mov jmp lea ja jmp shld movl stc rcr stc (bad) cmc mov pusha cmp pusha cmp pushl jmp lea jbe push mov pusha movb push movb mov push pusha movb lea call pusha mov pusha pushf lea jmp movw lea ja stc jnp push imul pushl pushf add push pushf lea jmp pushf pushf lea jne mov mov inc sub adc rcr inc mov clc sub pusha cmc test pushl popl test test cmp push jmp pushl ror clc clc cmc bt sub call stc sub pushf movb mov pushf lea jmp movw jmp call cwtl cmp clc clc cmp sub pushf mov pushf pushf pushl lea jmp movsbw xor mov jmp jmp mov mov movb mov mov mov lea jmp mov pushl mov jmp mov call pusha jmp call call stc movzbl bswap rcr shl bsf sub setg movsbw mov inc neg shld sete clc neg mov cmc push ror bsr sub rol rcl mov stc pushf pusha cmc add pushf call sub pushf mov mov pushf pushf pusha push lea jmp sub push inc mov mov xor mov push pusha push inc bt ror cmp jmp movb mov pusha pushl mov pushf call jmp mov pusha pushl push pushf lea jmp and pushf cmc test cmp jmp not push pusha pushf mov pusha mov jmp mov pushl popl mov mov mov movb lea jmp xadd aaa bswap mov mov shl call bt clc sub pusha mov push call jmp call call jmp not inc bt stc rol not not mov pusha inc and ror add call pushf mov jmp stc pushf shr call lea jo push pushf mov jmp movw jmp bts ror cmp and mov call mov movb push lea jmp pushf test pusha movw neg call inc pushf clc bt add jmp cmp test not pushf not stc clc sub bt clc bt push and push mov mov push pushf popl push pushl popl push lea jmp mov mov movb pushf jmp (bad) testb aad push pushf sub dec neg sub adc add jmp pushf pusha mov pusha pushf mov movb push movl lea jmp mov push call bswap movsbw xchg lea xchg lea push pop pusha xchg mov repz popl setnp bswap pushl popl not push movl push mov lea dec mov movsbw pushf inc ror call mov mov lea jmp pusha mov jmp jmp jmp pusha movb pushf mov jmp add pusha pushf mov movl call lea mov and test mov call call jmp not clc not cmp jmp jmp jmp mov movb cmp pusha jmp call jmp dec mov stc pushf sub stc pushf clc bt add push lea jp pushf pushf popl push movb pusha pushl popl movl push lea jmp stc clc ror stc sub jae sub test pusha stc xor mov sub jmp call mov call jmp pushl movb mov movl pusha mov pushf mov push mov push pushl ret mov push mov jmp push mov pushf pushl jmp call call cld call jle cmc rol mov stc dec bsf bswap mov jmp movsbw movsbw mov pusha pusha jmp pushf jmp cmp mov cmp add stc clc stc movl mov movb sub call shr aam mov xor stc rcr rcr mov jmp pushl pushf mov push pushf push movb lea jmp lea jnp xchg pusha pushf movl movl pusha mov push push mov pushf pushl ret xadd sar shld mov pushf (bad) icebp mov clc sub cmp test pusha shl pusha mov call mov push mov pusha lea jmp xchg mov cmc shld adc mov cmc clc pusha add pushf call mov jmp mov mov movb pushf jmp mov mov push pusha pushf lea jmp pushf mov mov mov pusha pushl lea jmp rcl pushf pusha mov btc adc not data16 repnz cmp add jmp mov jmp mov push pushf mov pushf mov movl lea jmp pushf call movb jmp sub push call ror add pusha mov mov call cmc movb rol push call mov movw pushf lea jmp clc pushf and pusha movw mov mov lea je pushf pushf jmp mov mov mov movb pushl ret pushl popl push push lea jmp pushf mov jmp pushf neg ror add add call adc mov pushf stc mov call pushf jmp pusha pusha add call test sub jnp add push jmp pushf mov pushf mov push pushf pushl ret pushf pushf pushf popl jmp bswap pusha jmp push push push pusha mov movb pusha lea jmp test cmp call jmp pushf mov mov call push jmp mov pushl pushl jmp pushl popl mov pushl lea jmp sub pushf xor stc cbtw movw cwtl cmc push clc cmc add call jno and clc mov mov setbe dec mov test push pushf sub pushl test cmc shr pusha call call lea jbe mov call mov pushf movw mov push mov jmp not aam mov bt jmp mov pushf movw push pushf lea jmp mov movb lea jmp mov jmp cld pushf rep shl neg pop mov clc rol mov std pushl popf mov movb mov mov lea jmp jmp pushl popl mov lea jmp add jmp push push movb pushf mov lea ja pushf mov pushf push jmp jmp mov pushl push movl lea jmp mov push call data16 repnz mov pusha call xor movzbl bt call shr mov movsbw dec bt mov rcr bt mov cmc test pusha stc add pushf shrd call jmp pushf mov jmp jmp pushf push call pushf popl jmp stc movb add jmp btc lahf jp xor mov shr shld dec clc mov pusha add jmp mov mov pushf mov pusha mov pushf pushf jmp bt sub mov mov mov mov mov push pushf lea jmp or call mov mov pushf popl lea js pushf pushf mov pushl popl pusha push pushf push lea jmp mov pushf pushl pushf pushf popl jmp aad push ror mov stc clc add cmp sub pusha test movl add cmp neg stc clc pushf call push movzbl cwtl lahf mov movb pushf mov push mov push movb lea jmp pushf mov pushl mov jmp jmp mov pushf popl call pusha call jmp mov pushf push movw lea jmp pushf popl lea jo pusha pushl popl pushf push pushf lea jmp cmc cmc pushl popf pushf mov pushf lea jmp test movb stc add jmp call pushf lea pusha mov pushl pushf pushf lea jmp inc push push mov pushf lea jmp pushl lea cpuid stc pushf test sub stc stc mov stc cmpl pushf push mov mov jmp mov call clc pushl popl pusha jmp sub xadd clc mov pushf and not shl mov bsf bts mov shr pushl popf pusha mov bswap lahf mov pop push mov pop lea mov lahf pushl lahf mov lea mov seta xchg movzbw mov jmp pushl popl push pushf pushl lea jmp push pushl movb mov jmp test btr sub mov add btc bts jmp pushl mov pushf mov jmp pushf mov push call ror cmc pushf cmp sub cmc call movw pusha pushl popl push movw lea jmp mov pushf popl jmp push push mov pushf mov jmp pushf mov mov mov pusha mov call pusha push sub jmp cmc stc sub stc stc xor call mov push mov lea jmp mov pushf push movb pushl ret jmp mov push pushf lea jmp std call inc rdtsc stc test test sub pusha mov pusha mov mov mov lea jmp pushf pushf popl pushf jmp pushf pushf popl push movb push pushf pushl popl pushl push mov lea jmp pushl lea jne xor mov cmc test call mov xchg movsbw movzbw call movb mov call mov call movzbw sbb lea rcl shl sub bt lahf lea cmc sbb and neg data16 (bad) jno or enter add pushf call bt pusha sub cmp cmp pushf cmc and jmp call jmp pusha mov movb sub mov cmc shr jmp xor mov neg add mov cmp test add call mov mov lea jmp pushl mov pushf lea jmp mov mov push mov jmp mov xchg push bswap mov pusha not pusha mov jmp pushf mov call mov pushf jmp mov call mov pushf pushf push lea jmp setp jl not pusha mov lahf mov mov pusha pushf mov divl call shrd not mov stc bt stc add pushf mov jmp call call cmc (bad) hlt cmp bsr mov movsbw xor adc mov jmp pushf call aad shl daa stc mov sub stc cmp rcr mov cmc cmp sub jnp shr pushf pusha pushf movb mov jmp pushf popl pushf pushl popl pushl push movb movl lea jmp pushf lea jmp movl jmp call mov push push mov movb lea jmp stc stc stc shl movl mov pusha mov mov jmp push lea je push sub cmp cmp xchg stc mov cmp clc jmp mov push pushl mov pusha mov push jmp mov pushl mov mov pushf mov pushf lea jmp call or decl nop stos ljmp mov decl stos lcall jno jmp mov jmp jne lcall stos ljmp stos call insb stos ljmp insl stos pushl stos jmp stos call jnp decl stos call xchg (bad) cli mov jmp subb jne stos push subl dec (bad) stos lcall stos jmp mov (bad) mov insl stos call stos jmp jo jmp stos dec xchg (bad) cli mov decl mov decl mov inc mov (bad) (bad) stos call stos ljmp stos (bad) mov jb dec mov jmp subb (bad) stos (bad) ljmp push subl int3 xchg decl stos (bad) ds mov ljmp stos jmp subb or jmp test lcall stos (bad) ds je call dec xchg lcall stos (bad) stc outsl stos push subl addl stos decl stos jmp jne lcall jno (bad) (bad) stos lcall stos decl xchg jmp subb daa subb fwait subb int stos jmp jne decl stos decl outsb stos call stos call mov call stos pushl stos jmp subl pop test jmp mov call stos lcall stos decl jae (bad) ds outsb stos call mov decl outsl stos (bad) ljmp call stos jmp jae call jne jmp jbe jmp test call ljmp stos incl jbe call jnp call stos jmp subb add stos jmp jae ljmp mov incl mov call insb stos (bad) stc outsl stos lcall jno (bad) ljmp (bad) mov jne call stos ljmp stos call jnp jmp jbe decl nop stos (bad) mov mov jmp stos ljmp stos inc mov (bad) mov je jmp jae jmp jae call mov jmp jbe pushl jo call stos ljmp stos decl outsl stos jmp mov call (bad) mov mov jmp jne incl mov ljmp mov pushl decl stos (bad) ds mov jmp stos ljmp stos decl mov pushl ljmp stos call stos jmp je (bad) ds mov lcall stos call jnp lcall xchg decl stos lcall lea call call jnp (bad) clc jp pushl stos (bad) fdivs jmp jne ljmp stos lcall stos decl jbe jmp subb testl stos call insb stos ljmp xchg decl nop stos decl stos (bad) clc jp jmp stos fsubs inc add jmp arpl stc push mov pushf call ror xor rcl mov shrd pusha pushf xor push bswap inc not rcr clc ror movsbw dec movsbw bt sub data16 icebp xor movsbl pushf not inc rol add cmc lea movzbl push cmp mov jmp mov movb call daa aaa add mov sub sets call pushf movb mov pushl mov pusha pushf lea jmp pusha movzbl mov movsbl movsbw pushf pushf xchg lea call pusha mov pushl jmp movl pushf popl push call push mov pushf jmp call push mov jmp mov mov jmp jmp pushf popl lea jno push movb pushf pushl popl pushf push push lea jmp notl or shl mov jmp push pushf mov call pushf push mov mov lea jmp pushf pushf add bt call call call rep btc mov cmc add mov movb pushl popf pushf mov pushf pushf lea jmp lea jne bsr adc rcl rcr xorb not pushf lea lea mov mov lea jmp xchg cld pusha mov mov call sub call pushf pushl xchg pusha pushf jmp add btc sbb not sub neg call pushl pushf pushl popl movl mov mov lea jmp pusha pushf pushf mov push mov movl lea jmp add add mov mov call xor pusha mov pusha push neg pushl dec cmp cmc cmp cmp bswap cmp stc pushf stc xor cmp clc sub clc call jmp mov push mov push mov pushf call jmp push mov pushf mov call mov pusha movb mov pushf pushf mov call mov jmp call bt add pushf jmp mov jmp mov mov movw pushf popl jmp pushf mov mov movb pushl push mov lea jmp pushl popl movb mov mov lea jmp call push pusha pushf mov movb mov call jmp pushl popl pushf lea jmp call mov movb push push pushf lea jmp pushf popl pushf mov pushl popl pusha pushf pushf lea jmp pusha mov call lea movw xchg not pusha mov pushf jmp pusha pushf mov push pushf call jmp shrd mov push add pusha push lea jmp push call cmp add push mov lea jmp jmp pushf mov jmp shr add btc mov cmc push sub movb call mov movb push pushl pusha lea jmp mov mov pushf pushf mov mov mov mov push mov push mov pushl pushl movw lea jmp call movb pushf jmp mov mov pushf movb lea jmp mov pusha pushf movl lea jmp not mov pop movzbw mov mov movsbw mov pusha jmp mov pusha jmp push mov call movw push mov push pushf push pushf popl pushf jmp jmp stc call mov jmp pushf movb mov movb pushl lea jmp movw pushl popl movw push lea jmp mov call lahf shr mov lea not ror mov stc add pushf mov movw lea jmp inc setb sub call bt add mov mov mov lea jmp push lea ja lahf xadd aad mov jle daa shrd lea aaa das clc sub ror lea aas lea shl bswap lea and bsr mov sub lea mov mov bswap push mov pushf popl movsbw push not std mov bswap ja not pusha lea mov pushf call rol movzbl push add pusha pushl inc call rep add data16 (bad) mov shl shr test mov test clc cmc test pushl popf movb movb lea jmp pusha pushl popl pushl movb pushf lea jmp mov pushf pushf lea jb push jmp call pusha mov call sar xor mov clc jmp pushf pushl popl mov lea jmp pusha call bt xor movl jmp pushf pusha mov xor rcl stc mov jmp lea cmc bt sub pushf stc clc mov add lea jns pushf clc neg stc ror call shr mov sar dec adc rcl mov push cmp mov pushf sub pushf bt shl call push mov mov lea jmp mov push mov push movb lea jmp movb jmp call mov mov lea jmp pusha pushf pushl mov pushf pushf pushl lea jmp bt rol lea dec cmp add pusha lea shrd bt sub rcl mov shl bt mov bsf bswap add movzbl mov sub shrd cmp rcr xor rcl pusha rol lea bswap sar not movzbl xor shrd setb (bad) cmc shl xor btr rcr shr rcr movzbl mov pushf lea adc cmp neg mov test pushf bt stc neg jmp jmp jmp mov call pushf call jmp mov call add call test add push mov push mov pushl push pushf lea jmp pushf popl call call movb call mov push pop mov mov pushf mov call call call btc add adc and add push mov jmp push pusha jmp mov pusha push push pushf lea jmp cmc sub test cmc add call pushl popl movb push lea jmp movb push pushf divl pushf mov mov mov call stc bsr mov mov pushf pushl call pusha pusha mov jmp push pushl mov movb push jmp call shrd aaa mov bswap not bt mov jmp pushf pushf mov call shld mov jmp pusha mov call call inc push test cmp pushf neg pushf clc ror cmp mov clc sub push pushl clc clc mov push sub jmp pushf mov movb pushl pushf lea jmp pop movsbw mov jmp call mov push mov pushf jmp or mov dec pusha mov pushf cmp add pushf pushf pushl mov pushl push lea jmp call popl push pushf push push lea jmp not bsf mov bt inc add pushf push mov lea jp pushf mov mov lea jmp sub pusha lea jne clc xor call push pusha movb mov pusha pushl mov movw jmp pusha movl mov movb pushf mov lea jmp pushf pushl pusha mov jmp call mov pushf pushf popl movb pushf pushf call call pushl popl pushf pushf pushf movb lea jmp mov push movw pusha lea jmp push push inc jmp push mov pushf pushl mov mov push pushl mov pushf call mov mov pusha mov push mov mov pushf mov call lea pushf pushf movl jmp dec mov jmp sbb shl clc mov jmp stc shr pushf jmp rol mov call pushf sub pushf cwtl test pushf sub push pushf mov pushf lea jmp xor bsr aaa shrd mov stc cmp sub call xor neg movzbl cmc call rcr bt lea call call add jmp mov pushl pushf pushf lea jmp push mov call call mov pushf pushf mov pushf pushf mov lea jmp bsf bswap lea movzbl dec clc add shl bts sar add lea test not mov or neg ror and add pushf push add dec mov call bt cmp mov bt add cmc bt shld pushf jmp push mov pushf pusha mov push push pushf lea jb push jmp inc clc shr mov sbb call cmc pushf add call mov call push pushf lea jmp jmp sub push mov mov mov push movb movb lea jmp clc add push push mov pushl lea jmp setno mov jmp mov movzbw mov jmp stc clc add pushf mov mov push movw movb lea jmp lea cld push pusha not mov pushf cld jmp lea jge push mov mov jmp push push movb movb mov pushl mov push jmp pusha mov jmp add add cmp inc add xchg push add add add pop add add add add pop xor add add popa xor add add gs add adc 