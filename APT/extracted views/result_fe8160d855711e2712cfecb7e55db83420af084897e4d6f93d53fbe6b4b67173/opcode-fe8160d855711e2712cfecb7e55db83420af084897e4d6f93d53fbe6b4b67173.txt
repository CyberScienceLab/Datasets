xchg pcmpgtd push xchg jo xor sub push bound mov retw imul or data16 push data16 or je or data16 add popfw dec push data16 lahf or data16 pcmpgtd les data16 xchg pcmpgtd jo ljmpw dec push data16 jge data16 or inc push or data16 mov or and data16 pcmpgtd xchg pcmpgtd jbe data16 data16 sbb mov pcmpgtd jne dec sbb pop (bad) or addr16 pop push or data16 pcmpgtd add dec insb push add outsb add test data16 or data16 data16 dec push mov data16 ja mov data16 mov push mov data16 adc mov data16 data16 outsb push data16 popfw sbb in out push inc xchg pcmpgtd sbb push data16 imul scas lahf or data16 add add add add add add mov inc add add jo inc add add add dec inc add dec inc add dec inc add dec inc add dec inc add dec inc add dec inc add inc add inc add dec inc add dec inc add dec inc add inc add dec inc add dec inc add dec inc add dec inc add push inc add push inc add inc add inc add inc add push inc add push inc add push inc add inc add push inc add push inc add push inc add push inc add push inc add push inc add inc add inc add inc add push inc add push inc add inc add push inc add push inc add push inc add push inc add push inc add inc add inc add inc add push inc add inc add add add inc add pop inc add pop inc add pop inc add inc add pop inc add pop inc add pop inc add pop inc add pop inc add pop inc add add inc add inc add pop inc add pop inc add pop inc add pop inc add pop inc add pop inc add pop inc add pop inc add pop inc add pop inc add inc add pop inc add pop inc add pop inc add pop inc add inc add pusha inc add pusha inc add pusha inc add inc add pusha inc add pusha inc add pusha inc add pusha inc add popa inc add popa inc add inc add inc add inc add arpl adc arpl push arpl lock cmc arpl cmc arpl aaa fs add fs add fs add gs add gs add inc add add add inc add inc add addr16 add addr16 add inc add addr16 add addr16 add add inc add inc add imul dec imul or inc add push add push add inc add push add push add push add imul imul imul imul imul insb inc add inc add inc add insl inc add insl inc add insl inc add inc add insl inc add insl inc add insl inc add outsb inc add outsb inc add outsb inc add inc add inc add inc add jo add jo add jo add inc add jo add jo add jo add jno add jno add jno add inc add inc add inc add jae add inc add inc add inc add jae add jae add jae add je add je add je add je add je add inc add inc add inc add inc add inc add jbe add ja add inc add inc add ja add ja add inc add js add inc add inc add add jns add inc add jns add jns add jns add jp add jnp add jnp add inc add add jl add add jge add jge add jge add inc add inc add inc add jle add jg add jg add jg add addb addb addb add aas add add push add add add mov inc add add add add stos test sahf test jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp push call add add add xor add inc add add add add aam imul lods pop dec repnz jo add add add add add push inc addl gs outsl jb addr16 jo add sbb add add add adc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add xchg inc add add add jp push sbb add pop add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add sub sbb add mov add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add sub sub add fsubrs add sbb add adc inc and add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add daa inc add add add jp clc sbb add add inc and add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add and inc add add add outsb jle xor inc add add inc and add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add nop inc add add add outsl jle push add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add nop inc add add add insl jle mov add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add xchg inc add add add add add sbb add pop add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add and inc add add add insb jle adc inc add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add es add xchg inc add add add insb jle dec sbb add or inc and add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add xchg inc add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add inc add add add jle mov add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add xchg inc add add add jle lock add or inc and add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add es add inc add add add add add sbb add or add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add daa inc add inc add add add add add inc add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add daa inc add add add jp cwtl sbb add sldt add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add add add xor rcrb inc add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add xchg inc add add add xor add sbb add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add daa inc add xchg inc add add add xor add inc add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add sub fcoms add and add js inc add add inc and add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add xchg inc add add add xor add add inc and add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add sub push add add addl add add sbb add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add xchg inc add add add xor add and sbb inc and add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add xchg inc add add add add add inc add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add inc add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add xchg inc add add add add add sbb add inc and add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add and add nop inc add add add push inc add push inc add add add add add add xor add add xor sub add add add add cmp cmp xor sub add add add add add xor add movsb xor add pusha xor add sbb inc add add add xor add add add add add add add add inc add add add add je inc add add add inc add add add add add inc add add add xor pop add add add add add xor add or or add add add dec inc add and (bad) sti hlt add (bad) (bad) decl add add add add add add add add inc add sbb aam inc add add test add popl add nop add add popa je gs jo jb add insb imul add je outsl jb addr16 jo add add push add add movsb (bad) adc in pushf cli or addb add add add add add add add add out xor xor test inc popf je push loope sub add add add add sub add add add add add inc and add add add dec inc add (bad) (bad) incl add add nop inc add add add outsb jle js inc add add add inc add add add inc add add add add add add add andb add add add and pop cmpsb inc add add add addb sub mov inc add pop add add cwtl sub (bad) (bad) (bad) incl add add add add and add inc add (bad) (bad) incl add cmp add sub add add add addb sub add add add add cmp add sub add add add and adc inc add add add add inc add add sub add add add and adc inc add add add add add and mov inc add pop inc add and mov inc add pop inc add and add inc add pop inc add add add add clc and add inc add pop inc add add hlt add add add add add dec inc add xchg pop sbb inc add adc inc add inc add add add add add dec inc add (bad) (bad) incl add add inc add jnp jbe jl dec movsb fiaddl xchg int xchg add add add add inc add add add or add add add add add and (bad) (bad) (bad) call inc add sub add add cmp add incl add add add inc inc add (bad) (bad) jmp xor adc inc add add add jle (bad) incl add add add sbb (bad) lcall inc add add add nop inc add add add sub add add add add incl add addb add add clc sbb (bad) (bad) (bad) dec inc inc add add add nop inc add add add sub (bad) incl add addb add add xor inc add (bad) (bad) dec inc inc add add add nop inc add add add sub (bad) incl add addb add add push (bad) (bad) dec inc inc add add add xchg inc add add add inc add incl add addb add add mov (bad) (bad) dec inc inc add add add xchg inc add add add add incl add addb add add fcomps inc add (bad) (bad) dec inc inc add add add xchg inc add add add inc add incl add addb add add adc inc add (bad) (bad) dec inc inc add add add xchg inc add add add add incl add addb add add dec sbb (bad) (bad) (bad) dec inc inc add add add inc add add add inc add incl add addb add add sbbb add (bad) (bad) dec inc inc add add add inc add add add add incl add addb add add mov (bad) (bad) dec inc inc add add add inc add add add add add add add incl add addb add add lock (bad) (bad) (bad) dec inc inc add add add inc add add add add add add add incl add addb add add sub inc add (bad) (bad) dec inc inc add add add add add add add add (bad) incl add addb add add pusha sbb (bad) (bad) (bad) dec inc inc add add add add add add add add (bad) incl add addb add add cwtl sbb (bad) (bad) (bad) dec inc inc add add add add add add add add (bad) incl add addb add add rcrb inc add (bad) (bad) dec inc inc add add add add add sub (bad) incl add addb add add rcrb add (bad) (bad) dec inc inc add add add xchg inc add add add sub (bad) incl add addb add add or add (bad) (bad) dec inc inc add add add xchg inc add add add sub (bad) incl add addb add add inc sbb add (bad) (bad) dec inc inc add add add xchg inc add add add sub (bad) incl add addb add add js inc add (bad) (bad) dec inc inc add add add xchg inc add add add sub (bad) incl add addb add add sbb inc add (bad) (bad) dec inc inc add add add xchg inc add add add sub (bad) incl add addb add add call (bad) (bad) dec inc inc add add add xchg inc add add add sub (bad) incl add addb add add push sbb (bad) (bad) (bad) dec inc inc add add add xchg inc add add add inc add incl add addb add add mov inc add (bad) (bad) dec inc inc add add add xchg inc add add add sub (bad) incl add addb add add nop sbb (bad) dec inc inc add add add inc add add add sub (bad) incl add addb add add pop sbb (bad) dec inc inc add add add inc add add add sub (bad) incl add addb add add and (bad) dec inc inc add add add inc add add add inc add incl add addb add add mov inc add (bad) (bad) dec inc inc add add add inc add add add inc add incl add addb add add inc jns outsl insl gs add add dec imul jae add fs jns inc gs gs dec gs jne imul dec outsb arpl data16 popa bound add add je imul add arpl popa insb add add jb jo popa arpl add push imul je add push outsl popa imul add popa outsb imul outsl bound imul add push jo arpl popa imul add add push jns outsb imul je push add push popa arpl jb add jbe jb add dec outsl outsb jo imul add add push imul dec outsl jb arpl add add inc jb outsb imul inc outsl insb imul add add dec outsl jb imul add imul imul gs outsb popa outsb arpl add jae popaw insb insb jae add inc push aaa add je outsl jb addr16 jo add add push into xchg push clc lods rolb cmpsb popa lcall stc or or imul or rcrb shrl sbb lahf sti loopne add stos dec cmp xor or stos add xchg inc outsl jb add add cs push add xor inc cmp outsl addr16 insl and insb gs sub sub arpl jae data16 push imul je imul pop push inc ss dec inc add add mov inc add add add add add add add sub cld sub pop sahf inc add fnstsw sub xor or stos add xchg push imul push imul push imul or dec add or dec cwtl cld or push (bad) mov stc add rolb popl mov ret xor xor test inc popf je push loope sub mov inc inc xchg jl repnz lods xor or stos add xchg dec popa insl gs jae add add cli dec lods xor or stos add xchg dec outsb je jb gs jae add jb popa outsl xor add add dec lods xor or stos add xchg dec bound outsb gs add add dec lods xor or stos add xchg dec jns push jo gs add add insb outsl jae outsl insl popa add add jp outsb je jae add add dec lods xor or stos add xchg inc popa imul dec lods xor or stos add xchg push outsb ja imul add iretw adc pusha rcll insb je add imul outsl jb add add dec lods xor or stos add xchg dec outsl outsb push outsl jb add imul add add insb insl imul add jne popa jns add insl popa je jne add add push popa jb jp popa cmp add add push arpl jb add add outsb bound imul add popa imul add dec lods xor or stos add xchg push popa jb gs add popa js popa insl gs jb inc gs insl popa outsb add push outsb push outsl jne fs dec lods xor or stos add xchg push outsb popa outsb popa insb jns gs add add push insb popa jne imul add add inc outsl data16 add bound add add push aaa add add push push add inc push jb add add dec bound gs imul je imul add je gs jbe add inc gs je imul add loop lods xor or stos add xchg inc outsb imul add add push jne insb fs jbe add pop insl imul imul add add inc imul jns add bound xor or stos add xchg push outsl addr16 insl imul outsl ja popaw insb insb outsb add dec popa jae insb insb jns inc jne outsl je gs add add add add inc jb jo push jb inc jae outsl je insb popa outsb xor pop popa insb gs popa add jne data16 dec gs add dec popa arpl popa add outsb jae outsb imul outsb fs push xor add add jae imul add insl gs add dec outsl jae jbe insb insb gs add jne je add insl insl jns add pop outsl ja imul add gs outsl gs xor add outsb arpl add insb outsl jb jae je jb add add push outsb jo arpl imul add jb jns add push jne arpl push add jne add add inc jns insb outsl addr16 jo gs add add je outsb je gs xor inc jae gs outsl jb jne add outsl jbe imul add inc jb outsb jp jae dec popa jne popa add add addr16 add arpl je insl popa jb add outsb fs jne add arpl je arpl popa jb add add outsb imul insl outsl jae je xor imul cmp add inc gs insb insb outsl jae jae add outsl insl outsl je jb add add test or xor add add xor add or adc add add adc add or or add add or add or imul cs add add push add add fs outsl outsb imul add or add push add outsb add add sbb inc add inc add add pusha sahf inc add or je jmp push mov call jmp add add inc push inc push dec xor cs dec dec add add pop add add popa outsb addr16 gs imul imul mov inc add add insb sahf inc add or je jmp push mov call jmp add add add add jb imul insb insb add add add inc gs imul outsl outsb dec outsb outsw inc add xor add inc add add js inc add or je jmp push mov call jmp add add add add jb jne jb push popa insb jne inc add lock push xor add add test add add add mov or je jmp push mov call jmp add add add add jb gs xor add add push add add insb dec outsl jbe dec gs outsl jb add add xor add add nop sahf inc add or je jmp push mov call jmp add add add add je imul outsl outsb dec outsb outsw push imul jb ja imul popa add add add lock lock add add pushf sahf inc add or je jmp push mov call jmp add add add add gs xor add add inc outsb jne push imul popa je outsl outsb jae add add inc add add test inc add or je jmp push mov call jmp add add add add je jns je insl dec outsb jne add push xor lods xor add add mov inc add or je jmp push mov call jmp add add gs jne jae jb outsl jae add add add xor add add rcrb add add add or je jmp push mov call jmp add add add add arpl outsl jo jo outsb jne add add inc add add int3 sahf inc add or je jmp push mov call jmp add add add inc gs jb jns outsb jne push xor test add add fcomps add add add mov or je jmp push mov call jmp add add add add gs je push outsl jo jo outsb jne push xor enter add add in inc add or je jmp push mov call jmp add add add inc jo outsb fs outsb jne add add xor add lock inc add or je jmp push mov call jmp add add add add popa jb outsl ja jb add push xor push xor add cld sahf inc add or je jmp push mov call jmp add add add add popa jb jo gs add push xor cwtl xor add or add add add mov or je jmp push mov call jmp add add add push popa je dec popa insl gs inc xor cwtl xor fdivl add adc inc add or je jmp push mov call jmp add add add add add add add add add add add add add add add add add add add add add stos xchg add add add add add add push add add add add imul imul xor add add and add push add imul imul popa add add add je and and add add adc add inc add add outsb add jns xor add add adc add inc add outsl add add add add add add add imul add add imul add dec add jns je add jne jae xor add add imul imul add inc add jne ja popa add add add add add popa add jb outsl add add add add push add jb je imul add inc add jne je add outsl add outsl add imul add adc add push add arpl insb add bound popa add add add push add add popa add bound outsl add add add add jb outsl add add add add add add outsl add jo add jae je outsl add cmp add push add add push add add add adc add inc add jb add popa add add add inc add popa add je add xor add add adc add inc add add outsl add imul add adc add push add add ja add add add push add popa add add add sbb add inc add insl add insb add popa add imul jb add add push add add outsl add outsb add popa add je add xor add push add jb add jae arpl add arpl jns xor add add adc add push add jb imul insb add add add add add add inc add outsb add jo outsl add outsb add add add add add add add imul jp popa add add outsb add add add add je outsl add imul imul xor add adc add dec add popa add imul jae jae add adc add inc add jb outsb add outsl add add add add outsl add popa add imul adc add push add push add imul add adc add inc add outsb add add add xor add push add popa add add jae imul or add inc add ja popa add add adc add dec add je outsl add add imul push add add popa add arpl popa add outsl add add add imul je add insl add add adc add inc add outsl add add add jae add adc add dec add je popa add add outsb add cmp add add or add dec add jne imul add add add add imul adc add push add popa add data16 add add add add inc add arpl popa add push add imul add imul add add add add imul add xor add adc add inc add add outsb add outsl add add add add outsb add arpl imul add add add add add add imul jne jae outsb add jae jae add add push add add outsl add add imul add add jb outsl add popa add add add add jno jae jne xor add adc add dec add je popa add imul add add or add push add outsl add add add add add add add add inc add outsb add imul add adc add pop add imul add imul add add pop pop jbe popa push popa jb jne add add imul add arpl push add add add add add inc add arpl add add add add add push add add add popa add jae cmp add add push add add add imul add adc add inc add imul insb add jae insl add add add add je jb popa add add add add inc add outsb add add popa add popa add add add add add add outsb add insb add insl add add imul add add adc add push add jo jae je outsl add imul add add add add jae outsl add add outsl add jns popa add outsl add add add popa add add add add add add add jns insb add imul insb add outsb add xor add add or add dec add insl add jae xor add add inc add add jne arpl xor add adc add push add outsl add outsl add insb add outsb add add add sbb add push add je imul imul insb add xor add add dec add ja add je outsl add add add or add push add add dec add ja imul add insb add add add add add add push add push add xor add add adc add dec add insb add add imul jae add add or add inc add outsb add cmp add adc add inc add insl add add arpl add add add add add jne insb add add imul outsb add insl add cmp and add add add add mov adc add inc add jo push add add add add add dec add insl add outsl add add add add add add add add add add mov dec sbb mov cmp add add add mov adc add inc add add bound add je add add push add outsl add add add add add add add add dec add and push add jb jae imul and dec add data16 and popa add popa add insb add bound insb add and add add adc add inc add push add add xor add add add add add sub add xor xor add sbb add dec add das add add add add dec add add add add add push add add add add add dec add add add add add push add add xor xor add add push add add outsb add outsb add ja outsb add add add add jo jo add push add add add add add inc add imul jb add add push add add jb imul add and add jbe add sbb add dec add jns bound outsl add jb add add add add add sbb add dec add outsb add jne popa add add add add add add push add add add jo insb add jns and add jbe add adc add dec add jne jae add add add add push add add add add jb imul add add add adc add push add jae je add and add jbe add add push add add outsb add je popa add add bound insb add add adc add push add jne outsb add add add add adc add inc add insl add and add jbe add add or add inc add outsb add add add add add popa add je add and inc add outsb add add add add add je outsl add and inc add outsb add add add add add add add add add outsl add je add push add add js inc add add add add add add adc add inc add outsl add je imul add add xor add adc add inc add add imul xor add add or add dec add popa add add add add add inc ss dec dec add add pop pop jbe popa push popa jb jae dec add add jbe popa dec bound outsb add jbe popa push gs popa jb jb add pop pop jbe popa push bound outsb add jbe popa inc jb gs je dec imul pop pop jbe popa push je inc popa je pop pop jbe popa inc jb outsl jb jbe jb insb outsl ja add jbe popa dec popa je dec gs inc popa insb insb add add pop pop jbe popa dec bound gs fs data16 add jbe popa dec bound gs pop pop jbe popa inc jo xor add pop pop jbe popa dec outsb inc jae jb add add jbe popa push je push popa jb popa insb add pop pop jbe popa inc jb gs popa jb imul pop pop jbe popa push cmp je xor add add jbe popa push je inc outsl insl jo add add jbe popa inc jb gs bound add add jbe popa dec popa je dec fs popa insb insb dec add add jbe popa dec xor popa jb add jbe popa push jb outsb je bound add pop pop jbe popa push popa jb fs jbe popa push je push popa jb outsl jbe add jbe popa push je dec outsl jbe add add pop pop jbe popa inc jb gs je add add pop pop jbe popa push popa jb outsl jo add add pop pop jbe popa dec outsb inc jb outsl jb add add jbe popa push popa jb outsl jbe add add pop pop jbe popa inc jb gs popa jb add add jbe popa dec popa je dec gs inc popa insb insb dec add pop pop jbe popa inc jns popa jb add jbe popa push je push outsl push outsb imul add jbe popa push je push outsl inc outsb jae add pop pop jbe popa push je inc outsl jo add add pop pop jbe popa dec jb jae insb je push bound add add jbe popa dec gs add add jbe popa push gs jns je insl inc jb outsl jb or or add add inc and add add add inc add (bad) (bad) incl add add and add inc add add add outsb jle dec inc inc add add add add add add add add add add add add inc add add push inc inc add add add inc add inc add add add add add adc xor add pushf sub add add add inc add xchg addb sub add add add (bad) cmp add mov add add xchg addb sub add add add add cmp add sub add add add add add push inc add xchg addb sub add add add add loopne inc add add add push inc add addb sub add add add adc inc add add sub add add push push inc add addb sub add inc add add add cld sub add add add xchg addb sub add inc add add add sub add add add push inc add addb sub add inc add add add xor inc add add jo inc add addb sub add inc add add add add add add xchg addb sub add inc add add inc add add adc inc add sub add inc add add add add add inc add xchg addb sub add inc add add add mov inc add sub add inc add add add add and add addb sub add inc add add add pushf sub add add add inc add xchg addb sub add inc add add add add add addb sub add inc add add inc add add add push inc add sub add inc add add add add add add add addb sub add inc add add add mov add add push inc add xchg addb sub add inc add add add adc inc add sub add inc add add sub add add add xchg addb sub add inc add add inc add add loopne inc add cs add add inc add add cs add add inc pop inc add cs add add inc add add inc add add test inc add addb cs add add inc add add cs add add add pop inc add cs add add add or add cs add add add add cs add add add ltr sub add add mov xchg addb cs add add inc add add inc add add add inc add addb cs add add add adc mov sub add add dec pop inc add xchg addb cs add add inc add add inc add add add xchg addb cs add add add adc test add add inc add add add pop inc add cs add add add adc add add insb pop inc add cs add add add adc mov add cld sub add add fcomps add addb cs add add inc add add inc add add cmp adc inc add add inc add add sub add add add add addb cs add add add or mov sub add mov inc add addb cs add add add add add cs add add add add add pop inc add xchg addb cs add add add add add cs add add insb pop inc add xchg addb cs add add inc add add inc add add add pop inc add cs add add add or add inc add add xor add cs add add inc add add add jl inc add das inc add add add push add add add das inc add add call xchg addb das inc add add inc add add add add add add inc add xchg addb das inc add add inc add add inc add add lods pop inc add das inc add add inc add add add add cs add add add pop inc add das inc add add add adc in add cld sub add add pop pusha inc add addb das inc add add inc add add add add cs add add mov xchg addb das inc add add inc add add add add add and add xchg addb das inc add add add adc lock add cs add add add add das inc add add add sbb hlt add add cs add add add popa inc add xchg addb das inc add add add or clc add add add pop bound pusha xchg addb das inc add add add adc cld add add cs add add xchg addb das inc add add adc add add pushf sub add add add bound and inc add add add adc add add dec sub add pop arpl jo addb das inc add add add add add add add addb das inc add add add adc or add cld sub add add adc push xchg addb das inc add add inc add add add add add jo inc add addb das inc add add inc add add add dec sub add mov inc add addb das inc add add add adc sbb add loopne inc add add add addb das inc add add add or add inc add add je inc add das inc add add inc add add add add add shlb pusha xchg addb das inc add add add push add add adc inc add add add inc add xchg addb das inc add add add push add add add das inc add add add add add inc add xchg addb das inc add add add cs add add loopne inc add xor dec add add adc xor add cld sub add add add inc add addb xor add add inc add add add cwtl sub (bad) (bad) (bad) incl add add add add addb sub (bad) (bad) (bad) incl (bad) cmp add mov add add push addb xor xor add inc add add add cld sub add add add add addb xor sbb add inc add add add cld sub add add push addb xor inc add add adc add add xor inc add xor or add inc add add add enter or add mov xchg addb xor or add inc add add add cs add add sbb add xor xor add inc add add add sub add add add add xchg addb xor add add adc add add cwtl push add xor adc add inc add add add loopne inc add add add inc add addb xor pop add add or pop add add add imul xchg addb xor sbb add add add mov add add addb xor push add add adc add add sub add add add add add imul xchg addb xor add add add inc add add add inc add xor push add add push add add das inc add add movsb insb inc add xchg addb xor sbb add inc add add add dec sub add adc inc add addb xor sldt add adc add add js inc add xor cmp add inc add add add adc inc add add in inc add xchg addb xor inc add add add add add inc inc add pop inc add add jl inc add inc inc add pop inc add add movsb inc inc add inc inc add pop inc add add add add int3 inc inc add inc inc add pop inc add add hlt inc inc add inc inc add pop inc add add sbb inc add inc inc add pop inc add add inc inc inc add inc inc add pop inc add add insb inc inc add inc inc add pop inc add add xchg inc inc add inc inc add pop inc add add mov inc inc add pop inc add add in inc add inc inc add pop inc add add or inc add inc inc add pop inc add add xor inc add inc inc add pop inc add add pop inc inc add inc inc add pop inc add add test add inc inc add pop inc add add lods inc inc add inc inc add pop inc add add aam inc add inc inc add pop inc add add cld inc inc add inc inc add pop inc add add and inc add inc inc add pop inc add add dec inc inc add inc inc add pop inc add add je inc add inc inc add pop inc add add pushf inc inc add inc inc add pop inc add add les add inc inc add pop inc add add in inc inc add inc inc add pop inc add add adc inc add inc inc add pop inc add add cmp inc add inc inc add pop inc add add fs inc add inc inc add pop inc add add mov add inc inc add pop inc add add mov inc add inc inc add pop inc add add fmull add inc inc add pop inc add add add inc add inc inc add pop inc add add sub inc add inc inc add pop inc add add push dec inc add inc inc add pop inc add add add add jl inc add inc inc add pop inc add add movsb dec inc add inc inc add pop inc add add int3 dec inc add inc inc add pop inc add add hlt dec inc add inc inc add pop inc add add sbb inc add inc inc add pop inc add add inc dec inc add inc inc add pop inc add add insb dec inc add inc inc add pop inc add add xchg dec inc add inc inc add pop inc add add mov inc inc add pop inc add add in inc add inc inc add pop inc add add or inc add inc inc add pop inc add add xor inc add inc inc add pop inc add add pop dec inc add inc inc add pop inc add add test add inc inc add pop inc add add lods dec inc add inc inc add pop inc add add aam inc add inc inc add pop inc add add cld dec inc add inc inc add pop inc add add and inc add inc inc add pop inc add add dec dec inc add inc inc add pop inc add add je inc add inc inc add pop inc add add pushf dec inc add inc inc add pop inc add add les aam inc add pop inc add add in dec inc add inc inc add pop inc add add adc inc add inc inc add pop inc add add cmp inc add inc inc add pop inc add add fs inc add inc inc add pop inc add add mov add inc inc add pop inc add add mov inc add inc inc add pop inc add add fmull add inc inc add pop inc add add add inc add inc inc add pop inc add add sub inc add inc inc add pop inc add add push dec inc add inc inc add pop inc add add jl inc add inc inc add pop inc add add movsb dec inc add inc inc add pop inc add add int3 dec inc add inc inc add pop inc add add hlt dec inc add inc inc add pop inc add add sbb inc add inc inc add pop inc add add inc dec inc add inc inc add pop inc add add insb dec inc add inc inc add pop inc add add add add xchg dec inc add inc inc add pop inc add add mov inc inc add pop inc add add in inc add inc inc add pop inc add add or inc add inc inc add pop inc add add xor inc add inc inc add pop inc add add pop push inc add inc inc add pop inc add add test add inc inc add pop inc add add lods push inc add inc inc add pop inc add add aam inc add inc inc add pop inc add add cld push inc add inc inc add pop inc add add dec xor add movsb (bad) adc in pushf cli or push into xchg push clc lods rolb cmpsb popa lcall xor or stos add xchg movsl add add add add add je insl gs add insb outsl fs inc add add (bad) (bad) (bad) jmp add outsl fs add fisttpl add lds add xchg or add add add add add pop add gs xor or rolb add or add incl sbb add add add gs xor pop add or add add add add add pop add gs xor or mov pop or add add int3 xor push out xor xor test inc popf je push loope sub or dec cwtl cld or push (bad) mov cmp xor or stos add xchg inc fiaddl add or dec imul jae add popa imul gs add add inc add (bad) mov add jp push add add add add add add add add add adc add add inc mov add imul lock cmc cli mov push loope push ss jns inc cmp mov jno sbb adc add mov or out pop ficomp sbbb jecxz xor into or cmpsl add dec xor xchg mov and bnd push aad adc test pop popa in lods sbb jmp (bad) cmc lcall sbb (bad) fistpl push leave iret or pop popf push xchg cmp repz iret mov (bad) fs (bad) or mov cltd (bad) imul fwait and xchg mov aam cmp or push (bad) jle (bad) push sbb nop push pop push sub jge ret fwait cmp push pop and fdiv divl adc jo xor dec add and xchg insb in pop shrl iret pop sbb arpl std sahf imul stos into sub loopne pop addr16 js les bound roll out mov test lret jns imul mov test lcall sub hlt roll fidivr in and enter pop mov mov pop adc add (bad) xor leave mov mov mov sbb xchg aas push or xchg stos aaa int3 sub jb xor fidivrl sbb or lods mov jp jmp push adc jbe ret lahf pop int3 mov pop push (bad) xchg pop fldl lock icebp fidivl sti imul movsl mov dec xchg sahf fwait xchg jg stos cltd lret jge adc mov lods add outsb insl in push push loopne mov scas fild xor sarl js push notb pushf je in add add dec mov xlat mov into imul jo dec rorl (bad) push and cld lods outsl add cwtl repnz test hlt add std lret cmpl mov cmpsl pop test jne cmp in (bad) popf dec cmp in and jb pop mov dec or push lret call aas inc jge dec jecxz mov mov cld loop mov and ds pop sbb fwait (bad) in cmp push mov leave xchg int inc mov and ror stos or cmp iret xor dec enter fld es cmc cmpsb test mov lods in mov adc sub xchg or push flds sti or sbb xchg pop pop push in mov xor sahf inc pop das xchg sub sbb mov and aaa dec lcall call movsl ret out sbb sub dec pop add mov fsubrl xchg cs shll push (bad) xor add dec jae jmp mov inc pushf pop inc js into jl cmp insb jb lock sarb xor es push jp int jno sbbb push addr16 test (bad) push cmp or sub loopne dec ds call xor lea fs into push mov dec nop adc xor lret lea aaa ret scas std aad dec leavew popa dec push pop cmp xor stos xor shrl ss and shlb bound xchg push arpl mov fnsave adc or mov dec cltd mov (bad) (bad) imul xchg mov mov jo pop and dec mov outsl jecxz cmpsl mov aam inc sub jl gs or pop sub out ret mov xchg fisttpl cwtl dec xlat lret and push and roll jb lock idivb mov xchg es jp inc adcb out pop addr16 lods test adc or (bad) fsub mov sahf and sub into push movq test mov adc push mov addr16 aaa ret scas push aad pop leavew std dec push dec cmp popa xor stos xor sarl lcall pusha mov and add jb popa lret cli mov dec pop inc (bad) test inc and lock jno mov or pop rcrb add scas repnz mov fs daa cmp and sbb xchg fcomps (bad) mov or icebp adc sbb aam sahf xchg jecxz,pn int3 push (bad) je fild push pop and and divl mov xor (bad) movsb inc mov fisubrl pop aam adc pusha sub imul jle dec fldcw shrb loopne mov mov xchg inc push mov test cwtl (bad) mov aaa scas and jp jns xchg mov or xchg sub hlt pop test ds jg mov les (bad) mov sub pop mov jb adc rclb stc sub jecxz (bad) in xchg pusha or aad sbb cltd clc stos aas pop mov mov jae lcall les lods (bad) ret jg lahf mov xchg dec pop dec nop xchg movsb faddp sarl mov pop mov test dec cld imul mov dec (bad) loopne test (bad) jl ret arpl iret mov outsb mov pop bound mov lret xchg xor mov dec mov imul xlat sbb rclb cmp mov mov or add mov xor sbb add inc (bad) addl lds push mov sub (bad) lock roll push pop imul aad div push cmpsb stc mov sbb (bad) jo mov or stos jge push ret inc dec mov xor aaa fldl dec sbb xchg sbb mov imul inc dec sahf dec lds idivb xchg jnp aas dec fsubrl faddp pop adc movsb adc mov icebp mov pop push fwait (bad) out das jae sub test xor outsl fs out mov or inc jb pop cs gs ficompl scas fs lahf (bad) cmc inc sbb in rcr mov cmp (bad) les pop mov sar enter pop in addr16 fist push fabs test and cmp cmp pop sub inc mov pxor bound scas clc leave inc hlt jecxz lds lock imul aad div dec ds mov stc mov jbe adc add clc xchg (bad) cmp add out sub outsb inc sarl mov pop mov stos sbb fdivp scas fisttpl es nop iret jg rol push jg gs add dec rcrb fwait mov aad sub xchg cmp jecxz and adc mov stos scas jo or jmp xchg call add and xchg and mov adc loopne inc push stc lcall ss push xchg arpl daa xor popa or je shrb dec cld mov or cmp test out fcompl enter movsl dec imul xchg ljmp xchg js jmp test subl push push jns icebp pop lret out mov cmpsl out pop sbb rcr jl sbb sub mov mov fwait xor daa aas mov int ret xor adc jae mov clc cmp test out loop das cmp pop imul cmp hlt mov sbb add mov jb js inc mov xlat inc jne adc pop subl lods push mov dec jle cli xor and dec mov lods enter push add lret or push outsb icebp (bad) out add dec fadd sub stos rol dec jno mov std mov cld push push flds (bad) xor sbb sub cmpsb push sbb fild test (bad) in push jno popa insb dec daa ds mov mov jnp inc les loopne xor test jb mov mov sub push in test and sbb cmp xlat mov mov push js xchg vmwrite jecxz fwait sti xchg into loop int3 mov xorb test arpl jge movsb cmp sub push mov and jo push stos dec sbb insb out mov neg inc scas mov addb lret rcrb mov jb hlt pusha data16 in ljmp mov sub cmc shrl je rcr sti pop push mov insl dec xor add mov xor fstl jb ret jae ret pushf cmp add test jns jl xchg mov adc mov pop mov sub push inc jno lahf and mov bound pop push push test add std xchg push xchg push xchg (bad) jmp or shrb cld cmovae xchg xchg stos pop cmpsb mov pop cmp mov cld sbb push or push in sub popf xor and (bad) push and rcll movsl sub stos inc notl loopne aad xlat repz insb inc movsb jg outsl aaa adc or ja push adc dec dec mov shll out cmp jae cmp insl je mov jle cmc mov (bad) in mov out xchg hlt sub rcrb xchg enter or mov rorl ret cmp xor lea cmpsl (bad) scas push and lcall mov aam inc jp int3 lret ffree sub mov stos scas lods aad dec mov mov inc mov (bad) pushf fimull adc rcr jo (bad) push and cwtl pop popa pop lock add lret sbb xchg xchg jle dec sub loopw subb mov imul jae xchg xchg push xchg adc mov aas test insl push xchg sub sub test ds pop std lcall jnp out xor sarl or and in cmp bound aad movsl and sbb and pop push sub lret dec pop xchg imul and les xor test (bad) or jb dec pop mov mov sub hlt popf adc testb add add cmp xchg loope pop xor inc sub adc xchg cmp adc stos mov jg cltd data16 inc mov add in ja inc sub pusha mov dec loopne hlt adcb xchg xchg xor and mov pop out imul mulb mov pop repnz cli sub jb cltd fcoml lret (bad) (bad) or push cmc adc mov lahf mov xor fnop mov test lds outsl push mov sti ds fild inc cmp ret nop ljmp or sub inc fs out cmp lods scas in (bad) cmp jae leave sbb (bad) lods and push xor or or stc xchg shl popf cmp adc scas mov cld lahf icebp xchg repz stc rorl sbb ss mov sahf sbb mov lcall pop mov lret adc add or (bad) movsb ret out (bad) or mov iret aas pushf fdivrl mov lret lods adc sahf dec xchg xchg mov lcall sbb inc test jae (bad) mov mov mov pop les (bad) and sub incb into stos int mov lods popa out cmp cmp aad rolb adc add dec out mov stos mov sub cli xchg jno cltd jle sub sti fisubrl mov push inc lock pusha mov cld mov cs jecxz pop rcll movsb and mov movsl mov (bad) test ret mov adc bound jne (bad) jo xchg inc inc inc insl pop in mov jg je xchg xor jb in cmpsl push lods mov push dec push or xorl stc icebp mov pushf sub fdivl mov pop jl pop fwait inc cmp daa cwtl sbb xchg mov dec mov sti or cmp push mov and iret loop popa sbb add cmc test adc push pusha ret testl mov jmp xor jae sarb repnz cmovs (bad) jbe popf xor fsubr pop mov push push fistp imul mov lock cmp jge out pusha test les stos add imul sbb fiadd lods push (bad) in aas into and out mov add rcrl push dec lcall in clc aam lret hlt out aad int3 or pop aaa rcll fnstcw mov movsl das repnz cmp das aam inc nop and stc loop je sbb or lods mov mov add mov add out mov xlat xchg (bad) mov or es movsb dec mov stos mov fdivrs dec cs xorl cltd sbb jl hlt (bad) mov fist ja push and lahf insb (bad) or mov xchg repz (bad) fwait ret ret enter mov int3 mov pop rcrb sub xchg xchg imul (bad) aad lods mov (bad) popf sbb popl pop add int iret lcall addr16 faddl mulb mov nop cltd xchg sbbl lds js bndldx xchg push push fildl in fiaddl sub and add rclb lock arpl mov loope mov rolb push inc into pop sbb add jne mull in aaa mov shr sti lea les ret (bad) popa cmp dec xor add add lret mov pushf cmc inc cltd or xchg rorb (bad) cmp jl enter add dec adc out mov adc cs push cmp in jge adc mov fisttpl cld lods outsb repnz xchg mov add and xor lahf sahf sbb loope loopne sti sbb jae popa jne cmp fwait xchg fs jle or mov ss sbb or add sub or ds push cmp test out das fisub insl xor or xor push (bad) lds mov inc cli pop jecxz fmuls xchg (bad) push cmp cmp push into jp pop pop int3 push (bad) movsb repnz inc jg icebp cmp jbe aas sub test adcb dec lea add outsl adc ljmp mov rolb imul (bad) divl out fs call sub out clc lea cmp push lds cmp (bad) frstor pop jo jl cmp add and fcomps inc ss outsb sub test pop insl mov mov dec cmp and lcall ret test das mov int inc pop rcrl push xor sub mov arpl pop push pop (bad) sahf sbb nop push pop add mov rcrb aad orb add scas adc cltd xchg ds test (bad) xor js lret sbb xchg and push xchg inc stos in fildl mov test mov mov adc fcomi jb inc cmp pop or push jp repnz push dec movsb pop dec mov inc sub test jbe inc sub inc push movsl mov stc orl dec data16 xchg fsubrl sarl pop pusha and mov pushf cmc inc cltd or dec rorl (bad) cmp xchg adc and and out mov adc cs push not in jge ror mov fcmovne cld lods sub sbb (bad) xor mov adc sbb and bound repz fwait xchg gs cmp lcall xor jle lds mov or outsb cmpsb mov in mov or push inc jno fwait sub cwtl fs sbb pop lods arpl popf inc repz pop add stos adc rcr mov cmp aam jg mov and aas or test sbb cmpsl xchg fcomp test push sbb (bad) jmp push sub mov push out cld pusha xchg and iret scas cmp mov es test xor lods (bad) jne add (bad) dec cmp addr16 stc js insl adc cmp dec pop mov jl xchg add mov mov dec xor sbb inc xor scas es (bad) dec pushf push or mov test and dec fldt ffree mov lret pop adc nop lock mov or fnstenv sbb cli insb lock inc xchg sub cmc jne (bad) loopne and into fmulp adc and inc push clc cltd and in add jmp mov xor pop sub mov mov or jo (bad) je xor loope popa or scas xor mov ljmp int push fnstenv call test ret stos adc pushf dec push xchg mov cwtl mov mov in shrl add adc mov add (bad) lea insl inc out aad sarb popf mov test inc fimull movsl and iret inc push nop imul (bad) repz push gs jecxz testl mov xlat and outsb (bad) stos insb lock pop cmc das inc (bad) sub enter mov (bad) lret push xchg mov dec pop inc fcoml xchg lods xor jno jae or fcmovnbe sbb shrl cmpsl jmp fs jecxz mul push aad cmp fstps orl xlat ret icebp adc lods cmp in pop pop xchg sub (bad) mov jo scas xchg lahf addr16 and cmp cmpsl lcall and test imul sub sbb movsb insl jmp loopne loop (bad) daa in add ret push out adc jns (bad) mov and xchg jae lea mov mov leave fstpl add push gs push mov mov dec fistpll push xor lret ja inc cmp xchg and fs (bad) std cli adc push hlt pop les push idivl pop loope xor sbb popa das mov or add mov add mov or enter and lock push pop sbbl push repnz dec aaa repz sub mov cmp inc pop mov mov popf lds add inc fsts and cmp decb add fs add mov mov fstl xchg or aad aam out or push xchg jb cli cmp (bad) rcrl or and inc icebp cmc repz clc xor js jecxz and xchg push mov sti sbb mov push mov cmpsb test cmp dec xlat insb int3 jg ljmp gs ret dec dec mov subb jae in lock imul ja cwtl cmpsl dec in je xor or mov sub sbb jns jmp ss add cmp xlat cwtl push inc jo jecxz and outsl sub leave or cmp andb dec loope mov mov xor rorb xchg push xor sub xchg mov xor jl fstps rcrb popf or mov pop add jle out rcrl fdivs add dec and cltd mov lods xchg pushf test arpl stc movsb xchg enter mov addl stos sbb insb inc in lods push fisub test aas addr16 sub push pop jbe adc add in ljmp out xchg cmc and aaa rorb pop fimull cli cld push (bad) jns icebp stos insl push pushf inc scas ljmp shrb inc and xor or adc jae jmp mov out mov (bad) mov xchg dec rol and les mov cld push repnz xchg and dec jbe leave jne aas jl enter bound andb je aaa inc pop jecxz fcomp pushf dec cmp in pop sbb push mov jno lret jnp lret movsb inc mov push mov andl lea mov (bad) jae popa (bad) dec dec xor pop inc jns cmpsl sub ret xchg xor cmp pop mov sbb xchg or push (bad) hlt pop cltd pop mov lahf out jg icebp aam imul loopne mov test movsb add add int3 push std arpl test push add cmp and push xchg aam ret test add or mov cmp lea xchg sub clc enter mov mov push push cli sbb push aas sti mov xor mov and push and push pop and fisub frstor aad lret call adc mov nop inc add icebp mov jae mov jecxz cmpsb or hlt jne (bad) lods mov xchg cmc or lret (bad) das daa div adc bound mov leave jnp lods adc pushf loope xchg xchg mov cltd shrl mov in add xor negb add insl pushf mov pop cmp roll mov ja hlt cmpsl cmp mov mov push xor ljmp stos mov icebp mov or dec pop inc mov jne pushf xor xor mov adcl add (bad) (bad) andl (bad) js mov sub mov lret mov stos inc xor icebp daa pushf mov outsl out or xor push jo stos inc std test cld push lcall jno testb adc outsb hlt sbb pop dec cmpsb pusha dec mov incb fdivs inc call bound cli rol xchg dec addr16 fisubr push cmpsl jle stc xchg js mov pop popa fisttpll pusha popf testb lret mov dec mov enter ret int ret shll adc push movsb lahf mov pop push neg out jle ror jbe loope das cltd int3 mov add mov mov jecxz mov iret jp push sahf adc xlat loopne add lods pushf xchg pop cmp lds mov cmpsl and repz (bad) or mov push mov adc cltd fadds enter xchg xorl sub movsl push sbb pop in movsb mov test in push sub sbb mov and add jbe hlt dec pushf icebp add push sub call push sub imul popl cmp es cmp test push push orl sahf test pop push inc cmp test imul jne push jnp,pn pop mov repz mov add and daa (bad) jns mov jno inc push bound pop pop (bad) je arpl pop xchg stos xchg ret mov stos add mov jge inc xor mov mov push pop popf push insl cmp xor xor lock and lret (bad) pop adcl adc xchg add mov xchg int3 inc arpl rorb leave pop inc or ficom and faddl add or roll rep ljmpw push lock clc loope (bad) sub xchg xchg adc fstps dec repnz imul insb dec das out mov in aas and lds sub jne add stc mull adc popl xor jge out es outsb pop shll roll push sub imul stos lods movsl cmp push (bad) adcl nop addr16 jp imul (bad) jb push push ret dec xchg lcall hlt adc aaa and sub pop add mov fldt nop sub push push xor (bad) xor add dec jb ljmp inc js into jnp cmp jmp mov stos push outsl jns popf mov icebp lea call pop loope fucomp and mov mov (bad) pop mov mov pusha push lahf xchg in test add inc enter mov xor cld sbb leave xchg inc or iret das es out kandw mov movsl test mov cmpsl in dec loop lods sub mov aad dec push xchg jo test orl or pop insl push jmp add sahf aas and xchg (bad) cltd mov (bad) std imul ljmp mov mov jo pop and dec mov outsb loop cmpsb scas inc (bad) xor les xor sbb icebp out ret jmp mov mov add pusha loope inc mov sub iret std sbb mov and mov sub cmp jmp bound roll out mov xchg mov loopne (bad) xor stos jbe out mov mov inc pop in fcmovbe inc clc lcall jno cmp push into push jl hlt pop mov mov inc mov sbb pop jns pop cmpsl push sbb xchg xchg aas aaa or fimul jmp sub jb (bad) mov mov pop cmpsb movsb int inc scas and paddq notb rolb enter lods lret testl nop push pop push call jge jg cmp out daa push push fnstsw pop adc inc clc jge rcrb je addl mov imul sbb pushf mov test lods inc and jns sbb xor mov and out in xchg jb mov xlat mov mull outsl xchg cmp enter cld mov repnz mov hlt std dec fnstsw jbe aas cmp loop add jne cmp repz or sub (bad) add loopne jb pop inc or sub jnp movsb inc dec or lahf das mov lea mov (bad) jae (bad) (bad) pop inc dec adc stos push dec ss sub jg addr16 xor pop int3 pop fdiv push or push dec push pop cltd orb fdivp fidivl inc adc add popa pop jnp ds inc jmp push inc das fbld ljmp push adc mov adc adc jns cmpsb int and les mov xlat xchg xchg push pop cmp xor lahf xchg sbb jnp leave test bound adc test sti lcall cmc xchg neg movsl jb in loopne jno push stos or push sub mov movsb scas mov test lods sahf rorb and aad jae mov stc jae jmp mov out mov (bad) in sub inc outsl ss xor ret cmp jp sti or in hlt repnz mov out fisttpll jne aas fsts es add clc mov scas repz pop inc ret cli add sub (bad) mov (bad) pusha into call aaa push int sahf xchg faddp sub lods (bad) enter mov add (bad) pop pushf fildl (bad) jbe sbb jno adc push fsubrl icebp cmpsl rorl cmp push das pop pop out mov sbb les notl cmc imul ljmp jmp sbb popa pop arpl jle insb jg inc stc adc mov xor fsubs sub cmp mov daa pop or adc sbb cmp jmp js,pt insl adc jle pop mov imul sarb jecxz sub jge xchg inc lea inc and pop pop test data16 bound mov scas or cld mov or (bad) and mov or push lahf mov inc cs (bad) iret rclb nop adc sbbb and inc add scas add xor add imul adcl xchg dec pop mov sub xchg and dec subl or insb pusha mov cmpsl cwtl adc mov ret jmp rcll mov lret push push xlat (bad) icebp popa jp fwait cli or test lahf jl jno jae mov or lds mov cmp jnp cmpsb aaa (bad) aad sbb mov sub mov lret push in dec (bad) xchg push loop pop cmc fsub lods mov (bad) into aas les pop add leave dec push (bad) mov hlt divb call jb mov jl cmp adc nop dec pusha xor and orl pop sbb popf (bad) lock arpl mov lret mov iret dec (bad) (bad) aaa ja,pt data16 mov movsl ret int3 popa lock inc loope inc cmp mov (bad) xor prefetch or insb (bad) mov test out pop or inc sti in fisubrl inc lcall jae pop faddl push jo push jmp xor add mov sub loop cld jns pop dec add pushf add sub jno les aam and push outsl mov inc cmp mov xchg icebp xchg je in gs push xor dec leave xor dec jne in push mov mov sarl cmp sub imul mov jl mov jo pop sub add or imul mov neg inc lods mov jg (bad) mov mov mov sbb repz mul (bad) xor mov sub hlt shrl jae rcr cli pop push mov insb dec das aaa (bad) fstpt xor fcoml push sbbl add ret mov lods ss pop jnp xchg mov adc mov stos mov pop mov sub push and and sub xor push test adc mov ret cld xchg push xchg push xchg xchg out aad lret push shrl sti push inc sbb (bad) repnz cmp jbe popf nop push jle jp movl push adc loope dec jl cmpsl cmp (bad) cmp sub mov dec add or fucom lods mov into mov mov lret (bad) mov mov divl jmp jmp xor sub outsb hlt mov inc jae rcr aaa pop push sarb or aaa xor sbb mov (bad) icebp inc or mov rorb ret cmp xor and or add or inc adc sub inc jns int3 leave loope fadd sub mov test dec mov mov inc mov std (bad) adc fldl decb jno pop ljmp add and inc sbb xchg cs mov jp sbb pop ja cmp cmp orl das test and ljmp pop add scas ret notl fbstp xchg xor mov adc imul out adc push inc lahf pop inc jl sarb cmp insb pop cmp cmp mov dec cmc in mov in loop sub mov mov out lret adc les xor cmpsl int3 orl repnz pop mov xor mov je pushf cvtps2pi xchg imul add cmpsb cmp xchg loope pop xor inc sub inc sbb cmp adc stos mov jle cwtl and inc inc mov add jl inc in jbe inc andl add fadd pop push insb (bad) enter or jge (bad) sub loop subb lea mov xchg jmp inc add rcll insl mov test push dec sbb out pop jns cltd cmp shll sahf jp outsl jae fnop push jnp mov and jecxz push out jg and add cmp lods scas jmp cmp jb enter lods and cmpsl scas ja xor or or clc xchg iret loopne cmp adc sub mov sti sahf lock repnz clc rorb sbb xor movsb or sbb mov cltd pop fwait les cmp in test adc jne gs or std mov dec popa inc (bad) xchg dec daa xchg repz je mov rcrl add cmpsb out in push or inc stc sub jno cwtl fcompl lret or adc (bad) hlt adc mov dec mov sbb fcomps add and js jecxz pop das xchg outsl push pop add pop inc add ds nop fidiv dec sub jmp mov cmp mov xchg sub stc test jno cwtl jge sub fldenv mov push inc lock pop mov cld mov cs loop pop rclb mov data16 movsb mov jnp (bad) cmpsl mov imul adc fs jns je (bad) jo nop inc inc inc insb pop in mov jle jae xchg xor jb jecxz das xchg xor std movsl (bad) icebp decb aas or lds inc movsb push jmp mov xor (bad) push lcall pop outsl mov outsb sub dec mov cli or cmp dec mov and into loope popa sbb add hlt cmpsl pop adc mov ljmp xchg rorb xlat jae mov repnz sbb or inc mov pop ficompl jne popf xor fucomi push mov adc push adc and fdivl cmpsb add jl out pusha test ret mov stos add push in pop sbb fldl lods push (bad) in ds and in mov add dec cltd jno jmp in not mov int hlt out aad lret jno aam sahf cmp shrl gs xchg pop in loope jae pop call lret lods mov mov add lea add mov (bad) xchg mov xor and icebp jb mov dec sub jge push ret std mov cmp add xchg add and xlat sbb mov insb daa adc dec mov dec cmp xchg repnz (bad) fwait rorl mov mov int3 mov pop rcrb and call in fs stos mov (bad) pushf pop out popl pop xlat jp jb lcall data16 (bad) cmc gs inc nop cwtl xchg sbbb cmc mov ja nopl test push push fiaddl in fnstcw ljmp mov pop sub adc push bound scas stc loopne mov roll push inc int sbb mov inc jg lock outsl sbb sub adcl push clc orb (bad) xchg dec fs sub sub mov ret mov pop lret addr16 cwtl or es xchg iret lea dec imul (bad) jnp (bad) nop pmuludq dec shlb adc dec in mov adc sub jecxz jl adc mov and jo push sti lods insl repnz xchg mov add and xor dec mov js pusha loopne cli sbb jb popa je aaa in lcall inc daa xchg xor sub dec std add sub mov xchg or push out out fstpl insl xor or xor push (bad) les mov inc stc push loop fmuls xchg subl push into jns pop pop lret push mov sbb test test stos and pushf push push xchg sahf stos in fiaddl sub pop sub adc out mov xchg in addl push xor ret (bad) divl in arpl out mov mov shr clc mov les cmp ret fsubl pop jo jnp cmp fisub rcl sbb mov insl sub test pop insb mov mov dec cmp and cltd sub dec push rorl mov int3 outsb inc pop rcrb push xor and je mov bound pop push push (bad) popf pop lock pop xchg jp das iret lcall data16 fildl mov push mov nop cwtl xchg cmp pusha xchg xorl sbb test and pushf push sbb inc xor bound es ret push mov test sti jmp mov mov adc xor jb inc cmp pop or push jp repnz lret push dec movsb pop dec mov inc jg icebp xorl mov inc adc orb (bad) xchg dec gs fsubrl call mov pop pop and mov fwait hlt inc cltd or dec rorb (bad) cmp cmp enter add dec adc out mov adc sub in jl iret int3 mov loopne sub sub sbb fidiv dec mov js sbb adc popa je repz lcall inc sub push ss sbb push sub xchg orl loop movsl mov in mov or push inc jo fwait sub lret xchg arpl push lods bound inc repz pop add stos pminsw fldenv aaa loope ret mov and ds test movsl pop jmp (bad) fstl xchg xlat fbld popa call addr16 mov pop sub mov push in sti pusha xchg and sub lods cmp xchg and xor iret je add sbb cmp dec cmp mov movsb data16 sub adc cmp dec push mov jnp xchg add mov mov dec xor pop inc xor scas and imul lea jg dec lock cmp fs adc mov dec jecxz testb aaa push mov or fdivs or stc imul inc xchg sub jne std fistp and into (bad) movhps pop inc push negl mov xor add movsl enter bound cmp insl push push push insl imul insl imul imul insl imul insl push insl imul insl push insl push insl imul insl push insl imul insl push insl imul outsl insl outsl insl push insl push insl push insl imul insl push insl outsb insl imul insl imul imul push insl imul insl push insl outsb insl push insl push insl imul insl imul insl push imul insl imul insl outsl insl push imul insl imul outsb insl push insl push insl imul imul push outsb insl push insl imul push insl outsb insl push insl push insl outsl insl push insl outsb insl push insl push insl outsl insl push insl outsb insl push push insl outsb insl outsl insl push insl outsb insl outsl insl push insl push outsb insl push insl outsb insl push insl imul imul insl push insl outsb insl push insl outsl insl push insl push insl push insl push push insl imul push insl push insl outsl insl outsb insl push imul imul imul insl imul insl push imul push push insl push insl push insl push insl outsl insl push insl push insl outsb insl imul push insl push insl outsb insl outsl insl push insl imul insl imul imul push insl push insl outsb insl outsl insl push insl push insl push insl push insl push insl push insl imul insl outsb insl outsl insl push insl imul outsb insl imul insl imul outsb insl push insl push insl imul insl imul insl imul insl outsl insl push insl outsb insl outsb insl push insl push insl imul push push insl imul push insl outsb insl outsb insl imul insl push insl push insl push push push insl push insl push imul push insl push insl push insl push insl push insl push insl push insl push insl push insl outsb insl imul insl imul insl outsl insl push push insl push insl outsl insl push push insl push insl push insl imul push insl outsl insl push insl outsb insl push insl imul insl push push insl push insl outsl insl push push insl imul insl push insl push insl push insl push insl outsl insl imul push insl push insl push insl push push imul push insl push insl imul insl push push push insl imul insl outsb insl outsb insl push insl imul insl imul insl push insl push push outsl insl push insl imul insl outsb insl push insl push insl push insl push insl push insl imul push insl imul push outsb insl outsb insl push push push insl push imul imul push insl push insl push insl push insl imul insl outsb insl outsb insl push insl push insl push insl push insl push insl imul push insl imul push insl imul push insl push insl outsb insl outsb insl push insl imul push insl push insl push insl imul push insl push insl imul push insl push insl push insl push imul imul insl imul insl outsl insl outsb insl push push insl push insl push insl push push insl push insl push imul insl push insl push push insl push insl imul insl push push insl imul push push push insl push insl push insl push insl push insl push push insl push insl push insl push insl outsb insl push insl push push outsb insl outsb insl push insl imul imul insl push insl push insl push insl imul insl imul insl outsl insl imul imul push insl imul outsb insl imul insl imul push insl imul insl imul insl push insl push insl outsl insl imul insl outsb insl push insl imul insl push imul push insl push insl push push insl push imul insl push insl imul insl push insl imul insl imul imul push insl push insl push insl outsb insl imul outsl insl imul outsb insl push insl push push insl imul insl push insl push insl outsl insl push push insl outsb insl push insl imul insl push insl imul push insl outsl insl push insl push insl push insl imul insl push insl imul insl outsl insl push push insl imul outsb insl outsl insl outsl insl outsb insl push insl push insl imul insl outsb insl push insl push insl imul insl outsl insl push insl push outsl insl push insl outsl insl push imul insl outsb insl push insl outsb insl push insl outsl insl push insl push insl push insl imul push insl push insl push insl push outsb insl imul insl push insl imul imul outsl insl outsl insl outsl insl push insl imul insl outsb insl outsb insl push insl outsl insl push insl outsb insl push insl outsb insl imul push insl outsb insl push insl push insl outsl insl push insl push push insl push insl outsb insl outsb insl push insl imul push insl push insl push insl push insl push insl outsl insl outsb insl push insl push insl push insl push insl push insl push insl imul imul insl imul insl push insl push insl push insl imul push push insl push outsl insl push push insl imul push insl imul imul insl push insl outsl insl push insl push insl push insl push insl push insl push outsb insl push insl outsb insl imul insl push insl push insl push push imul insl imul outsl insl push insl push insl push insl push insl imul insl outsl insl push insl push insl imul outsb insl outsb insl outsl insl imul insl push insl imul insl outsb insl push insl push insl imul insl outsl insl push push outsl insl imul push insl imul insl push insl imul push push insl push insl push imul insl push outsb insl imul insl push imul push push insl push insl push insl push insl push insl imul insl outsb insl outsb insl push insl push insl push insl push insl imul imul insl imul push insl push push insl outsl insl push insl imul insl push insl push insl push insl outsl insl push insl push insl imul push insl push insl imul outsl insl outsl insl push insl push insl push insl imul insl push insl imul insl imul insl push insl imul outsb insl push insl push insl push insl outsb insl push insl push insl imul insl outsl insl push insl push outsl insl push insl outsl insl push imul insl push insl push insl outsl insl push insl push insl push insl imul outsb insl push insl push insl push outsb insl imul push push insl push insl imul imul outsl insl outsl insl outsl insl push insl imul insl outsb insl push insl push insl outsb insl push outsl insl imul push insl outsb insl push insl push insl outsl insl push insl push push insl push insl outsb insl imul imul outsl insl push insl outsb insl push insl push insl push insl outsb insl push insl push insl push insl push insl outsb insl push insl imul imul insl imul insl imul insl push insl push insl push push insl outsl insl push insl push insl push insl push insl push insl push insl push insl imul push insl push insl imul push insl push push insl outsb insl push outsb insl imul insl push insl push insl push insl push insl imul outsl insl push outsb insl imul insl push outsb insl push insl push insl imul insl outsb insl push insl outsb insl push push insl imul insl outsl insl push insl push insl imul push insl outsb insl push insl push insl push outsl insl push insl push push insl outsl insl push insl imul insl push insl push insl push insl outsl insl push insl push insl push push insl imul push imul imul insl imul push insl outsl insl push insl push imul insl push insl push insl push insl push insl outsl insl push insl push insl push insl push push insl push insl push insl imul imul insl imul (bad) popf mov or stos out fnsave lret (bad) icebp iret cmp ja or ret movsl push popa int arpl cltd loope push xorl loopne sysret pop aad (bad) insb sub (bad) or icebp sarl js std or sti dec mov push scas clc popa fsubrs mov ds imul insb leave cmp cmpsb icebp push jae push jp add mov cmp add movsb lods sbb subb jmp jno flds sub inc mov shrl ficom lret xchg repnz (bad) push and lret cltd addr16 (bad) push in jecxz push mov pop sahf sarl cmp in sub pusha jle push scas mov (bad) cmp inc xlat xor aaa shrl bound mov mov (bad) hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov out and lret lea cmp ja or ret movsl push popa int arpl cltd loope push xorl loopne sysret pop aad (bad) insb lods test or out imul ficompl lcall enter adc push inc mov xchg jo xchg ljmp jns and pop pusha pop jo jo lds sub inc stos cs xchg subb jmp jno fldenv aad lods cs inc shll test lret xchg repnz (bad) push fs (bad) popf sbb or stos scas and mov ret inc or ret in icebp popa xchg dec xchg cwtl loope push xorl mov aad (bad) insb lods test or out imul xchg pusha mov mov aaa and aad mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov idivl inc pop sub pop pop sub pushf or jle xchg (bad) xor xchg std lea cmp out mov test cmp repnz and dec mov inc idivl and lods pop ds mov push ja scas cmp aam sbb insl lcall aas popa cwtl add stc sub mov (bad) jb mov mov and jle stos imul (bad) dec insb cli add movsb int3 (bad) sub iret adc dec mov pusha and loop cmp cmpsb or xor ret adc cld ja js add mov int arpl fcompl adc pop daa sbb clc push dec mov testb roll lods lret rclb mov ret test scas adc xchg inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cmpsl (bad) clc add mov jno xor xchg mov add adc cmpsb cmp aad add into aas nop inc aam sahf sti mov rorl out adc lea insb sub in dec (bad) lods dec fisubrl add cmp mov pop add pusha stos out and and jmp or popf fwait adc mov adc sub xchg or inc insb idivb lret sbb ljmp in inc jae aad xchg and xor pop fstl sbb mov jno loope (bad) xor popa mov sbb add rolb cmp int3 and dec popa test leave lcall mov into jnp dec ds mov outsl hlt fdivr inc jp sub xchg xor mov hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc movd adc es cltd addr16 mov pop add push pop bound lret mov ljmp scas sub add in jmp cs das push add test rcrb cmpsb inc mov xchg and pop and pop daa fsubp lret jb dec inc add add dec push fxch inc arpl pop jmp int lcall hlt jge fsubrl (bad) push lods push (bad) add jle dec jo sub pop mov lods es lock pushf enter leave pop movsb mov pushf push mov mov pop mov xchg add jle inc jns xor cld push mov fs std daa xlat lds dec sti adc out add xor mov out push pop cmp (bad) cmp xor push xchg xor cmp fild pop jbe xor out sbb fildl hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov jge inc dec fnsave xor mov cmp and sti cmp cltd xchg inc lods hlt mov lret push rorl lds aad pop subb or (bad) add cmpsb nop hlt test and (bad) or mov iret push push and ds mov xchg mov (bad) push or dec test imul push cwtl jne fadds mov into or sub cmpsb xchg stos jmp sub jno push mov sub fldenv cmovbe inc ds mov sqrtps push push ss in je hlt adc addr16 repz mov mov sbb aad jecxz push jle push sahf or dec lret dec ljmp add adc roll test mov xchg enter mov jle sub sub mov enter lds jge inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc iret cmp hlt div (bad) mov aam aas add outsl dec add sbb mov push xchg js mov cmpb out push push js jo popa mov and fisub (bad) pusha sub aaa push push rcrl sbb lahf lret xchg pushf jne jno push jmp repz loopne add clc (bad) stc loopne cmp inc sbb sbb mov mov pop or cmp and mov fsubs xchg push sub into popf dec sub lcall push lds sbb outsb mov mov dec cmp std xchg push ds jle xchg xlat add fucom test pop cmpb xchg fnstcw aad jo imul cmpsl adc out jno,pn add les cs inc scas mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov jl ret popa ficomp and push mov jns pop mov and icebp push cmp cli pop pop sti dec stos arpl jge pop gs mov scas push mov mov pop ds lea jl mov sub xchg jg ljmp stos xchg gs and or scas dec js push adc imul js lea mov jge sbbb sub or xchg enter dec xor push sbb pop inc mov lock (bad) sub bound movsl dec stc popl or dec loopne mov add into xchg stc pushf addr16 jle pop outsb xchg push pop into subb (bad) ja (bad) repz sti inc jae pop sub jb pop pop or cld mov roll mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov jmp fdivrl or repz loopne or dec pop push insl dec dec inc fbld xchg cmpsb mov rorl imul popl pop aas jl dec aaa sti ror aam push xchg sbb xchg cmp fwait sbb sbbl cmp jg ljmp cmovno (bad) mov (bad) nop test lret lods xchg cmc lock fcoms test dec out xchg roll jg sbb int3 xchg call or pop fstl xchg pop pushf pop sub pushf or scas ret pop cltd push push mov pushf loop mov das pusha xlat in pop insl mov push leave cmp daa xchg jmp pop lods jo sub rcr (bad) xor outsb pop mov xadd mov xor cwtl (bad) insb or cmp xchg mov nop cltd gs mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov xchg adc mov and or mov fistp hlt int cmp adc std movsb fild push aad push dec clc (bad) cmp movsb inc xlat lods adcb ret cmp mov sbbl xchg jne cmpsl ds out daa ficomp lret mov stc jg mov pop cmp push call jbe or in rorb loope mov or xchg fsts std out imul sbb sub mov sbb xor or cwtl mov xchg adc sarl lahf cmpsl push cmp push push adc ror or cmp adc pop (bad) lods push pop aad daa ret test mov (bad) imul jns insl (bad) bound jge (bad) int out sbb imul hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc inc popa push xor jnp add add mov push dec jae sub pop fld das iret popf add mov cmp lods dec mov jbe inc mov lret push shl push xlat xor sub test pop aas and mov pop mov (bad) adc mov adc fadds test das adc mov and ja inc leave xchg pusha xchg jns sahf out mov adc cs mov dec call cmp bound (bad) cmpsl in xchg popa inc mov jo pop cmp (bad) sub push add (bad) mov xor addr16 rcll sub addb cmc sub aaa mov je lea mov nop scas mov test iret sarl jb pop popa adc jo in mov jecxz pop daa stos mov mov sub xor inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov dec sub xlat mov cmc jae aam lcall add cmp aaa loopne dec xor es or pop add lods pop mov dec push jbe dec fs dec repnz testl out mov ljmp jns fdiv test lahf (bad) xor adc xor jno sbb inc mov adc xor adc mov xchg scas sub mov (bad) test and pushf xchg repnz sbb data16 xchg int bound fwait push and imull inc or mov je das mov pop pop cltd xor cmpsb or les imul jns clc push dec mov imul int dec cli mov add (bad) fbstp shr les aam mov jecxz (bad) movd aad pop inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov dec ret push stos add push jbe aad push push fmul cmc adc (bad) lods inc stos ss mov mov adc adc and gs stos (bad) lret adc test dec ja and lods lds mov sbb xchg xchg adc mov in fwait popf and push in mov popa cs mov in jl addl call (bad) jae adc push int pop xchg enter cmp pushf jp iret test mov jp pop sar pop jge push lcall les repnz pop add sahf mov pushw rclb xchg repnz dec (bad) push or insb pop popl xor bound (bad) stos xchg enter dec test repnz sarb xchg jo jecxz ficompl add mov cmp mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc inc test sti scas clc add dec inc cli xchg (bad) mov cmc xlat test jno mov cmp sub mov pop ds insb jle sub fidivrl jno adc xchg arpl pop mov xor pop insl xor mov xor mov cmp pop setle mov sbb mov punpckhbw out mov dec sub outsl repz adc cmp arpl sub push outsb mov fcomps mov pop lds pop xchg jo cltd imul jns and fsubrl stos clc add iret or out lods adc xchg mov sbb (bad) rcll mov pop sub jo pop mov mov fwait jbe sbb dec lods jns je fcompl inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc push sbb fimull pop subw push ret movsl ljmp push movsl pusha fs cli js jae sar fldt and outsb enter mov icebp sahf insl fdivrs cmpsb xor xchg fcom and mov addr16 fnsave jbe add fimul sahf xor stos lea add nop sub mov jno aad inc inc pop pop neg push lods push (bad) sbb cli dec pop xchg or mov movsl dec cwtl fsubrl gs fstl subl sbb push dec mov sbb cmpsb mov fsubp call sub out xor pop hlt xor cmp fwait xchg jmp loope aad lods movsl popa ret (bad) outsb nop add add push xchg ss jg cltd fwait mov bound out jae scas or ffree or ret inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov and sbb std mov arpl inc mov xlat std or loope pop or (bad) fidivrl inc xor or gs out inc and or adc lock adc out daa dec int mov mov jne lcall push inc or pop mov pop jo fsubl mov movsl xchg mov cli xchg lcall jg popa mov fs and cmp outsl xor iret push sbb or push xchg xor cmp aad push jne mov adc mov cli sbb test push cmp in aad sbb xor adc mov pop add iret arpl sub addr16 cli mov push pop xchg jb (bad) cmp in test enter out movsl push rorl ret xor je adc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov es loopne lea fimul dec cmp aam sbb nop js imul mov mov iret or (bad) mov inc call inc sbb jbe lock mov gs fcompl jmp pop stos mov xchg jo dec (bad) repnz test dec pusha and pop cmp adc push arpl into add cmp mov sub insb sub ss aad push jle shrl pop mov xchg repnz push out xchg mov popa jb push lock add mov int dec cmp lahf inc mov aas std scas push adc mov add mov and cmpsl leave jl mov hlt (bad) cmp or test add in dec mov lcall mov adc or adc sarb mov pop cli pop cmpl inc inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov leave xchg mov mov pop xchg or mov xchg cmp inc bound ret das pop jmp jno (bad) rorb mov gs loop mov (bad) in xchg aas imul fist stc cmp jno sbb adcl addr16 jne les ja sbb cmc add sub sahf inc jne in icebp outsl push aam inc xchg push pop outsb nop cli incb scas sub (bad) pop fbld mov sbbl add pop shll scas and mov cmp push xchg jl das add inc mov int arpl sbb mov arpl loopne int loopne je lods jmp (bad) or out imul cmpsb mov aaa pushf and popa ja out mov mov adc (bad) xor xor subl scas dec into xor lahf cmc push jmp mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov fadds stc dec pop scas mov (bad) dec stos ss xchg ljmp pop pushf sub cltd test mov xchg push xor fmull fmul aam push std lahf cmc subl imul mov dec jle push adc or cmp bnd das cmp lods sbb xor gs push xorl or lock dec mov push inc jmp lea jae dec pop mov push test leave rcr inc adc push adc jle mov scas popa std push xchg adc jns inc adc mov cmpsl and push std mov loop cmp inc pop mov jg lods lahf scas repnz xchg jle lret push xchg pop xchg inc jle subl sub insl xchg xchg lea shrb mov pcmpgtw mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov insl adcl xchg cwtl sub xchg inc andb into inc adc jo add cmp cmp stos js sub push (bad) cmp jp jg pop inc mov pop push out push push xchg xor mov rcll or jbe adc sahf and repz out pop xlat sahf adc imul loopne dec arpl punpckhwd push or mov jno xchg pop loop and pop call push jne pop jno or jb xchg xor sub imul push inc mov subl xor fwait push loope mov sar rcl stos dec mov xchg lods out inc sar and (bad) and negl jge call bound dec pushf sub mov dec xor lahf stc aad ret inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov aas test enter pushw fnstcw xchg imul psllq out inc or sbb call mov add gs inc shl xchg push xor cmp imul pop jno loope shll mov fnsave test lods push jle mov scas jp add xlat ds in aam out add mov sub sub push cmpsl and pop shrl xchg adc and call push and cmp push js dec mov cmp add imull movsb adcb lock lock mov xchg mov imulb scas adc mov test fwait cli mov fcmovu lret out nop negl pop dec clc xor daa push fidivl mov jnp in jbe add test enter push inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov adc or jbe fnstsw inc loopne iret jae adc shrb popf or mov inc jecxz sub xor sbb imul mov push add ss or test lods int3 xchg and or je mov sbb insl dec dec inc jl outsb jg sbb adc xchg adc mov and cs ds xor fwait sbb outsb mov stc divl shll test ret push mov je inc xor outsl jno int jp fidivl xchg push cmpl call adc (bad) or mov ljmp mov jae mov pop in dec repnz sahf test repz adc add dec mov into mov hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cmp mov inc cli mov add shrl mov mov mov aad nop data16 dec add pop test ror adc and mov int3 leave sub in adc and cbtw mov dec mov ja pop push jmp ret mov insl and lods cltd inc cs dec lret icebp xchg (bad) pop stc xchg inc add movsb inc cmp jg inc imul cmp inc rcrb cmpsb in dec jno icebp insl jnp scas or sbb frstor in inc cld push andl inc inc in in insb mov insl and outsl and cmp lret pop out cmp ss call xchg jecxz (bad) dec ss shll xor dec fildl stos pop int3 jecxz mov stos inc mov cli stos cmc lods mov loope cmpl hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc sub mov push lods loope adc xlat or cmpsb popa call out cmpsl inc inc (bad) jle movsl dec outsl call xchg ret mov inc sub xor outsb cmp xor sub loopne sub cmp stc cs or ret scas lret (bad) sbb push xorl (bad) jb dec dec call pop inc sbb fisubrl sbb jo ret sub mov push lahf lcall and xchg adc nop aaa nop loop pusha mov xor jl jp (bad) dec xor cwtl add add mov fsubrp pop cld inc stos rclb xchg adc sbb push imulb adc rcll pop repnz aam xchg jg adc xchg repz ret iret push mov jne mov push inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov (bad) push jbe ret mov out sbb or jae cmc incb lret cmp mov inc dec inc add cmpsb rol negl int lcall fnstsw jae xor pushf sbb dec repnz mov add cld popa or lock loopne add push dec arpl sub add cmpsb sbb andl dec pop mov inc xor sbb or jl jecxz pop mov dec mov iret les cmp and insl imul into mov jmp pop (bad) loopne pop aad xchg sub inc cmp mov jg pop ljmp or sbb (bad) and insl mov or add xor cmp loop ss add outsb xor imul inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc ret pop mov rcrl fisttpll mov loopne mov (bad) cmc decl lods or cwtl add pop cwtl xchg fwait outsb jo std out pop and fcompl aam bound test test push or lret test push test cmpsl add rorl mov xchg dec dec in add inc and outsb cmc shl jmp mov sub lds leave lcall leave lods mov outsl (bad) cmp lahf xchg js out insl sub inc xor lea push cmp mov mov inc xor mov cmp adc rcll mov fdivrs sub sub lret clc pop jp ljmp dec cmp (bad) xchg es push movsl dec stc lahf xchg in jge dec rol shr jb ret push and in call fldcw inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cmpsl xor pop pop xor je cwtl lods test or xor cltd pop sbb dec cmp aad outsb or push add sub fsubrl sub cmp and movsl out sbb xor aas into or xlat leave inc stos ss jp in sub jmp (bad) les mov (bad) xor call lret xchg imul push sbb xchg cmpsb push popf sbb fdivr fs xor jnp es lahf sub das cmp add mov mov mov sub popf add jb (bad) jae movsl outsb mov imul pop sbb mov dec mov outsl or and mov or int lahf cli daa bound ss push lahf sub xlat std xchg inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov dec mov out add stc ficomp jg inc xor rclb int3 pop andb inc push jmp stc xchg mov je hlt cltd fwait mov arpl pushf mov cwtl add and or mov insb stos push xor cmpsl into xor lea mov push in popa outsl add xchg mov stos xchg fisubrl out or (bad) rclb inc loopne cmpsl dec stc lock cmc es lret push or mov add mov call inc fnstcw jecxz std aam push repz inc test push pushf fs pop lahf sti (bad) mov lds fsubr cli push aaa icebp scas stos push pop clc xchg rolb pushf int insb push popf xchg aad icebp sub insl mov mov mov sub mov imull hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov or out pop or loope xchg repnz lahf add xchg mov or mov lret aam xchg test gs push hlt cli push cmpsl lock and out loope jo dec iret cmp ja or sahf out popf lahf jl and mov jle adc fstpl mov mov push ja aas stc and push jg inc hlt (bad) mov jg test pushf or dec inc mov pop test stc pop xchg jo xchg (bad) repnz xchg dec sub xchg outsl cmc xchg or sbb stc inc lcall incb push ss xchg andb mov scas pop sub (bad) jo jmp mov psubq mov stos inc mov sbb xchg je xchg xor and in pop popa movsb addb mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cld mov inc and loopne cmpsb in jmp (bad) sar or rcrb iret mov push enter imul ss jb lock cld xor fnsave xor mov hlt scas ret mov ret adc or int3 push psubsw mov jbe inc xchg mov dec pop aad mov inc push out imul adc jecxz push mov ret sbb adc fisttpll xor (bad) pop fiaddl push xchg xchg pop pop mov inc add int3 inc imul (bad) mov jle xchg mov fwait cmp outsb xchg rol ja test xor int3 out popa lods push lock popf sbb xor pop neg stos out and dec mov ret shrl je das (bad) sbb cmpsl mov ljmpw mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cwtl sub pusha pusha ja outsl or pop loopne sub mull out imul or es gs jnp or fsubl clc pop xchg jnp loop int mov ret popa mov cwtl mov stc (bad) roll cli push inc movsl movsl mov insl loopne add pop flds sub lods pop imul jae test xor into out xchg sbb lret data16 jecxz aam jns popa addl scas es mov adc push push pop nop cli mov decl shrb cltd shr rclb fbld mov sti lock ljmp lock or ficompl xchg mov add test inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc pop aaa mov je insl (bad) in nop into push ljmp push sbb cli jmp pop shr je cwtl in ret test add mov pop add jge sti nop into imul push or imul iret xlat ds aam mov adc cmpsb sti and mov nop cmp arpl or or nop xor popf dec lret psllw fsubrl cs sbb mov (bad) pop cmp cli pop add repnz lds mov jns popa sbb mov or adc shrb push cmp int xchg insb hlt imul xorb daa lea dec ds mov push cwtl fistl aaa pop sar pop push (bad) shlb mov movsl pop cli outsb mov shrb dec imul call inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc push mov lahf sub lods push jb lds daa xlat push mov cs stos aas mov jae or ja jns aad dec xchg push test push adc push xchg loope pop fimull mov mov int jno ljmp push fs mov pop or push mov pop es enter shlb dec std jle jle fisubl mov cmp fildll je aaa push (bad) dec repnz in xchg sub mov jno sbb mov adc in fiadd xor (bad) push (bad) jns xchg lahf push aam and in nop pusha loopne adc mov fldl ja call (bad) pop adc je push out xor jne adc adc pop (bad) jno and jg cli cwtl rcll mov sbb fimul inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc movsl (bad) mov xlat addr16 aad push push or and push sbb cmp jecxz sub aad out bound and dec sbb sub sbb adc mov aad test mov xchg fs fwait jl mov cmp in xchg ss int add pop dec in (bad) push (bad) repz lock cmc cmp push arpl jne jmp pop cmp pop jno hlt cmp pop xchg sub adc scas adc arpl dec and cs xchg sbb sbb mov sub gs sub jg adc ds sub push sbb push jp test movsb fmull mov sub pmaxsw xchg sar jnp jp pop bound dec lods ficomp test or test rol sarl scas xor and hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov jns icebp loope lcall push sub cs cwtl inc test (bad) lcall lods fldenv add icebp jmp (bad) inc dec mov test shll mov push roll cs cwtl (bad) mov pop cmp (bad) out jmp repz xchg pop mov hlt inc cmp test mov iret mov mov (bad) int3 or pop add packsswb pop rolb mov pop enter xchg inc sub cmpsb enter in lods call dec test sbb ja add or xchg js lahf lds movsw lahf je jl jecxz (bad) pop test stc fst lods sbb sub xchg loopne jp mov les bound push mov cmp popf mov add jbe jl adc inc xlat mov dec sub fdivp push inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc sub dec pop lock ljmp (bad) push subb mov out push daa mov (bad) outsb push mov lcall outsl inc movsb sbb jns push in das mov inc stos lret movsl push mov mov test inc imul and jle mov loopne hlt adc jne movl data16 push mov xchg pop repnz in (bad) mov cmp std adcb scas fiaddl mov popa push mov push inc jp mov pop adc in cmpl sub fsubs adc add sbb mov xor sarl or jle (bad) pop imul push in (bad) xor int (bad) and lret adc cmpsb cmp sahf xor sbb or (bad) mov cs and add sub hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc xchg push fwait or in fstl pop mov decl pop sbb rcrl dec repnz and and or fisubr xchg mov pop pushf fwait add (bad) jl jns cli outsl cmp add push xchg dec sbb (bad) jp jecxz xchg jns xchg fcoms cld bswap test jb cs adc pop ds sbb js dec in stos mov (bad) repz movsb jb or out rorl pop add cwtl adc pop (bad) jae pushf push jge sahf or jl add sahf (bad) mov insb iret push add lret fbstp and iret mov loopne dec in cmpsl push (bad) repnz lock cmp popa fbstp and out mov nop gs xchg ds push sub push xchg stos xor loope (bad) int3 mov jge arpl stos imul mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov and mov and movsb mov push in cld lahf fs xor (bad) xor sbb inc pop (bad) (bad) mov pushf inc stc or in xchg mov (bad) (bad) cmc (bad) icebp roll scas fsubs (bad) sub mov dec xchg lret movsb mov testl fstpt or push pop jle pop mov adc out and jne mov aas mov adcl push mov or mov dec cltd jne adc mov mov sub fdivr mov stos mov fisubl arpl ret pop dec jg push push notb lret xor pushf pop mov jmp imul sbb shll mov adc sahf lcall mov inc stos jno adc inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc push sbb mov fwait loop shll psubsb aam xchg xchg cmpsl (bad) movsl push nop ljmp cs fadd sti fnstsw jl sub mov into (bad) int3 dec popa pop mov jle adc cmpsb mov (bad) ja pop aad push arpl repz sub movsb cld add pop movsl push fbstp pop cmp popf pop push add iret repz addr16 insb lcall arpl push mov mov jb jp jle mov mov add or insl adc pop pop cwtl fs sbb rcrb sar sbb jg sbb push adc outsb loopne icebp jb jnp mov add notl cmp adc ds cmpsb pop pop (bad) ret sub or sahf stos push pop fwait jns vhsubpd inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cmp xor xchg pop fs xchg xor fdivs icebp sahf or (bad) inc pop pop push sub jnp arpl (bad) xor xor test aaa and xchg aas xchg shlb add insb or hlt pusha sub xchg sbb dec call mov or mov adc adc mov lret fcom test mul xchg cmpsb popf hlt and jmp lock fild xlat push iret (bad) xchg cltd mov pop (bad) cld mov dec inc dec mov add jmp dec lods test sub pusha xor fsubs rclb movsb jg das mov outsl push (bad) cwtl push aam adc in movsb xchg sbb test popf sbb daa push adc fiadd inc pop ss je das sub mov cmpsl roll lret sbb loop,pn fs pop inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov aad cs fldcw add pop sbb mov add mov jne dec mov xchg sti sbb (bad) add mov push (bad) xchg or roll push mov nop ror or pop sbb fstpt fldenv sub jge push insl dec mov mov mov (bad) cltd xor loop xchg mov insb gs or add jl in jecxz cmp orl aam daa sub mov and hlt addr16 orl lods or mov cmp in test int adc lea push adc int lea mov jbe or dec and push sahf xor insb into cmpsb jg addr16 rcrb cmc rcrl clc dec mov test mov adc hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov sbb imull pop inc lret fistpl lcall and lahf and mov call sbb jbe adc fdiv test lahf push mov push int3 stc xchg stc and jp push pop out lods pushf std dec xchg add xor loope cmp xlat sahf lods movsl xor pop aad leave shlb (bad) rcll shrl sbb jge push and les and test lret andl int push movsl dec stc jnp cltd inc and sarl mov mov xchg sub fisttpl and dec and in dec push into (bad) insb movsb test jg push imul mov ja dec js xor pop adc aad lret pop jge sub add dec xchg inc adc movsl lahf cmpsl and jmp cmp xchg dec inc jmp pop hlt pusha sub push inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc sbb or das ljmp hlt ds rorl jg and repnz mov loope call into ret pcmpgtw mov iret test lret xchg fdivl ss fcompl xlat outsb mov (bad) insl pop jl (bad) adc xorl inc aas mov shr mov sub mov pusha fcoms and mov xchg inc cwtl inc mov lret xchg (bad) icebp popa xor xchg cmpsl rorb outsl orl mov loopne jp (bad) (bad) dec sub call cltd pop or mov lret popa mov mov add aaa test xchg pop dec sbb ja fstpl ja xchg leave ljmp push rorl std adc popf push aad fwait adc pusha sbb bswap les jmp shll inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc repnz fwait cmpsl mov fsubrl and xchg mov sbb xchg test (bad) into adc mov pop pusha jne scas and adcl rol dec cld xchg arpl negl cltd lret (bad) dec cwtl jg cmp pop pop or mov scas cmpsl loope xor or mov hlt faddl jno outsb dec or in notb mov jecxz mov push in xchg push and in lahf push mov push int3 cmpsb idivb cmp jecxz dec mov insl dec dec push inc mov sub les js movsl ja aam inc cmp fcomps roll dec and stc xchg (bad) mov or xchg cmp mov xchg pop adc xlat xor sarl ret cmp cmpsl into add jg popf insb movsb adc jg jge and test xlat and mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov (bad) add ret mov popf jp ficoml sbb sub pop sbbl loope cmp ja jp push popa incb and addr16 mov jo xchg pop orl nop imul lods test dec jecxz data16 int3 lods aaa or jbe gs xchg jo enter adc xchg mov xchg cltd mov sbb std out subl loope pop jo test and out lods jb dec xchg or sub mov lods sbb cli stos lahf shrl lcall repnz (bad) sahf xchg push xor fdiv push lock imull lret lea dec jge sbb decb cmp push sahf mov xchg repz cld fldcw mov loopne mov or add mov ret mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mulb addl cltd nop (bad) stos sub push cmp dec repnz and popa cld cmpsl xchg inc mov imul push jb push test push dec dec pusha sub sbb cmc mov (bad) inc lcall insl xor repz xchg mov shrl sub push xchg (bad) imul push lds in jge rorl xor scas mov aad dec mov cmp das jno fsubrl jle hlt sahf xlat push inc xchg das xchg xorl mov dec mov mov cmp cmpsb mov imul bound (bad) addr16 int jne jne rsqrtps lock ficom lret lea std pand sub into mov push ds imul inc cwtl nop movsl xor lock mov pusha lods std jl xchg sub dec jo gs inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc sbb mov lcall add push push clc jne dec mov mov and sti push push or lret jbe ss sub add adc idivb loopne mov sub xchg hlt aaa out xchg out out iret fwait mov sub (bad) mov sbb cwtl jle and sbb cltd and sbb les (bad) out jnp pop fild fistpll sub ret cmpsb enter and xlat movsb pushf mov pop xchg jns cld dec cwtl sub inc mov xor jp idivl sub call mov mov xchg jecxz lods lret js pop jne and imul mov pop mov (bad) sbb sub aam push repz or leave mov int cli pop cltd stc xor aam out fdivrs fwait iret sahf mov hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov push cltd inc mov ds (bad) notb stos stos lds in comiss xchg inc xchg cmp loop mov adc cmp dec flds shrl mov fs xchg cmp cmpsb mov bnd mov jmp daa lds popf sbb jge push lcall ss into cli subb pop push sahf xor imul inc ljmp xchg lds icebp clc loopne outsb xchg push push (bad) or out loop orl pop les fcomip cmpsb fwait and inc cmp fisubl lahf je,pt push std push xchg mov out mov into aas sti fdivs inc mov xchg push test xchg mov push ret clc xor push pop cmpsb cmp fnstsw popa shrl hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov adc repnz jae xchg xchg lcall xor or lods push popf mov xchg or lret dec xor popa int (bad) lea push (bad) adc xchg xor or (bad) push pop jns lods test jl push (bad) push jo jecxz sub xchg push cmp mov (bad) xor jmp pop stos scas shrb add int3 arpl ror out ss mov adc enter das pusha xlat dec sti pop insl (bad) icebp jge mov loopne das (bad) (bad) hlt das daa fwait cmp test lods pop lods mov lret je sbb jl fwait sbb cmp adc scas lcall jno xchg movsb xor mov push scas dec xlat (bad) leave jl xor mov jp pusha cmpsl fldcw mov mov inc sbbl add sub enter mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov or jnp insl cmc pop push cmpsb cmp rorb pop mov and ret cwtl inc mov pop cmp xor adc mov inc jle mov add lret lods fcomip lock (bad) pop mov or lcall sti add inc fbstp in ret test pop stos or imul jmp aam push dec lahf sub enter movsl xchg rolb insl dec push push inc inc sti mov xlat fs cmp rcl ds leave inc je jl jns inc cmp ljmp jbe bound sub and add adc mov lea cmp mov movsb lahf es stc popa mov leave mov sbb xor sbb add loope push cmpsl testb and (bad) hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov sub jae xor (bad) add lahf andl jne sarl lret push push or lods xchg popa fnstcw pop jo (bad) js cmpsb xor jmp cld popa and add (bad) sbb nop shrl lret push lret cmp cmpsb cmp inc test push cmp adc mov and jbe lret pop adc aas fldt inc pop sahf addl scas es and arpl adc addr16 xor gs stos push loope addr16 jge mov pop push push ficom int3 iret push and mov and lret inc mov addl rolb lea mov popf loope adc pop xchg adc gs jne (bad) add stos (bad) or add cmpsb lock xor pop push inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov out and aam std enter cltd mov adc bound pop imul or or in push leave xchg xor sub idivl jns imul and test stos jno testb pop arpl fadd stos sbb dec call jo push mov inc pop sbb (bad) andl pop pop outsb ljmp hlt mov decl stc mov add (bad) (bad) mov adc lock xchg xor in mov pop and jnp jmp mov adc aad xchg test ret sti ret and ret jbe imul pushf jno mov pop ss mov mov mov xchg rcl loopne cmp das push mov jg test loope mov gs sub fist mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov ds pandn adc pop leave out in imul ret dec cltd insb cmpsl cmp nop ljmp sahf sarl aaa add es cli adc sbbl add mov orl jns jp pusha and pop push lock fnsave inc or cltd mov lahf pop add or push arpl cltd in push imul lret mov pop cmp rorb pop out xchg add mov in inc jae sbb lcall cwtl and sub adc adc std mov stos sbb mov cmpsb (bad) sbb push mov add hlt inc loopne mov adc aam adc int3 iret es cmp push pop mov sbb inc sub and inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov bound adc dec movsl xchg lcall cmp inc pop in xor cld xchg ret cltd or je das cmp negl flds mov loope push jle nop sarb mov lock (bad) or sub call mov in rdmsr (bad) movsl daa and aaa and pusha cmp scas mov mov ljmp cmp push in sti fadds push cwtl sbb iret or or rclb push pop push cmp insl scas cli addb mov sbb inc push adc negb mov xchg mov inc or cmp stos lret push pop and sahf (bad) ja xor shr fidivr jg xchg jmp out mov out ja fcoml sub in cs xorl inc cmp aad inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov ljmp sbb lock fldl and lret push hlt and test mov xor add adc bound mov (bad) mov lods (bad) and xchg mov pop adc (bad) cmpsl loope inc add call mov or sbb xchg (bad) inc dec bnd sbb mov loop jno jns int push pop daa xchg dec ds pop adc push mov mov mov loope dec dec inc jae add fs xor sub push pop insl scas cli addl les push lods lds in jge sbb sbb clc fcomi xorl (bad) cmp les mov mov pop fs inc push dec push xorl xchg mov pop pop mov test or les cmpsb sbb inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov jecxz enterw mov or push inc fimull fidiv pop imul repz or je mov (bad) xor cs pop pop rol xchg pop sbb popfw insb lods (bad) adc inc ss sbb shrl test sbb fisttpl sbb (bad) mov cmp mov and aam hlt adc cmp inc push out inc ja sbb jae cli jne daa cli cmp cmp inc pop ja push push inc xor icebp sub push cmpsb push js insl scas (bad) hlt push pop mull push add xor cmp aad setns loop,pt cmp add jbe push scas movsl jle addr16 jle or mov loopne pop enter or push cmp sbb test jno in add inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov and dec loop (bad) int mov int xchg dec jne into mov xor push push lds stos pop dec outsb cmc and push and ss (bad) in cs lds stos pop rcrb jbe ret push adc mov pop push arpl lret jb cmpsl xchg inc add add mov xchg or jle addr16 mov sub lock fst mov out (bad) (bad) or push xchg roll or lcall enter adc adc subb pop sub and lds mov dec mov push xchg (bad) jno jle xchg push jp lods jp push sub (bad) and pop mov rsm jl inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov aaa cmpsb hlt xor in call jb adc ja (bad) (bad) add mov ret dec into add popa ljmp mov sbb xor jae inc iret iret pop sub add lods jmp mov mov int lahf mov adc out mov imull xor sbb pushf mov inc imul mov cltd mov add mov push es xor mov and lods fdivs gs adc pop or mov xor fbld fisttpll and pusha adc sbb nop loope mov mov inc pop ss jbe cmpsl (bad) sbb aaa mov mov sbb (bad) outsb ret ljmp adc les fs mov ds ret jmp mov push lds sbb hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov (bad) popf sbb xor scas pop imull xor mov mov cmc mov sahf xor (bad) mov jle (bad) rol lret test mov test adc addr16 push or (bad) fildll xchg loopne pushf jnp pop mov or loop jecxz mov adc arpl jl lea sbbl in daa outsb add sbb push insl (bad) cs pop or shrl mov xor xchg sub pop pop inc sbb jl mov add aam enter jge push sub sbb pop dec adc sbb movsl dec repnz jbe addl fsts pop aaa add mov inc mov dec repz fidivrl mov push aas cmp inc dec xor (bad) in dec iret push cmpsb sarb hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cmpsl rol ljmp xor mov inc add movsl lret dec lahf or xor sub lock es xor or add or or fwait popa pop fistpll adc fwait sbb (bad) jo mov or lds scas dec jb cmp bound or push mov cmpsl (bad) add clc lods mov sti add sub pop inc jg cmp fcomps les push mov rol cmp lds xchg mov (bad) inc into jne pop rorl xlat cld xor clc mov dec jae lock je adc movsl stos jp movsl inc arpl lods hlt mov lret dec loopne test sahf adc sub jmp inc call addb pushf out push mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov enter cld xor mov push (bad) push jl pop jno in xor pop and jo jno push or mov loope add pop insl push jp ss sbb jmp jae scas cmp lcall ds movlps xchg mov std sahf sbb call mov dec mov pusha mov adc rcll ljmp jg shrl jns shrb sub and xor das mov int lahf test mov icebp enter dec pusha mulb push bound cltd frstor ss add pop jecxz xor push mov mov xchg pop dec pop loopne pop sub pop out bound and movsb cld mov dec fbstp cmpsb add aaa and xor mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov dec xchg sahf aas hlt neg inc jmp mov popa pop jo pop sub mov sbb push insl (bad) lods paddb adc sarl sub inc outsb rolb lret rcll les and repnz cmp (bad) out cld cld fcomi xorl fimul mov iret cmp lahf (bad) das cmp aas test add ds imul lret lods mov nop dec mov mulb addl mov sub fstpl movsl and pushf push sub fisubr incb sub (bad) iret mov mov mov lret aas mov inc stos cmp or and fldl2t inc test lea mov out xor les and mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov repnz arpl xchg lcall and xor scas cltd mov xor fidivrl scas inc jmp fldcw inc or xor out inc or xchg add mov addr16 in mov imul mov fldt and jp xor sub imull cmp dec add inc pushw and repnz xlat mov cmc loopne sub pop dec pop dec cmp clc popf or sbb addr16 or or je lret loop dec js xor and or fucom pop xchg sbb lahf cmp std push adc (bad) mov push fadds add lret insl lock inc insl jmp iret lods push jnp lcall dec inc fs jnp cmc and lret (bad) push dec mov sub (bad) inc inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc lret lahf jbe fisttpl adc mov adc push leave je sub rolb push adc lods and stos imul negl ret stos sub sub or call lret push and sbb lahf leave mov int3 movsb test push into (bad) dec loop and mov dec fdivrl jne jo lahf sub inc add loop rolb xchg cmp (bad) outsl jg cmp es push jle repnz pop out or and repnz (bad) scas fwait (bad) int3 mov cltd adc rcll sbb fdiv stos or data16 cmp push pop sub push and out inc jns shrb sub and xor or popf jp fnstsw cmp push in jecxz daa inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc fsubp lret jb xor daa arpl jno lods dec (bad) jbe mov lods hlt mov lret sbbl (bad) (bad) (bad) dec sub sbb adcl mov jo in pop adc mov cmc int3 mov imul mov aam jge nop lahf cmpsl stc cmpsl clc sub bnd pop push sarl mov dec aam mov fs mov fwait mov pop ds ret stos scas rolb jb shrb insl xor imul xor daa push xchg mov in stos inc mov bound sahf mov pushw mov inc adc sbb add loopne jecxz sbb jmp popa pop mov pop cmp jb dec ja jle rcr push inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc clc jne mov pop imul fisttp pop loopne jo aas dec pop lods mov or mov movsl jnp aam loopne add or sub dec cwtl inc xchg pop sub and jl sbbl lds and imull pop nop cmp mov pop add in inc popa movsb je loope cmp fisubrl xchg push lea hlt in mov fs dec int3 data16 ss jmp inc dec cmpsb (bad) xor sbb scas push in pusha out push jne jecxz daa fsubp lret jb cmpsl xchg andl and ds add mov xchg or jle addr16 mov and lock (bad) pop mov cmp inc je sbb sbb or jmp lods xor pop pop mov (bad) cli push pop cmp adc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov int dec jno stc xchg das outsb ljmp sub inc fcmovnbe sbb or dec inc in pop pop (bad) mov jnp,pt sahf jecxz ds cmp cmp cs ds insb pop loopne xor pop mov adc sub or cs fldenv push lds loop xor test cmc das or icebp xor test loope daa lea loop sub or mov push (bad) loope adc mov sbb and sti cwtl inc pop mov and (bad) adc adc push bound mov cmpsl (bad) divl xor push mov stos leave cmp pop add fs pop cmp mov mov cmovge mov cmp pop out pop xchg inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov or mov data16 sbb xchg mov (bad) mov das dec pusha cmpsl into xlat js (bad) fucomp pop js cmpsb push (bad) push hlt ret iret xchg jg lds ss jge inc dec cmpsb inc xor sbb fcomi stc (bad) bound pop jge inc jns xor stos push out ss in in mov mov ja push and xorb fadds loopne mov or mov mov js fwait sbb out sub in dec repnz sahf into adc sbb stos xor xchg fild fwait aam xor sti adc sbb insl (bad) sub fs call mov sub (bad) arpl icebp subb mov cmp push mov cli repnz xchg or jo insb mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc lret stos outsl fnstsw ret scas out mov xchg in cltd arpl inc jecxz cld xchg or (bad) and xor or add sbb add fldl call inc sbb sbb sbb sti cmp lock and sbb push sub xlat jo xchg ljmp add add jo or and stc enter push pusha sbb fs call sbb mov mov (bad) leave inc out lds cld lods dec ret outsb or sbb (bad) test xor add sub sbbl nop stc inc xor cwtl dec fnsave cld addr16 or pop addr16 inc movsb jp cmp stos incb scas ja cmp stos hlt cmc sub (bad) mov xchg mov dec iret aas lock pop daa fsubp lret jb inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov fmuls cmp repz or loope in rorl and lods mov pop mov or jl,pn mov xchg pop and dec ja out aaa test scas mov mov or dec xchg test sub fimull adc mov icebp mov cmp stos jno outsl mov push inc gs scas ds fbstp test xor pop push rclb lret lahf jbe fisttpl push push adc xor cmp xor cmpsl xor movsb stos add mov mov out fldcw dec pop sub mov pop loope and sbb sbb lcall dec fcompl jmp js (bad) adc inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc push loop adc ja xchg (bad) popf jns ss mov mov mov bound mov push pop xchg outsl xchg sbb adc imul int3 mov xchg push rorl xchg (bad) xor xor push and cli repnz push or int jns add adc sbb scas ret and xlat ss aad sbb orb or add js ror mov adcl inc popf jp ljmp pop dec adc jb daa push es lret fadd and jecxz shrb xchg inc xor loope lock lock inc out xorl outsl (bad) xchg (bad) xchg fldenv dec jo and or orb leave adc out fwait popf pop mov movsl adc mov cmp fstpl ja inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov xchg sub aaa push xor insb je mov jle insl rol js ret rolb jno stc xor rcll dec dec inc inc xchg pop dec call mov xchg je jo out popa lods adc hlt andl ds cld daa lods out and cmp sbb push aaa push add xor xor adc xorl test psubb pop repnz lcall mov mov cs fbstp cmpsb inc cli aaa and dec loop lds xor push xchg fldt ss mov bnd int mov lods ret mov sti inc outsl loopne aas mov cmp xchg bound test pop movsb (bad) sarb lret inc (bad) cmpsb cmp repz push (bad) cmp repnz inc xchg xchg outsb mov mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc aas xchg (bad) loopne cmp dec in pop test cmp scas mov push ss jg scas insl pop out mov data16 push fmul mov cld xchg enter xor int3 push cmpsb rol popf sbb (bad) and pop not imul (bad) aad ds inc lahf lea cltd ja add daa in mov cwtl test jnp imul dec sub fiadd xor dec jo repnz in adc (bad) and sti cmp icebp aaa and shr pop stos aam imul push xchg movsl leave sarb push dec mov pusha xlat outsb mov push mov insl pusha (bad) mov cwtl fs popa aad fild adc dec call out inc (bad) sub insl aam in jb int (bad) sbb mov xor hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov xor cmp pop fimul loopne mov pushf mov icebp loope mov aaa shlb or clc loopne lahf push dec xchg shrb jne adc cltd pop add mov ret test scas mov pop xchg mov add (bad) jmp shl leave push push lahf sub inc add shlb fistpll mov mov aad adc push sbb pop rcll scas pusha mov test fscale push paddw fild rolb dec sbb bound nop pusha repz scas mov movl dec in pop hlt flds push aad pushf ljmp out mov inc mov dec je fidivrl out sbbl adc mov cmp jp xchg mov lock mov mov sbb pop hlt ss mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov aam pop add mov mov les imul pop mov sar push out xchg xorl rcr stos xchg jo ja mov and (bad) in mov rol stos xor insb fildl xchg jge pushf lahf cmpsl jnp jo in lods push cmp cli pop jp clc push leave daa xchg call sbb mov in gs and fld1 imul (bad) mov mov cmpsb sbb jno or cs out rcrl and xor push dec jae mov movsl aas pop mov mov lcall pop or pop jp inc push xchg ja out insb cld inc cmc lret call sub repz xchg in fwait sbb gs xchg push repnz test fcoml out sub dec xlat jo imul hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc imul and and or pop and sbb movsl adcb pop pop sti dec stos arpl jge out xchg sub int3 mov xchg push shr add movsl xchg (bad) leave inc les (bad) lods dec ret insb or sbb pop stos xchg add push sbb cwtl jne pop lret pop nop adc cmp imul addb loope push jo add xchg adc pop xor fidivl fistl push xor aaa mov scas arpl ds aaa (bad) dec fadd in and dec gs ret cmpsb enter movsl rcrl std xor xor loopne push mov add xlat mov mov pop inc pop sub fiadd sub mov lret popf sbb stos xchg enter dec test sbb sub xlat jo jecxz (bad) mov or leave adc inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov jo lahf sub inc add cmp in inc sub mov aad subl dec sbb jge pop imul cmp loop aam push mov out push mov sbb (bad) fadd out scas mov ffree dec leave mov repnz mov pop mov std pushf or push xorl or mov loopne cmp loope pop add call (bad) pop or pusha or mov jno adc push sahf popf pop and loop dec adc ljmp cld addr16 pop mov sbb mov dec add mov push ja add push mov xchg sub les lcall sub aaa movsb lds dec cmpsl (bad) xchg fcoms pushl fsubs cmpsl jns inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc adc mov js adc ret ret xchg test scas fxch dec mov divl outsl add push cwtl sbb cmpsb stos inc xchg mov dec dec jg out sub sbb push mov fwait xor int3 adc test mov push add popa mov outsb push mov cmc in sbb js mov sysret lock iret inc imul adc pop js pop or in adc lds jns in dec js xor imul scas notl imul push int3 arpl jns ss mov out (bad) sbb push mov sbb insl (bad) mov jg or mov xor lcall ds test jl dec push int sub fistp movsb mov pop loope push adc xor jnp inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc scas jle mov das cmp or das push add jle adc pop jo sub pop dec pop ja in insb push popf iret inc push out addl xchg jmp sbb sbb and sti jo dec js xor add or std sbb pop mov iret add pop cld lods jns pusha mov pop sti fdivs add dec mov push cltd xor cmp call xor ds xchg (bad) jl mov sub or stos xchg mov cwtl add arpl stos lret push pop dec stc sahf (bad) ja xor shr fidivr jg xchg jmp out mov out nop add lret xchg imul out dec mov ja add sarl sbb or ret sti push lret jb ret aad jg inc daa add pop inc push or inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov popf pop mov xor push ret inc xlat sahf fimul fs push pop aad arpl (bad) and (bad) cmpsb sbb xchg sub out inc (bad) or jmp scas ja push xlat jo sbb arpl or push xchg leave inc ret jo lahf in adcb add push insl mov dec (bad) mov ljmp es xor sub push sbb loopne push cmp mov cmp mov in jb xchg lcall (bad) lds notl xor xor hlt sub test mov xor add adc jle push dec es cwtl sub lods pop mov pop and (bad) mov pop sbb (bad) hlt fbstp cmpsb push cli aaa and dec loop lds xchg ror fdivrl mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov adc sub inc add std mov sbb andl pop mov sub sub inc leave sarl push ds movntq out sub jge fcoms mov mov jne pop aas in popa cmpl aad adc dec ljmp push bound mov dec insb nop add mov lock enter fisub and dec cmp pop dec or xlat add pop pop fnsave add iret push cmpsl jl das dec loopne mov jp shll cwtl sub cmp inc inc loopne enter mov insb imul notb out imul pop (bad) cld int cs push pop aam ja out mov push aad mov popf mov xchg add popf pop mov xor and lds out cmpsl sti xor mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov dec or mov cmp sub pop (bad) mov ljmp es xor sub push sbb loopne push hlt sbb push outsb mov cmp mov in jb xchg lcall (bad) mov notl add xor dec cmpsl cmp andl jnp das cmp lret mov adc pushw ret inc xlat sbb pop lcall call xchg loopne or scas rorl enter sbb int push jmp gs mov aaa imul jo mov arpl lock divl ss inc dec lahf push inc add inc out hlt cltd stc xor xchg sub lods insb es rcrl sub pop mov push mov in out ss inc and repnz xchg xchg in clc jmp xchg mov mov add inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov jb addl mov sub xchg dec orb hlt adc incb scas pop xchg cmp mov inc dec mov pusha test or roll adc js jp xor push lret (bad) je das jbe or sahf xor imul xor outsl xlat mov push repz lods fsubr mov inc popf loope pusha and mov xchg push repnz aaa push mov or (bad) mov mov jl jns and or sbb push mov cmpb pop insl mov lahf xchg adc les fwait cmp lcall out sbb jl dec ss xor repnz cmp enter xor enter adc and xchg sarb mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc (bad) negl sbb mov push ds imul notl mov shll dec sub jmp loop xorl rcr rcrl jg mov jo xor pop fstl adc jo xchg xorb pop in fs jae and (bad) into mov sti push inc adc xor jno jnp inc stos ss adc jge fdivrl mov xchg mov mov cmp rclb or sub or cmp mov push dec add push add push fistpll addl hlt adc orb hlt cli sbb fcoml sub mov cmp roll cmp jp cmpsl pop out cs scas pop sarl jmp push test movsl jo or ret xchg inc mov mov lcall enter (bad) or inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov or inc fisttp adc and cltd nop mov add jecxz sub sub test cmp (bad) cld xchg (bad) outsb ljmp int3 mov mov xchg cmpsb push push ss xor sti xchg dec or mov pop pop repnz loopne jnp push leave inc push hlt cmp push cmp push sub pop mov fs jns les fist and pop popfw xchg lcall leave (bad) mov scas dec pop jp xor ja dec mov sbb cli mov inc outsb push mov hlt movsb addr16 xchg and push repz test or call lods test or aaa fsubrl test lods or jecxz mov inc int mov jl repz lahf cmpsl inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov lds repz mov adcl mov fcoml xor push sub sbb xchg mov dec movsb add les sub dec mov jge fadds push pushl xor dec js sub mov aad ljmp cs pop out inc inc loop (bad) jae xchg mov pop mov mov inc pop jp bound in dec jno arpl lcall lret jb inc js stos mov (bad) (bad) xchg in cltd inc lcall adc mov loopne cmp jecxz in mul fcomps dec test or jb repz gs xchg sbb aaa and and (bad) adc adc out pop xchg (bad) mov mov sti fadds add mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov call xchg test pop xorl cmp into in xlat outsb mov aam mov subb mov cli repnz xchg xchg lcall sub pop rcrl out ja daa push lea push jnp jbe add add xor loope cmp punpckldq js add pop loopne mov or xchg into inc xor movsb cld mov lcall or adc cmc inc lds pop popa mov xchg ss mov orl xchg ror or mov cmpb push scas pop mov scas cltd loop xchg sub icebp fnop pop or out and das and rcrl jae or ljmp jp aam inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov aad inc (bad) es shll fldt add xor add push sbb xchg mov pop dec xor ja cmpsl push rorl dec clc xor jl or inc mov ret negl xlat popa mov mov outsb (bad) pusha cs xor or jb cmp push (bad) cmc call in pop or daa clc inc es lock pop cld jns in cmp mov cli pop xchg cwtl leave or xor js and xor xor std xchg dec xor mov mov mov xchg mov adc mov mov outsb xchg dec push or lret call and shrb push out xchg mov cmp dec dec push inc and sbbl pop out ret push fldcw lret jbe or sahf xor inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov enter loope dec adc adc push inc pop sub es push push or cmpsb sub insb jns test rcl push mov jge lods and or cli pop xchg cwtl and adc xchg cmpsb pop push ss xor sti xchg dec or mov pop pop repnz loopne notl inc push hlt xor push aaa xchg mov sub pop mov xchg outsl push sbb xchg mov and fisubrl arpl xchg lcall scas outsb cwtl mov outsb pop data16 dec js ljmp adc rcll jle rorl or add iret rorl das outsb sbb dec xor push out test inc jae out pop rorl stos loopne add fnsave jle mov outsb push or cmc das cmp sbb sahf xor push (bad) mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov jg imul idivl sub call mov adc and fsubl mov fldl mov jo test test xchg data16 mov sub inc add cmp in ds mov aad subl shlb iret mov lret shrl sahf push push pop mov push mov popa out sbb mull bound movsl dec stc mov into testb cmc or jns push mov lods mov add or pop pop adc and pop test (bad) sub jle adc gs std jmp js xor inc adc pop (bad) (bad) sbb pop xchg ljmp or lret jp ss (bad) mov cmc push repz stos inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov rolb (bad) into mov jg loopne xor loopne insb lods rcl mov mov xchg xchg stc in cmp add lods mov xor ljmp mov dec add push add push fbstp addl hlt adc orb hlt cli decl fcoms sub enter out popl pop inc rep push out sbb das push aam xor adc push add xor jb inc xchg cmc mov rorb add lock or mov out adc call cld add cmpsb sbb xor pop mov mov addr16 jecxz scas adc jb mov mov xlat mov into pop adc sbb add add mov xor inc cli pop daa aad inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov push leave mov mov fldl mov xor (bad) in mov xchg push sbb les sub nop mov jge fadds insl scas (bad) out jae mull push or xor cmp cmc cmp lods xchg mov jno loopne jle sub jl out pop repz out icebp sub ljmp mov mov sti pop mov lods lock call xchg xchg and mov stc sbb inc pusha mov (bad) lret bound ss popf adc stc cmpsl lock mov xchg dec inc in mov idivb mov push mov rorl pop popf mov stos sub inc les sub sbb adc mov pop outsl jne dec mov dec repnz jbe int ret aaa add jle,pn mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc xor (bad) add aad push and cmc test mov stos repz sub aaa repz jns ljmp or in loop and out ret mov or (bad) setns add cmpsl les cmp rcrb insb aad adc fstps mov sbb out imul cmpsb nop hlt test and and js cwtl xchg mov add out mov cli imul sub outsl push mov lods fadds mov or pop jns sbb inc xchg aad subl shll ret (bad) cli xchg lret or fdivrl sub xchg lcall and (bad) bound dec bound adc or gs ss inc and das xchg cmc add jbe jb lods jle mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov (bad) (bad) repz imul sub inc xchg mov test sbb cmc (bad) adc cmc negb add and jo in pop outsb popa and dec loop mov mov fcmovnb push mov cwtl sub int pop xor in lods push cmp cli pop jp in push leave daa mov push ret jp lods inc lods mov insb lods jle (bad) cmpxchg push cltd in out imul and sbb jge test int3 stos xchg popf cmp adc dec push mov (bad) jb mov popa outsl dec inc push push outsb inc or cltd xor mov xor mov test ret sub mov test cmp dec sub mov xor jnp insl jl mov push ret cltd jne add mov mov cltd (bad) jle enter mov (bad) mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov pop out fnstsw sub sub imul push push sbb mov movsl add test ja mov and loop jo fnstenv repnz xchg lods and cmc add fadds stc and mov mov push clc push xor sub mov ds sbb inc jp lods lds pushf fs xor cmp cmp call xlat add add fnsave inc or fistpl je (bad) mov jl cmpl cld (bad) idivb add pop repz dec mov push (bad) add sahf int jo pop pop scas sbb mov fbstp cmpsb pop cli aaa and dec loop lds sub fdivrl sub mov sahf addl std xchg inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc lcall xor cltd cmc jle cmp lcall je adc jl call popa pushf fs xchg lcall mov cmp sbb repnz popa movsb je add cmp pop flds push pop push inc sbb outsl (bad) std fmul aad and bound cmp out or (bad) cmp pop mov daa lret ljmp xor sub mov in push push cmc or jmp xlat add lret lods stos test clc (bad) pop mov cmp inc jbe lret sbb mov push (bad) hlt rorb and jbe pop fst mov inc mov xchg mov bound add mov in fldl mov (bad) cmp inc dec js sub mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc jmp rcrl lds test jecxz xor sti pop dec clc lds in push lret lcall jg and clc das push adc mov ret jecxz xorb int test int (bad) mov daa lea (bad) mov pop repz ja ljmp call test jne lahf sub out dec (bad) or jmp scas aaa mov imul cmpl fnstsw leave push lods xchg cmpsl (bad) sbb push mov loope repnz insl mov outsb sbbb push xchg insb es les mov adc xchg mov and les mov cmp cmp insb xchg push (bad) enter xchg in outsl popf aad test inc js popa movsb je mov cmp pop flds roll out inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc inc or add jne cmp divb ret (bad) insb add in test pop xor dec jge and imull sbb xor mov xor test dec mov pop add aam mov mov mov add fisttp mov call mov rcll add jle and jbe inc dec repnz and and mov inc mov push jl ret popa ficomp fwait jb jmp test lahf (bad) xor mov ja add pop lret mov call sbb mov mov pop mov bndstx push dec push xchg ds jg fimul jne xchg call insl mov test dec jmp or cmp ja or add or data16 or cltd mov cmpl inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov out (bad) sub cs jbe adc mov insl fbstp in ret test scas mov mov jge mov xchg sar xor out push call std stos lahf rolb lcall xor cltd addr16 cmp lcall shll cld cmp sar ss xchg mov fdivrl es repnz movsl mov mov addl fstl scas incb jp mov sbb js inc sub or xchg enter in popl pop int jne pop rorl xlat hlt daa fsubp lret jb push (bad) jg xor fwait je fsubrl into push push sahf movb or pop outsl orb loopne loopne ja jmp inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cld push (bad) add shlb pop or inc sbbb (bad) cmp (bad) aaa and mov idivb xor inc xchg mov into push xchg and push pusha or inc xchg stc and dec mov mov jae sti lcall es scas jge pop movsb (bad) adc pop mov xorps and (bad) xor mov popa jge dec jno arpl xrstor ffree or ret mov ja ret (bad) icebp push adc mov dec mov or fs sub sbb out mov insb lods inc dec pop call mov or imul (bad) jno out pop mov and or imul dec xchg sti mov out inc sti fsubr xchg stc dec mov outsl inc jo jp mov movsl fildl hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc and xchg orl fstps or lcall xchg push xchg xor js lods shl jbe insb or iret lcall (bad) jne mov lods push xchg jne mov xor shrb cs fwait orb or rcrb movsb sub stos popa enter jbe lds add scas push cmp xor adc and xor adc cmp ja push das mov pop sub xor xchg inc mov mov iret or lret out call push clc or sbb stos fs out cmp negb lret jo mov enter jmp push inc fcomps xorb sbb fs ja jns cltd push movsl lahf sub mov insl (bad) mov loopne push push loop dec outsb cmc cmp mov adc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov push fstps lcall ds lret je dec aaa js xor add rorb (bad) xor adc mull and cmp and push push cltd daa mov cmp add jbe mov xchg lcall fs lock ss test mov jo loopne in sub mov and jg push mov jge lods and or (bad) mov mov jmp xchg std (bad) pop and push in rolb push cmp cli pop cli cmp and adc cltd insb es cmp ffree enter pop cli push cltd pop ds lahf fwait jl dec push int sub fistp or pop mov test dec js iret jno test jns add (bad) inc xchg in scas mov stos mov outsl inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc (bad) or fcmove and push pop sub pushl in pop not (bad) popf negl push pop and sub gs push leave jecxz mov lds or ljmp and pop push jne fxch xchg fldenv xchg cmp in mov cltd (bad) push mov mov fnstsw add xchg ljmp inc subl leave xchg xor add sbb imul in jmp (bad) mov add orl fnstenv sub (bad) lcall jg push popa ret and xor test xchg xchg mov pop adc pop cmpsl imul mov gs gs ss mov outsb stos inc movsl mov popf mov sub cltd insb pop and pop inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cmp inc rclb leave rcl sub mov and jno mov push and or pop dec push adc ja xchg cmp jns mov mov sbb fcom lock (bad) dec mov fidivr aam out xor push rcr lea mov xchg (bad) cmp xchg sub lods gs sbb insl outsb jmp mov int3 stos cmc (bad) mov data16 mov add mov cmp add scas es scas mov xchg cmp nop ja (bad) hlt lret xor mov inc ret xor sbb je movsl ds inc cltd stos adc and ljmp bnd das cmp lods sbb outsb mov push mov imul mov and fldenv mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov xchg cmp cmpsb (bad) cld sub pop fisub jle in dec repnz or (bad) mov add add int3 jae jns ss mov cli (bad) sbb push mov push xchg (bad) icebp pop (bad) mov jg popa add fs inc (bad) and push mov inc ds lahf mulb sub mov push jmp xchg lcall fiadd and or mov push mov repz gs xor pop fs movsl jle lea jbe mov repz outsl jbe repnz xchg sbb imul adc addr16 dec or insb jns test jns in mov dec inc pop fstl imul pop or faddl pop pusha xor jmp inc mov mov cli push jle mov push mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov xor movsb movb mov fildl push sbb mulb xor in jge gs fldcw xchg outsb cwtl mov adc addl gs fnstcw insl stc sarl out inc or add js cwtl iret pop lods fisttpll sbb arpl mov xor or (bad) out rolb and loopne aaa adc xor mov cli inc mov xor add ljmp push mov imul andb repz loopne mov or mov test add fbstp out pop movsb dec fcompl (bad) cli push pop cmp adc pop andb fdivrl mov sub sbb xor cmc mov xlat enter push xor ja stc (bad) sub adc xchg xor mov lcall hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc test ds xor (bad) sub lahf xchg sbb sbb out jnp mov or stos bound lahf aad inc mov jle (bad) mov pusha or rcr loope xlat jbe xlat cmp xor sysret lock sbb sbbl sub add fild pop mov inc xor sbb pushf push sub jb arpl lret incb leave push into jo or sub adc sahf xchg rolb insl dec dec inc rcl outsb jg scas out jmp adc rclb and pop mov setl xor repnz jge adc jne (bad) cmp mov adc ret ret xchg adc ljmp push movsl pusha fs mov out dec jno mov hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc sub xorl cmp xchg jp iret add out mov xor xor test push or lret jbe or sahf xor outsl cmpsl clts push mov add outsl xlat mov mov and fldenv cmp cmpsb (bad) cld sub sbbl in dec repnz or (bad) mov add add int3 jae jns ss mov (bad) (bad) sbb push mov push xchg (bad) icebp pop (bad) mov jg popa add out fs inc xchg rclb gs mov (bad) outsb pop je adc jl (bad) lds sbb adc out fcomps roll dec jmp push out push mov ret adc pop fwait or jge mov mov pushf mov sub mov and mov loopne (bad) fiadd hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov imul pop mov mov add push mov ja add aas and and imul add jl (bad) mov in imulb add mov mov inc cli or mov jge aam add fs jno and push xabort pop mov fstpt push sbb adc dec and sbb shrb xor cbtw mov aaa mov mov jnp ret ret cmp push into push and stc movsb or add stc insb adc leave in loopne push jg fmul out jge outsb xchg mov xchg loop cwtl add dec fcoms test xchg add mov int pushf cmp jle in aam cmpsl cmp repz aad pop subb or test scas mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc ret mov and adc xchg sbb pushf adc outsl inc (bad) jl push add ljmp sub cmp loopne ret in jo movntq out stc repnz insl (bad) sub push xchg rol push jne mov mov les and icebp mov dec mov sbb imul and repnz sbb xchg pop movsl (bad) int3 cmp push nop enter daa ficom fnstsw ret cmp (bad) test jl popf xor outsl mov xchg or sarl insl mov call sub fwait pusha cmpsl push imul mov fs xchg (bad) je dec js xor dec jmp or call adc pusha je push std push push inc enter test sub xor jb ret cwtl cmpl inc (bad) mov xchg sahf jecxz xchg cmp mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov rcll dec dec fldt pop or cmp and cli pushf andl (bad) adc idivb sbb and pop cltd adc mov jp faddl cmp xchg test jb or outsb aam xchg xor mov add ret jg cmpsl mov dec inc inc rorb jp popf xor xlat sub loop xor mov mov dec into pop mov mov inc mov les xor add pop lock sub adc fwait lods pop mov pop or nop lock sbb std rcrl pop and neg sbb and mov popf mov push pusha pop jo mov add inc add (bad) xor cmp cli iret adc mov sbb rclb adc mov lods inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov out daa and aas ljmp jo comiss popf sbb loopne fistp inc in sub mov sub ljmp jl imul add pop je lds gs jne (bad) push lods decb jl test (bad) pop jae in addb dec mov sbb cmp xchg mov mov cmpsl add cld ljmp mov pushf add mov pop js xor pop pop cmp bound sub sbb add mov idivl mov les fmuls jg xchg in cmp fdivrs imul jne ds movsb mov fimul push into outsl inc orb sbb imul outsl (bad) stc fdivrs sub scas in xchg inc fistl mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cmp jnp inc inc rcrb dec mov stc push lcall lods test jg sub add sahf xor jae cld xchg or scas jle addr16 sub nop push pop repz cmp xchg fnstcw loopne jo imul scas or out sub out dec repnz test mov (bad) xchg ljmp fldcw push mov loopne sti out jg stc sbb or fisub sahf out out rorl jnp into mov mov paddsb dec push push cs (bad) mov (bad) in mov dec enter cmp mov lea add xor test inc add add adc mov jno lods or adc xor xor jb cmp xlat insb lods outsl mov pop out imul mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov adc cmpsb nop call stos xchg enter dec xchg pop and jae cli inc xlat jo jecxz fisubl mov xchg aam mov test mov outsl clc (bad) jmp sub xchg hlt xor es mov mov pop mov bound cmp les mov push mov (bad) imull in insl gs adc mov in jecxz adc xchg (bad) icebp aas int3 insb dec test fisubr inc or fldt add add cmp and ret ror mov icebp cmp pop inc mov lock jge push lcall ret cltd leave jnp or test jbe xchg mov xlat mov pop repz or fidivl mov je out sbb xchg mov mov hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov gs (bad) pusha jns repnz mov and mov (bad) xchg push jno loop mov outsb add lods push jle lods or dec mov ss mov std fistpll loope lcall movsb cs ds ret (bad) test xor or xchg in cmp inc loopne cmpsl dec cld pop fcomip fcmovu jmp aas lds sub fadd sub imul cld dec cwtl pop jb cmc loopne cld loope sysret inc sbb fisubr or adc test push jecxz pop gs in ret not and jg cmpsb pop add xor xchg mov mov xchg bound insl popa aaa cmpsl add add lds nop outsl inc jo jp mov sub cmc data16 mov mov loope xchg inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov pop dec call mov sub out or xchg mov insl gs or and sbb pop dec repnz jbe addl es jg popf insb test xor cwtl adc aad pop inc imul into mov or popf jp fisubl sbb push stos (bad) bound fwait jb (bad) aad dec cltd inc cli into repnz sbb mov mov daa mov rorb adc jns out int3 cs sub jmp mov sub cmpsb sbb lahf push pop es cmp divb and cwtl cld jne mov imul inc icebp fdiv ljmp leave loope xor sti push dec adc xor jo cli jno jmp mov jo xor adc test cs shll fistpll hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov xor xchg sbb sbb mov rorl xlat in fsubp lret jb xor cmp test cmp mov mov in or xlat add (bad) jmp jp aad fisub cmpsl jb jmp mov cld adc data16 test mov sbb dec dec jle aad adc ja xchg test inc push lahf sub push jp mov arpl iret add push mov gs cli ja mov imul outsb mov mov fcmovbe add mov out xchg sbb out xchg sbb sbb pop pop xchg int3 popa cs ja std mov into jge orb or cmp mov rcll xor jp inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc daa test arpl mulb push scas sub iret mov add rol incl pop loope scas or test cmc loope lods dec or pop xchg inc jno xchg push and sar into inc add and cld dec mov sbb push and and (bad) and std nop aaa mov xchg adc xchg push xchg in mov push int sbb push mov cmp call mov nop jnp sahf jecxz popa daa fwait cmp mov or push sbb jl mov sub (bad) popa lods adc rcl pop cmpsl roll adc js jae xor mov pop das mov pop sbbl xlat inc dec xlat es pop in jge aad push arpl mov imul adc or pop sbb cld inc mov hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov outsl movsb and popw pushf dec repnz push fldl mov (bad) mov mov subl pop loopne jo add mov stc dec xor jno add xor aad adc repz les test rcrb loope and jge dec (bad) lods (bad) jb mov lahf (bad) push loopne int xchg jne dec ret das sbb dec sahf sarl mov in sub subb inc repnz enter adc popf cmc nop cli or roll push dec jno xchg enter lcall mov adc repnz test adc xor gs mov pop lahf inc xchg ret pop mov mov rcrl lods jle jo loop lret hlt push repz ja out xchg insb push sbb addl adc xchg jbe,pt dec repnz mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov aam movsb jmp xchg imul pop lds jns xlat in xor cwtl jg inc fadds push std out rolb jmp inc push xor jg test cmpsb int3 pop andb jb xchg pop lret xor stc dec stos pop shlb mov push jne xchg push hlt and or mov sub mov ds mov add jl add or mov push mov jmp addr16 jle sahf imul inc xchg mov sbb jmp and (bad) cmpsb sbb addb dec mov jl mov js xor and or sbb outsb fstpl jb cmp aam mov lret movntq out jmp jle push pop out lods cmp mov push sbb mov gs mov ds in sti (bad) lea hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov (bad) mov cwtl xor rolb or cmp add lds pusha sbb mov or (bad) aas ljmp fild aam add add inc mov mov imul jnp xor fisubrl (bad) lret mov and js xchg jmp cmpl pop mov sahf mov cltd loope xchg cmc mov cmpsb jbe xor or jb cmp clc jl lcall mov mov cs fbstp (bad) cmp aaa mov mov stos adc test xchg mov xchg push xchg cmpsb push ss loopne scas (bad) sbb clc dec mov rorb pop insl (bad) mov xor xchg adc popf insb es sub pop rclb (bad) mov mov xchg (bad) int xchg xor dec and or inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc xchg push xchg xchg lcall rorl pop loopne fsubr and orl push xorb pop scas push adc mov xchg dec push mov lods push add or pop pop adc and pop test (bad) sub jle adc gs std jmp js xor stos adc pop (bad) (bad) sbb pop xchg ljmp or lret (bad) xor push (bad) mov cmc push repz stos mov mov into mov jg pop jmp jno insb xchg xor (bad) lret inc out sub sbb sub or cmp xchg mov jne ja adc sarl push mov imul orb or xchg cmp push xlat fidivl mov enter pop xchg xor dec push scas push inc inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov movd daa push adc and std xor xchg sahf in inc mov xor add xor pushf mov imul xchg xlat add fisttpll mov call daa push or push push addb pop or sbb add sub fstpl xor jle scas aaa mov imul push (bad) jmp fnop leave std jmp xchg or pushf dec push mov mov add jmp mov mov std push adc repz test das lods cs aam push adc push (bad) iret fucomip mov push cmp push mov cli repnz dec outsb xchg pop pop jge inc cmpsb fdivl xor cmp ret mov add mov jno lods mov adc jg aad adc sbb mov popa xchg popf sti mov dec mov lcall inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov dec enter sbb imul loop and pop push mov xchg add jp leave call mov sbb je mov jb iret or push pop outsb outsb cmc and mov cmp ffree sub cmp (bad) leave inc jbe jl jns push cmp pop sbb xor adc aas (bad) push data16 rorb sub shrb adc dec fisubl sbb cs push aad push inc data16 cmp fsubl lds dec sub jle stos jnp (bad) in sbb stc (bad) push fsubl (bad) int mov int ljmp jecxz mov movsl lret pop ljmp jecxz mov mov (bad) imul loopne lret or iret test pop adc add jo loope push and xlat push mov enter adc hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc sub adc mov popf data16 loope mov xor xchg mov sub jge xchg js stos ss xchg inc jle pop push adcl cmp stc lods xchg cmp imul push dec in xchg gs xor cmp stos or xchg push repz fadds mov add mov dec or xchg push pop test aad sub pop out cs push (bad) add jo mov nop daa hlt inc pop add stos xchg (bad) cmpb enter dec mov (bad) jbe popf mov repz xor ror cmp ss pop in sbb inc add sub sub cmp in cltd stc xor push imul insb test cmp int3 jns cli sahf pop mov mov rep pop jl lds hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov push mov mov jg cmp (bad) mov adc mov rcrl mov xor xchg addr16 dec pusha mov addr16 loope cmp sbb je pop push mov in scas aas pop out scas aas int3 fsubrl sub pop dec cld xor xchg push in mov cmp shll cmc test push arpl inc imul jl and outsl push mov (bad) add divb dec jo sub xor je les pusha (bad) aaa xlat fwait rclb nop rorl dec lds jns out stos or jo add clc add frstpm(287 inc loopne dec mov shrl das (bad) jp (bad) loope pop aad push pop popf mov mov jnp (bad) fidivrl push mov mov push adc inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov (bad) out xor fldcw lea js ret dec mov icebp xor xchg or lods jle adc sub or pop cwtl sub pop test or sub popl repz lahf pop xor sbb enter push mov and sahf or repz gs pushf pop test popf popa jmp out leave jge sub fs cld std push cmp add loop and pop fwait jno mov ds sub idivb ficompl call mov bnd push xor lret jno inc ds push push call sbb cld leave sub fistpl jle and and dec js adc int mov push lahf addr16 insb jns in test dec xchg jne pop rorl out pop inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc (bad) pop and cmp ja mov mov pop sub xor xchg inc mov mov or mov loopne (bad) cmp xchg adc or push ss sub fbstp pop in pop movsb and jbe mov mov pop or fistpll add pop xor daa inc mov mov mov rcl lds dec lcall jo in push mov xor inc loop mov stc xchg sbb insl outsb jmp mov lock enter jmp fisttpl test inc mov xor mov icebp mov movsl xor imul loopne jae call call mov add aad xor pop xchg pop fldl hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc sbb inc mov rcrl sbb pushf test leave jge xor and cmpsb or mov add jp lods into shrl imul mov dec stos xchg out dec fdivrl aam xchg sbb gs test cbtw mov mov sarl cmp push jno orw cli decb clc dec dec jno mov sub aaa fdivrs xor xchg (bad) mov icebp test jne stos lcall aad ret sahf dec or ret es sbb dec ljmp xorl or jp xchg test adc inc lods (bad) or pop lock inc imul cmpsl les fnop mov fstpl xchg mov jno xchg inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc arpl fdiv mov or lret xchg xor pop mov in and test mov mov outsb test push and aad lods jmp mov movaps dec push push cli xor in jge sub in rorl out pop xchg mov lret lea mov ret cmc xchg test mov cmp mov pop pop outsb mov or (bad) jl push sub popl xor fwait sbb sbb mov gs pop and mov fwait jns xlat push ret push mov pushf arpl push out leave jge xor and push cmp add push (bad) in aam and xor fldenv mov mov pop mov movlhps test push cmp push in (bad) shr inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc sbb xor cltd adc (bad) push add and outsl loopne addl pop add flds fldt add stc sub test cmp ss fbstp cmp xor stos insl ret sbb pop lock (bad) pop jge inc daa mov ja mov xchg mulb mov lds xchg xchg sub cs aad push sbb out imul (bad) jno lcall and pop fstl and (bad) mov mov sub or mov in jle add mov test jmp pop insl mov pop movsw mov aam add mov or movsl mov gs inc xchg pop push sub jl mov push cmp pusha cwtl xor add adc (bad) lahf sbb mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov or adc or jae ret arpl push cmp adc or and in cmc mov mov xchg or jno xchg push clc pop add adcl cmpsb mov cmc lret and and loop adc mov and movsb mov xchg std leave push adc arpl subl leave xchg xor and mov cld std adc ss xchg rcr stos ss sbb jmp fprem1 xor out insb lods movb dec mov (bad) les subl pop mov xchg lea jns cmp stos or cwtl mov incl push fsubl icebp out inc cmp std jbe insb stc lea in mov in jmp int gs mov or sub jnp jg fcom dec mov mov int cmp inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov xor test cli (bad) ja add mov xchg in mov cmp jle sub les push ja mov sar push (bad) add cmp dec jo cmp cmpsb sbb mov jg mov add inc lcall xor mov push add jl iret mov (bad) fadds push cmp push pop out lods daa into mov push mov insl lcall les int sub les pop mov mov sub bound dec clc mov out jb jne or ret cwtl inc mov mov stos xchg add mov sub jg sub insb lahf mov jb fidivr inc les mov cmpsb sbb lea or out mov cmpsb scas aaa mov hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov mov jge jns and je daa mov dec roll daa test ljmp es sub stos rclb cmpsl push mov mov sbb push (bad) dec ret outsb or insl xor (bad) mov imul dec and fcoms dec sub mov out mov mov xchg mov outsl icebp roll ret insl test mov cmp outsl push stos push addr16 pop mov das lret ljmp dec ret and not ret dec movsb mov loope icebp dec push imul jo xchg sbb movsl (bad) loopne mov (bad) or adc out adc mov lcall enter imul adc pop xchg ljmp inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc xchg or mov lahf sub mov add repnz loopne mov jmp sbb inc insl jmp mov sbbl mov shrl and lret cmpb sbb out xchg cmp aaa sarb sarl daa dec icebp lea ret ss add add call xchg pop lods hlt inc addr16 jle xchg mov loopne dec sub xchg xchg pop mov (bad) mov jb lock dec js xor mov dec cmc rorl mov mov mov hlt pop ss xchg mov lret cmp mov jl iret adc stos cmp insl cmpl fstps mov mov scas xlat cmp (bad) mulb dec and mov jo push out lcall inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov aas xorl adc movsl jmp xchg push ret add enter or mov ja in add cwtl cli add jno sub dec mov jmp ret fidivr mov cwtl cmpsb mov stc mov mov cmp mov push jnp data16 ja or push scas push adc mov sbb cwtl and sub inc dec pop loopne mov or bound cmp pop or mov jecxz mov sti fs ret test scas mov sbb adc jmp outsb sub xchg xor jns inc xor pop pop cmp data16 mov movsb aam jecxz loope,pt fwait dec sbb ljmp mov adc jl loopne push cmp aam jnp sbb ljmp std pop cmpsl push mov jecxz daa sahf xlat push inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov lret jb (bad) aad cmp inc pop mov aad and sub mov xorl mov mov stc loopne jecxz std lret test mulb xchg roll xor push jbe dec jl dec repnz sbbl imul push xchg cmpsl push sbb or lods xchg dec dec xchg cmp mov es add jb cs mov aas push sbb lods mov push sar mov xchg lcall sbb or pop in sbb pop pop jne popa cs pop jge test aad scas dec cmp jb,pt lods mov not pop insl add sub cmp inc ret xor (bad) repz cs inc maxps imul int3 sub adc cmpsl lret out xor sub inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov je xchg aas (bad) cli xchg mov dec mov dec addr16 (bad) xor js dec push pop ja rcll dec pop xchg (bad) popa lods mov ss fnsave jnp insl mov xor mov sub jge jo xchg ljmp ss jns dec (bad) iret mov bound mov sbb insl (bad) lea dec les (bad) in das pop (bad) fs les rcr es int3 fnstenv push pop fsubr mov push cmp pop icebp fs sbb add jge cs jo dec fadd dec inc mov in scas jl cmp or mov pop adc in fsub and loope cwtl inc xor loopne (bad) clc push pop push nop push push jp loopne xchg dec fildll add jb divb jle int3 fmull push clc ja mov loop sbb int push inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc pushw xchg xchg pop push nop push add pop jo add xor mov xchg outsl rolb loope cmp call and dec in cs mov pcmpgtd dec mov pop mov sbb xchg pop out cs js into mov outsl popf or xsha1 cmpsb dec js into cmp pop cmp cmp cmpsl into mov insb movsb adc jg jge jo cli imul xor int xchg mov aam cmpsb insb add sbb add lahf jbe fisttpl cmpsb push adc or cmp (bad) jmp rclb cmp pushf mov mov lock push xchg xor or xor popf repnz test (bad) or sbb sbb repz xchg mov gs xchg adc movsb jmp scas aaa dec loop js (bad) popf int xchg dec push jmp gs inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc data16 pusha xor jno push jg inc outsl loopne nop cmp inc push hlt xor addr16 aas xchg sub dec ss sahf les arpl lret push mov out push insl adc pop aam pop cmpsl imul mov gs push mov mov icebp xor xor mov push mov aad xlat popf (bad) jae inc inc xchg (bad) dec sti sub or xchg push push add pshufw sub adc add jmp xchg lahf and cmp imul adc loopne push or daa sbb cmp leave mov aas in in jo cmp cmp adc lret mov les and icebp mov dec jge sbb imul lods ror xchg hlt lods repnz sbb xchg pop movsl (bad) int3 stos xchg add cmp inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov adc pop pop mov popa and ds sub (bad) sarl js aad push and movl movsb movsl inc add sarl popf jp pop and pop shll xchg lods mov sub sbb mov xor xchg mov dec jae sub pop fsts mov sub mov push or (bad) scas push fwait sub lahf lcall aaa and pop xchg (bad) mov or dec xchg out inc push mov sbb xchg dec pop xchg cmp push or jg gs shlb les xchg les and loop push xchg xor adc lods lds repnz notl (bad) enter xor sub and dec int enter push lret hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc or mov sbb xchg mov into ss repz push jmp sub pop jle insl pop mov test cltd call and pause daa lock es lock pop faddl mov cmpsb scas aaa mov xchg adc sub add hlt xor pop sbb mov xchg ror mov sub cmpb mov cmp and mov dec xchg jns inc cmp pusha sbb xchg mov (bad) inc pop xchg add add dec and inc pop and jl cmp xchg push mov cs mov les lods xor in inc add stos in xchg push xchg inc ret inc mov mov mov (bad) ds gs out push sub test rcrb fcomps hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov popa cwtl into (bad) into dec popa pop mov (bad) cmp cmp sarb pop insl pop sub fiadd lods push (bad) sbb mov (bad) xor sbb mov lcall inc into (bad) pop call nop adc imul fdivrl lds mov jo xor mov xchg ror pop out mov cmc and pop mov push rcrl in cmp les mov xor inc das inc jp xor fild loopne rorl sub and scas dec xor xor ret mov push das xchg popf jp adc (bad) es cltd loope ret pusha (bad) mov sbb (bad) (bad) jecxz dec sub mov xchg dec jo in ficompl aas push daa fdivl in daa repnz or (bad) mov iret jno adc inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov pushw movsb movsl sahf cmpsl (bad) push fmuls add insl mov sub inc (bad) mov xchg sahf repz mov fwait cmp add in arpl std sbb push (bad) jge sub idivl adc insb or jne dec mov ret outsl mov into add ljmp jle fstpt add stc test iret int xchg mov mov inc iret push test pop pop daa fsubp lret jb movsl cmp je or movsl pop push sahf popf das pushf mov mov iret ja (bad) repnz pop pop aad push cwtl pop push or pop out imul in inc jae cltd and jno adc push push pushf push iret aaa in popa (bad) mov test std mov pop vmovaps add hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov push mov stc mov jo call mov leave dec sahf add insb jmp repnz and and mov mov cmp jae jnp pop icebp xchg push in rolb inc pop insb in jne push mull stos out int mov testb mov sbb or dec push mov xorl aad leave gs clc loopne pop imul sbb mov inc sbbb movsb cld int (bad) and pushw dec mov ret sbb lods xchg lret inc or sbb ljmp xchg inc ds mov sti test sbb mov in (bad) cs pop dec sti addb jmp push cmp mov inc jg in fdiv les jno and or fdivs fidivl nop xor mov mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov or mov sbb dec ljmp and in add push add and cmp xor mov cwtl pop out inc mov lock lock jmp (bad) lea in insb cli into out xchg pop mov mov pushf mov push push scas daa rclb dec mov or frstor loop fsubs lret outsl add xor sahf add pop push lret (bad) adc cwtl int3 cmpsb scas aaa (bad) cmc adc mov sbb mov xor sub cld std je (bad) cmp test andb sbb add es dec sbb mov roll icebp fistpll cwtl xor gs jbe push imul pop and fsubrs repnz cmp jne dec pusha cmp mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov (bad) repz jns push addl and mov mov adc sbb and push jle push lods sub pop push lret lcall out xchg mov inc (bad) xor cmp or and shrl lahf sub aad stc cmpsl in scas inc cli pop insl dec clc inc pop adc add es cmp add mov mov inc popa cmp (bad) push (bad) bnd call jb nop fist dec cltd loop inc dec xchg in jecxz (bad) jnp mov insb ret mov aad or out xor jb scas and hlt sbb cli (bad) jne inc xlat and aaa sarl dec test lahf nop jecxz (bad) popf sbb sbb and mov movsl cmp mov inc and icebp jl lods int3 xor mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc loope adc xchg cli imul mov mov test adcb mov add repz in mov dec (bad) cmp lock and mov adc cmp push ljmp inc ror jb add jbe mov jp iret stc pop (bad) xor stos pop sub shrl sahf jecxz xor cmp out stos and xor (bad) aas push mov xchg repz (bad) aam pop cmp sub repnz or cmp je ja ret repz rol es mov inc or add fwait cld movsl loopne xadd mov insb lods outsl mov pop out imul fidivl popa mov insl inc mov push sbb mov adc mov pop mov push jg mov jmp inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov or ret insb xchg dec mov xor mov stos jmp fadds scas insb sub add and shll fild fist lret jnp jo call jbe sub and mov ja lods nop jp sbb sub scas addb push aad inc cmp incb fistp scas jno cmp mov out into ficompl mov (bad) aaa jae mov fnsave xor mov sub inc enter je loop mov push ds imul push dec pop pop mov test or lds cmpsb mov xchg pop ficomp loopne mov xchg mov sbb (bad) jo jecxz int push data16 inc xchg sub push mov xchg mov xchg inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov ror or (bad) mov jg add push pop aad daa ret push sbb cmp cmp dec ret lret gs sbb popf ret cld clc (bad) push (bad) jecxz iret inc push inc dec out ret add movsl xchg ljmp popa mov divb adc add pop mov sub add out je push mov fwait in cld jl test loop push mov sub sub xchg jp lahf (bad) repnz and movsl ret push fwait push jecxz jb fist jbe inc movsl pop mov std pop out lret out lret je insl jmp repnz lret das test pop cli mov mov lea jmp push shll sbb inc push push out (bad) push or lds xchg in cmp fcmovb jae jecxz divl int3 ffreep inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov pop mov push mov jb fistl lods adc orb sbb out in stos insb mov ja movb rol mov mov notl adc jmp dec daa adc jae shl movsl lcall jle mov mov xorl mov pop pop cmp and mov test jne fwait mov (bad) lcall inc cltd mov popa rcrl sub lds subl pop lahf sub mov xchg dec stos insl stos icebp js push inc mov jmp mov es ss xor je mov jl mov aam out repnz fisubrl out aas cmp adc lods xchg lcall xchg lret (bad) lret test dec sarb sbb repz inc arpl hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov dec xchg mov hlt dec addr16 jp add jbe sub xchg mov test jl adc jo sarb add in in ret test sbb mov push add xor jl outsb pop cld lods jns pusha mov xchg sti fdivs sub push cli xchg jp jno jle xchg push clc fimul jmp fxch lcall subb push push (bad) dec test push (bad) push out out ja jecxz cltd divb pop push loop sub xchg fistl sub jno lock scas and hlt sbb cli mov pop sub or xchg enter ret pop dec sbb cmp test jb pop dec clc xor push sub push adc cmc movsl lret dec fwait cwtl sahf xor jmp xlat inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov push lret mov jbe dec sub fs (bad) fld1 fwait popa pop sahf sub or cwtl xor iret lahf mov cwtl repnz aaa in movsb test push xchg sub jge ss adc push xchg dec xor into mov icebp dec inc add cmp cli pop insl dec mov shll outsb jg sbb add cmp mov outsb stos push sbb (bad) dec pop sbb lds cmpsl lea xchg adc pop roll adc mov ret adc push popa das cmp cmp (bad) into dec jno mov or fs cmpsl cmp jl dec pxor xorl sbb lret repz in add lcall mov cmpsb ffree inc ljmp arpl jb inc das andl popa mov pop jo adc std push inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov push orb pop ret daa mov data16 cmp es dec fstpt pop lret jecxz xor (bad) sub call cmp and adc stos icebp dec mov icebp sub in add outsb aad xor dec ljmp stos das sbb push cmp stos and cmp imul mov popf jp sub lods dec leave (bad) pop jge inc xchg fidiv xor hlt and test mov sbb cmpsl mov push mov imul cmpb repz divl dec sub call mov adc and fsubl inc mov add push fldl mov jo cmpsb adc gs xchg data16 enter lahf sub inc add cmp in dec cmc (bad) mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov hlt dec xchg aad subl les rcr lea (bad) mov out cmp call lea xchg movl xchg jne repnz (bad) std pop inc mov cmp lret call mov mov pushf mov dec mov dec rolb ds loopne dec and xchg scas (bad) mov fwait xchg dec cli dec add sbb pop sub jne fs jae fwait sbb and jne push pop xchg ljmp or or sbb clc lahf insb pop lret jecxz daa mov js into add sub mov cmp pop adc push mov lods out lcall jnp sbb cmp mov sbb cmp fisubr outsl mov iret fildll insb dec adc ror call testl inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cld xchg add xchg inc std fs pushf jns xor inc cld in ss mov xor stos inc pop lahf add push dec jge mov and or cmp ss sub xor jno sub mov pop jns out (bad) mov sub cmpsl jae pop out imul sbb and lret test repnz adc scas aaa cmpsb loop js push mov arpl lret testb jl jb sbb je xchg jge outsl inc daa mov lea add push pop out lods sub mov jg jns sahf jns inc pop cmp pop inc aam push sub icebp fnop ror test notl mov out addr16 sbb or mov cmp aad mov idivb mov add pop int and fwait or cld inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc inc cwtl pop lock notl loopne imulb insb lods test (bad) push cli scas mov inc call test mov jb shll mov adc adc ja testb ficomp fmul icebp je push cmp iret or push mov aad jmp fwait xchg daa ret push (bad) ljmp addl aam xchg std mov pop popa or stos or addr16 dec das (bad) adc sahf push add dec loope pop movsl ljmp stos daa in inc addl ja int3 hlt scas mov cmp stos imul xchg cmpsb in inc pop int jne (bad) push out daa fdivrp dec int mov mov sub pop inc mov ret jb roll jbe icebp and les imul inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov data16 pop mov push or cmpsb out imul and in ja ds xor cs jle cmp pop push mov adc arpl add movsb mov xor jno push xchg mov inc stos ss in mov mov (bad) lcall stos lods lea imul aad xchg jno ljmp lods xchg out ss (bad) mull push lcall cmp mov rol movsl jl insl lds jg int3 gs push orl nop cmc add out loope dec aas xchg lods test mov pusha rcll cld inc mov mov sahf movsl and pop mov sbb lahf cmp mov jmp mov adc daa mov push inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov insb dec js sbb std daa insl jmp ja xchg fwait mov pop push lods sahf rcrb (bad) out dec push push ret fs xchg sbb xchg xchg adc (bad) sbb pop dec cmp sbb test orl aam mov dec lods scas es xchg adc shrl dec fstl xchg push lea ss cmp and addr16 out mov and enter xor xchg mov jg test xor fwait cmpsl jmp lods hlt dec jo adc loopne in cmpsl aad (bad) insb gs or test or loopne sub mov push out sub in and xchg xor sbb loop mov mov daa xchg inc jns sbb and jle pop pop sbb xor insl or test xor mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc pusha mov dec pop push push mov adc sbb in dec imul dec movsl dec insl (bad) jp gs (bad) popf xchg loop aaa (bad) pop (bad) inc in and mov movsl lret dec (bad) lods sahf xor cmp dec jae sub xchg int or clc loopne mulb insl lods test test cmp lret or in adc mov stc (bad) nop lret test (bad) movb mov fnstenv dec xchg dec cwtl cs jb mov fistpll mov or stos scas (bad) fldenv pop push push pop inc sbb jl std das push cwtl and jge xchg lea stos xchg mov scas mov (bad) jg or push sub jecxz jl cmp aam pop xchg mov push adc hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc lret mov fs dec popl dec imul jmp jecxz cmp cld sub jnp inc leave cmp jb inc js dec sbb (bad) idivb fwait or mov insb push mov cmp fsubl or jo maskmovq clc adc (bad) (bad) rcrl adc push (bad) xor jo add imul in dec js xor and or adc add in or or fcom ficomp movsb rorb cmp cli xchg dec mov push inc mov lds adc jo fldenv sbb mov int3 jnp hlt inc (bad) idivl mulb lret push out sbb jp mov jbe push (bad) mov fldt dec sub out fnstsw aad cltd cltd inc hlt negb (bad) mov xchg lock pushf mov mov add fucom inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov es loopne cmpsl sub movsb inc ret adc sti mov mov es lcall movsb and addl jle add mov jmp pop (bad) cmp sbb or mov sahf into mov jae out add (bad) mov rcll push pop cmp sbb push cmp cmp icebp or inc lcall aas xchg pop adc test mov sbb aad xchg test or pop out xchg xor aaa cli cwtl nop jns int3 mov in inc enter jecxz pcmpgtd sbb cmpsl int3 mov (bad) aad pop mull fdivrp fnstsw ret and mov movsl xlat pop mov mov cmc enter xchg xlat add fnstsw pop daa iret pop (bad) pop cmpsl (bad) inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc xchg fnstenv sbb jo in sub adc lea xorl movsb and ss addr16 inc adc xchg fdiv imul push cwtl test fadds cmp cmp mov lods cmp outsb stos jmp and gs xor pop aad rcl push outsb mov (bad) test inc ror nop mov mov (bad) lock sbb fsubp lret jb inc jo inc pop mov aaa dec mov mov dec pop push lds xchg icebp add psubb dec mov imul gs or call mov enter or fidivl enter cltd mov int cmc sbb ds mov jl xchg ja xor fidiv mov jp jb jns outsl js or mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov outsb lea cltd sbb inc inc mov ficompl xor out xchg mov lcall or xorl insb mov enter (bad) leave xlat js mov and outsl imul lock push outsb jmp sub inc js mov sbb push out iret mov icebp or and mov out xor scas stos (bad) lea (bad) mov ret sbb fldcw cmp add jbe loopne push sub pusha pop xchg adc jns out jno dec sub lret mov call or repz and (bad) lcall and cmpsb and sbb add sub jl arpl xchg int mov fmuls rorl ror or inc stos cmp movsb sub jno incl test hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov pop sub (bad) push or (bad) enter or int3 push adc mov in mov int insl scas roll scas and ret mov add (bad) push adc lret add loope push xorl or lret repz (bad) (bad) paddsw xchg decb jecxz push mov stos jle outsb mov jecxz subl pop imul push cmp pop repz pusha rorl ret inc call adc dec fidivr int fistpl imul out fsub sti mov add jo sbb call mov push ret je jns out imul jle mov dec in jne or push in jecxz and inc pop (bad) sarb xlat rcrl outsl dec adc es jne push mov inc hlt adc cmp inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov je pop add into ret xchg aaa sarl arpl sbb xchg inc mov cmpsb stos jecxz sub add sbb jno dec rorl mov xchg adc fisub push hlt outsb pop insl (bad) (bad) xor add jp ds push push sbb iret adc xchg sarl fsubs scas sbb adc mov push sub outsl inc mov add bound inc daa xchg inc jns cltd test daa popa jns mov jp sti add hlt decl call je push and lods cs iret xor mov subl aam adc out out xchg sub sub mov movsb es and mov test xchg xchg popf mov loope daa xchg pop cmp mov insl dec out push xchg inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc nop push xchg pop adc addr16 adc sbb and cld add lret jo sbb pop fstl adc sbb pop pushf xor rcr xchg mov aam push mov daa mov addr16 mov or (bad) lods cltd jmp jno push adc test xchg (bad) or fsubl pop jge aam out push sbb push movsb insl gs sub addr16 inc sub jecxz aad xchg or aad push (bad) inc addb push aad push scas dec add in sahf inc xor and push xchg mov ror lahf pop data16 fdivp dec ret jg xor fsubrs int3 dec xor sub hlt ja add mov xchg scas add iret cltd loope cmp aad sub or or (bad) push fcmovnbe insb inc push or inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov xor (bad) and inc mov jno in ret test mov (bad) inc je sti push add fcmovu jns mov cmpsl add add mov mov insl data16 pop xchg aad subl rcll lods cs out jecxz cmp push jg fcmovu lods dec fidivrl call (bad) popf sbb add out mov mov xor mov data16 test jl cmp insb push scas rcr cwtl xlat add fnsave mov push fidivl outsb insb lods test jl xchg sbbl cld dec mov cltd jge and inc cltd mov adc push imul adc cmpsb add sbb xor (bad) ljmp leave cmp adc out mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov and add sub mov inc xchg les dec and repnz jge xchg adc mov fmull outsb fdivp fdiv xchg mov (bad) xor jb,pt fidivl (bad) mov js incb mov dec cmpl inc inc jg xchg (bad) rclb cmp adc movsl and (bad) enter popf xor inc daa sbb mov push sbb lods lcall push mov mov xlat mov cmc loope lea add rcrb (bad) insb lods and sbb or out cmp jne popa xor jle rcr neg sbb xchg xor lahf (bad) jbe pushf jl and pop adc pop and in std pop cmp sub aaa inc or (bad) xor aam adc add sub scas rol xor hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cmpsl fs popa leave lods push outsl stc dec stos pop rcr (bad) mov out outsl out popf jg rcrb dec ds mov adc and popa sbb dec jae mov mov mov jl (bad) int gs push and or je mov pop repz pop mov test (bad) mov mov mov xor fisttp dec mov jnp jnp sahf jo roll bound xchg jno jl add ficomp or xor inc pop in push push mov jmp scas pop and sub adc lods popf inc roll mov outsl test add jl push bound push and cmp or mov ds ret mov cmp pop flds sti sub cmp out jae jo adc pop mov hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc cmp fbstp dec lds in pop pop int jne pop rorl bound push lcall hlt mov addr16 movsl iret dec test sahf xor cmp imul movb jp loopne cmpsl xchg xchg adc or daa call mov and jnp outsb mov movsb test pushf dec mov mov pop popa mov xchg cltd pop inc lahf sub inc add rol adc mov jg add fs pop cmp mov fstl xor dec and lcall jno in insl scas (bad) movsb and divl mov test jg sub xchg fcoml or cwtl inc inc sub mov lock (bad) inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc jl push and jo pop xchg sub gs xchg lahf and cmp push adc push sbb sarl lahf cmpsl (bad) xchg clc fmul cmc adc (bad) in insb iret inc mov imul add xor xchg mov or xchg (bad) leave inc or jl fcmovu cmp jle cmpsl (bad) xchg pop pop xor adc clc fildll (bad) pop not jl (bad) push add imul ja dec rcrl xlat lods mov out mov mov enter mov jnp jp addr16 out ret stos loopne (bad) adc add mov mov inc mov in (bad) negl mov int3 gs ss mov pop jle push push mov push pop sarb push push ds adc cmp arpl sub xor hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov in jbe scas adc xor lcall adc and (bad) mov sub fmull int fs mov mov outsb daa xlat lret push addb pop sbb mov rolb (bad) data16 cmp sub fldenv (bad) jecxz mov cmpsl popa lds je cmp mov repnz (bad) xchg xchg in cmp scas pop jl xrstor fnsave mov xchg mov inc mov aam lock sahf mov pushw inc xchg cmc lods lock mov mov mov xchg pop dec pop pop or daa lock es lock pop fcomp loop fnsave test scas mov popa sub add loopne ret and jmp adc lds cmp xor es cmp mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc xor xchg pop ds xchg ret jmp shlb incb test lds xor addr16 and outsl lret adcl shr adc inc orb or or mov popl push int aam enter je test push mull stos push (bad) xor sub scas and ret adc fwait sub sahf and push and aam je mov (bad) (bad) js (bad) jp neg loopne xchg and push cs pop xlat repz fwait sbb jb iret mov mov xor mov rcll int cmpsl in push or lret add push sub das push test mov xchg dec inc outsl ret insl dec dec inc pop mov jg sbb add into es cmp xchg push rcrl imul hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov xchg (bad) jl mov sub pop xor out loope out iret xchg negl int xrstor fldl ret cmp data16 mov stos pop fwait mov lcall mov mov sub stc pop addr16 pop cmp negl fwait popa pop bound or loop mov and jno in inc mov jmp lods mov push imul mov sti pop and xchg add jg stc and aas sar pop out cs pop dec jns adc jmp xor adc add add lret mov (bad) les mov push lret lods repnz sahf cmp adc and data16 mov rclb sarl imul pop jbe mov enter adc dec js test mov aas mov mov stos (bad) jnp inc inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov repz mov dec push mov mov pop jge inc and xor cmp ret cltd leave xchg popf cmp hlt xor data16 push ds imul jl xor jp imull jecxz xchg push fstpl loope mov sbb lods scas add mov sti jl in aaa test scas mov or fnsaves aad std and and or inc add mov cli ret rolb cltd outsl mov jle rcrl aaa pop cmpsb daa dec stos shrl inc lret mov es and negl push fdivrs lcall aad xchg cltd inc mov adc xor arpl mov call xchg add ja sub push (bad) loope adc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov pop xchg mov stos data16 cmp pop aaa and leave pop loop jl mov dec jbe adc mov add push inc xchg sbb sub ljmp leave mov mov adc mov fnstenv dec mov jmp pushf mov dec in std sbb or dec mov lds in call fcomi xchg add adc jmp xchg cmp call xchg cmp jp or shlb add pop sbb add in mov pop les enter (bad) popf adc fimull sub lds ret leave jecxz mov movsl add fucom push mov hlt dec jo and lret test lock loopne sbb or sbb addr16 cmpsl or mov dec push inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov or sbb and mov push mov out leave lods aam or sub mov pop mov bound jmp dec and stc subb push addl cwtl cmp sub (bad) inc adc jl dec in xchg xorl fiadd xor and pop mov lret ljmp mov test dec shrb xor pop enter add dec adc mov mov xchg mov pop xchg loopne or mov lods pop xor xchg rcll fwait sbb aas inc iret mov (bad) xor sub data16 sbb pop add iret add pop cld lods jns pusha mov mov fdivs adc daa pushf aas into dec arpl leave inc fidiv insb sub xlat xorl fidivrl sub lds lcall mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov (bad) leave inc stos jne push dec stos mov sarl lcall mov adc xchg (bad) mov or aad pusha pop into js orb movsb in add stc js mull mov ss mov dec mov dec cmp popa jb push mov xlat add cmpsl mov mov cmp adc or mov pop xchg push xlat mov cmc loopne adc or call sub pop push adc jo add add xchg enter dec les fcomps lahf sbb xchg cld jo xlat adc dec push xchg data16 hlt sub pusha fmuls jo aad pushf or xlat dec loopne,pt xor jo adc mov (bad) xor pop aad adc and dec out xchg (bad) leave inc cld inc jl pop ljmp hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc lds in jge lahf lret inc xor pop out ret stos loopne out fstl push mov pusha shrb and adc imul mov imul lods test leave arpl ds fistpl pop or and sbb jne out jne or cld pop sub mov out std push xchg mov jle lock mov and mov mov add cmp fcmovu xor sub vorpd xchg pop stos mov inc (bad) push dec aam dec out mov mov outsl cmp lret icebp jae or (bad) mov cmp (bad) dec pusha cmpsl into mov orb mov pusha ja (bad) hlt mov adc lret stc sahf xchg mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov fsub inc mov test pop jge push lcall ret cltd leave (bad) je fsubrs push mov sahf inc add mov dec jae sub pop fsts mov inc loopne mov or in add movsb cld sub sbb jb fnsave mov cwtl in sahf shlb sbb mov ret jl jle out iret into mov inc daa aad stc cmpsl in aas ljmp leave mov sbb adc add xor mov lcall ds xor (bad) ss xchg mov dec fsub iret ds pusha dec int and ret mov add mov add jbe and aam je mov pop xchg js pop repz divl stc sub (bad) out mov mov add inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov xor std or fsubl cs add mov sbb mov cmp jns jecxz les mov aad daa xor add mov jle cli xchg (bad) sarl xchg ss lcall adc dec inc lcall dec call pop popa lods dec ret (bad) xchg adc xchg xor mov iret mov dec repnz popa movsb push insl pusha dec ljmp mov ja and nop cli jne daa jp outsl test inc pop inc push xchg jno adc (bad) popf sbb or mov ficomp push jnp sti fidivl mov lds out mov and hlt popa loope outsl add sub in loope scas (bad) pop test loopne stos sub mov addl cli dec add mov or inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov int frstor scas aaa dec loop scas push xlat ljmp repnz mov je pusha pop jo ret bound stc dec pop xchg dec stos mov pop dec sti addb jmp out and sub xchg dec mov mov imul lods mov sub stc bnd rcll cmp stos push lock loopne pushf out and or inc xor sub lock cmp cmp ds jle pusha shrb xchg jae xchg xor push pop scas pop lods test or gs movsl rcl sub cmp mov mov rol sbb or and mov push xchg test cltd leave loopne mov dec fadds mov mov mov aad outsb loop movb jg stos jno lods bound cs sbb jl inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc jo xlat pop lret aam adc insl push and js mov gs add pop ja fistp dec adc jge inc aas mov pop cltd cli sbb mov jae add ret int sbb ret xor jge pop xor mov sarl mov bound sub repz rol es adc dec mov cmp jl mov dec ds mov nop cwtl test sub push mov jno divl clc dec repz nop mov lea mov xchg sbb ret push nop pop pushf cs aad inc ja and outsb pop pop mov lahf xor std je mov push mov cs pop dec sbb idivl cwtl fs sahf mov inc aad inc sbb fdivrs (bad) (bad) dec dec stos mov cs in mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov jge mov jo (bad) popf out rcrb das call lret (bad) mov ret mov je pop xchg sbb lahf mov and aam je mov pop xchg adc pop jns out in dec sub jmp push dec dec jo (bad) divb rcr stos test mov (bad) or stos sahf enter (bad) (bad) sahf add in mov jl jns xor pop cmp stc sbb stc mov cmp in leave cmp adc fisub insb lods scas pop inc aad xlat mov subb fistp mov movl rorl xchg test scas xlat xor shlb cs mov mov int xor push jmp mov mov dec ret popf jp push xchg mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cli and jb mov xchg adcl or inc nop std icebp popa or fwait dec mov dec lahf sub xor jp jecxz jmp inc adc jo adc dec sar inc js push mov fistp sbbb sahf cld loop and inc addr16 test std mov pop ss mov cmpsl (bad) test add cmp bound (bad) mov jg popa add aas fs inc xchg rclb gs repnz outsb pop je adc jl (bad) xor adc pop gs pop mov pop mull fsubp lret jb inc mov cli push fisub cmp scas cltd pop stos add mov jne mov jle xchg sarb xchg adc dec sub mov mov mov add out fisub mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov (bad) push aaa sbb cmp mov xchg sbb push fstpl mov mov aam jge adc rolb xchg dec xor pop sti add push leave mov mov add mov mov xchg mov aaa shrl (bad) jg test jge xchg adc int3 pop mov xchg jne mov push pop jge dec xchg repz rcll sarl es pop addb inc mov inc or dec sarb add mov (bad) and inc dec mov pusha test int bound pop jge inc repnz jb das lret cltd leave jg rcll cmp or jle addr16 cmpsb and call sub pop push or push cmpsb xchg dec jo add sbb xor jecxz das cld jns in pop out and mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov test std add jns mov sti push mov aas mov xchg rorb pop insl (bad) lods adc outsb jg xchg add mov mov cmp mov mov and push in dec (bad) cmp lods xchg je add cmpsl (bad) xchg sbb jno (bad) out incb jmp xchg xor (bad) mov cli mov or xchg int3 inc arpl mov xchg rol nop fst or test (bad) (bad) loope dec cmpsl popa loope sub scas add lret mov or test scas mov mov and pushf shrl pop ss repz pusha or inc xchg stc and (bad) (bad) mov xchg dec sub adc mov mov mov loop (bad) subl stos pop rclb mov hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov or insl lcall mov gs inc test dec js popa movsb addb dec ljmp mov mov outsl (bad) add fimull call mov mov dec sbb (bad) pop cmpsl lcall or stos insb pop out or iret xor jno mov mov push outsb dec jecxz dec mov fsubrl daa repnz xor js fucom inc inc pop aad push loopne test mov add cmc popl ja in inc lock xchg (bad) mov fdivl jns mov sub xlat ljmp jns cmpsl fisub cmpsl add mov dec rcrl jnp inc stos ss mov notl xor and xor cmpsb mov mov ret call je xor decb hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov into popf pop and lock clc mov rorb add cmpsl iret dec pushl sub cltd push mov jbe cmc fwait std lock (bad) pop pop idivb cmp in sbb out add movsb cld dec mov cwtl dec lcall aaa test scas push push push xlat jo push sahf dec adc outsb push cmpl in cmpsb mov cmpsl gs mov cmp xchg dec pop in (bad) xlat (bad) mov (bad) adc lods icebp (bad) ret xor rcr lret inc add fxch push subl cmp rorb xchg adc and mov cbtw mov daa test mov addl dec ljmp push out mov adc cltd jle inc xor daa int mov stos inc sti cmp pop jno nop rorb cmp adc mov or inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov pop fstp aad or ret cltd leave jg ds cmp mov arpl add (bad) mov movsl xor imul pop aad es lods test leave sbb mov inc das mov in inc jae pop sub mov mov mov jnp mov nop adc sub pushf test test sub add add aad mov pop xchg dec mov imul mov add and xor lea xchg mov pop ds out pop into icebp fildll or insl lea into pop and (bad) fadd or cld adc test dec shrb push mov sahf inc rorb cmp fldcw mov arpl dec pop aad inc and push jle lcall xchg dec in sbbb movsb cld mov fistpll and hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov jg cmpsb inc loop sbb push fstpl mov mov xchg icebp fnsave mov cmp push mov jmp push repnz insl cmp stc pop dec xchg outsl xchg xchg sahf jecxz scas cltd fwait cmp lcall ds sbb lods dec ret rorl lcall and cbtw mov and mov addl dec pusha cmpsl into das stc orb or mov adc iret pop repnz cmp stos dec je inc inc add jae jp test inc cmp hlt push rorl lods dec daa push adc daa cmp cmp std das cmp push mov xor push mov xlat xor fdiv xchg mul popf (bad) insb gs or test dec mov add fild int fbstp popa (bad) mov (bad) mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc adc inc push xchg (bad) mov movsb lods (bad) xchg or daa sar dec push test mov mov lods sub sub adc push rcll mov pop dec call dec stos stos lds in mov xor sbb jnp mov and push dec xor mov push leave je fsubrs push rorl xor outsl mov xchg or insl jle addr16 (bad) sub call sub inc mov mov fisubl sub mov jno sbb int xchg pop sbb fldl inc dec imul out arpl xchg lahf sbb add jo jp push push leave (bad) in ret jmp repz gs stos (bad) pop lods out or (bad) cmp cmp mov jecxz inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc lea sbb int3 xchg cwtl loope daa cmp cmc aas fcoms imul jg xchg (bad) xchg adc sar jmp es cli sar mov insb outsl test lahf pop data16 jbe sub sbbl js add mov mov add jbe mov fld push adc cld xchg pop cmp cmp fidivl (bad) xchg push push or jb jo gs mov stos cmp inc dec pop mov inc xor dec loop mov mov mov cld (bad) icebp mov xor jmp aad xchg or ror or sarl movsb sub jno push mov sub inc das mov sahf ds outsb jle ret stos and xor jno insb or gs out cmp mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cltd daa push adc lret (bad) mull aam in dec sarb negl shlb push ds imul nop js imul ret (bad) and jmp loop roll testl jmp or loopne push inc mov xchg sbb pop pushf ror idivb pop vmovaps lods xchg std stc inc lcall cmp jle xchg jg popa add dec mov pop fstps sub ds outsb mov mov stc bnd ljmp xchg call data16 dec js sahf mov cmp push (bad) mov lock cltd cmp in (bad) out xchg push nop sbb cmpsb mov rorl ja pop inc dec sbb push rorl lret ljmp inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov ret mov xor inc inc or sahf cmpsl inc or loope loope out inc xlat mov pop xrelease out adc imul out sbb add sbb xor pop mov mov gs jmp inc stos inc imul stc xchg leave pop jns ss stos lahf cmpsl (bad) xchg adc add xlat dec cli pop insl dec push inc sbb jg fdivs sbb fs test jne dec je xchg pop je adc jl (bad) imulb mov sbb mov lcall rorb pop mov and ret xchg inc mov out cmp add mov push mov xor outsl xlat mov mov jmp loopne pop addr16 push push or out or sbb and sti je pop and fcoml leave pop sahf push inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov xchg cmpb xchg push inc jl pmulhuw imul add mov mov pop or cli pop insl dec dec ret rolb icebp jae cltd cmp adc test cmp and (bad) mov outsl out push push lcall dec jbe sbb mov cmp xchg pop ret cmp fisubrl xchg sub bound mov dec inc or sub xchg dec xchg inc fistl lahf into test adc inc movsb mov lock and movsl cmp cli into incb sahf xor xchg mov mov adc xchg pushf loope movq popf repnz xchg fldenv in xchg gs adc mov fcomp jno xchg outsl cli aaa and sub xchg adc std push inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov mov ss fcoms daa aad xchg or mov pop insl (bad) xor aam outsb pop xchg les cmp bnd inc xchg pop mov pinsrw dec push (bad) sarb (bad) adc cmp popf out out and imull xor rorb cmp sbb (bad) movsl add mov or lods xchg and xor lock dec mov push inc shl adc push sbb add (bad) push jmp mov repnz test sbb add arpl andl pop ss mov popa (bad) sbb push mov sbb insl (bad) mov jg sbb add mov cmp xor ds push out push dec and fidivr or in xchg lcall inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov in ja enter pusha aaa addl adc rolb (bad) loope push out inc or add out fidivrl sbb jnp data16 xor (bad) repz pop inc cmp rclb xor xchg cmp sbb ret das cmp ljmp jle push mov xlat ret ss lods pop aaa lock loopne push and call mov or or mov jae jae in dec js xor cli adc cltd cmpb cs negb dec push or lret jge ss sbb aad stc mov push ja add push leave cmp jmp cltd fldenv pop rclb lcall iret xchg sbb dec imul outsl movsb dec mov cmp sub sahf pop sub test int mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc inc mov mov pop mov stos in cmpsb mov pop xchg push add jae xlat mov pop fs outsb pop aad sub movsb inc jmp call mov jl jae out adc in dec repnz cs in sub (bad) loope add arpl xchg shrl and pop sbb int movsl xchg mov stc mov dec stc roll jmp inc mov dec adc outsb xchg push out push mov add icebp fild lds in push push lcall and push xor scas das test mov mov test dec adc std mov addl fwait push ja add cli cli imul (bad) push sarl xorl test (bad) sbb mov popa cltd stos mov dec (bad) std paddusw push mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc into cmc das xchg int icebp mov clc es daa mov dec mov pop out inc lahf jmp mov leave scas adc lret pop nop inc mov xchg enter dec push xchg adc fldt or ljmp cmp fdivrl mov push (bad) sbb mov into inc mov movsl adc sub sub sbb sar inc gs dec icebp xlat xlat lret mov mulb xor in subl in decb pop mull pop inc sbb mov test cmc das pushf sti xor adc mov push jmp addr16 jle cld mov rep fstpt pop inc notl xchg dec cli mov or and fildl pushl sub mov dec loop mov xchg mov pop push inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov rep and jno lahf push mov subb std stc mov xchg xlat out cmp insl mov inc leave cmp pop adcl cmp aad mov subb fistp mov sbb or push nop into insl dec cltd fs mov test mov cmc jl aaa cld mov ret xor test repnz lret and mov into xchg sarl stos addl inc aas mov jmp inc push rcl out xor mov test inc mov xor sub mov mov xchg lock and pushf cmp jle in rorb pop repz sub ss fldenv xchg dec cli mov add sub pop movsb and aaa mov (bad) dec scas aaa mov imul lret mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc into sub xor jg cli or dec les (bad) out das paddb and rcr lea (bad) dec mov iret cmp adc xchg sbb bound adc pop push lock bound xor inc daa xchg inc cmp xchg or xchg inc mov call mov mov inc jne call sub fwait push (bad) mov and sub das dec repnz cltd mov imul xchg jo adc repz pushf popf jl jbe and into mov aad pop xchg stc lds mov jo jp and leave inc push hlt jb xchg adc mov mov lods sbb mov idivb xor outsl imulb pop lcall pop jno inc mov test mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov pop jne inc js mov pop dec ret ret cmp mov lea in leave or outsl add loopne cmp ss ffreep mov xor xchg insl pop test pop inc mov lock jge inc adc xor cmp aad loopne mov xchg adc and fcompl addr16 jle push mov inc jmp add stos jmp out scas icebp jnp out repz (bad) cld sub cltd xor jno jns orb cmpsl mov movsb imul push test push mov jo inc mov mov imul jg xchg sahf out out rorl out adc dec cltd pop lds push int sub stos sbb xchg push pop roll adc js jp xor inc hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc cltd inc mov repnz mov cltd loope nop lea icebp push lock cmp and fcoml test or (bad) sbb jno mov mov fnstsw inc xor and xchg aaa lea jns push mov mov cmpsl (bad) sbb xchg or cmp loope push leave mov jl sbb add es or movsl mov gs outsb leave xchg push xchg xor (bad) and cwtl pop out pop lea out stos xchg jge int adc xchg mov unpckhps xchg xchg fild push jbe roll push sub jg inc jg nop jno lock xlat movsl cli in cs mov pushl sbb lret lock and pusha fsubrs out iret insl test cmc das sub hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc sahf es and mov jge pop xchg mov fmuls jp loopne dec sub movsb inc jns call sub or adc mov lahf jecxz imul adc or push push fnstsw inc mov xchg inc mov cwtl lret cli in js and in vmovaps mov in outsb adc aas inc jo jp pop stos ss imul mov pop cltd mov (bad) ds sbb inc push jmp lds push jl cmpsl xchg or scas xchg (bad) pop nop bound (bad) cmp pop notl adc mov jae adc je movsl aas pop mov mov je mov pop in pop or in mov xchg add nop sub push (bad) (bad) or push add in call inc mov jno in ret test scas mov or fcoms or lret and hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc fwait ss popf adc in std je stos cmp iret or movl sahf add insb jmp mov and inc jo adc flds mov push (bad) inc and (bad) or pop lcall mov adc std mov jb pushf jp cmp push inc hlt adc pusha jb movsl pusha fs dec sub jns ret (bad) call mov mov dec xchg fstps fimul fsubrs add daa push movsb test mov ret movsl hlt xor lods sti dec mov mov jp cmpsl fnstsw loopne add imul pop loope stos xchg dec push add or add xor fild movsl cmp cmp dec xorb lret (bad) fs jae in vmovaps inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov fdivs imul xor pop test jns int3 push cmp adc js push sbb (bad) dec pop xor xor adc mulb pop jge inc mov pop rcrl lcall ret cltd leave (bad) je fsubrs add push sahf xor (bad) cmpsl xor inc enter lret inc mov aad pop adcb mulb adc fwait jmp jecxz xchg enter dec push or add or xlat fcompl ja xchg aaa (bad) pop mov cmpsl (bad) inc add mov push jmp adc mov shrl sahf out andl rclb or push stos in out mulb ret insb or (bad) fistl mov xchg or add dec cwtl inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov xchg shrl icebp rclb imul addb push xchg sub mov push mov rcrb scas movsl inc xchg inc fild add jae xchg and lret mov mov cmp jg icebp (bad) cmp jbe popf movsl add push mov (bad) and orl imul pop cmp popa xor pop or adc pop (bad) movsb mov mov jno push dec gs mov fnstsw add repz (bad) push or lret insl (bad) ss lahf fs and add iret or push mov add mov scas pop aad cltd push sub pop pop cmpsb daa dec lcall mov mov pop lea cmp xchg mov or mov adc mov leave in inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov hlt xor mov and mov pop repz das sub les dec pop xchg (bad) inc pop (bad) popa lods mov and dec cld or gs jl cmp mov imul flds paddd or sbb stc enter inc cli jmp dec pop cli pop dec xchg outsl xchg add mov cmc rcrl xchg pop mov sbb inc dec repnz lds push jo cmpsl xchg or scas test lret dec dec jno inc mov fildll jge dec or bound mov ret scas es jo pop scas mov (bad) cmp inc xlat and pop rcl mov or xchg bound roll out sub cmp aas lret mov pop mov xor inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc fs jp out imul loopne pop stc xchg push ret loopne sub sbb xor fild or pop out jecxz scas inc (bad) dec decb mov std push xchg jne jns cltd lds popa pop jo mov dec add and mov inc ret rolb jno and inc mov das mov je adc jl (bad) arpl xor jne xchg push pop roll adc js jp xor sub cltd inc mov out cmp pop mov or in lods jle in aam inc das xchg js push in clc loopne (bad) stc xchg push popa xor pop or adc pop (bad) cmpsl mov mov jno push dec repnz mov mov pop jle int3 arpl pop dec (bad) mov loopne inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc or sti fcom std stc cmpsl in and inc loopne adc jmp mov mov gs mov cmp ffree jecxz lcall dec inc data16 cmp and jg test mov pop mov addr16 (bad) scas in jecxz push jo scas popa (bad) jl push cmp in inc mov scas stos cmp call pop push out inc movsb in mov jae push jmp cs sarl and adc (bad) out out jge push jmp push mov mov mov xor mov sahf js xchg mov xchg inc mov call arpl push jae mov fstps imul fwait popa pop push jae or pusha adc mov loop adc cmp movsb and sbbl das imul xor leave mov in adcb mov hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov rolb jb mov repz sub adc imul cmp push mov push ds push push pop dec and push mov xor jne xchg lcall sarl jmp push test movsl inc loope iret ret xchg inc mov sub int sahf inc shrb xchg jbe addr16 inc pop aad mov loopne (bad) fiadd imul xor add test ja mov and loop cmc in adc outsb test jl jbe ss sub adc fdivs inc mov jmp movsl mov xchg subb push cmp push push nop adc lcall shrl and sub popa pop insb or xchg lcall mov cwtl shlb pop jl popa cs lret cmp mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc adc rolb (bad) loope push out inc or add (bad) fidivrl sbb mov sub inc ret fisubr in test push mov pop mull fdivrp lret jb xor mov sbb push add sahf js xchg mov push andl cmp mov loopne dec mov imul adc or mov or jb cmpsl ja dec js and sub (bad) adc adc std push xchg (bad) vmwrite and stos lahf cmpsl cwtl fldt fadds dec mov sub insl (bad) mov jg dec (bad) adc fs test mov lcall ds ljmp int sub fbld push pop rorl push daa push pop into out jb jp mov cmc das cmp inc push sahf xor inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov fs push push stos push sub (bad) or into fstp mov out sub cmc jge add jo loopne mov add out sub mov jmp mov (bad) sahf (bad) push lock mov jns mov into mov or inc aad mov stos cmp adcb xchg outsl xchg add es mov xor dec jg and ret stos pop lds in jge popa lea add lods out xor xor add sbb dec lret loope push dec jg nop int3 cmp int3 push mov stc cwtl adc arpl sub or inc enter mov cwtl pop xchg int3 mov ds cmp dec fcoms and ss ja movsl aas pop mov mov in sbb addr16 inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov mov arpl sub fiaddl cs or sbb xor fbstp out pop scas loop movsb mov sahf insl das repz ljmp xchg aad sbb mov jno push incb mov xchg dec inc in xchg mov mov stos jmp arpl and mov fimull pop mov cmp iret or (bad) push pusha lds loope sbb jnp xor imull mov sub test iret sub stos pop loope lea push jle xchg sarb xchg adc adc mov sbb rclb mov ffreep js lret test mov mov pop mov (bad) adc pop mov cmpsl (bad) imul std stc inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cmpsl in mov inc loopne imulb jmp mov mov mov adc repz mov das outsb and outsb pop mov paddw push dec mov cmp pop out mov and int3 and loope cbtw sbb mov testb ret dec lret out push (bad) aaa xor sbb in add in cli add mov mov inc ret (bad) insb cmpsb mov mov mov int3 push lcall ss ja movsl fistpl stc mov in in mov mov push mov xchg add sbb sub push inc mulb call inc call adc bound fstpt insb mov mov fstpl loop pusha mov jb std loop idivl (bad) leave leave xchg fsubp lahf sub enter movsl xchg (bad) mov or adc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov lret cmp xchg adc xorl dec ret lret out cmp sbb inc loopne lods vunpcklpd mov add xchg lea call and pop daa fsubp lret jb xor cmp add xchg addb mov push loopne popa inc or mov xchg mov mov sub mov roll testl adc inc dec loop test mov cmovle jo sub std pushf jno cmc js ss jmp loopne psubq mov xor (bad) stc mov shrl sti leave mov inc pop jns jmp mov cmpl insl scas push mov xchg test inc add in xchg xorl fiadd pop adc inc or xlat test fwait js xchg adc dec insb mov adc mov inc cwtl addl inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov int3 ja jp addr16 cmp sub sbb arpl test or in pushf cmpsl inc cmc pop mov push cmpsb loopne lcall sub add add xchg sbb dec mov push fldcw pop fadds mov loopne mov testl lret repz in add lcall mov cmpsb ffree inc ljmp arpl jb xchg imul ficompl or add enter jbe (bad) xor insl pop int push leave sbb adc clc push sub push fwait xchg mov mov sbb imul (bad) cmp mov sarb and pop (bad) in leave mov and int cmp pop das mov add mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov sub inc loopne dec repz mov push lods ret pop test lret jle adc mov (bad) (bad) je outsb sbb fcoml pusha hlt mov xor and std push repnz scas add push or sti fadds in sbb imul mov jo xchg adc add es mov rcll lcall ljmp xor lds sbb dec test sub sbb cmp sbb xchg ret push adc mov push addr16 test jmp lock or xlat notb adc fdivl push add fmull stc mov adc pop adc ror adc mov mov lahf arpl inc enter xchg mov ds mov xor ja cld mov loop jle xchg call loopne xchg inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov lock cmp push (bad) popf call arpl or mov add or jno in ret test scas mov ss int outsl jno loope idivb outsb scas jmp into mov sbb fcomp push mov sub mov sbb cmc aas xchg sahf sti mov rorl icebp scas xchg push xchg cld or cmp and fidivr sub pop push lcall ja and imull xor lahf ret cltd leave jg jne cmp xchg icebp or sub insb into push jne addr16 sub loopne pxor mov stos sub imul (bad) imul ficompl pop fdivrs in mov enter call sbb repnz insb mov jns inc adc scas lahf cmpsl and iret dec add sbb in inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov insl dec dec (bad) ss cwtl aam scas push cmp test and push popf pop lods call fistpll mov ja sbb cmp js mov orb cmp push pusha data16 jb,pt cmp add scas sbb fwait subl int ja xor jne sub aaa push jnp mov add cmpsb push js mov daa or push adc orw mov outsl stc das cmp lcall fbld adc dec stos jle enter xor pop mov imul dec cli dec pop xchg dec test and jge in dec js and cmp or (bad) mov xorb sub xchg outsb push ss call sti push lods add xchg rclb insl (bad) mov jg fiaddl hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov jmp push sbb or das ljmp mov (bad) push mov push cmp adc ret mov xchg jo js popf popf addr16 repnz push iret and ret mov sub adc mov sarl pusha pop xchg (bad) and gs jne dec mov imul addr16 jo loopne enter sbb mov aaa test scas mov pop (bad) (bad) jp pop xor xchg leave in jo lahf insl dec stos inc daa inc mov mov in aaa mov mov lock subl pop aad inc push inc mov subl pop cltd jnp xor and jne push xor mov mov roll pop aad jg dec or jb,pt fwait cwtl pop inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc (bad) hlt in mov and dec into inc mov xchg add repz xchg inc mov out sbb mov es push movsl dec stc (bad) cmp inc sbb (bad) negl adc int3 gs xor lock sub xor repz ja mov insb inc movsl cli or xchg inc sub movsb cld sub mov mov push mov mov or jo (bad) fwait jae aaa lret jns and push mov rcrl pop mov cmp or loopne incb imul data16 insb daa fwait cmp mov scas or mov cmpsb cmp mov sahf push push mov lret lcall rcrl notb lret in scas jl stos fs lret dec scas push sahf xor out ja push sbb mov hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc or clc loopne jno insb stc and mov adc jecxz inc (bad) xchg cmpsb nop hlt test (bad) and gs or fnop loopne mov inc xor xchg add (bad) fadds pop fldl2e daa jne and mov je sbb push divb push dec sti add inc int3 add jg jns adc jo and pop push push inc xchg pop ds dec add xor add jge xor mov sbb mov cmpsb testl in sub clc jg and push (bad) pop sub and aad mov mov cmpsb dec xor test lahf mov out ss mov push mov jmp ret mov cmc in movsl push xor sub mov dec push xor jns clc or inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc das in test push xchg push jns xchg cld inc cwtl lret jecxz dec push iret mov (bad) fnstcw in scas mov sbb popa ficom or push mov dec sub add mov movsl sbb xor inc sub cltd jecxz sub cli mov sub js and dec in xchg pop jns out xor sti push pop inc (bad) je repnz outsb out pop jge inc mov sahf pop push adc and shrl pusha sub push mov push add mov imul inc jecxz arpl rclb fs mov test rcrl adc (bad) add cmp lret push rclb es cmovle cmp push pushf fisttpl fcmovne or pop cwtl sub sti lods clc cmc repnz fs sti call push dec in mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov loop out jmp adc js ret dec mov outsb pop mov and inc in inc fist lret push mov mov pop lea cmp dec mov lods cwtl add cli sbb fdiv jg into cmp ret ret dec test into push outsb aam inc sub adc pop mov inc bound roll sarb in sub mov jo dec mov pop jge inc lcall cmp ret mov jg sub push sahf inc xchg xchg loope fldcw adc sub sbb (bad) loopne (bad) fiadd out aas enter sub adc push dec and push mov mov or jmp imul out hlt inc jns xor cld push mov fs or or sub data16 mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov sub sub pop inc jg adcl push mov sbb lods adc andl lock xor dec inc iret push cld addr16 mov cltd mov inc push ds imul cmc fwait cld loopne or clc push pop xchg jp push cld leave (bad) jmp sub inc call xor fbstp sbb aam movsb (bad) aam push test mov icebp int push dec ja xchg repnz test lahf push mov push int3 ficom ror or (bad) in sarb jg mov mov adc push sbb inc fdivl fcompl stos sbb adc mov lcall (bad) in jl sub mov xchg mov scas es mov mov cmp mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc jno gs stos mov push add mov icebp outsb jp xchg mov adc ljmp lret jb (bad) std push leave cltd leave jnp jg sub push sahf add imul or iret jge ds or jne push dec std mov (bad) mov call inc call adc mov adc cld imul jecxz mov jns jl add fxch pop jo mov lods push cmp cli pop adc inc movsl mov xchg subb mov xor xor lods cs mov mov xor popa xchg mov xchg test adc insl dec (bad) out pop notl in mov aad fstpl fidivrl pop sbb push xchg mov xlat jge inc cmp or inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov push mov loope jmp add push gs inc push and movsl and mov insb jns xlat subb in (bad) sbb movsb std push xchg iret outsb push fisubrl (bad) mov jb adc mov mov pop mov lds into aas nop inc aam cmp or lds lcall push and xlat adc ficoml lcall testl and negb push inc cmc aas (bad) mov jcxz jge daa jle xchg rorl xorb aaa mov pusha push xor gs mov ja inc push jmp sub jne cmp or stos out fnstsw dec cmp mov jno or ja cmp pop into stos mov imul xor xchg mov inc dec mov loope jmp mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov xchg (bad) repz xchg inc sbb jbe repnz cmp fcoms fisttpl xchg (bad) loope jmp xchg shrl int3 xchg xor cmp jo jno push decl arpl into push insl dec test ficomp subb jmp jno fisttpl les inc lods cs dec xchg lds lock cmp cmpsl xor (bad) push or out lret mov daa sti adc and dec iret cmp jne dec das mov xchg stc adc cmp xorl inc aad lods or pop adc (bad) hlt add (bad) mov inc jecxz sub (bad) stos (bad) (bad) js test fdivl fucomp es aaa pop cmc lret push imul push jbe test mov inc cmp pavgw cmp add insb iret inc imul cltd jo inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc es cwtl lahf insb lods adc jb and shrl push nop std (bad) repnz (bad) xchg insl gs xchg cmp addr16 xor jecxz xchg bnd sahf sarl int3 xchg popa outsl inc inc and jmp pop inc aad js push mov (bad) jp inc pop pusha sub cmpsl mov lret outsb bound int adc mov (bad) and cmp inc dec ljmp xor cmp lea xor lret mov pop repz pop popa imul fisubl mov jbe sti xor ret leave cltd xchg push notb jo pop xchg fidivl mov pushf jl jg pop ss dec mov jno inc call xchg lea (bad) jge out mov xor insl lods (bad) pop inc inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc bound in out mull mov je hlt xor fnsave movsb cmpsb imulb push out pop cmpsl xlat popa fisubl fnsave dec mov mov stos mov push das idivb mov and xchg and push push adc loopne (bad) inc jecxz (bad) push scas push test mov cld dec mov sbb adc mov into jno jmp adc cwtl std xchg ljmp xchg daa out mov pusha pop jo in mov lcall cmp or inc insl sub les arpl dec mov xlat lret push xchg ret imul and sbb jge shlb jb mov addr16 (bad) stos mov (bad) xor sub cmpsl imul jg push imul (bad) dec dec sti add movsb mov hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov dec mov xor push or mov std sub sahf push or stos out in aas lea cmp mov idivb and xor hlt insl loope pop jle insb cmpsl jae jge js movsl fmuls pop pop aad shrl pop out xchg (bad) jae std or movsb cld dec mov add aas fidivl nop mov (bad) popf pop frstor scas push inc push xlat jo xchg sarb pop popl jmp mov xchg cmpsl add std stc mov xchg xlat int3 add xchg lds (bad) mov jg lahf inc (bad) jbe pop inc cmp mov xchg pop jns out xor push nop outsl inc cmp push push dec insl outsb aaa add gs std cmpxchg and aad xor and cmp xchg sahf xor cmp jle pop pop jl xor add pop mov inc rolb hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov call add xor sbb inc jae xchg fwait data16 mov xor fist pop (bad) (bad) or and xor std push mov leave xchg xor mov cld sti fcoms loop movsl add inc loopne jnp push leave test mov (bad) mov lds aad fisubr cmpsb mov mov subl cmp subl popf rdmsr xchg xchg popf call mov aas daa addl sub mov popf loop mov decb out repz inc adc std lods add sarl popf jp mov loop (bad) xor push and test xor movsl inc mov mov mov in jecxz push push jo mov int3 or call lods push rcrb scas imul inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov fstps repz sbb mov dec sub (bad) xor repz stos xor loop test jl mulb mov xor sti add jge dec movsl dec inc cmp sbb sub outsb movsl scas in stos jmp mov sub and das out loop push ret call dec xchg je xlat xchg push inc fnsave lcall outsl arpl xor in jl cmp or out jg popa xor iret enter out add cwtl xlat push adc enter sub or outsb sub in cmpsl pop pop fisub push or repnz add pushf adc jne xor jns push pushf mov sbb dec dec aam mov add cwtl or pop xchg sbb mov mov xchg jg insl push jno cld pusha inc pop aad mov hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov es mov subb fildll or insl lcall outsl mov jae (bad) lret push dec mov test or lods sub fwait cmpsl aas mov loope inc rcll jns outsl fisttp in sub mov imul jmp (bad) into jnp rcrl sahf sbb cmpsl rcl and push lret mov andl jecxz xchg ret pop ficompl push sbb sbb sub loopne sub dec and mov call inc pop (bad) leave fs pop (bad) jno (bad) ss enter xchg mov mov pop imul std int3 aad bound sbb cmpsl push push test add lock aas inc and inc push adc into and fcmovu fwait loope push insb lods loop mov jae outsl dec jmp mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov aas add mov je xor out xchg imul sbb lock out leave lret lea cmp sahf lods or pushl gs fwait outsl hlt xchg pop inc push xorl pop push sysret pop pop mov push sub (bad) or sarl pop in inc jb sbb xchg cwtl orb data16 notb mov xchg sub pushf bound sub mov xchg xor or mov push xchg add mov xchg jnp jmp pop frstor cmc sub mov lds mov pop (bad) rcl je xor out push gs pop rcl dec cltd movsl jno hlt lahf shl mov mov pop pop xor mov cs cmp jg and adc mov mov add in push cmp in arpl sarl mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc aaa aaa fiadd jae mov ds test fmull cmp ja mov (bad) movsl decl adc into loop lea mov sub adc loopne sysret pop pop xor push pminsw pop pusha sub stc clc inc jae imul adc fstl xchg ret scas sbb xor jns stos sahf movsl leave xchg mov and pop jecxz sahf add mov out or mov or lods pop xchg les add inc mov ret vhsubps repnz jns (bad) adc mov andl or lret cmp jae or add mov mov subl imul push je test dec sahf push jne popl mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov popa jb loope inc clc pop add lcall or fcomps (bad) int cmc mov xor xchg xchg dec lea pop sbb mov insb aas mov inc stos rorb jmp aam xlat std mov int3 pop movsl dec mov idivl subl aam sbb loop push in aaa push js (bad) push popf addr16 out mov dec push mov unpckhps add and mov jb and in int hlt fiadd mov in mov loope and lahf outsl cltd push in psubsb and negl jge sub and enter jp inc or pushf sti mov call sbb add xor xchg out lods test (bad) imul aaa jo sahf mul ljmp inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov pop mov andb mov test jne pop mov xchg (bad) mov mov add fwait daa xchg fs jo add mov push xchg cmp (bad) pop nop das insl jmp jnp push insb cmp lds lods cmp arpl jmp mov fs ds push cmp pop sbb add imul cmpsl ds or fsubrl mov mov fisubl ja sbb adc jns int3 lret jg mov mov mov jl loopne xchg in mov out lods mov jns out mov adc mov pop dec fsts fld stos sbb cs pop mov xchg dec lea loopne fnstcw imul jp mov add imul loop iret addr16 sub hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov pop ds faddl mov sub mov lods (bad) xor fs dec dec adc jl (bad) imul push mov faddl mov lock mov fildll mov out cmp cmp and in jb push stos mov popf pop lahf push out push jns mov fsubrs lea sub lcall push adc into in lea mov sub pop fwait mov test pop ljmp imul pusha jecxz imul jae imul adc fstl fldlg2 scas sbb ss pop add and enter pusha pop add stc stc dec shr daa mov ljmp jge jmp adc rcrb mov jmp movsl dec mov idivl subl hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc ds sbb (bad) push jecxz aaa (bad) popf xchg and hlt (bad) ds lret lea mov shlb ja mov (bad) movsl pushl dec mov addr16 push xorl mov pop div push xor loop mov call ret mov outsl leave mov mov pushf sub inc in sahf push jne push loop cmpsl fldcw push mov cs std cld dec pop sbb cmc cmp out cmp add and push inc mov out lahf dec push inc xchg pop dec jmp out sbb js or imul inc adc xor (bad) ss lret mov xchg cmp inc pop stos mov scas push aas cmp push dec stos shrl push ret jmp adc lret pop mov mov lcall inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc lahf (bad) (bad) lahf shll negl jmp int adc cmp mov or pop decb leave inc arpl out xchg push flds mov mov jl loopne xchg in mov out lods mov jns out mov and mov pop dec fsts fld stos sbb cs pop mov xchg dec lea imul mov mov in sub mov subb repz jo fldenv lds lods cs flds cmp test aas push rcl (bad) (bad) add xchg cmp inc cli gs mov and mov arpl mov (bad) mov inc push fcoms das mov ja (bad) outsb push jo daa mov add aad (bad) insb lods sub pop out imul inc loope add mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc cmp lcall aaa and adc cmc stos mov xchg outsl adc sbb xchg daa xchg bound mov push xchg cmp push push mov out and jo lds pop pop inc movsl pop jl daa pop mov (bad) aas subl aam sbb (bad) push jecxz aaa push js pop dec dec cltd mov xlat push push decl adc cmp push mov scas notw arpl scas sub mov mov add je in mov inc mov mov inc sbb mov xchg sub hlt (bad) and lret mov fistpll jnp out and or inc pop jg popa int jnp in stc dec (bad) xchg cmpb fnop cmpl in push test or pushf insl popf lret gs in inc jae jne fiadd add adc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc lcall mov sahf sahf ljmp or test mov xchg xor out je add xor in pop push xchg cmp sub dec xchg cmp ljmp inc pop stos mov leave cmpsl push shr xchg lahf lods mov fidivrl pushf incb mov mov xor daa push mov nop nop dec inc iret mov out xor mov ret sahf outsb cmc gs adc dec push orl lret int pop ja mov push adc ljmp rcr inc add lods add push in les sbb push inc mov xchg add adc stos add jns scas loop leave push mov fs jo mov aad stc jae push sub mov xchg cmp cmp (bad) mov (bad) out out leave test ja call mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cmp (bad) sbb xchg ljmp push ja pop inc das daa je mov jmp xchg (bad) cmp cmp stos es icebp jp scas mov (bad) cmp pop rorl movsb cmp sub movsl mov test cmpsb stc scas mov push (bad) pop sbbl dec hlt decl mov (bad) (bad) out inc arpl das movsb dec pop aaa cld cltd mov inc int3 fcomi add out mov or arpl dec add cld inc dec pop outsb in fbstp dec fdivl fcoml xchg push inc sbb mov adc xchg jle lds sbb add mov jecxz add fsin je movsb pop sbb bound push push jg cs mov int3 repz xchg lret push adc sbb hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov (bad) loope inc insl mov xor push out sub adc and lret stc inc hlt mov (bad) mov rcl movsl je inc std jle cmp adc dec fldcw hlt or pop jno js loope or imul mov out mov xchg into in addr16 cwtl jns jp movsb and dec mov or mov popf adc test aas push shrb jb jle incb imul mov (bad) xchg les jge xor popf push sub inc ds mov lret nop es loopne dec and outsb out (bad) (bad) jnp pop ret cmp (bad) xor mov pop and sbb mov aad shll jle jecxz outsb lret jae add or test ja xor inc xlat push inc loopne imul mov bound xchg jbe,pt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov (bad) jno mov and xor inc inc add dec loopne jae or add xchg aad int3 xor jbe fs lods jle jae lcall les inc cmp cmp sub push adc jp mov or sbb mov outsl xchg dec enter popa jmp in sahf push dec sahf mov mov sub mov cmc mov add js cmp jecxz sahf dec gs dec mov subb bound lahf fldenv lds lods (bad) push mov icebp fild and push movsl dec hlt leave sub jae jmp loopne je mov inc cmpsl mov ret movsb push adc mov dec push sarb mov pusha in or pop push aad pop xor std jle and insb mov inc call inc jae sbb lcall inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov enter xchg xor inc mov adc inc dec aam push in jns test and push fildl loop test (bad) idivb mov dec scas ss sbb jno push repnz aad and dec xor sti mov (bad) in pop cmp xchg repnz outsb insl gs (bad) ss push in jecxz or fdivrp mov cmp popa mov adc pop shrl sub ss add insl xor scas xchg shlb mov in inc aad adc mov (bad) popf xor sbb idivl (bad) fistpll jo or lahf and inc or int or in xchg mov and sbb sub xchg (bad) mov insb xchg pop inc arpl cmp mov cli mov jae sbb stos int pop push xchg rclb hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov rclb ljmp or mov arpl pop dec cmpsb and mov mov pop push lds fwait stc data16 pop push cli xlat std pop xchg divps daa (bad) (bad) repz mov push pusha into and cmp add aam xchg repnz add lds (bad) and dec je iret cmp cld iret test jmp popa int mov add or cltd jns cmpb shr das dec sub loopne fbstp pop lret int3 inc popa mov stc test mov out data16 in repnz nop jg popf mov cmp xor (bad) popa cld je jns push repnz pop mov in (bad) xchg (bad) into insb pop jb fwait andb (bad) or sbb dec ret fs mov lea aad cmpsb call les push aaa push sbb pop and nopl hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov jno sbb xchg outsl cmp adc xor and (bad) push in jecxz scas sarl or mov add inc and xchg pop mov sti jg jne test test mov cmp js mov movb setle mov pop pushf jmp jne and leave lret lea into outsb sub push call icebp (bad) imul mov pushf imul jns push adc int xor or iret gs xor shr jae sbb xchg mov add pop fstl cmp mov test jge and sahf bound repz ja mov je jecxz push xchg sbb iret out adc les inc pusha mov or test mov out test xor or in test lods mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov jbe dec in and addl stos push in ffree add mov cltd inc cld inc and shrb inc imul push xchg adc jb fcoms test mov cwtl inc (bad) cmp int3 adc push (bad) ss jno cwtl outsl xchg sahf stos int imul push cmpsl aaa xchg pusha fisttpl std stc dec shll lcall and subb fidivl inc sahf (bad) jge bound lock sbb push sbb pop push (bad) pop sub loope xor aas mov int3 xor (bad) dec adc iret bound js adc std pop outsl enter lods mov xchg (bad) dec out dec or stos imul jae adc scas and mov popf push xchg mov dec loop hlt xor mov hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov and jb inc jae and ret and xchg sbbb add lds sarl push rol lret pushf imul dec test sbb data16 cltd fcoms cltd les xchg push dec and notl xor xchg jg (bad) jmp pushf aam es sub lahf or push lods stc fldln2 arpl les adc adc mov loope clc or repz sahf xor and sti imul mov jge scas out and shl or aam sub data16 jmp add xchg and pop pop or xor das imul imul mov pop pop pop out repnz xchg rorl add int3 out mov dec push push enter dec pop fwait push xchg push inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov push sarb out imul mov mov stos (bad) sbb fnsave cmp mov xor scas iret push mov lea lds std imul out xchg fdivrl xor pop xchg repnz divb gs push add int fwait adc mov push mov pop sbb mov enter and xchg ja lea rorb jl xorb jae xchg enter xchg fiadd lea xchg mov mov adcl jge xor mov sarb cmp inc mov icebp popa cwtl push xor inc jno mov or xchg iret cmp push loopne mov sub mov xchg inc push out gs push mov mov fsubs push (bad) push jg pusha xchg jo movsb inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc popa outsb mov insl push into repnz and or add scas ss mov or mov jno jbe add cmovne enter jno ds iret out in mov mov call repz inc cmpsl test cli out call aad add les (bad) in push shl adc sahf fisubrl mov pop push dec fld1 inc test or dec mov in adc mov mov mov mov jge data16 xchg jge mov mov push bound and les xor jbe insb push insl xor or mov les push mov mov imul popf insb outsl cmpsl popf cmp push scas jns ret cmp hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc xor and mov sub nop pop sub pop and popa cs mov push lea sub jp jg pop sub adc dec xchg lods cli add movsb cmp cmpsb cmp aaa jb rol mov jp jmp icebp call iret (bad) xchg divl mov fisttpl dec mov mov dec cmp sahf xor loopne mov or movsl mov jbe icebp sbb push xor adc cs push sub imul ficoml add pushf lret rclb cld fnstcw push sarl call fs mov and mov (bad) pop mov pop xchg ss xchg adcb adc out std pop les aad shrb out mov dec arpl jb push dec xor addr16 mov pop or scas jge mov std fistpl mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc repnz push gs cmp dec sarb mov add shrl mov xor ja mov std xchg int3 xchg ja xor sub mov out mov cmp inc test std out ficomp ficomp push mov and or push inc aas push lahf add cwtl pop mov xchg inc sbb fs mov insb aas mov mov push aaa imul loop pop aad and dec jmp sub or mov push insb xchg repnz mov jns push dec cltd add sar out push add sarl mov call ss jg (bad) mov adc pushf xchg cli add movsb inc pop stos fchs inc imul int3 xchg pop lahf push lea mov pop bound mov pop inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cmp daa fiaddl icebp dec andl fwait roll sbb pop mov ret daa pop stos (bad) out mov sub lods pop data16 ret lcall in fcom adc notb into ds jns jecxz cmpsb dec push sbb imul cli add xchg push xchg subb pusha jg cmpsl frstor test mov lea dec and (bad) out je xor sub mov push aam imul in stos out and xor les jg ret sub xor cltd adc enter das movsb jg inc aad shrl lcall mov mov in (bad) adc jo jmp int3 sub ret pop push inc rorb insl not out or inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov (bad) mov dec jno push jns clc mov dec inc inc sbb aad cli xchg mov pop divl inc std add dec and cmp test pusha lds sbb cs and cltd (bad) mov fnstcw sbb xlat out mov sarl leave bound xchg (bad) (bad) loop or lods jns cmp int3 sub fisubl mov incl out mov xchg push dec int jp xor dec loopne push inc xchg mov popf jp (bad) pop mov (bad) loopne xor push adc xor lret mov push mov mov ljmp and cmp sbb pop pop pop jo lods test les popl jge mov sbb pop movl notb stc outsb pop cmp pop pop add hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc sahf inc sub mov pop rorl aaa cmpsb pop std or test adc jnp aad cwtl pop mov imul add cmpsl push into jb jge sub add lcall icebp pop xchg pop xor popf inc stc gs dec fsubrl aaa fnstcw jg enter sti jo fnsave and ja dec push or mov aad iret call (bad) xor sub out sbb inc call adc push pop (bad) adc add xor fstl cmp rcrl outsb mov add dec mov rcrl jb jle mov and sbb add addb in bound lahf xor cmpsl and dec sub insb push xor jmp push jo xor xor fs repnz mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov cld inc dec xchg lods in cmp jbe dec xchg fcomi jo std (bad) jecxz mov mov les cltd mov (bad) idivb fistp scas and sub (bad) subl mov mov mov aas mov imul inc (bad) ror jns mov fs loope int3 add dec dec jno ret push sarb mov mov loop cmp mov pushf mov movsl sti shrb fisubrl mov push lret inc sub cmpsb popf js add jge or adc pushf xchg adc jns loope cmp shll les int ficompl clc push sbb pop scas xchg jns jae fisttpll (bad) lret and out push fisttpl popf jmp iret fs jno ds push mov add addr16 mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov push js mov shr imul jbe push sbbl sbb adc jae pop mov sub cmp mov insb and data16 mov pop push lret aaa mov jo xchg loope mov iret add inc int3 nop and imul bnd mov scas mov or call pop pop sti or fldcw stos pop repnz shll mov outsb mov ret add outsl repnz mov jge cmp fsubl orb lcall stos mov jmp adc aad inc divb jge jge mov into mov fadds xlat lods sbb inc mov xchg popa ficom addr16 jb (bad) mov pop mov add push shrb addl mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov (bad) mov inc xor dec fistl xchg repz sbb inc pop faddp and jae sbb xchg or inc dec sahf mov xor or push neg popf jae xor push xor adcl pop test and flds jo fwait mov xor xor mov jecxz sub xor outsb outsl nopl mov inc push ss xor pusha push mov push jae sbb mov rdmsr push jb xor or cld push dec icebp push gs push lret xor xchg cmp jae pop adc lret dec cwtl sub mov cmp pop rcrb and hlt loope mov sbb cmp push (bad) mov dec rclb dec lods fldcw xadd mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc call inc add add push (bad) cltd jg les mov lds mov inc insl jg bound enter mov and dec mov mulb cmp push pop xor aas xchg aaa sub mov or dec dec adc js test cmp xchg pop cld push flds scas sub and mov pop aas cmpsl cmp mov jl into shr pusha cwtl jae cmc out dec rclb dec cld push out mov pop fdivs xor les mov arpl sub xchg popa adc or scas jle lock cmp sti loopne cmp adcb jmp sbb jno mov jno add dec enter inc push xor mov sbb mov jmp repnz sbb hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov je xor aad lea pop in dec push or rcl jnp or mov int3 or pop jle xchg pop mov xor dec inc mov push mov es jne repnz mov loope insl testb popf daa rorb repnz stos out and jl sub inc mov dec daa out test int addr16 sbb inc jo,pn sbb xchg js loopne pop mov pop mov (bad) fsubp xor mov cmpb fidiv cwtl cmp and int sub imul and push sbb push jnp scas mov xchg (bad) mov sbbb push or fwait les dec mov pop pop push or fsubs pop (bad) xchg xor cmp subl sub ret xchg ljmp hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov scas mov pop hlt rcll dec jge add dec ljmp and mov jge pushf in or mov mov inc imul xor dec lock jp scas test dec sbb rsqrtps je push adc dec mov idivb mov inc inc cmpb mov fidivr or ja (bad) push popf or cmpb push or call mov cld xor fbstp sub jmp mov das add arpl rcrl test test repz fist je lds js add jns leave fisubl les sbb pop movsb int3 push cmp das mov (bad) outsb dec sti push sbb mov imul lcall test cmp xor jmp push mov xchg or out mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov out lahf xor cmp cmp popa int fistpl fsub rolb sbb jb notb pcmpeqw insl and addb into dec nop mov sbb and add add jmp roll in sahf jae aam mov cli inc daa add sub pop add stc ret dec loope cmp in stc inc xchg es sbbb sub mov and cmp test test push lods mov and push mov mov mov nop lcall aas test testb inc lds out es (bad) and (bad) lea sbb es outsl push xchg mov xor mov pop push mov xor sbb frstor push lods add or push scas sbb hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov dec xor pushf daa cltd in mov enter lret sbb dec notl pop and cmp mov insb xor ficoml jno dec repnz jnp mov cmc jge mov push mov pop pop ss shlb fild je push cmp dec mov nop jge scas add jae pushf cmp cmp inc inc inc imul test xchg fdivr out xchg arpl xchg xchg lcall push lock jge stos pop lret xor js mov rclb std ja push loop es out ja push dec push xorl pop repz in push sbb or jo insl xchg cmpsb loop gs xor popa daa and or lea clc pop push jmp clc icebp add mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov cmp test mov push xor mov sbbb outsb icebp gs xchg mov rclb cmp cli (bad) push xor lods mov data16 loopne add into (bad) xchg xchg xchg pop movsb out jns fnstsw mov popf jbe dec ficom outsb sbb jbe xchg es lahf stos adc mov pop sbb add sub enter xor add mov insb pop push jecxz ret test lahf push cmpsb mov lock and lret lea cmp ja or ret movsl push popa int arpl cltd loope push xorl loopne sysret pop aad (bad) insb lods test or out imul ficompl lcall enter adc push inc mov xchg jo xchg ljmp jns and pop pusha pop jo add mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc daa mov push xchg cmp dec xchg subb jmp jno fldenv aad lods cs mov shrl fist lret xchg repnz (bad) push gs (bad) popf sbb or stos out and lret lea cmp ja or ret movsl push popa int arpl cltd loope push xorl loopne sysret pop aad (bad) insb lods test or out imul ficompl lcall enter adc push inc mov xchg jo xchg ljmp jns and pop pusha pop jo add mov push xchg cmp dec xchg subb jmp jno fldenv aad lods cs mov shrl fist lret xchg repnz (bad) push gs push js dec dec cltd addr16 (bad) push in jecxz push mov pop inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov sahf sarl cmp in sub mov mov (bad) cmp inc xlat and aaa sarl bound mov lock and lret lea cmp ja or ret movsl push popa int arpl cltd loope push xorl loopne add and lret rcrb popa (bad) xchg xchg and (bad) dec jmp xor lods cld cmp xchg daa mov inc in out orl pop jne (bad) xor popf lahf subb pop enter sbb lods or xchg mov lods sub and cmp or into mov jae movsb mov loope jnp jmp add pop mov push aad test push test (bad) es fstps gs inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov test cld imul arpl cltd loope push xorl loopne sysret pop aad (bad) insb lods test or out imul ficompl lcall enter adc out (bad) mov pop pusha cmp jo sub les push sub mov popf and outsl xor stc dec pop push xchg cmp dec xchg subb jmp jno fldenv aad lods cs mov shrl fist lret xchg repnz (bad) push gs push js dec dec cltd addr16 (bad) push in jecxz push mov pop sahf sarl cmp in sub mov mov (bad) cmp inc xlat and aaa sarl bound mov lock and lret lea cmp ja or ret movsl push popa int arpl cltd inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov loope push xorl loopne sysret pop aad (bad) insb lods test or out imul ficompl lcall enter adc push inc mov xchg jo xchg ljmp jns and pop pusha pop jo add mov pop or xor inc sub mov scas add sbb jae dec aad (bad) mov out mov test gs shrl jecxz push push dec add icebp jge push xchg mov or loop stos cmp pop ljmp push int push and mul es jbe inc cmc pop sub cmpsb (bad) mov cmp fistp (bad) test fisubrl mov mov popa jo sub xor aaa cld imul mov pop inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc sbb (bad) stc sub test cmp pop and in push jmp sbb mov inc ret pop pop es mov mov jmp or in mov sbb and add sub cmp mov push pop cmp orl frstor or ret sarl jnp push in cmc xchg add and add sarl mull (bad) mov inc lahf scas mov push test lea scas dec push mov jns mov mov test (bad) ljmp test pop jns fisubl fs sbb pushf cld and test out jb push xchg inc imul insb popf sbb and into mov cmp xchg lret and inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc pop leave add movb call adc mov inc lods pop push jbe dec aad int les mov pop cmpsb mov sti xchg je jecxz insl adc dec mov pusha cmpsl push xchg stos (bad) jno (bad) mov mov or imul (bad) ja dec call loopne testb pop cli pop inc xchg pusha jp mov add rclb loopne xchg repz jge in inc loop jl push jno aas sub je pop sub xchg pop jmp dec mov xchg mov aas jo popa dec int pushf dec xor xchg push and in add fs cmpsb pop lds inc sarb add rol pop jmp fdivl adc out pop add xor cmp cli add scas cmp out ss cmpsl sbb push dec lock mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc fdivl dec sbb xchg es in cli push shlb mov push push mov test imulb cmp ffree cmc jns pop cwtl mov lahf and push adc ljmp or adc ljmp in inc adc subl mov data16 sbb (bad) daa xchg jae outsl mov popa (bad) outsb mov xchg cmp jb jo jecxz inc std sub in push repnz add jo imul pushf dec cmp push (bad) pusha cltd xchg dec sub push sub mov add cmpsb aaa mov das les roll xchg ror push in int3 fstp aaa pop mov imul ja dec xchg stos mov dec mov inc pop lods adc adc js scas movsl xchg sahf or hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc jns jmp sub loopne cld sub pop cli adc ds jp sarb data16 imul sub (bad) and in jmp fdivl mov shrl push cmp sub popa popf push icebp pop xchg cmpsb sti push xor pop inc (bad) aaa push lret jns pop or xor loope and jmp or fs mov sub sub pop mov xchg push in rol push push movsb mov xlat mov or push xor adc jne mov test mull mov sbb jno inc or or cmp jns cmp hlt xchg push push test mov test jb cmp lret (bad) cmc ja pop lock imul pop lods data16 in mov add ljmp pop inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc in xchg adc xchg imul pop aad xchg pusha jo sbb repz mov out jp or jge push daa fsubrl add inc hlt xor jnp sbb push lock aaa adc xchg aas aas sbb fsubs clc pop sub pop dec clc in inc sbb fs das out lahf dec gs aas ficompl cmpsb enter rol cmp sbb repnz xor cltd lods (bad) or mov pop mov jle scas int3 incl cmp ss fcompl out inc lcall (bad) pop int (bad) insb jnp add in call and fidivrl incl mov jle test scas pusha idivb sbb std ljmp sbb inc out mov xor xchg popa daa ficom inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cmp aas fdivl notl stos push and orb lahf sbb mov dec lods inc or shll int3 add mov aad mov (bad) in push pop mov imul dec add sub and and out lods loop adc mov dec fidivl inc adc or xor cwtl jge push loop cli outsl push shrb mov lds into fcmovnu into testl cmpsb fidiv xchg fcmovnbe imul push pop ret add shrb cld xor cmp jecxz cli push jbe push lock jbe or imul mov (bad) sahf addr16 imul pop xchg lcall test (bad) push sub outsl repnz in xor cmp jbe or icebp xor inc (bad) aaa daa aad xchg and push (bad) dec inc inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov push and in add adc pop push les sbb lods roll ss lret out jne (bad) sbb mov sbb dec subl inc mov push pop scas add add jns movsb int xchg adc loope mov push mov stos sbb in lods inc je or xor in mov sbb fmul cmp sahf cmp xor arpl arpl fnstenv and js add ljmp cmp stc int3 fs adc dec imul mov jecxz mov jge repz scas sbb jmp (bad) xchg js das gs mov sar jge (bad) icebp lea xchg mov push xor adc xor mov pop mov and out xor push push mov dec fnstcw jae inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov adc and int3 jl andb jmp mov mov mov mov bound shlb lods ret jp idivl sbb push or or rorb popa in cmc lea aad fisttp xchg push loopne xor mov fildl (bad) adc xor mov std sti jp arpl xchg and ret inc jb xchg adc jbe or popa repz scas lock sbb cmp leave test sub push iret add add mov mov pop add les vmptrld fwait sahf mov sbb popf jns (bad) cvttps2pi sbb hlt insb into pop pushf mov insl mov mov mov adc add cmp addr16 xlat mov cmp addl inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov repnz and aad movsb or out test sub divb pushf mov xchg test mov push jns movsb sub lret sbb sahf jbe sub jo add inc jmp adc adc cwtl mov ret rcrb cmp out js xchg stos push cmpsl inc iret dec push xor and or shl dec out ret mov pop mov jge out add push push daa js sub int push sub and out idivl lods lcall in adc and leave jle cmpsl jnp jns fcoml movsb inc mov inc daa pop mov (bad) or jb xor fstl mov jecxz mov pushf push cltd movsb out mov aad out insl mov movsl call jl mov daa ds pusha cli or popl hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov js imul xchg jnp mov xchg subb outsb mov popa ret dec cmpsb test and aam cmc adc repz jnp or insl fwait sbb pusha jecxz mov cmp fdivr mov sti xchg out ss jne jecxz inc or xor aaa mov and dec mov adcl std lods cmp mov mov lsl sub cmpsl subb or cmpsl loope lahf outsb shrd xor outsl mov (bad) mov adc cltd loope push xorl loopne sysret pop aad (bad) insb lods test or out imul ficompl lcall enter adc push inc mov xchg jo xchg ljmp jns and pop pusha pop jo add mov push inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cmp dec xchg subb jmp jno fldenv aad lods cs das les rcrl out leave mov cli clc cwtl ss mov mov push add js dec ret jne mov in dec rcll inc adc shrl cmpsl imul xor push mov push mov (bad) fdivrl xlat scas mov mov test lahf sbb cwtl (bad) bnd push xchg mov jnp stos out and lea jl mov fldl ljmp popa int das and clc lea icebp rcr add pusha sub pop pop xchg (bad) mov leave test or outsb dec mov inc stos pushf mov ficomp mov mov (bad) push inc mov push jne xchg ljmp or inc call pop pusha fcoms add (bad) xchg xchg and jne (bad) pop xor ss xchg subb mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov jmp jno mov pop fstps mov out lods out rol mov push ljmp in push push gs (bad) sbb cwtl int mov addl mov fldl loop mov icebp nop sahf or mov rorl xor pop out cmpl mov or out jmp mov sbb dec call lods adcb ja aas xor jnp sub incl stos or push jecxz mov xor mov lds dec out mov push sub dec pop cwtl jmp jecxz or dec sbb pop mov adc subl popf sbb xchg push adc arpl adc dec xchg xor out sub mov xchg mov je inc sbb adc cmp mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov int fs push jmp roll pop mov in adc ja xor mov pop fwait scas rcrb ret mov outsb push nop add add js xchg xlat xchg xchg mov lret cmp ret std dec add xor mov test insb push popf sbb call mov mov dec fdivrp jp movsb mov add das mov enterw (bad) dec mov into into mov sub inc inc ficomp adc js leave push cmp mov jle dec leave inc adc aad xchg dec mov (bad) or dec scas mov mov push add call mov insl mov icebp lods sub mov in movsb cmpsb lret mov xor test call mov hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov daa xchg imul or js sbb mov xchg in inc out jb je (bad) push scas jno jge aad clc add mov pop out loop mov or pop xor cmp dec fadd flds xor mov and out pop push lret rorb aam leave push aad ret inc adc iret cmp xchg push mov pop mov sbb (bad) inc inc and jnp lret mov cmp cwtl scas popa (bad) fbstp loope and sbb fdivs xor inc or test lea lret xorl xor jecxz out into ret pop icebp push (bad) and into mov xchg mov mov dec test jecxz mov rcrb mov xchg lret push popf aaa or in ljmp pop pop mov xchg push pop imul mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov lock mov (bad) sti xor mov adc cld mov mov push push loop ficomp das loop xor xor jbe sbb inc (bad) test adc add adc xchg cmp pop cmpsb (bad) imul repz test mov jb xlat sub sub mov rol cmp mov xor mov insl adc ljmp jp idivl cmpsb pop pop lods add push clc jle mov mov or std cltd mov xor (bad) stc pop adc lods insl popa data16 rorl push xchg fsub mov xor xchg lret sti addr16 test test cli jb add testl dec call and sub xchg stc adc and dec movsl sarb les lock mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc in inc sub adc xor repnz sbb mov rcr aas pop mov jle cmc sbb adc sbb and xor (bad) xor mov xchg sbbl (bad) gs adc cmp lds test mov stc mov movsb adc push mov lcall in inc enter xchg int sti dec cltd mov popa mov out or movsl in cwtl outsb and xor ja inc (bad) ret loope mov test arpl int or imul inc loopne ss or push push leave hlt mov js or faddl test xor lret test fsubs orb inc cltd aas sarb psubw mov out dec in movsl (bad) jb xor fdivrs pop ljmp pop and loope xor or mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cmpsl sub (bad) cs incl (bad) adc mov out jg (bad) cmp pop jnp lock outsl mov int mov mov cwtl loop mov loopne out mov leave lods mov popf add or in test or mov xchg gs imul (bad) cwtl gs sbb test mov inc loop push negb sbbb pusha xchg push push loop scas push adc xchg push int xchg out inc out leave (bad) pop cmp adc xchg sub add stc inc mov gs fild xlat aam dec ror and mov mov inc add std push cld cmp scas roll aas push test sbb mov mov ss push adc dec push fimul sbb cmpsb cmp fistpl jmp sbb insb loop pop ficoml sbb push out mov mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov push pusha test mov sub fdivrp loop test divb xor int3 (bad) into ja dec xchg addl lret adc rcll (bad) jge mov mov or ror loope cmp add imul dec pop dec mov subl or lret and jae jge repnz out ret insb movsb mov lea cmp jl adc stc xchg sub testl pop cmp add cltd cwtl cmp xor (bad) jbe std dec cmp xorb mov repz cmp add sub shlb stc ss cltd out (bad) mov adc (bad) sldt push mov popf mov push stos into mov mov push mov xchg (bad) data16 mov mov mov es push out sbb inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov sti cwtl outsl arpl scas lcall jge (bad) jge or jne cmp divb adc cltd inc pushf or addr16 jns inc cmc ror lds adc and (bad) sbb jmp mov loope sub mov mov cmpsb pop lods jge xor divb int3 ret dec in adc out sbb nopl leave push add add (bad) out mov ss dec mov jns flds cltd aaa sbb fiadd loop fs test movsb inc mov (bad) inc cmpsl fwait in sarl ss (bad) sarl dec rorb popf add jno mov pushf and js cmpsb xlat fbld add ljmp dec add popa in or loopne pop push aas fwait shlb data16 inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov loopne popa stos pushf xor popf cs mov (bad) in les test test fidiv add in pop cli jg insl (bad) or leave mov pop xorb xchg cs pop enter imul cmc inc add or jle or shrl scas lret xchg dec loop aad adc mov mov or adc ljmp fs fwait jb movsb loop out jnp xchg inc lcall loop mov or in xchg sub in fidivrl xchg cmp mov jae test mov pop inc mov (bad) sti sub das adc inc ror data16 test scas jnp ss jb add negl outsb test jae into cmpsb repz xor push mov lea mov cmp lds out pop or mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov xor adc shlb rolb in roll and cmpsb je pushf imul in daa cmc sub stos aaa lahf xchg int3 add cmpsl adc push dec cmpsl lahf add je es cmp fnstcw fistl hlt mov mov mov lds xchg fcmovbe mov in xor sbb push xchg scas aad stos into mov mov imul ljmp scas aad test int or std out cmpb fucom negl jae adc mov mov pop jbe sbb xchg cmp mov adc in inc fsubrs stos cmp (bad) jl ss mov jbe push in push xchg test inc sub sub push push fmuls aas repnz out and inc dec ret in add fs xor xor mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc aad fiadd mov mov test movsb mov div dec xchg sbb or push (bad) aad aam mov rolb (bad) mov sahf movsb jmp mov lcall in insb mov out addl clc xchg cs enter add push loopne adc arpl jae rcl ret into cmpl or leave adc cltd sbb xchg dec fdivl inc fidivr scas pop xchg jnp and out repz inc call sub dec aam lcall test fmuls aas out mov sbb rolb (bad) repnz pop jmp push std lods adc jp addr16 iret add mov xchg addr16 push inc mov push push push inc xor scas adc fbld and jl mov sahf xchg or dec push lods lahf sub jp push or or inc lahf mov mov lahf jae hlt xor hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc lods mov sbb sbb lds iret ss mov push push stos (bad) or xchg cmpsb push jnp or add xchg nop or mov xchg cmp call mov xchg gs (bad) inc (bad) or or lret cmp cs inc std sti jp arpl test sub jae jo stc mov ds addr16 loop ret lock push add popa in mov frstor stos arpl in dec sub or aam or or ds mov (bad) cmp fadd mov push mov jbe rorl pop adc inc (bad) enter sahf mov mov mov cmp stc jle nop lret push lods aaa push adc jmp cs out dec and xor mov (bad) xor roll hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc inc jle or (bad) and and lcall movsl mov and jo jo negl jmpw push repnz pop cmp xchg lds push int3 pusha mov pop and repz scas xchg add mov mov mov xor lea enter push mov cmp (bad) dec inc gs xor xor aaa andl fldt mov pop rorb dec adc jg xor (bad) jne hlt inc lea ficomp mov mov sub push shl out xlat mov sti push loop mov jnp push (bad) mov fwait push lods mov xor xor mov shlb es enter pop loope xor xchg movsb sbb (bad) dec arpl cmpsb xchg xor mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc cmp pop stos dec mov popa rorl inc xchg and lds adc rcrb mov in push jmp aaa sbb cmpsl pop imul push dec int xchg mull (bad) pop and fsubrl mov or add les stc cmp (bad) rorl cmp cmpsl je popf jl cmc or add pusha test lahf test mov daa mov flds and mov mov jmp lahf negl shrb sub (bad) jle (bad) mov (bad) push sbbl xchg in adc mov jmp fisub scas jne ja push push loope testl call or adc xchg xchg mov jo push dec fmull dec into insb mov dec push inc and hlt dec insl mov sbb stos add inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov or rclb mov xchg sahf cwtl leave dec repnz cmp jg rcrl inc cs xor sbb cmpsb mov ss mov push pop inc cmpsl in pop fsubl push push fstpl push push (bad) fiaddl nop cmpsb dec push lds addb daa push mov clc loop test lret add ljmp mov jp stos cmpsb dec mov insl sbb jle xchg (bad) icebp xor test out ret pop mov test data16 mov or movl andl scas push stos testl cwtl scas xor jnp aas cs stc push sub mov add arpl icebp mov xor mov lea sbb shrl xchg ja stc pop cmp repz (bad) xchg add dec gs sarb int3 mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov out icebp lds lcall add mov mov repnz fucomip jno lods stc ds dec push sahf xor lock int3 mov loope mov cmp sub mov pop pop mov fcompl out xor xor ficompl lret (bad) pop jecxz xchg adc cs adc mov ds mov xchg stos fcom mov mov aaa nop sbb out sbb mov mov dec or (bad) sub sbb neg shrl adc xchg cmp sbb xor das cmp inc xor in into mov (bad) mov push sbb lods lahf pop aam ret push fmuls sbb jne xchg cmp insb rcr jb shrl jns xchg es mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc rcr scas ljmp fidiv xor popa mov mov scas scas iret add enter mov in xchg and loope sbb and imul push inc or xchg push insb lods sub pop enter out xor (bad) movsl push hlt dec std icebp outsl in push shlb rolb mov enter shll loop hlt inc cs push fdivs push incl or xchg sbb mov faddl xchg add sbb xchg or movsb inc sbb lods ss mov imul or clc jle dec fidiv mov sub enter test stos and popa clc cli loope add fdiv inc and daa (bad) popa punpckhwd clc or (bad) testl sub hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc pushf repz mov pop and stc out stc pop fwait sahf cmp idivb pop cmp test cli cmp jo sub pusha iret cmc mov outsb sbb cmp sar test std pusha xchg fistl iret inc and in pusha or fs adc adc leave sub sbb mov stc sti out bound xchg xlat xchg jns sti sbb gs or cld add and push mov pop sahf sarl cmp in sub mov mov (bad) cmp and or mov mov ljmp icebp jno pop ret test fs mov mov pop dec popf push into adc imul movsb xor jl ljmp inc pop cmpsb push cmpsl daa daa (bad) pusha jp jno shrl jp (bad) add ljmp sub inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cmc inc mov lods aaa mov xchg arpl cli jo out pop call or dec xchg mov imul push cmp add into pusha ror dec ss inc sub in push lcall sub push ss lret or test xorb mov imul push test scas mov out and lret lea cmp ja or ret movsl push popa int arpl cltd loope push xorl xchg and jbe jecxz add rcrl ljmp inc and out cld jnp bound test add push repnz jno or dec out aad xchg inc xor ss mov leave test aam mov or dec cmp test call mov inc (bad) jge outsb inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov xor out (bad) in pushf pop sbb jnp out dec add push daa add push sub jge loop std mov cmpsb mov dec or pop xor loope xor fwait push xchg outsl inc movsb add adc (bad) not int3 cmpsl call ds mov mov lret xchg xchg xor xchg pop cmpsb or dec int pop cmp mov vaddps and (bad) mov clc clc test mov lcall popf or jecxz rol jl movsb mov addl std adc lock imul ret jae comiss xchg mov add fildl ret pop and fdivrl test cwtl pop xchg pop adc shrl jecxz (bad) movsb into (bad) jge stc mov and hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov dec mov test push sub xor test fwait and push sbb fisttpl lahf cmpsl int3 xchg icebp daa lods xor jl shr sub mov loopne data16 cmpsb popf mov lods jmp pop pop stos xor ret enter and mov popf arpl cmp pusha jp pop (bad) xor lods je and dec xchg icebp dec in lods out cmp imul inc iret mov imul jno in dec pop jmp and mov dec fsubrs xor sarb inc (bad) mov fcmovb lods cmp mov dec mov and adc inc cmp pop sbb mov lahf jecxz cmp out xor movsl aas sbb cmpsl scas pop (bad) jno dec or push push daa scas in inc lahf mov rcr push xlat xor dec mov xor cmp push movsb (bad) lds mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc test inc add mov lret dec ss fiadd push int xchg mov push fdivl mov loope adc mov cmpsb and imul loope xchg jnp popf push sar sbb mov push scas cmp loop loop popa sarb xchg xor sub jb sbb repz orl leave loope sub add mov pop aas xchg add leave sub test (bad) cmp gs mov loope aad popa cmp aam xchg lret sbb jge (bad) test fistl and lret mov ret dec mov shlb int arpl lods loope push jecxz stc sub push xchg dec inc loopne inc outsb jl fsubl pop jle and ljmp xor mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc cmc xor leave dec call lods sbbb jnp xor sbb cmc sub push mov cmc inc hlt ror (bad) pop sub inc iret fstp sub and jno rcll gs (bad) dec pop lret into adc or xor sbb sbb movsb ffreep push out loop ds mov push pop add push adc add mov enter (bad) sub outsl cmpsl sahf pop shlb add xchg sub xor addb aaa lea andl cs push fs enter inc loope int3 adc call dec mov pushf dec mov push pop ret adc (bad) (bad) mov outsl int xchg sub loopne inc add lea daa sub (bad) mov ror and (bad) imul xchg dec fmulp jb lds push inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov inc icebp push (bad) xor xchg lods jge sbb inc cmpsl jns dec jmp pop cvtpi2ps test loop mov sbb jbe std dec and inc sub cmc dec insl sahf cwtl adc mov test inc adc mov out (bad) out neg shl adc (bad) imul cmp je bound into out jle mov push scas data16 jecxz mov adc inc xor out in xchg sub in fildl mov xchg jg dec jno (bad) mov (bad) divl idiv test cmp dec jecxz adc dec cmpsl mov mov fnstsw cmp xlat jb test in dec xchg (bad) mov pop mov in (bad) xchg xor leave add stos push loope dec xor aaa mov mov subl sbb mov mov test mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc in mov dec scas cmpsl je movsb jae jmp add pop jle sbb das dec mov add add mov pop not adc cmp in sub fistpl push je iret rcrl pop jmp mov movsl inc lods in sbb sar loop test fsts aam out loope sbb popa lods into roll lea pop iret add mov adc cld xchg cmp shr pop and cmpl (bad) aas ret into cmpl or leave sub cltd and xchg sti pop jmp addr16 push fwait mov aaa xor in (bad) je das mov or and cmc cltd mov push mov aad xchg and pop dec fildll icebp push sub push and subb and mov fadds sub popa lret push xlat rcrl fbld push mov je mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov popl jne int sti insl cltd scas (bad) dec mov scas decl jb xchg xor and les ss cld lods and (bad) ficom inc out xlat inc jl dec cmp clc (bad) out in test test xlat mov mov dec xchg mov out notb and xchg mov stc sub arpl (bad) mov inc pop dec sub add clc scas mov or adc aaa fstpl cmc mov dec fwait lods pop mov dec pop xor dec fstps iret lods lea lods and mov dec mov sub xlat or dec addl mov xor mov push inc push scas in jns push sti jno jmp cs rol xchg mov scas sbb (bad) xor inc cmp out jmp xlat je cmp inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov adc xchg pop mov mov scas (bad) cmp jnp xchg inc lcall (bad) movsb ret jecxz mov sub ret add xor imul cmp int inc push out and out adcl call lds test push adc outsl loopne cs stc pop sahf add jns inc (bad) mov loope cmp mov mov push jb add cwtl packsswb in jns fbld pop shrb scas cs cmp psrlw ret cltd pop push xchg jecxz or sbb aad aam lock insl stos stos mov sbb fstps in mov loope andl sbb xor mov dec add test fs aad or add call add jae sbb sti dec sti in inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov xchg or arpl lcall call sub ja clc xchg (bad) push adc pop mov cmc xchg mov or add in and cmpb cwtl push hlt stos add push mov sub sub outsb mull fmull cmp (bad) pop mov inc adc movsl cmp jmp push mov out sti lea adc imul fisttp add stc mov jecxz push dec stos les push inc movsl fmulp mov (bad) xor shrl sahf sti xlat jnp (bad) fs fwait lods sub or add gs adc fbstp jmp pop mov mov push cmp mov (bad) xor lahf and mov enter jge mov mov xchg and hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov hlt dec (bad) and xchg cmp jb adc dec ljmp aaa push xchg jae iret cwtl movsl add push out add data16 out xor cmpb dec call or ds ret dec xchg mov push add lret pop lock fwait inc jecxz jecxz iret jnp mov out add fs out sahf push mov int pop cmp lds fstps xor imul out rolb cli xor mov adc in out cli insb mov xchg sub incl mov (bad) mov add mov popf mov and push xlat jne out sub push clc out jno fwait mov jmp mov lods jge xor dec ljmp sti iret fdivrl sbb hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov loope sbb rdpmc jnp mov sbb mov jle xchg (bad) mov push pop inc ret xchg push sti jbe leave or fs popf jl cmp fbstp arpl (bad) stc (bad) lock test jp mov fbstp in popf popf fisub cld lock adcl movsl outsb mov stc mov xor jmp pop sbb (bad) stc outsb and subl (bad) aas int orl out imul out xchg lret fdivs jle mov mov decl das or cltd inc jmp cld data16 push loopne lret adc pop lea (bad) std lds push cmp mull data16 inc ds pop or jmp (bad) xchg or ret dec adc mulb rorl int3 mov (bad) ja (bad) lcall pop mov jl cmc or add jle mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov scas (bad) push dec lahf mov addl push or loop rcrb mov lds out pop push lahf push std adc mov imul loope xchg jnp popf push sar sbb xchg aaa add push mov jl jns mov cmp rep loop add fsubrs cmp jbe pop in xchg test push sbb sub gs fdivrl push mov lds clc out inc insl mov add ret dec or ss sbb lods faddp jb lret xor aam ret popf jns rcll push adc pop jnp movsb daa dec leave adc and xor out jmp mov fmull pop xlat push jb dec jae cltd jae push mov xchg addr16 shll movsl inc cltd lods sub xlat sti scas in push test ss aam stc jl pop subl hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov xchg loop mov sub jl mov scas sahf adc leave mov adc (bad) negl cmpsb xor insl jl push inc cmpl sbb ljmp adc push clc push aam cmpsl test cmp add loope inc clc pop out popa mov (bad) dec repnz pop add adc lcall xchg fistp (bad) ss call add cmp sbb push jmp imull fstl mov mov sub mov xchg jnp fstps mov xlat push in lock lea mov xchg and repz cmc insb pop mov mov inc jp shlb pusha gs dec xchg jmp mov add mov sarb fmull nop inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc cmpsb jo xlat outsl loopne cs mov push mov cmc inc hlt mov inc or repz xchg sub push rol and push add in dec insl movsl movsl and aas mov and sub sbb imul test test cmp sbb sbb es xchg out and pop das dec pop mov fs lret aam sbb scas call stos dec jmp lock divl xchg xor in cli into aam aad mov popf push ljmp (bad) push lahf fldl push pop loop iret adc sub sub lock in out dec add data16 rcrb insl aad xchg cld fwait xlat pop js sbb mov pop ficoml (bad) fdivrs enter inc lds shrl pop xor inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov pushf push ret inc mov sarb pop lods push ja lods cwtl cmp pop push enter jno (bad) data16 jmp add scas or arpl pop sbbl ret mov mov sbb stc hlt and subl xor xchg cmp pop subl insb sbbl mov roll icebp scas (bad) xor test int3 in or mov out sub mov ficoml (bad) loopne xchg pop mov scas leave jo bound xchg ds js sub cmc mov xor jno xor inc call cmp pop and mov ja loope and push mul inc push mov stos xor loopnew faddl (bad) scas fld jbe (bad) sarl pop lock outsl mov sbb mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc adc bts lds sbb mov sahf mov and mov or jbe pusha fstl or (bad) jns lcall jbe test mov mov and pop mov in ret lods negl imulb cmp call push xchg test inc mov popf dec mov jb mov rcrl loopne cltd lods rcrl inc sbb in xchg and ret sbb push inc outsb jl fsubl pop jle or mov add jmp pusha fisub orb xchg aas xor das in push cmc xor and sarb sub test fmuls push aad mov cmp repnz xor pop stos cmp and and sbb test lcall pop movsb mov testb or pop mov les scas inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov jl stos xchg movsl stc and aad in mov or cltd mov inc sbb inc icebp or test ja cmpsb shlb js sbb sarl xchg (bad) testl call cmpl sbb repz sub addr16 mov pop (bad) xor in fdivrl xor mov mov outsb push fcmovnu sub in hlt or stc xor sbbl fldcw sbb pushf jle lock sbb adc mov push daa (bad) xor repz test (bad) in jo push scas xor jg sbb mov dec imul push jo ret lds sub fucom (bad) mov fsubs test rclb sub mov js cwtl stos mov lret sub inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc (bad) cmp shl dec shrb mov arpl fabs push pop sarb cmp dec pop pop mov call imul or pusha mov push sbb lock inc mov or into add mov pop jl daa mov mov mov pop or cld sub cmp xor inc xchg in mov shl shrl lahf push fmuls xchg je xor imulb xchg outsb dec fadds dec or aad (bad) data16 or in out test leave cltd push (bad) adc addr16 aam pop xor into xchg mov mov push out lret inc add sbb pushf pushf xor mov fisubl test adc mov shrb inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov pop mov gs push rcrb add pop mov aas mov mov ss push stos jno sub les gs mov shrl fist lret lcall and sub pop add fidivr pop sahf sarl pop in mov adc pop push jbe (bad) xor in xchg insl jne and cmp mov mov cmp idivb xchg std shrl add jmp sub inc pushf jle das loope test sti push adcb in or adc sub daa aas mov mov sub mov xor ljmp lcall cli repnz mov notb mov xchg jo xchg ljmp inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov jns and pop pusha pop jo add mov push xchg cmp dec xchg subb jmp jno fldenv aad lods cs mov shrl fist lret xchg repnz (bad) push gs (bad) popf sbb or stos out and lret lea cmp ja or ret movsl push popa int arpl cltd loope push xorl loopne sysret pop aad (bad) insb lods test or out imul ficompl lcall enter adc push inc mov xchg jo xchg ljmp jns and pop pusha pop jo add mov push xchg cmp dec xchg subb jmp jno fldenv aad lods cs mov shrl fist lret xchg repnz (bad) push gs push js dec inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc dec cltd addr16 (bad) push in jecxz push mov pop sahf sarl cmp in sub mov mov (bad) cmp inc xlat and aaa sarl bound mov lock and lret lea cmp ja or ret movsl push popa int arpl cwtl ret or push (bad) mov (bad) or adc sbb lods sarb mov sub sub dec pop into imul ficompl lcall call notb mov xchg ljmp jns mov xor js loop aaa mov push xchg cmp dec xchg subb fldenv aad mov dec mov out subl in inc mov push push push adc mov cmpsb add icebp adcb mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov scas ja adc jo jno aas std out ljmp xchg (bad) in dec dec xchg mov xor adc ret jo mov imul div inc push adc xorb mov test in repnz (bad) xor jl popf cmpsb push imul push idivb and pop pusha pop jo add mov insb cmp inc stos ss xchg subb jmp jne fsubs pop aam test gs movsl dec mov out subl (bad) je repnz out push gs push jns dec dec cwtl addr16 (bad) push in jecxz push mov pop lahf aad jnp cmp in sub mov mov (bad) cmp xchg cli add movsb inc xlat and sarb bound (bad) popf sbb or stos out es mov cmp ret ja mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov or ret icebp popa leave inc arpl popf loope push test xor js loopne clts push (bad) mov insl test (bad) or ljmp pop loope inc ja sbb lcall leave fcompl adc push inc mov xchg jno xchg ljmp pop add push mov loopne jo test mov dec aas mov les sub lret icebp mov inc dec push sub and outsb mov subl push fs rcrb testb (bad) popf sbb mov stos iret mov fistpll push mov push ret movsl push popa dec push arpl cltd loope rclb push adc or pop aas push mov ja pop (bad) imul lret sbb mov pop pop pop xor push inc xchg popf xchg jl cli xor mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov jmp mov pusha pop jo adc mov push (bad) cmp int subb lret jmp ftst aam aad lods cs mov shrl iret rcrl dec (bad) hlt xchg jb out push push jo dec dec cltd outsl jne iret push out jecxz push mov pop xchg sarl cmp ret mov scas jle,pn ja push scas test mov mov inc xlat daa int inc imul mov bound mov cmp (bad) and ret test cmp ja or ret movsl std icebp imul cltd loope push cmpl xchg js loopne or fisub testl popl repz out inc jno adc lcall rcr fstpl push dec mov xchg js xchg ljmp jns and mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc cmp push jo push daa mov push mov loopne cmp dec xchg (bad) sub jmp xchg fldenv (bad) lods es inc mov leave movsl in andl (bad) jl lock orl cld adc popf cltd xchg lock mov mov iret cmp inc mov or ret movsl push inc dec inc arpl cltd pusha imul xor xchg js loopne clts pop push mov insb lods test sub out imul ficompl sbb (bad) adc pop adc push inc mov xchg lock ljmp jns mov adc pusha fnstenv add mov call xchg mov xchg subb jmp jno fldenv cmc lods lods scas inc inc mov inc lods cmp fist dec aam mov sbb push in xor ljmp (bad) push inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov in jecxz jno xchg push jl sbb ret xor mov and mov mov inc xlat and aaa repz bound mov repnz sub lret mov cmp ja or ret icebp popa lds dec mov mov sub xor add pop pop aad (bad) insb lods stos (bad) or scas imul lcall sbb or adc adc sbb ljmp jno and pop and ljmp pop push xchg cmp dec xchg subb jecxz fsubs aam in cs mov shrl fstl ret xchg repnz (bad) push gs test fisubrl pusha int test iret cmp hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov or lret in icebp popa popl inc mov mov push js loopne sysret pop xchg mov fs test or imul lret mov cmpsl or push (bad) push inc repnz cli jb pop mov test sbb sbb add mov push (bad) cmp es jmp jno cltd fs aad mov dec decl shr cmp jp aam rcl or cmp outsb dec cltd addr16 dec xchg repz xchg pop fdivp jl jl shrb jle aas jb mov adc and movsb inc divl aaa rcrl (bad) lds push cmpsb clc out pop out lock loop fsubrs int fistpll ja or addl inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov int and mov or icebp cwtl or xor sub pop pop cmc mov mov aaa out imul ficompl lcall enter xor push dec xchg sbb mov jns and pop pusha pop jo push daa popf stc sti inc pop push nop xor dec mov sub out jae fldenv pop cmc sub lahf outsb mov mov lret mov sbb mov xor popf sbb or stos jmp (bad) dec iret sbb jae add (bad) cmpsl call gs inc inc dec mov xchg cwtl sub xor daa pop aad imulb mov dec mov dec enter cld inc jno sbb cwtl sub int3 fcoml adc push inc mov xchg jo xchg loop cwtl pop mov jmp inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov push daa mov push xchg sbb dec addl aam lds mov scas mov cmpl aam xorl popa jge inc jl push pop popf addr16 (bad) push lods jecxz push mov pop mov shr cmp add jnp adc movsb adc hlt push out cmp inc xlat and aaa sar mov test lahf inc cmpsb test lea lock and iret lea cmp jbe ja or ret in cmc jno push arpl mov dec push xchg mov push js lock add xchg mov jl test sbb out insl mov push call inc xor sbb fisubl mov fcompl add inc inc mov xchg ljmp jns daa xchg jo jo adc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov push (bad) cmp xchg subb jmp jno (bad) inc pop aad sub gs dec mov out subl push jne inc gs push gs (bad) popf sbb mov stos push pop int3 lret lea cmp mov and icebp lea cltd loope push xorl sbb pop pop aad (bad) insb lods test pop nop out imul in inc jae sbb lcall push pop pop fstl inc mov xchg jo xchg ljmp clc (bad) and pop pusha pop jo add mov push xchg cmp add insl pop push fwait shl lds scas lods cs lds rcll ficom dec aad sti jo out call push js int3 dec cltd (bad) (bad) dec (bad) pushf outsl loop mov hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc jb jge sarb scas cmp mov mov stos mov xor shrb cmp test sbb cmpsb push pushf sbb icebp fistl fldcw or addr16 andl inc arpl (bad) xorb adc cmp mov nop sub imul neg sbb pop and mov pop fldl cwtl xchg jo adc xor popl aaa cld (bad) and fsubs jo add lods jnp dec jp ds push sub dec roll insl mov fwait test stos lods cs mov subl aad jns sbb (bad) push gs (bad) popf add aas lock and icebp or jnp ret mov or inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov movsb lcall enter int3 push cmpl mov js addr16 mov jmp test mov out imul ficompl lcall dec fstpl xchg notl xor js xchg ljmp js adc leave stos mov pusha adc jecxz jnp cld stc and imul mov stos ss subl push pop les inc mov iret cs popf sub aam adc sbb (bad) xor dec dec dec pop in dec gs jecxz (bad) mov cwtl sbb cmp adc jg push scas lods xchg mov mov ret (bad) and pop push mov bound lahf sahf push data16 popf shlb lock or push imul (bad) dec iret daa inc mov mov nop inc movsb (bad) mov dec mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov fwait into push andl mov js gs mov jmp pop out xchg xor in (bad) jb cmp fwait and dec fstpl xchg notl xor xchg add xchg ljmp js mov mov pusha pop jo add cmp stc mov add stos ss push subl stos pop les lods push mov out jmp mov repz imul xor cmp mov and dec mov cmp jbe clc push ret icebp popa int arpl cld cmpb (bad) fdiv dec aaa (bad) je sub subl (bad) dec lods jmp mov aad and (bad) pop add loop adc scas js add cli test xor insl mov andl mov add mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov and xchg stc dec scas imul ss push dec popa andl mov stos cmp and aad (bad) or push imull mov arpl adc or jne (bad) adc loop ljmp mov adc pop add (bad) jnp push loop lahf outsl inc divl movsl dec stos xorl aaa iret mov or jle ds (bad) mov mov addl std cmp mov mov xchg xchg push (bad) and cwtl push aam cmc dec push test or aad xlat and leave xchg inc jle sbb std cmp pop push scas dec lods cmc inc iret in ja push nop notl daa (bad) dec repz hlt push mov fdivrl push jecxz mov cmp les mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc jnp imul sub add cmp and cmp outsb push ret cli mov ljmp add xchg sti push or xor subl and fimul mov or add cmc mov ds (bad) stos jnp mov out sub sarl and xor mov push mov lods cmc inc jmp pusha mov lret mov xchg and subl ljmp aas ljmp cmp pop jo pop dec into mov sti add les hlt clc pop sub leave les mov sub sub xchg jbe int mov jb mov out cld insb and inc add or xor push (bad) loop xor lret xor jne movsb inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc subl (bad) cmp or sub mov xor inc push rclb mov sbb leave fcmovnbe mov lahf push jmp (bad) dec cltd lods ret jl sti popf dec stos mov or or and in movsl and in in inc add je js loope push dec cmpsl fisubl jnp mov fsubr adc cs popa mov test scas jge xor xlat dec in cmp xchg xor inc jmp aad loopne das add push fcomps jle add fiadd out jl jmp jae lods or dec xor mulb fisttpl loopne int3 xchg cmp stos jecxz ss mov jg iret add xor ret mov dec fsubrs shrb outsb cmpxchg rclb lret pop movsl mov adc hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov and cld xchg cmp mov dec add test arpl (bad) mov fadd cwtl addr16 xchg cwtl cmp xchg and decb adc pusha xchg add sarb adc mov arpl les cmp mov rclb pop xlat add lds hlt loope or movsb pop xchg inc clc dec push sub sub sub movsb enter ljmp adc pushf imul test das rorb sbb scas aaa orl push pop push scas in push mov fcoml rclb push xor mov int mov movsb xchg (bad) ja orl mov cld and fist cmpsb mov xchg arpl lret cmp pop sbb or add inc mov movsl xor xor imull pop sub hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc and push rcll xor lods repnz (bad) lods cli xchg outsb push pushf or sti and xchg and mov jb js cltd and outsb ret loop pop cmc cmp data16 and les sbb mov ret pop and pop cmp (bad) dec add cmpl js dec pop or and das mov loop fldlg2 popa adc mov out add add pop mov xchg mov jp ljmp stos dec adc out imul inc adc out (bad) cs aad inc jbe xor or mov jge pop aad (bad) insl (bad) faddl std into inc cld repnz jb (bad) (bad) mov jg test pushf adc push adc outsl aad sub mov push popf or push hlt call or xorl xchg inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov and pop aas shrl out and stos sub mov cmpsb daa mov push mov movsb (bad) cmp scas mov xchg aam test add adc push sub push (bad) ss mov jp add sahf dec (bad) arpl pop and iret jae fwait bound push arpl adc inc mov sbb ror int lods out push mov sti cmp mov pop xchg mov insl stos sti popf dec stos mov jnp jmpw gs lock loopne test repnz dec sbb or pop pop aad (bad) insb lods test or out imul ficompl lcall enter adc push inc mov xchg jo xchg ljmp jns and pop pusha pop jo add mov push xchg cmp hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov ss xchg subb jmp jno fldenv aad lods cs mov shrl fist lret xchg repnz (bad) push gs (bad) popf sbb or stos out and lret lea cmp ja or ret movsl push popa int arpl cltd loope push xorl loopne sysret pop aad (bad) insb lods test or out imul ficompl lcall enter adc push inc mov xchg jo xchg ljmp jns and pop pusha pop jo add mov push xchg cmp dec xchg subb jmp jno fldenv aad lods cs mov shrl fist lret xchg repnz (bad) push gs push js dec dec cltd addr16 (bad) push in jecxz push mov pop sahf sarl cmp in sub inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov jg push scas mov (bad) cmp inc xlat and aaa sarl bound mov lock and lret lea cmp ja or ret movsl push popa int arpl cltd loope push xorl loopne sysret pop aad (bad) insb lods test or out imul ficompl lcall enter adc push inc mov xchg jo xchg ljmp test mov testb sbb cmp push pop push mov fucomp testb sbb ljmp sbb mov pop adc xorb jnp xchg enter movsl fmuls inc (bad) mov pop outsl jp xchg sahf test jecxz cld or pop sub inc dec pop gs mov iret (bad) icebp cld or hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov and aaa inc dec pop fs nop pushf test mov stc add sbb xor dec push bound test lret (bad) loop stc add sbb xor dec push popa insl jns nop fwait cmpsl mov lret in clc add sbb xor dec push pusha imul fwait cmpsb mov leave aad in clc add sbb xor dec push pusha imul lcall jmp add sbb xor ja mov aam jmp add sbb pop push orl testb sbb pop push orb fsubrp testb sbb xor push pusha insb ja mov aam jmp add sbb pop push (bad) lea rcr ljmp cmp pop push orb rcr jmp and add jbe lea aam jmp add sbb hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov xor jns nop popf test ror loop cli add inc dec push arpl xchg int in cli pop adc sub outsl jnp xchg sahf stos mov into fxam icebp std or sub inc dec pop stos push dec xchg mov fsubrl cmp pop addr16 mov ret int loop testl bound ss dec pop data16 mov aad in stc push adc pop push movsb mov (bad) rcr adc push test icebp xor (bad) aaa inc dec pop fs xchg int3 fsub lock pop adc sub inc dec pop gs mov adc xor jbe lea rcr out std or sub inc dec rorl gs mov add decl push and push mov fucomp cmc add and hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc cmp pop push mov fsub repz push and data16 mov int inc cwtl (bad) adc pop imul cltd movsb scas mov testb aad testl cmp pop imul mov int3 xlat loop decl inc dec pop arpl xchg enter hlt decl adc push pop push orl stc add sbb sub (bad) out decb adc sub arpl orl rcr out cld or push sub jo xchg into (bad) out stc add sbb pop bound test leave aam jmp add inc push pop push mov aam in testl cmp ja lea rcr jmp and inc dec pop inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov jo xchg int in std or sub inc dec push bound test xor push pop arpl orl jecxz testb adc sub cmp pop bound mov (bad) into fsub in testb adc inc dec pop arpl orb (bad) loop testb adc sub cmp dec pop arpl mov iret (bad) in testb adc sub cmp dec pop outsb ja mov (bad) rcr jecxz testl xor inc dec pop arpl mov iret (bad) in testl xor push pop outsb js mov (bad) rcr in testl xor data16 orl enter repnz push adc and pop push lcall fucomip repz pop adc and inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov ja mov (bad) rcr in stc add sbb sub aas dec push pop addr16 xchg ret loopne hlt decb adc xor inc mov aad jmp add sbb cmp push pop imul cltd movsb scas mov out clc add jae and (bad) lcall aas dec push pop push fwait movsl mov (bad) shl in clc add sbb xor jns mov rcr jmp and cmp pop outsl jp (bad) lcall xlat fucom ljmp pop push and xor ds dec push push pop fs ja test stos mov mov fucom ljmp pop push add inc dec push pop data16 mov aad jecxz cli or sub inc dec push popa jo test (bad) in std or and inc dec pop push inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov jge cltd mov fucom icebp cld or push sub dec push pop pop imul test mov mov fsubp jmp clc incb adc push and inc dec push push pop fs ja test stos mov mov fsub in testl cmp jb jle mov mov mov fsubp jmp clc incb adc push and xor ds dec push push pop fs ja orl mov mov fucom jmp or push and cmp pop imul mov jmp or adc inc dec push bound add (bad) fcomp out repz add or sbb es cmp inc dec push pop pop gs jb jg mov mov mov fsubp jmp clc incl and inc inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc dec push pop pop imul test stos mov mov fucom lock push nopl cmp arpl orb rcr call es gs mov int in sti push or sub dec push pop push test stos mov mov fsubp jmp clc incb and xor ds dec push push pop imul test lods mov mov (bad) in repnz incl and inc dec push pop pop imul test stos mov mov fsubp jmp clc add adc pop and inc dec push pop pop imul test stos mov mov fsubp jmp clc incl and dec dec push pop bound jne (bad) mov scas mov ret aad loop out cmc inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov add push adc xor inc dec dec push pop popa outsb je orl ret aad loop out cmc sti add unpckhps sub ss dec push push pop arpl ja test stos mov mov fsubp jmp stc incl and inc dec push pop pop gs jb jg mov mov mov (bad) jmp clc incl or sbb sub xor push pop popa push mov scas mov ret aad loop lock add adc sbb cmp dec push push pop arpl add test lods mov mov (bad) jmp clc incl and inc dec push pop pop imul test mov mov (bad) in repnz incl and inc dec push push pop imul test mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc movsl stos mov mov fsubp jmp clc incb adc push and inc dec push pop pop imul test stos mov mov fucom ljmp sbb and xor ds dec push pop pop imul test stos mov mov fsubp jmp clc incl and inc dec push pop pop gs jae jg mov mov rol rcr loopne in repz add or sbb es dec push pop pusha insl jae addb lods mov ror aam fsub jmp or adc xor push pop bound jne (bad) mov scas mov ret aad loop out cmc cld add movhps sub xor push pop bound jne (bad) mov scas mov (bad) lret (bad) loope clc add sbb cmp fs test inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov leave rcr ljmp sbb sub xor gs mov scas mov ret aad loop out idiv add movhps das cmp pop arpl orl (bad) loop stc add sbb xor jae mov (bad) rcr call sbb xor cmp pop fs ja test stos mov mov fucom ljmp pop and inc dec push bound nop xchg popf cmpsl mov lret (bad) loope cld add sbb sub cmp jo mov lret in clc add sbb xor inc push popa imul fwait mov (bad) icebp decl movhps sub xor push pop bound jne (bad) mov scas mov rol aam loope out hlt cli add push adc and cs inc inc dec push pop pusha insl je addb hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov (bad) fsub jmp or push sbb sub ss dec dec push pop arpl jbe orl scas mov ret lret fucom jmp or push sbb sub ss dec dec push pop bound jbe (bad) mov iret (bad) icebp decl adc dec push pop bound jne (bad) mov scas mov ror aam loope out cmc sti add push adc and cs push pop popa push xchg lods mov add enter loop out cmc sti add push adc and cs inc inc dec push pop popa outsb jne orl rol aam loopne in repz add or sub ds push pop push mov iret (bad) icebp std or push pop data16 xchg lret (bad) jecxz testl cmp pop arpl jns nop pushf mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc stos mov mov fsub ljmp pop sbb cmp pop fs ja test stos mov mov fucom jmp or push sbb sub ss pop arpl jbe orl mov mov (bad) push xchg push adc ret popa dec arpl add mov into inc outsl mov xor mov and mov xor push jle cmp scas mov repz push and fs adc push cmpsb mov lret in clc add xor testb stos ror in mov sub push pop xchg movsl mov lock or and cwtl mov fsubrp hlt decl push and inc dec pop fs xchg dec push bound test lret in clc add sbb xor dec pop inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov jbe nop fwait cmpsb mov leave aam jmp add sbb loope add sbb pop fs mov fucomp testb sbb pop imul fsubrp hlt add adc sub cmp push pop outsb jnp mov mov dec push popa (bad) xchg pushf cmpsb mov (bad) rcr jmp adc daa xor inc dec pop gs test add cmp (bad) test jecxz testl cmp ja lea rcr call aas dec pop push (bad) pop imul jmp jae mov pop jo test ret outsl jl xchg mov xlat jecxz cli add aas dec push mov in adc xchg fwait cmpsb mov or xor push pusha imul pop mov out insb fistpl popf lret int jbe jg (bad) ja inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov out add and inc pop arpl xchg loope mulb mov lret (bad) fucomip repz adc xor inc push pop outsb js mov leave rcr out sti add cmp push bound mov aad jmp adc sub inc pop imul out std pop cmp or pop insl js nop pushf (bad) fucomip or daa xor jns xchg mov rcr out cld pop adc xor dec push mov sbb xor fucomip repz or sbb xor inc dec push popa imul xchg popf test sub jno shr xor aam push test inc push pop data16 mov lret insl js mov into (bad) inc pop mov icebp sti add ss dec push pop addr16 mov lret call sbb sub inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov lock and fwait movsl scas mov cld pop adc and mov lret ljmp push mov xchg movsl scas hlt add ss push pop arpl test (bad) rcr jmp xchg mov cli push pushf stos mov add fsub out clc add sbb cmp pop arpl orl jecxz testl nopl xor inc push pop outsl js mov (bad) rcr in clc add adc dec push pop outsl jnp (bad) cltd mov inc push pop data16 test mov lock push adc and cmp pop bound mov enter add sbb pop bound imul mov repz ss dec sbb or pop insl or jge nop lcall xor inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc push cwtl mov aad ljmp add sbb (bad) xchg ficomp std or cmp jp test mov or and cmp lods (bad) fsubrp negb data16 shl or dec pop jb mov xor jge movsb scas mov repnz push adc and popa outsb jp xchg in sti or sbb push pop imul lods mov lret or and cmp pop das data16 cmpsl rcr push sbb xor cmp and inc dec cmpsl mov jmp and pop push cltd movsb mov (bad) into fiaddl out incb cmp pop insw jae orb mov fsubp jmp idiv add and xor ds dec push push pop fs jbe orl scas mov ret (bad) fsub jmp or adc inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc xor push pop popa outsb je addl rol aam loopne in repz add or sub dec push pop pusha insw jae jg mov mov mov fsubp ljmp pop sbb ds dec push push pop fs ja orl scas mov ret aad loop out cmc sti add push adc xor inc inc dec push pop popa insl je addb lods mov rol rcr loopne in repz incl or sbb and inc dec push pop pop imul jg mov mov mov (bad) in repnz incl and inc dec push pop pop imul test stos mov mov (bad) jmp clc incb daa sub dec push pop pusha insl jae addl ret mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc into aad loop out hlt sti add push adc and cs push pop bound jne orl ror aam loope in hlt cli add or sub dec push pop pusha data16 jae jg lea mov rol rcr loopne in repz incl or sbb es cmp inc dec push pop pop gs jb jg mov mov rol rcr loopne in repz add or sub cmp dec push pop pusha data16 jae jg mov mov mov add in repnz incb es cmp inc dec push pop pop imul test stos mov mov fsubp jmp clc incb and inc dec push pop pop imul test stos mov mov fucom ljmp push sbb cmp dec push push pop arpl hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov jo jge mov mov mov fucom ljmp pop sbb cmp pop arpl jbe (bad) mov scas mov ror aad loope out cmc sti add push adc and cs inc inc dec push pop popa outsb jne mov leave rcr jmp push and pop arpl test lods mov rol aam out decb push push and xor ds dec push push pop imul test stos mov mov fcomp in repnz add adc push pop imul dec push pop data16 xchg (bad) out cld pop adc push pop push pushf cmpsl mov enter cmc decl adc dec push pop push jge mov mov idiv add adc dec pop pusha data16 mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov ret leave rcr jmp decl push sbb dec pop data16 jle mov int3 fcomp in repnz pop adc xor inc push pop imul cltd movsb scas mov icebp cld pop adc sub inc dec push pusha imul cltd movsl mov rol fsubrp testb sbb cmp pop addr16 mov int in sti pop adc sub inc dec pop outsl jp nop fwait cmpsl mov (bad) rcr out cli add sbb xor je mov (bad) rcr jmp and cmp pop imul mov repz pop and cmp pop addr16 mov rcr jmp and inc dec pop popa imul xchg xchg sahf movsb stos mov lret fsub in clc add adc and cmp imul xchg sahf test aad in cld push adc xor cmp jo (bad) lea inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov fucomip cmc add dec push bound mov fsubr hlt add sbb xor dec push pop push (bad) mov lret loopne cli add cmp pop push sahf stos mov iret ftst lock pop adc sub inc dec pop gs mov fsub icebp cld or sub imul (bad) in cli add sbb pusha push orb xlat loop clc add sbb pop push orl repz adc dec push pop addr16 mov rcr out std or sub inc dec pop gs xchg int in cld or sub inc dec pop fs xchg int3 xlat jecxz sti pop adc push bound test int3 xlat loop stc add cmp ja mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc (bad) rcr jmp and cmp pop imul cltd movsl mov enter testb pop and cmp pop addr16 mov iret (bad) icebp cld or push sub inc dec pop fs mov into (bad) icebp cld or push sub jno xchg int in cld or pop sub inc dec pop data16 mov leave rcr call adc and cmp push pop pop gs jb jg xchg mov aam loope out clc add push and aaa inc dec pop pusha insw je test (bad) rcr call sbb cmp push popa imul xchg mov (bad) out sti add cmp jbe mov int3 xlat loop testb pop and cmp push popa insb jbe mov int in sti pop adc sub dec push pop push (bad) xchg mov flds hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov out idiv pop adc sub dec push pop popa insb ja lea (bad) into (bad) out stc add xor dec push pusha insl je orl jecxz lock add sbb xor inc push pop push mov fxam lock pop adc sub dec push pop imul cwtl movsl mov mov cmc decl adc and inc push pop push xchg into fucom lock push sbb cmp outsl jns mov jmp sbb cmp push pop imul scas mov lret out sti add xor dec push test dec push popa imul xchg mov fsub repnz or pop sub outsb jns xchg pushf cmpsl mov lret (bad) loope stc add ds push pusha insb jns nop popf test mov testl aas dec push lahf mov (bad) rcr cmc add jae mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov rcr loope cmc add adc sub imul mov out cli add or sub dec push pop pusha insl jae addb lods mov mov (bad) in repnz incl and inc dec push pop pop imul test stos mov mov fucom ljmp pop sbb cmp push js test stos mov mov fsubp jmp idiv add adc sbb cmp pop fs ja test stos mov mov fsubp jmp idiv add adc sbb cmp pop fs jbe orl scas mov ret aad loop out idiv add movhps sub ss dec dec push pop arpl ja test stos mov mov fsubp inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov jmp clc incb adc pop and inc dec push pop pop gs jb jg mov mov mov (bad) jmp clc incb and xor ds dec push push pop imul test lods mov mov fsubp jmp clc incb and inc dec push pop pop imul test stos mov mov fsubp jmp idiv add adc sbb cmp pop fs ja test stos mov mov fsubp ljmp sbb and inc dec push push pop fs ja orl mov mov fucom ljmp pop sbb ds dec push pop pop imul test stos mov mov fsubp jmp clc incb adc push and xor cmp pop arpl ja test mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc nop xchg popf mov ret leave rcl fucom jmp or adc xor push pop bound jne (bad) mov scas mov ret leave iret aad loop out cmc cld add unpckhps and cs push pop popa push xchg scas mov ror aam loope out cmc cld add unpckhps sub xor push pop popa push mov scas mov rol aam loope in hlt cli add or sub dec push pop pusha insw jae addb lods mov rol rcr out sti add ss dec push pop push addb leave rcr jmp clc incl and dec pop bound orl scas mov ret aad loop out cmc sti add push adc inc dec pop bound mov (bad) loopne stc add sbb inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc xor push pop push jg xchg mov aad jmp add inc dec push push pop imul test stos mov mov fsubp jmp idiv add adc sbb dec pop gs mov ror loope idiv or sub aas dec push pop outsl jl mov iret fninit in clc add sbb sub inc dec push pop push jg xchg popf cmpsl mov enter out idiv add movhps sub xor push pop bound jne (bad) mov scas mov ret aad loop out cmc sti add unpckhps and das xor push pop bound jne (bad) mov rol aam loope out hlt sti add push adc and cs inc inc dec push pop pusha insl jae addl rol aam loopne in repz add or sub cmp inc dec push pop pusha inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov insl jae addb (bad) rcr call sbb sub inc dec push push pop arpl jbe orl mov mov fsub jmp or adc xor push pop bound jbe (bad) mov scas mov ret aad loop out cmc cld add unpckhps and cs push pop popa push mov scas mov ret aad loop out cmc sti add push adc inc dec push pusha imul xchg fwait mov fsub out stc add and ss dec push pop addr16 xchg leave rcr jmp std or sub cmp dec push pop imul xchg popf movsb stos mov mov fucom jmp clc incb and xor ds dec push pop pop imul test stos mov mov fsubp ljmp sbb and hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc cmp inc dec push pop pop data16 jb jg mov ror aad loope out cmc sti add push adc and cs inc inc dec push pop pusha insw je addb scas mov rol rcr loop out cmc sti add push adc xor inc dec dec push pop popa push mov scas mov ret aad loope out cmc sti add push adc and sub dec push pop pusha insw jae addb lods mov rol rcr loope in hlt cli add or sub dec push pop bound jne orl ror aam loope in hlt cli add or sub dec push pop pusha insw jae addb scas mov ret (bad) fucom ljmp pop sbb ds dec push pop pop imul test mov mov (bad) in inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc repnz incl or sbb es cmp inc dec push pop pop gs jb jg mov mov mov (bad) in repnz incb and xor ds dec push push pop fs ja test stos mov mov fsubp in repnz add or sbb es cmp dec push pop pop gs jb jle mov mov mov (bad) jmp clc incl daa sub dec push pop popa outsb je addl rol rcr loopne out cmc sti add unpckhps and cs push pop bound jbe orl mov mov fsubp in repz incl or sbb es dec push pop popa push mov scas mov ret aad loop out cmc cld add adc sbb sub aaa cmp pop fs ja test mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov stos mov mov (bad) in repnz incl or sbb es cmp inc dec push pop pop imul test stos mov mov fucom jmp or pop push and xor ds dec push pop popa outsb je addl rol aam loopne in repz add or cs push pop arpl jbe (bad) mov scas mov ret aad loop out cmc sti add unpckhps sub xor push pop bound jbe (bad) mov mov (bad) rcr out incl or ds push pop imul (bad) cltd mov mov loopne in repz incl or sbb es dec push pop pusha insl jae addb lods mov rol rcr loopne in repz add or sbb and inc dec push pop pop imul test hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov movsl stos mov mov (bad) in repnz incl and inc dec push pop pop imul test stos mov mov fsubp ljmp pop sbb cmp pop arpl jbe orl mov mov (bad) in repnz add or sub dec push pop pusha data16 jae jg mov mov mov fsubp jmp idiv add adc push and xor cmp pop fs ja test stos mov mov fsub jmp or adc xor push pop bound je (bad) mov scas mov ret aad loope out hlt sti add push adc and sub dec push pop pusha insw jae jg mov mov mov (bad) in repnz incl and mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc dec push push pop fs ja test stos mov mov fsub jmp or push sbb sub ss dec dec push pop bound jne (bad) mov scas mov rol aam loope in hlt cli add or sub dec push pop pusha insw jae addb lods mov mov (bad) jmp clc incl and inc dec push push pop fs ja orl mov mov fucom ljmp pop sbb cmp pop imul test stos mov mov fsubp ljmp and inc dec push pop pop gs jb jg mov mov mov fsubp jmp clc incl es cmp dec push pop pop data16 jb jg mov mov mov fsubp inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov jmp idiv add adc sbb cmp pop fs ja test stos mov mov fucom ljmp push sbb sub ss dec dec push pop bound jne (bad) mov scas mov ret (bad) fsub jmp or adc xor push pop popa outsb je addl rol aam loope in repz add or sub dec push pop pusha data16 jae jg mov mov mov fsubp jmp clc incb and inc dec push pop pop imul test stos mov mov fucom jmp or push sbb sub xor push pop bound jne (bad) mov scas mov ror aam loope out hlt cli add or sub dec push pop pusha data16 jae jg mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov xchg lods mov rol rcr (bad) in repnz incl and inc dec push pop pop fs ja test stos mov mov fucom ljmp push sbb cmp dec dec push pop bound jne (bad) mov scas mov ror aam loope out hlt cli add push adc and cs inc inc dec push pop popa outsb je addb lods mov rol rcr loopne in repz incl or sbb and inc dec push pop pop gs jb jg mov mov mov (bad) in repnz decl adc sub cmp pop pop push addb mov ljmp push sbb cmp dec dec push pop bound jne (bad) mov scas mov ret aad loope out hlt sti add push adc xor push pop popa addr16 mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov je addl rol rcr (bad) in repnz incl and inc dec push pop pop imul test stos mov mov fucom ljmp push sbb sub xor push pop bound je orl ror aam loope out hlt sti add or sub dec push pop pusha data16 jae jg mov mov mov (bad) in repnz incl or sbb es cmp inc dec push pop pop imul test stos mov mov fucom ljmp pop push and xor cmp pop arpl jbe orl scas mov ret aad loop out cmc sti add push adc and cs inc dec dec push pop popa outsb je addl rol rcr loopne in repz incl hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov push or sbb and inc dec push pop pop imul test stos mov mov fucom ljmp push sbb cmp dec dec push pop bound jne (bad) mov scas mov ret aad loop out hlt sti add push adc and sub dec push pop pusha insw jae addb lods mov mov (bad) jmp stc incl and inc dec push pop pop imul test stos mov mov fsubp jmp idiv add adc sbb ds dec push push pop fs ja test test leave iret loope out cmc cld add unpckhps sub xor push pop bound jne (bad) mov scas mov ret aad loop lock add movhps sub ss dec dec push pop bound jne (bad) mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov ret aad loop out cmc sti add unpckhps sub xor push pop bound jne orl rol aam loope out hlt cli add push adc and cs inc dec dec push pop popa outsb jne (bad) mov scas mov ret aad loope out cmc sti add push adc and cs inc dec dec push pop popa push xchg lods mov rol aam loopne in hlt cli add or sub dec push pop pusha data16 jae addb lods mov rol rcr loopne in repz incl or sbb es cmp inc dec push pop pop gs jb jg mov mov mov (bad) jmp clc incb and inc dec push push pop imul test stos mov mov fucom ljmp pop sbb cmp hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov push pop arpl jbe orl mov mov fsub jmp or adc xor push pop bound jne (bad) mov scas mov ret aad loope out hlt sti add push adc and cs inc inc dec push pop popa insl je addl ror aam loope out hlt cli add push adc and sub dec push pop pusha insl jae addb lods mov rol rcr loopne in repz add or cs inc inc dec push pop popa insl je addb mov in testb push sbb xor inc dec push pop addr16 addb mov rorb pop sarb mov (bad) dec fs lcall scas repnz xchg add dec pop imul sahf stos mov iret fsubr testb sbb ss dec pop push inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov fsub lock or and cmp pop arpl test int3 fsub in testl ss dec push popa imul xchg lahf test fucomip hlt decl adc push pusha insb jbe mov int3 (bad) loopne cmc decl adc sub dec push pop push pushf cmpsl mov enter repz adc sub cmp jb xchg leave aam jmp sbb push pop push (bad) mov enter lock add sbb cmp push pusha push jle xchg mov lret call sbb cmp pop bound mov leave shrl jo mov pop imul or sbb push pop outsl jns lea (bad) rcr out sti push adc and test sub bound inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc (bad) lea rcr out cld pop adc sub cmp jae mov int3 (bad) loope stc add sbb pusha imul cmc adc sub dec jnp int loope cmc decb adc and cmp push popa push jg xchg pushf cmpsb mov (bad) jecxz clc add and xor push fwait cmpsb mov (bad) into pop and cmp fs xchg enter repnz or push sub insl jns nop pushf cmpsl mov lret jmp add lea add aaa inc dec push pusha push jle xchg pushf cmpsl mov lret in clc add sbb xor dec push popa insb js (bad) fwait cmpsl mov int jecxz sti pop adc sub aas dec push pop data16 test enter imulb rcrb test ror out cld push adc and pusha insb jns inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov popf stos mov int in std or and cmp popa insb js mov rcr in sti push adc and bound mov enter repz and pop data16 xchg into fsub out sti push adc push pusha insb js (bad) lcall in stc add ds push pusha imul xchg mov aam ljmp cmp pop arpl orl rcr call and cmp pop add (bad) lcall call sbb xor inc dec pop addr16 mov (bad) loope clc add aas dec push popa insb ja mov aad in stc add aas dec push popa insb js mov rcr jmp and cmp pop imul mov cmc add and cmp mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov addr16 mov ftst lock pop adc sub inc dec pop gs mov iret (bad) icebp std or sub inc dec pop gs mov int jecxz stc add aas dec push arpl xchg int3 fsub out cli add sbb pop imul xchg mov fucomp hlt add pop and cmp pop push (bad) mov rcr out stc add sbb sub or pushf cmpsl mov leave adc inc dec push pop imul stos mov (bad) rcr in clc add inc dec jg (bad) stc add pop imul mov testl cmp pop outsl jp nop fwait test mov testb sbb das cmp (bad) xlat add xchg popf cmpsl fstl arpl jle cwtl mov xlat loop testb pop imul xchg inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov (bad) repnz adc push pop data16 test leave (bad) loop stc push adc push popa pushf lret daa push pop imul xchg lahf stos mov leave rcr call and xor imul xchg sahf test mov icebp sti push nopl cmp pop arpl orl into ftst out cli add sbb cmp pop (bad) mov enter cs jle in pusha add xor inc push pop addr16 orl shl in clc add sbb pop addr16 mov rcr ljmp xor jae mov aam in testb adc dec push data16 mov lret (bad) loope clc add push sub dec push pop imul cltd movsb scas mov hlt add and cmp pop imul lds hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov fsub icebp cld push adc xor inc dec pop imul mov lret jmp add and gs mov (bad) repnz adc dec push popa imul xchg sahf cmpsl mov enter testl cmp push pop push mov (bad) repnz pop and cmp pop imul mov hlt decl push and cmp dec push pop push orb fsubrp testb sbb pusha imul cwtl movsb scas mov repz push and gs mov into (bad) icebp std or sub inc dec push bound xchg lret in testl ds push pusha insb ja (bad) lcall in clc add sbb xor dec push pop imul cltd movsb scas mov cmc add inc push pop push orb hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov scas mov cmc add and cmp push pusha push jge xchg fwait add mov add and ror fucom out stc add sbb cmp pop addr16 mov rcr ljmp call pop sub outsb jp (bad) lcall out cld push adc xor push pop imul mov jmp adcl out pop push outsl jns mov enter out stc add cmp outsb js mov (bad) rcr in clc add adc inc push pop outsl js mov (bad) rcr in clc add pop sub outsl js mov enter out stc add aas dec push pop addr16 test ror fucomip repz push adc and push pusha push jle xchg inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc fwait movsl scas mov ljmp das cmp pop bound orb (bad) into fsub in testb adc dec pop bound mov (bad) rcr in testl xor outsl jns mov enter lock add sbb sub inc dec push pusha push jge xchg pushf add (bad) out clc add adc push pop loopew jbe mov xlat loope adc sub cmp inc dec push push pop fs jbe orl scas mov ror aam loop out cmc sti add push adc xor inc inc dec push pop pusha data16 jb jg mov mov mov fucom jmp or push sbb sub xor push pop popa insl jae addb lods mov mov fsubp jmp idiv add adc sbb cmp inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov dec push push pop bound jne (bad) mov scas mov rol aam loopne in repz add or sbb and inc dec push push pop fs ja test stos mov mov fucom ljmp push sbb sub xor push pop popa push mov lods mov ror aad loope out hlt sti add or sub dec push pop pop data16 jb jg mov mov mov fucom ljmp push sbb cmp dec dec push pop bound je addl rol rcr (bad) in repnz incb and inc dec push push pop fs ja orl scas mov ret aad loop out hlt sti add or sub dec push pop pusha data16 jb addb lods mov mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov fcomp in icebp idiv add adc sbb cmp dec dec push pop bound jne (bad) mov scas mov rol aam loope in hlt cli add or sub dec push pop pop gs jb jle mov mov mov fsub jmp or push sbb sub xor push pop bound jne orl rol aam loopne in repz add or sbb es dec push pop pop imul test stos mov mov fsubp jmp idiv add adc push and xor aas inc dec pop arpl orl lret (bad) loope clc add adc sub ds push pop outsl jbe (bad) mov scas mov (bad) rcr jmp adc push and xor ds dec push push pop fs ja orl mov enter repnz pop adc sub hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov ss dec pop data16 mov iret (bad) out stc add sbb sub pusha push addb lods mov rol rcr (bad) in repnz incl and inc dec push pop pop imul test mov jmp add adc and cmp pop outsl jbe mov int fucomp hlt std pop adc push pop fs mov ret into ftst out stc add pop and xor push xchg lods mov rol rcr (bad) in repnz incl or sbb and inc dec push pop pop fs ja orl mov mov fsub ljmp daa sub dec push pop popa insl jae addb lods mov mov (bad) jmp clc incb and xor cmp pop fs ja mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc jge mov mov mov out stc add cmp pop push xchg cltd lahf movsl lods mov mov fsubp ljmp pop push and xor cmp pop arpl jbe (bad) mov scas mov rol aam loope in repz add or sub cmp inc dec push pop pop gs jb jg mov mov mov fucom ljmp push sbb sub xor push pop imul xchg fwait cmpsb mov (bad) into aam jmp decb adc sub cmp je mov (bad) iret (bad) repz add sbb cmp pop arpl jp xchg lcall enter loope out cmc sti add push adc and cs inc inc dec push pop popa insl je addl ror aad loope out cmc sti add push adc xor mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc dec dec push pop popa outsb je addl lret (bad) fsub jmp or push sbb sub ss dec dec push pop bound jne (bad) mov scas mov rol aam loope out hlt cli add push adc and sub dec push pop pusha insw je addb lods mov mov fsubp jmp clc incb adc push and xor ds push pop popa outsb je addl ret aad loop out cmc sti add unpckhps sub ss dec pop fs mov (bad) rcr jmp and ret iret (bad) out sti push adc and pop push orl add push and inc dec push pusha push jle xchg sahf stos mov lret xlat loop cmc incb push xor pop addr16 xchg lcall icebp decb sbb xor dec pop arpl hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov int3 add sbb dec pop bound mov ret into fsub in idiv or sbb dec pop bound jg xchg pushf cmpsb mov ret int loopne hlt decb adc and push pusha imul scas mov jmp decl adc dec pop bound mov iret fsub in cmc add adc dec pop bound jg xchg pushf cmpsl mov (bad) jecxz testl xor inc dec pop arpl (bad) mov enter repz pop adc and pop bound mov rcr in stc add aas dec push pop data16 test ror fucom icebp sti add ss dec push pop push fwait movsb scas mov ljmp xor inc dec push bound jg xchg popf cmpsl mov (bad) jecxz testl xor inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov push pop outsb js lea leave aad ljmp xor push pop data16 test ror fsubrp repz pop adc and cmp push pusha imul xchg sahf cmpsl mov (bad) jecxz clc add and xor dec push pop addr16 test ret fucomip repz push adc and cmp push popa imul xchg sahf test mov in testl xor dec push pop data16 orl enter lock add sbb sub pop push jg xchg sahf test mov out stc add inc dec push pop push fwait cmpsb scas mov in testl xor outsl jns lea lret aam call sbb xor push pop data16 xchg (bad) in stc add sbb sub push popf stos mov int3 (bad) inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc fucomip hlt decb adc xor inc dec pop arpl orb (bad) loope cmc add adc sub cmp jo test ror fucomip repz pop adc xor inc dec pop arpl orl lock add sbb sub inc dec push pop imul mov leave rcr call sbb pop bound orb (bad) rcr in stc add sbb sub inc dec push pusha imul xchg popf cmpsl mov (bad) jecxz testl xor jno test ret into ftst lock push adc and cmp pop data16 xchg ret int loop testb adc and in decb adc sub inc push pop push orl push fs lret out clc add and (bad) test sti inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov nopl cmp pop imul adcl int3 (bad) loopne hlt decl adc xchg dec push movsb fsubr adc jl scas mov adc inc push pop outsl jns mov leave rcr call sbb cmp push pop imul scas mov ljmp xor inc dec pop bound mov rcr out cli add sbb sub inc dec push pop push lcall fsubrp repnz push bndldx cmp push popa push jle xchg pushf movsl mov (bad) into fsub in testl xor outsb js mov (bad) rcr in clc add pop sub cmp outsb js mov enter lock add pop and xor dec push pop data16 test ror fucom icebp sti add aaa inc dec push inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc pop push lcall loop testb adc push pop outsb js lea lret xlat loop testl xor jo xchg sahf test mov lock add inc dec push pop push pushf cmpsb mov (bad) jecxz testl xor push pop arpl orl out sti add aaa inc dec push pop push lcall loope hlt decb adc xor inc dec push arpl mov lret jmp sbb push pusha push jle xchg fwait movsl scas mov jmp decl adc dec pop arpl orl out cli add ss dec push pop push cltd mov aad jmp sbb cmp push pusha imul xchg pushf cmpsb mov (bad) into fadds hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov in cmc decl adc dec pop bound jg xchg sahf test mov in testl xor addr16 xchg ret loopne hlt decl adc sub cmp pop arpl orl out cli add sbb cmp pop arpl orl lret call sbb xor inc push pop outsb js mov enter repnz pop adc xor inc dec pop outsb jns xchg fwait movsl scas mov out clc add and inc dec push pop push jg xchg popf cmpsl mov (bad) jecxz testl xor push pop gs test ret int loop testb adc inc push pop outsw jns mov int3 (bad) fucomip hlt decb adc xor inc dec push popa imul xchg sahf test mov lock add inc dec push pop imul inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov jae mov leave aam in testb push and xor dec push pop addr16 xchg (bad) rcr in stc add sbb cmp pop bound mov enter icebp sti push adc and cmp push popa imul xchg sahf test (bad) lock add sbb push popa imul xchg lahf test fsub icebp sti add cmp push bound mov (bad) rcr out cli add sbb sub pusha push jg xchg popf cmpsl mov (bad) in stc add inc dec push pop imul mov (bad) in clc add inc dec push popa insb ja mov lret (bad) loopne cmc add adc dec push pusha push adcl rcr in stc add push pop push jle xchg pushf cmpsl mov (bad) in clc add and inc inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov push pusha imul xchg mov (bad) loopne hlt decb adc xor inc dec pop arpl orb leave rcr call sbb push pop outsl jns mov lret (bad) loopne cmc decl adc push pop outsl jp mov lret aad ljmp xor inc dec pop arpl orl out sti add aaa inc dec push pop imul scas mov jmp add adc sub cmp outsl jns mov int3 (bad) loope cmc decl adc sub cmp jo test ret loopne loopne hlt incb adc and push pop imul mov (bad) sahf adc cmp scas adc push bound jle xchg sahf test ror out decl and push inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov lods mov nop lcall loopne add add adc sub cmp (bad) aad ljmp xor inc dec pop arpl orl bound mov leave rcr out sti add aaa inc dec push pusha push jge xchg fwait cmpsb mov ret into xchg test fsub icebp sti add cmp push pusha push jg xchg popf iret stc or arpl or stc or dec push pop push orb nop fwait test mov sti push adc xor jbe mov fsubrp repz pop adc pop sub outsb jp (bad) lcall out sti push adc xor dec push pusha insb js (bad) fwait cmpsb mov lret in clc add sbb xor sub ds push pop push pushf cmpsl mov (bad) rcr out sti push adc and pop outsl jp (bad) lcall inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov scas mov out cld pop adc xor push pop addr16 xchg (bad) rcr out cld pop adc xor jae mov jns (bad) lcall jmp add dec push pusha imul fwait cmpsl mov lret xlat jecxz cli push adc xor ja lea rcr ljmp cmp push pusha imul lcall ja mov into (bad) out clc add sbb cmp pop bound (bad) lea int3 xlat loope testl das cmp outsl jp mov rcr in sti push adc xor inc push pop addr16 mov leave adc xchg ret int loope cmc decl adc push pop outsb js mov enter lock add aas dec push pop add jge xchg inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc popf cmpsl mov (bad) rcr in stc add sbb sub push jle xchg pushf cmpsb scas mov in testb adc sub cmp push pop arpl orl in stc add sbb sub inc dec push pop imul scas mov in cmc add adc sub cmp push pop arpl orl in cli add inc dec push cmp aas fcoml ds (bad) push (bad) fwait add cmp pop arpl orb (bad) into fsub jmp incl or sub cmp pop fs ja mov iret (bad) out clc add and xor outsb js mov (bad) rcr jecxz testl xor inc dec pop arpl orb (bad) rcr lock add sbb sub addr16 test mov jmp add pop sub inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc cmp jo test ror fucom lock add sbb sub inc dec push pop push fwait movsb scas mov jmp sbb push pusha push jle xchg fwait cmpsb mov (bad) int loope hlt decb adc xor inc dec pop arpl orl in clc add and xor dec push pop outsl jns lea enter lock add ss dec push pop addr16 test mov add sti push nopl sub pop push lcall fucomip repz pop adc and cmp push pusha push jge xchg fwait movsl scas mov ljmp xor inc dec pop arpl orl in clc add adc inc dec pop outsb js orl lret call sbb push popa imul hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc jg xchg pushf cmpsb mov (bad) into fsub in testb adc dec push pop addr16 test ror fsubrp repnz pop adc and aaa inc dec push pop imul mov (bad) in cli add sbb sub inc dec push popa imul xchg lahf test fucom icebp decl adc xor jo test ror fucomip repz or sbb xor inc push pop gs test mov add decb adc xor inc dec pop arpl orl in stc add ds push pop data16 test ror fsubrp repz pop adc and pop outsl jp nop lcall jecxz testl xor dec push pop push add (bad) out cli add inc dec push pop imul mov (bad) into fsub in testb inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc add adc sub cmp jo orl lret jmp sbb push pop outsl jp (bad) cltd mov aam call sbb pop outsb jns lea lret call sbb push popa insb jbe mov rcr in stc add sbb sub inc dec push pop push pushf cmpsb mov (bad) jecxz cli add adc and cmp outsl jp (bad) cltd mov (bad) loope testl ss dec pop arpl orl lret (bad) loopne add sbb push pop outsl jns mov lret call pop sub dec push pop addr16 xchg ret add in testl xor push lcall loope testb adc dec push pop data16 test hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov int3 (bad) loope cmc decl adc inc push pop gs test ror fucomip repz pop adc and push popa imul xchg sahf test mov lock add sbb cmp pop bound mov rcr in stc add aas dec push pop push fwait movsl mov ret into fsub in testb adc dec add jb xchg ret int loop testb adc inc push pop data16 test ror loopne repz or sbb xor inc push pop outsb js lea lret aad jmp sbb push pop outsl jns (bad) lcall in stc add cmp pop arpl orb leave rcr out sti add cmp push pusha push jg xchg popf cmpsl mov (bad) in clc add mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc xor addr16 xchg ret loopne hlt decb adc xor inc dec pop arpl orl std pop adc dec pop arpl orl in testl xor dec push pop data16 test ror loopne hlt decb adc push pop outsl jp xchg (bad) iret fsub in testl xor imul mov out stc add sbb cmp pop bound mov leave rcr out sti add cmp push pusha imul xchg popf test mov out clc add cmp pop bound mov leave rcr out sti add sbb cmp push pusha push jle xchg pushf cmpsb mov (bad) jecxz testl xor push fwait movsl scas mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov fsub in testl ss dec push pop imul mov (bad) into (bad) in testl xor push lcall loope testb adc sub cmp jo xchg (bad) into fsub in testl xor imul mov enter icebp sti add cmp pop gs test ret rcr in cli add cmp push pop gs xchg (bad) jecxz testl xor dec push pop addr16 test (bad) rcr out sti add cmp arpl jns mov lret aad jmp decl adc daa xor inc push pop outsb js mov leave rcr call sbb xor push pop outsb js (bad) in data16 mov (bad) rcr in pop and arpl test hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc add inc ja (bad) repz ds push pop imul test fsubrp testb sbb xor inc push pop data16 xchg enter lock push adc xor jbe mov aam jmp pop push mov rcr jmp decb adc dec push pop imul mov enter repnz or push pop bound jp xchg fwait mov rol aam loopne in hlt cli add or sub cmp inc dec push pop pop imul test stos mov mov fsubp ljmp sbb and xor ds dec push pop pop fs ja test test leave rcl call or pop sbb ds dec push push pop fs ja test stos mov mov fsub jmp or inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov push sbb ds dec add pop data16 jb jg mov mov mov fucom ljmp push sbb sub ss dec dec push pop arpl jbe orl mov mov fsub jmp or pop sbb cmp dec push push pop fs ja orl mov mov fsubp jmp idiv add adc sbb cmp pop arpl jbe orl scas mov ret (bad) fsub jmp or pop push and xor ds dec push push pop imul test stos mov mov fsubp ljmp pop sbb ds dec push push pop fs ja orl mov mov fsub jmp or adc xor inc inc dec push pop pusha outsb je addb add hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov scas mov ret (bad) fsub jmp or adc xor push pop popa insl je addb lods mov rol rcr (bad) in repnz incl or sub cmp inc dec push pop pop gs jae addb lods mov rol rcr loope out hlt sti add push adc and cs inc inc dec push pop pusha insl jae addb lods mov mov (bad) in repnz incb and inc dec push pop pop data16 jb jg mov mov mov fsubp jmp clc incb and inc dec push push pop gs jb jle mov mov mov (bad) in repnz incl es cmp inc dec push pop pop data16 jb jg mov mov mov (bad) in repnz incb pop es inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov dec push pop pop data16 jae jg mov into ftst out stc add sbb cmp pop outsb ja (bad) xchg pushf mov (bad) lret fucomp repz adc cmp dec push pop popa insl je addl ret fucomip hlt decl push and aaa inc dec pop addr16 mov rcr out decl adc sub dec push pop imul ror aad loope out cmc sti add unpckhps and das xor push pop arpl jbe orl scas mov in stc add sbb sub inc dec push pop push orl enter out clc add sbb sub arpl orl ljmp xor dec push pusha imul mov scas mov rol aam add call pop push adc and sub dec push pop inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc pusha insw jae jg mov mov mov (bad) jmp clc add and xor cmp pop arpl jbe (bad) mov scas mov ror aad loope out cmc sti add push adc and cs inc inc dec push pop popa insl jae addb lods mov rol rcr loopne testb adc sub dec push bound jge xchg sahf movsb stos mov mov fucom jmp or push sbb sub xor push pop bound jne (bad) mov scas mov ret aad loop out cmc sti add push adc and cs inc inc dec push pop popa insl je addb lods mov rol rcr (bad) in repz incl or sbb and inc dec push pop pop imul mov ret in repz pop adc xor push pop fs orl lret hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc xlat fucomip hlt decl pop pop daa xor inc push pop push xchg pushf cmpsl mov (bad) lret rcl fsubp ljmp push sbb cmp dec push push pop bound jbe orl scas mov ret aad loop out cmc sti add push adc xor push pop popa push mov scas mov ret aad loop out add adc sbb cmp pop fs ja orl mov mov fsubp jmp stc incl and inc dec push pop pusha insl je addl ror aam loope out hlt sti add push adc xor push pop popa push mov scas mov ror aam fsub ljmp push sbb sub ss pop imul test stos mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov fucom jmp clc incb and xor ds dec push pop pop gs jb jg mov mov rol rcr loopne in repz add or cs push pop bound ja test stos mov mov (bad) jmp stc incl and inc dec push pop pop imul test stos mov mov (bad) in repnz incl es cmp inc dec push pop pop imul test lods mov mov (bad) in repz add or sub dec push pop pusha insl je addl rol aam loope in hlt cli add or sub dec dec push pop popa outsb je addl ret aad loop out cmc cld add unpckhps and das xor push pop arpl jbe (bad) inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov scas mov ret (bad) fsub ljmp push sbb cmp dec push push pop arpl jbe orl scas mov ret aad loop out cmc sti add push adc and cs push pop popa push mov scas mov rol aam loope in hlt cli add or sub dec push pop popa push mov scas mov ret (bad) fsub jmp or adc xor push pop bound jne orl int hlt decl adc daa xor inc dec pop gs test jmp dec jno xchg out stc add adc push pusha insb jl xchg sahf test loopne testb sbb das cmp pop push (bad) mov mov sub mov xchg ret int3 (bad) loope inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc cli add es cmp inc dec push pop pop imul test stos mov mov fucom ljmp push sbb cmp pop arpl jbe orl mov mov fucom repnz movhps sub aaa cmp pop fs jbe orl mov mov fucom ljmp pop sbb cmp pop arpl jbe orl mov mov loope stc add and gs je xchg mov fsub jmp or push sbb sub add pop fs ja test stos mov mov fucom jmp or adc xor push pop popa push xchg scas mov rol aam loopne in repz mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cli add or sub cmp inc dec push pop pop gs jb test ret int out repz or push sub insb jbe mov rcr out cld or and pop imul stos mov (bad) lret fsubp ljmp sbb and inc dec push pop pop imul test stos mov mov (bad) in repz add or sbb es cmp dec push pop pusha insl je addl rol aam loope sti add adc sbb cmp dec dec push pop arpl jne addl xchg xchg sahf movsb stos mov mov fucom ljmp pop pop and inc dec push cmp dec push pop popa push xchg scas mov rol aam loopne in repz add or sub dec push pop pop gs mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov insb jb jle mov mov mov fucom jmp idiv add adc sbb cmp pop arpl jbe (bad) mov scas mov ret aad loope out hlt sti add push adc and cs inc dec dec push pop bound loop cli push adc xor inc push pop imul cmp push pusha imul fwait cmpsb mov lret out cli add ds push popa insl ja mov rcr ljmp cmp pop imul mov cmc add inc push pop imul movsl mov enter testb sbb das cmp pop imul (bad) rcr call and xor dec push pop push js test mov fsubp ljmp sub inc dec push pop pop outsl js mov rcr loop out inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cld add cmp push pop imul xchg popf cmpsb mov (bad) into fsub in testl cmp pop imul mov icebp sti push adc xor push pop addr16 xchg lret jmp add adc dec push pusha insb ja mov rcr in sti or push sbb sub cmp push pop imul lods mov in repz pop adc sub dec push push pop imul mov ret iret fsub lock pop or cmp gs jge mov into fsub icebp cld pop adc sub inc dec pop outsl jp xchg popf test mov testb push and insw jne mov rcr out decb adc sub inc dec pop arpl test leave aad in clc add cmp je mov lret xlat loope clc inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov add sbb cmp pop addr16 mov iret (bad) repnz or sub inc dec pop data16 mov rcr jmp and cmp pop imul (bad) rcr out std or pop sub aas dec push push pop imul xchg lahf test ror fsub in clc add cmp pop push xchg popf mov fsub icebp clc incb cmp gs mov int out decl and cmp jns xchg add fucomp hlt add and inc dec pop arpl test aad ljmp cmp pop data16 xchg int3 fsub repnz pop adc sub inc dec push bound test lret xlat loop stc add inc dec pop fs xchg shl in clc add sbb cmp pop data16 xchg hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc xchg pushf cmpsl mov lret in stc add sbb xor dec push pusha imul lcall in cli add sbb pop push mov (bad) repnz push and data16 mov rcr call and cmp pop addr16 mov iret (bad) repnz adc push pop push mov fucomp cmc decl push and addr16 mov rcr call sbb pop imul mov repnz or sub inc dec pop addr16 mov iret (bad) repz adc push pop addr16 mov iret ftst lock pop adc sub inc dec pop arpl xchg into (bad) repnz push and cmp pop addr16 mov (bad) rcl fucom in testl sub ss mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov dec push pop gs test mov call and cmp dec push pusha imul xchg mov xlat loopne hlt decb adc push pop data16 mov rcr out decl adc cmp pop bound (bad) lea into fsub out sti push adc xor inc push pop data16 mov int jecxz cli add cmp push pop fs jp xchg sahf cmpsl mov mov jmp add and pop addr16 mov ror loopne repz add sbb push bound jp sub decl adc das cmp mov aam call sbb push popa push jle xchg fwait movsl scas mov jmp decb adc xor inc dec pop bound jg xchg popf cmpsl mov (bad) into fsub jmp call or hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov adc sbb dec pop bound mov (bad) into fsub in testb adc dec pop bound mov (bad) jecxz testl xor inc push pop outsl js mov enter out stc add ds push pop outsb js mov enter lock add pop and xor data16 test mov icebp sti add cmp push pusha push jle xchg pushf cmpsl mov (bad) iret fsub in testb adc sub cmp push pop fs js mov rcr call sbb cmp push popa imul xchg popf test mov out stc add inc dec push pop push lcall loopne cmc decb adc push pop outsb js lea int3 (bad) loopne hlt decb adc push sub cmp push pop fs mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov outsb js mov (bad) rcr in cli add sbb sub pop imul mov (bad) loop testl xor outsb js mov leave rcr out cli add inc dec push pop addr16 xchg ret int3 xlat loope hlt decb adc dec pop bound mov rcr in stc add ds push pop addr16 xchg ret loopne repz or sbb xor inc dec pop bound orl out sti add cmp push pusha push jg xchg sahf test mov out clc add and xor dec push pop addr16 xchg (bad) jecxz clc add and inc dec push pop push popf test mov out stc add cmp pop arpl (bad) mov int3 fsub inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov testl ss dec push pop push lahf test fsub icebp cli add sbb cmp push popa imul xchg sahf test fsub repnz push adc daa xor inc dec pop arpl (bad) lea lret aad jmp sbb xor inc dec pop outsl jns lea lret call sbb cmp bound mov leave rcr ljmp xor jb xchg (bad) iret ftst out clc add aas dec push pop push popf cmpsl mov (bad) rcr in clc add inc dec push pop imul mov out stc add sbb sub inc dec push pop push orb enter repnz push adc and pop arpl jns lea lret jmp sbb xor inc dec pop bound orl inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov rcr call sbb pop bound mov rcr out sti add cmp push bound mov lret aad ljmp xor dec push bound mov lret aad jmp push sub cmp outsl jns xchg test (bad) in stc add inc dec push pop push jg xchg sahf stos mov lret call sbb xor inc dec pop outsb jns mov lret call sbb xor inc dec pop arpl orl repz pop adc xor inc dec pop arpl (bad) lea lret aad jmp sbb xor inc dec pop arpl orl fsubrp repnz push nopl sub popa imul xchg popf test mov lock add sbb cmp inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov popa insb jbe mov rcr in stc add aas dec push pop imul mov (bad) rcr out sti add cmp bound mov (bad) rcr out sti push adc and cmp push popa imul xchg sahf test mov repz pop adc xor inc dec pop arpl orl out sti push adc xor inc push pop data16 test (bad) into fsub in testb adc dec push pop addr16 xchg ret int loop testb adc dec push pop push jle xchg lahf test loopne cmc decl adc dec push bound (bad) mov (bad) loopne hlt decb adc dec push bound orl cmc add push cmpsb fsubr pop sub cltd mov movsb out sbb xchg mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov fsubrp repnz push adc and cmp push popa insb jbe mov rcr out stc add aas dec push pop addr16 xchg ret loope hlt decb adc xor inc dec pop arpl orl lock add sbb sub inc dec push pop push lcall loope hlt decl adc xor inc dec pop outsb js lea leave aam call sbb pusha push jg xchg popf test mov out stc add aas dec push pop addr16 xchg ret int loope cmc decl adc push pop outsb js mov enter icebp add or sbb xor inc push pop gs test ret into fsub in testl xor dec push pop data16 test ror loope testb adc sub cmp inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov dec outsl jns nop fwait test ror fucomip cmc add and gs xchg int3 xlat loop cli push adc push bound (bad) lea into fsub in clc add sbb pop imul (bad) rcr out decb adc dec pop data16 mov rcr out decl push and addr16 mov or and xor outsl jns lea ret aad loop out cmc sti add push push sbb sub xor push pop bound jne (bad) mov scas mov ror aam loope out hlt cli add push adc add sub xor push pop bound jne (bad) mov scas mov rol aam loope out hlt cli add or sub dec push pop pusha data16 jae jg mov mov mov hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc rcr (bad) in repnz incl and inc dec push pop pop imul test stos mov mov fsubp jmp clc incb adc push and xor ds dec push push pop fs ja test stos mov mov fucom ljmp pop sbb cmp pop arpl jbe orl (bad) rcr in stc add sbb cmp popa insl ja mov (bad) int fnop out hlt cli add and cmp push push pop bound jne (bad) mov scas mov ror aam loope in hlt sti add xor push pop data16 mov fsubr hlt decb adc sub bound (bad) mov int3 (bad) loop lock add adc sbb cmp pop arpl jbe orl scas mov ret hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov leave iret aad loop out cmc sti add inc dec push arpl jnp (bad) pushf movsl scas mov in stc add pop and cmp dec push pusha push sahf cmpsl mov enter cmc cld push adc daa xor jo xchg enter loope out hlt cli add push adc and cs inc inc dec push pop pusha insl jae addb lods mov rol rcr (bad) in repnz incl or sbb and inc dec push pop popa insl js mov mov mov fsubp ljmp push sbb cmp dec push add imul test stos mov mov fsub call or adc and cs inc push pop arpl test leave rcl loop clc incl and inc dec push pop pop imul test mov mov hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov fchs out repz incl or sbb es dec push pop pusha insw jae addb lods mov mov (bad) in repnz incl and inc dec push pop pop gs jb jg mov mov mov ljmp xor imul lahf test (bad) repnz or inc dec pop outsl jbe test (bad) mov enter icebp sti add inc dec push bound jmp mov into (bad) (bad) fsub icebp cld add pop jle lcall mov adcb (bad) loopne cmc decl adc sub cmp jb xchg enter mov jl ror jecxz and cmp pop outsb js lret lock pop adc hlt decl lahf mov lret xlat or dec test hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc out lcall xchg xorb mov leave shl and cmpsl mull jp nop pushf cmpsl mov enter clc add sbb pop imul ror in cli add sbb xchg fwait cmpsb mov (bad) rcr out jns lcall mov popa imul test stos mov mov fsub call or adc and sub dec push pop pusha data16 jae jg lea mov mov fchs out repnz incl and inc dec push push pop fs jbe orl scas mov ret aad loop out cmc sti add push adc and cs inc inc dec pop gs (bad) lea int3 rcr out sti add cmp pop arpl mov (bad) into (bad) bnd pop insl jns popl hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc cltd cmpsb mov lret out cli push adc sub inc dec pop addr16 mov rcr jmp add sbb cmp outsl jp nop lcall hlt decb adc sub outsb jns (bad) lcall jmp add inc push pop imul (bad) rcr out decl push and cmp pop push orl cli push adc sub push (bad) lea (bad) rcr in cld pop adc sub jo mov xlat loop clc add sbb sub inc dec push pusha insb js (bad) lcall jmp add sbb pop push orl decl pop and cmp pop push mov (bad) repnz adc sub inc dec pop gs mov (bad) icebp std or pop sub outsb inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc jns xchg pushf test mov cli push adc sub inc dec pop data16 mov rcr call and data16 mov ftst out sti pop adc sub inc dec pop gs mov fxam lock pop adc sub inc dec pop outsl jnp xchg popf test in sti pop adc sub inc dec pop gs mov aad ljmp add xor dec push pop arpl jbe (bad) mov ror loop lock add sbb sub inc dec pop gs addl fsubr hlt decl adc dec pop arpl orl cld or sbb push pop insb ja mov int3 xlat loop stc add sbb cmp pop outsl jp (bad) lcall out cld pop adc pop imul xchg pushf inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc movsb stos mov vpaddusw icebp decb adc push sub dec push popa insb jae orl rcr fsubrp hlt add adc inc dec pop outsl jnp mov ror loop idiv add adc sub inc dec push pusha imul cwtl movsb mov (bad) rcr jmp and inc dec pop gs test lret xlat loope out cli push adc sub inc dec push add jnp xchg sahf stos mov int3 xlat loope clc add sbb pop imul cwtl movsb mov (bad) rcr out decl adc sub ds push pop push orb fxam icebp cld or sub inc dec pop fs xchg int jecxz sti pop adc sub inc dec pop fs mov ftst out cli push adc push arpl xchg int fnop out testl cmp addr16 xchg inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov lret xlat loope testl and pop push mov lret fsub lock pop adc sub jno mov aam in stc add inc dec pop gs xchg lret in clc add adc pop imul (bad) iret (bad) lock pop adc pop add mov (bad) icebp cld or dec pop gs mov rcr out std or push sub ds push arpl orl into ftst lock add cmp ja (bad) fwait cmpsl mov lret (bad) loope stc add sbb cmp arpl orl rcr jmp and cmp pop push mov fucomp hlt add and popa insl js xchg pushf cmpsl mov lret in stc add ds push popa insb js mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc orl (bad) loop clc add sbb xor jbe lea rcr call and cmp pop push mov fucomp repz adc push pop push mov fsubr hlt add pop and cmp pop push mov fild in clc add cmp jbe lea rcr call and cmp pop push orb fucom repnz push adc xor inc inc dec pop gs addb lods mov vpaddusw repnz movhps sub push orl aad ljmp aaa inc dec push pop imul mov cmc add inc dec pop gs test (bad) iret (bad) out cli add cmp pop addr16 mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov enter hlt add push and gs (bad) fwait movsl lods mov xor dec push pop imul rcr in sti or sbb push bound mov lret aam jmp add or sub dec push popa push jge xchg pushf cmpsl mov leave rcr (bad) in repnz incl and inc dec push pop pop gs jb jg mov mov mov icebp sti push adc push pop imul leave in std or inc dec pop aad adc subb cli push adc xor pop gs jecxz cli add cmp ja mov aad dec pop fs test (bad) roll jp mov adc dec pop lea bndstx inc mov or test enter clc add sbb xor dec push pop imul mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc lea aam ljmp cmp pop gs mov aad inc dec pop addr16 mov push pop data16 into adc sub inc dec pop scas add movsb clc bndldx cmp push pop push popf cmpsl mov (bad) into fsub jmp add push and xor lods mov hlt add dec push pusha insb js nop pushf cmpsl mov leave aad in testl xor dec push pop imul mov lret fucom ljmp es cmp push pop fs jle xchg fwait cmpsb mov enter out hlt sti add adc push pop imul mov (bad) rcr in sti add ss dec push pop push mov fsub out cli add sbb das cmp pop addr16 mov vpaddusb icebp cld push adc push pop addr16 mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov jl xchg pushf cmpsb mov (bad) rcr in cli add sbb xor push pop imul mov lret fucom in testl cmp dec add push orl repnz or sbb push pop insw jns xchg fwait cmpsl mov ret leave iret xlat loope cli add sbb xor inc dec pop arpl test int jecxz stc add ds push popa insb jbe mov iret (bad) lock or and gs xchg int jecxz cli add ds push bound test lret jmp add inc dec pop fs mov lret xlat jecxz cli add ds push pusha insb ja mov aad in stc add ds push pusha insb js (bad) lcall jmp add sbb pop push orb hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov ret lret rcl fsubp ljmp cmp push pop gs test mov testl sbb xor inc push pop push (bad) fwait cmpsl mov (bad) rcr call and imul pushf test mov sti or cmp pop push mov fsub out stc add sbb xor dec push pop imul ror loopne testl cmp push pop imul mov testb push and cmp pop imul (bad) rcr ljmp ds push pusha imul lcall call and ss dec pop arpl test enter cmc add and cmp pop push orb fsub in testl aaa inc dec pop fs xchg lret in cli push adc inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov xor dec push popa insl js nop pushf test mov cli push adc push add jp xchg popf test loope clc add sbb xor dec push bound xchg lret in testl cmp push pop push orb fsubrp cmc add and cmp pop push orl aam jmp and cmp pop imul mov repz adc push pop push mov fsub repz push and data16 mov into (bad) icebp std or sub inc dec pop outsl jnp (bad) cltd movsb scas mov out hlt decb push pop es cmp dec push pop pop imul mov rol (bad) in clc add inc dec dec push pop outsl jp xchg pushf cmpsl mov lret call sbb cmp push popa imul hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc test (bad) rcr ljmp add push pop data16 test (bad) rcr out std or sub dec push pop imul mov int3 fsub in stc add sbb xor inc push pop popa push nop pushf stos mov lret jecxz testl cmp push pop push popf movsb stos mov int loop clc incl cmp pop pusha insw jbe lea leave iret (bad) fucomip testl cmp pop push (bad) lea iret (bad) repnz or push sub aas dec push bound orl lret (bad) loop clc add sbb pop imul ret in cld or sub inc dec pop outsl jnp (bad) lcall out decb adc sub inc dec push popa insl js nop fwait cmpsb mov leave aad jmp add sbb cmp pop imul mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov enter add add sbb pusha insb js nop fwait cmpsl mov leave aad in clc add sbb xor dec push pop push (bad) xchg fwait movsl mov leave rcr call adc push pop gs ja (bad) cwtl mov into aam out decl adc cmp push pop addr16 test lret aad jmp add inc dec pop data16 mov aam in clc add sbb xor dec push pop imul cwtl mov (bad) out clc push sbb push pop imul mov repnz or pop sub inc push pop data16 xchg mov into fmuls imul cwtl movsb mov enter clc add sbb xor dec push outsl jl xchg mov (bad) icebp std or dec push arpl xchg lret (bad) loope std or and ds push bound jnp xchg inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov sahf stos mov int jecxz stc add pop sub inc dec pop outsl jp xchg popf test in std or push pop push mov (bad) repz adc dec pop gs mov int in cld or pop sub inc dec pop addr16 mov int in cld pop adc sub inc dec pop fs xchg int in cld or pop sub inc dec pop gs test ret fndisi(8087 call pop push adc and cs inc inc dec push pop popa insl je addb lods mov mov (bad) jmp clc incb and xor ds dec push push pop fs ja test test leave iret (bad) fsub jmp or adc xor inc inc dec push pop outsl jnp lea enter call pop push and xor inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc dec push pop pop imul test stos mov mov fucom ljmp push sbb sub ss pop arpl jbe (bad) mov scas mov ror aam loope out hlt cli add or sub dec push pop pop insw jae addb lods mov mov fsubp jmp clc incb adc push and xor cmp pop arpl jbe orl mov mov fsub call or adc xor inc inc dec push pop pusha insl jae addb lods mov rol aam loopne out hlt cli add or sub dec push pop pop data16 jb jg mov mov mov fucom ljmp pop sbb cmp pop pop fs ja test stos mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc fsub jmp or adc xor inc inc dec push pop popa insl je addb lods mov mov (bad) jmp clc incb adc push and xor cmp pop arpl jbe (bad) mov scas mov ret aad loope out hlt sti add or sub dec push pop pop gs jb jg mov mov mov fucom ljmp push sbb cmp dec dec push pop bound jne addl rol rcr loopne in repnz incl es cmp inc dec push pop pop imul test stos mov mov fsub jmp or adc and cs inc inc dec push pop popa insl jae addb cmpsl scas mov rol aam loopne in repz add or sub dec push pop pusha inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov insl jae addb lods mov rol shl in cmc cld add unpckhps sub xor push pop popa push xchg lods mov rol aam loop out cmc sti add unpckhps and cs push pop popa outsb je addl rol rcr loopne in repz add or sbb es dec push pop pusha insl je addb lods mov rol rcr loopne in repz incl or sub cmp inc dec push pop pusha data16 jae jg lea mov rol aam loopne in repz add or sub dec push pop pusha data16 jae jg mov mov mov (bad) in repnz add push or sub cmp inc dec push pop pop gs jb jg mov mov mov (bad) jmp clc incb inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov adc push and xor ds dec push push pop fs ja orl mov mov fsub jmp or push sbb cmp pop arpl jbe (bad) mov scas mov ret aad loope out hlt sti add push adc and sub dec push pop popa outsb je addl rol rcr loopne in repz incl or sbb and inc dec push pop pop imul test stos mov mov fsubp jmp idiv add adc sbb cmp pop arpl jbe orl scas mov ret (bad) fsub jmp or push sbb cmp dec dec add fs ja test stos mov mov fucom ljmp pop push and xor ds dec push push pop fs ja test inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov mov fucom ljmp sub inc dec push pop push lcall aad jecxz lock add movhps sub xor push pop bound jne (bad) mov scas mov ror aad loop out cmc cld add unpckhps sub xor push pop popa push mov scas mov rol aam loopne in repz add or sub dec push pop pusha insl jae addb lods mov rol rcr loopne in repz incl or sbb es cmp inc dec push pop pop data16 jae jg mov mov mov (bad) in repnz add push or sub dec push pop pusha data16 jae jg mov mov rol rcr (bad) in repnz incl or sbb and inc dec push pop pop imul test mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov xchg cwtl sahf movsl stos mov mov (bad) jmp clc incb and inc dec push pop fs jp xchg repnz addr16 int out cli push adc ljmp into (bad) icebp cld or sub inc xchg pop cmp mov movsb lret sbb ss jg lret fsub lock pop adc sub inc dec pop gs mov fucomip testl cmp ja (bad) fwait cmpsl mov lret xlat jecxz sti or sub push pop push movsb scas mov cmc add sbb pop imul pushf test ror in clc add and xor data16 test ror fsubrp repz pop adc xor push pop data16 test ror fucomip hlt decl adc push pop arpl orl repnz push adc xor inc dec inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov add jns mov lret call sbb cmp push pusha push jge xchg pushf cmpsb scas mov in testl xor addr16 xchg ret int loope cmc decl adc sub cmp push pop outsb jns mov leave rcr jmp sbb xor inc dec pop arpl orl out stc add inc dec push pop imul mov (bad) jecxz testl ss dec push pop imul mov (bad) into (bad) in testl xor dec push pop addr16 xchg (bad) into ftst lock pop adc push pop addr16 test ret loop testb push and xor push fwait movsl mov (bad) iret (bad) out cli add cmp bound add (bad) into fsub inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov clc add and inc dec push pusha push jle xchg pushf cmpsl mov (bad) rcr in stc add inc dec push popa insb jbe mov lret ljmp xor jns lea lret aad ljmp xor push pop outsl jns lea lret ljmp xor push pop outsl jns mov jae and adc mov and pop addr16 mov int3 xlat loop clc add sbb xor js (bad) fwait cmpsb mov lret in clc add sbb xor js nop fwait cmpsb mov leave aad jmp add sbb cmp pop arpl addl rcr in std pop push adc xor dec push popa push ja mov int fnop add cmc add and ss dec push pusha imul xchg mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov lods mov out stc add inc dec pop push movsb mov enter cld or sub inc dec pop gs test enter lock and inc dec push pusha insb ja mov fucomp hlt decl push and push mov (bad) out sti pop adc sub inc dec pop arpl insb ja mov mov enter icebp cli add sbb sub addr16 ss dec push pop addr16 test jo test addr16 sub ror in cli sbb insb ja popf lods mov pop and cmp gs xchg (bad) rcr in testl adcl ds loopne cli add cmp push bound (bad) lea rolb fsubrp hlt add inc push pop imul fwait mov std or ss test mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov repz arpl xchg cmpsl repnz pop addr16 mov xlat loop clc add sbb scas mov xor dec push pop addr16 xchg enter sbb xor out sbb fwait stos rcr ljmp sahf stos mov int3 fsub out cli push adc sub jno mov xor repnz dec jnp xchg lahf stos mov adc inc push push (bad) or pushf (bad) (bad) xor outsb js mov (bad) rcr in testl xor mov (bad) jecxz testl movsb scas mov lock add sbb push push orl and xor dec push bound lret xlat add aas dec push pusha (bad) xchg mov pop imul cltd movsb scas mov cmc add int3 fucomp hlt decl push inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cmp pop push mov fsub jmp add adc out add pop addr16 mov rcr out push bound (bad) (bad) hlt add dec pop arpl test enter cmc add and addr16 mov rcr jmp and lcall addr16 lret pop sub inc jne jmp xchg int3 xlat loope repnz incl or sbb es dec push pop pusha data16 jae jg mov mov mov (bad) in repnz incl and inc dec push pop addr16 xchg mov mov (bad) jmp clc incb and sub cmp inc dec push pop pop imul test stos mov mov fucom ljmp push sbb sub xor data16 mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov lret loope stc add or sub cmp dec push pop pusha data16 jae jg mov mov mov fucom ljmp push sbb sub xor push pop popa push mov scas mov rol rcr loopne in repz incl or sbb and inc dec push push pop fs ja orl mov mov ljmp xor inc dec push pop imul mov leave rcr out incb cmp pop outsl js xchg fwait movsl mov enter in sti or push sbb sub xor push pop popa push mov test mov ror aam loope out hlt cli add push adc and sub dec push pop pusha data16 jb jg mov mov mov fucom ljmp inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc push sbb sub xor bound ja test stos mov mov fucom jmp or adc xor push pop popa insl jae addb lods mov rol rcr loopne in repnz incl and inc dec push push pop fs ja orl mov mov fsub jmp or push sbb sub xor push pop bound jbe orl mov mov fucom ljmp pop sbb cmp pop arpl jbe (bad) mov scas mov ret aam loope out hlt cli add or adc xor push pop bound jne orl mov mov fucom jmp or adc xor push pop bound jne orl mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov fsub jmp or adc xor inc inc dec push pop popa insl je addb lods mov rol rcr loopne in repz incl or sbb es cmp inc dec push pop pop gs jae jg mov mov mov (bad) in repnz add or sbb and inc dec push pop pop gs jb jg mov mov mov fsubp jmp clc incl and inc dec push pop pop gs jb jg mov mov mov fsubp jmp idiv add adc sbb cmp add imul test stos mov mov fsubp jmp clc incb and xor cmp pop arpl jbe orl mov mov fucom ljmp push sbb cmp dec dec inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov push pop bound jne (bad) mov scas mov ret (bad) fsub jmp or push sbb sub ss dec dec push pop bound jne orl rol aam loopne out hlt sti add adc dec push pusha imul mov (bad) rcr call sbb sub xor push pop bound orl (bad) in repnz incl or sub dec pop arpl (bad) mov into fxam icebp std or push pop data16 mov (bad) rcr out add repz mov push inc jp lods jmp jl (bad) cmp push pop data16 test ror fsubrp repnz sub inc push mov iret (bad) in testb cmp pop mov aam call sbb inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc xor dec push pop imul xchg mov fsub in testl xor dec push pop addr16 adc dec pop gs xchg add jne repnz dec pop mov (bad) loope stc add inc dec pop data16 out push xor pop imul scas mov jmp sub inc dec pop fs mov rcr out decb adc push pop addr16 mov rcr jmp and inc dec push popa push orb into fsub out clc add inc dec pop outsl jp xchg pushf cmpsl mov lret xlat loop stc add inc dec pop arpl (bad) lea lret (bad) fucomip hlt add sbb cmp pop addr16 mov (bad) icebp cld pop adc sub jo mov ftst lock pop adc sub jo inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov xchg lret xlat jecxz cli push adc pop arpl xchg lret aad in stc add ds push pop imul lcall in stc add aas dec push bound test mov testl cmp push pop push orl testl ds push popa insl js (bad) lcall ljmp cmp push pop imul lcall jmp add sbb xor dec push pop addr16 test mov in clc incl and dec push bound orl in cli push adc and cs inc push pop gs xchg (bad) rcr jecxz stc add ds push pop imul cwtl mov fucomi cmc decb adc dec push popa imul xchg mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov ror fucomip cmc add push and xor dec push pusha imul mov lock pop adc sub cmp push pop arpl ja mov iret xlat fsubp out cli push adc add xor inc dec push pusha insb jne mov ret rcr in cli add adc sub ds push pop bound js (bad) cltd movsb scas mov lock add inc dec pop arpl mov loope stc add ror fucomip repnz add sbb sub inc dec push pop addr16 test mov in testl xor inc jns mov fsub out stc add sbb pop addr16 mov int in cld pop adc sub dec push pusha xchg leave repnz and ja mov iret (bad) in idiv or sub js xchg lahf stos mov int3 fsub out cli push adc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc dec pop arpl test lret xlat loop clc add sbb xor outsl jns xchg cltd lahf movsl stos mov mov icebp cli add xor add pop imul lea iret frstpm(287 lock add adc dec push pop imul scas mov lods mov cltd test in push arpl adc push movsb scas mov icebp std or push sub insl (bad) lahf stos mov into ficompl das cmp push pop push das ds je xchg pushf test mov or cmp orb inc push pop imul cmp pop outsl jns lea mov add adc imul mov leave aam in clc add sbb xor aas dec push pop imul call xchg fmuls sub inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc cltd (bad) aam pop push mov (bad) icebp cld pop adc xor push pop addr16 mov pop adc ret call and addr16 mov pop dec lea mov lcall inc push pop pop imul xchg mov (bad) icebp cld pop adc xor dec pop fs mov rcr jmp and cmp push popa insl jp xchg fwait cmpsb mov (bad) rcr call pop sub aas dec push popa imul xchg mov fsub repnz or sbb xor dec push fs xchg lret xlat loop stc add sbb xor pop arpl xchg int3 fsub out stc add cmp jb mov lret aad in testl cmp gs mov rcr call mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc pop and outsl jns lea int3 fsub out cli add aas dec push add jp xchg popf stos mov int3 fsub out sti pop adc sub jo xchg int3 fsub out stc add aas dec push bound test int3 fsub out sti or sub inc dec pop data16 mov lret in stc add sbb xor jbe lea aam jmp add sbb xor dec push pusha imul cltd movsl mov (bad) rcr jmp and cmp pop addr16 mov rcr out add and cmp pop push mov (bad) repnz or sub inc push pop addr16 mov iret (bad) icebp std or push sub dec push pop imul cmpsl mov leave iret aad loop out cmc sti add adc sub inc dec push pop bound jns mov hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov fucom in repnz incl adc xor inc push add js mov enter icebp sti push adc sub cmp ja mov into fsub icebp sti add cmp pop outsb jns mov rcr out sti push adc xor je mov rcr loop sti add movhps xor push pop imul mov out cld or sbb dec push pusha imul xchg pushf mov (bad) icebp clc incb adc dec pop pusha data16 je mov int3 fsub lock or sub insl js (bad) fwait cmpsb mov (bad) rcr call and xor push orl repnz or push sub dec push bound test lret in stc add sbb xor inc push pop data16 test hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov popf cmpsl mov lret in testb push sbb pop imul cwtl movsb mov (bad) rcr call and cmp pop imul vpmaxub hlt add sbb cmp pop imul vpaddusw out cli pop adc pop and push pop addr16 mov mov icebp clc add sbb pop bound jge xchg popf test rcr call pop sub inc dec pop outsl jp xchg sahf stos mov rcr out add and cmp pop imul fwait cmpsl mov lret aad in testb sbb cmp pop jno mov lret jmp add sbb cmp data16 mov into (bad) repnz adc sub inc dec pop data16 mov fsub hlt add pop and outsb jp nop pushf test loope testl inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov add and cmp pop data16 xchg ftst lock or sub inc dec pop bound mov lret aad out stc add cmp jne mov rcr call and cmp pop push mov fucomp hlt decl adc push pop push mov fsubr hlt decl push and cmp pop imul ret iret (bad) repnz push and addr16 mov rcr ljmp cmp pop addr16 mov fadds stc adc dec push pop bound jne orl ret aad loop out cmc sti add push adc xor inc dec dec push pop popa outsb je addl rol aam loope out hlt cli add or sub dec push pop pusha inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov insl jae addb lods mov rol rcr (bad) in repnz incl es cmp push pusha imul xchg popf cmpsl mov (bad) call sbb sub aas dec push pop fs ja orl mov int in hlt cli add or sub dec push pop pusha data16 jae jg mov mov repz adc sub inc dec pop data16 mov rcr call push sub aas inc dec push pop pusha insw jae addb lods mov mov (bad) out hlt cli add push adc and cs inc inc dec push pop popa outsb je addl (bad) out cli add sbb xor ds push pop push pushf cmpsl mov (bad) rcr ljmp cmp pop arpl orl into (bad) in clc add sbb sub mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc aaa inc dec pop arpl test lods mov rol rcr loopne in repz add or sub dec push pop pusha insw jae addb lods mov rol rcr loopne in repz add or ds dec push pop pusha insl jae addb ret in cld or sbb xor dec push bound orl and data16 mov (bad) icebp std pop adc pop outsl jns mov fiadd ljmp out cli push adc push pop xchg in std xor stos mov int3 xlat fsubp repnz adc push pop push lahf stos mov rol (bad) repnz add or sub dec push pop pusha data16 jb jg mov mov mov fsubp ljmp pop sbb cmp dec push inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov push pop arpl jbe orl scas mov ret aad loope out cmc sti add push adc xor pusha insl jae addb scas mov rol aam loope out hlt cli add or sub dec push pop popa push mov scas mov ret (bad) fsub jmp or push sbb cmp pop arpl jbe orl mov mov fucom ljmp adc pop es cmp inc dec push pop pop data16 jb jg mov mov mov (bad) in repz add or sub cmp inc dec push pop pusha insw jae addb lods mov mov (bad) in repnz incl and inc dec push pop pop insw je addb scas mov rol aam loope out hlt sti add hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov or adc xor push pop bound jne (bad) mov scas mov ret (bad) fsub jmp or push sbb sub ss dec dec push pop bound jbe orl scas mov ret leave rcl fucom jmp or pop sbb cmp pop arpl jbe (bad) mov scas mov ret (bad) fsub jmp or adc xor push pop add js test stos mov mov fsubp ljmp pop push and xor cmp pop imul test mov rol rcr loopne in hlt cli add push adc and cs inc inc dec push pop pusha insl jae addb lods mov rol rcr loopne in repz add or sbb es dec push pop pop data16 jb jg mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov lods mov mov (bad) in repnz incl and inc dec push pop pop imul test stos mov mov fsubp jmp clc incb adc push and xor cmp pop imul test lods mov mov loopne testb sbb sub cmp jne mov enter icebp clc incb and inc dec pop fs orl scas mov ret aam loope out hlt cli add or das cmp outsl jp xchg lahf stos mov into (bad) repz push and ss dec pop outsb jns lea into fsub in clc add adc sbb sub ss dec dec push pop bound jbe (bad) mov mov mov fsub jmp or sbb xor inc dec push popa insl jns mov ret in mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc in hlt add adc dec push pop gs test (bad) rcr in sti add aaa inc dec pop outsl jbe mov int fsubp jmp clc incl and inc dec push pop pop gs jb jg mov mov mov fsubp jmp clc incb and inc dec push pop pop push add mov (bad) in repnz incl and inc dec push pop pop imul test mov mov fsubp ljmp push sbb sbb cmp arpl mov rcr in clc add and xor dec push pop data16 test mov icebp sti add iret or ja loope dec pop bound stos mov enter icebp cld push adc and pop imul hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc jl nop lcall nopl sub pop push fwait movsl scas mov ljmp cmp pop arpl mov iret (bad) in testb adc sub cmp pop arpl (bad) mov enter lock add sbb sub inc dec push pop push lcall fsub jmp decl adc dec pop bound mov (bad) into fsub in cmc add adc inc push pop outsb js mov enter lock add ss dec push pop push lcall loopne cmc add adc sub cmp push pop data16 orl leave rcr out cli add sbb sub inc dec push pop addr16 test ror fucomip hlt std or sbb xor inc dec push popa imul xchg popf cmpsb mov (bad) into fsub in testb mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov or sbb push pop arpl orl out cli add sbb sub inc dec push pop push lcall loopne repz adc xor inc dec pop arpl orl out sti add cmp push popa insb jbe mov ror fucomip repz adc xor inc push pop outsl jns lea leave rcr jmp sbb push pop outsw jns (bad) lcall jecxz clc add inc dec push pop imul mov ret int jecxz testl xor push jle xchg popf cmpsl mov (bad) jecxz testl xor jno test ret loope cmc decl adc sub cmp push pop outsb jns lea int3 (bad) loopne hlt incb adc xor dec push pop data16 xchg mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc cltd movsb scas mov out clc add and xor data16 test ror fucomip repz pop adc xor inc push pop outsb jns lea lret aad ljmp xor inc dec pop bound mov rcr in icebp sti add cmp push pusha push jle xchg pushf cmpsl mov (bad) in stc add and xor dec push pop data16 test ror fucomip repz adc xor inc dec pop arpl orl repz pop adc and pop bound orl out sti add sbb sub pop imul mov vpand lock add sbb push gs test (bad) iret ftst out cli push adc and cmp push pop imul arpl orl inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov hlt decb adc xor ljmp xor dec push popa insl js nop fwait cmpsl mov leave mov push orb aam cmp lcall repnz push adc and call inc dec push bound mov or sub xchg jne nop pushf cmpsl push adc xor inc push test stc add push xor fucomip stc add addl clc add cmpsl mov (bad) rcr in inc jp into fyl2xp1 or cmp pop arpl test ror fsubrp repnz push adc and cmp push pop imul mov ret int loope cmc decl adc dec pop bound ret loopne hlt std pop adc and std or jbe stos (bad) (bad) jg cwtl lret icebp sub lock add mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cmp pop data16 xchg (bad) int fnop out repz add or cs inc inc dec push pop pusha insl jae addb lods mov rol rcr loopne in repz incl add sub cmp inc dec push pop pusha data16 jae jg lea mov fchs out repz incl and inc dec push push pop fs ja test stos mov mov fucom jmp or push sbb sub xor push pop bound jne (bad) mov scas mov ret leave rcl fucom jmp or push sbb cmp dec push push pop bound jne (bad) mov scas mov rol aam loopne in repz add or sbb es dec push pop pop imul test stos mov mov fucom ljmp hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov adc sbb cmp dec dec push pop arpl jbe orl mov mov fsub jmp or push sbb sub ss dec dec push pop add jo jl mov mov mov fsub call or adc and cs inc inc dec push pop popa insl jae addb lods mov rol rcr loopne in repz incl or sbb daa sub dec push pop pusha insw jae addb lods mov mov (bad) jmp clc incb adc pop and inc dec push pop pop imul test stos mov mov fucom jmp or push sbb sub xor push pop bound jne orl ror aad loop out cmc sti add unpckhps and cs push pop popa outsb je addl hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cmpsl scas mov rol rcr loopne in repz incl or sbb and inc dec push pop pop fs jb jg mov mov mov fcomp in icebp clc incb adc sbb ds dec push push pop fs ja orl mov mov fsub call or pop push and jb subl imul rorb inc jl inc mov jns nop lcall loopne hlt decb adc and pop addr16 test mov jmp decl adc sub orl leave jle popf cmpsl mov (bad) jecxz testl xor addr16 int3 hlt dec mov (bad) loopne hlt decl sub jge xchg fwait cmpsb mov (bad) into fsub in testb adc sub cmp push pop fs test ror fsubrp repnz pop addr16 mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov movsl mov hlt ljmp je (bad) add int3 xlat cld or pop sub cmp push pop arpl orb (bad) iret (bad) in testb adc dec pop popa imul xchg pushf movsl scas mov ljmp out cli add pop and ss dec push pop addr16 test mov out stc add inc push pop fs ja mov iret (bad) in testb adc sub cmp pop outsb ja mov add rcr out stc add ds push pop outsl js mov (bad) rcr jecxz testl icebp sti add ss dec push pop addr16 test ror fucom lock add sbb sub data16 orl leave rcr out cli add sbb sub outsl jns mov (bad) rcr in mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc out stc add and xor dec push pop outsl jns lea pop imul scas mov call sbb sub pop addr16 test ror fucom icebp cli add pop and inc dec push pop addr16 test ror fucom icebp sti add ss dec push pop addr16 test ret loopne repz pop mov xlat loope cmc decl adc dec pop arpl add mov or jmp push sub cmp xchg fwait movsl scas mov in testb adc push push jg xchg ret aad jmp add adc daa xor inc dec pop bound orl testl cmp pop addr16 test (bad) into fsub out clc add and xor dec push pop addr16 jge mov mov mov fucom inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov lock add adc sbb cmp outsb js mov (bad) iret (bad) lock add sbb sub bound test mov hlt add pop sub inc dec push pop push lahf test (bad) repnz or sbb and inc dec push pop pop imul test lods mov mov fsubp jmp clc incb adc and cmp pop outsl jp (bad) fwait cmpsl mov adc push pusha sahf mov cmc es (bad) mov lock pop adc xor dec push popa insb jbe mov rcr jmp inc dec pop gs popa stos cld insb mov jmp (bad) mov (bad) rcr in clc add and popa insb js xchg popf test mov leave rcr out stc add cmp outsl js mov (bad) rolb hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov adc sub cmp push pop arpl (bad) mov (bad) rcr in clc add adc inc push pop outsb js mov (bad) rcr jecxz testl xor inc dec pop bound mov ret int loopne repz pop adc and aaa inc dec push pop push lcall fsubrp icebp sti add ss dec push pop addr16 orl ror fsubp icebp cli add pop and xor data16 test mov out stc add pop sub cmp push pop arpl orl jecxz testl xor push pop outsb js mov (bad) rcr in testl xor push pop outsb js mov leave rcr out sti add sbb sub inc dec push pop push cltd mov aam call sbb cmp hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov dec push popa imul xchg popf cmpsl mov (bad) into fsub in testl xor dec push pop addr16 test ret fucomip hlt decb adc xor inc dec pop popa imul xchg popf cmpsl mov (bad) in clc add aas dec push pop push lcall fucomip repz adc and cmp push pop imul cmpsb mov (bad) into fsub in testb adc inc push pop gs orl leave rcr out sti add cmp pop outsb js lea lret call sbb das cmp bound mov leave rcr out cli add sbb sub inc dec push pop imul scas mov in testb adc inc push pop outsl jns mov lret call sbb cmp push pusha push jle xchg pushf cmpsb inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov jmp add adc sub cmp push pop fs ja mov (bad) rcr in cli add sbb sub inc dec push pop push jge xchg fwait movsl scas mov in testl xor push pop outsb js mov enter icebp cli add sbb sub popa imul xchg add xlat loop clc add aas dec push pop imul scas mov std pop adc xor inc dec pop bound mov rcr jmp pop sub dec push pop data16 test ror fsubrp repnz push adc and cmp push popa imul xchg lahf stos mov (bad) rcr in cli add cmp push popa imul xchg sahf test mov out stc add sbb sub pusha push jle xchg sahf cmpsl mov (bad) jecxz testl xor inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov push pop data16 test ror fucomip repz pop adc xor inc dec pop arpl orl out sti add cmp pop bound mov rcr in cli add pop and pusha imul mov (bad) into add in stc add inc dec push pop imul scas mov in testl xor jo test ret int loope testb adc dec push pop addr16 xchg (bad) in stc add inc dec push pusha imul xchg lahf stos mov leave rcr out std pop adc xor inc push pop outsl jns (bad) lcall loope testl xor imul mov out stc add aaa inc dec push pusha push jg xchg lahf test fiadd hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc call sbb cmp push popa imul xchg lahf test fucom icebp sti pop adc and cmp push popa insb jbe mov enter icebp cld push adc and cmp push popa insb ja mov enter repz adc inc dec push pusha imul xchg sahf test mov icebp sti add cmp push bound mov enter icebp sti add cmp push popa imul xchg popf cmpsl mov (bad) rcr in clc add and xor dec push pop push lcall loop testl xor push lcall jecxz testl xor addr16 xchg ret int loope testb pop and inc dec push pop imul mov (bad) rcr out cli add sbb sub inc dec push pop imul mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov (bad) rcr in cli add cmp push pop imul mov into (bad) out cli add cmp push pusha push jg xchg stos mov in testl aaa inc dec push pusha imul mov int loope testb adc sub cmp push pop outsb js mov leave rcr out sti push adc and cmp pop data16 test ret int loop testb adc sub cmp push pop arpl (bad) mov leave rcr call sbb pop bound orl in stc add inc dec push pop addr16 xchg ror loope cmc decl adc dec pop arpl (bad) mov leave rcr out cli add sbb sub pop imul mov (bad) iret (bad) in clc add push pop sub mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov aas dec push pop addr16 test ret loope testb adc dec push pop data16 test ret int loop testb adc sub dec push pop push lcall (bad) in testl xor dec push pop push jg xchg popf test mov lock push adc and pop outsl jns mov lret aad jmp sub sub mov out pop xor push pop push mov (bad) repnz pop adc push pop push orl add inc test cld inc dec pop arpl test int jecxz clc add sbb cmp pop push sahf test loope sub imul mov in cmc add dec push pop push sahf stos inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov lret dec jno movsb mov leave aam ljmp cmp pop push mov fucomp hlt add pop and data16 mov ftst out cli push adc push bound test fmull dec jle sar pop push and data16 test enter repnz adc sub inc dec pop data16 test (bad) rcr in stc add sbb cmp pop outsl jns xchg pushf cmpsb mov (bad) rcr in sti add aas dec push popa outsl jns xchg pushf test mov icebp cld add cmp gs mov iret (bad) icebp std or pop sub ds push outsb jl nop sahf test mov cmc decl and xor push popf cmpsl mov (bad) rcr out cld push adc push arpl test (bad) aam mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov fucomip testl cmp pop imul mov enter repz pop adc push popa push orb int3 xlat loope testb adc sub inc dec push pusha insl jns xchg popf test mov clc add inc dec pop bound orl hlt add sbb sub inc dec pop bound orl iret (bad) out stc add aas dec push pop imul mov out stc add sbb pop outsb jnp xchg pushf cmpsl mov leave aam jmp and inc dec push arpl orl rcr in cli add sbb das cmp pop outsb js (bad) lcall in cld push adc pop outsb js lea movsb fucomip cmc add and stos mov int3 xlat loope hlt incb adc push pop addr16 mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov movsl aad or imul xchg sahf test fsub icebp sti add cmp arpl (bad) lea int loope testb push and cmp or (bad) ss insb jle (bad) cltd movsb mov leave aam jmp clc add sbb dec pop fs xchg mov repnz or sbb daa xor push pusha push (bad) mov aam jmp add and cmp pop imul ror jecxz idiv add inc dec pop bound test leave aam ljmp cmp addr16 mov rcr out jae cmpsb int in clc add adc mov fsubrl pop xchg lahf leave adc mov bound (bad) mov enter lock add sbb sub inc dec push bound mov (bad) rcr out sti add mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc test ret int loope hlt decb adc dec pop bound decl ds push pop addr16 test mov lock add ds push pop data16 xchg ret loope cmc decl adc sub xchg mov (bad) loope cmc add repz push and jbe xchg mov xchg int fiadd and cmp push dec pop data16 xchg outsb lret (bad) sub addr16 aaa insb test adc and jge xchg mov fsubr hlt decl pop and cmp pop push lahf test pop jg xchg lahf test fucomip repnz pop adc and push pusha push jle xchg pushf cmpsl mov (bad) jecxz testl xor push loope add ss gs mov (bad) icebp std inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc or sub inc push pop addr16 mov rcr jmp and cmp push pop push (bad) mov aam in testl cmp mov dec lea pop pop imul dec pop gs mov int jecxz stc add sbb xor inc dec pop arpl (bad) lea sub inc dec pop data16 push popa insl js mov rcr jmp and cmp push pop imul cwtl movsb mov (bad) iret (bad) in clc add and cmp pop outsl jp nop pushf cmpsl mov enter hlt decb adc sub outsl jp xchg sahf stos mov int in sti add cmp push pop outsb js lea rcr ljmp cmp pop push mov (bad) repnz or sub inc push pop data16 mov fadds hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc in sti or sub inc dec pop gs xchg int in sti pop adc sub outsb js (bad) lcall ljmp cmp pusha insb js (bad) fwait cmpsl mov lret in clc add sbb xor dec push pop imul cltd movsb mov (bad) rcr jmp and push mov fucomip testl cmp push pop push orl add and cmp pop imul mov hlt decb adc xor inc dec push pop bound jnp xchg pushf mov ret aad jecxz stc push push sbb dec push pop outsw jp xchg pushf test rol aam loopne repz or push sub imul scas mov jmp decl and cmp push mov (bad) out stc add sbb hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cmp data16 xchg enter repnz pop adc push popa insb js mov rcr jmp adc pop sub dec push pusha insb jbe orl (bad) out std or push sub cmp outsb js (bad) cwtl lahf cmpsl mov lret aam jmp sti add nopl pop arpl ja (bad) cltd movsb scas mov repz pop and data16 xchg lret aad in testl aaa cmp jbe lea into (bad) lock or push sub dec push bound orl aam in clc add sbb aaa inc dec pop bound orl rcr out sti push adc push popa outsb jns nop fwait cmpsl mov enter testl cmp ja (bad) lcall jmp add sbb xor dec push inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov insl js mov shl call sbb daa sub pop imul test mov hlt sti add and cmp pop fs jl xchg popf test mov in sti pop nop/reserved pop imul mov cld or pop sub inc push pop push cmpsb mov leave aam ljmp cmp push bound xchg lahf test fucomip testl cmp pop data16 mov (bad) repnz adc sub inc dec pop gs mov into (bad) icebp decb adc dec pop outsb js mov rcr call pop sub inc dec pop bound orl (bad) loop cli push adc sub dec push pop push orl testl cmp pop addr16 mov iret inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov (bad) icebp std or dec pop addr16 mov rcr call and aaa inc dec pop data16 mov int3 xlat jecxz cli add inc dec pop gs xchg lret (bad) loop clc add sbb xor jbe lret sbb push popa imul xchg popf cmpsb mov (bad) into fsub in testb adc inc push pop outsb js mov leave (bad) out stc add jl nop lcall loopne hlt decb adc push daa xor js mov (bad) rcr in clc dec mov xor inc dec pop data16 mov movsl scas mov in (bad) int or and jnp push xor inc push pop addr16 mov inc push jg out and mov mov xor inc push pop fs ja orl mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov popf mov ret aad loop out cmc sti add unpckhps sub xor push pop popa outsb je addl rol aam ljmp cmp pop push lea mov mov (bad) jmp clc incb adc push and inc dec push push pop fs ja test stos mov mov fsub jmp or adc cmp pop gs add ror fsub lock add adc sbb ds push pop push orl out repz add or sbb es dec push pop pop gs jb jg mov mov mov fucom ljmp push sbb sub xor push add jo jge mov scas mov ret aad loope out inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cld pop adc dec pop addr16 jge xchg lahf test mov repz adc sub cmp pop outsl jnp xchg popf movsb scas mov out sti add and inc dec push pop imul pushf mov ret leave rcl fucom jmp or push sbb sub xor push pop bound jne orl rol aam loopne out hlt sti add push adc sbb sub xor push pop bound je addl rol aam loope out hlt cli add push adc xor push pop bound jne (bad) mov scas mov ret aad loop out cmc sti add movhps ds dec push push pop arpl ja test movsl stos mov mov fsubp jmp idiv add adc push and xor ds dec push push pop arpl hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov push jbe orl mov mov (bad) jmp clc incb and xor cmp pop arpl ja orl mov mov fucom ljmp pop sbb cmp pop arpl ja orl mov mov (bad) in repnz incl sub xor push pop bound jbe jge mov mov mov fucom jmp or push sbb sub xor push pop popa push mov scas mov ret aad loop out cmc cld add movhps sub ss dec dec push pop bound jne (bad) mov scas mov ret aad jecxz add idiv add adc sbb cmp pop arpl jbe orl scas mov ret (bad) fucom ljmp hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov or pop push and xor ds dec push push pop fs ja orl mov mov fucom ljmp push sbb ds dec push pop pop imul test stos mov mov fsub ljmp push sbb sub ss dec dec push pop bound jne (bad) mov scas mov ret add fucom ljmp push sbb sub xor push pop bound jne (bad) mov scas mov ret aad loop out cmc sti add unpckhps sub xor push pop bound jne addl rol rcr loopne in repz add or sub cmp dec dec push pop popa outsb jne (bad) lea int3 xlat loope testb sbb xor dec push pusha push jg xchg fwait mov ret aad loop testl mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov sub cmp inc dec push pop pop imul test stos mov ror loopne hlt decb adc sub inc dec pop data16 mov iret (bad) repnz or push and inc dec push push pop fs ja orl scas mov ret (bad) fsub jmp or adc ss dec add pop arpl jbe (bad) mov mov lret rcr jmp sbb sub inc dec push popa outsb jnp mov int3 fsub out cld or sbb xor inc push pop outsl jp xchg pushf mov ftst out sti push or inc dec push arpl jge mov scas mov ret add fsub jmp or adc xor push pop popa insl je addb lods mov rol rcr (bad) in repnz incl aaa cmp pop fs jbe mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc jge mov scas mov ret leave iret (bad) fsub call or push sbb cmp dec push push pop arpl jbe (bad) mov scas mov ret aad loop out clc add pop and bound (bad) mov mov fsubp jmp clc incb pop es cmp inc dec push pop pop gs jb jg mov mov mov loopne in repz add or sub dec push pop pusha insw jae addb lods mov rol rcr loopne in repz add push adc and sub dec push pop pusha insl jae addb mov rcr call pop and cmp push arpl jg xchg sahf test ror (bad) repz add cmp test ret loopne cmc decl adc sub cmp dec push pop data16 inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov nop fwait movsl scas mov in testl ss dec push pop push fwait movsl scas mov in add and ss dec push pop push lcall jecxz clc add aas dec push pop push fwait movsl scas mov jmp decl adc push pop data16 xchg (bad) into fxam out stc add sbb sub inc dec push pop push pushf cmpsb mov (bad) rcr in stc add sbb sub inc dec push pop imul mov ret int loop testl xor addr16 xchg ret int loop testb adc dec push pop addr16 xchg ret loope cmc decl adc sub cmp push pop outsl jns lea lret aad ljmp xor jo add mov in testl mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov sub cmp jno test (bad) into fsub in testl xor imul mov (bad) in stc add sbb sub inc dec push pusha push jg xchg sahf test ror fucomip hlt decl adc sub cmp push pop outsl jns mov into (bad) out clc add inc dec push pop push jg xchg sahf test fsub icebp sti add cmp push pop gs test (bad) iret (bad) in clc add and xor push lcall loop testl xor push jle xchg popf cmpsl mov (bad) rcr in add push push jle scas mov push pop and cmp inc dec pop gs test mov cmc cld add nopl push pop fs jb orl rcr call sub inc dec pop inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc push lods mov icebp cld inc push bound mov (bad) in testl xor inc dec pop bound mov ret push sbb cmp pop addr16 mov xlat loope testl cmp pop push mov (bad) lock ja lods fsub out clc add inc push pop fs jne mov ret int3 aad ljmp jne mov rcr ljmp cmp push pop push orl icebp testl xor ds dec push pop data16 xchg mov testl xor dec push pop imul cmpsb scas mov in cmc add and sub imul ror in decb adc push pop imul mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov aam in clc add sbb cmp pop imul ret int loop cmc add inc push pop push lahf stos mov iret fsubr repnz or pop sub inc dec pop gs xchg int in cld or sub inc dec pop gs xchg vpmaxub testb push and inc dec push bound (bad) lcall jmp add dec push pusha imul xchg mov (bad) loopne cmc decl adc sub inc dec push bound test enter testl cmp push pop push orl testl cmp push pop imul mov repnz push and push (bad) mov fwait cmpsl mov lret in testb sbb cmp pop imul (bad) rcr jmp and pusha imul cltd movsl inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov (bad) rcr ljmp cmp pop imul mov cmc add and cmp pop imul mov repz push and cmp addr16 mov rcr call and cmp pop addr16 test rol fsubr cmc cld add adc sbb sub cmp pop arpl test mov (bad) in testl xor inc push pop data16 (bad) lea enter clc add adc sbb dec push bound test ret int loope cmc decl adc push pop push (bad) mov iret fucomip repnz or dec add insb ja mov iret (bad) icebp sti push adc xor push pop addr16 mov int3 xlat loop stc push or ds dec push pop fs xchg inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov mov cmc add adc and outsb js mov add mov cmp pop push orl std or pop sub dec pop fs xchg int3 xlat loope (bad) xor pop data16 xchg enter cmc decl adc dec push popa insb jbe lea rcr call and bound orb fsub in clc add sbb cmp pop push mov (bad) repnz or dec pop data16 mov fsub icebp std or dec pop data16 mov rcr out std or sbb xor inc inc dec push pop popa insb ja (bad) cltd movsb mov mov lock pop adc and ss dec pop fs jg mov leave aad out repz add cmp hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov push pusha imul xchg mov loopne clc add push sub inc dec pop addr16 lea (bad) loop stc add sbb xor push pop push test ror loop testl cmp push pop imul vpaddusw repnz or sub inc dec pop gs mov iret (bad) repz push and cmp pop addr16 mov fsub lock push adc xor push pop push mov fsub lock push adc pop outsl jnp xchg pushf cmpsl mov enter lock add cmp jne mov (bad) rcr jmp and inc push pop addr16 mov rcr call and cmp pop data16 mov into (bad) icebp std or dec pop addr16 mov rcr out std pop adc sub hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov ss dec pop gs xchg int in sti pop adc sub inc dec pop addr16 mov ftst lock push adc push arpl xchg lret xlat jecxz cli push adc pop outsl jnp xchg lahf stos mov lret xlat loop stc add ds push pop imul fwait cmpsb mov enter stc add sbb xor jbe mov int3 rcr loop clc add es cmp dec push pop push jg xchg fwait mov int jecxz stc add sbb sub xor gs xchg add rcr out cli add sbb sub inc dec push popa outsb js xchg lcall in clc add sbb pop outsb jns (bad) lcall out sti push adc and pop gs xchg lret in stc add pop and dec inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc pop bound xchg mov testl cmp outsl jne xchg leave rcr loop sti add sbb dec push popa push orb enter icebp cld or sub inc push pop push mov (bad) repnz or sbb push popa insb jbe test lret (bad) loopne testb sbb das cmp pop push mov fxam lock pop adc sub inc dec pop outsl ja (bad) cltd mov (bad) lock pop adc xor imul cltd movsl mov (bad) rcr jmp and cmp pop imul (bad) iret (bad) icebp std or pop sub inc dec pop fs xchg lret (bad) loope stc add sbb mov scas mov icebp cld pop adc xor jae mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov int3 xlat loop testl cmp pop bound orl rcr call cmp pop arpl orl into ftst out cli add sbb xor je mov rcr jmp and cmp data16 xchg leave aam ljmp cmp pop gs xchg lret in testl cmp push pop imul ret into ftst lock push adc xor dec push pop push orl testb pop and cmp insb jns xchg lahf stos mov iret (bad) icebp cli add sbb cmp pop bound (bad) mov int3 (bad) loopne repz add or sbb es cmp inc dec push pop pop gs jb jg mov mov mov fucom ljmp push sbb sub xor inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc push pop bound je orl rol aam loopne in repz add or sbb and inc dec push pop pop imul test stos mov mov fsubp jmp clc incb adc push and xor cmp pop arpl jbe orl scas mov ret aad loop out cmc sti add unpckhps sub xor push pop bound jne orl rol aam loopne in repz add pop push adc and sub dec push pop popa insl je addb lods mov rol rcr (bad) in repnz incl and inc dec push push pop fs ja test stos mov mov fucom ljmp push sbb cmp dec dec push pop bound jne (bad) mov scas mov ret aad out mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov lock add sbb sub pop imul mov jmp add adc push and xor ds dec push push popa insl js xchg fwait mov ret aad loop out cmc sti add push adc xor push pop gs test (bad) rcr jmp add sbb xor jbe mov lret aad ljmp sbb daa cs inc inc dec push pop popa outsb je addl mov fsub jmp or adc xor push pop bound jne (bad) mov lret rcr (bad) jmp clc incb and inc dec push push pop fs ja test stos mov mov fsub jmp or adc xor push pop popa push xchg lods mov rol rcr inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov out repz add or sub cmp inc dec push pop pop data16 jb jg mov mov mov fsubp jmp idiv add adc sbb cmp pop arpl sbb xor dec push pop push jle xchg mov frstpm(287 lock pop adc pop insw jne (bad) cwtl sahf movsb stos mov mov fucom ljmp push sbb cmp dec dec push add imul test stos mov mov fsub jmp or adc xor inc inc dec push pop pusha insl jae addb lods mov rol rcr loopne in repz incl or sbb and push bound mov rcr jmp add inc push pop arpl xchg mov out cmc cld pop adc sub aas dec push pop popa insl ja mov hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov ret aam jecxz cli pop adc and cmp jne lea (bad) jecxz sub pop fs ja mov enter lock add pop and xor dec push pop push xchg popf cmpsl mov enter loop out cmc cld add unpckhps and cs push pop popa outsb je addl rol aam loope out hlt sti add push adc and cs inc inc dec push pop popa insl je addb lods mov rol rcr (bad) in repz add or sub dec push pop pusha insw jae addb lods mov mov (bad) jmp clc incb and inc dec push push pop imul test stos mov mov fsubp jmp clc incb and xor ds dec push push pop fs ja test inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov mov fucom ljmp push sbb sub ss dec dec push pop bound jne (bad) mov scas mov ror aam loop out add cld add movhps sub xor push pop bound jne orl rol aam loopne in repz add or sub dec push pop pusha data16 jae addb lods mov mov loopne in repz incl or sbb and inc dec push pop pop gs jb jg mov mov mov fsubp jmp idiv add adc sbb cmp pop arpl jbe orl mov mov fsub jmp or adc xor push pop popa outsb je addl rol aam loope out cmc sti add movhps sub xor inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc dec dec push pop bound jne (bad) mov scas mov ret aad loop out cmc cld add movhps sub ss push pop fs ja orl mov mov (bad) in repz incl or sbb and dec push pop push jle xchg sahf movsl scas mov jmp adc pop sub ds dec push push pop fs ja test stos mov mov fucom ljmp pop sbb cmp pop arpl jbe orl scas mov ret aad loop out cmc sti add unpckhps and das xor push pop bound jne (bad) mov scas mov rol aam loope out hlt cli add or sub dec push pop pusha insl je addb lods mov rol rcr loopne in repz incl or sbb and inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov xor aas inc dec push pop pop gs jae jg mov mov mov (bad) in repnz add pop or sub cmp inc dec push pop pop gs jb jg mov mov mov fsubp in repnz incl and inc dec push push pop fs ja test stos mov mov fsub jmp or push sbb sub ss pop arpl jbe (bad) mov mov mov fsub call or adc xor inc inc dec push pop popa push xchg lods mov rol rcr loopne in repz add or sbb es cmp inc dec push pop pop imul test stos mov mov fsubp jmp idiv add adc sbb cmp pop arpl jbe orl scas mov ret hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc enter loop out cmc cld add push adc xor inc inc dec add bound jne (bad) mov scas mov rol aam loope in hlt cli add or cs inc inc dec push pop popa outsb je addl rol rcr loopne in repz add or sub dec push pop pusha outsb je orl loope testb adc push pop addr16 test ror fucomip repz pop adc and push popa push jle xchg lcall loope cmc decl adc xor inc dec push pop push fwait movsl scas mov ljmp xor inc dec push popa push jle xchg pushf cmpsb scas mov jmp sbb xor push pop arpl orb (bad) rcr jecxz testl xor jo test mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov lcall fsubrp hlt std pop add push sub cmp jo xchg lods mov mov (bad) in repnz incl and inc dec push push pop fs ja orl scas mov ret aad loop out cmc sti add push adc and cs push pop popa insl je addb lods mov mov (bad) jmp clc incb adc push and xor cmp pop fs ja orl scas mov ret aad loop out cmc sti add push adc and sub dec push pop pusha data16 jae jg mov mov mov fsubp jmp clc incb adc sbb cmp pop arpl jbe (bad) mov scas mov ret (bad) fsub jmp or adc xor push pop popa outsb je inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov xchg mov mov rol aam loopne in repz add or sbb es dec push pop pop gs jb jg mov mov mov repnz pop adc and inc dec push pop addr16 jle lea mov (bad) in repnz incl and inc dec push push pop fs ja orl mov mov fucom jmp or push sbb sub xor push pop popa push xchg lods mov rol rcr loopne in repz incl or sbb es cmp inc dec push pop pop imul test stos mov mov fsub jmp or adc xor push pop bound je addl rol rcr loopne in repnz incl or sbb and aas inc dec push inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc pop pop imul test stos mov mov fsubp ljmp push sbb sub xor push pop bound je addl rol rcr loopne in repz incl and inc dec push push pop fs jbe orl scas mov ret aad loope out hlt cli add push adc and sub dec push pop pop data16 jb jg mov mov mov fucom ljmp push sbb sub xor push pop bound jne (bad) mov lods mov rol rcr loopne in repz incl and inc dec push push pop fs jbe test test leave iret aad loop out cmc sti add push adc and sub dec push pop pop data16 add addb lods mov rol rcr inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc in std or dec push pop imul pushf cmpsb mov (bad) rcr jmp and cmp push pop imul mov loop decb push and cmp pop imul xchg movsb scas mov hlt decl adc xor pop outsl jns nop pushf cmpsl mov lret aad jmp add and cmp pop imul (bad) shl in clc add sbb xor dec push arpl xchg into fxam lock pop adc xor jnp xchg sahf stos mov lret (bad) loop stc add sbb xor push pusha imul lcall in testl cmp bound nop pushf cmpsl mov leave aam ljmp cmp pop imul (bad) rcr jmp and cmp pop imul cwtl mov rcr ljmp cmp push pusha imul popf test jecxz inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc cli push adc push popa insb js (bad) fwait cmpsb mov lret in stc add inc dec pop gs mov iret (bad) repnz or sub inc push pop imul (bad) rcr call and cmp pop imul fwait cmpsl mov lret in stc add inc dec pop gs mov rcr call and cmp pop imul vpand repz pop adc dec push pop pop push cwtl sahf movsl stos mov mov out cld push adc es cmp push pop addr16 test mov in testl xor inc dec pop data16 mov mov jecxz stc add push and xor fs jb addb lods mov mov (bad) jmp clc incl and inc dec push push inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov fs ja test stos mov mov fucom ljmp push sbb sub ss dec dec push pop bound jne (bad) mov scas mov rol aam loope in hlt sti add push adc and sub dec push pop pusha insw jae addb lods mov mov (bad) jmp clc incb and xor ds dec push pop pop imul test stos mov mov fucom ljmp pop sbb cmp pop arpl jbe orl scas mov ret aad loop out cmc sti add push adc xor inc inc dec push pop popa insl je addb lods mov rolb into aam loope out hlt sti add push adc and sub dec push pop pusha insw jae addb lods mov mov (bad) in inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov stc incl and inc dec push pop pop imul test stos mov mov fsub jmp or adc ss dec dec push pop bound jne (bad) mov scas mov rol aam loope in hlt cli add or sub dec push pop pop insw jae addb lods mov mov (bad) jmp clc incb and xor cmp pop arpl jbe orl mov mov fsub jmp or push sbb sub ss dec dec push pop bound jne (bad) mov scas mov rol aam loope out hlt sti add push adc sbb sub xor push pop bound jne (bad) mov scas mov ret aad loope out hlt sti add push adc and cs push pop bound jne (bad) inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov scas mov ror aad loop out cmc cld add adc sbb sub ss dec dec push pop arpl jbe orl scas mov ret aad loop out cmc sti add push adc and cs inc inc dec push pop pusha insl jae addb lods mov rol rcr loopne in repz incl or sbb and inc dec push pop pop imul test stos mov mov fsubp ljmp pop sbb cmp dec push push pop bound jne (bad) mov scas mov ror aam loope out hlt sti add push adc and cs inc inc dec push pop popa insl add orl ror aam loope out hlt cli add push adc and sub dec push pop pusha insl jae addb lods mov mov (bad) in repnz incl mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov and inc dec push pop pop fs ja test stos mov mov fucom ljmp push sbb sub ss dec dec push pop bound jne (bad) mov scas mov rol aad loop out cmc sti add push adc xor inc inc dec push pop popa insl je addb lods mov rol rcr loopne in repnz incl es cmp inc dec push pop pop imul test stos mov mov fucom ljmp push sbb cmp dec push push pop arpl jbe orl scas mov ret rcl fsub jmp or push sbb sub xor push pop bound jne orl ret aad loop out idiv add unpckhps sub inc dec push pop fs (bad) mov (bad) rcr loopne out inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc stc add sub xor inc inc dec push pop popa insl jae addb lods mov mov (bad) jmp clc incl and inc dec push pop pop imul test stos mov mov fucom jmp or push sbb sub xor push pop bound je addl rol aam loopne in repz add or sub cmp inc dec push pop pop imul test stos mov mov fsubp ljmp pop sbb cmp pop arpl push ja orl scas mov ret aad loop out cmc sti add push adc xor push pop popa insl jae addb lods mov mov fsubp jmp idiv add adc sbb cmp dec push push pop arpl jbe (bad) mov hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov (bad) xchg fwait mov rol aam loopne in repz add or sbb es cmp inc dec push pop pop imul test stos mov mov fsub jmp or adc xor inc inc dec push pop pusha insl jae addb lods mov mov (bad) jmp clc incb adc push and xor cmp pop arpl jbe (bad) mov scas mov rol aam loopne in repz add or sub cmp inc dec push pop pop imul test stos add rcl fsubp ljmp push sbb sub ss dec dec push pop bound jne (bad) mov scas mov rol rcr loopne in repz add or sbb es cmp inc dec push pop pop imul xchg mov mov fsubp ljmp inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc es dec push pop pop gs jb jle mov mov mov fsubp ljmp pop sbb cmp pop bound jne (bad) mov scas mov rol rcr loopne in repz add or sub cmp inc dec push pop pop imul test stos mov mov fsub jmp or adc xor push pop popa push mov lods mov rol rcr (bad) in repnz incl pop es cmp inc dec push pop pop imul test stos mov mov fsub jmp or adc xor inc inc dec push pop pusha insl jae addb lods mov mov (bad) jmp clc incb and xor cmp pop arpl jne (bad) mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov scas mov rol aam loopne in hlt cli add or sub cmp inc dec push pop pop imul test stos mov mov fucom jmp or adc xor push pop popa outsb je addb lods mov mov (bad) jmp clc incb adc sbb cmp pop arpl jbe (bad) mov scas mov ror aam loope in hlt cli add or sub cmp inc dec add pop data16 jb jg mov mov mov fsubp ljmp push sbb arpl orb (bad) int loope hlt std pop adc xor inc dec pop outsl jp (bad) cltd mov fsts daa xor push pop insb jbe mov rcr in sti push adc push bound test enter inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc hlt decl push and data16 xchg lods mov rol rcr loopne in repz incl or sbb and inc dec push pop pop data16 jb jg mov mov mov fsubp jmp idiv add adc sbb cmp pop arpl jbe orl mov mov fsub jmp or adc xor push pop bound jne orl mov fsub jmp or adc xor inc inc dec push pop pusha insl jae addb lods mov mov fsubp jmp clc incb and inc dec push push pop fs ja orl mov mov sbb orl fcomp in repnz incl and xor cmp pop arpl mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc outsl jbe (bad) mov scas mov rol aam loopne in repz add or sbb es cmp inc dec push pop pop imul test stos mov mov fucom ljmp adc xor push pop bound jne (bad) mov scas mov ret leave rcl fsub jmp or adc xor inc add push pop popa push xchg lods mov rol aam loopne in repz add or sub cmp inc dec push pop pop data16 jae addb cmpsl scas mov rol rcr loope out hlt cli add push adc and das xor push pop bound jbe (bad) mov scas mov ret leave rcl fucom ljmp push sbb ds dec push popa insb js lea aad in idiv add adc xor inc dec pop fs mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov outsl jbe mov rcr loopne repz adc xor insl jp mov leave rcl fucom jmp sbb cmp pop imul test stos mov mov fucom ljmp pop sbb cmp dec dec push pop bound jne (bad) mov test leave iret aad loop out idiv add movhps sub xor push pop popa push xchg mov fsub jmp add adc sbb cmp pop arpl jbe (bad) mov scas mov ret aad loop out cmc cld add movhps sub ss pop arpl ja orl scas mov ret aad loop out cmc sti add push adc and cs inc inc dec push pop popa insl je addb hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov rol aam loope in repz add or sub cmp inc dec push pop pop imul test stos mov mov fsubp in repnz incl or sbb es cmp inc dec push pop pop data16 jb jg mov mov mov loopne in repz add or push sbb sub ss dec push push pop arpl jbe orl scas mov ret aad loop out idiv add unpckhps sub xor push add jo jge mov mov mov fsub jmp or adc xor push pop popa outsb je addl rol aam loope out hlt cli add push adc and sub dec push pop pusha insw jae addb lods mov rol rcr (bad) in repz add or sub inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cmp inc dec push pop pop imul test stos mov mov fucom ljmp pop sbb ds dec push push pop fs ja test stos mov mov fucom jmp or push sbb sub ss push pop fs js test stos mov mov fucom ljmp pop sbb cmp pop arpl jbe orl add rcr fsubp in repnz incl and inc dec push pop pop imul test stos mov mov fucom jmp clc incb and xor cmp pop fs ja test mov int fucomip hlt decb adc push bound mov (bad) fcomp in repnz add and cmp push push inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov arpl jbe orl scas mov ret aad loop testl xor outsb jp xchg pushf cmpsb mov lret out stc add sbb xor inc dec pop outsb jns mov lret jmp sbb and cs inc dec dec push pop popa push mov scas mov rol aam loopne in cmc decl pop push sub cmp outsb ja (bad) xchg mov into aad in idiv or and xor inc push pop outsl jp (bad) cwtl mov (bad) in testb push and inc dec push pop push jg xchg mov int3 rcr (bad) in repnz incl and inc dec push push pop imul test stos mov mov fsub ljmp push sbb sub xor pop arpl addb lods mov rol rcr (bad) in repnz mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov incl and xor ds dec push pop pop fs ja test stos mov mov fucom jmp or adc aaa inc dec push pop push jg xchg mov add fsubr icebp idiv add adc sbb cmp dec dec push pop bound jne orl rol rcr (bad) in repz add or sbb and aas inc dec push pop pop imul test stos mov mov fucom icebp stc add push daa xor inc dec pop bound mov (bad) in clc add adc inc push pop outsb jns lea (bad) rcr in testl xor dec push icebp sub (bad) sar cmp mov int3 add sbb xor jno mov fsubr sub inc dec pop outsb js mov lret (bad) fucomip cmc inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov or adc xor push pop popa outsb je addl rol rcr loopne in repz add or sbb es dec popa imul mov scas mov ret aad loop out cmc sti add push adc and sub dec push pop popa outsb je addl rolb into aam loopne in repz add or sbb es cmp inc dec push pop pop imul test stos mov mov fsubp jmp idiv add adc sbb cmp dec push push pop arpl jbe (bad) mov scas mov ret aad loop out cmc cld add push adc xor push pop bound jne (bad) mov scas mov ret aam loope out hlt sti add push adc and cs push pop pusha insl jae addb hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov rol aam loope out cmc cld add unpckhps sub xor push pop popa push mov scas mov add lret (bad) jmp sti add unpckhps sub jns (bad) cltd mov fxam icebp std or xor pop imul or xor out add or sbb push pop test ret iret fisubl orl pushf test mov out stc add inc xchg mov fsub cmp pop push lahf test fsubrp repnz or push sub jne mov pop insl jge xchg mov (bad) icebp std or sub inc xchg (bad) int3 rcr out std or sbb xor inc dec push pop imul popf mov (bad) repz add adc push pop arpl mov (bad) lret aad jmp add hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov or xor dec push pop imul enter cmc add push and data16 add mov testb sbb xor push pusha imul cwtl mov fsubr hlt decl adc sub outsb jp xchg pushf cmpsl mov lret loop clc add sbb cs push pop gs mov lret in testl cmp push pusha imul cltd movsb scas mov repz push and inc dec pop gs mov fxam icebp cld or sub inc dec pop fs xchg int3 aam jmp adc pop sub aas dec push pop imul mov iret fchs out cld or sbb dec push pop fs xchg mov out testl dec push popa insl js nop pushf test out std or and cmp mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov pop imul mov testb pop and inc dec arpl jle xchg popf cmpsl mov leave aad in testl cmp pop imul mov cmc add pop and cmp pop imul (bad) rcr add clc add sbb xor dec push pop imul mov in cli add cmp jb mov into (bad) icebp std or and gs xchg (bad) into (bad) repnz or push sub inc dec pop arpl xchg lret xlat jecxz cli add inc dec pop fs xchg iret (bad) icebp cld or push sub jo xchg lret xlat loop cli push adc sub inc dec pop arpl xchg leave aad in stc add ds push pusha insb js nop fwait cmpsl mov lret (bad) loop clc add sbb inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov xor dec push pusha imul cltd movsl mov (bad) roll loope testl cmp jbe lea rcr ljmp cmp jne mov rcr call and inc add imul (bad) rcr ljmp cmp pop arpl addb rol rcr loopne in repz add sbb cmp push pop popa push fwait movsl mov enter jmp adc sub outsb js mov (bad) rcr in stc add inc push pop imul mov lret xlat loop clc add sbb aaa inc dec pop arpl orl iret ftst out stc add sbb cmp pop addr16 mov aam jmp adc and gs addb (bad) rcr loope repnz inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov adc sub push popa outsb jbe lea (bad) in cli add or inc dec pop popa push xchg popf cmpsl mov vpaddusw hlt add and cmp add jl xchg lahf stos mov lret (bad) loope testl cmp imul lcall jmp and inc dec pop gs xchg lret xlat jecxz cli push adc push pop push mov xlat loop clc add sbb pop imul mov repz pop and cmp pop push mov fucomp cmc add and cmp pop imul (bad) rcr out stc add sbb daa cs inc dec pop push fwait mov aad in idiv add inc push pop pop imul xchg lahf stos mov (bad) int add jmp hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov adc pop outsl jnp xchg mov fsubrp testb sbb bound xchg into (bad) lock push adc xor dec add jae lea int in cld or pop sub insb js (bad) pushf test loopne stc add sbb xor ja (bad) fwait cmpsl mov int3 xlat loop sti pop adc pop arpl test lret (bad) loopne testb sbb cmp pop gs mov into (bad) icebp std or sub inc dec push bound test ror jecxz cli add sbb xor push pop imul mov repz adc dec pop data16 mov rcr out decb adc sub inc dec pop gs xchg lret xlat loop cli push adc xor add outsl jnp xchg pushf cmpsl mov leave (bad) loope mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cli add aas dec push bound test lret xlat jecxz cli push adc xor dec push popa insl jns nop pushf cmpsl mov ror loop clc add sbb xor dec push pusha imul cwtl movsb mov (bad) rcr ljmp cmp push pop imul (bad) rcr ljmp cmp pop push orl cmc add pop and popa imul lea enter loope out hlt cli add sbb das cmp push pop arpl jle xchg sahf test fsubp jmp clc add push and aaa inc dec pop gs orl leave rcr out cli add sbb xor dec push popa insl jns mov rcr jmp push sub ds push (bad) pop cmpsb out dec mov pushl gs out push popa imul mov leave rcr call sbb xor insl jbe inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov xor dec push pop data16 test mov out stc add and xor dec push pop data16 orl ljmp mov enter out clc add pop sub cmp push add mov (bad) call and cmp push popa insb ja dec pop bound mov (bad) into xlat loope and xchg mov bound fucompp adc mov add pop and xor dec push pop outsl jns mov in cli add inc push pop data16 test (bad) rcr jmp and xor outsb jns xchg lahf stos mov into fxam icebp cld or pop sub inc dec pop arpl xchg lret (bad) loop stc add cmp jno xchg lret jmp add push and gs xchg inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov xlat loop stc add inc dec push bound lea into xlat loop testb sbb cmp pop addr16 mov (bad) lock pop adc sub outsl add lahf stos mov rcr call and addr16 mov into (bad) icebp std or sub inc push pop push mov ftst lock or dec pop gs mov (bad) repnz push and inc dec pop push mov (bad) icebp cld or pop sub inc dec pop gs mov (bad) icebp cld or and aaa inc dec pop data16 mov int in sti pop adc sub outsl jnp xchg lahf stos mov into (bad) icebp cld or sub outsl js lea (bad) int3 rcr in cld add es cmp inc dec push inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov arpl adcl mov repnz or ds dec push pusha imul cwtl movsb scas mov jmp decb adc xor inc push add (bad) lea rcr jmp and xor imul xchg mov xlat loope clc add sbb cmp pop bound adcl rcr ljmp xor dec push pusha data16 jae (bad) lea rcr loopne lock or sub arpl test mov hlt sti add push and inc dec push pop arpl jnp xchg fwait mov rcr fsubp out sti push adc and cmp pop imul mov (bad) decl dec push pusha imul xchg mov (bad) repnz or inc dec pop data16 mov xor (bad) (bad) testb and inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc pop addr16 mov repz push imul mov cmp cmpsb faddl and ds push pop insb jbe xchg sahf add cmc add and cmp pop push orl decb adc dec pop data16 mov lret (bad) fucomip hlt decl adc pop bound (bad) lea rcr in sti push adc push arpl xchg int3 xlat loop clc add sbb cmp push pusha imul mov repnz or sub inc dec pop outsl jp xchg pushf test ror loop cli add inc dec pop gs mov lret xlat jecxz cli push adc xor dec push bound test lret fsub out cli push adc sub dec push popa outsb jns nop pushf cmpsl mov lret xlat loop stc add inc dec push bound xchg inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov int3 fsub out cli add aas dec push bound test lret xlat loop stc add adc xor dec push popa insl jns nop pushf cmpsl mov lret in cli add aas dec push bound test lret xlat loop sti pop adc sub jo xchg into fxam lock add sbb sub inc dec push pop pop insw js (bad) cltd mov rol rcr loop clc add xor pop outsw jp nop pushf test mov fucomip hlt decl adc dec pop bound jg xchg pushf cmpsb mov (bad) in clc add sbb xor imul cltd mov fsub repnz pop adc push pop push jg xchg mov aam ljmp xor insb ja mov iret (bad) icebp idiv add adc push popa push ja mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov lods mov in decl adc sub aaa aas dec push popa imul test (bad) rcr call or inc push pop pop fs ja mov iret fsubr cmc add and arpl test (bad) rcr call and pop insb js mov rcr jmp and data16 mov into (bad) icebp cld pop adc daa xor dec push pop imul mov ftst out cli add ds push bound mov aam jmp add sbb pop push orl hlt add and cmp pop push orl out cli add adc sbb push pop fs orl enter ljmp cmp dec push pop addr16 mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov (bad) rcr in cmc std or and xor push pop imul mov cli push adc pop gs mov iret (bad) lock push adc pop outsb jp mov rcr call and xor jo mov iret fsub hlt add push and cmp pop push mov fsubrp cmc add and cmp pop addr16 mov int3 (bad) loope clc add sbb pop imul mov testb sbb sub arpl orl out clc add sbb xor js (bad) lcall jmp add dec push pop imul lcall in testl cmp jbe mov aad in clc add sbb xor dec push bound test inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc cmpsb add out stc add ds push popa insb js (bad) fwait cmpsb mov lret xlat loop sti pop adc sub outsb jns nop popf test mov testl cmp push pop imul lcall in stc add sbb xor dec push pusha insb jbe lea rcr ljmp cmp pop data16 mov rcr jmp and cmp arpl test mov int3 rcr loopne in repz add or inc push pop bound jne xchg enter lock add adc sub insl js mov (bad) rcr in clc add and inc dec pop addr16 mov lret in testl cmp arpl test (bad) rcr out cli add cmp pop push xchg mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc into (bad) jmp add push sbb sub aaa inc dec pop outsl jp nop xchg popf cmpsb mov enter repnz decl adc dec push pop arpl test mov hlt add sbb daa das cmp pop data16 orl (bad) into fsub lock push adc sub inc dec pop arpl test enter repz push and pop gs mov iret (bad) repnz or dec pop arpl test lret in clc add sbb xor dec push pop push jle xchg mov fsub lock push adc push popa insb js (bad) lcall ljmp cmp pop push orl add inc push pop push orl testb adc inc dec push push pop push orl inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov out stc add xor dec push pop push jp xchg ret into fninit ljmp cs jb xchg int call and bound test iret (bad) repz or sub inc dec pop bound orl fsubrp repnz or sub gs test lret in testl ds push pop push orl aad in stc add inc dec pop arpl xchg (bad) aam ljmp xor outsb jns (bad) cltd movsl mov (bad) rcr ljmp cmp ja mov int3 xlat loope testl cmp pop imul (bad) iret (bad) repnz or add imul mov testl cmp pop imul inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov movsl mov (bad) rcr ljmp cmp pop push orl decl and pop push orl testb sbb pop push orb (bad) repnz or pop xor dec xlat push inc fs lods add imul xchg mov rcr out cli add out cmp outsl movsl (bad) or ds push pop imul mov (bad) rcr out sti add aaa inc dec push pusha push jg xchg popf cmpsl mov leave rcr out cld push adc and cmp push popa imul inc push pop imul xchg mov fsub repz push and cmp push mov xlat loop stc add adc dec push bound js xchg mov mov fsubp jmp clc incb adc push and xor ds dec inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc push push pop fs ja test stos mov mov fucom ljmp push sbb dec push pop bound jne (bad) mov scas mov rol aam loope call or push sbb sub xor push pop bound jne (bad) mov scas mov rol aam loopne in repz add adc push pop data16 xchg mov loop out cmc sti add push adc and cs inc inc dec push pop popa insl je addb lods mov rol rcr loopne in repz add or sub cmp inc dec push pop pop data16 jb jg mov mov mov fsubp jmp idiv add adc push and xor ds dec push push pop fs ja orl rol fucomp repz adc and cmp push popa insl jne mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov lret rcr call pop sub ds push pusha push mov lret in icebp idiv add adc sbb cmp pop add jb jg mov mov mov fucom ljmp push sbb sub ss dec dec push pop bound jne orl ret aad loope out hlt sti add push adc xor inc inc dec push pop popa insl je addb lods mov mov (bad) in repnz incl and inc dec push pop pop imul test stos mov mov fucom ljmp push sbb cmp pop arpl jbe orl scas mov ret leave rcl fsub jmp or push sbb cmp pop arpl ja test stos mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov ret leave rcl fsub jmp or push sbb sub ss dec dec push pop bound jbe orl mov add fsubp jmp clc incl and inc dec push pop pop insl je addb lods mov mov (bad) in repz add or sbb es cmp inc dec push pop pop imul test stos mov mov fucom ljmp push sbb ds dec push push pop fs ja test test leave iret aad loop out cmc sti add unpckhps and cs push pop bound jbe (bad) mov scas mov ror aam loope out hlt sti add push adc and cs push pop popa push xchg scas mov rol aam loope in hlt cli add push adc and sub dec inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov push pop pusha insw jae addb lods mov mov (bad) in repnz incl and sub cmp dec push pop pop gs jb jg mov mov mov fsubp jmp clc incb and inc dec push pop pop gs jb jg mov mov mov (bad) in repnz incl or sbb es cmp inc dec push pop pop data16 jb jg mov mov mov (bad) in repnz incl and inc dec push pop pop imul test stos mov mov ljmp xor dec push pusha imul xchg popf test mov in hlt cli add push adc and sub pop insb ja test stos mov mov fucom jmp or pop pop sub ds push pop push mov hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov ret iret (bad) repz sbb cmp pop data16 xchg mov repz pop or sub dec push pop pusha insw jae addb lods mov rol rcr (bad) in repnz incb adc dec pop outsl jbe test ret iret fchs jmp pop sub cmp insl ja (bad) fwait mov xlat loop stc add adc dec push bound jge xchg pushf cmpsl mov lret fsubp jmp clc incb adc sbb cmp pop fs jbe orl scas mov ret aam loope in hlt sti add or sub dec push pop arpl orl mov mov fsubp ljmp pop sbb cmp pop arpl jbe orl scas mov ret (bad) fsub jmp mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov add adc sbb sub ss push lahf stos mov lret aam jecxz sti add unpckhps sub xor push pop bound jne orl rol rcr loopne in repz incl or sbb and inc dec push pop pop imul test stos mov mov fsub jmp or adc xor inc inc dec push pop popa outsb je addl mov loopne cmc add adc xor push pop pop imul mov vpmaxub lock or and popa insl jns mov enter repz decl adc sub ss dec dec push pop bound jne (bad) mov scas mov ror aam loope in repz add or sub dec push pop pusha insw jae jg mov mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov rcr (bad) in repnz incb and xor cmp loopne cli add pop and xor dec push pop data16 test mov lock add pop and xor inc push pop fs ja mov (bad) iret fsub in testb adc inc dec push popa imul xchg fwait movsb scas mov call sbb sub pop addr16 test ror fsub out cli add aaa inc dec push pop addr16 test ror fucomp cmp pop imul (bad) rcr call and cmp pop push jg xchg mov (bad) repnz or pop sub outsl jnp xchg lahf stos mov into (bad) icebp std or sub outsb jns nop pushf test mov clc add sbb xor push pop imul cwtl movsb add in clc add hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc bndldx xor jne mov aam jmp add sbb pusha insb js nop pushf test mov mov mov testb mov iret (bad) lock push adc sub inc dec pop fs mov adcl fsub out stc add cmp pop imul ror loope cli pop adc sub mov or movsl aad out cli push adc mov daa jns mov or and add ds push popa insb jp xchg pushf cmpsl mov enter mov rcr ljmp xchg sahf cmpsl mov (bad) jecxz testb adc sub cmp dec pop arpl orl icebp sti add ss dec push pop data16 test mov call sbb jl xchg sahf fucomi inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov stc add or mov jne nop pushf cmpsl mov vpaddusb hlt add sbb xor dec pop fs fs xchg leave fsubrp repz add or sub cmp inc dec push pop pop data16 jb jg mov mov mov fsubp jmp clc incb and inc dec push pop pop imul test stos mov mov fsubp jmp idiv add adc push and xor cmp pop imul test stos mov mov fsubp jmp clc incb adc push and xor ds dec push pop pop imul test lods mov mov (bad) jmp clc incb and inc dec push push pop imul test cmpsb lods mov rol aam loope out hlt sti add push adc and cs inc inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc inc dec push pop popa insl jae addb lods mov rol aam loope in hlt cli add or cs inc inc dec push pop pusha outsb je addl rol rcr loopne in repz add or sbb es cmp inc dec push pop pop data16 jae jg mov mov mov (bad) jmp clc incb and inc dec push pop pop imul test stos mov mov fucom ljmp push sbb cmp pop fs ja test stos mov mov fsubp jmp idiv add adc sbb cmp pop arpl jbe orl scas mov ret leave iret (bad) fsub jmp add adc push and xor ds dec push pop pop imul test lods mov mov fild hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov in repz incl or sbb and inc dec push pop pop data16 jb jg mov mov mov (bad) jmp clc incb and xor ds dec push pop pop imul test lods mov mov (bad) in repnz incl es cmp dec push pop pusha data16 jbe mov lret aad call pop sub cmp outsb js xchg cwtl sahf movsl stos mov mov fucom icebp std or cmp dec dec push pop bound jne (bad) mov mov mov out stc add sbb das cmp push pop push orb fucomi repz adc sub cmp jno test cmpsb lods mov rol aam loope in hlt cli add push adc and cs inc inc dec push pop popa outsb je addl (bad) rcr inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov in cli add xor dec push pop imul mov icebp clc add sbb sub popa insl js mov leave aam out decb adc inc push pop addr16 test stos mov mov fsubp jmp idiv add adc push and xor ds dec push pop pop imul test lods mov mov (bad) in repz add or and push pop pusha data16 jae addb lods mov mov loopne in repz add or sub dec push pop pop data16 jae jg mov mov mov (bad) in repz adc xor add pop push cwtl movsb scas mov ret leave iret (bad) fsub jmp or push sbb sub ss dec push push pop arpl jbe orl mov mov fldl hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov in lock add adc push and xor ds dec push push pop fs ja test stos mov mov fsubp jmp clc incb and xor ds dec push pop pop imul test mov icebp incb xor push orb rcr out cli add sbb xor inc dec pop arpl test mov in repnz incl and inc dec push pop pop gs jb jg mov mov mov fsubp ljmp pop sbb cmp dec push push pop arpl jbe orl stos mov mov fucom ljmp and inc dec push pop pop imul test stos mov mov fucom ljmp push sbb cmp pop bound hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov outsl jbe (bad) mov scas mov ror aad loope out cmc sti add push adc xor push pop popa push xchg lods mov rol rcr loope in hlt sti add push adc and cs push pop bound jbe orl scas mov ret aad loop out hlt sti add push adc and cs push pop popa push mov scas mov ret aam loop out cmc sti add unpckhps and das xor push pop arpl jbe orl mov mov fucom ljmp add push and xor ds dec push push pop fs ja test stos mov mov fsub jmp or push sbb ds dec push push pop fs ja test stos mov mov fsubp jmp idiv add mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov or pop sbb ds dec push pop pop imul test stos mov mov fsubp jmp clc incb and inc dec push push pop imul test mov mov cmc decl sbb stos (bad) into fsub in testb push and xor push fwait movsl mov (bad) into (bad) in stc add sbb cmp int3 dec (bad) dec repz out jne,pt call sub mov cmp enter out stc add pop and xor popf test frstpm(287 out stc add inc dec push pop push lcall fucomip repz pop adc and pop arpl (bad) mov imul sub inc dec pop fs inc push pop data16 mov leave aam jmp and hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc dec pop outsl jp nop fwait movsl mov (bad) rcr vmread push mov faddl add inc dec pop outsl jp add pop outsl jp nop fwait movsl mov (bad) sbb xor jae mov rcr ljmp xor push orb int3 (bad) loope cmc add adc and pop imul mov testl cmp pop push movsb scas mov cmc add adc dec push pusha push jle xchg sahf stos mov int jecxz cli add into fucomp repz or sbb push pop push pushf cmpsb mov (bad) rcr out sti push adc xor inc push pop gs xchg (bad) rcr out std pop adc xor push pop push sahf test loopne testb push and mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc dec push bound and cmp pop push mov (bad) repnz or sub inc dec pop add jge xchg mov fsub hlt decl push and gs mov fsub out sti pop adc sub inc dec pop mov fsub icebp cli add adc sbb inc dec push bound orl jmp sbb cmp pop gs jae jg mov mov lock add adc sbb cmp dec dec push pop arpl jbe (bad) mov mov hlt decl push and imul ret into fsub jmp add cmp jo test (bad) rcr out std or push sub ds push pop push pushf cmpsl mov (bad) lret fucom ljmp push sbb inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cmp dec dec push pop bound jbe (bad) mov mov ljmp daa das cmp pop gs xchg into (bad) ljmp ss dec push pop insb jne mov lret jmp decl push and ss dec push bound mov out or push sub cmp outsb js mov repnz and pop addr16 mov lret aad in testl cmp pop push orl repz adc sub ds push pusha imul xchg mov ftst lock push adc sub insl jns (bad) fwait cmpsb mov leave aad in testl cmp jbe mov aam jmp add inc push pop imul mov lret out repnz incl adc daa xor dec push pop data16 jne lea mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov rcr call push and add cmp pop gs xchg mov iret xlat fucomip clc add sbb xor push pusha insb js xchg sahf stos mov into fxam icebp std or push pop imul mov repnz pop adc es inc push pop push popf test mov clc add sbb cmp push pop imul cltd movsb scas mov hlt decl adc push pop addr16 mov rcr xchg rcr jmp and addr16 mov enter icebp cli add sbb xor dec push popa insb ja mov rcr jmp add inc push pop push orb fucomip testl cmp pop addr16 mov rcr out decb adc push pop push movsb mov (bad) rcr call mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov decl push and das cmp sahf mov (bad) rcr in stc add inc dec push pop data16 jb jg lea mov rol rcr loopne in repz incl or sbb and inc dec push pop pop imul test stos mov mov fsubp ljmp pop sbb cmp pop arpl jne (bad) mov scas mov ror aam loope in hlt cli add push adc and sub dec push pop pusha data16 jae jg mov mov mov (bad) jmp clc incb adc push and xor ds dec push push pop fs ja orl mov in testb adc sub cmp pop fs xchg ret lret fucom ljmp sbb cmp pop popa push xchg lods add mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov aam loope in repz add push pop and xor dec push pop imul mov icebp sti or sub outsb jns lea int loope testl sub dec push pop popa insl jae addl rol rcr (bad) in repnz incl and push bound orl (bad) into ftst out sti add ss dec pop bound jg xchg sahf test fucomip repnz or inc push pop data16 mov (bad) call or pop sbb cmp pop arpl jbe orl scas mov ret aad loope out hlt cli add or sub dec push pop pusha data16 jae jg xchg popf test int3 rcr (bad) in repnz incl and sub cmp inc dec push pop pop inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov insb jb addb lods mov mov (bad) in repnz incb and xor ds dec push push pop data16 xchg lret rcr ljmp sub aaa cmp pop fs ja orl mov mov fucom jmp or push sbb sub ss dec push push pop arpl jbe orl scas mov ret aad loop out cmc cld add unpckhps and cs push pop bound jne orl ret aad loop out testb pop push sub ds push popa imul scas mov out testl xor dec push pusha imul xchg lahf stos mov lret in clc incl or and aaa cmp pop arpl jbe orl stos mov mov fucom ljmp pop sbb inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov xor cmp pop arpl jbe orl scas mov ret aad loop out idiv add unpckhps sub ss dec dec push pop bound test stos mov mov fsubp jmp clc incb adc push and xor cmp pop arpl ja test stos mov mov fucom ljmp push sbb sub ss dec dec push pop bound jne (bad) mov scas mov ror aam loope out hlt cli add push adc and cs inc inc dec push pop popa push xchg scas mov rol aam loope out hlt sti add push adc and cs inc inc dec push pop popa insl je addb lods mov rol rcr loopne in repz add unpckhps and xor cmp dec dec push pop bound jbe (bad) mov mov mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov (bad) fsub jmp or push sbb sub xor push pop bound jbe (bad) mov scas mov rol aam loope in repz add or sub dec push pop pop data16 jb jg mov mov rol rcr (bad) in repnz incl and xor ds dec push push pop fs ja orl scas mov ret leave iret (bad) fsub jmp or push sbb sub ss dec dec push pop bound jbe orl mov mov fucom jmp or pop sbb ds dec push push pop arpl ja orl mov mov fsub jmp or adc xor add bound ja test test leave rcl fucom jmp or push sbb cmp pop arpl mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov jbe orl mov mov fucom jmp or adc ss dec push push pop arpl jbe orl mov mov fsub ljmp push sbb cmp dec push push pop bound jne (bad) mov mov mov fsub jmp or pop and pop arpl (bad) mov int3 (bad) jecxz testl xor aas inc dec push pop pusha data16 jae test ret leave rcl fucom jmp or pop sbb cmp dec push push pop push pushf cmpsl mov vpaddusw hlt decl and cmp imul mov add repnz incl and inc dec push push pop fs jbe orl mov mov fsub jmp or adc xor inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc dec dec push bound jg xchg mov rcr in stc add sbb das xor insb js lea rcr ljmp xor dec push pop data16 xchg (bad) rcr in sti push adc ds dec push push pop fs ja test stos mov mov fucom ljmp push sbb cmp pop arpl jbe (bad) mov mov (bad) rcr loope out hlt sti add push adc xor push pop popa outsb je addl rol rcr (bad) in repnz incb and xor ds push pop data16 add mov (bad) aam call pop sub cmp pop pop fs ja test stos mov mov fsub jmp or adc xor push pop popa inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov outsb je addl rol rcr loopne in repz add or sbb es dec push pop pop gs jb jg mov mov mov fucom ljmp push sbb sub ss dec pop pop push mov rcr loop stc pop nop/reserved xor inc dec pop insw je mov lret xlat fsubrp repz adc dec push pop imul mov rol aam loopne in repz add or sub dec push pop pusha insl jae addb lods mov ret aad loop out cmc sti add or push sbb sub ss dec dec push pop bound jne (bad) mov mov (bad) in repnz incl es cmp inc dec push pop pop imul test lods mov mov loopne in inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc repz incl or sbb es dec push pop popa insl jae addb lods mov mov (bad) in repnz incl and inc dec push pop pop imul test mov rol rcr (bad) in repz incl or sbb es dec push pop pop data16 jae jg mov mov mov (bad) in repnz incl or sbb es cmp inc dec push pop pop gs jb jg xchg lcall sbb xor ja lea aam jmp add sbb pusha imul lcall ljmp cmp push pop imul mov clc add aas dec push bound orl rcr jmp add dec push pop imul cltd movsl mov leave aam jmp add sbb hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc dec push pop push orb fsubr hlt add pop and cmp pop imul vpaddusw testb sbb cmp pop push mov fucomp hlt decl push and cmp pop push mov fucomp hlt decl push and xor dec push pop outsb je test mov fsub jmp adc inc dec push pop outsb js (bad) cltd cmpsb mov enter loop icebp sti push adc xor jae xchg ret loope cmc decl adc sub inc dec pop gs test enter cmc decl adc dec push pusha imul xchg mov (bad) loopne testl aaa inc dec push bound orl rcr in std add adc sbb push pop imul scas mov int loopne out cli push adc inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc xor inc dec push pop imul cwtl lahf cmpsb scas mov hlt sti add push pop and cmp pop fs js mov into (bad) repz pop and cmp pop addr16 mov ftst out sti pop adc sub gs mov fsub out cli pop adc sub dec push popa add test leave aad in testl mov xor decb sbb gs test mov jmp add and xchg mov lret call adc dec push arpl jnp xchg popf cmpsl mov (bad) into aam loop stc add ss dec pop fs test leave aam jmp and bound xchg fsubr repz and cmp je mov int loop stc inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov adc and pop gs mov int in cld or and cmp pop gs mov int3 fxam icebp cld or pop sub inc dec pop data16 mov iret (bad) out cli add aas dec push pusha push orb int3 xlat loop clc add adc xor ja (bad) fwait cmpsl mov lret ljmp xor imul ret into (bad) icebp cld pop adc sub inc dec pop fs xchg int jecxz sti pop adc sub inc dec pop outsl jl xchg popf stos mov int in cld or push sub dec pop fs xchg into fxam lock pop adc sub outsl jp xchg popf test ror in sti pop adc sub jo mov (bad) icebp std or dec pop fs xchg lret xlat inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov out sti pop adc sub inc dec pop fs xchg int in sti pop adc xor dec push bound test lret in stc add sbb xor dec pop arpl xchg int3 (bad) loopne cmc add and xor inc dec pop imul jns xchg mov repz add or inc dec pop arpl test scas mov lock pop adc das cmp push pusha push jle xchg pushf cmpsb mov leave aam ljmp cmp pop addr16 mov int3 xlat loope testl cmp pop gs test (bad) out std or pop sub outsl ja mov mov icebp cli add xor inc push pop imul lods mov int loope out clc add sbb cmp push pop push jg xchg sahf movsl stos inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov vpaddusb repnz or cmp pop fs mov fsub out cli push adc xor dec push pusha imul xchg mov (bad) in repz or and cmp pop addr16 mov (bad) rcr out sti push adc push arpl xchg int3 fsub jmp add push and fs xchg lret in (bad) or and cmp pop addr16 mov rcr call and inc dec pop data16 mov rcr call and data16 xchg (bad) rcr fsubp in add cld push adc sub aas dec push pop pusha push orl rcr out cld or pop sbb dec push arpl jg mov int3 xlat in cld or sub jb mov rcr jmp inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov push sbb bound xchg lret (bad) loope testl cmp addr16 xchg enter clc add sbb das cmp pop imul mov testb sbb cmp push popa insb js xchg pushf test jecxz clc add sbb xor jae mov int3 xlat loop testl cmp gs mov iret (bad) repnz or sub imul xchg popf cmpsb mov enter hlt add and cmp data16 mov iret (bad) repnz add and cmp pop push orl cmc add pop and cmp pop push (bad) mov aad in clc add push sub outsl jnp xchg popf test mov cli add aas dec push bound xchg int in mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc lock pop adc sub dec push bound test lret in stc add aas dec push popa insb js (bad) fwait cmpsl mov lret out cli add aas dec push bound (bad) fwait cmpsl mov lret out stc add sbb xor dec push bound test int3 fsub out cli add cmp pop data16 addb scas mov ror frstpm(287 out clc ss pusha push orl dec push pop addr16 into fsub in testl xor dec push pop data16 xchg (bad) sar sub jl add in testl ss dec push pop push jg xchg sahf test fucomp repz adc push pop imul mov (bad) in xor sbb pop bound mov leave rcr out cli add pop and inc dec push inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov pop push cltd mov aam call sbb cmp push pop imul scas mov ljmp xor inc dec pop bound mov rcr in clc add and xor dec push pop data16 test mov icebp sti push adc and cmp push pusha imul scas mov in testl xor outsb js mov enter lock add aaa inc dec push pop push jle xchg pushf add (bad) out clc add dec push pop outsl jp mov lret call sbb xor loope idiv add adc and cmp dec pop insw jae orb lret out stc add sbb pusha insb js xchg sahf stos mov into (bad) repnz sbb das cmp push pop push inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov orb fsub out clc add cs jo xchg int jecxz testl cmp push popa insb ja lea rcr jmp and pop imul pushf cmpsl mov lret in testl cmp pop imul mov leave rcr ljmp ss dec pop outsl jp xchg popf test in sti add cmp jno test lret in testl xor ja (bad) lcall ljmp cmp pop imul mov cmc add and cmp pop push mov fsubrp testb sbb cmp push pop imul mov cmc add pop and cmp pop push movsb scas mov hlt decl push and cmp inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov pop addr16 mov rcr out decl push and data16 mov rcr out decb adc dec pop data16 mov xlat loopne cmc add adc dec pop gs orl rcr out decb push and push mov fsub lock add xor inc dec pop outsl jne (bad) mov scas mov lock add unpckhps inc push pop imul lods mov leave aam jmp add sbb das cmp push pop push jle xchg pushf cmpsb mov (bad) out decb adc sub outsb js nop lcall in stc add sbb pusha imul xchg mov aam jmp and aaa inc dec pop gs xchg (bad) lret rcl loopne testb push and ss dec inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc pop ficomp dec push jge ljmp xor dec add outsl jns mov rcr in cld pop adc push pop push (bad) lea rcr ljmp cmp outsl jp nop lcall call pop sub outsb jns nop fwait cmpsb mov lret xlat loop stc add aas dec push popa insl jns nop fwait cmpsl mov leave aad in testl xor dec push popa insb js (bad) fwait cmpsb mov (bad) aam ljmp cmp dec push pop pop data16 xchg (bad) int3 rcr ljmp sub arpl orl ror in repnz decl push and outsl jnp xchg pushf cmpsb mov int3 fsub lock or sub push movsl mov leave (bad) loop cli add cmp push pop imul inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov xlat loop testb pop and cmp pop push lahf stos mov int3 (bad) hlt decb adc push pop push mov (bad) repz push and cmp pop addr16 mov lret in stc add sbb cmp arpl test (bad) rcr jmp and cmp pop push (bad) mov rcr out cld push adc add pop addr16 mov into ftst lock or pop sub inc dec pop gs mov (bad) repnz or and gs xchg into (bad) icebp decb adc sub inc dec pop gs mov (bad) icebp std or pop sub outsl jnp xchg popf test ror loop stc add inc dec pop gs xchg lret xlat loop cli add aas dec push popa insl js nop pushf inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cmpsl mov lret in clc add sbb xor ja nop pushf test ror loop clc add sbb xor ja mov aam jmp add sbb xor js mov iret ftst out stc incl cmp inc dec push pop pop imul nop popf cmpsb mov (bad) into aam loope hlt std pop adc dec push pop arpl jbe mov iret (bad) out stc add pop sub cmp jo test mov int3 xlat loop clc add and cmp pop arpl test (bad) iret (bad) lock pop adc sub imul mov xlat loope cli add push sbb cmp pop fs orb enter out stc add sbb sub cmp jbe test (bad) out hlt cli add sbb sub inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc inc dec push bound mov int jecxz stc add ds push pop push orl jmp and gs mov into fxam lock push adc xor dec push bound test (bad) rcr out std pop adc repz adc add data16 mov popf test adc xlat in cld push inc push bound movsb shl in clc add sbb pop outsl jp (bad) popf test mov repz adc sub dec push pop push jg xchg sahf test fsubrp repz adc sub cmp jb xchg enter cld push adc je mov into fsub in testb adc daa xor inc dec push pop imul mov (bad) rcr in icebp idiv add adc push and xor ds dec push push pop inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov arpl ja test stos mov mov fsub jmp or adc xor inc inc dec push pop popa insl je addb lods mov mov (bad) jmp clc incb adc sbb cmp pop arpl jbe orl stos mov mov fucom ljmp push sbb sub xor push pop popa push xchg lods mov rol rcr loopne in repz add or sbb es cmp inc dec push pop pop imul test stos mov mov fucom jmp or push sbb sub ss dec dec push pop bound jne orl rol rcr loopne in repz incl or sbb and inc dec push pop pop imul test stos mov mov fsubp jmp mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov idiv add adc push and xor cmp pop arpl jbe orl mov mov fsub call pop push adc and sub dec push pop pusha data16 jae addb lods mov rol aad loope out add sti add movhps sub xor push pop bound jbe orl scas mov ret leave iret (bad) fsub call or adc ss dec dec push pop bound jne orl rol aam loopne in repz add or sbb and inc dec push pop pop imul test stos mov mov fsub ljmp push sbb cmp pop imul test stos mov mov fucom ljmp push sbb ds dec push push pop fs ja addl inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov mov mov fsubp ljmp sbb and inc dec push pop pop gs jb jle mov ret loopne stc add adc sub cmp pop pop data16 jne mov mov mov fsubp jmp idiv add adc sbb cmp pop fs ja test stos mov mov fucom ljmp push sbb sub xor push pop popa push xchg lods mov rol rcr loopne in repz incl or sbb and inc dec push pop pop fs ja test test leave iret aad loop out cmc sti add push adc xor push pop popa insl je addb lods mov rol aam loopne in repz add or sub dec push pop pusha insl jae mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov addb lods mov mov fsubp jmp idiv add adc sbb cmp pop arpl jbe orl scas mov ret aad loop out cmc add add unpckhps and cs push pop popa insl je addb lods mov mov call (bad) rcr call sbb push pusha push orb into fxam lock push adc push bound test lret xlat loop cli push adc sub inc dec push arpl xchg lret aad ljmp cmp push push pop arpl ja mov into (bad) fsub jmp add cmp inc dec push pusha insb ja test stos mov mov fsub jmp or adc xor push pop bound jne orl mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cmpsl lods mov rol aam loope in hlt cli add or sub cmp inc dec push pop pop data16 jae jg mov mov mov fsubp jmp idiv add adc sbb cmp imul test stos mov mov fsubp ljmp pop sbb cmp pop bound jbe orl scas mov ret aad loop out idiv add unpckhps sub xor push pop popa outsb je addl rol rcr loopne in repz incl or sbb and inc dec push pop pop gs jb jg mov lods mov mov (bad) jmp clc incb and xor ds dec push push pop imul test stos mov mov fucom ljmp push sbb sub xor hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov dec dec push pop popa push xchg scas mov rol aam loope in hlt cli add or sub cmp inc dec push pop pop gs jb jg mov mov mov fucom jmp idiv add adc sbb cmp pop arpl jbe (bad) mov scas mov ror aam loope in hlt cli add or sub dec push pop pusha data16 jae jg mov mov mov fsubp jmp idiv add adc sbb cmp pop arpl jbe orl scas mov ret aad loop jmp or adc xor push pop popa outsb je addl rol rcr loopne in repz add or sbb and inc dec push pop pop imul test stos mov mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov fucom ljmp pop sbb cmp pop bound jne (bad) mov scas mov rol aam loope in hlt cli add or sub dec push pop pusha data16 jae jg mov mov rol rcr (bad) in repnz incl sub pop imul test fcomp in icebp clc incb adc sbb cmp pop arpl jbe (bad) mov scas mov ror aad loop out cmc sti add push adc and sub dec push pop pop data16 jb jp xchg lods mov mov fsubp jmp idiv add adc push and xor cmp pop arpl jne (bad) mov scas mov rol aam loopne in repz add or sbb and inc dec push pop pop imul test mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov ret leave iret xlat fucom ljmp push sbb sub xor push pop popa insl je addl rol rcr (bad) in repnz incl and xor cmp pop fs jbe orl scas mov ret leave iret (bad) fsub call or adc and aaa inc dec push pop addr16 test ror fucomip repz push adc xor inc dec push pusha push jle xchg fwait movsb scas mov call sbb sub push cwtl mov lret out cli add ds push pop data16 orl (bad) loop hlt incb adc and aaa inc dec push pop imul mov jmp decb adc and pop arpl orl in sti add sbb sub popa insb inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov jbe mov enter in repz add or sbb daa sub dec push pop pusha data16 jae jg mov mov mov fsubp jmp clc incb adc push and xor cmp pop fs ja test mov (bad) lret fucom ljmp push sbb sub xor push pop popa push mov scas mov ret aad loope out hlt cli add or sub dec push pop pop data16 jb jg mov xchg cltd lahf cmpsb lods mov mov fsubp jmp stc incl and inc dec push push pop fs ja orl scas mov ret aad loope out hlt sti add or cs inc inc dec push pop pusha insl jae addb lods mov mov fsubp jmp idiv add adc sbb inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc dec dec push pop arpl jbe (bad) mov scas mov rol aam loope in repz add or sub cmp inc dec push pop pop imul test stos mov mov fucom ljmp push sbb sub xor push pop popa outsb je addl mov (bad) in repnz incl and inc dec push push pop arpl ja orl scas mov ret aad fucom jmp or push sbb sub xor push pop popa outsb je addl mov (bad) jmp clc incb and xor cmp pop fs jbe orl scas mov ret aad loope out hlt cli add or sub dec push pop pop gs jb jg mov mov mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov lret rcl fucom ljmp push sbb sub ss dec dec push pop bound jne (bad) mov scas mov rol aam loope in repz add or sub cmp inc dec push pop pop imul test stos mov mov fsub jmp adc push pop popa imul xchg fwait cmpsl mov mov in repnz incl or sbb and inc dec push pop pop imul jg lea mov mov fsubp jmp clc incb adc sbb cmp pop arpl jbe (bad) mov scas mov ret aad loop out cmc sti add push adc and sub dec push pop pusha insw jae jg mov mov mov fsubp jmp idiv add and xor cmp pop arpl jbe orl hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov test mov ret aad loope out hlt cli add or sub dec push pop pusha insl jae addb lods mov mov fsubp jmp clc incb adc push and xor cmp pop arpl jbe orl scas mov ret aad loop out cmc sti add push adc and cs inc inc dec push pop pusha insw jae addb lods mov mov fnop out repz add or sbb and inc dec push pop pop imul test stos mov mov fsub jmp or push sbb sub xor push pop popa push xchg lods mov rol rcr loopne in repz incl or sbb and inc dec push pop pop imul test stos mov mov fucom jmp or push sbb sub hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov xor push pop popa push mov scas mov rol rcr loopne in repz add or sbb and inc dec push pop pop imul test stos mov mov (bad) jmp clc incl and inc dec push push pop fs ja test test leave iret (bad) fsub jmp or add sub ss pop arpl jne (bad) mov scas mov rol aam loopne in repz add or sub cmp dec push pop pop imul test stos mov mov fsub jmp or adc and sub dec push pop pop insw jae addb lods mov mov fsubp jmp idiv add adc sbb cmp dec dec push pop popa push xchg scas mov roll inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov (bad) int fnop out repz add or sbb and inc dec push pop pop fs ja orl scas mov ret aad loop out cmc sti add push adc and sub dec push pop pusha data16 jae jg mov mov mov fucom ljmp adc xor push pop popa add jne (bad) mov scas mov rol rcr loopne in repz incl and inc dec push push pop fs ja orl scas mov ret aad loope out hlt cli add or sub cmp inc dec push pop pop imul test stos mov mov fsub jmp or adc xor inc inc dec push pop pusha data16 jb jg mov mov mov fsubp ljmp push sbb sub xor hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov dec push pop popa outsb je addb lods mov mov fsubp jmp idiv add and xor cmp pop arpl jne (bad) mov scas mov rol rcr loopne in repz incl and inc dec push pop pop imul test add fchs call sbb cmp dec push pusha insl je addb lods mov rol rcr loopne in repz add sbb pop push lahf stos mov int jecxz hlt cli add or sub dec push pop popa outsb je mov (bad) rcr ljmp xor dec push pusha insw ja (bad) xchg mov rcr add inc dec push arpl addb (bad) iret fnclex call adc xor inc push push pop arpl jg xchg mov hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov (bad) ljmp cmp pop fs mov lret (bad) loop clc add sbb daa xor pop outsl jp nop pushf cmpsl mov leave aam jmp add dec push bound test int3 fsub out stc add cmp dec pop push add rcr ljmp cmp pop imul (bad) jmp and cmp pop push mov fucomp hlt add and cmp pop imul mov in repz add or sub dec push pop pusha data16 jae jg mov mov mov (bad) jmp clc incb and xor ds dec push pop pop imul test stos mov mov fucom ljmp push sbb cmp dec dec push pop bound jbe inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov mov mov fsub jmp or push sbb sub ss pop fs ja orl mov fucom jmp or push sbb sub ss dec dec push pop bound jne jl mov mov mov fsub jmp or push sbb sub ss dec dec push pop bound jne orl rol aam loopne in repz add or sub cmp inc dec push pop pusha data16 jae addb lods mov mov (bad) in repnz incb and xor ds dec push push pop fs ja test stos mov mov fucom ljmp push sbb sub xor push pop bound jne orl ror aam loope out hlt cli add or mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc es dec push pop pop gs jb jg mov mov mov fucom ljmp pop sbb cmp pop arpl jbe (bad) mov scas mov ror iret (bad) fsub call or adc xor inc dec dec push pop popa push xchg lods mov rol rcr loopne in repz incl and inc dec push pop pop imul test stos mov mov fucom ljmp push sbb cmp dec dec push pop bound jne (bad) mov scas mov ret aad loope out hlt sti add or sub dec push pop pusha data16 jb jg mov mov mov fsubp ljmp pop push and xor cmp pop arpl jbe orl scas inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov ret aad loope out cmc sti add push adc and sub dec push pop popa insl je addb lods mov rol rcr (bad) in repnz incl and xor inc push pop bound (bad) mov (bad) loopne in testl cs push pop popa outsb je addl rol rcr loopne in repz add push adc and cs inc inc dec push pop popa insl je addb lods mov rol rcr loopne in repz incl or sbb es cmp dec push pop pop data16 jb jg mov mov mov (bad) jmp clc incb and xor ds dec push push pop fs ja test stos mov mov fsubp ljmp pop sbb cmp pop arpl jbe orl inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc pushf mov ret leave rcl fsub jmp or push sbb sub ss dec dec push pop bound jne (bad) mov scas mov roll iret (bad) fsub jmp or push sbb sub xor push pop bound jne addl rol rcr loopne in repz add or sbb es cmp dec push pop pop data16 jae jg mov mov mov fsubp jmp idiv add adc sbb cmp pop arpl ja orl mov mov fsub jmp or adc xor push pop popa outsb je orl ror aam loope out hlt cli add or sub dec push pop pusha data16 jae jg mov mov mov fsubp jmp clc incl and inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cmp inc dec push pop pop fs ja test stos mov mov fucom ljmp push add and xor ds dec push pop pop data16 jae addb lods mov mov fcomip stc incl or sub dec push pop pop imul test mov mov fucom ljmp push sbb sub xor push pop popa push xchg lods mov rol rcr loopne in repnz incl and inc dec push push pop fs ja orl scas mov ret aad loop out cmc sti add push adc xor inc inc dec push pop popa push xchg lods mov rol rcr (bad) in repnz incl and inc dec push pop pop fs ja test test leave inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov aad loop out cmc sti add push adc and sub dec push pop pusha insw jae jnp xchg lods mov rol rcr (bad) in repnz incl and inc dec push push pop fs ja orl mov mov fsub jmp or adc xor inc inc dec push pop pusha insw jae addb stos mov mov fsubp jmp clc incb adc sbb cmp pop arpl jne (bad) mov scas mov rol aam loopne in repz add or sbb es cmp inc dec push pop pop imul test stos mov mov fsub jmp or adc xor inc inc dec push pop popa outsb je addl mov (bad) jmp clc incb adc push and xor cmp mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc push pop arpl jbe orl scas mov add lret fucom jmp or adc xor push pop popa push xchg mov in hlt cld pop adc and ss dec push push pop push xchg cwtl sahf movsb stos mov mov fsubp jmp idiv add adc push and xor ds dec push push pop imul test stos mov mov fsubp ljmp pop sbb cmp pop fs ja orl mov mov fucom ljmp pop sbb cmp pop arpl jbe orl scas mov ret (bad) fucom jmp or push sbb sub aaa cmp pop fs ja mov int3 rcr (bad) in repz add or sub dec push pop inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov push mov scas mov ret aad loop out cmc sti add push adc and cs inc inc dec push pop pusha insl je addl rol rcr out incb and xor inc dec pop gs cmpsl loopne cli pop adc sub addr16 mov rcr ljmp cmp push pusha imul lcall in clc add sbb xor dec push pusha insb jns xchg pushf test mov cld or sub inc dec pop push mov fsubrp cmc add ds push popa insl jns xchg pushf test ror in sti pop adc sub inc push pop imul mov stc add inc push pop push movsl mov enter add cmp push pop data16 test ret into fsub in testl aaa inc dec push popa inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc imul xchg sahf test fsub icebp sti add cmp pop outsl jns (bad) lcall out cli add sbb cmp push popa imul popf cmpsl mov (bad) rcr in stc add inc dec push pop push orb enter icebp sti push adc and cmp push popa imul xchg lahf test fucom icebp cld push adc and cmp push pusha imul xchg popf test mov out stc add aas dec push pop addr16 test ret loope add add and xor dec push pop data16 test ret loope cmc decl adc sub cmp jo test ret int loope testb adc sub cmp jo test (bad) into fsub in testl xor jo test ror loopne hlt incl hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov or and ss dec push pop push lcall in cli add sbb sub pusha push jg xchg popf cmpsl mov (bad) rcr in sti push adc and pop arpl test (bad) into fsub out stc add sbb cmp pop bound mov enter repnz pop adc and pop arpl (bad) lea int loope testb adc inc push pop data16 test ret loopne cmc decl adc sub add dec push pop addr16 test ret int loop testl xor dec push pop addr16 xchg (bad) rcr out sti add aaa inc dec push popa imul xchg lahf test fucom icebp cld pop adc xor push pop outsl jp (bad) cltd movsb scas mov jmp add adc dec push pop addr16 xchg inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov (bad) in stc add sbb sub popa imul xchg sahf test mov out clc add inc dec push pusha push jle xchg pushf cmpsb mov (bad) rcr in cli push adc and pop bound orl hlt decb adc sub cmp jo test ret loop testl ss dec push popa imul xchg mov aad jmp sbb push pop addr16 xchg xchg popf ja ror loope clc add inc dec pop arpl test lret out stc add ds push pop data16 xchg (bad) iret (bad) repnz adc sub inc dec pop bound test enter cmc add and cmp pop push orl hlt decl push and imul vpaddusw inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cmc add dec push pop imul cltd movsl mov (bad) rcr jmp and cmp pop push movsb scas mov testb sbb cmp pop push mov (bad) icebp std or dec pop gs xchg int in std or sub inc dec pop outsl jp xchg popf test mov stc add sbb xor js nop fwait cmpsl mov leave aad in add add cmp jo test mov ror in repnz incl or sbb and push pop data16 xchg mov lret jmp add pop push and xor inc push pop addr16 mov rcr in cli add sbb sub pusha outsl ja lea rcr jmp pop sub dec push pop push lahf stos mov lret aad in testl inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc pop and inc dec push popa insb ja mov rcr out decl push and xor dec push pop data16 jb orl out cli push adc daa xor inc dec push popa outsl jns xchg cltd mov rcr call adc dec push pop popa push popf test rcr out sti add cmp jns nop fwait movsl mov enter testb push sbb cmp pop push lcall call pop sub inc dec pop outsl jp nop pushf cmpsl mov lret in clc add sbb xor ja mov int3 (bad) loop clc add sbb pop push mov ftst lock or sub inc dec pop gs mov fxam icebp std or sub inc dec pop gs mov int in cld pop adc sub cmp mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc push pop fs js xchg leave (bad) fucom ljmp cmp inc dec pop data16 xchg mov lret fsub in clc add adc sbb push pop insb ja mov rcr jmp and pusha insb jns xchg sahf stos mov rcr out decl push and inc dec push arpl test rcr call adc sub inc dec pop outsl jp (bad) cltd movsb mov (bad) shl in cli add sbb xor js nop fwait test mov stc add inc dec pop arpl test (bad) rcr out add push and xor imul cwtl mov fsub repz adc push pop push mov fsub in testl aaa inc dec pop arpl test lret out cli add cmp jns (bad) lcall inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov lret in stc add sbb push pusha insb js (bad) lcall jmp add sbb pop imul fwait cmpsb mov leave aam ljmp cmp push pop push orb rcr jmp and cmp pop push mov (bad) repnz adc sub inc dec pop add mov (bad) repnz adc push pop addr16 mov into fxam icebp std or sub inc dec pop gs mov into (bad) icebp decb adc dec pop data16 xchg (bad) int fchs out std or sbb es dec push pop push mov ror fucomip cmc decl pop and xor push popa insb ja lea into xlat loope hlt decl adc daa xor push pop gs mov int3 aad in testl mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc or and arpl (bad) lea iret (bad) lock pop adc push pop push sahf test loop clc add sbb sub inc dec push pop popa outsb js (bad) pushf movsl mov (bad) int fsub repnz adc sub cmp pop arpl test les rcr out hlt decl sbb sub inc dec dec push pop gs xchg mov in testl cmp ja lea rcr call pop sub inc dec push bound addl jmp add and cmp pop push lahf stos mov int3 xlat jecxz stc add cmp jbe mov lret in testb sbb cmp data16 mov fsub out sti pop adc sub jo xchg int in sti push adc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc sub aas dec push popa insl jns nop popf test mov clc add sbb pop popa push mov int loopne in testl cmp push pop imul stos mov (bad) rcr in cld add sub add test lret xlat in cld or push pop addr16 mov aam jmp add sbb xor jne mov (bad) repnz push adc and cmp pop insb ja mov into fxam repnz push and aaa inc dec pop gs xchg int3 xlat loop stc add sbb xor dec push popa insb js mov rcr out decb push and cmp pop arpl test (bad) rcr call and push mov (bad) loop testl xor dec pop arpl test hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov nop fwait cmpsl mov leave aad in testl cmp push pop imul mov cmc add and cmp push pop push mov fsub repz adc push pop addr16 mov roll fucomip cmc add push and cmp pop outsb ja mov (bad) fucomip hlt std pop adc sub outsl jp xchg popf test jecxz sti pop adc sub inc dec pop gs xchg int3 xlat loop stc add aas dec push bound test lret out cli add aas dec push bound test lret xlat loop cli add aas dec push bound xchg lret xlat loop cli push adc sub insl ja mov (bad) int frstpm(287 lock push or sub push pop addr16 xchg mov leave rcr jmp inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov add pop and xor ds dec pop arpl orl rcr in clc add and inc dec push pop imul mov into fsub lock add cmp push pop addr16 xchg xchg sahf test fsubrp hlt decl adc sub push jg xchg lahf stos mov int3 xlat jecxz stc add sbb push pop fs js mov into aad jecxz stc push bndldx xor ds push pusha push orb lret (bad) loop cmc sti add sbb xor dec push push pop arpl orl fsubr hlt std or sbb pop data16 mov fsub out cli add cmp push pop imul scas mov icebp cld or push sub xor imul xchg popf cmpsl mov (bad) jecxz clc add and xor outsb js mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov (bad) mov enter lock add inc dec push pusha imul scas mov jmp decl adc dec pop arpl cmpl cwtl mov pop (bad) and ds push arpl test (bad) into ftst lock add inc push pop data16 test (bad) rcr jmp and inc dec pop fs mov lret nop cmpsb mov leave rcr out sti add sbb cmp jb xchg ror fsubrp repnz add ss dec push pop data16 test mov lret call sbb sub inc dec push pop push cwtl mov aam out sti add testl inc dec push pusha push jge xchg fwait movsl scas mov jmp sbb pop push mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov xchg lcall fucomip repz push adc and cmp push pusha push jge xchg fwait movsl scas mov jmp decl adc dec pop bound orb (bad) jecxz testl xor inc dec pop bound mov iret (bad) in testl xor outsl jp mov enter lock add pop and xor data16 test ret loope cmc decb adc push pop data16 orl leave rcr out sti add ss dec push add je mov (bad) iret (bad) in testl xor jb xchg ret into fsub in testl xor dec push pop data16 test ror fsubrp repnz push adc and cmp pop outsb js mov (bad) rcr in mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc out stc add and xor addr16 test ret loopne hlt std pop adc xor inc dec pop arpl orl in stc add pop and ss dec push pop addr16 test ret int jecxz cli push adc and cmp push pusha push jle xchg pushf cmpsl mov (bad) into fsub in testl ss dec push pop push lcall loopne hlt decb adc xor inc push pop outsb js mov enter lock add cmp push pusha push ja mov (bad) rcr in stc add and xor dec push pop push lcall loopne hlt std or sbb xor inc dec pop arpl orl in stc add inc dec push pusha push jle xchg pushf cmpsl mov (bad) jecxz clc add and xor dec push pop inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov data16 test ror loopne testl xor dec push pop push popf cmpsl mov enter lock add cmp addr16 xchg ret int loop testl xor dec push bound mov lret call sbb push bound mov rcr out cli add sbb cmp push popa imul xchg sahf cmpsl mov (bad) in clc add and xor dec push pop data16 xchg mov cli or pop addr16 test aad lock or xor mov call and cmp addr16 xchg (bad) in repnz incl adc sub cmp dec push pop pusha insw jae orl into aad loope cmc decb adc sub data16 jae orl hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov int in sti push nopl sub inc dec push pusha push jg xchg popf cmpsb mov int3 (bad) loop stc add sbb pop addr16 mov lret jmp and outsl jns lea int3 (bad) loop testl cmp pop data16 xchg mov ljmp xor inc push pop data16 mov ret int3 xlat jecxz hlt sti add sbb cmp push pop push mov mov repz xor jo xchg int in stc add sbb xor jbe mov rcr out cmc decl pop and cmp pop data16 mov fsub out stc add ds push pop imul cltd movsl mov (bad) rcr out add adc sub dec push bound test inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov enter cmc add inc push pop push mov fsubr hlt decl push and data16 mov rcr call and inc dec pop fs xchg rol aam out decb adc sub cmp push bound nop xchg sahf cmpsl mov lret jmp cli add or inc push pop bound ja mov rcr call and inc push pop push ja xchg sahf test out decl pop and cmp push pusha imul cltd movsl mov (bad) rcr out std pop adc xor dec push popa imul xchg mov (bad) lock pop adc push gs xchg int jecxz cli add aas dec push bound xchg int3 xlat jecxz sti push adc xor push pusha imul xchg mov fsub out stc add cmp inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov pop imul lcall in clc add sbb cmp pop arpl (bad) lea rcr jmp and imul (bad) call and cmp pop imul mov repz push and cmp data16 mov rcr call and inc dec pop data16 xchg int3 xlat loop repnz or sub inc dec pop gs xchg int in cli push adc push bound test lret in clc add sbb xor js (bad) fwait cmpsl mov lret in clc add sbb xor jbe lea rcr jmp add sbb pop imul lcall ljmp xor inc dec push pop gs xchg lods mov ror loopne inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov add aaa inc dec push bound test mov (bad) rcr out std or sub aas dec push pop data16 test ror in cli add cmp jbe mov into fsub in clc add inc dec pop outsl jns (bad) cltd movsb scas mov out cli add sbb xor push pop imul lods mov fsub in stc push push sbb push pop imul stos mov int loop clc incb cmp pop popa push orl ret lret call pop es cmp pop data16 xchg fucomp hlt decb adc dec pop fs xchg lret (bad) loope cmc sti add inc dec push popa insl jns nop fwait cmpsl mov leave aam jmp and inc dec pop data16 mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc fsub in repnz incl and inc push pop push pushf test mov testb pop and cmp data16 mov int jecxz stc add ds push bound test lret (bad) loop stc add inc dec push bound test lret (bad) loop sti add and add cmp dec push pop bound test mov icebp std or pop pop sub inc dec push arpl jp xchg enter jmp push sub cmp pusha insb ja lea rcr jmp add sbb pop gs mov fsubr cmc add and cmp pop gs test loopne cmc add and cmp pop addr16 mov rcr out decb adc sub inc dec pop data16 mov rcr call mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov and cmp pop push sahf test jecxz clc add inc dec pop data16 xchg lret in clc add sbb xor dec push bound orl iret fsub in clc add sbb xor push pop imul mov hlt decl push and pop imul mov testl cmp pop imul (bad) call and addr16 mov iret (bad) lock or sub inc dec pop fs mov (bad) repz push and cmp pop addr16 mov int in sti push adc push bound test lret out cli push adc pop fs mov lret xlat in sti push adc push bound xchg int3 ftst lock mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov sti pop adc sub imul xchg mov lret ljmp pop sbb dec pop gs jg mov (bad) rcr jmp adc pop sub cmp ja lea leave rcr out cld push bndldx das cmp pop addr16 mov xlat loop stc add sbb cmp bound test (bad) rcr out cld push adc xor push pop addr16 mov int3 xlat jecxz clc add ss dec pop gs xchg mov cmc incb push and popa insl jbe lea enter repnz push adc and das xor insb ja mov mov repz push and cmp pop addr16 mov ftst out cli push adc pop pop data16 jp mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov xchg sahf stos mov lret jmp add inc push pop addr16 mov int in cld or pop sub inc dec push popa insl jp mov iret (bad) sti add aaa imul dec addr16 push sbb bound out stc add mov xchg fimul sbb ret stc adc push pushf cmpsb mov (bad) jecxz cli push adc push pop push orb int loop cmc decl pop and inc dec pop arpl test (bad) loop stc add sbb cmp pop gs xchg (bad) rcr loopne in repnz incl es cmp inc dec push pop pop imul test stos mov mov fsub call or adc and sub dec push pop pusha insl jae addb lods inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov (bad) out repnz incl and xor ds dec push pop pop imul test stos mov mov fucom ljmp push sbb sub xor push pop popa insl je addb lods mov mov (bad) jmp clc incb adc push and xor cmp pop arpl jne (bad) mov scas mov rol aam loope in repz add or sub dec push pop pop gs jb jle mov mov mov fucom ljmp push sbb sub ss pop bound jne (bad) mov scas mov rol aam loopne in repz add or sbb es cmp inc dec push pop pop imul test stos mov mov fsub jmp or adc xor inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov dec dec push pop popa insl je addb lods mov ror loop testl xor inc push pop push lcall lret fucom ljmp push sbb cmp dec push push pop arpl ja orl mov mov fsub jmp or adc xor push pop popa push mov scas mov ror aad loope out hlt sti add push adc and cs inc inc dec push pop popa outsb je addl ror aam loope out hlt sti add push adc and sub dec push pop pusha insw je xchg enter lock add sbb xor inc dec pop arpl orb mov fsubp out stc add xor push pop popa push mov scas mov roll inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc (bad) into fsub in testb adc dec push bound test int3 xlat loope clc add sbb pop addr16 xchg (bad) rcr out cmc cld add unpckhps and das ss dec dec push pop bound jne orl ror aam jmp decl adc sub inc dec push push popa outsb jns lea lret xlat fucomip cmc add cmp jae xchg lret in cli add cmp arpl test mov (bad) lret fucom ljmp pop sbb cmp pop arpl jbe orl mov mov fucom jmp or push sbb sub cmp push pop popa push xchg lods mov rol rcr (bad) in repz incl es cmp inc dec push pop pop imul inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc jb jle mov mov mov fucom jmp or inc dec push bound orl fchs out repz add or sbb es cmp inc dec push pop pop gs jb jg mov mov mov (bad) in repnz incl and inc dec push push pop fs ja test stos mov mov fsubp ljmp pop push and inc dec push push pop imul test mov call adc dec push pusha insb jae mov rcr out cld push adc xor inc push pop outsl jp xchg popf movsb stos mov (bad) rcr loop out cmc cld add unpckhps and das xor push pop popa push mov scas mov ror aam loope out hlt cli add or sub mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc xor inc inc dec push pop pusha insl je addb lods mov rol rcr loopne in repz add or sbb xor inc dec dec push pop bound jne (bad) mov scas mov ret aad loope out hlt sti add unpckhps sub xor push pop arpl jbe orl mov mov (bad) in repnz incl and inc dec push pop pop data16 jb jg mov mov mov fucom ljmp pop sbb ds dec push pop pop imul xchg mov rol aam loopne out hlt cli add or cs inc inc dec push pop pusha insl jae addb lods mov ror aam loope out hlt cli add or cs inc dec dec push pop popa push mov scas mov ror aad loop inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc out cmc cld add adc push and xor ds dec push push pop fs ja orl mov mov fsub jmp or adc xor push pop arpl jbe (bad) mov mov mov fsub jmp or push sbb sub xor push pop arpl jbe orl mov mov fucom ljmp pop sbb ds dec push push pop fs ja orl mov mov fucom ljmp push sbb cmp pop arpl jbe orl mov mov fucom ljmp pop sbb cmp pop arpl jbe (bad) mov scas mov ror aam loope out cmc cld add unpckhps and cs push pop bound jne orl mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov fwait mov ret aad loope out cmc sti add push adc and das xor push pop popa push mov scas mov ret aad loop out cmc cld add unpckhps sub xor push pop bound jne (bad) mov scas mov ret fsubr icebp std or sbb pop jno mov rcr jmp and jbe xchg pushf cmpsl mov cmp cwtl mov xlat loope cmp push pop outsl jns lea lret (bad) loopne testb adc jae mov sub popa imul xchg lahf lods mov jmp add push and xor push fwait movsl mov (bad) in stc add inc xchg lahf test mov sub pop data16 mov mov in clc add sub cmp mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc dec push pop push lahf stos mov int in sti push adc xor dec push pusha imul xchg mov xlat loop stc add aaa cmp ja lea into ftst out cli pop adc xor push pop imul (bad) rcr out decb adc dec push arpl test (bad) call push sub ds push pop push orl cmc add and cmp pop push mov (bad) repnz push and data16 mov (bad) lock or sbb xor inc dec dec push pop data16 mov ror loope cmc push data16 sub je mov leave rcr call pop imul scas mov jmp decl adc dec pop fs ja mov aad lock add mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov sbb xor push pop imul in clc add and xor aas inc dec push pop pop imul test stos mov mov fsubp ljmp sbb and inc dec push push pop imul test stos mov mov fucom jmp or push sbb sub ss dec push push pop arpl jbe orl lret adc sub cmp dec dec push pop bound jbe (bad) mov scas mov ret aad loop out cmc cld add unpckhps and das xor push sbb aaa inc dec pop outsb jne (bad) mov scas mov ror aam loope out hlt cli add push adc xor push pop popa outsb je addl rol rcr loopne in repz incl or sub cmp inc dec push pop pusha data16 jae jg mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc xchg mov mov fsubp jmp clc incb adc push and xor ds dec push push pop arpl jbe test stos mov mov fucom jmp or push sbb sub xor push pop bound jne orl ror aad loope out hlt cli add or xor push pop push xchg mov aam jmp cld or dec pop pop data16 jae addb mov (bad) rcr ljmp pop sbb cmp pop arpl jbe orl ror loopne testb pop and cmp pop push mov ftst out cli add sbb xor inc dec pop outsl jp mov mov fsubp in repnz incl and inc dec push pop pop imul test mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov xchg xchg sahf movsb stos mov leave aam out cld pop adc and push pop imul mov (bad) rcr out testl aaa inc dec push pusha insb jne mov int3 aam ljmp aaa aas dec push popa insl ja test mov mov (bad) jmp clc incl and inc dec push pop pop gs jb jg mov mov rol rcr loopne in repz incl bndldx xor aas inc dec push pop pop imul test stos mov mov fucom jmp or push sbb cmp pop arpl jne (bad) mov scas mov rol aam loope hlt add adc push pop imul nop fwait movsl stos mov mov fucom ljmp pop sbb cmp pop arpl jbe orl hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov ret aad loop out cmc sti add push adc xor inc inc dec push pop pusha outsb je addb lods mov rol rcr (bad) in repnz incl and inc dec push pop pop imul mov lret (bad) loop repz add sbb das cmp pop arpl orl lret ljmp xor dec push pop imul lods mov fndisi(8087 out hlt cli add push adc and cs inc inc dec push pop popa push mov scas mov rol aam loope in hlt cli add or sub dec push pop pop data16 jb jg mov mov mov fsubp jmp push or sub dec push pop pusha insw jae addb lods mov mov fsubp jmp clc incl or sbb es mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov sub cmp dec push pop pusha insw jae addb lods mov rol rcr loopne in repz incl or sbb and inc dec push pop pop data16 jae jg mov mov mov fsubp ljmp sbb and inc dec push push pop fs ja test stos mov mov fsubp jmp clc incl and inc dec push pop pop fs ja test lods mov rol aam loope in hlt cli add or cs inc inc dec push pop popa insl je addb lods mov rol rcr (bad) in repnz add or sub dec push pop pusha insw je addb lods mov mov loopne in repz add or sbb es cmp inc dec push pop pop gs jb jg mov mov mov hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc rcl fsubp jmp clc incb adc push and inc dec push pop pop data16 jae addb scas mov rol aam loopne in hlt cli add or sub dec push pop pusha insl jae addb lods mov rol rcr loopne in repz add or sbb es cmp inc dec push pop pop data16 jb jg mov mov mov (bad) in repz add push adc xor inc inc dec push pop popa insl jae addb lods mov rol rcr (bad) in repz incl or sbb es cmp inc dec push pop pop data16 jb jg mov mov mov fsubp jmp idiv add adc push and xor ds dec push push pop fs js test lods mov mov fsubp jmp clc incb adc push and xor ds dec push push pop fs inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov jge mov (bad) (bad) fucom out stc add sbb cmp push arpl (bad) mov rol aam loopne in repz pop adc dec push push pop arpl jbe orl mov mov loop clc add sbb cmp data16 mov (bad) lock or push sub ds push pop imul mov leave rcr call movhps sub xor push pop bound jne (bad) mov scas mov ret fucomp repnz push adc dec push pop push jle xchg mov rcr out incb xor push orb (bad) rcr call sbb push pop outsl jnp xchg lcall (bad) int (bad) out repnz incl and inc dec push pop pop gs jb jg mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov lahf movsl lods mov mov fsubp ljmp push sbb das cmp push pop bound jne (bad) add nop mov adc dec push pop outsl jns lea enter lock add aas dec push pop data16 add mov ljmp xor push pop fs ja mov (bad) rcr in clc add adc mov adc ljmp lods mov lret aad jmp sbb xor inc dec pop bound mov rcr in testl xor dec push pop data16 test mov repz pop adc xor push pop data16 test ror loopne hlt decb adc xor inc dec pop bound mov rcr in cli add sbb sub addr16 test mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov jmp decl adc push pop outsl jns lea lret jmp sbb pop bound jg xchg sahf test mov out clc add and xor push xchg sahf test mov lock add sbb sub inc dec push pop push lcall loope cmc decl adc inc push pop outsl jns lea leave rcr call sbb sub pusha push jle xchg pushf cmpsb mov ret into fsub in testb adc sub cmp push pop outsl jns lea leave aam call sbb push pusha imul xchg popf cmpsl mov (bad) jecxz testl xor outsl jns lea lret aad ljmp xor inc dec pop arpl orl out cli add inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc and pusha push jle xchg popf cmpsl mov (bad) rcr in stc add inc dec push pop imul mov (bad) into fsub in testb adc dec push movsb or add mov int and inc dec push pop imul scas mov out stc add sbb xchg mov or push and ss dec push pusha push jg xchg mov (bad) loopne cmc decl adc sub ds push pop push pushf cmpsb mov sub pop xchg movsb scas mov repnz pop adc xor inc push pop data16 xchg (bad) iret (bad) dec push jns fistl cmp testl ds pop arpl xchg lret xlat loope clc add sbb pop data16 mov add cmp ja nop cltd cmpsb mov (bad) out decl adc sub inc dec push pusha push addl inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov (bad) cltd (bad) repz aas dec je lea rcr out decl push and data16 mov fsub repz adc push add jne mov rcr ljmp cmp pop xchg out dec jl out push xchg cmpsl rcr call pop sub add push pop imul mov repnz push adc daa xor dec push pusha push jg xchg sahf test mov hlt decb adc dec push pop imul mov cmc decl adc dec pop addr16 mov leave rcr call and cmp push pop gs xchg cmp bound xchg (bad) rcr out cli add sbb cmp pop push mov (bad) icebp std or pop sub inc dec pop arpl xchg into (bad) icebp cld or inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov sub inc dec pop outsl jnp xchg lahf stos mov int3 xlat jecxz sti pop adc sub inc dec pop gs mov iret (bad) add decl adc dec pop data16 xchg int3 fsub out cli push adc push arpl test leave aad add stc add sbb xor dec push popa insb js (bad) fwait cmpsb mov enter testb sbb pusha imul lcall call and cmp pop push mov fucomp cmc add and cmp pop addr16 mov enter loope repnz adc and cs inc inc dec push pop imul mov mov jmp add ds dec push pop outsb jns (bad) fwait cmpsb mov (bad) rcr in testl xor dec push pop data16 mov int3 fsub out cli add cmp push inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov push popf test mov testl cmp pop gs xchg mov repnz or push sub dec push popa insl ja mov (bad) ljmp inc dec push popa push add (bad) shl out stc or sbb mov leave aam aaa inc push iret add stos out cld push adc and cmp push pusha push jle xchg pushf cmpsl mov (bad) in testl xor outsl jns lea leave add sub cmp pop bound mov rcr in stc add ja mov (bad) rcr in stc add fs ja (bad) cwtl mov fsub out cli add sbb cmp pop push mov (bad) icebp cld or push sub jo xchg int3 fsub out inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cli push adc sub jo mov int3 add in sti pop adc push pop push mov ret loop idiv add and pop pop imul scas mov ret leave rcr ljmp sub cmp push pusha imul mov repz push and cmp pop push adcl fxam icebp std or dec pop outsl jp xchg popf stos mov int in testl inc push pop outsb jp xchg pushf test mov testb sbb cmp push pop imul mov testb sbb cmp pusha imul cltd movsl mov enter clc add sbb xor dec push pop imul mov in clc add sbb cmp pop addr16 mov int in cld or and ss dec pop bound hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc insb ja lea add aad in testl cmp pop imul mov repnz or sub inc dec pop data16 mov (bad) rcr ljmp cmp push mov ftst lock pop adc sub inc dec pop gs mov ftst lock pop adc sub dec push bound test int3 fsub out sti pop adc sub inc dec pop gs mov int jecxz sti pop adc sub outsl jnp xchg popf test mov cli add inc dec pop arpl xchg lret (bad) loope clc add sbb xor dec push popa insb js mov aad in clc add sbb xor dec push pusha imul xchg mov int3 rcr ljmp pop es cmp pop data16 xchg mov (bad) rolb inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov call sbb inc dec push popa insb js (bad) fwait cmpsb mov (bad) into fsub jmp add adc dec push fs jns (bad) cltd add loopne cmc add and bound mov iret (bad) out cli add cmp pop data16 xchg int3 (bad) loop cli add push and dec pop bound test mov hlt add adc and inc dec pop insw je test enter ljmp xor cmp push pop addr16 mov mov out sti pop adc sub inc dec pop gs test int3 fsub out stc add inc push pop push cwtl movsb scas mov repnz adc sub inc dec pop arpl xchg leave aad in clc add sbb xor dec push add js mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc iret fxam lock push adc push pop imul (bad) out decl push and inc add push mov fucomp hlt decl pop and cmp pop imul mov hlt decl adc dec push pusha insl jae orb lret fcomp out testb pop and cmp push pop addr16 xchg ror in std push or cmp pop bound xchg lret in clc add sbb xor pop gs mov aam in clc pop adc push pop push orb frstpm(287 out cli add inc push pop imul mov iret (bad) repz adc push pop push mov (bad) repnz push and cmp pop add mov into ftst out std or sub ds mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov dec push pop push orb (bad) icebp std or sub inc dec add jae mov int3 xlat loop testb adc dec pop arpl test leave aam in testl cmp jbe mov rcr jmp add sbb pop push orl cmc add dec push pusha insb ja mov aad in clc add sbb cmp pop push (bad) lea rcr jmp and cmp push pop imul lcall ljmp cmp pop push mov (bad) repnz or push pop addr16 mov rcr out std or sub inc dec pop gs xchg add (bad) repnz adc dec pop data16 mov shl call inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov sbb inc inc dec push pop popa push add mov out cld pop adc sub ds dec push push pop push orb iret (bad) in testl xor push pop outsl jnp xchg pushf test loop stc add sbb cmp push pop addr16 xchg lret in testl cmp jl pop and mov xor in dec jl repz pusha imul xchg sahf test rorb aas movsb mov mov inc jbe das pop mov lods test ja loopne clc inc dec push pop imul lods mov lret jle pushf cmpsb scas mov ljmp xor inc dec push pusha push jle xchg fwait movsl scas mov jmp sbb sub pop addr16 test mov lock add add and pop push cltd mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov aam out sti add ss dec push pop data16 orl enter mov leave rcr out cli add pop and xor outsl jns lea enter hlt (bad) insb jle out std pop adc and pushf movsl scas mov ljmp sub xchg enter icebp sti add cmp push popa imul xchg mov aam call sbb pop bound hlt add adc jmp pusha mov cmc inc outsb mov (bad) in clc add adc dec push pop outsl jns lea enter out stc add ds push pop outsw jp ljmp cmp pop push lahf stos mov lret (bad) loope out stc add aas dec push bound (bad) mov leave aam jmp add inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov sub gs xchg lret (bad) loop clc add sbb xor ja mov aam jmp add sbb pop push orl hlt add and cmp bound test lods mov lret in clc add adc and cmp push xchg mov rcr (bad) icebp decb adc sub cmp push pop addr16 xchg int3 (bad) loopne testb sbb xor dec push arpl mov fsubr cmc add sbb xor insb ja lea int jmp pop adc push pop addr16 mov int3 xlat loop stc add inc dec push bound xchg rcr ljmp cmp pop push test (bad) aam jmp pop sub inc push pop gs xchg hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov testb pop and cmp pop imul (bad) rcr call pop sub dec push pop data16 mov int3 xlat loop add push adc xor outsb jp xchg pushf test ror loop cli add inc dec push arpl xchg leave aad in stc add sbb xor dec push bound test lret xlat jecxz stc add ds push popa insb js (bad) lcall ljmp cmp jns nop pushf cmpsl mov lret in testl cmp push pop imul cltd movsl mov (bad) rcr ljmp cmp addr16 mov rcr call and cmp data16 mov rcr out decl push and cmp pop push mov fucomp hlt decl adc push push pop outsl jp mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov xchg mov mov call push and dec push pusha push (bad) lea ret (bad) out add push adc push pop data16 orl lret jmp and cmp pop data16 xchg lret (bad) loopne cmc add adc dec pop arpl test (bad) into fsub in clc add sbb cmp pop imul mov int (bad) out clc add sbb xor push mov int jecxz stc push or cmp outsl jbe (bad) mov int fsubp jmp testl cmp push pop pop insw ja (bad) cltd mov data16 test ror fsub lock add pop and xor mov (bad) rcr call and cmp pop arpl test inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov rcr jmp and cmp cwtd ljmp jge (bad) cltd mov add fucom icebp sti add xor outsl js mov pop adc sub inc dec pop fs xchg lret in testl cmp outsb jns nop lcall (bad) rcr out sti push adc and push pop imul mov rcr jecxz lock or and cmp pop pop push lahf test ret in stc add sbb pusha insl jns xchg popf test in sti or sub inc push pop push lahf stos mov lret (bad) loop testb and cmp push pop outsb jp xchg popf stos mov int jecxz stc add sbb xor js nop fwait cmpsl mov leave aam jmp add sbb pop imul lcall inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov ljmp aaa inc dec push gs mov leave aam loope testb sbb cmp pop addr16 mov iret (bad) repnz adc dec push popa imul xchg sahf test loope stc add sbb xor push pop insb js (bad) fwait cmpsb mov enter testb sbb xor dec push arpl test lret in testl dec push pop push orl testl cmp push pop imul (bad) rcr jmp and addr16 mov rcr call and inc dec pop addr16 mov int out decb adc dec pop gs xchg into (bad) repnz adc dec pop data16 mov (bad) out cli add inc dec pop outsl jnp xchg mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov (bad) icebp std or push sub ds add push xchg pushf cmpsb mov (bad) lret fsubp ljmp sub pop pusha addr16 test (bad) aam loope out hlt std or sbb push popa insb jne mov (bad) rcr in stc add sbb xor push pop imul mov int in stc add sbb sub outsl jnp nop fwait cmpsb mov (bad) rcr out sti push adc xor dec push pop imul mov in idiv add adc and cmp pop push xchg popf test mov jmp and ss outsb js nop xchg popf cmpsl mov enter repz incl or sbb and inc dec push pop pop imul test stos mov mov fucom ljmp sub ss dec dec push popa insl js xchg inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc movsl scas add repnz add sbb and inc dec push pop pop imul test stos mov mov fucom jmp or push sbb sub xor push pop popa push mov (bad) fcomp in icebp clc incb adc push and xor cmp pop arpl jbe orl scas mov ret aad loop out cmc cld add push adc xor inc inc dec push pop popa insl je orl in cmc add push and cmp push pop pop imul test mov mov fsubp ljmp pop sbb cmp pop arpl ja orl enter hlt decb adc push popa insb js arpl xchg popf test cmp stos mov lret add testb sbb sub hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc xor jb mov (bad) rcr jmp adc daa xor inc inc dec push pop popa insl je addl rol rcr (bad) in repnz add or sbb es cmp inc dec push pop pop imul test stos mov mov fsub jmp or adc xor push pop bound addb lods mov rol aam loopne in repz add or sub cmp inc dec push pop pop gs jae addb scas mov rol rcr loopne in repz add or sub dec push pop pop data16 jb jg mov mov mov fsubp jmp stc incl and inc dec push push pop fs ja test stos mov mov fcomp in repnz incb and hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc cmp inc dec push pop pop imul test stos mov mov fucom ljmp push sbb sub xor push pop arpl jbe (bad) mov mov mov fucom ljmp pop sbb ds dec push push pop fs ja test stos mov mov fsub jmp or adc xor push pop popa outsb je addl rol rcr (bad) in repnz incl and inc dec push pop pop gs jb jg mov mov mov fucom ljmp push sbb cmp pop arpl jbe (bad) mov scas mov rol aam loope out hlt cli add or daa cs inc dec dec push pop popa push xchg lods mov rol mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc int (bad) out repz incl or sbb es cmp inc dec push pop pop imul test mov mov fsubp jmp clc incb adc push and xor cmp pop fs ja orl mov mov fsubp jmp idiv add adc sbb cmp dec dec push pop bound jne (bad) mov scas mov ret aad loop out cmc cld add unpckhps and cs inc inc dec push pop pusha outsb je addl rol rcr (bad) in repz incl or sbb sub cmp outsl jp lea int loope testl xor push pop arpl jbe test (bad) into aam loope in repz add or adc xor push pop pusha push jl xchg pushf cmpsb mov (bad) rcr call and cmp mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov pop push orb rcr call sbb pop bound mov mov rol aam loope in repz add or sub cmp inc dec push pop pop outsl jns (bad) xchg mov (bad) in sti pop push sbb cmp dec push gs js mov leave rcr call sbb push pop gs test (bad) int3 xlat jecxz testl xor push pop bound jne (bad) mov scas mov ret aad loop out idiv add movhps sub xor push pop bound jne orl (bad) iret (bad) in repz add or sub dec push pop pusha add je addb lods mov rol rcr loopne in repz add or sbb and inc dec push pop pop imul test mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc xchg cwtl mov (bad) loop testb adc inc dec pop pusha insl jae addb lods mov rol rcr loopne in repz add push adc and cs inc inc dec push pop popa insl je addb lods mov rol rcr loopne in repz add or sub cmp inc dec push pop popa insl je addb lods mov rol rcr loopne in repz add or sbb es cmp push pop bound (bad) lea enter icebp cld or sbb xor inc push pop outsb jbe mov int fsubp repz adc sub pop push jge mov mov mov faddl in lock add adc sbb sub ss dec dec push pop bound je addl rol rcr loopne in repz incl and inc inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov push push pop fs ja orl mov mov in repz add or cs inc inc dec push pop pusha insl jae addb lods mov mov (bad) jmp clc incb and xor ds dec push push pop imul test stos mov mov fucom ljmp push sbb sub ss dec push push pop arpl jbe (bad) mov scas mov ret aad loop out cmc sti add push adc xor inc inc dec push pop popa insl jae addb lods mov rol rcr loope in hlt cli add or sub dec dec push pop popa push mov scas mov ret aad loope out hlt sti add adc sbb sub aaa cmp pop arpl ja test stos mov mov loopne in repz mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc cli add or sub dec push pop pusha push mov scas mov ror aad loop out idiv add movhps sub xor push pop bound jne (bad) mov mov mov fsubp ljmp pop push and xor ds dec push pop pop imul test stos mov mov fsubp in repnz incl es cmp inc dec push pop pusha insw jae addb lods mov rol aam loopne in repz add or sub dec push pop popa push mov scas add xlat fucom ljmp sbb es cmp dec push pop pusha insl je addl ror aad loop out idiv add adc push and xor cmp pop arpl ja test inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov stos mov mov (bad) in repnz incl or sub dec push pop pop gs jb jg mov mov rol aam loope out cmc cld add adc sbb sub ss dec dec push pop bound jne orl mov mov in testl xor imul xchg mov rcr call or sub cmp inc push pop push xchg pushf mov ror aam loope in hlt cli add push adc and sub dec push pop pusha insl jae addb lods add aam jmp sti push adc dec push pop pusha data16 jae addb lods mov mov fsubp jmp clc incb adc sbb cmp pop arpl jbe (bad) mov scas mov ret aad loope out hlt sti add hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov pop or sub dec push pop pop gs jb jle mov mov mov fucom jmp or push sbb sub xor push pop popa outsb je addl mov (bad) jmp clc incb adc push and xor ds dec push push pop arpl jbe orl mov mov fsub call or adc and cs inc inc dec push pop pusha insl je addb lods mov mov (bad) jmp clc incb adc daa xor cmp pop fs ja test stos mov mov fucom ljmp push sbb sub xor push pop popa push xchg lods mov rol rcr (bad) in repz add or sbb and inc dec push pop pop imul test mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov ret leave iret (bad) fsub jmp or adc xor push pop popa insl je addb lods mov mov (bad) jmp clc incb and xor cmp pop arpl ja orl scas mov ret aad loop out hlt sti add push adc and sub dec push pop pop data16 jb jg mov mov mov fsubp jmp idiv add adc sbb cmp dec dec push pop bound jne (bad) add test mov ret aam loop out cmc sti add push adc and sub dec push pop pusha data16 jb jg mov mov mov fsubp jmp clc incb adc pop and inc dec push pop pop imul test stos mov mov fucom ljmp push sbb sub hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc das ss dec pop imul test mov mov fsubp jmp clc incb adc push and xor cmp pop imul xchg lods mov rol rcr loopne in repz incl or sbb and inc dec push pop pop gs jb jg mov mov mov fsubp in repnz incl and inc dec push push pop fs ja test mov fsub icebp sti add inc dec push bound xchg into (bad) icebp std or sub inc dec pop fs xchg int3 fsub lock or pop sub inc dec pop data16 mov (bad) icebp cld pop adc sub inc dec pop outsl jnp xchg sahf stos mov int in cld or sub inc dec pop fs xchg lret xlat jecxz stc add inc dec pop arpl xchg mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc popf test ror jecxz cli push adc sub inc dec pop gs xchg lret (bad) loop cli push adc push popa insl jns xchg pushf test mov cli push adc pop sub inc dec pop bound mov ret fxam lock add push adc xor insw add xchg cwtl lahf movsl lods mov lret ljmp sub push popa imul cltd movsl mov (bad) loop testb adc sub cmp push pop addr16 mov rcr out std pop adc sub inc dec push pop push jg xchg mov aad in testl aaa inc dec push bound test (bad) rcr jmp and cmp dec push pop data16 mov ror jecxz stc add das cmp pop addr16 jg xchg mov rcr loop stc add sbb sub inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov push pop imul cmpsl scas mov out cld pop adc sub inc push pop data16 mov into ftst lock pop adc dec push popa insl jp xchg popf test mov testl dec push pusha push orl testl cmp pop imul mov lret rcr jmp and addr16 mov into (bad) repnz or push pop data16 mov into (bad) loop lds imul jae cwtl mov xlat loopne testb sub inc dec pop arpl (bad) mov rcr out sti add cmp pop push fwait cmpsl mov enter lock push adc and cmp pop fs xchg (bad) in or and popa jo test (bad) into xlat loop mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc in testb dec pop arpl mov int3 (bad) loopne testl push pop addr16 jle xchg lahf test fsubr repnz add xor dec push pop data16 test lods mov mov (bad) out repnz incl and inc dec push push bound addb lods mov mov loopne in repz add or sub push pop pusha data16 xchg leave aam call or adc xor inc dec dec push pop bound jne (bad) mov scas mov ret aad loop out cmc sti add push adc xor inc inc dec push pop popa outsb je addl rol aam loope out hlt cli add or sub dec push pop pusha insw jae addb lods mov mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc (bad) out hlt cli add or cmp pop data16 mov mov ret leave rcl fsub jmp or push sbb sub ss pop arpl jbe orl stos mov mov fucom ljmp pop sbb cmp pop arpl jbe (bad) mov mov mov fsub out idiv add adc sbb sub ss dec dec push pop bound jge xchg sahf test fucomip testl cmp push pop push jg xchg sahf test loop cmc decl pop and xor cmp pop arpl mov (bad) fcomp in repnz incl and xor ds dec push pop addr16 xchg vpaddusb repz adc push pop push mov xlat loop testb adc dec push pop inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov jae addb lods mov rol iret (bad) fsub jmp or adc xor push pop bound jne xchg (bad) rcr call or and pop data16 jns (bad) cwtl mov rcr call sbb xor inc push pop arpl xchg mov hlt sti add sbb cmp pop imul test stos mov mov fsubp jmp clc incb adc push and xor cmp pop fs ja orl mov mov fsub jmp or and cmp pop data16 test mov rol aam loop out cmc cld add adc sbb ds dec push pop pop data16 jae addb mov mov (bad) in repnz incl or inc push pop push inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov add in cli add cmp pop bound jbe orl scas mov ret leave iret (bad) fsub jmp add adc sbb cmp pop arpl jbe orl mov mov fsub jmp or push sbb sub xor push pop bound jne (bad) mov scas mov rol aam loope out clc add sbb sub dec push popa imul xchg mov (bad) fsubp out sti pop push sbb xor inc dec push pusha imul xchg lahf stos mov rol rcr loopne in repz add or sbb es cmp inc dec push pop pop imul test stos mov mov fucom ljmp pop push and xor cmp pop fs ja test stos mov mov fsub jmp add adc sbb mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov sub ss pop arpl jbe orl scas mov ret aad loope out hlt add add movhps sub xor push pop bound jne addl ror aam loope in hlt cli add or sub dec push pop pop gs jb jg mov mov mov fsubp jmp clc incb and xor ds dec push push pop arpl jbe orl scas mov ret aam loope out hlt cli add push adc and cs push pop popa insl je addb lods mov mov fsubp jmp clc incb adc sbb cmp pop arpl jbe orl scas mov ret aad loope out hlt sti add or sub dec add insl jae addb inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov lods mov mov (bad) jmp clc incb adc push and xor cmp push pop fs ja test test leave rcl fsub jmp or adc xor inc inc dec push pop pusha insl jae addb lods mov mov fsubp jmp idiv add adc push and xor cmp pop arpl jbe (bad) mov scas mov rol aam loopne in hlt cli add or sub cmp dec push pop pop data16 jb jg mov mov mov fucom ljmp push sbb sub xor push pop popa push mov scas mov rol aam loope out hlt cli add or sub dec push pop pop imul test movsl lods mov mov fsubp jmp clc incb adc pop and inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov xor aas inc dec push pop pop imul test nop fwait test mov int3 xlat fsubp repnz pop push push and ss dec push pop imul xchg popf mov ret leave iret (bad) fsub jmp or push sbb sub xor push pop bound jne (bad) mov scas mov ret aad loope out hlt sti add push adc and sub dec push pop pusha insw jae addb lods mov rol rcr (bad) in repnz incl and inc dec push pop pop imul test stos mov mov fucom ljmp push sbb cmp pop bound jbe orl scas mov ret aad loop out cmc sti add push adc add cmp dec dec push pop bound jne (bad) mov scas mov ret aad loope out hlt sti add inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov adc and sub xor push pop popa outsb jne orl rol rcr loopne in repz add or sbb es cmp inc dec push pop pop imul test stos mov mov fucom ljmp push sbb sub ss dec dec push pop bound jne orl rol rcr loopne in hlt cli add or sub cmp inc dec push pop pop gs jb jg mov mov mov fucom ljmp push sbb sub ss pop bound jne (bad) mov scas mov ror aam loope in hlt cli add or sub dec push pop pop data16 jae add mov rol rcr (bad) in repnz incl and inc dec push pop pop imul jp xchg mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov xchg cltd mov rol rcr loopne in repz incl or sbb and inc dec push pop pop fs orl mov mov fucom jmp or push sbb cmp pop arpl jbe orl scas mov ret aad loop out cmc sti add push adc xor push pop bound jne orl rol aam loope out hlt cli add push adc xor inc dec dec push pop popa outsb jne orl rol aam loope in hlt cli add or sub dec push pop pop data16 jae jg mov mov rol rcr add out hlt cli add or sub dec push pop pusha data16 jae jg mov mov mov fnop out hlt cli add or sub mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov xor inc inc dec push pop pusha insw jae addb lods mov mov (bad) in repnz incl and inc dec push pop pop imul test stos mov mov fucom ljmp pop sbb cmp pop arpl ja test stos mov mov fsub jmp or push sbb sub xor push pop bound jne orl ror aam loope out hlt sti add push adc and sub dec push pop pusha insw jae addb lods mov mov (bad) in repz add or sbb es xor inc inc dec push pop popa outsb je addl rol rcr loopne in repz add or sbb add cs inc dec dec push pop popa insl je addl rolb inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov int fchs out repz incl or sbb daa xor dec dec pop fs jg xchg mov into aad jecxz cli add unpckhps sub xor push pop bound jne orl rol aam loope out hlt sti add push adc and cs inc inc dec push pop pusha insl jae addb lods mov mov (bad) in repnz incl and inc dec push pop pop imul test stos mov mov (bad) jmp clc incl and inc dec push push pop imul test stos mov mov fcomp in repnz incl or sub cmp inc dec push pop pop imul test lods mov mov fchs out repz incl and inc dec push push pop fs ja test mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov test leave iret (bad) fsub jmp or adc xor push pop popa push xchg lods mov rol rcr (bad) in repnz incl es cmp inc dec push pop pop imul test stos mov mov fsub jmp or adc xor push pop bound jne addl rol rcr loopne in repz incl or sbb and inc dec push pop pop fs ja test stos mov mov fucom ljmp push add cmp pop arpl jbe (bad) mov scas mov ror aam loop out cmc sti add add adc xor push pop popa outsb je addl rol rcr (bad) in repnz incl es mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc sub cmp inc dec push pop pop gs jb jg mov mov mov fsubp jmp idiv push push sbb ds dec push push pop imul test stos mov mov fsub jmp or pop sbb cmp dec dec push pop bound jne (bad) mov scas mov ret aad loope out hlt cli add or sub dec push pop pusha data16 jae jg mov mov mov fsubp jmp clc incb adc sbb cmp pop arpl add test stos mov mov fsub jmp or adc ss dec dec push pop bound imul xchg pushf mov ret aad loope out hlt sti add or sub dec push pop pusha insl jae addb lods mov mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov (bad) fcomp in icebp clc incb adc push and xor cmp pop arpl jbe orl mov mov fsub call or adc xor inc inc dec push pop pusha insl jae addb lods mov mov (bad) in repnz incl and inc dec push push pop fs ja orl mov mov fsub call or adc xor push pop popa outsb je addl add (bad) int fnop out repz add or sub cmp inc dec push pop pop data16 jb jg mov add rcr (bad) in repnz incb and xor ds dec push push pop arpl ja test stos mov mov fucom jmp or push sbb sub xor mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov dec push pop bound jbe (bad) mov scas mov ret jecxz repz adc and cmp push pop imul movsb stos mov mov fucom ljmp pop sbb dec push pusha imul and cmp pop lcall cld or sub inc dec pop addr16 mov rcr ljmp cmp pusha imul lcall in stc add aas dec push arpl add vpaddusw hlt add and cmp pop push orl cli add ds push popa insl jns xchg sahf stos mov int3 fsub lock pop adc sub inc dec pop data16 mov rcr jmp xor dec push arpl xchg (bad) repnz pop and cmp pop push orl fsub icebp std or and hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc das cmp popa imul xchg lahf test fucomip cmc add adc out sti push adc and pop bound mov enter icebp cld push adc and pop bound mov enter lock add and cmp push bound mov rcr in cli add sbb sub pop imul mov (bad) int loop testb adc add pop push pushf cmpsb mov (bad) loop testl xor imul mov (bad) rcr in stc add inc dec push pop push lcall loop cmc decl adc inc push pop outsl js mov leave aam out sti add aaa inc dec push pop imul scas mov ljmp xor push pop gs mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov jp (bad) cwtl mov aad jmp sbb cmp push popa push jg xchg popf cmpsl mov (bad) iret (bad) in clc add inc dec push pop addr16 xchg ret int loope hlt decb adc xor inc dec pop bound mov rcr in stc add sbb sub inc dec push pop push cltd mov aad jmp sbb xor push add je mov (bad) rcr out std pop adc xor inc push pop outsb js mov enter icebp cld pop adc push pop addr16 test (bad) rcr in cli push adc and pop data16 test ror loopne hlt std or sbb xor inc push pop outsl jp mov int3 (bad) loopne cmc add adc dec push pop addr16 xchg (bad) into fsub in testl inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov push sub cmp outsb jns lea leave rcr out cld push adc and push popa imul xchg lahf lods mov int3 fxam lock add sbb das cmp push bound orl out cli add sbb das cmp pop arpl (bad) mov leave rcr out cld push adc and cmp bound orl fsubrp repz or sbb dec pop arpl (bad) mov lret call sbb xor inc push pop gs test ret loopne cmc add adc dec push pop imul inc dec push arpl test lret in clc add sbb xor dec push xchg loope push jnp in push xchg cmpsb fucomi repnz push adc and cmp push pop outsw jp lea (bad) rcr in stc add aas dec push pop push mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc jae lret (bad) loopne testb pop and xor jns lea iret (bad) icebp cld pop adc sub ds push popa insb js xchg pushf cmpsb mov lret in stc add aas dec pop arpl xchg int out std or pop sub inc dec pop bound (bad) lea rcr out cld pop adc add insb ja nop fwait cmpsl mov lret in stc add sbb push pusha push orb leave rcr jmp and inc dec pop data16 xchg into ftst out sti pop adc sub inc dec pop fs mov into (bad) repnz or pop sub inc dec pop gs xchg int3 xlat jecxz sti or sub inc dec pop gs mov (bad) loop stc add sbb xor ja mov aam in testl cmp push pop push (bad) inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc lea rcr jmp and cmp pop push mov fsubr hlt add pop and cmp pop addr16 mov rcr out decb adc sub inc dec pop addr16 mov rcr call and pusha insb jbe mov mov leave rcl fucom ljmp push sub dec push pop imul mov int3 xlat in repnz incl cmp pop data16 xchg (bad) into fsub in testb adc dec pop gs xchg leave aad in testl ss dec push bound lea iret (bad) out stc add sbb cmp pop addr16 mov fchs jmp add adc pop and pop data16 test ror loop out stc add sbb cmp push mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc jne mov into xlat loop clc incl xor insl je test (bad) rcr ljmp cmp push pop push mov fsub out sti pop adc dec pop data16 mov ftst add std or sbb push popa insb js (bad) lcall jmp add and aaa inc dec push arpl (bad) (bad) cltd movsb mov leave aam jmp add inc push pop imul (bad) rcr out std or dec pop addr16 mov rcr out std or sub inc dec pop data16 mov iret (bad) loopne testl and ss dec pop arpl addb (bad) aam loope cmc add aas inc dec push pop imul cltd mov leave aad jmp std or and cmp pop gs mov hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov scas mov cmc add dec push bound xchg lret (bad) loope testl cmp data16 mov (bad) loope stc add sbb pop push cmpsb mov leave aad in stc add adc xor dec push popa insb js (bad) lcall out stc add aas dec push pop push jg cwtl mov ftst out cli add sbb pop addr16 mov (bad) repnz adc dec push pop imul xchg lahf stos mov leave aad in clc add sbb pop push (bad) mov rcr call and cmp pop imul mov hlt decl adc push pop addr16 mov ftst lock or sub inc dec pop addr16 mov ftst lock pop adc push arpl inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov xchg sahf stos mov into fxam lock or sub inc dec pop arpl test lret in clc add sbb xor jbe lea aad in clc add sbb xor dec push pop add orl aad in testl cmp push pop imul lcall jmp add sbb sub bound ja xchg mov fucom ljmp aaa ds dec push push bound orb rcr loopne out cli push adc xor jo orl lret out std or sub inc dec push bound orl rcr out sti push adc and cmp pop outsl jp xchg pushf cmpsb mov (bad) rcr out cld pop adc push popa insb js mov into (bad) ljmp sub cmp push inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc orl out sti pop adc and xor je (bad) mov iret xlat fsubp jmp decl adc inc dec push pop push xchg lahf stos mov repz adc sub outsb jp nop fwait cmpsb mov enter testb adc xor dec push pusha insb jbe lea rcr jmp add push and gs mov fsub out stc add sbb das cmp pop push sahf test mov cmc add and cmp pop push mov (bad) icebp cld pop adc sub inc dec pop gs xchg int in cld pop adc sub outsb jp nop pushf cmpsl scas mov out hlt cli add sbb das cmp pop pop push lahf lods mov ret out cli push adc sbb dec push pop push jle inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov xchg lcall call and ss dec pop push movsb mov (bad) rcr ljmp inc dec push bound add mov cmc add adc pop gs test lret in testl cmp pop imul vpaddusb repz adc dec pop data16 mov rcr jmp and cmp pop fs mov aam ljmp aaa inc dec pop data16 mov (bad) repnz adc sub push jle xchg lahf stos mov int jecxz cli add aas dec push popa insl js (bad) lcall jmp add sbb popa insl js (bad) lcall jmp add sbb cmp pop imul mov cmc add and cmp pop inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc addr16 mov rcr call and cmp pop push mov fucomp add add inc push pop push mov fsubr hlt decl push and inc dec pop addr16 mov rcr out decb push and data16 mov into (bad) icebp std or sub inc push pop addr16 mov rcr out sti add cmp push push pusha imul (bad) xchg fwait mov ret jecxz testl xor push pop data16 mov mov hlt add and cmp push popa push jle xchg pushf cmpsb mov (bad) into (bad) lock or and cmp pop gs test (bad) rcr call push sub ds push pop imul mov repnz adc sub inc dec pop gs xchg mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov lcall (bad) in sti pop adc sub inc dec push popa insb ja orl (bad) aam out incb ss dec push popa insl js nop cltd mov into aam call and xor cmp push pop data16 test int3 xlat jecxz stc add sbb xor jne mov into ftst out add and cs dec push popa imul xchg mov xlat loop clc add and fs xchg int3 fsub out stc add sbb pop popa imul xchg mov (bad) in testl cmp addr16 mov (bad) icebp cld pop adc sub inc dec pop gs mov int in cld or push sub outsl jp xchg popf test ror loop stc add and ss dec dec push pop gs xchg mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov pushf cmpsl add loopne testb pop push and cmp pop data16 orl in icebp idiv or dec push popa insl js lea rcr call and cmp push pusha insb jns nop popf test out std or sub inc dec push popa insl ja mov in stc add sbb xor dec push pusha imul xchg mov fucomip cmc add pop and cmp pop push mov fucomp testb sbb xor jbe mov int in sti pop adc daa xor dec push pop imul mov int in sti pop adc pop fs xchg (bad) rcr in stc add sbb das cmp pop imul vpaddusb hlt decl adc dec pop gs xchg add fsub repnz adc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov and inc dec pop outsl jl xchg sahf stos mov int in cld or pop sub inc dec pop gs mov ftst out sti push adc xor dec push bound test lret fsub lock pop adc sub inc dec pop fs xchg int3 xlat jecxz stc add ds push popa insl js (bad) lcall jmp add dec push bound test leave aam jmp add sbb pop imul mov hlt add and cmp pop push jg xchg lahf stos mov lret loop hlt decl adc xor pop arpl orl mov out sti push adc xor aas inc dec push pop addr16 mov lret out sti add aaa inc dec push pusha imul cltd cmpsb add ljmp aas dec push pop imul inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc je mov leave aam ljmp ss dec push pusha push orb into fxam icebp cld pop adc xor push pop pop imul cltd mov rcr jecxz sti add xor je mov ror jecxz repnz add sbb xor popa insb ja lea ret loopne cmc decl adc sub push lahf stos mov int3 fsub out cli add cmp push pusha imul mov aam ljmp cmp pop data16 xchg leave aad in testl cmp je mov lret jmp add sbb cmp outsl jnp xchg sahf stos mov int3 fsub out sti push adc xor dec push add test int3 xlat jecxz stc add sbb xor dec push popa insl jns popl hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc lcall ljmp xor data16 jae orb iret (bad) out stc add cmp push pop imul stos mov (bad) iret fnsetpm(287 lock add sub inc dec push pusha insl jns nop fwait movsl mov leave aam jmp add sbb xor dec pop gs mov fsubr cmc add inc push pop addr16 xchg (bad) loope cmc incl (bad) iret (bad) repnz adc sub jno xchg xchg mov rcr out stc add ds push pop outsl jns mov leave rcr out sti add ss dec push pop addr16 test ror fsubrp repnz add cmp push popa add mov rcr in clc add pop sub cmp outsb js mov add mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov pop and xor addr16 test ret fucomip repnz push adc and push pop imul scas mov jmp sbb push pop imul scas mov jmp sbb sub pop push cltd movsb scas mov call sbb aaa inc dec push pop imul scas mov jmp mov fucom icebp cli add sbb sub xor push pop popa push fwait cmpsb mov mov fsubp jmp clc incb and inc dec push pop pop imul popf test mov hlt add sbb pop push jg xchg mov into (bad) out stc add sbb cmp pop arpl ja test test leave iret (bad) fsub jmp or adc inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc ss dec dec push pop bound jne orl in sti add adc push pusha outsl jnp (bad) lcall loop cmc add and ss dec push popa insb js mov lret ljmp ss dec push pop pop data16 jb jg mov mov mov loopne in repz add or sbb es cmp inc dec push pop pop data16 jb jg mov mov mov loope testl sub cmp inc dec push pop pop gs jb jg mov mov mov (bad) in repnz incl and inc dec push pop pop data16 jae jg add lods mov int fucomip clc add and cmp push pop addr16 jl mov scas mov ret leave iret (bad) fsub jmp or push sbb sub xor inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc inc dec dec push pop bound jbe (bad) mov scas mov ret aad loop out cmc cld add unpckhps sub ss dec dec push pop bound jne (bad) mov scas mov rol aam loopne in hlt cli add or sub cmp inc dec push pop pusha addr16 mov mov pop (bad) int3 fsub adc dec iret loope stc add sbb xor dec push arpl mov fsubr repz adc sub aas dec push pop push jle xchg cmpsl mov into fsub in cmc add push and inc dec pop gs mov fsub repnz adc sub inc dec pop data16 mov (bad) rcr jmp and cmp push pop imul mov repz inc dec pop fs xchg leave rcr ljmp cmp pop imul mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov scas mov lock add aaa inc dec pop data16 mov fsub lock or pop sub inc dec pop fs mov into fxam repnz adc sub inc dec pop data16 mov fsubr repz adc dec pop data16 mov (bad) repnz adc sub outsb jns xchg pushf test mov clc add sbb xor dec pop arpl test lret (bad) loop cli add ds push pop imul cltd movsl mov (bad) rcr jmp and imul mov testb sbb xor ja mov rcr ljmp cmp push pusha imul fwait cmpsl mov enter icebp cld pop adc inc dec pop gs jb jg mov mov icebp stc incl or sbb inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov das cmp pop push xchg fwait mov aam jmp add aas dec push pop push fwait movsl scas mov repz adc dec pop bound xchg (bad) rcr out std or sub ds push pusha imul xchg lahf stos mov lret aad in testb sbb cmp pop gs mov ret aad jmp and push arpl orl enter repz add adc sub dec push pop outsl jl xchg pushf test int3 xlat in stc add sbb and add insb ja (bad) lcall in testl cmp push pop push orl out cmc decl and pop push mov fsub in stc add sbb xor ja mov sarl xchg ret ljmp inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov clc incb and inc dec push pop pop gs jb jg mov mov mov (bad) in hlt cli add or sub dec push pop pusha data16 jae jg mov mov mov (bad) jmp clc incb and inc dec push pop pop gs jb jg mov mov (bad) rcr in cli add aaa cmp jb mov enter testb inc push jnp stos mov in cmc add pop push and xor inc push pop push xchg mov xlat loope stc add inc dec pop addr16 mov aam in stc add aas dec push popa imul cltd movsb scas mov decb sbb cmp pop gs mov lret in testl cmp ja mov aam mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov loopne clc add sbb xor dec push bound test lret ljmp cmp pop gs xchg lret jmp add pop daa xor dec push pusha insb js nop pushf cmpsl mov lret in testb sbb cmp pop arpl test leave aam jmp add and cmp pop imul (bad) rcr jmp xor dec push pusha insb js xchg sahf test loop sti push adc xor dec push arpl xchg int in add or dec pop fs xchg into fxam icebp cld or and aaa inc push pop imul mov cmc add and cmp pop imul (bad) call and cmp pop imul enter testl cmp push pusha imul lret (bad) loope testb mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc or jno xchg int hlt or jle es mov adc sub insl js mov out std or imul jg xchg mov int jecxz stc add sbb sub popa imul xchg sahf test loope testb pop and cmp dec push arpl ja test ror jecxz lock cmp dec push pop push test daa dec xchg test loope push cmp bound orl (bad) and outsb ja mov (bad) loop idiv or sbb das cmp add insb jbe mov (bad) cli or loope pop and sahf mov in or pusha push scas mov testb sbb xor pop gs test mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov movsl mov (bad) iret (bad) icebp sti add inc push pop imul mov enter cmc add push and ss dec pop arpl xchg ret int loopne repz pop adc and aaa inc dec push pop push cltd mov rcr out cli add ds push pop outsl jp mov leave rcr out cli add sbb sub outsw jns mov (bad) rcr jecxz testl xor dec pop outsb js mov (bad) iret (bad) in testl xor inc dec pop bound mov (bad) into xlat loope cmc decb adc das cmp push popa imul xchg popf cmpsl mov (bad) into xlat loope cmc decb adc and push pusha imul lods mov lret aad call sbb sub pop push cwtl mov rcr out inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov sti add ss dec push pop addr16 xchg ret fucomip repz pop adc xor inc dec pop bound mov (bad) loop testb adc sub cmp push pop outsb js mov lret out sti add sbb cmp push pusha push jle xchg pushf cmpsl mov (bad) iret fsub in testb adc sub cmp outsb js mov enter lock add sbb sub popa imul xchg popf cmpsl mov (bad) into fsub in idiv or sbb xor inc dec pop bound orb (bad) jecxz testb adc inc push pop add jp mov enter lock add sbb sub inc dec push pusha push jle xchg popf cmpsl mov (bad) rcr jecxz cli add sbb sub inc dec push pop imul mov (bad) jecxz clc add and xor inc push inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov addr16 test ror fucomip hlt decb adc xor inc dec push bound jg xchg popf cmpsl mov (bad) rcr in stc add aas dec push pop addr16 test ror fucomip hlt decb adc xor inc dec pop bound mov iret (bad) in testl xor jo test mov repz push adc and cmp push popa imul xchg popf cmpsb mov (bad) into fsub in testb adc inc push pop gs xchg (bad) into fxam icebp sti push adc xor inc dec pop arpl jp mov lret aad ljmp inc dec pop outsb js lea leave rcr call and outsb js mov (bad) rcr in stc add inc dec push pop imul xchg popf cmpsl mov (bad) rcr in inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov add sbb sub pusha push jle xchg pushf cmpsb mov (bad) into fsub in testb adc dec push pop data16 test ror fucomp repnz push adc and push bound mov (bad) rcr in clc add aas dec push pop addr16 test ret int3 xlat loope testb adc sub cmp push pop outsl jns mov lret aad jmp sbb cmp push pop push jle xchg pushf cmpsb mov (bad) into fsub out clc add and outsb jns lea ror fucomip repz pop adc xor inc push pop sub jecxz push jnp mov into fsub icebp std pop adc push pop data16 test ret int jecxz hlt cli add or sub dec push pop pusha insl jae addb scas mov rol aad jmp mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov add adc sub dec push pop popa insb js mov lret in testl xor inc push pop imul mov lret out cld push adc dec pop outsl jns nop popf cmpsb lods mov rol rcr (bad) in repz incl or sbb es cmp inc dec push pop pop imul test stos mov mov fsub jmp or adc xor arpl jp xchg lods mov rol rcr loopne in repnz incl and sub cmp dec push pop pop gs jb jg mov mov mov fsubp jmp idiv add adc and pop data16 xchg (bad) fsub jmp or adc ss dec dec push pop bound jne (bad) mov scas mov ret aad loop out inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov sti add push adc xor inc dec dec push pop popa outsb jne (bad) mov scas mov ret aad loop out cmc sti add push adc xor inc inc dec push pop popa outsb je addl ftst out cld push or ds push pusha imul xchg popf test (bad) icebp sti add cmp pop arpl test mov in icebp clc incb adc push and xor ds dec push pop pop imul test lea mov rol rcr loopne in repz add push adc and sub dec push pop popa outsb je addl rol aam loope out add adc push es cmp inc dec push pop pusha data16 jae jg mov mov mov fsubp jmp clc incb adc push and inc dec push pop pop imul mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov jg mov mov mov loopne in repz add or sub cmp inc dec push pop pop insw jae addb lods mov mov loopne in repz incl or sbb es dec push pop pusha insw jae jg mov mov rol rcr loopne in repz incl or sbb daa sub dec push pop pusha data16 jae jg mov mov mov fsubp jmp clc add push or sub dec push pop popa outsb je orl ret aad loop out cmc sti add push adc xor inc inc dec push pop popa outsb je addb scas mov ret aad loop out cmc sti add push adc xor push pop bound jbe orl mov mov fucom jmp clc incl inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov and inc dec push pop pop gs jb jg mov mov mov (bad) jmp clc incl es cmp inc dec push pop pop data16 jb jg mov mov mov fsubp jmp clc incb adc push and xor ds dec push push pop imul test stos mov mov fucom ljmp pop sbb cmp pop add js test stos mov mov loopne in repz add or sub dec push pop pusha data16 jae jg mov mov mov fsubp in repnz incl and inc dec push pop pop imul test stos mov mov fsubp jmp clc incl and inc dec push pop pop data16 jb addb enter inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc in testl xor insl jbe mov mov fchs out cli push adc inc dec push push pop arpl jbe orl mov mov jmp sbb push popa outsb jp xchg lahf stos mov into ftst lock pop adc xor inc push pop outsl jp mov iret ftst out cli add push adc xor cmp dec dec push pop bound jne (bad) mov scas mov (bad) rcr in stc add xor dec push pop data16 mov ret in cmc decb push pop sub push jg xchg mov rcr loopne in repz add or (bad) loop testl xor push pushf cmpsb mov (bad) into fsubs add cmp je mov int jecxz cli add inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov ds push popa insl js (bad) lcall jno mov (bad) jecxz out cmc cld add unpckhps and cs inc inc dec push pop pusha insw jae addb lods mov mov (bad) in repnz incb and xor cmp pop arpl jbe orl scas mov ret aam loope out hlt sti add add push sbb sub xor jne xchg fwait cmpsl loopne cli add sbb push pop push pushf cmpsl scas mov lock add aaa inc dec pop outsl ja lea iret fcomp in testl sub xor push pop popa outsb je addl rol rcr loopne in repz add or sbb es dec push pop pop gs jb jg mov mov mov fsubp jmp idiv add adc push and mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov xor cmp imul test stos mov mov loopne in repz add or sbb es dec push pop popa push xchg scas mov ror aad loop out cmc sti add push adc xor push pop popa push mov scas mov mov fsub jmp or push sbb sub ss dec push push pop fs ja test stos mov mov (bad) in repnz incl and inc dec push pop pop imul test stos mov mov (bad) in repz incl or sbb es dec push pop popa outsb je addl rol aam loope out hlt sti add push adc and sub dec push pop popa push mov scas mov ror aad inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc loop out cmc sti add push adc xor push pop arpl jbe (bad) mov scas mov ret leave rcl fsub jmp or push sbb sub ss dec push push pop arpl ja orl mov mov fucom jmp idiv add add inc dec push pop pop data16 jae addb lods mov rol rcr loopne in hlt cli add push adc and das ss dec dec push pop bound ja orl mov mov fsubp ljmp pop push and xor cmp pop imul test stos mov mov fucom ljmp push sbb cmp pop arpl jbe orl mov mov fucom ljmp push sbb cmp pop arpl jbe addl inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov mov fucom jmp idiv add adc push and xor cmp pop fs ja test stos mov mov fucom ljmp das cmp push pusha imul lcall loopne ljmp and xor cmp arpl xchg mov fsub jmp or pop sbb inc dec pop outsl jp mov aam in testl cmp push pop imul xchg mov rcr out std pop adc push pop pusha data16 jae jg mov mov rol rcr loopne in repz add or sbb sub push lcall loope cli add adc dec push pop gs xchg (bad) out sti push adc and bound inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc test ror jecxz repz add or sub dec push pop push mov jl xchg fldlg2 clc add sbb cmp iret fsubp repnz pop adc and push pop push fwait movsl mov out and jo xchg rcl fsubp ljmp pop sbb ds dec push pop pop imul test stos mov mov fsubp jmp clc incb adc push and xor cmp pop arpl ja test mov mov mov fsubp jmp testl sbb and inc dec push pop pop imul test stos mov into aad call sbb xor cmp push pop push popf test mov cmp xchg mov (bad) loope stc add or inc inc dec push pop pop data16 jb jg mov hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cltd lahf movsl lods mov mov (bad) jmp clc incb and xor ds dec push push pop fs ja test stos mov mov fucom jmp or push sbb cmp dec dec push pop arpl jbe (bad) xchg popf mov ret lret fucom jmp or pop sbb cmp dec push push pop arpl jbe orl mov mov fsub call or push sbb aaa cmp pop arpl jbe orl stos mov mov fucom jmp or adc xor push pop popa push xchg lods mov rol rcr (bad) in repnz incl and inc dec push pop pop imul test stos mov mov fucom jmp idiv add adc sbb hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov ss dec dec push pop arpl ja orl mov mov (bad) in repnz incl and inc dec push pop pop imul test stos mov mov fsub jmp or pop sbb cmp pop arpl jbe orl scas mov ret aad loop out cmc sti add push adc and sub dec push pop popa insl jae addb mov mov ror aam loope out hlt add add push adc xor push pop bound jne orl scas mov ror aam loope out cmc sti add push adc xor inc inc dec push pop pusha insl jae addb lods mov rol rcr (bad) jmp clc incb and xor cmp pop arpl jbe orl scas mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov ret (bad) fsub jmp or push sbb sub xor push pop bound jne orl ror aam loope out hlt sti add or cs push pop arpl jbe orl scas mov ret aad loop out cmc sti add push adc xor push pop popa outsb je addl rol aam fnclex call or adc ds push pusha add mov lret out sti push adc xor inc dec dec push pop popa push mov lret rcr fsubp jmp clc incb adc push and inc dec push push pop addr16 test ret int in cld or dec pop addr16 mov rcr out cld push adc and push bound addl inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov (bad) into aam loope in hlt cli add or sub cmp inc dec push arpl orb (bad) lret jmp std or sub cmp pop gs xchg mov icebp sti push adc xor jno test ret into (bad) in clc add sbb sub xor push pop popa outsb je addl mov fsub call or adc xor cmp pop arpl ja test mov lret fucom jmp or push sbb sub ss dec push push pop arpl jbe (bad) mov scas mov ret lret fucom jmp or push sbb sub ss dec dec push pop bound jne mov enter icebp std or pop and push pop pop gs jb jg mov mov mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov lret rcl fsubp ljmp push sbb cmp dec dec push pop arpl jbe orl mov mov fsub jmp or adc xor push pop popa push mov scas mov ror aam loope out hlt cli add or cmp dec pop outsl jnp xchg mov icebp cld or sbb xor aas dec dec pop fs orl iret fninit in stc add sbb sub cmp pop pusha data16 jae jg mov mov mov fucom ljmp pop sbb cmp pop arpl jbe (bad) mov scas mov ret aad loop out cmc sti add push adc and cs inc inc dec push pop bound jne nop xchg popf movsb stos mov mov fucom ljmp push sbb inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cmp dec dec push pop arpl jbe (bad) mov mov mov fsubp jmp clc incl and inc dec push pop pusha data16 jae addb lods mov mov (bad) in repz add or sbb es cmp inc dec push pop pop gs jb jg mov lods mov rol rcr loope in hlt sti add add pop push and xor ds dec push pop pop imul test stos mov mov fucom ljmp pop sbb ds dec push push pop imul test stos mov mov fsubp jmp clc incl es cmp dec push pop pop data16 jb jg mov mov rol rcr loopne in repz add or sub cmp inc dec push pop pop gs jae addb lods mov rol rcr inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov (bad) in repz add or sbb es cmp inc dec push pop pop gs jb jg mov mov mov (bad) in repz incl and inc dec push pop pusha insl jae addb lods mov mov (bad) jmp add add or sub dec push pop popa push orl scas mov ret lret fucom ljmp pop sbb cmp pop fs ja test stos mov mov fsubp jmp clc incb adc push and inc dec push pop pop imul test stos mov mov fsubp jmp clc incl and inc dec push pop pop imul test mov mov (bad) in repnz incl and inc dec push pop pop gs jb inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov jle mov mov mov (bad) jmp clc incb sub dec push bound jge xchg popf test fsubr repnz push nop/reserved das aaa cmp pop arpl jbe xchg (bad) int3 rcr add out repz add or sub dec add outsl jns mov into (bad) icebp std or and cmp pop push mov xlat loope testl xor imul xchg lcall (bad) int fnop out repz add or sub cmp inc dec push pusha imul xchg popf test mov in cmc decl adc inc push pop outsl jnp mov rcr ljmp xor outsl js mov fucomp stc add sbb sub inc push pop outsb js cltd mov fucom icebp pop inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc js rcl out sti add cmp push popa imul xchg sahf test frstpm(287 out stc add sbb sub push (bad) loopne hlt decb adc xor inc dec pop bound js mov enter repnz push adc and das cmp push pusha push jle mov push xor dec addr16 mov ret int loope cmc decl adc orl leave rcr out cli add sbb sub aas dec push pop data16 test mov lock add sbb sub addr16 xchg ret loopne hlt incb adc and push pusha push jle xchg pushf cmpsb mov (bad) into fsub jmp decl adc dec pop bound mov rcr in clc add and xor data16 test ror fucomip repz pop inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov sbb push popa imul mov icebp cli add cmp push pop push jle xchg lahf test frstpm(287 out stc add and xor aas dec push pop addr16 test ror fucomip add add and xor dec push pop addr16 test ret loopne hlt decb adc xor inc dec pop bound mov enter icebp sti add cmp push pusha push jg xchg popf cmpsl mov (bad) jecxz testl xor jo test ret loopne hlt decb adc and push popa imul pushf cmpsb mov (bad) into fsub jmp add adc sub cmp pop outsb js lea lret out sti push nopl sub pusha push jg xchg popf cmpsl mov (bad) jecxz testl xor jo inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov test ror fucomip repz or sbb xor inc dec push bound orb (bad) rcr in clc add add pop outsl jns lea int loop testb or and xor addr16 xchg ret loopne hlt decb adc push pop addr16 xchg (bad) rcr out cld pop adc push pop outsl jp mov int3 (bad) fucomip repz pop adc and push arpl orl lret jmp sbb pop arpl orl out cld pop adc and push bound mov (bad) rcr in cli add sbb sub inc dec push pop push jle xchg fwait test fucomp hlt decl adc sub cmp jno xchg ret into fsub in testb adc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc and inc dec push pop imul mov (bad) rcr in cli add cmp pop bound add mov leave rcr call sbb xor cmp push pop outsl jns lea lret aad ljmp xor push pop outsl jp lea lret jmp sbb xor inc dec pop arpl (bad) lea lret aad jmp add adc sub cmp jb xchg (bad) into ftst out clc add inc dec push pusha push orb enter repnz pop adc xor jb mov (bad) rcr in cli add sbb sub jo xchg (bad) into fsub in testl xor jb mov enter icebp sti add cmp push popa imul xchg sahf test mov hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov fsubrp repnz pop adc pop outsb js lea lret loopne cmc decl adc sub cmp jo test nop fwait movsl scas mov in testl xor dec push pop data16 test ret loopne hlt decb adc xor inc dec pop arpl orl out cld push adc and cmp push pusha push jle xchg sahf test mov out clc add and ss dec push pop imul mov (bad) in clc add push and xor dec push pop addr16 test ret int loope cmc decl adc sub cmp outsl jp mov int loop testl xor jno xchg ret int loop testl aaa inc dec push pop imul mov repnz push adc and pop arpl hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov insl ja mov lret aad jmp add or dec push pop imul add cmc decl adc sub ds push pop data16 test ret int loop testl xor push jle xchg pushf cmpsl mov (bad) in stc add sbb sub pusha push jg xchg popf test mov out cli add sbb cmp push popa push jg xchg sahf test mov out cli add sbb sub outsl jns mov int3 (bad) loopne hlt decb adc sub cmp jno test ret into ftst out clc add inc dec push pop push jg xchg lahf test fsub repnz push adc and cmp push popa insb jbe lea lret jmp sbb push pop outsb jns mov int3 xlat loope testl hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov sub add pop imul mov in testl sub pusha push jle xchg sahf test mov icebp sti add cmp push bound mov enter icebp sti add cmp push popf cmpsl mov lret ljmp xor dec push pop imul mov (bad) hlt add inc dec push pusha push jle xchg popf cmpsl mov (bad) rcr jmp decl adc dec push pop push lcall loop testl sti repz lea leave rcr out sti add sbb sub pop addr16 test mov out stc add and xor outsb add mov enter out clc add and xor insl ja mov (bad) rcr inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov out clc add sar ds push pop addr16 test add ss dec push pop addr16 test ror fucomip repz adc vpand or and xor push lcall in clc add and xor dec push pop addr16 test ror loopne hlt decb cmp daa pop insb xchg (bad) (bad) sti das aas gs mov dec push pop push orb rcr call and cmp gs xchg leave aam sbb ss dec pop bound test lret jmp add pop and cmp addr16 mov iret (bad) lock add pop and add arpl orl rcr call and ss dec pop outsl jp xchg pushf test mov stc add sbb xor dec inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov push bound test lret in cli pop adc sub outsb jp xchg pushf test ror fucomp hlt sti add push adc and ss dec push popa insl js xchg rcr loope hlt add ds dec push pop addr16 mov mov lock push adc push popa insb jns (bad) fwait cmpsl mov lret xlat in cld or sub inc push pop imul leave aam ljmp cmp arpl mov (bad) rcr in clc add sbb pop imul mov testl cmp push pusha insb ja mov aam in testl cmp imul mov out sti push adc xor je mov rcr call and cmp pop outsl jp mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc int in sti add ds push pusha insb js (bad) fwait cmpsb mov enter testb sbb pop push (bad) lea rcr ljmp cmp pop push mov (bad) repnz push and cmp pop addr16 mov iret (bad) icebp std or pop sub inc dec pop gs mov (bad) repnz or sub inc dec push arpl test lret in clc add sbb xor js nop pushf cmpsl mov lret (bad) loop cli add aas dec push pusha insb ja (bad) fwait cmpsb mov lret in testl cmp push pop push orl testl aaa inc dec push bound jbe mov mov fsub lock pop adc xor ds dec push pop addr16 xchg enter loope testb push and mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc dec pop arpl mov rcr out sti or sbb push popa imul fwait movsl mov enter repnz pop adc xor jae mov (bad) loopne testb pop and inc dec pop data16 xchg lret aad jecxz out testb pop and cmp pop gs xchg mov cmc add sbb sub inc dec pop fs jae test enter loop clc add ss dec push pusha push jg xchg mov fsubr hlt decl adc dec pop fs mov fsub out add pop adc dec push arpl xchg lret in clc add sbb xor inc push pop imul vpaddusb hlt add push and ss dec pop pusha imul xchg mov (bad) icebp std or sub hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc push arpl xchg lret in testl cmp js nop fwait cmpsl mov lret in stc add aas dec push bound test lret ljmp sub xor imul test mov cmc cld add and pop arpl jl xchg sahf test rcr jecxz cld pop push sbb xor jbe mov (bad) loope cli push adc sub inc dec pop data16 mov aam ljmp cmp arpl xchg popf cmpsl mov (bad) rcr jmp sbb cmp outsl jp xchg lahf stos mov lret (bad) loop cli add ds push popa outsb jns xchg pushf test ror in std or dec pop outsb jns mov aam call pop sub insl js mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov rcr jmp add sbb xor dec push pop addr16 mov (bad) call and inc push pop gs mov ftst lock pop adc sub inc dec pop data16 mov (bad) lock pop adc pop fs xchg int in stc add push pusha outsl jp lea int loope add sbb xor scas rcr in clc add inc push pop arpl orl rcr in clc add adc inc dec pop bound jbe mov (bad) int loope hlt incb adc and push pop push lcall fucomip repz push adc and ss dec push pop addr16 (bad) lea (bad) loop testb adc inc dec pop arpl mov (bad) loop cmc decl adc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov xor inc dec pop bound icebp sti push pop imul mov jmp decl adc push pop outsb js mov (bad) rcr in stc add ds push pop outsl jns lea enter repnz push adc daa xor push pop outsb js mov enter lock add sbb sub aas dec push pop addr16 test ror fsubrp repz pop adc xor inc dec pop arpl orl out repnz pop adc and push pop imul scas mov jmp decb adc daa xor inc dec pop arpl orl out cli add sbb cmp push pusha imul xchg popf test mov out clc add aas dec push pop addr16 xchg ret loopne hlt decb adc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov xor inc push pop outsb js mov lret aam call sbb xor inc dec pop bound mov rcr in stc add sbb sub inc dec push pop addr16 test ret loopne hlt add adc sub cmp push pop outsb js lea enter icebp sti add cmp push pusha push jle xchg pushf cmpsb mov (bad) iret ftst in clc add and xor push lcall loop testl sub inc dec push popa insb ja mov int loop testl ss dec push pop imul ror jecxz testl xor dec push pop addr16 test (bad) in cli add sbb cmp push pusha imul mov (bad) jecxz testl xor imul mov lds hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov (bad) in testl xor addr16 xchg (bad) in stc add and ss dec push pop imul mov (bad) jecxz testl xor addr16 xchg ret loope cmc decl adc sub cmp push pop outsb js mov enter lock add sbb cmp push popa imul xchg sahf test mov out stc add inc add imul xchg lahf test fsub icebp sti add cmp arpl orl out cli add sbb sub pop imul mov (bad) in stc add sbb cmp pop data16 test ret loope cmc decl adc dec push pop push lcall jecxz clc add and inc dec pop arpl hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov insl ja mov int3 (bad) loope testl xor push jg xchg sahf test mov lock add cmp push popa insl ja mov int3 (bad) loopne cmc decl adc push pop outsb jns lea lret jmp sbb xor inc dec pop arpl (bad) mov leave rcr out cld push adc and cmp push pusha push jle add int3 xlat jecxz stc add sbb cmp arpl orl repz pop adc xor push pop outsb jns lea lret aad ljmp xor dec push pop push fwait movsl scas mov in testb adc sub ds push pop data16 test ret loopne cmc decl adc push pop outsl jns mov lret (bad) loopne cmc decl adc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov push sub cmp jo test ret int loop testb adc sub push pushf cmpsl mov enter icebp sti add cmp push popa insb ja mov lret jmp add and xor push orl hlt decb adc pop push sahf test fucom icebp add or sbb xor push pusha imul xchg lahf test fsub lock add aaa inc dec push pop imul scas mov in testl ss dec push popa insb jbe mov rcr out cli add sbb sub arpl orl call sbb pop arpl (bad) mov enter lock add sbb sub inc dec push pop imul mov (bad) rcr inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc in stc add sbb sub inc dec push pusha push jle xchg pushf cmpsl mov (bad) jecxz clc add inc dec push pop imul mov (bad) in stc add aas dec push pop imul mov lock add sbb sub pusha push jle xchg pushf cmpsl mov (bad) in clc add and add inc dec push pusha push jg xchg sahf test mov lock add sbb cmp dec pop outsl jns lea lret call sbb cmp pop bound orb enter repnz pop adc and pop arpl (bad) mov lret call sbb xor inc dec pop arpl (bad) mov lret call sbb xor inc dec pop outsb js mov enter icebp sti add cmp pop arpl mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov js mov leave rcr out sti add cmp push popa imul xchg sahf test mov out cli add inc dec push popa imul xchg sahf test mov lock add aaa inc dec pop bound orl out cli add sbb sub add js mov leave rcr out std pop adc xor inc push pop outsb js mov lret jmp sbb pop arpl orl lret aad jmp sbb xor inc dec pop arpl orl repz pop adc xor inc dec pop data16 test ret loopne testb adc sub cmp outsl jp mov int3 (bad) loope testb push and ss dec push arpl test (bad) rcr out cld pop adc inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov xor inc dec pop arpl nop fwait cmpsl mov (bad) in stc add sbb sub popa imul cwtl mov xlat loope cmc decl adc dec push pop addr16 xchg (bad) into (bad) out clc add and inc dec push pop imul mov out sti add cmp pop addr16 mov leave aam ljmp xor imul xchg mov (bad) out clc add sbb cmp outsl jns (bad) lcall out cld or sbb push pop imul ror loope testb pop and bound orl into fsub out cli add cmp pop data16 xchg (bad) rcr jmp pop sub dec push pop push jg xchg lahf stos mov lret ljmp ss mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc inc dec push popa insb jbe mov int3 xlat loop stc add sbb pop addr16 mov lret (bad) loope testb sbb cmp gs xchg lret ljmp cmp data16 xchg ror jecxz stc add sbb xor push pop data16 xchg enter repz adc sub dec push bound test (bad) iret (bad) lock add cmp push pop push lahf test loopne cmc add push and inc dec push popa insl js lea int jecxz cli add sbb pop push mov ftst out stc add sbb pop push sahf stos mov jmp clc incl and inc dec push push pop arpl jbe orl scas mov ret leave iret aad loop mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc call or adc xor push pop popa insl jae addb mov (bad) out repnz incl and inc dec push pop pop gs jb jg mov lods mov rol rcr loopne in repz add or sub cmp inc dec push pop pop imul test mov mov (bad) jmp clc incb and xor cmp pop arpl jbe orl scas mov ret leave iret aad loop out cmc sti add push adc xor inc inc dec push pop popa insl jae addb lods mov mov (bad) in repnz add or sbb es cmp inc dec push pop pop imul test stos mov mov fucom jmp or push sbb sub ss dec dec push pop arpl jbe addl inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov mov fsubp jmp clc incb and xor ds dec push pop pop imul test stos mov mov fsubp jmp clc add push or sub cmp inc dec push pop pop data16 jb jg mov mov rol aam loope in hlt cli add or sub dec push pop popa insl jae addb lods mov rol rcr (bad) in repnz add or sbb and inc dec push pop pop gs jb jg mov mov mov fsubp jmp idiv add adc sbb ds dec push push pop arpl jbe orl mov mov fucom ljmp push sbb cmp pop arpl ja test test leave iret aad loop out cmc sti add push adc hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cs inc inc dec push pop pusha insl jae addb lods mov rol rcr loopne in repnz incl and inc dec push add imul test stos mov mov fucom ljmp pop sbb cmp pop arpl jbe (bad) mov scas mov ror aam loope out hlt cli add or cs inc inc dec push pop pusha insl jae addb lods mov mov (bad) jmp clc incb and xor cmp pop arpl ja test stos mov mov fsub jmp or adc xor inc dec push pop arpl jnp std (bad) jbe xchg cmpsb mov (bad) fwait stos mov in cld pop adc jbe mov loopne or gs add aad ljmp hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov sub test mov inc dec pop outsl jns xchg pushf cmpsb mov lret push pop push orb int3 xlat loop testl cmp pop arpl orl rcr out sbb inc jo lea rcr jmp pop sbb ds dec push pop pop gs jae addb scas mov ror aad loope out cmc sti add push sbb sub outsb jns nop fwait cmpsb mov rol fsub out cli add adc sbb sub xor push pop bound jne (bad) mov lods mov rol rcr loopne in repnz incl and xor cmp pop arpl jbe orl scas mov ret aad loope out hlt std or sub inc dec push pop push jge xchg pushf add rcr fsubp jmp clc incb adc pop and mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc ds dec push pop pop fs ja test stos mov mov fsub jmp or sbb cmp outsb jnp xchg pushf mov ret leave iret aad loop out cmc sti add push adc and sub dec push pop pop data16 jb jg mov mov mov out cld add inc dec push pop data16 test ret iret (bad) in clc add adc dec push pop imul sahf movsl stos mov mov fsubp ljmp push sbb sub xor push pop popa push xchg mov push pop jge cwtl movsb scas mov testl ds push bound xchg rcr call and popa add test (bad) rcr jmp sbb bound orl inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov out cld push adc push fs lea (bad) jecxz idivb inc push pop data16 test ror fucomip repz adc sbb cmp dec dec push pop bound jne (bad) mov scas mov rol aad loope out hlt sti add push adc and sub dec push pop pusha data16 jae jg lea mov mov (bad) jmp clc incb and inc dec push pop pop imul nop fwait cmpsb mov (bad) rcr call sbb and inc dec push push pop fs ja orl mov mov fucom jmp or adc xor push pop popa insl je addb cmpsl lods mov rol aam loopne in repz add or sbb es cmp inc dec push pop pop imul test stos inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov fucom jmp or push sbb sub xor push pop popa outsb je addl mov fucomip cmc add pop and cmp pop pusha insw je addl rol rcr (bad) in repnz incl and inc dec push pop pop fs ja test stos mov mov fucom jmp or push sbb sub xor push pop bound jne (bad) mov scas mov rol aam loopne in hlt cli add or sub dec push pop pop gs jb jg mov mov mov fucom ljmp push sbb add xor inc fs (bad) fwait movsb stos mov mov fsub jmp or adc xor inc inc dec push pop pusha insw jae jg mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov mov (bad) jmp clc incb adc sbb cmp pop arpl jne (bad) mov scas mov ror (bad) repnz add cmp insb jns xchg mov fnclex call or adc xor push pop bound jbe (bad) mov scas mov ret (bad) fsub jmp or push sbb sub xor push pop bound jne (bad) mov scas mov ret aad loop out cmc cld add unpckhps and cs push pop popa push xchg scas mov rol aam loope out hlt sti add add adc xor push pop bound je orl rol aam loopne in hlt cli add or sub dec push pop pusha insw jae addb inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc cltd lahf cmpsb lods mov mov (bad) in repnz incl and inc dec push push pop imul test stos mov mov fucom ljmp pop sbb cmp pop arpl jbe (bad) mov scas mov ret leave iret (bad) fsub call or adc xor push pop popa outsb je addl rol rcr loopne in hlt cli add or sub dec push pop pop data16 jb jg mov mov mov fsubp jmp clc incb adc push and inc dec push pop pop add jb jg mov mov mov fsubp ljmp pop sbb cmp pop arpl jbe orl mov mov fsub jmp or adc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cs push pop popa outsb je addl rol aam loope out idiv add movhps sub ss pop arpl jbe (bad) mov mov mov fsub ljmp push sbb dec push push pop arpl ja orl mov mov fsub call or push sbb sub ss dec dec push pop bound jne orl rol aam loope in hlt cli add or sub dec push pop pusha insw jae addb lods mov rol into aam loope out hlt cli add or sub dec push pop pop gs jb jle mov mov mov fsubp jmp idiv add adc sbb cmp pop bound jne (bad) mov scas mov rol inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc aam loope out hlt cli add or sub dec push pop pop data16 jb jg mov mov mov fucom ljmp push sbb sub ss pop bound jne (bad) mov scas mov rol aam loopne in repz add or sbb es cmp inc dec push pop pop gs jb jg mov mov mov fucom ljmp push sbb sub xor push pop bound je addl rol aam loopne in repz add or add and sub dec push pop pusha data16 jb jg mov mov mov fsubp jmp idiv add adc sbb cmp pop arpl jbe (bad) mov scas mov rol aam loope in hlt cli add or sub dec push pop inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc pop data16 jb jg mov mov mov fsubp jmp idiv add adc sbb cmp pop arpl jbe orl scas mov ret leave rcl fsub jmp or push sbb sub data16 (bad) mov lret loopne icebp std pop push adc xor push pop popa push mov scas mov ror aam loope out hlt sti add push adc and das xor push pop bound jne (bad) mov scas mov mov fsub jmp or push sbb sub ss dec dec push pop arpl jbe orl scas mov ret aad loop out cmc cld add unpckhps sub xor push pop bound jne (bad) mov scas mov ret aad loop out cmc sti add unpckhps and cs hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov dec dec push pop popa push mov scas mov rol aam loop out cmc sti add push adc xor inc dec dec push pop popa outsb je addl rol aam loopne in hlt cli add or cs inc inc dec push pop popa insl je addb lods mov rol rcr loopne in repz add or sub cmp dec push pop pusha insl jae addb lods mov rol rcr loopne in repz incl or add and sub dec push pop pusha insl jae addb lods mov rol aam loopne in repz add or sub dec push pop pusha insw jae addb lods mov mov loopne in repz add or sub cmp dec push pop pop data16 jb jg mov mov mov fild hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc in repnz incl es cmp inc dec push pop pop data16 jb jg mov mov mov (bad) jmp clc incl and inc dec push pop pop gs jb jg mov mov mov (bad) in repnz incl das aaa cmp pop arpl ja orl mov mov fucom jmp or push sbb sub ss dec push push pop bound jne add mov ret leave iret (bad) fsub jmp or push sbb sub xor push pop bound jne orl ror aam loope out hlt cli add or cs inc inc dec push pop pusha insl jae addb lods mov rol rcr loopne in repz incl or sbb and inc dec push pop pop gs jb jg inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov mov mov fsubp ljmp pop sbb cmp pop arpl jbe orl mov mov fsub jmp or adc xor inc inc dec push pop popa push xchg lods mov rol rcr loope in hlt cli add or sub cmp inc dec push pop pop gs jb jg mov mov mov fcomp in repnz incb and inc dec push pop pop imul test stos mov mov fucom ljmp push sbb sub ss dec dec push pop arpl jbe (bad) mov scas mov ret aad loop out cmc sti add push adc and cs inc inc dec push pop pusha insl je addl rol aam loopne in hlt cli add or hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov es dec push pop pusha data16 jae jg mov mov mov loopne in repz add or sbb es cmp inc dec push pop pop gs jb jg mov mov mov loope stc add adc xor inc push pop pusha push xchg pushf test mov fsub call or adc xor inc inc dec push pop popa insl je jnp mov scas mov rol aam loope in repz add or sub cmp inc dec push pop pop imul test stos mov mov fucom ljmp push sbb sub ss dec dec push pop bound jne orl rol rcr loopne in repz incl or sbb es cmp inc dec push pop pop imul test stos mov mov fucom ljmp mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov add adc sbb sub xor push pop bound jne (bad) mov scas mov rol aam loopne in repz add or sub cmp inc dec push pop pop imul test stos mov mov fucom ljmp push sbb sub xor push pop popa push xchg lods mov rolb into aad loope out hlt cli add or sub dec push pop pop data16 jb jg mov mov mov fucom ljmp pop sbb cmp pop bound jne (bad) mov scas mov rol aam loopne in repz add or sub cmp dec push pop pop gs jb jg mov mov mov fucom ljmp push sbb sub xor push pop popa push inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov scas mov rol aam loopne in repz add or sbb es cmp inc dec push pop pop data16 jb jg mov mov mov (bad) jmp clc incb and inc dec push pop pop imul test mov ret leave rcl fucom jmp or push sbb and xor cmp pop arpl jbe (bad) mov scas mov rol aam loopne in repz add or sbb es cmp inc dec push pop pop gs jb jle mov mov mov fucom jmp or adc xor push pop popa insl je addl rol rcr (bad) in repnz incl and inc dec push pop pop imul test stos mov mov fucom ljmp push sbb mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov and das xor push pop popa outsb je addl rol rcr loopne in repz add or sbb es cmp inc dec push pop pop imul test stos mov mov fsub jmp or adc xor push pop popa add jnp mov lods mov rol rcr loopne in repz incl and inc dec push push pop imul test stos mov mov fsub jmp or adc xor inc inc dec push pop pusha insl jae addb lods mov mov (bad) jmp clc incb adc push and xor cmp pop arpl jbe (bad) mov scas mov rol aam loope out hlt cli add or sub dec push pop pop gs jb jle mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc stos mov mov fucom ljmp push sbb cmp dec dec push pop bound jne orl rol rcr loopne in repz add or sub cmp pop bound orb rol fsubp out add decb adc aaa cmp pop fs ja test stos mov mov fucom ljmp pop push and xor cmp pop fs ja test stos mov mov fucom ljmp pop sbb ds dec push push pop fs ja test stos mov mov fucom ljmp pop sbb cmp pop fs ja test stos mov mov fucom ljmp pop sbb cmp pop arpl jbe orl hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov xchg popf movsb stos mov mov fucom ljmp pop sbb cmp pop arpl jbe test stos mov mov fucom ljmp pop sbb cmp pop add jb jle mov mov mov fsubp ljmp pop sbb ds dec push push pop fs ja test stos mov mov fucom ljmp push sbb sub ss dec dec push pop arpl jbe orl scas mov ret (bad) fsub jmp or adc xor push pop bound jne orl ret aad loope out cmc sti add adc and xor push pop imul mov out cmc decl adc inc inc push pop push jns xchg inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov mov fsubp jmp idiv add adc sbb cmp pop arpl ja test stos mov mov fsubp ljmp pop push and xor cmp pop arpl jbe (bad) mov mov mov fucom jmp clc incb and push pop popa insl je orl ret aad loop out cmc sti add adc sbb sub aaa ds dec push push pop arpl js xchg scas mov ret aad jecxz lock add unpckhps sub aaa cmp pop popa insl je orl ret aad loop lock add adc pop and inc dec push pop pusha outsb jne test stos mov mov loopne out cmc cld add adc sbb ds dec push pop pop data16 jb inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov addb lods mov rol aam loop out cmc cld add movhps cmp pop imul xchg lods mov ror (bad) fucom ljmp sbb and inc dec push pop pop imul test stos mov mov fucom ljmp push sbb sub xor push pop bound je addl ror aam loope out hlt cli add push adc and sub dec push pop pusha insw jae addb lods mov rolb into aam loope out hlt sti add or sub dec push pop pop data16 jae jg mov mov mov (bad) in repnz incb es cmp inc dec push pop pusha data16 jae jg mov mov mov fsubp jmp idiv add adc push inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov sub aaa cmp pop arpl jbe orl scas mov ret aad loop out cmc cld add unpckhps sub ss pop arpl jbe (bad) mov mov mov fucom jmp or push push and xor ds dec push push pop fs ja test stos mov mov fucom ljmp push sbb sub ss dec dec push pop bound jne orl rol aam loopne in repz add or sub xor push pop popa outsb je addl rol fsub hlt std or inc push pop addr16 mov (bad) iret fsub in stc add push adc xor inc dec dec pop arpl xchg mov mov (bad) in repnz incl es push pop inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov jb xchg (bad) rcr ljmp cmp pop imul ror loopne cmc decl adc sub ds push pop pop data16 jb jg mov mov mov (bad) in repnz incl and inc dec push pop pop gs jbe lea leave aad out hlt decl adc dec push pop data16 test mov repnz adc xor inc push pop push jns xchg fwait movsb scas mov jecxz cli add sbb das cmp push pop pop gs jb jg mov mov rol rcr loopne in repz add or sub dec push pop pusha insw jae addb lods mov mov loope testb adc pop and inc dec push pop pop imul test stos mov mov fucom ljmp hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc idiv add adc sbb sub ss dec dec push pop bound jne orl ret (bad) icebp stc add sbb das cmp pop arpl jge xchg cwtl sahf movsl stos mov mov fsubp ljmp pop sbb ds dec push push pop fs ja test stos mov mov fucom jmp or adc xor push pop popa push mov scas mov mov fndisi(8087 call pop or sub dec push pop pusha insl jae test ret out hlt sti pop adc pop arpl (bad) mov enter icebp std or and cmp pop gs xchg (bad) xlat fsubp ljmp push sbb cmp dec dec push pop bound jne addl inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov rol rcr (bad) in repnz incl or sbb es cmp inc dec push pusha imul lods mov lret aam ljmp das cmp data16 (bad) mov enter lock add sbb sub data16 xchg mov rcr in stc add aas dec push pop outsl jns lea lret (bad) fucomip repnz pop adc push pusha push jbe mov ret int3 (bad) loopne repz or sbb dec pop arpl mov (bad) rcr in testl xor push pop arpl (bad) mov xor dec push bound test (bad) iret ftst out clc add dec pop fs xchg int3 xlat jecxz cli push adc xor dec push popa insl jns xchg pushf test ror jecxz sti pop adc sub outsb inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov test leave aad in clc add sbb xor dec push bound xchg lret xlat loop stc add sbb pusha insb jbe lea rcr ljmp cmp pop imul mov repnz adc dec pop data16 mov (bad) repnz adc sub inc dec pop addr16 mov into flds out std or sub inc dec pop gs mov (bad) repz push and cmp pop push fwait movsb lods mov out repz add sbb inc dec push pop pop imul xchg mov int fucom repnz pop adc xor dec push pop pop imul xchg mov (bad) in testl xor push pop arpl (bad) mov rcr in cld pop adc sub dec push popa insb ja mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc lods mov int3 xlat jecxz stc add sbb cmp pop outsl jp (bad) lcall out std or dec pop arpl (bad) mov mov out sti push or cmp outsb jne mov lret rcr loope clc add sbb push pop push xchg lcall out hlt sti add or and bound xchg lret (bad) loope testl cmp push pop addr16 mov lret rcr jmp and data16 mov xlat loop stc add sbb xor dec push arpl test (bad) rcr out std or push sub ds push pop push orb rcr out std or sub inc dec pop gs xchg lret xlat jecxz stc add aas dec push bound test leave inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov loopne testl cmp jno xchg mov (bad) into (bad) icebp sti pop adc sub cmp jne (bad) mov iret fcomp in icebp cld pop adc daa xor inc dec push pop bound xchg enter hlt add pop and cmp pop imul pushf test ret add cmc add sbb pop push orb into (bad) cli or dec push pop push (bad) mov into ftst lock or and data16 mov iret (bad) repz and cmp pop push mov (bad) lock add aas dec push pop imul ror loopne clc add sbb xor dec push bound test enter hlt decb adc push pop push mov fxam icebp cld or pop sub inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc inc dec pop gs mov int out std or dec pop data16 xchg int jecxz cli push adc sub outsl jnp xchg sahf stos mov into (bad) repnz or pop sub insl jns nop fwait cmpsb mov leave aad in testl cmp outsb jp xchg pushf test mov stc add sbb xor ja mov rcr jmp and pop imul cltd movsl mov leave aad jmp add dec push pusha imul cltd movsl mov enter testb sbb xor ja mov into fsub in idiv add xor inc dec push pop pop imul mov rcr fsubp out testl aaa inc dec pop pusha insw jae orl rcr call sbb cmp bound orl hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov xchg movsb lods mov testb pop and outsl jp (bad) lcall in cli add sbb xor push pop data16 xchg enter cmc add inc dec push bound jle mov (bad) out icebp idiv or sub dec push pop bound xchg mov icebp cld or sbb sub inc dec pop gs jae addb int3 aad loop out cli push adc es cmp pop imul lcall call and gs mov ror in cld pop adc push arpl xchg leave aam jmp add sbb xor dec push pusha insb ja lea lret ljmp cmp pop data16 mov fsub out cli push adc push arpl xchg mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc ror loop cli add aas dec push bound test lret xlat loop stc add sbb xor jno (bad) mov mov hlt sti add adc sub dec push pop bound mov rol (bad) loope clc add ss push bound jg cwtl mov fsubr hlt decl pop and cmp pop push (bad) mov (bad) in cli push adc sub inc dec push bound orl rcr repnz adc sub cmp ja mov iret (bad) repnz push and cmp pop push mov fsubr repz pop and cmp pop push mov (bad) out stc add inc dec push bound orl into ftst out sti push adc push arpl xchg enter cmc decl adc sub hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov xor push pop imul lcall jmp and cmp pop push mov fsubrp cmc add inc push pop push mov fiadd jmp add inc push pop push orl testl cmp pop push orl add and pusha imul cltd movsl mov (bad) rcr jmp and push mov fxam icebp std or sub inc dec pop push movsb scas mov cmc add and cmp pop imul mov cmc add and pop push orl repnz decb adc sub cmp inc dec push pop pop gs jbe lea enter out cli add sbb xor fs jle xchg sahf inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc stos mov int3 (bad) loopne hlt decb adc xor inc dec pop arpl (bad) lea rcr ljmp xor dec push popa insb ja mov ret iret (bad) lock add cmp pop data16 test (bad) rcr jmp pop sub inc inc push pop push js xchg lret xlat in repnz add inc dec push pop data16 xchg mov repz adc and inc dec pop imul mov aam loope icebp std or sbb push bound test (bad) rcr jmp and aaa inc dec pop outsl jp xchg popf cmpsb lods mov int3 fsub lock add ds push popa insb js (bad) lcall jmp and pop push orb lret xlat jecxz testb sbb das cmp jb mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov int in sti pop adc sub jo mov int in std or pop sub inc dec pop fs jge xchg mov fmull push adc sub mov iret (bad) out clc add push pop sub dec push pop data16 test mov icebp sti add aaa inc dec push pop imul scas mov jmp sbb cmp push popa imul xchg popf cmpsl mov (bad) fcomi sti add aaa inc dec push pop push lcall fucomip cmc decb adc xor dec push pop outsl jns lea enter icebp cli add aaa inc dec push popa imul xchg sahf test mov in clc add and xor addr16 xchg ret loopne hlt decb adc xor inc dec pop arpl orl hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov xchg lahf test frstpm(287 lock add aas dec push pop addr16 test ror fucomip repz pop adc and push bound mov iret (bad) out clc add and xor addr16 test ror fucomip repnz push adc and cmp push popa imul xchg popf cmpsl mov (bad) jecxz clc add aas dec push pop push fwait movsl scas mov add testb adc inc push pop outsl jp mov lret aad jmp sbb dec pop arpl orl call sbb xor inc push pop outsb js mov int3 (bad) loope cmc decl adc inc push pop data16 xchg (bad) rcr in cli add sbb cmp push popa insb jbe mov enter repnz push adc hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov xor inc dec pop arpl orl out sti add cmp pop arpl (bad) mov leave aam call sbb xor inc push pop outsb jns mov int3 (bad) loopne hlt decb adc dec pop arpl orl out sti add cmp arpl test ret int loope testb adc add xor dec push pop push lcall in cli add cmp pop outsl jns mov lret (bad) loope cmc decl adc push pop outsb jns mov lret jmp sbb push pop outsl jp (bad) cltd mov xlat loop testb adc inc push pop addr16 xchg (bad) into fsub in testl xor imul mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc (bad) in stc add inc dec push pop imul mov (bad) jecxz clc add inc dec pop outsl jns lea int3 (bad) loopne testl cmp push bound mov shr cmc add adc dec push pop push pushf cmpsb mov (bad) rcr call sbb xor inc dec pop arpl (bad) add ror fucomip repz or sbb push pop push lcall loope cmc decl adc push pop outsl jns lea int3 (bad) loopne cmc decl adc dec push pop imul mov (bad) in clc add dec push pop data16 test ret loope cmc add adc sub cmp jno test ret int loope cmc decb adc xor inc dec pop arpl inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov lea lret jmp sbb cmp bound orl out sti add aaa inc dec push popa imul xchg popf cmpsl mov (bad) rcr in stc add sbb sub pusha push jg xchg sahf test mov out cli add sbb cmp pop outsl jns mov ret int loop testl ss dec pop bound lea int loop testl xor jo test ret jecxz clc add cwtl mov xlat loope hlt decb adc dec push pop imul imul mov out cli add cmp pop fs xchg (bad) into fsub out clc add rorb adc fldl dec (bad) (bad) sbb xor push pop addr16 xchg inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov test ror in cld pop adc xor push pop data16 mov (bad) rcr out decb adc dec push pop data16 mov int loop cli add cmp push pop push mov fsubr hlt decl push and data16 xchg leave add fucomip testl aaa inc dec pop arpl xchg lret xlat jecxz stc add sbb xor ja (bad) fwait cmpsb mov enter testl cmp push pusha insb ja (bad) lcall in clc add sbb sub inc dec push pop pop gs ja mov lret rcr jmp and cmp pop gs test mov in repz add sbb cmp pop gs xchg int3 fsub icebp cld or sub push adcl fsub icebp decb inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov adc sub outsb jns lea fsubrp repnz or push pop data16 xchg into fucomip cmc add and cmp pop push movsb scas mov cmc add dec push pop imul cltd movsb scas mov cmc add or dec pop arpl test (bad) rcr jmp and cmp pusha imul xchg mov fsub in idiv or push sub inc dec pop arpl test leave aam jmp add sbb pop push orl testl cmp push pop push movsl mov enter testb sbb xor dec push bound test lret in testl cmp pop push orb fsubrp hlt decl pop and cmp pop imul mov repz mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov decl adc dec pop data16 mov int in cld or sub inc dec pop gs mov fsub out stc add aas dec push pusha insb ja mov rcr jmp add sbb pusha add (bad) lea int3 rcr loope testl dec push pop imul xchg fwait mov int3 xlat loope clc add sbb inc push pop addr16 mov lret out sti add cmp push arpl test lret (bad) loop clc add sbb pop addr16 xchg enter testb push and xor push orb into (bad) lock pop bndldx xor inc inc dec push pop push (bad) mov ret in cli push adc sbb push pop push jp mov aam inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc loop stc add xor popa insl jbe lea mov repnz adc push pop push mov (bad) lock add cmp jae (bad) mov popf test ror loope clc add sbb pop push orb rcr call and push pushf cmpsl mov (bad) rcr jmp and arpl test leave aad in clc add sbb xor dec push popa insb js (bad) lcall jmp add sbb pop push orl add sbb sub aas dec push pop pop imul xchg lahf test ror xlat loope clc add cmp pop push xchg pushf mov (bad) icebp clc incb adc dec push arpl xchg int3 (bad) hlt add inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov and cmp push bound xchg int out std or sub dec push popa insb jbe mov fucomip repz pop and cmp pop addr16 xchg (bad) rcr out cld or sub gs mov fxam icebp decb adc dec pop data16 mov int3 xlat jecxz stc add inc dec pop data16 xchg lret xlat jecxz cli add inc dec push arpl test enter icebp cld pop adc sub inc dec push bound test leave aam jmp add inc push pop imul (bad) rcr jmp and cmp addr16 mov rcr call and cmp pop imul lcall call and cmp pop addr16 mov iret (bad) repnz hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc or dec pop data16 mov int in sti push adc push bound test lret in clc add add sub inc dec pop outsl jnp xchg popf test mov stc add ds push popa insl js (bad) fwait cmpsl mov lret in stc add sbb xor dec push pusha push jge xchg popf test mov out clc incl and push pop push jg lea ror loop cli pop push adc and das cmp pop data16 mov (bad) rcr in cli add sbb sub inc dec pop fs xchg into ftst out stc pop adc xor push pop data16 xchg (bad) rcr jmp sbb push pop imul ret iret fxam icebp cld add sbb das xor pop gs xchg mov testb mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov or sbb cmp outsl jne test lret loopne clc add cmp inc push pop add jg xchg fwait mov rcr in cli add inc dec pop arpl test leave aam ljmp cmp pop insw je mov rcr out std or sbb push popa insb ja mov rcr jmp add inc push pop addr16 xchg enter repz push and inc dec push bound test lret out cli add aas dec push bound test lret in stc add aas dec push bound orl aad in testl cmp push pop fs ja mov iret (bad) fsub lock push adc xor ds push popa push orl in cli add inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov pop and cmp pop gs mov lret out cli pop adc sub cmp pop imul fwait cmpsl mov int3 xlat jecxz std or push sub insl ja mov fsubrp repz or sub inc dec pop gs xchg int3 ftst out stc add sbb xor dec push pusha imul pushf cmpsl mov lret in clc add sbb xor dec push pusha je mov mov insb js (bad) cwtl mov aam call sbb sub ret int3 (bad) loopne repz pop adc and push pop imul lods mov lret out sti add ss dec push pop data16 jnp nop lcall fucomip repnz push nopl sub pop add jg xchg pushf cmpsb mov ret int loop testb adc mov cmpsb pop cmpsl mov lret (bad) loopne testb adc dec inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov bound test lret out jo stos shl out stc add sbb adc sub inc dec pop gs xchg gs lods (bad) xor dec test out add fs ja mov mov (bad) in repnz incl es dec push pop pusha insw jae addb lods mov rol rcr (bad) in repz incl push sbb das cmp dec push pop bound jne orl scas mov ret (bad) fsub jmp or adc xor inc inc dec push pop popa insl je addb lods mov rolb into aam loope in hlt cli add push sbb aaa inc dec pop arpl test mov leave rcr loopne in repz add or sbb es cmp inc dec push pop pusha insw jae addb lods mov rol rcr (bad) in repnz mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov incl or sbb and inc dec push pop pop imul xchg mov mov (bad) in repz incl or sbb es cmp inc dec push pop pop data16 jb jg mov mov lret aad out decb adc sub ss dec push pop imul xchg mov (bad) loope icebp cld or sbb xor jno test ret fucomp repz add or sbb es cmp inc dec push pop pop data16 jb jg mov mov mov fsubp jmp clc incb and add push pop pusha insl je addb lods mov rol rcr add out hlt cli add push adc and cmp dec push pop bound jne (bad) mov scas mov rol aam loope in hlt cli add or sub cmp inc dec push pop pusha push hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov jnp xchg scas mov rol aam loopne in repz add or sub cmp inc dec push pop pop imul test test leave iret (bad) fsub jmp or adc xor push pop bound jne (bad) mov scas mov rol aad loope out hlt cli add or sub dec push pop pusha insw jae jg mov mov mov (bad) jmp clc incb and inc dec push pop pusha outsb je addl mov fnclex call or adc xor add dec push pop bound jne (bad) mov scas mov ret aad loop out cmc sti add push adc and sub dec push pop pop data16 jae jg mov mov mov fsubp in repnz incb mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov or sbb and inc dec push push pop arpl jbe orl scas mov ror aam loope out hlt sti add or cs inc dec dec push pop popa outsb je addl rol rcr loopne in repz add or sbb and inc dec push pop pop gs jb jle mov mov mov fsubp ljmp pop sbb cmp pop bound jne (bad) mov scas mov ret aad loop out add std add adc sbb cmp dec push push pop bound jne (bad) mov xchg xchg popf movsb stos mov mov fucom jmp idiv add adc sbb cmp pop arpl jbe orl scas mov ror aam loope in hlt cli add or cs inc inc dec push pop pusha insw jae addb inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc cltd lahf cmpsb lods mov ret jecxz stc add and xor imul mov lret (bad) in repnz incl sub inc dec pop arpl jbe orl scas mov ror aam loope in repz add dec push pop imul mov testb push and outsb jns lea lret aad jmp sbb sub xor push pop popa push xchg add int fnop out stc add pop and inc dec pop pusha addr16 jl xchg fwait cmpsl mov (bad) rcr jmp or push sbb sub xor push pop popa push xchg lods mov mov (bad) jmp clc incb adc push and xor inc dec push cmpsb in dec jge icebp and jg xchg pushf test ror in cld pop adc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov sub cmp jne mov int in sti push adc gs xchg ror fucomip repnz add xor outsl jns lea (bad) rcr jecxz clc add jle lret repz cmp push pop imul scas mov ljmp xor inc dec push popa imul xchg sahf test mov in testl xor push pop outsb add lea leave rcr out cli add sbb sub inc dec push pop add jge xchg pushf cmpsb mov (bad) into fsub in cmc decl adc sub cmp pop arpl orb (bad) rcr in stc add aas dec push pop addr16 test ret int loopne hlt decb adc xor inc dec push popa push jle xchg fwait movsl mov rcr in stc add aas dec push pop addr16 mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov jp (bad) cltd movsb scas mov jmp decb adc dec pop bound mov iret (bad) in testl xor inc push pop arpl (bad) lea leave rcr call sbb cmp push pusha push jle xchg pushf cmpsb mov (bad) into (bad) in testl xor jo test ror fucomip repz pop adc and push popa imul orb (bad) rcr in stc add sbb sub add jle xchg pushf movsl scas mov jmp decl adc dec pop bound mov enter lock add aaa inc dec push popa imul xchg popf cmpsl mov (bad) jecxz testl xor outsl jns mov lret ljmp xor inc dec pop arpl (bad) mov enter inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc rcr out stc add pop and ss dec push pop push popf test mov lock add sbb sub arpl orl repnz push adc and pop bound (bad) mov int3 (bad) loopne testb push and xor imul xchg sahf test fsub lock add sbb sub pusha push jle add leave rcr call sbb xor inc push pop data16 test nop lcall loop clc add and xor addr16 xchg ret into fsub in testb adc dec push pop addr16 xchg ret int3 (bad) loopne testb push and xor insb jbe mov enter icebp cld push adc and push pusha imul xchg mov aad jmp push sub cmp jo mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc jp (bad) cltd mov (bad) loopne hlt decb adc xor push pop data16 test ret int loop testb adc sub cmp jno test ret into fsub in testb adc dec push pop addr16 xchg (bad) in stc add sbb sub pusha push jle xchg popf test mov jmp sbb push pop outsl jnp (bad) cltd mov into fsub in testl cmp pop arpl (bad) lea int3 xlat loop clc add sbb xor inc push pop outsl jns mov frstpm(287 lock add sbb sub pop imul mov repz pop adc xor inc dec pop arpl (bad) mov lret call sbb push pop outsl jns lea lret jmp sbb xor hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc cmp pop arpl (bad) lea int3 xlat loope testb adc sub dec push pop data16 test ret loope testb adc sub cmp outsl js lea lret call sbb push popa imul xchg sahf test frstpm(287 out stc add sbb and pusha imul mov (bad) rcr out sti add das cmp arpl orl out sti add sbb cmp push popa imul xchg lahf test fucom icebp sti push adc and push popa insb jbe mov enter icebp cld push adc xor inc push pop data16 test (bad) jecxz clc add aas dec push pop addr16 xchg (bad) iret ftst out clc add inc dec push pusha push orb lret inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov loopne cmc decl adc sub dec push pop push jg xchg sahf test fsub icebp sti add cmp pop arpl (bad) mov lret jmp sbb push pop data16 test ret loopne cmc decl adc sub ds push pop add jge xchg fwait movsl mov (bad) in stc add sbb sub inc dec push add jne mov lret jmp add adc sub dec push pop push popf cmpsl mov (bad) rcr out cli add sbb sub arpl orl hlt incb adc xor inc dec pop arpl (bad) lea int3 xlat loope testb adc dec push pop data16 test ret loope cmc add adc inc push pop data16 test ret into (bad) out clc add aas dec push pop addr16 inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov nop lcall loop testl xor dec push pop addr16 xchg ret iret (bad) out clc add and ss dec push pop push jle xchg popf test mov repnz or push sub imul cwtl mov rcr out cld push adc and cmp push popa insb (bad) lea (bad) rcr in stc add sbb sub popa imul lcall loop testb adc dec push pop data16 test ret loope testb push and xor imul mov (bad) rcr in stc add sbb sub pusha push jle xchg popf cmpsl mov (bad) rcr in stc add sbb sub inc dec push popa imul xchg popf test mov out stc add sbb sub inc dec push pop imul mov (bad) into (bad) in testl xor inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc dec push pop push fwait movsl scas mov in testl xor dec push pop addr16 test ret loope cmc decl adc push pop outsl jns lea lret aad jmp adc dec push pop data16 xchg ret int loop add add sbb sub popa imul xchg sahf test mov lock push and inc push jg leave rcr jmp imul mov lret (bad) fucomip testb sbb das cmp pop xchg mov or outsl jns (bad) pushf test mov stc add sbb xor push pop addr16 xchg int in sti push adc sbb sub lcall orb fucomp hlt decl adc dec pop outsl jp (bad) lcall jmp push pop gs test hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov lahf test ror loopne cmc decl adc dec push pop imul mov (bad) iret (bad) mov repnz or sub inc dec pop arpl mov (bad) icebp std or sub inc dec pop outsl jnp xchg sahf stos mov int jecxz sti push adc push popa insb js mov lods out push add decl pop and cmp push pop insb jbe mov iret frstpm(287 out std pop adc xor push pop imul xchg lahf stos mov int in std push adc cmp arpl test lret aad in testl cmp pop addr16 lea int loopne testl aas dec push popa imul lcall jmp add sbb xor inc push pop data16 xchg leave aam call and cmp pop outsl js (bad) pushf cmpsb mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov repz pop adc push pop insb jbe mov shl ljmp cmp jae mov enter icebp cld push nopl xor jae mov lret lock push adc and pop imul mov lret xlat loope cli add sbb xor push pop imul mov in stc add sbb cmp pop addr16 xchg enter clc add and pop gs mov lret aad ljmp cmp pop gs test (bad) rcr jmp and cmp pop addr16 mov iret frstpm(287 icebp sti add cmp pop push (bad) mov pushf (bad) lock add jg xchg mov xlat loope cmc decl adc dec push pop insb fwait inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc leave jmp bound nop fwait movsl mov lret jmp add dec push pop imul ror loop clc add jns mov (bad) (bad) cmc sub shr clc add sbb cmp pop imul mov repnz or pop sub inc dec pop bound test add sbb sub inc dec push popa outsb js lea into fsub out testl dec push pop push sahf (bad) icebp pop aas dec jb mov into fxam lock push adc xor dec push popa insl jns nop fwait cmpsl mov lret xlat loop stc add sbb xor dec push popa insl js (bad) lcall in testl cmp push pop push jns mov mov icebp sti add xor push pop imul scas mov jmp adc sub dec push pop pop outsl inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov jl xchg pushf movsb mov lret in clc add sbb xor dec push arpl mov fsubr hlt add and ds push pusha imul xchg mov (bad) testl aas dec push pusha insb ja (bad) cltd movsb mov (bad) rcr call and cmp push mov (bad) icebp cld pop adc sub jb mov lret (bad) loopne cmc decl push and outsb jns xchg fwait cmpsb mov (bad) rcr out decb adc dec pop addr16 mov into (bad) out stc add sbb cmp push arpl xchg leave aam jmp add dec push pop push orb fucomip testl cmp push pop push orl repnz adc sub inc dec pop data16 mov iret (bad) repz push and ss dec pop inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov gs mov int3 fsub out cli push adc pop fs xchg int3 xlat loop cli push adc xor dec push bound xchg lret in stc add aas dec push bound test int in sti push adc push bound test lret xlat loop stc add sbb xor dec push popa insb js (bad) fwait cmpsl mov (bad) iret (bad) in inc scas ficompl and pop push out sti add pop and xor data16 test (bad) into fmuls cmp (bad) testb adc sub cmp jo test (bad) into fsub in cmc decl adc dec pop arpl orb (bad) loop testb adc daa xor inc dec pop bound mov (bad) rcr jecxz testl xor outsb js mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov rcr in clc add pop sub cmp outsl jns lea lret jmp sbb xor inc dec push popa imul xchg popf cmpsl mov (bad) jecxz testl xor push pop outsl jns lea leave rcr out cli add pop and xor data16 test mov repnz push adc and push bound mov (bad) rcr in stc add and xor dec push pop data16 test ror fsubrp repnz add aaa inc dec push pop push jle xchg pushf cmpsb mov (bad) into fsub in testb adc dec pop arpl mov rcr in cli add sbb sub pop imul mov (bad) rcr in cli add sbb cmp pop arpl (bad) mov iret (bad) in clc add mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov and xor push scas mov in testl xor push sahf test mov out stc add inc dec push pop push pushf cmpsb mov (bad) into (bad) in testl xor dec push pop addr16 xchg (bad) into fsub jmp add adc daa xor push pop data16 xchg ret int loope cmc decl adc dec pop outsb js lea leave rcr call sbb pop bound mov leave rcr out sti add cmp push bound mov rcr in stc add aas dec push pop addr16 xchg ret loopne cmc decl adc push pop outsl jp mov lret call sbb xor inc dec pop arpl orl mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov ror fsubrp repnz pop adc and push popa imul xchg sahf test mov out stc add sbb cmp arpl test ret int loop testb pop and ss dec push pusha push jle xchg popf cmpsl mov (bad) rcr in cli add cmp pop outsl jp (bad) fwait movsl mov (bad) in stc add sbb sub bound mov lret call sbb pop bound (bad) cltd mov fsub in testl xor jo test ret into fsub jmp decl adc sub cmp push pop outsl jns mov lret aad jmp sbb xor inc dec pop arpl (bad) mov int3 xlat loop clc add sbb cmp bound mov lret aad ljmp xor inc dec pop arpl inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc (bad) mov lret aad jmp sbb xor push pop outsl jns mov int3 (bad) loopne cmc decl adc sub cmp jb xchg (bad) jecxz clc add aas dec push pop push pushf cmpsb mov (bad) into fsub in testb adc sub cmp jb xchg (bad) into (bad) in testl xor dec push pop push pushf cmpsb mov (bad) rcr out sti add cmp push popa insb ja mov int3 (bad) loope testl aaa inc dec push pop imul ror fucomip repz adc gs test ror fucomip repz pop adc and pop data16 xchg (bad) in testl xor dec push pop data16 test ret into fsub in clc add inc dec inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc push pop imul mov (bad) jecxz clc add and xor push jle xchg popf cmpsl mov (bad) rcr in clc add and xor push lcall jecxz clc add dec push pop data16 test ret loope cmc decl adc sub cmp push pop outsl jns lea lret jmp sbb push bound mov enter icebp sti push adc and cmp push bound mov rcr call sbb xor inc dec pop bound orl out sti add sbb sub pusha push jg xchg sahf test mov testb adc inc push pop data16 test ret loope cmc add adc sub cmp outsl jns mov int3 fsub in inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov testl aaa inc dec push popa imul xchg lahf test fucom repnz pop adc xor inc push pop outsl jns mov iret (bad) out stc add inc dec push pusha push jg xchg sahf test mov lock add sbb sub popa imul xchg popf cmpsl mov (bad) rcr in cli add sbb sub pusha imul xchg sahf test mov out stc add sbb sub inc dec pop outsl jp xchg pushf cmpsb mov vpand out cli add sbb cmp push popa imul xchg lahf stos mov lret jmp sbb xor inc push pop gs xchg ret into ftst out clc add and xor push pushf cmpsb mov (bad) into fsub in testl xor dec push pop push fwait movsl mov vpsubsb adc pop push fwait movsl scas mov ljmp mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov or sbb das cmp fsubr cmc add and sub inc dec push arpl addl in icebp clc add sbb cmp dec push pop popa insb js nop xchg mov fucom repnz pop adc sub inc push pop imul add rcr call and cmp jne mov int jecxz (bad) or daa xor push pop gs mov into ftst out stc push adc push bound xchg lret (bad) loope stc add aas dec push arpl xchg lret xlat jecxz clc add dec push pop imul mov cmc add push and addr16 mov rcr out std pop adc sub cmp outsl jp xchg pushf cmpsl mov leave aam jmp add and cmp pop push mov (bad) repnz inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov and cmp pop imul mov repz adc dec pop addr16 mov rcr jmp and cmp pop push mov fsub repz push and das cmp pop imul (bad) rcr ljmp cmp pop push mov fsub repnz adc push pop push mov fucomp hlt add and cmp data16 mov iret (bad) repnz or sub inc push pop addr16 mov rcr out cld push adc and push pop addr16 xchg lods mov mov testb adc and xor inc dec pop data16 mov mov (bad) rcr out decb adc dec push pop data16 xchg ret int out cli push adc xor dec push arpl mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov js mov iret (bad) out stc add sbb xor inc push pop addr16 xchg (bad) rcr out std or sub inc dec pop fs mov ret aad loopne testl xor addr16 xchg mov hlt cli add push and inc dec push pop fs xchg mov out clc add sbb and push pusha push orl testb sbb cmp pop addr16 mov rcr in hlt add and cmp je mov rcr out std or pop sub outsl jp xchg sahf stos mov int jecxz testl aaa inc dec pop outsl jnp nop fwait cmpsb mov (bad) rcr call and cmp addr16 mov rcr call and inc dec pop addr16 mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc lods mov iret (bad) repnz or dec pop data16 mov (bad) int3 rcr (bad) lock or inc dec push popa insl ja lea mov cmc incl sub insw jae orb lret fsub out cld pop adc xor dec pop gs mov aam out sti pop adc sub inc push pop push orl out cli add xor dec push pop push mov ftst out cli push adc xor dec pop arpl xchg int in sti pop adc sub inc dec pop gs mov iret (bad) repz adc sub ds push arpl (bad) mov iret (bad) repnz or push sub outsl jp xchg sahf test in cli add sbb pop bound (bad) lcall jmp and hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cmp pop push mov fsubr repz and cmp pop push orl testb sbb cmp pop push mov fucomip testb sbb cmp pop imul mov hlt add pop and cmp pop imul (bad) rcr jmp and addr16 mov iret (bad) repnz adc dec pop data16 mov (bad) repnz adc dec pop gs mov int in cld or pop sub inc dec pop gs xchg int loope testb adc aas dec push popa push mov mov icebp idiv add adc dec push popa insb ja test mov lret (bad) loope clc add sbb sub jo test mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cwtl mov fsub lock add inc dec push pusha imul cltd mov rcr in cli push adc xor inc push pop addr16 mov enter testb sbb cmp pop push pushf movsl lods mov mov hlt std or and push popa insb js mov (bad) rcr in repnz or push sub arpl orl mov cmc add adc push xor jae mov rcr jmp and gs test leave aad ljmp xor dec push pusha imul cwtl movsb mov (bad) rcr out decl push and addr16 mov into (bad) out stc add cmp pop data16 mov lret in testl cmp jne mov hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov repnz adc sub inc dec pop gs add ret rcr out decl push and inc push pop addr16 mov (bad) int fnop out clc add sbb cmp push mov iret (bad) out sti add adc sbb push pop imul test (bad) rcr jmp and inc push pop imul mov std or push pop imul cltd movsb scas mov repnz add dec push popa insb js nop fwait test mov cmc add and cmp pop push mov fsubrp cmc add inc push pop imul mov cmc add and inc dec pop outsl jnp (bad) cltd mov (bad) icebp cld or push sub jo xchg rcr out std or sbb hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov dec push pop data16 test xchg popf test loopne testb sbb pop imul cltd movsl mov enter testl cmp push pusha insb ja mov rcr jmp jae mov (bad) rcr in cli add sbb daa cs inc inc dec push pop pusha insw jae jg mov mov mov fsubp jmp idiv add adc sbb ds dec push push pop arpl jbe orl scas mov ret aad loop out cmc sti add push adc xor inc inc dec push pop popa push mov lods mov rol rcr loopne in repz incl or sbb es cmp inc dec push pop pop imul test stos mov mov fsubp ljmp push sbb cmp dec push push pop arpl jbe (bad) mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov test leave iret (bad) fsub jmp or push sbb sub xor push pop popa outsb je addl rol aad loope out cmc sti push adc and cmp push pop imul mov (bad) out sti add sbb sub aaa cmp pop arpl jl xchg sahf test int fnop out hlt cli add or sub dec push pop pusha imul mov (bad) rcr jmp and push mov fsub out stc add inc dec push pop imul popf movsb stos mov mov fucom ljmp pop sbb cmp pop arpl jbe mov enter out cmc decl pop pop sub push popf test (bad) add stc add cmp pop inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov outsl ja mov int fsubrp hlt add adc sub inc inc dec push pop pusha insl jae addb lods mov mov loopne in repz incl and inc dec push push pop fs ja orl mov mov loop stc add push adc and cs push pop popa insl je addb lods mov rol rcr loopne in repz incl or sbb and inc dec push pop pop imul test stos mov enter icebp sti add ds dec push bound jp xchg scas mov rol aam loope out cmc sti add push adc xor inc dec dec push pop popa outsb je addl rol rcr loopne in repz add or sub ss dec dec push pop bound jbe orl inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov ret leave rcl fsub jmp or push sbb sub xor fs orb ret into (bad) in testl ss dec push bound jl xchg sahf movsl mov (bad) rcr out cli push push sbb cmp push pop gs xchg lods mov mov (bad) in repnz incl and inc dec push push pop imul test stos mov mov fsubp jmp idiv add adc sbb cmp pop arpl ja test mov fsub call or push sbb sub ss pop arpl jbe (bad) mov scas mov ror aad loop icebp idiv add adc sbb ds dec push pop pop imul jns test mov mov fsubp ljmp push sbb sub inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov ss dec dec push pop bound jne (bad) mov scas mov ret xlat fucom ljmp pop sbb cmp pop arpl jbe (bad) mov scas mov rol aad loope out hlt cli add or sub dec push pop pop data16 jae jg mov mov mov loopne out hlt sti add movhps sub xor push pop bound jne (bad) mov scas mov ror aam loop out cmc sti add push adc xor inc inc dec push pop popa outsb je addl ror aad loope out hlt sti add push adc and sub dec push pop pop gs jb jg mov mov mov fnop out hlt cli add or sub dec push pop pop gs jb jg mov mov mov hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc rcr loopne in repz add or sub dec push pop pusha data16 jae addb lods mov mov loopne in repnz incl and inc dec push pop pop imul test lods mov rol aam loope out cmc sti add adc push and xor ds dec push push pop fs ja test scas mov rol aad loop out cmc sti add push adc xor push pop popa push xchg scas mov rol aam loope out cmc sti add movhps sub xor push pop popa push xchg mov mov fucom jmp clc incb adc push and xor cmp inc dec push pop pop fs ja test lods mov lock add adc dec push bound orl in inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov icebp clc incb adc push daa xor dec push popa push mov scas mov ror aad loope out cmc sti add unpckhps sub xor push pop popa push xchg popf test mov out hlt decb adc aaa inc dec push pop arpl ja test test enter loope out hlt cli add or sub cmp inc dec push pop pop imul test stos mov mov fsub jmp or adc dec push pop fs ja orl scas mov ret aad loop out hlt sti add push adc and sub dec push pop pop data16 jb add lahf movsl stos mov mov fucom ljmp push sbb sub xor push pop popa push xchg lods mov rol rcr loopne in repz inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov push or sbb and inc dec push push pop fs ja test test leave iret aad loop out cmc sti add push adc and cs inc inc dec push pop pusha data16 jae jg mov mov mov fucom ljmp push sbb sub xor push pop popa insl je orl aad loop out cmc cld add unpckhps sub xor push pop popa outsb je addl rol rcr (bad) in repnz incl and inc dec push pop pop imul test stos mov mov xlat fucom ljmp push sbb sub ss dec dec push pop bound jne mov ret aad loope out cmc sti add push adc and sub dec push pop pusha insw jae addb lods inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov (bad) in repnz incl and xor ds dec push push pop arpl jbe orl scas mov ret leave rcl fsub jmp or push sbb sub xor push pop bound jne (bad) mov scas mov rol aam loope in hlt cli add or cmp dec push pop arpl jbe orl mov mov fucom jmp or push sbb sub ss dec dec push pop bound jne (bad) mov scas mov ret aad loop out cmc sti add unpckhps and cs add bound jne (bad) mov scas mov ror aad loop out cmc cld add unpckhps and cs push pop popa push xchg scas mov rol aam loopne in repz add or cs inc inc dec push inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc pop popa outsb je addl rol rcr loopne in repz add or sbb es cmp inc dec push pop pusha data16 jae jg mov mov mov (bad) jmp clc incb and xor ds dec push push pop fs ja test stos mov mov fsubp ljmp pop sbb cmp pop arpl jbe orl scas mov ret (bad) fsub jmp or push sbb sub xor push pop bound jne (bad) mov add iret aad loop out cmc sti add movhps sub xor push pop bound jne (bad) mov scas mov rol aam loope in hlt cli add or sub dec push pop pusha insl jae addb lods mov rol rcr loopne in inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc repz incl or sbb es cmp inc dec push pop pop gs jb orl rcr jmp sbb daa sub pop push std pop adc and imul mov lret aad jmp add and cmp pop outsb jns (bad) cltd movsl lods mov rol rcr loopne in repz incl or sbb and inc dec push push pop fs ja test stos mov mov fucom jmp or adc xor push pop popa insl je addb cmpsl scas mov rol aam loope in repz add or sbb es cmp inc dec push pop pop imul test stos mov mov in icebp idiv add adc push and xor ds dec push push pop arpl ja orl scas mov ret leave rcl fsub jmp or push inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov and das xor push pop bound jne (bad) mov scas mov ror aam loope out hlt cli add or sub dec push pop pusha data16 jae jg mov mov mov (bad) in repnz incl and dec pop gs test stos mov mov fsubp ljmp pop sbb cmp pop bound jne orl rol rcr (bad) in repnz incl pop es cmp inc dec push pop pop imul test stos mov mov fsub call pop push adc and sub pop push jl mov scas mov ret aad loope out hlt cli add or sub cmp inc dec push pop pop imul test stos mov mov fldl hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov jmp or adc xor inc inc dec push pop pusha insw jae addb stos mov mov fucom ljmp push sbb cmp dec dec push pop popa push xchg lods mov mov (bad) in repnz incb and inc dec push pop pop fs ja orl mov mov fsub call or adc and sub dec push pop pop data16 jp xchg lods mov mov fsubp jmp clc incb and xor cmp pop arpl jne (bad) mov scas mov ror aam loope in repz add or sub cmp inc dec push pop pop imul test stos mov mov fsub jmp or adc xor push pop pusha inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc insl jae addb lods mov mov fsubp ljmp push sbb cmp dec dec push pop bound jne orl rol rcr (bad) in repnz incl and xor cmp pop fs jbe orl scas mov ret aam loope in hlt cli add or sub cmp inc dec push pop pop imul test stos add rcl fucom ljmp push sbb sub xor push pop popa insl je addb lods mov mov (bad) in repnz incb and xor cmp pop arpl jne (bad) mov scas mov rol rcr loopne in repz incl or sbb es cmp inc dec push pop pop fs ja test test fsub out cli add mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov sbb xor inc dec push pop bound jns nop fwait cmpsl mov mov fsubp jmp clc incb adc push and xor cmp pop arpl ja lea (bad) int3 fsub out cmc cld pop adc and xor inc push push pop fs ja orl mov mov fsub jmp or adc xor push pop bound jne (bad) mov test enter lock or adc xor push pop popa insl je addb lods mov rol rcr loopne in repnz incl and inc dec push push pop fs jbe orl scas mov ret aad loope out cmc sti add push adc and sub dec push pop pusha data16 jb jg mov mov mov fucom ljmp push sbb sub inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cmp dec dec push pop bound jne orl rol rcr (bad) in repnz incl and xor cmp pop arpl ja orl scas mov ret aad loope cmc add adc push and xor cmp pop imul test stos mov mov fucom ljmp add push and xor cmp pop arpl jbe orl scas mov ret aam loope out cmc sti add push adc and sub dec push pop pusha data16 jae jg mov mov mov loope testb pop sbb cmp pop fs ja test stos mov mov fsub jmp or adc xor push pop bound jne orl ror aam loope inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov out hlt cli add or sub dec push pop pusha data16 jae addb lods mov rol rcr loopne in hlt cli add or sub dec push arpl js test stos mov mov fsub jmp or push sbb sub xor push pop popa push mov (bad) xchg pushf mov rol aam loope in repz add or sbb es cmp inc dec push pop pop imul test stos mov mov fsub jmp or adc xor inc inc dec push pop pusha data16 jae jg mov mov mov fsubp jmp idiv and int3 loope cmc decl adc aam in clc add sbb xor dec push arpl mov rcr call and cmp pop imul mov hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov loopne clc add sbb xor dec push popa insl js nop pushf test out decl and cmp outsb jp xchg sahf stos mov into (bad) repnz adc push pop imul add iret fucomi testb sbb ss dec pop push cmpsb mov int in decl sbb pop insb jns xchg mov loop cli push adc sub inc push pop addr16 mov (bad) cmc add sbb ss push pop imul mov out stc add sbb cmp push popa imul xchg lahf test fucomip hlt decb adc sub cmp push pop data16 test ret into fsub in testl xor dec push pop addr16 test ret int loop clc add inc dec push pop push fwait movsl mov (bad) into fsub in clc add inc dec push pusha imul xchg mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov stos mov lret in testl ss dec push pusha imul mov lret ljmp xor inc push pop outsb js mov ret loopne testb push and xor dec push pop addr16 test ret loope cmc add adc sub cmp jo test ret loope testl xor dec push pop addr16 xchg (bad) into fsub in testl xor dec push pop push lcall in stc add mov cmc decl adc push pop outsb jns lea lret call sbb xor inc dec pop arpl orl aad ljmp xor inc dec pop outsb js mov leave rcr out sti push adc sub cmp push pop gs test ret int inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc loope cmc decl adc xor inc add data16 mov (bad) rcr out std or pop sub dec push pop addr16 mov cwtl mov ftst out clc add and test into fsub in clc add and ss dec push pop imul scas mov jmp sbb push popa push jle xchg popf test mov in testb adc daa xor inc dec pop arpl (bad) mov (bad) rcr in clc add adc inc push pop fs ja mov (bad) rcr jecxz testl xor push pop outsb js mov (bad) rcr in stc add aas dec push pop addr16 test ror fucomip repnz push adc and push pusha push jle xchg fwait movsl scas mov jmp decl adc xor inc dec pop bound mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc test mov (bad) rcr in stc add ds push pop data16 test ret add in idiv or sub cmp push pop data16 test ror loopne hlt decb adc xor inc dec pop outsl jns lea lret jmp sbb cmp push popa imul xchg sahf test mov out stc add inc dec push popa imul xchg lahf test fsub icebp sti add aaa inc dec push pusha push jle xchg popf cmpsl mov (bad) iret (bad) out stc add sbb sub pop imul mov out stc add inc dec push pop imul mov out clc add and xor dec push pop data16 test ret loopne cmc add inc dec push bound mov enter ljmp mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov xor jp mov int loopne cmc incl or inc push pop outsw jnp (bad) cltd mov (bad) fucomip repz adc xor inc dec pop bound mov rcr out sti add cmp push popa insb jbe mov (bad) rcr out cli add sbb sub inc dec push pop imul mov (bad) jecxz testl xor push fwait movsl scas mov jmp add adc sub cmp jo test (bad) into fsub in testl xor dec push pop push lahf test mov icebp cld push adc xor inc dec pop outsb jns mov into fsub in testb adc dec pop arpl orl call and cmp pop outsl jns mov lret inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc (bad) loopne hlt decb aas dec add insb jbe mov rcr in stc add sbb sub inc dec push pop imul mov (bad) iret (bad) out stc add inc dec push pusha imul xchg popf cmpsl mov (bad) jecxz testl ss dec push pusha imul mov out cli add sbb sub inc dec push pop push fwait cmpsb mov (bad) jecxz clc add and xor imul mov (bad) in stc add sbb sub inc dec push popa imul popf cmpsl mov (bad) rcr in stc add inc dec push pop imul mov (bad) iret (bad) out stc add and xor push fwait movsl scas mov in testl xor add pop imul mov (bad) into ftst out clc add aas dec push pop inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc push xchg sahf test fucomip repz or sbb push pop data16 test ret loop testl xor push lahf stos mov lret jmp push sub cmp jae mov (bad) rcr out cld push adc and cmp push popa imul xchg sahf test mov icebp sti push adc and cmp push bound mov leave aam call sbb xor push pop outsl jp (bad) cltd movsb scas mov in clc add and xor addr16 xchg ret int loope testl cmp addr16 mov enter icebp sti push adc and pop arpl (bad) mov ret loopne cmc decl adc dec push pop imul mov (bad) fsub icebp sti add hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov and cmp pop bound (bad) lea lret aad ljmp xor dec push pop addr16 xchg ret into fsub in clc add and xor imul mov (bad) in clc add inc dec push pusha push jg xchg sahf test mov lock push adc and cmp pop arpl (bad) mov lret aad ljmp xor jno xchg enter repnz or pop sub inc dec push pop push jle xchg popf cmpsl mov rcr call pop sub dec push pusha push jle xchg sahf stos mov lret in testl xor push lcall jecxz testl sub bound mov lret call sbb push pop outsl jns mov lret aad ljmp inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cmc add adc sub cmp jo test ret loopne hlt decb adc xor inc dec pop arpl mov leave rcr out cld push adc and cmp pop bound mov leave rcr call sbb xor inc dec pop arpl (bad) mov leave aam call sbb pop outsb js lea lret call sbb xor inc dec pop arpl (bad) mov leave rcr out cld push adc and pop arpl (bad) mov lret call sbb xor inc push pop data16 xchg (bad) rcr in cli add cmp inc push pop addr16 xchg (bad) iret ftst out clc add inc dec push bound add (bad) iret ftst out cli add sbb pop arpl xchg inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cmpsb mov (bad) rcr in cli add sbb cmp push pusha push jle xchg popf test mov lock add cmp push bound mov lret aad jmp sbb push pop outsl jns mov int3 xlat loope testb adc dec push pop data16 xchg enter repz adc push pop data16 test (bad) jecxz clc add inc dec push popa imul xchg lahf stos mov leave rcr jmp sbb dec pop outsl jp mov int3 (bad) loopne cmc decl adc sub dec push pop push popf add fsubrp repnz pop adc and pop outsl jns mov int3 (bad) add in clc add and xor push popf test mov out cli add sbb cmp pop inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov bound mov enter icebp sti add cmp pop bound lea int loop clc add cmp pop imul mov leave rcr call sbb xor inc push pop data16 xchg lahf stos mov lret jmp push sub cmp push pop outsl jl xchg pushf cmpsl mov enter lock add cmp push pusha push jle xchg popf cmpsl mov (bad) rcr out cld push adc and cmp push popa insb jbe mov leave rcr out sti add cmp pop arpl (bad) lea lret jmp decl add and inc dec push pop imul mov (bad) in clc add aas add pop imul mov (bad) rcr out sti add cmp push popa imul xchg sahf test mov out cli add sbb inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc sub pop push jle xchg popf cmpsl mov (bad) in stc add sbb sub inc dec push pop imul mov (bad) jecxz clc add and xor dec push pop push popf cmpsl mov (bad) in clc add inc dec push popa imul xchg lahf stos mov enter repnz pop adc xor inc dec pop outsl jp (bad) cltd mov (bad) loop testb push and xor push jg xchg popf cmpsl mov (bad) rcr out cld push adc and pop outsl jns mov iret ftst lock add cmp pop outsb js mov lret jmp sbb push pop push xchg sahf test mov lock push adc and cmp push popa imul xchg sahf test fucom icebp cld push adc xor inc push pop outsb js mov lret aad mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov jmp sbb push pop data16 mov leave rcr call sbb xor inc push pop data16 xchg (bad) fsub out mov fwait ret out sti push adc xor jne mov into ftst out sti pop adc or cmp aam bound (bad) rcr jmp push sub ds push pop push pushf cmpsb mov (bad) rcr in cli add (bad) rcr call and add sbb xor inc push pop push popf test mov repnz pop adc xor inc push pop data16 xchg (bad) in cli add sbb cmp pop gs xchg inc dec push arpl xchg int jecxz stc add mov cmc add adc dec push popa imul xchg mov fsub in testl inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc ss dec push pusha push orb lret ljmp xor imul xchg mov xlat loope testl ss dec push popa insb ja lea int loop stc scas mov rcr call and xchg mov (bad) out cli add cmp pop addr16 mov push jle cwtl cmp js mov rcr out cld pop adc sub jecxz and mov xchg leave sub int loope testb adc inc push pop data16 test ret iret (bad) out clc add cmpsl add insb ja mov add cmp push pop data16 test stos mov mov fsubp in repnz incl and inc dec push push pop fs ja test hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov popf mov ret leave rcl fsub jmp or adc dec push pop outsw jns lea ret into (bad) in stc add sbb das cmp data16 orl testb adc dec push pop pusha imul xchg cwtl sahf movsb stos mov mov fucom ljmp push sbb sub xor push pop bound jne orl ret aad loope out hlt cli add or sub dec push pop pop gs jb jg mov mov mov fdivp stc incl or sbb and inc dec push pop pop gs jb jg mov mov mov fsubp jmp clc incb adc push and inc dec push pop pop imul xchg mov mov (bad) jmp clc incl and inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cmp inc dec push pop pop imul test stos mov mov fsubp jmp clc incl and inc dec push pop pusha insl jae addb lods mov rol rcr loopne in repz incl or sbb and inc dec push pop pop imul test stos mov mov (bad) in repz incl or sbb daa sub dec push pop popa insl je addb lods mov mov (bad) in repnz incl and inc dec push pop pop gs jb jle mov mov mov fucom jmp clc incl es dec push pop pusha insw jae addb lods mov rol rcr loopne in repz add or sbb es cmp inc dec push pop pop gs jb jg mov mov rol roll hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov loopne in repz add or sub cmp inc dec push pop pop data16 jae jg mov mov rol rcr loopne in repz incl or sbb and inc dec push pop pop imul test stos mov mov fsubp jmp clc incb adc push and inc dec push pop pop data16 jb addb lods mov rol aam loopne in hlt cli add push adc and sub dec push pop popa outsb je addl rol rcr loopne in hlt cli add push adc and sub dec push pop popa insl je addb lods mov rol rcr loopne in repz add or sub dec push pop popa outsb jne mov (bad) rcr out std or pop sub inc dec push pop data16 xchg lods mov rol rcr jmp inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov or sbb sub ss dec dec push pop bound jne orl lret ljmp cmp pop data16 mov (bad) icebp sti add cmp pop outsb jns (bad) cltd movsb mov (bad) iret aad loop out cmc sti add push adc xor push pop popa insl je addb mov out cld pop push adc xor jns mov rcl fucomp hlt incb adc push pop fs xchg ret in cli add push and aaa inc dec pop imul test stos mov mov fucom ljmp push sbb cmp dec dec push pop bound jne (bad) mov mov mov fucom ljmp sub xor push pop bound jne (bad) mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov ror aad loop out idiv add unpckhps sub ss dec dec push pop arpl jbe (bad) mov scas mov ret (bad) icebp cli add cmp push pop gs ja lea mov (bad) out hlt cli add or sub dec push pop pusha insl jae addb lods mov rol rcr loopne in repz add or sub dec push pop pusha insw jae addb lods mov mov (bad) in repz add or sbb es cmp inc dec push pop pop addr16 mov vpsubusb out incl adc xor inc push pop outsw jp xchg fwait mov aad in clc add xor dec push pop insb je orb mov fsubp ljmp pop sbb ds dec push push pop fs inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov ja test stos mov mov fsubp jmp idiv add adc push and xor ds dec push pop pop imul test stos mov mov out hlt sti add unpckhps and das xor push pop popa push mov scas mov ret (bad) fucom jmp or push sbb cmp pop imul test stos mov mov fsubp jmp idiv add adc push and xor ds dec push pop pop imul test stos mov mov fsubp ljmp pop push and xor aas inc dec push pop pop data16 jb jg mov mov mov (bad) in repnz incl and inc dec push pop pop imul test lods mov mov (bad) in repz add push adc and cs mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cmp dec push pop popa push mov scas mov ror aad loop out cmc cld add unpckhps sub xor push pop bound jne (bad) mov scas mov ret aad loop out cmc cld add movhps cmp pop imul test lods mov mov loopne in hlt cli add push adc and sub dec push pop bound jne (bad) mov scas mov ret aad loop out cmc cld add unpckhps and cs push pop arpl jbe (bad) mov mov mov fucom ljmp push sbb cmp dec push push pop arpl ja orl mov mov fsubp jmp clc incb adc push and xor ds dec push pop pop gs jb jg mov mov mov fild hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov out repz add or cs push pop popa push mov scas mov ror aam loope out cmc sti add push adc xor push pop arpl jbe (bad) mov scas mov ret leave iret (bad) fsub jmp or adc xor push pop arpl jbe (bad) mov mov out clc add sbb cmp push bound orl (bad) fcomp in repnz incl ds push push pop arpl jbe orl mov mov fsub jmp std or sbb xor inc dec pop fs xchg lret xlat in sti push adc sub dec push pusha imul xchg mov aam jmp sbb sub ss dec dec push pop arpl jbe orl scas mov ret (bad) fsub out cli push or mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov and inc dec push pop arpl test ror jecxz testb pop push and pop gs orl rcr loope testl aaa inc dec push pop insb jae mov rol rcr loopne in repz add or sbb es cmp inc dec push pop pop data16 jb jg mov mov mov fsubp jmp clc incb adc push and xor inc dec push arpl ja orl mov mov fucom jmp or adc xor push pop popa outsb je addl rol rcr (bad) jmp stc incl sub inc dec push bound (bad) mov vpaddusb jmp or push sbb sub xor push pop bound jne (bad) mov scas mov ret aad loop out cmc sti add inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc push adc xor push pop popa outsb je addl ror aam loope out hlt cli add or sub dec push pop pusha insw jae addb scas mov (bad) in cmc add adc inc dec pop outsb jns nop cltd mov xlat jecxz clc decb adc dec push popa push pushf cmpsl mov enter out cld push or sbb es cmp inc dec push pop pusha data16 jae addb lods mov mov fsubp jmp clc incb and xor ds dec push pop pop imul test stos mov mov fucom ljmp pop sbb dec push pop pusha insw jae addb lods mov rol aam loope in hlt cli add or sub dec push pop pusha outsb jne (bad) mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov ret aad loop out cmc cld add unpckhps and das xor push pop popa outsb je addl ror aam loope out cmc sti add unpckhps and xor cmp pop imul test stos mov mov fsubp ljmp pop sbb cmp pop fs ja test stos mov mov fsubp jmp idiv add adc push and xor ds dec push pop pop imul test lods mov mov (bad) in repz incl or sbb es cmp inc dec push pop pop gs jb jg mov mov mov (bad) in repz add or sub dec push pop popa insl je addb lods mov rol rcr loopne in repz add push adc and cs inc inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc inc dec push pop bound jbe orl mov mov fucom jmp or push sbb cmp dec push push pop arpl jbe orl scas mov ret (bad) fsub jmp or push sbb cmp dec push push pop arpl jbe orl mov mov fsub jmp or adc xor push pop arpl jbe orl mov mov fucom ljmp sbb es cmp inc dec push pop pop data16 jb jg mov mov mov (bad) in repz incl or sbb and inc dec push pop pop data16 jb jg mov mov mov fsubp jmp clc incb adc pop and inc dec push pop pop gs jae addb lods mov mov loope out inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov sti add push sbb sub pusha imul xchg mov rcr out sti add sbb inc dec push pop pop data16 jb mov ret leave rcl fucom jmp or push sbb cmp bound lea iret (bad) repnz push and cmp data16 mov lret jmp sbb push pop addr16 (bad) mov scas mov ret aad loope out hlt cli add or sub dec push pop addr16 mov cld and ret sar add sbb cmp push pusha push jge xchg fwait movsl mov (bad) into fsub in testl xor outsb jns lea leave rcr out cli add sbb sub pop push lcall loopne cmc decl adc dec pop bound mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov (bad) into fsub in testb adc sub cmp outsl jns lea enter icebp sti add cmp push popa push jle xchg pushf cmpsb mov (bad) into fsub jmp add adc sub cmp push pop outsl jns mov enter lock add sbb sub pop imul scas mov in testb adc sub cmp pop arpl orl in stc add and xor push cltd movsb scas mov in testb push and xor push fwait cmpsb mov (bad) iret fsub in testl xor (bad) mov enter repnz push adc and cmp push bound orl int3 (bad) loopne repz adc xor inc dec pop bound mov enter icebp cld inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc push adc and cmp pop arpl (bad) mov enter lock add aaa inc dec push pop push jle xchg pushf cmpsl mov (bad) iret (bad) out clc add and xor data16 test ret loopne cmc decb adc xor inc push pop arpl add mov enter repnz push adc and pop bound jg xchg sahf cmpsl mov (bad) rcr in clc add and xor dec push pop data16 test ret loop testb adc inc push pop data16 test ror fsubrp repnz push adc and push popa imul xchg mov rcr call sbb pop bound orl out sti add cmp pop arpl orl call sbb xor inc push pop outsb js inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov xchg mov rcr call sbb push pop addr16 xchg (bad) rcr jmp push sub cmp push pop addr16 xchg ret int loope cmc decl adc sub cmp push pop data16 test mov lock add sbb sub popa imul xchg sahf test fucom icebp sti add cmp push bound mov enter repnz pop adc and pop bound mov int3 xlat loope testl xor imul mov (bad) into fsub in stc add inc dec pop bound mov (bad) rcr out cli add cmp push popa insb jbe mov enter icebp cld push adc and pop arpl (bad) mov enter repnz push adc and cmp hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov dec push bound mov leave rcr out std pop adc xor inc push pop outsb js mov lret (bad) loopne cmc decl adc sub cmp push pop data16 test ret loopne cmc add or and xor imul mov (bad) rcr in stc add sbb pop gs xchg (bad) into (bad) out stc add sbb sub insl jns xchg pushf cmpsl mov (bad) jecxz clc add and xor push jg xchg pushf cmpsl mov (bad) rcr in stc add inc dec push pop push jle xchg popf test mov icebp sti add cmp pop bound mov lret jmp sbb xor dec pop push scas mov icebp add adc xor dec pop imul lcall insb ja mov rcr inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc jmp add sbb xor dec push bound test lret in testb adc dec push push pop arpl jle xchg popf mov ret aad in cld or sbb inc inc push pop outsb jns mov lret rcl fsubp repz or push sub dec push pusha imul xchg pushf cmpsb mov (bad) in stc add inc push pop push mov (bad) icebp cld add cmp pop data16 mov lret jmp and xor push orl stc add sbb es pop imul mov lock or sub popa insb js lea (bad) rcr jmp adc inc push pop addr16 jge mov int3 (bad) loop cli push adc push pop imul hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov orl sti push adc sub dec push pop arpl mov xlat jecxz cli push adc xor dec push pusha imul add aad in testl cmp gs xchg lret jmp add inc push pop push orb rcr call and cmp pop push mov (bad) loopne testb sbb pop push orl aam jmp add inc push pop outsl jp xchg xchg sahf movsb stos mov vpaddusw icebp std or push push sub imul (bad) popf cmpsl mov enter loop clc add aaa cmp insb ja mov iret (bad) repz push and cmp pop imul cltd cmpsb mov int in decb push and cmp pop outsl jnp xchg popf test jecxz mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov in testl dec push pop push mov ftst out sti pop adc push arpl xchg ror in sti pop adc pop fs xchg into (bad) repz push and outsl jp xchg lahf stos mov lret aad jmp add inc dec pop fs xchg int3 fsub out sti push adc push pusha insb js lea lret xlat jecxz cli add aas dec push pusha insb js mov rcr jmp and cmp pop imul lcall jmp add dec push pop push (bad) lea aam ljmp cmp pop imul mov hlt add inc push pop push mov fucomip testb sbb cmp pop imul mov hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc (bad) icebp decb adc dec pop data16 mov rcr call add cmp pop imul mov icebp cld pop adc sub inc dec pop data16 mov rcr out decb adc dec push pop imul movsl mov (bad) fcomp in icebp idiv pop adc sub aas dec push pop popa addr16 test enter ljmp daa xor ja mov (bad) rcr in stc add inc push pop push (bad) mov rcr call sbb push pop push orb into fsub in testl cmp pop outsl jp xchg popf test fsubrp cmc add unpckhps and xor insb jns mov ret iret fsub ljmp xor inc dec push pop push orl hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov vpminub lock add unpckhps sub inc dec push add jg xchg mov aam in clc add sbb xor dec push pusha imul lcall jmp and pop addr16 mov int in cli push adc sub dec push popa insb ja mov aad in testl cmp jno xchg enter hlt decl adc dec pop outsl jnp xchg sahf test in sti pop adc sub dec push arpl test lret (bad) loop stc add sbb xor dec push pusha insb js (bad) lcall jmp add adc inc inc dec push pop push lahf stos mov mov testl das cmp pop push mov xlat fucom jmp decb pop and xor dec pop gs test int inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov out decb pop and cmp inc push pusha insb jns nop fwait cmpsl mov int in cli add ds push pop imul (bad) into ftst out sti pop adc sub outsb jns xchg popf test ror jecxz sti or sub inc dec pop gs mov rcr out add pop and addr16 xchg int3 xlat loope testl cmp pop data16 mov iret (bad) repnz adc push pop addr16 mov leave aam jmp and data16 xchg (bad) icebp sti pop adc pop outsl jp xchg sahf stos mov int in sti pop adc sub outsl jp xchg sahf stos mov int3 (bad) loope clc add sbb xor dec push bound xchg int3 xlat jecxz stc add sbb xor dec push popa insb js mov lret inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov loop stc push adc sub outsl jnp xchg sahf test ror jecxz stc add sbb xor jns nop pushf cmpsl mov leave aad in clc add sbb popa insl js (bad) lcall in clc add sbb xor dec push popa insb js nop fwait cmpsl mov lret in stc add inc dec push arpl test ror loopne out cmc std or push sub xor inc inc dec push pop popa push popf test iret (bad) in testb pop and cmp dec push push pop outsb js mov rcr out sti add ss dec push pop imul mov int3 fsub lock push adc xor push pop imul mov lret jmp add and bound (bad) lea into fxam icebp sti pop adc push pop imul xchg lahf stos mov lret mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc jecxz icebp testl cmp push pop addr16 mov lret jmp add adc and cmp push pop insw je orb iret (bad) fsub jmp push sub cmp jns xchg pushf cmpsl mov lret in clc add sbb xor je mov ret iret fsubr cmc add push and inc dec pop gs xchg lret jmp add sbb cmp push pop push orb xlat loop clc add sbb pop push lahf stos mov int in sti push adc repz adcl add inc sahf mov loope es jg mov orl jmp add adc sub cmp pop fs ja mov (bad) rcr in stc add aas dec push pop imul mov ret into fsub jmp add hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov or daa xor inc push pop outsb orl leave rcr out sti add aaa inc dec push pop imul mov (bad) into (bad) in testb adc inc push pop outsb js mov leave rcr out cli add ss dec push pusha imul xchg popf cmpsl mov (bad) into fsub out clc add and xor dec push pop data16 test ror loopne hlt decb adc xor inc push pop outsb js mov enter out stc add inc dec push pop push lcall fucomip repz pop adc and cmp push popa imul xchg popf cmpsl mov (bad) iret (bad) in testl xor dec push pop data16 test ror fucom repnz push nopl sub pusha push jle xchg fwait movsl scas mov jmp decl adc dec pop arpl inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov orl in clc add pop sub data16 test ror fucomip repz push adc and push popa insb jbe mov enter repnz push adc and pop arpl (bad) mov leave rcr out sti push nopl aaa inc dec push pop push jg xchg sahf test mov repnz pop adc xor dec push pop addr16 xchg (bad) in clc add aas dec push pop imul mov (bad) iret ftst in testl aaa inc dec push pop imul scas mov in testl xor addr16 test ror fucomip repz pop adc xor inc dec pop arpl (bad) mov leave rcr out sti push adc push pop push fwait movsl scas mov in testb adc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov sub inc push pop data16 test (bad) jecxz testl xor dec push pop data16 test ret loopne cmc decl adc push pop outsl jp mov lret call sbb cmp push popa insb jbe mov enter lock add sbb sub popa imul xchg popf cmpsl mov (bad) rcr in clc add inc dec push pop imul mov (bad) into fsub in testb adc dec push pop imul scas mov in testl xor outsb jns mov into fsub in clc add inc dec push pop push jle xchg popf test enter testb adc sub cmp outsl jns mov into (bad) in testb pop and xor imul mov (bad) into inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov fsub in testb adc sub cmp jno test (bad) into fsub in testb adc inc push pop addr16 test ror loopne cmc add adc sub cmp push pop outsl jns lea leave rcr out sti add aaa inc dec push pusha push jle xchg pushf movsl scas mov jmp decl adc push pop outsw jns mov lret jmp sbb pop outsb js mov enter icebp cld push adc and aaa inc dec push pusha push jle xchg pushf cmpsb mov (bad) jecxz testl xor push fwait movsl scas mov in testl xor push lcall loope testb adc dec push pop addr16 xchg (bad) in cli add cmp push arpl hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc insl js mov lret call sbb xor je mov (bad) rcr out cld push adc xor inc dec pop outsl jp (bad) cltd mov (bad) loopne cmc decl adc sub cmp jo xchg (bad) in clc add and xor dec push pop addr16 xchg ret int loope cmc add adc sub ds push pop addr16 test ret loope cmc add adc sub cmp jo test (bad) rcr out std or dec push pop imul mov push push and pop jno lea fucomip cli add rcr cmp xchg mov cmc decl adc daa xor inc dec pop bound mov ret fsubrp icebp sti add pop and xor push cltd movsb lods mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov lret out cli add sbb sub inc push pop outsb ja mov jne in push cmpsl fistpl dec pop data16 mov aam in stc add inc dec pop data16 mov aad in stc add ds push pop imul xchg mov loop stc add sbb cmp pop imul xchg mov fsub lock pop adc sub outsl jnp xchg popf test ror in sti pop adc sub jo mov fsub in clc add inc push pop gs xchg enter hlt add pop and cmp pop imul mov repz adc dec push pop imul mov hlt add and cmp pop push mov fucomi hlt add pop and cmp pop imul hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc orb iret (bad) repnz or sub inc dec pop addr16 mov rcr jmp and cmp pop push mov fsub repnz adc dec pop addr16 mov iret (bad) icebp std or dec pop data16 mov rcr out decb adc push pop addr16 mov rcr jmp and ss dec pop arpl xchg int3 ftst icebp std or sub inc push pop addr16 mov int loope cmc decl adc ds push pop bound jne (bad) mov vpaddusw jmp clc decl adc push pusha insb je addb ror jecxz cli add sbb sub aas dec push pop addr16 xchg leave aad in clc add ds push pop insb jbe mov int3 (bad) inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov loope testb pop and inc dec pop arpl (bad) mov rcr in cld pop adc sub insb jbe lea mov out cli push movhps xor jb orb iret (bad) fsub out cli push bndldx xor cmp je mov mov icebp stc incl aaa inc dec push arpl mov iret fxam lock push adc push bound (bad) fwait cmpsl mov enter out cli add cmp jbe mov rcr call and data16 mov (bad) loop testb push and gs xchg lret (bad) loope stc add ds push popa insb js (bad) fwait cmpsl mov lret in testl ds push popa insl js nop fwait cmpsb mov enter testl hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov das cmp pop push jl xchg mov ror fsubr idiv or inc dec pop arpl (bad) mov leave aad out repnz add inc dec push pop bound test (bad) in sti pop adc sub inc push pop imul mov cli push adc sub inc push pop data16 mov aad jmp xor jne lea into (bad) lock pop adc sub inc dec push arpl xchg iret (bad) repnz adc push pop push mov (bad) icebp sti push adc es dec push pop push jg xchg mov xlat loope clc add sbb xor ja mov rcr out cld or push sub cmp push pop addr16 mov iret frstpm(287 icebp cld or sub inc dec pop data16 mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov int in sti pop adc sub inc dec pop fs xchg lret xlat jecxz cli add inc dec pop fs xchg iret (bad) repnz or sub inc dec pop gs mov xlat jecxz cli push adc push arpl xchg into ftst lock or sub inc dec pop outsl jp xchg popf test jecxz cli push adc pop fs xchg fxam icebp std or sub dec push arpl test lret in clc add sbb xor dec push popa insl js nop pushf test mov repz or sbb sub aas dec push pop pusha insl jae addb (bad) rcr loop out cmc decb adc xor push pusha push jbe orl int3 fsub out sti add sbb sub push fwait cmpsl mov enter testl mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov and cmp pop push pushf cmpsl mov (bad) rcr out std pop adc sub push orb lret jmp add sbb pop gs xchg mov idiv add cmp pop popa addr16 xchg lret rcr jmp push and xor outsb js test enter out hlt sti add sbb xor inc push pop push movsl mov (bad) rcr call and inc dec pop arpl test (bad) in cld or sub inc dec push bound test (bad) rcr call and addr16 mov lret ljmp aaa inc dec pop gs xchg leave aam jmp add inc push pop imul mov cmc add and cmp hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov push pop push movsb mov (bad) rcr jmp and cmp pop push pushf mov (bad) out sti pop adc and xor jbe orl iret fchs out repz or dec push pop gs mov lret jmp add sbb xor dec push bound xchg into (bad) repnz or push pop push orb fsub testl aas dec push pusha imul lcall call and cmp pop addr16 mov into (bad) repnz adc sub inc push pop addr16 mov rcr out cld push adc xor dec push popa imul xchg mov fldln2 testl sub pop data16 orl rcr in testl xor inc push pop arpl addl inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov out stc add outsb jle xchg mov (bad) icebp std or push sub inc dec pop gs adc pop addr16 test ror fsubrp mov cld or sub inc dec pop data16 mov ftst out clc add and aaa xchg or test sub inc dec push bound test xchg fwait mov xor addr16 test ret loopne clc add sbb sub inc dec push pop imul mov (bad) in clc add inc dec push pusha xchg shl out cli cmp xchg mov add sbb pop gs mov rcr jmp pop and cmp pop addr16 xchg (bad) rcr call adc sub imul mov lret (bad) loop clc add inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov sub gs xchg int jecxz cli add cmp pop push mov (bad) loope testl cmp pop data16 mov (bad) loop clc add sbb xor push pop imul cltd movsb mov (bad) rcr ljmp cmp pop imul mov repnz add sbb sub dec push pop push (bad) mov (bad) out decb adc pop sub inc dec push arpl jg xchg popf test (bad) out cld or daa xor dec push popa insb jbe lea (bad) loop cli pop adc sub inc dec pop data16 mov rcr add testl cmp pop outsb ja lcall out cld or and xor insb ja mov (bad) loopne testl cmp ja inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov aam in stc add sbb xor dec push arpl test (bad) rcr jmp sbb push pop imul xchg mov fsubr hlt decl pop and imul ror loopne repz pop adc sub insl js (bad) fwait cmpsb mov lret in testl cmp push pop push orl aad in clc add sbb xor dec push popa insl js nop pushf cmpsl mov leave aad in clc add sbb xor dec push popa insl jns nop pushf cmpsl mov lret jmp add inc push pop imul mov repz push and pop push orb rcr call and inc push pop addr16 mov rcr out decl pop and cmp pop push (bad) mov rcr ljmp cmp pop push mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov orl testb sbb das cmp pop push pushf cmpsl mov rol (bad) repz add push adc and sub popa insb js mov mov lock or sbb and push pop data16 mov (bad) rcr in stc add inc dec pop arpl test (bad) rcr jmp and xor imul mov testb push and inc dec pop arpl test lret jmp add adc sub cmp inc dec push popa insl jp lea (bad) rcr add hlt add movhps sub inc dec pop insw je test enter jmp add push and xor cmp jno mov mov int loop clc add sbb xor dec pop arpl test leave aam jmp add inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc adc dec pop outsb je xchg into fxam lock pop adc push popa imul fwait movsl mov (bad) rcr ljmp cmp pop data16 xchg leave rcr jmp and gs xchg int in cli push adc push arpl xchg lret (bad) loop stc add aas dec push bound test lret out stc add cmp push pop pop outsb jns xchg fwait movsl mov (bad) fucomp idiv or and sub bound orl mov lret in repz incl adc sub cmp pop fs js test lods mov mov (bad) jmp clc incb and inc dec push pop pop data16 jae (bad) sti pop and cmp pusha insb js nop popf test in incb hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc or and cmp pop imul cltd mov (bad) lock push adc xor pop push jle xchg popf test loop testl cmp data16 mov rcr jmp and cmp pop push orl clc add sbb pop push fwait movsb scas hlt push sbb cmp push popa imul xchg sahf test mov call pop push adc and sub dec push pop pusha data16 jb jg mov mov mov fcomp out repnz incl and xor cmp pop arpl jbe (bad) mov scas mov rol aam loopne in repz incl or sbb es cmp inc dec push pop pop fs ja test test enter loope out hlt sti add or sub mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc inc dec push pop pop data16 jb jg mov mov mov fucom ljmp push sbb sub xor push pop popa insl je addl rol rcr (bad) in repnz incl and xor cmp pop arpl jbe (bad) mov scas mov ret (bad) fsub jmp or adc xor inc inc dec push pop pusha data16 jae jg mov mov mov fucom ljmp pop add and xor cmp pop arpl jbe (bad) mov scas mov rol aam loopne in repz add or sbb es dec push pop pusha data16 jb jg mov mov mov fucom ljmp push sbb sub xor push pop popa push mov scas mov rol mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov aam loopne in repz add or sbb and inc dec push pusha imul mov in stc add cmp push pop push jg mov mov mov in clc add sub xor push pop bound jne orl (bad) rcr out sti push adc and ds push popa insl js (bad) lcall ljmp xor dec push pop imul mov enter loop out cmc sti add push adc and cs inc inc dec push pop popa insl je addb lods mov mov out testl cmp dec pop outsw jns (bad) fwait movsb stos mov int loopne clc add adc push pop addr16 mov (bad) out stc add sbb das aaa inc dec push bound test mov mov fucom inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov ljmp push sbb sub ss pop arpl jbe orl scas mov ret leave rcl fsub jmp or adc cmp push pop popa push xchg lods mov rol aam loope in hlt cli add or sub dec push pop pop data16 jb jg mov mov mov (bad) jmp clc incb xor dec push pop push xchg mov rcl fucom jmp or push sbb sub xor push pop popa outsb je addl rol rcr loopne in hlt cli add or sub cmp inc dec push pop pop imul test stos mov mov fucom ljmp push sbb sub ss dec dec push pop bound jne orl rcr in inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc stc add xor dec push pop addr16 xchg (bad) rcr in clc add pop and cmp push popa insb jbe mov ret int3 xlat jecxz cmc cld add movhps sub ss pop arpl jbe orl mov mov fucom ljmp pop sbb cmp pop fs ja test stos mov mov add in icebp clc incb xor inc inc dec push pop popa outsb jne addl ret aad loope out cmc sti add push adc xor push pop bound jne (bad) mov scas mov ror aam loope out cmc sti add push adc xor inc inc dec push pop pusha insl jae addb lods mov rol aam loope in hlt cli add or sub dec push pop pusha inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov insl jae addb lods mov rol rcr loopne in repz add or sub cmp dec push pop pusha insw je addb lods mov rol rcr (bad) in repnz add or sbb and inc dec push pop popa insl jae addl ror aad loope out hlt sti add or sub add pop pusha insl jae addb scas mov rol aam loopne in hlt sti add or sub dec push pop pusha insl jae addb lods mov mov (bad) in repnz incl and inc dec push pop pop data16 jb jg mov mov mov fsubp jmp clc incb and xor cmp pop fs ja test stos mov mov fucom ljmp inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov or push sbb ds dec push pop pop gs jb jle mov mov mov fsubp jmp idiv add adc push and xor cmp pop imul test stos mov mov fucom ljmp pop sbb cmp pop arpl ja orl stos mov mov fsubp ljmp push sbb cmp pop imul test stos mov mov (bad) in repnz incl and inc dec push pop pop gs jb jg mov mov rol aad loop repnz adc sub pop data16 xchg (bad) loope testb adc push and inc dec push pop push (bad) mov mov ror aam loope out cmc sti add push adc inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cmp outsl jns (bad) lcall out stc push adc push bound orl lret aad ljmp xor dec push pop pusha data16 jae addb lods mov rol aam loopne in repz add or sbb es push popa insb js (bad) cltd mov lret aam ljmp xor outsl jp (bad) xchg mov aad in cmc add pop and xor dec push pop addr16 mov (bad) rcr call or sub dec push pop popa insl je addb lods mov rol rcr loopne in repnz incl and inc dec push push pop fs ja test mov fucom jmp or push sbb sub xor push pop bound jne (bad) mov scas mov ror aam mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov fndisi(8087 out hlt cli add or sub dec push pop pusha insw jae mov enter repz adc and aaa ds dec push pop pop fs ja test test leave iret (bad) fsub call or adc and cs inc add push pop popa push xchg lods mov rol rcr (bad) in repz incl or sbb and inc dec push pop pop fs ja orl scas mov ret (bad) fsub call or adc inc dec push bound mov (bad) rcr call push and pop bound orl aad jmp decl adc ds push pusha imul xchg fwait mov ret aad loop out cmc sti add unpckhps and das ss dec push push pop bound jbe orl mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov xchg pushf mov ret aad jecxz lock add adc sbb cmp pop fs ja orl rol aad loop out cmc cld add unpckhps and das xor push pop bound jne orl mov fsubp jmp idiv add adc push and xor ds dec push pop pop imul xchg movsl scas mov inc push pop push mov (bad) icebp sti add cmp pop gs xchg lret (bad) loope clc add sbb xor dec push pop push (bad) mov aam in stc add aas dec push bound test enter cmc add and cmp pop imul fwait cmpsl mov lret in stc add sbb xor js (bad) lcall in clc add sbb xor dec push bound xchg hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov lret in clc add sbb pusha imul pushf cmpsl mov lret aad in clc add sbb xor dec push arpl xchg int3 fsub out cli add aas dec push arpl xchg int in cld or sub inc dec pop gs xchg enter repz adc sbb dec push pop arpl jbe orl ret loope repnz incl adc and data16 (bad) mov mov repnz adc dec push bound mov enter testl jno mov leave aam call pop sub dec push pop imul xchg lahf test fsubrp hlt add adc dec push arpl test (bad) lret rcr fsubp out stc add sbb push pop data16 xchg inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov lods mov int3 (bad) out sti add adc and pop imul mov into aam in incb adc sub xor outsb jns mov aam in clc add sbb das cmp pop addr16 mov aad in testb sbb and inc dec push pop pop fs ja test stos mov mov fucom jmp or push sbb sub xor push pop popa insl je addb lods mov rol aam loopne in repz add or sbb and inc dec push pop pop fs ja orl mov mov fsub call or adc xor inc inc dec push pop pusha insl jae addb lods mov mov fsubp ljmp push sbb sub ss pop bound jne (bad) mov hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov mov fnop out repz incl or sbb and inc dec push push pop imul test stos mov mov fsub call or adc and cs inc inc dec push pop pusha data16 jb jg mov mov mov fsubp jmp idiv add adc sbb cmp pop bound jne (bad) mov scas mov rol aam loope in hlt cli add or sub cmp inc dec push pop pop imul test mov fnclex call or adc and das xor push pop bound jne (bad) mov mov mov fsub jmp or adc xor push pop popa push mov scas mov ror aam loope out hlt sti add push adc and sub mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc xor inc inc dec push pop pusha insl je addb scas mov rol aad loop out cmc cld add unpckhps and cs push pop bound jbe (bad) mov scas mov ret aad loop out idiv add unpckhps sub xor push pop bound jne orl rol aam loope in hlt cli add or sub dec push pop popa outsb je addl rol aam loope in hlt cli add or sub dec push pop pusha insw jae addb lods mov rol rcr (bad) in repnz incl or sbb and inc dec push pop pop imul test stos mov mov fsubp jmp clc incb adc push and xor ds dec push push pop fs ja orl mov mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov (bad) fsub ljmp push sbb cmp dec dec push pop arpl jbe (bad) mov scas mov ret aad loop out cmc sti add push adc xor push pop bound jne orl rol aam loope in hlt cli add or sub dec push pop popa push xchg lods mov rol aam loopne in hlt cli add or sub dec push pop pusha insw jae addb lods mov ror aad loop out cmc sti add push adc inc dec push pop push fwait cmpsl scas mov lret aad loop repnz or push sbb cmp pop arpl jbe orl scas mov ret aad loop out cmc sti add push adc xor inc inc dec push pop popa insl je addl rolb inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov (bad) int fnop out repz add or sbb and inc dec push pop pop imul test stos mov mov fsubp ljmp pop sbb cmp pop arpl jbe (bad) mov scas mov ror aam loop out cmc cld add unpckhps and das xor push pop popa push xchg lods mov rol rcr loopne in repz add or sbb and inc dec push pop pop gs jb jg mov mov mov fsubp ljmp push sbb cmp dec dec push pop bound jbe orl scas mov ret aad loop out cmc sti add push adc and cs push pop popa insl je addb lods mov rol rcr loopne in repz add or sbb es cmp inc dec push pop inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov pop gs jb jle mov mov mov fucom jmp idiv add adc sbb cmp pop arpl jbe orl scas mov ret aad loop out cmc sti add push adc and cs push pop popa outsb je addl rol rcr loopne in repz add or sbb es cmp inc dec push pop pop data16 jb jg mov mov mov fsubp ljmp pop sbb cmp pop arpl jbe orl mov mov fucom jmp adc and aas inc dec push pop pop data16 jb jg mov mov mov add out repz add or sub cmp dec push pop pusha insw jae addb lods mov mov (bad) jmp clc incb inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov sbb and xor ds dec push pop pop imul test stos mov mov fucom ljmp push sbb sub ss dec dec push pop bound jbe (bad) mov mov mov fsub jmp or adc xor push pop popa push xchg scas mov ror aam loope in hlt cli add or sub dec push pop pop data16 jb jg mov mov mov fsubp jmp clc incb and xor ds dec push push pop fs ja orl mov mov fsub jmp or adc add cmp pop arpl jbe orl scas mov ret aad loop out cmc sti add push adc and cs inc inc dec push pop pusha outsb je addl mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cmpsl lods mov rol rcr loopne in repz incl or sbb and inc dec push pop pop imul test stos mov mov fsubp ljmp pop sbb cmp pop arpl jbe orl scas mov ret aad loop out cmc cld add unpckhps and cs push pop popa outsb je addl rol rcr loopne in repz incl or sbb es cmp inc dec push pop pop data16 jb addb lods mov mov (bad) jmp add adc and cmp dec push pusha imul nop lcall add fucom ljmp push sbb sub xor push pop popa push xchg lods mov rol rcr (bad) in repz incl or sbb and inc dec push push pop fs ja inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc orl scas mov ret aad loop out hlt sti add push adc and cs inc inc dec push pop pusha data16 jae jg mov mov mov fsubp ljmp push sbb cmp dec dec push pop bound jne (bad) mov scas mov rol aam loope in repz add or sub cmp inc dec push pop pop imul test stos mov mov ljmp xor inc dec dec push pop bound jbe (bad) mov mov mov fucom ljmp sbb and inc dec add jns xchg mov mov (bad) in repnz incl and inc dec push push pop imul test stos mov mov fsubp ljmp pop and inc dec push bound inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov enter jmp or adc xor push pop popa push xchg lods mov rol rcr loopne in repz add or sbb es dec push pop pusha data16 jae jg mov mov mov fucomip hlt decb adc pop and inc dec push pop pop imul test stos mov mov fsubp jmp idiv add adc sbb cmp pop fs ja test stos mov mov fucom ljmp push add cmp pop arpl jbe orl scas mov ret aad loop out cmc cld add unpckhps and cs push pop bound jne (bad) mov scas mov ror aad loop out cmc sti add push adc ss dec inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov push push pop arpl jbe (bad) mov scas ror (bad) fucom jmp or adc xor push pop popa insl je (bad) mov scas mov ret aad loop out cmc sti add unpckhps and cs inc inc dec push pop pusha insl jae addb lods mov rol rcr (bad) in repnz add or sbb es dec push pop pop data16 jb jg mov mov mov fucom ljmp pop push and xor cmp pop fs jbe add stos mov mov fsubp jmp clc incb and xor ds dec push push pop fs ja orl scas mov ret aad loop out hlt sti add push adc and sub dec push pop pusha data16 jb addb lods mov mov fsubp jmp mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov icebp clc incb adc sbb cmp pop arpl jbe (bad) mov scas mov ret aad loop out hlt sti add push adc and sub dec push pop pusha data16 jb jg mov mov mov fsubp ljmp pop sbb cmp pop arpl jbe (bad) mov scas mov ror aam loope out hlt cli add or sub dec push pop pusha data16 jb jg mov mov mov (bad) in repnz incb and xor cmp pop arpl ja orl scas mov ret (bad) fsub jmp or adc xor inc inc dec push pop popa insl jae addl ror aam loope in hlt cli add or sub cmp dec push pop pop data16 jae inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov xchg mov mov in std add sbb cs arpl test mov (bad) fcomp in icebp clc incb and xor ds dec push push pop imul test mov mov (bad) jmp clc incb and inc dec push pop pop imul test stos mov mov fsubp jmp clc incb adc push and xor ds dec push push pop fs add test stos mov mov fsubp jmp clc incb and inc dec push push pop fs ja test stos mov mov fsubp ljmp pop sbb ds dec push push pop fs ja test stos mov mov fucom jmp or push sbb sub ss dec dec push pop bound hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov outsl jbe orl scas mov ret aad loop out cmc sti add push adc xor inc inc dec push pop popa outsb je addl ror aam loope out hlt sti add push adc and cs inc inc dec push pop pusha insl jae addb lods mov rol rcr (bad) in repz add or sub cmp inc dec push pop pop gs jb jg mov mov mov (bad) out repnz incl or sbb and inc dec push pop pop gs jb jg mov mov mov fsubp jmp clc incb adc push and xor cmp pop arpl ja test stos mov mov fucom ljmp push sbb sub ss dec dec push pop bound jbe (bad) mov mov mov fsub jmp mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov or push sbb cmp pop fs ja test stos mov fndisi(8087 call or adc xor push pop popa outsb je addl rol aam loope in hlt cli add or sub dec push pop pusha insl jae addb lods mov mov loopne in repz add or sub add inc inc dec push pop pusha insl je addl rol rcr loopne in repz add or sub dec push pop pusha data16 jae jg mov mov mov (bad) in repnz incl and inc dec push pop pop imul test stos mov mov fucom ljmp pop sbb cmp pop arpl jbe orl mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov scas mov ret aad loop out cmc sti add push adc xor push pop popa push xchg lods mov rol aam loopne in repz add or sub cmp inc dec push pop pop gs jae jg mov mov mov (bad) jmp clc incb and xor ds dec push push pop fs ja test movsl lods mov mov fsubp jmp clc incb adc push and xor ds dec push push pop fs ja orl mov mov fsub jmp or push sbb sub ss dec dec push pop bound jne (bad) mov scas mov ror aam loope out hlt cli add push adc and cs inc inc dec push pop pusha insl je addb lods mov rol rcr (bad) in hlt cli add or sub hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc inc dec push pop bound test mov jmp push sbb dec push push pop fs ja test stos mov mov fucom jmp or pop push and xor cmp pop fs ja orl mov mov fsub jmp or adc add ds dec push push pop fs ja orl mov mov fsub jmp or adc xor push pop popa outsb jne orl rol aam loopne in repz add or sub dec push pop pusha data16 jae jg mov mov rol rcr (bad) in repnz incl and inc dec push pop pop imul test stos mov mov fucom ljmp push sbb mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov sub ss pop bound jbe (bad) mov scas mov (bad) rcl fucom ljmp pop sbb cmp pop fs ja orl mov mov fsub jmp or adc xor push pop bound jne (bad) mov test leave iret (bad) fsub jmp or adc xor push pop bound jne (bad) mov scas mov ret aad loop out cmc sti add push adc and cs inc inc dec push pop popa insl je addb lods mov rol rcr (bad) in repz add or sub cmp dec push pop pop data16 jb jg mov mov mov fsubp jmp idiv add adc sbb ds dec push push pop fs ja test stos mov mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov ret lret fsub jmp or push sbb sub ss dec dec push pop arpl js test stos mov mov fsubp jmp idiv add adc push and inc dec push pop pop imul test lods mov mov fsubp in add cli add or sub dec push pop pusha data16 jae addb lods mov mov fsubp in repnz incl and inc dec push pop pop gs jb jg mov mov mov (bad) jmp clc incl and inc dec push pop pop imul test stos mov mov fsubp ljmp pop sbb cmp pop arpl ja test stos mov mov fsub jmp or adc ss dec dec push pop inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov push mov scas mov ret aad loop out cmc sti add push adc and cs inc inc dec push pop pusha insl jae addb lods mov rol rcr (bad) in repz add or sbb es cmp inc add pop pusha insw jae addb lods mov mov (bad) in repnz incl and inc dec push pop pop imul test stos mov mov fucom ljmp push sbb cmp dec push push pop arpl jbe orl scas mov ret leave iret (bad) fsub jmp or adc xor push pop popa push xchg scas mov rol aam loope out hlt cli add or cs inc inc dec push pop pusha insl jae addb lods mov mov loopne in repz mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc stc add or sbb es cmp inc dec push pop pop imul test stos mov ret into fnclex jmp sbb xor inc dec pop arpl ja lea mov (bad) lret fsubp ljmp adc push and inc dec push push pop imul test stos mov mov fsubp ljmp pop sbb cmp pop arpl jbe orl scas mov ret aad loop out cmc cld add unpckhps sub xor push pop popa push xchg scas mov rol aam loopne in repz add or sub dec push pop pusha insw jae addb lods mov rol rcr loopne in repz incl or sbb and inc dec push pop pop insw jae addb lods mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc (bad) in repnz incl and inc dec push pop pop imul test stos mov mov fsubp ljmp pop sbb cmp push pop fs ja test stos mov mov fucom ljmp pop sbb cmp pop arpl jbe (bad) mov scas mov ret aad loope out hlt sti add push adc and cs push pop popa outsb je addl rol rcr loopne in repz incl or sbb and inc dec push pop pop gs jb jg mov mov mov fsubp ljmp pop sbb cmp pop arpl jbe orl mov mov fsub jmp or adc xor push pop popa push inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc jne (bad) mov scas mov ret aam loop out cmc sti add unpckhps and cs push pop popa outsb jne lea scas mov ret aad loope out cmc cld add unpckhps and xor cmp dec dec push pop bound jne (bad) mov scas mov ret aad loope out hlt sti add push adc and sub dec push pop pusha insl je addb lods mov rol rcr loopne in repz incl or sbb and inc dec push pop pop imul test stos mov mov fsubp jmp clc incb and inc dec push push pop imul test stos mov mov fucom ljmp push sbb cmp dec dec push pop bound jbe (bad) mov scas mov ret aad loope out hlt sti add push adc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov and cs push pop popa outsb je addl rol rcr loopne in hlt cli add or adc xor push pop bound jne orl rol aam loopne in repz add or sub cmp inc dec push pop pop gs jb jg mov mov mov (bad) jmp clc incb and inc dec push push pop fs ja test stos mov mov fucom ljmp push sbb cmp dec dec push pop bound jne (bad) mov scas mov ror aam loope out hlt cli add or cs inc inc dec push pop popa insl je addl out stc add sbb dec push push pop arpl jbe orl mov mov fsub jmp hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov add adc sbb cmp pop data16 xchg mov out sti or push sbb xor inc dec push pop pop gs jb jg mov mov mov fsubp ljmp pop push and xor cmp pop arpl ja test stos mov mov fucom jmp or push sbb sub xor push pop bound jne orl ror aam loope out hlt cli add push adc and sub dec push pop pusha insw jae addb lods mov mov (bad) in repnz incl and inc dec push pop pop imul test stos mov mov fucom jmp or push sbb sub ss pop arpl jbe orl scas mov ret aad inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc loop out cmc sti add push adc and cs inc inc add pop popa imul xchg fwait mov ror aam loope out hlt cli add or sub dec push pop pop data16 jae jg mov mov mov (bad) in repnz incl and xor ds dec push push pop fs ja test stos mov mov fsub ljmp push sbb sub ss dec dec push pop bound jne (bad) mov scas mov ror aam loope out hlt sti add push adc and cs inc inc dec push pop popa insl je addb lods mov rol rcr (bad) in repnz incl and inc dec push pop pop imul test stos mov mov fsubp jmp clc incl and inc dec push pop pop imul hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov jle mov lods mov mov (bad) in repnz incl xor aas inc dec push pop pop imul test stos mov mov fsub jmp or push sbb sub xor push pop popa insl jae addb lods mov mov fsubp ljmp push sbb sub ss dec dec push pop bound jne addl rol rcr loopne in repnz incl and xor ds dec push push pop fs jbe orl scas mov ret aad loop out hlt sti add push adc and sub dec push pop pop imul test stos mov mov fucom ljmp push sbb sub xor push pop popa insl jae addb lods mov mov in push stos shl inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc imul int loope cmc decl adc jo pusha je mov stos mov int in repz pop imul pushf test mov clc add sbb xor dec push popa insl js xchg sahf stos mov into (bad) repnz adc push pop imul vpandn clc add sbb xor dec push bound xchg (bad) into fsub in testl xor addr16 jge xchg fwait cmpsb mov (bad) into fsub in testl xor dec push pop data16 test ret loopne hlt decb adc xor push pop outsb js mov leave rcr call sbb push pop push fwait movsl mov (bad) into fsub in testb adc inc push pop outsl jns lea int loop testl xor jno xchg ret inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov loope cmc decl adc push pop outsb js lea lret aad loope testb adc sub cmp push pop outsl jns lea lret call sbb xor inc dec pop bound mov leave rcr out std pop adc xor inc dec pop arpl (bad) mov lret call sbb pop bound mov mov repz adc push pop addr16 mov (bad) rcr out sti push adc and cmp push popa insb jbe mov (bad) shr stc add sbb inc push pusha push xchg (bad) shl jmp call and insl ja or inc push pop imul mov hlt decl inc push pop push orl add pop and cmp pop imul mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov hlt decl pop and cmp pop add (bad) lea rcr ljmp cmp push pusha insb js (bad) fwait cmpsb mov leave aam jmp add and cmp pop imul mov clc add sbb xor dec push popa insl js nop lcall loope idiv add adc and inc dec push push pop arpl push ja test mov in repnz add cmp pop imul sahf test mov testl xor dec pop outsl jns lea lret (bad) out sti add ds push pop push orb lret aad ljmp aaa inc dec pop outsb js (bad) cltd mov xlat loop clc add and cmp pop addr16 mov enter loope hlt add and pop fs test mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov popf movsb stos mov add fsub out cli add adc and cmp fs jg xchg mov int3 rcr out std pop adc daa cs inc push pop data16 xchg lret xlat jecxz sti push adc xor dec push pop imul xchg mov (bad) out sti pop push adc sub inc dec pop gs test ror in cli add cmp push pop push orl hlt add adc sub inc dec push pusha insb ja mov rcr call and cmp pop addr16 mov (bad) repnz or sub inc dec pop gs xchg int in sti pop adc sub inc dec pop gs mov enter repnz incl ss dec push arpl ja mov lret rcr out std or sub xor data16 jle xchg cwtl inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc sahf movsl scas mov repnz adc push pop imul ret in decb adc push pop imul mov repnz adc xor inc pop push orl iret fucomi repz adc dec push popa insl js xchg sahf test (bad) repnz or sub inc dec pop data16 mov iret fsub repz adc dec push arpl test (bad) rcr jmp and ss dec push arpl test lret out cli add cmp jae mov (bad) rcr ljmp cmp addr16 mov iret (bad) repnz push and imul mov repz adc push pop data16 mov iret add jmp and cmp pop push inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc jg xchg lahf stos mov into (bad) repnz adc dec push arpl xchg int in cld or sub inc dec pop arpl xchg lret in clc add sbb xor dec push popa insb ja mov (bad) loop stc add ss dec pop arpl test int3 xlat jecxz cli add cmp ja mov (bad) loop stc push adc push pop addr16 mov mov in repnz incl xor inc push pusha insl je (bad) mov int out idiv add adc and cmp addr16 mov ret into (bad) in testl xor outsl jp xchg pushf cmpsl mov leave rcr ljmp aaa inc dec push pusha imul cwtl add out sti add cmp pop addr16 mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov stos mov int3 fsub in testb sbb and dec pop addr16 mov mov hlt sti add sbb xor inc push pop pop data16 mov ror in cli add sub ds push add ja test mov repz pop and cmp pop addr16 mov rcr in sti push adc push pop popa insl jp xchg sahf stos mov lret xlat loop stc add sbb xor push pop push mov fsub repz adc dec push bound (bad) mov rcr jmp and ss dec pop fs mov int in sti pop adc sub jno mov int in sti pop adc sub fs mov int3 xlat loop sti add and dec push pop push (bad) lea mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov out cli push or aas dec push pusha push jbe orl rcl fsubp ljmp xor jb xchg iret fsubr hlt add pop and push arpl xchg rcr out std or pop sub inc dec pop arpl mov fucomp cmc add and pop data16 mov ftst lock pop adc sub outsl jl xchg sahf stos mov into (bad) icebp std or and cmp pop push pushf test ror loop testl cmp pop push mov (bad) repz pop and cmp pop addr16 mov rcr out decb adc sub gs xchg int3 xlat loop cli add aas dec push popa insl jp xchg sahf stos mov into ftst lock push adc xor dec push inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov bound test lret in stc add aas dec push arpl xchg int3 (bad) loop stc add aas dec push popa insb ja (bad) fwait add jecxz sti push adc push popa insb ja (bad) fwait cmpsb mov enter testl cmp ja mov aam jmp add sbb xor dec push popa insl js (bad) lcall ljmp cmp pop push orl clc add sbb xor push pop data16 test mov into fnclex jmp or adc inc push pop push js test ret in cli add push adc and cmp pop push lahf test fsub lock add sbb cmp pop imul mov int loope cli add cmp pop gs xchg inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov leave aam call sbb xor dec push popa imul cwtl mov (bad) icebp cli add sbb sub ss inc push pop push jge xchg pushf mov aad in idiv add cmp pop arpl jle xchg sahf stos mov ret lret (bad) loop clc add sbb es cmp je xchg mov out sti or and addr16 mov xlat loop testl cmp push pop fs (bad) mov rcr call and arpl xchg lret xlat loop stc add aas dec push popa push orl (bad) add cld pop adc xor push pop imul (bad) rcr jmp and push mov (bad) repz pop and cmp pop push mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov iret fucomi repz sbb sub pop gs jae mov lret loopne add add sbb sub pusha imul movsb scas mov repnz incl or inc dec pop addr16 mov iret (bad) repz push and cmp push pop imul popf test in std or sub insl js mov fsubrp repnz or push sub inc dec pop arpl orl aad in testb sbb popa insb js nop pushf test mov stc add inc dec push bound test ret into (bad) repz or dec push bound test enter clc add sbb xor dec push arpl test (bad) rcr out cli add cmp je mov rcr jmp and cmp hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc push pop push mov fsubrp testb sbb push pop imul fwait cmpsl mov leave aad in clc add sbb xor dec push popa insl jns nop pushf cmpsl mov int3 xlat loop stc add sbb xor dec push pusha insb ja cwtl movsb xchg scas mov out hlt cli add or cs inc inc dec push pop popa insl jae addb lods mov mov fsubp jmp idiv add adc sbb cmp pop arpl jbe orl scas mov ret aam loope out hlt cli add or sub dec push pop pusha data16 jae jg mov mov mov fsubp jmp clc incb adc sbb cmp pop arpl jbe (bad) mov scas mov ror aad loop out hlt sti add cmp push pop addr16 xchg mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov enter lock add sub aaa cmp pop addr16 mov mov fndisi(8087 call pop push adc and cs inc inc push pop gs test enter testl cmp push pop push mov (bad) loope cmc add adc sub cmp fs ja test stos mov mov fsub ljmp push sbb sub xor push pop imul xchg sahf test aad in testb push and pop push cltd movsb mov (bad) into (bad) lock add sbb cmp push arpl (bad) lea lret fsub jmp add xor inc dec dec push pop popa push mov scas mov ret aad loop out cmc sti add push adc das ss dec dec push pop arpl jbe mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc jl mov mov ret jecxz out cmc cld add movhps sub xor push pop bound jne (bad) mov scas mov rol aam loopne in repz add push adc and sub dec push pop pusha data16 jae jg mov vpaddusw repnz adc dec push pop arpl jbe (bad) mov scas mov ret aad loop out cmc sti add push adc and cs inc inc dec push pop pusha insl jae addb lods mov mov (bad) in repz incl or sbb and inc dec push pop pop imul test stos mov mov fsub jmp or push sbb inc dec pop pop push mov int loopne cmc add add arpl mov (bad) fucom icebp incb adc inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov xor inc dec push pop addr16 test stos mov mov fsubp jmp clc incl and inc dec push pop pop insw jae addb lods mov rol rcr loopne out hlt sti add push adc and das xor push pop bound jne (bad) mov mov fsubp jmp clc incl and inc dec push pop pop insl jae addb scas mov ror aam loop out idiv add adc push and xor ds dec push pop pop imul test stos mov mov fsubp jmp clc incl and inc dec push pop pusha insl je addl ret (bad) fsub jmp or push sbb sub add inc dec push pop pop imul test mov rol rcr loopne in repz add inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc or sub cmp dec push pop pop data16 jae addb lods mov rol aad loop out cmc cld add unpckhps sub xor push pop bound jne (bad) mov scas mov ret aad loop out cmc cld add adc sbb cmp dec push push pop arpl jbe orl mov mov fucom ljmp pop push and xor ds dec push pop pop imul test stos mov mov fsubp ljmp sbb and inc dec push pop pop imul test mov mov (bad) in repz incl or sbb es cmp dec push pop pusha insw je orl mov fucom jmp clc incb adc push and inc dec push pop pop imul test stos mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov fcomp in icebp clc incb and inc dec push pop pop data16 jae xchg (bad) fucomip cld pop adc sub cmp pop outsl adcl fucom bnd sahf test frstpm(287 out stc add sbb sub inc dec push pop imul scas (bad) jo fucomip cmc decl adc xchg popf cmpsl mov (bad) in stc add inc dec push pusha push orb dec pop jl xchg lahf test fsub pop sub inc dec push pop push jg xchg sahf test mov repnz push adc and cmp push pop imul mov (bad) into fsub in testl xor dec push pop push lcall (bad) out stc add aas dec push pop push lcall fucomip repz push adc and cmp push pop push jg xchg popf cmpsl mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov (bad) jecxz testb adc sub cmp pop outsb jns lea leave rcr out sti add aaa inc dec push pop push fwait cmpsb mov (bad) into fsub in idiv or push sub cmp push pop outsb js mov enter lock add inc dec push pusha push jle xchg pushf cmpsl mov (bad) jecxz testl xor outsl jns lea enter icebp sti add aaa inc dec push pop imul mov (bad) jecxz testl xor jo test mov repnz push adc and cmp push popa imul xchg mov into ftst out stc add aas dec push pop push sahf test mov lock add sbb sub jno test ret int loop cmc add adc sub dec inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov push pusha push jg xchg lahf test mov repnz push adc and cmp push pusha push jle xchg pushf cmpsb mov (bad) rcr in clc add and xor dec push pop data16 test ret loopne hlt decb adc xor push pop gs xchg ret int loop testb adc sub ds push pop addr16 test ror fsubrp repnz push adc and cmp push pusha imul xchg popf test mov out stc add aas dec push pop push fwait movsl scas mov in testl xor outsl jns lea int3 (bad) loopne cmc add or dec push pop data16 test ret loopne hlt decb adc xor inc push pop outsl jp mov int loope testb adc sub cmp push pop outsl jns lea lret (bad) inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov ljmp xor jo xchg (bad) iret fsub in testl xor push fwait movsl scas mov out stc add aas dec push pop push jg xchg sahf stos mov leave rcr call sbb push pop data16 test ror fucomip repz adc push pop outsl jp mov into (bad) in testl xor dec push pop addr16 test ret loope cmc decl adc sub dec push pop addr16 test ret into fsub in testb adc aas dec push pop insb ja mov enter repnz push adc and pop bound (bad) mov lret aad jmp add push and xor dec push pop imul mov (bad) in clc add aas dec push pop imul mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc xchg pushf cmpsl mov (bad) rcr in cli add sbb cmp push pusha push jle xchg sahf test fsub lock add sbb sub pusha push jle xchg popf cmpsl mov (bad) rcr in stc add sbb sub pusha imul xchg sahf test fsub icebp sti add cmp push popa insb ja mov enter icebp sti push adc xor inc dec pop outsl jp (bad) cltd movsb scas mov repnz or sbb push pop addr16 test enter repz or sbb inc dec push pusha push jg xchg popf add fucom repnz push adc and pop gs test ret int loope testb adc dec push pop data16 test ret int loop clc add inc dec push pop imul mov (bad) into fsub in clc add inc dec push inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc pop imul mov (bad) iret (bad) in clc add and xor push fwait movsl scas mov out clc add and xor dec push pop data16 test ror loopne cmc decl adc push pop outsl jns lea leave rcr jmp sbb pop bound mov leave rcr out sti push adc and cmp push popa imul xchg popf cmpsl mov (bad) in stc add sbb sub inc dec push pusha push jg xchg sahf test mov out cld push adc and cmp push bound mov lret jmp add adc sub ds push pop push popf cmpsl mov (bad) rcr in stc add sbb sub inc dec push pusha push jg xchg mov aad ljmp xor dec push pop push popf test mov lock inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov adc and pop bound mov lret call sbb push pop data16 test ret int loop testl xor push pushf cmpsb mov (bad) jecxz testl ss dec push pop push fwait movsl mov (bad) into fsub in testl cmp outsl jp xchg pushf cmpsb mov (bad) in clc add sbb cmp pop bound mov int3 xlat loope cmc decl adc aas dec push pop push pushf cmpsb mov (bad) into fsub in testl xor dec push pop addr16 xchg (bad) in stc add inc dec push pop push jle xchg pushf cmpsb mov (bad) jecxz clc add and inc dec push pusha push jle xchg popf cmpsl mov (bad) in cli add sbb sub popa imul xchg lahf test inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov icebp sti add cmp bound (bad) mov leave aam call sbb xor push pop data16 test (bad) rcr out cld push adc and pop outsl js lea xlat in cld push adc xor inc dec pop outsb jns lea lret xlat loope cmc decl adc sub cmp jno test ret into fsub in testl aaa inc dec push pusha imul xchg add aam call sbb xor inc dec pop outsb jns lea lret (bad) loope testb adc dec push pop addr16 test ror fucomip repnz push adc and cmp popa insb jbe mov rcr in stc add inc dec push pop imul mov (bad) loop testl xor dec push pop imul inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov jle xchg popf cmpsl mov (bad) jecxz clc add and xor dec push pop push lcall loope testb adc sub ds push pop data16 test ret loope testb adc sub cmp jno test ret int loope testb adc dec push pop push jg xchg mov aam jmp sbb push pop outsl jp mov lret add loop testl xor dec push popa imul xchg sahf test fucomip cmc decl adc sub dec push pusha imul xchg mov rcr out cld push adc and pop bound (bad) mov lret jmp sbb push pop outsl jp (bad) cltd mov (bad) loopne cmc decl adc sub cmp push pop data16 test ret into xlat loope testb adc hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cmp outsl jns mov rcr out decb adc sub ds push pop push fwait movsl mov (bad) jecxz clc add and xor push jle xchg popf cmpsl mov (bad) rcr out cli add cmp pop bound test ror fsubrp repz pop adc xor inc dec pop bound (bad) lea lret ljmp add cmp je mov (bad) rcr in stc add sbb sub arpl test ror fucomip repz pop adc dec pop outsb jp (bad) cltd movsb scas mov jmp add adc sub push sahf mov sub jno mov int mov lock sbb cmp push pop push cltd mov rcr out cli add sbb sub outsl jns inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov xchg mov leave rcr out cli add sbb sub pop push cltd mov aam out cli add (bad) loop cmc decl adc xor inc dec push pusha push jle xchg pushf cmpsb mov (bad) int loope cmc decb adc push pusha push jge xchg lcall fsubrp repnz add aaa mov sub jnp (bad) cltd mov imul xchg popf cmpsb mov (bad) into xlat loop testl xor push ret add cmp bound mov (bad) rcr jmp sbb xor inc dec pop arpl orb enter lock add daa ss dec jg mov push dec jbe in xor push jle xchg popf test mov out stc add aas dec push pop push pushf cmpsb mov (bad) in add add pop inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov jne mov rcr out std or push pop andl inc push pop gs test (bad) rcr out std or push sub imul ss push pop push orb fucomp hlt decl inc popf int3 or jno in push bound jne (bad) pushf test ror in cld or and cmp pop data16 xchg lret jmp sub popa insb ja mov rcr jmp and cmp push pusha imul cwtl mov orl enter out clc add push outsw xchg (bad) out std pop adc xor jne mov in testl cmp pop imul vpaddusb repz and cmp pop add nop pushf cmpsl mov leave aam ljmp hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov and cmp pop addr16 mov rcr call and pusha imul cltd movsb scas mov cmc add inc push pop push mov hlt decb adc xor inc push pop outsb js mov mov mov fsubp jmp idiv add adc sbb cmp pop arpl jbe orl scas mov ret aad loop out cmc cld add insl ja mov mov mov fucom jmp or adc xor push pop popa push mov scas mov ror aam loope out hlt cli add or sub dec push pop addr16 test ror fucom icebp sti push adc and cmp pop outsb jp test mov mov jmp sbb sub xor hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov dec dec push pop popa push mov scas mov ror (bad) in testl ss dec pop gs mov iret (bad) lock pop adc sub ds push pop push popf test mov fsubp ljmp pop sbb cmp pop fs ja test stos mov mov fucom jmp sbb xor dec push pop imul xchg mov aam in cmc decl push and xor push pop data16 xchg (bad) rcr in cli pop bndstx xor dec push pop addr16 xchg rol rcr loopne in repz incl and inc dec push pop pop fs ja test stos mov mov fldl in icebp idiv add adc sbb cmp dec push pop push jl mov scas mov rol aam mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov loopne in repz add or sub dec push pop pop data16 jb jg mov mov mov fsubp ljmp push sbb xor jno mov ror loopne in repz add or sbb es cmp inc dec push pop pop imul test stos mov mov fsubp jmp idiv add adc sbb cmp pop arpl jbe (bad) mov scas mov ror aam loope out hlt sti add push adc and sub dec push pop pusha data16 jae jg mov mov lret out cld pop adc dec push pop push (bad) mov lret xlat loopne lock or add push pop push sahf stos mov ror fucomip repnz incb and xor cmp pop fs ja test mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov nop xchg popf mov ret leave rcl fsub jmp or adc xor push pop bound jne orl rol aam loope out hlt cli add or cmp dec push push pop arpl jbe orl mov mov fsub jmp or push sbb cmp dec push push pop arpl jne (bad) mov scas mov ret aad loope out hlt cli add or cs push pop popa outsb je addb lods mov rol aam loope out hlt sti add push adc and sub dec push pop popa insl je addl rol add fndisi(8087 call or adc xor inc dec dec push pop popa outsb je addl rol aam loop out cmc cld add push adc xor mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc dec dec push pop bound jne orl ret xlat fsubp jmp idiv add adc sbb cmp pop fs ja test stos mov mov fucom ljmp push sbb cmp pop arpl ja orl scas mov ret leave iret (bad) fsub jmp or push sbb cmp dec push push pop arpl jbe orl scas mov ret aad loop out cmc cld add push adc xor inc dec dec push pop popa insl je addb lods mov rol rcr loopne in repz add or sbb es dec dec push pop popa insl je addb lods mov rol rcr loopne in repz add or cs inc inc dec push pop popa outsb je addl rol aam mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc fnop out hlt sti add push adc and cs inc inc dec push pop pusha insw jae jg mov mov mov fsubp jmp idiv add adc sbb cmp pop arpl jbe orl mov mov fsub ljmp push sbb sub ss dec dec push pop bound je addl ror fsubrp repz adc and pop addr16 test ret int jecxz lock add adc sbb sub dec push bound addb lods mov mov (bad) in repnz incl das cmp pop outsb jns xchg sahf test out std or and ss dec push bound orl int3 (bad) loope cmc decl adc sub inc inc dec push pop popa outsb je addl mov loopne inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc in repz incl adc push pop data16 orb enter out sti pop bndldx push popa imul xchg mov (bad) loope stc add adc dec push fs jae mov rcr loopne in repnz incl or sbb and inc dec push pop pusha insl jae addb lods mov mov (bad) jmp clc incb and xor ds dec push push bound mov mov mov fucom ljmp push sbb sub ss dec dec push pop bound jne (bad) add test leave iret (bad) fsub jmp or push sbb sub xor outsb jp nop fwait test mov ljmp pop and inc dec push pop pop imul xchg mov mov (bad) jmp inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc clc incb and xor ds dec push push pop arpl jbe orl mov mov fucom jmp or push sbb sub xor push pop popa push xchg lods mov rol rcr loopne testl xor dec push pop popa insb js mov lret xlat loop cmc add inc dec push pop imul mov (bad) rcr jmp adc sub xor inc inc dec push pop pusha insl jae addb lods mov mov loopne in repz add pop or sub dec push pop popa insl je addl ror aam loope out hlt sti add push adc and sub dec push pop insl jne (bad) mov mov mov fucom ljmp push sbb cmp dec dec push pop bound jne mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov (bad) mov scas mov ror aam loope out hlt sti add or sub dec push pop pusha data16 jae addb lods mov mov (bad) jmp clc incb and inc dec push pop pop imul test stos mov mov fucom ljmp pop sbb cmp pop fs ja orl scas mov ret aad loop out cmc cld add unpckhps and das xor push pop bound jo jge mov mov mov fucom ljmp push sbb cmp pop arpl jbe (bad) mov scas mov ret (bad) fucom ljmp push sbb sub aaa cmp pop fs ja orl mov mov fucom ljmp inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov push and xor ds dec push pop pop imul test stos mov mov fsubp jmp idiv add adc push and xor ds dec push pop pop imul test stos mov mov fsubp jmp idiv add adc sbb cmp pop arpl jbe orl mov mov fucom ljmp pop sbb cmp pop arpl jbe orl scas mov ret leave add xlat fsubp ljmp pop push and xor ds dec push pop pop imul test stos mov mov fsubp in repnz incl daa sub dec push pop pusha data16 jb jg mov mov mov (bad) in repz incl or sbb and inc dec push pop pop imul test stos mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov (bad) lret fucom ljmp pop sbb dec pop outsb js lea iret (bad) loopne idiv or sub pop fs jbe orl into aam loope in hlt cli add or sub cmp inc dec push pop pusha data16 ja mov leave aam ljmp cmp jbe mov iret ftst out stc add sbb cmp arpl test lods mov rol aam loopne in repz add or sub cmp inc dec push pop pop insw ja nop xchg mov fcomp in clc add pop and cmp push pop push jge xchg mov iret (bad) loope clc add adc dec pop bound jle xchg popf test mov cmc decb adc sub push pop bound jne (bad) mov scas mov ret inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov fndisi(8087 call pop push adc and cs inc inc dec push pop popa push mov scas mov rol (bad) repz add or sub dec push pop pop gs jb jg mov mov mov fsubp jmp idiv add adc sbb cmp dec dec push pop bound jne orl leave aad out decl adc sub aas dec push add outsl jns xchg mov mov fsubp jmp clc incb adc push and xor cmp pop arpl ja orl scas mov ret aad loop out cmc sti add push adc and sub dec push pop pop gs jb jle mov mov mov andl jae out push aaa inc dec pop outsl jp mov (bad) loop inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov push adc sub inc push pop addr16 mov rcr jmp and bound mov int out sti or push sub cmp push pop push mov xlat loop stc add sbb xor push bound xchg int3 xlat jecxz sti pop adc sub inc dec pop gs mov (bad) lock add cmp addr16 xchg lret ljmp cmp pop addr16 mov rcr call push sub dec push pop push pushf cmpsl mov lret in testl cmp dec push pusha imul cwtl movsb scas mov cmc add dec push popa insl js (bad) pushf cmpsl mov leave aam jmp add dec push pop imul mov testb sbb cmp pop push orb mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov rcr jmp and cmp pop push mov fucomp hlt add push and data16 mov (bad) repnz adc dec pop gs mov into (bad) lock pop adc sub inc dec pop arpl xchg lret in stc add sbb xor dec push bound test int3 fsub out clc add inc dec push pop pop addr16 mov mov rol (bad) loope clc add xor inc push pop outsl jns xchg pushf test mov ret leave rcr jmp and pop bound mov rcr out add adc sub outsb jns lea rcr in cli add cmp pop gs xchg (bad) rcr call pop sub aas dec push popa insb ja lea int3 fsub in inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov repnz incl cmp pop imul xchg sahf test (bad) jecxz stc add sbb sub cmp pop push xchg mov xlat fsubp jmp sti push adc xor inc dec push pop arpl test leave (bad) loop cli add cmp jne mov into (bad) icebp cld pop adc es inc dec pop addr16 mov fsub lock pop adc push bound test lret (bad) loope testl cmp pop outsb jp (bad) lcall loopne cmc add and cmp pop imul (bad) rcr ljmp cmp pop imul mov cmc add and cmp pop imul (bad) into ftst icebp clc incb sub inc dec pop outsl jbe xchg lret loopne testb mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov or cmp push pop push jle xchg pushf mov rcr out sti pop adc push bound xchg rcr out add and cmp jnp xchg sahf test loop clc add sbb cmp push outsl jle xchg lahf stos mov lret in stc add cmp jne mov shl in clc add sbb xor push pop imul cltd movsl mov enter testb sbb cmp pop outsl jnp nop popf stos mov lret aad jmp sbb cmp pop data16 mov int in cld pop adc sub inc dec push popa insb ja lea lret in clc add sbb xor ja mov rcr jmp add sbb pusha imul lcall jmp add and cmp pop imul inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc (bad) rcr call and cmp pop push mov (bad) repnz adc sub inc dec pop gs mov iret (bad) repnz or dec pop gs mov int jecxz stc add aas dec push popa insb ja (bad) lcall in clc add sbb xor dec push popa push jg xchg cmpsl mov leave fsub icebp decl pop and cmp pusha jbe mov aad ds or pop nop xlat and in stc add inc dec push pop addr16 test ror fucom icebp cli add sbb sub aas dec push pop addr16 test ror fucomip repnz push adc and aaa inc dec push pop imul lods mov lret aad jmp sbb cmp push popa imul xchg pushf cmpsl mov (bad) iret (bad) in testl xor push pop arpl hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov js mov (bad) rcr in stc add ds push pop addr16 xchg ret fucomip repz or sbb xor inc dec pop bound mov iret (bad) in testl xor push pop outsb js mov enter lock add sbb sub pop push lcall loopne cmc decl adc dec pop bound lea add aad call sbb cmp push popa imul xchg popf cmpsl mov (bad) jecxz testl xor outsl jns mov lret call sbb cmp push popa imul xchg lahf stos mov int3 (bad) loope cmc decb adc sub dec push pop push orl out sti add cmp push pushf cmpsb scas mov jmp mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cmc decl adc push pop data16 test ror loopne hlt decb adc and pop bound orb leave rcr out sti push adc and pop bound mov (bad) rcr in stc add aas dec push pop push pushf cmpsb mov (bad) into fsub in testl xor dec push pop data16 test ror fucomip repz or sbb xor inc dec pop bound mov rcr jecxz testl xor inc push pop outsl jp mov lret call sbb xor inc dec pop arpl orl in stc add aas dec push pop push pushf cmpsb mov (bad) into fsub jmp decl adc sub dec push pop data16 test ror fucomip repz pop adc xor inc dec pop arpl hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov js mov enter repz adc dec push pop imul mov (bad) in clc add inc dec push popa imul xchg sahf test mov icebp sti pop adc xor inc dec pop bound orl int loop testl ss dec push pop imul mov (bad) rcr in cli add sbb add cmp push bound lea lret aad jmp sbb xor inc dec pop bound orl lret jmp sbb xor inc push pop outsl jns mov lret jmp sbb push pop outsb jns (bad) cltd mov frstpm(287 lock add sbb sub pusha push jg xchg sahf test fsub lock add cmp pop popa insb jbe mov lret ljmp mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc xor push pop outsb js lea lret jmp sbb xor inc dec pop outsl jns (bad) lcall loope cmc decl adc push pop outsb js lea lret jmp sbb pop arpl orl repnz push adc xor inc push pop add test ret loopne cmc decl adc push pop data16 test enter hlt decl adc dec push pop push jle xchg popf cmpsl mov (bad) rcr call sbb data16 xchg (bad) int jecxz testl xor push jle xchg popf cmpsl mov (bad) jecxz testl xor imul mov (bad) rcr in cli add sbb cmp pop bound orl inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov in stc add inc dec push pop imul mov (bad) jecxz testl xor dec push pop data16 test ror fucomip repz pop adc xor inc dec push popa imul xchg lahf stos mov leave rcr out sti add aaa inc dec push pusha push jg xchg popf cmpsl mov mov lock add sbb sub inc dec push pop push fwait cmpsb mov (bad) into fsub in testb adc dec push pop data16 test ret loopne hlt decb adc xor inc dec pop bound (bad) mov leave rcr call sbb cmp push popa imul xchg sahf cmpsl mov (bad) rcr out cld pop adc xor inc push pop outsb js lea int3 (bad) loopne cmc add adc sub cmp jo test (bad) into ftst out stc add sbb sub popa insb inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov jbe mov int loope testl xor push lcall loop testl ss dec push pop push popf cmpsb mov (bad) rcr out sti add aaa inc dec push pusha push jle xchg popf test mov out add add sbb sub pusha push jg xchg popf test mov lock add cmp addr16 mov lret ljmp xor push pop outsl jp mov int3 xlat loop clc add and xor push jle xchg sahf test mov lock add cmp push popa insb ja mov lret jmp sbb xor inc dec pop fs ja mov leave rcr jmp sbb push pop addr16 test ror loope testb adc hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov xor dec push pop push popf cmpsl mov (bad) rcr out sti push adc and pop arpl orl call sbb xor inc push pop outsl jp (bad) cltd mov (bad) icebp cli add sbb cmp add je mov rcr out pop adc sub cmp jo test ret loop clc add sbb cmp pop bound mov (bad) rcr in cli add cmp push popa imul xchg lahf test fsubrp repz pop adc xor inc dec pop arpl (bad) mov leave rcr call sbb xor inc push pop outsl jp mov lret aad ljmp xor inc dec pop arpl (bad) mov inc push pop data16 mov decl adc sub cmp push pop outsb js mov hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov enter lock add sbb sub inc dec push pop push lcall loop testb adc sub cmp dec pop arpl (bad) mov (bad) rcr in stc add ds push pop outsw jns lea lret call sbb cmp push pusha push jge xchg fwait movsl scas mov ljmp xor inc dec pop bound mov enter lock add sbb sub pop imul mov out stc add inc dec push popa imul xchg mov aad jmp sbb xor inc dec pop arpl orl out stc add sbb sub add push pusha push jge xchg pushf cmpsb mov (bad) into fsub in testb adc sub cmp dec pop arpl orl in stc add inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc and xor addr16 test ret loopne hlt std pop adc xor inc push pop outsl jp mov lret aad ljmp xor inc dec pop outsb jns mov int3 xlat loope cmc add adc push pop addr16 xchg ret loope cmc decl adc dec pop arpl orl leave rcr out cld push adc and cmp push popa imul xchg sahf test mov out clc add adc dec push pop data16 test ret loopne hlt decb adc xor inc dec pop arpl orl in stc add sbb sub push bound mov leave rcr call sbb pop data16 test (bad) in stc add sbb sub arpl (bad) mov hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov add sbb sub pop push jg xchg popf cmpsl mov (bad) rcr out sti push adc and cmp push popa insb jbe mov enter lock add aaa inc dec push pusha imul popf test mov out stc add pop and xor push fwait cmpsb mov (bad) in cli push adc and push popa push jg xchg popf cmpsl mov (bad) rcr in clc add and xor dec push pop addr16 xchg (bad) iret fsub in testb adc dec push pop data16 test ror fucomip hlt decb adc xor inc push pop outsb js lea ret loopne hlt decb adc dec pop outsb js mov lret aad jmp sbb push pop outsl jns mov lret aad jmp sbb xor inc push inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc pop outsl jns mov lret jmp sbb xor inc dec pop outsl jp xchg pushf cmpsb mov (bad) rcr in cli add sbb sub pop imul mov out cli add sbb cmp outsb jns lea int3 (bad) out clc add inc dec push pusha push jle xchg sahf test mov lock add cmp push popa imul xchg mov shl jmp decl adc sub cmp jo test ror loope cmc decl adc dec pop outsb js lea int3 (bad) loopne in testl xor dec push pop addr16 test ret into fxam out cli add sbb xor jno test (bad) rcr out sti push adc and push bound (bad) mov lret call inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov sbb dec pop arpl (bad) lea lret aad jmp sbb xor inc dec pop outsb jns mov lret jmp sbb pop outsb js mov lret (bad) loopne cmc decl adc sub cmp jo test ror loopne cmc add adc dec push pop addr16 test ret int loop testb push and xor dec push pop push pushf cmpsb mov (bad) iret ftst out stc add sbb pop push pushf cmpsl mov (bad) rcr out std or push sub add pop push test jecxz testl xor dec push pop push sahf test fsubr repnz pop adc xor inc dec pop outsb js mov leave rcr call sbb push pop push lcall jecxz mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov stc add sbb sub inc dec push pop imul mov (bad) into fsub in testb adc sub dec push pop push fwait movsl scas mov in clc add and xor addr16 xchg ret loope cmc decl adc push pop outsl js mov lret aad ljmp xor push pop outsl jns lea lret jmp sbb xor inc dec pop bound mov rcr out cli add sbb sub inc dec push pop push xchg sahf test mov out cli add sbb sub inc dec push pusha push jle xchg pushf cmpsl mov (bad) in cli add sbb das cmp gs test ret loopne cmc add adc sub dec push pop push jle xchg pushf cmpsb mov (bad) shll push adc push bound (bad) mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov scas mov cmc add and cmp push xchg lock or dec push xorb mov (bad) lock add aas dec push pop addr16 mov ljmp xor push pop outsb js mov (bad) rcr out stc add aas dec push pop addr16 test mov lock add pop and inc dec push pop addr16 test ror fucomip hlt decb adc dec pop bound orl fucom lock add sbb sub inc dec push pop addr16 test ror loope cmc decb adc xor inc dec pop bound mov rcr in clc add push and xor dec push pop outsl jns mov lret out cld push adc and cmp push popa imul xchg popf cmpsl mov (bad) loop mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov testb push and inc dec push popa push jle xchg pushf cmpsl mov (bad) rcr out stc add inc dec bound test ror fsubrp repz pop adc xor inc push pop gs test ret loopne hlt decl adc dec pop bound mov rcr out cli add sbb sub inc dec push pop imul mov (bad) rcr in clc add aas dec push pop push pushf cmpsb mov ret into add in stc add aas dec push pop imul scas mov in testb adc inc push pop outsb js mov enter icebp sti add ss dec push pop imul scas mov jmp decl adc sub cmp push pop outsb js mov enter lock add sbb sub addr16 mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov jnp (bad) cltd mov xlat loopne hlt decb adc xor inc dec pop bound mov (bad) rcr in stc add aas dec push pop push fwait cmpsb mov (bad) into (bad) in clc add and aaa inc dec push pusha push jle xchg pushf cmpsl mov (bad) in cli add sbb sub pop push jg xchg popf test mov lock add cmp push bound (bad) mov lret aad jmp push and inc dec push pop push fwait movsb mov (bad) into (bad) in testb push and xor imul mov (bad) jecxz clc add and xor imul mov in testl xor dec push pop addr16 test ret fucomip hlt decb adc xor inc dec pop data16 xchg (bad) rcr in cli add mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov sbb sub pop push jle xchg fwait movsl mov (bad) int loope testl xor dec push pop data16 test ret int loop testb adc sub cmp push pop outsl jns lea enter icebp sti add cmp push pusha push jle xchg popf test mov lock add sbb cmp pop bound mov rcr out cli add sbb and cmp arpl (bad) mov lret aad jmp sbb push pop outsl js lea lret jmp sbb xor inc push pop outsl jp nop fwait cmpsb mov enter cmc decl push and xor push jg xchg lahf test frstpm(287 lock adc sub dec push pop push pushf movsl scas mov in testb push and xor imul mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc iret (bad) in testl xor push pushf cmpsb mov (bad) in clc add and xor addr16 xchg (bad) into fsub in testl ss dec push pop imul mov (bad) rcr in cli add sbb sub pop imul scas mov in testl xor jo jl nop lcall loop testl xor push pop outsl jns mov lret aad jmp sbb xor push pop outsb jns lea lret aad ljmp xor push pop outsl jns mov lret call sbb xor inc dec pop arpl orl call sbb cmp push bound mov lret jmp push sub cmp mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov data16 test (bad) in clc add inc dec push pusha push orb lret ljmp xor imul mov leave rcr jmp sbb push pop outsb jns lea lret (bad) loopne cmc decl adc sub dec push pop imul mov out sti add cmp push popa insb ja mov lret aad ljmp xor push pop addr16 xchg ret into fsub out clc add sbb cmp pop data16 xchg (bad) iret (bad) out clc add inc dec push pusha push jle xchg lahf test fucomp repnz pop adc xor inc dec pop outsb js mov int3 (bad) loopne cmc decl adc push pop outsl jp mov int3 xlat loop testl inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc dec push pop imul mov out cli add sbb sub pusha imul xchg popf cmpsl mov enter icebp cld or push sub ds push pop push sahf test fucomip hlt decl adc sub dec push pop imul mov cmc add push and pop addr16 mov xlat loop stc add ds push pop imul mov fucomp hlt add adc dec push bound mov rcr out sti pop adc xor dec pop push push fsubrs (bad) dec leave (bad) mov das pop test jmp inc push pop push orb iret (bad) icebp sti or and xor outsl jge xchg lahf test jecxz sti or sbb push outsl jge xchg movsb scas mov lock push adc and push pop push inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc jl xchg popf stos mov leave rcr out cld push adc and cmp pop bound test (bad) rcr call sbb das cmp arpl test (bad) rcr out cli push adc and pop data16 mov rcr out cld or sub push jg xchg sahf test mov cmc add adc sub push jge xchg lahf test fucom cmc decl adc sub inc push pop imul xchg popf stos mov lret jmp push sub dec push pop data16 xchg enter lock add cmp pop gs test ret jecxz testb pop and outsb jns lea (bad) lock add sbb pop outsb jl nop fwait movsl scas mov in cli add sbb cmp pop outsl js inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov int loop clc add inc push pop fs orl int jecxz testl addr16 mov into (bad) in cli add inc dec pop arpl orl lret rcr fsubp jmp clc incb adc sbb cmp pop bound jne (bad) mov scas mov ror aam loope in hlt cli add or sub cmp inc dec push pop pop imul test stos mov mov fsub jmp or adc xor push pop popa insl jae addb lods mov mov fsubp jmp idiv add adc sbb cmp pop arpl jne (bad) mov scas mov roll iret aad loope out hlt sti add or sub dec push pop pop gs mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc insb jb jg mov mov mov fucom ljmp push sbb sub xor push pop popa outsb je addb lods mov rol rcr (bad) in repnz incl and xor cmp pop arpl jbe orl scas mov ror aam loope out hlt sti add or sub dec push pop pop gs jb jg mov mov mov fucom jmp or push sbb sub ss dec dec push pop bound jne mov lret jecxz sti add adc sub ss push pop fs ja test test lret fucom jmp or adc xor push pop add outsl jne (bad) mov scas mov rol aam loopne out hlt cli add or sub mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov dec push pop pop gs jb jg mov mov mov fucom ljmp push sbb sub ss dec dec push pop bound jne (bad) mov scas mov rol rcr loopne in repz add or sbb and inc dec push pop pop data16 jb jg mov mov mov fucom ljmp push sbb sub xor push pop bound jne orl ret aad loope out hlt cli add or sub dec push pop pusha data16 jae jg mov mov mov fsubp jmp idiv add adc sbb cmp pop bound jne (bad) mov add iret aad loope out hlt sti add push adc and cs inc inc dec push pop pusha insw jae jg mov mov mov hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov xlat fsubp ljmp push sbb cmp dec dec push pop bound jne (bad) mov scas mov rcr out stc add sub cmp inc dec push pop pop imul test stos mov mov fsubp jmp idiv add adc push and xor cmp pop fs ja orl mov mov fsub jmp or pop sbb cmp pop arpl jbe orl scas mov ret leave rcl fsub jmp or push sbb sub xor push pop arpl jbe (bad) mov mov fnop out repz add or sbb es cmp inc dec push pop pop data16 jb jg lea mov (bad) out hlt cli add or sub dec push pop pusha insw jae addb inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc lods mov mov loopne in hlt cli add or sub dec add popa push xchg scas mov rol aam loope in hlt cli add push adc and cs push pop bound jne (bad) mov mov mov fsub jmp or adc xor push pop bound jbe (bad) mov scas mov ret aad loop out cmc sti add push adc xor inc dec dec push pop popa outsb je addl ror aam loope out hlt sti add push adc and cs inc inc dec push pop pusha insl je addb lods mov rol aam loope in hlt cli add or sub dec push pop pusha insw jae addb lods mov mov (bad) in repnz incl or sub cmp inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov push pop pop data16 jb jg mov add rcr loopne in repz add or sub cmp dec push pop pusha insw jae addb lods mov rol rcr (bad) in repz incl or sub cmp inc dec push pop pop data16 jae addb scas mov rol aam loopne in hlt cli add or sub dec push pop pusha insl je addb lods mov rol aam loope in hlt sti add push adc xor pop popa imul mov leave aam icebp cld or sbb pusha imul lahf lods mov push push sub dec push pop push jle xchg mov xlat loope testl cmp pop data16 mov lret (bad) loop cli add inc dec push pop addr16 addl fucomip repz inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov or and cmp inc push pop data16 test ret int loope cmc add adc dec push pop imul test (bad) in clc add sbb cmp push pop addr16 test ret iret fsub in clc add sub cmp inc dec push pop pop gs jb jg mov mov mov fsubp jmp idiv add adc sbb cmp pop fs ja test stos mov mov fsubp ljmp pop sbb cmp pop arpl jbe orl mov mov fucom jmp or push sbb sub xor push pop bound jne (bad) mov mov (bad) jmp clc incb adc push and xor cmp pop arpl jbe orl scas mov mov hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc rcl fsub jmp or push sbb sub xor push pop popa push mov scas mov rol aam loopne in repz add or sbb es cmp inc dec push pop pop gs jb jg mov mov in repnz incl and inc dec push pop pop fs ja test stos mov mov fucom ljmp push sbb sub xor push pop bound jne orl rol aam loopne out hlt cli add or sub dec push pop pusha data16 jae jg mov mov mov fsubp ljmp pop sbb cmp pop imul test stos mov mov fucom jmp or adc xor cmp dec dec push pop arpl jbe mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc jl mov scas mov rol aam loope in repz add or sub cmp inc dec push pop pop imul test stos mov mov fsubp jmp clc incb adc push and xor cmp pop arpl jbe orl scas mov ret aad jecxz out idiv add unpckhps and cs push pop popa insl je addb lods mov mov fsubp jmp clc incb adc push and xor ds dec push push pop fs jbe orl scas mov ret aad loope out hlt sti add or sub dec push pop pusha insw jae addb lods mov mov fsubp jmp idiv add adc sbb cmp dec dec push pop bound add orl mov mov fsub jmp inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov or adc xor inc inc dec push pop pusha insw jae jg mov mov mov (bad) jmp clc incb adc sbb cmp pop arpl jbe (bad) mov scas mov rol aam loopne in repz add or sub dec push pop pop imul test stos mov mov fucom jmp or push sbb sub xor push pop bound jne (bad) mov enter testb adc inc inc dec push pop arpl test mov ret leave iret (bad) fsub ljmp pop sbb cmp pop data16 test vpaddusb jmp add adc and aaa aas inc dec push pop pop gs add xchg lods mov mov (bad) jmp clc incb and xor cmp mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc inc dec push push pop arpl jbe (bad) mov scas mov leave aam in idiv add movhps sub xor push pop popa push xchg lods mov rol rcr loopne in repz add or sub cmp inc dec push pop pop imul test stos mov mov fucom jmp or adc xor push pop bound jne (bad) mov scas mov rol rcr loopne in repz incl or sbb and inc dec push pop pop fs js test stos mov mov fsub jmp or adc xor push pop pusha insl je addb lods mov rol xlat add lock add adc sbb cmp pop bound jne (bad) mov scas mov rol aam loope in repz mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc cli add or sub dec push pop pop data16 jb jg mov mov mov fucom ljmp push sbb sub xor push pop bound jne (bad) mov scas mov rol fsub repnz or sub dec push pop pop data16 jb jg mov mov mov fsubp jmp idiv add adc sbb cmp pop arpl jbe (bad) mov scas mov ror aad loope out hlt sti add push adc and cs inc inc dec push pop pusha insl jae addb lods mov mov (bad) in repnz incl and dec pop add insb jae jg mov mov mov (bad) jmp clc incb and xor ds dec push pop pop imul test stos inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov mov fucom ljmp push sbb sub ss dec dec push pop bound jne (bad) mov scas mov ret aad loop out cmc cld add unpckhps and das xor push pop popa push xchg lods mov rol aam loope out hlt sti add push adc and sub dec push pop pusha insw jae addb lods mov mov (bad) in repnz incl and inc dec push pop pop imul test stos mov mov fucom ljmp push sbb cmp dec push push pop arpl jbe orl scas add (bad) fucom ljmp push sbb sub xor push pop bound jne (bad) mov scas mov ret aad loop out cmc sti add push adc and cs inc inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc inc dec push pop pusha insl jae addb lods mov mov loopne in repz add or sbb es cmp inc dec push pop pop imul test stos mov mov fucom ljmp pop sbb cmp pop arpl jbe orl scas mov ret aad loop out cmc sti add push adc xor push pop imul ret into (bad) out hlt cli add bndldx push pop arpl jbe orl scas mov ret aad loop out cmc cld add bndldx xor cmp insb jb mov xchg fwait movsb mov ret lret in clc incb adc sbb cmp pop arpl jbe orl scas mov ret aad loop out hlt sti add push adc and sub dec push pop pusha outsw jns inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc nop pushf cmpsb lods mov rol aam loopne in hlt cli add or sub dec push pop pusha data16 jae addb lods mov mov (bad) in repnz add or sbb es cmp inc dec push pop pop gs jb jg mov mov mov fsubp jmp clc incb adc push and xor ds dec push pop pop imul test stos mov mov fsubp jmp clc incb adc push and inc dec push pop pop imul test stos mov mov fsubp jmp idiv add adc sbb cmp inc dec push push pop imul mov mov fndisi(8087 out hlt cli add or sub dec push pop pusha insw jae addb lods mov mov (bad) in repnz incl es cmp inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc dec push pop pop imul test stos mov mov fsubp ljmp pop sbb cmp pop fs jns mov ret leave rcl fsub jmp or adc xor inc inc dec push pop pusha insw jae addb lods mov mov (bad) jmp clc incb adc sbb cmp pop bound jne (bad) mov scas mov rol aam loop out hlt sti add or sub dec push pop pop data16 jb jg mov lods mov mov fsubp jmp (bad) or push sbb sub ss dec dec push pop bound jne orl rol rcr loopne in repz incl or sbb and inc dec push pop pop imul test stos mov mov fucom jmp inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov idiv add unpckhps and cs push pop popa outsb je addl ror aam loope in hlt cli add or sub cmp inc dec push pop pop imul test stos mov mov fsubp jmp idiv add adc sbb cmp pop bound jne (bad) mov scas mov rol aam loopne in repz add or sub dec push pop pop gs jb jg mov mov mov fucom ljmp adc sbb cmp pop arpl jbe orl scas mov ret aam loope out hlt cli add or sub dec push pop pop gs jb jg mov mov mov fsubp ljmp pop sbb cmp dec dec push pop bound jne inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov (bad) mov scas mov rol aam loope in hlt cli add or sub cmp inc dec push pop pop imul test stos mov mov fucom jmp or push sbb sub ss dec dec push pop bound jne orl rol rcr loopne in repnz incl xor outsl jp nop pushf mov (bad) iret (bad) repnz or sbb and inc dec push pop pop imul test movsl stos mov ror loopne repnz or sbb xor ds push pop data16 jae test mov rol rcr (bad) in repnz incl and inc dec push push pop imul test stos mov mov fucom jmp or sbb xor bound jne (bad) mov scas mov ror mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov into aam loope out hlt cli add or sub dec push pop pop gs jb jg mov mov mov fucom ljmp pop sbb cmp dec dec push pop bound jne (bad) mov scas mov rol aam loopne in repz add or sbb and inc dec push pop pop imul test stos mov mov fucom ljmp push sbb sub xor push push pop arpl jbe orl scas mov ror aam loope in hlt cli add or cmp dec push push pop arpl jbe orl scas mov ret lret fucom jmp or push sbb sub ss dec dec push pop bound jne (bad) mov scas mov ror aam loope out cmc sti add push adc xor inc dec dec push pop popa addr16 mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc outsb je addl inc dec push popa insb jbe mov (bad) int loopne cmc add adc sub cmp pop gs test in stc add pop and xor outsl jp lea enter repnz push adc ds dec push push pop arpl ja orl mov jmp incb adc stos mov leave rcrl jbe mov add fucomip testb sbb cmp pop imul mov testl cmp pop push lahf lods mov out cli pop adc sub dec push popa insb ja mov rcr ljmp cmp push pop push sahf test mov testl dec push pusha imul lcall jmp and cmp pop imul mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov rcr call and data16 mov iret (bad) repz pop and cmp pop imul (bad) rcr out decb adc dec pop addr16 mov rcr ljmp cmp data16 mov int3 ftst lock pop adc sub outsl jnp xchg sahf test out cld or sub inc add gs mov fxam lock pop adc sub inc dec pop gs mov iret (bad) icebp cld pop adc xor pop imul test stos mov mov fsubp jmp idiv add adc push and xor ds dec push push pop fs ja test stos mov mov fsubp ljmp pop push and xor cmp pop imul mov call mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov repnz adc push and cmp push pop pop data16 jb jg mov mov mov (bad) jmp clc incl and inc dec push pop pop data16 jb jg mov mov mov (bad) in repnz incl and inc dec push pop pop imul test lods mov mov fchs out repz add or sbb es cmp inc push gs test rol aam loope in hlt cli add push adc and cs inc inc dec push pop pusha insl jae addb lods mov mov (bad) jmp clc incl and inc dec push pop pop imul test aam ljmp sub aaa cmp pop arpl jbe orl scas mov ret lret fucom jmp or push sbb mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov and das xor push pop bound jne orl rol aam loope in hlt cli add push adc and sub dec push pop pusha insw jae addb lods mov mov (bad) in repnz incl and inc dec push pop pop imul test pop sub jae xchg pop jb aad out cli push adc pop gs mov rcr out decb push and imul mov sti push adc sub inc dec pop push mov loope stc adc sub inc push pop addr16 mov rcr jmp and cmp popa insl js xchg popf test out decb adc push pop push adcl fxam repnz pop and cmp push pop insb js nop pushf test mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov ror in std or pop sub inc push pop imul mov xlat loop testl xor jno test ret loope cmc decl adc sub cmp push pop outsb js mov leave rcr call sbb pop bound mov rcr out sti push adc and cmp push pusha imul xchg sahf test mov out clc add and xor push pushf cmpsb mov (bad) into (bad) in testb adc inc push pop data16 test (bad) jecxz testl xor push lcall loop testb adc dec push pop push orb lret jmp push daa xor push pop outsl jns mov int3 (bad) loopne hlt decb adc xor inc dec pop fs mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov jns (bad) lcall (bad) out stc push adc and pop outsl jp (bad) lcall in clc add inc dec push pop imul mov icebp sti push adc and pop data16 xchg (bad) rcr jmp push sub ds push pop imul mov leave rcr out sti pop adc and pop arpl ss mov imul lods mov leave rcr out cld push adc and cmp xchg (bad) into fsub in cmc decl adc sub cmp push pop outsb js mov enter icebp cli add sbb sub inc dec push pusha push jge xchg fwait movsl scas mov ljmp das cmp push popa imul xchg pushf cmpsb mov (bad) into xlat loope testb adc sub cmp push pop data16 addl cltd mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov lret aad jmp sbb cmp push pop imul scas mov ljmp xor inc dec pop arpl orl in stc add ds push pop addr16 test ror fucomip repz pop adc and pop arpl orb (bad) jecxz testl xor addr16 xchg (bad) in clc add inc dec push pusha push (bad) fwait movsl scas mov in testl xor dec push pop data16 test ret loope cmc add adc sub cmp jno xchg ret loopne cmc decl adc xor inc dec pop bound mov rcr in clc add and xor dec push pop push pushf cmpsl add out cli add sbb sub mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov aaa inc dec push pusha push jg xchg popf cmpsl mov (bad) iret fsub in testb adc sub cmp jno xchg (bad) into fsub in testl xor dec push pop data16 test ror fsubrp repz adc xor inc dec pop bound mov rcr in stc add aas dec push pop addr16 test ret int loope cmc decl adc sub cmp outsl jns mov lret aad jmp sbb xor inc push pop outsb js mov enter out stc add sbb sub inc dec push pusha push jle xchg pushf cmpsb mov (bad) into fsub in testb adc inc push pop data16 test ror loopne cmc add adc sub dec push pop addr16 xchg lds rcr out sti add aaa inc dec push popa imul xchg sahf test inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov icebp cli add cmp push arpl orl int3 xlat loope testb adc dec push pop push fwait cmpsb mov (bad) iret (bad) out clc add inc dec push pop imul mov (bad) rcr in clc add aas dec push pop addr16 xchg ret int loope testb adc dec push pop push pushf cmpsb mov (bad) in clc add inc dec push popa imul xchg mov aad ljmp xor dec push pop imul mov (bad) rcr out cld push adc xor inc dec pop arpl (bad) mov leave rcr call sbb xor inc push pop outsw jns mov int3 (bad) loopne cmc decl adc and ss dec push pop imul mov in testl ss dec push pusha push mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc je mov (bad) jecxz clc add and inc dec push pusha push jg xchg popf cmpsl mov (bad) in stc add inc dec push pusha push jle xchg popf test mov out stc add inc dec push pusha push jle xchg sahf test mov icebp sti add inc dec push bound mov lret jmp sbb xor inc push pop outsl jp xchg pushf cmpsb mov (bad) jecxz clc add dec pop fs test ret loope testb adc sub inc dec push popa push jle xchg popf cmpsl mov (bad) in clc add and inc dec push pop imul mov (bad) rcr out cld push adc and cmp push pusha push add mov enter lock add sbb sub popa imul xchg popf test mov out clc add mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov ss dec push pop push pushf cmpsb mov (bad) iret (bad) out clc add aas dec push pop addr16 xchg ret int loop testb adc dec push pop data16 test ror fucomip hlt decb adc xor inc dec pop outsl jns mov lret (bad) loopne hlt decb adc push pop outsl jp mov lret jmp sbb xor inc dec pop gs test ror fucomip hlt std or sbb xor inc dec pop arpl (bad) mov lret aad ljmp xor dec push pop data16 mov (bad) jecxz clc add inc dec push pop push jle xchg sahf stos add jmp add inc dec push pusha push orl lret (bad) loopne testb adc dec push pop push lcall inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov in testl ss dec push pop push jle xchg popf test mov lock add cmp push pusha push jg xchg popf cmpsl mov (bad) rcr in stc add inc dec push pop push popf cmpsl mov (bad) rcr in clc add sbb cmp pop outsb js mov leave aam jmp sbb xor inc dec pop fs js (bad) lcall loop testl ss dec push pop push pushf cmpsb mov (bad) in clc add and inc dec push pop imul mov (bad) rcr out cli add aaa inc dec push pusha push jle xchg pushf cmpsl mov (bad) in stc add cmp push pusha push jle xchg sahf test mov out stc add inc dec push pop imul mov icebp cld pop adc push pop outsl jns inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc lea lret xlat loope cmc add adc dec push pusha insb jbe mov int3 xlat loop clc add pop and xor insb js mov lret aad jmp sbb push pop outsl jle xchg sahf test fsub lock add cmp push popa insb ja lea lret aad jmp sbb xor inc dec pop bound mov (bad) rcr out cli add sbb sub popa imul xchg mov aam jmp sbb xor inc dec pop bound (bad) mov lret jmp add adc sub cmp push pop add jl nop lcall loop testb adc sub cmp outsl jns lea lret call sbb xor inc dec pop arpl orb enter lock add aaa inc inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc dec push popa imul xchg sahf test mov out clc add and xor push lcall jecxz testl xor jb test ret loopne hlt decl adc push pop outsl jns mov int loop testl xor dec push pop push orb enter lock add aaa inc dec push popa imul xchg popf cmpsl mov (bad) rcr out cli add cmp pop arpl (bad) mov int3 xlat loope testb push and xor push add aam call sbb xor inc push pop outsb js mov lret jmp push sub cmp push pop outsl jp mov int loope testb adc dec push pop data16 test ror fucomip inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc repz pop adc xor inc dec pop bound mov rcr call sbb xor jo test ret loop testb adc sub cmp jno xchg ret iret (bad) in testl xor push fwait movsl mov (bad) into fsub in testb adc dec push pop data16 xchg ret into fsub in testb adc sub cmp push pop outsb js mov leave aam call sbb xor inc dec pop arpl orl ljmp xor inc push pop outsl jns lea lret aad ljmp xor inc push pop outsl jns lea lret (bad) loopne testb pop and cmp pop bound lea int3 fsub in cli push adc and pop arpl mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov out stc add sbb sub inc dec push pop push pushf cmpsl mov (bad) rcr in stc add aas dec push pop addr16 test ret loopne testb adc sub cmp jno xchg ret int loop testb adc sub cmp push pop gs test ror loopne testb adc dec push pop addr16 test ror loopne hlt decb adc push pop arpl orl call sbb xor inc dec pop arpl (bad) mov lret call sbb pop bound orl out cld pop adc xor dec pop outsl popf pop inc dec pop arpl orl add sbb pop imul mov ljmp inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc push pop push (bad) mov rcr jmp push sub ds push pop pusha outsb jns nop lcall (bad) int fucom repz adc sub ss dec pop bound mov (bad) lret rcr in sti pop adc push pop addr16 test ret loope testl cmp push pop imul mov lock add cmp pop push lahf stos mov leave aam ljmp xor insl js mov int in repz incl adc xor data16 jbe lea (bad) iret (bad) repz push adc and push pop imul mov vpminub out hlt decl sbb sub inc dec dec push pop imul mov into fucomi repz or and inc dec pop gs xchg enter hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc loopne testl xor dec push arpl orl aam jmp add inc push pop addr16 mov iret (bad) icebp cld or sbb xor dec push pop imul mov int jecxz stc add sbb xor dec push pusha imul lcall ljmp cmp push pop push orl testl cmp pop push mov xlat jecxz repz incl cmp pop gs jb xchg (bad) int loopne clc add ss push pop push orl fninit out cld pop adc sub ds push arpl mov iret (bad) repz and cmp pop insb js nop popf test mov testb push sbb sub push pop push jle xchg lahf stos mov iret ftst out sti add cmp inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov pusha insl js mov rcr jmp add dec push pop push orl testb sbb cmp pop addr16 mov lret xlat loope testl cmp push pop imul lcall in testl cmp pop data16 test (bad) rcr call and aaa inc push pop data16 mov into fxam lock or sub inc dec pop gs xchg int jecxz sti push adc sub outsl jnp xchg lahf stos mov int in std or push pop data16 mov (bad) icebp std or sub inc dec pop gs mov (bad) repnz adc sub inc dec pop arpl jge xchg mov fsub out sti push adc push arpl test int3 fsub out cli push adc sub mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov dec push popa insb ja mov rcr ljmp cmp pop push orl hlt add adc dec adc xchg popf test mov inc dec push pusha push jge nop cltd mov rcr out cld push adc and fldln2 clc add pop push fwait cmpsb mov (bad) into fsub in testb adc sub cmp dec pop arpl orl out stc add ds push pop addr16 test ror fucomp repnz add aaa inc dec push pop imul scas mov jmp sbb cmp push pusha push jle xchg fwait movsl scas mov ljmp sub inc dec push pop push lcall loopne hlt decl adc sub cmp outsl jns lea leave aam call mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov repnz push adc and cmp push pusha push jle xchg popf cmpsl mov (bad) jecxz testb adc sub inc push pop data16 test ror loopne hlt incb adc and push pusha push jle xchg pushf cmpsb mov (bad) into fsub in testb adc sub cmp outsl jns lea leave rcr call sbb cmp push pusha push jg xchg pushf cmpsb mov (bad) loop testb adc sub cmp push pop outsb js lea leave rcr out cld add cmp arpl (bad) lea lret (bad) loopne testb adc sub dec push pop addr16 test ret out sti pop adc sub cmp push pop outsl jns lea leave rcr call sbb push pop outsl jns lea leave rcr out sti push adc and arpl inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc (bad) mov lret jmp sbb pop outsb js mov (bad) rcr out sti add cmp pop bound mov rcr in clc add and xor push fwait movsl scas mov jmp decl adc push pop outsl jns mov lret jmp sbb xor inc dec pop arpl orl in stc add inc dec push pop push fwait cmpsb scas mov out clc add inc dec push pop push lcall loope cmc decl adc sub cmp inc push pop outsl jns lea lret call sbb push pop outsl jns lea int3 xlat loope cmc add adc dec push pop addr16 xchg (bad) into fsub in testl mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc or and ss dec push pop imul mov (bad) rcr out cli push adc xor inc push pop outsl jns mov int loope testb push pop sub push lcall in stc add inc dec push pop imul mov (bad) into (bad) in testl xor addr16 test (bad) into fsub in testl xor dec push pop addr16 test ret loope testb sbb cmp pop data16 xchg (bad) in cli add aaa inc dec push popa imul add leave aam call sbb xor outsl jns lea lret jmp sbb dec pop arpl (bad) mov lret jmp sbb xor push pop gs test inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc ror loope cmc decl adc sub cmp jo test ret loope cmc decl adc sub dec push pop push fwait movsl scas mov in testb adc sub cmp push pop gs test ror loopne testb adc sub insl js lea int loope testl ss dec push pop imul mov (bad) hlt decl adc sub cmp jb xchg (bad) into fsub out stc add inc dec push pop imul scas mov add cli add inc dec push pusha push orb aam jmp sbb pop arpl orl call sbb xor inc dec pop outsb js lea lret aad ljmp xor inc dec pop outsb js mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov lret jmp sbb pop outsb js lea leave aam out sti add cmp push pusha push jg xchg popf cmpsl mov (bad) iret (bad) out clc add and xor imul mov (bad) in stc add sbb sub inc dec push pop push jle xchg pushf cmpsb mov (bad) iret ftst out clc add and ss dec push pop imul mov out stc add inc dec push pop push sahf stos mov leave rcr call sbb daa xor inc push pop data16 xchg (bad) into ftst out clc add and xor push sahf test mov repnz pop adc xor inc push pop gs xchg (bad) in clc add and ss dec push pusha push jle xchg sahf test fucomp repnz or sbb inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov xor inc dec pop arpl test ret loope cmc decl adc sub cmp jo test ret loopne cmc add adc sub ds push pop addr16 xchg (bad) into fsub out stc add sbb xor dec push pop push jg xchg popf cmpsl mov (bad) rcr in cli add sbb cmp pop outsb js mov int jecxz stc add inc dec push pusha push jle xchg popf cmpsl mov (bad) in stc add sbb das cmp bound add ror loop testl xor dec push pop addr16 test ret loope cmc decl adc sub cmp jb xchg (bad) rcr in cli add sbb sub popa imul xchg sahf test fsub repnz pop adc daa xor push pop gs test (bad) iret ftst out inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov add sbb cmp pop data16 xchg (bad) rcr call sbb xor inc push pop data16 xchg lahf stos mov lret jmp sbb push pop data16 xchg (bad) iret (bad) in clc add inc dec push pop push pushf cmpsb mov (bad) rcr in cli add sbb sub pusha push jg xchg popf test mov out cli add sbb sub arpl (bad) mov lret ljmp sub dec push pop push fwait movsl scas mov in testb adc inc push pop outsl jns mov lret xlat loope cmc decl adc dec push pop addr16 xchg (bad) iret (bad) out clc add aas dec push pop push fwait movsl scas mov in clc add inc dec push pop imul mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc (bad) in clc add aas dec push pop addr16 xchg ret jecxz testl xor imul mov (bad) iret (bad) in clc add sbb pop outsb jns lea lret aad ljmp xor outsl jns mov int3 xlat loope testb pop and inc dec push pop imul xchg mov (bad) loope clc add inc add bound mov leave rcr call sbb xor inc push pop outsl jns lea lret call sbb push pop outsl jp mov int3 (bad) loope cmc add adc sub ds push pop addr16 xchg ret int loop clc add and inc dec push pusha imul cwtl mov xlat loope cmc decl adc daa xor push pop outsl jns mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov orl int3 (bad) loopne cmc add adc inc push pop addr16 xchg (bad) into fsub in testb adc inc push pop outsl jns lea lret jmp sbb dec pop arpl orl leave rcr out std pop adc xor inc dec pop bound orl out cld push adc and push bound add mov repnz pop adc xor push pop outsl jns lea lret jmp and imul mov clc add sbb xor dec pop gs xchg iret fsubr hlt add inc dec pop popa imul xchg mov (bad) loopne push adc and pop bound test leave aam ljmp cmp jne mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov rcr ljmp cmp push pusha insb ja (bad) fwait cmpsl mov leave aad in testl ss push pop data16 test (bad) rcr jmp and inc dec pop data16 mov (bad) lock push adc push pop outsw jp xchg popf test mov clc add dec push pusha insb ja mov lret xlat loop cli add inc dec pop gs mov (bad) repnz adc sub inc dec pop push mov fsubrp hlt add and cmp pop data16 mov rcr out decb adc dec pop addr16 mov rcr jmp and cmp addr16 mov (bad) repnz or push sub outsl jp xchg lahf stos mov int in std or dec pop data16 mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov int in sti or push sub inc dec pop gs xchg lret xlat loope cmc add push and cmp dec push bound jp xchg scas mov lock add adc pop sub ds push popa insl js mov mov lock or push sub cmp pop arpl mov ror jecxz sti add cmp je mov int3 xlat loop testl cmp data16 test ret into (bad) out cli add sbb xor push pop imul rol rcr loop clc add sbb push pop push pushf mov (bad) loope stc add or inc push pop pusha addr16 mov enter lock add xor inc dec push popa imul cltd movsl mov leave aad in clc add sbb cmp pop inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov push lahf stos mov int3 xlat loop clc incb adc sub inc dec pop outsl jnp xchg popf test ror loope testl cmp push pop push orl hlt add and ss dec pop gs xchg leave aam ljmp cmp add ja lea rcr jmp and cmp pop push orl testl cmp push pop imul cltd cmpsb scas mov iret fchs out repz add push and pop outsb jp (bad) lcall fucomip cmc add das cmp pop gs orl ret int loopne stc add sbb xor jp xchg sahf stos mov repnz or push pop push movsb scas mov repz adc sub dec pop data16 xchg leave (bad) inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc loopne clc add inc push pop push mov fsubrp hlt decl pop and cmp pop push movsl mov leave aam jmp add inc push pop data16 mov lret ljmp cmp pop add mov fsub hlt decl push and inc dec push popa insl jbe mov int3 fsub out stc add sbb xor jbe lea rcr ljmp cmp push pusha imul lcall jmp add sbb xor jbe mov rcr jmp and cmp push pop push orl add pop and cmp addr16 mov rcr call and cmp pop data16 mov int jecxz cli push adc sub outsb jp xchg popf test inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov int in std dec pusha imul in decb adc sub inc dec pop gs mov into (bad) icebp std or dec push pusha imul sahf test lret ljmp sbb cmp inc push pop imul cmpsl scas mov out sti push adc and dec push pop addr16 mov leave rcr out stc add aas dec push pop push mov fsub repnz adc dec push popa insb jbe mov lret xlat loop testl cmp pop bound (bad) lea int jecxz cli add ds dec pop data16 jg mov lret in repnz add inc dec push pop push mov int3 (bad) out sti add xor insw jae orl int fnop jmp mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc testb push and xor dec pop fs mov into (bad) icebp cld or sub dec push popa insb ja mov lret in stc add sbb pop push orl repz pop and cmp pop imul ret jecxz testl cmp pop addr16 mov int in cli push adc sub dec pop fs xchg int3 xlat jecxz cli add ds push bound test leave aad in testl cmp dec pop fs addb mov icebp clc incb adc sub ds push pop pusha insb ja mov ret (bad) repnz pop adc and cmp pop addr16 mov fxam icebp std or and cmp pop imul pushf test ror in std or sub inc dec push inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov arpl test aam in testb adc dec pop push mov fxam repnz adc sub jo xchg ret in cld or and ss dec pop fs xchg lret aad lock pop adc xor push pop push lahf stos mov int in cld pop adc sub inc dec pop data16 mov leave aam out cld push adc xor dec push pop imul cwtl movsb scas mov cmc add and cmp pop imul mov testl cmp push pop imul mov repnz adc dec pop addr16 mov iret (bad) icebp cld push adc sub inc dec pop data16 mov lret xlat loop cli add aas dec push bound xchg lret (bad) loop sti push adc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov push popa insl js nop fwait cmpsl mov enter testb sbb xor dec push popa insb jns nop fwait cmpsl mov lret jmp add aas dec push popa insl js (bad) lcall in testl aas dec push popa insl jns nop fwait cmpsb mov (bad) iret (bad) lock incl cmp inc dec push pop pusha insw jae test enter loop cmc add adc dec push pop arpl js lea rcr out sti add sbb cmp push pusha push jg xchg mov fsub lock add cmp jne mov lret (bad) loope cmc decl push and ss dec pop bound orl iret frstpm(287 lock push adc push pop push mov lret in hlt sti add and cmp push pop addr16 mov ror loopne cmc add hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov sub data16 jge mov lret fcomp in repnz pop adc xor add pop imul fwait cmpsb mov (bad) rcr ljmp cmp pop addr16 mov (bad) into (bad) repz adc dec pop fs mov leave aam ljmp cmp pop push mov aam ljmp aaa inc dec pop outsl jns nop fwait cmpsb mov enter testl cmp push pop imul (bad) rcr ljmp cmp push pop push (bad) mov aam jmp add inc push pop outsb jns mov mov out cld push or ds push popa push lcall fcomp jmp and xor aas inc dec pop addr16 test lret in stc add inc inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov pop addr16 mov aad out cli push adc sub add pop outsl jp xchg pushf cmpsl mov (bad) shr cli add cmp pop addr16 mov lret xlat jecxz sti push adc sub jno mov int in sti pop adc sub inc dec pop gs xchg lret (bad) fucomip cmc decl pop and cmp pop addr16 mov xlat loope clc add sbb xor dec push pusha imul fwait cmpsl mov leave aam ljmp xor dec push pusha insb ja mov rcr out decb adc dec pop gs xchg int in cld or sub inc dec pop outsl jnp xchg pushf test ror in sti pop adc sub inc dec pop gs mov (bad) icebp std or push sub outsl jnp xchg sahf test jecxz sti pop adc sub inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc dec pop data16 mov iret (bad) icebp cld pop adc sub outsb jns xchg pushf test mov stc add sbb xor dec push arpl xchg int3 fsub out cli push adc pop arpl xchg int3 fsub out cli pop adc sub inc dec pop gs xchg leave rcr call adc sub inc dec dec push pop popa insl je orb into aad loop out stc add inc push pop bound jbe xchg leave aam jmp decl adc xor inc dec pop bound mov into (bad) out std push adc sub ds push pop push jg xchg lahf stos mov leave aam jmp and ss dec push pusha push orl in stc add sbb pop gs (bad) mov mov cmc cld add push and inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov add pop pop push sahf stos mov ret lret in testb pop push and pop push mov iret (bad) call adc dec push arpl xchg (bad) lock push adc push pop imul mov out decl push and inc dec pop outsl jnp xchg popf test mov cmc add and cmp pop addr16 mov xlat loop cmc add push and gs xchg lret in stc add ds push bound test lret xlat loop sti push adc sub inc dec pop fs xchg int in cld pop adc push popa insl jbe xchg mov out sti add xor jne xchg lret aas ljmp mov mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov repz adc dec pop outsl jp nop pushf stos mov into (bad) icebp decb adc push pop push mov decl pop and data16 xchg lret in stc add sbb xor dec push bound test int3 fsub out sti pop adc push popa insb ja mov ds decl push and inc dec pop data16 mov into fxam icebp cld pop adc sub outsl jnp xchg sahf stos mov int in cli push adc xor jo test push jnp push data16 xchg lret out cli add inc dec push popa insb jbe mov (bad) jb mov iret (bad) lock or sub insb ja lea rcr out cld or push sub dec bound fildl dec je (bad) dec push cltd stos mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov int3 fsub out stc add sbb pop data16 xchg enter xchg mov (bad) repnz or push sub inc dec pop arpl orl rcr ljmp cmp xorl jno xchg leave aam jmp lret (bad) loope stc add sbb xor dec push popa insb js (bad) lcall jmp add sbb out sub push inc pop arpl fucom ljmp pop sbb cmp pop arpl jbe (bad) mov scas mov rol aam loopne in repz add or sbb and inc dec push pop pop gs jb jg mov mov mov fucom ljmp and xor aas inc dec push pop pop imul xchg mov rol rcr loopne in repz inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov push or sub cmp dec push pop pusha data16 jae jg mov mov rol aam loop out cmc cld add unpckhps sub ss dec push push pop arpl jbe orl mov mov fucom ljmp sbb and inc dec push pop pop imul xchg lods mov rol rcr loopne in repz add or sbb es cmp inc dec push pop pusha outsb je (bad) mov scas mov rol aad loop out cmc cld add push adc ss pop imul test lods mov rol rcr (bad) in repnz incl or sbb es dec push pop popa insl je addl rol aam loopne out hlt cli add push adc xor push pop bound jne (bad) mov scas inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov ret (bad) fsub jmp or adc cmp pop outsl jnp xchg pushf stos mov hlt add sbb sub ja xchg sahf test mov ljmp xor inc dec pop arpl orl in cli add pop and xor inc push pop outsb js mov iret (bad) out clc add adc inc push pop outsb ja mov into fsub in idiv or sbb dec push pusha imul lods mov enter out clc add sbb cmp bound xchg (bad) iret (bad) inc (bad) idivb inc push pop outsl jns (bad) lcall loop out cmc cld add unpckhps sub ss pop arpl jbe orl mov lock push adc sub outsl jp xchg popf cmpsl mov lret jmp inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc add push and inc dec push pop push jg xchg sahf test mov ret (bad) fsub jmp or push sbb sub ss dec push push pop arpl jbe test stos mov mov hlt add push and cmp pop arpl test ror loope cmc cld add cmp pop outsl jnp (bad) lcall jecxz cli add cmp bound test stos mov mov fsubp ljmp pop push and xor ds dec push pop pop imul test stos mov mov fsubp jmp idiv add adc push and push pop fs ja test stos mov mov fsub jmp or adc xor inc inc dec push pop popa insl jae addb lods mov rol rcr (bad) in repnz decl inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc adc sub ds push pop insb jne lea ret leave rcl fsub jmp or adc xor push pop bound je addl rol rcr loopne in repz incl or sbb and inc dec push push pop fs ja test stos mov mov fsub jmp or adc xor push pop popa insl je addb mov hlt incb ss dec pop arpl orl icebp cld or pop sub cmp pop data16 mov mov in icebp idiv add adc sbb cmp pop arpl jbe (bad) mov scas mov ret aad loope out hlt cli add push adc and cs inc inc dec push pop pusha insw jae addb lods mov mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov lret rcr fsubp jmp (bad) or sbb sub xor push pop popa outsb je orl rol rcr loopne in repz add or sbb es cmp inc dec push pop pop data16 jb jg mov mov mov fsubp jmp idiv add adc push and xor cmp pop fs ja orl mov mov fsub jmp or push sbb cmp pop arpl jbe orl scas mov ret (bad) fsub call or push sbb sub xor push pop bound jne addl rol rcr loopne in repz incl and inc dec push pop pop data16 jb jg lea mov mov (bad) in repnz incl and inc dec push pop pop data16 inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov jb jg mov mov mov (bad) in repnz incl or sbb and inc dec push pop pop imul test stos mov mov fsubp ljmp pop sbb cmp pop arpl jbe orl scas mov ret aad loop lock add adc sbb cmp pop bound jbe orl scas mov ret aad loop out cmc sti add push adc xor push pop bound jne addl rol rcr loopne in repz add or sbb and inc dec push pop pop imul test stos mov mov fucom ljmp pop sbb cmp dec dec push pop bound jne (bad) mov mov mov fsub jmp or hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc unpckhps and cs push pop pusha insl je addb lods mov rol rcr loopne in repnz incl or sbb and inc dec push pop pop imul test lods mov ror loope sti add and xor push orb rcr loopne in repz add or sbb das cmp pop bound jne orl ror aam loope out cmc cld add cmp outsl jnp xchg lahf stos mov int jecxz sti push adc xor dec push pop imul mov (bad) iret (bad) in testl xor cmp pop arpl jbe orl mov mov fsub jmp sbb sub inc dec pop bound jns nop cwtl mov (bad) loope testb pop and xor inc push pop gs mov ret inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov (bad) in cmc add adc dec push pop imul mov (bad) xlat fsubp ljmp push sbb sub ss dec dec push pop bound jne orl rol rcr loopne in repz add or sub cmp inc dec pop fs jle mov mov mov fucom jmp or adc xor push pop bound jne orl rol rcr loopne in repz add or cmp bound orl ljmp pop sbb cmp pop bound jne (bad) mov scas mov ret aad loope out cmc sti add unpckhps sub xor push pop popa push xchg lods mov rol rcr loopne in repz add or sbb hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov es cmp inc dec push pop pusha data16 jae jg mov mov mov ljmp das cmp dec push pop addr16 test vpsubusb out sti add xor imul xchg popf cmpsb mov enter jmp sbb es cmp inc dec push pop pop imul test stos mov mov fucom ljmp push sbb sub xor push pop bound jne orl rol aam loope in hlt cli add or sub dec push push mov mov mov fucom ljmp pop sbb ds dec push push pop fs ja test stos mov mov (bad) in repnz incl or sbb es cmp inc dec push pop pop gs jae addb mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cmpsb lods mov rol rcr loopne in hlt cli add or sub dec push pop popa insl je addl ret leave rcl fucom ljmp pop sbb cmp pop fs ja test stos mov mov (bad) jmp stc incl or sbb es dec push pop pusha insl je addb lods mov rol aam loope out cmc sti add push adc xor push pop bound jbe (bad) mov scas mov ret leave rcl fucom ljmp pop sbb cmp pop imul test mov mov (bad) in repz add or sbb es dec push pop pusha insw jae addb lods mov rol aam loope out hlt cli add or sub dec push inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc pop popa insl je addl rol aam loope out hlt sti add unpckhps and das xor push pop bound jne (bad) mov scas mov ret (bad) fsub jmp or push sbb sub ss pop fs ja test stos mov mov fucom ljmp pop sbb ds dec push push pop fs js test stos mov mov (bad) in repz incl or sbb es cmp inc dec push pop pop data16 jb jg mov mov rol rcr loopne in hlt cli add push adc and cs inc inc dec push pop popa push mov scas mov ret (bad) fsub jmp or sbb xor inc push pop push xchg mov aad jmp add adc daa xor dec push push pop arpl inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov ja test (bad) into aam loope in hlt cli add or sub cmp inc dec push pop pop gs ja mov enter testl cmp push pop imul cltd movsb scas mov jmp add adc sub cmp jno jle mov mov mov fsubp jmp clc incb adc pop and inc dec push pop pop outsl jp (bad) xchg mov xlat fucom out sti push or inc dec push pop imul scas mov out sti add pop and addr16 xchg enter out testl aaa cmp pop arpl jbe orl mov mov fsub jmp or adc xor push pop popa insl jae addb lods mov mov icebp clc incl inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc and inc dec push pop pop imul test stos mov mov fsubp ljmp pop sbb ds dec pusha push jg mov ss dec push bound orl rcr out decb adc sub inc dec pop gs xchg iret (bad) icebp std or sub inc dec pop gs xchg xchg mov (bad) lock pop adc sub data16 mov mov ror in stc add das cmp pop push xchg mov aam loope out stc add cmp dec push popa insl jns mov rcr call and inc push pop addr16 mov aad in clc add sbb xor dec push popa insb ja lea iret (bad) in add and xor push orl repnz inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov adc sub inc dec pop gs mov fxam lock pop adc sub jno mov into ftst out cli add sbb cmp pop imul ror loop clc add sbb pusha imul fwait cmpsb mov leave aam jmp add and pusha push add mov repz adc dec pop data16 mov into (bad) icebp cld or sub inc dec pop addr16 mov into (bad) repnz or sub inc dec pop gs mov iret (bad) repz pop and cmp pop data16 mov fxam lock pop adc sub jo mov (bad) icebp cld pop adc push outsl jp xchg pushf test mov clc add sbb pop imul lcall inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov in testl cmp pop push mov fsubr hlt decl pop and cmp pop imul vpaddusb lock add sbb cmp dec pop data16 addl enter hlt add adc sbb cs inc dec push bound test scas mov (bad) rcr call and xor dec push pop gs test ror out stc add cmp push pop push jg xchg mov xlat loope cmc add and cmp addr16 xchg (bad) rcr out std or sub inc dec pop outsl jp (bad) xchg mov int (bad) out sti or sbb xor inc dec push pop imul xchg popf movsb scas mov repz add adc push pop popa imul cwtl movsb scas mov ret fsubrp hlt decl push sbb inc push pop data16 xchg hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc xchg lahf stos mov rcr out std or sub inc dec pop arpl test enter lock sbb xor dec push pop imul cwtl movsb mov (bad) rcr out std or push sub dec push bound test lret ljmp xor inc push pop gs xchg enter testl cmp pop imul (bad) rcr call and data16 mov (bad) icebp cld pop adc sub inc dec pop outsl jp xchg fwait mov aam loopne out stc add sbb cmp dec push pop fs test mov cmc add push adc inc push pop push mov int in cld pop adc xor dec push bound test lret (bad) jecxz cld pop adc das cmp pusha imul cltd movsl mov (bad) rcr jmp mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov hlt decb adc cmp outsb js (bad) fwait cmpsl mov leave aad in clc add dec push bound test lret xlat loop stc add inc dec pop fs mov ftst out sti add xor js mov into fsub out stc add cmp pop imul (bad) rcr jmp pop sub inc dec push pusha push jg xchg mov (bad) repnz adc dec pop data16 mov (bad) repnz or sub inc push pop push mov (bad) icebp std or sub inc dec pop data16 mov into (bad) icebp std or sub inc dec pop fs xchg int3 xlat loop cli add inc dec push arpl xchg fxam lock pop adc push bound test lret (bad) inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov in clc add sbb xor js (bad) fwait cmpsl mov lret xlat loop cli add aas dec push popa insl js (bad) fwait cmpsb mov leave aam jmp add sbb xor js nop pushf add loope stc add and inc inc dec push pop imul lea mov ret int in stc add daa xor inc dec pop gs mov mov enter hlt decl push and xor data16 test ret in stc push adc daa xor dec push popa insb jne (bad) lcall out std or push sub cmp je mov rcr jmp and gs orl jo in pop movsb mov (bad) rcr jecxz testb adc sub cmp pusha push jge nop lcall fucom lock add cmp dec inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov pop arpl loop clc add sbb cmp pop data16 xchg enter cmc add inc push pop addr16 mov or lcall out decb adc sub inc dec push popa insl js mov rcr ljmp cmp push pop push orl testl cmp pop push orb (bad) rcr in icebp clc incb adc dec pop arpl js (bad) lcall fsubrp idiv or and das xor data16 mov mov in stc push adc push pop push movsb mov leave (bad) loop sti pop adc sub jb mov into (bad) out sti add cmp jg xchg mov aad in testl inc push pop imul mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov cmc add and cmp pop push mov fucomp testb sbb cmp pop push xchg popf test loop testl cmp pop data16 xchg int3 ftst lock pop adc sub inc dec pop arpl test ret into fsub jmp add inc push pop data16 mov (bad) icebp cld or push sub outsl jnp xchg sahf test in sti pop adc sub dec push bound test lret (bad) loop stc add ds push bound test enter cmc add dec push pop push orl add inc push pop imul ret iret (bad) icebp std or sub inc dec pop data16 mov int3 fsub out sti push adc sub outsb jp inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov xchg pushf cmpsl mov leave aad jmp add sbb pop push (bad) mov aad in add push adc push pusha imul xchg mov enter out cmc sti add push adc and inc dec pop outsl jbe test mov testb or xor insb jns (bad) cltd mov aam call sbb cmp pop push movsb scas mov icebp decb adc sub ds push pop addr16 xchg (bad) rcr call push sub ds push pop imul (bad) iret (bad) out clc add sbb sub xor inc push pop imul test loope idiv add sbb xor inc push pop pusha addr16 mov ret into (bad) out cli push adc sbb dec push pop imul mov (bad) iret ftst icebp cld or sub hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc aaa inc dec pop arpl test lret aad ljmp xor dec push pop imul lcall call and gs xchg int in sti push adc xor jae mov int3 (bad) out stc add sbb xor jne mov iret (bad) repz push and inc dec pop data16 mov into (bad) lock pop adc sub outsl jnp xchg sahf test mov repnz or sbb aas dec push arpl orl (bad) rcr call adc sub popa push fwait cmpsb mov ret leave iret xlat loope clc push or inc push pop push mov loopne sti push adc sub inc dec pop imul mov hlt decl adc dec push outsl jge xchg popf inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov (bad) rcr jmp add cmp data16 mov rcr jmp and cmp pop addr16 mov rcr ljmp cmp push pop data16 mov int jecxz clc add inc dec pop data16 xchg into (bad) repnz adc sub inc dec push bound orl clc add sbb xor push pop push orl hlt add dec push pusha insb ja (bad) lcall ljmp cmp push pop push orl cmc add and cmp pop push orb rcr out std or sub inc dec pop data16 mov rcr out decl push and data16 mov into fxam icebp cld or push sub outsl jp mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc xchg xchg mov (bad) repnz or sub inc dec pop gs mov rcr out std or pop sub inc dec pop gs mov into ftst out cli add cmp bound jne mov mov fucom ljmp xor inc dec push pop pop imul test stos mov mov fsubp ljmp pop sbb ds dec push push pop imul test stos mov mov fucom ljmp pop and ss dec push pop imul xchg fwait movsl mov (bad) lret fsubp repz or sbb and inc dec push pop pop imul test stos mov mov fsub jmp or push sbb sub ss dec dec push pop bound jne addl mov fildl hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov loope out hlt sti add or sub dec push pop pusha insw jae jg mov mov mov fsubp ljmp push sbb cmp dec dec push pop bound jne (bad) mov scas mov rol aam loopne in repz add or sbb and inc dec push pop pop imul test stos mov mov fsubp jmp clc incb adc sbb cmp pop bound jne (bad) mov scas mov rol aam loopne out hlt cli add or sub dec push pop pop gs jb jle mov mov mov fucom jmp or adc xor push pop popa push xchg lods mov rol rcr (bad) in repnz add out push into es and inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov imul xchg sahf test fsub repz adc dec push pusha imul xchg mov fsub in testl xor inc dec pop outsb jns mov and orl lret ljmp xor jno xchg (bad) rcr in cli add cmp outsb js mov int3 (bad) loopne cmc decl adc sub ds push pop push fwait movsb scas mov out clc add inc dec pop arpl (bad) mov int loop testl ss dec push popa insb ja mov int3 xlat loope testl xor push jg xchg popf test mov repz adc daa xor add jne mov int3 (bad) loope testb adc sub push jle xchg sahf test fild hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov repz adc sub cmp push pop addr16 xchg (bad) in stc add inc dec push pusha push jg xchg popf cmpsl mov (bad) in stc add cmp push popa insb jbe mov lret call pop sub ds push pop push popf test mov hlt decl adc dec push pop push jg xchg lahf stos mov lret jmp add and xor push popf test mov icebp sti push adc and pop outsb jns (bad) cltd movsb scas mov in clc add inc dec push pusha imul xchg mov rcr out sti add cmp bound mov add aam jmp sbb push pop data16 xchg (bad) iret (bad) out stc add sbb sub pusha push jg xchg popf cmpsl mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov (bad) rcr in cli add sbb sub popa imul xchg mov rcr call sbb xor inc push pop data16 test (bad) in stc add inc dec gs xchg leave rcr call sbb push pop addr16 xchg (bad) rcr out sti add cmp pop bound (bad) mov int in cli add sbb cmp push popa insb ja mov leave aam jmp push sub dec push pop imul mov repnz pop adc xor push pop outsl jp (bad) lcall jecxz stc add sbb sub pop arpl (bad) mov int jecxz clc add inc dec push bound lea int loop testl xor inc dec push popa imul hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov into fsub jmp decl adc push pusha imul xchg mov (bad) loope testb push and xor imul mov (bad) rcr out cld pop adc xor inc push pop gs test ror loopne cmc decb adc daa xor push pop data16 test (bad) in stc add cmp pop gs nop fwait cmpsl mov (bad) rcr in cli add sbb das cmp arpl orl ljmp xor addr16 test (bad) out sti add cmp fs js xchg popf cmpsl mov (bad) rcr out cld pop adc xor jno xchg (bad) rcr in cld pop adc push pop outsl jns (bad) cltd mov aad ljmp xor dec push pop push fwait cmpsb mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov out stc add sbb sub popa imul xchg lahf test fucom icebp sti push adc and cmp arpl (bad) mov lret call sbb xor inc dec push popa imul xchg lahf test fucomp repz pop adc and pop arpl orl int loop clc add mov cmp pop arpl movsl scas (bad) ftst add xor xchg sahf test pop adc inc dec pop outsb jle xchg sahf test mov repnz pop adc push pop addr16 xchg (bad) into ftst out stc add sbb sub popa insb jbe mov leave rcr jmp push sub cmp push pop gs test (bad) rcr out sti pop adc xor inc push pop mov or inc dec pop bound addl mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov lcall (bad) int fnop out hlt cli add or cs inc inc dec push pop popa outsb je addl rol aam loopne in hlt cli add or sub dec push pop popa insl je addb lods mov rol aam loopne in hlt cli add or sub dec push pop pusha insl jae addb lods mov rol rcr loopne in repz add or sub dec push pop pusha insw jae addb lods mov rol rcr loopne in repz add or sub dec push pop pop data16 jae jg mov mov mov (bad) in repnz incl es cmp inc dec push pop pop gs jb jg mov mov mov fsubp jmp clc incb and xor hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cmp inc dec push push pop imul test stos mov mov fsubp ljmp pop sbb cmp pop arpl ja orl mov mov fucom ljmp push sbb cmp pop arpl jbe orl scas mov ret aad jecxz lock add movhps sub ss dec dec push pop bound jne (bad) mov scas mov ret aad loop out cmc sti add push adc xor push pop bound jne (bad) mov scas mov ret aad loope out cmc sti add push adc xor push pop bound jnp xchg fwait mov aad in idiv add xor ds push pusha insl jae addb lods mov rol rcr loopne in repz add or inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov sub dec push pop pop gs jb jg mov mov mov fsubp ljmp pop sbb ds dec push push pop fs ja orl mov mov fsub jmp or adc xor push pop popa push mov scas mov rol aam loopne in repz add or sub cmp inc dec push pop pop imul test stos mov mov (bad) in repnz incl and inc dec push push pop fs ja test stos mov mov fsub ljmp push sbb sub xor push pop bound jne orl rol aam loopne in repz add or sbb es dec push pop pusha data16 jae jg mov mov mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc (bad) fcomp in icebp clc incb adc push and xor cmp pop fs ja test test leave iret (bad) fsub jmp or adc xor push pop popa insl je addb lods mov rol rcr loopne in repz add or sbb es cmp inc dec push pop pop gs jb jg mov mov mov fsubp jmp clc incb adc push and xor cmp pop arpl jbe orl scas mov ret aad loop out cmc sti add push adc xor push pop bound jne orl rol aam loopne in repz add or sub dec push pop popa outsb je addl lret rcr loopne in repz add or sub dec push pop pusha inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc insb jae addb scas mov ror aam loope out hlt sti add push adc and cs inc inc dec push pop popa insl je addl rol rcr loope out cmc sti add push adc xor push pop bound jbe (bad) mov scas mov ret aad loop out cmc cld add unpckhps sub ss dec dec push pop bound jbe orl scas mov ret leave rcl fucom ljmp push sbb cmp pop fs ja test stos mov mov fucom jmp or push sbb cmp dec dec push pop bound jbe (bad) mov mov mov fsub jmp or push sbb sub xor push pop bound jne (bad) mov scas mov ret aad loop out cmc cld add cmovae inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc adc xor push pop bound jne (bad) mov scas mov ror aam loope out hlt sti add push adc and cs push pop popa push mov scas mov rol aam loope out hlt cli add or sub dec push pop popa outsb je addl rol aam loopne in hlt cli add or sub dec push pop pusha insw jae addb lods mov rol rcr loopne in repz add or sub dec push pop pusha outsb je addl rol aam loope out cmc sti add push adc and das xor push pop bound jbe orl mov out cli push adc push sub inc dec push pop imul mov rol rcr loopne in repz incl hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov or sbb and inc dec push pop pop imul test stos mov mov fucom ljmp push sbb sub xor push pop bound je orl rol rcr loopne in repz add or sub cmp inc dec push pop pop data16 jb jg mov mov mov fsubp ljmp pop sbb cmp pop arpl jbe orl scas mov ret aad loop out hlt sti add push adc and sub dec push pop pusha insl jae addb lods mov mov (bad) jmp clc incb adc push and xor cmp pop arpl jbe orl mov mov fsub call or adc xor inc inc dec push pop pusha insl jae addb inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov lahf cmpsb lods mov mov (bad) in repnz incl and inc dec push push pop fs ja test test leave iret (bad) fsub call or adc xor push pop popa outsb je addb lods mov rol rcr (bad) in repnz incl and inc dec push pop pop imul test stos mov mov fucom jmp or adc xor push pop popa push xchg scas mov rol aam loopne in repz add or sbb es cmp inc dec push pop pop imul test stos mov mov fsubp jmp clc incb and xor cmp pop arpl jbe adcl ror aam loope in hlt cli add or sub inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc cmp dec push pop popa outsb je addl rol rcr (bad) in repnz incl and inc dec push pop pop imul test stos mov mov fucom ljmp push sbb sub aaa cmp pop arpl jbe (bad) mov scas mov ret aad loop out cmc sti add push adc and sub dec push pop pusha data16 jae jg lea mov mov (bad) in repnz incl and inc dec push push pop fs ja orl mov mov fsub call or adc xor push pop popa outsb je addb lods mov mov (bad) in repnz incl and xor ds dec push push pop fs ja test stos mov mov hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov (bad) fsub jmp or adc xor push pop popa outsb je orl rol rcr loopne in repz incl or sbb and inc dec push pop pop imul test stos mov mov fucom ljmp push sbb sub xor push pop popa push xchg lods mov rol rcr loopne in repz add or sbb es cmp inc dec push pop pop imul test stos mov mov fsubp jmp idiv add adc sbb ds dec push push pop fs ja orl scas mov ret aad jecxz lock add adc sbb cmp dec dec pop data16 jle xchg mov rcl loope clc incl xor inc inc dec push pop pusha insw jae addb lods inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov rol rcr loopne in repz add or sub dec push pop pusha insl je addb lods mov rol rcr loopne in repz add or sub dec push pop pusha insl jae addb lods mov rol rcr loopne in repz add or sub dec push pop pusha data16 jae addb lods mov rol rcr loopne in repz add or sub dec push pop pusha data16 jae addb lods mov rol rcr loopne in repz add or sub dec push pop pusha insw jae addb lods mov rol rcr (bad) in repz add or sub dec push pop pusha data16 jae addb lods mov mov (bad) in repnz incl or sbb and inc dec push inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc pop pusha data16 jae jg mov mov mov (bad) in repnz incl and inc dec push pop pop imul test mov mov (bad) jmp clc incb and inc dec push pop pop imul test stos mov mov fsubp jmp clc incb and xor ds dec push pop pop imul test stos mov mov fsubp ljmp sbb and inc dec push pop pop imul test stos mov mov fsubp jmp clc incb and inc dec push pop pop data16 jb jg mov mov rol rcr loopne in repz add sbb es cmp inc dec push pop pop imul test mov mov (bad) jmp clc incb mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc or sbb and inc dec push push pop fs jbe orl scas mov ret (bad) fsub jmp or adc xor push pop popa insl je addb lods mov mov (bad) in repnz incl or sbb es cmp inc dec push pop pop imul test stos mov mov fucom ljmp pop sbb cmp pop fs jbe orl scas mov ret aad loop out cmc sti add push adc xor inc dec dec push pop popa push mov scas mov rol aam loopne in repz add or sub cmp inc dec push pop pop imul test stos mov mov fsubp ljmp push sbb cmp dec dec push pop bound jne (bad) mov hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov rol aam loope in repz add or sub dec push pop pusha data16 jb jg mov mov mov fsubp ljmp pop sbb cmp pop arpl jbe orl scas mov ret aad loope out hlt sti add push adc and sub dec push pop pusha data16 jae addb lods mov mov (bad) jmp clc incb and xor ds dec push push pop fs ja orl mov mov fsub jmp or adc xor push pop bound jne (bad) mov scas mov (bad) rcr in clc add xor imul mov mov (bad) out repnz incl or sbb es cmp inc dec push pop pop data16 jb addb inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc xchg lods mov rol rcr loopne in repz add or sub dec push pop pusha insw jae addb lods mov rol aam loope in hlt cli add or sub dec push pop popa insl je addl rol aam loope out hlt sti add push adc xor push pop popa push mov scas mov ror aad loope out hlt sti add push adc xor push pop bound jne (bad) mov scas mov ret xlat fucom ljmp pop sbb cmp pop arpl ja test stos mov mov fsubp jmp idiv add adc push and xor ds dec push pop pop imul test stos mov mov (bad) in repnz incl and inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc xor aas inc dec push pop pop gs jb jg mov mov mov (bad) in repnz incl or sbb es cmp inc dec push pop pop data16 jae addb lods mov mov (bad) in repz incl or sbb es cmp dec push pop pusha insl jae addb lods mov rol aam loopne in repz add or sub dec push pop pusha insl je orl ror aam loope out hlt sti add push adc and cs inc dec dec push pop popa push xchg scas mov ret aad loop out cmc cld add adc sbb cmp pop fs ja test mov ret aad loop out cmc sti add movhps sub xor push pop bound je orl rol aam loope mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov out hlt cli add push adc and cs inc inc dec push pop popa push mov scas mov rol aam loopne in hlt cli add or sub dec push pop pusha data16 jae jg lea mov mov (bad) in repnz incl and inc dec push pop pop imul test stos mov mov fucom jmp idiv add adc sbb cmp pop arpl jbe orl scas mov ret aad loop out cmc sti add movhps sub xor push pop bound jne orl rol aam loope in hlt cli add or sub dec push pop pusha insw jae addb lods mov mov (bad) jmp clc incb and xor ds dec push push pop fs ja inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc test stos mov mov fucom ljmp push sbb sub ss dec dec push pop bound jne (bad) mov scas mov ret aad loop out cmc sti add push adc and cs inc inc dec push pop pusha insl jae addb lods mov mov (bad) in repnz incl or sbb and inc dec push pop pop imul test stos mov mov fucom jmp or adc xor outsb js inc xchg xor add nopw inc push pop insb js xchg sahf stos mov rcr jmp add sbb pop imul sti xchg jecxz sub jecxz pop xchg push pop insl js nop pushf test call pop sub inc dec push bound orl rcr out cld pop adc push pop jge cltd movsb mov mov hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc loopne testb push and inc dec push popa outsb js mov iret (bad) icebp sti pop adc sub jo xchg and jle mov leave aam call sbb push arpl (bad) mov lret in cli add sbb xor je mov shl jmp add and cmp pop bound orl popa insb xchg mov push sbb xor js nop lcall in stc add and ss dec pop arpl test (bad) rcr ljmp cmp pop push mov fsubrp hlt add pop and cmp data16 mov fxam lock push adc pop fs xchg into (bad) icebp std or push sub insl add xchg pushf cmpsl mov leave aad in clc add mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov nopl xor dec push bound test leave aam jmp add sbb xor jbe lea rcr jmp and cmp pop imul (bad) out decb adc sub inc dec pop gs mov (bad) repnz adc dec pop data16 xchg les mov and scas mov lock push nopl xor outsl jns xchg fwait in and push jg sahf test fsubrp cmc add and gs xchg lret xlat loope clc add sbb xor adc sar inc stos into fsubl sub xchg sahf stos mov int in clc add cmp pop fs jns nop lcall out sti push adc daa xor inc adcl push adc push popa insb js mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov orl aad jmp add outsb cltd mov xor inc push pop imul xchg movsl scas mov in sti add aas dec push popa outsb js mov iret fsub in testb dec push pop imul mov lret jmp fs (bad) add pop sbb push pop fs orl loop out idiv pop adc sub cmp pusha imul xchg mov loopne testl aas dec pop arpl mov rcr jmp and inc dec pop arpl cltd cmpsl mov (bad) rcr in sti pop adc sub inc dec push bound mov fsub out stc add inc dec push popa outsb jp xchg pushf cmpsl mov lret xlat jecxz sti add push and gs xchg enter testb pop and cmp pop gs mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov jl xchg pushf cmpsl mov lret out stc add aas dec push popa insl ja lea int loope hlt decl pop and addr16 mov iret (bad) icebp std or sub inc dec pop gs xchg int3 xlat jecxz cli add ds push popa insb jns xchg popf test mov cli push adc xor jno mov int jecxz cli add inc dec push bound test int3 fsub lock pop adc sub inc dec pop outsl jp xchg popf test loope clc add sbb xor dec push popa insb js nop fwait cmpsl mov lret in stc add aas dec push bound test enter cmc add inc push pop imul movsb mov enter testl ds push pusha imul xchg sahf test mov call unpckhps and hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov sub xor inc push pop addr16 mov mov enter testb sbb and dec push arpl test (bad) rcr in stc add aas dec push popa insb jbe (bad) cwtl mov (bad) lock push adc sub inc dec push popa imul xchg mov ftst out cli add sbb cmp arpl test (bad) rcr jmp sbb xor inc dec push push pusha imul xchg mov int in stc add sbb xor push pop addr16 (bad) mov lret jecxz testb pop and aaa ds dec push pop push sahf movsl stos mov ret iret (bad) out testl cmp pop push orb (bad) rcr jmp and cmp pop addr16 (bad) mov rcr out cld or sub outsb jns (bad) lcall inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc jmp add sbb bound jg xchg mov xlat loop testl cmp pop addr16 mov int jecxz cli push adc xor dec push popa insl js xchg popf test mov testl cmp jns (bad) fwait cmpsl mov (bad) rcr ljmp ss dec pop pop gs jb jg xchg mov fcomp in cli push adc daa xor aas dec push pop imul xchg pushf mov iret (bad) out sti add unpckhps xor dec push pop push orl clc add sbb pop fs mov fsubr cmc add and outsl jp xchg (bad) out clc add sbb pop push orb rcr ljmp cmp push pop push orl stc add inc dec pop fs mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov outsl jnp xchg pushf cmpsl mov (bad) rcr ljmp xor insl jns (bad) lcall jmp and cmp pop push (bad) lea int3 xlat loope cmc add adc dec pop addr16 mov int in cli push adc push bound test int in sti pop adc sub dec push pusha imul lcall jmp add sbb xor dec push bound xchg lret (bad) loop clc add sbb pop imul cltd movsl mov enter testb sbb pusha imul cwtl mov fucomp testb push sbb xor ja (bad) fwait cmpsb mov lret in stc add aas dec push bound test lret in testl cmp push pop imul lcall in clc add sbb xor inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc push pusha imul xchg mov rcr fsubp icebp std or sbb and xor ds dec push pop insb jbe mov mov in testl xor inc inc dec pop outsl jp nop popf test mov out stc add sbb sub aas dec push pop imul mov iret (bad) lock add aas dec push pop imul ror fucomip testb push and inc dec push pusha insb ja lea rcr out std or dec dec push pop popa push pushf cmpsb mov (bad) into aam jmp and xor inc dec pop arpl jl (bad) xchg pushf cmpsl mov enter out cmc add pop and aaa inc dec push push pop data16 xchg mov out clc add and cmp push popa insl js mov rcr out std or pop sub dec push bound orl leave inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov aad in testl cmp pop push mov fxam lock pop adc sub inc dec pop outsb jp mov iret (bad) out cld pop adc push pusha imul lcall in testl cmp pop push orl decb adc dec pop addr16 mov iret (bad) repz pop and popa insl ja test mov lret aam in idiv add pop and pop outsl jnp nop fwait cmpsb mov rol aad in clc add xor ds push bound jg cltd movsb scas mov repnz pop and cmp push pop imul lcall lock or dec pop gs xchg (bad) fucomp clc add and ss dec pop arpl xchg (bad) rcr ljmp cmp hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov push pusha imul cwtl mov fucomip testb sbb cmp push popa insb js mov rcr call and bound test (bad) rcr out decb adc sub inc dec pop gs mov int loope clc add pop and inc dec push arpl test leave rcr jmp push sub outsb jp nop pushf cmpsl mov leave aad in clc add sbb xor dec push popa insl jns nop fwait cmpsl mov leave aam ljmp cmp jbe add (bad) rcr jmp add sbb pop push orb rcr call and inc push pop addr16 mov rcr call and inc push pop push mov fxam lock pop adc sub inc dec pop arpl xchg int in cld or pop sub inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov dec pop bound mov int3 rcr jecxz cli add adc push and xor ds dec push arpl xchg mov leave rcr call and xor cmp imul xchg mov (bad) in testl xor jno mov fsub in clc add sbb sub outsb jns mov iret ftst out cli add sbb cmp outsb jns nop lcall out std or sub cmp push arpl jns xchg (bad) rcr out repz or sub arpl xchg mov cmc add or inc dec pop bound jne mov lret fucom icebp std pop adc push bound xchg enter cmc add and cmp outsl jnp xchg pushf test hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov lret out sti pop adc xor dec push pusha insb ja mov aam jmp and cmp pop push mov aam ljmp aaa inc dec pop outsl jns nop pushf test ror in cli add aas dec push popa insl jns xchg pushf test mov clc add sbb xor js nop fwait cmpsl mov leave aad in clc add sbb xor dec push pusha imul test rcr add hlt add inc dec push arpl jl nop popf test mov out testb sbb cmp dec push pusha insb ja mov rcr call and cmp push bound xchg iret fsubr testl ds push pusha imul cltd movsb mov (bad) into in add inc dec pop fs xchg enter testb sbb mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov push popa insl js nop fwait cmpsb mov leave aad in testl ds push arpl test leave aam jmp and cmp outsb jns (bad) lcall call and cmp pop push mov fsub in stc add sbb sub inc dec push arpl xchg int3 (bad) loope stc add inc dec push bound (bad) pushf test frstpm(287 out stc add ss dec push pop addr16 xchg ror fucomip repz or sbb push popa imul xchg popf cmpsl mov (bad) into fsub in cmc decl adc dec pop arpl orl in stc add pop and xor dec push pop outsw jns lea leave rcr out sti add cmp push bound mov rcr in stc add ds inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov push pop data16 test ror fsubp icebp cld add aaa inc dec push pop push cltd mov aad ljmp xor inc dec push popa imul xchg pushf cmpsb mov (bad) jecxz testl xor outsl jns lea leave aam call sbb sub pusha push jle xchg pushf cmpsl mov (bad) in clc add push sbb sub inc dec push pop imul scas mov in testl xor dec push pop data16 test ror fsubrp repnz pop adc and push popa imul xchg popf cmpsl mov (bad) rcr in stc add inc dec push pop push lcall loopne hlt decl adc xor inc dec pop bound mov enter lock add sbb sub pop imul inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov (bad) rcr out sti add aaa inc dec push pusha push jle xchg pushf cmpsb mov (bad) rcr in testl xor push pushf cmpsb mov (bad) in stc add inc dec push popa imul xchg lahf test fucomp repnz adc sub inc dec push pusha push jle xchg pushf cmpsb mov (bad) into fsub in testl cmp inc push pop data16 test ror loopne cmc decl adc push pop outsb jns mov int3 xlat loope cmc decl adc sub cmp push pop outsl jns lea lret jmp decl adc inc push pop data16 test ret into fsub in testl xor addr16 test ror fucomip hlt decb adc dec pop arpl orl out sti add cmp push pusha inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov push jg xchg popf test mov lock add sbb sub inc dec push pop imul mov (bad) in clc add and xor push lcall loop testb adc sub cmp outsl jp mov lret aad jmp sbb xor jno test (bad) rcr call sbb push pop outsb js lea lret aad jmp sbb xor inc push pop outsl jns lea int3 fsub in testl ss dec push pusha push orb enter repnz pop adc and pop bound mov enter hlt decb adc push pop data16 xchg ret loope testl xor dec push pop addr16 xchg ret into fsub in testl inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov and xor push fwait cmpsb mov ret into fsub in testb adc dec push popa insb ja mov lret aad jmp decl adc sub cmp jno test (bad) rcr out sti add cmp push bound mov add aam call sbb xor push pop outsl jns mov lret (bad) loope testb adc dec push pop push fwait movsl scas mov in clc add and xor dec push pop push fwait movsl scas mov in clc add inc dec push pop imul mov (bad) in cli add sbb sub pusha push jg xchg mov aad jmp sbb xor inc dec pop arpl orl iret fxam icebp sti or push sub cmp jb xchg (bad) iret inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc (bad) in clc or sub dec push pop addr16 test ret loop testb pop and pusha push jg xchg popf cmpsl mov (bad) rcr in clc add and xor push orb enter icebp sti push adc add cmp jno test ret loope testl ss dec push pop imul mov (bad) in clc add and inc dec push pop imul mov (bad) jecxz clc add and xor push lcall loopne hlt decb adc push pop outsl jnp nop lcall loop testb adc inc push pop data16 test ror loopne hlt decb adc push pop outsb js mov leave rcr out cld push adc and cmp pop bound inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov enter repnz push adc and pop arpl orl into fsub in clc add inc dec push pusha push jg xchg sahf test fsub lock add sbb cmp pop bound outsl jns mov iret (bad) out stc add cmp pop arpl (bad) mov lret (bad) loopne cmc decl adc sub dec push pop push pushf cmpsl mov (bad) rcr in stc add sbb sub popa imul xchg popf cmpsl mov (bad) rcr in stc add inc dec push pusha imul xchg popf test mov lock add cmp push popa imul xchg sahf test mov icebp cld pop adc push popa insb jbe mov lret call sbb push pop outsl jns nop lcall loope testb adc sub dec inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc push pop push lcall in clc add and inc dec push pop imul mov (bad) jecxz testl xor push jg xchg sahf test aam call sbb pop outsl jns lea lret jmp sbb xor inc dec pop outsl jns mov int3 (bad) loopne hlt decb adc push pop data16 test ret loope testl aaa inc dec pop arpl (bad) lea int jecxz testl xor push popf cmpsl mov testl aaa inc dec push pop imul mov leave aam call push sub cmp outsl js lea lret jmp sbb push pop gs xchg ret int loope cmc decl adc hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov daa xor push pop outsl jns lea int3 xlat loope cmc decl adc push pop outsb js lea leave rcr out cld push adc add xor inc push pop outsb js lea lret aad ljmp xor inc dec pop outsb js mov int3 (bad) loopne hlt decb adc dec pop outsb jns mov leave rcr call sbb pop arpl test ror fsubrp repnz pop adc and pop bound mov enter repnz push adc and cmp push popa imul xchg lahf stos mov enter repz or sbb xor inc push pop outsl jnp nop lcall jecxz testl xor push jg xchg lahf test fucomp repnz push adc xor inc push pop outsl jns mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov int loop clc add inc dec push popa imul xchg mov aam call sbb xor inc push pop add test ret int loop testb adc dec push pop addr16 xchg (bad) jecxz clc add and inc dec push pop imul mov out clc add inc dec push pop push popf cmpsl mov (bad) rcr call pop sub push pushf cmpsl mov (bad) rcr out cli add sbb sub bound orl repnz pop adc xor inc dec pop arpl orl (bad) loope mov or inc push pop gs orl (bad) fcomp in icebp clc incb adc push and xor ds dec push push pop fs ja test stos mov mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc ret lret fucom ljmp push sbb cmp dec dec push pop bound jne (bad) mov scas mov rol aam loopne in repz add push sbb das cmp arpl orl (bad) iret (bad) icebp cld add sbb pop imul mov lret aam in hlt decb adc inc dec push pop push ja test stos mov mov fucom ljmp push sbb sub ss dec dec push pop bound jne orl mov mov fucom jmp or adc push and xor ds dec push pop pop imul test lods mov loope out hlt cli add or sub dec push pop popa insl jae addb lods mov mov loopne out hlt sti add push adc xor inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov pop popa push mov scas mov rol rcr loopne in repz add or sbb es dec push pop pusha insw jae addb scas mov rol aam loope out hlt cli add or cs inc inc dec push pop popa insl je addl ror aad loop out cmc sti add push adc and cs inc inc dec push pop popa insl je addb scas mov ret (bad) fucom ljmp push sbb sub ss pop arpl jbe add movsb stos mov mov fucom ljmp sbb and xor ds dec push push pop fs ja test stos mov mov fucom jmp or push sbb sub xor push pop arpl jne (bad) mov scas mov ret aad loop out inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc cmc sti add push adc and sub dec push pop pop data16 jae jg mov mov rol rcr loopne in repz incl or sbb es cmp inc dec push pop pop data16 jae addb lods mov mov loope out hlt cli add or sub dec push pop pop data16 jb jg mov mov rol rcr (bad) in repnz incb es cmp inc dec push pop pop imul test stos mov mov add out repz add or sbb es cmp inc dec push pop pop data16 jb jg mov mov mov fsubp ljmp pop sbb cmp dec dec push pop bound jbe (bad) mov scas mov ret aad loope out hlt sti add push adc and cs inc inc dec push pop pusha insl je mov hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov sahf stos mov ljmp ss dec push pop imul mov ret aad ljmp sub cmp inc dec push push pop fs jbe test stos mov ror fsubrp repz pop adc daa xor dec push popa insb ja (bad) lcall in testl ss dec push pusha push orb leave rcr out repz incl or sbb and inc dec push pop pop imul test test mov icebp std or sbb sub inc dec push pop push jle xchg mov aad jecxz clc add cmp push arpl orb enter hlt add adc daa xor inc push pop push mov scas mov ret aad loop out cmc sti add unpckhps sub xor push pop bound jne orl mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov test leave iret aad loop out cmc sti add adc inc inc dec push pop pusha insl je addb lods mov rol rcr loopne in repz incl or sbb and inc dec push pop pop imul test test leave iret aad loop out stc add cmp pop outsb jp mov mov (bad) in repnz incl and inc dec push pop pop add jp xchg scas mov rol aam loope in hlt cli add or sub dec push pop pop gs jb jg mov mov mov fsubp in repnz incl and inc dec push push pop imul test mov lock add adc push pop push fwait cmpsb mov (bad) int3 xlat jecxz testl aaa inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc dec pop pusha imul cwtl lahf movsl lods mov iret (bad) fsub jmp or adc ss dec dec push pop bound jne (bad) mov scas mov rol aam loope out hlt sti add push adc and cs inc inc dec push pop pusha outsb jne orl std push and bound (bad) mov cmc decb jno rcr out cli add sbb sub pop imul scas mov ljmp cmp push pusha imul scas mov jmp decb adc das cmp pop bound mov (bad) jecxz testb adc sub cmp pop arpl orl jecxz testb adc daa xor inc dec pop arpl mov (bad) rcr in clc add inc push pop outsb ja mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc lahf test mov in testb adc daa xor outsl jns mov enter lock push adc and cmp push pop push jge xchg fwait cmpsb mov (bad) into xlat loope idiv or sub cmp outsl jp mov leave aam jmp sbb xor inc dec pop arpl (bad) mov (bad) rcr in stc add cmp push pusha push jge xchg pushf cmpsb mov (bad) in clc add and xor outsw jns lea enter out stc add inc dec push pop push cltd mov aad jmp sbb push pusha imul xchg popf cmpsb mov (bad) jecxz testl xor push jle xchg pushf movsl mov (bad) loop testl xor jb xchg ret loopne hlt incb hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov adc dec pop arpl (bad) mov leave aam call sbb cmp push popa push jle xchg pushf cmpsb mov (bad) jecxz testl xor dec push pop addr16 test ror fucomip repnz push adc and cmp push pop imul mov ret int loope testl xor pusha push jg xchg popf test mov in testl xor dec push pop addr16 xchg ret int loop clc add sbb cmp push popa insb ja mov int3 xlat loope cmc add adc dec push pop addr16 xchg (bad) in testl xor imul mov (bad) rcr out sti add aaa inc dec push pop push jge xchg fwait cmpsb mov (bad) into fsub in testb adc dec push pop addr16 xchg hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov scas mov ljmp xor inc push pop outsb js lea int3 (bad) loopne hlt decb adc sub cmp pop outsl jns lea lret call sbb pop bound mov rcr out cli add sbb sub pusha push jg mov enter lock add sbb sub inc dec push pop push fwait movsl scas mov in testl xor addr16 test ror fucomip repz pop adc and push popa imul xchg sahf test mov out clc add inc dec push pop push fwait movsl scas mov in testl xor dec push pop addr16 test ret loopne hlt add adc sub cmp jb xchg (bad) into fsub in clc add and mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc dec push popa imul xchg mov aad jmp pop sub dec push pop addr16 mov (bad) jecxz stc add inc dec push popa insb ja mov lret aad jmp sbb dec pop outsl jp mov (bad) into fsub in testb adc dec push pop addr16 xchg (bad) int loop testb push and xor push pushf cmpsl mov (bad) rcr out std or sbb xor dec pop fs ja mov enter icebp cld push adc xor inc push pop outsb jns lea lret call sbb xor inc push pop data16 test ret loopne cmc decl adc sub dec push pop push pushf cmpsb mov (bad) into (bad) in testl xor dec push pop addr16 test ret int loop mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc in testl ss dec push pop imul mov lock add cmp push bound mov enter icebp sti add cmp pop outsb js lea int3 xlat loope cmc add or inc dec pop fs mov aad jmp sbb xor inc pop push mov aam call sbb pop data16 test (bad) jecxz clc add inc dec push pop imul mov lock add sbb sub inc dec push pop imul mov (bad) into fsub in testl xor dec push pop imul mov in clc add and xor push pushf cmpsb mov (bad) jecxz clc add aas dec push pop push fwait movsl scas inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov in testb adc sub cmp outsl jns lea lret call sbb xor inc push pop outsb js mov lret call sbb pop add orl int3 (bad) loopne cmc decl adc push pop addr16 test ret int3 xlat loope cmc decl adc sub cmp jo test ror loopne cmc add adc dec push pop push jg xchg sahf test mov repz adc push pop data16 test ret into ftst lock add sbb sub inc dec push outsl jns (bad) lcall in stc add sbb sub pusha push jle xchg popf cmpsl mov (bad) rcr out cli add sbb cmp fs test ret int loope cmc decl adc sub cmp push pop gs mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov outsl jp (bad) cltd mov (bad) loopne cmc add adc dec push pop addr16 xchg ret into fsub in testl xor push sahf stos mov ror loop testb adc dec push pop push mov rcr out std pop adc xor inc push pop outsl jp mov lret jmp sbb dec pop outsb js mov int3 (bad) loope testb adc inc push pop data16 test ror fucomip hlt decb adc push pop gs test ret loope testb adc sub dec push pop push pushf cmpsb mov (bad) into ftst out clc add and pusha push jg xchg sahf test mov lock add cmp push arpl test ret into (bad) out cli add sbb inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cmp push pop data16 xchg enter icebp std pop adc cmp pop push jg xchg popf cmpsl mov enter lock add xor dec push pop push lahf test fsub lock add cmp pop bound mov lret aad ljmp xor push pop outsl jns lea int3 (bad) loopne hlt decb adc sub ds push pop imul mov lock add sbb sub inc dec push pop push popf cmpsl mov (bad) rcr in stc add sbb sub inc dec push pop push jle xchg popf cmpsl mov (bad) jecxz testl xor push fwait cmpsb mov (bad) in clc add inc dec inc rcr repnz pop adc and pop arpl test lret roll and lods mov into flds hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov in sti push adc and aaa pop data16 test ret loop stc add sbb xor inc push pop addr16 mov lret ljmp xor dec push pop imul xchg mov (bad) loope cmc add dec pop arpl xchg vpand call adc daa xor push pop bound jg xchg lahf stos mov (bad) into fxam lock add xor je orl loop repnz adc sub cmp push jge xchg fwait movsl mov lret out cld pop adc xor dec push popa insb ja mov rcr out cld pop adc inc push pop imul ret in sti push adc xor dec push popa insl js (bad) fwait cmpsb mov enter cmc add and aaa inc dec pop arpl test enter hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc add and cmp pop push orl testl cmp ja lea rcr ljmp cmp pop push mov xlat in hlt sti add push sbb das cmp pop insl jae mov into fsub out cli add xor inc dec push bound orl int loopne stc add cmp jnp xchg mov fucomp testb sbb ss dec pop addr16 mov int in stc add push pop imul mov lock push adc pop add jle xchg mov ftst out sti pop adc sub inc dec pop fs mov (bad) icebp cld pop adc pop arpl orl rcr out std or push sub dec push bound test mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov popf test loop clc add inc dec push bound mov rcr call pop sub inc dec pop outsl jnp xchg popf test loop stc add inc dec push arpl xchg lret out stc add aas dec push arpl xchg int3 fsub out cli push adc push bound test lret in clc add sbb xor jns xchg sahf test in cli push adc push bound test leave aam jmp add inc push pop push orl out stc add ds push pusha insb ja mov rcr jmp add sbb pusha insb ja (bad) fwait cmpsb mov enter repz or sbb dec push pop imul xchg lods mov lret (bad) loopne testl inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc and popa insb js mov mov out cli add cmp popa insb jbe mov aad ljmp cmp pop data16 mov leave rcr call pop sub ds push pusha imul mov hlt decl adc dec pop fs orl out std or and push popa insb jns mov (bad) rcr in icebp sti pop adc daa xor inc dec push popa insl ja lea mov testb add sbb sub dec push pop push mov fsubrp hlt decl adc dec pop gs xchg int jecxz repnz or and cmp data16 xchg lret xlat loop stc add ds push popa outsb jns nop fwait cmpsb mov leave cld adc xor inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov dec push pop push jnp mov mov fsubp jmp clc incb and inc dec push pop pusha insl je addl ret aad loop out cmc cld add movhps sub xor push pop gs out clc add inc dec push pop push lcall loop testb push and xor dec push pop push lcall loope cmc add adc sub insl ror xor sahf roll cmp int3 (bad) loopne hlt decb adc pop sub cmp jo mov (bad) rcr in stc add aas dec push pop data16 test ret loopne hlt decl adc xor pop fs ja mov (bad) rcr in stc add aas dec push pop addr16 xchg ret loope hlt decl adc dec inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov bound mov rcr in stc add aas dec push pop push lcall jecxz testl xor push pop outsb js mov enter icebp cli add sbb sub inc dec push pop addr16 test ror loopne repz pop adc and push pusha push jle xchg pushf cmpsb mov (bad) into fsub in testb adc sub cmp dec pop arpl orl out cli add sbb sub inc dec add push jle xchg fwait movsl scas mov ljmp xor inc dec pop bound mov (bad) rcr in testl xor inc push pop data16 test ror fsubrp repnz push adc and pusha imul mov (bad) jecxz testl xor push fwait cmpsb mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov (bad) into fsub in stc add inc dec push popa imul sahf test frstpm(287 out stc add sbb cmp bound mov lret jmp push sub ds push pop data16 xchg ret int loope hlt decl adc sub cmp push pop gs test (bad) int loope testb adc sub cmp push pop outsl jns lea lret call sbb cmp push popa imul orl out cli add sbb sub inc dec push pop push pushf cmpsb mov (bad) rcr out cld push adc sub ds push pop addr16 test ret loope cmc decl adc push pop outsw jns (bad) cltd mov xlat loope cmc decl adc push pop outsl jns lea leave aam call sbb das cmp mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov arpl (bad) mov lret ljmp xor push pop outsb js mov leave rcr out sti add cmp push pusha push orb (bad) rcr in cli add sbb sub popa imul xchg popf cmpsl mov (bad) in clc add and xor push pushf cmpsl mov (bad) in clc add sbb cmp outsl jp (bad) lcall fsub repnz push adc xor inc push pop data16 xchg lahf stos mov enter icebp cld push adc and cmp bound test ret loope cmc decl adc dec pop arpl orl call sbb pop arpl (bad) mov enter lock add cmp push bound orl hlt decb inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov sbb xor inc dec pop arpl (bad) mov leave rcr out sti add cmp push pusha push jle xchg popf test mov lock add sbb sub inc dec push pop imul mov (bad) jecxz testl xor dec push pop data16 xchg (bad) into fsub in testb adc inc push pop data16 test ret into fsub in add add and xor dec push pop addr16 xchg (bad) jecxz clc add and xor push fwait movsl scas mov in testb pop and ss dec push pop push jle xchg sahf test mov icebp cld push adc and cmp push bound mov leave aam jmp and xor dec push pop imul mov lret jmp push sub cmp jno test mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov in testl aaa inc dec push pusha imul xchg sahf test fucomp repnz pop adc and pop arpl (bad) mov lret call sbb push popa imul xchg sahf test mov lock add sbb sub inc dec push popa imul xchg sahf test loope testb adc sub cmp imul mov (bad) rcr call sbb xor inc push pop outsl jp mov lret (bad) loopne hlt decb adc push pop outsb jns lea int loope testb adc dec push pop addr16 test ret int loop testl xor dec push pop addr16 xchg (bad) into fsub in testb adc sub dec push pop imul mov ret int loop testb adc dec push pop inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov jno xchg (bad) into fsub in testl xor dec push pop push popf test mov repz or sub dec push pop insb ja mov leave aam jmp sub inc dec push pop push fwait movsl mov (bad) iret (bad) out cld push adc daa xor push pop data16 test mov in testb adc sub cmp outsl jns mov int loop testb adc inc push pop data16 test ror loopne testb adc dec push pop addr16 xchg (bad) into fsub in testb adc dec push pop data16 test ret loope testb adc sub cmp push pop outsl jns lea leave rcr out sti add cmp pop bound mov rcr out cli add sbb hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov and inc dec push pop imul mov out stc add inc dec push pop push fwait movsl scas mov out clc add and xor push lcall loope testb adc dec push pop addr16 xchg enter ljmp xor push pop data16 test ret int loope testb adc dec push pop push pushf cmpsb mov (bad) in sti push adc and cmp pop gs test (bad) into fsub out clc add and xor imul scas mov in testl ss dec push pop imul mov in clc add inc dec push pusha imul xchg sahf cmpsl mov (bad) rcr in cli add sbb sub inc dec push pop imul scas mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov fsub in clc add and inc dec push pop push jg xchg popf cmpsl mov (bad) rcr in stc add sbb sub pop push jg xchg sahf test mov lock add and cmp lret add inc je lods mov icebp sti push adc xor dec push bound orl rcr ljmp cmp pop imul pop int3 pop insb cmpsl daa sub outsl jp nop popf test mov repz or sbb push pop addr16 xchg (bad) rcr out cli add sub insl ja (bad) lcall jmp add sbb xor dec push pusha insb js nop fwait cmpsl mov lret out cli push adc dec pop gs xchg int3 fsub out sti push adc pop arpl xchg push iret fucomip testb sbb cmp push popa insl jns inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc nop pushf cmpsl mov lret (bad) loope clc add sbb xor dec push popa insl js mov aam jmp add inc push pop push mov fucomp hlt decl push and addr16 sub bound orl into fsub in testl ss dec push popa imul mov and cmp push sahf cmpsl mov (bad) int in clc add jecxz and cmp jne mov int3 xlat loope testl cmp pop push mov xlat loop clc add dec xchg mov stc xor xlat std inc push pop outsl jns lea ror loopne repz adc sub cmp push pop data16 test ror loope hlt decl adc pop data16 test ret int mov (bad) iret fxam inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc out stc add sbb sub push addr16 ret in adc dec pop outsl jp nop fwait movsl mov (bad) in cli add cmp pop data16 xchg (bad) rcr out cld pop adc xor jge xchg fwait movsl scas mov jmp decl adc xor inc dec pop bound orl in stc add inc dec push pop addr16 test ror fucomip repnz pop adc and push pusha push jg xchg popf cmpsl mov (bad) jecxz testl xor outsb jns lea lret call sbb cmp jo test mov in testb adc daa xor jo test ror fucomip repz push adc and aaa inc dec push pusha push jle xchg popf test mov lock add inc dec push inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc pop imul scas mov in testb adc sub dec push pop data16 test ror loopne hlt decb adc xor inc dec pop bound jg xchg popf cmpsl mov (bad) loop testb adc sub cmp push pop outsb js lea leave rcr out sti add ss dec push pop push fwait movsl scas mov ljmp xor inc dec pop fs js mov lret out sti push adc and cmp push pusha push jle xchg popf cmpsl mov (bad) in testl xor dec push pop addr16 test mov in testl xor dec push pop addr16 test ror loopne testb push and inc dec push pusha push jg xchg popf cmpsl mov (bad) rcr in clc add and xor inc push pop outsl jns lea int3 inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov loope testl ss dec push bound lea fucomi repz sbb pop imul int3 ftst out clc je movsb scas mov icebp cld pop adc rcll inc jl jmp ljmp jo mov rcr out std pop adc push pusha imul xchg mov (bad) lock insb ja mov leave rcr out sti push push adc and cs inc inc dec push pop popa push mov scas mov rol aam loope out cmc sti add adc and inc dec pop arpl test mov out hlt cli add or sub dec push pop popa insl je orl rol aam loopne in repz add or sub cmp inc dec push pop pop gs jb jg mov hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov movsl stos mov mov fsubp jmp clc incb adc push and inc dec push push pop fs ja test stos mov (bad) rcr jecxz clc add sbb push pop push lahf stos mov leave aad jmp cld or dec push pop data16 xchg (bad) fucomp idiv add adc push and inc dec push pop pop imul test stos mov mov (bad) jmp clc incb and inc dec push pop pop gs jae addb cmpsl scas mov rol aam loopne in hlt cli add or cmp dec push push pop arpl ja orl mov mov (bad) in repz incl or sbb es dec push pop popa outsb je orl ret aad loop out idiv add adc sbb inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc cmp pop arpl js test stos mov mov (bad) in repnz incl or sub dec push pop bound jbe test stos mov mov fsubp jmp clc incl and inc dec push pop pop data16 jae addl ret aad loop out cmc cld add unpckhps sub ss pop imul test lods mov mov loope out cmc sti add push adc xor ds dec push pop pop imul test stos mov mov fsubp jmp clc incb adc pop es dec push pop popa outsb je orl ret aad loop out idiv add adc sbb ds dec push pop pop gs jb jg mov mov mov (bad) in repnz mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov incl and inc dec push pop pop data16 jae addb lods mov rol aam loope out hlt sti add push adc and cs inc dec dec push pop popa push xchg scas mov ror aad loop out cmc cld add movhps cmp pop fs ja test stos mov mov fucom ljmp sbb and inc dec push pop pop imul xchg lods mov rol aam loope out hlt cli add or das xor push pop fs ja test stos mov mov fucom ljmp pop push and xor ds dec push push pop imul test lods mov int in clc decb adc sub dec push pop gs xchg (bad) int3 rcr (bad) in repnz incl inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc adc and cmp pop popa push mov scas mov ret aad loope out cmc incb adc xor inc push pop gs mov rcr out decl adc sub popa insb ja mov lret jmp add adc sub push pop bound jbe (bad) mov scas mov ret (bad) fucom icebp cld pop push sbb cmp push pop data16 xchg ret into add in cli push adc and ss dec push pop imul mov leave aam in std add ds dec pop data16 js mov mov (bad) in repnz incl and inc dec push pop pop data16 jae addb lods mov mov (bad) in repnz incl and push pop imul test stos mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc fsubp jmp idiv add adc sbb cmp pop fs ja orl scas mov ret lret fucom jmp or pop and aas dec push pusha push (bad) mov vpsubusw in repnz incl and inc dec push pop pop gs jb jg mov mov mov (bad) jmp clc incb and add push pop pop gs jb jg mov mov mov fsubp jmp clc incb adc push and xor ds dec push pop pop imul test stos mov ret fucomip hlt decl adc inc dec push popa insb js mov lret xlat loop icebp cld or sbb xor jno test rol (bad) repnz incl es cmp inc dec push pop pop imul test inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cwtl sahf movsb stos mov mov fsubp ljmp push sbb cmp dec push push pop fs jbe orl scas mov ret aam loope out hlt cli add or cmp dec push pop popa push mov mov mov fsub jmp or push sbb cmp dec push pop pop imul add cmpsl scas mov ror aam loop out cmc sti add push adc xor push pop popa outsb je addl ror (bad) fucom jmp or pop sbb ds dec push pop pop imul xchg mov mov (bad) in repnz incl and inc dec push push pop gs jb jg mov mov mov loopne in hlt cli add or sub inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov dec push pop popa push mov mov mov fsubp in repnz incl or sbb es dec push pop pusha data16 jae addb lods mov rol rcr loopne in hlt cli add or sub dec push pop pusha insl je addl rol rcr loopne in add sti add push push sbb cmp pop fs ja test stos mov mov fsubp jmp idiv add adc push and xor ds dec push push pop fs js test stos mov mov fucom ljmp push sbb cmp pop arpl jbe orl mov mov (bad) in repz incl or sbb es cmp inc dec push pop pop data16 jae addb lods mov mov (bad) in repz mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc stc incl or sbb and inc dec push pop pop imul test stos mov mov fsubp jmp idiv add adc push and xor aas inc dec push pop pop data16 jb jg mov mov mov (bad) jmp clc incb and inc dec push add gs je addb scas mov ret fucom repz sbb push pop imul mov ret int3 fsub ljmp push sbb dec push pusha insl je addl rol rcr loopne in repz add or sbb das cmp outsb js mov (bad) loop clc add sbb cmp push pop addr16 xchg (bad) into (bad) in clc add inc dec dec push pop popa push xchg scas mov ret aad loope out hlt sti add hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc or pop sub cmp push pop imul test (bad) out sti pop bndldx push pusha push jg xchg mov rcr jmp sbb das cmp insw jbe (bad) xchg mov aad loop out idiv add movhps sub add ds dec push pop pop imul test stos mov mov fsubp ljmp sbb and inc dec push push pop fs js lea mov fucom jmp or adc xor push pop popa push xchg lods mov rol aam loope in repz add or sub dec push pop pop data16 xchg ret (bad) int pop insl js mov rcr call and cmp pop fs nop pushf cmpsb mov (bad) into fsub icebp cli add sbb hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov and cmp pop outsb js lea ret int in cli add sbb cmp push pop xchg jmp mov movsl mov repnz inc push pop addr16 mov shl in testl dec pop gs mov into ftst lock push adc and inc push pop data16 test enter hlt decl adc dec pop imul mov hlt add pop and cmp pop push mov fsubrp hlt add and pusha insb jp xchg sahf cmpsl mov enter repz adc dec push arpl xchg int in sti pop adc push pop imul mov lret in clc add sbb pop imul (bad) call and cmp pop push mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc rcr out hlt add and cmp pop imul mov hlt add and cmp pop addr16 mov (bad) icebp std or pop sub inc dec pop addr16 mov into (bad) icebp std or sub inc dec pop outsl jnp xchg sahf stos mov int3 xlat jecxz cli push adc push bound xchg int in cld pop adc sub outsl jp xchg pushf test loop clc add sbb xor dec push popa insl jns nop fwait cmpsl mov lret xlat loop stc add sbb cmp pop (bad) in push popa insb ja mov push and inc dec push bound mov rcr in add inc dec pop outsb js mov iret frstpm(287 repnz push adc xor push outsb cwtl int3 out std cmp outsl jnp xchg pushf cmpsl mov lret xlat jecxz add pop adc hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov aas dec push pusha insb ja mov aad in and repz nop xlat sti aaa addr16 sahf (bad) and pop addr16 mov enter repz pop adc push pop addr16 xchg (bad) rcr out cld xor outsl jns (bad) cltd movsb scas mov lock push adc and pop data16 test (bad) rcr out sti cs jnp scas shl ljmp xor dec push pop imul mov lret jmp pop sub dec push pop imul mov (bad) rcr out cld pop adc ss dec push pop insw jae addb lods mov mov loope testl xor outsb jns lea int3 xlat loop testl xor dec push pop imul lods mov lret (bad) loop idiv add inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc cmp dec push pop pusha insw jae addb lods mov rol rcr loopne in repz add or sub dec push pop pusha insl je addb lods mov rol aam loopne in repz add or sub dec push pop pusha insl jae addb lods mov rol rcr loopne in repz incl or sbb es cmp inc dec push pop pusha data16 jae jg mov mov mov loopne in repz add or sbb es cmp inc dec push pop pop gs jb jg mov mov mov (bad) jmp clc incl and inc dec push pop pop imul test stos mov mov fsubp jmp clc incl and aas inc dec push pop pop gs jb jg mov mov mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov fsubp jmp clc incb adc push and inc dec push pop pop imul test stos mov mov fucom ljmp push sbb cmp dec dec push pop fs ja orl mov mov fsub jmp or adc xor push pop popa push xchg scas mov rol aam loope in hlt cli add or sub dec push pop pusha data16 jae jg mov mov mov (bad) in repnz incl and inc dec push pop pop imul test stos mov mov fucom jmp or push sbb cmp dec dec push pop arpl jbe (bad) add test lret fucom jmp or push sbb sub ss dec push push pop arpl mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc outsl jbe (bad) mov scas mov ret aad loope out cmc sti add push adc and cs inc inc dec push pop pusha insl jae addb lods mov rol rcr loopne in repz add or sbb es cmp pop bound test stos mov mov fucom ljmp pop sbb cmp pop arpl jbe orl mov mov fsub jmp or adc ss dec dec push pop bound jne (bad) mov mov int (bad) icebp cld pop adc daa xor outsb jns mov mov ret leave rcl fucomip testb sbb es cmp inc dec push pop pop imul test mov (bad) rcr in stc add sbb xor dec pop gs mov rcr out sti push adc daa xor inc dec pop inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov outsl jns mov int3 (bad) add jmp clc incb adc sbb inc dec pop popa imul mov lock pop push sbb pop imul xchg sahf test fsubr repnz push adc es cmp pop fs xchg ret in clc incb adc push and xor cmp pop arpl jbe orl scas mov ret aad loop out cmc sti add push adc and cs inc inc dec push pop pusha push cwtl sahf movsb stos mov mov fucom ljmp push sbb sub ss pop bound jne (bad) mov scas mov rol aam loope in hlt cli add or sub cmp dec push popa push fwait cmpsl mov (bad) rcr jecxz clc add adc push and inc dec push push pop imul test inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov sahf add (bad) fcomp in repnz incl and inc dec push push pop imul test stos mov mov fucom jmp or push sbb sub ss dec push push pop arpl in decl adc dec pop fs xchg int in sti push adc sub outsl jp xchg sahf test in cmp bound xchg xor push pop je xchg popf test clc add sbb xor insl js nop pushf cmpsl mov int3 fxam icebp std or mov (bad) lock push adc xor dec push pop imul mov testl ds push pusha imul cltd movsl mov (bad) rcr ljmp cmp pop imul ret iret (bad) repnz or sub add outsb jns inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc xchg lahf stos mov lret (bad) loope clc add sbb pop addr16 mov iret (bad) repz adc dec pop outsb jns mov rcr ljmp cmp pop addr16 mov iret (bad) repnz adc push pop addr16 mov int in std or dec pop outsl jnp xchg lahf stos mov into fxam icebp cld pop adc sub inc dec pop arpl test lret in clc add sbb xor dec push arpl xchg int in sti push adc push bound test leave aad in clc add sbb xor jns xchg popf test ror jecxz sti push adc push popa insl js nop pushf test mov clc add sbb xor dec pop fs mov (bad) iret (bad) repnz pop adc sub cmp pop bound mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov jne (bad) mov (bad) rcr loop out testb push and pop imul test stos mov mov fsubp jmp idiv add adc sbb cmp pop arpl orb ret lret in repz add sbb sub ss dec push pop arpl jbe orl scas mov ret (bad) fsub jmp or adc xor push pop bound jbe (bad) mov scas mov ret aad loop out cmc sti add push adc xor push pop popa push xchg scas mov ror aam loope out hlt sti add push adc and cs inc inc dec push pop pusha insl je addb lods mov rol rcr loopne in add sti add push adc xor inc inc dec push pop popa insl je addb hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cmpsb lods mov rol rcr loopne in repz incl or sbb daa sub dec push pop pusha data16 jae jg mov mov mov (bad) in repnz incl and inc dec push push pop imul test stos mov mov fucom ljmp pop sbb cmp pop arpl jbe (bad) mov scas mov ret leave rcl fsub jmp or adc xor push pop popa push xchg lods mov rol rcr loope in hlt cli add or sub dec push pop pusha data16 jae jg mov mov mov fsubp jmp clc incb adc pop and inc add pop data16 jb jg mov mov mov fsubp jmp idiv add adc sbb mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc aaa cmp pop fs ja test stos mov mov fsub jmp or push sbb sub ss dec dec push pop bound jne (bad) mov scas mov ret aad loop out cmc sti add push adc and cs inc inc dec push pop popa insl je addb mov fchs out repz incl or sbb and inc dec push pop pop imul test stos mov mov fsubp ljmp push sbb cmp pop arpl jbe orl scas mov ret aad loop out cmc sti add unpckhps and cs inc dec dec push pop bound jne orl mov fndisi(8087 out hlt cli add or sub dec push pop pusha data16 jb jg mov mov mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc fcomp in icebp idiv add adc sbb cmp pop arpl jne (bad) mov scas mov rol aam loope out hlt cli add or sub dec push pop pop imul test stos mov mov fucom jmp or push sbb sub xor push pop popa push xchg lods mov rol rcr (bad) in repnz incb and xor cmp pop imul test stos mov mov fsub jmp or adc xor push pop popa insl je addb lods mov rol rcr loopne in repz add or sub cmp inc dec push pop pop imul test stos mov mov fsubp ljmp push sbb cmp dec dec push pop inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov bound jne orl rol rcr loopne in repz add or cs inc inc dec push pop pusha insl jae addb lods mov mov (bad) in repnz incl and inc dec push pop pop outsb jns lea into (bad) jmp cld pop adc pop es cmp push pop popa insl jae addb lods mov mov loopne in repz incl or sbb and inc dec push pop pop fs ja test stos mov mov fsub jmp or adc xor push pop popa outsb je addl mov fnop out repz add or sbb and inc dec push pop pop imul test stos mov mov fsub jmp or adc xor mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc inc dec push pop popa insl jae addl rol rcr (bad) in repnz incl and xor cmp pop arpl jbe orl scas mov ret aad loop out cmc sti add push adc and sub dec push pop pop data16 jb jg mov mov mov fucom ljmp pop sbb cmp dec dec push pop bound jne (bad) mov scas mov rol aam loope in repz add or sub dec push pop pop data16 jb jg mov mov mov add in icebp clc incb adc sbb cmp pop arpl jbe orl scas mov ret aad loope out hlt sti add push adc and sub dec push pop pop data16 jb jg mov mov mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov lret rcr fsubp jmp idiv add adc sbb cmp pop bound jne (bad) mov scas mov rol rcr loope in hlt cli add or sub dec push pop pusha data16 jae jg mov mov mov fucom ljmp push sbb dec push push pop arpl jbe (bad) mov scas mov ret aad loope out hlt sti add push adc xor push pop popa push mov scas mov rol aam loope in hlt cli add or sub inc dec push pop popa insl je addb lods mov rol aam loope in hlt cli add or sub dec push pop pusha data16 jae jg mov mov mov (bad) in repz add or sbb es cmp inc dec push pop pop inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov imul test stos mov mov fucom ljmp push sbb cmp pop arpl ja orl mov mov fsub jmp or adc xor push pop bound jne (bad) mov scas mov rol aam loope in hlt cli add or sub dec push pop pusha insw jae addb lods mov rol rcr loopne in repz incl and inc dec push pop pop imul test movsl stos mov mov (bad) jmp clc incb and xor ds dec push push pop fs ja orl mov mov fsub jmp or adc xor push pop bound jne orl rol aam loopne in repz mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov add or sub dec push pop pusha insl jae addb lods mov mov (bad) in repnz incl and inc dec push push pop imul test stos mov mov fsubp jmp idiv push adc es pop data16 test mov out hlt cli add or cs inc inc dec push pop pusha insl jae addb lods mov rol rcr (bad) in repnz incl and inc inc dec push pop pusha insw jae addb lods mov mov (bad) in repnz incl and inc dec push push pop fs ja test stos mov mov fucom ljmp push sbb cmp dec dec push pop arpl jne (bad) mov scas mov ret aad mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc fsub call or adc xor push pop popa push xchg lods mov rol rcr loopne in repz add or sub dec push pop pusha data16 jae jg mov mov mov (bad) jmp clc incb and inc dec push pop pop imul test stos mov mov fucom ljmp push sbb cmp dec dec push pop arpl jne (bad) add stos mov mov fucom ljmp push sbb sub ss dec dec push pop bound jne (bad) mov scas mov ror aad loop out cmc sti add push adc and cs inc inc dec push pop popa insl je addb lods mov rol rcr loopne in repz incl or sbb es cmp inc dec push pop pop gs inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov jb jg mov mov mov fsubp jmp clc incb adc push and xor cmp pop imul test stos mov mov fucom ljmp pop sbb cmp pop fs ja orl mov mov ljmp pop sbb cmp pop arpl ja orl mov mov (bad) jmp repz add or sbb es cmp inc dec push pop pop data16 jb jg mov mov mov (bad) in repz incl or sbb es dec push pop pusha insw jae addb lods mov mov (bad) in repnz incl or sbb and inc dec push pop pop data16 jb jg mov mov mov (bad) jmp clc incl mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov push and inc dec push pop pop imul test stos mov mov (bad) in repnz incl and inc dec push pop pop imul test stos mov mov fsubp jmp clc incb and xor ds dec push push pop fs ja test stos mov mov fucom ljmp push sbb cmp pop pop imul test stos mov mov fsubp ljmp pop sbb cmp pop fs ja test stos mov mov fucom ljmp push sbb cmp pop arpl jbe (bad) mov mov mov fsub jmp or push sbb sub xor push pop bound jne (bad) mov scas mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov fsub call or adc xor push pop bound jne orl rol aam loope in hlt cli add or cs inc inc dec push pop popa outsb je addl fucom in cmc add cmp dec push pusha imul mov mov mov fucom ljmp adc push and inc dec push pop pop imul test stos mov mov fsubp jmp clc incb and inc dec push pop pop imul test stos mov mov fsubp ljmp pop sbb ds dec push push pop fs ja test stos mov mov fucom ljmp push sbb cmp pop arpl ja orl hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc movsb stos mov mov fucom ljmp push sbb sub ss dec dec push pop arpl jbe (bad) mov mov mov fucom ljmp pop sbb cmp pop arpl jbe orl mov mov fsub ljmp push sbb cmp push pop fs ja test stos mov mov fsubp ljmp pop sbb ds dec push push pop fs ja test stos mov mov fucom ljmp push sbb cmp pop arpl ja orl mov mov fucom jmp or push sbb sub ss dec dec push pop bound jne (bad) mov scas mov ret leave iret (bad) fsub jmp or adc xor inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc inc dec dec push pop bound jne orl ror aam loop out cmc sti add push adc xor push pop popa outsb jne (bad) mov scas mov ror aad loop out cmc cld add adc sbb cmp pop arpl orl add leave rcl fsub jmp or push sbb sub xor push pop arpl js test stos mov mov fucom ljmp push sbb cmp dec dec push pop arpl jbe (bad) mov scas mov ret aad loop out cmc cld add unpckhps sub xor push pop bound jne orl rol aam loope out hlt sti add push adc and cs inc dec dec push pop popa insl je addl rol rcr loopne inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov in repz incl or sbb es dec push pop pop data16 jb jg mov mov mov (bad) in repnz incl and inc dec push pop pop imul test stos mov mov fsubp jmp idiv add adc add and inc dec push pop pop imul test stos mov mov fsubp jmp idiv add adc sbb cmp pop arpl jbe orl mov mov fsub jmp movhps sub pop call inc xchg adc bnd inc mov sub rorl push orl decl push and inc dec pop gs xchg lret jmp add inc dec pop gs mov push inc push pusha lea aam jmp inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc decb adc sub inc dec pop gs mov fsubr hlt add dec push popa insb jns xchg sahf stos mov into (bad) repnz push and cmp pop imul cltd movsl mov enter xchg (bad) or mov scas ror loop stc add sbb xor je mov rcr out decb adc sub inc dec pop gs xchg lret in clc add sbb aas dec push popa insl jns nop fwait cmpsl mov lret (bad) loope clc add sbb xor jbe (bad) lcall jmp add sbb pop push mov add call and cmp push pusha imul cltd movsl mov enter testb pop and addr16 mov fsub repnz or sub inc dec pop data16 mov rcr out decb adc sub hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov push arpl orl aad jmp add inc dec pop outsb jns (bad) lcall jmp and inc dec pop arpl xchg (bad) rcr call and bound test (bad) rcr ljmp cmp pop fs xchg lret in clc add sbb xor jbe mov iret (bad) lock pop adc sub aas dec push pusha insb ja lea rcr jmp and inc dec pop gs xchg int loop clc add sbb daa xor jne lea rcr call and ss dec sub mov enter dec pop outsl jp xchg popf test fucom icebp sti pop adc push pop gs icebp push xor jo xchg lret in testl mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov ss dec pop outsl jnp xchg pushf cmpsl mov (bad) rcr ljmp cmp xchg in push pop mov out xor lret test lret (bad) loope clc add sbb cmp pop addr16 mov fsub out cli add cmp push xchg stos mov into (bad) icebp std or sub inc dec pop push mov fsubr hlt add dec push bound push pusha insb ja mov rcr jmp and gs xchg lret ljmp das cmp pop addr16 mov int3 xlat loop clc add sbb lods lret fmull dec jne fbld dec xchg mov add inc push pop gs test (bad) rcr out std pop adc push pop push jg xchg lahf stos mov int3 xlat loop testl inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov push pop addr16 mov leave aam ljmp xor dec push pusha imul xchg mov (bad) icebp cld pop adc push pop imul ret jecxz stc add cmp pop addr16 mov int3 xlat loop clc add sbb cmp outsl jp nop pushf cmpsl mov (bad) rcr jmp pop sub dec push pop push orl repz adc sub insl js mov rcr out cld pop add sub insb ja lea iret (bad) icebp cld pop adc xor push pop data16 xchg (bad) rcr out decb adc sub dec push pusha imul scas mov icebp sti push adc push pop push orl lock pop adc push popa insb ja mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov scas mov out stc add sbb pop addr16 mov lret jmp add sbb cmp pop addr16 xchg lret (bad) loope clc add sbb pop addr16 test (bad) iret (bad) lock push push adc mov adc xor dec push popa imul xchg pushf movsl scas mov out stc add lods (bad) in adc dec pop data16 mov iret (bad) lock pop add sub push orb (bad) in testb dec fwait stos xlat sbb lods jmp push jae mov fisttpll dec pop arpl orl loop idiv or sbb dec pop bound jg xchg pushf cmpsb scas mov jmp decb adc xor inc dec pop bound mov (bad) rcr in testl xor push pop arpl hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov insl jbe mov (bad) rcr in testl xor push pop outsb ja mov push popa orb rcr in clc add inc push pop arpl orl in testl xor inc dec pop bound mov (bad) into fsub in idiv or sbb dec push popa imul xchg pushf into xor push adc lock pop das add push pop addr16 xchg ror fucomip repnz pop adc and push pusha imul mov jmp decl adc dec pop arpl (bad) mov rcr in clc add pop sub outsl jnp xchg popf cmpsl mov (bad) in stc add inc dec push pusha push (bad) mov lret (bad) loopne cmc decl adc sub cmp inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov push pop data16 test ret into fsub in testb adc sub ds push pop imul mov (bad) rcr in stc add sbb cmp push popa imul xchg mov aad ljmp xor jo test ret loopne cmc add adc sub dec push pop push sahf test fsub repnz pop adc xor push pop data16 add mov in testb adc dec push pop data16 test (bad) in stc add inc dec push pop push pushf cmpsb mov (bad) iret ftst out stc add inc dec push popa imul xchg lahf stos mov lret aad ljmp xor inc push pop outsl jns lea lret (bad) loopne hlt decb adc push pop data16 xchg enter repnz push inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov sbb pop arpl orl repz pop adc xor inc dec pop outsb jns lea int3 (bad) loope testl aaa inc dec push popa imul xchg mov aam jmp sbb push pop push pushf cmpsl mov fs shlb lds add push shll popa lahf cli xor jmp fcoml aam jbe hlt dec mov jo rcrb adc in xchg loop out dec jmp push in outsl ret (bad) adc pusha lods xor idivl xchg xor (bad) jns,pt xchg decl enter lock jmp stos out cmpb repz aas insl mov enter cmp aaa cmpl inc push pop data16 xchg fsubr hlt add and cmp mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov ret cs push pop imul ror loop clc add adc xor insl js mov rcr out cld pop adc push pusha imul xchg mov fsub out clc add sbb leave cli cmp push cmpsb jmp daa xor push popa insl jns xchg sahf lods mov (bad) iret (bad) repz push and imul mov std or push pop imul pushf test ror jecxz sti pop adc sub inc push pop addr16 mov (bad) loop sti or cmp pop push orl xlat in cld or pop sub inc dec pop addr16 mov aad out cli push adc sub jno mov rcr jmp add sbb xor dec push fs mov rcr jmp add sbb xor dec pop inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov arpl xchg iret fucomi hlt add push sbb xor dec pop gs mov rcr jmp add sbb cmp push bound push mov fsubrp cmc decl pop and cwtl mov (bad) icebp sti pusha mov pop into fucomip cmc add adc dec push popa imul xchg lahf stos mov lret in clc add sbb pop push (bad) lods mov mov jmp data16 leave fcos or dec je loop xor dec push pop addr16 xchg ret int loope cmc decl adc push pop data16 test ror fucomip repz pop adc and pop bound ret int loope cmc decl adc dec pop outsb jns lea leave rcr out sti push adc and cmp push pusha imul xchg popf test mov xor ret jecxz clc add sbb inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov aaa inc add popa imul xchg popf cmpsl mov (bad) jecxz testl xor dec push pop data16 test ror fucomip repz adc xor inc push pop outsb js mov leave rcr out sub xchg pushf sar xor xchg fsub or push mov repz pop adc and pop bound mov rcr in stc add sbb sub pusha push jle xchg popf cmpsl mov (bad) out push adc xor push pop outsl jns mov lret aad ljmp xor jb xchg (bad) in cli add sbb sub popa imul xchg sahf test mov lock add cmp pop outsl jns (bad) cltd movsb scas mov in testl ss dec push pusha imul mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov leave rcr out cld pop adc xor inc push pop gs xchg (bad) rcr out sti push adc push pop outsl jp (bad) cltd mov xlat loope cmc decl adc push pop outsl jns lea lret jmp sbb dec pop outsb js (bad) cltd mov (bad) loope testb adc sub cmp jo test ret loope cmc decl adc dec push pop data16 xchg (bad) iret (bad) in clc add inc dec push pusha imul xchg lahf test fucomp hlt decl adc push pop push mov fsub repnz pop adc xor inc dec pop outsl jp (bad) lcall in stc add sbb sub outsb js mov int in add push adc and pop arpl (bad) mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov (bad) fucomip cmc pushl lock jb mov or and xor push fwait movsl mov (bad) in clc add test adc dec push pusha push jle xchg popf test mov out stc add inc dec push pop imul mov (bad) in clc add and xor loopne inc push sbb ljmp mov (bad) rcr out cli add sbb sub popa imul xchg sahf test mov icebp sti add outsl jns lea lret jmp sbb xor inc push pop outsb js lea lret ljmp xor out cli and inc dec push pop add jg xchg popf cmpsl mov (bad) in clc add and xor dec push pop addr16 mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov jnp xchg fwait movsl scas mov in testl xor jo test ret into fsub in testb adc pop adc sub dec cmpsb dec pusha insl jns (bad) lcall jecxz clc add inc dec pop insb jl xchg mov aad jmp add dec push bound test into fucomp repz pop and cmp push popa insl jns xchg sahf stos mov into (bad) icebp decb pop and cmp push pop imul cltd movsb mov (bad) rcr jmp and cmp pop data16 mov lret xlat jecxz stc push adc sub inc push pop push movsl mov leave aam ljmp cmp pop arpl xchg fsubr repz push and cmp pop add nop pushf test in std or and cmp push pusha insl jp xchg lahf stos mov into (bad) repz push inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov and imul mov cld or sub inc push pop push movsb mov enter cli push adc pop data16 mov aam in clc add sbb xor jo mov fsubr hlt add and ds push bound xchg rcr jmp xor jns xchg popf test in std or inc cwtl (bad) outsl jns lea (bad) rcr in stc add pop and xor outsw jns lea (bad) rcr in clc add adc inc push pop arpl orl icebp sti add sbb sub inc dec push pop push lcall loope cmc decl adc push pop addr16 xchg ret loopne hlt decb adc dec inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc pop bound mov iret fsub in idiv or sbb dec pop arpl orb (bad) in clc add and xor dec push pop data16 test ror fsubrp repz pop adc and push pusha imul xchg popf test mov in testb adc sub cmp pop arpl (bad) mov leave rcr call sbb pop bound orl in add add aas dec push pop push lcall fucomip hlt decb adc sub cmp dec pop outsb js mov (bad) rcr in testl xor dec push pop data16 orl leave rcr out sti push adc and push pusha push jle xchg pushf cmpsb mov (bad) jecxz testl xor push pop outsl jns mov hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov ret loopne cmc add adc dec push pop push lcall repz or sbb xor inc dec pop bound orl ljmp xor addr16 test ret loopne hlt decb adc pop arpl orl in clc add inc dec push pop imul scas mov in testl sub inc dec push pop push jge xchg pushf cmpsb scas mov ljmp xor inc dec pop arpl (bad) mov enter lock add sbb sub inc dec push pop addr16 test ror loopne hlt decb adc xor inc dec pop arpl orl out sti add aaa inc dec push pop imul mov (bad) iret (bad) in clc add and xor inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc dec push pop addr16 test ret loop testb adc inc push pop data16 test ror loopne cmc add adc sub ds push pop data16 test (bad) rcr in cli add cmp push popa insb jbe mov rcr in cli add sbb sub bound mov leave aam call sbb dec push pop addr16 xchg (bad) into (bad) in testl xor push lcall loop testl xor jno test ret loope cmc add adc inc push pop outsw jp mov lret aad jmp sbb pop bound orb (bad) rcr out decb adc sub dec push pusha push jle xchg pushf cmpsl mov (bad) in mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc out clc add and xor push sahf test mov icebp sti push adc and push popa imul xchg lahf test frstpm(287 out stc add aas dec push pop push fwait movsl scas mov in testb pop and xor addr16 xchg ret into fsub in testl xor dec push pop addr16 jle xchg popf test mov out cli add cmp push popa imul xchg sahf test mov out stc add sbb sub pusha push jg xchg popf cmpsl mov (bad) rcr in stc add cmp pop data16 xchg leave rcr ljmp xor jno xchg mov aam jmp push sub addr16 xchg ret int loope cmc decl adc ret clc add inc dec pop fs inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc xchg int jecxz stc add pop sub inc dec pop data16 mov fxam lock or push pop addr16 mov fsub lock pop adc sub dec pop fs xchg iret (bad) repnz adc dec pop gs xchg lret xlat jecxz sti push adc sub gs mov iret (bad) repnz push and data16 mov fsub out sti pop adc sub dec push arpl xchg int in sti pop adc and push bound jp xchg rol aam loope out hlt sti add bndldx xor inc push pop bound jne mov leave aam jmp clc incl xor insb js lea (bad) rcr out cli add sbb sub fs xchg mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc (bad) rcr in sti or sbb push pop push sahf test fucomip hlt decb adc sub ds push pop push lahf stos mov into (bad) icebp cld or daa xor inc dec push pop pusha imul mov out std pop adc sub cmp cmovno push add mov enter icebp sti add ss dec push pop addr16 test mov repnz add aaa inc dec push pop imul or push and xor ds dec push pop pop imul test stos mov mov (bad) in repnz incl and inc dec push pop pusha data16 jae jg mov mov cmc decl sbb sub inc inc dec pop outsl jne (bad) mov scas mov rol aad loop out cmc sti add push adc and cs inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc dec push pop popa outsb je orl rol aam loopne in repz add or sub dec push pop pusha insw jae addb lods mov mov (bad) in repnz incl and inc dec push add data16 jbe mov pop sub cmp outsb js mov (bad) rcr in stc add and xor dec push pop data16 test ret int loope cmc decl adc dec pop arpl (bad) mov enter lock add aas dec push pop data16 test into (bad) in testb adc sub cmp push pop arpl orl jmp sbb xor inc dec push popa imul xchg sahf test mov in testl xor outsl jns lea leave inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov fsub icebp sti add ss dec push pop push fwait movsl scas mov jmp add adc inc push pop outsb js mov (bad) rcr in stc add and xor dec push pop gs test mov lret aad jmp sbb das cmp pop bound mov iret (bad) in testl xor push pop outsl jns lea enter lock add sbb sub aas dec push pop push cltd movsb scas mov lret aad jmp sbb pop bound mov rcr in clc add and xor dec push pop addr16 test ret loopne hlt decb adc xor inc push pop outsl jns lea int3 xlat loope cmc add adc sub cmp outsl jns lea leave rcr out sti add inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cmp pop data16 test (bad) iret (bad) out clc add and xor imul scas mov in testb adc sub cmp push pop data16 test ret add (bad) out clc add and xor dec push pop push pushf cmpsb mov (bad) rcr jecxz testl xor dec push pop push cltd mov aad jmp sbb push bound mov rcr call sbb push pop imul scas mov in testl xor dec push pop addr16 xchg ret loope testl xor dec push pop push lcall loopne hlt decl adc xor inc push pop outsb js mov lret call sbb xor inc dec pop arpl orb enter inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov fsub lock add sbb sub popa push jg xchg sahf test fsub icebp sti add cmp pop bound mov enter repnz pop adc xor inc dec pop arpl orl lret jmp pop sub dec pop arpl orl int loop clc add inc dec push pop imul in clc add inc dec push pusha insl jns mov int3 (bad) fucomip repz pop adc xor inc dec pop outsb js mov lret ljmp xor jno xchg (bad) jecxz testl xor push pop outsl jns mov int loope cmc decl adc sub cmp jo xchg ret int3 (bad) loope cmc decl adc dec pop outsb jns lea hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc xchg mov aam jmp sbb xor inc dec pop arpl (bad) mov lret jmp sbb xor inc dec add outsl jns mov lret aad call sbb pop outsb jns lea lret aad jmp sbb xor inc dec pop outsb js lea lret call sbb xor inc dec pop bound lea lret jmp pop sub cmp jno xchg (bad) rcr in cli add sbb cmp push bound lea int3 fsub in clc add inc dec push pusha push orb lret jmp sbb push pop outsl jp (bad) cltd mov xlat loope testb adc sub aas dec push pop push fwait cmpsb mov (bad) iret (bad) out clc add and xor inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov dec push pop imul mov (bad) rcr out cld push adc and cmp pop bound mov ror loopne hlt decb adc sub cmp jne mov lret (bad) loopne hlt decb adc push pop data16 test (bad) iret (bad) out stc add sbb sub inc dec push pusha push jg xchg lahf stos mov lret call sbb xor inc dec pop outsb jns lea lret testb pop jge xchg mov (bad) lock pop adc subl das cmp push pop addr16 xchg (bad) jecxz clc add and ss dec push pusha push jg xchg sahf test mov repz or sbb xor inc push pop insl jnp xchg pushf cmpsl mov (bad) rcr out sti push adc xor inc push pop outsl jns mov rcr out std pop adc inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov xor push pop addr16 xchg (bad) in cli add sbb cmp pop arpl orl int jecxz clc add inc dec pop arpl orl int3 (bad) loope testb adc sub dec push pop imul mov ror aad loope out cmc cld add unpckhps and das xor push pop arpl jbe (bad) mov scas mov ret aad fucom jmp or pop sbb cmp pop imul test stos mov mov fsubp jmp clc incl es cmp inc dec push pop pop gs jae addb lods mov mov (bad) in repz add or sub cmp dec push pop popa insl je addl ret aad loope out cmc sti add push adc xor mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cmp dec push pop popa outsb je addl ret (bad) fsub jmp or pop sbb cmp pop fs ja test stos mov mov fucom ljmp pop push and xor ds dec push push pop imul test lods mov mov (bad) jmp clc incl and add push pop pusha insl je (bad) mov scas mov ret aad loop out cmc cld add unpckhps and cs push pop popa push xchg lods mov ror aad loop out cmc sti add push adc dec push pop imul mov (bad) rcr jmp sbb xor cmp dec push push pop fs ja lea (bad) into aam loope out hlt sti add push adc and cs inc inc dec push pop imul hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc orb lret (bad) loope stc add inc dec push bound test (bad) rcr out sti add cmp pop outsl jl mov mov mov fsub ljmp push sbb sub xor pop data16 orl leave rcr jmp sbb dec pop arpl test mov in clc add sbb das cmp arpl lea lret aad in testl sub aaa cmp pop arpl jbe orl mov mov fucom jmp or push sbb sub xor push pop bound jne (bad) mov mov into aad loop out cmc sti add push adc xor push pop bound jne (bad) mov scas mov ret aad loop out cmc cld add movhps hlt inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc sbb sub ss dec dec push pop arpl jbe mov leave aam jmp sbb cmp inc dec push pop pop imul test lods mov mov (bad) jmp clc incb and xor cmp pop fs ja orl mov mov fucom add icebp clc incb adc push and xor cmp pop arpl ja orl mov mov fsub jmp or sbb xor inc dec push pusha imul lea int3 fsub in testl cmp push pop imul mov (bad) rcr in cld pop adc and xor dec push pop popa outsb je addl rol aam loopne in hlt cli add or sub dec push pop pusha insw je addl rol aam mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov loope out hlt cli add or sub dec push pop popa insl je nop xchg sahf movsl stos mov rol rcr (bad) in repz incl or sbb and inc dec push pop pop gs jb jg mov mov ret aad jecxz out idiv add adc sbb cmp inc dec push pop pop imul test stos mov mov fsubp jmp clc incl and inc dec push pop pusha outsb jne orl rol aad loop out cmc cld add adc sbb sub ss pop arpl jbe (bad) mov mov mov fucom ljmp pop sbb ds dec push pop pop gs jb jg lea mov fndisi(8087 out hlt sti add push adc xor push pop bound jne (bad) mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc pushf mov ret lret fucom ljmp sbb and inc dec push pop pop data16 jb jg mov mov mov loopne in repz add or sbb es cmp dec push pop popa outsb je orl mov fsub jmp or push sbb cmp pop gs jb jg mov mov rol rcr loopne in repz add or cs inc inc dec push pop popa outsb je orl ret leave iret (bad) fucom ljmp pop sbb cmp pop arpl jbe orl scas mov ret (bad) fsub jmp or push sbb cmp pop fs ja test stos mov mov fucom ljmp pop sbb cmp inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc dec push push pop imul test stos mov mov (bad) in repnz incl es cmp dec push pop pusha insw jae addl ret (bad) fsub jmp or add and cmp arpl (bad) mov int3 xlat jecxz testl xor inc inc dec push pop popa insl jae test (bad) fcomp in icebp clc incb adc push and inc dec push pop pusha push jle xchg sahf test mov testl aas dec push popa insb ja nop fwait movsl mov (bad) in stc add sbb sub popa insb jne mov mov (bad) lret fsubp jmp clc incb and inc dec push pop pop imul test stos mov mov (bad) in repnz incl es cmp inc dec push pop pop inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov jb jg mov jb mov and int3 cli xor aad and outsl js mov (bad) iret fsub jmp incb adc and push pusha imul xchg popf cmpsb mov ret int3 (bad) fucomip repz push adc js lea into or dec push popa imul xchg sahf cmpsl mov (bad) into fsub in hlt cli add or cs inc dec pop fs xchg (bad) rcr out testb adc xor push pop popa outsb je addl rol rcr loopne in repz incl or sbb and inc dec push pop pop data16 jae jg mov mov mov fsubp jmp idiv add adc sbb cmp pop arpl ja orl scas mov ret aad loop out cmc sti add sbb inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov ss dec push pusha imul lea into (bad) in clc add pop and cmp push pusha imul xchg mov (bad) fucomip testb push sbb inc dec push pop arpl jbe orl mov mov fsubp jmp idiv add adc push and inc dec push pop pop imul test stos mov mov fsubp jmp idiv add adc push and inc dec push pop pop data16 jb adcb ret aad loop out cmc sti add push adc xor push pop arpl ja test stos mov mov (bad) in repz add or sbb daa sub dec push pop popa push mov scas mov ret aad loop out cmc cld add movhps sub xor push pop bound jne (bad) mov scas inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov fsub jmp or pop sbb ds dec push push pop imul test stos mov add (bad) in repnz incl es dec push pop popa push mov scas mov ret leave rcl fucom ljmp pop sbb cmp pop arpl js test lods mov mov (bad) in repnz incl or sbb es cmp inc dec push pop pop data16 jb jg mov mov mov loopne in hlt cli add or cs inc inc dec push pop popa outsb je orl ror aad loope out idiv add adc sbb cmp pop fs ja test lods mov mov (bad) jmp clc incb and inc dec push pop pusha inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov data16 jae addb lods mov rol aam loope out hlt cli add push adc and add xor push pop bound jne orl mov mov fsubp jmp clc incb and inc dec push pop pop imul test stos mov mov (bad) in repnz incl es cmp inc dec push pop pop imul test lods mov rol aam loopne in repz add push adc and cs push pop bound jne (bad) mov scas mov ret (bad) fsub jmp or push sbb inc dec pop arpl jg xchg lahf stos mov iret fchs jmp add inc dec push push pop arpl jbe orl enter out hlt cli add push adc and cs inc dec dec push pop popa push xchg sahf test mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov (bad) rcr out decl adc push pop imul mov (bad) rcr out decb adc push pop addr16 test mov fcomp in icebp clc incb adc push and xor cmp pop push pushf cmpsl mov lret fsubrp cmc add adc sub cmp jb mov (bad) in cli add inc push pop pop imul xchg mov rcr jmp and xor cmp dec dec push pop bound jne (bad) mov scas mov rol aam loope in hlt cli add push adc and cs push pop popa insl je addb lods mov int3 fcomp in repnz incl and inc dec push pop pop data16 jb jg mov mov mov (bad) in repnz incl and inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov dec push pop pop imul test mov (bad) out incb adc sub pop bound jne (bad) mov scas mov rol aam loopne in repz add or sub dec push pop pusha data16 jb jg mov mov mov fsubp ljmp pop sbb cmp pop fs jbe orl scas mov ret aad loop out cmc cld add unpckhps and cs dec push pop addr16 mov int fsub lock pop adc and cmp pop outsb jne mov lret out cld push bndldx push pop data16 test stos mov mov fsubp jmp clc incb and xor ds dec push pop pop imul test stos mov mov fsubp jmp stc inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov incl pop push adc and sub dec push pop popa insl je addb mov fsubp jmp clc incl and inc dec push pop pop imul test stos mov mov (bad) in repnz incl es dec push pop pusha data16 jb jg mov mov mov loopne in repnz incl daa sub dec push pop pusha insw jae addb lods mov ror aad loop out cmc sti add movhps sub ss dec push push pop fs js test stos mov mov fsubp ljmp sbb and inc dec push pop pop gs jb jg mov mov rol rcr loopne out hlt cli add or sub dec push pop arpl ja add cmpsb lods mov mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov mov loopne in repz add or sub dec push pop pusha insl je addl ret aad loop out cmc cld add push adc xor push pop popa push mov scas mov ret (bad) fsub jmp or push sbb cmp dec dec push pop arpl jbe orl mov mov fsub jmp or push sbb cmp pop arpl jbe orl mov mov fucom ljmp pop sbb cmp pop imul test lods mov mov fsubp jmp clc incb and inc dec push pop pop gs jb jg mov mov rol aam loopne add cmc sti add push adc xor push pop inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov push mov scas mov ret aad jecxz lock add movhps sub ss pop fs ja orl mov mov fsub jmp or pop push and inc dec push pop pusha addr16 mov rcr out cld or sbb xor inc push pop fs test stos mov mov in clc add adc xor push pop bound jne (bad) mov scas mov lret (bad) loope testb adc dec pop imul (bad) rcr ljmp xor dec push pop push fwait cmpsb mov (bad) out hlt sti add push adc and cs inc inc dec push pop popa outsb je addl rcl add out cli push adc and xor push pop data16 xchg ror in repz mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc decb adc push pop push jl xchg lahf cmpsb scas mov lock or pop and aaa inc dec push fs jle mov mov mov fsubp jmp clc incb and xor ds dec push push pop fs ja orl scas mov ret leave iret (bad) fsub jmp push sbb xor inc dec dec push pop popa outsb je addl rol rcr (bad) in repnz incl es cmp inc dec push pop pop imul test mov mov (bad) repnz adc xor inc push pop data16 orb mov fndisi(8087 out hlt cli add push adc and sub dec push pop pusha data16 jae push addr16 test ror fucomip repnz push adc pop lods mov push xchg cmp lahf stos mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc lret aad (bad) repnz aaa inc push pop gs test mov lock add sbb pop outsb jns (bad) cltd movsb scas mov lock add cmp outsl jns mov int loop testl aaa inc dec push bound orl into ftst out cli add sbb pop addr16 xchg leave rcr call (bad) loop stc add aas dec push pusha imul xchg lahf add fucomip repz sbb stos mov int3 (bad) loope testb pop and outsl jp nop fwait cmpsb mov add test ljmp xor push pop outsb jns lea lret call sbb xor inc dec pop arpl (bad) mov cmp test xchg add dec push outsl mov sub inc dec pop inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov jg xchg mov rcr ljmp cmp pop addr16 mov rorl sbb pop imul ret mov fsub push dec jo cwtl (bad) rcr out cld pop adc xor dec push pop imul mov hlt decl adc dec push pusha imul xchg mov xlat loop clc add push jge loop dec add inc dec pop gs test (bad) rcr out std pop adc jl (bad) cltd mov aad call sbb push pusha push mov (bad) jecxz testl xor push pop outsl jns mov lret aad jmp sbb xor inc dec push popa imul xchg sahf test mov out clc add and xor push xchg popf inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov inc mov cmpsl mov (bad) jecxz testl xor addr16 test ret loopne hlt decb adc xor inc dec pop bound jg xchg popf test mov in testl xor push pop outsl jns lea lret call sbb sub pop push fwait movsl scas mov jmp add adc sub cmp addr16 test ror fsubrp repz pop adc and bound cmp bound cmp out out popf sbb or stos out and lret lea cmp ja or ret movsl push popa int arpl cltd loope push xorl loopne sysret pop aad (bad) insb lods test or out imul ficompl lcall enter adc push inc mov xchg jo xchg ljmp jns and pop pusha pop jo add mov push xchg cmp dec xchg subb jmp jno fldenv aad lods cs mov shrl fist lret xchg repnz (bad) push gs push js dec dec cltd addr16 (bad) push in jecxz push mov pop sahf sarl cmp in sub mov mov (bad) cmp inc xlat and aaa sarl bound mov lock and lret lea cmp ja or ret movsl push popa int arpl cltd loope push xorl loopne sysret pop aad (bad) insb lods test or out imul ficompl lcall enter adc push inc mov xchg jo xchg ljmp jns and pop pusha pop jo add mov push xchg cmp dec xchg subb jmp jno fldenv aad lods cs mov shrl fist lret xchg repnz (bad) push gs cmp dec out bound xor jnp cld jo or add test add cmp mov test pushl test pop test jmp cmp test push cmp cmp xor test test pop test ret test test cmp cmp inc cmp rdtsc cmp cmp jne cmp pop cmp add cmp push test ret sub mov dec out push insb xchg pusha sti out imull les out movb pop add sbb hlt mov cmp sub sub mov ljmp das cmp cmp call cmp jmp cmp pop test clc adc test mov cmp mov cmp inc cmp inc cmp inc cmp sub cmp cmp mov test test call cmp cmp push cmp cmp test jne mov cmp add cmp mov cmp add test call test jmp cmp pop cmp push cmp push cmp push test mov cmp call test pop cmp cmp jl test mov cmp sub test mov cmp sub test call test mov cmp inc cmp inc test inc cmp inc cmp inc cmp inc cmp inc test inc cmp inc cmp inc test inc test push test mov cmp add test push test push test sub test sub test push test call cmp jmp test pop test cmp inc cmp mov test xor cmp mov cmp cmp jne cmp mov cmp test sub cmp mov cmp call test or test test jne test jmp cmp stc in into sub mov outsl mov push or rclb pop mov cmp dec (bad) faddl xchg sbb and sbb sbb pushf dec inc pop ret mov cmp aaa lock test and fildl faddl adc cli sub mov icebp mov cltd push sub jno xchg push outsb rcrb mov adc xor mov mov (bad) adc repz popf add inc bts fcmovbe ljmp aam mov mov and (bad) or movsl out data16 push fnstsw fsubs sbb cmp push cmp popa mov and int inc dec out push insb xchg pusha sti in fdivp lods iret repnz enter movb pop add sbb hlt mov cmp sub into sub (bad) dec inc push test pop test pushl test pop test mov test mov cmp push test mov test mov cmp push cmp pop test add cmp jne cmp push test pop test add cmp jne test pop cmp mov test mov test mov cmp add cmp mov cmp mov test add test mov test add cmp lods test test je add test mov test cmp jne cmp mov cmp cmp jne cmp mov cmp push cmp pop test push cmp push cmp push cmp push test push cmp push test push test push test call add test ret mov outsl mov push or rclb pop mov cmp faddl xchg sbb and inc sbb (bad) push and pop ret dec mov cmp aaa lock test jp fildl fmul add pop (bad) sub out dec scas push icebp mov push sub jno xchg push bound pop jbe in push xchg call and (bad) or movsl out data16 push fnstsw fmuls daa test rcrl call mov stos enter push ss inc aam pop stos fcomp rolb mov jmp sar mov cmpsb fidivr mov stos fcomp rcr stos mov shr mov mov les mov mov out mov mov cld mov mov scas fcmovbe clc mov rolb movsl jo scas scas adc pusha out adc adc xor mov mov adc (bad) jl repz popf add inc bts fcmovbe ljmp ret mov mov cli movsl out data16 push fnstsw fmuls daa test rcrl call std and pop int inc dec out push insb xchg pusha sti in fdivp lods iret repnz enter out movb add sbb hlt mov cmp sub sub mov outsl mov push or pop rclb pop mov cmp dec (bad) faddl xchg sbb and inc sbb mov push and pop ret dec mov cmp aaa lock test and inc mov pop (bad) sub mov icebp mov push sub jno xchg push bound pop jbe in push xchg adc xor mov mov adc (bad) jl repz popf add inc bts fcmovbe ljmp ret mov mov cli movsl out data16 push fnstsw fmuls daa test rcrl call std and pop int inc dec out push insb xchg pusha sti in fdivp lods iret repnz enter out movb add sbb hlt mov cmp sub sub mov outsl mov push or pop rclb pop mov cmp dec (bad) faddl xchg sbb and inc sbb mov push and pop ret dec mov cmp aaa lock test and inc mov pop (bad) sub mov icebp mov push sub jno xchg push bound pop jbe in push xchg adc xor mov mov adc (bad) jl repz popf add inc bts fcmovbe ljmp ret mov mov cli movsl out data16 push fnstsw fmuls daa test rcrl call std and pop int inc dec out push insb xchg pusha sti in fdivp lods iret repnz enter out movb add sbb hlt mov cmp sub stc (bad) jmp roll cmp mov cmp inc cmp mov cmp mov cmp ret in into sub mov outsl mov push or pop rclb pop mov cmp dec (bad) faddl xchg sbb and inc sbb mov push and pop ret dec mov cmp aaa lock test and inc mov pop (bad) sub mov icebp mov push sub jno xchg push bound pop jbe in push xchg adc xor mov mov adc (bad) jl repz popf add inc bts fcmovbe ljmp ret mov mov cli movsl out data16 push fnstsw fmuls daa test rcrl call std and pop int inc dec out push insb xchg pusha sti in fdivp lods iret repnz enter out movb add sbb hlt mov cmp sub sub mov outsl mov push or pop rclb pop mov cmp dec (bad) faddl xchg sbb and inc sbb mov push and pop ret dec mov cmp aaa lock test and inc mov pop (bad) sub mov icebp mov push sub jno xchg push bound pop jbe in push xchg adc xor mov mov adc (bad) jl repz popf add inc bts fcmovbe ljmp ret mov mov cli movsl out data16 push fnstsw fmuls daa test rcrl call std and pop int inc dec out push insb xchg pusha sti in fdivp lods iret repnz enter out movb add sbb hlt mov cmp sub sub mov outsl mov push or pop rclb pop mov cmp dec (bad) faddl xchg sbb and inc sbb mov push and pop ret dec mov cmp aaa lock test and inc mov pop (bad) sub mov icebp mov push sub jno xchg push bound pop jbe in push xchg adc xor mov mov adc (bad) jl repz popf add inc bts fcmovbe ljmp ret mov mov cli movsl out data16 push fnstsw fmuls daa test rcrl call std and pop int inc dec out push insb xchg pusha sti in fdivp lods iret repnz enter out movb add sbb hlt mov cmp sub sub mov outsl mov push or pop rclb pop mov cmp dec (bad) faddl xchg sbb and inc sbb mov push and pop ret dec mov cmp aaa lock test and inc mov pop (bad) sub mov icebp mov push sub jno xchg push bound pop jbe in push xchg adc xor mov mov adc (bad) jl repz popf add inc bts fcmovbe ljmp ret mov mov cli movsl out data16 push fnstsw fmuls daa test rcrl call std and pop int inc dec out push insb xchg pusha sti in fdivp lods iret repnz enter out movb add sbb hlt mov cmp sub sub mov outsl mov push or pop rclb pop mov cmp dec (bad) faddl xchg sbb and inc sbb mov push and pop ret dec mov cmp aaa lock test and mov rcll mov and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp or mov in jl loopne in aam mov mov in std xchg loopne in rcrb mov loopne inc sub adc mov je mov mov cmp bound popf adc mov rclb cmp rcll mov push enter or mov loopne cmp sbb mov pop xchg mov bound mov mov loopne push sbb in outsb fadds mov mov loopne push pop loopne mov dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc xor nop loopne in je mov mov mov adc mov loopne inc inc xor sti mov (bad) aaa stc mov xor xor loopne add loopne in mov xchg mov loopne aas push loopne mov aas sbb mov dec and cwtl mov inc sub mov loope mov cmp mov cwtl out gs sahf fidivrl cmp loopne push mov je sub je sub je sub je sub je sub je sub je sub je sub je sub je sub je sub je sub je sub je sub je sub je sub je sub je sub je sub je sub je sub je sub je sub je sub je sub je sub je sub je sub je sub je sub je sub je sub je sub je sub je sub je sub je sub je sub je sub je sub je sub je sub je sub je sub je sub je sub je sub je sub je sub je sub je sub je sub je sub je sub je sub je sub je sub je sub je xor mov add inc nop sbb iret rclb mov mov and test inc loope cmp rclb mov cwtl loope mov std int3 adc mov or mov clc cli xlat xchg loopne in and mov aaa lods pop push mov adc mov or mov mov pop mov in pop mov in pop mov in pop mov in pop mov in pop mov in pop mov in pop mov in pop mov in pop mov in pop mov in pop mov in pop mov in pop mov in pop mov in pop mov in pop mov in pop mov in pop mov in pop mov in pop mov in pop mov in pop mov in pop mov in pop mov in pop mov in pop mov in pop mov in pop mov in pop mov in pop mov in pop mov in pop mov in pop mov in pop mov in pop mov in pop mov in pop mov in pop mov in pop mov in pop mov in pop mov in pop mov in pop mov in pop mov in pop mov in pop mov in pop mov in pop mov in pop mov in pop mov in pop mov in pop mov in pop mov in pop mov in pop mov in pop xor xchg loopne in pop push mov aaa lods pop push leave int3 adc mov imul mov sti sub dec adc push adc mov mov loopne mov push cmpl mov loopne aaa cmp adc push repnz mov mov clc adc push lret mov loopne aaa cmp adc push sub mov mov rclb mov loopne xor push cmp mov or or push cmpsb or push cmpsb or push cmpsb or push cmpsb or push cmpsb or push cmpsb or push cmpsb or push cmpsb or push cmpsb or push cmpsb or push cmpsb or push cmpsb or push cmpsb or push cmpsb or push cmpsb or push cmpsb or push cmpsb or push cmpsb or push cmpsb or push cmpsb or push cmpsb or push cmpsb or push cmpsb or push cmpsb or push cmpsb or push cmpsb or push cmpsb or push cmpsb or push cmpsb or push cmpsb or push cmpsb or push cmpsb or push cmpsb or push cmpsb or push cmpsb or push cmpsb or push cmpsb or push cmpsb or push cmpsb or push cmpsb or push cmpsb or push cmpsb or push cmpsb or push cmpsb or push cmpsb or push cmpsb or push cmpsb or push cmpsb or push cmpsb or push cmpsb or push cmpsb or push cmpsb or push cmpsb or mov mov loope mov fcoml mov movsb loopne fbstp popf pop (bad) jne pop mov mov adc mov mov adc in or mov mov shll lea shll lea shll lea shll lea shll lea shll lea shll lea shll lea shll lea shll lea shll lea shll lea shll lea shll lea shll lea shll lea shll lea shll lea shll lea shll lea shll lea shll lea shll lea shll lea shll lea shll lea shll lea shll lea shll lea sbb mov in add cld imul mov loopne pop inc pop in ja or xchg mov imul cmp adc mov add mov aas sbb mov pop adc cld imul mov daa or inc loopne mov mov loopne aas jnp adc mov pop xchg lret mov mov arpl leave sbb imul and repz loopne cltd fwait (bad) xor fwait (bad) xor fwait (bad) xor fwait (bad) xor fwait (bad) xor fwait (bad) xor fwait (bad) xor fwait (bad) xor fwait (bad) xor fwait (bad) xor fwait (bad) xor fwait (bad) xor fwait (bad) xor fwait (bad) xor fwait (bad) xor fwait (bad) xor fwait (bad) xor fwait (bad) xor fwait (bad) xor fwait (bad) xor fwait (bad) xor fwait (bad) xor fwait (bad) xor fwait (bad) xor fwait (bad) xor fwait (bad) xor fwait (bad) xor fwait (bad) xor fwait (bad) xor fwait (bad) xor fwait (bad) xor fwait (bad) xor fwait (bad) xor fwait (bad) xor fwait (bad) xor fwait (bad) xor fwait (bad) xor fwait (bad) xor fwait (bad) xor fwait (bad) xor fwait (bad) xor fwait (bad) xor fwait (bad) xor fwait (bad) xor fwait (bad) xor fwait (bad) xor fwait (bad) xor fwait (bad) xor fwait (bad) xor fwait (bad) xor fwait (bad) xor fwait (bad) xor fwait (bad) xor fwait (bad) xor cmp sub inc test out ss fwait movsb cld mov out mov imul pusha adc in adc jnp push mov mov loop mov mov mov xor mov cmp ljmp lcall adc jp adc out mov jmp arpl mov in or mov cwtl les lcall aaa lcall aaa lcall aaa lcall aaa lcall aaa lcall aaa lcall aaa lcall aaa lcall aaa lcall aaa lcall aaa lcall aaa lcall aaa lcall aaa lcall aaa lcall aaa lcall aaa lcall aaa lcall aaa lcall aaa lcall aaa lcall aaa lcall aaa lcall aaa lcall aaa lcall aaa lcall aaa lcall aaa lcall jns jmp adc mov movsl inc cmp xchg sbb lcall test xor test adc icebp loopne mov mov xchg stc xor loop cwtl mov cwtl cwtl mov jp aad adc lret pop lcall dec cmp mov lret pop mov inc ljmp inc ljmp ja mov adc cld fnop xor cwtl imul cs in lock imul aas and repz nop jg imul lock jg loopne mov push loopne mov mov decb mov mov decb mov mov decb mov mov decb mov mov decb mov mov decb mov mov decb mov mov decb mov mov decb mov mov decb mov mov decb mov mov decb mov mov decb mov mov decb mov mov (bad) cwtl repz loopne push in push in inc inc xor inc inc pop lcall loopne aaa inc in mov loopne mov call fs loopne mov (bad) loopne mov leave int3 in sub adc inc or mov icebp call adc push sbb inc inc imul out adc inc pop lcall loopne xor mov lods sbb cld adc push mov sti add in out push fimul mov mov or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push aaa lods sbb std adc inc pop inc push idiv adc mov gs mov mov call adc push inc out inc inc pop fs lea ret aam mov mov inc out (bad) loopne inc aas and in aaa mov inc mov inc mov sbb mov sbbl inc popa ror mov mov adc repz mov (bad) aam and mov mov inc sub mov loopne aam imul mov mov mov in jmp jmp cwtl sti cwtl adc push adc mov and shlb mov shlb mov shlb mov shlb mov shlb mov shlb mov shlb mov shlb mov shlb mov shlb mov shlb mov shlb mov shlb mov shlb mov shlb mov shlb mov shlb mov shlb mov shlb mov shlb mov shlb mov shlb mov shlb mov shlb mov shlb aam imul mov lret cwtl pop fs mov inc cmpsb aas sbb mov out push mov jp pop aam mov inc leave (bad) in leave mov shr jmp mov std mov loopne test fisubrl cwtl test mov loopne mov cmp popw popa scas aaa mov inc xor mov pop and clc nop inc mov loopne fsub xchg aas sbb ret add scas jnp adc mov loopne mov mov call adc push jo inc inc pop fs aaa mov inc into in outsb aas sbb mov mov mov push cmp mov mov sbb mov sbb mov sbb mov sbb mov sbb mov sbb mov sbb mov sbb mov sbb mov sbb mov sbb mov sbb mov sbb mov sbb mov sbb mov sbb mov sbb mov sbb mov sbb mov sbb mov sbb mov sbb mov sbb mov sbb mov sbb mov sbb mov sbb mov in xor sbb adc aaa mov inc mov ret cmp fsubr adc jg adc aaa notl hlt xchg imul (bad) cmpsl loopne in mov inc inc pop fs aaa mov inc into in outsb aas sbb mov iret sbb mov loopne mov mov mov inc mov xchg mov push adc mov call nop jle imul mov loopne mov jno adc inc pop jns (bad) call stos mov or mov shr outsb push pop adc out mov in out mov in out mov in out mov in out mov in out mov in out mov in out mov in out mov in out mov in out mov in out mov in out mov in out mov in out mov in out mov in out mov in out mov in out mov in out mov in out mov in out mov in out mov in out mov in out mov in out mov in out mov in out mov in out mov in out mov in out mov in out mov in out mov in out mov in out mov in out mov in out mov in out mov in out mov in out mov in out mov in out mov in out mov in out mov in out mov in out mov in out mov in out mov in out mov in out mov in out mov in out mov in out mov in out mov in out mov in out mov in out mov in (bad) loopne mov or adc mov sbb mov mov and clc jns (bad) in icebp mov enter loopne mov sbb adc mov loopne mov mov and clc jns (bad) call stos mov and mov mov mov inc mov inc cmpsb push mov cwtl and adc mov push cmpsl mov mov and clc cli imull loopne cwtl in pop cmpsb push mov call or loope mov mov adc inc pop lcall add mov xchg iret cmp xchg iret cmp xchg iret cmp xchg iret cmp xchg iret cmp xchg iret cmp xchg iret cmp xchg iret cmp xchg iret cmp xchg iret cmp xchg iret cmp xchg iret cmp xchg iret cmp xchg iret cmp xchg iret cmp xchg iret cmp xchg iret cmp xchg iret cmp xchg iret cmp xchg iret cmp xchg iret cmp xchg iret cmp xchg iret cmp xchg iret cmp xchg iret cmp xchg iret cmp xchg iret cmp xchg iret cmp xchg iret cmp xchg iret cmp xchg iret cmp xchg iret cmp xchg iret cmp xchg iret cmp xchg iret cmp xchg iret cmp xchg iret cmp xchg iret cmp xchg iret cmp xchg iret cmp xchg iret cmp xchg iret cmp xchg iret cmp xchg iret cmp xchg iret cmp xchg iret cmp xchg iret cmp xchg iret cmp xchg iret cmp xchg iret cmp xchg iret cmp xchg iret cmp xchg iret cmp xchg iret cmp xchg iret cmp xchg iret cmp aaa lods pop push push stc adc inc pop lcall lods pop out inc xor mov mov pop in push hlt clc adc (bad) mov outsb aas sbb lret push into (bad) loopne mov int3 mov mov mov and adc mov adc mov loopne push jno in inc xor call and imul fmuls mov dec pop in aam pop ret aaa inc popa ror mov loope mov lret in loope pop and dec adc mov adc icebp call adc push cwtl out inc or mov js xlat jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and jp and out push out add aaa mov inc into in outsb aas sbb mov adcl push and fmuls in aaa cmp mov sbb mov mov and popa lods inc mov loopne mov push out inc arpl mov push mov mov loopne push cltd adc inc in mov jmp insb imul xor mov dec pop in aaa cmp pop mov mov pop in aaa cmp mov mov loopne xor mov loopne cmp loope mov mov or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push or push push mov inc mov jo mov (bad) adc mov je mov mov loopne jle fs pusha inc or adc mov loope mov mov loopne cmpl mov mov loopne mov arpl mov mov mov push std jmp push std jmp push std jmp push std jmp push std jmp push std jmp push std jmp push std jmp push std jmp push std jmp push std jmp push std jmp push std jmp push std jmp push std jmp push std jmp push std jmp push std jmp push std jmp push std jmp push std jmp push std jmp push std jmp push std jmp push std jmp push std jmp push std jmp push std jmp (bad) mov outsl adc mov loopne mov jl outsb cmpl cs rcr pop icebp incl addr16 addl adc mov outsl mov mov fstl mov cmp adc cmp xchg loope loopne push mov cs les inc jne mov mov js mov mov pushf adc inc pop jns (bad) pop in jmp sub jge loope mov mov je mov mov or mov or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or mov js mov mov pushf adc inc pop jnp mov js mov mov pushf adc inc pop cwtl cmp loope mov cmp inc inc arpl mov inc pop lcall loopne aam mov scas mov imul in sub loopne mov enter out mov or mov loopne xor inc jne mov mov js mov mov pushf adc mov loopne inc (bad) ljmp push adc mov scas repz scas repz scas repz scas repz scas repz scas repz scas repz scas repz scas repz scas repz scas repz scas repz scas repz scas repz scas repz scas repz scas repz scas repz scas repz scas repz scas repz scas repz scas repz scas repz scas repz scas repz scas repz scas repz scas repz scas repz jg adc inc push xchg mov cmp adc (bad) pop xchg mov sbb cwtl jmp jmp pop in xor mov loopne ficompl imul mov lcall flds mov mov loop xor test jne outsl xchg clc negl jle rcr cmp sub lret dec sbb js popf pop aas jnp pop mov shr jns in mov mov loopne jmp mov clc adc cmp loopne jle daa inc push (bad) notb mov mov arpl mov push loopne mov ss xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor push xor mov popf pop aas jnp adc in cmc adc mov in mov jae cli mov test mov inc pop jne mov call sbb pop adc jge movsl das cmp aaa lods or icebp adc inc pop cwtl jecxz popa sarb mov xor fstl in aam mov aam mov aam mov mov jmp popf pop aaa inc arpl scas in mov sub cmpsl pop push pop loopne mov mov daa mov aam mov aam mov aam mov aam mov aam mov aam mov aam mov aam mov aam mov aam mov aam mov aam mov aam mov aam mov aam mov aam mov aam mov aam mov aam mov aam mov aam mov aam mov aam mov aam mov aam mov aam mov aam mov mov out inc xchg pop mov in mov sub inc out jmp cwtl sti mov sar mov loope xor mov pop repnz imul test mov push aaa mov mov adc loopne mov aam adc hlt imul scas (bad) loopne inc lret lods push or loopne out ljmp out push or mov dec adc out dec adc out dec adc out dec adc out dec adc out dec adc out dec adc out dec adc out dec adc out dec adc out dec adc out dec adc out dec adc out dec adc out dec adc out dec adc out dec adc out dec adc out dec adc out dec adc out dec adc out dec adc out dec adc out dec adc out dec adc out dec adc out dec adc out dec adc out dec adc out xor loopne aas jnp sbb movsb arpl mov jge jne test push fisubrl mov arpl nop enter mov or push push arpl mov lret jg xchg mov jge jne mov and fdivrs sbb mov push xchg js call jns (bad) loop mov mov mov aaa cmp push mov mov and mov mov loopne mov mov loopne mov mov cmpxchg pusha das mov xchg loopne jae pop scas mov loope mov xor loop mov mov xchg sbb mov arpl mov inc xchg aad inc (bad) aad inc xchg cli mov xchg adc mov in aas jp adc ss sbb mov call loop dec jp xor loopne mov sbb sbb inc mov sbb sbb inc mov sbb sbb inc mov sbb sbb inc mov sbb sbb inc mov sbb sbb inc mov sbb sbb inc mov sbb sbb inc mov sbb sbb inc mov sbb sbb inc mov sbb sbb inc mov sbb sbb inc mov sbb sbb inc mov sbb sbb inc mov sbb sbb inc mov sbb sbb inc mov sbb sbb inc mov sbb sbb inc mov sbb sbb inc mov sbb sbb inc mov sbb sbb inc mov sbb sbb inc mov sbb sbb inc mov sbb sbb inc mov sbb sbb inc mov sbb sbb inc mov shr inc cmp loopne mov mov mov or mov or push mov push (bad) add mov in jne loopne in lods hlt inc inc imul mov inc xor mov loopne mov ljmp cli push in cli push mov adc aas fcoms lret adc mov fcom jge clc fwait mov mov sub insb ss add mov loope cld aas and ds loopne push jg scas lcall or mov lcall cmp mov rorb jge rorb jge rorb jge rorb jge rorb jge rorb jge rorb jge rorb jge rorb jge rorb jge rorb jge rorb jge rorb jge rorb jge rorb jge rorb jge rorb jge rorb jge rorb jge rorb jge rorb jge rorb jge rorb jge rorb jge rorb jge rorb jge rorb jge pusha in adc and adc mov push cmp (bad) pop in sub loopne mov mov loope mov mov popf pop ficompl imul sub mov and add lock mov daa mov aam (bad) decb loop push loopne mov lea cwtl loop in movsl aaa mov cld std fisttpl mov sbb inc loopne dec test mov stc mov adc push out adc and adc mov les mov mov and mov adc enter mov nop jg arpl mov mov jne mov xor adc mov adcb aaa jge mov mov xchg nop mov call push ficom adc aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad xchg push mov xor xor mov loopne popf aaa gs mov fisubrl cmp cwtl loope mov mov aam mov push and inc inc popa stc mov jmp and fidivr adc in pop mov cwtl imul sub addr16 mov adc xor aas cli popa mov dec mov adc dec mov adc dec mov adc dec mov adc dec mov adc dec mov adc dec mov adc dec mov adc dec mov adc dec mov adc dec mov adc dec mov adc dec mov adc dec mov adc dec mov adc dec mov adc dec mov adc dec mov adc dec mov adc dec mov adc dec mov adc dec mov adc dec mov adc dec mov adc dec mov adc dec mov adc dec mov adc dec mov mov shlb sbb mov cld jg out insl jg sub dec arpl mov xor loope fs (bad) xor mov arpl mov sub lret inc pusha outsl mov loopne dec std imul imulb lcall addr16 cld mov scas mov pop xchg mov mov stos std xor or fcmovnu test roll jbe rcll stc inc inc pop adc push push stc inc inc or mov mov imul mov test aaa repnz (bad) mov les into gs in lret iret test mov cli push loopne push or mov push or mov push or mov push or mov push or mov push or mov push or mov push or mov push or mov push or mov push or mov push or mov push or mov push or mov push or mov push or mov push or mov push or mov push or mov push or mov push or mov push or mov push or mov push or mov push or mov push or mov push or mov inc rclb scas imul in fsts repz inc inc mov rolb sti inc pop pop in lock fdivs jb icebp test into cltd adc aaa in inc out test fstl jl mov pop push fcmovne mov popa out rcll in inc repnz inc int3 aad jbe aad addr16 fisttpll (bad) mov pop push fcmovne mov fst mov adc loopne mov cmp cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp xchg cmp or pop inc pop pop lret jle int3 mov fcmovne scas jne flds adc add inc repnz inc fcmovne lea fstl fnop loopne (bad) pop pop in lock fstl fnop movsl imul scas addr16 int3 test lret lret cmp pop pop lret jg fild popa lret jg (bad) cli push mov xor outsl insl xor outsl insl xor outsl insl xor outsl insl xor outsl insl xor outsl insl xor outsl insl xor outsl insl xor outsl insl xor outsl insl xor outsl insl xor outsl insl xor outsl insl xor outsl insl xor outsl insl xor outsl insl xor outsl insl xor outsl insl xor outsl insl xor outsl insl xor outsl insl xor outsl insl xor outsl insl xor outsl insl xor outsl insl xor outsl insl xor outsl insl xor outsl insl xor outsl insl xor outsl insl xor outsl insl xor outsl insl xor outsl insl xor outsl insl xor outsl insl xor outsl insl xor outsl insl xor outsl insl xor outsl insl xor outsl insl xor outsl insl xor outsl insl xor outsl insl xor outsl insl xor outsl insl xor outsl insl xor outsl insl xor outsl insl xor outsl insl xor outsl insl xor outsl insl xor outsl insl xor outsl insl xor outsl insl xor outsl insl xor outsl insl xor outsl insl xor outsl insl xor push daa or inc repnz inc fcmovne xchg jle call test push roll in inc repnz push fcmovne mov imul mov fldl inc repnz inc fcmovne mov imul mov fldl inc sti test rorl pop xlat rolb hlt inc inc mov lret jl fsts inc rcl mov mov pop push fcmovne movsl imul mov popa rcr test mov pop push int3 flds jl fsts rcrb pop push fcmovnu xchg je fsts int stos jp shrb addr16 mov adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec adc dec dec or fcmovnu xchg je fist rcr test mov pop inc xlat into xchg data16 mov ror test stc cwtl adc push in inc lock jb lock fstl xchg pop inc xlat into xchg data16 mov push (bad) mov loopne std jmp push std jmp push std jmp push std jmp push std jmp push std jmp push std jmp push std jmp push std jmp push std jmp push std jmp push std jmp push std jmp push std jmp push std jmp push std jmp push std jmp push std jmp push std jmp push std jmp push std jmp push std jmp push std jmp push std jmp push std jmp push std jmp push std jmp push std jmp xor inc pop inc (bad) xchg push ror movsb jbe leave xchg (bad) lock inc mov jbe (bad) jnp flds testl xchg jl std test fsts cmc inc inc mov lret jp into mov decl push insb pop in in rolb les pop push rcl xchg jp leave test ficom jge mov pop push int3 flds jg jmp sti dec outsl pop in jmp cli mov mov pop push rcl xchg jbe fisttpll sti lret push pop in in hlt mov jbe aad jbe enter stc cwtl inc mov mov mov aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad jp aad sti jl pop in ljmp adc inc pop pusha (bad) (bad) mov in in fsts lret jp leave xchg jbe jmp sti mov in in flds jbe push jb inc inc mov fcmovnbe mov flds adc xor inc sti test rorl jnp fisttpll xchg insl inc pop inc fcmovne lea fstl fcmovne xchg adc xor inc sti test aad jbe aad jbe push js inc inc cmpsl jbe call andl mov and jl and jl and jl and jl and jl and jl and jl and jl and jl and jl and jl and jl and jl and jl and jl and jl and jl and jl and jl and jl and jl and jl and jl and jl and jl and jl and jl and jl and jl and jl and jl and jl and jl and jl and jl and jl and jl and jl and jl and jl and jl and jl and jl and jl and jl and jl and jl and jl and jl and jl and jl and jl and jl and jl and jl and jl and jl and jl jmp inc inc clc sbb inc pop pop rcrb xor fsts pop fcmovnb xchg push mov test jmp jnp aam jg pushf fnsave std into test fldcw addr16 sahf mov (bad) mov xchg mov fcmovnbe mov xchg mov jle testl inc loop (bad) jne lret andl into (bad) pusha rcr xchg dec jmp lret xchg dec std leave xchg popa fcmovnbe xchg inc fcmovne xchg jp sarb fstp mov in inc sahf in sbb iret mov (bad) jmp pushf lea fstps ficoml pop xor jecxz dec pushf mov inc int mov fcmovnbe mov pushf mov pop pop mov dec pop in mov jns in inc mov adc adc inc pop adc push dec stc inc inc mov jge roll adc or inc loopne data16 (bad) jg fsts in inc out test xchg popa (bad) pushf stos jbe pushf scas jb fchs sti jp pop in cwtl fmulp das mov inc fxtract negl sti popa outsl pop in int mov mov inc loopne mov inc pop sbb dec pop in hlt shl adc sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub sub xchg lret stos push dec repnz sub xchg xor sbb pop fdiv push (bad) sbb dec push sbb orb fwait scas fidivl inc int3 sahf sarl rorl xchg sahf pushf inc and xchg clc jle rcrb inc call jne push mov sub add insb loopne movsb lods std (bad) in add ret push out out js (bad) mov and (bad) jb mov mov push nop enter cmc mov mov push repz fsubrp push xor lret inc cmp test outsb add push test jne hlt cld les add fistpl das jge inc loope xchg push xor je jbe or arpl mov cmpsb dec in jae xor or mov pop sub sbb jns ljmp (bad) push adc sahf dec adc add ret sbbl das xor add pop call nop cmp (bad) sub dec pop add mov (bad) fs stos out lahf mov stos popa jmp cmp fcoml daa cmp sbb jnp or data16 dec addr16 push loope push push push sub stc test jp rcrb or pop sti fnop hlt jo push inc cld outsb repnz js add and xchg imul int3 push sbb pusha inc push cli fwait data16 movsl mov (bad) test jle jmp adc or jne shrl std mov dec aaa rorl push flds cli sti push std js lock insb movsl ljmp icebp sti (bad) and je (bad) mov cmpl movsb jb ret (bad) dec ss inc cmp jo adc or mov dec cmp inc mov mulb jg lds mov mov iret mov pop ret lahf xchg sub xchg mov call fdivs mov lret repnz or xchg pop fstpt jbe popf in push fsubr xlat mov (bad) push fiadd stc push adc andl clc cmpsl xchg enter mov cmpb add imul sbb inc lods call out aas into sub addr16 xor pop jne adc push cwtd jno jmp dec mov aad int hlt out aad rorl pop flds aaa sti push push js cli rclb loope cld sbb mov and fbld or sub jg ljmp data16 pusha dec or inc aas cwtl out scas dec lret xor icebp punpckhdq xor imul cmpsl dec in je in mov repnz in fnop inc neg jp jmp scas mov pop cmp push adc mov push adc add les mov sbb add clc sahf mov sbb ficoml and cmp fmuls lods lock inc lods push test cmp hlt xchg xchg roll or aam stos leave aad testb dec pop loop push pop push out sti xchg das rcrl or scas cmc jb adc std outsl repz das pop stc jns add and mov int sbb popa dec push cld pushf and fbld or test mov mov jmp mov mov call cmc and cmp (bad) pop fcmovb sti mov icebp insl cmpsb in xchg mov repz xchg and jne enter jnp (bad) loope add cmpsl cmpb adc dec aaa pushf pop loop xlat fistpl inc cmp jno adc lret mov inc mov es or (bad) dec sbb mov mov (bad) jb popa les push xor sub xor int3 xchg xor pop lret mov pop add jg xor sahf out pop fnop fsubrs orl add es movsb mov dec xchg popf lcall xchg test idivb push xchg cmpl insb mov inc scas jmp stos inc iret das inc and cltd xchg outsl fdivrp jl mov push daa sbb stc ds repnz mov das mov lahf and iret aad push (bad) pop mov and mov fsubl dec aam leave rclb int js mov cmpsl outsb dec sub add mov sbb jge mov fcoms xor and lods jne xchg call cs or lret negl adc sub pushf jp xchg adc xchg mov cwtl shl mov or insl negb (bad) mov pop cmp sarb dec inc pop (bad) jmp or jle mov cld (bad) int3 test or jmp dec adc adc test add or mov cmp mov iret xchg cltd xchg sub clc (bad) sbb daa mov push push stc sbb fadd cmpl mov pop mov ret lret test loope stos xchg fsub lods sub and gs andl rcrl push dec mov push icebp add das sub mov lret mov sub enter popa scas sarl or push cmp mov sub jo xor mov rcl xchg dec stc icebp ret mov xchg clc sub inc nop js mov pop popa pop mov imul lcall lea (bad) int3 xchg cmp xchg and sahf dec adc fdivrs ljmp loope rcrb cs mov add sbb fsubp push loop jns mov push add mov bound hlt stos les cmpsb dec in push mov and (bad) mov mov mov push psubb in xchg lods lock mov outsb out arpl sub les (bad) test jb mov adc (bad) subl pop pop or push jnp repz pop dec movsl pusha dec mov movsl sub addr16 add call pop sub mov hlt push cltd das mov cmp xor out add push adc inc jno mov divb aaa cmpsl jge shrb cmp push cmp imul repnz pop ljmp orb sbb inc jae adc pop subl xchg jl clc xor mov inc mov stos or add jecxz insb out lea (bad) xor (bad) lcall mov addr16 and mov xchg cs push cwtl xlat inc dec fcmovne jb pop xchg (bad) mov cwtl insl cld or push fsubs mov xor jmp sub sbb mov and add fwait lock dec or or test out xchg in out add lock (bad) jge and pop push jl (bad) mov sub scas lods cwtl jbe nop or or stc xchg int3 loopne lret adc jg imull imul icebp xchg mov push loop push cmp into jnp inc cmp or lods test std push (bad) adc pop enter loope or sub in sbb xor (bad) test call inc movsl mov fcmovne xchg xchg mov repz adc js and cmc sbb out scas pop dec cmp lods xor test sub and shll cli push lret pop or and pusha hlt fcomps inc shlb leave data16 or mov inc add mov (bad) stos aam dec in xchg jns outsb ret cmpsb sbb orb fcoms dec repnz push pop imul xchg mov jne std ds jg les adc add mulb adc mov dec out es insl pop shlb rolb sbb mov test dec fidivl (bad) push in (bad) data16 jns imul lds push push ret dec xchg int3 lcall hlt adc and jnp fwait stos push lock xor push cmc mov cld and inc aas loopne mov and lret xorl sahf xchg ljmp inc mov bound mov sbb xchg inc cmp inc and cs je or fisttpl scas rep cmpsl jmp gs jecxz mul push (bad) sub xchg sbb movsb xchg notl cwtl popa icebp (bad) aam (bad) mov (bad) pop std dec and mov lahf stos mov cmp lcall and mov scas pop cmc outsl dec out mov loop mov shl xchg repnz imul sub xor or pop testl in xchg mov rorl jmp mov clc and cmp push and or add jl hlt scas jo out cltd add add lret mov lret add inc aas adc push cmp fisub dec cmp out daa sbb mov dec mov inc mov cli sub in andl xchg into gs rclb sti sarl mov xor fwait lea in jb lds fdivl les mov notl cwtl popa fild icebp sbb repz xor xchg dec lock inc ja lret xchg fisubrl cmpsl and mov scas out mov xlat fldcw and orl mov sbb push in call xor (bad) xchg enter xor sub js mov and pushf add or sub cmpsb jmp sbb pop push cs sub out scas test hlt pmaxub roll cmp xor xor or je push adc dec inc sahf in inc mov rcrb jmp notl push cmp jnp repz pusha jmp loopne inc (bad) jecxz mov es mov sbb pushf (bad) bound mov lret into dec dec (bad) aaa clc xor (bad) movsb ret lods or add cwtl inc cmp pop sub inc ja lret xchg fcmovb daa aad mulb sarb lods aaa outsl enter bound adc cmpsl xchg cli lcall cmc test jecxz fbstp mov sub mov mov test stos sahf mov mov nop jb mov mov dec cmpsl popa jo mov in sub push ljmp mov dec adcl sub mov mull dec cltd mov push out es sub rcll shl in add daa mov cmp lahf xchg imul stos imul xor push add dec jno jmp fwait push inc mov mov movsl jnp int mov ficom cmp pop stos lret inc lock mov inc pop call sti pushf jae out xchg (bad) pop cmp jno pop rclb in notb arpl xchg lret inc pop mov jl ret pop std leave sbb sbb xchg lods cmp loopne,pn dec in into faddl mov xlat test pop scas pusha and adc (bad) sub push xchg lret test lds adc or pop insb dec jae sbb jecxz mov pop aad and mov std push jg fwait and test lea insb add sbb mov dec movsb in insl pop mov add scas jnp in lock jp pop mov or sbb ret jmp mov xchg dec ror and (bad) cmp adc fidivr sub imul loopne fdivs push cmp gs lret andl (bad) sti out pandn clc sub pop fldl je out loop xor sbb bound inc mov adc inc in push mov and imul enter dec fs pusha inc lods pop repz xor pop dec iret cmp push pop mov ficompl pop or push pushf sbb repnz xchg repz pop sub loopne test shr mov int inc sbb inc dec adc psraw movsl push inc xor mov pop xchg and and sub add add sub add add add add add add add add and add add add or add adc add add add add cmpsb adc add and add add add sbb add adc add add add add mov add sub add sub add push add add add add add add add add add add add add inc add add push adc cmpsb pop push add popa adc mov dec and orb xchg inc and xchg dec and cwtl pop and add push add push xor add insb das add push cmp ret add pop adc add add lds add imul into jb add jb add jp add pop and (bad) pusha and add ja add jns add jge add xor (bad) je add jle add dec inc add dec dec add inc add inc inc add dec dec add dec add dec add pop push add dec dec add dec or mov push add push push add push add push push add push push add pop add fs add pop add inc add jne add outsb imul xchg jne add jae add je add data16 arpl mov jl add js add jb add push pop add push pop add pop pop add jne add jg add jns add gs bound int3 gs gs ret push imul imul insb insb add outsb jo (bad) jne add jb add jbe add jnp add jp add jno add je add js add jne add jbe add js add jnp add jl add andl add mov (bad) test add mov add xchg les push add xchg inc add xchg dec add lcall in pop add push push add movsb pop add test lret add cmpl mov add scas jbe repz add mov add jle add mov add mov mov popl mov xchg xchg add cwtl xchg add lcall scas lahf lcall movsb lahf add mov add xchg add (bad) test (bad) mov add xchg add mov add lcall rorb xchg add xchg xchg add xchg cltd add or addb addl ljmp add mov add mov add mov in popl loop xchg add popf cltd add popf popf add xchg xchg add xchg xchg add cwtl xchg add fwait push add mov test in mov sahf add popf mov add test add stos test xlat mov add scas mov enter les mov add test add test add stos test sti lods test add scas lods add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov mov repz mov add les add ret les out lret les test rolb int3 les clc lret not lret add fmuls add (bad) incl add add add add test fldl add fcompl dec dec dec inc cmp into pop mov add add push insl jge (bad) leave enter outsl addr16 xor dec lahf or add add mov ljmp aad iret enter xor stos fs call jmp loop (bad) rcl into mov add add push add add add add call repnz stc cmc cmc cmc cmc lock enter jae cmp mov jne cli sti sti cmc stc sti sti sti std cld cld cld std std std cld sti cmc aam (bad) jnp addr16 cmpsb add js cli cld sti sti stc sti sti sti sti sti cld cld cld cld std std std std std cld cli out jp dec xor lods add add add add mov cli cld sti cmc cmc cmc cmc stc stc stc sti sti sti sti cld sti cld cld std std std std std hlt lret inc xor add add add repnz cmc or sti sti sti sti sti cld cld cld cld cld clc int3 jb ds add add add mov out out out lock cmc cmc cmc stc stc stc sti sti sti sti sti cld cld sti int3 insb inc ss add add add mov in jmp push out out lock cmc cmc cmc stc stc sti sti sti sti sti hlt mov add add xlat fdivr jmp loope loop in jmp jmp out out lock cmc cmc cmc stc stc sti sti out jbe das add add add out aad aad (bad) loope loop loop in jmp out out lock cmc cmc stc cmc int3 dec xor add in (bad) rcl aad into aad (bad) loope loope loop jmp jmp out out lock jmp add add int iret rcl rcl rcl rcl aad (bad) loope loope loop in jmp or lock push add mov iret iret iret iret rcl rcl rcl rcl aad aad (bad) loope loope in jmp jmp out out lret cmp or ror into into into iret iret iret iret rcl rcl rcl rcl aad (bad) push (bad) loope loop in jmp inc pop add sbb adc jl addl vshufps rcl rcl aad (bad) (bad) loope loop aas mov sbb and and and and and and push mov rcl rcl rcl rcl aad (bad) ffreep inc add push test mov xchg add rcl rcl rcl rcl aad rcrb imul rcl rcl rcl xchg push dec add into into iret iret iret rcl rcl ror je add imul rcl rcl rcl rcl rcrl jg enter into into into iret iret iret ror lds add popa mov fwait fwait fwait fwait fwait fwait fwait fwait fwait lcall rol (bad) leave leave leave into into leave jp add push ficoml xchg xchg xchg xchg cwtl cwtl xchg cwtl cwtl cwtl cwtl cwtl cwtl cwtl xchg mov push add (bad) (bad) enter add add push sub xchg xchg xchg xchg xchg xchg xchg xchg xchg mov dec add jp (bad) mov rol (bad) ja add add add adc (bad) nop nop nop nop nop nop nop nop nop nop nop nop mov addb mov add into add add add sub mov lea mov jnp addb add add mov mov es jp jnp jnp jg add and test sub add je jp jae (bad) push adc push and and and add je jns add add and and and and pop mov push push sbb sbb mov add add push xchg or push add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) incl add clc add incl add push add incl add jmp add jg add incl add incl add pop add add add add add add add add add add add add add add add add add into lock add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add aas add add jg add lock incl add clc add add add add add (bad) add add add (bad) incl add incl add push (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add sub add and add inc add add add add add add add add (bad) incl movsl jnp add test mov mov pushf pop arpl movsl imul into inc add jae add jnp add cmp movb mov dec push add push pop add pop arpl pushf cmp add inc inc add cmp or mov inc inc add pop pop add cmp mov add arpl (bad) imul arpl fidiv add imul jnp add test test add mov push xchg xchg add mov into jnp add xchg xchg add pushf pushf add test jmp jae ljmp jnp pushf imul xchg xchg add jae add mov add movsl add lods lods add mov add mov jnp out mov add imul mov xchg jae add mov lods mov pushf test jnp imul movsl movsl add cmp jmp mov ljmp lods add lods movsl add push inc add pushf xchg add lods movsl add inc cmp jae cmp inc mov add into movb inc xor arpl xor fidiv movb cmp add cmp add inc add (bad) mov add (bad) into add cmp add cmp movsl cmp add and neg (bad) add and lods push xor pushf push cmp lods inc sbb movsl cmp add or movsl inc adc jae sub movsl cmp add inc or lods dec adc mov sbb (bad) imul neg into add dec or mov adc arpl add dec add (bad) pop or mov or mov sbb (bad) imul (bad) test (bad) pop add into imul (bad) jae add xchg push add arpl add imul mov jnp add or cmp out dec add pushf push add mov add (bad) xchg add imul (bad) arpl add jae add mov add xchg inc add movsl pop add lods arpl out lods imul mov add imul out or (bad) jnp add test add pushf push add pushf dec add lods arpl out pushf cmp idivl test add add ja ja dec dec dec add add push add add add mov mov mov dec dec push push pop pop push or mov cmp and pop cmp adc outsb mov add inc cmp sub and pop outsb mov add add push add add add inc push cmp sub sub and add pop pop inc imul jb inc push sub and pop bound add add inc pusha pusha pusha fs imul pop xor cmpxchg add add inc pop pop pop pop inc pusha pusha pusha fs imul sbb mov add add mov jb cmp cmp inc pop pop pop pop inc pusha pusha pusha fs pop push outsb mov add add push xor cmp cmp or inc pusha pusha pusha fs add add xor xor xor cmp push push inc inc pop pop pop inc pusha pusha cmp mov add dec push xor push xor xor push push xor cmp cmp inc inc pop pop push push push dec xor xor xor xor xor xor xor cmp push push cmp sub sub sub sub xor xor xor xor xor xor cmp push and sub das sub sub sub xor xor xor xor xor xor adcb and and and and and sub into xor xor xor xor add xchg xchg xchg xchg xchg xchg xchg xchg pushf mov xor sub sub xor xor xor or fwait fwait fwait fwait fwait fwait fwait fwait fwait fwait or sub das sub sub xor xor mov add scas scas scas scas scas scas scas scas scas scas movsb js add daa sub sub sub sub sub mov add andl movsb movsb (bad) mov dec dec es sub push sub je stos stos stos stos stos stos stos stos stos stos stos xchg push sub es add add add mov cltd cltd cltd cltd cltd cltd lahf jae add and sub add add mov mov mov dec and and daa mov pop mov lahf xchg lahf xchg xchg jle add dec and and pop mov test test xchg mov add mov add add sahf or xchg mov add je addb add add inc inc add add add add add (bad) (bad) (bad) (bad) (bad) clc add inc add dec add incb add cld add psubb add lock add add add add add add add add add add add add add add add add add add or add addb add jo add loopne pusha jg add cld add incl jg push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp add add add add add add add add add add add add add (bad) (bad) incl movsl jnp add test mov mov pushf pop arpl movsl imul cmp (bad) jae add jnp add cmp movb mov dec push add push pop add pop arpl pushf cmp add inc inc add cmp add push add push add pop pop add cmp mov add arpl (bad) imul arpl fidiv add imul jnp add test test add mov call add jnp notl add or pushf add movsl movsl add lods lods add imul xchg xchg add jae add mov add movsl add lods lods add mov add mov jnp out mov add imul mov xchg jae add mov lods mov pushf test jnp imul movsl movsl add cmp jmp mov ljmp lods add lods movsl add mov inc add pushf xchg add lods movsl add inc cmp jae cmp inc mov add into movb inc xor into cmp add mov add into movb cmp add cmp add inc add (bad) mov add (bad) into add cmp add cmp movsl cmp add and neg (bad) add and lods push xor pushf push cmp lods inc sbb movsl cmp add or movsl inc adc jae sub movsl cmp add inc or lods dec adc mov sbb (bad) imul neg into add dec or mov adc arpl add dec add (bad) pop or mov or mov sbb (bad) imul (bad) test (bad) pop add into imul (bad) jae add xchg push add arpl add imul mov jnp add test add mov add xchg dec add pushf push add mov add (bad) xchg add imul (bad) arpl add jae add mov add xchg inc add into pop add lods arpl out lods imul mov add imul out or (bad) jnp add test add pushf inc add pushf dec add lods arpl out pushf cmp idivl test add add dec dec dec add add add add add add bound mov add add add cmp or bound mov dec pop pop fs cmp add lea xor imul and add imul pop pop pop fs bound lea xor pop pop pop bound and es push xor push xor and and and and xor xor xor bound addr16 sub sub xor bound lods lcall sub mov add mov add lahf and and xor mov add add cmpsl xchg xchg xchg and and mov add add add add add add pop add lock push add add add add add add add add add add add add add addl add popl add incl add incl add add add add add add add sbb add add orb add add add popf lea jl (bad) jl (bad) jg xchg xchg add add add xchg cmpb pop mov mov mov mov cmp ds aas cmp dec inc insl pop dec jl pusha xchg cmpl add xchg jbe pushf dec dec mov push jne fstps lock xchg jmp mov xchg push pusha mov inc mov cmp cmp push xchg cmpb add add or add add push mov sti mov cld scas lods std stos cmpsl (bad) movsl mov lcall nop ljmp push push mov cmp cmp bound lods mov popf cwtl (bad) int3 xabort mov mov cld scas stos cld mov cld lods stos std cmpsl movsl lcall (bad) (bad) (bad) out mov jp leave arpl pop pop data16 ja pop add add add add mov mov clc int stc enter mov mov into (bad) not int xlat into (bad) or cmc (bad) not leave hlt mov out (bad) fistpll fdivs (bad) pusha pusha mov xor imul add add outsl jbe ret ror clc int3 vshufpd enter ret clc int3 (bad) (bad) int (bad) iret (bad) not leave not lret lret not int xlat into neg (bad) neg (bad) cmc (bad) lock mov imul dec pop inc cmp mov mov aad stc lds sarb mov mov enter ret clc int3 (bad) (bad) into (bad) (bad) iret (bad) not leave not lret lret not int xlat into neg shl lods cmpsl (bad) popa popa mov cmp push add add xchg xchg leave orl mov mov cli mov cli mov cli mov stc sarl clc mov enter ret clc int3 (bad) (bad) int (bad) iret (bad) not leave not lret lret in movsl mov dec fs cmp add lds sarb test lods stos cld scas lods sti mov sti mov sti mov sti mov cli mov cli mov cli mov stc sarl clc mov enter ret clc int3 (bad) (bad) int (bad) iret (bad) loop lahf mov dec mov cmp arpl add add jge not int3 std mov std cmpsb movsb std test cld stos cmpsl cld stos test lods stos cld scas lods sti mov sti mov sti mov sti mov sti mov cli mov cli mov stc sarl or ret ret aam xchg mov inc jno push enter mov (bad) pushf pushf (bad) sahf popf (bad) mov std mov std cmpsb movsb std test cld stos cmpsl cld stos test lods stos cld scas lods sti mov sti daa scas sti mov sti mov sti fwait mov mov cli mov stc sarl mov push addr16 dec rclb (bad) cwtl cwtl lcall lcall (bad) sahf popf (bad) mov std mov std cmpsb movsb std test cld stos cmpsl cld stos test lods stos cld scas lods sti mov sti mov sti mov sti mov sti mov cli mov sti mov mov push jp inc roll stc xchg xchg sti xchg xchg cld xchg xchg std xchg xchg (bad) cwtl cwtl lcall lcall (bad) sahf popf (bad) mov std mov std cmpsb movsb std test cld stos cmpsl cld stos test lods stos cld scas lods sti mov sti mov sti mov sti mov aam jl dec inc add add sbb push and imul mov mov nop clc xchg xchg stc xchg fwait cli xchg xchg cld xchg xchg std xchg xchg (bad) cwtl cwtl lcall lcall (bad) sahf popf (bad) mov std mov std cmpsb movsb std test cld stos cmpsl cld stos test lods stos cld scas lods (bad) jge jg dec add add add popa or data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 mov cltd cltd lcall (bad) sahf popf (bad) mov std mov std cmpsb movsb std test (bad) jp (bad) pop push add add add data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 outsl add add add arpl jno cli xchg xchg cld xchg xchg std xchg xchg (bad) cwtl cwtl (bad) cltd cltd lcall (bad) pushf pushf (bad) sahf popf daa mov shrb fwait jbe add add jl dec xchg dec xchg dec xchg dec xchg dec xchg pop leave xchg dec xchg dec xchg dec xchg dec xchg dec xchg dec xchg out movsl push imul add add xchg mov xchg xchg clc xchg xchg cli xchg xchg sti xchg xchg std xchg xchg (bad) cwtl cwtl (bad) cwtl cwtl lcall stos push pop add add add mov test mov clc mov clc mov clc mov clc mov clc mov mov add add add mov js mov mov (bad) notl stc xchg xchg sti xchg xchg notb add add add mov cmp mov repz repz repz repz repz repz repz repz repz repz repz shrl daa jbe add ret pop pop lds jmp test xchg mov mov pop insl mov (bad) out test out test out test out test out test out test outsl push inc add add cmpl jnp addb (bad) ljmp xchg jle movsl cmpl add add add add and sahf push call push call push call push call push call inc js daa add add add mov insb loopne jp jnp jecxz jge jle out and sbb js add daa jecxz inc jecxz inc jecxz fwait jecxz inc jecxz inc jecxz inc jecxz inc jecxz inc jecxz inc jecxz inc loop pop mov add add rcrb pop pop fidivl jbe fnsave fistpll fistpll int3 jns mov mov add add fisttpll fisttpll fisttpll fisttpll fisttpll stos inc or add outsl outsb mov imul jo jb (bad) jo shrb ret (bad) jb pop daa ret sbb jle fdivrs fdivrs fdivrs fdivrs fdivrs fdivrs fdivrs mov push add add mov int3 push movl add add add add add add add add add pop shll jae (bad) jae (bad) jae (bad) jae (bad) jae (bad) jae lret mov mov daa scas push push scas push push mov add add pop add pop add (bad) daa (bad) mov pusha mov test add add daa fwait add add add add (bad) (bad) (bad) (bad) cld (bad) jmp add incl add cld add psubb add clc add add add add add add add add add add add add add add add add add add add add add add add add add pop addb pop addb xadd rcrb add lock cld add incl jg push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp add add add add add add add add add add add mov mov add daa fwait add cmp aaa xor cmp outsb pop dec add nop fsts xchg nop aad jp jb cmpsl dec dec bound sub xor add rcrb stc lds ror not leave stc les jle lret gs das push cmp add mov std movsl mov enter (bad) clc iret enter not into stc les data16 sub add add mov in shr (bad) std cmpsb movsb cld stos test stos test mov stc les int3 (bad) enter cltd cmp add add fwait fwait fwait test xchg xchg fwait fwait (bad) cltd cltd cld stos test lods stos sti mov sti mov pop mov stc sarl pusha push aas xor add fidivl jp lock lea mov std cmpsl movsl cld stos test lods stos sti mov sti mov fisubl les fidivl je aam imul imul imul jo test pushf (bad) mov std cmpsl movsl (bad) (bad) outsb es outsb es outsb es outsb es outsb es outsb es outsb es inc (bad) jo lock cwtl cwtl lcall iret xchg (bad) pusha idivl idivl idivl cwtl outsl dec (bad) jbe loopne jns mov (bad) (bad) notl add add popf (bad) roll jmp pop jmp pop jmp pop jmp pop mov imul gs jl addb (bad) add add add add lds mov loopne cmp lea loopne cmp lea int3 ja js push int3 gs xlat jno into test add add xchg jge jae fildl fldl subl lods add enter mov mov add (bad) aas add clc pop add lock add add add add add add add add add add add pop add pop incl add incl add je bound popa imul add sldt int3 push add outsb push add inc add incl daa add add or inc jne outsl je gs add add inc jb popa add ret pop push adc add add or push arpl je arpl popa jb add arpl insb add sub scas or add incl add add pop add insb gs popa add add outsb add cwtl add add add add add pop add addr16 add outsb addr16 xor add jb jmp adc incl sbb pop add outsb arpl add add or adc adc incl and add or inc imul gs xor add push xor or add add add or inc jae outsl je insb popa outsb xor add or dec fs fs jne add adc add pop add add add add or push popa jb jp popa cmp pop add aad pop or add je jo jb jae jae add or incl sub add or add jo jb outsl jb jne add add or jnp or push add add add add jb je imul or ja push or or add add add add or inc imul cmp pop add scas or add outsl insb cmp adc add add add add add imul add add or or incl push add add or inc push jb add add add or or or add add or dec popa outsb jae outsb imul inc jne popa imul push add adc add add add add fs push xor pop add and rorb insb popa je jb imul xor add pop or push jne je gs jbe add popa insb popa arpl popa jb jae add dec or push adc add add add add add jns add add add imul ja in ret pop push adc add add add add or push outsb push outsl jne add add add popa jbe jb add popa push lea adc incl pop add add add insl outsl jae je xor or pop adc add add add add arpl je insl popa jb add add ret add or or add add add push or push popa outsb fs jne add add lss adc adc or inc add jb insb add push add adc add add add add sbb add jb jae imul and add add add add push add insl insl jns add insb jne addr16 jbe add mov pop add add or push outsb ja imul add aaa pop xchg adc add jo push cmp adc add add add add or inc imul jns add add add into add sbb incl sub add and add popa js popa insl gs jb push add add popa jb add das or adc add add add and jb popa outsl xor or mov add or or add add add es add jne data16 add adc add imul jb xor adc incl sub add daa or dec popa insl gs jae add push add jb jae add add or sbb add add or push outsb popa outsb popa insb jns gs add add insl gs add inc adc or pop add add add add or inc outsl outsb bound imul add adc add or add and incl sbb add sub add outsb add add adc pop or add add add sub push arpl jb add or xor adc add imul popa add aaa add add push add add add sbb add outsb arpl aaa add add and add add add add or inc imul add pop add je gs add adc push adc add add add add or inc jb jae outsl gs xor or rorb push adc and incl dec add add or dec outsb je jb gs jae and add add add add add add add add push add add add sbb add gs imul add sub add add or push jne arpl push add or add dec add bound imul insb add jb imul xor adc add add add add sbb imul outsb xor sbb add add add add xor add fs add add add adc and add add add outsl jbe imul push add jns push outsb xor add or add add add add outsb imul add add push call pop or add popa fs arpl add daa add add add add pop add outsl outsb jp jae or jmp add or add add add add add or inc jb jbe insb imul or adc sub incl push add add or dec jne push popa add or or add arpl push add add add add push add add add sbb add arpl gs xor sbb add add add add cmp add jae imul push adc notb add adc add jne jae add xor push add add add sbb add jae gs and add add pop add data16 add add or add add add add pop add jne je add add or pop add insb gs add sub incl and add cmp add jb insb insb outsl jae jae add add adc or adc or sub incl and add cmp insb outsl jb jae je jb add add or mov incl sub add or dec bound outsb gs add jb fs outsb fs add mov sub add add add je imul or push or add int3 or add add add add add outsl insl outsl je jb add add adc or adc or add add add add add insb insb fs jbe add add or adc loopne or add gs add xor incl dec add add add jne popa jns add add or adc pop add add arpl imul adc add add add add sbb add outsb arpl jb sbb add add add add add add addr16 insl imul push adc loopne or incl and add dec or dec outsl outsb push outsl jb add add add xadd adc add add add popa jne imul add andps xor push add je jo adc add add add add sbb push insl je add add and add add add add outsb popaw insb insb outsb add adc adc add pop add add add add adc add add add add sbb add imul sbb add add add add add add popa jo push jb push add add outsb arpl add in adc push adc add add add add add jo arpl imul or push arpl jae jo imul add mov gs add add add add bound add pop add jae popa jb add push xchg adc mov incl and push add insl popa outsb add je push adc insb adc cmp incl and add push or dec outsl jae jbe insb insb gs or mov dec adc pop adc cmp incl sub add push pop add arpl popa add add add jb outsb jns add int3 push je adc incl sub add push pop add jb gs add add add jo insb imul add adc arpl adc add add push add jb jns add add add jb push xor add mov add incl and add add dec imul add add or add push add add add add add insb arpl sbb cs std adc add add add push add outsb imul adc or add add add add pop insl imul jns add aaa add add add adc add jae gs imul pop add insb gs add xlat pop add adc add add add add or inc outsl insl popa je jne add add or pop xchg xor add add add push jb jae add or push je gs popa insb insb jae add mov adc incl sub add sbb add jb arpl jb push into or add adc add push jo add incl sub add and add jp outsb je jae add add add jne popa arpl xor add lea lea sbb incl sub add and add arpl imul add add add add or add push roll add add push add popa imul add add je add into add add add add sub add insb outsl jae outsl insl popa add add add jae gs je outsb add sbb add add pop add insb insb imul or add adc add push test add incl sub add aas or dec outsl push aaa add add add arpl outsb popa add adc cwtl adc cs add add add add ja imul lods adc pop adc add add add add inc jns insb outsl addr16 jo gs add or inc insb gs arpl imul ds lret adc xor incl sbb add inc pop add popa ja je add add push or add add add add insl gs add add add push add cmp or xor incl sub add inc add push gs add add add gs outsl jb jae add sbb xor incl sbb or inc imul insb jns push add adc add call add add add je outsl addr16 jo gs add add add outsb gs arpl add (bad) adc push adc add add add add add jae insb insb jns sbb dec adc or add add add add and (bad) (bad) (bad) incl add add dec inc add add add dec inc add dec inc add dec inc add add add add add aam inc add (bad) (bad) incl add add dec inc add add add dec inc add dec inc add dec inc add add hlt dec inc add inc add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add (bad) (bad) incl add add add (bad) (bad) incl add add sub add lahf inc add sub add sub add inc add sub add inc add sub add lahf inc add sub add sub add lahf inc add sub add sub add inc add sub add inc add sub add add inc add sub add inc add inc add sub add inc add sub add cs add inc add sub add cs add add sub add cs add inc add sub add das inc add add int3 int3 int3 int3 int3 int3 int3 jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov push mov mov call push push push mov movl movl movl movl movl mov lea call movl mov push lea push call push call call mov push lea push call lea call movl mov push lea push call push call call mov push lea push call lea call movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl movl movl mov call mov mov mov mov mov mov mov mov mov push push mov push lea push call add push call mov mov lea call jmp movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov movl mov mov movl lea lea call movl push call movl movl movl lea lea call movl movl movl lea lea call movl movl movl mov lea call lea push lea push lea push push call mov lea call movl movl movl mov lea call lea push lea push lea push push call mov lea call movl push lea push call lea push call mov mov call lea call movl mov add jo mov movl mov cltd idivl mov xor mov mov mov movl mov and jns dec or inc xor mov movl cmpl je jmp movl lea push lea push lea push call mov lea call movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl movl call movl movl movl cmpl jne push push call movl jmp movl lea push lea push lea push call push mov mov push push call add lea call movl lea mov movl lea push call cmp je jmp movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl push push mov push lea push call add push call mov lea call lea call movl movl movl lea push push lea push lea push call lea lea call lea call movl movl movl push push push call movswl mov movl push mov push call mov lea call movl movl movl mov push call fstpl movl fldl call mov movl movl movl movl movl lea push lea push push push push push push push call fstpl lea push lea push push call add movl lea push call lea push lea push call push lea push call lea push call mov lea call lea call lea push lea push push call add movl push push lea push push lea push call lea lea call movl lea push call lea push lea push call lea push call mov lea call lea push lea push push call add movl mov push call mov movl movl movl or test je movl fildl fstpl fldl faddl fnstsw test jne call mov movl mov cltd and add sar mov movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov movl lea lea call movl mov push mov push call mov call mov mov movl call push lea push call mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl xor cmpl setne neg mov lea call movswl test je movl call push lea push call mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call lea call movl movl movl mov lea call lea push lea push lea push push call lea call movl cmpl jne push push call movl jmp movl mov mov push lea push call movl push push mov push call add fwait push jmp lea call lea call lea push lea push push call add ret lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call ret mov mov pop pop pop mov pop ret jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov push mov sub push push push mov movl mov xor lea xor rep lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push lea mov mov push lea lea push push mov call mov mov lea call mov push push call mov lea call push push lea push lea push push call mov lea call push call lea lea mov movl call lea lea push lea push push push call lea lea push push push call add push jmp lea lea push lea push push push call lea lea push lea push push push call add ret mov lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call ret mov pop pop mov pop mov pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov lea xor push mov mov mov mov mov mov mov mov mov mov mov call mov push push call lea mov push call mov push push call mov add jo push mov call mov mov lea call lea lea push push mov movl call test je mov lea mov mov lea push lea push push call mov lea call mov push call mov lea call lea push call lea push call mov lea call mov lea call push call lea push push call lea lea call lea movl push movl call mov lea call lea call push push push call fwait push jmp lea call ret mov lea call lea call mov lea call lea call lea call lea call lea call lea call lea call ret mov mov pop pop mov pop mov pop ret call nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop sahf sahf sahf sahf cmp pop add (bad) (bad) (bad) (bad) (bad) (bad) call adc add xchg add add add pop add xchg add xchg add xchg add add orb add mov add mov add mov add pop add pop add pop add mov add mov add mov add add sbb pop add add (bad) mov add add addb add mov add add subb pop add mov add pop add pop add mov add mov add mov add add or pop add mov add mov add mov add mov add pop add mov add pop add mov add pop add pop add mov add mov add add add pop add mov add add repnz add mov add mov add mov add mov add add pop add add add je pop add add orb pop add add sbbb pop add add addb add dec push push inc push dec xor inc dec dec add push add dec arpl add mov pop popa fs data16 popa outsb add js pop pop jbe popa push popa jb outsl jbe add mov pop pop jbe popa inc jb gs popa jb add pop pop jbe popa push je push popa jb outsl jbe add bound jb gs popa jb imul pop popa fs imul xor mov pop popa fs data16 gs xor xor pop pop jbe popa push je inc popa je sub bound gs jns je insl inc jb outsl jb rolb pop jbe popa dec jb jae insb je push bound add add jbe popa dec outsb inc jae jb add push imul xor add pop pop jbe popa dec outsb inc jb outsl jb add add jbe popa dec bound gs cmpsl add fs imul imul pop jbe popa dec bound gs fs data16 pop imul xor imul jbe popa push gs popa jb jb add push add dec jae outsb add outsl add jbe popa inc push add bound jns popa jb add add inc dec push pop push dec dec dec pop inc fs data16 add jbe popa push jb outsb je bound or inc insb insb inc jne arpl outsb inc popa insb insb add add jbe popa dec bound outsb add push data16 je outsb add add jbe popa dec popa je dec fs popa insb insb dec add dec push pop push dec dec dec pop push gs gs jae add push add dec jae jb add inc push inc dec push pop push dec dec dec pop push jne jb dec outsb je jb popa arpl jns pop pop jbe popa push popa jb jne add bound js gs dec popa outsb fs gs add pop pop jbe popa push je push outsl push outsb imul add fs data16 gs add scas add fs imul ss add bound push inc js gs imul pop pop jbe popa push je push popa jb popa insb add push add jbe popa push bound outsb add pop inc dec insb outsl add lea pop pop jbe popa inc jb outsl jb jbe jb insb outsl ja add add jbe popa dec gs add push imul xor add push imul xor imul jbe popa push je inc outsl jo add mov pop pop jbe popa inc jb gs je dec imul pop popa fs imul xor add stos add fs imul cwtl add jbe popa push popa jb jae dec gs add jbe popa dec xor popa jb add pop pop jbe popa push popa jb fs add jbe popa dec popa je dec gs inc popa insb insb add inc add jbe popa push je push outsl inc outsb jae add xor bound je inc outsl insl jo add pop pop jbe popa push popa jb outsl jo add test bound jo xor fild pop pop jbe popa dec popa je dec gs inc popa insb insb dec add push add dec popa je outsb add add jbe popa push je dec outsl jbe add sbb pop pop jbe popa push cmp je xor add insl jne add pop inc dec je outsb add push add dec gs add scas add jbe popa inc jb gs je add lods add jbe popa inc jb gs bound add 