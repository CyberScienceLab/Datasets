xchg pcmpgtd push xor bound mov inc or data16 or data16 lahf or pushw add pushw add data16 xchg pcmpgtd bound data16 or (bad) or xchg pcmpgtd inc push mov pcmpgtd jne adc sub data16 pcmpgtd add data16 add test data16 or data16 data16 inc xchg pcmpgtd fisttpll scas lahf or data16 add add add test or subb add add xchg add add add add pop add add inc add cmp inc add and jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp push call add add add xor add inc add add add add mov or add add add add add pop add jo outsb fs jb arpl or lock inc add add add int3 xor add lahf push inc xchg into mov popa mov dec push and adcl cmp hlt push or xor or stos add xchg ja add inc or add or inc imul jae or push jo sbb add and and or add add or add add add add adc add add add add add add adc add add add add mov add adc add and add add or add add add add hlt add in add scas sbb lea push add mov add lods inc add call cltd add lea pop add or call (bad) push add je sbb add lods inc add (bad) xor sub push add mov add insl add mov pop fnsave mov cmp or sbb (bad) cmc roll imul add test add pushf out add pop add mov jns pop aam add pusha add test add mov add jp add cld (bad) stc add pop add iret push add jnp add dec add test add sar add mov cltd add jl add cltd adc ss jno sub testl imul add mov adc lds leave outsb add roll add leave pop add (bad) add jb add add lret (bad) in add jno add popa add test add test or push testb adc and or and and addl mov bound pop lods data16 pop add mov frstor scas and gs add add add lea inc les xor add outsb or insl (bad) fwait add (bad) and xchg mov pop mov and outsb into jo aas mov add jb add int3 add pop add add mov add and push add je pop sete add (bad) incl clc insb clc add mov add jge es add jl add lea add push add adc add lds or push sbb imul and pop add dec add hlt lret add cltd sub cmpeqps or data16 mov xchg mov add (bad) and or add mov pop mov jp add add add add add add add add add and add daa add inc add add add add add mov xor add add add add add add addl add add add popf xor xor xor dec popf dec dec dec xor xor aaa xor xor dec cmp inc xchg jno dec dec xor xor xor jbe adc imul xor dec (bad) (bad) push pop fimul jg add xor dec js push movups xor pop and dec push dec daa sbb dec push cmpl xchg and dec (bad) jg (bad) pop es js or inc outsb push sbb ja xor add sub jne dec xor pop jb sub and dec sbb sbb pusha sbb test insb pop push pop arpl adc jl or xor and push or subl xor xor dec jge aaa ds pop pop xorb xor xor push insl add adc sbbb xor xor xor xor out push xor xor clc pop add loopne add rolb add add add add add add add add add pop add clc pop add sub add adc add and add add and push add add imul fwait add add pop add mov add add adc sbbl jmp jae incl push add cmp adcb sbb call pop pushl jae js jp outsb into insl call push ljmp mov decl insb or add xchg adc push outsb cs jmp data16 jg test jle (bad) (bad) jnp jge sbb incl shrb mov or add insl add add add add add add adc xchg sub lcall decl push jmp ret push (bad) pop decl push lcall pusha (bad) js jp data16 sub add add pop add add add add daa stos aaa incl push (bad) cmp dec call mov cmp clc out decl loop lcall and inc mov incl inc call jnp incl popa add add add push (bad) and cmp push pushl aad decl scas daa call (bad) std (bad) cld inc hlt (bad) lods adc adc inc decl dec lcall nop sbb add faddl imul pop xchg and dec frstor scas xor ljmp out (bad) fdivr fcos outsb aam (bad) fistpll sub cmp sbb add incl add add add add jg push out lods sub dec incl dec jmp in loop clc (bad) clc (bad) in (bad) jmp fdivr fcos cmp dec call sbb and and adc add add sub ja xchg incl outsb pushl fisubl dec mov jecxz in (bad) in jmp jb adc pop call stos sbb or add add add add add icebp mov decl cmp fisubl jne jle mov sahf jmp inc lcall mov call stos sbb push orl add xchg (bad) call ljmp cwtl incl jns aaa jecxz ljmp int3 inc cmp lds (bad) dec decl fwait sbb push js mov or ficom mov lock jmp jg jne test imul lcall test push add add add add mov xlat call fstl lcall mov sbb push jge push add mov add cwtl adc jge lahf sahf lahf add and and jo in add add add add clc into xor lock out xor add xor add or add xor add dec rolb xor add lock (bad) push clc pop adc xor add imul add add add add add add add add add add add or inc outsl insl insl popa outsb xor add or inc outsl insl insl popa outsb xor add sbb ja add incl add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add add add xchg add add add sbb xor add or or add xor add (bad) decl add add add add add add add add sub loopne inc add adc js add test add xchg add add add add je jb jae outsb addr16 jo jne jae insb outsl insl jae gs add jo outsb fs jb arpl add pop add add add (bad) (bad) incl add add inc add add clc sub add add add push inc add add add add cmp inc add add add inc add add add inc add add add inc add add add inc add add add xchg add inc add pop add add cwtl xor (bad) (bad) (bad) incl add add add add inc add call add (bad) (bad) incl add add inc add sbb inc add adc add add nop cs add add add insb inc add (bad) (bad) incl add add add add add add sub add add add add add add inc add add add add add add add add add inc add add add add add add inc add add add cmp add inc add add pop add add cwtl xor (bad) (bad) (bad) incl add add add add nop add (bad) (bad) incl add add add push inc add adc mov inc add add add add add insl inc add (bad) (bad) incl add add add inc add add add sub add add add add add xor add add mov inc add add add add add add mov add add and pushf loopne add add add xor or inc add pop add add cwtl xor (bad) (bad) (bad) incl add add add add and adc nop add (bad) (bad) incl add add and test inc add adc add add nop cs add add add (bad) (bad) incl add add inc add add add nop add add add and add add insb xor add add add and add add hlt and add add lock add add hlt and add mov push and xchg rolb add add pop cmp add add pop add add cwtl xor (bad) (bad) (bad) incl add add add add inc add call add (bad) (bad) incl add add and je inc add adc mov inc add add add add add inc add (bad) (bad) incl add add inc add inc add add add sub add and add add mov add add and add add xor inc add add add inc add add add and add mov push and mov add add xchg add xor inc add add add cwtl xor (bad) (bad) (bad) incl add add add add inc add call add (bad) (bad) incl add add and mov inc add adc mov inc add add add add add insb inc add (bad) (bad) incl add add das inc add add add add sub add add add add inc add add add add add add add add add inc add add add add add add inc add add add xor lods xor add pop add add cwtl xor (bad) (bad) (bad) incl add add add add nop add (bad) (bad) incl add add add and test inc add adc add or nop cs add add add inc add (bad) (bad) incl add add add add add xchg add add add add add add add add add add add add add test inc add add add and inc add add add xor inc add pop add add cwtl xor (bad) (bad) (bad) incl add add add add and nop add (bad) (bad) incl add add and inc add adc add push add add add imul (bad) (bad) incl add add inc add add add sub add es add add add xor add add add es add add add es add add add es add add add es add add add inc add add clc dec xchg add xor add xor add pop add add cwtl xor (bad) (bad) (bad) incl add add add add inc add call add (bad) (bad) incl add add es add add adc mov inc add add add add add (bad) (bad) incl add add cs add mov add add add lods xchg add add add sub add add push add add sub add add and inc add add add inc add add add sub add mov push sub movsb out inc add add add xor mov inc add pop add add cwtl xor (bad) (bad) (bad) incl add add add add inc add call add (bad) (bad) incl adc cmp add cmp inc add add add inc add call add add add inc add inc add add add sub mov adc scas adc mov inc add inc add inc add inc add adc scas adc mov inc add add add mov insb and xor add jmp add hlt add add add add outsb inc add cmpsb inc add mov add adc add add loopne inc add add add add mov lahf push inc xchg into mov popa mov dec nop add add or add add add adc dec add add add or inc or addb or cs add add add sub add add inc add add adc jmp mov sbb mov add add add scas add add add add inc add add add add adc int3 adc adc push and add add scas add add add add add add push add add in cli call xchg jle ja jae adc add add add stos add add add add inc add add cmc push dec mov mov jmp add add add add add add add add jg mov dec mov mov sub push add add add add add add push add add or out mov push (bad) pop add add add add ss add add add outsl and dec fsubl inc xchg stos and lahf ret mov add add add add fdivrl inc add add add add add mov add insl inc add (bad) (bad) incl add add mov add je inc nop leave data16 jns movsl or or or or in inc add xor or add add add add add add add (bad) (bad) call add xor add add les inc add incl add add add (bad) (bad) call xor call add add incl add add add and (bad) (bad) (bad) call xor clc xor add add or nop add incl add add add push inc add (bad) (bad) call xor add inc add add add sub add add add add (bad) (bad) call xor adc inc add add add sub add add add and (bad) (bad) (bad) call xor sbb inc add add add sub add add add add (bad) (bad) call xor sub inc add add add nop add incl add add add sbb (bad) call xor xor inc add add add incl add add add and (bad) call xor cmp inc add add add xchg add incl add add add sbb add (bad) (bad) dec xor add add and inc add add add inc add add add add add incl add addb jo outsb fs jb arpl add add jae bound insb jae add dec insb imul gs imul je gs insb gs add fs outsb jae popa insb je jb add push add add je addr16 imul add add outsb imul outsb gs insl jae gs add add outsb imul je jb add call dec xchg inc cmp hlt push or std (bad) jb inc stos xchg enter cld dec mov lahf push inc xchg into mov popa mov dec xchg inc (bad) fsubl sub mov cmp xor or stos add xchg inc outsl jb add add cs push add xor inc cmp outsl addr16 insl and insb gs sub sub arpl jae data16 push imul je imul pop push inc ss dec inc add add cmc push dec mov mov jmp mov inc add add add add add add add xor cld xor je inc add nop add dec lods xor or stos add xchg inc outsl insl insl popa outsb xor add add inc add cmp push add xor and push add xor add add pusha xor jo inc add add add lods xor or stos add xchg mov dec sbb mov cmp push add add outsb add add jbe add add add add or push inc inc ss dec dec add add pop pop jbe popa inc jb gs popa jb add add jbe popa inc jb gs je add add pop pop jbe popa push popa jb outsl jbe add add adc addr16 aaa sub ss and xlat insb add add pop pop jbe popa inc jb gs popa jb imul pop pop jbe popa push popa jb jne add jbe popa dec bound gs pop pop jbe popa inc jb gs bound add add jbe popa dec jb jae insb je push bound add add jbe popa dec gs add add inc add inc add mov mov mov jge inc jbe pop and cmp inc test push fildl pop sbb or addb or cs test pusha (bad) clc dec sub or add in jb push mov stos in repz outsl sahf hlt (bad) int3 dec xchg push adc jmp mov sbb mov out mov (bad) dec cwtl dec mov fmulp sbb jo vaddsubpd adc lret movsl arpl sub push ret pushf adc int3 adc adc push and int3 loope lds mov cli test sbb dec mov fwait dec pop mov jae rcrl jbe sbb push add in cli call xchg jle ja jae adc fidiv (bad) loop into adc push push and xlat dec inc xchg adc jle jae jl fcoml xchg loope ss outsl mov lea enter mov and test out adc imul pop or push and dec mov mov sub sbb mov dec mov repz subl sbb mov lret jecxz mov enter nop scas cmp cmp ja,pt or out mov push (bad) fldt inc jns dec pop dec mov xchg add sbb inc mov xlat outsb mov jl mov rcr daa and mov add loope outsl and dec fsubl inc xchg stos and lahf ret mov xor shll inc scas xor adc xor add mov dec mov mov sub jmp (bad) lea enter mov and test out dec lods xor or stos add xchg dec add add add add add outsb imul jb outsb outsb jae add add inc add (bad) (bad) (bad) jmp add imul add add add add add (bad) or add add add dec xor add in cli call xchg jle ja jae adc mov pusha (bad) dec mov fwait dec pop mov lods xor or stos add xchg push add add add add insb add push outsb addr16 add add inc add (bad) (bad) (bad) jmp add imul jb add add add sbb add popa add add add add add int3 xor add or out mov push (bad) subl sbb mov lret jecxz mov cltd iretw adc pusha rcll push add add add pop add outsb outsb gs data16 popa popa fs jae sbb add and (bad) (bad) jmp add je popa popa fs jae xor add add xchg or add add incl add int3 xor add adc push and lock (bad) rcr int3 sbb jo vaddsubpd adc dec lods xor or stos add xchg push add add add add add fs outsb jae popa insb je jb add push outsb gs sbb add and (bad) (bad) jmp add popa arpl outsb gs xor add add rclb add in or add add add dec xor add test jmp mov sbb mov addr16 mov stos in repz lods xor or stos add xchg push add add add add add je gs insb gs or popa outsb fs gs gs add add inc add (bad) (bad) (bad) jmp add outsb fs gs gs add add add enter out add inc add incl dec xor add adc fsubl inc xchg stos and lahf ret mov (bad) ljmp outsb mov jl cmp xor or stos add xchg pop add add add add add insl jae gs add fs insb bound insb gs add add inc add (bad) (bad) (bad) jmp add gs insb bound insb gs add add add inc pop add mov add incl int3 xor add push dec mov mov jmp push push and xlat dec inc xchg adc jle dec lods xor or stos add xchg add add add add outsl addr16 imul add fs jae outsl jb outsb imul add add inc add (bad) (bad) (bad) jmp add jb jae outsl jb outsb imul add add add pop sldt addr16 inc add add add int3 xor add push xchg inc or addb or cs sbb imul mov jge inc jbe dec lods xor or stos add xchg aam add add or outsl arpl push add imul imul add jle add add add xor add add add add add add std add add add add add add add add and xchg mov mov sub hlt and test fistpll leave xchg lcall mov popa cs int3 lret movsl inc mov in test sbb mov (bad) cli (bad) je dec arpl adc subl push (bad) mov jno movsl pop out outsl pop jecxz cmpsl sub gs pop or bnd (bad) inc iret rcll fisttpl push cmp push jo jns inc icebp mov aad and lea int3 push pop sbb popa xchg push mov inc inc and std mov fiaddl je fnstcw and rcrl adc daa push icebp sbb ds (bad) mov lret lds adc iret mov pop aaa fdivs ret setno int3 sti xchg rcll ret cmp (bad) jg repz mov add call jecxz pop lds mov int3 stc sub in aaa ds pop and lret jbe cmpsl mov (bad) lock pop adc sbb add mov sti fs (bad) aas aaa (bad) sbb bnd repnz mov into lahf push out cvtdq2ps bound mov push ljmp and adc push xlat leave es xor pop pop enter inc sbb test icebp or adc add out mov sbb imul add add add ficompl aaa mov sub aad bts dec pop ds lea in or (bad) sub in xchg adc (bad) or inc and push popf adc insl jae js cmp pop cmpsl or sub loopne and iret loop mov push negl or mov sti scas xchg mov mov sub jno push inc scas bnd sub push arpl inc mov pop xchg cmpsl btcl fisubl mov movb and leave lcall add add add arpl xchg scas into mov int cwtl sbb jns add ret pop pushf pop mov std pop into jle fbstp scas add or ret xchg jno popf xchg mov popa inc jae dec jae in clc aad mov cmp lahf (bad) mov gs add ret sub jg dec dec sahf cmc nop daa sbb das mov rcrb fisubr (bad) ja or test adc aad pop adc ds push addr16 loopne mov xchg add add add js jecxz mov dec sub lcall add iret out sbb cmc imul adc orb pop fwait rcrb sub push or in or test addr16 (bad) pop mov xor fiadd mov rorl (bad) movsb pop imul ljmp cmpsb psubsb mov dec jmp loopne mov (bad) xchg xchg mov fisttp jmp add add out loope cmp cs push popf jns lds push sbb sbb cmc out out cld std pop daa and or rclb sub pop push dec jbe test call notb add popf cli shr push das pop aad mov jg inc xor shrl xchg nop out pushl pop or lahf (bad) iret and jbe jge or loope mov dec (bad) xchg sub dec stos clc out js add add add add shrd and fild adc (bad) out inc push repz int3 push aaa sbb idiv cmp jns or lret stos gs andb in pop jae lods shll fldenv pop adc inc add mov adc (bad) and push xchg popa div rolb (bad) mov movsl adc imul and mov stos sbb push pop call jbe scas or lods mov or stc jp movsl mov int pop out fmuls add (bad) lods test sbb out adc mov sub sbb jnp xchg popf xor test or fwait adc lret sub (bad) icebp test xchg (bad) and add (bad) mov adc popa jae aam je std dec xchg jae lahf dec dec test xchg cmc dec xor sbb ja out loop sbb outsl les cmp sbb add add add in lock adc pop (bad) leave add mov pushf outsl es shrl push (bad) push aaa lret arpl data16 fstpt inc sbb insb scas (bad) mov ja stc and and (bad) xor mov push push pop pop xor xchg mov lret mov loop cmp ds and dec sub negl adc das xor arpl pushf lahf push and sub push sbb mov add add add add data16 jp push lods jns out lahf pop mov pop cmp cs inc jno pop inc jno fcmovbe ja push les outsl pop and sbb in adc cmc add imul sbb into leave push lret xor jmp sti outsb mov fstpl mov pop lret outsb mov fwait adc xchg mov add aam lea jg icebp outsb leave cmp ljmp and jns push add sbb push mov ficom sbb mov mov xchg mov xor mov pop pop dec sbb inc fstpt mov mov jp lahf add lret pop sbb push cmp insb (bad) mov insl cltd or repnz xchg jo pop sbb inc sub jnp mov mov cwtl (bad) ret pop int3 out test mov add ss sub pop cld dec sbb or dec pop cwtl leave pop in add add add mov mov mov imul lret rcrl push jns ficomp xor inc rorb xor popf cmp mov cs mov jae sbb push fmull out test movsb sub inc sub in enter inc (bad) jnp cmp pop fwait sti pop fisttp mov outsl jns fnstsw loopne clc mov into (bad) inc inc and xchg xchg xchg dec ret jecxz inc add jmp xlat mov add add add add cmpsb fdivrl ss lea lock adc pop in inc adc out adc cmp stos sub andl xor lret in sti xor pop pop jbe jo cld (bad) lcall inc les movsb (bad) loope fwait or loopne pop xlat jbe js idivl push dec fucomi mov adc inc push cmc js (bad) in jno fs call cld call add mov mov cmp stos outsl enter add add add loopne or dec mull lock in lock mov sub (bad) cmp shrb xchg push inc inc loop mov adc shll mov mov pop jge jae cltd decl jle xchg push mov cltd shrl dec and ljmp or mov stc lods loope lcall cmp shrb andl mov and cmp add add add jle add (bad) ficomp dec or pop (bad) (bad) insl in dec sub sbb nop jns push stos loopne loope xchg jg in rcll cli sbb std cmp and adc ret mov or repz dec push add aad mov push daa decb out pop lods lahf and pop (bad) lret pop dec test cmpsl jb push sub shll or mov pop arpl sbbb outsl icebp pop repnz push sub (bad) fsubp push cltd jl int mov sbb rorl push (bad) mulb inc in push xor sub and pop in dec in popf jmp mov fs mov pop push cmp mov loope add mov cmp bound push and adc stc test xchg cli in pop adc push or pop mov js repnz add gs pusha fs fsts icebp test add add add push int3 lret mov mov adc (bad) insb xchg mov inc jl repnz je cmp fs push fstpt dec sbb push and inc add sub outsb jno (bad) cli add stos push mov mov jb test mov sbb cmp push and pop dec dec sbb mov adc shrl cld adc (bad) fsubs jae lahf adc add pop mov js xor cltd add add add (bad) sbb adc or push fnstsw jg jno jo or inc adc stos or jp push pop sub push scas xchg cli call jnp or stc ret jmp lret cs jle lahf mov push mov xor aaa pushf mov outsb push pushf hlt xchg mov xchg xchg xor pop cmp insl inc dec test or and jg ds sbb iret lcall add (bad) inc inc ret (bad) mov inc adc je int3 mov cmpsb pop or aas outsb and loope xchg fidivrl jne mov inc sub pop xchg jb std (bad) iret inc in cmp sbb jb jbe push pop pushf fs push pop xchg mov out test mov cmp pop ja (bad) (bad) out or (bad) fstpt sub mov lcall cmc ret xchg mov lret push push repnz popa add dec lret dec mov add add add inc sub xor in dec dec aad movsb pop int3 cmpsb out mov lret stos fidivrl je push aaa lcall mov (bad) mov lret fsts sub mov mov mov or std jo sti jb cltd cmpsl mov insl cld cmc adc cmpsl jb iret bnd into pop or xorl mov adc int3 push mov push addr16 stos inc mov imul inc mov ret ja jmp add add sub pop cwtl jecxz xchg ja bnd mov mov xchg (bad) sub insl dec sbb jb push adc push adc mov or imul das mov imul movsl inc bound push jecxz sbb jg or ds mov test and mov call xchg fisttpl mov push jmp mov loopne sub mov iret pop jbe cmc movsl imul mov add add or or (bad) icebp rcrb dec ds ss das adc stos xor cs mov inc and push xchg add or movsl xor xor cmp sbb xchg test inc add mov jle dec out cltd outsl repz mov sar mov nop inc mov sub aad les outsb dec jp dec rcr cmp sbb sub adc imul mov lahf ljmp sub cwtl add scas xchg xchg mov aad adc cmpsb mov cmpsl adc in sub in ja fidivrl xor adc insl imul subl and clc mov inc lods mov jno imul leave mov push push inc sub ret cmp jnp dec inc mov imulb mov addr16 sbb (bad) mov aam fidivrl pop xchg pop mov add add add xchg mov sub and stc dec lods repz cltd cmpsb lret mov xor data16 xchg pop les pusha int loope xchg push add jmp ss loopne (bad) cmc sarb and sbb sbb push pandn mov push cltd cmpsl adc mov in xchg pop out add push mov cmpsb loopne enter xchg xor repz mov rcl mov inc pop das lds sub addr16 cli add pop cmc mov pop idivb leave fistl and test jmp mov mov decb jmp ret add pushl dec aaa aas cmp es dec mov push (bad) in test loop cmpsb inc outsl dec inc imul mov jmp add mov test lods jle cli icebp rorb ss je repnz lods dec mov inc aam scas adc push aas jns mov (bad) mov lret incl movb add add add xor or das (bad) mov daa sub addr16 mov ret pop push sub ds int jge negb test push sbb dec lret ret xor mov movsl or lret aas cmp in (bad) adc jmp arpl jne fmuls das (bad) mov sti cmpsb mov push jno cltd or cmp or gs jmp sub xor add add add pop xchg lds inc lcall testl sbb cwtl outsb popa push (bad) mov mov mov add aaa sbb shr (bad) dec cltd movsb loop add add out (bad) add sbb xor and xchg outsb (bad) mov lods mov or fisttpl mov cmp out mov dec mov xor cmp push arpl popa and xchg sbb lret add or mov add add add popf das leave cltd mov xor and jb rcll in xchg gs flds lock js inc push inc sub mov jne mov mov mov je cmp push mov adc dec sbb adc clc dec jns cmpsl sti std dec stos sub insb ljmp je movsl adc sbb shr stos movsl cmp loopne adc fs sub daa aas jl inc movsl out cmc add add add jecxz lret mov mov inc outsb in shld xor (bad) fdivrl mov out popa adc pushf mov lret loop (bad) jns xchg cmp mov shrb mull dec sbb out es orl daa add sub push add hlt in lea mov pop xadd outsb mov mov xor mov xchg sub mov leave iret push or pusha push orl (bad) and fistpl xchg rorl inc ret xchg jecxz sbb add add add xchg mov aad imul pop mov inc repnz adc and insl fstpt push cld jb nop es add add or test out shrl lods pop stos push ss jne (bad) es xor sahf dec ss ljmp sbb push mov fldl popf push push xchg and je push cmp outsl call pop movsl xor aad dec (bad) xchg or inc dec and mov xlat int out add mov add stos out sub (bad) pop fbld (bad) enter scas dec jp roll pop lahf (bad) roll mov mov fstps outsl test sub cs inc inc push sbb (bad) ljmp pop dec cmpb and inc mov imul or gs jecxz jge and cmp movsb pop add add or add lods incl cmp pop popa and loopne push add test add add add (bad) ficoml sub mov fcomi iret mov sahf bswap pop xlat mov mov (bad) jmp mov dec sub jbe adc popf jae ss push push bound cmpsb sbb push loope adc xchg jnp pushf pop inc dec sbb sbb xor aad mov cmp or lea hlt sbb xchg mov add and lret dec push repz mov cmp out inc pop (bad) movb inc lock std mov test add add inc lahf and cmp xchg dec jecxz dec (bad) and mov outsl inc sbb mov inc xabort cmc jb add and addr16 mov mov iret fs mov sahf mov pushf inc sbb fsubl adc and add push or (bad) icebp or mov lea (bad) cmp xchg das adc incl dec adc push (bad) cli mov dec fstpt aaa rcl adc add add add aam mov pop loop pop cld push pop fwait xor repnz inc pop mov sbb jns mov and aaa cwtl fnop jne lret sbb mov cmp daa or jecxz movsb stos mov out fldt dec ror add inc pop ljmp imul sub into fist rep loope sahf mov stos add cmpsb incl cmp imul imul xchg push pop xchg inc outsl mov adc add add add mov and add stc inc jg out jne xchg mov pop sahf outsl clc int xchg lcall pop xlat arpl mov dec repnz ret jl cmp sbb ret ljmp add pop or pop xchg nop ljmp and adc mov out (bad) insb cmp lods outsl jno insl (bad) stc sub pusha movsl xchg fbstp iret pop cs imul cmp sahf rolb mov mov jb std (bad) aaa sbb insb (bad) les add add add lret leave push sbb mov (bad) dec cmc and xor out lcall loope mov lea push (bad) xor adc cmc (bad) mov inc dec push daa and mov sub fisubl mov or adc jl ss sbb adc sub test lret mov das test inc fwait xchg jbe mov outsb cmp in inc sub push out cmp enter inc add adc adc std xor inc cmp mov in mov les inc dec mov mov nop dec fisubrl lret or imulb jp xchg xor mov xor cwtl ror sub test jmp mov or pusha test test loopne mov repnz sub ljmp cwtl mov popa push ja mov out or sub dec push and dec inc mov jl iret mov arpl mov add add add add repz pop (bad) out add (bad) ret leave jnp xor iret lcall jno xor and lds cmp rorb les imul jge mov test push insb (bad) cmp mov and pusha in je pop push adc inc inc pop cmp pop hlt xchg sub out ret loope mov hlt out inc sbb push out out or sbb es add add add stos mov dec rolb push ds jl sub pop push inc lahf (bad) jae sbb cmp dec scas jge xchg dec addr16 or cmp push sbb jb addr16 dec push aam mov nop stos or rol mov push or mov outsb (bad) jae lds fwait mov pop sahf cmp test mov push ret and sub mov push in popa je idivb and xchg adc lcall lret pop add add add add adc mov (bad) je popa mov or lods xor cmp push jne jno dec push movsl call (bad) fnstcw into cmp (bad) mov xchg js data16 outsb dec jae cmpb dec or imul jo (bad) and stos push jnp mov push mov idiv mov push out cmp and mov movsb push xor pop sbb mov push jne,pt or push je dec jl jmp add arpl lods xor sbb or fbstp mov jns gs fwait insb pop out (bad) fcompl clc inc xor hlt insl cltd stos or mov (bad) es xlat vandnps mov add ret fild ds les cld mov scas and xor (bad) pusha pop jns jmp cmp repnz push push loop clc jns pop outsb fs push addl les push push add add add add lret inc out adc gs movsb add jg out sub (bad) arpl insb xchg mov mov fcomi sbb mov dec adc mov inc inc jae xor leave add ret (bad) jno jmp inc leave pop popa push popa les cs cmp insl ficom in cs push jge push add fsub shlb div (bad) xorl popa pop pop lret movsl cwtl (bad) push pushf add add add pop push mov jl mov ljmp test pop mov jb dec mov mov dec mov idivl fwait mov jo or imul leave mov mov (bad) pop jp mov push pop sub jno (bad) sbb xor and rep jne shrl inc das fwait shll dec in pusha pop sbbl pushf or mov cmp imul push and and ja inc sldt add add xor ljmp sbb lods imul dec je sbb adc pusha push push jmp (bad) mov repz call and in xchg pop xor dec call xor out int adc test into sbb mov xor mov xor leave mov sub leave add paddsb mov jge cwtl jnp dec xor adc data16 add add add in jo test aad pop xchg sbb jae mov push sbb je sbb dec sti sbb cwtl out lods iret loope icebp push mov insl sar mov imul stos outsl leave notl nop daa sub inc gs xchg mov add mov div add outsb mov sbb rcll mov sbb sub xor (bad) ret xor sti daa sti cltd sbb xchg les mov lahf (bad) in push arpl (bad) push popf cs stos xchg (bad) ss ret insb inc addl add add add and ds bound movsb inc insb sub (bad) (bad) dec popa pushf es adc xchg stos pop mov sbb shl mov dec pop outsl test bnd jne repz or jno outsb aaa in ds sub arpl pop jbe adc inc lret pop shr fistl (bad) int3 jno mov lock jmp jb adc dec xor sbb sub pop shrl je loopne pop xor pop xchg dec in dec aam sbb sbb xor add add add push int3 jns sub push gs ss xchg aaa mov mov (bad) mov jl cmpsb pop pop or and cs xor negl movsl pop test push lret push inc jl cwtl cld rcr xchg enter push xchg mov je jmp lea outsl fsub rcr fwait rcl cmp subl cmp je fild es jge stos mov daa shll insb out sbb pop mov fstpt enter int je mov cltd (bad) xchg sub pop outsb pushf movsl int jl and or divb (bad) or xchg xchg inc xor enter inc mov xchg lea push ja mov data16 shr add push dec (bad) js adc das sbb lds xor je xchg sub xor mov subb mov and arpl cmp add add add add xchg mov xchg pusha test lcall jns sub ja sahf scas clc fnstenv fadd push inc mov and bnd mov xor mov movsl mov (bad) in (bad) rep mov imul xchg push mov dec push xchg lret mov mov fsts or out cld hlt pop cwtl mov adc out in (bad) mov int3 and mov je outsl fs jbe fisttpll stos pop pop push scas scas sbb fmuls movsl adc cs cmp orl imul adc mov xchg mov stos lahf jp adcb inc sbb pop add vmovups jle lds shrl add pop push in sub lahf sbb mov jge lahf sbb sub scas (bad) inc data16 jp (bad) pop add lods adc dec out xor inc cmp pop out dec xchg lret arpl add and jp movsb mov fild xchg icebp mov or adc (bad) sbb adc jmp adc dec (bad) jnp sub gs sub xchg loop fcoms mov xchg movsl push ja or mov hlt ljmp das push mov aad inc sbb sub adc jle fsubr hlt inc aas and adcl inc inc xlat sub cmp lock lahf test decb shll add add add add add sub cwtl ror loop inc in cli inc add pop mov mov popa fnstsw mov (bad) xor lcall mov mov rclb ljmp clc cmp sbbl sti mov aaa aas popa inc divb scas test jae daa jae movsb inc jle,pn lahf xor add mov mov mov fsubrl push ss imull cli jmp out enter sbb stc mov cli mov xlat lods repnz sbb cmpsb imul and fild clc mov iret cmp sub dec data16 dec cmpsb dec lahf push jle fmuls fwait repnz adcl lcall pop mov test mov mov jns xchg pop dec pusha pop in pop rorb jmp adc and add out repnz popf adc inc pop cld cmp mov into xor push es add fwait enter mov cmp add add add sbb pop xchg dec and mov mov cmc xchg pop mov jl pop sbb push pop push mov addr16 out xchg mov dec inc int push lds out xor pop push aad pop dec sbb xchg (bad) adc add and jb pusha and fxtract (bad) add ret in jo inc ljmp mov or cltd adc mov rolb push inc lahf lea mov test dec add push aas fiaddl add add add jecxz pop scas stos int3 dec xor fmull jb jle dec ja jbe movsb fstpl adc loop addr16 and xchg sbbl adc out aad cmp mov mov and xor fwait clc nop push jmp mov cmp daa pop mov cli jne xlat sti pop ljmp mov lods movsb lahf xor call mov (bad) dec (bad) aad inc (bad) and aaa cmpsl lret pusha out movsb addr16 mov dec fldl add add mov dec jb xchg add mov jecxz aam or jg cmp mov jae addl icebp xor jge jnp mov in dec sub add pop rcrb mov jo es (bad) addr16 inc push cmp ret insb jne xchg push pop cmc mov aam pushf xor lahf add inc (bad) lahf inc iret fidivrl test mov cltd ret (bad) jno repnz mov scas arpl inc jbe fnsave (bad) mov notb add add jns or add xor inc scas pop outsb loopne jge push xchg adc pop cs jnp inc xchg push int ret in mov cmp sub xchg mov fldt mov popf int pushf mov xor pop and adc cltd std (bad) ljmp loopne out call aas sti add inc adc pop adc int testb sub call or test cmpsb out push pusha xlat xchg nop cmp add add add aaa xor jns out xor add je stos cmpsb rclb or cld and test out je dec cmpl pop xchg lea insb test lret addr16 jmp dec loope cmp mov js mov add mov (bad) dec push mov push mov add pop loope jl movsl popa outsb mov fbstp and adc or rcr xchg dec push rcll ljmp addr16 xor mov lahf dec add mov add add add xchg insb dec jnp pop insb call xor fnstcw int3 xchg mov popf push mov sbb pop xchg dec sbb leave arpl outsl xchg jmp mov into mov xchg push hlt insb cld rcll jle fistpll fwait int aas roll aam lret inc or lahf lahf push jbe push sbb cmp xchg adc jbe sub (bad) lret dec fdivr pop pop popa loopne adc repz add add add std stc sarb push lret cpuid int lods imul (bad) jne sbb cltd inc call popa push loope mov dec push cltd in fsincos xlat fisttpl call dec aaa cmp adc cmp fsts imul shl aam test cwtl or hlt (bad) js bound fyl2x gs adc dec mov addl inc mov cmp out unpckhps sahf fwait cmp dec jg mull or xchg inc push add or dec inc scas ficom out fstpl push insl adc outsb out mov (bad) pusha push data16 test mov adc push adc imul mov mov icebp push mov push cmpl ljmp jecxz out mov and loop (bad) mov xchg mov (bad) or andl pop ret mov fsubrl inc jne adc xchg int3 stos cmp cwtl add add add add movsl cltd mov sub daa cwtl xorl and call push mov cs fildll data16 jns xor test mov mov cli sarl fnclex cmp sti ja sub adc dec xor fs fnop rolb fistpl das mov jne push fldenv push movsb ret je sub jnp (bad) stc mov lock (bad) ret xor scas mov xchg mov xchg or orb sbb xchg cltd mov gs mov xchg or dec mov iret adc lret mov and pop inc cwtl loop add (bad) clc popa cmp sarl mov inc dec ret out xchg mov inc jne fwait push daa inc mov add out cli out in loopne sarb pop add daa inc (bad) scas dec and das cwtl sbbb in jmp push cmpsb (bad) xor cs add inc mov sbb mov test bound enter add add add rorb cld xchg add sbb dec push push les add fisttp push out lcall xlat rcll xchg sub jne fstpl mov aas lret lock ret mov jge dec nop sbb dec jae sbb push ficom adc (bad) mov mov mov add and mov xor dec lock addl jl ret fildl jae or jmp lods test cmp and out popa mov sbb mov arpl cld inc jmp push (bad) int sub js cmp in clc add cmc xor shrb xor mov mov into fcmovnbe dec jno cmc jl aam cmp dec jmp rcrb jb push mov cmp arpl in or and mov push mov (bad) adc sub cmpsb mov jae test aad push ror pop dec mov jmp inc pusha test mov push aam fadds add add add add pop or sbb ljmp aad insl inc mov dec mov xor mov ja daa xor xchg push add jnp dec js sbb mov push jle repnz nop lret movsb sahf stos jl and jae mov into xor sbb int3 xchg lret pop jge add fadds stc sub insb cmpsb mov bnd mov neg jle divl mov ja xor or aam xchg cmp cmp (bad) mov add add add add stos mov push std mov mov (bad) and mov cmp shr xchg xchg clc add xor orb daa outsb gs scas arpl add adcb les loope mov incb fwait jmp addr16 ficom cmp push mov icebp inc xchg mov enter mov out inc out inc mov dec or xor lods xor jp aas (bad) cmpsb push pop cmp out addl add cltd mov mov and sbb and sub lods cltd xchg lahf push pushf es and insb adc into xor push inc or mov pop addr16 in addr16 iret sahf outsl mov fstl xor in mov enter imulb dec lcall fdivp insb mov push inc push in mov imul inc dec mov pusha scas fdivrp mov dec and in gs adc popf xor dec push clc add arpl jb das repnz aas lahf dec lret repnz sub in dec push add call mov dec mov lret cmc jns push in or (bad) movsl and ja xchg outsl pop sbb push (bad) or int3 out dec add loop sbb cmp lret xchg and xlat loope and pop lcall insb cmpsb cmp aad mov data16 xchg or fbstp sub bound dec jecxz dec movsb mov pop inc jle inc pop adc add add stos xchg jp je cmp adc fldl popf scas inc pop pop ror aam adc std mov add ja mov jnp adc shrb enter adc (bad) xchg mov push adc ret and nop push xchg int mov lahf jp ficoml mov sbb fistp lea cmp (bad) stc in aas pop jb mov push ret aam repnz in mov cltd xchg (bad) fldcw and movsl and add add add cli es cld imul jnp data16 jmp pop not cmp dec push mov hlt add pusha inc xor mov rclb icebp in mov xor addr16 inc add aas push pusha sub clc or in xor and bound adc cmp sbb and xor (bad) out mov dec hlt dec xchg and or pop or scas je inc sub jbe testb add add imul dec add mov push test test (bad) imul repz jle xor cmp mov (bad) int3 pop enter xchg and jge jl enter aad movsb cmpsl mov jmp jb stos loopne adc push bound stc cmc stos mov xor mov out movsl mov mov xchg mov mov repnz and mov xor xor push jl cli xchg je shrb stos add add add or inc scas lret mov lds repz ret push rcl add dec pop inc and ljmp (bad) rclb and pushf dec and in bound pop pop test fwait stos outsl dec cwtl mov cmp rorl mov fsubs loope cmp ret jl xchg insb fimul loope out in mov loop cmc cmpsb ret rol inc movsl sbb mov xor mov dec std mov add add ret dec and rorl outsl inc cwtl (bad) ret fisttpl in and inc cmp rolb int cmp xor jecxz xlat xchg in jl sub jg jecxz lcall adc mov dec mov lods mov or mov xchg cmp jb push mov and xor enter pop mov sub pop cmpsb mov mov (bad) sbb xchg shrb popa lock jnp testb add add add pusha popf push xchg jno int jae in sub rclb orl xchg aaa test mov std rolb jbe pop ds mov pop mov dec jecxz or (bad) mov fucomp enterw arpl addr16 ret and test popf pop push (bad) lea aas push or push or sub xor stc pushl call imul push cs lods lcall bound add add add add loopne (bad) add std and push push add inc cld fwait movsl and in imul std and bound dec dec dec sbb aad sub sbb mov js mov lods mov fild pop rcr movsl int out dec mov inc lock xchg or orb inc ja sbb push (bad) mov mov pop xchg add bound stos lds mov repz xor xor xchg adc inc and xchg ret add sub jne outsl xchg mov jae shlb rcrb add jb or test xchg leave (bad) pop sub rorb into pusha push xor jmp rorl rorb inc add add inc test rorl dec aas movsl or xor mov mov ret js int sub adc adc aas mov sbb xchg mov or flds mov push add add add and flds pop xor sahf aad cmp jmp cmp cmp stos roll ds or es insl mov mov divb push sub and or mov mov cltd (bad) xor lds std inc pop mov mov popf dec hlt sub mov inc lds test mov mov sub fstpl inc aas push xchg sub mov add add add add into mov call mov jo fwait mov mov aam pushf adc and pop test in xchg dec data16 mov fldl xchg dec popf aad dec (bad) (bad) cwtl adc adc jp jb mov xor xor test pop stc xor sbb sbb jbe xor sub adc loope (bad) and jmp aas je cwtl jns std adc (bad) jnp test cmp add add add shrl xchg rol mov mov popa push (bad) js outsb adc (bad) jg jbe repnz mov cltd xchg add (bad) fnstenv xchg pusha cmp and in das clc pop xor or jg mov sbb daa dec imul lret cs xor ret lret (bad) psllq lods icebp (bad) mov sti decl out les add pop or push jmp add add add add add push push adc (bad) xor ja pushf (bad) or xchg and pop clc lea in xchg lret aas mov test dec pop repz push jbe xchg or xor outsl sti popf mov jecxz (bad) ss push fs sti int3 fs jno pop push cwtl arpl mov clc mov scas or mov add pop jge xor imulb lcall outsb mov jno or inc xchg in push add add divl mov or pop add lods mov mov jne (bad) and int3 sbb mov std xchg mov popa dec ljmp rcrl xchg xor aas movb test imul pop or and mov in inc dec or test cwtl cmp pushf jae push and leave ljmp imul into dec lcall sbb daa notb xchg (bad) (bad) xchg call push add add add (bad) xor lcall adc pop xor clc icebp push (bad) push imul or insb xor aas mov lcall xchg mov (bad) fildll pusha lods ljmp xchg imul pop jle jl icebp sbbb jb test sub jmp (bad) xor jg icebp dec jno out enter mov cmpsl push movsb insl pop cmpsb or adc xchg (bad) addr16 loope jecxz adc mov add add add dec inc adc jmp sub jae notl xchg cltd dec outsl add out inc fcoml push std jmp sbb sbb fldcw call push inc nop sbb repnz add outsb add pop (bad) outsl inc mov jp pop popa sub mov push cmp fbld inc bound and jle sbb jne das or cwtl inc add sub push or add add add or mov jns adc das adc jecxz ljmp add insb (bad) das and (bad) push cmp stos fnsave sbbl insl subb enter iret test mov cmp lahf cmp jne pop sbb push adc sub loop and in xchg jae cmp loop fildl adc out movsb and out mov loope jmp mov cmc stc std mov add add pop ss and inc lret jecxz,pn es cli jb sar mov into insb or mov mov test adc pop ss pop jno lret loopne xor (bad) jmp test cmp in stc pop or jae in xchg mov scas sbb stos push inc sti cmp sbb or pop outsl test xor mov sbb divps sub jne sub es push push iret sbb push in (bad) lcall add add add xor enter xchg scas shlb pop adc out lods push jae lret lods call ljmp push xor pop cmp (bad) mov outsb sbb sub push mov imul fwait aam lea daa das lea scas mov leave adc jl push or addr16 xchg adc dec sbb dec mov mov or inc jle scas mov (bad) lds scas imul mov pop pop add mov xor sub adc (bad) push xchg pop fucomp mov pop sbb xchg sbb dec test sbb sub scas loop pop cmpsl les sub or int3 mov push fdivs dec aaa pushf pxor out or sub ljmp mov shr or push aaa fnsave mov dec mov push daa cs imul xchg pop popf jnp,pt movsl pop pop ljmp popa scas addr16 cmp and xchg adc pop mov add add add jmp sahf frstor pop sub jmp cwtl addr16 iret adc arpl (bad) int je movsl pop mov cmp ss xchg cpuid mov push cmpsl cmp push inc xor mov fstl insl inc in outsb movsb orl (bad) cmp push mov (bad) arpl or pusha cmp popa sub ss cmpsb pop in aad jo imul push outsl pop mov xlat jg mov ret rcrl fiaddl add add add cmc mov mov add shll in pop fnstcw fwait mov ds adc rcrb mov mov pop (bad) mov cmc roll jp fsubp test add push push xchg cmp mov sbb sub js cli faddp push xor pop ret pop cwtl mov mov call xor cmp sub test out fldt lock lock fdivr lret ss pop pop (bad) or or push dec rcrb pushf mov enter add inc cmpsb push test push flds and cld aas or sti (bad) inc (bad) loopne push push mov fs mov push push add popf movsl cmp loop and mov stc and cmp inc sbb inc jl push fdivl and xchg sti and add add fistpll dec sub mov xchg in sbb jmp pop lret sbb push and jecxz and add mov jo scas inc dec ja dec (bad) jnp fisubr int3 cli xchg jmp xchg ljmp inc leave push inc in negl test push fsubrs loop movsl sbb pop xchg mov fidivr dec push es push mov and mov mov psrad inc jle (bad) mov xor fildl add fcmovnbe lret jle std dec imul and stos jae imul or jge mov and in xchg gs and or test rcrb xor mov xchg mov pop in orb in inc movsl cmp nop rcll mov in (bad) pop pop push lods cltd lret pop movsb add (bad) pop add xor (bad) cmp lock adc mov add sub popf mov jne xchg ljmp push sti jbe xor mov add add add pslld (bad) fimul push jnp pop pusha fs scas loope and aaa cmpsb loope inc sbbl mov xchg sbb aas (bad) (bad) sarb xchg jo or lcall push sbbb jae sti cmc dec fidivl add shrl scas push and and mov fistp pop pushf out lds (bad) mov mov aas jmp rolb ss punpckhwd lahf dec insb (bad) icebp punpckhbw push aaa add push sub jp insb push subl mov mov out xchg inc cltd leave setae insb xor fisubl loopne xadd push ret cmpb rcrb and adc iret mov adc adc das rorb arpl inc xchg push les mov jo (bad) sbb js fistp ret (bad) test ja add shlb jnp lods fwait xor push enter inc mov fisubrl mov or add add add or repnz push std ss (bad) push cmpsl ror ds lcall movsl stc xchg mov test pop and xor test fwait int3 xchg std push inc jp mov cmp mov xchg pop mov daa or jb sbb xchg cmp jp cli mov and lds pop pop in enter jle ret adc mov jb das cmpsb mov test xor and orl add add mov sub into fsts arpl add dec iret pop in xchg loopne inc jmp imul lahf cmp dec (bad) repnz imul dec cmpsl shlb addr16 cli and jge adc sar adc pop pop in stos lock xor add xchg dec mov andb and daa mov mov addr16 test or and loope movsb pop lret in xor add int3 push mov les fimull add add add add inc jge xchg movsl and pop push cltd push mov in jge lret push dec mov pushl jne inc jo mov inc scas insl ss cmp movsb (bad) int ret jne xor push xchg sbb adc shrl sub and cmp nop into lods pop xchg lcall icebp mov sbb sub cmp jecxz sti pop xchg dec repnz push push int3 ljmp jp add add add add cmp sbbl mov jbe lods inc pop sbb cmpsl aad arpl lds xchg aad adc sti jp jmp mov cmpsb subl sub sarl sbb lods sub mov dec outsb xchg mov dec leave mov dec inc sti add pusha xchg cli dec lods add jg pop xlat into add jo sub lods aad int3 inc dec movsl repz push or cmp add fdivs add add add add mov push mov arpl repz mov mov cld cmp sub push hlt bswap shrl lds loop fnstsw pop sub inc mov mov out cltd dec mov sbb jp jae and sbb push retw insl mov sarb es stos lods and mov jecxz mov iret sub gs ja lea mov jge adc das in jb rcrb push jno add add pop out cli test scas add sub ljmpw out aam dec insl pop pop insl cmp clc add cli std ljmp jnp loopne int3 or jp addl ss jae mov mov push loope mov arpl enter sbb aas dec or or xor repnz out sub addr16 and dec cmp xchg je cli jo shrl (bad) fsubl pop dec dec pushf add fwait mov add push jo mov (bad) cmpsb lock ss jle ffree test adc jg ret push loop fidivrl cmp mov xchg (bad) cmpsb inc (bad) loope xchg inc pop movsb fdivp cmp pop pop xor cmp das pxor adc aad jns addr16 cmp sbb push push sub subb mov loope push xchg incb popaw and cmpsl xor sub dec dec push jmp jno,pn test add add add lds cltd fistpl mulb adc test repz mov mov push adc jle subl push lods lods out cmc insb cli out (bad) mov xchg nop in mov adc jno add sbb lret outsl jne sbb loop cmc fmull inc dec sahf in push sub mov cmp insl rclb or push std dec pop cld xbegin mov sub jmp sub add add mov mov xlat jbe mov subl pop mov je fstp pop fsubr lds sub xchg mov stos stc add testl pop test adc data16 aad aad inc mov push sbb jb shll lods sub cmpsb dec push iret mov cwtl dec push jbe fstpl pushf cmpsb add xor test cmp sub xchg xor and xchg cmpsl clc dec aas negl into xor add add add fsubr roll test pop inc mov add xchg xor test mov push cmp mov pop scas mov nop cmp dec ss pop mov add xchg cmpsb fs pop mov mov cmp std je xor jmp js pop aam aad dec and pop xlat sub add inc hlt scas movhps test mov mov mov and dec xchg rolb add add xor inc inc insb lods pushl sbb sub mov xchg ret push (bad) scas adc mov mov imul and pop xlat sti popa xchg xchg imul dec (bad) push aam add in sub sub dec push add int3 addr16 cltd call mov push and dec lods jmp xor mov enter inc stos push mov sbb add jmp xor pop push or pop cmc mov push icebp pop cltd leave jmp stos out adc movsl mov roll outsl loope mov sbb scas lret (bad) and xor pop and xchg outsl inc sahf jle and lret aad xor dec dec in xchg adc mov mov mov cmpsb fldt sarb inc out ss mov push cmp push add add add lcall loop loopne xchg fs push dec xor mov int3 and dec sub mov leave adc cli movsl pop div daa push mov push das adc push push test (bad) cmc and xchg and aad test popf jg and add ljmp lret pop jnp arpl xor sub fiadd xorl pop push push lea push ljmp add add sub fcomp jp lock jp pop inc mov daa pusha rorl push mov test push cmp jae out pop xor out mov sbb pop xor rcll mov es repz sbb test arpl pop jge jae pop pop lea xor rcl lods nop mov ja nop xchg int and inc out sbb add lock in clc cmp dec xchg xor add adc mov cmpsb sub sti imul add (bad) mov mov (bad) fwait out mov test mov test sarb pop cmp fcompl xor loopne pop je or out mov jne (bad) adc or pop push xchg ljmp js push xor das or clc lcall addr16 mull cmp lcall bound adc sarl add add add mov dec std cmpsl addr16 dec loope inc je imul adc int3 mov push loop dec popa sti bswap pop push sub jg cmp mov xchg aam fsubp jno in xchg adc cmp pop xor xor pop push (bad) xor push push loop pushf into lods push test cmpsl jae and lret paddd xchg je adc mov mov sub add add add mov ds (bad) icebp (bad) xchg pop rol movsb mov insb bound push xchg test inc insb xchg sub nop xchg push add mov (bad) int pop sub xchg sahf out lock jb or pop fsubrl push adc (bad) cmp sbb cli mov pop dec mov rorl add sub imul lock pop cmc pop sub dec mov xchg cmc out in xchg testb (bad) fldenv aas xor jp mov add add add cmp cld mov (bad) push stc movsb nop sbb ljmp sbb jp push mov imul jp fldcw jo daa add jecxz push out xchg xchg mov xchg xchg pop jle data16 mov add out popa push push cmp jo mov jg add into pop div shlb fisubrl pushf sbb idivb adc pop lods mov pushf inc int3 pop sarb fidivl nop sbb mov add add add and mov popa cmp sub xor jne cmp mov pop jge pop dec add jle fidivl sub test xor (bad) icebp inc lret shrl addr16 jl pop mov (bad) sti (bad) sbb or sti roll stos mov adc xchg iret fwait (bad) dec and pushf mov jno mov ficomp jae pop int3 sub add mov cld shl mov fnstenv das mov fcoms scas pop sbb fnstsw fldl add add add lcall imul mov xchg inc sahf push mov addr16 sbb xor push xor cmpsl (bad) or mov cmp or mov and lret jecxz push pop test lods mov jmp into int pop pop sbb and and (bad) adc mov pop jae lods (bad) js and js test idiv pushl ja push iret push cmpl add add add scas xchg mov pop mov bound iret out mov fstpt and pop loop movsl out andb das repz pop jl add cmc mov in fwait rorl out cli movsl push (bad) mov pop fsubrl adc popa jge lret xlat jmp mov fisubrl add fiaddl push test dec std xlat push adc es sub cmp push popf xor in incb add add add jno imul cmp push sub mov fadd outsb popl and in lcall pop std mov adc addl out lcall cmp sub adc ror lea pushf test imul test mov inc imul dec insb lret and ret (bad) enter pop stc lods dec push rol adc aam mov iret jo add xchg cmpsl jl cmp mov mov xlat cmp mov xchg fidivl into addr16 pusha loop inc push jb divb fld sbbl sub push xor invd or loope add call stos jns dec pushf lods js fldt fsubrl aam icebp jge test mull stc dec icebp notl xchg sbb daa leave sbb and cmc int les scas rorb and jle addr16 xor mov xchg sub aam call insl loop in fidivl inc cs scas or xor jle out pop lcall mov repz test add adc mov sbb pop (bad) ljmp add inc mov lock mov fidivr lods push imul imul movsb std rcll ljmp lods (bad) jae push and mov mov cmp cmp add add add mov add hlt aam (bad) adc mov (bad) sub pushf fmul sub lea inc test jp sbb mov sbb mov mov iret mov aad jbe sub notb es lret jmp pop inc or pop (bad) sub rcll movsb loopne insb clc icebp sti cmp iret or push pop insl pop or mov xlat das leave jne int3 jne cli sub sahf jbe mov xor push in icebp xchg add and push and test add loope and and fild push xor push adc cld rorl fisubr or xor out sbb push adc fstl push xor ffree adc push push mov mov scas test popf aad dec test rcl (bad) lds loope mov std rolb push mov aad push lock (bad) into sbb loope mov jno mov repz mov jne push adc inc cmp jecxz fcompl mov pushf inc lods sbb inc (bad) lock push adc fnstcw inc fwait out les repz push inc insl out sub jns push xchg es add dec out adc mov cmc in pushf cmp sub scas fsubrs aas scas cltd sbb mov test dec cli data16 xor add add out add add add and inc lahf jmp test push nop outsb (bad) jne cmp push jp or sub je fstpl dec or cmp aaa inc sub push xchg ds pop pop inc fwait shrl outsb cmpsl inc mov lea enter push frstor pop inc inc movsb xchg sub xchg mov fiadd (bad) mov push push ljmp fiadd cmc jno enter sbb xchg enter add add add add fistl lods xchg ja sub dec jbe fstl sbb aas ds mov dec pop dec inc jnp inc lods pop pop sti mov dec adc test mov adc cmc and fisub ds imul jecxz mov in outsl pusha xor cwtl push adc fadds inc or cmp or jp or adc fbld in data16 imul (bad) lock loop jle (bad) lahf mov addl add sbb or in loop pop mov pop mov shlb push insl xor mov mov in xor (bad) sti notl xor dec pop sub loopne (bad) mov pushf and jp dec testb dec ja and sbb in fsub lock fisub aas add xchg jae add jp repz fwait cld jnp (bad) in fidivl xor movsl and push pop mov popa xchg imul add dec inc mov dec and int3 loope push mov (bad) or push pop (bad) shr stos jb ja or iret pop ret mov out (bad) xchg jno cld rcl rclb (bad) xor icebp addr16 out mov lret fucomp or rolb xchg xor je or jg mov sub lock ja jb loope mov adc push outsb les add inc mov pop sub add add add add jl mov inc repz (bad) jnp pop mov inc popf or into mov push pusha xorb push fwait lahf mov sub arpl or cmc lcall roll gs loop push cld sbb (bad) push xchg movsl jae dec aas adc and (bad) std sub mov cmpsb adc adc ficoml pop dec inc loope adc outsb lcall pop mov loop jmp jle andl xchg repnz sbb xchg add add add add pop pop enter inc aam insb inc pop sub jg ret add mov mov push fstps (bad) cmp daa jae pop sbbl xor test movsl dec mov xchg jb dec lret into cltd bound pushf imul xchg xchg dec outsb das test cmpsl hlt les lods pusha inc repz popa push mov jl push int3 add sub pop ss add sti je pop pushf and add add jecxz xchg outsl dec and lret xor inc add or imul daa inc jnp (bad) pop shll or mov pusha fmull iret (bad) (bad) out popa xchg dec mov idivb inc pusha sti test pusha jbe movsl mov popa ljmp inc mov mov add xchg in mov pop jp dec or sbb aam pop sahf jno mov es test scas pop int adc gs dec subb outsb jmp add add int3 divb (bad) into cmpl lcall pop inc rcrl ret dec shrl push ljmp ror sub lock xchg pop push ds xchg dec movsb jae adc push cwtl cltd insb jmp std add sub in push push xor pop stos dec dec mov fildl cs push psubd mov add push and xor ret pop sbb pop or adc sbb fsubl add add add test lods loopne test xlat push adc jno (bad) (bad) and ljmp mov sbb out pop sub out gs push mov or push sti or add cmpsb mov js (bad) xor loopne (bad) out dec mov cs repz jne leave insl xor push pop add mov jno jecxz push test leave cmpsb cmpsl jmp movsb enter gs icebp xchg lods xchg (bad) xor add add add add inc mov (bad) repz stos sub mov sub pop lahf inc call sti xchg mov inc cltd cs sti js adc imul pop imul cmc xor aaa and cs in fwait mov popf add aam jmp mov mov ret jge daa hlt lahf mov fsts aaa xchg jp rcrl mov iret jge add scas mov xchg jmp push cmp mov mov pop push in mov add add add add xor adc in jmp sub into sbb insl mov mov cmp jle jg adc or mov in popf ss or mov (bad) cwtl int3 arpl inc and dec leave ss fdivrs push aad pop cmp lock icebp les xor xlat fcmovb add ljmp cld inc jo mov cmp sbb sub mov push imul add testl pop test or push mov mov sub insl je inc and je (bad) cmp mov push push inc and mov es dec fstpl cmpsl mov cmc xor cmpl jo stc leave add repnz int push adc (bad) ljmp jnp ja jnp jae cmpsl mov loop push (bad) cli mov or mov and push mov sbb pop aas loope lds int3 cltd fwait in xchg add add add add inc ret or dec dec fistpll mov cmpl ds outsb pop mov neg jmp or jb xchg adc inc jg cmpsb fstpl mov repz stos push jmp je push xchg pop pop js or push cli rol inc push jne pop icebp (bad) cmp adc nop (bad) or sub cmp pusha adc push in jb mov mov shrl pop push or sub fadds repnz and sbb lods out dec insb fcompl sbb lods or or push shrb leave and (bad) fistl jmp jl ds adc push xor mov jmp xchg fcomi xchg ds push pop (bad) mov push push jl loope xchg sahf (bad) out adc cmc shrl cmp adc dec lds xor lret leave adc dec fdivr jle aam xor in mov imul xchg add cli sub fdivrs repz push repz push std test sahf inc xchg into add les fldcw cs add adc arpl dec ficomp sbb and pushf or xchg and add cmp mov add scas or aam pop add jbe adc clc inc (bad) fstpt push inc in push imulb xor mov fcoml xor inc adc or clc add or (bad) mov mov ret nop add add add push lds inc enter lds or add decb mov fiadd fadd push mov adc xor xor cld sub int out out (bad) xor or push adc repnz sub shll lahf push gs sub xchg or add (bad) add jmp imul fwait test insb call loop insb and lds xchg faddl pusha xchg add jmp xchg add add add add inc xor sbb lods add insb mov mov ds jb pop fistl mov dec outsb rcrl shr out push inc les in inc stos lret out orb fidiv (bad) icebp xchg jnp,pt mov xchg cwtl icebp sbb sub push adc sbb inc lods sbbl pop xor inc sti cmp repnz jns lret xchg lcall cli movsl jp jl (bad) cmp fwait imul sbb pop (bad) add add add mov scas ja mov lret je jo (bad) shlb or cmpsb outsb pop mov daa pushf xchg cmp ja (bad) xchg notl popf cmc addr16 cmpsb or iret insl outsl mov push xor testl fldcw mov mov jge out jne mov insb xor repz not mov bound push (bad) stc out iret fisttpl imul lahf jle mov xchg and or jb add add add jmp or xlat sbb and lock imul cmp push add popa imul inc out mov fbld xchg pop add (bad) call sub cmp mov subl stc popa xchg mov fdivs xor fnstcw (bad) es xlat pop std jnp lds xchg push je outsl jo pop mov mov jns push loop mov and dec test jo xchg add add add sub adc in sbb aaa jae pop jns div das flds (bad) std loope rorb fmull in int3 and inc jl in push aaa dec mov cwtl jecxz pop in mov dec mov push jmp mov pop lods or lea cs outsb xor pop aaa test push jne dec (bad) jl mov cwtl or cwtl loopew mov pusha lcall cs lea aam fsts data16 add add add lret sbb cmpsb cmp outsl stos jecxz push add mov cwtl xchg das fcmovnu jp xor cmp add dec std push cmp add sbb inc adc std mov rcrb mov popa mov rorb int (bad) arpl pop rolb mov outsb mov (bad) iret loopnew test data16 lds sub xchg js in pop jp jo and (bad) outsl dec call xor jns push push sahf and add add mov cmp imul pushf loopne ret pop sub jne adc into sbb lds fldl jbe or mov fld mov dec lcall iret adc je (bad) sbb push repnz sbb sbb sbb xchg cmp mov int3 sbb mov dec (bad) pusha ror pushf pushf pop push xor add mov pop mov daa in push push cli push xor jae lahf cwtl les add add add push mov sub stc pop popf lret add sbbl aad popa add or or sbb arpl sbbb (bad) addr16 mov pop sub ss in flds inc fwait cmp fprem1 test aas inc (bad) inc fwait or adc ljmp scas cmp cli jns stos sub les push push scas adc int3 push cld adc movsb loope gs xor add add add icebp loop inc sub jecxz (bad) je push shll pop (bad) mov push pop add and cli aad negl int dec dec repz sti and insl notl and mov pop inc inc pop adc inc pushf push inc aas cli or je daa (bad) sbb pop dec jl add mov mov pusha jge push inc rep (bad) out add mov mov inc sbb stos and leave pop pop sub nop push and xchg out lock mov loop sub je dec imul rorb leave jle xor out dec mov push outsl fstl cmpsl fnstcw jnp cwtl insb cmpsb sbb cmc fdivrl mov xchg sbb adc gs jns adc mov xchg cmp xchg imull outsl mov std jno,pn cmp fs outsb pusha adc or cmp jbe test jnp xchg xor rolb lret mov daa sbb add add cmp bound sub inc add xchg jl xor inc outsb add in iret inc pop dec mov adc mov xchg lods sbb (bad) mull cmp lret bnd sub repnz popa xor add iret insl sub and mov fidivrl xchg sbb nop dec out sub out lret clc (bad) xchg int in cs popl and pop push push inc (bad) push mov add mov mov fdivrl add add bound pop js push (bad) adcb andl xchg fisubr (bad) cmc (bad) fcoml shrb test mul fwait push pop mov or dec mov rorl mov lds (bad) pop cmp cmpsl jne mov lea sahf pop sbb mov xor popf sbb dec lods icebp pop mov jmp mov stos pop jecxz (bad) mov dec enter cmpsb mov hlt or xlat add std cld int fs sub fildl jne add mov mov addb out loope stos lods adc std scas cmp ds jnp fst insl mov stc xchg adc xor push jnp push jae or clc popf enter aas sbb (bad) mull clc xor movsl fsubrs bound xchg mov add push push stc mull lds xor roll or scas mov fisubr mov pop cltd mov pusha inc xchg or aam rorl es mov fildl fidivrl rolb leave add add add sbb jbe outsl rcrb jle adc imul imul mov js xlat mov stos int aas rclb fs int push mov popf fs mov ja aaa inc push sbb in out rcrl (bad) push lahf push aas jg scas xchg repnz add clc in sub sub and repz addl xor mov cmp adc xchg outsb (bad) lahf jge fwait xchg mov (bad) test jge ds std ret add add add dec pop in fwait cmpsb xchg jno pop sub rorb hlt sbb cmp sbb jmp mov jb inc cltd and push push aas jbe pop js loopne rcrl jno pop jne mov push mov xor stos in jmp (bad) sbb cld out fstps insl inc mov aas sti pop pop sub (bad) in sbb jl,pn aas in jle aad sbb das xor iret push add add fimul mov (bad) lock fisubr data16 xchg or cmpl jne cwtl (bad) cwtl das cmp orl add and insl pop push js xor mov sti ret lods xchg mov mov fidiv jp and lahf arpl adc mov popf aam cltd lret (bad) xlat push xchg movsl mov xor lahf das jmp xchg xchg dec jns xor jnp cs ret f2xm1 adc nop int push xchg test call add add add das jge mov mov shrl fidivrl mov int3 pusha cmp cmp aaa sbb (bad) je mov outsl adc (bad) repnz lahf imul imul add push jmp lea adc popl dec dec inc xor sbb stos es orl and push mov mov sub repnz cmpsb mov mov inc cmp lods jb jns mov cmp icebp lds pop aad and ficoml sub xor sbb push roll aad and iret add cmp inc pop cmp fstpl std mov leave and push dec aaa mov inc stos out movsb out es loope mov xor lods push sti enterw mov les and dec adc enter pop jle iret insl or pop add negl jge adc repz add add into xchg mov jo sub ret push fistp xchg or (bad) mov cmp pop (bad) and mov js push sub add (bad) fstpt aad imul (bad) or push testl jg ljmp and cmpl mov adc (bad) repz ljmp aam cmp rorl dec sti jne xor push shrl mov outsl pop pop data16 pop xor addr16 sbbl lahf fsub les push pop and jmp scas mov popf sbb aaa cld test xor mov ret rol loopne xchg xchg ret push cld loope movsb push or repz (bad) (bad) movsl mov (bad) repnz xor ret and dec ds repz xor jne jl sbb scas mov int pop test test mov inc scas addl test xor add xor in xchg aam sub lods and cmp cmpsl dec or dec mov mov adc aas add stos adc jns,pn mov lea mov and scas dec cmc xor popa xchg data16 andl adcl adcb push add mov cwtl mov lahf mov das push ret mov jge sti jb push jb mov mov push sbb xchg fucomp cmpsb add add add add add xlat daa adc rcrb mov mov xchg loopne xchg xchg cmpsl (bad) (bad) push movsl mov fisubl cmp inc fs int3 inc sysret mov jp data16 (bad) cli or pop lds js into inc shrl add or cmpsb hlt scas jns pop jge and out loopne cmp mov into sub clc mov clc push mov ret (bad) sbb neg mov sbb mov add add or arpl mov divl push loopne inc push jl pop and movd inc test loope cli fisttp mov pop dec mov inc mov scas mov cld add fst sbb shlb fidiv rorb mov mov jl fldl jae stc imul mov xchg ds jae xor inc mulb lds out (bad) incb ficoml and mov mov add add add add daa xchg jno pop or imul or mov and jne and sub outsl mov ret and xchg jmp pop hlt int mov scas push out mov nop popa jno popf adc fwait cltd jae sahf std popf sbb xchg aaa ljmp pop cmp stos int add inc lods in iret out fldl sub mov call mov stos dec jmp jp mov inc and pop daa mov xchg int add add in sub loop fstl inc or scas xlat mov jae pushf sbb aad sub jle xchg test in test inc rolb pop sahf out jo in push xchg (bad) insl call ljmp fldz fwait lahf movsl xor inc movsl push or sub mov cmp sub popf mov jecxz mov pop dec arpl addr16 lods cmp sub cmpsb lahf fadd insb xchg mov nop mov jmp insb ret add add (bad) fsubl (bad) cmp jns dec sbb mov mov shr aad xchg mov inc sub popf xor in xchg mov into jnp out dec popf daa and int inc insb loop fisubrl fidivr movsl inc xchg adc jle jl sbb add pusha xor inc data16 xor fstps jp iret mov mov sahf push pop mov out pop mov xor fstp ret mov cli (bad) mov add add add les xchg ljmp jb cmpsb jno cmp lods int3 jae mov push pop or addb stc lds sub dec int adc sub xor push fidivrl pop pop insb add ja xchg stc jmp adc (bad) sbb call (bad) hlt mov ja sbb jecxz and xor ja pop push into jns fwait test jbe pop stos ds fwait cmpsb test cmc je idivl inc push xchg inc je add add add add xchg push or rcl mov xchg jne push or orb sub fildll dec inc arpl adc adc add ret aaa sbb je pop es fmul in xchg lcall pusha lret inc mov mov sbb mov fnsave sub push lea pop incl xchg mov cmp movsl cmp jns fcoml jl pop cmp mov inc pop les fsubs dec add add add aaa xor cmp int3 mov loop (bad) adc outsl call (bad) idiv subb (bad) (bad) movsb mov and (bad) loopne lahf scas test inc fiadd mov cwtl loopne mov mov push xor fimull adc push mov mov int bound or cwtl mov add sbb (bad) xchg icebp lcall fwait (bad) and call and cmc out sahf cmp outsl iret add cmp in sarb mov lds sub push add (bad) loope popf mov in ljmp lods int3 lock (bad) nop or push cmp inc pop addr16 adc adc ret add jbe out push cld bound mov leave stc mov stos add lret jnp out inc adc lret fidivr (bad) test xor not fist or dec push push mov repz gs or flds add add add add std ja stc in (bad) mov mov dec mov sbb sub (bad) enter imulb arpl aas leave xor into rolb xor rorb xor push ljmp jge jl jb sbb or jle ds xor or dec iret jae ror outsl dec inc aam js mov push cmp mov lods inc cwtl push gs dec push ljmp stos mov push ljmp add fcoms (bad) cmp in xchg scas jo pop mov xlat push call sub adc popf pop (bad) jb xchg push mov lret imul jle or push and (bad) mov subb dec sbb mov inc and jmp mov jg lods pop dec stc cmp lcall xlat pop mov aad ficomp cld pop mov mov enter leave bound mov sbb add add int3 (bad) lea dec dec jb enter scas jb cmp scas imulb cmp dec jle dec punpcklwd jns scas push or mov push sahf scas cmp xchg std mov out add dec in (bad) cmp dec shrl adcl cmp mov sub ds lea adc js mov pop rcrb xchg xchg mov sbb mov cmpsl mov cs or aam into adc lods push test add add add fwait gs rorl test pushf ljmp or sbb pop mov fsub jle test jb pop idivb jnp jbe jbe in sub ja ret or mov stos mov test ja or fnstsw inc loope xchg aaa in xchg cwtl jo or mov mov xchg (bad) jle and sar fstl dec mov dec dec push fld1 mov push dec jns mull pop ss divb sbb mov mov (bad) loop (bad) testl pop sub mov cmp std out std xchg cmp add enter cmp pop mov inc ljmp sbb (bad) pusha fisubr (bad) mov sbb lret fcoml testl cld fistpl pushf inc cmp pop or aas push loopne inc adc lods adc xor mov ret jae adc or xchg pop loopne cmpsb ret jmp add add add add pop lret mov repz mov pop cmp in cmc das leave sbbl xchg out pop fistp rolb loope ja dec lds xor mov bound pop push out (bad) (bad) sbbl jmp jne jmp leave push adcl push xor jnp bnd mul repz push mov popa nop jg test mov loopne push add leave pop jmp std or mov mov mov xchg cltd call out sti data16 cwtl mov mov icebp cmp cltd inc aad jbe lods push mov sbb gs sub ja cmp lds mov mov fcmovne jge insl nop call jg mov repnz out push jae clc jno mov fs sub mov xrelease scas testl outsb (bad) fdivrl jmp jl inc repnz repnz add add add out mov aad lea and hlt pop or fmuls test es mov inc mov repnz aaa stos mov movsb sub repz ljmp xchg pop or push add aad adc ja dec sub leave adc fisub adc sbb cltd cmpsb mov xor loope in loopne leave inc jns mov clc jb aad adc add xchg and shll push icebp mov add add add jl mov fcomi mov lahf aad jb xchg stos cmc test rcll and sub loopne jecxz in sti adc cmp hlt mov push ret jnp xchg loop inc sub xchg test popf lods lea or xchg add xchg or inc pop mov ljmp icebp in lock mov inc sub xor cld xchg adc push adc jb arpl adc cmp sti test sbb mov mov (bad) loope inc fcomps mov fistpl imull icebp rcl push sub or sbb scas sbbl fadd mov or mov inc cmp sbb fwait or inc insl mov cmp push or addr16 nop cmp pop stc xor shll fdivrp loope adc jbe inc sub mov push xor test mov jns loop mov decb popa pushl add add add rol push jg xor aad push xchg jbe xchg mov xlat push jg popf (bad) pusha cmpsb data16 mov sub mov xchg push add xchg sti outsb imul dec push sbb mov mov or push sbb adc mov or mov mov push mov cli and js cmpsl jmp push repz lods add jmp cmp aad and sub xchg mov aas add add add into sbb sbb lcall aam mov insl lods jge sti adc cwtl fsub pop daa sbb test mov icebp jmp and sbb ror call ljmp lods ss in lods mov das sub rcll out lcall shr lret mov cld scas xor rclb (bad) mov cmp stos iret add xchg inc faddl jbe fldt scas cmp jmp add add add add popa inc clc jnp cs mov mov adc ficoml fistl jp (bad) mov jns repnz sbb js lret das out sbb es sti fwait sbb aam (bad) adc jg inc xchg mov mov gs jmp mov (bad) xor sbb arpl leave das aaa pop mov jae dec aas jae push ds int3 and stos das jmp add xor or mov mov fstl sbb push or sahf and ss loop outsl jbe movsb pop out sub pusha sub and pop outsl and mov inc xchg pop mov lock in fstpt pusha popf roll (bad) mov lcall (bad) mov mov ret stos test or fdivrl fs lods pop in push repnz pcmpeqw inc sub inc jo pop jecxz pop jbe test mov and popa into inc imul mov jmp jns in mov jg push fcoms sbb mov sti jno inc push mov mov or jnp sub adc fiadd es add mov aad pop cmc pop rclb jle negb mov and inc fs mov repnz daa jne outsl in adc pop fdivrl lret sbb inc cld inc mov sub adc dec adc aad mov lret xor xor (bad) out or sub fwait shrb icebp out cmp (bad) jne pop cltd cwtl aam add mov ja divl sub aad add lahf mov (bad) into mov aam or aad popf adcb push inc and sub push mov xchg sar mov daa mov adc xor jns and scas loop iret mov inc add add add (bad) ss movsl xchg hlt pusha clc jns jp mov outsl add dec xor nop into jle sbb pop das lahf push fsubr mov lods mov mov inc mov add mov push xchg out lods cmpl jno pop adc sub lret inc (bad) fwait inc xlat mov mov std and xchg in mov fdiv and jp pop mov leave pop mov adc inc mov pop jle dec add add add add sbb mov jmp inc jge push rcrl dec inc inc inc bound push das pop daa loopne ljmp imulb push out test cmp adc aaa movsl xchg popf loopne mov xchg hlt add aaa and push mov test xchg and xchg mov into rolb or gs inc dec and aad sub pop das loopne,pn mov pop adc sbb jl ss xor pop dec inc mov mov add add push (bad) or mov cwtl pop testl testb daa pop (bad) jno test lret gs lods mov jns add xor leave cwtl leave rcll xor mov pop sbb aaa xchg fprem1 (bad) fiadd loopne cmp insb push cmc in and jae daa add fldcw ja aam fistp jb loop and das mov out jb gs insb inc outsb adc sub lock and adc sbb ret sbb add add add or dec in fs xchg add push (bad) ja sub mov adc rorl jno pop icebp mov dec or jmp mov or loop xorl or mov dec pop in sbb sub shufps pop xor inc mov xchg icebp je jnp xchg add and xchg insl dec sbb lock outsl fldcw xor leave lods addr16 mov icebp cmc inc cmc mov adc jo add pop je mov es test jae mov mov inc push or dec jnp xor ja jo inc popf adc fistpl and or mov (bad) fnstsw (bad) pop ret mov movsb adc sbb cltd roll mov xchg cmpsl cmp aas insl and rorl adc lods dec jg jle,pt popa jb pop pop mov dec mov inc xor add jae adc or add add sbb imul nop cld jl inc mov inc rclb cli cmpsb add insl mov lods shlb or dec enter mov mov cmp dec outsb or shll add test loopne adc movsb jecxz std push jmp inc jp (bad) xchg cli cld arpl mov test insl add inc fmuls pop adc int3 pop sbb lods lcall sbb add jg aam ds out push outsb xor fldt sub jb xor in push mov mov pop (bad) call notb faddp xchg scas mov jecxz testl ret ja fidiv and adc (bad) mov idivl mov pusha cmpl sahf fwait loope mov mov add push mov loope push pop mov sbb mov (bad) fdiv stos cmp pushf mov int3 xor sahf cmp push cmp jbe and jne adc or push push mov pusha mov ja or test scas sti sub xor mov cmp std sub pop ss into test xor push push pop out enter push imul cld or pusha out cmp ja in xor cmpsb pop lret sbb jmp test mov test sbb cmc or push pusha mov bound inc add add add lods orb cltd push jo test add xor push dec jg jl mov (bad) pop test aas lock xchg pop lods test popa cli (bad) mov std pop add add and pop imul pop dec xchg in adc into jnp pop xor pop test (bad) jg jecxz push or popa xchg mov xchg ret adc cmp and jae out imul cmp loop out sbb xor add or mov imul (bad) mov sub mov sub movsb fs and sti fisubr gs dec sub sbb int popa pop daa add pop sbb pop dec cld pop ret mov xlat sub push sbb sti test pop xchg ficom and push xchg mov mov lcall inc jge bound cvtps2pi lea mov pusha mov jb mov inc push daa add add add stos (bad) pop xchg push iret (bad) xchg jb push sti mov out add mov jno dec testb mov cltd sbb xor dec adc scas inc mov adc jae shrl in mov test in dec mov pushf aaa inc sbb aad repnz xor ljmp shrl cld fs fwait jp loop pop push idivl pop das icebp sbb sub pusha xchg dec in xor xchg add add ljmp enter adc cmp ret inc and cltd or (bad) and xsaveopt dec (bad) or lods cmpsb jl gs out mov (bad) dec mov bound or or int3 mov or insl and push jecxz mulb and mov neg cmc sbb fldcw call insb test out xor sub xchg jbe movsl push je in ss add add fstpt and xlat mov mov div xchg pop out dec pop push dec (bad) repnz fimul cmp push (bad) mov andb jl xor push xor inc out daa jmp cltd pop fadds mov mov mov sbb jns loope add inc pusha flds sub mov lea es sbb outsl ficomp loopne and adc cmpsl or fstpt cmpsl inc popl add add add pop cmp cmp adcb mov loope dec inc test je sub pop pop imull insl xchg arpl pop cwtl pop movsb insl mov es jne pop das mov pop bound lcall adc aaa sbb and pop sbb hlt or adc adc arpl jge bound sarb lret push rorl jp jo push inc int3 pop or outsl dec inc hlt adc add add mov fcomp lods push xchg out scas in mov dec pop sub mov push inc cwtl sub pop adc bound jnp sbb int3 stos out lods lahf dec popa out negl sbb xlat sbb xor dec mov jbe sub bswap cmp lcall popa lods (bad) imul jge sbb les mov mov orl jle addr16 shll js push xchg jmp popa int add add into cmp fbld call adc inc push nop adc pushf xchg push ret jb mov (bad) out leave gs push stos rcl xchg xchg lcall mov jg or mov popf in cmp enter lds add aaa push dec fnstcw fbld (bad) jge insl dec imul or mov (bad) inc rclb arpl add jne inc push cmpsb add fdivl add add add push mov add sub das mov or sti std jg push push push jo fnstcw ret cli pop subl (bad) sbb add lret cli repnz and add adc aaa inc mov test movsb test pusha popf add inc dec lods fisttpll aaa add inc adc xor out xchg iret subl scas pop stos pop scas push xor imul mov mov mov fimul aam xchg test hlt pop cmp add add add jp fnsave xor jge js pop pusha add pop xor jbe aas mov mov dec outsb pop repnz adc inc (bad) sbb xor loopne rcll aas icebp and xchg clc das ja jg xor inc jg adc (bad) aad stos into int3 dec psadbw sbb fwait cs sbb cltd movsl repnz jg add jnp inc aaa jb push push jp xchg push int3 or jnp cmc movsb data16 js lock add add add inc push fwait mov cmp ficoml lock pop fs (bad) push out lahf sti fcoml jae xchg mov std scas inc fnstcw push call dec popf add out push adc jb inc mov push in cmp mov xlat out xchg sub xor (bad) or inc jmp xchg pushf xchg clc sbb mov iret nopl es dec loop dec inc in sti arpl sub jp lret or sahf roll add add add jbe fwait cli int inc xchg movswl mov test push push out cmp mov dec cmp add imul push cmpsb in adc fcoml in inc mov mov xchg xchg jbe xchg push xor jo mov lds jbe (bad) push frstor ds pop decl or cli mov adc mov mov ljmp fistl xchg les in pop push in xor pop (bad) out adc sbb jmp cmc in and out and (bad) lret sbb or scas out and push cmc icebp jl cmpsb mov xor cs (bad) idivb test mov push nop (bad) or xor add data16 ret sub leave dec sub xor in sti or inc cmp (bad) aam int imul mov jne test ss repnz add add add push (bad) ljmp jae lret movsl sub repnz or mov dec into xor mov addr16 and cmp scas icebp xchg aam nop push cmp push add loop fcomi cmpsl dec jle mov xchg mov jb pop fs xchg rcll xchg js repnz repz dec imul iret lock loopne mov and sahf xor (bad) xchg sub adc or xor dec dec inc cli jg lock add add add inc xchg loope and loop pop dec cmc incl test ja mov rolb out xor dec pop cmc mov cmpsl jecxz fcmovb jae xor loopne add (bad) or inc add fild xor iret mov cmp rcrb ret cmp inc sub adc fdivs pop mov (bad) enter jnp sar (bad) xor test lods pop mov add xchg xchg fldenv adc lret add add add add fs cmc lods xchg or sub idivb jb cmp pop lods jno in movl pop sub sbb imul jbe mov faddl mov flds xchg push cmp fcomi jo mov call pop (bad) roll pop mov pminub sub fidivr (bad) je and mov clc test mov add clc ds out imul dec adc push loope cmova mov fistpll add add add add pop jns je scas xchg lcall stos mov add sub jg cmpsb je cmp mov addr16 movsb cmp cmp xchg push jle xchg push inc push mov jne test add cmp idivl shr fldl iret inc add fdivs xor js pop mov sbb outsb into jb xchg push test xor dec adc jo dec cmp repnz adc jae add mov and mov jns mov pusha fucomip hlt out adc fstpl ljmp sub arpl mov pop and lret dec mov cmp sbb push mov ja loopne xchg xor sbb mov inc pop fnstcw push xchg cli int3 mov aad and push add adc xor xchg imul adc stc lcall jp outsb loope jmp push add (bad) push xor js outsb fisubl clc test dec imul arpl fsubl mov or add add in or sub loope inc or mov jns xchg or int3 test push dec stos outsb or push dec cli and loope sbb xor sahf test lds mov enter cmp jg sbb dec push adc mov outsl test add add add adc addr16 mov jmp jmp cli stc xchg dec push arpl stos icebp stos inc mov js repnz xchg cmpb imul lahf mov or inc or (bad) icebp negb cltd sub add cmp jmp jecxz leave mov imul push mov mov pop movsl mov jle ljmp dec cltd xor sahf xchg mov lods add cs call xor add add add add pop scas xor (bad) popa add xchg lods mov repz enter or movsl jb jnp cmp aad sahf sbb loope sbb xchg cmp enter and cmpsb pop inc out pop jp bound andl add sti xchg jecxz fistp outsb push gs pop jb mov or outsb mov sub mov mov in sbb imul adc icebp mov add add add push outsb pop xchg cmp ret xchg push imul mov fwait daa movsb jo insl aaa lret lahf sbb mov add sbb ret loope bound aas leave pusha adc lret jne insl jp aad xchg push outsb xchg fmulp lods int3 outsl cmp and mov push add sub xchg pop les xor cmp xor addr16 mov dec ret add add add add rcr sarl pop sub add aad pusha loop push pop mov (bad) test insb mov aas fisttpll mov fistpl out inc call mov xchg fwait jge or push and push xchg pop dec jp sbb jl test cwtl cmp sub idiv lret aad sarl or adc adc rcrb test jbe mov jl xor add in mov mov aas sub shrb xchg adc xor cmpsl pop inc jne cmc add xchg sub int jge bound sbb or jl jae icebp and pusha mov jb xchg mulb and fisttpl push add clc fisttpll and or cmp loop test cmp (bad) and push clc or jmp test lock leave aaa repz jne ret sub fildl cmovge xchg mov inc mov nop inc imul mov sbb into mov (bad) cwtl adc sub xlat cli and jnp leave push add xlat iret sub mov mov imul fistl ss xlat push mov (bad) dec addl pop sbb stos add and (bad) call cmp int3 dec inc and stos pushf xchg out mov lret mov xor in push (bad) xor pushf lods repz dec fdivl or pop outsb fidivl pop or xor divl lock adc push test inc pushf or jmp jmp inc jle ja hlt int3 dec sbb pop data16 ret inc jl out push fimul pop mov jno int3 add dec js leave and stos and and aam (bad) lret std push mov push scas mov lods cmp dec jns add mov push inc push je sub icebp mov adc mov cmp add add add push jge cltd (bad) lods cld cwtl adc nop sub inc outsl xchg xlat leave fldcw cmp pop cmp divb aad cmp sub in hlt xor cmp jp popf jo lock xchg jp negl sbb adc movsl cmpsb test cmc mov lret pusha scas stc mov sbbb adc out pop out add scas scas test dec add mov sub adc adc lea cmpsl push mov sbb pop jae pushf (bad) out cs add add add add popa outsb fnstcw jg sub and sbb sbb and pusha xor sub subl out cld lret inc push dec and mov sahf les mov into and (bad) lahf mov dec es and outsb lcall iret loope xor out sub xchg cs mov mov or mov or sbb out adc and fs sbb push sbb aaa jmp int3 (bad) aaa and add add add scas mov mov in gs sbb fsts stc mov inc outsl daa mov inc daa xchg js call push lods mov into fsts push fwait cmp mov iret lcall fmuls test pop frndint imul sbbl (bad) es dec dec sahf sub mov loopne pop int3 clc dec sub lds mov cmpsl mov mov cli mov xchg add add jb lahf inc add push mov xor aam xchg imull pop fs mov cld jno rorl into aas movsl adc addr16 insb lret in mov jmp stos adc andl aas mov gs psrad xchg in dec push mov adc int dec imul adc xchg mov mov insb mov test stc add scas pop popf shrb xor inc je mov outsb mov add add add add popf pop scas pop repnz cltd add sar cmp or or ret (bad) cmp jmp ret push hlt aam jno inc test out adc xor scas add sub jmp loope imul sub stc xor shlb (bad) outsb mov lcall repz xchg ficomp fwait jmp push leave scas mov mov call inc push jmp mov push and xor outsl add aas xchg jle and shlb add add add add cmc cmp test movsl cmpsl mov sahf jno (bad) cmpsl push add or stos mov rorb push dec sti adc clc ss addr16 mov mov ficomp leave mov sbb pop mov in icebp js adc (bad) mov xchg aas jecxz xor in lods and (bad) out in and mov or out add gs pop sub inc daa cli mov lock pop mov xor push xchg divl add add add call fsts pop shll ja cmc pushf rclb lock and sbb lock hlt popf and dec jg loope,pn and sti mov pop addr16 sbb xor outsl addb (bad) or loope mov dec mov inc inc int3 sbb movsb arpl add movsb dec xchg xor mov cmp sub js pusha mov outsb out push mov repnz mov mov add add add stos mov jbe clc aad (bad) jmp rcll enter fist int3 pop arpl icebp data16 add mov xchg out test int out xchg test or subl shll loopne add cld xchg jbe push ljmp (bad) in aas repz and cmp ret jg js leave inc push call inc fwait sub pop fistpll cmp add add add add xorl sbb dec add js shrd mov out (bad) pushf jno nop pop inc aaa rcr cwtl pop mov inc and test inc fidiv stos sahf movsl push jl jg aaa rorb sub (bad) loope pop push imul in adc mov ljmp int ljmp push mov cmpsl aad jbe fildll sub sub pop daa out ret xor lret or add add cmpsb data16 pop sahf mov lret xchg sub mov mov cli or and shll dec cmp mov fidiv mov mov lods jb sarl pop imull cltd xor lds sti cwtl sub cmpsl addl loopne push pushl mov xchg inc (bad) ljmp lret clc mov pop mov orb imul nop test rol nop xchg idivb pop test add add add xor fadds or ret pop jp xor jg jno pop lea pop out lahf xchg adc insb pop shrb daa out xchg outsl ja or std cmovne int3 push outsl dec sub or data16 outsl mov push cmp mov jl fsubrl mov sbb popa rorb xor imul je adc pusha aas test dec stos sbbl stos fnstsw repz mov inc into outsb push sub add add add sub leave xchg mov jbe iret mov and sbb in sar int3 (bad) call inc ret in aas test xor div cmp adc addl ret add push fsts sti pushf flds push (bad) insb imul xor push jb aam mov stc xchg ret rcrb inc mov dec adc addl pop pop std dec aaa mov ljmp cmc ret mov add add xor xchg mov icebp ret push stos cmc rcr imul cmpsl or mov lods insl adcl insb mov xor mov subl pop cwtl (bad) mov mov and pop addr16 push pop out pushf push bound mov xchg mov lods add sub in rcl mov mov fdivrs bound sbb cmp cmp lock sarl rcll add add add dec add xchg dec mov imul movsb add mov sahf sbb xor xchg lock xor xor jo xchg sarb jmp push push push out mov cmp jmp out mov decb inc dec shr inc inc mov xor inc mov pop add pusha adc dec or adcl adc push out xor (bad) or insl add dec mov fcoms add add pop (bad) mov or or add mov or fadd mov dec mov pop jl std cmp inc jno jmp mov adc jg (bad) (bad) aaa cmp cmpsl xchg sbb push xlat pushf data16 push testl jge xor jb decl fnstenv xchg xor jmp sub movb sub add out jecxz ss aam add adc insl fwait cmp mov pop mov add add add add (bad) icebp mov cmp stos pop cmc mov cmp lret cltd add in mov fldenv jnp mov arpl dec or pushf pop mul (bad) jbe lret pop cltd (bad) xor inc sub icebp xor pusha dec je or mov or or mov int3 inc jb outsl dec cli push cltd jecxz jmp ljmp repnz sub lods jg xor les or iret add imul add hlt stc push rclb neg cmpsb mov adc lahf (bad) imul mov inc inc test shrl cmp add stos sub loop mov in lahf push dec push push and jns push divl jno dec arpl imul jecxz shl or mov or fldenv fxam aam pop (bad) data16 and push cltd in jle cmp lret lods inc ds push mov jge dec lds lods add int3 jne clc or pop pusha jg adc push shrb negl pop pop dec mov sbb scas pop push push adc lods dec jg cltd xor mov shrb or dec mov adc add mov adc xor jmp xor xor pop leave push pusha out stc inc cmp inc loopne xor mov es xor mov icebp and and clc pop lret dec stos mov xor std ficomp jb inc mov add add add add dec nop xchg inc in bound add in xchg pop mov xchg jae mov pusha push mov add xchg mov mov jmp jno cld mov mov leave jnp (bad) or fcmovnbe jecxz push (bad) jle shlb mov xor cmp sahf ret cwtl jb mov dec icebp jnp xchg push xor sub stos jb jp ss jge cmp daa pop inc outsl jne addr16 pop push add add add jmp sub jb inc or or xchg jge data16 mov add or gs sub test (bad) and cmp mov xchg mov ljmp push xchg outsb outsl push sub ss jnp and mov insb ljmp xchg (bad) pop scas popa scas test xchg cwtl mov pop push mov stos cmp test inc lock sub addr16 xchg jg fiadd add add add inc sub outsb mov fadd ss sbb test jo (bad) jo fist popf das je sahf mov dec dec dec daa fs loope jb lret dec pop sub test jne jbe andl call dec xor repnz adc jb sti aas sbbl nop jns (bad) sahf jae rcrb or pop in scas xlat test xchg dec jecxz xchg adc test or mov add add add add jg push (bad) loop pop pop cmp test idivb mov mov cs lret xor and bound rcll cltd mov cmp mov and adc in and in test push jno mov sbb (bad) in scas addr16 pop sub (bad) std push mov out fdivrl lret in fsubrs cwtl cli add incb stos sbb jae mov add add mov pop loopne fsubs pusha push cmp loopne aas xchg xchg sbb in xchg loope gs mov mov int3 ja gs mov shlb sbb pop xor (bad) adc xlat xchg fcmovnu aam out ss sub push sbb rcrb int3 add sti push pop lahf xchg mov sahf ljmp mov push xor mov iret in sbb rolb mov popa pop jno (bad) inc stc clc into dec pop les jne add add add add sub stos push dec repz sbb inc or mov xlat dec pop cmp jne adc jmp mov and enter xchg xchg push pusha lret lret rcl repnz (bad) pop inc outsl sub and adc mov dec sbb xchg stos or jo cmp loope js jo jbe adc dec mov dec dec jo push fs sbb pop scas add aaa mov sub xor lea das jnp pop pop insb mov std cld jp ss fbstp sbb enter ljmp test xor or mov pushf (bad) leave add jno pop ja stos imul inc mov (bad) (bad) loopne jo (bad) ja sarb pop jp ror xor xchg call dec pop add daa pop inc sub das fsubrs std inc icebp pop xchg cmp fadds push test adc sahf dec jno lret jnp insb adc les mov cmp les in jne pusha (bad) mov push add mov bound mov adc dec mov idivl cmp mov arpl push mov jo stos mov loope sti (bad) xchg xor ret adc sub and pop cli aaa jg lods call ret push les loope mov add sbb lahf jmp and add add add lods packssdw je inc pop outsb in cltd (bad) lds sbb add movsl cmp sbb sarw mov int repnz in inc mov sti sarl lahf loopne jecxz adc fstl dec notl ja add test cmpsl jl add jbe jecxz mov test fldl imul push cmpb mov xchg fucom mov jl or jecxz sub push mov rcr pushf fnstsw fisttpll xor xor xchg mov mov test popf jae les imulb mov inc adc push xchg jbe mov out enter arpl cmp dec nop mov mov in dec dec mul (bad) jne jp push sbb mov or fnstcw pushf cmp or sub xchg pandn fcmovb sbb mov es xor mov je ret jg cmp or lahf add add add mov cs push mov gs scas push cltd aas sbb shl inc sub adc dec xchg push (bad) push fisubr adc xor out test jecxz push cmp ss xor pusha cs repnz push je jne pop inc test (bad) mov push or push sbb test jne jg push xor cltd outsb lret data16 fsubr mov fdivrl cmp (bad) xchg mov mov nop sbb stc sbb xor andnps pop jmp addb add add adc cmp xor adc call loop jo rcrl (bad) testb sbb pop lods (bad) mov sub shrb int outsb mov cmp inc imul xor orb adcl fistp idivl jbe or lods pop scas xor arpl mov push cmpsb mov mov ljmp mov stos insb mov (bad) mov add add add pushf xor dec aas mov sbb inc or inc xchg mov enter imul fist mov add aad xlat push inc xor ljmp fisttpl repnz and subl and pop pop dec stos jl out dec fstps pop inc or inc lret jl push gs aam stos test dec push mov (bad) push sub add adc mov adc mov xor add sbb daa fldt mov mov xchg sub xchg into pop or or xchg pop mov add push data16 add inc add rcr addr16 ret mov fsubrl movsb scas loopne cmp push stos (bad) xchg jnp iret test push cmc push sbb sub mov test pop push sbb in cmc jle out mov push rclb or pushf in call sbb adc jb push mov ret inc xor sub mulb add or adc sub inc test scas cmp in or es data16 xchg (bad) jg (bad) jecxz lret xchg mov les and stos jp xor daa jnp sub pop mov or inc rcrb xor lods sbb call adc imul jl addb bound push xor lods outsb xchg sbb imul add daa jns insl jecxz sbb pop or add add add add jmp iret imul mov mov mov cmc test ficomp and test int fsubr mov scas sbb repz sahf into jae jae pop jo inc int mov inc gs xchg cmp imul adc imul push sub insl sbb notb fsubr iret ret into pop popa xchg push and enter or rep addr16 arpl xlat cs mov repz (bad) push pop mov pop mov add push cltd xor add add and das arpl notl loopne fildll push jl sahf sub adc mov adc pop es test or popa pop popf das sub mov gs das and cmp jne test adc jb ljmp in and pop stc adc das push add add (bad) mov (bad) data16 pop mov or mov ret scas testb jno dec movsb lahf dec mov add add add add cli xchg mov icebp (bad) clc faddl inc in jb sbb scas mov or dec push imull or and es mov imull sub xor mov cmp inc std lock cmc negb jecxz scas les jo stos fsubr mov xlat das cmp nop out xor (bad) aas mov stos dec ret pop cli enter (bad) xchg sub add pop xchg in or add add add loopne das sti (bad) cmp nop ja fidivr sbb xor into sub mov cld popf movsl and lds jns lods jns add fcom mov mov scas adc sub and repnz pop sbb mov xor loope mov mov shrl mulb cmp push or xchg xchg or stos lret xchg xor dec jge sti aaa mov and push lock add add add sbb cli jbe stos mov pop xchg les adc loopne mov add insb fwait daa je ficom cwtl addl pop lea xor ret dec xor xor dec jmp shrb pop dec lea (bad) cmpsl and inc cmp test mov pop (bad) dec imul pop mov (bad) int test inc add hlt push (bad) mov push push je cmp aas or mov imul add subl cwtl cmp int3 ljmp jp cmp xchg scas lcall int3 in jmp mov mov movsl lods cmpsl outsb mov popa mov mov or sbb xchg lea cmp or mov sarl adc push idivb add out outsl pop incl fldenv cmp mov pop lcall mov sti sbb add add add cmc loop push push (bad) mov and imul or and divl in rol lcall pop rcrl pop aas popa lods or push mov aas mov scas fcmovb cltd aas (bad) repnz mov jmp lret pop fidivrl xorl xor lock add push decb pop aam mov push adc mov mov fdivrl sbb in pop mov push stc pop pop mov outsl movsl and mov sbb test in cwtl movsl cld inc and inc and jmp call pusha cmp mov xchg sbb jle (bad) stos pusha scas (bad) cmc loope pop dec cli xor movsb cmp or push xor mov repnz mov out xchg aad mov fidivr mov mov hlt ret cmp in pushf or data16 jecxz sarb or daa loopne into cmp scas mov cwtl jbe mov add add or mov xor or or into pop je test xchg dec pop xchg imul xlat cltd push fsubs (bad) rcr sub push cwtl into xor inc rcr jo stos cli in pop je int repnz jecxz push fisub (bad) inc and inc cmp ja add pop test fwait mov dec out mov mov cwtl adcl xlat out sti adc mov sbbl xor xor (bad) mov xchg stos inc adc mov add add add fnstenv mov cmp adc ds (bad) outsl pop jecxz fidivl pop rcll leave dec and adc xor test jge sub jl pop adc cmp mov adc mov lods jge inc and loopne push jl daa mov sbb pop hlt jg (bad) out cld aas cmp gs outsl add cwtl mov push movsl cwtl int in add cmp aaa (bad) jecxz push in sub fcmovb leave pop sbb adc inc aad add add add add imul in adcb push es repnz inc jp fcmovu shll push cmc fistp fimul mov jns (bad) pop mov cli mov cs pop jne jle cmpsb inc mov gs jmp push and cli mov stos xor inc or mov inc jae or in fistp jge sar aam mov aam mov in pop pusha lds and add add add aaa xchg pop sbb sahf popf mov and ret idivb mov (bad) xor aas push push cmp fnstenv xchg fnstenv hlt into pusha ljmp aad ja out incb cmp adc in lea dec mov jecxz hlt and mov xor adc fcompl pusha dec lahf (bad) pop sbb pop xor xor loopne iret lea add add add push cmpsb (bad) repnz rorl cltd lock pop test cmp pusha push mov test push sub popa push repz or lods adc pop ja fdivl mov xchg std or mov pop in mov push sbb imul push jb mov fwait or into xchg push or cmp xchg xchg scas lods xchg push dec xchg movsl or andl es daa out stos ja cmp sub push (bad) es test sbb idivb mov sub mov lods fnsave push int push fisttpl push aad es mov pop xchg icebp inc fist rorb xchg mov sub dec pop fnstcw and sbb lds mov dec and lods mov je notl mov xchg push sbb push sbb loope lret jo mov (bad) repz push dec pushf test add add add push fstps push jle loopne (bad) adc or cmp cltd in mov jb and and aad push test cltd imull mov and push or data16 sarl push lock jge rolb lret add rcrb or lret push notl aaa movsl fsubs addr16 cli (bad) push dec cmpsb mull sub test push xor dec (bad) cmp push lods adc sbb mov add jns int3 imul lock inc frstor (bad) ja xchg movsl inc or mov pop cmpsb fcmovu popf in dec int bound outsl xchg fadds push dec enter push inc (bad) mov pop pop subl cmp das leave lea adc popf dec lods mov jge out fmulp ficomp ds hlt inc adc pop fsts cld mov jb sbb insl aaa mov mov fwait gs mov aam xor add add add mov imul icebp scas sbb pop clc subl push ret into ja sbb mov push aad cmp xlat add (bad) push jg inc ljmp mov mov xlat scas push mov sbb pop xchg xor icebp push stc fsubs adc lahf fsubl outsb dec adc lret inc test out je js mov sub jne lods sbb fdivs bndstx jl adc cmpsl pop jns lea or dec xchg scas push add lcall mov rclb dec dec aam mov adc sub ret cmp mov mov rclb inc xchg xchg pcmpgtw lds adc das sub in repz and sahf pop lret sub out fsubs test jne inc xchg pusha pop stos push dec pop or jns imull push gs dec data16 mov (bad) jecxz push fsubrp mov fldl add add inc add xor xor cmp jg jl xlat cmp add adc mov dec dec adc andl (bad) or call xchg and hlt jp (bad) in xchg xchg scas adc ds xchg pop fnstsw cmpsl cltd pop mov insl pop nop adc adc xor pop inc pop ret idivb das mov jecxz mov repnz cwtl or cmp (bad) mov push mov add add cmp push jecxz data16 pop mov mov (bad) adc and iret push (bad) fidivrl sarb ret xchg ja or lea adc iret loop adc mov les mov pop lahf inc (bad) mov testb or popf daa jo into sub insb inc outsb test adc add dec pop push pusha lahf iret mov and test and ds jns jo pop lock inc push in xor add add pop mov jg adc fiadd mov hlt imul icebp (bad) out pop mov sub movsl push lret pop inc (bad) adc pusha imul fst in mov pop xorb popa pop dec mov stos leave cmp add adc xor loopne jle jnp jle pop sti loope mov addr16 in popl lcall inc incl sahf sub cmc in xchg out popf pop jbe xlat dec sub (bad) and into ret add add add sub xor mov mov popf sbb lret sub sarb sub mov adc xlat xor dec dec daa push pushf xor repz movsb popf hlt sbb mov mov mov mov sbbb stc push sub inc je ss scas mov pushf inc out mov and lock test movsl xchg sbb into sbb dec daa outsl sub mov test or out dec pop in add sbb stc pushf loopne adc pop mov jge mov adc mov mov test jl xchg xchg sbb ret adc test fildl ret mov sub stos sub push fnstenv jmp notb out pop cmp movl push mov mov into pop xchg jge mov sbb lahf fsubp mov mov lret jecxz mov in iret aam fs ret jbe xchg add mov popa (bad) fidivr add add add add imul inc xchg jae pop xchg xlat fwait xchg mov shrl das push int loop in addr16 xchg nop insb out sbb xor divb mov hlt cmp aad jecxz int3 js clc and les pop call scas jb cmp inc dec std sbb and sbb and sub add and daa jo popa lods pop push cmpsl push (bad) jae jmp push pop jae stc xor mov and addl add add into std je inc xchg pop push jecxz cli test dec lods (bad) cwtl add add insb dec cmp ss js lock leave sbbl hlt xchg add sti cmpsl sbb cmp repnz lods in insl mov mov das test test sbb lcall repz mov pop out mov je or lock inc add sbb pusha push pusha pop mov scas lahf dec (bad) in add add add jno lahf jnp pop dec dec mov (bad) movsl insb ss dec dec pop test sub jecxz pop popa rcrl fmuls repz rcll jnp nop sub push adc inc mov (bad) imul mov xchg test imul pop xor inc in movsb divl ds mov adc add push data16 jbe jg repnz imul pop mov pop in pushf add push sahf pop jg ljmp fwait outsb cmp daa sub loop pop mov mov and jne sbb out adc mov sub or (bad) mov inc cmp nop sahf pushf jae (bad) mov push push lret (bad) inc pop js out dec (bad) mov xchg pop imul add xchg ret pop lret jbe mov sub pop jmp cwtl sarl scas xchg mov cld das lods sub lahf mov mov decb add add mov mov ljmp jge xchg mov jb adc leave inc sbb pop xor sbb stos mov push jecxz dec stos lods cmpsl or icebp cmp dec movsl sbb add fistl (bad) lock fwait stos push loopne jmp aad lret ljmp in lds lahf dec enter in in sbb pop mov int (bad) dec adc and dec sbb jge push add add add add sub iret je adc stos adc les xor ja push arpl xchg pushf dec outsb xor adc fst xchg add mov fdivr dec pushf jmp sbb inc xor jle adc jbe push loopne mov and cwtl es adc (bad) dec lcall repz out (bad) stc add add xchg pop or int rcrl push push hlt jns outsb cmp push sub lods inc out sbb lds push push sbb dec popf pushf adc sbb aam pusha or push stos mov inc mov add and cmp sbb xor mov int3 fwait xor xchg movsb repnz das inc aaa inc roll notl das adc xchg jns sbbl xchg lcall into stc mov dec lahf mov lcall add test (bad) xchg sbb scas pop adc ljmp mov fist xchg lds pop sarl add add add add mov add sub dec pop dec out mov lods push aad out xchg es jo jo ja sbb fs push call jle mov sub dec mov popf sub cmpsb cmp mov cvtpi2ps push sub cmpsl inc jecxz cmp repz or jle test inc pop or pop das dec arpl stos shrl sbb data16 or outsb xor xlat pop data16 add add add mov or or cli int3 inc shlb xchg sarb sti out add stos lret and cwtl shrb or pop repz add adc shrb xor pusha xchg inc es pop cmp inc xlat call dec mov addr16 loope lcall xlat cwtl push jl sbb dec scas sub ss xchg add push xchg mov fcomp std xchg lahf xchg xchg popa fnsave sbb add dec jge xorl pop xchg add push sbb xor dec (bad) and loopne xchg push in ja sub mov push aam push inc xchg xchg mov xor push jmp rclb sbb add scas dec in xor lret or dec or mov xor mov jg xchg push or mov or ret in arpl push xchg inc inc imul lods lahf sub jle sti jmp cmp jg rorl out call mov test mov jno test in cmpsb rcrb js pop pop mov jg fildl cmpsb (bad) xchg loop xor or in push jmp push xlat mov ljmp xor loopne into xchg jle icebp inc out shl pop leave sarl dec push and lods jmp clc lods add push and pop popf (bad) aas inc (bad) dec and mov dec (bad) mov in adc add add add push xchg les pushf ret fidivrl (bad) out shll push (bad) popa xchg repnz stc lcall cmp pop bnd arpl les and mov inc roll dec push sub push pushf or orb pop sbb inc je mov call idivb mov inc mov pop std leave arpl and lock push inc sbb decb push sbb xor add and xchg mov sub cli xchg mov mov cltd and aas (bad) ret push bound sbb test add adc icebp jbe sahf cmp add jb inc inc and or es in cmp mov mov jl out or sub outsb xor inc fistp cmpsl test mov inc xor dec cld jecxz inc xor push cmp cmp xor sub mov add add mov inc push xchg mov sbb inc fdivrs sti adcb je int jns or negb pop gs adc or mov int cli (bad) xchg mov mov jg add lahf (bad) jno out scas lock push mov push out ja xchg fnstenv leave jbe adc mov in xlat cli (bad) or mov cmp lds mov pop push sub into jns inc lcall pop outsb xchg mov cmp call jne add or mov adc lea mov pop dec push inc xchg push sub inc in jno in cs popf gs and mov daa mov push movsl out lock call cwtl cmpsl push pop insb jns mov xchg jp sub sub xor pop dec xchg (bad) jae notb adc xchg pusha sub pop outsb push jmp lods aam cmp sbb das mov or sti mov mov cs je (bad) arpl (bad) loopne adc jp mov in stc bndldx movl in movsb sbb cli out stos into sbb (bad) (bad) in test call adc insl data16 jne jo fwait ljmp (bad) (bad) pusha jmp (bad) (bad) mov and sbb fcomps add jle mov jno addb push sub lret ret fcmove (bad) loope sub dec xor hlt dec mov add pop ror dec shll jno adc test mov push cld pop pusha add add add mov repnz stc outsl das aas xlat xchg ret (bad) jecxz cmpsb test (bad) int push setns sbb xchg js js sub push dec mov xlat out out push dec cmc cmp lcall or push fldl arpl insl push sub outsl pusha mov ret push jl xor divb add or neg sub int3 jo sbb and xchg or sbb and lcall add add add jle pop adc sahf mov xor cmc sub add lds pop sbb aad mov mov stos xchg addl xor mov add sbb inc inc inc add pop inc xlat into outsl xor push push sub sbb mov pusha push xor stos and loopne jne sub add outsb sbb hlt mov or les xchg into cltd popa das pop xchg repnz dec add mov call sti xchg hlt movsbl inc add dec mov lret jge push popa int xchg out cwtl in jne mov repnz aaa stos dec je inc sub pop or imul (bad) (bad) jg popa (bad) jno push or xchg mov add fcmovnu cmp pop push pushf mov jae in stc (bad) aad bound push dec sbb jae adc cmp jnp scas in test dec xchg mov add add push push xchg pusha sti inc sbb call mov adcb push pop dec icebp inc inc sbb cmp cwtl cld repnz cmp xchg xchg cmp pop add xor mov ds cwtl jno (bad) lret out mov pop insb std lds add hlt mov inc lods sbb jno mov or out jae out stc cmc cld mov lret mov rcr loop sar movsl sub subl cmp pop sbb xchg sbb add add add add mov std test js push mov xor je push xor scas orl es jl shll cmpsl xor pop bound adc sti into mov sbb mov adc cmc mov push add mov lcall jmp mov lret pop add out sbb cli mov or and and mov fmulp dec cmp mov sbb sub add add gs dec pop mov nop push and (bad) and test mov shl insl sub sub (bad) pop movsl movl insb push cmp int3 ja movsl lret xor sti out add mov adc mov or repz and loope mov mov mov movsl or jle data16 sbb cltd orb lahf (bad) pop sbb pop mov jne push push jg aad xor test add ljmp outsl jo (bad) mov ret adc and dec add jne insl das jecxz cmpsb dec cld mov inc cmpl and jns faddl icebp in sbb xor sub fwait dec loop jo cs jns fs or mov fwait sbb call sbb xor (bad) hlt popf scas gs pushl mov fnstsw adc cmp add add add inc iret gs xlat sub pop cmpb cmpsl dec jp mov (bad) lock ds xor jmp dec arpl fisubrl and inc repnz std or lret iret sti cmp pop mov adc js icebp mov push imul mov mov dec adc jge dec mov cmpsb xchg fidiv in das popf movsb mov cmpsb lret lret aad push sbb (bad) cwtl or ljmp cltd notl in inc outsb inc outsb sti in pop notb (bad) xor decb int push push and xchg dec ret mov lods icebp (bad) nop les pop push cmp out out mov (bad) jle add or mov ret lock add fstl (bad) mov or jo fldt daa les je test add push jnp mov or xchg push int3 mov dec mov test paddw fidivrl add lds add add add mov jle dec repz test insb imul jg pop cmp aad cld fwait sbb rorl jg data16 popa call jnp ds std mov pop repz psrad cmpsb xchg cmp and out (bad) fmuls daa cld adc jecxz int (bad) cld mov aam or mov out es gs mov das push mov push lods xor stos mov mov sti mov add add add daa mov loop in or (bad) in add cmpsl fs (bad) int3 adc repz dec adc mov fmull js int mull cmp (bad) or xchg jecxz das adc orb leave mov pop rcrl sbb jo aaa mov in xlat cmp inc sub or and pop (bad) repnz repz sbb inc in lea enter sbb (bad) lret movsb pushf xor cmpsl and sarl push xorb add add movsb mov cli pop push sub iret xchg xchg ja cmp cmp jle dec jbe lret mov push dec mov xchg push fstpt add aas (bad) ret xor xor adc mov and jb xchg cmp push out and test ret cmp cmpsl iret lds jp cld out int3 mov jo ficoml sbb cwtl fstpl jnp xchg ljmp adc push cwtl fxrstor inc jnp mov add add add test (bad) outsl mov loope call (bad) jno xchg mov adc inc (bad) clc dec sbb clc mov cmc pushf dec data16 or add cmpsl add inc lods adc xchg mov in data16 lret rcl cmp je ds mov ss and mov imul cmp fdivp clc sub add push xchg js jmp xor pop lock sbb fwait push cld add add add push aaa addb insb sub stc leave xchg pop xchg test fsubp lcall mov sbb mov sub iret iret sbb cmpsb in add pop fnstcw cmp sub in push addr16 sbb sbb push shlb (bad) icebp xchg xchg adc cmpsb xchg inc test (bad) jbe pop jnp test and or xchg mov sbb mov (bad) addl push jbe gs bound ljmp xor add add movsb or icebp xor stos fs pop push dec movsb scas push mov xchg sahf pop dec aaa daa inc mov ljmp sub dec push cltd xchg adc fiaddl sarb push (bad) mov pop into pop inc loop pushf sbb mov jne mov mov (bad) incb out inc aas adc (bad) sahf mov inc push sub xor adc adc (bad) cltd mov xor (bad) divl loopne sbb add add add add add fwait jno out outsl int3 push xor (bad) fbstp outsl adc idiv cmpsb fidivrl stc je jno and loop jae xchg mov std push scas ret xchg sbbl pop mov cs add sub cmpsb (bad) loopne mov test push push dec out cmp adc or pop (bad) adc lea mov mov push out xor jmp push fdivl (bad) hlt in mov adc aam inc jecxz xor or add mov js lods std dec je push ficomp xor out inc dec test fstps arpl enter sti and mov cmp jns es mov es pushf add pop jb xchg roll dec sub pop lods adc mov dec and jl lds fld and sbb dec ds stc and pushf cmpsl shll in rol jnp (bad) mov (bad) loop inc icebp sbb rcrb push jl xchg pop push cmp mov inc mov test add add add repz or in sbb inc insb lds adc xchg mov adc arpl imul add or add daa jbe mov loop mov mov pop int3 movsl mov pop std pusha pop jno ja fsubrs pop lcall mov mov int3 mov mov lret call jns xor stos ss dec jl mov loopne subl mov mov cmc orl test arpl add jbe ret sahf testb inc dec xlat inc (bad) mov dec imul hlt iret in xchg aad jle xor xchg ss jne xor inc stos mov inc sub sbb popa sbb test or xchg push (bad) or or sbb and das (bad) and ss pusha ljmp lock and sahf dec (bad) cmpsl loopne bound sti imul mov sub imull out push mov mov sub sbb or jp mov sub cmp push jae stos int cli ds mov jge add pop mov push lea loope icebp and add sub push sub jb sub dec xchg movsb sbb lods ret (bad) lods sti xor xchg adc add les ljmp aam jnp pop (bad) das inc push ja cmp ja mov aad aas xlat pop xor inc pop fiadd xchg push fsub sub xchg stc lret cli sub add ret daa mov cmp jns (bad) pop scas jg std add cwtl pop xchg popa or and in out xchg lods loopne loop mov adc add aas add mov pop lds fsubrp mov imul popa daa lods mov test fdivs scas xor add movl mov lea mov jnp (bad) repz ljmp lods test imul add add add aam cmpsl call in inc push xchg jne jnp xchg into inc add lock jnp jl push fimul in mov inc jl fnstcw flds lret call std mov into mov xchg in outsl and cs xor cmpsl stos iret jnp mov ja jp jae fwait sti sbb dec aas xchg icebp into xor movsl (bad) das sahf repnz and mov popf test test dec aam add add add push fstpl sub pcmpeqw pop adc stos xor or sub xchg psubw int in aad out (bad) jl jle xchg movsb bound cmc sahf jmp dec lret push xchg cmpsb loope cmc push lea (bad) mov movsb sub sti (bad) (bad) mov sub mov xor lods fwait stos push mov xchg dec jno fldenv mov mov adc xlat addr16 lret sti push inc cmpsb out mov add add add add mov xor inc int sub add popf bound rcl sbb cmp out xlat repnz or cmp ljmp adc out clc jecxz popf jae lods add xchg xor sar in mov xor inc pusha jne dec aad xchg nop lock enter shr notl mov shlb loopne aad andl jp mov loop sub add or sbb sbb push lahf lds dec subl push lahf pop mov jb push pop test sub pop add int hlt dec dec push dec add fwait sub dec fs fnsave fwait push ds pop cmp inc push imul in ret aas adc (bad) jle cmpsb mov stos loop out and mov xchg mov jmp outsl pop inc xor js xchg pop xchg xor add add add add mov test and push or and cwtl mov scas cmp pushf xor dec mov push lcall or into in or xchg cmp lea push test loopne repnz scas mov fwait mov pop cli push dec jl push xchg inc mov test or lock fcomps cld push add xor xchg inc fdivrl pop pop cmpsl fist (bad) in data16 and add add add xlat cmpsb imul outsw push jge int3 stc xor repz cld fidivrl (bad) mov outsb (bad) mov inc movsb fs xor loop loop push lret sbb jb or jge andl mov fistl add inc xor xor rorl outsl xchg fstl mov and sub xchg push daa cli ds sbb lcall aaa in leave cmp and (bad) jo pushf std cmp jecxz push push push jp add add add add scas leave jo out insb ffree sbb popf inc pop mov lcall cld mov or rcll push dec jo leave sub shll ds cmp pop shrb cmpsb add jns mov fwait cmp pop lret lcall mov idiv lds mov jo dec mov movsl outsl mov minps sub and pop xchg xlat jno (bad) xor movsl or add lcall lcall fimul out ret aad popf ljmp xor lods push xchg push jl push rcrb inc cld xchg sub ret xchg push imul sub dec movb movsb stos int pop in stc push dec insb pop dec mov flds xor stos loopne loop sahf lods jnp adc and sub stc jle add or xchg pop mov cmp inc inc insl push xchg scas pop mov cmp clc inc xchg adc xchg mov add add add push lea xor popa mov movsb cld (bad) jl pop pusha add daa ss pop mov sbb mov cmp scas ss push xor jge,pn mov jb inc inc pop ds pusha out cmp or sbb je cwtl stc push cld mov fcmovne sbb adc xor ds add cmp add sub cmp fcoml push movsl pop jne and add add add add stc pop movsb imul sbb repnz mov popf in imul das lret (bad) rolb adc adc fist mov dec sub (bad) jge push or xchg decb js pop fild (bad) push rol xchg xchg mov out push out loop inc cltd lods outsb mov movsb xchg jecxz das ss mov xchg adc inc daa sti imul adc sbb lds inc push cmp (bad) mov cmp add add add es icebp gs mov add (bad) lea ss andb jl dec dec out pop mov nop xchg mov inc mov cmp lret repnz (bad) sub mov clc rcrb push add and in fmulp cld fcmovnb (bad) pop push mov (bad) and insb xor mov dec fwait insb ds xchg jae test out mov lods (bad) sti flds mov adc movsb out mov aaa js push xchg out aas dec sti leave xchg int3 iret ja xor add add add repz sub fldt std or xor mov sbb dec sarb stos push add dec mov xor mov (bad) adc mov push jns dec pop pop adc mov gs lods or or fidivl fwait movsb (bad) call lds xchg fwait jg jne xchg push loop pop outsb sti js xor in cmp dec sub (bad) and add inc mov add add popf cld fsubs test loopne jo lcall sub push in sub pop push ljmp add jns pop sub aad jmp push sbb pop pop out stc dec sbbl lahf aam push xchg mov mov inc xor mov jl mov sub ret inc adc dec mov add push test fldenv and cmpsb and push mov jb xchg scas das cmpsb xor arpl add add mov popf pop sbb mov arpl cld pop loop,pt outsb push js mov in cld lock jl mov jne (bad) push push scas nop iret (bad) mov test test pop data16 and add fisubrl or cltd insl sbb sub test movsl out neg sbb mov adc lcall in nop pop pop jb adc imulb inc mov dec ret leave mov gs push fimul dec sbb add add add (bad) mov pop or pop or call or ret je mov int dec mov or sbb and rorb add iret and or sub fucomp jnp pusha jnp out cli sti fidivl xor lods (bad) dec mov loop lods add cmp xchg xor jmp cmc lahf scas popa rcrl push test xor sahf xlat fbstp xor xor mov sbbl pop push cmp push outsb dec scas mov or pop into sbb cltd cli outsb subl jg and push (bad) push dec xchg push sbb mov popa adc jecxz stos xchg shr add xor mov sub and or cmp (bad) xor mov loopne and ror mov arpl jg xchg mov shll add add add add inc cltd loopne push sbb mov cmpsl fstpt out dec repz scas test ljmp int jno repnz xchg imul inc lret (bad) cmp pop popa int3 and add insl push hlt jns das xchg js jl leave pop adc xor or cs pop add mov (bad) xchg or mov mov fimul or div fwait pop jne or mov cld or push xchg loop cwtl cmpsl out les lods mov xchg jmp mov pop or add aas mov rol decl or movl movsb push cmpsl test or movsb xchg cmp mov std cmpsl dec sti or ret clc pop push fisttpl stos (bad) ja mov sbb out daa push clc shrb test arpl aaa lods (bad) and mov inc jne dec ds sub addr16 pop jo mov inc mov mov add add add add add dec add cld push fdivrp aad stc mov and loopne (bad) test push and mov inc mov in cmp nop dec cltd lds xchg mov pop (bad) repz test jg jl add push daa roll jne fmuls lea call fsubl pop test rcll xor inc std in or jno (bad) jbe mul sub pop stos aam std dec pop (bad) iret or sar cmp xor add add add add sub or dec out push pop or sub and push mov cmp jecxz and inc cs adc jnp test pop sbb sub jmp in mov test xor sahf pusha lods ret shll inc jmp mulb pop jle leave loope stos icebp lods insl jp jecxz pop (bad) xchg pushf adc sarl xchg xchg sbb xor test or jle or cmpsb add add add add add outsl push cmovae aad push jae mov fisttp dec or mov sub jae (bad) scas pop push push sub push imul sbb jmp loopne lret scas jae jle xchg jmp adc (bad) pop xchg mov inc or sub or add enter roll mov pop pop subl push sbb fwait cmp sbb (bad) dec imul add or mov fnstcw xor add add add or dec loopne divl xchg cs push imul jge jo aam mov jge,pt mov inc mov aaa test popa mov cmp arpl rolb loope (bad) xor jnp outsb dec pop mov dec sbb icebp inc xor push and cltd imul mov push push jne mov xor mov sbb mov ljmp and add add add int pushf and cld in inc xchg or sub push mov imul dec xor ficoml bound add mov sbb sbb sub and ljmp hlt out and push sub mov jb lods scas in inc cmpsl mov or pop inc addr16 addr16 outsl pop aad pop jb pop push mov fsubl jnp push icebp push scas daa pop popa pop out push lea add add add add pusha (bad) pusha mov jne mov and jnp cmp mov std call movsl jg sub into jecxz leave js (bad) lret and push lss adc into jo push test fcompl outsl sbb lock aad loop inc loope inc mov adc (bad) ret movsl dec cltd dec mov out scas (bad) ja sub insb lret int3 daa or popa test into xor sbb add add add add xchg aam mov xchg mov dec push cmp mov or repnz add pop cmp inc lret inc sbb add ror cmp hlt mov push rcl clc xor hlt cmp push lock add cmp pop dec sahf in push in sbb inc sbb xchg pop cltd test sbb mov jno inc cld gs test cmp xchg sub push mov xlat lcall xchg lods or push push (bad) aam adc iret sub cwtl add aam push xorl xchg out ret scas adc gs jb sub push xchg mov scas dec popa push out test mov lahf lods ljmp jge xchg pushf add fs lret insb scas arpl sbb xchg xchg push and add ret rcll cwtl pop push or or shll bound ss push fldcw adc mov ljmp sbb test mov add add add xor mov faddp mov lret cmpsl mov arpl mov pop cmc inc nop loop jne popl xchg daa adc add out adc sbb jecxz jmpw inc sti imul fsub iret into out sub insl lret ljmp int push cli dec mov pop lret in pusha push xchg mov dec jp sti pop push adc cs pop pop adc iret sti pop push xchg mov mov mov movsb adc add add add add jg fs out pop jmp out cmp imul fs arpl cli xchg mov mov (bad) ljmp (bad) shlb fsubrp add mov scas into xchg cmp paddusw xchg cmp in pop sub add scas leave fldenv add sbb cmp sahf inc xchg xor pusha adc add jp mov sub nop lds scas cmc and adc outsb pop and ds sbb test add add add repz adcl mov inc sub pop inc lds or lahf jp,pn push sbb jns (bad) aaa adc or mov cmp test aam dec (bad) (bad) mov enter imul mov sub mov add and nop jle inc lds sub rolb repz xchg pop pop in xor lds ret mov or nop add add sbbb stc or in inc popf lds jl cmp mov les jb jecxz adc adc loope fcomps jl xchg (bad) and fs inc mov xlat xchg sub lahf (bad) aad pop mov xchg sub xchg fadds cmp cmpsb xchg pop mov sbb jecxz int sbb mov ds push xchg (bad) or add cmp push jle and adc add add add xchg test movsb out dec cli jne mov lods call ficomp outsl jmp inc test xor je xchg push stc xor push sarb mov clc jl icebp push xlat xchg gs out sub jp (bad) (bad) jnp sarl or aaa outsb jg pop push jns push mov lds ds push push sbb (bad) mov mov aad xor addl sub adc add add push scas das cmp (bad) fdivrs shrl inc mov icebp daa push ret inc ret jb sub shll inc in dec int3 push jne daa mov lods imul into insl dec mov inc xchg lahf dec iret xchg mov cwtl add (bad) adc xchg in mov popa lcall int pop (bad) xlat cmpsl mov xor (bad) (bad) push sar push lcall fist lcall out scas and sub stos jno xchg scas add add add das add shrb jmp push sub popa xchg adc adc (bad) xchg inc (bad) pop aas xchg jge jmp cmpsl dec pop push mov lea xor pop insl adc in jmp fbstp out mov lds jbe cmpsb sbb xor enterw daa repnz mov notl (bad) jno mov inc hlt push lret lds popa loopne inc jle and adc insl mov aas dec loope jbe adc mov add add add jecxz add imull mov sahf mov arpl ja in and in aam rorb gs mov push mov fs dec call clc push mov dec (bad) xchg data16 sti add pop std test pusha xor xlat popf shlb inc (bad) arpl add sbb pop fsubrs xor jbe or jb icebp inc mov enter cmp xchg (bad) popa xchg and push mov fildll sbb clc xor arpl sub sub push (bad) frstor xorl pop out xchg cmp repnz mulb and jae hlt ret jp ret xchg xor cmp stos adc mov xchg push aam aam stos and mov test add xorl push mov sbb (bad) aam idivb push addb loop xchg (bad) xor pop push push add add or sbb rcrl mov add dec jge sbb sub in jo sbb stos outsb cmp jecxz out bound (bad) inc aad cmp xor into sbb or ret sbb jle adc out mov or fildll sti xchg jne daa xor lods test bound cmp shlb pop fs xor je jg mov jl mov add add add stos cmp outsl icebp jns cmp and int aad mov add aad or mov adc pop lahf jl mov inc sbb test mov xchg fcompl aas icebp add aad jle imul and jp pop imul lret repz xchg jnp,pt cmpsl mov fisubrl or jg inc sub in movsb push daa mov adc stos dec enter jb mov insb scas xchg popf imul add add add add dec push in adc gs sbb mov xchg nop imul pop (bad) add sub or outsb inc cmp out mov test fnstcw dec dec rolb and adc iret dec push mov (bad) hlt cmp xchg or lahf movsb sub sbb rorl sbb loop adc ja test lret cmc sub mov sub es cmp dec cwtl mov add ja call out gs add add add add mov test arpl mov jo mov pop or mov mov cmp xchg int3 imul int3 es aad add sbb out mov pusha scas adc lret int xor adc shrb xor adc mov xor ds mov xchg xor adc inc xchg xchg hlt xlat xchg cmpsl (bad) cli addr16 lock pop jp outsl mov rcll ljmp add movb dec fsubp sub mul cmp (bad) xchg inc lock mov sbb jbe mov inc (bad) push mov push inc dec mov sbbl jns addr16 sbb outsl test into je js push mov mov or push xchg or in dec sub push pop sbb jae adc loope inc sub jge in jnp call pushf jl jg stc push pop xlat lds out mov add add add es in sub dec and ficoml mov js mov lock loopne (bad) adc mov subl push mull xchg scas dec aad outsl jns je pop push sti mov mov adc dec pop stos das push in movsl lcall jmp shrl aaa aas jne les (bad) ss push movsb lds insb pop push loopne or sbb jmp mov cwtl pushf in xor movsb xlat xchg pop out mov add add add or clc add dec pop jb fidivrl in fisubr jecxz rcr mov insl loop in xchg (bad) push dec sbb jmp js xchg popf enter xchg fldcw dec add lds add mov fdivs clc push mov adc repz icebp adc add ljmp add and mov pop sahf stos fs pop idivb sahf scas inc cmp mov push cld cmp add add add scas xor aaa sbb dec bound mov or insb jns sbb sub pop and fs sbb out vpsubsb xchg sahf cmpsl sub movsl ficom jb jns mulps mov cmp mov lock or aas outsb movl dec mov mov bound in (bad) mov and jg data16 push fsub arpl push movsb int mov movb add add add add and cli int3 (bad) xor mov add sub add add and cmp shl lds jae mov je xchg adc mov aad mov fbstp ret pop dec sub xchg loop ret (bad) mov push adc or iret inc sub clc mov mov or or shlb add add andl or adc mov cmp jo jb mov sldt add add jnp xchg in mov dec mov jl xchg adc pop std inc icebp adc outsl shrl gs lods es or push sub mov inc dec mov or movsl add test pop pop daa lea dec push inc pop inc out shll movsb rcrb scas ret dec lods in pop int3 sub mov repz fildl mov outsl jge imul paddusw cmp mov fwait push or add add ret and in in adc jge insb int xchg inc jne cmp out push aam or or cmp sti mov xlat aaa xor popa leave pop jb sub and imul imul cmp mov les inc push xor xor or in push fstpt mov outsb lods mov push or sahf mov stos out mov lcall pop jle xlat cmp int add add add mov int3 xlat rorb add sbb or inc dec enter mov insl out cmc push jns and pop mov iret popf sub sbb sub xchg or xchg cwtl cmpsl ljmp push mov fiadd cmp sub push dec popf dec je fbstp (bad) mov out daa popf int sub stos ds pop std push xchg pusha popa dec xor lds xlat cmp add add add push xchg mov stos outsb aas pop fwait and or mov sub cmovs pop loopne cmpsb adc aaa ds aaa mov add cwtl mov mov into lcall xchg or lret rorl (bad) push inc ds hlt mov (bad) fprem sbb mov dec lock jb mov ja pop je es gs dec enter pop data16 cmc add outsl cmpsl ficom jne xchg in aaa mov dec test test and add add add add (bad) bound jl jmp and and mov cld bound je int3 xor pop (bad) (bad) sub xor push arpl sub shl xor and iret in movl or and xor lock outsl imul cwtl cltd cmpsb pop fsubr pop loopne fs inc jmp adc adc dec mov xor mov mov or push sub jg cwtl jmp jbe mov add mov pushf xor dec jae or mov cmp ret xor addr16 mov mov enter and fadd cwtl cmp mov mov shll xchg dec and jl xor xor and jmp mov inc in add and pop aaa imul jns cmpsb aaa (bad) (bad) sub sub push (bad) leave mov cwtl jp xor add push cmc xor adc sub sbb push std cli enter and lret pop js ds or xchg shrl imul xchg fiadd mov sub pop sub and sub (bad) mov sbb mov data16 sub add add cmpsl lods enter xchg fidivr sbbl push es (bad) fiadd jns jle cmp cld std lods pop jl,pn pushf (bad) insb movsl sbb sub xor enter add add add xlat ljmp sar add jns mov xchg pushf rcll jb (bad) aaa push mov iret pop in pop inc loopne cwtl jmp inc out fs xor outsl and jge inc jbe adc repnz (bad) hlt pop add hlt pop and add (bad) sub jb push bound out cli add xchg rcll cmp inc pop sbbl lret xorl pop push sahf ljmp xor cltd cmp add add sti push daa push or repz adc mov cmc or jg std pcmpeqw push in adc or outsb xor sbb repz imul cmp jg das cmp out mov push movsb stos mov jnp (bad) add or or lods push adc test cmpsb inc es lret out iret mov out (bad) scas fnstenv xlat push add xorl or mov shrl or or addr16 mov inc lret lret cli and outsl cli pusha std pop and and push inc outsb cli inc negb out popf (bad) jne mov scas mov sbb xchg js popa xor or in inc mov sub and mov ja insb leave scas aad sub push test and (bad) or sub xor (bad) cmc sbb test push push and in fistpll movsb push cs cwtl imul jge test ljmp xor mov das jg push push in lea test cmp lock add add add pop popa aas out aad inc loopne mov jns lea stos sbbl cmp popf test fdivs gs mov pop pushf test mov lahf divb or lret push mov in fdivs jle popf in sbb jae add xchg sbb jle adc dec addr16 rcl xchg insb adcb and cmp mov cmpl fxch (bad) mov or mov pop (bad) pop push jbe sbb xchg inc out add add add add pop pop jle xchg mov and imul (bad) cld addr16 (bad) dec imul mov sbb push pop inc jno lea xchg pop inc xchg lock dec xor sub (bad) rcr roll fcmovnu sbb inc push mov pop push je sub call mov cmc cmp cmc fxch xchg inc shll jns mov inc cmp repnz or push jecxz dec sub add add and sub pop out sahf dec in lret inc loopne jae inc enter jbe (bad) cmc lahf cli or inc loop pop leave push xchg jbe insb dec shrl jp fsub mov xor (bad) lock lcall sub stc sbb test xor xor mov mov cli mov xchg out insb dec cmp xorl icebp dec push gs mov mov jnp jns fnstenv out outsl js and xchg sbb add add add or imull sbb pop xchg in punpckhwd lods scas loop dec mul ret bound scas sbb ljmp data16 push movntq mov shll add mov into in scas pop or mov roll out aam dec inc push lods sbb fmull mov dec incl mov mov inc xor (bad) mov sbb mov nop sub cwtl and dec test add add add add jb inc or pop (bad) and iret dec addb pusha arpl scas add xor fwait mov add test stc xchg imul push (bad) lods mov pusha inc lret sub popa pop sar pusha imul push jo xchg in xor jecxz into pop imul sahf pop lds and mov xchg pusha lcall clc loopne push fcmovnbe adc popf repz les jns pusha dec jnp in mov add xchg mov or dec inc mov mov pop mov push xlat insb arpl lock fwait pop cmc out push out dec out jbe pop push and push mov test imul dec test (bad) or (bad) push xchg ja jge scas pop mov std inc icebp xchg jne (bad) lahf add inc icebp xor ja fisub mov aad jne fadds das cmp jg std (bad) xchg jnp repz sbb add add push mov dec inc les mov dec add push pop lods push or in add mov ds xchg adc mov pop out loope mov inc loopne loop lods ljmp sarb pop push stc jmp mov push scas mov in sahf add inc lcall lcall mov lea xchg jbe add out push and xchg ja sbb and add mov add add add or mov or pop xor into stc cmpsl lds cmpsb in (bad) push push cmp mov push int lods andl and mov cmpsb sub ja pop mov add inc sti mov add nop mov je mov imul rorl mov les inc xchg scas jns popa (bad) cmc bndstx out and dec push adc sbb add add add push insl dec mov ja (bad) fidivrl loope xchg xchg clc and inc loope pop xor cltd (bad) (bad) inc insl lods jecxz jecxz,pn rcl lahf jns push and inc bound add pop rcll sub stos (bad) negb push push (bad) mov or mov in lods xchg add push jge mov repnz insb and frstor movb aad notb mov leave stc adc adc dec push (bad) xchg push mov add add add jmp mov (bad) scas mov mov rorl ljmp jae mov bound and pop scas ficomp aad rcl scas clc (bad) dec push call and adc pushf push popf jne xor bound cmp pop dec cld or cmp push sti sub sbb sub pop repz sahf lods (bad) xor adc pushf and popa and pop jne sub dec insb mov je mov add add mov fwait adc icebp jo out or test lcall xchg sub cmp xor or sbb mov inc daa mov add jg adc pop scas mov (bad) out cmp pop mov fmul stc out cltd sti mov jb push call sahf (bad) int dec jg out and jge loope jne jae jae jmp dec cmp je push scas loop and mov or enter xor mov leave pop arpl int (bad) (bad) sub movsb (bad) inc push jl jno sub mov or imul mov lea call add fbld rcll mov and xchg fs fsubrl or (bad) pop test mov mov mov cmc xchg mov orl into push outsb mov sbb in out push out adc inc pop and mov add sti test inc xchg mov mov cli fmull xchg cmp rcll (bad) lcall pop pop shll adc jge sarl xchg adc ficom push adc mov (bad) lret sub cmpl cmpsb jle cwtl and aad add xor jp fnsave push (bad) dec imul jo mov sbb ljmp repz inc xor add add daa mull add mov mov push sbb pop pushf repnz push in ljmp cli mov xchg decb sbb pop pop sbb iret mov jl (bad) notb shl inc dec (bad) sbb xor repz xchg cmp xor fldl and push iret inc outsl jecxz cmc adc ret fs jg das xchg fldl and push int sub jmp push jl outsl ret add add sbb jl daa dec and inc or push push loope je test jecxz pop cmpsb xchg lret clc pop adc (bad) xor pushf inc mov sahf cmp adc cmp negl dec (bad) mov loope mov push mov push fdivl push push jne or dec mov mov sub std xchg pushf mov push aaa mulb in inc add fistpll subl xchg mov add add add aam mov cmp mov sbb fsts xchg stc (bad) mull xor jmp push nop xor xor pop adc pop adc sarl xchg cmp mov pop das cwtl movsl adc popf mov ss fcomi scas loope or inc push mov mov cli icebp dec inc sbb jecxz xchg cmp sahf add (bad) (bad) push sbb or jp mov cmp in sbb movb sarb mov add pop sbb fsubl (bad) mov lods add lods inc pop push or arpl stos mov push and sub pop out mov (bad) cmp (bad) sti in sub or les sbb insb cmp push mov xor mov sahf ss cmp and fs imul jle call lock pusha scas cmp xlat pop iret add cmc cmp adc add add add add je xchg icebp inc fimul mov adc bound push sbb jbe (bad) sarb icebp iret fwait scas lret push and insb fadd sbb ds xor jle xchg aas loope adc call (bad) mov sub imul enter mov rorl imul shr and testb hlt inc lods mov daa cmp divb dec cmpsl inc (bad) lret adc and aam divl add add add add adc stos shlb or stc int lcall adc jae out ja je pop fsubr mov movsl inc pop arpl sbb mov (bad) iret ret (bad) cmc out stc cmp aaa mov outsl sub mov sub andb inc add xchg mov jns das xchg mov sbb and jae sbb dec test repnz or lock bound and out xchg fstpt mov add add add pop xor xor inc sub cld bound sbb stos sbb dec sub aaa push in cmp and mov mov pop and mov arpl mov pop xor and ja into dec mov iret or (bad) mov ret mov (bad) imul cmp mov fistpll pop in lods mov scas aam lret in mov dec fwait jle pop add or dec (bad) dec inc or add add add add push jbe (bad) stos or cmp fldcw mov loop ss jo pop jmp sbb xor push cwtl cltd insl fcmovu imull bound jno inc mov inc cmpsl mov scas ficoml sbb jmp (bad) or jge lea mov pop pop scas jns insb or (bad) cmp mov repz inc sub push pop xor and aad repz mov add jmp scas jo fisub pop test jnp dec dec test cltd adc cmp std add loop jo fldl mov movsl xchg pop addb cwtl pusha ret pop rcll lea jg add fiaddl add adc aas std mov test sub sbb divb jb movsl jb inc cmp pop adc dec adc aad mov lock sub push mov jnp and xchg enter add add add ds lods out add aam sbb add inc mov jmp xchg lods sub mov and scas sbb mov sbb jae mov aas pushf sub or lods loope test pusha cmc ret into jmp arpl (bad) shll cmp orl int popf in push sub (bad) cmp add or or (bad) rclb xchg mov cmpsb jno adc aam in mov sbbb or in add add fldcw je pop ljmp xor cld push dec (bad) jbe gs inc push sub push mov sub icebp (bad) bound (bad) dec daa inc leave push dec cmp add mov (bad) clc cwtl or stos and mov loope mov (bad) test sbb push adc push lock ss cmp lcall je loopne stos push jbe cltd push mov mov mov inc repz test push fsub hlt and xor ss sti sub add add jp nop loop out sbb cmp and iret in out mov and repz hlt or rclb xor mov popf push icebp shr cmc lods into mov leave push (bad) jmp popf push jnp cmp out das dec es fscale (bad) lea adc adc div mov in ja (bad) push push es int3 les adc xlat aad aam mov (bad) mov lds push dec (bad) sbb add add add cmc mov jmp sub sbb xor mov loop cmpsb into xor scas icebp mov (bad) push add les lret pop loop mov xchg push mov add fnstcw jle shl push xor ret int out jno test stos xor mov inc xor lahf mov mov fistpll and lea incl arpl iret mov loope fsubs stos push xchg xchg aad jg test dec jno pop add enter mov sub mov xchg in xchg (bad) dec xchg jbe js or dec and outsl loop ret mov imul dec jbe jne lahf cmc ljmp adc mov push mov pop push push pushf lea adc mov loope mov mull (bad) loop js add cmpsb dec adc clc stos mov insl stos pop aad or imull add add or outsb out cld decb sahf lahf ja adc push add jl jmp mov cvtdq2ps ljmp xor jle,pt imul cs stc aam andl imul cmp mov inc cmpl push mov push add dec jmp mov xchg sub cs push call mov adc and stos mov sti pop mov inc cmp push mov mov (bad) loopne xchg or add add add add mov lods dec cmp test test hlt push mov sti xor mov sub lods aas rorl fstl nop das aaa mov mov inc sbb sub xchg lret test out mov fwait dec inc and mov inc fmull cmp inc out ds inc pushf adc mov fsubs mov incl lods fwait (bad) out fwait push mov int3 xchg int xor xor push stos xchg jnp rol in add add add add cmp xchg adc or mov xchg xor test jnp leave cs jnp mov adc and add and mov jp lcall in adc jne ficom fs outsl mov (bad) lahf fs outsl or (bad) imul sub lods (bad) lahf loop push addr16 and inc jp mov neg push into loop lret je das scas xor pop inc pop mov lret stos pop xor add mov cmpsl pop aam xchg aas test sub sbb mov add in js sbb sub pop fisttpll shl ss xchg jbe fadds shll xor or push push mov movsl cld xor popl add cmp and (bad) mov loopne out fwait pop stc divb out mov aaa rcrb dec cmc pop out cltd xchg loopne xor push inc ja cmp pushf addb add add add pop out (bad) rolb adc jp mov imul jl clc aas pop push lods mov push cmpsl xchg or out mov lcall push mov mov sub (bad) dec fimull test lahf sbb cmpl sub jbe mov stos or inc imul (bad) stos dec inc imul dec out (bad) ss ret jae sub outsb mov mov lret xchg and pop cli add xchg inc inc sbb fisubr inc hlt mull adc mov iret push xrelease inc mov in mov aam push jp lock jle repz aad cmp xor adc push nop jns xlat cld stc sbb outsb rol xchg jnp fnstsw cmc je mov test fmull or outsb pop sbbl dec jl inc cs jl xchg in or stos add xor divb sub dec add add add xor lret xor movb imul stos lock aaa xchg push stos adc and fs mov insl out jne sbb lock inc pop mov pop repnz inc leave xlat (bad) mov daa jb jge repz push (bad) cmp sti dec rclb cmp or dec jp out in sub dec or js lahf (bad) pop cmp cmpsb andnps add es mov push add add add jg xor xchg ja jl xchg sub adc lock jecxz je (bad) xor cmc out xor ds mov insb dec cmc cmc push mov and in fisubl pop iret xor or push shr adc ret jl imul scas or add and (bad) fbstp les jge int pop (bad) xlat sub sbb ret or int3 xor pop xor or inc movsb jae rolb addr16 pop push fwait lds add add add add (bad) mov ja cmp lret adc jmp stos stos cwtl xor adc lock mov inc pop xor daa enter mov xrelease sub lret idivb mov mov and movsl test je mov scas cmp mov fcmovnu imul rol sbb push je ljmp or aad sahf add sbb addb dec scas jl (bad) pusha pop mov ret add add add add add sahf cld bnd dec push or fcmovne xchg je jbe dec mov push dec ljmp mov shr adc je sub mov sbb ljmp (bad) xchg out xchg mov out adc mov loopne addr16 repnz jbe popa (bad) pop xchg es pop lds insl lcall fdivrp ret xor incb mov aad imul cmpsb mov incl mov add add add add imul cltd mov enter adc pop pop imul arpl adc inc inc mov sbb rclb pop xchg in fwait dec sub (bad) push loopne adcl mov daa aas iret add jnp and fisub dec add mov aad mov xchg ret jbe adc into imul popf sub jle iret cmpsb imul bound (bad) insb push push push sbb push jmp cmp add add inc push call inc xor inc aaa and sub popa imul std mov jbe mov push inc outsl fldlg2 imul int3 fistpll add mov xchg sub and or xor in jp test into (bad) in aaa jmp lds testl push (bad) dec lcall daa leave pop mov adc sarb or dec fisttpl loope adc add add add add (bad) stc out cmp sub jb lret and or outsl out xlat inc insl mov sahf rcrl push aaa mov add cltd add repz (bad) sti inc adc cwtl (bad) imul lods mov (bad) shrl mov loope popf fwait icebp sub inc addr16 pop cltd aad test scas int3 in adc shr push add add sbb ds into cmp or pop pop pop push sbb add ja out xor add add add out sbb pop repnz sbb ds ss xor lret add movsb ficomp cmc imul xor or lret mov push inc (bad) js fidivr dec push in mov sub sbb cmp add pop pop mov daa gs jg pop (bad) dec aad mov and (bad) xor outsl insb mov or loop cltd (bad) fnstsw inc pop movsl push lods jmp inc sbb push xchg arpl fsubs add add xchg (bad) call ret dec push subl into stc fsts shlb (bad) rorb ret mov dec sbb loopne xchg mov cmp ds (bad) lret bound xor xchg cmp jns jo insb mov pop repnz out addr16 in stos sbb push cmp mov fdivr pusha and js add (bad) mov and mov arpl stos (bad) and add add add add inc or or rcl idivl cmp outsl (bad) into das jle dec cltd fldl2e and add or out sub mov inc mov leave mov jne inc out (bad) xchg imul (bad) fist in pop aam jns dec lret and mov icebp insb outsl jl test sbb mov es gs ljmp sbb loope jge lods push (bad) xor add pop jnp mov or imul arpl xchg add add add xor add mov cmp inc xchg fistl jb sbb jae scas paddusw arpl test sbb int aad invd out push or add scas jle mov add enter push add adc fwait idiv xlat loope sub inc aam shrb xchg dec xchg mov rcll push sub sub mov cs jmp ds mov or add add add pushf xchg fwait pop inc mov cs xchg std dec sarb pmulhw xor int3 add adc push aam insl cmp (bad) jns add xor enter jmp lock lds or jno loopne mov call mov sub ljmp xor fwait call inc mov sub add sbbl push dec inc pop call jmp adc mov jle pop lcall in adc fiadd jae imul add add add add test femms outsb ja outsb testl les fwait cwtl pop in fsubs call pusha cltd mul (bad) jmp push (bad) lods stos xchg cmp xchg or cmp cltd push and aaa int3 inc sub push or ret mov sbb adc xchg push and pop xor shll sub lock les dec rcrl daa inc iret add in sbb pop and add in xchg ljmp fisttpll jo mov add pop popf dec stos cmc jmp cmpsb xor je xor arpl pop mov cld stos (bad) pop dec jp shl jecxz aam loopne ficom out push (bad) outsl add ret test mov cmpl jg xchg cmp mov int les imul add jb push leave movsb movsl out jg ds jno inc inc jl jge das push sarb xchg jl push cs mov in pop ss repnz add add adc test add cltd mov jle adc sub repnz fidivr pop pop jne popf add ljmp pop cmp cmp insb pop loop add xrelease xchg or sub repnz leave (bad) or jo fcmovnbe (bad) aam out addl jnp (bad) movsb icebp stc push cmpsl fidivrl insl jae mov add pop jb cmpsl sub or dec (bad) insl jge xor push fdivrl (bad) push add add add jp popf addr16 cltd xchg and mov dec aaa idivl jbe hlt cmp (bad) push pop cs and mov (bad) sub insl out cmc xchg lret mov cli xor cwtl (bad) loop sahf push adc cmp sub pop stc push sar fsubl pop pop test or add xchg cmpsl jbe insl lahf test lea cwtl sub jmp push sub push sbb movsb popf ret xor add add add icebp ss lret shrb les stc push imull xor pop or push out xlat dec in in and scas cmpsl xor lods adc std int3 cli (bad) (bad) or jno stos je iret sub ret mov imulb in out ds pop in icebp sub or push jecxz out xorb and out and dec sub lahf cwtl adc int3 cld xchg test xchg sub in jno sub or call sbb enter add add add cmpsl xor mov test in sar adc inc mov jno lea push imul aam cwtl fwait push xor sahf (bad) ficoml xchg mov fwait movsb push cwtl xor cmp mov das cli dec mov jp frstor dec sbb pusha push dec ret pop push jmp aas ret push pop jne mov ljmp adc mov xor xchg jle xchg or pop pop sbb xchg int3 (bad) push lahf decl icebp sbb aam dec dec fs aaa in pop out shr pop mov cli ljmp sahf and inc div lea cwtd inc pop fidivr ds xchg dec xchg add or xor xchg outsb inc lcall jbe inc movsl mov and movsb push mov mov outsb adc push gs mov jecxz xchg cld and div push sbb fistp jecxz sarl dec add mov mov mov rcrb sub add ret adc sub xchg int3 scas pop mov fldcw mov test repnz xchg sub mov mov loope xchg call xor mov and jmp xchg push mov rcll mov ficoml (bad) scas popf xchg pop arpl in xor gs (bad) bound xor dec sbb divb cmp inc inc mov sbb mov (bad) jne (bad) notl jne shll add add add add push mov call xchg jge jecxz jo xchg in mov das adc and xor inc xor mov (bad) (bad) mov in in jnp dec push test int3 cmpsl pop sbb xchg add cmp mov (bad) xchg sub pushf inc sbb mov cmp mov ds dec push jae sarl icebp sbb pop inc lods mov sbb sahf and (bad) leave or (bad) xchg movb inc dec xchg sbb push lds aam stc push dec movsl or inc add mov mov xor cltd cltd xchg jg orl push imul sbb mov inc adc mov ss sahf cli stos into lods mov in sti sub (bad) rol mov inc arpl ja outsl dec push mov lds cmpl xchg mov pop popa mov mov lahf and pop lods cmp shlb add add add add mov mov inc ret add mov dec and inc sbb aad (bad) add cwtl pop jb xor jb mov cld jne loope insl popf mov xor or lds loopne or push dec adc into test mov mov push pop and mov mov push mov ja mov mov mov push lret xchg jmp fwait loopne syscall jecxz into stc push mov lret sub add test int3 sub stc loop,pn mov sub xchg mul lds jmp loopne pop movsl xchg stc adc jge cld cltd adc mov lods jg in aad cmp pop cmp gs arpl push cmp sub jl in xor call hlt std dec or stos fidiv and dec jno sbb pusha cmp inc jl mov push pushf ljmp imul jb movsl cmp add add xchg dec lock push fcmovne outsl sar sbb adc lahf inc sub mov movsb aam shl push insb dec sbb or pop pushf out mov cmpsl mov popaw jnp xor jmp jmp jmp in mov aas jnp jb stc push scas pushf pop jg sub and jne cs shll fdivp iret xchg dec sub mov pop or add lret xchg push lods adc pop (bad) mov mov mov add mov xor push or test rclb dec in js push xor out xor fadds mov popf addr16 or xor xlat lret or mov dec imul dec fsts data16 and xchg in lahf lods cld mov sbb out lock jl fst popf subl or adc pop out inc shlb xor jg (bad) test sahf xor mov add add add ja xor cs jne imul mov adc stos push inc push jb dec xchg imul or cltd dec mov sbb inc stos xchg je cmp xchg (bad) jb dec fcomp fildll jle dec cld xor jae cmp push or rcrl or rcl std xchg imul xor mov mov xor mov ss mov dec lods pushf (bad) xor sbb cmp mov push xor add jno out iret sub jge pusha andps sbb es int lcall adc mov xchg arpl mov sub hlt sub pop gs lods adc cmp xor push les popl fwait push push adc inc shlb jnp dec daa insl loope lock jge cmpsb xchg in shrb push jne test sti add add add cmp imul cmp mov out ss push pop xor mov popf lods hlt and call int sbb ss shll sub push out das inc sub add sub cmp adc int jbe cmp jns daa lds fcoms jecxz xor rorl iret jne js hlt add adc lahf bound std jecxz xor adc mov and inc add mov add sub sbb cwtl loope cmpsl mov leave xchg loopne out gs iret or jp out inc test fidivr pop pop (bad) xchg gs jno adc (bad) jb add cmp mov movsb push lock sub adc push or mov inc sarb sbb xchg xor jne xchg sbb mov popf sbb dec add jno call cmp repz inc dec imul add add add imul add iret mov push scas pop fmuls mov mov das pop xor clc repz sbb xchg inc je aad loope cwtl lret scas fnstenv fdivrl sbb out dec xor ja rcll test mov stos push setge sbb (bad) add mov mov idivb ret jo xchg fwait adc pop push xchg push mov pop mov add add add lods mov test fldz fwait push lds add cmp xor cmp in mov mov xchg insl out loope dec lret inc sub dec (bad) ss inc mov pop sbb rolb call inc jbe cld popf xor push aaa out inc das or (bad) push mov (bad) repz mov cmp push out idivl lds add rorb push sub push push and jb,pt mov push add add add sbb jbe cmp ljmp pushf jbe scas xorl pop dec mov outsb dec das xlat ret pop mov (bad) aad inc fidivr add pop jecxz inc dec sbb std jle sub leave sbb int js aam call push add and jge cltd cmp push jg xchg xchg rolb out rol and xchg xchg pop test sbb jp lcall movsb jne inc sti imul stc xor add add add dec push gs daa mov or dec pop add fcompl jge out pop out mov enter shrl or pop sahf push sub jae cwtl pop jo sub xchg out out aas fwait xchg push stc cmc enter inc (bad) push (bad) sbb mov ja xor hlt or and lods fcompl fwait push push push fiadd dec addr16 clc pop xchg outsb dec outsl (bad) jno lcall addr16 inc enter pushf add add add mov enter pop cmp je nop (bad) out ds sbb mov mov das stc (bad) inc jl lret adc jnp mov pop (bad) xchg mov sbb lods pop in cmpsl test xchg fsubrs aas mov mov jnp push cld lret scas inc xor daa rep dec pusha out push lds xchg pop pushf cli mov fadds outsb popf ja sahf mov cmp xchg test and push mov inc mov pop stos add add add int out rclb das popa movsb lahf pop rorl daa insb sti inc xor test fisubl jg xlat cs (bad) loope mov in push ret outsb adc adc ret sbb jmp fisttpll dec aaa int3 test mov xor jle add lea mov mov sbbb jge pop xor push test (bad) and dec ss mov dec mov sub ljmp add add add add test ret xor inc (bad) push xchg xchg repz subl bound sub sti das sbb cmpl lret (bad) out sub out push std cli aaa xchg gs shr int jecxz pop jne cmp xchg outsb mov (bad) (bad) loope movsl repnz popa aad lcall xchg add in pusha mov xor out inc xor mov push mov and jb inc popa into ret and inc mov xchg divb jo xchg xchg (bad) cmp fs fdivrs jl adc iret cmp mov repnz neg in loope xchg js jmp pushl outsl cmp iret xchg xor es jb call adc mov ffreep dec inc addl xchg fwait (bad) sahf bound push ret push data16 cmp or mov dec test pushf add cmp cmp xchg rorb nop lods jp lds fdivs add add clc jbe add mov (bad) mov or (bad) fsts mov jecxz je jns loope cmpsl push mov xchg jno,pn rcll xor or cmp shll lret xchg cld in xor shl das pop insb lcall and jo jge mov xchg gs xlat adc sbb xchg mov cmp in negb hlt sbb dec es mov sbb into push mov add add scas jg stos cltd lret pop mov mov ljmp out adc or shr dec insb adc scas sub lods loopne cmp in and out inc ja test dec pop leave aas xchg fcoml inc fdivl in inc push popa iret mov sti cmpsb test popf enter adc cmc lahf inc push fs push jae pop dec imulb or iret and add popf xchg movsl push or cmp aaa jns test sbb pop sahf outsb daa xchg pusha pop xchg into daa cmp add add add xlat test mov fnop out mov rcll test sub mov cld notl (bad) push fstl les push fsubrs outsb cmp hlt xchg mov pop lahf aad sub xchg test loop cmpsb sbb cli jno outsb pop imul mov jns out and cwtl cwtl mov lcall pop jmp rclb push mov sub adc (bad) iret pop imul leave add lds pop cli data16 mov fwait and xor roll (bad) bound pushl cld xor jle popa add mov cmp xorl inc ja dec mov andl insl dec jns rorb adc xor and gs js mov sbb fdivp arpl and and pop xchg xchg popf cmp jnp (bad) xor push repz sbb push loop imul inc imul add add add stos push inc mov inc adc xchg push mov sub leave in pop or sahf sub dec cmp clc negb dec shl mov repz jp mov ja push fdivl fnstenv or sahf cmp shlb pop pop pop mov lret mov fild (bad) xchg fwait mov (bad) pop cs rorl fnsave std gs push pop cltd and cld cltd lea movl into adc (bad) push sahf mov add aam mov in loope xchg mulps pop sub dec les out cs xchg out pop cmpsb gs lret popa cmp xor jno sbb les cvttps2pi sbb add js jmp das mov js push pop scas inc mov cwtl fdivl pop lock or cmpsl repnz sub fcmovne sub in xchg push cmpsb push inc mov or cmp xor and (bad) aas cltd add mov fwait sar sbbl mov (bad) das ljmp sbb pusha jno dec inc call mov push repz cmp test cld shrl sbb pop in int mov inc fs push cwtl adc (bad) (bad) push inc loope mov and inc ljmp fs addr16 cs (bad) repz sbb rorl lods sbb aad fnstsw add add dec into outsb das pop jne fdivrp rdmsr ret ja mov cmpsb cli adc test push adc cmpsb es xchg les sub cmp aas cmp (bad) cli test movsb bound divb jmp call or (bad) lods mov enter out adc push sti aaa sub in movsb js inc jno mov xor mov and dec push mov lret mov loopne xor roll add add mov out add xor fnstsw std orl jmp repz add rcrb lods dec fdivl in pop push mull cmp inc inc (bad) mov addr16 lret jno movsl (bad) dec insb ljmp mov out push aam inc sub nop ja sub push sbb sbb in cltd (bad) adc inc xor (bad) dec jb cli mov lahf into xchg fcmovnb adc or lock cltd aas cwtl push or sbb push aaa inc gs inc mov jl add add add xchg repnz cmp aaa jmp cmc jg test mull and mov fild cmp cmp jne rorb (bad) prefetcht1 pop mov cmp cld lods mov mov lods mov faddl jnp movsl outsb adc push and (bad) jns mov dec push pop js mov jmp loope cmc adc xor or sbb sbb or shrb sahf jbe stos xor scas sbb out pop pop ja mov xor add stc pusha mov pop mov iret sbb pop xlat testb outsl cmpsb xchg cmc clc ret sbb and cmpsl adc mov xchg push adc mov add and pop leave aaa xlat inc ret jo fs fs push push loopne es je dec dec movsb std inc mov inc cmp andl dec add lock push sbb mov movsl test lahf fwait out mov loopne push arpl enter add add add je jmp out pop loop dec mov mov jl imul add sbb (bad) int3 hlt push mov aam push adc add inc frstor dec (bad) mov adc mov jne sub pop or ja call scas push stc das decl add (bad) movsl adc fdivrl lret sbb inc dec pop and lahf push cmpsb push outsb cmp cmp mov arpl dec jno and dec scas cmp cmpsb mov add inc jge mov pop addl add add add ja add mov std sub mov mov pop xor addr16 mov imul cmp push in clc ficompl inc insl mov and or fs sbb mov loope pop ljmp out and sbb xor sbb fcomp pop add mov inc cmp iret js mov stc das movsl inc xchg dec inc mov repnz ret outsl sbb add add add inc arpl icebp pop push sbb xor mov lods das pushf xor push out ds flds inc fldt jae cs mov cli std xor int3 jmp dec stos mov xorl adc es and jb dec xchg add ret jbe mov and mov push out sbb (bad) (bad) mov lods cli inc mov in mov mov movsl jnp repz lods mov adc sbb sbb lock add add add addl push push push cmp insb cwtl adc mov divl xchg fildll lcall arpl pushf mov arpl push push jle dec sbb bound shl (bad) fdiv fnstsw mov sahf cli call outsl xor inc popa mov out loop rcrb and mov jb outsl jecxz aam pop sub movsl enter inc mov pop stos (bad) xchg stos inc (bad) lret xor fdivp dec popf rcr jle jle add add add (bad) pop outsl sahf sar adc mov adc or cmpsl cmc pushf inc add shlb and jp aaa js inc xchg jp (bad) jmp outsl std push imul fldln2 emms mov inc movsb jne cmp sbb clc aas clc cmpsl inc test repnz and scas or dec push sbb and dec pushf and sub cmc cld fwait leave cld fisttpl xchg jne stos rcll xor mov sbb sub (bad) sub pop movl dec mov iret fldcw loop popa mov and jecxz and jae jmp pop flds sub sbb push addr16 or nop and jne pop cs lahf or icebp sbb jne jo adc inc xlat shrl pop test sarb movsb xor inc insl ja push jns xchg lds dec enter jmp mov dec sub add add add add dec (bad) jecxz ja loop xor xchg movsb fistl mov mov cmp push sarb test sub push adc (bad) push adc dec mov subl xchg jo adc dec jg and mov lods mov sarb push mov inc popf mov imul and pushf bound in call test call xor (bad) mov pop adc lea add add js sarb test pop cmovo cmpsl mov ficompl jg popf stc inc movups lcall rclb pop popf sub jle fimull (bad) pop xchg rorb or and sub add mov mov xchg jnp fwait adc xor cmpsl mov lds rclb shll out arpl cld jl ja jg lret sub cmp adc push and adc add add add out out xor mov mov cld sti xchg xorl and jl dec and or or fstpt imul fsts xchg inc push push cmp and (bad) dec int rolb mov aam (bad) mov sbb add dec lods fwait addr16 adcl push inc push loop mov mov dec dec movsb imul jbe xchg push sub cmpsb jne adc test js jp xor mov inc jae test sbb sub and xor (bad) lods sti lret adc (bad) fisttpll or ror pop repz sub xchg push sarb lea pop pop jo,pn fistp pop enter push (bad) mov fnstsw push cli outsl dec fs sets daa dec jp dec outsl insb daa or repz js and lahf cld pop hlt popa pushf inc dec out insb sub lods (bad) les pop cmc sahf es pop (bad) in mov push aad loopne lret imul add add jp les mov imulb pop out scas dec popa xchg mov gs inc mov sbb or iret sar leave pushl cmp xor mov test cmc xchg dec dec push xor mov sub mov lock daa mov dec xchg dec or mov ds adc mov cli mov and cld loop or inc call and enter loopne shlb mov cmpsl adc into shrl (bad) dec insl lcall lds movsb push arpl pop inc outsl mov ljmp popa (bad) xor pop scas sbb addr16 (bad) aam outsl and lret add fmull cwtl idivb adc nop imul push cmpl push mov cmpsl mov add jg mov jno sbb testb loopne jge mov pop add aas push ds sbb add lcall inc stc xor and add sbb pushf push cmp pop sbb iret jne xchg negl (bad) lahf data16 and ljmp stos test cwtl jmp addb test xor xchg rol fstpt scas sbb jo (bad) sub jge int out mov into enter mov add push or jb shr (bad) icebp jl jge and ds add add add xchg jae (bad) pop push out jne out adc (bad) das fwait pop ljmp negb mov shlb mov inc sbb inc inc rcll jle jle or std push dec ret mov xor pop xlat outsb dec outsb lret (bad) inc pop lock dec mov (bad) into mov mov push sbb lcall cs test out cmc jb add test insl pop push mov add add add sub push ficom fucomip in dec arpl push dec adc into movsl jb xor sub inc popf pop lcall sub cmp lahf pop add lcall xlat pop mov call pop jnp push (bad) xor and add dec mov sbb ljmp lret cmp xchg js jbe push cmp xchg add fdivs in aam in lods test mov pop negb add mov icebp ret inc or nop xchg insb stos sub xor ja mov es add sub call xor sub or outsb push repz cmp pop jns sbb and std (bad) je loop jb or push imulb js leave aam inc xchg daa sbb cwtl lds in movsl loope (bad) ffree and jp sarb cmp push xor dec cmp imul icebp mov movb add add add ljmp cli dec cmpsb mov and test pop mov adc sub push adc mov xchg fwait mov xchg popf lret cli or inc cmp lock push adc cmpsb add insl jb mov mov mov je mov js cmc out push push and loop cwtl pop sbb or adc or fidiv xor (bad) xchg xorl iret cmp dec sbb sub add add add inc xchg inc rolb test adc ffree sbb jnp (bad) jns mov imul sbb mov mov adc scas iret ret (bad) movsl nop add daa lods clc cmc jg push imul pushf mov ret scas xchg call roll xchg sub (bad) js xor cmp jns or imul xchg dec jge inc mov sbb mov cmp imul and cmp out jo add add add ror insb sub jmp rcll call xchg pop out orl cld ds xor inc fwait adc or stos xlat popa iret pop clc cmpsb jno mov arpl clc dec test push out popf mov lods pop imul push jmp mov fmuls sub mov repz dec ret inc fistpl daa pop iret push jle mov (bad) cli jl mov xor mov add add add cmp mov enter push push ficom mov jp pop and dec js jge rol hlt sbb jmp addr16 mov mov cmc mov in mov cmc mov (bad) scas push pushf or test sub jno cmpsb jne jg lret sbb test dec incb adc pop scas (bad) stc mov decl push sbb inc inc ret xchg mov push sub stc push add fmull das inc fisttpll fucom insl cwtl jg jnp insb xor pop lret leave push jne xor lock and jbe arpl pop adc repz xor mov xchg in bound call xchg sahf mov faddp cltd (bad) mov popf pop adc dec scas mov lret pusha jecxz sub inc xchg sub repz lcall push cwtl push or imul mov ds stc xchg call xchg mov push movsb mov lods mov jge mov fsubp ljmp lock test fdivrl lret fild inc adc mov xchg cmp or sub test (bad) fs sbb roll imul xor hlt nop in (bad) xor cli in outsb add push sbb sub or inc mov mov movsb mov sbb add adc mov outsb adc cmp cltd xchg and lods add add add add xchg add (bad) ja cmp outsb mov ss xchg sub xchg and add add punpcklbw ds mov mov pop idivb cmp ja int3 mov xor mov ret xchg fwait inc sub orb mov xchg loope enter popa cmpsb loope cmp loope nop out add dec push dec mov clc gs push dec flds sub data16 aas aas jp lods and push pusha xchg enter add add add add add cmp and out or push push mov mov xchg fs mov aam loop cltd roll dec arpl negl outsl pop xor stc xor lret out pop pop mov ss xchg rcl jge js push jb sbb mov add sti push xchg jns mov xor sub out pop pop pop fs xor pop outsl dec dec sbbl iret xorb mov (bad) hlt je nop mov sar clc or fimull dec pop jne sub fistpll mov add add add add inc icebp aaa mov sbb (bad) lock pop jl xchg mov pusha stos inc xchg mov cs mov outsb icebp stos aaa (bad) scas (bad) sti std mov add adcb ljmp jmp call ds mov sbb adc out add (bad) mov inc shr inc mov test inc inc jge outsl ds add inc mov andb xor jae xchg fwait or test arpl add ds mov dec xor outsb imul lahf mov leave pop jl add mov add pop xchg inc pop movsl adc jb xchg jae xor add or dec jne pushf int popf xor jl cmp das lret mov mov pop mov test sub scas pop inc fsubl insl enter es sbb push lret outsl add mov dec push push xchg and sti jne and aaa dec pop fldt add adcl xchg das sar lds mov std and push adc xchg or or cmp fstps push jb hlt lret add xchg mov sbb movsb mov pop mov jns mov fs aaa mov push xor sub imul inc scas xchg in repz push pop es lods addb xor cmp out sbb cmp and in (bad) out lods sahf pop xchg lret add sti push add add add add (bad) pop sarb inc jb stos xor (bad) dec ds daa inc sub addr16 mov gs cmp aad rcr (bad) mov imul sti sbb mov aas mov cli popw mov in enter popa adc cmp xchg pushf dec xor aas test jp inc adc sbb pop sub test pop loop adc call sti dec push cmp fs aam or stos mov jecxz add add add add mov inc jp dec pop push xchg mov mov dec pusha clc mov cld rcrb jne lret in push (bad) in int loopne xchg out call in sub in or pop sbb (bad) sub pop orl adc add fbld and aad cltd and lock inc inc add and popf or dec mov ficoml sub in jmp in dec pop (bad) pop lahf fdivs into hlt ss add add add add xchg repz cmp test movsb add fdiv cltd lods jbe mov in dec and add mov popa xor pop xor jge fiaddl outsb fs scas sbb aad jno xor outsl add dec ret push (bad) jg jb push add rcrl int aad jns movsl or xchg pop mov cmp pusha in xchg pop loopne mov int ja daa mov inc inc call mov cmpsl clc mov inc lcall add add add add xchg sti and lods cmp inc mov sub cmp imul addl mov xchg mov pushf push inc and and jb xchg push fidivl out mov (bad) xor icebp dec cmp xor sub (bad) pop (bad) mov push push lea push lahf jne aaa jl pop mov mov lock xchg lret (bad) repz scas incl jecxz ja jl sbb adc es mov inc xchg fdiv jb andl add add (bad) or push mov push jno scas movsl rcrl lret xchg pop xchg mov and lea test lods pop push decl push pop ss daa jo mov cmp pop sub sti movsl sbb aas push bound aaa aam add or push adc jl xchg mulb insl add pop sub loop (bad) mov cmp push sarl fsubp add sbb cs jmp dec push xor and popa dec add add add adc lods ss pop fcomps xor push sti out mov std push imulb pop and test pop pusha movsb mov xor mov mov mov mov mov ret adc mov cli daa inc jbe dec sub fs sahf daa je pop enter adc (bad) xchg pop nop jne push jmp inc mov xchg xor sub jl push int sbb cmp add add add ljmp fnstsw dec xchg jb ss lods jne rclb push dec (bad) xor xchg fs xchg dec stc int aam sub test sti adc xchg fadd jge shrb pop inc xor xchg mov mov std dec and stos xchg cltd push aam cmp mov pushw xchg xchg dec inc and adc std aam cmp jbe push in movsb inc push push pop insb ja xor data16 add add add jbe add (bad) cld test pop nop adc lahf xor inc stc mov mov pushf test rcll test dec pop cld cmp add fistp in and jge mov push mov sub xchg cs pushf insb mov test arpl pop mov sbb loopne aam push outsb cmp push and cmp push lcall xchg adc hlt sbb sub cmp xchg jmp adc adc bound push addr16 xor add les arpl outsl fiadd sbb mov lcall in dec sub cmc dec jno fs pop and xchg je push sbb mov lcall jle push mov lret cmp xchg lret int3 pop (bad) fisubrl icebp mov stos inc push push fnstsw cmp jle and leave loopne xchg cmp or lock xchg fsubrs pop or dec in dec addr16 cld or repz sub data16 lock add add cmc and mov rol leave movsb ficoml push jcxz ret mov loope lock mov push push scas jp sub aaa xchg xchg mov dec xor and pop or outsl ret inc xchg mov jno inc insb sub out or sub popf push rclb (bad) jae loope,pn xchg jmp lret sbb cmp mov inc mov pop inc cmp data16 adc rolb add add add or insl outsb inc je ljmp es ret sbb lret fnstenv sub (bad) xor xchg ficompl out pop xor je pop leave adc push dec cld sahf iret data16 sub fadds (bad) or (bad) les cmp or cli imul fsubs sti imul (bad) sbb es jns sti (bad) fsqrt cmp jle adcl add or sbb mov (bad) leave inc into aaa cmpl mov xor pop lock arpl cmp cs push inc lret or push das push aad out xchg xlat rorb and sub jbe push adc fistpll rcll mov jle lea fistpll cmp pop enter into idivl repz push cli repnz iret nop or insb test mov je incl lcall out lcall popa sarl ds or xlat repnz xchg lea loop lahf sub jne mov mov sub shl inc adc mov cltd decl add adc fcompl psubd movnti pusha xchg mov test lods movsl imul popf aam (bad) pop adc push adc arpl aas fisttpl dec push out push xchg fnsave aad pop xchg push loope rorb mov mov push in push mov push add inc outsl push or stos jo aam fbld (bad) lcall cs outsb add mov (bad) push loope xor jl dec int3 (bad) bound lods sbb in lods dec xchg jno fwait mov sub sbb (bad) mov je or nop sbb and jno mov lcall lret push jle test cmp xlat loopne (bad) das mov arpl int das push imul stc fdivrs push daa stos mov lcall or movsb push jl xchg lcall adc fnstsw jle ret lock (bad) inc xor push mov sti hlt push xchg (bad) push sbb daa test mov orl cmp or in (bad) jl jne jge jmp (bad) out inc dec sub mov adc fcomps mov xor xchg out hlt pop in sahf clc pop jbe fdivl add add add jl leave dec mov dec adc sbb into jne lods aas ret sbb cmp sub mov (bad) rorl xor ljmp xchg jge pop lret insl mov repz pop inc push xchg cmpsl xchg nop cmp and scas popf aas push stos and es sub push mov jmp pop jb sub movsb mov cmpsl sarb jno out xchg dec mov or adc mov add add add lock xor xor mov sarl jle sbb xor (bad) push xor (bad) push aaa inc push jecxz xchg test dec xchg ss pop ja push adc mov ret lock (bad) mov test clc inc xor cwtl in xor sbb adc add mov pushf faddl push mov dec mov mov (bad) sahf jno (bad) push fnstcw into adc xor xchg hlt insb cmp icebp dec bound add add add xor xchg add adc sbb (bad) add test adc xchg xchg test nop fidivl jle loop addl aaa or enter push iret pop jno mov adc cmp mov pushf jne add sar mov dec inc (bad) aaa sbb scas (bad) (bad) in sbb inc mov (bad) or out jle mov adc loop adc add loop (bad) iret sub xchg push and add js aas xor jp push sti test sahf cmp jge jmp call sub icebp (bad) push mov lods adc hlt cmp ss pop pop dec xchg or arpl mov mov push jbe fs mov push daa sarl xchg fwait cmp push clc mov push andl xor pusha push mov push lret push cmp jmp adc cmpsb jmp ss cmpsl mov in pushf pop flds pop mov add add add add aam lcall sub pop push mov cmp pop loope loopne cmp cwtl pushf pop test or add loope rorb loope inc sbb mov std das adc (bad) stos in outsb adc sbb popf fistpll ss ds sbb popf sbb sbb inc cmp jno xor push inc das pop mov cmp adc pop or cmp popa cmp (bad) add xor xlat adc push mov pop sbb xchg test add aas dec arpl rolb out iret lock inc test ja call adc xchg jl jb test xchg lods adcl xchg xchg icebp xchg test adc jbe pop pop loope ljmp push pop ds (bad) bsf imul insb or xchg sub outsb rolb adc add add add lahf sub (bad) mov cmc loopne cmpsb ds add jge dec in (bad) mov sti std push mov cs adc mov in mov xor xlat cmpsb pop (bad) xor add shll test dec push pop popf jmp repz (bad) mov pop jne xchg push add mov lds mov mov inc repnz cmp xor test (bad) or addr16 inc sahf fnstcw cmp mov jb mov sbb icebp lds sbbl xchg adc mov and mov adc dec push cwtl cmpsb xchg rcrl outsl push cmp and push cmpsb mov mov mov and mov cmp push (bad) sbb sbb and xchg xor aas loope inc fimull out ss ret stc mov xchg fnstenv inc cmp (bad) shr rcl sub or (bad) psubq sub (bad) lret jbe add sub lods hlt ret adc rcr lock mov jp sbb lock cmc xor mov mov mov mov add mov adc lret sub icebp mov jns jbe pop jge or cwtl hlt repz leave and mov mov repz popf push je add mov scas or stos dec rclb xchg jnp in add dec adc add add in (bad) adc lods repz fst cld mov repz insl pop xchg lahf adc es sbbb ljmp push mov push mov mov and stos sub xor insb lds xchg orl popl lods cmp pushf fimul ret cmp jle mov in fidiv stos add pop cmp pop xchg lock adc out xchg jle sbb jp and xchg jp push dec ret add add sub rorl mov inc mov lods inc jnp into (bad) stos dec sub jo or movsb addr16 inc in imul pop cli pusha xchg lcall cmp insl adc addr16 cmpl lds cmp cs les push and jge ficoml cmp pop (bad) lret and pop jmp cmp mov lcall push add cmp movsl sti stos inc cmc jns loop adc add add pop mov mov mov das and fs push lock or fdivrs dec rorb shl cmp daa cmp adc test dec xor mov rolb jb mov pop ss stos jb dec xor repz adc dec jnp lret repz mov mov xor lods sub mov repz (bad) xchg sub or adc mov stos sub pushf inc inc fwait xlat sub add inc pop sbb fsubr scas and fwait dec cli pop and mov cmp into mov inc in pusha mov jne or insl sub add adc bound pop fisttpl pop push mov pop test pop sub or dec mov or xor push add bound pusha cmp fisubr rcl xlat push inc sbb int3 mov or xor add fisttpl cs xor and add add add adc imul or xor sub push jnp call mov lcall insb lahf pop jl inc mov dec push push sub sub aam xlat or imul pop and movsb jp in (bad) sbb add add xor cli jnp cmp xchg nop xchg rcrl push shrl or jp flds add adcl movb add add add nop outsb mov push rolb lods dec lret jle jmp je test mov or fcoml jbe les pop jmp mov push jecxz mov fcmovne scas dec inc mov jl data16 mov xor jns cmpsl mul (bad) add or xlat adc popf push jnp and outsl rolb movsl inc call or movsl mov test push inc or xchg or icebp sub repz outsl add add add into (bad) gs pop rcll jae imul mov es pop push dec fmuls or push xor aas push es cwtl pop das or adc fimull dec dec std int andb mov (bad) jno cmovle add push jle dec idivb xchg or push sbb lods sub push adcb add insl mov adc mov and int mov add add add js adc push (bad) movsl sub jmp and pop adc cltd xchg sub pop outsl pop mov call mov aaa jbe movlhps cltd push push sub outsb inc insl push sub data16 mov mov or loop or adc and orw loop scas jmp adc cltd cmp sbb out or faddl jo out cli xor or cmp popa scas lea add add add xor jl in mov xchg dec mull scas and (bad) fcomps shll stos and xor fmull xlat jge cmp lret fld and lea pop ror sbb adc jnp data16 in movsl ljmp leave hlt inc sarb adc pop dec shlb sub les mov cmc lret inc ss mov repz push jbe shlb mov lcall mov pop mov and out cmp mov les push pushf mov mov icebp out cmp lcall add nop or inc fmull and xchg stos fucomip mov jnp pushl (bad) cli and nop pop inc test mov sbb mov dec jb insb jno jl rclb xchg lret xchg jae pop xchg inc inc sbb hlt jns mov pop dec scas cs and je and add add add mov or mov mov push (bad) iret (bad) lret popa in inc and negl or xlat xchg mov adc inc cld xchg mov inc inc pop popf (bad) cmc dec mov jnp add mov in and pop pop outsb add (bad) repnz (bad) pop fistpl movsl test pop cwtl or int add mov and mov lods (bad) in lcall adc adc (bad) add popa xlat sbb dec iret push adc imul xchg cmp push pop mov or adc stos mov inc mov jne jg fist xor lock pop je fwait add daa xchg jb add inc mov adc mov push lret jg pop pop (bad) stc or nop jnp mov bound ljmp and ljmp add add add mov mov fs movsl xor faddl push cld insb jb jmp (bad) dec cs call sbb shll mov iret test mov shrl aad add ficom (bad) and lret and sti sti and cmp mov inc sub cmp sub das add aad idiv loop lret or jns out jns pushf jo iret jp dec or imul mov cli sti mov add add add add mov (bad) ja or fild sbb sbbl add pop scas sub icebp xchg je cmpsl es push or mov add cmpsl mov (bad) outsl add pop cmp xchg neg xor pop add cmc movsl addl jl imul or xchg jecxz fldcw lea xchg ss xchg aam pop sub mov dec pop fcompl xor or mov lahf cmp mov (bad) fisubl cmp add add bound mov icebp jnp icebp mov xchg xchg inc add mov fwait leave iret jle sti movsl je sbb ffreep sti shlb sbb outsb jl xchg adc lret aam inc xchg dec loop (bad) mov arpl pop adc scas stc mov mov arpl pop pusha daa (bad) mov jns or mov imul jmp cmpsl ficoml cmpsl push aas cmc fisttpl xchg add test in cltd repz jmp cmpsl mov push xor outsb jg add je and mov loopne push enter jne xchg add mov dec sahf dec inc mov jmp fmulp cs fcmovbe sbb sti int mov out icebp jns (bad) jge loopne mov les inc pop sarb imul cltd mov in or es mov (bad) jnp jg lahf sbb scas aas pop aad sbb test inc sbb mov (bad) lret inc cmpsl jno add add add add add (bad) mov iret daa shr inc pop mov mov fldt adc test daa gs adc cmp pop push insl jecxz int3 add cmp xchg mov imul stos xchg pusha repnz mov jmp pop adc ret add ss loop xlat mov jo neg imul xor lret iret ret xchg int and es mov pop sub xchg dec jmp inc or add add add add adc loopne cli imul or xchg dec in lds sbb roll adc xchg sbb jbe outsl (bad) fs inc mov or inc (bad) repnz sub xor mov ljmp jae nop stos and into xor stos push fmuls mov (bad) div stos adc popf imul fsubrl in push lds cli sti mov movsl ljmp psubd rorl inc pop icebp out xchg add add add push bnd add push mov ret arpl (bad) daa jno mov stc mov (bad) jo imul cmpsl mov iret das enter in or inc jecxz out jmp push ds cld inc pop cmp repz clc movsl xor lcall cmp add mov test xchg jecxz xchg add int3 push pop (bad) xlat xchg stos in inc push movsl mov dec cmp xchg xor mov inc adc add out xor test dec lcall pop cmp in int stos sarl daa sbb test adc pop in out cmpsb shll test repnz imul aas aad adc or pusha outsb fcoml in stos loope repz xchg lds cltd sub add cmp cmp xor mov mov fcmovnb mov pop in in les jns lret dec mov repnz sub in mov cmp mov repnz add add (bad) push aaa mov and lcall jl push ss fistpl imul rolb hlt mov add or test cli push cltd and dec ljmp enter sub cmp (bad) dec aas dec sbb insb mov (bad) push inc cmp jne dec xchg cs mov sub rcrb out arpl mov sahf insb cltd xor xchg scas lahf ja mov mov add fildl rclb jle lds aam aam icebp sub bound adc xchg jge sub insb sbb int3 cmc jno mov cltd ljmp into mov mov mov xor pop es push in imul pop (bad) xchg xchg sub push or ds inc scas rolb insb loope push cltd mov add add push inc dec loop cmp push (bad) lcall jge add add add rep insl jle jmp popf nop or clc imulb lcall (bad) cmp (bad) iret cmp shld pop in jle mov fsub in movsb lahf xor icebp sbb cmpsb outsb ss jmp (bad) int3 fdivrl xchg push idiv jbe cmp adc pop dec hlt sti lods add push std js fild in out pushf frstor leave fldt inc and (bad) (bad) sbb (bad) sub push cmp add add add lcall (bad) jo enter add mov sbb jle cmp lcall and inc (bad) std jl test cmp popa loope addr16 daa cs scas add fmull inc mov imul in jae out stos mov aas test pop add adc daa xchg loopne sbb mov into cmpsb pop cmp mov xor xchg mov add hlt imul ss hlt mov add add add adc sbb lods push jl repnz push pop sbb outsl mov sbb stos in adc sarl adc adc mov or test lcall stc leave pop rorb mov adc pop mov mov add mov outsl pop adc dec jne (bad) and ret mov mov loopne mul sub dec dec pop xchg push fs lods pusha outsl mov xchg (bad) addr16 lods cmpsb and inc mov add add add or pop mov call or mov inc jecxz call fs inc xor and sbbb dec arpl cmp ljmp sbb stos repnz pop sbb ja cmc dec sbb xlat dec mov fnstsw cmp pop jo scas jge test push push aaa orl and and ja loope gs lahf aam mov int push ja (bad) jnp jno mov cmp aad dec nop incb add add add add pop cmp push insb (bad) mov inc mov fsubrs mov repnz shll je jge xchg notb xor or mov push mov xchg ljmp xor xchg (bad) push dec jge loopne (bad) pushf cmc imul (bad) jg pop adc clc nop inc (bad) insl sub aad addr16 into rcll addr16 nop stc shlb mov adc insl mov mov adc jp jmp insb faddl add add ljmp cmp sbb and cmpsb mov push xchg push or adc pop sbb adc mov ret jle (bad) dec data16 mov mov dec push jg shlb das loop ljmp sbb aas cs arpl imul stos cs fnsave nop movsl daa or arpl shll mov lods inc int3 add imul pop in mov cli dec jo rep in add add add loop (bad) xchg sub iret add mov dec inc fsubrl (bad) lret lock add (bad) xor jle pop cmp sbb std pop fs xor mov imul leave cmp sub faddl fistpll adc jle mov shrb (bad) jmp mov rorl inc repnz (bad) mov fsubrl pusha adc dec hlt stos cmp pop cld cmp or push or mov add add add mov in cmpsb dec fidiv dec mov repnz test mov xchg stos mov in js pop in pop mov loop fs sahf (bad) imulb sti mov cltd in mov shll inc or sbb mov jo fxtract stos lods imul cs jb pop mov dec lock repz push mov aaa rorb out fwait pop repnz sbb imul cli cmpsl sub pop mov add add add add mov mov mov mov inc out push sbb sub sbb sbb bound mov sarb test (bad) stos orl adc mov lea test (bad) xchg lods test scas arpl mov add cmpsl leave push mov pop fimul mov ljmp jmp repnz add cmpsb mov aad xor mov ja lods xchg packuswb mov rcll jl add push mov hlt mov mov (bad) jp pop sbb sti xchg inc mov pop cmp fwait and inc (bad) fbstp fsub mov cmp sub dec mov gs xchg mov fwait lret or cmp fstl movsb gs xor adc repnz cmp xchg aas jns mov aas pop aam xchg inc push out (bad) mov push popa dec scas (bad) jle rcr mov addr16 sub add add add inc mov push sub cmc mov cmp pop sub sub mov bound idivl mov or mov pop and clc or pusha inc (bad) jae pop movsl push imul dec mov imull mov jge jno jmp fs add sbb jns ret stos mov lret test pop inc lret jle push jg arpl ja dec (bad) ljmp mov adc mov loop pop (bad) mov fcomp insl sub or add add add adc mov lock lods in test int dec mov or jle nop aad testl mov mov stc sbb and cwtl or (bad) jnp (bad) xchg pushf sbb hlt sbb in out jnp outsb lcall inc iret adc jb pop andb mov mov mov add dec cltd xchg xchg into xchg cmp cmp outsl sbb or xchg in mov imul xchg mov xor ljmp add or mov cmp inc sahf ja inc lock pop stos mov mov cmp test aam sub lret lock outsb mov movsb inc xchg mov in subl mov and js pusha push adc (bad) dec lods insb movsl jnp or cmc add lcall jbe mov dec inc fcoml pop loop fiaddl mov lea out sub push add add add and bnd mov repz jbe mov jbe sub jo sbb divl lret and mov add fadds (bad) test mov cmp dec jbe cmp repz fadds int3 lds mov ficom xchg lods insl sbb incl lds jmp test and push push sub out cli imul mov cmp mov cmp enter add add add cmpsl test mov subl cld push dec (bad) sub (bad) fwait idivl int cmpsb shrl fwait mov sub into sub xchg sbb (bad) sbbl jg,pn test mov push pop popa or push repnz mov mov dec leave ja jle and int adcb dec test jge inc cmp mov dec insl in aas or in push add and (bad) out ljmp test add add add in (bad) and cmp jle pop je ss in and add pop fcmovb jecxz push call sbb xchg cmp rorl sbb mov pop push cmp pop push jnp xchg lsl ficomp (bad) mov in xlat jmp dec dec cmpsb loop inc arpl aam (bad) mov push add adc sub mov lret sbb and je fnsave popa sbb adc loopne sahf pushf lds pushf lret add add add add mov xchg and insb mov loope faddl add sarl sbb xchg loope cli mov (bad) xchg lret popa mov ja ret jmp mov push roll in mov jnp popf les push into arpl ficomp or ljmp mov les add sbb daa push or lret mov int3 push dec fildll aaa inc mov mov add add mov sub lods into inc cmp inc cmp cli imul lahf gs dec push push ljmp xchg xchg inc adc ljmp mov cmpsb imul cwtl mov inc adc mov jg jg lret mov insl js (bad) std loope mov or test repz adc jp inc sub out push daa sbb dec xchg pop loop xchg insl leave and fsubrs bound add add test mov jae mov pop jno jge sub lcall and dec (bad) sub mov cmp cltd adc inc ja pop int (bad) (bad) mov data16 sti push sbbl push xchg lcall repz popf addr16 pop push mov je mov pop sbb in sbb out repnz movsl xlat dec sub push pop lds inc pop sub xchg lea enter adc add in lcall and imul add add js dec popa je xor in cmp xor (bad) mov test sub mov xor out shrb ljmp push xchg in sub stc fisttp (bad) in fs (bad) mov sbb js cli push in sbb and jbe dec xlat sub in mov inc add cltd push mov mov pop lea aaa mov ret push pushf push sbb sbb shr and js add stos sarl outsl nop ret mov fdivs dec adc out lahf cmp fistpl ffree or jb lret and mov cmp jp or in sub mov inc cmp fsubp push pop outsl push push cmp aaa xor xor mov out bound or loope dec imul sbb fild insl lock icebp jg or lcall jg jb adc popf mov not (bad) pop and sub add add add add add test in icebp push fadds xor loopne repnz jns and inc dec push sbb xor mov popa pop jg js cmp test cmc sub or lret call clc lock inc push sub (bad) mov jno fnstcw add push pop jno pop lds dec mov sub jmp repnz dec xchg cmp cmpsb (bad) lret dec xor add add arpl movlps int stos (bad) add jg sbb out adc faddl xor out aam xor mov popa xor dec add in pop loop mov iret das xchg outsb je or lods fimul pop mov adc aad inc fnstsw int3 daa and mov pop mov or adc outsb call mov pusha icebp popa lret gs mov sub sbbl mov mov add add add loopne ss loope jmp sub sbb pop mov pop cmpsl and push out hlt cmpsl pop stc push xchg pop add (bad) in jo in mov je outsb imul int or mov or xchg mov mov push add jg pop scas cmpsb insl test mov lods xchg (bad) ret fcmovb repz movsb jne mov cmpl sbb push sbb sub aas pop outsl dec sub sub and int (bad) xlat or xor pop mov pop addr16 mov mov cmpsl daa xlat daa (bad) xor es cmp daa lock sub dec xor cmp jnp and cld inc movsb adc testb add xchg ja (bad) mov dec sub xchg or jge in dec or lret test clc dec mov mov clc loop mov int test and je push jbe sbb adc inc repnz cmp and sub add or jno xchg in add add js stos cmp inc sbb (bad) icebp cwtl mov push pop out push mov xchg (bad) out add inc (bad) fnstsw dec or out pop push mov mov pop mov inc inc push xchg push xor stc push nop test fistl loop mov adc mov xchg xlat lretw cltd add mov jo push (bad) aam repz inc sti or scas jle imul mov pop add add add sbb pop mov fsubr push cld cwtl pop dec pop and les mov jae gs sub inc sbb fnstsw jnp rol lret cmpsl or and shr dec adc cmp aas mov sbb ja cmp movsl int3 cmp pop lea cmpsb fdivl cmpsl rclb xchg jl into lods push scas cwtl mov dec pop hlt leave aaa dec lea sub add lahf pop push xchg dec arpl arpl addr16 test add cmp jge xchg push sbbl mov fcomps shll test popf mov and cmp ret les orb jg andl movsb lods add add fwait sub js mov scas negb fcoml test inc lcall loop test sub or fcoms pop push mov je int3 cld (bad) xor mov aaa pop mov arpl cmpsb inc clc add out mov repz sti mov out mov cmc pushl mov push mov movsl inc loope loope push sub add outsl mov push mov adc jge pop pop inc aas mov pop adc divb ljmp lea popa inc clc sub lea mov mov (bad) xor test xor adc (bad) sbb push jp or fidiv add std dec add mov mov mov (bad) mov imul mov and mov inc pop and in stos add dec pop sub lods mov and inc cmp xchg mov adc fucomp loopne add test xchg insl xchg ja xchg jecxz imul scas loop mov sbb or adc mov xchg fs xchg (bad) je in cmp add add add and int xchg xchg bound cli and sbbl pop cmc pop dec pop ss clc (bad) xlat cmp aam (bad) lcall mov lea push add fildl xchg ja mov clc and xchg and lahf sahf xchg (bad) push jl mov jg xchg in mov or ficompl lea lret mov fadd ret mov add add add je or cltd pusha add or lcall pop mov push lcall out outsl push mov addr16 sub lret xchg gs mov xchg stos push jp and inc or dec aam imul imul pop mov push cmp inc lahf pop fdivs add (bad) adc xor lods cmp xchg lret sbb xchg testb (bad) jmp ja sub add jbe push (bad) nop adc push add add add adc (bad) iret (bad) and movl bound aaa dec rclb push push mov das adc xchg dec es stos xor lds std mov xchg jmp jno mov xchg je bound fsub roll add pop and dec loopne pop xorl push faddl cmp sub or ficompl sahf shrl sbb fneni(8087 imul inc cmp jae cmp gs negl (bad) mov imulb insl mov bound fsubrl or xchg xchg adc ljmp call pop and add mov sub out add sete ret iret loop xchg test mov jge nopl jns jmp pop data16 xor and pushf movsl mov popa (bad) adc loopne xchg mov insb mov pop adc xor push ret cmp cmp add cltd mov pop clc decl adc popf push lahf outsb clc pop sbb lret cmp movsl leave and (bad) xchg sarl jo adc into or push xchg pop mov push sub mov bound push mov xor pop cs (bad) add scas int ja clc shlb setge aam ja mov popa or icebp aam xchg aas ljmp movsb aad push pop repz es mov inc es mov xchg (bad) nop popf stos cli push add add add add loop js js in add sbb xchg jp fcompl fstps sbb mov lods fwait outsl inc mov xor and cmp adc adc dec out mov aad icebp mov rorl mov cmp gs (bad) sub int inc push (bad) cld sub adc sub outsl mov call enter sub sub mov push mov add add add add cli sbb pop cwtl das sub inc sahf jb jne inc mov fld lds mov mov xor jno mov push ljmp das repz aad adcl sbb test sub pop lock and stos push adc std out (bad) inc mov (bad) mov jp push or jns push jmp out outsl in xor cwtl sub jmp imul aaa mov testb push add add int icebp and (bad) sbb dec lods scas jno pop mov pop xchg push loop and subl xchg pushf xchg movsl sub ds lahf aas mov pop imul outsb loope xor dec outsl lea adc add pop add (bad) inc mov dec pop mov push dec (bad) mov insb test xchg jb sahf and mov imul xor xor std aam (bad) (bad) sete pop insb gs adc xlat xchg (bad) sub in jb add add mov cmp cmpsb jbe imul xchg sbb xchg jno push dec xchg lds dec pop sar xchg xor insb ljmp sbb jp aad mov add sub mov push movsl in repnz cs pop stos sbb insl sbb adc jnp mov inc movswl xor mov dec jo pavgb fldenv (bad) or mov xchg pop aas push fyl2x rclb dec data16 xor inc push rolb add add add (bad) hlt xchg ja arpl fst adc push (bad) cmovp mov sahf pop dec mov add addr16 xlat outsl test mov outsl not notb push inc sbb xchg aad aaa pop (bad) mov icebp rcr jno mov into jg jl push add add mov aas pop (bad) cmp xor jne test rorb xor push adc adc ret fcomi adc and stos inc jmp movsl jl call jae dec movsb icebp pop add add add mov sahf cwtl mov cmp pop lahf sbb fdivr ret xchg cmp std mov push sti or adc sti jg clc (bad) dec out sahf aas adc out mov (bad) mov dec cmpsl loope push sub dec mov popa sarb emms add inc (bad) out add pop (bad) push push jb pop add lcall (bad) xchg inc je push into inc aas insl and xchg push fsts fistp pop jne scas (bad) add or movsb push aam add add add pop push (bad) fisub dec cli or mov pop repz call setp fidivrl cmp push cwtl nop nop pop lret or mov fisubl sub add ffreep (bad) lods sbb stos mov add mov stos cwtl insl cmc jge push adc xchg (bad) pop popf dec fistpll popf inc jns in push fcmovnu dec inc test jle adc jmp ds sbb xlat lcall mov jl sarb (bad) clc add add add add cmp mov pop xor (bad) mov outsl sar mov inc xchg in mov mov and mov cld in inc std stos fstps pop sbb and mov adc das jecxz xchg mov pop or nop int3 push out jne or mov (bad) push xor fwait jmp sub jne popf (bad) insb mov pop daa in mov inc mov aam mov jo adc inc lahf mov bound jp jnp push fucomp (bad) mov lret test xor xchg xor xor push and je sar xlat pop pop add inc push arpl or dec add mov loopne std inc xchg mov or imul or leave mov bound xchg dec xchg sub jno stc sbb out in into sbb lock inc mov test insl sub jo dec sti (bad) pop inc mov add add add (bad) mov add (bad) xchg mov sbb sub and cltd lock mov mov push xor fisubl pop xchg shrb mov and push mov sub rorb or shr sub scas jmp shrb adc hlt int divl out mov adc push sbb pop adc cmp shrl jecxz imulb aaa faddp fidivl iret sbb pop inc fidivl lods cmp pushl add add add jbe pop cmp pop mov icebp fwait aas jae cmp adc xchg aam test pushf sbb in gs xchg call mov ljmp mov scas xor mov jg dec mov and inc cmp mov fisttp inc jne out insb add pop xchg inc fxch loopne or (bad) dec imul bound xchg xor (bad) cmpsb repz inc rclb pop enter dec mov popa hlt pop adc aaa fwait or jecxz add add add nop es repz shr xor (bad) fadds inc outsb ds icebp cld movsl shrl lods inc stos ficoml stc das xchg (bad) sbb out xchg pop cld arpl sub lock pusha int xor sbbl pop inc fs push out dec inc and sbb push mov ljmp decb pop (bad) xor sbb ljmp mov xlat mov xchg xchg repz cld scas xchg sbb add add add add fstpt sub stc jge and xchg mov ja mov aad out mov mov mov sbb fdivrl fistpll sti sbb xlat jnp mov rcrb sahf jecxz adc mov push negb dec cs leave push pop jae xchg mov je add test sbb ds pushf shrb fnop jno fbstp imul imul dec jne adc jno clc xchg cmpsl jns push dec out cmp add add (bad) stc push mov dec inc shrl ss into mov (bad) jmp ljmp loopne fsubp (bad) xor (bad) loop inc jnp pop pop jl leave aas icebp add fld scas fmulp notl cmpsb mov push and lret jb (bad) lcall adc lahf xchg cmc or test mov test pop lock test out stc and rcrb pop sti mov add outsb adc add add add add imul xchg pop mov ja mov xor adc and (bad) arpl cs test add fadds aad pushf in in movsb add pusha pop js jecxz jo adcl xor sbb adcl or addr16 sub sub lds js xchg (bad) push aas push add fsubrl cmp adc cmp mov sti mov sub repnz jmp add add pop mov mov aaa dec inc or stos in sub and in cmp std pop mov mov imul pop push jge mov call dec cwtl mov gs inc and notb or mov dec push ljmp icebp lock je inc mov pop int3 das js or cmpsb mov lods jae fwait mov cmp mov ja or aad adc aam add add add add dec iret sbb pop nop (bad) mov decb or dec (bad) jbe jne aad cmp movsb xor mull add adc roll mov sub lods adc or xlat inc icebp repz pop inc popf inc cmc insb xchg mov fild jge mov lock rcll cwtd mov mov scas in mov push cmp mov test add adc lds mov xor push (bad) mov add aam push notl push rcrl sub js sbbl adc and imul gs pop enter idivb inc or insb repz push lds jo cmp sahf xor leave orl imul lods or pusha cmp push je cli sub scas repz xchg shll add inc rolb pop xchg inc mov fdivr sbb sbb dec xor data16 cmp add add add add rolb mov sarb shll jmp rcll adc (bad) test out sahf pushf fidivrl push js sub call sbbb push repz (bad) push adc sar push (bad) (bad) or (bad) cltd mov lds xchg popl inc xor mov stc (bad) adc adc (bad) enter stos sahf mov test fstps out out hlt std mov inc sarb popfw and inc jo push loopne mov mov adc add movsb fbstp cli mov stos sahf insb inc ret insl lret aas inc imul cmp inc xchg xor cmpsb out jns cld pop mov sub movsb mov push sarl sub sbb pop test cmp mov push or mov jle out mov pusha sub jnp inc les xchg decl ljmp xor mov hlt pop xchg fiadd add rolb loope stc xchg cltd jbe add cs mov popf incl lds or inc fmull sub cmpsb sbb cmp daa jg je adc adc sub push mov in out add mov outsl js jo jbe add movsl mov sub loop and mov cld std flds enter stos sarl jge cmp mov mov test scas pop cmpsl dec ljmp add add push dec mov inc adc cs fstpl inc mov jno mov into xor push test ja (bad) lock enter sbb add xchg jge sub adc fdivr cwtl fnstcw mov dec cmp mov fsubs dec sub lcall push mov mov dec mov ljmp das popf xor xchg sub aaa adc faddl les les push rol clc lea out mov add add add int in push ret (bad) add and mov jns sbb aam mov iret mov sub xchg je add xorb sbb and pusha nop mov pushf pop lods sar lods leave pop xchg mov in xlat inc fldcw pushf mov aam das push in adc and adc jecxz in mov fwait xchg (bad) enter cmp ror mul in add add add movsl jl push leave xchg and lahf std in xlat stos pop inc jnp or dec mov sbb dec sbb and inc (bad) mov dec loope lahf lret jnp dec mov push outsl call pop sbb adc mov (bad) adc push sahf rcll adcl mov adc and addr16 cmpsl (bad) xchg popa ret or (bad) sti pop lea (bad) xchg xchg data16 jb test fucomi mov les cmp or pop incl add add xchg arpl ret push mov mov xor push frstor fidivl push xchg adc jno add dec movsb or out ds cltd nop xlat mov addr16 xor cmp das and mov das pop jmp mov ljmp inc push fcoml mov outsl jb dec and and xor outsl ret cltd lds gs add xor dec push pop fiadd lret shr stos mov sub add add add pop test inc inc dec mov mov cmc mov negl lea out cmpsl popa (bad) int3 cmp roll test mov fwait push fnstcw mov jmp pusha pop sbbl aad ret insl adc mov inc data16 push mov sbb jg rorb orb outsb rcl mov (bad) cmp repnz mov xchg inc mov sub imul xor add add add test (bad) int xchg fidivr js imul repnz sahf iret inc faddl push xor push add orl and jg inc adc xchg mov repnz xor push xchg imull scas push out push dec xchg cmp or mov mov ret mov push sub in jge xchg sub scas pop mov push or or xchg cmpl and push add inc add add add add add imul call lods or roll js mov lock xor in insl add aas iret push xchg and vunpcklps lods adc mov cmpsl mov test das sbb mov cmpsl adc or nop arpl jae sub icebp sbb inc (bad) sbb in inc imul adc xchg and xorl mov sbb add add add add and lret (bad) lock clc sahf sub pop test cmp sbb xlat pop pop lret push sub sub shlb fs sbb mov shrb scas dec mov iret pop test inc mov test ss in inc adc xchg adc (bad) pop push mov aaa sbb test shrb pop loop sbb aaa sbb pop rclb sub pop (bad) movsl lahf cmpsl aaa in push decl dec mov sub add add add add pop pop call and repz scas out rclb xchg rolb cmpsl cld mov and push imul adc test call sub mov in mov arpl iret or iret or flds sbb cmp add inc (bad) in daa pslld out aas sbb fstl xor adc push adc pop inc push es test dec cmp cmp out mov fidivr fistp add or sub mov mov inc repnz sub dec mov push sbb pop bound sbb add xor mulb cmpsl lock in jmp sbb mov push shlb xor or xchg push add dec movsb mov es lods inc gs cmpsl xlat insb (bad) inc out das mov inc and iret pop mov arpl jp (bad) mov mov mov lods sub adc adc repnz addr16 rorb and xchg push addl add add add add mov imul pop addr16 fnstcw mov loope lret inc dec or imul sub pusha repnz mov stos aad dec insl test xchg adc scas (bad) or pop mov xor daa fcmovne int3 lock cmp dec dec mov and sbb jae mov cltd (bad) call adcl add test cmpsl test jp inc cli movsl rorb add add xor pop insl cmpsb sub aad repnz adc loope xor dec aaa inc test xlat pop adc ljmp pop sbb fs bound je loopne pop into pop pop lret sbb jae pop outsl pop pmaxub adc push mov aas shlb dec add sbb fsts jo movsl mov mov pushf jno xchg pop (bad) sub fnsave fdiv jbe add adcl call mov jno push push test popf or add add add sbb push cmp jge jecxz pop repnz lods clc xor shrl mov push mov addr16 fidivrl mov pop mov jmp (bad) dec xchg fdivl xchg les and in loop jl insb push cmp jbe xchg sbb jl mov pop es dec mov iret daa adcb out xor sub fistp cltd in mov mov mov mov bound add add add sbb out faddl lock js lods and sub xchg outsl aad xlat xlat sbb daa add call xchg incl mov push pusha loop push insl cmp push jge lcall lret cwtl sbb gs in data16 jbe jno (bad) scas pop stc or pop nop cmpsb pop add lret movsl out push loop jecxz mov mov jle cld and stos cltd mov es mov aam inc push (bad) in sti xor add paddw mov dec pusha imul jo movsb sub pushl (bad) jo and xchg inc repnz sti mov in mov sub jmp cli adcl sub out scas or out dec pop movsb inc sahf outsl jl loope call sub cmp icebp clc cmp xor push adc movsb mov mov in jge adc mov and fidivrl inc push outsl xor adc xor test and add add add (bad) mov or mov pop dec jo loop ljmp popa fildll aas fisubr inc fstl jmp push enter pop pop pop mov out inc push outsb outsb sarl and mov sbb sbb and imul and scas jl mov jmp cmp das push lahf adc enter and pop loop decb push movsb mov dec pop jge pushf mov jg xor xchg or sbb imull fldl add add aam lahf popl pop ljmp fbstp dec insb or mov es testl xor dec fstp jl lcall int3 icebp fs in jbe rclb jno lods fidivrl dec push sbb lds or ja cmp sub adc push imul xor push loopne xchg in push adc push inc xchg fildl repz cwtl inc nop fstp fiaddl add add add add movsl sbb les or sub mov pusha cld pushf sub fcoml push jns into inc xorb pop je call fwait imul jge popf sbb push addr16 mov sbb xchg scas sbb mov jnp jo mov cmp outsl rcl cs fist mov sbb sbb mov and jns hlt rclb pusha shr ret pop sub add add mov pusha scas xchg fnstenv bound scas out insb xchg pop xor nop inc mov inc in shlb fdiv push cmpsb xchg mov aam pop jmp stos out rorb cltd fucomip xchg lods xorl mov aam out sub cmp xchg loope (bad) and shrl bound jae (bad) in jmp (bad) repz or mov adc std mov xor sbb movsl mov mov or add add add ds popa jle push sbb cmp adc ret cmpsb in xchg cmp sub cld xor imulb jecxz pop or hlt pop mov push test stc mov dec pop fisttp xlat in push jb inc jo rorl jnp stc inc inc jp arpl push (bad) loope (bad) jecxz sub mov popf test sbb adc popf movsl pop js outsl xor sbb pop jl xlat negl das mov jp jecxz xchg clc push cmp inc add sahf loopne pop out repnz mov or add xorb lea ja push lods cmpsl (bad) je repnz mov (bad) mov cs jmp int lret insl insl dec cmpsb jno jns sbb xor or mov jb test cmc push rolb and scas mov inc cmpsl or (bad) cwtl sub or nop push aas scas inc sar cmpsb cmp inc inc mov cmp pushf dec jnp and iret xchg mov scas faddl mov shll sti aas xor jno xchg mov lcall je hlt lock and cmc inc sahf jecxz add xchg fisubr mov pop scas mov pop iret rolb int pop pop insl icebp (bad) fdivrs scas scas add mov (bad) cld sahf fwait hlt clc sbb stc pop aas add xchg mov sub fiadd roll (bad) int3 cli inc addr16 mov cmpsl (bad) dec jne scas aas scas mov fildl inc bound pop popf stos leave in movsl jp jae push jns pop insb xor loope mov pop add in loope mov test sub daa ss (bad) icebp xlat cmpsl push sbb and dec jmp clc push sbb cld call scas dec inc in pop and sub mov adc insb push inc dec insl out mov xor in and cmp jb jne or inc loopne mov and out repnz fs aad push push mov dec mov and add inc jg inc xchg push add lahf and jae jo stc insb adc jnp pop test aad lock jmp sahf test and xchg jg test push and out pop fiaddl imul mov daa and mov lods or fnsave push add adc push arpl push cmp (bad) cmc outsl negl mov pusha sub pop (bad) popf leave push and inc rolb mov ja dec sbb add add add mov add sti imul jo ret mov adc scas incl fsubp dec adc dec lahf xchg (bad) cltd lret sub push pop cltd clc ret mov xchg dec push and push (bad) popf jp xchg insl or fstps (bad) stos jp stos call test adc jno adc cmpsb test dec cmpsl inc lea mov cmpsl inc jbe divb mov dec enter popa mov inc stc insl xchg fdivrl ds add sub sahf adc outsl add lods xor push insl loopne test std ret and sbb jnp mov popa movsl add (bad) push enter xchg inc jp das stc xchg push adc ret js insl out dec push call pushl out push add iret mov mov adc (bad) cwtl lcall xor pop mov iret gs sub inc icebp or xor add add add add add cmpsb data16 dec pop fwait int pop lods or mov mov (bad) sti mov sub mov cmp pop jle adc arpl mov pop cmp shrl mov test pop test add dec nop xchg stc test aad or cs fidiv push pop aaa xchg addl gs add pop push cli jge mov jae icebp aad sbb addr16 jae xchg add in add cltd sub and xor shl cmp (bad) (bad) pop mov cmpsl sub sbb lock cmp fwait cld push mov (bad) or les dec cld gs adc movsl mov xchg or fdiv or js ficomp mov jns subb inc mov mov sbb or es loopne in pushf pop sub sti cs enter (bad) sbb (bad) sar sar and adc int3 push ja adc data16 mov pop jl out and xor dec in push nop jnp jmp sbb push dec mov andb push jns sbb cmp jbe jp cld mov push cld rorl out sub test popa pop in and es sub ret cmpsb xor stos mov dec sub les add sarb bound dec stc cmp dec dec repz cli insb pushf cmpsl sbb fisttpl inc jecxz push inc fcompl pop outsl int3 push jns add sub dec movsb jnp cmpsl out dec and in in fsubrp cld int or push in fsub sub pop (bad) out mov lahf jge pop lahf in cmp stos lret in push sub cmp cmp mov add stc xor and or inc fisubl add mov movsl mov inc push xor cmovs bound sbb (bad) int3 mov mov push xlat mov push xchg jg mov out dec pop stc dec adc dec enter aad pop ljmp mov push fcomi jl icebp inc lock xchg inc icebp jmp test jl lock sub and sbb out (bad) pop popf jns sub dec pop pop mov std iret ret mov cmp fistpl lret inc push dec in lock ds push dec jg loop test jo inc call sub fs jmp fnstcw xchg das mov (bad) bnd jecxz sbbl (bad) out sub add cmpsb out xchg leave faddl scas rclb in sti push xchg fxch dec sub cmp in mov push pop inc adc sbb cmp xchg jno ds int bound xor cmpsb loopne imul les in loope,pn stos popa jecxz jae fnstcw out lcall or push sub dec outsl (bad) jns in inc fsubrl out push jnp push fdivrp dec sub fs sbb loop add add add repz lock out and jmp dec and fidivl lods jge adc daa lock push bound sbb inc sbb xchg icebp mov sub ljmp sub and jae popf (bad) into pause inc adc sbb sbb xor fmuls lods adc mov jbe loope add pop addr16 lahf icebp mov xchg fsts test arpl or fsubl inc mov data16 add add add push xchg repz les das pop clc push fs adc movsb or jl (bad) clc test fs jg push mov cmp dec mov xchg fwait xor sarl or pop mov sub aam std or inc div (bad) dec mov xlat sub jnp andb out cmp out aas cwtl bound bound fdivs (bad) or scas shlb mov xor gs fwait shrb pop iret xor lahf add add add mov nop ja jmp dec jge inc and outsl aaa mov in pushf (bad) mov notb sub sbb mov or xor cmp mov sub lahf inc cmp imul outsb das sub (bad) outsl push fdivs dec outsl adc inc jp cwtl popa stos sti sbb insb dec push jae pop jle rorb loope daa scas popf add jb mov push xchg sti push fs pop out xchg out mov push jmp div inc jecxz cwtl insl xchg push xor push (bad) (bad) mov add add add pop push rcl hlt xchg out sti push jno add push popa mov or mov xchg notl mov jg pop cs lcall dec out mov xor mov push sbb sub int inc push push sarl in lret imul divb daa fs push gs movsb jbe sbb or ss test fcomp inc lret loop adc pop stos enter jns leave adc add add add shlb sub and (bad) ljmp xchg andl xchg js nopl fcoml mov and mov push inc mov add jl dec add lret mov lret fist idivl mov (bad) (bad) mov adc scas xchg jno mov dec leave and mov stos xchg jmp mov jge jecxz dec jbe pop jbe es jo and lock xchg nop stc stos lds (bad) dec out cld xchg das cmpsb add mov mov insl pop loopne pop ficom mov jb mov jle sbb cmp cmp lahf out mov cmpsb into sbb pop flds lock mov lret mov outsb aad fld1 hlt std (bad) mov mov lahf into popa add or mov push or push bound inc xchg adc cmp dec addr16 rcrl insb cs popl and lcall in cmp sbb and shrb adc and ljmp sbb xchg mov fildll popw sbb pop cld or icebp aad imul into xchg add je mov pop stos push inc mov mov jo sbb int imul mov stos movsb pusha (bad) sbb xor push push push js inc out shrl std pop (bad) fdivr fwait aas mov inc cmp stc stc mov xor int3 std push xor fwait add mov ja nop fistp ret popa sbb pop sub lea fdivs fildll add lahf jecxz pop xor lods movsb fimul or cwtl (bad) push add sarb pop dec enter in fcomps jmp lods fbstp mov dec dec xor imul fs ror dec push callw leave push jns mov sbb (bad) aad (bad) std push aam and insl insl stos adc dec inc adc jne xor shl or or sbb or pop sbb sub push add push jb cwtl fcmove mov push (bad) cmp inc test das insl inc rolb push xchg aas inc sub and or repz mov outsl ficoml (bad) mov gs adc adc (bad) or in adc or or mov lock sbb pop mov fistp adc lret xchg jae mov add add add es jo cmp xchg xchg incl jp xor mov ds cld ret out cmp inc pop leave rcr dec jmp es add dec aas das inc push scas lds popa nop cltd (bad) icebp add rdpmc rcll and test insb shll mov pusha ficompl xchg mov stos inc sub sub call inc or std jno in mov or fistpl sbb sbb add push push xor (bad) shll add add add js sahf cmp into or and mov sbb das lahf push mov repnz mov push jno sub out push pop pop pop out mov das cmpsb inc lret addr16 loop xchg push jnp in fbstp jmp jg js sbb loope scas adc sub scas cmp test js sub mov push inc hlt lahf dec inc xor mov in sub test push push push test pop pushf popl add add add xchg dec and es xor stos mov mov hlt cmc mov cs out mov adc push stos js les aad xor inc nop and testb jmp add fidivl mov imul bound inc (bad) jne push cmp imul sbbl push mov jnp mov cmpsl pop push leave lar xor or mov mov fs inc lahf ret push aas jecxz (bad) push test xchg add add add push scas mov jns mov and mov push neg cmc lods mov push mov push jl fnstsw leave sbb sbb or push cmp add adc and jg loop insl fcmove pop mov add aas push je mov sub or cmp (bad) jno fisub mov inc jg cmp sbb xchg sub test (bad) insl pop jg xor xor add je mov int3 add cmp psrlq in push jcxz sti pop imul pop lret mov addr16 (bad) or lahf pop mov out ja out push adc insb imulb sti jmp sub pop xchg cwtl cld push mov cmpsb dec jecxz inc cwtl xlat and push in and das cld stos mov dec pop into mov mov jp push dec inc jae jmp xlat (bad) dec aam ss adc jl mov cmp gs and pop mov test cmp add add add add mov jl rcll arpl mulb prefetch pop in scas aaa push xor movsl cmp adc rcrb push pop adc mov nop lock dec into hlt push xlat cmp jbe std cmp insb repnz call icebp mul inc add and aam jno fdivrp push stc adc jb pop rorb sbb test (bad) out ret gs jg dec cwtl mov cmp add lret or add adc inc xor inc leave pop pop sbb movsl leave mov aaa mov pop ljmp (bad) cmc add sahf push dec or pop sub popa push inc ljmp mov jl mov or shlb mov cmp add mov pop mov jne je inc lret fist out jp sbb xchg xchg mov mov dec pop sub repnz xor mov add mov pop xor aam push int cmp inc xlat fisubl repz jbe push xchg aaa sub (bad) pcmpgtb rolb dec mov add sub inc incb mov mov shlb mov loope repnz movsb shll mov push adc in out sbb (bad) mov out test and outsb sub sarb jge leave ds ja and mov adc popa lock cmpsb xor push xchg jge and clc and xchg out popf xchg inc ret push int xchg fwait add pop movsl mov in shrl or nop nop in cmp sbb cltd jno bound outsb imul pop add scas sbb pop inc pop jmp (bad) xor int jmp jle mov mov test mov or scas jmp fnstsw mov jmp cli inc hlt icebp repnz lahf fcomps imul add or pop repz in push adc loopne inc test add add xchg out xchg inc jno es cmpsl push mov push mov test rorb cltd repz repz mov mov fldt inc lock inc movsl cmpsb jae mov ja jl adc stos push sub ss icebp (bad) sbb pop and push test (bad) xor mov cmp lcall pause and enter pop mov out push mov lret cmp icebp xchg xor mov xor and add cltd test ljmp add add icebp xchg into fs cmp xchg gs mov xchg jl imul xor fwait xor cltd and jg add mov inc femms sbb sti dec mov pop in mov cmpsb imul mov or dec test pop and out stc xor cmp test mov popa nop xchg inc fdivrl pusha sbb dec leave dec cmpsb hlt leave movsb mov cmp test and cmp mov inc add jecxz scas (bad) fidiv fcomip les or dec and cmp sbb (bad) dec mov jbe cli std dec test inc mov test jnp mov das ret scas popa mov clc hlt jnp cmpsb (bad) das movsb inc arpl cwtl popf adc cmp (bad) and (bad) fstp data16 jecxz cmpsb (bad) fisttpl jmp jp push xor mov xlat lods stos movsl adc sbb hlt jns jno lods test movsb push mov xchg pop (bad) sti add mov addr16 mov or jmp add mov jmp fistpl out cmp mov outsb mov and stos call ficoml movsb ret adc pop fistpll push aaa leave cltd fisubl pushf jbe xchg leave mov adc pop jge mov pusha std pop daa push sahf je xor in mov sub imul mull push or xchg push xchg or add add add add mov cmpsb sub push cmc clc cmp push xor call subb lea pop jg cli jp dec je pop (bad) jl imul hlt jne lock lock xchg xchg into arpl sahf cmpsl ret enter fildll imul stos pop pop jmp ret das loope fwait dec ljmp dec repz xchg stos xlat adc or push fdivs inc push (bad) addr16 loopne sub mov dec leave je mov fidiv add add add sbb add scas pop sti dec iret scas shrl ret int sbb enter hlt arpl mov cmp andb scas jmp cld inc int lcall pop sub fldl (bad) dec push clc xchg xchg fcoml ret mov sub lret enter jo xchg push add jno iret test leave das xchg mov jae jo cmp arpl or je inc cmp lahf jecxz sti jl pop lcall repnz add jge rcll test decl cmp icebp icebp sbb repnz pop mov jnp add mov mov in cmp jno push gs mov inc push mov dec push pop stos ret dec cmp sbbl push fwait out push bound inc adc jecxz in xor xchg jge or xchg pop xchg pop dec call (bad) js,pt jp sarb mov cmpsl sar (bad) jbe les rorl jae add add add pop stc cmp ss mov sub pushf sub mov mov sub test add push es cwtl sbb mov jmp inc inc test fiaddl mov not mov aas xchg push push mov or (bad) ds inc je sbb pop (bad) jl sub (bad) xor hlt cli in or mov das fimul cmpl mov xchg or or lcall mov mov in cmp xchg fstl cmp je insb push inc or cli daa jle popf imul lret and jnp sub jne ja pushf jnp mov pop loopne jmp mov cmp inc lahf inc les xchg or mov bound and jmp mov push pop (bad) pushfw xchg mov dec or dec adc jmp sarb add add add add xchg mov sub mov mov sarb add inc testb inc mov bound lcall in ret cmp notb sub fwait cmpsl cmp arpl movsb mov pushf mov pop mulb lret in movsb imul inc inc xor into jl addb (bad) shrb push jmp sbb jae push in hlt mov add add jg xchg push in mov cld int js push inc dec push sbb and or nop hlt and jnp movsb mov jnp add xor adc pop or inc jp add lahf in shlb pop dec jbe xor pop rcr pop test mov leave es inc fwait cmp icebp mov add adc repnz mov fcoml in mov stos adc xor jno xor mov and push adc imul pop sahf icebp mov leave mov inc lahf leave adc stc mov out cmc popf add fdivrl pop xor mov rorl jns inc push inc into jo fistpll inc sub movsl jmp push (bad) std sbb aaa xor in cs mov cmc dec cli push mov push pushf pop dec (bad) dec mull imul or daa es mov jecxz add mov sbb stc ss popf or rorb mov cmc ret inc add outsb adc fwait hlt ficomp xchg dec imul faddl ds adcl sbb (bad) jmp in es xchg (bad) loopne cmp sbb inc mov sub nop iret iret add push push push paddq jmp aad dec push fs leave sahf lret test scas enter jge sbb mov mov lcall cld jo add add add add lods mov fmull popf scas sub repnz loop rcr test inc jbe push sbb push dec sbb push push not negl sub pop sbb or cmpsl xor push in popf sti xor cmpl push out adc les les out outsb scas xor adcb cmpsb sub cmp inc push xor xor pop lods mov das inc or push mull pop adc pop inc stc repnz add add add loopne addr16 xlat jae int3 popf sarb nop sbbl addl addb mov out xchg jmp push (bad) paddsw xchg popf or sub xchg push scas or jp dec lret add repz adc sub mov mov (bad) call gs cmp lods idivl dec dec lret jg inc mov jns jg cmc adc repz loope stc and push leave jmp les and pop sbb add mov jp repz inc scas jp jl add outsl hlt lcall (bad) leave mov adc cmc add cmp insb and (bad) sub lahf mov adc and loop and popa sbb push loop xlat hlt push xchg cs xchg int3 adc push mov mov rorl push bound bnd inc popa sbb mov fs popa sub (bad) aas fisubl adc sarb (bad) fildl and mov mov setne call leave mov cmc mov fmull inc iret and and leave aad dec je dec popf sub cwtl dec in ja or addr16 cmpsb and nop lds jbe fbld lods daa dec add in (bad) fcomps loop fildl out add sub bswap (bad) mov cli cmp aam lods movsl popa push jne xchg std mov addb sti mov sub add dec mov cmc in adc lret push out rorb pushf out outsl dec dec out mov insb and add push xor cmc lret lods push and test sbb popa mov (bad) lds sub xchg pop push mov or call xchg decl jle mov int pushf in pop inc inc xor mov xor and add xor test pop mov sub mov add add add add fildll cmpsl mov lret dec push cli sbb (bad) jge inc dec lock cltd repz sbb sub stos mov mov lea push mov stc pop aam add js addb xor das divb push push leave push jmp fstps enter mov lahf stos jp into test mov mov jg aaa sub and in outsb iret mov loopne mov test push leave mov add add pop sti fisttpl pop jae mov jg sub sub les fcmovu test fistpl jl popa cmc mov add pushf push in add jmp sbb (bad) inc loop lret mov mov aam sbb nop and sbb cmp loop xchg lea out mov mov fstpt mov jmp inc lds lods daa xchg les iret repnz xor insb xlat pop mov sti pop add add add add add in mov stos jg fs jmp mov js xchg mov cvtps2pi iret pop push mov cwtl sub std push fwait out jne jns aam data16 (bad) icebp test inc bound out fildl xor lahf mov ret test fwait inc in fiadd or in xchg mov inc mov outsl add daa push inc mov mov inc addl rcrl add call in (bad) add stos mov data16 inc lock (bad) and mov ret fcomp imul jle xchg pusha pop pop insl adc sbb popa push ss mov fisubl dec fldenv mov sbb cmp (bad) sti or ljmp hlt jb fild loop insb xchg adc lea inc push repnz pop sbb xchg stc (bad) mov jg outsb add add add add or jbe movsl addr16 lahf dec incl movsb jp stc in push divb jp sub leave das loope pop fldz insb pop test mov mov mov cs sub out xor pop bnd in dec jno add mov ret jae add pminsw (bad) sbb icebp push cmc loopne inc icebp subb or adc pop shrl cmp ss (bad) pop cmp cmp add add add mov pop sbb sub insl jg pop (bad) xor and sbb xor js and mov negl push cmp rorb sbb ficomp push cltd shrb imul (bad) loopne inc mov idivb sub scas sub inc fcmovu imul jnp mov mov daa dec nop sub enter push outsb mov fcoms in jb in mov push xor sti mov add add push jae fnop lea push mov lods pusha out sub push dec jg icebp jp sub mov dec movsl rclb into add sub fnsave push je xor (bad) aad push xor nop sub or (bad) mov ret adc (bad) icebp (bad) mov xchg inc je cmp pop push sahf and push aaa outsl shrb das addr16 js inc sahf inc inc cmp enter or imul (bad) xchg dec imul pop sbb mov mov and ret ljmp (bad) fucomp or pop sbb dec mov or mov mov push inc pop jmp enter and mov rcl sbbl and mov addr16 repz loopne inc pop ficompl shll pop cltd mov and xchg mov xchg sbb add adc cmp push sbb loop adcl add ds test cld pop inc lods insl (bad) dec outsb jne fldl2e into imul gs inc and mov cmpsb sarb loopne pushf inc outsl pop xor push push outsb sub jae (bad) mov add sbb jns inc mov sub xchg loopne sub dec add mov fisttp inc js sbb add sub lods mov insb cmpsl dec clc mov mov push addl (bad) ret je push imul add cwtl xchg push ret iret imul dec fs fcomp int3 mov and outsl push xor sbb enter xchg mov pusha lret mov imul dec cmpsb pop mov mov cmp fistpll outsl jb sbb leave mov jp scas pop jno or inc xchg inc push pop outsb push data16 adc sub imul out cmc int3 add pop cwtl pop or hlt repz add add add xchg cs lods jo xchg scas fadds fisubrl mov mov sbb jo inc sar xchg mov notl fdivrl sbb inc push sub dec mov ret push repz push xor inc lds sti mov fild stos and aad ret js sub test pop mov shll add push inc in jnp ret and xlat out (bad) int3 clc out or add add add add imulb loope loop fwait insb lds push movsl pop xchg lret cmp add pop movl add jo mov sahf lods sti push mov scas xchg call xchg adc aad hlt mov xor loop out insl push pop test mov loop int3 cmp sub sti cmc inc push cmp mov mov pop or (bad) and cli test out sbb pop lar in cmp xor pop mov add pop pop movsb insb or xchg idivb mov or fbstp and dec ds cmp mov jl call cmp add or xchg pushf pushf mov mov je movsb mul jnp test pusha xchg out mov mov sahf (bad) es sub mov insb sbb fs leave sbb cmpsb and jecxz rcr (bad) fucomi add inc jne dec lcall or mov adc je pop divb add fxch dec mov sub sbb adc sbb xchg add jp dec nop rol sub sub push pop insb outsb lret sarb push ljmp cs sbbl jne adc inc pop sub mov mov cmp in mov mov adc mov or or mov and mov pop cmpsl cmp shr pop mov jae push mov add add pop nop xchg vxorpd bsr or stos bound inc adc pushf mov das sub (bad) xor pop push mov mov js jmp dec mov mov adc and ficoml sub lcall in jl adc movsl aaa pop and cmpsb je out mov dec or insb mov cmpsl jecxz mov mov (bad) lret ret lahf dec xchg jp ror sbb push add add add cmp and data16 add gs inc inc insb mov mov adc loopne mov sbb cli (bad) mov inc xchg outsl das test pop lcall lahf movsb ficoml or mov mov cmp lret mov and fbld call pop xor fdivrp dec lret sbb push pusha addr16 mov sub das pop cmp repnz repnz test popf jb enter jns test bound cmp lret (bad) pop mov xor shlw std movsb js gs lcall and cmp cmc ret add addr16 sbb in popa push sbb int3 int3 call pop inc jo sti mov rolb repnz pop pop mov xchg insl fistpl inc in mov push fadd loopne dec mov or mov mov xor dec aam shrl jg scas cli enter add add mov inc cmp mov mov add jp mov popa cs icebp pop les ljmp or cli cmp lahf add mov stc sub dec mov popa mov rorl insl (bad) cmp xor test inc cmp push dec aaa pushf dec push dec push xor xchg dec sbb lcall negb outsl jle mov mov sbb or or mov loopne add add add add add sahf cmc xchg mov pushf jbe mov mov (bad) or mov std mov cmp fsubrl or jp add cmp cmp insl inc out insl pop icebp xrelease mov cmp or push stos std mov pop pop sbb mov iret dec cmc mov stc sahf hlt or (bad) cld mov mov and je dec jnp jno xchg adc mov dec mov mov enter add add push push inc cmpsl jg mov cwtl setne jge cmp jl xor push xchg adc mov mov outsl addl pop lds sbb jmp pop cmovno xor jb inc mov or mov inc jge push add (bad) jl scas sar xchg in cmp imul (bad) pushf xchg (bad) lods sar mov dec xchg dec inc inc push bswap dec push cli out testb add add add add cs pushf test jo and or push lret out fistl and sub sub cmc mov fildll insb shlb jge fistl mov push leave or call (bad) mov sub jo outsb lods xchg mov test mov mov xor sbb aas inc sarl js rorl or sub jns std pop sbb cmpsb xchg cld push mov add aam les test sahf out dec add outsl ss jbe or rclb shlb add add add pop sub hlt pushf insb and and ja cwtl push stos mov adc movntq cld mov mov inc je mov fstpl and imul dec cmp and ljmp cmp and mov (bad) in es sbb jnp repnz sarl inc adc lea pop sub xchg pop stos fdivr jge xchg push mov sbb mov mov inc rorl pop arpl pop mov sbb dec add add add cmp movsb scas cmp les mov cltd je mov test push lods cmp mov and push loop icebp push (bad) lcall add cmpsb mov mov insb push nop mov sub cmpsl xor fcompl pop repz loope push mov icebp (bad) jo and call lcall pop and sbb (bad) je xor subb xor push out mov add add add orl push ja loope mov fstpl repz adc scas push mov in and mov jecxz or add fcomi pop in repnz adc push xchg mov (bad) xchg and add sahf lea jp or push push inc mov repz jno flds (bad) (bad) mov cmp and push mov int insl lock outsb or add fsubrs xchg (bad) xor add add add cmp or mov cli dec mov mov push icebp mov inc lods cwtl outsb clc dec test in xor fs inc inc xor rorl outsl jp dec repz add dec mov or mov ret or cmp mov cmp mov lds jb push popa out dec push shrb mov gs dec clc pop (bad) and sbb add insb xchg lret aad xchg rorb (bad) hlt dec fs ljmp add add add flds mov fadds stos pop js enter pop dec xchg cs mov inc jbe mov push jmp repnz loop xchg cmp ljmp cmp adc aad jo jns mov inc push jae jnp jae pop fabs mov cmp fs fcomp xchg pushf add sahf adc xor adc jecxz je js sbb add sbb sub mov push dec xchg clc mov fidivr cmp cmpsb fildl add add add ret ffreep jne xchg adc dec pop stos push sbb fcomps cwtl pop addl bound sbb cld lcall dec inc mov push cmpsb cs scas cltd dec frstor and pop cmp mov pusha dec and jmp (bad) enter xchg pop mov and addr16 jge aad call pop test int3 xchg jns (bad) jnp cmpb add add pop in mov lahf dec shrb mov sarb cli lods outsb cs sbb or repnz jbe rclb and adc sar into out nop pop xchg xchg cli ss jmp pop cmpb rcl sbb call fild adc push fyl2xp1 or pop fwait xchg iret fcom pop pop cmpsl xlat pop push xchg out and movsl movsb shl xchg sbb jne cs inc dec (bad) pop pushf mov sbb xchg mov mov adc jns lcall sub add add add ljmp div cmc scas inc dec int (bad) mov inc lret push mov push push cmpsl in js (bad) cmp adc push and pop jns push sarl test lret lea ds lock mov mov cmp push mov mov mov dec out (bad) addr16 push cmp and lods cmpsl xchg aam pop testl mov roll cmp mov iret jle (bad) pop scas push mov add add add mov icebp pusha repz jne test loop dec sbb and fnstsw test push popa pop push lret mov icebp jg mov inc or cmp in loopne push jno (bad) leave insb leave pop not fwait add add ficompl sub push and popa movsl adc jno jns sub xlat fisubrl mov pop xchg insb ds scas (bad) xor mov sub (bad) push scas (bad) cmpsl test sub psrlw insl ret push push dec lcall rclb pop fwait mov je bound (bad) mov xor lds push pop adc mov push push js jmp adc push outsb xchg dec inc cmp pop sahf test out addb push adc xor scas mov pop dec and js push adc mov mov push (bad) mov cmp xor fucomp adc aam xchg cmpsb sti adc add in pop es jo mov cmp mov add add add mov jno icebp push int3 ja insl dec xchg jne loopne leave std pop xchg sbb mov ds incb fdivrs popf or test adc cmp addb mov inc add lods scas jmp fs inc loope dec mov mov lods inc add popa pusha xchg mov rcr outsl cs pop aam sub sub dec mov clc pop aas idivb fstl clc es jg (bad) adc faddl xchg int add add fcomps cwtl imul xchg inc test sbb jbe fiaddl (bad) in nop lds sub cld int3 push es xor cmp jbe mov mov into jo (bad) xchg (bad) pop add jecxz cmp test je ret and xor inc lds jne inc pop xor sub inc pop push jg test jnp push loopne in shll std add xchg jmp pop nop cmp cli mov xor sbb cld mov add add add pop daa call out mov iret mov xchg push mov jns rclb push cmpxchg push hlt stos and and aad sub rcrl popf inc sub push jecxz mov or or (bad) loope lsl inc fdivrl push jbe pop sub mov dec dec jbe ret lahf daa mov lahf cmpsl mov xor js outsb dec push xor fldenv movsb and fnsave stos push add add add add cmp mov push mov fwait (bad) xlat push rcrl xlat fmull adc jnp out test xorl dec inc cmpsl loop cmpsb (bad) mov rolb cmpb je cltd rorb aas cmp mov imul mov test arpl mov mov sti pop push xor mov pop sbb jle into mov add add add add cmc mov mov data16 jmp sti (bad) enter push mov fucom int xchg push push pop lret popa or (bad) (bad) mov jno push fwait lcall out mov in inc pop jmpw fild mov pop sbb (bad) xchg das movsb popf dec lods cld lods fsubl ja data16 and aas push pop orb jns aad jns mov cmpsl ds pop enter insb pusha add cmpsl inc pop xchg jecxz add add add or jo cmc (bad) (bad) pop inc push mov add gs (bad) in add daa popf and call and and lahf addr16 lods outsl imul insb push mov imul inc and insb pop movq mov sbb stos clc dec int3 insb cltd and insb xchg and stc mov negl clc out ds cmc push enter fisttpl idivb (bad) lock push push shll sub icebp add dec adc lods inc into mov lods push cmpsb stos jp cmp and je jb pop mov inc push fiaddl aaa and cmp jns outsl inc stc cld movsl adc sub jmp xchg (bad) cmc (bad) mov cmp mov scas (bad) ja popa movsl pop test jecxz inc repz in jp adc cmp adc pop sub mov ss das nop or sbb cmp jo cwtl mov sbb add push dec (bad) adc xlat sbb mov add popf push sub insl jnp jge repnz outsl scas int3 mov inc js lcall repnz dec repnz rcrb pop outsb jmp jno ret push cmp dec mov adc dec adcl sarb and inc loope jmp out xlat rorb push xor inc rclb data16 (bad) mov das daa (bad) daa lahf rcll pushf mov xchg ret hlt mov fldt add add add add fs add jp fadds lret lret js popf outsb in imul mov push mov jge mov hlt pushf push cmp roll fsubp pop (bad) lahf mov cmp sub xchg std pop popa xor ficomp push mov and cld xchg repnz sub stos jp rol pushf pop repnz inc popf jne push add jbe,pt inc daa dec add out jg xor test (bad) adc ljmp add cmp daa enter pop jge aaa cmp leave aaa es mov mov imulb pusha xor scas xlat imull jae dec xchg out (bad) cmc mov jne push loope test cs mov push push sub xlat je jg es xchg fcmovbe or add mov xchg pop jp inc push or rcrl or sub daa push cs fidivl xchg lret in test push add add add pusha fnstsw inc cmp mov pop xchg mov inc push movsb in fiaddl and inc repz sub popa xchg pop xor mov pop ret les or cli or sbb sbb mov sbb cmp xlat cmp (bad) rorb jo ss push jbe sbb dec cmp leave into in sub jp adc (bad) (bad) rclb or sahf outsl or and pop push or sbb add add sub mov jle std pmaxsw cmpsl (bad) rol cwtl aas pop jno or inc cli fsubrl adc xchg mov jmp outsl jne loope imul cmp (bad) fsub (bad) (bad) sbb aam jo negb outsl pop out xchg aaa dec or into cmc cmpsb inc in mov out or out (bad) mov push out mov pop cs into outsb lods add jecxz add dec insl enter mov jne push (bad) dec dec push cmp add lcall mov cmp push push fisttpl mov add mov std inc (bad) jbe leave mov pusha mov dec pop (bad) push pop repz out pop xchg sbb mov repnz jmp jns sbb iret (bad) imull mov xchg sub enter rcr cld mov pop stc jns xor fildl xor insl sub scas sbb fsubrs lds popf adc sbb add add add mov pusha js jb jp and cmp out dec lock das jns fisttpl xor scas cmc inc push rorb nop fisttp jno jb mov jmp sub xchg dec nop clc (bad) sahf xchg cmp pop mov jb decb xor or in add lds and push pop xchg daa cmpb pusha out movsb rcll or (bad) mov int lahf cmp repnz sub in xor add add add add xlat push pop dec mov pusha jecxz jne scas fs push push je xchg (bad) lret jmp out cli adc mov lods mov inc xchg xchg scas adc inc dec inc call loopne mov sarl repz sub dec inc mov inc mov icebp enter xchg clc jns sbb movsl add insl add test das es adc or sbb ss fwait mov mov add inc jg jno out (bad) sbb add add add add cli popa stos xchg pusha pop rcrb (bad) cmp ror rcrl add cld es sub js inc adcl test out sbb pop or outsl or jg,pt jb dec mov fwait mov push (bad) push fstenv xchg loop add lods sti pop imul sahf pop mov (bad) repnz sub int3 cmpsl push dec faddl mov mov rcrl xor scas sbb popf sbb int3 push lcall (bad) in cmp sarb add testb inc or inc sub inc or out rcl aas ss push das loop sbbl pop cli or mov mov fidivr jl into jno push sarb jns cmp pop jmp lahf lds cltd cs (bad) int push xor xchg mov and sub push add sbb cmp stos mov shll lods add or mov add add add (bad) imul sub xchg and bound sbb lds fsubl adc mov or jmp xchg rcrb rol aaa xor aas fsubl leave hlt pop and iret pop sti dec rorl dec jecxz fs or dec or push ss aas cmp pop xor mov icebp add and sbb pop (bad) mov (bad) scas les loop xchg inc insb adc cmp push xor add add jp (bad) mov jne sbb dec cmc imul xchg cwtl jae add push shrb (bad) ret daa sub int3 jge cwtl push test jle lock mov loope xor mov adc and loop divl pop fidivrl fisubl add (bad) push pop xor aas roll xor pop aad pop xchg sub das push stos insb mov jo adc add add add xor andl fwait leave pop mov insl and sbb aas mov pop cmp push cmp arpl outsb push aad lret pop ss push rolb lcall popa call mov or or push mov push mov popa daa cmp arpl dec int dec add andl repnz adc hlt jo popa xchg adc es (bad) out aad data16 sub and add adc inc xchg mov stos sbb and mov push and mov sub fisubr lcall jecxz cwtl (bad) dec ljmp add push sti push inc jl cmp mov hlt sbb stc adc sub ret xchg inc inc xor add and jg ret sbb fmull icebp inc mov imul das cmp insb mov mov adc icebp pushl mov jb in inc mov sbb add add add add inc dec in sarl pop loopne dec (bad) mov loop adc add test pop adc jle je push sbb pusha dec or movsb cmpl cwtl inc inc add xchg push or push ret test and pop cmp mov dec dec ljmp sub fimul mov jmp bound cmpsb mov mov mov or dec lds push lret (bad) add sub jmp jno (bad) cmp in pop jecxz jb sbb cmp ss call fdiv movsb add cwtl cmp outsl fcompl push std cmp (bad) and dec int jle cltd adc adc movq push ret or ljmp cmp lret lods ret xor xor and test dec cmp dec dec mov push push out cwtl stc shll mov add std sub repnz lods ficom add in jnp stc dec sbb mov les (bad) fildl pop mov loop in lock mov sbb dec (bad) aas mov dec repz sbb lea jl pop mov enter cs cmp or fcmovnbe inc movsl push test lods test fucomp test lret xchg adc jecxz cmp add add add add fildll das add adc sub cs (bad) jo lods xor dec mov push mov (bad) dec adc push cli cmp (bad) aad sarb sub mov in mov cmp scas xor lret sbb ret mov mov push in mov push lods add cwtl fstp pop add rolb movsb mov out stc jae pop jmp xchg stos jmp cmp scas stos lcall out (bad) xor aam subb dec mov stos mov add add add hlt cmp icebp xchg xchg movsb mov ret bnd adc mov sar adc jecxz and add jle pop or cld pop adc add lods out hlt xor jnp insl cmpsb lods dec dec mov addr16 int3 lret jb cmp xchg ret pusha fidiv mov test js and ds push dec clc jg dec leave lret jmp (bad) jnp xchg int scas sub enter nop jb sbb sbb add add add sub stos scas push sub xor xchg and jb and jae loopne rolb dec jns adc push add sbb jno in push sub mov data16 loop nop loope pop jecxz mov or pop imull xor test and sub mov push stc gs mov cmpsl mov roll mov push out add (bad) jmp movsl sarl jns ss sbb lcall arpl inc cmpsl js xor and sub add add das cmp xchg sbb (bad) addr16 pop imul (bad) pop ljmp add rcr or in sahf mov outsb dec jb push jecxz lds imul jl mov out je lods das mov mov xlat xor xchg in outsb jle jp sbb mov imul es and ss fdivs push (bad) mov fnstsw lret jecxz mov ficompl stos cmc inc inc std fisttpl es int3 mov cli sub push adc fldl add add add or pop mov mov movsb rcr xchg and (bad) in ret push or push pop cmp sbb xor fimull and xor out out pxor inc inc lds cmp inc movsl insb push xor and imul lods mov fmuls xchg negl fistpl incb notb mov push lock inc cltd sbb jne mov jns into push (bad) cmp cltd test push add add add add pushf sbb add ljmp pop pop cs and xchg repz xchg jno scas clc sub sbb loop sub add punpckhbw (bad) cld pop mov push inc ds mov sbb mov lods cmp mov pushf outsb aas out jge das scas outsl in mov push stc test cmp push push int3 xor (bad) sub push dec pop mov or add aaa mov and or ret imul jmp daa (bad) mov popa rcll movsb jmp rolb pop in pop iret push loopne pop mov adc insl mov mov es lahf and (bad) outsl sbbl jno mov ret fcoms or jecxz cli inc sbb test pop mov fidiv (bad) in add push push (bad) adc add add add or inc sti lea scas jle jg jp das mov in dec mov fistl stos jne pop mov inc int adc (bad) ja das pop sbb cmp (bad) mov loopne cmp cmp lahf popa jae hlt mov jo shll pop scas (bad) in xor shll add mov inc mov jns sbb out (bad) movsb negl addr16 cmp mov xchg pop fistpl ljmp add add add dec pop lret xchg gs add xchg sub cmp stos dec jl pop ja xchg sahf aas cmpsb add fimull xchg push xor xchg xchg jne imul (bad) adc lret fstl stos mov insb dec jns jb xchg std pop js mov gs xchg ss cmc stos dec and aam sub mov nop xor rcll fldenv mov mov inc jnp into inc imul mov pop inc test mov push outsb test push repnz inc mov sahf ja into cmp adc mov mov jo cmpsl rcrl xchg popa inc and insl xchg pop in aad movsl cwtl inc sub sub stc xchg sbb mov iret (bad) adc mov insl or push daa adc orl mov mov pop dec sub dec in mov cmc xchg dec add mov mov sub pop test and mov out lret xchg sbb push nop mov mov mov adcl in add mov jl lods and xchg add mov cs idivb mov int pop sahf adc test xchg sbb and testb inc mov lcall xor repz and enter or roll in ja movsb leave imul add add sbb imul addr16 dec jge sti pop (bad) add adcb (bad) arpl adc mov hlt aam jns,pn icebp inc ds xchg jle outsb call lret dec mov adc push fsubl negl sub push xchg mov xor mov xor aaa (bad) dec pop fstpl inc arpl movsb subl mov mov fild add mov mov mov inc arpl cs xchg pextrw pop pop xchg popa jne add add add add jbe xor test stos rol je and inc psubsb mov push jecxz sbb jp dec lds cmp aas cwtl dec mov adcl insl mov mov fs loopne mov jl dec mov ja push add orb shrl rorb (bad) pop mov add shrl pop jmp lods mov aas sbb mov cmp add outsb stos jp ret imul inc add add add xchg xor sbb pop jne cwtl adc lods lret in pop cmc (bad) or xchg lret mov jbe (bad) cltd mov xchg jns pop lcall repnz pop ret mov mov push add jns,pt imul dec out out add out jnp stos sbb imul sahf or inc add mov push aam (bad) imul push outsb mov mov or mov outsb sbb add int pop in mov aam sbb dec mov hlt adc fidivl sub sub loope jl jmp es insb add aad imul insb xchg sti movsb dec fs xor add pusha add xor cmpl mov mov sbb aaa adc div int je addr16 dec lcall xchg inc jl jecxz sbb mov int3 jge adcl dec mov push sbb mov add add add push cli popf ret je inc sbb dec pop out pop mov cmp in mov mov pop dec lea dec sbb in push rcrl push notb fwait fs xchg repz xor jb int and xchg clc push out (bad) jae insl xor (bad) cmpsl (bad) es xor cmp out pinsrw jbe mov xor (bad) xlat push leave ucomiss inc mov dec mov inc xlat xor popa sub add add add mov sarl addb sub lret xor xchg xor cltd test or pop cmc push mov xor roll mov mov mov mov inc (bad) and scas addr16 cmp sub xor sarb or xchg adc in in sti sub mov in fsubr jo nop xchg sbb insb fistp cld mov pop out aad add add add add dec inc out das test dec and mov jmp jo je imul push stos cld jnp push and in ss cmp adc ds iret lods or xchg mov xor aas movsl (bad) push adc mov sbb mov jp mov xchg test mov insl out push or insl sbb stos push out add push outsl add push pop lret mov mov sub aaa jmp xlat dec jecxz lret aad adc add add add jbe call (bad) xor jle (bad) call push mov jp ljmp (bad) cli sbb add and (bad) xor (bad) out xor cld dec inc pop arpl inc mov mov pop aas arpl dec xchg (bad) jmp and ljmp ret dec imul sbb fbld mov rclb push adc rcl in pop dec pop push inc xor arpl (bad) outsl clc add int3 fbld push and add scas lea add jb sbb imul sub rorb add jae jge test mov lahf insl test and pop in pop adc xor das cmc jg fwait mov sub lds jnp outsl (bad) mov sub imul mov sub popf cmp sbb stos in sub lock push sub shrb mov pop xor lock add add add orb fist in sbb repz xchg mov mov mov rcr fistl lcall popf pop dec stc imul stc mov pop out dec inc sbbb out xchg inc notl sub mov jg sub push sar iret lea inc xchg cmp loopne xor repz je push into fwait dec (bad) xchg jmp mov mov jl xchg addr16 inc xor xor sub add add add imul mov (bad) cli mov out lahf and cli add push pusha repz (bad) cmp pop test adc push pushf pop xchg xchg cmp mov mov sbb test mov aam mov push std mov sub or pop xchg pop shrl or ja leave mov mov (bad) fidivr mov pop lret js and add add add in loopne lock xorl mov and aam sbb stos sub cwtl mov inc cmp and jecxz icebp and (bad) xchg cwtl lret mov (bad) cltd add imul mov pop sbb (bad) xor cld sub dec data16 les sbb lock fs and (bad) mov imul les sub xor jecxz (bad) repz add mov pusha iret out test mov lcall push out mov leave xor (bad) push jecxz and xor int nop andl jnp adc pop fistl sarl inc mov adc dec mov loope sti in iret call xchg and cs jp jge jo sbbb mov mov jl add pop mov test scas pushf mov in lods in stos xor lock add add add mov cmpsb and jl int3 sbb mov cmp out (bad) mov jecxz sarl pushf addb mov xor mov out mov mov in insl adc pop ljmp adc ja pop jne (bad) mov out jbe popfw in jo in cmp gs or adc (bad) xchg das mov test cwtl mov push inc popf push jecxz jns bound add add add push add dec dec call in pop and and pushf imul lcall or stc pop xchg sahf pop inc mov (bad) ss xchg out fistpll movsl pop test mov jecxz pusha fldenv xor push jle cmp loope and sbb mov addb fwait push add and (bad) xchg mov inc add loopne scas jge fwait push mov jmp add lods add push popf xor push sub mov add add add in jge arpl repnz dec mov and jnp pop mov cmpsl lods (bad) jo in inc in loop fcoml aad mov in out idivb popa xchg aam jp cmp into cld decb sub jmp and cmp xchg cwtl rolb sarl adc mov pop repnz mov push arpl leave fadds pop inc ss cli dec es test jnp cltd and popf mov stos daa add add add sub sub dec cmp cmp or add pop loopne (bad) divb and adc cmp mov lahf aaa in sub stc popf arpl add ds es ds (bad) test pop (bad) ja repnz xor sub aad hlt or in jno movb push jl lds sbb sahf push push fsubp cwtl dec sbb call dec cmp jo nop xor stos xchg std dec add add add iret in xor ds dec push fdivl pop in or jmp cmp das syscall loop movsl dec ja jae rcrl aas sbb ja adc stos inc stos sbb ja std fdivs sub mov sub aaa iret mov mov push or pushf sbbl and xchg fimull bnd mov mov daa fdivrs orb adc push and rcr push popf cmpsb push clc fisubrl add add add add leave stc jge out push inc inc enter addr16 push jns and cmp loop out dec or dec cld gs int3 call lret scas push pop sarb scas xorl or and dec or cs mov daa xchg fsubrs fmul stos repz sbb sbb ss std aam dec sahf (bad) lea pop push sbb jmp jne es dec add add add sbb or xor (bad) fld xchg lods jnp (bad) dec mov pop cmp (bad) inc cmpsb jp mov je pop out add in (bad) jns xchg fmul cs xchg mov cmc sub cmp lods addr16 inc inc pop bound pop xlat sbb push (bad) (bad) lea dec adc repz (bad) sub mov add mov sbbl jp cltd (bad) mov repnz or add stos unpckhps pop lds stos cmp sbb jae mov inc mov pop push loop sub out fs (bad) mov daa cmp mov shrb cmc sub or inc pop inc pusha mov jae test stos mov dec inc mov ja stos add aaa jnp push iret out fwait mov lahf imul fs jmp add ja xchg xchg enter idivl into fisubr cmp cmp cli pop mov fsubs mov movsb adc icebp (bad) jmp dec sub mov out sbb mov inc push push call sbb (bad) in (bad) ficoml in jl pop iret jecxz ret test (bad) loopne pushf inc mov or vmread jne mov add jns sbb and add sbb mov jle or add add out sbb adc or sahf jbe and testb add loop arpl fisub aam aaa cld sub adc cld sub dec mov fadds iret scas sbb mov cmp fsubrl push popa sbb sbb cmpsl ja inc adc push pop xor js xor push in scas jnp mov pop aam cmp mov cmp bnd sub add cmp shr popf mov orb pop add jg cmpsb leave ret bnd adc push out xor xorl mov or test mov rcrb in add xor xor dec test arpl mov nop dec or movb lods and notl mov (bad) stos mov pop cmp arpl inc jbe lea pusha aas out cli sub xchg cmp movsb into (bad) call xlat mov push insb out fidiv sbb gs repz ja dec add add add mov ror aam mov insb fmul hlt pop mov dec adc outsl sbb lahf psllq in idivb pop sets sbb or stc pop sub sti add add out je push (bad) sub push leave (bad) cli xchg insl dec into pop out inc hlt in push fild mov in add xor sti xor sti leave mov repz dec inc cmp ss and push aam or pop jp adc and add add cs mov leave cmpsb dec mov inc es pop add mov popf flds inc leave gs aad pop imul hlt das xor push xlat jo iret cmp mov dec sub dec add mov push test mov (bad) jae mov test xor push js (bad) idiv lahf jl dec add out scas dec adc xor push movsb mov test pop dec iret hlt pop lods mov adc jp outsb sub add add add (bad) (bad) cmp inc mov pushf aad push insb ret dec fwait loope (bad) jg or icebp mov push dec inc (bad) outsb sbb (bad) mov pop push sub aad push fcmovu sbb fistl movsl add cmc jnp push std rorl add pop or out xorl sub out cmp lret xchg pop and (bad) or add dec and dec stos and lods cmp pop jne sub aas push push push (bad) scas xlat mov push outsb push hlt add mov addr16 lds mov ds push mov push mov sti jg add lret scas cmp jp loop lods pop js add cmp xchg popa jecxz add scas mov stos mov inc pop push jne mov dec cmp add push call fcomps jg cld sub testl xchg xor cmc insl mov cltd push test add lock ss add add add add bound xchg xor xor pushf jecxz push nop inc inc (bad) std incl test std xchg (bad) sbb stos in xor or loope push jne sub push pop sbb sbb pop inc and push inc loope call push xchg mov jo push iret into add fwait in fdivrl (bad) movsl jae gs ss and clc and mov pop das (bad) sub lcall cmpsl ljmp iret shr in stos push sub loope add cmp add and sbb mov fadds mov pop movsb stos xlat lret enter sbbl pop mov imul enter inc push fsubr repnz clc dec cwtl idivl les clc mov adcl in pushf scas pop (bad) jnp pop push mov push xchg (bad) mov daa lret mov imull pop push dec pmuludq repz pop mov das stos popa add xor clc imul (bad) rcr xor mov ja push insl sti push or stc adc xchg xchg sbb or rol (bad) or test test jb nop mov cmpl jmp into inc movsb pop mov jb subl cmpsl inc js fcompl in jge lret cmp cmpsl fcomps ljmp inc pop push mov cmc xchg adc mov dec xor add add add add xbegin in and arpl or gs and pop rclb and (bad) fnop mov movsl data16 js arpl cmpsb sbb fwait inc jmp mov scas scas push and fsubrs in mov xor xchg or repnz ds push rol scas rolb cmp (bad) jns jecxz sub out pop xor aad rcr jbe mov adc test gs push mov xchg int mov push pop push enter out in je mov mov cmp adc xlat adc pusha rol push dec jne push inc add adc movsb sbb xor jecxz jae or test push sbb add into dec pop je sbbb sbb xor mov dec lret sub call xorl jnp sbb and push adc jp pop imul loope arpl xchg jl and adc fsubl lds ss add add add push mov (bad) jp (bad) pop out xchg inc popf push mov sub (bad) aam pop xchg add or jmp cmpsl fwait mov pop movsb add outsb enter mov or fwait movsb pop xchg dec push add xor lea dec fbld or dec dec ss xchg lds xor jnp rolb pop imul jle or pushf sbbb inc test stos or adc cmp add inc enter sub push cmp mov and sub clc dec fwait xchg cmpsb rcll pop popa js mov (bad) ja mov aas adc cmp addr16 pop xchg mov mov and pop pop jo jl mov mov push adc push lahf aaa cmpsl clc dec push add std inc push cltd jg cmc aam inc roll push and mov ds jl lods (bad) xor sbb lds lods add add add cmc cli mov call ret imul data16 aas negl pop mov mov fdivr or (bad) xchg lods add je sub dec lahf pop or dec popa pop jno pop xor mov mov pop loope aaa sbb pop jae int3 jns arpl dec clc std in sahf notl xlat repz (bad) push js out or bound sub dec repnz test icebp (bad) shrb mov jg fs xorl daa test pop aad push xchg mov and mov inc mov fbstp lsl jp shll insl pushf mov xor enter lahf insb mov int and test sbb mov out mov stos jnp pop push pop cld nop adc pop dec adc int3 dec adc mov or xor pushf mov addr16 lahf mov scas repnz aam jl adc sbb daa mov add add add add fild or cld push xchg lea cli xchg cmpsb mov test cmp int3 scas mov arpl mov push mov push pop and idivl adc jno mov push icebp jmp push sbb test inc aad mov cwtl je xor adc scas addr16 push leave pop dec leave jbe,pn xor mov lock mov (bad) and cmp aam out mov mov push xor add add add mov (bad) pushf insl in mov or or arpl cltd stos push xorl inc push pop loop adc pop push repnz push je add add shll xchg fild in call fdivrs out cmp out daa xchg cmc push mov shrl jge roll xorl cmpsb dec rcrl decl std jp sbb fcoml pop out fidivl and (bad) incl adc bound test jl mov add add add jno mov dec mov cs xchg inc cmp mov and mov dec ds bound add pop cmp sub mov mov add adc push loop mov shrl mov stc dec out dec jb dec mov fidiv sub xlat addb cs outsb cmp not mov sub movl imul mov sbb add fisttp imul mov and dec cmpb push fidivl sub stos movsb out ss and leave push jnp aam cltd cmpl (bad) lds jl jmp (bad) jno xchg sbbl inc mov sub cli insl or pop pop adc cmpsl mov jae dec sti jl add push gs out mov call cmp push and xchg bound bound adc inc leave insb sub imull add add add mov imull hlt clc lock sub imul add test fcoms ljmp push inc push push rcl es daa js push mov push mov lock or into fldl xchg (bad) mov mov or (bad) pop xchg jge ret punpcklbw in int hlt pusha (bad) push or gs pavgb cmc sbb (bad) jne int xor sub sbb fildll std xlat sbb xchg push pop adc scas in jl repz push sbb jb xor jge push or dec sub leave sbb inc mov gs or pop xor sub les bound mov jnp (bad) pop sub in std jnp dec ds cmc sbb inc (bad) ja pop mov arpl inc (bad) push loop nop ret jge loopne add adc add cli and sahf aaa xor in sub mov xor mov daa mov pushf or out mov add add add xor mov fidivr xor sbb lods call hlt adc nop mov sbb into call mov jb mov fmul and sub frstor or pop mov out inc repnz mov push cld sub xchg test int3 cmpsl mov lahf arpl jl insb dec nop and adc xor arpl add repnz push push stos scas rclb mov lea add add cwtl data16 jnp xlat xchg clc lret ja and mov aas loop mov cwtl or je repz sar imul xorl in pushw adc aas xor cmp sub jmp and loope cmpsb xor mov mov mov jmp mov xor aas movsl push testl dec sub pop xchg xor xchg xor test addr16 push cmpsl mov mov xchg ja add add add pop inc jbe sahf ljmp xlat std jno insb repz pop push cmc jmp and lods push in and push sbb add cmc js dec pop fisttpll imul insl xchg icebp lds dec mov lods add cltd iret sub mov leave test dec dec mov sub mov iret int in jb pop pop sub xor shll fcomp outsb add movsb mov std cmp mov add add add push leave and jmp (bad) leave out out imul fstpl push xchg xor inc inc dec sbb lret iret movsl mov or repnz fldcw or cmovnp es outsb push xchg xchg (bad) mov jl pop (bad) into jns cmp xor or pusha in mov xchg inc scas cmp cltd stos push mov push fwait and mov sbb cs or ds mov addr16 ss out lahf es cld pusha scas dec dec adc add add adc test pop pop hlt push fsubl movsb dec mov push jg vphsubbw lcall inc sbb inc cmp mov rclb and test and mull xchg sbb xchg mov sub adc sub xchg mov dec test push xchg pop repz je xor out xorl cmp cmp push add das enter add add add add mov aad pop add and sub and test mov sbb push out dec outsl xor fwait push mov dec dec push mov or out adc inc lret mov fbstp push cmp clc das xchg push mov jl xchg nop js mov pop xor fisubl cs pop push sbb imul lock lret mov fst fidivl cmpl out popa out xlat ss into pusha dec enter push inc out rorl pop push icebp outsb dec xor aas test aam mov ljmp cmp lea jae lds test flds pusha pop imul and lods div in mov push inc jae,pn jno sbb xchg js ficom sub xlat xor mov cli cmpsb mov and mov sbb pop mov or in movsl dec mov test cmp fadds add add add cmp lret in ficom orl xlat dec stos add jo sbb sub inc push mov fwait sahf ret push inc sarl daa loope (bad) cmp lcall push je xchg fnstenv loopne sbbl imul sbb cltd inc sbb adc push mov jns cltd push push adc aaa fisubr loope cmc (bad) fchs lods pop mov mov shrb cli add add add add lcall stc mov fdiv dec jge jo popf loope mov decl push mov (bad) out arpl inc sti leave out xor dec out xchg xchg dec pop in xor cli in xchg out fidivl fldcw mov or push test push mov cmp outsl ds jmp es mov sarb pop xor xor mov enter xchg sbbl push mov xchg insb xor xchg iret and add add add (bad) jb insb jmp out sti add adc jne mov cli mov pop lcall shrl xor cwtl test lods sbb imul fstpl lret or out pop ds pop stos jl jnp adcl js adc jno pushf push popf push push outsb mov adc sbb push sbb test fisttpl popa popf js dec repnz icebp xchg mov pop push fs xchg sbb add add add push adc mov cmp push (bad) mov (bad) push xchg fisubrl jmp cmp sti cmpsb pop popa rcll gs (bad) lods cld sub cmpsb xchg scas xchg lret add mov mov out outsl push jno mov lea inc iret cmp pop push (bad) jge outsl and push pop iret xor leave adc in andl (bad) lret sbb test popa cmp pop jle pop sub icebp mov add add add add sti mov jns sbb mov (bad) mov dec lahf scas aaa inc fistp inc ret mov cmp jns das dec jmp dec mov test loope (bad) ja mov cmovle push xor jmp mov xchg insb test clc in sbb sub pop (bad) jg lahf and jmp mov sbb scas or pusha mov clc cs sti dec insl sub and sub xchg jne add add add inc imul push jns xor das jmp xor test cmp shrl sub ret cmpsb jbe in loope gs out and leave sub sub leave dec scas jl xor iret jae and aam pop rorb fwait push ret popf jae inc xlat jns xchg xchg scas lcall cmp cmc push push mov sub aam ficom dec add pop jo fdivrl mov cwtl mov in jmp data16 pop jnp add add add add cs cs repz jae data16 subb dec sub dec lods fs popa push int3 mov (bad) (bad) or ja xor inc sbb aam inc inc aad and pop test insl xor scas mov adc stos test mov (bad) xor jns dec push fnsave pop cmp lahf adcb inc test sub aas push movsb ret jnp jmp (bad) xchg (bad) lcall sbb add lea daa xchg fistpll add add mov inc int jno pop sub pop adc sarb out inc lods pop (bad) dec fisubr xchg test push rorb jo lods add sti outsb mov pop fstpl lods ficomp xor or icebp enter mov mov sbb sbb xor aaa imul js inc inc into mov push lret sbbl (bad) push sub xor movaps add add mov pop lea clc mov int rorl cmp enter mov dec mov mov fdivl mov xchg push hlt push push in data16 lret mov adc adc push js loop cmc aam or adc int int movsb push xor xor int3 add mov mov into and mov das andps jl fmuls mov mov scas sub dec pop pop or pop xor repnz fxch mov sub add add add cwtl (bad) jbe and (bad) mov mov loop inc roll or sbb and enter or enter fiadd inc daa jmp out aam inc test mov mov icebp bound adc adc out stos mov lret lods repz lret mov add sub loopne dec lods or lahf push popa fldt jnp jo or jg out lret push pop sbb scas sbb aam int3 cmp add add add adc cmp mov insb or jmp popa mov mov or das or add xlat pop ja xorl xchg jmp mov je iret xor jnp pop jb repz popf dec add sbb push xor das fucomi out mov dec aaa cltd and push imul cmp out mov rcrl or lcall or sub ss int mov add add outsb (bad) mov adc mov jne pop push mov xchg jno fmuls jl or idivb sub lods daa dec sbbl shlb shrb push aas jae xchg push outsb jp adcl movsb mov mov sbb sarb jne loope sub adc mov and es dec loope fstps orl cld push xor push adc enter ss repnz add add add jmp sub adc fwait bound mov lds jmp mov movsl adc lcall pushf imul xchg mov nop (bad) dec jne pusha lret mov or ljmp xor imul push nopl jle or and add dec pop mov xor sbb aas mov mov out (bad) xor data16 mov sahf or add add jg in jl mov xchg adc sub jbe call in cvttps2pi inc mov or xchg out jecxz mov jnp nop mov out push xlat stos ljmp div dec (bad) in add call dec dec leave lahf adc mov call push pop and ja daa or fistpll mull xor fucom test imul lea cld (bad) xor dec das sbb shr mov andb aas push dec mov inc jl cmp ljmp (bad) loopne or call out xor repnz push decl or je adc add mov and or mov push dec xchg div push dec sbbl jb lock mov dec pop jl bound rorl scas mov or mov loope in cmp out (bad) sbb add add add xor sub add mov gs sbb (bad) cld sbb mov cmp stc cmpb or cmpsb pop cli jno cltd in mov repz out in in or sti loopne push lock sub dec cmpsl xor movsb fsub and cmp aad dec mov insb cmp mov fidivrl adc rcrb pop outsb (bad) mov ja mov (bad) pop adc xlat loope stos jmp push pop jle pop sbb lret add idivb pushf adc ds dec (bad) (bad) (bad) in xchg adc cmpl ret pop xor sub and imul popf pop sbb mov out sti js mov jb lods mov repnz jmp push test fiaddl mov pop add ljmp inc sub addr16 and sub fwait scas sub repz hlt push pushf sbb sbb in dec xchg push cmp push and add add add pop or mov sub lea sbb mov sti push mov in xchg adc cwtl fdivs inc cltd inc push lcall pop adc fild mov add bound add xchg leave pushf addr16 fldenv or int3 and loopne sub into outsb cmp (bad) dec repnz pop xor ja mov mov test mov shlb repz mov xchg jae mov dec pop cmp add add add dec popf insb arpl adc sar lcall arpl sbb jnp or adc addb cmp push mov mov jnp ret inc (bad) les ja imul (bad) aas mov or cld lahf arpl cmp nop in jns cmp lds imul idivl jmp push aad les dec test (bad) xor dec push sti add outsl inc mov js (bad) jne fs mov push test enter inc cmc aad fidiv cmp mov cmpsb mov xor mov (bad) das (bad) xor std leave mov jecxz inc dec pop xchg in adc adcl dec data16 and inc sub ss in cmpsb roll xor (bad) mov ret (bad) test jae jae cld jge leave loopne pusha mov pop lods xchg add add cmp push sbb sbb dec sahf pop pop iret test add inc out test cmpsb imul adc sbb adc out (bad) sub les add jmp stos shr (bad) jecxz mov test lds fs inc sub and scas je shrl loope jmp adc add fsubl jg xchg pop in (bad) into int3 sub xchg jp sbb fimul xchg popa fildl bound lods push mov mov add add add mov lods add xchg call xor jnp inc int3 inc cwtl mov test inc scas (bad) mov aam sub sub iret repz dec dec ja das iret leave loop jns iret mov enter aad cmpsl push push scas mov pop lods or dec add inc (bad) adc mov xor mov rorb jge scas sub xor lret stos mov jb decl inc bndstx jle popa fidiv repnz jmp jb cwtl inc and add add xorl sbb out (bad) ret aad cltd jecxz cmp repnz (bad) cli dec mov gs lret and aaa push sti fnstsw and test lock shrb adc cwtl inc xchg js stos clc pop icebp mov repz pop stos mov inc mov mov lock xchg add xor std in sbb xor in pop pop push (bad) inc xor sbb mov out lds (bad) sbb add add add add sub (bad) adc je out insl pusha imul lahf sub xchg push or mov (bad) sti sub and lods aad loopne add or jnp aas mov sahf pop and loope jmp inc lret fwait cmpl and jle stos aas inc xlat mov add std (bad) cmp xchg cmpsb aas movsb sbb jl adc loope adc in into jbe sets xchg and xor cmp add add add add lods jl sahf jl pop lret sbb inc push fiadd mull jne shrl dec adc mov js push pop dec push xor lcall out xor imul mov in ret push jne xchg lcall sahf fildl lret stos lret xor pop sbb stos mov pop jnp adc int3 test mov fidivrl and xchg lock push jne add add add fsubr arpl jmp fcomi fild (bad) insb push cmp cli inc das fwait (bad) lods ljmp cmp inc add gs in jp ret loopne in mov outsb and xor call mov fs push jge lcall push (bad) mov loopne jne and or cli (bad) scas dec pushl shl popa pushf rcrl enter inc cmp ficom outsb js es xor add add lret cli adc cmp mov mov stos mov jmp cmpsl add dec pop nop xchg add cli test mov and inc cmp xchg gs sbb (bad) jno bound mov pop cmp dec js adc les mov das ds sub (bad) jecxz pop adc or xchg negl rcrb (bad) cmpsb pushf and mov cmp or pusha push sub scas stos outsb lcall or into hlt cmp stc cld push movsb pop scas loope xchg xor and cmp dec jbe pop sub ud1 jo fidivrl cmp aaa lock cli inc jp mov aas push hlt scas popf and cmp adc mov addr16 sti sub push mov or roll push cli imul pushl xchg cmp xor mov xor sahf xor (bad) (bad) push cltd push lock jae sti test int3 xor jnp inc ljmp lds pop (bad) shl jg jne push pop int3 sbb test xchg aas lret subb into add shr repz pop pop outsb (bad) test push and adc xchg mov cmp mov fs pop mov stos test cs jp push sub imul jg sub pop dec cld clc lock xchg adc push sbb cs int3 cmovbe xchg add (bad) stos push leave aaa inc xor pop not cmp inc orb add mov loope mov xchg pop pop cwtl loop push insl ret inc iret lret mov fisubl mov inc subb pop xlat mov or gs sbb call rclb mov and jnp push les imul push les mov push loope aas sub cmp sub and mov or sub dec lock mov add add add lea inc inc lret scas leave es xor dec mov sub xchg sub testl adc fldenv in ret lea xor xchg jno adc rcrl popa fisubl xchg divb iret cmp es dec int3 stc add push xchg pop and mov or pop pop stos bound mov mov mov adc push sbbl jecxz mov dec andl adc inc push cmp sub add arpl imul loope sbb and test jns fdivrl fnstcw out stc pop clc lock loopne movntq mov jo pop ja add jmp mov rcll inc or jle and ficomp pop test sbb ss outsb xchg outsl addr16 lahf cmp pop adc lcall outsb inc test sub rcrl cmpsb ficoml out out push fstp push fisubl add add add or xchg push jnp out cwtl xchg pop fstp adc sbb dec movl in mov cmpsb or shl call add sbb in jp imul mov sarl and lods xchg adc loop,pt jb pop out mov enter push mov jl test sub je adc ja push push jecxz pop push aam leave hlt push (bad) mov jge xchg sbb add add add add cmpsl jb outsl or and sbb scas das ss stc jns pop mov lahf push mov cmp (bad) (bad) icebp (bad) fs pop sbb dec sub pop xchg adc ja cs xor jno adc clc inc out mov loop sahf daa sub pop scas sbb fs roll out int fimul int3 adc jmp xchg mov cmp int3 iret inc push fnstsw leave xchg mov mov pop movsb jecxz sti mov add add add inc push into outsb sub sbb sub mov cmpsb or out fdiv gs mov pop and xor mov dec ret add in in loop xor sbb out jnp jge js icebp lods aam insb pop outsb in push jp dec sub adc pop push push sbb sub insl test hlt pusha loope cmp in cmpsb or pop sub pop and dec sbb in and jo das (bad) into lock sbb add add outsb ss xor xchg (bad) call add xlat loopne lret cmp cmp cli call mov ret and iret pop or fistl jo out and mov stos mov sbb inc mov aam sbb pop loope fcompl (bad) mov mov pop pop aas test fstps rcrb or mov pop out (bad) cmp hlt add xchg into pop add in daa (bad) (bad) pop xchg mov out data16 add add add in sub decl aaa xor pushf xchg or out add faddp jmp sahf out flds in lcall fidivr jp push xor lock lahf cmpl add adc test (bad) mov add imul lcall imul push es into cmpsb sub inc fist push jae pop pop add ret cmpb cmc stos mov sub inc push mov add add jg mov je sarb pop shll mov shrl pop sbb rcrb inc mov test adc mov inc xlat fs mov out test mov arpl cmc lea pop fmuls dec js lcall pop dec jp test cmp in bound jns lret roll fcomip mov sbb push or stc inc mov ja mov jns hlt mov cmp nop add add add or fcmovnu dec pop fsts icebp push dec inc dec jbe mov xor imul mov and cltd out mov mov adc ja dec mov mov jl (bad) ljmp jmp pop in lretw aam mull aam adc dec aam and aam scas fisttpll fcom fwait xchg mov cmc adc jno dec adc lretw cmp dec stos push lds add add sbb hlt in pop cmc mov xchg loope inc iret idivl jge inc xor aas addr16 (bad) jmp jle sub mov fistp xchg leave and add cltd xchg mov idivb adc add or (bad) fiadd cmc sbb mov inc push jecxz push xchg rorb sub mov daa (bad) loope push push push fcoms out je outsl sub mov and add add add push mov cmp push js test addb pop mov mov cli inc fadds lea inc cmpsl and jg sbb das jge pop popl push add ja fnstsw fistl pop mov mov mov push dec xchg adc sbb leave adc sbb incl imull daa sbb mov (bad) leave ret fild jp dec sarl cld or add add dec insl imul or xor cmpsb mov inc repnz pop into cli mov xor sahf adc jle insb pushf loop jp bnd jg sbb mov dec dec cwtl repz out cld and icebp addr16 adc int (bad) pusha sub mov xor sarb rcrl rep pop sub pushf arpl cmp push pop cmp cmp mov fwait xchg push xchg in in jecxz cmp add push call xchg cmpsl jg jmp inc popl mov sub outsl inc mov add in addr16 dec and fdivrl fwait sbb jb jno stos sbb jno rorb lret lgs xchg and xor in out jae cmp add test adc mov (bad) xlat leave aad or or movsl dec xchg repz mov data16 imul jne add xor add add add push (bad) testl sarb inc cmc mov xor stos lcall je into push aas mov and cmc pop mov xor inc loopne and (bad) push in data16 imul xchg mov lea enter stos out lods adc call push rclb scas repnz fisubl not push dec fstpl (bad) jecxz jecxz jmp outsl add bound jae js lret pop mov shrl add add add pop jle lods and add popf lock ljmp mov out sbb clc xchg into inc out stc xor mov push (bad) fdivrs shrb mov and btr inc test js sbb pushf xor movsl stc fadds mov cmp mov ss jecxz push push es mov rcrl pop enter cmp or clc mov cmc lret mov add add mov les (bad) incl cmp loop insl ds adc test mov sahf shlb xchg sbb jo inc push xchg les js fs rcll push mov jno xchg sub arpl cmp cwtl pop or mov test cmp pop pop cmpsl mov mov sti inc test pushf test and dec cmc (bad) xor inc jmp jmp int3 jge add addb cli mov add add adc sub js cmp inc dec ror fs and xchg dec enter pushf xchg push mov arpl add xchg pop inc lea sub daa dec xor jb pop xchg mov jecxz xchg out sub nop in idiv dec inc aad insl cmp mov cli (bad) and out out jns gs data16 mov pusha andl xchg or test (bad) icebp mov add jl sub iret mov mov xchg jb sub fsub add add add mov inc sub xchg adc or imul mov or push jnp add cli add ss arpl fmulp add loope add pop mov out std dec popa (bad) ss loope daa hlt jno mov lcall pop js mov out and mov xor mov or lock cmp mov aas (bad) sub fs dec shlb iret fucomi cltd dec and add add sbb rcrb xchg and jp stc jmp repz cmc pop jecxz loop xchg mov mov cltd jnp,pt push cmp das testb movsl xchg pop jbe outsb (bad) mov mov or or popf sbb in adc mov enter cltd inc testl mov push mov daa js outsl cld inc (bad) popa jmp adc push mov xor sti xchg pop in test out int jae mov mov (bad) movsb and ret adc sahf mov cmp test ficoml lret push dec sub adc jg,pt subl pushf mov out xchg or xchg and xor push add mov insl bound sbb (bad) and testl repnz ret (bad) mov outsl cmpsb repz outsb test int3 sub add sub mov push dec add add add add and aaa xchg push adc xchg xorl mov pop push jecxz inc imul stc cmp imul stos fadds xchg jmp add arpl add push int jl push (bad) mov mov and push cld xchg dec dec fistl lods iret add ret mov ret mov fidivr pop stos jb in mov fwait dec mov sub sahf enter sar pushf cmp icebp add add add lahf jmp jbe push shrb ss mov push arpl lcall test sbb insl pushf sbb mov and ds adc xor jmp outsb lds dec fwait jne rclb or mov cmpsl (bad) popa cmp pop inc sbb jo (bad) mov test cs dec mov ss mov jecxz dec rcrl cwtl sbb lret xorl test cmp add add add push (bad) addr16 xor lods lea mov stc mov xor loopne repnz daa hlt scas in jae ss dec dec in lods xchg adc repz adc push adcl jb sbb jmp aaa cmp mov pusha test es mov sbb inc cmc add fnstcw xchg pop daa mov lods adc gs test in dec cmp insl fnstsw adc push out sbb xor and loope pop inc sbb add add add push call pop cmp or pop incb dec nop iret jo or (bad) daa dec insb sub inc xor pop (bad) jae ret dec push repz subl inc jb outsb sub push (bad) int3 mov mov cmp iret aad mov inc (bad) dec (bad) fcoms xchg mov push out cmc push (bad) js cwtl lret scas fs xor or je stos sarb bound mov xchg or addr16 mov dec mov outsb mov inc stc add (bad) sbb add add add xlat push mov mov add add mov fidiv lods stc push add cmp inc dec fsubl jns add stc call fdivs insl notl (bad) pop or or mov mov cltd push push or dec cltd or iret fdivs iret dec sub fidivr mov lea sub js xor movl repz fwait mov sti mov sbb adc push (bad) mov lahf nop mov dec mov bound push dec sahf cmp xchg lea stc pusha stc out fs jmp or jge dec jae push sub ffreep (bad) jns push mov int iret pop mov aaa dec xchg adc adc push push mov mov jae call inc add or adc jnp mov cld xchg and push dec es push (bad) mov jl iret jge adc mov add add add add mov cmp outsl clc cmp loop pop cmp adc test sahf jecxz mov cmp push jecxz out stos mov mov insb jmp mov into sbb or fbld mov mov pause cmp jge dec xlat jae sbb pushf leave push mov fsubr or (bad) lea daa icebp cmp push jge push aad sub jns pushf xor add add add add or sub repnz fildl loope sbb imul outsl pusha scas dec nop mov cltd leave outsb inc mov inc xchg loop mov int and xchg jne jl lea mov pop cmpb lcall xor sub mov pop pusha xor xchg je cmp ja mov lcall in push pop lods test mov mov sahf push adc repz sub inc and out add mov xchg in into dec xor sbb imul sbb jp scas dec (bad) push call fcompl sbb loop,pt adc sti cmp sub loope pop lods leave xlat out add dec call je cmpsb inc or (bad) jecxz (bad) add mov pop mov imul lock adc cmp in clc mov sbb pop in push jns lds add add dec lods push mov xchg xor rol nop cmp mov jl das (bad) and fcompl mov flds pop decl xchg pop lds insl mov pop out movsl push and dec inc mov adc sub adc icebp lods nop cwtl inc inc lock data16 (bad) mov lock rorb mov fldl jne out mov cmp jle cld xor xchg insl mov imul mov lock add add add add test xor mov es inc or andl (bad) pop in pop push mov stc jl fidivrl add fstps dec jne ja mov xor xlat test inc cltd xchg xor ja (bad) (bad) cmpsb pop leave cmpsl ja movl jbe adc sbbl sub pop stc xchg mov inc inc mov pop or sbb jge outsb or pushf lret loopne test test mov add add (bad) cvtdq2ps jb cmp mov call fstps (bad) adc sub insl push add push out xchg cs cmp lahf fbld mov add jl sub nop test jecxz inc mov int3 and lret cmp pop jno in sub jo xchg sbb push cmp call mov sub sahf and shlb nop jnp adc fnstsw and mov and (bad) and in xchg out add add add dec sbb iret test out cmp addb dec mov xchg das (bad) dec subb fstps iret pop lret sub pop int3 aad insl mov cmpsl popa clc loope leave xor jmp mov leave (bad) jbe mov shr sti push mov arpl xor das mov xor cmpl add pop dec out flds mov ror adc imul pusha and push jg hlt rcrl add imul add add add lods rcr xor pushf xor int mov stos jbe adc loop shrl pop (bad) scas icebp push popa clc fstpl (bad) (bad) adc data16 sub test xchg sbb inc cmp push (bad) rcrb arpl aaa mov inc adc lahf dec mov test imul sub and repnz movsb inc (bad) stc xor adc pop xchg outsb repnz jbe jo adc jo push (bad) rcr add test loopne or pop inc push mov ret or cmpsb in (bad) mov lret adc mov push cmc pushf mov jnp xor adc (bad) in lods sbb bnd mul push pop xchg aad jg mov enter adc fcompl pop mov stos fimul mov adc ja cmc add movsl sub jno mov out xor fildl jg in jns sahf sbb lret scas pushf fs adc in add add mov and shrb iret cmpsl and ds add or iret sbb fistpll addr16 stos icebp (bad) xor pop loopne les lahf mov or pop fdivrl popf sub cmpsb fldcw and cmp xor jae mov pop xor loopne jb into mov dec add shr adc or out popf ja lahf fstps xchg pop rep into push jnp mov test add add movsb adc mov mov stos jle mov imul loope xlat into jmp mov stc test mov loope sub mov daa cmp aaa pop cli cltd xor in dec adc jne das imul addr16 test sahf dec repz (bad) testl jo pop js push js inc adc and lock mov out sub nop or mov imul mov add add add add out and xor in sbb mov and xor cmp aas in sbb and xor fwait mov iret stos sub cmpsb push arpl ss xor pop cmp adc or lcall sbb and pop jecxz test dec adc fwait shrl stos lods mov mov scas aam sbb lcall in clc arpl cs roll mov push or add pop inc jp fwait inc push in push inc out jle dec test mov sbb fldcw xchg lret pop pop mov mov hlt adc push sub cmpl pop (bad) mov test mov xor dec pop jns call insl popa cmp xchg cmp pop stos push test jbe test sub rcll mov mov aas sti std loopne into lods mov adc ret out lock leave ret add push inc jp and and adc xchg shrl loop into pop dec leave leave cmp push lret xchg mov leave rcrl loop enter mov idiv loop xor mov fwait mov fcmove cmpsb push pop mov (bad) (bad) cmovno xchg sahf xor jbe jnp push scas arpl inc adc and fiadd (bad) hlt mov shrl mov repnz push lcall (bad) cs push fwait std nop imul push scas aam insl iret jmp scas sbb test sbb lods and enter dec out sbb push loope dec test cmp enter (bad) sub mov les mov pop jmp mov mull add inc loope sub jmp mov test call sub loop mov xor sti js bound cmp js sub fs pop mov jnp pop or push or (bad) dec mov push (bad) fs inc daa fwait mov shrl scas inc test push mov sahf mov movsb mov mov aas and addr16 xor das icebp test inc out sub mov sbb jno (bad) sbb inc sbb push popa lea idiv (bad) xchg out mov mov gs inc lret out (bad) divb enter ja mov sahf pusha cmp add es mov push fs and mov push dec or add leave out pop jns mov xchg (bad) jno in cmp test bound (bad) cmc iret insb into mov cmc shll mov lods lret mov and insl add xor in pushf lcall jge ror add push addr16 sub jp cmp push mov cltd movb and rcl js andb loopne xor and inc push scas inc in mov mov sub and (bad) cmc mov pop inc xchg ret les addr16 loope movsl out mov push jmp pop cwtl push mov enter push jg fadds mov lahf cmp lret (bad) dec inc aaa cmpsb mov cmp lea and insl call xchg iret add jmp nop pop mov dec sub lock pop jp pop mov pop cmp cmp adc lahf iret mov add in push mov test cmp add mov dec lcall add jno (bad) enter pop pop int pop mov test ret pop cwtl xchg pop dec je mov xorb (bad) repz dec or outsb xor sbb mov in add dec (bad) movsb mov jnp ss movsl test pop and xor dec and adc out sbb shlb push je shrb inc cltd push push push xor lret fnsave push nop (bad) mov dec inc mov add add add add and and and and scas mov jne pop pop xchg call sahf cltd les loope in popa out add data16 jge sbb out popf xchg loop and or mov ds aaa (bad) xor sbb iret push push jmp xor les xchg push xchg imul jno imul sub inc push jge stos lods push imul incl lock cwtl movsb sahf inc stos test push or paddq lcall add add add inc in lret pop cltd adc mov sub xlat nop cmp (bad) outsl (bad) pop cwtl or out in orl mov cmp fcoms xor mov out or push mov xchg leave inc sbb adc xchg mov or (bad) xor mov ja sub sbb stos xchg cmp push nop mov adc (bad) dec and dec push out and pusha (bad) mov sub sbb mov pusha dec addr16 sti lods xchg ljmp int daa mov mov xor adc (bad) data16 fmuls sti das xchg hlt jb adc popa mov into and jbe rorb js push loop lds mov jp mov aad xchg clc (bad) cmp adc les mov xchg mov icebp popa jecxz dec rcll in stos mov lahf push pop and sbb popf and cmp jp add add add or repz cld push pop push popf dec pop pushf addr16 xchg or repz lahf push scas mov (bad) mov aam inc jnp push test std in dec les sbb gs dec addr16 sub int fs jns stos jb fisubrl ljmp rcl outsb adc push pop into and ret dec repz inc sub cmp jmp aaa xor int3 int fcoms hlt in negb xlat pop mov add add add mov push jo adc test cmp ret sar mov fs jg mov rcll mov iret jmp (bad) fsubl vpackuswb jge jae bswap mov imul repz adc and xchg push pop adc jbe and jl,pn nop in loope (bad) mov dec aaa lds popa popf ja out and repz or imul pop out inc and add add (bad) xor cmp popa xchg clc leave cmpsl pusha les dec pop push fidivrl adc sub mov repz inc lds cmc mov dec arpl bound xchg dec xlat mov cmp and jmp or add sub sub sbb xor pop adc hlt cmpb add mov rolw in cmovbe dec xor ja add add add fstps xchg dec rcl gs addr16 (bad) ds mov arpl fwait decl stos or jp lods jo scas (bad) movsb fstpt imul mov aaa xchg cmp test fldz add lret jb test data16 dec movsb nop pushf icebp out rcrl ret pop mov icebp lahf jge push cmp mull xor int mov aaa jno pop push fwait (bad) push push hlt popf push mov stos imull mov pop jns pmulhw jae add adc ja xlat iret mov add add add loop jl cmp inc dec dec add add pop fsubl and fs xlat movsl (bad) push mov fcomps sub repz pop iret add xchg sbb dec jl incl pop pop add pop and dec mov push ja fcmovnbe mov pop dec loope mov mov and pop icebp dec pusha jo cmp in scas pusha mov dec mov or fs (bad) fdivr test add test enter add add add add add jg mov pop pusha xchg popf or inc mov inc fisub pushf inc loopne (bad) orl rorb adc mov push sbb insb lods add (bad) pop sub jne xor aad (bad) adc test add fldt in adc cld mov fsubs test stos xchg fsubl or xchg test or dec and push in or xchg inc aaa cmp cmp mov pop test mov cmp inc jns push push test adc loopne inc dec xchg inc pop jp enter andb in inc dec fwait mov fistl sarl js sahf cmp jge arpl and dec push and mov aas mov ror iret mov outsb fimul std jmp sbbl xchg jle sub sbb jbe mov cli enter dec nop loope jecxz ss push xchg loop ficoml aaa push fidivr adc mov shl scas stos popa mov (bad) stos jb xor leave pop sbb cld repz pop add push addl jp jmp pusha mov jnp pop sbb jmp or loopne inc mov ret inc and mov vpsrad je ret data16 scas sbb xchg icebp fstpt (bad) pop mov dec xchg fnsave add lea pushf cli xor std mov push and add add add adc inc aam mov movsl negb mov xchg xchg adc jns icebp mov xchg fld pop in pop cmp pop addr16 (bad) je into lods adc test stos jns ljmp sahf in ss cld sbb inc movsb cmpsb aaa mov add inc mov fisttp xchg or popl dec movsl push cmp out imull rorl cli pop pop jp fidivrl or lahf push ljmp push push int inc in shlb sbb add add add mov ret add pop enter fs add sarl rorb out xor xor mov xor in movsl sbb sbb mov or inc das inc in inc inc push cmp mov nop push enter jae pushf sti aaa flds add mov idivb stc push push xchg stos daa pop (bad) sub push leave adc fistpl pop mov sbb mov sub sahf add add add add (bad) jo cwtl jmp or sarl loope jbe xchg sbb and clc cmp cmp (bad) aam mov and ljmp adc mov sarb mov enter mov sub in fistpll jne jbe loop xchg repnz ljmp rcrb xchg push mov (bad) insl mov jae clc and and mov sub push outsl test mov lahf jno and es add leave inc add dec ss loopne in adc outsb call insb jb mov fwait lods jnp fdivr mov int jl pop insl inc pusha rcll rorb imul push lods push mov lods jl mov xchg loop aaa push sub cmp push ja aas aad js and repz test push jmp scas ret push cwtl ds pop fildl mov icebp and mov jp in lods mov in sbb add add add pop ljmp mov icebp or mov movl or out sbb mov push testb (bad) fsubr xlat pop push push mov ja jmp mov mov dec std or xchg inc dec aam clc out pop imul pop sbb into popf lea (bad) mov cmpsl fwait sub pop fisubrl xor ss mov in mov leave xor inc and push jo jge pop pop mov add sbb aad mov daa shlb outsb test (bad) lock cmpl mov dec (bad) mov js cmp outsb roll jp xor dec mov or or popf aaa aam push dec fldenv sti jo arpl scas popa cli jns sbb in mov cld adc cmp mov js addr16 push push inc mov sub jnp mov aas vlddqu arpl push sbb push cmc adc jmp iret outsl mov int add add add xor stos out (bad) in adc jmp sub out addl mov mov jle testl stos int ret pushf in sub jae sahf pop aam xchg mov test mov movsb jns clc xchg out xchg orl arpl pop ret sub aam int inc outsl sbbb das aaa mov scas and xor mov mov adc fdivr dec cmpsb out rcrl push cmpsb add cli nop or add popf pop leave jb sub pop fistl aaa loope push aaa sub fistp movsb bound pushf stos (bad) xor xchg imul and mov mov mov sarb push aam cmp scas adc lahf pusha sub (bad) inc mov sub xor push dec and push clc pop adc push inc out nop jb jo push push sub lea mov sub jge add add out and ja push xchg cmpsl mov je into adc sbb and jbe sbb std mov push xorb cmpsb xchg dec push lret pop mov scas mov stos adc mov xchg fwait sahf stos out cmp ljmp mov jmp mov (bad) rolb mov pushf xchg push cmp imul dec (bad) mov inc add lods adc dec repz dec add add add add lcall adc rolb mov int3 lods ljmp leave hlt add jmp stos ret in leave push int and jbe insb pop cld insb push dec aaa and add push dec adc fstl mov cmpsb test sahf or mov dec daa mov lahf mov pop sti xchg lock and dec mov enter outsb arpl das mov xchg sub loope ficom hlt inc cmpsl bound jecxz fisubr (bad) ficompl scas cld lret push sbb jns je fdivl shrl ljmp lcall cmp aaa pop push cmp xchg mov and setnp cmpl sub jmp pop xor shr lret stos les (bad) imul push sub aam ds jecxz mov add push and cli or mov jecxz mov cli outsl leave sahf repz ret rorb cmp xchg jmp insl loop sbb add add add sub aam adc sahf dec test xor and and mov iret cmp or dec xor jo adc incl cwtl mov sarl adcl and inc enter and cld xorb sbb ja lods sub inc aam or daa and cmpsl and pop mov sahf or mov ss (bad) aad gs mov loope fcoml push in jg add add add xchg or popf cmp insl es and sub xor sarb sbb out insb lods push adc jge xchg pop sub sbb adc push and je call out mov (bad) rcrb ljmp jl dec cmpl rorl jb lock jnp mov fbstp dec les stos add in sahf xchg clc std xor pop push scas jecxz cld enter cmp sub stos ret add cs test pop pop (bad) icebp cmp repnz (bad) lcall push mov lods fsubs and push (bad) imul sub sbb pop or xchg pop cltd pushl inc add orl mov xchg mov int ja in mov add or lods mov aam aas xchg sub into mov aad aad xor xchg out in insl out je popa mov push sub psubw push (bad) xor lret sub test jbe add nop lea jns xchg jno jo rorl lret movsl mov sbb inc icebp mov aam cmp mov inc ud2 (bad) (bad) mov and dec pop sub mov xchg jmp fwait (bad) mov popa add sbb mov (bad) add insl mov push adc mov pusha lahf mov (bad) pop faddl push cld lret add (bad) jmp mov cmp mov jge (bad) jl push and add fsubrl lods xchg pushf inc adc and loope mov mov out loope pop std pop jg pusha dec xor sahf mov xchg cmp xlat mov repnz sbb mov mov hlt mov (bad) (bad) daa inc pushf jmp ss dec mov sbb push sahf mov fcmovb mov sbb mov mov dec dec pop push jmp sbb add xchg jmp fisubr xor mov jnp sti add add add das std data16 scas in cmp pop fwait in iret pop sub jno xchg mov jmp pop dec dec es sub ret add xchg jnp clc into imul daa pextrw mov pushf jnp adc xor ds rol dec mov xor mov ds and mov push outsl push jae fdivp push (bad) imul mov push js test cmp lret sbb mov jecxz stos cmpsl add add add cltd xorb push cmp add sbb pop inc mov inc sub adc xchg and lock pop imul inc inc xchg loope call clc mov fs adc aaa mov test fs decb xor lcall and dec in xor imul sub inc xchg jle jns sbb pop negb iret (bad) jnp fnop in (bad) jmp scas mov fchs ss and dec xlat mov ja sub lahf cs arpl rcrl popf sub or pop and cmp mov cld lods xor mov push outsb sub sbb dec dec ss lret xchg jl pop jmp adc lods dec adc pop inc mov sti xor jne out pop mov pop mov adc mov pop or leave mov enter (bad) fldt sbb add add adc mov stc mov mov push and cs cmp push sbb cli lcall je sarl ret sbb sbb push mov in jecxz in jbe pop mov and jns mov hlt push pop pop lods clc sub jl add loop das (bad) pop pusha ja mov mov cmpsb pusha mov jns mov sub popa push fs scas push adc push lahf push cmp pop xor cld add add add add pop int push inc pop daa jo jo or adc cmpsb add and cli in std aam xchg (bad) pusha in cltd insl sub inc je scas cmpsb xlat inc insb cwtl mov sarb fsts jbe gs sub test in leave fstl imul pop sub subl push pop xor cmpl jl push push cmp sub or ss test in cmpsb or hlt adc ret js mov add add add (bad) cld push sub add jne mov jns ret mov xor in pop pusha mov xchg adc mov push cmp inc and aas ss ret pop xor lcall mov dec xchg je push adc std adcb pop sbb pop cmp adc dec dec jns add push pop (bad) nop and dec int xchg jae xlat das repz mov jp push add repz hlt movsb add aas lock jo in and int push jmp xor call mov (bad) lods ljmp push pusha daa jl lret sub lahf xchg movsb imul mov inc inc sbb popa dec jp cli and in ds cld dec mov das mov mov mov jne add dec arpl xor icebp pusha cmp lcall insb xlat push cmp in push dec mov mov and call sbb add add add sub sbb popa sub cmpsb mov dec hlt fcoms out jg sub mov fwait bound and inc push pop in rorl xor sub push jecxz call mov pusha fidiv inc pop cli divb adc test cmp js pop pop insb vpaddb add jne mov sub sub or ret btr pop rolb add add add (bad) das mov fwait cld add xchg xlat mov aam rcrb (bad) cmpsb cwtl jnp jmp ldmxcsr adc jno xor lcall sub ja push or or cmp int3 add mov pop pop or push push mov loopne in sbb dec sbb loop pop dec jmp mov cmpsl enter xchg push xchg addr16 test dec les dec test mov add add das mov pop sarb ss cmp pop (bad) inc xor out xchg out (bad) jle push dec sar aaa iret push and mov aam outsb dec push jp push lea out lahf gs rorl rcl popf mov or inc gs xor jge lret push sub sbbl inc push lahf and in lcall push clc cmc fisttpl mov hlt enter jo add nop jne fwait xchg ret mov int cmp sub xor add add dec mov add xor or adc scas inc addr16 sub fsubr and sbb xor xchg ret mov rcrb mov xchg mov sub and loope cwtl dec inc push test push imul aad out mov push out add mov movsl add jns insl mov sub inc push scas jecxz ret enter inc repz iret adc mov (bad) addr16 jno xchg add add add add add pop fnstenv add mov mov or inc notl cmpsl test ljmp ficoml rolb lret pop insb cmp clc out cmp xlat xchg in push loope ss cltd aas int xchg pushf jge mov fbld mov ret loop mov mov inc scas adc negl rcll push cmpsl test dec jmp inc or xor into pop push pop lahf cli adcl cmpb push sub add add test mov test pop lods imul cmc mov clc lock pop pusha popa bound cmpsb sub adc (bad) xor sti scas gs mov stos enter mov lret cmpsl (bad) (bad) mov xor pusha insb mov (bad) pop cli push in mov lcall addr16 push into not sub adc outsl pop lahf fildll or (bad) push lods lds arpl cmp jg addb add add xor sbb mov inc dec jg rorl hlt fildl jg adc and imul pusha push fldcw test ss mov std mov cmp cli push mov mov or in pop das pop xlat jge addr16 add xchg jl rclb sahf test jge and xchg scas fldl xchg dec leave fcmovnbe pop out inc (bad) adc outsb mov fiaddl ror jae jmp and test dec jno lds add add add dec mov sbb push dec push add loopne in (bad) push (bad) out insl fiadd push setge inc loop sub inc fcoms inc jl add push ret (bad) and add xchg cli or cmpl cmp movsb jnp pop lock mov mov sub sar mov pop adc lods in or mov lea cmp xor loope add inc pop inc push fwait cmp xor pop and aad fldt jae xchg sbb mov cwtl cmp (bad) pop mov add add adc lods and lret dec xor sbb mov ret xor push inc lods add adc push scas jmp inc test imul xor jmp jns jge mov jae sbb sti arpl cmpsb pop jecxz aad fadds out movsl xchg jmp pop mov xchg inc fisub xor cmpsl stos sub and mov (bad) pop mov in in push outsl xchg mov add mov adc sub push jl cmp mov xchg cli jecxz xor cltd jmp popf mov pop push lods cmp mov pop mov adc js std fcmove cmp jmp repnz adc mov jle xor and fwait (bad) fisttpl imul fnstcw or lret mov xchg sbb xchg rcl (bad) xor gs in pop push xchg cmc fidivr push test xchg loop mov cmpsl cltd popa mov add add test bound bound adc (bad) push int xchg divb add push sub test mov xor ss fisttpll jb mov mov cli lahf push ds mov cmp lahf outsb pusha mov rorb mov bound xchg ja clc sarl mulb incb lret sbb addr16 rolb and in loopne jp push mov mov fs sbb add add xor or sub test pop mov sub and pop sbb inc or jl push sbb xlat in mov pop jg (bad) decb or jg lret jns pop mov popa inc daa mov mov adc or ljmp outsl stos movsl int add lds and fimul push inc mov pop mov hlt clc jl and mov add add add sbb mov test test dec addr16 mov jb cmp movsb or test ds xor pop xor loop adc incb mov and clc into xchg inc rep (bad) popa fs popl cmc mov mov ljmp mov loope mov mov pop addr16 movsb aas push fild jecxz pop pusha xchg in lods movsb lods cli mov adc jp add lds data16 fldt add add add das xor ret int3 add sahf stos dec cmp movsl jo out jp xlat stos lds push scas pushf aaa cmp daa rcr sub push push (bad) aas or iret xchg or adc dec shrb lock pop or sub (bad) xor adc pop jge jg add cwtl inc movsb rolb push sub insb fs into xchg sbb pop or jmp cltd setne aam stos in or pop aas and pop mov jnp add add add add mov adc loop test sbbl in dec dec dec cs fstl ja xchg clc bound pop and mov test add mov pusha fdivrl xchg (bad) and fidivr lods mov ljmp leave jmp movsl pop pop es leave sbb cli rcrl lcall fnop test imul jl nop lock bndldx add add add jo in fnstcw jl adc leave xchg fldl and mov (bad) pop jno call sbb push lds mov mov inc cmp (bad) les insb adc jae (bad) idiv dec pop or das jnp mov inc fisubr aad popf (bad) out inc jnp repz mov (bad) repnz sub pop add adc sbb inc mov lret call inc scas push mov xchg cmpsb pop int3 mov push enter add add mov ja js mov jp cmp push xchg add cmp fldenv mov ss insl push push loop mov das (bad) (bad) cmp xchg (bad) pusha stos xor call je int sbb mov dec adc testb inc cmp mov xor sbb lret int3 xor or (bad) and call xchg mov nop adcl dec shl imul xchg jmp mov add add daa mov popa movsl neg lea xchg cltd push cltd jmp mov inc pop lods out pop cmc mov lea jno (bad) inc loopne imul scas hlt mov pop inc xchg stos ret jb loop gs mov jne push pop (bad) fwait cld popa fmul pop inc sbb repnz cmp loope dec xchg scas pop jp ret add mov sub cltd or cmp sub icebp sub mov adc pop call add add add jge xchg imull mov mov add mov lcall inc sahf add pop push out int pusha ret pop fisubrl cmc cmp rcr rcl or pop lret stos sti fs pop fidivr pop pop je pop jb jmp mov or jmp out insl xor popa mov cmpsb xchg ss dec lds clc bound lea pop imul insl aad add add add add pop (bad) cli jne idivb fs fimul mov jne outsb mov fwait jmp mov jp push test mov dec adc pop jecxz mov mul pop xchg sbb jg ss std push mov andl and bound jge mov into (bad) jge pop repnz test xor pop test mov es aaa mov mov sbb mov (bad) clc mov sub ss into scas insb cmpsb hlt cld loope add add add add add add push clc or sbb and or dec push jns xor dec ja and lahf es sahf pop decl inc jbe inc push cmc stos aam fistp mov sbbb jns cld test push lods mov sti pushl push int3 mov flds nop jge repnz adc rcrb mov subl xor (bad) jns out jnp std xchg aas cmp sub addr16 pop int3 cmpsb clc push xor lea ja mov pushl int3 incb and sub fstpt mov push in aaa mov mov cmpsl (bad) stos lds (bad) (bad) push fiaddl hlt and dec icebp xchg fcompl push repnz sub xchg mov std (bad) int push adc push out (bad) cld popa push jo cmp cmp mov xchg pop in es add add aaa insb mov es cmpsb jbe outsl ljmp cmp jnp pusha jns jp add ss xchg nop movsl rorb cmpsb fsubs dec rcr je (bad) shl sub popf int rcrb sbb sarl das mov dec inc cmpsl shrb pop pop xor call mov pop inc nop cmp jbe (bad) inc outsb pop xchg push mov jns mov mov lods and dec mov and mov pop insl xchg inc ficoml mov pop out int3 pop fldl repnz clc ret sub jo pop xor rorl jmp jne js push and ss movzwl les cmp cmpsb pop sbb cmp aad push sbb mov les adc in insb and movsl loope fdivl lahf dec bound push jnp sub mov (bad) adc mov fwait lea add test (bad) popl add add add mov movsl nop sub adc sub jl andl inc stos xchg inc insl lahf outsl mov scas jg mov into cs dec push mov xor in or mov icebp jmp mov jb hlt sub push jmp bound cmp push jno cld aam cltd int xor pushf push clc rcrl mov sbb in add adc loopne add out insl push sbb mov fild orb xor pop mov gs sti mov adc lods dec jl addr16 mov mov xchg std pop ret lods xchg dec add fs outsl add mov sub xchg insb (bad) aaa daa shlb enter jge,pt add sbb dec dec jecxz mov jae or (bad) stos sbb frstor sub rcrb test dec and inc popf push push push mov add add add imul lds pop imul in inc add movsl lahf mov out add lods es jge subl (bad) sub and mov mov cmp or roll outsb mov loop sbb cmpl leave pop pop cmp (bad) fwait push xchg cwtl fmull sub out mov add stc and dec aaa or fucom aas jle sti add add add add and xor xchg iret or adc (bad) mov pop cwtl out mov int3 cmp inc divl test adc mov add or dec mov roll xchg cmp mov xchg xchg loop sub or clc (bad) stc test adc outsl pop in push (bad) jnp in push add sub out mov xor cmp and xlat (bad) lret pop in lods mov aam out imul rcl pop sbb xchg mov (bad) mov add add insl mov dec inc add push int in sbb into or je xchg cmpsl fs pop sbb mov clc cld xor pushl mov icebp lret or xchg sub pusha cmp imul cmc in mov adc rol int ljmp push adc add adc push pop loope xchg xor jle xorl (bad) sub mov dec pop lret and add add mov loope mov push xor xchg push cld (bad) mov add movsl mov xrelease push and out add stc stos pop clc xor inc inc in sbb shrd std mov sbb (bad) push pop ljmp mov movsl ffree dec cmp pusha fidivrl in mov aam lret jp insl (bad) loopne pop xor jno and dec outsb iret or call pop pushf mov imul add add add mov xchg xchg rcr mov in push subl aad dec fsubl mov push mov imulb jns cltd fcompl test cmp jae dec (bad) imul mov insl out or inc imul negb std add pop jno std test mov inc sti cmp push mov out xchg cwtl ret pop sbb cmp jecxz cmp outsl sub insb mov cmp in add add add add mov and jmp call pop sub xchg adc insl xchg int mov outsb aam mov das stc mov leave mov lds jnp mov xorl adc in cmp xchg mov adc dec inc pop sbb mov out pop iret push mov roll dec nop mov push lahf mov jl jns adc xorl das dec and and push call or add add add sub fidiv mov pop aas sbb lods iret (bad) fidivrl sbb clc lret add mov in loope rcrl dec sub int pop pop popf jge,pt mov mov xor inc xlat je icebp xchg push xchg mov mov (bad) popf in cld lcall scas scas mov stos lds test pop aas mov orb cmp into jp imul cmp sub ret lods mov cltd sub daa (bad) dec dec fiaddl (bad) sbb adcl ret addr16 mov add push xor pop (bad) movsb test dec pop sbb popa push add into fmuls les mov add mov jbe hlt or lcall or and sub mov xchg pop andl pop popa shr dec pop inc or and xor es lods movsl dec es imul add add add ror enter (bad) (bad) arpl jle push scas nop lods fidivrl xchg and fs jne sbb js fnsave pop test sub callw cli ss sbb das or cmpsb pop mov cmpsl mov add jnp dec cmp lock dec jns (bad) mov pop jnp pushf loopne mov add aam sbb movsb mov inc out or (bad) push in out adc inc pop and in mov inc push cs adc popf mov push sbb iret mov scas mov imul inc and mov cltd cltd scas test loop dec or add (bad) mov (bad) jl mov mov cmp mov push mov push es mov and dec stos sbbl cmp dec jae or sub sub arpl int dec in enter push or inc loope gs pop add inc add pavgw pop into mov test aam add mov inc mov repz fcmove cmp ljmp cwtl and aaa mov jns cmp add ret das mov out and inc xchg sub roll xlat inc mov (bad) ss sbb cs push lret mov mov jle mov lds xchg nop push test cmpsl dec add add pop (bad) push dec sbb add orl nop movsb (bad) sbb ljmp insb inc lds addr16 loop and jp ljmp adc popa xor ret adc insb cmp out jo xchg adc and or insb dec das jl in dec mov inc in call cltd xchg ss aaa loope and cmpsl pop adc mov out pop loope push mov xorb sbb mull add loope shll into push mov adc pop push dec lret mov movsb (bad) push sahf mov std sti data16 in or xchg cmp lahf sub cmp nop xor into rolb dec pop lods es or cwtl push mov and or xchg sbb jae jmp (bad) aam cmp fs pop das (bad) pop into and pop fcomps ret pushf mov push pushf iret push dec sbb xchg fdivrp (bad) jecxz ja incb add add out push and ds and movsb lods mov lret (bad) jae shr jmp and sub mov out cmp cli adc inc loope fisubr cmpsl test cmc push dec mov out arpl (bad) mov repnz or fs adc mov data16 lcall mov push xchg jecxz jne mov cld insl sbb sub pop (bad) call (bad) aam lea add add add sahf mov cmp sbb pop jmp rclb mov loop mov es out sub cmp fidivr add sub xor push iret or bound pop stc leave dec in imul iret ficompl add pop stos in lahf movsl das and mov mov lods out mov arpl inc mov xor add push pop loopne iret mov inc ret (bad) test insb out aaa dec or cs outsb (bad) mov imul jge fcompl stos pop pop outsl pop lret sbb pop xor xor repz je (bad) sub dec imul int jmp jmp add sub inc or out push push push fsubrs icebp mov or fs test cmp mov shlb int3 add mov cmpsl out imul test mov loopne jl sbb stos and das xchg add xor cmp insl (bad) in popf inc orl or and cli nop adc and (bad) pop mov push mov inc loop mov inc jle test inc repnz sbb data16 imul addr16 mov mov mov test cmpsb sbb cmp andb push (bad) std test incb and pop enter sub adc or rclb dec fdivl (bad) sbb add mov pop jge icebp and mov imul pusha mov aaa lahf icebp push pop cltd sbb mov or (bad) pusha fidivl jp (bad) sbbl lahf mov test dec inc add push js xchg popf mov add jno (bad) sbb cmp or or (bad) push mov in hlt add jg pop lds push sbb clc leave test adc iret add add add push or cld inc in fcoms cvttps2pi sbb aaa fwait or inc pop and cwtl sub mov lahf dec push push inc (bad) std lret mov adc icebp in xchg mov rorl (bad) mov dec fwait (bad) push sar xor inc es sti xchg mov lods push test cs mov jmp add femms (bad) repz add xor ret dec mov xchg je lcall jo insl mov jg test ret loope and xchg jl cmpl sbb sbb mov pop push frstor pop aad mov test mov test dec inc xlat dec push add repnz movsb loope lcall jo pop push xchg push lret adc sar sbb jae inc aam dec mov lret lcall add pusha or and shr jno mov mov in cmp sbb sub mov push stc sub inc inc cwtl subl div stos in pop sbb sub hlt fmulp cmc pusha jns push mov repnz dec pop mov pop imul xchg scas lea enter fmul loope adc por sub lods gs cmp mov inc fidivl push test inc jg mov nop mov daa sub and ljmp aas in add add add stos push inc in aam clc cmpsb jbe xchg call mov (bad) xor int out (bad) mov mov notb mov test (bad) fdivrl or cmp js inc xchg dec sti out movsb (bad) push mov dec jmp in gs fsts add roll sub xchg (bad) sub (bad) mov pop popl fcmovnu fldenv (bad) test popa test pop arpl cli pop add xchg fild add add fisubrl fadds enter push sahf sbb (bad) add popf sub push into xchg jge push clc pop or push sarl and addl inc push inc add frstor pop xchg loope ss pop int inc adc in xor pop aaa jb dec jge mov aaa lret call gs outsb and scas adc shl mov inc sahf hlt pop adc (bad) dec arpl mov push pop jbe mov es sbb or nop inc xchg lret arpl push xchg adc shl insb sbb dec xor das leave push mov mov sarl sub outsb mov das nop xchg in subl mov push test dec in cld (bad) leave add mov ss jp pop pushf loopne sbb sub sub push cmp stc sub push je sbb xor xchg out cmp dec icebp data16 lcall add add inc mov negb add rolb outsb mov fild cs adcb outsb pop stos pop jb (bad) and adc lret les outsb sub imul imul cltd fisub (bad) sub cmpl stc popf jnp enter mov push xchg lds icebp jle,pt push test pop std inc or jo jb cwtl hlt stc or xor lock xor push cld sbb dec adc dec roll add add test sub mov movsb hlt xor sub push hlt mov popa pop xor fist mov enter dec into ret xchg int3 cmc call or pop push jecxz in fdiv (bad) sti sub jnp (bad) cmp jbe addl mov jg xchg out sbb test insb test dec cmp sub loop dec mov dec inc fdivs or fisubl mov addr16 ret mov je mov (bad) mov out and sbb cmp inc xchg test jg mov mov mov stos std inc (bad) lea pusha mov adc push enter cmpsl mov inc in pop sub gs std das (bad) cmp popa test aad pop mov mov jge in loop push loop cmpsl push rol add out jmp out pop xlat in mov push fwait sti sarb je ds xchg lods and lock fildll add add add and out mov inc aaa rorb push sub push add mov cli mov adc verr lret iret xchg jge sbb int3 and jne (bad) sbb pop jle fsubp test ss pop dec aam in sarl pop add mov ret cmp and xor xchg ret aas cwtl imul xchg push cs and leave xchg cmpsb nop scas jno insb cli jge (bad) enter test add add add aas repnz fdivs insl mov (bad) jne iret lcall push sub stos (bad) xor xor dec mov pop in jbe pop add sub or jle in dec lahf mov push jb out adc and sub push fnstsw fsubr std fs lds icebp or inc sub idiv mov fisttp inc iret mov jbe (bad) (bad) jae (bad) sbb and call sbb fcoms popl add add add add movb jbe lret fcmovb lret imull inc test sbb mov out ror stc clc cwtl push cmp outsb in arpl jno cmp (bad) mov mov dec dec and pop lcall sti pop sarb fisubrl sti jns pop mov imul mov xor inc adc mov nop jne clc (bad) hlt das push loopne addb sub push addl push arpl mov sti pop movsl xchg pop xchg sarb mov adc mov iret sahf loopne out loope jp loop (bad) scas icebp adc shlb push insl and jl sbb insb lock (bad) iret jbe jbe outsl mov add into xchg and out hlt xlat call sub shlb and inc nop cmpps repnz rcll jmp cmpsb add stos fsubrs mov out jae iret int3 and lahf enter add scas ljmp sub mov sbb inc pushf ss (bad) call mov push pop jmp and in (bad) lock add push ret scas lret and lea push mov and push push aas mov out xchg lds xchg faddp cmp inc mov loopne fdivrs mov leave pop pop ret call sbb inc xchg hlt popf (bad) pop stc sbb or push xor add add add add in inc jle xchg pop outsl clc ficom lea negb dec enter sub in mov inc xor mov pushf popl add mov es gs cmp xchg sti sub std mov in aaa adc outsl loopne lret es mov sbb jp adc lods stc cmpsb inc notl xchg mov inc ss bound pop imul das (bad) aaa jg bound cmp add xor pusha mov mov inc lock push in rorb xchg lahf mov mov push fsubrl mov cli std js and jb cmpsl mov stc mov mov inc cwtl add add pop cmpsl jne sbb and mov insb mov mov sbb sahf sbb xor mull lea scas push in dec adc lahf push std mov cltd jnp out test call xorl xor add add add add loope or out pop xor pcmpgtd add enter xor rorl cmc mov jns dec inc lock xorb outsl jl inc jp popa mov jge addr16 inc repz mov movsb mov add xor mov inc dec pusha inc cmova enter hlt jmp mov push cmp popf cwtl adc dec and jl dec iret sbb iret xchg aam adcl (bad) xor mov insl jno add add add movsl (bad) bound jbe jl mov add ret dec add cmp insb aam lret loope leave cmpsl pushf pop pushf jmp sub mov add jmp mov or (bad) stos push lahf ss shrl ja mov aam mov sbbb bts add dec mov push xchg insb jbe and pusha pop mov xor int3 insb lods out mov pop jbe mov (bad) ja xchg cli adc add add add add inc cmp inc jo xor mov inc mov ret add mov clc jecxz (bad) loopne mov add xchg mov or in sub jne inc (bad) sbb andl push insl adc incl or push and hlt xchg in cwtl jl cmp imul xlat mov lods jb cmp int3 adc ret jbe sbb movsb inc adc mov jb lea add add add lods cld stos ja fdivrl stc fcoml mov not mov adc insb je pop (bad) and pop fidivrl and test inc ds push xchg hlt jl inc jl out or fbld in cwtl dec pop adc mov jl mov les xor mov in (bad) adc push (bad) daa loopne xor push int leave outsb js cmp inc xchg loope mov loope xchg jmp jne aad lret add add add add test jmp add add arpl in push fwait out scas aam xchg xchg icebp (bad) (bad) rolb cmp or add (bad) icebp mov fidiv rorb imul into and fwait rolb das add sub mov movsl xor sti lcall cmp ss mov cmpsl lods (bad) std mov pop mov mov add (bad) pop inc and mov cmp add add add add mov leave mov or leave int push xor in imul mov lods cmp inc aam jecxz pop jno and push mov inc dec shr inc pusha mov inc jp in lcall and les js sahf mov js test (bad) inc imul repnz jg push mov das sarl (bad) xchg add rcll xor ja push ror or push mov mov sar cmp imul (bad) mov fcom pop je js xchg sbb dec jg jo sub add xchg mov jg jnp lds rorb aam std pusha cli xchg mov popf daa mov imul sbb aad aad sub jno sti movsl add gs sbb dec cltd and push mov xor dec int sub sbb xor push pusha mov xlat and test mov dec or add add add add lds dec push xchg gs enter (bad) frstor xor jae push xchg or sub mov cli fnstcw dec pusha je and icebp test cmp xor in lods rcrl pop pop adc sub bound inc pop imulb dec push (bad) stos inc add mov jge inc cli decb jbe dec pop cmp xchg adc clc test cmpsb addr16 push inc in popf push test insb or cmpsb sbb je and add add (bad) test aam xchg cmp adc push jnp leave and sahf sbb hlt mov rcr inc push mov cmpsl dec scas testl mov xor sti lahf test dec mov or jecxz mov xchg jp sbb push mov cmc and jns loop (bad) mov mov inc int dec aam je lods js fcoms sub outsl and subl sbb mov and sbb int3 icebp outsl mov xor enter add add add push pop mov inc stc and xor xchg sub out add out (bad) jno xchg insl add dec cmpsl mov addb adc mov fwait cmp rcrb movsb xchg into push out sub pop mov ret rcl (bad) mov aas jne cltd add daa in les cmpsl (bad) leave insb sbb push lret fldt das outsb je push push andb lods jmp xchg or jmp mov (bad) push jb add add add imul push nop mov pop mov add jns inc mov push adc mov push push imul cmp xor mov insl fidivrl xor lods stos inc in mov jo inc cmc movsl add (bad) cmp push call imul fldenv js xor jbe push stos cmp dec fildl cli xchg xchg inc jno (bad) dec in or test pop cmp xchg cmp adc test rcrb add (bad) xor and pop sbb jnp and adc outsb mov arpl repz (bad) sub movsb jb arpl dec fadds (bad) sub dec in mov xlat push push pop mov xlat dec cs pop pop outsl (bad) rolb sub jbe test xor inc add int3 jae gs cmp imull xor and push cmp das jg sbb mov shrl lds mov pop xchg pop add push fsubrl lock pop into add fild add int3 pop decl push mov sbb or imul ljmp sbbb stos outsb out shlb jae fs sbb aas faddl popa push sbb inc mulb inc (bad) xor inc repz adc cmpsb inc cwtl jns xchg lahf daa xchg fwait shlb bnd jp shrb cmp mov xor mov sbb fdivrl add add add dec bound movsb iret aaa push mov decl mov push jne mov inc das dec ss scas ds lock negb (bad) mov sbb int xlat aad ret xchg sbb jbe sbb pop pushf mov pop cmpsl repz xchg not mov insl push subl nop sub adc fstpt add mov lock inc test rorl mov cld imul cmpsl cli push adc lret les add pop and outsl cmpsl daa lock add xchg test and and cmp add push into in mov stos (bad) adc fwait (bad) inc pop mov cltd mov lret jle add xchg cli cmp (bad) push cmp or sub add xor mov aas lret jb xchg mov or adc loopne mov test pop mov ret cli dec stos mov (bad) lea lods addb mov adc pop push pop jns cmp add add aaa loope loope movsb out test std pop shr push add fnstcw sub and pop js sub (bad) int pop popa (bad) test xlat notl clc cmpsb shrb imul stos pop insb lods scas ds shrb push mov dec in push mov (bad) xchg inc fild adcl dec ret jb or out fsubl inc inc mov cmp ficomp (bad) neg pop sbb xor pop cmc fiaddl add add add add mov jp and les stos xchg out in add xor fisubr pop adc and cmpsl push call inc imul (bad) arpl int std push push outsb ljmp add hlt or mov das mov dec imul inc cmp mov loope cmp adc lds add cmp les adc push (bad) jle xor lret mov cmp pushf data16 push fst int3 repz (bad) shll rcl mov add lea or js mov les loopne push (bad) pusha ficom lock xchg (bad) xor mov pushf inc out ds and adc mov xlat push ss (bad) jb add push and hlt xchg dec test sbb cmp push mov cmpl sub ret or xlat into xor add add add push add in insl cmp cli mov jo fmul sub inc (bad) sbb push pop dec out ljmp out or or mov add out mov mov aaa dec (bad) cmp pop popf pop dec dec cli xchg in ret ret or rcrl ror dec popa cmp pop jbe lret xor mov (bad) lods nop mov scas xchg test jp imul inc dec sub mov push stc fistp add add adc test (bad) rcl arpl cmp dec mov sbb jge (bad) xor (bad) ficomp sub rorl lcall pusha mov sbb je dec pop pusha pop jbe addl aad pusha std adc int3 push xor in push sub adcl jmp mov adc mov sbb pop (bad) loope,pn pop add rcrb jmp orb lods in cmp or out adc inc push arpl loopne xor (bad) pop incb daa or mov popa (bad) mov push add stc mov lds mov stc adc pusha aaa push xchg sub stos pop adc test lret les mov mov add xchg mov pop in or loopne (bad) push repnz inc scas push mov rorl sbb (bad) icebp jp scas fadd das inc mov in jo cmp ja mov add adc mov je cwtl jle xor mov add add add add jnp scas jo loopne out pop adc mov cli mov imul mov mov jmp cwtl js mov sahf xchg mov jmp dec addr16 mov aad sbb loop decb xor jbe inc fmul dec mov or outsl mov sarb es xchg push jle push in and icebp inc les test lret xor add add add xchg enter xor push lahf (bad) cltd jo mov nop xor cmp xor mov enter jae xchg mov mov outsb ret and adc in xorl rcrb sub sub shlb ret sti call addl je push or leave out mov in mov aam mov pop add dec (bad) dec (bad) sarb in push add lret notb inc inc jle mov mov and mov lods adc dec add fistp mov mov and fs and icebp push xor inc mov jmp adc ljmp aas mov loop jbe add sbb jle (bad) adc loopne fldl clc test inc scas xchg add pop push inc sbb js cmp in outsb out popa sti adc xchg add add add pop lret push push jbe jbe repz shll push je out das pop xor mov adc push fs idivb xchg sbb pop jae mov (bad) andb sahf fcompl inc pop (bad) aaa cmp mov jbe insb add add (bad) mov inc movl mov call (bad) out dec dec sub in push adc mov out sbb inc jmp loop lods movsl test add sub incb leave (bad) (bad) dec pop pop inc xchg push sub negb xchg in xchg add pop jecxz (bad) xchg rcll jno mov stos insb cmp incb sti and sahf push cs enter loop sub das inc iret adc in cmp push jo int3 popf dec pop push and leave xlat (bad) das sub neg mov into aas jp pusha mulb cmpl aas pop in std inc sub mov dec (bad) push outsb mov lcall pop mov test and mov sub and xor dec sbb mov push adc ss emms fildll ljmp ja sahf or test sub push andl push dec push xchg clc sahf inc xchg jle jne cmpxchg or (bad) lods movsb mov popf aas inc outsb pop cmpsb push and mov inc stos sub mov (bad) (bad) mov out lods mov in cs in out imul add mov sub inc inc aas mov fcoms dec and es dec arpl dec fnop in jbe js jns js mov addr16 mov jno fwait xor mov cmp cli cmp ss cmovno xchg or pop xchg jg jp xchg (bad) sbb lods mov pop dec xor jo xchg movsb push in aad cli pop or push gs and shlb clc (bad) lods jb jmp adc gs mov xchg or pop stc popf jno lds mov pusha mov xor ret sub pop cld stos inc jae movl sbb loope dec (bad) xor clc mov notb ret mov jno lahf clc jne lahf dec mov enter scas clc enter sub adc rol sbb roll mov cld or paddb fstpt adc xchg fdivp shll shrl cmp add add add add xchg cmp xchg or shlb rcrl mov mov gs mov aaa sub dec je lret pop adc (bad) mov or ret addb mov and lret jne and (bad) mov mov dec sbb rcrb mov in stc push jmp pop add sbb daa mov add jle cltd rcr xor leave faddl add add add int jns push pop (bad) mov sub cmpsl bound outsl out adc xchg imul mov sub push and fs cli sbb movshdup fsubs add jle daa mov ret lret test (bad) sti (bad) fisttpl sbb pop mov jecxz stos pop hlt sbb adc push test add (bad) push in ds add mov fbstp das dec jo das pop subl add add add aam or mov ja and cmp mov adc cmpl imul inc aam dec out inc jnp fbstp push daa pushf ret pop dec pusha sub inc add jg mov mov popf push es dec int (bad) jne add js fcomip sbb and mov sbb mov dec clc push cmp sbb iret gs mov test cltd cmp repnz inc and add add add add dec loop in loop adc (bad) lock dec mov xor push push sbb addl lock mov jo mov sub nop sub push cmpsb call outsl mov xchg mov leave xor inc jb pushf dec dec sub add pop repz pop scas xchg out ret pusha pop add mov test mov int in xchg push add add add add mov fpatan aaa xor cli sub inc inc jp imul and push sahf cs ljmp sbb xchg mov xchg push daa rclb and arpl aaa test repnz fidivl xlat add shr jmp iret lcall dec xor push and add addl movsb fcmovne mov jmp add dec nop push ja clc and and mov add add add add cs mov sbb ja xchg data16 xchg in nop out leave pop and add test cmp clc out push adc pop sub (bad) lods add inc xor xchg fucom scas fstpl pop insl jb inc push fsubs xor out mov jmp call jne fcmovnbe pop sub jns mov inc loop roll cmpsb jp ljmp push cmp insb pop sbb aaa ljmp add add add out movsl inc inc test xchg sbb out add jp addl repnz (bad) or add xor xor daa (bad) les mov (bad) pop pop lret jle outsl cmp cmp sub lock jns call xor xchg pop xchg iret jmp shll inc push out xchg test dec stc cmp or dec cmpl insb std ret mov push jo add add add inc jmp mov nop int pop adc sub iret inc scas in int3 adc push jnp pop push lock pop inc add sub mov bound jecxz imul dec lock jno cli pushf inc (bad) jns dec rclb inc jmp adc lret ret jg jno adc aam jns push inc mov xor sahf xor subb jne jno xchg popf mov pop sahf popl add add loop scas mov popa not test xchg sub test fcoml enter mov pushf call js popa cmp aam f2xm1 pop in ror push mov incb scas and clc scas int3 scas or inc dec dec call pop clc pusha (bad) in push inc lea out sarb das xchg clc xor jl jae popf repz scas ss sbb jmp jl into ss xor mov pop rolb ret rorl movsb cwtl orl mov std mov popa pop add ja es adc xchg (bad) xor test pop push call je mov sbb and push bound dec cmp or test shll cld pop repz xchg (bad) dec icebp sbb je stc movb fdiv clc cs pop mov imul mov test cli inc aam andl es push add add add add aaa jle inc push lret push add out enter cmpsl andl cmp insb mov icebp mov shlb mov stos mov (bad) daa pop aad add (bad) adc dec or dec lods pop sub pop push cs shlb sub out mov and fdivrl jno imull gs mov ljmp lods in xlat adc mov test dec shr dec jmp out mov mov cld push add add int mov stos ja mov in or adc cmp sub adc adc jle enter pushf dec int3 push (bad) fistp pusha shl cmp or nop ss mov (bad) pop mov idivb xchg pop stos aas and in fcomps adc sbb mov lahf repz jecxz nop addr16 xchg fnstenv inc enter fsubr xchg sub cmpsb jl mov inc test add add add movsl xor sub movsb cmp out mov scas cmp dec inc xor in sbb xor pop adc inc out push pop xchg out sbb add adc addr16 addr16 inc pusha (bad) adc bound mov (bad) popf sbb lret test add hlt inc push ret into cmpsl mov lcall and add xor mov aad in pop mov std fistl dec jmp mov add add add pop imul pop in icebp in xor popa aad negl aam push (bad) adc sbb in mov (bad) das cmp xor (bad) aad mov sahf mov stos sub in xchg sub stc outsl add jno imulb jno mov lcall pop lcall xchg fimul mov imul push dec cld push scas inc ljmp sbb xchg add jne and adc mov lods sub mov flds xchg (bad) add setno lahf dec das fwait call mov addb popf js add stos push dec jl sub or xor lea inc xor inc or mov push pop out push and cmp cmp faddl fldt pop and lret jae insb mulb mov test (bad) push or push sub add add add inc jnp test adc fldcw (bad) mov cmp lret xor xlat aas mov (bad) jg add inc xchg cld pop cmc scas xchg popf aas pop adc mov aam fidivr mov inc aas inc jns notl sbb inc fild push int3 sarb push scas out rcll ret mov pop das pusha jo pop mov adc in sbb xchg insb lret rcl sti es (bad) xchg fsubrs add add cmpsl push in nop ret sti (bad) mov addr16 adc sti mov addr16 aad inc jmp xchg roll jb lods addr16 sbb test inc mov add test inc push fmuls test push test mov jp sbb pop pop pop mov fyl2xp1 and test (bad) mov cmp add inc mov xchg icebp mov mov test scas inc sub adc push add add add dec les and das xchg jg mov imul (bad) jae mov pop pop pop dec test pop cmpsb xchg mov pushf pop lea mov gs add cmc pop xlat and pop out jp rclb lret jle cmp test mov dec iret ja (bad) push xor ret mov in dec mov cli ds mov sub jo mov stos ficompl int sub bound jge lock ljmp (bad) imul xchg push add add mov inc mov es idiv sub push mov sbb insb iret xchg movsb xor insl pop mov lret and mov in imul dec xchg inc rorl pop pop mov push mov imul ljmp xchg ffree lock pop les xor fincstp ss or inc (bad) fdivr nop adc or repz add mov pop mov daa dec mov icebp xchg cmp lahf pop inc and int3 test call subl and inc ret pop pop and mov adc mov out push popa xchg mov inc or ljmp stos (bad) jbe xchg int3 (bad) push mov stc adc decl sub fs mov imul (bad) movsb pop sbb mov push mov sub add add or jo push mov xor cmp mov mov pop rcl push push mov jns les pop dec cld xchg jae lahf inc sbb orb cmp and movsl ret in in stos sbb xchg jo insl pop mov divb or sub cmp add call les subb in jb push mov ds sub movsl mov push scas add add add add aas add movsl lret pop xchg sub loop ret sarb lods fstpl jae push inc js popf lds jl mov or mov cld mov lahf stos jbe (bad) cmp jo (bad) stos (bad) xchg in pop mov xorb xor jl in push mov push sub js cli (bad) or js dec fist fisubrl test shrb adc aas data16 int3 push test (bad) mov xchg fwait popa popf jmp add add add add rclb sahf outsl outsb shufps in lahf ret lcall aaa sahf outsb mov push mov pop out movsl mov cmpsb lds push inc mov add push aas repz push in cs jno lahf pop pop gs pop jo cmp fidivr inc inc shrl lods faddl cmp stos sub fiadd push inc jb push stos xor jle sbb push jge addr16 (bad) jno jne popa dec mov or aaa fiadd add add out (bad) aam push dec pop lcall clc imul cmpsl or nop lcall mov mov pop bound sub sarb jl fadd arpl loop xor iret in js jge std mov jb jg enter push pop das fs and and push lods pop sbb sbb push cmp xchg mov popf repnz add cmpsb in cmp (bad) mov add mov cmpsl mov add add add icebp (bad) fstpl dec dec test xchg mov popa jle sbb mov cld clc loopne cli or add sbb mov ror (bad) dec sbb das pusha xor sbb movsb push mov cwtl je and movsl arpl xor outsl (bad) jge sbb xchg cmc and test ljmp js jb xor mov jnp inc lds lcall inc mov sub cli ljmp add add add add and icebp in mov inc sub mov hlt loop sbb and das cmp jo mov xchg gs sbb (bad) js test addr16 test dec push add mov mov enter pop mov ret ror aad inc pop fildl insb pop (bad) fisubl rclb mov push and sub and cltd dec cmp mov xor aaa xlat cmc push add add aam dec sub push cmc lret shrl lds push test dec and dec jp and mov fldl (bad) sbb pop mov daa mov imul and leave in sbb xchg scas pop mov outsl cli mov push inc cmpsl pop push inc or dec in aam add pushf ret push addb mov push sbb inc fcmovnbe dec jmp dec rorl or dec xchg mov add add add and ds nop inc aaa push push sbb add mov push mov leave xchg and dec dec std sbb call lcall arpl xor mov das out ja and push imul sbb jmp or jg jmp cmp fldt (bad) fs cmp push xor cmpsl jnp nop cmp lcall jb enter rclb dec add add add imul nop lret pop and jne cmp cld int3 mov (bad) popw ror data16 es jmp loop out xchg xor test icebp xchg sub scas dec int in aaa leave pand push cmp pop sub cmp test cmpsb mov and adc fs xchg leave notl jge mov jl in hlt mov inc aam adc popf add sbb cltd pop jns pop cmpsb orl add mov xlat pushf push mov lret data16 push and adc aam icebp flds sub jno push jns jg rcll arpl pop aad js fcmovu xor sbb das cli cs pop cmc jg sub xor xchg fdivl dec xor push es std sbb imul inc lods pusha add pop xchg test xchg xchg std xchg cmpsb push pushf daa push mov push adc out add add add aad jns push aam cmp aam cmp (bad) test in daa pop lahf scas adc xor and leave ss repz jno mov mov pop loope data16 mov jae int3 movsl mov cmpl inc (bad) dec dec push cmp inc jo fnstcw cmp cmpsl test fisttp mov lods icebp push aad and es pop stos mov add out mov cmp sub xchg bnd add xor fistp xlat add add add xchg imull cs ds gs ja cld pushl pop push xor out (bad) jbe push xor inc cmp jge add stc cltd push js data16 jg lock clc mov in movsb arpl mov push in sub bound add decb dec xor pop or (bad) in jmp sub aas or inc mov das dec xorl in ret fstps cmc ret cmp pcmpgtw push fstl jbe add add add add test cmc mov roll mov arpl dec pop popa idivb xchg ljmp sbb mov add cmp sub cs (bad) xchg ss idiv pop je mov je push sub ljmp pop mov mov sahf and lret cmpsb lods ja pop arpl rorb js in xchg mov data16 cmp inc sub push mov mov ss aad push add add add cltd pop inc adcl push cmp push and bound mov idiv cli adcb clc clc mov push dec dec pop fs pop jbe sub movsb cmp test pushf lcall test lahf inc xchg xor cld rclb sbb in (bad) jb test pushf mov and stos sub cmp sub xorl fcompl lahf mov sub pop ret fistp add fld aam ja cmpsl or test pop shll mov (bad) stos aad fistp scas mov int enter inc jg imul popf loop cltd sti data16 jl (bad) (bad) cmc mov mov (bad) fmul and aam call xchg xor inc aaa std ja jns lahf cld cli dec xor stos push stos pop movsb mov cmpsb dec into cld lods hlt arpl addr16 adc mov (bad) dec (bad) xlat jp sti adc add add add push xchg push pop dec jmp (bad) pop call cmpsb xor clc jo,pt loope lea pushf xchg mov dec or addr16 pop imul imul pop outsl and mov sbb pusha push (bad) aaa sub add inc loop ret sahf inc inc mov mov and aam out mov (bad) jp or outsb dec movsb xchg xchg mov adc mov insl mov fdivl mov add cmp jno push xchg test cli xchg (bad) cmc jle stc (bad) repz xor mov push jno sbb dec js mov xor test pop or jne fisubl stos adc rcr inc fidivl or out jmp add test mov inc (bad) out sbbl and mov or aad xchg lds subl xchg inc and jl add jmp cmp ss add add add dec mov pop bound xchg je or out pop aam sahf repnz dec push push xchg ret addr16 es xor sub xor cmpsb loop dec xlat fs pop jg aaa rcrb xchg movsb (bad) hlt ficoml push pop ret push or repnz mov pusha ret loope push mov or and loop popf pushf cmp adc or stos add push mov dec mov ss pop add sbb (bad) jle loope add in xchg lcall mov dec push adc fbld in bound mov inc sbb lock cmp movsl add or adc fstpt ret dec into outsb pop std mov sbb lods mov add add jecxz (bad) jnp ss mov fstl mov lret dec outsl iret fsts loope fwait pop pop jnp data16 sbb aas scas xchg jl fiadd inc imul pop cmpsl scas das into add add add fisub jnp and loop pop pop cmp lret orb inc cmc dec aaa dec xor push adc or sti fnstcw std sahf pop and mov out pop inc lcall inc xor push inc adc inc ljmp out push ret and cmpl sub mov jg jmp repnz outsb in xor xchg cltd xchg scas test mov add dec push xor cmpsb leave dec jmp cmp jl in popf push add add add movsb jns xor (bad) movsl in jae mov test cmp rclb or xchg ficoml pop pop xchg push repnz pushf lds cld loop fmull stos andb mov jno dec leave mov mov js or testb dec scas pop adc das aam push ret lcall sub into mov push add jle or popa outsl push cmp mov out cmp pop sbb ljmp add add fcmovnb sub hlt xchg mov test scas dec push test or sub shrb addr16 pop xor cmp lcall (bad) mov inc fstpt mov pop lcall rorb pop push jo outsb adc or push push mov dec mov jnp or std fs mov push addb fwait xlat insb hlt outsl pop subl xchg cmp and scas faddl add add xchg outsl std pop int3 pop mov or in pop push shrb adc fs icebp movsb flds data16 ljmp or cmp jp int3 or mov (bad) imul test mov pushf add sbb pop aam jb xchg stc movsl mov leave ja les xor daa sahf or mov sub pop repnz lret sub push bound in sbb pop movsb into ret dec add add sar push xchg mov faddl add add add add movsl outsb mov clc lds push aas jnp add add mov int3 push xchg cmp sahf ficoml jo mov in mov or sarl in nop ds and outsb xchg leave (bad) fisubr test pop cmp adc adc sub inc movsb mov cmp lret mov xor xor repnz jecxz mov mov mov push mov shl add ror xor leave add (bad) mov add add add test int3 shlb adc or loopne ficoml jl xchg mov jbe aad repz fstpl mov cmp jl jg xor scas icebp dec and dec cs ljmp mov inc inc xchg out mov mov xchg add (bad) mov stos add jae sub mov jne jnp insl mov add xchg popf stos (bad) sbb sbb add (bad) push or aas or shll imul fiaddl mov dec ja sub push dec dec mov or fisttpll shrl cmp sbb sub mov dec mov dec js leave inc jb idivl ret jbe into cmp js cmpsl dec push dec test es negb and xlat dec insb popf ja loopne jb dec in in mov imul xlat xchg pop cwtl movsl mov adc add add in xchg lret sbb xchg vmulsd sti pop pop mov pop call and push aam dec pop repz mov or je test push push sti cmp imul in and loope push mov int3 repnz and gs test bound lret push lret inc adc stos or cmp xchg (bad) jle pop out add aad mov fisubl ljmp aaa pop bnd test cs xor add inc iret ja pop dec cmp dec pop (bad) sbb push imul mov and fidivl inc ret in cmp mov in xchg push dec iret shll (bad) or sub sbb inc push mov dec lahf cmc pop jp pushf repz push mov sub mov popa repnz jo cmp test jg inc into fwait call std lret int call mov pop push enter inc mov xlat faddl cmpsl xor add add add cs jno mov movsb repz cs iret jnp movsb idivl fcmovnb aad pop (bad) movsl cs push sub ds push ljmp sub faddl or sarl aad scas add dec jae jp jmp popaw lret mov (bad) push out out lcall xchg rolb js out cs add xchg fsubs pop mov sub xor pushf stos cld mov push cld aad dec int3 push sarb mov lods es imul aad sahf les push rorb adc or enter popl stos or jge sub pop xchg inc scas jmp sbb push lahf xor aam mov aam inc out inc cmpsb dec sbb in popa repz into jns js fisttp lret mov rolb (bad) movsl mov mov add add add add mov push out lea pop inc nop repnz sbb or int3 pop icebp fisttpll cmp adc adc into js push dec (bad) cmp mov push push (bad) fstpt mov in fldcw cmp pop pop dec jo push mov rcll repnz (bad) push lods lcall (bad) cmp dec stc dec (bad) xchg pop sub jae sahf pop in dec into fsubl jl cmpsb xor adc in lcall popa pushf mov sbb add add add push in jge mov (bad) pop push scas imul cmc outsb imulb daa jne push mov or cmpsl push pop test sub std ror pop test icebp sti mov pop sbb popf arpl cmp xchg stos inc jge sub sbb push cmp or and pop mov fmul add inc in (bad) out dec ss push (bad) ljmp (bad) jmp push stc (bad) mov sub lods andb in xchg cli (bad) mov nop mov add add add add mov lea jae mov (bad) (bad) dec lds shrb ret mull jg lods mov ret (bad) cmp lea cmpsb repnz dec incb dec mov dec outsb mov cmp mov mov push idivb add pop mov push mov mov mov xor mov ror bnd outsl (bad) sti or shr mov sahf popa aad xchg jne and push jne cmp pop das in loopne add add add add (bad) inc xchg icebp lds sub or xorl sbb rcll xor dec loop out xor adc fistpll push cmc and insb xchg dec ljmp in gs jmp push icebp loop div cltd mov pusha je xor lea cmp lcall stc cld xchg adc and inc rcll cld push or jg test sbb and lcall push mov je cmp add lds jne imull pop leave outsl sbb cmp push data16 xchg xor mov jp jno jns fst jnp (bad) sbb push gs inc cli jge cmpsb lods ljmp mov hlt pop ljmp sbb aas inc std sub inc dec in roll shl repz xchg movsl test inc dec and ret push stos sub dec xchg jp addr16 jne out sbbl stos pop add add add test loop and mov or mov sub adc in inc das cmpsl ret cmp aad add mov addr16 in push pop mov mov jno,pn lret adc movsb loopne loop repz lret mov imul aad enter mov dec fsts pop cmp sarb jnp pop ljmp jge into dec and xor pop scas jecxz outsl inc fildll add jecxz into (bad) scas fwait cmc and mov mov inc ljmp sbb (bad) lret and inc push jae cmp rorl (bad) jno adc mov sub insl mov xchg xchg rcrb sbb pop cmp jl inc push or xchg and jp ja push les pop push jo jb xchg inc adc adcl mov adc rol not dec xor bound sub sahf imul inc clc mov inc add add add xchg jb (bad) xor or jg xor test mov scas lret mov enter popa into icebp stos jnp cmp sar sub mov loope mov push cs add add jbe xor jae adc cwtl and pop mov stc pop cmp lahf dec sbb outsb add add clc jmp loope push dec pop lds add into jns scas pop xor add scas dec je fisub jge push jo cmp add add add add push xlat mov (bad) insl stos out rorb stc cmpsl push push aaa (bad) js not push adc or ror add mov lret pop xchg mov xlat xor daa pop pop mov xlat pop test and push xor xchg loop xor lcall aad xchg addr16 lods jg aaa pop push mov (bad) iret (bad) mov rcrb adc xor scas and push inc pushf shll adc push add and mov lods xchg (bad) in inc in call popf add add mov outsb or mov jae mov int fwait aaa inc out mov push fstps iret mov nop (bad) lret or test adc (bad) dec add mov push mov (bad) or insl sbb push scas ja jnp fsubrp push out mov push dec repz pop dec test arpl push push add add add inc call fstpt adc dec int jecxz test xlat sub xchg inc mov cld fistl jns and and push xlat rclb add mov inc pop in lock push pop xor or fist nop mov jmp or ret fimul mov xchg hlt fstps test nop (bad) or lahf lahf sub fsts mov xor sbb jl add sub mov data16 hlt adc mov repnz and sub jnp xor repnz ljmp das pushl insb outsb in mov xchg mov pusha (bad) call mov mov stos clc fsubs subl outsl mov pop orb adc mov xchg mov ret sub out push data16 arpl pop xorl cld and mov test pop lahf mov adc push add add add nop clc mov je adc lods and or pusha orl cs adc sub push sub lock jmp jp sbb call cmp jge sarb fs xor sub sub pushl pop adc fmuls (bad) push lcall adc inc xor loopne mov add andl sbb or aam (bad) sbb sbb aad ret add add add pop sbb push mov stos leave inc sbb pop dec jae pop push jae xchg push iret add inc pop adc cmp adcl ret mov sub push xchg xor sbb fs inc aad aas shll daa mov push sbb push clc mov inc push subl imul imul rorb (bad) lods iret or or cmp sbb out lcall test dec adc clc sldt add add in cmp fidiv push dec jecxz jae fs xchg out add mov xor ret mov jmp cwtl jne outsb cmp fmulp out or mov xor pop xlat or sar dec not dec mov pop or mov jl je jo (bad) ret rorb test mov jae sub sahf hlt cmp or xchg scas in mov or cmc mov add add add jno fwait in nop pop mov and or sti popf repz mov js lret xchg xor cltd xchg push in stos (bad) icebp or or jns or es addr16 js dec enter fsubs daa xor insb mov mov fsubrl je shrb inc xlat push mov sbb pusha sahf sbbl mov (bad) sub nopl loopne jo mov or jne fistpl jnp cmp test fdivrl adc add test inc dec jo scas mov lea lock sti push mov xchg lahf stc push xchg pop repz xor sbb bound popf in add insl xor subb imul mov repz mov (bad) in dec mov popa cmp xor push imul push mov outsb cmp or in shrb mov push add add add add pop and xor pop hlt jecxz test adc xor ret and adc mov test cld stos xchg jecxz std insl or lcall insl xchg mov add add out jp outsl cld mov jb sbbl xchg lods lods xor push gs xor mov pop dec jae aas mov popa push xchg mov rolb fcmovnbe fwait cmc sub (bad) cli cmpsb push xchg jns sldt add add add gs and fwait int cmp cmp into aaa ror mov pop out hlt jg,pt jne call jno jne adc lahf jl mov jle pusha push cs lret jmp jb xor jno into inc orb pusha cs cmp stos cmp repz push lods jbe pop scas sarl int stos sbb mov sbb imul daa dec push lea mov popf iret push push or add add add xchg xchg inc fiaddl mov and lds dec push push cmpl clc das imul dec int shrb aas outsl add repz adcb inc lock clc inc sbb popa lock sub inc je jnp std out lds in shrl enter or mov or lcall iret xchg jg outsl test loope jbe fwait sbb punpckhbw push mov pop or lret add cmpl jae out xchg outsl add mov scas sub movsl cmp add ret pushf pop xor lock popf cmpsb xor call std pop (bad) enter dec aad bound mov adc jo pop sbb xchg and sbb or mov xchg and jle xor jbe or pop sbb arpl ds dec out cmp inc sub or or or jecxz nop sbb inc inc lret jo jno fs jp jnp rol add add add add inc lahf or add cmp or add adc xchg imul divb lcall and or sub loop stos cwtl out sahf scas xor imul push lret mov jae scas fstpl leave or and adc sbb push fbld aam rolb dec test subl xorl pushfw inc push cmpsb fisubl stc lods sbb push ss cltd pop pop popa pop cmpsl add add add xchg xchg adc dec in sbb xchg xchg xor lods in adc ret jmp fstpt popa cmpsb push les jbe ficoml or insb sub cmpsl ja mov add jne and sbb mov pop out movsl imul mov in jbe ds and xchg push mov xor inc into int3 cmp dec push sub adc xchg sub push mov and dec repz test add add add add add cmp (bad) lods inc xchg test xor fildll dec fyl2xp1 aaa fs jmp pop enter add dec dec inc (bad) fnstsw mov sub xor movsl repz (bad) into dec dec cltd hlt dec dec jae (bad) rorl lods fs sub push mov inc push mov or movsl cld imul sbb in out xchg mov lods test jmp xchg add xor inc fstpl sub cmp repnz pop mov jne sub lret cmp inc xor lock faddp push dec outsb mov sti daa jecxz es and dec cmp mov ficompl mov cli and repz sbb adc pop dec mov xor or or or add pusha mov adc push jne cmpsb cmpsb pusha xor push (bad) cmpsb xchg mov inc mov inc movsb jmp xchg push xchg push lahf cli das fild fstpt dec and mov push add add add add jb ss or push in xor aas in int nop cld scas jl icebp outsl pop es xchg (bad) push adc mov mov fildl xchg pop or pop xchg sbb push int insb push mov sbb xor leave jle rcrb rorl into scas cmpl (bad) notl push or cmp xchg dec sub cmp mov (bad) (bad) add cmpsb mov popa ret sub mov mov imul add add add jne and stc shll cmp push or (bad) and inc int3 dec ss movb out dec insb fsts adc outsl pop fcmovb cmpsb sbb ljmp push ficoml add push xor lahf mov outsl mov cmp dec add sbb int3 sub add mov out add push fwait cmpsl inc mov push mov cmp fsub or jo push nop (bad) mov (bad) add add add pop pop sti xor popf add jo sub xchg int3 mov lea sbb je and and xchg mov push pop dec fwait inc inc cmp inc xchg cs rolb pop fstl sub lods ret out inc sbb (bad) xlat movsb or sbb fisttpl cltd insb mov sarl push stos pop ja cmp mov push mov mov xchg xor sub cmpsb stc pop ja inc or push and out xor push dec ja pop repnz add add add and or pop dec lahf adc enter jns sbb and dec das (bad) fnstsw push (bad) gs jmp push or cli pop and lods stos addr16 ja lea scas dec out mov sbb and push cmp xlat inc jle adc jno (bad) push sbb xchg stos or (bad) jne rcr inc fadds icebp das sub test push cmp into sbb clc lods mov jl cmp push clc fs hlt shr mov sbb jl jp inc inc pop cltd push sbb test push pop rorl lds and dec xor je dec jns xor xchg push add fucomip loopne push sub les xor lea xor aaa fidivrl popf pop mov jns jecxz fcmovnb dec jae ds fbld mov mov notb jo aad jle fimul inc adc jl add adc fwait negl add add add out outsb sbb fnstsw jmp sbb lahf jo push das bound lret adc jnp jbe fisub xchg dec leave leave and xor in mov jecxz test aaa cmp mov clc mov push jo pop push sub add and (bad) out ja mov adc ror push outsb in mov cld das pop in inc rcll xor stos in adc or push add jae sub or xchg cld cltd sbb mov mov xchg ret orl ljmp push lock rorl mov mov mov mov call jp sub xor aaa push add add shl fstps imul frstor cmpsl adc mov add stos out xchg xchg pop scas test into je (bad) jns add add add ja lods sahf push aaa xchg xlat inc pop mov sub add ret inc sbb int3 cmc jae repnz pop lea xchg add iret jl fdiv dec stos jae and mov sub nop (bad) jmp scas xchg ret sbb imul fsubs loopne push inc push cmp stc inc sub ja sub mov icebp push insb pop outsl fcompl add mov ja pop (bad) hlt loopne xchg jp in xor xor loope ffree outsl sub out mov inc (bad) dec or jb gs or in in cwtl sarb lret (bad) insb cmp leave pop adc in and pop inc fwait cmp cli sahf mov xlat xchg xorl into fnstsw xchg mov sub xchg jae fiadd jno mov mov divl data16 mov (bad) push xchg int3 dec adc adc add add jbe push btr sbb movsl loop out sbb int3 repnz pushf insb cmp jae jne jo lock xor pushf je outsb clc push call cmpsl push aad popf jo mov or dec dec mov push mov add stc leave loope aas sub adc and push sub ds addr16 and push mov adc dec xlat ljmp pop push jp jmp mov sbb inc jmp mov add adc add add fcoml in sub test adc lret xor outsb xor add lock jmp mov pop mov xor mov cld out stos in jno movsl mov adcl rol jp stos mov pop loope inc mov fldcw sahf (bad) pop sbb jecxz mov daa (bad) xor jns insl sbb and nop ljmp push push cmp je roll les add add pop inc inc cmp test dec cmp aam movsb inc (bad) pop int3 jl jecxz aad sahf mov test push rcll inc push cmp roll ljmp popf ret movsb adc test mov scas (bad) mov shrl push sub loopne aaa out cwtl test or sub add (bad) lods mov js add cmp (bad) jne pop movsb push (bad) xor mov fs out cmp and (bad) lds or fmulp (bad) xchg data16 fcompl inc cmp add out cmpsb and mov mov ret insl jae scas aas insb sub cmp popf jmp cwtl dec stos out jae mov cmp adc aas or pop popf pop scas (bad) jmp xor data16 mov in pop sub cmp sbb shll dec adc pop in sub mov push (bad) add insb push ret test stc daa in pop and pop movsl popa inc scas push jo cmpsl pushf push je pop insb cltd ja sub mov pop cmpsl and sbb jae adc cmpsb test push mov mov xor call mov fnstenv and mov scas sub lahf rcr jmp sub push inc mov arpl pop (bad) (bad) or and mov outsb push fildll add add add gs mov sub loop cltd xor aaa sbb rorb mov sub in lahf and fstpl mov dec loop xchg jl push dec stc fwait inc xor dec mov mov out rcll adc int3 mov out fnstcw push mov js xchg inc inc sub in add mulps mov std xchg mov rcll sti fbld or jnp push repz mov inc cmp add add add lods cli (bad) fistp cmp dec mov flds cli pop inc push iretw test insb bound les ss push mov fcmovnu push pop sub movsb pop dec adc arpl xchg enter cmp aas and push sti arpl ljmp loopne push mov and push cmpsl mov (bad) push mov jecxz cli test inc fdivl fwait inc rolb icebp imul xchg pop lds test mov loopne or add add add xor jo pop inc adc jle and fistpll loope fstpt fiadd lods ret fimul xor mov xchg adc mov push insb push add push adc jnp cmp out pop aam movsb hlt shrl loope (bad) xor xchg mov jp or push adc push push push mov fbld and mov arpl xor into and jne bound adc pop movsl and add add in stos ja stos push mov jge or sub pop movsl (bad) dec repnz repnz sar imul dec leave (bad) xchg nop (bad) (bad) sbb jmp jo sub lea sub jnp out inc iret jae or push xlat push js incb shrb add fs push jle icebp lret xor mov outsl pop jle movl insb lahf stos push sub mov push out repnz add add add test sub outsl (bad) jno adc mov ljmp lahf add mov xchg mov push fimull lea popa cmp adcb push adc mov and or cmp adc cmp push adc jl call sbb ljmp shr test cs (bad) mov adc jl leave (bad) pushf js jp (bad) lea cmpsb gs ret out jp add pop test cmp or cmpsl push and push into fucomip aaa movsl lahf jle xchg mov sbb outsl xchg lcall mov sub xchg int3 int sub lahf loop jmp mov cli dec xor add cwtl mov scas dec xchg aam dec insl sti sub ret daa xor mov fcoms pop mov inc adc mov outsb or inc lret iret jle push mov sub sub xchg sbb movsb sbb cmpsb dec in xchg iret stos iret scas adc das sbb ret fdivr ret bound imul mov popa push (bad) into jecxz je fistpl push lods test adc mov pop ss int3 jecxz and inc js sub pop pop cmp loope mov dec or std mov into nop or pushf inc and mov mov jge jb push scas pop rcll or mov push js xorb mov loope imul add add add mov insb pop testl rcll or push stos and mov nop mov xor fnstcw movsb or jb inc adc fsubrl xor sti xchg push loope pushf inc inc mov (bad) mov and lret das insb mov popf sub in dec in dec arpl (bad) inc sbb cmovo sub test lret gs ror dec sbb mov xchg add mov std push movsb gs dec (bad) mov add add add cmp pop push push adc clc dec incb gs or andl fs inc aam or mov xor xlat sarb sbb popa enter jb int3 cld movsb mov adc aas adc or imul sub push sub sub iret jnp add add pop aad loop lods pop mov fmuls dec je test jnp std xlat orl mov add ljmp add add sti arpl cmpsl in xor gs add inc aaa mov lods dec (bad) push jle jg pop pushf mov pop pop insl inc jge,pn cmp stc enter lahf mov (bad) aam add popf pop insl popa imul std xchg sbb xchg add bound or xorl cmp pop add jnp lahf mov fwait xchg pop or mov mov pop sub test xor adc out out adc pop push mov xlat mov fcomip ljmp fildl mov inc popf mov sub cmpsb sbb mov leave add add psubb les push jecxz mov jge xchg lret lods jb std je fcoml mov sub addb ret xchg out fldt stos cmp ret jg mov sub shr (bad) cmp cmp imul mov push out movl sub out (bad) jmp ficomp test push inc popf xorl pop loopne mov movsl dec dec rorb adc paddd push push mov enter xlat inc leave out (bad) mov cmpsl (bad) outsl dec mov jmp call pop movsb or mov popf mov or push mov inc test insl ret loop outsl pop jecxz pop aas dec popf push clc inc mov jo jb imul xchg roll add add or inc in xor into lret or xchg add xchg std jp sbb (bad) (bad) pop add cwtl or mov idivl add es cmp add push push xor mov stos pop sti mov pop es cmp jl (bad) sbb sbb push and cs and jle and cwtl fdivrs and or addr16 or inc mov sahf inc imul fistl sub adc jnp fmulp cmp xchg cwtl dec gs jns shl push fistpll (bad) stc nop push mov sub sti test out fcompl orb loope sub test inc les data16 call mov mov or loope mov addr16 jns loopne mov mov adc inc popa add cwtl jae add bound ret inc scas fmull add bound xchg and mov test xchg (bad) mov rcr imulb fucom lods popf aas sbb fldl or ds jecxz cmp movsl mov insb cltd ja fidivl ret repz dec das pop and jmp push cltd mov xor in sti inc push pop and imull (bad) pop mov cmp mov xchg out rorl fcmovb clc add sbb out shlb or cmp imul adc rol fisttpl mov cmp in (bad) jg cmp inc pop xchg add dec sub lret mov mov nop sub pop sub add dec aaa (bad) lret bts es in ljmp out sbb dec (bad) sub jge xchg scas xchg xor push pusha mov dec cmpsb jo addr16 mov add fildll iret (bad) fnstsw hlt pop push or ficom xchg dec icebp sahf jg add add add add rdmsr cmpsl mov mov sub movmskps bound iret scas shrb out mov inc add stc add adc mov mov sub push aaa ds inc mov sub mov and in cmpl cmp cmp inc push sub jb ljmp add sti jp xlat out cltd jno add sbb hlt xor dec test in es cmpsl push push jg add dec rorl cmp and cmp and xchg push movsb into mov cwtl push jns mov stc or pop sbb push or pop sub test mov mov xchg lods mov dec xchg in or nop inc push adc fisttpl movsl call xchg xor mov movsb sub ja push bswap sbb rcrb push (bad) jne sbb clc movsl aas cmc or imul add add mov icebp and jb xchg add dec xor mov adc dec pop lret sahf mov cmp xchg adc int3 es fnop shlb (bad) and insl inc out sub dec or lahf mov dec test pmuludq in into loop add std cmp jge pop jb ficomp rclb (bad) and jle mov push fstpt iret sub xchg test movq int3 sahf enter lea inc cmpsb fcomps add and push cli mov push int3 mov and leave repz jmp iret aaa dec lea pop xchg cmp fcoml idiv xor or xor lea sub adc dec fmull mov xchg int dec sbb fmull add or push icebp mov and ljmp xchg imul out mov mov dec out mov stos cmp and inc arpl outsb (bad) mov mov cmp scas add add add add ficoml out insb lcall sbb dec mov leave (bad) jae xor stos aas jp add inc sub xor bound inc lret xor or mov mov ret mov daa xor inc push int lods fadds movsl dec push aaa daa vandnpd ret shlb or and stos cltd mov cmp roll mov push cmp (bad) (bad) scas xchg pop fdivrl add add add add enter sbb cwtl push xchg lret ffree lds pop fs dec jne dec (bad) loop cs icebp jns adc mov pushf pop mov xor or pop lock mov add fnstsw or sbb and fbld sbb push jae sar push add (bad) lahf lret push push and rcll or push mov mov cmp faddl jmp ss sbb xchg or add add add mov mov int3 mov pop xchg dec sub push in addr16 and jecxz jne (bad) jl je jae pop out jnp and lahf sub xchg mov outsl pop xor mov movsl sti out pop and xchg into subl fucom mov pop adc mov xchg (bad) fnstsw es cli and sub popa jge test mov out gs jo cwtl mov cmp cmp add jae push sbb cli lret xchg push inc or mov push add hlt scas movsb adc jge sahf not insl xchg inc push addl imul push shlb xchg xchg push clc pusha or and inc jp aam fdivs imul aam fimul imul fcomps aam mov mov cmp dec ret loopne dec inc lret xchg loopne pop sti push mov arpl cmp in (bad) mov mov mov into stos push ficom push mov push sbb mov popa pop inc loopne repnz xchg add add add push jl mov mov ret xlat and xchg cli jne ja pop jb add into repz scas jl scas loopne mov jge ss stos in lahf sub or jnp jp inc pop bound (bad) in ficoml lahf dec xchg inc fsub call mov dec push add dec ja test pop test mov in in and das stos (bad) sub and add add add jbe cmovnp mov mov aaa or jb nop xor std mov call into push inc outsl jne mov outsb in ss jns test arpl pop pop ds dec jo movsl pop loopne aaa out das bound jp (bad) mov sub add jmp lock jno int3 in insb das sarl loope out push call movsl stos je ja xchg fs hlt xor mov dec popa into (bad) pop add jne push push adc push mov xor dec loopne jo jnp mov pop sub mov or pop sahf or scas jnp jmp ret jmp mov shll popf enter pop not or daa popa sub aas xor xchg sub test dec in add je xor push les stos call cmp mov stos xchg je pop push push mov sarl ds adc adc add xor mov push or testl xchg push cmpsb mov (bad) in popf mov push sub lea mov aas insb rol xchg dec test mov pop xchg push xchg fmuls inc aad push test (bad) sub movsb push test hlt inc movsb xor imul mov stc aaa xor mov lret dec icebp inc push scas in dec sbb xor push loope cmp mov mov movsb cmp cmc add add add add mov out je sbb xchg into sub pop xchg add outsb lahf and mov or lods fimul mov (bad) xor mov cld mov addps mov iret int stc push pop and xlat push (bad) mov mov mov in loope ja in pop mov (bad) lret mov cld pop or (bad) sub mov fs cmp jbe push shlb repz hlt das scas mov call addr16 push mov pop in dec mov add add add mov sahf bound aam lods add ret xchg sub incl dec push pop out icebp ja (bad) imulb iret mov enter mov cmp adc mov push ljmp jle xchg or fidivl subl mov ret lret iret sarb inc cmp pop or lret adc sbb imul cmp and nop pop push pop add fldcw mov leave add add add sahf cwtl adc push outsb dec sbb fisubl dec (bad) cmpsb arpl punpckhdq in mov ss pop frstor or mov push loop mov incl lret ja nop xchg push push xchg sbb fcoms stc lods scas inc mov (bad) and add (bad) adc inc pop test loop pop and iret xor cwtl fstl add (bad) jg shlb aam add popf push cmc stos adc outsl mov add add add movsb xlat adcb cmp inc push into es popf or push (bad) pop jae mov push adc rcrl test pop cmp movsb and mov add testb in cmp popf test adc (bad) loopne in add pop lds imulb jno or int pop add out mov int3 mov pop mov push mov out xchg mov adc ss mov sbb mov add add add add dec adc in rorl jnp scas data16 xchg stc cltd dec out pop mov (bad) call dec xor loop test cmc shrl jg mov aad repnz in fsubr insl mov jecxz imul (bad) and xor lahf cltd fst jbe sub lock ds (bad) ja and or cli mov (bad) sti cmp push xor push inc dec pop cmp xor in mov andl das xor pusha add add add add push (bad) rcl mov dec rclb xor gs push es jle adc enter fild test mov imul jg fimull ljmp arpl cmp mov test jns,pt xor out adc ficoml pop inc in lea jp lret das push lods sub add or rorb pop sub incl and mov xchg and out add add add cltd ret cmp test lds repnz es xor (bad) xor push fucomip movsb cmp in in aas dec insl add sbb ja rep lcall dec mov ljmp sub aad xchg push or fdivl sbb lock scas insl sbb insl cmpsl testl out or dec adc pop lcall lock sbb loope mov dec jo and call nop out xor or mov push fwait sbb scas (bad) arpl lahf cmpsb jno sbb sub test inc out and pop fiadd iret lret sbb lods es xor mov or ret adc rol mov mov ja push loope pop push and testl add int3 xor mov (bad) pop bound ret lret dec bound and inc imul mov iret lahf xor mov lcall cld add add add inc xchg (bad) adc jge mov or gs push push mov mov (bad) in adc bound (bad) divps imul inc cwtl push test sub bnd sub call jae insl xor and fcmove roll mov jne lds lea inc (bad) or inc test das jnp and pop jno add fdivrs xchg pop jbe lret inc adc pop sti mov dec mov add cld mov lea add add add add in mov adc adc sti and adc in add sub rcrl cmp jns sti pop sub fistp jbe adc cmp (bad) out (bad) mov (bad) rcr test rclb jle inc pop mov dec cmpsl cmp lcall insb adc das out ja icebp xchg push add adc in pop dec loop repz or aaa test cmp fiaddl add add add adc inc ss cmp mov mov mov jae xlat ljmp dec mov pop jle xor inc lock cmp inc mov inc rcrl pop adc dec icebp lods dec (bad) xor pop das cmpsl push mov jbe jp mov mov xchg (bad) cmp and ss (bad) mov out push je ds sahf aaa dec mov pop bnd inc jae int imul add add add add mov xchg ret jge xor sbb std fstl jge fwait lret pop (bad) rcr xor adc stos sub xor outsl sbb jae mov psllw jbe jb repnz sub icebp ds lods push inc cmpsl jne sahf sbbl pop push mov loopne inc pusha aad pop push aas dec inc inc sub es in hlt dec push loop cmp inc test test fs xor add mov and add inc pop or adc xor in bound leave add andb cmpsb cmp notb rcl jnp (bad) or jno stos push int (bad) test addl mov jno jge arpl in aas test sbb dec inc popf cmp fstl lods (bad) (bad) in shrb (bad) fdiv fldcw inc mov popa lret pop cmp and and add adcl ss or test add add icebp in lea mov or xlat dec jmp imul lret jg aad in jg imul aaa sub xchg push adc cmp add inc add ror adc pop cmc fst enter dec xor adc push sbb pop enter repz xor sub outsl cs jno add lret xchg lahf arpl inc sub and pusha sub insl icebp or cmp lods pop jae lahf and add add dec ja xchg jbe dec stos mov cltd addl cmp jne cwtl out jmp js jmp cmpsl mov xchg push xchg xchg xor sti jnp mov inc fistp lahf mov aas (bad) pushf dec mov (bad) out mov addr16 lret aas ja aad mov pop sub dec pop push push mov pop fisubrl jbe test enter fs test pop fnop xchg loop fimul add add add movsb fbld lods cmp mov mov push adc push xchg das mov jae testl mov dec sbb ja sub pusha lods loopne dec mov xor push pop sbb loope push sbb jbe jbe iret iret inc mov leave ja xor and jae ja push xchg dec jno jecxz xchg fstl es lods sbb mov fild mov out out lea rcll mov sub cmpsb fiadd imul push movsl int3 repnz push nop push (bad) or adc test frstor add test push data16 shll les fs (bad) ja jbe cwtl pop cmpl ds stos ljmp xor fs in pop sub ss push push not xchg lret rcrl mov leave dec add add add pop lods sub jnp push and jae push cmpsb sbb aad pushf or repz push lds sub in call (bad) mov push inc scas pop aam inc (bad) inc lret imull fcomps push das mov in test test in lret mov in neg test std les mov dec jb mov cmp ljmp xor and push sub mov js mov sbb movsb rorl fimul popa dec xchg add add mov mov mov or pushf shll dec adc (bad) xchg js and and test les fisubrl or mov stos dec inc push popf leave loop push test push cmpsl adcb push enter and fdivrl test out push fwait repnz fldcw adc cld jno jbe jb push in pop pushf sub mov inc push dec arpl aaa lahf (bad) (bad) cmpb xlat xor mov push cs addl fistpl loopne xchg movsb push pop (bad) loopne lods fcompl cmp adc icebp xchg fmull cmc mov push out mov test push adcl cmpsb xchg mov sub (bad) xor and test mov mov jo loop mov rcrb mov out push sub stos xchg mov out imulb or dec std stos popa mov fiadd sub clc xchg in lods popa push cmp add add add out add mov sbb inc sahf imul mov in cwtl jp jp (bad) xchg sbb sahf xor pop out pop loope mov lock testl jo sbb fisub daa xor dec add and add mov push or fwait js mov inc sahf and out inc cli fmul add sub aad ds pop jl jmp and cmc pop popa sub lds rcl cmpsl add add add add cmp cwtl xchg rcrl repnz xor and dec sub adc mov push inc cmpsl sub (bad) sbb mov leave enter cmp stc lcall shrl ja adc jbe mov add mov ljmp lahf ret imul pushf ljmp lret push mov push mov pop aam lea repz xchg inc pushl jno cltd ja xchg cld cmp add add add add arpl in sub icebp insl jge cmp mov adc (bad) enter inc or popf and xchg sub inc inc sbb int cmp popa icebp int3 movl add inc call je or xchg pushf mov scas cmp ljmp jle sub mov loop or stos gs (bad) gs jge (bad) (bad) and mov jl leave xorl (bad) test ds roll cmp cmpsl int loopne push pop cltd add add add add sub loop dec sub mov sbb push mov rol subl xor (bad) jbe stc repz push sbb jno mov je in xor in push mov fisubr xchg mov inc and inc push std lea pusha xor sbb mov jb cmpsl lds dec mov dec xchg mov (bad) lds mov mov (bad) pop pop mov loopne jg rcrl pop mov xchg out js test add add add shll add rcrb lcall mov (bad) cli outsb cmp adc xchg les mov rolb (bad) mul xchg jb jae ret jnp bound lea cwtl cmp or in les xlat xor push inc cmp test les mov sub adc fisttp ficom or pop add mov adc in add inc xor inc add add add cltd (bad) mov js mov fdivr out aaa cwtl dec aad and int3 out ds es testl sub lods in enter sbb ljmp das fadd adc xorl std jae xchg mov stos jge aad test sbb jl inc arpl divb fisubl xor mov mov mov jp imul stc aad cltd arpl mov mov cld loop dec test add add pop pop scas scas mov mov shl and cltd mov ja (bad) xchg push pop (bad) (bad) cld xchg push les sub loope out test dec and loop adc cmp jge xchg inc popa jne (bad) in stos ljmp int3 xor out sbb mov cmp nop mov jno sbb (bad) add push cmp mov fwait lea xchg movsl enter nop cmp pop data16 (bad) mov add add sub push dec shrb pop stc mov add enter xor clc aaa ss jle inc push lret movsl cmp jle popa (bad) push add xchg sar inc lods jb cmpsb mov sbb push js sub pop add xchg andl addr16 outsb mov outsb arpl lahf mov ficoml dec aam or lret jle lret popa popf out xor cmp mov imul fildl cmp mov scas add ds push outsl ret jmp adc std repz add add add cmp push ret je aaa int incl loopne pop stc or sahf cmpsl fistp dec cmp push stos mov dec add and fdivrl in dec repnz add cld mov iret sbb push jno cmc xor in inc cmp call pop mov pop in adc sti stc xchg data16 push lods add fildl jb mov loope pusha cmp mov dec inc (bad) inc lret or dec inc call add add add (bad) aas mov scas insl mov lret ss icebp xor mov outsb test addb je mov and sbb jno push sub add mov adc mov andb fimul pop (bad) hlt fst sbb fstp sbb xor dec (bad) outsb bnd mov and sbb mov test popf cmp push sub pop mov jl and add mov xor add add rorb dec (bad) pushf push aas mull pop mov inc jns xchg push movsl pushf or out push and xchg inc jle fsubrp push fnstcw (bad) fwait test enter xlat add shrb sbb mov jmp fwait inc movsl mov cmc addr16 mov jnp and in pop fistp mov mov inc jl call adc sub out mov or sbb out mov mov rcrb cmpsl test nop pop xor pop data16 add add add add jae sbb xchg fisttpll outsb hlt ja stos jns es and jmp je fs or into push fnstenv mov std gs jg repz cmc or ret addr16 dec mov push jae sahf repnz mov or xor out out mov fldt cli addr16 packsswb push jns inc adc sub jb mov mov les fdivr sub push dec sbb addl add pusha push cmc cmp add leave leave (bad) fcoms xchg cwtl mov loope loope ret aam inc shrl das fidivrl (bad) jecxz stos lock cmp gs mov fisubr shrb or loope xchg xchg (bad) mov lods or jge out or sbb mulb out addb xchg (bad) lret sahf xor stc fidivr lret push loope cmp jae enter je xor in push lret add add add add cmp inc in (bad) xchg out jmp ljmp sahf lods aas xchg ret mov push (bad) jmp lea mov (bad) mov movsl mov and mull rorl icebp mov dec jno into movsb rcrb push sbb lock cli mov daa jne adc push push jge push shrl jecxz,pn sarb out pushf ja push xor mov hlt in lea dec ljmp cmp hlt adc sub clc add add add insb das jae sbb xchg cli leave rcrl xor cld and loope sbb push mov sbb and rcll mov dec push xchg sub fmul hlt lods lahf lds jbe stos fldlg2 cs push test (bad) sub push dec mov mov stos pop (bad) movsl aaa repnz test jns mov inc stos bound dec jg adc movsb ret imul fildl push or cmp lds xchg dec fs add add add add leave leave fimull hlt xlat jnp aas lds stos insb in pop pop xchg lds (bad) adc andl sub sarl push add scas out push jbe or pop pop cmp jbe jmp std insl pop cld xor lock jmp push or xchg sub or inc mov ss push mov inc nop jecxz fiaddl pop xchg inc xchg cli pop push in pusha pop icebp mov int3 adc mov pop pop push fiadd add add add add lock xchg pop aad mov sbb int jbe je das jge js shlb cs dec test push ja lahf push adc pusha les xchg mov adc addb dec pop mov fwait fwait movsl xor add ror popa push push (bad) les mov pop or pusha jl push es xor repnz push xchg mov iret push stos daa (bad) jno push xor insl and fs xchg jb and or mov pusha add aam push cmp cmp pop cld mov cmpsl roll fmul je and cmp std dec dec jnp jp les cmp dec stos stos mov ret sbb cli xlat mov rcrl push mov cmp push pusha in repz (bad) or (bad) push out jns ja mov test push inc push and pop push aad fwait xchg sbb in icebp jp les popf mov clc notl push pop enter add add add add fiaddl gs nop push aam iret push pop cmp fcoms cmp fcompl fldcw shrb xor inc jmp (bad) divl mov pop add negl jae std xor hlt jno dec xor fdivrl insb int3 push cmp in jne je mov nop les sub in iret cmp test jae mov mov jl fidivl loopne mov enter sbb call nop lods stc jmp mov add add add add adc ror push push xor fs dec (bad) aam mov insb pop fidivrl aad mov pop dec sub fldlg2 sbb push mov mov sub nop je imulb jo stos daa jne lahf jecxz add mov fwait sub adc and jno testl in scas push jns dec pop pop pop inc lcall cwtl push push adc pop push out or cltd adc int test rorl add add add cmp mov sbb ret jo shrb je mov push lahf sub rolb add je loope fsubrl mov mov cmp jge and jbe daa cwtl inc inc push xchg add xchg cmp inc aam jne mov cltd sti jge mov mov pop test adc cld (bad) fdivrl out loopne stos mov in popf pop adc mov pop ret out gs push out xchg xor cmpsb mov add add add push in xchg jne jb aam dec sub mov mov insb sbb je xchg push inc pop or mov cmp inc mov (bad) pop sub sahf push sbb lods stos xchg mov jg dec lcall push add ret xor test loopne or data16 mov jae in cmc (bad) call mov insb adc and outsl addl jmp push mull pushf aaa repz adc sbb add add add mov mov or cltd fsubrp das jae stc lods insb cmp mov ss push repz in jne and xor out inc mov add add fisubrl lods push mov into out xchg jge test cmp jne scas (bad) or out loop mov pop xchg repz pop test das jne push sub in fldcw xor fdivs enter xchg inc mov pop sbb inc sahf and loop test daa iret mov push add add add add xchg cmpb jo mov and xchg (bad) jb push mov jp lcall adc xchg xchg incb sbb pop scas loop add stos sub imul jle out sub xchg pop in jg (bad) jg ss in dec fbstp mov jge cmp jmp push pop popa and cmpsl pop movsl out popf mov pusha mov (bad) movsb inc inc ja in pop insb adc mov pushf or cmp add add mov mov cmp fidivrl arpl loope fnstsw repnz inc jge divl iret fisttpll push ss mov jecxz mov jmp xor test ror jb (bad) cld repz and and mov div sub jmp cmp inc ret (bad) lods rclb cmpl cwtl test or rorb and (bad) mov or repz and les xchg insb sahf shlb add add outsb cmp (bad) imul jp std popf jae (bad) add cmp xor pop imul jmp das and fildll mov icebp mov rorl mov jns sub pop sub stos push push (bad) xor out (bad) sti push pop xchg push sti loope xor bound mov popa xor dec das xchg iret cld enter sbb rorb or (bad) sub mov mov lret add add add cmp xchg enter pop and xchg mov pop ret std sbb int3 loopne test repz ret call cld cmc mov xchg cmp cmp or aaa cmp movsl pushf rcrb sub add lds loopne in jnp lret (bad) adc lret cmp rorl sbb rorl inc fstpl adc mov js stos lret inc add imul add cmpsb xchg or jbe sbb adcb rorl and or xchg or sbb dec scas lcall popa icebp dec fldenv (bad) mov sub mov mov jge lret (bad) mov and int xchg lret add and dec sub mov fistpll sbb xchg push xchg lds cmp xchg adc stos loopne mov push mov xor and jo js aam inc test mov movsl jp (bad) xor into out dec test sahf mov add add dec jp shlb jo fdiv jp testb (bad) mov test push ret lds enter rol and into dec sub mov adc out pop insl or mov adc cld pusha loopne call in sbb mov cmp mov mov jmp xor inc xor int lcall and inc mov sub and mov das add add add dec or mov push mov or push scas inc mov lds dec bound sbb mov push push cmp sub es xchg rclb lret (bad) xor sub out add es add (bad) lods aad mov sbb imull arpl sbb jecxz fcomip fcmovne fs cmp ljmp dec shl push push in and inc mov in push add add add add or paddd std int sub stos and sti int3 fwait inc sub pushf (bad) cmp pop fwait jo and aam xor jge and cmp push sub (bad) in imul xorb insl sub inc ljmp add insb lahf rolb pop xchg and mov push and cltd out and sbb shll cs mov popw mov aam outsl cli cmp call ss test add add jo sub rcrb inc cmp mov (bad) xchg fsubrl or push sbb (bad) (bad) jmp icebp jnp sbbb and pop xchg rep xchg fdivrs pushf or lahf mov push popf mov sbbl das mov mov icebp aad cmp xchg jmp enter inc pushf cmp loop rorl sbb xor out fcoms cmp out addr16 jg test push or add out pop cmp add add add in or mov stc jno (bad) fcoml push mov insl push sbb add push add out dec shlb imul mov or pusha stos xor int movsb imul mov es pop xchg add add cmp cmp sarb stos sub ljmp stc push xchg leave mov call push mov int3 fstpl test aas mov adc mov mov add add add dec scas jo dec mov xchg mulb push rorl mov jp dec rcrb xor sub pop add mov xor and stos jnp xchg mov pop mov xor iret add pop pop enter xchg jg (bad) jp and cmp adc sub mov cmc cltd aad mov popa dec stc cmpsl std xchg add add jae popa pop aam test int3 cwtl cmc call cld cs mov cmp add jle jl ds pop and mov data16 pop inc push xchg es das or mov fistpl xorb repnz (bad) dec arpl xor xor mov in sarb lret lock shrl sahf cmp (bad) mov icebp lds inc mov jnp adc in jo mov fst inc inc or or mov xor rorl (bad) pop dec lea add add add test cwtl xchg xchg pop pop jge lods ja add iret ret jle sub adc mov inc ljmp iret lret loopne sbb push mov cmpsl cmc nop sub inc shlb jecxz pop cmp repnz jns outsl xchg adc movsl addr16 push or rcrb jnp mov xchg call xchg adc dec fcomps aas mov xchg pop mov int jl push add add add dec scas inc sbb xor jmp jns imul loope arpl and cmpsb es pop sbb dec (bad) sti sbb xchg sahf xchg and mov sub sub lea fidivr mov sti imul testb or bound mov xchg insb repz push sbb (bad) sub pushf rcl pop iret mov hlt jecxz dec into dec int3 addr16 xchg insl out in inc xchg push addb adc jno shrb (bad) in lret mov dec inc dec repnz insl mov jg nop into cmpsb (bad) jecxz and adc movsb sub xchg fwait push arpl outsb ficom ret inc call mov xchg les fcoms pop fmuls add rorl es pop js int3 scas popf adc mov sbb imul imul or or and add add add add or dec add pushf mov cs stos add push inc push pextrw mov sbb fdivrl mov aad f2xm1 mov dec gs push sub or mov mov stc push cld cld in and inc pop lds stos loopne mov mov movsb dec push dec mov xor inc cmpsb sbb rcrb and frstor ds xor (bad) cmp (bad) sub outsl dec mov inc pop push pop scas mov lds mov popa sbb add add add das inc sahf (bad) xchg mov (bad) push pop xor mov jbe outsb lods scas repnz (bad) addr16 (bad) dec clc dec jl add cmp adc aad pop sbb shrd test aam addr16 js sbb mov sub dec sub fwait jecxz cli xchg iret jmp (bad) cli push (bad) mulb xchg test push rcll xchg pop push popf das mov cmp cmp loopne sahf sub cs cmpsl popf xlat dec jmp cmp pop mov mov (bad) std sub rorl and push sarl add daa jns ret movsb es push scas je dec xlat add enter fstp imul into fstl sahf rol mov imul sub xor jg repz insl insb rolb mov lcall jmp jno xchg inc out jmp sbb push mov sldt add add add fisttpl cwtl mov fbld xchg data16 leave sub jo add cwtl add stos sti cli pop sbb push pop movsl test (bad) stos es lods or mov neg fstpt int3 out adc gs adc pop dec ficomp push out or in nop xor push and call xchg imul aad lock lock sub mov dec xorl fnstsw xor xchg (bad) out lods inc jecxz cmp add add mov test pop sbb mov push jnp or movsl or pop repz inc pop jbe arpl xor lock mov xchg and aas orl jae push fstpl addr16 in or aad mov (bad) add shrb cmpsb or fs enter arpl inc push mov xor pop call pop xchg xchg imul xchg sbb outsb cmp fisubl xor cmp repnz fs xor sub add add add add (bad) inc es xchg adc (bad) loope pop mov sbb dec xchg xchg stos push dec mulb push (bad) popf xchg sub dec aas dec xchg jne call jl ss stos mov push sar inc (bad) rcr punpckhwd dec cmp or xor jp sbb cmpsb orl ror adc fiadd jmp outsb out dec push out adc test imul rcrl (bad) aas ljmp add add add add push push popl stos pop adc jg sub inc popf lahf and mov lahf dec sub inc iret mov std cmpsl imul in (bad) lock cli push xor call cs sbb cmp mov jnp pop les cmp xlat push xchg and cmp outsl ret aam and or int3 jnp dec cmpsl fsubr pop outsb jno addr16 pushf push bound xlat mov fadds int3 push cmp xorl add jle add add add movsl loope,pn test cmp mov cmp jns test int3 test push ficom bound dec pop lcall xor push (bad) lret enter lock cmp enter xlat fsubrs int push stos lds sbb cmp mov in jnp outsb jmp addr16 inc dec adc pusha push dec fcoml cmp push pop repnz divb mov loopne loopne (bad) mov pushf add add add add jge lret mov sub add push inc mov jb test sbb iret pop ret or addr16 (bad) (bad) js lahf sahf inc dec lcall out lret jg ds cwtl shll dec popa es inc jnp imul mov push inc or jbe sub nop fucom jnp enter xor pop xor xor ret mov dec rcl lods or add push or les or cmpsb bound add add add std mov rcll sti xchg adcb rcll loope imull sub cmp pop mov in ret adc cld ret sub loopne mov adc adc bound iret jge stos movsb mov cmp nop cmc int3 ret push push fdivrl sub cmp pop sbb adc or leave sub dec pushf and sbb ss mov iret lret jne sahf mov out insb addl fcmovnu push and sbb mov jno rolb push rorb inc popa mov jge adc mov push pop inc cmpsb outsl xor add pop lcall inc xor out and push add (bad) xchg xlat and xchg mov (bad) jle add movb icebp addl movsl cs cmpsl cmpsl adc xchg xchg (bad) sbb add dec mov push scas cmp gs mov mov sub sub add add add cmp fwait call add xchg add lret dec dec lret mov insb sub mov dec xor test push dec jecxz fidivl mov xchg fwait mov push push pop (bad) sbb out bound ret gs stc jae jp outsl sbb sub rcrb inc push dec pop inc nop xor je mov inc xchg mov cmp mov stos sti jle (bad) pop repz mov push sub mov add add fsts fistpll adc addr16 jne sub push mov or outsb jge sbb pop mov ljmp cmp or sub scas fbstp mov jmp mov and jge mov scas insl add repz xlat mov mov push inc stc sub push add cmp es fnstenv xor mov and and mov aaa fnstcw xor push add add add (bad) cmpsl jno gs dec mov into orb aam xchg inc (bad) push aam push mov sub inc xchg icebp sbb pop orb roll mov sub push push mov push jl sub mov js movsl scas sbb dec (bad) jo jp hlt mov sub fstpt shlb jp cmp imulb mov hlt and sbb sbb inc mov (bad) (bad) (bad) mov js jae pop cmp sbb movsl add add add add fsubl jno cli (bad) cli add incb (bad) xor or (bad) jg mov sbb loop outsl xchg jge and xor inc inc lods ja jle sbb cmp and imul pusha stc xor lcall mov cmpsb push add adc ret loop xor cmp mov daa std adc stos jl int3 xchg mov pop mov dec test les add add add rcrl xchg adc shl mov xchg pop setno movsl jae arpl mov ret in popa xchg or movsb ds loop pusha jne test popa cmpsl mov fistl and out xchg jbe cmpsb cbtw js ret movsb lret outsl adc push adc nop mov (bad) xor cmpsl jbe mov shrb add mov lods mov call fs div mov (bad) dec jp subl sbb daa add add add add je adc ljmp cs divb xchg insl jecxz (bad) sub xchg lods cld rcr lret hlt dec popa lock cmpsb jnp pop inc aaa push out mov xor lcall loope jge sub or sbb xor sub inc inc mov cmpsl int mov test add inc lods sbbl outsb loopne fsubl mov or int3 push mov pusha (bad) sub mov jb lock add add jno cmc cld clc jg inc cmp inc xor test mov aad repz nop sahf loopne sbb imull movsb scas sahf jecxz (bad) fadds push out pop xor push hlt mov ja inc insl js pop lret add mov cmp mov push cmp inc and mov mov pop stos and dec movsl inc or dec xchg (bad) and xor push dec pop sbb dec dec stos les and xor add add add and xchg fisttpll and test jns xchg lea inc inc cld mov xchg add lock push sbb popa sub sahf sbb inc incb dec mov mov lods push bound adc add cmp sbb lock sbb pushf pop adc or cmp leave sbb cld in mov mov ljmp loope xchg into out (bad) pushf add xchg xor adc sbb sbb or test insb jmp ja xor mov fnsave and lds and cwtl sbb divb fadds es (bad) into mov stc push testb lahf jmp gs daa outsl cmp int fimul test or fimul and xor sbb mov jne ficompl jns cli outsl add or add add add pop xchg sub add mov lret fisubr adc mov aam mov add stos push or dec cmp call xchg push das xor xchg xchg jl scas nop (bad) adc mov pop cmpsb cs test sbb aaa nop sbb cmp mov in testl jmp andl andb cmpsl repnz (bad) jns fadd xchg mov pop pop or movsb cmp sti subl add add add fsub es xchg (bad) popf dec insb ret je mov (bad) sbb or jmp inc in cld fsts dec cli loopne dec ret movsl adc imul stc movb jb dec (bad) jnp cmp jo dec dec mov fildl mov hlt mov out aam imul int3 lods sub scas cli gs or scas (bad) sti sbb jp lret lock sub inc sahf out fisttp add add lret inc xchg lods add ret andl and inc int3 xchg jb insl mov and mulb xor sub xor rclb add ljmp movsl jns mov mov stc aam cltd js loopne inc and push pop jp fnstsw ret outsl insb mov dec inc sbb cwtl add mov inc std mov int jns inc insl dec lahf or (bad) out ficom push inc aas add push jmp xchg or lret incb add add add add fidivl in int3 sbb sbb push sti xor jge cmp cmp movsb sub fwait adc lahf sub sarl push and xchg dec out lahf push (bad) jl add pop push test ja dec and inc je lods dec xchg xor pop fsubl rclb or (bad) xchg sar repnz nop jmp gs and xchg pop or inc lods in xchg sub sub stos pop daa xor hlt cmp (bad) add push lods cmpsb mov push dec push sub inc jl jae jnp (bad) mov mov xchg frstor int3 aad adc inc jb mov test push decb mov lods dec fcomps push pop out test dec add push (bad) push pop cmp inc stc and sarl es rol xchg lahf cmpsl test repz jle aam subb cmpsl mov push sbb push ljmp add sarb and add add add insb cmp jmp adc xchg and or jns decl fsubrp mov cwtl std mov dec pop imul cmp xchg sub mov sbb lds movsb call inc pop add in lcall popf fs inc cwtl mov fild push das push inc xor scas cmp sbb xchg leave inc lock int insl ss leave lods mov xor in ficom pop pop push pop or inc lret (bad) les stos cmp pop jg sub xor int movsl (bad) mov and popa out mov das int3 inc fmul cwtl in (bad) (bad) iret rcrb jns rcr or imul aad stos (bad) lods mov and lahf sahf iret cmp cmpl jp cmp ja fwait push pop cmp lahf push out rclb shlb cmpsl gs push add mov jecxz add sbb sahf sub mov add add add out xchg mov mov dec cltd addl jbe (bad) insl xchg testb lods mov scas les and push inc loope cmp mov repz mov scas sub xor mov scas jb pop movsb pop and jl mov out test jl inc insb ror int3 in (bad) mov push iret imul mov ljmp nop rol add in xchg in mov add add pusha lret and mov fisubrl mov movsl jl dec xchg inc jne inc mov in mov sbb rolb push pop mov add (bad) fld test mov adc mov fcomps aad sahf pop mov sbb dec jl imul jb (bad) pop bound shlb js xchg int pop mov (bad) mov pop lcall push push sbb dec push stos adc add add add cli mov mov pop insb ret xor int3 jbe and (bad) adc fdivs sub cmp xchg jo,pt in fs call clc pop rorb orl mov xchg xchg jge cmp das xor pop xchg mov lcall std adc xorl iret xchg xor or xor inc pop jnp push ficoml push data16 es inc cltd inc jae xchg gs in movsl jae mov add add add pop roll sbb push (bad) sbb in dec in dec into loope sahf adc or jns inc pushf cmc test cmp mov pop jp imul (bad) xor mov lret in int mov rcrl stos mov add jo add clc and lock xchg in fildll flds sub aas or xor mov scas pop out xor aad and sub xchg fiadd add add add add neg lret jmp xchg push insb and loope push bound rorb (bad) cwtl pop push aas les or push into loope sbb adc jbe addl adc push add movb negl add inc jg push pop in negb or pusha jp aad test push lahf and mov lahf xchg enter xchg push cmpsb bound dec call inc xor das dec cltd in shrl jp or cmpsl add inc cld push insl sbb add lret sub ds roll xor sub test iret scas jmp mov sbb (bad) inc fcoms mov mov mov sbb jg repnz pushf mov push push push rcrb mov adc mov pop xchg scas mov mov ret and mov cmp js add xchg xchg sub sub (bad) call add add outsl xchg cmc dec mov das add and mov pusha or push fiaddl push mov mov xor ljmp mov sub and xor sbb push ljmp sub shll cltd incl clc or push test xor leave fldt sbb scas ljmp adc xchg insb insb xchg xchg shll ja movl inc dec fs call movsl popa inc (bad) imul ja fist fldl jno cmp mov aas lcall inc cs cmp sub push dec push repz jle stos (bad) repz mov inc mov cmp mov sub pop dec xor inc mov repnz or mov pusha cmp pop sub (bad) and aad pop xlat add icebp jnp sahf jmp adcb pop inc xchg dec bnd add add add add pop mov sti push cmp pop mov jo fidivl fisubl adc push xchg mov mov xchg ficompl lcall mov lret xchg ud1 lods lea mov in adc ficom in inc bound jne and orb inc fdivrl dec mov push sbb (bad) pop fdivs ffreep push jg jecxz iret add dec stos mov test jae addr16 add add add call xchg (bad) lock lds mov out jne sbb pop test xlat xchg adc into pop push jbe pop adc pop add fsts xor insb inc ficoml (bad) xor push pop outsl or pusha lea loope pop jmp shll nop pop in (bad) xor jbe ja push add jbe jns cmp add gs mov cmpsl mov sbb sub sub in pop out and clc stos inc shrl add sti and cmp push push dec push push ja or shrl gs pushf or (bad) rolb ret sub mov pushf xchg mov or mov ds jae sub ror (bad) pop lea pop pushf push dec mov notb bound pop push add mov pop into scas popa sbb cmp and xor sub dec push gs clc jmp add add add pop mov lahf imul mov mov test add sahf stc mov mov (bad) icebp stc test push mov fcoml add loop (bad) adc pushf (bad) hlt sub jecxz test or mov cmc sbb mov mov jmp clc mov and ds inc pop xor mov jb pop cltd into mov pop movsl out ljmp adc mov add add add add mov int3 in xchg out sub mov cmpsb sub popa adc sahf dec ljmp push hlt popl fisttpll inc jne movl pusha ljmp xor ss es int and inc sbb cmp ret pop out aad cmovg mov nop jl xchg pop mov lahf inc dec dec fisubl (bad) sub aaa sar insb lcall fisttp xor push call add mov les in and xor mov shrb mov dec loop mov fmuls mov popa lock outsl jl imull pop jle fcomps iret sti xchg cltd push sub hlt lret pop fldt xor into pop je outsb or sub cmp jecxz xchg sbb fiaddl iret lds and orl test loopne jmp into xchg mov push xchg add add add test fildll arpl testl les xchg hlt int3 (bad) out scas jo pusha les dec icebp out mov inc mov inc mov cmp cmpsb (bad) lret push push add xor sub push and inc mov xchg js faddl or push mov in pop and pop ja inc lret (bad) lock dec leave push inc xchg and xor int or repz fsubrs clc mov ss xchg jnp loop jns cmp scas jl add imul xchg pop rcll pop xchg jl push testb push push inc es mov adc or xchg in inc icebp std xor insb add add cmpb add sub clc or fs push cwtl movsb test fwait test jg xor lds sub adc icebp (bad) repz cmp pop (bad) adc inc andl add sub aaa push pop dec mov (bad) mov test mov fisubr pusha add inc arpl out jnp test mov push jnp cmpsb xorb inc sub inc icebp push lret stc pusha test adc mov inc jbe xor shll fsub fwait push adc jg outsb sbb pop bnd call addr16 cmpsl xor shrl add mov jge and fsubrl inc js scas lret pop push into ljmp add std cltd pop inc mov xor frstpm(287 sbb or hlt lret pushf xchg rclb enter sbb sub jns adc inc pop pop int3 fild insb inc (bad) nop jp pop test and pushf mov lret inc and jns cli mov and movsb push mov and xchg test pushf pop stos mov fdivrs mov xchg (bad) scas jno popa cld lret add call and icebp add fnsave xchg imul xchg scas popf add add and xor sti js stc lods fs sti pusha xor fisub jne insb mov cs cs popf jge out nop mov pop mov fdivrs daa mov and and stos lds dec loopne pop pushf popf inc popa jp xchg xchg lea sbb and leave and cmp and iret sub cmp fistp lret inc xchg (bad) into mov not mov fisttp mov lahf jo scas (bad) push inc add add add xchg test loope les xchg mul sbb daa cs scas jp sbb ds adc push xchg adc jp (bad) call mov pushf test mov lods mov fldenv push cmp imul iret mov dec (bad) push outsl jne,pn mov cmpsb add inc pop and push sub out insl mov lods sbb and (bad) (bad) push loop rcll mov sbb add add add es stos out pusha or out dec mul bound cltd paddw pushf mov xor (bad) das cmc mov std sbb popl jge repnz add jmp aad push adc mov adc ja cmpsl call push lret popf cmc sub xchg xchg pop test pusha or push sarb bound imul sbb push lret pop cmp sbb call lds sbb mov add add add adc insb aaa xor out stos fisubr ret seto imul sub ss fsts push jbe cwtl lods dec (bad) scas loope adcb mov gs and xchg loopne jae lea (bad) jg inc fnstcw std fidivrl adc pop punpckhdq ret jae lods sahf adc lods push loope mov stos test cli cld (bad) call xchg ror mov aas iret loope or sbb ficom mov pop push inc adc add add les fcoms pop fwait cltd dec ret adc ficompl jp jmp inc mov stos ja fisubl jae pop mov popa js sbb or mov and xchg sbb cs popf nop pop pusha test push popf lret dec loopne rclb int sub xchg addr16 gs xor sbb mov mov out push sub push aas adc push fmull mov (bad) mov push insl mov fnstcw add add add add xor ds nop fs add cmp inc (bad) mov cmpsb test add lods aad sub push ds dec pop mov outsb test addr16 outsl std mov roll js dec jne stos mov imul lahf pop clc lods nop call and or xor into or mov jae and jae lret fs jne jae jnp mov pop and xchg xchg jge dec inc jnp aam or adc mov test cli dec adc pop add loope out push loope gs (bad) jnp push xor jg jbe das (bad) gs gs aaa lret inc in in arpl dec outsb xchg xchg ljmp pop ja insb aam cmp mov in jl lret xor rclb jo xor push movsl je pop push mov fwait cli ljmp adc push std rorl lods scas pop aas cmpsb icebp stos jnp stc lea scas jnp add add pushf sbb xor jg shr fistl stos xchg push mov es cld mov mov add stos cmp and rolb push test in mov sbb jbe adc pop pop cmp xchg pusha adc push add mov or and in inc bound inc ds push mov add dec mov push call cli ret xchg mov jne sub and inc add add add add mov cmpsl pop out addr16 mov jne inc sbb xchg mov or pop mov mov dec bound iret push insl add fdivs jg sbb lock loopne popf aam test jle sub pusha jge pusha pop leave test js and ficom addr16 cmpsl pusha dec stos lret sarl fnstenv sub pop daa dec movsl inc push push iret idiv jne fwait or roll add jecxz loope or add add add add mov insl inc addl mov lock xchg div repnz sub mov outsb xchg out lcall inc jg scas sbbl (bad) and roll ret (bad) repnz add xor jmp outsb int push adc or (bad) and movsl int inc mov mov lret or test sub popf orl jno dec mov test pop jae in mov dec out mov stos mov ds pop add ss add add add add jle sub xchg lods lock adc leave mov call int3 fisttpll bnd adc pop cld mov call mov or rclb cmp aad xor aad div cmp jg dec daa cmp jg push sub sti ficom mov cli cmpl std addb and aad mul or xchg xor fsts cmpsl fs dec ljmp add add add or inc (bad) xor jge mov repz jg jae dec (bad) imul dec fisttp push idivb mov adc testb cmp movsb daa div subl adc fs in lcall nop sarl mov mov (bad) mov fs insl ljmp and sub push out jbe (bad) test (bad) fldcw mov pop xor add add add mov lahf int mov push mov mov mov inc dec push ljmp lret or out mov inc (bad) inc addr16 jle in rcll rcrl mov leave xor std repz (bad) nop test cmp jg cli into mov pop pop (bad) dec lods scas adc cmp cmp scas pop in sub or clc mov iret mov lods xor inc or cmpsb aad jp inc xchg jno hlt add add add push xor repnz arpl cmp cmp adc sub sub imul les dec mov mov jns pop push lahf lret out movsl xchg push jmp adc cltd rcrl jnp mov xchg sub jae stc pop pop dec out dec push ret insl arpl in cmp hlt int3 add mov or and cltd lods leave mov mov push data16 cmp add cmp add add add or je adc push mov (bad) fiaddl jne (bad) xchg cmpsl jo in jmp imul les pop xchg inc jle popf add inc or cmp add dec ret mov push push or lahf jmp or xorb pop ret add lds aas mov aas (bad) addr16 adc mov sbb iret das xlat aam popa xchg jmp pop movb shlb out pop aad add add add data16 (bad) xor js les cmp inc add out push ret subb pop mov sub cmc and lock jl sbb outsl add pop int dec outsb mov leave mov sahf cmp xor in adc sahf outsb mov sub dec popf (bad) sbb push or inc jmp jecxz adc les inc sbb inc cwtl jo inc mov jno pusha mov sbb pop mov sldt add add add sub lods pop cmp popa out and xchg inc or movsl mov leave mov ds xchg mov test or xchg test cmpsl mov mov and adc ja flds shrb (bad) mov add (bad) cmp mov jae mov or push fucomp mov leave add push imull dec pop daa inc and hlt jb fwait mov xor sbbl adc xchg xchg outsb xchg ljmp fiaddl flds cwtl add add add add sbb pop cmp xor data16 sti mov mov add ss add das imul pop imul sub push inc cmp jl fnsave popf jo xchg jns popa ret das ljmp jl inc and and xchg inc testb fwait andl sbb addr16 or popf inc sub sti test and mov push (bad) sbb shlb pusha dec push aaa and pop adc add add add xor cmp adc fadds lret xlat scas push (bad) fildl (bad) in dec add outsb hlt mov scas pushf mov out xchg push sub outsb (bad) loopne cmp shll repz (bad) insl push xchg jnp cwtl xor mov fs sub repnz int pop dec add lds mov cwtl ds sub mov bound fsubrs mov jno pop imul and gs xchg mov and in mov adc jecxz (bad) mov sub cld add push push test jle xor in std inc leave xchg invd pusha xchg jb ret sub mov repz sahf mov mov jae popf outsl in cmp sub xlat pushf and mov aaa cld pop pop aaa int3 jne int inc cld (bad) sarl pop lock or clc or adc jp pushf je push fst les adc int3 sbb xchg mov (bad) cltd cmp repnz adc sub adc pushf mov enter xchg cmp sub sbb sub fldenv or xchg inc arpl xorl xchg xchg into mov fstps adc test mov pop out lds popa inc mov cmp ret cmpsb and push mov cmp rcrl (bad) addr16 or mov (bad) mov dec pop dec (bad) std lock pop push (bad) stc mov fneni(8087 inc mov jecxz lret add add add fdivr (bad) test sti pushf push sub (bad) or jecxz xor xor cwtl lret dec dec xchg outsl cmp or xor jb imul sbb insl test fwait push mov lcall pop int loop sbb mov dec or xchg fimul inc add or jae add or clc movsb inc jne adc cmp pop (bad) sbb jb in xchg loop push adc mov push xchg mov sub sahf mov add pop cmp jne jmp mov or push add xor (bad) movsl enter xchg mov imul inc ffree jnp mov xchg jnp push aas aaa fcmovnu or ret ja out mov repz ss nop repz push inc or sub hlt xlat (bad) imul pop adc lods enter fucomp (bad) fdivrl add jg pusha push dec jg or bound pop fs call jl xchg fimul mov push jle add add add roll gs insb xor xchg popl cmp out dec leave sub inc sbb ret fs out mov mov int3 mov aas adc mov outsb dec idivl mov push popf xchg cmp aad push dec lods sub (bad) sbb adc (bad) jno inc pop jp mov les mov in dec push xor push inc mov sbb lock loope inc ret das imul or js add add add cltd jno pop cmp add sub xor xchg sar mov int3 lret mov jbe push inc leave push jecxz inc (bad) iret add ljmp mov addb adc sbb imul sahf fwait adc xchg enter in mov and cmc jg cli test (bad) push jne adc cld sbb fisubr add stos lret std sub cmp mov add add add cltd mov cld push loop push lcall dec (bad) pop fnstenv inc push lcall cmp mov add cmp xor dec fwait outsl mov mov pop lods ret int3 adc add fstps mov out das inc sub test push add pushf out cmp pop in pop adc (bad) cmp pop mov and add mov push sbbb pop and lds out xlat pop in adc in sti mov stos cmp push popf mov mov in xchg cmp dec in in outsl sti push test pop add cld xchg mov imul dec aad in test (bad) sbb cli mov mov xchg adc cmp repnz cmpsb xor xchg daa jns fs sti call pop into mov arpl pop daa imul add cli lods cli fiadd add add scas movsb lods movsb pop adc popf shrb arpl push ret roll sbb mov cltd stos orl mov sbb (bad) mov mov in mov sahf repz js movsb icebp mov mov dec roll push dec push xchg leave sub mov es pop jg mov bnd test mov inc imul pop mov rclb adc add add add push insl gs out add fnop insl cmpsb arpl adc push cmp inc pop sbb jp fyl2xp1 add mov pop cmpsl repnz fistp outsb inc int cs rorl inc xor dec sub fisubr int3 adc fsubrs adc bound xchg and xchg std and (bad) imul cltd hlt pop mov xchg mov rcll jns dec mov add push push jnp hlt ret fbstp and add add add add in lock cs mov jbe mov (bad) (bad) shlb fildl das sub sar addr16 and leave bound jns dec daa or jno xor xchg jle cmp outsl jmp gs mov test adc xchg sti clc cli inc add inc lret popf pop les (bad) jmp lahf shrb (bad) dec adc lock in jnp add ja or jnp adc shrb add imul loop sub movsl jge add add andb or adc add and adc mov jae or outsb sarb push imul cli test dec cmpsb jg adc jg dec push ljmp mov adc ficom subl mov std out aad inc mov mov push out rcr xchg cmp lret sbb pop push fmul fisttpl sub jmp dec xchg lods (bad) iret (bad) xor pop xlat mov pusha pop insb push add add add add push and dec cld and push fs mov dec sbb mov enter or xlat mov fistpll mov inc lea sbb leave imul pop xor add (bad) sar fistpl push push mov add std icebp repnz xor loope sbb cwtl pop hlt ljmp cltd and stc jno jne aad in std pop fnop jnp xchg or jb xchg enter cwtl dec pop adcl add add add pop aas push mov push mov test fistpl fsub and push mov sti mov out std xchg jge mov fwait cwtl (bad) cmpsl stc sub cltd in sbb in pushf out dec fs xor mov pop mov sbb jnp add lods sub cmpsb mov adc inc nop out add ljmp mov loop outsb (bad) xor leave add sbb jle lcall sub push mov popf xor xchg jb xchg cmpsb int3 aaa loop push out xchg add daa movsl mov outsb push negb dec xor mov int fidivl dec cmp mov lods push cli aaa cmp (bad) mov inc xchg lcall xor std xchg sbb (bad) pop xor clc mov push pop (bad) aaa lret mov jb xor (bad) inc mov (bad) and adc in cltd arpl mov clc (bad) fiadd add add add add xor push lock mov pop inc sbb insl pop sarb cmc and je aaa xchg mov lret leave icebp add in rcll cmp inc jecxz dec sub scas cwtl ja imul bound in and sbb mov pop hlt sbb mov xchg dec test lea pop cwtl cwtl add popa sbb inc sbb sub add mov mov xor push sti push pop xor push mov or push push add add add and out lcall cmpsb xorb xchg xchg rorl cmc dec xor xchg daa test add pop std or cwtl or insb notl (bad) in not ja xchg mov int3 (bad) out inc dec dec stos push (bad) sub pop mov push fild sub mov leave push mov cmp test or fldcw scas cmp sbb ss mov test jo out out add add negb push dec (bad) jb out sarl sub fwait int3 sbb gs loopew cmp (bad) cmc sub clc ficoml push cmpsl mov xchg inc shl add push ret mov (bad) aas and xorl push fimul push enter pushf imul jge or push lea sbb in mov xor sub insb popa dec cmp mov adc add add add sahf (bad) pop aam pop cwtl adc dec out adc cmpb in jl sbb fstl out ds std or out insl add (bad) aaa lods jnp decb lods out (bad) pop repnz clc ficom sub fwait and gs sti aam jge push push sbb (bad) sbb repz ja int3 cmpsl and insl jp aam mull xor or sub rorb cmpsb xchg loopne add add add add pusha inc out movsb jns mov mov std icebp rolb outsb repnz in xor imul jb cld incb mov int xor push xor inc sahf pusha cli fist push push add jb push out dec cmp scas fwait aam inc cltd mov aaa stos mov dec dec push pop cmp pop mov xchg mov iret jle push repz push in xchg xchg jnp push sbb inc lock jnp mov xor push add add add in or icebp sarl xchg sub in and jle clc or loop pop cmp out ss jne pop mov fisttp insl roll les out out testb jmp in arpl dec cmp rclb mov stos mov add dec inc not into rclb sbb push cli adc jb jecxz lods mov sub pop pop and repnz push sbb add add add ret subl adc lcall pop hlt mov inc pop jo push add add cmpsb pop lods pop or and dec mov pusha jecxz sub fcmovbe jns adc mov stos xlat es push adc mov and fnstenv xchg loop mov or adc daa icebp loop and clc lcall repnz push nop adc pop inc pop aaa xor xchg sti jge push movsb or push mov movsb add add add push ljmp and sbb rcrl xor mov push outsb scas lods add (bad) pop adc mov push cmp adc mov adc and pop push dec insb push adc loope cmc repnz insb imulb jecxz (bad) xor mov sti lock addb jmp jnp dec xorl imul fnstenv xchg je (bad) mov ficoml sti mov nop bound test int out in mov pop clc xor flds cs pop loopne add add add add sbb test lret pop add lret push pop scas das mov pop movsl outsl jmp pop cmp xor ss (bad) int3 mov in call dec and mov or mov push clc arpl loop lods pusha add push xorl push pop adcb lret xor test add sub out cs dec adc ss lret mov pusha or shrb lret stos movsb out adc mov repz push imul sub lods jno push pop mov jo pop pushf mov dec ret adc dec mov shll sub std jne mov ror test xchg push sub mov mov xor inc test jecxz push and inc mov push imul dec mov add pop jp addb inc cld sub jecxz std mov mov dec mov insb jmp mov in rclb popa push int add add add roll sbb loope pop fdivr gs imul shl movsl aad lods jmp or jge cmp fstpl pop div jb (bad) fimull mov roll lcall push aaa cmp cmpsb dec jle jb call (bad) or push pop pop dec pop dec ljmp nop jae jne,pt ret pop roll divl (bad) into (bad) lock rclb into xchg or addb add add add sub pop xchg jg scas cmp mov addr16 cmp jb add xor test mov pop inc sub subl in into add push lcall insl call adc cmpsb fisubl sub test and mov cmc imul mov (bad) (bad) loop add mov cld pop sub xchg or and and test jmp jp bound add push ret pop mov aaa sub push imul cmp adc add leave fcoms dec cmp jl mov (bad) ss sbb jmp jo outsb sub fsts xchg inc fcmovnb sbb int3 adc scas jnp (bad) (bad) xchg jg add dec pop pushf push shl pop xchg sbb repz cmpsl sar leave jbe xchg adc bound arpl and ret pop leave mov inc das das shl pop ret push dec int das cmpsl aad add add add add add out int sub push nop hlt push mov bound in xchg fnop jb pop inc insw cmp ja sub jo cltd das arpl cmp (bad) adc push dec sti es jge sti faddl aaa mov cmp scas pop mov fistpll stos sub or cmp lock mov movsl pusha (bad) ffree inc xorl cli out and popa jne mov sahf jns pushf xor ljmp add add xchg sbb push dec push cmp inc sub jno xchg pop dec mov cmp lock cld int3 movsl jle stos pop jmp pop push insl jg lea inc repz jmp lods or push jp sub cli sbb push test sbb push dec fstpl es xor cs sarb inc lret ss sbbb push std daa lcall xor sbb pop cmp mov add add add cmp jbe pop fs aaa xchg inc xor mov dec xchg int push imul xchg xchg xchg bound pop jae cmp inc inc inc mov push popf popa ja,pt stc pop mov js inc andl jl outsb decl adc das rcrl mov push dec mov pushf sub inc fcomi enter test (bad) mov stc ljmp js out xchg or add add add add inc sub xor pop push lret imul loopne jno and mov fisub jle sub lock enter dec push add jl pop rclb dec addl lea or mov push ljmp add int3 xor pop leave test aam test popf ja jae lds in clc popa aam jg stos fs out and add add add add jbe mov dec test sbb adc jae sub lock xchg and dec cmp mov jbe cwtl jbe inc adc fstl (bad) sahf stos push fisttpll sbb into pop mov pop push jge sbb call test ljmp jle cmp in sub cs cmp xchg cmpsl lahf ret adc mov push xchg lock in dec mov push divb add fcoml jecxz cld inc sub daa jb lret pop lods lods xchg sbb and daa or cmpsl les addl mov and sub sub pop scas fdivrs add mov popl or inc add daa lds repnz mov mov test pop inc test sub add mov (bad) addb add clc mov add add add add out pop loop xchg (bad) test mov cmp and jle test add test xchg movsb (bad) int3 cs mov dec mov gs push mov inc cmp lcall sbb scas mov sbb mov loopne cmp or loope mov lcall lds into mov pop and and xor push mov push sbb rclb ret xor fwait jg add or sti xchg or mov lcall cmp xor mov xchg adc sbb jle pop push adc outsb mov fs push repz js push mov ret push sbb movsl cmp add rorl push repz mov lock jne mov and xchg mov pop sub jecxz mov push cwtl jge stos (bad) hlt cs or add add sub (bad) sbb (bad) pop hlt or insl aam aad push pop xchg xor (bad) pop cmc pop int cli inc sbb add and cmp and (bad) jo jle jle stc mov mov push fiaddl incb dec mov dec loope push or ret lods ja mulb push rcr push sub add cmc (bad) mov sbb pusha rcll fidivr test add add add shrb call clc sbb xor scas out inc xor clc sub adcl (bad) call jmp pop int fidivrl jbe mov dec lret scas cmpsl fsts xor data16 movsl enter negl xchg sbb (bad) lret inc xor out je jns dec adc fdivs dec in pop ljmp and mov push pushf push push les jle cmp and mov xchg xchg movsb pop xor jbe mov nop (bad) inc cmp stc cli je fwait int3 pop mov mov lock lea xlat or aaa jnp xor inc xchg cmp cmpsb sbb (bad) xlat xor imul test sub mov sub pop jge xor pop cmp inc (bad) cmpsb inc (bad) sub and psrad mov fidivl pushf fbstp jo fs add ffree cmc pop fistp pop sbb repnz push lret sub mov push jns xor pushf fwait inc loop lds cmc mov je aam mov add cmp ret jno inc inc sbb aas and hlt fs inc jae (bad) jmp sub mov push dec idivl dec aaa sahf mov sbb aad xchg scas mov pop fist sahf push dec mov cld bound push mov and cmp push sub sub mov add add add add jae add cmp stos cmp inc lret stos std repz inc fimul cmp fs pushf cmp insb push push and or ret xlat add dec (bad) testl mov push push add enter cmp cmp mov push push mov mov fimull jge cltd jle icebp out divb scas sub (bad) divl stos inc sahf pop into sub cs adc lods mov int aam sti or xor push fistpl and inc rorb mov sbb in int3 mov out jmp push jle rorb fimul pop std fildl and push xchg data16 pop xchg movsb imul jno inc mov insb call aam test rcl inc adc jl xchg stc loope (bad) daa jb pushf inc roll push popa push cmp imul das jl push mov add add add icebp sub (bad) out iret mov stos int sbb and jnp xchg pop int rol and mov xor jae mov mov int dec out nop fisub mov xchg ljmp out sub (bad) sar int ljmp sub jne (bad) fwait sbb in jo subl jg mov xor dec mov or push and lods xchg add pop fcompl icebp lea cld or and add add test pusha out jns je movsl mov (bad) sti mov out mov cmp rclb hlt mov or inc mov sub sbbl mov (bad) fldl sbb fdivl jnp xor xor sbb or inc sbb iret push sbb fcoml (bad) mov jecxz or xor enter xor push xchg into mov scas popf jne cmp mov rorb gs xchg int3 cli add pop imul jecxz lock or orl ret (bad) stc test sti jge push jno (bad) xchg adc add hlt (bad) mov repz lret cmp insl divb mov jmp dec movb cmp fidivrl dec fisubr mov cmp das dec idivl ret lahf adc std test jns pop push cs cwtl mov mov jge nop cmp cltd loope sar int3 add add add add les jne adc jae inc and fstpt xchg xchg js add push sub jl aam xadd dec bound repz mov (bad) mov jns xor sub xchg xchg xlat jne pop je lea xorl call (bad) rcl jne icebp in dec xchg call or lcall int lea add sbb mov jmp or pop and push lea mov push jae call add add push mov sub sub xor xchg push lcall js or cmp test mov stos jle sbb xlat es or cmp lock or ljmp out imul add mov int push jb add lock pop inc or jp or jecxz jg jno movsl or dec push push ficompl jl pop fs dec fstps push sahf pop (bad) aam jg int3 (bad) sbb in add mov add add sub jmp adc out mov mov mov adc in inc int dec ret push mov dec xchg jbe jmp dec adc loopne push or out movsl xor add xor mov int3 inc lahf je fidivrl sub mov adc jno xchg (bad) jp pop mov jb add inc ret data16 ret movsb push sbb loope jno sbbb loopne push sub popf leave rclb insb clc xchg add aad pop fmul mov push cmp icebp sub scas push sbb loopne and and out sub or xchg or pop jmp cmp bound and cld dec mov jmp stos push and (bad) leave push popf mov jecxz repnz loope pusha adc mov sub lea xor pop shr push data16 sarl jmp repz stos xchg repnz cmpsl or add add sub jno ja and add gs mov loope cwtl cli push scas dec sub sub mov lock xchg ret xchg sarl daa mov lea mov lcall pop scas push insb int mov adc lods dec cmpsb in mov and outsb xchg mov adc out mov ljmp iret fiadd lea testb inc rolb cmpsl add mov (bad) fcompl sbb xlat in scas fildll add add add add jo out sbb stc pop dec or sti rorb push lods cmovp mov das call jmp mov cld (bad) sbb mov mov jp daa push mov loopne cs incb mov mov test out test lea scas sahf add mov (bad) dec push cmpsb sub push loop mov je xchg jg jns cmp incb aas dec ret inc dec adc add add jne cmc adc pop cmp push fwait scas mov cmpsl mov jl insl lods stos sbbl cmpsl jb,pn jecxz jg cmc mov cmp mov push leave ficoml insb mov test jno pop adc popa lods jmp cmp aam push daa jno inc ljmp mov or cmpl adc dec mov sub pop mov or lock jne leave cmpsl outsl dec and shl add add add add pop pop movsb cld add xchg sbb mov pop cmpsl call test in sahf mov fcoms nop mov mov mov movaps addb adc adc mov jmp fidivl jb rcll fistp lahf cli sahf pop rcll dec (bad) stc adc addr16 imull xchg push insl sub dec lods scas xchg xchg subl pop or inc insl mov sbb call mov cwtl lret add add cmp lret adc ss testl (bad) in adc push and aad xchg cmpsl cli jns push xchg fcomip gs test cltd mov (bad) mov mov out cmp cmpsl jae mov je lcall cmp ds aas je aaa sahf jbe test xchg rol sbb fs push les push ja pop cwtl lahf adc sbb mov mov mov dec outsb push aam cli dec dec loop and fldt fiaddl pop add add add scas and or adc cltd or jle sub sub dec lcall ret loop sub push inc cmc lret inc sbb pusha testb sub aaa xlat push dec rcrb insb jge and adc mov add pusha mov clc fwait ja jge loop add int3 push pop in push cmp andl jg cmp stc adc dec shlb (bad) int lahf mov (bad) xchg push push jl and jle pop daa mov add add add xchg mov stos testb out aaa push pop adc enter inc fcmovne sbb sbb inc (bad) mov pop jecxz sub push cld xchg data16 add mov dec inc outsb xor mov adc call idivb xchg jo scas popf mov cmp sub jmp shl mov in icebp push or mov pop jnp pusha push and mov call add add add loopne aas ret inc or pop (bad) cltd xchg sub repz and adc mov fstpl (bad) ror arpl movsb psubq dec ljmp push cmpsl cltd (bad) imul xchg mov (bad) pop inc adc mov ret daa dec and lahf cmp sbb das testb jno std add sub or cs sbb jmp cltd and jl sbb popa inc insl xchg cwtl sbb dec ret sbb ret dec mov xchg add cmp adc pop pushf sub push aaa stc or ja cmp pop ret addr16 lsl lock in lret push js jg lock (bad) mov mov dec adc aas lret jae hlt sarl cmpsb or fucomi movsl in inc loope cmpsl add mov lea mov mov add out jbe xchg bnd aam cmp lretw pushf repnz pop test jl mov inc scas sub adc add add add add fdivl xchg enter fmull rcrb fdivrs rcrb mov bound outsl ficom and sub mov stc repz test sub mov lods xlat js jmp push lea jmp int3 clc xchg ret ja dec aas inc adc ljmp data16 xchg es sub jg test sarl bound iret mov or adc mov mov add aaa cmc daa cmp ret mov stos xchg xchg int3 jmp xor mov insb in int3 (bad) mov jns pusha jmp gs jno jbe xor mov in cltd stos jge fcom fild cmp jns sbb pop std test lahf cmp and inc mov cmp jmp data16 jl stos cmp sarl xchg data16 push mov sbb cmc insl mov xchg movsl rolb (bad) dec or fldt add add sub cmovo lret mov cmp cmp repnz lcall mov xchg pop sub hlt or and outsl cmp inc dec mov das nop iret std mov adcl dec test cwtl jle (bad) leave rorb inc popf cmpsb ficoml lea stos sbb test pop push dec jmp pop mov jb add cmovs lcall cmpsb rol and push xor add add add out inc outsl mov outsb or push mov xor mov mov lock fs push lods add cmpsb pop fwait (bad) lock adc mov call cld adc loopne rcrl jno pop (bad) fs in clc push (bad) cld xchg cltd fstps fcomps jnp lret add lds adc push adc (bad) les jnp jno insl xlat jo sub mov inc adc sbb xchg sti mov add jp sub cwtl aad dec test addr16 push fidiv push and repz mov rorl hlt pop vsubps test mov inc rcll enter sbb sbb cwtl mov out mov pop jmp xor addr16 les (bad) imul sbb mov cmp mov jmp mov xor xor or cmp mov add ja dec gs jp cmc dec jnp xchg mov hlt fdivrs fisubrl sub subl dec jmp shll xchg bound pop cmp add xchg lret mov push mov leave jae cmp mov dec ret clc test lret cmp (bad) repnz lea daa scas fs cmp arpl pop dec inc popf push add add fnstcw cmpl pop xor add add add add inc aam test add clc mov inc or push mov dec shlb into flds ret push in ja inc bound outsl cmpsb xorl mov xor dec mov imul (bad) sti iret lods das sbb mov jno js inc daa sbb mov (bad) dec popf or std push pop xchg (bad) push or lea shrl pop cltd sbb or orl sub mov pop inc adc in mov add add mov lret mov popa (bad) jne std xor push jns sbb mov nop gs and sbb pop rcrb ds (bad) repz push (bad) movsb add je and cltd pop mov rcl mov mov icebp dec mov ret cmp addb pop jbe sub das testb lods movsl pop cmp aam inc add iret lods ret in je je (bad) call xchg pslld push add add add daa imul sub push or pop ror fwait dec les or mov sub ds xchg pop jp sub test nop (bad) add or idivb mov fmuls inc pop push dec jo leave aam pop faddl loope cld jae xor pop (bad) rcrb cmp je mov add pop or mov mov aaa popa xchg loop addr16 pop sbb loop fcoml xor add add out aaa xchg (bad) push jo outsb cmc add cltd ror rcr fsubr mov aam sub mov loop xorb xchg xor jl shl jle das and ret sbb es stos fnstenv push or loopne jecxz push sarb (bad) mov repnz pop adc insl jl andl repz sbb mov push and ret int3 lret in or outsb sub into xchg mov fnstcw mov dec test mov add jmp xor dec cmc iret mov jge push mov mov mov aad bound jg fs std xor mov add fisttp test sub dec aaa test dec pop cmp loop aaa movsl jecxz pop hlt cs shll ss or jl jns pop and adc mov add add jg lcall jge loop pop or in jns int push (bad) out jo pop xchg dec test sub push aaa lods cmp inc outsl xor add sbb add fcomps mov ja sbb xchg dec pop jmp mov mov cli insb sbb int fs pop fistpll nop vpminub fcomps inc addr16 in cmp js inc xchg push jecxz in inc pusha ds rol cmp fildl add add push pop fisubl andb xor xchg aam adc pop test mov fmuls sub bound push push or add mov xor je test mov enter cmp ss mov mov push rclb movsw jns sbb push lcall sbb scas dec leave mov xchg (bad) rorl mov dec gs mov int pushf in cld and add jecxz inc add add add add cmp sbb mov in dec cld lret sarb cs mov mov pop pop ds xchg lahf pop enter pusha push pop das sbb add icebp xchg js fucomi int cmpsb icebp xorl push cld fwait sub adc cmp and mov pop mov loope mov and insl fimul (bad) push mov add test aaa cmpsb inc cmpb inc arpl imul inc cmp inc aam mov sahf dec (bad) xchg jl xor add add or loope and mov sbb add sbb clc mov daa loop fs bound lcall out in push xchg jb and inc push push xlat jle mov fimull inc sub add imul lcall scas push outsl inc mov mov call aam push pop outsb fs popa nop clc jmp mov pop dec cmpsl mov fsubr repnz xor add add add jle adc cmp call sti mov ljmp push sub add fistpll (bad) fimull not xchg movsl cld push ja loope and (bad) cmp rcr test stos adc ret mov pop dec xor das or xchg inc add and xchg in lock xor pusha xor cmp adc cltd shll lcall scas xlat lock test mul (bad) jge push pushf jb lahf add add add add jb mov ret pop in icebp pop jns fnstenv mov in or adc arpl mov repnz xlat cmp mov (bad) pop cwtl add mov imul mov lods adc inc pop test clc sbb sub push scas xor xor bound jb,pt insl daa aas out adcl or (bad) mov aad icebp in pop sbb inc pop dec lret cmp inc push jle xlat sbb (bad) mov add add loopne and into outsb not fs xor pop outsb mov push inc (bad) sti (bad) outsb mov nop cmp loopne cmpsl nop in cmpb cwtl lahf into cli cwtl mov aas mov adc (bad) ja daa pop and mov jl pop bound inc test je shlb xchg sub test jbe pop lret call dec xchg xor adc loop mov cmp loope imul push ja dec or add add add mov xchg xor cmp cld rcpps sub (bad) enter or xchg jae out push cmp mov push test and lea clc lret mov mov loope sub cmp stc mov or aaa sub dec and nop xor inc push insl ljmp ja and xchg sbb xchg inc je gs or aam sub xor cwtl sahf sbb stc mov add add pop decb inc sbb xchg loope das pop (bad) jmp push or mov lea (bad) sub test cmpsb fucom arpl cmpsb pop cmp ss and daa add jae (bad) (bad) jecxz cmp pop stos mov pop adc repnz (bad) popf jecxz cmpsb adc sbb pop test pop pop add adc push sub mov xchg inc push and cmp dec fistl sub jp push icebp mov add add sbb sti clc and idivb mov imul xor mov sbb stos icebp lods pop cwtl mov dec xor mov xor mov mov xchg std imul or sub iret call testb jl cmpsl sub shlb mov push pop mov in lret repz pop dec pop fldt cs cmpb sbb jo jmp test das cltd sub cmp add add add or add adc ret cmp lret scas push ja lods mov and test jnp mov mov and adc out ljmp sbb ja pop aaa jno jecxz cs (bad) mov sub movsb repnz hlt pop xchg loop frstor mov or adc mov movsl ror dec pop sub sahf cs jbe jle inc add mov mov lods dec add cmp arpl cwtl sti pusha mov fs pop sbb adc or jnp mov or cmc mov mov xchg mov cli adc jl inc jp pushf add lret adc mov int3 jl jp or mov pop xchg inc jno push dec jb jl bound stos fildll dec dec shl cmp divl js dec fiadd cmpsl push push or sub cmp mov sbb push idivb add add repnz adc dec inc push xorl adc paddusb cmp paddusb and sarb cmp xlat jnp fwait adc fidivr gs jne and mov xor scas sub call aaa dec xchg stos add dec nop inc or mul shr orb sbb rorb mov push ja pop out adc lcall mov loopne cmp outsb rolb bound jne daa cli movsb loop aad mov out cmp fisubl push rclb jae (bad) jge and xchg push fwait bound loop scas decl int add (bad) mov push pop les in out mov sub jne call push push and call outsb pop leave dec lock xor in push pushf mov int3 jmp sbb insl push inc inc push fmulp roll push mov add add test ljmp pushf mov in lahf mov mov or xchg or and mov push sub popa cmc repz cmp sbb stos mov dec or mov xor push dec (bad) jmp insl popa popf mov jbe adc sub add in loopne jmp stos aaa cmp inc inc sbb xchg lods popa pop xor shl or repz mov add add add add jo pop mov or jl int out pop add cld and mov rcr repz ds in movsl (bad) jne (bad) push into ret scas jle incb xchg add cmpsl mov js dec and pop aam fcomp mov fsubrs push dec fildl jns popa ljmp jp xlat pop jbe adc jbe jne outsl or pop nop data16 mov aaa or xchg faddp adc dec popf notb sub xchg add add add cmp stos mov jns xchg adc mov leave cli inc int3 sub test popf fdivp xchg adc out fwait dec bound ds jnp adc cli fcmovu sbbl cmp cmpsl mov sub into sbb sub add xor dec xchg jo,pn dec cmpsb xchg cld push and in pop or roll xor inc mov mov pop sbb push or sub aaa pop stos loop add dec jns ret lcall loope adc incb cmp xor pop mov scas mov mov cwtl jl das scas sub incl sbb mov cs dec ljmp jne adc movl xor mov hlt (bad) sub aam call jl and sbb pushf mov loope lret add shlb vpaddsw adc push push jl dec fs in and add add add jno dec in lahf lret (bad) jbe sub ljmp jne sbb out sub in xor xor xchg stc dec (bad) mov jmp cmpsb sub jl dec inc inc mov pop aaa mov sub lods cltd pop inc adc pop add test xor addr16 pop fstpl and and inc cmp inc add fdivs cs cmp or mov sbb pop mov mov add add add fadds cmp dec lret mov test or mov test pop enter jmp xchg cs push lods inc shrb es mov in pop inc sbb pusha and ljmp test popf ret push sbb dec xchg lcall and scas xchg sarb inc jbe scas int3 sub arpl (bad) mov mov xor jle cltd cmp les adc push adc add add add pop add test sbbl sub inc jle push xor jle faddl pop jge mov nop negb scas lods and js dec pop div fcmovnu sbb pop ret insb lcall mov xchg sahf lret fcmove xchg mov cli in mov cmpsl mov add imul out sub (bad) xor lds ja test mov or inc rcrl clc jecxz cli (bad) mov mov pushf ret mov add push mov cmpsl in mov push ror scas out fs pusha or into lea sbb dec or hlt push dec push fcmovne (bad) fwait insl push cmpsb push cmpb mov shrl pop test xor and xchg je add sti xchg int xchg mov push mov lret popf call push lahf jl jg pop jns inc call sbb add pop idivb out insb cmpsb cwtl in xchg clc fs std adc add add add or leave insl mov mov xor push add pop mov scas (bad) ja xchg cltd test daa xor pop add mov daa imul dec addr16 (bad) cltd pop push rcll inc sbb loope push lods pop pop cmp jnp sti imul cmp movsb push lods sbb jle pusha mov stc jae sub pop insl or loop (bad) repnz addr16 ja sbb loope popf inc inc je lea jbe pop cmp cmp out sti add add add and (bad) add aas sub jbe shlb jg xor mov jns loopne ficom pusha jl out subl lcall mov push stos js xor dec shrl inc add pcmpgtd jecxz mov or mov (bad) adc mov adc in mov push mov into cltd adc mov mov or sub mov stos pop mov es add add add inc or or add iret out shrb setl std (bad) dec and xchg dec loop stc cmp sbb or add or sbb cltd push stc cmp pusha mov (bad) rol icebp shlb sbb mov jl pop stos mov scas inc insb cld mov and outsl jae jb pop iret (bad) jo aam inc dec jno dec mov push in cmp cmpsl dec mov add add cmp push pop adc dec shr test or mov aas mov mov push hlt cmp push ss into inc cs mov add pop pop ficoml test mov mov fisub out fcomp aaa pop cmp (bad) and pop inc and sbb add xchg (bad) or cltd mov fimull inc dec repnz jae xor cmp (bad) lahf mov outsl push cltd mov jb sbb call add add add add loope sub imul pop lcall sub ja test sbb (bad) sub int3 call pushf hlt push daa sub fcoms iret cmp loop bound mov mov test insb (bad) stos decb pop mov (bad) or push cs iret ss cmp sarl mov dec xor clc fstpt (bad) xor push lods add cli lcall repz ljmp add incb movsb in loope jb lret mov push inc out out or jne sbb (bad) jl mov jp shrl mov out mov adc cld hlt call arpl or fistpll fistl add lock insl push pushfw pop jl js push cmpsl repnz pop popf scas cltd push sarl dec das orb (bad) jge xchg dec mov jns repnz insl mov dec out outsl dec fs jmp add add add cli inc push mov adc mov js or cmp xchg mov jnp xor cmpsb xchg psrld dec repz mov pop shr dec push scas stc or (bad) lock xchg mov pushf bound pop lcall ret xchg jle int3 add inc sub jnp ss sub cmp lods jbe and xchg mov xor repz mov gs adc ret dec mov mov cmpsb inc add add add int mov clc jl pop inc in inc push xor data16 insl dec jecxz les out adc aaa adc sub iret aas scas rcrl xor push cmp sbbb dec xor ss je push xor cli int3 add fs and subb sarl in pop syscall push mov sbb fs sbb es les repnz rorl add add clc dec xor mov in test pop lods in jl mov mov ja mov ret fwait add cwtl push mov jl aaa aas jge pop dec pusha xchg rorl mov mov loop add cs ds fisubr mov movsl fidivrl mov js scas sub and jmp adc jb xor sbb cwtl push pushf or inc aas add push das add rol (bad) es pop ds pop dec divl data16 add push std orl ror in xchg pushl and xor pop ret sbb arpl sub stc (bad) in cltd sub jns mov rolb fwait leave mov inc ret inc aam pusha sub mov push or sahf loope insl loopne pushl (bad) (bad) xor in enter inc jae sahf das mov jge mov (bad) xor adc cmc pop push js fdivp push stos daa cld pop mov push or mov (bad) jg and out inc sub add sarl fwait mov fstpl (bad) push sub or mov and push (bad) mov add jb dec insl int3 mov inc and mov neg and adc (bad) or inc fimul adc or and jb sti cmpsl dec add sub or pop enter out jne or or loopne ljmp and mov and sub out stos add add add add scas lcall mov jne rolb nop sub sti xchg mov stos aas dec mov test addr16 jmp (bad) roll pop push push into pusha jl cmc mov aad arpl push into pop out and pop xor mov pop mov sbb leave or ljmp adc lret add ds (bad) popa clc jle mov aaa xor cltd out rorl daa pop scas inc pop cmp xlat xcrypt-ctr cmpsl faddl xchg add add add add mov sub mov cmp and or je cmpl push call push and inc jecxz (bad) popf add xchg and js outsb and fcmovne lods scas push out and ja ljmp xchg cli xor sub imul das paddsb mov fisubr call in sahf js (bad) xchg cmc sub imul push shrb add icebp sahf inc popl repz in arpl or jecxz fidiv (bad) mov adc test cmp sub dec hlt out mov dec cmp jecxz push in test cmp pop lret push aaa xchg icebp loopne push or cmp mov dec js scas mov std insl sub or rolb mov jmp and push add into push mov sti ret sub cli leave lret pop out xchg add add mov fcomps aad les mov push int3 std inc mov fstpt call sbb in mov fdivs in das cmc or mov cs dec fdivrl out daa pop mov mov ficoml sahf adc add cmp daa pop cmpsb loopne sub xchg xchg shll aas imul jmp xchg or mov mov cmp xor jo cmpsb xchg add add add add das push cld fdivrp push and adc push out xchg lcall scas in mov and jae cmc xlat pop adc sub (bad) (bad) cmp rcrb out sbb adc sbb out jge imul shrl mov mov mov repz popa jg jno shll (bad) push jmp cld jno lcall (bad) cli test dec fcoml cs sahf fildll lahf inc push enter add add add pop fsts lret pop subb (bad) mov (bad) (bad) push lahf das in jb hlt int cld sub int adc fist pop in aad mov fistpll test push mov and pushf rolb mov pop lods push push rorl mov in and dec lcall hlt jae cmp popa and sbb int push out aam inc lret insl push pop ret out jbe cmova cmp xchg or inc push add add add add mov lahf outsb faddp adc cmpsb mov dec test jge pop xchg rcr scas dec pop scas jnp dec xor ja add jae dec lock or sbb iret add xor enter outsb test test mov insl jmp mov test cmp mov cld sub in es stc cmp (bad) mov out sbb cmpsl pop movsl add stc xor data16 test add jbe pop (bad) lahf dec popf jle cmpsb cmp mov ret popf pop cmp hlt jbe add scas pop mov inc mov (bad) jns mov xchg mov cmp movb into xchg adc push mov scas mov xchg addr16 pop call inc mov mov (bad) out negb popa cmp (bad) mov fs (bad) popa out mov mov out repz xchg leave jg sub arpl adc lods dec mov repnz push add add add bound lock or dec mov in mov jge (bad) xor jne call lahf or push sub cmp pushl ret mov and insl movsb paddw cmp dec sub aas (bad) xor cmpsb pop fisubrl push cli je push fbstp push (bad) xor les jb leave ret jp jge jp imul dec adc adc jmp xor clc or stos cmpsb cmp mov add add mov xchg xor mov inc and sbb daa insl sub call jae jle push push mov xchg bswap dec inc adc mov test jmp cmp dec aaa pop jo cmp inc rcrb xchg inc or out mov clc sbb and ss (bad) adc in sbbl add inc cmp push jle mov push mov pop cmp movsl aam (bad) pop nop lods rolb or inc pop jae,pt test add jbe xor test mov or jbe in mov or fisub or or jle test push or mov and mov into bnd es adc into fs inc loop addb ja add or dec push and test mov imull cmpsl scas dec jno cmpsl imul movsl cmp xchg xchg std rclb jno or push out add stos dec fisttp roll add add cmp push outsb xchg lea lcall es cmc js adc sub cmp push mov xchg mov lods lret and mov ja add (bad) punpckhdq fistp (bad) fldcw shlb mov loop push inc shr sub loope sub scas adc popf jns mov push jns dec jecxz daa fwait or jle sbb fldl mov inc mov ja,pn add xchg movsl push aaa testb outsb inc insl ror out push xor aaa loopne xchg or pop enter jmp and imulb jo xor jbe js (bad) cmp bound jle (bad) lods cli inc je cmpsl popa jb lds in inc pop push loop mov dec sarb popf loopne stc mov in xchg in pop push jge cmp rcl out cwtl mov outsb fcomip cmp xchg push add xlat xor pop loop jnp iret jo cmp cmpsb mov pop je stc stos sub aad aad xorl mov mov daa or inc inc in inc cmp fdivp andl movl xor pop arpl pop test and mov aad cwtl lea repz aad test inc xor pop out rcll xchg xor fidivrl rorb fucompp fmuls adc add add shrl xor mov xchg rcll jg addl stos or (bad) cmp loop adc aad push cli fidivr pushf jp jnp mov adc cmp mov mov inc pop dec inc sbb mov and insl fldl2e push pop mov iret and test and fcmovnu and sbb lods popa push push fidivrl cld or (bad) std out xchg sbb icebp push xor and sbb push sahf daa js sbb add add add add xchg stos ret es loopne lods iret lcall mov (bad) std cltd fistp mov loopne out mov mov push sbb xchg cld stos test sbb mov xor stos cmp clc sub ficomp aas mov movsb rclb dec xchg sub jle mov or xor mov sub adc aaa (bad) cmp aas (bad) gs movsl xchg xor xchg int3 ret imul cmp icebp add xchg fnstenv jl rolb das lods mov scas (bad) mov xchg (bad) dec ds dec cmpsl cli dec xchg xor sub nop adc adc push lret mov adc mov pusha inc pusha inc jo jle jnp push hlt icebp adc or out call leave (bad) lcall xor lods xchg jge pop imul cs fimull xchg fild mov (bad) lods xchg int push push inc push daa push andl add add add imul dec daa mov mov push push jle add sub int3 add cwtl enter out mov sub mov lret ds int xor adc push adc jge pop mov lret or push dec fwait sub pop inc dec and out mov mov pushf in in loopne bound push stos jnp dec cmp or sub (bad) jmp push dec add sbb mov push mov jmp add add stc int bnd test sub dec test in mov leave into mov int push lds (bad) aas jbe xchg push in mov lods enter divb mov jno (bad) mov dec sub add pop test test int outsl add ret mov mov out pop xchg fs xor mov repnz scas dec ja into cltd mov jne mov mov sbb ret fsubrl adc pop stos xchg and add add add divb lret (bad) mov jge push or inc fsts sub ret dec cwtl fbstp mov push pop add loop adc mov loope or mov clc or adc test pop aaa mov ja and mov jns cmp jno jle (bad) (bad) ficompl addl and cmp mov xlat iret cwtl jne mov hlt movsb fwait cmp add add aam jle cmp in (bad) and out aad mov les inc dec (bad) mov dec out jbe in xor xchg int testl enter int insl cmp lcall int inc nop rcrl dec cmpsl scas mov loop xchg pop xor adc xorl push jno or mov data16 and and int or jns pusha aad pop jnp imul adc rcrl add add cltd lea aam out inc lret pusha xchg jnp rolb icebp pop fisttpll sti not js jnp outsl jb lret xchg sub or int arpl push test orl mov std call jnp push (bad) lret mov pop test and (bad) cmp lods mov insb push xor fs inc xchg bound int3 mov int3 insb dec cmpsl cli xor push das adc imul jns arpl psubq lods push cltd aaa jecxz push hlt and repz dec jg pop push pop cmpb cmp pop data16 or or cmp sbb pop and imulb xor dec sbb sbb push loop xchg push lret lahf nop stos or lock loopne lcall mov and cli mov push loopne inc ljmp push pop jmp test add add or jbe cld push mov pop test dec jae xor jb or stos out stos sahf lods (bad) xchg jne mov xchg inc sub cs data16 sub mov xor lcall aas test adc pop adc (bad) or lcall pop call or lcall sahf enter sahf in and into inc jnp std adc shr scas pusha pop lock (bad) out cmp jle push xchg push arpl xorl xor xorb mov lea dec aam cltd test sbb shld mov cmp test cmp mull sbb jo (bad) pmaxub (bad) in aam (bad) in out test mov pop jb dec ja ljmp rorb mov xchg outsl pop in mov out push sub mov inc xchg (bad) dec ljmp ret sti xor xor dec push dec dec scas cs dec out cmpsl loope inc or mov mov dec lret sbb pop mov adc adc add addr16 cltd js xchg or xchg push stos in es and pop les sbb xchg inc (bad) fs pop add xor mov mov inc scas test mov xor adc dec jl adc pop sub insl gs inc xor xchg imul mov test add add add mov pop mov jg jge adc pushf cwtl ret mov popf inc sti pop in pushf bound cmp sub and fistpll in aam xor jp mov std mov push pop aas xchg pop iret dec repnz rcrb push push je and or inc dec inc dec and cli jmp ret sub clc pop ja pop arpl notb repnz mov lods dec add add add scas jmp hlt push jne faddl lahf and std mov sub cmp je cmpsb test mov sahf pusha adc (bad) xor cmpsl cmp dec xchg cmp data16 mov clc int3 mov nop dec jnp out add pop push add loop xchg xor test sbb and xlat push out push or scas je jo mov cmpsl and popf cmp rorb pushf jge dec xlat mov add add add add cld ret pop add mov pop jp mov push notl sub test enter call fisubr mov xchg and xlat jg test and inc or seta jnp cltd xor int3 mov jl sahf mov stos (bad) ss dec das (bad) cmp sbb neg mov repnz in xor out fwait inc (bad) stc int3 (bad) xchg pop sub mov jg add add add gs pop sub mov jg xorl ja imul add pop fstpl ret mov jp inc inc sbb sbb (bad) pop (bad) mov ret lds imul loopne dec cmovp mov or push nop jb out cmpsb inc dec fildll push or mulb fisttpl jb inc fsub jns fcompl pushf fsubl lods xchg xchg or or arpl enter xchg xchg jecxz mov out cmc mov sub mov add add test mov fisttpl cmp lret in vmovapd xor cmp jno ja cmp pop and out pop icebp pusha (bad) pop push xor jno jle in adc div add xor or push jbe loop pop in daa roll cmc mov jae pop xor push incl mov les test xlat stc cli push xchg add ret jne push and or loop out loopne push cli dec and mov adc add add mov xchg push sbb mov adc lds or mov stos adc inc mov lret aam xchg movl fsubrp cmp cmp cmp repz or out xchg jg inc imul jb fstpt jmp aaa mov cltd lret xchg xchg jle gs mov stos jg mov hlt fidivl inc cmp mov mov mov test inc sub ret add add add add outsl sbb jbe dec jae psrad movsb movsb pop sbb mov jecxz incl jns cwtl pop fsubs imul add mov (bad) mov (bad) out jb inc scas popa pop (bad) xchg xchg jmp add aam pop jno add cwtl movsb pop or mov ja test and inc xchg jl jns jbe sub (bad) jp push scas rcr add pop std icebp jmp xor jne lret dec mov add add add mov pusha add pop pop mov insl jle pop pop pop dec jg in rcrw jmp sub jbe loop fldcw lods dec jno dec test xchg inc adc and test or ja aaa lock add fisubr xchg enter lock mov lods in ljmp push mov dec cmp cmp pushf or idiv cmc dec sahf les test imul add add add jnp (bad) xor test fstps jns sbb cmp push mov sbb lret fwait and mov cld in mulb aas insl pop xor cltd inc pop sbb xchg fild insb (bad) daa push adc or jne or fildl mov push add xlat cmp push pop (bad) mov (bad) mov and mov push repnz push aam dec mov data16 xlat jg sbb push add movsl in hlt sbb pop ja loopne add add dec sub inc lret push sbb fildll lods push mov rcrb pop xor mov push nop lret jne int3 sti outsb adc adcb xchg js and or outsl cmp cmp int loopne fldcw lret inc or push mov mov dec sbb mov cld lcall inc add into repnz fisubl sub ljmp repz int (bad) lock daa scas sub add add add sbb xchg sbb mov cmp push idivb out push les jae dec jo out out push xlat daa sbb out push (bad) jp push pop and or cmp addr16 movsl pop mov lds mov dec stc aas (bad) pop aam in add pusha negl and sub inc loopne and xchg and mov mov jge mov inc xchg lahf mov and ficom lahf test add add add add dec sbbb arpl mov mov lret xorb pop loopne stc mov call pop pop ficompl cmpl adc out sub int3 pop xchg lret inc scas shll jmp movsl out movsl or xchg or sbb inc outsl sbb dec jmp inc repnz jo push jne inc incl (bad) scas pop cmp sbb cld push mov pop arpl mov lock cmp add add add call cmc pushf (bad) fstps cltd cmpsb adc shlb sbb xchg mov es push rcrb (bad) fistpl aaa mov xchg insb es mov mov pop mov push or add sahf lea icebp lea (bad) int3 jae (bad) fldl push mov push mov mov sbb mov cwtl push rep (bad) sbb dec aam out das push inc sbb cltd and add add add mov std fldenv push add in (bad) mov mov out fistl xor and lds jbe ja pop lret jae imul xchg rcll js pop inc and pop push icebp sub dec int3 inc pop (bad) lret inc test lahf subl arpl lea int3 cltd fwait xorl in lea lock pop and xchg movsb inc js sub xchg inc xchg pop xor in movsb mov in mov inc addl add add add movq xorb dec jns inc cmp mov lret pop cmc xor pop cmp fstpl rcrb cmp or mov inc pop and mov cmp (bad) push mov rcll pop and mov repnz push sbb ret pop inc loopne xorb sbb in jns nop enter ja xchg fcompl pop shll dec mov les add add add dec xchg pop sahf xchg pop xchg mov sub sahf inc mov notl enter int push insb movsb pop fucom sbb mov mov les stos or add data16 lcall iret cmp mov pop xchg mov sbb inc mov loopne add adc mov push mov call and (bad) movsb pop mov movsb bound pop icebp out push mov dec sbb enter pop jmp pop test xor add add movsl pop dec xor outsl std mov pop roll inc push push push gs cld adc inc push pusha mov lret arpl cltd pop pop ficomp xlat loope inc int mov xchg xchg (bad) (bad) pop mov adc loope cmp loope (bad) incb lods add orps test push sbb push jg call lock pop ret fwait inc leave dec lods (bad) jns addr16 fsubl jo mov (bad) cmp into aad add mov add add add add repz lea mov pop outsb outsb stc mov mov rcrb insl in add hlt or push loope je sbb fs lea in cld in jno mov push mov outsb daa xchg xorb add inc sarl mov lock in leave cs cltd mov xchg sub mov add sub cmpsb loop or lea popf loopne mov mov ret cmpsl aad add add add pop inc xor sbb pop ffree in xchg push outsb lahf aam jp xchg cs outsb rorb and (bad) adc cltd nop push dec cmp pusha (bad) int lds nop push dec push adc insl cmp (bad) (bad) jo mov push sbb sar mov arpl wbinvd test jle adcb pop mov xchg mov shlb mov sbb movsb (bad) mov push mov popa movsb push dec push mov xor dec add add add add inc xor scas mov movsl mov faddl fild jo push pusha jb dec imulb hlt mov or leave das mov je imul fs xorb mov or repz outsl and mov in push icebp test popa mov cld out bound push imul popf sbb or xchg jmp inc popf loope push fiaddl sbb jg,pt fld cmp addr16 push movsb js add add add jp and test xchg cmpsb jmp orl jle inc push add cli push fwait imul js mov (bad) pop xchg sbb out mov pop jo push xor sbb mov test gs int3 sub add enter inc arpl ret and loope fs jns leave icebp cmpsb mov and xchg adc sbb push mov adc mov add shrb xor test jne hlt daa out lcall (bad) inc je cwtl mov cmpsl ret ja push sbb lahf sub sbb add inc or pop jp mov push pop fidiv std mov int and out inc pop and roll cli in gs jl test and jae mov leave dec mov daa mov jns xchg dec je add inc xlat mov and add add js test shrl xchg pop icebp xchg jl dec fistpll in push ja fist push cmp mov mov xchg mov cltd pusha popa cltd pop or jmp dec lods jecxz xor jg,pn mov or cmp data16 incb dec xor xchg pusha je pop push js cmc jae xchg add mov or inc xchg push dec sub or das mov mov cs sbb jbe add add add add jno pause lods orl dec or mov jmp sbb sub inc inc mov aaa sbb cmp aas popf add jbe add leave mull movsb xadd mov dec adc pop subl push ljmp outsb movl mov fwait adc hlt test popa sbb push inc jno and or sbb and lret add add add cmpl cli xchg (bad) neg pop fistp outsb je sbb test rclb mov stos sub add out out xchg jb push ja sub pop add sarl inc push mov jmp int3 jae jl arpl movsb lret xchg sbb nop lock lret dec jecxz rolb xchg into stc ret push js aam jnp (bad) idivb call adc sub jle in xor out dec xor in mov cmp test outsb and adc leave mov mov push (bad) fnop out adc mov outsb pop jb sbbl sub cld aam jmp call and add repnz mov lret jle dec lahf add fistl in sub inc (bad) dec cli mov add dec insl jmp pop arpl es in mov loop add scas cmc cld fnstenv add add add dec sbb push mov push and cmc pusha dec mov jns push stos add stos lods fucom mov inc subl (bad) dec ret or int3 mov fwait mov lahf add xorl cmp lahf dec sbb jl push cmpsb sub scas xor fstpl cmpsl jle ficom pop push mov insl jno lods add or mov pop sub scas dec std jmp add xlat std cmp ljmp add add add xlat je,pn call lea clc inc (bad) negl xchg xchg mov ds and or inc push jnp sbb add (bad) popf cmp ss mov aaa scas pushf and repnz arpl imul mov int cmpl adc into or stc das iret addr16 outsl aaa or hlt cmp jbe test inc sbb xlat mov add stos jle add mov mov in jnp add jno lret sub negb inc aad mov outsl inc loop stos push adc xor pop mov adc clc mov (bad) jle jno mov mov and movsl cmp inc xchg frstor mov addr16 popa xchg dec jg xchg fwait out jne (bad) fwait mov fldt pop sub lods (bad) pop xchg sahf jae pop and out sub mov lods (bad) lods insb and push dec cmc mov add nop and out jmp add sbb sub mov loop cmp mov xlat fstps or and jbe push imul and jo daa and dec mov fdivl or pop shr and dec pop lcall inc paddw leave pop hlt mov push mov and mov je cmc xor add mul cmc movb or push mov jl pop pop or add jnp bound int push mov mov cs or ret or ror ss adc sub cltd push xchg sub in sbb (bad) shrl in adc pop mov (bad) pop dec fsin fldln2 dec mov sar jb enter mov stc insl jge or adc (bad) (bad) jae or dec or xchg fs lds cmp xlat es lea daa xchg jg sbb add add add add adc ja push lods dec cmp pop cmp dec ret push inc inc bound cmp mov je mov inc push lret mov dec fs jmp or fwait cmpsb pop xchg pop fild cmp pushf ljmp subl mov mov or pop iret int stc mov mov in xor imul inc mov mov cmpsl cmp sbb scas pop (bad) out cmp lret xchg add add or xchg (bad) lods fdivs or push and popf sti out add nop out xchg mov xor jge jle mov dec popf cltd inc out out test and pop (bad) and mov popa (bad) aaa lahf jge ds adc hlt mov cli insb pop popf aaa bound lock imul mov mov add rcrb in inc or lods sub inc push jmp cmc inc stc adc outsb cmc loope scas pop xor add add add add test or add test inc push dec and (bad) adc xor mov mov inc mov bound xchg jns (bad) ss adc xchg aad arpl cmp icebp or xor xchg loope pop xchg movsl out nop mov mov sub lea dec jl cmp xlat push sti add lods in sub and icebp xchg push dec pop sub or mov sar sub mov int3 sub pop pop (bad) lods ja cs push pop add pop dec cs or add imul cmpsb pop and mov add jg sbb sub nop or cmp push pmaxub and xor xchg mov sbb mov leave rcr das cli addr16 pop mov frstor xor pusha xor lahf inc adc sub cmp jp cmpsl fisttpll fnstcw add add cmp cmp enter xor ljmp cmpsl gs shrl js sub mov cmpsl mov jecxz xor sbb and int push sbb lea hlt mov xchg xor xlat scas imul jmp adc cld ja adcb test (bad) jne lock cmpsb pop andl mov mov dec dec push in sub out inc cmp add add add mov loop icebp push adc (bad) sub mov mov or push jno leave out repz mov mov aas mov fcmovu aam push push mov aad dec lret test jbe xchg fcompl sub cmpsb call add push mov (bad) pop xchg xchg lahf lods jnp adc mov stos pop sub pop pop mov cs mov jns cmp ss jae fcmovnb add add add sbb enter sbb (bad) call cmp hlt adc sbb clc pop addr16 mov push jne pushw mov jno and popl add push aas sbb pop daa pop fwait push (bad) stos pushf out add mov nop mov pop out push jne hlt daa cmpsb xchg adc xchg mov push mov popf mov lret xor xor test imul xchg ficomp in ljmp stos mov (bad) sbb push sub rcrb les sub lock cmp mov push outsl pop add jbe jo sbb daa aaa jge jge dec repnz mov mov rolb adc cmp fstpl sbb daa mov jae lods sahf pop popa mov jmp repz dec test jnp test in sbb or (bad) mov push addr16 fsts mov xor add add add stos adc enter xor cld and int popf insl dec or cld dec lods and jecxz inc jl sub (bad) std pop and mov in mov into push inc mov lret out jno jno sbb mov sbb rolb mov js jp adc cmpsl xchg lret js ret jge stos aas loopne and xor pop cmp repnz leave lea scas inc adc add add add add jge jne fidiv dec fstpl mov mov mov bound add inc dec movsb out mov shrb repz push out loop or sbb mov fsubrs pop das ret in jmp or outsb insb into cltd mov lods mov sub mov lcall mov ret imul je sbb sbb push sub das cmp icebp mov (bad) in or es bound into adcl ljmp stc cmp mov movsl sbb or fcmovu (bad) mov je dec xor sbb sub add mov lea int3 push aas and fldcw adc js push jb xchg movsb (bad) pop aas das mov icebp inc into fnstcw inc sahf int3 hlt loopne jns insl pop cmp movsl sub xchg imul fidivr les fwait push push adc arpl pop fisubrl lcall add lods sti lods call jp dec or sahf push fs enter and paddusb jg push and call jge,pn js mov mov dec gs pop jge sub icebp mov xor jne insb int mov mov sarb jecxz test pushf std dec mov popf xor outsl jo test cmp xchg mov (bad) das (bad) lock stos jne les add add add (bad) mov das pushf mov in bound outsb lret xchg cmp sti cs jne pop pop shll insb scas dec (bad) pop sbb aad and lock pop loope sub insl mov das and jae cmp jb xor in lods pushl lea dec adc or inc mov add in ret sbb imul (bad) dec bound mov test dec inc adc xchg or aad add add add dec push (bad) rcrl sub loope notb and jbe mov pop adc push jge dec (bad) xorl lea fldenv cmpsb lock leave adc mov pop js jae stos out cmc pop mov cld in jmp sti repnz test sbb pusha mov repnz dec pop outsb stos scas push stc mov dec sub inc adc das xor dec popf push repz das jae pop popa stc les pop add lock mov jns fidivr sbb dec mov sti xor push push sub repz adcl xor pop jns out sub aam fbld add cmp or sub jl mov insl test fidivl push (bad) xor pop test mov dec xlat push addl xchg lret (bad) or popa int3 sub (bad) je hlt out xlat ficompl mov or jb xor sbb imul nop sub sub dec inc add imul mov data16 sahf adc add add inc icebp cmp mov jnp imul add jne inc (bad) mov lret xchg inc pop sbb mov inc inc and xchg xor mov sub jb jnp add xor loope outsb fwait cmp pushf daa insb icebp adc mov sbb sbb and push add mov inc scas jg xchg jbe sti or add in lods cli add xor outsl adc xchg jecxz pusha sti icebp out lret iret test inc lods mov data16 add fstl fst push sbb repz xor jle pushf cwtl imul popa xchg sbb xor in mov add mov cmp lahf and adc lods push push add mov jo mov rolb jg sbb iret rol nop jb add add add add or arpl mov repz add push mov xor mov aas mov cmpsl and mov test adc xor mov popf rorl (bad) scas in or pusha inc gs sbb mov mov aaa jp jg (bad) mov shrl and mov pop cmpb loop (bad) sbb and (bad) mov jno (bad) call dec rolb sub out xchg daa dec addr16 jle add std jae adc inc clc inc dec (bad) dec fdivrs ja add stc or pop mov cmp (bad) les jge xor jmp sub cld xlat sub dec pop inc mov mov inc inc mov (bad) fidivrl cwtl xchg dec pop dec mov jbe xchg leave fstpl push xchg std lods cld orl (bad) ljmp mov dec or xcrypt-ofb cmpsl sub mov sub aas shlb inc addr16 lcall lods mov ja test hlt (bad) mov ss mov push scas rolb jg test aam (bad) xor notb popf mov pusha js cs mov fstpl xchg ret dec jg push fcomi roll adc sub mov (bad) mov pusha pop inc sbb ret ja mov mov jmp pushf push or xor or cmp and add add add shrl (bad) and dec imul incb stos in sbb inc add xor (bad) jne lahf movsb clc cmp aaa loope insb js dec inc stos mov sbb inc mov lea daa sub sti cli mov mov ljmp pop sub test enter and adc imul mov enter mov leave dec gs push jmp jb sbb pop mov sti enter add add add int out mov push popf add lock adc cmc and in jp inc imulb insb in movsl jnp loop repz hlt xlat xor push aam dec in cs out sub mov adc and mov inc addr16 push pushf and dec das sahf pop fs dec pop cmp pop scas cwtl xor lock cmpsl fsqrt out and int3 sarl imul stos mov mov popa mov std and repz mov jo mov add ja mov sub popf jbe mov add sbb mov pop (bad) xchg data16 lret inc and stc jg iret fild adc pop sbb sub sub pop sub orb push repnz pop nop push aam add push jecxz int3 pop loope lcall rolb lods gs and xchg lods fldenv popa push adc xchg mov cwtl pop nop shlb sahf xchg mov popf out pop cmp add arpl xchg (bad) and jns (bad) sub cltd ja std mov nop pop cmpsl lea adc jg int3 (bad) add mov arpl inc pop xorl inc leave test cltd mov push pop add repnz scas mov cld scas jmp in (bad) loope cmpsb mull cmovl (bad) xor cmp sbb add add add out xchg xor ret in pop xor (bad) mov adc lods (bad) iret jae mov in adcb inc iret inc psraw adc imul pop jmp gs dec mov dec stos or push sub dec sub jb in pop or nop cli mov inc out lock ja mov pop xor pop mov adc jecxz sbb mov jge aam lcall imul inc in shll cs add add add in and arpl jns fs mov push or aaa fsts sub fcoml sub data16 mov mov xchg xchg or inc xchg (bad) rorl cmp cld inc repnz test xchg lahf push dec sbb lds jb sbb lret rolb ret cltd cmpsb push add jp es scas inc shl in (bad) mov (bad) cmp jge push mov lret pop shrl test inc sbb out push pop cmp dec das mov inc mov and cwtl faddl jb mov xor push mov ret fwait lret xchg pop outsb xchg (bad) jne scas adc sbb and pop comiss loop sahf popf sbb es sub add in pop and and (bad) jo mov out cmc test fnsave sti fidivl inc pop cmp std xor jno mov cmp icebp std add xchg dec or jle enter cmpb fwait pop lock std lods fisttpl fstp push popf adc enter pop ss jecxz sub sbb push pop pop lods cmpxchg movsb sub lcall and sbb cmp bound insl or sbb fcoml (bad) pop pop push (bad) cld push repnz push inc and and lahf leave xor pop jns mov iret inc cli xor (bad) dec addl icebp dec jl ret sub jno xchg cltd adc mov push sahf or jb movsl inc and lret mov aas mov xchg outsl sub cmpsl int sub sub xor or push pop sub dec push cmpsb outsl xchg xchg out sub inc jns dec stos addb pushf cltd jns lcall stos dec movsb mov das dec xchg xchg add cmp and inc or std les dec mov fdivs pop in movsl push cmp add add repz test and push pop ja loopne push icebp es xchg and lahf cmp int push inc add dec pop out pusha aam scas int3 roll xor lds pushf leave cli leave jae pop pop call clc xchg fisub mov sub lcall mov pop mov mov popf xchg fcmovnb xor add mov repz cmpsl push adc inc (bad) sub add add add add test push mov stos sbb pop movsl and push pop aaa jno (bad) dec sti into xchg loop repnz addr16 push and sub icebp jecxz in dec dec xor jp daa insl test mov das push std pop pop outsl push inc aam pop jg pop aas ss mov imul jbe lds data16 popa cmp xchg mov jl nop pop rclb (bad) pop or outsb jae cmpsl out std fs push add add add cmp push (bad) enter inc mov inc cmp lea imul pop jge pushf mov pop inc push repz jns pushf sbb mov outsb lods mov fistpll mov xchg fidivr les or xchg pop (bad) idiv inc ficomp sti adc notl mov (bad) std dec pop (bad) inc ret pop xor fisubrl cld sbb push fbstp imul out ja lds inc sar add add fs jle push adc mov aad (bad) mov clc pushl popa add sti mov fstpt loope dec adc sbb ljmp ja adc movsb fiaddl cmp insb inc (bad) fmuls sbb jmp lds test push outsb mov jb xchg pop mov in daa insl pop xor sub mov data16 and cwtl mov inc les aaa bnd cmc iret fcoml sbb stos insb shrb fidivrl testl mov cmp or imul mov add cmp xor lods mov pop or mov ljmp sbbb stos add std out (bad) mov mov inc lds test pusha mov mov movsb sbb lea mov or stos (bad) fidivl add add push add pop mov mov mov fnsave jge rol fldl pop pop xchg arpl js mov aam sahf loop data16 icebp out jecxz aam pop scas dec cmp (bad) call (bad) nop pop sub in test das or xor aam out std (bad) add pop bound (bad) movsb pushf addr16 (bad) jne lahf dec movsl inc pop addr16 nop jbe sub lods mov (bad) sti mov insb pop inc mov add add push mov int mov push sti (bad) movb pop fsub xor cmp sub insl jne (bad) arpl jg or xor repnz ds loope lods inc jp in push ficompl xchg cvtps2pi mov mov test test inc jl pop xor and jae test xor insb jecxz or mov mov add mov or lcall and push ret xchg and inc lods notl jbe and sub stos sub pop sti pop cmp jae mov sub (bad) aaa cmp outsl sarl jne mov out add imul jg (bad) outsl jnp inc out jge mov lds push push fmull xchg les sub imul popf mov mov sarb pop icebp clc or pop aaa shll inc xor jnp xor repnz out loop cli addr16 lahf test ret adc (bad) sub cmp outsl push pusha out add add add add loope (bad) cmp inc arpl nop fimul mov push adc pop sti pop and cli loopne mov mov jp mov les fidiv in and push data16 scas dec add dec mov xor dec insb mov notb xor repnz adc or push shll push add jmp stc call lock jmp loope push sahf popf rclb ja imul add add in push fadd cmp scas and test xchg xor inc arpl les shrb jecxz jb (bad) push in jnp fwait or add or mov (bad) loope mov outsb dec (bad) xchg rol roll jo inc lods inc addr16 lret int3 sbb xor cli dec mov and iret mov sbb or (bad) call pop mov test test or (bad) mov add add add pop push movsb or fsts jno sbbl std das xchg rdtsc pop dec cld adc insl push lret lahf inc or lods cmc inc xor les test xor jnp dec dec out loopne (bad) push push rclb pop ret sub in xchg xchg movsl jnp (bad) popw add cmp cld dec inc and and push cwtl pop sub aad sbb push roll lods sub xchg lods sub mov xchg movsl arpl add add add mov and outsb sarb sbb scas sub xchg das inc pop ret and pop pop (bad) js imull add cmpsb icebp ss (bad) xchg dec push outsb rorb inc xchg repz daa lahf or mov cmpsl aad fdivs repnz xchg loop aaa mov mov out leave and faddl push movsb mov imul sbbl test ljmp cli stc xlat rolb add add add add in pusha push jbe (bad) xchg inc aas adc cmp scas mov inc pop fcomps adc cmp loop int call cmova (bad) aas push inc mov pop xor lret sti pop (bad) jp gs or lahf icebp pop mov iret inc and fs (bad) jae or das out setp inc push mov loop hlt in outsl jp insl es mov imul (bad) pop mov iret lcall add add add push (bad) mov sbb sub out cmp sahf lahf add movsb cwtl insl sti (bad) in pop mov dec mov push adc repz mov jl jecxz enter andb xchg xor ret jo std mov xor adc push lcall push cld pop fwait mov mov aam mov clc mov out insl add add jl or xchg stos das cmc dec ret cmp push mov hlt jo xchg add add add add add add nop popl mov pop loopne and push jle (bad) sti lcall mov rolb sbb jno sub add xlat faddl insb dec insl sti (bad) xchg es add inc lea jo adc out stc leave and rorb insb clc cmpl push xchg int3 mov cwtl and mov ljmp push inc jns sub and (bad) (bad) cwtl pop cmp push (bad) ficom mov xchg in inc jo add add add and inc fincstp stos aaa cmp dec out xlat js push xor mov xor inc ret rorb leave add mov sahf jno dec dec (bad) push fisub xchg push inc mov ffree cmp and in add clc mov scas mov fild (bad) std cmp dec mov add pop (bad) cmp dec in push out dec daa (bad) cmp cli inc and dec hlt scas inc xor fs mov cs sub lods sbb add add add add xchg (bad) mov and xchg or nop add jns adc lock mov roll and cmp inc es xchg adcl stc dec mov das xchg xchg iret data16 loopne mov sbb jecxz xor jecxz cmp xchg xchg inc imul or insb les (bad) xor outsb insb cmc lods cmpsb test mov add addr16 fldenv fwait hlt pop gs aas xchg add or sub jns fs imul pusha (bad) shl or jae push lahf xor mov pop jge int3 into mov adc xchg jle (bad) icebp add fbld fcompl ficom or inc push shrb xor ret xchg stc aam mov inc mov sbb lcall outsb out push stos test lahf lds cli push loopne and ds dec in push jbe and clc imul jns sti mov loope ficomp cltd add mov inc and mov test cmp pop rolb out xchg sub dec mov in daa lcall jae and out xor sar (bad) mov test sub lret ret decb fiadd cmp sub lods inc arpl jbe and test rcll push add (bad) or sbb pop cmp (bad) mov loopne jns movsl xlat insb adc sub jl dec (bad) into sbb dec dec mov add mov rolb dec inc int pushf pop mov loop xchg test lods inc mov mov fcoms rcll jns stc xlat xchg dec or dec cmp test push leave negb dec cmp inc jecxz mov inc pop cld bound cmpsl pop ss mov in push mov xor rcll add insb jae outsl ja push (bad) in mov adc rcrb stos pop dec scas pop push xor mov sahf popa fst out add add add imul aam (bad) add inc pop mov sub (bad) aam jle or mov dec clc aaa popa fs cli ss lahf (bad) imul push (bad) enter jmp sub popf and xchg cmp pop xlat pop ficom mov sarb mov cli ret (bad) dec xor icebp mov (bad) ljmp lock and xchg repz pop (bad) nop test adc dec adc repz popa or lea cmpsb xchg fidiv test mov aas pop and lcall mov pop js pushf push repnz leave push inc pop mov movsb jg fisubr jnp out pop push dec and fildll (bad) adc loopne adc fidivrl xchg jp mov mov pop jmp or lret jg cmpsl mul sub out jnp pushf ret in xorl sbb mov dec push pop fmull leave sbb xor repz fwait and and iret add test jg push les enter popf xchg (bad) enter xorb mov push negb mov outsl loope mov xor adc rcl (bad) push orl jg daa mov or cwtl test mov mov mov movsl inc push adc mov jns jge inc inc pop mov cmp popf lahf and clc jge test (bad) mov mov push cmpsl dec cmp daa add add add add add ja mov adc gs icebp pop push cli inc mov mov call xlat enter lcall cmp popf mov cmpb jmp mov dec test gs mov jbe and (bad) idivb mov adc sub pop adc insl (bad) scas or adc (bad) testl dec pop sub mov testl jp insb xchg add add je inc cld inc xor mov or sbb cmp xor hlt jne mov nop mov in or jcxz dec fwait loop popf repz inc pop jmp push sub jbe add fistpl pop ret lods mov je lret out pop inc outsl mul mov lcall mov dec mov mov xchg mov repz xchg xor or fist jae push add add add pop cltd sub xchg data16 lret fnsave jp pop dec gs in sbb or xor dec mov lret outsb (bad) push lock adc imul lea sub mov xchg loope pusha inc pushf fiadd iret push stc and jb mov enter ljmp movsl dec rcrl into (bad) mov popf loopne aas mov dec mov pop incb push sub stos (bad) mov inc mov xchg xchg and add add cmpsl xchg jbe push push or loop adc sbb insl mov js pop dec int (bad) ja xchg cmp fbstp xchg jbe js adc lods fwait sub lods xor jb mov pop adc jmp sti sbb dec mov or loopne fimul cmp cmp mov in mov add lea jl ret xchg ljmp mov jle ds or fldl stos push cltd cwtl rcll mov add add add sbb push div jmp cmc push fmulp adc push aad pop pop jl es mov inc adc xor and mov add xor dec pop sub aam xor inc ret movsb dec movsl mov dec xor stc insb add pop dec mov xchg jbe mov in cmpsb ljmp lea test cmp dec push fs mov dec enter (bad) sbb int3 leave ror std pusha testb add add add imul inc inc xchg mov add aad test sub pushf lret aad test inc ja adc jp adc mov pop or or ds add mov dec sbb lahf push pop xor pushf aam pusha loopne hlt sbb je pop subb or and mov inc rolb add rdpmc jp and jnp adc dec sbb test popl or add pushf push in pop rcrl fimull sub roll add add add add sub bound mov jnp inc leave xor dec mov inc sar mov (bad) pop xchg mov fsub mov lret sub fdivrp test mov (bad) inc enter movsl adc lea loopne int3 ljmp shl cmp push lret or xchg push cmp popf ds pinsrw adc inc xor cmp adc inc inc cmp pop push adc popf cmp addr16 jl lret mov xchg add add add dec lea cmpsb xor test shrb adc in into dec and lret cmc sti jne dec decl jle adc ja adc inc jg pop add xor clc je in inc insb icebp pushf int3 shl push pusha and and mov adc inc and xchg int3 push lods rcrl lahf mov call cli xor test xlat xchg ficomp jl xchg fcoml mov sbb add add add add ljmp sub jne jle mov xor xor mov adc test pop push xor shrb lret or in (bad) cmpsb imul jae sbb jo,pn adc sahf xchg push push (bad) jae lock icebp xorb mov or add sahf push push mov (bad) adc inc imulb test or cmp jl (bad) loopne xchg insl mov xchg out xor popf push nop add cmp sbb dec loopne xchg and lret (bad) xor mov popf xor and (bad) mov pop ss cs (bad) pushf dec lret mov es and sub or mov sub shl pop ja pop and cmp push clc ret out ss lret test push (bad) jae popa sbb sbb mov mov frstor xchg ret insb pop shrb shr gs jbe mov ret dec jb loop aam and cmp pcmpeqb add add add add lds or lcall inc inc pop sbb push mov popf or insl cmc mov std push ss xor (bad) out add jnp scas push loop (bad) (bad) in push lock cld (bad) mov mov icebp movsl js loopne cmpsl data16 outsl push pop ljmp test xchg cmp in or pop iret jg cmp push inc xor xchg sbb xchg (bad) in jnp cmc cmp push pop push mov dec insl out incl add add add jbe mov mov dec pop jge (bad) jge ja or int3 inc cli loope ret mov or lret or aaa adc mov mov or loop pop movsb ficomp scas sti mov stos sbb into pusha lret insl iret call inc test mov fdiv mov inc cltd into lret jne fsubrs or mov jbe adc or jno shll mov xchg ret or imul out push add add add mov into scas xlat test std push (bad) lret orb push fcoms adc std idivl fdivrs int3 cmp adc xchg xchg fadds cltd cmp cmpsl xchg test sti adc scas sub and cld pop mov adc repz stc xchg in xor lea data16 flds psubb inc and jmp mov pop ds add adc xchg xor (bad) test stos mov mov (bad) push cli or xor mov add add cmp fisttpl xor or xchg mov push js jmp test jl ljmp or jg add sarb and arpl lock mov int3 sbb or push aam mov clc push sub cmpsb in imul std or mov pop or in inc loope loop loop cwtl popf jge sbb cmp mov lds jne repz jmp enter xor push dec xlat fsubrs cld push jmp add pop inc imul aas lock xchg jo lea nop arpl notb pop out push push les ror test and sub mov pop fimull pop shlb loop push and cltd mov xchg (bad) push icebp (bad) stos icebp and sbb lret cmp jle or lods mov pop cmp cltd outsb adc mov bound mov shlb mov addr16 ss (bad) stc idivl loope add mov or or into mov push leave mov xchg mulb test sub lret xor ds push int dec inc jno lock testl into sbb mov out and jge cwtl mov xor ret shlb mov or sbb inc jp mov mov push sub scas mov mov fwait out adc push into lods scas aaa enter add lods icebp pop xchg dec fs movsb repnz cwtl sub lret xchg push (bad) mov xor popf scas rol cltd fnstsw mov mov in aaa cmp (bad) xor and lahf or jmp mov xchg add sahf mov cmp pop dec ja push mov sbb lds inc xor test mov iret in push imul stc mov or incl ljmp test xchg mov das dec add add add cmp nop movb xor into xor pop xchg xchg scas sub insl daa icebp sarl mov ja ds pop and ss ret lods cmp pop dec adc mov sahf and cmp fucom jbe (bad) ret push and clc xor jecxz xchg or mov jmp pop xor xchg adc mov test mov mov xchg sub es in xchg push insl jae inc bound adc mov js incb dec lods cmp add add add or repnz xor xchg scas popa dec stos sbb outsl cmp (bad) fdivrl sbb hlt (bad) call push stc xor pop out adcl enter addb mov pop decl inc bnd nop xchg cld aam inc das dec xlat es bound lock sub or xchg lahf mov fwait iret in dec mov xchg xor jecxz pop sbb mov jg dec pop pop jbe out mov mov add add add dec mov adc pop out int inc mov sarl sbb in jl xlat fnop push mov xor lcall sbb popf push ror or xor test nop fmuls fisttpll sbb pop popf xchg stc sbb shl pop fs add xor jmp push enter std idivb sub jle push dec adc sbb test in out pop aam imul movsb insl xchg sarb inc faddl addr16 dec adcl add dec inc ret or mov adc lea jg adc ficomp xchg adc push add scas sahf mulb push aaa inc lods cli xor pop pop ds aaa inc neg cmc push (bad) (bad) mov push addl mov xlat cmp cmp cli dec lcall (bad) xor shl in or ss sbb std dec insl sub xor or orl adc repz add inc pop pop sbb fistp jmp imul repz fdivrs lret pusha lods je orb sti jo ljmp mov dec das xlat cwtl lds push pop lods mov pop adc push dec mov fstpt loope test xor xchg fs decl sahf xor hlt push push into aas xorb or insl inc mov cmp les ljmp fist xchg add xor popa jmp add add in or test adc mov cmp stos sub sbb adc out cmp test adc fnstenv ret ret lahf mov loopne invd or dec in rol jle lahf push fwait lcall mov sub outsb xchg out xor ljmp mov add adc push jo push sub movsl sub in mov xchg dec (bad) mov mov mov add add add mov dec scas clc mov aam std rcl fwait xchg cltd jb shl enter xor push nop loope xor and push mov mov adc and xchg or cmpsb pop ljmp pop movsb mov rcr mov push pop cmp jmp mov xchg ret xor xor jae xor out mov addl push frstor push cmpl cmpsl adc dec aam jmp and dec fcompl fsubr cmp or sub push or lret (bad) ret mov pushf sar inc stc les ljmp cs lahf andb (bad) pop popa pop test stos cs in sbb sbb sti push hlt jbe imul lods add incb and and pop add dec cltd pop mov push out mov jne inc loop inc mov mov cmp cli sub dec inc addl into sub push fwait inc and insl test sub mov inc mov sub imul add pop xor inc pop xor jg aad outsb out adc cmp inc push inc xor mov mov (bad) js pusha cltd pop lret mov push xor or mov out out sub xor mov jmp verr mov nop imul jb adc mov mov cmp or adc push push mov into push cmp add add xchg stos push hlt cmp test sbb (bad) xlat cmp imul xchg ja popf inc loopne xor push stc and jbe push fst sbb (bad) mov sub pop jae cmp mov xchg lret mov aas (bad) in jle sarl test movb cs subl js pop add pop xor out mov sbb (bad) data16 pop jl mov in push imul stos mov lret mov mov add add add iret into push push push and push (bad) not insl or movb insb aaa (bad) repz xchg push mov mov jbe,pn testb jg movsl xorb add mov lock adc add add sub pop cmp jne inc pop div test sub and jp notl dec les int3 aam pop xor xorl xchg mov pop into mov xor sbb add add add sti jl fcmovu fwait iret ret add rorl rolb pop mov and add sbb arpl dec sub (bad) pop push test ret js and ret lahf fdivrp sub mov pop test fcmovne xchg addb lds insb mov in (bad) xor in add push add dec je pop cmp and pop push mov test mov loopne cmp jne jp cmc dec fcmovbe ss (bad) push (bad) lea sub in pop and cmp add add add cmpsb jg dec aaa cmc out mov into scas mulb pushf ss sub out outsl jle mov jg xor frstor cmpsb mov add push aas xor mov push inc push cmpsl in call loopne adc add je mov mov inc in inc mov lods mov lds xchg mov lret sbb sti mov jbe (bad) stc in aad xchg jo add mov pop xchg cmp and or add add add xor xor loope (bad) or lret imul int in mov xchg inc jmp ret aam repz mov xor pushf push xorb cli aaa in popa adc or jo outsb inc ficoml mov pop addr16 into push fsts ss or pusha push pop mov movsb add sub fimul (bad) xchg and mov cltd or repz push pop dec in and fldt push mov add add xchg call and cwtl jno testl xchg push addl loope mov dec in inc and rorl cmp (bad) mov pop sarb mov cmp pop jge std add (bad) mov das in or xchg hlt dec mov fadd cmpsb scas ljmp movsb jnp lods inc cli cli cmp fstpt xchg push mov mull je sbb xor pop adc rol xchg fldt pop add add add aaa push cmc jmp jne cmp fldcw ja stc jo test and pop test in insb lds (bad) es lcall jae es cwtl fmull mov adc push xor repnz fisttpl sub xor (bad) loope adc int3 fs mov and push aas js rorb sbb cmp inc jne adc rcrl sbb xchg add add add lock movsb or xchg or dec push (bad) cld rcrl sbb add imul ds mov sbb mov out ret push fidivr cld insb or cltd loopne jb fwait into mov inc add sbb pop outsb addb fldt sbb xlat sbb cmp and jns mov fucomip pop ja dec push test or ret mov add jg std jno xor in push or add add add bound stc mov popf (bad) jno fs xchg int call jbe mov xchg inc lahf ret in fidiv xor adc out xchg cmpsb jae push lcall arpl jne in push sub rcl lea jno sahf sub xchg outsl pop mov and xchg add out cmp add stos popf mov lahf call clc or mov es popf sub sub add enter fs in (bad) sbb sub push jo out loopne pop js inc lods xor cmp mov and aaa pop repz sub sub sbb sbb inc or imul loope movsb add and sub push push xchg push leave push xor out xchg and bound scas in sti adc sub mov mov push cmpsl pusha sbb ret or xchg int faddl add add adc cmpsb add enter cld ljmp sbb sub cmp sti ret lret in sub sub mov or popa fstpl lret jb push mov xlat cmpl push inc cmp or mov dec adc jle sbb jne mov lods fisttpl inc movsb stc mov bound xlat cli sbb and test adc mov inc idiv add and sub add add add pop addr16 push jmp sti (bad) repnz push cmc idivl add cmp ljmp cmp ret ret cld sbb stc push test lcall mov idivb add lods mov cmc dec cli mov (bad) ss (bad) pop testl aas test das push pop dec std popf mov or roll add and pop pop testl push add add add add rclb inc test lahf (bad) jl movsl add jbe mov cwtl mov popa fbld stos add dec ret loopne icebp sbb popf pop imul xor sub sti push or xor mov fmull (bad) mov fs pop mov dec movsl mov mov add rcll mov arpl es sub dec je sub mov xor or subb jp mov arpl add add pop dec lret outsl loope icebp jns loope test adc add sbb adc aam pop data16 push jmp ss (bad) ja mov mov sar cmpsl jg add cmc xchg mov add add mov sbb out jbe decl mov mov mov jae push mov sbb xchg adcl add xor pushf leave dec pop or adc push adc pop add rcr pop add add add aam cld ja adc lods in cmpsl test dec cmp pop out int3 mov cmp fdiv jp scas jp (bad) sahf test mov (bad) mov gs (bad) cmp imul stos mov cmpsl or addr16 jg (bad) mov mov dec loop push mov (bad) push xchg (bad) mov or and push push jge xchg xchg nop pop or in xor (bad) lcall push push push out es add insb xor mov xor dec xor jae lock inc adcb inc push fidivr xchg jmp fnsave mov push xor sbb sbb aam hlt sahf sub rcrb cmc sub adc test dec fidivrl push xor cmpsb mov mov sub mov jae add jae popa mov cmp lret xchg stos adc pusha in push xor push test pop mov int out fiaddl rol add add add outsl jl xchg dec movsb xchg and mov and sub jae xchg mov mov inc out mov dec sbb push out push fnstsw pushf jb push sbb lock fmuls lret in js sub (bad) (bad) out das cli bound sub cli sbb inc (bad) xor mov outsb mov into adc jl std push shrl xchg insl mov or mov roll int3 mov icebp adc pusha xchg icebp out and add add add out lea shrb mov push xchg arpl push (bad) mov mov jb das sbb adcl lock pop add scas lea popa scas xchg out push das jae jmp mov (bad) insb jns xor dec jb or (bad) roll fdivs je or into xor dec add scas out push stos sub pop dec insl (bad) mov aad mov jbe (bad) (bad) mov sti or mov cwtd inc xchg xor (bad) cs add dec scas mov jg sbb insb into or add or sub adc loopne cld test pop mov rol stc jecxz rcrb jns daa in adc in pop add scas sarl xor cmp mov mov fidivrl jb mov daa mov mov xorb push push mov js xchg fcmovb (bad) dec mov xor add add stc std lcall dec popa add add add add jp jo jg mov xchg pop (bad) ljmp addr16 xor lcall (bad) mov sub popf sub push ljmp add xor hlt push xor loope or mov cld test mov mov lods stos in dec (bad) cwtl mov push mov xchg jae in xor ljmp enter or shl jp loope ss into rcr dec in adc vpshab add add add add out aam sar ret push outsb adc dec negl pop mov xor and sub loop and and enter lret test outsl push mov int in jp,pn push pushf cmpsb dec and push clc (bad) jl es push pushf jno or mov cltd leave mov mov sub dec fs jl mov pop push lret add push fistp dec outsl cmp je or and add add mov ja adc and jg mov pop push ss cld dec inc into inc mov (bad) imulb call mov cmp repz jmp adc inc xlat out pop jp or add (bad) jge cld push div outsl leave dec pop cmp inc push popa (bad) push jle mov jmp sub (bad) mov (bad) dec inc cmpsl sub ljmp out jne jns xor inc or push adc add add add push mov int fwait lock cmp es mov add add xchg xchg push call aas jg imul sahf popf (bad) jo cmp mov les sub ret stos fwait jnp jle dec pop sar pop xor pop jbe add cmpsl pushf imul jnp adc or cmpsb sub cld mov lret arpl sbb aam sub push mov xor xchg mov add add add add sbb pop sbb and mov dec orl xor int3 inc mov frstor shl xchg mov xchg mov (bad) ds xor pusha add lret lds rclb mov jmp add test sbb mov mov cld inc iret inc or sub lret ficomp mov jae in cmc bound mov xor (bad) rolb push loopne add popa int3 loope add pop rcrb or push loope dec jl ljmp sub ja lahf outsl into (bad) mov in sub loopne scas cld clc mov ljmp daa insl jo cli and jae nop mov repnz fiadd pop xchg icebp (bad) sub sub push add push sub (bad) imul adc cmp std or popf (bad) (bad) sti mov lret iret lret mov add add inc and (bad) loop push jb jnp push xchg inc push pop dec add outsl lahf sbb repnz daa lds mov lods fildll iret and imul mov push subb loopnew test lcall jno xchg mov fbld loop push inc add subl pop sbb lea ficom push scas adc div movsl cmpsl push push xchg incb mov and ljmp mov add add add push outsl cmp lahf mov sbb test push (bad) (bad) sbb loop cld into push (bad) sbb cmp ljmp dec mov inc sub xor cmp cld addr16 test jb cmpsl bound iret push dec sub sbb stc or int3 xor je push sbb or (bad) jle push sbb fmuls leave popf int3 fcomps push jb flds add add add add xlat aad fcomps add push pushf adc in mov and iret cltd sub xor test andb sbb jne dec jg dec pop or jno fisttpll dec popl push cltd inc loop pop pusha push fsubrl xchg cld or loopne lret mov out loopne mov clc pop or xor or xchg andl mov or sbb add add inc mov popa sti or cld jl push in mov add add mov or dec outsl rcrb mov (bad) and and jns mov mov in and add rclb ds xchg adc dec pop adc mov stos mov pop sub loop dec or (bad) sbbb inc jmp pop jno mov cmp sbb xor insb sbb sub sub in add add add mov cmpsl pop std inc aam jnp cli test push clc (bad) fildl dec lock enter div test dec jnp mov xchg sub lock inc das xor and mov std push clc outsb lcall xchg cmp loope inc mov xor (bad) xchg lcall jbe xchg jo cmp pushl adc push cmp std adc jp,pn and jae int arpl mov or daa sbb or adc dec lods mov lcall add add xchg mov adcl xor xor dec add xchg adcl insb sahf sub subl xor cmp rcll movsl test cli stc lcall jp add insl jmp inc inc pop push lods das cs add ds or xchg in xchg loope lock mov jmp inc push les push lcall imul test (bad) fs inc or pop iret test test add add (bad) mov and pushf pop cltd lods mov fcmovne in sbb ljmp jg clc mov pop repnz ficoml mov push push inc pop in fsubs jne (bad) sti xchg jno pop js enter jge popw adcl cmp ret lods insb mov (bad) pop loopne sub push xchg (bad) pop push aas je cli push sarl cltd roll scas mov xlat (bad) and out push (bad) int xor add add add imul cmp jae rcrl int3 jl xchg xor mov ljmp rclb inc (bad) mov jns xor or lahf cs aam inc sub rcrb hlt jbe xchg div in inc adc mov cmp sub sub push mov stos sbb stc arpl movl out dec mov jg mov fwait jmp mov ds sub or push lret addr16 add add add add enter aas sbb and pop lea xor mov fnstenv lods mulb xchg xchg jecxz dec xor (bad) ja sub inc pop les inc ds int jb inc xchg loope iret in arpl adc insl mov cmp fld adc (bad) outsb in outsl xchg insl stos add xor cld (bad) mov and aas add ss popf repnz cmp add adc jge decb add add add inc mov clc sbb mov or sbb lea pusha cltd add dec or cmc mov sarb fmuls (bad) aad mov rorb ja adcb in int scas jns leave and inc imul add adc sahf cmp sbb out add push xchg daa test les push mov push xor rol jmp insb adc and or pop test and add add clc sub lods icebp aam cli xor das xor push insl ja sub lahf mov mov mov mov ret xchg test stc and cmp xchg xchg xor fidivl movsb loop push mov lret xchg xchg adc and rclb xor outsb aad pushf js test sub movsb ljmp mov add stos lock cltd enter push call in orb and add add add add lock xlat clc nop arpl les jns push cmpsl movsl and or icebp or outsb push xchg ss nop mov xchg scas cmp roll xor fldenv adc mov call addr16 dec inc cmp pop test lods push bnd mov mov sub fcoms mov (bad) scas and xlat or inc shrb adc or push and mov scas pop push cmp add add add ffree lods fmul aad lock ret std ljmp push cmp xor ss lds inc mov jnp into fdivrs mul test sbb ja orb out test push enter stos mov outsl cmp fs subb stos or (bad) mov aaa in mov dec cvtps2pi lods jp mov mov jle les test push or add add add push mov ljmp daa xchg pop rcll ror fnstsw int3 scas vpor inc dec cmp mov jb cmc cmp sbb xor mov mov (bad) mov mov jbe (bad) and adc xchg push push add mov andl cmc lcall or inc ljmp mov out cmpsb enter and hlt jb bound sbb mov sahf lcall add add add add sahf push cmp lods adc (bad) xlat jp lods sub adc or fwait (bad) insb ja,pn mov lods cs es adc stc jle sub stos cmp out cld xor lods pushl nop arpl das lock xor dec rolb or rorb xor adc xchg lret test jle pop stc inc repnz cli dec xchg movsb adc mov sbb clc and push loop dec flds add add add add pusha into (bad) inc int cmpsl ror lcall adc mov fnstcw mov cmp negl jp imul sbb lods sub rcll push jbe or push mov adc xchg sbb in add inc pop ss sub sbb cmp xlat inc push sub out mov adc mov (bad) aaa adc mov push and call cmp rclb add add add add aas pop mov mov dec stos popf fld jecxz mov test mov pop (bad) adc je cmpsb movsb mov pop or add mov insb push xchg or clc push nop jne xor rolb pop scas cmp xor dec repz lret xor adc insl xor mov pop incl (bad) push mov lock cmp jno or (bad) dec add dec adc adc mov movl add adc sbb pop xor icebp xor pop xor cmp repnz pop out aad mov inc adc mov sub add pop out popa (bad) das xchg inc (bad) lret fcmovne pusha sbb fdivrl inc add lret jns xchg jge aas mov cwtl outsl std imul cmpsl mov jp add scas cwtl adc (bad) jmp hlt je inc int in xor or (bad) shrb jo add adc into and int fmul lcall lock mov cmpsl fldt mov cmp dec fadd fisttp xor sub aas loop xchg test mov insl cmpsb out lcall imul xchg lds adc mov bnd cmp lea or pop xor fidivl test jmp jl sub scas movsb push (bad) jb xor out aad movsb pop jle call add sahf and lds cmp scas sub repnz or sub ds pop sbb or and push outsb sbb add sbb push push stos fdivrl mov mov xchg jae xor movsl pushf xchg and lock pusha xor bound ja outsl add pop push inc push mov mov lcall dec push loope les push imul jmp or mov add add add arpl sbbl pop aad in ds jns sbb sbb or popf cmp pop push xchg sub mov dec xchg pop xchg xor popf data16 insl es dec dec lahf int jmp lahf jns lea in cld aam pushf pushf pop lods sub movl call arpl xor das hlt ja jb mov fidiv mov bt xchg leave sti addr16 insl pushf pop push or add add add and ret ficomp aaa jp sbb or mov mov mov idivl xchg lcall fisubl mov (bad) out mov lahf hlt sbb stos add (bad) scas (bad) push cmpsl xchg jo in (bad) or mov push ffreep cmpsb mov push cltd ds popf mov out ror jp (bad) outsl pop loopne adc mov dec pop imul xchg jmp jecxz ds and add add add in icebp out enter (bad) nop cs add ror push push mov jmp idivl and pop sahf fdivrs in add jne popa add sbb jb cmp ret loope ret dec fildl push push jo (bad) cmp les mov mov imul gs inc sbb int jns mov mov stos (bad) jnp movsb or lock sbb xor outsb loopne ljmp je shl add add add loopne cs stos ja adc jnp int3 rol inc aad nop xchg add and lahf dec lods inc lret pop adc fcoms fidivrl dec fisttpl js push mov (bad) fs loope mov cld pop mov loope cltd mov jmp jno movsb in cmpsb les xchg ficoml into rol pushf push pushl or jno mov or add add add jl std adc insl shl (bad) pop imul mov int3 data16 daa mov sub cltd cwtl sbb dec gs out popa pop dec cld dec pop push jecxz dec cmpb pop sub pop les mov ret mov dec pop cmp mov inc pop jecxz fldcw je sbb xchg or test and jmp js xchg enter out jg movsl jp add xchg popa add add add add (bad) jmp das and push sbb inc add xchg rolb clc sbb scas lret xchg (bad) into enter cs sub stos mov mov idivl push je fsubs dec pop ret aas outsb in ret add cmpsl adc and dec sub and ret out lcall push sbb movsb and aaa es repnz lcall push lcall or pop scas add inc sub mov sub mov or stc mov test inc arpl (bad) sti out cli mov addr16 outsb ret mov sahf (bad) loopne repnz inc pop ja sbb ss mov lahf jge ret xchg in (bad) and sbbb mov test dec andl pop leave mov adc lock nop pop push mov and lock sbb add add add (bad) or insb in or inc aaa push shrl jnp fidiv dec pop jno test xor outsl fyl2xp1 dec sub outsb or jg mov hlt int3 nop push mov cmp decb les fildll push cltd aas dec dec nop jbe pop jo out sbb out clc and addr16 mov in mov sub inc jge divl frstor pop xchg shll inc lcall bound sar inc add jns lea add add add fmul push jae scas addr16 ror xor push and popl cwtl cmp cs xor sbb out pop sub mov ja imul xchg dec push dec push negb jne push std add sti fistpl cmpl mov mov pop push daa mov cmp shll out jne stos lea icebp outsl adcl adc sub test (bad) in jo shrl ljmp cmp add popf aaa push (bad) and out inc mov in (bad) fwait iret adc js addr16 cltd sub xchg mov (bad) and inc mov rcrb pop aas icebp or cltd inc roll or jg stos push push hlt lods inc in and sub lods in cld fnstsw lods jecxz inc push insl xor jecxz or push xchg xor ret mov push cmpsl movsb sti jno and xchg (bad) pop pop pop mov (bad) (bad) mov imul movsl mov in test xchg imul lret and arpl (bad) cmpsb popf xlat adc out or rolb pop mov out mov ljmp adc nop dec mov mov adc out or loope pusha xor js push push or adc add cmp jns std jg fnstsw and pop outsb pop add lds sbb xchg ret out add add add hlt call pop cmp cli cli inc xor and je sbb notl add inc ret call xchg lahf sbb insb outsb fs fistp leave jb push les mov data16 mov adc sub repnz in jmp mov push pop (bad) in rcll nop push push fisttp and sbb sbb mov aas lods jne ss pop cmc jmp mov (bad) mov push scas ds push mov cmp add add add imul jo mov sub mov in ret pop mov stos test repz int3 dec cs mov in xor push pop pop dec pushf call inc sarl int3 dec bound and and dec jo fstl aas aaa insb pop (bad) pusha cwtl dec adc hlt push outsb push mov push (bad) pop ret cmp test xchg dec loope std insb std xchg adc mov add add add outsl mov aaa scas pop mov loopne inc inc push jno cld dec jo lea daa aam xchg jle lock pushf inc inc jmp mov fwait xchg mov xchg ret dec lock jnp sub mov jbe push das inc test inc lods aas clc lahf adc lahf mov jns pop fiaddl cli ja xchg jne out imul loopne sbb jg ds mov xor icebp mov push addr16 adcl ret ljmp mov data16 dec popl je mov add (bad) movsl jae lds out pusha inc outsb jb or cmp lods sbb xchg mov and push push inc aad clc clc mov out iret xor pop xchg pop mov or jle in nop mov pop sbb js or int lds popf lock jb or xchg aaa jge sbb (bad) push stos cmpsl xorb push dec mov shll shll push push sbb test sbb or add add add in lahf mov xor inc outsl adc mov sub pop xor (bad) aam (bad) outsl sbb mov lahf xchg pushf aas fs mov add sub cmp sbb push arpl sub (bad) popa das jne push lahf push arpl mov movb push popf mov inc xchg mov ud2 inc adcb jg xor mov xor fdivr popf cld inc pop pushf jecxz or add add cli loope lds test int3 mov sbb sbb jo addb test hlt enter mov movsl popf in outsb adc test jl add mov loope call xchg lea xor mov mov mov jle bnd lcall int dec orl pop jge push mov movsl xor lret pop pusha (bad) jp ret lahf clc pop inc setl add add add sub xchg fsubp std mov imulb popa cmp jno je rcrl mov push jne xchg mov insb cltd je shrb mov mov and scas jp mov pop jne aaa cwtl mov inc xchg scas popf es inc xchg pushf pop cmp mov dec repnz lds cs fidivrl mov and dec lods mov lods fiaddl dec sbb sti (bad) test mov mov xor add add add cmp addr16 xchg push jno dec mov sub xchg dec xor jg stos outsb int3 jns mov sbb push inc fs jns add push jo dec and dec fstpl into xlat outsl sub xor inc aas aas lock hlt pop inc in cmpsb lods mov dec addr16 dec (bad) xor jle xor xchg adc lods push mov mov jae dec adc xchg loopne xor fs (bad) call dec xor add add add push and pop dec jecxz or xor mov (bad) fwait fs mov inc inc cltd sar dec pop xchg cmp cmp in push add sbb or sub pop out jmp push out xchg mov mov push aam dec adc dec mov aas jno,pt add and mov in push repnz push jnp pmullw rcll jge aas lret cmc hlt in add mov sub (bad) xor jb sub dec adc jbe dec add add add mov inc adc xor lret mov mov inc xor jae lcall les adc out jg std xchg add (bad) lods dec and data16 mov outsl sub in sub mov xor aas leave inc out popl aaa and out sbb sar jmp arpl sub or or pop lock cmp cli push aaa or jp cmp movsl adc mov jo mov xor add ljmp xchg pop popl add (bad) push push or rolb adc jecxz sub jnp into inc lea dec xchg sbb decb hlt mov rcl shr out addl lock inc in fiaddl push pop mov mov sbb rorb jmp mov cwtl sub sbb xchg and xor sub cmpsb fsubrs sbbl add add or dec adc dec dec inc push outsl loope in repnz inc rolb or adc push adc push popf cmp gs add sub jmp mov dec imull and mov add dec pop sub dec sub int3 shll ret loopne out mov popf out push int stos and dec fistl or xor add add imul subw xor xchg fnsave adc push addl pop sub xchg push sbb lret cmpsb sar outsb ja adc mov in push push insl loopne ret sbb cmpsb hlt lods xor cwtl xchg mov add cmc and loopne (bad) arpl jno mov (bad) ja test dec (bad) in out inc pop mov or mov test adc pop popa sahf jecxz insl int3 pop add movsl cli outsb xchg dec fwait movsb aad sbb add add add add jne hlt inc ret clc aam sub jnp fistpll or loope jle pop sub mov std rcrl int mov xlat fbld adc jnp mov rcrl jae jmp out dec out jns out clc adc jl push push pop adc jbe cmpsb shll push add xor dec es aad adc inc cltd call lret ficom lret movsb popf mov test je xor push cmp stos sahf out jbe adc add add add outsb cmovno push jl mov push jl or outsb mov in mov mov scas push jecxz push loopne mov mov pop scas jae cmpsb xchg sub cwtl inc out in push jg mov cwtl xor jns cmp mov int3 lock loope jns jb (bad) jae out lret mov shrb and fucomi mov adc leave leave sbb or lcall sti jle imul or pop gs push (bad) idiv xchg xchg add add add pop int3 repz lret push mov mov xchg jno sbb cltd pop or out xor mov lea push mov (bad) xchg cmp ret jbe (bad) pop xchg xlat and sbbl sbb fsts cld popa jae addr16 mov ljmp lds mov mov sbb fcomps in js cmp out push test xchg dec mov jmp adc inc sbb adc (bad) cmp add add add add xlat repz jno inc loope test mov cmc repnz clc into iret popa push sar inc lret js das jne (bad) sahf ficomp xor and xor dec add (bad) iret push movsl xchg cmp out and ljmp xor fisttpll xor push push fiadd sahf mov adc mov mov cmp into lods sbb pop mov jg imul pop imul add add add add sbb or (bad) icebp cmpb mov sbb lock inc lahf xor lret cmpsl push sbb cltd and cmp xchg pop outsb lret add int3 (bad) mov sti add add xor dec mov aad jno in addr16 aas jl mov xchg add rolb fistl sbb test scas inc pusha mov and ss jecxz sub xor mov xlat dec mov xchg stc push test pop push iret idivl add add add xor or call and hlt mov jp stos dec or dec (bad) mov sub int3 and pop mov arpl add dec pop jne jno cmpsb lret mov dec mov and mov std dec pop repz ret pop sub sub addr16 rcll xchg sbb iret movsl inc imul add push or push jl dec ret fcompl and mov nop fwait push pop mov das in dec in push out add add add in pop ret in js jae (bad) imul les xor (bad) roll adcl cmc push mov sbb nop pusha pop fldcw adc fwait push mov ja mov sbbb les bound inc xchg mov hlt push lahf scas inc mov sub scas clc stos imull mov sti aad fdivrp pop sbb rolb and shlb xchg inc push (bad) shrl jb fiaddl add add add cmpsl cwtl cpuid cld mov add jg adc inc inc push or repz pop out pop jb lret mov push dec jge (bad) in jbe sbb dec xor cmp stos imul lea loop jmp adcb or push inc std and xor sarl adcb addr16 mov lahf xchg divl adc imul push stos adc data16 sbb fdivl imul addr16 add add add inc test or pop inc jge (bad) mov push cmc aam inc add out pop aad out jno inc (bad) addr16 mov push fcompl popa jg outsl push data16 je mov cltd add out test lea and int inc and pop sub dec or imul jno adc xor xor or ss fbstp aad loopne jo lock scas clc pop fdivrl cmc xchg mov xlat dec mov dec inc jmp xor add add stc cmpsb (bad) lods inc andl jmp int cwtl push lret xchg js mov aas lret mov or in dec mov es in push mull sbb xchg add (bad) mov sub loope sub jp xchg sub hlt mov cmpsl mov and ljmp pop roll or (bad) lea loope jg orl mov shrb push cli push and lods (bad) inc mov xor leave push lock and xor or ljmp dec call push mov rolb dec mov (bad) mov shll jg jbe mov jb jbe or rolb inc mov negb lea xchg xchg (bad) (bad) pushf sbb popf mov xor js xchg outsb pop bound (bad) or sub ds jle insb nop cmp or add add add add (bad) decb test lret or in xchg jecxz cli sub lret and lret push add push test sub inc inc dec adc sbb in jb xor fnstenv sti xchg jmp popa inc push bnd inc mov sti mov dec dec shlb or inc and and neg pop push push xchg pop mov (bad) add dec movsb jle das mov sbb cmp push add add add and jb xlat jmp push sub loop xor mov or jle push stc add out daa and ret sub sysenter mov and jb popa xchg push dec shrb mov sahf jmp popf out repnz mov movsl dec cs adc cmc test mov cmp lds rcrl into inc cmp scas cmp cltd xor aam mov imul cmpsl pop push fidiv (bad) repz (bad) inc add add add add add dec sarb fs pop pop call inc cmp add sahf (bad) pushf inc jl xchg lret push jns iret sti mov pop scas mov mov sahf ljmp je xchg pop mov cmpsb ljmp imul pop (bad) sti in std (bad) sub jecxz add xchg xor dec std cmp (bad) pop out scas fnsave std cmc fidivr inc pushf mov lds ret and (bad) xchg xor add add mov (bad) gs add mov (bad) outsb test pop mov jno push jbe test clc inc xchg aas adc hlt int3 (bad) inc lock lcall add fs mov inc add xor mov test lcall mov sbb jo in mov (bad) mov nop aaa (bad) es xchg mov mov cmpsb loopne iret adc pop jne loope (bad) xlat adc xor popa fdivrs add inc add jle add xchg inc or inc icebp inc (bad) xor sbb es xorl dec les pop lock dec mov fadd push leave adcl push xchg push cmp push ficomp mov popl lahf cmp aam or sub (bad) xchg sbb jl int3 mov sar dec je dec jg test xchg (bad) jae pop (bad) jae xor lret add add add mov outsb pop jmp jg dec fwait in sbb xchg fnstsw jl cmpsl inc aam pop dec ret test nop (bad) jnp jl mov out mov aad fimul adc mov push sub popa jnp mov pop mov push sti in dec sbb pop xchg mov (bad) push out pop pop in enter jno xchg jbe jno pop inc sbb mov and aad cmp lods xor add pushf test add jge mov xor mov in fcomps mov jb sbb es aam inc aas ret addr16 ret out repz inc (bad) jno jle mov sahf lcall movsl data16 dec arpl cmp mov lahf mov inc jo and sarl cli push adc push cmp hlt mov xor adc imul xchg adcl sub mov bnd xor sar (bad) mov add add inc inc inc outsl rcrl nop xchg push jne out scas out jecxz repnz xchg clc xchg and xor or das add (bad) nop jbe jae cli or fsubs adc fildll mov or (bad) ljmp fcoml les sub aam xlat or out mov fwait testl rorb addr16 je mov cmp adc lret pop lahf cld jp sbb cltd push sub add add addr16 jbe in cmp lods decb mov fcomps dec call sti and jge push mov dec or pop pushf sbb fsubl rcrl jp xor dec imull inc mov or aas push mov aam mov std mov inc sbb sub mov cmp add sbb cwtl cmpsl cmp scas mov (bad) adc mov idivb inc cwtl lret adc pop fs cmp addr16 (bad) fsts movb add add les push and lret mov sbb dec aas mov xor inc cli sub mov (bad) or pop imul or hlt jnp or adc outsb sti lods add xchg fcomip es jae xchg add popf orb (bad) outsb popa mov scas jle test sub inc pop scas jne in mov mov pusha dec ss loope pop lcall test jbe sub (bad) jbe lea push sub add add scas dec jae into lods xchg inc mov push aam scas sub decl and subl adc xchg out aam flds inc insb std psrlq dec js test jp jmp push add mov jge mov std ret daa (bad) fnstcw jno adc sbb mov rclb mov in push cli mov fnstsw jae or mov shl sub shr sub sbb int3 pop sahf push add dec inc dec test pop add add add ja mov inc ja mov mov sbb mov imul xchg in fs adc aad (bad) stc jg xchg and ss cmp cmp mov cmc mov pop or xor xchg dec xor cmp aam out sbb jnp popa mov jb out addl sbb mov jle and fisttp icebp lds xchg adc mov add dec and sbb mov call inc xchg sbb lcall aam push int3 push push lock lods jnp mov mov fs jb inc loopne mov lods pop jo stos and jae rclb mov xor cwtl xlat xor push mov mov adc out push jbe xchg iret test pop shlb nop ret adc and pushf mov roll lea push and int3 and test xchg clc loope inc add cmp jae test push mov fidivl fwait cs (bad) leave jle or loopne test mov aam out (bad) sbb mov inc call fidiv inc mov jg les and push push (bad) mov push xchg push sub scas pop inc in (bad) loop mov in jmp mov cld fs dec rcll mov neg jbe cmpsb push or add add add aam aas inc outsl jae mov mov movsl out dec add mov or sbb add xchg mov dec (bad) ret jae sbb dec sbb data16 sub insl mov mov xorl pop push pushf stos test cmp incb cmp push insl inc lcall inc inc push fsubrs gs mov jle mov mov into daa ss pop aas pop add push and add add add add aaa sbb inc sbb add sub xchg test xchg xchg sub pop cmpl xchg imul dec xchg pop and sub xor adc pop out cmp loope lret pop loope dec (bad) (bad) repnz loope xchg jle xchg push pop xor test fsubrl lods jnp popf dec mov or jge push push (bad) ljmp hlt outsl paddq loop jnp push aas jnp out inc cld icebp dec mov fs mov xor mov movsb xor adc test movsl xor pop loop mov jle imul jg inc pusha cmpsb sbbl into roll rorb jge inc les out xchg add mov cmpsb inc dec pushl (bad) pop cmp movsl clc sub mov lock inc (bad) cmc dec sub aam fdivrl rcl mov add add add or jl push idivb ljmp stos ds icebp ja xchg jg shr push mov inc lcall (bad) or adc data16 mov imul jge xlat cmpsl cmp jb aas idivl leave mov mov shrb push dec lcall insl mov jns mov pop addl dec mov ss jo in (bad) jge xchg dec aad pop xor popl add add add add inc jnp xchg (bad) jne sahf xchg mov test leave lahf cmp xor push inc neg loope dec loop rolb (bad) xor insb enter pop mov fdivl xchg and push cld pop lods shlb cmp or repnz bound dec lds xchg sbb xor adc paddusb jno cmp movsb pop mov mov dec xchg dec into loop stc cmc loope cmc mov das fwait ret push add adc add add add lods mov push nop ja dec mov lcall faddl add gs fdiv pop into orb sub cmpl ljmp cltd add (bad) inc pop pop stos movsb dec ds popa jmp popa imul enter lods xchg (bad) leave rcrl outsl mov test fldl ljmp xor sbb add dec inc cmpsl xchg (bad) jno fincstp xor push mov push outsb mov aam fs ja mov add add add add adc sbb adc pop sbb (bad) test pop jecxz js mov (bad) out mov dec mov ljmpw inc popa imul sub faddl sub xchg mov cmp mov cmp ja add arpl pusha xor mov fimull cmp int3 pop inc sub xchg lock inc mov inc xor mov sub icebp icebp dec sbb and bound test das add add add icebp (bad) push adc pop and or in imul inc dec ss fwait pop call jl push daa or mov push bound in xor pop pop stc out push std push loop ljmp inc adc imul add jne sbb xor out pop addr16 out inc scas mov out jmp ja sti sub cltd pop and loope mov out adcl (bad) mov push out cltd flds add add add add mov je pop or inc mov enter add jno out incb cmp inc dec cltd sti nop mov dec push push adc imull xor shrb les jge ret jno pusha lods movsl xchg and (bad) xchg sbb push xchg in fcompl and xor in (bad) cld lret jecxz insl sub dec cld inc push lret xchg add adc ret mov mov lcall dec std jns add add hlt imul adc and rclb pop (bad) (bad) mov mov push repnz dec mov jecxz inc bound movsb jae xchg jg fcom jns test xlat in out test xor enter mov aas ret dec and cmc pop adcl popf pop ret data16 push and push fldenv aam adc cmp insb rcrb jbe cmp pop repz cmp mov jge xchg jno add add add in int add lds js pop inc fild adc (bad) int3 push xorl xchg movaps or lret lods push shll mov es mov cmp test add or ljmp aaa pop lods imull pop xchg fsubl (bad) push outsb cs sbb dec repz js shrl scas sahf mov mov (bad) scas fwait xor std leave lea jg repz in xor test add add sbb sub test inc loop push sti adc leave movsb mov jo sahf enter je aaa (bad) jp push clc scas orb aad mov rcrl mov test aam xor cmp arpl or mov adc cltd andl mov test movsb outsl sti lock jle arpl (bad) gs inc fucom and pusha or mov repnz das lds jg add add add jmp mov lods bound lock add pop adc or cmpsb arpl sar call lods mov pop pop push jg jmp mov push fwait pop mov mov aam aaa inc pop cmp fwait adc xor push imul sbb xchg cli xlat add hlt cltd jno and xchg outsb rclb mov pop xor loope or enter cmpsl ret sbb out repnz mov out lret add add add movsb fcoms std push and mov fsubr jno inc and cmp test sub pop loope lock xchg jecxz faddl outsb incl add add stos mov into mov insl imulb in mov enter xlat sbb dec notw in mov out test insl icebp push lret xchg dec iret in or hlt into ret fistpll cmp dec mov sbb sbb xor sbb out pop push sbb mov pushf fwait sbb aas jmp sbb xor mov pushf into sbb mov addr16 jecxz daa loopne push push or jb sahf add pop xor push xchg aas (bad) push arpl in sub nop mov int3 dec bound jbe jmp mov popa movsl daa fnsave insb push sub adc cwtl adc fdivrl push cmp xchg or lret jl dec pop sar push rol push into andl orl lods stc push mov sbb add add add push (bad) xlat mov (bad) xor mov imul repz jb in and ss fcomi outsl pusha inc out lods push and mov cmc mov jae pop out ss (bad) mov cld inc loop pushf adc (bad) mov ror xchg fs jle fsubrl call xchg pop xchg stos out loop sub fidivl sbb lock adc mov (bad) mov jle pop add xchg jbe lcall add add add addr16 das xchg aam mov test cmpsl mov cmovl fidivr sbb ret xlat xchg sti (bad) aam imul aaa sbb repz or ret pop inc dec dec pop pop jge push test xor arpl or and stc hlt out jmp dec and adc cmp insb xlat sub mov cmp in sbb (bad) repnz aam mov mov test jbe sbb jno scas xor mov inc fisubr push mov and dec cmp or dec int gs or fistpll fstpl pop sbb xchg mov lock jno enter neg outsb loope sbb test add mov or (bad) je in loope int3 out (bad) cmp not notb (bad) mov or jecxz cmp iret (bad) fstpt test inc mov add add add mov or push ret cs inc mov call push dec aad add sub int cltd int mov punpckhdq pushf jne mov adc jecxz nop int mov sbbl mov sub test mov pop mov cmp test rdpmc mov lock pop ret subps test xchg test pop insl sub sub cs into inc in jnp add add add add sbbb test insb aam scas jb clc adc mov movsl cltd pop pop addr16 and xor sbb dec cli jge jl popa popf cltd lcall dec jae mov loop pop xchg or pushf aaa mov jecxz syscall jb stc sbb mov mov (bad) loopne jnp js sub xchg inc test in imul sbb in outsb cmp aaa insl loope inc lret jle push and scas push bound xor add add jmp sub test fsubs jns add push lret das sahf popa lock daa xchg frstor daa lods gs fidivrl (bad) cmp dec cli or movsl pop cmpsb inc fisttp stos add imul leave lods push popf cwtl (bad) xor adc mov in loopne into inc leave outsl test or lea adc push loope pop mov in (bad) dec xchg incb jp push push pop aam add pop hlt inc or adc lcall add add add mov mov aaa sbb xor xor (bad) mov popf mov leave or lret data16 fidivl in sub sbb (bad) cmp push dec mov fistpl sub data16 sbb lcall mov pop sub cli mov ljmp cmpsb (bad) pop fstp stc sbb xor inc mov push imul sub lahf scas pop or mov add add add add sub clc jns in mov push lcall and js out or imul repz repz rorl stos mov push sbb push mov jmp test (bad) (bad) std sub lret push addl int faddl test xchg loopne fdivs add mov lods les je sub xor jb dec mov sub cmp pop pop dec fidivrl inc stos test add add add add jecxz jb (bad) mov inc arpl lock lahf in push sahf rorl cld mov xchg mov adc movsb jb sarb ds fbld es xor pop in push lcall fwait js and sti imul not mov xor test mov sbb cmp mov negl das lret aam int3 jns cmpsl jmp dec add jle pop dec fs in (bad) fisubrl xchg xlat int3 pop rolb add add add lea in sbb popf test xchg push jmp push popf push xor inc xchg sbb mov jne and mov push jle and mov cmp or frstor jg insb out lds jo lret add fs add mov pop cmp pop fidivl insl add jg push mov hlt inc adc ds std jmp cmp nop pushf test dec cmpsl es dec pop and flds or call add add fs das movsb cmp mov mov xchg dec fistpl cmp add push sbb jmp aas sub and mov mov sub mov adc ftst xchg outsl jg sbb jns lcall outsb fs test bound dec fucom and rclb aaa push push and push in repnz ds adc mov jmp jnp mov stos inc ficoml add add mov adc pop xor loopne hlt jb jg es mov ret adc add xchg repz or ficomp out dec jns xchg (bad) stc pusha test add cwtl and xchg in daa mov (bad) lea mov jle adc or (bad) mov enter mov jne xchg mov arpl imul jne clc jmp or push shr addr16 test pop nop sti pop inc sbb add add add clc shll aam mov jne into push decl xchg dec faddp out or push jae (bad) jnp js fisub mov mov fidivrl mov movsb add mov jl idivl insb stos push or hlt fwait xor xchg fstpl fs xor test or pop pop pusha jae int lahf enter mov (bad) notl push and fidivr mov push cmc pop lahf add pop xor sbb inc cltd cmp arpl mov fwait popf cli or ffree xchg gs fsub aam lahf scas mov pop arpl cmp pop into sbb add xor push rolb sub mov aad bound stos lock mov imul in xchg int mov inc inc sbb pop movb popa mov mov sub xor imul (bad) in insb cld inc in test or bound add add add add inc rorb (bad) loope mov pop xor movsb dec mov cmpsb rol (bad) jne leave cmp push out xor sysexit pop push cmpsl (bad) (bad) push arpl xchg ficompl jb fisttp out cmp es aam pop xchg or mov xchg ret es sti mov loopne lods (bad) jmp popf aas (bad) jae sbb gs fisub add sub loop test dec cmpsl test or ljmp jge pop dec repnz pop mov xor or pop jns arpl test adc sub add sti mov adc inc push mov cmp lods xor adc jmp sbb popa imul imul and outsb sbb inc push adc push ds loop test insl das mov dec hlt jl or push (bad) ret adc in fsubrl adc rorl adc cmp fwait repnz jnp (bad) hlt mov pop (bad) cwtl out add add add enter es std je dec arpl pop xchg mov idivb shlb sbb lret xchg xchg (bad) enter inc push frstor pop dec lcall inc pop (bad) call push adc fidivl mov push push cmp adcl xchg cs push in sbb push lods lods popa pop push pop push mov sub jp jns adc mov nop jle add add add movsb pop inc (bad) mov push jbe in jle sub pop inc int3 data16 push addr16 fcoms call or out mov pushf push jbe add fwait push cmc (bad) jo mov mov dec add mov gs push adc in mull cwtl out xor test sub daa add and mov sti les add sahf adc sbb add add push adc das test mov (bad) dec mov (bad) cltd scas clc ja (bad) ja push (bad) sbb mov lea xchg sbb icebp (bad) sbb mov sar paddw mov mov push mov fdivs jge lods xchg divl sub inc inc sti fadds (bad) cmp push or (bad) sbb test or inc inc xchg jmp movsl rolb lods mov lret repnz test cmp loope mov add add add mov and into fcoml frstor pop bound rcrl jne push in jns or mov sub lea pop ret mov pop mov sbb or int add test je adc aad pop mov call fisttpl xlat adc or push xor popf jmp inc pop rol (bad) gs das mov std in les ljmp in out mov out arpl jbe adcl add add add js cmp xlat ljmp add aas sahf xchg and push xor jns adc ds xor jne (bad) cmp enter adc vmovsd and jo sub aam dec pop stc xchg dec dec mov push movsb imul push es push sub push add pop aam add gs and (bad) xor js sub pop (bad) pusha cmpsb sbb adc jnp ljmp lahf fwait iret repnz xor add add nop or inc imul pushf dec ret mov div enter pop adc sar fcoml mov sbbl mov pop push lahf fisubl push adc push sub jbe (bad) inc inc repz xchg (bad) cmp cmp cltd loop loop jle clc pop (bad) jbe fiadd fiadd aaa xchg xlat in pop test or or mov inc mov das push jecxz and sti cmp add add add xchg xor sarb enter inc add xchg jle movsb fist ja push sub jno sub xchg bound lock ja inc mov out and fcoms add inc mov fistpl mull mov mov cltd cltd push adc and aad jne xchg clc push das out mov into bound mov ficomp mov arpl xor adc add add add add jge add cwtl js pusha mov loop ror rcrl add imul push mov fldl sub xchg mov data16 test mov movsb mov mov iret xchg push inc cmp and (bad) lcall xchg dec and lar das lret call paddq cmp mov jmp jns iret or dec adc sub push xlat popf or add add add insb inc xchg aas lods cmpsb xor and mov push mov pop int repnz and or xor lds scas push sub in cmpsl cmp fstp lock pushf mov inc xchg jno pusha cmp inc jmp jmp add sub mov test add xchg or jns sub ret xor ja test fnsave mov cmc lock push test aam mov (bad) add add add add sahf pop arpl loop fwait nop cld bound cli sub loope gs dec dec (bad) pushf loope arpl inc mov add and pop push out add push inc sub mov push into (bad) mov divb dec js,pn adc stc mov out adc push lods jne lods hlt nop push push mov pushf mov mov int mov ret stc xor out inc xor mov pop icebp movsl dec xor es sub add add imul push mov adc mov push gs xchg in sub sub mov xchg fnsave push or les mov mov pop lods rolb push or lock jnp jp scas out mov fistp sti push (bad) pop inc and jno mov sti add getsec ja mov sub pop frstor stos sbb test push xor jle jle call fbld mov scas inc insb xlat dec pop je das add cmovg ja or ret or lcall jbe and xor jl mov fisubr (bad) mov dec dec mov push add inc xchg pop sub (bad) sbb jl mov lods push or inc (bad) (bad) outsl mov (bad) lock out jge cmp mov arpl mov cmp in jo fdivp bnd sahf mov and add out mov addr16 sub adc ficoml mov add add add imul mov push out loop cmp cwtl pushf add mov icebp out sahf (bad) (bad) std fstl lods cs mov xorl sar push rorb mov push xor xchg push mov jmp push push jp pop pop push subl mov rol mov fs sub insb divl pop out fdivrl cmpsb outsb xchg mov (bad) in sub flds add add pop rorb mov (bad) sub inc lods sbb xchg loop sbb pop (bad) cld add mull sub adc add sub mov (bad) lahf jl cmp adc mov jns cmp iret jge ret mov pop or es into dec xchg and adc mov or outsl or icebp (bad) imul nop push xor lcall pop dec add mov mov hlt fldt dec push adcl sbb inc or pop test fildl push inc dec scas jmp lret (bad) cltd in mov jp push lret ljmp incl push xchg rcll or xchg cmp jns dec rcl jl sbb call lea push in pop lret lea inc mov rorl lock pushl jnp std je mov pop mov ffreep push jns mov in bound incb push xchg adc rolb add add add add pop leave sti (bad) sbb negl push hlt pusha in push (bad) sub mov inc stos (bad) or sub push and jno mov sub dec (bad) aas cmp aam scas mov pop and addr16 push adc xor jmp fistpll push mov fdivl xchg imul mov cwtl xor cli xchg jb in (bad) sbb mov out mov (bad) cwtl test add add add add cmp sub dec call xor xor mov (bad) mov xor mov test mov test insb push popf (bad) aaa adc ds dec bound push das fsub mov cmp pop adc stos pop jb inc stc mov imul jb pop fcmovbe sbb pop inc mov pop xchg out ret pushf int3 fwait out js,pt jno scas dec cmp add gs and adc cwtl shll pop in das xor inc xchg pop lcall add add aam dec jne popf loope (bad) ficompl jmp sub mov scas cs xchg push bound cli jl xchg or inc in hlt mov ret mov xor dec divb dec mov sbb mov inc add aaa inc xor loop movl and imulb push lret push mov lods jle push fisttp (bad) imul mov lds js lcall pop jbe push arpl aam sub push xchg fisttpll popf xor inc ficom mov sbb fbstp (bad) sbb (bad) daa push and mov repnz pop ficom xchg sub inc add jno push pusha xchg mov in loope fadds sub add add imul shl mov cs cmpsl mov or jle push sub shrb xchg aam test inc push push adc and rorl add add rclb push or xchg mov aas (bad) mov enter and mov pop pushf fwait les sti xor aam sub inc je pop sub int3 fistpl mov ljmp (bad) jb leave sbb mov mov xchg mov daa sbb adc cs into push (bad) adc stos mov dec ficom test mov mov mov lret imul adc add add add js lea (bad) and lcall out mov cmp mov arpl loopne scas jo outsb inc adc (bad) dec (bad) lods or pop and out pop push adc iret cmp inc mov jmp mov outsb (bad) sarb add inc cwtl mov testb cltd adc jge hlt add insb jae inc add pop lods sahf gs inc loopne mov das sub gs mov push push lock xchg xchg or pop mov add add xchg out movsl aaa add xor loope std inc lret out sub scas imull pop in fidiv add xchg test sbb mov pop ds (bad) int3 push push and leave ja test aam push lods fs imul add scas lock push add jno pop adc arpl sbb (bad) bound lods and in dec xor rclb (bad) or sbb add add add cs out lds repz mov xchg inc (bad) daa das bound push jle out loope push and fstpl iret cwtl aas push xchg insl loope adc inc scas loopne and stos loope cs (bad) dec int3 push test mov leave add xchg clc xchg clc sbb (bad) test ss int3 mov adc xadd aas push loopne arpl mov pusha js rcr cmp adc pop inc cmp mov mov in fcomps add add add dec sti fstps inc jnp cltd mov mov icebp inc lea (bad) fiadd adc (bad) xor jecxz fwait cmp mov out fnsave xor pop inc sbb data16 (bad) idivb sti push xor inc push je js int std push add xlat je push out sub adcb (bad) movsl push mov mov pop pop sub loopne mov mov popa and fsub jno mov and (bad) sahf sbb add sub addl add add add pusha loop sub scas mov push incl jle movsb lock mov outsl ficompl dec mov in or sub add pop cld je mov xchg add in jno (bad) jp cmc push out lods sbb insb insb cmpsb stc outsb ret sub inc fdivrl xchg aas ffree sbb cmc dec mov hlt fisub int3 jge inc scas pop adc dec mov jp mov das jns mov (bad) jb arpl stc fisubr xor imul pushf cmp into cmpl dec dec cld ror lods imul jns sub fisttpl sub xchg jns iret jb test mov or xchg jmp xlat in in add mov and dec xor add xchg je or sub mov jns dec movsb xor push sbb mov xorl cmpsl or mov dec pop mov push jmp xor lret push jge stc add add add add nop xor das cmp popaw pushf inc imul mov int or sti mov sti js lds in inc adc mov inc jg pop cli sbb repz fs fstp xor cmpsb jnp decl mov mov arpl xchg cmc fisubr xchg and je inc out jg hlt cmpsl jb mov sbb xor ret push icebp out and sub add out lcall jae es and mov fdivrs add add pop lret mov fldt or pop ret xor enter xchg xorb jmp sahf (bad) in or xchg fdivr inc pop (bad) in cmp fwait stos pop mov out adc and cmp nop push (bad) mov in loope cltd icebp movsl inc mov mov cld pop (bad) leave repz call (bad) mov lahf push cpuid in loopne fistpll mov test hlt and lcall jns orl push push xchg push mov hlt push jl push mov lret add add add add and pop pop stos xor lea or jl xchg mov or stc (bad) mov mov int sarb lahf dec and push xchg adc jno mov lods mov sbbl out ret jecxz scas jp pop lods sti inc ret fmuls clc lea pop cltd sbb mov cmc int3 fsubrs dec sub pop mov stos jmp add les mov int3 pop in xchg outsl jbe int3 js out ret psubd sbb out jnp mov sbb mov test ds mov adc inc fmull jno ret xor sbb and aam mov add imul push push mov inc dec lock outsl nop cmpl xchg xchg mov je roll xchg lret pop ljmp dec inc cmp aad scas mov jne (bad) mov add add add add rcll loope nop xchg ret mov inc sbb push jne mov cmpsb repnz xchg push and gs rcll pop (bad) (bad) jnp inc push and add cmp andw rcll or pop dec sbb pop (bad) scas pop sub pushl xchg test push sub or rcrl xor inc cmp movsl mov lock jb repnz lcall sub lahf jecxz push add add add mov push test (bad) ss bound pushf mov dec jns mov mov es mov push js jg jae mov pop mov pop popa aam add nop lcall jmp pop jmp mov jle ret sub inc pop dec stos jg xor ljmp xchg out repz dec call inc adc cmp sub xchg imul add add add xchg arpl adc xchg or iret adc sub negb insl push test or push je pop lods cmovns insl add flds data16 push das cmp mov cltd arpl sar lds jb (bad) cmp mov fstpt sahf xor (bad) or or dec aam sti mov sbb mov nop iret lods cmp add std dec mov mov es not add and push dec mov mov add rcll adc mov sbb in cld fidiv fs ja cwtl pop xor mov bnd pop xor xor pop daa imul or ss mov and mov or dec push repnz dec mov pop add inc lcall movsl inc pop push cmp (bad) repnz (bad) int3 pop mov imul push cmpsb adc sub stos sub add add add sub cmp lret orb push push pusha lods pusha mov (bad) inc xor stos mov shrb sbb jns add cli mov das add xchg addr16 dec lcall movsb (bad) xchg mov jle das outsl leave add xor or inc lcall outsb pop xor inc push pop xchg pop enter xchg fcomp aaa xchg test mov enter sub inc pop pop stos inc pop lahf and add sub fstpl sub mov pop rclb ja aam loope cs xor xorl (bad) xor jae and (bad) sbb sbb sub stc cvtps2pi jno repnz mov popa adc scas call (bad) jbe pop lods loope lahf or lock jns xchg int3 cmpsb inc dec jbe sub addr16 je out adc jecxz add lret pop stc xor adc push cltd mov (bad) lsl mov xchg dec push es jbe cli inc test dec mov xchg js sub xchg push lahf adc sub sbb cli cmpsb nop mov adcl sbb flds sti imul fcomps sti xor sbb and les faddl pop aad mov lds test cli or add jne stc adc add cmpsb mov dec roll push rcll add dec icebp xchg insb jge out (bad) mov xchg inc pop pop and aaa jg xor out sub (bad) arpl jl inc mov mov push xchg iret int3 ds pop sarl mov push popf add jb add sbb jge xor xchg jbe push in mov loope rcr add pop leave loop cmp lock jge in mov jl jbe push add adc dec inc sub push loope pusha loopne (bad) adc pop call scas cwtl in sbb xor xlat cmpsb mov negb repz mov adc xor mov (bad) in xchg nop in add adc clc fstl mov jne and andb cmp ss fmull fdivrl xor push fsubp inc xchg jbe dec push adc jns mov popf jno mov mov int imul add add add inc adc adc fcomps mov enter lret repnz fs mov out jne jecxz mov adc stos push xor dec hlt jle movsl xor scas push stos test ljmp and mov inc mov daa dec sub jbe dec and (bad) adc jl stc pop in sub cmp pop fisttpll push push add scas sbb popa or push inc lods (bad) mov mov lret clc and mov aam adc (bad) lock rcrb in popf jp mov call mov sbb fadds fimull add mov loop push mov pop int3 mov pop mov movl ret sti sub adc orb hlt ror sahf xor mov out out lods sub pop add push mov loope dec aam push dec rol or push iret mov jo (bad) add inc hlt shld mov pop jns sbb pop xor sbb fisttpl ret lahf mov negl pop das jae psubusw mov jge insl mov cli mov xchg test dec mov sub xor in or cmp dec dec ret push (bad) sub add add cmp (bad) lret push ret cmp dec mov cmc mov lods lods scas sbb sub pop cwtl xchg and or out icebp outsl inc add add shr jno pop outsl inc ljmp jae ja rcll cmp add sahf sbb pop mov jno mov cmc and sub xor pop out out repnz mov push push fdivs lods outsl lods out das xchg xchg sub mov jle cmp push sbb pop rol lods jecxz rol (bad) icebp or and int and inc mov dec ljmp fidiv hlt or mov add add lcall aaa add push mov dec ret xchg jecxz mov mov aaa adc shll inc cmp ljmp sbb pop adc cmpsl lds sub sub scas ret notb aad fdivrs daa mov jnp es xchg (bad) jae pop fs sub ret sbb outsb sub sbb push sub test cld icebp enter push adcl (bad) lcall inc adc jl stos (bad) data16 out mov sarb cmpsb imul ja push rcrl mov int enter ret mov mov add sbb call adc (bad) (bad) mov and insl (bad) push lods pop repz mov jle sbb or imull push inc in loopne jae pop xor mov xchg mov iret push jmp sbb pop cmp lret jge add add add out mov cmp mov cwtl xchg cmp fbstp xchg pop stos pop lea into push push push sti leave out dec bound pop mov out stos cs aam jmp adc inc fldt mov lahf lds add xor xchg add push mov xchg sbb sahf adc inc pop push dec arpl faddl lods mov aas and mov adc test jmp pop cmc push sub add (bad) pop pslld or inc icebp adc loop sub loope jge in inc test cmp aam or mov popaw lods dec cmp loop mov icebp xchg mov icebp cmp cmp cmp notb out mov mov sub mov aas xchg pushf nop inc sarb push out sub movsb in int xchg addr16 fistp addl adc fcoms in loop lretw call pop lds mov add add add adc mov test add test stos cmp (bad) pushf xchg mov cmp ret data16 test in hlt push adcl push jno ss jp stos and idivl sub mov ljmp push les mov aas out sbb mov and sbb cmp or hlt push jb cmp xor mov pop ficomp into outsb aam cli ja mov add add add in jnp stos jno jbe imul xor mov mov aas fs sub mov imul xchg adc mov sub xor mov push bound and mov pop ds ja test sub out lock cmp jns ja push mov push pop arpl mov adc cmp into daa mov cltd jnp test out scas in xchg push mov dec out (bad) lock or aaa out dec int3 (bad) dec scas jns bound add add add add xor popf pop mov aaa sbbl jecxz aad sub lods ds and pop xor jp js mov adc mov dec jmp sub cli cmc popa adc mov (bad) loopne movsb cmp push ret loopne and jecxz xchg pop mov sbb rcl arpl jnp mov or jae mov mov sti movb cmpsl stos fsubs add add add add in inc lock loopne test psllq xlat xor (bad) bound xchg lods jp pop repnz push mov or dec sub pop mov and stos sub dec adc and cwtl jl sbb fistpl dec js jno pop pop andl and cmp mov out push mov fcmovnb sbbl jle jecxz xchg jae test dec (bad) shll out enter das push ss add add add add sbb inc insb add jno dec cltd jge cmp hlt jp add (bad) jno gs andl lds lea sub and pop xlat insl test pop fninit pop mov mov or adc fldenv add dec lahf add mov jo imul (bad) out cmp int push faddl idivb pop jg jo sub jp loope pop xchg or add mov ret jb add add add add cld inc sbb adc cltd add stos xchg pop xchg aaa inc inc ret xorb mov adc lret cltd int je xor jecxz movsl ret sbb lds out sub orl sbb dec lret cmp cmpsl inc jb add add push cmp mov (bad) lods les aad dec roll adc (bad) ljmp cmpsb mov add bound mov mov das jnp clc aaa jp add add add icebp ret faddp push xchg jg (bad) pop add lcall (bad) push fsubp test mov (bad) repnz inc das or gs call lret pop inc pop dec mov scas cld in fsubrs (bad) cli pop cmpsb mov lock mov cmc mov mov push lock jmp mov cmp addr16 ror add sbb cmp stos mov test aad out add add and sahf or fwait das xchg inc push and (bad) loope pop popa mov hlt cmp mov or lahf loopne dec and out sub pop cmp in lea scas lods sbb in or push icebp cmp es cwtl jecxz (bad) fadd hlt lock rcll sbb mov imul popa jle cmp outsb xor pop inc fnop jmp fxtract movsl dec pop xchg jle jo pop cmpsl repnz push push lds pop sub xor add add add pop insb lock mov insb test pop push xchg ret sbb mov lods jg das mov stos add and lret pusha lods mov cmp lret xlat addr16 lret sbb fist sbb pop test aad mov pusha scas gs nop dec adc fstl insl mov aaa and adc data16 pop and scas jo inc rorb xchg fmulp in pop sbb cmp add add add rolb xchg jmp sbb ja jns call fidivl sar mov inc adc mov popa mov sub jge data16 or jmp cltd aad xor xor shrl and sub cmpsl xchg test into lods mov jae mov (bad) loopne ret xor aad mulps arpl test mov mov adc mov movsl int mov pop ljmp add add add cwtl fistpl imul movsl aaa ds bound cmp xchg cld jnp xor sub adc rcrb insb es nop in sarl arpl loop add and in and pushf dec insl jl les cmpsb ss inc test dec or hlt xor cmpsl sahf cli mov arpl sbb cmpsb sbb stc xchg rorl idiv fisttpl aas fsubl mov stc jno cs jge or add add add mov outsl (bad) loopne mov ficoml cmp pop lret imul data16 add cmp jle imul ja push lahf loop xor pop mov out pusha hlt popf push shlb call int pop and cli jg das cmp (bad) lcall inc insl bound lods jg out or mov push lea (bad) fucomp push mov outsb js fwait daa add add add add mov stos (bad) sub dec cwtl dec jl or gs push inc (bad) mov in sub push lret push adc sub lock jl cmp sahf mov test mov pop fmuls pop pop jb outsb addr16 xchg pusha addr16 xchg cmpsb in pop fsubl icebp ja jle pushf insb adc dec dec ret push xchg lock jge cmp out xor leave out imul add push daa adc cld mov lds add add add push jge incl dec fsubl push pushf ss sarl cs out fwait in (bad) ds dec xchg in and xchg xchg fimul push jae dec fyl2x push xchg scas ljmp nop popa sbb test sub or outsl push push inc in out addb sbb xor push xchg dec add pop cmp mov xor jae loop,pn jl inc xchg rcl negl (bad) sbb cmp xchg in xchg jb outsb jns push dec incb out pop cmp sti aad and mov loope dec popa or dec icebp lret cmp mov inc (bad) mov fs pop push fisttp push leave adc negl loop pop xor scas cld pop fidivrl mov (bad) fidiv std jmp es movsl sbb (bad) cmp pop pop cmpsb push clc jnp scas outsl out push mov xor inc pop inc sub pop pop mov add cmpsl sbb add dec in adc icebp and xchg push pop push or dec out cmp and repnz arpl lret cmp xor in call adc cmp pop cmpsb mov fdivl or aaa sub cmc es mov rorb cmp mov sahf icebp xor rolb lods std sar cmpl inc (bad) nop lcall push add add add cs inc sbb test mov sub pop xor xor adc xchg jne push add call jbe inc and push movsb jb cld sub mov or ljmp sbb in dec test push pop nop push pop dec pop dec cmpsl ret cmp jns pusha mov adc lahf pop rcrl idivb mov lret xor imul mov add jl sti out lea add add jp add bound sahf inc addr16 std js repnz xrelease and mov (bad) mov xlat fisubrl aad cmp sbb pop cmp pop pop xchg add (bad) int3 fwait lret movd mov call mov jno cmp js push sub cmpsl dec sbb outsl jecxz mov push lods push sub add imul inc push nop int test fsubr push sbb cmpsl dec jb add jb inc in sub add add add inc rcrb pop (bad) movb mov imul mov push dec divl popf adc jo out or lds (bad) jno mov sarl rorl or dec mov outsl jg leave dec jp add cli iret out lret mov hlt mov mov lret mov pop in jle aas push ret dec fisttp inc cmp (bad) into aam iret lods push xor push jecxz cmp add add add add insl xchg ja fidiv dec fidiv in fdivrl int3 xchg out pop cs lods sub rorb xor sub push (bad) movsl hlt jno add pusha cmpsl or mov sub mov lods sub movsb cmpsb xor jl and jmp les insb rcl xchg popl sbb leave adc imul jle or es arpl fdivs ja sub shrb add add add outsl push int push xchg lock pop adc sbb fnsave jg and mov js outsl fidiv aad imul out lahf jge cmp and test inc pushl movsb sti jne lret std mov mov pop (bad) out sub std fstp mov fsubrl shlb imul lea and inc out or cld jne scas cmp xor push cmp jne adc pusha in sarl mov add add add jecxz and pop rcl and sub push pop xchg add rolb ja xor xchg and cmpsb push add pop pop in inc and dec xchg scas sbb xchg loopne sub in mov mov in cmp push push mov inc into mov pop pop xchg imul negl loop ds xor outsl daa or ja xchg inc dec fdivs cmp lret ljmp mov jns sbb add add add (bad) out push cld stc cmp (bad) aas inc xor lret lods cli cmp pop fwait sti mov insl jl dec or or scas fsubs mov aad pop aam adc arpl and jns jmp in shlb fnsave or sub (bad) notb xor add xchg ja add ljmp into shrb pop out cmp xorl and mov scas jo push jb and pusha add add add outsl dec pusha popa sti jnp mov inc mov mov test lea cmp xchg sbb mov xchg sub sti out mov xchg mov lahf adc fldl cmpsb sbb add scas movsb mov sbb sbb and arpl push (bad) jmp adc test add lods daa repz xchg lahf pop or cmpsb push xlat hlt jo pushf jnp lock xorb (bad) clc mov lahf or inc cli sbb mov mov add cmp or stos add clc in jno aaa xor fsts adc xchg sub cmp mov mov sbb cmpsb and xor pop ds sbb mov iret fs or inc lret add jl ja daa js fstl clc rorl repz add lods xor hlt jo (bad) cmpsb pushf adc push and dec stos add or push and js sti je enter mov int aad stos push lret add les add push js fnsave mov ucomiss pop loop fsubs arpl xor fwait pop clc out loop,pt das mov mov std adc mov je mov jmp mov sbb dec imulb xor out sbb (bad) pop fsubr dec xor jecxz pop pop shrd xchg jecxz dec inc cmpsl testb mov or dec aaa mov push add repz inc std aaa clc jge arpl mov lahf int3 sbb fs scas push xchg add jge add add insb xor or dec orb jecxz adcl insb ljmp add (bad) ficomp rolb and xchg imul into mov sbb repz daa xchg cltd and std adc stos sub xor add add add xor aas dec sbb ja pop das mov dec pop push in cltd mov (bad) (bad) sbb movsl out sbb fisubr int outsl inc or rclb out mov mov adc jno daa stos and inc jbe out (bad) daa mov ss lea mov mov imul add test pop inc push scas xor mov cmp iret leave mov dec or sbb hlt push jnp es xor push xor aad add add add push dec push pop pop iret xchg push loope cmp jo lea lret hlt sti test cli and xlat rorl and int ja sbbl inc das sbb jp sti popa xchg push dec adc es dec (bad) jb inc mov pushl imul insb es jmp icebp pop mov test dec mov push popf lret push (bad) cmc sbb dec inc xor jge xchg dec add push pop aad fstl xor mov fwait cmpsl ficompl add add add scas in fcompl xchg push stc xor xor adc inc lahf and out pop or das mov scas jno movsb push (bad) mov sbb mov jmp mov adc loop or adc jb (bad) jge das xchg dec imul xor cmpsl rol stc cmp fildl div test aas sub (bad) fdivrs pop ljmp jne nop scas movsb movb add add jge jns fistpll sbbb icebp jo cli mov cmpb xor insl fldcw mov dec xchg stc repnz xor aad (bad) into push pop xchg in xor push cwtl mov aaa mov scas stos repz mov ja out push movsb xchg (bad) clc or jns dec and jg xorl lahf shrl push mov fwait dec and xor xchg lahf cltd call inc adcl stos cltd xchg add add add popa aaa orl mov push popl jnp,pn lahf and add or pop fnstsw cmpsb cmpsl popf iret fmull in sbb sub cmpsb div popf xchg outsl (bad) rorb add mov arpl add cmp cmp je sbb lock dec sub pop popa out das insb stos sti jns inc mov xor shrl enter (bad) (bad) pop mov mov push pop iret loopne push pushl int3 sub sahf mov add insb ss lock rclb (bad) mov mov jbe cmp sub push adc dec jmp popa or in mov cmp or out sub push push (bad) xor in cmp mov push or loope sbb push adc push loopne js add mov outsb fcompl insb mov jns sub imul popa xchg xchg call imull popf xchg aas cmp add add mov inc lods pop pop test inc sub and (bad) insl pop and inc int push xorb ds mov fstl cmpsl addl in add xor xlat fidiv pop jge in out sub lods nop cmc jbe (bad) imulb push in dec stc js jmp fnstsw sub pop dec pop xchg inc dec test fcompl or and and ljmp add add add sarl das clc xor sbb mov lahf mov in jo jge ds ret in mov cmpsl sub inc pop into (bad) mov push sub negl inc or cwtl mov int stc (bad) fcmovnbe cs xlat movb mov insb pop push xchg sbb js lea (bad) cld arpl xor aas (bad) lods xchg (bad) (bad) in es inc not xor (bad) in loopne (bad) aad cmp addr16 inc push cwtl sub and add add cmp aam fdivs ss xor cltd lea sub jno and insb out mov mov (bad) mov adc xor pop lock or and dec adc mov loope int scas mov addl sub lea jbe mov push mov aam push test and aaa pop xchg in dec fucom inc push inc or push xchg jge push mov jns push dec sbb andl add add add sbb mull dec fildl push in mov mov in mov sbb push popa sbb dec push divb xor inc pop inc or mov xchg xor xchg jp popa xchg (bad) jmp imul or fwait fwait lahf adcl ret xchg push insb jge jg ss into dec adc fs xor cltd fisub dec pop (bad) notl xlat and bound ret and addr16 stos mov add add add add add lods mov insb mov xor daa push add xor lahf adc test out sbb push xor adc aaa sub pop cmp xor mov scas cmp inc imul test mov enter add rcrb sub fiaddl int jge push movsl clc pusha add sub sbb and push jbe xor mov push mov adc sub mov psraw mov ja xor add add rcll pop xor cmp adc xchg fisubrl xor fist (bad) int3 call xor lock mov jno inc mov popa sbb inc pop lcall push sbb sbb call xor jg movb jae cs popf pushf mov mov xchg cwtl repz mov add xchg jg aam in xchg and xor int3 sub mov add or mov (bad) sub xor int sub cmpsl daa in test fbld movsb pop cmpsb in es and popa imul jecxz test add dec mov clc je mov stos adc outsb xchg pop mov inc dec das cld xchg fwait xchg ficomp aam enter sbb push mov in lock push lea pop fstpt pop (bad) aaa or (bad) jg movsb pop mov add add add sbb cmpsb imul mov pop clc xor mov out mov clc mov cmp aas (bad) sub dec outsl sub xor xchg int cli gs mov dec dec push mov negb push inc adc adc lret iret lcall adc cltd insb dec cli mov pop int3 out jne and ss sub repnz jmp ja push pusha fdivs pop sub decb sbb out add add add add and mov jl and lahf sbb fisub out xchg pop lahf sti jnp adc sub lea push fdivs and fnop fiadd aam adc (bad) jl mov ljmp jge fsubrs adc adc dec sub rcll pop lret and xchg mov fild std inc cmpsl mov sub repz decb mov and movsl pop push push popa add jl popf jge add add add sbb mov add data16 (bad) jno sub push out push out inc inc cmpsb dec or stc and pushf sti cli aas push and cli mov and push pop or lcall hlt int imul mov roll jge and test nop rdpmc gs pop mov jge xor (bad) (bad) pop lret dec fs imul fstpl xchg aas xor add add add dec jns mov andb rcrb or stos xor sub push sub fcompl pushf test mov cli fistp dec pop cmc movsl inc das mov push mov sub out outsb pop cmpl sarl jae in xchg je sbb mov test push lret aad scas (bad) arpl movsl aas out test or pop sbb add sub mov popf dec (bad) scas repnz movsb add or imul add add add add cmp out or sbb (bad) sbb jg and cmp mov pop sti inc scas test pop push call jno push sti call and (bad) out mov fstps or (bad) push mov inc int3 cmp mov popaw cmpsl repz clc sub icebp popa insl adc sbb jl iret cmc negl bound enter xchg stos enter out aas mov push mov add cmp ss imul add add add jno stc lcall aaa lds inc mov mov cld or lcall out pushf (bad) pop stos dec push outsb out add xor and dec insb (bad) xchg mov cs and mov push jb mov jb in test xor es push or mov adcl xor lods outsb iret jne lock int3 sahf adc sub (bad) mov and cmpsb lods in test (bad) push leave add sbb push xchg add add add sbb or jmp or lret adc add push jmp imull loopne int3 jbe bound lahf scas loop add push into sbb flds gs sahf push pusha dec mov inc enter sbb test push div dec data16 imul lret test xchg or (bad) mov dec cmpsl xchg lods sbbl (bad) jae dec sub mov fist jp lea xlat mov push lret add add add add bound xchg xchg sub and mov (bad) loop mov xchg repz cmc pop sbb jno cmp stos lret lret pop into fldt sbb cmp jno adc fwait js mov mov or imul dec mov and jns cld nopl cmp leave push lret add inc aaa mov sbb loopne xchg add or xchg dec inc pop adc add add adc push lods js and scas jne cltd or stos mov sub xor rep lahf cwtl xor mov inc jnp lret imul mov sub addr16 inc arpl icebp push cltd sbb push and dec arpl mov int3 push aam or mov mov xchg push dec xor loope jnp sahf (bad) xor or rcll test add or iret adc mov ja fidivrl std mov in (bad) insl fs movsl add add add add aas into mov mov jns jl leave cmp xchg popa jge jl cmp cmp xchg ds pusha pop in add enter or add mov daa push mov aam add test addr16 test cwtl test in lea adc sub cld dec mov push add ret icebp jbe cltd jge mov or push popa lahf add adc push jno add mov add add add add mov pop in rcl jo leave lods jbe push mov repz mov inc (bad) fwait cltd or xchg sahf mov arpl nop mov xchg stmxcsr or movsb (bad) scas lea fist aas cmp mov dec sbb pop mov inc xor or fxch lods jl push loop mov addr16 mov inc sub into mov or fildll adc sub mov push jp outsl out cmpsl cmc push insl jns icebp pop in add stos push sbb sbb xchg dec movsb cmp xchg mov mov pop iret xor or dec add mov or cmp imulb lea pop xor ss cwtl dec dec pop scas inc mov jae int3 pop iret popa pop jns add iret add repz pop cli mov xchg (bad) mov pop mov and dec in js jle mov push jl jmp stos imull add mov add add add (bad) hlt mov aad scas pop dec push pop test lock jno roll inc inc cltd data16 sbb cmp in ds test jle repz mov cmp or nop xor sbb pop or (bad) xor mov push scas sti jne lods cwtl (bad) (bad) pop lock scas fwait in push lret dec dec (bad) (bad) gs push dec test cmp dec flds cwtl pop mov push sbb pop inc sub jge pop cmp subb int or lock inc add add add add sub neg test stos pop outsb sahf sub and movsb ret mov sbb adc inc xchg rcrl std cwtl js lock bound push je dec push int3 dec mov and leave stc cmp xchg dec and pop ficompl mov insb andw xchg or sub sbb dec push jp (bad) sarl sahf xchg pop pop mov xchg test jmp adc sahf sub mov push das arpl add add push mov or xchg adc cli call or xor jb mov mov icebp (bad) lcall fldenv loopne rorl std decb fisubrl in pop pop cld sbb mov lock xchg cmp xor into into rorl adc mov and cmp imul sbb cmp adc pop mov out add mov repnz rcl (bad) or jns movsb jb pop popa loope add add add shrb cmpsb mov sbb (bad) sub test aam cmp adc lret jae dec icebp (bad) ret fwait je lds xchg mov lods sbb repnz out mov flds jne cltd (bad) fisttp pop cmpsb or test mov roll pop jnp in jge cltd jecxz fs ret pop inc jge sub dec jo lret fs cmp jmp push push addr16 pop lods cli ficomp mov stc dec or movsl popa loop add add add inc test sarl xlat sbb hlt ljmp jb fisubr lds out push xor js cmpsl test mov fstl push ljmp inc std fsubs jns dec out xchg call shl pusha notl arpl pop lahf icebp les xchg sub or inc mov cmc mov repnz push aam leave xchg aam sbb fistl ljmp es push sbb lods push stos insb fisubl and sbb add add mov sahf ja adc xor rcl pop push sub movsl push aas (bad) bound ljmp add inc sub jp jbe cmp mov int3 in cmp mov pop sarl or xchg sbb mov sub mov mov add jmp xor cmp sahf push gs mov jno jmp test pop (bad) dec rcrl adc push (bad) mov ljmp push pop cmpsl or int inc in push aad pop mov sub jbe cmp sbb aad repnz mov push xor sbb or (bad) mov and jbe dec js (bad) jmp sub add sub mov rorl aam mov add mov adc mov mov sub mov loope fidiv add add add add pop sub lret pop nop fistl pop aam aas out dec pop aas xchg pop xor pusha je dec mov test xchg cmpsl xchg outsb lret add xchg pop add xchg jae mov mov test xor and or mov in lea push loop (bad) and test pop pusha adc fidiv mov cmpsl test sub fwait test sbb and sub and cmp add add add sub es push outsb call mov cmp push cld arpl mov mov dec add popa cld fstpl mov xor adc mov (bad) (bad) iret mov in inc push pop lcall sbb jle xchg and push test fldenv sti lahf ss pop int scas addr16 inc sbb das daa sub ret jmp ja xchg push dec loopne cmp cmp lods ret adc add add add cmpsb sbb or cmpsl les add mov mov adc pop lods sbb arpl (bad) test fwait inc and jge xchg test sub ret xchg add sub sub gs cmp xor outsl fiadd pop sti xorl xor scas (bad) stc fldl2e xchg jb jg out xor mov ret jmp and adc mov rclb loopne fimull sbb dec incb add add add add fldl sub pop cs mov and pop negl jecxz xchg xchg leave ljmp mov xchg inc adc mov cmp mov mov imul xor clc xchg das xor mov (bad) inc sub lahf stos call loop or mov mov lcall and sbb flds lds out test lock add add add jbe sbb pop jb je xchg fidivr dec fist aad cli push cs mov pop fdivp pop mov inc scas cmp jnp insl insb popf cs in push cli xacquire and test dec test adc push adc gs mov jae jo cli mov dec sub xor and rcrb mov in xchg jns jecxz mov cmp fwait gs ds push sbb pop gs in adc push sub test add add add daa push adc rorb jo pushf (bad) mov and push ljmp sub mov jg lcall mov div cmp in or inc fnstenv fsts sbb mov push xchg cmp push mov pop or cmpsl jp dec (bad) mov out sub mov xchg jns movsl cmp sahf lds daa xor sbb pop nop inc insl mov lods rorb (bad) bnd jb sbb add add add aas (bad) repz jnp (bad) xor stos and xchg mov inc movsb or dec inc out cltd dec sub hlt leave insl loop shlb sbb push push adc dec add aad lods ja sub inc jne mov mov enter aam sbb ja xchg (bad) bound lcall dec mov add dec jp les out clc bound cmpsl mov test lret add add add pop inc lea movsb jb lods ret movsb xchg xchg out sub popa (bad) jbe pop test dec sub cli pushf les xchg sbb fstpt dec push xchg dec jae ds out jns lcall add sarl and mov adc add sbb test pushf and dec lock sub rcll ret mov or ss dec int cmp jge (bad) stc inc or fidiv push lods dec aas enter add add jl mov dec shll jl scas inc add subb bound jns sar loop pop iret fsubs das loop add or cwtl jbe enter out loop sub pop sbb ret pop adc push icebp inc out sbb movswl dec pop and jnp push stos in jbe sub stc notl add xchg pop decb pusha jae mov in inc push dec push cli das jp push into jecxz adc mov sub inc add add add push push leave je jecxz pop xor mov fwait mov sub mov pop mov jge xchg inc xor js mov lea psrld adc jnp mov cs shlb mov dec pop xchg sub inc imul sbb add adc sub fbld mov and clc pop aaa add lret loope add bnd mov pop retw fiadd notl add add mov repnz mov test or shl stos and stos aam stos int push vpmaddwd ret mov sbb cwtl cli or inc xor inc pop dec and inc xchg jecxz or sub pop and in outsl lock cmp lahf rcrb (bad) and loop push sbb int3 ja cli inc cli mov xor sti insl lcall cli push sbb sbb or adc push sbb dec scas das enter lock add add subl pop ret jl gs popf out stc shl rcrb ret in cmc inc mov popf mov es mov sub in (bad) cltd pop sub or lock lahf add int cmp sbb jb push test loope lret std jo insb push xchg dec fisubrl mov jne xchg std xchg mov div mov xchg and mov in xor clc popf pushf hlt mov adc sub mov cmp and mov test push sub add add add enter xor add jmp addr16 cmp ja arpl clc jns fisttpll (bad) mov scas imul pop ss aad lcall (bad) addr16 cmpsb jp in pop cmpsl and dec (bad) fildl addr16 mov (bad) sbb mov jns repz dec and mov sbb ljmp cmp (bad) jne fmull test call pop hlt adc mov add adc lods fucomp aad (bad) out and leave adc push mov rclb (bad) leave stc in std jge fild into lret cmp in cld jp sub mov lock les pusha mov xchg inc xchg add dec jbe popa enter inc movsl xor dec hlt nop iret push cltd aaa jg fcomps adc or mov bound stc ds outsb bound ljmp lods mov jecxz mov or imul add push rol rcl fcomps ret inc mov std movsb cli mul adc insl popf sti mov xchg repz rcrl aas jg jae (bad) dec lods scas or out movsl popa jmp inc push lock pop lret mov push imul jbe addr16 pop shrb mov pop xor mov cwtl or xor mov ljmp leave (bad) xlat (bad) cmp lahf adc xchg fistpll scas inc pop cmp hlt mov (bad) (bad) mov add add xchg sti fmuls dec ja xchg out cli inc push stc lea fcmovnb pop pop (bad) loope mov out es push in mov jmp push mov les or ret addr16 cmc xor les repz or lods cmpl and or in decb lods dec xchg mov dec xor aam lds and jb hlt sbb (bad) (bad) sbb adc jg (bad) movsl xor xchg xorb add add add add cli test je mov iret mov inc jcxz sbb in cld xor call int push mov pop (bad) popf in mov adc nop jp in aas or pop stos sarl sub dec xor mov mov cmp das jo les push (bad) repz push call add mov xor mov fildll or (bad) mov fldt es loope cmovo xchg mov cltd add add add cltd and cmpsl mov jle xor inc enter rorb addl in into mov or mov jo dec push and inc clc inc sbb ja stc inc cmp or repnz rcl lods dec push add xchg jmp add mov mov dec add dec xchg jb out add js subl call dec pop pop mov in sbb hlt cmp out stos bound enter add sqrtps mov mov (bad) mov or inc call adc and fild test in jp cmc aaa cltd into ja (bad) cmp cli mov fisttpll mov adc popf rcrl jmp push sub sti and imul xor push mov or jmp insl movsb add xchg push xchg or push add stos bound es and add sub iret jae cmp lds into fnstcw and xchg add ljmp (bad) fimul push (bad) (bad) ja in dec (bad) lret cmpb in inc mov lock add mov xchg sub hlt inc test inc lods stos mov mov add mov jo mov mov add mov lock push adc lret add dec sbb add pop ja mov xchg mov rcrb movsl jge iret lock ret mov in enter in pop adc xchg or repz repnz add add add add (bad) xor mov call mov inc (bad) sub or sub xchg xor or push (bad) adc ljmp lock call add cmp add push insl jns mov (bad) mov mov les inc test and (bad) test cwtl cmp (bad) lock leave (bad) das mov inc jle lcall movsl ja xchg lods fild mov mov add add add pop cmpsb push les mov mov dec in sub rcrl pushl xor in nop jp addl push mov sub addl ss push test cmpl ja shrl jbe,pn push ret fcoms xor hlt fdivl iret fstl jl push div sbb lret jl fcmovnb sub mov inc dec or (bad) es bound sti push movsb pop mov add add add push out movsl shll push xor jnp (bad) lock xchg sbbl das jecxz mov jns sub mov jle enter fnstenv imul test push (bad) stos xor sbb stos div test jp pop jle (bad) cmp xchg adc mov aam pop leave mov imul xor rorb xor or sub jne xor std sahf test push or add add mov mov xchg dec mov inc cltd push dec insb or aas lods cmp lahf leave sub fnstcw (bad) sbb jo jbe jmp push mov inc leave call xchg nop icebp cwtl sub roll mov stos aas stos or mov scas push dec mov shll cmpsl fwait mov fwait push xchg push mov hlt or arpl jle xchg fcoml push and icebp xor cmp je icebp push insb add add add bnd xchg enter fstpt dec xchg shlb mov push push hlt mov clc pop mov int3 test jg inc mov push push inc push jmp loop insb add mov div inc xchg inc cmp fistp xor xchg cmp pop into fsub repz xor mov mov xor push dec sbb in lret test and inc pop pop popa inc mov jne cmp mov iret sbb imul pop lfs add add add add inc les push push push push xor les pop jns aam xchg inc in cmpsl aad js lret sarb nop add mov mov fcmovbe add iret sub psubq add and pop imul sub sbb mov dec cmp mov imul or cli (bad) mov dec lcall imul sbb xor push (bad) cld stos inc in sbb lds add add add adc repz xor aas push add dec ret jmp fsubs into mov pop mov popa addl (bad) mov sub scas loop jnp nop lods adc bound test dec mov adc test lods sub xchg fwait lods test pop ja mov loop (bad) mov lods xor (bad) ja jge adc iret inc fidivl cmp xchg frstor cltd jecxz sub cvtps2pd fbld in and pushf in sub dec pusha add mov sub add inc dec stos (bad) testl mov stos push (bad) pop minps lret insb ljmp adc les shrb adc adc test mov add dec out mov clc negb enter ficomp lret repz shlb cmp cmpsb stos push adc mov mov mov jae sub add jnp (bad) xor daa enter mov test fcompl ja xchg sub mov or cmc inc insl lea cmpsl dec jle xchg jl mov inc stos inc mov popa fcmove cltd js pop push mov dec je ja xchg or adc xor enter cld pop rclb out push jle pop add test jmp insb jecxz popa or sahf mov push imul dec (bad) xor xor add add add push push hlt sub cwtl jl sbb les neg push lret stos je jb jo leave ljmp jbe dec scas neg loope (bad) push and lahf (bad) out loopne out or fidivr and lret out movb ss std cwtl ss jmp (bad) push fnstenv push das inc sbb adc jae sbb fnstcw sbb push fs inc ja push into cmp push push in push xchg jl repnz mov hlt sub aas add add add add jo adc mov pop push pop jge fnstenv in popf enter cwtl add push fs loope and (bad) cmp xchg adc rcrl into pop das imul jl orb cld adc sarl xchg cmpsl into icebp ljmp leave stos cmp mov add and xchg and mov mov dec xorb hlt mov test push js jl inc inc pop dec push call mov add add stos push fbstp test xor inc and aas test es pop pushf mov mov out cmp pop outsl mov push ret (bad) (bad) (bad) mov in xor and (bad) data16 add sbb sub jle adc cmpsb pushf enter xor add mov or xor shl pop insb add xchg inc repnz xchg xchg ds outsb std test jae out mov test mov xchg fs clc add add add add dec fldenv in test push jb cmp cs xor inc mov jbe adc bound mov imul ss pop sti pop ss xchg or cwtl dec nop (bad) cmp or sbb std dec cmp inc cwtl and xor test and dec popf clc pop out or or (bad) pmulhw mov es mov jns and lcall xchg mov xor add add bound nop mov lea jbe std xchg ret adcb pushfw adc cmp sbb or scas cmc cmp loope sbbl and sbb pop shrl mov je popa ss in or in xchg sbb (bad) repz addl push and insb lds mov mov and sub aad inc je insb (bad) cmp add add add mov and gs shrl sbb ja js dec sbb les mov fldenv pusha cmp mov mov pusha inc xor pushf roll notb xchg mov in mov shlb cmp and xor into and ret mov jo cltd ja nop icebp adc cmp outsb mov enter dec daa dec test pop int3 jecxz jo push add add add add push mov jnp xchg dec pop dec (bad) leave push bound mov cmp push sti ljmp xchg and xor imul jl push dec cmpsb shlb mov sbb or jg negb add sbb pop and ret sbb and or dec adc aad mov pushf pop lret pusha jp push (bad) outsb iret jb call mov outsb cs add add add out faddl sbbb shlb stos mov mov push lahf dec loopne push dec outsb stos adc imul xor inc jnp scas mov sub add mov lahf je and pop add push and in rolb sub mov aaa jg test lods pop jg push imul les and push stos mov xlat bnd push xchg inc pop out leave (bad) fild pop xor push fistpll fcmovnb pop and add add add add rcrl push test sbb inc inc out pop cmp jl int mov and jns pop sub out lcall sub mov scas cld xchg incb jg pop add lods mov xchg pop rcrb mov ret out cwtl push jno stos imulb sub xor dec cmp loopne ja sbb ucomiss add repnz incl insl sub inc or cmp xlat push pop xor add add (bad) dec mov andl ja push in mov mov hlt cmc sbb popfw xchg dec cmp mov inc ss add push call or sar jg jbe mov push pop test out test stc or and pop dec pushf aas js cmp addr16 push xchg inc pop xor fucom test sti jno or int fxch cmp mov icebp imul rorb and lret int3 repnz add add add add movsl pop pop (bad) lock pop cmp mov inc aam mov or inc mov loop sbb (bad) mov xor and pop mov xor sub lock cmp or mov movb push popa adc loope aam add popf cmp adc push lods fidivrl js mov or cmp inc jmp pop adc jne xchg pop pop add gs es int movsb inc cli mov mov inc add add add ja int3 in (bad) xor fadd ja mov hlt cwtl mov das loop dec mov cltd push sub mov push lret lea sbb in push jbe push xlat sub adc xor adc jns fstps sub fwait test jl and popa mov or push lds and xchg add out dec add add add sti sti call addr16 (bad) cmp inc sbb pop xchg mov cmc mov ds ja sbb pop rcll cmpl jns lock adc out xor loop dec dec push add ss mov js push push inc adc mov dec dec jnp fcomps push stos lahf inc mov xor cmpsl xor push pop (bad) fstpl lods cli push xchg pop xor mov outsl lea jo rcrl jb xchg movsb adc jecxz aas inc xchg in sbb add add add add xor loop fdivs inc in lret loopne das mov mov aam dec dec sti in aad xchg cmp xchg aad dec push mov push ljmp (bad) adc mov mov divb add push xor fs fiaddl and aam cld or les dec bound xchg pop dec xchg lock es dec out lahf iret dec dec mov (bad) adc push and test or lds into sub adc scas dec sbb add add add xchg xchg leave push fiadd fsubrp dec loopne push mov pop ret and push push call mov inc cmp dec mov scas sub push out and dec inc sbb scas int3 cmp sub lea dec xor adc sub xchg cli mov test dec rclb ret mov popa mov or or xor dec imul adc push jo lods mov add add add loope hlt loope ficoml outsb xor add mov push mov stc or mov cld scas popf dec sarb xchg pop lock mov push in cmovle add sbb push jne cmp dec xor xchg scas add call cmc mov negb mov subl and lret adc xor sub fnop dec mov pop mov mov add xlat jp fildll jbe ret cmp pop shl inc xchg dec jecxz sti xor gs stos add call lock cmp lock not sti (bad) cli pop cli rcpps inc pushf stos aaa std jecxz mov cmp insl fsqrt push out or xchg add loopne inc mov scas movsb notl (bad) fnstcw lahf ljmp stos in mov dec out std (bad) dec xchg or in aam and add ds sbb add add add adc dec jle pop cmp push in outsb repnz lcall push jns pop test in ljmp sub fstpl pop or push (bad) out int3 aam mov xchg (bad) jne rol nop insl loope int3 in lret xchg (bad) mov mov test add test in lea pusha icebp pop adc vrcpss popa push add inc jno into pop inc repnz jns dec (bad) loopne push ret pop add inc push loop jmp fnsave test mov mov xchg dec push and mov jne mov push mov and icebp clc rcll shrl aad cmp into push stos mov add in pop xor push mov es dec shrl adc push int3 insl sub inc in push cmp popf mov inc mov pop std lock dec fcoms shl lods sbb into mov sldt add add add add push push or xchg add ret mov subl je push stos or int3 cmp add jns je nop addr16 in sti xchg addr16 inc sti push outsb lods or movsb push outsl outsb mov addl sbb (bad) dec push xchg mov bound inc lahf out xchg pop jne rorl lret jg rolw daa inc add inc sub out jns popf scas js enter mov aaa pop aam xlat shlb or vcomiss call add add loop scas pop or or cmp fistl lcall sub bnd xchg xchg lock stos mov in fs jecxz pop dec and test and out scas mov js jno les enter xor push mov inc ljmp fsub sub inc ret inc add jns test loopne xchg dec add sub mov hlt cld inc sahf xchg jbe xor push xchg jb mov (bad) dec push add add add adc push icebp clc push or aad faddp mov sahf mov adc rorb std lahf jo mov pusha fnstenv push xlat scas mov pop or add push aaa mov lea pop loope and pop push push push (bad) out add hlt cmpsl inc xor imul in pop jne jbe xchg mov jmp xchg push cmp pop stos jae jle andl fs ud2 enter js fdivrs jns add test jge iret push bound outsb xchg ljmp mov fnstsw outsb sbb popa insl fadds mov stos cwtl rclb xor outsl cld adc enter lret xchg sti jb pop and xchg and xlat jmp push insl add mov pop cs pop call cltd in and mov cli jns push lods inc or je xorl jno push push flds rolb fiadd push adc hlt pop (bad) testb add add fildll xchg mov out call lods jne arpl push xchg xor mov dec xchg xor sbb scas add or sahf mov jns,pn int3 sub cmpsb jmp imul int3 xor lds mov sbb and push testb in ret flds andb nop dec pop xchg fidivr and or loopne cltd inc imul pop bound outsb movsl repnz popf inc push popl mov push fsubs sub in sbb and jo in lock sub ror (bad) clc movsb and fsubrs push mov stos out mov mov rol iret mov inc in sub outsb adc popf add lahf add dec loope shlb fwait pop daa imul add pop xorl (bad) jg mulb fisub pop xor lea mov test loop add add add adc mov and pop jns mov (bad) imul adcb xchg mov or sarb lock shr xchg test dec call aaa mov mov scas out pushf es into (bad) or out fs shrb dec negb sbb push xchg loop pop repnz bound add ret mov test cmc in shlb repz jecxz mull mov add add add adc repz or dec or pop and (bad) xor int3 adc cs scas mov adc (bad) sbb xor mov iret push lret sub decb fidivr gs ret jno stos jo fistpl mov pop cmp addr16 push mov int3 aad loop aas (bad) ljmp jo mov (bad) push dec mov push xor sbb lret roll add add add fwait jmp cmpsb push push jae push std adc pop add (bad) icebp out dec push clc push mov pop mov seta adc mov mov subl movl enter lods stos xchg inc inc mov sahf pop add jmp jge rclb hlt jbe out mov xchg or int push xchg push adc sbb mov xchg test mov xor fst jl and mov ret add enter add add add push mov xlat lds mov jl je adc scas ja mov pop sti (bad) jg jle popa test sub aaa insb push test movsl sub adcl lret dec mov aaa js int3 dec rol leave adcb lock jns int lret stc xchg sbb sarb cmp push cmc push add lahf lahf and mov adc mov mov int3 mov cld dec jecxz insl scas (bad) mov push add add add scas outsb loopne pop and dec ja (bad) mov popa sub xor and aaa cld je jne sbb jmp dec dec fs addl lods jg inc fnstsw sti (bad) xor pop or sbb jle bound insb jp push jmp or mov mov int loopne cmp mov lods mov xchg dec out (bad) jno stos sbb cmpl mov out push inc mov and add add add add add gs mov andl ret sbb daa or mov xchg (bad) pop aaa enter rcll jl (bad) mov add sub mov mov jb xchg std push jae nop mov outsb mov (bad) into cld add inc add loope and and int3 das sub cmp out fisubr inc mov nop and dec and pop stos cwtl pop pop and adc cwtl cmpsl push sahf xchg orl xlat add xor cmp dec lea push sbb add xlat mov pop fprem1 or clc xor out in mov les int rcll mov mov test fisub and mov push sarb cltd pop sbb push push ds mov adc insl xlat fs jge xor sub xchg jne pop dec ljmp pop push fcomps jno mov sub mov jo jmp xchg pusha std dec push jbe inc xor (bad) adc mov cmpsb aas loop xorl (bad) rol and dec lcall mov push sub and adc sub jecxz lods rcrl aas test add cmp std xor xchg loop imul push pop pop fldenv xor add cmc les sub fidivr inc xor fidivl fadds lret in out push xchg fstpl cli clc inc rorl lret add mov out loope andb dec pusha add inc mov pop lret inc stos inc or mov cwtl mov mov push cmpxchg fsubrl push sub test cld iret or mov inc jmp or test inc ret mov jl mov aad lea xchg adc xchg pop stos insl jecxz (bad) mov and adc sbb inc dec cmp xor sub xchg cmp add cwtl push enter adc lods (bad) lret xor fisubrl in (bad) sarl movsl loopne stc aaa jno mov add scas lods (bad) cli pop (bad) rcrl jmp in enter mov dec cmp pusha dec addr16 adc cld das push jg and leave fs mov test repz and mov dec push lock negl roll jne test cmpsw or or mov imul add add mov pop mov and daa xchg adc push ret in adc fidivl mov jg push mov fisubr push adc adc add fcomi xchg enter js aaa pusha inc lret cmp mov in rol (bad) xor int jnp cmc pop stc out mov rcrl jg lds cmp xchg arpl stos dec fdivs mov push mov (bad) fnstenv insl cmc sbb add pop jp and add add outsl lods mov cmp pop into fbld pusha aaa fstl std and leave adc dec lea mov not mov ss jo out aas mov shrb jecxz pop xchg std push loop (bad) xchg adc cmp rol (bad) sub aam outsl xor pop bound mov cli dec adc mov frstor inc enter pop xchg dec (bad) and sub dec out mov push sti out rorb movsl mov dec sub cwtl add pop dec sub cmp sub push xor pop fsubp mov jne lods lcall (bad) shll scas add sti (bad) xor test pop popf push xor daa aas cmp mov adc aad in mov mov or xorl dec enter push mov ljmp int3 xor loope jecxz shl pop or sub sbb sbb xor mov data16 or add add pop popf out push repz insl inc mov push mov push mov out fsubrs sahf sub out dec mov add stos fstl mov adc aam icebp and pop jae pop dec inc fiaddl popa add adc icebp jo mov lret cmp pop mov es pop mov in test mov dec push cmp cmpsb fwait push sub fnstcw add sbb mov (bad) in test add add add and sbbb dec sbb mov jg in mov notl xorl mov push inc (bad) fnop (bad) movsb imul or push mov and rcrl in iret aad test (bad) xor pop clc daa xchg sub mov push flds jnp ljmp or out xor add out push cmp inc add mov (bad) mov hlt cltd out stc das bound mul adc data16 xlat jno xchg xchg inc mov add pop pop fucom and pop jb (bad) (bad) out mov xchg aas les fmull mov adc cmp rcll leave and (bad) mov jo ret cld xchg imul mov push jbe scas (bad) mov dec (bad) loopne mov cmpsb adc std pop mov xchg push test (bad) mov adc push andb mov xchg cmc mov jae fldl mov add (bad) xchg dec arpl jnp mov inc push cmp lcall or mov sub movsb ds lods ret mov outsb jp shll pop insb mov dec pop lods xor adc or add adc dec and jo pusha inc jg jbe les ljmp sub jbe adc js sbb mov and sarl inc push cmp sar cwtl call xchg add add pop outsb mov fsub cmp and jge push dec and test mov ror mov xchg dec andl or jp (bad) cmp insl adc aam sarl mov mov pop movsb push std fidivr rcr cmp pop mov cmc in lahf xlat push in adc in fdivp fnstcw lods ret jp (bad) push push loop push sub out loop jo add sub das add jp add out lods add add add lock (bad) cmc mov fstp lea ja sarb push mov add mov sarl ljmp inc in gs repnz gs mov lods jg addr16 js inc (bad) push or cli cld pop cmp cmpsl mov stos xchg fs mov inc inc inc roll cmp xor push outsl iret cli fdivrs jp pop repnz inc xchg mov mov out insl add sbb adc negb lods gs pop es gs leave popa add add add cmp jle ficoml dec aaa or fisttpll xor push sarb std int xor sarb xor call fstps cli lods cmp mov or into mov jle mov sarl imul jb aam mov add nop das lcall in jle push mov insl xchg test xchg pop test and and lods jb and add add add add repnz xor ret inc mov into incb or sbb jbe adc sub pop push cltd inc out int and es lock push cmp cmp repz lea aas adc out cmpsl inc sub sahf jmp sahf les clc dec shll (bad) mov rclb pop jge shl fsubrs test mov jne push (bad) (bad) and pop pop sub lcall mov or das aad popl adc sub repnz and fnsave xchg aas imul rcrb iret ret fimull inc and lret adc je (bad) push ret dec jmp xlat out addr16 pcmpeqd pop lods mov dec push or aaa fstl jmp mov add scas nop mov cmp out into dec psadbw or (bad) ljmp insl in or cli test out jnp lea bound pop pop out cmp add add loop add cltd aam add divb stos imul mov sub pop lods test xor inc std xchg sbb xchg xor mov push mov sub pop repnz hlt es sbbb cltd adc dec xor leave in jne (bad) adc repnz inc sbb xchg pop rcr test inc sub (bad) scas mov jne pushf and idivl cmp or xchg push lcall jp lods call add add scas faddl cmp pop mov inc sub xchg jno int3 cs add mov repz insl inc mov (bad) jne (bad) jno stos add pop mov pop std scas lds push push adc mov shrb xor imul jae lret cmp (bad) mov inc inc (bad) (bad) jl insl or jle aaa call xchg push inc push popa jp pop jmp xor mov testb leave in int3 fsts dec or add add add pop jne lahf aam mov xchg cmp adc rol sbb pop push pop (bad) in in dec sbbl les (bad) xor mov mov mov fisttpll (bad) mov add push add dec inc add out clc stc insl inc lods add jb xchg ss sub and mov jl movsl pop lods dec mov mov sub inc mov aas push add push fucom jmp fidivr dec pop mov xor mov pushf push iret dec add add add add inc lahf imul add in mov xchg mov jp bound rorb cld cltd std mov xor imul and jno inc test insb sub cmp xor (bad) stos pop jnp mov jbe mov xchg add mov xlat jno xchg fadd pop repnz pop int3 hlt dec xchg and fldenv push pop dec cmc (bad) xor mov test sub idivb push ss test outsb mov mov rcl (bad) jae or repz je sbb xor scas fidiv in loopne sti pop arpl mov mov jo mov mov push mov dec ss fisubrl out push cmp dec fadds lods leave mov pop mov cmp add xchg mov add sahf js or movsb lds ss fnstenv roll cmc out mul fidivl orl xchg pop add (bad) fcmovb cmpsb cmp outsl add cmp mov mov mov mov add into jmp push aad out xchg aam lock push arpl (bad) mov sub dec push mov jp repz inc addr16 mov mov (bad) xor adc ret mov pop test pop into dec push pusha (bad) imull mov enter fs test mov fbstp (bad) jl inc iret xor dec cmp and sub pop cmp and add add add add pop test fldcw xchg insl negl pop mov sub mov dec cltd daa lahf int rorl scas inc cmc in mov addps or pop (bad) repnz xor push fdiv bnd mov or (bad) (bad) mov xchg and (bad) (bad) outsb add jnp and pop jge mov xor rcl sub das push cmc int shrl and cmp dec dec dec mov jg repz xor jne pop orb (bad) mov adc add add xlat cmp (bad) adc mov mov fisub mov lods mov mov xchg and aam test flds push push outsb repnz insl imul pop lods sarl and lea cmpsl push inc inc mov inc and addl sub call hlt push add push push pop sbb pop xor inc xchg test sub incl in pop stos sbb sub mov data16 add add add adc fwait nop sub js notl pop pop cmp pusha insb outsl pop into xchg fistpll test int dec cs or sbb fwait dec int fsub std cmp cmpl int add adc out dec push cmc dec inc das xchg fs adc xchg sahf push dec push and dec mov inc xor jle or loope test ret insl ljmp pop fnsave push (bad) mov push fstpl cld add add add add cmp subb xchg (bad) cli mov dec jmp rclb stos insl sbb gs push xchg fstpt cmp jg or cmpsb push mov inc scas repz xchg push push dec vzeroall rcll std dec paddd fdivs lahf mov dec push and cmp or cmp aam roll adc pop lret xlat fistp out gs (bad) scas dec lret int mov mov add add add add adc push sub mov aad jmp (bad) push adc pop outsb imul xchg pop mov cmpl pusha sbbl adc inc test mov jae push movsb jne fwait imul xor sahf pop xchg mov add cmp jne sbb jbe jp insl sub lcall dec adc arpl jg int je (bad) jo push adc adc inc inc in push jno push enter cld cmovne add sbb or addr16 ds adc and or sbb add test mov xor sbb sub jmp aaa add push cmpsl dec cmp xchg imul mov cmpsb mov (bad) stc arpl div stos push rorl (bad) push addl add mov pop xor cmc test xor ss or imul mov imull rcrb xor es fidivr fidiv xchg popa xchg push cmp mov test adc aad imul scas xchg loopne loope rclb push sub scas jns and hlt lret and faddl (bad) (bad) mov jnp mov dec loope jp aam out push leave mov shr das aaa sub iret (bad) cmp sbb (bad) xor add inc push pop dec enter add fcoms in mov xchg mov add add add daa or jbe gs jp dec popa jl clc push cs push or add pop stos and sub dec (bad) idivb lahf mov cltd insl fwait pop sahf fnsave jne pop cltd adc insb mov and lods or push ds vmovss pusha mov fistpl (bad) sti nop les jl and mov lret and mov in add mov mov mov cmpsb mov je and rclb sub add add add jb dec movsl pop stos insl push ds das repnz inc into add mov in mov dec mov mov cmpl xchg aam dec int3 andl lcall icebp mov mov jl test aas adc popf rclb notl insb mov fisttpll outsl dec rcrb test out sete fcompl clc ja cmp dec xchg jle mov das gs pushf ret add add add add js add cmp pop inc iret xchg stc loop cmpsl mov repnz out out or xchg mov pop js cmpb mov xor jmp iret adc aaa fistpll cmpsb mov int3 scas call mov popf fwait imul into mov scas or xorb inc sub les repnz push or jne lds rcrl adc mov hlt cmc (bad) xor cmovno inc push je add add add add (bad) pop pop rclb int3 clc outsb pop xor imul sar and dec mov lock sub mov into or data16 int aad repnz sbb cmpsb (bad) or in lock in xor dec mov jle xchg movsl jge aaa push lcall (bad) xchg aad jg je faddp jmp sbb data16 imulb adc shlb sbb je fdivrs adc aas ljmp add add add xchg mov jecxz lea sti mov xchg push repz dec loop xchg jl bound pop test sub add (bad) mov push cmp sbb test std sub cmp dec mov (bad) out xchg inc outsl daa mov fs mov add mov sbb test and jb inc xchg les in mov push add jns and add jmp (bad) aaa ja aad ret pop mov xlat mov mov add add pushf lcall xchg pop lahf imulb mov xchg sub and cmc rorl inc mov movsb and repz inc sbb add dec push in push mov addl cmpsb orb lods xor jle inc popw mov outsb cwtl (bad) das adc push lea or dec xor lds sub shl mov (bad) idivb pusha stos imul hlt pop and cmc mov pop imul mov je add add add or pop jle test inc loope pmaddwd ljmp ret movsb daa mov test xor out jge push imul or ficomp mov loop (bad) (bad) call dec inc adc jns fst pushf pop loope test sbb jle or push (bad) leave mov xor in insl push mov xchg push insb sbb pop movl cmp rcr mov and (bad) mov mov add add sub stos aas mov push inc ret push outsl xlat lods mov insl (bad) mull popa sub dec daa dec mov xorl jmp mov jl lea in scas mov inc mov adc imul mov mov xor xchg sub out mov es loope push (bad) out insb loope mov adc push push sbb mov and test fwait jae jl lcall ss xor lret mov add add add add jg icebp js addr16 xor adc mov push xchg adc sbb imul fldenv pop push push sti inc movsl cmp xor mov das pop or sbb sub lea aam call and sub (bad) push sub add add jge in icebp or imul push lods pop or mov push add pop lods (bad) es add add add push (bad) (bad) shufps xchg dec sub xor push notb out insb call mov dec push dec outsl pop xor jnp mov jmp popa push and push outsb ljmp call xchg repnz (bad) cmpl loopne rclb sahf cli push sbb leave in push out lret fsubrs aad push push pushf jae jmp lock xor pop pop pop mov mov rcl xchg xor int add add mov adc mov bound ret pop pop mov sub addb fisttpl lret push add outsb and cmp dec clc or xchg test mov jns popf movsl push (bad) ds mov fisub lods dec bnd fisubl inc xor adc js cmp push test aam xchg in les ss jge jge jbe lds pop das ficompl repz push fdivp add add add add je jae xchg movsb nop xchg and clc push xor hlt arpl cmp ss sbb imul hlt xchg dec mov (bad) cmpsl rol imul jo pop out xor inc mov or jae mov xor int3 adc clc repnz (bad) leave cmp xor xor pop xor add in dec cmp fimul jb nop sti push icebp xchg add sub add add add add shll pushf or pop push xchg xchg jg loopne xor (bad) sub js into push ja lret dec jno aas nop leave mov andb in lock sbbb icebp in mov jmp stc sub jo mov jp into (bad) dec lcall pop lock popf hlt inc lods (bad) jg push jle lods clc cmp cmp adc and jmp fist push and into push xchg add adc int add add add add int pop (bad) xor stos sbb adc (bad) fidiv push mov loop stc push iret int3 (bad) into popa (bad) cs pop adc cmp ja add je insb mov jns mov dec xlat sub js mov outsl dec cmp jp sub aas dec xor sbb xor popa sbb (bad) out mov cmp das iret adc out cs mov outsl nop outsb insb leave in lahf jl out and add add add in je std aad ret imul adc adc dec adc pop adc ds enter dec jl sub mov xchg negb and pop insl and gs sub push or outsl mov jg mov test mov sub icebp dec shl xchg dec sbb sub and cltd mov xchg pop out test js mov add into mov sub (bad) jmp sub add inc push xlat sbb cmp jl mov mov stos xchg fsubp add mov xchg mov cmp or xchg dec push mov add mov xchg lds add sbb jno sahf (bad) mov fstpt inc or pop mov push xor (bad) (bad) cmpsb fdivrp cmp aas mov sbb cmpsl icebp lock dec aas inc xor xor je mov das sbb add shrb mov cmp jle mov or xor movb and dec adc adc subl and inc push xlat insl jge mov xchg jl sub mov lret lcall adc in fs rcrl gs add mov repz cmp (bad) jle (bad) xchg mov std js sub pop movsb jo mov inc fisubr cmp test add add in in and push ret inc movsb stos push (bad) or ja cmp notl add add add jne cmp pop ret int and mov fdivrl lret insb mov imull mov mov in in adc pop cmpsb popf es cwtl push (bad) stos sub iret arpl pop hlt aas jnp leave xor mov sub pop popf adc sbb inc lret daa ljmp mov mov or out scas mov push repnz mov iret cmp ss xchg pop xor mov pushf fwait add or xor mov cs xlat xor clc mov mov adc pop sarb push push sarb les push pushf push pop push insl xor dec mov sbb sub lods mov rcl addl ret push xor mov (bad) ja std cmpl cmp push add add add add adc js ljmp and xchg inc out jmp aad bound jae jae negl pop xchg push rcr and stos gs pop and mov popf mov xchg jl mov test jl movsb sbb mov mov jl and cmp mov mov pushf dec mov sub repz push jne pusha xor adc xchg cs daa mov add add add add inc cltd lret icebp sub in push repz dec adc (bad) mov loopne arpl sbb sbb std jge jp xor es jecxz jo and add cmp inc ja sbb push lods pop inc sub fildll or jmp mov jg xor push xor outsb cmp repnz gs sub push loopne add fist jbe inc sbb fidivrl add pop insl cli jge mov dec xchg test lods imul inc imul out fistp mov in aas xchg (bad) out sbb lea xlat add lcall sub bound or push cmp pop xchg mov test jmp ret ja aaa cmpsb loop or fnsave mov in stc mov push call cmp test xlat mov mov push or lahf sbb lods hlt inc hlt cmp push or jae das shlb add add stc mov add adc or adc repz addr16 mov dec xor (bad) loop out sbb and std jmp ficoml test xchg jmp mov xchg scas ss aad and dec inc adc inc (bad) popf and mov mov pop mov add in mov push or fs jnp adc sbb lret xlat adc sahf ss sub pop mov add sarb lcall add add add inc add stos lock mov imulb push ds ret push dec sbbb mov adc jae inc push repnz pop cmpsb gs add cmp fstp cwtl daa fsts jnp (bad) out popa je xor xor xchg or and (bad) push stc (bad) rcl mov pop int add jl cwtl mov mov stos jb outsb jge dec test dec inc (bad) int aam popf stos (bad) (bad) fisubr test add pop sbb outsl pop lret add add add add add cmp sar cltd jmp mov jbe mov fldl mov jbe mov mov pop sbb jecxz lods loope mov lock xchg clc inc int lret imul xchg push (bad) cs (bad) and jle mov sub add jo,pt xchg mov pusha mov scas mulb inc inc sbb popf aam ficompl lret add adc stos repz add add add add rcrl test enter xor xor pop adc test mov push rol es jecxz cmp das push shrl push mov sub cmpsb rorl inc dec xchg jb lahf jecxz (bad) test test mov push inc add rorl int cmpsl rcll loopne repz in in mov negl add insl bound jg cmove add add add xchg push sub (bad) mov xchg gs or in roll lahf scas add adc pop jg inc push xor push sahf and mov push mov mov lret lret push test and rorl negb and sub sbb jbe push jb jnp mov es int out fwait in cli sbb mov cli dec aad inc adc mov mov (bad) jno add test mov hlt sbb cmp mov gs dec push and mov (bad) fs hlt mov or cmp lret bound lea fist (bad) mov adc imul lahf push pop stos movsl pop in iret into cwtl xchg add imul cmp and test jmp jne test aam adc fwait or push cmc cmc scas cmc cld push push cmpsb cmp push dec and mov es test adc add add add or negl adc aaa jae jns std mov addr16 mov xchg dec cmp sahf bswap adc and dec orb jg outsl roll cmp cmc jb or nop dec push and sub cli sbb leave pop dec jnp fdivs lret push flds mov mov divb dec mov (bad) stc or xorl dec mov lock xchg pushf mov push add add add add ret add sub jecxz int (bad) cli out lcall mov cmp sahf add lahf jecxz inc outsl aaa (bad) or sti or mov vmovss jg fsubl loop,pt mov dec xor push out fildll xor mov dec es xor xchg ret ret mov xchg sub je (bad) mov insl arpl (bad) pop (bad) stos cmp sub add add add add adc test scas lea dec add rcrl xor subl daa cmp xchg pop and push sbb shl (bad) lock stc arpl sbb movsb push pusha and sar push imul jmp cmp aam push ds aam push mov cmp xor cmp movsl sub scas sbb cmp int3 mov sub mov fs adcb scas enter andl cltd mov mov loopne pop psllq shll xchg adc mulb xor test push mov mov cmp pop fisttpl mov xor cld test cmc pop inc enter ret mov fidivl jb out jae push repnz inc adc stos mov jl out sbb insb pop dec in stos hlt in insb sbb mov (bad) test sbb test dec add aas rolb addr16 jl icebp jns add add sub mov cmpsl shr js (bad) repz mov mov sub cmp jbe aas lock or mov dec jp xchg jnp push mov arpl or les das lahf mov lock and lret das push xor push nop (bad) lret sarb in lcall sar test dec int3 cs and jmp das xchg jle jmp sub or fwait insl inc mov cld addr16 xchg add add gs es push sbb dec pop jns cmpsl add xor xor adc sbbl icebp mov xchg push test lea fnstsw les xchg mov xchg add jb fcomps aam jl xor or push shrb lds add (bad) mov xchg or rorb stc sub adc cmp add ret jno jbe into stc pop sub inc mov int xchg aad les xor scas stos fdiv add or retw push inc div imul mov mov mov sbb cmpsb cmp fstps (bad) into or icebp xor sbb mov xorl lods or lahf scas mov inc push fstl add data16 dec mov insb test iret pusha cmp sub xlat push adcl movsl fs push fldcw cmpsl push aam xchg imul out sbb pop in enter into cmp bswap mov test add add add add jmp add pop sbb lahf mov inc mov movsb dec push shlb lcall test add insl lahf inc pop (bad) stc adc push outsl fst cs mov mov gs out mov outsb lods push jp jmp rolb xchg (bad) in decl stc sbb (bad) dec jno and (bad) push into xchg inc sbbb lods es aam sub dec movsb xchg daa int3 ret add add add cmc out push (bad) push ficompl xchg pusha push dec add rcrl mov push inc push adc ss sarl sub (bad) iret stos dec int mull push add or (bad) fldl inc mov (bad) mov jle bound (bad) sbb jbe loopne out fwait stos or cmp (bad) mov cmpsb push mov popf (bad) into sbb loop test cltd repz and mov ret repz (bad) mov aaa xor lods inc xchg aam lret mov popa add add add inc movntq popf (bad) xchg jae cmpsl xchg pop in jmp add push jmp jle stos sub cmp cmp nop pop std dec test mov mov loope dec hlt (bad) jne cwtl sbbb lds xlat stos push rclb (bad) mov sub andl fstpl xchg repz int mov push and stos insl sarl int3 cwtl icebp mov rcrl cmp push jmp add add add add (bad) sbb data16 sub inc fcmovnbe ja ror xor pop test shr push mov loopne lods leave loop add (bad) ja dec xor pop or sbb data16 arpl fs fldcw add pop xchg stc loopne in stos and fwait out incl pop add das lret or dec test jmp into fdivl push pop cmp sub cmpsl adc (bad) or (bad) and jge fs insb dec mov add add cmp add in push (bad) loop ficompl mov xor lret pop popa aad jns mov enter ljmp test xchg jno jns aad into and insl dec (bad) mov lods dec jb stc in dec sbb lods imul adc fnstenv aaa (bad) sub repz rolb (bad) mov pop cmpsl rcll mov sbb popa out in inc cmp test (bad) push pop sbb jp xchg xchg lea scas mov or fmull rclb sarb lods push andb ret in push mov cld adc cmp in ficomp aaa and clc mov adc (bad) xchg fldt and cmpsb int3 lods test popa outsb enter cld shlb test or push dec and sub xchg pop loop sbb pop push fildl add add add inc xor popf xchg out jmp data16 daa test es pop icebp icebp repz add std cld ljmp adc xor xchg xor ret nop fcoms and popf ss pop lcall mov dec jb xchg cs clc sbb out jg pop ret inc scas mov hlt sub leave cwtl cs push aas loop in pushf push je aam jo (bad) and xchg sub out add push cmp pop (bad) lea sti rorw nop mov xchg sbb mov sbb imul shll push dec repz lds cmp xchg and int3 sahf ds clc stos gs inc jge addr16 insb aad dec lock mov sbb mov lods jmp or and loope pop sub imul in adc fbstp cmpsb cmpsb adc pop add add add add dec cmp mov pop add popw loopne xor pop aad jmp in es rcll xchg mov jmp pop stos movsl mov push out pop xor loope xchg sarl dec popa pop inc stos aad and inc push and sub sbb dec jb in push loope arpl scas push rcrb fdivl test stc mov fs shlb fnsave int3 sarl dec orb mov lahf popf pop imul sbb cmp repnz dec shl daa cmp gs push (bad) pop mov mov and addr16 or push idivb pop (bad) in mov xor mov sub sub repz jp adc push test push cmc dec jno ds out bnd rcr push xchg inc pushf test dec jo pop jns decb xor movsb je jne fbstp lock and es push mov stc pop mov mov lds mov arpl sbb mov ret test push pop ret xlat (bad) push enter fisttpll test mov add xchg mov and fstl mov push (bad) push loopne adc outsl je cmpsb stos pop ret outsl sbb sbb adc inc jl test jp xchg loope imul (bad) xor mov je mov mov dec pop dec jmp mov or (bad) fwait imul insl mov pop das jbe mov and or mov xchg jle in mov outsl cmp outsl push cltd test faddl sub out mov sbbl cmp mov push lods js lret imul cmpsl add mov es pop lret mov or pushf popa ja pusha popf ljmp insl das fsub inc adc dec pop sahf scas cmp add add popa outsb pop adc adc addb add add add add sbb sbb je sub push ret pop pop nop jmp dec test adc call addr16 cmc mov mov jg int dec addr16 iret fistl dec xchg lea jbe aad in ret scas xchg mov (bad) insb arpl in fsts push cli inc add roll dec sub outsb sbb add xor sarl ds (bad) jecxz test jp sbb adc add jl and mov dec pop testb inc (bad) incl inc out (bad) and mov pop dec cmp adc pop sub scas pop cmp pushf cmp stos mov out int (bad) std leave js imul flds xchg aam cld sub sub xchg nop push negb imul in mov sbb std in mov jo pop cmp adc sbb cmc out nop xor mov inc lods adc jle mov push js dec daa outsb cmp dec fnstsw mov add sbb pop add add add xchg into lret enter movl rol aam add pusha outsl xchg fbld xchg div jl pop loop push jl and stos jmp xor add mov rcl (bad) pop mov xor sub inc rcrl sub pushf out mov rcl jle jge enter subl xchg dec movsb dec jb in push cmp repnz mov (bad) fcoms rcr push adc out pusha call lds add add add add lcall (bad) dec stos je sbb lret scas push setp rcrb xor cmpsb sahf lea popf fisttpll addr16 jp add cld and flds imul loope push decl pop aam sbb pop ficom adc dec pop stos flds jl rolb aaa xlat sbb out (bad) mov je shr lods mov jge and adc push ja cmpl add add (bad) mov call or adc dec sbb sub and fdivrs in fucom add jnp inc addr16 or sbb push clc mov xchg xor push cli inc stos mov in xlat mov cli mov aas fildll (bad) and pop imul xor dec mov jbe pop ss pusha adc sub popa lret (bad) mov xor pop cmova (bad) into rorb inc test add add add iret mov std arpl mov lret int3 fs adc jg inc dec and inc push sti and jle pop xchg mov pop pop and mov dec dec mov dec mov jg and lahf mov rcrl cltd sbb sbb incb xchg fsubrs jge or lea loope inc push mov cld fcmovb movsb ficomp ja xchg push vmovss push jecxz ss lea pop xchg cmp add add add cmp movsb clc addl inc xchg xchg cmc (bad) inc xchg scas dec adc int neg rolb (bad) aad popa mov mov push cmp (bad) jns outsb inc aaa mov scas push push mov pmulhuw mov loope sbb (bad) adc cmp mov pop adc push pop orb insl (bad) fwait stos loopne popf stc jmp fimul mov jnp mov or movsb addr16 aam xor xchg add fnsave add add aas add mov les mov or push push sub fsubl pop test mov xchg lea pusha dec sbb aaa mov test xor inc inc push in jns pop push imul mov stos mov xor push cmp fnsave cmc gs movsl orl (bad) sbb insb adc sub xchg lcall xchg out push or sbb cmpsl pop out or add (bad) in stc je xor add nop cmp and lret (bad) lods sub fsubrs roll pop push or lcall add push sub adc pusha jecxz pop bound xchg imul inc pop jecxz ret mov jae frstor xor add mov jns or (bad) lea aad add push popf xor pop call aaa xchg mov push iret mov shrl add add add popa shrl cwtl xchg push aam jmp xor and rcl or mov and aad lds add push decl inc inc lock test xchg xchg cmp fsubrp dec out hlt or jp call ret mov scas jbe xor or jg pop data16 xchg mov jbe call adc cli popa mull movsl adc cmp ds mov in mov or loop cmp mov add add mov arpl pushf dec pop sarl xor clc dec hlt cmc cmc add sub out pop int pop (bad) movsb xor ja int push icebp adc pop rcll mov jno repnz mov sbb xchg (bad) sub mov lods daa fildl (bad) mov xchg addr16 push push sub call inc repz jno idivb in xor lea call sbb ja (bad) fstp jmp adcl add add dec addr16 inc sti out jae or jns jge lahf adc (bad) sub sbb push les sub sub jp or sub cltd (bad) jo mov das sub xchg add call push dec sub xchg test adc lea out mov in jl cmc adc inc lods in fdivs push cmp pop pop clc sbb dec std arpl (bad) sbb jge mov (bad) mov loope jbe repnz add add add add jp sub flds daa ljmp cmp pop mov int3 jmp mov mov push cmpsl or sbb popf shlb into mov in jb mov cmp or mov in add in in rcrb or pop add push out mov insl sbb pop pop xchg jge cltd mov mov jns aas rorb push pop sub sbb out inc jo push lahf cmp xor movsl xchg add add add addr16 mov mov imulb cwtl loope int3 mov push ret inc cli nop xchg fdivs adc xchg mov mov stos stos push adc inc xchg test and dec iret dec je push shrb mov push push xchg add notb in sbb inc add mov jle arpl add push and cmc aas cmp lds insb daa mov dec (bad) sahf mov pop imul loope popa dec jbe stos pop add add add add jmp hlt mov inc (bad) data16 lods (bad) mov rcrl xchg shlb aas inc pusha inc or stos or fidivrl add (bad) popa fist xor pushf lret dec dec lret mov sub mov and mov test adc and cmp sbb stos movsb and cmp stos mov paddq add and sbb mov loop enter jecxz add mov add add add mov js sahf jne (bad) in add pop sub lcall inc add dec imul jb cmp loope inc nop push mov ja pop jne repz dec std aaa adc push inc mull cli sar dec jle mov insb and int push fucom rorb aas (bad) jp xchg push add push repnz cmc out repnz sub dec fcomip loope lea nop mov aad mov add add add add stos cwtl aaa test dec test xchg cmpsl adc or push push and sti lret mov mov ljmp cmc ret cmp popf bound jnp pushf outsl jge mov iret push scas mov sbb jle bound sahf idivb lods adc mov sub fsts adc mov lods rolb dec out out lea add lods or cmc cmovbe sbb add add std scas sbb gs insb xor outsl in mov xor push sub xorl mov lcall arpl rolb mov xchg inc xchg fucomip push data16 out pop lea (bad) jecxz call pusha pop inc mov mov scas mov mov das mov push xchg stos sahf mov addl sbb push xchg lahf bound xor popa push stc popa pop hlt jo jg test int3 xlat aas sbb (bad) dec (bad) lods mov and int3 in insb jg inc (bad) jb je dec repz and pusha popa pusha add jne inc int3 xchg sub iret mov xchg int3 dec mov mov mov adc add adc jp repnz mov fstps jge flds xlat outsl add movsb mov cmp xor xchg pop fcmovnb mov jo lahf ss push mov cltd lret add hlt (bad) dec (bad) stc inc mov fs sbb jp sub adc lock mov mov je jl test repz in lret ja (bad) ljmp ret out mov sub and push inc repz mov pop pop xor pop cmp push inc jo cmp (bad) xchg (bad) jns aad pop outsl stos adc lret lahf xor sti sbb daa mov stc pop inc mov out fcompl mov dec jbe clc and ljmp pop dec add or dec (bad) xchg in mov mov stc lock xor fsubl shlb xchg shll and int3 dec push jecxz push rcr sub fsub pop test vpshufhw sbb clc pop scas sbb mov aas loope (bad) (bad) jle pop cmpsb mov pop fsubl lds mov dec cwtl in cmp ror jmp mov pop sub cs jbe mov add add and sub bound pop (bad) inc inc out sub or dec jnp cli aam cltd (bad) fcompl or jae stos fidiv dec stos inc cmpb cs push ja pusha in mov cwtl nop clc jmp cs inc push (bad) mov jmp cli mov imul stos std add mov push scas into pop mov in rcl out jne (bad) lahf xchg push cmpb xchg sbb (bad) push icebp movl add add sarb sbb mov outsl xchg push shr ss or cltd insb daa sbbl push lock stc cld push fwait cmp mov push push pop hlt sbb xchg push adc or arpl repnz dec std test cs dec or add test and aam fs pop sbb shll jmp addr16 out inc fs adc or push stos mov lods xchg int3 inc (bad) test jno stos add sub fist add test mov pushf (bad) (bad) in sub mov iret mov negb sub mov or mov sahf add push mov rcrb cmpsb inc inc aaa add cmpsl fldcw jmp jmp mov repnz dec or push test andl stos xchg xchg out imul cs ljmp aaa cltd adc das lods repz inc add and les add add ret mov fnstcw pushf jns imul ret xchg test xlat nop insl or (bad) in jne mov sahf mov insl hlt mov scas stos adcb aam ror jmp cli xor pusha xor mov pop das push dec and push mov mov add cmpsb xchg rcll ljmp jbe inc jae push sub jmp mov mov push and or (bad) in inc sub pop cmp aam inc mov add add nop gs jg lea ja jnp rolb scas jno pop (bad) rcl imul mov mov call xchg pop and cmp cmpsb jle cwtl jno ja sar jbe mov and nop in push cwtl fstpl or mov sub sub fstp js dec ja in sarb inc sbb shll int3 mov and or scas sbb cltd pop pop sub jo xchg mov push ljmp add add ljmp or inc and das fisub repz jbe stos rorb cmpsb and popl dec les shrl cmp mov inc ret (bad) repz clc lcall das ss jl pop jns loop gs cmp push sub push std dec pushf dec and (bad) (bad) popl xor (bad) mov mov and jge sub adc lods sahf loope jmp jne or js lret stos inc adc cmp add add add rorb sub adc push jnp nop mov (bad) incb cli rcrb pop hlt mov mov mov and mov (bad) push jmp mov jge rolb push das sub pushf pusha pop lea mov bound data16 xchg cmp pop and mov pop push pop jns scas shrb sub add out and cmp push mov mov (bad) sub in aaa mov add add add ret call mov cmc or cmp adc push dec rol xor hlt sahf mov pop or dec scas lret leave rcrl or repnz add push jg fildl mov jns sahf pop add dec adc dec fstl adc add movsl adc aad push mov mov (bad) adc xor pop std in adc pop sbb mov jp je loopne xor xchg std jbe roll xchg incl adc xlat jnp mov enter aam movsl sub gs int mov sbb mov mov pop jb mov popa out mov into fiadd xor adc (bad) inc popf dec icebp inc add mov dec imul loop pop dec div xchg rcl hlt xchg adc xchg fistpll lcall fsubrl scas push ja aas lahf xor sbb mov dec jge (bad) dec scas cmp xchg jle pop add bound add add add shlb mov fiadd adc scas lret cli and mov shll jnp cld js gs ret xorl cld repz cwtl mov lahf (bad) sbb inc xor add repnz push sbb jb pop push or in xlat enter jb mov mov bound js outsb pop jae lods mov into cmp push push inc jbe cmp xor add mov jmp cmc jno out adc inc enter mov adc push mov xchg mov js push mov fldenv lret repz lret imull fdivl int3 rcrb inc xor mov xchg dec fisubrl (bad) adc inc movsb test lock into dec xor arpl inc cmp jno xchg rcrl arpl mov xor repnz cmp stos enter pop out add add add nop inc inc cmp jo xchg xor cld lret add shrl stos inc xchg iret cmp cmp (bad) aaa lods sub pop lret push sub out pop fcmovb sahf xor dec pushl fcompl and test insl outsl or cs outsb icebp stc (bad) imul rcr fidivr (bad) call jp arpl add add stc cli pop push popl jnp jne les daa and nop lods aas scas in fcomp add lahf addr16 cmp rorl push imul cmpsl cmp xor mov das lret out lods jns inc push xchg stc test cmpsl stos mov (bad) pusha inc xor jg,pn (bad) movsb ret repz ret stos cmp jae test pop aaa loop ss or ja xchg adc push cmp movsb mov dec inc cwtl xor lcall adc dec xchg or or outsl rorb add add jo mov cmp mov stc pop lods mov dec in es pop fcomp dec sbb or jl in xchg mov push fmul ret aad pop addr16 or fisubrl movsb mov repnz or xchg push arpl sbb push loop sub mov popa sbb xchg cmpsb loope gs into mov repz push sahf pusha les inc arpl aaa rcll dec cs push stc cmp iret sub or movsb xor jae call add add add cltd fadd ljmp int (bad) xor jns push addr16 mov and (bad) or mov out mov fstps punpckhbw push aas aam pop vpsllq lret xchg ss js repz adcl inc xchg jmp div mov jge dec xchg psubsb fimull push mov negl sahf rorb xchg cmp push and push (bad) enter leave loope inc call add add add dec inc jb movsb daa loop xchg mov cmp mov push lea (bad) xchg das inc sub pop inc mov cwtl jge out mov loopne das and pop ror lcall fisttpl sub outsl aaa in and push addr16 push mov subl aas movsl push out cli ror inc movsb inc and js sub popa icebp jge mov push sqrtps inc in xchg jmp dec (bad) cmp push arpl stc fild add fmull sub add sub mov pop les nop inc cmp nop inc jp js into sub jmp stc and outsb icebp pop mov lods dec scas dec out sub or inc adc cld xor mov movsb std pushf in sbb scas push nop cltd cmpsb gs popa cmpsl pop fild insl pop mov mov sbb lahf (bad) xor test (bad) mov pop push xchg mov (bad) mov jg and out push fdivrs loope data16 add out ds jae jbe add add add jecxz sub mov xchg lds jp jo mov fisub push jg mov lock ret aad jl mov inc and xlat cmp push lret inc xor out mov cmp or inc and (bad) jnp mov push jle mov popf cmc mov adc shlb lcall cmp sbb aad jns push test or mov or fdivrp push sti insl inc adcl (bad) ds and add lds add push jbe and fs mov xor mov xchg andl sub cltd addr16 sbb pop xor shll out in xor pop mov mov enter jbe pushf dec dec jg xchg xor jecxz inc mov (bad) mov jge (bad) xor and or push or mov mov dec sbb cmp shll jle push lcall add add add push sbb mov dec dec push inc mov mov sub cmp pop ret push push push loope lds aad mov test test cmp rolb enter inc andb rolb icebp add hlt inc mov xor icebp push push jne in add je pop xor mov lods inc xor dec and jno dec push inc es and mov lea fsubrl or xchg jl movsl in ss inc int3 test jmp cwtl fimul mov xchg add add xlat mov (bad) sbb mov pop fisubl add jp xchg lcall arpl (bad) dec movsb ds mov dec or push mulps loope mov test in jmp call lahf inc dec in std mov lds iret pop loope or mov and fistpl pop sub test mov scas movl sub and imul fs mov or jb mov incl add add add pop cld xor xor fwait mov xlat test sar sub jmp scas xlat ret in jae xor sub push rcr outsl cmp inc cmp push fs add xor call scas mov push xor sar and jle lods sti aam aas jmp pop insl sbb movsb and (bad) mov mov mov xor clc (bad) pushf rclb cld (bad) fbld pushf lods fnstcw cmp pop xor push push mov mov add cmpl test fsubl in andl pop loop push mov int js imul jbe (bad) sbb adc sub jb jmp jle cmp xor std jbe xor sbb stos pop mov mov adc xchg or call cmp xorl xchg inc push push shlb scas and int inc clc xchg pop addr16 cmp add add lret xor push push subl mulb mov mov xor inc mov int3 adc add mov shlb inc xchg sbbb or cmp sbb adc mov and psubb jecxz test mov xor jg pop pop dec icebp push imul jg dec jle xchg sbb scas lds mov lods sub fisttp rcrb in dec sub rorl aad fwait push cmc pushf pushf pop lds pusha push mov xchg or sub ror fwait nop xchg rcrl aas popf fdivr adc fcoml cld mov adc fldenv xor sub stc pusha xor inc push xchg pop pop popf popa jmp cli fsubrl sbb ret jb,pn mov stos fs sti inc xor (bad) (bad) jp repz ljmp add add add mov ret xchg mov xor cmp lret mov jp xchg sub mov pop lret out xchg push pop pusha inc adc decb shr pusha push xor icebp ljmp push pop aaa push mov cld std dec popf jbe (bad) mov cmpsl ret cmp faddp ficom aaa mov cmp inc and mov aas hlt ret ss xchg cmc mov push (bad) fnsave mov push xchg cmpsl out das out in jl push mov add add add add add jg movsl sub push outsb insb cmp cmpsl push xor jle mov in pop jnp or int3 in sub cmpsl js add xor (bad) cltd nop mov dec das lock xchg pop hlt dec adc out pop movsl xor nop inc test mov mov sbb (bad) mov cmc out jmp in sbb aaa sbb mov push xor fist enter push cmc jmp fcoml insl aad pop in xor xor sub in pmaddwd add add add mov cltd pop fpatan cwtl int3 push mov sub loopne mov (bad) pop stc sub repz bound cli sbb sti packuswb add (bad) pop jge inc adc pushl pop dec mov shll mov stos aam or mov jbe xchg fxch push push mov cmc bound dec mov enter xor or cmp cmp imul std xlat lcall add sub mov js or fsubrl ja cli xchg xchg inc add or fisttpll fs mov roll xchg pop (bad) enter aaa mov arpl fwait shll jl cli cmp lret xor out ss lock and cmpl and sti pop jbe repz mov xchg lods lds mov xchg es imul daa mov dec lret sti add add add loope and (bad) movsb pushf mov mov or js dec fistp cmp xchg test into daa push push add sbb nop mov cwtl cli inc cmp test ret imul dec mov pop loop sbb ret aas dec jae loope push fidivrl jb mov jns mov push neg cmp into cmp mov mov jecxz sbb fnstenv ficom (bad) cmp popf jb or icebp mov aaa (bad) in dec cmc ret push push enter inc add mov repnz fldenv imul sbb jmp (bad) mov out (bad) call xchg pop cmp cmc and jno lea mov addb push sub into sub push daa outsl rorl mov mov mov jmp (bad) sub out adc mov dec inc movsl sub movsb lea aad das jo arpl add add add xchg int3 adc jl lret popa xchg mov pop pop out push pxor fistpl in cmp xor lret push aaa imul aas jecxz mov rcrl inc add gs inc movsl pop cmpsl mov gs inc (bad) jmp jnp cld insl les inc subl add mov push xor mov (bad) xor inc adc push outsl loop fnstsw cmp cwtl fdivrl jl mov pusha fwait ljmp add add add and or pop or (bad) aas shl adc xor xchg jmp dec jl jmp sbb and push sahf es pop mov or mov push jge pop lods sarl inc pop mov in sbbl mov push or fwait jne repz xlat jne adc dec pop add imul xor movsl in sbb ss cmp mov std fsubp test movsb cmp into in add add add mov and lock and xor and rolb lcall pop les lea xor xor icebp repnz cs lcall inc adc or mov dec add fiadd out inc xchg in mov out mov roll pushf add push fs xor fsts jns mov loop int and push (bad) and pop pop push sbb js add add add cmp subl ds dec jne loopne push mov outsb xchg mov mov aad cmp fiaddl cltd sub lock jp adc sbb (bad) repnz scas aaa or jno adc dec adc add or jle fldt add add sub data16 scas sar mov int3 inc imul cmp push mov mov int3 hlt int es loopne add mov jnp xchg ret add add push test add pop mov lods lcall jbe mov mov mov mov jns cmp xor movsb pop sub jno jb jmp outsb dec xlat test push push xchg and dec cmp aas inc xchg inc inc xchg ss sub dec test jno repnz mov push mov adc clc push xor call aaa mov push add pop xchg dec es push lret negb stc mov push int sub dec inc pop roll push fistpll rolb (bad) lret clc lods xor add add add mov testl fisubrl scas mov jnp xor dec sub ljmp dec mov ret (bad) push (bad) lds push les jmp ja add in fwait push cli sbb sbb fistl sub jbe cmp and popf push sbb loope mov scas dec xchg hlt pop repz imul mov or sub icebp jp fucom cmp or rclb push mov pop add add add xor nop sti jg and adc out or data16 pop call stos sbb jo xor push sarb xchg sbb ss mov shrb jne pushf mov setl pop enter and mov push clc or lods or mov cmp mov lret xchg and inc (bad) xor call pop mov adc sbbl pop push add add add add jecxz fild inc fcoms lret mov test imul jae jp dec sbb scas loop jb cmp sub jb mov cmp or jbe js xor js aad lock dec xlat jae jo xchg add mov xor imul dec sti lea gs xor hlt lods sbb stc jp roll out mov fmuls add add add add xor fcompl or push add push lods cmpsb pop xchg les scas fdivl push in ljmp sbb out inc (bad) jno call sbb dec mov inc cli arpl xor mov js gs dec in or cmp adc movsb insl repnz sahf popl test xor lods div xrelease pushf add fmull aam lds sbb repnz mov or adc and cmovbe int3 add add jns ljmp scas add sub adc mov call pop jg lods mov xlat pop ljmp in jno dec fadds xlat lods pusha sbb std orl aad xchg mov cmpsb jae add xor test pop into mov lcall lret jne mov jbe mov daa test gs inc cld sbb xchg xor ficoml adc pushf inc push (bad) rcrb movsb add add add add mov (bad) in jo sub push movsb or adc push push clc scas fstl push mov (bad) pop les insb or cmpsl lock mov xor (bad) int insl gs jne sub gs mov popf ret insb sub mov cld pop cmp jnp cmp adc sub arpl jge xchg dec mov pop into cmpsl push (bad) mov adc mov out sahf stos add test jno jl add add add add stos push jmp lds xchg repz ss xchg popf in cld pop (bad) sbbl andl insb pop test inc add decb mov cmp sub cmp pop out push mov movsl and jge push arpl pop test test dec sub sub mov into cmpsb sub into outsl shrb ja mov pop pop adc sub (bad) in inc xor push xchg cmc or mov stc xor fstp and add dec push test inc mov jg jg je mov mov add pop cld pop je push iret sbb mov push das xchg cmp cmp xlat sbb mov push lds and pushf cli adc xor stos mov jno mov lods jns daa in cs push inc dec cmp cmp jmp mov scas push push inc pop xorl inc pop in daa push cld and dec inc (bad) nop dec cmpl add add add add enter or iret pop push andl inc cwtl mov shlb mov cli jne dec add cmp sbb insb dec mov cmp xor (bad) pop dec movsl adc pavgw stc in sbb push sbb and push arpl hlt mov pop mov sub xchg jne push test xchg adc and lea sti int xchg inc mov aaa push pop ret pop js lahf and inc dec dec xchg inc out cli shl add add xor dec cmpsl sub ficoml mov popf scas cwtl int mov and xor pop popf je mov sub std cmp shlb cli add (bad) iret sbb mov ficompl and push ljmp out cmpsb push scas (bad) int daa stos jno shl cmp xchg jecxz mov mov jbe daa xchg mov fbstp add les loop fisubl das call ja cmc jmp dec stc loop aam jae clc or outsl dec addb add add aam jbe sahf xchg mov and test mov mov les and insb fsubr or lds push mov adc sarb mov stos dec andl in xchg cld sub xor jns fsubl adc outsb mov aam cmp rolb fwait add stos add mov push in outsl add add mov es mov shrb cltd clc outsb mov dec (bad) test icebp lret movsl lret add add mov mulb cmpsl out loop arpl push iret popa aad fwait sbb and jo push jb in jle lret push jb xor cmc test jb lock (bad) out std jo and and push cwtl test or mov lock imul add int xchg mov data16 loop and scas mov cmp mov scas inc lahf jnp inc sbb js cld int3 insb xchg pop (bad) mov sub jp (bad) (bad) xor loope ja xor inc jle adc jo pop js cwtl in lds and scas inc sbb loope mov jb jp ja pusha cltd jnp popa cmpsb fnstenv mov enter and gs aaa sub sahf mov movsb aaa add scas mov mulb xlat jbe pop iret sbb shrl dec jle popf rcll mov repz jo lahf push inc push jne insl pop (bad) mov pop int out shr jge add sbb or shlb leave inc mov aam sub repz dec sub sahf fmul hlt mov pop lods gs sbb lret add test pop stos rolb aaa icebp dec int3 add adcl mulb xchg scas shlb fidiv nop adc lcall stos push xchg es sbb lods add in push dec mov mov inc cmp jno add dec jle leave xor add test (bad) lret icebp and aaa or xchg mov add xor (bad) xor sbb push scas mov aad aam xlat jo addr16 pop mov fsubl cmp or xchg sbb cmpsl or mov fdivrl jne imul add dec inc adc lret add or test mov cmp xchg or sub or (bad) cmpsb xor (bad) leave nop call sbb add add add mov repz xchg push jne imul and pushf jnp cmp mov jg out mov mov and stos jmp dec loopne clc sub nop in pop fstps leave mov jae sbb fldcw insb arpl mov cmp mov mov pop test in pusha sahf sub pop add add mov loope add jl push (bad) pop xchg xor jb int xor lock add ja subb (bad) je and cmp fidiv jns push cmp pop fldenv loopne dec push mov pop data16 sbb mov dec or mov out add sub xchg fldcw inc push push adc aad rcr add cwtl test fldt jne pop daa out or lret mov jb psllq sbb fstpt hlt imul gs (bad) xor mov shr test dec roll add add add xchg mov test pop mov sub out ficompl pop jecxz add loopne jno jmp sub cltd adc xor and fistpl in (bad) xchg sub in enter jo mov fadd mov dec inc pusha sbb (bad) jb push sbb subl vmread fwait lret imul pusha cmp or rcr jmp jno repnz xchg mov mov scas sub ret test inc adc hlt xchg mov xchg push add es daa push mov mov aad (bad) aas out out pop inc outsb stos pop pop fstps cmp cmpsl lret (bad) lahf dec sti sbbl inc leave out sub xor sar adc les cmp sub fimull sbbl fcmovne shrb push jp imul cmp test push cli mov imul (bad) push jg inc lret dec push sbb cwtl ja (bad) (bad) clc sub fcoml in add add add outsl mov inc mov clc xorb add push arpl sarb iret es in mov gs adc iret jbe hlt cmp rorb adc lock xchg insl add mov sti out out (bad) xor jb or jmp cmp sub rcl push sub dec dec jp dec inc dec inc lods lret push loop or (bad) lea push cwtl ljmp jne repnz and (bad) cmpsl loop cs mov add add add add iret mov imul stos pusha (bad) push cmp loope fs xor (bad) mov sbb je loope push out xor aaa or adc xchg popf sbb outsb repz adc lds mov pusha repz xchg cmpsl bnd pop xchg out scas sarb and jb call xor jge mov xchg dec fmuls mov xor int3 dec xchg imul jns cmp adc (bad) jl pop sub add add mov movl inc int jb mov mov paddusb cs inc das data16 out xchg (bad) aas dec data16 mov and push push loopne ret lea push or imul jmp enter mov in mov xchg xchg jg dec inc sub add imul icebp xorl aaa repnz add outsl sbbb cmc or add add add vmovd mov mov int lret push jne mov inc imul pop xchg jnp les in icebp xor lahf icebp adc lds js ftst outsl cmp das or fs cmp jae lock orb fcomip je lea nop loopne push jbe push (bad) es push push mov cmp cmpsl or cwtl leave sti and xchg cmpsl aad inc fist xchg lods cmp into push mov loopne popf sub jge (bad) dec aaa adc jnp pop add add add rorl mov jge sbb cltd jnp mov (bad) lret test add in fbstp sbb xor enter sub adc sub push mov push fucomi push xlat xchg sbb xchg push xor lds cwtl gs xchg (bad) jl (bad) aas push push mov leave dec mov lods jmp fildll dec inc or orb imul call dec pop or packssdw popa pop sarl cmpsb jo and outsb and movsb xor jno fs arpl dec test sub leave jle add test in scas enter (bad) int push add sbb clc movsb add stos mov add lret in stc cwtl sbb push lea lahf mov push pushf js (bad) sbbb aaa insl data16 (bad) ss loope jb int ret (bad) xchg rep dec mov lret sub sub sti insl cmpl mov fmull jns add add add xchg xor inc dec xor mov in jg idivl (bad) and cmp cwtl scas xchg stos and leave push arpl push fsubrl xchg sub out push push xchg mov (bad) mov dec popf dec fnstcw cltd add cmp mov push pop pop lea arpl or and lcall add push cld fwait mov add dec adcl sbb jle adc arpl (bad) xor dec pusha stc mov gs popl add add add or aad push push and lods mov sub sti jge pop scas ljmp arpl pop (bad) adc loope push aas (bad) dec mov in and push inc sub mov xor in fdivl push shll rorl xchg pop out rorb xchg fwait mov (bad) sub aam js popf cwtl xchg (bad) mov dec pop leave les inc pop sbb loop add add add sub repz xlat push mov lret pcmpeqd mov (bad) xor jle popa cmp xchg (bad) adc cmc dec fimul xchg mov jge sti insb js and cmp sahf dec test rorl mov insl negl dec or pop test das or inc in sbb mov pusha leave inc mov pop and mov mov sar pop sbb pushf gs js outsl movsb flds add add add add pop sub sahf adc xchg insb outsb xor stos jno ja pop jnp out daa mov jae movsl hlt bnd lods and mov and and cmpsl fdivrl dec jg imul inc adc je pop dec sarb push iret jno adc popa push (bad) jle mov xor pushf cld inc scas jmp mov negb sbb jb mov iret cmp cld test add add add mov leave movsb stc xchg or xchg xchg jbe pop cmpsb (bad) iret push jge daa sub inc (bad) popa scas push ds and aaa das mov or daa dec push jg xchg ljmp sarb mov xchg mov jbe cmp test push jmp sub das pop mov xchg pop mov (bad) cmp lock sbb stos inc mov jne shll popf imulb ljmp jge sti add add add jno cmc xchg and sahf (bad) adc mov cmpsl ja cmc pop jb repz and data16 mov inc mov mov add jmp mov gs sahf std popa ficompl ja add add addr16 mov ret sub ds jge shr hlt pop inc xchg adc push outsl mov add aam idiv std inc daa pop cwtl jnp dec or jb jp and xor and add add or xor inc jecxz xchg jnp inc ss adc sahf das int sbb (bad) xlat pop das lds or cmpsb (bad) mulb test xlat sbb inc loope es and cwtl cld pop mov arpl jecxz cmpsb aam inc jnp in adc sarl pop mov cmc lahf mov jns mov mov in data16 add add add add mov add xchg pop adc jo incb dec decl (bad) mov and cmp into je sti fwait out add (bad) lods cmpsb clc jae pop jns push push ret or mov enter das mov xchg add cs fldcw cmpsl xor add jmp shrb mov je push insl clc call cs xchg cmp pop lods cltd xor test push cwtl adc cmp add add add add sti and pop sub mov pop mov dec shr dec lahf add and ret cld and pop or lds and pop jnp push sub mov es outsb out xor cltd xor fwait shll popf pop cmp xchg fstps inc mov cmc xchg loop and fcmove jmp stc aad dec shrl fwait sub mov push int3 mov add iret mov in shrl add add mov mov xor dec mov and sbb mov xchg out insl jae sbb lret insb xchg cltd mov cmp jle and icebp mull stc mov lods je outsb test pushf xchg add inc pop enter int3 hlt mov testb mov popl outsb jecxz mov pop cmpsl mov sub dec lds stos pop dec xlat push int mov xor lods pop sar int3 inc xor push insl test out movsl in loope popa cwtl cmc jl pusha push add add add add int3 stos xchg jg lahf push mov xorb sub out inc or (bad) mov push into decb cmc and and test daa push movsl adc mov gs repz sbb pop ja xchg aaa divb dec sarl pop jle je out mov mov xchg pop or sub and jnp mov push dec pushf mov mov cmp push ret fidivrl (bad) clc lock add add add add ret xor push xlat lahf cmp jecxz les mov mov inc (bad) movq dec xor div push mov (bad) lret jnp pop cmpsl xchg lds int3 mov sbb fwait xor mov jno push xchg push addr16 dec push ljmp cli jo std pop mov or push dec pop jecxz cvtps2pd mov or enter fnstsw cmp add (bad) sub subl add add ljmp add dec push sbb mov mov (bad) cmpsl push (bad) jecxz mov loop dec xlat inc xor cld xchg (bad) cmp or mov mov pop popf jmp rorb add jo jge cmp shlb popa ds push mov inc out push test insl cmp xchg jnp mov (bad) mov dec in insl lods adc ror test dec loopne xlat daa jecxz add add add lcall cli out sub sub mov xchg sti xor xchg sub insb mov jle aaa or xchg loope push xor pop bnd or or ficom popa inc (bad) jecxz popa pop (bad) mov sub push (bad) adc nop lahf scas add sbb stos xchg sub jecxz xlat push lret and loop jmp cwtl mov lea pop (bad) imul leave sahf sbb mov in aas (bad) mov adcl add add add cs inc repnz in insl fnstsw xor pushf shrb lds popf shrl nop mov inc iret loopne dec lret loopne outsl add xchg es aam icebp add lds add stos (bad) fadds (bad) ss jle fstp adc aaa call mov fsubrl xor decb lea daa xor data16 in int hlt jle push and cmc bound cmpsb dec xchg xchg xchg int add add add add add mov ljmp movsb cmp (bad) xor lock and (bad) or jno or fcmovnu mov jno fsub hlt push mov xchg es xchg cmp lods sti jl cmp icebp push sbb cmp jnp sub repnz sti add push scas push cmp mov cmp pushf cmpl enter (bad) cmp xor aam repz sahf roll out add pop (bad) and add add xor inc push cmp xor pusha xchg cmp mov lcall dec adc ss test mov jecxz pop xchg or jb std jne mov or hlt pop mov pop mov cmpsl xchg lds imul inc test outsb dec mov mov and nop pop adc add fsub mov xchg (bad) hlt xor jo sbb push fcompl cmpsl insb mov cmp mov sbb add add add add lock and sbb push jno sbb or dec arpl jne (bad) cmpsl into les pop pop hlt push pop xchg pop imul push out push xchg loopne jnp lods sbb xorb adc inc dec cli and imul in clc mov jp aad neg push stos push mov and cmp fistpll xor inc cmp idivb cmpsl imul xor push xor fisubr add add add mov arpl pusha xchg push jns mov ret push mov mov insl push add lahf call adc mov adc mov in clc lods xor and jno (bad) xlat repnz out mov cmpsl cmc sahf out orl data16 mov xlat test int3 mov mov rol xor and xlat add mov lods mov mov xor popa xchg mov stos pop shll mov xchg add add add (bad) icebp sbb fisubl jno or fbstp popa std push cmp and addr16 pop hlt out sub add dec jne add cmc cmp test mov js std xchg sbb inc jns cmp inc jp out fdivl daa mov lret test cmc mov fs mov mov aad xor pop jbe cmp int3 insl xor jbe repz sar (bad) and fcoms jg sub (bad) jmp movsl xchg test sub hlt dec js dec sahf addr16 outsb pop cltd pop mov inc sub lds sbb jmp inc push adc arpl (bad) mov sub adc aas ljmp jp loopne sub inc jge adcl lea dec test and xor setne push cli repz push inc dec (bad) negl pop lcall test dec jg stos aam ljmp add out mov add add add xchg mov push enter inc je pusha loope dec xchg inc rcll (bad) out mov test imul pop push xor add mov outsb ja xor dec mov sub jecxz vmulpd les mov (bad) inc aam mov pop outsb add pop mov aaa mov pusha rcl outsb out js insl js popa ret dec fs dec lods mov sbb pop loope xchg je add add add cmp leave inc sub xor push sbb mov cltd xor aad into outsl jbe mov push nop jle or jmp jl adc sbb mov xchg in and ss sbbl sbb and and fdivs pop cli cmpsb icebp sub iret stos push insb adc rclb insb add arpl mov addr16 xor (bad) pop jl (bad) inc xor push pop or js mov add add add and ffree (bad) (bad) inc push inc ljmp mov sub xor fdivr adc add and test pop pop fmull mov std in out fwait inc or xchg xchg push movsb push sahf hlt and adc cmpsb mov adc mov push adc je js imul or mov ret leave sbb sub mov push jp popa mov sbb cs or (bad) add add add neg inc jmp ja scas jbe mov je dec test es fyl2xp1 imul push aad lahf inc out nop push sbb cmp ret div jge add sbb dec push push mov mov push dec loop pushl inc fisubr xchg xlat add push sti dec and das out mov stc xor outsl stos stos sub cmovns lret out and call xor sub jg jbe dec inc push xor jo sbb add add add add dec into mov mov cmp dec rcrb mov loope or sub sarl les xor mov sub xchg jmp push (bad) mov jmp pusha fiaddl cmp lret lret cmpsl ljmp sti dec in dec jbe jg jge push mov and (bad) jmp js adc outsl pusha test into dec fist shrl xchg xchg cld adc fisttpll dec and sbb push xor setbe out mov jo rep push cmp jmp inc (bad) jge (bad) inc jno xor lods xchg pop outsb lret push inc addr16 jno pop sbb sbb xor pop cltd loope sti popa roll pop loope jg daa and cmp jb ds int3 test sbbl mov nop in fldt mov cmp ja push xor ja jge bound pop and roll jl cmpsl cwtl adc add add add inc push cmp xor adc push lods mov cwtl push sbb cwtl bound push sbb in bound addr16 mov data16 testb mov cli (bad) int xchg xchg jb das push sahf js repnz mov pop sbb mov jno imul lods popa cmpl xor xor insl pop xchg (bad) and sti imul mov aad iret stc add add add push repz push pop jl mov movsl mov sahf in pop (bad) jecxz hlt adc int push inc cmp jmp (bad) push push xchg mov xchg jle inc and scas cld lcall fstl stc outsl add cmp je cmp add mov mov adc xlat jmp push push nop (bad) xchg leave pop pop int3 in jae testl frstor mov push test inc lret mov xor outsb gs or mov (bad) cmc in rcll mov ja pop sbb cmp movsb add sub cmp test pop out mov pop jae xor mov jne sbb popa std push mov testl imul stos jmp repnz push xchg cmp cmp adc mov sbb cmp pop cmp adc mov pop dec mov add movsb scas dec mov imul (bad) add add add (bad) scas test mov data16 mov (bad) bound or fdivrl cmpsl pop movsb sbb pop les das lods enter push lcall mov xor mov ds scas test test sti xorl (bad) mov cmp shlb or les cs call pop push loop inc mov into and sub add loop jle add jge clc orl fwait mov rcrl add or cmp stc (bad) hlt inc add add add add sti mov push stos mov jne mov call and jmp clc jb inc pop sub je int xor push or (bad) rolb xchg sbb mov daa ja mov fldenv cmp dec jb mov insb mov out push icebp xchg jns and mov adc jae in lcall fs inc cmp int3 inc jmp insb bound stos cmp pop (bad) sub and ret jne or arpl mov or cltd iret pop push cmpsb mov dec ror call clc aam loop push mov add or pop mov sti bound or mov sub mov fstps imul inc mov loope or mov into jmp or mov xchg pop movsl adc roll sti adc jnp sbb adc or add pop mov test add add add add in cwtl pop sbb sbb inc stos add pop push neg mov dec xchg int ss dec fisubr xchg adc cmp popa in mov jl add decl pop bound mov adc insl dec mov pop add push xor jb jno dec lods mov les mov xor sbb xchg dec call sti popf push loopne mov popf shlw pop aaa out push inc mov ja add lock mov sbb inc xor mov mov nop in (bad) xorb push sbb shrl cs mov and outsb (bad) (bad) xor mov mov arpl jns xchg xchg popa testb jbe out stos lods jb inc xor and cmpsb push jns sub cmp arpl push out ss jbe test enter incb mov mov test jno jge in lret jae fsub int3 (bad) pop add add add add push xchg cmp push sub inc (bad) dec xchg adc negb pmaxub fsubrs mov and sub aas mov loopne sbb repz bound mov or and bound lods xchg adc lds cmpsb adc mov xchg dec mov and movb pop in xlat dec push mov loop mov xchg cmp stos in roll add add add add popa pusha ja ret push insb push ficompl jmp inc push or ss (bad) imul call fsubl lahf jb inc ret jmp or pop fisub in sbbl imul cmc (bad) (bad) push aas mov or stos xchg sbb (bad) mov push rorl ficom xchg imul pushf insl mov dec ds dec (bad) outsl mov data16 or (bad) gs and add add jl sbb xchg pushf sbb and and rclb fcomip push push (bad) arpl aam call hlt cmp in inc jnp lret (bad) xor inc int3 (bad) into fild mov lret insb cltd push dec mov fidivrl test adc mov push enter adc add pop mov mov test mov lods sbb cmp in clc sar rolb sbbb jne dec test mov xor das mov outsl jnp (bad) (bad) cmp test faddl xor lock or ja js pop ret subl xor cmp xchg shl (bad) inc dec (bad) ds mov mov jnp hlt pop push repz sub mov xchg testb xchg jp mov int3 mov lea mov add insb lcall add and pop inc jae xchg call insb or inc (bad) test xchg ds add add add xor cmp push mov add xchg cmc adc fwait imul std mov xor out xor push loop cmpsl or xchg adc xchg shrb ret xchg mov xchg jmp push xlat ss inc and daa movsb cli mov ss xchg je enter jl test mov cmc cmc xlat push xchg jbe xchg ret or lahf and inc jb repz lods mov mov loop jae ffreep dec mov add add add add dec mov sub arpl mov xor jg,pt (bad) dec sarl mov or loop ret jb scas cltd adcl lret rcl rorb es xor mov pop add push pop test (bad) and jle pop aam cmp fbstp sbb std (bad) outsl pop in lahf inc ss sarl pop and xlat sub sub mov push dec push xor jle xor insb popf push cltd jb push roll add add jo mov dec mov std mov jp insb sahf (bad) repz cmc ja stos push sbb (bad) negb dec push (bad) mov pushf clc push out xchg cmp and mov mov xchg lods xchg sbbl mov subl xor lcall mov inc dec fwait add dec ljmp ds xor clc xchg dec jmp std or sbb cmc (bad) mov imul (bad) xchg adc enter iret enter int add popa mov (bad) add or pop and push adc jns fnsave add xchg movsb sbb adc loop sar or scas cmc cmc mov out jl mov xor inc push jle iret (bad) fildll out mov rsm xchg punpcklbw rorl pop pop jne addr16 or inc popf push leave add pop loopne add pop out out movsb xor jge xchg (bad) and pop aas push aam loop add add add stc cmp pop daa (bad) adc push call ljmp push ret push fdivrs (bad) addl xor rcrl lods std popa cmp cld out std (bad) xor sub jg sub xchg dec mov push xchg bound int3 cmp jecxz ret in xor mov push xorps cmp (bad) xor imul jne sarb test sarl cmpsl push dec add sbb sahf pop xor and mov pop add push sub int sbb xchg mov mov cs add push ficom outsl cmc sub aaa call cs (bad) jp lods inc cmp aam xchg pop mov adc inc repz lret jae subb shlb push jno or or aam inc pusha and push nop or sbb push imul cli es push mov mov sbb in (bad) fstl dec add stos dec xor add add add pop test cmp jecxz aas add jb sub mov push mov es mov (bad) add test and (bad) adc push sbb loope divl int push mov or xor lods or ss rcl ret pop lahf or mov jo fisubr pop dec ljmp mov popf loopne (bad) pop pusha push lds into dec lahf mov add add add and add stc ret adc dec and mov lock xchg add js dec sti out lcall insb dec es iret fs scas js in cmp xchg jnp xchg sub or movsb mov ss mov bound jno jecxz inc jl and aam jmp or mov int3 out xchg cwtl cmp add ret repnz and lcall daa sbb sub xchg movsb cmp add add dec (bad) ja inc int3 xchg xorb jl mov jns push dec sub stos xor cmp outsl (bad) mov in and cmp pop push ss enter popa mov xchg in sti push dec lahf test shrb dec sbb insl pop fs les or int3 xchg sub in loop or mov mov es xchg push cmp cld mov or mov mov scas mov mov add add add andb lds lds or inc jae sahf adc sbb sti xor jns xchg mov push mov (bad) lods jp shll push popa xor dec push aam out pop push std pop xchg test out pop jno mov sub mov or xorb mov jmp insb test lock cmp pop mov test movsb stos iret dec jmp or inc dec clc sub and lcall out pop jmp add add add add pop fisub xor rcrb cmc std jo or lea pop dec lret xchg iret cmc test sar daa xchg adc mov dec mov (bad) jns stos mov adc fsts js cmp pushf mov lret or jge roll and stos pop or push adc mov pop pushf pop and and iret call ja ficomp scas inc aad bound mov add rclb pop or adc jae jns and jns inc push icebp sub mov rorl dec sub stc cs cmp lds sbb pop mov sbb and xor push xor sub loop pop pop add xor pop (bad) push repnz sbb shl cmp fstl and repnz push test add enter push lock stos mov or adc add add add insl jnp dec lds iret mov cld (bad) cmp adc and jns pop fucomp cmovb xor and jg xchg mov stos push aam and test test jno popa pusha pop jae,pt xchg cmpsl pop dec or jae scas std inc add out ja pop inc fsubl jp cmp fstpt scas cmp outsb jnp loop outsb int3 dec shrb lret mov xchg push ljmp pop frstor cltd pop faddl add add add sbb mov mov xchg rcll mov jnp push inc mov mov popa inc (bad) addr16 test cli (bad) pusha test sub fistp add lahf out mov imul fildl jmp pop daa bnd shrl adc pushf scas or mov jmp (bad) data16 ds icebp or mov xchg imul mov aas bound iret lret add add add add push fstl les movsb lds jecxz push jp fidivrl jmp xor cli adc ficompl mov mov les mov lcall sub mov push cmp movsl mov cltd mov repz ljmp and xchg aam btc mov or xchg lahf std push (bad) data16 mov push mov fninit pop mov add lcall mov add add add add clc jne add call mov imul cwtl mov cs jo fidivr sarl or inc mov mov push xchg mull mov cmp dec add mov pushf test and sub stos stc sbb and push pop or aaa xor mov add out xchg mov sub xchg pop cmpl inc sahf jo mov inc ljmp cmc add movsl mov xor mov cmp xchg ljmp add cwtl adc in mov and xchg jb and (bad) int xlat nop loope insb fildl mov push das fisubl inc loop nop loop inc mov lret outsl outsl dec add mov jne jno pop xchg push dec in mov dec push popa sbb adc outsb daa lret mov movsl sahf inc fsubl mov addb sarl and mov add add jnp lds add mov push mov inc xor add daa cmp push add in loop mov mov add or xchg andl por inc cwtl adc faddp call jp and dec popl (bad) cmp adc push vmwrite scas out lea and stc and and imul adc inc dec or pop mov xchg lods adc rcrl mov int3 out jge cmpsl sub xor sbb scas add add add add adcb fstps int xor ret aad xchg ror pushf pop (bad) stos js mov loop cmp decl int jg inc addr16 adc gs mov xchg jl lret add nop lock push insb jp pop pavgb jl dec inc inc mov or pushf mov out sub inc data16 dec dec lds dec cmp jb and mov rorb adc jns lret (bad) cmp loop pop add arpl push icebp mov push mov and jbe test ret sbb sub cmp xlat pop or sbb sahf scas (bad) jae les push pop in mov mov lea arpl jmp adc sbb frstor dec add pop ss call push loopne outsl sub lods push (bad) mov inc stc xor test sbb push mov sbb leave xor cmpsb cmp push jno sub add add add push or fnstsw add int3 mov fimul rolb jl push sahf cmp cs stos fs adc lcall cmpsl dec or aam nop xor fstpl add xchg mov int ljmp in push mov mov inc ret or dec stc popa mov dec or cmp push pop sbb and inc mov outsb cmp fs lds cmc dec stos cmc js sti and xchg ret xchg sbb in int3 pop add add add add pop jno in xchg lea jbe and pop jae mov cmp or outsb cmp fistpl dec adc dec cwtl insb mov pop mov fcomip jns mov lret mov sub mov sahf jl pop fcom xchg xchg sub push pop dec inc roll adc dec adc cld mov movsl rolb fistl insb dec inc push mov scas sub dec mov mov sbb add add add add adcb or jle cs mov mov ss orl mov data16 cmp mov or in aam or dec lret repnz add rcl enter bnd or dec jmp jne add sub mov pop test jbe call insl popf movsl jg cmp hlt xchg rorl cli andl arpl or fisttpl add add add adc sahf push lods stos lcall or mov (bad) mov repz les lock rorb ss mov xchg aas xchg sub aas ret or adc lea push repnz inc test (bad) and add addr16 dec movl inc popf adc enter sti jb pop cwtl sbb test addr16 loopne ja or push or in and pop jno rcll (bad) jecxz add and adc aam cmp adc sarl dec repz fsub pushf mov jle fwait xor pop pop out gs cmpsl inc (bad) xchg dec lret jns inc mull stc fstpt push je cmp xor push push push stos jbe mov test jecxz aam cld test movsl repz pop js fwait xchg (bad) adc sbb and daa imul lret xor add and lods mov gs outsb xchg in xor in add add add sarb cmp add aad add sub icebp mov inc jmp in pop sbb stos dec movb (bad) jmp ret loopne or rorl (bad) shl mov ror xchg movsb push xchg dec mov mov es (bad) mov cli jg cld or mov popf lods pusha enter dec adc mov adc push clc dec shll test iret pop add add add outsb pop pop sbb mov sti and cmp or xor inc hlt adc mov pop inc stos xor test test les jp inc adc cmpsb div sbbb inc mov and in mov add testl cmpsb push xor adc xor in or leave outsb pop mov fwait lods sti pop stos dec mov aam les vaddpd fwait and and (bad) popf idivl sahf rcr leave fs stos push loope mov clc repz add add and mov nop in push cmc fist pusha jnp in sahf xor sti inc dec icebp shll idivb mov scas fwait (bad) cli pop and inc sub into jecxz incb pop push js sbb fiaddl xchg push push add in add fld push int cmp shll pop push push leave or and enter xor mov add pusha dec int3 sub imul add xlat loop sbb neg in dec das xchg add clc pop rcrl mov cltd mov push dec imul dec hlt jo and sbb add dec lahf and in push mov pop add mov jb and stos int push in js test loopne inc ss mov and (bad) cmc (bad) dec into jmp sbb pop fsubl sti jl std sbb dec mov ja,pn jle sub (bad) or leave aaa aad mov outsl inc adc imulb cmc jecxz jge mov jg xor lahf shll cltd out xor sub dec dec xlat jecxz xchg stos (bad) adc xchg mov pop cmpsb push std iret mov sub add jmp mov xor out jae jp sub sub jo inc ja (bad) loope inc push scas or sub pop jne xchg cs shl faddl add add add add iret bound mov xchg and jnp jne mov js pushf rolb test sahf push push sbb xor fs inc and dec loop mov outsl mov cmp (bad) mov jno jg jp and jecxz mov fidiv imul xchg in das sub xchg sbb lret xchg sbb scas push mov dec inc iret xchg pop mov push frstpm(287 dec scas adc add (bad) daa rep xor mov push mov cmp pop inc xor jbe imulb (bad) iret fisttpll cltd dec cmp mov cmp in jmp cmpsb push xchg sub or fmul or push dec jns and xor inc lods les fldl stc xor pop popl push (bad) pusha and insl insb xor or addr16 aas adc and out inc push xchg dec or inc adc add add add test stos pop fadds xchg xchg test icebp (bad) pop (bad) repz push cmpsb push mov (bad) push mov incl scas sbb mov out sbb sub pop outsb shrl scas or cmc lahf cmp sub ffreep xlat pop mov push mov cld mov mov push and adc or mov sti cmp pop popf ret cmp xor sbbl stos outsb pop add sbb add add add add sbb adc int dec xor sub xchg (bad) xor mov aad (bad) push sbb ljmp xor pop xor out push jo je in notl das dec jle and scas scas or (bad) call xor outsl mov in sbb sub cld mov and sub ret (bad) sbb repnz loopne hlt ljmp (bad) sti out loop mov test mov or aad in (bad) add add add add add cwtl mov popa out mov leave mov jno lahf inc push pop cmpsl jae cmpl repnz sti gs adc pusha mov dec adc std ljmp sarb pop xor je adc xor and sti fiaddl idivl mov arpl test call cli push bound (bad) dec fs mov adc dec or dec mov rolb lcall movsb jle and add dec push inc je in push cmp fadds jp or int ds sbb test pushl xor fwait (bad) (bad) cvtdq2ps push sub jge adc arpl adcb iret out inc pop sub dec (bad) dec dec (bad) pop test scas pop mov es aad mov and pusha je aaa or and leave bound pop (bad) cmpsl sbb xchg repz add pop nop mov imul das test sahf frstor add add add (bad) repz inc mov (bad) pusha mov mov aam pop mov hlt iret add and and push (bad) call dec mov aas gs xchg pop xchg (bad) jmp sbb add sbb mov xchg (bad) movl aad jmp out js xchg (bad) cs (bad) push mov rclb aaa jmp daa xchg xchg push icebp or mov pop sarb int3 pop xchg fiadd xchg mov enter sub add add add mov ss ret push (bad) fild pushf fcmovbe bound pop int test push adc cmp adc sub and stos mov stc dec inc fbstp int in fdivl pop push mov enter bnd jne jae dec es mov (bad) movsb jns push inc out lds mov out pop xchg gs adc sbb pusha imul scas push aam or insl add imulb scas cmc inc mov add add add pop cmp imul mov xchg mov jae add (bad) xor adc mov movsl rorl lods pop imul loope insb gs lea imul in out xchg sahf xlat inc or mov xor aam mov xchg fcomps cli mov and bound inc test neg cmp imul imul or pop push dec jg mov add pop jnp cmc mov (bad) js push cmp insl push mov movsb sub out pop imul cmp sar movsl int sbb scas dec mov add cmp and lods sahf pop push mov sub cmp ljmp mov dec pop enter (bad) fs sub addr16 pop push sbb movsl (bad) sbb sbb sbb inc inc mov and pop adc jecxz pop pop sub mov add add add add mov push insl aad mov mov adc in nop outsl xchg imul roll add and adc push jle add into orl cltd stos xchg fiaddl sbb pop dec enter xchg test mov mov pmaddwd xchg pop lcall push data16 sbb cmpsb mov add loop push cli inc es xor cld je or int pop sbb test xchg mov iret mov pop mov push cld shlb hlt xchg adc jecxz aad mov js movsl add insb pop int3 repz ljmp push sub idivl sbb mov fsubp (bad) mov add aam jo popf mov pop gs stos ja out lcall lock fsubrs (bad) dec jno aaa les cltd mov shrl popa xor xchg mov mov mov jl xchg xor adc or add dec jno sub and (bad) pop sub rolb je mov add add loop cwtl cmpsb ret (bad) (bad) and jl lods jb insb rorb (bad) ljmp mov or mov dec out cmp out in movsl push pop cmpl (bad) frstor xchg dec dec add sbb mov in ror add jae mov adc xor adc loopne jae (bad) cmp mov push fistpl jmp push jge pop lods xchg mov (bad) lods scas xor pop pushl or dec jmp or scas fs faddl inc shl in (bad) add add adc nopl jp jle and icebp repz mov popa cmp out xchg mov push sub faddl sarb mov (bad) in inc sub icebp popf outsl loope das or pop adc and xchg adc push ror push out (bad) sub pop aas popf xor stos fdiv fidivr js iret push mov pop lcall sarl je xchg cmc into call inc cld dec and add add add cli xlat and inc repnz pop sub std sahf sub test cmc xlat dec push enter js outsb popf clc mov and jmp push lods add ret pop insl push mov add pop iret xor inc add int movsl or rclb sub popa mov movsb lret mov mov adc cmp (bad) lock or mov xor fmul sbb lret jmp das mov movb add add add scas test popa inc push lahf pop repnz jl js hlt push mov loop (bad) add movsl push xor fmull nop negb and cwtl inc in jge lret mov cmp aad jecxz pop (bad) in scas xor mov lea inc (bad) cmc lods pop xchg test sub sbb ret mov push out (bad) xor shll dec dec fwait dec in es div xor sbb call shlb push push cs loop lea dec mov adc add add dec cmpsl jno mov cmp xor rcr dec jns hlt xor (bad) add mov nop dec mov mov dec std add repnz sti (bad) (bad) push ret sarl in (bad) shrl add jb test mov inc mov das shrb adc or gs pushf jb pop dec and sbb dec outsl popf adc sbb dec add pop imul push out dec int3 jns loope push les add add add ja pop loop pop inc and xchg cs sbb jno imull mov popf aam ror mov inc pop push push xchg cwtl rorl fs sub out leave adcb insb pop ret mov push jge push cmpsl jg jbe mov pop inc inc das test out jp and and es aad xor ja adc sbb jl lea popa mov xchg xor loopne xchg add add add add add (bad) pop mov adc stos cmp mov inc and or mov ret and jbe bound adc add pop iret rcr (bad) push jle jmp gs mov out sti sub dec inc lods jnp out in dec lcall movsl sbb dec cmpsl out or dec inc mov pop stos shll adc ficom and push stos cmp mov push and inc nop (bad) cmpsb cmc jp sbb mov outsl fs and neg xchg mulb jecxz push divb sub dec outsl inc lret cwtl sub aad repz faddl sub mov lret enter cwtl dec aaa and out inc cmp add shll mov fnstenv (bad) xor movsl in mov scas (bad) push mov jo pop loope push fnsave or leave xchg dec pop scas jle or icebp xor inc and push mov add add loop jne sbb pop es sbb mov jns clc lahf addb push adc lret (bad) jge leave and cmpsb xor sarb mov mov jb (bad) adc ret lret out lock insl aad xor cld jae cld sbb mov and cs xor stos inc xchg dec xor dec int3 push call cmp loopne outsl lcall cli push and mov iret (bad) jae movsb ret add imul add add add das push pop sbb pop push cmovle xor lret mov imulb mov sbbl sbb out inc repnz int ss jge leave sahf sub das mov ljmp or push mov insl mov xchg dec add call (bad) jo cmp xchg adc leave movsl addr16 mov je xchg enter (bad) int cmp in lret pop dec adc jnp add xor add add daa xor ja fwait mov lcall mov xchg xchg adc or cmp (bad) xchg jnp out inc data16 test pop lods loopne xchg hlt push sub pop inc push jne sub popa sub fcmovu in or rcrb ret mov test pop sti mov jmp gs es or cs lcall pop mov (bad) mov outsl xchg std jg (bad) fistpl inc jnp pop inc mov add data16 into out lea add or lea xchg push xchg adc and sub fisttpl inc cld (bad) mov and pushf sahf sahf popf sub pop sbb jae flds xlat inc jg fcmovnb sbb out add testb pushf or pop (bad) mov (bad) mov jge pushf divl and rol mov dec add pop push inc sub (bad) or cs add add add add icebp lods mov or pop test inc and mov cmpsb rcll aaa xchg inc mov lods (bad) mov dec dec cmpsb incl fmull nop repnz outsb scas xchg and pusha xchg sub push dec inc mov xchg or pop dec roll dec xor add xchg sbb pusha mov xorl popf stc (bad) nop movsb or cmpsb add mov and inc push push sbb mov in leave and iret mov ss ret push std movsb das scas jns pop push ret call mov or shl push push inc fcompl (bad) jns,pn xchg dec dec int fbstp test ds std push mov lahf aaa outsb sub shlb pop pusha pop push (bad) out fstp push push lret int3 leave lock mov mov pop js sub stos xchg lock pop aas sub movsb lds imul sub xor push iret jmp xchg adc sbb jnp inc xor add cli dec mov (bad) stos loop mov lods cmpsb call iret inc test xchg mov xorl add or stos cmc ss (bad) cmp dec jmp pop pusha add movsb imul insb fcompl mov (bad) (bad) popa lds mov ds and dec je test mov and loop mov or pusha fnstenv push mov pop sbb aam add add add mov popf mov inc (bad) insl icebp mov clc mov inc js lds pushf ds xor mov out xchg jno sbb rclb or shrb push jl mov daa ljmp mov adcb out cmp orb adc imul movsl movsl lea dec lea or push lods movsl movsb add adc inc js loopne jp inc mul test xlat cmpsl jnp lcall lret bsr dec int3 dec ret data16 fcomps sub sbb pop xlat jp out dec decb jo,pt or outsb das in je bound mov mov incl fsqrt jmp xor rcrl enter cld or and pop mov xchg fwait lea push fsubrs pusha sbb movsb faddp shrl xchg cmpsb mov fisubrl scas stc cli mov xchg nop push loop add add add add jo popa cmp mov mov pop mov jge pop and mov aad scas push adc jbe jmp add int3 in xchg mov push jae xor mov dec (bad) mov push ljmp mov push lret out dec gs or lret scas sub xor sti popf adc mov pop xor ds or xchg out test nop out and gs add stos fistpl cmp push dec or jae push xor add sub imul inc (bad) imul mov add cmc mov xchg fxch popf stos (bad) inc out lcall cli sbb (bad) mov xchg inc fistp adc bound sub fcmovne fisubr aas push mov repnz pushf test cmp ja sbb mov (bad) out push cmp jp jge dec decl aam int dec in dec jp push sbb adc sbb js icebp mov fisubr cli test add add or pop cmp nop dec dec in das xchg xchg dec pop shrb popf in jb insb arpl xor dec test sbb fiadd xchg aaa xchg mov sub fmull xchg mov and or and mov lahf imul dec push xor sti mov inc and mov inc inc mov (bad) mov cmp or lods jecxz popf and mov pop cld push jp rolb cmp cmpsl test test stc and js mov xor addr16 lret ja (bad) outsb lods movsl mov ret mov (bad) loopne out pop aam mov mov mov hlt sahf mov sarb push int3 pop sbb rcll inc lods bnd ret cld push mov pop out daa push call cmp gs (bad) and inc jo enter push add add add inc push stos pop rcrb aaa aaa fwait mov out ret cmp sbbl push aaa clc fsubr mov int mov enter mov mov adc sub xchg addr16 out jecxz xchg xor ja sbb stos in jae jl fsts jno jecxz andb xchg add add lret dec and mov add pop adc je daa rcrl inc icebp inc xchg mov push cltd or add iret int3 scas lods test out cli in cltd ret mov add cmp sarb out add jl rorl (bad) push stos pop pop or xor xcrypt-ofb cmpsl in add test dec push loopne cmpsb pop mov dec push or in cmp mov stc xor mov iret repz mov sti cmp xchg mov sti iret mov ffreep pop cli mov in mov xlat adc lret ja stos pushl push test daa push dec pop xor cs add add add add sahf lcall jb enter add sbbb rcrb pop out mov xor push mov sbb dec xchg jae xor out xor xlat sbb lea adc sub dec jg jp push sarl lret rcrb inc push sbb stc div xchg sarl push cmp fwait push ret in sbb add test popf imul mov jmp inc test or add add out sahf test lret add push gs bound sbb notb (bad) or mov loope cmp cmp and xor pop (bad) cmpsb lds mov out sub hlt mov inc inc loopne push outsl adc repz pusha mov pop or sbb (bad) pop and pop imul (bad) pop adc jle adc cmp clc add and cmp push shl push xor mov sub (bad) mov mov inc ljmp add lods mov ja add out cld cmp test stc ja ficompl cmp scas mov push sbb adc sub arpl add dec mov dec pop dec int adc pop aaa jle mov popf (bad) int sub mov jmp or cld pop mov jle mov inc (bad) (bad) lcall cltd add (bad) fmul lock or jbe (bad) arpl push sahf scas movsb pop lds fcomi (bad) jo cs mov imul xchg mov out adc dec mov pop xchg or mov mov push inc dec push mov (bad) inc cltd scas sbb push mov jp sbb xor push sahf in push lods sarl fsub sub addr16 lds adc push xor jno call test ss and sbb rorb (bad) jo fldt or sbb xchg push sub (bad) in shlb add add add paddw and inc aad mov mulb sbb pushf pop or pop jnp pop xchg (bad) xchg je popf in out out xchg fildll and scas xchg addr16 cmp lahf jle fadd xor test fstpt jge push test fwait dec mov inc and mov gs cmp insl aas and int add scas jmp mov adc das mov mov pop jp jns add add add add add outsb cmpsl icebp decb add mov (bad) enter mov mov test add mov sbb popa adc and dec sbb mov inc orl and shrl subl lods imul sbb cmp imul gs arpl pcmpgtw push enter add pop dec and clc (bad) hlt ficomp fistpll pusha rolb sub test or mov mov in test inc xor (bad) das ret in arpl and ljmp ds fwait pmaddwd jns dec jecxz fmull xchg pusha insb cmc and inc or xor outsb ljmp ficompl and xor lret inc stos jmp imul mov jp es sbb fisttpll aas pop loopne (bad) test bnd cmc cmpsb jge ds adc cmp pop cld js sub pop mov dec cli inc fbstp sarl lds ret pop mov or mov add xor add push jmp test dec sbb push insl cmp test inc mov dec std repz cwtl pop jp repnz cmp dec mov call sub outsb pop xor insl jge pushf and sarl cmpsb jecxz mov or loop mov xor pushf dec fidivrl aas or repz add add add add and mov test xor stos sub add cmp dec xor cmp cwtl stos jnp xlat stos xchg fs or jno dec sbb mov or sbb notb mov movsb cmp pushl (bad) fisubr or in mov mov ds ljmp outsl (bad) mul and daa push or mov jmp mov xchg adc mov pop sbb popf jecxz add add mov fidivr dec mov (bad) jbe mov dec xor fwait das add movsb out mov lahf pushf test adc stos xor loop mov and shrl and sub (bad) ja neg outsl xchg dec or scas (bad) rorl addr16 dec (bad) adc addr16 adc out fwait mov clc and fildl pop sbb leave mov imul lret into leave pop imul scas push cmpsl mov mov add add add cwtd mov sbb mov hlt loop and cld sbb push mov sub push inc lret cwtl lret push insl icebp leave cs inc or mov or mov xchg pop bnd setge and mov lcall xlat inc pop idivb loop cmpsl fiaddl popf mov xchg xchg pop sbb xor dec cmp hlt adc pop mov daa out cmc iret pop gs or push dec cmc mov push std xor xorb cmpsb fstps dec mov sbb lods je enter push pop push aaa and ret daa pusha gs aam jge mov es pop mov in int3 mov mov lcall jp inc mov andb and das mov les cmpsb nop cltd rclb adc jb rcrb dec std mov pop mov push mov mov sbb xor cmp daa adc lret mov add int3 mov or clc mov or cwtl cmp mov mov arpl cmpsl pop xchg mov and (bad) cmp fimull push mov repz inc cmp push and add add pusha popf push out out test imul popa das (bad) or jno cmpl xor push fwait jl sub mov push or mov outsl xor mov jecxz ret scas adc mov add add add mov and xor jp iret dec sbb push (bad) ss les pop jb xor sub jbe jbe jecxz sbb and lret das test ja xchg test adc cmp popa pop aad stos clc xor nop ja daa jbe xchg xchg movsl mov lea mov cltd ljmp xchg hlt insb shl imul in push out (bad) cmp mov (bad) cmpsb rorb lds cs lods add add add xchg out dec in xor add jmp add stos xchg ret les aad mov push jg mov out xchg popf jge leave pop and xchg addl inc xor fwait xchg (bad) shll rol pop mov push mov and fstpl mov add dec pop pushf das mov movsb xchg dec sbb scas out sub aam inc mov iret not hlt sbb ja add mov pop jbe loop addl mov cmp test add add add adc dec test cmpb cli inc js out jne aam leave mov movsl in and adc out pop std mov xchg jmp faddl add adc push add repnz fs subl insb js or push pop mov pop cli insl mov pop imul je movsl and and std test and and int3 adc mov fdivr repz out pop add insb in test out add sar pop in pop pop fsts sti mov lcall ds rorl fwait mov lcall outsl arpl scas cs push inc dec fdivs fs or cli mov test insb (bad) mov sbb dec cltd push mov fwait mov imul aaa dec pop or cmpb pop mov movsl daa lods mov dec loopne push jnp das add mov xchg cs mov add add add add insb dec lods scas sub je outsl push pop sub scas adc xor into arpl push sbb repz sbb nop mov fwait jne (bad) mov loopne rol inc aaa hlt mov sti inc mov test test sbb push ljmp loope or ret lret and daa mov lods aas pop mov mov cld aad jl fstpl (bad) mov mov push pop loop (bad) and add push repnz add add add mov lret (bad) mov mov dec dec cld jb outsb jne jae das lods test adc and mov jecxz in stos jmp add push pusha stc adc xchg out cld cmp clc insb cwtl mov ja mov in es jmp cli jns ja mov in xor push shl aam scas cmp adc clc bound push jmp insl cmp movsl repz add sbb add fs test sbbb dec sub pop mov xor loop add sahf pop jbe mov cmp xchg xor cwtl leave cmpsb (bad) test insb dec lds sbb mov (bad) lahf cltd movsb dec outsl xlat out or repnz jl jecxz call fidivl pop pop or or (bad) int imul jle mov adc sbb push fwait or fs mov dec out xchg cmpsl lock add adc pop sub add pop inc test adc or push xchg in mov xchg and mov push sbb nop loope ficom cs fiaddl imul andl stos pop pop ret aad in inc mov sub dec add in push xor loopne sahf or mov adcl dec xchg push xor mov cmc roll and rorl add lret sbb adc jmp mov sbb cmp mov dec sbb popf push in adcl add fmul (bad) xchg sub movsl ret ret push loope (bad) xchg jecxz aam lods mov adc jb push cs dec movsb push ffree popf hlt fs cwtl lret mov cmpsb sub jmp adc popf cmpsl fnstcw push (bad) dec and mov scas dec andb jbe jae and sar jl aad add add or add js dec gs cmpsb lds out jns aaa inc int3 xchg cmpsb pop sub pop out sbb mov sbb mov idivb jnp dec push push inc jns pop jae vmovntps int sti add pop dec (bad) aad faddl divps mov cwtl xchg ret mov inc bound sbb fcom imul jne stos pop inc dec clc mov or mov icebp jl call nop (bad) jo cmpsb and pop cmp and pop xorl xor cwtl (bad) lea popf enter stos push adc sbb outsb pop cmpsl dec jmp add fcomps cld push xchg repz jnp insb aaa fisttp aas aaa fistpl cmpsb jge (bad) mov mov or or cld sbb jns ds xor mov imul sub sbb int shll movl aad sub cs push xchg inc outsb xchg pop mov dec cli bound cmp pushf loopne cmpsb adc fnstenv inc xchg mov loop mov bound jns lahf outsb icebp aaa icebp add inc xchg sub add and (bad) push nop xor leave jb jb xor jl xchg punpcklwd mov in push pop mov xchg sub call es xor loopne je jmp add inc pop or insb push in adc nop push jp add mov pop mov mov pushf fidivl adc jp cmp cmpl mov stc ficomp mov inc and xor add scas rcrb xor data16 addr16 push inc aad shlb jmp cmp das dec inc and lcall int3 cmpsl rorb mov insb and jp add pop shrb mov sub dec cmp pop loopne std adc cmp adc jnp in lock out ret push push mov sub xor cmp push (bad) mov lahf ret dec es mov mov mov mov and je mov (bad) fcomip fnstcw fsubs into rclb outsb add (bad) xchg xchg xchg mov test mov push pop sahf pop pop in adc gs pop leave mov sbb inc mov xor sahf clc (bad) test add or xchg and xchg xor or mov inc movsl jecxz pop or fisttpll xor sti loopne (bad) iret cmp stos mov jbe or (bad) mov and and pop cltd fistpll test add out inc inc push inc pop dec icebp les das mov (bad) fwait dec lret cmp cld ret incb out test mov or hlt shl jmp rcrb lock ds cs fsubr out iret divb inc sub add add add and fidiv fwait jp pop sub xchg mov cld call mov scas loopne test xlat andl jb pop out fwait rol and mov mov std xor inc lret les js mov es mov mov fxtract adc ret ljmp mov ficoml xchg mov cltd (bad) ljmp imul bound arpl jae adc das lods push push inc inc mov lock push mov pop sub xchg popf push jbe add add add add rorb pushf mov adc cmpsl cmpsb popa ror fldenv or ljmp inc repnz adc lahf jo stos pop dec rolb jbe lahf inc cmpsb fstps outsl (bad) or lret cmp test dec push jno xchg adc adc xchg xchg push mov pop in std sub cmp fimull ljmp xor gs cld sub push mov mov dec inc adc pop mov inc daa or ss jmp sub xor add add add add or adc pop inc (bad) push and or adc and loopne xlat in ds daa aam repz or mov pop ret (bad) cmp hlt xchg jns jae je mov or test jle (bad) or data16 sbb fcom mov adc pop arpl sub idivb xchg stos adc push adc jo jmp ljmp add mov dec rcll jb fnstenv add add add mov das and jmp mov xchg dec call sbb icebp and out subl mov outsb (bad) xchg mov pop xor mov mov push fnsave test movaps or or push add dec xor ret mov or fldt dec bound inc js scas inc sti insb fnstsw adc jb add test or rcl xor xchg cmc repz pop dec add add add add xchg sub push adc mov lock jp push aas sbb test stos and lea and or jmp jne lahf and (bad) incl or push cwtl adc push jno mov adc mov xchg (bad) out xchg jo jae or sbb ficoml cmc in jmp xchg jl jecxz jle (bad) data16 mov fld lods inc sbb loopne xor rcrb jb jns fwait add add add add cmpsl sbb pop mov hlt dec dec scas push scas dec fdivrl test xor ror ret movsl or das fildl jae cltd out inc mov pop movsb (bad) stc add xchg add into or je lcall mov or inc push or dec fbstp adc popf xchg and rcrb imul les bswap jle sub sub outsl or scas mov in nop cld (bad) xor push jb add pop pop pop xor pop jo arpl xor scas mov cmpsb pop movsl adc or out rcrb mov sub loopne leave pushf jge pop lods mov (bad) push idivl stc ljmp push jge mov lods or ljmp lret push cmpsl out arpl xor mov or pop ljmp jnp push cltd mov sbb loope sub imul dec or add add add popf movsl repz or jnp aad daa dec dec movsl clc jae cmp aaa mov fscale cli inc adc addr16 push dec jmp mov xorl sub icebp and and jb in pop daa add in and dec mov cmp cmp sbb in xchg jg add int3 cmp sti push push lods leave scas adc or push jae aas int3 addr16 nop call stos sub dec into out rol adc dec lods push push (bad) fistpll add add add rorl js ficompl das dec xchg stos xor (bad) fistpll es and ss lret stc (bad) push test movsl dec fiadd mov dec adc mov jo inc push cli repnz push adc or mov iret fsubs in out adc lock adc repz (bad) outsb dec xchg not xchg mov shrb shl aas daa xchg mov dec (bad) lock ja stc sbb imul add add add push or movb pop mov pusha push fadd add add sub stos push dec jo and and rclb lret and mov xchg and lods jo fidiv sub addr16 mov cmc aad push or leave pop aaa mov aas insl nop aas push ja test scas mov push push sbb sub inc cmpsb popl mov jno jecxz inc psubsw add add stc and cmp mov adc mov (bad) sbb out push jo shr inc jae jae enter popa les adc das sbb inc test pop mov dec icebp out outsb mov pop iret push movsl sti es pop xchg cmp adc imul repz mov and mov clc jbe push jecxz lock stos dec imull fidivl mov sub pop mov mov adc stos (bad) push push pop les xchg iret in aaa or stc icebp ljmp sbb lret mov xchg or lret dec stos aam fidiv lcall rcrl adc out in dec cmp test cmp or mov adc xchg jne fsubl mov aaa mov or push cld xchg jge inc stos add aas out enter adc addr16 loop hlt or cmp lret jmp adc ret add add add add cmp data16 out add test inc sub push call jl in insl xchg stos ljmp mov sub ljmp fcmove sbb mov nop fs push cmp je loope and xor pushf stc sub push fldcw dec mov aaa sub sub or inc inc add mov aaa insb jecxz repz js in sbb addr16 imul test and call add xor movsl in sub std adc inc fcmovnu push pop dec into cwtl xlat xor add mov sub js dec push xor mov dec or dec or lret jae add push sbb mov sub xchg or jno push jne and sbb pop mov sbbb xchg jle mov adc adc jge adc shl rolb pop (bad) xor fadd aas lock xchg fsubrs xchg stc stos mov push sub cmp nop out xchg cltd dec add pop and pop sahf pop leave ret lret sbb sarl dec jns std sbb test push cmpl push orl popa mov mov pop sub dec adc mov mov dec adc add sub (bad) fcmovb loope aas jnp in frstor mov jnp inc mov fstp loop dec cmpsl adc sub ds sti nop jb dec jle fs rorl sbb add add add scas lret mov scas push push pop push mov mov out sahf int3 f2xm1 jb mov sub inc ja mov ja sbb push and add pop or sub int3 push jl (bad) and sbb lcall push loope mov mov sub or fcoml sub popw aam imul mov addr16 mov xor (bad) aam and ja inc je rolb add add add push pushf ja in sbb andb daa movsb lret adc add mov sub sbb repz loopne into mov cltd mov adc add cltd push push std mov xor adc or in loopne sbb pusha pop pushf xor rorl fst or mov mov inc or or jns lods outsb jns fmulp mov sbb mov sub daa rorb xor or push cltd les ljmp jnp es xchg rorb and cmp mov xchg jbe jbe sbb inc jmp and aas mov sub cmp mov pop scas nop dec mov push cmpl mov add ss pop cs arpl xchg mov (bad) in aad mov xor ret ds movsb jge push stos add adc mov lods mov stos repnz add push and xchg xor sub out or mov insb test jns adc movsl mov into sub addr16 xor jae (bad) mov xor mov mov scas sub movb pop inc ljmp or (bad) jne scas test or mov and scas sub int push add jl jle (bad) xor out js mov add sbb jbe fidiv pop push dec add inc out (bad) sbb add (bad) mov mov mov push ljmp mov sub movsb lds xchg pop mov lret mov xlat dec inc icebp aas mov jae jo inc mov xor (bad) inc mov pop fwait lret add (bad) pop push push mov jns or (bad) ss fsubr cwtl and test and mov cmpsb xor push mov movsb (bad) jae inc in or scas imul sbb in into ret mov add add add mov cs (bad) stc lcall mov je std mov bound and mov sbb push in fisubl stc in mov sbb lods mov mov leave add inc iret adc lds xchg push (bad) js mov adc imul xor cmp inc imul cli sbb cmpsl mov jne xchg orb (bad) leave mov mov mov add add icebp lock call jnp and and fisttpl sub adc int out dec sub dec movsb or cld push xlat mov daa ds xchg gs or inc scas and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and sub push pop mov push loop push push push mov add jmp call inc push push dec outsl je data16 arpl push add add add loope inc call push pushl push call cmp je call push dec inc dec dec xor cs dec dec and pop pushl push call mov rdtsc loop jmp movb cmpb je inc dec xor pushl popl movl mov xor push pop push pop pushl popl add jmp push pop mov push pop mov jmp dec inc mov movb cmpb je inc dec mov pushl popl mov push pop mov push pop cmp jne mov cmpl jne movb cmpb je inc dec mov push pop push push pop mov pushl popl mov push pop add push pop mov jmp dec inc mov movb cmpb je inc dec add pushl popl mov push pop add push pop lods mov test je add movb cmpb je inc dec mov bswap inc cmp jne push pop cmpl jne pop push pop xor pushl popl push push pop push push pop push jmp dec inc push movb cmpb je inc dec push pushl popl push push pop push push pop push mov call movb cmpb je inc dec add push pop ret push pop pushl popl push push pop push push pop push jmp dec inc movb movb movb cmpb je inc dec movb pushl popl movb push pop movb push pop mov movb movb cmpb je inc dec push pop movb push pop movb mov mov add pushl popl push push pop push push pop push jmp dec inc xorb movb cmpb je inc dec mov or jmp dec inc movb jmp dec inc movb jmp dec inc movb pushl popl movb movb cmpb je inc dec movb push pop movb push pop movb movb cmpb je inc dec movb mov jmp dec inc call mov push mov push pushl popl push pushl popl addl pushl popl call push pop mov pop pop pop pushl popl mov pushl popl push push push xorb mov xorb jmp dec inc incb push pop movb jmp dec inc movb push pop movb push pop movb pushl popl movb pushl popl movb push pop movb pushl popl mov call pushl popl push mov addl jmp dec inc push push pop pushl jmp dec inc call push pop jmp push pop pop pushl popl pushl popl mov push pop mov pushl popl mov pushl popl mov jmp dec inc push pop jmp dec inc push pop push pop pushl popl pushl popl push pop pushl popl pushl popl mov jmp dec inc jmp dec inc movb cmpb je inc dec pushl popl mov dec jmp dec inc dec jmp dec inc sub test jne push pop mov mov mov jmp dec inc xor movb cmpb je inc dec movl mov push mov pop push pop add pushl popl mov mov jmp jmp dec inc cmp jne jmp dec inc add add push pop call jmp dec inc movb cmpb je inc dec call in mov jg mov dec jge mov dec pop mov xchg dec pop mov jne lret sub bswap sub andps lea mov in mov mov pop cmp jle cmp jge mov xor xchg mov mov pop mov xor jg loopne repnz mov and jecxz sbb xor xor push pop mov xor jg fnstsw jg loop pop pop test data16 xor jg jecxz push dec mov adc mov or xor cs cmp sub push cmp pop xchg push adc loop inc pop mov mov xor jg mov xor hlt push push scas push mov adc jg inc fs fadds jo jp jg xor hlt pop out pop jg inc gs fiaddl cmp idivl xor pop mov xor pop xor mov and jecxz in mov in cli lea jp cmp jle mov push imul xor jg mov xor jg (bad) xor jg test std out xor jg loopne xor push push push sbb add or cmp pop loope orb inc jle loope cld movsl cltd inc fadds add jne pop mov xor xchg es xor jo mov xor xchg mov xor xchg mov push (bad) jno mov js mov and jecxz test push popf mov imul xor hlt push mov xor jg xor (bad) hlt xor add jno mov js mov and jecxz in push mov mov push mov xor hlt push mov xor jg xor (bad) hlt xor add jno mov in pop mov xor jno mov xor add jno mov xor pop test mov pop (bad) xor ja jg jg mov loop in xor pop mov cmp daa mov and loopne test xor jg xor mov and loopne fwait dec mov cmp mov test xor and push mov (bad) mov lret cmp jg mov sbb or jg sub jg mov test scas movsb inc lret popf cmp jle mov cmp jg (bad) jne pop mov adc fcoms cld mov cld cmp aam or jg cld or aam jne pop stos xor xchg shrb jo mov and loope cmp or jne mov or add (bad) hlt cmp dec xor out xor inc movsb mov dec or jo pop jnp jg jmp xor jg cld sub arpl and pop cmp jle cmp ja mov xor jg loop icebp dec mov or cs cmp clc xor ja mov idivl pop mov jne add push pop xor mov and loope inc pop mov xor (bad) xor jg mov xor jg jmp xor jg jecxz add dec jecxz sub fnstsw jg lock movsb imul andb pop push add ja fdivrs (bad) popf jnp jg xor sar cmp mov mov jne cs xchg push mov jg decb hlt push mov mov mov out fisttpll add mov jg out test cmp and mov jg es js mov xor test xor xor shlb stc js mov mov pop mov cmp jg mov cmp inc fidivrl jg mov xor mov push addr16 xchg mov das or mov sbb sub pop mov xor sub int das dec pop aas xor (bad) ja mov cmp orb mov pop int mulb mov lret xor pop out and pop mov (bad) mov sbb ja mov cmp mov (bad) jg mov xor jg mov xor rorb jg mov mov mov and mov xor mov lods mulb mov aas jg xor cld mov mov xor cmp mov push mov xor fsubrl mov push mov mov jg ds (bad) fadds xor or adc inc mov xor and xlat jne mov xor ja mov mov ficompl sbbb and mov mov xor ja mov mov jnp sub fdivrs xchg insb inc lret or jg push xor mov add xor jg mov jne (bad) ss jp mov jge rorb xor cmovae xor add mov mov pop test mulb mov xor ja ds cmp pop andb ds xor mov xor mov lret mov jg ds adc shrb gs mov xor addr16 mov mov mov xor cld cwtl test cld cwtl mov mov inc mov dec lods mov cmpb xor push in mov inc pop ja dec (bad) testl xor xor hlt es xchg js notb jp fdivrs notb mov mov jno push mov xor jg inc in push rcr adc push aad xchg cmp xor (bad) mov xchg cmp push in mov sbb js mov and mov sub lret (bad) xor adc pop xor or push cld mov inc lret hlt inc xchg mov push cmpsb ja mov xor xchg out test dec ja mov fstl mov fcoml mov cmp jnp idivb adc pop mov xor hlt adc lret in cmp jg jg jle (bad) xor sub mov orb xchg mov pop mov repz (bad) xor sub lret out sub cli into mov push hlt adc pop jg scas mov mov add cmpsb cmp test push jae out sub out cmp fadds jo in ss fildll fbstp hlt adc bnd mov inc xchg mov xor js mov bound lret xor push cmp jl mov xor cld cwtl mov mov jg js cs cmp cld mov mov and jg xor shrb ds push leave fsubrl mov xor inc inc outsl shr cmp scas fadds jo jns jg cmp jg test jo mov xor cld cwtl mov dec movsb imul pop (bad) xor or push movsb mov sub jle jg mov xor std push mov xor (bad) xor or mov mov xor add jns mov xor mov or bound mov scas fiaddl leave js mov cmp bound fadds leave jo mov aaa jg xor mov cmp jecxz or fadd xor pop xor mov cmp jecxz and xor jg xor pop mov mov pop mov xor pop xchg xor clc fistpll lret xor jp mov mov cld in xor pop mov xor jle mov cmc jo or jg test test mov xor loopne mov xor jg mov xor jg test jg jns sti and cli xor inc jle xor jmp xor sbb fwait int inc push divb das in or aam or test jg cmp mov fwait mov stc pop mov xor dec fadds movsl jle mov xor pop (bad) xor into sub aaa jg mov xor jle mov xor andb sub xor pop inc (bad) jmp mov xor pop push aam pop mov lods jle mov xor jle mov xor out mov xor pop inc mov xchg hlt xor cld mov inc xor (bad) cwtl int jg ljmp pop inc inc jnp out subb pop sarb popf jle mov into (bad) cwtl int jg ljmp pop mov xor subb pop xor (bad) out mov xor pop inc mov hlt fcoml xor pop xor rolb mov or xor pop inc (bad) lcall xor dec movsb in push xchg inc inc lret mov dec mov (bad) xor dec movsb in dec xchg pop inc lret inc cmp loop fs or cli mov ja jo hlt dec mov sub inc mov mov pop xor pop xor push mov cmc dec mov imul add inc pop or add (bad) jno xor les add iret jg test hlt dec mov push cld gs inc jl push aaa inc pop popf cmp xchg push mov cmc pop xor jmp adc sti mov xor imul shlb mov pusha mov mov xrelease mov mov jo jo adc push hlt cs (bad) hlt notl jp or into negb mov pop int3 loope add xor sti int3 mov cmp das popf and fidivrl inc pop mov xor pop xor jo inc add push add sarl xor idivl mov xchg xor (bad) mov (bad) mov push pushf cld popa jle mov mov cltd test mov push lret mov mov cmp mov (bad) dec mov cmp dec xor inc popf rol cmp pushf jnp jg testb mov xor pop iret mov push mov xor dec xor fidivrl outsl pop mov fnsave mov push bound data16 fisttpll mov mov pop test idivb mov xor xor hlt push mov jg mov xor pop shrl je pusha mov xor pop xor fidivrl outsl pop mov mov pop fdivrs cmp xchg jae mov inc je jns jle inc mov xchg or rdpmc jg loope cmp inc jae jg insl pop mov xor ja xor loope jns sbb add or mov mov pop test add or mov xor push jnp pop mov sbb pop xchg jae pop jmp mov pop cltd jae pop ljmp pop ljmp pop cld jae pop hlt jae pop xor fidivrl insl pop mov arpl xor and mov hlt jg mov and fdivrs sbb xorl fs mov pop jl mov xor sub repnz cs mov or xor fdivrs adc cmpsl cmp lds xor push or pusha push sar cmp clc xor jle xor sar cmp sarl idivl pop mov lret or into cmp movsl cmp jae jg outsl pop mov pop jle mov xor sub repnz cs mov xor mov cltd pushf xor sub lret shl js mov xor jg loope jg mov pop jg mov jo fadds movb mov mov cmpsl inc lret mov jg xor sti jnp lret hlt movb mov mov mov in jnp cmp jge cmp je int3 rcrb push aaa notb mov mov aaa sar push cld mov mov sbb lods cmp or jns jle mov hlt das popf cmp jno cmp jge cmp jnp mov xor hlt setge cli xchg int cmc pop xor cmp lock cs divl fstl sbb xor inc push mov mov pop out xor hlt sub mov hlt add mov repz idivb pop fiaddl inc (bad) fcmovb xor mov ljmp pop jmp sub cmp jg mov sub in pop jg mov lret in lret mov sub mov int cltd test addr16 mov mov mov mov mov jg push and jg xor je inc push hlt dec xchg inc insl popf mov jle,pt std jp,pt jg je sub mov mov cmp xchg dec pop mov mov hlt add xor outsl shrl mov test sar and mulb mov pop jg stos xor sub loope aaa xor jae std mov sarb xor daa addr16 and xor jp movsl xor sub cmp jg mov pusha pop mov roll mov mov jg xor (bad) and flds fcmovb adc pop mov dec pop fstpt mov jg xor (bad) and stc inc cmp (bad) adc pop mov dec pop sbb mov jg xor (bad) and jns pop fcmovb adc pop mov or pop sbb mov pop mov aaa jg mov xor les xor hlt push mov mov or cmp xor fidivrl bound data16 mov cmp ljmp lcall jg jg ja clc faddl shrl je pusha mov cmp popf mov xor adc pop mov pusha pop sarb or repz mov lret cmp mov or pusha pop or pusha push ror cmp popf mov xor pop (bad) xor jg in gs shl adc inc xor orb divl xor pop xor inc mov add clc mov or repz mulb mov pop jg mov lret jecxz and repz cli mov sbb mov jae stc and pop xor sar and mov inc mov mov pop dec xor push xor pop xor cld cwtl mov adc or fidivr ror orb mov and mov cmp jbe cwtl mov std pop mov inc (bad) fadd xor cs mov pop add shr xor cwtl mov mov mov jbe dec int3 cmp cmp add pusha push inc pop fadd xor cmpsb mov test stc fs xchg cli mov cltd int3 iret sbb ret cs je mov cmp (bad) movsl push (bad) and cmp jle jp mov xor fdivrs cld cwtl mov xchg xor imul pop pop xor pop mov or das divl cld and dec jp int3 ffreep (bad) in adc jp dec xchg add pop mov inc pop cmp mov fcmovnb into (bad) das mov cmp add popf cli ret (bad) sar ret inc xor lods push imull xor pop xor push xor fildl cmp jg mov (bad) fistpl xor jle mov notb or pop sub lret jne dec sbb bound sub push or cltd sbb cltd js adc xchg popa xor or lret inc or cltd jle and adc xchg push or cltd sbb cltd jge push jmp es js jnp pop pop je jnp jns inc push sub inc (bad) repnz push jns sbb or adc pop adc jns pop ljmp ds push cmp pop or fild or pop sbb inc and int3 inc or ds inc push xor imul pop fwait pop sub fadds cs adc and adc or jo add outsl pop je adc jg popa int3 andb or fadds cs adc jg enter hlt xor cmp pop (bad) xor cmp xor xchg movsb inc je or je ud1 je mov mov flds pop hlt xor jg push push xchg movsb inc xor jg mov xor pop mov xor jg mov xor pop mov gs mov xor jg mov lret fisttpll aas aad jg jno andb dec pop cli inc sbb int inc pop push pop xchg movsb inc inc or lret push dec pop push bound cs pop sub push sbb pop sbb inc jg xchg fadds das lret pop push or pop sbb xor sbbb cmp lret xor bound xor push lret inc pusha adc fadds xor inc xor mov lret icebp pop nop pop jg lcall sbb push comiss inc or xlat push adc clc xchg movsb inc pop sbb xlat push adc xor orb inc xor lret sub pop or movsb inc data16 cld inc or aas fdivl orb pop ds aad sbb (bad) xor orb pop das sub inc sbb int pop pop push and fadds sbb mov lret rolb sbb push sbb movsb inc sbb fnsave aaa fdivl sbbb cmp aad sub ret push jg inc faddl sub jge xor push or das cmc pop adc push or notl clc xor sbbb cmp aam push xor fsubl mov fiaddl cmp push das sub push sbb lret mov les push rcrl push sbb lret pop sbb lret mov faddl rcrb das fsubl xor push or mov lret rolb xor jno cmp push cmp push decb xor fdivl cmp push cmp push mov adc faddl mov fild aaa aad dec pop push xor movsb inc popw ds cmp fcoml das fdivl and inc sbb aad xchg rcll adc aad cmp fcoml das rcrb pop push jae movsb inc jnp or pop or out pop or push fcompl sub xor adcb pop adc fmull psrlw cmp xor adcb inc sbb push dec xchg movsb inc jnp or pop or fiaddl xor inc or aad sbb (bad) inc push pop push sbb movsb inc jnp or inc cmp xlat inc sbb int pop sub push sbb dec (bad) movsb inc jnp or inc or fsubl sub push sbb in movsb inc jnp push xlat pop push sub pop sbb push sub fiaddl xor xor sbbb push or push or iret push das sub push sbb lret inc push lret lret push push lret xlat inc adc pop sbb inc jg sub andb adc xor xorb (bad) xchg movsb inc xor pop mov lret mov lret mov int movsb mov mov movsb inc inc cmp cld xor orb ja imul mov and (bad) dec movsb jle std mov out sub outsb out scas mov negl (bad) pop mov jecxz mov lcall repz es cwtl mov enter test jb xchg push add sbb (bad) cmp test dec or in (bad) pop pusha dec cli (bad) (bad) mov insb jle aas cli dec adc push int push mov xchg out mov stos pop and dec xor jecxz fsubs sub inc stc mov dec or sti adc sbb inc fwait sub jl pop negb notb mov adc fcmovu mov inc xor mov push jne adc pop (bad) mov jge jae mov jno push lret cltd pop sub lret scas xchg (bad) movsl push lods movsl mov fldl pop push jp movsb inc xor jle inc lret (bad) inc push fstpl sbb fdivl sbbb jg jl andb mov fnsave lret mov lret mov les pop push pop xchg movsb inc xor mov xor mov cmp pop mov cmp jg mov xor mov cmp pop mov xor mov cmp jg mov cmp jg mov cmp jg mov xor mov xor mov cmp pop mov cmp jg mov cmp pop mov xor mov cmp pop mov cmp pop mov xor mov cmp jg mov cmp push mov xor mov xor mov cmp jg mov xor mov xor mov cmp jg mov cmp pop mov xor mov xor mov xor mov xor mov cmp pop mov xor mov cmp jg mov xor mov cmp jg mov xor mov xor mov xor mov cmp jg mov xor mov cmp pop mov xor mov xor mov xor mov xor mov xor mov cmp jg mov cmp pop mov xor mov xor mov cmp push mov cmp pop mov cmp pop mov xor mov cmp jg mov xor mov cmp jg mov xor mov xor mov xor mov xor mov cmp push mov cmp jg mov xor mov xor mov xor mov cmp pop mov cmp push mov xor mov xor mov xor mov xor mov cmp push mov xor mov xor mov xor mov cmp pop mov xor mov xor mov xor mov cmp pop mov cmp jg mov xor mov xor mov cmp pop mov cmp jg mov xor mov xor mov cmp pop mov cmp jg mov cmp jg mov xor mov cmp pop mov xor mov cmp jg mov cmp jg mov xor mov cmp push mov xor mov xor mov cmp jg mov cmp pop mov cmp jg mov xor mov cmp pop mov cmp jg mov xor mov cmp jg mov cmp jg mov xor mov xor mov cmp pop mov cmp jg mov cmp pop mov xor mov xor mov cmp push mov xor mov xor mov cmp pop mov xor mov xor mov cmp jg mov xor mov cmp jg mov cmp jg mov xor mov xor mov xor mov xor mov cmp pop mov cmp jg mov xor mov cmp push mov cmp jg mov cmp push mov xor mov xor mov xor mov xor mov cmp pop mov cmp jg mov xor mov xor mov xor mov xor mov xor mov cmp jg mov xor mov xor mov xor mov cmp push mov cmp jg mov xor mov cmp push mov xor mov xor mov cmp pop mov xor mov cmp pop mov cmp jg mov xor mov cmp pop mov xor mov cmp jg mov xor mov cmp push mov cmp pop mov xor mov xor mov xor mov xor mov xor mov cmp jg mov xor mov cmp jg mov cmp jg mov xor mov xor mov xor mov xor mov cmp push mov xor mov xor mov cmp pop mov cmp jg mov cmp pop mov xor mov cmp jg mov xor mov xor mov cmp push mov xor mov xor mov xor mov cmp jg mov xor mov xor mov cmp jg mov xor mov xor mov xor mov xor mov cmp push mov cmp jg mov cmp pop mov cmp jg mov xor mov cmp jg mov cmp jg mov xor mov xor mov cmp jg mov xor mov xor mov xor mov xor mov cmp push mov xor mov xor mov xor mov xor mov xor mov cmp jg mov cmp jg mov xor mov cmp pop mov cmp jg mov xor mov cmp jg mov cmp push mov cmp jg mov xor mov cmp jg mov cmp jg mov cmp jg mov xor mov cmp pop mov xor mov xor mov xor mov xor mov xor mov cmp jg mov xor mov xor mov cmp push mov xor mov xor mov xor mov xor mov xor mov cmp jg mov xor mov xor mov xor mov xor mov cmp pop mov xor mov cmp pop mov cmp jg mov cmp jg mov xor mov cmp pop mov cmp pop mov xor mov cmp push mov xor mov xor mov xor mov xor mov xor mov cmp jg mov cmp pop mov cmp jg mov xor mov cmp pop mov cmp jg mov xor mov cmp jg mov xor mov cmp pop mov xor mov xor mov cmp pop mov cmp jg mov xor mov xor mov xor mov xor mov xor mov xor mov cmp push mov cmp push mov xor mov cmp jg mov xor mov xor mov cmp jg mov xor mov xor mov xor mov xor mov cmp pop mov cmp jg mov xor mov cmp jg mov cmp jg mov xor mov cmp push mov cmp jg mov cmp jg mov xor mov xor mov xor mov cmp push mov xor mov xor mov xor mov cmp jg mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov cmp jg mov xor mov cmp pop mov xor mov cmp pop mov cmp jg mov xor mov xor mov xor mov cmp push mov xor mov cmp jg mov xor mov xor mov xor mov xor mov xor mov xor mov cmp jg mov xor mov cmp push mov xor mov xor mov xor mov xor mov cmp jg mov cmp jg mov cmp push mov xor mov cmp pop mov cmp jg mov xor mov xor mov xor mov xor mov xor mov cmp jg mov cmp push mov xor mov xor mov cmp jg mov xor mov xor mov cmp pop mov xor mov xor mov cmp jg mov xor mov xor mov cmp pop mov xor mov cmp jg mov xor mov cmp jg mov xor mov xor mov xor mov xor mov xor mov cmp pop mov cmp pop mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov cmp jg mov xor mov xor mov cmp jg mov cmp jg mov xor mov xor mov cmp push mov xor mov cmp push mov cmp pop mov xor mov cmp pop mov xor mov xor mov xor mov xor mov cmp pop mov xor mov xor mov xor mov xor mov xor mov cmp push mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov cmp pop mov cmp jg mov xor mov xor mov cmp jg mov cmp push mov cmp pop mov xor mov cmp pop mov cmp jg mov xor mov xor mov cmp push mov cmp jg mov cmp jg mov cmp jg mov xor mov cmp push mov xor mov xor mov xor mov cmp jg mov cmp jg mov xor mov xor mov cmp pop mov cmp jg mov xor mov xor mov xor mov xor mov in andb cmp loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop stos loop lods pusha iret lret insl or push push aas jecxz cmovg (bad) jmp nop sub stos js rclb push jle cli dec xor bound add fcmovne or icebp (bad) pushf add ret imul dec jno push mov xor fwait lcall push notl fstpl outsl (bad) xchg pop jo pop xor add xchg jecxz adc insb sahf icebp pop lret mov pop inc inc jg das lock sub adc push (bad) xchg fmull dec call mov mov mov or scas xchg aad or xchg mov adc stos fwait xchg sub stc fdivrl push sub pop pusha push inc xlat cld mov cmp out mov popl mov popf fidiv push sbb mov pop mov cmp test sarl into mov popa add (bad) js mov jmp adc inc push sbb add and ret mov mov (bad) icebp pop rolb repnz dec cmp pop shrl pop add insb mov cmp cmpsb test push nop jno jecxz out push jg jnp (bad) xor xchg dec (bad) lea xchg lret loopne enter fistpll jge insb cs jnp xchg mov push loope push ss cmp mov mov mov sbb sbb lock dec cmp lods xor cmp pop shlb sti push int3 and xchg pop in and out add bts in imul inc mov rolb imul cmp xchg pop xchg sbb add sub push pusha inc mulb cmc adc repnz imul push cltd dec dec dec jne in push (bad) push mov scas fisttpl shlb repnz nop into jle pop add or sarb (bad) shrl pop and xchg cltd xchg sub cmp add jl imul dec push push cli sbb push aas aas mov cmpsl mov out mov or push inc mov jb cltd sub lods gs pop inc hlt movsb inc loop push mov pop sbb jl sbb mov mov push or sub in and inc mov (bad) push cmpsb rcl xchg dec cli icebp ret add dec addr16 rcll push int3 mov loope hlt ficom sub xchg xchg push addl jge push (bad) addr16 dec imul sub xor into outsl inc pop ret dec push xor daa sub mov fs lods jp pop fwait pushf or dec sahf inc iret xchg lahf fld into jne fbstp pop pop xor add movsb jne dec mov stos fildll xor (bad) clc inc adc mov cmp xchg cmpsl arpl add xor das je mov inc mov jnp sbb push inc cmp add push imul cmp int3 rorl ret xchg cwtl fiaddl aam out inc (bad) pop sub jnp stc mov daa inc push loop andl sbb mov (bad) mov popa lds adc sub xor pop mov ret (bad) adc push stos sbb push loop lods push (bad) lock adc xor inc std push mov mov aaa inc test sbb inc adc mov cmp in lods dec adcl stos and sbb jne dec imul daa clc lock fstpt mov jnp lods adc dec xchg fadds repz push fstl sub adc pop sub mull loopne or rol mov mov into jo sbb inc dec adc adc cmp cmpsb cwtl xchg jge rcrb je (bad) add mov imul pop imul insb ljmp imul aad xor mov push (bad) mov iret nop cli cs lea cmp inc cwtl push cmp repnz imul (bad) xor insb jne push mov stos mov sub repz test gs enter mov (bad) mov mov movsb rolb (bad) sbb xchg stc pusha add leave scas aas dec mov pop sub popf mov into fs jbe loope pop jb insl push pop and mov mov jp fnsave inc rorl outsb call pop lahf cmpsb mov shl mov scas inc insb xor les fs sbb icebp out xchg mov in fimull jb cmp lret enter add shrb movsl fisub repz addr16 jae lods dec add sbb mov je stc xchg aas sbb adc jg cmp lahf xchg in cmpsl xchg add inc enter mov xor cld sbb leave xchg inc or add xchg scas cmp das es xor loop cld jns pop dec add pushf add sub sbb jb xchg mov sub add and sbb cmp xlat mov mov push ja xchg push js int aas (bad) in pop gs leave add sar repnz dec divb call (bad) divb mov int3 ljmp or xchg add cmp jp dec inc mov inc push bound pop pop (bad) je pop rcrl lods addr16 ret inc (bad) stc mov jbe sbb jno adc push fsubrl icebp cmpsl rorl cmp push das pop pop out mov pop dec or cmp jo sahf je (bad) data16 xlat popa push dec cmpsb jno jmp jno push out add lret sbb mov test scas sahf rolb and in mov sbb add (bad) dec cmp addr16 stc xor sub in cmp or mov jl push rcrl inc lahf mov mov popf test push xor insl insb xchg xchg mov lock or mov je sahf je adc fildll hlt stos les cmpsb dec push daa mov push sbb mov push ds mov das mov sub cmp and loopew pop iret and push pop and int3 fildl out daa mov push add mov out insl cli xchg in test repnz ret jo adc lret mov or inc dec popf mov mov xor mov clc rorb xchg fwait js insl jo cwtl mov jns je push jl fstps popf dec pmulhuw cmp fsubl xor shrl pop loop push pop push out cli xchg rcrl or lods cmc jno paddb outsl repz das pop stc mov push pop push adc imul sti and std in xor fs xchg data16 std cli mov (bad) xchg pop faddl xor inc loop das ljmp int3 inc mov adc push in (bad) mov rclb push mov sti rcll mov pop aaa jnp xor lea and adc aam add les lret cmp int3 xchg es imul xchg pop pop push cs mov jle les adc and fdivp clc je adc divb cld rcrb jmp cmp mov jge scas jb mov mov stc nop mov inc inc jecxz (bad) ss add movsl (bad) adc pop enter pop loopne xor ljmp movups mov add test call (bad) fnstcw leave ret sub xchg jecxz sub and addl mov das sti push cltd xlat inc dec fcmovne jae pop xchg xorl sub movsl push sbb push in movsb mov test inc movsb jg outsl aaa adc or ja pop adc out inc mov stc jge stos cmp jae cmp insl jne mov rcll add (bad) mov lea (bad) aad insl mov shlb popf sbb or add dec ret ret cmp je aaa pushf pop inc push jp ds imul mov int3 lds out add push mov out sub xchg test jb outsb cmpsb mov inc punpckhwd test sub adcb (bad) gs test jno add dec xchg mov sub arpl es (bad) hlt (bad) lret mov pop pop int3 push dec movsb repnz mov inc cmpb cmp jbe aas sub inc mov adcl ret dec add xchg addr16 shll mov fist js inc fcmovnbe sub int ret (bad) (bad) cli jo insb cmc pop lds fdivrp push push out pop cmp ret test scas (bad) hlt int inc pop arpl jns jnp xchg sbb adc int imul jecxz lods push andl push je add sbb mov das inc stos inc sub clc aad lret cmp sbb dec jnp xchg bound xor je jbe push imul ja cwtl cmpsb dec in je xor or mov sub sbb jns jmp icebp stc negl (bad) hlt loop push flds sub shrl rcrb pop fstps dec negb sbb sbbl mov ret fistp xchg sti addr16 xchg cmp cmpsl cltd and js iret mov outsb outsb lock pop hlt loope out mov lret inc shll push xor pop mov dec popf jne in add sti fdivs ljmp movsb outsb or xor jns int3 insb loope fsubl ss data16 ja out mov mov inc pop out fisttpl mov and jb cmp push sarb cwtl shr mov cmpsb rol enter mov lret push xchg mov dec pop inc fcoml xchg lods xor jno jae or fcmovbe sbb shrl cli cmp mov xor sub (bad) sub pop pop bound sub xchg lahf mov stos scas jmp cmp jb enter lods and cmpsb scas mov push sti in fistpl jae cmp jle mov imulb icebp clc roll fidivl add inc push cmp int jb addr16 int3 test pop dec lods loopne xor sbb inc adc adc sbb and inc cwtl mov jl mov jbe inc addb cmp mov enter imul xor dec leave (bad) fisttpll insl mov stos test ret dec mov lods out mov adc sub ficompl jmp rclb movsb sub out mov inc notb fbstp aam (bad) repnz imul jle outsb adc push inc mov rcrb xor ds mov jg mov cmp repz cmp push cmp adc aad movsl xor es sarl insb cli add cmpsl test pusha lret pushf pop loop xor adc push inc add ret mov lods xor js cmp xchg jnp adc adc push stos mov pop or push sub imul insl movsl (bad) jne rcll xchg inc or lret aam inc outsl lea adc cmpsb push sbb dec loopne xacquire (bad) in push jmp repz push mov or pop lods inc ja xchg pop sbb cmp ds in xor jns outsb adc mov and shl pop add sarl mov hlt inc addr16 fwait repz cwtl iret lea rorl lds inc jnp push jg gs adc dec in dec inc adc fwait mov or mov inc inc sbb push aas movsb pminsw loopne es inc (bad) jmp sub jns sbb rcl push rolb adc cs adc mov int xchg nop push jle lahf (bad) cmc inc sbb test cwtl mov hlt mov ja push sbb test cmpsl sbb addr16 xor icebp (bad) cmp cs aas (bad) mov xchg mov (bad) or test xchg cli das jns jg dec xchg (bad) fimul push (bad) mov imul sahf mov pushf (bad) xchg in inc test pop movl les inc pop cmp dec inc and cmp mov add int (bad) fs stos out lahf mov out movsl das and cmp xchg push scas jl sbb lret repz xchg sbb push sbb jge stos rcrb rcrl xchg push mov or push in shlb jb mov ljmp jo cmp adc fdivrl mov aaa lods add and ja xchg mov (bad) mov cmpsl sahf push lds push mov sub push and into push jge cmc pop mov popl inc mov sbb pop jp sbb xchg inc jnp inc and (bad) mov or pop rcrb add lods icebp mov mov fs daa cmp and sbb xchg fcomps sbb outsl pop push popa stos sub inc arpl nop lahf add insb cmp out icebp ljmp enter stos jg mov mov in ficoml jae cmp push and roll jb jle imulb lock jp xchg jns push adcb sbb mov loopne ja sbb mov adc push subb test dec test mov add mov jbe mov mov mov or cmp iret xor dec enter fadd es hlt movsl test mov lods in mov adc sub fstps cs and mov outsl cmp scas mov inc notb aam sbb xchg imul adc dec lret push push (bad) dec mov rcrl xor cmp push mov std in cltd cmp push jl push aas aad movsl je imul cmp add cmpsb leave adc fwait pop loope xor (bad) fadds dec ret mov out xor js cmp fldcw xchg mov xchg mov stos mov pop or jo and sub mov cld push push flds fmul xor sbb sub cmpsb push sbb fistpll test aad push call lahf mov ss add dec pop inc jbe nop pop sbb cmp (bad) sti aam jmp aas jns outsb adc jg idivl fs shl push add jne jnp mov mov pop sbb leave repz stos or fdivp scas fcmovne shlb rorb lds jp push push mov test shlb dec sbb sarb insl or inc sbb ljmp (bad) jmp sub jns sbb rcll inc out dec xchg adc cs adc adc sbb (bad) hlt inc sbb jmp (bad) cmp aad xorb mov pop mov sar enter pop in addr16 fist push fchs test jae mov or scas andb push mov xor cmp dec aaa imul mov outsb sub dec mov add ret int3 xchg ret shll adc inc adc sub insb jle mov add int3 push std (bad) int in sahf out push add cmp and imul test add or mov cmp lea rclb cmp add rclb bound popa xor mull jns int3 sbb jg lret xchg data16 push cwtl mov (bad) and jnp leave loope aas bound andb je aaa aas cmp pushf pop cmp fcomps in and jo push dec or lret mov push mov sahf cs (bad) cmpsl pop or ror in pop ja xchg (bad) or push mov mov mov jns jne pop jge fcmovbe sub xchg xchg rolb or aad stos leave (bad) testl pop push out sti xchg jg outsb shrb pop and and cmp mov jbe fnstenv mov imul pop daa adc imul cld js push cmp mov xchg (bad) (bad) jmp add popa jp imul add add add push add rorl add inc add incl add mov inc add inc add insl inc add insb inc add insb inc add imul imul insb inc add (bad) (bad) incl add add sbb (bad) incl add add add add imul imul add add add add add add add fs add (bad) (bad) incl add add add add imul imul add add add add add add add in and (bad) (bad) (bad) incl add add add add imul imul add add add add add add add sub (bad) incl add add add add imul imul add add add add add add add je inc add (bad) (bad) incl add add add add imul imul add add add add add add add cld push inc add (bad) (bad) incl add add add add imul imul add add add add add add add cmp inc add (bad) (bad) incl add add add add imul imul add add add add add add add mov inc add (bad) (bad) incl add add add add imul imul add add add add add add add mov (bad) (bad) incl add add add add imul imul add add add add add add nop cs add (bad) (bad) incl add add add add (bad) (bad) incl add add xor cwtl xor jl inc add xor cmp inc add jmp in sub push mov push mov push pop call push push push mov movl mov and mov mov and mov mov mov pushl call cmpl jne push push call movl jmp movl mov mov mov lea push mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl mov mov lea push mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl xor cmpl setne neg mov lea call movswl test je mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl push jmp lea call ret ret mov mov pushl call mov mov mov pop pop pop leave ret push mov sub push mov push mov mov call push push push mov movl mov and mov mov and mov mov mov pushl call call push lea push call mov lea push mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl xor cmpl sete neg mov lea call movswl test je movl movl movl movl movl movl movl movl lea lea call lea push lea push lea push push lea push call lea push lea push lea push lea push push call add call cmpl jne push push call movl jmp movl mov mov mov lea push mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl mov mov lea push mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl mov mov andl mov mov movl lea lea call lea call movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl movl movl movl movl movl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl push pop call lea mov movsl movsl movsl movsl flds push fstps mov mov pushl call fnclex mov cmpl jge push push pushl pushl call mov jmp andl call mov mov pushl call mov cmpl jge push push pushl pushl call mov jmp andl movl fwait push jmp lea call lea call lea push lea push lea push lea push push call add ret lea call ret mov mov pushl call mov mov mov pop pop pop leave ret push mov push pop call nop mov call jmp ret sahf sahf sahf sahf dec cmpsb add (bad) (bad) (bad) (bad) push cmpsb add add cmpsb add add cmpsl add add cmpsl add add add add cmpsl add sbbb add add cmpsl add add cmpsl add add test add add add add add add addb add add test add test add add sbb add add test add test add test add add add add push inc push dec xor inc dec dec add push add dec arpl add mov pop popa fs data16 popa outsb add js pop pop jbe popa push popa jb outsl jbe add mov pop pop jbe popa inc jb gs popa jb add bound jb gs popa jb imul pop popa fs imul xor mov pop popa fs data16 gs xor rolb pop jbe popa dec jb jae insb je push bound add push imul xor incl pop pop jbe popa dec bound gs cmpsl add fs imul imul popa fs imul xor imul dec jae outsb add outsl add jbe popa inc push add add inc dec push pop push dec dec dec pop inc fs data16 push data16 je outsb add dec push pop push dec dec dec pop push gs gs jae add push add dec jae jb add inc push inc dec push pop push dec dec dec pop push jne jb dec outsb je jb popa arpl mov pop pop jbe popa inc js gs dec popa outsb fs gs add push data16 gs add scas add fs imul ss add bound push inc js gs imul pop inc dec insb outsl add testl popa dec gs add push imul xor add push imul xor imul fs imul xor add stos add fs imul bound pop pop jbe popa push popa jb jne add pop inc dec popa je outsb add insl jne add pop inc dec je outsb add push add dec gs add lods add jbe popa inc jb gs bound add bound jb gs je add 