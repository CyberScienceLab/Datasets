mov (bad) call in push push xor call or add (bad) (bad) (bad) ljmp je mov mov push mov push push push push push push push push jmp arpl rcrb ret mov push int3 add cmp xchg sbb sbb jp pop add cli push gs jmp mov push push push push cwtl insb fsubr leave or add lahf or sbbb dec nop jne cltd out ljmp aaa int3 dec jle in adc push mov push lea mov inc test jne mov (bad) mov xor xor mov mov mov test jle scas add fucomip incl or mov sub jmp cmp lea nop mov cmp (bad) (bad) sti cmp or pop jmp movzbl mov hlt nop mov cmpb decl dec dec jns mov mov add mov sar add or mov mov mov (bad) (bad) decl mov mov shl sar or mov shl or mov mov mov add (bad) pushl js addl add sub fwait cmp jl mov ja lcall jmp adc mov pop mov pop ret or jmp mov or adc call or adc (bad) mov add sub jne push push mov add nop mov mov push adc rep or (bad) jmp movsb pop rorb rep push push push imul jbe movsb call mov lock add pop pop mov popa fadd outsl inc or pop or xor push mov mov and hlt sbb (bad) push xor xlat mov add sarb add sbb js pusha scas pop and inc or decb jae mov sub or inc add push (bad) ljmp pop pop pop pop ret lahf push push push (bad) icebp out add push jne xor pop (bad) (bad) fmuls mov jl add dec cld push push push movl sti ljmp cld push push rcl inc cld rcrl out push and (bad) incb inc add push (bad) jo hlt cltd mov mov movl flds int3 mov jl sub and test push wbinvd mov mov cmp jmp std (bad) (bad) out sub mov xor mov mov push push ss mov arpl in std mov mov inc or rcrb int sub mov add aas lea push push movb fnstsw pop std incl add lea movsb mov lea add lea jae (bad) cwtl movl jbe push lea cld out mov add push lea lea fsts repz sbb push in lea push sub sub pop mov inc shll rorb sub jmp mov or mov add push lock loope push push movl fist fcomps (bad) xor neg pop sti sbb out mov sub clc jg cld imul arpl aaa mov mov out pushl mov movb dec mov fistl xchg jl js fbld inc cwtl inc push movl mov pop jne xor fsubrs jo push insb add mov aaa std (bad) push mov test jne cmp je mov mov mov mov and dec (bad) out (bad) incl inc mov inc or into push push movl lock inc mov cmp adc cmpl jg incl je mov inc mov cmp mov pop mov pop test pop mov and pop movl sub sub add cmp jb jmp es pop xor xor pop cmpsb dec mov sub sub (bad) (bad) pushl rclb mov mov mov mov mov mov mov mov mov lcall push movb dec jmp lea mov inc test mov (bad) push lea lea (bad) lock popa pop lea push idivb in add cmp lea mov inc xor (bad) aas into add cmpb mov je cmp je inc or mov sub push push push jae sbb sub inc pop sub cs or ret jne inc nop data16 add push ja (bad) sti je cmp add push das add cmpl add adc cmovge xor push add dec pop neg pop pop dec (bad) into (bad) aaa adc pop mov decb loopne push mov dec jl add dec js jle in adcl mov rcrb add add pushf add pop fnop outsl mov add enter mov or addr16 xor iret jo cmpsb std imul test or push sbb cld pop clc or add mov ljmp sbb adc jno (bad) std shrb dec add clc mov (bad) xor movsw lea push add mov jge clc mov stc sub adc xor enter mov cmp push adc sub push adc dec lea push sbb dec cld out (bad) cltd push inc push mov lea fs aas fnstenv sarl add insb mov rep mov and rep je outsl pop mov or mov push pop mov and push cmp (bad) fs int xchg outsl mov mov mov jo and clc mov add stc mov fcomip decl std jbe movb stc xor or loopne lock dec sub push push (bad) ret inc fldcw int3 xor fdivs jecxz aas mov push nop int pop inc and add cmp jae xor and dec sub cwtl or call mov repnz (bad) (bad) aaa push mov daa insb sbb mov lea outsl imull mov call push add jnp cs (bad) (bad) pushl stc pushf push (bad) rcrl arpl xor test mov sbb int3 push jp test pop test cli pop fdivr cli cmp fild push push dec shrb mov sti fidiv cmp add lea ja pop pop mov xor test je fdivl mov or mov fadds out pop jmp (bad) push (bad) pop or movl mov adc ljmp xchg cmp lock jne lea test fdivs fmuls pushf mov jle arpl sti insl js sbb mov sub mov push dec rorb mov insl lock in push lds push adc mov test das cmovl cmp inc or je push js mov pop dec nop mov in std aas xchg inc clc xor push lea mov sbb inc fcoml xor mov mov lea push lea clc or call int lea push push in add and push push mov fild push faddl dec sbb dec (bad) mov or mov mov mov enter inc or sahf icebp xchg inc xor fwait mov icebp hlt push test cmp mov in leave push lds es ja sub loopne push cmpsb das sub fstpt push and mull les notl jno push push insb fsubrs movl jne pop and lea fcompl and mov lea push lds leave jno pop sbb push xor popa mov clc cmp int push mov data16 (bad) and ss push loope (bad) xor in call ja dec cmpsl mov std repz mov or xlat xchg icebp mov adc mov push push push call xchg adc shrb ret neg sbb and icebp xchg movl jge mov incl or push stc in mov lods push push jne or xchg and and mov push lea push push push call lock sbb ja add imul add call mov add sar xor xchg jb jbe sbb mov mov stos sbb bnd outsl jb pop xor push fdiv sahf add sbb xor (bad) loope or mov leave sub arpl push push cmpsb adc aad and sub popa mov and or push mov sbb mov inc and mov adcl adc xor imul mov bnd adc test xor repz or flds rcrb in adc (bad) fnstsw clc lea inc and lea push xor push in adc mov and mov out test add cmc xor mov lea push push lea push push push mov dec loopne outsb add push and scas cmp decl test add test add das pop mov mov mov sbb fadds stc rolb and pop mov sbb xlat mov and push xor push mov mov sbb and cmp call mov or pushl fnop adc push dec xor mov sbb push mov adc xor mov sahf sarl movsb pop add dec out shlb cwtd into std jae in test push push aam cmpsb sahf fisttpl sbb aaa add mov mov inc xchg jns push (bad) fstpl fimul mov mov dec push outsb push (bad) jne mov dec js stc loopne repz pop stc stos loopne gs adc inc (bad) or aam sub adc lahf loope add movsl sub push jbe fnsave int3 outsb push mov pop cli add movsl scas sub ja (bad) in add add hlt shll enter jo (bad) sbb in (bad) bnd adc icebp orl icebp sti push and cli or cmp sbb test dec jl pop int3 out orb mov faddl sti xchg adc dec fdivrl clc inc inc cli adc inc cli sbb jbe sbb dec or jg cwtl jnp cmp inc jmp jbe mov cmp and mov push mov pop jae rolb mov xchg mov pop test out fisttpll mov mov sbb cs push jo test fadds gs mov (bad) lock sbb adc add test js and mov (bad) popf sub es sub cmp jge and cli sub fdivrl stos loopne mov in ret xor mov cwtl cli cmp arpl mov mov inc cmp (bad) pop fdivs inc mov mov xor cli dec xor fsubs dec mov xor adc clc jg push mov mov mov dec mov mov pop sbb add add bound xlat push in in mov out into ss and dec cli pop loopne frstor mov pop sub out jno shrb ret das xlat mov idiv inc or sub xlat cmp adcl and inc not repnz call inc push jbe fiadd push cli je add sbb mov or rorl pop in mov push and int3 adc fs (bad) andl (bad) in mov mov inc push clc (bad) in jle mov (bad) aas pop in add cmp in or (bad) je je outsl xor pop insl mov aas je push call inc cmp cmp xchg jne mov xor mov cmp and pop jge divb pop les das xor mov xor dec repz push jae xchg clc cmp repz push lcall (bad) je sbb popa mov incl test jne or jl sbb cmpl jnp add or (bad) das inc addl jmp and mov idivl and add jne mov jne pusha andl pusha daa or je rcrl xor int3 jae jnp or ljmp test push add jb fs cmp insl xor add subl lcall mov sub jge ss mov in mov mov pop mov test lahf mov faddl mov (bad) jg aaa scas xor push cmp (bad) call mov mov loope mov push lea push push movl add cli test test nop mov sub out lahf jg xchg cmp inc push inc pop pop out jbe sti lea xchg adc cmp (bad) mov out (bad) aam add mov push push lea sbb mov pop out aas adc pop movzwl movsb clc push push lock std orl add adc fisttpl sti pusha mov lods add add mov push jmp pushf cmpl out inc push nop push pushl jae sqrtps cmp les cmp (bad) mov pushl clc add push push xor pop (bad) inc cmpsb cli add sarl lock cmp je push lcall mov mov or pop and shrl adcl jb push (bad) (bad) aas dec js nop cmpb je dec jns ret movb ret out sub xor jmp cli int3 pop push push jle mov jno push (bad) mov fwait mov rorb xchg jo clc aam push (bad) cli mov dec mov adcb sbb ret mov or (bad) sbb cmp rorl es loope mov rep lea cld addr16 sbbl cmp jbe or test dec add inc int3 mov (bad) (bad) out out adc push (bad) hlt xorl adc orl lret mov or out xor aas add push aam bound or (bad) out push ret or and mov add xor mov (bad) adc hlt push adc add in mov mov daa add add std or or xor out jg aas lds ret cmp pandn movsb faddl in popf push push mov jae pop xchg mov sbb mov out incl mov inc cmp jne lea and cmp jne mov icebp jbe stc mov lods cmp je mov push decl push push push iret mov add jmp sbb sti je xor adc xor (bad) loope ljmp (bad) pushl imulb out add decl test jmp jge push movb pushl leave xor cmp hlt xchg pushl mov mov inc cmp jne add incb jg pushl pop je xor jmp lea inc mov add std dec adc mov add icebp add mov pop inc movb mov cli sbb outsb cmp fwait push jg lea sbb movsl or call pop mov je out arpl (bad) xor test je xor mov cmp jne add pushl je adc inc je inc cmp jb lea or mov ret out fldl pop lds je dec insl js int3 pop das je lea (bad) std add lods jno dec mov mov jge mov rep inc adc pop cld mov push repz mov cs (bad) outsl in inc inc add cmc fwait jle adc lea jne sbb or pop mov test je add ffreep decb lea mov fs sbb (bad) (bad) jmp push in lea jnp adcb decb int xchg mov dec or sbb xor mov cld sbb rcrb dec hlt out dec xchg (bad) cld push mov cmpl fcompl add xchg test cld adc je xor ja push mov add add add inc lea movd cmp and test cmp (bad) rorl adc push push pop xor jge xchg xor and mov nop aaa fwait adc fild lock aas add rorb std cmp jae ret xor cmp icebp imul xor test sbbb lea push inc sub jg negb or pop push mov negl mov (bad) int or mov mov jno das (bad) mov idivl or loope mov or xchg jnp xchg add push inc add orl (bad) mov jne xor je shlb add lea sbb xchg cmp sub dec jbe fnsave lea push pushl ret pop dec push movb call inc push mov sub decl pop jne jae movb jmp ret sbb ds les cld mov lea push mov xor sbb clc and ret fucomp lea mov and add sub std pop lods push dec js mov cmp jns out pusha (bad) sti jmp movb (bad) nop decl xchg les ret xchg sbb push rep fwait and rorb and outsb add movzbl pop notb enter ret sbb in sub xchg sbb ret rcrb psubq fstpt mov pop push push lea or xor inc mov cwtl in stos dec mov in test cmp mov cmp or jl xor lea fdivr mov mov movl push or pop or adc popf jo mov lea ss popl cmp cmpsb push add clc jo jp jae xor add movzwl loopne sbb xchg push jnp sahf xchg mov leave and jo mov test nopl xchg lds subl ja or xor loopne mov xchg setne xchg add test cmp mov xor (bad) call mov push push mov mov mov mov (bad) decl int inc rorl inc (bad) mov xchg jae cmp pop pop mov mov (bad) cmpsb jns xchg mov mov (bad) lea sti adc in data16 mov scas es test and xchg nop out pop fcoml sub inc mov push fisttpll ret jnp push int3 push sbb lcall jmp add cmp jle push rclb sub sbb cmp xchg sti inc cmp in xchg adc inc lea mov (bad) lret pop mov aas das ljmp repnz mov jae jp lea rep gs push lea gs cmp mov sbb movl ss xchg sbbl (bad) push mov in lods js push in daa test je mov jb lods mov stc pop sub sbb fisttpl movl movl xchg sti dec mov push adc out jb inc and xor and add mov stos xlat sub out add loop,pn xor mov push rorl xor fs and rorb or jne repz lock (bad) (bad) jg in and xor push xor pop lea mov rep cmp jne mov cmc aas imull or enter loopne sbb (bad) jmp push mov mov lea push push pushl lea push movl fcomip in inc in inc xor lds lock mov mov jmp outsl or jno int3 pop pop mov pop pop pop leave incl xchg sbb mov push push push mov mov test je mov test je mov sbb mov add ret test je mov add or pop xor ret jmp dec adc jne lea mov test je add les mov fdivr out ja sbb adc stos xor ss cmpxchg lea or mov add mov cmpsl dec cmc (bad) pop aad outsb test sub sub push pushl push pushl call pop mov call ljmp inc sub jb sub lea cmp jb ja mov mov mulps fdivs mov or mov idivl incl ret cmp jb push pushl imul pop test jne lea adc je,pt sar push lea xor ror mov jl or rorb xlat mov add call pop mov pop inc leave rclb push dec gs fwait dec and aas sub divb inc rorl pop ret andl sbb push sar clc mov xchg dec jne gs add adc xchg fisttpll lock mov ss mov and jae fnsave add sub add fcomps mov int3 aad push test je sbb dec or (bad) int add (bad) jg std shr jne lret pop add sub je std (bad) sbb das sub mov daa jne and je idiv out xchg and sub jne mov pop pop pop ret test in je inc je (bad) jne inc je negb cmp pop (bad) (bad) (bad) std ret mov add jae mov mov add xor xor mov add test add add test test ja je pop sub mov jmp and popf or lret xor push jle popf andl or rorb int3 cltd out les test jl insb xchg mov movb adc (bad) lcall mov mov mov mov mov mov fstps sub xchg aaa loope loopne dec jo pop daa pop mov and incl je mov fcoml mov mov adc jne orl fs or sbb add inc add xchg push idiv (bad) decl mov lea inc cmp ja add movzbl lea inc cmp nop decb rcrl je pop sub pop aaa incl out jp in adc add jne ds mov pop cld je clc adc fnop pusha jo mov outsb or and incl cld add push mov cmpl jne call xchg jmp sub lods add js push mov pop push pop lods mov mov pop sti fild pop add clc je sub mov pop pop dec clc aaa cmp cli andl pop sahf clc xor cmp lods jne popa xchg daa cmp jne mov jg ret cmp je and xchg jbe cs or dec fcos pushl mov mov xor mov cmp setne cmp jne (bad) enter shr and cmp je xor cmp sarb int enter inc or or sbb lret pop jne push or popa sahf push lea ljmp gs lret pushf adc xchg pushf nop fsubl dec xor lock iret mov push out clc add inc fldz data16 aaa insb mov sub les push sbb sbb adc je mov mov lock test je push xor div cmp ja imul (bad) mov inc or mov mov mov je mov mov jmp mov inc clc add add mov or loope mov je loop (bad) je js sti mov add divb sub add mov sar mov cld jmp cmp jb jp call incl push cmpl mov je xor mov divl sub add pop cmp aas pop cld (bad) (bad) jg mov cmp ja mov add sub cmp jb mov jmp mov movsbl out fild sub inc cld mov dec mov lods add fnsave cld out loopne inc adc (bad) orl mov sub add jo lock adc jmp and out xor cmp je cmp je mov or mov or daa inc push xor mov arpl call pop mov or jne repz cmp mov insb dec dec jo jmp daa inc bnd ljmp ret lock or ret (bad) jmp testb mov ds and push mov cmp or xor test jns inc jmp mov mov or data16 andl pop andl jo (bad) fild dec sub dec in clc or out or sbb mov or inc js or paddusb movsb or jbe lock jmp mov bound rol outsb jbe mov std movl lds testb je sub lcall ret add mov dec les jmp and ja push je or mov out ret testb mov mov loopne sub mov push lea push mov push faddp cmpsl pushf pop in jne jge or imull sub pop push (bad) or sbb jle sar sbb mov ja int3 ret cmpl sbb jne and fistpll xor jmp (bad) or dec pop pop pop xchg jo jp sbb dec sub inc pushf xor inc fadd mov movsb cmp add cwtl mov cmp je mov jmp mov or add add jne mov mov sbb ja out jne sbbl push jbe xor cmp rorl sbb sbb xor pop add dec lds mov arpl in sbb xor push or pop sahf xchg std (bad) pop sahf mov loope jle fmul cmp sbb adc es dec ficomp out push fnsave sbb testb je ret std incl movzwl jmp push pop push push push push (bad) fstp ja cmp jne das mov dec loope mov mov sbb add mov mov aad sbb gs mov cmpl das lret lock aam (bad) fnstenv jecxz cmp dec lahf sub xchg ret mov and adc mov ret psubsb sbb mov inc data16 xor mov adc cmp and out (bad) mov adc mov push sub inc add std (bad) stc xor test cld (bad) inc and js add add xor sbb sub and add rorb mov sbb fdivs sub inc mov loopne (bad) lods xor push (bad) rcrl push test rcr cmp arpl jne and mov scas mov rcll dec loop outsb test inc or test push or adc aaa cmp xor pop loope sbb jecxz xor test mov push mov test je or mov and dec cmp out or or push test (bad) jne pop shrl (bad) sbb or lock push test lahf jne test jle and std push push je lea loop cli xchg dec sbb clc dec imul jle push negl andl adc dec or jne call jns dec or stc pushl stc (bad) jb and (bad) (bad) (bad) decl shl add jmp mov testb je push push push pop push fiadd andl xor xor (bad) frstor mov jmp xor inc push int sbb jge je daa jmp sbb adc pop pop pop arpl inc je cmpl je (bad) decl js mov mov incl movzbl jmp movsbl negl jne or ret incl fist inc mov inc push mov mov into pop jnp add lock mov andl cmpl jle imul (bad) fist cmpl jne cmpl jne mov mov adc (bad) jg cmpl jne adc pop xchg (bad) mov add mov loop rcrl rclb adc lea mov xchg mov adc lock sbb jnp test cmpsl into add jns movl add xlat xorl cmpb test scas addr16 popf xchg pop clc dec jne lock test xchg (bad) jmp sbb loope mov sar shl add add jg fwait daa sbb enter jmp fmuls out and orb jno sbb leave cmp je mov in stos lea lea xchg out jg (bad) fist mov add inc xor mov sub mov mov ja lea cmp ja movsbl movsbl btc incl fimul mov rolb push sar pop mov sti xchg out ja test add lea dec mov or mov ret mov out (bad) (bad) out pop arpl sub je sub je dec dec je or jne das or or sbb nop add andl pop add add cmp std mull in stc movl mov lea ficom adc mov imul movsbl lea xchg sbb pop adc and push inc xor punpcklbw cmp mov arpl push sub cmp je cmp je int3 (bad) incl insb je cmp jne iret mov add insb jne inc adc bswap bound scas sbb fldl mov pop or pop mov cmp jne cmpb jne add jbe or cmp cmp and jo xor ja pop mov push cmp paddb neg test xchg cmp je test js test and pop je and lea popa push movzbl in sub mov ja je or and cmp mov inc cwtl test je out and loopne ffree (bad) mov je push jg outsl lcall adc and or jne mov ret test rcr je inc mul xor and into add jne sbb push push das mov mov mov aaa pusha mov je or loopne fisttp mov (bad) movl call mov lods mov sub je add inc mov mov call push push push (bad) lret xchg insl or fdivr bound pop (bad) mov jmp mov mov aaa fwait mov cmp loopne mov cmp pop mov mov es fcomp xlat je cltd sub sar lret fcomp in sti dec js inc pop xchg test push fucomp out incb cmp add mov out lock clc addr16 imul cmp jne rclb imulb or outsl add inc jmp cmpl fsubrs nop add push mov test jg mov incl je mov xor aas inc mov lret push and imul cmpsb (bad) fidivl test pop rorb test pop mov add inc inc inc inc jne xor lcall xor ja jmp cmp (bad) adc add push aas int3 (bad) jne cmp jne adc jle or addl orl inc add add clc dec and jnp ret mov jno mov mov jmp ja fstpl add rclb mov and mov mov mov inc lods sub add dec ljmp push push jmp sbb call call mov das add and subl mov dec push sub pop cmpb addr16 test and cmp test iret fisttpll mov xchg ds ret repnz (bad) jmp sub je pop rcll pop sub xchg cmp lret daa dec stc jne pusha ret cmp je aas push (bad) and (bad) pop xor jo test push dec inc aas sbb in or xor test xor and out loop adc (bad) (bad) movswl jmp test (bad) iret lock jmp dec adc cltd and and std lcall test jg jl test jae neg adc neg loope clc jg push nop add mov mov jne xor push mov js add jmp adcl inc pop mov or jne and xlat ja lea fs mov push ja inc cli je mov cltd push push push cmpsb xchg clc lahf icebp (bad) xor cmp jle add push sub decl mov movb popf fcomip popa adcl mov pop mov cmpb (bad) (bad) cmc xor add inc jmp dec popw or jmp pop add test jne sub sar jmp in out pop mov pop and fnstsw pop dec cmpb je inc sub imul test or or push xor stos inc (bad) sub add roll adc and pop push ljmp popa in sub sub mov jne sbb mov jmp pusha mov dec test mov test jg lcall mov loope popf daa lea mov sbb xor or je data16 or mov das mov pop jecxz mov jb xchg je test jle mov test sti xchg decl lea jb notl call movb xchg jne cmp sti je pushl arpl decl mov jne jmp orl inc pusha in fldpi sbb push pushl or in adc pop cmp pop pop add je mov cmpl ja adc mov push data16 andl pop jg push mov mov test je mov movsb mov shr cmp cmp or mov jle rorl leave ret cmp add cmp imul das jne add pop inc mov loopne and inc adc or or sti pushl (bad) rcrl pusha xlat out andb test pop push into icebp dec cmc mov inc or loope test mov ret adc into mov inc pop nop data16 jbe data16 mov (bad) loop mov data16 cmp cld std pushf (bad) jmp inc add dec add lea xor (bad) outsl push adc dec cld mov mov fmull adc mov xorb push mov or std pop push movsb test jne xchg or (bad) jg xchg mov push push mov push push test outsb inc fsubr cmpsb pop and and (bad) loopne jg fsubs inc fs push add loopne jne loopne (bad) gs incl inc add add data16 inc sub movsb add (bad) (bad) dec add adc adc stc sub in cmp ja push pop mov outsl call ret add pop cmp sbb and add (bad) insl test clc pop outsl lret add adc out adc push ljmp addr16 shrb mov pop and dec or inc lcall mov rorb icebp call fadd loopne mov test mov add cmp je (bad) aas sti iret test je adc jmp fcoms ret shl push or mov mov mov lret add add xor ret iret xor ja std movb jne and (bad) cmp add and pop pop pop xor ret mov cmp je imul test je shr adc cmpsb push aam xchg pop pop mov (bad) aaa ret lea adc cld cld sub or lea adc push push std add out in fnstsw rorb add add (bad) dec jl and lret cld add push push lea cmpl add lea ljmp sbb jmp mov decl mov movzwl and es movl rolb sti sub adc inc adc mov (bad) pop fnstsw or pop cli outsl jo in sub movl das (bad) decl or jmp sbb jbe es jmp cmp jne jne,pn and hlt lcall push mov add or cld adc mov mov (bad) (bad) call movzbl movzwl mov and je movsbl sub jmp and insl je lea cmp adc and test (bad) out adc sbb jb jne cmp jbe (bad) ret jg mov inc sbb or or or cmp (bad) (bad) jmp mov imul add mov jmp jg ja (bad) incl cmp or or sub jne mov jmp test movl ja cs (bad) jmp adc push pop setne add mov aad cld fisttp pop je negl cmpb fsubs mov jmp and sbb rclb mov dec jle push jmp shll mov pop rolb mov cli jbe mov pop dec daa xor pop and lea js jbe jno push mov mov cmp jne subl push and das dec leave inc jb ret dec pusha cmpsb cli fmull and rorl or dec mov ret pushl mov sub pop loope lcall add shrb sbb mov adc (bad) jb ss sub arpl into or dec xor xor jmp hlt mov pop cmp mov mov enter pop cmp add and xchg iret mov les (bad) (bad) decl or shr inc adc add roll or out decl scas in jmp cmpl je push ja (bad) insb pop mov (bad) sbb in xor mov dec mov and adc add mov push mov clc cmp jae mov inc add rcr pop jnp sub (bad) jb addr16 add je imul imul jae cld adc pushf xor pop ret push jle ret nop addr16 sub xor fs push jl test jae jmp mov mov test addl arpl adc rolb mov clc mov cmp (bad) aam pop fmull aam sti jb push jmp jle cmp pop je or pushl and call mov dec or pop fdivl cmp (bad) (bad) testl rorb mov jmp movl or jae mov mov or leave neg std add out inc loopne mov and add jb cld pop pop dec jg cmovge cmp in or or adc or pop je adc rorl xchg loope mov push dec dec dec jne mov pop or adc out ja add mov (bad) int3 cmp pop push and iret pop rorb sbbl or nop fs aas mov cli out and lea sub push push push popa xor xor push mov mov cmc call mov inc clc lea adcl ret std sub pop push mov mov mov adc mov movb movl pop lea or add xor sar push sub dec or inc or inc or inc add push lock out jne adc cld mov push pushl adc sti (bad) je dec add mov lea mov lock cmpsl inc adc xlat adc je mov sarb inc mov mov jne into cmpb je mov or lea (bad) push cmp flds ffree mov nop sub sarb insl loopne sub test (bad) mov out mov lret test (bad) insb add inc paddusw mov add loopne out lock data16 mov cmp je out inc cmc pusha mov xchg mov cmp dec clc mov xchg lock loopne push inc push mov je pop insb mov dec xor movsb out loop outsl (bad) je sub je sub je dec je stos mov aaa xor add mov ret mov loope inc push mov push lea push push (bad) (bad) (bad) aas sbb rorb enter jle mov mov shl or lea stos stos stos mov leave mov fucomp (bad) (bad) cmp inc dec jne lea add adc adc ficom dec jne pop repz xlat incl push lea push pushl arpl sarb lds pop xor mov incl (bad) jb mov adc pop xor popf out adc mov movzbl cmp ja sub inc push lea test mov add jmp ja test jne push jbe lea jnp lahf dec lahf sub fs pop xor push pop cmc leave lcall pushl data16 jg xchg das add and pop aam and ja sti aaa mov sti push orb mov daa jmp add popf and mov xor pop mov jmp jmp inc movl xor sub mov xor rorb out (bad) (bad) sti sbb orb lea jmp cmp ja push and jmp add push inc add inc cmp jb cmp inc cmp mov ret pop call (bad) mov inc jo sbb ja out aas mov lcall (bad) sub adc pop add push jmp mov cmp adc divb add ja (bad) aad cmp inc sub adc incb or (bad) jne jne sub push push fldpi mov inc in mov pusha dec sub in (bad) xor ret adc loope add or or (bad) (bad) jne jp addr16 int3 and cwtl push mov std jne and jbe bswap jmp cmp jne mov inc add (bad) pop rcr les pop mov mov adc and and lock clc xor mov cmp jne mov push dec pop fnsave test rdpmc sarb adc lock add cmp fcomp jmp cmp je jmp jge lds push adc stc inc mov aaa mov lea dec mov rolb xlat std hlt jg jnp mov cmp jbe pop shrl (bad) jg jne mov test je inc decl mov sbb push loop std imul mov lea add push add jmp mov sub mov (bad) fnstsw and loopne addb adc sbb clc jbe fcomip (bad) ljmp cmpb jne mov (bad) or xchg add mov fwait movl call push mov lea lea mov mov add add (bad) fucomip clc dec jne mov add mov add jbe fistpll lcall incl jne push mov or sbb out sti jne mov xor push mov jmp mov iret pop mov stos jnp cmpsl cmp and fistpll push std rorb cmp adc fisttpl jge lcall mov test loop inc or inc add test loopne xchg and add dec and (bad) sahf xchg (bad) mov sti rep subl loop add push pop pop pop mov les mov jbe in and cmp daa jne mov push mov incl sar testb jne and mov test or (bad) clc out rolb nop mov xchg mov (bad) fcomip xchg rorb mov mov mov mov or mov mov inc jmp sbb jne sbb adc inc jmp cmp dec mov add mov pop adc sbb call rcll jmp aad mov lods into jmp sbbl sti add sbb call incb gs mov fwait out decb xchg add push and inc pop mov lret push push push adc int3 jb shlb mov push sbb push cmp jo neg mov mov rorb aaa roll fild je mov inc dec je jae fbstp add decl jne mov pop out push push lret je pusha lcall pop pop sarl mov jg fistl ret je mov mov push jg cmp jne mov (bad) jnp loope pushl pop pop mov decb adc pushl cmp push into nop in jb inc pop cmp xor les xchg add (bad) adc jnp cmp and jge cmp add mov je cmp mov pushl lea lods jmp mov test pop data16 cmp je mov push and mov add (bad) push dec jecxz icebp cs cmp push mov cmp je push mov push lcall sbb jg and push mov add push pop daa pop mov and pop idiv jmp xor es test orb adc mov test add sbb add js jb (bad) hlt (bad) adc push sbb sbb ret push mov and adc push inc cmp in sbbl js sbb and nop mov and mov pop ret stos sbb (bad) data16 or sbb xor pop cmp xlat loopne inc push outsl loopne (bad) fimul inc ss or aam mov (bad) incl push add add incl jle mov movb inc movb out or mov rclb jbe,pn and pop repnz jge push or out or jbe xlat scas stos and (bad) pop adc ret jbe pop xor cmp cmpsb cld mov xor sbb xor pop dec call scas rol cs push dec clc clc dec gs pop pop cmp das and sub add xchg je push decl cmpsb pop pop mov dec add mov jmp les jp sub mov and aas add es ret or lea inc jno ja js sub test je and mov ret cltd fisttp or ret or cmp fdivs insb (bad) pusha test jle test je ret cmp icebp cmp jae jo js sbb adc add (bad) jne and push mov loope sub shr or sbb daa dec cmp into lods pop sub bound ss into jne (bad) or jo mov sti dec mov and insb clc test jne push lock rcrb cmp and (bad) adc mov pushf mov clc or cmp xor mov call add fsubrl mov fdivs movsb add and add rcr and or lret pop inc ljmp sbb or sbb mov add gs test xchg mov lcall and aaa and out lea sbb fsubrs sbb arpl out push and pushf call call and inc iret mov cs sbb roll jmp pop jg fdiv pop pop jp mov pop push pushl lea aas rolb fidivr sbb jae mov popf adc push jg out pop push mov or mov scas jg negl loopne jbe mov sbb lcall hlt push lock xor out ret pop mov mov or jge or inc sbb mov jge xchg test inc or mov mov movb pop mov pop sub leave mov (bad) stos clc jg inc std add push pushl lea push push push cmp (bad) push pushl shll outsl and jns test adc inc clc je cmp decl movzbl shl or mov in lret and inc dec adc add adcb pop lahf pop cmp push cmp jge mov (bad) mov cmpsl cwtl pushf jae fisttpl mov add xor jae loopne rcrb push pop pop ret xor mov mov add mov add lret stc add sbb jl push pop ja dec and mov sar mov (bad) icebp add out shl mov mov cmp mov mov cltd mov cmpl std mov jo sbbb lcall imul jmp lock push (bad) fistpll lock or add std jmp sub sar add push sub xor aaa mov (bad) and cli movsl cmp jge add add les or shlb out aaa add les divl stc cmp jb popf jo andl and shr adc ret mov lock or stc adc adc mov (bad) xor mov push or inc cld mov mov mov std (bad) push jmp inc cmpb je mov cmp je cmp je cmp je decl or jmp orl jmp mov or or xor inc inc mov push or ret jns mov push sbb adc movsbl inc xchg lcall sti call or dec je sub je sub je sub pmaxub hlt fldl clc jne push add arpl jle add ret inc jne (bad) or arpl (bad) mov push ret adcb jecxz and xorl cmp lret add (bad) repnz arpl (bad) dec push and outsb sub je sub je dec je xchg adc je push jne add jne or jmp xorl fbstp cld (bad) mov jmp adc and pop xor or sub (bad) call leave jmp or idivl fsubs daa test or test subl (bad) xchg fiaddl add push cmpb sahf lock add je clc out sub add je add jmp push (bad) mov or add and cmp rcrb add add insl add push mov imul or sbb xchg jle sar adc (bad) call mov xor jmp incl mov ja call dec cld mov xor mov mov mov sbb dec or dec adc ja ja leave ret push (bad) (bad) pusha push dec sub (bad) decl mov xchg mov xor mov cmp lret lock sbb jg lcall je mov mov test jne test inc std cmp ja lea jge dec jns ja jp xor test pusha fstps inc mov testb je push lds inc pop pop inc jmp jae jmp push mov loopne and xchg sub jnp push cmp test dec jne pusha (bad) sbb jns sub arpl ja push mov loop pop or sti je andl lcall mov mov mov orl fiadd imull and mov push dec jno mov adc es clc (bad) call push mov mov mov push push push push push push gs mov adc les mov or sub mov sub jo cmp je aaa cld (bad) fild cmp je cmp jbe lea lea mov mov jnp fadds add js inc clc test out pcmpeqd mov popl loope les iret ret push add inc add into add or jp fild mov xor push pushl out xorl xchg add adc lock mov pushl pushl pushl fnop int3 lock ljmp mov (bad) call pop pop jbe mov mov cmp sbb xor out sti rolb push data16 adc push mov push push pushl pop dec adc sahf je (bad) sub add push cld xchg sub test js xor testb mov (bad) int3 mov out sbb add lea fldl mov loop xor jge jne subl cmp and outsl or ffreep mov (bad) adc std (bad) jg add leave sar mov aas (bad) (bad) (bad) fild add daa mov not test jne pop andl add jnp pop adc testb icebp adc aad getsec sbb das call test sub add je call leave cmp mov test jne xchg rcll pushl mov and or leave inc (bad) mov test cmp je cmp (bad) or pop add popf adc mov std xor mov adc xchg push mov pop fimul mov ja jmp xor cmp sete sbb mov add cmpl (bad) jg cmp mov mov andl push jnp xchg fsubr dec movsbl stos xchg je mov (bad) sub add out cmp jbe push jle mov mov je incl xchg add add mov sbb lea (bad) xor push push push (bad) rorl decb push push lea mov cmp out add push lea std mov push push mov add sub mov jmp sbb lea add mov jl dec sbb int push or popa ja inc hlt push push movb pop jge jg mov inc add mov (bad) clc (bad) out mov push cmp je cmp jne movzwl xor cmp out mov imul mov mov clc mov shrl call adc rol inc and test adcl nop (bad) sub pop push mov sub cli mov int lea jb (bad) in inc add push mov and push mov repz scas (bad) insl inc xor lcall arpl mov test imul mov lcall push jecxz imulb or dec adc mov inc inc mov add or incl or inc inc cmp jb mov xor lock and or sub inc jno sti test outsb test add (bad) pop mov mov adc sub cmp xor pusha push insb jl insl inc mov mov andl add pop mov inc movzwl add add mov sbb mov push mov mov mov add add adc fcomip add cmpl dec aaa mov popa adc and push cmp in jecxz cmp sub jns (bad) stc (bad) (bad) cmp adc popa mov sbb add fimull aam (bad) lcall (bad) xor push push push lea std punpckhbw push lea push push mov push push push lret add test adc (bad) push lea testl sub fidivr jmp inc shlb adc in data16 pop mov loop popa test call mov xlat xchg cmp pushl test xabort adc cs mulb cmp inc mov (bad) jle jne cmpl pop cmp fimul lret xchg je dec xor aas sahf inc iret pop jmp aas loope xchg int3 inc je cwtl cmpb jne adc aas mov jo xor rclb imul sub test outsb fsubrl ljmp cmp jne inc mov out mov outsb cwtl test js cmp inc idiv sbb jb push adc rorb ret in lea repz shl mov adc sar mov loopne je push inc pop push mov mov je pushl jp mov mov jmp dec xchg dec ret xchg or daa and aam rcr imul pusha mov stos mov inc adc cmpsl inc or enter xor jnp inc test inc je mov ds test jle push xchg add inc imul (bad) jmp repz jns and mov jmp mov lret lcall andl pop mov pop addr16 cmpsl clc pop push mov test jne outsl jg jmp sbb add jmp jg mov testl je sbb pop push cli neg pop sbb mov cli aaa (bad) jl repnz test mov aaa jb mov lds lahf jb je mov xor ja sti dec dec xor inc mov and mov dec cld (bad) push roll jne and pop inc je add push incl jne inc bndldx add inc fmull inc jmp xor mov dec dec ret inc das loope test push lcall je mov mov nop xor dec sbb adc adc push xor mov inc mov mov add cmp jbe cmp jb (bad) (bad) cmp mov mov adc and and cmp pop pop jne jmp dec adc jmp sar add rep jmp mov mov add mov and add lcall lea lock mov je or jno pop push and (bad) call mov mov mov mov mov push mov add add arpl sahf fs lea sub loop movb (bad) cmpsb and and dec je dec rcrb add (bad) xor sarl xor jg mov mov pop call xor in lock hlt clc jle (bad) xor cld cld lea add add add es dec lock and out jb cmp nop icebp or fsubrs mov (bad) xor push sbb dec js lock andl or in rep cld ja jl push fldcw sub jnp jb xchg stc sub and imul mov pop jb mov and pusha cmova mov sub out add mov into mov cltd jle pusha add std sub sub sub jae and sub sub ja xor jb add jae ss pop mov dec pop push add lcall sbb cmpsb imul imul dec push mov xchg sti jae arpl cwtl (bad) mov or xor in lds rcrl mov jmp lods stos fsubrp push aas and fwait sarl or xorb cmp jne testb je lock fisubr inc mov pop mov pop cmp je aas push add and cmp mov lds pop (bad) aaa lock stc push pop (bad) testb decl cmp (bad) je pop fildl test pop jb or js jne loopne dec adc cmpl mov fisubrl pushf jmp xorl sbb dec inc sbbl (bad) cmp xorl je pushl data16 andl idiv (bad) pushl rcrb mov mov hlt nop (bad) decl (bad) enter dec add inc or pop push cld es ret mov add shr push icebp outsl and push mov je push ljmp out aas cld test mov je,pn sbb dec jl mov inc or pop pop cmp or push mov cmpb je pushl cld cmpl movb jbe fstpl (bad) je jne cld adc (bad) sub jmp mov mov pop pop push lds mov ret (bad) enter (bad) lock (bad) ret jne outsw xchg adc jnp and fdiv orl insb mov scas xchg fcoms jbe push js jg mov sti loopne outsl push push push add call or cmp (bad) jg xchg ret jmp xor inc push push mov jl clc jne push pop push rol sub fnstenv into add imul js push jmp and movl or xor pushl pusha mov mov push jmp add mov jne cmpsb popf call loop mov xor aaa cld out shll in and push push push pop mov cld (bad) (bad) jmp rep mov mov pop mov pop test je testb je movl (bad) fistpll nop pushl pushl pushl pop rcll leave mov (bad) loope mov cmpl ljmp cmpl jne mov cmp je cmp and cmpsl xor cmp mov (bad) fbld test iret ja push shrb or rorb add fist clc push jb adc neg sub mov xchg roll (bad) or lds mov js mov xor pop mov cmp je jnp xchg ds lea je mov cmp out pop (bad) out mov (bad) fmull test and add loopne push sarl lret repz mov test jne sbb pushl mov xchg lret mov pop xchg pushf test mov or push push icebp cmp sti jmp mov xchg cmp sub adc je enter add stc adcl dec jne adc mov shl outsb xchg jne pushl repnz gs mov mov sub pop push add cmc push mov mov je cmp je xor mov mov or cmp je inc cmp push lea pusha push lea sti push test adc sbb mov je xchg jo jmp push push js inc js test xor negl pop xor test test lcall cli mov mov push cmp je add lea jg cmp jb add sbb jmp push or cmp jne cmp cli or pusha or or adc es mov or mov mov mov enter jecxz test mov andl add cmp (bad) (bad) in mov mov cmp jne movl sbb dec adc movups outsb cmp jg out jmp cmp divb call das (bad) (bad) cmp cld sbb xchg mov cmp mov outsl cmp jmp cmp cmp out mov pushl push call pop mov loopne,pn add push decb pusha pop cld dec flds mov cmp jle loope (bad) jg aad mov mov cmp ja test je (bad) (bad) jg cmp and xor test sete mov movzbl lods das ljmp inc inc jmp sub scas (bad) sbb jne fmul pop add mov pop adc sbb loope jo push jbe cmp das mov jg je add ljmp adc inc pusha sbb pushl pushf inc push jmp xor pop add push shlb dec sub idivl push pop xchg inc add add ret enter loopne,pn pusha data16 andl add decl cltd jecxz pop pop pop ret and and pop add imul (bad) (bad) push cs xor push mov mov mov (bad) scas ffreep out jb cmp je cltd addl mov (bad) cli ja incl xor cmp mov sete inc adc cmp pop test je adc (bad) cmp add push or push movzbl push inc jb jg cs je orb add (bad) fistpll (bad) jge add cmp je cmp jne jno sub add inc incl (bad) je rcrl je cmp jne inc jmp dec jmp sbb out test jno mov mov xor inc imul ds je lods mov pop data16 lea cmp out xor lock das mov neg ffreep shr test je dec jl pop inc ror jne lret (bad) (bad) fild jne cmp je cmp je test je movsbl jae,pt mov or jnp (bad) incl or jmp divl push jg add pop sbb inc stos cmp pop movb xor fwait in xor add push mov push add xor xor push push cmp mov push push mov in sub and adc insb cmp je fstpt sbb mov mov lea mov push push lea fwait jl mov cmp sahf aas jae mov cmp jae mov shl lea cmp jb test lahf adc mov pop cmp je ds push push inc jge pop pop dec adc push jno xor jmp adc adc icebp pop adcl mov xor cmp push sti decl imul xor rolb cmp jne pop lock add adc jg ret push sar inc push push push push mov call mov (bad) je mov fidivl push cld or push les hlt and mov (bad) in pusha pop sti lahf dec rcrl inc cld jmp or rclb push lea jbe push push imul mov or movsb add add mov pusha loope mov ss orl movw mov or ja pop add movb xor add fwait (bad) (bad) sti lea add int push cmp je jl in call add pop (bad) jnp movsl add mov add (bad) xor mov (bad) mov mov xor cmp jae xchg popf jae pop andl andb andl xchg lahf add mov mov xchg add xchg cmp jb inc mov jl nop pop mov (bad) jg jle push mov cmp je jge adc cmpsb sbb je test jne xor (bad) fst sub mov sar shl add fcoml mov add mov test aad add lea hlt cmpsb dec push cs mov inc scas insl loopne (bad) clc add incl cmp jl xor mov inc lods mov adc je jnp orb jmp movb test jbe (bad) pushl push pop jmp lea xchg push clc cmp je sarl les xor cmp jne inc jmp push (bad) std or push or or inc movl sti add mov mov add pop shll call sbb (bad) mov push or sbb push cld nop push movsl iret pusha push push jp cwtl cwtl cmp dec and hlt push mov add (bad) xor cwtl (bad) push ficom mov aad mov add add gs pop push push mov sbb inc mov (bad) je test je idiv xor fimul adc fcoms dec cmp jne xor push jg stos sarl xor pop adc lock (bad) xor (bad) mov xor xor cmp jne mov test jne mov or rorl or std add cmp (bad) pop inc pop cmp je mov push jmp stc rorb (bad) ja fildll pop cmp jne mov jnp dec pushl inc out fistl cmp adc or sarb clc cmpsl and inc iret pop jmp add and scas and ljmp leave ret loopne popa loopne cli dec sub lret decl dec dec and inc jne xchg mov aaa jge ret mov loope cmp dec dec shrl xchg rorl popl imull mov movsbl and je fwait xchg sti jb mov or (bad) sti jg pop mov mov jmp prefetch jae sbb or cmc test inc fmull jge ljmp sbb push adc add or idiv or movl add inc adc adc add add mov bound and and xchg inc mov fdivrp pop loope and push movsbl and push aam hlt push xchg mov add cltd mov xchg outsl cmp jb pop push or xor push sub adc mov aad nop add add mov jne add arpl add dec adc rcl add inc aas mov call xor (bad) mov adc add je jmp lea gs ret lea decb std cld incl sbb adc xor push mov cmp dec sbb repz cmp jbe cmp mov ret pop jg hlt jnp add jg adc (bad) aaa add test mov jmp rsqrtps mov sbb adc test push fwait push add inc adc scas cmp jbe imul sbbb or adc sbb mov movl push adc inc add and or xor xor xchg test loopne adc xchg mov pop mov (bad) cmp test cmc (bad) call dec or push push push push lea push push mov pushl (bad) out add roll cmp pop or test dec or lret mov mov mov clc jp test cmp je incl sti jbe xor jne loop (bad) lahf fildl aas lock pushl inc jp,pn add mov or cmp and push loop add jno push imul clc lahf sub push mov or jne aam or out mov div mov or pop lock mull mov mov (bad) fnsave add jmp or and and jmp mov fmuls leave jne div mov and adc out (bad) jb cmp mov or cmp jbe dec sub sbb xor or or (bad) fadds mov mov cmp pop ret cmp or add inc lcall imul daa mov push js push add jg xchg mov push mov cmp jb neg and je sub imull add mov push addr16 int lret add jmp stos pop or ljmp ret flds adc xchg mov jle,pn lea cmp mov addps jne clc in (bad) pop stc movb pop jmp (bad) clc movb inc loope adc and daa cmpb inc call add inc lds bnd cmp pop clc aaa cmp mov cld and lea mov dec xorl or inc and jo or or add loope push mul out fmull fs add loope rcrl xor das mov xor pop div cmp jae (bad) mov pop sbbb scas dec or mov test jne inc xor cmp ja push push push add je aaa push lahf (bad) shll je inc inc mov cmp and dec jmp mov scas pop out arpl movl roll adc jmp dec adc pop pop ret inc sub adc add loopne adc inc inc push pushf loop mov fnsave pop or dec jle sbb pop mov cvtdq2ps inc int3 mov pop mov pop mov jmp lret mov mov cmc iret inc add lea pop mov mov push pushl add push (bad) outsl push cmp jl xor inc lock fstp andl lret icebp mov push inc incl push mov ds add push cld aaa sar sub andl pop add adc (bad) fimul sub xor add rcrl out pop leave push pushl aad test mov adc fstpt sub arpl mov lea cmp je std insl push sbb clc cmp jne jmp push and scas jb inc pop cld cmp jne or popa mov sar pop (bad) or orl ds adc mov or push fildll inc or flds (bad) mov jne push jle lcall ss pop rcll mov inc and and mov push call jmp xchg ret mov or fwait inc dec jno adc mov jo mov inc push fild js or dec or mov mov push cmp je mov jne (bad) ljmp or jne add cmp jb imul add pop mov icebp push add sub add dec jg xor fild sti or je mov push pop sub jg xor je add or sub mov mov (bad) cpuid mov mov bound inc pop sub pushl mov (bad) (bad) fistp aam lea mov jmp mov sub je sub je dec je pop adc rclb mov out dec jmp or jmp push (bad) xchg mov movl nop mov loopne jge add test adc pop sbb dec lret cmp push xor (bad) (bad) inc mov cmp je cmp je cmp jne mov mov mov pop stos sahf sti jg mov mov movl sbb pop pop loope mov push xchg add cmp pushl cld fdivrl mov push mov mov incl jmp or mov mov lret inc pop pushl push call pop jmp pop incl fadds cmp jnp pop in push sbb xchg adc pop or rorb xchg xor cmp cmc push pop push icebp pop and and mov imul inc cmp roll pusha out xor bound sete mov int3 bound bound mov decl dec cmp enter adc push movzwl xor push lea (bad) (bad) jg mov dec or stc jb mov add cmp jb inc add and div cmp jb rcrl into bnd adc add dec rclb dec or and adcl add and lock arpl push jmp (bad) sbb and ljmp inc and call loopne jg adc call rolb push inc mov jns lock test sub and or add jae xor adc adc ja (bad) mov fsts sarl (bad) (bad) (bad) fisttp lret sbb cmp jne or mov sub dec cmp jge inc mov mov (bad) out (bad) pop clc cmp jne rorl mov mov xor cmp push std mov sbb xchg rclb jmp and (bad) aaa in cmp mov (bad) aas mov testl cmp ja mov jg mov mov and add fnstsw cmp xlat adc movl lret or mov cmp je push pushl jbe callw push ljmp loopne cwtl clc add and (bad) mov ret imul je mov cmp xor (bad) or push pushl cmp mov cld mov mov jle mov std cmp ja push mov push add add add xor jmp aam mov sub pushl lock lds push cmp jne push push jmp clc push out pushl xchg pop and (bad) jae loopne cli cmc nop sub jne test jns lea lds (bad) int mov popa out xor jne lea sbb jmp and sbb adc cs nop dec add adc (bad) loope push push mov enter sbb jae popf xor jecxz xchg jo jg jg cmp push (bad) (bad) jg xor sti cmc outsl add je lea push push xchg popa lods dec repnz cmp fsub or imul adc sub sbbb in and or lea es jne les aad add xchg add add (bad) fnstenv ja pop pushl data16 pushl xor outsb pushl psubsb out sbb sahf push jbe cmpl pop dec pop out js addl pop cmp out or xor pop iret add pop cltd pop jns pusha (bad) std mov pop add pushl or jbe pop cltd test mov and fsubs loope repz push pop pop pop pop rclb pop push roll pop fs push xor cmp adc pop push pop in jae pop jl (bad) mov add aam or push add add or or or or or fldenv or (bad) enter imul pop mov aam adc pop gs push sub xchg pop jbe mov adc (bad) xor xor shll and dec inc and add pushl xor adc xor xor mov and cmc adc inc or in lret and or pop add cmp or inc adc xchg mov or xchg pop pop pop pusha push and jge les cmpsb divb adc jg pop mov cmp cmp sub xor inc add insb test mov mov xor cwtl adc xor xor sbb pop cwtl push inc xor xchg mov aaa je adc js and add sbb and xor xor and xor cmp and add inc (bad) pop xor daa aad aam push out push (bad) mov mov out add (bad) je add bts jmp negb pop add mov sbb cmp movb mov mov add pop xchg mov push xchg or test je xchg jge sets loop in clc out (bad) (bad) pushl mov jmp mov sub mov mov inc test je dec jne xor movb call and or mov push and mov jg pop jne mov cmp jne xchg cmp jne or je (bad) fistpll jne adc cmp jne add add or (bad) jmp jne mov xor ret nop sbb shl add ret notl je mov jmp out xor test or sbb adc clc int mov mov add test arpl inc ffreep jb lea fwait outsb mov dec mov jg (bad) out add test cld jne mov or push std jne mov aaa dec push (bad) cmp jne mov adc push pushl addl cmp je pushl jb jmp movzbl movzbl jmp or (bad) jmp (bad) sar std jmp cld cld jmp insl lcall cld jmp mov cmp jne inc inc inc cmp test out xor ja mov movzbl sub jmp pop push xorb push mov decl adc or icebp lea stc inc mov mov sub hlt jae mov aam add push pop mov cmp jge mov mov cmp sbb je mov sbb jecxz push add inc in call sub and in js mov pusha pushl or int3 mov mov inc jmp pop jge sub fwait dec push sbb push loope leave mov (bad) mov adc pop fmull inc rclb (bad) out repnz je mov movb jmp movl add faddl ficompl cld mov push add mov jne testl fcomip ja pushf fdivl dec incl sub mov out adc je dec je cmp repnz mov mov (bad) bnd fmuls dec hlt jmp fwait or add outsl push ja add inc push push hlt mov adc clc outsl lcall sbb jne cmp ja incl sahf in jmp movl or jmp or inc pop in loopne fnsave mov pop push mov js sarl sub cmp je cmp xor fs movl pushf cwtl jmp or inc cmp aaa cld add je cmp cmp je loope fcmovnbe or jmp ljmp out into or (bad) movl push mov fdivr and and test js scas test je std dec cld les dec inc add orl test mov add jge test je pop or or aam data16 lods or push loop fdivl (bad) fmuls adc adc add scas mov or mov lock lret jg jne lea and and pop pusha cmp mov mov shlb cmp jne mov je andl mov cmp mov sbb test mov and iret add fdiv cmp mov in pop sub mov ret mov iret cmp sarb test jne in movl addl jle dec decl or mov mov mov (bad) add incb mov pop mov leave add (bad) (bad) out push push lea andb mov andb mov jne imulb orb cmpsl andl je push push push loopne,pn popf mov in or sub mov dec fild mov int sahf add add pushl movb push cmc pop add push ja fisttp (bad) cltd push push cs sbb ret push adc divl sub pushl testl (bad) jne or jmp or sub dec jmp (bad) cmp je cmp cmp mov pop (bad) add je cli lcall push movb jmp mov mov fisttpll jmp add (bad) outsb roll inc mov jne hlt inc rcr pop and pop add cli out (bad) std mov cmp jne (bad) jbe decl clc add sub pop adc mov dec mov test or jne in incb add and push insb mov push or inc leave decb ret push adc loope or (bad) (bad) ljmp lea inc lock mov ja je cmp jne sub mov addr16 call mov into jno xchg movsb ja mov dec adc and imul and insb testl jne mov out out cmpsl push mov sub sbb add mov je pushf add ds sbb push mov ret sbb (bad) std sub push lea (bad) sbb cmp clc cmp jg sub mov jg loopne lea mov xor and xor and (bad) decl jmp and or cmpb mov jne adc imul clc or dec stc add (bad) add or dec jle add xchg dec xchg dec push dec xorl jg dec fadd ljmp adc test (bad) xor (bad) sahf add into rorl add mov pushf xlat or inc inc add add (bad) incl xor pop iret jae rorb or adcb inc push mov xor cmp cmp arpl je cmp je adc jg neg xor inc je mov mov sbbl mov (bad) mov xchg xor je add dec lds outsb ret jge je cmp pop leave pop loopne insb inc nop push mov xor sbb add and mov add fsts xor jg fstpt pop adc cmp and movsl pop mov cmp jne lcall movsb popf jmp ljmp ja push or lret push jo sub inc mov mov daa adc xchg push adc mov dec or inc or testb (bad) (bad) sbb je mov testb clc jne jo mov xor jne (bad) jnp cs jmp shl shlb lret leave mov ja fucomp inc cmp jb add add jmp or jb loopne ja add sbb pop movzwl lea testb mov mov add std mov jle mov inc xchg cld je lahf in fnsave cld jmp mov mov (bad) je jnp mov inc mov cmp dec dec dec sbbl cld mov jne cmp je outsl jne push (bad) cmp ja sbb and dec sbb mov dec xor outsb sahf xor scas cmovo lock ret xchg leave ret push (bad) pushl add outsl mov cmpl jne xor mov push cltd mov add inc test mov jle addr16 add es add and mov xorl in incl roll cmp and mov xor adc js adc jne fnstsw pop leave ret mov test ror jmp mov or inc ss inc testb mov shr mov fs lcall ja repz ret rolb (bad) jne test je fadds jo jmp fs adc ret jmp movsl mov add ljmp int3 js scas insb fcom dec nop mov in dec and aas and xor dec cld xor inc inc add aas adc push or push mov cmpsl popa add mov fmull popa xor addl clc addr16 mov add inc and mov pop add je andl (bad) jg push cmp jbe lea mov mov push arpl mov mov pop pop inc enter mov test mov xor mov mov out pop xchg mov shlb mov add add push or push or push or sar add ret push push mov jmp or (bad) pushl or dec or or push push pop pop pop pop pop ret jmp push loopne stos push pop push lock cmp mov push icebp pop sbb inc ja add leave and aam pop dec or test adc clc mov in adc imul mov add or leave sti adc ret add loopne nop xchg movzbl and or rolb lea push or loopne inc jo lock jle mov mov jle cmp jl xor xor xchg ret jne push push push decl fmuls sub xor cmp loope jnp std cmpb je fwait (bad) addr16 xor cmpsl andl lahf mov mov or add test dec jmp lock push pusha mov jne (bad) aam (bad) (bad) sub sbb not and mov and cmp jb mov pop xchg and scas fidivr cmpsl test jmp dec and push push test js cmp push mov or adc xor lock shl cmpl jne iret adc add or push or (bad) incl dec je dec jne push push jmp push push jmp push push hlt jg sub push xor pop jmp mov adc insb (bad) push or cmp hlt cmc pop ljmp and lret jl cmp sub mov inc mov pop push mov cmp (bad) (bad) das cmpl je mov sub je dec je dec push rcrl test shlb sbb xchg leave test fs adc lods pop ret and into rcrb cmp jp clc push inc or je mov pop ret or mov push std push dec sub jge test xchg (bad) aaa rcll pop or push pushf xorb sub sbb jg add or in sbb fldcw adc push jbe inc cmp in jae cmp fidivr arpl lea (bad) mov cmp call (bad) call test test push paddsw dec add das lock xchg mov mov fadds cmp mov in scas ja jne mov add adcl incb add cmpl mov adc popa in mov adc or fistpll ret jmp or lea sti add add lea inc shr push je or (bad) (bad) jg add jmp mov mov pop add ds out jp sub idiv sbb add mov cmpl jne inc fisubr (bad) and popa lea addr16 loop adc (bad) jg jae movb orl movb fild sti ja jmp shl mov pusha clc add pop shl mov (bad) cmp inc pop test rorl dec in lods popf adc inc adc mov cs add fs popa dec xchg xchg add xor lcall rorl push jmp mov inc dec rolb and je test jmp xchg arpl fdivl adc ja sarl add mov gs add inc (bad) pop mov outsl shlb scas ja mov lds out call roll pop je jmp fldln2 add add add and xor jg add jg jg mov inc sbb push add pusha jle and mov outsl jg jg jo mov mov and mov mov loop shr pop outsl jg lea fcomip call lea dec jne and je mov add push mov lea lea (bad) fcomip add jne dec loope je mov mov inc inc dec jne pop pop pop pop ret mov out lds shrb lret ret mov shr add inc dec jne pop scas lea dec mov xor xchg aad dec add xchg dec sub push mov push xchg jne mov lock rcrl mov xchg adc or mov mov data16 pop (bad) mov inc (bad) fsubp pop scas stc dec sbb shr lds adc js sub cmp aas lock cmp xor andl xchg sub (bad) sub cli mov jne sub pop jo inc insl add je icebp sar ljmp sti je mov or mov hlt or js xlat mov and pminsw pop scas lret orb mov cmp ret out repz xor test test xchg repnz and fnstsw add call cwtl pushl (bad) sar mov dec fcoml or dec lock push push (bad) fdivp jmp testb jne orl pop jl inc call je dec jns and notb sbb in sbb xchg jnp outsb js (bad) and add ljmp add shlb (bad) lds (bad) scas clc les cmpsb imul test es test jne xor inc and inc cltd call test fdivr (bad) pushl fisttpll add ret jne test je sub movzwl mov add data16 dec jne jbe ret mov add push stos loopne pop dec cmp push or adc (bad) test jne gs cmp jne xor popl or frstor mov fcos mov xchg add aam ret pushl mov sub mov jg enter and mov push (bad) es mov je dec jne push shlb push fild (bad) sti cs dec adc mov pop jmp jb mov pusha leave adc int3 inc or or icebp aas jne sub sar dec in pop fnop cmc add lret jmp mov sub mov rorb mov data16 dec cmpl or jge js cmp jle cmp mov sbb sbb push and or pop in cwtl andl and mov andb adc push add fcomp adc dec lea in add and jge push bound dec inc mov xor dec lcall pxor push jne outsl cmp data16 mov jg call xlat rorb add inc out int dec inc inc jg cmp dec lahf inc inc jo mov rolb ret add (bad) fistp lea dec jne and je mov (bad) (bad) inc xor shr je mov lea dec jne and je mov inc dec jne pop pop ret mov fdivrp std push fildl xor push mov and add jne shr in addb clc pop ljmp aas (bad) or lea pop mov sbb push push xlat xor mov add xor ret sbb or push xor pop outsl test add fstps wrmsr mov add jns xor daa mov addb pop lea inc je call in mov sarb adc cmc or les aaa mov jmp sarb jo pop sbb jne xor lock pusha mov inc sbb jmp sub movzbl cmc pop sbb dec adc mov mov shrl add jne cmp jnp subl adc adc or sbb sbb add aaa adc dec xor push pusha adc fwait mov mov (bad) (bad) add pushl add outsl clc out ja (bad) fisttpl cmp je sub mov sbb js repz stos pcmpgtd je mov shrl push add dec push fst cmp test ret push xor mov test jl jg cmp jb data16 add loopne sti mov jge push jg test jne mov fildll pushl pop push (bad) iret cmp (bad) sar xor mov push mov cmp jp,pn out or mov jmp cmp jg jl and ror jmp (bad) fistl jne test data16 (bad) fbstp mov and mov sub or negl pop jmp and std mov and cmp je push pushl loope or push icebp add in sbb push sub incl pop mov mov cmp inc std mov push xor cmp jl cmp dec mov or subl mov or ds cmpsb js in xchg or mov test adc pop jmp cmp rorl test add add test jne cmp je mov add sar mov movsbl dec push or incl je dec jne mov not mov loop mov popf in clc push adc jp jne decl mov jg ss shr mov cmp mov add and add sbb mov ljmp inc jo mov adc (bad) pushl mov mov into mov mov add testb mov je mov pushl std cli cmp je push je fwait cmpb mov mov lea (bad) jg mov scas movb je mov mov mov inc aas mov mov inc xor add sub sbb push add or shr clc add push mov pushl inc dec fnsave in test cmp or jl mov xchg pop add (bad) cmc testb je push stos add test mov jne orb jmp andb mov mov add and inc mov mov cmp jae ja mov cmp je or mov lock inc inc arpl mov enter inc xchg pop cld add sub movb jmp jg fdivrs inc adc add dec shll negb lahf aad aas mov jge or add decl incl add lock sbb push scas sbb or push add inc nop (bad) mov jbe adc (bad) ja in jmp mov mov lock add pusha and jne incl in mov test js inc fidivrl (bad) movzbl jmp cmp jg jl push dec movzbl inc cmpb je mov xor (bad) adc mov movsbl loop jns cs inc cmp jne add jmp (bad) (bad) incl psadbw dec je inc mov cmp jl mov mov mov inc cmp jo pushl sub jmp neg cltd push push lret push cmpsb (bad) jp inc in pop lock adc or scas or lock dec dec aas adc loopne cmp pop orl sub inc or inc mov decb test mov or leave cmp setne add dec mov jmp add out adc adcw inc aaa stos mov pop cmp and fist cmp je mov mov rolb arpl add jae scas ljmp cmpl jne cmpl or or sub xor add or adc (bad) pop cmpl cmpw je push (bad) clc or sub or and sbb movb jmp mov cmp cmp enter inc mov sbb sbb je mov testb push add or mov mov mov inc pusha sbb push pop cmp jne cmp push (bad) out mov cmp jne mov jno (bad) mov and mov (bad) lret inc pop das andl mov push icebp xchg je (bad) adc roll test adc aas and or lock inc iret pop xor cmpsl xchg pusha push aaa xor and add scas cmp sub adc sub xchg push movzbl int3 jns sbb clc cmp add aaa je pop lahf jg sub pop add je add popa (bad) (bad) pushl orb mov lea mov and or mov jmp adc (bad) or jmp andb jmp sbb daa ds push pop ret cmp scas mov cmp push inc ja or xor mov add push push push push pop inc add pop lods rcll fcomps fidiv clc (bad) sub sbb cmp dec (bad) jg xorps add mov mov mov mov mov (bad) (bad) jmp lea mov or mov je or je add add cmp jb cmp ja add jg aaa fnstsw (bad) or (bad) cmp sbb add xor cmp out or loopne or jb neg mov pop cmp int3 jmp or sbbb push mov adc ja lds push ss mov in jb movb jmp mov mov mov nop and aas add inc jl cmp jg add mov inc cmpb jne je cmp push mov ret push push push ret jo mov enter mov inc sar cmp pop xlat outsb xchg jle cmp jae mov adc mov inc and xor icebp cmp jb lea or push negl jb or lods xor jmp add add lahf sbb push mov orb mov clc lods pushl xor test jne std adc mov jmp and add test add cld cmp lea fs mov add xchg roll sub nop je mov and add and out incl mov je mov cmp jl pop jg add mov inc cmpb jne pop ret ja or jge (bad) xor add loope sub call jnp inc cmp je inc inc jmp inc (bad) int3 scas movl je fisttpl add or les mov daa clc lcall sub add push in add add scas xchg add mov jl push sti (bad) decl sti mov add jne bound and insb outsl arpl imul mov add js add jne insb add adc add outsb jne sbb dec push sarb (bad) mov add add add inc inc add push sub jg call pop or aaa xor push push pop add and or or pusha add jo add and pop add or add add (bad) (bad) decl add jb js je jb arpl jae add jae arpl outsl add gs jmp add add dec dec add cmp jae jae adc add and dec jbe mov add adc add sbb pop das adc push adc pop inc inc insl arpl insl add pop out pop jb add jbe adc cmp jne je and je pop xlat jo and jae fsubl sti dec dec or outsb sub or jo imul add outsl xlat jne inc pop bound adc add or fnstenv xchg add popl add aaa aad out dec inc mov int push jnp add jae out jae daa popa or mov or jb imul fcoml jae push mov call push decl outsb rcrb dec aas outsb xor in popa outsl popa (bad) outsl add idivl add pop pcmpeqw outsl imul jne dec dec cmp cmp add (bad) add dec and and dec dec das fs jns mov push inc inc add gs bound in fbld jnp outsl jbe dec arpl push gs adc insb ret aas inc jne jne je jne inc dec jne gs lock aas pushf inc jo imul mov popa jb popa outsb or pop add scas jmp add dec add insb add dec popa jns mov pop jb inc bound dec popa outsb add je jb sbb inc jb or jb or outsb gs jne dec outsl outsb sbb push jne popa je cmp aaa add fs clc pop xlat daa add add add inc add inc add sub xor xor add insl ja jae jb add insb jae gs popa insb jne inc inc (bad) jg jnp sub add add or or push (bad) (bad) (bad) call adc adc sbb sbb push pop and and and es sub sub sub cs (bad) (bad) (bad) pushl xor xor cmp cmp ds inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec (bad) (bad) (bad) call push push push push push push pop pop pop pop pop pop pop pop pusha popa bound gs imul cmp jb je jbe js jp jl jle add out jae push push inc sub ss inc or push dec dec inc dec ljmp lahf inc cld and add jne push outsb imul outsb and ljmp add cld xor xchg fsubrs and cmp add sbb and cmp insl andl jb jbe and dec dec pop push (bad) mov aad fld and inc loope push xlat mov cmp jb sbb test lods stos dec xchg inc and pusha aaa (bad) lock add add mov xor sub inc stos orl xor gs dec test call mov jns jne negl dec sub jae popa das jae adc dec fcomip pop pop shrl addr16 outsb or xlat jge cmp dec pop imul pop insb dec jp daa popf or imul mov out jmp adc sub jno add sbb outsl arpl popa ret popa push sbb jo xor into pop inc inc outsb test push insl int3 lea sub mov je jmp push mov sub arpl xchg scas divl repz cltd xlat jne out dec add insb dec xor inc ja add adc dec outsb fsubl and dec popa pop lods imul cmp insb inc das add icebp pop inc insb std popa ja adc xor add mov sub jo jae out add in sbb adc leave xchg dec cmp fiadd and out call outsl inc push push popa (bad) loope add cmpsb out xor lahf cs test dec repz lds mov dec mov xchg aaa adc mov jno fs pop mov adc (bad) pop pop popa cmpsl or jbe inc and mov add xor lds add pop ja jno and push outsl ss xchg mov out add and pop sti jbe and pop cmpsb jb lret insb adc lods cmc mov or dec das jne cmp ja cmp gs in popa lret xchg lds cmp repnz cmp outsl hlt xor loopne scas stc iret outsl cmp stc fs fnstcw arpl lret xor (bad) xor lea add inc add xor mov inc insl jne lods xlat ret cmc jmp imul loope jge das or cmp push in loope cmc jmp iret icebp icebp je inc push xchg (bad) cmp add dec popf fsubrl in dec pop mov (bad) xor adc lahf andnps outsb cmc pcmpeqb jmp xor push cmpsl push pusha push xchg adc jae sysret inc xchg dec xor dec xor (bad) jne outsl jmp outsb jmp pop pop mov inc lds jo sbb sarl ret loope mov and and add add fisttp push (bad) or jns mov fidivr adc fucom adc adcb adc cmp fsub add fdivl or mov mov pop (bad) ljmp lock pop fidivl lock fld1 loope andb lea (bad) pop xlat nop jne or sub sti add push jp xor add xlat sub inc (bad) mov (bad) dec mov outsl js xor mov adc js mov inc add add stc (bad) push and ds or or xor pop cs or mov addr16 popa fistpll cmp add (bad) push repz js out out jb and add outsl mov push imul add rorb add sbb dec add lea subl adcl or mov jb pop nop sub xchg jp xchg subl (bad) pop ds subl pop or lock (bad) lcall imul addl adcb test mov andb cmp addb inc insb (bad) pop movsb push push add sub mov pusha push pop js jo jo lahf test pusha add push xlat test cwtl and add mov add or dec add add or add add add add add add adc imul loopne xlat push push add fldcw roll add add xchg mov std inc dec mov push nop (bad) gs adc or mov and mov and int3 xchg or mov (bad) (bad) (bad) (bad) incl mov mov xchg xchg xchg xchg cwtl cltd lcall mov jmp test stos stos lods lods scas scas mov mov mov mov mov mov ret (bad) inc (bad) (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) loopne loop (bad) (bad) jmp in out call in out out lock repnz cmc div clc stc cli sti cld std (bad) incl adc push inc push movsb push stos jg inc movsb dec jg mov lods mov call test gs jae jb bound arpl outsw jb lcall and dec popa jae inc arpl sub (bad) jmp outsl jo jo add jae popa addr16 outsl js add push jno aas lds add dec add push (bad) mov fldl and and insl jo gs and dec incl jb and popa jae and mov ljmp jb jb push jae jb jo push add inc popa jae ss andl jb jns adc cmp and and add push jns gs pusha insb outsl (bad) (bad) fistpll fldenv je jb popa and popa jb daa add popa outsb std out out out iret and outsl jb arpl jns outsb jae jb arpl and cltd or and jnp mov add (bad) out jg and popa insl imul and jae leave jne and and sar imul imul gs ss sub setae roll call or add insb popa arpl outsb ficom pop pop and outsl jae jb fistp mov pusha outsl insl outsb imul jae addr16 and outsb gs pop xchg clc dec (bad) je bound sbb repz push je (bad) fstl pusha inc dec add fs jb je jb imul and pop add inc outsl hlt daa add arpl fbld jbe jb jne insb and or insl popa jo pop add insb nop test orb andb ret test sbb ret popa pushf sbbl xchg fs sbb mov jae pusha popa sub aas xlat hlt add mov mov cmp fildll and insb iret jbe sti daa loope std adc in add add jl jmp cmp cmp add cmp fwait cmpsb sub jl add es inc out jmp add sub xor aaa pop mov gs and sub std jnp add add or sub sub ds jo push add jmp cmp and (bad) or add lret daa pop pop imull loope outsb gs jb imul fidivr je ss gs bound arpl xor aas xor pop data16 push mov insb and fs aaa jo push cs arpl insb pop les fucomp mov add out in add xor (bad) xor enter pop xlat jge mov mov or sti adc pop mov cmpsb jmp sbb pusha subps pop lcall dec inc inc cwtl scas (bad) out cmp xor xor (bad) xor cmp test lcall add or outsb negl cld add out mov hlt pop lcall out call int3 xlat jne imul out scas mov jne out fwait out jg arpl jmp scas in repz jmp and lret in mov cmpsb jmp in xchg in jnp outsl in in imul fwait outsl call rolb in in movsb pop mov push xchg jae scas imul test add and imul jmp ljmp ljmp ss fdivrs ljmp add dec shlb add dec jo add xchg subb outsl imul stos (bad) jg dec outsl outsl imul jb jbe insb gs outsb mov outsl adc push jae es pop fidiv lock gs jp dec gs or or mov inc movhps test neg (bad) sub add add jb test idiv mov jo popa je jle cmovae jb jnp sbb push imul adc fs gs fnstsw insl sub outsb fs gs jne arpl add nop push outsl outsl insb push xor popa jo push loope add push gs imul add loopne cltd stos dec dec add sahf or ss mov xchg std jg sbb push jns je insl push imul cltd or jnp daa xor pop insb adc push outsb push gs mov addr16 and cld pusha pop in dec outsl jbe cmp xor xor jb sahf int3 add dec gs jae roll in dec clc fstl jne outsl insb fs loop and jo je cwtl popa pop loopne mov outsl icebp in into add or or push jne ja insb inc into add adc outsb add add fisttpll stos dec outsb in gs subb dec add add xor xor pop sbb imul dec inc push inc inc inc inc inc jae inc inc inc aad adc pop or xchg mov pop sub xor cmp xor inc add sbb inc pop add mov stos aas mov ss roll aaa rolb cmp cmp cmp push or shl sbbl or jb pshufw add sbb test cmp sbb or push push sbb sub lsl pop sbb sbbl xor adc pop stc pop pop cwtl add int3 inc pop cmpl jo sbb pop sub and mov xchg and les pop decl lcall add xor or add push faddl dec in cmp add aaa mov out in xor jg (bad) decl stos dec outsl jp insb insb popa das xor xor sub insl jo sar aam imul dec inc and xor sub inc arpl out call popa outsb packuswb and sub call inc outsb arpl inc cmp push pop sbb insb outsb add push add add and orb xor inc cs gs outsl jg clc jle and and xchg cs insb gs push xor xor inc fist fmuls stc sub add sub add icebp mov push gs inc jne insb add add mov sub arpl cmpsl and insb add je dec push gs bound lret fnop (bad) pop shll fs gs inc push add ja hlt dec dec push pop fs inc push inc jo jae jbe pop dec imul (bad) ljmp je push push pop push jb gs gs sub jne add add (bad) out popa jae arpl inc push push inc push inc or dec bound cs jae add pushl inc call dec pop add outsb add and jmp push push dec inc push inc push dec xor aaa adc ljmp add (bad) mov insl scas add das sub fs inc jp jns imul je xor mov dec jbe push xor lret jmp je and es and jmp and fs je imul dec pop add pop mov stc adc (bad) imul adc fstpt js jne xor aas dec popa xor fsubs pop xor ss jle xor ja and add cmp inc out add adc cld sbbb mov sti inc add sti call adc cmp enter rolb dec pop and incl adc push aaa add sarb cmp sbb test test paddb (bad) jnp push ds cld and dec push add sub add aam mov (bad) cld out jnp mov cld jmp pop pop std popl nop pop add loopne add and sbb add add pop push in jae adc pop sldt sub fnstenv xor rcll push add pop mov xchg pop add es fadds std sub std sar ret and sbb test dec xchg add lea add addr16 xchg outsl mov and add xor pop cltd stos das sbb scas push cmp aas int3 push lods pop dec pop or das pop sahf popa cmpsl insb adc fdivrs pop pop pop in xchg or push daa pop sbb aas add pop sub rorb in xchg sub outsb mov or (bad) and sahf xlat xchg mov es xchg sbb rcrb or inc out mov (bad) jg test mov xchg and mov add sbb sub sub mov stos or enter (bad) dec lods mov (bad) mov out xchg xchg mov std pop addr16 in pop add call xchg cs inc push bound pop popa cld aad push jl jae fs sbb dec adc sbb jne push or mov mov hlt add cmp jmp cmp mov ret sbb jne jmp add or sub iret sbb pop adc int3 sbb sbb test sbb or sbb pop out adc sub cmc adc repz ljmp mov ds cmovno inc pop (bad) icebp fsubl xor pop fs pop icebp pop out pop pop pop jnp mov xor nop sub xor int3 negl das sub push lock pop (bad) paddusb mov push xor and sbb mov add cmpsl pop pop push clc fsub ds into nop pop pop sbb push out pusha adc add push add je sub and pop add int bound add sub add add fs xchg ret pop add lock (bad) incb adc add add iret pusha (bad) jns add jge pop cltd cmpsb fild fnstsw push rorl sbbl inc or test shll insb mov (bad) sub mov cmc mov iret mov in call or add fdivrs xor push ficompl and pop fisubrl xor incl mov add rcr fsubp stc add xor mov repz aad add imul imul outsb add aad pop repnz lcall add pop mov dec aad pop dec add aad pop xor sub andl mov push aam aam aam fsubr dec testl aam aam pop test in into dec cwtl sub xlat aam aam into insl cmp pop nop add xchg jae call jg lods aam adc loop scas aam rcrl in add rcll mov sti (bad) not repz fmull (bad) lods pop jbe pushf pop repz jmp mov rcr das mov rcrl iret (bad) not mov sar add rclb rcl inc or scas rcrb out add add cmp cwtl mov sbb inc ja or outsl jmp call add lcall ljmp in add mov pushf sub dec or mov js in push add pusha sub (bad) jae pop adc jnp adc add cmp outsb outsw mov cwtl xor mov or addb popa ss fmul fisttpl pop es fiadd and mov psadbw mov pop pop sub cvtpi2ps sbb sbb dec push (bad) movl add sub add das fs jp xor stos mov stos adc (bad) or add sti dec int inc inc push and test add add mov sysret add (bad) jmp inc add pop nop add add add jmp add add (bad) (bad) mov mov int mov push push jb addr16 insl (bad) (bad) (bad) jmp arpl outsb outsl je bound jb outsb and and and fs mov out add sbb pusha ja,pt add jo inc popa jns mov (bad) mov jmp and fwait outsl mov imul mov pop sbb ljmp arpl (bad) fild push inc add dec add add adc add jmp jmp and add add pusha or add lock mov mov add add add add iret popf add pop sbb pop jae lds add push cmp add add mov mov inc mov sahf xor pushf add das adc in pop mov lods repnz dec pop jae pop popa adc pop xor (bad) push cmp adc xor cmp cmp xor jae and loopne jb jb sbb idivb aaa enter add adc mov rorb xor xor add and (bad) sbb mov add push (bad) lcall or jecxz add (bad) call in and sub (bad) incl add xor mov or mov pushl std dec push push jne and test je push add (bad) fdivr cmp jg call cmp (bad) je lea push call jmp lea sti in inc movsb (bad) (bad) jmp pop pusha mov cmp je add mov jmp pop (bad) fcomip jg leave push xchg and dec push jno sti (bad) movsb mov (bad) (bad) call add push aaa pusha arpl push push imul jp mov xor (bad) (bad) (bad) jl xor adc or js lea mov mov (bad) (bad) (bad) call (bad) mov addr16 jmp call cmp jle push add or (bad) pushl idiv test jne sub sar lea jp loope lea test (bad) (bad) (bad) decl test push and push mov imul popl and cmp jne (bad) (bad) (bad) incl jo sbb fs and push inc sub pop loope push inc sub leave xor sub (bad) (bad) (bad) jle movl out pop and sub xor xor add les push inc js (bad) (bad) incl and or sahf and push add xor (bad) jmp cmp jne (bad) (bad) decl sbb jno xlat jo test mov rclb adc call push and cmp xchg mov cld ja fidiv push std push add (bad) (bad) inc or push mov and fistp push push mov push or xor push push sbb (bad) (bad) pushl arpl jae mov push push jnp sub xchg je or adc add sbb push push (bad) (bad) (bad) jmp out mov and cwtl or and aaa jbe or push and sbb sbb jae (bad) (bad) (bad) ljmp mov test fstp in add int3 add push pop scas cmpsl mov push (bad) (bad) (bad) incl pop push cli and sub mov std pop aas insb mov push sub (bad) lcall mov out jg (bad) (bad) sub sbb push mov call or cmp decb (bad) (bad) (bad) inc push mov sub fsubr xchg sub mov lea cli fstl (bad) mov in cld (bad) incl leave jne popf (bad) in push mov adc (bad) (bad) (bad) call (bad) ja lea push rep fildl add pop mov (bad) (bad) dec pop shrd sub ja std adc push movl mov or add decl pop test jne mov loop add mov push ja lea (bad) (bad) decl mov lea push add add call lea push lea xor ja cs mov jmp decb sbb sbb pop add xor pop in push (bad) (bad) (bad) (bad) call test mov incb inc pop sub cmp jb lcall test (bad) (bad) dec je xor mov mov mov cmp sub je js cmp (bad) (bad) (bad) pushl push push push inc push mov push cmp je push (bad) (bad) out inc push (bad) ljmp or add call mov test je adc and push push fadds add (bad) (bad) jmp out js insl test dec xchg xor lock sub push js sbb (bad) (bad) (bad) (bad) cmp fldl2t add push loop xor clc fnsave xor and (bad) insb push push push aas cld (bad) (bad) (bad) (bad) mov inc cld push add (bad) pop pop xor add mov xor mov sbb push (bad) (bad) (bad) ljmp lea push push test push nop inc clc pop (bad) xor ret or dec int3 inc add xchg (bad) (bad) ljmp mov in lods add fucomip xchg cwtl mov js (bad) push mov (bad) (bad) push mov cmp ret in call push pop xor int sub push (bad) (bad) (bad) call (bad) out (bad) call mov into pop pop inc sub cmpsl mov dec cli pop push inc (bad) (bad) (bad) call mov add lea (bad) in (bad) push movsl push into or add (bad) (bad) (bad) lcall inc sub aam xchg out or pop push in push push es xorl out hlt pop cmp (bad) incl adc sbb andl push pusha sbb std sbb hlt lea call jo or decl shr push lea push mov (bad) (bad) jmp out pop bound lea fnsave push push jp les add or (bad) (bad) ljmp clc (bad) sbb daa xchg xor lea push jmp lea out (bad) (bad) (bad) incl les inc jl pusha shll lea fxch or (bad) into repz pop idiv (bad) (bad) call pop rcrb pop dec adc rcr mov out arpl mov les (bad) call jns lea mov mov push (bad) mov xor (bad) (bad) (bad) fisttpl call clc ret adc cmp pop xor and out sub (bad) (bad) (bad) jnp mov nop mov add pop aaa (bad) mov (bad) ds (bad) (bad) (bad) fnstsw popf test mov or js out je mov (bad) jnp push call cmp (bad) (bad) inc je push call jno (bad) push xchg adc dec lea lea or int3 (bad) (bad) (bad) call sub out stc in sbb push push push sarb jne (bad) (bad) incl (bad) sti mov push push mov call mov into ds (bad) jmp lea dec in lea call inc test dec and fmull test or (bad) (bad) (bad) (bad) in xchg in cmc cmp mov fdivl divl test (bad) neg fbstp arpl xchg sbb xchg jge push mov movsl scas mov jbe sub dec test mov (bad) (bad) (bad) (bad) incl jge dec xorl int3 add jae lahf jne pop mov push lea (bad) call insb and sbb cmp lret je xchg adc popf sahf push push (bad) (bad) (bad) decl adc jp push and mov mov lea mov (bad) fwait cmp (bad) (bad) lcall cld outsb out mov mov add rcr test test loope ret (bad) (bad) (bad) (bad) fistp push ja and fucom and push push les mov xchg cwtl (bad) jg jmp lea mov adc mov add leave mov (bad) (bad) decl pop mov inc or das sub mov adc arpl std mov (bad) (bad) inc les call mov out loop pop cmp mov and int (bad) (bad) pushl rorb add cmp jle addl movl je lret inc lea push inc xor xor repnz push (bad) push xor enter (bad) decl fadds out lock ds cmpsb neg jnp lock lea xchg testb jp inc add push es dec mov (bad) outsl negl test dec mov push (bad) (bad) (bad) decl inc or and std mov jnp jnp mov aad (bad) (bad) (bad) decl inc adc (bad) adc daa or sub das pop jnp xor cmp call (bad) (bad) lcall fdivl lahf fwait dec jb adc push popf pop pop stos aaa shr mov add or (bad) incl repz bt push jl or cmp in outsb cli mov (bad) (bad) jp add pop xor and jo out fstp unpcklps or and jmp jle sti decb incl add fwait and pop test jns sti aam out or fucomp iret push pop test js sbb (bad) (bad) push or push sbb pop dec or adc jge insl sub cmp (bad) (bad) inc jne bound out jle ljmp sahf pushf jne and sbb cmp (bad) (bad) (bad) pushl or and inc cld jl jbe (bad) and push in dec xor es ja mov (bad) call adc ret jmp cmp jne adc adcl clc pop pop (bad) (bad) (bad) decl xchg xor fs (bad) (bad) aam inc je push fstl sbb (bad) (bad) (bad) call mov out (bad) incb orl jmp adc push xor push push minps jle fwait clc call pop xor inc or sbbl mov mov mov (bad) (bad) decl sbb divb cmp fwait and test fiaddl lock cmp (bad) (bad) (bad) pushl or add mov subb jge in pushf sti in je push adc (bad) (bad) (bad) (bad) clc out insl test incl mov fsubrl and push call das (bad) (bad) (bad) (bad) sti jmp popa push push adc imulb jne dec xchg fimul in je sub aas or jg (bad) (bad) jmp in sbb sbb push xchg gs loope (bad) (bad) (bad) ljmp add jge add cwtl add decb mov mov push vmread (bad) (bad) (bad) jmp sbb xor sub inc mov pushf cmp jo dec ss cmp mov (bad) std mov sub mov pushf pop data16 pushl and data16 adc (bad) (bad) mov data16 out fistpll inc add mov pop dec lea (bad) (bad) (bad) lcall mov (bad) and les add pushf dec and add iret rcr ja cmpsb add sbb sbb jge adc (bad) (bad) (bad) decl add xor mov jecxz inc and mov xor jg mov jne and (bad) (bad) (bad) lcall fisubr sbb into pusha mov ret je in pusha aaa pushf ret pop mov (bad) arpl or movsb (bad) (bad) (bad) decl roll test lcall cmp je push sub (bad) (bad) ljmp add fistp je pop pusha lods adcl (bad) mov lods (bad) add stc cltd and sub jne movl andl xor inc mov (bad) (bad) call jle movb jno movb lock shrb into jle cmp (bad) lcall pushl mov xor mov fucomp cmp push or (bad) (bad) (bad) pushl cmp sbb es xor adc in arpl jbe pop and or (bad) (bad) call call pop out nop or aas nop push sbb cs fisttp dec lcall (bad) (bad) cmp sbb ficomp fimull jae fdivl imulb pop imul pushl mov into xchg or or cmp loopne loopne inc enter or mov (bad) (bad) (bad) (bad) fisttpll rorb xor inc sub or push mov push and inc sub cli (bad) ljmp sbb and cmpsb pop and fs mov sub ret (bad) (bad) mov decl cmp je xchg jae cmp loope jnp cmp faddl mov (bad) (bad) (bad) (bad) mov shll je cmp je aas add mov xchg loopne or aas add sub (bad) jmp icebp adc (bad) cmp mov or and je cmpl (bad) (bad) (bad) (bad) frstor jne jne mov (bad) icebp adc add rorb sub jmp pop sbb add jae jae popa push nop jmp mov lret (bad) (bad) sbb fcmovbe jne sub pop mov jecxz enter addr16 push (bad) (bad) (bad) jmp push fstpl not and test call ficomp divb test push (bad) (bad) jmp je or fucomip mov xchg pusha movsb and lods jmp cmp adc jmp iret hlt cwtl cmp shll rcl pusha mul mov mov jbe (bad) (bad) call add mov jae lods sbb or sti fcompl push ds (bad) (bad) (bad) call push arpl and pop call call and and xor (bad) (bad) jmp aam sbb fsubrp clc popa lock xor pop pop or add adc mov mov (bad) movsb cmp inc xor dec pop daa cmp cs xor and sbb sub cli (bad) (bad) (bad) fimul cmp add rorb sbb (bad) (bad) (bad) cmp lock sbb in mov pop inc jns or add xor clc (bad) (bad) (bad) incl sti iret dec decl xchg xchg sub inc or cltd or dec test fist (bad) (bad) (bad) jmp or adc dec cmp pop or scas call mov out mov and (bad) (bad) ljmp shll push jg outsl out adc or inc and (bad) (bad) pushl jmp incl mov jmp xchg xor std (bad) (bad) cmp call cmpl jb inc or test add test (bad) (bad) (bad) lcall int3 lret cmp test pop cmp into push mov pop sbb push push push jg (bad) (bad) (bad) pushl out and adc add mov clc cmp jae mov (bad) std pop cmp cmp (bad) inc add (bad) jb addr16 pop cmpsb (bad) fsubrp pop je inc test xor or mov (bad) cmp aam rcrb and jl mov cmp or push rol jo and je (bad) (bad) (bad) (bad) faddp lcall mov xchg add test cli sti test dec test (bad) mov (bad) (bad) (bad) decl je push jnp (bad) ffree adc mov mov mov sub or sti jb (bad) (bad) (bad) ljmp jb mov je or pushl and mov (bad) mov call cmp adc inc (bad) (bad) (bad) (bad) cmp (bad) in cli (bad) jne cmp je inc pop mov pop shr stos (bad) aaa mov movl add add jae std pop sbb pop mov jmp movl and (bad) (bad) (bad) jge js loopne cmpsl inc sub sbb cmpl jne movl pushf mov (bad) jle mov mov ret adc xchg dec pop popa push add cmpsb aad push add stos aas (bad) (bad) (bad) (bad) fcmovne js pop das cmp and (bad) mov pop inc and adc dec push lea lahf jp (bad) (bad) (bad) cld xor and pop xor inc out ret (bad) jne xchg imul rorl cmpsl sar mov add orl js mov incl or (bad) (bad) (bad) incl or inc and mov (bad) (bad) std jg cmpsl rolb add int push (bad) (bad) (bad) jmp dec out test idiv sti ja mov cmp je rolb cld add mov (bad) sti jg decl jl mov nop mov add icebp (bad) lahf jns cmp (bad) pushl incl sti mov xor cmp jae xchg andl andb andl out xor (bad) (bad) incl xchg lahf add add icebp outsb add xchg cmp jb mov push ja jg (bad) (bad) incl add fstpt mov mov nop je cmpl (bad) (bad) clc (bad) je mov mov (bad) (bad) (bad) push roll dec test jne xor test mov and mov sar shl add (bad) (bad) pushl fcos decl mov mov push lea xor (bad) (bad) (bad) push pop mov inc clc add incl cmp jl xor mov inc (bad) stc faddp sbb mov push orb jmp repz inc add test jne push pop jmp (bad) (bad) (bad) decl sbb mov sbb pushl add xor xor (bad) (bad) incl out stos aas inc inc jmp out add or je incl jmp sbb push cltd inc cmp (bad) decl jl cmp dec jns pop leave dec jmp push xor xchg (bad) (bad) (bad) inc or mov (bad) and cld (bad) fmuls pop add add (bad) (bad) push cmp jb pushl (bad) jns daa add pop xchg fwait test jl pop pop ret inc cmp (bad) ljmp jg imul and pop lcall aaa xchg divb lea add cmp das (bad) (bad) cld pop (bad) (bad) (bad) decl push test jne push inc repnz clc jg cld ljmp test (bad) (bad) (bad) (bad) (bad) fldpi xor cmpb pop lea je push pop cli adc aas push lods cmp pop jg (bad) (bad) (bad) jmp clc inc xchg add cmpb jne adc mov jns mov and mov out cmp mov (bad) (bad) (bad) inc mov xor pop pop mov sahf sti out xor cs jmp xor push add jmp out loop jae fistl rclb popf push sarl (bad) out (bad) (bad) (bad) decl add or pop push or adc (bad) mov and xor cmp mov (bad) (bad) jmp sete inc adc cmp pop test je mov aas mov decl or push movzbl push jmp cmp pop into std incl and mov incl mov inc (bad) (bad) (bad) jmp jl (bad) incl cld add cmp je cmp jne dec add inc incl (bad) (bad) out clc (bad) cmp push jbe jmp and or ja mov inc jmp dec (bad) (bad) (bad) (bad) jmp sbb out (bad) decl adc add fildl leave jmp inc inc cmpb je lods es (bad) (bad) (bad) (bad) (bad) mov data16 lea cmpb jne mov jmp xor xor mov popf jae (bad) (bad) (bad) (bad) jmp mov fnstsw leave jne lret (bad) je cmp sbb out jne (bad) dec cmp je (bad) (bad) incl cmp sub cltd jnp and or incl or loope pusha jmp inc (bad) (bad) (bad) (bad) incl ret mov or mov movb xor dec adc mov (bad) call incl add leave sub fistl jae int3 andl (bad) (bad) push mov mov ret fcoml (bad) fnstsw test or pop fstpt sbb (bad) (bad) incl mov mov scas (bad) cld lea push push push lea mov int3 or std (bad) decl aas (bad) (bad) (bad) pushl mov cmp jae mov shl lea cmp jb cmpl out cmp (bad) (bad) (bad) pushl add in (bad) push push inc in sahf je pusha aas bound xor pop mov push (bad) (bad) (bad) call cmp jne pusha outsl add cmp je adc xor pop (bad) inc call (bad) (bad) jmp push push push sub push sar inc push push push push mov (bad) mov jae je mov cmp (bad) (bad) (bad) pushl push sbb in (bad) pushl push pushl and cld sbb in push or pushf (bad) (bad) (bad) (bad) mov or pop xchg push dec and pop das jl push push fadds and and std pop cld push push push xor cmp sbb rorl decl cli imul mov loope (bad) ffree and mov mov (bad) jmp (bad) fdivr or push push push rclb lds gs call (bad) call loope lock nop add ret mov fs add jo xchg (bad) mov pop (bad) (bad) (bad) dec sub push mov push cmpsl pushl lock xor nop add push movb movl (bad) (bad) clc jg lea ret or iret xor cmp add add or inc or inc or mov inc add jne decl cld mov (bad) (bad) lcall mov mov cmp je lea lea mov lea in xchg mov (bad) (bad) incl mov cmpsl dec adc xlat push ds je fisttpll js jg jno fdivs into cmpb (bad) (bad) incl je lea dec (bad) je push cmp xchg inc hlt ffree mov aas lock (bad) (bad) (bad) dec mov cmpl jne xchg cmpsl mov je icebp aaa jge cmpsl mov cmp add inc (bad) (bad) (bad) decl push jg dec incl cmpsl mov les xchg adc aas push mov cmp loopne loope je (bad) (bad) call test mov aaa std add ja mov mov xchg lock cltd incb (bad) loopne add call dec dec sub jge push lret imul and popl push movq (bad) (bad) jg dec dec std out (bad) mov push cmp je add lea jb add (bad) pushl or jae sbb xor int mov test jne loopne or jno cli add (bad) (bad) (bad) decl jecxz popa ljmp lahf adc cltd out mov mov mov pushl dec add stc or test push push pop mov andl add cmp (bad) jl mov (bad) (bad) mov add jne movl ficomp cmpl pop ffreep (bad) (bad) (bad) call cmp dec cmp popa imul ds divb das cs xchg jp jae ja outsl cmp jmp cmp mov jge mov push (bad) (bad) (bad) (bad) call pop mov jmp loopne or pusha pop sbb add jl cli test jne pushl (bad) (bad) (bad) call sub pop ret mov imul decl dec out mov mov je test je notl inc jg add gs add (bad) jg add clc xor xor addb xor js stc (bad) (bad) (bad) (bad) push mov xor xor cmp jne mov test jne mov or pop (bad) (bad) (bad) (bad) incl add loopne or or pop add pop fsubl or add clc sti lcall (bad) (bad) (bad) lcall add nop push add lea push mov aaa adc mov pushl add xchg (bad) incl jbe cli cmp jl (bad) xchg andl std (bad) aaa clc jmp mov push pop pusha fcoms nop mov (bad) (bad) (bad) lcall lret ds adc or fdivr cs jns es jl (bad) (bad) jg jo fsubrl leave (bad) xlat icebp pop mov push or jne push call sbbl sbb pop jb push clc (bad) (bad) pushl (bad) repz add ja add decl (bad) (bad) (bad) (bad) jge ja,pt jbe clc mov sbb cmp push push cmp aas pop mov or xor cmp je mov jmp push incl push mov sti js lret movl sbb cmp (bad) (bad) call or mov mov cmp ss sub jne or pop jne pushl pop int3 rclb xor pop (bad) (bad) (bad) jmp jmp mov jmp es lret push mov dec push (bad) flds call aas xchg faddp and push xor cmp ss add pop daa pop pusha sbb (bad) (bad) cmp fwait (bad) mov push addb inc cmp ss cmp fs leave (bad) (bad) (bad) lcall rorb loopne lea movl mov add cmpl std fucomip (bad) (bad) (bad) decl mov inc add decl jne aam pop int3 rcrb push call add hlt test ja (bad) decl test mov mov and (bad) mov (bad) (bad) (bad) pushl fistl outsl cmp je mov xor pop cmp jne mov fdivrp (bad) (bad) incl jg jns mov jle jg,pn jnp xor lds pushl dec sub push pop mov fidiv xchg inc pop inc mov out pop cmp add push jns xchg adc addb in (bad) mov adc mov sbb add mov je cmp (bad) (bad) (bad) (bad) faddp mov aas dec pushl je dec ret fstpt mov test fnstcw enter call pop cld je mov push faddl ljmp adc or cmp (bad) (bad) (bad) fbld cmp je push mov jecxz jle xor je pop jne fstl (bad) incl gs jg sub jmp xchg xorl test inc mov sbb (bad) (bad) (bad) dec (bad) mov jo and sbb jo test add add (bad) fcomip jno mov jg xchg mov sub xchg cmp mov (bad) ljmp adc mov outsl push sub (bad) call call je (bad) (bad) incl xor jl jbe ret mov adc cld scas jle adc lock inc (bad) (bad) ffreep sbb mov xor movzwl mov mov mov mov sar (bad) jmp adc rorl cmp stos stos mov into mov cmp inc (bad) (bad) (bad) decl (bad) lea add pusha loopne mov adc idivl sbb in sbb idiv (bad) (bad) call lea push (bad) fcom cmp jbe cmc or aaa movl test (bad) (bad) incl mov cld mov movb xor enter loopne cli (bad) (bad) (bad) incl cmp ja sub inc push lea inc (bad) cmp add lcall (bad) (bad) sub mov lea jnp push push (bad) into std push enter (bad) mov pop and push push mov orb jbe adc add and orl cld push (bad) sti jo aaa mov sti je orb (bad) sbb (bad) (bad) incl test je adc dec (bad) bound mov pushf or mov (bad) mov inc movl js mov xor sar (bad) (bad) decl sbb orb idiv sbb jmp cmp ja push and (bad) decl add inc cmp jb sahf inc cld movb mov (bad) (bad) (bad) jmp xor call je cmpl mov pop mov xchg mov add mov cmp (bad) (bad) jmp push dec and xchg call je lcall mov es into pop pop xchg call (bad) (bad) (bad) jns jne clc gs cltd pop sub jmp sbb pop in lock xor icebp movb (bad) (bad) (bad) pushl in adc inc or dec insb mov mov mov mov pop xchg mov (bad) out ljmp dec jo mov movsl imul out add pushf push pop mov hlt (bad) (bad) (bad) (bad) ja dec or inc mov adc jne orl stos jg out fs (bad) (bad) fucomip or add (bad) pop pop ret outsb ret in (bad) push and jbe sub (bad) (bad) (bad) call mov jne (bad) shlb out add adc pop cld je lret jmp sti mov (bad) (bad) (bad) std jmp cmp jne and jmp cmp jne lcall test les pop (bad) (bad) (bad) decl pop cld andl mov mov sub cmp stos or scas clc decl test insb mov xor mov cmp jne mov sub das ret (bad) (bad) (bad) mov jmp lock in (bad) xor idivl out (bad) call incl add test (bad) jmp addr16 mov jb adcl inc call push add popa or aaa sub jp lea push cmp mov ja dec decl call incl pop shrl out fwait cli ja mov test je inc decl mov xor ljmp cmp inc mov imul mov lea or jmp mov jmp (bad) (bad) ljmp movzbl movzbl jmp loopne ja orl cmp clc jbe mov (bad) (bad) (bad) incl lds adcb incl push adcl imul jge add jb mov fwait movl lods fcomip sub push mov lea lea pop mov mov (bad) (bad) (bad) incl add (bad) out sti dec jne mov and mov add jbe pop jg (bad) (bad) inc fwait (bad) jle add test mov add jne ja mov cmp push push mov (bad) (bad) call jmp mov lahf adc lock xor cmpsl out stos stos cmpsb cmp or mov call adc jge jnp out ja and dec ret das clc mov (bad) (bad) (bad) decl pushl mov push mov cmp je push mov adc (bad) lcall jbe fadds adc mov mov repz add movsl andl push out call (bad) (bad) incl aas xor test stos ss cmpsl lods adc (bad) jbe jg jns (bad) (bad) (bad) pushl jo jne call faddl jne or add (bad) (bad) jmp pop lock mov mov rol fdivrp jg add dec inc (bad) (bad) (bad) call mov call decb cmp mov mov jmp (bad) call rolb jge sbb sbb out sahf clc xchg call xchg lock add adc xchg (bad) (bad) (bad) (bad) call push call mov xor jmp lods push jmp jmp paddd cmp nop popf sti out ds push (bad) jmp andl mov adc cmp (bad) (bad) inc test jne push adc mov test push pop xchg mov xchg leave cmp cwtl fiaddl stc sub in cmp ja push (bad) (bad) (bad) lcall sbb pushl in ret add pop cmp sbb and add pop mov mov (bad) (bad) dec test jne lods lcall std fwait call ja push push (bad) adc ljmp loopne jmp inc push sbb sbb out cli popa sbb xchg push cmpsb jne push (bad) (bad) decl cmp out loop jp aaa mov test add push dec pop jmp and dec std inc popf aad jmp sbb incl loope test je push xor pop (bad) (bad) (bad) push icebp cmp jae dec dec mov scas dec or mov cmp cli mov cmp (bad) (bad) jmp ja push push xchg subps mov cmp mov call inc adc nop ret ljmp or add adc jne xor (bad) (bad) lcall scas or mov leave lret es (bad) dec push jmp adc inc push (bad) (bad) (bad) call and jle mov out repz loopne lret psubq lds adc jmp mov (bad) ljmp push add xor and jle aas jge cmp pop mov push int3 sar (bad) (bad) (bad) jmp xor inc cmp outsb dec push outsb (bad) rorl jbe xor and repz arpl (bad) jmp sub xor nop xor inc or bound pmaxub (bad) (bad) (bad) push imul add add cmp jb imul add pop cmp jae push lea mov lcall es mov cmp out test pop jl jg (bad) (bad) (bad) pushl ret push pop sub je add or sub into cld fdivs les (bad) dec jnp ljmp sub pushl mov es pop lea mov sbb push mov sub je sub je dec je sbb div mov (bad) (bad) (bad) lcall xor push or cmp or xor xor inc sbb ja pusha (bad) (bad) (bad) incl cli out outsl cli loopne je loopne pop push dec sbb pushl (bad) (bad) dec leave sahf dec cld cmp je cmp je cmp sti (bad) sti add sbb aam inc (bad) (bad) (bad) jmp jne mov mov movl rclb dec nop mov or add (bad) (bad) (bad) cmp cmp jge mov push cmc push loop mov mov incl jmp adc (bad) incl xor ja push call pop jmp dec adc sbb (bad) (bad) decl insb jnp pop in xchg sub add inc rorb xchg xor add (bad) (bad) (bad) push add add in push inc mov xchg test xor sti (bad) fucomp call pop andl jle push lea icebp incb cmpsl inc sub test and es lea dec sub (bad) (bad) jmp sub stc cld out outsb pop mov aam mov mov mov push cld data16 (bad) (bad) decl mov shrb aas adc mov lea mov sbb (bad) (bad) decl mov fmull dec or lea adc scas mov (bad) cmp or cwtl push mov xchg (bad) (bad) jne sbb adc push (bad) popf or jne sbb (bad) mov mov push push aaa adc xchg (bad) testb inc outsb (bad) (bad) (bad) pushl fbstp movb jmp pushl cli pushl and data16 inc int3 fadds (bad) (bad) ljmp les dec cltd push jbe mov (bad) call nop aam or je adc push push (bad) or jg (bad) jmp pusha test test push test push cld ja (bad) stos lock jb (bad) lcall clc jg (bad) sub lea cmp jb mov mulps ja cli cmp jae mov decl add ret jb push decl pop inc pop jb push pop push decl jmp (bad) (bad) ljmp sar push lea (bad) (bad) mov xchg or mov xlat mov add push call (bad) (bad) (bad) (bad) jl inc or jb daa rcr push push fsubrs aas mov dec aas sub les sbb (bad) (bad) lcall ret andl pop or and adc aad push aaa fild cmp push sub (bad) pushl or imul cmp cmc inc mov pop popa gs (bad) (bad) mov iret jo push pushf mov cmp jb std cmp push mov mov (bad) (bad) incl cmp mov inc cmp roll pop mov mov dec fcomip (bad) lcall sete mov pop jg mov repnz add mov adc sbb call movzwl xor push lea sbb or stc jb (bad) (bad) decl mov or fnstcw sti jb inc add cmp jb (bad) mov out addr16 add (bad) (bad) (bad) (bad) call outsl mov add mov push sub or std fs clc xor push lea add jmp mov push xlat xor cmp push and fsts jl fidiv cli (bad) decl push mov call loopne stos ret fcoml ds add (bad) (bad) decl xor addl sar xor (bad) mov sbb cmp incl outsb (bad) (bad) (bad) pushl or clc push jb xor dec add je sbb in cld push ficoml mov or add aaa cmc pop mov je mov jle and clc fdivrp (bad) (bad) incl adc nop fwait xor out add jg sti mov ss outsl lods push mov cmpl aam push inc (bad) negb mov xchg jbe mov (bad) call xchg mov sti add mov mov jl pop aaa out fadds inc sbb xchg sti fcomip in cmp sub mov sub push sar inc into cmc add je fnstenv (bad) (bad) (bad) decl add mov push xchg dec bound pushl repnz (bad) (bad) (bad) incl xor sub out out imul pop push add mov (bad) jg enter cmp je (bad) (bad) incl rorb or lock cmp je inc cmp push lea (bad) decl jg push mov cs pop adc push pop mov or jp (bad) (bad) (bad) call aam pop mov jne push enter scas cmp mov push (bad) (bad) (bad) call add jle es push pop data16 decl std aaa cwtl mov jmp ljmp cmp loop repnz mov mov out push ja je dec jne xor (bad) (bad) call movb xor jg pop cmc mov jmp cmp add rcrl or clc (bad) jmp add xor call add jnp (bad) (bad) (bad) (bad) (bad) jle rolb add test je mov aaa (bad) (bad) cld (bad) (bad) pushl xor add add pushl int inc lcall sub (bad) (bad) inc ret lea or cld mov sub or (bad) jg sbb mov or dec hlt mov (bad) (bad) (bad) incl fwait mov test push mov push sbb add and xor add (bad) (bad) (bad) call cld cmpb je xor inc add sub in add cld xor (bad) (bad) jmp mov clc frstor xchg push push push push push das ds ror hlt aas imul fs (bad) (bad) decl mov sub jo cmp je (bad) (bad) (bad) fild cmp je (bad) (bad) incl bnd lea lea mov mov cmpl jne (bad) or inc sub (bad) (bad) incl ds add jmp fs add add sarl push add inc add push (bad) (bad) (bad) (bad) jge test or mov push mov pushl pushl pushl mov cmp ja pop and mov mov lock fcos sub (bad) (bad) (bad) pushl pushl pushl sub add push push push push mov push sbb xor (bad) xor (bad) pop xchg (bad) (bad) (bad) (bad) (bad) jge decb rorl aam fistp (bad) jmp push mov and add (bad) (bad) (bad) cmp test or pop adc mov or (bad) mov (bad) ljmp clc arpl jbe mov outsl pop (bad) std push out cmp (bad) incl push jns mov cs ss mov pop sub addl add incl daa idivb add pushl adc and es addr16 (bad) (bad) (bad) jge push setg mov (bad) and xor lahf or pop je xor (bad) (bad) (bad) jmp js jl jae xor mov cmp pushl lret push mov mov (bad) (bad) decl cwtl rorl scas ss mov mov adc dec push mov push sub sub decl pop adc mov inc mov movl pop ss gs xchg (bad) (bad) (bad) decl mov loop (bad) jb mov pusha fldenv dec hlt and or js sbb lds mov (bad) (bad) jmp adcb cwtl imul pop or pushl push jmp leave sbb add outsb idiv ss in lret adc rorl pop or dec inc adc (bad) (bad) decl dec or fnstenv pop subl std movsb and jbe pop (bad) (bad) (bad) decl adc mov orb or nop adc jp enter (bad) (bad) (bad) pushl pop out aam mov dec (bad) out mov xchg mov fadds adc lcall mov and and cmp mov cmp (bad) (bad) call les fs movb adc inc dec inc push fs dec rolb dec enter std aam and pop cmp (bad) (bad) call inc add imul add hlt jne cmp lods add inc (bad) (bad) lcall push mov cli add xor flds sub mov sbbl fwait out (bad) jmp enter add push adc and shr je repz ja mov stos pop or ljmp push add xchg jmp adc fstp add jne (bad) (bad) call pop ds adc add sbb cmp jle mov inc adc lret (bad) (bad) (bad) cmp into cmp jne or mov sub dec cmp call add inc sbb lcall jmp mov mov jecxz push popa xor sarb sub (bad) (bad) jg cmp xchg sar adc add ja or stos add and (bad) mov cmp (bad) out ljmp inc fwait jle int3 negl jb lea cmp push ja push jl les ret je movl int3 fs scas lcall movl (bad) (bad) (bad) decl mov cmp je push pushl jbe in aad jnp add jne jbe gs jg lock cli ja jnp push push and or (bad) cmp or mov jb dec adc inc and call inc clc jg sbb sbb test (bad) mov (bad) (bad) (bad) jge cmp jle mov ss ja (bad) mov (bad) stc sti je (bad) (bad) (bad) (bad) fildll jmp mov ja xchg sub pushl (bad) lock sahf mov push push (bad) (bad) (bad) (bad) cmp jne push push jmp pushl pushl aaa push and pop inc in lcall cmpsb pop (bad) ljmp aaa jne mov in xchg and imul xor shl rcrl pop jge and and or push sbb test pop or inc movb sub (bad) (bad) inc mov mov shll and xchg xchg adc sbb sbb outsl and jg cmp push (bad) (bad) (bad) (bad) (bad) (bad) jg xor loopne pop and mov test je lea push push pop ret push cltd ja push pop adc (bad) (bad) dec scas mov inc adc push adc add enter sub and pop or jmp inc repz test addl or and enter test adc js (bad) (bad) (bad) pushl mov fcomps dec pop in add add adc add sbb or sub test insl push (bad) mov adc mov add cmp jbe sbb (bad) (bad) (bad) push cmp jb sbb (bad) jg cmp and and cmp pop pop jne cs jg call or (bad) jne jne push inc (bad) incl rep jmp (bad) (bad) incl mov mov jb and add lds test add jmp (bad) (bad) incl dec xchg (bad) out ss dec (bad) dec push sbb mov mov mov mov fistpll add incl push mov add add pop int3 out dec (bad) lea sub add cmp (bad) (bad) (bad) call movb pop mov adc testl inc dec pusha dec sub (bad) (bad) lcall dec mov lret dec mov inc mov cmpsb sti in inc (bad) in call push lock (bad) (bad) push hlt hlt clc ret lcall add add add or push add out dec cmp (bad) (bad) ljmp sbb pop pop leave ret nop icebp or xor fcoms mov cwtl rcll sbb (bad) (bad) (bad) cld lea mulb jl andl es ja ja aas dec pushf mov neg imul dec xchg pushf cmp dec mov loopne mov lahf pop dec cld mov and mov (bad) (bad) (bad) incl adc pop dec mov cltd jle sub sub sbb (bad) (bad) ljmp nop daa (bad) (bad) cwtl jae int add mov (bad) push (bad) in mov xor add (bad) (bad) call dec pop ret xor xlat pop pusha add js xor (bad) mov xchg imul sbb (bad) xor rcll (bad) (bad) jg adc or or or fwait insl rcrb mov xchg fdivr (bad) (bad) jmp jae pop int3 add aaa jae cwtl adc decb fwait sbb pop (bad) (bad) (bad) call clc and sub add push dec mov loopne inc or push mov icebp adc (bad) (bad) (bad) ljmp or test mov jne lock xor mov cmpsl js je adc (bad) (bad) incl rorb cli sar cli add js push xor fdivrs jge test xlat nopl decl sub adc xor nop sti pushl mov pop test (bad) (bad) (bad) inc je cmp je and cmpsl xchg mov nop fadds cld mov (bad) ljmp mov dec fcoml or push (bad) mov call pop push testb jne orl add and jmp pop mov popf sti cmp je dec pop and in daa iret xlat or sbb (bad) pushl sbb pop aam outsb test ja in jne sbb (bad) xor (bad) mov add (bad) (bad) (bad) jmp adc (bad) push test je lret push ljmp lcall cmpsl push mov jmp mov cmp (bad) (bad) cmp je add dec mov hlt aad sub movzwl mov add data16 aad push je testl (bad) (bad) aas (bad) (bad) out call push mov push push test jne test jne cmp jne xchg (bad) (bad) ljmp adc pop pop ret imul pop fnsave loopne in mov mov jmp mov add aam ret int addr16 xchg mov daa jmp cmp and icebp sub movzwl mov subl push dec je jge testl add decl (bad) out (bad) incl cwtl sti (bad) decl mov push inc dec (bad) pop jmp jb cmp (bad) (bad) js sbb dec push int3 inc or inc or clc movsl xor xchg rolb decl (bad) pushl sub fisttp mov mov js es test dec aam mov out sub (bad) (bad) (bad) mov fildll add cmp jne sbb rolb popa fwait sub or (bad) (bad) pushl and mov movl mov push push push push mov fisttpll inc xor (bad) (bad) mov mov or adc dec cld pop sarl adc push sub xchg dec popf sbb roll xor rclb (bad) (bad) (bad) decl dec lret lds jns and and je cmpl (bad) ljmp je cli lcall sub sub mov (bad) jl jo clc mov (bad) (bad) cmp pop movl fadds mov mov or sar (bad) jmp decl add cmpl mov mov cmp jne incl sti ret push (bad) mov add fwait add or iret mov or or push (bad) lcall pop pop pop daa call ret data16 je (bad) out rclb roll xchg loop (bad) mov dec icebp call movdqa add add repz and inc push pusha (bad) (bad) (bad) pushl cmp rorb sar aaa mov shr je jmp out ljmp dec jg es adc loop je into mov add decl dec add jne ljmp (bad) pushl pop pop ret mov neg (bad) (bad) (bad) incl xor push mov arpl cmp dec jne shr dec add jne pop mov pushl push sub sar add sti push push lea sub and leave jbe mov add sbb or xor adc pop push mov ds pushl mov (bad) (bad) call and shr je jmp fwait mov sarb movq add outsl push outsl pop fsubrs pop (bad) (bad) (bad) (bad) fisttpl jg jg outsl data16 mov outsb outsl jbe jle and cmp fwait int outsl jg (bad) (bad) (bad) (bad) jg jo mov (bad) aaa std push fs jne and rol ljmp outsl jg lea (bad) (bad) (bad) decl out (bad) fwait js and roll mov mov lea lea dec jne mov (bad) (bad) inc lcall loopne je xor inc dec jne pop pop pop pop ret mov jl sub sub push mov (bad) (bad) inc and mov shr pop ds inc dec jne sbb int3 sbb fwait cli incl enter sar (bad) (bad) jmp enter add enter rcrl add std (bad) mov ret sub jmp (bad) (bad) (bad) dec jmp mov xor add in mov or pop (bad) (bad) incl xor sbbl scas daa sub sub sar (bad) (bad) jg fisttpll adc push jne sub movzwl cmp jb cmp ja out incl (bad) (bad) (bad) decl jmp mov movzwl push or cmpl es cmp je into (bad) (bad) (bad) (bad) std stos sti jmp movzwl lods push mov mov add push insb add xor mov (bad) (bad) (bad) (bad) sti jg (bad) xor int mov movzwl sub xchg pop push enter dec clc xor or cmp sub inc mov (bad) jne iret ret testl movsl xlat sbbb mov (bad) xor nop mov mov je (bad) je mov or (bad) lcall or and or imul add inc or test mov icebp jg imul mov xor dec adc xchg (bad) (bad) (bad) decl stc sbb sub dec mov or jae,pt inc push cmp rorb (bad) (bad) (bad) (bad) jg pushl sub mov add mov add and add rorb (bad) (bad) call push or sub add cld cmp sub mov mov mov push pushl testl pop pop scas sbb cmpsl lea leave jno popa sti pop push (bad) (bad) (bad) pushl lea leave ret sahf jecxz loopne push jae bound in pushl mov inc cld (bad) (bad) (bad) call inc or (bad) jne adc ja and sub dec or ror pop decl call push push push mov lods mov cld incl or je add bts jmp into (bad) (bad) lcall add push sbb add mov xor and mov jmp add test push jne mov cmp jne xor cmp jne or je (bad) (bad) lcall (bad) call jne adc cmp jne add add or jne mov (bad) (bad) (bad) (bad) ficom pushl nop sbb shl add ret test add inc out xor idiv (bad) (bad) inc add je xlat jge movsb mov pop into adc rcr pop sub mov add jle arpl mov fmuls icebp lea cmp and flds adc decl cmpw je inc mov (bad) ja cmp jb movsb in push push push mov or je push (bad) (bad) ljmp lret mov mov mov das (bad) out mov in pop je popf and (bad) (bad) (bad) jg out push cmp ja add loop out out (bad) or (bad) cmp jne mov xor clc ja leave (bad) (bad) (bad) (bad) cmp je mov neg mov pop sub add adc (bad) jne mov (bad) (bad) dec in and xor div mov adc out pop lock mull mov mov add jmp (bad) (bad) (bad) decl pop (bad) lcall and shr rcr shr rcr or jne div mov std out mov (bad) call inc and mul add jb cmp ja jb cmp ja jbe dec sub sbb (bad) (bad) (bad) decl or mov (bad) fadds mov mov cmp pop ret lahf fstp out add lcall jne (bad) iret ds mul and loope fs add sbb roll sbb add call xor add cltd add push popa inc (bad) mov int3 (bad) (bad) (bad) mov add dec add xor add out (bad) mov insb jae cmc (bad) (bad) pushl add push gs popa insb jne jle (bad) or insb insb outsl arpl inc outsl jb (bad) (bad) jg inc js je jb arpl jae add jae arpl outsl add gs add mov cltd insb sub (bad) test xlat (bad) (bad) (bad) (bad) jge sbb xchg or idivb add add pop nop and add xchg or (bad) mov cwtl add sub stos pushf sti push or pushf jmp decl mov add shrl (bad) sbb jmp add dec add adc lcall add das pop das cmpl cmp pop inc inc loope ja adc insl add (bad) (bad) (bad) pushl xorl jbe adc je out push xor push pop jo je and (bad) (bad) (bad) incl jne add dec dec or jae mov sub and orl (bad) incl popa or pop xlat insl mov or add or and (bad) jg (bad) fnstenv xchg add (bad) cmp jge out add jne subl mov xor (bad) (bad) (bad) jnp jnp push add jmp add push outsl je aaa push lods sbb andps (bad) (bad) (bad) incl movsb jmp jne jae mov scas mov imul rcrb dec aas outsb xor decl jo punpcklwd mov add pop pcmpeqw outsl aas (bad) fsub (bad) (bad) (bad) ljmp jne dec dec cmp cmp add jg fwait mov dec and and dec dec das (bad) (bad) (bad) jmp lock mov dec and inc arpl bound sti fs lock outsl jbe dec arpl (bad) (bad) pushl push gs (bad) insl clc xchg jne jne je jne inc dec jne ja std xchg add (bad) (bad) incl jb insb or jb push pop pop jnp jb popa jb popa outsb or pop add jnp jne add dec add insb add dec popa jns ljmp inc pop jb cmp dec popa outsb add (bad) (bad) call je jb sbb (bad) jle jb or jb or addr16 jnp outsb gs jne (bad) (bad) decl dec outsl outsb sbb push jne popa je inc jb add add add jle mov (bad) (bad) incl pop mov je imul aas adc jb pop inc rcrb pop imul mov and and aas sbb inc xor sbb mov pop (bad) (bad) (bad) incl xlat pop push push cmp fbstp add fstl imul dec and call cmpsb push mov and cmp rorl insl and cmp incl jno gs idivl test pop jb outsb xchg and push sub xchg xlat dec imul mov jae inc insb sub jecxz sbb daa jmp inc mov jae (bad) (bad) (bad) pushl repz outsb jae dec popf cmp jo push xor xor shll sbb (bad) (bad) pushl or pop out insl adc add cmp add and imul lcall add dec mov xchg addr16 clc dec add (bad) (bad) jnp gs xlat jne xor add add adc popw js ret pop outsb pmulhw push add inc (bad) (bad) (bad) ljmp loope outsb sti mov popa je jne pop and xor jle (bad) (bad) incl popa or fisttpll add mov out xor out outsb cmp mov jns mov and (bad) (bad) jmp (bad) cmp ja (bad) arpl out cmp in cmc out adc insb sbb addr16 (bad) (bad) (bad) jmp cmp push inc out icebp push ret inc pop daa push xchg xchg sub mov lahf (bad) (bad) (bad) ljmp mov loope and inc ss xor sbb mov aaa jno in dec mov (bad) (bad) (bad) incl cmp mov popa cmpsl insb push inc ss ret lods inc and bound jo dec add (bad) (bad) pushl xor aaa adc add mov dec pop fnstenv nop sbb dec (bad) (bad) (bad) lcall outsl xor loopne sti jbe jb mov adc pop in insb (bad) (bad) (bad) (bad) cmp adc test das pop (bad) pusha ljmp and or mov (bad) (bad) inc sub fldenv mov cmp lods sub outsl imul mov rcl iret outsl scas icebp fs incl idivb fsts sub imull adc xlat cmpsl popa pop jmp sub lahf (bad) (bad) (bad) incl loope scas insl jne push xchg push imul arpl add das loopne xor (bad) (bad) jmp cmc jmp inc and cmp or jge (bad) clc xchg je inc push (bad) (bad) incl pop popa push xorb addr16 xor aas push fwait inc clc pop setge pcmpeqb (bad) (bad) jmp rolb popa addr16 push xchg insl leave pop inc mov outsb jae push dec xor jge pop jge (bad) (bad) incl mov jb les das dec jo cmp cmp iret lds jmp sbb push iret (bad) (bad) (bad) (bad) call pop or sahf aam sbb add out insl mov push mov adc (bad) (bad) incl insb sarb mov pop pusha adc adc sbb sbb sbb sbb jns enter std lcall rcrb nop pop push mov adc js add (bad) (bad) call pop xor sbb hlt fmul outsb pop adc pcmpgtw dec mov popf jo (bad) outsl mov pop (bad) (bad) (bad) (bad) fnstsw cmp in and inc add add cmp push push psubusw stos mov cmp (bad) (bad) (bad) lcall lahf orl push cs or call addr16 popa fist pop xchg dec imul (bad) (bad) jmp loopne ja ds out (bad) faddl aas jb and add outsl fwait sbb mov pushl repz push add mov add mov add adc in test in add addl mov add das jnp inc (bad) add add add ret push aas add push and (bad) (bad) call push adc fwait add rorl xchg std pop (bad) add add mov (bad) jnp add adc (bad) decl add add pop push nop and ss and das in xchg mov add (bad) (bad) mov int3 or add test mov (bad) nop xchg xchg (bad) (bad) call cwtl cltd lcall mov cmpsb cmpsl test ljmp (bad) (bad) ljmp mov mov mov mov mov ret (bad) (bad) (bad) lcall int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) loopne loop (bad) (bad) std jecxz in out inc jmp out out lock repnz cmc div clc stc cli sti cld std decl jecxz add push pop xchg decl or or push movups (bad) call adc adc push pop sbb sbb sbb push pop and and and es sub sub std (bad) (bad) ljmp xor xor ss cmp cmp cmp ds inc popa bound gs (bad) (bad) fbld push insb insl outsb outsl jo jb je jbe js jp pop pop pop pop pusha pop insb push fstps push (bad) (bad) jnp jge jg jg xchg xor dec add inc dec dec dec (bad) (bad) (bad) decl dec dec dec push push push push push push push push pop pop pop or popa test jg jmp inc xorps (bad) (bad) (bad) jmp push je je outsl outsb add idiv out pop push jae jb bound arpl outsw jb (bad) (bad) (bad) lcall push fdivrp mov popa jae inc arpl gs outsl jo jo das std lcall out loopne mov popa addr16 outsl js add pop enter (bad) (bad) inc mov adc pop sbb add sbb jp xchg shll or (bad) (bad) (bad) pushl arpl xchg adc add inc (bad) out stos jmp or dec push (bad) (bad) (bad) lcall mov loope dec (bad) jmp push je dec outsb imul gs je imul arpl popa test fs outsl popa fs insb insb cmp jbe push jns je jp ret gs (bad) (bad) (bad) ljmp jb gs push cmpsb gs xor inc movq and arpl pop xor enter (bad) (bad) (bad) pushl add pop sub pop jge add add or es mov inc (bad) (bad) (bad) jmp ss mov pop cmpsl jns push add push adc mov and pushl pop add add test add aas fsubs xor pop test (bad) decl pop pop jbe call dec cmp fs dec loopne xchg outsb push mov add (bad) (bad) (bad) pushl ja add stc xor add add fdivl xlat jmp xor xor (bad) incl cmp xor aaa and add and add add push js mov js scas push or repz cmp ret stc popa xor sub pop insl xchg sub push (bad) (bad) (bad) lcall jae mov aaa std jmp push push js arpl gs pop push dec inc out clc aaa cld (bad) (bad) (bad) pushl popa je dec hlt inc jb insl push popa jb push dec popa insl gs xchg inc outsl jns cmp (bad) (bad) jge xchg add cmp je outsb arpl inc outsl push popa insb imul xchg (bad) (bad) (bad) jl pop stos jp pop or dec mov dec testl mov jle xchg pop inc stos cs (bad) (bad) lcall xchg out add mov push add sti or add (bad) (bad) fcomip popa rcrl mov adc sti add push out xor aam adc add (bad) (bad) (bad) decl add pusha aas adc imul push stos and add leave inc daa ret jle sub sbb add or (bad) (bad) call xchg mov outsl inc sbb pop jnp test add or repz push jbe scas sub (bad) (bad) (bad) fnstsw int3 jg adcb mov pop (bad) xor sub cwtl add pop mov xor push cmp inc xchg lahf pop cmp add shlb stos add push rorl sbb dec incl (bad) (bad) (bad) incl mov adc cmp or (bad) in mov sysret fidiv (bad) (bad) (bad) pop or sbb push sbb in or sbb mull cmp add gs mov dec (bad) xor in fnop aam xor les nop mov test je insb push dec inc cmpsb jmp sarl xor (bad) (bad) (bad) ljmp and lcall add lock jo popf xchg rolb les sbb into jne (bad) (bad) (bad) jmp mov lods add mov fs fs pop cmovs in mov (bad) incl or std add arpl pop arpl arpl arpl arpl (bad) (bad) jmp enter rolb repz cmp jecxz fldt xlat arpl pop mov pop arpl (bad) (bad) (bad) jmp pop sub adc jmp lcall lahf bound ret mov insb pusha xchg xchg (bad) (bad) (bad) ljmp jno add cmp lock lcall popa scas mov out xchg (bad) (bad) (bad) decl sbb in mov dec popa addr16 add add push movsl adc add (bad) (bad) (bad) lcall jecxz push rcr add pop inc jl jg ret rolb add jl loop int3 (bad) (bad) (bad) jmp jns pop add cmpsb fild add mov loopne adc jg inc jle pop test (bad) (bad) incl add shll push test cmp or inc cwtl sti mov in (bad) (bad) jmp call jmp pop pop jle xor add push ficompl and mov (bad) (bad) lcall push xor loopne add xor push pop cmp pop scas jnp ja (bad) lcall push lret clc incl or sub pop pop add xchg add and (bad) (bad) ljmp adc adc sti ficomp sub push cmp getsec mov popf sahf push adc mov (bad) (bad) call add outsl pop iret or inc pop (bad) psubq out pop push rdpmc push pop pop push pop mov (bad) incl pop pop sysret aaa data16 pop scas insl setae repz les enter xor mov (bad) (bad) jmp pop js stos rcrb sbb dec xlat mov add ja pop (bad) (bad) (bad) mov cmpsl lahf push movhps pop xlat mov pop sbb add mov (bad) (bad) (bad) aas pop add dec icebp add jae dec test add mov inc out cmpsl xlat add ret cs ret (bad) jmp add lcall das out add lods loop add add (bad) (bad) pushl (bad) jnp adc push adc (bad) mov add or add add je inc (bad) ljmp arpl jb xchg jb push adc outsl fs gs imul pushl scas adc jb outsb or aam push nop dec imul outsb fs fwait mov xlat push push and je insb outsl jae dec popa outsb fs clc ljmp gs (bad) ffreep pushl push popa imul gs int ljmp (bad) (bad) (bad) (bad) mov je popa insb push in (bad) insl outsl je push idivb sbb decl (bad) out or fs xor out sbb push dec loop inc outsl mov (bad) (bad) jmp jb je and jb mulb incb add jae insl and hlt (bad) (bad) (bad) jg inc sbb mov jne jb outsb dec add inc xor add sub inc jb outsl (bad) (bad) (bad) pushl mov cwtl push jmp fadds popa test jae dec jae fistpl inc gs nop gs (bad) pushl lock clc cwtl adc insl ds imul inc adc inc js add (bad) (bad) (bad) lcall jmp add dec gs jo adc inc icebp push ss insb cmp cwtl mov dec mov inc gs ja test je stos push adc cmovno add insl imul (bad) (bad) call push mov arpl ds popa (bad) cmp cmp gs dec jae popa (bad) or (bad) (bad) (bad) jmp jne addr16 xchg xlat inc outsb jnp mov cmp je jae sub outsb sub add (bad) (bad) (bad) lcall mov jg push dec scas insb outsl arpl fs outsb arpl insl push or jo ja out fcos (bad) (bad) jmp and inc push insb gs add loope jo push outsl jne je push je xor iret adc cs incl add (bad) dec fbld push sbb in push jo outsb xor cmp (bad) (bad) pushl push imul mov icebp mov gs gs inc jmp ljmp (bad) (bad) aas ret jo inc outsb jbe jb outsb rol jmp inc push imul outsl dec jne (bad) (bad) (bad) pushl jns dec jecxz xor cmp gs outsl (bad) push jne aas push cld gs (bad) (bad) (bad) jns gs outsb arpl adc imul xor cmp sti addr16 (bad) (bad) inc push imul cld gs add mov fldl repz push push fs inc push (bad) (bad) (bad) incl dec inc dec jae insl clc or out fs push popa addr16 or or adc push gs mov incl subb imul dec inc dec sti jne mov push outsl cmp add (bad) (bad) (bad) jmp sub adc outsl imul or add scas sbb popa lahf (bad) (bad) (bad) (bad) out incl jb jbe add mov sbb jb data16 (bad) or call sbb (bad) out fdivrl cmp adc sbb sbb and (bad) decl sbb lods jmp push adc pop and adc and jg incl add fistp or adc or pop push and or push push xor stc (bad) call or dec push pop pop push sub or daa or sysret adc (bad) (bad) (bad) incl adc pop adc pop adc incb aaa daa or or or sub (bad) (bad) lcall and add cmp or xor push adc (bad) (bad) (bad) ljmp lahf jl pop or or add or adc out jle pop or (bad) (bad) decl push or or adc idiv out fistp es or or (bad) (bad) call push push femms or push add push (bad) jg pop add add push add fstl push ja add lcall sub adc or or or (bad) (bad) incl or and adc add or or or or push adc or pop sbb (bad) (bad) incl sub push sub adc push and adc and adc std decl psignd (bad) (bad) decl or or rolb or push sbb dec or add or ja incl push or (bad) (bad) fimull sbb push lock and or push push and sbb icebp (bad) (bad) decl adc push and dec dec dec push ret js,pn adc mov adc or fwait jb xchg dec or sbb adc xor outsl (bad) (bad) out lcall jne adc sbb or sbb sbb add sbb sbb push (bad) push (bad) (bad) (bad) decl outsb push or sbb push add out incl or cmp or (bad) jg decl or cmp decl jo or and (bad) (bad) incl push cmpsl add jb adc or or push jae (bad) pushl cs add cmp decl or lock add add add std hlt xor and (bad) lcall push xor pop or push pop add ja sahf add pop or pop push and xor or (bad) sti incl push adc or or sbb lock pop push xor js (bad) (bad) lcall or add push add dec add lock inc out cld add and in cmp add (bad) (bad) (bad) lcall or and or add and adc jo addb daa cmp (bad) (bad) incl mov and mov repz add xor push cmp jnp sbb inc (bad) ljmp (bad) cmp fwait jp add (bad) (bad) call roll call add inc add jb rolb mov or (bad) jmp sub sbb andl fidiv adc (bad) out push (bad) (bad) (bad) jmp sahf jae (bad) xor xor xor add xchg add mov add (bad) in add add (bad) (bad) incl mov cltd xor jl add shrb pop clc mov add int3 inc orl (bad) (bad) call inc xchg or cmpsl je and jae mov mov add jbe cs jb,pn popa je (bad) (bad) (bad) jmp push push mov sub pop add ja cs andb fsubrl cwtl add test (bad) (bad) (bad) inc sbb daa shrb jae in orl add add mov (bad) call add pop add aaa int3 cmp add add ljmp add rorb mov add fadds add dec (bad) (bad) (bad) in pop add jne pusha mov lea (bad) (bad) (bad) call int jmp nop nop nop mov inc mov inc add jne mov sub adc jb mov sub adc rolb jae jne and idiv jae xor sub jb shl cmp je lds dec fcoms jbe or and dec (bad) (bad) jmp add cmp adc lea cmp jbe mov inc adc mov xchg dec jne jmp add (bad) mov add icebp add jmp idivl mov inc sub cmp (bad) (bad) incl ja cmpb jne mov mov shr rol xchg sub sub add cmp fnstsw incb cld les cmp pop add test mov icebp jno push add call xchg dec or je mov fistpll repnz push call mov add jmp popa xor ret ja mov cld xor sub and ja add mov xchg ret bound add loop xadd adc mov out fsubrl loope and jle (bad) (bad) mov pop push push push push push call lea jg pusha sub push push push (bad) (bad) jg pop popa lea push cmp jne sub jmp dec or add inc (bad) mov adc cmp movsl or add sbb push jae add movsb add add cli pop aaa gs or xchg pop add add pop lahf imul (bad) xor gs bound (bad) (bad) jmp js insb outsb jae and outsb cmp push sub outsl jae data16 arpl std (bad) ljmp popa jae jbe,pn and insl popa outsb imul jb adc and xor ds je jne adc adc aaa cmp arpl jge (bad) mov cmp gs gs jb int3 and addr16 xor sti mov dec gs insb and mov popa jae outsb jbe jb and inc arpl ret lock jae and cmp cmp cmp dec and das stos ret or hlt ds dec stc ret push pop ds inc arpl dec add add mov pop sysenter add xchg (bad) add and sti pop jb inc add add pop mov lcall and pop fsubr jg (bad) decl push dec inc dec xor cs dec dec add push inc push dec or insb insb add inc mov (bad) mov push inc push push add ljmp clc pop sbb add xchg cmpsl dec imulb adc je je jge fs jecxz call add inc outsl insl dec cli fs stos cmp jae jb jo mov push test rorl add mov and inc mov add (bad) jne aas loopne add nop or jb jns js dec addb add add in out (bad) (bad) mov jae jo jae popa bound push imul icebp imul bound push xor push jbe push divb push jne inc insb outsl bound add add jnp add add xor xor xor add scas mov cwtl add add add mov adc rcrl cs or gs sub add add pop imul (bad) call jae jne arpl mov out add icebp inc and ss and adc and lds push imul add fsubl fdivr sub push gs jo popa je and mov or outsl arpl or push outsl or add fsubs dec gs jo add or push xchg pop (bad) or inc jb and pop inc gs ret icebp push add cwtl arpl sbb repz or adc sub (bad) arpl mov inc outsb fs pop add dec jae sbb jg gs or fdivrp fwait cmp jb jae outsb je insb jne push data16 mov jo je je pop mov fdivrl inc outsl outsb jae insb gs jne sub mov jns cmovne adc arpl add inc gs out loopne out iret mov lcall test inc push push je jb jne push arpl movsb std cmpsb or pop je sbb (bad) gs js gs mov gs inc fcomps sbb jae mov sbb mov push mov outsl sbb xchg inc push nop adcb sbb mov test dec adc adc icebp inc inc push pop dec inc dec or push popa insb imul push scas add inc out and or push jne loope int3 cmp int3 or mov mov inc (bad) jle mov inc xchg imul arpl movsb in popa jbe adc mov mov and mov fld int pop das mov iret movsl movsb adc nop sbb sbb sbb pusha ljmp pop or add cmp js roll test dec mov and out sub cmp mov daa and jecxz cwtl notb adc jmp add imulb popa outsb arpl push adc and jne cmpsb or jbe mov gs add insl hlt xchg and push gs push inc aaa sti dec inc dec popa jo leave dec pop pop scas and outsl pop xchg inc nop push ds add movsl add rorb insl cmp outsb dec sub pop mov add mov cld aas dec je jo outsb fs lods mov popf mov inc adc (bad) ret fdivrl gs and push fidivl or insb and cmp mov sub adc and cwtl xchg dec in jle or add and push add (bad) (bad) mov movlps or and cmp and imul imul or add push sbb or add (bad) pushl sbb adc and push adc sbb pop or adc sub sub adc or (bad) incl adc pop and or and push add adc (bad) (bad) (bad) decl sbb cmp adc and push adc adc and pop (bad) (bad) (bad) incl das pop femms test or add or and and sub push pop push and inc push push das push (bad) out (bad) decl or or sbb cs or or or or or push adc mov push or pop push push or push or add or push push push or and sub or or adc mov lock sub incl sub or sbb add and pop push push sbb adc sbb gs or adc sub adc (bad) jmp xor adc pop cmp adc adc lock add (bad) aas dec jmp adc inc jnp mov das xor add or or adc and or adc or or mov push wbinvd adc pop add (bad) (bad) decl add lock add sbb adc lock add and in lock add pop adc add and lock add add pop sub push or mov and jae and daa or xor inc xor lds push or xchg push xor or inc mov add inc push push push push and inc dec cmp pop push call or pop (bad) inc mov add sbb or or and push adc or xor or (bad) cmpsl add pop pop pop sub or adc adc push sub push adc pop mov sub outsb add (bad) xor inc pop add sub push add or dec je or dec push pop xor std add and xor or or sub sub lcall cmova push adc loop andl inc inc icebp add insb lds into adc (bad) incl mov and sub or sbb cmp mov push push adc and or test add xchg add fs int3 mov and aaa insb push add ds lds dec mov lock adc aas cltd jmp add lock add or or add imul adc adc lock and daa and pop and add (bad) (bad) aas sbb outsb push adc push sub sbb sub inc adc loop jmp cmp and or push add push adc push or or add (bad) jg pop add inc add sub add or or jg leave sbb adc lock xchg or or adc add add in sbb lods add cmp aam and aas negb xchg or add sbb call and adc add and (bad) ja add add sbb and cwtl nopl int3 lods sar lock movsl jo ljmp pusha adc and cs or js pusha lret jbe pop or lock and inc adc add ret and les jae daa add add add mov sub sbb add jb adc idiv (bad) mov add inc subl adc adc cmp std pop add adc add adc mov sti and add or push (bad) sub add testl je,pn js cmovae jnp pop ret jmp mov xchg push add add pusha sbb adc adc enter and or je add js add and jb inc loope sub aas (bad) out lcall cmc outsb cwtl jae push add inc jb,pn jmp mov sub adc je cld (bad) sub jo add jbe add add dec jl add add add add add add add add int jmp nop nop nop nop nop nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jae xor sub jb shl mov inc xor je mov add jne mov sub adc adc add jne mov sub adc adc jne inc add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp nop mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov push dec repnz push call or je mov add jmp call add lea xor mov inc or je cmp ja add mov xchg rol xchg add mov jmp and shl mov add jmp mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp add add add cmp inc add add add add add add call add adcb add push add add add add add add add add add add add add add add add add add add add add pop add add loopne add pop add in add add add add add add add addb addb add add add add add add add add add cwtl add add mov add in add add add add add add add rolb addb add add add add add add add or add add add adc pop add add add add add add add add cmp add xor add push add pop add inc add push add dec add pop add dec add dec add add add add add add add inc mov add push add inc mov aas add add add add add add add into add add add je jb imul inc add insb add dec add data16 add stos add add add add xor cmp xor xor bound xor add dec add add add outsl add jo popa add jns dec add insl add add add dec add arpl jb outsl add outsl add je and inc add jb jo outsl add popa add add outsb add add add add add add imul inc add jae arpl jb imul imul add add inc add je dec add arpl imul add and jno test push pop or pop sub pop ja add add add add imul push add jb jae imul add add add add add add add add add add add add add add add add push add add outsb add add outsb add insb add popa add add add imul outsl add imul add add js add add add add popa add add jo jns jb imul je add test add arpl jb outsl add outsl add je and inc add jb jo outsl add popa add add outsb add add add insb add add imul je jae and jb add add jbe add add add add add jb imul outsb add insb add imul outsb add insl add add inc add je dec add arpl imul add add js add add and add outsl add add je dec add insl add add add dec add arpl jb outsl add outsl add je scas add add imul outsl add jae scas add add jo add popa add add add add jns jae je add add add inc add add add jb outsl add add je push add jb jae imul add add add add add add add add add add add add add add add add add popa add inc add insb add dec add data16 add add and add add push add popa add jae insb add je imul add add or add inc adc cmp jae gs bound js insb outsb jae and outsb cmp push sub outsl jae data16 arpl cmp insl jbe,pn and insl popa outsb imul jb imul xor ds je jne je outsb outsw and insb outsb jae and outsb cmp push sub outsl jae data16 arpl cmp insl jbe,pn and or and arpl imul and and cmp gs gs gs jb jbe insb gs or and and and gs gs gs js arpl imul insb and gs cmp outsb jbe imul and inc arpl jae cmp jae and cmp jb jno gs gs js arpl imul insb ds and and jb jno gs gs jb jbe insb gs or and jae arpl imul cmp je jne je outsb outsw ds jae gs bound push inc pop cmpsb adc sub add imul add jbe adc dec cmpsb adc andl add mov adc stos cmpsb adc mov cmpsb adc (bad) cmpsb adc add add in adc add add mulb add add add dec inc push dec inc dec xor cs dec dec add push inc push dec xor cs insb add inc push xor cs insb add dec dec dec inc push cs insb add dec outsl popa fs imul add inc gs jb arpl fs jae add push imul jb je arpl push imul insb insb outsl arpl add jb jne insb inc jb add add imul jae add dec jo outsb push jb arpl jae outsl imul add jo imul add je jb gs jo outsb inc add add nop adc adc add bound pusha xor add sbb add xor sub add add (bad) sbb xor xor push add sbb or push add (bad) aaa add add pop xor xor or push add (bad) aaa add wrmsr and and cmp cmp cmp dec add jae outsl add add add add add xor xor push add sbb xor stc add cmp mov pusha test (bad) add xor add add adc jmp jl dec pop ljmp cmp or dec xchg or add orl push adc pop inc xor push add adc gs gs and jo xor adc add pop adc inc jne bound jbe insb insb xor xor or push push push xor push add adc push and jb imul outsl outsb xor xor add push push push and gs popa insl jo outsb and xor pop or xor xor xor xor pop pop or xor xor xor xor or or add push adc push push xor push add adc jns popa outsb je arpl inc outsl jb outsl jb je outsl outsb xor xor push add add daa push jns popa outsb je arpl push imul insl jo outsb and jb imul and (bad) add xor dec xchg or add (bad) add add (bad) add add lods mov push dec xchg sbb or and sub mov imul cs pop sti adc jbe inc add inc hlt call int3 and mov add (bad) dec in mov imul inc cmp inc into inc adc (bad) mov sub cltd push lods jb es jno mov (bad) push popa add stos cmc dec sub js movsl das mov out out mov push aas cmp clc jnp in or lock inc pushf inc add stos xlat insb lahf xchg imul enter fcmovb xor xchg and jl out dec sbb ret sahf sub out daa push jge negl push mov in cmpsl sub stos gs fcoms dec dec inc lcall loop pop xchg or push js inc int inc jle rcll lds leave (bad) jno add add mov divl sbb push add add pop lcall lcall in dec subb xor push or push add add xor and or push add xchg push das das outsl arpl je,pn popa ja gs xor push add adc add add xor add incl add xor push add pop add xor xor xor je jo das das arpl je,pn popa ja gs das push push push imul jo outsb addr16 inc arpl xor push add and push or push add xor push add sgdtl incl add add xor push add adc xor movsb sbb xor push add add adc gs je insl jo xor xor sub or xchg (bad) or add addl pop xor jecxz sbb pop aaa pop cmpsb push lahf push (bad) ljmp insl jmp jl call jae adc test sub mov pop xchg add (bad) xor cld loop sbb sbb jns bound aaa push and mov fstp push aas sbb push push pop cmpsb cmp adc mov (bad) add xor add add adc or js xchg fidivl mov enter or dec xchg or add pop xor xor push add push adc push push xor xor or push push gs push imul arpl xor xor or cs insb popa jae and and bound and imul gs imul outsl outsb and je outsl jb je xor pop or xor xor xor xor pop pop or xor xor xor xor or add push adc push push xor xor or push push gs push imul arpl xor xor or push push gs push imul jae and je outsl jb xor xor push add or xor arpl and xor and jb push imul arpl and and je outsl jb jp and and insb jns inc xor add add cmp gs push imul jae and and bound and imul gs imul outsl outsb and je outsl jb je and (bad) add xor dec xchg or add (bad) add add (bad) add add and or jp sahf pusha or out cmp jl cmp sbb sub (bad) sub stc push or cmc icebp lods enter and sub clc mov dec mov (bad) jle push in out inc (bad) adc movsb fcomp clc loopne bound cmp lret test in (bad) sbb ret fadds push dec rorb rorl divb jnp dec push rcll mov mov xchg addr16 hlt push add nop mov cmp hlt cmp loopne jmp mov hlt xlat lods repnz cmp xor sbb and and sub (bad) aad dec in arpl cmp or inc mov xchg scas push popf aam inc shlb adc jle aas lahf jae xor iret pop aas xor xchg mov push call add add (bad) add clts add adc add add xor add pushl xor add pop add xor xor mov and je cmp das arpl jbe,pn jb jae outsb arpl das jo popa xor arpl xor push add sgdtl incl add add xor and xor xor add sbb xor push or push add push sbb je jo cmp das ja ja jbe jb jae outsb arpl das arpl xor push add add jg cmpsl ret mov inc cmp add insl push or push add add xor pop mov push xor or popa addr16 imul pop push add sbb (bad) in sbb ret iret subb sbb sbb xor je cmp das insb outsl outsl jbe,pn jb jae outsb arpl das jbe insb outsl outsl imul push add add xor xor or push add xchg push das das outsl arpl jbe,pn jb jae outsb arpl xor dec xchg or add addl lea push xor add push shrl cmc push and cwtl mov push mov cmp xchg sti xor adcb add loop into xor popa adc (bad) icebp outsb repz push inc jle ficomp mov xor or jno fmul fisub loope adc fdivrs cmp push mov and lahf push gs mov mov xor add add adc iret hlt cmp (bad) mov push sbb push xor dec xchg or add pop xor xor push add push adc push push xor push add adc jns popa outsb je arpl inc outsl jb outsl jb je outsl outsb xor xor push add add daa push jns popa outsb je arpl push imul insl jo outsb and jb imul and push pop or xor xor xor xor pop pop or xor xor xor xor or or add push adc push push xor push add adc jns popa outsb je arpl inc outsl jb outsl jb je outsl outsb xor xor add add sub insl popa outsb je arpl push imul insl jo outsb and jb imul outsb gs sub (bad) add xor dec xchg or add (bad) add add (bad) add add arpl cmp and jmp xchg mov fldt outsb incl adc std test popa jns pop leave dec xchg loopne dec and rcrl dec out test mov fs lock mov xlat sub int loope arpl pop mov pop mov cltd pop test sub pop out xchg (bad) inc push sbb xchg inc cld stos scas mulb inc lods jo out out int mov sbb shlb movsl sarb xchg pop gs out pop je inc xchg fmull dec mov ja pop push fisttpl pop xor fldenv dec popf cmp (bad) or icebp mov fnstenv add jp mov scas cs jo mov sti or loope sub int add add mov (bad) add or add adc add add xor xor push add and or or or push add xor push add sgdtl incl add pop xorb push or push add add xor sub or push add xchg push das das je sub ja,pn jae,pn insl popa outsb je arpl arpl xor push or push add xchg push das das je sub ja jae,pn insl popa outsb je arpl arpl das je jae arpl xor jb cmp add pop add xor xor mov sub je cmp das je sub ja jae,pn insl popa outsb je arpl arpl das je jae arpl xor insb xor push add adc xor movsb sbb xor push add add adc gs je insl jo xor xor sub add push add add inc (bad) imul arpl aas pop ss push add and xor adcb cmc outsb pop int3 int3 je aam jge aas fucomi dec subb xor dec xchg or add (bad) add add mov sub dec lock bound aaa js test pop outsl sbb aam add lcall jns and fidivl hlt sub arpl in fs or testl mov mov frstor (bad) jno int je mov fidivr out mov sub mov mov xchg push adc cld fstpl dec pop push inc inc inc outsb or mov fimull jno cld sbb mov jnp imul push sub jg or lret insl add cmp loope hlt pop test sub dec sbb and push ret xchg cmp xor jnp,pn fsubl or jno push pop iret call mov mov and push lcall cmp xchg loopne mov xor add mov add pop jbe mov divb mov xor dec xchg or add xorl adc push push xor xor or push push gs push imul arpl xor xor or push push gs push imul jae and je outsl jb xor xor push add or xor insl jae outsl data16 and and je jae das das ja ja jbe jb jae outsb arpl das jb popa and arpl xor xor xor add add and push imul jae and and fs outsb imul xor inc inc xor pop or xor xor xor xor pop pop or xor xor xor xor or add push adc push push xor xor or push push popa imul clts add pop adc push popa imul and push push add or push jne gs imul inc outsb je jb popa imul xor add or xor je insb and and popa jae and and jb jae data16 push outsl data16 popa jb and insb imul jbe xor xor push add add push jne gs imul inc outsb je jb popa imul (bad) add xor dec xchg or add (bad) add add (bad) add add pop out jge inc scas ret adc xchg cmp clc inc mov xchg (bad) adc push mov push mov sub jge mov jnp sub inc push mov out test lret xor fbld test jno sahf mov jge sub xor pop adc insl cld hlt clc pusha or imul in ljmp pop sahf arpl mov (bad) lret cmpsl aaa ror fbstp and dec stc aas div (bad) cmp fnsetpm(287 call ret or sub cmc xchg sbb mov popa pushf mov rorb cld ljmp pop fiaddl int3 mov std (bad) xchg sti inc add (bad) cltd rolb out ljmp add fs shrl sub imul icebp icebp lar add add (bad) add or add adc xor xor push add sgdtl incl add pop xorb push add pop add xor xor xchg push das das arpl xor sub jbe jb jae outsb arpl das inc push inc xor arpl xor push sbb cmp cmp or dec add pop add sub sub or push add push sbb je jo cmp das ja ja jbe jb jae outsb arpl das jb popa xor push add and push or push add xor or push add add xor and or push add xchg push das das outsl arpl jbe,pn jb jae outsb arpl xor push or push add xchg push das das arpl xor sub jbe jb jae outsb arpl das inc push inc xor arpl xor push add and xor adcb test dec leave mov out jecxz cmpsl popf xor push or dec add add add add xor push or push add (bad) aaa add sbb xor add add add xor dec xchg or add (bad) add add scas dec pop or jno ret loop dec lea and inc jge (bad) mov hlt sbb mov rcll gs mov dec sub cmp xchg sarl rclb fldcw movb clc fisttpl xchg pop add add and in xchg mov faddp inc out xor jb stc sbb inc add push mov ret rcrl lahf pop xchg idivl mov jmp enter push test orb (bad) pop loope movsl cmpsl and pop dec mov sub pop and mull cs jb mov push mov jmp inc jno dec add stc fildll aam dec stos daa loop ss test insl mov and repnz movb test loop mov add add inc xor add mov add push add stos and in xchg leave aam xor xor dec xchg or add or push add push adc push push xor xor or push push gs push imul arpl xor xor or push push gs push imul jae and je outsl jb xor xor push add or xor arpl and xor and jb push imul arpl and and je outsl jb jp and and insb jns inc xor add add cmp gs push imul jae and and bound and imul gs imul outsl outsb and je outsl jb je and push pop or xor xor xor xor pop pop or xor xor xor xor or add push adc push push xor xor or push push gs push imul arpl xor xor or push push gs push imul jae and je outsl jb xor xor push add or xor insl jae outsl data16 and and je jae das das ja ja jbe jb jae outsb arpl das jb popa and arpl xor xor xor add add and push imul jae and and fs outsb imul xor inc inc xor push or xchg (bad) or add (bad) add add (bad) add add and movsl xlat mov imul in es sbb xchg divb imul jne xor push push int or mov cltd loope aaa dec pop into cmp xchg (bad) cmc daa xor cmpsl mov pop mov sti int bound sbb icebp jecxz cmp nop add cmpsl jbe jg add jle rcr add imul inc add fist jno push add add dec inc cmp mov insl orb aas sbb das xchg cli in ja mov mov cmp sbb bound push (bad) hlt pop xchg sub jle std movsb xchg cltd jg int movsb jne out adc sbb cs cmpsb mov dec jle mov icebp xor cmpsb ss xorb movsl int xor mov add add mov (bad) add xor push add adc add add xor add incl add xor add and xor gs or dec add pop add push xor push or push add push sbb je jo cmp das ja ja jbe jb jae outsb arpl das arpl xor push or push add xor sbb je jo cmp das ja ja jbe jb jae outsb arpl das jb popa xor push add sgdtl incl add add xor or push add add xor pop mov push xor or popa addr16 imul pop push add sbb (bad) in sbb ret iret subb sbb sbb xor je cmp das insb outsl outsl jbe,pn jb jae outsb arpl das jbe insb outsl outsl imul sbb sub sub and je cmp das arpl jbe,pn jb jae outsb arpl das jo popa xor jb xor or push add add xor xor or push add xchg push das das outsl arpl jbe,pn jb jae outsb arpl xor and push or push add push or push add xor push add adc xor movsb sbb xor push add add adc jb push imul sub sbb push add add iret cltd test dec leave mov out jecxz cmpsl popf xor push add and xor adcb cmpsl ret mov inc cmp add or dec xchg or add (bad) add add out movsb les dec mov psubusw in jp and inc cmp insb sarl sbb test (bad) push cli adc dec and andl mov arpl inc call add test jno out add cmp pop adc (bad) aam in jns or jb aaa and or lcall nop pop cld cmp cmp cmp adc and int3 dec and nop pop pop mov cmp in (bad) outsl movsl and scas or mov outsl xchg pop mov pop (bad) jne arpl into xor sbb test lods xchg cli lods in xchg mov ret arpl adc cmp sub cmp add dec xchg (bad) xor add add add or or or add push adc push push xor xor or push push gs push imul arpl xor xor or push push gs push imul jae and je outsl jb xor xor push add or xor insl jae outsl data16 and and je jae das das ja ja jbe jb jae outsb arpl das jb popa and arpl xor xor xor add add and push imul jae and and fs outsb imul xor inc inc add pop jbe mov divb mov xor push add sbb adc or push add (bad) aaa add or add add sbb or xchg (bad) or or or push add (bad) aaa add add sbb or push add (bad) aaa add or push xor or push add (bad) aaa add adc sub add add push add mov cmpsl and mov les xchg sub add add add add stos adc fiaddl popf jmp ds sbb dec (bad) mov mov dec cmpsb insb cli mov or stc cmp cld fidivl xchg inc lret push add ljmp adcl orl lret ficom and jae out jle or das fimull dec inc ret push rclb xor repnz daa test (bad) int3 jno in inc xchg push (bad) jae jmp or hlt and sub add outsl jns sub fcomps (bad) jns fwait sbb dec add add and pop xchg aad data16 or add push mov in sub and inc (bad) outsb xchg popf dec insl sahf push mov mov adc aaa pop sub (bad) mov inc push mov dec push test lock mov (bad) add push or xchg (bad) or (bad) add xor add jb pop xor xor push add push adc push push xor push add adc jns popa outsb je arpl inc outsl jb outsl jb je outsl outsb xor xor push add add daa push jns popa outsb je arpl push imul insl jo outsb and jb imul and adc iret hlt cmp (bad) mov push sbb push xor push add sbb sbb or xchg (bad) or or or xchg (bad) or sbb or xchg (bad) or movhps xor xor pop xor push or xchg (bad) or push add lods imul insb pop pop mov xor dec xchg or add add push mov ljmp mov stc mov pop jb sbb xchg fnstsw rcrl sbb or or in dec call adc pop cmpsb push cs into cmp cli (bad) movsl xchg jmp pusha mov scas lea push lcall push enter nop mov int3 aas add das dec push fist mov push dec cmpsl enter sbb daa mov popa lds fdivs imul dec in je inc inc into or mov cmp data16 add les aas arpl adc inc sub or loopne (bad) ja movsl adc sbb stos sub arpl xchg dec dec clc push mov or mov push add dec lcall mov (bad) call in push push xor call or add (bad) (bad) (bad) ljmp je mov mov push mov push push push push push push push push jmp arpl rcrb ret mov push int3 add cmp xchg sbb sbb jp pop add cli push gs jmp mov push push push push cwtl insb fsubr leave or add lahf or sbbb dec nop jne cltd out ljmp aaa int3 dec jle in adc push mov push lea mov inc test jne mov (bad) mov xor xor mov mov mov test jle scas add fucomip incl or mov sub jmp cmp lea nop mov cmp (bad) (bad) sti cmp or pop jmp movzbl mov hlt nop mov cmpb decl dec dec jns mov mov add mov sar add or mov mov mov (bad) (bad) decl mov mov shl sar or mov shl or mov mov mov add (bad) pushl js addl add sub fwait cmp jl mov ja lcall jmp adc mov pop mov pop ret or jmp mov or adc call or adc (bad) mov add sub jne push push mov add nop mov mov push adc rep or (bad) jmp movsb pop rorb rep push push push imul jbe movsb call mov lock add pop pop mov popa fadd outsl inc or pop or xor push mov mov and hlt sbb (bad) push xor xlat mov add sarb add sbb js pusha scas pop and inc or decb jae mov sub or inc add push (bad) ljmp pop pop pop pop ret lahf push push push (bad) icebp out add push jne xor pop (bad) (bad) fmuls mov jl add dec cld push push push movl sti ljmp cld push push rcl inc cld rcrl out push and (bad) incb inc add push (bad) jo hlt cltd mov mov movl flds int3 mov jl sub and test push wbinvd mov mov cmp jmp std (bad) (bad) out sub mov xor mov mov push push ss mov arpl in std mov mov inc or rcrb int sub mov add aas lea push push movb fnstsw pop std incl add lea movsb mov lea add lea jae (bad) cwtl movl jbe push lea cld out mov add push lea lea fsts repz sbb push in lea push sub sub pop mov inc shll rorb sub jmp mov or mov add push lock loope push push movl fist fcomps (bad) xor neg pop sti sbb out mov sub clc jg cld imul arpl aaa mov mov out pushl mov movb dec mov fistl xchg jl js fbld inc cwtl inc push movl mov pop jne xor fsubrs jo push insb add mov aaa std (bad) push mov test jne cmp je mov mov mov mov and dec (bad) out (bad) incl inc mov inc or into push push movl lock inc mov cmp adc cmpl jg incl je mov inc mov cmp mov pop mov pop test pop mov and pop movl sub sub add cmp jb jmp es pop xor xor pop cmpsb dec mov sub sub (bad) (bad) pushl rclb mov mov mov mov mov mov mov mov mov lcall push movb dec jmp lea mov inc test mov (bad) push lea lea (bad) lock popa pop lea push idivb in add cmp lea mov inc xor (bad) aas into add cmpb mov je cmp je inc or mov sub push push push jae sbb sub inc pop sub cs or ret jne inc nop data16 add push ja (bad) sti je cmp add push das add cmpl add adc cmovge xor push add dec pop neg pop pop dec (bad) into (bad) aaa adc pop mov decb loopne push mov dec jl add dec js jle in adcl mov rcrb add add pushf add pop fnop outsl mov add enter mov or addr16 xor iret jo cmpsb std imul test or push sbb cld pop clc or add mov ljmp sbb adc jno (bad) std shrb dec add clc mov (bad) xor movsw lea push add mov jge clc mov stc sub adc xor enter mov cmp push adc sub push adc dec lea push sbb dec cld out (bad) cltd push inc push mov lea fs aas fnstenv sarl add insb mov rep mov and rep je outsl pop mov or mov push pop mov and push cmp (bad) fs int xchg outsl mov mov mov jo and clc mov add stc mov fcomip decl std jbe movb stc xor or loopne lock dec sub push push (bad) ret inc fldcw int3 xor fdivs jecxz aas mov push nop int pop inc and add cmp jae xor and dec sub cwtl or call mov repnz (bad) (bad) aaa push mov daa insb sbb mov lea outsl imull mov call push add jnp cs (bad) (bad) pushl stc pushf push (bad) rcrl arpl xor test mov sbb int3 push jp test pop test cli pop fdivr cli cmp fild push push dec shrb mov sti fidiv cmp add lea ja pop pop mov xor test je fdivl mov or mov fadds out pop jmp (bad) push (bad) pop or movl mov adc ljmp xchg cmp lock jne lea test fdivs fmuls pushf mov jle arpl sti insl js sbb mov sub mov push dec rorb mov insl lock in push lds push adc mov test das cmovl cmp inc or je push js mov pop dec nop mov in std aas xchg inc clc xor push lea mov sbb inc fcoml xor mov mov lea push lea clc or call int lea push push in add and push push mov fild push faddl dec sbb dec (bad) mov or mov mov mov enter inc or sahf icebp xchg inc xor fwait mov icebp hlt push test cmp mov in leave push lds es ja sub loopne push cmpsb das sub fstpt push and mull les notl jno push push insb fsubrs movl jne pop and lea fcompl and mov lea push lds leave jno pop sbb push xor popa mov clc cmp int push mov data16 (bad) and ss push loope (bad) xor in call ja dec cmpsl mov std repz mov or xlat xchg icebp mov adc mov push push push call xchg adc shrb ret neg sbb and icebp xchg movl jge mov incl or push stc in mov lods push push jne or xchg and and mov push lea push push push call lock sbb ja add imul add call mov add sar xor xchg jb jbe sbb mov mov stos sbb bnd outsl jb pop xor push fdiv sahf add sbb xor (bad) loope or mov leave sub arpl push push cmpsb adc aad and sub popa mov and or push mov sbb mov inc and mov adcl adc xor imul mov bnd adc test xor repz or flds rcrb in adc (bad) fnstsw clc lea inc and lea push xor push in adc mov and mov out test add cmc xor mov lea push push lea push push push mov dec loopne outsb add push and scas cmp decl test add test add das pop mov mov mov sbb fadds stc rolb and pop mov sbb xlat mov and push xor push mov mov sbb and cmp call mov or pushl fnop adc push dec xor mov sbb push mov adc xor mov sahf sarl movsb pop add dec out shlb cwtd into std jae in test push push aam cmpsb sahf fisttpl sbb aaa add mov mov inc xchg jns push (bad) fstpl fimul mov mov dec push outsb push (bad) jne mov dec js stc loopne repz pop stc stos loopne gs adc inc (bad) or aam sub adc lahf loope add movsl sub push jbe fnsave int3 outsb push mov pop cli add movsl scas sub ja (bad) in add add hlt shll enter jo (bad) sbb in (bad) bnd adc icebp orl icebp sti push and cli or cmp sbb test dec jl pop int3 out orb mov faddl sti xchg adc dec fdivrl clc inc inc cli adc inc cli sbb jbe sbb dec or jg cwtl jnp cmp inc jmp jbe mov cmp and mov push mov pop jae rolb mov xchg mov pop test out fisttpll mov mov sbb cs push jo test fadds gs mov (bad) lock sbb adc add test js and mov (bad) popf sub es sub cmp jge and cli sub fdivrl stos loopne mov in ret xor mov cwtl cli cmp arpl mov mov inc cmp (bad) pop fdivs inc mov mov xor cli dec xor fsubs dec mov xor adc clc jg push mov mov mov dec mov mov pop sbb add add bound xlat push in in mov out into ss and dec cli pop loopne frstor mov pop sub out jno shrb ret das xlat mov idiv inc or sub xlat cmp adcl and inc not repnz call inc push jbe fiadd push cli je add sbb mov or rorl pop in mov push and int3 adc fs (bad) andl (bad) in mov mov inc push clc (bad) in jle mov (bad) aas pop in add cmp in or (bad) je je outsl xor pop insl mov aas je push call inc cmp cmp xchg jne mov xor mov cmp and pop jge divb pop les das xor mov xor dec repz push jae xchg clc cmp repz push lcall (bad) je sbb popa mov incl test jne or jl sbb cmpl jnp add or (bad) das inc addl jmp and mov idivl and add jne mov jne pusha andl pusha daa or je rcrl xor int3 jae jnp or ljmp test push add jb fs cmp insl xor add subl lcall mov sub jge ss mov in mov mov pop mov test lahf mov faddl mov (bad) jg aaa scas xor push cmp (bad) call mov mov loope mov push lea push push movl add cli test test nop mov sub out lahf jg xchg cmp inc push inc pop pop out jbe sti lea xchg adc cmp (bad) mov out (bad) aam add mov push push lea sbb mov pop out aas adc pop movzwl movsb clc push push lock std orl add adc fisttpl sti pusha mov lods add add mov push jmp pushf cmpl out inc push nop push pushl jae sqrtps cmp les cmp (bad) mov pushl clc add push push xor pop (bad) inc cmpsb cli add sarl lock cmp je push lcall mov mov or pop and shrl adcl jb push (bad) (bad) aas dec js nop cmpb je dec jns ret movb ret out sub xor jmp cli int3 pop push push jle mov jno push (bad) mov fwait mov rorb xchg jo clc aam push (bad) cli mov dec mov adcb sbb ret mov or (bad) sbb cmp rorl es loope mov rep lea cld addr16 sbbl cmp jbe or test dec add inc int3 mov (bad) (bad) out out adc push (bad) hlt xorl adc orl lret mov or out xor aas add push aam bound or (bad) out push ret or and mov add xor mov (bad) adc hlt push adc add in mov mov daa add add std or or xor out jg aas lds ret cmp pandn movsb faddl in popf push push mov jae pop xchg mov sbb mov out incl mov inc cmp jne lea and cmp jne mov icebp jbe stc mov lods cmp je mov push decl push push push iret mov add jmp sbb sti je xor adc xor (bad) loope ljmp (bad) pushl imulb out add decl test jmp jge push movb pushl leave xor cmp hlt xchg pushl mov mov inc cmp jne add incb jg pushl pop je xor jmp lea inc mov add std dec adc mov add icebp add mov pop inc movb mov cli sbb outsb cmp fwait push jg lea sbb movsl or call pop mov je out arpl (bad) xor test je xor mov cmp jne add pushl je adc inc je inc cmp jb lea or mov ret out fldl pop lds je dec insl js int3 pop das je lea (bad) std add lods jno dec mov mov jge mov rep inc adc pop cld mov push repz mov cs (bad) outsl in inc inc add cmc fwait jle adc lea jne sbb or pop mov test je add ffreep decb lea mov fs sbb (bad) (bad) jmp push in lea jnp adcb decb int xchg mov dec or sbb xor mov cld sbb rcrb dec hlt out dec xchg (bad) cld push mov cmpl fcompl add xchg test cld adc je xor ja push mov add add add inc lea movd cmp and test cmp (bad) rorl adc push push pop xor jge xchg xor and mov nop aaa fwait adc fild lock aas add rorb std cmp jae ret xor cmp icebp imul xor test sbbb lea push inc sub jg negb or pop push mov negl mov (bad) int or mov mov jno das (bad) mov idivl or loope mov or xchg jnp xchg add push inc add orl (bad) mov jne xor je shlb add lea sbb xchg cmp sub dec jbe fnsave lea push pushl ret pop dec push movb call inc push mov sub decl pop jne jae movb jmp ret sbb ds les cld mov lea push mov xor sbb clc and ret fucomp lea mov and add sub std pop lods push dec js mov cmp jns out pusha (bad) sti jmp movb (bad) nop decl xchg les ret xchg sbb push rep fwait and rorb and outsb add movzbl pop notb enter ret sbb in sub xchg sbb ret rcrb psubq fstpt mov pop push push lea or xor inc mov cwtl in stos dec mov in test cmp mov cmp or jl xor lea fdivr mov mov movl push or pop or adc popf jo mov lea ss popl cmp cmpsb push add clc jo jp jae xor add movzwl loopne sbb xchg push jnp sahf xchg mov leave and jo mov test nopl xchg lds subl ja or xor loopne mov xchg setne xchg add test cmp mov xor (bad) call mov push push mov mov mov mov (bad) decl int inc rorl inc (bad) mov xchg jae cmp pop pop mov mov (bad) cmpsb jns xchg mov mov (bad) lea sti adc in data16 mov scas es test and xchg nop out pop fcoml sub inc mov push fisttpll ret jnp push int3 push sbb lcall jmp add cmp jle push rclb sub sbb cmp xchg sti inc cmp in xchg adc inc lea mov (bad) lret pop mov aas das ljmp repnz mov jae jp lea rep gs push lea gs cmp mov sbb movl ss xchg sbbl (bad) push mov in lods js push in daa test je mov jb lods mov stc pop sub sbb fisttpl movl movl xchg sti dec mov push adc out jb inc and xor and add mov stos xlat sub out add loop,pn xor mov push rorl xor fs and rorb or jne repz lock (bad) (bad) jg in and xor push xor pop lea mov rep cmp jne mov cmc aas imull or enter loopne sbb (bad) jmp push mov mov lea push push pushl lea push movl fcomip in inc in inc xor lds lock mov mov jmp outsl or jno int3 pop pop mov pop pop pop leave incl xchg sbb mov push push push mov mov test je mov test je mov sbb mov add ret test je mov add or pop xor ret jmp dec adc jne lea mov test je add les mov fdivr out ja sbb adc stos xor ss cmpxchg lea or mov add mov cmpsl dec cmc (bad) pop aad outsb test sub sub push pushl push pushl call pop mov call ljmp inc sub jb sub lea cmp jb ja mov mov mulps fdivs mov or mov idivl incl ret cmp jb push pushl imul pop test jne lea adc je,pt sar push lea xor ror mov jl or rorb xlat mov add call pop mov pop inc leave rclb push dec gs fwait dec and aas sub divb inc rorl pop ret andl sbb push sar clc mov xchg dec jne gs add adc xchg fisttpll lock mov ss mov and jae fnsave add sub add fcomps mov int3 aad push test je sbb dec or (bad) int add (bad) jg std shr jne lret pop add sub je std (bad) sbb das sub mov daa jne and je idiv out xchg and sub jne mov pop pop pop ret test in je inc je (bad) jne inc je negb cmp pop (bad) (bad) (bad) std ret mov add jae mov mov add xor xor mov add test add add test test ja je pop sub mov jmp and popf or lret xor push jle popf andl or rorb int3 cltd out les test jl insb xchg mov movb adc (bad) lcall mov mov mov mov mov mov fstps sub xchg aaa loope loopne dec jo pop daa pop mov and incl je mov fcoml mov mov adc jne orl fs or sbb add inc add xchg push idiv (bad) decl mov lea inc cmp ja add movzbl lea inc cmp nop decb rcrl je pop sub pop aaa incl out jp in adc add jne ds mov pop cld je clc adc fnop pusha jo mov outsb or and incl cld add push mov cmpl jne call xchg jmp sub lods add js push mov pop push pop lods mov mov pop sti fild pop add clc je sub mov pop pop dec clc aaa cmp cli andl pop sahf clc xor cmp lods jne popa xchg daa cmp jne mov jg ret cmp je and xchg jbe cs or dec fcos pushl mov mov xor mov cmp setne cmp jne (bad) enter shr and cmp je xor cmp sarb int enter inc or or sbb lret pop jne push or popa sahf push lea ljmp gs lret pushf adc xchg pushf nop fsubl dec xor lock iret mov push out clc add inc fldz data16 aaa insb mov sub les push sbb sbb adc je mov mov lock test je push xor div cmp ja imul (bad) mov inc or mov mov mov je mov mov jmp mov inc clc add add mov or loope mov je loop (bad) je js sti mov add divb sub add mov sar mov cld jmp cmp jb jp call incl push cmpl mov je xor mov divl sub add pop cmp aas pop cld (bad) (bad) jg mov cmp ja mov add sub cmp jb mov jmp mov movsbl out fild sub inc cld mov dec mov lods add fnsave cld out loopne inc adc (bad) orl mov sub add jo lock adc jmp and out xor cmp je cmp je mov or mov or daa inc push xor mov arpl call pop mov or jne repz cmp mov insb dec dec jo jmp daa inc bnd ljmp ret lock or ret (bad) jmp testb mov ds and push mov cmp or xor test jns inc jmp mov mov or data16 andl pop andl jo (bad) fild dec sub dec in clc or out or sbb mov or inc js or paddusb movsb or jbe lock jmp mov bound rol outsb jbe mov std movl lds testb je sub lcall ret add mov dec les jmp and ja push je or mov out ret testb mov mov loopne sub mov push lea push mov push faddp cmpsl pushf pop in jne jge or imull sub pop push (bad) or sbb jle sar sbb mov ja int3 ret cmpl sbb jne and fistpll xor jmp (bad) or dec pop pop pop xchg jo jp sbb dec sub inc pushf xor inc fadd mov movsb cmp add cwtl mov cmp je mov jmp mov or add add jne mov mov sbb ja out jne sbbl push jbe xor cmp rorl sbb sbb xor pop add dec lds mov arpl in sbb xor push or pop sahf xchg std (bad) pop sahf mov loope jle fmul cmp sbb adc es dec ficomp out push fnsave sbb testb je ret std incl movzwl jmp push pop push push push push (bad) fstp ja cmp jne das mov dec loope mov mov sbb add mov mov aad sbb gs mov cmpl das lret lock aam (bad) fnstenv jecxz cmp dec lahf sub xchg ret mov and adc mov ret psubsb sbb mov inc data16 xor mov adc cmp and out (bad) mov adc mov push sub inc add std (bad) stc xor test cld (bad) inc and js add add xor sbb sub and add rorb mov sbb fdivs sub inc mov loopne (bad) lods xor push (bad) rcrl push test rcr cmp arpl jne and mov scas mov rcll dec loop outsb test inc or test push or adc aaa cmp xor pop loope sbb jecxz xor test mov push mov test je or mov and dec cmp out or or push test (bad) jne pop shrl (bad) sbb or lock push test lahf jne test jle and std push push je lea loop cli xchg dec sbb clc dec imul jle push negl andl adc dec or jne call jns dec or stc pushl stc (bad) jb and (bad) (bad) (bad) decl shl add jmp mov testb je push push push pop push fiadd andl xor xor (bad) frstor mov jmp xor inc push int sbb jge je daa jmp sbb adc pop pop pop arpl inc je cmpl je (bad) decl js mov mov incl movzbl jmp movsbl negl jne or ret incl fist inc mov inc push mov mov into pop jnp add lock mov andl cmpl jle imul (bad) fist cmpl jne cmpl jne mov mov adc (bad) jg cmpl jne adc pop xchg (bad) mov add mov loop rcrl rclb adc lea mov xchg mov adc lock sbb jnp test cmpsl into add jns movl add xlat xorl cmpb test scas addr16 popf xchg pop clc dec jne lock test xchg (bad) jmp sbb loope mov sar shl add add jg fwait daa sbb enter jmp fmuls out and orb jno sbb leave cmp je mov in stos lea lea xchg out jg (bad) fist mov add inc xor mov sub mov mov ja lea cmp ja movsbl movsbl btc incl fimul mov rolb push sar pop mov sti xchg out ja test add lea dec mov or mov ret mov out (bad) (bad) out pop arpl sub je sub je dec dec je or jne das or or sbb nop add andl pop add add cmp std mull in stc movl mov lea ficom adc mov imul movsbl lea xchg sbb pop adc and push inc xor punpcklbw cmp mov arpl push sub cmp je cmp je int3 (bad) incl insb je cmp jne iret mov add insb jne inc adc bswap bound scas sbb fldl mov pop or pop mov cmp jne cmpb jne add jbe or cmp cmp and jo xor ja pop mov push cmp paddb neg test xchg cmp je test js test and pop je and lea popa push movzbl in sub mov ja je or and cmp mov inc cwtl test je out and loopne ffree (bad) mov je push jg outsl lcall adc and or jne mov ret test rcr je inc mul xor and into add jne sbb push push das mov mov mov aaa pusha mov je or loopne fisttp mov (bad) movl call mov lods mov sub je add inc mov mov call push push push (bad) lret xchg insl or fdivr bound pop (bad) mov jmp mov mov aaa fwait mov cmp loopne mov cmp pop mov mov es fcomp xlat je cltd sub sar lret fcomp in sti dec js inc pop xchg test push fucomp out incb cmp add mov out lock clc addr16 imul cmp jne rclb imulb or outsl add inc jmp cmpl fsubrs nop add push mov test jg mov incl je mov xor aas inc mov lret push and imul cmpsb (bad) fidivl test pop rorb test pop mov add inc inc inc inc jne xor lcall xor ja jmp cmp (bad) adc add push aas int3 (bad) jne cmp jne adc jle or addl orl inc add add clc dec and jnp ret mov jno mov mov jmp ja fstpl add rclb mov and mov mov mov inc lods sub add dec ljmp push push jmp sbb call call mov das add and subl mov dec push sub pop cmpb addr16 test and cmp test iret fisttpll mov xchg ds ret repnz (bad) jmp sub je pop rcll pop sub xchg cmp lret daa dec stc jne pusha ret cmp je aas push (bad) and (bad) pop xor jo test push dec inc aas sbb in or xor test xor and out loop adc (bad) (bad) movswl jmp test (bad) iret lock jmp dec adc cltd and and std lcall test jg jl test jae neg adc neg loope clc jg push nop add mov mov jne xor push mov js add jmp adcl inc pop mov or jne and xlat ja lea fs mov push ja inc cli je mov cltd push push push cmpsb xchg clc lahf icebp (bad) xor cmp jle add push sub decl mov movb popf fcomip popa adcl mov pop mov cmpb (bad) (bad) cmc xor add inc jmp dec popw or jmp pop add test jne sub sar jmp in out pop mov pop and fnstsw pop dec cmpb je inc sub imul test or or push xor stos inc (bad) sub add roll adc and pop push ljmp popa in sub sub mov jne sbb mov jmp pusha mov dec test mov test jg lcall mov loope popf daa lea mov sbb xor or je data16 or mov das mov pop jecxz mov jb xchg je test jle mov test sti xchg decl lea jb notl call movb xchg jne cmp sti je pushl arpl decl mov jne jmp orl inc pusha in fldpi sbb push pushl or in adc pop cmp pop pop add je mov cmpl ja adc mov push data16 andl pop jg push mov mov test je mov movsb mov shr cmp cmp or mov jle rorl leave ret cmp add cmp imul das jne add pop inc mov loopne and inc adc or or sti pushl (bad) rcrl pusha xlat out andb test pop push into icebp dec cmc mov inc or loope test mov ret adc into mov inc pop nop data16 jbe data16 mov (bad) loop mov data16 cmp cld std pushf (bad) jmp inc add dec add lea xor (bad) outsl push adc dec cld mov mov fmull adc mov xorb push mov or std pop push movsb test jne xchg or (bad) jg xchg mov push push mov push push test outsb inc fsubr cmpsb pop and and (bad) loopne jg fsubs inc fs push add loopne jne loopne (bad) gs incl inc add add data16 inc sub movsb add (bad) (bad) dec add adc adc stc sub in cmp ja push pop mov outsl call ret add pop cmp sbb and add (bad) insl test clc pop outsl lret add adc out adc push ljmp addr16 shrb mov pop and dec or inc lcall mov rorb icebp call fadd loopne mov test mov add cmp je (bad) aas sti iret test je adc jmp fcoms ret shl push or mov mov mov lret add add xor ret iret xor ja std movb jne and (bad) cmp add and pop pop pop xor ret mov cmp je imul test je shr adc cmpsb push aam xchg pop pop mov (bad) aaa ret lea adc cld cld sub or lea adc push push std add out in fnstsw rorb add add (bad) dec jl and lret cld add push push lea cmpl add lea ljmp sbb jmp mov decl mov movzwl and es movl rolb sti sub adc inc adc mov (bad) pop fnstsw or pop cli outsl jo in sub movl das (bad) decl or jmp sbb jbe es jmp cmp jne jne,pn and hlt lcall push mov add or cld adc mov mov (bad) (bad) call movzbl movzwl mov and je movsbl sub jmp and insl je lea cmp adc and test (bad) out adc sbb jb jne cmp jbe (bad) ret jg mov inc sbb or or or cmp (bad) (bad) jmp mov imul add mov jmp jg ja (bad) incl cmp or or sub jne mov jmp test movl ja cs (bad) jmp adc push pop setne add mov aad cld fisttp pop je negl cmpb fsubs mov jmp and sbb rclb mov dec jle push jmp shll mov pop rolb mov cli jbe mov pop dec daa xor pop and lea js jbe jno push mov mov cmp jne subl push and das dec leave inc jb ret dec pusha cmpsb cli fmull and rorl or dec mov ret pushl mov sub pop loope lcall add shrb sbb mov adc (bad) jb ss sub arpl into or dec xor xor jmp hlt mov pop cmp mov mov enter pop cmp add and xchg iret mov les (bad) (bad) decl or shr inc adc add roll or out decl scas in jmp cmpl je push ja (bad) insb pop mov (bad) sbb in xor mov dec mov and adc add mov push mov clc cmp jae mov inc add rcr pop jnp sub (bad) jb addr16 add je imul imul jae cld adc pushf xor pop ret push jle ret nop addr16 sub xor fs push jl test jae jmp mov mov test addl arpl adc rolb mov clc mov cmp (bad) aam pop fmull aam sti jb push jmp jle cmp pop je or pushl and call mov dec or pop fdivl cmp (bad) (bad) testl rorb mov jmp movl or jae mov mov or leave neg std add out inc loopne mov and add jb cld pop pop dec jg cmovge cmp in or or adc or pop je adc rorl xchg loope mov push dec dec dec jne mov pop or adc out ja add mov (bad) int3 cmp pop push and iret pop rorb sbbl or nop fs aas mov cli out and lea sub push push push popa xor xor push mov mov cmc call mov inc clc lea adcl ret std sub pop push mov mov mov adc mov movb movl pop lea or add xor sar push sub dec or inc or inc or inc add push lock out jne adc cld mov push pushl adc sti (bad) je dec add mov lea mov lock cmpsl inc adc xlat adc je mov sarb inc mov mov jne into cmpb je mov or lea (bad) push cmp flds ffree mov nop sub sarb insl loopne sub test (bad) mov out mov lret test (bad) insb add inc paddusw mov add loopne out lock data16 mov cmp je out inc cmc pusha mov xchg mov cmp dec clc mov xchg lock loopne push inc push mov je pop insb mov dec xor movsb out loop outsl (bad) je sub je sub je dec je stos mov aaa xor add mov ret mov loope inc push mov push lea push push (bad) (bad) (bad) aas sbb rorb enter jle mov mov shl or lea stos stos stos mov leave mov fucomp (bad) (bad) cmp inc dec jne lea add adc adc ficom dec jne pop repz xlat incl push lea push pushl arpl sarb lds pop xor mov incl (bad) jb mov adc pop xor popf out adc mov movzbl cmp ja sub inc push lea test mov add jmp ja test jne push jbe lea jnp lahf dec lahf sub fs pop xor push pop cmc leave lcall pushl data16 jg xchg das add and pop aam and ja sti aaa mov sti push orb mov daa jmp add popf and mov xor pop mov jmp jmp inc movl xor sub mov xor rorb out (bad) (bad) sti sbb orb lea jmp cmp ja push and jmp add push inc add inc cmp jb cmp inc cmp mov ret pop call (bad) mov inc jo sbb ja out aas mov lcall (bad) sub adc pop add push jmp mov cmp adc divb add ja (bad) aad cmp inc sub adc incb or (bad) jne jne sub push push fldpi mov inc in mov pusha dec sub in (bad) xor ret adc loope add or or (bad) (bad) jne jp addr16 int3 and cwtl push mov std jne and jbe bswap jmp cmp jne mov inc add (bad) pop rcr les pop mov mov adc and and lock clc xor mov cmp jne mov push dec pop fnsave test rdpmc sarb adc lock add cmp fcomp jmp cmp je jmp jge lds push adc stc inc mov aaa mov lea dec mov rolb xlat std hlt jg jnp mov cmp jbe pop shrl (bad) jg jne mov test je inc decl mov sbb push loop std imul mov lea add push add jmp mov sub mov (bad) fnstsw and loopne addb adc sbb clc jbe fcomip (bad) ljmp cmpb jne mov (bad) or xchg add mov fwait movl call push mov lea lea mov mov add add (bad) fucomip clc dec jne mov add mov add jbe fistpll lcall incl jne push mov or sbb out sti jne mov xor push mov jmp mov iret pop mov stos jnp cmpsl cmp and fistpll push std rorb cmp adc fisttpl jge lcall mov test loop inc or inc add test loopne xchg and add dec and (bad) sahf xchg (bad) mov sti rep subl loop add push pop pop pop mov les mov jbe in and cmp daa jne mov push mov incl sar testb jne and mov test or (bad) clc out rolb nop mov xchg mov (bad) fcomip xchg rorb mov mov mov mov or mov mov inc jmp sbb jne sbb adc inc jmp cmp dec mov add mov pop adc sbb call rcll jmp aad mov lods into jmp sbbl sti add sbb call incb gs mov fwait out decb xchg add push and inc pop mov lret push push push adc int3 jb shlb mov push sbb push cmp jo neg mov mov rorb aaa roll fild je mov inc dec je jae fbstp add decl jne mov pop out push push lret je pusha lcall pop pop sarl mov jg fistl ret je mov mov push jg cmp jne mov (bad) jnp loope pushl pop pop mov decb adc pushl cmp push into nop in jb inc pop cmp xor les xchg add (bad) adc jnp cmp and jge cmp add mov je cmp mov pushl lea lods jmp mov test pop data16 cmp je mov push and mov add (bad) push dec jecxz icebp cs cmp push mov cmp je push mov push lcall sbb jg and push mov add push pop daa pop mov and pop idiv jmp xor es test orb adc mov test add sbb add js jb (bad) hlt (bad) adc push sbb sbb ret push mov and adc push inc cmp in sbbl js sbb and nop mov and mov pop ret stos sbb (bad) data16 or sbb xor pop cmp xlat loopne inc push outsl loopne (bad) fimul inc ss or aam mov (bad) incl push add add incl jle mov movb inc movb out or mov rclb jbe,pn and pop repnz jge push or out or jbe xlat scas stos and (bad) pop adc ret jbe pop xor cmp cmpsb cld mov xor sbb xor pop dec call scas rol cs push dec clc clc dec gs pop pop cmp das and sub add xchg je push decl cmpsb pop pop mov dec add mov jmp les jp sub mov and aas add es ret or lea inc jno ja js sub test je and mov ret cltd fisttp or ret or cmp fdivs insb (bad) pusha test jle test je ret cmp icebp cmp jae jo js sbb adc add (bad) jne and push mov loope sub shr or sbb daa dec cmp into lods pop sub bound ss into jne (bad) or jo mov sti dec mov and insb clc test jne push lock rcrb cmp and (bad) adc mov pushf mov clc or cmp xor mov call add fsubrl mov fdivs movsb add and add rcr and or lret pop inc ljmp sbb or sbb mov add gs test xchg mov lcall and aaa and out lea sbb fsubrs sbb arpl out push and pushf call call and inc iret mov cs sbb roll jmp pop jg fdiv pop pop jp mov pop push pushl lea aas rolb fidivr sbb jae mov popf adc push jg out pop push mov or mov scas jg negl loopne jbe mov sbb lcall hlt push lock xor out ret pop mov mov or jge or inc sbb mov jge xchg test inc or mov mov movb pop mov pop sub leave mov (bad) stos clc jg inc std add push pushl lea push push push cmp (bad) push pushl shll outsl and jns test adc inc clc je cmp decl movzbl shl or mov in lret and inc dec adc add adcb pop lahf pop cmp push cmp jge mov (bad) mov cmpsl cwtl pushf jae fisttpl mov add xor jae loopne rcrb push pop pop ret xor mov mov add mov add lret stc add sbb jl push pop ja dec and mov sar mov (bad) icebp add out shl mov mov cmp mov mov cltd mov cmpl std mov jo sbbb lcall imul jmp lock push (bad) fistpll lock or add std jmp sub sar add push sub xor aaa mov (bad) and cli movsl cmp jge add add les or shlb out aaa add les divl stc cmp jb popf jo andl and shr adc ret mov lock or stc adc adc mov (bad) xor mov push or inc cld mov mov mov std (bad) push jmp inc cmpb je mov cmp je cmp je cmp je decl or jmp orl jmp mov or or xor inc inc mov push or ret jns mov push sbb adc movsbl inc xchg lcall sti call or dec je sub je sub je sub pmaxub hlt fldl clc jne push add arpl jle add ret inc jne (bad) or arpl (bad) mov push ret adcb jecxz and xorl cmp lret add (bad) repnz arpl (bad) dec push and outsb sub je sub je dec je xchg adc je push jne add jne or jmp xorl fbstp cld (bad) mov jmp adc and pop xor or sub (bad) call leave jmp or idivl fsubs daa test or test subl (bad) xchg fiaddl add push cmpb sahf lock add je clc out sub add je add jmp push (bad) mov or add and cmp rcrb add add insl add push mov imul or sbb xchg jle sar adc (bad) call mov xor jmp incl mov ja call dec cld mov xor mov mov mov sbb dec or dec adc ja ja leave ret push (bad) (bad) pusha push dec sub (bad) decl mov xchg mov xor mov cmp lret lock sbb jg lcall je mov mov test jne test inc std cmp ja lea jge dec jns ja jp xor test pusha fstps inc mov testb je push lds inc pop pop inc jmp jae jmp push mov loopne and xchg sub jnp push cmp test dec jne pusha (bad) sbb jns sub arpl ja push mov loop pop or sti je andl lcall mov mov mov orl fiadd imull and mov push dec jno mov adc es clc (bad) call push mov mov mov push push push push push push gs mov adc les mov or sub mov sub jo cmp je aaa cld (bad) fild cmp je cmp jbe lea lea mov mov jnp fadds add js inc clc test out pcmpeqd mov popl loope les iret ret push add inc add into add or jp fild mov xor push pushl out xorl xchg add adc lock mov pushl pushl pushl fnop int3 lock ljmp mov (bad) call pop pop jbe mov mov cmp sbb xor out sti rolb push data16 adc push mov push push pushl pop dec adc sahf je (bad) sub add push cld xchg sub test js xor testb mov (bad) int3 mov out sbb add lea fldl mov loop xor jge jne subl cmp and outsl or ffreep mov (bad) adc std (bad) jg add leave sar mov aas (bad) (bad) (bad) fild add daa mov not test jne pop andl add jnp pop adc testb icebp adc aad getsec sbb das call test sub add je call leave cmp mov test jne xchg rcll pushl mov and or leave inc (bad) mov test cmp je cmp (bad) or pop add popf adc mov std xor mov adc xchg push mov pop fimul mov ja jmp xor cmp sete sbb mov add cmpl (bad) jg cmp mov mov andl push jnp xchg fsubr dec movsbl stos xchg je mov (bad) sub add out cmp jbe push jle mov mov je incl xchg add add mov sbb lea (bad) xor push push push (bad) rorl decb push push lea mov cmp out add push lea std mov push push mov add sub mov jmp sbb lea add mov jl dec sbb int push or popa ja inc hlt push push movb pop jge jg mov inc add mov (bad) clc (bad) out mov push cmp je cmp jne movzwl xor cmp out mov imul mov mov clc mov shrl call adc rol inc and test adcl nop (bad) sub pop push mov sub cli mov int lea jb (bad) in inc add push mov and push mov repz scas (bad) insl inc xor lcall arpl mov test imul mov lcall push jecxz imulb or dec adc mov inc inc mov add or incl or inc inc cmp jb mov xor lock and or sub inc jno sti test outsb test add (bad) pop mov mov adc sub cmp xor pusha push insb jl insl inc mov mov andl add pop mov inc movzwl add add mov sbb mov push mov mov mov add add adc fcomip add cmpl dec aaa mov popa adc and push cmp in jecxz cmp sub jns (bad) stc (bad) (bad) cmp adc popa mov sbb add fimull aam (bad) lcall (bad) xor push push push lea std punpckhbw push lea push push mov push push push lret add test adc (bad) push lea testl sub fidivr jmp inc shlb adc in data16 pop mov loop popa test call mov xlat xchg cmp pushl test xabort adc cs mulb cmp inc mov (bad) jle jne cmpl pop cmp fimul lret xchg je dec xor aas sahf inc iret pop jmp aas loope xchg int3 inc je cwtl cmpb jne adc aas mov jo xor rclb imul sub test outsb fsubrl ljmp cmp jne inc mov out mov outsb cwtl test js cmp inc idiv sbb jb push adc rorb ret in lea repz shl mov adc sar mov loopne je push inc pop push mov mov je pushl jp mov mov jmp dec xchg dec ret xchg or daa and aam rcr imul pusha mov stos mov inc adc cmpsl inc or enter xor jnp inc test inc je mov ds test jle push xchg add inc imul (bad) jmp repz jns and mov jmp mov lret lcall andl pop mov pop addr16 cmpsl clc pop push mov test jne outsl jg jmp sbb add jmp jg mov testl je sbb pop push cli neg pop sbb mov cli aaa (bad) jl repnz test mov aaa jb mov lds lahf jb je mov xor ja sti dec dec xor inc mov and mov dec cld (bad) push roll jne and pop inc je add push incl jne inc bndldx add inc fmull inc jmp xor mov dec dec ret inc das loope test push lcall je mov mov nop xor dec sbb adc adc push xor mov inc mov mov add cmp jbe cmp jb (bad) (bad) cmp mov mov adc and and cmp pop pop jne jmp dec adc jmp sar add rep jmp mov mov add mov and add lcall lea lock mov je or jno pop push and (bad) call mov mov mov mov mov push mov add add arpl sahf fs lea sub loop movb (bad) cmpsb and and dec je dec rcrb add (bad) xor sarl xor jg mov mov pop call xor in lock hlt clc jle (bad) xor cld cld lea add add add es dec lock and out jb cmp nop icebp or fsubrs mov (bad) xor push sbb dec js lock andl or in rep cld ja jl push fldcw sub jnp jb xchg stc sub and imul mov pop jb mov and pusha cmova mov sub out add mov into mov cltd jle pusha add std sub sub sub jae and sub sub ja xor jb add jae ss pop mov dec pop push add lcall sbb cmpsb imul imul dec push mov xchg sti jae arpl cwtl (bad) mov or xor in lds rcrl mov jmp lods stos fsubrp push aas and fwait sarl or xorb cmp jne testb je lock fisubr inc mov pop mov pop cmp je aas push add and cmp mov lds pop (bad) aaa lock stc push pop (bad) testb decl cmp (bad) je pop fildl test pop jb or js jne loopne dec adc cmpl mov fisubrl pushf jmp xorl sbb dec inc sbbl (bad) cmp xorl je pushl data16 andl idiv (bad) pushl rcrb mov mov hlt nop (bad) decl (bad) enter dec add inc or pop push cld es ret mov add shr push icebp outsl and push mov je push ljmp out aas cld test mov je,pn sbb dec jl mov inc or pop pop cmp or push mov cmpb je pushl cld cmpl movb jbe fstpl (bad) je jne cld adc (bad) sub jmp mov mov pop pop push lds mov ret (bad) enter (bad) lock (bad) ret jne outsw xchg adc jnp and fdiv orl insb mov scas xchg fcoms jbe push js jg mov sti loopne outsl push push push add call or cmp (bad) jg xchg ret jmp xor inc push push mov jl clc jne push pop push rol sub fnstenv into add imul js push jmp and movl or xor pushl pusha mov mov push jmp add mov jne cmpsb popf call loop mov xor aaa cld out shll in and push push push pop mov cld (bad) (bad) jmp rep mov mov pop mov pop test je testb je movl (bad) fistpll nop pushl pushl pushl pop rcll leave mov (bad) loope mov cmpl ljmp cmpl jne mov cmp je cmp and cmpsl xor cmp mov (bad) fbld test iret ja push shrb or rorb add fist clc push jb adc neg sub mov xchg roll (bad) or lds mov js mov xor pop mov cmp je jnp xchg ds lea je mov cmp out pop (bad) out mov (bad) fmull test and add loopne push sarl lret repz mov test jne sbb pushl mov xchg lret mov pop xchg pushf test mov or push push icebp cmp sti jmp mov xchg cmp sub adc je enter add stc adcl dec jne adc mov shl outsb xchg jne pushl repnz gs mov mov sub pop push add cmc push mov mov je cmp je xor mov mov or cmp je inc cmp push lea pusha push lea sti push test adc sbb mov je xchg jo jmp push push js inc js test xor negl pop xor test test lcall cli mov mov push cmp je add lea jg cmp jb add sbb jmp push or cmp jne cmp cli or pusha or or adc es mov or mov mov mov enter jecxz test mov andl add cmp (bad) (bad) in mov mov cmp jne movl sbb dec adc movups outsb cmp jg out jmp cmp divb call das (bad) (bad) cmp cld sbb xchg mov cmp mov outsl cmp jmp cmp cmp out mov pushl push call pop mov loopne,pn add push decb pusha pop cld dec flds mov cmp jle loope (bad) jg aad mov mov cmp ja test je (bad) (bad) jg cmp and xor test sete mov movzbl lods das ljmp inc inc jmp sub scas (bad) sbb jne fmul pop add mov pop adc sbb loope jo push jbe cmp das mov jg je add ljmp adc inc pusha sbb pushl pushf inc push jmp xor pop add push shlb dec sub idivl push pop xchg inc add add ret enter loopne,pn pusha data16 andl add decl cltd jecxz pop pop pop ret and and pop add imul (bad) (bad) push cs xor push mov mov mov (bad) scas ffreep out jb cmp je cltd addl mov (bad) cli ja incl xor cmp mov sete inc adc cmp pop test je adc (bad) cmp add push or push movzbl push inc jb jg cs je orb add (bad) fistpll (bad) jge add cmp je cmp jne jno sub add inc incl (bad) je rcrl je cmp jne inc jmp dec jmp sbb out test jno mov mov xor inc imul ds je lods mov pop data16 lea cmp out xor lock das mov neg ffreep shr test je dec jl pop inc ror jne lret (bad) (bad) fild jne cmp je cmp je test je movsbl jae,pt mov or jnp (bad) incl or jmp divl push jg add pop sbb inc stos cmp pop movb xor fwait in xor add push mov push add xor xor push push cmp mov push push mov in sub and adc insb cmp je fstpt sbb mov mov lea mov push push lea fwait jl mov cmp sahf aas jae mov cmp jae mov shl lea cmp jb test lahf adc mov pop cmp je ds push push inc jge pop pop dec adc push jno xor jmp adc adc icebp pop adcl mov xor cmp push sti decl imul xor rolb cmp jne pop lock add adc jg ret push sar inc push push push push mov call mov (bad) je mov fidivl push cld or push les hlt and mov (bad) in pusha pop sti lahf dec rcrl inc cld jmp or rclb push lea jbe push push imul mov or movsb add add mov pusha loope mov ss orl movw mov or ja pop add movb xor add fwait (bad) (bad) sti lea add int push cmp je jl in call add pop (bad) jnp movsl add mov add (bad) xor mov (bad) mov mov xor cmp jae xchg popf jae pop andl andb andl xchg lahf add mov mov xchg add xchg cmp jb inc mov jl nop pop mov (bad) jg jle push mov cmp je jge adc cmpsb sbb je test jne xor (bad) fst sub mov sar shl add fcoml mov add mov test aad add lea hlt cmpsb dec push cs mov inc scas insl loopne (bad) clc add incl cmp jl xor mov inc lods mov adc je jnp orb jmp movb test jbe (bad) pushl push pop jmp lea xchg push clc cmp je sarl les xor cmp jne inc jmp push (bad) std or push or or inc movl sti add mov mov add pop shll call sbb (bad) mov push or sbb push cld nop push movsl iret pusha push push jp cwtl cwtl cmp dec and hlt push mov add (bad) xor cwtl (bad) push ficom mov aad mov add add gs pop push push mov sbb inc mov (bad) je test je idiv xor fimul adc fcoms dec cmp jne xor push jg stos sarl xor pop adc lock (bad) xor (bad) mov xor xor cmp jne mov test jne mov or rorl or std add cmp (bad) pop inc pop cmp je mov push jmp stc rorb (bad) ja fildll pop cmp jne mov jnp dec pushl inc out fistl cmp adc or sarb clc cmpsl and inc iret pop jmp add and scas and ljmp leave ret loopne popa loopne cli dec sub lret decl dec dec and inc jne xchg mov aaa jge ret mov loope cmp dec dec shrl xchg rorl popl imull mov movsbl and je fwait xchg sti jb mov or (bad) sti jg pop mov mov jmp prefetch jae sbb or cmc test inc fmull jge ljmp sbb push adc add or idiv or movl add inc adc adc add add mov bound and and xchg inc mov fdivrp pop loope and push movsbl and push aam hlt push xchg mov add cltd mov xchg outsl cmp jb pop push or xor push sub adc mov aad nop add add mov jne add arpl add dec adc rcl add inc aas mov call xor (bad) mov adc add je jmp lea gs ret lea decb std cld incl sbb adc xor push mov cmp dec sbb repz cmp jbe cmp mov ret pop jg hlt jnp add jg adc (bad) aaa add test mov jmp rsqrtps mov sbb adc test push fwait push add inc adc scas cmp jbe imul sbbb or adc sbb mov movl push adc inc add and or xor xor xchg test loopne adc xchg mov pop mov (bad) cmp test cmc (bad) call dec or push push push push lea push push mov pushl (bad) out add roll cmp pop or test dec or lret mov mov mov clc jp test cmp je incl sti jbe xor jne loop (bad) lahf fildl aas lock pushl inc jp,pn add mov or cmp and push loop add jno push imul clc lahf sub push mov or jne aam or out mov div mov or pop lock mull mov mov (bad) fnsave add jmp or and and jmp mov fmuls leave jne div mov and adc out (bad) jb cmp mov or cmp jbe dec sub sbb xor or or (bad) fadds mov mov cmp pop ret cmp or add inc lcall imul daa mov push js push add jg xchg mov push mov cmp jb neg and je sub imull add mov push addr16 int lret add jmp stos pop or ljmp ret flds adc xchg mov jle,pn lea cmp mov addps jne clc in (bad) pop stc movb pop jmp (bad) clc movb inc loope adc and daa cmpb inc call add inc lds bnd cmp pop clc aaa cmp mov cld and lea mov dec xorl or inc and jo or or add loope push mul out fmull fs add loope rcrl xor das mov xor pop div cmp jae (bad) mov pop sbbb scas dec or mov test jne inc xor cmp ja push push push add je aaa push lahf (bad) shll je inc inc mov cmp and dec jmp mov scas pop out arpl movl roll adc jmp dec adc pop pop ret inc sub adc add loopne adc inc inc push pushf loop mov fnsave pop or dec jle sbb pop mov cvtdq2ps inc int3 mov pop mov pop mov jmp lret mov mov cmc iret inc add lea pop mov mov push pushl add push (bad) outsl push cmp jl xor inc lock fstp andl lret icebp mov push inc incl push mov ds add push cld aaa sar sub andl pop add adc (bad) fimul sub xor add rcrl out pop leave push pushl aad test mov adc fstpt sub arpl mov lea cmp je std insl push sbb clc cmp jne jmp push and scas jb inc pop cld cmp jne or popa mov sar pop (bad) or orl ds adc mov or push fildll inc or flds (bad) mov jne push jle lcall ss pop rcll mov inc and and mov push call jmp xchg ret mov or fwait inc dec jno adc mov jo mov inc push fild js or dec or mov mov push cmp je mov jne (bad) ljmp or jne add cmp jb imul add pop mov icebp push add sub add dec jg xor fild sti or je mov push pop sub jg xor je add or sub mov mov (bad) cpuid mov mov bound inc pop sub pushl mov (bad) (bad) fistp aam lea mov jmp mov sub je sub je dec je pop adc rclb mov out dec jmp or jmp push (bad) xchg mov movl nop mov loopne jge add test adc pop sbb dec lret cmp push xor (bad) (bad) inc mov cmp je cmp je cmp jne mov mov mov pop stos sahf sti jg mov mov movl sbb pop pop loope mov push xchg add cmp pushl cld fdivrl mov push mov mov incl jmp or mov mov lret inc pop pushl push call pop jmp pop incl fadds cmp jnp pop in push sbb xchg adc pop or rorb xchg xor cmp cmc push pop push icebp pop and and mov imul inc cmp roll pusha out xor bound sete mov int3 bound bound mov decl dec cmp enter adc push movzwl xor push lea (bad) (bad) jg mov dec or stc jb mov add cmp jb inc add and div cmp jb rcrl into bnd adc add dec rclb dec or and adcl add and lock arpl push jmp (bad) sbb and ljmp inc and call loopne jg adc call rolb push inc mov jns lock test sub and or add jae xor adc adc ja (bad) mov fsts sarl (bad) (bad) (bad) fisttp lret sbb cmp jne or mov sub dec cmp jge inc mov mov (bad) out (bad) pop clc cmp jne rorl mov mov xor cmp push std mov sbb xchg rclb jmp and (bad) aaa in cmp mov (bad) aas mov testl cmp ja mov jg mov mov and add fnstsw cmp xlat adc movl lret or mov cmp je push pushl jbe callw push ljmp loopne cwtl clc add and (bad) mov ret imul je mov cmp xor (bad) or push pushl cmp mov cld mov mov jle mov std cmp ja push mov push add add add xor jmp aam mov sub pushl lock lds push cmp jne push push jmp clc push out pushl xchg pop and (bad) jae loopne cli cmc nop sub jne test jns lea lds (bad) int mov popa out xor jne lea sbb jmp and sbb adc cs nop dec add adc (bad) loope push push mov enter sbb jae popf xor jecxz xchg jo jg jg cmp push (bad) (bad) jg xor sti cmc outsl add je lea push push xchg popa lods dec repnz cmp fsub or imul adc sub sbbb in and or lea es jne les aad add xchg add add (bad) fnstenv ja pop pushl data16 pushl xor outsb pushl psubsb out sbb sahf push jbe cmpl pop dec pop out js addl pop cmp out or xor pop iret add pop cltd pop jns pusha (bad) std mov pop add pushl or jbe pop cltd test mov and fsubs loope repz push pop pop pop pop rclb pop push roll pop fs push xor cmp adc pop push pop in jae pop jl (bad) mov add aam or push add add or or or or or fldenv or (bad) enter imul pop mov aam adc pop gs push sub xchg pop jbe mov adc (bad) xor xor shll and dec inc and add pushl xor adc xor xor mov and cmc adc inc or in lret and or pop add cmp or inc adc xchg mov or xchg pop pop pop pusha push and jge les cmpsb divb adc jg pop mov cmp cmp sub xor inc add insb test mov mov xor cwtl adc xor xor sbb pop cwtl push inc xor xchg mov aaa je adc js and add sbb and xor xor and xor cmp and add inc (bad) pop xor daa aad aam push out push (bad) mov mov out add (bad) je add bts jmp negb pop add mov sbb cmp movb mov mov add pop xchg mov push xchg or test je xchg jge sets loop in clc out (bad) (bad) pushl mov jmp mov sub mov mov inc test je dec jne xor movb call and or mov push and mov jg pop jne mov cmp jne xchg cmp jne or je (bad) fistpll jne adc cmp jne add add or (bad) jmp jne mov xor ret nop sbb shl add ret notl je mov jmp out xor test or sbb adc clc int mov mov add test arpl inc ffreep jb lea fwait outsb mov dec mov jg (bad) out add test cld jne mov or push std jne mov aaa dec push (bad) cmp jne mov adc push pushl addl cmp je pushl jb jmp movzbl movzbl jmp or (bad) jmp (bad) sar std jmp cld cld jmp insl lcall cld jmp mov cmp jne inc inc inc cmp test out xor ja mov movzbl sub jmp pop push xorb push mov decl adc or icebp lea stc inc mov mov sub hlt jae mov aam add push pop mov cmp jge mov mov cmp sbb je mov sbb jecxz push add inc in call sub and in js mov pusha pushl or int3 mov mov inc jmp pop jge sub fwait dec push sbb push loope leave mov (bad) mov adc pop fmull inc rclb (bad) out repnz je mov movb jmp movl add faddl ficompl cld mov push add mov jne testl fcomip ja pushf fdivl dec incl sub mov out adc je dec je cmp repnz mov mov (bad) bnd fmuls dec hlt jmp fwait or add outsl push ja add inc push push hlt mov adc clc outsl lcall sbb jne cmp ja incl sahf in jmp movl or jmp or inc pop in loopne fnsave mov pop push mov js sarl sub cmp je cmp xor fs movl pushf cwtl jmp or inc cmp aaa cld add je cmp cmp je loope fcmovnbe or jmp ljmp out into or (bad) movl push mov fdivr and and test js scas test je std dec cld les dec inc add orl test mov add jge test je pop or or aam data16 lods or push loop fdivl (bad) fmuls adc adc add scas mov or mov lock lret jg jne lea and and pop pusha cmp mov mov shlb cmp jne mov je andl mov cmp mov sbb test mov and iret add fdiv cmp mov in pop sub mov ret mov iret cmp sarb test jne in movl addl jle dec decl or mov mov mov (bad) add incb mov pop mov leave add (bad) (bad) out push push lea andb mov andb mov jne imulb orb cmpsl andl je push push push loopne,pn popf mov in or sub mov dec fild mov int sahf add add pushl movb push cmc pop add push ja fisttp (bad) cltd push push cs sbb ret push adc divl sub pushl testl (bad) jne or jmp or sub dec jmp (bad) cmp je cmp cmp mov pop (bad) add je cli lcall push movb jmp mov mov fisttpll jmp add (bad) outsb roll inc mov jne hlt inc rcr pop and pop add cli out (bad) std mov cmp jne (bad) jbe decl clc add sub pop adc mov dec mov test or jne in incb add and push insb mov push or inc leave decb ret push adc loope or (bad) (bad) ljmp lea inc lock mov ja je cmp jne sub mov addr16 call mov into jno xchg movsb ja mov dec adc and imul and insb testl jne mov out out cmpsl push mov sub sbb add mov je pushf add ds sbb push mov ret sbb (bad) std sub push lea (bad) sbb cmp clc cmp jg sub mov jg loopne lea mov xor and xor and (bad) decl jmp and or cmpb mov jne adc imul clc or dec stc add (bad) add or dec jle add xchg dec xchg dec push dec xorl jg dec fadd ljmp adc test (bad) xor (bad) sahf add into rorl add mov pushf xlat or inc inc add add (bad) incl xor pop iret jae rorb or adcb inc push mov xor cmp cmp arpl je cmp je adc jg neg xor inc je mov mov sbbl mov (bad) mov xchg xor je add dec lds outsb ret jge je cmp pop leave pop loopne insb inc nop push mov xor sbb add and mov add fsts xor jg fstpt pop adc cmp and movsl pop mov cmp jne lcall movsb popf jmp ljmp ja push or lret push jo sub inc mov mov daa adc xchg push adc mov dec or inc or testb (bad) (bad) sbb je mov testb clc jne jo mov xor jne (bad) jnp cs jmp shl shlb lret leave mov ja fucomp inc cmp jb add add jmp or jb loopne ja add sbb pop movzwl lea testb mov mov add std mov jle mov inc xchg cld je lahf in fnsave cld jmp mov mov (bad) je jnp mov inc mov cmp dec dec dec sbbl cld mov jne cmp je outsl jne push (bad) cmp ja sbb and dec sbb mov dec xor outsb sahf xor scas cmovo lock ret xchg leave ret push (bad) pushl add outsl mov cmpl jne xor mov push cltd mov add inc test mov jle addr16 add es add and mov xorl in incl roll cmp and mov xor adc js adc jne fnstsw pop leave ret mov test ror jmp mov or inc ss inc testb mov shr mov fs lcall ja repz ret rolb (bad) jne test je fadds jo jmp fs adc ret jmp movsl mov add ljmp int3 js scas insb fcom dec nop mov in dec and aas and xor dec cld xor inc inc add aas adc push or push mov cmpsl popa add mov fmull popa xor addl clc addr16 mov add inc and mov pop add je andl (bad) jg push cmp jbe lea mov mov push arpl mov mov pop pop inc enter mov test mov xor mov mov out pop xchg mov shlb mov add add push or push or push or sar add ret push push mov jmp or (bad) pushl or dec or or push push pop pop pop pop pop ret jmp push loopne stos push pop push lock cmp mov push icebp pop sbb inc ja add leave and aam pop dec or test adc clc mov in adc imul mov add or leave sti adc ret add loopne nop xchg movzbl and or rolb lea push or loopne inc jo lock jle mov mov jle cmp jl xor xor xchg ret jne push push push decl fmuls sub xor cmp loope jnp std cmpb je fwait (bad) addr16 xor cmpsl andl lahf mov mov or add test dec jmp lock push pusha mov jne (bad) aam (bad) (bad) sub sbb not and mov and cmp jb mov pop xchg and scas fidivr cmpsl test jmp dec and push push test js cmp push mov or adc xor lock shl cmpl jne iret adc add or push or (bad) incl dec je dec jne push push jmp push push jmp push push hlt jg sub push xor pop jmp mov adc insb (bad) push or cmp hlt cmc pop ljmp and lret jl cmp sub mov inc mov pop push mov cmp (bad) (bad) das cmpl je mov sub je dec je dec push rcrl test shlb sbb xchg leave test fs adc lods pop ret and into rcrb cmp jp clc push inc or je mov pop ret or mov push std push dec sub jge test xchg (bad) aaa rcll pop or push pushf xorb sub sbb jg add or in sbb fldcw adc push jbe inc cmp in jae cmp fidivr arpl lea (bad) mov cmp call (bad) call test test push paddsw dec add das lock xchg mov mov fadds cmp mov in scas ja jne mov add adcl incb add cmpl mov adc popa in mov adc or fistpll ret jmp or lea sti add add lea inc shr push je or (bad) (bad) jg add jmp mov mov pop add ds out jp sub idiv sbb add mov cmpl jne inc fisubr (bad) and popa lea addr16 loop adc (bad) jg jae movb orl movb fild sti ja jmp shl mov pusha clc add pop shl mov (bad) cmp inc pop test rorl dec in lods popf adc inc adc mov cs add fs popa dec xchg xchg add xor lcall rorl push jmp mov inc dec rolb and je test jmp xchg arpl fdivl adc ja sarl add mov gs add inc (bad) pop mov outsl shlb scas ja mov lds out call roll pop je jmp fldln2 add add add and xor jg add jg jg mov inc sbb push add pusha jle and mov outsl jg jg jo mov mov and mov mov loop shr pop outsl jg lea fcomip call lea dec jne and je mov add push mov lea lea (bad) fcomip add jne dec loope je mov mov inc inc dec jne pop pop pop pop ret mov out lds shrb lret ret mov shr add inc dec jne pop scas lea dec mov xor xchg aad dec add xchg dec sub push mov push xchg jne mov lock rcrl mov xchg adc or mov mov data16 pop (bad) mov inc (bad) fsubp pop scas stc dec sbb shr lds adc js sub cmp aas lock cmp xor andl xchg sub (bad) sub cli mov jne sub pop jo inc insl add je icebp sar ljmp sti je mov or mov hlt or js xlat mov and pminsw pop scas lret orb mov cmp ret out repz xor test test xchg repnz and fnstsw add call cwtl pushl (bad) sar mov dec fcoml or dec lock push push (bad) fdivp jmp testb jne orl pop jl inc call je dec jns and notb sbb in sbb xchg jnp outsb js (bad) and add ljmp add shlb (bad) lds (bad) scas clc les cmpsb imul test es test jne xor inc and inc cltd call test fdivr (bad) pushl fisttpll add ret jne test je sub movzwl mov add data16 dec jne jbe ret mov add push stos loopne pop dec cmp push or adc (bad) test jne gs cmp jne xor popl or frstor mov fcos mov xchg add aam ret pushl mov sub mov jg enter and mov push (bad) es mov je dec jne push shlb push fild (bad) sti cs dec adc mov pop jmp jb mov pusha leave adc int3 inc or or icebp aas jne sub sar dec in pop fnop cmc add lret jmp mov sub mov rorb mov data16 dec cmpl or jge js cmp jle cmp mov sbb sbb push and or pop in cwtl andl and mov andb adc push add fcomp adc dec lea in add and jge push bound dec inc mov xor dec lcall pxor push jne outsl cmp data16 mov jg call xlat rorb add inc out int dec inc inc jg cmp dec lahf inc inc jo mov rolb ret add (bad) fistp lea dec jne and je mov (bad) (bad) inc xor shr je mov lea dec jne and je mov inc dec jne pop pop ret mov fdivrp std push fildl xor push mov and add jne shr in addb clc pop ljmp aas (bad) or lea pop mov sbb push push xlat xor mov add xor ret sbb or push xor pop outsl test add fstps wrmsr mov add jns xor daa mov addb pop lea inc je call in mov sarb adc cmc or les aaa mov jmp sarb jo pop sbb jne xor lock pusha mov inc sbb jmp sub movzbl cmc pop sbb dec adc mov mov shrl add jne cmp jnp subl adc adc or sbb sbb add aaa adc dec xor push pusha adc fwait mov mov (bad) (bad) add pushl add outsl clc out ja (bad) fisttpl cmp je sub mov sbb js repz stos pcmpgtd je mov shrl push add dec push fst cmp test ret push xor mov test jl jg cmp jb data16 add loopne sti mov jge push jg test jne mov fildll pushl pop push (bad) iret cmp (bad) sar xor mov push mov cmp jp,pn out or mov jmp cmp jg jl and ror jmp (bad) fistl jne test data16 (bad) fbstp mov and mov sub or negl pop jmp and std mov and cmp je push pushl loope or push icebp add in sbb push sub incl pop mov mov cmp inc std mov push xor cmp jl cmp dec mov or subl mov or ds cmpsb js in xchg or mov test adc pop jmp cmp rorl test add add test jne cmp je mov add sar mov movsbl dec push or incl je dec jne mov not mov loop mov popf in clc push adc jp jne decl mov jg ss shr mov cmp mov add and add sbb mov ljmp inc jo mov adc (bad) pushl mov mov into mov mov add testb mov je mov pushl std cli cmp je push je fwait cmpb mov mov lea (bad) jg mov scas movb je mov mov mov inc aas mov mov inc xor add sub sbb push add or shr clc add push mov pushl inc dec fnsave in test cmp or jl mov xchg pop add (bad) cmc testb je push stos add test mov jne orb jmp andb mov mov add and inc mov mov cmp jae ja mov cmp je or mov lock inc inc arpl mov enter inc xchg pop cld add sub movb jmp jg fdivrs inc adc add dec shll negb lahf aad aas mov jge or add decl incl add lock sbb push scas sbb or push add inc nop (bad) mov jbe adc (bad) ja in jmp mov mov lock add pusha and jne incl in mov test js inc fidivrl (bad) movzbl jmp cmp jg jl push dec movzbl inc cmpb je mov xor (bad) adc mov movsbl loop jns cs inc cmp jne add jmp (bad) (bad) incl psadbw dec je inc mov cmp jl mov mov mov inc cmp jo pushl sub jmp neg cltd push push lret push cmpsb (bad) jp inc in pop lock adc or scas or lock dec dec aas adc loopne cmp pop orl sub inc or inc mov decb test mov or leave cmp setne add dec mov jmp add out adc adcw inc aaa stos mov pop cmp and fist cmp je mov mov rolb arpl add jae scas ljmp cmpl jne cmpl or or sub xor add or adc (bad) pop cmpl cmpw je push (bad) clc or sub or and sbb movb jmp mov cmp cmp enter inc mov sbb sbb je mov testb push add or mov mov mov inc pusha sbb push pop cmp jne cmp push (bad) out mov cmp jne mov jno (bad) mov and mov (bad) lret inc pop das andl mov push icebp xchg je (bad) adc roll test adc aas and or lock inc iret pop xor cmpsl xchg pusha push aaa xor and add scas cmp sub adc sub xchg push movzbl int3 jns sbb clc cmp add aaa je pop lahf jg sub pop add je add popa (bad) (bad) pushl orb mov lea mov and or mov jmp adc (bad) or jmp andb jmp sbb daa ds push pop ret cmp scas mov cmp push inc ja or xor mov add push push push push pop inc add pop lods rcll fcomps fidiv clc (bad) sub sbb cmp dec (bad) jg xorps add mov mov mov mov mov (bad) (bad) jmp lea mov or mov je or je add add cmp jb cmp ja add jg aaa fnstsw (bad) or (bad) cmp sbb add xor cmp out or loopne or jb neg mov pop cmp int3 jmp or sbbb push mov adc ja lds push ss mov in jb movb jmp mov mov mov nop and aas add inc jl cmp jg add mov inc cmpb jne je cmp push mov ret push push push ret jo mov enter mov inc sar cmp pop xlat outsb xchg jle cmp jae mov adc mov inc and xor icebp cmp jb lea or push negl jb or lods xor jmp add add lahf sbb push mov orb mov clc lods pushl xor test jne std adc mov jmp and add test add cld cmp lea fs mov add xchg roll sub nop je mov and add and out incl mov je mov cmp jl pop jg add mov inc cmpb jne pop ret ja or jge (bad) xor add loope sub call jnp inc cmp je inc inc jmp inc (bad) int3 scas movl je fisttpl add or les mov daa clc lcall sub add push in add add scas xchg add mov jl push sti (bad) decl sti mov add jne bound and insb outsl arpl imul mov add js add jne insb add adc add outsb jne sbb dec push sarb (bad) mov add add add inc inc add push sub jg call pop or aaa xor push push pop add and or or pusha add jo add and pop add or add add (bad) (bad) decl add jb js je jb arpl jae add jae arpl outsl add gs jmp add add dec dec add cmp jae jae adc add and dec jbe mov add adc add sbb pop das adc push adc pop inc inc insl arpl insl add pop out pop jb add jbe adc cmp jne je and je pop xlat jo and jae fsubl sti dec dec or outsb sub or jo imul add outsl xlat jne inc pop bound adc add or fnstenv xchg add popl add aaa aad out dec inc mov int push jnp add jae out jae daa popa or mov or jb imul fcoml jae push mov call push decl outsb rcrb dec aas outsb xor in popa outsl popa (bad) outsl add idivl add pop pcmpeqw outsl imul jne dec dec cmp cmp add (bad) add dec and and dec dec das fs jns mov push inc inc add gs bound in fbld jnp outsl jbe dec arpl push gs adc insb ret aas inc jne jne je jne inc dec jne gs lock aas pushf inc jo imul mov popa jb popa outsb or pop add scas jmp add dec add insb add dec popa jns mov pop jb inc bound dec popa outsb add je jb sbb inc jb or jb or outsb gs jne dec outsl outsb sbb push jne popa je cmp aaa add fs clc pop xlat daa add add add inc add inc add sub xor xor add insl ja jae jb add insb jae gs popa insb jne inc inc (bad) jg jnp sub add add or or push (bad) (bad) (bad) call adc adc sbb sbb push pop and and and es sub sub sub cs (bad) (bad) (bad) pushl xor xor cmp cmp ds inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec (bad) (bad) (bad) call push push push push push push pop pop pop pop pop pop pop pop pusha popa bound gs imul cmp jb je jbe js jp jl jle add out jae push push inc sub ss inc or push dec dec inc dec ljmp lahf inc cld and add jne push outsb imul outsb and ljmp add cld xor xchg fsubrs and cmp add sbb and cmp insl andl jb jbe and dec dec pop push (bad) mov aad fld and inc loope push xlat mov cmp jb sbb test lods stos dec xchg inc and pusha aaa (bad) lock add add mov xor sub inc stos orl xor gs dec test call mov jns jne negl dec sub jae popa das jae adc dec fcomip pop pop shrl addr16 outsb or xlat jge cmp dec pop imul pop insb dec jp daa popf or imul mov out jmp adc sub jno add sbb outsl arpl popa ret popa push sbb jo xor into pop inc inc outsb test push insl int3 lea sub mov je jmp push mov sub arpl xchg scas divl repz cltd xlat jne out dec add insb dec xor inc ja add adc dec outsb fsubl and dec popa pop lods imul cmp insb inc das add icebp pop inc insb std popa ja adc xor add mov sub jo jae out add in sbb adc leave xchg dec cmp fiadd and out call outsl inc push push popa (bad) loope add cmpsb out xor lahf cs test dec repz lds mov dec mov xchg aaa adc mov jno fs pop mov adc (bad) pop pop popa cmpsl or jbe inc and mov add xor lds add pop ja jno and push outsl ss xchg mov out add and pop sti jbe and pop cmpsb jb lret insb adc lods cmc mov or dec das jne cmp ja cmp gs in popa lret xchg lds cmp repnz cmp outsl hlt xor loopne scas stc iret outsl cmp stc fs fnstcw arpl lret xor (bad) xor lea add inc add xor mov inc insl jne lods xlat ret cmc jmp imul loope jge das or cmp push in loope cmc jmp iret icebp icebp je inc push xchg (bad) cmp add dec popf fsubrl in dec pop mov (bad) xor adc lahf andnps outsb cmc pcmpeqb jmp xor push cmpsl push pusha push xchg adc jae sysret inc xchg dec xor dec xor (bad) jne outsl jmp outsb jmp pop pop mov inc lds jo sbb sarl ret loope mov and and add add fisttp push (bad) or jns mov fidivr adc fucom adc adcb adc cmp fsub add fdivl or mov mov pop (bad) ljmp lock pop fidivl lock fld1 loope andb lea (bad) pop xlat nop jne or sub sti add push jp xor add xlat sub inc (bad) mov (bad) dec mov outsl js xor mov adc js mov inc add add stc (bad) push and ds or or xor pop cs or mov addr16 popa fistpll cmp add (bad) push repz js out out jb and add outsl mov push imul add rorb add sbb dec add lea subl adcl or mov jb pop nop sub xchg jp xchg subl (bad) pop ds subl pop or lock (bad) lcall imul addl adcb test mov andb cmp addb inc insb (bad) pop movsb push push add sub mov pusha push pop js jo jo lahf test pusha add push xlat test cwtl and add mov add or dec add add or add add add add add add adc imul loopne xlat push push add fldcw roll add add xchg mov std inc dec mov push nop (bad) gs adc or mov and mov and int3 xchg or mov (bad) (bad) (bad) (bad) incl mov mov xchg xchg xchg xchg cwtl cltd lcall mov jmp test stos stos lods lods scas scas mov mov mov mov mov mov ret (bad) inc (bad) (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) loopne loop (bad) (bad) jmp in out call in out out lock repnz cmc div clc stc cli sti cld std (bad) incl adc push inc push movsb push stos jg inc movsb dec jg mov lods mov call test gs jae jb bound arpl outsw jb lcall and dec popa jae inc arpl sub (bad) jmp outsl jo jo add jae popa addr16 outsl js add push jno aas lds add dec add push (bad) mov fldl and and insl jo gs and dec incl jb and popa jae and mov ljmp jb jb push jae jb jo push add inc popa jae ss andl jb jns adc cmp and and add push jns gs pusha insb outsl (bad) (bad) fistpll fldenv je jb popa and popa jb daa add popa outsb std out out out iret and outsl jb arpl jns outsb jae jb arpl and cltd or and jnp mov add (bad) out jg and popa insl imul and jae leave jne and and sar imul imul gs ss sub setae roll call or add insb popa arpl outsb ficom pop pop and outsl jae jb fistp mov pusha outsl insl outsb imul jae addr16 and outsb gs pop xchg clc dec (bad) je bound sbb repz push je (bad) fstl pusha inc dec add fs jb je jb imul and pop add inc outsl hlt daa add arpl fbld jbe jb jne insb and or insl popa jo pop add insb nop test orb andb ret test sbb ret popa pushf sbbl xchg fs sbb mov jae pusha popa sub aas xlat hlt add mov mov cmp fildll and insb iret jbe sti daa loope std adc in add add jl jmp cmp cmp add cmp fwait cmpsb sub jl add es inc out jmp add sub xor aaa pop mov gs and sub std jnp add add or sub sub ds jo push add jmp cmp and (bad) or add lret daa pop pop imull loope outsb gs jb imul fidivr je ss gs bound arpl xor aas xor pop data16 push mov insb and fs aaa jo push cs arpl insb pop les fucomp mov add out in add xor (bad) xor enter pop xlat jge mov mov or sti adc pop mov cmpsb jmp sbb pusha subps pop lcall dec inc inc cwtl scas (bad) out cmp xor xor (bad) xor cmp test lcall add or outsb negl cld add out mov hlt pop lcall out call int3 xlat jne imul out scas mov jne out fwait out jg arpl jmp scas in repz jmp and lret in mov cmpsb jmp in xchg in jnp outsl in in imul fwait outsl call rolb in in movsb pop mov push xchg jae scas imul test add and imul jmp ljmp ljmp ss fdivrs ljmp add dec shlb add dec jo add xchg subb outsl imul stos (bad) jg dec outsl outsl imul jb jbe insb gs outsb mov outsl adc push jae es pop fidiv lock gs jp dec gs or or mov inc movhps test neg (bad) sub add add jb test idiv mov jo popa je jle cmovae jb jnp sbb push imul adc fs gs fnstsw insl sub outsb fs gs jne arpl add nop push outsl outsl insb push xor popa jo push loope add push gs imul add loopne cltd stos dec dec add sahf or ss mov xchg std jg sbb push jns je insl push imul cltd or jnp daa xor pop insb adc push outsb push gs mov addr16 and cld pusha pop in dec outsl jbe cmp xor xor jb sahf int3 add dec gs jae roll in dec clc fstl jne outsl insb fs loop and jo je cwtl popa pop loopne mov outsl icebp in into add or or push jne ja insb inc into add adc outsb add add fisttpll stos dec outsb in gs subb dec add add xor xor pop sbb imul dec inc push inc inc inc inc inc jae inc inc inc aad adc pop or xchg mov pop sub xor cmp xor inc add sbb inc pop add mov stos aas mov ss roll aaa rolb cmp cmp cmp push or shl sbbl or jb pshufw add sbb test cmp sbb or push push sbb sub lsl pop sbb sbbl xor adc pop stc pop pop cwtl add int3 inc pop cmpl jo sbb pop sub and mov xchg and les pop decl lcall add xor or add push faddl dec in cmp add aaa mov out in xor jg (bad) decl stos dec outsl jp insb insb popa das xor xor sub insl jo sar aam imul dec inc and xor sub inc arpl out call popa outsb packuswb and sub call inc outsb arpl inc cmp push pop sbb insb outsb add push add add and orb xor inc cs gs outsl jg clc jle and and xchg cs insb gs push xor xor inc fist fmuls stc sub add sub add icebp mov push gs inc jne insb add add mov sub arpl cmpsl and insb add je dec push gs bound lret fnop (bad) pop shll fs gs inc push add ja hlt dec dec push pop fs inc push inc jo jae jbe pop dec imul (bad) ljmp je push push pop push jb gs gs sub jne add add (bad) out popa jae arpl inc push push inc push inc or dec bound cs jae add pushl inc call dec pop add outsb add and jmp push push dec inc push inc push dec xor aaa adc ljmp add (bad) mov insl scas add das sub fs inc jp jns imul je xor mov dec jbe push xor lret jmp je and es and jmp and fs je imul dec pop add pop mov stc adc (bad) imul adc fstpt js jne xor aas dec popa xor fsubs pop xor ss jle xor ja and add cmp inc out add adc cld sbbb mov sti inc add sti call adc cmp enter rolb dec pop and incl adc push aaa add sarb cmp sbb test test paddb (bad) jnp push ds cld and dec push add sub add aam mov (bad) cld out jnp mov cld jmp pop pop std popl nop pop add loopne add and sbb add add pop push in jae adc pop sldt sub fnstenv xor rcll push add pop mov xchg pop add es fadds std sub std sar ret and sbb test dec xchg add lea add addr16 xchg outsl mov and add xor pop cltd stos das sbb scas push cmp aas int3 push lods pop dec pop or das pop sahf popa cmpsl insb adc fdivrs pop pop pop in xchg or push daa pop sbb aas add pop sub rorb in xchg sub outsb mov or (bad) and sahf xlat xchg mov es xchg sbb rcrb or inc out mov (bad) jg test mov xchg and mov add sbb sub sub mov stos or enter (bad) dec lods mov (bad) mov out xchg xchg mov std pop addr16 in pop add call xchg cs inc push bound pop popa cld aad push jl jae fs sbb dec adc sbb jne push or mov mov hlt add cmp jmp cmp mov ret sbb jne jmp add or sub iret sbb pop adc int3 sbb sbb test sbb or sbb pop out adc sub cmc adc repz ljmp mov ds cmovno inc pop (bad) icebp fsubl xor pop fs pop icebp pop out pop pop pop jnp mov xor nop sub xor int3 negl das sub push lock pop (bad) paddusb mov push xor and sbb mov add cmpsl pop pop push clc fsub ds into nop pop pop sbb push out pusha adc add push add je sub and pop add int bound add sub add add fs xchg ret pop add lock (bad) incb adc add add iret pusha (bad) jns add jge pop cltd cmpsb fild fnstsw push rorl sbbl inc or test shll insb mov (bad) sub mov cmc mov iret mov in call or add fdivrs xor push ficompl and pop fisubrl xor incl mov add rcr fsubp stc add xor mov repz aad add imul imul outsb add aad pop repnz lcall add pop mov dec aad pop dec add aad pop xor sub andl mov push aam aam aam fsubr dec testl aam aam pop test in into dec cwtl sub xlat aam aam into insl cmp pop nop add xchg jae call jg lods aam adc loop scas aam rcrl in add rcll mov sti (bad) not repz fmull (bad) lods pop jbe pushf pop repz jmp mov rcr das mov rcrl iret (bad) not mov sar add rclb rcl inc or scas rcrb out add add cmp cwtl mov sbb inc ja or outsl jmp call add lcall ljmp in add mov pushf sub dec or mov js in push add pusha sub (bad) jae pop adc jnp adc add cmp outsb outsw mov cwtl xor mov or addb popa ss fmul fisttpl pop es fiadd and mov psadbw mov pop pop sub cvtpi2ps sbb sbb dec push (bad) movl add sub add das fs jp xor stos mov stos adc (bad) or add sti dec int inc inc push and test add add mov sysret add (bad) jmp inc add pop nop add add add jmp add add (bad) (bad) mov mov int mov push push jb addr16 insl (bad) (bad) (bad) jmp arpl outsb outsl je bound jb outsb and and and fs mov out add sbb pusha ja,pt add jo inc popa jns mov (bad) mov jmp and fwait outsl mov imul mov pop sbb ljmp arpl (bad) fild push inc add dec add add adc add jmp jmp and add add pusha or add lock mov mov add add add add iret popf add pop sbb pop jae lds add push cmp add add mov mov inc mov sahf xor pushf add das adc in pop mov lods repnz dec pop jae pop popa adc pop xor (bad) push cmp adc xor cmp cmp xor jae and loopne jb jb sbb idivb aaa enter add adc mov rorb xor xor add and (bad) sbb mov add push (bad) lcall or jecxz add (bad) call in and sub (bad) incl add xor mov or mov pushl std dec push push jne and test je push add (bad) fdivr cmp jg call cmp (bad) je lea push call jmp lea sti in inc movsb (bad) (bad) jmp pop pusha mov cmp je add mov jmp pop (bad) fcomip jg leave push xchg and dec push jno sti (bad) movsb mov (bad) (bad) call add push aaa pusha arpl push push imul jp mov xor (bad) (bad) (bad) jl xor adc or js lea mov mov (bad) (bad) (bad) call (bad) mov addr16 jmp call cmp jle push add or (bad) pushl idiv test jne sub sar lea jp loope lea test (bad) (bad) (bad) decl test push and push mov imul popl and cmp jne (bad) (bad) (bad) incl jo sbb fs and push inc sub pop loope push inc sub leave xor sub (bad) (bad) (bad) jle movl out pop and sub xor xor add les push inc js (bad) (bad) incl and or sahf and push add xor (bad) jmp cmp jne (bad) (bad) decl sbb jno xlat jo test mov rclb adc call push and cmp xchg mov cld ja fidiv push std push add (bad) (bad) inc or push mov and fistp push push mov push or xor push push sbb (bad) (bad) pushl arpl jae mov push push jnp sub xchg je or adc add sbb push push (bad) (bad) (bad) jmp out mov and cwtl or and aaa jbe or push and sbb sbb jae (bad) (bad) (bad) ljmp mov test fstp in add int3 add push pop scas cmpsl mov push (bad) (bad) (bad) incl pop push cli and sub mov std pop aas insb mov push sub (bad) lcall mov out jg (bad) (bad) sub sbb push mov call or cmp decb (bad) (bad) (bad) inc push mov sub fsubr xchg sub mov lea cli fstl (bad) mov in cld (bad) incl leave jne popf (bad) in push mov adc (bad) (bad) (bad) call (bad) ja lea push rep fildl add pop mov (bad) (bad) dec pop shrd sub ja std adc push movl mov or add decl pop test jne mov loop add mov push ja lea (bad) (bad) decl mov lea push add add call lea push lea xor ja cs mov jmp decb sbb sbb pop add xor pop in push (bad) (bad) (bad) (bad) call test mov incb inc pop sub cmp jb lcall test (bad) (bad) dec je xor mov mov mov cmp sub je js cmp (bad) (bad) (bad) pushl push push push inc push mov push cmp je push (bad) (bad) out inc push (bad) ljmp or add call mov test je adc and push push fadds add (bad) (bad) jmp out js insl test dec xchg xor lock sub push js sbb (bad) (bad) (bad) (bad) cmp fldl2t add push loop xor clc fnsave xor and (bad) insb push push push aas cld (bad) (bad) (bad) (bad) mov inc cld push add (bad) pop pop xor add mov xor mov sbb push (bad) (bad) (bad) ljmp lea push push test push nop inc clc pop (bad) xor ret or dec int3 inc add xchg (bad) (bad) ljmp mov in lods add fucomip xchg cwtl mov js (bad) push mov (bad) (bad) push mov cmp ret in call push pop xor int sub push (bad) (bad) (bad) call (bad) out (bad) call mov into pop pop inc sub cmpsl mov dec cli pop push inc (bad) (bad) (bad) call mov add lea (bad) in (bad) push movsl push into or add (bad) (bad) (bad) lcall inc sub aam xchg out or pop push in push push es xorl out hlt pop cmp (bad) incl adc sbb andl push pusha sbb std sbb hlt lea call jo or decl shr push lea push mov (bad) (bad) jmp out pop bound lea fnsave push push jp les add or (bad) (bad) ljmp clc (bad) sbb daa xchg xor lea push jmp lea out (bad) (bad) (bad) incl les inc jl pusha shll lea fxch or (bad) into repz pop idiv (bad) (bad) call pop rcrb pop dec adc rcr mov out arpl mov les (bad) call jns lea mov mov push (bad) mov xor (bad) (bad) (bad) fisttpl call clc ret adc cmp pop xor and out sub (bad) (bad) (bad) jnp mov nop mov add pop aaa (bad) mov (bad) ds (bad) (bad) (bad) fnstsw popf test mov or js out je mov (bad) jnp push call cmp (bad) (bad) inc je push call jno (bad) push xchg adc dec lea lea or int3 (bad) (bad) (bad) call sub out stc in sbb push push push sarb jne (bad) (bad) incl (bad) sti mov push push mov call mov into ds (bad) jmp lea dec in lea call inc test dec and fmull test or (bad) (bad) (bad) (bad) in xchg in cmc cmp mov fdivl divl test (bad) neg fbstp arpl xchg sbb xchg jge push mov movsl scas mov jbe sub dec test mov (bad) (bad) (bad) (bad) incl jge dec xorl int3 add jae lahf jne pop mov push lea (bad) call insb and sbb cmp lret je xchg adc popf sahf push push (bad) (bad) (bad) decl adc jp push and mov mov lea mov (bad) fwait cmp (bad) (bad) lcall cld outsb out mov mov add rcr test test loope ret (bad) (bad) (bad) (bad) fistp push ja and fucom and push push les mov xchg cwtl (bad) jg jmp lea mov adc mov add leave mov (bad) (bad) decl pop mov inc or das sub mov adc arpl std mov (bad) (bad) inc les call mov out loop pop cmp mov and int (bad) (bad) pushl rorb add cmp jle addl movl je lret inc lea push inc xor xor repnz push (bad) push xor enter (bad) decl fadds out lock ds cmpsb neg jnp lock lea xchg testb jp inc add push es dec mov (bad) outsl negl test dec mov push (bad) (bad) (bad) decl inc or and std mov jnp jnp mov aad (bad) (bad) (bad) decl inc adc (bad) adc daa or sub das pop jnp xor cmp call (bad) (bad) lcall fdivl lahf fwait dec jb adc push popf pop pop stos aaa shr mov add or (bad) incl repz bt push jl or cmp in outsb cli mov (bad) (bad) jp add pop xor and jo out fstp unpcklps or and jmp jle sti decb incl add fwait and pop test jns sti aam out or fucomp iret push pop test js sbb (bad) (bad) push or push sbb pop dec or adc jge insl sub cmp (bad) (bad) inc jne bound out jle ljmp sahf pushf jne and sbb cmp (bad) (bad) (bad) pushl or and inc cld jl jbe (bad) and push in dec xor es ja mov (bad) call adc ret jmp cmp jne adc adcl clc pop pop (bad) (bad) (bad) decl xchg xor fs (bad) (bad) aam inc je push fstl sbb (bad) (bad) (bad) call mov out (bad) incb orl jmp adc push xor push push minps jle fwait clc call pop xor inc or sbbl mov mov mov (bad) (bad) decl sbb divb cmp fwait and test fiaddl lock cmp (bad) (bad) (bad) pushl or add mov subb jge in pushf sti in je push adc (bad) (bad) (bad) (bad) clc out insl test incl mov fsubrl and push call das (bad) (bad) (bad) (bad) sti jmp popa push push adc imulb jne dec xchg fimul in je sub aas or jg (bad) (bad) jmp in sbb sbb push xchg gs loope (bad) (bad) (bad) ljmp add jge add cwtl add decb mov mov push vmread (bad) (bad) (bad) jmp sbb xor sub inc mov pushf cmp jo dec ss cmp mov (bad) std mov sub mov pushf pop data16 pushl and data16 adc (bad) (bad) mov data16 out fistpll inc add mov pop dec lea (bad) (bad) (bad) lcall mov (bad) and les add pushf dec and add iret rcr ja cmpsb add sbb sbb jge adc (bad) (bad) (bad) decl add xor mov jecxz inc and mov xor jg mov jne and (bad) (bad) (bad) lcall fisubr sbb into pusha mov ret je in pusha aaa pushf ret pop mov (bad) arpl or movsb (bad) (bad) (bad) decl roll test lcall cmp je push sub (bad) (bad) ljmp add fistp je pop pusha lods adcl (bad) mov lods (bad) add stc cltd and sub jne movl andl xor inc mov (bad) (bad) call jle movb jno movb lock shrb into jle cmp (bad) lcall pushl mov xor mov fucomp cmp push or (bad) (bad) (bad) pushl cmp sbb es xor adc in arpl jbe pop and or (bad) (bad) call call pop out nop or aas nop push sbb cs fisttp dec lcall (bad) (bad) cmp sbb ficomp fimull jae fdivl imulb pop imul pushl mov into xchg or or cmp loopne loopne inc enter or mov (bad) (bad) (bad) (bad) fisttpll rorb xor inc sub or push mov push and inc sub cli (bad) ljmp sbb and cmpsb pop and fs mov sub ret (bad) (bad) mov decl cmp je xchg jae cmp loope jnp cmp faddl mov (bad) (bad) (bad) (bad) mov shll je cmp je aas add mov xchg loopne or aas add sub (bad) jmp icebp adc (bad) cmp mov or and je cmpl (bad) (bad) (bad) (bad) frstor jne jne mov (bad) icebp adc add rorb sub jmp pop sbb add jae jae popa push nop jmp mov lret (bad) (bad) sbb fcmovbe jne sub pop mov jecxz enter addr16 push (bad) (bad) (bad) jmp push fstpl not and test call ficomp divb test push (bad) (bad) jmp je or fucomip mov xchg pusha movsb and lods jmp cmp adc jmp iret hlt cwtl cmp shll rcl pusha mul mov mov jbe (bad) (bad) call add mov jae lods sbb or sti fcompl push ds (bad) (bad) (bad) call push arpl and pop call call and and xor (bad) (bad) jmp aam sbb fsubrp clc popa lock xor pop pop or add adc mov mov (bad) movsb cmp inc xor dec pop daa cmp cs xor and sbb sub cli (bad) (bad) (bad) fimul cmp add rorb sbb (bad) (bad) (bad) cmp lock sbb in mov pop inc jns or add xor clc (bad) (bad) (bad) incl sti iret dec decl xchg xchg sub inc or cltd or dec test fist (bad) (bad) (bad) jmp or adc dec cmp pop or scas call mov out mov and (bad) (bad) ljmp shll push jg outsl out adc or inc and (bad) (bad) pushl jmp incl mov jmp xchg xor std (bad) (bad) cmp call cmpl jb inc or test add test (bad) (bad) (bad) lcall int3 lret cmp test pop cmp into push mov pop sbb push push push jg (bad) (bad) (bad) pushl out and adc add mov clc cmp jae mov (bad) std pop cmp cmp (bad) inc add (bad) jb addr16 pop cmpsb (bad) fsubrp pop je inc test xor or mov (bad) cmp aam rcrb and jl mov cmp or push rol jo and je (bad) (bad) (bad) (bad) faddp lcall mov xchg add test cli sti test dec test (bad) mov (bad) (bad) (bad) decl je push jnp (bad) ffree adc mov mov mov sub or sti jb (bad) (bad) (bad) ljmp jb mov je or pushl and mov (bad) mov call cmp adc inc (bad) (bad) (bad) (bad) cmp (bad) in cli (bad) jne cmp je inc pop mov pop shr stos (bad) aaa mov movl add add jae std pop sbb pop mov jmp movl and (bad) (bad) (bad) jge js loopne cmpsl inc sub sbb cmpl jne movl pushf mov (bad) jle mov mov ret adc xchg dec pop popa push add cmpsb aad push add stos aas (bad) (bad) (bad) (bad) fcmovne js pop das cmp and (bad) mov pop inc and adc dec push lea lahf jp (bad) (bad) (bad) cld xor and pop xor inc out ret (bad) jne xchg imul rorl cmpsl sar mov add orl js mov incl or (bad) (bad) (bad) incl or inc and mov (bad) (bad) std jg cmpsl rolb add int push (bad) (bad) (bad) jmp dec out test idiv sti ja mov cmp je rolb cld add mov (bad) sti jg decl jl mov nop mov add icebp (bad) lahf jns cmp (bad) pushl incl sti mov xor cmp jae xchg andl andb andl out xor (bad) (bad) incl xchg lahf add add icebp outsb add xchg cmp jb mov push ja jg (bad) (bad) incl add fstpt mov mov nop je cmpl (bad) (bad) clc (bad) je mov mov (bad) (bad) (bad) push roll dec test jne xor test mov and mov sar shl add (bad) (bad) pushl fcos decl mov mov push lea xor (bad) (bad) (bad) push pop mov inc clc add incl cmp jl xor mov inc (bad) stc faddp sbb mov push orb jmp repz inc add test jne push pop jmp (bad) (bad) (bad) decl sbb mov sbb pushl add xor xor (bad) (bad) incl out stos aas inc inc jmp out add or je incl jmp sbb push cltd inc cmp (bad) decl jl cmp dec jns pop leave dec jmp push xor xchg (bad) (bad) (bad) inc or mov (bad) and cld (bad) fmuls pop add add (bad) (bad) push cmp jb pushl (bad) jns daa add pop xchg fwait test jl pop pop ret inc cmp (bad) ljmp jg imul and pop lcall aaa xchg divb lea add cmp das (bad) (bad) cld pop (bad) (bad) (bad) decl push test jne push inc repnz clc jg cld ljmp test (bad) (bad) (bad) (bad) (bad) fldpi xor cmpb pop lea je push pop cli adc aas push lods cmp pop jg (bad) (bad) (bad) jmp clc inc xchg add cmpb jne adc mov jns mov and mov out cmp mov (bad) (bad) (bad) inc mov xor pop pop mov sahf sti out xor cs jmp xor push add jmp out loop jae fistl rclb popf push sarl (bad) out (bad) (bad) (bad) decl add or pop push or adc (bad) mov and xor cmp mov (bad) (bad) jmp sete inc adc cmp pop test je mov aas mov decl or push movzbl push jmp cmp pop into std incl and mov incl mov inc (bad) (bad) (bad) jmp jl (bad) incl cld add cmp je cmp jne dec add inc incl (bad) (bad) out clc (bad) cmp push jbe jmp and or ja mov inc jmp dec (bad) (bad) (bad) (bad) jmp sbb out (bad) decl adc add fildl leave jmp inc inc cmpb je lods es (bad) (bad) (bad) (bad) (bad) mov data16 lea cmpb jne mov jmp xor xor mov popf jae (bad) (bad) (bad) (bad) jmp mov fnstsw leave jne lret (bad) je cmp sbb out jne (bad) dec cmp je (bad) (bad) incl cmp sub cltd jnp and or incl or loope pusha jmp inc (bad) (bad) (bad) (bad) incl ret mov or mov movb xor dec adc mov (bad) call incl add leave sub fistl jae int3 andl (bad) (bad) push mov mov ret fcoml (bad) fnstsw test or pop fstpt sbb (bad) (bad) incl mov mov scas (bad) cld lea push push push lea mov int3 or std (bad) decl aas (bad) (bad) (bad) pushl mov cmp jae mov shl lea cmp jb cmpl out cmp (bad) (bad) (bad) pushl add in (bad) push push inc in sahf je pusha aas bound xor pop mov push (bad) (bad) (bad) call cmp jne pusha outsl add cmp je adc xor pop (bad) inc call (bad) (bad) jmp push push push sub push sar inc push push push push mov (bad) mov jae je mov cmp (bad) (bad) (bad) pushl push sbb in (bad) pushl push pushl and cld sbb in push or pushf (bad) (bad) (bad) (bad) mov or pop xchg push dec and pop das jl push push fadds and and std pop cld push push push xor cmp sbb rorl decl cli imul mov loope (bad) ffree and mov mov (bad) jmp (bad) fdivr or push push push rclb lds gs call (bad) call loope lock nop add ret mov fs add jo xchg (bad) mov pop (bad) (bad) (bad) dec sub push mov push cmpsl pushl lock xor nop add push movb movl (bad) (bad) clc jg lea ret or iret xor cmp add add or inc or inc or mov inc add jne decl cld mov (bad) (bad) lcall mov mov cmp je lea lea mov lea in xchg mov (bad) (bad) incl mov cmpsl dec adc xlat push ds je fisttpll js jg jno fdivs into cmpb (bad) (bad) incl je lea dec (bad) je push cmp xchg inc hlt ffree mov aas lock (bad) (bad) (bad) dec mov cmpl jne xchg cmpsl mov je icebp aaa jge cmpsl mov cmp add inc (bad) (bad) (bad) decl push jg dec incl cmpsl mov les xchg adc aas push mov cmp loopne loope je (bad) (bad) call test mov aaa std add ja mov mov xchg lock cltd incb (bad) loopne add call dec dec sub jge push lret imul and popl push movq (bad) (bad) jg dec dec std out (bad) mov push cmp je add lea jb add (bad) pushl or jae sbb xor int mov test jne loopne or jno cli add (bad) (bad) (bad) decl jecxz popa ljmp lahf adc cltd out mov mov mov pushl dec add stc or test push push pop mov andl add cmp (bad) jl mov (bad) (bad) mov add jne movl ficomp cmpl pop ffreep (bad) (bad) (bad) call cmp dec cmp popa imul ds divb das cs xchg jp jae ja outsl cmp jmp cmp mov jge mov push (bad) (bad) (bad) (bad) call pop mov jmp loopne or pusha pop sbb add jl cli test jne pushl (bad) (bad) (bad) call sub pop ret mov imul decl dec out mov mov je test je notl inc jg add gs add (bad) jg add clc xor xor addb xor js stc (bad) (bad) (bad) (bad) push mov xor xor cmp jne mov test jne mov or pop (bad) (bad) (bad) (bad) incl add loopne or or pop add pop fsubl or add clc sti lcall (bad) (bad) (bad) lcall add nop push add lea push mov aaa adc mov pushl add xchg (bad) incl jbe cli cmp jl (bad) xchg andl std (bad) aaa clc jmp mov push pop pusha fcoms nop mov (bad) (bad) (bad) lcall lret ds adc or fdivr cs jns es jl (bad) (bad) jg jo fsubrl leave (bad) xlat icebp pop mov push or jne push call sbbl sbb pop jb push clc (bad) (bad) pushl (bad) repz add ja add decl (bad) (bad) (bad) (bad) jge ja,pt jbe clc mov sbb cmp push push cmp aas pop mov or xor cmp je mov jmp push incl push mov sti js lret movl sbb cmp (bad) (bad) call or mov mov cmp ss sub jne or pop jne pushl pop int3 rclb xor pop (bad) (bad) (bad) jmp jmp mov jmp es lret push mov dec push (bad) flds call aas xchg faddp and push xor cmp ss add pop daa pop pusha sbb (bad) (bad) cmp fwait (bad) mov push addb inc cmp ss cmp fs leave (bad) (bad) (bad) lcall rorb loopne lea movl mov add cmpl std fucomip (bad) (bad) (bad) decl mov inc add decl jne aam pop int3 rcrb push call add hlt test ja (bad) decl test mov mov and (bad) mov (bad) (bad) (bad) pushl fistl outsl cmp je mov xor pop cmp jne mov fdivrp (bad) (bad) incl jg jns mov jle jg,pn jnp xor lds pushl dec sub push pop mov fidiv xchg inc pop inc mov out pop cmp add push jns xchg adc addb in (bad) mov adc mov sbb add mov je cmp (bad) (bad) (bad) (bad) faddp mov aas dec pushl je dec ret fstpt mov test fnstcw enter call pop cld je mov push faddl ljmp adc or cmp (bad) (bad) (bad) fbld cmp je push mov jecxz jle xor je pop jne fstl (bad) incl gs jg sub jmp xchg xorl test inc mov sbb (bad) (bad) (bad) dec (bad) mov jo and sbb jo test add add (bad) fcomip jno mov jg xchg mov sub xchg cmp mov (bad) ljmp adc mov outsl push sub (bad) call call je (bad) (bad) incl xor jl jbe ret mov adc cld scas jle adc lock inc (bad) (bad) ffreep sbb mov xor movzwl mov mov mov mov sar (bad) jmp adc rorl cmp stos stos mov into mov cmp inc (bad) (bad) (bad) decl (bad) lea add pusha loopne mov adc idivl sbb in sbb idiv (bad) (bad) call lea push (bad) fcom cmp jbe cmc or aaa movl test (bad) (bad) incl mov cld mov movb xor enter loopne cli (bad) (bad) (bad) incl cmp ja sub inc push lea inc (bad) cmp add lcall (bad) (bad) sub mov lea jnp push push (bad) into std push enter (bad) mov pop and push push mov orb jbe adc add and orl cld push (bad) sti jo aaa mov sti je orb (bad) sbb (bad) (bad) incl test je adc dec (bad) bound mov pushf or mov (bad) mov inc movl js mov xor sar (bad) (bad) decl sbb orb idiv sbb jmp cmp ja push and (bad) decl add inc cmp jb sahf inc cld movb mov (bad) (bad) (bad) jmp xor call je cmpl mov pop mov xchg mov add mov cmp (bad) (bad) jmp push dec and xchg call je lcall mov es into pop pop xchg call (bad) (bad) (bad) jns jne clc gs cltd pop sub jmp sbb pop in lock xor icebp movb (bad) (bad) (bad) pushl in adc inc or dec insb mov mov mov mov pop xchg mov (bad) out ljmp dec jo mov movsl imul out add pushf push pop mov hlt (bad) (bad) (bad) (bad) ja dec or inc mov adc jne orl stos jg out fs (bad) (bad) fucomip or add (bad) pop pop ret outsb ret in (bad) push and jbe sub (bad) (bad) (bad) call mov jne (bad) shlb out add adc pop cld je lret jmp sti mov (bad) (bad) (bad) std jmp cmp jne and jmp cmp jne lcall test les pop (bad) (bad) (bad) decl pop cld andl mov mov sub cmp stos or scas clc decl test insb mov xor mov cmp jne mov sub das ret (bad) (bad) (bad) mov jmp lock in (bad) xor idivl out (bad) call incl add test (bad) jmp addr16 mov jb adcl inc call push add popa or aaa sub jp lea push cmp mov ja dec decl call incl pop shrl out fwait cli ja mov test je inc decl mov xor ljmp cmp inc mov imul mov lea or jmp mov jmp (bad) (bad) ljmp movzbl movzbl jmp loopne ja orl cmp clc jbe mov (bad) (bad) (bad) incl lds adcb incl push adcl imul jge add jb mov fwait movl lods fcomip sub push mov lea lea pop mov mov (bad) (bad) (bad) incl add (bad) out sti dec jne mov and mov add jbe pop jg (bad) (bad) inc fwait (bad) jle add test mov add jne ja mov cmp push push mov (bad) (bad) call jmp mov lahf adc lock xor cmpsl out stos stos cmpsb cmp or mov call adc jge jnp out ja and dec ret das clc mov (bad) (bad) (bad) decl pushl mov push mov cmp je push mov adc (bad) lcall jbe fadds adc mov mov repz add movsl andl push out call (bad) (bad) incl aas xor test stos ss cmpsl lods adc (bad) jbe jg jns (bad) (bad) (bad) pushl jo jne call faddl jne or add (bad) (bad) jmp pop lock mov mov rol fdivrp jg add dec inc (bad) (bad) (bad) call mov call decb cmp mov mov jmp (bad) call rolb jge sbb sbb out sahf clc xchg call xchg lock add adc xchg (bad) (bad) (bad) (bad) call push call mov xor jmp lods push jmp jmp paddd cmp nop popf sti out ds push (bad) jmp andl mov adc cmp (bad) (bad) inc test jne push adc mov test push pop xchg mov xchg leave cmp cwtl fiaddl stc sub in cmp ja push (bad) (bad) (bad) lcall sbb pushl in ret add pop cmp sbb and add pop mov mov (bad) (bad) dec test jne lods lcall std fwait call ja push push (bad) adc ljmp loopne jmp inc push sbb sbb out cli popa sbb xchg push cmpsb jne push (bad) (bad) decl cmp out loop jp aaa mov test add push dec pop jmp and dec std inc popf aad jmp sbb incl loope test je push xor pop (bad) (bad) (bad) push icebp cmp jae dec dec mov scas dec or mov cmp cli mov cmp (bad) (bad) jmp ja push push xchg subps mov cmp mov call inc adc nop ret ljmp or add adc jne xor (bad) (bad) lcall scas or mov leave lret es (bad) dec push jmp adc inc push (bad) (bad) (bad) call and jle mov out repz loopne lret psubq lds adc jmp mov (bad) ljmp push add xor and jle aas jge cmp pop mov push int3 sar (bad) (bad) (bad) jmp xor inc cmp outsb dec push outsb (bad) rorl jbe xor and repz arpl (bad) jmp sub xor nop xor inc or bound pmaxub (bad) (bad) (bad) push imul add add cmp jb imul add pop cmp jae push lea mov lcall es mov cmp out test pop jl jg (bad) (bad) (bad) pushl ret push pop sub je add or sub into cld fdivs les (bad) dec jnp ljmp sub pushl mov es pop lea mov sbb push mov sub je sub je dec je sbb div mov (bad) (bad) (bad) lcall xor push or cmp or xor xor inc sbb ja pusha (bad) (bad) (bad) incl cli out outsl cli loopne je loopne pop push dec sbb pushl (bad) (bad) dec leave sahf dec cld cmp je cmp je cmp sti (bad) sti add sbb aam inc (bad) (bad) (bad) jmp jne mov mov movl rclb dec nop mov or add (bad) (bad) (bad) cmp cmp jge mov push cmc push loop mov mov incl jmp adc (bad) incl xor ja push call pop jmp dec adc sbb (bad) (bad) decl insb jnp pop in xchg sub add inc rorb xchg xor add (bad) (bad) (bad) push add add in push inc mov xchg test xor sti (bad) fucomp call pop andl jle push lea icebp incb cmpsl inc sub test and es lea dec sub (bad) (bad) jmp sub stc cld out outsb pop mov aam mov mov mov push cld data16 (bad) (bad) decl mov shrb aas adc mov lea mov sbb (bad) (bad) decl mov fmull dec or lea adc scas mov (bad) cmp or cwtl push mov xchg (bad) (bad) jne sbb adc push (bad) popf or jne sbb (bad) mov mov push push aaa adc xchg (bad) testb inc outsb (bad) (bad) (bad) pushl fbstp movb jmp pushl cli pushl and data16 inc int3 fadds (bad) (bad) ljmp les dec cltd push jbe mov (bad) call nop aam or je adc push push (bad) or jg (bad) jmp pusha test test push test push cld ja (bad) stos lock jb (bad) lcall clc jg (bad) sub lea cmp jb mov mulps ja cli cmp jae mov decl add ret jb push decl pop inc pop jb push pop push decl jmp (bad) (bad) ljmp sar push lea (bad) (bad) mov xchg or mov xlat mov add push call (bad) (bad) (bad) (bad) jl inc or jb daa rcr push push fsubrs aas mov dec aas sub les sbb (bad) (bad) lcall ret andl pop or and adc aad push aaa fild cmp push sub (bad) pushl or imul cmp cmc inc mov pop popa gs (bad) (bad) mov iret jo push pushf mov cmp jb std cmp push mov mov (bad) (bad) incl cmp mov inc cmp roll pop mov mov dec fcomip (bad) lcall sete mov pop jg mov repnz add mov adc sbb call movzwl xor push lea sbb or stc jb (bad) (bad) decl mov or fnstcw sti jb inc add cmp jb (bad) mov out addr16 add (bad) (bad) (bad) (bad) call outsl mov add mov push sub or std fs clc xor push lea add jmp mov push xlat xor cmp push and fsts jl fidiv cli (bad) decl push mov call loopne stos ret fcoml ds add (bad) (bad) decl xor addl sar xor (bad) mov sbb cmp incl outsb (bad) (bad) (bad) pushl or clc push jb xor dec add je sbb in cld push ficoml mov or add aaa cmc pop mov je mov jle and clc fdivrp (bad) (bad) incl adc nop fwait xor out add jg sti mov ss outsl lods push mov cmpl aam push inc (bad) negb mov xchg jbe mov (bad) call xchg mov sti add mov mov jl pop aaa out fadds inc sbb xchg sti fcomip in cmp sub mov sub push sar inc into cmc add je fnstenv (bad) (bad) (bad) decl add mov push xchg dec bound pushl repnz (bad) (bad) (bad) incl xor sub out out imul pop push add mov (bad) jg enter cmp je (bad) (bad) incl rorb or lock cmp je inc cmp push lea (bad) decl jg push mov cs pop adc push pop mov or jp (bad) (bad) (bad) call aam pop mov jne push enter scas cmp mov push (bad) (bad) (bad) call add jle es push pop data16 decl std aaa cwtl mov jmp ljmp cmp loop repnz mov mov out push ja je dec jne xor (bad) (bad) call movb xor jg pop cmc mov jmp cmp add rcrl or clc (bad) jmp add xor call add jnp (bad) (bad) (bad) (bad) (bad) jle rolb add test je mov aaa (bad) (bad) cld (bad) (bad) pushl xor add add pushl int inc lcall sub (bad) (bad) inc ret lea or cld mov sub or (bad) jg sbb mov or dec hlt mov (bad) (bad) (bad) incl fwait mov test push mov push sbb add and xor add (bad) (bad) (bad) call cld cmpb je xor inc add sub in add cld xor (bad) (bad) jmp mov clc frstor xchg push push push push push das ds ror hlt aas imul fs (bad) (bad) decl mov sub jo cmp je (bad) (bad) (bad) fild cmp je (bad) (bad) incl bnd lea lea mov mov cmpl jne (bad) or inc sub (bad) (bad) incl ds add jmp fs add add sarl push add inc add push (bad) (bad) (bad) (bad) jge test or mov push mov pushl pushl pushl mov cmp ja pop and mov mov lock fcos sub (bad) (bad) (bad) pushl pushl pushl sub add push push push push mov push sbb xor (bad) xor (bad) pop xchg (bad) (bad) (bad) (bad) (bad) jge decb rorl aam fistp (bad) jmp push mov and add (bad) (bad) (bad) cmp test or pop adc mov or (bad) mov (bad) ljmp clc arpl jbe mov outsl pop (bad) std push out cmp (bad) incl push jns mov cs ss mov pop sub addl add incl daa idivb add pushl adc and es addr16 (bad) (bad) (bad) jge push setg mov (bad) and xor lahf or pop je xor (bad) (bad) (bad) jmp js jl jae xor mov cmp pushl lret push mov mov (bad) (bad) decl cwtl rorl scas ss mov mov adc dec push mov push sub sub decl pop adc mov inc mov movl pop ss gs xchg (bad) (bad) (bad) decl mov loop (bad) jb mov pusha fldenv dec hlt and or js sbb lds mov (bad) (bad) jmp adcb cwtl imul pop or pushl push jmp leave sbb add outsb idiv ss in lret adc rorl pop or dec inc adc (bad) (bad) decl dec or fnstenv pop subl std movsb and jbe pop (bad) (bad) (bad) decl adc mov orb or nop adc jp enter (bad) (bad) (bad) pushl pop out aam mov dec (bad) out mov xchg mov fadds adc lcall mov and and cmp mov cmp (bad) (bad) call les fs movb adc inc dec inc push fs dec rolb dec enter std aam and pop cmp (bad) (bad) call inc add imul add hlt jne cmp lods add inc (bad) (bad) lcall push mov cli add xor flds sub mov sbbl fwait out (bad) jmp enter add push adc and shr je repz ja mov stos pop or ljmp push add xchg jmp adc fstp add jne (bad) (bad) call pop ds adc add sbb cmp jle mov inc adc lret (bad) (bad) (bad) cmp into cmp jne or mov sub dec cmp call add inc sbb lcall jmp mov mov jecxz push popa xor sarb sub (bad) (bad) jg cmp xchg sar adc add ja or stos add and (bad) mov cmp (bad) out ljmp inc fwait jle int3 negl jb lea cmp push ja push jl les ret je movl int3 fs scas lcall movl (bad) (bad) (bad) decl mov cmp je push pushl jbe in aad jnp add jne jbe gs jg lock cli ja jnp push push and or (bad) cmp or mov jb dec adc inc and call inc clc jg sbb sbb test (bad) mov (bad) (bad) (bad) jge cmp jle mov ss ja (bad) mov (bad) stc sti je (bad) (bad) (bad) (bad) fildll jmp mov ja xchg sub pushl (bad) lock sahf mov push push (bad) (bad) (bad) (bad) cmp jne push push jmp pushl pushl aaa push and pop inc in lcall cmpsb pop (bad) ljmp aaa jne mov in xchg and imul xor shl rcrl pop jge and and or push sbb test pop or inc movb sub (bad) (bad) inc mov mov shll and xchg xchg adc sbb sbb outsl and jg cmp push (bad) (bad) (bad) (bad) (bad) (bad) jg xor loopne pop and mov test je lea push push pop ret push cltd ja push pop adc (bad) (bad) dec scas mov inc adc push adc add enter sub and pop or jmp inc repz test addl or and enter test adc js (bad) (bad) (bad) pushl mov fcomps dec pop in add add adc add sbb or sub test insl push (bad) mov adc mov add cmp jbe sbb (bad) (bad) (bad) push cmp jb sbb (bad) jg cmp and and cmp pop pop jne cs jg call or (bad) jne jne push inc (bad) incl rep jmp (bad) (bad) incl mov mov jb and add lds test add jmp (bad) (bad) incl dec xchg (bad) out ss dec (bad) dec push sbb mov mov mov mov fistpll add incl push mov add add pop int3 out dec (bad) lea sub add cmp (bad) (bad) (bad) call movb pop mov adc testl inc dec pusha dec sub (bad) (bad) lcall dec mov lret dec mov inc mov cmpsb sti in inc (bad) in call push lock (bad) (bad) push hlt hlt clc ret lcall add add add or push add out dec cmp (bad) (bad) ljmp sbb pop pop leave ret nop icebp or xor fcoms mov cwtl rcll sbb (bad) (bad) (bad) cld lea mulb jl andl es ja ja aas dec pushf mov neg imul dec xchg pushf cmp dec mov loopne mov lahf pop dec cld mov and mov (bad) (bad) (bad) incl adc pop dec mov cltd jle sub sub sbb (bad) (bad) ljmp nop daa (bad) (bad) cwtl jae int add mov (bad) push (bad) in mov xor add (bad) (bad) call dec pop ret xor xlat pop pusha add js xor (bad) mov xchg imul sbb (bad) xor rcll (bad) (bad) jg adc or or or fwait insl rcrb mov xchg fdivr (bad) (bad) jmp jae pop int3 add aaa jae cwtl adc decb fwait sbb pop (bad) (bad) (bad) call clc and sub add push dec mov loopne inc or push mov icebp adc (bad) (bad) (bad) ljmp or test mov jne lock xor mov cmpsl js je adc (bad) (bad) incl rorb cli sar cli add js push xor fdivrs jge test xlat nopl decl sub adc xor nop sti pushl mov pop test (bad) (bad) (bad) inc je cmp je and cmpsl xchg mov nop fadds cld mov (bad) ljmp mov dec fcoml or push (bad) mov call pop push testb jne orl add and jmp pop mov popf sti cmp je dec pop and in daa iret xlat or sbb (bad) pushl sbb pop aam outsb test ja in jne sbb (bad) xor (bad) mov add (bad) (bad) (bad) jmp adc (bad) push test je lret push ljmp lcall cmpsl push mov jmp mov cmp (bad) (bad) cmp je add dec mov hlt aad sub movzwl mov add data16 aad push je testl (bad) (bad) aas (bad) (bad) out call push mov push push test jne test jne cmp jne xchg (bad) (bad) ljmp adc pop pop ret imul pop fnsave loopne in mov mov jmp mov add aam ret int addr16 xchg mov daa jmp cmp and icebp sub movzwl mov subl push dec je jge testl add decl (bad) out (bad) incl cwtl sti (bad) decl mov push inc dec (bad) pop jmp jb cmp (bad) (bad) js sbb dec push int3 inc or inc or clc movsl xor xchg rolb decl (bad) pushl sub fisttp mov mov js es test dec aam mov out sub (bad) (bad) (bad) mov fildll add cmp jne sbb rolb popa fwait sub or (bad) (bad) pushl and mov movl mov push push push push mov fisttpll inc xor (bad) (bad) mov mov or adc dec cld pop sarl adc push sub xchg dec popf sbb roll xor rclb (bad) (bad) (bad) decl dec lret lds jns and and je cmpl (bad) ljmp je cli lcall sub sub mov (bad) jl jo clc mov (bad) (bad) cmp pop movl fadds mov mov or sar (bad) jmp decl add cmpl mov mov cmp jne incl sti ret push (bad) mov add fwait add or iret mov or or push (bad) lcall pop pop pop daa call ret data16 je (bad) out rclb roll xchg loop (bad) mov dec icebp call movdqa add add repz and inc push pusha (bad) (bad) (bad) pushl cmp rorb sar aaa mov shr je jmp out ljmp dec jg es adc loop je into mov add decl dec add jne ljmp (bad) pushl pop pop ret mov neg (bad) (bad) (bad) incl xor push mov arpl cmp dec jne shr dec add jne pop mov pushl push sub sar add sti push push lea sub and leave jbe mov add sbb or xor adc pop push mov ds pushl mov (bad) (bad) call and shr je jmp fwait mov sarb movq add outsl push outsl pop fsubrs pop (bad) (bad) (bad) (bad) fisttpl jg jg outsl data16 mov outsb outsl jbe jle and cmp fwait int outsl jg (bad) (bad) (bad) (bad) jg jo mov (bad) aaa std push fs jne and rol ljmp outsl jg lea (bad) (bad) (bad) decl out (bad) fwait js and roll mov mov lea lea dec jne mov (bad) (bad) inc lcall loopne je xor inc dec jne pop pop pop pop ret mov jl sub sub push mov (bad) (bad) inc and mov shr pop ds inc dec jne sbb int3 sbb fwait cli incl enter sar (bad) (bad) jmp enter add enter rcrl add std (bad) mov ret sub jmp (bad) (bad) (bad) dec jmp mov xor add in mov or pop (bad) (bad) incl xor sbbl scas daa sub sub sar (bad) (bad) jg fisttpll adc push jne sub movzwl cmp jb cmp ja out incl (bad) (bad) (bad) decl jmp mov movzwl push or cmpl es cmp je into (bad) (bad) (bad) (bad) std stos sti jmp movzwl lods push mov mov add push insb add xor mov (bad) (bad) (bad) (bad) sti jg (bad) xor int mov movzwl sub xchg pop push enter dec clc xor or cmp sub inc mov (bad) jne iret ret testl movsl xlat sbbb mov (bad) xor nop mov mov je (bad) je mov or (bad) lcall or and or imul add inc or test mov icebp jg imul mov xor dec adc xchg (bad) (bad) (bad) decl stc sbb sub dec mov or jae,pt inc push cmp rorb (bad) (bad) (bad) (bad) jg pushl sub mov add mov add and add rorb (bad) (bad) call push or sub add cld cmp sub mov mov mov push pushl testl pop pop scas sbb cmpsl lea leave jno popa sti pop push (bad) (bad) (bad) pushl lea leave ret sahf jecxz loopne push jae bound in pushl mov inc cld (bad) (bad) (bad) call inc or (bad) jne adc ja and sub dec or ror pop decl call push push push mov lods mov cld incl or je add bts jmp into (bad) (bad) lcall add push sbb add mov xor and mov jmp add test push jne mov cmp jne xor cmp jne or je (bad) (bad) lcall (bad) call jne adc cmp jne add add or jne mov (bad) (bad) (bad) (bad) ficom pushl nop sbb shl add ret test add inc out xor idiv (bad) (bad) inc add je xlat jge movsb mov pop into adc rcr pop sub mov add jle arpl mov fmuls icebp lea cmp and flds adc decl cmpw je inc mov (bad) ja cmp jb movsb in push push push mov or je push (bad) (bad) ljmp lret mov mov mov das (bad) out mov in pop je popf and (bad) (bad) (bad) jg out push cmp ja add loop out out (bad) or (bad) cmp jne mov xor clc ja leave (bad) (bad) (bad) (bad) cmp je mov neg mov pop sub add adc (bad) jne mov (bad) (bad) dec in and xor div mov adc out pop lock mull mov mov add jmp (bad) (bad) (bad) decl pop (bad) lcall and shr rcr shr rcr or jne div mov std out mov (bad) call inc and mul add jb cmp ja jb cmp ja jbe dec sub sbb (bad) (bad) (bad) decl or mov (bad) fadds mov mov cmp pop ret lahf fstp out add lcall jne (bad) iret ds mul and loope fs add sbb roll sbb add call xor add cltd add push popa inc (bad) mov int3 (bad) (bad) (bad) mov add dec add xor add out (bad) mov insb jae cmc (bad) (bad) pushl add push gs popa insb jne jle (bad) or insb insb outsl arpl inc outsl jb (bad) (bad) jg inc js je jb arpl jae add jae arpl outsl add gs add mov cltd insb sub (bad) test xlat (bad) (bad) (bad) (bad) jge sbb xchg or idivb add add pop nop and add xchg or (bad) mov cwtl add sub stos pushf sti push or pushf jmp decl mov add shrl (bad) sbb jmp add dec add adc lcall add das pop das cmpl cmp pop inc inc loope ja adc insl add (bad) (bad) (bad) pushl xorl jbe adc je out push xor push pop jo je and (bad) (bad) (bad) incl jne add dec dec or jae mov sub and orl (bad) incl popa or pop xlat insl mov or add or and (bad) jg (bad) fnstenv xchg add (bad) cmp jge out add jne subl mov xor (bad) (bad) (bad) jnp jnp push add jmp add push outsl je aaa push lods sbb andps (bad) (bad) (bad) incl movsb jmp jne jae mov scas mov imul rcrb dec aas outsb xor decl jo punpcklwd mov add pop pcmpeqw outsl aas (bad) fsub (bad) (bad) (bad) ljmp jne dec dec cmp cmp add jg fwait mov dec and and dec dec das (bad) (bad) (bad) jmp lock mov dec and inc arpl bound sti fs lock outsl jbe dec arpl (bad) (bad) pushl push gs (bad) insl clc xchg jne jne je jne inc dec jne ja std xchg add (bad) (bad) incl jb insb or jb push pop pop jnp jb popa jb popa outsb or pop add jnp jne add dec add insb add dec popa jns ljmp inc pop jb cmp dec popa outsb add (bad) (bad) call je jb sbb (bad) jle jb or jb or addr16 jnp outsb gs jne (bad) (bad) decl dec outsl outsb sbb push jne popa je inc jb add add add jle mov (bad) (bad) incl pop mov je imul aas adc jb pop inc rcrb pop imul mov and and aas sbb inc xor sbb mov pop (bad) (bad) (bad) incl xlat pop push push cmp fbstp add fstl imul dec and call cmpsb push mov and cmp rorl insl and cmp incl jno gs idivl test pop jb outsb xchg and push sub xchg xlat dec imul mov jae inc insb sub jecxz sbb daa jmp inc mov jae (bad) (bad) (bad) pushl repz outsb jae dec popf cmp jo push xor xor shll sbb (bad) (bad) pushl or pop out insl adc add cmp add and imul lcall add dec mov xchg addr16 clc dec add (bad) (bad) jnp gs xlat jne xor add add adc popw js ret pop outsb pmulhw push add inc (bad) (bad) (bad) ljmp loope outsb sti mov popa je jne pop and xor jle (bad) (bad) incl popa or fisttpll add mov out xor out outsb cmp mov jns mov and (bad) (bad) jmp (bad) cmp ja (bad) arpl out cmp in cmc out adc insb sbb addr16 (bad) (bad) (bad) jmp cmp push inc out icebp push ret inc pop daa push xchg xchg sub mov lahf (bad) (bad) (bad) ljmp mov loope and inc ss xor sbb mov aaa jno in dec mov (bad) (bad) (bad) incl cmp mov popa cmpsl insb push inc ss ret lods inc and bound jo dec add (bad) (bad) pushl xor aaa adc add mov dec pop fnstenv nop sbb dec (bad) (bad) (bad) lcall outsl xor loopne sti jbe jb mov adc pop in insb (bad) (bad) (bad) (bad) cmp adc test das pop (bad) pusha ljmp and or mov (bad) (bad) inc sub fldenv mov cmp lods sub outsl imul mov rcl iret outsl scas icebp fs incl idivb fsts sub imull adc xlat cmpsl popa pop jmp sub lahf (bad) (bad) (bad) incl loope scas insl jne push xchg push imul arpl add das loopne xor (bad) (bad) jmp cmc jmp inc and cmp or jge (bad) clc xchg je inc push (bad) (bad) incl pop popa push xorb addr16 xor aas push fwait inc clc pop setge pcmpeqb (bad) (bad) jmp rolb popa addr16 push xchg insl leave pop inc mov outsb jae push dec xor jge pop jge (bad) (bad) incl mov jb les das dec jo cmp cmp iret lds jmp sbb push iret (bad) (bad) (bad) (bad) call pop or sahf aam sbb add out insl mov push mov adc (bad) (bad) incl insb sarb mov pop pusha adc adc sbb sbb sbb sbb jns enter std lcall rcrb nop pop push mov adc js add (bad) (bad) call pop xor sbb hlt fmul outsb pop adc pcmpgtw dec mov popf jo (bad) outsl mov pop (bad) (bad) (bad) (bad) fnstsw cmp in and inc add add cmp push push psubusw stos mov cmp (bad) (bad) (bad) lcall lahf orl push cs or call addr16 popa fist pop xchg dec imul (bad) (bad) jmp loopne ja ds out (bad) faddl aas jb and add outsl fwait sbb mov pushl repz push add mov add mov add adc in test in add addl mov add das jnp inc (bad) add add add ret push aas add push and (bad) (bad) call push adc fwait add rorl xchg std pop (bad) add add mov (bad) jnp add adc (bad) decl add add pop push nop and ss and das in xchg mov add (bad) (bad) mov int3 or add test mov (bad) nop xchg xchg (bad) (bad) call cwtl cltd lcall mov cmpsb cmpsl test ljmp (bad) (bad) ljmp mov mov mov mov mov ret (bad) (bad) (bad) lcall int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) loopne loop (bad) (bad) std jecxz in out inc jmp out out lock repnz cmc div clc stc cli sti cld std decl jecxz add push pop xchg decl or or push movups (bad) call adc adc push pop sbb sbb sbb push pop and and and es sub sub std (bad) (bad) ljmp xor xor ss cmp cmp cmp ds inc popa bound gs (bad) (bad) fbld push insb insl outsb outsl jo jb je jbe js jp pop pop pop pop pusha pop insb push fstps push (bad) (bad) jnp jge jg jg xchg xor dec add inc dec dec dec (bad) (bad) (bad) decl dec dec dec push push push push push push push push pop pop pop or popa test jg jmp inc xorps (bad) (bad) (bad) jmp push je je outsl outsb add idiv out pop push jae jb bound arpl outsw jb (bad) (bad) (bad) lcall push fdivrp mov popa jae inc arpl gs outsl jo jo das std lcall out loopne mov popa addr16 outsl js add pop enter (bad) (bad) inc mov adc pop sbb add sbb jp xchg shll or (bad) (bad) (bad) pushl arpl xchg adc add inc (bad) out stos jmp or dec push (bad) (bad) (bad) lcall mov loope dec (bad) jmp push je dec outsb imul gs je imul arpl popa test fs outsl popa fs insb insb cmp jbe push jns je jp ret gs (bad) (bad) (bad) ljmp jb gs push cmpsb gs xor inc movq and arpl pop xor enter (bad) (bad) (bad) pushl add pop sub pop jge add add or es mov inc (bad) (bad) (bad) jmp ss mov pop cmpsl jns push add push adc mov and pushl pop add add test add aas fsubs xor pop test (bad) decl pop pop jbe call dec cmp fs dec loopne xchg outsb push mov add (bad) (bad) (bad) pushl ja add stc xor add add fdivl xlat jmp xor xor (bad) incl cmp xor aaa and add and add add push js mov js scas push or repz cmp ret stc popa xor sub pop insl xchg sub push (bad) (bad) (bad) lcall jae mov aaa std jmp push push js arpl gs pop push dec inc out clc aaa cld (bad) (bad) (bad) pushl popa je dec hlt inc jb insl push popa jb push dec popa insl gs xchg inc outsl jns cmp (bad) (bad) jge xchg add cmp je outsb arpl inc outsl push popa insb imul xchg (bad) (bad) (bad) jl pop stos jp pop or dec mov dec testl mov jle xchg pop inc stos cs (bad) (bad) lcall xchg out add mov push add sti or add (bad) (bad) fcomip popa rcrl mov adc sti add push out xor aam adc add (bad) (bad) (bad) decl add pusha aas adc imul push stos and add leave inc daa ret jle sub sbb add or (bad) (bad) call xchg mov outsl inc sbb pop jnp test add or repz push jbe scas sub (bad) (bad) (bad) fnstsw int3 jg adcb mov pop (bad) xor sub cwtl add pop mov xor push cmp inc xchg lahf pop cmp add shlb stos add push rorl sbb dec incl (bad) (bad) (bad) incl mov adc cmp or (bad) in mov sysret fidiv (bad) (bad) (bad) pop or sbb push sbb in or sbb mull cmp add gs mov dec (bad) xor in fnop aam xor les nop mov test je insb push dec inc cmpsb jmp sarl xor (bad) (bad) (bad) ljmp and lcall add lock jo popf xchg rolb les sbb into jne (bad) (bad) (bad) jmp mov lods add mov fs fs pop cmovs in mov (bad) incl or std add arpl pop arpl arpl arpl arpl (bad) (bad) jmp enter rolb repz cmp jecxz fldt xlat arpl pop mov pop arpl (bad) (bad) (bad) jmp pop sub adc jmp lcall lahf bound ret mov insb pusha xchg xchg (bad) (bad) (bad) ljmp jno add cmp lock lcall popa scas mov out xchg (bad) (bad) (bad) decl sbb in mov dec popa addr16 add add push movsl adc add (bad) (bad) (bad) lcall jecxz push rcr add pop inc jl jg ret rolb add jl loop int3 (bad) (bad) (bad) jmp jns pop add cmpsb fild add mov loopne adc jg inc jle pop test (bad) (bad) incl add shll push test cmp or inc cwtl sti mov in (bad) (bad) jmp call jmp pop pop jle xor add push ficompl and mov (bad) (bad) lcall push xor loopne add xor push pop cmp pop scas jnp ja (bad) lcall push lret clc incl or sub pop pop add xchg add and (bad) (bad) ljmp adc adc sti ficomp sub push cmp getsec mov popf sahf push adc mov (bad) (bad) call add outsl pop iret or inc pop (bad) psubq out pop push rdpmc push pop pop push pop mov (bad) incl pop pop sysret aaa data16 pop scas insl setae repz les enter xor mov (bad) (bad) jmp pop js stos rcrb sbb dec xlat mov add ja pop (bad) (bad) (bad) mov cmpsl lahf push movhps pop xlat mov pop sbb add mov (bad) (bad) (bad) aas pop add dec icebp add jae dec test add mov inc out cmpsl xlat add ret cs ret (bad) jmp add lcall das out add lods loop add add (bad) (bad) pushl (bad) jnp adc push adc (bad) mov add or add add je inc (bad) ljmp arpl jb xchg jb push adc outsl fs gs imul pushl scas adc jb outsb or aam push nop dec imul outsb fs fwait mov xlat push push and je insb outsl jae dec popa outsb fs clc ljmp gs (bad) ffreep pushl push popa imul gs int ljmp (bad) (bad) (bad) (bad) mov je popa insb push in (bad) insl outsl je push idivb sbb decl (bad) out or fs xor out sbb push dec loop inc outsl mov (bad) (bad) jmp jb je and jb mulb incb add jae insl and hlt (bad) (bad) (bad) jg inc sbb mov jne jb outsb dec add inc xor add sub inc jb outsl (bad) (bad) (bad) pushl mov cwtl push jmp fadds popa test jae dec jae fistpl inc gs nop gs (bad) pushl lock clc cwtl adc insl ds imul inc adc inc js add (bad) (bad) (bad) lcall jmp add dec gs jo adc inc icebp push ss insb cmp cwtl mov dec mov inc gs ja test je stos push adc cmovno add insl imul (bad) (bad) call push mov arpl ds popa (bad) cmp cmp gs dec jae popa (bad) or (bad) (bad) (bad) jmp jne addr16 xchg xlat inc outsb jnp mov cmp je jae sub outsb sub add (bad) (bad) (bad) lcall mov jg push dec scas insb outsl arpl fs outsb arpl insl push or jo ja out fcos (bad) (bad) jmp and inc push insb gs add loope jo push outsl jne je push je xor iret adc cs incl add (bad) dec fbld push sbb in push jo outsb xor cmp (bad) (bad) pushl push imul mov icebp mov gs gs inc jmp ljmp (bad) (bad) aas ret jo inc outsb jbe jb outsb rol jmp inc push imul outsl dec jne (bad) (bad) (bad) pushl jns dec jecxz xor cmp gs outsl (bad) push jne aas push cld gs (bad) (bad) (bad) jns gs outsb arpl adc imul xor cmp sti addr16 (bad) (bad) inc push imul cld gs add mov fldl repz push push fs inc push (bad) (bad) (bad) incl dec inc dec jae insl clc or out fs push popa addr16 or or adc push gs mov incl subb imul dec inc dec sti jne mov push outsl cmp add (bad) (bad) (bad) jmp sub adc outsl imul or add scas sbb popa lahf (bad) (bad) (bad) (bad) out incl jb jbe add mov sbb jb data16 (bad) or call sbb (bad) out fdivrl cmp adc sbb sbb and (bad) decl sbb lods jmp push adc pop and adc and jg incl add fistp or adc or pop push and or push push xor stc (bad) call or dec push pop pop push sub or daa or sysret adc (bad) (bad) (bad) incl adc pop adc pop adc incb aaa daa or or or sub (bad) (bad) lcall and add cmp or xor push adc (bad) (bad) (bad) ljmp lahf jl pop or or add or adc out jle pop or (bad) (bad) decl push or or adc idiv out fistp es or or (bad) (bad) call push push femms or push add push (bad) jg pop add add push add fstl push ja add lcall sub adc or or or (bad) (bad) incl or and adc add or or or or push adc or pop sbb (bad) (bad) incl sub push sub adc push and adc and adc std decl psignd (bad) (bad) decl or or rolb or push sbb dec or add or ja incl push or (bad) (bad) fimull sbb push lock and or push push and sbb icebp (bad) (bad) decl adc push and dec dec dec push ret js,pn adc mov adc or fwait jb xchg dec or sbb adc xor outsl (bad) (bad) out lcall jne adc sbb or sbb sbb add sbb sbb push (bad) push (bad) (bad) (bad) decl outsb push or sbb push add out incl or cmp or (bad) jg decl or cmp decl jo or and (bad) (bad) incl push cmpsl add jb adc or or push jae (bad) pushl cs add cmp decl or lock add add add std hlt xor and (bad) lcall push xor pop or push pop add ja sahf add pop or pop push and xor or (bad) sti incl push adc or or sbb lock pop push xor js (bad) (bad) lcall or add push add dec add lock inc out cld add and in cmp add (bad) (bad) (bad) lcall or and or add and adc jo addb daa cmp (bad) (bad) incl mov and mov repz add xor push cmp jnp sbb inc (bad) ljmp (bad) cmp fwait jp add (bad) (bad) call roll call add inc add jb rolb mov or (bad) jmp sub sbb andl fidiv adc (bad) out push (bad) (bad) (bad) jmp sahf jae (bad) xor xor xor add xchg add mov add (bad) in add add (bad) (bad) incl mov cltd xor jl add shrb pop clc mov add int3 inc orl (bad) (bad) call inc xchg or cmpsl je and jae mov mov add jbe cs jb,pn popa je (bad) (bad) (bad) jmp push push mov sub pop add ja cs andb fsubrl cwtl add test (bad) (bad) (bad) inc sbb daa shrb jae in orl add add mov (bad) call add pop add aaa int3 cmp add add ljmp add rorb mov add fadds add dec (bad) (bad) (bad) in pop add jne pusha mov lea (bad) (bad) (bad) call int jmp nop nop nop mov inc mov inc add jne mov sub adc jb mov sub adc rolb jae jne and idiv jae xor sub jb shl cmp je lds dec fcoms jbe or and dec (bad) (bad) jmp add cmp adc lea cmp jbe mov inc adc mov xchg dec jne jmp add (bad) mov add icebp add jmp idivl mov inc sub cmp (bad) (bad) incl ja cmpb jne mov mov shr rol xchg sub sub add cmp fnstsw incb cld les cmp pop add test mov icebp jno push add call xchg dec or je mov fistpll repnz push call mov add jmp popa xor ret ja mov cld xor sub and ja add mov xchg ret bound add loop xadd adc mov out fsubrl loope and jle (bad) (bad) mov pop push push push push push call lea jg pusha sub push push push (bad) (bad) jg pop popa lea push cmp jne sub jmp dec or add inc (bad) mov adc cmp movsl or add sbb push jae add movsb add add cli pop aaa gs or xchg pop add add pop lahf imul (bad) xor gs bound (bad) (bad) jmp js insb outsb jae and outsb cmp push sub outsl jae data16 arpl std (bad) ljmp popa jae jbe,pn and insl popa outsb imul jb adc and xor ds je jne adc adc aaa cmp arpl jge (bad) mov cmp gs gs jb int3 and addr16 xor sti mov dec gs insb and mov popa jae outsb jbe jb and inc arpl ret lock jae and cmp cmp cmp dec and das stos ret or hlt ds dec stc ret push pop ds inc arpl dec add add mov pop sysenter add xchg (bad) add and sti pop jb inc add add pop mov lcall and pop fsubr jg (bad) decl push dec inc dec xor cs dec dec add push inc push dec or insb insb add inc mov (bad) mov push inc push push add ljmp clc pop sbb add xchg cmpsl dec imulb adc je je jge fs jecxz call add inc outsl insl dec cli fs stos cmp jae jb jo mov push test rorl add mov and inc mov add (bad) jne aas loopne add nop or jb jns js dec addb add add in out (bad) (bad) mov jae jo jae popa bound push imul icebp imul bound push xor push jbe push divb push jne inc insb outsl bound add add jnp add add xor xor xor add scas mov cwtl add add add mov adc rcrl cs or gs sub add add pop imul (bad) call jae jne arpl mov out add icebp inc and ss and adc and lds push imul add fsubl fdivr sub push gs jo popa je and mov or outsl arpl or push outsl or add fsubs dec gs jo add or push xchg pop (bad) or inc jb and pop inc gs ret icebp push add cwtl arpl sbb repz or adc sub (bad) arpl mov inc outsb fs pop add dec jae sbb jg gs or fdivrp fwait cmp jb jae outsb je insb jne push data16 mov jo je je pop mov fdivrl inc outsl outsb jae insb gs jne sub mov jns cmovne adc arpl add inc gs out loopne out iret mov lcall test inc push push je jb jne push arpl movsb std cmpsb or pop je sbb (bad) gs js gs mov gs inc fcomps sbb jae mov sbb mov push mov outsl sbb xchg inc push nop adcb sbb mov test dec adc adc icebp inc inc push pop dec inc dec or push popa insb imul push scas add inc out and or push jne loope int3 cmp int3 or mov mov inc (bad) jle mov inc xchg imul arpl movsb in popa jbe adc mov mov and mov fld int pop das mov iret movsl movsb adc nop sbb sbb sbb pusha ljmp pop or add cmp js roll test dec mov and out sub cmp mov daa and jecxz cwtl notb adc jmp add imulb popa outsb arpl push adc and jne cmpsb or jbe mov gs add insl hlt xchg and push gs push inc aaa sti dec inc dec popa jo leave dec pop pop scas and outsl pop xchg inc nop push ds add movsl add rorb insl cmp outsb dec sub pop mov add mov cld aas dec je jo outsb fs lods mov popf mov inc adc (bad) ret fdivrl gs and push fidivl or insb and cmp mov sub adc and cwtl xchg dec in jle or add and push add (bad) (bad) mov movlps or and cmp and imul imul or add push sbb or add (bad) pushl sbb adc and push adc sbb pop or adc sub sub adc or (bad) incl adc pop and or and push add adc (bad) (bad) (bad) decl sbb cmp adc and push adc adc and pop (bad) (bad) (bad) incl das pop femms test or add or and and sub push pop push and inc push push das push (bad) out (bad) decl or or sbb cs or or or or or push adc mov push or pop push push or push or add or push push push or and sub or or adc mov lock sub incl sub or sbb add and pop push push sbb adc sbb gs or adc sub adc (bad) jmp xor adc pop cmp adc adc lock add (bad) aas dec jmp adc inc jnp mov das xor add or or adc and or adc or or mov push wbinvd adc pop add (bad) (bad) decl add lock add sbb adc lock add and in lock add pop adc add and lock add add pop sub push or mov and jae and daa or xor inc xor lds push or xchg push xor or inc mov add inc push push push push and inc dec cmp pop push call or pop (bad) inc mov add sbb or or and push adc or xor or (bad) cmpsl add pop pop pop sub or adc adc push sub push adc pop mov sub outsb add (bad) xor inc pop add sub push add or dec je or dec push pop xor std add and xor or or sub sub lcall cmova push adc loop andl inc inc icebp add insb lds into adc (bad) incl mov and sub or sbb cmp mov push push adc and or test add xchg add fs int3 mov and aaa insb push add ds lds dec mov lock adc aas cltd jmp add lock add or or add imul adc adc lock and daa and pop and add (bad) (bad) aas sbb outsb push adc push sub sbb sub inc adc loop jmp cmp and or push add push adc push or or add (bad) jg pop add inc add sub add or or jg leave sbb adc lock xchg or or adc add add in sbb lods add cmp aam and aas negb xchg or add sbb call and adc add and (bad) ja add add sbb and cwtl nopl int3 lods sar lock movsl jo ljmp pusha adc and cs or js pusha lret jbe pop or lock and inc adc add ret and les jae daa add add add mov sub sbb add jb adc idiv (bad) mov add inc subl adc adc cmp std pop add adc add adc mov sti and add or push (bad) sub add testl je,pn js cmovae jnp pop ret jmp mov xchg push add add pusha sbb adc adc enter and or je add js add and jb inc loope sub aas (bad) out lcall cmc outsb cwtl jae push add inc jb,pn jmp mov sub adc je cld (bad) sub jo add jbe add add dec jl add add add add add add add add int jmp nop nop nop nop nop nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jae xor sub jb shl mov inc xor je mov add jne mov sub adc adc add jne mov sub adc adc jne inc add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp nop mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov push dec repnz push call or je mov add jmp call add lea xor mov inc or je cmp ja add mov xchg rol xchg add mov jmp and shl mov add jmp mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp add add add cmp inc add 