xchg pcmpgtd push xchg jo xor sub push data16 push xchg push push bound mov xchg dec push imul or data16 push data16 or mov mov pcmpgtd lahf or data16 pcmpgtd les data16 jo ljmpw jge data16 or inc push or data16 or and data16 pcmpgtd sbb xchg xchg pcmpgtd inc push data16 sbb mov pcmpgtd jne pop (bad) or notw sub addr16 aaa mov pcmpgtd add dec insb push add outsb add test data16 or data16 dec push mov mov data16 mov push data16 adc xchg pcmpgtd insb push data16 data16 dec arpl in out push inc xchg pcmpgtd fisttpll data16 imul scas lahf or data16 add mov add add add sbb add pusha inc add add add add adc add bound add add add fmuls inc add add add add add arpl xchg arpl std fs add gs add inc add inc add addr16 add addr16 add inc add inc add push inc add inc add push inc add push inc add imul and imul in inc add imul sbb add push add push add inc add push add push add push add imul imul imul imul imul insb inc add inc add inc add inc add insb inc add insb inc add insb inc add insl inc add add inc add inc add inc add outsb inc add outsb inc add outsb inc add outsb inc add inc add add add inc add outsl inc add outsl inc add outsl inc add inc add inc add inc add inc add jo add jo add jo add inc add jo add inc add inc add add add jb add jb add jb add add inc add inc add inc add jae add jae add jae add inc add inc add jae add inc add inc add inc add add je add je add inc add inc add inc add jne add jne add jne add jbe add jbe add inc add inc add inc add inc add ja add ja add inc add inc add inc add inc add inc add js add add inc add inc add jns add jns add jns add jp add jp add jp add jnp add jnp add jnp add inc add jnp add jnp add jnp add jnp add inc add jl add jl add jl add jl add jl add inc add inc add jge add jge add jge add jle add jle add jle add jle add jle add jle add jg add jg add inc add inc add addb addb addb addb addb addb addb addl xchg addl out addl hlt addl scas (bad) inc add (bad) inc add (bad) inc add addl addl addl addl addl addl addl addl test or add inc add test call test add inc add inc add xchg jbe inc add xchg cmc xchg add inc add inc add inc add inc add xchg mov xchg mov xchg orl inc add mov pop mov jne inc add mov mov inc add mov sub inc add add mov stc mov or add add add inc add lea mov mov cmp inc add add aas jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp push call add add add xor add cmp add add add lods in cld xchg (bad) xor dec mov xchg int repnz add add add add add push push addl outsl bound add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add mov add push xor add add inc add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add sub inc mov add (bad) xor cmp inc add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add sub push mov add js jb je inc add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add sub loopne inc add add add aaa outsb add add inc es add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add daa inc add mov add sub add sbb add add inc es add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add mov add cmp add inc add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add mov add call add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add mov add dec pop jb mov inc add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add daa inc add inc add add add pop jb les inc add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add sub push mov add test jb cld sbb add or inc es add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add inc add add add push jb xor inc add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add inc add add add push jb insb sbb add or inc es add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add mov add sbb add or inc es add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add sub nop mov add cwtl pop jb fcompl inc add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add sub mov add add push jb adc inc add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add sub mov inc add add add outsb add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add mov add mov add add adc inc es add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add mov add (bad) outsb add adc inc es add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add sub lock add mov outsb add sbb add adc inc es add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add sub add add pusha aaa outsb add inc add add inc es add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add mov add loopne outsb add add add inc es add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add sub nop mov add xor js pushf sbb add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add mov add nop xor add sbb add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add mov add add js or inc add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add inc add add add out add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add inc add add add call add jl inc add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add es add mov add mov inc add add cld divb add add add add add add aam add add add add add (bad) add add call add add aaa inc add add add add add add add add aaa inc add add add ss add add add inc add add add inc add add add xor add test inc add add add inc add add add add mov add add add add add inc add add add add pop xor push inc xor add or or add add add inc add hlt add (bad) (bad) decl add add add add add add add add inc add pop inc add add add add add add add popa jb bound add outsl je add push outsl bound add push add add in and dec (bad) dec mov iret pop loop add add jmp add add add hlt imul add add add pop rcr (bad) sbb inc jo adcl add add add add sub add out push add add add insl inc add add inc es add add add nop inc add mov inc add mov add hlt sbb add add add inc es add add add (bad) incl add add mov add fcoms add inc add add add inc add add add inc add add add inc add add add add add add inc add add add and add add call sub inc add pop add add mov (bad) incl add add add add and add ret je cwtl sub (bad) incl add cmp add sbb inc add add add je sub inc add add add add cmp add sbb inc add add add and add je xor inc add add add add inc add add cs add add add and add je cmp inc add add add adc inc add add inc add add add and je push cs add add add adc dec add add inc add add add add je pop cs add add add add dec add add cs add add mov ret je push add add add push add add cs add add add and je jo inc add add add add push add add cs add add add and je js inc add add add add pop add add cs add add add inc add je subb add add add add pop add add cs add add add add add es add je mov inc add add add inc add and insb pop inc add inc add inc add and insb pop inc add inc add inc add and insb pop inc add inc add inc add and loopne inc add add inc add inc add and loopne inc add add inc add inc add and loopne inc add add inc add inc add inc add and insb pop inc add inc add inc add inc add and insb pop inc add inc add inc add and insb pop inc add inc add inc add and loopne inc add add inc add inc add and loopne inc add add inc add inc add pop inc add (bad) (bad) incl add add sahf js and dec mov cmp mov sbb es add inc add add add or add add add add add and (bad) (bad) (bad) call add add sub add add add incl add add add inc inc add (bad) (bad) incl xor adc inc add add add push jb (bad) incl add add add add (bad) (bad) pushl add add add mov add and add add add add add incl add addb add add lods sbb (bad) (bad) (bad) push inc inc add add add mov add sub inc add incl add addb add add in inc add (bad) (bad) push inc inc add add add mov add xor inc add incl add addb add add sbb inc add (bad) (bad) push inc inc add add add mov add inc sub add incl add addb add add push sbb (bad) (bad) (bad) push inc inc add add add mov add dec sub add incl add addb add add mov inc add (bad) (bad) push inc inc add add add inc add add add inc add incl add addb add add les inc add (bad) (bad) push inc inc add add add inc add add add inc add incl add addb add add cld sbb (bad) (bad) (bad) push inc inc add add add inc add add add add incl add addb add add xor inc add (bad) (bad) push inc inc add add add inc add add add inc add incl add addb add add insb sbb (bad) (bad) (bad) push inc inc add add add add add add incl add addb add add movsb sbb (bad) (bad) (bad) push inc inc add add add add add add add add (bad) incl add addb add add fcompl inc add (bad) (bad) push inc inc add add add add add add add add (bad) incl add addb add add adc inc add (bad) (bad) push inc inc add add add add add add add add (bad) incl add addb add add dec sbb (bad) (bad) (bad) push inc inc add add add mov add test inc add incl add addb add add test inc add (bad) (bad) push inc inc add add add mov add mov inc add incl add addb add add je inc add (bad) (bad) push inc inc add add add mov add mov add add add add incl add addb add add mov (bad) (bad) push inc inc add add add mov add les add incl add addb add add hlt sbb (bad) (bad) (bad) push inc inc add add add mov add int3 sub add incl add addb add add sub inc add (bad) (bad) push inc inc add add add mov add aam inc add incl add addb add add int3 pop inc add (bad) (bad) push inc inc add add add mov add loopne inc add incl add addb add add pushf sbb add (bad) (bad) push inc inc add add add mov add call add add add add incl add addb add add add inc add (bad) (bad) push inc inc add add add inc add add add sub add incl add addb add add cmp inc add (bad) (bad) push inc inc add add add inc add add add sub add incl add addb add add inc sbb (bad) push inc inc add add add inc add add add add add add (bad) incl add addb add add or inc add (bad) (bad) push inc inc add add add inc add add add sub add add add (bad) incl add addb add add aam inc add (bad) (bad) push inc inc add add add add add add add add (bad) incl add addb add add fs add (bad) (bad) push inc inc add add add add add add add add (bad) incl add addb add add push jb je imul inc jne outsl jo outsl bound add dec outsl outsb fs outsb imul add js add add outsl ja jb add add inc outsl jb gs add popa je insb outsl add popa outsb add add imul add add insb outsw outsl je add inc outsl jb popa jne push inc jns je jb push xor add pop outsl insl jne cmp add imul imul add add bound outsb cmp push popa jae outsl insl gs jb add addr16 add inc jne popa je xor dec gs popa xor add fs imul jb je add add popa insl outsl imul push popa outsb imul jns outsl jne push add dec gs outsl imul inc outsl outsl je popa je jae add inc insb popa arpl popa imul add popaw insb popa je add add push outsl bound add add hlt aad daa push push add or dec xchg xchg loopne pop push push push mov dec mov iret pop loop and mov jne xlat cmp xor or stos add xchg inc outsl jb add add cs push add xor inc cmp outsl addr16 insl and insb gs sub sub arpl jae data16 push imul je imul pop push inc ss dec inc add add mov add add add add add add sub inc add call lods xor or stos add xchg push imul push imul push imul repnz lods xor or stos add xchg inc outsl insl insl popa outsb xor add add insl insl popa outsb xor add add gs xor push imul push imul push imul push imul or push add add add mov lret adc or test test frstor jne rcr (bad) sbb inc jo adcl aam fwait test sbb sub xchg pusha icebp dec adc xor or stos add xchg inc jb fs je insl cmp add ljmp adc pusha rcll outsb imul inc gs popa outsb popa jae or xor or stos add xchg push jo jb addr16 insl add add dec lods xor or stos add xchg pop gs popa insl popa outsb add add loop lods xor or stos add xchg dec gs popa je fs xor popa jns jne add sbb xor or stos add xchg inc outsl arpl je jb outsb popa js add add dec lods xor or stos add xchg push gs insl gs popa gs add add push outsb fs jbe outsb add add dec imul outsb cmp add dec lods xor or stos add xchg inc jae jae xor add gs imul dec insb imul add add ja imul add imul jae xor add add outsl jo outsb gs add push je jb imul push popa jae outsl xor add iretw adc pusha rcll outsb jae je outsl outsb xor add push imul outsb jns add insb insb imul add lods xor or stos add xchg dec popa je jb outsl ja imul js arpl imul popa arpl insb insb popa jb add push push popa jb push jo je arpl gs add add addr16 inc push imul jae dec outsl outsb gs jp popa outsb xor imul add js js jb add add inc gs arpl add push gs jae jne jo imul push jne arpl jae insb add add arpl jae add dec lods xor or stos add xchg push outsb jae popa je popa bound add add inc outsl outsl imul add outsb addr16 add imul outsl outsl jae arpl add jb insl add add jae outsl outsb arpl insb outsl jae add add arpl gs je outsl outsb add add dec gs outsl je jb add add outsb outsl cmp add popa outsb xor bound outsl outsb imul outsb outsb imul add jb fs outsb je add add inc outsl jae gs outsb xor add imul jp outsl jne add jb gs push dec gs je insb cmp add add jne je jae add add dec gs outsb fs insb xor add fs inc popa jb fs jae add push jne jae arpl insb add add je jb add push insl gs xor add jb outsl outsb gs xor add je jb je jo add dec outsl outsl insl popa arpl jae xor add add arpl jae bound add jbe outsb add add gs insl gs jns add push imul jae add push outsl jne outsw outsb je add inc outsb fs outsl outsb xor add add jo popa je jb xor add gs xor add add imul add dec outsb outsl jae push add js xor add inc outsb popa ja jbe add je or xor add add xor add or adc add add adc add or or add add or add or imul cs add add or fs outsl outsb imul add xor inc add inc add add mov add add add mov or je jmp push mov call jmp add add inc push inc push dec xor cs dec dec add add push add add popa outsb addr16 gs imul imul nop xor movsb xor add add xchg scas inc add or je jmp push mov call jmp add add add add jb imul insb insb add add add inc gs imul outsl outsb dec outsb outsw push add xor or add add mov add add add add or je jmp push mov call jmp add add add add jb jne jb push popa insb jne push add hlt xor push xor add add lods scas inc add or je jmp push mov call jmp add add add add jb gs xor add add push add add insb dec outsl jbe dec gs outsl jb add add inc add add mov add add add add or je jmp push mov call jmp add add add add je imul outsl outsb dec outsb outsw push imul inc add xor add add les add add add mov or je jmp push mov call jmp add add add add gs xor add add add insb insb push imul outsl arpl inc xor inc add add shrb add add add mov or je jmp push mov call jmp add add gs jne jae jb outsl jae add add add add fsubrl add add add mov or je jmp push mov call jmp add add add add arpl outsl jo jo outsb jne add add xor add call add add add add or je jmp push mov call jmp add add add inc jo outsb fs outsb jne add add ss add add hlt scas inc add or je jmp push mov call jmp add add add inc gs jb jns outsb jne inc xor inc add add add add add add mov or je jmp push mov call jmp add add add add je jns je insl dec outsb jne add inc xor inc add add or inc add or je jmp push mov call jmp add add add add gs je push outsl jo jo outsb jne inc xor inc add add sbb add add add mov or je jmp push mov call jmp add add add add popa jb outsl ja jb add inc xor inc add add and inc add or je jmp push mov call jmp add add add add popa jb jo gs add inc xor inc add add xor add add add mov or je jmp push mov call jmp add add add add je dec popa insl gs xor add inc add add cmp inc add or je jmp push mov call jmp add add add inc add imul jb add add push add add jb imul add and add jbe add sbb add dec add jns bound outsl add jb add add add add add adc add dec add imul outsb add insb add add add add add push add add add add add add or add or add adc add adc add sbb add sbb add and add and add sub add add add add add add add add add add add add add add stos xchg add add add add add add jl add sbb add dec add insb add add add jae popa add je xor add add add add add add add add add add dec add and push add jb jae imul and dec add data16 and popa add popa add insb add bound insb add and add add add add add mov adc add inc add push add add xor add add add add add sub add xor xor add sbb add dec add das add add add add dec add add add add add push add add add add add dec add add add add add push add add xor xor add add push add add outsb add outsb add ja outsb add add add add jo jo add push add add add add add add add add popa add add add add add add push add add add jo insb add jns and add jbe add adc add dec add jne jae add add add add push add add add add jb imul add add add adc add push add jae je add and add jbe add add push add add outsb add je popa add add bound insb add add adc add push add jne outsb add add add add adc add inc add insl add and add jbe add add or add inc add outsb add add add add add popa add je add and inc add outsb add add add add add je outsl add and inc add outsb add add add add add add add add add outsl add je add push add add js inc add add add add add add adc add inc add imul imul xor add and add push add imul imul popa add add add je and and add add push add add jne bound bound add xor add add add push add add jo jo add and inc add jae add add add add add add add and inc add jae add add add add push add insl add insb add add add dec add jo popa add xor add add sbb add inc add arpl je jb imul jb imul add add push add imul imul add add push add add popa add add jb add imul add inc add add outsl add add add arpl add sbb add inc add jns jae je popa add add jp add add add add je push add xor add push add add popa add add outsb add add push add add imul add jae add push add outsl add je push add add add outsl add jne xor add push add insb add add add add add add dec add jo outsl add add jo jns xor add add dec add js add cmp add add adc add dec add je popa add je jne add add add jns jb jb push add popa add sbb add inc add jb add jb popa add add outsb add aaa add add add popa add imul je imul add add adc add inc add je popa add popa add cmp add add inc add jb bound jns add sbb add dec add outsb add add add insl add outsb add add add inc add je add data16 jne imul xor add add sbb add dec add jo outsl add jb outsl add add imul add dec add outsb add add popa add popa add insb add add add sbb add dec add add outsb add add insl add jb aaa add add add add add add push add outsb add add bound bound add add add add add push add jne add cmp add add inc add popa add add arpl imul add add add inc add insb add add add add inc add outsl add add imul add add add add add imul ja popa add add add add add imul add add adc add dec add insl add jae arpl outsl add add add add inc add jae je data16 insb add add add add add add add je je imul add add add inc add add popa add add add or add push add jb insb add add dec add jb imul popa add add jne jae add add push add add add jb imul add inc add jb outsl add outsl add jns je add add add add add bound jns jae jae add cmp add add dec add je jae outsl add add add add sbb add push add popa add jae jo outsl add je imul add add add add je add add bound popa add add xor add add inc add arpl jne jb jae imul jae add add adc add push add jae jae imul add add add add add popa add push add add or add push add outsb add arpl aaa add add add add imul popa add add add add add add add outsb add add jb xor add push add outsl add bound insb add insl add outsb add add add push add ja imul add add adc add inc add add jb imul add add add add add add insb add arpl imul add jo jb outsl add data16 add add add add imul and dec add cmp and add add add jns add adc add inc add insl add add add add add add add add outsl add imul imul add mov dec sbb mov cmp sbb add pop add outsl add outsl add add je imul add add push add outsl add add add push inc inc ss dec dec add add pop pop jbe popa dec bound gs pop pop jbe popa dec xor jns add pop pop jbe popa inc jo xor add pop pop jbe popa push dec xor add pop pop jbe popa dec outsb inc jae jb add add jbe popa push cmp outsb add pop pop jbe popa inc jb gs bound add add jbe popa dec popa je dec fs popa insb insb dec add add jbe popa dec outsb inc jb outsl jb add add jbe popa dec popa je dec gs inc popa insb insb add add pop pop jbe popa dec bound gs fs data16 add jbe popa push jb outsb je bound add pop pop jbe popa dec jb jae insb je push bound add add jbe popa inc jb gs popa jb imul pop pop jbe popa dec gs add add jbe popa push je push outsl push outsb imul add jbe popa push gs jns je insl inc jb outsl jb pop pop jbe popa push je push outsl inc outsb jae add pop pop jbe popa dec xor popa jb add jbe popa push je inc outsl jo add add pop pop jbe popa inc jb gs je dec imul pop pop jbe popa push je inc popa je pop pop jbe popa inc jb outsl jb jbe jb insb outsl ja add jbe popa inc jb gs je add add pop pop jbe popa push je push popa jb popa insb add pop pop jbe popa push je push popa jb outsl jbe add jbe popa push je dec outsl jbe add add pop pop jbe popa push cmp je xor add add jbe popa inc jb gs popa jb add add jbe popa push popa jb outsl jbe add add pop pop jbe popa dec bound outsb add jbe popa push gs popa jb jb add pop pop jbe popa push bound outsb add or add add inc es add add add pop inc add (bad) (bad) incl add add es add inc add add add push jb js inc add add add add js inc add add add add add add add addb add add scas inc add add add cs add cs add pop add add mov (bad) incl add add add add ret je cwtl sub (bad) incl adc add cs add add add add je in cs add add add or add cs add add add add add ret je or inc add add add cs add add push inc add je adc inc add add adc inc add add inc add add add inc add das inc add add add adc dec add add das inc add add int3 push inc add das inc add add inc add add add add add sub inc add das inc add add inc add add add sbb inc add add add je jo inc add add add or push add add inc add add add push inc add das inc add add add adc pop add add add add push inc add ret je test inc add add inc add add add inc add add pusha push inc add das inc add add inc add add cs add add mov ret je les inc add add inc add add add das inc add add add push inc add ret je loopne inc add add add sbb push das inc add add add inc add das inc add add add verw add das inc add add add ret je hlt das inc add add add adc jo add inc cs add add add inc add je add inc add add add adc je add cmp inc add add push ret je or inc add add inc add add add inc cs add add add add add push inc add je sbb inc add add add add das inc add add add inc add ret je sub inc add add add adc addb add das inc add add add inc add xor or add inc add add inc add add add push inc add ret je dec xor and add inc add add das inc add add add add add inc add ret je pop xor xor add add inc add add add inc add xor pop add add push add xor daa add add ret je test inc add add add adc xchg add add inc add add add pop inc add je nop xor xor add inc add add das inc add add add je pushf xor add add or add inc add add add pop inc add ret je test inc add add add adc add cs add add add inc add je mov inc add add add adc movsb add add inc add add mov inc add je les inc add add inc add add das inc add add add pop inc add ret je int3 xor or add inc add add inc add add fs inc add xor or add inc add add cs add add add pop inc add je in inc add add add adc mov add cwtl das inc add add xor enter lock inc add add adc mov das inc add add add add add ret je cld xor and add add inc add add add pop inc add ret je add inc add add add or add inc add add inc pop inc add ret je adc inc add add inc add add add add cs add add add ret je and inc add add add adc enter sub inc add add lods pop inc add les xor dec add add adc add cs add add add pop inc add je dec xor sbb add inc add add add add add add add ret je push xor sldt add adc add cs add add add pop inc add je pop xor sub add inc add add inc add add add inc add ret je xor push add add adc faddl add cwtl das inc add add xchg pop inc add ret je insb xor xor add inc add add add add inc add add add pop inc add xor adc add inc add add cs add add add inc add je test inc add add add adc call xor add add add add add je xchg xor add add add add add add add popa inc add ret je mov add add or lock add inc add add push ret je test inc add add inc add add inc add add add ret je mov inc add add add adc clc add add inc add add add popa inc add xor sub add inc add add add add das inc add add pop bound fadd je enter dec add add or add cs add add add add add je fdivs inc add add add add sbb inc add add add bound dec ret je in inc add add add sbb or add push das inc add add adc inc add xor cmp add inc add add add cwtl das inc add add mov add ret je hlt xor dec add add adc add cs add add add arpl push xor adc add inc add add add push das inc add add add inc add xor cmp add inc add add add add das inc add add add fs add ret je sbb inc add add add sbb sbb add push das inc add add and inc add xor inc add add adc and add sub inc add add add je sub inc add add add verr add shrb inc add add add inc add ret je cmp inc add add add add sub add sbb inc add add push inc add je inc xor inc add add adc sub add sub inc add add add inc add les xor add add push add add add add add add inc add ret je push xor push add add or xor add js inc add add inc addr16 add xor dec add add or add inc add add je insb xor dec add add adc cmp add sub inc add add add addr16 add les xor pop add add or add inc add add add inc add ret je mov inc add add add adc add cs add add subb push xor adc add inc add add add js inc add add add push je pushf xor add add str add das inc add add add inc add ret je test inc add add add or push add add inc add add add add add ret je mov inc add add add add add add imul (bad) xor and add inc add add add sbb inc add add add push add xor cmp add inc add add add inc add add add add add je fdivl inc add add add cs add add add push add je in inc add add add adc add add das inc add add add add xor and add inc add add add js inc add add add je clc xor aaa add add add add inc inc add add inc add inc add inc inc add add inc add inc add inc inc add inc inc add add inc add inc add inc inc add inc inc add add inc add inc add inc inc add inc inc add add inc add inc add inc add inc inc add add inc add inc add inc add inc inc add add inc add inc add inc inc add add inc add inc add inc inc add inc inc add add inc add inc add inc inc add inc inc add add inc add inc add inc inc add inc inc add add inc add inc add inc inc add inc inc add add inc add inc add inc add inc inc add add inc add inc add inc inc add add inc add inc add inc inc add add inc add inc add inc inc add inc inc add add inc add inc add inc inc add inc inc add add inc add inc add inc inc add inc inc add add inc add inc add inc add inc inc add add inc add inc add inc add inc inc add add inc add inc add inc inc add add inc add inc add inc inc add inc inc add add inc add inc add inc inc add inc inc add add inc add inc add dec inc add inc inc add add inc add inc add inc add inc inc add add inc add inc add inc add inc inc add add inc add inc add inc inc add add inc add inc add inc inc add add inc add inc add dec inc add inc inc add add inc add inc add dec inc add inc inc add add inc add inc add dec inc add inc inc add add inc add inc add inc add inc inc add add inc add inc add inc inc add add inc add inc add inc inc add add inc add inc add dec inc add inc inc add add inc add inc add dec inc add inc inc add add inc add inc add dec inc add inc inc add add inc add inc add inc add inc inc add add inc add inc add inc add inc inc add add inc add inc add inc inc add add inc add inc add dec inc add inc inc add add inc add inc add dec inc add inc inc add add inc add inc add dec inc add inc inc add add inc add inc add dec inc add inc inc add add inc add inc add inc add inc inc add add inc add inc add inc inc add add inc add inc add inc inc add add inc add inc add dec inc add inc inc add add inc add inc add dec inc add inc inc add add inc add inc add dec inc add inc inc add add inc add inc add inc add inc inc add add inc add inc add inc add inc inc add add inc add inc add inc inc add add inc add inc add dec inc add inc inc add add inc add inc add dec inc add inc inc add add inc add inc add dec inc add inc inc add add inc add inc add inc add inc inc add add inc add inc add inc add inc inc add add inc add inc add inc inc add add inc add inc add inc inc add add inc add inc add dec inc add inc inc add add inc add inc add dec inc add inc inc add add inc add inc add dec inc add inc inc add add inc add inc add inc add inc inc add add inc add inc add inc inc add add inc add inc add inc inc add add inc add inc add dec inc add inc inc add add inc add inc add dec inc add inc inc add add inc add inc add dec inc add inc inc add add inc add inc add inc add inc inc add add inc add inc add inc add inc inc add add inc add inc add inc inc add add inc add inc add dec inc add inc inc add add inc add inc add dec inc add inc inc add add inc add inc add push inc add inc inc add add inc add inc add push inc add inc inc add add inc add inc add inc add inc inc add add inc add inc add inc inc add add inc add inc add int3 xor or in and dec (bad) dec mov iret pop loop movsl hlt aad daa push push add dec lods xor or stos add xchg xchg add add add add add je imul or imul jae add add inc add add (bad) (bad) (bad) jmp imul jae add stos adc add or add pop add inc add incl sbb add add add gs cmp or notb add or push add incl sbb add add add gs cmp or mov add mov add add add pop add gs xor or lds add or add incl sbb add add add gs xor or popa adc add xchg add sbb add add insl gs xor or dec adc add add add incl sbb add push pop add gs xor or mov add or add add add pop add gs xor or jae add or add add add pop add gs aaa add pop mov add or add add add or inc outsl insl insl popa outsb xor add or inc outsl insl insl popa outsb xor add or or adc adc add incl sub add or add insl insl popa outsb xor add or inc outsl insl insl popa outsb xor add adc push xchg bswap or add incl add dec xor push pop rcr (bad) sbb inc jo adcl cmp mov lret adc dec lods xor or stos add xchg sub add loopne add or inc jne outsl jo outsl bound add imul je fs sbb add and lods push add add lods push add add add add add add add add add adc add add pushf lods push add lock les mov stc iret mov xor mov int3 cltd inc or or xor js icebp enter ret lret sbb sbb xor pop dec cmp lods xor shrl cmp (bad) push adc or pop gs xchg push in loopne cs push out mov jne or imul incb in mov xchg jp outsl or and mov in test add and xor jle sbb sbb pop ss repnz js in push mov aam out jbe dec fxch sub lret aas rclb addb pop clc inc ret cli ret push in push cmp jl inc ds call imul mov out test add mov jbe xchg cltd or pop xor inc lcall lret jno fsubrl lods test dec push inc repz loope push xchg fcmovbe jle ljmp xor ret and (bad) or hlt out aas jmp test fadds rcr jge insb jg std mov popf outsl addr16 mov push out xchg pusha xchg mov sub icebp cmp mov iret adc enter lods rolb add (bad) pop mov cmp js in xor into pop insl mov jl dec add xchg in mov je inc and push sbb test and pop push scas cld push (bad) popa pushf lods imul or xor icebp jnp dec enter rorb mov lock imul adc stc xlat and outsb sbb lock das inc (bad) sub and loopne pop into xchg lret and and pop fs mov (bad) movsl sahf jl dec mov fistl out pusha ja jae mov inc inc push loop mov jge jb xchg in xor loope popa or xor push pop jmp imul xchg and cmp mov call push jp push adc xchg mov xor std cwtl sbb mov les pop mov subb add hlt lcall inc (bad) mov lea (bad) aad insl cld add mov popf pop jecxz aaa test icebp ficoml iret and jle jns imul or arpl push gs sub mov (bad) mulb mov pop cltd xchg scas pusha test lds js xchg sbb xchg imul inc loope stos push sbbl sub daa mov push add outsl adc add loop mov mov lret inc repnz roll or dec sbb mov jbe out cmpsl mov call sub jb lea (bad) jg push (bad) shlb jo xor cmp add add and xchg sbb loopne and pop lahf dec (bad) or mov hlt cmp or dec fisubr pushf ret pop push ret enter mov scas (bad) cmc int mov pushf test push xor sub xchg mov lods mov (bad) popf mov nop fcomps je pop jmp int rcrb aad data16 mov cmpsb dec pop ss incb jle sbb or ds mov push push lock xor fidiv fisubl outsb push arpl test (bad) scas inc inc pop in (bad) jmp push outsl pop cmp pop or push jp repnz mov mov inc jbe icebp sub test adcl xchg dec cmp dec jmpw clc sub ret rclb stos pop pusha mov push test cmc mov or xchg sarl (bad) adc data16 adc out mov xlat aaa jge,pn cmp in and xchg lods mov sbb repz inc xchg ljmp and push es jns (bad) loope adc loop add sti fildll in ja sbb adc jbe iret mov and test mov mov aad add mov sub xchg ret mov push (bad) jns lock push mov scas sti dec fdivrl dec xor enter aaa adc loopne add cmpsl jg (bad) xadd icebp push rcrl hlt jnp push and sub dec mov sti mov mov es push loope and dec sbb iret ror bound xor push imulb pusha les push sub xchg mov jmp fnstenvs jl popf pop push sbb xchg or xchg pop fcmovnb (bad) ja sahf xor fsubr sbb fild stc imul dec fsub fldl fcmove jns mov sub mov stos add insb imul sbb fiadd sub out aas iret cs and mov dec mov lcallw mov in clc aad lret cmc out (bad) dec rorl arpl or cld push pop mov inc xor aam add inc or jg jp (bad) and jmp gs mov ss loop xlat pop fwait inc cmp sub pop mov mov dec mov adcl stc or pop imul mov mov dec orb adc je adc mov mulb dec cwtl mov add and in nop xchg rclb mov (bad) sbb js cmp sahf xchg push mov popf shrl jns lds or jo call lcall repz mov mov fstl ss push stos leave lods ja out mov mov inc pop out (bad) and fwait jb out test sbbl jo pop iret push xchg jmp sbb popa das ljmp movsl inc mov adc aas in push mov and (bad) (bad) je arpl sti inc dec dec repnz dec aaa out cs or cwtl xor cmp pop mov fstps dec mulb sbb ss pop icebp sbb sbb loop mov push aam and pushf jo scas xchg cld addr16 xchg cmp xor cmpsl int3 orl repnz cmc xor iret sub cvtps2pi lret mov ja dec add cmpsb cmp jne lods mov inc sbb adc push rclb stos clc dec ret test mov add jl inc in jbe inc les pusha mov fadd fwait push imul in loop or jge (bad) cmc rcrl in push or ljmp push icebp sub stc sub sbb push lret push mov pop push dec hlt adc inc sahf mov xor shlb test xlat or pop pop jae outsl push mov aas cmp mov js insl ret sub pop pop bound jo xchg mov sub bnd cmp jb enter lods and cmpsl scas ja jbe dec or test mov xor pushf jle jp sarb mov jl lods mov sti loop xchg aaa mov cmp mov mov ret (bad) xor movsb adcl pop (bad) cli call mov popa mov test adc mov ret cld xchg push aam leave outsl lea lret stos arpl pop fcom repnz pushf sti push inc sbb (bad) repnz je (bad) push jle jp or scas fisub push adc loope dec jl cmpsl cmp (bad) cmp sub mov dec add pop neg out mov into iret inc lds add lret (bad) mov cmc divw jmp jmp xor sub outsb hlt mov rcr jp push mov insb mov std dec aam (bad) xor rclb faddl push inc add mov out fild test fisubrl cwtl mov xchg mov stos mov pop or jo and sub cld out (bad) inc fwait fwait push mov jne pop fldl (bad) push jno pop ljmp add and inc sbb xchg cs cli std jp sbb ja cmp orl jb lds cs pop and push pop add scas shrl aad div xchg jne out stos mov push jns xchg (bad) lcall fwait sti xchg iret jecxz int3 mov xorl repz mov push in push cmp lea inc aas sbb push insb mov add leave adc pusha lret pushf mov test out ss (bad) addr16 rcll jl adc sarb inc mov fisttpll fdiv (bad) sbb mov mov sbb (bad) in lock dec cmp xchg sub fisub (bad) data16 push pop and arpl js dec shlb push popa pop dec sub mov mov dec stos inc jle dec jnp jo mov xor or jb dec addr16 xchg repnz call cmc out lret cmp out cmp dec add xchg add and sbb inc xor push insb daa push test imul dec idivl xchg repnz (bad) faddp dec adc pop adc cld dec icebp movsb repz orl call in fs out mov or inc mov jb lcall data16 (bad) cmc gs inc rcr flds mov mov es mov leave mov cmpsl cld in addr16 push fiaddl sub cmp sub pop sub adc push bound scas stc loopne hlt rcll (bad) lret jecxz rolb push pop aad xor dec sbb aas sub xor cli mov sbb mov or and pusha aaa dec mov xor add add sbb xchg sbb mov imul dec dec mov jg jnp (bad) aam hlt add dec shlb push addr16 in mov push jp pushf cwtl cmp jecxz jl adc mov and jo push sti lods insl repnz xchg mov add and ja sahf loope mov pusha loopne cli sbb mov popa je aaa in lcall mov xchg xor sub dec std add pop in mov cmp out jb lahf jne enter fmuls ret push movsl les mov xchg push loop xlat into push cmc xchg outsb xchg subl push into jns popf pop lret push mov icebp mov inc jg lock das (bad) sub mov clc ret adc add (bad) xchg nop test push sub dec inc call mov shlb pop sbb stos or fcomip scas fmul shll rorl lds jnp imul popl (bad) shlb push addr16 in lea mov (bad) jp jl adc jecxz and jo mov lods mov sbb xchg mov mov data16 daa push adc lahf out push (bad) mov sti and sub clts push sub cld jecxz mov outsl test xchg inc lret lds insb ret or fdivs mov std ja out gs cmp cs xor dec jae dec xor cmp push lds add jb lock mul mov repz push fadds outsl jns inc fstl sub adc or enter js cmp loopne dec pushf sub sahf sbbl jo mov (bad) iret dec inc pop adc cmpsl adc xor sub push inc lret das addr16 fs pop scas jnp sbb leave pop dec repnz xchg pop add push pop in jge out rcrl adc and or and cwtl insb shrb bound mull jp int jno addb mov sbb push cltd sub outsl push or test jae (bad) cld mov aaa inc test sbb test sarl pop or hlt sbb dec (bad) inc xchg test (bad) js scas call inc mov jns shll aam xchg dec cli repnz mov stc cs cmpl mov pop bound jnp push data16 imull lret mov push mov add ret sub int cmp xchg and ret rcrl movsb pop mov jg clc pop jo imul (bad) and cmp arpl inc mov js (bad) inc mov push insb out pop sbb adc pusha insl cmpsl lea in add jle dec push out adc xor loopne mov mov xchg inc push mov test cwtl (bad) mov jp and jp jns xchg mov dec fdivrp or sub cmp test test loope sub and push sub imul movsl mov adc jmp insb mov je in xchg pop or aad test js cltd clc out aas pop mov mov jae lcall or lods (bad) ret jle lahf mov (bad) dec aam movsb faddp sarl in pop and pop mov leave push es cld imul negl loop xchg (bad) jl ret arpl sub cld lock hlt outsb mov mov hlt das scas and push je push mov dec mov imul mov or andb dec lret xor adc test dec int3 mov xor xchg fiaddl fptan jle jae mov xchg push sbb shr in lods pop dec cmp stos xor adc lcall sbb (bad) fdivl dec push pop popf inc xchg cmp lcall mov jb or pop inc and aas mov mov inc cmpsl inc jnp dec js insl (bad) mov sub mov lahf inc arpl in jl and ljmp sub lods ret jne cmpsb or push xchg dec (bad) mov xchg lret loopne leave clc mov mov push mov jl xchg mov push loope push aaa mov cmp mov imul dec and sub or insb jmp je xchg push pop cltd adc mov push inc xchg outsl adc adc fdivr repnz sbb pushf test aad pop jmp (bad) jb mov or and out clc ljmp (bad) cmp rcr cmp cmp sub inc mov or dec pop xchg imul cli lods cmc fldl int ret in loopne into inc lret rolb xor dec pop mov repz cs sahf int (bad) mov daa mov add or push jecxz pop xor scas inc das aaa (bad) (bad) iret sbb xchg push push imul inc mov ret repz xor js mov fcmovnb pop adc stc lret xor push push icebp (bad) pushf add xchg fsubrl xchg (bad) mov es sar dec jno mov cld mov fstl iret inc dec test je sbb outsl (bad) sbb dec sbb movsl mov test sbb lahf sub add pop popf (bad) ja cmc dec or out dec test sub and xchg add ljmp mull notb fwait xor daa aas mov adc pop or test inc mov mov clc aaa cmp out loop das cmp pop imul jl hlt mov popa in mov mov jb js inc mov jne adc pop subl lods addr16 mov jle cli xor and orb sahf push inc ds in outsb icebp (bad) xor xor xchg fadd sub stos rol dec jno mov std mov cld push lcall iret sbb cmp fprem and and stos or push sub in push clc loopne mov imul mov rcrl mov aad divb bound xor (bad) dec jo dec xor (bad) pop push ret cld or in cmc repnz and push aam insb jbe inc ficoml daa loop add pop dec (bad) mov scas cmp (bad) dec cwtl sub sarb insl dec lods mov pop or ljmp (bad) xor popa nop push stos js push push add pop inc out dec xchg adc cs pop jmp push and fcomp shrl cmp pop (bad) mov sbb test xchg pop cmp xor cmp sbb jl enter arpl test gs xchg popf data16 fnstcw cmpsb cmp in and out add bts in imul mov daa adc pop lods (bad) jbe push pop sbb cmp dec ds mov stc outsb adc cmp push or pop and mov aaa dec add xchg inc and sbb inc xor and orl or inc idivb xchg and dec fsubrl rorl adc cld xchg icebp movsb cmp mov lahf add (bad) mov push and out test in cmpsl mov out mov or inc mov jb cltd cs sbb sbb inc cmc fs add fcmovnu andb les mov es mov enter inc in stos fist xchg flds loope jle sub add inc mov fidivrl jmp test lds push xchg mov cltd (bad) out mov adc inc aas ret (bad) mov mov mov push clc ret (bad) cmp add xor sub outsb inc out (bad) cmp mov sahf mov stos sbb fidivr inc fisttpl es nop iret rolb xchg push jg jp (bad) rorl hlt add dec adc xchg sub jo fstpt imul dec push push cli sbb push aas out mov pop mov inc mov jno mov es adc adc imul sti fidivr and ljmp paddusb sub mov nop inc inc xchg mov jae fdivs jbe and mov jne (bad) lods jbe fucompp or mov das cmc divl mov pop cmc leave cs clc rcrb loopne push xlat shrl jns inc fstpl sub addl xor test jb insl idiv movb fistpll pop jg pop inc sbb jmp dec insb arpl mov push add int3 push out adc xchg add ja jb mov icebp loop pop aad or ficompl xor pop xor mov pop push and clc les in pop mov fcomi movsl out (bad) cmp (bad) (bad) js mov cmp sti adc clc sub inc adc in pushf pop out faddl (bad) jecxz adcl mov add dec cwtl mov sub xor (bad) (bad) enter sub aam wbinvd bound popa sbb leave inc pusha mov mov lahf aas (bad) pop aas add stos or xchg dec das lret fnstcw jno or lods mov movsl rolb lock mov cmc ficom shrl sbb pop insl (bad) push aad out push pop push sub popl sti cmp jl ret adc fsubl push jb std inc repnz push adc mov xor jp in and xchg imul bound into cld sbb mov push sub ja pusha cmc push or addr16 out mov mov iret dec imul (bad) xlat dec int and cmp push and mov jp repnz mov cmp xor jbe xchg mov leave loope andl adc inc cmp pushf pop cmp fcomps in and jno push dec or mov push mov push adc dec inc sbb mov dec sbbl adc mov and cltd mov push out (bad) cmp mov pop jge gs add out or pop daa repz imul xchg sub dec and sahf ss xor jmp pop (bad) and addb or xor insl loop fisubr cmp addr16 mov mov inc pop call sti pushf jle out and jbe sbb jno adc push jg mulb pop xchg cmpsl arpl add xor xor mov inc mov test push inc cmp add push push mov cld xor cwtl mov mov popa cmpsb iret ret and sbb enter notl sbb repnz xchg mov pop sub popf mov into fs mov jno mov mov cmp inc cli jg shlb ja test rorl mov add sahf cmpsb outsb in (bad) loop in add in add les pop lock mov daa pop movsl lods stos xchg je mov mov mov xchg lret (bad) mov jl imul mov push loopne push xor inc cmp xchg and cmp adc psadbw mov pop clc jg pop jecxz xor sbb arpl mov or jle cld cmpsl add mov add mov or mov fdiv rcll imul pop repz call cmp test es xor cmpl (bad) push enter push push pushf (bad) xchg aaa xlat pop repnz popf mov jae inc into mov (bad) fs or mov std push or pop test pop push (bad) ss cmp daa (bad) divb push cs xchg jbe insb dec add cmpsl jns xchg add cmp xor inc sub adc adc (bad) sbb and inc cltd addr16 mov jge inc out sbb ja mov push pop popf push mov (bad) xor ja lock fild ret outsb xchg fs sub lds cld dec in scas das sti mov fcomp dec fistl into mov pop std or push fldcw pop outsl pop in movsl mov movsb mov test sbb mov loop add jbe and pushf shlb dec or sub jg cmpsl ljmp jmp and mov aas mulb cmc setb (bad) mov cmp xor push push or in adc push inc sahf pop inc mov mov test imul mov cmp pop scas int jnp repz pusha jmp loopne daa (bad) lahf ja repnz test push pop (bad) xorl stc xchg ret pop (bad) clc into dec and aaa mov mov int adc das push sbb ret dec and bound jecxz push mov (bad) andl mov daa sar leave imul jmp in push xchg fiaddl (bad) adc add inc mov push lock arpl hlt ds rcll (bad) lret sub pusha sbb clc xchg pop mov aas sub xor out xor shlb mov jle push or lods inc mov jl mov jbe inc and sbb xchg and pop pop mov push enter imul dec mov (bad) dec repz dec lret insl shlb fldl int3 ffreep mov bnd mov mov insb call in xchg add js cltd fwait out loope pop rorl int3 push mov cli sbb inc movsl mov (bad) test jle dec mov adc bound jne shrl std inc inc insl pop in mov jg je xchg out xor and jbe or dec push or aas xor clc icebp mov pop sub iret pop cmp mov ljmp dec push adc xchg mov mov lcall xor das subl test call pop cmp nop test (bad) sub incb add mov mov lahf popa in cmp cmp fcoml xchg or aam rorl or data16 push addr16 sub lea stc cmp jp rcrb or pop sti inc lock repnz sbb cmc cmpb add imul sbb fldl lods push andl and mov mov push pop cltd jno jmp in mov mov int hlt out aad lret or insl pop aaa rcll fnstcw js lock mov cmp cs je (bad) mov xchg jp (bad) fildll ret (bad) cmpsb ss add ficompl and stos sahf divb xlat push xchg leave aas inc jle outsb xchg adc imul mov xor dec jg pop adc cltd daa (bad) fidivr pop adc dec add pusha loope dec mov sub mov sbb jne pop ja and pusha cmp or test and pushf xor and or add or movsb ds or xor loopne fs mov neg in xchg xor dec jbe push cmp lret inc arpl test test ret or in push fildl and dec push movsb push int3 adc stc aas call sub jecxz shl enter add int sbb push clc (bad) cli pop xchg (bad) bound mov pop ss das jno mov aaa jmp imul push sbb mov pop dec jns pusha xor in pop and arpl scas enter inc (bad) addr16 and pop aaa pop daa out lret ret subl movups dec inc pushf ljmp cmc js cmpsb jl iret outsb jecxz fildll cmp jns icebp mov pop jmp cld sahf jg lock mov xorl rcll in mull pop xchg test xchg test mov and jge sbb xchg inc cmp iret xor dec enter fadd es insb mov test mov lods in stc daa push sbb ds fistpl leave mov or repz scas inc dec mov sbb xlat sahf mov iret and ja loop pop das xchg outsb push pop and mov mov aaa nop fnsave inc rorl outsl call pop pop arpl nop lahf inc in add stos mov fsubrl aam jg sbb mov xchg dec or clc xchg xchg fwait test mov jmp cli jnp xchg mov push popf sti adc rorb sbb xor rolb mov or sub in jbe sbb fs into or test dec adc xor xchg lret mov fnstenv ret push aad dec gs popa dec push sbb pop jmp cmp stos xor shrl xor pop pusha iret (bad) fnop push push push or arpl pop repz cmc fnsave adc or jb or mov (bad) imul xchg mov insl push mov jo sbb pop lahf dec jo outsb jecxz cmpsl mov aam add lds ss mov imul inc cs std ficompl iret rcll aas xor imul jb xor stos push cmp xchg es jp adc adc mov stos mov pop mov sub and sub les sub push ret cltd adc mov push cld xchg nop jbe sub xchg out aad shlb jnp xlat sti scas sbb push inc mov icebp pop (bad) jge out je (bad) adc lds cmpsb and push adc xchg cmp jl mov movsb inc mul fbstp xchg xor mov ds gs push pop or push inc lahf pop inc mov rcrl in jg push jno cmp push jae adc dec hlt mov popa in and mov mov pop sbb mov xchg lock xchg or int3 mov iret dec and cmp or push inc or or cltd mov rdmsr sub inc js lret enter lods sub (bad) imull nop clc pop repz pop jae (bad) push int3 (bad) and notb mov xor fcmovbe mov xchg (bad) in pop jne jno mov inc inc imul xchg dec jnp jo xchg jmp outsb push fbstp or sbb jb xchg mov sub hlt in test push and sbb xlat scas (bad) out test dec dec ud1 lods lcall mov xchg push loop cmpb mov jle scas mov std in cltd cmp push cmp adc aam movsb xor es inc sub sarl imul add leave push jecxz push inc das fbld jmp sub js sbb rcl dec mov adc dec push movsl xor and lds jp mov push push pop cmp xor pop dec sarl inc outsb popf arpl adc test fs xchg pop in loopne sub mov mov insb dec imul add rcl mov xchg jae mov mov dec test jno mov in sub dec outsl ss xor jg stos jge push ret cld or xor aaa fldl dec (bad) xchg add rclb fiadd push mov vfrczpd cld ss dec lret orl pop add push jno xchg icebp add adc lret lahf push faddp sub jb imul jae mov add add fmull (bad) xor sbb cs test icebp test dec loop cmp push jmp (bad) ret mov aad les mov and stos jmp (bad) fdivl fsubs xor pop cmpsl jb ljmp loop xlat mov cmc xchg ja jmp adc cmp or push js lock mov mov aam sti aas je out sub (bad) mov jg mov dec cmp add out sub sub mov pop mov pop pop mov sbb lcall repnz nop iret cmp mov jp (bad) (bad) fs add dec rcrb fwait mov aad sub push cmp jecxz and adc mov stos scas outsl sbb jmp xchg sub inc loope and iret and push pop and lcall jp dec aad lret call adc popa dec sub outsl pop nop inc mov dec lods dec adcb xor stos and sbb je dec imul es into cmp cs cmp adc dec xchg xchg mov cltd shl mov in add xor mov mov mov pop cmp (bad) jg dec inc xlat mov outsb mov (bad) cmp std push int lret sahf mov out mov and sbb enter dec ret dec dec sbb pop in rclb cmp and rcrb add lcall bound mov jg lret xchg mov and cwtl (bad) lods sub cmp add (bad) sti push push aaa xchg test mov sub mov sbb (bad) mov mov movsl sbb jns xchg popa (bad) std cmp xlat ja inc call bound mov dec cli rol push dec stos ss sub jno ljmp mov pop movsl and mov loope inc fimul test rcl inc aad insl enter ret adc push stos dec shll push imul jl sahf lcall pop push std and mov push inc repnz popa mov (bad) mov xor mov rcr adc sub push loopne xor fsubrs shrb fist stos cmpsl jnp mov xchg inc inc int call (bad) and les mov inc stos outsb inc xor sbb add inc or push or mov cmpsb popf in les push mov sub sbb insb sub pop mov jo push dec dec mov cld push clc addl or daa dec adc mov pop pop cli fucomi dec or in xor faddl push mov shr jecxz in mov sarb and ja data16 imull aas scas (bad) dec call and sbb mov movsl lret (bad) pop adc outsl lock repz sub fimul xchg lods jae mov (bad) sbb pushf jae stos xchg ds adc sarl pop sbb push dec test dec rcrb arpl xchg int3 inc and rorb leave sbb sbb ficom es dec out iret faddl mov fsubrs movsl and adc xlat sub xchg xchg adc ficoml sbb pop insl push jmp xchg mov mov xchg (bad) sahf sbb fildll adc mov and add ss push xor jge movsb out (bad) cwtl sub rcrl sub repz lods cmpsb cmp rolb cmp push je dec or lea xchg adc fwait jge jns mov mov aas and xchg jns push jg int3 in inc pop lret test adc lods cmp out push fbld popf and ret call xor push packsswb inc mov adc push mov pushw lret mov mov cld aam dec gs pusha dec lods pop cmp das pop dec sarb stos xor lcall push iret movsl xchg clc cwtl pushf popa or cmpsb aaa (bad) aad sbb mov sub mov lret push in dec (bad) xchg push loop pop cmc fsub lods mov (bad) into aas les pop add leave dec push (bad) mov hlt divb call ljmp xrelease mov push mov imul inc rclb nop adc sbbb and inc add scas mov xor add add cmp fldcw xchg mov xchg mov stos mov pop or outsl and popl movsb std mov adc push fadds leave xor sbb sub movsl push sbb out movsb mov test aad push call sahf mov xor xor and out cmpsl andb call and sub imul insb nop inc mov dec xor mov int cmp xchg and ret xor adc inc pop push inc aaa cmp out loope sarl jne imul cmp pop mov repz stc xlat inc pusha in and mov sbb popf (bad) mov xchg lock xchg or lret aaa ds mov ja ret mov add inc int3 cwtl inc or dec loope mov (bad) xor js xor pop (bad) mov test insb pop or mov out out (bad) in repz inc sti cltd sbb jae mov test adc notb outsb xchg pop jo xor add mov enter add sub dec clc jbe and pushf add or outsb outsl les fistp mov mov xchg icebp add and in lret xlat mov hlt repnz cltd fisttpll jne dec fsts daa loope aas add add clc inc ret cli pop cwtl sub cltd jl iret rolb mov lods pusha scas lret pop jnp ds push jmp dec inc das ljmp nop sub adc push shr dec mov adc jns sub xchg cmpsb shrl cmp xchg mov pop push xchg cmp cmpsl js mov mov and mov cmpsb cli in data16 flds sub cmp sub (bad) mov pop sub mov push out dec popa xchg insl out cld scas clc fild rclb loop roll add (bad) dec sbb cmp clc mov pop push loopne inc cmp inc cmp inc cmp inc cmp inc cmp cmp inc cmp inc cmp inc cmp cmp inc add cmp inc cmp inc cmp inc cmp inc cmp inc cmp add push inc cmp inc push inc cmp inc cmp inc cmp inc cmp inc pop inc push inc pop inc cmp inc cmp inc pop inc cmp inc cmp inc push inc cmp add cmp inc cmp inc cmp inc cmp cmp inc cmp inc cmp inc cmp inc cmp inc cmp inc add cmp inc cmp inc cmp cmp cmp inc cmp cmp inc cmp cmp inc cmp inc pop inc cmp cmp cmp inc cmp inc cmp inc cmp inc cmp inc cmp inc cmp inc cmp inc pop inc cmp inc push inc pop inc cmp cmp inc cmp inc cmp inc cmp inc cmp inc cmp inc cmp inc add cmp inc cmp cmp inc add cmp inc cmp pop inc cmp inc cmp inc cmp inc cmp inc cmp inc cmp inc cmp inc cmp inc cmp cmp inc push inc pop inc add push inc cmp inc push inc add push inc cmp inc pop inc pop inc cmp inc cmp inc cmp inc add pop inc cmp inc cmp inc cmp inc add add cmp cmp inc cmp inc cmp cmp cmp inc cmp push inc pop inc cmp inc cmp inc push inc cmp inc cmp inc cmp inc cmp inc add cmp push inc cmp cmp inc push inc cmp inc cmp inc pop inc cmp inc cmp inc cmp cmp inc pop inc push inc cmp inc cmp inc add pop inc add pop inc cmp inc cmp inc cmp push inc add pop inc cmp cmp inc cmp inc push inc add cmp inc add push inc cmp inc pop inc cmp cmp cmp inc cmp inc cmp inc pop inc cmp inc pop inc add cmp inc cmp inc cmp inc cmp inc push inc cmp inc cmp inc cmp inc cmp inc add cmp inc cmp inc cmp cmp cmp add cmp inc cmp inc cmp inc cmp cmp cmp inc cmp inc add cmp inc cmp inc add add cmp inc add cmp inc cmp cmp inc cmp inc push inc add cmp cmp inc cmp inc cmp inc cmp inc cmp inc cmp inc cmp cmp inc add cmp inc cmp inc add push inc push inc push inc cmp inc cmp add cmp inc cmp inc push inc pop inc cmp inc cmp inc pop inc cmp inc pop inc cmp inc add push inc add cmp inc cmp inc cmp push inc cmp add cmp inc push inc pop inc cmp inc cmp cmp inc cmp inc cmp inc cmp inc push inc pop inc cmp inc cmp inc cmp inc cmp inc cmp inc cmp inc push inc cmp inc pop inc pop inc cmp inc cmp inc cmp push inc add cmp inc cmp inc cmp inc cmp inc pop inc cmp inc add cmp inc cmp inc cmp inc cmp inc cmp inc cmp inc cmp inc cmp cmp pop inc cmp inc cmp inc cmp inc add add cmp inc pop inc push inc pop inc cmp inc cmp inc cmp inc cmp inc add cmp inc cmp inc cmp inc cmp inc add cmp inc cmp cmp inc cmp inc cmp inc cmp inc pop inc cmp inc push inc cmp cmp inc cmp cmp inc cmp inc cmp inc pop inc push inc pop inc cmp inc cmp inc cmp inc cmp inc cmp inc add cmp inc push inc cmp inc cmp inc cmp inc cmp inc cmp inc cmp inc cmp inc cmp inc cmp cmp inc cmp inc pop inc cmp inc push inc cmp inc cmp inc cmp inc cmp inc cmp inc add cmp cmp inc push inc cmp inc cmp inc cmp push inc cmp inc cmp inc pop inc cmp inc push inc cmp inc push inc cmp add add add pop inc cmp inc cmp inc cmp inc add add cmp cmp inc cmp inc cmp cmp cmp inc cmp push inc cmp inc pop inc cmp inc cmp inc add cmp inc cmp inc cmp inc push inc push inc cmp inc cmp inc cmp inc cmp pop inc cmp inc cmp inc cmp cmp inc pop inc cmp inc cmp inc cmp inc cmp inc cmp add pop inc cmp inc cmp push inc cmp inc push inc cmp inc cmp cmp inc push inc cmp inc push inc cmp inc pop inc cmp inc cmp cmp inc cmp inc cmp inc pop inc cmp inc cmp inc cmp inc cmp inc cmp inc cmp inc push inc cmp inc cmp inc cmp inc cmp inc cmp inc pop inc cmp cmp inc cmp inc cmp inc cmp inc cmp inc cmp inc cmp inc cmp inc cmp cmp inc cmp inc cmp inc cmp inc push inc push inc cmp inc pop inc cmp inc cmp inc cmp inc cmp inc cmp inc cmp inc cmp inc add add push inc cmp inc cmp add pop inc cmp inc cmp inc cmp push inc cmp inc cmp inc cmp inc cmp inc cmp inc cmp inc cmp inc cmp inc cmp inc cmp cmp inc cmp inc pop inc cmp inc push inc cmp inc cmp inc cmp inc cmp inc cmp inc add cmp cmp inc push inc cmp inc cmp inc cmp push inc cmp inc cmp inc pop inc cmp inc cmp inc cmp inc pop inc push inc cmp inc cmp inc cmp pop inc cmp inc cmp push inc push inc cmp inc cmp inc cmp inc push inc cmp inc push inc cmp inc pop inc cmp inc cmp inc cmp inc push inc add pop inc cmp inc cmp inc cmp inc cmp cmp inc cmp inc cmp inc cmp cmp inc push inc pop inc cmp inc cmp inc cmp add cmp inc cmp inc cmp inc push inc cmp inc push inc push inc cmp inc cmp inc add push inc pop inc cmp inc cmp cmp inc cmp inc cmp inc pop inc cmp inc pop inc cmp inc cmp inc cmp inc cmp inc cmp inc cmp inc cmp inc add cmp pop inc cmp inc cmp cmp pop inc cmp inc add add cmp inc push inc cmp inc cmp inc cmp inc cmp inc cmp inc cmp inc cmp inc cmp inc cmp inc pop inc cmp inc cmp inc add cmp inc cmp inc add pop inc cmp inc cmp inc cmp inc add cmp inc cmp inc cmp cmp inc push inc cmp inc cmp inc cmp inc cmp inc add cmp inc cmp inc add push inc add cmp inc cmp inc cmp inc pop inc cmp inc cmp inc cmp inc cmp inc cmp cmp inc cmp inc cmp inc cmp inc cmp inc cmp inc cmp inc cmp inc push inc cmp inc cmp inc cmp inc cmp inc cmp inc cmp inc cmp inc pop inc pop inc cmp inc cmp inc pop inc push inc cmp inc cmp push inc cmp inc cmp inc add cmp inc cmp inc cmp inc cmp inc cmp inc cmp inc cmp inc cmp inc add cmp inc pop inc cmp inc add push inc cmp inc cmp inc cmp cmp inc cmp inc cmp inc pop inc cmp inc cmp inc add cmp inc cmp inc pop inc cmp inc add cmp inc cmp inc cmp inc push inc cmp cmp inc cmp inc add pop inc pop inc pop inc push inc cmp inc cmp cmp inc cmp inc pop inc add cmp inc cmp inc add add cmp inc pop inc cmp inc cmp push inc cmp inc push inc cmp inc pop inc cmp inc cmp inc cmp inc pop inc add push inc cmp cmp inc push inc cmp inc cmp inc pop inc push inc push inc cmp inc cmp inc add pop inc cmp inc cmp inc add add add add cmp inc cmp inc sbb imul dec pop cmpsb lock cmp in ror jecxz ja xor mov js add rolb loope pop in dec xlat jnp or and jbe push stc add scas mov les xchg cmp ljmp leave cmpsb xor fildll pop jbe jmp and push andl jno jns adc xor rorl decb shrl inc loopne cmp sub adc push imul movsl inc aas add (bad) mov imul inc xor jae aam mov push mov or mov mov jp dec es fbld push lcall fcompl out nop inc or sub sbb xchg scas pushf aad (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp sub in ret loopne nop sub pop push imul and arpl mov fisttpl dec mov insb fcmovbe pop add sub mov push mov call (bad) iret outsl shr adc movsb xor push je dec inc xchg cmpsb mov push push sub test int3 ja aaa aaa mov rclb clc jp test fwait or xchg cmc (bad) sub fild xchg or adc cmp add pop cmp xchg rcl lret loope ja sub mov js add addb iret (bad) aas nop xor pop shll push cmp pop xor pop scas mull push (bad) lods ds out lea cmc and sbb cmpsl enter mov jle movsb push test (bad) scas lcall xor frstor jns (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall mov push dec cmp dec inc jne lds cmpsb sahf stos mov jnp xor jle fwait cltd in scas mov jae fsubl adc dec mov sbb ss gs jnp mov jns or pushf jmp jmp (bad) mov mov push jecxz or jbe addr16 pop xorl imul test movsl push fcomip ss lods sbb sub mov dec or movsl cmp inc pop movsb es fisttpll mov clc adc inc lock cmp or mov dec inc pop in pop test jbe push mov call into inc jge test mov test roll and imul je pop les adc aaa xlat out vandnps ud1 insb mov cmc stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp hlt and fsubp enter les adc (bad) dec mov mov (bad) mov mov add mov xchg jo jno movsl rorb mov (bad) jae sub lods mov push jp fwait dec xor jmp pop inc mov xchg dec gs fsubp iret push pop add call (bad) lahf icebp fstl push push pop add insb lret and push lahf jb cli sub cmp mov xor inc mov push dec aas pop rorl sbb or mov test push xor xor xor sub cmpl test shr cmp pushf jl hlt jecxz pusha ljmp movl aas mull sbb inc jo fcmovnb adc cmc loope cld jns adcb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp lds xchg scas sbb nop and in xchg rcll cmp mov push push arpl lret adc mov jl imul mov inc sub pop inc cmp jecxz fcompl mov mov cmp push (bad) sub pop mov mov add mov pop xor cltd mov out mov mov stc mov or adc jmp sub or cltd fucomp orl aas pop gs pop pop adc adc (bad) negl adc jecxz cld ja mov out inc aaa out inc mov lods inc outsl test sti enter sbb mov sbb add mov fsubl (bad) push dec mov sub fidiv std gs dec push pop xchg rcrb mov std icebp sbb shrb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec fisubl ja pop cmc jno mov mov test scas mov pop (bad) out jo xor ret (bad) inc sahf ror (bad) lret sbb fcmovne dec sub cltd jne mov ja sbb sarb sub pop jb push sbb arpl inc (bad) pop push jle or pusha or bound ret roll jae js or sbb push adc loopne mov addr16 leave js adc jecxz xor add push insb sahf lds popa mov loope imul insl sub imulb stos clc mov lret lock mov push insl jecxz pusha fisubrl sub cmpsb popa and pushf mov call jl stos fimull lret movsl outsb sub mov scas mov sub jp lock pushf (bad) adc xor inc inc daa jmp push mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jns jno out sbb lock sbb cmp daa lahf or scas sub (bad) imulb or adc add sbb xlat add add shrl sbb xor xor mov or loop dec push cmp push mov xchg stc pop (bad) rolb or push scas mov push stc add dec lea fcomps cmpsl enter ss xchg imul mov xchg (bad) stos xor int mov dec es movsb cli push inc or push (bad) arpl mov mov (bad) (bad) int mov and xor icebp test in icebp xchg jmp pop and sbb or call jns incb jbe inc in fwait sbb ja stos lret aad sbb push clc lods xchg xor dec stos insl in insb jne rclb arpl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall (bad) inc mov hlt xor and out mov test pop fwait popa mov loope sub cwtl sub sarb lahf pop or pushf int3 xor sarb mov inc out scas fdivl ret pop xchg fiadd pop jmp repnz push or add hlt insl jle push and dec decb mov ffree xchg push mov lea or xchg fisubr fs into or (bad) cmp or aam repz enter xchg dec lock das adc (bad) dec mov mov sbb cmp pop subb jb jbe jo jnp (bad) dec pop jo outsb push inc loop test enter inc or fdivrl pop mov adc xor pop pop or ds sbb insl gs (bad) xchg jno (bad) and adc repz (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in aaa pop test inc fisubr jo popf sub mov push push add sti jne (bad) fdivp sub (bad) xor lds xchg sti mov mov ds incl mov mov mov inc in hlt aas test pop push and sub add adc dec es or xchg or dec pop and aad pop insb je outsb push jl sub popa push cmp mov mov int (bad) jmp push in pop push ds jns test xor fadds mov hlt xchg fstps push xor sub fst mov mov popa and mov fisub push fstl ret outsl rclb pusha sbb mov add dec push push jns imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call cli dec addr16 xchg sub jns mov or mov or mov cmp aas add cs add cmpsb xchg mov sbb sub pop cmp pusha aam lret jecxz ja fcomp insb mov xchg icebp inc adc test xchg lcall aas jmp mov adc inc aad fistpl lahf push mov out mov fldt dec test add xor ss cmp popa idivb cmp enter push fucomp add test jl dec pop (bad) fiadd mov pushf pop (bad) mulb lds pop ffree push clc sbb and adc jp mov jmp add in xchg pop push loop or insl jnp aam mov xchg mov pop lods subl movsb iret dec fildll (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp inc shll call mov add aam mov cmp inc lret push fwait bound in decb xor push xchg xchg and scas mov ds lret cmpsb hlt lret fdivrs (bad) xchg insl lcall std mov test mov stos jecxz jle (bad) cmpsb movsb cmp nop pop nop sbb sbb sbbl lea cltd ret mov xor (bad) sbb insl and mov fwait dec inc (bad) mov iret je movsb or fisttp mov jecxz or mov rcr dec sbb xchg das ss lods rcl mov sbbb cli outsl xor fildl xor out xchg cmpsb in dec xlat lock pushf inc pusha pop popf inc sbb xor and cmp jno shll (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp mov cmpsb push addl clc inc stos into sti or int mov ja popa adc adc jbe or ss adc (bad) jb push mov jne rcr jnp ret cmpsl stc mov xor inc sahf in dec push bound aaa call lock xchg lock fild dec mov sbb cmc arpl add call mov testl cmp xor ljmp sahf push xchg nop add out mov les sub hlt stos btr push insb push jmp pusha xor mov cmp jle cmp and mov xchg fstl add dec mov mov dec fstps sbb sarb stc cmpsb jmp jo adc xchg sbb fsubr fiadd push and lods (bad) inc push sub inc shrb xchg cmpsb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl or jns jge notb cli dec addr16 xchg sub jns mov or data16 add cmp or jle popf or in adc pop mov das cmpsb xor xchg lea lds add inc in leave popa push repnz mov test daa inc pusha repnz push or sarl or sub jg inc pop loope or add lcall (bad) ja mov jecxz out jl xchg lock fwait mov movsl inc pop cmp jecxz inc (bad) ljmp push lahf dec mov repnz dec push decb aas add repz adc xchg push xor ret cld scas and xor or mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push mov fidivl cmp and cli dec ljmp outsb in in out xchg les mov push dec jp popa sub cmpsb shlb cmp jg cmp inc lods pop lods push (bad) add fsub aam jmp mov lret adc sub cmpsb mov mov sbb imul je cmp nop cmpsl in jbe push push das jg cltd mov dec adc dec aaa dec repnz cmpsl fwait xchg lcall mov cmpsb int stos push jle jp xchg out jo cmp jne std sub pop dec jo mov sbb fildl cmpsb lock sub sarb movsl mov icebp xor sub mov rorb cmc mov and adc mov seta fst mov mov das push stos pop push mov lret out (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp (bad) and mov pop mov in lret ret negl jl stos mov mov push pushf push add cmpsb or arpl je data16 or cmpb mov popa (bad) xor out sahf in jnp aam sbb dec pop mov mov or lret roll jns push jecxz dec jns pop jae xchg mov (bad) cmp inc stos lret aad sbb inc repz mov push (bad) out (bad) stc (bad) jne popa fdivrl lods std sbb adc sbb adc push fistp jl and (bad) outsb push cltd jns push xchg jmp in rorl and pop hlt inc push call int3 xor addr16 fs divb jecxz pusha fiaddl push mov lret divb std test (bad) mov xlat daa xchg in ljmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl inc mov cmp jl push mov push hlt popf (bad) jns js and inc inc aas out (bad) push adc pop (bad) fwait or xor icebp (bad) iret mov push shrb (bad) xchg xor jp (bad) xor jb stc cmpsl dec add lret jecxz scas fs jl subb mov mov out aas (bad) out popa xchg stos or jnp stc lods jae nop pop adc sub sbb into inc xor add sub popa sub outsl inc cmp add test mov jns scas xor fucomp or cltd mov jp in or arpl jo les jmp sbb sub cmp inc xor cmp in mov cmp and out mov cmp push aaa cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl addl lea cmp mov movl das add pusha ret out pushf sbb or sub cmp dec push lods jno scas pushf aad pop lahf jbe push in dec (bad) stos and mov lcall push stos clc mov mov fmul loopne inc dec lret and adc sbb insb pop add loope sub push and mov pushf cmpsb jae xor sub test je mov repz test test idivb aad push pop aaa aaa mov push lcall dec sbb js int3 repnz sbb sbb mov js cmp imul movsl test mov jb outsl cmp mov arpl popl mov adc scas rcrb jmp dec and push dec pop js clc cld dec mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp jbe (bad) ja xor lods scas push inc sbb cmp inc mov test add outsb cli cwtl push dec in fimull lret rcrb test xor jp push add shrl cmp rcrl jmp sbb push xchg jmp pop hlt lds enter push (bad) jae outsb rorb (bad) sbb out dec aaa ret cld or jo dec dec call add push addr16 fist push xchg dec xor popf imul push or or call push ljmp rclb btl dec adc cmp mov inc pop jns mov xor fstpt out dec scas insl cmpsl insb mov pop add cld rorb dec pop cmpl mov pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call xor adc mov push or inc (bad) cmpsb cmp (bad) mov jae jbe xor inc (bad) ret push sbb dec gs leave xlat sbb cwtl cs mov xchg xchg and test in mov adc pop sub mov (bad) mov hlt pop das fmuls in push lods fwait xor ds (bad) in inc inc loop test jo loope jmp mov mov ljmp pop scas mul fistl sub jb sbb pop jge outsb ds in (bad) addl jns or xor aad (bad) xlat loopne cltd icebp icebp sbb cltd in mov sbb icebp push pop cmpsl xchg mov mov dec xor jle mov clc sbb xchg repnz movb pop dec mov xchg push in popf push (bad) mov imul lods cmpl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl and mov xchg arpl sti xlat das (bad) outsb cmpsb fnstenv xchg jne xor icebp dec pusha popl jo repnz jmp les repz movsl mov insl push jmp sahf int in ja outsb pop cmp stos movsb lods add add mov push or scas pop into sbb (bad) xchg sbb aam jecxz aad jb add mov mov jae subb push pop add je cld mov aad sub mov cltd adc cwtl inc enter sbb push jmp mov ja fs push dec sar xor dec adc aam (bad) call xchg sub lds push pop mov add mov dec aas sub sbb lahf je popl mov test das sti enter pop in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall mov iret pop daa xor lea sbb and mov cmp jb add mov loopne sar xchg in dec test rolb iret add inc je (bad) xlat add les push inc pusha or scas jbe jno loop aaa dec pushf cmp cmp data16 add sbb and fs in stos mov jae push mov sar ret dec add inc jle ss dec js lds test add jno pop das sti jl or mov mov or ss cwtl xor sub pop push pop or (bad) cmp dec test movsb mov arpl test mov or add add adc stos pushf mov ljmp xor inc daa pop and sub movsl cltd pop test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl stos std test stos fiaddl mov test and lods repz iret (bad) je inc test mov das sbb add ja iret xor in mov and daa cmpsl mov xchg out into adcb push mov cmp sub dec lock sub cmp aas test lds dec ret jge das cmpsb aaa or jle xor inc rolb dec and fs push xlat push or xchg xlat jnp xchg cmpsb xchg dec iret mov pop mov mov adc jb or imul cmc fsubr pop not fidivr scas xchg mov xor xor test pop lcall cmp inc cmp mov fucomp push (bad) xsaves mov mov lcall pop mov lea dec negb push shrb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec icebp out adc cmp out or into clc (bad) stos (bad) sbb sub xorl jp fnstenv cmp inc mov pop xor fcmovne fcmovbe push or xchg scas les test pop jp mov adc adc in ret and nop pop mov push mov xorb xor mov sbb pop popf lret sub mov jne out mov cmp cmpsb out xor neg movsb das icebp and pop (bad) mov cmp sub xchg out adc jae hlt jle cmp sarb push push pop (bad) daa mov add inc push shlb mov sub push lcall clc test xor fincstp fimull or mov repz (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push sub in inc cmpsl popf xor bound stos sbb and inc mov pop (bad) nop fwait fs jmp pop push insb (bad) dec lods (bad) inc leave stos jp dec mov cmp mov fnstenv lret jg aas inc inc mov push (bad) jns call rcll mov and cli pop out (bad) cmp push xor push mov jl push xchg jbe fldl aas pushl xor inc jle imulb fwait mov xchg push aas mov jmp das sti pushf mov push mov mov push cmpl pushf dec sbb cmp xchg add outsb icebp pop cmp pop faddl jne cmp popf aad and aas int in ret adc outsl rorl mov mov ljmp stos xor cmc (bad) and aas adc and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp and mov push (bad) lahf aaa xchg ficom scas adc sbbl add and mov das xchg int3 mov push cmp mov xchg testb and cmp fnstcw mov out fs vmread fistpl or mov sub pop imul fsubs (bad) jnp pop in lds adc sbb xor adc cwtl push pop lods mov dec push mov enter jnp adc jmp loope dec (bad) dec ljmp pop scas (bad) dec clc fild sarb cmc and stc out cmpsl enter cmp int push std push jmp bound (bad) (bad) xlat ja sbb (bad) or jle xchg mov cmp pop jae ja test mov fcmovne (bad) mov (bad) sti mov outsl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp lret stc test (bad) call dec fwait test mov sub inc movsl adc stos aaa orb fs (bad) xor jp std dec (bad) fistl dec jne sub (bad) pop sbb in icebp sarb arpl and pop mov insl push jmp sahf int mov outsl les mov lods xchg push add adc mov lea dec retw icebp mov js or mov test sub ljmp in aas into or mov xchg cmpsb and lods inc pop pop pushf mov mov lods mov mov dec inc cmp addr16 mov mov mov or mov add inc push (bad) loop (bad) loop ss pop movsb sub out push xor shrb fnstsw push out xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall xchg adc js fisubr jmp adc mov imul mov jb or in data16 xchg (bad) push adc sbb sub push add or pop sti icebp mov cmc loope std (bad) cmp xor cmpsb repnz mov cltd sbb insb sti adc stos xchg pop loopne inc inc xchg (bad) addr16 mov outsl xor orl (bad) out pop xor cmp add pop adc fwait gs cmp xchg pop add or and pop jp jnp inc xchg lret fist sbb mov add outsl (bad) sti nop scas js decb inc adcb fcom icebp dec ss insl cmpsb fldcw sbb jbe adc mov fdivp lds inc pop xor push add (bad) clc mov push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cwtl movsl xor lret ret and xlat jae jmp inc enter sbb fsubr fdivrp pop push and cmp xchg pushf jno fsubs jl outsb push outsl jbe push cmp lock or xchg xor cmp xchg xor or test fwait push aam inc (bad) loop ret lods ret dec imul nop and gs dec push cltd loop stc mov inc aam jne data16 shrb cmpsb ret sub outsb mov mull sti mov cmpsl js mov mov (bad) mov stc test pop xor jae jo cmpsl add push or push inc inc push lods lret int3 sub mov dec add inc jns cmc aaa addl or mov movsl ficom call mov sub push popa mov push bnd iret mov hlt mov dec push lcall and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call add or cmp addr16 push sbb or movsl xor call mov loop popf xor cmpsl cmp ljmp sti outsl or daa dec fbld xchg xor popa mov push pop jecxz xor imul push call je mov int3 stos adc clc xchg jle pop and nop xchg ja (bad) push jns lds (bad) and and ljmp add jp mov aaa adc je mov (bad) test in pop popa fcoml jl call push iret outsl shrb push sbb lods movsb xor and dec das xchg int3 mov jae ror test mov xchg sbb loope out dec push inc cli test jle sbb int3 js mov cmpsb fidivrl fbstp fbld jg jmp pop in dec push dec mov ret mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call or and (bad) jno addr16 rcr xor add mov aaa sahf ljmp mov jnp and test movsb lret fisubr push pop test std sbb mov push mov in loop pop fwait mov bound inc jle (bad) push ds (bad) lods pop add mov pop (bad) leave and repz xorl mov xchg add sub mov arpl cmp js aad xchg aad out mov push adc cltd inc inc aas cmp mov ljmp jmp cmp scas loopne cmp xchg jecxz cmp test out hlt adc push sahf arpl and ljmp mov or aad cmp push sbb je ret push out push sub sbb push xor xchg adc cmp push fwait pop out (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov mov mov (bad) xchg pop into mov mov outsb xor call add jecxz jle fisub mov test shl aad and cmp rorb and testb leave enter (bad) adc mov in jle jae cmp js cmc mov pusha xor fidivr and insb (bad) std fs loope call (bad) repz aaa mov add cmp sbb (bad) jae movsb insb mov xchg aas sti fildll mov sub daa push sub jbe (bad) idivl insl mov inc outsb adc sbb fcmovnbe mov test in or js push sub cmc adc sahf cmp push xchg cmp imul jns adc sub outsb mov push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec add ret cs inc das adc pop cmp mov sbb or mov cmp dec in push mov add inc ss pusha aam mov lock scas xor and pop jp jnp inc xchg push jbe mov nop pop jo sbb loopne movsb push and pop push push add (bad) mov hlt lods das cmc jl cmp mov and nop popf push jbe inc cmp mov lret mov mov dec xor scas into jae mov dec push in rclb mov fs inc sub mov not int3 mov adc sbb lahf pop xor mov loopne dec (bad) push das sbb mov mov notl cld xor inc arpl inc (bad) (bad) leave enter out insl scas cs fcomps inc js jg imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fbstp mov pop (bad) mov leave stos (bad) xchg cmpsl inc std lret mov or test xchg ss fsubrl clc cmp ljmp adc stos jg testb xlat in mov push aaa icebp rcll fwait add call imulb (bad) mov or mov cmp cmp fidiv jae or icebp mov sbb (bad) mov or add pop imul push dec outsb mov in int mov ds mov dec or add mov mov in test in (bad) cmp das push dec mov pop sbb push loopne xor add aam insl dec jnp push dec inc outsl rcll fldcw aas fs xor xchg sbbb inc incl pop pop fistpll push push cmp fs imul out (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp fild (bad) pop cmpsl mov int3 fnstenv aad mov sbb inc jl mov inc add pop roll adc sub cmp cmp ror adc dec pop data16 and xlat arpl sub test (bad) inc pop ror mov (bad) fldl xor sbb sbb ljmp mov lods inc fsubs and out dec pop gs jbe jg or int3 sub mov mov mov push andl xor cs ret popf scas scas lahf and sub inc cwtl lcall lock mov mov aam inc ja or mov inc (bad) xchg mov sub clc lret leave pop lret and nop repnz xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call dec add mov ss jl push jne adc jb xchg mov cmpsb cmp (bad) dec iret lock cwtl cmpsb mov mov fidivl xor jge cs push jae pop mov pushl dec jns push add sbb in ss xchg sbbb or add mov (bad) jp push push sub sbb mov mov (bad) and pop mov call inc add ja fcomps mov xor sub adc cwtl aad stos jecxz mov outsb and test data16 add in rolb sub rclb out push jle cmpxchg pop pusha inc adc shlb (bad) push decl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call mov (bad) dec test adc movsl push push test add cmp push int3 fimull inc xor dec jp fbstp push mov and adc pop cmp bound sub xchg and mov mov scas hlt int3 sbb js cmp or (bad) jl or fcmovb ss test ljmp pop jbe sub xor add vpacksswb aam fwait outsb dec ja mov mov sbb outsb (bad) mov test xor inc cmc mov dec and jno into stos pop dec les mov inc mov arpl mov outsb repnz jge adc fsubl bound aam dec pusha cwtl jmp dec aad sbb xor sub aaa push xchg push or repz (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp insl pushf ficomp push outsl adc cltd subl cltd aam add inc lret or lods push sarb les and push mov jl aas shll out and cltd iret sbb stos movsb push mov mov xor test mov and jne or cld popa jp or es lea xor adc and loopne jo in push mov pslld iret rcll sbb adc and repnz (bad) push push or fdivrl mov andl mov add and rorb push push mov and adc insb fistpl pop mov lea fistp inc es jge push dec mov js jecxz xchg inc inc out (bad) jecxz pop ret adc add or enter mov xchg cmp sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc sub imul gs cmp mov das sti dec mov jecxz inc (bad) jle stos fidivr adc pop sub xchg pop (bad) pop bound xchg bound fsqrt inc (bad) xchg test xor and pop cmp xor dec lods aaa mov test mov sbb and mov mov lahf aaa and mov aad dec jnp aas xchg add pop outsl sarl lds fcmovbe and fucom push push xchg daa outsl rcrl scas lods mov je mov xor cmp (bad) imul add loopne (bad) lahf test inc shlb shrl shr adc stos je lcall mov fstl inc ss fs cmpsl or mov push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl push sub loopne cmpsl fiadd (bad) imul add out sbb sbb pop xchg lret mov dec aaa mov pop out lods cli mul inc pusha add aaa lret push frstor stos cmc das test jae and lods ss push std notb clc test cwtl dec test gs cmp pop xor mov repz pop repz jp inc fadds or fsubrl mov mov cmp push es pushf jecxz adc push cmp xor mov cmp js add dec pop jnp (bad) or in sarb dec gs push mov nop pop test xchg push mov in rcll (bad) je xchg pop outsb mov push push popf nop cltd mov inc rcll arpl xchg (bad) std or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl mov fistpl repnz test jns repnz je mov fcomps cltd cwtl push push inc sbb mov add jns stos sub loope pop push add shrb jno xchg insb stc push imul insl (bad) (bad) cmp adc push cmp addr16 (bad) (bad) into inc xchg icebp ja xchg das fimull in ret cltd fimul fildll xorl addb cmp (bad) int3 sub or dec sahf xchg xchg test gs setge mov push sbb rcl sti outsl (bad) repz mov lods cmp push mov enter lds push dec fdivrl pop daa inc (bad) adc sub lods cmp inc insb dec out lea mov xchg mov je imul outsb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cli xchg lods mov mov imul inc jbe xchg mov jmp lds pop mov scas int cmp xor xor (bad) push pop (bad) movsl sbb sar jle fwait jnp arpl mov es ss test push ret paddb inc cmp inc test sbb sbb fnstenv push (bad) cmp push or addr16 pushf xor das push pushf push xchg or cmp sbb fcoms jp push aad test loopne (bad) sbb xchg add loopne imul enter enter jl xlat lea dec mov js fsts push stos std cmpsb jmp sub mov push jnp push enter fimull dec dec outsl sub mov movsb mov mov (bad) cmpsb fimul jp cmpsb call mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call sbb jge mov or xchg jp or mov xchg mov int cmc fsubr inc popf rcrb pop mov in jmp movsl shll cmpsl lock xor sub (bad) and mov mov sbb dec fs fldcw pop sti cmpsl movsb fisubr mov mov (bad) xor mov mov in divl and cwtl sub out pop jle das mov out stos pop (bad) jmp xchg rclb pop insb or jl pusha insl js add adc mov stos inc pop ss inc lock cmp fistl test loope popf test lret xor (bad) aaa jge fnstsw and orl or hlt int3 push cld movsb clc jge iret push (bad) push xor dec stos pusha pop cmpl ja scas (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl nop outsl out jge xchg cmc les shr xlat les mov push outsb scas pushf aad cmpsb ret out imul dec aad or (bad) jns mov je push dec mov jg insb mov add fwait adc std mov lods cmp ss lods jne mov xorl xchg sbb nop jl pop (bad) hlt cmp inc sub stc and and cltd push push and bnd mov out mov (bad) xchg mov dec insb rcrl (bad) ficompl ljmp in add loope jg cld das test popf adc xchg insb sbb aaa sbb andl (bad) xor cmp mov (bad) sub mov mov cmpsl mov pop aaa (bad) (bad) xlat lods ds mov and cmc popa (bad) adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) out in in jle loope mov or xchg call icebp jno and adc lret add cmp jmp std ja jg imul dec or pop add (bad) int3 in lock popf push adc mov jnp jne stos pop sahf leave out mov cwtl add xchg hlt pop xchg jno jo cmp xchg aas daa pushf outsb sahf cmp xor decl cwtl mov outsb outsl pop int add popf and rcr sti jp ret insl fisubrl mov adc clc pop je push subl es (bad) stos xchg mov shrb addr16 ljmp add out in xlat jle (bad) mov pop in shll call (bad) xor fiaddl gs jmp lret icebp out inc std sub test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call fdivl fbstp push push jns jp jnp inc hlt inc jns inc pop xchg cmc cld ret repnz call in jno lods or adc popf push movsl roll mov in cmp loope sub pop adc mov ret ljmp and shlb mov sub fldenv mov jo es das stos push popf and push negl inc gs aam xchg je inc sbb sbbl push std add out xor sub into sub data16 ret outsl ret dec insl je bound fnop nop repz push dec cs add out mov sbbl imul stos xchg fldenvs dec pushl int jns jbe into jle ss je icebp jns mov cmp repz xchg jle add pop das js imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall and ret push outsb in in inc jns cmc xchg push (bad) icebp sbb fsubs not push ja das add movsb es mov inc lea lods cltd lds sbb ss mov nop xchg cmpsl mov pop cmpsb popa pushf inc clc pushf mov xchg or lock push scas mov cmp pop xchg pop jbe inc shlb imul stos push pop (bad) jp pop push pop xor cs adc stos xchg jnp dec rol mov cld or in pop xlat or nop and gs loopne or jp lods mov mov jne jecxz jl inc imul movsb push push push aas sti mov or mov jnp stc lods enter ljmp pop sti jl mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl or sbb int mov cmc and sbb xchg sub mov inc dec bound lret mov idivb xchg lock out xchg mov out (bad) int mov pop sub dec cwtl in jnp aam sbb addr16 mov push inc loope popf test xlat (bad) jns sub fldenv popa scas std xchg out push cmp adc push movsb out dec sbb mov das xor pop jo jnp xchg std mov adc xchg adcb decb aad ret aas cli clc lock inc std fmuls insl fimull xor push jle cmp adc add inc (bad) clc stos ret dec leave sbb lret dec dec fstps push ljmp stos aad pusha fidivl or sbb jmp nop cmpsl loope dec popf push push scas jl jae (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl xchg mov clc pop scas pop into jp or and fiaddl fidivrl out fwait dec insb adc pop push (bad) int3 dec or push in mov sub jmp aam pop xchg cmp cltd jl mov test sub and inc push jne cmp mov lods cli cmpsl js mov lret sahf loope pop xchg inc mov xchg stc pop enter ljmp pop pop cmpsl mov xor mov stos out std gs in aam push (bad) ficompl roll xchg add mov jmp test or jl fs std dec add xchg xor jns dec stos cmpsb scas jecxz (bad) mov pop dec pop aam sbb movsb insb pop mov (bad) repz push add add mov out jmp cmp scas loopne cmp xchg jecxz sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl jge popf int dec fbld (bad) mov add xor xchg nop fmull push push aas sarl cwtl fimul icebp inc std fcomps arpl xor sbb xorb mov insl pop mov test (bad) icebp stos cli arpl mov scas sbb xchg inc lock aam jbe cld add lahf test xchg mov (bad) jmp pop es mov cmp loop roll enter jg add mov sbbb push scas pop (bad) insl popa or xor (bad) push pushf cltd das xchg xchg test out (bad) fwait jle sbb add dec aad jns or fild stc sbb push dec mov test dec cmpsb ret div cmp push sbb daa sbb insb iret shll sub sub enter mov xchg jae jae daa inc cwtl xorl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall dec sahf fsubrl out movsl (bad) faddl fninit lret adc ds in fildll cmpl (bad) stos mov pusha aam inc mov in in xchg hlt adc jl pusha insl dec push add stos add (bad) and into and add stos in je dec rclb push pop dec popf loopne xlat mov mov mov mov icebp lods sub scas out xchg jle add push clc rolb imul mov inc mov in je (bad) and jmp cli dec repnz xlat adc xchg or movsb (bad) shrl frstor lret negb roll cli xchg jle int3 pop imul push push and mov xchg dec dec movsl inc push add (bad) cmp push fidivrl sub sub aaa lea add (bad) test push iret pop jle iret fs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call cltd cmp pop lods rclb add scas scas ret pushf inc lods cmpsl stos jno mov mov sub pop scas jns cmovne pop or faddl aaa lock or aam xchg fnsave fimul cld loope cmpsb setge xchg stc pop aaa enter xor (bad) fadds int jb push fdiv les fistpll xchg cmp lock in icebp xor movsb jecxz daa push notl ljmp ds lcall xchg mov add xchg scas (bad) mov xchg inc (bad) shl in xor pop inc mov popa stos (bad) xor mov mov pop cmp cltd cmp outsb xor xchg or jl (bad) int jl and or test call out mov lds (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl mov or stos push mov sahf xchg and popa mov repnz addr16 arpl inc sbb jp jecxz outsb pop mov js dec cli push mov jle push arpl fisubr shrb inc shlb enter xchg outsl sbb sbb sub add in or sbb pop out and cmp cltd (bad) loop movsb mov push rorl cmp enter arpl out sub push push ret push pushf lahf xor cmc pushf cli dec mov jno hlt inc sbb int3 js ss or and xchg fbld inc mov fsubrp mov xchg stc mov not fdivrs xor rep jo mov xchg aas ret mov push pop mov notb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fistp push icebp mov or lods cmp (bad) fmuls mov hlt and aas jne out inc (bad) mov dec movsb push (bad) in cmp sub xor xlat ja leave push add rol in jl fs jb pushl jo,pn rcrb roll or jno push pop sub clc pop leave dec pop (bad) xchg daa mov popf std mov add (bad) inc outsb inc ss pusha aam push mov cld push add hlt arpl cld mov sub xchg dec es aas in and int3 imul lahf arpl pushf xchg repnz sarb dec fistpll aad in push int3 sub add popf xchg loopne pop dec adc cmp insl stc clc sbb mov lds mov inc fldcw mov cld cmpsb add stos in bound outsb sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push sbb shlb push inc dec push (bad) push test inc shlb imul pop scas shll jp mov add ficompl shlb clc test fwait push push les dec addr16 or dec jns fbstp js cmp inc cmc fdivrs xchg xor popf daa push cmp pop das push jbe mov jb xor sub loop cmp aaa sahf ljmp test jae fbstp mov jae outsl fiadd movsl push cmpsl mov (bad) lods push arpl push jb or imul inc jns (bad) jbe and add xor addr16 mov jne ja adc lea mov and jb pop cmc insl je xlat icebp or push mov out mov aas pop leave jno push pop inc cmp xchg xor mov bound add inc sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl xchg test mov mov add (bad) cltd cld aas xchg gs dec stos data16 test mov push cmc lahf ljmp js mov add pop icebp mov mov mov in gs arpl clc (bad) lods xor div cmp cwtl das add cmpsl paddq pushf inc push mov mov lret xor xchg aad sbb mov shr lahf mov sbb mov push and nop sub push push (bad) mov or push inc je mov or popa xor mov enter push lods stos and gs jg cli add lods aam mov adc sub cltd xchg or inc fdiv push push inc mov adc sti dec push das aam jecxz ja xor insb ror push neg sub sbbb push nop sti inc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp xlat mov jnp dec aam dec into mov adc movsl (bad) mov test push outsb int3 aaa (bad) loopne scas or je faddl cmp jmp je add xchg pop add pop ret xlat mov sbb cltd in or xchg dec add jo enter push jae jns inc adc jno xchg (bad) into out je mov inc cmp xlat gs (bad) pushl fwait rclb fwait xchg sub imul scas stos mov jo jbe pop pop mov insl mov ds xor test cwtl xor pop adc scas js jmp les jmp push mov movsl icebp fsubs sub cwtl jae xor sbb lret sub mov cmp loopne int pushl sahf in pop into std fs fsts sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp xlat push (bad) adc xchg sbb sbb roll cmp sub add pop (bad) push push roll fs or push scas mov lea imul cwtl and inc sbb mov jae inc pslld add outsb inc fidivr and pop mov and pop mov cmp mov cmc pop das mov fs js cltd xor lods inc push popa push pop sub lods cmp xchg cmp fildll mov xor mov or (bad) adc fwait std and fsubs cs sub cmpl lcall out pop bound lret mov sbbl xor mov jns pop adc jmp jno add dec loope cmp xchg (bad) popf (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp lret jns push mov mov pop jae mov clc (bad) stos (bad) push push ds loop fcompl jg push popf fnstenv je cmp xchg std pop and sub cmp sub mov les in sbb dec sub es ljmp imul or pop or call iret xor fsubrp imul add test or push std in stc sbb or cmpsl in or loope mov push mov fdivrl lock push clc dec and daa ljmp out push leave push test fwait xchg jecxz ds test aam fucomip imul sub mov jecxz jle je in rolb loope mov fs mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl xchg mov cmp pop mov test jae sub inc std (bad) mov mov and faddl cmp ss mov xchg iret lret pop ret sub aad xor add and add int3 push push pop jl mov mov cmp xor insl insl js mov mov pop push mov ret std into (bad) dec cmp out pop sbb imul push jmp imul mov adc inc leave sub push rcll add cmp push jbe pop inc test iret sbb and and std dec xchg cmpsl mov outsb in repnz xlat aaa xlat jg sub call push jae (bad) fildl popf mov leave mov movsb lods cmp mov push pop or mov xor and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl insb xor cld cmpsb pop call imul or pop push and mov adc inc or xchg cmpsb mov out xor or xchg xor pop mov stos dec and cmp cmp dec sub js xor jecxz mov js int3 pop xor cmc fsubr cmp mov in push shrl adcb mov jns xor rorb loop stos add int3 mov pop mov sbb jnp mov (bad) jmp jmp lahf push cmpsb cmp ss and adc aas clc pop aaa adc cmp xchg mov pop lahf aas or sub xor lret xlat std sub orb data16 rep dec mov mov jno (bad) push mov stos int cmp mov ret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov dec rolb mov orb cmp scas jns push out jle leave out imul and hlt adc rclb pop int3 in and and xchg cwtl xor nop push pop outsl outsl scas in mov xchg jecxz dec (bad) lods sbb shrb iret in in ret insl xchg and and xchg push aas pop mov lea inc stos sub mov popa lcall sub call mov test mov je push push pop xor es mov (bad) and mov (bad) push and mov cld inc sbb rcrl into dec insb adc (bad) jmp or or ret sbb pop and pop repz lods mov popa inc mov fucomip mov imul das (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp mov or mov sub mov ss loope add xchg cmp sub stc test aaa es ljmp fildll faddl cmp (bad) mov in cmc and adc inc mov and dec test fisubl mov int3 jp jno mull test mov jae add push mov add mov in icebp or pop jnp mov ds arpl ret pushl pop fiaddl (bad) stos pop rorb xchg ja aam xor jmp repz inc test arpl jl in xchg std dec iret popl sub in push lahf aad xchg add mov pop fwait xchg icebp dec cmp pushf pop pusha fisubrl xor jle inc pusha shlb add inc nop lock (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call mov mull sub int dec mov cmpsl insb mov cmovb stos sbb pusha dec pop cli out add xor and xchg sub push push pop aam push je (bad) shlb je cmp les int3 pop imul (bad) add stos sub arpl cld inc pslld mov xchg xor js sub in outsb cmc dec aas movsl push imul icebp push and sbb dec pop sbb fwait pusha (bad) sbb xchg shll sahf mov jge jae,pn xor mov push or (bad) add aas insl gs (bad) jecxz pop aaa cltd mov int loope lret movsb add push cli adc push inc push jne frstors mov sub incl notl dec insl je push add lock neg push xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp into sbb mov cmp aam sar add loop jle dec icebp fsubrl ret pushl dec fwait jno xor fwait cmc sbb inc pop add push add bound jbe (bad) xchg add xchg dec lods psrlq push jns pop fcompl pop pop fwait data16 pushf nop (bad) imulb pop in int3 sarb les mov inc push pop push arpl xor jle dec adc add and pushf vpsubsb mov jb fnstcw aad aam sub test in arpl sub cmp loop jle sbb ret loope frstor xor scas mov lds les xchg (bad) mov into pushf loopne mov popf call call out jae or or push mov fistpll push lds xor pop adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jns add imul das sub or stos popf xor cld inc push popa push dec aam lods mov (bad) adc fcomip daa pop clc mov scas jb sub mov (bad) fnstenv or cmp xor aaa pop cmp inc repz xorl cmp (bad) adcb fisubl ja fmull ljmp ljmp xor push inc jle pop dec adc inc in (bad) out jecxz jecxz dec jmp pop mov loop jns mov out mov inc inc sub cmp jbe push inc mov ds sub mov xchg push cmpsl and arpl dec push pushf pop scas bnd imul and (bad) mov push icebp sub sub pop imul sbb xchg sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc fistpl dec mov mov dec call enter bswap mov push mov cmovb (bad) mov pusha inc xchg dec mov inc xor and scas mov push or scas pushf push (bad) mov mov arpl sahf test sbb paddq push dec pop pop ud1 jnp gs inc lcall add pusha in xor mov outsl mov pushl dec mov mov sbb rcr cmp push gs imul mov push rcrb jmp dec inc sbb int (bad) rclb sti mov scas or sarl std leave push lret pop xchg and xchg rolb negb ljmp inc test sbb aaa (bad) hlt scas rorl sub mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl ljmp inc or cmp pop push repnz in pop cmpsb test mov or jns out jl adc pop jae mov add (bad) pop arpl push dec fnstcw and or imul iret cwtl mov outsb outsl scas js jmp repnz mov scas arpl xor sbb rorb dec push outsl shll mov push (bad) or (bad) dec dec or sbb mov pop push mov clc (bad) adc xchg sbb imul sub pop mov cmp push (bad) mov adc jnp fsubrl adc lock or xchg xor pop mov inc jae clc test outsl adc add repnz adc shlb xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp sub mov (bad) repz mov adc push icebp pop imul iret add dec (bad) icebp push stc les call mov add jnp stc test (bad) inc ljmp aam mov fsubl in inc sbb insl gs or (bad) mov jmp (bad) ss and adc mov je cmc push fisubl push inc enter in idivb and push add fldenv loop xchg das lret dec jmp push outsl xor xor icebp jae in icebp xor jb cmc movhps (bad) jne outsb xchg xchg sbb adc inc pop mov mov mov sbb cmc arpl loope push outsb sti (bad) fnop cmp and xchg or dec not sahf (bad) pushf ret rcll xchg add push aad xor mov sti lcall (bad) adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall push imul nop add and sub cmp sbbl sub mov mov sub (bad) adc xchg sbb sbb or outsl shrb xchg jne aas pop inc sarb mov or push out push cmp fiadd xor pop jbe fs or clc adc into clc in into js popf and fiadd xchg (bad) mov adc push sbb adc jmp xor cmpsb ret (bad) into repz jmp mov popl cmpsl xor cli push inc push jbe bound jnp pop dec mov gs lret or movsl (bad) mov xchg cmp das out mov or push sub xchg dec aaa adc jg loope cmp add mov (bad) int std sub cltd or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp sbb jl add and pushl cmp push clc jle pop dec adc jno out jmp mov mov outsb jge idiv decl insl mov lret mov sub jmp cmp or popa lds sti ret stc push test or push dec cmc lahf popl pop nop dec outsl aam cmp pop mov loop push dec icebp movsb mov insl fldcw (bad) sub xchg jns sub clc popf lods xchg stos mov adc xlat jb jp jo fs loopne aad sub mov xlat frstor mov sbb push or xchg xor notb pusha in (bad) pushf xchg in std das mov sbb lods sub add mov mov and jns (bad) xor fdiv (bad) cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp repz mov outsl adc dec fisubrl fucomip cmp jge mov imul fs sbb or loop sub enter sub xor pop lods push ljmp movsl sub shrl inc cmpsl jecxz push sbb ficom inc scas and ds out inc add mov add lret lret aam rcrb mov inc int3 xchg jp pop pop test mov arpl xchg dec and lret addl push or inc pop mov push hlt insb inc add sbb adc inc pop (bad) and (bad) cld cmp in test xchg jle push cld mov sub xchg cmpsb cwtl and xor adc xor es hlt mov xchg pop rolb push pop jns cmp and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push test out push hlt shl sub cwtl test aad (bad) clc pop or push add stos bound arpl push lcall test xchg aad loope sub cld sub xlat popf adc add mov das out and (bad) iret test sbb out test cmp enter push andl mull mov mov test cmp fs sbb aas int3 js and call add dec ficompl (bad) xlat jecxz mov mov lods ret das cmp xchg inc xor jo push jecxz rolb jmp iret adc pop lods mov int sbb (bad) stos xor cmp ss push mov jb cmc dec lods dec jne mov repz dec aas leave dec jae notb mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fidivrl fnsave into or fwait jnp test les mov cwtl shrb inc adc mov movsl dec pop and adc dec and xchg in jns repz mov fcmovnbe jmp pop inc cmp orb inc jecxz ds adc sbb mov sbb (bad) enter mov aas dec xchg cltd js icebp insb (bad) xlat pop xchg jg mov movsb inc push out lds out xor sbb fsubp hlt call movsb lods push fiadd push mov (bad) ljmp fcmovnu mov (bad) dec imul xlat loop xlat and test mov and call mov or mov nop add pop lods jb dec je cmp push sahf add pushf int3 daa inc inc aas push cmpsl ret inc jnp pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl or sbb push xor leave outsb scas jmp les inc or div arpl dec or imul cmp lea ja lret mov lods testl sti inc bound xlat push or imull test fsubr sahf ljmp or mov test cmpsb or sbb sbb repz or dec out sbb xchg xor pop inc mov push jne dec frstor mov xor inc ret insl aas push pop (bad) mulb (bad) test ss ror loopne lock decb loope dec rolb mov loope sbb ret push out xor push aas inc leave sub push in add cmp jmp mov mov sub in jl loopne sub fmull pushf nop xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call xchg ret sarb dec ret pop je icebp mov cmpsl je push shrb incb mov shrl push push sub add (bad) mov inc mov rorb dec cmc popa mov mov arpl sbb cmpsb jle sarb aas mov ss cmp adc fldcw mov loope cmp lock pushf int3 mov int rcll jb push mov mov mov inc inc aam in or mov outsl mov dec (bad) adc popa inc mov icebp jmp dec sahf adc aaa sbb jg cmp xchg inc add mov sub adc (bad) enter sub rcr dec and inc inc push mov into in push xor dec dec (bad) xorb dec and pop aam mov xchg in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add clc adc out xor lret mov jl stos lea je out mov jge in (bad) and into mov jno push mov (bad) out je xchg pop cmp xchg cmp and jne pop (bad) xchg mov adc pop add push add pushf mov scas (bad) jg dec test addr16 aaa out xchg addl ljmp in mov outsb cwtl cmp sub jl jno cli fst lea xchg sahf dec adc mov mov jl cs xchg push repz (bad) cld stos cmp lds pop ss mov lret into mov fisubrl sub mov int3 push (bad) test loope aas insl push pop jle mov pop xlat sub shrl or sarl in nop imulb mov and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sti aaa enter (bad) out push fiadd out lods add repnz or ja push inc iret xlat aas and sub in in fsubs ja out (bad) and pop in xor fucom or ja xor mov adc lods rcrb push das fistl movsl mov sub stc pop (bad) and and push pop inc insb popa and mov adc jecxz sub popa add dec repz push xchg sbb out mov lret inc (bad) je icebp mov cld cltd in jl push int stos pop or jnp outsl (bad) test faddp sub sub in icebp push repnz sbb xchg push push add out jns (bad) sbb dec sub test jl scas fdivrl sub jmp sti push mov jg sub xchg popa fbld (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call arpl ss scas pop sti subl mov pop in xchg inc push imul pushf pop mov jmp cmp imul decb faddl sbb in pushf lds rorb inc cmc fldenv scas cmp pop adc adc mov adc xchg mov cmp adc shlb imul ljmp push imul inc (bad) fisttp fimull mov dec insb pop jg inc pslld add pusha xor xlat aas and int3 pop mov cmc fsubr clc adcl add ret mov or into fs (bad) fsts and lds ljmp sti enter mov mov jae sbb inc ljmp arpl or or movsl sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp in xchg ss call pop add pop jecxz adc gs add mov lcall push int stos pop clc rorb (bad) aas mov inc clc roll pop insb xor aam int3 xor dec sub out sub xor inc push or (bad) mov dec jecxz stos inc xchg aas mov mov lock xchg cmp addl sub insl mov jne and xchg or dec pusha adc arpl mov repnz ret cmp xchg sar mov call fstps sbb mov add test in fstpt es dec pop fisttpl and cmp push stos hlt cmpsb jmp push pop cwtl mov inc mov in inc pop dec xor lods adc ret add scas and cltd enter je (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc add shrb jge pop cmp inc enter fimull stos dec in cmp inc pslld or mov adc and test cmp and dec mov mov pop aam sbb sub data16 fs sbb (bad) repz inc loop cmc jg,pt loope das pop lods mov (bad) xor (bad) fcom xchg loop adc push push mov lcall lret int test cld or cltd xrelease pop test adc es push ja and xchg add (bad) cmp negl decl jo cmp in stos inc rorl cmp aad je dec rolb sub loope push xlat idiv jns fwait jno ss mov test sub in inc cmp cld arpl jbe (bad) shlb cmpb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp xchg (bad) mov pushf outsb bound add xor dec push outsb outsl scas mov ret sub ret jne arpl sbb or je jle jno (bad) add inc dec add stos pushf (bad) xor std jl fsts sub push (bad) lahf mov inc mov call add add or scas std dec mov and and ss or test mov aas fisttp fimull push pop adc dec cld inc jo xor stos mov xor les cs pop cmpsb enter pop in cmp lods ret shld lret mov loope cmp cli push call inc bound daa jmp push inc pop paddq and aaa loop inc sub (bad) push and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov fisttpll sbb cs sbb ds pushw inc push sub cltd add jp scas ffree daa xlat ja sbb xchg jge sub xchg mov (bad) fnstcw mov cmpsl mov mov out mov or out ds push and jns imul sub dec xor dec and scas pusha test push jbe mov notl popf (bad) mov xor sub popa and repnz pusha cwtl xor js mov (bad) xor pop cltd mov push dec dec mov or shrb and cmc xchg jmp in or in and mov add in pop into sbb stos jno sub fldcw and loopne pusha stos push aaa add leave subl iret pusha push jbe loope sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl shrb xchg cmpsb mov mov xchg stc push sbb int3 ja daa aaa push pop fcmovb sbb enter add vmread (bad) or aam outsb loopne aas and popa sub xchg outsb cmc fsubs jmp mov cmpsl mov push das sub xchg xchg lahf into orl jo push mov aas sti mov cmp sbb int3 clc insb pop push fistp iret pop (bad) repz adc sarl subb add xor dec repz pop lret test out mov push xorb inc mov jl cmpb lods push call test and mov into (bad) test in dec movsl ret je dec (bad) mov adc push bound add pop insl mov jae inc adc pop xchg cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jle add push clc rolb cmpl mov shrb xchg arpl negb shrl insb xor into imul cli mov sub scas pushf adc std and ss loopne cli sub pop cmp ljmp rclb jb mov dec mov scas (bad) mov pop adc sarb add add sbb pop mov addb and mov fldt jnp test jb and mov int test fdivp jge inc insb adc or pop pop mov or pusha jns sbb add outsb andl push sub imul icebp stos (bad) test pop fiaddl mov sub push mov xor daa inc pushf adcl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call jbe lahf faddl scas adc sarb or fldt push out mov imul or daa jmp (bad) xchg add add sub test xlat arpl pop je add xorl insl aam add add push mul lahf stos mov pop out mov dec pop ret jnp je mov (bad) into xchg push cmp jns popa cld or dec icebp popf cmpsl xchg sub (bad) ret cld add mov or (bad) scas gs dec stos push jno icebp shrd xchg std in shrb imul repnz rorl cmp je gs arpl or (bad) cmp nop scas in movsb xchg (bad) push sarl scas mov mov into mov lret jg sub andl mov xchg lahf divl add rcl push and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sti fnsave xor xchg pop push pop inc lcall inc inc je scas pop (bad) insl cmp data16 dec enter sub xchg iret push adc clc in popf js or push outsb js cmp leave data16 fdivr fucomp pop lock lds jmp xor gs loope (bad) xchg inc js inc rolb loop test fisubr sbb mov iret dec mov inc lea pop (bad) stc lahf push pop cs mov xor and mov subl or push lods adc inc clc out xor and dec mov ss xchg mov or (bad) pusha es and into (bad) xor out jp jnp ret loop je dec sarb popf std cmp add out daa (bad) adc out insb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp pop sub jg mov jecxz insl and ja mov mov ret lcall mov push cmc lahf nop cs in mov jns jl mov mov fistl scas push bound imul rclb xchg in (bad) out mov cmp mov arpl movsl pop lods (bad) es pop out test cld xor mov inc cmc mov fdivrs call cmp scas cmpsb leave jge sub lods hlt push jmp mov sbb outsb mov test or xchg xor fistp (bad) xchg fs jb or data16 jbe xlat leave sarl stos into js int3 pop sbb or xor popw push mov shlb fidivl daa test push (bad) cli push push adc sti pop test jecxz mov sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp cs and add mov hlt movsl push pop fmuls addr16 clc mov lea adc adc pop mov mov xchg mov insw xor mov sbb inc sbb sub sbb pop adc lock neg ret jo mov lret aam in je mov mov mov in pop je mov mov (bad) adc insl jg loope icebp xchg ret adc iret mov sbb test call jp mov and push mov faddl add lahf ljmp scas bnd decb aad (bad) aas xor fstps lret popf aad inc adc into divb rorl faddl cmpsb stos jne lds pop jge mov inc flds sub cld in in push (bad) lahf ja (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc mov sbb sub pop test pop push inc shrb xchg dec in cmp scas movsl pop imul sub jbe inc push aad out push fimul lock push mov jg jo or inc jno fist mov and shr mov xchg xor cli mov push cld jl push outsb pop adc mov inc pop push fiaddl mov aas out and mov dec and add jbe fmuls pusha push add sbb pushf int3 jmp pop enter mov or dec loopne notb adc push fidivrl frstor cltd add mov xchg das lea mov nop sarb fwait rcr mov cli jo aam out incb mov mov cmc (bad) idiv jns (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall mov out enter sub cmpsl stos inc sub push int3 push out inc add outsb mov shrb xchg idivb cltd js cmpsl insb (bad) mov (bad) call lock out push arpl and xlat inc in lds dec decl pop orl push enter xor imul inc mov add mov bound xchg sbb mov push adc insb sarl mov sub roll mov mov mov std inc xchg pop add aaa lock pop and cmp test (bad) lock pop xchg or add xlat aas and xchg mov (bad) (bad) iret daa aad cmpsb add xor jge xchg stc xor inc in sub out jb sub (bad) cmp sbb lods cli cld ljmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push inc jno enter test xlat jae,pn movsl jns inc ljmp movsl sbb xchg fsubrl cmpsb dec lea cltd rclb adc rcl inc insl add notb out fidivl lods fs push sbb inc mov fnsave push add (bad) addr16 mov fxch (bad) int3 jge lret pop xor in push mov pop fldl aas call jb pop repz shl pusha mov jns mov add push jbe adc jecxz rclb sbb sti popf xorl imul and xchg out adc loope inc xchg mov push dec dec (bad) jae and or xor (bad) cmp outsl rcll daa aas mov or sub add lret xor inc fsts (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp cld cwtl add lahf mov sbb fsubr (bad) inc push and nop sub push push pop leave daa mov imul jl scas shrl data16 ret enter sbb push fmulp adc dec insb push int3 mov (bad) or xor call xchg cmp cmp fsubr or mov into cmp insl adc lret mov fwait sbb test mov inc loop cmp sbb push pop xlat mov cs pop (bad) aam icebp mov push fs mov dec push dec call cltd add (bad) pop hlt shl test pop or negb add and inc cmpsl inc cmp xlat ja insl push add (bad) jle sti sub mov aaa dec nop cmp cmp addr16 xor icebp sbb in icebp push jmp adc dec (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall loopne xlat (bad) mov dec in (bad) divl jle leave insl (bad) mov sub mov sbb inc mov notl xchg sbb jge fsubrl je gs mov leave adc sub loopnew jl dec jp or in push jmp push (bad) call fadds sub pop fiaddl or or fnop xchg movsb and ret and jmp inc (bad) adc xchg sbb fmull fiadd ss xchg pop ljmp daa push and fimul lea and inc pop stc in and fiadd and mov xchg daa fimul into push and mov xchg cmp jecxz sbb pop (bad) jae mov sub sub or fisub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall jbe dec je (bad) jae jno (bad) div addl sbb mov dec es daa inc inc push mov push or push pop nop jb (bad) loope cmp lods adcl pop std pop xchg stos mov cmp fnsave fmuls cmpsb pushf xchg jp imul (bad) fbstp stc dec and mov jo adc mov or dec dec pop mov js loope push ret pushl pop cwtl fbld mov cmpb xchg lahf in pop dec sub adc js jmp das sti pushf mov es sbb jecxz jl popa sbb (bad) dec cwtl addr16 imulb out nop cmp cmpsl add pop push cmp push insb outsb inc xchg inc in pushf pop mov push orl sub enter inc mull (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp repz inc scas in ficoml xchg and jmp test sub fmull push sbb shl cmp ss push pop test push mov decb mov jg jns xor mov rorl loop out pop pslld imul add out sub fistpll xor fisubrl push sbb int3 lock lds pop push push std xchg (bad) xor push fs (bad) sbb xchg xorb push inc mov pop xchg pop iret push es and mov sbb sub cmp gs out push sub inc add adc push sti loope cld or dec xchg pop notb adc push fidivrl frstor xchg add mov shlb push add lea nop ror adc push mov pop out (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl (bad) out incb mov adc cmc fcomip (bad) jns (bad) fisub mov out cmp jnp sub cmpsl stos inc sub push cmp lock cmp xchg mov or mov xor inc adc mov jns js xchg roll scas pushf sbb and mov je mov outsl pop push mov iret fldl stos std add es cmp add lea inc fsts aam arpl (bad) adc xchg sbb fcompl leave or inc xchg ljmp inc push sub dec shrb imul je pop (bad) rclb xchg (bad) mov dec leave mov fnsave mov fwait popa mov in iret js (bad) or cmp rcr jg cld xchg int3 cmpsb nopl xchg stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall push in xchg (bad) xor mov jmp or test movsb cli push call enter scas adc jae dec mov jbe out (bad) (bad) movsl push or sarl or je decb sti loope cld or dec adcl jae mov adc lds mov sub xchg imul movsb lcall popa push mov pop mov into (bad) mov mov clc jl dec int jle adc push iret idiv jns fwait jne testl test xor scas push lret int3 ja jmp push jbe jae js xchg jne insl dec push push pop fdivp popf xorl cmp lahf mov sbb repnz mov jno jg mov mov push lods jp arpl sbb jbe pop sbb cmp sub add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) faddl adc stos pushf (bad) xor xchg mov dec fsts mov cld cmpsb jmp dec ficomp xchg sbb sbb roll cmp fidivrl sbb push xchg test pop inc shl pushf (bad) mov jl adc cltd add or js mov (bad) dec sbb dec cmpsb fimul xchg mov fs push add add add pusha ret out leave xchg and cmp fnstcw mov dec xchg add adc mov (bad) push pop push pop pop movsl (bad) out cmp roll (bad) repz stc sbb push pushf adc mov sbb lret fisubr push or sarl jle movsl fcomp push aaa adc inc pop loope adc xchg sbb scas xor and hlt popa adc sar insl stc out scas add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp pop leave (bad) xor icebp in add push push jmp adc cmp mov out adc fwait imul jmp out loope jae sub cmp ja js lahf hlt arpl std mov das sti js jge jle fnstenv xorl arpl sbb xor inc adc mov jns js push test repz mov sbb nop aad cmpsb jnp or mov push jle int3 js stc movsb lods loop add mov add inc (bad) dec dec adc jae dec lcall add jmp mov jno mov sbb fidivl sub repz movsb aam push je mov pushf dec pop jne scas shrl jno insb mov cmc mov push push jne adc insb adc mov adc aaa jns jo (bad) out imul jge (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl pop jp lods pop nop adc into xchg pop cmp sbb daa fs js mov adc inc push jne lcall or subb cmp sbb mov cmpsb (bad) (bad) or lods mov (bad) add sbb dec jecxz,pt scas and inc cmp jbe shrb out and push push lret aam push xchg sbb roll sub mov add (bad) pop jbe cs xor enter repz sub les push (bad) mov jmp mov mov or fwait or cmpl hlt mov addb jne xchg xor jp xorl xchg ja ja add nop pop lea outsl scas gs jle aad (bad) aas leave mov lods sbb int3 sub add popf mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov jbe pop lods push ficom pop pop pop or cmp mov dec dec sbb mov xchg and mov push loopne dec popf (bad) pusha js mov adc push scas inc fldl push sbb inc pop pop pushf sub loope scas pop (bad) insl xchg jge mov sbb comiss push dec mov hlt fs sbb add js aaa cmpsb push in xor mov outsl test dec (bad) enter aaa mov adcl (bad) not fdivrs loope mov je out inc aaa xor nop movsb cli push xor inc mov xlat push or rcl fimull out mov pop xor pop imul dec jge call jbe inc pop loope sti cmpl ljmp shlb add rorl push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp or push stc ds test pop pop mov into shrl ret data16 js je inc push mov test adc mov pop sbb push sbb mov and inc sub pop mov (bad) sbb jle clc lods inc jnp jge xchg cmp hlt aam arpl popf imul jae xor (bad) out jns cwtl repnz imul and pop femms stc rcrl insl push jmp popa xor popf xor mov aad push jns clc or mov scas test cmp into mov mov lahf adcb push (bad) lahf aaa xchg lcallw push fimull xchg cmp nop addr16 roll scas sar mov stc and xor jge push fucomip inc fimull out fsts adc notl xchg xor stc cld jle push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call aaa lods iret cmp push jle jl pop out inc lods ret (bad) xor dec outsb mov lret iret add dec shlb cmp push mov sahf mov sub mov fs mov push jbe rcr mov dec push lods mov xor mov test loopne xchg jbe rol xor imul fwait push repnz aad adc xor scas arpl xchg xor adc scas and das adc push in (bad) (bad) cmp out push mov push stc rcrl divl stos push addr16 adc sub adc ds xchg inc rep sti xchg je push cmpsb pop into mov in sub popa faddl pushf aas dec xchg cltd js lds out sub push mov insl push insb lcall (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl sbb push add sahf ret pop add (bad) in push cmpsl pusha stos fwait add inc pop push in insl fs lret sub in aad push stc sub or or sti testb jno ljmp rclb pusha jmp inc inc pop das dec dec sub stc and ss mov aas fild hlt call sbb sbb imul add add jns sub es imul gs dec pop popa dec out inc jne in std rorl mov ja xor sub push aaa (bad) push jbe sub pop mov and jbe cs into or push and fisttpll sbb cs sbb ds in mov andl mov int push inc push jne sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp hlt push fdivp cltd jns pop push fidiv stos add popf sbbl xchg rclb stos fstp mov push push sbb (bad) movsl jnp dec pop mov ja mov test jno adc fstps mov lods adcl adc testl push jbe (bad) iret or adc repnz and jmp xorl push dec cmc lahf (bad) movsl ds dec in push in mov loope jns test test xorb out inc or sarb cmp or outsl jmp andl jns test outsl add fsts lret cmpsb popf lods jl lahf mov sbb test stos fcmove mov cmp repz mov fwait and into test jge aad stos and enter inc out push fimul xchg orl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall cli add adc add cmp cmp cltd loop mov mov mov cld movsl negl popw adc mov test and scas lds fstp xchg loopne pop pop incb call xchg ret mov popf pusha fsubl into inc push ficomp mov cmp cwtl cmp adc push sti loope jmp push pop test out stos lods jns push push lret fbstp jno in or je xchg insl repnz add add dec pop dec stos mov mov in icebp mov movsl out je hlt pop cmpsl fildl mov mov mov xchg (bad) repnz fs adc int3 inc cmp div lahf shr pop ror lods aaa ret jp cmp mov adc cmp addr16 arpl mov repnz je jns (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl lock inc sbb popa cmpsl std mov imul rclb xchg dec sti and popf lds xor mov movsl cmp sub insb lods icebp aaa lea push sub jno (bad) loope push sbb xor cmp push (bad) inc add inc shrb pushf dec xchg adc scas in adcl pop mov outsl mov outsl xchg pushw popf push jo xchg push enter cmp in fsubs mov xchg jmp cmp jb mov xor fisttp inc mov push add xor aaa sahf es in dec xlat mov mov jbe pop pop and jmp xor mov cmpsb sbb gs enter mov jle mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov (bad) mov aad push and jl in jne push add jae js test mov hlt jne sub in icebp sub rcll lret repnz pop inc xchg mov mov jae fwait sub scas aas mov pushf push cmp lock or mov out popf xorl add out fisub sub and jnp mov or push jnp shrl push popf fadds hlt scas movsb lods add xchg xor mov int jmp cmp mov pop imul jno add mov inc mov stos push or scas mov decb mov or jno xor call (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) out push xchg cltd jne cld inc pslld add pusha xor xlat aas and int3 pop enter jmp adcl add ret mov sbb jg loope xchg inc xor fiaddl loop aas mov imul mov test fistp daa mov mov push pop repnz lahf adc (bad) jecxz jae adc rcll push test out and push push lret fdivrs sbb imul cltd push jnp jae lea xchg pushf push xchg decb mov stos lods cmc aad clc jae jno push mov scas out je hlt pop es or popf mov jns out sbb insl pop jae (bad) test mov hlt jmp (bad) jle cmpb dec es push (bad) cwtl scas sbb mov push je (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl sbb adc sbb shrl ljmp lods insl repz mov movsb sub in xchg jbe mov add imul sub lock xchg adc call int adc mov xchg and sti xchg rcrb add push fisub leave addl sub adc xchg jl scas mov mov cmp pop and (bad) push dec xor jecxz in inc mov lahf adc add sahf add add jns sub or xchg cmp push pmaxub sub rcr popa cmpsl ret pop pop movsl fbstp data16 fs js xchg pop and ja push or sbbl iret xchg cmpsl ret clc lods pushf mov add xor cwtl inc cmc dec jecxz add adc clc push or sub adc mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp pop or shrb imul into stos cmc sub pop data16 mov xchg jb stc lret adc (bad) mull push dec jnp cmp cmp mov mov adc push jmp ss imulb adc out or inc push xchg push or sub lock fcompp mov ljmp push pop cmc lahf faddp pushf outsl mov xor dec xor or jp mov imul sbb jbe push mov push scas sbb aas lret clc outsl or sahf dec mov dec push imul pusha pop sbb mov sub jmp in (bad) out cmp lret nop cmpsl sub xor push push pop leave jmp sahf lahf mov push sub addr16 xchg idiv (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl pop mov mov shlb mov cmp mov cli (bad) sub or in (bad) loop mov pop and mov push ret mov leave enter and mov js add stos add sahf or in inc pop psubb lock ljmp pop jmp ds pop cmc sub imul inc daa lds lahf aas sbb lcall push test test in stc cltd xchg mov inc pusha insl in add push test adc fwait pop push roll lea aad out icebp mov pop inc divl push fld (bad) decl cmc push xchg inc in mov sub cmp fisttpl out or jbe jb adc jge clc dec jno stos imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl test jmp movsl les pop or and repz fistpll ret insl ficoml xor imul xchg push (bad) lret repnz or and and sarb mov test dec cld sub xlat frstor mov pusha jno xchg xchg lods push xchg ds test mov mov add xchg cmpsl cmp idivb stc cwtl out into test jge data16 sbb bswap and push fimul test fwait push jl inc jbe or enter xchg dec loopne sbb fsubs mov mov sarl shll sahf push cmp fsubrs es aas sti inc mov xlat push or fsubrl test dec sbb bound xor pop inc shll add ret dec add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl jno imul mov in sar addl mov cmp push inc mov cltd cli mov and xor ret lock enter push adc adc stos inc cs lods clc insl and xchg (bad) gs xchg ss test loop loopne xlat jle jns pop repnz leave cmp and shrl (bad) ret cld xchg adc hlt push test das sti push cmp xchg dec es lcall push cs in adc arpl mov repnz pop mov stos scas sbb fmul inc pop sbb test jecxz xor imul cmpsl xchg push repz stos imul dec jne gs pop into mov inc into test stos jmp xchg push (bad) adc xchg sbb mov push and outsl cmpsb repz (bad) fsubl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov xchg scas (bad) mov outsb orl enter (bad) and push outsl jb jne adc scas les and pop bound mov outsl mov dec rcll sbb je in cmp xor (bad) pop pop mov xchg mov cmp adc popa push mov paddusw fstp mov mov sub mull fwait add ds xor jnp lret pop dec xchg jns leave or movsl push std or xor pop inc insb dec push stos inc inc adc jb jmp fstpl mov add add jge pop ret daa add popa (bad) xor icebp daa add icebp aam fstpl dec jmp sbb loopne or fwait cmp xchg mov lods scas and andl sar (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl cmp insl cmp mov push cltd fcompl or addr16 pushf xor cltd nop fmull push (bad) repz jg fldt rclb shlb daa das sahf int in or mov dec aad or inc pop jg mov and cmp bound popf pop jecxz sub imul fdivs xchg xchg mov xchg mov mov cmp push (bad) and pop in shlb imul incb shrl data16 dec mov lds inc in pop test (bad) add dec inc mov jp add push ret jmp mov pop jge push jns and bound mulb adc addr16 in sub adc out jo jnp (bad) and add popf jns sahf ljmp cmp jae rorb (bad) adc sbb scas sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) daa lret leave sbb push sub cwtl sub adc push repz fild test fs lods jns push push lret (bad) repz push mov jl xchg lock xchg xorl pop mov iret (bad) mov fcmovne push sub cltd jne mov ja or push xor jne cmp out lret cmpl add xchg jle push cld push out test push dec fnstcw and test arpl loope mov fisttpl outsb push aam insl inc xchg cmpb adc add cmp sub cmp sub sahf xor jle iret push pop push xor and hlt sbb ret pushf lds mov jp movsl into cmp aad in insb mov test dec add cmpsb adcl cmp aas sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp lahf (bad) das push std mov mov (bad) mov arpl and cmpb int call call out jae (bad) lock sbb sub and dec (bad) or bound insb inc jne sub cmp movsb das cmpsb (bad) or lods into ret cmp fnstenv jne enter inc aas sbb xor inc ljmp mov bound cs sbb insl mov xor aaa adc xor movsl xchg aaa pop test movsb loope adc inc sub dec push mov addr16 (bad) (bad) lea (bad) cli lods test mov mov push out lods andl jmp push gs xchg adc movsb lea ret cld scas (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp push cmp xchg jecxz data16 into in notl lea out les imul lahf in mov adc out (bad) (bad) sub dec icebp mov mov sub pusha xor mov push subl add jne subl pop fstps scas pop xchg and shrb test in xlat pop jo xchg adc mov das push dec xor adc push lock hlt aam push xor cmpsb mov (bad) and xor and cli clc sbb pop imul inc stos add jp push fwait cltd loopne jge cmp js js pop push add jg hlt and dec leave pop lock vmovss adc test pop pop push jnp gs pop adc cli int pop popf xchg rorb ljmp sub popa jb fistp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp sbb push or cmpsb nop cmp pop sbb fnstenv or cmp cmpsl dec sub inc clc repz cld lret jne test adc pop mov lret cmpsb ja push xor jl mov idivb cmpb add mov movb mov adc (bad) mov int jmp push mov (bad) xchg leave jb fwait mov add pusha jecxz push jbe insl das xchg sbb cmp fistp xor nop dec pusha insb or jnp mov int3 adc ret sub ret cli xor in mov sbb push shl std mov push jmp rclb (bad) xor enter aam inc flds sub pop jl test loopne fistp xchg call (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp add mov int sbb mov lods hlt inc pop pop pushf push mov imul stc scas les in and add fidivrl scas and xchg xor insb hlt inc jge push arpl in pop xchg outsb (bad) pop rcr test or rorl movsl cmpsb movhps sbb lds into sarb faddp and cmp push inc push sahf loope sahf nop push movsl pop jnp mov ss data16 fisub xlat xor mov lret or lods cltd les adc xor loope add cmp pop std neg or stos mov dec into (bad) xlat add stos mov in int3 push dec (bad) lret adc (bad) test (bad) inc aaa pushf into (bad) mov in out cmpsl (bad) out je inc push mov test adc (bad) jns adc sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl out fwait xchg jl xchg cmp scas stos lret cmp jl jmp scas sbb add push es cmp and push pop cmp int3 pushf fs adc push or sub sti push dec cmp pushf mov mov mov inc ljmp mov pop iret clc hlt dec xchg pop aas pop loope lea mov or std and cltd lods pop ficomp pop jb push imul rorl nop mov sbb push inc shrb add dec add outsb inc outsb outsb and lahf mov les test adc jecxz pslld inc adc jmp jg (bad) xor add xchg cld mov dec popf cs lds pop cmp sbb mov fadds mov push rcrb push mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp pop sbb movsb and lcall lret fisub lods cs mov sbb (bad) imul sbb repz mov ds test out stos add fistpl lret pop je jecxz jno loopne push (bad) mov xchg dec pop push pop (bad) mulb mov dec push out mov inc jno rclb xor in scas cmpsb aaa iret mov or jle pushl mov out or fdivr (bad) stos (bad) push push cmp jbe outsl fldenv xchg dec cmpsb mov imul (bad) jne mov pop cmc lahf bswap pushf outsl xor in mov jns jl mov mov fistl shl xchg and adc addl mov pop movsb adc mov imul mov es sbb mov inc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl je inc int mov xchg sbb and outsl xchg bound or add mov add inc les (bad) push and mov adc enter out push ficom in les pslld adc sbb jmp dec pop jbe cmovle pop cmpsb movhps xchg dec sahf adc xchg pusha bound and cmp (bad) lods inc mulps mov aaa popa xchg scas mov es xlat adc out push sahf pop into lret ficom addl or icebp sub imul mov jle cltd aas mov pop mov xor dec cwtl push inc fwait jbe data16 xchg push les cmp xlat add and ret ret push sbb (bad) adc dec push jnp cmc arpl lret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld pop leave inc mov mov jle inc pop mov fnop (bad) cmp cmp inc ja packsswb fcomi inc das cmp push fnstsw xchg dec es fbld movsl sub mov xchg insb or xor adc aas repz fiadd icebp int3 add mov sahf mov xlat inc call cs loopne repz push cmp jge mov mov mov mov pop add enter mov push sbbl mov and xchg pop pop mov xchg int3 mov adc jb test xor xor xlat jmp cmc loopne leave les dec stc out push dec dec mov ficoml shrl pop repnz dec lock jb adc inc sub mov mov push shl test and jmp mov xor iret xor and sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push push cmc cld inc or sahf inc aaa sbb lods cmp test (bad) (bad) popa mov mov xchg imulb pop sti jl fsubl lret dec sbb rcrb cmc mov mov repz aas leave daa xchg cmc (bad) cmp cwtl push sbb lock stos dec lret jge pop test cmpl and pop jbe scas (bad) in and mov add cwtl (bad) (bad) out sbb mov jbe lret push xchg add adc pop sbb mov mov push push or sub xchg repnz cmp or popa popf outsl mov xchg sbb shr fistpll test repz pop push pop shr cwtl sbb in cmp leave jae pop shrb mov stos aas bound mov sahf jns sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl xchg aad addr16 fisttpl sub push xchg inc xchg or fidivl jno xchg fisttpl xchg inc cmp scas inc or push pop out adc imul fldz or and mov cltd (bad) ja jb mov xchg inc es repz (bad) iret cmc lods inc (bad) out and stos outsl orl pusha push xor popf lea pop push or jmp mov adc rclb jecxz sbb movsb aas sub mov jo aaa loop inc cmp fstl fnstsw inc mov push in sbb ficom fcoml mov and aas leave cmpsb and and bound lcall bound lret mov imul loopne push inc xchg lea scas pop lds into pop mov icebp sub icebp aam aad (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push repnz jp push cmpsl push push mov cmp jno stos push lock fsubrl cmp scas and andl clc pop pop push lret and jmp (bad) setle xchg ja ja dec arpl mov push aam les and lock (bad) in sbb imul add hlt jne xchg insl mov nop shrl add xor cmpsl stos call sbb das inc data16 sahf aas push fs jecxz loop sub lahf adc inc sub sbb aaa push (bad) mov flds fildl scas and and add mov mov jae les pop test daa mov fbstp xchg lods orl vmread fistpl inc or and xchg sub fild in iret pusha fbld icebp mov cmp pop push in lret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in push mov push cwtl and (bad) icebp push aad int rcrl jbe or xor push sbb push add jle loopne push fwait imul (bad) adc sub cmp cltd subl aaa push push sub mov lods xchg mov push scas call pop popf sub dec mov mov out pop dec insl je xchg rorl stos adc out xlat mov xchg jae sub mov push xchg inc cli inc aas or mov sub sbb fiaddl mov adc stos pop das sti jle cmpl pop mov add cltd addl lahf addr16 adc mov sti testb push sbb icebp movsl movsb lods sbb pop cwtl pop mov and sub and pop push call jge inc push arpl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl addb (bad) imul sbb pop adc test and push stc popa loop jle insb lahf mov test loope test push je dec mov clc scas rcll push or inc xor mov les test test (bad) sub fisubr popf popf cmpsl dec fiadd xchg lods out inc rorb fsubs mov pusha push inc jle cltd and fwait cmp dec dec mov stc push xor sbb pop push add test push (bad) dec fmull mov lods jp and loop fild xchg xchg aas bound fsubs xchg sub sbb iret mov jns les adc movsb mov shll adc inc je popf sub fucomp cmp lcall shlb mov iret scas dec and add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call insl or pop js sbb mov jae movsb sbb sarb xchg enter xorl cmp cmp cmp and xor push jbe jb adc jge insl cmp mov cmp xor orb mov outsb outsl scas js jmp rcr aam out cmp push jp pushf aad scas ljmp push shl in mov imul jecxz pushl push mov mov push add das add out sbb sub inc push sbb push push add mov xor push aad nop jle push push pop leave (bad) mov imul arpl shll or push (bad) jno inc mov fildl (bad) fldcw jns icebp pop adc das cmc inc bswap jg jns or sub aam sbb jg std or psubsw popa (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl cld jge mov mov and sub and nop dec in mov add popa ljmp and mov push or cmpsb nop cmp pop sbb fnsave or dec jo cmpsl inc imul movsb push jo lods add stos mov and stos mov cltd jl fidivr fistp xor inc lods add cmp and mov test xchg push push mov push adc incl dec push bound sub pop or jb push in push adc insb and cmp mov sbb push clc mov test sbb sbb jne mov arpl mov bnd mov (bad) push sbb mov mov lods insb push arpl dec enter xchg xor outsl cltd in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp dec mov dec push mov xor inc fsts sub jmp xchg xlat push jns inc popf popa inc cmp mov push xor push in adc in shl (bad) divl mov pop in stos stos stc loopne fcomp xor scas (bad) cmp fimull push fild push js int3 bnd movsl add outsb lcall dec fisubrl xchg ljmp jne adc test enter cltd push icebp push xchg mov cmp jne leave popa push dec scas (bad) push dec xchg adc loope pop insl push jmp mov test pop (bad) lahf lods jl (bad) push mov sbb and insl lods or sbb lret int3 inc mov outsb add mov push lret (bad) ja leave sbb ja hlt ss mulb xchg lock add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in add ret sub daa ret in iret (bad) mov in icebp mov sbb inc xchg pop mov popf push cmp jns addr16 jae test scas stos jnp pop add push add arpl loop push outsl mov sbbl loop fwait push dec ljmp lcall mov jg (bad) mov ss insb xchg lock pop jmp adc mov mov inc dec adc imul das push push jo stos mov fild and cmp arpl aam jbe cld mov fdivs sbbb test push push or scas iret jg in std scas add sub icebp mov add test test movsb lahf inc aaa aaa inc xchg fstps ret and (bad) mov push xchg repz pop xchg and loop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec sbb adc popf sarb xor stc cmpsl dec clc int3 enter repnz les cmp mov sub inc push sbb jecxz mov out jnp addps aam inc pusha (bad) mov push or test sub aas dec pop test mov push repz mov xchg add int mov std shlb jns fwait cmc cltd in jg test lea lahf ficompl (bad) test and mov outsb push mov cli pop and (bad) out (bad) loop call imul jns incb jbe inc out fwait mov fcmovb test sbb jle push cld mov jg mov mov inc sub int3 xchg ja ja dec arpl add je jns mov mov es inc hlt adc fisub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov popf jle xchg outsl pop mov lods push sub or or ljmp into mov ja xchg aad insb rcl pop jmp imul adc add sbb mov lods mov xor sub jge lods movsb jnp movsb mov dec inc (bad) cmpsb fimul or add data16 mov (bad) enter push js and push mov aam sbb inc xchg daa pop jle pusha jns fcoms dec lods aam fsubs mov cltd mov push aam pop das sub xchg jbe fimul xchg inc mov pop mov es inc xor inc or adc int3 and jmp mov (bad) mov push mov sbb and xor inc imul pop jg movsb mov jns and xor adcl inc into inc fdiv mov adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call jl pusha insl ficoml mov inc ret push (bad) out pop push mov in outsl xor clc sbb cmpsl (bad) out je xor mov test div repnz aas pushl dec fwait jno push nop mov jae pop push scas stos aam sahf dec hlt jmp rolb cmp mov adc or iret pop push nop dec mov nop inc loop imul and mov ret int3 shll and repnz xor cmpsl or outsl and and xchg inc push or aad frstpm(287 sbb in and fbld aad push xchg xchg pop cld sub rcrb mov jecxz test mov outsl shrb xchg jne jp inc rcr icebp (bad) mov imul push pusha push sub lock or xchg xor (bad) jg and mov test repnz (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl mov movsl add les jecxz mov je in sarb aaa mov lret mov pop fidivl sbb fisttpl inc lods inc push popa push lret adc mov mov adc mov das cmpsb pop das fisubr sbb inc and lret (bad) xor hlt leave push out sar mov mov jnp mov scas pop js pop or mov aam push aaa les decl stc es jo push inc (bad) adc nop out push push xor jb (bad) movhps (bad) jne outsb push adc aas inc pop mov pushl mov xchg add clc (bad) jbe mov sbb xchg jbe test cwtl xor mov les mov jns ljmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp fldcw and repnz xor cmpsl or outsl and and xchg inc push or aad frstpm(287 mov in and fbld aad push xchg xchg pop cld sub (bad) cmc aad mov jecxz adc ja sub sysexit scas int shrb xchg jne in pop inc rcr icebp (bad) mov imul int push sub lock or xchg xor (bad) jg and mov (bad) fs sbb mov inc lahf out std inc sbb and or dec call sub cmp dec outsb mov lret iret add dec rclb ja test push (bad) lret adc jmp loope dec imul stc jge das sub (bad) popf cmp adc jecxz jp adc enter or shrb imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl imull loop data16 fstpt in or out jb push aaa xchg mov push push mov adc sub inc test dec xchg ja aam clc sbb pop lds lds bound jge inc inc xchg sarl ss push pop add dec fwait push test add jo hlt int3 orl ret inc aaa pop mov movsl xchg std pop sahf and (bad) sbb insb (bad) int inc jns jb out push imul sbb enter loopne xchg xchg insl arpl insb jp xor or push mov movsb xor cld push mov ret mov popa sub push fisubl imul enter sbb push and subb cmp cld pop leave daa mov jl int3 je mov div arpl enter inc mov test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp out add jnp int3 fcoms rcrl (bad) fisttp outsb jg cld cltd sub lahf add xchg outsl pop dec movsb mov lahf movsb dec (bad) xchg mov scas lods jge mov rol fsubs mov push fldenv pop daa push jbe mov (bad) mov daa cmp test dec xor mov in jbe int adc leave push jbe sar (bad) mov std or scas xor rclb xlat std sub rorb jl pusha insl jmp mov pop stos add mov sub into pop dec adc dec jno xchg xlat push adc ja dec jbe hlt add pushl pop neg mov jo add mov int push arpl jbe sti rorb insl mov mov arpl nop or adc cmpsb pushf loop sbb outsl and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc add repz lret rcr jp (bad) push not (bad) rclb test jle sar xor imul sub cmpl inc lock loop repnz mov js pop insb mov sbb mov imul mov push scas movsb mov mov out fimul in notb data16 lahf fsts mov ljmp les adc inc fcomi ja mov xlat add dec push popf cmc push sbb pop pop jp mov jecxz lahf jns movsb rcl lret push std sub popf push imul sub adc xchg or fbstp pop test (bad) ljmp movzbl push lret mov and shl ror mov ds or add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std pop in nop xchg mov mov scas sbb (bad) or jl pusha out jb mov es xchg ds bnd dec and xor inc jae lds icebp (bad) cmp push fwait decb popf push push adc xor xchg mov out fwait aam pushf pop jle scas stos inc cmp jbe or loop push insl mov leave sbb out je and loope cmp pop fs dec sbb (bad) scas mov aad xor sbb bound sbb lret (bad) jbe clc inc out pop cmp inc pop xor push repz (bad) jno and std lock fisttpl fnsave xchg mov jle (bad) xor lea xchg sbb jb sub dec pop push jmp pop leave aas scas add pop mov scas rcrl andl pop cmpsl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fcoml insb mov out push fdivp ljmp inc mov ret cmc test sub stos lahf sub push sbb xchg xchg fildll xor ror cmp fs into frstor xor inc aam aam bound lods cmp xchg and pop fistp mov xor loop je movsl (bad) lahf push dec cs adc imul je or cmc and xchg add mov push lret xlat std sub mov sbbl jb jb insl mov in (bad) and fnstcw clc sbb or stc mov sbb mov bound jno adc jae test mov aam mov inc aam jns sti imul clc mov sub int3 into mov or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc xchg or sbb aam mov test sub pslld pop out scas xchg push ljmp (bad) cmp cs idivb adc jp inc pop or mov pop dec inc add pushf jnp fldcw or mov ds pop cltd lods test lahf mov jecxz sub inc pop das cs mov cmp call lods mov sbb adcl (bad) icebp xor mov inc mov clc jp push lcall xor lahf xchg xchg sub js dec xor data16 fsubr clc mov lock lds fucom lcall andl sbb push aaa int lods cli cld inc or and sbb daa pop sub or fistp data16 mov jp lahf fdivrl sbb mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push jle test xorl xchg add xchg lret into jne pushw les fdivp cltd sti adc test decl cmp into (bad) and xor orl xchg dec sbb ja push xchg sbb dec xlat mov push ds aaa dec cmp test sahf (bad) jmp and push outsb sub popa inc or out pop mov bound (bad) imul pop imul jecxz in mov movq push test pop jns xchg scas pushf sub mov rorl xlat into sub fcoms call ss dec call in loopne sbb testb test adc inc dec pop mov sub imull mov push in adc dec ret jb je test into mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall or inc jge adc jp inc jne pusha je out popf jns jp adc popl lock dec lods inc sahf in pop dec rclb xchg fbld mov mov push inc jle cltd or mov fninit out jg gs or mov or loop jl inc xchg mov inc xchg jae push sbb jbe cs leave push fmull lahf fsubl push inc ds fwait stc and fsubs and test jbe popa aas leave into push xchg or push jo inc pop daa repnz xor loop icebp jno jl in add jbe aad fiadd mov push push cmp pop xlat mov clc sbb sub adc cmpsl dec push jnp pop mov inc aas add ret jl jns jae pop xchg and ss or push xchg xchg push stos lret cmp sub cld test xchg or stc out popf (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp ds or or ljmp (bad) in notl or roll icebp dec ret insl fimull nop and sbb cwtl nop sub mov neg int sbb or pop mov int3 lret mov cmp mov mov mov in mov or mov (bad) lcall sub je push (bad) xchg cmp lret sub test push jo notb mov sub jns mov scas push rorl lock xchg cmc jg inc int3 push and rolb xchg mov adc xor pop cmpsb add std roll pop xchg xor lcall inc sahf dec jge push insl inc ficompl adc aam mov popa jnp mov pop pop fdivs pop mov cmpsb scas clc in push (bad) lods mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall mov ja sub rcl arpl xor add xor or shrb aaa (bad) fmul loopne sti mov jge out mov test mov jge in mov push mov inc mov or lds push jmp cmp cmp ret dec push bound jns out lods fwait adc adc pusha aam pop ds scas stos inc mov xor jmp add xchg out mov ds loopne push femms and mov cwtl iret xchg add movb das cmp dec movsl icebp jl arpl insb push scas xor push cmc fild aad pop pop push imul jae test push lods xor mov lds dec addr16 movsl adc out fdivrs inc imul test adc (bad) xchg sbb enter xor xchg rcll (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call and imul cli scas pop (bad) insl pop lcall bound std jb lods jbe xchg out fwait or mov cmc cld test xchg jmp fdivl lcall (bad) or push outsl loopne stc pop mov lods pop scas ret or adc ss mov and sub sub fist cmp sti cmp xor add lret push push pop cli xchg dec inc lret jp lcall ror rol mov pop pop ret and add icebp push dec sub xchg repz adcb jge sbb or push cmp decb stos xor insb mov jae in fs inc cmp xchg hlt pop push jmp xchg dec pushl int jns inc popa pop jb jnp dec insb mov or sub sahf (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall sub loop or mov les jmp scas push xchg outsl cwtl es les aas shll je rorl and push arpl lcall out jo pop dec aad xor imul cmp pop or adc (bad) fcoml into mov cli (bad) add (bad) insb fidivrl insl cmpsb jmp in lds inc mov rcll mov outsb xor adc push lods inc jne dec dec mov pop push sub inc popf or mov enter inc dec stos and cmp dec out repz fdivs daa sub aas stos xchg add push in xchg decb push (bad) mov adc xchg daa pop dec movsb das cmpsb daa or das fwait xor test xor inc lods inc push sahf loope lcall out loope pop lods pop std xchg loop,pn (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl lahf push scas cmp xor pop sbb lea roll (bad) jbe ss insb mov outsb adc and adc bound fucomp std mov adc adc sbb and bound jo shrb fstps lret (bad) fs aam cld je pop pop jnp xor push mov xor decl sbb adc adc push out int3 clc (bad) sub stos inc dec mov mov or xchg jg pop inc dec sub jb sbb divl lahf addr16 adc ja outsb in in cld sarb xor fcomps icebp iret inc imul in sbb add divb cwtl das es xchg pushf push push mov sub mov pop fstps push add enter mov hlt jno xchg xchg fs xchg ds mov and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl ljmp shrb inc pop roll adc hlt (bad) divl enter fcoml xchg fs push cli addr16 int3 repnz sbb call add dec (bad) repnz loope mov popf mov lds sub sub sbb fwait jae sbb lds push popa push pop sub mov dec gs stc mov push or push mov mov dec fninit lret rolb sbb inc repz out movd or into call push bound cltd sub data16 in xchg jae decl decb fldcw inc xchg sbb lahf dec test in dec pop push jmp imul lcall cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec fisubrl mov stos inc xchg jg xchg sbb clc jg jg repnz mov (bad) gs and inc inc iret pmullw cs and cmpsb repnz decb mov out jae push lds pop push int mov xchg lea test (bad) lods cmp loop pop mull faddl xor xchg test sbb mov xlat and jno xchg push sbb and pop cs (bad) rolb inc das and arpl arpl and jne and ror enter inc out push fimul xchg push insl adc sbb add add pusha ret out leave cmp js cmp fnstcw jb dec xchg fs push adc mov (bad) push pop push cmp (bad) addr16 mov nop ror mov or aas sti inc bound xlat push or sub test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall dec movsb and push push xchg ret or and lahf or sarl dec data16 lcall push pop inc push jge pop std pop xchg push inc in (bad) ja leave cltd jno (bad) mov lods loopne push mov push pop icebp (bad) test fucomip (bad) adc pop mov stos icebp mov and mov pop popf test addr16 jns mov sbb pop cmc scas mov mov adc inc (bad) ret cld push xchg sti cmp push movsb test sti loop test sbbl popa faddl int3 call sbb out (bad) repz mov jecxz or test xlat push ja mov call xor inc sub nop sub pop mov int jg lods call dec cmp inc cmp leave inc scas cmp or mov daa or cmpl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp sbb adc ret in ljmp jbe sub xor ret std jge or push imul inc ss and clc test or int3 push mov incl mov (bad) push fsubs mov push mov fcompl mov iret add dec (bad) repz or mov sub lods cmp xchg push out pop fildll popf dec (bad) jb scas scas pop repz add ds xor lahf and scas and ds repz or dec into sahf notb aad fisubrl jl xchg test mov mov xchg and xchg add (bad) push mov adc mov out out dec (bad) out je dec dec cmp mov bound insl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp pop leave insl (bad) mov fildl add lods push mov mov mov or gs mov out jecxz and pop scas mov repnz mov jns mov or cs scas call adc push imul push inc loop inc and mov popa mov push mov imul test push adc (bad) pop or mov test dec pop (bad) daa ljmp stos lods movsb aas push pop jne push loope dec decb mov jg and mov inc inc xchg test in fwait or lea clc inc movsb xor (bad) mov orl daa pop sub adc imul push scas (bad) loopne push fs pusha push mov mov cli push inc push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp mov sub and sbb cmpsb pop inc inc lods cmp mov pop lahf and and jg inc in sub pop clc jl add int cmpsl frstor cwtl icebp jno shlb xorl mov fs pop add nop rorb aam push mov xchg sbb cli mov into sbb dec imul das push jns out out adc jb push aam mov stos push (bad) push mov addl lret or add and cmp shlb xor mov xchg adc lcall xlat push sbb test lods jae and sub add arpl jmp and and hlt inc push loopne mov inc movsl xor add imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp stc test dec popf mov xchg cmp lods pop pop and lret adc xchg push leave pop inc cmpsb adc imul je test sub data16 add rorl push leave test test fwait arpl add iret cmc cld sar push int shlb (bad) je ja adc sbb add jg jp enter daa xor outsb lahf cmp xchg xor lods jo inc push jbe ret lods cmp adc jae aam lods inc std jo sbb inc test lods ds out pusha xor aad mov mov arpl or cli lahf aas or scas in cltd inc push cmp or popf jb repnz cli cltd mov dec loopne push mov inc jne adc cmp mov dec mov lahf mov jae (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc dec jbe xor popl add jp pop adc dec jnp ret test sub pop pop lods cltd outsl pop das sti xchg jg aas sahf mov dec fbld jmp arpl je cmp in mov (bad) ljmp cmp push arpl xor and ss and or cs scas fmul lock scas pushf lds fadd dec clc mov inc sbb sub data16 or sbbb push or or xor test push mov fiadd cwtl cmp aaa jb in sbb clc aad xchg icebp cld arpl (bad) jecxz hlt push sub xor call ss push mov inc movsb xchg cmp test and out jno dec test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec frstor rcll imul dec mov and add aam stos pop dec andb jbe,pn mov rorb dec nop inc or jp (bad) sub jle sub sbb add inc fisubl std repnz fisttpll adc pop lea je pop add js xlat aad push mov push out jno repnz pop out je jno adc mov mov xor roll ss out out xchg mov pop jae stos lret cmp test and sahf dec jae xor fbld imul data16 pushf outsl in das push test ficom adc mov push call mov and popf cld lock in xor paddusw mov ljmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sti into mov cli ficoml fdivl push pop je call inc push imul fmulp mov into daa jae adc push or outsb sub mov (bad) mov mov and sti notb xor mov lock aas jae decb jnp sbb cmp aas lahf add mov add mov mov sbb adc pop negl xchg aas enter iret add pop sahf and jmp movsl pushf pop sub (bad) ret clc jmp lods dec std cmp addr16 push cmp in lea fmulp jb repnz test dec out inc add rcrl sub add int cmpsl (bad) xlat ja fdivrl jb idivb or push add and cs cli xchg (bad) and inc daa ror add adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push sub (bad) gs in imul jge sar lea jbe push push stos mov movsb mov ret imul mov xchg jle push cld mov or sub pushf in mov add rcrb outsb mov sub push lahf jb inc xor sub sbb mov int outsl and xchg test aad xor xchg push (bad) lret leave mov vunpcklps cmp push (bad) mov xor jge fildll mov leave (bad) lahf imul mov inc fimull dec mov imul mov ret and shrl data16 mov (bad) cmc test daa pusha jns aas pop sbb int3 sbb lods sbb xchg roll nop loopne push cmpsb cld loop lahf or ja les inc jb sar (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp loope pop xchg sbb dec cmp out icebp push loope std cmc xchg test inc fwait push mov lahf cs mov aam ljmp fisub lods mov (bad) fild stos call lea or xor jl cmp hlt add xchg xchg add int jae add xlat ja in jno xor sbb addl pop jg cmp add nop movl (bad) xor mov ljmp in push cmpsb sub mov ficoml jb jns clc push adc sbb and int fiaddl jmp movsb pop mov es imul or sahf arpl mov fistl cmp jecxz xor stos das iret dec mov push out add lds mov mov jae cltd pop imul stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc or pop mov add xchg xor xor adc out inc pop jmp mov mov stos xchg mov xchg cmp in sub xor in ljmp das pop mov inc mov (bad) fsubrl cmp (bad) add or adc sbb xchg adc add inc cli xor dec aad rcrb jp adcl cmpl push aam out rcl shlb jno outsb mov iret and mov mov cmp ljmp push inc mov stos mov xchg cs out mov je add dec lea fcompl cmpsl enter push inc sahf adc loop sub or call xor insl je cltd icebp jno cmp and (bad) xor pop mov out decb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl shrl adc pop sub movsb mov pop or pop xchg xor pop repnz out lahf push (bad) cmp cmp je outsl mov push stc inc lret push out xchg sti loop inc aas dec es fucomip outsb (bad) div imul adc pop push pop in inc jns inc dec rorl inc (bad) xor es aam fldenv mov and add dec imul add jbe adc xchg iret lea es (bad) (bad) imul adc insl mov iret (bad) gs pop test ss in sub xor in adc in and decl dec inc sbb inc fisttpl aam shlb mov sti aaa enter push call xchg loope stos ja ss stos int3 mov js sub pop enter xchg dec lock roll (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp jmp mov xchg push sub sub sbb xchg adc movsb xchg into adc mov sbb into mov mov gs inc add cmp push sub popa and shr inc call cmc stos imul push xor mov sbb sub (bad) and repnz mov int arpl bnd repnz in dec jb dec adc cmp mov xchg inc clc sbb sti out out jbe out add pop cmp test (bad) popf loopne xlat pop pop jns xchg mov add sbb or loopne (bad) cmp cwtl mov add rcrb xchg xchg addr16 dec jbe xchg pop push ljmp lahf insb or ja xchg rcll pop inc aas xchg pop mov sbb test xchg adc int pop mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov outsb sub arpl fmul hlt sbb or lds daa jb mov inc inc fs jg aad sbb sub jmp popa and inc cmp sbb jne inc jb icebp xorl xchg (bad) div insl jle push and aaa notb push and nop testb jb in push dec inc shlb lea mov fs cmp cmp cld sub jecxz test out dec mov xlat cld test cmpsb nopl xchg stc aad cld hlt pop xchg xor sbb lret pop lret mov iret orl sbb fdivrs clc xor pop and push outsb lret xor xor test adc mov cmpb fnstsw adc mov addr16 (bad) jle sti or xchg jp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl dec sbb adc dec and sub ret leave pop scas mov mov dec pop mov push mov rol outsb mov jns lock repz out dec push mov scas and fucomp jbe adc cs (bad) not mov in jo adc orl pusha cwtl add sbb jg dec mov outsb sub int out cmpsl je mov push mov aam lock push out (bad) push mov rolb cmp bound mov orb jle (bad) imul mov and dec gs push test cmp xchg jl cmpsl fs fmuls div dec xor push scas daa test lock mov and xchg fs cmp or ss (bad) mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fldcw xchg sbb push and sub mov int out fwait inc jbe jnp sbb cld inc push popa push test stos xchg sar cmpsb or js push sti cmpsl mov fisubr cmpsb pop mov lods cmp movb dec out mov push and hlt outsb or orl and add imul add and dec inc scas inc pop mov inc loopne icebp cld mov pop cltd mov lock add dec push popf push arpl dec push scas in jnp ret popf inc je cmp mov mov jle pushf jb mov xor jae shrb push test mov xchg add mov mov lcall xor cwtl mov outsb outsl cwtl iret fwait add movb sub pop repz insl push jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp sbb jbe scas sbb cmp and cs sbbl faddl xor push pushf dec dec call insb repz mov lods test xchg pusha xor call (bad) ficom (bad) mov in push jmp mov fidiv sbb mov fisub sarb pop mov mov xchg sbb adc inc mov aas dec mov dec sti out fwait in cwtl fcompl lock test sub inc js cmp and test out jmp (bad) mov negl mov repz sub inc lods jo push jbe aas sti pop sahf loope loopne lcall dec (bad) daa iret sbb lret dec pop scas sbb dec andl xsave lret pop aaa and xchg rolb cmp mov mov cltd push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl roll jl sbb mov aaa dec pushf cmp cmp pop sub lret out xchg cltd or (bad) cltd into out fildll push jnp imul sar jns adc sub (bad) xor inc cmp xchg jle add std clc (bad) jb sub (bad) or mov imul (bad) jne mov push sti es hlt loope cmpsl xchg outsl fs fildl outsb ljmp into lds jno adc aad sub sub sbbl xchg cmp pop push mov adc add inc mov cmp mov push add push popa ret and cld in call lahf mov jmp sahf mov andl dec and push adc pop pushf push (bad) mov mov divb and lock push loop and mov lret enter mov push fidiv gs jg addr16 (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cli pop mov xor xor lcall cmc push sbb jb lock dec sahf adc adc jecxz cld ja mov ror mov rorb loop dec inc lret mulb (bad) pop in cmp xchg das jno fistp inc ljmp movsl addr16 inc mov out or jl aaa adc test xlat dec inc jle rcrl les adc fisubl ja pop cmc jno mov (bad) mov imul push mov test dec xchg adc dec dec dec pop xchg ja dec jmp push in mov inc es loop cwtl adc out and je aad lds enter xlat aad (bad) jno cmp jp addl addr16 mov in mov jns js (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec test pop sbb fisubl shl xchg and jbe test mov mov adcb dec dec push and cmp xor sbb aad xchg scas sub xor jmp push sbb xchg adc xchg in cli pop fisub mov into daa clc adcl test jmp inc lods xchg cli dec je xchg pop ret in fs ret cltd lea loope enter mov adc adc out pslld icebp mov mov out ja fucomip push cmp sub mov jecxz popf js sbb push int3 and aam jo mov scas mov jb push inc push imul sub fldenv pop daa inc pusha (bad) sbb movsb inc sub lods mov push sbb insl gs inc pop and in mov xcrypt-cbc cmpsl push std fs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall mov jp ffree cmp incl notl xchg add (bad) fdivp and jnp jbe inc js cmp dec js fdiv je dec push jo push ret pusha (bad) jns cs jle mov add hlt mov orb jbe xor inc push out dec stos mov adc subl cwtl xchg push lods mov les mov mov push imul jae lds cmpsl std mov mov imul jge test scas jno mov mov push fcmovbe rolb inc inc test pusha sub inc push idiv xor stos pop mov dec inc outsl shr sahf mov and push or push (bad) cmpsb fsubl gs mov pmulhw inc dec jns (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp out fs sbb int3 js mov aam jbe jmp and mov (bad) out popa mov mov (bad) stc pop (bad) mov movsl (bad) xor mov test dec pop jo cli cld inc loop mov fisttp daa mov pop stos hlt sub pop stc add movsb sub add push testl hlt jmp aaa adc cmp leave hlt mov inc cmp (bad) xor or mov mov ja xchg jp adc push and push fisubr sub dec aad dec icebp mov pop mov dec push xchg cmc jbe lock push push mov adc out cmpsb faddl test hlt jmp rolb cmp mov in and and or xor scas (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall in mov jns jl mov mov fistl shl xchg and adc insl cmp inc jnp pop movsb sub aad push cmc into cmp aad test xchg test jmp push dec add jecxz xchg sbb mov mov inc push pop inc sarb push idivb stc cmp and cltd push adc and mov lret enter testl mov gs jg pop nop xor icebp or fistpll push ret mov jb rorb sbb sbb data16 scas adc (bad) addr16 sti cmp cmp movsl popa jbe push xlat cmpsb sbb inc aas das stos jae (bad) and push mov push or cmp pop mov jno subb int3 jnp aaa mov add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) out std or add out and loopne lret aam pop daa mov repnz pop add xor mov adc pop push idivl fcoms pop les cmpsl mov xorl (bad) jns push xchg sub adc mov dec js sti and xchg pop inc aaa repnz test inc into mov pushf in jl sbb cmp lea push in push sarb xlat mov or out pushf sub pop (bad) int mov cmp cli sub into sub xchg test mov jb add mov mov xor jp repnz jno test push js iret incb mov mov scas sbb rorl pop insb sbb dec stos sub sub popa and xorl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp enter inc out fildll xchg mov out out test or pop jnp (bad) enter cmpl push clc movsl push div jmp cmp push cmpsl ret jge cmp out fcomps dec pop test aas sti push mov mov mov sbb lret test push popf pusha dec push scas jbe push out lea leave push dec lret pop ret sub loop in jo add push cli adc out xor lret mov jl sbb mov aaa dec pushf cmp cmp inc inc xchg pop ret out data16 out add sub test or loop inc dec inc push mov cmp insb jl cmp pop xchg lret add pushf push aaa sar mov lcall pop sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl and or popf sbb repnz (bad) repz lcall lods dec sbb adc jp sahf cmpsl mov mov sbb mov inc and push mov test or mov sbb (bad) mov mov or popa inc add (bad) loop sbbl mov insb sbb sti out xchg (bad) je and outsb std inc in stc movsb push fdivl in movups out push jno clc jp sub lock add test pusha outsb nop outsl aas and dec sub jo cmc sub cmp daa jo jne add insb pusha movsb sarb xor xchg into lds mov lods in hlt mul push aas jno popa xchg stos mov push mov and dec movsb and push push xchg ret push les (bad) mov cmp xchg notl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl xchg jno scas insl mov (bad) jbe rcrl shll int push lret sarb push cld mov pop mov aad xchg dec mov lcall push in push adc stos mov mov adc pcmpeqd sbb movsl dec push sti mov xor je cmp add inc loopne xor test stos lret cmp push fld ljmp jge dec dec (bad) pushf outsb bound sub sbb add scas repnz je jns mov rcrl jecxz cmp inc pop adc inc xchg hlt mov xchg jge mov pop cmp imul inc cmp and cmp daa inc mov inc push xchg aad xor ljmp cmp mov jg xor jne nop out inc shrb pushf (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl sar shrl data16 lahf dec jge inc (bad) icebp (bad) push stos fimul xchg sub test in mov adc test pop test mov aaa cld xor sbb jg jo sub rol cmp (bad) mov enter inc sahf dec inc jns ljmp jge push pop sub lods cmp xchg pop (bad) pop fistp inc ljmp movsl push (bad) js daa rclb dec bswap das jb cmp xor sub outsl inc cmp (bad) and dec aas leave movsb and adc out inc fsubrl dec (bad) imul adc stos decl xor jae pusha push and (bad) push and jl sbb sub insl jae lds push push xor cmp xchg mov in int3 fisubr and and sub sti jecxz (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jp inc xchg cmp mov lahf in pushf shlb xor cltd pop xorl gs xchg dec imul xchg inc jle push sbb icebp mov mov mov int in ret sbb in xor imul adc clc incl call sub mov aad add mov scas sub jbe jmp movsb inc pusha sub mov pop fisub cmpsb stos mov nop adc test push add xor adc test xor mov dec mov and mov jecxz das jge or cmc cld and add aaa mull (bad) jle mov push pop (bad) fdivrl mov fadds roll sub sbb xlat iret (bad) out cmp push daa push sahf insl adc pusha sbb push dec mov loop fdivs push mulb sbb std or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call out in movsl cmc and cmp in add jbe and mulb push rolb xor pop jo and cwtl in jl sub mov mov mov xchg dec and imul xor out jbe lret cmp es pop (bad) push lahf enter dec mov insl add jae (bad) loope ss sbb test push inc mov addb (bad) jo hlt dec stos jnp int mov (bad) pop in push cwtl scas mov mov mov adc cltd add cmp or jl fstpl jmp xchg mov cmp (bad) xlat push mov addr16 and mov fild mov pop inc iret xor mov arpl lahf push add pop mov loop xchg push popf dec and cmp push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl and or sar shrl data16 add (bad) negl fidivrl dec sub mov ret or xor inc lahf in push fbstp dec ficompl dec fucomi cmp sub call ret add fwait mov insb mov push adc sub inc popa push dec shrl sub (bad) ljmp roll movsb fild sbb insl gs mov fistl aas xchg or adc or outsb lods stc mov outsl inc pop jbe loopne pushl push adc cld pop in mov sti subl inc fisttp clc dec ret out pop (bad) out arpl sti pop mov dec mov repnz mov push push mov xor sub jo (bad) cld add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl cld arpl add sti jg loop jge sahf mov adc imul ficompl and pusha scas or adcb sbb mov insl and shl data16 and mov push decl mov inc stos push sub xchg jb adc loope or xchg aad xor adc cmpsb popf lods inc ficomp xchg sbb in push pushw movsb int3 fwait dec lret cwtl sub inc (bad) fyl2x sarl jecxz ss fidivr sbb and add fidivrl xchg inc (bad) xchg adc mov js or fistpll push add (bad) repz mov xor adc not fdivrl push scas mov jo inc rolb sub popa push repnz sbb pusha push cmpsl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc dec mov push or push mov das subb shl lret pop mov repz xchg or jns adc adc bound lret mov jl jmp stos pop add decb lahf stos lret imul mov in out pop (bad) out sbb fcmovne imul fcomi (bad) jns lcall mov les mov hlt sub jle clc rorb insl mov (bad) cmp xor inc dec pusha cwtl mov outsw scas repnz xlat fwait outsl jg sub cld clc push mov fcoms jp fsubrs sbb and add mov outsl shll add int sbb adc lret mov inc (bad) ret and jmp sbb adc inc push push rorb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call push xor addr16 jns inc shrb imul stc and ss insb or push fild fimull out fsts adc notl aas cli xor stc cld jle push in push ret fstl (bad) dec daa jl cmp psubsw jns scas jbe push push cld jl adcb sahf add iret inc jecxz xor push add test ret lahf loope mov lods cmp adc popf pop inc out out rcrb mov scas pop and push mov sub leave fstl pop ret sub aad fs sub rcrb xchg out stos lods (bad) jne push lret stos cmc ficompl dec cltd in dec icebp pusha test and lret test enter pop loop mov nop cvtps2pd adc push in scas cmpsb out mov or test loop mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov int3 clc (bad) cmp pop mov arpl pop repz jge insl mov mov push adc mov inc jo ja mov (bad) repz xchg test xchg out pushf aad test addr16 ficom loopne lahf test pop push imul inc pop out mov fisttpl or mov pop jmp sub mov psadbw loop jno daa fisttpl inc repnz cwtl lods adc movsl mov add cmpsb mov fsubrp aaa xchg ret cltd mov mov lods cmc call jne lret out fwait or jg loopne pusha fiadd repnz sub lods inc inc (bad) in addr16 aas sbb mov mov and fwait ja pop (bad) cli int test sbb lods mov cmpsb inc lock sahf loope and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in push inc push xchg rorl iret inc mov fcos lahf push mov out lcall lret sarb add icebp mov sti jge push std arpl push mov lcall imull (bad) mov cmp pop movsb push lods cmp cli je inc push xchg jmp and pop fstp js aaa sub loope dec shrb and jns push xchg mov push ljmp or lds sbb loop das lock or hlt and adc xchg je pusha adc arpl mov repnz je jns pop les mov push insb dec inc popa xchg sbb push cltd mov mov outsl pop mov inc fwait push add mov lds sbb lret or mov xchg and jmp test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call and sbbl and in cld daa dec cmp mov rcrl je pop shr mov sub divl stos out add xchg out pop dec dec (bad) cli xor iret lahf cld inc lahf in pop lods test xlat in inc shrb ja cmp mov in cmp (bad) rcl lret mov mov push sti rolb cwtl pop aaa sti enter and decb call loop jmp sbb cmp jb add jecxz and sbb xlat or enter pop jecxz (bad) xchg add jae inc xchg (bad) xlat add inc or cli in push mov mov rol (bad) and stos (bad) mov cld imul dec pop mov inc add jge ja (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl xor addb push pop jae popa pop dec sub outsl testb and add jle fnstenv jl mov ja ja mov dec push popa scas repnz je outsb mov test push insb lcall sub imul movsb out aad faddl cld stos or lds outsb insl ret mov push ja aad xchg outsl or mov jno fistpll dec push sbb and nop sub push push adc scas mov inc push imul out cmpsb shll insl xchg mov data16 dec enter addr16 out push xchg cltd jne hlt inc cmovs (bad) xor add ljmp mov or (bad) or sub rclb loope mov fs js mov and rorb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cli fnstenv enter pop mov mov aad dec inc xchg adc xor cwtl mov cs adc inc movsl clc pop cmp sub cmp pop sar (bad) mov mov xchg (bad) stos xor (bad) dec mov adc out int3 sbb mov jg arpl out sub mov mov in jnp ret jo je dec sarb pop popf test aas (bad) jns fwait test push test orl pop stos scas and arpl dec fldl jno push jae not mov repz xor or pushf nop (bad) sbb adc insb mov aad (bad) sub lock pop mov int mov pop xorl cli lret hlt inc ficom (bad) fsubr mov dec (bad) dec scas sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc mov xchg pop push mov add call lods and mov pop xchg cmp ret jge insb sarl and out arpl sub xchg testl popa push ljmp cli xchg mov (bad) adc jns and sub iret out fistpll sbb jns push sbb into pop lock jg jno mov jae xchg adc mull xor mov loop dec inc (bad) into or sbb dec lods and push push ljmp movsl movsl aaa adc cmp lret mov loopne cmpsb or add add imul hlt test jns mov lret and ss data16 int3 sbb mov std out xchg xchg addr16 pop pop jnp mov lea aad in icebp mov adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall mov test push bound push or mov xchg dec fisubr int3 sub pop mov ret mov mov jp cmpsl jne insl les (bad) pushf outsb cmp xor sub jae xchg nop xchg dec imul xchg inc jle test psllw cmp not push js (bad) cmp push loopne jmp mov addb cmp add jb aad cmp add xchg xor push jno leave addl lods iret pop mov je inc shrb rcrb add sti imul sti mov ja (bad) out dec sbb dec mov dec sbb cld inc packuswb pop in cmpsl mov aam pop loopne aas and popa sub popa outsb cmc scas xchg movsl stos pop lock shrb sub dec movsb das adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl cld mov push inc ja test pop (bad) pop jmp movsl mov test inc pushf adcl pop add mov jb addl adc sub (bad) roll call out stos icebp pop lds lret rol pushw mov cld cltd in jl js dec xchg add add dec inc pop lock mov (bad) ret ljmp pop dec jne test pushl pop loop mov rolb mov mov arpl popa jne rolb lret insl mov cwtl loope in leave xchg and arpl pop adc mov jns fs sub ret jb arpl or add pop cmp movsb mov inc and ljmp mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld mov pop or inc fs sbb sub or and sub push dec push sbb mov pop xchg pop shr adc pop inc shlb jl (bad) je cwtl out fiaddl sbb sbb xchg sub xchg dec sti out fwait in cwtl adcl bound sub push insl cmc push sbb int lock outsl sbb push das sub cmpsb data16 fs jl into lds jecxz js push insb mov mov movsb pop pop in dec adc and mov jg sbb xor pop pop cmpsl in cmpsb cmpsb xor pop sbb popf jb or pop xor cmc les sub push fucomip pop std negb idiv mov and rcrb fdivrl mov cltd in or pop fsts pop jge out push push mov pop sahf fxch (bad) mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl icebp mov in int jle and push out (bad) jns fwait jno imul out mov push inc jo lahf hlt arpl cld mov orb jp fnstenv xorl push jns cwtl dec sbb pop in inc sarb fbld test gs and les push sub mov loope imul out repnz inc test jae and dec mov jp mov sbb aad jmp fisubrl inc jmp dec push sbb cmpsb ret outsl cmpsb mov loope inc adc aas mov imul jl scas shrl data16 ret enter mov pop test sbb test or sahf inc jno fistpll push sahf cmp in iret jb mov (bad) mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc jecxz mov xor push jbe insl mov dec ror fistpl xchg adc aas sti (bad) dec push pop mov test jae xor sub mov pop or push mov addl fwait aaa adc dec sti loope jmp cmc pop test out stos lods cli push push push lret fbstp jno dec or je xchg insl lea inc loopne jo int3 insb dec and cli (bad) (bad) mov in icebp sbb shr jbe dec pop cmp xchg cmp mov or sarl add sbb push leave insl jnp das mov lods stos lret int lret jmp mov insl mov aas xlat or fisubr xor ljmp outsl and jnp push jns dec stc rcll test (bad) mov and xchg les movsl xchg pop sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp pop cmp jl pop jg cmp dec shrl sub xor sbb cmpsb inc inc test (bad) cld cmc enter in push xchg ds hlt iret and nop sub xchg lods roll lods inc leave lock test sub data16 lahf sub enter jns scas and xchg xor icebp or mov sti int aam ret jmp (bad) mov add data16 push popf (bad) rol imul mov pop pop pop xor scas mov push push fcoms loope loopne (bad) and leave popa mov lods andl xchg sarl jle cmpsl fmul icebp lahf xchg and mov dec xchg jno jmp scas xor negl fsubrl or mov fldt jb hlt mov imul sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec movl nop pop mov mov push mov pop out je clc popf mov nop dec pop loop inc dec cli inc jp shlb adc pop push fildll icebp inc sub cmp aaa push push sub adc jle lds and iret push and and repnz lods xchg dec rolb mov mov sbb sub scas xchg adc lcall loopne cs jecxz adc add adc stos pushf sarb and fild mov mov fsubrl (bad) aad arpl mov nop cs xchg xchg mov lds adcl ret pop add into out shlb imul cli cmp mov xchg or xchg xor enter lds inc aad pop test ljmp rcl xor call insb lcall (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl stos push mov lods out adc popf cmp add data16 into or dec pop test sub popa push sub or in dec loopne in std lds pop aas loope stos push lds push (bad) es das mov and mov add aaa push inc cltd imul push std add out xor sub jo test adc out sbb mov addr16 push and mov in push ret into sub call sub repnz (bad) decl jb lods sarb inc sub sub push cld dec clc pop sbb mov and sti (bad) add pop cmp out pushf pusha mov xchg add cmp cmc xor inc sub push mov push out inc arpl xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall add (bad) enter mov cmp sbb push push popa mov inc mov sbb sbb sarb and and in pushf mov add aam mov pop (bad) mov into daa lods out adc push aam cmp pop roll sbb daa rorb pop cld out lds lea dec dec lcall add jns sub pop mov jge daa jl aaa out jmp xor fs imull push xchg mov insb mov js js int push mov fbstp pop mov stos mov popf pop inc stc add mov inc movsl push cld mov movb out lods cmc push imul icebp xchg cld or dec pop leave notb lcall xlat std (bad) data16 jb cltd in jl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl jp pop add add dec mov insb add aad addr16 mov or pop cmpsb or popf loopne xlat adc jns adc fwait out cmpl mov xchg hlt jmp das sti pop mov lret mov xchg addl and std rcll les test xchg scas sbb icebp dec cli call aad sub or les out (bad) or inc test lods pushf dec dec call scas icebp cmp push inc ljmp ja jmp push ret sbb xchg sbb and ret push mov fiaddl cmpsl fs stc mov loope push shrl or xor ja cmp leave jmp fiadd cmp inc (bad) or js sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp call xchg cmp in iret xchg insb pop cmpsb (bad) aam jne data16 adc into subl jb test (bad) in xor and mov jbe or lods mov jae push leave popa mov (bad) or leave fisub push lods in ds pop sbb pop mov dec push inc add and and and push insb (bad) xlat inc loopne icebp and lds add (bad) fdivp mov ja fs fcompl shll repnz sub xchg jg dec jmp push rcr out adc add mov xchg js jecxz mov ss dec pushf imul lds adc aad dec pusha aaa movsb pushf outsl pop pop stc loopne dec xchg push (bad) repz mov ret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call xchg jmp insl fdivs into and cmp ds cs int sbb addr16 vdivss dec xor mov ljmp jbe fucomp mov mov (bad) out push sbb lahf mov (bad) iret outsl pop test mov fcoml leave and mov and ss (bad) testb pop aaa mov shlb cmovge jecxz lods repnz pop pop pusha jns loop (bad) loop ss pusha daa jle mov inc mov xor mov iret (bad) xchg into xor and inc aam les adc cmp cs test ss push xor mov lahf enter lds clc push sbb pop mov in sbb push std pop in xchg xchg nop mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call ja xchg xor jbe scas rorl sti add add clc pop xor pop mov jg mov loop fisttpll jmp xchg leave jp mov xacquire leave xchg mov icebp inc sub sub (bad) cld inc out iret sti xchg jg sahf clc or sbb jl push pop add fwait lcall sbb mov arpl dec cmp push xchg lcall les lret pushf pop mov push andl mov pop push arpl jne fisub movsl xor pushf jns imul pusha inc adc mov lret sbb jb pop and nop cmpsl or push scas jl pop movsl lods mov push fisubr jp sub xor jb mov cmc hlt cli fimul xchg cmp adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp test xchg xor xchg outsb test sbb dec push cltd loop and mov add adc pop das cmpsb sub jbe fs sub fst inc pop jno cmp enter mov lods cmp xchg scas mov inc ljmp std orl inc xchg mov enter lods es pop and ficomp push cmc and sbb stc ss cmp mov cltd jno hlt cltd sbb dec jp mov pop call pop mov fistp inc cmp data16 aam jae in outsb mov jnp xchg mov inc aas out mov (bad) insl jnp fs sub lods xor dec pushf push cld movsb insl xor ja jecxz mov and arpl aam dec or or push adc repnz ret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl xchg xlat mov and (bad) pop xchg push jmp (bad) mov or hlt loope jmp in sti mov sub add pop orl and jecxz in mov jecxz pusha fiaddl aam sub sbb testb cmp pushf and mov mov scas mov loope pop stos sub not adc dec mov pop aaa xlat mov in pop test (bad) adc mov mov xchg pop in mov add outsb jb aas and cmp cltd loop cmp inc and add (bad) (bad) das cmpsb ret or sub fcmovnu in adc add sar movsb test jns test dec aam icebp mov adc pop pusha pop decb adc sarl lahf and out test stos cld or add dec xchg enter (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call mov loope sti jecxz cltd mov mov jl subb add insl sbb jl (bad) lock cmp ficom adc push jno add jecxz mov lock and lds jmp fidivrl mov jne mov hlt call push or (bad) mov ljmp or sub adc subl cwtl and pop dec sbb lods repnz xlat jg jg push xchg sbb movsb (bad) shrl lea xchg sahf int lahf inc cmp shll xchg jb push mov orl rorb lds arpl adc mull pusha sub xor push rep pop sub sbb adc xchg aad movsb mov mov jecxz sbb jp cli push call out (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp inc out push jno adc insb adc mov repnz add out out dec sbb fisubrl push sbb rcll mov lds in lcall sarl jno xchg push and push inc dec stc test ss loope jmp movsl mov adc (bad) and into (bad) push push push in aaa jne mov in pusha and ds dec pop (bad) out ds pop xor jge jbe inc repz xchg pop test out stos xor int pop ret xlat std sub (bad) or je xchg insl and rorl jo je dec and (bad) fsubrs sti out out xor adc push mov xchg jp popf push std or sarl add sbb sbb insl jnp xchg lods stos lret int mov fucomp jbe cmp or insl mov aas xlat or add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall xor (bad) xchg jg mov xchg push xchg push jecxz stc movsb xor jmp jbe rcrl mov faddl fstps scas std add mov or popf cs movsl cmp sub stos lahf sub add out in fstpl push mov gs cs mov adc or roll mov or push (bad) mov lods push sub in xchg jnp pushf add sbb mov test roll cmp jg jo or popa shlb cltd xor outsb jg cld mov pop lock rcrb xor shrb adc fs add dec (bad) icebp (bad) in pop inc loop shrb mov sub ljmp lret (bad) sub xchg fsubrl cmpsb dec lcall inc scas and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ds test into push xchg jl mov lds lret rolb pushw clc ja cld cltd in push mov jb push scas and sbb pop add push fisttp pop sbb in mov jbe cmpsl mov mov call lock mov mov test scas mov add inc sub mov mov and or imul aam outsl fmuls cmpsl add pop cltd loopne in sbb insb and shrb lds or shll xchg add mov arpl ss movsl inc inc lar aad out add inc test (bad) cld (bad) sti out (bad) push xchg push sbb and xchg (bad) ljmp shrb mov mov and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jp adcl enter fimull pop rorl jae xchg pslld add ljmp xchg jno shrb fsubs jmp adc cmpsl mov push das sub xchg mov inc js inc rolb loop aas jno jbe mov mov jae push mov cmp out mov movsl push or lahf movsl cmp xor mov ficom lret adc sbb inc jns les dec stc cltd add int push xorb fisttpll in int3 subb nop push call test and cmpsb fxch (bad) test in mov arpl popf pop mov into lahf jmp sub jns pop mov mov out rcrl inc sub adc inc cmp cld arpl popa dec sub add lret insl mov pushf (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push pushf in cmp hlt xchg std dec pusha adc je movsb out pop xchg add inc (bad) mov cmp arpl push sbb fsubrs mov xchg fldl fmul lock jne and fldl fisttpl mov inc push xchg aad xor ja cmpsb fucomp lods sub xchg mov (bad) fwait dec lret nop cmpsl in fisubr push push int3 mov mov aad dec decb scas pop (bad) insl mov mov inc sbb jo lahf test add mov add cli int3 repnz mov ja inc fistpll mov imul data16 sub arpl lods mov shl sti sub sub fwait gs cmpb pop fsubrs mov aaa popa xchg scas mov jge sub clc mov in inc pusha cli mov push or adc sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp ja pusha and ror mov jle mov imul add sub out and add (bad) xlat ja gs fcom hlt or jmp add and je (bad) test aad xor mov (bad) jno push mov (bad) out je les bound loope (bad) mov push adc pop stos inc xorl sub push mov fsts inc inc mov jmp xchg aas and iret inc sbb iret xchg aaa daa std shrl icebp cs aam add (bad) adc xchg fcomps or std jno ret fst sbb jbe rcrl mov fdivp cld dec aad (bad) xchg push add ss mov inc mov inc fldenv adc aam lods cmpsb popa rolb dec mov jecxz and mov adc fisubl cmp push (bad) and pop aam push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall out jecxz cmp (bad) push (bad) xor pop dec jne jmp adc push lock adc add pop add adc (bad) mov add add mov pop inc lcall push ror xchg (bad) xor xchg lahf add xchg inc clc loope insb js jo push inc push aas sti pop pushf loope ficomp daa inc aas ss jae (bad) and pusha push sahf es ficom fldcw cs mov sub leave adc lret pop ret sub lock loop jbe rcrl (bad) out stos xor int cmpsl fnstsw xlat ja in or jp jl xchg lock popa xchg mov push decb fdivrp int mov mov leave mov inc js push pop dec negl jmp cltd test sub or jle mov push cwtl test inc mov inc cmp mov es jbe (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call sbb cmpb mov (bad) push in fsub inc dec iret xor jmp js and inc pop mov pop adc addr16 rclb out cmpsl je rcl leave xor jle cmp shlb (bad) lret ljmp dec lcall xor jae fsts mov imul inc fsubr fiadd cmc mov aas pop sbb (bad) cmp push add (bad) fstps mov mov mov lahf insb leave enter pop cmp push imull popa mov shll sahf lods aam (bad) xlat push aam test or in jno mov scas out mov jle jg negl adc mov push mov push adc xchg sti inc mov xlat push or pusha sub push (bad) in outsb jb mov fdivrp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp cmpsb pop cmp lods cmp (bad) xor mov ficom lret (bad) xor hlt leave push jbe sar xchg inc subl data16 push push lret adc xchg jbe insb lea insb xchg mov aam rol icebp xchg cmpsb fdivrp int mov mov out add or outsl mov dec adc inc clc xchg push mov jae aam mov mov cld arpl fsts xlat add subl dec es pop pop sbb sub dec ljmp sbb mov sarb rcrl jecxz js int out lds xor xchg jns imul movsb out aad fcoml sarb dec jb mov mov cmp faddp test and jp leave movsl or insb call inc dec (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp in shlb call inc xchg int3 mov push cmp test jbe push dec orl in sbb out (bad) xchg and xchg in jg sbb and pop (bad) outsb mov aas and dec xor data16 fadds dec and mov jle jae imull mov rolb rorb loop aas mov imul mov test inc std jne loop std jecxz scas mov cmp xchg inc lea or das faddl xchg and pop mov loopne push ds cmpsl adc cmp xchg sahf iret cs inc mov pop imul (bad) subb push out sbb jbe icebp dec iret adc jbe mov int dec enter xor pushl dec fwait imul dec imulb xchg sbb mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec add xchg hlt arpl or test or sbb push add xchg ja pusha adc je xchg sbb and jnp sbb imul and test cmp arpl and xchg les pop inc mov dec fldl fmul in or inc pushf dec lods call pop inc fsubl xchg aad movsl sbb pop push sar test bound jb cmp push scas inc fisttpll pusha stc lock pop inc rolb mov loope pop hlt stos scas (bad) mov sti imul data16 ja mov dec sbb loopne push fimul adc mov or or cmp sub mov xchg or xchg mov pop lock inc jne sub or cld mov loope cmp fiadd nop mov mov cmp test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall test outsb sbb inc add fcoml sub inc out out mov (bad) sbb and in add add dec movsb stos add adc outsl fldt or and jno (bad) hlt ss insb cmp lock je pop cmp jl test fldt xor mulb adc cmpsl lret (bad) pcmpeqw out mov incl xchg adc stos inc repz ss fwait test ret cld aad lret in out outsl push jbe pop rolb repnz pushf in xchg add fsubrl je xor sbb push loop je in sub fldt aad out push sub push shrb mov in jle sub shll (bad) fmul hlt or inc pushf (bad) pop repz lret cmc dec ret inc push jns push mov sub push (bad) aad outsb jno (bad) push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl cld stos pop flds xchg push sarb stos cmp lods rolb dec inc xchg lea add xchg mov lea (bad) dec mov push and xchg stos sti in dec mov repnz sbb pushf jne push xchg xchg mov fcmovb add (bad) dec pop repz (bad) mov xchg cld cmpsl cmpsl dec add xor adc addr16 add dec rclb stos imul loop cli dec jbe push xlat push or mov test mov pop inc jbe push fisub cmp fldl and cmpsb subb add pop aaa add jecxz repz imul in xchg inc push mov xor inc dec js xlat and rcrl mov inc imul (bad) sti scas mov dec jmp (bad) jo xor (bad) lods or push push mov sbb inc (bad) pop mov popf incl js (bad) mov dec jecxz (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp lock jnp (bad) stos adc adc cmp push inc fucomp jbe xsavec cmpb mov aas xlat mov jne jne push outsl add adc dec pop fwait dec sbb push addr16 decb ret sub cmp inc shrl sbb cmp sbb les imul stc clc pushf pop and cmp inc mov or int fstps push mov jle imul std test sub int3 sub push push pop in (bad) out or xchg ret jmp push push sub test jne and daa (bad) xor mov stos and fisttp lock xchg mov leave adc (bad) pop fbstp dec (bad) sub mov sbb cmp and cmpsb ret or aam iret std jmp jge add fdivrl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl or sbb fldcw int3 and inc push sbb xor cmpsb pop out cmp mov sbb stos sbb jae enter leave dec jbe jb leave repz sbb nopl cltd push iret lcall sbb mov pushf mov add cmp ss xor ja jb mov scas test pop (bad) mov push inc notb mov jb jns clc push sarl mov out cmp daa mov pusha jmp mov ds test inc test push sub imul out int3 call js adc sub lock mov movsl icebp xchg mov sub in int sbb push and outsb push imul jbe nop into mov negl adc mov xchg int pusha sar (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall push sub ss (bad) cli imull ss mov mov fadd xchg cmp inc dec cmpsb shrb (bad) repz lea and orl iret mov sub nop outsb and test andl mov push mov xchg call imul daa cld out pop lock inc jne in addr16 fstpl xchg sbb mov in rolb aam les adc add pop xchg mov lret fadds pop mov or xor movsb sahf imull mov scas popa loopne ja enter lds insl push jbe in stc out dec out xor insl aam mov mov out add test jge subl je ljmp xchg js sbb sub rclb push xchg inc dec imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call or and (bad) mov jl xlat add xchg adc hlt push in sti jg loop push cwtl dec es pop sbb xchg or dec push and aas pop aad outsl scas test cmc (bad) repz push add cmp push insb push jmp xorl testb push mov cmp push pop jb (bad) lret xor mov imul pop pop shrl mov sub pop fstps adc pop inc pop pop pushf sahf push mov mov insl fidivr (bad) push (bad) xor mov sub adc add lock cld jle push in mov dec daa in aas pop gs xor inc ret mull das lret ja jne cmp das (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp sub push imul (bad) sub stc lods enter ljmp cmpsb scas mull mov insb setns and fdiv popf insl pushf aad in add and scas int push ds xchg lods sub cltd icebp mov jl arpl scas push shrb mov dec pop pop adcl adc and add hlt in scas cmpsb lahf pusha mov imul (bad) cmp mov cwtl pop mov add xchg hlt xchg sub stos in jg loop push mov sbb xorl sbb add aad sti mov cmp arpl or out mov or sub push call push std dec inc push arpl ds addb fs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc pusha ljmp xchg pop sti sub dec (bad) sti testb mov cmp mov push (bad) mov and jl dec je cwtl out (bad) test jge sbb sub dec mov ljmp lds lds and cld sub aaa sub dec cmpsb in out popa push shl jecxz lods ljmp cmp lods pop xchg daa mov out iret (bad) out (bad) and mov lods xor inc jb ret mov jp or and aaa loop inc out dec hlt pusha and call add lock ds pop ficomp std mov push mov push adc push and push inc pop sahf fucomp sbb sbb bound inc pop mov mov jo sarb and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp js or dec push mov stos ds cmpb aad or ret pop loopne pop int test xchg pushf mov jmp add or popa pop fnstenv mov xor xchg jo fldt loope cld jns push mov (bad) je lock cmp arpl lcall pop je cltd push imulb les sub add adc inc push arpl xor xchg inc fyl2xp1 mov (bad) inc movsl lahf cli and lock lss push xchg adc jge or inc rcr cmpsb (bad) adc je inc (bad) adc push dec sbb dec push add mov push adc mov mov xchg sub loop repz (bad) fiadd xchg or cmp (bad) popf xchg in cwtl (bad) imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call roll lock xor outsb ror mov inc js add sub xor pop mov pusha push jecxz iret jmp push and scas popf cmp push cmp into scas jg lea push cs lret shlb imul add into push xchg or jns inc out repnz fcmovb mov sub and mov mov pusha push xor mov decl sbb fs pop jnp mov or lahf mov push add icebp repnz cmp adc and pop mov jns mov sub xor fwait mov add mov pop je lea insb call aas daa pushf outsb lcall mov mov jmp outsl scas repnz xlat (bad) xor sub in out push ret out je call push cltd inc fisubl xchg sbb add (bad) fcmovne stc aaa (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov inc fisttpl mov (bad) imul rcrb inc pop lret push push mov call cmpl shr adc movsb mov sbb rcll push inc mov mov leave mov sbb repnz cli push stos test adc int3 jnp out add (bad) in xor ljmp xchg (bad) push (bad) jb aad (bad) fcomps adc loopne sti sub call xor sbb lods cli fstps jmp outsb loop sbb movsl cmp add adc jns (bad) sbb jmp repnz int3 pop xor xor enter push or sub jnp clc test in push xor int push lret (bad) leave and lock sub rcl mov lods pop cmp dec dec xchg popf addr16 dec lods stos (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl mov cmp push xor sbb adc stos push lret and jb mov call jae leave out pop or clc (bad) ret mov int or out test inc mov xchg je seta fsubrl orb arpl cmpsb pushf add cmp aas mov push pop iret test and xchg scas arpl xor insl xor loope in xor pop pop add lock cmp inc dec test test sub pop adc in aad sub inc ret loop or jle iret adc inc cli movsb shrb insb dec loopne stc scas xchg faddp (bad) testb int3 ja aaa mov adc and xchg jp loopne fs mov dec cli cmp jno sub incl dec or adc mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall xor mov rcl lret jecxz xor jo mov js add rolb movsb jp sbb mov lcall mov das cmp sbb xchg lea es loopne enter enter pushl movsb pop cmp scas mov jg popf sub and in mov mov stos dec out or mov push scas cmpsb xor inc pop insb shll pop sub and dec pop mov mov es cmc jb jl and jb aam out or add xchg pop pop add mov push mov dec aaa jecxz push (bad) xlat call arpl mov (bad) ljmp push inc std fsts push stos imul ret push orl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl sbb in add inc push arpl add (bad) and sub lods scas shll roll into call stos xor addr16 push adc (bad) adc repz addr16 fcmovb sub test jns pop mov stos cltd jns jp pop sub or jnp cmpsl pop daa into mov shr xchg fildll pop adcl in mov cmpsl ret mov lcall mov mov jle adc pop test mov int3 aas imul cmp movsb lret loop and (bad) in ds mov and lea outsl sti out scas stc jnp cmpsb mov insb stos mov sbb sub leave jno repnz xor sub mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call (bad) addr16 mov clc out out dec pop aam jl pop mov imul push popf mov mov xchg stc cwtl jae addr16 ja mov add (bad) cmp aam inc or sbb mov mov pop add addr16 and ljmp cmc lahf cwtl jmp outsb mov (bad) rolb shlb cmp cmp das fst sbb daa push mov sbb sahf shl mov fcomps push xchg pop inc mov xchg jecxz mov decb add addr16 pop cld jl test sub push cltd jno ja pop mov into je xor insl push loope mov std das scas push loope add pop xchg xchg sub mov and cmpl aaa inc ret push stos ficomp lock adc add cld aam mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp hlt and or pop sub les adc mov cmp or push mov call lods and and pop mov int jnp test inc xor mov das mov fdivl sub inc sbb or cmc fiadd dec mov enter cmp push shll and push add jnp push mov xor arpl dec data16 cmpsb inc jmp xor xor sbb dec sti cs outsl xor fs jl in sub stos js je and movhps shlb cld shrl jle adc jle mov jne or cmp inc das add lret add xchg mov repnz and xchg pop ss imul pop out pushf nop xchg and rcll mov mov pop (bad) pop (bad) xor aad arpl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl xchg sbb jp and fsubrs mov cmp lock mov and push jl fsub add sub andl test stos pop mov mov adc cltd cmp push je inc std cwtl cmpsb mov les jecxz nop testb aaa aaa jg and jns jb sub or or cmc andl rcrb xchg or cmc dec cmpsb movhps xchg pop inc add ror jecxz jae or cmpsb mov lods jp test loope push pop dec dec xlat jnp mov adc xor pop insb repz adc out clc dec aam sub xchg cmc gs in add or sub or das xlat in or pop jmp scas out repnz icebp jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp xor stc push scas inc in cmpsl pop (bad) sti xchg mov mov push xchg leave sbb push push fisubr dec rclb cli pop sbb leave mov scas mov jle sbb push xchg mov dec mov pop push mov das sti push pop and ljmp lods subl mov sbb inc or test xlat fstpl and icebp loope ret mov icebp call aam mov scas lods scas ja push adc ss fidivl lret mov mov sbb xchg fstpt pop pop adc mov loope cltd mov jecxz movsb lods loop ds adc dec xor jmp mov mov cmp push clc xchg movsb (bad) outsb xchg mov mov movsb mov jns mov out fildl xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl dec in sub fild outsl leave idiv into mov xchg xor pop in xchg mov pop cmp mov lcall int cmp pushf mov pusha mov adc xor or add jmp and mov (bad) (bad) dec gs (bad) je and out push popf lds jp movsb fnsave cli adc insl xor jge dec mov pop in mov cmp decl or int sar stos int3 xor lock cmp mov stos rorl cmp xlat pop arpl incl test out sbb inc std xorl xor xlat mov ud2 jecxz ss mov jo mov es fbld loopne push test out xor adc jnp mov mov jl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fistpl push shrb arpl leave std in mov or xchg sub rcl jae jmp clc aas jb push arpl mov (bad) mov dec mov jno out or aam dec adc test push adc mov sub ja sbb adc popa lods lods movsb xor add ret mov xor test enter mov jecxz mov sub jge jp sub cmc jns sbb cmc cld pop xchg xchg inc lods and inc mov dec jmp and movsb rcrb loope mov pusha insl xor or sbb in pop movsb fnclex lret jg mov cmpsb mov mov pop xor shlb dec jp xchg outsl inc aaa push xchg sbb sub outsl popa (bad) rol iret (bad) ss fnsave mov pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call lret sub test (bad) hlt cmp icebp pusha test bound dec jecxz cmpsl pop incb icebp xor scas push sub sub sub jle cmp and and jnp xchg in inc aas add sbb cli inc lock xor jae int aas mov push fdivrl fnop push mov das sti push stc xchg jle dec lods int3 (bad) sbb lcall inc subb in fimull mov sbb js and (bad) xchg adc ret loop outsb out rorb in sti and jae mov push or movsl xor add out pop les pop lahf scas mov pusha inc dec scas jmp (bad) mov arpl inc jmp cmp das push std (bad) pop inc xchg cmpsb aas or push mov or fxch ja cs adc cmpsl popa (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld jp shll pop mov xchg lret cmc cld mov rorb push or (bad) (bad) (bad) ds stc sbb lret push addr16 xor or test pop icebp jp test mov aad jbe pop mov or and jb dec (bad) jle mull push xor xchg rcr xor cmpsl repz lds dec movsb push mov (bad) xor addr16 in jno sub mov inc jno pop outsb xchg mov inc adc mov mov inc arpl or xor and adc lret arpl shl mov ret inc ss jl iret test push mov loopne xchg lods je adc xchg jp pushf in mov fwait es std fildl pop stc mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call cmp pop push jecxz loope cmp cwtl aad jae lds cmc in or xchg sub (bad) cmp push out ds mov je or out cmp insb ficompl sbb sub and arpl (bad) add mov enter outsl pop imul adc push je rol mov xor test or mov arpl xchg icebp aaa sub or call iret hlt jp fwait xchg test les adc daa adc inc and xlat mov repnz sub mov js cmp (bad) test cmp loope sub jnp repz test lock je push sbb cmc xor test inc out lea fisubl add inc inc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call push std or sar mov fstpl ja push sbb cmpsl sub or decl cmpsl xchg cld pop lcall ds sbb (bad) sbbl push sbb int or cmp fnsave lret clc pop xor jae pop sub shrl sbb lea lods jl sbb hlt ret sbb xchg ljmp dec test out sbb adc nop aas xlat push xchg mov dec cmp add loope xchg ljmp add mov xchg test hlt lret dec fstpt mov fisttpl add out and pop xor inc inc pop lahf add and sbb push and lods (bad) xchg sbb lods movsb into sub sub leave mov and (bad) mov or stc aam (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp push fimull hlt jl cmp xchg push xchg mov add icebp cld sub add and ffreep loopne test xchg pop pop cmpsb setge insl pop in cmp pop (bad) adc rcl mov xor insb xor mov js mov movsb sbb in pop outsl aam sarl pop subb mov movsl icebp test lods mov ret dec call and movsl mov movsb xchg lahf xchg mov (bad) rep scas pop pop popf ljmp sub jecxz push mov inc ja mov mov cmpb inc clc push mov (bad) xor dec push imulb cmp (bad) cmp xchg ljmp push add incl cltd jmp stc movsb mov es rcl or ret pusha (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call xchg mov imul cmp push sbb add pushf nop xor pop sbb es xchg stos pushf aad cmp daa int3 std in ret nop test les imul movsl mov stos adc or lea pop xor lea ljmp and add push (bad) call add imul das pop mov dec inc fwait adc mov out fisttp aad xchg loope dec inc cmp fwait and jge jp xchg loope dec lahf in or xor (bad) and xor jns into repz jmp dec or sub (bad) enter xor insl mov repz mov aas repnz sub (bad) repnz ds pop jbe (bad) scas and imul out jns and arpl jno test sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl inc mov pop push push jae das sbb sbb inc fwait ds and pop popf sub repnz jmp std ret test xor add (bad) inc insl jo fwait mov mov ss inc sbb and ds dec inc push xlat cmp xchg imul or xor pushf call mov hlt mov add and clc jp int push pop shll mov ret pop andb xchg imulb dec sbb jae psllw jnp dec sbb mov shrb cltd fxtract (bad) sub jl xchg mov xor fisttp mov push fadd inc jle jbe sub adc adc dec data16 jge push adc fidivl loopne repnz dec push inc lret imul arpl imulb mov mov outsb insb dec mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp in nop imulb out xor mov or mov jp stc fnsave jne cmc mov xor add xchg cvtdq2ps push fisttpl ds mov lods inc imul add xor daa adc or lcall mov in mov or js sub cmc xchg sub rclb pop push fisttpl push sub js push sub adc fsts addl and dec int3 test mov jle sbb push out leave fadds dec pop mov call enter retw scas mov adc js je xlat int xchg mov mov jmp push stos cmp cli por pop sub bound jno lret lods jb push xor mov add jb (bad) jae inc jg ss sub or push push mov fsubr mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl dec es lods (bad) lcall ret mov pushf mov xchg nop push xchg push pop rcll xchg cmp shl sub in dec and outsb rclb jmp xor inc push arpl sub loope sbb mov idivl loop fcmovbe rcll adc loopne sbb lea (bad) dec sti xor call std or push push adc jge aaa movsb mov insl sbb data16 mov sbb mov add scas add xchg ret mov or movsl lods mov xchg and add popa dec pop cmpsb xor popa imul sbb pop adcb iret adc xchg fstl test sbb iret insb idivb add sbb sub push mov jmp jbe (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp jno pop cmc and mov ds jle popf adc xor pop push inc out mov mov (bad) aas cltd adc hlt cltd cwtl iret pop push shlb and ret mov pop loopne jo sti pop cmp test shlb mov scas dec push jnp push pop xchg inc inc or and inc cmc pop adc and (bad) xor clc push push xchg push jge das mov cs aad (bad) mov jbe adc ljmp mov sub outsl aad dec pop out cmp adc lock (bad) jno pop sbb mov ficompl xor cmp pusha jl js and fwait xorl dec mov dec fcompl repz push mov adc push hlt cmpsb jmp cld or mov imul mov push inc lods pop mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl mov dec add pop jmp mov fisttpll int3 femms rol popa int3 and insl pop shrb loopne and dec pslld mov (bad) dec subl lahf adc jb (bad) xor cmp rcrl or mov fcmovnu sub add aas sti mov cmp or cmp mov ljmp or movl push shrb pusha mov xchg sarl mov inc std push jmp adc insb iret lods mov mov scas pop bound xorl dec mull scas add sbb out fs mov pop sbb mov scas jecxz,pn addb negb fmuls and xchg lods ret out dec pop sbb xchg fidiv or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp mov push pop clc (bad) jo hlt (bad) pop mov mov lahf xorl inc leave mov fbld js stos xchg (bad) cltd sub xchg jae or ja rclb push jmp shl xchg sahf dec add les or add in pop lods dec pop or (bad) call fnstsw jae sbb (bad) pop andb mov mov jmp loop call out cmp mov imul mov mov pusha cli mov fs inc mov in sahf stos and mov sub pop jb or fs outsl jle dec ficompl inc add pushfw aas mov inc jbe repnz add and das daa xor iret and (bad) stc sub xchg in lcall fldenv xchg add ljmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std cmpsb jg and xchg (bad) mov inc out or dec addl icebp in pop xchg loop iret cmp in xor popa inc xchg stos (bad) xlat mov xchg jge lock in cmpsl daa push dec insl (bad) pushl cmpsb or rcr fildll dec jle cmp adc inc xor dec sbb mov push xchg inc mov and pop jg xchg mov ds scas stos xchg (bad) fisttpll push data16 roll pop dec inc fnsave push movsl ljmp cmp sbb mov aam jecxz push sub lds and mov (bad) adc cmp test or popf loopne pop fimull or insb mov add lea adc xor cmpb push or jle adc inc push cwtl adc mov cmc es (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall pushf sub lea addb out loope and cs stc hlt and mov dec out and aam imul xor mov xor fwait mov xchg or popa inc ficomp daa adc pop cltd and fcom push xor out push sbb mov jge cli scas int3 push and nop or mov sub xor imul lret pushl push sarl hlt push ret sub enter repz jle mov cmpsb add pop add mov push scas pushf es icebp and jns test popf ret xchg jp out pusha cmp jo movsl dec and add or dec sbb movsb cltd mov pop pop xchg inc aas add adc je inc add fs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) out mov inc rclb aam popf mov mov xchg mov dec fbld imul fsubrl lock out sti outsb jnp xchg and adc dec into push out add ret cmovs movsl mov rcrb dec or cld hlt inc fmull push mov icebp adc in aad outsl popf aas push mov add sub adc inc push fmull push sbb fcmove lret test in adc stos cmp push je ret repnz inc sub stos xor fwait push or xor test pushl mov (bad) ret (bad) xlat aam adc xor lds mov adc mov pop loop in mov push fs in pop das call (bad) dec pusha out jmp addr16 pushf and adc pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall mov pop dec fistp divb and inc push xchg fsubrl insb push inc mov jae and rol outsl aas jmp ja hlt movsb push std or call xchg scas dec pop popf push lea jle in (bad) cltd jp cwtl add out mov jns stc arpl icebp cli pusha in icebp sbb cmp push lock (bad) or ss les mov idiv aam mov sarl ror cltd decl icebp pop mov nop ds mov mov int3 aas ja int nop dec fstl xchg and aas xlat push imul sbb sub loope cmp nop push pop pop das outsb mov mov cld icebp and fbstp push emms fnstenv test pop mov dec test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec (bad) or imul sub add divb loope jae mov pop ficoml fiadd push push ja aaa aaa ss xor mov jbe fs mov xchg sub hlt in arpl (bad) mov sbb cs push (bad) and adc aad and sub xlat lret jecxz icebp mov insb xor mov js adc dec adc add cmpsb pop in push pop std rorl adc jbe sarb jmp ds popa push popa lea xor into lret cld sbbb push sub addr16 and or xchg dec inc out xor es stos pop loope repnz push pop imul dec mov stos int sub sahf push push pop add ret cmc adcl mov fs mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl adc enter fs cmc repnz scas add inc adc sub movsb pop movsb cmp and stc push jno push fucomip popf jp mov das es cmp ret ficom push mov add repz xchg (bad) xor out pop pop mov shl jne fwait inc xchg ret adc je push imul scas pushf mov scas xchg inc fisttp insb int3 mov clc (bad) call js lods inc add xor (bad) cs mov add imul (bad) sub jo pushf mov das push or mov mov inc popa cmp adc sarl ljmp cmp inc cld rcrb xchg data16 lods aad out push into cmpsb sahf jae je cmp lcall or lcall inc mov adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl test push pop mov int pop aad mov mov es push fwait aas call ss jg add lahf iret mov mov cld sbb pop loop stos jl cmp insb xchg mov stc sti mov cmpsl out push sahf mov adcl imul push mov daa lret add push push push scas mov je dec test xchg xchg pop bound repnz lahf add mov arpl cmp sub cld inc push js adc jbe clc mov test mov inc xor add lret sbb nop add mov cmpsl aad outsb inc sbb icebp (bad) fsts sub add and sub lcall jns inc push lahf cmp test leave xchg mov loop addr16 (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl cwtl sti mov mov stos loop cwtl in ror stc push mov in push sub dec sub mov dec dec dec das xchg aad out fimull mov (bad) decb mov cmp sub out fwait or scas push jae fimull mov (bad) imul adc popf mov sbb pop cmp loopne xlat jno jmp in dec sbb push lods imul in or sbb sub test cld aam inc (bad) and mov and lahf hlt push adc and mov lods lea jb pop int3 mull pushf add pop mov dec dec repnz cmp xchg jmp clc xor rcrb inc sarb js cmc shrl xor mov inc jno jge movsb adc lret adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl jmp add mov inc push (bad) jb cli loopne mov movsl xor dec push pop jg (bad) xor xchg jmp repz cmpsb jbe dec out (bad) jmp sub mov fsubrp into pop xchg (bad) rorb mov fistp test (bad) aad xchg xchg out pop xlat and xchg int3 mov mov shll and mov (bad) mov add xor loop out out rcl rcrb loope xchg xor cmp cwtl in lcall jecxz pushf adc dec push pop mov xchg test test lahf in xor pop das inc mov mov and repz add jnp js or sbb leave loope xlat mov dec rcr cld lods imul xor mov sub fnsave (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl stos pop bound mov mov cli test idivb fs in push dec xlat repnz dec inc cmp pop jnp add adc test sub dec jae mov dec mov xchg jmp daa ljmp or fstp pop std xorb into scas scas xor arpl sbb push ds sub push pop mov jne mov mov cmpsl sbb push sbb out cmp stc jge stc sahf xchg inc aas or push lods sub jae aam push ret push fsubl sbb jnp mov or jp mov pop jecxz dec mov loop mov scas mov (bad) sbb mov xchg inc xchg push xchg (bad) xor scas pushf aad lcall add (bad) popa and pop pop fdivl xchg jno (bad) mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl ds scas sbb outsl stos pop adc mov jecxz mov shr cmp (bad) fcmovb dec mov in adc (bad) das fldcw inc dec mov push daa imul mov inc out mov sbb andb repz or aam dec (bad) rcr dec mov sti scas les int3 xchg cmpsb fcomip inc nop cmpsl and xorl jne mov dec inc or jo int jnp dec aas add sahf sarb cmp lods fisttp add mov (bad) mov mov (bad) mov cmp and in hlt xchg mull sub jle mov mov andb mov xchg daa xchg inc jp cli call mov sti ret sub mov jmp mov sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall data16 mov test xlat je fidiv sbb aaa push call mov sahf add cmp xor nop adc scas inc cmp pop cld rolb and jb sbb scas (bad) xor cmp loope xor sbb lds add and dec in sbb ljmp xor or cmp les jb inc test shrl (bad) (bad) dec movsl shrl jns mov xchg aam push cltd insl push jns stos addr16 xchg outsb stc pop mov mov into cmp pop inc sahf push loope in push hlt push mov shl out push inc mov or xorb inc mov loopne xor (bad) push lret jecxz or add cld cmpsb fidivl enter xchg dec call popf or loope lods cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov sub xor push add xor sub xor and in sub int3 popa push and mov daa in (bad) lcall adc iret faddp lods ds sbb push sub jle push mov sub adc int3 inc mov adc jge mov call ret xor add loop mov jnp push decb je inc ja adc ja ficompl lret ret jno xchg push (bad) out je xor mov test xchg push imul push push push into xchg mov dec push sub mov pop cmp sbb mov sarl adc test xorl pushf in cld mov test cltd xor (bad) js adc outsl outsb dec cmpl js pusha outsl adc rcrl int mov xchg xchg fsubr dec in aad rcll (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl jae pop hlt inc push or fstl int3 xor jbe mov mov jecxz repnz push stos push cmp pop or loop jle call mov adc xchg cltd daa and shrl push dec je and jnp and js xor pop cwtl scas or (bad) int3 mov repz in cs mov roll mov setbe sub sub movsl dec inc data16 adc (bad) inc in mov push jp xor mov ljmp mov repnz (bad) in push inc dec push jbe inc rcrb jbe sub fsubl aas adc test inc xor repnz xor int (bad) mov add push mov sahf (bad) xor jp hlt mov inc jne mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl add aad mov clc sbb sub addr16 xchg mov add jb ds cmp clc cli lret insl (bad) negb cmpsl sarb and pop pop mov mov cmpb leave es (bad) nopl adc pop arpl imul jl stos repnz xor insl sbb in js psubw and add ret jp push pop loopne repz std add call les sub fcoml xchg aad loope cmp sbbb mov mov cs and xchg in cwtl movsb (bad) stc inc lret inc shrb xchg sub arpl dec daa jp jge gs mov mov stos cmp repz addr16 jecxz in mov lods ret movsb jg fildll cmp pop iret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp xor pusha jg test das pop xchg pop adc imul cmp fadds xor dec pop fcomip jne pop in or sub jne fistp cs inc jbe push les inc setg cmp jg push (bad) fnsave bound lea sub hlt loope mov (bad) hlt fstpt lods mov arpl fadd fmul repz (bad) fdivp pusha test and leave cmp into outsl fsubr (bad) and and fdivrp pop mov jb rorb push xchg mov in mov push ja add mov push cld inc sub mov std push clc ror inc xchg mov pop cmp sahf push (bad) jne and jbe pusha cwtl inc adc dec sbb out push adc inc or test mov sbb xchg cmpsl scas insl xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc imul js cmpsb movsb lods call pop hlt ret outsb arpl andl mov xor mov (bad) cmpsb jmp divb scas rorb xor mov fwait ret in std and imull test or cmc or pop push xor ret push arpl xor mov (bad) and dec fwait xchg imul jp out lret bswap (bad) mov rcrl ja xchg or adc pop cmpsb movhps pop in cmp movsb rcl lret jecxz ja xor mov js add rolb loope pop in dec xlat jnp mov adc xor pop scas mull push (bad) lods ds out lea and xor enter mov jle movsb push std or adc out xor sub repnz adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl insl je pop decb fisubr inc clc sbb sub adc push jnp push bound xchg ljmp fs mov push mov pushf jmp sti xchg jg jp dec es fbld push mov imul lahf addr16 pushf outsl mov xchg nop push or sub psllw sbb sub in ret loopne nop sub pop push imul and arpl mov fisttpl dec mov insb fcmovbe pop add sub mov push mov call (bad) iret outsl shr adc movsb mov dec inc xchg cmpsb mov push push sub test int3 ja aaa aaa mov stos and jp xchg out fwait or xchg cmc cld sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call and fild xchg or adc pop cmpsb movhps pop in cmp movsb rcl lret jecxz ja xor mov js add rolb loope pop in dec xlat jnp mov adc xor pop scas mull push (bad) lods ds out lea and xor enter mov je scas aaa lods inc pop cwtl xor jne add or dec cld roll lahf dec or adc sbb (bad) fidiv mov aas pop pop dec sub insb adc sub sbb ds and nop cmpsl sbb add push ss faddl xor mov movl daa inc and adc push jmp divb mov push cmc inc out mov das push (bad) ss (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall sub in ret loopne nop sub pop push imul and arpl mov fisttpl dec mov insb fcmovbe pop add sub mov push or mov pop lds adc mov jp jbe subl cmc cmp test int3 ja aaa aaa mov stos and jp xchg out fwait or xchg cmc cld sub fild xchg or adc pop cmpsb movhps pop in cmp movsb rcl lret jecxz ja xor mov js add rolb loope pop in dec xlat jnp mov adc xor pop scas mull push (bad) lods ds out lea and xor enter mov jle movsb push std or adc out xor sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp cltd icebp jno sub adc stos decl je pop decb fisubr inc clc sbb sub adc push jnp push bound xchg ljmp fs mov push mov lods fstpt out icebp or es fist jae push call (bad) jmp int3 lods pop adc nop cmp je xchg mov jecxz sub leave dec or sub sbb lods int addl (bad) in sub push pop dec mov leave (bad) jo adc jae loop and xor jmp mov mov cmp jo leave dec cvttps2pi enter jle lcall mov (bad) fldenv jg xchg aad ljmp lds xorl aad dec ret fs push or or cli cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call xchg jle push cmc iret xchg xchg inc out repz fcomip sbb push adc xor push (bad) push loop cmp movsb mov lods xchg ja push add enter pop dec bound lahf mov push call and mov mov mov jo jbe sub pop fstpl lods dec xor fwait and push iret test fs jo leave int mov je inc test movl repnz xchg imul loope leave sahf cmp push ret (bad) jmp les sbb sub pop dec jl sbb enter and dec push adc add and fs lret mov (bad) in fdivs mov jle jge or or adc pop insl ret mov push fldl out push jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl cmp aas cmp lock mov das mov cmc nop inc cmp lcall maxps and xor in lds push out mov jns fcompl cmp mov mov fidivrl repnz pop jecxz je sbb enter aas add sub cmpsb shl push cld cltd div mov pop rclb push or (bad) fcomps xor mov call icebp or ficoml or and jnp push sub fs mov mov add pop push insb shrl add cmpsl popa aaa ljmp xlat sbb mov jbe adc lret xchg add mov pop xor pop xchg push inc jg cmpsl mov insl jae push cmpsb (bad) xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call cmp xor adc icebp sbb dec insl (bad) adcl fcompl je div dec data16 fnstenv clc jno out data16 dec jg push lds jae cmp repnz pop insb popa out rolb cmp push aam fsubs mov clc mov repnz inc cmp out pop mov add lock add inc out pop mov and (bad) mov pop jecxz scas pushf nop sbb incl ds or dec fldl pop (bad) jb lea (bad) pop sub pop addl aam xor cltd sub pop jecxz enter mov mov (bad) adc fadd int xor push mov sub notl mov rcl adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl nop sbb imul stc rcrb or cld out jb sarb gs jno pop aad jns add lahf cmp cwtl ss data16 stos mov add push add (bad) insb iret int3 jb mov (bad) xor mov ljmp inc inc sub test push xor xor lret out fmuls pop push mov add add sub dec lock sbb in pop pop divl xchg cmp mov dec les pop inc pop sub jl push cmp ja leave dec jnp cmp sti inc pop outsl outsl loope mov add sbb or cmp rol lcall push jmp and mov mov imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp jmp push pop jecxz scas push js xchg and into pushf mov test in mov xrelease aaa add inc (bad) mov shrl dec inc (bad) pop cmp ficoml dec out mov xor and (bad) pop add add ffree mov add mov nop dec ficomp add cmp ret (bad) jne pop fsubrp lcall push int inc leave sahf adc jae inc sbb fs insb mov out pushf cwtl dec in xchg mov ljmp inc dec sub jl sub pop popf dec notl test mov inc adc into test mov adc pusha lods fdivrl gs sahf xchg cmp mov lods mov sub xor test sub in cmc dec pop jo shrl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jle inc add mov outsb popf jle inc mov fistpl sub dec notl jl pop push icebp jb int pop inc xchg pop pushf cli cli pop cmp lods stos ja add jo sub jno ds pop jg jnp int fs sub cmpsb inc push insb outsl lock push mov aaa push jns or test mov mov std xchg stc or push xchg cmp mov bound incl mov rcrb lret icebp sub insl push xchg dec mov and lods sub popf jmp sbbb sahf scas pushf xchg insb in cmc mov or inc mov add jno call and rcll dec out out loope ss jne iret dec or popf out sbb jle into mov sbb fwait jo jge popf xchg mov je sub clc leave mov and notl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call sbb push aaa (bad) mov jne and cltd or cli mov xchg push xchg hlt pop dec scas stos jecxz mov inc jnp cmpsb bound add test sahf cmp xlat (bad) mov (bad) notb cli inc adc rorb cmp ret stos imul shll inc loope mov adc push push jne test dec xor ds xor fucom pushf loopne fsubs dec je scas lds cwtl daa push xchg popa push inc mov out bound (bad) addr16 inc and jg mov (bad) mov aas sub test add out test xor inc clc sbb sub adc push jnp push and pop jle inc (bad) xchg stos sbb sub sbb mov into movsl lahf mov lcall push jmp loope inc es (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl adc outsb fmul adc aad and pusha inc enter xlat or icebp dec cmp mov popf dec xchg int fwait nop add stc inc or add popl clc cmc inc push jecxz (bad) jb call sub shll jle,pt sub jge int cvttps2pi loope cmpxchg ficoml mov or sahf data16 std ret neg pop and cmpsb mov arpl les push inc cld xchg dec repnz inc sbb cmp (bad) mov mov mov js movsl in mov mov push jae sub sbb mov stc pop pop insb (bad) mov mov pop sbb cli mov daa pusha in (bad) jns scas insl inc testl iret enter out jp adc test dec cmp das ss (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp push loop cltd in movsb iret insl push inc jle (bad) xor push pop popf dec (bad) jb jmp mov adc repz sub cmp adc pop mov repnz push or ja pop imul rcl sub and aas push gs or adc mov cltd and ljmp in bound clc adc push testl adc adc fdivr aaa (bad) inc out push xlat adc popa xchg dec (bad) lret enter in mov pop subl and xchg fwait sub adc imul push or out mov inc inc ret dec push adc out add jle enter mov pop cld mov jge (bad) int3 pop add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp loopne xlat incl pop mov in xchg mov into xchg inc fldl dec or jmp xchg jo mov in push movsl lods into pop xchg rorl daa push sub rorb push cmp cmp (bad) test push out pop add clc test movb int js mov inc call dec xlat push mov mov pop jne movsl ds bound aaa test outsb es and jae ret in rorl jg adc jle inc into rcll sub repnz adc stos decl je pop decb fisubr inc clc sbb sub adc push jnp push bound xchg ljmp fs mov push mov pushf jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp sti xchg jg jp dec es fbld push mov imul lahf addr16 out pop (bad) mov mov push xchg jl and popf sub dec repz xchg in xchg sahf int outsb sbbl stos test scas imul mov nop int3 xor jmp imul adc fs mov push mov in stos fimull mov pusha mov (bad) fcom mov push inc xchg cmpsb cmc sti jbe dec stos in testl test jmp or or xchg push and pop cmpsb imul dec jge cmpsb push push inc cmc jle cmp lret mov ja xor mov jo fnsave mov xor in dec xchg adc loope dec sbbl pop scas (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl and loopne addr16 push stc sub inc push sbb cmpsl enter mov adc or fwait inc scas lods xor and or ret in sbb mov adc mov flds xor ror cmp inc push jns outsb ret (bad) cmp cs das push jae xchg ljmp or lcall inc cmc mov (bad) je popf jecxz aad cld sub pop pop push clc add pop push shr adc repz mov loope dec fidivrl pop mov and imul stc lods xchg inc clc in test lret jnp mov mov push and and push dec (bad) jb loop and push sbb (bad) push add or ja clc pop or loop or jne mov mov push mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call enter je sub out aad arpl cmpsb lock movsl sbb push push mov leave dec or sub cli cwtl repnz pusha loop nop (bad) pop lock jb mov icebp add je add lds and cmp jp cmpsb mov fwait arpl aad sub insb rcr rclb sub and mov and xchg jmp jnp jne (bad) fcoms (bad) lret cmpsl jbe xchg ds lods jl sub pop push les xor push je (bad) xor push cmp adcb push gs test xchg inc cmp mov (bad) jns mov stos ret adc xor adc jl cmp jns je xchg outsl lahf add je ficomp daa inc arpl add mov xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jp,pt cmpsb orb bound lcall and dec pop add in mov mov rcrl jae (bad) dec in mov ss (bad) jne subb mov ja mov sbb add or cmp pop fidivl lods or xorl cs or ret (bad) enter inc call (bad) xchg inc cld (bad) adc in jmp adc jb jne (bad) cltd scas ss mov clc cld inc loop pop (bad) mov jns enter fisubr mov fstps lods fisubr xchg dec out je ds bound adc in push repz pop fs loop scas (bad) divb inc daa add sti out loop pop xor lret sbb jmp adc movsl daa and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec mov dec inc and fiaddl dec es das cmp cmp shrb dec dec jl cmpsb xlat and and mov repz out or inc notl ss push add add mov js sti jmp add mov dec sbb inc outsl sub push loop fnop sub cmp out arpl (bad) clc orl sbb inc jns add mov nop sub std test iret dec inc mov adc add (bad) sbb (bad) mov add fdiv aas insb hlt fs fidivrl dec mov pop xchg and push sti fsubr mov cltd lods lods sbb jecxz das xor mov dec lret mov loopne mov pop sub jne sbb adc out popa sub ror lods push rcr (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call mov xor cmpl leave movsb out inc add aaa icebp cli repz and (bad) int jmp mov je mov jle inc or sub cmc lcall pop out mov sarb mov fmuls fs jno pop cli inc data16 or shll call movsl xchg jle adc fisubr lret pop lret mov data16 mov pop jno push out pusha pusha pop xchg call xor adc enter leave jnp pop data16 add outsb in fiaddl fstpt scas sarl popf inc outsb cmp addr16 ljmp int3 jno clc stc dec xor cltd (bad) sub adc dec sub push fisttp xchg outsb inc or pop out push outsl outsb out mov lcall (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call and jae mov mov or mov cmpsl aam negb aam jbe call out cmp lock (bad) mulb fisubrl push mov jo mov insl call mov jns mov lods js xchg mov inc cmp aaa jae ja xchg cwtl and cmp outsl mov push adc rorl dec mov cltd xchg cmovbe es int (bad) dec stos rol xchg stos pushl sbb or int fnstenv sbb and cmc (bad) lret jo lock (bad) int in dec lcall arpl dec pop cltd push in ret fs outsl fwait inc xchg out jae sahf xlat sub notb outsl popa inc sbb sub cmp or out cmpsl scas movsl into daa mov xchg pushf fiadd xor sti pop stc test jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call insb fwait adc lods into jo and adcb pop xor mov inc outsl pop loope mov jno ja test xor cmp cld pop cmp pop jmp sahf dec js push (bad) mov loop cmp adc fcompl fimul pop and sub jl dec rcl es aas sub shrl push fs mov sub daa push insb jae test (bad) mov (bad) xor lret and popf out jle lahf (bad) or cmp mov aad jp xchg int3 pop jmp inc in pop xlat or test push int3 ja enter push cli repnz xchg adc cmc pop cs or dec aam test cmp pop iret imul dec divps inc xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl inc or cld mov addl mov push pushf cmpsb add ror enter jp and lret outsl and ljmp add xchg and jns pop fdivr lcall pusha loop sbbl movsl (bad) or ret inc jecxz outsl jnp sub cmp dec or mov mov push add mov sbb outsl ffree push push ljmp mov test rolb xchg (bad) push mov inc push aas (bad) sub lods jb xchg ds fidivr push inc outsb adc mov insl insl pop and jnp stos jo aaa out jle faddl into dec cli push cld adcl jns adc push sbb push clc lcall out in push push cli mov dec xor ja dec cmp dec xchg jmp jg cli (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl aas inc push (bad) nop lods push mov mov es sbb movsl mov and lret sub test fcoml xchg clc sbb cmp push out add adc iret add xchg out and inc outsl sarb xchg and xchg cmp cli cmc mov pushf lea ret xchg movaps dec fisttpll xchg push mov inc aaa les sar push add cmpsb xor outsb cld jns add out add loopne sbbl clc mov inc mov sbb cmp cld clc (bad) pop cmp insb cmp in jno mov int repnz mov sbb aaa rolb inc and mov pop leave lahf bound pop (bad) hlt jb (bad) stos jmp mov dec jb sbb pop ss sbb pop dec jl mov sbb inc pop or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jge pop push lods hlt jl mov push in xchg lret xor rcr leave push les stos xor fwait and and lods adc mov rorl cwtl inc push push (bad) mov ja mov outsb mov xor ds adcl pop outsl pop addl adc shrl add pop cmp mov inc jge dec xor dec pop sub jg dec loope daa js aas jg stc xor push lods add xor pop gs add xchg lods push push int3 mov sub push dec xchg jecxz rorl sub jp aas loop mov add int jns,pt pop jns insb aam mov insb jnp and sbb into out cmpsb xchg inc in int xchg adc nop fs sub sub push mov pop pop icebp imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call push sbb aam insb sub std pop add pavgw enter xchg mov sbb (bad) leave movsb out inc add aaa icebp cli mul pusha aaa dec mov lret add push inc fdivrs push pop popf push in ret pushf hlt insl rcrb xchg mov jb xchg inc int push pop dec push sbb mov mov dec jl test hlt inc add jmp fnclex pop adc add mov pop clc mov cmp rcl out icebp clc ljmp sbb std cwtl push push and mov lea jae ret (bad) xchg in sub push jae cmpsb (bad) xor ds lahf push int3 lret fldt dec negb push and fist js sti out pop and jle insb cmp jl jnp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jg jae ret sub insl adc das dec fs rcrl sub inc jge sub (bad) int (bad) xchg aaa cmp lds (bad) outsb pop xchg notb rcrb out es adc or dec movsb push outsb mov and hlt mov push xchg pop mov adc ja (bad) sti mov xchg mov ret test and nop inc int3 (bad) xchg xor aas insb aam lahf hlt pop and lret insb mov xor clc dec adc popf fistl mov mov push mov pop mov std cld (bad) leave pop cmp ss cmc (bad) arpl mov xchg movsl out stos test fcoms and cltd or in jmp mov mov loopne push mov (bad) pop hlt js inc sub cmc bound and mov pop jp mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp push or scas flds jge fsubrl mov ljmp movsb push mov fsubr je add pop (bad) cwtl adc xchg ret nop sub call jge jecxz test movsb loope jnp jo cmpsb lret push sub inc (bad) fsts rorl xchg add inc js xor push sbb add push cltd aaa fmull mov xor pop and pop inc (bad) jae sbb data16 sbb fistpll ja (bad) or and aad sub arpl push lcall es fwait sbb mov leave je mov or push das mov mov mov jbe (bad) adc scas mov ds pop hlt dec fdivrl outsl jl das jnp dec into jmp hlt icebp mov pop cmc nop xchg cmc pop cs mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl push rolb popf stc inc adc inc cmp rclb mov bound addr16 (bad) pop add (bad) mov mov int3 addl jp fwait cmp ljmp jle aaa icebp cli repnz aas dec (bad) (bad) repnz in in mov add fs fistl jge lods sub incl pop xchg inc loop cmc scas inc stc repnz inc mov fstpt stos rcll and data16 loopne inc push sbb or shll fwait push pop add int (bad) pop adc jbe xchg jb movsb add fnstenv cmp dec sarl fwait jnp push das (bad) cmp cmp das adc xor les insl insb dec addr16 or sbb insl lcall jno nop add negl loop test (bad) ror push les (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl sub push insl je ds imul cmp pop pop or inc repz mov sahf xor pop add cld and sbb je (bad) repnz push repz jle push jecxz mov pop clc cli push mov int xor jecxz imul (bad) je add mov repz mov dec xchg xlat mov jb xorl push mov adc (bad) fs pop xor jg loope es sbbl mov pop inc dec lds daa (bad) mov or nop dec jle les or cs fmulp enter gs push sti rol and enter lock daa enter sahf dec mov cltd adc xchg push mul sahf mov aad or sbbl or icebp push clc jl adc cmp jl sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl cmp outsl in pop imul pushl pop pop sbb movsb test ja mov aaa int les xchg xor mov (bad) jecxz push leave clc call jnp inc cmp cltd cmovg mov xchg jns in (bad) out movsb fidivr inc insl or jg mov xor xor sti gs addr16 jbe mov ss int3 jge stos add cltd dec xor js out pop and pop xlat mov xchg push jno jp pop add movsb sbb sarl data16 dec xchg es jo test push cwtl and push jbe dec mov int pushf scas aas xor mov sbb cmpsb stc int dec fcmovnb adc push in push das fildll jp or xlat jmp mov lock sub dec in push testl jb jl into mov mov fcmovnb mov inc out nop mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp push inc xchg inc mov add sti inc outsb (bad) pop es or and aas pusha pop leave pop add sub sub clc xchg or mov sbb ffreep iret jae or (bad) call cwtl mov mov in dec mov add cmpsb popfw push jmp adc scas dec mov dec int mov cmc scas fs inc popa xchg lcall outsl push dec sbb push sub add or shrb pop mov cltd icebp sbb inc cwtl subb xchg test push cmp push shrb mov xor xor xchg push push and les out xor setp jnp aad mov mov dec dec jl adc inc mov sbb or dec cld or sahf sbb inc js and in sbb cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec jle (bad) (bad) imul ret push inc ss sbb inc dec cmp pop es jns cs pop repz jb aad lods xor xor cmp mov mov or mov mov (bad) inc mov push rcll std cmp sub push insb (bad) testb mov pusha ret dec scas daa push pushf inc aam stc mov inc clc ljmp and pop push imul and arpl mov fisttpl dec dec dec add pop hlt mov outsl pop addr16 les daa scas rcll xchg inc adc movsl mov xchg or (bad) sbb add sub cmc aam mov inc mov hlt vpminsw inc rorl inc push xchg paddusb mov jb xchg jle inc mulb fnstenv stos ljmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call dec (bad) push fdivrl sbb mov mov xlat mov inc les or int ret inc adc pusha lahf out lds (bad) xor mov stos fist inc inc imul (bad) fimul mov add imul fdivrs pop jb mov or subl sub repnz adc stos decl je pop decb fisubr cs jo jmp and faddp daa jp dec push adc and (bad) mov adc insb sbb mov mov xor mov add lcall push icebp or and fist jb adc imul int3 jmp mov jmp arpl out dec xchg pop mov bound insl xchg mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cli int (bad) adc dec les cmp push xchg inc aad fsubs or stc push and inc sub dec lret mov pop int xor out std mov xor cltd mov xchg jge (bad) dec aas or adc out xor in jecxz in movsl nop ja pop push leave nop inc ret insb push (bad) adc decl or fcmovbe sub repnz lock lods rcll sbb jnp imul dec repz movsb mov int push out xor or xorb cmc jb test icebp cmp mov cld and mov jbe jbe sbb stos and mov pop xor and test jg push or ret insb sbb mov into inc cmp fs inc cli cltd aaa cmpsb jns (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp arpl ja divl nop sub out mov mov xor pop dec and adc pop jg dec div dec pop pop and shll dec outsl jb les ss pop jbe xor and cmpsl hlt sub mov lret (bad) dec cmpsb js or push pop inc dec mov cmc cmpsl push loope pop mov rcl adc mov fdivl pop outsb pusha xchg pop pop fildll (bad) in mov data16 mov int3 push or push mov clc mov add pop xchg mov jne clc fimul or xchg sub sub fdivl push fcmovnu scas push rcr xchg (bad) or mov loope rol rorb aaa push (bad) out bound stos in lock jb sti mov nop inc lret push or fwait dec jmp pop mov cmpsl iret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl lods out shll imul pop jp inc mov push lret nop xchg nop push rorb out das pop push data16 jo mov js add rclb xchg aad xchg aaa adc push into mov xchg ds dec aas fcmovbe and dec and nop dec dec jne enter popf out js pop bound lods xchg push xchg or cli gs xor or pop mov xchg sub jb push push daa insl sbb pop push (bad) movl sbb sub sbb dec js mov xchg jbe and jl pop aam mov pusha mov (bad) jmp ret (bad) dec xchg sub sbb in popa jmp add rorb outsl jbe dec hlt fs push jp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl rol mov xchg mov frstor xor inc jmp xchg push mov push adc inc ds mov add jge int add dec (bad) fdiv mov sbb fnstenv or fisttpl fs xchg loop xor stos ljmp adc push inc lret (bad) push nop xor pop ret xchg mov push aad dec mov fs mov xlat les insl cs es sub (bad) lock pusha jo fisub pop push lods lret je movsl ja out into pop mov idivl mov shll mov jl push cmpsb cmp pop std cmpsb sub mov daa add jns and push lret lods in test sub xor daa mov push adc jnp out (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp popf jge imul xor push and xor lret mov and xchg call mov das dec pop inc push lea mov cs dec jg jle shrl jp cs pop out dec outsb popa jmp mov mov and sti test mov xchg lds xchg das cmpsl rclb in sbb mov je sbb fcomi push mov stc loop pusha notb repz subb push icebp pop cli (bad) mov mov push mov push aaa pusha lea subl arpl xor rorb dec mov xor pop dec les or rol loop xor push test mov rol iret das adc enter gs not in mov arpl out fldenv push xchg adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fcoms xchg jle outsl shll jmp insl movsl mov inc in daa inc dec cmp xor pop dec or adc aam mov inc sbb pusha fidivr inc std mov mov push repnz cld adc push addr16 adc mov dec sub sub shlb insl insl pop inc sbb outsb mov xor adc pop cld jb addl hlt push sbb cs xchg sub sbb jb in jp xlat movsb iret add jne popf insl dec out imul jnp ret or add sub inc push (bad) fwait lds sbb pop or mov xchg push outsl pushf scas out push jg aam in adc sub mov push fcompl cltd fnstenv pushf pushf sbb xchg hlt jecxz (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp aas ficompl les xchg add pop push fnstcw out mov int stos xor int3 outsl xor and inc mov addl je jb mov pusha pop insb aam jmp outsb inc je sbb adc movsl mov out (bad) (bad) (bad) xchg hlt xchg pop mov lods loope pop sub pop sbb call pop mov loope mov int jno inc out sub cli js xchg push cmpsl cli (bad) (bad) dec movsl xchg movsl lods jmp loop daa jb xor das ja adc mov ret sub or xlat and pop insb std cltd mov ljmp in mov cmp rcr out data16 (bad) sti inc inc sub call call cmp push jb lahf lods roll push (bad) lock (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl fnstsw inc int adc mov cmp pop mov push mov jle xorl push in xchg and push (bad) pop scas out jmp and lods into inc jge pop aaa popf imul imul jne push cmc cmpsl pop js aas ja stc add jb in orl or js push push mov mov xor xchg lea outsb pushf stc mov jg pop add or jnp cltd cmp (bad) mov popf aam mov xor (bad) push sbb repnz cmp jmp xchg dec lret shlb sarl push or fisttpll dec mov test inc inc cmc push cmp mov insb mov or inc adc int or adc push lods iret sbb mov aad push dec jp xor iret (bad) es dec mov lods aam mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add jecxz int3 push push cltd or iret mov pop fwait inc out scas cwtl mov jns mov sbb daa pop and rolb sub pop mov pop gs stos nop jmp insb jmp test addr16 lret movsl jbe (bad) pop xor lahf cld shlb mov jp cs xchg inc jns lods insl sub nop jge jae shrl dec inc or sub inc fcmovnb pop ds (bad) adc pop outsb adc lds movsl push into mov sbb arpl lds jns pushf jl cli jnp cmp push jg cmp (bad) cmp push xchg push imul aad or pop sub cmp or lods jo (bad) popf loopne imul push std cs xor sbb in mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp lahf and std cld push imul dec out dec in push stc xor icebp pop push lret insl in out mov pusha (bad) int scas mov mov (bad) mov flds xor cmp push enter and jle jb (bad) jb cmc js ljmp mov pusha push rolb shr xchg nop cli rorb cmp mov enter pop aas sbb out ret clc arpl sub rol mov adc aaa imul push fdivl push or adc iret lods repz popf push cmc scas inc stc repnz inc mov (bad) lods (bad) dec mov inc jg push leave bound add xor int (bad) lea push sbb lods test retw cwtl push enter icebp mov sub xchg into jp test js add scas movsb or xabort and xchg dec inc jnp cmpsl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall dec jno sbb mov cli data16 mov lea jle nop pop xchg dec jae pop cli adc shll stos (bad) cmp push (bad) je mov lock inc xor int3 pop jnp and and sub daa push mov mov test pushf inc fildl cmp dec sbb (bad) xchg (bad) xor mov repz std fbld sahf lret xor or (bad) sbb dec je sbb insb rcrb out nop push or sub mov loope jmp xchg dec movsl sahf icebp scas test xorl push mov dec (bad) ja call movsl or and popl test fimull inc popf (bad) mov or xchg pop sbb mov mov int3 mov fldl je es rcl stc arpl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl cltd icebp idivb pop (bad) dec setge repnz or mov mov sarl movsb mov sbb clc inc clc data16 inc and sarb aaa adc mov dec addr16 pushf mov adc inc add mov sub iret jl movsl pop gs mov sub and xchg dec (bad) ffreep push aad aam jne cmpsb cmp push movl or pop mov enter scas aam dec inc or ds jb fs xor or dec cli icebp and rcrl and mov sbb push daa inc xor mov out data16 dec pop jae outsl (bad) cmp (bad) leave adc outsl jmp xchg or push cmp cwtl cmp fildll loopne inc dec lahf in icebp or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall je adc sbb cmp int3 add sar pop cld jae xchg dec xchg xor pusha test dec lods dec std (bad) mov pop loopne mov push mov loop cmp mov xchg xchg push xor jo out push das rcrb mov dec sbb cmpsl sub sub dec add sbb loop sbb inc call dec mov aad push sub and jg jecxz and repz popl push lret push pop clc sub cmc lcall jp xchg mov jbe loope rcrb mov inc and cmpsb pop jns push xor xor (bad) movsb mov jmp mov adc (bad) imul push and les repnz out inc xor out xchg add aaa mov ds (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call push xor push jns cmpsl cwtl mov jnp jne mov pop fiaddl popf adc into pop cmp shll dec jns pop loop or sbb into jbe jecxz jns shrb shrd popa imul ja out mov add imul ss jb iret std scas sub and sbb sub cltd and movsb cltd or shrl ret sub pop (bad) cmp fildll dec ds xor inc cltd into and sub sub jbe pop cmp (bad) sub push (bad) sti int3 cwtl test cwtl mov lea add inc xchg dec cwtl stos xchg xor push dec mov xchg fldenv inc sub gs cli test jno adc in xor loope push jecxz in pop mov (bad) lahf and fcmovu sar (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call pop xor or or notb ljmp and pop fcoml jg inc dec clc xor (bad) mov sub (bad) xchg pop sti mov jae mov dec xchg aam loop dec sub cmovbe and mov dec addr16 mov (bad) scas (bad) mov mov sbb stc mov sarb in sbb push shrb mov pusha jno (bad) xchg adc test sbb jmp (bad) inc push jns ljmp js pop aaa cmpsl (bad) xor adc mov roll dec out (bad) xchg add negb divb fwait sub xchg ljmp xor dec sbb jge xor dec les sub push stc das push imul pop cwtl adc cmp add mov adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) out jmp mov or inc cmp (bad) ss data16 adc sarb out movsl in and jne jecxz repz mov and outsb loope (bad) mov pop idiv movsb xchg adcl jecxz mov (bad) push nop inc rcll (bad) jb (bad) pop rcll pop stc lret dec push inc lea sub jp fmull xor jmp iret test fdivrl push mov jp adc fdivr jmp adc ss loopne inc and lods loopne (bad) aam scas mov ljmp pop mov ret cld (bad) aad sub mov jo mov add push pusha and leave fs push sbb cltd dec (bad) mov mov out insb cmp iret test fmull jae iret (bad) scas jo roll xlat xor clc int3 dec into mov dec inc adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl dec cs or test push and lcall cwtl call pop add cmpsl shll add inc lret das cld pop sti push testb addr16 pop pop out push lret add int fsubp stc push sarl pop xor push xor pop jle jae into sub xor push lods sbb and pop jmp jae inc push push out xchg repz or imull cwtl xor ficompl jnp aaa fbstp jae adc add or sti addr16 enter cmc cmc and jae xchg mov daa cmp cmc cmpsb xchg add out std es push fldt sbb insb mov inc out jp nop or (bad) dec add imul sbb ja sub and mov push mov jle int3 lcall (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call test fadd in movsb adc adc add push jb sahf test test cltd xchg mov std out (bad) push stos add fwait and dec (bad) iret sbb imul or rorl ret cltd or inc in lods cmp sbb jle ja lods xor fwait mov out add and push in in jnp and and leave mov scas add arpl insl jle push mov and cmc out cwtl inc cmpl dec int cli aas nop add inc push xor insl pop mov pop out dec or push sti movsb xor ja iret cwtl lea outsb xor pop push push cmp jns sub icebp cmpsl mov mov inc xchg aaa add call (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc mov sub vpaddusb sbb das aas je (bad) sbb fdivrl and cmpsb lcall in mov xchg movsb dec xchg in (bad) sub xchg push sbb icebp dec cmp pushf aad sub in ret mov xor dec pushl mov jae push xchg fbld ljmp jb add or std fmull pushf test (bad) lahf ss movsl mov in ja movsl test sub scas int loopne jno rorl std in push lcall xor xchg mov xchg add xchg sub nop test repnz sub jmp cwtl sub jae sub das pop dec push aaa cltd push fwait repz insl enter ret mov add mov aaa imul add sahf loope pop in dec xlat (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jnp mov adc xor pop scas mull push (bad) lods ds out lea and xor enter mov jle movsb push std or adc out xor sub repnz adc stos decl je pop decb fisubr inc clc sbb sub adc push jnp push bound xchg ljmp fs mov push mov pushf jmp sti xchg jg jp dec es fbld push mov imul lahf addr16 pushf outsl mov xchg nop push or sub psllw sbb sub in ret loopne nop sub pop push imul and arpl mov fisttpl dec mov insb fcmovbe pop add sub mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push mov call (bad) iret outsl shr adc movsb mov dec inc xchg cmpsb mov push push sub test int3 ja aaa aaa mov stos and jp xchg out fwait or xchg cmc cld sub fild xchg or adc pop cmpsb movhps pop in cmp movsb rcl lret adc fwait mov sub popa adc shll stc popa mov (bad) jnp mov push jbe pop xor sbb (bad) lods cs out insl lea and enter mov jle movsb push std sub adc out xor sub repnz xchg xorl lds ljmp je pop decb fisubr inc clc sbb adc sbb xor daa push push jae inc add cld (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl dec fldcw jge ss jp mov dec stos enter mov xchg mov je jnp dec and outsl adc lret jb test ja mov in sahf push sbb cltd cmp push push sbb dec adc stos enter mov cmc aas mov in mov outsl and and bound mov fimull mov insb fcmovbe pop add sub mov imul lods loop jp stos fisttpl (bad) into outsl shr adc jge lods mov or mov push push sub (bad) cltd (bad) jbe aaa ss scas and jle xchg out lahf or xchg cmc cld sub fildl nop or adc pop inc jne in cmp movsl rcl lret jecxz ja xor mov jns add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp loope pop in dec xlat jg mov adc ja pop xor pop stos mull push (bad) lods aas inc jecxz mov and sbb int3 call pop sub push stc or adc scas scas xor sub repnz bound (bad) xor bound dec insl hlt mov mov push adc inc clc cmp sub xchg push sti dec sahf jb inc aas add fnstenv inc pop inc sbb les push sar jo scas (bad) or mov incl lret sbb or jnp xchg lahf addr16 pushf outsl mov xchg adc mov aas xchg add push push sbb jno mov pushf aad lods xchg ret loopne adc pop push jnp jmp push arpl mov pop lea mov dec pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc pop and sub mov ljmp clc sub dec and insl xor and scas jo or gs mov mov xchg testb aaa aaa mov stos xor fdivr mov mov xchg div sub fisttpll xchg or adc pop movsb movhps push in xchg stc push cmp lods fcom lret jmp ja xor mov js add rolb loope push in dec xlat jns test pop add loop sub cmc push ss out gs pop cmc and xor lret leave mov jl movsb push std or adc in xor and repnz adc stos std dec gs pop decb fisubr dec clc sbb and adc push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl sbb popf inc aas or xchg loop jl adc aam mov push mov pushf jmp sti lahf ja jp dec es xlat imul jl popa fsubrl mov outsl int3 sahf insl mov mov push mov cmpb push sbb jno mov pushf aam lods xchg lahf in std in ret loopne adc jnp imul inc push arpl mov pop lea mov dec fcmovbe pop add adc mov (bad) push cmp jecxz jle sub dec xor in adc movsb mov dec gs cmpsb xor xchg incb fisttpll aaa ss sub clc fdivr mov out fwait or xchg cmc cld or xchg imul dec pop cmpsb push lds int xchg js cmp and ror bound (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp (bad) lods mov pop sahf loope jle push int sti rorl lcall and mul and lods ds out inc lea add add or push mov push inc out xor sub mov or xorl xchg (bad) or mov jp mov stos inc xor clc sbb mov push sbb sbb dec pop bound repnz js jno inc jbe sbb aam mov pop mov pushf jmp mov xchg dec cs fbld sub fsubrl mov addr16 pushf das mov cltd xchg push or inc aas xchg sarb push push psllw sbb das xchg lahf lds and push adc mull stc cld inc push arpl testl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl cmp mov fs mov mov imul test stos fimull mov shr sbb in das push push or mov hlt mov inc insb sahf movsl xchg test int ja daa ja (bad) and cmp pop mov mov xchg in imul xchg movsl gs or adc pop mov push inc gs sbb in rcr mov jo stos int xchg cmp mov ja loope push les xlat jnp int3 loopne mov jbe jnp popa pop mov pusha and lods jle out and add xor enter mov jle in std dec outsb ficoml push inc iret and scas xor xor mov repnz xchg xor decl xor pop decb (bad) mov add sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call dec imul pop mov pop push cmp and xchg ljmp je test push mov pushf in mov jg js dec and inc sbb stos fisub mov addr16 pushf outsl mov xchg xchg push or sub psrlw movsl sbb das lahf mov ret loopne xchg sub pop push imul and inc cmp dec movsl xor mov push pop adc test pusha inc cltd mov dec jecxz test mov dec xor in adc jne test mov imul push or test int3 jae aaa pop mov test jns js mov fwait add xchg cmc cld das popf mov and fbld xchg or adc pop cmpsb movhps jl cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) add ja xor mov js add shlb icebp mov xlat jnp mov adc and dec out mull push (bad) lods cs out lea xor mov cld test mov outsb int push in or adc out xor cmp loop or xchg sub imul push mov stos inc xor inc clc pop cmp sub adc adc push xchg add add xchg out push jle sbb fs stc (bad) (bad) in push inc mov pushf jmp sti xchg jg jp pop es (bad) push lcall arpl fdivrl notb adc xchg push aas xlat pop sbb loope cmp pushf lds std in (bad) push test les outsl and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov arpl add lea mov pop mov insb fcmovbe pop add sub lods popa inc int ljmp ret test ss stos fimull (bad) cmp pusha jl adc mov dec inc xchg cmpsb mov adcb add testb int3 ja aaa aaa mov sub jns sti mov push in mov xchg cmc cld das sbb xchg or adc pop cmpsb cmovo je imul lret jecxz ja xor xor pop test add sahf loope push insb push dec sbb rorb adc xor pop scas mull push (bad) lods out out orl shll in or cmpl pop js push push insl xor dec or cltd popf repz adc add insl int3 and incb cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp stos inc fidiv cmp add mov xchg push aas enter ret add mov pop pop jb enter mov cmp ret cmp push mov je mov jnp jnp pop mov imul imul lcall push xchg add and cmpl sub push scas pushf aad sub mov in inc pop adc ficom jo and sbb or mov mov fcmovnbe mov test pusha mov jecxz test (bad) pop dec xor stos xchg loopne std sub or or test jo mov and xchg jle mov out fwait or add cmc aam sahf xchg cmpsl rcr out lds adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall insl xchg inc jne push xchg xchg cmp lret jno jbe nop imull gs mov lret lods add lahf loope pop in scas push jp jp and scas arpl (bad) fldt (bad) lods mov mov mov leave in mov mov jle es std imul out xor sub mov xor repnz mov dec mov test mov cmp fildll ja sbb jae adc push push inc aas cmpsb addl sub jg loopne jb cmp mov push mov sbb mov cmpl daa dec mov sbb push pusha fsub xchg outsl ja nop nop lea sub sbb mov xchg scas test in rcrl int3 std mov ret push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl fstpl std cmpsl (bad) and jge inc jmp cmp mov mov insl fcmovbe pop add scas test mov in loop out fs jle sub into outsl cmpsb imul das lods movsb sub inc xchg sbb mov push sub test sbbl aaa mov stos cmp adc fwait aas cmp or mov pop and mov mov dec pop mov inc out in cmp jle cmp and sarl fwait ja mov insb jae fidivl dec aas sbb xorl loope pop in dec xchg or (bad) jo jbe pop inc cmp mov dec aaa (bad) lods sbb (bad) cmp inc dec js ret adcl pop movsl rcll add pop out scas xor dec sti nop sbb adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc popf sub and jnp in repz (bad) sub inc pop mov loop adc out (bad) and dec xchg arpl and fldt inc jle xor out scas (bad) cld push inc mov decl in xchg cmp push aam dec das sahf pop outsl sbb jno lahf addr16 pushf sub xchg lock xor hlt inc out push mov push ret jle out pushf leave in repnz sti test scas sub sub or rcll fsubrl int3 xor movsl xor dec xchg and sti stos jl das cld (bad) test xchg out jo test fisubl mov (bad) std das push daa or and test adc div test cltd fisttpll std push inc jmp lret push adc fdivrs xchg jns ja mov hlt outsb popa (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc fucomip imul ret dec push inc je mov mov dec insl lret mov inc jo mov cmp fs jb mov inc mull fs cmp clc in inc shrb pop xor pop ret push xor adc sub enter movsb sarl push adc sbb adc mov sub sbb xchg or int3 inc or sub pop rclb (bad) mov addr16 insl cmp inc pop push loop ret jg cs bound bnd test inc jo sbb mov inc pop push jmp inc mov jg jnp sub pop mov outsb push sbb add addr16 or and xor loopne push call jge dec xchg cmp jp ret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc pushf mov (bad) std nop je jnp mov jecxz cmp nop and stc mov and (bad) inc add inc sub push cmpsl insb ficompl js inc push and jmp sbb pushf fnstenv outsl test inc test ljmp dec and icebp (bad) je insl fiadd test push leave (bad) jne jg dec adc lcall push hlt mov cld bound lods out pop movsl roll dec jb xor inc js xor adc rcrl mov xchg ficomp jmp mov dec push ror fldt push out cmp push les sbb scas dec bound mov dec and sub pop ret in movsb rep jae inc jle inc push mov and pop ror pop popf mov loopew (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall add xor clc lcall jmp pop xor cmpsb leave and inc cs pop push loop imul push jne je lret jge push das jb xchg inc mov inc hlt aad or sbb pop push sbb mov nop push ret xchg sbb fildl mov out inc sub leave push lahf sbb jmp mov push xlat out lock dec cld push pop cmc inc int mov dec xor mov pop repnz mov jge loopne arpl aaa and rcrl cmp insb mov pop and ret pop xchg push mov sub adc fisttpl scas mov test int3 xchg ds test or jae neg dec add insb cmp (bad) fdivr arpl lahf test stos xor pop inc fsubrs sub cmc inc fimul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl xchg repz movsl cmpsb ret mov nop pop inc jae das ret outsb bound cmp insl ret xorl push xor lahf sub and shrb insl push icebp test pop sub mov sahf cld lds lods enter xchg push inc inc sub mov daa xor xor das cmpsb vpshlb imul std push sub pop xor lahf add rolb sbb lea je pop mov in pop and pop push dec xor push push pop pop push jle je shll pop daa push outsl xchg adc push bnd fnstenv inc sub or int (bad) xlat std add int3 xchg fwait and test movsb push jl in (bad) or dec int3 dec mov imul sub mov cmp xchg fadd push or dec lock (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call xor icebp jp les fcmovnb mov dec in out adcl jbe xchg mov push cmp push and sub pop cmp cs push sub mov add jg fsubrl and out jmp push jecxz ljmp cmp mov jge jmp iret dec and data16 sti (bad) rorb shlb add aaa aaa lret sarl adc push fstl xchg imul jnp sbb dec std gs jo cs jge aaa sbb test stc sub mov divl jo mov js add rolb loope pop in dec xlat jnp mov adc xor pop scas mull push (bad) lods ds out lea and xor enter mov jle movsb push std or adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl scas scas xor and or xorl test decl je pop decb fisubr inc clc sbb sub adc push jnp push bound xchg ljmp fs mov push mov pushf jmp sti xchg jg jp dec es fbld push mov imul lahf addr16 pushf outsl mov xchg nop push or sub psllw sbb sub in ret loopne nop sub pop push imul and arpl mov fisttpl dec mov insb fcmovbe pop add sub mov push mov call (bad) iret outsl shr adc movsb mov dec inc xchg cmpsb mov push push sub test int3 ja aaa aaa mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp mov out fwait or xchg cmc cld sub fild xchg or adc pop cmpsb movhps pop in cmp movsb rcl lret jecxz ja xor mov js add rolb loope pop in dec xlat jnp mov adc xor pop scas mull push (bad) lods ds out lea and xor enter mov jle movsb push std or adc out xor jno jge mov mov mov fucom jmp or adc xor mov mov mov fsub jmp or adc ss dec dec push pop bound jne orl ret (bad) fsub jmp or adc xor push pop popa outsb je addl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall mov fnop out hlt cli add or sub inc dec push pop popa insl je addb lods mov mov (bad) in repnz incl and inc dec push pop pop imul test stos mov mov fucom ljmp push sbb sub xor push pop bound jne (bad) mov scas mov ret aam loope out hlt cli add or sub dec push pop pusha data16 jae jg mov mov rol rcr (bad) in repnz incl and inc dec push pop pop fs ja test stos mov mov fsub ljmp push sbb sub ss dec dec push pop bound jne (bad) mov scas mov ror aam loope out hlt cli add or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp xor inc inc dec push pop pusha insl jae addb cmpsl lods mov rol rcr loopne in repz add or sub push bound orl aam call adc pop and push pop push jnp mov scas mov rol rcr loopne in repz add or sub cmp pop bound jg xchg cwtl mov rcr call or and xor cmp pop bound jne (bad) mov scas mov rol aam loopne in repz add or sbb and inc dec push push pop fs ja orl scas mov (bad) out std add adc sbb cmp dec push push pop bound jne (bad) mov scas mov rol aam loopne in repz add or sub dec push pop pop gs jb jg mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call add rcr fsubp jmp idiv add adc sbb cmp dec dec push pop arpl jbe (bad) mov scas mov rol aam loopne in repz add or sbb and inc dec push push pop fs ja test stos mov mov fucom ljmp push sbb sub xor push pop popa outsb je addl mov out cld add movhps sub xor push pop popa insl jae addb stos mov mov fucom jmp or adc xor push pop popa insl jae addb stos mov mov fucom ljmp adc xor push pop popa insl je addb lods mov mov out sti add and sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp dec push pop pop gs jb jg mov mov mov fsubp ljmp push sbb sub ss dec dec push pop bound jne addl rol rcr (bad) in repz incl or sbb and inc dec push push pop fs ja orl scas mov ret aad loop out hlt sti add push adc and cs inc dec pop pop gs jb jle mov mov mov fucom jmp or adc xor inc inc dec push pop pusha insw je addb lods mov mov jmp adc push and xor cmp pop arpl jbe orl scas mov ret leave rcl fucom jmp or push sbb sub xor push pop popa push add test mov ror aam (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp out hlt sti add push adc and cs inc inc dec push pop popa insl je addb lods mov mov (bad) jmp clc incb and xor ds dec push push pop fs ja test stos mov mov fucom ljmp push sbb sub xor push pop bound jne (bad) mov scas mov rol aam loope in hlt cli add or sub cmp inc dec push pop pop gs jb jg mov mov mov fsubp jmp idiv add adc sbb cmp pop arpl jbe orl scas mov ret aad loop out cmc sti add push adc xor inc inc dec push pop pusha insl jae addb lods mov mov fnop out repz add or sbb es dec push pop pop data16 (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jg mov mov mov fsubp ljmp push sbb cmp dec dec push pop bound jbe orl scas mov (bad) rcr out std or sub inc dec push pop imul mov enter loope out hlt cli add push adc and sub dec push pop pop data16 jb orl out stc add adc sub xor fs ja orl mov mov fucom ljmp push sbb sub ss dec dec push pop bound jne (bad) mov scas mov ror aad loop stc add push and inc dec push push pop fs ja orl mov mov fsub jmp add adc sbb sub aaa cmp pop arpl jbe (bad) mov scas mov ret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec aad loope out hlt sti add push adc and sub dec push pop pusha insl je addb lods mov mov (bad) in repnz incl and inc dec push push pop fs ja test stos mov mov fucom jmp or adc xor push pop popa outsb je addl rol rcr loopne in testl sub ss dec dec push pop bound jne addl rol rcr (bad) in repnz incb and xor ds dec push push pop arpl jbe orl scas mov ror aam loope in hlt cli add or sub cmp inc dec add pop insw jae addb lods mov mov fsubp out sti push adc and inc dec push pop pop imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl stos mov mov fucom ljmp push sbb sub xor push pop bound jne orl rol rcr loopne in repz add or sub cmp inc dec push pop pusha insw jae addb lods mov mov (bad) in repnz incl and inc dec push arpl ja orl scas mov ret (bad) fsub call or adc and sub dec push pop pusha insl jae addb lods mov mov fsubp jmp clc incb adc sbb cmp dec dec push pop bound jne addl rolb into aad loope out hlt sti add or sub dec push pop pop imul test stos mov mov fsub call or adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall sub xor push pop popa insl jae addb lods mov mov fsubp jmp idiv add adc sbb cmp pop bound jne orl rol rcr (bad) in repnz incb and xor cmp pop bound jbe (bad) mov scas mov rol rcr loopne in repz incl and inc dec push push pop arpl jbe (bad) mov scas mov ret aam loope in hlt cli add or sub cmp inc dec push pop pop imul test test enter loop out cmc sti add or adc xor inc inc dec push pop pusha insw jae jg mov mov mov fsubp ljmp pop sbb cmp dec dec push pop bound je addl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall mov (bad) in repnz incb adc sbb cmp pop arpl jbe (bad) mov leave aam ljmp xor cmp insl jns lea mov rol rcr (bad) in repz add or sbb and dec push pusha outsl jnp nop xchg lahf stos mov out hlt cli add sbb sub xor push pop popa insl je addl mov fsubp jmp idiv add adc sbb cmp dec dec push pop popa push xchg mov call or add sbb sub xor push pop popa insl je addb lods mov mov fsubp jmp idiv add adc sbb cmp pop bound jne (bad) mov lods mov rol rcr (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp in repnz incl and xor ds dec push push pop arpl jbe orl scas mov rol aam loopne in repz add or sbb and inc dec push push pop fs ja test test enter loope out hlt cli add or sub cmp inc dec push pop pop imul test lods mov loope out hlt sti add push adc and sub dec push pop pop data16 jb jg mov mov mov fucom ljmp pop sbb cmp dec dec push pop arpl push ja test test leave iret aad loop out cmc sti add push adc and cs inc inc dec push pop popa insl jae addb mov out repz add or sbb es cmp inc dec push pop pop imul test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall mov (bad) lret fucom ljmp push sbb sub xor push pop popa push xchg lods mov rol rcr loopne in repz incl and inc dec push pop pop fs ja test test leave iret (bad) fsub call adc and sub dec push pop pop data16 jb jg mov mov mov fsubp jmp idiv add adc sbb cmp dec push push pop arpl jbe orl scas mov ret aam fsub jmp or adc xor inc inc dec push pop pusha insl je addl rol rcr loopne in repz incl or sbb and inc dec push pop pop fs ja test test lret fucom ljmp push sbb sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp xor push pop popa push xchg lods mov rol rcr (bad) in repnz incl or sbb and inc dec push pop pop imul test stos mov mov fsub jmp or adc xor inc dec dec push pop popa push xchg lods mov rol rcr (bad) in repnz incl and xor ds dec push push pop fs jbe test test leave iret (bad) fsub jmp or adc das ss dec dec push pop bound je addl rol aam loopne in repz add or sub cmp inc dec push pop pop imul test stos mov mov fucom jmp or push sbb sub ss dec dec push pop bound jne addl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov fnop out repz incl or sbb and pop data16 mov (bad) int3 rcr fucomip hlt decl pop and das xor push pop popa push xchg lods mov mov out cmc sti add sbb xor dec push pop pusha imul mov leave iret aad loop out cmc sti add push adc and sub dec push pop pusha data16 jae jg mov mov mov fucom jmp or adc das ss dec pop fs jle mov mov mov fucom ljmp push sbb cmp dec dec push pop bound jne (bad) mov scas mov rol aam loope out hlt sti add or sub dec push pop pusha data16 jae jg mov mov mov (bad) jmp clc incb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl adc push and inc dec push push pop fs ja test test leave rcl fsub jmp or adc xor push pop popa push xchg lods mov rol rcr loopne in repz incl or sbb and push pop bound jne addl rol aam loopne in repz add or sbb and inc dec push pop pop fs ja orl stos mov mov fsub ljmp adc xor push pop popa insl jae addb lods mov mov fsubp ljmp push sbb sub inc dec pop imul test stos mov mov fucom ljmp push sbb sub ss dec dec push pop bound jne (bad) mov scas mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc enter loope out hlt cli add or sub dec push pop pusha data16 jb jg mov mov mov (bad) jmp clc incb adc push and xor cmp pop arpl jbe orl mov (bad) out repz add push adc and sub dec push pop pop data16 jae jg mov mov mov fsubp ljmp adc push and xor ds dec push push pop arpl jbe orl scas mov ret aam loope in hlt cli add or sub cmp inc dec push pop pop imul test stos mov mov fsub jmp or adc and sub dec push pop pusha insw jae jg mov mov mov fsubp ljmp push sbb sub xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call popa outsb je addb lods mov mov fsubp jmp clc incb adc sbb cmp pop bound jne addl rol rcr (bad) jmp clc incb and xor cmp pop arpl jbe (bad) mov scas mov rol rcr loopne in repz incl and inc add pop pop imul test stos mov mov fsub call or adc and sub dec push pop pop gs jb jle mov mov mov fucom jmp or adc xor inc inc dec push pop pusha data16 jae jg mov mov mov fsubp ljmp push sbb sub xor push pop popa outsb je addb lods mov ret into (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp icebp cld push adc pop pusha data16 jae orl in repnz incl and inc dec push pop pop gs mov ror in cmc decl sbb es inc push pop pop imul test test leave iret aad loop out hlt cli add or sub cmp dec add insl jae addb lods mov mov in cli add xor ds dec push push pop arpl jbe orl mov mov fsub jmp or adc xor inc inc dec push pop popa insl jae addb lods mov mov (bad) in repnz incl and inc dec push push pop fs ja test test leave iret (bad) fsub jmp or adc xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl dec push pop popa insl je addb lods mov mov (bad) jmp clc incb and xor cmp pop fs ja orl scas mov ret aad loop testl daa sub dec push pop pop data16 jb jg mov mov mov fcomp in icebp idiv add adc sbb sub xor push pop popa insl je addb stos mov mov fsubp ljmp push sbb sub xor push pop pusha insl jae jg mov mov mov fsubrp hlt add and sub cmp dec push pop pop data16 jb jg mov mov mov fucom jmp or adc xor inc inc dec push pop pusha insw je addb lods mov mov fsubp jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push idiv add adc sbb cmp dec dec push pop popa push xchg lods mov rol rcr loopne in repz incl or sbb and dec push push pop fs ja test test leave iret aad loop out idiv add unpckhps and add push pop bound jne orl rol rcr (bad) in repnz incl and inc dec push push pop arpl jbe orl scas mov ret aam loope out hlt cli add or sub cmp inc dec push pop pop gs jb jle mov mov mov fsub jmp or adc xor inc inc dec push pop pusha data16 jb jg mov mov mov fsubp ljmp push sbb sub xor push pop popa insl je (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jp xchg lods mov mov (bad) jmp clc incb adc sbb cmp pop bound jne orl rol rcr (bad) in repnz incb and inc dec push push pop arpl add test test leave iret aad loop out hlt sti add or sub dec push pop pop data16 jb jg mov mov mov fsub jmp or adc xor inc inc dec push pop pusha data16 jae addb lods mov mov fsubp ljmp push sbb sub xor push pop popa insl je addb lods mov mov (bad) jmp clc incb adc sbb cmp dec dec push pop bound jbe mov iret frstpm(287 lock pop adc xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl popa insl ja mov scas mov rol aam loope in hlt cli add or cmp push popa insl jl mov (bad) rcr out repz push push and xor cmp pop arpl jbe jge mov mov mov fsub call or adc and cs inc inc dec push pop pusha data16 jae jg mov enter call pop or sub dec push pop pop imul test stos mov mov fsub jmp or adc and sub dec push pop pop imul test stos mov mov fsub jmp or adc and sub dec push pop pop gs jb jle mov mov mov fsub call or adc xor inc inc dec push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall data16 jb jle mov mov mov fsub call pop push adc and sub dec push pop pop gs jb jle mov (bad) lret rcl fucom add icebp clc incb adc sbb cmp dec dec push pop bound jne (bad) mov scas mov rol rcr loopne in repnz incl and xor cmp pop arpl jne (bad) mov scas mov rol aam loopne in repz add or sbb and inc dec push push pop fs jbe orl leave rcr loopne in repz incl or sub cmp inc dec push pop pop imul test stos mov mov fsub jmp or adc xor inc dec dec push pop popa outsb je addl mov (bad) jmp clc incb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl adc push and xor ds dec push push pop arpl jbe orl scas mov ret aad loop out cmc sti or adc xor add bound jne (bad) mov scas mov ror aam loope in hlt cli add or sub cmp inc dec push pop pop gs jb jle mov mov mov fucom ljmp push sbb cmp dec dec push pop bound jne orl rol aam loopne in repz add or sbb and inc dec push pop pop imul test stos mov mov fucom jmp or adc xor push pop popa insl je addl rol rcr (bad) in repnz incl and xor cmp pop arpl jbe orl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall ret aad loop out cmc sti add push adc and sub dec push pop pop data16 jb jg mov lods mov mov fsubp jmp clc incl and xor ds dec push push pop arpl jbe orl scas mov ret aad loope out hlt cli add or sub dec push pop pusha data16 jb jg mov mov mov fucom ljmp push sbb sub xor push pop popa push mov scas mov rol rcr loopne in repz incl or sbb and inc dec push push pop fs ja test scas mov pop adc (bad) popf movb and inc mov loope clc add sbb xor pop gs mov jmp adcl fucomi clc add inc dec pop push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl nop pushf pop mov in arpl mov hlt decl push sbb adc sub xor push pop arpl jbe orl scas mov ret aad loop out hlt sti add or sub dec push pop popa insl je orb scas mov ret lret fucom jmp or push sbb xor dec push pop popa outsb je addl pop and inc dec push pop pop fs ja orl scas mov ret aad loop out hlt cli add or sub cmp inc dec push pop bound test (bad) rcr jecxz cli add or cmp dec dec push pop bound je addl mov fsubp jmp idiv and ds push popa insb js nop fwait cmpsl mov leave aam jmp add inc push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall stos mov int in cli push adc sub dec push pop push xchg pushf mov rcr out std or adc dec push arpl js (bad) fwait movsb scas mov loopne repnz pop adc sub imul mov out cli add push and aaa cmp push lahf stos mov into fsub in stc push adc pop data16 mov rcr jmp add sbb xor dec push pop push orl cli add cmp pop push jg xchg mov fxam icebp decb sbb sub addr16 mov (bad) icebp std or push pop imul ret iret (bad) in clc add sbb xor dec push pop push lahf test loopne testl cmp push pop imul mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp icebp cld or sbb push pop fs mov lret (bad) jecxz cli add inc dec push arpl xchg lret xlat loop cli push adc pop gs mov int3 fsub out sti push adc push bound test int3 fxam lock or pop sub inc dec pop arpl test lret (bad) loope stc add aas dec push arpl xchg jne xchg pushf cmpsl mov lret in clc add sbb xor dec push bound test int in sti push adc push pusha insb ja (bad) fwait cmpsl mov leave aam in testl cmp jns (bad) fwait cmpsl mov lret (bad) loope clc add and ss dec dec push pop imul mov ret into (bad) out (bad) add and xor dec push pop data16 test ret int loope cmc decl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call push sub cmp jno test ret int loope idiv or sbb push pop outsb js mov lret call sbb pop bound orl out cli push nopl sub popa imul leave loope inc push js xchg sahf movsb scas mov icebp clc incl adc push pop pusha insl ja mov leave iret aad call push sub jno mov lret jmp add and cmp pop gs mov sbb sub dec push pop popa insl je addb lods mov rol rcr loopne in repnz incl and inc dec push push pop arpl jbe (bad) mov scas mov icebp std push adc xor dec push pop imul pushf mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp iret aad loope out hlt sti add or sub (bad) mov aam ljmp cmp inc dec push pop pop imul test stos mov mov fucom jmp or push sbb cmp dec dec push pop bound orb leave outsl xchg mov aad jmp sbb push popa imul xchg lahf test (bad) out clc add and xor dec push pop data16 test (bad) into fsub lock add sbb sub inc dec push pop push fwait movsl scas mov repz adc xor inc dec pop arpl orl call sbb push pusha push jg xchg mov fsub in testb adc sub cmp push pop outsb js mov enter out cli add sbb sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl aas dec push pop addr16 test ret int loope cmc decl adc push pop gs orl rcr in testl xor inc push pop outsl jns mov lret call sbb cmp push pusha push jle xchg pushf movsl scas mov in testb adc sub cmp push pop outsb js mov iret fsub lock add sbb sub inc dec push pop push fwait movsl scas mov in testb adc sub cmp push pop outsb js lea lret jmp sbb push popa imul xchg sahf test mov hlt decl adc push pop outsb js lea lret jmp sbb pop bound mov rcr in sti push adc and cmp push popa insb jne mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc aam jmp add sbb pop push mov out hlt cli add push adc and cs inc inc dec push pop popa outsb jne orl lret ljmp cmp pop imul cltd movsl mov leave aad jmp add inc dec push pop push adcl clc add sbb cmp push popa outsb je addl iret fucom icebp cld push adc sub aaa aas dec push bound (bad) pushf movsb scas mov hlt add adc xor dec push popa insb jbe mov rcr call pop sub inc dec aam lock add adc sbb cmp pop bound jne (bad) mov scas mov rol rcr loopne in repnz incl or sbb and inc dec push pop pop imul xchg mov ret aad loope out hlt (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cli add or aaa inc je (bad) fwait cmpsl mov enter cmc add and cmp pop imul mov icebp cli add sbb cmp arpl test (bad) rcr jmp and cmp pop push mov (bad) icebp std or sub inc dec pop gs xchg into ftst lock or pop sub inc dec pop outsl jbe mov mov out std add xor inc push pop outsl jp mov (bad) rcr out and jo (bad) lock add sbb cmp push popa insb jbe mov rcr in clc add ds push pop data16 test mov std pop adc and pop arpl orl repnz push adc and cmp push pop imul scas (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov in testl xor dec push pop data16 xchg (bad) into fsub in testl xor dec push pop addr16 test ljmp xor inc dec pop bound orl in clc add and xor dec push pop data16 orl lret jmp sbb cmp push popa imul xchg pushf cmpsb mov (bad) loop testb adc sub cmp push pop arpl orl in stc add inc dec push pop imul scas mov ljmp xor inc dec pop bound mov iret ftst out clc add dec push pop addr16 xchg ret int loope cmc decl adc dec pop arpl orb (bad) rcr in clc add dec (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call data16 test ror fucomip repz adc xor inc dec pop outsb js mov int3 (bad) loope cmc decl adc sub dec push pop addr16 test (bad) in clc add sbb sub inc dec push pop imul mov (bad) rcr in clc add and cmp arpl orl leave rcr call sbb pop bound mov enter repnz push adc xor push pop data16 test ror fsubrp repnz push adc and push bound orb (bad) rcr in stc add sbb sub pop push orl in stc add sbb sub inc dec push pusha push jg xchg popf cmpsl mov enter repz adc push pop addr16 xchg (bad) jecxz idiv (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl or dec push pop push fwait cmpsb mov (bad) rcr in stc add inc dec push pusha push jle xchg popf cmpsl mov (bad) rcr in stc add inc dec push pop imul mov (bad) in clc add inc dec push pop imul xchg lahf test fucom icebp sti add cmp push pusha imul xchg sahf test fucom icebp sti push adc and pop outsb js mov lret aad jmp decl adc push pop outsl jp mov int3 (bad) loopne cmc decl adc sub cmp jno xchg (bad) rcr jmp pop sub inc dec pop arpl orl lret ljmp inc push pop outsl jns mov int3 xlat loop testl aaa inc dec pop bound orb (bad) sar (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lock add cmp push bound (bad) mov lret call sbb xor inc dec pop bound mov enter lock add cmp pop outsb jns lea int3 (bad) loopne hlt decl adc push pop outsl jns mov lret jmp sbb xor inc dec pop arpl orl out cli add sbb sub pusha imul xchg popf cmpsl mov (bad) rcr in sti push adc and pop data16 test ror loopne hlt decl adc dec pop arpl (bad) mov leave rcr out sti add aaa inc dec push popa imul xchg mov rcr call sbb pop outsb js lea lret call sbb pop data16 (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl (bad) into fxam out cli add cmp push popa imul xchg sahf test mov out cli add sbb sub popa insb jbe mov leave rcr out cld push nopl xor push pop data16 xchg (bad) in stc add sbb sub inc push bound orl lret hlt or mov leave aad cmp scas ljmp cmp push pop gs xchg ror in cld pop push push and cmp pop insw je orb iret fcomp in hlt decl and xor dec push arpl xchg lret (bad) loop stc add sbb xor push pop addr16 mov rcr in decb push and arpl xchg enter testb pop and cmp pop push mov aam out (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push decl adc sub insb jns (bad) cltd movsb scas mov icebp cld pop adc sub inc dec pop gs mov int jecxz cli push adc pop outsl jnp xchg sahf stos mov int in add or sub inc dec pop fs xchg enter out cmc cld add adc sub inc push pop outsb jne mov into aam ljmp xor pop push orl out cli pop adc sub inc dec push arpl xchg fucomp cmc add sbb xor pop gs mov into (bad) icebp cld pop adc xor push pusha insb ja mov jmp add bound xchg lret in clc add sbb cmp pop push orl testl xor push pop gs mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec aad jmp add and cmp gs mov rcr call and cmp push bound test ror in sti push adc xor dec add insb js (bad) fwait cmpsl mov lret in clc add sbb xor dec push bound xchg int in sti push adc pop gs mov int in sti pop adc sub inc dec pop addr16 mov int3 xlat in sti push adc sub inc dec pop fs mov (bad) repnz or dec pop data16 mov int in sti push adc sub outsl jnp xchg sahf test in cld or sub inc dec pop gs mov int in sti pop adc push arpl xchg (bad) rcr call and cmp pop arpl (bad) lea (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp (bad) out cmc cld add unpckhps and das cmp pop data16 mov mov in clc add sbb es cmp add jle xchg mov aam out cld pop adc and pop data16 mov rcr jmp decl sbb xor inc push pop outsl jp nop lcall jmp push sub aas dec push pop data16 test leave aam jmp add inc dec pop pop gs jb xchg int3 xlat fsubp out cli pop adc sub popa insl jns mov enter clc add xor dec push bound jg xchg popf test mov in repnz push adc push pusha insb js xchg pushf stos mov lret xlat loop out sti push adc xor dec push popa insl jns (bad) lcall loopne cli add cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp mov rcr out decb push and addr16 mov into ftst lock push adc and inc dec pop outsl jp nop fwait cmpsb mov enter testl cmp pop imul mov cmc add dec push pop imul mov cmc add inc push pop imul stos mov mov testb sbb daa das cmp pop imul mov lret jmp bndstx xor dec push pop arpl jl xchg mov xlat jecxz cli push adc pop addr16 mov rcr ljmp inc dec push arpl test enter incb push sbb cmp pop outsl jnp xchg popf test mov clc add sbb pop fs xchg int in sti (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl adc pop fs xchg int loop testl cmp push sahf test loope testb sbb cmp push pop push (bad) lea rcr call pop sub cmp jbe lea iret fsub icebp std or sub inc push pop addr16 mov rcr call and cmp pop push orb rcr ljmp cmp pop push orl add sbb xor jbe lea aam ljmp cmp pop insb ja (bad) fwait cmpsl mov lret in clc add sbb pop imul orl aad in stc add sbb xor dec push popa insl jns nop fwait cmpsl mov lret xlat loop stc add aas dec push pusha insb ja mov aam (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp add sbb pusha insb jns xchg pushf test add int in cld pop adc xor inc push pop popa push popf movsl stos mov mov fucom icebp std or push sub arpl orl out stc add sbb cmp pop outsl jns mov lret call and inc dec pop insb ja lea rcr call sbb push pop addr16 mov leave rcr call sbb xor push pop imul (bad) rcr call movhps sub inc dec pop gs orl out sti add adc sub pusha imul pushf cmpsl scas mov lret lock or push sbb push pop gs orl ret int jecxz cli push adc sub inc dec pop arpl test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp loope testl xor dec push pop fs mov fsub out stc add cmp jbe mov (bad) loope clc add sbb xor dec push pusha insb js mov aam jmp add and inc dec pop gs xchg int3 fsub out sti pop adc sub inc dec pop gs mov fxam icebp std or sub inc dec pop outsl jp xchg popf test jecxz stc add sbb cs dec push pop pop fs js mov into aam ljmp ss dec push fs jns xchg cwtl sahf movsl stos mov int3 fadds in sti add sub inc push pop bound mov fxam icebp decb push and cmp push pusha insb js xchg popf test call and ss dec pop arpl orl fsub lock pop adc and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp inc dec pop arpl test int out cld pop adc sub inc dec pop outsl jnp xchg sahf test in cld or sub inc dec pop gs xchg (bad) jmp and ss dec push bound test (bad) rcr ljmp cmp js mov rcr in stc add sbb pop push orl cmc add sbb cmp push pusha imul fwait cmpsl mov lret xlat loop stc add aas dec push popa insl jns (bad) fwait cmpsl mov leave aam jmp add sbb xor add jo mov rcr call and aaa inc dec pop gs xchg int in sti or sub inc push pop push mov fsub repnz or dec pop data16 mov xchg mov fsubrp hlt add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall and cmp pop imul mov cmc add sbb xor dec push popa insb js (bad) fwait cmpsb mov lret out stc add inc dec pop outsl jp nop fwait movsl scas mov lock push adc inc dec push pop pop data16 je mov int (bad) out sti add cmp pop arpl jbe mov lret out clc add and xor dec push pop data16 xchg int in decb adc sub inc dec push arpl (bad) mov lret xlat loop stc add sbb push pop push pushf cmpsl mov (bad) rcr ljmp aaa inc dec pop bound orl mov repz movhps sub inc push pop push xchg mov (bad) out cld or add cmp push pop push jg cltd mov enter (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push add adc cmp je mov rcr call and inc dec pop gs test lret ljmp ss dec push outsl jp xchg popf test loopne testb pop and push mov fsubrp repz push and cmp pop addr16 mov leave aad in testl cmp push pop push orb fsub repnz push and push mov fsubrp cmc add or inc push pop imul cwtl mov fcomp in icebp cli add aas dec push pop arpl test ret loopne testl das xor push orl add hlt add sbb xor push pop imul pushf test out add dec push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp jl xchg lahf stos mov int3 xlat jecxz stc add push pop push lahf stos mov into ftst lock add aas dec pop addr16 mov fxam out cli push adc sub outsl jnp xchg lahf stos mov int in sti push adc xor push pop imul mov int3 xlat loope clc add sbb pop imul (bad) rcr ljmp aaa inc dec pop arpl mov ftst lock push adc pop sub inc dec pop fs mov (bad) repnz or push pop addr16 mov int jecxz stc push adc sub inc dec pop outsl jnp xchg lahf stos mov into (bad) repnz push and add orl hlt decl push and cmp pop push (bad) mov aad in clc add sbb xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl pop push (bad) mov aam jmp add sbb xor push pop imul lcall in clc add sbb xor dec push popa insb ja mov aad in testl cmp ja (bad) lcall out stc add sbb pop bound addb (bad) lret fucom ljmp sub inc dec push pop bound jnp (bad) lcall in repnz decl adc dec push bound orl in clc add and and mov int loop stc add sbb sub pusha imul xchg mov aam call adc sbb sub xor push push pop arpl jne (bad) mov mov (bad) rcr in stc add sbb daa cs dec push pop push fwait movsl mov (bad) out (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push clc add and aaa inc dec push popa insl jns lea into fabs in clc add sbb sub inc dec push arpl test stos mov mov fucom ljmp push sbb sub aaa cmp pop arpl jbe orl scas mov ret (bad) fsub jmp or adc dec dec push pop bound jne orl rol aam loopne in repz add or sbb and inc dec push push pop fs ja test stos mov mov fucom jmp adc dec push pusha push orb rol aam loopne in repz add add adc and sub dec push pop popa insl je addb lods mov add (bad) into aam loopne in repz add or sub cmp dec push pop pop data16 jb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jg mov mov mov fsubp jmp clc incb adc sbb cmp pop fs ja orl ret into ftst icebp std add adc xor inc push pop push lcall loope testb sbb xor inc dec pop popa imul fwait mov rcr loopne in repz add or sub cmp inc dec push pop pop imul test stos mov mov fsub call or adc ss dec dec push pop bound jbe orl scas mov ret aad loope stc add adc sbb cmp add push pop fs ja test test leave iret aad loop out cmc add add movhps sub cmp inc dec push push pop imul test test lret fsub jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld add unpckhps and cs inc inc dec push pop pusha insl jae addb lods mov rol aam loope out cmc sti add push adc xor push pop popa outsb je addl rol aam loope out hlt sti add push adc and das ss dec dec push pop arpl jbe orl mov mov fucom ljmp sbb and inc dec push pop pop imul test mov mov fsubp jmp clc incb adc push and xor ds dec push push pop imul test movsl stos mov mov (bad) in repnz incl and inc dec push add outsb je addl rol aam loopne in hlt sti add push adc xor push pop popa insl je addb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall mov fnop out repz add or sub cmp dec push pop pusha data16 jae jg mov mov mov fsubp in repnz incl and inc dec push pop pop gs jae addb lods mov rol rcr (bad) in repz incl or sbb and inc dec push pop pop gs jb addb lods mov rol aam loope in hlt cli add or cs inc dec dec push pop bound jne orl ret aad loop out idiv add or pop sbb cmp pop fs ja test stos mov mov xlat fsubp ljmp pop sbb aas inc dec push pop pop imul test stos mov mov out std or sbb cmp push popa insl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jp mov (bad) rcr ljmp push sbb ds push pop imul lea mov mov fsubp jmp idiv add adc push daa xor inc push pop gs xchg iret (bad) repnz or and xor outsb js lea int jecxz stc add sbb cmp pop bound jbe (bad) mov scas mov ror aam loope in repz add push sbb pop fs (bad) mov vpaddusb in testl cmp push pusha imul xchg mov aam ljmp xor push pop push jne mov aam in icebp idiv add adc push and xor ds dec push push pop arpl jbe sahf lods mov add push sub dec push fs mov lock sub inc pop jb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp stc pop adc pop imul lret (bad) cmc add pop sub jae (bad) popf stos mov decl push bound mov loope std or cmp xchg lods (bad) movaps bound test (bad) shl out cld or and push mov fucomi testb das cmp adcl in add sbb aaa inc push popa outsl jl cltd cmpsl mov rcr in cli or and imul mov fucomp clc push adc xor adcl jecxz decl sub inc add jge movsb mov sub cwtl mov loopne adc inc push insl xchg adc sbbl insl xchg add xor insl jnp cltd cmpsl mov rcr in cli or and imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call (bad) testb cs pop data16 (bad) popf stos mov decl sub inc push popa outsl jge cltd cmpsl mov rcr in sti or and mov fucomip sti or and imul mov ljmp dec pop imul cmpsb mov rcr in cli or and imul movsb mov iret fucomp clc push adc xor dec pop imul int3 (bad) clc push adc xor dec pop push mov ror jmp or es push pop insl jnp xchg movsl mov rcr in cli or and pusha outsb jl cwtl cmpsb mov shl out cld or es push pop insl jnp xchg movsl mov iret fucomp stc pop adc pop imul mov ljmp push pusha outsl jge lcall decl push popa outsl jge cltd cmpsl mov shl out cld or and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl imul movsl mov iret fucomp stc pop adc pop imul movsb mov iret fucomp stc pop adc pop imul lret (bad) testb cs pop addr16 nop sahf lods mov add push sub dec push fs mov lock sub inc push pusha outsb jl cwtl cmpsb mov rcr in sti or and imul movsb mov rcr in sti or and inc dec pop insb jp xchg movsb mov add fucomip cld or es push pop outsb jl cwtl cmpsb mov shl out cld or es push add jle pushf stos mov decb push popa outsb jge cltd cmpsl mov rcr in sti or daa xor jnp xchg movsl mov rcr in sti or and insl jnp xchg movsl mov iret fucomp stc pop adc pop imul lret testb das cmp test fcos (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp cmc add and cmp test fsub hlt add push sub dec push gs nop lahf lods mov add pop sub jae (bad) popf stos mov add push sub dec pop insl xchg (bad) aas pop jb popf mov call pop push xchg (bad) or pop outsl jle lcall decb sub inc push popa outsl jge mov sbb ss push popf mov out sbb dec sbbb lcall das inc pop je mov push pop xor pop imul int3 (bad) testl (bad) nop sahf lods mov add jp stos (bad) (bad) (bad) or mov adc cmp xchg cmpsb rcr push and gs lods ret adc aaa push insl jg mov out or cmp mov out add sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov out std or es push pop insb jp xchg mov jmp das cmp adcl (bad) sbb cmp fs mov lock sub inc push popa outsl jge cltd cmpsl mov rcr in sti or es dec pop imul movsl mov iret fucomp stc pop adc pop push mov add push cmp (bad) xchg scas lret fucomp add xor pop insb jp xchg movsb mov int jmp pop add and push test fsub hlt add sbb bound lea fucomip sti or and inc dec pop imul int3 (bad) cmc add push sub dec push arpl lea loopne sti or and imul lret hlt add push xor jns movsl mov cmp sbbl outsl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl (bad) or xchg or inc pop je xchg mov or daa xor jp xchg movsb mov into fucomp clc pop adc xor dec pop imul lret hlt add push sub dec push arpl lea in add sbb arpl lea loop sbb xor jb mov repnz push arpl (bad) popf stos mov hlt add pop cs pop push scas mov add and cmp pop data16 nop sahf lods mov add sbb fs mov icebp decl push popa outsl jle lcall cld or daa xor jl cwtl movsl mov rcr out cld or daa xor jl cwtl cmpsb mov rcr in sti or es push pop outsb jl cwtl cmpsb mov rcr in cli or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp xor push popa outsl jge lcall add sbb arpl mov mov es pop je cmpsl rcr or aas pop jbe stos ret fdiv or xchg scas lret sbb dec imul outsl mov daa inc pop jbe test xor jge mov jmp and push outsl mov daa inc pop jne test sub jns scas (bad) loopne adc dec arpl mov jmp jno movsb mov inc pop jb movsl rcr add xor cltd mov out sbb push insb xchg and pop je test (bad) or cmp addr16 pushf mov in add sbb cmp ja cmpsb mov es imul adc xor fs mov out push cs pop jno lahf mov jecxz adc dec fs cltd mov call (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl test push das dec arpl (bad) push daa aas push outsl xchg sbb into out adc inc pop imul stc cvtpi2ps arpl ret or sub push insl mov add xor jns test adc mov pop pop cmp jo mov sbb dec imul data16 xor jle mov shr pop and push insb test and lea and pop je test (bad) adc inc pop jns test fcomi or ds insl mov sbb dec data16 mov jmp push jmp imul cmp mov sub jbe lods (bad) fdivrp adc popa jl mov out pop sub je xchg lahf lods mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl imul mov jecxz adc aas dec pop jbe stos mov and inc pop jae mov or daa ds je pushf mov in add test and push outsl mov aas pop jae cmpsb rcr push sub jbe movsb into repz xchg and push outsl mov and movsl mov inc pop ja stos (bad) push xor sbbl test add aas push jno movsl mov cmp mov inc pop ja lods (bad) loope adc inc pop jns cmpsl rcr or inc pop jne test sub ja stos (bad) adc mov out sbb push insb mov and pop jno movsl mov inc pop js lods (bad) loopne adc dec bound mov call outsl mov and push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp movsb mov aas pop jne stos (bad) (bad) push xor (bad) fwait mov call sbbl dec imul insb test and pop jb cmpsl rcr adc inc pusha jp lods (bad) adc pop jnp mov in pop xor fwait mov jmp outsl mov aas push outsl xchg pop and push pop insb jp xchg movsb mov jecxz adc pop imul xchg stos rcr or jl sahf mov out sbb lods ret fcomi or ss push ljmp sahf mov jmp sbb cwtl mov jecxz adc pop jbe movsl mov cmp xchg pop cmp sbbl add ss gs scas mov sub ja xchg cmpsl mov ds pop insl (bad) popf mov and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp xchg stos (bad) fsubr cli or sub pop jne cmpsl mov adc pop je test fcomi (bad) inc pop jb cmpsb mov inc pop jb movsb mov cmp pushf mov call push jmp push call insb xchg pop aaa push addr16 mov loopne push cs popa jns stos (bad) (bad) movaps jbe stos ret (bad) adc add jl mov in sbb mov jmp imul sub je test fpatan or (bad) lahf mov in std or sub dec arpl lods (bad) loope push adc inc pop jb movsb mov and push imul dec imul out or das dec push in sbb dec insb test and (bad) adc dec arpl lret push sub je (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp sub ja test sub jp stos (bad) adc leave jecxz sbb shr pop and movsl mov cmp je cmpsb mov cmp xchg push cmp test and pop jbe test (bad) or xchg and push jo mov add inc pop jbe test fdiv adc inc pusha jp scas lret sbb dec data16 popf mov aaa push imul and push jns mov fcomi adc inc pop jp mov out sbb mov in sbb push imul pop cmp mov es pop je stos (bad) (bad) push das dec gs mov call sbbw push jo movsl rcr adc inc pop jp mov in sbb mov in adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl ja stos rcl in cli or and fwait mov fucomip add xor jns lods ret in cli or cmp (bad) pushf mov jmp pop jno lahf mov jecxz sbb dec push loope sbb inc bound stc adc inc pop jae mov sbb xchg scas leave loope adc inc pop jns lods (bad) cli movaps jae (bad) cmpsb mov inc push pusha outsl xchg sbb aaa dec push loope (bad) adc inc pop jbe cmpsb mov fcomi adc mov or inc push arpl xchg mov loopne adc inc pusha jp lods (bad) fcomi push sub jne test es pop je cmpsl mov xor jns lods (bad) loopne adc dec arpl lods (bad) loopne adc pusha jp lods (bad) loope adc dec arpl mov in adc inc pop jne movsl mov cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp mov sub je test sub jns lods enter xor sbbb cmp mov es jno cmpsb rcr adc pop jno (bad) popf stos mov xor js cltd mov jecxz adc jp stos ret or and nop add or xor xchg test loop adc inc pop ja test fcomi movaps je test sub scas enter xor jle lods (bad) adc aas push jae cmpsb (bad) fdiv movaps ja lods (bad) loopne adc inc pop jne cmpsl rcr movaps jns lods (bad) loop sbb dec push out or cmp insl mov daa aas pop jb cmpsb mov cmp mov inc pop jbe stos (bad) adc pop js cmpsb mov cmp mov aas (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall mov sub jp scas leave jecxz sbb dec test jmp and push insb test and jno cmpsl rcr cvtpi2ps js scas lret sbb dec sbbw imul jo movsb mov inc add xchg mov jmp imul and jb cmpsl ret adc inc pop js stos (bad) (bad) adc cltd mov jmp pop cmp movsb mov inc pop jbe stos (bad) fdivp adc mov call insb xchg and push push cltd mov xlat ljmp outsl jl fwait scas enter sub arpl sahf mov jmp push popa outsl jge lods (bad) adc inc pop jae lahf mov in adc aas pop ja movsb mov cmp mov cmp sbbl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl jnp stos ret fcomi or mov inc push imul cmp sbbb adc orb and dec push gs mov loopne or js cmpsb ret aam lock push das dec pop jne stos mov pop cs pop ja test es mov ds outsl mov and inc pusha jp mov loope adc xchg mov loope adc pop js stos ret (bad) movaps ja stos (bad) fcomip or inc push imul push xor jns lods (bad) adc inc pop jnp scas leave in pop xor jle mov out sbb sbbb add ss push sahf mov cmp mov cmp outsb (bad) lcall adc mov push and cmpsl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call pusha outsl jge cltd scas enter cs push bound xchg mov in or inc pop js test fcomi push sub xchg scas enter xor jle mov jmp addr16 mov call imul sbbl push imul sbb push in push and push outsl mov inc pop ja stos vpsadbw xchg stos ret push es pop jb movsb mov inc pop je stos (bad) loopne push das dec arpl lods (bad) loope movaps pop jae cmpsb mov aas pop jae cmpsb rcr adc inc pop ja lods enter xor test and pop jae cmpsb mov inc pop jns lods (bad) adc dec gs mov jmp and push outsl mov ds jno cmpsl rcr adc scas enter xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp mov cmp mov cmp mov cmp xchg and pop jb test fdiv movaps xchg lods enter xor jg mov in sbb push push lahf mov ds jae cmpsb rcr (bad) push and xchg mov nopl dec pop data16 mov fnop nopl push outsl xchg adc sub xchg stos ret (bad) adc inc push insl (bad) lcall inc pop jae test fdiv or inc pop jo test fyl2x or cmp xchg sbb dec bound lods ret fdiv or lea and push je xchg mov or cmp jnp fwait mov out sbb inc push addr16 mov in adc cs pusha jl stos (bad) fsub (bad) push sub jno sahf lods mov daa cmp lahf lods ret fdivp or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp cmpsb rcr or cmp mov cmp xchg push sub jge scas enter das dec gs mov loope adc xchg lods (bad) loope adc xchg scas leave (bad) push add inc bound test and movsb mov cmp mov inc pop jne stos (bad) loopne pop xor sbbb aaa push imul and pop je cmpsl rcr push daa inc push push sahf mov rcr in (bad) pop xor js stos mov and push outsl jg mov sbb inc push arpl lcall cmp imul push pushf mov jmp and (bad) (bad) push xor (bad) popf mov cmp mov xor gs scas enter xor jge mov out sbb dec data16 (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp push sahf mov cmp cmpsb mov aas pop jl xchg lahf test mov testb push and inc dec pop outsl jp xchg fwait cmpsb mov enter testb bndstx xor dec push bound test leave aam jmp sbb xor dec push pusha push orl hlt add and cmp pop imul enter testb sbb pop push orl cmc add and cmp pop imul (bad) jmp pop sub inc dec pop data16 mov fxam icebp std or push pop addr16 mov iret (bad) repz push and cmp pop addr16 mov rcr call and cmp pop push movsl mov (bad) rcr ljmp cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call imul cltd movsb mov enter clc add sbb xor dec push bound xchg (bad) rcr out cld pop or xor dec push pop pusha add jl mov lods mov rol rcr loopne in repnz incl and xor ds dec push push pop arpl jbe (bad) mov scas mov ret aam loope in hlt cli add or sub cmp inc dec push pop pop imul test test fsub repnz bndldx xor aas dec push pop data16 jb jg xchg mov rol rcr loopne in repz add or sbb es cmp inc dec push pop pop imul test mov mov fsubp jmp idiv add adc sbb cmp pop arpl jbe xchg mov idiv add adc sub ds (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call imul test stos mov mov fucom ljmp push sbb sub ss dec push push pop add ja orl mov mov fsub call or adc xor push pop popa push mov scas mov ret aam loope out hlt cli add or sub dec push pop pop gs jb jg mov mov mov fsubp jmp clc incb adc sbb cmp pop arpl jbe (bad) mov scas mov ror aam loope out hlt cli add push adc and cs inc inc dec push pop pusha insw jae addb lods mov mov fsubp jmp clc incb adc sbb ds dec push push pop arpl jbe orl scas mov ret aad loop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) out hlt sti add push adc and sub dec push pop pusha data16 jae addb lods add fchs out repz incl or sbb and inc dec push pop pop imul test stos mov mov fucom ljmp push sbb sub xor push pop bound jne orl rol rcr loopne in hlt cli add or sub cmp inc dec push pop pop data16 jb jg mov mov mov (bad) in repnz incl or sbb and inc dec push pop pop insw jae addb lods mov mov in repz add or sub dec push pop pusha insl jae addl rol aam loope in repz add or sub dec push pop pop data16 jb jg mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call mov mov (bad) jmp clc incb adc sbb and inc dec push pop pop imul test stos mov mov fucom ljmp pop push and xor cmp pop arpl jbe orl scas mov ret aad loop lock add unpckhps sub xor push pop bound jne (bad) mov scas mov ror aam loope in hlt cli add or sub dec push pop pop gs jb jg mov mov mov fsubp jmp idiv add adc sbb cmp pop bound jne (bad) mov scas mov ret aad loope out hlt sti add or sub dec push pop pusha data16 jb jg mov mov mov fsubp ljmp pop push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp xor cmp pop arpl imul test stos mov mov fsub jmp or adc ss dec dec push pop bound jne (bad) mov scas mov rol aam loope in hlt cli add or sub dec push pop pop insw jae addb lods mov mov fsubp jmp idiv add adc sbb cmp pop arpl jbe orl mov mov fucom ljmp pop sbb cmp pop arpl jbe orl scas mov ret aad loop out idiv add unpckhps sub xor data16 jp (bad) xchg sahf stos mov (bad) int out repz add xor inc inc dec push pop pusha insl je addb lods mov mov fsubp jmp idiv (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl or sbb and xor ds dec push push pop arpl jbe orl scas mov ret aad loope out hlt cli add or sub cmp inc dec push pop pop imul test test leave iret aad loop out cmc sti add push adc and sub dec push pop pop data16 jb jg mov mov mov fsub jmp or adc xor inc inc dec push pop pusha insw jae jg mov mov mov fucom jmp or adc xor inc inc dec push pop popa outsb je addb lods mov mov fsubp jmp idiv add adc sbb cmp dec dec push pop bound jne addl rol rcr loopne in repnz incl and xor cmp pop pop fs ja (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jge mov scas mov ret aad loop out hlt sti add or sub dec push pop pop imul test test leave iret aad loop out hlt sti add push adc and sub dec push pop pop gs jb jle mov mov mov fsub jmp or adc and sub dec push pop pusha data16 jae jg mov mov mov fucom jmp or adc xor inc inc dec push pop pusha insw jae addb lods mov mov fsubp jmp idiv add adc sbb cmp pop bound jne orl ret aad loope out hlt cli add or cmp dec push pop pusha insw jae jg mov lods mov mov (bad) jmp clc incl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl sbb and inc dec push push pop fs jbe orl scas mov rol aam loopne in repz add or sbb and inc dec push pop pop fs ja orl scas mov ret aam loope in repz add or sub cmp inc dec push push pop fs ja test stos mov mov fsub jmp or adc and cs inc inc dec push pop pusha data16 jae jg mov mov mov fucom ljmp adc xor inc inc dec push pop pusha data16 jae jg mov mov mov fsub ljmp push sbb sub xor push pop popa outsb je addb lods mov mov (bad) in repnz incb and inc dec push push pop arpl jbe (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl test mov rol aam loopne in repz add or sbb and inc dec push pop pop imul test test enter loope out hlt cli add or sub cmp inc dec push pop pop imul test stos mov mov fsub call pop push adc and sub dec push pop pop imul test stos mov mov fsub jmp or adc xor inc inc dec push pop pusha data16 jae jg mov mov mov fucom ljmp push sbb sub xor push pop popa outsb je addb lods mov mov fsubp jmp sti pop adc and sub inc dec push pop imul scas mov lret in icebp clc incb and xor cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call arpl jbe orl scas mov ret (bad) fsub jmp or adc xor push pop popa outsb je addb lods mov rol rcr (bad) in repnz incl or sbb and inc dec push pop pop imul test stos mov mov fucom jmp or push sbb sub xor push pop bound jne (bad) mov scas mov ror aam loope in hlt sti add push adc and sub dec push pop pusha data16 jae addb lods mov mov (bad) jmp clc incl and xor ds dec push push pop arpl jbe orl scas add xlat fsubp ljmp push sbb cmp dec dec push pop bound jne (bad) mov scas mov rol aam loope (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp in hlt sti add push adc and sub dec push pop pusha data16 jae jg mov mov mov fsubp jmp idiv add adc sbb cmp pop arpl jbe orl scas mov ret aad loope out hlt sti add or sub dec push pop pusha data16 jae addb lods mov mov (bad) jmp clc incb and xor ds dec push push pop fs jbe orl mov mov fsub jmp or adc xor push pop popa insl je addb lods mov mov (bad) in repz incl pop or sub dec push pop pusha insw jae addb mov fcomp in icebp clc incb adc push and xor ds dec push pop pop imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl stos mov mov fsubp ljmp pop sbb cmp pop arpl ja orl mov mov fsub jmp or push sbb sub xor push pop bound jne (bad) mov scas mov ret aad loop out cmc sti add push adc xor inc inc dec push pop popa insl je addl rol rcr loopne in hlt cli add or sub dec push pop pusha data16 jae addb lods mov mov (bad) in repnz incl and inc dec push pop pop add addb lods mov mov (bad) in repnz incl and inc dec push pop pop imul test stos mov mov fsubp ljmp pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall cmp pop arpl jbe orl mov mov fsub jmp or adc xor push pop bound jne orl rol aam loope out hlt sti add push adc and cs inc inc dec push pop pusha insl jae addb lods mov rol rcr (bad) in repnz incl and inc dec push pop pop gs jb jg mov mov mov fsubp jmp clc incb and inc dec push pop pop imul test mov mov fchs out repz incl or sbb and inc dec push pop pop imul lea lret loop cli add adc sub ss push pop fs ja test stos mov mov fsub jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl or adc ss dec dec push pop bound jne (bad) mov scas mov rol aam loope in repz add or sub cmp inc dec push pop pop gs jae jg mov mov mov fsubp jmp idiv add adc sbb cmp pop arpl jbe orl scas mov ret (bad) fsub call or adc xor inc inc dec push pop popa outsb je addl rol rcr loopne in repz add or sub cmp inc dec push pop pop add jae addb lods mov mov fsubp jmp idiv add adc sbb cmp pop arpl jbe (bad) mov scas mov ret aam loope out hlt cli add or sub dec push pop pop insw jae jg mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call mov mov fsubp jmp idiv add adc sbb cmp dec dec push pop bound jne (bad) mov scas mov ror aam loope out hlt cli add or sub dec push pop pop data16 jb jg mov mov mov fsubp jmp idiv add adc sbb cmp pop arpl jbe (bad) mov scas mov ror aam loope out hlt cli add or sub dec push pop pusha insw jae addb lods add rcr (bad) in repz incl or sbb and inc dec push pop pusha data16 jae jg mov mov mov fsubp jmp idiv add adc sbb inc dec push pop bound jne addl rol aam loopne in repz add or sbb es (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp cmp inc dec push pop pop imul test test leave iret aad jecxz out idiv add unpckhps and cs inc inc dec push pop pusha insw jae addb stos mov mov fsubp jmp idiv add adc sbb cmp pop bound jne (bad) mov scas mov ror aam loope in hlt cli add or sub cmp inc dec push pop pop imul test stos mov mov fsub jmp add adc sbb sub xor push pop popa push xchg scas mov rol rcr loopne in repz incl and inc dec push push pop fs jbe orl scas mov ret aad loop out cmc sti add push adc and sub dec push pop pop data16 jb jg mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl rcl fucom jmp or push sbb sub xor push pop popa push xchg lods mov mov (bad) jmp clc incb and xor ds dec push push pop arpl jbe orl scas mov ret aam loope in hlt cli add or sub cmp inc dec push pop pop imul test stos mov mov fucom jmp or adc xor dec push pop bound jne (bad) mov scas mov ror aam loope in hlt cli add or sub cmp inc dec push pop pop imul test stos mov mov fsub jmp adc dec push pop fs test mov out hlt sti add push adc and cs inc inc dec push pop popa outsb je cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl cmpsl scas mov rol aam loopne in repz add or sub cmp inc dec push pop pop gs jb jg mov mov mov (bad) jmp clc incb and xor ds dec push push pop fs ja orl mov mov fsub jmp or push sbb sub xor push pop bound jne orl rol aam loope add cmc cld add unpckhps sub ss dec dec push pop bound jne (bad) mov scas mov ror aam loope in hlt cli add or sub dec push pop pusha data16 jae addb lods mov mov loopne in repnz incl and inc dec push pop pop imul test stos mov mov fsubp ljmp pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall cmp pop bound jbe (bad) mov scas mov ror aam loope out cmc sti add push adc and cs inc inc dec push pop pusha insl jae addb lods mov mov (bad) in repnz incl and inc dec push pop pop imul test stos mov mov fucom ljmp push sbb sub ss inc dec push push pop arpl ja test stos mov mov fsub jmp or adc xor push pop popa push mov scas mov rol aam loope out hlt cli add or sub dec push pop pusha data16 jae jg mov mov rol rcr (bad) in repz add or cmp inc dec push pop pop imul test stos mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov fucom jmp or adc ss dec dec push pop bound jne orl rol rcr loopne in repz incl and inc dec push push pop imul test stos mov mov fsub jmp or adc xor inc inc dec push pop pusha insl jae addb test mov rol aam loopne in repz add or sbb and inc dec push push pop fs ja orl scas mov ret aad loop out cmc cld add push adc xor inc inc dec push pop pusha insw jae addb lods mov mov fsubp ljmp push sbb cmp pop arpl jne (bad) mov scas mov rol aam loopne in repz add or sbb and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl push pop pop imul test stos mov mov fsub jmp or adc xor inc inc dec push pop pusha insw jae addb lods mov mov (bad) jmp clc incb adc sbb cmp pop bound jne (bad) mov scas mov rol aam loope call or adc and cs inc inc dec push pop pusha insw jae jg mov mov mov fsubp ljmp pop sbb cmp imul pop popf mov loopne testb sbb aaa ds dec push push pop outsb js mov rcr jmp sbb push outsb jns xchg lcall call and cmp gs test enter cmc add inc dec pop arpl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl lret ljmp xor inc dec push add push jle xchg lahf stos mov lret rcr fsubrp repz and aas inc dec push popa insl jp lea ret int out sti or and xor dec push pop imul stos mov into (bad) loopne cli add push adc and cmp push pop arpl xchg int3 fsub in testl cmp pop addr16 xchg enter hlt add sbb sub dec pop data16 xchg leave aad in testl cmp pop outsl jnp xchg popf stos mov into (bad) icebp std or sub inc push pop gs xchg lret ftst out stc add sbb cmp pop imul (bad) iret (bad) icebp cld or pop sub inc dec pop data16 mov (bad) repnz adc push pop addr16 mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp ftst lock add xor aas inc dec push pop fs mov ret lret aad lock add xor jl mov ret jecxz stc incl or and arpl mov iret (bad) repz and cmp jp xchg lahf stos mov cmc add pop and data16 test (bad) loope cmc add pop and cmp pop addr16 xchg int3 (bad) icebp sti push adc xor outsb jp xchg popf test in sti pop adc sub inc dec pop data16 mov enter stc add sbb cmp pop data16 xchg leave shl lock add inc push pop imul pushf test mov hlt add sbb sub aas dec push pop addr16 mov int in sti push adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp add inc dec pop outsl jp xchg lahf stos mov into fxam lock or sub inc dec pop data16 mov lret xlat in sti pop adc push bound xchg iret (bad) repnz push and data16 mov (bad) icebp std or push pop push mov fucomip hlt decl pop and cmp pop imul (bad) rcr ljmp cmp pop imul lcall in clc add sbb xor jns nop fwait cmpsl mov lret jmp add sbb pusha insb js nop fwait cmpsl mov lret in testl ss dec push pop adc xor push jle xchg popf cmpsl mov (bad) in clc add inc dec push pop imul mov enter repnz or sbb dec push pop push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl mov out stc add sbb sub pusha push jle xchg popf cmpsl mov (bad) in cli add sbb sub popa insb jbe mov enter lock add cmp bound orl out sti add cmp pop arpl (bad) mov enter repnz push adc and pop arpl test ror loopne hlt decb adc push pop addr16 test ret loope testb adc dec push pop push fwait movsl scas mov in testl xor push sahf test mov lock push adc and cmp push popa imul xchg lahf stos mov leave rcr call sbb pop arpl jns mov lret aad ljmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl cmp pop outsl jns lea lret ljmp xor inc push pop addr16 test ret into fsub out stc or inc dec push pusha push jle xchg sahf test fsub icebp sti push adc daa xor push pop gs xchg (bad) rcr out sti add ds push pop push pushf cmpsb mov (bad) rcr call sbb pop arpl orl into ftst out stc add sbb sub inc dec push pop imul mov (bad) into (bad) in testb adc sub aas dec push pop push fwait movsl scas mov in testl xor dec push pop addr16 xchg (bad) in clc add sbb cmp pop bound mov lret loopne cmc decl adc sub dec push pop addr16 test ret loopne hlt (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl adc push pop outsl jns mov lret aad ljmp xor inc dec pop fs js mov leave rcr out sti add cmp push bound mov leave rcr call sbb cmp push bound mov rcr in cli add sbb sub inc dec push pop imul mov (bad) rcr in stc add sbb sub pusha push jg xchg popf test loopne hlt decb adc sub cmp jno xchg (bad) into fsub in clc add and xor dec push pop push jle xchg pushf cmpsl mov (bad) rcr in stc add inc dec pop arpl (bad) mov int3 xlat loop testl sub imul mov out cli add sbb cmp pop arpl orl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp loopne cmc decl adc sub cmp push pop outsl jns lea lret jmp sbb xor inc dec pop arpl (bad) mov lret aad jmp sbb xor inc dec pop outsl jp mov iret ftst out clc add inc dec push pusha push jg xchg sahf test fucomip hlt decb adc push pop gs test ror fucomip hlt decb adc sub cmp push pop outsl jns mov int jecxz stc add inc dec push pusha push jg xchg popf cmpsl mov (bad) in cli add sbb sub pusha imul xchg popf test mov icebp cld pop adc xor inc dec pop add test (bad) jecxz clc add and xor imul mov (bad) rcr in stc add sbb cmp push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp jne mov int3 (bad) loope testb pop and aaa inc dec push popa imul xchg sahf test mov icebp push adc sub inc dec push pusha push jg xchg sahf test fucom icebp sti push adc xor inc dec pop arpl (bad) mov leave rcr ljmp xor inc push pop data16 test ror fsubrp hlt decl adc sub dec push pop addr16 test ret loope stc add sbb sub inc dec push pusha push jg xchg popf cmpsl mov (bad) jecxz testl xor imul scas mov in testb adc sub cmp outsl jp mov add xlat loope testb adc dec push pop data16 test ret int jecxz testl xor dec push pop data16 test ret loope cmc decl adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall push pop data16 test ret int jecxz testl xor dec push pop push pushf cmpsb mov (bad) rcr in stc add sbb sub inc dec push pop push jle xchg pushf cmpsl mov vpaddusb repz pop adc xor inc push pop outsb js lea int loop testb adc dec push pop addr16 test (bad) in cli add sbb das cmp pop outsb jns (bad) cltd movsb scas mov in testl ss dec push pop imul mov lock push adc push pop gs test ret int loop testl sub pusha push jle xchg popf cmpsl mov (bad) rcr in stc add cmp pop bound (bad) lea leave aam call sbb pop fs test (bad) into fcos (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp out clc add inc dec push popa imul xchg lahf stos mov leave rcr call sbb dec pop outsl jp (bad) cltd movsb scas mov jmp add push and xor dec push pop push fwait cmpsb scas mov out clc add and xor dec push pop addr16 xchg ret into (bad) in testl aaa inc dec push pusha push jg xchg sahf test mov out cli add sbb sub popa imul xchg sahf test fucom icebp cld push adc xor inc dec pop outsb js mov lret jmp push sub cmp add mov lret aad in testl cmp pop addr16 xchg (bad) in cli add sbb inc dec pop bound orl repnz push adc xor je xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc rcr in stc add inc dec push pop imul mov (bad) in cli add sbb pop outsl jns mov lret aam call sbb dec pop outsl jns mov lret call sbb das cmp outsb js mov leave aam jmp sbb pop bound mov enter lock add cmp pop bound mov enter icebp sti add aaa inc dec push pop imul mov (bad) into add in stc add sbb sub inc dec push pusha push jg xchg popf cmpsl mov (bad) rcr in clc add and xor addr16 test ror loopne cmc add adc sub cmp push pop addr16 test ret loope cmc add adc dec push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall jb xchg leave aam call sbb pop data16 xchg (bad) in stc add sbb cs inc dec pop outsb js lea into fsub in testl xor imul mov (bad) jecxz clc add inc dec push pusha push jg xchg sahf test mov out cli add sbb cmp push bound orl call sbb pop bound (bad) mov leave aam jmp sbb sub ds push pop data16 xchg enter hlt decb adc push pop data16 test ret into fsub in testl cmp pop bound orl call push sub dec push pop push fwait movsl scas mov in clc add and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp xor push popf cmpsl mov (bad) rcr in cli add sbb sub popa imul xchg popf test mov out stc add sbb sub pusha push jg xchg lahf stos mov enter lock add cmp push bound mov lret jmp add adc sub cmp jb xchg (bad) rcr out cld pop adc xor inc push pop addr16 mov into fsub in testl jnp mov fsubrp cmc add sbb pop push jle xchg pushf cmpsl mov lret (bad) loope cmc decl adc sub inc dec push arpl test enter testl dec push bound test (bad) into fsub push push (bad) mov rcr call and inc dec pop data16 cmpsb mov iret (bad) repnz push and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall jo mov fsub out popf mov rol aam loopne in repz add or sub cmp inc dec push push pop imul jg mov mov mov fsub jmp or adc and sub dec push pop pop imul test stos mov mov fsub call pop or sub dec push pop pop imul test test sbb push bound test leave aam in clc add sbb xor dec push popa insb js (bad) fwait cmpsl mov lret out cli add inc dec pop arpl (bad) mov enter jecxz cli add sub xor push pop addr16 mov mov out and jg lcall out cli add pop and ss dec push pop push popf (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp fucomip clc add and aaa inc dec pop outsl jp mov iret (bad) repnz pop adc daa add ja mov mov fsubp jmp clc incl and inc dec push pusha imul xchg lahf stos mov lret jecxz stc add sbb xor inc dec pop popa insb js mov leave aad jmp decl pop and ss dec push pop imul xchg mov fsub in clc add sbb xor cmp pop arpl jbe (bad) mov scas mov rol aam loopne in repz add or sbb es cmp inc dec push pop pop imul test stos mov (bad) rcr in icebp idiv add adc push and xor cmp pop arpl ja orl scas mov ret aam loope in hlt cli add or sub cmp inc dec push pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall imul test mov hlt decb adc es push pop bound jne (bad) mov lods mov rol rcr (bad) in repnz incb and xor ds dec push push pop arpl jbe (bad) mov scas mov rol rcr loopne in repnz incl and inc dec push push pop arpl ja orl scas mov ret aad loope out hlt cli add or cmp dec pop arpl test mov repnz or sub dec push pop addr16 xchg (bad) rcr out testl xor inc dec pop imul test stos mov mov (bad) jmp clc incb and xor cmp pop arpl jbe (bad) mov scas mov ret aad loop out hlt sti add push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call xor inc inc dec push pop pusha data16 jae mov scas mov ret aad loop out cmc sti add push adc and sub dec push pop popa outsb je addl ror aam loope in hlt cli add push adc and sub dec push pop pusha insw jae addb lods mov rol rcr loopne in hlt cli add or sub cmp dec push pop pusha insw jae addb lods mov rol aam loope out hlt sti add or sub dec push pop popa insl je addb lods mov rol rcr loopne in repnz incl or sbb es cmp dec push pop pusha data16 jae addb scas mov rol aam loopne in repz add or sub dec push pop pusha insw je addb lods mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc (bad) int fchs add out hlt sti add push adc and cs inc inc dec push pop pusha insl jae addb scas mov rol aam loopne in hlt sti add push adc and cs inc inc dec push pop pusha insl jae addb lods mov rol aam loopne in hlt cli add push adc xor inc inc dec push pop pusha insw jae addb lods mov mov fsubp jmp clc incb es cmp inc dec push pop pop data16 jb jg mov mov mov fsubp ljmp pop sbb cmp dec push push pop arpl jbe (bad) mov scas mov ret aad loop out cmc sti add push adc and sub dec push pop popa insl je addl rol aad loope out hlt cli add or sub inc dec (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call insl jae addb lods mov rol aam loope out hlt sti add push adc xor inc dec dec push pop popa insl je addb lods mov rol rcr (bad) in repnz incl es cmp dec push pop arpl test ret into fsub in clc add ss dec push pop push mov mov ror fsubrp hlt add adc pop and inc dec push pop pop imul test lods mov lret jmp add pop and cmp pusha outsl jnp xchg lahf stos mov int3 fsub in clc add sbb pop addr16 xchg (bad) in clc incb adc push and xor cmp pop arpl jbe (bad) mov mov out cli add xor dec pop add orl rcr loope (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push add adc cmp pop fs ja (bad) lcall loope stc add xor outsb jbe (bad) mov scas mov ror aad loope out cmc sti add push adc and sub dec push pop pop gs jb jle mov mov mov fsub jmp push and das ss dec push push pop bound jne (bad) mov lods mov rol rcr (bad) in repnz incb and xor cmp pop arpl jbe (bad) mov scas mov ret aad jecxz stc add and cmp arpl jge xchg lahf cmpsb lods mov rol rcr (bad) in repnz incl or sub cmp inc dec push pop pop imul test stos mov mov fsub add lock add movhps sub ss dec dec push pop bound jne (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jnp xchg scas mov rol aam loopne in repz add or sbb and inc dec push push pop fs ja xchg ret into fxam repnz incl adc sub cmp jb mov (bad) out sti pop adc sub cmp pop gs mov mov in repnz incl and xor cmp pop arpl jbe (bad) mov scas mov ret aad loope out hlt sti add push adc xor inc inc dec push pop pusha insl jae addb lods mov mov loopne cld add adc pop and inc dec push pop pop imul test stos mov mov fsub jmp or push sbb sub xor ds dec push pop pusha insw jae jg mov mov mov (bad) jmp clc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl and inc dec push pop pop imul test lods mov mov loopne in repz add or cs inc inc dec push pop popa outsb je orl rol rcr loope out hlt sti add or cs push pop popa push mov scas mov ret aad loop out cmc sti add unpckhps sub xor push pop popa push mov scas mov ret (bad) fsub call or adc ss dec dec push pop fs ja orl scas mov ret aad loop out cmc sti add push adc xor push pop popa push mov test lret fucom jmp or push sbb sub ss dec dec push pop bound jbe orl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp leave rcl fsub ljmp push sbb cmp pop arpl jbe orl scas mov ret aad loop out cmc cld add unpckhps sub ss pop arpl jbe (bad) mov mov mov fsub jmp or adc xor push pop bound jne (bad) mov scas mov ret leave iret (bad) fsub jmp or push sbb sub ss dec dec push pop arpl jbe (bad) mov scas mov ret aad loop out cmc cld add movhps sub ss dec dec push pop arpl jbe orl scas mov ret aad jecxz lock incb adc push and xor ds dec push push pop fs ja orl mov mov testl xor jae mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp (bad) out hlt cli add or xor inc push pop imul xchg fwait mov rol aam loopne out hlt sti add adc xor jae mov rcr jmp and cmp pop gs test ret int loope testl aaa inc dec dec push pop bound jne orl rol aam loope in hlt std or and pop insw jae xchg enter out sti add ds push pusha addr16 mov (bad) rcr jmp std pop adc daa xor jb mov int3 aam loope jmp or adc and sub dec push pop pusha data16 jae jg mov mov mov fsubp jmp clc incb adc push and xor cmp gs cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl stos mov mov fnclex call or adc and sub dec push pop pusha data16 jb jg mov mov mov fsubp ljmp push sbb sub xor push mov rcr jecxz cli add or sub cmp inc dec push pop pop imul test stos mov mov fsub call or adc and sub dec push pop pop data16 jb jle mov mov mov fsub jmp or adc xor inc dec dec push pop popa insl je addb cmpsl lods mov rol rcr loop cli add adc dec push pop arpl orl iret fsub out cli push adc and inc dec push bound test mov cmc sti add and xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) aas inc dec push pop pop imul test stos mov mov fsubp jmp idiv add adc sbb cmp pop arpl jbe orl scas mov ret (bad) fsub call or adc xor gs jb addb lods mov rol rcr loopne in repz add or sbb es dec push pop pusha insw je orl ret leave rcl fsub jmp or adc xor push pop popa push mov scas mov rol aam fnclex call or adc xor push pop fs ja orl mov mov fsubp ljmp sbb and inc dec push push pop arpl jbe orl mov mov fucom ljmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push idiv add adc pop and inc dec push pop pop gs jb jg mov mov mov fsubp jmp idiv add adc sbb ds dec push push pop arpl jbe orl mov mov fsubp ljmp pop sbb cmp pop arpl ja test stos mov mov fsub jmp or push sbb sub xor push pop bound jne orl mov mov fucom jmp or push sbb add inc dec push push pop fs js test stos mov mov fucom jmp clc incb adc push and xor ds dec push pop pop imul test stos mov mov fsubp ljmp pop push and xor ds dec push pop pop imul test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call mov mov (bad) in repnz incb and inc dec push pop pop gs jb jg mov mov mov (bad) jmp clc incb and xor ds dec push pop pop imul test stos mov mov (bad) jmp clc incb adc push and xor cmp pop imul test stos mov mov fucom ljmp pop push and cmp push arpl jle xchg popf test mov out decb adc and cmp push pop popa insl jae addb ret iret fcomp in icebp clc incb adc sbb cmp dec dec push pop bound jne mov enter testb sbb cmp pop push orb int jecxz clc add inc dec push popa imul xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp iret aad loop out hlt sti add push adc and cs inc dec dec push pop popa addr16 mov (bad) rcr loope icebp std or sbb push pop addr16 xchg ret iret xlat jecxz cli pop bndldx xor inc push pop insw js (bad) cwtl mov xlat loope stc add and cmp dec push pop pusha data16 jb jg mov mov mov fsubp ljmp push sbb sub xor push pop popa insl jae addb cmpsb lods mov mov icebp clc incb and inc dec push push pop fs ja orl scas mov ret aam loope out hlt cli add or sub cmp inc dec push pop pop imul test lods mov lock add sbb das cmp push pop imul xchg pushf mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl aad loope out hlt cli add or sub dec push pop pop data16 jb addb stos mov mov fucom ljmp push sbb sub xor push pop popa outsb je addb lods mov mov fsubp ljmp push sbb sub xor pop push cwtl movsb mov ret lret out cli add cmp arpl xchg add int3 xlat jecxz stc decl push and xor push jbe mov mov fnop out repz add or sbb and inc dec push pop pop imul test stos mov mov fucom ljmp push sbb cmp dec dec push pop bound je orl rcl fsubp jmp idiv add adc sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl ss dec dec push pop bound jne orl rol aam loope out cmc sti add push adc and das xor push pop popa insl jae addb lods mov mov fsubp jmp clc incb and xor cmp pop fs ja orl mov and pop data16 test ror fucom icebp cli add sbb sub pop push fwait movsl scas mov ljmp xor inc dec push bound mov (bad) int loope cmc decl adc xor inc dec pop bound mov rcr in clc add adc inc push pop outsl jns lea enter lock add pop and sub pop imul mov (bad) into fsub jmp decl adc daa xor inc dec pop outsb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl mov (bad) rcr in clc add and xor dec push pop data16 test ror fsubrp repnz push adc and cmp push pusha imul xchg pushf cmpsl mov (bad) iret (bad) out stc add aas dec push pop imul scas mov jmp add adc sub cmp push pop outsl jns lea lret (bad) loopne hlt decb adc xor inc push pop push fwait cmpsb mov (bad) jecxz clc add inc dec push pop push lcall loopne hlt decb adc xor inc dec pop outsb js mov leave aam out sti add aaa inc dec push pusha imul xchg popf cmpsl mov (bad) jecxz testl xor pusha push jle xchg popf cmpsl mov (bad) jecxz testl xor jno xchg enter icebp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sti add cmp pop bound mov rcr out decb adc push pop outsl jp mov int3 (bad) loopne cmc decl adc sub cmp pop outsl jp mov lret aad jmp sbb pop arpl mov rcr in stc add inc dec push pusha imul xchg sahf test mov out stc add inc dec push pop push pushf cmpsb mov (bad) into fsub in testb adc inc push pop addr16 xchg ret int loope testb adc sub cmp jno xchg (bad) rcr ljmp xor dec push pop push add mov lret aad jmp xor inc dec pop outsl jns lea lret jmp push sub cmp jo test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov in testb pop and xor addr16 xchg (bad) into (bad) in testl xor dec push pop data16 test ret loopne cmc add adc sub cmp outsl jns mov lret call sbb cmp pop bound mov enter lock add sbb sub pop imul mov (bad) in stc add and xor dec push pop data16 test ror fucomip repz adc das cmp bound mov rcr out cli add sbb sub pusha imul xchg popf test add icebp sti add cmp push pusha imul xchg popf test mov lock add sbb sub inc dec push pusha insb jbe mov rcr out std or sbb xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl pop arpl (bad) mov lret jmp add and xor dec push pop push pushf cmpsb mov (bad) rcr out sti pop adc and pop outsl jp (bad) lcall jecxz testl xor dec push pop addr16 xchg (bad) in stc add sbb pop arpl orb (bad) rcr out cli add sbb sub popa imul xchg lahf test fsub icebp sti add cmp bound mov lret call sbb pop bound test (bad) rcr out cli add adc and pop arpl (bad) mov leave aam jmp sbb xor inc push pop outsl jp (bad) cltd movsb scas mov out clc add and xor dec push pop push fwait movsl scas mov in clc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl or and xor push popf cmpsl mov (bad) rcr in clc add and xor push fwait movsl mov (bad) into fsub in testl xor dec push pop push pushf cmpsl mov (bad) in stc add inc dec push popa imul xchg sahf test fsub lock add cmp arpl test (bad) rcr call push sub dec push pop imul mov (bad) icebp cld push adc and pop bound mov rcr call sbb xor inc dec pop bound outsb jns lea lret call sbb pop arpl orl jmp decl adc push pop outsb js lea lret call pop sub cmp jno test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc iret (bad) out clc add aas dec push pop push fwait movsl scas mov in testb adc sub cmp push pop outsb js lea lret jmp sbb push pop outsl jns lea lret aad jmp sbb xor inc dec pop outsb js lea lret aad jmp sbb xor inc dec pop outsb js mov lret jmp sbb xor inc dec pop arpl orl lret jmp sbb xor inc dec pop bound (bad) mov (bad) rcr in cli add sbb sub popa imul xchg mov aad ljmp xor inc dec pop outsl jns (bad) cltd movsb scas mov icebp sti push adc and pop arpl orl int loope testb adc sub ds push pop addr16 (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl test (bad) in clc add and xor push lcall loope cmc decl adc sub cmp push pop gs test ror loopne cmc decl adc push pop outsb jns mov int3 (bad) loope clc add sbb cmp pop outsl jns mov lret aad ljmp xor jo test ret jecxz testb adc dec push pop addr16 test ret int loope add add inc dec push pop push pushf cmpsb mov (bad) in stc add inc dec push pop imul mov (bad) rcr jecxz clc add inc dec push pop push jle xchg popf cmpsl mov (bad) iret (bad) out clc add inc dec push popa imul xchg lahf test fucom repnz push adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall and push bound mov lret jmp decl adc sub dec push pusha outsl jns mov rcr out sti push bndldx cmp push popa insb jbe mov aam ljmp xor outsl jns lea int3 xlat loope testl xor push lcall loope cmc add push and xor push pushf cmpsb mov (bad) in stc add aas dec add push jg xchg lahf test mov repnz pop adc das cmp arpl (bad) mov leave rcr out sti add cmp push popa imul xchg popf cmpsl mov (bad) rcr in clc add sbb sub pusha push jle xchg pushf cmpsb mov (bad) rcr in stc add inc dec push pop push lcall (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call loope cmc add push and xor dec push pop push pushf cmpsb mov (bad) rcr out stc add inc dec push pop push fwait movsl scas mov in testb push and xor push pushf cmpsb mov (bad) in stc add inc dec push pop imul mov enter repnz or sbb xor inc push pop outsl jns lea lret aad jmp sbb push pop addr16 xchg xchg sahf test fsubrp repz pop adc dec push pop push pushf cmpsb mov (bad) jecxz clc add and ss dec push pop push popf test mov out clc add and pop imul mov (bad) iret (bad) out clc add inc dec push pop imul mov (bad) rcr in stc add inc dec push pusha push jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl mov cmc decl adc dec push pusha push jg xchg popf test mov out stc add sbb sub outsb js lea leave aam jmp sbb xor inc dec pop arpl (bad) mov lret jmp sbb xor push pop outsl jns mov int loope cmc add adc sub dec push pop addr16 test ret into fadds in stc add sbb cmp push popa imul xchg sahf test mov lock add sbb sub popa insb jbe mov enter icebp sti add cmp arpl orl int loop testl cmp outsb jns nop pushf cmpsl mov (bad) rcr out sti pop adc xor inc push data16 mov (bad) rcr in stc add sbb sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp ja lea lret call sbb pop arpl (bad) mov leave rcr out sti push adc and cmp pop arpl orl lock add cmp pop bound (bad) mov lret jmp sbb xor inc dec pop bound mov (bad) rcr out cli add sbb sub pop arpl orl icebp sti add aaa inc dec push pusha imul xchg sahf test fsub lock add sbb sub popa imul xchg lahf test fsub icebp cld push adc and cmp push popa insb jbe mov rcr in stc add inc dec push popa insb jbe mov leave rcr call sbb push popa insb jbe mov rcr out (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sti add cmp push pop push popf cmpsl mov (bad) rcr out cli add sbb cmp pop bound mov lret aad jmp add adc dec push pop push sahf test mov icebp cld push adc xor inc push pop outsb jns mov leave rcr call sbb pop outsl jp add ret loopne hlt decl adc sub cmp push pop outsb js lea lret call sbb pop arpl (bad) lea lret aad ljmp xor push pop outsb jp nop pushf test fucomip hlt decl adc sub cmp push pop data16 xchg ret int loope testb adc sub cmp jo test ret int loop testb adc inc push pop data16 test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov jmp add adc sub cmp push pop outsl jp mov int3 xlat loope cmc decl adc sub cmp jo test ret int loope cmc decl adc sub cmp push pop addr16 xchg ret into (bad) out clc add inc dec push pop imul mov lds rcr out sti add cmp outsl jp mov rcr call sbb push pusha insb js lea int jecxz add sbb pop gs jne lea xlat jecxz sti or sub inc push pop push cmpsl mov int3 xlat out cld pop adc and cmp pop addr16 mov ftst lock pop adc sub inc push pop push cmpsl mov lret xlat jecxz stc push adc push pop push cmpsb mov lret out cli push adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall sub inc push pop addr16 mov (bad) loop cli or push pop imul popf test in std or push pop push orl (bad) repz pop and cmp pop imul lret xlat loop cld or cmp pop imul popf test out decb push and cmp pop insb ja (bad) fwait cmpsl mov into fxam repnz adc push pop imul pushf test call and cmp push pop imul fwait cmpsl mov lret xlat jecxz cld or sub imul fwait cmpsl mov int out std pop adc add cmp xchg lahf test sbb push pop data16 test ror fucomip repz pop adc sub dec push pop push sbb inc push pusha imul xchg lahf stos mov leave aam call sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp xor jno test (bad) in stc add inc jo lret hlt cs nop mov enter aaa inc dec push bound mov leave rcr out cld add cmp arpl (bad) mov cli or and cmp pop addr16 mov int in cli push adc xor dec push arpl mov cmp cltd mov (bad) loopne cmc decl adc daa xor dec push pop data16 test (bad) rcr in stc push adc daa xor jl nop popf cmpsl mov add rcr call xor inc dec pop arpl out cld sub (bad) sar ds jae mov cmc add aas dec pop arpl mov rcr ljmp aas dec push arpl test (bad) rcr call es dec push pop imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl mov rcr call and inc push pop data16 mov iret (bad) lock or sub inc dec pop data16 mov rcr jmp and xor dec pop gs test (bad) rcr call pop sub inc dec pop gs xchg int in cld or sbb push pop data16 test lret (bad) loope clc add sbb xor dec push popa insb js (bad) lcall in clc add sbb xor dec pop fs xchg lret (bad) loope stc add ss dec pop outsl jnp xchg lahf stos mov iret (bad) repz push and addr16 mov iret (bad) lock pop adc sub inc dec pop data16 mov rcr call and push mov fucomp hlt add and cmp pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp orb fucomip testb sbb cmp pop push mov (bad) icebp std or dec pop data16 mov rcr jmp and ss dec push pusha insl jne (bad) mov rol aam loopne in hlt decb adc dec push push pop outsb js mov rcl fucom ljmp xor je mov (bad) iret ftst out clc add sbb pusha push orb iret ftst out add push adc xor je mov lret jmp pop sub inc dec push arpl xchg enter lock add adc dec pop arpl jns nop pushf movsl mov (bad) int fucomp hlt decl adc inc dec pop bound mov ret iret (bad) in repnz decl adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp xor dec push pop pusha outsb js nop lcall call and cmp data16 mov int3 fsub out cli push adc sub dec pop gs xchg int3 xlat jecxz stc add sbb xor dec push pusha insb js (bad) fwait cmpsl mov leave aad in testl inc push pop gs xchg leave aam ljmp cmp pop imul vpaddusw hlt decl pop and cmp pop addr16 mov (bad) rcr jmp and cmp pop push movsb scas mov in cli add push adc and ss dec push arpl addb vpand call sbb dec push push popa insl jns mov mov idiv or and data16 mov rcr jmp xor dec push arpl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jl xchg lahf stos mov int in sti push adc and insl jbe mov rcr out std or sub jb mov int3 fsub out cld pop adc sub inc dec pop fs mov (bad) icebp std or sub inc dec push pusha insb jns nop fwait movsl mov (bad) out cld pop adc sub dec push pusha insb js nop fwait cmpsb mov leave aad in stc add sbb xor push pop push fwait movsl mov mov stc add sbb xor dec push popa outsb jp xchg sahf test jecxz cli push adc sub jo xchg int3 xlat jecxz cli add inc dec pop arpl test int3 xlat jecxz cli add aas dec pop outsl jnp xchg pushf test ror jecxz cli push adc xor dec push bound test into fxam icebp decb push and inc dec pop data16 (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl mov fxam icebp std or sub inc dec pop gs mov iret (bad) repz adc push pop addr16 mov (bad) icebp std or sub inc dec pop data16 mov rcr jmp and pusha push addl rcr loopne in repz add pop and ss dec push pop popa push cwtl mov fildl jecxz lock add sbb cmp pop push jg xchg pushf movsl scas mov jmp decl adc sub aas dec pop popa insb js mov rcr call sbb xor je mov (bad) loopne cmc add adc dec push popa insl js (bad) fwait cmpsl mov lret call adc inc dec pop arpl orl (bad) rcr in icebp sti pop adc dec (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call jne mov ret iret (bad) lock add sub insl je addl jmp add inc push pop push mov (bad) out cli push adc xor outsb jns xchg pushf cmpsl mov enter cmc add and gs xchg int in cld or sub inc dec push add jbe (bad) cltd movsl mov (bad) rcr call and inc dec pop data16 mov into ftst icebp cld or sub inc dec pop addr16 mov rcr jmp and cmp pop imul (bad) rcr call sbb xor cmp popa insb js mov ret in cli pop unpckhps xor dec push pop push js test ror (bad) in repnz or sub cmp push popa (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp orl xlat in std or push pop push orl testb sbb cmp pop fs xchg mov (bad) loop cli pop adc xor dec push pusha imul fwait test mov testl cmp pop push orl add sbb xor add mov rcr out sti pop adc push pop imul cwtl movsb mov (bad) rcr ljmp cmp jae mov aam jmp add sbb pop push orl testb sbb pusha insb js (bad) pushf cmpsl mov lret out stc add sbb xor js (bad) lcall in testl cmp jns xchg pushf cmpsl mov enter testb sbb cmp push pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp (bad) lea shl in clc add sbb xor dec push pusha insb ja (bad) fwait cmpsl mov lret in testl ds push bound test lret in stc add inc dec pop gs mov fsub out sti pop adc sub outsl jnp xchg popf test in add or and inc dec pop bound mov ror fucomip repz add or sub bound (bad) mov mov cmc add adc pop and push pusha imul cltd mov aad ljmp xor inc push pop push movsb lods mov iret (bad) out stc pop adc xor push pop outsl jp nop lcall out cld pop adc push pop push mov ftst lock add sbb dec push pop gs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl mov (bad) rcr out decb adc pop sub insl jne orl out std pop adc xor cmp insl jbe mov mov lock push adc sub inc dec pop gs xchg lret in testl xor push pop imul mov (bad) rcr call and outsl jp nop fwait cmpsl mov lret out cli pop adc push arpl jg xchg lahf stos mov lret in testl cmp data16 mov int in sti pop adc sub inc dec pop gs mov ftst lock pop adc sub jo xchg int3 fsub lock pop adc xor dec push pop pop imul xchg popf cmpsl mov lret fsubrp repz adc sub cmp push fs ja (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call mov repz das cmp push bound xchg int in decb adc push pop imul mov clc add sbb pop imul iret (bad) out stc add adc sub aas dec push pusha lock (bad) into xlat loope cmc decl adc dec pop bound mov rcr in clc add and xor outsl jns mov enter out stc add and xor data16 test ror fucom icebp sti add aaa inc dec push pop imul lods mov lret aad call sbb pop imul scas mov in testl xor outsl js mov (bad) rcr out cli add ss dec push pop push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl mov ljmp das cmp push pusha push jle xchg fwait movsl scas mov ljmp das cmp bound mov enter out stc add sbb sub inc dec push pop add jg xchg popf cmpsl mov (bad) rcr in clc add adc dec push pop data16 test ror fucomip repz or sbb push pop gs test ret loop testl xor dec push pop data16 mov (bad) rcr in clc add and xor dec push pop outsl jns mov int loope idiv or sub cmp push pop outsl jp mov lret out cld add aaa inc dec push pop imul scas mov ljmp das cmp popa insb jbe mov rcr in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc add sbb pop outsl jns lea lret call sbb sub pusha push orb enter icebp sti add aaa inc dec push pop imul cmpsl mov (bad) loop testb adc sub cmp push pop outsl jns lea leave rcr out sti add cmp pop arpl (bad) mov leave rcr out sti add aaa inc dec push pusha push jg xchg sahf test mov out clc add sbb sub inc dec push pop push lcall loope cmc add adc sub imul mov in stc add sbb cmp pop arpl xchg enter hlt decb adc dec pop arpl test fsubrp repnz pop adc xor inc dec pop bound orl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp ljmp das cmp push popa imul xchg sahf test frstpm(287 lock add sbb sub pusha push jle xchg pushf cmpsb mov movb fsub lock add sbb sub inc dec push pop push pushf cmpsl mov (bad) rcr in cli add pop and inc dec push pop imul scas mov in testb adc sub cmp outsl jnp (bad) lcall loopne hlt decb adc xor inc dec pop bound mov (bad) rcr out stc add sbb sub inc dec push pop push pushf movsl scas mov in testb adc sub dec push pop data16 test ror loopne hlt decb adc xor inc dec pop bound orl call sbb sub pusha push jle xchg popf cmpsb mov (bad) in clc add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp bound (bad) lea int3 (bad) loopne hlt decb adc sub dec push pop addr16 xchg ret int loop add add inc dec push popa insb ja mov lret (bad) loopne cmc decl adc sub ds push pop push fwait movsl scas mov jmp decl adc push pop data16 xchg ret int loop clc add and xor dec push pop push fwait cmpsb scas mov in testl xor jo test ret loope cmc decl adc daa xor inc push pop outsb jns lea lret (bad) loopne cmc add and popa insb ja mov lret aam jmp sbb xor inc push pop outsl jns lea lret (bad) loopne hlt decb adc xor inc dec pop outsb js mov lret aad (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp ljmp xor inc dec pop outsb js mov leave rcr out std pop adc es add inc dec pop outsb js mov lret aad jmp sbb xor inc push pop outsb jns mov lret (bad) loopne hlt decb adc dec pop outsb js lea lret (bad) loope cmc add adc sub cmp jno xchg (bad) out cld push adc sub cmp jb xchg (bad) rcr call sbb outsl jl xchg popf cmpsl mov (bad) rcr in stc add pop and xor imul xchg mov aad jmp sbb pop bound orl out cld push adc xor inc dec pop arpl (bad) mov int3 (bad) loopne cmc decl adc xor inc push pop outsb jp (bad) cltd (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp loope testb adc sub cmp push pop outsb js mov cwtl mov (bad) loopne hlt decb adc push pop outsl jp mov lret aad ljmp xor inc dec pop arpl (bad) mov lret call sbb pop outsl jns mov lret call sbb xor inc push pop outsb js mov lret call sbb push popa imul xchg popf cmpsb mov (bad) iret (bad) out clc add and inc dec push pop push jg xchg popf test mov lock add cmp bound orl hlt decl adc sub cmp jo test ret int loop testb push and xor dec push pop push jg xchg lahf test fucomip testb adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl pop imul mov (bad) iret add in cli add sbb sub bound mov lret call sbb pop arpl orl repz adc xor inc dec pop arpl (bad) lea leave rcr out sti push adc and pop arpl (bad) lea rcr jmp sbb xor inc push pop outsl jns lea int jecxz cli add cmp pop data16 mov enter hlt decl adc sub dec push pop imul mov hlt decb adc sub dec push pop imul xchg mov xlat loop clc add sbb sub arpl (bad) lea into (bad) out clc add sbb cmp pop arpl test (bad) iret (bad) out cli add sbb xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp pop add jge xchg popf cmpsl mov (bad) rcr out std or push sub cmp jae mov leave rcr call pop sub insl ja lea rcr out decb adc dec pop data16 xchg int loop clc add sbb insb js mov iret ftst out stc add sbb cmp push pop push lahf stos mov int3 xlat loop testl cmp outsb jns (bad) fwait cmpsb mov (bad) rcr out cld push adc xor inc push pop data16 xchg (bad) rcr out decb adc sub dec push popa insl js (bad) fwait cmpsb mov enter repz adc push pop push sahf test mov hlt decb push and ss dec push popa insb jbe mov iret ftst out cli add cmp add jno cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl test mov ror aam loope in hlt cli add or sub cmp inc dec push pop pop data16 jb jg mov mov mov fucom jmp or adc xor inc inc dec push pop pusha insw jae jg lea mov mov fsubp ljmp push sbb cmp dec dec push pop popa push xchg lods mov mov (bad) in repnz incl and xor cmp pop arpl jbe (bad) mov scas mov rol aam loopne in hlt cli add or sub dec push pop pop gs jb jg mov mov mov fsubp ljmp push sbb cmp pop bound jne (bad) mov add iret aad loop out cmc cld add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl adc xor pusha imul cltd movsb stos mov into aad in cld add adc sbb dec push push pop arpl jbe orl scas mov ret aad loope out hlt sti add unpckhps and cs inc inc dec push pop popa outsb je addb lods mov rol rcr (bad) in repnz incl and inc dec push pop pop imul test stos mov mov fsub jmp or adc xor inc inc dec push pop pusha insl jae addb lods mov rol rcr (bad) in repnz incl and xor cmp pop fs ja orl mov mov fsub jmp or adc xor add bound jne (bad) mov scas mov ret aad loope out (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push sti add push adc xor inc inc dec push pop pusha insl jae addb lods mov mov fsubp jmp idiv add adc sbb cmp pop arpl jbe orl scas mov ret aad loope out hlt cli add or sub dec push pop pop gs jb jg mov mov mov fsubp ljmp push sbb cmp dec dec push pop bound jne orl rol aam loope in repz add or sub cmp inc dec push pop pop imul test stos mov mov fsub jmp or push sbb sub xor push pop popa push xchg test mov ret aad loope out hlt cli add or cs push pop popa insl je (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl mov rol aam loopne in repz add or sub dec push pop pusha insw jae mov mov fndisi(8087 out hlt cli add or sub cmp inc dec push pop pop imul test stos mov mov fucom ljmp push sbb sub xor push pop popa push xchg lods mov mov fsubp jmp clc incb and inc dec push push pop arpl jbe orl scas mov rol aam loopne in repz add or sbb and inc dec push pop pop imul test stos mov mov fsub call add unpckhps sub xor push pop popa push xchg lods mov mov fsubp jmp idiv add adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call sbb cmp dec dec push pop popa push mov scas mov rol rcr loopne in repnz incl and xor cmp pop arpl jbe (bad) mov scas mov rol rcr loopne in repz add or sbb and inc dec push push pop fs jbe orl scas mov ror aam loopne in repz add or sbb es cmp inc dec push pop pop imul test test enter loope out hlt cli add or sub cmp inc dec push pop pop imul test stos mov mov fsub call or adc and sub inc dec push pop pusha insw jae jg lea mov mov fsubp jmp idiv add adc sbb cmp dec dec push pop bound jne orl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call mov fnop out repz incl or sbb and inc dec push pop pop fs ja orl mov jmp sbb sub pop bound orb mov mov fsub call or adc and sub dec push pop pusha data16 jb jg mov mov mov fsubp jmp idiv add adc sbb cmp dec dec push pop bound jne (bad) mov scas mov rol aam loope in repz add or sub cmp inc dec push pop pop imul test stos mov mov xlat fucom ljmp pop sbb cmp dec dec push pop bound jne orl rol rcr loopne in repz incl or sbb and inc dec push pop pop fs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp ja test stos mov mov fsub jmp or adc xor inc inc dec push pop pusha insw je addb lods mov mov fsubp jmp clc incb adc sbb cmp pop bound jne (bad) mov scas mov ror aam loope in hlt cli add or sub cmp inc dec push pop pop imul test stos mov mov fsub ljmp push sbb sub xor push pop popa outsb je addl mov (bad) jmp clc incb pop es cmp inc dec push pop pop imul test stos mov mov fsub jmp or adc xor inc inc dec push pop popa outsb je addb lods mov mov out clc add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call in cli push adc sub inc dec pop data16 mov iret (bad) icebp cld pop adc bound lea rcr call and cmp pop push mov fucomip testl cmp jns nop sahf stos mov lret xlat jecxz sti push adc xor push popa insb ja mov rcr call and inc push pop addr16 mov aad in testl cmp pop arpl xchg lret (bad) loope clc add sbb popa insb js (bad) fwait cmpsb mov leave aad out cli push adc pop outsl jnp xchg sahf test in sti pop adc sub outsl jnp xchg sahf stos mov into (bad) repz push and cmp data16 mov rcr call and cmp pop imul enter (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push add dec push pusha imul lcall in stc add sbb xor push pop imul fwait test ror in sti pop adc sub dec push popa insl jns nop fwait cmpsl mov lret (bad) loop stc add aas dec push bound xchg lret xlat loope testl xor dec push pop imul mov mov (bad) in repnz push adc xor popa push jge xchg popf cmpsl mov lret xlat fsubp ljmp daa xor jbe mov rcr in stc add and cmp pop outsl jl xchg pushf test mov hlt decb adc push pop data16 mov lret (bad) loope testb push and ss dec push arpl orl aam ljmp das xor pop addr16 xchg mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp jmp pop and inc dec push arpl jp mov iret aad out incb adc inc dec push pusha insl jbe mov mov icebp cli add aas dec push bound orl rcr ljmp ss dec pop gs addl out cli add inc dec push popa imul xchg mov (bad) repnz adc dec pop data16 test (bad) rcr ljmp ss dec push bound test lret in clc add sbb xor js nop pushf test mov stc add sbb xor dec push arpl test leave aad in clc add sbb pop arpl jbe orl enter in repz or dec dec push popa insl jp mov ror loopne (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp add cmp pop data16 jns xchg popf test mov stc add inc push pop imul mov cli push adc xor dec push popa insl js lea fsubrp repz pop adc sub insl jns (bad) lcall icebp cld pop adc pop arpl xchg int in cld or sub inc push pop push mov aad in stc add cmp push pop addr16 mov rcr out decl pop and cmp pop imul mov hlt decl adc sub cmp jne mov rcr out std or sub inc dec pop gs mov (bad) icebp decb push and cmp pop push mov (bad) repnz adc sub inc dec pop gs mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call fsubr hlt decl push and data16 mov rcr out decl pop and cmp pop imul mov hlt add and cmp pop push mov fsubrp testb sbb cmp push pop push (bad) mov aad in clc add sbb pop push (bad) mov rcr jmp add sbb xor pop arpl xchg lret aad ljmp xor cmp jo jl mov mov (bad) rcr call adc and xor dec push pop push xchg popf movsb stos mov enter cmc add inc dec push pop imul mov testl cmp pop data16 xchg leave rcr jmp and xor insl jbe mov lret (bad) loopne testl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall and cmp pop imul mov fucomip cmc add adc inc dec push insb ja mov ret iret (bad) out std or sbb push pop imul xchg mov rcr out std or sbb pop push xchg cltd mov mov loopne in repnz incl and inc dec push push pop arpl jbe orl scas mov ror aad loop out cmc sti add unpckhps and xor outsb je orl rol aam loope out hlt sti add push adc and cs inc inc dec push pop popa push xchg lods mov rol rcr add out hlt cli add push adc and pop data16 mov mov out hlt sti add push adc xor inc dec dec push pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp outsb je addl rol aam loopne in repz add or cs inc inc dec push pop pusha insl jae addb lods mov rol rcr loopne in repz add or sbb es cmp inc dec push pop pop gs jae jg mov mov mov out cmc add push and pop outsl ja lea iret xlat loop cli add ss dec pop arpl orb int3 fabs out testb pop push and xor ds dec push pop pop fs jns xchg mov mov loopne in repz add or sub cmp inc dec push pop pusha data16 jnp xchg scas mov rol aam loopne in repz add or cs push push pop imul test stos mov mov fsub call (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) out cmc sti add push adc and cs inc inc dec push pop bound jne (bad) mov scas mov rol rcr loopne in repz incl or sbb and inc dec push push pop arpl jbe (bad) mov scas mov ret leave iret (bad) fsub call or adc xor push pop bound jne (bad) mov scas mov rol aam loope out hlt sti add push adc and cs inc inc dec push pop bound jne (bad) mov scas mov ret aam loope out hlt cli add or sub dec push pop pusha insl jae addl mov fnop out repz add or sub dec push pop pusha insl jae jg mov mov mov fsubp jmp idiv add adc sbb cmp dec dec push pop arpl jbe (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl mov ret leave iret (bad) fsub jmp or adc xor inc inc dec push pop pusha data16 jae jg mov mov mov fsubp jmp clc incb and xor cmp pop bound jne (bad) mov scas mov rol rcr loopne in repz add or sub dec push pop pusha insl jae addb stos mov mov fucom ljmp push sbb sub xor push pop arpl jbe orl scas mov ret aam loope out hlt cli add or daa sub dec push pop pop data16 jb jg mov mov mov fsubp jmp idiv add adc sbb cmp pop arpl jne (bad) mov scas mov ret (bad) fsub jmp or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl adc xor push pop pusha insl je addb lods mov rol rcr (bad) in repnz incl or cmp pop bound jg xchg sahf test loopne lock or sbb xor inc push push pop fs ja test mov lret (bad) loop out idiv add unpckhps and cs inc inc dec push pop pusha insw jae jg xchg lcall in std or sub inc push pop push mov (bad) in clc add inc dec push pusha imul xchg lahf stos mov lret rcr fsubp jmp add incl and inc dec push pop pop imul xchg mov out repz add or sbb and inc dec push push pop fs jbe orl mov in repz add sbb sub push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall iret (bad) out stc add cmp pop gs orl rcr out clc add pop and cmp pop pusha insl jae addb lods mov mov fsubp ljmp pop push and xor cmp pop arpl jbe orl mov mov fsub in clc add push sbb sub xor push pop bound jne (bad) mov scas mov rol rcr loopne in repz incl or and pop pop data16 jb jg mov lods mov rol rcr call pop sub dec push pop push js (bad) cltd lahf cmpsb lods mov rol rcr (bad) in repnz incl and inc dec push pop pop imul test stos mov mov fucom ljmp push sbb sub ss dec push push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall push ja orl mov mov fucom jmp or push sbb sub xor push pop popa push xchg popf movsb scas mov lock or dec push pop push xchg mov aad ljmp xor dec push pop imul mov int3 aam loope out cmc sti add push adc and sub dec push pop pusha data16 jae jg lea mov rol rcr (bad) in repz incl add sub dec push pop pusha insw jae addb lods mov mov (bad) in repnz incl and inc dec push push pop imul test stos mov mov add dec pop imul mov ljmp dec pop addr16 xchg mov call (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp cmp adcl in add sbb cmp bound mov loopne cld or daa xor jle fwait stos mov shl icebp decl push pusha outsb jl cwtl cmpsb mov rcr in cli or and inc dec pop imul mov call cs test fucompp testl xchg jmp das cmp test (bad) testb push pop insb jns xchg mov in stc or and inc dec pop imul mov call das cmp adcl out add push sub dec push data16 nop sahf lods mov add sbb cmp arpl mov loopne cld or es push pop insb jp cwtl movsl mov iret fucomp stc pop adc pop imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec (bad) cmc add pop sub je nop sahf stos mov decl push arpl mov loopne cld or es push pop insl jnp xchg movsl mov iret fucomp stc pop adc pop imul int3 (bad) testb pop data16 xchg lahf lods mov add sbb fs lea loop std or daa ss push popa outsl jge cltd cmpsl mov shl out cld or es add outsb jl cwtl cmpsb mov rcr in cli or and inc dec pop imul lret cmc add pop sub jb (bad) popf stos mov add sbb fs mov icebp add sbb aas push outsb xchg or sbbl sub dec push gs (bad) popf stos ret cvtpi2ps dec pop imul mov ljmp dec pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl mov sbb mov ljmp fwait mov jecxz adc inc pop outsl xchg push sbb cmp arpl mov lock sub inc push bound mov add sub je mov or cmp adcl popa jnp test and push imul or cmp (bad) pushf mov adc (bad) mov jmp das cmp pop data16 (bad) popf stos mov decl push bound lea loope std or es push pop insb jnp sahf mov out add and cmp xchg call xor dec pop imul int jmp das ds pop push scas mov add and cmp pop imul sub jbe (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call cli or and imul mov jmp pop adc pop imul int3 (bad) testb cs pop push scas mov add pop cmp data16 nop sahf lods mov add sbb fs mov icebp decl sbb cmp arpl lea loop or push popf mov loop add cmp jge mov fdiv push and pop jbe xchg scas leave fdivp adc inc pop jno popf mov xor addr16 test shl out sti or es push pop insb jp xchg mov jmp cs pop data16 xchg lahf lods mov add sbb arpl mov loopne cld or and imul mov or and inc push pop insb jp xchg movsl mov rcr in sti or and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call insb jnp xchg cmpsb mov rcr in cli or and imul movsb mov iret fucomp cli or daa xor push pusha outsb jl cltd cmpsl mov shl out cld or es push pop insl jp xchg movsl mov rcr in cli or pop imul shl out std or sub inc push pusha outsb jl cltd cmpsl mov shl out cld or daa xor jo mov loopne cld or es push pop insl jnp xchg cmpsl mov shl out cld or daa xor jg pushf lods mov add pop cs pop data16 xchg lahf lods mov add push sub jne xchg lahf lods mov add sbb arpl mov repnz sbb cmp arpl lea loop std or daa aaa inc push popa outsl jge cltd cmpsl mov rcr in cld or es push pop insl jnp cwtl cmpsb mov rcr in sti (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl pop and imul movsl mov iret fucomp sti or and imul movsb mov into fsubr stc pop adc pop imul lret (bad) hlt add push sub dec push gs (bad) sahf lods mov add pop sub je nop sahf lods mov add dec pop add mov fsubr clc push adc xor dec pop push scas mov add pop sub je nop sahf lods mov decl push gs (bad) popf stos mov add sbb in adc inc pop jns scas enter das dec gs mov jmp pop cmp mov sub jb mov pop and push pusha outsb jl fwait test pop cs pusha outsl jge test sub bound lea and push outsb test or jb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp xor sbbb cs pop jbe cmpsl rcr or cmp popf mov out pop xor jge mov out sbb dec pusha ja lods mov adc nop test vlddqu and push jo mov pop cmp addr16 mov jecxz adc xor jnp lods enter add xor arpl scas mov sbb dec fs mov in push cs popa jp lods enter xor jl mov jecxz adc ss insl xchg and push jo movsl mov ds jo movsl mov inc pop jne test and push insb xchg xor mov out sbb imul insl xchg es pop jae cmpsb rcr push sub jp scas leave in pop xor (bad) pushf mov in pop and push addr16 mov sar (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fsubrp sti adc inc pop je stos mov and push jo lea push cmp data16 mov pop das cmp cmpsl rcl add xchg and ret adc mov in push das dec popa jnp mov loopne sub jns stos (bad) fdivp push push aaa push imul pop cmp mov sbb popf mov in or cmp ret (bad) sbb imul mov push aaa dec push pushf mov jmp jo movsb mov inc pop jbe test (bad) or cmp insl xchg and push jo movsb mov inc pop jne cmpsl rcr adc inc pusha jp mov in sbb dec sbbl push add cmpsb ret adc inc pop jns mov in sbb mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl and jo mov es pop jae cmpsb rcr push sub jge mov out sbb push imul cmp mov and push outsl mov inc pop ja scas leave jecxz sbb dec imul insl xchg sub jne stos (bad) adc cwtl mov ljmp mov sbb inc add mov pop ss fs stos ret (bad) or cmp jg mov jecxz adc inc pop jb mov pop cs pop ja test fdiv or cmp sbbl sub outsl xchg pop cs pop je mov sbb inc pop ja cmpsl mov xor stos ret or cmp add cld adc inc pop jno mov push sub movsl mov xor jp test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc f2xm1 or cmp test sub jo mov pop das inc pop jne movsb mov xor js cmpsl mov xor arpl test and push imul push imul (bad) aas push outsl xchg adc mov push cs pop je mov sbb dec arpl ret fcomi or cmp (bad) cltd mov jecxz adc inc pop outsl mov adc inc pop jae mov sbb dec bound stos ret or cmp sbbl ja test (bad) or cmp test adc inc pop jae rcr or cmp imul (bad) add mov sbb dec pop ja movsl mov xor jp test xlat out pop pop cmp (bad) cltd mov loop adc aas push insl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl (bad) ds insl test adc inc pop jo mov adc mov sbb inc pop js cmpsb mov xor test push ss fs stos ret or ss gs stos ret (bad) or cmp jge lods (bad) fcomi or cmp push lcall inc push outsl xchg adc inc pop je mov sbb inc pop jbe cmpsb mov xor js test push aaa dec gs lods ret (bad) or cmp (bad) lcall aas pop jo lahf mov out push sub movsb mov xor xchg lods ret fcomi or test (bad) adc lea push ss gs lods enter sub je movsl mov cmp (bad) cltd mov loopne (bad) ds outsl xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call inc pop jae mov pop cs pop jae mov sbb dec popa jns lods (bad) fdiv or cmp sbbl outsl xchg call sbb dec bound cmpsl mov xor jne movsl mov xor je mov jge stos ret add jnp test (bad) in add xor ja movsb mov sub pop jo sahf mov sub enter test sbb pop jae sahf mov fcomip or xor lahf mov loopne or ss gs movsl mov cs pop jo popf mov loope or cmp jl cmpsl mov cs pop outsl test int3 cmp xchg adc or cmp mov add dec bound leave in sbb dec imul data16 stos (bad) adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp aas pop jae stos (bad) adc inc pop jnp mov in push das dec arpl lret sbb imul (bad) notb sub mov sub jae test sub jae test sub jp mov out sbb dec arpl lods ret or movsl mov ds je lods (bad) fnop adc dec bound mov out sbb imul mov daa inc pop jne stos (bad) fdivrp adc bound shr push and push outsb mov and rcr movaps jns scas (bad) loope push xor sbbb xor mov cmp mov add inc pop ja stos (bad) adc dec arpl mov jmp insb xchg pop cmp movsb mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp inc pusha jp scas leave in sbb mov cmp pushf mov loope std adc jns xchg mov or ss addr16 fwait mov fcomip adc pop imul ljmp cwtl scas (bad) or aaa dec gs mov in adc lods vpaddd das inc pop js test fcomi or mov push aaa push imul cmp sbbb add xor mov shl cld pop xor jge fwait lods (bad) (bad) or jae sahf mov sub dec gs lods (bad) loopne decb sub test (bad) pop xor jnp lods (bad) loopne adc inc pop jb xchg test sub jae cmpsb mov aaa inc bound mov jecxz adc cwtl mov jmp imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp mov sbb push addr16 mov loop adc pusha jns stos ret fcomi adc inc pop jp mov jecxz pop xor jge mov out sbb push imul insl xchg daa inc pop jbe cmpsl rcr adc inc pop jns mov add and dec imul inc pop jae movsb mov xlat out or cmp jl cwtl movsl mov jmp pop imul mov icebp add xor mov call insb xchg es pop jns lods enter xor jl scas leave loop adc pop jbe movsb mov inc pop je cmpsb mov inc pop jne cmpsb mov add ja stos (bad) loopne adc dec fs mov jmp push sahf mov ljmp lahf mov call addr16 mov jecxz sbb dec sbbl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp jo mov sbb dec fs mov jecxz sbb dec sbbb cmp test and pop jb cmpsl ret adc inc pop jns lods (bad) loopne adc dec fs mov in sbb mov inc pop jae cmpsl ret adc inc pop jne stos (bad) adc pusha ja test sub pusha jnp mov out sbb push push lahf mov jmp insb xchg and push outsb mov and stos ret fdiv adc inc pusha jp scas leave loop sbb dec data16 mov ljmp mov and pop jne stos (bad) (bad) adc xor sbbb sub gs mov aam lock sbb lea or aaa push imul hlt add cs popa jp scas enter daa cmp insb sbbl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp scas (bad) loopne adc xchg stos ret or mov xor js stos ret movaps jbe test es push bound movsl mov xor push push call dec gs scas (bad) shl hlt or xchg add ss pop imul mov xor push pop jo scas push push jns lods (bad) push sub jmp push ss sbbb add xor jnp scas enter das inc popa jns add xor pop jns sub cmp test cmp xchg pusha jae mov repnz sbb cmp bound mov fsubrp cli or pop push scas mov add sbb cmp bound sbbl inc pop ja (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall sbb pop outsl mov test add das inc pop je movsl icebp adc dec popa js stos ret fdiv adc dec arpl mov call imul pop aaa push imul inc pop jne movsb mov aas pop jb mov daa inc pop jae movsl mov aas pop jb test fdiv adc inc pusha jnp mov out sbb dec imul data16 scas (bad) (bad) adc dec popa jns lods (bad) fnop adc cltd mov call insb xchg pop das inc popa jl scas enter sub scas lret sbb mov ss insb xchg es pop je test sub ja stos vpsubd mov out sbb push outsl mov inc pop ja stos (bad) fdivrp adc dec fs mov in sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl push push lahf mov ds jae movsl mov aas pop jb test sub mov out sbb push in or cmp ret adc inc pop jbe test xor jl mov jmp insb xchg and pop jae movsl mov aaa dec cli int3 jmp adc jne mov and inc push fs xchg scas enter sub pusha js movsl mov pop xor mov in pop xor jg lods (bad) push das inc pop ja test fyl2x or cmp lahf mov out sbb dec arpl mov in pop xor jbe lods mov adc inc pop jb test or nop lahf mov out add dec pop push loopne adc cs pusha jnp test fsub cmc add sub lea cli adc push pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp orb fsubrp repnz adc sub inc dec push popa insl js lea iret fsub ljmp xor insl jns xchg pushf test mov cmc add and push mov fninit in stc add sbb pop gs xchg leave aad jmp add sbb xor jbe lea rcr jmp add ds push pusha insb js nop fwait cmpsl mov lret xlat jecxz cli add inc dec push outsl jp xchg cwtl mov rcl fucom ljmp xor dec dec push pop imul mov ret iret fnsetpm(287 out sti add sub inc dec push pusha insl jne (bad) mov (bad) into fsub repz adc push pop addr16 mov aad out cli pop adc sub inc dec pop addr16 mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc int jecxz testl dec push pop imul mov repnz or sub inc push pop data16 mov rcr call and cmp pop push orl decl adc sub cmp js lea rcr call and ss dec pop gs mov rcr call pop and cmp pop bound mov iret (bad) icebp cld or push sub jo xchg into fxam icebp std or sub inc push pop addr16 mov into fxam icebp cld or dec pop gs mov rcr out decl pop and cmp pop addr16 mov (bad) repnz or dec pop addr16 mov aam jmp add inc push pop imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov cmc add and cmp pop push (bad) lea aam in testl dec push pusha imul cltd cmpsb mov lret in clc add sbb xor dec push bound xchg int in cli add cmp pop popa insl je mov mov (bad) jmp pop sub cmp inc dec push pop outsb jns mov leave iret (bad) fsub out cli push adc push pusha push jge xchg lcall fucomip cmc add adc push pop outsb jp (bad) cltd mov (bad) lock push adc xor push pop addr16 mov (bad) rcr out cld pop adc push bound test ret iret fninit jmp adc xor push pop bound jle xchg sahf test (bad) loope testl cs inc dec pop arpl cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl mov jmp stc add sbb dec push pop pusha push orb into (bad) icebp decb adc sub inc dec pop fs xchg leave aam jmp add ds push popa insb ja lea rcr ljmp cmp pop addr16 mov (bad) rcr jmp push sub ds push pusha imul cwtl movsb scas mov repnz adc push pop data16 mov (bad) repnz adc dec pop data16 mov iret (bad) repz adc dec pop gs mov aam call or push sub aas dec push popa push cltd mov rcr out cld push adc es cmp dec push bound orl (bad) repnz push and data16 mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov sti pop adc sub inc push pop imul mov repnz push adc xor pop arpl orl (bad) loope clc add dec push bound lea aam ljmp cmp push pop imul lcall jecxz sti push adc xor inc push pop push orb lret jmp add inc push pop addr16 mov rcr ljmp ss dec push popa insb ja mov rcr out std pop adc sub inc dec pop fs mov int in cld or pop sub inc dec pop data16 mov into (bad) icebp std or dec pop outsl jp xchg popf test jecxz sti pop adc sub inc dec pop gs mov fsub icebp decb adc dec pop gs mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov testb sbb pop push (bad) lea rcr jmp and cmp push pop push (bad) lea aam in clc add sbb xor dec push bound test leave aam in clc add sbb push arpl xchg iret (bad) icebp std or sub imul cmpsl mov lret rcr (bad) in repnz incl ss dec push pusha insw jae test vpaddusw out cmc cld add adc and pop imul mov in testb adc sub gs xchg leave aam in testl ss dec push popa insb ja lea rcr in cli add sbb cmp data16 mov xlat fsubrp hlt add movhps sub inc dec pop bound (bad) mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc iret fsub ljmp xor inc dec push pop push lahf cmpsb lods mov int3 xlat loopne clc add push adc and cmp pop outsb je orl out sti pop adc sub mov ljmp jae mov lret in clc add sbb cmp add jge xchg lahf lods mov icebp std or sub outsl jge mov rcr in sti add cmp pop addr16 mov fxam icebp cld pop adc sub jo mov ftst lock or push sub jno xchg int in cld or sbb push popa push jbe orl (bad) into fxam out cmc sti add sbb xor push push pop push lahf stos mov mov in testb sbb and push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp jno mov iret (bad) repnz push and cmp pop push (bad) (bad) lcall out sti pop adc push pusha imul xchg mov out std or sub inc dec pop outsl jp nop pushf test mov cli add inc dec pop outsl jnp add rcr out decl pop and cmp pop addr16 mov leave aad out stc add sbb sub fs xchg lret in stc add aas dec pop gs mov leave aam jmp sbb xor dec push popa insl js (bad) lcall jmp add inc push pop push orl aad in clc add sbb xor dec push pusha insb ja (bad) lcall out cli add inc dec pop fs xchg iret (bad) repnz or push sub inc dec (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall jno mov int in cld or sub inc dec pop data16 mov int in sti pop adc sub inc dec pop fs xchg int3 xlat jecxz sti push adc sub inc dec pop data16 mov rcr out decb add and push mov fsubrp testb sbb pop imul cwtl mov aad jmp clc decl adc sub cmp inc dec push pop pop data16 jbe mov (bad) int (bad) in testl cmp pop popa push cwtl movsb scas mov lock add inc dec push pop push mov fsub lock push adc xor push pop push popf test mov hlt add pop and inc dec push popa imul xchg mov (bad) loop clc add sbb xor inc push pop insw jae (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jns mov lret out testb sbb cmp push pop push lahf cmpsb lods mov int3 (bad) loope cli add adc sub cmp push pop arpl jbe mov leave rcl fsub repz adc xor inc dec pop data16 mov int jecxz cli push adc xor push pop imul lods mov repz adc dec pop fs xchg enter testb sbb pusha imul xchg lahf stos mov lret jmp add inc push pop data16 xchg into (bad) lock pop adc sub outsl jp xchg popf stos mov int in cld pop adc sub inc dec pop gs mov fsub out cli push adc xor push pop imul lcall out stc incl adc push pop pop imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl mov in sti add xor inc dec pop arpl orl testl ds push bound test int3 fxam repnz and das cmp pop push popf cmpsl mov testl cmp pop push mov fsubr cmc decl adc push pop push mov fsubr hlt add and cmp pop push mov aad out stc add cmp pop addr16 mov int in sti pop adc sub inc dec pop addr16 mov aad jmp push sub insl js (bad) lcall in stc add sbb xor dec push popa insl js nop fwait cmpsl mov lret xlat loop stc add aas dec push popa insl js nop pushf cmpsl mov lret in cli push adc sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl fs mov iret (bad) icebp cld or pop sub jo mov iret (bad) repnz push and push orl in testl cmp push pop imul cltd movsl mov (bad) rcr jmp add sbb xor js xchg popf test ror loop clc add sbb xor dec push popa insb js (bad) fwait cmpsb mov leave aam in clc add sbb push arpl xchg (bad) rcr out hlt sti add and dec push pop pusha addr16 xchg ret aad jmp push sub inc dec push push pop arpl jge xchg lahf lods mov in testl xor outsl jp xchg pushf cmpsl mov enter testl cmp arpl orl rcr out decb adc sub dec push pop imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call into fxam lock pop adc sub insl jae orb int loope out stc add sbb cmp inc dec push pop imul xchg mov int3 fsub in clc add nop/reserved cmp arpl jbe mov int3 rcr (bad) repnz adc dec pop fs xchg lret in clc add sbb cmp push pushf mov fucomp repz adc sub inc dec pop gs xchg lret in clc add sbb xor dec push popa insl js lea int3 fabs in stc add sbb pop addr16 mov ftst out sti pop adc sub inc dec pop fs mov ftst out sti push adc pop fs mov int jecxz sti pop adc sub ds push pop imul pushf cmpsl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl call adc dec push pop arpl orl mov ljmp daa cmp outsb jl xchg mov (bad) repnz and ds push bound xchg int out add push and arpl test aad ljmp cmp pop data16 mov (bad) repnz or sub inc dec pop outsl jnp xchg sahf stos mov int in std or push pop push mov (bad) jecxz cli push adc and pop addr16 mov int in decb adc sub inc dec pop data16 mov aam call sbb push arpl test lret in clc add sbb xor ja (bad) fwait cmpsl mov lret xlat jecxz sti push adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call outsb jp xchg sahf stos mov int in cld or pop sub inc dec add jg xchg mov fucomp hlt add push and push mov fucomp cmc add dec push popa insb js (bad) lcall jmp add sbb cmp pop imul mov clc add sbb xor dec push bound test lret in stc add sbb xor dec push bound test lret (bad) loop cli add inc dec push arpl test (bad) rcr out hlt cli add pop and dec push pop pusha data16 ja (bad) xchg mov into aam out std pop adc push push pop arpl jge xchg lahf stos mov int3 xlat loope cmc decb adc daa xor jns nop lcall jmp and gs xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl call and add inc dec push bound mov iret (bad) icebp std pop adc sub cmp push ja mov int fsub in testl aas inc dec pop data16 xchg mov hlt cld add push and aaa inc dec push pop imul xchg popf cmpsl mov (bad) into aam in cli add cmp push pusha insb js mov rcr call pop sub outsb jns xchg cwtl sahf test ror in cli push adc push bound test (bad) rcr jmp add dec push pop push orl jmp add inc dec pop gs xchg int3 fsub out cli add ds push bound test lret in stc add sbb xor js (bad) lcall (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp jmp stc add cmp jo jl mov (bad) out cmc sti add cmp imul mov mov out stc add sbb es aas dec pop imul fwait cmpsb mov enter clc add sbb xor dec push fs mov rcr jmp and cmp pop data16 xchg fsub in testl aas dec push pop push jg xchg mov loopne testl cmp jbe mov aam jmp add sbb xor outsb jp nop fwait cmpsb mov (bad) rcr jmp pop sub dec push pusha imul cwtl mov fucomp cmc add and cmp push popa insl js (bad) fwait movsl mov (bad) rcr out cli add sbb pop imul (bad) rcr call sbb das cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call push orl (bad) loop stc add ds push popa insb ja (bad) fwait cmpsb mov lret in clc add sbb xor dec push popa insl js nop fwait cmpsl mov int3 xlat loop stc add sbb popa insb js mov aad in clc add inc dec pop outsl jnp xchg sahf test in sti push adc sub outsl jnp xchg lahf stos mov into fxam icebp cld or sub inc push pop addr16 mov iret (bad) icebp std or dec pop addr16 mov rcr call and cmp push pop imul ret fsubp jmp idiv add adc sbb cmp pop fs ja orl scas mov ret aad loope out hlt sti add or sub dec push add insl jae addb lods mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc int3 rcr fsubp jmp idiv add adc sbb inc push pop arpl xchg mov in repz add pop and das xor push pop popa insl je addb lods mov mov fsubp jmp idiv add adc sbb cmp dec push push pop bound jne (bad) mov scas mov rol rcr loopne in repnz incl and xor cmp pop arpl jbe orl scas mov ret aam loope out hlt cli add or sub cmp inc dec push pop pop imul test stos mov mov fsub jmp or adc xor inc inc dec push pop pusha insw jae jg mov mov mov (bad) jmp repz add or sbb and inc dec push push pop fs ja orl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall ret aam loope in hlt cli add or sub cmp inc dec push pop pop imul test test leave iret aad in add sub push push xchg pushf mov ret leave iret (bad) fsub call or adc and sub dec push pop pusha data16 jb jp xchg lods mov mov (bad) jmp clc incl and xor ds dec push push pop arpl jbe orl scas mov ror aam loope in hlt cli add or sub pop push jg xchg sahf test leave rcl fsub jmp or adc and sub dec push pop pop data16 jb jg mov mov mov fucom ljmp push sbb sub xor push pop popa outsb je addb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov (bad) jmp clc incb adc sbb cmp pop bound jne orl rol shl in repnz incl and inc dec push pop pop imul test stos mov mov fucom jmp add adc sbb cmp dec dec push pop arpl jbe (bad) mov scas mov rol aad loope out hlt cli add or sub cmp dec push pop pop imul test stos mov mov fsubp ljmp push sbb cmp dec dec push pop bound jne addl rol aam loopne in repz add or sbb es cmp inc dec push pop pop imul test test leave iret aad loop out hlt sti add push adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl inc inc dec push pop pusha insw jae jg mov mov mov fucom ljmp push sbb sub xor push pop bound jne orl rol rcr loopne in repnz incl and add push pop pop imul test stos mov mov fucom ljmp adc xor push pop popa outsb je addb lods mov rol rcr (bad) in repnz incl and inc dec push push pop fs ja orl scas mov ret aad loop out hlt sti add push adc xor inc inc dec push pop pusha insw jae addb stos mov mov fsubp ljmp push sbb cmp pop arpl jl xchg lahf stos mov out (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc add pop sbb cmp push pop addr16 xchg lods mov rol rcr loope out hlt cli add or sub push pop push xchg popf movsl mov (bad) int3 aad in hlt sti add adc das xor push push pop arpl jbe (bad) mov scas mov rol aam loopne in repz add or sbb and inc dec push push pop fs ja orl mov ret iret (bad) lock add adc sbb cmp dec dec push pop bound jne addl rol rcr (bad) in repz incl or sbb and inc dec push push pop fs ja orl scas mov ret aad loop out hlt sti add or cs inc inc dec push pop pusha data16 jae jg mov mov mov fucom ljmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call push sbb sub xor push pop popa push mov lods mov rol rcr loopne in repnz incl and inc dec push push pop arpl jbe orl stos mov mov out hlt cli add or sub dec push pop pop imul test stos mov mov fsub jmp or push sbb sub xor push pop popa outsb je addb lods mov mov (bad) jmp clc incb adc push and xor ds dec push push pop fs jbe orl scas mov icebp idiv add adc sbb cmp dec dec push pop bound jne (bad) mov scas mov ret aam loope out hlt cli add or sub cmp inc dec push pop pop imul test stos mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc lret fucom ljmp push sbb sub xor push pop popa outsb je addb lods mov mov (bad) jmp stc incl and cmp inc dec push push pop fs jbe orl scas mov rol aam loopne in repz incl and inc dec push push pop imul test test enter loope out hlt cli add or sub cmp inc dec push pop pop fs ja test test leave iret aad loope out hlt cli add or sub cmp inc dec push pop pop imul test test leave iret (bad) fsub call or adc and sub dec push pop pop imul test test leave iret aad loope out cmc sti add push adc and sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl pop imul test stos mov mov fnclex call pop or sub dec push pop add insl jae jg mov mov mov fucom jmp or adc xor inc inc dec push pop pusha insl jae addb stos mov mov fucom ljmp adc xor inc dec dec push pop popa insl jae addb lods mov mov fsubp ljmp push sbb sub ss dec dec push pop popa outsb je addb lods mov mov (bad) jmp clc incb adc sbb cmp dec dec push pop bound je addl mov fsubp jmp idiv add adc sbb cmp arpl xchg enter out idiv add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl adc xor dec push pop bound je addl rol rcr (bad) in repnz add push push sbb push pop fs jns mov rol fxam out cmc sti add push adc xor push pop popa outsb je addl rol rcr (bad) in repnz incl and inc dec push push pop imul mov (bad) fcomp in icebp clc incb adc sbb cmp pop bound jne (bad) mov scas mov ror aam loope in hlt cli add or sub cmp inc dec push pop pop imul test stos mov mov fsub jmp or push sbb sub xor push pop popa outsb je addl rol rcr (bad) in repnz incb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall push and xor ds dec push push pop fs ja orl add rcl fsub jmp or adc xor inc inc dec push pop pusha outsb jne mov mov ret lret fucom jmp or adc xor push pop popa push xchg lods mov rol aam loopne in hlt cli add or sub cmp inc dec push pop pop gs jb jg mov mov mov fsubp ljmp pop push and xor cmp pop arpl test mov (bad) lret fucom jmp or adc xor inc inc dec push pop popa insl je addb lods mov mov fsubp ljmp push sbb sub xor push pop popa insl jae addb lods mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec rcr fsubp jmp idiv add adc sbb cmp inc dec push push pop imul test test leave (bad) out hlt cli add or sub cmp inc dec push pop pop gs jb jle mov mov mov fucom ljmp pop sbb cmp pop arpl jbe (bad) mov scas mov ror aam loope out hlt cli add or sub dec push pop pusha data16 jae jg mov mov mov fsubp jmp idiv add adc sbb cmp pop arpl jbe orl scas mov ret aad loop out hlt sti add push adc and sub dec push pop pusha data16 jae jg mov mov mov (bad) jmp clc incb and xor cmp pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp jo add mov mov mov fsub jmp or push sbb sub xor push pop bound jne addl rol rcr loopne in repz incl or sbb and inc dec push pop pop imul test stos mov mov fucom ljmp push sbb sub xor push pop popa push mov scas mov rol aam loopne in repz add or sbb es cmp inc dec push pop pop imul test stos mov mov fucom ljmp push sbb cmp dec dec push pop bound jne (bad) mov scas mov rol aam loopne out testl cmp pop addr16 xchg mov (bad) aam ljmp pop push and sub cmp inc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl push pop fs ja test mov (bad) int jecxz hlt std or push and cmp push pop pop push addb lods mov mov (bad) jmp clc incb and inc dec push pop pop imul test stos mov mov fsub jmp adc xor inc dec dec push pop bound jbe (bad) mov scas mov rol rcr loopne in repnz incl and xor ds dec push push pop arpl jbe (bad) mov scas mov ror aam loope in repz add or sbb and inc dec push push pop fs ja orl scas mov ror aam loope out hlt cli add or sub cmp inc dec push pop pop imul test test enter fsub jmp or adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl inc inc dec push pop pusha data16 jb jg mov mov mov fsub call adc and inc dec push push pop fs ja orl scas mov ret aam loope in repz add or sbb and inc dec push push pop arpl jbe orl scas mov ret aam loope in hlt cli add or sbb and inc dec push push pop fs jbe orl scas mov rol aad loope out testl xor push pop popa push xchg lods mov mov (bad) jmp clc incb and inc dec push push pop fs ja orl scas mov ret aad loope out hlt cli add or sub cmp inc inc dec push pop popa insl jae addb lods mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fsubp jmp clc incb adc push and xor cmp outsb je addb lods mov mov fsubp jmp idiv add adc sbb cmp dec dec push pop popa insl je addb stos mov mov fsubp ljmp push sbb sub xor push pop pusha insl jae jg mov mov mov fucom jmp or push sbb sub xor push pop popa insl jae addb stos mov mov fucom jmp or adc xor inc inc dec push pop pusha insw jae jg mov mov mov fsub jmp or adc and sub dec push pop pop imul add movsl stos mov mov fucom jmp or adc xor inc inc dec push pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp insb jb jg mov mov mov fucom jmp or adc and sub dec push pop pop imul test test leave iret aad loope out cmc sti add push adc and sub dec push pop pop imul test test enter loope in hlt cli add or sbb and inc dec push pop pop fs ja orl scas mov ror aam loopne in repz add or sbb and inc dec push push pop fs jbe orl scas mov rol aam loopne in repz incl and xor cmp pop arpl jne mov ftst add cld or push sbb sub cmp push pop imul test stos mov mov fsub jmp or adc sub cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl pop insw jne mov ret lret loope clc incl and xor ds dec push push pop arpl jbe orl scas mov ret leave iret (bad) fsub call or adc and cs inc inc dec push pop pusha insw jae orl (bad) int fnop out repz add or sbb es dec push pop pop data16 jb jg mov mov mov fsubp ljmp pop sbb cmp dec push push pop arpl jbe orl scas mov ret aad loope out hlt sti add push adc xor inc inc dec push pop pusha insl jae addb lods mov rol into aam loope in hlt cli add or sub dec push pop pop gs jb jg mov mov mov fsubp ljmp push sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp xor cmp dec dec push pop bound jne xchg mov fcomp in icebp idiv add adc sbb cmp pop bound jne orl rol rcr (bad) in repnz incl and xor cmp pop arpl jbe orl scas mov ror aam loope in repz add or sbb es cmp inc dec push pop pop fs jle xchg mov (bad) fcomp in lock add adc sbb sub xor push pop popa insl jae addb lods mov mov fsubp jmp idiv add adc sbb sub xor push push pop bound jne orl rol rcr (bad) jmp clc incb adc push and xor cmp pop arpl jbe (bad) mov scas mov rol (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fsubp in repnz incb and xor cmp pop fs jbe orl scas mov ret aam loope in hlt cli add or sub cmp inc dec push pop pop imul test stos mov mov fsub jmp or adc xor inc inc dec push pop pusha insw jae jg mov mov mov fsubp jmp idiv add adc sbb cmp dec dec push pop arpl jbe (bad) mov scas mov rol aam loopne in repz add or sub cmp inc dec push pop pop imul test mov mov mov fucom ljmp push sbb sub xor push pop bound jne addl rol rcr (bad) in repnz incl and inc dec push push pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp jo jl mov scas mov ret aad loop out cmc sti add push adc and sub dec push pop pop data16 jb jg mov mov mov fsubp ljmp push sbb cmp dec dec push pop bound jne addl rol rcr (bad) in repnz incl or sbb and inc dec push push pop fs ja orl scas mov ret aad loope out hlt cli add or sub dec push pop pusha data16 jb jg mov mov mov fcomp in icebp clc incb adc sub insl js lea mov out sti push or sbb and inc dec push pop pop imul test test fsub out cli add adc sub cmp pop pop outsb jns (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call mov fcomp in icebp clc incb adc sbb cmp dec dec push pop bound jne addl rol rcr (bad) in repnz incl cmp pop pop imul test stos mov mov fsub jmp or adc xor push pop popa insl jae addb lods mov mov fsubp ljmp push sbb cmp dec dec push pop bound je addl mov (bad) out repnz incl and xor cmp pop arpl jbe (bad) mov scas mov rol rcr loopne in repz incl and xor cmp pop bound jne (bad) mov scas mov rol rcr loopne in repnz incl ss (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp dec dec push pop popa push xchg lods mov mov fsubp jmp idiv add adc sbb cmp dec dec push pop popa insl je addb lods mov mov fucom ljmp push sbb sub xor push pop popa insl jae addb stos mov mov fucom ljmp sub ds dec push push pop fs ja orl scas mov ret aad loope out hlt cli add or sub cmp inc inc dec push pop pop gs jb jle mov mov mov fucom jmp or adc xor inc inc dec push pop pusha data16 jae jg mov mov mov fucom ljmp push sbb sub xor push pop insb jae jg mov mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fucom jmp or adc and cs inc inc dec push pop pusha data16 jae jg mov mov addr16 xchg popf test mov sti pop adc sub inc dec pop arpl xchg int3 fsub lock pop adc sub addr16 mov rcr out decb adc push pop addr16 lea aad in stc add inc dec push arpl xchg int out decb push and push mov fsubrp cmc add dec pop gs mov aam in clc add sbb pop data16 mov rcr jmp add sbb xor dec push arpl xchg rcr add testb sbb xor dec push bound xchg fsubr hlt add sbb xor dec push arpl mov xlat loop clc add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call and bound (bad) lea int3 (bad) loopne cmc decl push and xor push jg xchg lahf stos mov leave rcr jmp and bound (bad) lea int jecxz clc add inc dec push pusha push jg xchg mov aad jmp add push and inc dec push pusha imul xchg mov aam jmp sbb push pop gs test ret loop testl cmp push popa imul xchg sahf test mov lock add cmp push pop addr16 mov lret jmp sbb push pop push pushf test mov lret jmp sbb xor inc push pop data16 test ret int loop testb adc dec push pusha push jg xchg sahf test mov repnz (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl adc xor inc dec pop outsl jns mov int3 (bad) loopne cmc add adc sub ds push pop addr16 xchg (bad) into fsub in clc add inc dec push pusha imul xchg sahf test mov icebp sti push adc and pop outsb jns lea int3 (bad) loope testb push and inc dec pop arpl test ret int loop clc add and arpl (bad) lea fsub hlt decl adc dec push pop data16 test ret int in stc add sbb cmp push popa imul xchg lahf stos mov enter icebp cld push adc and xor inc dec pop bound orl call sbb xor push pop outsl jp mov int loope testb sbb sub pusha push jge xchg pushf cmpsb mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp out stc add aas dec push pop imul mov (bad) rcr out cli add sbb sub pusha push jle xchg pushf cmpsb mov (bad) into fsub in testl xor dec push pop data16 xchg ret int loope cmc decl adc push pop arpl (bad) mov leave rcr call sbb xor inc dec pop arpl orl leave aam call sbb xor inc dec pop arpl orl repnz push adc and push popa insb ja mov lret (bad) loopne cmc decl adc sub cmp push pushf cmpsl mov (bad) rcr in clc add inc dec push pop push popf test mov repnz push adc push pop push pushf cmpsl mov (bad) rcr out cli add cmp pop bound (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl ror loope cmc decl adc sub dec push pop push fwait movsl mov (bad) iret ftst out clc add aas dec push pop push popf cmpsl mov (bad) rcr in stc add sbb sub inc dec push pop imul mov (bad) rcr in cli add sbb pop outsl jp (bad) fwait cmpsb mov (bad) in stc add sbb cmp push bound mov lret jmp sbb pop bound orl repnz add cmp arpl (bad) lea ror fucomip repz adc xor inc dec pop arpl orl cmc add push and xor push pushf cmpsb mov (bad) into (bad) in testl xor dec push pop data16 test ret int loope testb adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) aas dec push pop push pushf cmpsb mov (bad) in stc add inc push pop gs test (bad) rcr out sti push adc xor inc push pop outsl jns lea fucompp repz adc sub cmp outsl jp mov rcr in sti push adc and pop bound mov rcr out cld pop adc cmp pop outsb js mov leave aam jmp sbb xor inc dec pop bound mov rcr in sti add sbb pop arpl (bad) mov leave rcr jmp sbb push popa imul xchg popf cmpsl mov (bad) jecxz testl xor jo test ret loop testb adc dec push pop addr16 test ret loopne hlt decb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call sbb push pop outsb js mov ror loopne repz adc dec pop outsb js mov lret call sbb push bound mov leave aam jmp sbb xor inc dec pop outsb js mov lret aad ljmp xor jno test ret int jecxz clc add and xor dec push pusha push jg xchg sahf test mov repz or push sub ds push pop push popf cmpsl mov (bad) rcr out sti add cmp push popa imul xchg sahf test fucom icebp sti push adc and cmp push bound mov rcr out sti add cmp pop bound mov enter icebp cld push adc and cmp pop bound mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov repz add adc sub dec push pusha push jle xchg popf test mov lock add cmp push bound orl lret aad jmp push sub ds push pop push fwait movsl scas mov in testl xor dec push pop addr16 xchg (bad) into fsub in clc add and ss dec push pop push pushf cmpsb mov (bad) jecxz clc add and xor dec push pop push fwait cmpsb mov (bad) into (bad) in stc add sbb sub inc dec push pusha push jg xchg sahf test mov repnz push adc and pop arpl test ret loope testb sbb xor dec push pop push jg xchg lahf test fucomip hlt decb adc push pop addr16 xchg mov aad jmp sbb push pop gs (bad) mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call int loop testb adc inc push pop data16 test ror loopne hlt decb adc xor jo test ret int loope cmc decl adc sub cmp jo test ret loope testb adc dec push pop addr16 xchg ret loopne hlt decb adc xor inc dec pop bound mov (bad) rcr out cli add sbb cmp push pusha push jg xchg sahf test mov out clc add and xor addr16 test ret into fsub in testb adc dec push pop addr16 test ret int loope cmc add adc sub cmp push pop outsl jns lea leave rcr call sbb xor inc dec pop outsb jns lea ret int loop testl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp pop imul mov leave rcr call sbb xor push pop gs test ret int jecxz stc add inc dec push popa imul xchg mov fsub in testl xor imul mov (bad) into fsub in testl xor push jle xchg sahf test mov lock add sbb sub popa imul xchg lahf test fsub lock add cmp push popa imul xchg lahf test fsub lock add sbb cs inc dec pop bound test (bad) rcr call sbb cmp arpl (bad) mov lret jmp add and xor push orb (bad) rcr out cli push add sbb xor inc dec pop outsb js lea lret aad jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push decb adc xor inc dec pop data16 test ret int loop testb adc dec push pop addr16 xchg ret into fsub in testl xor dec push pop push popf cmpsl mov (bad) rcr in stc add sbb sub pusha push jg xchg sahf test mov icebp sti push adc xor inc push pop data16 test enter repz or push sub cmp je mov (bad) rcr out or and inc dec push pop imul mov (bad) rcr in cli add inc dec push popa insb ja mov enter icebp sti add aaa inc dec push pusha push jg xchg lahf stos mov leave rcr out cld push adc and push popa imul orl jmp sbb push pop data16 test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc iret (bad) out testl xor dec push pop addr16 xchg ret int loope cmc decl adc push pop gs test ret int loop testb adc inc push pop data16 test ror loopne hlt decb adc xor inc dec pop arpl orl repz pop adc xor inc push pop outsb js mov lret aad jmp sbb pop arpl orl jmp decl adc sub cmp jo test ret int loope testb adc dec push pop push popf test mov lock add sbb sub bound (bad) mov ret into fsub in clc add inc dec push popa imul xchg mov aad jmp sbb push pop data16 (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl test ret into fsub in clc add push and xor addr16 xchg (bad) in stc add inc dec push pop imul mov out clc add and inc dec push pusha push jg xchg popf test mov lock add cmp push pop imul mov (bad) into fsub in clc add and xor jb xchg (bad) rcr out cld push adc and pop outsb jns (bad) cltd mov xlat loope cmc decb adc push pop outsb js lea int loope testb adc sub cmp push pop outsl jns mov lret (bad) loopne hlt decb add dec push pop data16 test ret int loope testb adc sub cmp jno test ret loope testb adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp xor imul mov (bad) rcr out cli add sbb sub inc dec push pop imul mov (bad) rcr out std pop adc daa xor push pop addr16 mov int loop testb adc dec push pusha push jle xchg sahf test mov out cli add sbb pop outsb jns (bad) cltd mov (bad) loop testb adc sub cmp outsl jns mov int3 (bad) loopne hlt decb adc push pop outsb jns mov lret aad ljmp xor inc push pop data16 test ror loopne hlt decb adc xor jno test ret loope cmc add adc sub cmp push pop outsb js mov enter icebp sti add cmp push pusha imul xchg sahf test mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fsub icebp sti add cmp push pop imul mov in testl xor push lcall jecxz clc add and xor addr16 xchg (bad) into fsub in testb adc dec push pop addr16 xchg (bad) out cld push adc and cmp pop outsb js mov int3 (bad) loope testb adc dec push pop addr16 xchg (bad) rcr out sti add cmp outsb jns mov into fsub in clc add inc dec push pop push pushf add (bad) icebp cld push adc and pop bound mov enter icebp sti add cmp push popa imul xchg sahf test mov lock add cmp push popa imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl mov icebp cld push adc xor inc push pop gs xchg (bad) into (bad) in stc add inc dec push pop imul mov out stc add sbb sub inc dec push pop imul mov (bad) jecxz stc add inc dec push pop push pushf cmpsb mov (bad) rcr call sbb pop bound mov leave aam jmp push sub cmp outsl jp (bad) cltd mov (bad) loopne hlt decb adc push pop outsl jns lea lret add testb adc dec push pop addr16 xchg (bad) rcr in stc add sbb sub inc dec push arpl test (bad) in sti add cmp pop arpl (bad) mov xlat jecxz cld or sbb xor inc dec (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall outsb js lea int jecxz testl xor push fwait movsl scas mov in testl xor jno xchg (bad) into fsub in testl xor dec push pop outsl jns lea int3 xlat loope cmc add adc sub cmp push pop outsl jp mov int3 (bad) loope cmc add adc sub dec push pop addr16 xchg (bad) into fsub in testb push and xor jo test ror fucomip repz or sbb xor add pop addr16 xchg ret loope cmc decl adc sub cmp push pop outsl jp mov lret aad jmp sbb push pop outsl jns mov int3 (bad) loopne cmc decl adc push pop outsl jns lea lret (bad) loopne (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push decb adc push pop data16 xchg (bad) in cli add sbb sub bound mov lret call sbb xor jno xchg (bad) jecxz clc add inc dec push popa imul xchg mov aam call sbb pop outsl jns mov int jecxz clc add aas dec push pop push fwait cmpsb mov (bad) iret (bad) in clc add and ss dec push pusha push jle add rcr out sti add cmp pop bound mov lret ljmp cmp push pop data16 xchg (bad) jecxz testl xor imul xchg sahf test fsub icebp sti push nopl cmp pop arpl (bad) mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov icebp cld push adc and cmp pop arpl (bad) mov leave rcr call sbb cmp pop arpl (bad) mov lret call sbb xor inc dec pop arpl (bad) lea lret call sbb xor inc push pop data16 test ret int loope testb adc dec push pop push lcall in sti push adc xor inc push pop push mov (bad) loopne add add push and dec pop outsl jns lea lret aad jmp sbb push pop push jle xchg popf test mov testl jl xchg lahf stos mov int loop imull ds push pop push lcall lret rcr fsubp jmp clc incl and xor cmp pop arpl jne (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl test mov rol rcr loopne in repz incl and inc dec push push pop fs ja orl scas mov ret aad loope out hlt cli add or sub cmp inc dec push pop pop imul test stos mov mov fsub jmp or adc and sub dec push pop pop data16 jb jg mov mov rol rcr (bad) in repnz incl and xor cmp pop arpl jbe (bad) mov scas mov rol aam loope out hlt sti add or sub dec add pusha data16 jb jg mov mov mov fsub jmp or adc xor inc inc dec push pop pusha insl jae jg mov mov mov fsubp ljmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl adc sbb sub xor push pop popa outsb je addb lods mov rol rcr (bad) in repnz incl and xor cmp pop arpl jbe orl scas mov ret fsub lock push adc and popa insl jns mov lret ljmp pop push and xor inc push pop addr16 (bad) mov scas mov ror aam loope in hlt cli add or cmp push bound mov rcr jmp add sbb xor ja mov int3 (bad) loope in testl xor pop gs jb jg mov mov mov fsubp jmp idiv add adc sbb inc push pop gs xchg mov repz nopl pop outsl ja (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call into xlat jecxz clc add inc push pop bound test ret int3 fsub out cli add adc sbb cmp pop arpl ja orl scas mov ret aad loope out hlt cli add or sub dec push pop pusha data16 jae addb rol rcr loopne in repz add or sbb es cmp inc dec push pop pop imul test stos mov mov fsubp ljmp push sbb cmp dec dec push pop bound test mov repz add pop and cs push pop popa push mov scas mov rol aam loope in hlt cli add or sub cmp inc dec push pop pop imul test lods mov mov (bad) jmp clc incb adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall and xor cmp pop arpl jbe orl scas mov ret aad loop out stc add aaa inc dec pop arpl jp xchg lcall in stc add sbb push pusha imul xchg mov (bad) jecxz cli add nopl dec push pop pop imul test stos mov mov fsubp jmp clc incb adc sbb ds dec push push pop arpl jbe orl mov mov fsub jmp or add sbb ds pop pusha insw jae addb scas mov rol rcr loopne in repz add or sbb and inc dec push pop pop imul test mov rol rcr loopne in repz incl and inc dec push push pop arpl jbe (bad) mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp rol aam loope in hlt cli add push adc and cs inc inc dec push pop pusha insl jae addb lods mov rol rcr loopne in repz add or sub dec push pop popa insl je addb lods mov rol rcr (bad) in repnz incl and inc dec push pop pop gs jb jg lea mov (bad) out hlt cli add or sub dec push pop pop data16 jb add mov rol rcr loopne in repnz incl or sbb and inc dec push push pop imul test stos mov mov fsubp jmp idiv add adc push and xor ds dec push push pop imul test stos mov mov fsubp jmp clc incb adc sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp pop fs ja test stos mov mov fucom ljmp push sbb sub ss dec dec push pop bound je (bad) mov scas mov ror aad loop out idiv add unpckhps and das xor push pop bound jne (bad) mov scas mov ret aad loop out hlt cli add or sub dec push pop pusha insl jae addb stos mov mov fchs out repnz add or sbb and inc dec push push pop fs ja test test enter loop out cmc sti add push adc and sub dec push pop popa insl je addb scas mov rol rcr loopne in repz add or cs outsb jp mov leave aam jmp decb adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp push pop pusha data16 jae jg mov ror jecxz lock add movhps sub xor push pop bound je orl in clc add sbb xor dec push popa insl jns mov rcr out cld push adc xor inc dec pop outsb jns mov int3 rcr (bad) jmp clc incb and xor cmp pop arpl js nop lcall (bad) in repnz or dec push pop fs orl lret call push sub push jp nop fwait mov fucom out cli pop push sbb cmp push pop popa push mov scas mov ror aam loope out hlt cli add or sub dec push pop pusha insw je addb lods mov mov jmp adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall pop es cmp inc dec push pop pop imul test stos mov mov fucom ljmp pop sbb cmp dec dec push pop bound jne (bad) mov scas mov leave (bad) fucom hlt add adc sub gs addb lods mov mov fsubp ljmp push sbb cmp dec dec push pop bound jne jl mov scas mov rol aam loopne in repz incl or sbb and inc dec push push pop arpl jbe orl mov mov fucom jmp or adc xor inc dec dec push pop gs test (bad) iret (bad) fsub icebp std push bndstx xor dec push pop imul cmp ja xchg enter lock or and cs push pop popa (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp jae addb lods mov rol rcr (bad) in repnz incl and xor cmp pop bound jne (bad) mov scas mov ror aad loope out hlt cli add or sub cmp dec pusha outsb je addl mov (bad) in repnz incl and inc add pop data16 jae jg mov mov mov fsubp jmp idiv add adc push and inc dec push pop pop imul test test leave iret aad loop out cmc sti add push adc and sub dec push pop pusha insl jae addb lods mov mov (bad) jmp clc incb adc sbb cmp dec push push pop arpl jbe orl scas mov ror aad loop out cmc sti (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl or adc and das xor push pop popa push mov scas mov rol rcr loopne in hlt cli add push adc and cs inc inc dec push pop popa push xchg lods mov rol rcr loopne in hlt cli add push adc and sub dec push pop pusha data16 jae jg mov lods mov mov (bad) in repz add or sub dec push pop pusha data16 jae addb lods mov mov (bad) jmp clc incb and xor cmp pop arpl jne (bad) mov scas mov ret aad loop out cmc sti add push adc and cs inc inc dec push pop pusha data16 jae addb lods mov mov (bad) in repnz add or sub cmp inc dec push pop pop imul test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall mov (bad) lret fucom ljmp push sbb sub ss pop arpl jbe orl scas mov ret aad loop out cmc sti add push adc xor push pop pusha insl jae addb lods mov mov fsubp ljmp adc pop es cmp inc dec push pop pop imul test test lret rcl fsubp ljmp push sbb sub dec push popa insb jb xchg int fsubrp cmc decl adc and push push pop imul test ret rcl fucom ljmp push sbb cmp pop bound ja mov leave aam out sti push adc sub inc dec pop fs test enter hlt decb adc sub cmp jb xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp lret rcl fucom ljmp pop sbb cmp dec dec push pop bound jle xchg fwait cmpsb mov (bad) rcr loop repnz adc sub dec push pop addr16 test ret loope clc add ss dec pop gs jbe mov (bad) rcl loope stc add inc inc dec push pop pusha insw jae addb lods mov rol aam loopne in hlt cli add or sub dec push pop pusha insw jae addb lods mov ret iret (bad) in repz add or sub dec push pop pop gs jb jg mov mov mov fucom ljmp pop push and xor cmp pop arpl ja orl mov cmc add adc inc push pop arpl jbe orl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov fsub jmp or adc xor push pop bound jne (bad) mov scas mov ret aad loop out cmc cld add adc sbb sub ss dec dec push pop bound jne (bad) mov test leave iret aad loop out cmc sti add push adc xor outsl jp nop pushf cmpsl scas mov leave aad call sbb push pop imul lods mov jmp add and pop outsl jnp mov mov mov fsubp jmp idiv add adc sbb cmp pop fs jbe test stos mov mov fsubp jmp clc incl and inc dec push pop pop gs jb jg mov ret (bad) fsub jmp or adc xor inc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl push pop popa outsb je orl rol aam loope out hlt cli add unpckhps sub xor push pop bound jne (bad) mov lods mov rol rcr loopne out hlt cli add or sub dec push pop pusha insl jae addb lods mov mov (bad) in repnz incl or sbb es cmp inc dec push pop pop imul test stos mov mov fucom ljmp pop sbb cmp dec dec push pop arpl jbe orl scas mov ret lret fsubp ljmp pop sbb cmp dec dec push pop bound jne (bad) mov scas mov rol aam loope out hlt sti add unpckhps sub xor push pop popa insl je addl rol rcr (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp out repnz incl and inc dec push pop pop imul test stos mov mov fucom ljmp push sbb add pop arpl jbe test test enter loope out cmc sti add push adc and cs inc inc dec push pop pusha insl je addb lods mov rol rcr loopne in repz incl and inc dec push pop pop imul test stos mov mov fucom ljmp pop sbb cmp pop fs ja test test leave iret (bad) fsub jmp or adc xor push pop popa push mov scas mov ror aam loop out cmc sti add push adc xor inc inc dec push pop pusha insl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl xchg lods mov rol rcr loopne in repnz incl and inc dec push pop pop imul xchg lahf add fucomp repz push push and pop bound mov mov mov in cld pop adc and cs push pop popa push mov scas mov enter icebp sti push adc pop gs mov int3 fsub lock add cmp pop gs xchg (bad) rcr in stc incl and inc dec push push pop fs ja test stos mov int3 rcr jmp push and aaa inc dec push popa insb js mov int3 xlat loop repnz or sbb push pop insb je mov lret jmp sbb push popa insl js xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp (bad) (bad) out repnz incl and inc dec push push pop arpl jbe add stos mov mov fsub jmp bndstx das ss dec dec push pop bound jne (bad) mov scas mov ror aam loop out cmc sti add push adc and cs inc inc dec push pop popa insl jae addb lods mov mov fsubp repnz pop adc xor jne orl mov fsubp ljmp push sbb sub ss dec dec push pop bound jne orl rol aam loopne in repz add or sbb es cmp inc dec push pop pop imul test test leave iret aad jecxz out idiv add unpckhps and cs inc dec dec push pop bound je orl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp rcr jmp push and ss dec pop popa imul xchg add (bad) jecxz cmc add and xor dec push pop imul xchg pushf mov aam loope out hlt cli add or sub dec push pop popa outsb je addl rol rcr loopne in repz add or sub cmp dec push pop pop data16 jb addb lods mov mov fcomip cli add push adc xor inc inc dec push pop popa insl je addb scas mov ror aam loope out hlt cli add or xor cmp dec dec push pop bound jne addl rol rcr (bad) in repnz incl or sbb and inc dec push pop pop imul test stos mov mov fsubp jmp clc incl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall and inc dec push pop pop imul jg mov mov mov fsubp ljmp sbb and inc dec push push pop imul test stos mov mov (bad) jmp clc incb and xor ds dec push push pop fs js test mov inc pusha insb ja mov (bad) iret (bad) in testl xor inc dec pop popa imul xchg pushf test mov ret aad loope out hlt sti add or sub dec push pop pusha data16 jb jg mov mov mov fucom ljmp push sbb sub xor push pop bound jne orl rol rcr (bad) in repnz incl and xor cmp pop arpl jbe (bad) mov stos mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc leave iret aad loop out cmc sti add push adc and cs inc inc dec push pop pusha data16 jb jg mov mov mov fsubp ljmp pop sbb cmp pop arpl jbe (bad) mov scas mov rol aam loopne in repz incl or sbb es cmp inc dec push pop pop fs ja test stos mov mov fsub jmp or adc xor inc dec dec push pop popa outsb je addl rol rcr in testl xor jno xchg ret int jecxz cli add push adc and cs inc inc push pop addr16 mov mov rol rcr loopne in repz add or sub push pusha imul xchg add fsubrp cmc add inc push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall jne mov leave rcr jmp sbb xor push pop data16 jge mov scas mov ret aad loop out hlt sti add or sub push pop push jnp xchg popf test mov call pop daa xor dec push pop imul scas mov lock add cmp outsb jp nop pushf movsl lods mov int loop stc pop unpckhps and cs push pop popa push xchg lods mov mov (bad) jmp clc incb adc sbb cmp pop fs jbe orl ret (bad) fsub call or adc xor inc inc dec push pop pusha data16 jb jg mov mov mov add in icebp idiv add adc sbb cmp dec dec push pop popa push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl mov repnz adc and cmp inc dec push pop pop imul test stos mov mov fucom ljmp pop sbb cmp pop arpl jbe orl scas mov ret aad loop out cmc sti add push adc xor inc inc dec push pop pusha insl jae addb lods mov rol rcr (bad) in repnz incl xor push jg mov int3 fsub in testl cmp push popa outsb jne mov lret ljmp sub pop imul test stos mov mov fucom jmp or pop sbb cmp add push ja test stos mov mov fsubp jmp idiv add adc sbb cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl push pop arpl test stos mov mov fsub jmp or adc xor push pop pusha data16 jae addb lods mov rol rcr (bad) in repnz incb and xor ds dec push push pop fs jbe orl scas mov ret leave rcl fsub jmp or adc xor inc inc dec push pop popa insl jae addb lods mov mov fsubp jmp stc incl and xor ds dec push push pop fs jbe orl scas mov ror aad loope out cmc sti add push adc and cs inc inc dec push pop pusha data16 jae jg mov mov mov (bad) out repz add push adc and sub dec push pop pusha insw jae addb lods mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fsubp ljmp push sbb sub xor push pop popa outsb je addl rol aam loopne in repz add or sub cmp inc dec push pop pop imul test stos mov mov fsub jmp or push sbb sub xor push pop bound jne orl rol rcr (bad) in repnz incl es cmp inc dec push pop pop fs ja test test leave iret aad loop out hlt sti add or sub dec push pop pop data16 jb jg mov mov mov (bad) jmp clc incb add and inc dec push pop pop imul test stos mov mov fucom jmp or push sbb sub ss dec dec push pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp je addl rol aam loopne in repz add or sub cmp inc dec push pop pop imul test stos mov mov fsub call or pop push and inc push pop addr16 mov ret into (bad) icebp clc add and xor insw jae addb scas mov icebp clc incb adc push and xor cmp pop arpl jbe orl (bad) into (bad) out cli push adc xor dec push bound nop fwait cmpsb mov leave rcr jmp push sub cmp push pop data16 test (bad) int aad loope out hlt cli add or sub cmp inc dec push pop pop imul test ret in clc incl cmp pop fs js lea leave rcr jmp cld (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl adc sub aas dec push pop push orl ljmp xor inc push pop bound jne (bad) mov scas mov rol rcr loope in repz add or sub dec push pop pusha data16 jb jg mov mov mov fucom icebp std or pop sbb ds dec push pop pop fs ja test stos mov mov fsub jmp or adc xor inc inc dec push pop pusha outsb je addl ror fsubrp icebp std or sbb push pop fs jns mov lods mov rol rcr (bad) jmp stc incl and xor cmp pop arpl jbe (bad) mov scas mov rol aam loopne in repz incl or sbb and inc dec push pop pop fs ja (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jge mov scas mov ret (bad) fsub call pop push adc and sub dec push pop pop data16 mov (bad) rcr loopne repnz adc push pop imul scas mov lock pop adc and cmp push arpl addb mov fucom ljmp push sbb sub ss dec dec push pop bound jne (bad) mov scas mov ret aad loop lock add unpckhps and cs push pop popa insl jae addb lods mov mov jmp or push sbb sub xor push pop popa push xchg lods mov mov (bad) jmp stc incl and inc dec push pop pop imul test stos mov mov fnclex call (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cli add or sub dec push pop pop imul test stos mov mov (bad) jmp clc incl and inc dec push push pop arpl jbe orl scas mov ret leave iret aad loop out cmc sti add push adc and sub dec push pop pop imul test stos mov mov fucom ljmp sbb and xor cmp pop arpl jne (bad) mov scas mov ret aad loop out hlt cli add push adc das ss pop arpl jbe (bad) mov scas mov rol rcr (bad) in repnz incl or sbb and inc dec push pop pop imul test mov mov fucom ljmp push sbb sub xor push pop popa outsb je cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl cmpsl lods mov rol aam loope out hlt cli add or sub cmp inc dec push pop pop imul test stos mov mov fsub jmp or adc xor push pop popa insl je addl mov (bad) in repnz incb adc pop and inc dec push push pop fs ja orl scas mov ret aad loop out idiv add movhps sub xor push pop pusha outsb add (bad) mov scas mov ror aam loope in repz add or sbb and inc dec push push pop fs ja orl mov mov fsub call or adc xor inc inc dec push pop pop data16 jae addb mov (bad) rcr ljmp xor push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall jo orl enter loop out cmc cld add bndldx pop popa insl jae addb lods mov rol rcr (bad) in repnz add cmp pop gs mov (bad) icebp cld push adc sub push sahf test mov lock push adc xor ds dec push push pop fs ja orl scas mov ret aam loope repnz or sbb xor dec push pop popa imul mov rcr ljmp cmp bound test int3 fsub jmp push sub push jle xchg lahf lods mov (bad) lret rcl fsubp ljmp push sbb sub xor push pop pusha insl jae jg mov mov mov fsubp ljmp push sbb sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl insw jae addb lods mov mov fsubp jmp clc incb and xor ds dec push push pop arpl jbe orl scas mov rol aam loope in repz add or sbb sub inc dec push popa imul xchg mov rcr in icebp idiv add adc sbb sub xor push pop popa insl jae addb stos mov mov fsubp jmp testl pop push and xor cmp pop bound jne orl rol rcr (bad) in repz incl or sbb and inc dec push push pop arpl jne (bad) mov lods mov ror jecxz repnz or push sub inc dec push bound jg xchg mov rcr ljmp xor inc push pop push cltd movsb mov enter (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp icebp std or pop push and xor cmp pop arpl jbe (bad) mov scas mov rol aam loopne in repz incl or sbb and inc dec push push pop fs ja test stos mov mov fsub jmp or adc inc dec push push pop bound jne (bad) mov lods mov rol aam loopne in repz add or sbb and inc inc dec push pop pusha insl jae addb lods mov mov fucom ljmp push sbb sub xor push pop popa insl je addb lods mov mov (bad) jmp clc incb adc push and xor ds dec push push pop arpl ja orl scas mov ret aad loope out cmc sti add push adc and cs inc inc dec push pop pusha data16 jae addb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl lods mov mov fsubp jmp idiv add adc sbb ds dec push pop pop imul test stos mov mov fsubp jmp clc incb and xor cmp pop fs ja orl scas mov ret aam loope out cmc sti add push adc and sub dec push pop pop data16 jb add lahf cmpsb lods mov rol rcr (bad) in repnz incl and inc dec push push pop fs jbe orl mov mov fsub jmp or adc xor push pop popa push mov scas mov rol aam loopne in hlt cli add or sub cmp inc dec push pop pop fs ja orl mov mov fnclex call pop or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall and sub cmp dec push pop pop data16 jb jg mov mov mov fsubp jmp clc incb adc sbb cmp pop arpl jbe (bad) mov scas mov rol aam loopne in repz add or cs inc inc dec push pop pusha data16 jb jg mov mov mov xlat fsubp ljmp push sbb cmp pop arpl jbe orl scas mov ret aad loop out idiv add adc sub inc dec push pop push sahf test fsub out cli add sbb sub aaa cmp pop bound jp xchg pushf test mov fcomp in icebp clc incb adc push and inc dec push pop arpl test leave aam jmp add sbb pop imul mov lret aad (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp ljmp xor dec push pop addr16 xchg mov mov (bad) jmp clc incb and xor cmp outsb jbe mov (bad) int out testl aaa inc dec push popa insb js mov (bad) rcr call sbb cmp push popa add orl int loop clc add sbb sub xor push pop popa push xchg lods mov rol rcr (bad) jmp clc incl and xor ds dec push push pop imul test mov enter in lock add adc sbb sub xor push pop popa outsb je addb lods mov rol aam loopne in repz add or sbb and inc dec push pop pop imul test ret iret fsub out stc add sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp daa xor bound jne (bad) mov scas mov rol rcr loopne in repnz incl and inc dec push push pop arpl ja test stos mov mov fucom jmp or adc xor inc inc dec push pop add insl je addb lods mov rol rcr (bad) jmp clc incb adc sbb dec push pop outsb jns nop popf movsb stos mov leave rcr out decb adc xor inc push pop outsb ja nop cwtl mov (bad) in clc add and cmp push push bound addl rol aam loope out cmc sti add unpckhps sub xor push pop popa outsb je addb lods mov rol rcr loopne in repz add or sub cmp inc dec push pop pusha data16 jae jg mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp int fnop out repz incl or sbb and inc dec push push pop fs ja test stos mov rol rcr loopne in repz add or sub cmp inc dec push pop pop imul test movsl stos mov mov fsubp jmp idiv add adc sbb sub xor push pop bound jne (bad) mov scas mov ret aad loop out cmc sti add push adc xor inc inc dec push pop popa insl je addb lods mov mov (bad) in repnz incb and xor cmp pop arpl jbe orl scas mov ret aad loop out cmc sti add push adc and sub dec push pop pop data16 jb jg mov mov mov fucom ljmp push sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp pop bound jne addl mov loopne in hlt cli add or sbb es cmp inc dec push pop pop imul test stos mov mov fsub jmp add and xor cmp pop arpl jbe orl scas mov ret aad loop out cmc sti add push adc and cs inc pop outsl jp adc xor inc dec pop bound mov rcr jecxz clc add pop sub cmp jo test ret loope cmc decl adc dec pop bound mov (bad) rcr in testl xor outsb js mov enter popf enter sub scas mov ljmp das cmp pop arpl (bad) mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl sub mov mov in clc add inc dec push pop push jle xchg popf cmpsl mov (bad) rcr in cli add sbb sub inc dec push pop (bad) (bad) adc lods aam cmp fucomip adc imul orl in stc add aas dec push pop push fwait movsl scas mov ljmp data16 orl enter out clc add pop sub cmp outsb js mov (bad) rcr pop cs test fucomip repz pop adc push popa imul xchg popf cmpsl mov (bad) into fsub in testb adc sub cmp pop bound mov rcr in testl xor outsb js mov push aas jbe xlat jecxz dec jne (bad) in sti add aaa inc dec push pop imul mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec xlat loope cmc decb adc xor inc dec push popa imul xchg pushf movsl mov (bad) into fsub in testb adc xor push pop outsb jns lea enter out stc add ss dec push pop push fwait movsl mov ret int loope cmc decl adc dec pop bound orl icebp cli add sbb sub pusha imul lahf test mov out stc add inc dec push pop imul mov jmp add adc sub cmp jo test ror loope cmc decl adc push pop outsb js mov lret call sbb pop bound jg xchg popf lods mov in testl xor push cltd mov xlat loope cmc decl adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl outsb js mov lret call sbb push bound mov rcr in testl xor aas dec push pop addr16 test ror loopne hlt incb adc pop arpl orl out sti add aaa inc dec push pop imul mov (bad) into fsub in testl xor outsl jns lea lret jmp sbb pop popa insb jbe dec je (bad) rcr in stc add test ret fucomip repz pop adc xor inc dec pop arpl mov dec push bound mov leave aam call sbb xor dec push pop addr16 xchg (bad) into fsub in testb adc scas mov lods in push dec js call (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl popa insl jns xchg pushf test jecxz cli add cmp jne mov int add out cs jb xchg (bad) rcr call push sub ds push pop data16 xchg (bad) iret (bad) cmp cwtl ror in stc add sbb pop push orl cmc add and cmp pop imul mov cmc add inc push pop push mov dec ja fcoml inc mov dec pop arpl orl int3 aad ljmp xor jb mov (bad) iret (bad) out cli add cmp outsb jns (bad) cltd mov (bad) loop testl aaa inc dec push bound orl int jecxz stc add sbb cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall outsb js mov int3 (bad) loopne cmc decl adc sub push jle mov lret aad ljmp xor dec push pusha push jg xchg sahf test fucom icebp sti push adc xor inc push pop outsl jns mov iret (bad) out stc add sbb cmp pop arpl orl int3 xlat loope testl xor inc push pop data16 xchg (bad) rcr out sti push adc xor inc push pop addr16 xchg (bad) rcr in cli add cmp pop outsl js lea into (bad) out clc add inc dec pop arpl test (bad) rcr in sti push adc and pop outsl jp (bad) lcall in cld pop adc xor inc push pop outsl jp nop fwait cmpsb mov (bad) in stc add cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call addr16 xchg (bad) rcr out sti push adc sbb push pop push pushf test mov hlt decl adc daa outsl jl xchg pushf cmpsl mov or and pop push cwtl mov aad ljmp sar or and inc dec pop arpl test rcr call sbb push pop push mov add xchg int cmp scas out push lea aaa inc dec push arpl xchg xlat loop stc add sbb pop addr16 xchg int sbb cmp gs xchg (bad) rcr out cld pop adc xor push pop data16 test (bad) cmc sbb jae stos mov int3 xlat loop clc add sbb xor dec push pusha imul cwtl movsb scas mov cmc add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp cmp pop push orl in cli add aas dec push bound test ror fsubp jmp clc incb adc sub dec push pop imul xchg mov into fxam repnz pop adc and xor inc dec push popa insb js mov mov testb sbb cmp pop push (bad) mov fsub lock or and cmp popa insl jns nop pushf cmpsl mov enter hlt decb adc push pusha imul fwait cmpsl mov (bad) rcr call and imul fwait cmpsb mov leave aad in clc add sbb xor dec push popa insl jns xchg pushf cmpsl mov repnz ds outsb test and push insb xchg and push outsb mov inc pop jp scas leave in push cs popa jns test xlat icebp or ds jb movsb mov cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall mov inc popa jnp mov in sbb mov cmp outsb mov es pop je test xor sbbb cmp mov aas pop je stos (bad) adc scas leave in sbb dec imul imul jb cmpsb mov inc pop jb cmpsb rcr adc inc pusha jnp mov out sbb push push fwait mov call insl mov es pop jbe stos (bad) push xor jge mov out sbb dec pop js stos mov sub inc push arpl lea and inc push data16 scas (bad) (bad) adc cmp arpl lahf mov ss gs cmpsl mov xor jle mov in sbb dec data16 mov in sbb add xchg scas (bad) fcomip adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl je movsl mov cmp movsb rcr or xchg call bound pushf scas (bad) loope adc inc pop imul or xor push out add js scas ror jmp adc dec pop js cmpsb mov shl add xor jge mov out sbb dec bound lret in sahf xor int3 call imul loop rcrb shr add mov es jo mov sbb sbbb clc adc lods (bad) loope adc lcall push insb xchg and movsl mov inc pop ja test sub jp scas enter xor sbbl cmp mov and push outsl mov and pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl cmpsl (bad) fnop adc pop js lods (bad) loop adc xchg mov out sbb mov ljmp mov sub js stos (bad) loopne adc inc pop ja lods enter xor jge mov jmp insb xchg and mov scas fcomip or mov adc inc push fs mov adc inc pop add xchg movsb mov into fsubr clc push adc xor dec pop push iret out pop xor jle mov jmp sbb lahf mov xor jp test pop sub jae nop sahf lods mov add sbb cmp arpl lea loope add jnp scas lret stc adc inc push outsl mov adc ds jno xchg stos (bad) loopne or push imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ds outsl test adc dec pop je cmpsb rcr cmc add pop sub jae (bad) popf stos mov decl sbb arpl lea loope std or sub inc push popa outsl jge cltd cmpsl mov fdiv or xor pop push xchg jmp das cmp adcl in add pop sub jae test (bad) cmc add and ds pop push ret or lcall xor pop imul mov call cs push gs (bad) popf stos mov decb sub inc push pop insl jnp xchg movsl mov into fsubr clc push adc xor pop imul lret (bad) cmc add push sub dec push fs mov out std or sub inc push pusha outsb jnp xchg movsl mov iret fsubrp sti or cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp scas enter adc mov and movsl mov aaa push imul or cmp mov add sbb cmp bound mov fsubrp sti or and imul mov out add pop sub dec pop addr16 xchg lahf lods mov add adc sub jb mov std or push pusha outsb jl cwtl movsl mov iret fucomp clc pop push and inc dec pop imul lret (bad) testb cs pop data16 (bad) popf stos mov decl push bound mov loope std or sub jnp xchg movsb mov iret fucomp stc push adc pop imul lret hlt add push sub dec push gs nop sahf lods mov decl push popa outsl jge cltd cmpsl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc rcr in sti or and imul mov call cs pop push mov int jmp pop adc pop push xchg call das cmp test xlat in add push sub dec push fs (bad) popf stos mov add add sub dec push fs (bad) pushf stos mov decb sbb ss push pusha outsb jl cwtl cmpsb mov rcr in sti or es push pop insb jp xchg movsb mov into fsubr clc push adc xor dec pop push scas mov add sbb gs nop sahf lods mov decl push popa outsl jge fwait test (bad) shl out std or daa ss push pusha outsb jl cwtl cmpsb mov rcr in stc pop adc pop imul mov call cs pop data16 nop sahf lods mov add sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call jno lea fucomip sti or xor pop imul movsb mov int jmp cs pop gs (bad) popf stos mov decl push pusha outsb jge cwtl cmpsb mov rcr in sti or and inc dec pop imul mov call and cmp test xlat in add sbb cmp popa outsl jle lcall cli or and inc dec pop imul movsb mov shr add aaa inc pop jbe test fdiv add jns stos rcl in cli or es pop jns lods leave fsub cmc add pop sub jae nop sahf lods mov push es mov cmp mov sub outsl xchg adc inc pop jae sahf lods mov decb sub inc push pop insl jnp xchg movsb mov int jmp das ds jb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall push xor jle stos (bad) push pop cmp jle mov xlat lock ss imul adc push insl mov push xor mov push and inc dec pop imul lret (bad) cmc add adc xor adcl in add sbb cmp fs lea loop adc imul mov call cs adcl sbb jnp stos ret sub mov ss push jmp push jmp and push jo movsl mov ds jae test xor jle mov in pop xor jle mov (bad) in pop pop cmp test adc inc pop imul mov ljmp dec pop imul mov jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push add dec pop addr16 xchg lahf lods mov add push sub dec push gs (bad) popf stos mov add sbb arpl lea loope std or daa ss push popa outsl jge cltd cmpsl mov rcr in sti or and test (bad) testb add ds pop push lods mov add sbb cmp arpl mov out std or daa xor jl xchg movsl mov iret fucomp stc pop adc xor dec pop push lods mov add sbb arpl lea loopne cld or daa xor jnp xchg movsb mov into fsubr testl (bad) nop sahf lods mov add sbb arpl lea loop decb sbb xor jp xchg movsb mov int jmp das cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call (bad) jecxz decl push pusha outsb jl cltd cmpsl mov rcr in cli or and inc dec pop push xchg (bad) cmc add push sub dec push fs lea loope cld or es push pop insl jnp xchg movsl mov into fsubr clc push add and inc dec pop push xchg out add push sub dec push fs lea loope decb sub jnp xchg movsl mov into fsubr clc push adc das cmp adcl in add sbb aaa inc push popa outsl jge cwtl cmpsb mov rcr in sti or and push xchg out add pop sub dec push fs mov out std or es push pop insl jnp cwtl cmpsb mov iret fucomp stc pop adc pop imul jecxz pop xor jl scas (bad) fcomip add and cmp popa jp lods (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc fsubr sti or and insb jp xchg movsb mov into fsubr clc push adc das inc pop jns mov push sub pop je xchg movsb mov push and inc dec pop imul mov jmp cs pop data16 xchg mov out add push sub dec push arpl lea sbb fs mov out std or daa xor jp xchg mov jmp cs pop data16 (bad) popf stos mov decb push popa outsb jl cwtl cmpsb mov iret fucomp stc pop adc pop push lods mov add sbb cmp popa outsl jge cltd cmpsb mov rcr in sti or and push xchg out add push sub dec push fs lea loopne cld or xor pop imul movsb mov int jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp cs pop gs (bad) popf stos mov or pop je xchg mov out add push sub inc push arpl mov out cld or xor pop imul mov fsubr testl orl or daa xor jp xchg mov call sub jb lea loopne or pop insl jg mov in sbb inc push gs mov out std or es push pop imul mov call sub dec push fs lea loopne cld or daa xor jp xchg mov call sub jb mov loopne cld or xor pop imul mov add sbb arpl lea loopne cld or es push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall jns xchg mov jmp das cmp pop data16 nop lahf lods mov add sbb cmp bound mov fucomip sti or and pop insl jnp xchg movsb mov into fsubr clc push adc das cmp test xlat in add sbb bound mov fucomip sti or es dec pop imul mov call das cmp (bad) nop sahf lods mov decl push pusha outsb jl cwtl cmpsb mov iret fucomp stc pop adc pop push lods mov add push sub dec push fs lea loopne cld or es push pop imul mov call cs push gs xchg sahf lods mov add sbb aaa inc push popa outsl jge cwtl cmpsb mov rcr in cli or pop imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec fsub hlt add sbb fs mov out std or daa xor jp xchg movsb mov int jmp and aas dec pop imul lret cmc add pop sub jb mov out std or daa xor jp xchg movsb mov int jmp das cmp (bad) nop sahf lods mov add sbb cmp gs scas lret pop xor arpl mov hlt or jp xchg movsb mov into fsubr clc push adc xor pop push xchg or sbbl adc inc pop imul lret hlt add sbb bound mov out std or es push pop imul mov jmp arpl xchg mov out add sbb bound mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp out cld or es dec pop imul mov out add pop sub jb lea aad icebp decl push popa outsl jge cwtl cmpsb mov rcr jmp pop adc xor dec pop addr16 xchg lahf lods mov decl push pusha outsb jl xchg movsl mov into fsubr stc pop adc pop push lods mov add push pusha outsb jl cwtl movsl mov iret fsubr clc push adc das cmp adcl in add sbb cmp je mov sbb insl jp xchg movsb mov into fsubr clc push adc xor dec pop addr16 xchg lahf lods mov add push sub dec push fs lea loope std or daa xor jp xchg movsb mov into fsubr clc push adc xor dec pop addr16 xchg mov out add push sub dec push fs mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp sub push imul add and cmp pop data16 xchg mov call sub jae (bad) popf stos mov decl push pusha outsb jl cwtl cmpsb mov rcr in stc pop adc pop imul int jmp das cmp adcl in add sbb cmp bound mov testl test fsub repz sbb fs mov loop decb sub jnp xchg movsl mov iret fucomp stc or and aas dec pop imul lret hlt add push sub dec push arpl lea loope std or es push pop insb jp xchg mov jmp push adc xor dec pop push lods mov add sbb cmp bound mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc rcr in sti or and push jl cwtl cmpsb mov rcr jmp pop adc pop imul lret hlt add sbb arpl mov loopne cld or and insb jnp xchg movsb mov into fsubr testl dec pop addr16 xchg lahf lods mov add sbb aaa inc push popa outsl jge cwtl cmpsb mov rcr in sti or and imul mov out add pop sub jnp aaa mov sub pusha jns lods (bad) loop push xor jge mov out sbb addr16 fwait mov call push in add xchg and push outsl mov daa inc pop jne stos (bad) loop pop xor jge mov jecxz pop xor sbbb cmp mov sub mov jmp outsb mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl sub js stos (bad) fnop adc inc pusha jp scas leave in sbb mov ljmp movsb mov inc pop jne stos (bad) loopne sbb dec gs add ds je test fdivrp adc mov ljmp test xor jg mov in push push cmp sbbb es push outsl xchg adc inc pop jno mov adc mov xor jl stos ret (bad) or (bad) lcall inc pop jo sahf mov in adc inc pop jno mov adc mov sbb inc pop js cmpsl mov xor fs stos ret or aaa dec addr16 lods (bad) fdiv or cmp sbbb sub push outsl mov sbb dec gs scas (bad) fdivp or test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec call popa js cmpsl mov xor jl stos ret or cmp sbbb and push imul ds insl test sub pop jno mov adc inc pop jno mov pop das inc pusha jl lods ret (bad) or cmp jl stos ret or aaa dec data16 stos ret (bad) or cmp adcb and push imul (bad) ds insl test daa ds insb test sub outsb xchg adc inc pop jo sahf mov in adc inc pop jno mov sbb dec popa js cmpsl mov xor bound cmpsl mov xor bound test fdivr push cs pop jbe movsl mov xor xchg stos rcr or aaa dec data16 mov loope adc inc pop jno mov pop das (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl js cmpsl mov xor fs stos ret fcomi or cmp xchg pop das inc pop ja test fptan or cmp test (bad) ds insl test adc inc pop je movsl mov xor jp stos rcr or ss gs lods ret fcomi or aaa dec addr16 scas (bad) (bad) or cmp sbbb adc inc pop jb mov pop das inc pop jbe movsl mov cmp pushf mov loop adc inc pop jno mov pop cs pop jne cmpsb mov xor lods (bad) (bad) (bad) ds insl test sub push outsb xchg adc inc pop jo sahf mov jecxz adc inc pop jno movsb mov xor jns test (bad) in add xor jns test sbb xchg stos rcr push pop ss fs stos ret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fyl2x or cmp sbbb and lcall inc push outsb xchg adc inc pop jno mov sbb dec arpl stos (bad) loopne adc mov ss push sti adc inc pop jb mov pop xor jp lods ret (bad) or cmp sbbb adc pop jae mov sbb dec pusha ja cmpsb mov xor bound test push xor test mov lock add cmp push popa imul xchg lahf test fsub lock add cmp push pusha push jle xchg pushf cmpsb mov (bad) in stc add inc dec push pop imul mov (bad) rcr in clc add and xor push lcall loop testb adc inc push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall jo test ret loope cmc decl adc sub cmp push pop outsl jns lea lret ljmp xor jo test ret loope testb adc sub ds push pop addr16 xchg (bad) rcr call sbb sub cmp push pop addr16 xchg ret int loope testb adc dec push popa imul xchg lahf test fucomp clc add sbb cmp arpl orl int3 (bad) loopne cmc decl adc push pop data16 test (bad) iret (bad) out stc add cmp pop bound mov leave rcr out cld push adc and pop bound orl out sti push adc and pop arpl (bad) mov leave rcr jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall push pop data16 xchg ret int loope cmc decl adc dec push pop addr16 mov (bad) rcr in stc add inc dec push pop push jle xchg pushf cmpsb mov (bad) loop testl xor imul stos mov leave rcr out cld push adc and pop bound mov leave aam call sbb push pop outsl jns lea lret aad ljmp xor dec push pop addr16 xchg (bad) iret (bad) in testl xor push pushf cmpsb mov (bad) jecxz stc add inc push pop push sahf test mov lock push adc xor push pop data16 xchg lahf lods mov in testb adc sub cmp push pop data16 xchg (bad) in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) out stc add sbb cmp push popa imul xchg sahf test mov lock add cmp bound (bad) lea lret jmp sbb push pop outsb jns lea int loope in testl xor push lcall loopne cmc decl adc sub cmp push pop outsl jns lea lret jmp sbb xor inc dec pop arpl orl out cli add sbb sub inc dec push pusha push jle xchg popf cmpsl mov (bad) rcr in stc add inc dec push pop push jle xchg pushf cmpsb mov (bad) into fsub in testl xor imul mov (bad) into fsub in testb adc sub cmp push pop outsl jns mov lret aad ljmp xor dec push pusha push jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl mov repnz push adc xor jo test ret int loope testb adc sub inc dec push pop push jle xchg lahf test fsubrp repnz pop adc sub cmp jb xchg ret int loop testb adc sub dec push pop imul mov repnz pop adc and pop arpl (bad) mov enter lock add cmp push popa imul xchg popf test mov lock add sbb sub pusha push jg xchg lahf stos mov leave aam jmp and xor imul mov (bad) iret (bad) in testl cmp push popa imul xchg sahf test mov out stc add inc dec push pop push jle xchg popf cmpsl mov (bad) rcr out cli add sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl pop bound mov enter lock add cmp push bound mov leave rcr jmp sbb xor inc dec pop arpl outsl jp mov int3 (bad) loope testb adc dec push pop push fwait movsl scas mov in testl xor push sahf test mov testb adc dec push pop imul cwtl mov fsub in testb push sub inc dec pop bound mov enter icebp cld push adc xor inc dec pop addr16 test (bad) into (bad) in testl ss dec push pusha push jle xchg pushf cmpsb mov (bad) iret (bad) out stc add sbb sub pusha push jg xchg sahf test mov out stc add sbb sub pusha imul xchg popf cmpsl mov (bad) in clc add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl and xor dec push pop addr16 xchg ret int loope cmc decl adc sub cmp push pop outsl jns lea add aad jmp sbb pop bound orl repz pop adc and pop data16 test ror fucomip hlt std pop adc xor inc push pop outsl jns mov lret aad jmp sbb push pop outsb js lea lret call sbb cmp push pusha push jg xchg lahf stos mov leave aam call push sub cmp jo test (bad) rcr in stc add inc dec push pusha push jg xchg mov rcr call sbb xor push pop data16 test ret int jecxz testl xor imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl out cli add cmp push bound mov leave aam call adc xor inc dec pop arpl orl repz pop adc xor push pop outsl jns lea lret call sbb pop data16 xchg (bad) rcr in cli add sbb sub popa imul xchg lahf test fsub lock add sbb cmp push bound mov lret jmp sbb push pop gs test ret int3 (bad) loope testb adc sub cmp jo test ret loope cmc decl adc push pop gs test ret loope testb adc sub cmp jno test ret int loop testb adc inc push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall jb xchg (bad) into fsub in testl cmp add jl nop fwait cmpsl mov int in cli add sbb xor inc dec pop outsb js mov (bad) out clc add and xor push pushf cmpsl mov (bad) rcr out sti add aaa inc dec push pusha push jle xchg pushf cmpsb mov (bad) iret (bad) in testl xor dec push pop addr16 test (bad) rcr in stc add inc dec push pop imul mov enter repz pop adc xor inc dec pop outsb js mov enter repnz pop adc xor inc dec pop bound mov enter lock add sbb sub pusha push jge xchg fwait movsl scas mov out clc add and xor push fwait movsl scas mov in testb adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp sub imul add in stc add aas dec push pop push fwait movsb scas mov ljmp xor push pop data16 test ror loopne cmc add adc dec push pop addr16 xchg (bad) into (bad) in testl aaa inc dec push popa imul xchg sahf test mov icebp sti push adc xor inc push pop outsl jns lea iret (bad) out stc add sbb cmp pop arpl (bad) lea lret aad ljmp xor jo test (bad) into fsub in testb adc inc push pop gs test ret int loope clc add aas dec push pop push lcall loopne testb adc sub cmp push pop outsb js mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec rcr out cli add sbb sub inc dec push pop addr16 xchg ret int loope cmc decl adc xor inc dec push popa insb jbe mov rcr out stc add inc dec push pop imul scas mov jmp sbb push popa imul xchg popf cmpsl mov (bad) in clc add adc inc push pop outsl jns lea leave rcr out cli add sbb sub inc dec push pop push lcall loop cmc add adc dec push add jb xchg ret into fsub jmp decl adc sub cmp push pop fs ja mov leave aam call sbb pop bound mov leave rcr call sbb xor inc dec pop bound mov in std pop adc xor inc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl bound mov rcr out cld pop adc xor inc dec pop bound mov rcr out sti add cmp push popa imul xchg lahf test fsub icebp cld push adc and cmp push pusha push jle xchg pushf cmpsb mov (bad) in cli add aaa inc dec push pusha push jle xchg popf cmpsl mov (bad) jecxz testl xor dec push pop outsw jns lea lret call sbb sub pop imul cmpsl mov (bad) jecxz clc add and xor addr16 xchg (bad) iret (bad) out clc add ds push pop addr16 test ror fsubrp repnz pop adc and push popa imul xchg pushf cmpsb mov (bad) in stc add sbb sub inc dec push pop push lcall (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec (bad) loopne hlt decl adc sub cmp push pop outsb js mov int loop testb push and xor push lcall loop testb adc dec push pop addr16 xchg (bad) in clc add sbb cmp pop bound mov int loope cmc decl adc dec pop outsb js lea lret ljmp xor inc push pop outsb js lea ror fsubrp repnz pop adc and push popa imul xchg sahf test mov icebp sti add cmp push pusha push jle xchg pushf cmpsl mov (bad) in clc add inc dec push arpl test ret loopne cmc add adc sub cmp jo test (bad) rcr in stc add inc dec push pop imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl mov (bad) rcr in cli add cmp push popa insb ja mov lret jmp sbb pop bound orl out cld pop adc xor inc dec pop arpl orl out sti add cmp bound orl jmp sbb pop arpl orb enter repnz or sub ds push pop imul xchg mov (bad) loopne testb push and xor dec push pop addr16 xchg aam call sbb xor inc dec pop arpl (bad) mov int3 (bad) loope testl xor dec push pop imul mov (bad) into fsub in testb push and xor push fwait movsl scas mov out stc add sbb sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl inc dec push pop push lcall loop testl xor dec push pop push lcall loopne hlt decb adc dec pop outsb js mov leave aam jmp sbb push bound mov (bad) rcr out cld push adc and push popa imul xchg sahf test mov out cli add sbb sub inc add push jle xchg popf cmpsl mov (bad) rcr out cli add sbb cmp push popa imul xchg sahf test mov out clc add and ss dec push pop imul mov (bad) into fsub in testl xor dec push pop push fwait cmpsl mov (bad) rcr in cli add sbb pop outsb js lea int3 (bad) loopne cmc add adc sub ds push pop addr16 xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec (bad) out cli add cmp pop gs test ret loop testl xor dec push pop addr16 xchg (bad) in clc add aas dec push pop push fwait movsl scas mov in testl xor jo test ret loopne hlt decl adc dec pop outsb js add ret loop stc add sbb sub popa imul xchg mov rcr call sbb pop arpl (bad) lea lret call sbb xor inc dec pop outsb js mov int3 (bad) loopne hlt decl adc sub cmp jo test ret loope testb push and xor imul mov (bad) rcr in clc add aas dec push pop imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jge xchg pushf cmpsb mov (bad) into fsub in testl xor push pushf cmpsl mov (bad) in stc add sbb sub popa imul xchg lahf stos mov lret jmp add sbb cmp pop data16 mov aam call sbb xor pop push popf cmpsl mov (bad) rcr in add add cmp jae mov (bad) into fsub in testl xor dec push pop addr16 test ret loope cmc add adc sub ds push pop addr16 xchg ret int loop testb adc dec push pop imul mov out stc add inc dec push pop push lcall loope cmc decb adc push pop outsb js lea leave rcr out sti add cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl push popa imul xchg lahf test fsub icebp sti add cmp push pusha imul xchg popf test mov out stc add inc dec push popa imul xchg popf cmpsl mov (bad) rcr in stc add inc dec push pop push jle xchg pushf cmpsb mov (bad) rcr in clc add cmp bound mov enter lock push adc and pop bound mov leave rcr call sbb xor push pop outsl jns mov int3 (bad) loope testb push and xor inc pop gs xchg (bad) rcr out cld pop adc push pop push xchg fwait mov rol aam loope in hlt cli add nopl xor inc dec pop gs test mov icebp sti pop adc daa xor dec push pop fs test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl (bad) rcr in cld pop push sbb aaa inc dec pop gs orl lock add adc sbb sub ss dec push push pop arpl jbe orl mov mov fsub call or adc and cs dec push pop bound jg xchg fwait mov ror aam loope in hlt cli add or sub cmp inc dec push pop pop data16 jae addb lods mov mov (bad) in repnz incl and inc dec pop arpl (bad) mov int loopne lock or adc xor push pop popa outsb je addb lods mov mov fsubp jmp idiv add adc sbb cmp pop arpl jbe orl scas mov ror aam loope in hlt cli add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl or sub cmp inc dec push pop pop imul test stos mov mov fucom ljmp xor inc push pop arpl jg xchg sahf stos mov lret in testb sbb sub ds push pop push (bad) (bad) xchg add ftst lock add push sbb cmp inc dec push pop pop gs jb jle mov mov mov fsubp jmp clc incb and inc dec push pop pop imul test stos mov mov fsubp jmp idiv add adc push and inc dec push pop pop gs mov scas mov ret leave rcl fsub jmp or push sbb cmp pop imul test stos mov mov loopne in repz add or sub dec push pop pusha data16 jae jg mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall mov fnclex call or adc ss dec dec push pop arpl jbe orl mov mov fucom ljmp sbb and inc dec add pusha insw je addl rol aam loope in hlt cli add push adc and cs push pop arpl ja test lods mov mov loopne in repz add push adc and sub dec push pop popa outsb je orl ret aad loop out cmc cld add unpckhps sub ss dec dec push pop arpl jbe (bad) mov scas mov (bad) lret fsubp jmp clc incb adc push and xor ds dec push push pop fs ja test stos mov mov (bad) in repnz add or sbb daa sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl pop bound jbe orl scas mov ret (bad) fsub jmp or push sbb cmp pop fs ja test stos mov mov (bad) in repnz incl and inc dec push pop pop imul xchg mov rol rcr (bad) in repnz incl or sbb es cmp dec push pop pusha insl jae addb lods mov rol rcr loopne in repz add or cs push pop popa outsb je orl ror aad loope out hlt sti add unpckhps sub ss pop fs jbe orl mov mov fsubp ljmp pop sbb aas inc push pop data16 xchg ret in cmc add push sub cmp push pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp outsb je addl xlat in repnz incl and inc dec push pop pop fs ja orl int loop stc add sbb xor dec pop arpl xchg lret aad in clc add inc dec pop bound orl lret rcr fsubp jmp clc incb adc sbb cmp pop arpl jns xchg fwait mov (bad) jmp sti pop adc xor dec push pop gs test mov testb adc dec push outsb jne mov into fcomp jmp and inc dec push push pop arpl jbe orl mov mov fucom ljmp push sbb cmp pop arpl ja test stos mov mov lock add adc sbb sub ss (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp dec dec push pop bound jbe orl mov mov fucom ljmp push sbb sub xor cmp pop arpl jbe (bad) mov mov out stc add cmp push bound jbe orl scas mov ret aad loope out hlt sti add push adc and sub dec push pop popa insl jae addb lods mov mov fsubp jmp idiv add adc sbb cmp dec dec push pop bound jbe (bad) mov scas mov ret aad loope out cmc sti add push adc and cs inc dec push bound jg xchg mov int in stc add sbb sub dec push pusha insb js mov enter hlt cld pop adc daa xor dec push pop imul popf movsb stos mov mov fucom ljmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl adc push and xor cmp pop arpl ja test stos mov mov fcomp in icebp idiv add adc push and xor cmp pop arpl jbe orl mov loopne in repz incl and inc dec push push pop imul test test leave iret aad loop out cmc sti add push adc xor push pop popa outsb je addb lods mov rol rcr (bad) jmp clc incb and xor ds dec push push pop arpl jbe orl mov mov fsubp ljmp sbb and inc dec push pop pop imul test stos mov mov fsub jmp or adc aaa cmp pop arpl ja test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp int3 rcr loopne out hlt cli add or sub xor push pop bound jbe (bad) mov scas mov ror aad loop out hlt sti add or sub dec push pop pop gs jb jle mov mov rol rcr loopne in repz add or sub dec push pop pusha outsb jne orl fsub jmp decl adc sub cmp push pop arpl orb (bad) jecxz testl xor push pop outsb js mov (bad) rcr in clc add ds push pop data16 orl lret aam call sbb cmp push pop imul scas mov ljmp xor inc dec pop arpl orl in stc add aas dec push pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp jp mov lret aad jmp sbb xor inc dec pop bound mov rcr out sti push adc and cmp push bound mov rcr jecxz clc add and xor dec push pop data16 test ret fucomip cmc decl adc daa xor inc dec pop outsb js mov mov repnz add aaa inc dec push pop imul mov (bad) into fsub in idiv or sbb dec pop arpl orl jmp sbb push pop addr16 test ror loope cmc decl adc sub cmp push pop data16 test ret int in clc add aas dec push pop addr16 test ror fucomip repz pop adc and push popa push jle xchg pushf cmpsl mov (bad) into fcos (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp out clc add and xor push fwait movsl scas mov jmp decl adc dec pop arpl (bad) mov enter icebp sti add cmp push popa imul xchg popf cmpsb mov (bad) jecxz testl xor dec push pop data16 test add int loop testl xor dec push pop addr16 xchg (bad) into (bad) icebp cld pop adc xor push pop addr16 mov (bad) rcr out cld pop adc xor inc dec pop outsl jp mov (bad) lock add sbb sub inc dec push pop imul mov (bad) rcr in cld push adc and cmp pop bound mov (bad) rcr in stc add sbb cmp push bound mov enter icebp cld add cmp push pusha push jle (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call (bad) rcr out std pop adc and push popa imul popf cmpsl mov (bad) jecxz clc add and xor dec push pop data16 xchg ret int loope cmc decl adc push pop outsb js lea lret aad ljmp sub cmp dec pop arpl orl out sti add cmp pop bound mov rcr out cli add sbb sub inc dec push pop push pushf cmpsb mov (bad) into fsub in testb push and xor push lcall jecxz clc add and xor addr16 xchg (bad) iret (bad) in clc add and xor dec push pusha imul xchg sahf test (bad) lock add cmp push bound mov lret jmp add adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp xor imul mov (bad) out cld push adc and pop outsl jns lea int3 (bad) loopne hlt decl adc dec pop arpl orl icebp cld push adc and dec pop arpl orl lret jmp sbb xor inc dec pop arpl orl testb adc dec push pop imul mov (bad) in stc add sbb sub inc dec push arpl orl lret aad jmp sbb push pop outsb jns mov int3 xlat loopne cmc decl adc sub cmp push pop outsl jp mov lret aad jmp sbb push pop gs test ret into fsub in testb adc sub dec push pop addr16 xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) out clc add sbb sub pusha push jle xchg pushf cmpsl mov (bad) in cli add sbb sub inc dec push pop push jle xchg popf cmpsl mov (bad) rcr in sti pop adc daa xor jno xchg mov clc add and ss dec push pop je lea lret (bad) loopne cmc decl adc push pop push popf cmpsl mov (bad) jecxz clc add and xor dec push pop addr16 xchg (bad) into fsub in testl ss dec push pusha push orb enter lock add aaa inc dec pop bound mov lret aad jmp sbb xor push pop gs test mov repnz push adc and pop bound orl in clc add and xor push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall int loopne hlt decb adc xor inc dec pop bound orl out sti add cmp push popa imul xchg lahf test mov out cli add cmp push popa imul xchg popf test mov out cli add sbb cs inc dec push popa imul xchg sahf test mov out stc add inc dec push bound mov leave rcr call sbb push pop push fwait movsl scas mov out stc add sbb pop arpl test ret into fsub in testl cmp push popa insb jbe mov enter lock add aaa inc dec push pusha imul xchg mov rcr out cld pop adc and pop arpl orl out cli add cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl push pusha imul xchg lahf test fsub lock add sbb sub pusha push jg xchg lahf stos mov leave aam call sbb dec push pop data16 test ror loopne hlt decb adc sub ds push pop addr16 test ret loopne hlt decb adc push pop outsl jns lea lret (bad) loope cmc decl adc dec push pop push fwait movsl mov (bad) into fsub in testl xor dec push pop data16 xchg ret int loope testb push and xor dec push pop push jle xchg pushf cmpsl mov (bad) rcr out cli add sbb sub popa imul xchg lahf test fucom icebp sti add cmp pop data16 test ret into fxam out cli pop adc sub aas dec push popa insb ja lea lret aad ljmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl adc xor dec push pusha insl ja mov lret call sbb pop outsb js lea cltd movsb scas mov ljmp xor push pop gs test ret int loope testb push and xor dec push pop push fwait movsb scas mov jmp add push and xor dec push pop push fwait cmpsl mov (bad) rcr in cli add sbb sub pusha imul mov lock add sbb sub popa imul xchg lahf test fsub lock add aaa inc dec push popa imul xchg popf cmpsl mov (bad) jecxz clc add and xor addr16 xchg (bad) into fsub in testl xor dec push pop push fwait movsl mov (bad) iret (bad) out clc add inc dec push pop addr16 xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jecxz clc add and xor push sahf test mov call sbb xor push pop outsl jp nop lcall out sti add cmp pop outsl jns mov int3 (bad) loope testb push and aaa inc dec push bound (bad) cltd movsb scas mov out stc add sbb sub inc dec push pop imul mov (bad) rcr in cli add cmp pop bound (bad) mov lret jmp sbb xor inc push pop outsl jns mov int3 xlat loop testb adc sub dec push pop data16 xchg (bad) in clc add inc dec pop arpl orl int3 (bad) loopne cmc decl adc sub ds push pop addr16 xchg enter repnz pop adc xor inc push pop outsl jns (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl ret loop testb adc sub add dec push pop push pushf cmpsb mov (bad) rcr in clc add inc dec push popa imul xchg lahf test fsub lock add sbb sub popa insb jbe mov lret jmp sbb xor inc dec pop arpl (bad) lea lret aad jmp sbb push pop data16 test (bad) in stc add inc dec pop arpl test (bad) rcr in cli add sbb cmp pop outsb js lea (bad) icebp sti add cmp push bound mov int loop testl ss dec push pop imul mov (bad) rcr in cli add sbb sub bound mov leave rcr call sbb xor inc dec (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall insl js mov ret loop cli add sbb sub pop imul mov (bad) into fsub in testl xor jno test ret int3 (bad) loopne testb push and xor addr16 xchg ret int loope testl xor outsl jns mov lret aad ljmp xor inc dec pop outsb js mov enter repnz push adc and pop bound mov leave rcr call sbb pop bound mov enter repnz push adc and pop arpl orl int3 (bad) loopne testl xor push orb int3 (bad) loope cmc decl adc sub cmp push pop data16 xchg (bad) rcr in lock (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl adc sub push jg xchg sahf test mov icebp sti add cmp bound mov lret aad jmp decl push and xor push fwait movsl mov (bad) iret ftst out clc add sbb sub popa imul xchg mov rcr call sbb xor inc push pop outsb jns lea lret aad ljmp xor outsb js mov int3 (bad) loopne cmc decl adc dec push pop addr16 xchg (bad) in clc add sbb sub popa imul xchg mov aam jmp sbb push pop gs xchg (bad) into fsub in testl xor push lcall loop testb adc dec add imul xchg sahf test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec rcr out cld push adc xor inc push pop outsb js lea lret aad ljmp xor jno xchg (bad) iret (bad) in clc add and inc dec push popa imul cwtl mov fucom repnz or sub dec push pop push orb (bad) out stc add inc dec push pop push jle xchg mov xlat loop testb adc xor add fs mov scas mov rol aam loopne in repz incl and xor cmp pop bound jne orl rol aam loopne in repz incl and inc dec push push pop arpl jno jge mov scas mov ret aam loope in hlt sti add or sub cmp inc dec push pop pop imul orl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp into aam loope in repz add or sbb and inc dec push pop pop imul test test enter loope in hlt cli add or sub dec push pop pop fs jb jle mov mov mov fsub call pop or sub dec push pop pop imul test movsl stos mov mov fucom ljmp push sbb sub xor push pop popa push xchg lods mov mov (bad) jmp clc incb adc sbb cmp dec dec push pop popa outsb je addl mov (bad) out repz add or sbb es cmp inc dec push pop pop imul test stos mov mov fsub call pop or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp sub dec push pop pusha insw jae jg mov mov mov fsubp jmp clc incl and xor cmp pop arpl jbe orl scas mov ret aad loop out cmc cld add unpckhps sub dec push pusha imul mov lret jmp std pop adc xor ds dec push add imul mov enter loope in hlt cli add or sub cmp inc dec push push pop data16 test (bad) rcr call and cmp pop imul mov out stc add sbb sub pop arpl orl mov (bad) out repnz incl and xor cmp insl jne mov int3 fsub in testb sbb sub dec push pop push orl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov lock push adc daa xor inc dec pop gs test ret iret fninit out stc push adc sub ss dec dec push pop arpl jbe (bad) mov scas mov ret aam loope in hlt cli add or sub cmp inc dec push pop pop imul test mov leave rcl add in icebp idiv add adc sbb cmp dec dec push pop popa push xchg lods mov rol rcr (bad) in repnz incl and xor cmp pop arpl jbe test (bad) rcr ljmp and cmp dec push pop bound jbe (bad) mov scas mov rol aam loopne in repz add or sbb es cmp inc dec push pop pop imul test stos mov mov fsub jmp or adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp xor inc inc dec push pop pusha data16 jae addb lods mov mov (bad) in repnz incl sub pop push orl lock add sbb sub pop imul mov out testb sbb xor pop fs jne orl rol rcr loopne in repz add or sbb and inc dec push pop pop gs jb jg mov mov mov (bad) jmp clc incb adc push and xor cmp add push ja xchg fwait mov ret aad loope out hlt cli add or sub dec push pop pop imul test test leave rcl fucom ljmp pop sbb cmp pop bound jne (bad) mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp int fnop out repz incl or sub cmp inc dec push pop pop imul test stos mov mov fsubp jmp clc incb adc sbb cmp pop arpl jbe orl add iret aad loop out cmc sti add push adc and sub dec push pop pusha insl jae orb mov mov fsubp ljmp pop sbb cmp dec dec push pop bound jne orl mov fsub call pop push adc and sub dec push pop pusha insw jae addb stos mov mov fsubp ljmp pop sbb cmp dec dec push pop popa push mov lods mov rol aad loope out hlt cli add or sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp dec push pop pusha insw jae addb lods mov mov fsubp jmp idiv add adc sbb cmp dec dec push pop bound jne (bad) mov scas mov rol aam loope out hlt add add movhps sub xor push pop bound jne (bad) mov scas mov ror aam loope in hlt cli add or sub cmp inc dec push pop pop imul test stos mov mov fsub call add movhps sub ss dec dec push pop bound jne (bad) mov scas mov rol aam loopne in repz add or sub cmp dec push pop pop gs jb jg mov mov rol rcr (bad) in repnz incl and xor ds dec push pop pop imul cltd mov xlat loop clc add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl adc dec push pop imul mov ror jecxz cli add and inc dec push push pop imul test scas mov int loop add add sbb xor js (bad) fwait cmpsb mov leave aam ljmp cmp push pusha push jg xchg popf test mov jmp clc incb adc sbb cmp dec dec push pop bound jne addl fsubrp add add adc and cmp pop outsl jbe mov iret (bad) fucom repz adc xor data16 mov (bad) out incb sbb cmp pop push mov scas mov rol aam loopne in repz add or sbb and inc dec push pop pop imul test stos mov mov fnclex (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call push and cs inc inc dec push pop pusha insl jae addb lods mov mov loopne in repz add or sbb and inc inc dec push pop pop gs jb jg mov mov mov loopne testb adc dec push popa insl jbe orl mov fucom ljmp push sbb sub xor push pop arpl jbe (bad) mov test leave iret aad loop out cmc sti add push adc and sub dec push pop pop data16 jb jg mov mov mov fsubp ljmp push sbb sub xor push pop popa push mov leave rcr jmp std add inc push pop arpl test leave rcr jmp decl push and pop imul cwtl lahf (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp (bad) fucom jmp or push sbb cmp dec dec push pop arpl jbe (bad) mov scas mov mov fsub jmp or adc xor push pop popa push xchg lods mov rol aam loopne cli add push adc xor inc inc dec push pop pusha data16 jae addb lods mov mov fchs out repnz incl and inc dec push pop pop imul test stos mov mov fsub jmp or adc and sub dec push pop pusha insw jae addb lods mov rol rcr loopne in hlt sti add push adc and sub dec push pop popa insl jae addb lods mov mov (bad) jmp clc incl and xor ds dec (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call pop arpl jne (bad) mov scas mov ret lret fsub jmp or add pop daa sub dec push pop pusha data16 jae addb lods mov mov (bad) jmp clc incb and xor cmp pop bound jne orl rol aam loope in repz add or sbb and sub cmp inc dec push pop pop imul test stos mov mov fsubp jmp idiv add adc sbb cmp dec dec push pop bound je addl rol aam loope in repz add or sbb es cmp dec push pop pop data16 jb jg mov mov mov fsub call or adc and sub dec push pop pusha data16 jae addb lods mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fcomp in icebp idiv add adc sbb cmp dec push push add push jbe orl scas mov ret aad loop out cmc cld add unpckhps and cs inc inc dec push pop pusha insw jae jg mov mov mov fucom ljmp push sbb sub xor push pop add outsl jbe (bad) mov scas mov rol aam loopne in repz incl es cmp inc dec push pop pop imul test stos mov mov out decb adc inc push pop data16 orl lret fsub jmp clc incb and xor inc push pop imul mov rol aam loope in hlt cli add or cmp jno mov xlat in cli pop adc pop arpl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl ror loopne testb push sbb sub pop imul test test leave iret aad loop out cmc sti add adc sub cmp push pop imul mov lret call sbb dec pop outsl jns nop pushf cmpsb scas mov out incl bndldx pop data16 (bad) mov (bad) fchs out repnz incl and inc dec push push pop fs ja orl ret fsubp ljmp push sbb cmp pop fs ja orl scas mov ror aam loope in hlt cli add or sub cmp inc dec push pop pop addr16 mov mov mov fsubp ljmp push sbb sub ss dec dec push pop bound je addl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov fndisi(8087 out hlt cli add or sub cmp inc dec push bound orl call push sbb cmp pop bound jne addl rol rcr loopne in repnz add or sbb and inc dec push pop pop imul test stos mov mov fsub call or adc and sub dec push pop pop data16 jb jg mov mov mov fucom ljmp sub imul stos mov iret (bad) loopne clc add adc inc push pop data16 mov leave rcr call pop sbb dec push pop popa push xchg lods mov rol rcr (bad) in repnz incb and sub cmp inc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl pop imul test mov mov (bad) jmp clc incl and xor ds dec push pop pop imul test stos mov mov fucom jmp or push sbb and xor cmp pop arpl jbe test stos mov mov fsubp jmp idiv add adc sbb cmp pop bound jbe orl scas mov ret (bad) fsub call or adc xor inc dec dec push pop popa push xchg scas mov rol rcr loopne in repnz incl or sbb and inc dec push push pop fs ja orl scas mov ret aad loop out cmc cld add unpckhps and cs inc dec dec push pop add jg mov mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in repnz incl and xor cmp pop arpl jbe orl mov mov fucom ljmp pop sbb cmp pop arpl add test stos mov mov fucom ljmp pop sbb cmp pop fs ja test stos mov mov fucom jmp or push sbb sub xor push pop bound jbe (bad) mov scas mov rol aam loope in repz add push adc and cs inc dec dec push pop popa outsb je orl rol rcr loopne in repz add or sbb and inc dec push pop pusha insw jae addb lods mov add (bad) int fnop out hlt cli add or sub dec push pop pusha insw (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl addb lods mov ror aam loope in hlt cli add or sub dec push pop pusha insl je orl rol into aam loope out hlt cli add push adc xor inc inc dec push pop pusha insw jae addb lods mov mov fsubp jmp clc incb and dec push bound orl leave aam jmp sti pop adc inc push pop popa outsb je orl shl ljmp sbb and xor ds dec push push pop fs jbe orl enter icebp decb push and imul ret jecxz stc add sbb cmp arpl jo test (bad) rcr (bad) in repnz incl and xor ds dec push push pop fs jbe mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call leave aam ljmp sub inc push push pop push orb (bad) rcr out cld pop adc add jbe xchg leave aad jmp push sub dec push pop pop data16 jb jg mov mov mov fsubp jmp idiv add adc sbb cmp pop bound jne orl rol (bad) loope stc add or sbb es cmp inc dec push pop pop gs jb jg mov mov mov fsubp jmp idiv add adc sbb cmp dec dec push pop bound jne orl (bad) rcr in sti push adc daa das cmp push pop pop push addb lods mov rol rcr loopne in repz incl or sbb and inc dec push pop pop imul test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call mov mov fucom ljmp push sbb sub xor push pop bound push jbe orl scas mov ret aad loop out cmc sti add push adc and cs inc dec dec push pop popa addr16 mov ret iret fsub jmp sbb pop gs test ror loopne testl xor insb js mov ror aad loope out hlt sti add push adc and sub dec push pop popa push mov scas mov ret aad loop out idiv add adc push and xor cmp pop arpl jbe orl stos mov mov ljmp sbb es cmp inc dec push pop pop data16 jb addb lods mov mov (bad) jmp clc incb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall and sub dec push pop pusha insw jae addb lods add fnop out repz add or sub cmp dec push pop pusha insl jae addb lods mov rol rcr loopne in repz incl or sbb daa sub dec push pop popa insl je addl rol aad loope out hlt sti add push adc and cs push pop popa outsb je addl ror aam jecxz lock add adc push and xor ds dec push push pop imul test stos mov mov push loop cmc decl adc and inc dec push push pop fs ja orl mov mov fsub call pop or sub dec push pop pop data16 jb jg mov mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc leave rcl fsub jmp or adc add push pop popa insl je addb lods mov mov fsubp ljmp push sbb cmp dec dec push pop popa insl je addb lods mov mov fsubp ljmp push sbb sub xor push pop popa insl je addb lods mov mov fsubp ljmp push sbb sub xor push pop pusha insw jae addb lods mov mov fsubp ljmp push sbb sub xor push pop popa outsb je addb lods mov mov (bad) jmp clc incb adc sbb cmp dec dec push pop popa push xchg lods mov mov fsubp ljmp sbb and cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl imul xchg add aad out incb cmp push push pop arpl jbe (bad) mov enter out repnz incl or sbb and inc dec push pop pop gs jb (bad) mov int3 xlat jecxz sti push adc sub jo xchg int3 xlat loope testl xor imul mov mov fnclex call or adc and das xor push pop popa insl je mov shl jmp sbb sub inc dec push pop imul mov vpaddusb lock or sbb xor inc push pop imul xchg fwait cmpsb mov enter out sti add cmp pusha data16 jae jg mov mov rol aam loopne in repz add or sbb es cmp inc dec push add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall insb jb jg mov mov mov jmp adc push and xor cmp pop arpl jbe (bad) mov scas mov ror aam loope in repz add or sub cmp inc dec push pop pop imul test stos mov enter repz or sub dec dec push arpl jge mov scas mov ret aad loop out cmc cld add unpckhps sub xor push pop popa outsb je addl rol rcr (bad) in repnz incl and inc dec push pop pop imul test stos mov mov fucom out stc add sbb sub xor push pop gs test (bad) rcl fsubp icebp incb adc xor outsl jp xchg add into fxam lock pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl sbb cmp pop data16 jg mov (bad) lret fsub jmp or adc xor inc inc dec push pop pusha insw jae addb stos mov mov (bad) in repnz incl and inc dec push push pop arpl jbe orl mov mov jmp stc incl es cmp inc dec push pop pop gs jb jg mov mov mov fsubp jmp clc incb and inc dec push pop pop data16 jae jg mov mov mov (bad) in repnz incl and inc dec push pop pop imul test stos mov mov fsubp jmp clc incb es cmp inc dec push pop pusha data16 jnp mov lods mov rol aam loope out (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push cld add push adc xor inc inc dec push pop pusha insl jae addb lods mov mov loopne in hlt sti add unpckhps sub ss dec dec push pop bound jbe test stos mov mov fsub ljmp pop sbb cmp dec dec push pop arpl jbe orl scas mov ret aad loope out hlt cli add push adc and cs push pop bound je addl ret (bad) fsub jmp or adc ss dec dec push pop bound jne orl rol rcr loope in hlt cli add or sub cmp inc dec push pop pop imul test stos mov mov fcomp in repnz incl es dec push pop pop gs jb jle mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call mov mov fucom ljmp pop sbb cmp dec push push pop arpl ja orl scas mov ret aad loop out cmc sti add push adc xor push pop popa insl je addb lods mov rol rcr loopne in repz add or sbb and inc dec push pop pop imul test mov mov (bad) in repz incl or sbb es cmp inc dec push pop pop imul test stos mov lret jmp cld pop adc and pop bound orl into aad loope out hlt cli add or inc dec push pop arpl ja orl stos mov mov loope cmc add adc dec push pop addr16 xchg leave aam in testl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl bound test ret int loope clc add inc dec push pusha imul xchg lahf test rcr fsubp jmp clc incb adc sbb cmp pop imul mov lret fsubrp cmc decl adc sub addr16 mov (bad) in sti add sbb sub inc dec pop pop imul mov in hlt decl push and dec push pop pusha insw jae jg mov mov mov fsubp ljmp pop push and xor cmp pop arpl jbe (bad) mov mov int fndisi(8087 out repz add or sbb and inc dec push add imul test stos mov mov fndisi(8087 out hlt cli add or sub cmp inc dec push push pop arpl jbe (bad) mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall aam ljmp sub pop pop data16 jae jg mov mov mov fsub jmp or adc and cs push pop pusha insw jae jg mov mov mov fucom ljmp adc xor inc inc dec push pop popa insl jae addb lods mov mov fucom ljmp adc cmp pop pusha imul xchg mov rcl loope testl imul xchg pushf test ror fucomip hlt add adc sub inc dec dec push pop push xchg cwtl lahf movsl stos mov mov fnop out repz add or sbb daa sub dec push pop pusha insw jae jg lea mov mov fsubp jmp clc incl and xor cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl push pop arpl jbe orl mov mov jmp clc incb adc sbb cmp pop arpl jbe orl scas mov ror aad loope out hlt cli add or sub dec push pop pusha insw jae addb lods mov rol rcr loopne in repz incl or sbb and inc dec push push pop fs ja orl scas mov ret lret fucom ljmp push sbb cmp dec dec push pop bound jne (bad) mov scas mov rol aam loopne in hlt cli add or daa cs inc dec dec push pop popa push mov scas mov ret aad loop out idiv add adc push and xor inc inc dec push pop pusha data16 jb jg mov mov rol rcr loopne in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push stc incl or sbb es cmp dec push pop pusha data16 jb addb lods mov rol rcr loopne in repz incl or sbb es cmp inc dec push pop pop gs jb jle mov mov mov fsubp in repnz incl and inc dec push push pop fs ja test stos mov mov fsub ljmp push sbb cmp pop arpl ja orl scas mov ret leave iret aad loop out cmc sti add unpckhps sub ss pop arpl jne (bad) add stos mov mov fucom ljmp pop sbb cmp pop arpl jbe orl scas mov ret aad loope out hlt sti add push adc xor push pop popa insl je addb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl scas mov ret aad loop out cmc cld add unpckhps sub ss pop arpl jbe test stos mov mov fucom ljmp pop push and xor ds dec push push pop fs ja test stos mov mov fucom jmp clc incb adc and cmp pop bound (bad) mov lret rcr ljmp das cmp inc dec push pop pop gs jb jg mov rcl fucom jmp or push sbb sub xor push pop popa insl add mov (bad) rcr jmp and addr16 xchg enter repz adc sub cmp jo xchg mov fucom jmp or push sbb sub xor push pop popa push cltd mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc lret xlat jecxz lock add sbb sub inc dec push pop imul xchg mov rcr in sti or sbb xor js mov mov (bad) out repnz incl and xor cmp pop bound jne (bad) mov scas mov ret leave iret aad loop out cmc sti add push adc and sub dec push pop pusha data16 jae jg mov mov mov fucom ljmp push sbb cmp dec dec push pop popa push (bad) mov scas mov rol rcr loopne in repnz incl and xor ds dec push push pop arpl jbe (bad) mov scas mov rol rcr (bad) in repnz incb and xor cmp pop arpl jne (bad) mov lods mov rol rcr (bad) in repnz (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc incb adc sbb cmp dec dec push pop bound je addl rol rcr (bad) jmp clc incb adc sbb cmp dec dec push pop popa push xchg lods mov mov (bad) jmp idiv add adc sbb cmp dec dec push pop popa outsb je addb lods mov mov fsubp ljmp push sbb cmp dec dec push pop popa push xchg lods mov mov fnop out hlt cli add or sub cmp inc dec push pop pop imul test test lret in repnz incl and xor cmp pop arpl jne (bad) mov scas mov ror aad loop out cmc sti add unpckhps and cs inc inc dec push pop pusha data16 jb jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl movsb stos mov mov fucom ljmp adc xor push pop pusha push mov lods mov rol rcr (bad) jmp idiv add adc sbb cmp dec dec push pop popa push xchg lods mov mov fsubp in repnz incl and xor cmp pop arpl jne (bad) mov lods mov rol rcr (bad) jmp clc incb or sbb and xor cmp pop bound jne (bad) mov lods mov rol rcr (bad) jmp clc incb adc sbb cmp dec dec push pop popa insl je addb lods mov mov fsubp ljmp adc xor inc inc dec push pop pusha data16 jb jg mov mov mov fsub jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sti add push adc and sub dec push pop pop imul test test enter loopne in repz incl or sbb and inc dec push push pop arpl jbe (bad) mov scas mov rol rcr (bad) in repnz incb adc sbb cmp dec dec push pop bound jne addl mov fsubp ljmp push sbb sub xor dec push pop bound je addl rol rcr (bad) jmp idiv add adc sbb cmp dec dec push pop bound je addb lods mov mov fsubp jmp idiv add adc sbb cmp dec dec push pop popa imul xchg lcall loope out testl sub dec push pop pop data16 jb jg mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov fucom ljmp push sbb sub xor push pop popa push mov lods mov rol rcr loopne in repnz incl and inc dec push push pop arpl jbe orl scas mov ret aad loop out hlt sti add push adc and sub dec push pop pop data16 jb jg mov mov mov fcomp in icebp clc incb adc sbb cmp pop arpl jbe orl scas mov rol aam loopne in repz add or sub cmp inc dec push pop pop imul test stos mov mov fsub jmp or adc xor push pop popa outsb je addl rol rcr (bad) jmp clc incb adc sbb cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl dec push pop bound jne orl rol aam loopne in repz incl or sbb and inc dec push push pop arpl jbe orl scas mov rol aam loope out hlt cli add or sub cmp inc dec push pop pop imul test test leave iret aad loop out hlt sti add add adc xor push pop popa insl je addb lods mov mov fsubp jmp idiv add adc sbb sub xor push pop bound jne addl rol rcr (bad) in repnz incl and inc dec push push pop fs ja orl mov mov fucom ljmp adc xor inc inc push pop imul test stos mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call fcomp in icebp idiv add adc sbb cmp dec dec push pop arpl jne (bad) mov scas mov rol aam loopne in repz add or sub dec push pop pop gs jb jle mov mov mov fucom jmp or adc xor push pop add outsl jbe (bad) mov scas mov rol aam loopne in hlt cli add or sub dec push pop pop gs jb jle mov mov mov fucom ljmp push sbb sub xor push pop popa outsb je addb lods mov mov (bad) in repnz incb and xor cmp pop arpl jbe (bad) mov scas mov rol aam loopne in repz add or sub cmp inc dec push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall imul test stos mov mov fsub jmp or adc xor inc inc dec push pop popa insl jae addb lods mov mov fsubp ljmp push sbb cmp dec dec push pop bound jne (bad) mov test enter loope out hlt cli add or sub dec push pop pop imul test stos mov mov fucom ljmp push sbb sub xor push pop popa outsb je addb lods mov mov fsubp in repnz incl and xor cmp pop arpl jbe (bad) mov scas mov rol aam loope in repz add or sbb es push popa imul test xlat loop hlt cli add adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp das xor push pop popa insl je addb lods mov rol rcr (bad) jmp clc incb and xor cmp pop arpl jbe (bad) mov scas mov rol aam loope out hlt cli add or sub add inc inc dec push pop pusha data16 jb jg mov mov mov fucom jmp or adc xor push pop pusha insl jae addb stos mov mov fucom ljmp push sbb sub ss dec dec push pop arpl test or popa jo lods mov call sbb xor inc dec pop outsl js mov enter icebp cli add aaa inc dec push pop fsubr cmc add and add jbe mov rcr jmp jns nop pushf cmpsl mov lret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in clc add sbb xor push arpl xchg pop imul (bad) rcr ljmp cmp jbe (bad) lcall in stc add inc dec pop push xchg mov fdivrp or and push lcall loopne hlt decb adc xor inc dec pop arpl (bad) mov lret call sbb sub pop imul scas mov in testl xor jno xchg daa cmp addr16 mov into (bad) out cli add sbb sub inc dec push popa insl jns (bad) fwait cmpsl mov enter sub push pop popa insl je addb cmpsl scas mov rol rcr loopne in repz incl or sbb and inc dec push pop pop imul test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall mov fucom jmp or adc xor push pop popa insl je addb lods mov rol rcr loopne in repnz incl and inc dec push push pop fs ja orl scas mov ret aad loop out cmc cld add unpckhps and das xor push pop popa insl je addl mov (bad) jmp clc incb adc pop and inc dec push pop pop fs ja orl scas mov ret aad loope out hlt sti add or sub dec push pop pop data16 jb jg mov mov mov fsubp add repz incl and inc dec push push pop arpl jbe orl mov mov fsub call or adc and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp sub dec push pop pusha data16 jb jg mov mov mov jmp add adc dec push pop imul mov lock add adc sbb cmp jb xchg scas mov rol rcr loopne in repz incl or sbb and push pop push lahf stos mov into ftst lock or sub inc dec pop gs test (bad) into ftst out stc add sbb cmp data16 jae jg mov mov mov fsubp ljmp pop sbb inc push pop popa insb jbe mov ret rcl loope clc add push adc dec pop fs je mov lret rcr call and cmp push pop addr16 mov (bad) rcr call adc xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call outsb je addb lods mov rol rcr (bad) in repnz incb and xor cmp pop arpl jne (bad) mov rol aam loope out hlt cli add or sub dec push pop pop gs jb jg mov mov mov fucom ljmp push sbb sub ss dec dec push pop bound js (bad) xchg mov fninit out cli add xor inc inc dec push pop pusha insw jae addb lods mov rol rcr (bad) in repnz incl and inc dec push push pop fs jbe add stos mov mov fucom ljmp push sbb cmp dec dec push pop bound je addl rol rcr (bad) in repnz incl xor inc push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall jne test lret (bad) jecxz hlt decl adc sub inc dec push pop addr16 xchg (bad) rcr out decb adc ds push pop imul test test leave iret aad loop out hlt sti add or sub dec push pop pop data16 jb jg mov mov mov (bad) jmp clc incb adc sbb cmp pop bound test lods mov mov loopne in repz add or sub dec push pop pusha data16 jae jg mov mov roll iret aad loop out idiv add movhps sub ss dec push push pop arpl jbe orl mov mov fucom jmp or pop push and xor ds dec push pop popa push mov scas mov ret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec aad loop out idiv add movhps sub ss pop fs ja orl mov mov fsubp jmp clc incb adc push and xor aas inc dec push pop pop data16 jb addb scas mov ret aad jecxz lock add adc sbb ds dec push pop pop imul test lods mov mov (bad) in repz incl or sbb daa sub dec push pop pusha insl jae addb lods mov rol aam loopne out cmc sti add unpckhps sub xor push push pop arpl ja test stos mov mov fucom ljmp push sbb ds dec push push pop fs ja orl mov mov fsubp ljmp pop push and xor aas inc dec push pop pop gs jb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jg mov mov rol rcr (bad) in repz add or sub dec push pop popa insl je addl rol aam loopne in hlt cli add or cs push pop bound jne (bad) mov mov mov fucom ljmp pop sbb ds dec push pop pop imul xchg mov rol aam loopne in hlt cli add push adc and cs inc inc dec push pop popa outsb je orl mov fsubp jmp stc add or sbb es cmp dec push popa insb jns xchg cltd mov aad ljmp xor push pop push jns test stos mov ror jecxz cld add movhps sub xor push pop bound jne orl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec xlat in stc add sbb xor push fs mov xlat loope cmc add push and ss dec push popa insb jbe lea lret (bad) loop out idiv add adc sbb sub xor push pop bound jne orl fucomip testb or inc dec push outsb je mov int3 rcr out cld push adc push pop gs xchg (bad) iret (bad) repnz add sbb das cmp pop push mov test leave iret aad loop out hlt sti add push adc and sub dec push pop pop data16 jb jg mov mov mov fsubp ljmp sub aaa cmp pop arpl jbe orl scas mov ret aam loope in hlt cli add or sub dec push pop pop gs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jle mov mov mov loopne idiv or dec push pop imul (bad) fwait mov ret aad loope out hlt cli add or sub dec push pop pop data16 jb jg mov mov mov fsubp in repnz incl and inc dec push push pop fs jbe orl scas mov ret aad loope out hlt sti add push adc and cs inc inc dec add popa outsb je test ror jecxz hlt sti add sbb popa insb js mov enter hlt add and push pop imul stos mov lret loop out cmc sti add push adc and cs inc inc dec push pop popa outsb je orl rol aam loope in hlt cli add or sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl inc inc dec push pop popa outsb je addl ror aad loop out add adc push and inc dec push push pop imul test stos mov mov fsub jmp or adc ss pop fs ja test stos mov mov fsub call or adc xor inc inc dec push pop popa outsb je addl mov (bad) out repz add push adc and cs inc inc dec push pop popa insl jae addb lods mov rol rcr loopne in repz incl or sbb es cmp inc dec push pop pop fs ja test test leave rcl fucom jmp or pop sbb ds dec push push pop arpl ja test stos mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fsub jmp or adc xor push pop popa insl jae addb lods mov rol rcr (bad) in repnz incl and inc dec push pop pop imul test stos mov mov fsub jmp or adc xor push pop bound jne (bad) mov scas mov ror aam loope out add sti add push adc xor push pop popa insl je addb lods mov rol aam loopne in repz add or sub cmp inc dec push pop pop imul test test leave iret (bad) fsub call or adc xor inc inc dec push pop pusha insl jae addb lods mov mov fsubp jmp stc incl or sbb es cmp dec push pop pop data16 (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp jg mov mov mov fucom ljmp push sbb sub xor push pop popa outsb jne addl rol rcr loopne in repz incl and xor ds dec push pop pop imul test stos mov mov out std or and cmp push popa imul lea lret jmp adc sbb ds dec pop outsl jge nop xchg pushf mov ret aad loop out cmc sti add push adc and xor inc push pop addr16 xchg int3 fsub lock pop adc sub inc dec pop gs xchg ret into fsub out clc add inc dec push imul test stos mov mov fucom ljmp pop and aaa inc dec push pop imul lods mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc iret (bad) repz add inc dec pop pop push sahf stos mov enter repz pop sbb push pop imul mov (bad) rcr ljmp sbb and xor cmp pop arpl jbe (bad) mov scas mov ret aam loope out hlt sti add or sub dec dec push pop pusha insl jae orb rol rcr loope out hlt sti add push adc and sub dec push pop pusha insw jae addb lods mov rol rcr loopne in repz add or sbb daa cs inc inc dec push pop pusha data16 mov (bad) aam out std add adc ds dec push pop pop fs ja test stos mov mov fucom ljmp push sbb sub ss dec dec push pop bound jne (bad) mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call mov rol aam loope out hlt cli add or sub dec push pop pusha insw jae addb lods mov mov fsubp jmp idiv add xor inc push pop gs xchg (bad) rcr jmp cld or dec push pop data16 jl xchg sahf stos mov (bad) rcr out cli push adc daa das xor data16 jae jg mov mov mov fucom ljmp pop push and xor cmp pop arpl jbe orl scas mov ret aad loope out hlt cli add or sub dec push pop pop data16 jb lea mov ror aad loop out cmc sti add push adc and cs inc inc dec push pop pusha data16 jae jg mov mov rol rcr loopne in hlt cli add push adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall and sub dec push pop pusha data16 jb jg mov mov mov fsubp ljmp push sbb cmp dec dec push pop bound jne (bad) mov scas mov rol aam loope in repz add or sub xor inc inc dec push pop popa insl jae addb lods mov rol rcr loopne in repnz incl and inc dec push pop pop imul xchg mov rol aam loope in repz add or sbb and inc dec push pop pop fs ja test stos mov mov fsub jmp or push sbb sub xor push pop bound jne orl rol rcr loopne in repz add or sbb es cmp dec push pop pusha insw jae addb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp rcl fucom jmp clc incb adc sbb cmp pop bound jbe (bad) mov scas mov ret (bad) fsub jmp or adc and sub dec push pop pop imul add movsl lods mov mov (bad) jmp clc incb and xor ds dec push push pop arpl jbe (bad) mov scas mov ror aam loope out hlt cli add or sub dec push pop pusha data16 jae addb stos mov mov fsubp ljmp push sbb sub ss dec dec push pop bound jne (bad) mov scas mov rol rcr loopne in repz incl or sub cmp dec push pop pusha insl jae addl rol rcr loopne in hlt cli add or sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp dec push pop pusha insl je orb iret aad ljmp aaa ds push pusha addr16 test mov (bad) in repz or pop sub push pop bound imul xchg popf mov ret leave rcr loop testl aaa inc dec pop gs mov rcr out decl push and ss dec push bound orl int in cli add sub aaa cmp pop arpl jbe (bad) mov scas mov ret jecxz repz push and aaa cmp insl ja (bad) pushf mov aad jmp add push sbb pop insw js (bad) cwtl mov aad in cmc add and ss dec pop pusha push orl int fchs out repz incl and inc dec push push pop fs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jle mov mov mov fucom jmp or push sbb sub inc dec push pop bound jne (bad) mov scas mov rol aam add call or adc and cmp aam pop cltd ret in sti add movsb lods mov leave rcr in clc add adc sub push popf cmpsb scas mov out sti push adc xor push pop outsl cltd cmpsb fidivrl inc jo mov mov cmp push jle xchg mov push adc and pop imul add pop jo sahf inc push outsb jp xchg sahf stos mov int3 xlat in sti pop adc sub outsb jp xchg sahf test ror loop stc add cmp inc push pop outsl jnp xchg lahf test fsubrp repz adc sub inc dec push bound test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call lret xlat jecxz sti pop adc sub inc dec push pusha insb ja mov enter testl cmp pop imul (bad) rcr jmp and cmp pop push orl (bad) loope testl ds push popa insl js nop fwait cmpsl mov lret (bad) jecxz sti push adc push arpl test lret in clc add sbb xor ja mov xlat loop cli add inc dec push bound test lret in testl cmp add insb ja mov rcr jmp add sbb xor dec push bound test leave aad in clc add sbb xor dec push bound test ret in std or dec push bound mov mov out cmc cld add unpckhps and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp xor push xchg popf mov aad ljmp sub cmp pop arpl test (bad) rcr in clc add aas dec push arpl nop cltd movsl mov (bad) shl jmp decl pop and popa imul xchg mov xlat jecxz stc add sbb sub bound lea rcr jmp push sub dec push push pop arpl lea leave iret fxam icebp sti push adc es ds push pop imul add jecxz icebp cli push adc xor inc dec push pop popa insb ja lea ror fucomip hlt decl adc push pop imul add rcr out std pop adc push bound xchg lret jmp add inc push pop addr16 mov int3 xlat jecxz (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) out sti push adc push popa outsb jne mov lret (bad) jecxz clc add sbb cmp pop addr16 mov iret (bad) repz push and addr16 mov rcr call and cmp pop push orl decl adc dec push pop bound jne test lret loop hlt add and pop data16 xchg mov lret fsub in stc add adc sbb dec push pop imul lcall out cli push adc pop data16 mov rcr jmp add and cmp pop addr16 test into fsub in testb sbb xor push pop imul (bad) rcr call and cmp pop push orl testb sbb pusha (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp lea iret (bad) repnz or sbb xor dec push pop imul (bad) iret (bad) icebp decb adc push pop addr16 mov aad jmp and aaa inc dec pop gs xchg int3 fsub out sti add inc dec pop fs xchg rcr out decb push and inc dec pop fs xchg fsub lock or sub inc dec pop data16 mov (bad) rcr call and cmp pop addr16 mov iret (bad) repz push and cmp pop push mov (bad) repnz or and imul mov cmc add pop and cmp pop push orl sub add xchg rcr call and cmp pop push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl mov lret loop lock pop adc and cs inc inc dec push pop arpl test mov in stc add cmp pop gs xchg leave aam out cli add sbb sub pop push (bad) lea aad jmp and cmp push bound mov rcr out std pop adc sub cmp jno xchg int3 xlat jecxz cli push adc push pop fs ja mov lret jecxz cmc add aas inc dec pop fs test mov repz add adc sub data16 jb test (bad) int fnop ljmp aaa inc dec pop data16 mov xchg mov ftst lock pop adc push pusha insl ja lea enter idiv (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl or and imul ror in cld or pop sub inc dec pop gs xchg (bad) out sti or sbb push pusha imul cltd movsb mov (bad) rcr ljmp test sub mov jecxz sbb dec sbbw push jo movsl mov aas pop jno mov sbb cmp pop imul inc pusha jnp stos (bad) fucomp sti or mov out or cmp test movntps rcr or inc pop jbe test sub mov jmp insb xchg and push addr16 mov in adc cltd mov add add xor mov out sbb shr push and outsl mov inc pusha jp scas leave in pop das (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl jns mov out adc xchg mov in pop xor jg mov out sbb push imul and push push cltd mov out sbb dec sbbw insl mov and pop jne stos (bad) loope pop xor popf mov cmp mov and pop je test das dec data16 ss imul jo movsl mov inc pop jne stos (bad) loop sbb dec push call insl xchg and jno cmpsl ret adc inc pop jns scas leave in sbb imul xchg es pop jae cmpsl rcr sti adc xchg mov out sbb mov xor jbe xchg lods (bad) jecxz add sbb push lahf mov jmp inc pop je (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp or sub dec push call pop jae mov sbb mov jmp outsb mov sbb cltd mov out adc (bad) cmpsb mov inc pop jne test and push data16 nop movsb mov cmp outsb sbbb sub inc pusha jp test mov pop insl test add xor jge lcall sub mov adc stos ret (bad) movaps js scas (bad) fnop movaps jbe test shl sti pop xor jnp lods (bad) jecxz pop xor jnp lods (bad) loopne adc xor jg mov call addr16 pushf scas leave jecxz adc stos rcr or mov inc pop jne test fcomi cvtpi2ps jp scas int3 call imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add cmp xchg and mov cmp xchg lahf lods mov xor mov adc push popa ja stos rcr or sub inc pop jno mov push push sub pop jns movsb mov ds jno movsl mov inc popa jp mov in sbb dec push jmp sbb cltd mov notb lods (bad) in sbb dec gs mov jmp sbbw push insb xchg es pop jbe stos (bad) fdivrp adc dec bound ret adc xchg lods (bad) loopne add das dec popa jl mov in sbb dec sbbl push insb xchg sbb push insb test pop cmp mov and pop je stos (bad) (bad) adc dec sbbb loop push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl dec gs mov out sbb shr add xor js cmpsl mov ss data16 lods vpmaddwd cmp (bad) lcall aas push outsl xchg sbb inc pop jbe cmpsl ret or aaa dec data16 lods (bad) fcomi or cmp jg scas vpmuludq cmp fwait mov loope adc inc push outsl xchg pop cs pop je mov sbb dec pusha ja movsl mov xor fs test and push push fdivp movaps jno mov sbb dec popa jp test and push add lahf mov in adc inc pop jb mov sbb dec gs lods (bad) or test sub jo sahf mov in adc inc pop jb mov pop das inc pop jne movsl mov xor js stos ret or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp cmp jg mov loop adc inc pop je cmpsl mov ss data16 scas (bad) fdivp push and popf mov in adc lea sbb dec popa jnp dec pop push sahf mov jecxz adc inc push outsb test sub pop jb mov adc mov sbb inc pop je mov pop das inc pop je mov push cs pop jae mov push sub mov sbb dec pop jbe movsl mov xor jne movsb mov das inc pop jbe movsl mov xor js test aad add jp stos rcr pop push ss fs test or push push cwtl scas (bad) (bad) or cmp jg scas (bad) (bad) adc aas push outsb test and lcall ds insb test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp pop jno mov pop das inc pop jne mov pop das inc pop je mov sbb dec bound test sbb nop test (bad) in add xor jns cmpsl mov xor jns test xlat out push sbb xchg lods (bad) (bad) or cmp sbbb and push push cwtl scas (bad) (bad) or cmp mov fcomip push and lcall inc push outsl xchg adc inc pop jo lahf mov in adc inc pop jo sahf mov in adc inc pop jno mov push sub movsl mov xor ja movsl mov xor dec imul push outsl xchg adc inc pop jno mov adc inc pop jne movsl mov aaa dec addr16 mov in adc inc pop jne cmpsb mov cmp cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall or cmp push lcall inc pop jb mov sbb inc pop jne movsl mov xor arpl stos rcr pop push xor stos ret or aaa push push fnop adc ds insl test sub (bad) cmpsb mov cmp sbbl insb test xor js cmpsl mov xor stos rcr or cmp jle scas vpmuludq sbbl sub jno mov sbb dec pusha js cmpsb mov xor stos ret add (bad) cltd mov fcomip push es outsb xchg adc mov sbb dec popa js test xlat out add jp test push ss data16 lods vpmaddwd es outsb xchg sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl dec addr16 mov jecxz adc mov das inc js stos ret fcomi or cmp jle lods (bad) fdivp push es insl xchg adc inc pop jno lahf mov in adc inc pop je mov sbb dec pusha ja cmpsb mov xor stos ret or aaa dec gs scas enter sub outsl xchg adc inc pop jo sahf mov in adc inc pop outsl xchg adc inc pop jo mov pop cs pop je mov sbb inc pop jne movsb mov xor js cmpsb add f2xm1 pop pop ss fs stos ret or cmp jg mov fcomip push daa aas push outsb test adc inc pop jo lahf mov out adc lea xor jbe cmpsb mov xor jp test and dec push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec fcomip adc inc pop jae movsb mov xor arpl stos rcr or cmp (bad) cltd mov loope adc inc pop jno mov sbb cwtl mov loop adc pop je movsl mov xor stos ret or cmp sbbl jae inc pop (bad) out sbb inc popa jge fwait test daa inc push gs movsb rcl or cs push lcall xor jns stos mov adc lea adc xchg scas enter pop das dec bound lods leave jecxz pop xor jge mov out adc aaa push insl xchg push cmp xchg sbb dec sbbb add ss imul sbb cltd mov jecxz adc xchg stos ret (bad) push sub jbe test sub jp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl xor sbbb add mov and jo mov and push insb sbbl inc bound test or cmp outsl xchg add xor pusha outsb jl cltd mov out pop xor push pusha outsb test sbb dec imul jno cmpsb ret adc inc popa jl mov call data16 mov in adc pop ja movsl mov inc pop jns stos (bad) fdivrp adc inc pusha jns stos add loope adc dec arpl int3 jmp push mov sub jbe stos ret fdiv or inc pop jns stos ret or mov and stos (bad) sbb dec data16 sub aas addr16 stos rcl add xor je xchg lahf lods mov add push sub dec push fs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl mov repnz sbb cmp bound mov loopne cld or sub inc push pusha outsb jl cwtl cmpsb mov rcr in cli or and inc dec pop insb jp xchg movsb mov into fucomp stc pop adc pop imul int3 (bad) testb cs pop data16 nop sahf lods mov add sbb cmp data16 nop sahf lods mov add adc cs pop data16 nop sahf lods mov add sbb cmp fs mov icebp add push bound mov loopne cld or daa xor jnp xchg cmpsl mov shl out std or daa ss push pusha outsb jge cltd test (bad) out std or daa xor jnp cwtl cmpsb mov rcr in sti or and imul movsb mov iret fsubr stc pop adc pop push mov fsubr clc push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call xor dec pop push scas mov add and cmp adcl in add push sub dec pop data16 xchg scas (bad) loope push and push imul push imul or xor jg lods mov add and cmp pop data16 xchg lahf lods mov sbb dec bound jge mov out sbb mov and push push loopne push daa aas pop outsl jle lcall std or daa xor jl cwtl cmpsb mov rcr in cli or and sbbl cmp jne movsb mov xor jp lods (bad) fsubr lcall xor lods mov aaa push insb jl stos vpsllw and push gs lods ret adc adcl in add sbb fs mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp lock push bound mov fucomip std or sub jbe xchg mov jmp cs pop data16 nop sahf lods mov add sbb bound mov loope std or daa xor jnp xchg movsb mov into fucomp stc push sub outsl add add mov loop decb sub inc push popa outsl jge cltd cmpsl mov rcr in sti or and push xchg out add pop sub jae (bad) popf stos mov decl push popa outsl jge cltd cmpsl mov rcr in cli or and inc dec pop push test fld1 testb das cmp lea sbb arpl cwtl mov (bad) adc ds imul or sbbb sub outsb xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp add xor orl push sbb aaa inc push popa outsl jge lcall sti or and insb jp xchg movsb mov into fsubr clc push adc pop imul lret (bad) cmc add and cmp lahf lods mov cmc add pop sub dec push fs (bad) pushf stos mov add sbb cmp popa jo mov loopne std or sub inc push pusha outsb jl cwtl cmpsb mov rcr in cli or pop push xchg jmp xor dec pop imul lret (bad) cmc add and ds pop imul lret (bad) cmc add pop cs pop addr16 xchg mov call xor adcl in add sbb fs lea jecxz decl sbb cmp gs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call xlat in add sbb arpl lea loopne std or es push pop insb jp xchg mov call xor dec pop push scas mov add sbb bound mov fild out decb daa xor jl xchg cmpsb mov rcr in cli or and inc dec pop imul lret fld1 cmc add and jae (bad) popf stos mov decl push pusha jo mov loopne sti or and insb jp xchg movsb mov iret fsubr stc pop adc pop push mov int3 (bad) cmc add push cs pop data16 nop lahf lods mov add sbb cmp arpl lea fucomip cld or es jp xchg movsl mov iret fucomp sti or and push xchg call (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call and cmp gs mov lock push bound mov loope std or es push pop insl jnp xchg movsb mov into fucomi testl (bad) (bad) popf stos mov hlt add pop sub dec push data16 nop popf stos mov decb sub inc push fs pushf mov jmp adc inc pop outsl mov adc ds jb xchg sahf lods mov push push cmp mov fsubrp cli or and inc dec pop push xchg adc inc pop jne test loopne adc xchg mov out sbb dec pusha js test fyl2x or cmp jae (bad) popf stos mov decb sub inc push pusha outsb jnp xchg movsl mov iret fucomp stc pop sbb dec arpl test fdiv add and pushf mov sub ret or cmp jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl sub cwtl mov loop push and popf mov jmp or daa xor jnp xchg movsl mov iret fucomp stc pop adc pop push scas mov testb das cmp (bad) nop sahf lods mov adc jge cltd cmpsl mov rcr in cli or and inc dec pop push xchg out add dec pop imul int3 (bad) testb cs pop addr16 xchg mov push sbb scas (bad) loope add xor mov fsubr clc push adc xor dec pop push scas mov add pop sub jae (bad) popf stos mov decl sbb cmp fs mov lock sub inc push pusha outsb jl cwtl cmpsb mov rcr in cli or and inc push pop insb jp xchg movsl mov iret fucomp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sti or and mov sbb dec pusha jnp movsl mov xor arpl mov (bad) jmp pusha jl mov fdiv or jo sahf lods mov and imul mov call cs pop data16 (bad) popf stos mov decl push arpl lea loopne cld or es push pop insb jp xchg movsl mov iret fsubr stc pop sub pop insb jp xchg movsb mov into fsubr clc push adc xor pop push xchg fsubr testl dec pop push xchg jmp xor dec pop push scas mov add and jae (bad) popf stos mov add sbb cmp bound mov loop decl push bound mov jecxz decl sbb cmp gs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl xlat in add push sub inc push arpl mov lock sub inc push popa jno lea (bad) in add sbb gs mov jecxz decb sub inc push bound mov loop decb sub inc push popa outsl jge cltd test (bad) (bad) cld adc insl test or adcb and dec gs stos ret push sbb xchg scas (bad) or aaa dec gs stos rcr pop push xor test sbb xchg test xlat out add ja cmpsb mov xor js cmpsl mov xor gs stos rcr or ss fs stos rcr pop sbb nop cmpsl mov xor jl stos ret pop push xor test sbb xchg test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall xor lods ret (bad) or cmp sbbl je mov pop cs pop je mov push cs pop jne movsb mov xor js test (bad) in add xor js test xlat out add jnp test sbb xchg test (bad) out add jns cmpsl mov and cmp push popa imul xchg popf test mov repz adc sub dec push pop addr16 xchg (bad) into (bad) in testl xor dec push pop push pushf cmpsb mov (bad) into fsub in testl xor add xchg ret int loop cmc decl adc push pop outsb js mov lret aad jmp sbb dec pop arpl orl out sti add aaa inc dec (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call imul xchg lahf test fsub lock add sbb sub pusha push jg xchg popf cmpsl mov (bad) in stc add sbb sub inc dec push pusha imul sahf test fucomp repnz pop adc push pop push orb lret jmp sbb push imul mov leave aam call sbb xor inc dec pop data16 test (bad) into fsub in testb adc sub cmp push pop outsl jns lea int3 xlat loop idiv or dec push pop imul mov add rcr in clc add inc dec push pop imul mov enter lock add aaa inc dec push pop imul mov (bad) into fsub in testb adc sub cmp push pop outsl jns lea lret jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call sbb pop bound mov enter icebp sti add aaa inc dec push popa imul xchg sahf test fucom repnz push adc and cmp push popa imul xchg lahf test fsub lock add sbb sub imul mov out stc add inc dec push popa imul xchg popf cmpsl mov (bad) in stc add inc dec pop outsl jns mov into ftst out clc add inc dec pop bound orl out add push adc xor inc dec pop outsl jns lea rcr out sti add cmp pop bound (bad) mov lret jmp sbb xor inc dec pop arpl test ror loopne hlt decb adc push pop outsl jns lea (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc lret call sbb push popa insb jbe mov rcr out sti add cmp push popa imul xchg sahf test mov cmc decl adc sub inc dec push pop imul mov (bad) rcr out sti add cmp pop bound mov leave aam jmp sbb dec pop outsl jns lea lret (bad) loopne cmc decl adc push pop data16 test ror fucomip hlt decb adc sub cmp push fwait movsl scas mov out clc add and inc dec push pusha push jle xchg popf cmpsl mov (bad) rcr in stc add inc dec push pop push pushf cmpsb mov (bad) out cli add sbb cmp pop bound mov leave rcr ljmp cmp pop bound (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jns mov int in stc add sbb cmp pop outsl jp xchg pushf cmpsl mov (bad) rcr in stc add inc dec push bound orl repz adc sub cmp push pop outsl jns lea lret aad jmp sbb xor inc dec pop arpl (bad) lea lret jmp sbb xor inc dec pop arpl orl lret aad ljmp xor inc dec pop bound mov mov repnz or sbb xor inc dec pop arpl (bad) mov enter icebp sti add aaa inc dec push pusha push jle xchg popf cmpsb mov (bad) jecxz stc add aas dec push pop addr16 test ret into fsub in testb adc sub dec push pop addr16 test ret loopne cmc decl adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp xor push pop data16 test (bad) into fsub in testb adc sub cmp jo test ret loop clc add sbb sub bound orl jmp sbb push pop data16 test ret int loop testl aaa inc dec push popa imul xchg mov xlat loope testb adc dec push pop imul mov (bad) jecxz out stc add sbb cmp pop arpl (bad) mov int3 (bad) loopne cmc add adc sub cmp jo test ret loope cmc add adc dec push pop data16 test ret int loop testb adc dec push pop push mov xlat loope stc add sbb sub bound orl out (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push cld pop adc sub cmp push pop data16 test ret int loop testb pop and popa imul xchg mov rcr out sti add cmp arpl (bad) mov lret call sbb xor jno test ret into fsub in clc add and xor push jle xchg pushf cmpsl mov vpaddusb repnz push adc and push pop data16 test ret loop testl xor imul mov leave aad jmp pop sub inc dec pop bound orl int3 (bad) loopne cmc add pop cmp pop arpl orl call push sub cmp je mov (bad) rcr in cli add sbb sub inc dec push pop push jle xchg pushf cmpsl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec ftst out testl xor dec push pop imul mov (bad) iret (bad) in clc add sbb das cmp outsb js lea int3 xlat loope cmc decl adc sub cmp push pop gs test ret loope cmc decl adc sub cmp push pop outsl jp (bad) cltd mov (bad) loope cmc decl adc sub cmp push pop gs test mov in testl xor addr16 test ret loop testb push and xor addr16 xchg (bad) jecxz clc add sbb sub inc dec push pusha push jg xchg popf cmpsl mov (bad) rcr in stc add inc dec push pop imul mov repnz pop adc xor inc push pop data16 test (bad) in testl xor dec push pop push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jle xchg popf cmpsl mov (bad) rcr out cli add sbb sub outsb jns (bad) cltd mov (bad) out stc add sbb sub inc dec push pop push jle xchg sahf test mov lock push adc and pop arpl (bad) mov leave rcr call sbb xor inc dec pop arpl orl repz add adc push pop addr16 test ret loop testl xor insb js lea iret (bad) out stc add sbb sub pusha push jle xchg pushf cmpsb mov (bad) rcr in stc add inc dec push pop push pushf cmpsl mov (bad) in clc add inc dec push popa imul xchg lahf test fsub lock add sbb cmp arpl orl hlt std pop adc xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp pop arpl (bad) mov leave rcr call sbb xor inc dec pop arpl orl lret aad ljmp xor jo xchg (bad) into (bad) out stc add inc dec pop fs xchg enter hlt decb adc sub add jle xchg pushf cmpsb mov rcr ljmp xor dec push pop push lcall jecxz stc add sbb cmp push popa imul xchg popf cmpsl mov (bad) rcr in stc add sbb sub inc dec push pusha push jle xchg sahf test mov icebp sti push adc and pop bound mov lret jmp decl adc sub cmp outsl jp mov lret (bad) loopne cmc decl adc sub cmp push pop outsb js mov lret call (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl adc and cmp push popa insb jbe mov rcr in stc add sbb sub inc dec push pop imul mov ret int jecxz clc add and xor dec push pop addr16 test ret loope cmc decl adc push pop outsb js mov ror fucomip hlt decb adc xor push pop outsb js mov lret ljmp xor push pop outsl jns mov iret (bad) lock add cmp push bound orl lret xlat loop testb adc dec push pop push pushf cmpsb mov (bad) in cli add sbb cmp arpl orl jmp sbb xor inc dec pop outsb js mov lret aam jmp sbb push pop outsl jp mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp jmp decl adc sub cmp push pop outsl jns lea lret aad jmp sbb push pop outsl jns add and addr16 mov xlat loop clc add sbb xchg popf cmpsl mov (bad) jecxz cli add sbb sub bound mov fsub out fs (bad) in std pop sub insb jne mov aad jmp pop sub inc dec pop bound test ret int loop clc add sbb sub inc dec push pusha push jg cwtl mov aad ljmp mov xor dec push pop data16 mov (bad) rcr in lock pop adc push fucomip adc push iret frstpm(287 repnz or push pop imul cltd movsb mov lret (bad) jecxz cli push adc sub dec (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call insb js mov iret fsub icebp cld push adc push bound test lret xlat in sti pop adc sub inc dec pop data16 mov (bad) repnz push and inc push pop addr16 mov int3 (bad) loope sti pop adc xor push pop push jg xchg mov xlat jecxz cli pop adc sub inc dec pop gs mov xlat loope testb adc dec pop fs xchg int3 fsub out cli add cmp ja (bad) lcall in clc add sbb xor dec push pusha imul cltd movsl mov enter clc add sbb xor add xchg lahf stos mov int in cld pop adc push bound test enter clc add sbb xor dec push arpl xchg leave aad in stc add sbb xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp jp nop pushf test mov stc add aas dec push arpl xchg into ftst lock pop adc sub inc dec pop fs xchg int in std or push pop addr16 mov (bad) loope xor sbb cmp cltd test frstpm(287 out sti add sbb sub bound test inc dec ja xchg sahf stos mov lret in clc add sbb xor je mov (bad) repnz adc in pop mov mov or inc test (bad) rcr out cld push adc xor cmp jae mov (bad) rcr out cld pop adc xor xchg enter repnz pop adc xor push pop addr16 xchg (bad) rcr out sti add pop mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp add sbb xor push pop addr16 mov enter repnz pop adc push pop addr16 xchg (bad) rcr out cld pop adc xor push pop addr16 mov (bad) rcr out std sub sti pop adc jns xchg lahf stos mov into fxam out cli add aaa cmp outsl jne (bad) mov scas mov ret aad loope out hlt sti add or sub dec push pop pop gs jb jg mov mov mov fsubp jmp idiv add adc sbb cmp dec dec push add push jbe (bad) xchg pushf mov ret aad loop out cmc sti add movhps sub ss dec dec push pop bound jne (bad) mov scas mov ret aad loop out cmc sti add push adc and cs inc inc dec push pop popa push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp jnp xchg lods mov rol rcr loopne in repz add or sub dec push pop pop data16 jb jg lea mov mov (bad) in repnz incl and inc dec push pop pop data16 jb jg mov mov mov (bad) in repnz incl or sbb and inc dec push pop pop gs jb jg mov mov mov (bad) jmp clc incl and inc dec push pop pop imul test stos mov mov fcomp in icebp idiv add adc sbb cmp pop arpl jbe orl scas mov ret aad loope out hlt sti add push adc and cs inc dec dec push pop popa insl je orl rol aam loope in repz add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl or sub cmp inc dec push pop pop imul test stos mov mov fsubp ljmp push sbb cmp dec dec push pop bound jne (bad) mov scas mov rol aam loopne in repz add or sub dec push pop pop gs jb jg mov mov mov fucom ljmp push sbb cmp pop arpl jne (bad) mov scas mov ror aam loope in hlt cli add or sub xor inc inc dec push pop pusha insl jae addl rol rcr (bad) in repz incl es arpl test vpsubusw in repnz incl or and pop arpl jbe orl scas mov ret leave iret (bad) fsub jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cld add unpckhps dec push arpl xchg lret rcl fsubp lock add and inc dec push push pop arpl jbe orl scas mov ret aam loop out hlt sti add or sub dec push pop pop imul test mov lret in repnz incb adc push and xor ds dec push push pop arpl jbe orl scas mov rol aam loope in repz add or sbb and inc inc dec push pop pop gs jb jg mov mov mov fucom ljmp push sbb cmp dec dec push pop popa push xchg lods mov rol rcr (bad) in repnz incb and xor cmp pop arpl jbe (bad) mov scas mov rol rcr loopne (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp in hlt cli add or sub cmp inc dec push pop pop imul test stos mov ror loopne in repz add or sbb es cmp dec push pop pusha insw jae addb lods mov mov (bad) jmp clc incb and xor ds dec push push pop fs ja test stos mov mov fucom jmp or push sbb sub xor push pop bound jne addl mov rcr ljmp pop sbb cmp pop arpl jbe (bad) mov scas mov ret aad loope out hlt sti add push adc xor inc inc dec push pop popa insl je addb lods mov mov (bad) in repnz incl and xor ds dec push pop pop imul test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp (bad) lret fucom ljmp push sbb sub inc inc dec push pop popa insl je addb lods mov rol rcr loopne in repz add or sbb es cmp inc dec push pop pop imul test stos mov mov fsubp jmp idiv add adc sbb cmp pop arpl jbe (bad) mov scas mov ret aam loope out hlt sti add or push sbb sub xor push pop bound jne addl rol rcr loopne in repnz incl and inc dec push pop pop imul test stos mov mov fsub jmp or adc xor inc inc dec push pop pusha insl jae addl rol rcr (bad) in repnz incb and xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ds dec push push pop arpl jbe orl scas mov ret leave iret (bad) fsub call or adc xor inc inc dec push pop pusha insw jae addb lods mov mov fsubp jmp clc incb and xor cmp pop arpl jbe orl scas mov ror aam loope in hlt cli add or sub add pop popa insl je addb lods mov mov (bad) jmp clc incb and xor cmp pop arpl jbe orl scas mov ret aad loop out cmc sti add push adc and sub dec push pop pusha data16 xchg int3 xlat jecxz sti add push adc inc push pop gs jb jg mov mov mov fucom ljmp push sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl cmp insl jae test ror xlat fucom repnz or sbb and inc dec push push pop fs ja orl scas mov ret (bad) fsub call or adc and cs inc inc dec push pop pusha data16 jae jg xchg sahf stos mov (bad) int fnop out repz add or sub dec push pop add insl jae addb lods mov mov (bad) jmp clc incb and xor cmp pop fs ja test test leave iret (bad) fsub call or adc xor push pop popa push xchg scas mov rol rcr loopne in repz add or sbb es cmp inc dec push pop pop imul test stos mov mov fucom ljmp push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall sub ss dec dec push pop bound jne orl rcr fsubp jmp idiv add adc sbb ds dec push push pop fs ja orl mov mov fsub jmp or adc xor push pop popa push mov scas mov add enter loope out hlt sti add push adc and sub dec push pop pusha data16 jae jg xchg lahf stos mov (bad) into aam loope in hlt cli add or sub dec push pop pop data16 jb jg mov mov mov fsubp ljmp pop push and inc dec push pop pop imul test stos mov mov fsub jmp or push sbb sub ss pop arpl jbe (bad) mov scas mov ret aad (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fnclex call adc pop and inc dec push pop pop imul test mov mov fsubp jmp clc incb and inc dec push push pop fs ja test stos mov mov fucom ljmp push sbb add inc dec push push pop imul test stos mov mov fsub jmp or push sbb cmp dec dec push pop bound jne (bad) mov scas mov ret aad loop out cmc sti add push adc and sub dec push pop popa outsb je addb lods mov rol rcr (bad) in repnz incl and inc dec push push pop fs ja test stos mov mov fsub jmp or adc xor push pop popa outsb je (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jp xchg lods mov rol rcr loopne in repz incl or sbb and inc dec push pop pop imul test stos mov mov fsub jmp or push sbb sub xor push pop bound jne orl mov fndisi(8087 call pop or sub dec push pop pusha insw jae addb lods mov mov fsubp jmp clc incb adc sbb cmp pop arpl ja orl scas mov ret aad loop out cmc sti add push adc cmp push pop push mov into aam loope hlt decl push and xor ds dec push push pop fs ja orl scas mov ret aad in cld add adc sub cmp bound jg xchg cwtl sahf (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp rcr (bad) in repnz incl and xor cmp pop arpl jbe (bad) mov scas mov rol aam loope out hlt cli add or sub cmp dec push pop push addb cmpsl scas mov rol aam loopne in repz add or sbb es dec push pop pop gs jb jg mov mov mov fucom ljmp push sbb sub ss dec dec push pop bound jne (bad) mov scas mov rol aam loopne out hlt cli add or sub dec push pop pop gs jb jg mov mov mov fsubp jmp idiv add adc sbb cmp dec dec push pop bound jne (bad) mov scas mov rol aam loope out hlt cli add or sub push pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp jbe orl scas mov ror aam loope in hlt cli add or sub dec push pop pop imul test stos mov mov fsub jmp add adc sbb sub xor push pop bound je addl mov (bad) jmp clc incb adc sbb cmp ja test stos mov mov fsubp ljmp push sbb cmp dec dec push pop bound jne orl rol rcr loopne in repz add or sbb es cmp inc dec push pop pop imul test stos mov mov fucom jmp or pop sbb cmp pop arpl jbe orl mov (bad) out repz add or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall pop es cmp inc dec push pop pop imul xchg mov mov fucom ljmp push sbb sub xor push pop popa add jnp mov lods mov rol aam loopne in repz add or sbb es cmp inc dec push pop pop imul test test leave iret aad loop out cmc cld add push adc xor inc inc dec push pop popa outsb je addl mov fsubp jmp idiv add adc sbb cmp pop bound jne (bad) mov scas mov rol rcr loopne in repz incl and inc dec push push pop fs ja orl scas mov ret aad loope out hlt cli add or sub cmp inc dec push pop pop imul test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall mov fsub jmp or adc and sub dec push pop pop data16 jb jg mov add rcr (bad) jmp clc incb adc sbb cmp pop bound jne orl rol rcr (bad) in repnz incl and inc push pop add outsb jae xchg sub xchg add dec pop outsb js mov enter icebp cli add inc dec push arpl xchg lret (bad) loope stc add sbb cmp pop outsb jns mov int3 xlat jecxz idiv add unpckhps and das ss dec dec push pop bound je addl rol rcr loopne in repz add or and ds push pop push cltd lahf cmpsb mov enter out sti push or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall push pop insb je orb lret xlat loopne lock or sbb cmp insl jne mov (bad) rcr out clc add sbb das xor push pop bound jne orl ret aad loop out cmc cld add adc sbb sub ss dec dec push pop arpl jo jge mov mov mov fsub jmp or sbb xor inc dec dec push pop bound jne (bad) mov scas mov rol aam loopne in repz add or sub dec push pop pusha insw jae addb lods mov rol rcr (bad) in repnz decl adc sub cmp jae mov leave rcl fucom ljmp pop sbb cmp pop arpl jbe (bad) mov scas mov rol aam (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) out hlt cli add or sub cmp inc dec push pop pop gs jb jle mov mov mov fsub jmp or adc xor push pop bound je addl lret (bad) fucom icebp cld pop adc daa sub add jbe lea aad jmp sti pop adc xor jno xchg enter call adc and sub dec push pop pop data16 jb jg mov mov mov fucom ljmp push sbb cmp dec push push pop arpl jbe (bad) mov scas mov rol aam loopne in repz add or sbb xor inc dec dec push pop bound jne (bad) mov scas mov rol rcr loopne in repz incl or sbb es dec push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall insw je addl mov (bad) in repnz incl and xor cmp pop arpl jbe (bad) mov scas mov ret aad loop out cmc sti add push adc and cs inc inc dec push pop add outsb jne addl rol aam loope out cmc sti add adc sbb cmp dec dec push pop bound je addl rol rcr loopne in hlt cli add or sub cmp dec push pop popa outsb jne orl ror aam loope in hlt cli add push adc xor push pop popa outsb je (bad) mov scas mov ret aad loop out cmc sti add push adc and cs inc inc dec push pop pusha insl jae addb lods mov rol rcr (bad) in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push clc incl and inc dec push push pop fs ja test stos mov mov fucom jmp or push sbb cmp dec dec push pop bound jne (bad) mov scas mov mov fndisi(8087 out hlt sti add or sub dec push pop pop gs jb jle mov mov mov fsubp ljmp push sbb cmp dec push push pop bound jbe (bad) mov scas mov rol aam loope in hlt cli add or sub dec push pop pusha outsl jne orl rol aam loopne in repz add or sbb daa cs inc inc dec push pop pusha data16 jb addb lods mov mov (bad) in repz incl or sbb and inc dec push pop pop imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl test leave iret aad loop out cmc sti add push adc and cs pop gs mov ret jecxz cli add push and xor push js addb lods mov ret jecxz std add and xor cmp pop arpl jbe orl mov lret (bad) loope testb pop and cmp pop push movsb scas mov repz or push sub insb ja lea int loop cmc cld add unpckhps sub xor push pop popa push mov mov repnz push adc sub cmp jae test (bad) rcr loopne testl cmp pop arpl test rol fxam lock or sbb cmp pop data16 jg mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov fsubp jmp stc incl or sbb and inc dec push pop pop imul test test leave iret aad loop out cmc cld add or cmp pop fs ja orl mov mov fsub jmp or adc xor push pop popa push xchg scas mov rol rcr loopne in testb push pop sub aas dec push pusha push (bad) mov mov fsubp ljmp push sbb cmp dec dec push pop bound jne orl rol rcr (bad) in repnz incl or sbb es cmp inc dec push pop pop imul test stos mov mov fsub jmp or adc xor inc inc dec push pop pusha insw jae addb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov lock or adc dec push pop imul popf cmpsb mov lret jecxz cli add inc dec pop add test mov in repnz incl and xor ds dec push push pop fs ja test stos mov mov fucom jmp or pop sbb cmp dec push push pop arpl jbe orl scas mov ret aad loop out cmc cld prefetcht2 es dec push pop pusha outsb je (bad) mov scas mov ret aad loop out cmc sti add push adc and cs push pop bound jbe test stos mov mov fsub jmp or adc and cs inc inc dec push pop pusha insw jae jg mov mov mov (bad) jmp stc incl or sbb es (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp dec push pop pusha insw jae addb lods mov mov (bad) jmp clc incl push or sub cmp inc dec push pop pop gs jb jle mov mov mov fsubp jmp idiv add adc pop and inc dec push pop pusha insl je addb lods mov rol aam loope out hlt cli add or sub dec push pop pop gs jb jg mov mov mov fsubp jmp idiv add adc sbb cmp dec push push pop arpl jbe orl scas mov ret leave rcl fsub jmp or push sbb sub xor push pop bound jne orl rol aam loopne in repz add or sub cmp inc dec push pop pusha insw jae jg mov mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call fcomp in repnz incb and inc dec push pop add insb jae jg mov mov mov fsubp ljmp push sbb sub xor push pop bound jne (bad) mov scas mov rol rcr loopne in repnz add or sbb es cmp inc dec push pop pop imul test stos mov mov fucom ljmp adc xor inc dec dec push pop popa push xchg scas mov rol rcr loopne in repz add or sbb es cmp inc dec push pop pop imul test test enter loop out cmc cld add sbb pop outsb js lea int3 xlat fucomip repz push adc and cs inc inc dec push pop pusha addr16 mov (bad) lret fucom (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp pop sbb aaa ds dec push pop addr16 xchg enter clc add sbb xor dec push pop imul mov lret (bad) loope cmc decl adc dec push pop imul stos mov mov fucom ljmp adc xor bound mov lret (bad) loop hlt decl push and xor dec push pop gs test mov hlt decl pop sub inc dec push pop imul mov vpaddusw out cli push adc and inc dec push push pop fs ja test test enter loope out cmc sti add push adc and sub dec push pop pop imul test stos mov leave aad jecxz lock add movhps sub xor push pop popa outsb je addl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call scas mov ror aam loope in repz add or sub cmp inc dec push push pop fs ja test mov lock add xor push xchg lods mov mov fsubp jmp idiv add adc sbb cmp dec dec push pop bound je addl mov fsubp jmp idiv add adc sbb sub ss dec push push pop bound jne orl rol rcr (bad) in repnz incb adc sbb cmp push pusha outsl jp nop lcall fsubp out sti push adc cmp arpl jg xchg mov (bad) jecxz repz or push pop bound jg xchg lcall (bad) int fnop out repz add or adc and sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl dec push pop pop gs jb jg mov mov mov (bad) in repnz incb adc sbb cmp pop bound jne (bad) mov mov (bad) jmp clc incb and inc dec push push pop arpl jbe (bad) mov lods mov rol rcr loope out hlt sti add push adc and sub dec push pop pop gs jae jg mov mov mov fsub call pop or sub cmp dec push pop pop data16 jae addb scas mov rol rcr loopne in repz incl and inc dec push push pop fs ja test stos mov mov fucom ljmp adc xor inc inc dec push pop pop add jns xchg lods mov rol aad (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fndisi(8087 out hlt sti add push adc and sub dec push pop pop imul test lods mov mov fsubp ljmp push sbb sub xor push pop popa outsb jne addl mov fsubp jmp idiv add adc sbb sub ss dec dec push pop bound je (bad) mov scas mov ror aam loope in repz add or sbb and inc dec push pop pop imul orl mov mov fsub jmp or adc and sub dec push pop pop data16 jb jle mov mov mov fucom jmp or adc ss dec dec push pop bound je addl mov fnop out repz incl and xor ds dec push push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall imul xchg fwait mov rol rcr loopne in repnz incl es dec push pop pop gs jb jle mov mov mov fnclex call pop push adc and sub dec push pop pop imul test stos mov mov fucom ljmp push sbb sub xor push pop pusha data16 jae addb mov (bad) in testb adc dec push pop imul mov fsubp ljmp sbb pop pusha insl jae addb lods mov rol rcr (bad) in repz pop adc xor push pop push mov fucomp add add pop and cmp push bound orl in testl cmp inc dec push pop pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp jb jg mov mov mov fucom out cli push push push and pop outsl jl (bad) lcall out stc add sbb sub dec push pusha insb js mov lret xlat loope repnz adc push pop addr16 xchg ret aad loop out hlt sti add push adc and sub dec push pop pop data16 jb jg mov mov mov (bad) in repnz incb and xor ds push pop imul xchg popf mov ret leave iret (bad) fsub jmp or adc xor push pop arpl jbe orl scas mov ret aad loope out hlt add add unpckhps sub inc dec push pop imul mov (bad) into (bad) out hlt cli add or sub dec push pop pop data16 (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jg mov mov mov fsubp jmp idiv add adc sbb cmp dec dec push pop popa push xchg lods mov mov (bad) jmp clc incb and xor cmp pop bound jne (bad) mov scas mov rol xlat loop idiv or dec dec pop arpl orl cmc add adc and pop data16 orl into (bad) ljmp sub xor inc inc dec push pop popa insl je addl rol rcr loopne in repz incl and xor cmp pop fs jno jle mov mov mov fucom ljmp push sbb dec push push pop imul test stos mov mov fsub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp or adc xor inc dec dec push pop popa push mov scas mov rol aam loopne in repz incl or sbb es cmp dec push pop pop imul test test leave iret (bad) fsub call or adc xor inc inc dec push pop popa insl jae addb lods mov rol rcr (bad) in repz incl or sub cmp inc dec push pop pop imul test stos mov mov fsub jmp or pop sbb cmp dec push push pop fs ja orl mov mov (bad) in repnz incb and xor cmp pop fs ja orl scas mov ror aam loope in hlt cli add or sub dec push pop pop imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) js test stos mov mov fucom ljmp adc xor inc dec dec push pop popa outsb je addl mov (bad) jmp clc incb adc sbb cmp dec dec push pop bound jne orl scas mov rol aam loopne in hlt cli add or sub cmp inc dec push pop pop imul test test leave iret (bad) fucom jmp or adc xor push pop pusha data16 je addl mov (bad) jmp stc incl and sub cmp inc dec push pop pop imul test test leave iret aad loop out cmc sti add push adc and das xor push pop popa insl jae addb lods mov mov fsubp jmp idiv (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std add adc sbb cmp pop imul test test leave iret aad loop push aaa ja (bad) lcall aas dec push pop imul xchg mov xlat loop cli add pop and negb xor push pop push mov xlat jecxz sti add cmp push pop push mov fucomp cmc add push shl repnz adc xor push pop imul mov testb sbb pusha insb ja mov mov (bad) out repnz incl and dec push bound jbe jle mov mov mov (bad) jmp clc incb or sbb es cmp inc dec push pop pop imul mov in stc add and xor inc push jno xchg ret int (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call loope testb adc daa xor inc dec pop bound mov iret (bad) in testl xor outsl jns lea enter icebp sti add sbb sub pop push lcall fucomip repz push adc and aaa inc dec push pop imul scas mov lret call sbb sub pop imul scas mov lret aad jmp sbb cmp push pop imul scas mov jmp decl adc xor inc dec pop bound mov (bad) rcr in cli add aaa inc dec push pop imul scas mov ljmp xor outsl js mov enter lock add sbb sub inc dec push pusha push jle xchg popf cmpsb mov (bad) iret ftst out clc add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call dec push pop outsb js mov enter lock add sbb sub inc dec push pusha imul xchg sahf test mov out clc add pop sub cmp outsl js mov (bad) rcr in stc add inc dec push pop addr16 xchg ret loope hlt decb adc xor inc dec pop bound mov rcr in clc add and xor dec push pop data16 test ret loope cmc decl adc sub cmp push pop outsb ja mov (bad) rcr in add push adc and pop push jle xchg fwait cmpsb mov (bad) into fsub in testl xor dec push pop outsl jp mov lret aam icebp sbb test (bad) in idiv or push and inc dec push pop pop outsb jp nop pushf test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp into aad loope out hlt cli add or sub dec push pop push jle xchg sahf test in cld or sub inc dec pop fs mov leave rcr jmp push sub imul xchg lcall (bad) int fchs out repnz incl and dec pop bound orl icebp std or sbb cmp pop addr16 orl out sti add sbb xor inc dec pop bound orl vpsubusb out cli add and inc dec push pop pop gs jb jle mov mov mov fsubp ljmp pop sbb cmp pop arpl jbe orl ret lret fucom ljmp push sbb cmp pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp jne (bad) mov scas mov ret aad loope out hlt cli add or sub cmp inc dec push pop pop data16 xchg (bad) rcr call sbb sub aaa cmp pop arpl jbe orl scas mov ret aad loop out cmc cld add unpckhps sub xor push pop bound jne (bad) mov scas mov ror aam loope out hlt cli add or sub dec push pop pusha data16 jae addb test mov ror aad loope out hlt std or inc push pop insl je mov int fsubrp idiv or inc push pop addr16 mov (bad) rcr call adc sub pop pusha data16 jae addb lods mov rol rcr loopne in repz add or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp dec push pop pusha insl je addb lods mov rol rcr loopne in repz add or sub dec push push js test stos mov mov fucom ljmp pop sbb cmp pop arpl jbe orl mov mov fsubp ljmp pop sbb cmp pop arpl jbe (bad) mov scas mov ret (bad) fldl in icebp idiv add adc sbb cmp dec dec push pop bound jne (bad) mov mov mov fsub jmp or adc xor push pop popa push mov lods mov rol aam loopne in hlt cli add or cs inc dec dec push pop bound jbe (bad) mov scas mov ret aad (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fndisi(8087 call or adc and cs inc inc dec push pop pusha insl jp mov mov fucom ljmp push sbb sub ss dec dec push pop arpl jbe (bad) mov scas mov ret aad loop lock add adc push and xor ds dec push push pop fs ja test stos mov mov fucom ljmp push sbb cmp push pop fs ja test lods mov mov (bad) in repz add or sbb es cmp inc dec push pop pop gs jb jg mov mov mov fsubp jmp clc incb and xor cmp pop arpl jbe orl mov mov fsubp jmp clc incb adc push and xor cmp pop imul test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call mov mov fsubp ljmp pop sbb cmp pop fs ja orl mov mov fucom jmp idiv add adc push and xor cmp pop imul test stos mov mov fsub jmp or push sbb sub aaa cmp imul scas mov out add add sbb cmp push arpl js test mov (bad) out cld add unpckhps and das xor push pop popa push xchg mov out cli push adc sub jo mov ftst out stc add sbb sub popa insb jbe mov lret in lock add adc sbb sub xor push pop bound je orl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov cmc cld add push and push sahf test (bad) icebp sti pop adc sub cmp jne mov lret in hlt std or dec push pop arpl jbe orl scas mov rol aam loope in hlt cli add or sub dec push pop pop imul test movsl stos mov mov fucom repz adc push and inc dec push pop pop imul test stos mov mov fucom ljmp push sbb sub xor push pop popa push mov lods mov ror loop hlt add adc dec push pop data16 test mov mov fucom ljmp push sbb sub xor push pop bound jne orl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl fchs out repz incl es cmp inc dec push pop pop imul test stos mov mov fucom jmp or push sbb sub xor push pop popa push cltd mov fucom jmp add push sub imul scas mov in cld or inc push pop push xchg pushf test mov (bad) in repnz incl or sbb es cmp inc dec push pop pop imul xchg mov mov (bad) jmp clc incb and inc dec push pop pop imul test stos mov mov out hlt cli add push adc xor inc inc dec push pop pusha insw je addl rol rcr (bad) in repnz add push adc xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl dec push pop bound jbe (bad) mov scas mov ret aam loop out hlt sti add push adc and sub dec push pop pusha insw jae addb lods mov rol rcr (bad) in hlt cli add or sub dec push pop pusha data16 je addb cmpsl scas mov rol aam loope in hlt cli add or sub dec push pop pusha data16 jae jg mov mov mov (bad) in repz add or sub cmp dec push pop pusha data16 je addl rol aam loopne in repz add or sub cmp inc dec push pop pop gs jb jle mov mov mov fucom ljmp push sbb sub xor push pop bound jne orl ret aam (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fndisi(8087 call pop push adc and sub dec push pop pop gs jb jg mov mov mov fsubp ljmp pop push and xor ds dec push pop pop imul test stos mov mov fucom jmp add adc sbb cmp dec dec push pop arpl jbe (bad) mov scas mov rol aam loope out hlt cli add or sub dec push pop pop data16 jb jle mov mov mov fsubp jmp idiv add adc sbb cmp pop arpl jne (bad) mov scas mov rol rcr loope out hlt cli add or sub dec push pop pop data16 jb jg mov mov mov fsubp ljmp sbb and xor ds dec push push pop gs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp js test stos mov lret jmp sbb xor inc push pop gs jbe mov lret rcr loopne in repz incl sub inc dec pop arpl jbe orl scas mov ret aad fsub jmp nop/reserved sub popa insb ja (bad) lcall out cli add ds push pop imul mov hlt decl adc dec dec push pop bound jne orl rol rcr loopne in repz or sbb push pop insw jae mov int3 rcr out std or sub cmp gs mov (bad) rcr call sbb sub inc dec pop popa imul xchg mov rcl fucom jmp idiv add adc push and xor ds dec push push pop fs ja test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall mov fsub jmp or adc xor pop data16 (bad) mov scas mov ret aad loope out hlt sti add push adc and cs inc inc dec add bound jne orl scas mov ret aad loop out cmc cld add unpckhps sub aaa inc dec push pusha insb js mov int3 rcr in sti add unpckhps and cs inc inc dec push pop pusha insw jae jg mov mov mov fucom ljmp push sbb sub xor push pop bound jne (bad) mov lods mov rol aam loopne in repz add or sbb es cmp inc dec push pop pop imul test stos mov mov fucomp repz bndldx cmp pop pusha push pushf test mov icebp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std or inc dec pop fs mov ret iret (bad) repz add bndldx xor aas inc dec push pop pop gs jb jg mov mov mov fabs out hlt cli add or sub cmp inc dec push pop pop imul test stos mov mov fsubp jmp idiv add adc pop and inc dec pop data16 jae addb lods mov mov (bad) in repnz incl and inc dec push pop pop gs jb addl ror aad loop out cmc cld add push adc xor inc inc dec push pop popa outsb je (bad) mov scas mov ret leave rcl fsub jmp or adc xor push pop bound jbe orl mov mov fsub ljmp pop sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp sub ss pop fs ja test stos mov mov fsubp ljmp sbb and inc add pop popa push mov mov mov fsub jmp or pop sbb cmp pop fs ja test stos mov mov fsubp ljmp pop sbb ds dec push push pop fs ja test stos mov mov fsubp jmp clc incb and xor ds dec push pop pop imul test stos mov mov fucom ljmp sbb and xor ds dec push pop pop imul test mov mov fsubp jmp clc incb adc push and xor ds dec push push pop fs ja orl scas mov ret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec iret aad loop out cmc cld add unpckhps and das xor push pop popa push mov add iret (bad) fsub jmp or push sbb sub xor push pop bound jne orl ret aad loop out cmc cld add movhps sub ss dec dec push pop bound jne (bad) mov scas mov rol aam loope in hlt sti add push adc and sub dec push pop popa insl jae addb scas mov ror aad loope out hlt sti add or das cmp pop addr16 orl int jecxz cmc add adc sub ds push pop pop insw jae addb mov ljmp push sbb cmp dec dec push pop popa push lea lret jmp add sbb xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl popa insl jns (bad) fwait cmpsb mov lret ljmp xor imul mov ret lret fucom jmp or adc xor push pop popa outsb je mov enter out cmc decl pop pop sub addr16 xchg ret loop clc add sbb cmp push bound orb lret xlat loope repnz adc push push pop arpl ja orl mov mov fucom ljmp pop push and xor ds dec push push pop fs ja orl mov mov out std add adc sbb cmp pop arpl jbe orl scas mov ret aad loope out hlt sti add or sub dec push pop pop gs jb jg mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp aam out incb adc daa xor add pop arpl jg mov mov mov fsubp ljmp push sbb cmp pop bound jne (bad) mov scas mov rol aam loopne in repz add or sub dec push pop pusha data16 jae jg mov mov mov fucom ljmp push sbb sub xor push pop gs test into aam in incb cmp pop data16 mov ret int in cld add push and arpl jp mov mov fsubp jmp idiv add adc sbb cmp dec dec push pop bound jne (bad) mov scas mov rol aam loopne in hlt cli add or sub dec push pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall insb jb jle xchg mov mov out hlt cli add push adc and sub dec push pop pusha data16 jb jg mov mov mov fsub jmp or push sbb sub xor push pop bound jne (bad) mov scas mov rol rcr (bad) in repnz incb adc sbb cmp pop arpl jbe orl scas mov ret leave rcl fsubp ljmp pop sbb cmp dec dec push pop bound jne orl mov (bad) in repnz incl es cmp dec push pop pop data16 jb jg mov mov mov fucom ljmp push sbb cmp pop arpl jne (bad) mov scas mov rol rcr add out (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push cli add or sub dec push pop pop insl jae addb lods mov mov fsubp ljmp push sbb cmp dec dec push pop bound je addl rol rcr loopne in repz incl or sbb and inc dec push push pop fs ja orl scas mov ret aad loop out cmc sti add push adc xor inc inc dec push pop pusha insl jae addb lods mov mov fsubp ljmp sbb and xor ds dec push push pop imul test stos mov mov fsub call or adc xor push pop popa push xchg lods mov mov (bad) jmp clc incb adc sbb cmp inc dec push pop pop imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jle mov mov mov fucom ljmp push sbb sub ss dec dec push pop bound jne (bad) mov scas mov rol aad loope out hlt sti add push adc and cs inc inc dec push pop pusha insl jae addb mov enter hlt sti push adc and pop outsb jp (bad) lcall (bad) out hlt cli add or cmp imul test stos mov mov fucom ljmp xor push pop push movsb mov enter testl cmp pop gs test (bad) iret (bad) icebp cld pop adc xor push push pop arpl jbe (bad) mov scas mov rol aam loope in hlt decl push add sub dec push arpl ja mov into aad ljmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl adc sub cmp outsl jnp xchg fwait cmpsb mov (bad) rcr jmp sbb push pop outsw jnp (bad) lcall fucom ljmp adc ss dec dec push pop bound jne orl rol rcr (bad) in repz incl and inc dec push pop gs test stos mov mov fucom jmp or adc xor inc dec dec push pop popa insl je addb lods mov mov (bad) in repz incl and dec pop arpl test (bad) fsubrp idiv add adc sbb cmp pop bound jne addl rol roll fndisi(8087 call or adc and sub dec push pop pop imul test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp leave iret aad loop out hlt sti add or sub dec push pop pop gs jb jle mov mov mov fucom icebp std push or inc push pop pop gs mov (bad) rcr out sti pop adc dec pop arpl xchg ret in stc incl bndldx xor cmp pop arpl jbe orl scas mov ret leave iret (bad) fsub jmp or adc xor push pop popa push xchg lods mov rol aam loopne in repz add or sub cmp inc pop bound jbe orl mov mov fsub call or adc sbb sub ss dec dec push pop bound jne (bad) mov scas mov ret aad loop out cmc sti add push adc and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp dec push pop popa insl je addl ret aam loope out cmc sti add push adc and cs push pop bound jne (bad) mov mov mov fucom ljmp pop push and xor cmp pop fs ja test stos mov mov fsub jmp or adc xor inc inc dec push pop popa outsb je addl ror aad loope out hlt sti add push adc xor push pop bound jne (bad) mov scas mov rol aam loopne in repz add or sbb and inc dec push pop pop gs jb jp xchg lods mov rol rcr loopne in repz add or sub cmp inc dec push pop pop imul test stos mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec rcr fsubp jmp idiv add adc sbb cmp pop bound jne (bad) mov scas mov ret aad loop lock add adc sbb sub xor push pop bound jne (bad) mov scas mov rol aam loopne in hlt cli add or cs dec dec push pop bound sahf scas mov lret out clc add adc inc push pop outsl jns mov enter lock add sbb sub sti and jle xchg pushf cmpsb mov pop push and xor imul xchg lcall fsub in testl mov aaa inc dec pop outsb jns mov rcr out sti push adc daa xor jae mov (bad) rcr out std or push cmpsb fcomps push pop sti sub cwtl mov cmp dec push push popa insb js mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call int out decb adc dec push pusha imul cwtl movsb scas mov out cli add cmp imul sahf test loopne testl cmp pop gs xchg leave aam jmp add sbb xor dec push pop imul mov enter hlt decl adc dec push popa insb ja mov rcr ljmp cmp push pop push mov fsub repnz push and push mov rcr call and xor dec push pop imul mov enter ljmp cmp inc dec pop gs test mov lret jmp add movhps push pop push (bad) lea rcr jmp xor dec push pusha insl js nop pushf test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp icebp cld pop adc push pusha imul xchg lods mov lock pop adc sub inc dec push bound (bad) mov xlat jecxz stc add sbb xor dec push pusha imul fwait cmpsb mov lret in stc add inc dec push bound test ret rcr jmp push sub dec push pusha imul xchg mov (bad) hlt add pop and cmp pop push (bad) lea into (bad) in clc add adc dec pop fs xchg ror out std or sub inc dec pop addr16 mov iret (bad) repnz adc dec pop gs mov int jecxz cli push adc push arpl mov (bad) lock pop adc xor dec push arpl xchg int3 xlat jecxz cli push adc pop fs xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec fsub lock push adc push bound test lret (bad) loope stc add aas dec push arpl xchg int jecxz sti pop adc sub jo xchg into (bad) icebp cld or sub inc dec pop data16 mov aam jmp adc inc dec push push pop arpl ja mov lret rcl fsubp out clc add and pop fs js mov (bad) rcr out cld add aaa inc dec push pusha push jg cwtl mov (bad) icebp sti push adc push pop imul mov enter hlt decl pop and inc dec push pop imul ror loop clc add cmp outsl jne (bad) mov (bad) rcr out hlt decl pop and ss dec push pop bound orl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl in sti pop push adc sub dec push pop push mov into (bad) fsub jmp pop sub dec push arpl xchg leave aam in clc add sbb xor inc push pop imul scas mov hlt decl pop and data16 xchg leave aam ljmp cmp pop imul ror loop cmc add push and pop addr16 mov (bad) lock or sub inc dec pop data16 mov fxam lock or sub inc push pop addr16 mov iret (bad) repnz adc dec push pop imul mov ror loopne cmc sti add push and inc dec push pop arpl xchg mov ljmp sub pusha insb jb mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc into (bad) repnz push and cmp push movsl mov leave (bad) jecxz cli push adc sub dec push pusha imul xchg mov jmp sbb pop bound orl shl out cli push adc xor dec push popa insl js mov aam in testl dec push pusha insb ja (bad) fwait movsl mov (bad) rcr out add inc dec pop add jl xchg sahf test loope stc add sbb xor jns nop fwait movsl mov (bad) out cli add sbb sub push mov fxam icebp std or dec pop gs mov rcr out decl push and push mov fucomp repz adc sub inc dec pop data16 mov rcr call and cmp addr16 mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl repnz adc dec pop push mov fsubr repz pop and addr16 mov (bad) icebp cld pop adc sub inc dec pop data16 mov rcr call and ss dec pop gs mov (bad) icebp std or push pop addr16 mov into fadds in cli add sbb sub aaa inc dec pop arpl jbe (bad) mov mov int3 aad in idiv add adc and cmp pop data16 xchg mov (bad) rcr call and xor push pop outsb js mov int3 (bad) loope clc add sbb cmp push pop gs mov (bad) rcr out std or sub aas dec push pop imul mov (bad) rcr out decb adc sub inc dec pop gs (bad) lea mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc iret (bad) repnz push adc sub cmp push pop push xchg mov xlat loope out testb sbb cmp push pop imul stos mov ror loop testb adc pop xor dec push pop push mov frstpm(287 icebp cld or push sub inc dec pop fs xchg int3 (bad) fucom add cld or sub inc dec push bound test enter repz adc dec pop addr16 mov rcl loop sti add inc dec pop fs xchg enter testb sbb pop imul (bad) rcr jmp and inc dec pop data16 mov ftst lock or pop sub inc dec pop outsl jnp nop xchg mov iret (bad) fsub jmp push sub pop push orb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call fnsetpm(287 out cld add sub aas dec push pop imul mov rcr out decb adc dec pop push movsl mov lret xlat jecxz sti pop adc sub inc push pop imul cwtl mov frstpm(287 lock add dec pop bound (bad) lcall add cmc add and cmp pusha imul fwait cmpsl mov enter testl ds push popa insb js nop popf test mov stc add sbb cmp pop imul ror loope testl cmp pop imul mov testb pop and bound mov rcr out decb adc sub inc dec pop addr16 mov rcr call and cmp pop imul (bad) rcr call and cmp pop imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call rcr in stc add sbb xor dec push pusha imul cltd movsl mov enter testb sbb cmp push pop imul lcall out cli add aas dec push popa insb js (bad) fwait cmpsb mov enter clc add sbb popa add xchg into (bad) repnz or sub inc dec pop fs mov (bad) repnz adc push pop push mov fsub repnz adc push pop pop gs jbe lea mov fsub in clc add and dec pop arpl (bad) lea (bad) int (bad) out stc add sbb pop outsl jns mov leave rcr call and outsl jl nop lcall in cli add cmp push pop gs mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call (bad) icebp sti push adc xor dec push popa outsb jns (bad) fwait cmpsl scas mov out repz pop adc sub cmp push mov int in stc add das cmp pop data16 (bad) mov ror fsubp jmp cli push adc dec push pop popa insb jns (bad) cltd movsb mov (bad) rcr jmp add inc dec pop data16 mov lret in testl das cmp push popa insb ja mov dec pop gs mov ftst out cli push adc dec pop gs xchg (bad) rcr out cld pop adc pop outsl jp xchg pushf test mov stc add sbb xor ja mov rcr ljmp cmp push pop push (bad) mov rcr in stc add sub ss (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call je mov ret loop idiv add sbb pop pusha push xchg lahf stos mov lret fucom repnz adc dec push popa insl ja mov aam loope cli pop adc sub jae mov rcr call push sub dec push data16 lea into (bad) icebp decb adc sub dec push pusha imul pushf test mov cli add ds push popa insb js (bad) fwait cmpsb mov lret in clc add sbb xor jno test leave aam jmp and data16 xchg int3 fsub lock or dec pop arpl test ret int in cld pop adc push popa insb ja mov aam in testl ds push pusha insb js (bad) pushf cmpsl mov leave aad (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp in testl cmp pop imul mov testb sbb xor js (bad) lcall jmp and push popa insb js nop pushf cmpsl mov lret xlat sbb inc push pop push mov fxam icebp std or sub inc dec pop data16 mov iret (bad) repz pop and cmp pop push fwait movsl mov (bad) iret aad loop repnz or xor push pop bound test mov out cld push adc dec push pop pop imul mov lret jmp sbb sub addr16 test ret jecxz cli add push sub cmp push pop imul mov hlt add adc dec push pusha imul xchg lahf test loopne testl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp jb mov mov lret ljmp sub inc dec pop fs jae test lret fucomip cmc add adc inc dec pop gs xchg ror loope hlt sti add adc sub dec push pusha insb js nop pushf test mov testb sbb pop push mov into (bad) icebp decb adc dec pop arpl xchg enter hlt decl pop and cmp pop push orl lock push adc push pusha insb ja lea rcr jmp and push lcall jmp add sbb xor ja (bad) fwait cmpsl mov leave aad in clc add sbb xor dec push pusha push jge xchg popf mov enter hlt decl push sbb sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall jno jle xchg sahf test (bad) out testl cmp dec push push pop push (bad) lea fsub repnz pop and cmp pop imul mov cld or and cmp gs xchg (bad) fsubr testl xor jo test (bad) rcr ljmp cmp pop imul cltd movsb mov enter testl inc dec push outsl jnp xchg sahf stos mov int jecxz stc add sbb push pop push sahf stos mov lret jmp add sbb xor jp add xlat loop stc add sbb sub inc dec pop arpl xchg lret (bad) loope clc add sbb xor push bound xchg into (bad) icebp std or dec pop addr16 mov into (bad) repnz or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call sub inc dec pop data16 mov rcr jmp and cmp addr16 mov rcr out decb adc push pop imul mov cmc add inc push pop imul (bad) rcr out decl push and cmp pop imul mov testb sbb cmp push pop push (bad) mov aam jmp add sbb xor dec push arpl xchg int3 xlat loop cmc decl adc sub aaa ds dec pop data16 jle mov mov les rcr out decb unpckhps sub dec push pop push popf mov leave aam ljmp aaa inc dec push pop push lcall jecxz cli push adc sub cmp push pusha push jg xchg mov (bad) loope testb sbb cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall jl xchg pushf cmpsl mov (bad) out sti pop adc push bound test mov jecxz sti add ss jno mov ror loope idiv add and inc dec push pop outsl jp nop fwait cmpsb mov mov jmp decl sbb and push pop push lahf stos mov rcr out sti push adc pop arpl orl rcr jmp pop and cmp push pop addr16 mov int in cli add xor dec push bound xchg lret xlat in testb push and cmp pop data16 mov lret (bad) loope clc add sbb xor dec push pusha imul lcall in clc add sbb xor js (bad) lcall jmp add sbb xor inc push pop push cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl mov in lock add sbb push pop gs xchg mov repz sbb es arpl addl fucomi cmc add and imul ror in sti pop adc sub push mov fsub out clc add and pop addr16 mov into (bad) out stc push adc pop data16 mov int in cld pop adc add inc push pop imul mov testb push and xor jno test (bad) rcr ljmp cmp push mov fsubrp hlt decl adc sub imul mov repz adc sub inc dec pop data16 mov iret (bad) icebp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std or push pop addr16 mov iret (bad) repz pop and cmp pop addr16 mov rcr ljmp cmp jbe lea rcr jmp and cmp pop push (bad) mov aad in testl cmp ja mov aam in stc add sbb xor dec push bound test lret xlat jecxz sti pop adc sub inc dec push arpl test ret into (bad) icebp std or sub inc dec pop push mov fsubr cmc add adc dec push pop insw je test mov (bad) out clc add sbb das cmp dec push pop push lcall fsub jmp sbb xor dec push pusha push jge xchg fwait cmpsb mov (bad) into fsub in testb sbb ds push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall jae mov int3 xlat loop testb pop and outsb ja mov iret fxam out cli add sbb pop imul ret int3 xlat in cmc sti add push sbb das cmp dec pop outsb je test enter out decl adc sub cmp push pusha push orb (bad) in idiv add adc push pop fs ja (bad) cltd mov rcr jmp and cmp gs xchg lret jmp add sbb push pop insb ja lea iret (bad) repz adc dec push popa insb js nop pushf test ror loop cli push adc xor inc push pop gs test leave aad ljmp aaa inc dec pop addr16 mov into ftst lock pop adc sub inc dec pop gs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl xchg int in cld or pop sub inc dec pop gs xchg int in hlt decb pop push and xor ds push pop push jle xchg sahf movsl stos mov lret aad ljmp sub bound jne xchg lret fsubp out stc push adc push pusha insb ja mov (bad) loop sti pop adc sub insb js nop pushf stos mov vpaddusb repnz or sub inc dec push pop ja xchg popf cmpsl mov (bad) rcr ljmp cmp pop fs mov iret fsubr cmc add and push mov fsubrp clc add sbb xor jae mov int loop clc add sbb xor inc push pop push mov fucomi hlt decl and cmp pop addr16 mov (bad) in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push std or sbb push bound test int in sti pop adc sub inc dec pop gs mov rcr out decl adc sub inc dec pop data16 mov (bad) repz adc push pop imul mov repnz adc dec pop data16 mov rcr call and cmp dec push pop imul (bad) aam ljmp cmp push pop imul cltd movsl mov (bad) rcr ljmp ds push bound test (bad) rcr jmp and pop imul cltd movsl mov lret out stc add inc dec push bound mov lret rcr in cld add and inc push pop imul cmpsl lods mov enter repnz adc cmp dec push pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp jg xchg mov aad jmp sbb push pop data16 mov (bad) loop cli add sbb xor inc push pop data16 mov lret jmp add push and inc dec push bound mov rcr call sbb dec push pop pusha push orb int fxam lock add xor dec push pop push orl loop out clc add sbb cmp pop imul mov mov icebp sti push adc sub inc dec pop data16 xchg lret (bad) loop stc add sbb cmp pop imul scas mov repnz adc push pop gs test lret out cli add inc dec push bound (bad) lea into (bad) lock pop adc dec push pusha insb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) js mov aam jmp add dec push pop push (bad) mov rcr ljmp cmp pop push orl add and xor data16 jae jg xchg pushf test mov ljmp ss dec push popa insb jbe add mov (bad) rcr call pop sbb push pop bound mov int in std or and cmp pop imul popf stos mov iret (bad) repz adc dec pop outsl jns lea fsubrp repz push and outsl jns (bad) fwait cmpsl mov lret (bad) out sti pop adc sub outsl jp xchg sahf test jecxz cli push adc push bound test (bad) rcr jmp add push and inc dec pop fs xchg lret in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc add sbb xor dec push arpl test (bad) in clc add sbb pop push orl repz push and gs mov fsub hlt decl push and cmp pop addr16 mov roll fsubrp cmc add and cmp pop imul lcall in clc add sbb pop push orl cmc add sbb xor dec push bound test aam daa cmp pop addr16 mov rcr call and cmp push pop push orl add and push add jp xchg popf test ror in cld pop adc sub inc dec pop data16 test ret lret fsubp repnz or sbb and inc dec push push bound orl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc enter lock pop adc dec push push pop addr16 xchg lret ljmp sub pop push pushf cmpsl scas mov in clc add adc sub cmp jno xchg (bad) rcr out std or push sub aas dec push pusha push jg xchg lahf test fucomip testb sbb cmp pop push nop xchg sahf movsb stos mov mov fsub jmp or adc and sub dec push pop pop gs jb jle mov mov mov fucom jmp or adc xor cmp dec add bound jne addl mov (bad) jmp clc incb adc push and xor cmp pop bound jne (bad) mov lods mov rol rcr (bad) in repnz incb adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call sbb cmp pop arpl jne (bad) mov scas mov rol rcr (bad) in repnz incl and xor cmp pop bound jne (bad) mov scas mov rol rcr loopne in repnz incl and xor cmp pop bound jne (bad) mov scas mov ror aam loope in repz add or sbb and inc dec push push pop arpl jbe (bad) mov scas mov rol rcr loopne in repz add or sbb and inc dec push push pop arpl jno jle add stos mov mov fsub jmp or adc and cs inc inc dec push pop pusha data16 jb jg mov mov mov fsub jmp or adc and sub dec push pop pusha data16 jb jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl stos mov mov fsub ljmp adc xor inc inc dec push pop pusha insw jae jg mov mov mov fsubp jmp idiv add adc sbb cmp dec dec push pop bound je adcl rcl fsub jmp or adc xor push pop pusha insl jae addb lods mov ror aad loope out hlt cli add or sub dec push pop pop imul test test ret lret xlat fsubp ljmp push sbb sub xor push pop bound jne orl rol rcr loopne in repnz incl and xor cmp pop arpl jbe (bad) mov scas mov ret aam loope in hlt cli add or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall pop and inc dec push push pop fs jbe orl scas mov rol aam loope in hlt cli add or sbb and inc dec push push pop fs jbe orl scas mov rol aam loopne in repz incl or sub cmp inc dec push push pop fs ja orl scas mov ror aam loope in repz add or sbb and inc dec push pop pop fs ja orl scas mov ret aad loope out add sti add add push sbb sub xor push pop pusha insl jae addb lods mov mov fsubp ljmp push sbb sub xor push pop popa insl jae addb stos mov mov fsubp jmp idiv add adc sbb sub xor push pop popa outsb je addb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl lods mov mov fsubp jmp clc incb adc sbb cmp dec dec push pop popa push xchg lods mov mov fsubp jmp idiv add adc sbb sub ss dec dec push pop bound je addl mov fsubp jmp add sbb dec push arpl jge xchg lahf cmpsb lods mov (bad) rcr loope in hlt cli add or sub cmp inc dec push push pop fs ja jle mov stos mov mov fucom jmp idiv add adc sbb cmp dec dec push pop popa outsb je addb lods mov mov fsubp ljmp push sbb sub xor push pop popa insl je mov scas mov rol aam loope in repz add or sub cmp inc dec push pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall insb jb jg mov mov mov fucom ljmp push sbb sub xor push pop popa push xchg lods mov rol rcr loopne in repz incl or sbb and inc dec push push pop fs ja orl scas mov ret aad loop out cmc sti add push adc and cs inc inc dec push pop pusha data16 jae jg mov mov mov fadds loopne in repz incl or sbb es cmp inc dec push pop pop imul test stos mov mov fsub call or adc and cs inc inc dec push pop popa insl je addb lods mov mov fsubp jmp pop push and aas dec pop imul lret hlt add push sub inc push gs mov out std (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl sbb xor push pop insb jns xchg mov call sub jb mov out std or push pusha outsb jnp xchg movsl mov iret fsubr clc push adc xor adcl in decl push pusha outsb jl cwtl cmpsb mov shl out cld or and push xchg jmp das cmp adcl in add adc sub push scas mov add sbb arpl mov fucomip sti or and inc dec pop push test fsub hlt add push sub dec push gs mov lock or daa xor jp xchg movsb mov into fsubr clc push adc xor adcl in add sbb arpl mov fucomip sti or and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp xchg out add pop sub jb mov loop decb daa xor jnp xchg movsb mov into fucomi testl (bad) (bad) popf stos mov decb sub inc push popa outsb jl cwtl cmpsb mov iret fucomp stc pop adc pop push lods mov add sbb aaa inc push popa outsl jl cwtl cmpsb mov add loopne cld add sub inc push bound mov fucomip sti or and inc dec pop imul lret hlt add sbb arpl mov loope cld or es dec pop imul mov call sub jb mov out std or es push pop insb jns xchg movsl mov into fsubr clc add dec pop data16 nop sahf lods mov decl sub inc push pop insl jnp xchg movsl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc into fsubr clc push adc das ds pop push lods mov add sbb cmp popa outsl jge cltd cmpsl mov rcr in sti or and inc dec pop push test fsub cmc add pop sub jb (bad) popf stos mov decb xor je cmpsl mov sub jno xchg mov fsub hlt add push sub add push mov call cs pop data16 (bad) popf stos mov decb sub inc push pusha outsb jl cwtl movsl mov iret fucomp stc pop push and inc dec pop push xchg out add pop sub dec push fs mov out std or daa xor jp xchg movsb mov iret fucomp stc pop adc pop push scas mov add sbb fs lea loope std or daa xor push pop insb jp xchg movsl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec fsubr clc push adc xor dec pop addr16 xchg lahf lods mov add sbb bound mov fucomip sti or and inc dec pop imul mov out add pop sub jb mov out cld or es push pop imul mov call and aas dec add jns xchg mov call sub jae (bad) pushf stos mov std or daa xor jp xchg movsb mov iret fsubr clc push adc xor adcl in decl push pusha outsb jl cwtl cmpsb mov rcr in cli or and aas dec pop push xchg out add push sub dec push fs lea loopne cld or xor pop imul mov call cs pop data16 (bad) popf stos mov decb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp ss push pop outsb jl cwtl cmpsb mov rcr in cli or and aas dec pop push lods mov add sbb arpl mov testl (bad) (bad) popf stos mov decb sub jl cwtl cmpsl mov rcr in cli add sbb xor inc push popa outsl jl cwtl cmpsb mov iret fucomp stc pop adc pop imul lret repz sbb arpl lea loopne cld or xor pop imul mov out add pop sub jb mov loope decb sub inc push popa outsl jge cwtl cmpsb mov rcr jmp pop adc pop push lods mov add sbb cmp popa outsl jge cltd cmpsb mov rcr in sti or and inc dec pop push test fsub hlt add push sub inc push arpl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall fucomip sti or and push xchg (bad) testb sub jb mov out std or es push pop imul mov call sub je nop popf stos mov repz adc sub jae mov out std or es push pop insb jns xchg mov call das cmp (bad) nop sahf lods mov decl sub inc push pusha insl jnp xchg movsl mov into fsubr clc push adc das cmp (bad) nop sahf lods mov add sbb cmp popa outsl jge cltd cmpsb mov rcr jmp pop adc pop push lods mov add sbb cmp arpl lea loopne cld or and push xchg out add and jae mov sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl inc pop jp movsb mov es test (bad) cmc add pop cs pop data16 nop sahf lods mov add sbb cmp arpl mov lock sub inc add jle mov lock sub inc push pop insl jnp xchg movsl mov into fsubr clc push adc xor dec pop imul lret hlt add push sub dec insb cmpl repz inc pusha jnp mov call insl xchg daa inc pop jne mov call insb xchg and jo mov and movsb mov aas pop je test fnop adc inc popa jnp mov out sbb push in pop and rcr movaps jbe stos ret (bad) adc inc pusha jp mov jecxz sbb dec sbbl push insb xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) out or cmp jno cmpsb rcr adc inc bound int3 out sbb push outsl mov sub jl mov jmp jns mov out pop cmp movsl rcr push xor cltd mov out sbb push outsb mov sub mov push sub cmpsb mov xor arpl stos rcr or ss data16 scas vpmuludq cmp push cltd mov loope adc inc pop je mov sbb dec fs stos ret or cmp sbbb and cltd mov fcomip push es insl test sub jno mov sbb dec popa js stos rcr pop pop ss data16 scas (bad) fdivp push es insb sbbl sub jo lahf mov out adc inc pop jbe movsl mov xor jns test and push addr16 (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp and push insb test sub jo mov sbb dec fs scas (bad) fdivp push daa inc pop jo lahf mov in adc nop test xlat out push push ss data16 scas (bad) fdivp or test adc inc pop jno mov sbb dec gs scas (bad) fcomip push es push outsb xchg adc lea sbb cwtl scas enter daa inc push outsb xchg adc inc pop jae mov sbb dec arpl test pop ss data16 lods (bad) or test sub jb mov pop aaa dec addr16 scas (bad) fcomip adc inc pop outsl mov sbb dec gs mov loop adc inc pop jo lahf mov das inc pop jbe movsb mov xor js cmpsl mov ss gs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call and push outsl xchg adc inc pop je mov sbb dec arpl test and push addr16 lods vpmuludq and push imul adc inc pop jne movsl mov xor fs stos (bad) fdiv or cmp sbbl sub jb mov sbb cwtl mov loopne adc inc pop jae movsl mov aas push outsl mov sbb dec bound test cmp pushf mov loop adc aas push jno mov sbb inc pusha js test xlat out push sbb xchg stos rcr or aaa dec data16 and push insb test adc pop jb mov sbb inc pop ja cmpsb mov xor stos ret or aaa dec data16 scas vpmaddwd (bad) lcall inc pop jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl (bad) adc mov pop xor ja cmpsb mov xor bound test push ss addr16 lods (bad) fdiv or cmp sbbb es push outsb xchg adc inc pop jno mov push sub movsb mov xor stos ret fdiv or cmp sbbl outsb xchg push das dec popa jns test and push imul sbb dec pop js cmpsl rcr or cmp (bad) fwait mov jecxz adc pusha js test and push imul push cs popa js test xlat out pop pop ss addr16 scas (bad) loopne (bad) inc pop jo sahf mov out push cs pop jne movsb mov xor stos ret fdiv or xchg push cs pop jne movsl mov xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp stos ret or cmp mov out pop das inc pop jbe movsl mov ss addr16 lods (bad) fdivp push es mov jecxz adc inc pop jno lahf mov das inc pop ja movsl mov xor jge lods (bad) fdiv or cmp mov jecxz adc pop jb mov sbb dec pop ja cmpsl rcr or cmp sbbb sub outsl xchg adc inc pop jno mov sbb dec pop ja test xlat out push push xor lods ret (bad) or aaa push imul pop jbe cmpsl rcr or lahf mov xor jns test in or pushf mov loop adc inc pop jno movsl mov xor stos ret or cmp jg scas (bad) fcomip adc aas push insl test adc inc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall mov pop xor ja movsl mov aas scas fcomi or ss bound cmpsb mov sub pop jo mov loopne std or daa xor push pop insb jge cltd cmpsb mov rcr in cli or and aas dec pop imul lret hlt add push sub inc push arpl lea loopne cld or es jnp xchg movsb mov into fsubr clc add dec pop addr16 nop sahf lods mov decl push popa outsb jl cltd cmpsl mov shl out std or sub inc push pop insl jnp xchg movsl mov iret fucomp clc push adc pop push test (bad) cmc add pop sub jb mov repnz sbb aaa inc push popa jo mov fucomip sti or and push xchg call cs pop addr16 xchg lahf lods mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec xlat in add sbb arpl lea loope std or daa xor jnp xchg movsb mov into fsubr clc push adc xor dec pop imul lret (bad) hlt add push sub dec push fs (bad) sahf lods rcr or xchg stos (bad) loopne push pop cmp jp mov shl out std or daa xor scas lret cmc add pop sub jae (bad) popf lods mov pop sbb xchg mov out sbb outsb mov and push push fwait mov loopne adc inc pop jno cltd test (bad) shl out cld or and imul mov call xor dec pop jo test iret jmp pop insl xchg sbb inc pop ja mov movntps jae cmpsb mov xor jg cmpsb rcl add jge mov (bad) adc push pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp mov fucomip cld or daa xor jl cltd cmpsl mov rcr out std or sub inc push bound mov loopne cld or es mov jmp xor dec pop push scas mov push adc xor dec pop push xchg call das cmp test fsub hlt or cmp mov in sbb cmp outsb test jmp das ds pop push scas mov add pop sub je nop sahf lods mov add push sub dec push fs mov icebp decl push bound mov loopne cld or es push pop insl jl cwtl cmpsb mov shl out cld or es mov das dec push gs mov fnop adc cmp outsb mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) out std adc inc pop jb movsb mov xor jns scas ror hlt push sub dec push gs (bad) pushf stos mov decl sub inc push popa outsb jl cwtl cmpsl mov rcr in sti or es jp xchg movsl mov iret fucomp stc pop push and inc dec pop push xchg call cs addr16 xchg mov out add dec pop push scas mov add and cmp test fucomi testl test fsubr clc push adc xor dec pop push scas mov add dec pop push scas mov add and cmp test fucomi testl dec pop imul int ljmp dec pop push xchg fsubr clc pop push and inc dec pop insb jnp cltd (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp lock sub inc push arpl lea jecxz decl push popa outsl jge lcall cld or daa ss push popa jo lea loope std or sub inc push popa outsl jge cltd cmpsl mov shl out cld or daa xor push pop insl jnp xchg movsl mov iret fsubrp cld or sub inc push pusha outsb jl cwtl cmpsb mov rcr in sti or es push pop outsl jge cltd cmpsl mov shl out cld or es jl cwtl cmpsb mov shl out cld or daa xor jl cwtl cmpsb mov rcr in sti or es push pop insb jp xchg movsl mov rcr in cli or and insb jl cltd cmpsl mov rcr in sti or and insl jp xchg movsb mov iret fsubrp cli or and inc dec pop imul mov ljmp dec pop imul int3 fucompp testl dec pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp test (bad) testb cs pop data16 nop sahf lods mov add pop sub je nop lahf scas mov add pop sub jae nop sahf lods mov add sbb fs mov in add sbb fs mov lock pop jo mov adc inc pop jne pushf mov call pop insl jnp cwtl cmpsb mov rcr notl sub orl or push popa outsb jge mov sbb dec push out pop cmp sahf mov xor fs stos ret fcomi or cmp arpl lea loope cld or daa xor jl cltd cmpsl mov shl out lcall xor jbe test fucomi stc push sub test push daa aas pop je lcall (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp hlt or sahf mov in sbb aas pop jae sahf mov jmp push sub jno mov or daa xor jl cwtl cmpsb mov rcr in sti or and push xchg fucomi testl test xlat in pop and inc push pusha outsb jge cltd cmpsl mov rcr in cli or and inc dec pop push xchg fucomi testl adcl in add sbb cmp arpl mov push pop cmp sbbl and pop push scas mov add push sub dec push fs mov lock sub inc push pusha outsl jge lcall std or daa xor jnp xchg movsl mov rcr in cli or and inc dec pop push xchg call cs pop push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl lret (bad) cmc add pop das inc bound mov sbb cmp (bad) xchg mov in or xchg adc cmp mov adc pusha jnp pushf stos mov and push xchg (bad) cmc add pop sub dec push fs lea loop decb sbb xor jp xchg movsl mov into fucomp stc or and aas dec pop push scas mov add push scas mov add and cmp adcl in add push cs pop addr16 xchg mov out add push sub dec pop addr16 xchg mov in add push sub dec push fs lea jecxz decl push pusha outsb jge cwtl cmpsb mov rcr in cld or sub inc push popa jo lea lock (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp aaa inc push bound mov lock push bound mov in add sbb cmp arpl mov in add pop cs pop data16 xchg lahf lods mov add pop sub je nop sahf lods mov add sbb fs (bad) popf lods mov decl sbb arpl lea loop decb push bound lea dec gs fwait test (bad) out std or daa xor push pop insl jnp xchg movsb mov iret fucomp stc or pop push test ljmp dec pop push scas mov add push sub dec push fs mov lock sub inc push popa outsl jge cltd cmpsl mov add jecxz decb sub inc push pusha outsl jl cwtl cmpsl mov rcr in cli or es (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl pop imul movsb mov into fsubr clc push adc pop imul mov ljmp dec pop push lods mov add push sub dec push gs (bad) popf stos mov add sbb arpl lea loop decl push bound mov loope std or daa ss push pusha outsb jl cwtl test (bad) shl out cld or sub inc pusha jne test sbb dec arpl mov push xor arpl mov (bad) movaps data16 xchg mov out add sbb arpl lcall dec arpl int3 out sbb data16 sub jb mov adc pop imul mov into fsubr stc pop adc pop imul lret add xor pop js lods ret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call loop adc aas push jo mov or jle scas enter daa aas push imul or inc push pop gs xchg ret in cld add adc sbb sub ss dec dec push pop bound jne orl rol rcr (bad) jmp clc incb adc push and inc dec push push pop fs jbe orl ret aad loop out cmc sti add push adc and sub dec push pop pusha insw je addb lods mov mov fsubp jmp idiv add adc sbb cmp dec dec push pop bound jne test (bad) iret (bad) icebp cli push adc and ss dec dec push pop popa add jne (bad) mov lods mov rol rcr (bad) jmp idiv add adc sbb cmp dec dec push pop bound je cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl cmpsb lods mov mov fsubp ljmp push sbb sub xor push pop pusha insl je addb lods mov mov fucom ljmp adc inc dec push pop push pushf mov rcr ljmp xor outsl jp nop cwtl movsb mov enter out cld add adc push push pop push xchg lcall (bad) int (bad) out repz add or sbb and inc dec push pop pop imul test stos mov mov fucom ljmp pop push and xor cmp pop arpl jbe (bad) mov nop xchg pushf mov rol aam loopne out hlt sti add push adc and sub dec push pop popa outsb je addl mov loopne in repz add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl or sbb es dec push pop pusha data16 jae jg mov mov mov (bad) in repnz incb and xor cmp pop fs ja orl mov mov fucom ljmp pop push and xor cmp pop arpl jbe orl scas mov ret aad loop out cmc sti add unpckhps and cs push pop popa outsb je orl ret (bad) fucom jmp or push sbb sub xor push pop fs ja orl scas mov ret leave rcl fsub jmp add es cmp inc dec push pop pop imul test lods mov mov (bad) jmp clc incb and xor ds dec push push pop imul test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp lret rcr fsubp jmp idiv add adc sbb cmp pop arpl ja orl scas mov ret aad loope out cmc sti add movhps sub xor push pop bound jne addl rol rcr loopne in repz incl and inc dec push pop pop gs jb jg mov mov mov fucom ljmp pop sbb cmp pop imul test stos mov mov (bad) jmp clc incb and inc dec push add insl jae addb lods mov mov loopne in repz incl or sbb and inc dec push pop pop imul test stos mov mov fucom jmp or pop sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp pop arpl jbe orl mov mov cmc add adc xor inc push pop addr16 (bad) mov lret jmp or adc ss dec push arpl jg mov mov mov fucom jmp or pop and ja lea rcr jmp add inc push pop push sahf test fsubrp repz pop adc xor dec push popa push xchg lods mov rol rcr loopne in repz incl das cmp push bound xchg mov repz add sbb sub inc dec pop pop data16 mov (bad) rcr call sbb dec pop gs xchg ret in cli add or sub cmp inc dec push pop pop imul test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call mov ret leave rcl fsub jmp or adc and sub dec push pop add outsl jne test mov fnclex call or adc and sub dec push pop pusha data16 jae addb lods mov rol rcr (bad) in repnz incb and xor ds dec push pop pop outsl jp mov rcr jecxz cli add adc sub ss dec dec push pop popa push xchg lods mov rol rcr (bad) in repnz incl and inc dec push pop pop imul test test leave iret aad loop out cmc sti add push adc and sub dec push pop pusha data16 jae jg mov mov mov fsubp ljmp and ds push pop push jle mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec xlat jecxz hlt add push sub inc dec push pop addr16 xchg mov icebp std or and push pop arpl ja orl mov mov fsub jmp or adc xor push pop bound jne (bad) mov scas mov ret leave rcl fsub jmp or adc xor push pop bound orl mov mov (bad) in repnz incl and inc dec push pop pop imul test mov rol rcr loopne in repz add or sub dec push pop pusha data16 jae jg mov mov mov (bad) jmp clc incb and xor ds dec push pop pop insw jae orl ret (bad) fsub jmp or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call sbb ds dec push push pop add jb jg mov mov mov fsubp jmp idiv add adc push and xor aas inc dec push pop pusha data16 jae jg mov mov rol aam loope in repz add or sub dec push pop pusha data16 jb addb lods mov mov fsubp jmp clc incl and inc dec push push pop fs js test stos mov mov (bad) in repnz incl and inc dec push pop pop gs jb jg mov mov mov fucom ljmp pop sbb cmp pop bound jne (bad) mov scas mov ret aad loope out hlt sti add push adc and cs push pop bound jne (bad) mov scas (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl aad loop out cmc sti add push adc xor push pop popa push mov scas mov ret aad loop out cmc sti add push adc xor inc inc dec push pop popa insl jae addb lods mov rol rcr loopne in repz add or sub cmp dec push pop popa insl jae addb lods mov rol rcr (bad) in repz incl or sbb and inc dec push pop pop imul test stos mov mov fsub jmp or adc xor push pop imul mov leave aam ljmp xor jp mov scas mov rol (bad) repnz adc push and inc dec push push pop arpl jbe orl stos mov (bad) rcr out (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push cld push adc xor dec pop arpl xchg int3 fsub out stc add sbb sub pusha push jle xchg lahf test fucom icebp clc incb and xor cmp pop arpl ja orl mov in clc push adc sbb push pop data16 orl (bad) call sbb xor dec push pop push jge xchg sahf movsl scas mov lock or sbb cmp pop fs addb lods mov mov fsubp jmp clc incl and xor cmp pop arpl jbe (bad) mov scas mov rol aam loopne in repz add and cmp dec push pop pusha insl jae addb lods mov mov fsubp jmp clc incb and sub cmp inc dec push pop pop imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl stos mov mov fucom icebp cld push push sbb cmp pop arpl jle xchg pushf movsl lods mov mov (bad) in repnz incb and inc dec push pop pop imul test stos mov mov fucom ljmp push sbb sub xor push pop bound jne (bad) mov scas mov ror aam loope in hlt cli add or sub cmp inc dec push pop pop imul test mov testb or ds push pusha imul xchg popf test mov lock add sbb cmp push bound orl loop out cmc sti add or sub dec push pop pusha data16 jb jg mov xchg lcall (bad) int3 rcr (bad) in repz incl and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) aas inc dec push pop pop imul test test enter jecxz lock or sbb and inc dec push pop pop data16 jb jg mov mov mov fsubp jmp clc incb adc pop and inc dec push pop pop gs jae addb lods mov mov (bad) in repz incl and inc dec push push pop fs ja orl mov mov fsubp ljmp pop sbb cmp pop arpl jbe (bad) mov scas mov ror aam loope out hlt sti add push adc and cs inc inc dec push pop pusha insl je addl rol aam loope out hlt add add adc push and xor aas inc dec push pop pop imul test stos mov mov fucom (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp push sbb cmp pop arpl ja test test leave iret (bad) fsub jmp or adc xor push pop popa insl je addl rol rcr (bad) in repnz incl and inc dec push push pop fs ja orl mov mov fucom ljmp push sbb sub xor push pop popa push xchg lods mov rol rcr loopne in repz incl or sbb es cmp inc dec push pop pop gs jae addb lods mov mov (bad) jmp stc incl and xor cmp pop pop data16 jb jg mov mov mov fucom ljmp pop sbb cmp pop fs ja (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jge mov mov mov fucom jmp or push sbb sub ss dec dec push pop bound jne (bad) mov scas mov rol aam loope out hlt cli add push adc xor inc inc dec push pop popa insl jae addb lods mov mov (bad) in cmc add and pop imul mov leave rcr in clc add adc xor push pop data16 mov mov fcomp in repnz incl and dec push pop push pushf test out std or sub inc dec pop gs test (bad) rcr out repz adc sub cmp jo (bad) mov scas mov rol rcr loopne in repz incl or sbb and push pop outsl jp xchg sahf movsl lods mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec aad out decb adc and pop push xchg lahf test fsubrp hlt incb adc sub cmp outsl jp xchg pushf mov (bad) loope clc add and inc dec push push pop imul test mov mov fucom ljmp push sbb sub ss dec dec push pop bound je addl rcr loopne in repz add or sbb and inc dec push pop pop imul test test leave iret aad loop out idiv add unpckhps and cs push pop popa insl jns nop cwtl mov rcr in cld push or pop sub inc inc dec push pop pusha data16 jae jg mov mov mov fucom jmp or push sbb sub xor push pop popa outsb je addl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call mov mov fsubp ljmp push sbb sub ss dec dec push pop bound je orl rol rcr loopne in repnz incl or sbb xor inc dec push arpl xchg mov repnz add cmp push pop imul xchg mov rcr jmp and xor cmp outsb je addl rol rcr loopne in repz add or sub dec push pop pop imul test lods mov mov fsubp jmp clc incb pop es cmp inc dec push push pop fs ja xchg cltd lahf cmpsb lods mov mov (bad) jmp clc incb and inc dec push push pop fs ja test stos mov mov fsubp jmp clc incl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call sbb and xor cmp pop fs ja test test leave iret (bad) fsub jmp or push sbb cmp dec push push pop bound jbe orl mov mov fucom ljmp pop push and xor cmp pop fs ja test stos mov mov fucom jmp or adc xor push pop popa outsb je orl ret aad loop out cmc sti add push adc xor push pop fs ja add stos mov mov fucom jmp or push sbb cmp dec dec push pop arpl jbe (bad) mov scas mov ror aam loop out hlt sti add push adc and sub dec push pop pusha insw jae addb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp int (bad) out hlt cli add or sub dec push pop pop gs jb jg mov mov mov (bad) in repnz incl and xor aas inc dec push pop pop imul test stos mov mov fucom jmp or push sbb sub ss dec dec push pop arpl jne (bad) mov scas mov ret aad jecxz lock add unpckhps sub xor push pop arpl jbe (bad) mov scas mov rol aam fsub jmp or adc xor push pop popa imul xchg pushf mov ret leave iret aad loop out cmc cld add unpckhps and cs inc inc dec push pop pusha insl jae addb lods mov rol aam loopne in repz add or sub cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl push pop pusha push orb (bad) in cli add cmp dec push pop data16 (bad) mov scas mov ror fsubrp hlt add adc sbb cmp pop bound jbe orl mov (bad) rcr call push sub jo test leave aam jmp decl adc push pop data16 test ror loop icebp clc incb adc sbb cmp dec push push pop bound jne (bad) mov mov (bad) into fsub out sti or push sbb push pop data16 (bad) lea iret fchs call sbb push pop addr16 xchg int jecxz sti push or inc dec pop gs jge mov mov mov fsub call pop push adc and sub dec push pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall imul test test leave rcl fsub call adc cmp inc dec push pop pop gs jb jle mov mov mov fsub jmp or adc xor push pop popa insl je addb lods mov mov loopne clc add push and ss dec push popa insl jne test mov ret aad loope out hlt cli add or sub cmp inc dec push pop add insb jb jle mov mov mov fucom jmp or adc and sub dec push pop pop imul test test enter loope in repz add or sub cmp inc dec push push pop fs ja test ror jecxz idiv add sbb pop outsb jp lea (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp loope hlt add and xor dec push pop imul stos mov int3 aad loop out cmc sti add push adc and cs inc inc dec push pop pusha insl jae addb lods mov mov fucom ljmp adc xor inc inc dec push pop pop data16 jb jg mov mov mov fsubp ljmp daa sub dec push pop pop imul test cmpsb lods mov mov fsubp in repnz incb and inc dec push push pop fs ja test stos mov mov fsub call or adc xor push pop bound jne orl ret aad loope out cmc sti add unpckhps sub xor push pop fs ja orl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov fucom ljmp push sbb cmp dec dec push pop bound jne addl rol aam loope out hlt sti add push adc ss dec dec push pop arpl jne (bad) mov scas mov ret aad jecxz out cmc cld add push adc xor inc inc dec push pop pusha data16 jae addb lods mov mov (bad) add repz add or sub dec push pop pusha insw jae addb lods mov mov (bad) jmp clc incl and xor ds dec push push pop imul test stos mov mov fucom jmp or push sbb sub xor push pop bound jbe (bad) mov mov mov fucom jmp or adc xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call popa push xchg lods mov rol rcr loopne in repnz incl and inc dec push push pop arpl jbe orl scas mov ror (bad) fsub call or push sbb sub xor push pop popa insl je addb lods mov mov fsubp jmp idiv add adc sbb add pop fs ja test stos mov mov fsubp ljmp pop sbb cmp pop bound jne (bad) mov scas mov ret fsub out stc add pop pop sub dec push pusha push (bad) mov (bad) out clc incb adc sbb ds push pop imul (bad) xchg pushf mov ret aad loope out hlt sti add or xor dec push pop push mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp testb sbb pop data16 xchg (bad) out sti pop adc xor push pop outsb je addb lods mov mov (bad) in repnz incb adc and pusha imul xchg cwtl mov xlat loop idiv pop adc daa xor insl jns mov ret into (bad) in pop mov push pop gs orl leave rcr out sti add aaa inc dec push pop push jle xchg fwait movsl mov (bad) into fsub in testb inc push popa imul xchg popf add fsub out stc add inc dec push pop push lcall loopne hlt decb adc xor inc jns lret in cld push cltd mov lret in stc add sbb xor jne lea hlt decl pop and push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp fsubr hlt decl adc cmp data16 xchg outsb jne mov leave (bad) fsubrp hlt add cmp je xchg (bad) rcr call adc sub dec push pop pusha data16 jae jg mov mov rol rcr loopne in daa aaa inc push pop data16 cmpsl mov lock pop adc sub cmp orl sti add cmp push pusha imul pushf test loopne clc add sbb add ds push popa insl js nop fwait cmpsl mov lret out cli push adc push arpl (bad) lea rcr out std pop adc sub ds push pusha imul ret fucom ljmp push sbb cmp dec dec push pop arpl jbe (bad) mov out cmc sti add push adc and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp cs inc inc dec push pop pusha insl jae addb lods mov mov loopne in repz incl or sbb and inc dec push pop pop imul test stos mov mov fucom jmp or push sbb cmp dec dec push pop bound jne (bad) mov scas mov rol aam loopne in repz add or sub cmp inc dec push pop pop data16 jb jg mov mov mov fucom ljmp adc push and xor cmp pop arpl jbe orl mov mov fucom jmp or adc xor push pop popa push mov scas mov rol aam loope in hlt cli add or sub dec push pop pusha data16 jae jg mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov fcomp in icebp idiv add and xor cmp pop arpl jbe orl scas mov ret aad loope out hlt sti add or sub dec push pop pusha insw jae addb lods mov rol rcr (bad) in repnz incl and xor ds dec pop bound orl ljmp xor inc dec pop imul test stos mov movb loopne idiv add adc sbb cmp pop fs ja test mov (bad) rcr call and imul ret into ftst out stc add sbb cmp arpl (bad) lea int3 xlat fsubp ljmp push sbb sub ss dec dec push pop bound je addl jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push sti add adc dec push pop data16 mov (bad) int in clc add sbb arpl (bad) mov int3 (bad) in testb adc dec push pop bound jne (bad) mov scas mov ror aam loope out hlt cli add or sub dec push pop pusha data16 jae jg mov mov mov call adc push and inc dec add pop gs jb jle mov mov mov fsubp jmp idiv add adc sbb cmp dec dec push pop bound jne (bad) mov scas mov int3 (bad) fsubrp testl ss dec push pop data16 jg mov mov mov fsub jmp or adc xor inc inc dec push pop pusha insl jae addb stos mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec rcl fucom ljmp push sbb sub xor push pop popa insl je addl rol rcr (bad) in repnz incl and xor cmp gs orl icebp cli add cmp pop gs xchg int in clc add sbb sub bound jp xchg cltd mov mov (bad) out repz incl and inc dec push push pop arpl jbe (bad) mov scas mov ret aam loope in hlt cli add or sub dec push pop pop data16 jb jg mov rol rcr loopne in hlt cli add or sub dec push pop pop imul test mov mov fsubp in repnz incb and xor cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl push push pop arpl jne (bad) mov scas mov rol aam loopne in repz add or sbb es cmp inc dec push pop pop imul test stos mov mov fsub jmp or adc ss dec dec push pop bound jne orl rol aam loopne in repz add or sbb and cs inc inc dec push pop pusha insl je orl rol rcr loope out cmc sti add movhps sub xor push pop popa push xchg lods mov mov (bad) in repnz incl and inc dec push push pop arpl jbe orl mov mov fsub call or adc xor push pop pusha insw jae jg mov mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call xlat fsubp jmp clc incb adc sbb cmp pop bound jne (bad) mov scas mov rol rcr (bad) in repnz incl and inc dec push pop pop imul test stos mov mov fsub jmp or adc xor inc inc dec push pop popa add jl mov scas mov rol aam loope out hlt cli add or sub dec push pop popa push mov scas mov rol rcr loopne in repnz incl or sbb and inc dec push pop pop imul test test enter jecxz out cmc sti add unpckhps and cs inc inc dec push pop pusha data16 jb jg mov mov mov fsubp ljmp pop sbb ds dec push push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall push js xchg ret into xlat loopne testb adc inc dec pop outsl jns mov rol aam loopne in repz push adc ss dec push push pop arpl jbe (bad) mov scas mov ret aad call sbb xor push popa insb js mov leave aam jmp and inc dec push pusha push jg xchg sahf test mov repnz push adc and cs inc dec dec push pop popa outsb je orl rol fsub icebp clc add sbb dec pop outsw jns nop fwait movsl lods mov int fucomip clc add adc xor push pop imul mov enter lock add sbb xor inc dec pop bound mov mov fucom ljmp push sbb cmp pop arpl jbe (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl test mov rol aam loope in hlt cli add or xor dec push pop pusha insw jae addb lods mov mov fsubp jmp clc incb adc push and xor cmp pop imul test test (bad) lret fucom ljmp and xor dec push pop imul xchg sahf movsb lods mov loopne in hlt cli add or sub dec push pop pusha data16 jae jg mov mov mov fsubp jmp clc incb adc push and xor ds dec push push pop fs ja test stos mov mov fsub jmp or adc xor push pop popa push mov mov enter out stc add sbb sub cmp push pop gs xchg (bad) iret frstpm(287 jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push add pop sub inc dec push pop push jg xchg lahf stos mov (bad) int3 aam jmp std add adc sbb cmp dec dec push pop bound jne (bad) mov scas mov ret aad loope in hlt cli add or sub add inc inc dec push pop pusha insw jae addb lods mov mov fsubp jmp clc incl xor inc inc dec push pop popa outsb je addl mov (bad) jmp clc incb adc push and xor ds dec push pop pusha data16 jb addb lods mov rol rcr loopne in repz incl and inc dec push pop pop imul test stos mov mov fsubp ljmp sbb es cmp inc dec push pop pop imul test stos mov mov fsubp jmp idiv (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incb adc push and xor cmp pop arpl jbe (bad) mov scas mov ret aad loope out hlt sti add unpckhps and cs push pop arpl ja orl stos mov mov fucom ljmp push sbb cmp pop fs ja orl mov mov fsub call or adc xor push pop popa push mov scas mov rol aam loopne in repz add or sbb es cmp inc dec push pop pop imul test stos mov mov (bad) jmp clc incb and inc dec push pop pop fs ja test stos mov mov (bad) jmp clc incb and inc dec push pop pop imul test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall mov (bad) in repnz incb and inc dec push push pop imul test test leave iret aad loop out cmc add add unpckhps sub xor push pop popa push mov scas mov rol aam loope out hlt cli add or sub dec push pop pusha insl je addb lods mov rol aam loopne in repz add or sub dec push pop popa insl je addb lods mov rol rcr loopne in repz adc inc push pop addr16 xchg (bad) into aad jmp sbb es cmp inc dec push pop pusha imul cwtl mov ret lret rcl fsubp ljmp sbb and dec push pop push sahf stos mov int3 xlat in sti pop adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall sub inc dec pop gs xchg enter repz adc sub cmp jb xchg scas mov rol roll fndisi(8087 out hlt cli add or sub pop push mov iret fsub in testl inc dec push arpl jl xchg pushf cmpsb mov lret out cld push adc push pop arpl xchg (bad) int3 xlat jecxz cli add adc push and inc dec push pop pop fs ja test test leave iret (bad) fsub jmp or adc and cs inc inc dec push pop pusha insw jae addb mov fsubp jmp idiv add adc sbb cmp pop bound jbe (bad) mov scas mov rol rcr loopne in repz incl and inc dec push push pop fs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl mov leave aad call pop and xor push pop popa push xchg test mov rol rcr loopne out hlt cli add or sub cmp inc dec push pop pop imul test test leave iret aad loop out hlt sti add or sub dec push pop pusha insw jae jg mov mov mov fucom jmp or pop and ds push pop push xchg mov xlat jecxz testl ss dec push pop push sahf stos mov (bad) rcr jmp pop sub ss insl jae orl ror aam loope out hlt cli add or sub dec push pop popa insl je addb lods mov rol rcr loopne in repz add or sbb es (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp cmp inc dec push pop pop data16 jae (bad) xchg popf movsb stos mov mov fldl in icebp idiv add adc push and inc dec push push pop fs ja test stos mov mov fsubp jmp clc incb and xor cmp pop arpl ja orl scas mov ret aad loop out cmc sti add push adc and sub dec push pop pusha insl je orl ret leave rcl fucom ljmp pop sbb cmp pop fs ja test stos mov mov (bad) jmp stc incl es cmp inc dec push pop pop imul test stos mov mov fsubp ljmp pop sbb cmp pop arpl jbe orl scas mov ret aad (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fsub call or adc and cs add dec push pop bound jne (bad) mov scas mov ror aam loope in hlt cli add or sub dec push pop popa outsb je addb lods mov rol rcr (bad) in repnz incl and inc dec push push pop fs ja test stos mov mov fucom ljmp push sbb sub ss dec dec push pop bound jne (bad) mov scas mov ret aam loope out hlt sti add push adc xor inc inc dec push pop bound jne addl rol rcr (bad) in repnz incl es dec push pop pusha insl jae addb lods mov mov (bad) in repnz incb and inc dec push push pop fs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jge mov stos mov mov fsubp jmp clc incb and xor cmp pop fs ja test test lret fucom jmp or push sbb sub xor push pop bound jge xchg sahf test frstpm(287 lock add cmp popa imul xchg cltd mov rol rcr out decb pop push and xor ds dec push push pop fs ja test stos mov ror loop clc add inc push pop push (bad) lea rcr jmp pop sub dec push pop imul mov (bad) rcr in clc incl and inc dec push push pop fs ja test test fucom repnz push sbb dec push pop push (bad) mov enter ljmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl adc and pop fs test ret iret (bad) loope clc add sbb sub inc dec push pusha imul mov mov imul clc or inc js ret pop adc sub dec push popa insb js (bad) fwait cmpsb mov enter testb sbb xor js mov aam jmp add sbb pop push orl hlt sub lods out adc mov outsl js lea int3 (bad) loopne hlt decl adc daa xor dec push pusha push jle xchg sahf stos mov leave rcr jmp and ss dec push pop imul (bad) rcr in stc push nopl xor inc dec push outsb jns mov into (bad) out stc add and cmp gs xchg ror jecxz testl das cmp bound (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl mov lret call sbb pop data16 xchg (bad) into fsub in testb pop and cmp push pusha push orl lock add sbb cmp push popa imul xchg mov (bad) loopne testb sbb das cmp pop outsl js lea into (bad) repnz add cmp pop outsl jns nop lahf test ror loopne stc add sbb cmp push bound orb enter hlt decb adc xor push pop outsl jns lea int3 (bad) loopne clc add sbb sub inc dec push arpl (bad) mov int3 aad jmp sbb xor dec push pop outsw jns mov into (bad) lock add cmp pop outsl js mov (bad) jecxz stc add sbb sub inc dec push arpl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl mov lret (bad) loopne hlt decb and xor dec icebp sub jle xchg pushf cmpsb mov adc daa xor dec push pop push cltd movsl mov (bad) iret (bad) lock aad jmp add ds push pop push jle xchg sahf stos mov (bad) rcr in stc add sbb cmp push popa imul xchg mov fucomi cmc add push and push mov fucomp cmc add and cmp push pop push (bad) lea shl in clc add sbb pusha insl je addb lods mov rol rcr (bad) in repnz incl and inc dec push pop pop imul test stos mov mov fucom out cli add sub xor dec push pop bound jne orl rol aam loope out cmc sti add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl push adc and sub dec push pop pop gs jb jle mov mov mov out stc add sbb pop pusha push orl rol rcr (bad) in repnz incb adc sbb cmp dec dec push pop bound jne orl rol rcr (bad) in repnz incb adc sbb cmp dec dec push pop popa push xchg lods mov mov (bad) jmp add adc cmp pop bound lea aad loop stc add sbb das cmp push arpl mov lret in clc add ss dec push arpl jge mov ret aad fsub jmp or adc xor inc dec dec push pop popa insl jae addb stos mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call fcomp in lock add adc sbb cmp dec push pop popa insl jae addb lods mov rcl loop out idiv add unpckhps and cs push pop popa insl jae addb lods mov rol rcr (bad) in repz incl or sbb and inc dec push push pop fs ja orl scas mov ret aad loope out hlt cli add push adc and sub dec push pop popa outsb je orl ror aad loope out hlt cli add push adc and sub dec push pop popa push xchg scas mov rol aam loopne in repz add or sub add inc inc dec push pop pusha insw jae jg lea mov rol aam loop out idiv add movhps sub aaa cmp pop arpl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl (bad) mov mov mov fucom ljmp push sbb sub ss dec dec push pop bound je addl rol rcr loopne in repz add or sub dec push pop pusha insw jae jg mov mov mov fsubp ljmp push sbb cmp pop fs ja test stos mov mov fucom ljmp push sbb cmp pop arpl ja test stos mov mov fsubp jmp idiv add adc push and xor cmp pop arpl jbe orl stos mov mov fucom jmp or adc xor push pop bound jne (bad) mov scas mov rol aam loopne in repz add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl sub dec push pop pop gs jae jg mov mov mov fsubp jmp clc incb adc sbb cmp pop arpl jne (bad) mov lods mov rol rcr loopne in repz add or sbb es cmp inc dec push pop pop gs jb addb mov jmp add adc sub push xchg mov lret fsub jmp adc xor dec push pop pusha data16 jae addb lods mov mov loopne repz or sbb push pusha imul cwtl movsl mov enter jmp add sbb cmp fs test ret int loop clc add and cs inc inc dec push pop pusha insw jae addb lods mov mov repz adc sub cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl popa push orb (bad) rcr jmp sbb pop arpl lea lret (bad) jecxz cmc add push and ds push pop imul test leave iret aad loop out cmc cld add unpckhps sub xor push pop bound jne (bad) mov scas mov rol aam loopne in repz add or sbb cmp push pop pop imul test stos mov mov fsub jmp or adc xor inc inc dec push pop popa insl je addb lods mov mov add out repz add inc dec push popa insl jbe mov (bad) lret fucom ljmp push sbb sub xor push pop bound jne addl rol rcr (bad) jmp clc incb adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall cmp pop arpl jbe (bad) mov scas mov ror aam loope in repz add or sbb and inc dec push push pop fs jbe orl mov int3 aam ljmp sub arpl test ror jecxz hlt add push sub imul mov (bad) lret ljmp sbb sub xor push pop bound jbe (bad) mov scas mov ret aad loop out cmc sti add push adc and cs push add outsl jbe (bad) mov scas mov ror aam loope out hlt cli add or cmp dec push pop bound jne (bad) mov scas mov rol rcr loopne in repnz incl and xor cmp pop arpl jbe orl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall mov fsubp ljmp push sbb sub xor push pop pusha insw jae addb stos mov mov fsubp in repnz incb and inc dec push push pop arpl ja test test leave iret aad loop out idiv add adc sbb sub ss dec dec push pop bound je addl mov (bad) jmp idiv add adc sbb cmp pop fs ja test stos mov mov xlat fucom jmp idiv add adc sbb cmp pop arpl jne (bad) mov scas mov rol aam loopne in repz add or sbb and inc dec push pop pop imul orl scas mov ret leave iret aad loop out cmc cld add push adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp cs push pop popa outsb je addl mov fsubp jmp idiv add adc push and xor ds dec push pop pop imul xchg mov mov fsubp jmp idiv add adc push and inc dec push pop pop imul test stos mov mov fsub jmp or adc xor push pop popa insl jae addb lods mov mov fsubp jmp idiv add and inc dec push pop pop imul test stos mov mov fsub jmp or adc xor push pop popa push xchg lods mov rol rcr (bad) in repnz incl and inc dec push pop pop imul test test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl aad loop out idiv add movhps sub inc dec pop pusha imul xchg mov rcr ljmp xor ds dec push push pop fs ja xchg (bad) int fnop out repz incl or sbb es dec push pop pop addr16 test vpaddusw hlt add and cmp pop imul mov int loop clc add sbb cmp arpl test mov ret add fsub jmp or adc xor inc inc dec push pop push jle xchg lahf stos mov enter in idiv or dec push pop addr16 mov (bad) iret (bad) repz add cmp pop bound (bad) mov int3 fsub in testl xor inc inc dec push pop pusha data16 jae jg mov mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp in repnz incb es cmp inc dec push pop pop imul test stos mov lret in lock add adc sbb sub xor push pop popa push xchg lods mov mov fsubp jmp clc incb adc push and xor cmp pop arpl jbe (bad) mov ror loope clc add and xor inc push pop popa insl je addb cmpsl lods mov rol rcr (bad) in repnz incl and xor ds dec push push pop fs jbe orl scas mov rol aam loopne in repz incl or sbb and inc dec push push pop fs jbe orl scas mov rol rcr loopne in repnz incl and xor inc dec push pusha addr16 mov int loope testl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp sub inc dec push arpl jl xchg sahf test mov icebp std or sbb xor dec dec push pop push xchg fwait mov ret aad loop out cmc sti add push adc and sub dec push pop popa insl je addb lods mov rol rcr loopne in repz add movhps sub xor push pop popa push mov rol aam add call pop or sub cmp inc dec push pop pop data16 jb jle mov mov mov fucom jmp or adc xor inc inc dec push pop pusha data16 jae jg mov mov mov (bad) jmp clc incb adc push and xor cmp pop arpl jne (bad) mov scas mov ror aad loop out hlt sti add or sub cmp inc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl pop pop gs jb jg mov mov mov fucom jmp or pop sbb cmp dec dec push pop bound jne (bad) mov scas mov ror aam loop out cmc sti add push adc xor push pop popa push xchg lods mov rol rcr (bad) in repz add or add xor inc inc dec push pop pop data16 jb jg lea mov mov fsubp jmp idiv add adc push and xor cmp pop arpl jbe (bad) mov scas mov ret aad loope out hlt cli add or sub dec push pop pop gs jb jle mov mov mov fsub call or adc xor inc inc dec push pop pusha insw jae jg mov mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call fucom ljmp push sbb sub ss pop bound jne addl rol rcr (bad) in repnz incl and xor aas inc dec push pop pop insw jae addb stos mov mov fsubp jmp idiv add adc sbb cmp dec dec push pop bound add (bad) mov scas mov ret lret fsub jmp or adc and cs inc inc dec push pop pusha insl jae addb lods mov mov (bad) in repnz incb adc sbb ds dec push push pop arpl jbe orl mov enter idiv or sub dec push bound orb aam in icebp idiv add adc sbb dec pop addr16 jge mov mov mov fucom jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl or push pop gs mov fsub repnz adc dec push bound test (bad) rcr out cld push adc push pop pusha data16 jae addb lods mov mov fsubp ljmp daa das cmp data16 orl out clc add sbb cmp dec push popa outsb jns mov rcr out cld or and pusha imul xchg mov (bad) hlt sti add or sub dec push pop pusha insl jae addb stos mov mov fucom ljmp adc xor push pop popa outsb je xchg mov fndisi(8087 out hlt cli add or sub cmp inc dec push pop pop imul test stos mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call fsub jmp or adc and sub dec push pop pop data16 mov enter testb adc xor inc inc dec push (bad) pushf test loop clc add sbb xor dec push bound xchg lret xlat loop clc add sbb xor push orb mov ret into fsub icebp stc add sbb sub aaa inc dec pop pusha imul (bad) xchg mov (bad) loop icebp clc incl aaa inc dec pop popa insl jae xchg (bad) rcr call and inc push pop imul ror in std or and cmp pop push orl out clc adc sub dec push pop push (bad) mov rcr out std or push pop imul (bad) jmp and cmp pop imul cltd movsb mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call fucomip cmc decl adc sub inc dec pop bound (bad) lea rcr out cld pop adc sub jb mov iret (bad) lock add cmp pop arpl xchg int in sti push adc pop gs xchg iret (bad) icebp std or push pop addr16 mov iret (bad) repnz or and addr16 mov shl in testl cmp jne lea rcr ljmp cmp jns xchg popf test ror loop clc add sbb xor dec push add js (bad) fwait cmpsl mov lret (bad) loop cli add aas dec push bound xchg into ftst lock pop adc sub dec push outsl jnp xchg sahf test loopne clc add sbb xor dec push bound xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec ftst lock push adc xor pop imul xchg lahf stos mov int out cli add sbb sub aaa cmp pop push mov rol aam loope in hlt cli add or sub dec push pop pusha data16 jae orl lret jecxz stc add adc sub ss dec push bound ja test test leave iret aad loop out cmc sti add push adc and sub dec push pop pusha data16 jae addb lods mov mov fsubp jmp idiv add adc sbb dec pop pusha data16 jae jg mov mov mov (bad) jmp clc incb and xor cmp pop arpl jbe orl scas mov ret aad loope out hlt sti add or cs inc inc dec push pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp insl jae addb lods mov mov fsubp jmp idiv add adc sbb cmp pop arpl jbe orl scas mov ret aad loope out hlt sti add push adc and sub dec push pop pusha data16 jb jg mov mov mov fsubp jmp idiv add adc sbb cmp pop bound jne (bad) mov mov (bad) jmp clc incb and xor cmp pop arpl jbe orl stos mov mov fucom jmp or push sbb sub ss dec dec push pop bound jne orl rol rcr loopne in repz add or sbb and inc dec push pop pop imul test mov (bad) rcr in repnz incl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall push and xor cmp pop arpl jbe (bad) mov scas mov ret aam loope in hlt cli add or sub cmp inc dec push pop pop imul test test leave iret aad loop out cmc sti add push adc and cs inc inc dec push pop pusha insl jae addb stos mov mov fucom ljmp push sbb cmp dec dec popa push xchg lods mov rol rcr loopne in repz incl or adc and cs inc inc dec push pop popa imul xchg fwait mov rol aam loopne in repz add or sbb and inc dec push pop pop imul test stos mov mov fucom ljmp push sbb sub ss dec dec push pop bound jne addl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp int fchs out repz add or sub cmp inc dec push pop pop imul test stos mov mov fsub jmp or adc xor push pop bound je addl rol rcr loopne in repnz incl and inc dec push pop pop imul test stos mov mov fsub jmp or adc xor push pop add outsl jne orl rol aam loope in hlt cli add or sub cmp inc dec push pop pop imul test stos mov mov fsubp ljmp push sbb sub ss dec dec push pop bound je addl rol rcr loopne in repz incl es (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp inc dec push pop pop imul test stos mov mov fsub jmp or adc xor inc dec dec push pop popa outsb je addl fxam out sti or sbb xor inc dec dec push pop outsl jp xchg sahf cmpsb lods mov mov fsubp jmp clc incb adc sbb cmp pop data16 test mov jmp pop sbb dec push add insw jae addb stos mov mov fucom ljmp adc xor inc inc dec push pop pusha data16 jb jg mov mov mov call sbb and inc dec push pop pop fs ja orl scas mov ret aad loope in hlt sti add push adc and sub dec push pop pop imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl stos mov mov fsub call pop push adc and sub dec push pop pusha data16 jae jg mov mov mov fucom jmp or adc xor inc inc dec push pop pusha insw jae addb stos mov mov fucom ljmp push sbb sub xor push pop popa insl jae addb lods add (bad) out repnz incl and xor inc push pop pusha insl jae addb lods mov mov (bad) jmp stc incl and inc dec push push pop fs ja orl mov mov fsub call or adc and cs push pop popa insl je addb lods mov mov (bad) jmp clc incb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall push and xor inc push pop push mov mov mov fsubp jmp clc incb adc push and xor cmp pop arpl jbe (bad) mov scas mov ret aad loop out hlt sti add push adc and sub dec push pop pop data16 jb jg mov mov mov fsubp ljmp pop sbb cmp inc dec push pop pop imul test stos mov mov out hlt cli add or sub cmp inc dec push pop pop data16 jb jg mov mov mov fucom jmp or adc xor inc inc dec push pop pusha insw jae addb lods mov mov fsubp jmp idiv add adc sbb cmp pop arpl jne (bad) mov scas mov ret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec into aad loope out hlt cli add or sub cmp inc dec push pop pop data16 jae jg mov mov mov fsubp jmp clc incb and xor cmp pop arpl jbe (bad) mov scas mov rol aam loopne in repz add or sbb and inc dec push pop pop imul jg mov mov mov fucom ljmp push sbb sub xor push pop popa outsb je addl mov (bad) jmp clc incb adc sbb cmp dec dec push pop bound jne addl rol rcr loopne in repz incl and inc dec push push pop arpl jbe orl scas mov ret aam loop out cmc sti add push adc and sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl pop imul test stos mov mov fsub jmp or adc and cs push pop pusha insl jae addb stos mov mov fucom ljmp das cmp push pop imul lods mov lret (bad) loope idiv add movhps and xor cmp dec dec push pop bound jne orl iret (bad) fucomip idiv push adc sub ss dec push pop arpl jge xchg cwtl sahf movsb stos mov mov fucom ljmp push sbb sub xor push pop bound jne (bad) mov scas mov rol aam loopne in repz add or inc dec push pop popa outsb je addb lods mov mov (bad) jmp clc incb adc sbb cmp pop bound jne (bad) mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall mov (bad) out repnz incl and inc dec push push pop fs jbe orl scas mov ror aam loope in repz add or sbb and inc dec push pop pop imul test test leave add (bad) fucom jmp or adc xor inc inc dec push pop pusha data16 jae addb lods mov mov fsubp ljmp push sbb sub xor pop imul test mov mov fsubp ljmp push sbb sub xor push pop popa outsb je addb lods mov mov fsubp jmp clc incb and xor cmp pop arpl jne (bad) mov scas mov rol rcr loopne in repz incl and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp cmp dec push pop pusha insw jae addb lods mov mov fsubp jmp cli add sbb xor inc dec pop popa push xchg scas mov rol rcr loopne in repz incl or sbb and inc dec push add gs jb jg mov mov mov fucom ljmp push sbb cmp dec dec push pop bound je orl rol rcr loopne in repz incl es cmp inc dec push pop pop imul test stos mov mov fsubp ljmp push sbb cmp dec push push pop arpl jbe orl scas mov ror aam loope in hlt cli add or sub cmp inc dec push pop pop imul test stos mov mov fucom (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp push sbb sub xor push pop popa push xchg lods mov rol rcr loopne in repz incl or sbb daa sub dec push pop pop data16 jb jg mov lods mov mov (bad) jmp clc incb and inc dec push push pop fs ja orl mov mov fsub call or adc and sub dec push pop pusha insl jae addb lods mov mov fsubp jmp idiv add adc sbb cmp dec dec push pop bound jne (bad) mov scas mov rol aam loope in repz add or sub cmp inc dec push pop pop imul test stos mov mov fucom jmp or adc xor push pop popa insl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl xchg lods mov mov (bad) jmp clc incb and inc dec push push pop arpl jbe orl scas mov ret aad loope add cmc cld add unpckhps and cs inc dec dec push pop popa outsb je addb mov int3 xlat jecxz stc add cmp dec push pop data16 mov mov (bad) lret fucom ljmp push sbb sub xor pusha imul test ror fxam out idiv add aaa cmp pop fs ja orl mov mov fsub call or adc xor inc inc dec push pop pusha insl jae addb lods mov leave aam in hlt cli add or sub cmp inc dec push pop pop imul test test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc enter loope in hlt sti add or sub cmp inc dec push pop pop imul test test enter loope out hlt add add push adc and cs inc inc dec push pop pop data16 jb jg mov mov mov fsub call pop push adc and sub dec push pop pop gs jb jle mov mov mov fnclex call pop or sub cmp inc dec push pop pop fs ja orl mov mov fndisi(8087 ljmp and xor ds dec push push pop fs ja orl scas mov ret aad loop out cmc cld add unpckhps and cs push pop popa insl je addb lods mov mov (bad) in repnz incl and inc dec (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call pop fs ja test stos mov mov fsub in testl xor cmp pop arpl push ja test stos mov mov fsub call pop or sub dec push pop pop imul test test leave iret (bad) fsub call or adc and sub dec push pop pop imul test stos mov mov fnclex call or adc and sub dec push pop pop outsl ja test test enter loope in hlt cli add or sub cmp dec push pop pop imul test stos mov mov fndisi(8087 call pop or sub cmp inc dec push push pop imul orl scas mov ret aam loope in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push stc incl or sbb and inc dec push push pop arpl jne (bad) mov add into aad loope in hlt cli add or sbb and inc dec push push pop arpl jbe (bad) mov scas mov rol rcr loopne in repz incl and inc dec push push pop arpl jbe (bad) mov lods mov rol rcr (bad) in repnz incb adc push and xor cmp pop bound jne addl mov (bad) jmp idiv add adc sbb sub xor push pop popa push xchg lods mov mov fsubp ljmp adc xor inc inc dec push pop pusha data16 jae addb stos mov mov fucom jmp or adc xor inc inc dec push pop pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp jb jle mov mov mov faddl in lock add unpckhps and cs inc inc dec push pop pusha data16 jb jg mov mov mov fsub call or adc and sub dec push pop pop imul test ror loop clc add sbb sub aaa cmp outsb jp (bad) xchg fwait mov rol rcr (bad) in repnz incb and xor inc push pop pop push orl (bad) jmp cld or sbb daa sub dec push pop pop gs jb jg mov mov mov fucom ljmp push sbb sub xor push pop bound jne orl fnclex call or adc and sub dec push pop pusha data16 jb jg mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp rcl fsubp add icebp clc incb adc sbb cmp dec dec push pop bound je addl mov (bad) jmp clc incb adc sbb cmp dec dec push pop popa push xchg lods mov mov fsubp ljmp pop sbb cmp dec dec push pop popa outsb je addb lods mov mov fsubp ljmp push sbb sub xor push pop popa insl je addb lods mov mov out cmc sti add push adc sub adc jnp xchg popf cmpsl mov enter testl inc push pop push mov fucomp hlt decl adc push pop addr16 mov iret (bad) icebp decb adc push pop data16 sti sub jno aad dec jb int (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc add cmp push bound mov lret jmp add push and arpl mov (bad) rcr jmp sbb das cmp pop arpl sbbl fsub icebp cli pop adc and xor jl cltd mov (bad) in testb das inc push pop outsb jns xchg mov fxam out clc add and ss dec push bound lea int3 (bad) loopne cmc decl adc sub push lahf test fsubrp hlt decb adc dec push pop addr16 test (bad) in cli or sbb xor inc dec pop addr16 test ret iret (bad) in testl aaa inc dec push pusha push orb leave rcr jmp sbb push pop addr16 test ror loope cmc decl adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call data16 xchg (bad) rcr out cld push adc xor inc push pop outsl jns lea fsub repz push adc and push outsb js lea lret (bad) in testl cmp push pop imul mov lret aad jmp sbb das cmp push pop outsl jns lea leave shl jmp add adc sub inc push pop fs test (bad) iret fsub in testl ss dec push pop insb jbe mov ret int3 xlat loop testb rolb inc push pusha push orb pop and cmp popa imul sahf test mov dec imul std pop adc ss dec push pusha push orl lock push adc sub ds push pop push popf iret sbb decb add into (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fsub in clc add inc dec push pop imul mov leave aam jmp decl and xor jp fwait cmpsb mov (bad) rcr jmp and cmp pop data16 xchg int in sti or sub aad or sub inc dec push pusha push jle xchg pushf cmpsb mov (bad) aam jmp sbb dec pop outsb js lea enter hlt decb adc xor inc push pop gs mov add rcr pop pop imul scas xlat adc dec gs mov (bad) cmc add dec push bound xchg int in sti push adc xor dec push pop imul int3 fsub out cli push adc push pop push (bad) mov (bad) loop stc add aas dec push arpl xchg int in cld or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp ss dec pop fs test leave rcr out cld pop adc sub dec push bound orl (bad) loope stc add inc dec push popa imul cwtl mov aam jmp add sbb das cmp pop addr16 mov rcr out std or and push mov fucomp hlt decl adc dec pop data16 mov fxam lock pop adc and imul mov hlt add and cmp pop push orl clc add sbb xor dec push bound test lret xlat loop cli add sbb xor js (bad) fwait cmpsb mov leave (bad) loop stc add sbb push arpl xchg lret out cli push adc push bound test int3 fsub lock pop adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall sub inc dec pop arpl orl rol fucomp repz add push adc xor inc push pop data16 mov mov lret jmp add pop sbb inc dec push popa insb ja (bad) lcall loop testb adc dec push pusha push orl fsub icebp sti pop adc push pop data16 xchg enter add add and inc dec push bound (bad) (bad) lcall jmp sbb inc dec push pop push orb ror loop stc add xor dec push pop imul mov lret rcr loop cli add sbb sub push pusha imul xchg pushf mov rcr call and cmp pop push mov (bad) lock push adc push popa push lahf (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp loop clc add sbb xor dec push pop push orb fsubr hlt decl push and cmp arpl orl iret ftst lock push adc xor ja (bad) lcall jmp and cmp pop imul mov testb sbb cmp push pop push orl jmp add adc dec push push pop arpl test ret (bad) repz pop adc dec push pop insb jns mov mov out idiv add push and cmp pop gs xchg int in std or push pop push cmpsb mov lret xlat loop clc add sbb cmp pop outsl xchg lret aad in clc add sbb xor push pop imul enter testb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall and cmp pop push mov fucomp hlt add and cmp pop addr16 xchg lret ljmp cmp pop outsl jp nop fwait cmpsl mov leave aad jmp add sbb xor jbe mov lret (bad) fucomip hlt add and cmp pop imul mov cmc add inc push pop push (bad) mov aam jmp add sbb cmp pop imul mov testb sbb cmp push pop push (bad) lea rcr call and cmp pop push mov fsubrp cmc add inc push pop imul vpaddusw hlt add and cmp pop push orl testl dec push popa insl jns xchg pushf cmpsl mov lret in clc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl bndstx xor js (bad) fwait cmpsl mov lret out cli push adc pop outsb js lea (bad) into aam jmp add push adc and sub push pop imul xchg pushf mov lret aad jmp add and xor cmp dec push popa insb ja lea (bad) rcr jecxz testb push and xor dec push pop insb jbe lea iret (bad) lock add ds push pop imul ror loop testl ss dec push pusha imul cwtl movsl mov (bad) rcr jmp sbb dec push pop pop imul mov in clc add cmp fs test mov in cmc add and push pop gs test mov in testl cmp jbe mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call iret (bad) icebp cld pop adc push bound jge nop popf test loop stc add ds push pop push orb iret (bad) repz adc dec pop data16 ja (bad) cwtl mov frstpm(287 lock pop adc xor aas dec push popa insb js (bad) lcall jmp add dec push pusha insb js nop fwait cmpsb mov leave aam jmp add sbb pop imul cltd movsb mov (bad) rcr jmp add and xor dec push pop pusha insl jae xchg int3 rcr loopne testb push and pop outsw jnp xchg xchg sahf movsb stos mov lret aad in clc incl or sbb xor dec push pop imul cltd movsb scas mov clc add sbb xor pop gs mov rcr jmp and inc dec pop outsb js cwtl cmpsl mov leave rcr call (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl push and cmp gs xchg rcr out decb pop and cmp pop addr16 mov rcr jmp and cmp jbe mov iret frstpm(287 out cli add cmp imul xchg mov (bad) repz push and cmp pop imul mov leave rcr out cld pop adc sub inc dec push bound orl aam in testl cmp push pop push (bad) lea aad in clc add sbb xor push pop imul lcall out decl adc push pop addr16 mov rcr jmp and aaa inc dec pop gs xchg iret (bad) repnz push and cmp pop imul mov repz adc push pop addr16 mov iret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp repz push and cmp pop push orl add and cmp pop push orl testb sbb pop imul xchg mov int loopne repnz decl adc sub cmp inc dec push pop pop imul sahf test aad jecxz testb push and inc dec push pop bound jns mov rcr jmp sbb cmp push popa imul cltd mov fucomi icebp cld or push sub ds push popa imul xchg mov fsub in clc add cmp pop gs xchg leave aad jmp add sbb pop gs jae jg (bad) cltd movsb mov (bad) iret fsub jmp cli add ds dec push pop imul mov mov testb adc and cmp pop imul mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall rcl fucom in stc add sbb sub imul cwtl mov (bad) repnz or sbb push popa insl js (bad) xchg popf cmpsb mov lret jecxz stc add sbb xor dec push popa insb ja lea rcr call and cmp pop imul mov not add lea lret call sbb xor inc dec pop arpl mov lret jmp pop sub dec push pop imul cwtl sahf movsb stos mov mov fucom ljmp adc xor push pop pusha insl jae addb stos mov mov fucom jmp decl adc inc push pop gs test into fxam repnz push adc push pusha push (bad) mov int in decb adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp inc inc dec pop arpl (bad) mov scas mov rol aam loopne in repz add or sbb and inc dec push pop pop imul test stos mov mov fsub jmp or adc xor inc inc dec push pop pusha insl jae addb lods mov mov jmp clc incb adc sbb cmp pop arpl jne (bad) mov scas mov rol rcr add out hlt cli add or cs inc dec dec push pop popa insl je addl rol rcr (bad) in repnz incl and inc dec push pop pop imul test stos mov mov fsub jmp or push sbb cmp pop arpl jbe orl mov mov fdivrp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp jmp idiv add adc sbb cmp pop arpl jbe (bad) mov scas mov rol rcr loope in repz add or sub dec push pop bound jbe orl scas mov ret aad loop out hlt sti add push adc and cs inc inc dec push pop popa insl je addb lods mov rol rcr (bad) in repnz incl and aas inc dec push pop pusha data16 jae jg mov mov mov fucom ljmp pop sbb cmp dec push push pop arpl jbe (bad) mov scas mov ror aam loope out hlt cli add or sub cmp inc dec push pop pop imul test stos mov mov fsubp jmp idiv add adc sbb cmp pop arpl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl orl mov mov fsub jmp or push sbb cmp dec dec push pop bound jne addl rol aam loopne in repz incl or sbb and inc dec push pop pop gs jb jle mov mov mov fucom jmp or push sbb sub xor push pop bound je addl mov ret lret fsub jmp or adc xor inc inc dec push pop pusha insw jae jg mov mov mov fsubp in repz or sub dec push pop addr16 mov int loop cmc decl push sbb cmp pop outsb jns xchg popf stos mov mov fucom ljmp push sbb sub xor pusha imul xchg lahf stos mov iret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp icebp cld or push sub inc dec pop arpl test (bad) out cli add cmp arpl (bad) mov scas mov ret aad loope out hlt cli add push adc and cs dec push popa push orb (bad) rcr call push daa xor dec push pop push addb leave aad jmp add sbb push pop push orl in testb sbb xor aas inc dec push pop pop imul test stos mov mov fucom jmp or push sbb sub xor push pop popa push xchg scas mov out hlt cli add push adc and cs inc inc dec push pop pusha insw jae addb lods mov mov fsubp jmp clc incb and xor cmp pop fs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jge mov int3 frstpm(287 icebp cld pop adc dec pop bound jne (bad) mov scas mov rol rcr loopne in hlt cli add or sub cmp inc dec push pop pop imul test stos mov mov fsub jmp or adc xor push add outsb jne addl rol rcr (bad) jmp clc incb adc sbb aas dec push pusha push lahf stos mov ror in clc add sbb cmp pop push popf test loopne idiv or sub inc dec pop insw je xchg mov fnclex call pop or sub cmp inc dec push pop pop imul test test leave rcl fsub call or adc xor inc inc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl pop pusha insw je addb lods mov lret fsubp jmp clc incb adc push and xor cmp pop arpl jbe orl scas mov ret aad loope out hlt sti add push adc and cs inc inc dec push pop popa insl jae addb add int3 rcr (bad) jmp clc incb adc push and xor cmp pop arpl jbe (bad) mov scas mov ret (bad) fsub jmp or push sbb sub xor push pop pusha insl je addb lods mov mov loopne in repz add or sbb and inc dec push pop pop imul test stos mov mov (bad) jmp clc incb and xor cmp pop fs ja test stos mov mov fsub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call or adc and sub dec push pop popa insl je orl rol rcr loopne in repz incl es cmp inc dec push push pop fs ja test stos mov mov fsub jmp add movhps sub xor push pop bound jne orl rol aam loope in repz add or sbb and inc dec push push pop fs ja orl mov mov fndisi(8087 out cmc sti add unpckhps and cs inc dec dec push pop bound jne (bad) mov lods mov rol rcr (bad) in repnz incb and xor ds dec push push pop imul orl scas mov ror aam loope in repz add or sub cmp inc dec push push pop gs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jle mov mov mov fsub call pop or sub dec push pop pusha data16 jb jg mov mov mov fsubp ljmp push sbb sub ss inc dec push push pop arpl jne orl ror in clc add sbb cmp popa insb ja mov lret rcr (bad) in repnz incb das cmp pop imul test stos mov mov fsubp ljmp sub insb jns (bad) fwait cmpsb mov lret in testl cmp outsl jns nop lcall in stc add sbb cmp dec push pop popa push xchg lods mov mov (bad) repnz or sbb xor push pop fs js xchg fwait cmpsb mov lret rcr jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl adc inc push popa push orl icebp std add cmp push pop insb jae mov rcr jecxz lock add adc sbb sub ss dec dec push pop bound imul xchg fwait mov rol rcr loopne out hlt cli add or sub cmp inc dec push pop pop outsb jns xchg lcall (bad) int fnop out repz incl and inc dec push pop pop imul test stos mov mov fsub jmp or adc xor inc inc dec push bound adcl xlat loop cmc sti add xor ds dec push push pop fs jbe (bad) mov scas mov rol aam loopne in repz add or sub cmp inc dec push pop pop imul test test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec iret aad loope out hlt cli add or sub cmp dec push pop pop imul test stos mov mov fnclex call or and das cmp pop arpl orl into fucomi repz adc dec push pop addr16 mov int3 (bad) loop stc add sbb xor inc inc push pop push jp xchg lods mov rol rcr loopne in repz incl or sbb es cmp inc dec push pop pop gs jb jg mov mov mov fucom ljmp push sbb sub ss pop bound jbe (bad) xchg lcall (bad) int fnop out repz add or sbb es cmp dec push pop pop gs jb jle mov mov mov (bad) jmp stc incl or sbb and inc dec push push pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp jo jge mov mov mov fsub call or adc xor push pop popa push orl mov mov fsubp jmp idiv add adc push and xor cmp pop arpl jbe (bad) mov mov mov fsub call or adc xor inc inc dec push pop popa outsb jne addl rol aam loopne in repz incl or sbb and inc dec push pop pop imul test stos mov mov fsub jmp or adc and cs push pop popa outsb je (bad) mov scas mov ror aam loope in repz add or sbb and inc dec push pop pop imul test stos mov mov fucom ljmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push std add adc sbb sub xor push pop popa imul xchg pushf mov ret rcl fsub ljmp push sbb cmp dec dec push pop bound jne (bad) mov scas mov ret aad loope out cmc cld add push adc xor push pop pusha insl jae addb stos mov mov (bad) jmp clc incl and inc dec push pop pop imul test stos mov mov fsub jmp or push sbb sub xor push pop bound je addl rol rcr loopne in repz incl and inc dec push push pop imul orl scas mov ret (bad) fsub jmp or push sbb sub xor push pop arpl jbe mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call lret (bad) loopne testb pop and xor dec push popa insb ja mov fwait mov ret aam loope repz adc inc dec dec push pop bound jne (bad) mov scas mov ror (bad) out clc add sbb cmp pop imul cltd cmpsb mov lret (bad) loopne clc add sbb cmp pop addr16 mov (bad) rcr out std or and sub dec push pop pusha insw jae jg mov mov mov repnz or push sub cmp outsb jns (bad) popf cmpsl scas mov cmc add adc and pop push sahf test fsubrp cmc add adc dec push popa outsb ja mov (bad) fcomp in repnz add or sbb es cmp inc dec push pop pop imul test stos mov mov fsub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp or adc and cs fs jb jle mov mov mov fsub call or adc xor inc inc dec push pop pusha data16 jae addb lods mov mov fsubp ljmp push push sub inc dec push bound adcl lret in repz add or sub dec push pop pop data16 jb jg mov mov mov fsubp ljmp pop sbb cmp pop arpl ja orl scas mov ret aad loop out cmc sti add push adc and cs inc inc dec push pop pusha insw jae addb lods mov rol (bad) loope clc add push and pop imul ror loope clc add sbb cmp pop push pushf (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp fsub out clc incl cmp inc dec push pop pop imul test stos mov mov fucom ljmp pop sbb cmp pop arpl jbe orl mov mov fsub call or adc xor popa outsb jne orl rol aam loope out hlt cli add or sub dec push pop pop imul mov scas mov rol aam loopne in repz add or sbb es cmp inc dec push pop pop data16 jb jg mov mov mov (bad) in repz incl es cmp dec push pop pusha insw jae addb scas mov rol aam loope in hlt cli add or sub dec push pop add insl jae (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl mov rol rcr (bad) in repnz incl and inc dec push pop bound jne orl ret lret fucom ljmp push sbb cmp dec dec push pop bound jbe orl scas mov ret (bad) fsub jmp or adc xor push pop bound jne (bad) mov scas mov ror aam loope out hlt cli add push adc and sub dec push pop pusha insw jae jg mov mov mov fsubp jmp clc incl and inc dec push push pop fs ja orl scas mov ret aad loop out cmc sti add push adc xor push pop bound jne (bad) mov scas mov mov fucom jmp or adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall sub xor push pop bound jne orl scas mov ret aad loope out hlt cli add or cs push pop bound jne orl rol aam loope out hlt cli add or sub dec push pop pusha insw jae addb lods mov mov (bad) in repz add or sbb es cmp inc dec push pop pop gs jb jg mov mov mov fsubp jmp idiv add adc sbb ds dec push pop gs mov (bad) rcr call sbb xor dec push pop gs xchg mov mov in testl sub dec push pop pop data16 jb jg mov add ljmp cmp addr16 mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call fucomip cmc decl adc dec push pusha imul xchg lahf stos mov lret in idiv add movhps sub xor push pop popa outsb jne orl (bad) lock or push and cmp pop outsl jnp (bad) cltd movsl mov (bad) rcr in hlt cld pop adc sub ds push pop push orl fucomp hlt decl push and aas dec push pop push orl int (bad) out hlt cli add or sub dec push pop pusha insl jae addb lods mov mov fsubp jmp idiv add adc push sub ds push pop pop imul test stos mov mov fsubp ljmp pop push and xor ds dec push add imul test stos mov mov fsubp jmp idiv push adc xor inc push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall insl js nop fwait test (bad) out hlt cli add or sub cmp inc dec push pop pop gs incl int in adc and inc dec push push pop arpl jbe orl scas mov lret out cmc add adc sub dec push push bound orl into (bad) in stc add cmp pop arpl (bad) mov iret (bad) in repz add and xor aas inc dec push pop pop imul test test leave iret (bad) fsub call pop push adc and sub dec push pop pop imul test stos mov mov fucom jmp or push sbb sub xor bound ja orl mov mov fucom ljmp push sbb sub ss add push pop arpl jbe (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl mov ret (bad) fsub jmp or push sbb sub aaa ds dec push push pop arpl ja orl scas mov ret aad loop out cmc sti add push adc and sub dec push pop popa push mov scas mov ret aad loope out cmc sti add push adc xor inc inc dec push pop popa insl je orl ret (bad) fsub call or adc ss pop arpl jbe test stos mov mov (bad) in repnz incb and xor aas inc dec push pop pop imul test stos mov mov fucom ljmp pop sbb ds dec push push pop imul test lods mov rol rcr loopne in repz add or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp sub dec push pop popa insl je addb scas mov ror aam loope in hlt cli add or sub dec push pop pop data16 jae jg mov mov mov (bad) in repnz incl and inc dec push pop pop imul test stos mov mov fsubp jmp clc incb adc sbb cmp pop fs ja orl mov mov fucom jmp or pop sbb ds dec push pop pop imul test mov mov (bad) jmp clc incb and inc dec push pop outsl jle lcall decb push popa outsb jl cwtl cmpsb mov rcr add cld or es push pop insl jp xchg movsb mov into fsubr cli or and imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl rcr repz inc push addr16 mov jecxz adc inc pop outsb xchg cli or and inc dec sbbl sbb aaa inc push bound mov fucomip add jg mov out sbb push push popf mov out sbb dec addr16 mov loop adc inc pop jb mov jmp or and aas dec pop imul lret hlt add push sub dec push fdiv adc xor popa jge test fdivr pop sbb mov fsubr or aaa push push lcall inc pop push sahf mov in pop xor pop jae mov pop sub jae nop sahf lods mov decl push pusha outsb jnp xchg movsl mov iret fucomp add or and imul mov call push gs (bad) sahf lods mov add sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl arpl lea loop decb sub inc push popa jo mov loop decb sub inc push pusha outsb jl cwtl cmpsb mov shr add sub lods rcr pop adc jp xchg movsb mov into fsubr clc or and inc dec pop imul mov jmp das cmp adcl in add sbb fs mov icebp decl push popa outsl jge cltd cmpsl mov shl out cld or es push pop insb jp xchg movsl mov iret fucomp stc pop push and aas push insb mov pop sub dec bound rcr or xchg mov fsubr pop and dec data16 mov (bad) push and scas mov sub inc push popa outsl jge cltd cmpsl mov rcr in sti push sub jle lcall cld or and insb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jp xchg movsl mov into fsubr clc or and inc dec pop push xchg call xor jbe xchg mov out add push sub dec push fs (bad) popf stos add add push sub inc push arpl (bad) sahf lods mov add sbb cmp bound mov fucomip sti or and imul movsl mov iret fucomp stc or and inc dec pop imul movsb mov into fsubr stc pop adc pop push xchg fsubr clc push adc xor dec pop push xchg jmp xor test (bad) cmc add and je nop lahf scas mov add push cs test fsub hlt add pop sub jae (bad) popf stos mov decl push bound mov fucomip std or daa (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jnp xchg movsl mov iret fucomp stc pop adc pop imul lret (bad) cmc add pop sub dec push gs mov out add pop sub je (bad) popf stos mov decl sub inc push pusha outsb jl cwtl cmpsb mov rcr in cli or and inc dec pop imul movsb mov into fsubr clc push adc das cmp test fsub hlt add sbb fs mov lock or sub inc push popa outsl jge cwtl cmpsb mov shl out cld or es push pop insb jp xchg movsb mov into fsubr testl adcl out add pop sub jae (bad) popf stos mov decl push pusha outsl jge cwtl cmpsl mov shl out cld or es push pop insb jp xchg movsl mov iret fucomp stc pop adc pop imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov add push sub dec push fs mov lock or sub inc push popa outsl jle lcall lock sub inc push jo mov adc inc pusha jnp lahf mov xor data16 nop sahf lods mov sub push xchg ljmp dec pop imul pop sbb mov and push insl test sbb dec bound test fsubr or cmp bound lea lock sub inc push pop insl jnp xchg movsl mov iret (bad) push sub push push fsubr add inc pop js cmpsb mov in add xor jbe lahf mov xor pop jne movsb mov cs pusha je cmpsb rcr add dec popa jnp scas (bad) aad icebp decl push bound mov loopne cld or es (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl pop insl jnp xchg movsl mov iret fucomp stc or es push pop insb jp xchg movsb mov enter and ds pop imul lret (bad) cmc add push sub dec push fs mov icebp add sbb cmp bound mov loopne std or daa ss push pusha outsb jl mov pop xor mov shr pop sbb cmp data16 xchg lahf lods mov add push sub dec push fs mov jecxz add sbb cmp bound mov loopne cld or sub inc push pusha outsb jl cltd cmpsl mov shl out cld or es push pop outsb jl cwtl cmpsb mov rcr in sti or es push pusha outsb jl cwtl cmpsb mov rcr out cld adc mov add aaa dec arpl ret fpatan push and push outsb adcl and push outsb jge mov (bad) or inc push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp mov clc pop adc pop push mov jmp push adc xor dec pop push scas mov add push sub dec pop data16 nop sahf lods mov add push sub inc push gs (bad) popf stos mov push sub dec push fs mov out std or sub inc push arpl mov loope add sbb arpl lea loope decb daa xor jl cwtl cmpsb mov rcr out cld or es push pop insb jnp cwtl cmpsb mov rcr in cli or and inc dec pop imul mov jmp pop adc pop imul movsb mov rcr in cli or and inc dec pop push xchg fsubr stc push adc xor dec pop push xchg fucomi testl dec pop push mov fsubrp cli or and inc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl insb jp xchg movsb add sti or and insb jp xchg movsb mov into fsubr stc or and insl jnp cwtl cmpsl mov shl out cld or daa ss push pop outsb jge cltd cmpsl mov shl out std or sub jl cwtl cmpsb mov rcr in sti or es jnp xchg movsl mov rcr in cli or and inc dec pop push xchg fsubr stc pop adc pop imul into fucomp stc or and insl jnp cltd cmpsb mov shl in sti or and imul movsb mov iret fucomp stc pop adc pop push xchg fsubrp sti or es push pop insl jnp xchg cmpsb mov rcr in cli or and outsb jl cwtl cmpsb mov rcr in sti or and insl jnp xchg movsl mov iret fucomp stc pop adc pop push xchg fsubrp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cli or and inc dec pop imul mov call xor dec pop imul movsb mov into fsubr clc push adc xor dec pop addr16 xchg lahf lods mov add push sub dec push fs (bad) popf stos mov add sbb arpl lea in add xor jb mov sbb dec bound mov add sbb cmp insb mov add dec pop addr16 nop lahf lods mov add xor jp test das dec arpl mov call addr16 mov (bad) adc inc push jo mov jmp cs pop data16 nop sahf lods mov add sbb bound movsl mov xor pop imul (bad) adc fwait mov jmp push push popf mov sbb inc pusha jns lahf mov ljmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) std push das dec fs movsb mov cmp outsl jge lcall std or daa xor jnp xchg movsb mov into fsubr clc push adc xor test fucomi testl stos mov decb push pusha outsb jl cwtl cmpsb mov rcr in sti or and imul movsl mov iret fucomp stc pop adc pop push scas mov add es pop insb test adc dec pop imul adc cs push gs (bad) popf stos mov add push popa outsl jge cwtl cmpsb mov rcr in cli or and aas dec pop imul int3 (bad) testb cs pop data16 (bad) popf stos mov decl push popa outsl jge cltd add lock or daa xor jl cltd mov in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl and push jo nop mov push xor jno cmpsl mov sub lahf mov sub cmpsb rcr decl and push imul movsb mov into fucomi testl test (bad) testb das cmp (bad) nop sahf lods mov add and cmp test fsub cmc add and cmp pop jns popf stos mov decl push popa outsb jge lcall cld or es push pop insl jnp cltd test vpaddsb adc (bad) mov es pop jae cmpsl rcr push sub xchg lods (bad) xor jns test sub jae cmpsl rcr push daa inc pop jae test fdiv adc inc pop jns scas enter sub pop jns cmpsl mov inc pop jno cmpsb mov sub xchg mov in sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl (bad) fwait mov jmp pop cmp mov inc pop je test fdivr adc dec bound lods (bad) loope adc dec arpl mov call insb xchg sbb mov and pop jae test xor (bad) pushf mov ljmp lahf mov cmp lahf mov ds jno movsb rcr movntps jp scas lret sbb mov jmp push cmp mov inc pop ja lods (bad) loopne adc pushf mov jmp fs stos ret fsubr cli or test loopne adc adcl sbb push data16 xchg lahf lods (bad) or aas pop jae mov pop cs pop jbe stos ret push daa inc pop je lods ret fiaddl clc adc inc pop jae movsb mov cmp xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call cs pop js lods (bad) adc dec bound cmpsl ret sti or sub je mov add aaa push data16 sbb xchg test and dec pop jo movsl mov and cmp mov in add push xor jnp mov in push das dec popa jns stos (bad) adc inc pop jbe cmpsl rcr adc inc pop addr16 mov loopne adc inc pop jns lods (bad) loope adc inc pop jne test fcomi push sub jae test cs pop je movsl mov cmp outsb mov sbb push call imul and pop je test sub pop jns lods (bad) in sbb push call insb test add cs pop addr16 mov loope pop daa xor cmpsl ret sti or mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc aam repnz popf stos mov sub mov and push jo cmpsb rcr push sub jbe lods (bad) loope sbb sbbb add xor bound adc inc pop jl scas (bad) loopne adc mov jecxz adc xchg mov in sbb push imul xchg scas (bad) loop adc xchg scas enter sub scas enter sub bound lret sbb insb test push aaa dec data16 scas leave loop sbb dec data16 mov in sbb mov ljmp mov sub jnp scas leave jecxz pop xor jle mov out sbb mov in add jae test sub js test sub jp scas enter xor sbbl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp mov cmp mov es pop jae test (bad) adc inc pop ja lods (bad) jecxz pop xor fwait mov call imul cmp mov es pop je test sub mov out pop cs pop js mov push sbb cmp bound cmpsb mov sub dec arpl lods (bad) loop or es pop outsl mov and dec fs test (bad) in add cmp imul sbb mov sbb dec gs mov jecxz pop xor ja test sub je test fcomi or cmp test add xor outsl add scas lret loopne adc cmp jne test fdiv add and push jo mov add cmp test add xor ja xchg mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call sbbw dec popa jg mov out sbb dec sbbw cmp sahf mov cmp mov sbb mov and push jae test fdiv or cmp sbbb das dec popa jnp lods (bad) (bad) adc dec fs scas lret adc cltd mov call imul and pop jae test fcomi push sub jbe stos (bad) loop adc mov in add sbbb adc inc pop outsl jge stos (bad) (bad) or arpl movsl mov sub inc pop je stos mov add push outsl xchg and scas lret sbb imul push jecxz das inc pop jne cmpsl ret (bad) adc inc pop ja stos (bad) loope adc inc pop jbe (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call cvtpi2ps xchg scas (bad) loopne push xor sbbl mov and push outsb xchg lods fimull and dec gs test sbb mov pop cs pop je mov add sub sahf mov loope (bad) cmp mov (bad) or aaa push addr16 lods les xchg stos rcr add ja movsl mov sub mov inc pop jo sahf mov loop adc aas push insb xchg adc inc push insl sbbl es insl test or sbbl add js test (bad) in add xor jbe mov fcomi movaps jbe test aad add gs mov sub stos (bad) xlat in add xor test call gs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl (bad) in add sbb arpl lea out pop pop aaa dec addr16 sbbl sub outsl xchg adc aas push insl test or insl test adc aas push cmpsb (bad) aad icebp decl and pop ja movsb rcl icebp pop and push insb xchg sbb dec fs xchg mov loopne adc cmp js test push sbb inc popa jns stos (bad) aad icebp incl sbb mov loop adc inc pop jne stos ret fcomi adc inc pop jne cmpsb ret movaps arpl lret adc fwait mov out sbb dec data16 mov in sbb dec data16 xor jnp lods ret fcomi push es mov cmp xchg and push outsb mov and pop jne test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push adc inc pop js lods enter xor sbbl test push and dec popa jl lods (bad) jecxz add sub jno cmpsl mov add ds jne xchg mov or ja xchg lods (bad) jecxz or pop jbe stos ret fdiv push sub jbe lods (bad) loopne adc cltd mov call imul xor cwtl mov fcomip adc inc arpl add ss insb xchg sbb mov daa inc pop js lods enter xor fwait mov aaa dec xchg ljmp lahf mov ljmp mov and pop jb cmpsb mov cmp jle mov ljmp fwait mov jmp insb xchg and push jno movsl rcr adc dec arpl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp addr16 pushf mov cmp mov inc pop js scas (bad) loop adc xchg lods (bad) loopne adc add cmp mov sub popa jnp mov in pop xor sbbl test and push outsl mov inc pop jp scas leave jecxz sbb dec data16 mov out sbb push insb xchg movsb mov inc pop jne stos (bad) loope adc cwtl mov in adc inc pop jb xchg cmpsb mov and cmp fwait mov jecxz adc das inc pop jne cmpsl rcr push adc xor push insb test push xor cmpsl mov cmp test push cmp test sbb dec data16 sub jae mov sbb dec imul addr16 (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl loop adc inc pusha outsl jge movsb mov aaa inc push insb xchg nopl dec bound xchg scas (bad) notl sub pop ja pushf stos mov sub jno lea movaps ja test and push outsl mov and push outsb mov adc test sub nop test adc xchg scas lret pop xor jg mov fdivrp adc inc pop jno cmpsb mov cmp sbbl push outsb xchg and push outsl mov and cmpsb rcr adc inc pop jns scas leave in sbb dec data16 aaa dec pusha jnp mov lock aas push insb xchg sbb push bound jns nop fwait movsb mov (bad) (bad) jmp pop sub cmp dec pop fs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jl lea aad jmp add sbb xor dec pop outsl jnp xchg mov rcr jmp add sbb xor dec push pop push (bad) lea fucomi testl xor outsl jp nop fwait cmpsb mov (bad) rcr ljmp cmp jns (bad) lcall in stc add add pop gs xchg int3 (bad) loopne hlt decl sbb das cmp pop arpl xchg lret jmp add sbb xor dec push popa insl js nop fwait cmpsb mov leave aam jmp push sub cmp push pop addr16 mov iret (bad) lock pop adc sub inc dec pop arpl test lret out cli push adc sub inc dec pop gs mov (bad) icebp std or dec pop gs mov rcr call and cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp jle xchg mov (bad) icebp std or and cmp pop push orl testb sbb cmp push pusha imul lcall jmp add sbb popa insb jns xchg sahf stos mov into fxam icebp std or sub outsl jp xchg popf test (bad) icebp std or sub sbb inc push mov iret ftst out cli add sbb pop gs test (bad) rcr out sti add cmp pop data16 xchg leave aam ljmp aaa inc dec pop arpl test (bad) iret (bad) icebp cld or sbb xor inc dec dec push pop popa push mov scas mov ror aam loope out hlt cli add push adc and sub dec push pop pusha insw jae addb lods mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc int3 rcr loopne in repz add pop or sub dec push pop pop data16 jb jg mov mov mov fsubp ljmp pop sbb cmp pop arpl jbe (bad) mov scas mov ror aam loope in hlt sti add push adc and sub dec push pop popa push mov scas mov ror aam loope out cmc sti add push adc and cs inc inc dec push pop pusha insw jae addb lods mov mov (bad) in repnz incl and xor ds dec push push pop fs jbe orl mov mov fucom jmp or adc xor push pop popa outsb je addl rol rcr loopne in repnz incl es cmp inc dec add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call pusha data16 jae jg mov mov mov fsubp ljmp pop sbb cmp dec push push pop arpl jbe orl scas mov ret aam loope out hlt cli add or sub dec push pop pop data16 jb jg mov mov mov fsubp jmp clc incb adc sbb cmp pop arpl jbe (bad) mov scas mov ret aad loop out cmc sti add unpckhps and cs push pop bound jne (bad) mov scas mov ret (bad) fsub jmp or push sbb cmp dec push push pop arpl test mov mov fsubp jmp idiv add adc sbb cmp dec push push pop arpl ja orl mov mov (bad) lret fucom jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push cld add unpckhps sub xor push pop popa insl jae addb lods mov mov (bad) in repnz incb and xor ds dec push push pop arpl jbe (bad) mov scas mov ror aad loope out hlt sti add or sub dec push pop pusha insl jae addb lods mov mov fsubp ljmp pop sbb cmp pop arpl jne (bad) mov scas mov rol rcr loopne in repz incl or sbb and inc dec push pop pop imul test stos mov mov fsub call or adc xor inc inc dec push pop pusha insw jae addb lods mov mov fsubp jmp testl sbb and inc dec push push pop arpl jbe (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jge mov scas mov ret aad loop out hlt sti add or sub dec push pop pop gs jb jg mov mov mov fucom jmp or push sbb sub xor push pop popa outsb je addb lods mov mov (bad) jmp clc incb adc sbb ds dec push push pop arpl jbe orl scas mov ror aam loope in hlt cli add or sub cmp inc dec push pop pop data16 jae jg mov mov mov (bad) jmp clc incb adc push and xor cmp pop bound jne (bad) mov scas mov rol aam loope out hlt cli add cmp pop pusha imul orl mov in hlt cli add or sub cmp dec push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall gs jb jg mov mov mov fucom ljmp push sbb sub xor push pop popa outsb jne orl rol rcr loopne in repnz incl and inc dec push push pop fs ja orl mov mov fsub jmp or adc xor inc inc dec push pop pusha insw jae jg mov mov mov fsubp jmp clc incb adc push and xor cmp pop arpl jbe (bad) mov scas mov ror aam loope in hlt cli add or sub dec push pop pop gs jb jle mov mov mov fldl in icebp idiv add adc sbb cmp dec dec push pop arpl jbe (bad) mov scas mov ror aam (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp out hlt cli add or sub cmp inc dec push pop pop imul test stos mov mov fucom ljmp push sbb sub xor push pop popa outsb je addb lods mov mov (bad) in repnz incl and inc dec push push pop arpl jbe orl scas mov ret aad loope out hlt cli add push adc and sub dec push pop pusha data16 jae jg mov mov mov fsubp ljmp push sbb cmp dec push push pop bound jne (bad) mov mov mov fucom jmp or adc xor cmp pop arpl jbe (bad) mov scas mov ret fsubp in repz incl or sbb and inc dec push push pop arpl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl orl scas mov rol aam loope in hlt cli add or sub cmp inc dec push pop pop fs ja orl scas mov ret aad loope out hlt cli add push adc and sub dec push pop pop gs jb jle mov mov mov fsub call or adc and sub dec push pop pop insw jae jg mov mov mov fucom jmp or adc xor inc inc dec push pop pusha data16 jae addb lods mov mov fucom ljmp push sbb sub xor push pop pusha insl jae jnp xchg lods mov rol rcr (bad) in repnz incb and xor cmp pop bound jne orl rol rcr (bad) in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push stc incl and xor cmp pop arpl jne (bad) mov lods mov rol rcr (bad) in repnz incb and inc dec push push pop arpl jbe (bad) mov scas mov rol rcr loopne in repz incl and xor cmp pop arpl jbe orl scas mov rol aam loopne in repz incl or sbb and inc dec push push pop arpl jbe (bad) mov scas mov ror aam loope in repz add or sbb and inc dec push push pop fs ja orl scas add xlat fucom jmp or adc xor inc inc dec push pop popa insl jae addb scas mov ljmp sub pop bound jle xchg xchg popf movsb stos mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov fsub jmp or adc xor inc inc dec push pop pusha insw jae jg mov mov mov fsubp jmp clc incb adc sbb cmp pop bound jne (bad) mov scas mov rol aam loopne in repz add or sbb es cmp inc dec push pop pop imul test test leave iret aad loop out cmc sti add unpckhps and cs inc inc dec push pop pusha insw jae jg mov mov mov fsubp ljmp push sbb sub xor push push pop arpl jbe orl scas mov ret aam loope in hlt cli add or sub cmp inc dec push pop pop imul test stos mov mov fucom jmp or adc xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl dec push pop pusha insl jae addb lods mov mov (bad) jmp clc incb adc sbb cmp pop bound jne (bad) mov scas mov rol rcr loopne in repz add or sub cmp inc dec push pop pop imul test test leave iret aad loop out cmc sti add push adc and cs inc inc dec push pop pusha insw jae addb lods mov mov fsubp ljmp push sbb cmp dec dec push pop bound jne (bad) mov nop xchg pushf mov ret aad loope out hlt cli add or sub cmp inc dec push pop pop imul test stos mov mov fsubp in repnz incl and inc dec push push pop push jnp mov scas mov ror (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call fndisi(8087 out cmc sti add push adc and sub dec push pop popa outsb je addl rol rcr loopne in repz add or sbb es dec push pop pop data16 jb jg mov mov mov fsubp jmp idiv add adc push and xor cmp pop arpl ja test stos mov mov fsub jmp or push sbb sub xor push pop bound jne orl ror aam loope add cmc cld add unpckhps and cs push pop popa outsb je addl rol rcr loopne in repz add or sub cmp inc dec push pop pop gs jb jg mov mov mov fsubp ljmp push sbb cmp pop arpl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp jbe orl scas mov ret aad loop out cmc sti add push adc and cs inc inc dec push pop popa outsb je addl rol rcr loopne in repz incl or sbb and inc dec push pop pop imul test stos mov mov fucom ljmp push sbb cmp dec dec push pop bound jne (bad) mov scas mov ror aam loop out cmc sti add push adc and cs add dec push pop bound jne (bad) mov scas mov ret aad loope out hlt sti add push adc and cs push pop popa push xchg lods mov rol rcr loopne in repz add or sub cmp arpl (bad) mov ret jecxz icebp testl sub cmp inc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl pop imul test stos mov mov fsub jmp or adc xor inc inc dec push pop pusha insw jae addb lods mov mov fsubp ljmp push sbb cmp pop bound jne (bad) mov scas mov rol rcr loopne in repz incl and inc dec push pop pop imul test test leave iret aad fucom jmp or adc xor push pop pusha insl jae addb lods mov mov (bad) jmp clc incb adc sbb cmp pop bound jne (bad) mov lods mov rol aam loope in repz add or sbb and inc dec push pop pop fs ja test test enter (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec aad loop out hlt sti add push adc xor inc inc dec push pop pusha data16 jae jg mov mov mov fucom ljmp push sbb sub xor push pop popa push xchg lods mov mov (bad) in repnz incl and xor cmp pop arpl jne orl scas mov ror aam loope in hlt cli add or daa sub dec push pop pusha data16 jb jg mov mov mov fsubp ljmp push sbb cmp dec dec push pop bound je addl rol rcr (bad) in repz add or sbb es dec push pop pop data16 jb jg mov mov mov fucom jmp adc and cs inc inc dec push pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp insl jae addb lods mov mov (bad) in repnz incl and inc dec push push pop arpl ja test test leave iret aad loop out hlt sti add push adc and sub dec push pop pop gs jb jle mov mov mov fucom ljmp push sbb sub xor push pop popa insl add orl rol rcr (bad) in repz add or sub cmp inc dec push pop pop fs ja orl scas mov ret aad loope out hlt cli add or sub dec push pop pop data16 jb jg mov mov mov fucom jmp or adc xor inc inc dec push pop popa outsb je addl rol rcr (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp jmp clc incb adc push and xor cmp pop arpl jne (bad) mov scas mov ret aam loope in hlt cli add or sub cmp inc dec push pop pop imul test stos mov mov fucom jmp or adc xor inc inc dec push pop pusha insl jae addb lods mov mov (bad) in repnz incb and inc dec push push pop arpl jbe orl scas mov ret aam loope out hlt cli add or sub cmp inc dec push pop pop data16 jb jg mov mov mov fucom ljmp push sbb sub xor push pop popa insl je addb lods mov enter in clc add xor arpl ja lea (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov fcomp in icebp idiv add adc push and inc dec push push pop fs ja test stos mov mov fucom jmp or push sbb sub xor push pop arpl jbe (bad) mov scas mov ret aad loope out hlt sti add push adc and cs inc inc dec add bound je orl rol aam loope in hlt cli add or sub dec push pop pop data16 jb jg mov mov mov (bad) in repnz incl and inc dec push push pop fs ja orl mov mov fsub call or adc xor push pop popa outsb je addl rol rcr loopne in repz incl or sbb and inc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl pop gs jb jle mov mov mov fucom ljmp push sbb sub ss dec dec push pop bound jne (bad) mov scas mov ror aad loope out hlt sti add push adc and sub dec push pop pusha data16 jae jg mov lods mov rol rcr loopne in repz incl or sbb and inc dec push pop pop imul test stos mov mov fsub jmp or push sbb sub ss dec dec push pop bound jne orl rol rcr loopne in repz add or sbb and inc dec push pop pop gs jb jg mov mov mov fsubp ljmp pop push and xor cmp pop imul mov rol aam loopne (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp in repz add or sbb and inc dec push push pop imul test stos mov mov fsub jmp or adc xor inc inc dec push pop pusha data16 jae jg mov mov mov fucom ljmp adc push and inc dec push push pop arpl jbe orl scas mov ror aad loop out cmc sti add push adc xor push pop popa push xchg lods mov rol rcr (bad) in repnz incl and xor ds dec push push pop arpl ja orl scas mov ret aad loop out hlt sti add push adc and sub dec push pop pop data16 jb jg mov mov mov fsubp ljmp push sbb cmp dec dec push pop bound (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp jnp mov lods mov rol rcr loopne in repz add or sbb and inc dec push pop pop imul test stos mov mov fsub call or adc and cs dec push pop bound jne orl rol rcr loopne in repnz incl and inc dec push push pop imul test test leave iret aad loop out cmc sti add push adc and sub dec push pop pusha data16 jae jg mov mov mov fsubp jmp clc incb adc sbb cmp pop arpl jbe (bad) mov scas mov ror aad loop out cmc sti add push adc and xor inc push push pop push addb ret fucom jmp add adc push and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl pop pop imul test stos mov mov fsubp ljmp pop sbb cmp pop arpl jbe orl mov mov faddl in icebp idiv add adc sbb cmp pop arpl jbe (bad) mov scas mov ret aad call scas out push or ds dec push push pusha imul xchg lahf stos mov mov out decb push and cmp dec push pusha insb ja lea rcr jmp and inc dec pop fs orl lret ljmp cmp gs xchg enter testb sbb das cmp pop imul mov ret int in testb push and ss dec push pusha push jg xchg mov fsubr repz adc sub inc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl fs xchg int out std or push pop addr16 mov iret (bad) repnz adc dec pop fs (bad) mov rol rcr loopne in cmc add pop and aaa inc dec push pop popa imul xchg mov fsubrp repnz pop adc xor push pop outsl jns mov ror jecxz testb adc and cmp pop gs (bad) mov ror xlat loopne sti push adc sub cmp push pop data16 mov rcr jmp add sbb arpl xchg leave rcr ljmp xor jo test lret ljmp cmp pop push mov (bad) icebp std or sub inc dec pop data16 mov rcr jmp and inc dec push popa imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl mov lock push adc xor je mov rcr ljmp cmp jae mov (bad) iret (bad) repz adc sub inc dec pop arpl xchg into ftst out cli push adc sub inc dec pop arpl mov (bad) repnz or push sub jo xchg into fxam icebp cld or inc push pop imul (bad) iret (bad) repnz adc dec pop gs mov into (bad) repnz push and push mov fsub hlt decl push and cmp pop imul vpaddusb repz push and cmp pop imul mov repz pop and cmp pop addr16 mov rcr jmp add inc push pop addr16 (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl test rol fsub out cli add or sub cmp pop arpl lea ror fucomip cmc add and cs inc dec push popa insb ja mov into fsub jmp decl adc dec pop data16 xchg lret in testl aaa inc dec push popa imul xchg mov fsub out add add cmp pop outsl jp xchg pushf cmpsl mov leave aam in clc add sbb push pop arpl jp nop pushf cmpsb mov leave rcl fsubrp cmc add adc inc dec pop fs jns (bad) xchg pushf movsb scas mov lock or sub pop outsw jnp xchg pushf test mov jecxz stc add sbb xor js lea rcr out decb adc sub dec push bound orl int3 xlat loop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in stc add sbb xor dec push pusha imul xchg mov (bad) repnz push and data16 test (bad) rcr ljmp xor imul cltd movsl mov (bad) rcr call and addr16 mov into ftst lock push adc sub inc dec pop gs xchg ret in std or pop sub cmp push pop bound jne xchg leave aam loope repz inc dec pop outsb jns nop cltd lahf movsl stos mov (bad) rcr out incb or sbb sub popa outsl jnp xchg popf test mov sti push adc sub inc dec pop data16 mov rcr ljmp cmp pop outsl jns mov loopne hlt decl push and gs xchg int out cld pop adc sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call outsb jnp xchg sahf test in cld or push sub inc dec pop gs mov leave fsub out stc add sbb cmp pop push lahf stos mov iret (bad) repnz or push pop imul mov int3 (bad) loope idiv or dec pop data16 mov ret out std or sub inc dec pop addr16 mov rcr jmp and cmp pop addr16 mov rcr out decb adc dec pop gs mov (bad) icebp sti pop adc sub jno xchg into ftst lock or pop sub inc dec pop gs xchg int jecxz sti push adc push arpl xchg int3 xlat jecxz stc add inc dec push arpl test lret jmp add sbb xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl pusha insb ja nop fwait cmpsl mov lret out cld or sub inc dec pop gs xchg (bad) into fnclex call sbb sub xor push pop outsl jnp (bad) lcall aam call push sub aas inc dec push pop pop push popf test mov int loop testb adc sub cmp jo mov lret in clc add sbb sub inc dec pop arpl (bad) mov into ftst out cli add cmp push pop gs test leave aad jmp add sbb xor inc dec pop insw je addb (bad) rcr out repz or sub dec push push popa insb js mov ret iret fnsetpm(287 out sti push or ds push pop push mov into xlat fucom jmp pop sub aas dec push bound mov int3 xlat (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp out cli push adc push pop push orb ret rcr call pop sub inc dec pop gs xchg lret ljmp ds push pop imul cwtl mov aad in testb sbb sub pop data16 xchg int3 xlat jecxz stc add sbb xor dec push popa insb js nop fwait cmpsb mov lret in clc add sbb xor js (bad) lcall ljmp cmp pop bound mov mov int3 (bad) in stc add adc and cmp push pop outsb je mov lret fucom out cli push bndldx xor aas inc dec push arpl test rcr jmp xor dec push bound xchg into (bad) repnz or and cmp gs xchg (bad) clc add and ss (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl pop addr16 xchg lret (bad) loope stc pop adc xor dec push arpl test leave (bad) loope clc add sbb xor dec push bound test enter hlt decl inc add addr16 xchg lret in clc add sbb push arpl mov aam ljmp xor js (bad) lcall jmp add sbb pusha insb ja mov aad out cli push adc sub outsl jp xchg pushf test mov cli add inc dec pop fs mov iret (bad) repnz or sub outsl jnp xchg popf test mov clc add sbb xor dec push arpl xchg lret fsub out sti push adc push bound test lret (bad) loop stc add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl dec pop arpl xchg int out cld or pop sub jno xchg int in sti pop adc sub inc dec pop gs mov add fucomip hlt decl adc inc dec push pop arpl jbe orl ror loop icebp idiv add sbb sub gs jle mov ret jecxz cli add aaa inc dec push pop imul mov (bad) rcr ljmp cmp arpl test (bad) into ftst out sti add cmp push pop data16 test (bad) iret (bad) icebp std or push sub inc dec pop arpl orl (bad) out cli pop unpckhps daa xor dec push pop push js mov iret aad in sti add xor addr16 mov mov int (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp out idiv add adc xor dec push pop imul pushf test mov testl cmp pop data16 xchg enter in decb adc sub inc dec pop gs mov lret in testl cmp ja (bad) lcall jecxz clc add cmp addr16 xchg leave aad in stc add sbb xor push pop imul mov testl cmp pop push orl testb sbb cmp pop imul test lret (bad) loop testl cs inc dec pop outsl jl mov lret out repz add and push pop bound jg cwtl lahf test ret in cli add inc dec pop addr16 mov rcr ljmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp pop imul ret repz adc dec push arpl xchg lret jecxz pusha insb ja mov rcr ljmp cmp push pusha imul cltd movsb mov (bad) rcr out cld pop adc sub inc dec push pusha imul cltd mov (bad) lock push adc pop fs xchg int jecxz stc add sbb cmp push arpl xchg int3 xlat jecxz cli push adc sub inc dec pop fs xchg int in cld or sub inc dec pop data16 xchg lret xlat in cld pop adc sub inc dec pop gs mov (bad) repnz adc dec push arpl xchg int in cld or sub inc dec pop push mov (bad) repnz or dec pop fs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jnp xchg sahf stos mov into fxam lock push adc sub outsl jnp xchg lahf lods mov (bad) rcr out decl adc dec pop data16 mov (bad) repnz or sub inc push pop addr16 mov into ftst out clc add aaa inc dec push arpl ja test stos mov into xlat loop clc incl cmp pop fs xchg mov lock pop adc dec push pusha imul popf cmpsl mov leave rcr call and inc dec pop arpl xchg (bad) rcr out cld or sbb push pop data16 test ret into fxam lock pop adc xor dec push bound jg xchg mov (bad) in cli add xor inc push pop addr16 fwait mov inc popa jno loop pop addr16 test xchg sahf (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp in cli add cmp push pop push lahf stos mov lret in clc add cmp push lahf stos mov int3 xlat loop clc add sbb cmp pop data16 xchg int in cld or pop sub imul mov aad in clc add and gs mov int in sti push adc sub inc dec pop fs mov int in cld pop adc sub inc dec pop gs xchg int in sti pop adc and cmp dec push pop bound jg xchg mov into (bad) loope clc add cmp gs test mov int3 fsub in hlt cli add adc sub cmp js mov aam in stc add sbb pop add jg cwtl movsb mov lret in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push add inc push pop outsb js sahf test fsubr hlt add sbb cmp pop data16 mov rcr out cld or and addr16 mov rcr jmp and cmp pop imul ret in cli add cmp push pop imul ror loop stc add aas dec push bound test (bad) rcr call sbb pop imul mov repz push and cmp pop addr16 mov rcr jmp and cmp pop imul (bad) rcr ljmp cmp pop imul fwait cmpsl mov lret out stc add sbb pusha imul lcall loop cli pop adc sub jo xchg int3 fdivr (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp out cli push adc push popa insl js nop pushf test mov stc add aas dec pop fs mov (bad) lock push adc sub inc dec pop gs mov (bad) icebp std or push pop push mov xlat loop testb adc push sub dec push push pop arpl jbe orl enter ljmp sub dec push fs jb jg mov lret (bad) loop stc add pop and xor push lcall jmp and cmp push data16 test (bad) out cld pop adc push pop push pushf cmpsb mov enter repz push and pusha imul add mov repnz add adc push pop data16 jbe mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec rcr out sti push adc and push pop insb js xchg mov out hlt sti add pop and inc dec pop fs mov lret in testl cmp pop addr16 mov (bad) into (bad) repnz adc sub outsl jp xchg fwait cmpsb mov (bad) rcr call and cmp pop imul ret loop testl cmp pop data16 mov lret xlat jecxz cli add ds push popa insl js nop pushf test ror jecxz cli push adc push bound xchg int3 xlat jecxz stc add ds push pop gs mov scas mov int jecxz cli pop push adc inc dec push pusha push js mov into aam loope repnz or push sub cmp data16 xchg lret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call loop clc add sbb xor dec pop data16 mov aad out stc add aas dec push pusha imul cwtl mov in decb adc push outsl jns nop fwait movsl mov leave aad in clc add cmp jbe lea rcr jmp and cmp js mov rcr out sti or sub imul cwtl mov (bad) icebp std or pop sub inc dec pop gs mov int jecxz clc add and xor dec push bound test enter testb sbb pop push orl clc add sbb xor dec push bound outsl jp nop pushf test ror jecxz cli add inc dec push arpl xchg into (bad) icebp std or push sub outsl jnp xchg sahf test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec fsub lock or pop sub inc dec pop addr16 mov rcr out decb push and cmp data16 mov rcr call and push movsb mov enter testl cmp pop imul mov testb sbb xor dec push arpl test leave rcr call sbb es pusha data16 jae jg mov (bad) rcr call or push pop push jnp mov mov testb adc inc push pop outsl jns mov int3 fsub out stc add cmp add imul mov leave aam ljmp xor insb ja mov into fsub out cli add aas dec push bound jle xchg fwait mov lret xlat (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp in clc add adc inc push pop addr16 jle xchg lahf stos mov int fnclex in testl ss push pop addr16 mov mov int loope cli add or cmp jne lea rcr out decb adc sub inc dec pop bound (bad) lcall loopne testl inc push pop push mov (bad) lock push adc pop outsl jp xchg pushf test mov icebp sti or sbb xor insb jbe mov iret (bad) icebp decb adc dec pop outsl jp xchg popf test ror jecxz add pop adc push bound test lret (bad) loop stc add inc dec push arpl orl aad in clc add pop and xor inc dec pop outsb jp mov leave aam jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push clc incl cmp pop popa push lcall out cld pop adc sub inc push pop push cmpsl mov lret xlat loop cld or sub inc push pop push mov aad testb sbb cmp pop gs mov leave aad in clc add push sub dec push bound test lret xlat jecxz stc add sbb xor dec push popa insl jns (bad) pushf cmpsl mov enter hlt decb adc sub inc dec push popa imul xchg mov (bad) icebp cld pop adc sub inc dec pop fs mov xlat loop clc add aaa inc dec push arpl xchg lret in clc add ds push popa insl js (bad) pushf test ror in sti pop adc sub inc dec pop fs xchg int3 xlat in cld pop adc sub jno mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov hlt decl pop and cmp data16 mov iret (bad) repnz adc push pop push movsb scas mov hlt decl and cmp pop push mov (bad) repnz adc sub inc dec pop data16 mov rcr jmp add inc push pop push mov fsubr hlt add and cmp push pusha imul lcall out cli add sbb xor cmp dec pop data16 jge mov mov (bad) in std add add xor push (bad) mov mov lret (bad) loope testl aaa inc dec push pop push lcall in std push adc sub ds push popa imul xchg mov (bad) loopne testl aaa inc dec pop outsl jp nop lcall in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) out cli add ds push pusha imul xchg lahf test int jecxz cli add sbb inc push pop addr16 xchg leave aad jmp sbb sub inc dec push pop gs test mov out sti pop adc sbb dec push popa push (bad) lea rcr call pop sub outsb jns (bad) lcall in testl cmp push pop imul ret into fxam lock push adc push arpl test ror fsubrp idiv or dec pop arpl test (bad) rcr jmp and cmp addr16 mov into (bad) repnz adc sub inc dec pop push mov (bad) repz adc push pop data16 test mov in std (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl ss push pop push xchg mov fsub in hlt cli add adc daa xor inc push pop bound jbe lea into (bad) icebp cld push adc sub inc dec pop push cmpsl mov lret lock or sub inc push pop data16 mov (bad) loopne add cmp pop data16 mov xlat jecxz cli push adc sub outsb jp xchg pushf cmpsl mov leave aad in clc add sbb xor dec push bound xchg ror loop testl dec push pop addr16 mov xlat loope testb sbb cmp push pop insb js (bad) fwait cmpsl mov lret ljmp xor push mov (bad) repnz or push pop addr16 mov rcr call and cmp push pop push test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp fsubrp testb sbb das cmp pop imul mov clc add sbb xor push pop push mov fucomip hlt decl push and cmp pop imul mov clc add sbb cmp push pop push (bad) lea rcr ljmp cmp push pop imul mov clc add sbb xor dec push pusha imul lcall jmp add sbb daa xor jp xchg sahf stos mov int3 fsub out stc add sbb sub pop arpl jl xchg popf mov ret leave iret (bad) fsub repnz adc inc dec push pusha push jg xchg mov int fnop jmp add push and fs ja mov enter icebp std or and arpl xchg leave rcr call (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push decb adc push pop push orl in testb push and inc push pop data16 mov aam jmp clc incl cmp pop gs jb orl into aad call pop sub cmp bound outsl mov int loopne idiv add adc and cmp push bound test int3 xlat loope clc add sbb pop push orb into (bad) call push sub insb ja mov rcr jmp pop sub inc dec pop gs mov (bad) out stc add cmp pop addr16 mov lret ljmp cmp pop push mov fucomp cmc add inc push pop push (bad) mov rcr jmp add inc push pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp jg xchg mov aad loop out idiv or pop sub aas dec push pop arpl orl out sti push adc and sub pusha insb js mov ror fsubrp clc add sbb pusha insb js nop pushf test in std or push pop push mov (bad) out stc add and pop addr16 mov int in cli add inc dec pop arpl test lret xlat loop clc add sbb xor dec push popa outsb jp nop popf test ror loop clc add sbb das cmp pusha imul xchg lahf stos mov lret (bad) loop stc add sbb cmp pop imul leave aam jmp add inc dec push popa imul xchg mov fxam lock push adc xor dec push popa insl jns nop pushf cmpsl mov lret fdivr (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp out sti push adc sub jno mov fsub out sti pop adc sub outsl jp xchg lahf stos mov iret (bad) repz pop and cmp pop imul vpaddusw hlt decl push and push mov fucomip cmc add inc push pop push orl add inc push pop push orl testl cmp jne lea aam jmp add sbb xor jns xchg popf test jecxz cli add cmp pop outsw jne (bad) lea ret (bad) fsub jmp push sub push bound jg xchg lahf stos mov lret rcr fsubp jmp add adc dec pop arpl orl out std or pop sub inc dec (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall outsb jp xchg fwait movsb scas mov icebp cld pop adc xor je mov lret aad jmp decl adc dec pop outsl jnp xchg popf test fucom out hlt cli add adc dec pop bound js (bad) cltd mov rcr call pop daa sub pop imul scas mov ljmp sub dec push pop pusha data16 xchg lret (bad) loop cli push adc xor inc push pop imul mov repnz or push and pop data16 xchg lret fsub out cli add sbb pop push mov fucomp repz pop push sub imul xchg mov (bad) lock pop adc sub outsl jp xchg popf test mov stc add sbb xor dec push popa outsb jns (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl ror in cld or sub inc dec pop data16 mov into aad jmp adc and xor jne xchg ror loop out stc add ds dec push pop pusha imul xchg mov (bad) rcr jmp and inc dec pop arpl xchg rcr out decl pop and cmp pusha insb js nop pushf cmpsl mov leave rcr jmp push sub dec pop data16 test (bad) rcr jmp pop sub inc dec pop gs mov rcr jmp and imul (bad) rcr ljmp cmp outsb jl xchg sahf test mov testb pop and cmp data16 mov rcr call and cmp pop gs test (bad) rcr out std (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl adc dec pop fs xchg int3 fsub out sti pop adc sub inc dec pop fs mov (bad) lock pop adc pop arpl test int in cld or pop sub inc dec pop data16 mov xlat jecxz sti push adc push bound test aad in clc add sbb xor dec push pusha imul cltd movsl mov (bad) rcr ljmp cmp push pop push orl add sbb xor dec push arpl test lret in clc add sbb xor ja mov aad in testl cmp push pop data16 mov mov in icebp idiv add adc xor insl jae jnp mov iret (bad) lock add adc pop imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl mov lock add sbb cmp pop push mov (bad) repnz push adc xor push pop addr16 xchg (bad) rcr out sti pop adc xor push pop imul ret into fchs jmp add adc pop and pop fs xchg leave aam jmp sbb cmp push pop fs xchg mov testl daa xor dec push pop push js test ret into (bad) repz and cmp addr16 mov (bad) loope stc add cmp dec push popa outsb jns nop fwait cmpsb mov enter testb pop and outsb jp xchg pushf test mov add push adc sub cmp ja mov into fsub in clc add sbb pop imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall rcr jmp and cmp pop push mov fsub repz and cmp pop push orb fsub in clc add adc aaa inc dec pop arpl xchg mov lock pop and aaa inc dec push pop pop outsb jp (bad) cltd movsl mov rol aad in clc add cmp pop push mov loopne stc add sbb xor dec pop gs mov iret (bad) icebp cld or push sub cmp test (bad) rcr jmp and ss dec pop gs mov rcr out std or sub inc dec pop gs mov fucomp repz or and cmp pop addr16 mov lret (bad) loope testl cmp push pop push mov fsubrp testl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp xor jne mov (bad) rcr jmp add and cmp pop imul mov hlt add pop and cmp pop push (bad) mov aad in testb sbb das cmp pop push orl testb sbb pusha imul cltd mov fucomp cmc add inc push pop imul mov clc add sbb xor dec push pusha imul lcall ljmp cmp jbe mov rcr ljmp cmp push pusha insb ja lea rcr jmp and cmp pop push addl pushf test ror jecxz sti push adc sub push pushf mov into fnclex jmp or adc inc dec pop data16 jge mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl jmp adc pop sub ds push pop push orl out sti add cmp pusha insl jbe mov rcr in cld push adc and pop addr16 mov leave rcr call sbb xor inc push pop addr16 mov rcr out clc add sbb es cmp pop addr16 mov mov hlt cli add push and inc push push pop gs mov mov repz sbb daa cmp pop gs (bad) mov mov testb sbb pop push orb (bad) rcr out std or sub inc dec push pop gs mov int3 xlat loop cli push adc xor jne mov rcr jmp and cmp dec pop data16 jns (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall rcr out std or pop sub insl jp xchg pushf test mov cli push adc pop arpl test lret in clc add sbb xor dec push popa insb js (bad) lcall ljmp sub dec pop fs test mov repz push push and inc dec pop arpl ja xchg leave rcr loopne out clc add sbb sub push jg xchg mov loopne testl dec pop gs mov rcr out decb pop and insl jl xchg mov int3 xlat jecxz std pop adc push pusha insb js xchg sahf test loope cli add aas dec push arpl xchg int in sti pop adc sub insb ja mov rcr out cld pop adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall push popa imul lcall in clc add sbb xor dec push pusha imul cwtl mov (bad) loope stc add sbb xor dec push pusha imul lcall in stc add aas dec push arpl xchg int3 fsub out sti pop adc push bound xchg lret xlat jecxz cli push adc sub inc dec pop gs mov fsub lock pop adc sub jo mov into (bad) repnz adc dec pop addr16 mov iret (bad) repnz or add cmp pop push mov fucomp hlt add and cmp push pop imul cltd movsb mov (bad) rcr jmp add sbb pop imul fwait cmpsl mov lret (bad) jecxz cli push adc push pusha imul mov jecxz stc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl push or sbb es cmp pop gs xchg mov leave rcr jmp sbb daa sub pop push mov aam out cld push adc and cmp pop gs mov int3 fsub in testb sbb pop outsl jnp nop pushf cmpsb mov leave aam ljmp xor jae mov ftst lock push or and cmp inc dec push pop addr16 mov mov cmc add adc inc dec pop arpl jge lea fwait cmpsl mov (bad) rcr loopne icebp std or sbb dec dec push bound (bad) lea mov hlt decb push and cmp pop imul mov int3 fsub out cli add cmp jne test int jecxz stc add ds push pop push orb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp fsub repz adc push pop outsb jns (bad) cltd movsb mov ret iret frstpm(287 icebp std or sub insb js nop pushf test mov testl aas dec push bound xchg lret xlat loop cli push adc pop gs xchg lret (bad) loop clc add sbb sub inc dec push pop pop imul mov rcr jecxz sti add xor dec push pop imul lods mov int jecxz idiv add adc dec push popa outsb jns nop fwait cmpsb mov int3 xlat jecxz cld or cmp pop imul fwait cmpsl mov lret (bad) loope testl cmp pop outsb js pushf stos mov leave rcr call and pop gs mov rcr out decl pop and cmp push mov fsubr repz push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp sub inc dec pop outsl jns mov aam ljmp xor insl ja lea rcr in clc add sbb pop outsl jns (bad) lcall jecxz clc add ds push popa insl js mov aad in clc add sbb xor dec push bound test int in std or push sub outsl jnp xchg sahf test jecxz sti pop adc sub inc dec pop gs mov (bad) iret (bad) repnz or sub inc dec pop addr16 mov rcr call and cmp pop imul mov repz push and inc dec pop gs mov (bad) repnz adc push pop imul (bad) iret (bad) icebp std or sub inc dec pop data16 mov rcr call (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall and pop imul mov in stc add sub aaa cmp addr16 xchg mov jmp add cmp arpl orl rcr in cli add pop and xor imul mov int jecxz incb adc sub inc dec push pusha push orb lret (bad) loope clc add sbb sub popa insb ja add enter cmc add pop and xor pop imul cwtl mov rcl loopne stc add cmp pop gs mov mov lock pop and inc dec push pop pop data16 mov mov out clc add and cmp push pusha insb jbe mov rcr out std or sub insl jns xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall loope testl cmp jne lea rcr jmp and cmp pop imul mov enter cmc add inc push pop data16 mov (bad) lock pop adc push bound xchg int3 fsub out sti push adc push bound test lret in stc add sbb xor inc add arpl jbe test (bad) rcr jecxz repnz or dec push popa insl ja mov mov hlt add adc sbb push pop arpl mov int3 fsub lock or push pop push movsb scas mov clc add sbb pop imul into fsub in testl cmp je mov (bad) loopne testb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall xor ja (bad) lcall in clc add sbb sub inc dec push pusha insb ja (bad) fwait cmpsb mov enter cmc add and ss dec push arpl test lret (bad) loopne cmc add push and outsl jp xchg sahf test in cld or pop sub inc dec pop arpl test ret int3 (bad) loopne testl cmp insl js mov aad in clc add sbb xor js (bad) fwait test ror jecxz stc add cmp js nop pushf cmpsl mov int3 xlat jecxz cli push adc pop fs xchg lret (bad) loop clc add sbb xor dec push pusha imul lcall in sti pop adc sub inc dec pop data16 mov int3 xlat jecxz stc add ds push popa insl jns (bad) movsb mov (bad) in add push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call xor push pop bound jne (bad) mov scas mov rol rcr loopne in repnz incl and xor cmp pop arpl jbe orl scas mov ret aad loop out hlt sti add or cmp outsl jns lea lret in cmc decl adc sub cmp inc dec push add insw jae test (bad) xlat fsubp ljmp push sbb sub xor pop data16 test (bad) in cld pop adc sub jo xchg leave aam jmp adc push and inc dec push push pop arpl jbe orl scas mov ror aam loope in repz add or sbb and inc dec push push pop fs jbe xchg (bad) rcr jmp adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall sub ds push pop gs test ret jecxz testl cmp push bound jle xchg lahf cmpsl mov lret call sbb push push pop fs ja orl scas mov ret aad loop out cmc cld add unpckhps sub xor push pop bound je addl mov jmp xor inc push pop arpl jbe orl scas mov ret aad loop out cmc sti add push adc and sub dec push pop pusha data16 jb jg mov mov mov fucom ljmp sub dec push pusha insl jne lea (bad) lret fucom jmp or and inc dec push popa imul xchg mov (bad) lret fucom ljmp adc xor inc inc dec push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall data16 jae jg mov mov mov fucom ljmp push sbb cmp dec dec push pop bound je addl mov lock cmp dec pop push pushf cmpsb scas mov (bad) add sbb xor add gs xchg leave aam call sub push orl repz adc push pop addr16 mov rcr out decb adc push pop push mov (bad) hlt decb adc sub dec pop outsl jns (bad) cltd movsl mov (bad) rcr call push sub outsl jp xchg popf stos mov int in cli add sbb xor push pop outsl jns nop pushf test mov clc add sbb pusha insb js (bad) lcall (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp in clc add sbb xor dec push arpl xchg leave aam in clc add sbb xor push pop imul lcall in stc add aas dec push popa insb ja lea aam jmp add dec push pop imul fwait test add int in sti push adc xor dec push bound test lret out stc add ds push popa insb js (bad) lcall out cli add ds push pusha imul cltd movsl mov (bad) rcr ljmp cmp push popa insb js (bad) fwait cmpsl mov lret xlat loop cli add pop and inc dec push pop bound jns nop fwait mov ret aam loope testl ds dec push pop outsl jns mov lret rcl fucom lock add cmp jb test (bad) into fsub out sti or sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl inc dec pop arpl test (bad) in cli add sbb cmp pop data16 mov (bad) rcr out std or sub inc dec pop gs xchg enter in repnz pop adc sub dec add arpl test mov icebp cld or pop pop sub dec push popa insb jae orl out decb adc sub cmp fs xchg lret fsub icebp cld pop adc sub outsb jp xchg pushf cmpsl mov leave aad jmp add adc and ds push pusha imul xchg mov fsub icebp cld pop adc pop bound xchg lret xlat loop clc add pop and inc dec push arpl test (bad) rcr call and data16 mov rcr out decb push and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall jb mov (bad) repnz adc sub inc dec pop gs mov enter jmp clc incb sbb xor inc push pop arpl jnp xchg pushf cmpsl mov ret lret jmp add or and sub pop data16 xchg mov iret fsub in cli push adc xor js (bad) fwait cmpsl mov int3 fsub lock or push pop push orl repnz pop adc cmp pop arpl orl rcr ljmp cmp pop push mov (bad) repnz pop and cmp pop imul mov cmc add adc dec pop outsl jns lea into fsub out cli add cmp push popa insl js nop fwait cmpsl mov lret in testl cmp arpl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc rcr call pop sub inc dec pop gs mov iret (bad) repz adc push pop imul mov repz push and cmp dec push pop push orb loopne clc add sbb xor dec push pop push orb rcr call and addr16 mov rcr call and push mov (bad) repnz adc dec pop data16 mov iret (bad) repz push and cmp pop data16 mov iret (bad) repnz or and addr16 mov rcr call push sub cmp outsb je test mov (bad) out testl cmp dec push pop outsw jns mov rcl fsubp ljmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl aas dec push popa insb jne mov (bad) in clc add sbb xor inc push pop addr16 mov xlat loop testb add and inc dec pop outsl jp mov rcr in stc add sbb cmp pop data16 mov int (bad) in repnz decl adc push pop bound jne orl rol rcr (bad) in repnz incb and xor cmp pop arpl jne (bad) mov scas mov rol aam loopne in repz add or sbb and inc dec push push pop fs ja orl scas mov ret aad loop out hlt sti add or sub dec push pop pop imul test stos mov mov fsub jmp or adc xor push pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp insl jae addb stos mov mov fucom ljmp push sbb sub xor push push pop arpl jne (bad) lea mov fsubp jmp idiv add adc sbb cmp dec dec push pop bound je addl rol rcr (bad) in repnz incb adc sbb cmp pop bound jne addl rol rcr (bad) in repnz incl and xor cmp pop bound jne orl jecxz out idiv add unpckhps sub xor push pop popa insl je addb lods mov mov fsubp ljmp push sbb sub xor push pop popa outsb je addb lods mov mov fsubp jmp idiv add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl adc sbb cmp dec dec push pop popa push xchg test mov rol rcr loopne in repnz incl or es dec push pop pop data16 jb jg mov mov mov fucom ljmp adc xor inc inc dec push pop pusha insw jae jg mov mov mov fucom jmp or push sbb sub xor push pop pusha insl jae jg mov mov mov fsubp jmp clc incb adc sbb cmp dec push push pop bound jne (bad) mov lods mov rol rcr loopne in repnz incl and xor ds dec push push pop fs ja test test leave iret aad loop out hlt sti add or sub cmp inc dec push pop pop imul test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call mov ret leave iret (bad) fsub call add unpckhps sub xor inc inc dec push pop pusha insw jae jg mov mov mov fucom ljmp push sbb sub xor push pop popa insl je addb lods mov mov fsubp ljmp push sbb sub ss dec dec push pop bound je addl mov (bad) jmp clc incb adc sbb cmp dec dec push pop bound jne (bad) mov lods mov rol rcr (bad) in repnz incl and xor cmp pop bound jne (bad) mov scas mov rol rcr loopne in repz incl and inc dec push push pop arpl jbe (bad) mov scas mov ret aad loop hlt decl adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl inc dec pop arpl outsb js lea mov repnz add adc sbb cmp pop bound jne (bad) mov scas mov (bad) rcr jecxz hlt add adc and cmp push pop push (bad) pushf movsb stos mov mov fsub call or adc xor inc inc dec push pop pusha insw jae jg mov mov mov fucom jmp or adc ds push arpl jbe orl scas mov ror aam loope in repz add or sbb and inc dec push push pop fs jbe orl scas mov ret aad loope out hlt cli add or sub cmp inc dec push pop pop imul test test lret fsub jmp or adc xor add dec push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall insl jae addb stos mov mov fucom ljmp push sbb sub xor push pop popa insl jae addb stos mov mov fucom jmp or adc cmp pop pop imul test stos mov mov fsub jmp or adc xor inc inc dec push pop pusha insw jae jg lea mov mov fsubp jmp clc incb adc push and xor cmp pop arpl jbe (bad) mov scas mov ret aad loope out hlt cli add or xor dec push pusha insl jae addb lods mov mov fsubp jmp idiv add adc push and xor cmp pop arpl jbe orl add iret (bad) fsub jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl unpckhps and cs inc inc dec push pop popa outsb je addl rol rcr (bad) in repnz incb and xor ds dec push push pop arpl jbe orl mov (bad) out repz add or sub cmp inc dec push pop pop imul test test leave iret (bad) fsub jmp or adc xor inc inc dec push pop pusha data16 jae jg mov mov mov fucom ljmp push sbb cmp dec dec push pop bound jne orl rol rcr loopne in repz incl and inc dec push pop pop gs jb jle mov mov mov fucom jmp add adc sbb cmp dec dec push pop popa push mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall mov fchs out repnz incl and xor cmp pop arpl jbe (bad) mov scas mov ret aad loope out hlt cli add or sub cmp inc dec push pop pop imul test stos mov mov fsub jmp or adc xor push pop pusha insl jae addb lods mov mov fsubp ljmp push sbb cmp pop bound jne (bad) mov lods mov rol rcr loopne in repnz incl and xor ds dec push push pop arpl ja orl scas mov ret aad loope out hlt cli add or sub cmp add push pop pusha data16 jae jg mov mov mov fsubp out clc add sbb xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl pop imul popf test mov in repnz incl and inc dec push pop pop imul test mov out cmc decl pop push and push pop pusha imul lea mov mov (bad) in repnz incl and inc dec push push pop fs jbe orl scas mov ret aad loope out hlt std pop adc sub push pop bound jne orl rol aam loopne in repz add or sub cmp inc dec push pop pusha data16 jae jg mov mov mov fsubp ljmp push sbb sub ss dec dec add arpl jne (bad) mov scas mov ror aam loope in repz add or sbb es cmp inc dec push pop pop gs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp js test stos mov mov fsub jmp or adc xor inc inc dec push pop pusha insw jae jg mov mov mov fucom ljmp daa sub dec push pop pusha data16 jae jg mov mov mov fsubp jmp idiv add adc sbb cmp pop fs ja orl scas mov ret aad loop out cmc sti add push adc and cs inc dec push pop popa push dec test cli outsl (bad) push pop nop sahf stos mov into (bad) repnz adc dec pop addr16 mov rcr jmp xor jnp xchg sahf stos mov hlt add push fs mov fsubr cmc add dec push bound mov loopne clc add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall pop imul mov cld pop adc cmp pop imul sahf lods mov testl dec pop push cmpsl mov int3 fsub icebp decb add xor dec push bound mov fsubrp repz or sub ds push pop push lahf stos mov enter repnz push adc and pop arpl orl loopne hlt decb adc xor push pop data16 xchg (bad) into fsub in testb adc sub cmp push pop outsl jns mov lret aad jmp sbb xor inc dec pop outsl jns mov lret aad ljmp xor inc dec pop arpl (bad) mov leave rcr out sti add cmp push pusha imul mov out stc add sbb sub inc dec push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall jae xchg (bad) into fsub in clc add and xor imul mov out stc add inc dec push pop add orb (bad) rcr in cld pop adc xor (bad) jecxz testl js mov (bad) rcr in stc add add push bound mov dec imul cwtl mov aad ljmp xor dec push pop addr16 xchg (bad) iret ftst out clc add sbb sub popa imul xchg sahf shrb aaa pop cwtl test add xor cwtl (bad) idivb dec insl sahf scas mov jmp sbb xor inc dec pop arpl mov rcr jecxz clc add dec push pop push sahf test decb and cmp pop fs test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl call and ss dec pop gs mov into ftst push dec jae mov ja add mov lock add sbb cmp push popa imul xchg pushf cmpsb scas mov in testb adc daa xor dec pop outsb js mov movl cli add sbb sub in stc add arpl aas dec outsb mov (bad) sar add pop and xor dec push pop outsw jns lea (bad) rcr in clc add and xor dec push pop gs orl lret call sbb pop bound mov loopne repz pop adc and pop arpl orl out sti pop adc xor inc dec pop bound orb (bad) rcr in clc add and ss (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl push pop addr16 xchg (bad) iret ftst out stc add sbb sub inc dec push pusha push add mov leave rcr call sbb sub pusha push jg xchg sahf test mov lock add cmp bound orl fucomip hlt decb adc push pop data16 test ror fucomip repz pop adc and push arpl mov rcr jmp push sub ds push pop push jle xchg lahf stos mov enter repnz pop adc dec pop outsb ja mov leave rcr out sti add sbb sub pop push lcall loopne hlt decb adc xor inc dec push popa imul popf cmpsl mov (bad) into xlat loope cmc decl adc xor inc dec pop arpl orl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec rcr out cli add sbb sub inc dec push pop push add xlat loope cmc decb adc dec pop bound mov (bad) rcr in stc add and xor dec push pop outsw jp mov lret aad loopne hlt decb adc sub cmp jo mov icebp sti add push data16 test ror fsubrp icebp cld push adc and pop bound mov lret or push pushf cmpsl mov fsubp repnz push adc and pop bound mov rcr out sti push adc and push bound mov int3 (bad) loope testb adc ror sub xchg mov rcl aaa inc dec push bound orl lock pop adc xor inc push pop outsb js mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov lock add addr16 test ret loope cmc decl adc sub addr16 xchg ret int loop testb adc sub lea and dec pop arpl orl repnz push adc and push popa imul xchg lahf test fsub icebp sti add cmp push pusha imul xchg popf cmpsl mov (bad) rcr out daa dec pop push mov or out push arpl mov enter cmc add dec push pop insb js nop pushf cmpsl mov int3 fsub out sti pop adc xor push pop imul mov lret in clc add sbb sub inc push pop outsb js mov int3 xlat loope cli add cmp pop push mov fucomip cmc decl push and addr16 (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jge mov rcr call and cmp jne mov int loop testb sbb xor push pop data16 xchg leave aad in testb add daa xor dec push popa insb jp xchg sahf stos mov int3 fsub in testl aaa inc dec push popa push (bad) mov rcr call and addr16 mov rcr call and cmp push pop push (bad) lea iret (bad) repz adc dec pop data16 mov rcr call and pusha insb ja lea aam ljmp ds push bound test int in sti push adc xor dec pop arpl xchg lret xlat jecxz sti push adc push popa insl jns xchg popf test in add or and cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall jle xchg mov fsub repz push and cmp addr16 mov rcr ljmp ss dec push pop imul cwtl loope stc add sbb cmpsl mov (bad) into fsub in testb adc sub cmp jno xchg in and (bad) lea repz push and inc dec pop arpl test (bad) rcr in cli add cmp push pop imul mov jl mov loope inc push pop test push pop arpl orl in clc add adc inc push pop outsb js mov (bad) rcr out cli add sbb sub inc dec push xchg lahf test (bad) out clc add inc push pop outsb js mov xchg mov rcr out sti add cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl imul xchg popf cmpsl fiaddl adc andl sti add xor data16 xchg ror fucom icebp cli add sbb sub outsl jns mov (bad) iret (bad) in testb adc dec pop bound jg xchg popf cmpsb mov (bad) into xlat loope cmc pushl mov aas jae cmpsb mov add pop outsb jns movsl mov repz push adc xor jb mov aam in clc add inc dec push popa insb ja mov iret fsub in (bad) or daa xor push pop gs mov xlat loop testl cmp jns nop pushf test loope clc add sbb xor dec push bound xchg (bad) rcr out decl adc sub ds push pop imul xchg mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call loop testl cmp data16 mov rcr jmp and das cmp data16 test ret iret (bad) repnz or sub inc dec pop arpl xchg lret in clc add inc dec pop gs mov iret (bad) icebp sti pop adc sub inc dec pop gs xchg int in cld or and aaa inc dec pop gs mov fsub out sti pop adc push arpl xchg int3 fsub out cli push adc push popa insl jns (bad) lcall in clc add sbb xor dec push pusha insb ja (bad) lcall in clc add sbb xor dec push bound test enter testl xor dec pop fs xchg iret (bad) repnz adc sub aas dec push pop push xchg sahf (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp xlat fucom ljmp and mov adc push pop lret repz or sub dec push pusha imul xchg lahf test fimull dec jno stos shl out cli or sbb push pusha imul xchg mov ftst out clc add sbb pop addr16 mov ftst sbb std xor mov std or inc push pop addr16 mov mov in repnz add inc dec popf lods shl add decl adc dec push pop imul ret jecxz testl cmp push pop pop push mov (bad) lock pop adc push pusha imul xchg mov (bad) push sub inc dec push movsb lods mov lret aad jmp sbb push pusha push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jle xchg fwait movsl scas mov ljmp das cmp push pusha push jge xchg fwait movsb scas mov ljmp xor inc dec pop bound mov iret (bad) in testb adc sub cmp pop arpl orb (bad) rcr in testl xor dec push pop outsl jns lea lret out cld push adc and cmp push pop imul scas mov jmp decl adc xor jns nop fwait movsl scas mov jmp decb adc push popa insb ja mov (bad) rcr in clc add adc dec push pop data16 test mov repnz pop adc and push popa imul xchg popf cmpsl mov (bad) in testl xor dec push pop outsw jns mov int (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp in testb adc sub cmp outsl jns lea lret call sbb cmp push popa push jle xchg pushf cmpsb mov (bad) jecxz testl xor push pop outsb js lea leave rcr out sti push adc and push popa imul xchg popf cmpsl mov (bad) loop testb adc sub cmp outsl js lea leave rcr out sti add cmp push bound orl lret out cld push adc and cmp push pusha push jle xchg pushf cmpsb mov (bad) into fsub in testb push and xor dec push popa imul xchg pushf cmpsl mov (bad) jecxz clc add inc dec push popa imul xchg popf cmpsl mov (bad) in stc add sbb cmp push bound mov lret jmp decl adc sub cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp jge xchg pushf cmpsl mov (bad) in stc add inc dec push pop push pushf cmpsl mov (bad) rcr in clc add and xor dec push pop addr16 test ror fucomip repz pop adc push pop gs test ror fucomip repz or sbb push pop outsb js mov lret call push sub cmp outsl mov and dec gs stos ret fdiv or cmp jle lods (bad) fcomi or cmp jge stos ret pop push aaa dec addr16 scas vpmuludq and push imul push push cwtl mov fdivp push es mov fcomip or (bad) cltd mov loopne push es outsb test sub pop jb mov push sub mov push sub movsb mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl inc popa js mov in adc inc pop je mov sbb bound test (bad) in add jle lods (bad) fcomi or cmp insl test sbb dec fs stos rcr pop and push insb sbbl es insb sbbl sub pop jb mov adc mov pop das inc pop ja cmpsb mov xor jp add cmp sbbb daa inc pop outsl mov adc inc pop jae mov push sub mov push sub mov sbb inc pop jbe movsl mov xor jbe movsb mov xor jns test fsubr push push xor stos rcr pop push ss fs lods ret fcomi or aaa dec data16 lods (bad) (bad) or cmp test adc inc pop outsl xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl sub mov pop cs pop jbe movsb mov xor jns test xlat out add jge lods (bad) fcomi or cmp mov in adc inc pop jbe cmpsl mov ss fs stos ret (bad) or cmp (bad) cltd mov in pop das inc pusha js test and push push fdivp or outsl xchg pop das dec pusha ja cmpsb mov xor bound ret pop pop ss push fcomip or (bad) cltd mov loope adc inc pop jno mov sbb inc pop jbe movsl mov aaa dec data16 lods vpsadbw es insl test sub jo mov pop cs pop jns stos ret or cmp sbbl outsl xchg adc mov sbb inc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall lea sbb xchg stos ret or cmp sbbb es mov jecxz adc inc pop jb mov sbb dec pop ja cmpsb mov xor arpl test and push push cltd mov fcomip push es mov jecxz adc inc pop jno mov or aaa push imul pop xor jp test and push imul sub jb mov push das dec fs scas vpmaddwd sbbl and pushf mov jecxz adc inc pop jae mov sbb dec pusha ja movsl mov xor jns test fsubr or cmp sbbl jno lahf mov out adc mov pop cs pop je movsb mov xor jns test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall ss fs stos (bad) fcomi or cmp (bad) lcall inc pop jo lahf mov out adc mov push sub movsl mov xor jge lods ret fcomi or cmp jg scas (bad) fdivp or (bad) lcall inc pop jo mov add xor js cmpsb mov aaa dec sbbb clc adc inc pop jo lahf mov jmp pop ss data16 lods (bad) fdivp or mov sbb inc pop ja test (bad) or lock and pop ja mov jecxz adc ds insb test mov jge pop shrl call dec fdivr adc scas lret adc inc pusha jp lods enter sub jne stos ret fmull jle stos rcr add xor je lahf mov loope adc ds imul or xor pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl mov lcall xchg jmp push cmp xchg and jb cmpsl rcr cvtpi2ps xchg lods lret sbb mov jmp pop cmp mov and fwait inc xchg adc cmp cs pop outsb sbbl and push addr16 scas (bad) fyl2x pop sbb js mov push and push push (bad) add mov or xor mov adc aas pop outsb sbbl sbb dec pop jae lahf mov loopne or cmp jl cmpsl mov sub push insb adcl data16 test xlat out add xor jae mov adc inc pop jno popf mov loop or xchg adc pop outsl test adc cmp addr16 stos mov xor jno (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall sub push insl sbbl sbb dec pusha js movsb mov sub pop jae popf mov fcomip or cmp jl stos rcl add je mov adc sahf mov loopne or sbbb sbb dec pop jne mov add sub pop je mov adc cmp addr16 stos rcl add sub push insb (bad) cwtl scas vpsllq push xor fs lahf lods mov add push sub dec push arpl lea loope decb sub inc push popa outsl jge cltd cmpsl mov shl out std or daa ss push pusha outsb jl xchg cmpsb mov iret fucomp stc pop adc pop imul int3 (bad) testl adcl out add and dec push fdiv or cmp mov fcomi or xor dec pop imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl xchg mov and inc push popa outsl jge cltd cmpsl mov rcr in sti or and inc dec arpl stos ret (bad) or xchg lods enter xor jle mov fcomip push and sahf mov in or push popa outsl jge cltd cmpsl mov roll loope std or es push pop insb jns xchg mov push sbb cmpsl mov (bad) (bad) cmp outsl xchg or jp scas ret fcomi adc cmp (bad) lcall aas push imul sub mov decl sbb cmp bound lea loope std or daa xor jp xchg movsb mov into fsubr clc pop adc pop imul stos (bad) fcomip add pop cs pop data16 nop sahf lods mov add sbb cmp bound lea loop std or sub inc push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp jle lcall cld or es push pop jne test aad add aaa dec gs movsl mov sbb cmp bound mov icebp decl push popa outsl jge cltd cmpsl mov rcr in sti add sbb ss push pop outsb jl cwtl cmpsb mov iret fucomp stc pop adc pop imul movsb mov into fsubr clc push adc das ds pop push lods mov add sbb arpl lea loopne adc cmp imul and dec data16 and push push (bad) out or inc push fs stos ret adc ss push outsl mov jmp xor dec pop push scas mov add and cmp pop data16 nop sahf lods mov add push sub dec push fs nop sahf lods mov add sbb cmp arpl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl (bad) scas (bad) (bad) in add sbb arpl mov icebp decl push fs mov hlt add pop sub jbe xchg mov out add adc xor dec pop push lods mov add pop sub je xchg lahf lods mov add sbb cmp fs (bad) sahf lods mov add and ds pop push mov int3 fucomi stc or and inc dec pop imul movsl mov iret fucomp cli pop adc pop insl jnp xchg movsl mov iret fucomp stc or and insl jnp cwtl test (bad) aam lock daa xor jge lcall std or sub inc push pusha outsb jl cwtl cmpsb mov iret fucomp stc pop push and aas dec pop imul int jmp xor dec pop push scas mov add pop sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl gs nop sahf lods mov add push sub je nop sahf lods mov add sbb arpl mov jecxz add sbb add dec push data16 nop sahf lods mov add push sub dec push gs mov repz push sub dec push gs (bad) popf lods mov add push sub dec push fs mov repz sbb arpl lea loope std or sub inc push pusha outsb jl cwtl cmpsb mov iret fucomp stc pop adc pop push mov fucomp stc pop adc pop push test jmp das cmp (bad) nop sahf lods mov add sbb cmp fs (bad) popf stos mov decb sub inc push pusha outsb jl cltd cmpsl mov shl out cld or daa xor jnp xchg cmpsb mov rcr (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in cli or es push pop insb jp xchg movsl mov shr add cmp jbe stos ret fnop or xchg stos (bad) (bad) in add add sub lea or and inc dec pop imul lret (bad) hlt add jns test sub scas lret adc dec pusha jns test fdiv or aaa dec outsb xchg fldl sbb add xor jp xchg lods vmaskmovdqu loope push sub pusha outsl xchg pop and xchg mov fsubrp cli or cltd mov rcr in add dec fs mov in push cs pop jns stos (bad) adc dec bound stos ret fdiv adc inc pop outsb jge mov in push das dec bound stos (bad) adc inc pop jbe cmpsl rcr or pop jb cmpsl rcr movaps jb movsl mov cmp outsb xchg sbb dec (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp cwtl mov out sbb dec sbbl push imul and jb movsl rcr push sub xchg lods (bad) loop push das dec fs mov in adc pop imul (bad) or inc push arpl mov sbb cmp mov adc ss insl sbbl push push xchg mov in pop xor jl mov out sbb push out pop and push jb cmpsb rcr or aas pop jb lahf int3 jmp sbb dec fs mov out sbb dec sbbw dec sbbb add push insb mov daa inc pop js lods (bad) loopne adc xchg stos (bad) cs pop jns lods (bad) fdivrp adc inc pop jae test fdivp adc inc pop jp mov jecxz push das add jge lods (bad) adc inc pop ja stos (bad) adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl xchg scas enter xor jle mov jmp outsb mov sub je test (bad) adc inc pusha jns lods (bad) loope adc pushf mov jmp and jb movsl mov ds jae test cs fs mov jmp jo movsl mov inc pop js lods (bad) fnop adc inc pop jp lods (bad) loope push xor lcall push insl mov sub js scas (bad) loopne adc dec arpl mov out sbb imul lea cs popa jp cmpsl mov daa inc pop insb jp xchg movsb mov shr push sbb mov push daa inc pop outsb jl cwtl cmpsb mov cmp xchg daa cmp stos rcr or push jo movsl mov cmp sbbl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl jle scas (bad) fcomip adc inc pop je cmpsl rcr adc inc pop jbe sahf mov or sbbl pop jne mov push and push imul (bad) jmp push sbbb push and inc bound test push adc dec pop jbe stos ret fdiv adc inc pop jae cmpsb rcr push sub jno mov and popa jbe lods (bad) loopne adc inc pop ja stos (bad) adc rcr adc inc pop js lods leave jecxz adc mov sbb xchg lods vpsadbw sub jne test fdiv adc inc pop je test frstor push insl test dec imul push and xchg add es push insl test push and cltd mov fdivp or cmp jg mov loopne (bad) ds (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call lcall cmp imul push addr16 scas (bad) or cmp adcl insb test inc pop jb mov adc mov xor arpl cmpsl mov xor ja cmpsl mov aaa dec data16 lods (bad) or cmp sbbl push lcall cmp pushf mov out push cs pop jb mov push cs pop jne movsb mov xor jbe movsl mov xor jbe movsl mov xor js cmpsb mov xor fs test pop ss gs stos ret pop add cmp sbbl push fwait mov loop adc inc pop jno lahf mov cs pop ja cmpsb mov xor arpl test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov ss fs stos ret or cmp jle scas (bad) or cmp test adc inc pop jne movsb mov ss gs lods (bad) fdiv or cmp sbbb and sahf mov out sbb dec popa jnp lods (bad) or xchg push cs pop jbe movsb mov xor jp test and push addr16 mov fcomip or sbbl sub jo lahf mov in adc inc pop jno mov pop cs pop je mov sbb dec bound test pop aaa dec data16 mov in push cs pop je movsb mov push ss gs stos ret fcomi or cmp push lcall inc pop jo sahf mov in adc mov out push sub mov pop das inc pop jne (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl sbb dec pusha js cmpsb mov xor jns cmpsl rcl add jns cmpsl mov xor bound cmpsl mov xor jbe movsb mov das dec pusha js cmpsb mov xor ja cmpsb mov xor jns test pop aaa dec data16 lods ret fcomi or cmp jg scas (bad) loopne (bad) cmp enter sub outsb test adc inc push outsl mov pop das inc pop je mov adc mov xor jp stos ret (bad) or cmp jg scas (bad) (bad) or cmp sbbl outsl xchg adc inc pop jo mov sbb inc pop jbe movsb mov xor jbe cmpsb mov xor js cmpsl mov xor jns cmpsl rcr (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl pop ss gs stos ret or cmp jg lods (bad) or cmp sbbl imul adc aas pop jo lahf mov sub pop jb mov pop cs pop jbe movsb mov xor js test xlat out add jnp stos ret or cmp test sbb dec pusha js stos ret or cmp sbbl sub jb mov sbb dec arpl stos ret fdivp (bad) aas pop jo mov sbb dec arpl stos ret or cmp sbbb daa aas pop outsl xchg push cs pop jbe cmpsb mov xor jns test xlat out push push ss fs stos ret fcomi or cmp adcb and push imul adc inc pop jno mov sbb dec bound cmpsl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov xor fs stos ret or cmp jg scas (bad) fdivp push and popf mov out adc lea sbb dec pop ja cmpsb mov xor bound stos ret or cmp jg or cmp jle scas (bad) (bad) or cmp adcb es mov loopne (bad) cmp mov loope adc aas push outsb test sub jo lahf mov in adc mov pop das inc pop je movsb mov xor js test (bad) or cmp insb sbbl sub jno lahf mov std adc inc pop jae mov sbb dec pusha jp stos rcr or cmp jg lods (bad) or cmp sbbl outsb test adc inc pop jo lahf mov in adc inc pop jo (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall adc inc pop jb mov add inc dec push pop imul mov (bad) loop testb adc inc push pop outsl jp mov lret aad jmp sbb push pop outsb js mov enter repnz push adc and push popa insb jbe mov rcr in stc add inc dec push pop push fwait movsl scas mov in testl xor dec push pop addr16 xchg mov in clc add and xor dec push pop push lcall loope testb adc dec push popa imul xchg lahf stos mov leave aam jmp and xor dec push pop push fwait movsl scas mov in testb push and xor imul mov (bad) rcr out (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) sti or sbb push pop data16 xchg ret into fsub in testb adc sub dec push pop imul mov repnz push adc xor inc dec pop bound mov enter lock add sbb sub inc dec push pop imul mov (bad) into fsub in testl xor dec push pop data16 test ret into fsub out sti push adc push pop gs test ret int3 (bad) loope cmc add or and cmp push popa insb jbe mov lret call sbb xor inc dec pop outsb js mov lret aad jmp sbb dec pop outsl jns mov int3 xlat loope testb adc inc push pop data16 test ror loopne hlt decb adc push pop outsb js mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp ljmp xor push pop outsl jp mov lret aad ljmp xor dec push pop push pushf cmpsb mov (bad) out cld pop adc xor inc push pop push pushf cmpsb mov (bad) rcr in clc add push pop data16 xchg (bad) rcr in stc add inc dec push popa insl js lea lret call sbb cmp arpl outsl jns lea lret call sbb xor push pop gs test ret int loope testb adc sub je mov (bad) in cli add aaa inc dec push pop imul mov (bad) jecxz clc add and ss dec push pop imul mov in testb adc sub cmp push pop fs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp (bad) mov leave rcr out sti push adc and push bound mov rcr in stc add sbb sub inc dec push pusha push jle xchg sahf test mov lock add sbb sub pusha imul xchg sahf test mov lock add sbb sub inc dec push pop imul scas mov in clc add sbb sub bound mov ror loopne repz adc sub cmp jo test ret into fsub in clc add sbb sub outsl jns mov lret aad ljmp xor dec push pop data16 test ret loope testb adc dec push pop push pushf cmpsb mov (bad) jecxz testl xor dec push pop data16 test ror loopne hlt decb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call sbb push pop outsl jns mov lret aad jmp decl adc sub cmp push pop gs xchg leave rcr call sbb xor inc push pop data16 test ret int loope testl xor jo test ret loope cmc decl adc sub cmp push pop data16 xchg ret into (bad) add cli add sbb cmp push pusha imul xchg lahf test fsub lock add cmp push bound mov (bad) rcr out sti add cmp pop bound (bad) mov enter icebp cli add cmp push bound mov leave rcr out cld push adc and cmp push popa insb jbe mov lret xlat in cli push adc push pusha push orl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call fucomp repnz and inc dec push popa imul xchg sahf test mov repz or sbb push pop outsl jns mov lret aad jmp sbb xor inc push pop outsl jp (bad) lcall loopne cmc decl adc sub cmp outsl jns (bad) cltd mov aam ljmp xor push pushf cmpsl mov (bad) jecxz testl xor dec push pop data16 test ror loopne cmc decl adc push pop outsl jns lea lret jmp sbb xor inc dec pop arpl (bad) lea lret call sbb pop bound mov enter icebp sti add cmp bound mov lret aad jmp sbb pop bound (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl mov lret call sbb push bound mov lret ljmp xor jo test ret into fsub in testl xor imul mov lret jmp and xor dec push pop imul test mov icebp sti add cmp pop popa imul xchg mov rcr out cld push adc and push bound orl out sti add cmp push popa imul xchg sahf test mov out cli add sbb sub inc dec push pop imul mov (bad) rcr in sti add cmp outsb js lea int3 (bad) loopne testb adc dec push pop data16 xchg (bad) in stc add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl inc dec push pop imul mov out cli add sbb sub popa imul xchg sahf test mov lock add sbb pop arpl orl call sbb xor inc dec pop outsb js mov into add in clc add aas dec push pop addr16 xchg (bad) into fsub in testl ss dec push pop push fwait movsl mov (bad) jecxz testl ss dec push popa insb js mov rcr out sti push adc xor inc push pop gs orl (bad) out clc add sbb sub pop imul ror loopne cmc add dec push pop addr16 test ret loopne cmc decl adc sub cmp jno xchg (bad) in clc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl or and inc dec push pop imul mov (bad) iret (bad) in clc add and xor addr16 test ror loopne hlt decb adc push popa imul xchg sahf test (bad) out cli add sbb add cmp push popa imul xchg popf test mov out clc add and xor addr16 xchg ret loopne cmc decl adc sub cmp outsl js lea lret aad ljmp xor inc push pop outsb js lea lret jmp sbb pop arpl orl jmp sbb xor inc dec pop gs test (bad) in stc add sbb sub popa insb jbe mov rcr out sti add cmp pop arpl orl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall into ftst out clc add inc dec push popa imul xchg lahf test fucomp repnz push adc and push popa insb jbe mov rcr out sti add cmp push popa add (bad) mov leave aam jmp sbb xor inc dec pop outsb js mov lret aad jmp sbb xor inc dec pop arpl orl jmp add sbb cmp pop arpl orl hlt decl adc sub cmp push pop data16 test ret int jecxz clc add and xor push fwait movsl scas mov in testb adc dec push pop imul mov (bad) in stc add inc dec push pop imul mov (bad) in clc add and xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl pop addr16 xchg ret int loop testl xor dec push pop data16 test (bad) into fsub in testl xor dec push pop addr16 test mov icebp cld pop adc xor inc dec pop gs xchg (bad) out cli add sbb sub jo xchg (bad) rcr in stc add sbb sub inc dec push pusha insb jbe lea lret ljmp xor inc push pop outsb js lea lret call sbb xor push pop data16 xchg ror fucomip repz pop adc and pop bound mov leave rcr out sti add cmp push pusha push jle xchg popf cmpsl mov (bad) rcr in stc add inc dec push pop push lcall loopne hlt (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decb adc push pop outsb js mov lret call sbb push popa imul xchg sahf test mov out add push adc and cmp push pusha push jle xchg popf cmpsl mov (bad) rcr in stc add inc dec push pop imul mov lock add sbb sub pop imul mov (bad) in stc add sbb cmp pop arpl (bad) mov lret ljmp xor lods mov lret aad ljmp xor jno test ret loope testb adc sub cmp push pop outsl jns lea leave rcr out sti add aaa inc dec push pop push jle xchg fwait cmpsb mov (bad) into fsub in testb adc daa xor push pop outsb js mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call frstpm(287 out stc add aas dec push pop addr16 test ret loopne hlt decb adc push pop addr16 test nop lcall loope cmc decl adc dec pop arpl orl out cli add sbb sub pop imul mov (bad) int loope cmc decl adc dec pop arpl (bad) mov leave rcr jmp sbb push popa insb jbe mov rcr in stc add aas dec push pop data16 test ror fucomip repz or sbb xor inc dec pop arpl orl out cli add cmp push pusha push jle xchg popf cmpsb mov (bad) jecxz testl ss dec push popa imul xchg mov fsub jmp add adc sub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call jb xchg aad in clc add inc dec push pusha push jle xchg pushf cmpsb mov add xlat loop testl xor addr16 xchg ret loopne hlt decb adc push pop data16 xchg (bad) jecxz testl xor dec push pop data16 test ror loopne cmc decl push and xor dec push pop data16 test ror fucomip repnz pop adc and pop bound orl out sti add cmp arpl orl out sti add cmp push pusha imul popf cmpsl mov (bad) rcr in clc add inc dec push pop push jle xchg pushf cmpsl mov (bad) in stc add inc dec push pop imul mov (bad) jecxz idiv (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl or dec push pop imul scas mov in add add and xor push popf cmpsl mov (bad) rcr in stc add inc dec pop bound lea lret aad jmp sbb xor inc dec pop arpl orl ljmp xor dec push pop push sahf test mov lock add cmp push popa imul xchg sahf test mov repnz pop adc and pop outsl jns lea lret jmp sbb xor inc dec pop arpl (bad) mov leave rcr call sbb cmp pop outsb jns lea leave aam jmp and ss dec push pop imul mov lock add cmp pop arpl test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl ljmp xor add pop gs test ror loopne testb adc dec push pop push jle xchg pushf cmpsb mov (bad) in clc add sbb sub inc dec push pop imul mov (bad) iret (bad) in testl xor imul mov (bad) iret (bad) out clc add inc dec push pop imul mov (bad) rcr in stc add sbb sub bound mov leave rcr jmp pop sub dec push pusha push orb leave rcr call sbb xor inc dec pop data16 xchg mov (bad) loopne cmc decl adc push pop outsl jnp xchg fwait cmpsb mov (bad) into (bad) in clc add and xor dec push pop addr16 xchg (bad) into xlat loop testb adc sub aas dec push pop addr16 (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jl xchg fwait add (bad) in testl xor dec push pop data16 xchg (bad) rcr out cli add sbb sub inc dec push pop imul mov (bad) into fsub jmp add adc sub cmp jo xchg ret int loope cmc decl adc push pop outsl jp (bad) cltd movsb scas mov ljmp xor inc dec pop arpl (bad) mov enter icebp sti add cmp push popa insb jne mov rcr in stc add sbb sub pusha push jle xchg sahf test mov out stc add inc dec push pop push popf cmpsl mov (bad) rcr in stc add sbb cmp pop arpl test ror fucomip repz adc push pop data16 test ret (bad) out clc add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl inc dec push pusha insb ja (bad) lcall in cli add cmp pop outsl jns lea lret call sbb xor inc dec pop gs xchg (bad) iret (bad) in clc add and inc dec push pop imul mov (bad) in stc add sbb sub inc dec push pusha push jg xchg lahf test fucom repnz push adc and cmp push popa imul xchg sahf test fucomp repnz pop adc dec pop arpl (bad) mov leave rcr call sbb push pop data16 test ror loopne hlt decb adc push pop outsl jns lea lret (bad) loopne cmc decl adc push pop outsl jns lea lret jmp sbb sub cmp push pop data16 test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc into (bad) in clc add and xor push fwait movsl scas mov out clc add and ss dec push pop push popf test mov lock add cmp push popa insb ja mov iret ftst out stc add sbb pop addr16 mov (bad) rcr in cli adc sub imul mov in testb sbb sub inc dec push pop push jle xchg pushf movsl mov (bad) in clc add and xor push jle xchg pushf cmpsb mov (bad) rcr in stc add inc dec push pop imul mov out clc add and bound mov rcr out cli add sbb sub pusha push jle mov rcr in cli add pop and inc dec push pop push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl mov in testb adc inc push pop data16 test (bad) into fsub in testl xor jo test ror fucomip repz pop adc xor push pop outsl jns mov lret (bad) loopne hlt decb adc dec pop outsb js lea int3 (bad) loope cmc add adc sub dec push pop data16 test ret int jecxz testl ss dec push pusha push jg xchg popf test mov repz push adc and cmp push popa imul xchg lahf test fsubrp repz or sbb push pop push fwait movsl mov (bad) rcr out sti add cmp bound mov lret jmp add inc dec push pop push jle xchg pushf cmpsl mov (bad) jecxz clc add and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl inc dec push pop push fwait movsl scas mov in testl xor dec push pop push fwait movsl scas mov in testl xor imul xchg mov aad jmp decl adc sub cmp jb xchg (bad) in clc add inc dec push pop push jg xchg popf cmpsl mov (bad) rcr in cli add sbb cmp push popa insb jbe mov leave rcr out cld push adc and cmp push popa insb jbe mov rcr in cli add sbb sub pusha imul xchg popf cmpsl mov (bad) jecxz clc add and xor push fwait movsl scas mov out stc add nopl sub popa insb jbe mov leave rcr out cld push adc and pop outsl jp xchg pushf cmpsb mov (bad) rcr (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call and popa imul xchg sahf test enter testl xor push fwait cmpsb mov lret aad jmp push sub cmp jno test ret loopne hlt decl adc sub outsl jns lea int3 xlat loope testb adc dec push pop addr16 test ret iret (bad) out clc add and xor addr16 xchg ret loopne hlt decb adc sub cmp push pop outsb js mov lret call sbb push bound mov rcr in stc add sbb sub pop add orb (bad) rcr out cli add cmp push pusha push jle xchg pushf cmpsb mov (bad) into fsub in testl xor dec push pop addr16 test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall int3 xlat loope testb adc sub cmp jno test ret int loope cmc decl adc dec push pop gs test (bad) rcr call sbb xor inc dec pop outsl jns (bad) lcall loope cmc add adc dec push pop addr16 mov (bad) in cli add sbb cmp pop bound mov enter lock add cmp push bound orl repz or sbb xor inc push pop outsb js mov leave rcr out cld pop adc push pop imul add jmp add push and inc dec push popa imul xchg mov xlat loop clc add sbb cmp push pop addr16 xchg (bad) rcr call pop sub dec push pop push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl mov int loop clc add sbb das cmp data16 xchg enter cmc add push and inc dec push bound orl into fsub out clc add sbb cmp outsb jp nop fwait cmpsb mov (bad) rcr out sti push adc xor push pop addr16 xchg enter repz or push sub ds push pop push jg xchg mov (bad) out cli add sbb pop data16 xchg (bad) rcr out decb push and inc dec pop outsl jp xchg pushf test mov testl cmp pop data16 cwtl add fsub repnz pop adc xor push pop imul mov lock pop adc xor jbe mov int loop clc add sbb pop addr16 xchg leave sar (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fsubrp hlt decb adc sub insb jbe lea rcr call pop sub imul xchg mov frstpm(287 out clc add pop sbb cmp pop arpl jne (bad) mov lods mov rol rcr (bad) in repnz incb adc push and xor cmp pop bound jbe (bad) mov scas mov rol rcr loopne in repnz incl and xor cmp pop bound jne (bad) mov scas mov rol rcr loopne in repz incl and xor cmp inc dec push push pop fs ja orl scas mov rol aam loope out hlt cli add or sub cmp inc dec push push pop fs ja orl scas mov rol aam loopne in repz incl or sbb and inc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl push pop fs jbe orl scas mov rol aam loopne in repz incl or sbb sub cmp ja xchg sahf test fucom jmp add cmp gs jb jg mov ror jecxz lock add adc sbb sub aaa cmp pop fs ja test stos mov mov fucomip idiv push adc push pop pop push xchg lcall aad loop out cmc sti add push adc das xor push pop bound jne orl ror aam loope out hlt sti add push adc and cs inc inc dec push pop pusha insl jae addb lods mov mov (bad) in repnz incl and xor ds dec push pop pop imul test stos mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call (bad) fucom ljmp push sbb sub xor push pop bound jne (bad) mov scas mov ror aad loope out hlt sti add push adc and sub dec push pop pusha data16 jae jg mov mov mov (bad) in repnz incl and inc dec push push pop fs ja test stos mov mov fsub jmp or push sbb sub ss dec dec push pop bound jo jge mov scas mov ret aad loop out cmc sti add push adc xor push pop bound jne orl rol aam loopne in repz add or sbb es cmp inc dec push pop pop gs jb jg mov mov mov fsubp ljmp pop sbb cmp pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp outsl jbe (bad) mov scas mov ret aad loop out cmc sti add push adc xor inc inc dec push pop popa insl je addb lods mov rol rcr (bad) in repz add or sbb es cmp inc dec push pop pop imul test stos mov mov fsubp jmp clc incb adc pop es cmp inc dec push pop pop gs jb jg mov mov rolb into aad loope out hlt sti add push adc das ss pop arpl ja test test leave iret aad loop out cmc sti add unpckhps and cs inc inc dec push pop popa insl jae addb lods mov mov (bad) jmp clc incb adc push and xor cmp pop bound jne (bad) mov scas mov rol aam loopne out hlt cli add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl or sub dec push pop pop imul test stos mov mov fucom jmp or adc xor push pop bound je addl rol rcr (bad) in repnz incb and xor cmp pop arpl jbe orl scas mov ret aad loope out hlt cli add push adc add sub xor inc inc dec push pop pusha insl jae addb lods mov mov fsubp jmp clc incb adc sbb cmp dec dec push pop bound jne addl rol rcr loopne in repnz incl and xor cmp pop arpl jbe (bad) mov scas mov rol rcr loopne in repz incl and inc dec push push pop fs ja cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl test enter loope in hlt cli add or sub cmp inc dec push pop pop imul test stos mov mov fsub call or adc and sub dec push pop pop gs jae jg mov mov mov fsubp jmp idiv add adc sbb cmp pop add ja orl scas mov ret aad loop out cmc sti add movhps sub xor pop addr16 (bad) mov lret jecxz stc add or cmp dec push pop bound jne (bad) mov scas mov rol rcr loopne in repz incl or sbb and inc dec push pop pop fs ja test stos mov mov fucom jmp or adc xor push pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp insl je addb lods mov mov (bad) in repnz incl and inc dec push push pop fs ja orl scas mov ret aad loope out hlt sti add push adc xor inc inc dec push pop pusha insw jae addb lods mov mov fsubp ljmp adc push and xor ds dec push pop pop fs ja test test leave iret aad loop out cmc sti add push adc and sub dec push pop pusha data16 jae addb lods mov mov fsubp jmp clc incb adc sbb cmp pop arpl jne (bad) mov scas mov ret aam loope out hlt cli add or sub cmp inc dec push pop pop imul test stos mov mov fsub (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp or push sbb sub xor push pop popa push xchg lods mov rol rcr (bad) in repnz incl and inc dec push pop pop imul test stos mov mov fsub jmp or adc xor inc add push pop bound jne (bad) mov scas mov rol aam loopne in repz add or sbb es cmp inc dec push pop pop imul test stos mov mov fucom ljmp and cs inc inc dec push pop pusha insw jae jg mov mov mov fucom ljmp push sbb sub xor push pop popa push xchg lods mov mov fsubp jmp idiv add adc sbb cmp pop bound jne (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jl mov scas mov rol rcr loopne in repnz incl and xor cmp pop fs jbe orl scas mov ret aad loop out cmc sti add push adc and sub dec push pop pop gs jb jle mov lods mov mov fsubp jmp idiv add adc sbb cmp dec dec push pop bound je addl mov (bad) in repnz incb and xor cmp pop arpl jne (bad) mov lods mov rol rcr loopne in repnz incl and inc dec push push pop arpl jbe orl scas mov rol aam loopne in repz add or sbb and inc dec push pop pop imul test test enter loope out hlt (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cli add or sub cmp inc dec push pop pop imul test stos mov mov fsub jmp or adc and sub dec push pop pop data16 jb jg mov mov mov fcomp in icebp idiv add adc sbb cmp dec dec push pop bound je addl rol rcr (bad) in repnz incl and inc dec push push pop arpl jbe (bad) mov mov cld push adc and cmp push pop pop imul xchg popf mov rcr fsubp jmp idiv add adc sbb cmp pop bound jbe (bad) mov scas mov ror aam loop out cmc sti add push adc and cs inc inc dec push pop pusha insw jae addb lods mov mov (bad) jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push clc incb and inc dec push push pop fs ja test stos mov mov fsub jmp or adc xor push pop bound jne orl mov fndisi(8087 call pop push adc and sub dec push pop pusha data16 jb jg mov mov mov (bad) jmp clc incb and xor cmp pop arpl jbe orl scas mov ret aad loop out cmc sti add push adc and cs inc inc dec push pop pusha insw jae addb lods mov mov fsubp jmp idiv add adc push and xor cmp pop arpl jbe orl scas mov ror aam loope out hlt cli add or sub dec push pop pusha data16 jae (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jg mov mov mov fsubp ljmp push sbb cmp dec dec push pop bound jne (bad) mov scas mov rol aam add call or adc and cs inc inc dec push pop pusha insw jae addb stos mov mov (bad) in repnz incb and xor cmp pop arpl jbe orl scas mov ret aad loop out cmc cld add movhps sub xor push pop bound jne (bad) mov scas mov ror (bad) in repnz incb and xor ds dec push push pop fs jbe orl scas mov ror aam loope in repz add or sbb and inc dec push push pop arpl jbe orl scas mov ret aam loope in hlt cli add or (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call sbb es cmp inc dec push pop pop imul test test leave iret (bad) fsub call pop push adc and sub inc dec push pop pusha insw jae addb lods mov mov fsubp jmp clc incb adc sbb cmp pop bound jne addl rol rcr (bad) jmp clc incb adc sbb cmp pop bound jne orl rol rcr (bad) jmp clc incb adc sbb cmp dec dec push pop bound jne orl rol rcr (bad) jmp clc incb adc sbb cmp dec dec push pop bound je addl rol rcr (bad) jmp clc incb adc sbb cmp dec dec push pop bound je addl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl lods mov mov (bad) jmp clc incb adc sbb cmp dec dec push pop bound outsl jne (bad) mov scas mov rol rcr (bad) in repnz incb and inc dec push push pop arpl jbe (bad) mov scas mov rol rcr (bad) in repnz incl and inc dec push push pop fs jbe orl scas mov ret aad loope out hlt cli add or sub cmp inc dec push pop pop fs ja test stos mov int (bad) lock add adc sub cmp pop pusha insw jae mov mov (bad) out hlt cli add push adc and sub dec push pop pusha data16 jae addb lods mov mov fsubp jmp clc incb adc push and xor cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall push ja orl scas mov ret aad loop out cmc sti add or push sbb sub xor push pop bound je (bad) mov scas mov rol aam loopne in repz add or sbb and inc dec push pop pop imul test stos mov mov fucom ljmp push sbb sub xor push pop popa outsb je addl rol rcr (bad) in repnz incl and inc dec push push pop fs ja orl scas mov ret aad loop out cmc sti add push adc and sub dec push pop popa insl je addb lods mov mov (bad) jmp clc incb adc sbb cmp pop arpl jbe orl scas mov ret aad loope (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp out hlt cli add or sub add pop pusha insl jae addb lods mov mov (bad) jmp clc incb and xor cmp pop arpl jbe orl scas mov ret aad loope out cmc sti add push adc and cs inc inc dec push pop pusha insw jae jg mov mov mov fsubp ljmp push sbb cmp pop arpl jbe (bad) mov scas mov ret aad loop out cmc cld add push adc xor inc inc dec push pop popa jb addl rol rcr (bad) in repnz incb adc push and xor cmp pop bound jne (bad) mov scas mov rol aam loopne in repz incl or sbb and inc dec push push pop arpl jbe (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jl mov test enter loop out hlt sti add or sub cmp inc dec push pop pop imul orl scas mov ret aad loope out hlt sti add or sub dec push pop pop imul test stos mov mov fndisi(8087 call pop or sub cmp inc dec push pop pop imul test test enter loope in hlt cli add or sbb and inc dec push push pop arpl jbe orl scas mov ror aam loopne in repz add or sbb and inc dec push push pop arpl jbe (bad) mov scas mov rol aam loopne in repz incl and xor cmp pop arpl jne (bad) mov lods mov rol roll fnop out (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in repz add or sub cmp inc dec push push pop fs jbe orl scas mov rol aam loopne in repz incl and xor ds dec push push pop arpl jbe (bad) mov scas mov rol rcr loopne in repnz incl and xor cmp pop bound jbe (bad) mov scas mov rol rcr loopne in repnz incl and xor cmp pop arpl jne (bad) mov scas mov rol rcr loopne in repz add or sbb and push pop pusha imul mov mov out hlt std or ss pop bound jne orl rol rcr (bad) jmp clc incb adc sbb cmp dec dec push pop add jbe orl scas (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl aam loopne in repz incl or sbb and inc dec push push pop arpl jbe (bad) mov scas mov rol aam loopne in repz incl and xor cmp pop arpl jne (bad) mov lods mov rol rcr loopne in repnz incl and xor ds dec push push pop arpl jbe (bad) mov scas mov rol rcr (bad) in repnz incl and inc dec push push pop arpl jne (bad) mov lods mov rol rcr (bad) jmp clc incb adc sbb cmp dec push push pop bound jne orl rol rcr (bad) jmp clc incb adc sbb cmp dec dec push pop popa push xchg test mov rol rcr loopne in repnz incl and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp xor cmp pop bound jne orl rol rcr (bad) in repnz incb and xor cmp pop bound jne addl mov fsubp jmp clc incb and xor cmp pop bound jne addl mov (bad) jmp clc incb adc sbb cmp pop bound jne addl mov (bad) jmp idiv add adc sbb cmp dec dec push pop bound jne (bad) mov lods mov rol rcr fcomip idiv add adc push and xor ds dec push push pop fs ja orl mov mov faddl in lock add adc sbb cmp dec dec push pop bound jne orl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl fnop out repz add or sub dec push pop pop imul test stos mov mov fucom jmp or adc xor push pop popa push xchg lods mov rol rcr (bad) in repnz incl and xor ds dec push push pop fs ja test test leave iret aad loop out cmc sti add push adc and sub dec push pop pusha data16 jae jg mov mov mov fsubp jmp idiv add adc sbb cmp pop bound jne (bad) mov scas mov rol aam loope in hlt cli add or add xor inc inc dec push pop pusha data16 jae jg mov mov mov fsubp ljmp pop sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp pop arpl jne (bad) mov scas mov rol aam loopne in repz add or sbb es cmp inc dec push pop pop imul test stos mov mov fucom jmp or adc xor push pop popa insl je addl rol rcr (bad) in repnz incl and inc dec push push pop arpl jbe orl mov mov fucom jmp or adc xor push pop popa insl je addb lods mov iret aad out incb xor dec push pop arpl jle xchg cwtl sahf movsb stos mov mov fcomp in icebp idiv add adc sbb cmp dec dec push pop bound jne (bad) mov scas mov rol rcr loopne in repz incl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call sbb and inc dec push push pop arpl jbe (bad) mov scas mov ror aam loope in repz add or sbb and inc dec push push pop fs ja orl scas mov ret aam loope in hlt cli add or sub dec push pop pop imul test stos mov mov jecxz enter icebp testl inc dec push bound test leave aam ljmp aaa inc dec pop addr16 mov iret (bad) out cmc decl pop pop daa xor dec push pop imul mov enter repz adc push pop gs mov fsub out sti push adc sub inc dec pop gs xchg into fxam icebp std or sub inc dec pop gs mov rcr out std add adc sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl aaa inc dec pop imul xchg pushf mov aam jmp adc push pusha push xchg vpaddusb jmp adc xor addr16 mov lret fsub icebp std or push pop imul mov cli push adc xor ds push pop imul xchg mov ljmp ss dec pop arpl orl rcr ljmp cmp pop imul mov cmc add sbb xor push popa insb ja mov iret (bad) out clc add sbb xor push pop addr16 mov int3 xlat loope cli add inc dec pop fs mov int loop stc add aaa inc dec push bound test enter cmc add and cmp push pop imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall rcr ljmp ds push popa insb ja lea rcr jmp add dec push pop imul lcall out cli push adc push pusha imul lcall jmp add inc push pop imul lcall loopne stc add cmp ja lea rcr ljmp cmp pop imul mov testb sbb cmp pop push (bad) mov rcr ljmp aas dec pop outsl jp xchg popf test loopne hlt decb adc sub aaa ds push pusha imul test stos mov lret aad ljmp and xor dec push pop imul lods mov (bad) rcr call and inc dec push pop addr16 xchg ret in (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) out sti pop adc xor je mov int jecxz testl cmp data16 xchg vpand repnz or push sub outsl jnp lea (bad) (bad) out sti push adc daa xor add dec push pop imul pushf mov xlat loop clc incl cmp pusha addr16 mov ret leave iret fsub out cli add sbb xor aas dec push popa imul cwtl movsb mov (bad) aam ljmp cmp pop push sahf test loop repz add push sub outsb jns xchg pushf test mov testl cmp push pop push orl cld pop adc xor push pop imul mov icebp std or dec pop fs xchg lret xlat loop cli pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call push sub dec pop outsl jp xchg popf test in cli push adc sub aas dec push bound test ret aad loop cmc add and aaa inc dec dec push popa insl js mov (bad) rcr out hlt add or aaa inc dec push outsb jne (bad) mov leave aad in stc add sbb fs mov shl in stc add inc dec pop gs mov int3 xlat jecxz (bad) or dec push pop addr16 mov int loop cli add inc dec pop arpl xchg lret xlat loop stc push adc pop fs mov xlat jecxz cli add sbb pop imul xchg mov ftst out cli add ds push popa insl jns xchg popf stos mov into fxam out cli add sbb xor inc dec pop fs jns (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call lret (bad) loope stc add sbb xor dec push pusha insb ja mov aam jmp add sbb popa insl js (bad) lcall in stc add sbb xor add popa insb js nop pushf test mov cli push adc pop arpl test leave aad in clc add sbb xor dec push bound test int3 xlat jecxz cli pop adc push bound test lret in clc add sbb xor dec push bound xchg int in std or sub inc dec pop gs mov into (bad) lock pop adc sub jo mov rcr jmp and xor imul mov ror aam loope out cmc add and aaa inc dec dec push pop outsl jns (bad) lcall jmp decl adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp xor jo test (bad) lret rcl fucom ljmp xor dec push popa push jle xchg fwait cmpsb mov (bad) iret (bad) out testl xor jae mov into fsub out clc add inc dec pop arpl orl rcr in cli add cmp pop imul mov repz add or ds push pop imul mov (bad) fsub in clc add sbb cmp inc push pop push cltd mov aad in cmc sti add push sbb pop bound jne mov int in std or dec push bound orl rcr jmp and cmp imul cwtl movsb mov enter testb sbb cmp data16 mov (bad) repnz (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl adc daa xor dec push pop push jg xchg mov xlat loop clc add sbb cmp pop push orb (bad) rcr ljmp cmp pop imul (bad) rcr call and cmp pop push orl in clc add es popa insb js mov (bad) iret (bad) in repz pop adc sub pop arpl test mov jmp add adc cmp pop gs mov fsubrp testl inc dec pop data16 mov rcr out std or sub cmp push popa insb jbe mov (bad) repz adc sub inc dec pop addr16 mov iret (bad) repnz or sub inc dec pop data16 mov rcr jmp and arpl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jge xchg pushf cmpsb mov enter hlt add pop and inc dec pop data16 mov add fsubrp testb sbb sub outsb jns mov rcr call and inc dec pop data16 mov (bad) repnz or push pop imul (bad) iret (bad) lock pop adc sub inc dec pop gs xchg into (bad) repz pop and cmp pop imul mov rcr out decb adc dec pop data16 mov rcr jmp and cmp pop imul mov hlt add pop and cmp pop push mov fucomip testb sbb xor jne mov rcr jmp and cmp pop push orl clc add sbb xor inc push pop gs (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp (bad) mov ret lret fucom jmp add and aaa inc dec push pop pusha data16 test (bad) rcr loopne in repz add cmp pop push cltd mov aad call and xor jo orl rcr jmp push sub cmp jne mov lret (bad) loope testl aaa inc dec pop gs xchg lret ljmp and inc dec pop outsl jbe xchg lret rcr loope testl aaa cmp jno mov ret lret aad in cmc sti add adc daa xor push pop arpl ja mov iret (bad) repnz push and ss dec pop fs xchg enter testb sbb push arpl xchg leave aam in testl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl inc dec pop data16 jg xchg mov fsubr cmc decl pop pop sub insb jbe lea int loop clc add inc push pop push orl add and cmp js (bad) lcall jmp add sbb xor dec push popa insb js nop pushf test mov icebp std push or das cmp pop gs xchg mov out testl cmp pop pop addr16 mov mov out cld add xor ja nop pushf test ror in sti or sub inc push pop push mov fsubr hlt decl adc push gs test (bad) shl jmp add pop and addr16 mov rcr out decb adc dec pop data16 (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl mov rcr jmp and cmp outsl jl xchg sahf test mov repz adc dec push arpl xchg into fxam icebp std or sub dec push popa insb jbe mov lret xlat loop clc add sbb xor dec push popa insb js (bad) fwait cmpsl mov enter clc add sbb xor dec push popa outsb jnp xchg popf test loopne testl ds push pusha imul cltd movsl mov leave aam jmp add sbb xor dec push popa insl js (bad) fwait cmpsb mov lret in stc add ds push popa insl js nop pushf test mov sti pop adc sub jo xchg int3 xlat loop clc add inc dec pop arpl xchg lret fsub lock pop adc sub jo xchg int3 xlat jecxz cli add adc sub inc dec pop addr16 (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl mov rcr out decb push and inc dec push pop push orb ror fcomp in icebp clc incb pop and ss dec pop popa insl je test (bad) rcr out hlt cli add bndstx pop imul mov out clc add and cmp push pop imul mov lock add cmp gs xchg lret jmp sbb push popa insl ja mov rcr jecxz cld add adc push xor push pop addr16 orl leave aad out testb sbb sub pop gs test mov testl and cmp push pop imul movsl scas mov cmc add cmp jbe xchg add jecxz testl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl cmp push pop outsb js mov (bad) rcr in clc add and xor addr16 xchg ret int loop cmc daa push jg mov in sti add aaa inc dec push pop imul scas mov jmp add or pop sub cmp outsl jns lea leave rcr out cli add sbb sub pop imul mov mov sbbl fucom ljmp sub inc dec push pop pop addr16 mov mov (bad) lret jmp and inc dec pop gs mov lret fucom jmp or push sbb sub ss dec dec push pop bound jne (bad) mov scas mov ret (bad) fsub call or adc and sub pop popa outsb je addb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall mov sub inc push (bad) lcall in clc add sbb xor dec push popa outsb jns nop pushf test ror jecxz cli push adc sub imul mov out cli add adc push pop push (bad) lea std add adc sbb cmp dec dec push pop popa push xchg lods mov rol rcr (bad) jmp clc incb adc sbb cmp dec jp sahf movsb stos mov mov fucom jmp or adc xor push pop popa outsb je addb lods mov mov fsubp jmp idiv add adc sbb cmp dec dec push pop bound jne (bad) mov scas mov rol rcr loopne in repz incl and inc dec push push pop arpl ja orl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call mov ret aad loop out cmc sti add push adc and cs inc inc dec push pop pusha data16 jae jg mov mov mov fsubp ljmp adc sbb cmp pop bound jne orl rol rcr (bad) in repnz incl and inc dec push pop pop imul test test enter loope out hlt sti add or sub cmp inc dec push pop pop data16 jb jg mov mov mov fsub jmp or adc and cs inc inc dec push pop pusha data16 jae jg mov mov mov fucom ljmp push sbb cmp dec push pusha imul mov hlt sti add cmp pop imul test (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl stos mov ror jecxz cli add or sub cmp inc dec push pop pop gs jb jg mov mov lock push add push pop push mov ftst out clc add inc dec push pusha push jg xchg lahf lods mov lret (bad) (bad) jmp clc incb and xor cmp pop bound jne (bad) mov mov testl cmp pop outsl jbe mov int3 rcr call sbb push pop addr16 mov (bad) rcr jmp push xor dec push pop data16 jb jg mov mov mov fsub jmp or adc and sub dec push pop pop imul test stos mov mov fsub out sti or adc xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl pop pusha insl jae addb lods mov mov (bad) in repnz incb and xor cmp push pop fs jbe orl scas mov (bad) rcr in cld add cmp push push popa insb jns xchg mov mov fsubp jmp idiv add adc sbb cmp dec dec push pop bound je addl rol aam loope in repz add or sub cmp inc dec push pop pop imul test stos mov mov fucom ljmp push sbb sub ss dec dec push pusha insb ja mov enter in testl xor dec push pop push (bad) mov enter idiv or sub aas dec push popa push cwtl lahf movsl stos mov mov fsubp ljmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl or push sbb cmp pop bound jne orl add enter loop out cmc sti add push adc and sub dec push pop pop gs jb jg mov ror (bad) fucom ljmp push sbb sub xor push pop popa insl jae addb lods mov rol rcr loopne in repz add or sbb es cmp inc dec push pop pop imul test stos mov mov fucom jmp or push sbb sub ss dec push push pop bound jbe orl scas mov ror aad loope out cmc sti add movhps sub xor push pop popa push xchg lods mov rol rcr (bad) in repnz add or sbb es cmp inc dec push pop pop imul xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp (bad) int fnop out repz add or daa sub dec push pop pusha insl je addb lods mov rol rcr loopne in hlt cli add or sub dec push pop pop data16 jb jg mov mov mov fsubp jmp clc incb and xor ds dec push push pop arpl jbe orl scas mov ret aad loope out hlt cli add push adc and cs push pop popa insl je addl rol rcr loopne in repz add or sbb and inc dec push pop pusha insw jae addb lods mov mov (bad) in repnz incl and inc dec push pop pop imul test stos mov mov fucom ljmp push sbb sub ss (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp dec dec push pop arpl jbe jge mov mov mov fucom ljmp push sbb cmp dec dec push pop bound jne orl rol rcr (bad) in repnz incb and inc dec push pop pop imul xchg mov mov fsubp ljmp pop sbb cmp pop imul xchg lret rcr out sti push adc xor inc dec pop arpl mov rol aam loopne in hlt add push and cmp inc dec push push pop fs ja orl scas mov ret aad call sbb xor dec push pusha push (bad) mov rcr jmp and aaa inc dec push bound orb lret jmp sbb sub xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl dec push pop bound jne orl ror fucomip repnz push adc xor inc dec push pusha push jge xchg mov rcr out incl or inc dec pop gs ja mov lret (bad) loope testb sbb xor push orl lret rcl fucom ljmp pop sbb ds dec push push pop arpl jbe orl scas mov ret aad loope out hlt cli add or cmp push pop pusha insw jae addb lods mov mov fucom ljmp adc xor push pop popa insl jae addb stos mov mov (bad) jmp clc decb adc daa xor jae mov ret lret fucom jmp or add sbb sub xor (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl pop popa outsb je addl mov fsubp ljmp push sbb sub xor push pop pusha insl jae addb lods mov mov fucom ljmp adc xor inc dec dec push pop pusha insl jae jg mov mov in testl cmp pop outsl jl mov into (bad) jmp sbb xor dec push pop addr16 xchg (bad) lret ljmp sbb sub xor inc inc dec push pop popa insl je addb lods mov rol rcr loopne in repz add push adc and cs inc inc dec push pop pusha insl je addl rol rcr loopne in hlt cli add sbb daa sub add pop bound je addl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc int3 rcr (bad) in repnz incl and xor ds dec push pop pop imul test stos mov mov fucom ljmp adc xor inc dec dec push pop popa push mov scas mov ror aad loope out hlt cli add push adc and sub dec push pop pusha insw jae addb lods mov mov (bad) in repnz incl and inc dec push pop pop imul test stos mov mov fsub ljmp pop push and xor aas inc dec push pop pop imul test stos mov mov fsubp jmp idiv add adc pop es cmp inc dec push pop pusha insw jae jg mov scas mov rol rcr loopne in repnz incl and inc dec push pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall push ja test mov mov fsubp jmp clc incb adc sbb cmp pop arpl jbe orl scas mov ret leave rcl fsub jmp or push sbb sub xor push pop popa insl je addb lods mov mov fsubp jmp idiv add and xor cmp pop fs ja test test lret fsubp ljmp push sbb sub xor push pop popa push mov lods mov rol rcr (bad) in repz add or sbb and inc dec push pop pop fs ja test test lret fsub jmp add movhps sub xor push pop popa outsb je addb lods mov mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in repnz add or sbb and inc dec push pop pop imul test test leave iret aad loop out clc add and push popa insl jns (bad) lcall loopne repz adc sbb cmp pusha push orl int3 rcr (bad) in repz incl push adc and sub push pusha push orb int in cld or push sub inc dec push arpl test (bad) jecxz clc add sbb sub inc dec push pusha push jge mov scas mov ret aad loop out cmc sti add push adc and sub pop imul lods mov into (bad) fucomip testb add sub aas dec push bound xchg enter repnz push adc dec pop arpl test vpsubusb out cli add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call sbb and inc dec push push pop arpl jne (bad) mov lods mov rol rcr (bad) jmp clc incl and xor cmp pop bound jne (bad) mov ret aad loope out hlt cli add or sub cmp inc dec push pop pop imul test test enter loope in repz add or sub cmp inc dec push push pop fs orb xlat fucomip cmc incl push sbb cs inc inc dec push pop pusha insw jae addb lods mov mov fsubp ljmp pop sbb cmp dec push push pop arpl jne jge mov scas mov ror aam loope in repz add or sbb es cmp inc dec push pop pop imul test stos mov mov fsub jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) out idiv add bndldx xor inc dec push bound (bad) mov (bad) out clc add sbb das cmp push pusha insb jne mov enter repz pop and sub pop imul test stos mov mov fsubp ljmp pop sbb cmp dec dec push pop fs jbe orl mov mov fucom ljmp pop sbb cmp pop arpl test lods mov mov fsubp ljmp push sbb sub ss dec dec push pop bound je addl mov fndisi(8087 call pop push adc and sub dec push pop pop insl jae jg mov mov mov fucom jmp or adc xor push pop pusha addr16 (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp jnp xchg lods mov rol aam loope in repz add or sub dec push pop pop gs jb addb lods mov mov (bad) in repnz incb adc push and xor cmp pop imul test stos mov mov fsub jmp or adc xor push pop popa outsb je addb lods mov rol rcr (bad) in repnz incb and xor cmp pop arpl jbe orl scas mov rol aam loopne in repz add or adc xor inc inc dec push pop pusha data16 jb jg mov mov mov fucom ljmp adc xor inc inc dec push pop popa insl jae addb lods mov mov (bad) in repnz (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc incb and xor cmp dec dec push pop bound je addl mov (bad) jmp idiv add adc push and xor cmp pop arpl jne (bad) mov scas mov ret aam loope in repz add or sbb es cmp inc dec push pop pop imul test stos mov mov fsub call pop push adc and sub dec push pop pop gs jb jg mov mov mov fsubp ljmp pop sbb cmp add push pop imul test stos mov mov fucom ljmp push sbb cmp push lcall in sti add pop and ss dec push pusha push ja test test ftst lock add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl adc and sub dec push pop pusha insl jae addb mov lock push adc push arpl test lret (bad) loopne cmc decl adc sub dec push pop push sahf test fsub jmp or push sbb sub xor push pop popa insl je addb (bad) rcr out sti add adc sub cmp push pusha addr16 mov (bad) int jecxz testb sbb push bound orl lret (bad) loop hlt decb pop add sub inc dec pop pusha insw jae addb lods mov rol rcr loopne in repz add or sbb and inc dec push push pop fs js test stos mov mov fucom icebp std or pop sbb cmp dec dec push pop bound jne addl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov fsubp jmp clc incb adc push and inc dec push push pop arpl jne (bad) mov scas mov ror loope repnz adc xor jmp add and data16 mov (bad) repz push and addr16 mov rcr out decb adc sub inc dec pop fs test mov fsubp out stc add ds dec push pop addr16 xchg mov clc add movhps pop push js test lret xlat in sti pop adc xor dec push bound xchg iret (bad) repz pop and cmp pop imul lcall call sbb cmp pusha imul xchg mov fxam lock pop adc xor data16 mov into (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fxam icebp cld pop adc sub inc dec pop fs xchg into (bad) icebp std or sub inc dec push pusha imul lcall in std or push sub push (bad) mov aam jmp add sbb xor push pop push popf cmpsb mov (bad) rcr ljmp cmp pop addr16 mov rcr call and cmp pop push mov fucomip cmc add and cmp pop push (bad) mov aam in testl ds push popa insl js nop fwait cmpsb mov enter testl cmp ja (bad) lcall out sti push adc sub outsb jp xchg sahf test in cli push adc sub outsl jp xchg pushf test ror (bad) icebp std or and push mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call fsubr repz push and inc push pop push mov fsubrp cmc add inc push pop data16 orl ret iret fnclex call pop push adc and cmp pop outsl jne (bad) mov ret into fxam icebp sti add adc sbb xor inc push pop imul mov (bad) rcr out stc add inc dec pop addr16 xchg aam ljmp cmp push arpl test (bad) rcr out cld push adc and pop imul mov in clc add pop push and xor push pop addr16 mov ror loope hlt cli add inc push pop pop addr16 mov ror jecxz testl add xor dec push pop imul mov (bad) out decb pop and cmp pop data16 (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl xchg lret aad ljmp cmp push pop imul mov cmc add and outsl jp nop pushf test mov stc add aas inc push pop push jle xchg sahf test loopne testb pop and data16 mov fsub out sti push adc push arpl test int3 xlat jecxz cli add inc dec push popa insl jns nop fwait cmpsl mov lret in idiv or sub ss dec push pop gs xchg mov testb adc and cmp pop gs jae jg xchg popf stos mov leave rcr loopne in testl aaa inc push pop addr16 mov rcr add stc add sbb xor dec pop fs mov (bad) icebp cld pop adc push pop jae (bad) cltd movsb scas mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec fxam icebp std or sub inc dec push bound test lret (bad) loop sti push adc push arpl test int in decb adc dec pop gs test lret ljmp cmp gs test lret xlat loop cli push adc sub inc dec push popa insl jbe mov int loop cli push adc xor dec push popa insb js nop popf test ror loop cli push adc pop gs mov rcr out decb adc sub inc dec pop gs mov int in std or sub inc dec pop data16 mov int jecxz cld pop adc sub inc dec pop add mov rcr call and cmp pop push mov fsubr hlt decl adc push pop push mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc rcr call and cmp pop push mov (bad) repnz adc dec pop gs mov rcr jmp and cmp pop data16 test mov out idiv add movhps sub xor insb js mov mov out sti push adc push and xor inc dec pop arpl xchg (bad) loop testb adc sub cmp push pusha imul ret iret frstpm(287 out cli push adc sub cmp push pop addr16 xchg (bad) rcr call sbb xor inc push pop data16 mov fsub out cli add xor aas inc dec push pop data16 mov ror loop testb push sbb cmp pop data16 addb lret loope testb adc inc inc dec pop arpl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl orl mov icebp cld or pop sub inc push pop addr16 mov (bad) out sti add ds push popa push pushf test mov testb sbb cmp pop data16 mov (bad) icebp std or sub inc dec pop pusha push orl into xlat loop cli add sbb pop imul (bad) rcr out std or sub inc dec pop gs mov int in sti push adc push bound test lret xlat loop cli push push push and push pop pop push orl (bad) lock push adc and xor dec push pop imul mov ret in icebp clc decb adc sub popa insl jns (bad) lcall out cli push adc sub inc push pop push cmpsb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl in clc add sbb xor jno fwait cmpsb mov (bad) iret (bad) repnz or and ss dec push popa insl js (bad) fwait cmpsl mov leave aam jmp add sbb xor push popa insl js (bad) fwait cmpsl mov lret in cli push adc xor dec push pusha imul xchg mov fsub lock push adc push pusha push orb rcr jmp xor je mov (bad) rcr in cld or pop sub outsb js (bad) fwait cmpsb mov lret jmp add dec push pop imul fwait cmpsl mov lret add cli push adc daa xor dec push popa insl js (bad) lcall in cli push adc sub inc dec pop data16 mov int3 fsub out cli add inc dec pop arpl xchg lret xlat jecxz sti or sub inc dec pop gs xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall fsub out sti push adc xor jo xchg int3 xlat in sti pop adc sub inc dec pop gs mov into (bad) icebp std or sub inc dec pop fs xchg into (bad) repnz adc dec pop gs test ret lret jecxz cld add adc sbb cmp push pop addr16 mov mov (bad) rcr out decb adc cmp dec push pop imul ret fucomip repnz pop adc and pop data16 js xchg lcall loop testb sbb cmp pop arpl test (bad) rcr jmp push sub cmp jb mov ftst out cli pop movhps cmp dec push pop outsl jp nop lcall fsubrp repz push push and xor insb js (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl mov call sbb xor pusha imul cwtl movsl lods mov mov repz or push pop addr16 mov (bad) lock push adc xor dec push popa insl je orl fsub out stc add cmp jae mov iret (bad) repnz or dec pop arpl (bad) lea into frstpm(287 lock or sbb xor dec push pusha insb js (bad) lcall ljmp cmp pop push cwtl mov fsubr repz push and cmp pop push mov xlat loope cmc add and cmp pop addr16 test mov call sbb das ss push pop addr16 mov ret lret (bad) loop repz add bndldx xor inc push pop bound jbe (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl (bad) iret (bad) repnz or and imul fwait cmpsl mov lret fsub icebp cld or sub inc push pop data16 mov int3 xlat jecxz sti add dec push pop push jg xchg mov (bad) lock push adc xor dec push pusha insb js (bad) fwait cmpsb mov (bad) rcr jmp add sbb pop imul lcall out stc add sbb xor dec push pusha imul xchg mov frstpm(287 lock push adc push pop imul mov testb sbb xor jno xchg (bad) rcr in std or sub inc dec pop outsb jp xchg sahf test in sti pop adc sub inc dec pop gs mov rcr out decl push and inc dec pop addr16 mov iret (bad) hlt decl push and cmp pop push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl mov repnz adc dec pop data16 mov (bad) repz push and cmp pop addr16 mov into ftst lock pop adc sub inc dec pop data16 mov int in sti pop adc sub inc dec pop gs mov ftst repnz push and inc dec pop data16 mov rcr ljmp cmp push pop push fwait movsb mov mov add clc incb adc pop and push pop gs xchg mov cmc add sbb es ds push pop push mov rcr call sbb xor push pop imul mov into (bad) in clc add cmp outsl jp nop fwait cmpsb mov (bad) rcr call pop sub dec push pop push mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl out cli add cmp push pop bound jl xchg sahf cmpsl mov enter jmp and cmp pop outsb jns (bad) xchg pushf movsl mov (bad) rcr jmp adc dec push pop pop outsl jp nop lcall (bad) loope stc add sbb xor dec push pusha push jg xchg mov (bad) repnz push adc xor dec push popa insl je test lret jmp add add xor dec push pop push orb iret (bad) repnz or dec pop outsb jns mov xor add sbb sub pusha imul xchg popf cmpsl mov (bad) jecxz testl xor dec push pop addr16 test ror fucomip repz pop adc xor inc dec pop outsb js mov leave rcr out sti add aaa add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call imul xchg popf cmpsl mov (bad) in testl xor imul mov (bad) into (bad) out clc add aas dec push pop push cltd movsb scas mov in cmc add and pusha push jle xchg pushf cmpsb mov (bad) iret (bad) in clc add and popa insl ja mov (bad) rcr in clc add and inc dec push pop imul stos mov enter icebp cld push adc and pop bound orb (bad) rcr in clc add inc dec pop outsl jp mov lret aad ljmp xor inc dec pop arpl orl in clc add sbb sub pop imul mov (bad) into fsub in testb adc sub cmp add xchg ret loop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in cmc decl adc sub cmp outsl jns lea leave rcr call sbb cmp push popa imul xchg sahf test mov out stc add inc dec push pop push jg xchg popf test mov out cli add sbb sub pusha push jg xchg popf test mov icebp std or push sub cmp jno xchg mov icebp sti push adc and cmp push popa imul xchg popf cmpsl mov (bad) rcr in clc add sbb cmp pop outsl jp mov int loop testl xor dec push pop push fwait cmpsb mov (bad) iret (bad) in testl xor push fwait movsl scas mov jmp add adc sub cmp jb xchg mov in testl ss dec push pusha push jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl mov out stc add inc dec push pusha imul xchg mov aad jmp sbb xor inc push pop outsl jns lea int3 (bad) loopne cmc add adc dec push pop push fwait movsl mov ret int loop testl ss dec push pop imul scas mov in cli add cmp push popa imul xchg lahf test fsub lock add cmp push popa insb jbe mov leave rcr call sbb push pop gs test ror loopne cmc decl adc sub cmp jo xchg (bad) into fsub in testb adc dec push pop addr16 mov aad add testl aaa inc dec pop gs test ret loope add sbb (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl bound mov enter repnz adc dec push pop push jg xchg sahf test mov out clc add and xor push fwait cmpsb mov (bad) iret (bad) out clc add and inc dec push pop push jg xchg popf test mov out stc add sbb sub push popa imul xchg sahf test mov out clc add and xor dec push pop addr16 xchg ret into fsub in testl xor jno test ret loopne cmc decl adc sub cmp push pop outsl jns mov lret aad jmp sbb das cmp bound orl out sti add xor inc dec pop outsb jns mov lret (bad) loopne hlt decl adc sub cmp outsl jns lea int3 xlat (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp jmp decl adc sub cmp push pop addr16 xchg (bad) into (bad) out stc add inc dec push pusha push jle xchg popf cmpsl mov (bad) rcr in clc add inc dec push pop push orb lret jmp sbb push pop push xchg sahf test mov repnz push adc and cmp pop bound mov lret jmp sbb push pop data16 test ret loopne cmc decl adc sub cmp jo test ret loope cmc add adc sub cmp jo test ret loopne hlt decl adc push pop push cltd movsb scas mov jmp decl adc sub ds push pop addr16 xchg (bad) in clc add inc dec push pop imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call enter icebp cld push adc and pop arpl (bad) lea lret jmp sbb push data16 xchg (bad) rcr in stc add sbb sub pusha imul xchg sahf test mov icebp cld push adc and pop outsb jns mov int3 xlat loope testb adc sub ds push pop data16 xchg (bad) jecxz clc add inc dec push pusha imul xchg lahf stos mov int3 xlat loop stc add sbb cmp outsb js lea lret loope cli add cmp pop outsl jns mov into (bad) icebp sti pop adc xor inc push pop outsb js mov leave aam call sbb xor inc push pop outsl jns mov int3 fsub in testl xor outsl jns (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl ror fucomip cmc decl adc dec push pop addr16 test ret int jecxz clc add and xor push lcall loop testb adc inc push pop data16 test ror loopne cmc decl adc sub cmp push pop outsl jns lea leave rcr out std pop adc xor inc dec pop arpl orl jmp sbb xor inc push pop outsl jns lea int3 (bad) loopne hlt decl adc sub cmp push pop data16 test (bad) into (bad) in clc add inc dec push pusha push jle xchg sahf test mov hlt decb adc sub ds push pop addr16 xchg (bad) in cli add cmp arpl orl into fsub out clc add sbb cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl outsl jns (bad) cltd mov xlat loop clc add and inc dec push pusha push jle xchg pushf cmpsb mov (bad) in cli add cmp arpl (bad) mov lret jmp push sub cmp jo test ret loope testb adc dec push pop addr16 xchg ret int loop testb sbb sub bound mov lret aad jmp push sub cmp push pop outsl jp mov int loop testb push and xor dec push pop push pushf cmpsb mov (bad) iret ftst out clc add inc dec push pop push jle xchg popf test mov out cli add sbb cmp pop bound mov leave rcr call sbb xor inc dec pop outsl jns mov lret (bad) loopne cmc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl adc dec push pop addr16 xchg (bad) in stc add sbb sub inc dec push pop push jle xchg pushf cmpsb mov (bad) out cli add cmp pop gs mov fxam out cli add sbb sub pusha push adcb frstpm(287 out cli add sbb sub inc dec push bound (bad) lcall in clc add and xor dec push pop addr16 test ret into fsub out clc add aas dec push pop imul mov (bad) into (bad) in testl xor push pop data16 test (bad) rcr out cli add sbb sub popa insb jbe mov enter icebp sti push adc and push popa imul xchg sahf test mov lock add sbb sub inc dec push pusha push jg xchg sahf test mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp out stc add pop and ss dec push pop push popf cmpsl mov (bad) rcr in stc add sbb sub inc dec push pusha push jg xchg popf cmpsl mov (bad) rcr out cli add sbb sub pop imul mov (bad) in clc add and inc dec push popa imul xchg sahf test fucom icebp sti add cmp pop arpl (bad) lea lret call sbb push pop data16 test ret into fsub in stc add sbb sub popa imul xchg mov aam call push daa xor push pop addr16 xchg (bad) in stc add sbb sub popa insb ja mov leave rcr out sti push adc and cmp push bound mov leave rcr call sbb pop arpl (bad) lea (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp aam jmp sbb xor inc dec pop outsl jns lea into (bad) out cli push adc xor inc push pop outsl jns mov int3 (bad) loope cmc decl and pusha push orb leave rcr out cld push adc and pop bound orl call sbb xor inc dec pop bound mov leave rcr call sbb pop bound (bad) lea leave rcr call sbb xor inc dec pop arpl test (bad) iret (bad) in testl xor push popf cmpsl mov (bad) rcr out sti add cmp pop arpl orl int3 fsub in clc add inc dec pop arpl orl lret call xor dec push pop addr16 (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jl nop pushf cmpsb mov (bad) in clc add inc dec pop outsb js lea int loope cmc decl adc push pop outsl jns mov int loop testb adc dec push pop push fwait movsl scas mov out stc add sbb das cmp outsl jns mov int loope cmc add adc sub cmp jo test ror loopne cmc decl adc sub ds push pop data16 test (bad) into fsub in testl xor dec push pop addr16 xchg (bad) into (bad) out clc add and xor dec push pop addr16 xchg (bad) iret (bad) out stc add sbb sub pusha imul xchg sahf cmpsl mov (bad) rcr in stc add sbb sub inc dec push pop imul mov (bad) jecxz clc add and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl inc dec push pop imul mov (bad) rcr out cld push adc xor push pop gs test (bad) in clc add and inc dec push pop push jle xchg lahf test fsubrp repz pop adc sub cmp jno xchg (bad) in stc add sbb sub pusha insb jbe mov enter repnz pop adc xor inc dec pop arpl orl ljmp xor js lea lret aad ljmp xor push pop gs test ret loop testb adc dec push pusha imul xchg mov aam jmp sbb push pop gs test (bad) in clc add and xor push fwait movsl scas mov in idiv (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl or dec push pop addr16 xchg (bad) into ftst out clc add inc dec push pop push fwait movsl scas mov jmp add adc dec push pop push pushf cmpsb mov (bad) in sti add cmp pop arpl orl repz or sbb xor inc push pop outsl jns mov int3 xlat loop testl ss dec push pop imul mov lret aad in clc add and inc dec push pop push jle xchg lods mov in testl ss dec push pop push popf test fsubrp repnz push adc and pop bound mov rcr out std or sbb push pop outsl jns mov lret aad ljmp xor inc dec pop arpl (bad) mov int (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in testl xor dec push pop push fwait movsl scas mov in testb adc sub cmp outsl jp mov lret jmp sbb dec pop arpl orl out sti add aaa inc dec push popa imul xchg lahf test (bad) lock add cmp push pusha push jge xchg pushf cmpsb mov (bad) into fsub in testl xor jo test ror loopne hlt decl adc sub cmp push pop outsl jns mov lret aad jmp sbb push pop gs test ret int loop testl ss dec push pusha imul xchg sahf test mov icebp sti push adc and pop outsb js mov cld adc lea and push imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall push and popf mov jecxz adc inc pop jno mov push sub mov sbb dec bound test xlat out push sbb dec bound test (bad) in add jns test and dec addr16 lods vpmuludq cmp test das inc pop jbe movsl mov xor jns test f2xm1 or cmp jg lods (bad) or cmp sbbl insb test adc inc pop outsl xchg adc mov sbb dec pusha ja movsl mov xor jp test and push push fdivp push es mov loop adc aas push outsb xchg adc inc pop jb mov sbb dec pusha ja test fdiv or cmp jle scas vpmaddwd mov pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp (bad) lcall inc pop jne cmpsb mov push push fwait mov jecxz adc inc pop jno mov sbb xchg stos ret (bad) or cmp jg mov loope adc inc pop jae mov sbb dec fs scas (bad) (bad) or test adc pop je movsl mov ss gs lods (bad) push es pusha mov push insl test sub jb mov sbb dec popa jns stos ret or cmp jg scas (bad) fdivp (bad) ds outsb xchg sbb dec bound stos ret fildl xor outsl xchg pop cs pop jbe cmpsb mov xor arpl lods (bad) or mov cmp sbbb sub outsl xchg adc inc pop jae mov sbb dec pusha js cmpsl mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall xchg lods (bad) loopne adc aas push outsl xchg sbb dec arpl stos rcr cmc or test sub jae mov sbb dec popa jns stos ret or push outsb xchg sbb dec sbbw push sub inc push arpl mov fucomip sti or and insl jnp xchg movsl mov iret fucomp stc push adc xor dec pop addr16 xchg lahf lods mov add sbb aaa inc push popa outsl jge cltd cmpsb mov rcr in cli or and push xchg fsubr testl (bad) nop sahf lods mov decl push pusha outsb jl cwtl cmpsb mov rcr in cli or and inc dec pop imul lret cmc add pop sub jb nop sahf lods mov add sbb cmp bound mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call loope cld or es push pop imul mov add cli or pop push lods mov add sbb cmp bound mov loopne sti or and push xchg fsub hlt add push sub inc push arpl mov fucomip cld or es dec pop imul mov out add pop sub jb lea loopne cld or and push xchg call sub jb mov sahf lods mov decl push pusha insl jnp xchg movsl mov into fsubr clc push adc das cmp adcl in add push pusha outsb jl xchg movsl mov into fsubr clc push adc das cmp (bad) nop sahf stos mov decb push pusha outsb jl cwtl movsl mov iret fucomp stc pop adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp xor dec pop imul mov add and je xchg lahf lods mov add sbb bound stos mov add sbb bound mov fucomip cli or and inc push pop insl jp xchg cmpsl mov shl out cld or and push xchg call sub jb mov out std or daa xor push pop insl jnp xchg movsl mov into fsubr clc push adc das cmp (bad) add fsub hlt add sbb bound mov loopne cld or sub inc push pusha insl jnp xchg movsl mov into fsubr clc add dec pop data16 nop popf stos mov decb daa xor jp xchg movsb mov iret fsubr clc push adc das cmp adcl in add sbb aaa inc push pusha outsb jl cwtl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl test (bad) shl in sti or and push xchg (bad) testb pop sub jb lea loopne cld or xor pop imul mov out add push sub dec push gs mov out std or daa xor push pop insb jns xchg mov call sub jb mov lock daa xor jp xchg movsb mov int jmp cs add jbe xchg lahf lods mov add sbb aaa inc push popa outsb jl cwtl cmpsl mov rcr in cli or and aas dec pop imul lret repz push sub dec push arpl lea loopne sti or and insb jns xchg mov call sub jb mov out std or es push pop add mov idiv (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call and pop jo lcall xor jl cltd cmpsl mov rcr in sti or and inc dec pop push xchg (bad) cmc add push sub dec push fs (bad) popf stos mov decb daa xor jnp xchg movsb mov into fsubr testl (bad) (bad) popf stos mov decb sub inc push pusha outsb jl cwtl cmpsb mov iret fucomp stc pop adc xor dec pop addr16 xchg lahf lods mov hlt add push sub inc push arpl mov fucomip cld or xor pop insb jp xchg mov call sub jb mov out cld or xor pop push xchg fsubr clc push adc das cmp (bad) nop sahf stos mov decb daa xor jp xchg movsb mov int add stc pop adc pop imul lret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push add sbb bound mov fsubrp stc pop adc pop push lods mov add sbb bound mov fsubrp cli or pop push lods mov add sbb aaa inc push popa outsb jl cwtl cmpsb mov rcr in cli or and aas dec pop push lods mov add sbb aaa inc push popa outsl jl add loopne sti or and push xchg (bad) testb pop sub jb lea loopne cld or and push xchg fsub cmc add push sub jb mov jecxz decb sub inc push pusha outsb jl xchg movsl mov iret fsubr clc push adc das cmp lcall lock sbb cmp bound mov fucomip cli or and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall xchg out add push sub inc push arpl lea loope std or daa xor push pop insb jp xchg mov call cs pop gs (bad) popf stos mov decb sub jl cwtl cmpsb mov iret fucomp stc pop adc xor dec pop addr16 xchg lahf scas mov add push sub inc push arpl orl or sub inc push popa outsl jge cwtl cmpsb mov rcr jmp pop adc pop push lods mov add sbb aaa inc push popa outsl jge cwtl cmpsb mov rcr in sti or and inc dec pop imul lret hlt add sbb bound mov fucomip sti or and inc dec pop imul ror ljmp dec pop addr16 nop sahf lods mov decl push pusha outsb jl xchg movsl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl clc push adc das ds pop imul leave xlat in add sbb cmp popa outsl jge cltd cmpsl mov rcr in stc pop adc pop push lods mov add sbb bound mov fucomip cli or and aas dec pop imul lret repz sbb push fs mov lock sub inc push pop insl jnp xchg movsb mov int jmp cs pop data16 (bad) popf stos mov decb sbb xor jnp cwtl cmpsb mov rcr in cli or and aas push insl mov push sub push push cwtl cmpsb mov in std or daa xor jnp xchg movsb mov iret fsubrp stc add sbb xor dec pop imul mov call sub jb mov out std or es push pop insb jns xchg movsl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl clc push adc das cmp (bad) nop sahf lods mov decl push pusha outsb jl xchg movsl mov iret fsubr clc push adc xor dec pop imul leave xlat in add sbb bound mov fsubrp cli or and inc dec pop push test int jmp xor dec pop addr16 xchg lahf lods mov jns cmpsl mov xor je mov or sbbl je mov or xor jnp xchg movsl mov iret fucomp stc push adc xor dec pop push scas mov add push sub inc push add xchg lahf lods mov add sbb fs mov lock sub inc push pop add mov fucomip sti or es push pop imul mov jmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc pop adc xor dec pop push enter sbb dec data16 or cmp test pop and push bound mov adc dec pop insb xchg adc jo mov cli or and inc dec pop imul movsb mov iret fsubr clc push adc pop imul int3 (bad) testb cs adcl out add and cmp pop imul int3 (bad) testb das cmp test testl dec pop push scas mov add push cs pop data16 test fsub testb pop imul into fsubr testl add int3 (bad) clc push adc das cmp adcl out add sbb data16 xchg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp call cs pop data16 nop sahf lods mov add dec pop addr16 xchg lahf lods mov add sbb cmp fs mov loope std or daa xor jle lcall decl sbb cmp arpl mov loop std or daa xor jnp cwtl cmpsb mov iret fucomp stc pop adc pop imul mov ljmp dec pop imul int3 (bad) testb cs push data16 nop lahf lods mov add push sub jae add xlat in add sbb arpl lea loop decb daa ss push pusha outsb jl mov loop decl push pusha outsl jge lcall cld or daa ss push pop insl jnp xchg movsl mov rcr in cli or and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl inc push pop insb jp cwtl movsl mov iret fucomp stc pop adc xor dec pop imul lret (bad) testl test (bad) cmc add push sub dec push gs nop popf lods mov add pop sub dec push fs mov lock daa ss push pop outsb jl cwtl cmpsb mov rcr in sti or es jnp cwtl cmpsb mov rcr in sti or and imul mov jmp cs pop data16 nop sahf lods mov add pop sub jae add fsub hlt add pop sub mov or (bad) cwtl mov loope movaps add jg fwait test adc inc pop imul lret hlt add push sub inc push arpl pushf mov in adc pushf mov in pop and cmpsb mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push or cmp jg scas (bad) (bad) (bad) xor jge cltd cmpsl mov rcr in sti or and insb jp xchg movsb mov rcr in add cmp fs mov fsubr std pop xor jne lods mov das dec fs pushf mov in pop xor jae movsb mov cs fs cmpsl rcr add jnp mov fsubrp sti or and insb jp xchg movsb mov into fsubr clc push adc xor dec pop push mov int3 fucomi clc push adc xor dec pop push mov add push scas mov add push sub dec push gs nop sahf lods mov cmc add pop sub jae (bad) popf stos mov decl sub inc push pusha outsb jl cwtl cmpsl mov cmp xchg adc sti sub pop je movsb mov ss data16 (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp and pushf mov in sbb dec popa jns test and push insl test sub jb mov pop cs pop ja cmpsb mov xor gs lods (bad) fdiv or cmp (bad) cltd mov jecxz adc inc pop je movsb mov xor ja cmpsl mov xor stos ret (bad) pop cmp fwait mov loop adc aas push outsb test xor js cmpsl rcl pop push xor lods add fcomip or mov adc inc pop je mov sbb inc pusha ja cmpsb mov and push imul das inc pop jne movsl mov xor ja movsl mov xor js cmpsl mov ss gs lods ret (bad) or aaa dec data16 stos ret (bad) or aaa dec data16 lods (bad) or cmp (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) call jg scas vpmuludq cmp sbbl insl test sub outsb xchg adc aas push outsb xchg adc inc pop jno mov adc lea xor fs stos rcr or aaa dec data16 lods (bad) (bad) adc inc pop jae mov sbb dec popa js test (bad) or cmp jle scas (bad) loopne (bad) inc pop jb mov sbb push imul pop jb movsb mov xor jns stos ret or cmp sbbb pop das inc pop jne movsb mov xor jne movsb mov xor js cmpsl mov aaa dec data16 lods (bad) fdiv or cmp sbbl sub outsl xchg sbb dec arpl stos ret pop pop aaa dec data16 scas (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fcomip or xchg push cs pop jbe cmpsb mov xor bound test pop ss data16 lods ret fcomi or cmp sbbl sub jno lahf mov out push sub mov sbb inc pop ja movsl mov xor arpl test and push insb test adc pop jb mov sbb dec popa js cmpsl mov and push push cltd mov fcomip adc ds outsl xchg shr add mov and push insl test xor ja stos vpsubq xor jge mov out sbb gs mov call imul and pop jbe stos enter xor sbbl jg mov in push xor jnp mov out push aaa push imul and (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ds outsb xchg adc xchg scas enter cs pop jp scas enter xor jg mov in push and push jno test sub nop stos (bad) adc dec bound mov in sbb mov cmp add cmpsl ret adc inc pop jbe lods (bad) loope adc cwtl mov out sbb mov cmp outsl mov and movsl mov inc pop js stos (bad) fdivrp adc dec arpl mov call insb xchg and jno test fdivrp adc inc pop jns scas leave loop sbb mov in pop and shr call es movsl mov rcr in cli adc inc pop jno cmpsb mov (bad) in add xor test (bad) shl clc adc inc pop je cmpsl mov xor jp test loopne adc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp test sub lea and insb xchg sbb dec sbbb (bad) pop xor jge lods rcr or sub inc pop jb test xlat repnz imul in add cmp jg test adc inc pop outsb jl cmpsb rcr or jb cmpsb mov sub inc pop jae mov and push outsb xchg push cmp xchg pop cmp jg mov and movsl mov inc pop jae cmpsb mov inc pop jns lods (bad) loop sbb dec bound mov fdivrp movaps je stos ret push daa inc pop jae cmpsb rcr movaps jbe test xor jg mov out sbb mov inc pop ja stos ret (bad) movaps xchg lods (bad) loope or aas dec (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall xchg sbb dec push fs mov (bad) push sbb inc pop jbe mov add and push insb sbbl push imul sbb add inc pop jne test sub pusha jp lods (bad) adc inc pop je mov cmp mov sub ja lods (bad) fcomip push daa inc pop jb mov and pop jae cmpsb rcr adc mov in push and inc dec push pusha imul popf cmpsl mov (bad) rcr call and ss dec push bound test int out decl adc dec push arpl orb lret xlat jecxz stc add sbb xor ja mov rcr ljmp cmp push pusha insb js (bad) fwait cmpsl mov leave aam jmp add sbb pusha imul (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl lea rcr jmp and cmp pop push orl decl pop and cmp pop imul add aad in clc add sbb xor dec push pusha imul cltd movsl mov (bad) rcr jmp and cmp pop push mov fucomip testl aas dec push popa insb ja lea rcr jmp and cmp pop push mov fucomip testl cmp arpl (bad) mov mov ljmp push push sub dec push pusha imul test ret jecxz cli add or aaa inc dec pop fs xchg ror fucomip hlt decb adc xor jbe mov rcr out cld push sbb sub inc dec push pop push fwait movsl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl loop stc add sbb sub bound orl rcr out cld pop adc xor inc push pop add jg xchg mov (bad) icebp cli add cmp dec pop gs test mov hlt add unpckhps sub inc dec push fs jb orl in std push adc inc dec push arpl (bad) xchg popf movsb stos mov lret ljmp cmp jne mov rcr call push sub inc dec pop gs jae test lret (bad) loope clc add sbb xor dec push pop imul mov hlt decl pop and cmp pop outsw jnp nop lcall out std or sbb push pusha imul cltd movsl mov (bad) rcr jmp and cmp pusha imul lcall (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec aam in testl ds push bound test enter clc add sbb add cmp push pop arpl jp xchg popf cmpsb mov leave rcl fucomp hlt add adc inc dec pop outsl jnp nop xchg popf mov aad in idiv add xor dec push pop push (bad) lea rcr jmp sub aas dec pop fs mov fucomp repz or sub insl ja mov into fxam lock pop adc sub insl js xchg popf test in std or dec pop data16 mov rcr call sbb xor inc push pop gs mov (bad) icebp cld pop adc sub dec push pop imul mov repz adc sub insb ja mov rcr jmp es (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) cmp jbe mov lret jmp add pop imul cwtl mov fucomip testl cmp ja (bad) fwait test ror jecxz cli push adc xor ja (bad) lcall jmp add sbb popa insl js xchg pushf cmpsl mov lret jmp add sbb pop imul mov testb sbb xor dec push popa insb ja mov aam ljmp cmp pop addr16 mov rcr out decb push and push mov fsub repnz pop and cmp pop push mov fucomp cmc add and cmp pop addr16 xchg (bad) fucom in clc add pop push and inc dec push pop gs test mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) dec aam jmp and add popa imul xchg mov (bad) out stc add sbb cmp arpl adcl rcr out decl and aaa inc dec pop outsb js mov rcr out cli push adc sub dec push pop imul mov lret (bad) loope clc add sbb xor inc dec pop outsb je addl out hlt decl pop and inc dec push pop arpl test mov repnz push adc sub imul cmpsb scas mov in cmc add dec push popa insl jns nop fwait movsl mov (bad) rcr call and inc dec pop outsl jnp (bad) lcall loope stc add inc dec pop fs xchg int3 xlat loop clc add sbb cmp pop push mov (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) inc add fsubrp lock push adc xor push pop imul ror loope testb push and addr16 mov into fxam lock or sub dec pop lret out sub push arpl dec pop fs jns mov (bad) loope cli push adc push bound xchg rcr call and cmp jl xchg pushf cmpsl mov enter hlt add adc xor dec push pusha imul xchg mov imul sub push xor and dec pop cmpsb movhps pop in cmp movsb rcl lret jecxz ja xor mov js add rolb loope pop in dec xlat jnp mov adc xor pop scas mull push (bad) lods ds out lea and xor enter mov jle movsb push std or adc out xor sub repnz adc stos decl je pop decb fisubr inc clc sbb sub adc push jnp push bound xchg ljmp fs mov push mov pushf jmp sti xchg jg jp dec es fbld push mov imul lahf addr16 pushf outsl mov xchg nop push or sub psllw sbb sub in ret loopne nop sub pop push imul and arpl mov fisttpl dec mov insb fcmovbe pop add sub mov push mov call (bad) iret outsl shr adc movsb mov dec inc xchg cmpsb mov push push sub test int3 ja aaa aaa mov stos and jp xchg out fwait or xchg cmc cld sub fildll cmp pop mov inc lods inc push test mov test add cmp mov cmp pushl test pop cmp jmp test test push test cmp xor test test pop test cmp ret cmp cmp cmp cmp inc test rdtsc test cmp jne cmp pop test add cmp push test ret cli fdivl sub rcrb (bad) mov or scas jnp inc inc ds or fildll inc dec mov (bad) lods fisubrl cltd in test test test call cmp jmp cmp pop cmp clc adc cmp mov cmp mov test inc test inc cmp inc test add cmp test mov test test call cmp test push test test test jne mov cmp add cmp mov cmp add cmp call cmp jmp test pop test push cmp push test push cmp mov test call test pop test cmp jl cmp mov test sub test mov test sub cmp call cmp mov cmp inc cmp inc cmp inc test inc test inc cmp inc test inc cmp inc test inc test inc test push cmp mov test add test push test push cmp sub cmp sub cmp push cmp call cmp jmp test pop test cmp inc test mov cmp xor test mov test cmp jne test mov cmp test sub test pushl test pop cmp call cmp or cmp test jne cmp jmp cmp and nop sbb push adc dec out inc add adc push into cmpsl xchg int push xchg lds and add push cmp xor adcb leave jo loope test mov movsl and test adc gs jg xchg cmpsb fcomi in jb loopne push mov or mov imul cmp and mov mov je and in dec pop mov mov mov xlat inc imulb outsl ret (bad) xor fstpt pop cld sbb mov in push mov fucomp std aam fidiv adc aas adc daa pop add mov sahf repz cli fdivl sub rcl (bad) mov or scas jnp inc ds or fildll inc dec mov nop sbb push adc pop std int3 xchg push test pop test pushl cmp pop cmp mov test mov cmp push cmp mov test mov test push cmp pop cmp add test cmp jne cmp push cmp pop test add test cmp jne cmp pop cmp mov test mov cmp mov cmp add test mov test mov cmp add cmp mov test add cmp lods cmp test je test add test mov cmp cmp jne cmp mov test cmp jne cmp mov cmp push test pop test push cmp push cmp push test push cmp push cmp push test push test push cmp call cmp add test ret dec out inc add adc jmp int push xchg lds and add push cmp xor adcb leave jo loope test mov movsl and xchg or fadds in jb loopne push mov or mov mov lahf lods cmp and mov mov je (bad) in dec out mov mov mov xlat inc imulb outsl ret (bad) xor fstpt pop cld sbb mov in push mov fucomp std aam fidiv adc aas adc daa pop add jne clc call jne clc sahf repz ret into mov ficoml jge shlb (bad) cmpsb push fnstcw in (bad) nop ljmp (bad) fnstenv pushf mov (bad) fdivp (bad) cli lods xchg mov test loopne cmp lods xchg lahf sti mov lahf mov cmpsb mov fdivl sahf lcall mov (bad) popf lock pop mov mov cmp xor repz ret cli fdivl sub rcl (bad) mov or jnp inc inc ds or fildll inc dec mov sub adc lds adc adc jmp int push xchg lds and add xchg xchg (bad) cmpsl sbb pop hlt xor adcb leave jo pop cld inc xor sbb mov je test pop fstl push push jo xchg ljmp jp inc mov sbb sub stc dec pop and xchg cmp data16 or sub jmp jb les imul mov out inc test xchg je repnz (bad) imul adc push in lahf mov xchg sarl clc jg sub insb cmp mov cmp cli add inc xlat and repz mov bound (bad) popf sbb lock mov and ds addr16 ret movsl add int pop or cltd loope (bad) mov sub (bad) ss js loopne pop and test sbb push nop inc call inc xor sbb mov je test pop fstl push push jo xchg ljmp andl leave xchg xor adc loop sub stc dec pop and cmp data16 or sub jmp jb fldenv aad imul mov out inc test aam xchg repnz (bad) imul xor xor push in lahf mov xchg sarl clc jg sub insb cmp mov (bad) cmp add popa inc xlat and repz mov bound mov lock mov and ds addr16 ret movsl call cmp mov cmp mov test inc test mov cmp mov cmp ret icebp popa int pop or cltd dec (bad) mov sub (bad) ss js loopne adc and test or out push nop inc call xor sbb mov je test pop fstl push jo xchg ljmp jp and mov sbb sub stc dec pop and cmp data16 or sub jmp pushf fldenv aad imul mov out test xchg je repnz (bad) imul adc push in lahf mov xchg jge cmp jg sub insb cmp mov (bad) cmp add popa inc xlat and repz mov bound mov aas lock mov and cmp addr16 ret movsl add popa int pop or cltd loope cmpxchg push js loopne adc and (bad) or out push nop inc call inc xor sbb mov je test notb outsb push push jo xchg ljmp jp and mov sbb sub dec pop and xchg cmp data16 or sub jmp jb fldenv aad imul mov cmp mov push cmc xchg je repnz (bad) imul xor xor push in lahf mov xchg clc jg sub insb cmp adc (bad) cmp cli add popa inc xlat and repz mov bound (bad) popf sbb lock or lea ds addr16 ret movsl add popa int pop or loope (bad) mov sub (bad) ss js loopne pop and test or push nop inc call inc ficompl mov je test pop (bad) push (bad) outsb push push jo xchg ljmp andl leave xchg xor adc loop sub stc dec pop and cmp data16 or sub jmp jb fldenv aad imul mov out inc test aam xchg repnz (bad) imul xor xor push in lahf mov xchg sarl clc jg sub insb cmp mov (bad) cmp add popa inc xlat and repz mov bound mov lock mov and ds addr16 ret movsl icebp popa int pop or cltd dec (bad) mov sub (bad) ss js loopne adc and test or out push nop inc call xor sbb mov je test pop fstl push jo xchg ljmp jp and mov sbb sub stc dec pop and cmp data16 or sub jmp pushf fldenv aad imul mov out or (bad) lcall adc jne mov das (bad) jns das (bad) jns das (bad) jns das (bad) jns das (bad) jns das (bad) jns das (bad) jns das (bad) jns das (bad) jns das (bad) jns das (bad) jns das (bad) jns das (bad) jns das (bad) jns das (bad) jns das (bad) jns das (bad) jns das (bad) jns das (bad) jns das (bad) jns das (bad) jns das (bad) jns das (bad) jns das (bad) jns das (bad) jns das (bad) jns das (bad) jns das (bad) jns das (bad) jns das (bad) jns das (bad) jns das (bad) jns das (bad) jns das (bad) jns das (bad) jns das (bad) jns das (bad) jns das (bad) jns das (bad) jns das (bad) jns das (bad) jns das (bad) jns das (bad) jns das (bad) jns das (bad) jns das (bad) jns das (bad) jns das (bad) jns das (bad) jns das (bad) jns das (bad) jns das (bad) jns das (bad) jns das (bad) jns das (bad) jns das (bad) jns das pushf inc jb jne rcrl jne add cld push pop aam adc jno (bad) sti jne add cld push into aad andl and andl mov pop aam addl lods mov push push lock pop aad and jne rcll je ficom sbbl xchg (bad) popf push push aad or lds mov mov dec aam xorl mov dec aam andl sbbl ret pop aad or rcrl mov jl pop mov aam pop aad add aam xorl pop stos jb pop stos jb pop stos jb pop stos jb pop stos jb pop stos jb pop stos jb pop stos jb pop stos jb pop stos jb pop stos jb pop stos jb pop stos jb pop stos jb pop stos jb pop stos jb pop stos jb pop stos jb pop stos jb pop stos jb pop stos jb pop stos jb pop stos jb pop stos jb pop stos jb pop stos jb pop stos jb pop stos jb pop stos jb pop stos jb pop stos jb pop stos jb pop stos jb pop stos jb pop stos jb pop stos jb pop stos jb pop stos jb pop stos jb pop stos jb pop stos jb pop stos jb pop stos jb pop stos jb pop stos jb pop stos jb pop stos jb pop stos jb pop stos jb pop stos jb pop stos jb pop stos jb pop stos jb pop stos jb pop stos jb pop stos jb pop stos jb pop stos jb pop stos jb pop stos rcrl jne add cld push (bad) aad orl xor xorl jne pop mov movsl push lcall inc rcll jne add pop aad push bnd add cld push push aam sbb jne pop aad jl push lea pop aad in pop icebp pop (bad) movsl inc loope pop aad jl fnsave push lea pop aad in push icebp jp xchg fimull dec fldcw sbbl push aad adcl mov dec nop pop mov dec nop pop mov dec nop pop mov dec nop pop mov dec nop pop mov dec nop pop mov dec nop pop mov dec nop pop mov dec nop pop mov dec nop pop mov dec nop pop mov dec nop pop mov dec nop pop mov dec nop pop mov dec nop pop mov dec nop pop mov dec nop pop mov dec nop pop mov dec nop pop mov dec nop pop mov dec nop pop mov dec nop pop mov dec nop pop mov dec nop pop mov out enter aad fdivs push xchg repz add sbbl sbbl and add xchg (bad) fldcw pop sbbl or icebp je pop pop cmp pop (bad) popf ja aad or test rcrl jne add cld (bad) push pop cmp pop (bad) popf dec pop aad or cltd pushf insl pop aad rcrl aaa rcrl aaa rcrl aaa rcrl aaa rcrl aaa rcrl aaa rcrl aaa rcrl aaa rcrl aaa rcrl aaa rcrl aaa rcrl aaa rcrl aaa rcrl aaa rcrl aaa rcrl aaa rcrl aaa rcrl aaa rcrl aaa rcrl aaa rcrl aaa rcrl aaa rcrl aaa rcrl aaa rcrl aaa rcrl aaa rcrl aaa rcrl aaa rcrl aaa rcrl aaa rcrl aaa rcrl aaa rcrl aaa rcrl aaa rcrl aaa rcrl aaa rcrl aaa rcrl aaa rcrl aaa rcrl aaa rcrl aaa rcrl aaa rcrl aaa rcrl aaa rcrl aaa rcrl aaa rcrl aaa rcrl aaa rcrl aaa rcrl aaa rcrl aaa rcrl aaa rcrl aaa rcrl aaa rcrl aaa rcrl aaa rcrl aaa rcrl aaa rcrl aaa rcrl cmp pop (bad) popf dec pop aad or popf dec pop cmp test aad imul jne rcll pushf sub jne mov jo pop pop lock pop aad or rcrl mov jo pop pop lock or rcrl mov jo pop pop lock pop aad or rcrl mov jo pop pop lock pop aad or rcrl mov jo pop pop lock pop aad or rcrl mov jo pop pop lock or jne add or jmp jne mov sahf push mov sahf push mov sahf push mov sahf push mov sahf push mov sahf push mov sahf push mov sahf push mov sahf push mov sahf push mov sahf push mov sahf push mov sahf push mov sahf push mov sahf push mov sahf push mov sahf push mov sahf push mov sahf push mov sahf push mov sahf push mov sahf push mov sahf push mov sahf push mov sahf push mov sahf push mov sahf push mov sahf push mov sahf imul jne rcll sbbl jnp mov jne cmp adc daa flds sarl sbb pop aad imulb aad movb or (bad) mov imul xor ljmp sbb xor ljmp sbb xor ljmp sbb xor ljmp sbb xor ljmp sbb xor ljmp sbb xor ljmp sbb xor ljmp sbb xor ljmp sbb xor ljmp sbb xor ljmp sbb xor ljmp sbb xor ljmp sbb xor ljmp sbb xor ljmp sub pop (bad) les rcll and lret jne mov jbe pop cmp jge sub pop (bad) incb mov xlat jne mov pop sbbl imul adc sub pop loopne jne rcll and lret jne shrl jns pop (bad) sbb jl (bad) je pop mov hlt inc pop aam orl jne movsl inc insl (bad) pop aad sub aad fcmovnu adc pop aad in ljmp roll jbe pop pop cmp adc sbbl fiadd mov fiadd mov fiadd mov fiadd mov fiadd mov fiadd mov fiadd mov fiadd mov fiadd mov fiadd mov fiadd mov fiadd mov fiadd mov fiadd mov fiadd mov fiadd mov fiadd mov fiadd mov fiadd mov fiadd mov fiadd mov fiadd mov fiadd mov fiadd mov fiadd mov fiadd mov fiadd mov fiadd mov fiadd mov fiadd mov fiadd mov fiadd mov fiadd mov fiadd mov fiadd mov fiadd mov fiadd mov fiadd mov fiadd mov fiadd mov fiadd mov fiadd mov fiadd mov fiadd mov fiadd mov fiadd mov fiadd mov fiadd mov fiadd mov fiadd mov fiadd mov fiadd mov fiadd mov fiadd mov fiadd mov fiadd mov ret (bad) dec mulb mov std cltd sbb addb sbbl (bad) pop push jbe pop (bad) sub fmul jne shrl js pop mov jne xor pop xorl sbb aam cmpb push jae pushf rcrl orl mov (bad) jne pop adc pushf xchg je or fwait xchg cmp sbbl bound xor bound xor bound xor bound xor bound xor bound xor bound xor bound xor bound xor bound xor bound xor bound xor bound xor bound xor bound xor bound xor bound xor bound xor bound xor bound xor bound xor bound xor bound xor bound xor bound xor bound xor bound xor bound aam xorl and pop mov inc push push lea movsl sub nop and pop xchg mov sti in sbbl (bad) rcll sub orl add scas jno pop xchg jne mov add mov test sti rcl push (bad) (bad) pop mov pushf std fadds lcall mov das and jns xlat mov rorb sbbl push fsts imul aad ret dec pop xor (bad) rcrl je shl dec outsb pop cmp aad je pop pop or adc fsts or pop cmp pop aad int3 push cmp sbbl pop xchg test pop xchg test pop xchg test pop xchg test pop xchg test pop xchg test pop xchg test pop xchg test pop xchg test pop xchg test pop xchg test pop xchg test pop xchg test pop xchg test pop xchg test pop xchg test pop xchg test pop xchg test pop xchg test pop xchg test pop xchg test pop xchg test pop xchg test pop xchg test pop xchg test pop xchg test pop xchg test pop xchg test into pop cmp pushf pop aad imul mov cld (bad) jb iret jge sub (bad) jbe xor mov aad mov fisttpll (bad) xor pop xorl pop xorl pop andl mov pop aam sbb je fistp jl cmp lahf pop aad or fstpl mov mov xor lcall jle sub les popf dec inc aad or fstpl rcrl jne add mov (bad) popf dec cmpsl sub sbbl sbbl sub jle sub jle sub jle sub jle sub jle sub jle sub jle sub jle sub jle sub jle sub jle sub jle sub jle sub jle sub jle sub jle sub jle sub jle sub jle sub jle sub jle sub jle sub jle sub jle sub jle sub jle sub jle sub jle sub jle sub jle sub jle sub jle sub jle sub jle sub jle sub jle sub jle sub jle sub jle sub jle sub jle sub jle sub jle sub jle sub jle sub jle sub jle sub jle sub jle sub jle sub jle sub pop cmp pop (bad) popf arpl imul aad or lock jne mov cwtl jge int3 leave jne add mov pop pop cmp xor jne push push mov or mov or mov push lea pop aad aam cs inc cs orl xor sbbl xchg lcall pop aad jmp pop aad xor aam xorl pop jl inc jmp push cli aad xorl decb aad ss aad andl mov pop icebp mov pop adc sbbl insb mov lcall cmp insb mov lcall cmp insb mov lcall cmp insb mov lcall cmp insb mov lcall cmp insb mov lcall cmp insb mov lcall cmp insb mov lcall cmp insb mov lcall cmp insb mov lcall cmp insb mov lcall cmp insb mov lcall cmp insb mov lcall cmp insb mov lcall cmp insb mov lcall cmp adc mov push sub cmpsl movsl mov mov mov fnstenv rcll pop xorl mov jle add push sub jns pop pop (bad) in lahf jae adc bound cwtl sub into stos pop mov sub mov pop movsl cmpsl or (bad) jbe jle (bad) fsts sub movsl out aam push lea pop aad fidivrl adc mov lcall pop push enter jne push push sub pop aad into push cmp cwtl pop aad imul mov or sub push xchg fidiv rcll jne lahf adc inc lahf adc inc lahf adc inc lahf adc inc lahf adc inc lahf adc inc lahf adc inc lahf adc inc lahf adc inc lahf adc inc lahf adc inc lahf adc inc lahf adc inc lahf adc inc lahf adc inc lahf adc inc lahf adc inc lahf adc inc lahf adc inc lahf adc inc lahf adc inc lahf adc inc lahf adc inc lahf adc inc lahf adc inc lahf adc xorl cld js push jno rorl jne pop push mov or mov sub jg pop pop sub pop aad int3 pop pop bound rcrl jne add mov dec pop and mov adcl mov pushf fs aad jmp pop aad orl jmp movsl out push (bad) aad adc lds push jne rcll dec add aam or popa jne pop pop cmp pop (bad) popf ja sub or aad shlb aad aam sub mov sbbl dec xchg sbb mov dec xchg sbb mov dec xchg sbb mov dec xchg sbb mov dec xchg sbb mov dec xchg sbb mov dec xchg sbb mov dec xchg sbb mov dec xchg sbb mov dec xchg sbb mov dec xchg sbb mov dec xchg sbb mov dec xchg sbb mov dec xchg sbb mov dec xchg sbb mov dec xchg sbb mov dec xchg sbb mov dec xchg sbb jno mov mov pop aad rcl dec lds cmpsb aam orl and inc mov cmp jb clc and jne mov mov pop aad rcl dec lds pop xlat jne or mov mov sahf add xchg push ljmp sbbl mov mov jne add xor jne add pop xorl and sbbl mov cmp xchg pop aad jmp movsl pusha lds push sub or aad or rcrl mov (bad) jl pop lock pop aad push aad cmp shll (bad) jno daa (bad) jno daa (bad) jno daa (bad) jno daa (bad) jno daa (bad) jno daa (bad) jno daa (bad) jno daa (bad) jno daa (bad) jno daa (bad) jno daa (bad) jno daa (bad) jno daa (bad) jno daa (bad) jno daa (bad) jno daa (bad) jno daa (bad) jno daa (bad) jno daa (bad) jno daa (bad) jno daa (bad) jno daa (bad) jno daa (bad) jno daa (bad) jno daa (bad) jno daa (bad) jno daa (bad) jno daa (bad) jno daa (bad) jno daa (bad) jno daa (bad) jno daa (bad) jno daa (bad) jno daa (bad) jno daa (bad) jno daa (bad) jno daa (bad) jno daa (bad) jno daa (bad) jno daa (bad) jno daa (bad) jno daa (bad) jno daa (bad) jno daa (bad) jno daa (bad) jno daa (bad) jno daa (bad) jno daa (bad) jno daa (bad) jno daa (bad) pop cmp pop (bad) popf fildll jne pop pop cmp pop mov out pop aad imul jl add daa or mov lea sub jne pop movsl and pop mov mov pop aad cmp fidivl pop mov pushf fs aad fnstenv pop xor rorl mov pop cmp xchg pop aad imul mov cs inc cs orl je pop lds movsl mov mov pop aad add fnsave pop aad adc jge mov jne add pushf dec pop aad mov pusha out dec mov pusha out dec mov pusha out dec mov pusha out dec mov pusha out dec mov pusha out dec mov pusha out dec mov pusha out dec mov pusha out dec mov pusha out dec mov pusha out dec mov pusha out dec mov pusha out dec mov pusha out dec mov pusha out dec mov pusha out dec mov pusha out dec mov pusha out dec mov pusha out dec mov pusha out dec mov pusha out dec mov pusha out dec mov pusha out dec mov pusha out dec mov pusha out dec mov pusha out and sbbl adc jge sub mov sub jae pop pop cmp pop (bad) popf sub pop je pop pop mov fwait sub pop test aam sub mov pop aad sbbb mov sub lret aad xchg pusha sbbb into pop cmp fwait pop aad imul cmc sbbl aam sub mov xchg (bad) popf iret scas sub sbbl xchg (bad) popf mov (bad) xor pop pop repnz jne fnstsw jne pop aad add aam xorl adc cmp loop mov loop mov loop mov loop mov loop mov loop mov loop mov loop mov loop mov loop mov loop mov loop mov loop mov loop mov loop mov loop mov loop mov loop mov loop mov loop mov loop mov loop mov loop mov loop mov loop mov loop mov loop mov loop mov loop mov loop mov loop mov loop mov loop mov loop mov loop mov loop mov loop mov loop mov loop mov loop mov loop mov loop mov loop mov loop mov loop mov loop mov loop mov loop mov loop mov loop mov loop mov loop mov jmp sub shrl jne movsl inc or cmp aam sbbl std pop aad or dec je pop call jp (bad) aam andl outsb push (bad) sbb jne aad jne push push sti (bad) pop aad cmp mov push je pop call jp and jne addr16 (bad) out pop aad push aad and int3 cmp insb int3 cmp insb int3 cmp insb int3 cmp insb int3 cmp insb int3 cmp insb int3 cmp insb int3 cmp insb int3 cmp insb int3 cmp insb int3 cmp insb int3 cmp insb int3 cmp insb int3 cmp insb int3 cmp insb int3 cmp insb int3 cmp insb int3 cmp insb int3 cmp insb int3 cmp insb int3 cmp insb int3 cmp insb int3 cmp insb int3 cmp insb int3 cmp insb int3 cmp insb int3 cmp insb int3 cmp insb int3 cmp insb int3 cmp insb int3 cmp insb int3 cmp insb int3 cmp insb int3 cmp insb int3 cmp insb int3 cmp insb int3 cmp insb int3 cmp insb int3 cmp insb int3 cmp insb int3 cmp insb int3 cmp insb int3 cmp insb int3 cmp insb int3 cmp insb int3 cmp insb int3 cmp insb int3 cmp insb int3 cmp insb int3 cmp insb int3 cmp insb dec rcrb mov pop jne pop call jp (bad) jne addr16 jne lcall add mov mov xor xor push out mov aad add adc pop aad notl adc jne addr16 sbb icebp lret jne insl push lret aad xchg icebp pop (bad) movsl inc loope pop aad sbbl je pop sub pop pop aad jl test inc jge sub xorl mov bound inc xor jne fisubrl ret aad jl inc je pop sub lcall jne (bad) cmp sbbl test jo pop test jo pop test jo pop test jo pop test jo pop test jo pop test jo pop test jo pop test jo pop test jo pop test jo pop test jo pop test jo pop test jo pop test jo pop test jo pop test jo pop test jo pop test jo pop test jo pop test jo pop test jo pop test jo pop test jo pop test jo pop test jo pop test xor jne sbb ret aad jl inc je pop sub lcall jne mov xlat jne pop sub sbb jne in inc je pop sub lcall jne lahf sub (bad) pop aad jnp (bad) inc movsb sub pop out mov hlt inc cs orl jno pop lds movsl mov mov pop aad js push add sbb ret aad jl push je pop pop sub not jne xor jne pop sub sbb jne in inc je pop sub lcall jne pop fnsave adc subl pop mov aad pop pop aad or pop cld or pop cld or pop cld or pop cld or pop cld or pop cld or pop cld or pop cld or pop cld or pop cld or pop cld or pop cld or pop cld or pop cld or pop cld or pop cld or pop cld or pop cld or pop cld or pop cld or pop cld or pop cld or pop cld or pop cld or pop cld or pop cld or pop cld or pop cld or pop cld or pop cld or pop cld or pop cld or pop cld or pop cld or pop cld or pop cld or pop cld or pop cld or pop cld or pop cld or pop cld or pop cld or pop cld or pop cld or pop cld or pop cld or pop cld or pop cld or pop cld or pop cld or pop cld or pop cld or pop cld or pop cld or pop mov cltd mov pop (bad) movsl (bad) (bad) pop aad xor aam adc jge imul jne sub aad aam sub paddsw pop jmp icebp cmp jne sti int sbbl mov xchg or popf cld (bad) dec push popf xorl aad add fstl or adc mov in add fnsave lods sub inc shrl jno pop rorl daa fxtract inc pop (bad) jne xor jne pop push mov pop aad aam cmp pop aad jl int sbbl (bad) fistl jne pop aad inc pop adc addl dec test cld dec add sbbl jne pop aam (bad) pop aam (bad) pop aam (bad) pop aam (bad) pop aam (bad) pop aam (bad) pop aam (bad) pop aam (bad) pop aam (bad) pop aam (bad) pop aam (bad) pop aam (bad) pop aam (bad) pop aam (bad) pop aam (bad) pop aam (bad) pop aam (bad) pop aam (bad) pop aam (bad) pop aam (bad) pop aam (bad) pop aam (bad) pop aam (bad) pop aam (bad) pop aam (bad) pop aam (bad) pop aam (bad) pop aam (bad) pop aam (bad) pop aam (bad) pop aam (bad) pop aam (bad) pop aam (bad) pop aam (bad) pop aam (bad) pop aam (bad) pop aam (bad) pop aam (bad) pop aam (bad) pop aam (bad) pop aam (bad) pop aam (bad) pop aam (bad) pop aam (bad) pop aam (bad) pop aam (bad) pop aam (bad) pop aam (bad) pop aam (bad) pop aam (bad) pop aam (bad) pop aam (bad) pop aam (bad) pop sub notb mov pop aad or fxtract inc pop xlat jne test aad fcmovnbe push mov pop aad lods pop aad or cmp (bad) fwait pop cmp movsl mov lahf push mov xchg push mov push das fnstsw stos insl je pop aad or jmp (bad) or int or aad fnstenv pop sub pop aad orl jne mov pop xorl pop xorb pop (bad) xor jne fiaddl mov daa frndint jnp adc loopne pop aad or aad sub jl sub jl sub jl sub jl sub jl sub jl sub jl sub jl sub jl sub jl sub jl sub jl sub jl sub jl sub jl sub jl sub jl sub jl sub jl sub jl sub jl sub jl sub jl sub jl sub jl sub jl sub jl sub jl sub jl sub jl sub jl sub jl sub jl sub jl sub jl sub jl sub jl sub jl sub jl sub jl sub jl sub jl sub jl sub jl sub jl sub jl sub jl sub jl sub jl sub jl sub jl jnp adc mov push rol ret and (bad) pop aad jl test aad nop jns cwtl xchg jne rorl or or cltd jo sbb jne outsb fisttpll sar js pop imul pop xlat jne xor pop xorl pop xorl sbb aad cmpb lcall iret pop addr16 pop test jl cltd and pushf push pop aad call xor push call xor push call xor push call xor push call xor push call xor push call xor push call xor push call xor push call xor push call xor push call xor push call xor push call xor push call xor push call xor push call xor push call xor jo pop aad add in or mov ror jp fwait xlat adc (bad) aad insb cmp jno cmp lea pop fidivl fnstcw push cmp jno sub testb mov push mov add fiaddl sbb ja popf sarl pop pop or pop fnsave xor pop xorl pop xorl sbb aad cmpb pop cmp xchg pop aad or adc pop cmp xchg pop aad add cmp incb sahf aad subl lahf push pop imul cmp xchg pop aad imul or pop xlat jne add fcomi js mov mov sbb cmp les pushf lds jne mov je pop (bad) (bad) (bad) push pop mov pushf aad sbbl dec ror jnp mov lret fwait xlat sahf jae rclb mov leave imul inc leave imul inc leave imul inc leave imul inc leave imul inc leave imul inc leave imul inc leave imul inc leave imul inc leave imul inc leave imul inc leave imul inc leave imul inc leave imul inc leave imul inc leave imul inc leave imul inc leave imul inc leave imul inc pop or cmpsb fdivl xor and pop (bad) jne fsts jno movsl bound (bad) push sub jnp aad jl test fldln2 je inc pop cmp pop (bad) popf xchg mov mov movsb push mov pop aad jmp shrl hlt inc pop fnsave xor pop xorl and pop mov sahf mov (bad) idivb pop mov and ror xor imulb pop lcall pushf xchg jp pop xchg testb mov out je pop aad push imul xorl (bad) cwtl rorl (bad) pop aad outsb pop aad pusha mov ss pusha mov ss pusha mov ss pusha mov ss pusha mov ss pusha mov ss pusha mov ss pusha mov ss pusha mov ss pusha mov ss pusha mov ss pusha mov ss pusha mov ss pusha mov ss pusha mov ss pusha mov ss pusha mov ss pusha mov ss pusha mov ss pusha mov ss pusha mov ss pusha mov ss pusha mov ss pusha mov ss pusha mov ss pusha mov ss pusha mov ss pusha mov ss pusha mov ss pusha mov push js pop mov cwtl rorl (bad) pop aad xchg aad sbbl stos pop aad jmp iret dec jne pop pop lock pop aad or jmp xchg lea or or pop aad ret push in ret jge mov aad sbbl mov (bad) mov pop inc xchg sbb jne pop aad (bad) inc in or icebp jno inc pop and sbb leave fldcw jne scas in sub pop aad adc sub sbb jno mov jnp pop mov cwtl rorl (bad) pop aad push data16 adc push (bad) pop aad or adc pop mov jge mov data16 ds add pop loopne pop aad loop pop pop (bad) pop aad push (bad) aam and adc mov inc fnstsw sbb jne ror jge inc ret cmp sbbl pop test stos pop test stos pop test stos pop test stos pop test stos pop test stos pop test stos pop test stos pop test stos pop test stos pop test stos pop test stos pop test stos pop test stos pop test stos pop test stos pop test stos pop test stos pop test stos pop test stos pop test stos pop test stos pop test stos pop test stos pop test stos pop test stos pop test stos pop test stos pop test stos pop test stos pop test stos pop test stos pop test stos pop test stos pop test stos pop test stos pop test stos pop test stos pop test stos pop test stos pop test stos pop test stos pop test stos pop test stos pop test stos pop test stos pop test stos pop test stos pop test stos pop test stos pop test stos pop test stos pop test stos pop test stos pop test stos pop test stos pop test stos pop test stos pop test stos pop test cmp jne mov sbbl push jbe jne lods and jns mov je pop in in int inc pop pop lock pop aad or loope sbbl push outsb aam xorl mov jne pop aad (bad) jp popl cwtl aad sbbl cmpsl loop jne pop pop xor cwtl (bad) jne sub cwtl push (bad) nop and pop aad sbbl or stos sbbl idivl idivl idivl idivl idivl idivl idivl idivl idivl idivl idivl idivl idivl idivl idivl idivl idivl idivl idivl idivl idivl idivl idivl idivl idivl idivl idivl idivl idivl idivl idivl idivl idivl idivl idivl idivl idivl idivl idivl idivl idivl idivl idivl idivl idivl idivl idivl idivl idivl idivl idivl idivl idivl idivl idivl cs jg test mov and and std dec add xchg cltd aam adc push mov das (bad) cltd pop sub mov xor cltd rolb push dec mov mov jno das daa xor dec fidivr or icebp jno shrl hlt inc cs orl xor orl mov jne pop (bad) (bad) fistpll mov loop cld nop cwtl (bad) jne mov jl mov out cmpsl sbb aas cmpsb push into aas mov popf stos mov mov pop aad andl mov aad sbbl sbbl or dec push pop cmp mov cmp scas jl mov inc xorl fldt hlt jnp sub hlt jnp sub hlt jnp sub hlt jnp sub hlt jnp sub hlt jnp sub hlt jnp sub hlt jnp sub hlt jnp sub hlt jnp sub hlt jnp sub hlt jnp sub hlt jnp sub hlt jnp sub hlt jnp sub hlt jnp sub hlt jnp sub hlt jnp sub hlt jnp sub hlt jnp sub hlt jnp sub hlt jnp sub hlt jnp sub hlt jnp sub hlt jnp sub hlt jnp sub movsl mov jne out add (bad) sub adc pop cmp push out mov jne ret jl mov and sub adc xor jnp jl xchg notl mov negl cmpsl pop in sub popf outsb (bad) sub imulb cmpsb sbb or xchg jl fwait add sub imull mov into aas mov popf pop mov mov aas mov ss das mov jne pop push testb push testb push testb push testb push testb push testb push testb push testb push testb push testb push testb push testb push testb push testb push testb push testb push testb push testb push testb push testb push testb push testb push testb push testb push testb push testb push testb push testb push testb push testb push testb push testb push testb push testb push testb push testb push testb push testb push testb push testb push testb push testb push testb push testb push testb push testb push testb push testb push testb push testb push testb push testb push testb push testb push testb push popf out sub out cmp cmp or sbb movsl fwait add aas cmpsl sbb xor add push mov jne dec aaa mov ss aas mov out mov xor pop cmp cmp adc mov popf inc mov xchg sbb xor sbbl mov sbb sub adcl mov dec xchg sbb dec xchg sbb dec xchg sbb dec xchg sbb dec xchg sbb dec xchg sbb dec xchg sbb dec xchg sbb dec xchg sbb dec xchg sbb dec xchg sbb dec xchg sbb dec xchg sbb dec xchg sbb dec xchg sbb dec xchg sbb dec xchg sbb dec xchg sbb dec xchg sbb dec xchg sbb dec xchg sbb dec xchg sbb dec xchg sbb dec xchg sbb dec xchg sbb dec xchg sbb dec xchg sbb dec xchg sbb dec mov pushf jl fwait add aas cmpsb add aas sbbl jl fwait add aas mov adc sbbl jl fwait add aas mov adc sbbl jl xchg adc sbb adc xor pop imul pop in cmp and loopne aad sbb aas mov ss ds icebp xor aad pop (bad) sub idivl test in cmp popf mov aas mov in mov shrl mov ds sbb pop cmp sbbl insl mov fwait insl mov fwait insl mov fwait insl mov fwait insl mov fwait insl mov fwait insl mov fwait insl mov fwait insl mov fwait insl mov fwait insl mov fwait insl mov fwait insl mov fwait insl mov fwait insl mov fwait insl mov fwait insl mov fwait insl mov fwait insl mov fwait insl mov fwait insl mov fwait insl mov fwait insl mov fwait insl mov fwait insl mov fwait insl mov fwait insl mov fwait insl mov fwait insl mov fwait insl mov fwait insl mov fwait insl mov fwait insl mov fwait insl mov fwait insl mov fwait insl mov fwait insl mov fwait insl mov fwait insl mov fwait insl mov fwait insl mov fwait insl mov fwait insl mov fwait insl mov fwait insl mov fwait insl mov fwait insl mov fwait insl mov fwait insl mov fwait insl mov fwait insl mov fwait insl mov fwait insl mov fwait insl mov fwait insl mov fwait insl mov fwait insl mov fwait insl mov popf xchg mov mov in mov ljmp adc sub popf rorl cmpsl add cmp adc cs or jl cltd sbb ds sbb sub ret mov xor xor ss pushf pop pop aad ret xor sbb ret xor sbb ret xor sbb ret xor sbb ret xor sbb ret xor sbb ret xor sbb ret xor sbb ret xor sbb ret xor sbb ret xor sbb ret xor sbb ret xor sbb ret xor sbb ret xor sbb ret xor sbb ret xor sbb ret xor sbb ret xor sbb and xor adc das mov cmc aas mov xchg jl xchg pop out mov sbb aas sbbl jl xchg adc or adc aas cmpsb push xorl adc or add sbb popf fimul mov repz cmp ss xor sbb das mov out mov sbb pop cmp ss aas mov out mov popf std mov mov sub out cmp ss xor mov popf out mov mov adc adc xor pop cli pop lods and pop mov in mov in mov in mov in mov in mov in mov in mov in mov in mov in mov in mov in mov in mov in mov in mov in mov in mov in mov in mov in mov in mov in mov in mov in mov in mov in mov in mov in mov in mov in mov in mov in mov in mov in mov in mov in mov in mov in mov in mov in mov in mov in mov in mov in mov in mov in mov in mov in mov in mov in mov in mov dec mov mov pop nop jne pop test pop cmp push jmp mov popf lea mov xor cmpsl sbb das mov popf dec mov mov aas mov lds mov cmpsb jl xchg sti aas mov idivl (bad) jne and mov iret xor mov adc pop cmp and sub adc sub jne cmp mov lds mov adc movsl xchg adc push mov repz dec pop aad jo xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg in jl int sbbl insb movsl sub in jp pop icebp xor cmpsb add aas cmc cmp and add xor push shrb adc aas lcall js es mov sbb stos push fistp cli adc push lret adc adc sub cwtl sbb sub sub xor sub das cmpsl pop out mov sbb xor daa divb sbb aas mov les mov jg sub sbb sub enter mov movsl sub js xor add fbld lock pop shrl mov rcrl jno pop aad mov aad imul jne mov cmpsl jl aad sbbl push movsl sub pop aad iret (bad) mov movsl mov ljmp pop out mov imul mov add cmp sbb aas cmpsl jne mov mov adc sub adc jp adc aas aad add adcb movsl decb aad and aaa call scas jl aad sbbl insb movsl sub pop aad fldcw aad jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jne jl or jo cmpsb push jae xchg repz cmp lea jmp outsb insb xchg xchg jbe jno mov lock or fstps mov adc fildll hlt stos les cmpsb dec pop repnz xor and (bad) mov (bad) jl cli push mov push (bad) xor mov fwait out fisubl sub outsb push arpl test (bad) scas inc cld adc sti neg jp jmp scas mov pop cmp push adc mov push push fiaddl sub shrl rorl (bad) sbb ss pop leave inc (bad) cmp jmp aad jp inc gs movq sbb adc xor call lock in and pop insb cmp (bad) push or mov pop add jg lock fsubrs orl add dec and lcall inc arpl jle movsl xchg test push mov addl lods sbb pop push fwait mov test inc sub ja pusha xor jbe adc mov jmp clc inc into (bad) stc sub cmp jnp or or xchg inc mov ljmp sbb inc aam jg mov (bad) mov inc movsl mov ret addl dec daa imul mov sub addr16 mov pop int3 dec mov cld mov iret push imull push loope (bad) pop or ror cmpsb pop jbe xchg imul cmp or push insl jno cwtl mov adc jge popf lahf adc pop cmp dec mov fadd (bad) ja loop pop and push and cli imul fsub fmulp jmp push (bad) in and mov movsl push outsl or adc xor ss sub movsb frstor int jno data16 ja fwait cli push lock cld cmc roll loopne and and mov mov sbbl mov pop adc xchg jmp nop add push ljmp mov jae mov sbb xchg inc or inc fstl and fildl add shrb adc repz jmp push out sub xchg sbb inc sbb outsl je fcoms dec repnz sbb pop imul mov jne pushf ds sub adc mov mov fs inc movsl inc jns dec jbe imul sub mov add inc popa scas decb jp pop lock mov es xor or inc lea xchg leave ficomp fnstsw jnp push mov jp xchg mov push fucomip push xor inc cmp xchg andl into xor cmc std lds push clc out pop (bad) xor dec loop das ljmp cmpsb add mov add dec xor in push in (bad) mov rclb push fs sti mov xor pop lea in jb lds fdivl les mov push xchg or or aam cwtl mov (bad) mov sbb jecxz std insb xchg cmpsl pop sbb lahf popf mov mov cld stos mov jge jg lcall mov outsl outsb lods pop pop cmc loop out mov xchg inc sub mov ret jns arpl pop or push call mov dec clc jmp (bad) push addr16 jle cltd data16 inc mov rcr icebp add xor inc subl add fld pop adc (bad) leave in lahf ud2 lods dec push mov sub loop subb mov pop mov pop xchg push jmp incb aas test push rclb insl mov test adc pop jns lcall cmpsl pop out xor jnp jo mov rcll xor and in adc aad fisubl dec mov sbb sbb mov and lret dec inc nop imul fninit out lret stos rol jmp adc ds add std cs mov repz mov sub cmp push cmp imul repnz pop ljmp orb sbb inc jae adc pop sub fldln2 test into dec mov jp jbe gs or pusha out dec popa inc loopne mov dec sub inc ja push or aam push imul mulb mov cli jecxz fnstenv cltd fcompl lea or adc (bad) hlt adc mov dec outsb xchg sbb fwait xor add test outsl push pop daa add idiv mov mov xor dec jmp ljmp fs mov mov (bad) xchg jae sub scas lods cwtl jbe nop or or stc xchg int3 loopne lret adc jg imull imul icebp xchg mov push loop push cmp into jnp inc cmp or lods test std push (bad) adc pop enter loope or sub in sbb xor (bad) test call inc movsl mov fcmovne xchg xchg mov repz adc js and cmc sbb out scas pop dec cmp lods xor test sub and adc packsswb fwait fs xlat jge movsb cmp jo adc sub fsubp jecxz imul iret addb sbb xor mov mov clc jb ljmp xor inc aad dec sub shrl xor ficompl cli pop insl mov mov (bad) rcl sar out je dec fcoms push push add ret ret jae ss cmp add xchg daa xor mov int mov stos pop icebp leave imul push cmp and xchg xorl push shrb mov or push inc xchg mov (bad) pop jno lock rorb inc loopne push xchg push sbb in mov mov cld es sahf ret (bad) dec or sub (bad) das test (bad) sbb jmp ljmp imul clc movsb pushf outsb stos mov adc scas outsl insb inc icebp jg lret adc or ja out adc push dec mov (bad) mov stos subb mov cmp mov dec cmc mov (bad) in and sub mov jae lret cmpsl xchg in test lahf fdivl inc (bad) movsb and lods mov iret aas adc sarb (bad) repnz push fs jecxz testb aaa sbb mov xlat and outsb fmuls clc test xchg stc pop cmc cs std sub and pushf fist mov notl and xor fcmovnbe movsl sahf jnp add and bound sub mov incb pop loop mov cmp xor loope pusha or das sbb xor jo call cmp jbe int3 sbb fdivs mov push xor icebp fistp ja inc fistl sub addl imul les cmp cmp push jle push inc sbb jmp rorb mov add jmp adc popa adc xor pop loop jp in dec call adc push roll adc jmp push adc fcmovnbe mov jle lahf (bad) adc cwtl xchg lods pop test hlt pop cmp xor mov jl lret loope sti leave and movsl push sbb gs jg stos cmp fnstcw sub out xchg inc fprem1 xchg outsb inc cmpsb subl push int imul push dec mov aad pop inc jle lock cld sbb sub aas mov jg idivl fs shl dec add test mov pop mov cmp aaa repnz sbb jnp push push rorb or gs push addr16 sub lea cmp jp mov fldenv or cli aas out repz sbb xchg sti insl divl mov sub loop and xchg push push stc mov and jmp jp mov scas xadd into movsl mov outsl dec outsb inc mov add icebp mov xchg ja mov mov jne cmpsb lods mov xor xor andb push jb xor xchg push fisttpll imul add lret mov push mov or cmp dec int ret (bad) and into loope movsb pop or rorl jmp je xchg hlt pop cmp ror mov cltd jbe imul int3 push ja mov add test popf icebp add fisttp jecxz ss lahf inc mov adc push loopne pop and sbb stos lds inc cmp repz out (bad) fsubrp (bad) movsl mov or jge inc cltd mov push adc xor mov loopne (bad) xor stos jne in mov mov inc pop in fimull mov and sbb test cmp pop or hlt pop mov mov inc ja repz inc mov jns pop cmpsb push sbb xchg dec aas aaa or fimul jmp sub cs (bad) xchg mov mov pop bound test seto cmc push xchg sarb inc (bad) ret insl enter lods lret testl nop push pop xchg sub jge ret push sub std fdiv divb mov xor mov addr16 pop shll into pop pop sub push mov stos int xor lea fist addr16 ja,pn ret jb xchg inc roll out mov test lret ss and and test insb mov out mov roll fidivr mov int3 jle scas adc cwtl xchg (bad) mov mov movsb rolb (bad) sbb inc xchg jne leave mov mov mov pop inc (bad) xchg orl fistl and das push fnstcw sbb or test cmpsl sub jg and sbb sbb pop fdiv push (bad) sbb dec push sbb pop out rcrl inc lret popf (bad) mov faddp popa outsl rolb xchg sahf fwait inc and xchg idivl rcrb inc out ja mov mov pop fsts pushf add fild jmp loope js sbb xchg (bad) mov and xor mov mov xchg add (bad) pand mov push repnz dec fucomp push xor leave jbe aas cmp test outsb add test and adc cmp jecxz fsubs pushf dec cmp sub pop mov dec dec mov cld or mov daa dec push sub cmpsl pop ja sbb pop pop cli cwtl movsl or int3 aam jns in xor faddl push jp mov loop cmp pusha mov sarl and js and pop clc scas pop push and dec call es test push sub push mov cmpsb lret (bad) pop adc outsl icebp inc push mov xor popa aaa and sub lcall xchg add sbb pop xor xchg (bad) pop cmp jno pusha rcll in notl fs test mov jl ret test sbb sbb lcall push dec in into faddl mov fsubrs popa and adc xlat sub push xchg lret test (bad) jo adc (bad) imul insb dec jmp xchg mov mov dec (bad) popf sbb jmp loopne add cltd mov push out arpl jge movsb out xchg cwtl sub rcrl out dec pop jns sub lahf imul adc nop stos jle mov xor or lea xchg int lcall adc mov cli pushf out xchg icebp mov not mov xchg ror push or out adc movsb add aad lret mov cld arpl or cld mov dec pop inc fcompp xchg dec es icebp xor jae mov rcrb imul ljmp sub clc es sbb xchg ficompl leave mov fadd repz scas aas dec mov sbb sbb in jae inc adc or (bad) sahf jno and and je add add add add add add add add adc add add add add decb add sub add add sbb sub add add and add add sbb test add mov add adc add add sbb push das add sub add and add inc add add add add add add add add (bad) incl movsl jnp add test mov mov pushf pop arpl cmp (bad) jae add jnp add cmp movb mov dec push add push pop add pop arpl pushf cmp add inc inc add cmp add push add push add pop pop add cmp mov add arpl (bad) imul arpl fidiv add lret imul jnp add test test add mov call add jnp notl add test jmp jae ljmp jnp pushf imul xchg xchg add jae add mov add movsl add lods lods add mov add mov jnp out mov add imul mov xchg jae add mov lods mov pushf test jnp imul movsl movsl add cmp jmp mov ljmp lods add lods movsl add mov inc add pushf xchg add lods movsl add inc cmp jae cmp inc mov add into movb inc xor arpl xor fidiv movb cmp add cmp add inc add (bad) mov add (bad) into add cmp add cmp movsl cmp add and neg (bad) add and lods push xor inc push cmp lods inc sbb movsl cmp add or movsl inc adc jae sub movsl cmp add inc or lods dec adc mov sbb (bad) imul neg into add dec or mov adc arpl add pop or mov or mov sbb (bad) imul (bad) test (bad) pop add into imul (bad) jae add xchg push add arpl add imul mov jnp add test add mov add xchg dec add pushf push add mov add (bad) xchg add imul (bad) arpl add jae add mov add xchg inc add movsl pop add lods arpl out lods imul mov add imul out or (bad) jnp add test add pushf inc add pushf dec add lods arpl out pushf cmp idivl test add add ja ja dec dec dec add inc mov lret add add add mov mov mov mov mov add add push pop pop push pop push add add cs cmp adc outsb mov add add add inc cmp sub and pop outsb mov add mov pop fs inc push cmp sub sub and add pop inc inc imul jb inc push sub and pop bound add add inc pusha pusha pusha fs imul pop xor cmpxchg add add inc pop pop pop pop inc pusha pusha mov imul jb and adc add cmp push push inc pop pop pop pop inc pusha pusha pusha fs pop push outsb mov add add push xor cmp cmp inc inc pop pop pop inc pusha pusha pusha fs add add xor xor xor cmp push push inc inc pop pop pop inc pusha pusha cmp mov add dec push xor push xor xor push push xor cmp cmp inc inc pop pop push sbb add add xor xor xor push xor xor push push xor cmp cmp cmp sub sub sub inc xor xor xor push xor xor push push xor cmp or cmp je sub sub sub sub sub xor xor xor xor xor xor adcb and and and mov and sub xor xor push xor xor push or xchg xchg xchg xchg xchg xchg xchg xchg xchg xchg pushf mov xor sub sub xor xor xor or fwait fwait fwait fwait fwait fwait fwait fwait fwait fwait mov sub das sub sub xor xor mov add scas scas scas scas scas scas scas scas scas scas movsb js add daa sub sub sub sub sub mov lret pop andl movsb movsb (bad) mov dec dec es sub sub mov add add stos stos stos stos stos stos stos stos stos stos xchg push sub es add add add mov cltd cltd cltd cltd cltd cltd lahf jae add and sub add add mov mov mov dec and and daa mov pop mov mov mov add and pop mov test test xchg mov add mov add add sahf sahf sahf sahf sahf sahf xchg mov add je addb add add add add inc inc add inc add (bad) (bad) (bad) (bad) clc add add aas incb add cld add psubb add lock add add add add add add add add add add add add add add add add add add add add add add jo add loopne pusha jg add cld add incl jg push (bad) (bad) (bad) (bad) (bad) (bad) dec (bad) (bad) (bad) (bad) (bad) ljmp add add add add add add add add add add add add add (bad) (bad) incl movsl jnp add test mov mov pushf pop arpl movsl imul cmp (bad) jae add jnp add cmp movb mov dec push add push pop add pop arpl pushf cmp add inc inc add cmp add push add push add pop pop add cmp mov add arpl (bad) mov (bad) arpl fidiv add imul jnp add test test add mov call add jnp notl add test jmp jae ljmp jnp pushf imul xchg xchg add jae add mov add movsl lret lods jnp add lods lods add mov add mov jnp out mov add imul mov xchg jae add mov lods mov pushf test jnp imul inc movsl add cmp jmp mov ljmp lods add lods movsl add mov inc add pushf xchg add lods movsl add inc cmp jae cmp inc mov add into mov pushf inc xor arpl xor fidiv movb cmp add cmp add inc add (bad) mov add (bad) into add cmp add cmp movsl cmp add and neg (bad) add and lods push xor pushf push cmp lods inc sbb movsl cmp add or movsl inc adc jae sub movsl cmp add dec or movsl inc or lods dec adc mov sbb (bad) imul neg into add dec or mov adc arpl add dec add (bad) pop or mov or mov sbb (bad) imul (bad) test (bad) pop inc add imul (bad) jae add xchg push add arpl add imul mov jnp add test add mov add xchg dec add pushf push add mov add (bad) xchg add imul (bad) arpl add jae add mov mov xchg inc add movsl pop add lods arpl out lods imul mov add imul out or (bad) jnp add test add pushf inc add pushf dec add lods arpl out pushf cmp idivl test add add ja ja dec dec dec add lret add add add lret add add add bound mov add add add cmp or bound mov inc pop pop fs cmp add lea xor imul and add imul pop pop pop fs bound lea xor pop pop pop bound and es push xor bound and and and xor xor xor bound addr16 sub sub xor bound lods lcall sub mov add daa sub cmp lahf lahf lahf lahf and and xor mov add add cmpsl xchg xchg xchg and and mov add add add add add lret cld pop add lock add loopne add rolb add add add add add add add add add addl add popl add incl add incl add add add add add add add sbb add add add mov lret add add add add xchg stos cwtl xchg test lret cmpsl xchg xchg test xchg stos lcall mov add add mov lods mov addr16 push push mov push mov push mov push movsl push push pushf dec dec nop dec dec mov xchg jae mov add pop mov data16 je fadds repnz mov jbe into gs push pop mov push lcall fs mov add inc add add add add (bad) mov mov stc mov cli mov sti lods test movsl mov popf pushf std cwtl cwtl cli xchg xchg repz push lahf inc inc test (bad) mov mov add imul mov mov clc sarb mov mov cld mov cld scas stos std stos cmpsl std cmpsb movsb (bad) mov (bad) lcall nop lock js lret mov inc jl dec movsl cwtl xchg add mov mov mov test cli sarl mov mov stc lds ret mov sarb cmpsb hlt xchg xchg lock jg fidivr shrb (bad) push pop test inc movsb xchg lea add (bad) jne fstps clc int3 (bad) clc enter mov enter ret clc int3 (bad) leave not lret not int3 not int3 not int fmul not into not lret (bad) mov mov jae shrb les test inc cmpsl xchg xchg add ret fcomps not enter clc mov mov lret (bad) clc int inc into (bad) not enter not lret lret not int (bad) into neg iret neg iret neg into cmc aam repnz ret ljmp outsl outsl int3 gs inc jl dec mov cmpsl add add mov iret (bad) not lret clc lret ret sarl mov mov mov lret lret (bad) clc int (bad) into (bad) not enter not lret lret not int3 not into not into cmc aad out les insl les mov push nop dec inc xchg jnp add add rorb not int3 stc mov mov cli mov stc mov stc ret ret mov mov mov lret lret (bad) (bad) int (bad) into (bad) (bad) iret (bad) not leave not lret lret not int3 repnz cwtl lret mov dec orl rorb (bad) into clc mov mov sti mov sti mov sti mov sti mov sti mov cli mov cli mov cli sarl mov mov mov lret int3 (bad) xabort xabort (bad) not enter loopne cltd les mov push xchg dec dec xchg jge add add ret (bad) (bad) xchg cltd out lret (bad) clc leave ret lods cld lods stos cld scas stos cld scas lods cld mov cld mov sti mov sti mov sti mov sti mov sti mov cli mov cli mov stc sarl inc stc lds enter ret ret clc lret (bad) clc int repz pop pop lahf inc inc (bad) pop push add add movsb cmpsb fldt sti mov std cmpsb movsb std cmpsl mov test std test cld lods stos cld scas stos cld scas lods cld mov sti mov sti mov sti mov sti mov sti mov sti mov cli mov cli mov stc sarl stc lds enter ret mov jb scas dec dec mov add add pushf mov mov (bad) mov std mov std movsl mov test cld stos test lods test scas lods sti mov sti mov sti mov sti mov sti mov sti mov cli mov cli mov cli mov stc sarb mov sahf lcall mov movsl fistp cld movsb mov fwait fwait (bad) fwait fwait (bad) popf pushf (bad) sahf popf (bad) lahf sahf (bad) mov std mov std cmpsb movsb std test cld test cld lods test scas lods sti mov sti mov sti mov sti mov sti mov cli mov cli mov cli mov stc mov icebp mov leave jb xchg inc inc xchg je fcompl sti cltd cwtl cld xchg xchg (bad) xchg xchg (bad) cwtl cwtl (bad) cwtl cwtl (bad) cltd cltd lret lcall pushf (bad) sahf popf (bad) lahf sahf (bad) mov (bad) mov std cmpsb movsb std test std test std lods stos cld lods stos cld scas lods cld mov cld mov sti mov sti mov sti mov sti mov sti inc mov mov fwait inc inc xchg outsb imul add jge insl outsl in mov xchg xchg cli xchg xchg sti xchg xchg sti xchg xchg cld xchg xchg std xchg xchg (bad) xchg xchg (bad) cwtl cwtl lcall lcall (bad) sahf popf (bad) mov (bad) mov std movsl mov test std test cld lods test scas lods cld mov cld mov sti mov sti mov sti mov loop xchg mov imul add and (bad) repz (bad) (bad) notl clc xchg xchg stc xchg xchg sti xchg xchg cld xchg xchg std xchg xchg std lret xchg std xchg xchg lcall lcall (bad) popf pushf (bad) sahf sahf (bad) mov (bad) mov std movsl mov test std test cld lods test scas lods cld mov in (bad) movsb dec dec cwtl je add add add pop add imul jae jp loopne jne jnp loop jbe jge in ja jle out jns cmpb jle xchg xchg cwtl mov cltd cltd lcall (bad) popf pushf (bad) sahf popf (bad) mov std mov std movsl mov test std test in mov popl add mov add addr16 pop adc pop and pop and pusha and pusha and pusha and popa es xor int lret aad jge xchg xchg std xchg xchg std xchg xchg (bad) cwtl xchg (bad) cwtl cwtl (bad) cltd cltd lcall (bad) popf pushf (bad) sahf popf (bad) lahf sahf (bad) mov std mov in mov add add mov xor mov mov mov mov mov mov mov andl add jle repz xchg xchg sti xchg xchg cld xchg xchg mov (bad) cwtl cwtl (bad) cltd cltd (bad) cltd cltd lcall lcall (bad) lahf sahf in andl add add jne repnz idivl mov idivl mov idivl mov idivl cmpsb push cmpsb pop push subl add (bad) mov lea nop nop notl cli xchg xchg sti xchg xchg cld xchg xchg std xchg xchg std xchg xchg (bad) xchg xchg (bad) cwtl cwtl lcall iret outsl jo xchg xchg add add add enter scas jbe mov stc mov stc mov stc mov stc mov stc mov stc mov hlt mov mov dec add add add (bad) js out mov mov (bad) (bad) (bad) (bad) notl stc mov xchg xchg cld xchg xchg cld xchg xchg in xchg mov push hlt mov cmc mov cmc mov cmc mov cmc mov cmc mov cmc mov cmc mov cmc mov cmc mov cmc mov cmc mov cmc mov cmc mov repz (bad) test xchg add add add (bad) jbe call xchg xchg mov lret mov lea (bad) (bad) notl cmc mov xchg xchg add mov mov pop lock imul insb lock insb lock insb lock insb lock insb lock insb lock insb lock inc lock insb lock insb lock insb lock insb lock imul cmp dec and add xchg addl test xchg mov mov mov jae add mov cmp mov in movsl pop in movsl pop in movsl pop in movsl pop in movsl pop in movsl pop in movsl pop in movsl pop in movsl pop in movsl pop in movsl pop in movsl pop jecxz inc mov pop add add mov (bad) jno jecxz jge jle in jg addb (bad) ljmp test jnp sarb add cmp popf push call push call push call push call push call push inc popf push in dec mov cmp add jb (bad) loopne jp jp loope jnp jge in jle jg out and sbb ja jbe add add add add add mov cmp xchg inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc in inc jecxz inc les orb mov xchg jne fdivl fnsave fistpll loopne jp jnp loope jnp jne into js lret mov xor jns fimul fisttp mov fisttp mov fisttp mov fisttp xchg dec and fildll xlat jno fdivs fnstenv fidivl je (bad) jo (bad) jnp fistpl add mov add add and subb subl sub test test test test test test test subl xchg jne add add add leave insl jno imul aam outsb shrb into jo fcompl add add add and jb aad pop (bad) jnp xlat jnp xlat jnp xlat jnp xlat jnp xlat jnp xlat jnp xlat jnp aad push lods push adc add add aad xchg lret insb inc int jne jl (bad) add int mov sbb outsb adc jno (bad) jb (bad) jae (bad) jae (bad) jae (bad) jae (bad) jb mov add lret add cltd test xor push (bad) bound (bad) bound lds lds lds mov mov add add add add lds ret ret ret lret add lret add add add lret add add add add (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) incl add clc add incl add push add incl add jmp add jg add incl mov incl add pop add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add aas add add add jg inc add add incl add clc add add add add add (bad) add add add (bad) incl add incl add push (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) decl add add add add add add sbb add add orb add lret add add jns jl (bad) jl (bad) jg xchg xchg add add add add pop mov mov mov mov cmp ds aas cmp dec inc insl pop dec jl pusha xchg cmpl add xchg jbe pushf dec dec mov push jne fstps lock xchg jmp mov xchg push pusha mov inc mov cmp cmp push lret cmpb cmpsb push push lret bound sahf pushf idivb sti mov cld scas lods std stos cmpsl incb (bad) mov std xchg xchg notl into addr16 push mov cmp cmp bound lods mov popf cwtl (bad) int3 xabort mov mov cld scas stos cld mov cld lods stos std cmpsl movsl lcall (bad) (bad) (bad) out mov jp leave arpl pop pop data16 ja pop add add mov mov clc int stc enter mov mov lret (bad) not int xlat into neg (bad) neg (bad) cmc (bad) not leave hlt mov out (bad) fistpll fdivs (bad) pusha pusha mov xor imul add inc int jbe ret ror clc int3 vshufpd enter ret clc int3 (bad) (bad) int (bad) iret (bad) not leave not lret lret not int xlat into neg (bad) neg (bad) cmc (bad) lock mov imul mov cmp mov mov aad stc lds sarb mov mov enter ret clc int3 (bad) (bad) int (bad) iret (bad) not leave not lret lret not int xlat into neg shl lods cmpsl (bad) popa popa mov cmp push add add add add xchg xchg leave addl mov mov cli mov cli mov cli mov stc sarl clc mov enter ret clc int3 (bad) (bad) int (bad) iret (bad) not leave not lret lret in movsl mov dec fs cmp add lds sarb test lods stos cld scas lods sti mov sti mov sti mov sti mov cli mov cli mov mov stc sarl clc mov enter ret clc int3 (bad) (bad) int (bad) iret (bad) loop lahf mov dec mov cmp arpl add add jge not int3 std mov std cmpsb movsb std test cld stos cmpsl cld stos test lods stos cld scas lods sti mov sti mov sti mov sti mov sti mov cli mov cli mov lret sarl clc mov enter ret aam xchg mov inc jno push enter mov (bad) pushf pushf (bad) sahf popf (bad) mov std mov std cmpsb movsb std test cld inc cmpsl cld stos test lods stos cld scas lods sti mov sti mov sti mov sti mov sti mov cli mov cli mov stc sarl mov push addr16 dec rclb (bad) cwtl cwtl lcall lcall (bad) sahf popf (bad) mov std mov std cmpsb movsb std test cld stos cmpsl cld stos test lods stos cld scas lods sti mov sti mov sti mov sti mov sti mov cli mov sti mov mov push jp inc roll stc xchg xchg sti xchg xchg cld xchg xchg std xchg xchg (bad) cwtl cwtl dec cltd lcall (bad) pushf pushf (bad) sahf popf (bad) mov std mov std cmpsb movsb std test cld stos cmpsl cld stos test lods stos cld scas lods sti mov sti mov sti mov sti mov aam jl dec inc add add inc movsb push and imul mov mov nop clc xchg xchg stc xchg xchg cli xchg xchg cld xchg xchg std xchg xchg (bad) cwtl cwtl lcall lcall (bad) sahf popf (bad) mov std mov std cmpsb movsb std test cld stos cmpsl cld stos test lods stos cld scas lods (bad) jge jg dec add add add popa or data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 mov cltd cltd lcall (bad) sahf popf (bad) mov std mov std cmpsb movsb std test (bad) jp (bad) pop lret add add add data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 outsl add add add arpl jno cli xchg xchg cld xchg xchg std xchg xchg (bad) cwtl cwtl inc cltd cltd lcall (bad) pushf pushf (bad) sahf popf (bad) mov shrb mov add add jl dec xchg dec xchg dec xchg dec xchg dec xchg dec xchg dec xchg dec xchg dec xchg dec xchg dec xchg dec xchg mov add add xchg mov xchg xchg clc xchg xchg cli xchg xchg sti xchg xchg std xchg xchg (bad) cwtl cwtl (bad) cwtl cwtl lcall stos push pop add add add mov test mov clc mov clc mov clc mov clc mov clc mov mov add add add mov js mov mov (bad) notl stc xchg xchg sti xchg xchg notb add add add mov cmp mov repz repz repz repz repz repz repz repz jne mov repz repz shrl jg add add pop pop lds ljmp xchg mov mov pop insl mov (bad) out test out test out test out test out test out test outsl push inc add add cmpl jnp addb (bad) ljmp xchg jle movsl cmpl add add add add and sahf push call push call push call push call push call inc js daa add add add mov insb loopne jp jnp jecxz jge jle out and sbb js add add add add mov dec mov inc jecxz inc jecxz inc jecxz inc jecxz inc jecxz inc jecxz inc jecxz inc jecxz inc jecxz inc loop inc mov add add rcrb pop pop fidivl jbe fnsave fistpll fistpll int3 jns mov mov add add fisttpll fisttpll fisttpll fisttpll fisttpll stos inc or add outsl outsb mov imul jo jb (bad) jo shrb add add add add ret (bad) jb pop daa ret sbb jle fdivrs fdivrs fdivrs fdivrs fdivrs fdivrs fdivrs mov push add add mov int3 push movl add mov cmp psrlq mov (bad) jae (bad) jae (bad) jae (bad) jae lret mov mov daa scas push push scas push push mov add add pop add pop add add inc add xchg (bad) mov pusha mov test add mov lret add add add add (bad) (bad) (bad) (bad) (bad) cld (bad) jmp add incl add cld add psubb add clc add add add add add add add add add add add add add add add add add add add add add add add add add pop addb pop addb xadd rcrb add lock cld add incl jg push (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp add add add add add add add add add add add add add add add imul add add cmp aaa xor cmp outsb pop mov cmpsb arpl nop fsts xchg nop aad jp jb cmpsl dec dec bound sub xor add rcrb stc lds ror not leave stc les jle lret gs das push cmp add mov std movsl mov enter (bad) clc iret enter not into stc les data16 sub add add mov in shr (bad) std cmpsb movsb cld stos test stos test mov stc les int3 (bad) enter cltd cmp add add fwait fwait jmp xchg fwait fwait (bad) cltd cltd cld stos test lods stos sti mov sti mov cli mov stc sarl pusha push aas xor add mov jp lock lea mov std cmpsl movsl cld stos test lods stos sti mov sti mov fisubl les fidivl je aam imul imul imul jo test pushf (bad) mov std cmpsl movsl (bad) (bad) outsb es outsb es outsb es outsb es outsb es outsb es outsb es push inc (bad) jo lock cwtl cwtl lcall iret xchg (bad) pusha idivl idivl idivl cwtl outsl dec (bad) jbe loopne jns mov (bad) (bad) notl add add popf (bad) roll jmp pop jmp pop jmp pop jmp pop mov imul gs jl addb (bad) add je fisttpll lea loopne cmp lea int3 ja js push int3 gs xlat jno into test add add xchg jge jae fildl fldl subl lods add enter mov mov lret add aas add clc pop add inc add add add add add add add add add add add add pop add clc incl add incl add add jae data16 xor xor inc or add add ja add inc add incl sbb add add add jns jne add pop sub add or add add add add jne outsb imul add or or or dec add jae jae popa add imul xor adc add add add add sbb add jae popa imul add add add add add add bound arpl insb add adc or dec add add je insb add add je cmp adc add add add add sbb add addr16 push add and add add add add add insl popa je fs xor or or or inc je gs jo jb add add incl sub or dec gs outsl je jb add add add insl jo popa gs outsb xor push or adc incl and add push or push popa jb outsl outsb gs xor adc adc out jle or add add add add or push gs insb imul add push fmuls add add or add gs jo imul jae and add add add jb add jne insb add add push add add add sbb add gs jne je sbb add add add add or inc arpl insb gs je outsl outsb add add add popa jbe imul incl inc or adc incl push add add or push outsl jne outsw outsb je and adc or push add jae imul add add add add push add add add sbb add jae gs xor sbb add add add add add outsl jo outsb gs add or inc insb popa je insb jns add adc or movups add add add add pop add arpl jae add pop data16 add inc push add incl sub add clts add outsb addr16 add outsl jb outsl ja popa jae add enter adc add add add add pop add imul out add or add incl push add add or dec gs je insb cmp or pop or or incl das add add or push popa jae outsl outsb arpl insb outsl jae pop add popw rclb or push arpl outsb je insl xor adc add add add add add gs insl gs jns or adc adc add add add add fs outsl outsb xor or cmpsl add or or incl pop add add or inc jb fs je insl cmp or add push push adc add add or dec outsb outsl jae push add add add adc or or push add add add add or inc outsl outsl imul add add push or or (bad) incl sub add sbb add ja imul or inc insb arpl gs add adc add adc incl sub add sbb imul add add push or or outsl insb insb outsl je jo add adc incl sub or push outsb arpl jae bound push add add jae imul or and jle sti push adc add add add add or inc popa jb fs jae add add inc popa popa outsb add repnz lcall add add add jo popa je jb xor add push popa js jae add xchg or incl xor add or dec popa arpl insb insb popa jb add add adc adc or push jns fs arpl outsl jne add sbb incl and add daa or dec popa je jb outsl ja imul add or adc mov incl pop add add or push popa insb imul add or test adc add add add add or push jo jb addr16 insl add add xor pop push or add imul add add add add or push outsb outsb imul add add jp test or jae popa jb push add sbb incl sbb pop add imul add or adc add pop adc add add jae gs outsb xor add pop add insl outsb xor add mov or add add or dec gs outsb fs insb xor and or add adc pop add jne jb imul jae adc add add add add sbb add jb outsl jne add add and add add add add or inc jb jae imul add add or add fs jae jns add pop add add add add or inc js arpl imul pop add addr16 insl cmp add adc in adc add add add add or dec jns outsl je arpl gs or or push add add add add xor add imul and adc or push add outsb add je imul adc add add add add sbb add outsb popa je outsl outsb add add and add add add add gs add popa jb jb data16 add popa lgs adc add add add xor outsb arpl outsb outsb jns add or adc adc add add insb add jae imul add add add add sbb add insb popa jae arpl sbb add add add add add push add gs xor push add add jb popa je insb imul push outsl add adc add add pop add popa ja jbe add add or mov or or incl pop add add or jae jne jo imul pop adc push adc dec add add arpl jb outsl add add add add add push add add add sbb dec jbe jb jb ja gs sbb add add add add add or inc outsl arpl je jb outsb popa js or push or add and add add or push jb imul xor pop add push add dec gs add add add add or inc outsl jne je jae add add adc or push add outsb popa jp add daa add add add cmp add jp outsl jne add add or or add adc or inc push fs je xor incl das add add jb outsb imul or inc insb outsl jae outsl insb popa insb imul test mov mov adc add add add add or push imul jae or lock rorb or sub incl push add add push add jne insl xor and pop adc adc add add add jns insb add arpl xor push add add add sbb add arpl imul and add add add add add je jb add pop loopne add or add add add add fs add adc or or add fs outsl insb xor adc add add push add addr16 add arpl popa je outsl outsb jae add adc adc or or sub incl push add add add fs jbe outsb add add add push ja push or sub add add inc gs popa outsb popa jae or add insl adc add add add add add js js jb add imul jns add decl add add add add add outsb outsl cmp add outsl outsl fs gs xor add and sahf push adc add add add add add outsb addr16 outsl ja cmp add add data16 add jae sbb incl das add add add jb gs push add add jne imul or adc xor incl sub or push outsb jae popa je popa bound add add add outsw data16 add xor pop or xor incl sbb add dec add outsb xor or add or add add add je jb je jo or xchg repnz or ss add add dec or push imul outsb je add adc or adc push add insb add jae imul add add add add sbb add jns imul add sub add add add jb insl gs popa gs add jb bound je add ja and adc add add add add push add jae outsl xor add or push jb fs je outsb gs add iret adc adc add add add outsb gs jp popa outsb xor add outsb popa imul push adc adc incl sbb add adc imul mov adc add or push push popa jb push adc or movntq incl sbb add sbb add gs outsl outsb imul or add add add sbb add imul jae xor add push add ja je add push or add adc incl sbb add push push add outsl jae arpl sbb inc or or add add add add imul add arpl arpl outsl outsb xor add rorl scas adc adc incl sub add and dec imul jae insb jae pop add std or add push xor add incl and add and jo outsb jae je outsl outsb xor sbb pop add sub add add jb arpl add or inc popa jae fs bound add jl sub add add add jo jb insb jns imul psadbw add sbb add or dec popa outsb ja jae xor push add add adc or adc add add add add gs popa insl popa outsb add add add insb push data16 das add incl sbb add inc or push jne arpl jae insb add add add incl pop add add dec outsl outsl insl popa arpl jae xor sbb movb or add add add add and (bad) (bad) (bad) incl add add add mov pop inc add add push inc inc add (bad) (bad) incl add add add mov pop inc add add je add add add mov pop inc add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add (bad) (bad) incl add add add (bad) (bad) (bad) incl add add sub inc add inc add sub inc add add sub inc add inc add sub inc add add sub inc add inc add sub inc add add sub inc add inc add sub inc add add sub inc add inc add sub inc add add sub inc add inc add sub inc add add sub inc add inc add sub inc add add jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov push mov sub push push push mov movl mov lea xor push mov mov mov mov mov mov mov mov mov mov mov mov mov mov call mov push push call lea mov push call mov push push call lea add push lea push lea push push jo mov movl movl call mov lea lea call lea call mov push call fstp fldl call lea movl push movl call mov mov lea call lea call mov push push call mov lea call push push lea lea push push push call lea lea call lea push call lea lea push push call push lea push call lea push call mov lea call lea call mov lea lea push push push call mov add mov mov lea lea push push push push push push mov push push mov mov call lea lea push push push fstp call mov add push call mov lea call push call fwait push jmp lea call lea lea push push push call add ret mov lea call lea call lea call mov lea call lea call lea call lea call lea call lea call lea call lea call ret mov mov pop pop mov pop mov pop ret call nop nop nop push mov sub push mov push mov sub push push push mov movl mov xor lea xor rep lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push lea mov mov push lea lea push push mov call mov mov lea call mov push push call mov lea call push push lea push lea push push call mov lea call push call mov mov call lea lea push lea push push push call lea lea push push push call add push jmp lea lea push lea push push push call lea lea push push push call add ret mov lea call lea call lea call lea call lea call lea call ret mov pop pop mov pop mov pop ret nop nop nop push mov sub push mov push mov mov call push push push mov movl movl movl movl movl cmpl jne push push call movl jmp movl mov mov mov movl movl movl movl movl movl mov call mov mov mov mov mov mov mov mov mov mov call mov mov mov mov mov mov mov mov mov mov call mov mov mov mov mov mov mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl movl mov lea call movl cmpl jne push push call movl jmp movl push mov push call mov lea call push mov mov push push call add lea call movl cmpl jne push push call movl jmp movl push mov push call mov lea call push mov mov push push call add lea call movl cmpl jne push push call movl jmp movl push mov push call mov lea call push mov mov push push call add lea call movl cmpl jne push push call movl jmp movl mov mov push lea push call movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl push push mov push call add jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl push push mov push call add jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl push push mov push call add jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl push push mov push call add jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl push push mov push call add jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl push push mov push call add jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl push push mov push call add jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl push push mov push call add jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl push push mov push call add jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl push push mov push call add jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl push push mov push call add jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl push push mov push call add jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl push push mov push call add jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl push push mov push call add jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl push push mov push call add jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl push push mov push call add jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl push push mov push call add jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl push push mov push call add jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl push push mov push call add jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl push push mov push call add jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl push push mov push call add jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl push push mov push call add jmp movl cmpl jne cmpl jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl push push mov push call add jmp movl mov neg mov adc neg mov mov mov cmp jne mov cmp jne movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl jmp movl cmpl jne cmpl jne movl push push mov push call add jmp movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov movl mov mov movl lea lea call movl push call movl mov mov call movl mov mov call movl movl movl mov lea call lea push lea push lea push push call mov lea call movl movl movl mov lea call lea push lea push lea push push call mov lea call movl push call movl push lea push call lea push call mov mov call lea call movl mov add jo mov movl mov cltd idivl mov xor mov mov mov movl mov and jns dec or inc xor mov movl cmpl je jmp movl mov push mov push call mov mov call movl cmpl jne push push call movl jmp movl mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl movl call movl cmpl jne push push call movl jmp movl push mov push call mov lea call push mov mov push push call add lea call movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl push push mov push lea push call add push call mov lea call lea call movl lea push call lea push lea push call push lea push call lea push call mov lea call lea call lea push lea push push call add movl movl movl movl movl movl movl movl movl movl movl movl movl lea push call lea push push push push lea push call lea push call mov lea call lea push lea push push call add movl push push call movswl mov fildl fstpl movl push call mov movl mov call push lea push call lea push call mov lea call lea call movl mov lea call movl lea mov movl push lea push call mov lea call movl movl movl or test je movl fildl fstpl fldl faddl fnstsw test jne call mov movl mov cltd and add sar mov movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov movl lea lea call movl mov neg mov adc neg push push call push push push call push push push call push push push call push mov push call mov call mov mov movl lea lea call movl cmpl jne push push call movl jmp movl mov mov mov call push lea push call mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea call lea call movl movl movl mov lea call lea push lea push lea push push call lea call movl cmpl jne push push call movl jmp movl mov mov push lea push call movl push push mov push call add fwait push jmp lea call lea call lea push lea push push call add ret lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call ret mov mov pop pop pop mov pop ret jmp call int3 int3 int3 sahf sahf sahf sahf int3 nop pop add (bad) (bad) (bad) (bad) (bad) (bad) decl xchg pop add adc add xchg pop add xchg pop add xchg pop add xchg pop add pop add pop add xchg pop add pop add xchg pop add xchg pop add xchg pop add xchg pop add xchg pop add pop add xchg pop add pop add pop add pop add add add push add cmpb nop xchg pop add xchg pop add xchg pop add xchg pop add xchg pop add xchg pop add xchg pop add xchg pop add pop add add addb add pop add add pop add xchg pop add xchg pop add xchg pop add xchg pop add xchg pop add xchg pop add xchg pop add xchg pop add xchg pop add xchg pop add add cmpb pop add add pusha xchg pop add add jle pop add add sbbb pop add xchg pop add xchg pop add xchg pop add xchg pop add add dec push push inc push dec xor inc dec dec add push add dec arpl add mov pop popa fs data16 popa outsb add js pop pop jbe popa push popa jb outsl jbe add mov pop pop jbe popa inc jb gs popa jb add pop pop jbe popa push je push popa jb outsl jbe add add jbe popa dec outsb inc jae jb add bound jb gs popa jb imul pop popa fs imul xor sbb pop pop jbe popa push cmp outsb add mov pop popa fs data16 gs xor xor pop pop jbe popa push je inc popa je sub bound gs jns je insl inc jb outsl jb rolb pop jbe popa dec jb jae insb je push bound add push imul xor add pop pop jbe popa dec outsb inc jb outsl jb add add jbe popa dec bound gs cmpsl add fs imul imul pop jbe popa dec bound gs fs data16 pop imul xor imul jbe popa push gs popa jb jb add push add dec jae outsb add outsl add jbe popa inc push add add inc dec push pop push dec dec dec pop inc fs data16 add jbe popa push jb outsb je bound or inc insb insb inc jne arpl outsb inc popa insb insb add add jbe popa dec bound outsb add push data16 je outsb add add jbe popa dec popa je dec fs popa insb insb dec add dec push pop push dec dec dec pop push gs gs jae add dec add jbe popa push dec xor add push add dec jae jb add inc push inc dec push pop push dec dec dec pop push jne jb dec outsb je jb popa arpl mov pop pop jbe popa inc js gs dec popa outsb fs gs add pop pop jbe popa push je push outsl push outsb imul add fs data16 gs add scas add fs imul ss add bound push inc js gs imul pop pop jbe popa push bound outsb add pop pop jbe popa push je push popa jb popa insb add push add dec insb outsl add lea pop pop jbe popa inc jb outsl jb jbe jb insb outsl ja add add jbe popa dec gs add push imul xor add push imul xor imul jbe popa push je inc outsl jo add mov pop pop jbe popa inc jb gs je dec imul pop popa fs imul xor add stos add fs imul iret add jbe popa dec xor popa jb add add jbe popa dec popa je dec gs inc popa insb insb add inc add jbe popa push je push outsl inc outsb jae add test bound jo xor push add dec popa je outsb add add jbe popa push je dec outsl jbe add sbb pop pop jbe popa push cmp je xor add add jbe popa dec xor jns mov pop popa insb insb insl jne add pop inc dec je outsb add push add dec gs add scas add jbe popa inc jb gs je add lods add jbe popa inc jb gs bound add 