inc lret add add add dec add add add add pop add or add adc add and add icebp xchg add fcomp add addb add add adc add sub add adc add sub xor add add add add push sub add add and add sub add add and sbb loop and add or aam adc aam push add or xlat jae add or xlat sub add push (bad) sbb add add add add add inc inc add adc add sbb add and add add add jle add add add or adc add or cmc or hlt push sub add push (bad) sbb add pop sub add adc add add add add add xor cmp add add add sbb sub sub sub adc push fisub add repz repnz add or in sub add or call mov add add add out add (bad) sbb add pop sub add adc add add add add adc add sbb add das add add add adc sub sub sub sub push sub sub sub add or out or out push mov add add in add (bad) sbb add pop sub add adc add add add sbb push adc add sbb add and add add add sub sub sub push add imull add add sub or icebp push add in add (bad) sbb add pop sub add add add add adc add add add sbb add sub xor add add adc add or or sub sub sbbb add jle add or or sbb add add sub or hlt push mov add sbb sub add push (bad) sbb add pop sub add add adc add add add sub push adc add push add sbb add sub xor dec add add add adc and and daa sub mov sub movhps or sub push sub sub fsubrl sbb xlat or (bad) push sub or jecxz sub push pop mov add add sub add push (bad) sbb add or cld add add add add add cmp add adc add sbb or sbb add pop add adc lods add add pusha (bad) lea add add mov mov mov mov ficoml cmp cmp mov mov cmpsb add add add and adc adc add pop popa or xchg popa mov sbb outsl push add or fidivl pop push sub or pop and call or adc add push je add add mov lea add add pop add or add or adc fisub cmp (bad) decl cmp (bad) incl cmp (bad) incl cmp (bad) decl cmp (bad) ljmp and add cmp (bad) incl cmp (bad) ljmp add or push (bad) (bad) decl push (bad) (bad) incl pop mov add or mov add adc add add push mov add add sub add push (bad) sbb pop sub add add add add add out out add adc add sbb push add add adc inc or add cmp add sbb dec or add inc cmp add pop inc cmp add cmp add cmp add pop data16 add cmp add pop inc sub add sub add or or adc pop inc sub add sub add push sub add or mov popa add push sub add push sub add adc sbb pop jae add or or adc pop inc sub add sub add push sub add or mov popa add push sub add push and add add popa add push sub add push and add add popa add push sub add push sub add or adc adc and add sub add sub add push sub add sub add or sbb and add sub add sub add push sub add sbb daa add or adc sub add or pop or pop sbb cmp add adc adc push pop inc sub add mov inc sub add sub add push sub add or data16 add sub add push mov pop add add popa add push sub add push mov jnp add sub add mov cmp add sub add sub add push mov add or or or pop adc outsl sub add and popa add push outsl sub add pop or pop adc outsl sub add pop outsl sub add pop or pop adc outsl sub add pop outsl sub or outsl sub add push outsl add or push adc adc outsl sub add pop outsl das add or movlps adc outsl sub add pop outsl xor add pop adc pop adc outsl xor add es adc pop adc outsl xor add or and popa add push or adc pop and popa add push adc or outsl xor add pop adc add add popa add push adc pop push adc and popa add push adc pop adc or or adc adc push pop mov add and popa add push mov sub add mov mov add sub add mov push mov pop add add popa add push sub add push mov jnp add sub add mov cmp add sub add sub add push mov and popa add push mov sub add mov add or add or sbb pop and add add popa add push sub add push cmp sbb pop or add adc adc and add add popa add push sub add push mov push mov pop add add popa add push sub add push mov jnp add sub add mov cmp add sub add sub add push mov jg add sub add mov xor add mov add or add or sbb pop and add sub add or cli add add sbb pop pop sbb lea add add adc adc and add add popa add push sub add push mov push mov pop add add popa add push sub add push mov jnp add sub add mov cmp add sub add sub add push mov add adc sbb jg add sub add mov xor add mov add or add or push adc and popa add push adc pop adc adc xchg add add popa add push sub add adc pop inc sub add pop inc sub add sub add or sbb add adc pop and pop adc xchg add add popa add push sub add pop inc sub add sub add or sbb add adc pop and pop adc adc sahf add add popa add push pop lea add add adc adc sbb adc adc push adc mov pop add add popa add push sub add push mov jnp add sub add mov cmp add sub add sub add push mov add adc sub add or adc cmp add sub add or push pop and pop adc adc sahf add add popa add push pop lea add add adc adc sbb adc adc push pop inc sub add sub add push sub add or mov popa add push sub add push mov loopne add sub add sub add push mov cmp add sub add sub add push mov test add sub add mov add or adc cmp add sub add or nopl pop adc adc mov add sub add pop lea add add adc adc adc adc les add sub add pop lea add add adc adc adc and add sub add sub add push and add sub add and add add popa add push sub add push sub add or adc cmp add sub add or sub add or and adc mov add sub add pop lea add add adc adc adc adc les add sub add pop lea add add adc adc adc and add sub add sub add push and add sub add and add add popa add push sub add push sub add or adc cmp add sub add or sub add or adc adc adc in add sub add pop lea add add adc adc sbb adc adc sub add or cmp (bad) lcall daa adc adc adc testb add popa add push push lea add add adc sub add or pop sub pop adc adc testb add popa add push push lea add add adc sub add or pop sub pop or add adc adc and add add popa add push sub add push mov push mov pop add add popa add push sub add push mov jnp add sub add mov cmp add sub add sub add push mov pop add add popa add push sub add push mov xor add mov add or add or cmp cld (bad) lcall sub pop sbb adc adc push and popa add push sub add or jnp add sub add mov pop add add popa add push sub add push mov jnp add sub add mov cmp add sub add sub add push mov add or cmp add cmp add pop sub pop push sub add sbb cmp add adc adc and popa add push sub add or jnp add sub add mov pop add add popa add push sub add push mov jnp add sub add mov cmp add sub add sub add push mov sahf add add popa add push mov add or cmp sub lea add add adc adc and popa add push mov push mov pop add add popa add push sub add push mov jnp add sub add mov cmp add sub add sub add push mov mov add sub add mov cmp add sub add sub add push mov xor add mov add or add or das adc or mov popa add push sub add sub add outsl xor xor pop adc outsl add or xor pop adc outsl aas add or xor pop or add or jp add adc pop pop push adc inc xor add add add iret cmc (bad) (bad) (bad) (bad) call idiv (bad) cmp (bad) incl (bad) decl idiv dec idiv call idiv decl (bad) jmp (bad) (bad) js (bad) decl idiv ljmp idiv dec idiv call idiv jmp idiv push idiv (bad) (bad) idiv decl clc (bad) lcall clc (bad) (bad) mov clc (bad) call (bad) lcall (bad) jmp (bad) jmp (bad) (bad) ljmp call cli (bad) ljmp cli (bad) call (bad) call cli (bad) ljmp (bad) (bad) ljmp call cld (bad) (bad) (bad) (bad) lcall (bad) lcall (bad) call std (bad) call (bad) jmp (bad) (bad) jmp (bad) (bad) (bad) (bad) (bad) (bad) decl (bad) (bad) call (bad) (bad) (bad) fisttpll pop adc adc add add add (bad) (bad) fidivr inc add or mov (bad) call adc call pop cmp popa add push cmp popa add push cmp push add push cmp and add cmp popa add push cmp push add push cmp adc add adc add adc adc push incb pop (bad) adc add sub add fnsave (bad) jmp xor or or push sub sub add fnstsw lea add add sbb sbb push mov mov mov mov add adc sbb add adc mov pop mov or adc mov adc mov adc mov adc adc pop or sbb push adc mov adc mov adc mov adc mov adc mov adc mov adc adc pop adc add add adc mov add mov adc mov add mov add push (bad) sbb add inc xor add add add add add or add add add add add add add or add or add add sbb add add add adc ret add mov mov rolb add cmp add add cmp add add leave add add inc cmp add add int add pop and sub sub or outsl and add outsl inc add or or or adc push pop or inc add or or adc pop nopl sub add push adc outsl inc add or sbb add or sub push outsl dec add or push add dec add or add or push adc mov dec add or add or pop adc adc pop sub add adc sub add fiadd adc or xchg add add popa add push cmp (bad) decl cmp (bad) pushl add or ss (bad) decl cmp (bad) (bad) pushl add or xor (bad) decl ljmp popa add push cmp (bad) (bad) decl cmp or adc adc push push mov mov mov mov add adc sbb add adc mov pop mov or adc mov add add push (bad) sbb or inc xor add add add add add add lods add add add add add add add add add add add add add push add add add add xor add add cmp add add cmp cmp add add cmp add add inc cmp add add testl add add data16 add add add add cmp add add sbb or jecxz add sub add sub add push sub add or add add sub add sub add or adc pop inc sub add sub add push sub add or mov popa add push sub add push sub add or adc push and add sub add sub add push and popa add push sub add sub add sbb or ss add popa add push sub add push cmp adc sbb adc mov pop add add popa add push sub add push mov jnp add sub add mov cmp add sub add sub add push mov cmp add popa add push mov add or add or add adc adc outsl xor add pop or or add inc add add popa add push sub add push outsl xor or or add xor add outsl xor or or add gs add popa add push outsl xor or or add xor add outsl xor or and add sub add sub add push outsl xor push adc adc xor add outsl xor movlps adc repz add popa add push sub add push outsl xor adc or add xor add outsl xor adc or add adc add sub add outsl xor adc or add xor add outsl xor adc or xchg add add popa add push and add add popa add push sub add push and add add popa add push sub add push sub add or adc lea add add add sbb popa add push mov mov pop add add popa add push sub add push mov jnp add sub add mov cmp add sub add sub add push mov mov add sub add mov add or add or adc sub add outsl xor push adc adc repz add popa add push sub add push outsl xor pop adc adc xor add outsl xor sbb or add xor add push outsl xor sbb or add push add or sbb or lea add add add mov pop add add popa add push sub add push mov jnp add sub add mov cmp add sub add sub add push mov cmp add popa add push mov add or push adc or fstpl add add pop pop pop push adc inc sbb add add cld (bad) pushl cld (bad) lcall incl cld (bad) call cld (bad) (bad) ljmp call (bad) ljmp (bad) (bad) jg (bad) call (bad) (bad) mov std (bad) (bad) call std (bad) decl (bad) (bad) decl (bad) (bad) mov (bad) (bad) (bad) call (bad) (bad) decl (bad) (bad) (bad) jnp (bad) (bad) jnp (bad) (bad) fisttpll or pop adc inc add add add add push jns inc add or add (bad) call push cmp cld (bad) call or pop cld (bad) ljmp popa add push cmp (bad) ljmp push add push cmp sti (bad) ljmp and add cmp sti (bad) ljmp popa add push cmp sti (bad) ljmp push add push cmp sti (bad) ljmp and add cmp sti (bad) pushl add add add push push incb pop adc push incb pop (bad) adc add sub add fnsave (bad) jmp xor or or pop sub sub add fisub pop or adc add add add pop mov add adc mov add sub add push (bad) sbb inc xor add add add add add add add sldt add add add add add adc add sbb or jmp add or add cmp add add push cmp add add sbb add add inc cmp add add cmp add cmp add and inc add add inc add add dec add add sbb push pop inc sub add sub add push sub add or data16 add sub add push sub add or adc and add add push or adc and add add popa add push sub add push sub push sub pop and add sub add sub add push and popa add push sub add jae add or pop outsl push add or adc or outsl das add or or push or push add or fucomp add add add pop push adc add add add (bad) (bad) (bad) (bad) (bad) (bad) ljmp (bad) (bad) call (bad) lcall (bad) pushl (bad) lcall (bad) (bad) pushl (bad) (bad) (bad) mov sub fstpl push adc (bad) call sub sub add add add lcall inc add or ret (bad) (bad) call add (bad) (bad) (bad) call push cmp (bad) (bad) ljmp popa add push cmp (bad) (bad) ljmp push add push cmp and add cmp popa add push cmp push add push cmp and add cmp add add add add and pop adc (bad) adc add sub add frstor (bad) jmp xor or or add add or and pop or adc xor add adc add push mov add sub add push (bad) sbb add add add add add add mov add movsl add add add add add add add lret add add add add add add add add sbb add sub xor dec add add add sub sub sub sub sub sub sub sub sbb sub add push sub jae add push sub or loopne sub outsl adc loopne lea add add pop push push mov add fiadd sub add add add add aaa aaa add adc add push add adc add sub add sbb add sub xor cmpsb add add cmp add pop cmp add sbb dec add add inc cmp add cmp add cmp add and pop add add pop add add bound add or adc sub add or sbb push pop inc sub add sub add push sub add or data16 add sub add push sub add adc sbb push push adc adc sbb adc adc push adc mov pop add add popa add push sub add push mov jnp add sub add mov cmp add sub add sub add push mov inc sub add mov add or pop inc sub add sub add pop inc sub add sub add push sub add sub sbb or or push adc push cmp add add or push and add sub add or or push and add push sub add jae add or adc or sub add and popa add push sub add or inc sub add sub add adc pop push adc and add sub add sub add push sub add push es adc push and add sub add sub add push and popa add push sub add adc or or mov popa add push sub add adc pop adc push adc add sub adc adc push adc and popa add push sub add push sub add sub sub sbb push pop sbb push pop inc sub add adc pop sbb push and add add popa add push sub add push sub add or rolb add push sub add push and push add sub add sub add push sub add adc pop sbb pop push adc jle add or pop pop adc pop inc sub add adc and add sub add adc or or and push adc and push add sub add outsl pop add or add adc pop and push adc and add sub add sub add push sub add adc pop and push sub and push sub add outsl pop add or or mov popa add push sub add adc push outsl pop add or and push adc and popa add push sub add jae add or or adc or pop adc push sub add or push add or daa adc adc adc pop sub add pop sub push sbb adc adc push jle add or push mov mov add add mov add add or add push es sub push sub add push pop sub push and daa add sub add or sub push sub add push push cmp cld (bad) ljmp pusha add or add add adc adc add add add sti (bad) (bad) (bad) (bad) decl cld (bad) call cld (bad) (bad) cmp (bad) incl (bad) (bad) mov cld (bad) (bad) mov cld (bad) inc cld (bad) (bad) frndint (bad) push cld (bad) lcall std (bad) pushl (bad) lcall (bad) lcall (bad) pushl (bad) jl (bad) (bad) jle (bad) incl std (bad) jmp std (bad) jmp std (bad) pushl std (bad) push std (bad) incl (bad) (bad) jmp (bad) (bad) (bad) cmp (bad) lcall (bad) jmp (bad) decl (bad) (bad) pushl (bad) (bad) call (bad) (bad) call (bad) (bad) lcall (bad) (bad) jmp (bad) (bad) (bad) cmp (bad) (bad) fstl adc in (bad) incl add add add add (bad) (bad) (bad) fidivr inc add or lods sti (bad) call adc lods sti (bad) call push cmp popa add push cmp push add push cmp and add cmp popa add push cmp push add push cmp and add cmp add add add adc incb pop adc (bad) adc add sub add (bad) jmp xor or or adc add or lds add pop sbb adc adc push push mov mov mov add add mov add adc sbb add adc mov pop mov or adc mov adc mov adc mov adc xor add mov adc push adc mov adc mov adc mov adc mov adc mov adc mov adc xor add mov adc add adc mov add mov add add push (bad) sbb add inc xor add add add add add add add add add add add add add add add add add add add add add xor add add push add adc scas push add cmp add cmp add and push add cmp add cmp add cmp add cmp add scas push add cmp add cmp add and add add pop add push sub add sub pop and popa add push sub add and add sub add sub add sub add sub scas push add sub add sub add and popa add push sub add sub add or scas push add sub add sub add and pop add sub add sub add sub push and or add popa add push sub add and or add popa add push sub add sub add sub add (bad) jnp add add outsl dec add push sub add jp push outsl push add push es inc or push add add sub adc (bad) adc adc adc adc push sub add jp or add add pop inc add add add add add add add mov add push adc sbb add or add add add add push add push cmp or and add adc or add daa add add add add or add add or add add add add outsl push add push es cmp (bad) call push (bad) jnp add add add inc add add add add push cmp add and add sub add jae add or cmp (bad) incl adc jnp add add or add add add add outsl push add push cmp add add push (bad) jnp add add add inc add add add add push sub add sub add jae add or push (bad) jnp add add add inc add add add add push sub add sub add jae add or cmp or or push (bad) jnp add add add inc add add add add push sub add sub add jae add or inc add or add push (bad) jnp add add add inc add add add add push sub add sub add jae add or adc adc add add add or add push adc or add popa add push jae add or call add or adc jnp add add or add add add add outsl push add push sub push adc jnp add add or add add add add outsl push add push sub add adc decl add add add sub or add or jmp add or add or (bad) sub add adc sub add fiadd (bad) add add popa add push cmp pop add push cmp popa add push cmp pop add push cmp add sub xchg cld (bad) decl cmp popa add push cmp pop add push cmp popa add push cmp adc adc adc push push mov mov mov mov add mov add adc sbb add add push mov pop mov or adc pop or or adc pop or or adc mov adc adc add mov adc add add adc pop lsl adc pop adc xor add mov add push (bad) sbb add add add add incb add push add add add cmp add adc add add add and add add add sldt add add add add add add add add add add add xor add add sldt adc and and daa sub sub stc rorb add sbb daa sub xor movsl or add or fldcw sbb add sub add (bad) sub add push sub or rolb sub sub add sub sub add sub or int3 push mov add pop or add call sbb sub add add add add add push push add adc add sbb add add add adc sub sub sub inc sub and je add add inc sub dec outsl push outsl imul pop outsl push add or pop or add or add or ret add or mov or mov sub or mov sub outsl add or mov jne add add sbb or add add add or jle add or sbb sti sbb clc ficom push mov add pop or sub add push (bad) sbb sub add add add add add add xchg xchg add adc add sbb add arpl add adc add push sub sub sub push sub sub fiadd and and and and xor push sub push sub sub add aad sbb add sub or fadds sub or fldl sub or fild mov add add mov add add out add (bad) sbb add or cld add adc add add add add add add xor add push add adc add cmp adc push add cmp add add or add adc add add add push add cmp add add push and or add popa add push sub add sub add sub or scas push add sub add sub add and popa add push sub add sub add sub adc dec and popa add push sub add and add sub add sub add sub add sub push and or add popa add push sub add and popa add push sub add sub add sub push and or add popa add push sub add and or add popa add push sub add sub add adc and popa add push sub add and or add popa add push sub add sub adc add add sub add sub add and or add popa add push sub add sub add sub or cmp add or pop lcall add xor add jno add add xor add jno add add add lcall or adc and add sub add adc sub add adc adc (bad) adc push jl add add adc adc rclb add add data16 or jb add sub add jge add add sbb adc adc jge add add sub or sub add sub add or dec add or or add or or add or add or sbb add or clts jl add add sub add sub add jp add add or sbb add (bad) sub add adc and xor add adc adc push and add add push add add or add push outsl add push sub add jp push pop sub adc push jl add add or add pop push (bad) adc add push sub add jp sbb adc push jl add add or add adc push push cs jae add or add (bad) sub add adc adc adc (bad) sub add jge add add adc adc adc jl add add or add sbb push and xor add inc outsl inc add push jge add add sub pop add add xor pop adc adc adc jl add add or add adc and xor add inc outsl inc add push jge add add adc add add xor jae add or adc jl add add or add adc add add add add add or xor add sub add jp sbb clc add add adc sbb sub add adc push adc cmp add (bad) sub add adc adc (bad) sub add adc adc (bad) sub add adc adc push cs adc pop ficoml (bad) lea add add and add push adc mov or adc jl add add or add adc add add and adc adc mov add push sub add jp sbb sbb adc adc adc pop fidivrl jo (bad) call adc add add js add adc adc jl add add or add pop push (bad) adc adc xor add sub add jp add (bad) sub add adc adc or adc sbb add add push pop sub adc add add adc sahf adc push jl add add or add push outsl cmp add outsb push push push jae add or sub adc and add jae add or add or add or push push adc adc add or add and add push adc add or adc add jae add or add or and and outsl jl add adc jnp add fimul sub add push adc sub add fimul pop sub add or adc (bad) add add pop adc ffree add add add push cmp cli (bad) decl cmp cli (bad) ljmp popa add push cmp cli (bad) ljmp pop add push cmp cli (bad) ljmp popa add push cmp cli (bad) ljmp pop add push cmp cli (bad) ljmp push add sub fsqrt (bad) call add xlat cli (bad) ljmp popa add push cmp cli (bad) lcall lea add add and mov mov add add mov mov add add add adc adc adc xor add mov or adc mov adc mov adc mov adc xor add mov adc push adc mov adc mov add add adc mov adc mov adc mov adc mov add mov adc xor add mov adc add adc mov adc mov add mov adc mov add mov adc mov add mov adc mov add mov adc mov add mov adc adc mov add mov adc mov add mov adc mov add mov adc mov add mov adc mov add mov adc mov adc mov add mov adc adc adc push (bad) sbb sub add inc xor add add add add add add add add add add add add add add add add gs add adc add or add pop add add add add add sub sub sub or repz add sub add outsl aas add or sub sub add sbb fiadd sbb and pop add sub or ret add or cmc sub add sub add in add (bad) sbb add add add add add adc pop adc add add add dec dec add push add sbb add sub add sbb add sub xor add add add add sub sub or add push add add and add add sub add sbb sub add sub outsl jl add sub add rolb sub add loopne push add push sub add in add (bad) sbb add add add add add inc inc add adc add or add sub add add add sub jnp add add push add add or add push sub adc sub sub add push sub add in add (bad) sbb add add add add and add adc add sbb add xor add adc or or sub fisub sldt sub lock icebp push mov add add jno add add in add (bad) sbb add pop sub add add adc add add add pop add adc add sbb push add add push sub add sub push push sub pop sub sub pop jnp add add sub pop sub add pop rorb add sbb data16 or jg add sub add or push sub add or adc sub data16 or lods sub add cmp cmpsb or movsl sub popf (bad) (bad) decl sub sub mov add sbb mov add or mov add add add add call sbb add add add add add test add xor add add add add add push sub je add add ficom push sub sub out jecxz add (bad) sbb add add add add add push push add adc add push add addl or sbb add sbb add adc sub add or sub push sub add push (bad) sbb add pop sub add add add add add or add adc add sbb add call add adc xor add cmp add add testb add xor repz add clc add add push or add cmc add add cli add add cmp add add pop or add clc add add std add add add add adc sub or or add or add or or add or adc sub add or or adc or or or or pop push pop outsl test add adc jae add or adc adc outsl dec add or adc push adc or add adc adc or jae add or push mov (bad) call ficoml (bad) lea add add sysret adc push adc mov or or add or outsl mov add sub movhps outsl mov add adc adc adc sub add cmp or add (bad) ljmp popa add push cmp (bad) (bad) call or add (bad) ljmp popa add push cmp (bad) (bad) call add (bad) (bad) (bad) call or ljmp popa add push cmp (bad) (bad) call or cld (bad) (bad) lcall adc add add adc adc push push mov mov mov add mov mov add adc sbb add adc mov pop mov add mov or adc mov adc mov adc mov adc adc pop or add add adc mov adc mov adc mov adc mov adc mov add add push (bad) sbb adc inc sbb add add inc add add add add or add adc push mov add sub sub pop add push sub sub add sub sub push sub sub jecxz xor add add add add adc je add sub sub sub sub adc add sub jae add or jmp sub push sub outsl popl add sub add and add sub add sub sbb add jbe add sbb add jle add or cmp sub or add or inc sub dec sub add push push and popa add push adc xchg add or add or outsl xchg add or or xor pop add push sub sub sub push sub or mov sub sub add sub add adc add add add add xchg lahf or add add sub popa add push sub sub add sub sub add sub add xchg mov add sub popa add push sub sub add sub sub add sub add sbb or (bad) add add add adc sbb add jle add add cmp add add add add sub add add or add adc cmp add add cmp add sub cmp add add cmp add add fnstsw add add cmp add add pop add add xor add and or add pop sub sub add adc fisttpll add or inc pop sub pop push bound add add and pop or xor pop pop pop adc bound add add and pop adc jle add add and push bound xor add and pop or mov add jle add add pop outsl mov add sub add adc mov add adc adc imul xchg add or add add adc add add adc or add fiadd adc es push fiadd adc adc fisub cmp (bad) (bad) call add out (bad) incl cmp (bad) (bad) ljmp add or out (bad) (bad) incl cmp (bad) (bad) incl cmp (bad) (bad) call pop cmp (bad) (bad) decl cmp (bad) (bad) incl cmp (bad) (bad) incl pop mov add or mov add adc add xor add sub add push (bad) sbb pop sub add add add add stc add add add add add add add add add add add add add add add adc add push add add add add add add add add add pop add add add add add add xor sbb add sbb add jb add jo add add add das add add xorb add xorb add xorb add sub add add sub add or add xchg add sbb sub pop xorb add addl add add das add add jl add xorb add jl add sbb add cmp sldt jo jl add cmp sub sub outsl xchg add or cwtl add or sub aaa add add pop jle add add or add or pop outsl mov add fimul sub pop outsl add add (bad) push sub outsl (bad) (bad) pushl add or jne (bad) ljmp pushf add or jp (bad) ljmp pop add or jp (bad) decl cmp (bad) incl cmp (bad) ljmp add or jp (bad) decl cmp (bad) incl pop or out add (bad) sbb inc xor add add add add add add or add or add sldt add add add add sahf add or push add sahf add or sbb push add add sbb add sub push add add sub sub sbb sbb sub sub add add or push sub sub push sub add loope sub outsl mov fildl sub add fildl sub push outsl add add push sub fisub jae add or cmpsb (bad) (bad) decl cmp pop add add xor add sub add push (bad) sbb sub add add add add add inc add add add bound adc add add xor add add sbb add sub push add add sub sub sbb sbb sub sub add add or push sub sub push sub add loope sub outsl mov fildl sub add fildl sub push outsl add add push sub fisub jae add or cmpsb (bad) (bad) decl cmp pop add add xor add sub add push (bad) sbb sub add add add add add inc add add add bound adc add add xor add add or adc sub sub adc push repnz icebp add in add (bad) sbb add push sub add add add add add sbb add adc add sbb push add push add push add adc jo add cmp add cmp add cmp jb add cmp add cmp add cmp add adc cmp add mov pop jg pop sbb add jae add pop adc sub adc adc sub or adc sub pusha adc sub fs outsb or add and add cmpsb add or add adc push adc add sbb add pop and xchg popa and add add xchg adc push fs adc adc pop pop and fsts push adc and add cltd add push push pop adc cwtl add push push push outsl cwtl add push push push outsl cwtl add push push or cltd add push push adc outsl cltd add push push outsl cmpsl add or or push outsl cltd add push push add add sub pop add jo and add adc push adc mov cwtl add push push push outsl cwtl add push push adc push adc mov test add pop add add push sub and add add adc pop adc outsl outsl add push adc or xor push adc push adc test add pop outsl insl add push sub pop outsl imul push sub and add add adc outsl add push adc adc push xor push adc test add pop outsl insb add push sub pop outsl push add adc push and add outsl cltd add push push pop adc cwtl add push push pop adc cwtl add push push push outsl cwtl add push push push outsl cwtl add push push or cltd add push push adc outsl cltd add push push adc imul add add push adc mov cwtl add push push push outsl cwtl add push push push outsl cwtl add push push push outsl cwtl add push push push outsl cwtl add push push push outsl cltd add push push push outsl cltd add push push adc push adc mov test add push and add add push push outsl cwtl add push push push outsl cwtl add push push pop outsl cwtl add push push pop outsl cwtl add push push pop adc mov outsl cltd add push push pop push adc mov push addps cltd add push push push outsl cwtl add push push adc push outsl test push adc imul mov pop inc adc add push and jge outsl cltd add push push add add push adc cmp add add (bad) lcall add mov adc stos add or adc add adc adc adc mov ja add push outsl cmpsl add or adc push outsl cltd add push push adc mov cltd add push jae add push adc adc adc outsl outsb add push sub and add add adc adc adc outsl add push adc adc adc adc or adc add push sub adc outsl imul push sub and add add adc adc adc outsl outsl add push adc adc push xor adc push adc outsl test add adc outsl insb add push sub push outsl cmpsl add or sbb adc outsl stos add or adc outsl push add imul adc outsl stos add or adc adc adc add (bad) (bad) cmp sbb dec push and jge outsl cltd add push add adc sub add adc add push sub add adc adc adc push adc mov dec add or sbb adc push adc mov test add ficomp sbb adc outsl add add faddl sbb dec push and jge outsl cltd add push add adc sub add adc add add adc push adc imul push push adc push adc mov test add fimul sbb outsl add add faddl outsl lods add or outsl mov add push outsl lods add or and fs add push cmp cmp cmp add push cmp cmp ljmp scas add or jle (bad) decl jge (bad) ljmp scas add or jp (bad) ljmp mov add cmp pop jb add jo pop outsl mov add sub add xorb add sbb and and push add add and add and and push mov mov mov add mov mov add mov add adc sbb add add push mov add mov pop mov add mov or adc pop or or adc pop or or adc mov adc xor add mov adc push adc mov add mov adc mov add mov adc mov add mov adc mov adc mov add mov adc mov adc adc pop adc add add adc mov adc mov add mov adc mov add mov adc mov adc mov adc mov adc adc pop sbb and push adc mov adc mov adc mov add add adc pop and adc pop and mov add push (bad) sbb and add add add add add in add pop add add add or add add add add add xor add pop add add add or add mov add add add add add add add add add add add add add add add add add xor add add add pop adc add add sub add or jae add push jge add add add add add xchg add jge add add or sub add push (bad) sbb add add adc add add add sub or add add xor add add add add adc or add add add hlt or clc add in add (bad) sbb add push sub add adc add add add adc or add add xor add add add sub add add or jge add add or sub add push (bad) sbb add add adc add add add add adc add sbb add inc add add add adc and xor push xor sub aaa add add sbb sbb es and sbb ficomp add flds sub outsl xchg add push sub or loopne sub add in add (bad) sbb add push sub add adc add add add cmp or add add xor add add add add adc or add add pop sub adc popl add sub or icebp add in add (bad) sbb add push sub add add add add sbb add adc add or add and add add add sub jnp add add pop sub ficom add repnz imulb add push sub add sub add push (bad) sbb add add add add sbb add adc add sbb or xchg add add add adc cmp add add xor add mov xor add cmp add add cmp add add cmp add add add add sub add add das add add add push or sub jnp add add push jge add add or pop push cmp add cmp add add jnp add add push cmp jnp add add jnp add add pop push incb push incb add add add pop push incb push incb outsl lea add cmp jnp add add adc or pop pop adc add jnp add add adc sub and pop sub push add add add xchg add push gs sub add add add pop or add push adc or cmp cmp (bad) (bad) call add add xor add adc add add adc (bad) incl jnp add add sbb pop (bad) (bad) incl jnp add add xchg add push add push jge add add out (bad) (bad) decl pop pop adc lret incl cmp (bad) (bad) decl cmp (bad) (bad) incl cmp (bad) (bad) decl lret incl cmp (bad) (bad) incl cmp (bad) (bad) incl cmp (bad) (bad) incl cmp (bad) (bad) incl mov add pop mov add or mov add adc xor add add sub add push (bad) sbb add add insb add add add add add add add xor jo add and add jle add add inc pop maxps or push sub add sbb maxps sti pusha jle add add es arpl maxps cmp add sbb or xchg pusha push sub sbb sub sub add in sub add in add (bad) sbb add push sub add add add add pop pop add sbb add mov add and add pop adc and add push add add pop adc and add inc add add and add add addb add push add add addb push cmp add sub add push add add xor sbb push bound sbb add popf sbb push jle add add and add add pushf cmp add add add add sub jle add add incl add and add add pop sbb add popf jle add add and or add rclb cmp and add and (bad) (bad) incl pop pop or jo add popf push sub add and pushf push and add add shrl push jle add add pop test pop push bound jo add popf jle add add and pushf push and add add ficompl push lea add addb add push lea add add push or pop jle add add push pop or jo add popf push sub add sbb pop push xor fimul cmpsb add or cmpsb (bad) (bad) ljmp cmpsb add or mov (bad) decl cmp (bad) (bad) incl cmp (bad) (bad) incl cmp (bad) (bad) ljmp jo add cmp (bad) (bad) decl cmp (bad) (bad) incl cmp (bad) (bad) incl cmp (bad) (bad) incl mov add sub add push (bad) sbb add inc sbb add add or add add xor add add add sub add or add add add add push add add add add pop (bad) jge add jge add add add push pop pop (bad) jge add jge add add add adc sbb push jge add add and inc add lea add jge add add and inc add lea add add add add or add in add (bad) sbb add add add add push add add adc add or add daa add add add add sub sub push jge add add sub jge add add push add ljmp add push (bad) sbb add adc add add add push add adc add sbb add je add add add sbb sub add or sbb xor sub ficomp sub add sub sub sub sub or and and sub sub add fidiv add rorb lret or xlat push sub or flds sub adc sub add fiaddl sub push mov add add mov add sub add push (bad) sbb sub adc add add add add add add xor pusha add add add adc sub sbb and sbb and and and push arpl sbb jmp push sub fidiv or fadds sub or fiaddl sub adc sub add fiadd sub add fisttp sub push mov add add mov add sub add push (bad) sbb sub adc add add add add add add xor cmp add adc fldl add jnp add add flds add cmp add add add add fiaddl add cmp add add add add fildl add sbb push sub cmp add add add add (bad) add add add add dec add add add add pop sbb cmp add add es add add jnp add add dec add add pop sbb add push add add add sbb outsl xchg add push push or sub sub sbb add add add jnp add add dec add add cmp add xchg xchg sbb add push push cmp (bad) incl pop and push add int jnp add add jnp add add test add add add add jnp add add test add ficomp cmp addb push cmp cmp (bad) ljmp add push cmp (bad) incl cmp (bad) (bad) ljmp add push cmp (bad) (bad) incl cmp (bad) (bad) incl cmp (bad) ljmp add push cmp (bad) incl mov add add mov add sub add push (bad) sbb add add add sub add sub add adc add adc add sbb or jns add and add push cmp or add cmp add add add add jnp add add add add xchg and add add cli add add sti add add add add testl testl pop pop cmp add add mov add cmp add add sub push or add outsl jle add push sub fsubl add sbb add add xor sbb jnp add add pop adc pop pop bound pop pop adc xchg add push add sub add adc add add push adc push sub add xor add add add pop adc pop pop bound pop pop adc xchg add push sub jnp add add outsl jle add push pop and push push cmp (bad) (bad) incl jnp add add adc (bad) incl jnp add add add add outsl jle add sbb fisub repnz (bad) incl cmp (bad) (bad) incl cmp (bad) (bad) decl cmp (bad) (bad) incl cmp (bad) (bad) incl cmp (bad) (bad) decl add (bad) decl push (bad) (bad) incl cmp (bad) (bad) incl mov add pop mov add or mov add adc xor add adc add sub add push (bad) sbb add add add dec add add add add add add add xor add add add sub cmp add dec sub pop sbb inc sub cmp add inc push sub cmp add inc sub dec jnp add add outsw nop add push add add add add outsl xchg add push push sub add push fiadd scas push add mov xchg add push sub add push sub sub push sub add xor add add add add xor add sub add push (bad) sbb add add add add jnp add add add xor add add cmp add add add add inc add add add add (bad) arpl add and add pop push add mov cmp add mov add cmp cmp mov add cmp cmp add mov add jnp add add mov add cmp cmp jnp add add test add add add add (bad) add push sbb pop adc sub add add add dec add add cmp add xchg xchg push xor pop pop or pop pop or push xor pop push push sbb add add add addl push pop add add add addl push pop add add add addl push pop add add add or jnp add add push adc and add add add inc add add add jle add add add pop pop or adc add push add add xlat push adc jnp add add inc add add add add add adc adc or xor or push xor add arpl adc add add push fldl add or xor jnp add add push add add sub pop pop sbb add push add add add inc add add inc add add jg add add add add inc add add inc add add jg add add ja add add jae add fucomp add add jnp add add push add add sub pop pop sbb add push add sub add add ja add add jae add fnstsw cmp (bad) (bad) incl cmp (bad) ljmp add push cmp (bad) incl cmp (bad) ljmp add push cmp (bad) incl cmp (bad) incl cmp ljmp add push cmp incl cmp (bad) lcall or adc adc push push mov add mov mov add mov mov add mov mov add mov add xor add mov add add mov mov mov add mov add add push add xor add mov add push (bad) sbb inc sbb add add add add add add adc add sbb add xor add adc sub sub inc add add add add add incb sbb sub sbb push sub sub or repnz in add (bad) sbb add push sub add add adc add add add daa add adc add sbb add lahf add add sub sub aas add add pop add add add add popf sub add add and add sub pop jge add add dec sub pushf sub cmp add inc add add inc (bad) arpl add and add pop push add sub sbb sub sub add or sub cmp cmp sub sub sub sub push mov add add mov add sub add push (bad) sbb sub add add add add mov add sbb pop add add add adc loope add jnp add add fldl add jnp add add flds add push add jnp add add and add cmp add add pop jge add add movb add movl rcrb cmp add add pop sub push or jnp add add inc add add (bad) arpl add and add pop push add and add add push push and push add add and sbb jge add add add pop sub add or jnp add add inc add add (bad) arpl add and add pop push add sbb adc and add sbb pop pop jge add add sub add or sbb (bad) incl cmp cmp (bad) (bad) incl cmp (bad) (bad) decl cs (bad) decl cmp (bad) incl xor (bad) incl cmp (bad) (bad) incl xor mov add pop mov add or add mov add sub add push (bad) sbb sub add sbb add sbb add add add add add xor add add add add sub add or add add add add add push add dec add add add arpl add jge add add push add xor add jge add add sbb add xor add add add add xor add sub add push (bad) sbb add add add push add aaa add add add xor pop add add add add jnp add add cmp add sub add add and and incl add push jnp add add sbb rclb sub fisub sub add aad sub add fild sub outsl xchg add push sub add mov add sub add push (bad) sbb add adc add add add push adc add or add aaa add add add add sub sbb jge add add sub adc add add sub ficom add in sub add jmp sub add add out add (bad) sbb add adc add add add add adc add sbb pop add add add add adc rolb add jnp add add xor add cmp add add cmp add add lret add lret add add add add imul add cmp sub sub mov add cmp add add add add xchg pop invd pop pop pop pop bound or sub pop pop or sub or sub add add les or dec add add xchg adc add sub adc xor jnp add add push adc pop xchg sub add popf push adc pop (bad) xor add and add pop adc add pop pop pop bound xor add or pop or add add stos ficomp cmp (bad) (bad) decl cmp (bad) (bad) decl cmp (bad) (bad) incl cmp (bad) (bad) incl cmp (bad) (bad) decl inc (bad) (bad) incl cmp (bad) decl cmp (bad) incl cmp (bad) incl pop mov add or mov add adc xor add add jmp sbb inc sbb add add add add add add add xor add add sub add cmp add cmp inc add add imul add sub imul add cmp add add pop sbb sub add push cmp add add push cmp add add sub cmp dec add add push sahf or pop or add add out lea add adc add pop pop push sahf push pop pop adc add sbb add adc adc push adc add add add or jnp add add push or pop or add sbb add add adc adc and or sub adc add jnp add add pop pop pop (bad) xor add and add pop xorl dec add add sbb add adc add adc (bad) decl sub add add add add pop adc add add add or pop and lock add add or and add pop xorl dec add add or pop and add add add pop xorl add add add pop adc pop pop pop pop bound or cmp xor or jnp add add pop xor (bad) (bad) incl jnp add add jnp add add pop (bad) xor add and add pop xorl dec add add jnp add add pop (bad) xor add and add pop xorl pop adc add add add or push add add add or pop xchg adc sub sbb adc and xchg pop adc adc pop xchg adc (bad) pushl adc jnp add add adc adc rcrb or or and pushl lds or pop adc push cmp (bad) (bad) call or add add mov cmp cmp std (bad) decl cmp std (bad) incl cmp std (bad) decl cmp std (bad) decl sar (bad) decl incl cmp std (bad) lcall adc adc adc push push mov add mov mov add mov mov add mov mov add mov add adc sbb add add push mov add mov pop mov add mov or adc pop or or adc pop or or adc pop or or adc pop or or xor add mov adc add add add add push (bad) sbb inc sbb add add ja add mov add adc add sbb add add add adc mov add jnp add add imul cmp sub add cmp add push cmp add push cmp add push cmp add sub jle add jnp add add jp add xchg adc or push sub adc pop adc xchg sahf adc adc adc push xor add add add adc pop pop sbb adc xchg xchg adc push adc adc adc add xor xor push sub or and or add pop pop add add add mov add jge add add adc sbb pop sbb xor add adc sbb pop pop pop lea add adc adc adc adc or or adc adc sbb or sahf adc adc add push xchg push bound or and or ret pop push xchg adc pop or pop and push adc pop adc sub adc push sub push sub or adc xchg xchg adc pop adc pop pop xchg xchg xor adc pop pop adc pop adc pop adc xchg sahf adc adc adc sbb pop adc adc or ret adc xchg adc sub pop adc pop adc xchg sahf adc and adc or adc pop pop sbb adc xchg xchg adc xor pop adc adc sahf pop push xchg adc or pop pop adc adc or adc pop adc sahf adc sbb adc pop adc push cmp (bad) (bad) call or sete incl add pop adc adc and add add stos add or adc adc adc xchg adc adc pop adc adc sahf push adc pop adc sub adc pop pop or sbb or adc xchg xchg adc pop adc pop pop xchg xchg xor adc pop pop adc pop adc pop adc xchg sahf adc adc adc sbb pop adc adc or enter adc pop adc xchg sahf adc and xor (bad) call xor adc pop adc pop pop sbb adc xchg xchg adc xor pop adc adc sahf or cmp (bad) call cmp add or addl add add cmp (bad) decl cmp (bad) incl cmp (bad) decl cmp decl jl (bad) decl call add jnp (bad) incl cmp call add jg (bad) lcall pop lea add add push adc push push mov add mov mov mov add mov mov add mov add xor add mov add add push mov add mov pop mov add mov or adc pop or or adc pop or or adc mov adc xor add mov adc add adc mov add mov adc mov add mov adc mov add mov adc mov add mov adc mov add mov adc mov add mov adc xor add mov adc add add add push (bad) sbb inc sbb add add add add add add adc add sbb add jbe add sub add adc sub and sub and ss add add xor add add cs pop pop sub sub pop or add add add imul das or rorl les sub add movl lret pop sub or roll sub push mov add pop mov add add out add (bad) sbb sub add adc add add add add add add xor add add adc add cmp add cmp add add cmp add add aas add add add add cmp add xchg cmp add cmp add add add cmp add add cmp add add es sbb or add inc add add add add add pop push add or add sub add push adc pop adc pop pop and adc sub add add add wbinvd add add add add push sub pop das and jnp add add (bad) arpl add and add push add add cmp (bad) ljmp pop or add adc and add pop push add cmp sbb add adc and add pop push add sbb jnp add add adc and add pop push add add jnp add add cmp (bad) (bad) aas xlat (bad) (bad) lcall cmp cmp (bad) (bad) (bad) fisubr cmp add mov (bad) decl mov cmp add mov add call add decl cmp (bad) (bad) decl cmp (bad) (bad) incl mov add pop mov add or mov add adc xor add adc add add jmp add (bad) sbb add inc sbb add add add add add add add xor add add adc add cmp sub add pop cmp add add pop add add add add sbb add xchg push cmp add add cmp add sub add cmp add add cmp add add sbb sbb or add add push adc add or add pop adc push adc pop adc pop pop and adc jnp add add nopl or jnp add add add (bad) pop das adc pop add outsl jle add or xor sub sub add adc add push push sub add add cmp add sbb outsl xchg add push push cmp (bad) ljmp inc or or and sub outsl jle add add add add cmp add sbb outsl xchg add push sub jle add add add add cmp add pop or outsl xchg add push adc jnp add add sub (bad) (bad) fisubr cmp (bad) (bad) call add aam (bad) decl fdivr (bad) incl cmp (bad) (bad) call add fdivrp (bad) call add call add decl cmp (bad) (bad) decl cmp (bad) (bad) incl mov add pop mov add or mov add adc xor add adc add add jmp add (bad) sbb add add add add add add das add add add add xor imul add add adc sub add or add add add add add push jge add add and add add jge add add and addb lea add jge add add and addb lea add jge add add add and add jge add add clts mov add add sub add push (bad) sbb add adc add add add add adc add or add add add add sub sub add add daa jnp add add sbb and add add sbb push add add pop xchg popa jge add add pop add roll sub add (bad) add fldl sub add in add (bad) sbb add add add add cmp add adc add sbb add add add adc je add jnp add add and sbb push pop add add addr16 add add pop xchg popa and jg add pop sub push add add pop jnp add add (bad) jg add dec jnp add add dec xchg and popf add add add add add add popf push cmp pop jge add add and incl add fidivr add xchg (bad) incl cmp cmp sub sub mov sub add pop mov add add out add (bad) sbb sub add add add add popf popf add add add xor add add sub add cmp add add add add add add add add add and addb cmp add add and add add push add add and add add push add add and add add push add add sub add add inc cmp push add add pushf add add add xchg add add xchg add add add add xchg add add and addb das add sub pop and addb pop push or and addb xor add add add xchg and incl add add add add or add push sub or add popf or pop or and addb and ficomp cmp (bad) (bad) incl cmp (bad) (bad) ljmp inc add or and (bad) decl cmp (bad) incl cmp (bad) incl cmp (bad) decl cmp incl cmp (bad) incl cmp (bad) incl mov add pop mov add or mov add add call sbb add add add sub add sub add and add adc add sbb add add add adc repnz add add add cli incb add add add loope add cmp add add cmp add add cltd add add add add cmp add add add add cmp add add add add cmp add add into add add iret add add add add lret add add add add xor add add add jnp add add or jnp add add jnp add add jnp add add jnp add add jnp add add push sub add add add pop jge add add and add pop jge add add and add pop jge add add jnp add add push add add adc jnp add add jnp add add dec (bad) (bad) call sub add add xor add xchg add fimul cmp (bad) (bad) incl cmp (bad) (bad) ljmp mov add cmp (bad) incl cmp (bad) (bad) incl cmp (bad) (bad) decl cmp cmp (bad) incl cmp (bad) (bad) incl cmp (bad) (bad) incl mov add add in add (bad) sbb inc sbb add add add add add add add add add xor push add add addb add jl add and js add cmp add jnp add add jne add cmp add jnp add add jb add cmp add jnp add add outsl add add add add cmp add add add add sub push add add add cli jle add sub pop add add add add add and add pop adc add add add add or jnp add add add push push xor sbb pop add add add pop add add add add add add adc pop xchg adc inc jns add add add add adc pop pop pop xchg adc inc add add jnp add add xchg add add add xchg inc push add add jnp add add pop pop xchg add add add pop pop xchg inc aaa add add sbb add sbb add add add pop pop and pop add add add pop and rolb add add add add pop pop and pop add add add pop and mov add add add add pop pop and pop add add add pop and xchg add add jnp add add pop pop and pop add add add pop and js jnp add add pop pop and pop add add add pop and pop add add add pop pop and pop add add add pop and inc add add add pop pop and pop add add add pop and and jnp add add pop pop and pop add add add pop and or adc aas (bad) (bad) decl adc jge add add adc add add adc adc pop das aas add add add add or jnp add add add jnp add add or and jg add and incl add adc adc xor push pop pop and (bad) incl adc add add add stos add or add add jnp add add incb incb adc or jle (bad) decl cmp cmp cmp cmp mov (bad) incl cmp cmp add lcall or add or or push mov add mov mov add mov mov mov add mov add xor add mov add add push mov add mov pop mov add mov or adc pop or or adc pop or or adc pop or mov add adc sub add push (bad) sbb or add add add mov add add add add xor add add add add adc mov add jnp add add push add add add add movsb add add jle add push cmp cld add add pushf add add add add jns xchg add add add add sub add add add mov add jnp add add mov add jnp add add pop xchg and add add jnp add add jge add add jnp add add jnp add add jnp add add jnp add add jnp add add add jns add add jnp add add push add add adc add jnp add add cli incb add push add mov add add add add add add add add add add xor sub pop sub or add add add pop and jle add cmp or mov add sub add add add xor add add add xor add add add jnp add add and adc add or sub push add add sbb (bad) (bad) (bad) lcall aas lea add add add add cmp add add add jnp add add pop push pop pop outsl jl add es sbb lcall add add pop jge add add and add pop jge add add jnp add add xor add mov add es pop pop and add add pop jge add add and add pop jge add add push jge add add sbb add add dec add add add and jnp add add jnp add add jnp add add pop xchg and add add jnp add add jge add add and add pop jge add add and add pop jge add add jnp add add jp add sub add add add jnp add add or add or push cmp (bad) (bad) call pop or jnp add add or jnp add add incb sub push adc jnp add add jnp add add jnp add add adc jns add add add pop jge add add cmp (bad) call add and sbb pop (bad) (bad) call add add jnp add add push add add cmp (bad) call adc dec std (bad) incl cmp (bad) call add incl cmp (bad) incl cmp incl cmp (bad) incl cmp (bad) incl cmp (bad) ljmp add push cmp (bad) incl mov add pop mov add or mov add adc xor add add mov add add xor add sub add push (bad) sbb add add add add add add add add add add xor add add adc push cmp add cmp add push sub push jnp add add push jnp add add add add sub sub dec sub mov add push sub pop add add xchg add push sub push sub aad sbb fimul cmp mov add cmp cmp movsl (bad) (bad) incl sub sub mov mov add add mov add add add mov add add call sbb sub add add add add jge add adc add or add cmp add add add sub sub jge add add sbb jge add add pop sub mov pop add add sub ficomp add fiadd sub add loope sub add in add in add (bad) sbb add add add add add xor add adc add sbb add sub add and add sub jnp add add push jnp add add add or adc sub add out or cmc add in add (bad) sbb add push sub add adc add add add add add xor add add adc jnp,pt add add and add sub pop pop jge add add sub sub jnp add add and add sub pop pop jge add add sbb sbb arpl pushf fidiv add mov sub add rolb sub or fldl sub add loop mov add pop mov add add mov add sub add push (bad) sbb add adc add add add add adc add or push add add add add sub sub sub add sub add add and es add push pop jge add add add rolb roll sub add aam sub sub add sub add add xor add add add out add (bad) sbb add add add add inc inc add sbb add pop add add add adc or add add add hlt or clc add in add (bad) sbb add push sub add adc add add add adc or add add xor add add adc jo arpl add xor imul add add and add push sub es pop jge add add pop sub bound add pushf sub arpl add xor sub add add and add push sub es pop jge add add cmp jnp add add rcrb add push jge add add xor (bad) incl cmp sub sub mov sub mov add pop mov add add out add (bad) sbb add add add add xchg xchg add add add xor add add add add adc and add pushf add add popf add add add add pop pop bound bound add and add mov add pop jge add add addl add add add adc data16 add jnp add add and add sub pop jge add add outsl sub bound add pushf sub pop add add and add or pop jge add add add add add rcrb add adc add add and add adc arpl add dec add pop (bad) (bad) incl cmp (bad) incl jb (bad) incl cmp (bad) incl cmp (bad) decl cmp sub sub add pop mov add add mov add add xor add sub add push (bad) sbb add add add add add aad add adc add sbb add and add adc (bad) popa add add incb sub push sub sub or cmc add in add (bad) sbb add push sub add add adc add add add pop add adc add sbb push add add add add cmp add add add add xor lds add jnp add add and add cmp pop jge add add mov add cmp add add pushf add add fs add add and add pop jge add add xchg add add xchg add add add add popl add jnp add add xor cmp popa add add jnp add add adc add add add jnp add add add sub add add jge add add push jge add add and jnp add add jnp add add add sub add add add pop jge add add or push add cs (bad) incl cmp cmp (bad) incl cmp (bad) incl cmp (bad) incl incl cmp (bad) incl cmp (bad) incl cmp (bad) incl mov add add add xor add add add call sbb sub add pop add add add add add add add add and add add jge add add sub add or or add push add add add add sub and add add sub sub and add add sub push sub adc add fadds sub outsl mov add sub add fadds sub outsl mov add sub add mov add sub add push (bad) sbb add adc add add add push adc add or add cmp add add adc adc adc sbb sbb adc sbb sub sub add ljmp in sub add jecxz cwtl add push sub add mov add sub add push (bad) sbb add add adc add add add add adc add push add mov add sub xor add add adc clc add add loope add cmp add add stc add add and or add testl add add sub hlt add add hlt add add hlt add add cmp add add cmp add or add or pop add add or outsl mov add push outsl mov xor adc cmp add add outsl mov adc pop and ja add push outsl mov adc and adc ja add jae add or adc outsl mov add add or adc sub add or adc imul mov add es adc adc pop adc adc push outsl mov adc push pop adc ja add push outsl mov adc pop push pop adc ja add pop adc push outsl mov or adc push outsl mov or push outsl mov outsl mov or sbb add or adc mov pop sub add or adc push adc mov test add or or adc mov test add or or adc mov test add ficom add sub add andb add adc jl add push outsl mov jae add or mov test add or add or outsl lods add or or push jae add or xchg (bad) (bad) call or adc add popa add push adc outsl mov add sub add andb add adc and outsl mov sub pop outsl rolb or sub or add or sub or add or adc add add (bad) ljmp popa add push cmp (bad) (bad) ljmp add or std std (bad) ljmp popa add push cmp std (bad) decl cmp (bad) (bad) decl cmp (bad) (bad) decl push (bad) (bad) decl incl add inc add add add into add add add add add add add add add add add add add add add add add jb add mov add and add adc add add add inc add add add and add add or or add add add cmc add hlt add add xor faddl add xor add sub sub sub and sub sub add sub or icebp add jle add add mov adc cmp and add jge add cmp xchg add cmp adc xchg add pop jle add add mov sub sub mov push popa add push jae add push or jnp add add or add add add or add add or mov or incb movsb add push jae add push outsl or add or add add adc push cmp (bad) ljmp popa add push cmp (bad) ljmp fwait add push cmp decl cmp (bad) incl cmp (bad) incl cmp (bad) incl adc add add add add add xor add add xor add push sub sub imul sbb sbb cs sub sub je add add xor xor add pop sub add sub push pop xor push sub leave or int sub or rolb sub add into sub add or leave or int sub add xor add add adc pop jnp add add sub sub sub sub sub sub sub sbb add push sub sub or in sub push sub add jecxz sub add loope sub jae add push sub jp or or add or or add icebp add lock out sub out add or or add or pop sub sub add repnz repnz push add sbb add sub add add sub add or add add add push add insl add add add add add imul add adc pop add add xor add cmp add add cltd or add add repz add scas add add repz add add add cmp add add repz add sahf or add add clc add add std add add mov jnp add add imul or pop push mov ret add or jnp add add pop push mov jnp add add imul add add add movsl add push or jnp add add add add add stos add push add add add test jnp add add test add or push cmpsb add push jae add push outsl or add add jnp add add outsb add add add add imul add add add imul or add push outsl fildl add add jge add add add or (bad) ljmp popa add push cmp (bad) (bad) ljmp lcall (bad) incl cmp (bad) (bad) ljmp add push cmp (bad) (bad) ljmp mov add cmp (bad) (bad) ljmp popa add push cmp (bad) (bad) ljmp add or (bad) (bad) (bad) decl cmp (bad) (bad) incl add cmp sub add or add add add add xor push add add aas and or sub adc add add sub sub sub jo add sub jnp add add jle add or xor lahf add push adc jge add add add mov push sub or mov sub push sub sub add sbb add add jge add add add add add jae add add add sub jnp add add add imull sub jnp add add add imull sub jnp add add add (bad) dec adc adc push xorb add jae add push sub add xor fiadd add xor push lea add jge add add jae add or add add jae add or add add jae add or add add jae add or add add jae add or add add jae add or add add jae add or add add sub add add add add jne add add push and or add push outsl lret or and or add push sub adc and or add push sub sbb add lea add and add cmpsb add or add add add cmp and add cmpsb add or add add add sbb add add add add adc mov add sub add cmp in add add lods add add add add cmp xor add cmp add out or add add mov cmpsb add add mov add cmp jno add sub add or add out or add push sub add or fisttpll arpl add sub add or or add push sub add or frstor add add add add add adc add out or add push sub add or fnstsw add add jne add add add adc or add push sub add or fstpl add add jne add add add adc adc and or add push sub add or (bad) add add jne add add add adc adc and or add push sub add or (bad) add add jne add add add adc adc and or add push sub add or frstor jne add add add adc adc sub add or or or out or add push sub add or fidiv jne add add add adc adc sub add or or or out or add push sub add or fimul inc add inc (bad) (bad) decl cmp (bad) incl cmp (bad) incl cmp decl cmp (bad) ljmp popa add push cmp (bad) ljmp aam add cmp (bad) decl cmp incl cmp (bad) jmp fiadd jle add or push sub add stc add add add add add add add add xor add add add add sub and or sub sub sbb push sub or add sub sub sub sbb push add and sub sub add into sub add sub outsl imul add shrb popa add push sub outsl aad add sub sub add sub add roll add sbb add pop add add add adc rolb add sub cmp add add rolb add sub adc rolb add cmp add add and add cmp add add or outsl push add cmp add add rolb add cmp add add add push or cmp add add jnp add add jae add push adc add into add add (bad) add or add add add js add sub add and popa add push outsl xlat add or fadds add or add or add or mov add add outsl fiaddl add sub fildl add sub add add add xchg add sub add and popa add push outsl xlat add or outsl faddl add sub add add add (bad) push add sub add and popa add push outsl xlat add or outsl fldl add sub add add add pushf push add sub add or add or or or fild add outsl xlat add or pop add sub pop add sub jnp add add movsl push add sub add and popa add push outsl xlat add or or or adc outsl add add fsubrl add add push outsl loopne add adc adc jne add add and popa add push adc add add add loope add sub add add add add or add adc loop add adc add sub or adc jae add or or pop pop and sub or daa outsl in add adc or outsl in add adc and push add sub add outsl in add adc and push add sub add outsl in add adc adc and or add push sub add or add or adc pop sub add or adc outsl add add adc or add add add outsl push push adc cmp sub or or add or xor jecxz add adc adc or add or add or adc and push add sub add outsl in add adc adc outsl in add adc pop sub add or adc outsl add add adc sub or add or push sub adc out add sub adc out add add loopne add outsl out add or add loop add adc add jae add push adc outsl (bad) add or add add add js add sub add and popa add push outsl xlat add or add add adc mov add push sub add sub add call or outsl add add adc or add add and or add popa add push or (bad) push add sub add sub push adc sub add sub add or mov add sub add sub push add add add fisttpl add sub add adc sub xlat add or and or add fadds add sub sub sub add sub or or outsl add add fsubrl add sub (bad) incl sub (bad) ljmp add or es (bad) decl cmp cld (bad) incl daa cld (bad) ljmp popa add push cmp cld (bad) ljmp popa add push cmp cld (bad) decl cmp cld (bad) incl cmp cld (bad) incl add add add lcall or add add add add enter add add xor add add add add adc lcall add cmp cmp cmp das cmp jnp add fwait add add pushf add add mov sub add or or sub or and or sub add add jmp add xor sbb push sub push adc jnp add jmp add or jnp add add outsl in add or jnp add add in add sub add adc sub add or add or add pusha (bad) (bad) ljmp add push cmp (bad) decl cmp (bad) decl cmp (bad) decl pop (bad) (bad) incl cmp (bad) decl cmp (bad) ljmp add or pop (bad) (bad) ljmp add push cmp (bad) incl add adc add insl add add add adc inc sub inc sbb sub add adc add add jmp aaa adc sub sub sub sub add add repnz add sub add add add or add mov mov add sub sub popa add push sub sub add or mov or mov xor add add add add adc cmp mov add cmp xchg add add jnp add cmp popl add and push add cmp xchg add add sbb fist add popl add cmp (bad) (bad) incl pop pop pop or add fild add jge add add outsl out add or push sub outsl out add or add or sldt sub add sub add or outsl repnz or add push jge add add sub ret add push cmp (bad) decl cmp (bad) incl cmp (bad) incl cmp ljmp add or addr16 (bad) ljmp popa add push cmp (bad) ljmp add or (bad) (bad) (bad) incl cmp (bad) ljmp add or data16 (bad) incl add adc add mov add adc add add add mov add pop cmp add sbb add add add add pusha sub inc sub sub jg add arpl sub push add cmc add or sub jle add add add add testb or jnp add add pop outsl testl into pop pop sub sub add or cwtl (bad) (bad) decl cmp cmp cmp clc add or xchg (bad) (bad) incl sub stc add or xchg add xchg add sbb add push add add add adc adc add sub add add enter cmp add add add int3 add add add jnp add add cmp movb add add add add les add cmp add add sub push sub jl add add add add dec sldt sub add adc sub add or add or pop add add outsl loop add or add outsl clc add or add add add outsl stc add or sbb add jae add or add outsl out add or add or add or add add or xor adc add popa add push sub add or adc pop outsl in add adc add or adc pop outsl in add add add or push adc outsl push add or xor add push outsl in add adc outsl in add add add or add add or add and add popa add push outsl incb add adc adc push xor or push outsl push add or pop adc adc outsl push add or incl add and add popa add push and add sub add outsl add add adc adc or add or adc outsl jmp in add add add add add add or jnp add add add add add outsl add add add add add or add or jnp add add outsb sldt sub add adc sub add or add or inc add xor (bad) ljmp mov add cmp (bad) (bad) decl cmp ret push cmp (bad) (bad) incl cmp (bad) (bad) ljmp popa add push cmp (bad) (bad) ljmp add or xor (bad) incl cmp (bad) (bad) jmp fiadd sub cmp std (bad) incl add add add add or add or add adc add add add add add sbb add sbb add cmp add sbb cmp add add add add xchg pop and add add mov mov xor mov mov cmp or add mov xor cmp add add add add pop and or add add or outsl push add or sub pop pop or push push sub add outsl add add or adc adc ja add add pop add add add imul adc adc add adc add imul add push or pop or push das movsl pop push sub inc add cs (bad) decl cmp cmp (bad) incl cmp (bad) ljmp add or cmp (bad) incl cmp (bad) incl cmp push add or cmp (bad) incl cmp (bad) (bad) jmp adc adc sub inc sbb add add add add add add add add add xor add add xor add or sbb sub add sub or hlt and add sub add or add add push sub add add add add adc add add add sbb add add add or push sub push sub add add sub outsl add jmp sub es lea add or push sub pop or add add push sub add add add add add sbb add add add xor add add add add adc add or movaps add sub or hlt es fiadd sub sub sub add adc add add add adc add sbb add add add adc sbb add jnp add add or adc add jnp add add cmp or add ud2 add jge add add ud2 add cmp or add add add cmp or add adc add jge add add adc add jnp add add push add or jnp add add orb add popa add push jae add push adc add add add mov popa add push and popa add push outsl lret or add or jnp add add mov add sub add sub sbb sbb mov popa add push sub add or add or jnp add add xchg or add popa add push sub xlat add or jnp add add or add sub add or add add add les add sub add add add add sbb sbb cmp add sub add sub add or add or jnp add add int add sub add sub add or sbb sldt sub add sub add or add or jnp add add cmc add or xor add add add or add add add add sahf or add push jle add or add push outsl testb or jnp add add or add push xor add add add or jnp add add sahf or add push push outsl testl jp add fimull add sub add jae add push adc sub add mov add adc push adc cmp pop adc lcall add jnp add add dec sldt sub add jae add push adc add add add repnz add sub add pop outsl repnz or add or jnp add add jmp add sub add pop outsl push add or add or push xor add add add clc sldt sub add and popa add push outsl xlat add or add fiadd fimul and adc outsl add add fcoml and pop adc adc adc mov pusha (bad) (bad) (bad) fimul push sub adc outsl add add faddl jnp add add add add sub add jae add push adc add add add in add add jnp add add sgdtl or fildl add add add add adc add outsl adc add adc cmp and adc add or jnp add add sbb add sub add jae add push adc jnp add add repnz add sub add or add or jnp add add outsl adc add je add add jnp add add movsl push add sub add and popa add push outsl xlat add or das add add add fisttpl add sub add and popa add push or mov add sub add sub add outsl xlat add or or and pop adc add add fcoml and adc add cmp (bad) fimul adc (bad) push adc add outsl add add (bad) or and adc outsl add add faddl jnp add add inc add add jnp add add adc ds add jnp add add das adc add popa add push jae add push adc add push add or add or es add add sub add or add jnp add add inc adc add popa add push jae add push adc add add add push adc add popa add push adc xlat add or jnp add add add sbb add adc add pop adc add popa add push adc add xlat add or jnp add add adc add popa add push adc add sub sub fild add outsl xlat add or add add push add or xor add add add jo add sub add adc add xlat add or sbb jnp add add jns add sub add adc add xlat add or or daa sub adc outsl add add fcoml sub add or push (bad) (bad) (bad) fimul adc (bad) push adc add outsl add add (bad) or and outsl add add faddl jnp add add (bad) adc add popa add push jae add push adc add add add fwait adc add popa add push sub add or add or add or jnp add add lods adc add popa add push sub push add or add or add or jnp add add mov popa add push sub pop add or add add outsl sbb add add add add lret add popa add push sub add outsl sbb add add add add fistl add sub add sub add push sub add sub add sub and popa add push outsl sbb add add add add in adc add popa add push sub add push sub add sub add sub and popa add push outsl sbb add add add add repnz add popa add push sub add push sub add sub add sub and popa add push outsl sbb add fiadd fiadd fimul sub adc outsl add add fdivl add or push add add add pop sub adc adc outsl and add adc outsl and add adc adc sub and add add add add add add sub add jae add push adc adc outsl and add adc cmp add adc sub or adc sub outsl add or adc add sub add outsl daa add or dec add add or add or adc add sub add outsl sub add je add add or or add or or adc adc outsl sub add adc repnz add sub outsb add or or or loopne add adc adc adc pop xor or or fs xor jnp add add sub popa add push jae add push adc add inc adc add popa add push adc sub add or add or or sub outsl add add (bad) test add adc pop xor adc adc pop fs xor add or add popa add push outsl sub add adc sub add movsl xor add adc adc add popa add push outsl sub add adc sub add movsl xor add adc adc add popa add push outsl sub add adc sub add movsl xor add adc adc add popa add push outsl sub add adc sub add je add sbb adc or push adc adc sub add push cmp add add jnp add add lahf adc add popa add push jae add push adc add add add pop adc add popa add push adc sub add or add or jnp add add jne add sub add adc sub add or add or adc sub adc adc xor jnp add add dec sldt sub add adc sub add or add or unpckhps sbb jnp add add push popa add push adc sub add or add or adc das push adc sub adc adc lcall jae add push adc scas add push fiadd fiadd adc pop pop adc adc adc mov xlat fimul cs adc outsl add add (bad) add fiadd adc imul or add (bad) (bad) ficom add add xor xor adc outsl add add (bad) add fiadd adc sub ja (bad) (bad) fimul adc (bad) push adc add add (bad) or sub adc outsl add add faddl sub jnp add add mov add sub add jae add push adc add add add mov popa add push add add add add add adc adc sub add or add or adc jl add adc or add or push fisub adc pop and pop outsl mov add pop and lea add adc fiadd add add add outsb sldt sub add adc outsl sbb add adc adc add add add xor sub adc outsl add add faddl jnp add add (bad) adc add popa add push jae add push adc jnp add add mov popa add push add add add cmc add or xor add or add or adc cmp jnp add add mov popa add push jae add push adc add add add sbb add or sbb jnp add add in add sub add adc jnp add add xlat add or sbb add add push add or xor jnp add add xlat adc add popa add push adc jnp add add xlat add or or ss adc outsl add add fcoml sbb pop adc adc add add add cmc add or insl (bad) (bad) (bad) fimul xor pop adc add add (bad) or sbb adc outsl add add faddl jnp add add xor add add add add xor add add add add lods add or add add add lods add or add add jnp add add add loope (bad) incl cmp hlt (bad) incl cmp hlt (bad) pushl add or out (bad) incl cmp hlt (bad) incl cmp hlt (bad) pushl add or jmp (bad) pushl add or out (bad) incl cmp hlt (bad) incl add add add cli add add add push add add add add add add add add add add add pop add add add add add add add roll add add add add add add add add out add add add imul add add add add add add lret add add add add add add add add add add xchg add add add add add add add or add add add add add add add add out add icebp add add add add add add add add add add add add add add add add add or add sub add add add add add add add or add sub add add add add add add add add add or add lods or add add add add add add add add add or add or add add clc push add out add fimul add add add add add add add ljmp add or add add add add add add add or add add add add add add add add add or add add add add add add add add test or add add jle add push add add add adc add add add push or add or add add add add add add dec or add add movsl or add add add add add add add add add or add add add add add add imul add add (bad) add or add add add sbb add movsb add add add cmp add jnp add add xchg adc add jne add cmp add cmp add sbb sbb cmp add add adc add es add add add and add and add sub add outsl enter or outsl leave add push or add in add sub add jae add push adc add add add in add sub add adc sub add or add or add adc add push pop lea add adc adc push pop sub adc outsl xor add adc push adc xor adc adc adc adc pop inc sub add sub add or or add or push outsl imul push adc pop pop adc adc adc pop outsl xor adc pop adc or add adc adc outsl loopne add outsl jmp or or icebp adc add popa add push sub add or adc and adc add popa add push sub add or movl sub adc pop and add cmp push adc adc adc add outsl add add adc add outsl loop add sub or add sub sub outsl call adc adc add popa add push sub add or add inc or add add and or add popa add push adc (bad) push add sub add sub add adc sbb add popa add push adc mov add sub add sub add adc add fiadd adc sbb jnp add add fisttpl add sub add adc scas add push outsl xlat add or outsl flds add cmp add add outsl fiaddl add sub fildl add sub add add add xchg add sub add and popa add push outsl xlat add or outsl faddl add sub add add add (bad) push add sub add and popa add push outsl xlat add or outsl fldl add cmp je add add or jnp add add pushf push add sub add adc outsl aaa add or pop adc sub add or add or add or or adc sub adc push xor adc pop sub in add adc adc adc outsl cmp add outsl cmp add adc pop pop adc adc adc outsl aaa add or iret add add add adc add popa add push adc outsl add add outsl xlat add or or add or inc and add adc outsl cmp add adc adc push cmp or adc or adc or or pop push cmp (bad) (bad) call or or or jae add push adc scas add push fiadd fiadd adc adc cmp add add or mov add pop outsl movl add add add add jne add add lcall add add cmp add sub add jae add push adc push adc or add outsl sub add adc sub sbb add or movups pop adc sbb jnp add add dec adc add popa add push jle add or add or and adc push jae add push adc scas add push adc push sub push adc outsl imul or sbb add add sbb sbb adc outsl add add (bad) or sbb adc outsl add add (bad) add fiadd add sub or adc adc outsl add add faddl pop pop or add add add jmp add aas (bad) (bad) (bad) fisubr or sar (bad) incl cmp sti (bad) incl cmp sti (bad) ljmp add or sar (bad) decl cmp sti (bad) call adc adc outsl add add fsubrl add jl (bad) ljmp popa add push cmp adc jl (bad) call adc jp (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add mov add push add add add add add add add add add add add add add jle add cmpsl add add add add add add add add add les add xor add add add add add add push add add add jbe add or add add add sbb add cmpsl add add add cmp add cmp add pop cmp add imul add add imul add cmp add sub cmp add add push or outsl cmp add sub fidivr outsl (bad) add or pop outsl cmp add insb pop or pop outsl xor push push adc sub adc adc lcall or add or add or push adc add popa add push sub add or push adc pop pop adc adc adc mov (bad) or pop add add push outsl sub add push jae add push pop sub add fiadd adc adc aas pop (bad) (bad) incl outsl enter add add push outsl add or outsl movl add push adc add add push sub jp add pushw add sub add jae add push adc add push adc add popa add push sub jnp add add in add sub add add add add jmp add adc adc sub add or add or or or adc outsl add add faddl jnp add add outsl in add or add lcall add cmp aas add or xchg (bad) (bad) decl cmp cmp add mov (bad) call add call add xchg (bad) (bad) call add incl add add add add add add add add dec add add add xor add add inc add adc push add add add add pop adc add or adc add cmp add add les add cmp add add lret add lret add add int3 add add mov add and add sub add or outsl mov add or add fiadd add add add push popa add push pop outsl xlat add or sub add or add or jnp add add jne add sub add or add or pop and add or outsl inc add or sub or xchg adc add popa add push outsl inc add or or or add or jnp add add xchg adc add popa add push or add or add jae add push sub and (bad) ljmp add or xor (bad) decl cmp (bad) (bad) incl cmp (bad) (bad) incl cmp (bad) (bad) jmp fiadd fimul add pop adc add add fsubrl add in (bad) ljmp popa add push cmp (bad) (bad) pushl add push cmp (bad) (bad) call add loop (bad) incl sub add add or add add add add add or add add add add add push add add add xor add add cmp add add cmp add add or or paddusw sub sub out or out or xor aaa pop sub sub or xor sbb outsl inc add or pop outsl inc add or add add dec add or sub pop sub jae add or (bad) or enter add and popa add push pop outsl mov add or dec add or mov adc push sub ficomp sub add and adc add popa add push and adc add popa add push jae add push adc sub pop fisubr (bad) ljmp mov xor (bad) jmp push sub ficom push add push jae add push sub adc fiadd adc sub xor add add add add add add add or sbb add add add add add fadds or add add loope adc add add xor add add inc add adc sub sub (bad) add add xor sbb cs sub sub je add add xor xor add pop sub add sub push pop xor push sub leave or int sub or rolb sub add into sub add or leave or int sub add xor add add add add sub (bad) add add adc adc sub sub sub sub sub sub or in push sub push sub add in add jmp int add sub add xor add add inc add adc sub sub addl add xor sbb cs sub sub je add add xor xor add pop sub add sub push pop xor push sub leave or int sub or rolb sub add into sub add or leave or int sub add add jge add add add mov add pop sub jnp add add pop push incb sub sub outsl push add or bnd add or add or add or add jae add push sub add push add jge add add add jae add push jge add add add push add add add add or movb push sub add sub add or add add add add mov add add add add add sub jnp add add add imull sub jnp add add add imull sub jnp add add add imull sub jnp add add add idivl add dec add or add add add add or or add add add cmc add hlt add add sub pop jge add add add testb add sub jnp add add add testl xchg add add add cmc add hlt add add add add add sub or add add pop sub sub add repnz mov repnz add add pop jge add add sub add add jge add add add xchg add add sub jnp add add add imull sub jnp add add add testl cltd add add add cmc add hlt add add add jge add add pop jge add add sub add add jge add add add add add add pop add or fild add sub add add inc add add add add jle add or add add jle add or add add sub add add jge add add add or push add or incb sub push jge add add add popf add add add add add xor add add adc inc add add pop adc add cmp inc add add add add xor add (bad) xor add cmp add cmp add add add add sub add cmp add add aas add add add add xor add (bad) xor add cmp add add add or and add sub add add add add xor add (bad) xor add sub add outsl dec add or jnp add add or jnp add add imul add add or sub add xchg add sub add push mov add (bad) xor add sub add outsl dec add or or jnp mov add sub add pop mov add sub add or jnp add add lcall add add sub add outsl dec add or cmp sub sbb add add add lcall loopne add sub add add add add lcall cmp add sub add outsl dec add or add fiadd pop pop and pop push sbb aas jnp (bad) ljmp add mov popa add push cmp cmp data16 or ret ljmp add or mov cmp add push cmp mov data16 or (bad) incl adc add add add add adc add sbb add add add adc sub add or add pop adc add popa add push outsl dec add or add add add sub add sub add outsl dec add or add add add push adc add popa add push outsl dec add or add add and popa add push outsl dec add or add lea add add add add or dec add add add add mov add sub add pop mov add sub add sarb add add data16 or add or jnp add add and adc add popa add push mov pop or push xor add add imul adc add xchg add sbb add add jge add add push add cmpsl add add add add add movsl add add add add or lea add add add add hlt sub add push sub add adc add aaa add add add pop sub push sub lea add add adc adc sub jecxz sub in sub push sub add call in add push sub add xor aaa add add add sub sbb sub adc sub sub sub or jmp sub push sub add call in add push sub add xor inc add add add pop sub sub add sub sub push sub mov and and add push push sub fmuls sub push sub add faddl sub add faddl sub add faddl add adc add inc add add add sub sbb sub sub push sub mov and and add push sub add push sub sub or fildl sub add fiaddl sub add fiaddl sub add ficoml xor dec add add add sub lea add add daa sub push sub mov sub sub add push sbb add add push sub sub or (bad) push sub add aad sub add aad sub add aad add adc add dec add add add sub sbb add add sub sub sub sub sub push sbb add push mov add sub sub or roll sub add rolb sub add rolb sub add rolb add xor pop add add add push sub sub sbb add xor xor sub mov xor xor add push sbb add push mov mov add sub sub or int3 push sub add lret push sub add lret push sub add lret add add xor pop add add add sub push lea add add sub push sub mov aaa mov aaa mov add push sbb add push mov mov mov add sub sub or movl movb movb push sub add (bad) adc add pop add add add sub or sub sub sub sub sub sub sub sub push add push sbb add push mov mov mov mov add sub sub roll roll roll push sub add roll sbb add jge add dec add adc add add cmp add cmp add cmp add cmp add sub data16 add sbb hlt sub inc add or lea add adc adc push pop or pop or add or add add or adc push sub or or outsl push add or xor pop pop or or sub pop pop adc adc pop sub adc mov xlat ficomp add xchg (bad) (bad) ljmp add or nop (bad) (bad) incl cmp adc fiadd or add or xor add or pop outsl inc add or push adc outsl dec add or add or (bad) (bad) incl pop pop pop or push outsl dec add or fiadd fiadd push add or add push adc add add or adc add sub add outsl daa add or add adc pop sub add add or adc add sub add adc outsl push add or sbb outsl add or adc add sub add outsl sub add je add sbb or or pop outsl push add or push sub fiadd sub cmp cmp cmp cmp dec add or movsl (bad) (bad) decl incl add add add add and jge add add add add cmpsb add fiadd add add add add add add add add add add push add add add add sub sub pop sub subb sub incb stc add push jae add or and and add jae add or sbb add rolb sub sub add sub add shrl add or flds sub sub add sub add xor add add add add jle add add mov add cmp xchg add add cmp push cmp add add xchg add add xchg add add add xchg add add cmp add or push outsl add or dec add add data16 or sub sub push pop sub add je add add jle add add add sbb add fiadd or pop push sub mov sub (bad) (bad) jle add add sub add cmp (bad) ljmp add or fs (bad) decl cmp (bad) decl gs (bad) incl cmp (bad) decl cmp (bad) decl cmp (bad) incl cmp (bad) incl cmp (bad) incl add adc add add and add add xor mov add add add cmp add sub sub add add jle add add orl sub adc sub pop add add dec sub sub sub dec sub add push push sub add add push outsl cld add push push sub (bad) (bad) ljmp add test (bad) incl cmp popa add push sub or lods sub add push sub sti add push sub mov xor repnz add add push sub add cmp cmpsb add add cmpsl add add test add cmp scas add add scas add add adc add scas add add lcall outsl std add or sub add popa add push sub sbb and add sub add outsl sub add push outsl sub add je add add push jne add add jle add add orl add push sub adc push jne add add sti add push sub ficom pop push sub add push fimul cmp (bad) ljmp add or push (bad) (bad) decl cmp incl cmp (bad) ljmp add or dec (bad) (bad) decl cmp (bad) incl cmp ljmp add or inc (bad) (bad) ljmp popa add push cmp (bad) jmp fiadd sub add adc add add add out add add add or add leave add add add add sub jp add jne add add jle add add orl add add jae add push sub sub add cmp add cmp add jne add add jb add sub fnstsw add sbb xlat sub pop add or add add add pop add or add add pop add or incb push sub add push fimul cmp pop add or jl (bad) ljmp popa add push cmp lcall (bad) incl cmp cmp pop add or test (bad) ljmp sti add push cmp nop fiadd sub add add add add add (bad) add add add jle add or add xor add add dec add adc sub sub xor sub cmp add sub sub sub push push sub pop add or sub sub jae add push sub or leave add enter outsl hlt add push sub push sub outsl xlat add push sub xor add add dec add adc pop add add or add cmp push add add lar add adc add lar add adc add sub cmp add add sbb add and adc add popa add push sub sbb add sub add outsl sub add add add or add adc pop or sub add add add sub outsl cli add push add jnp add add lods add push or cmp add push incl add jae add push outsl sahf add push or incb incb add jae add or add push or incb std add push jae add push outsl mov add add push or push sub or add push add adc push outsl rolb add push sub or outsl roll add sub add add add push or outsl rolb add or outsl roll add add outsl repnz push or add push push incb or adc ficom adc adc lret add push outsl repz push fiadd pop cmp add add add add outsl add or adc cmp or or outsl repnz or push adc and add sub add outsl aad add sub adc and popa add push outsl imul adc add popa add push outsl repz or rclb add popa add push outsl pop add or add or outsl pusha add or pop adc outsl loopne add and adc add popa add push push lea add add add or pop adc pusha add or fiadd fiadd adc pop pop sbb popa (bad) (bad) call or or or (bad) jmp push inc inc loopne bound add sub or adc and inc loopne arpl add fiadd fiadd fiadd sub cmp std (bad) ljmp add or out std (bad) decl cmp std (bad) incl cmp std (bad) ljmp add or out (bad) ljmp popa add push cmp std (bad) ljmp lcall (bad) incl cmp std (bad) ljmp add or fdivrp (bad) incl add inc add add jo movsl adc add add jo movsl sbb adc add add add test add add add add cli add add add add add call adc add add add sub sub add imull add push sub add add xor add add add add sub lods add add adc adc sub sub sub sub sub sub or in push sub push sub add in add jmp add or out adc add das add add add adc adc lods add add adc adc sub sub sub sub sub sub or in push sub push sub add in add jmp fildl add sub add add sbb add sub and adc add adc sbb and adc test sub add sub sub add sub sub add sub add add add add or add add add add add repz add popa add push sub add sub add add xor add push add xor add add sub and pop lea add add sbb sbb sub je add add add fsubrl popa add push sub or loope sub add loopne sub sub add sub adc add inc add add add sub sub sub sub sub jne add add and and or and and outsl push add push sub sub add (bad) imul or fmuls sub push sub or fiaddl sub pop sub outsl insb add or aad add add or add and popa add push sub add sub add add and add or add add xor add add sub and adc sbb sub xor sub sub push sbb add push sbb add add or lcall add les popa add push sub or leave push sub add enter add enter add adc add inc add add add sub sub sub sub sub jne add add and and or and and outsl push add push sub sub add (bad) imul or fmuls sub push sub or fiaddl sub pop sub outsl insb add or aad sub sub jge add add add cmc add hlt add add xor add add add add cmp add add add add loope add cmp mov add cmp add add pop cmp xchg add jnp add add cmp cmp xchg add add add add add add jge add add jnp add add push add or add sub add jae add or jnp add add js add sub add sub push push sub add add mov add push jae add push cmp (bad) decl cmp (bad) incl cmp (bad) incl cmp incl cmp (bad) ljmp add or jbe (bad) incl cmp (bad) incl cmp decl add adcl outsl mov add sub add outsl out add push fisubr add jnp add add rorl add push outsl imul and popa add push sub add add add out add push sub cmp (bad) (bad) incl add adc add add add rolb push adc add sbb pop add add adc inc jnp add add cmp or inc jnp add add adc sub jnp add add sub sub add add add add push add push add push outsl out add push fiadd sub sub mov sub outsl outsb add or enter movb lds push add add popa add push pop outsl mov add sub add outsl out add push fiadd sub add add add add addr16 adc add cmp sub add or add add add add mov push subb popa add push sub add add xor add add add add jle add add dec jg add add adc jg add add dec add add sbb add add mov add sbb pop xorb (bad) sbb data16 or fsubrl jb add sub sub fsubl fiadd jle add add add add adc add add add push add add add sbb add cmp add push add adc add adc sbb add adc add add or add sub push sub movaps add push sub or hlt es or add add pop sub add add add add xor add sbb add das add add add adc sub pop pop sub push and push incb sub sub push add push sub or icebp sbb push or add add push sub add adc add add add and or add add or add add incb sub adc add sub add sub jnp add add sub add push sub push sub add or add add add jnp add add outsl outsl add or add or add add add add cmc outsl jo add sub add add add sub add stc outsl fadds add sub add add xor add add and add push sub sub adc and pop sbb sub pop sub sub xor sub pop sub sub sub add fldcw add push sub push sub or fild sub add jecxz roll add sub sub sub add cli outsl lret push sub push sub or sub add push sub sub add push sub add add add add add sub add sahf add or add add xchg xor ja popa push out mov les (bad) hlt push xor xchg fs xor fdivrl jmp rclb mov sub mov sbb dec jno repz test ficompl jmp (bad) mov hlt movl imul std in leave mov add insb push arpl psubd or outsb cmp imul addr16 add aam dec std test movsl cli test xor (bad) leave mov lods jecxz fdivs jne fild or shrl cmp ficom push xlat enter mov and mov cltd xchg mov mov or or and or adc stos sbb data16 inc fdivl jno add aad mov mov movsl in lahf xor mov js stc add mov push loope or insl or pop arpl hlt push imul insb sbb xor dec add in xchg push insb jnp add (bad) hlt or (bad) fnstenv adc mov mov bound ficoml gs aam pop popa mov into push mov je mov aam movsl fisttp xchg fdivrs sti hlt (bad) shrl imul mov sarb add in add pop dec or cmp add daa adc or and test or mov popa into push stc ficomp leave fldcw and xlat (bad) pop cmp mov cmp lods insb mov in mov mov add inc aad scas ja popf adc push fdivl or test fs ds or or push in decl xchg daa scas add mov pop jge xchg (bad) shlb add inc push imul xorb sbb push imul aam loopne rorl int3 dec frstor fistpll mov mov aad mov call xchg shll push repnz addr16 cmpsb fldl mov dec ss fisubrl or scas (bad) dec add pusha jp inc ret out pusha fist addr16 mov jns imul andl shrb ss push xchg ja int3 add mov das es lds or sub mov cmpsl call ret (bad) mov sahf fldcw ret es pushf mov insl add ss jmp addr16 jb push add adc mov jnp sbb xchg or out fdivrl fisttpl aam roll clc mov push int mov mul ja outsl ja mov out or lret pop or adc sahf gs scas (bad) clc sar imul insb push js or push addl mov cmp cmpsl notl pusha rorb imul push scas fcompl fldenv fild cmp aaa push scas mov fidivr mov jmp repnz lret mov cmpsb mov sarb sub push mov jp mov dec popa les sbb xchg sub aaa mov or sbb add sub adc add adc add add add or add pop add add add add add add add add add add add or add add add or add add add add add add add add or add push push add add punpcklwd bound arpl add data16 push add insb add outsb add jo jno jb jae je jne jbe ja js jns jp inc add inc add add inc add dec add dec add add dec add push add push add add push add pop add xor xor xor xor xor xor add add add add add add add add add add add add add add add adc add add add add add sbb add addb add add add add popl nop add add xchg add add add sar (bad) es fsubs dec push mov mov push inc divl aam test (bad) leave add into test lret and out in vcvtpd2psx mov out outsb adc pop add mov jbe push adc pusha aaa out ret iret push addr16 mov push cli xchg inc xor test iret cmpsl adc cmp repnz push fwait inc push dec inc add add add add or add jbe xor xor add add add add add and add sub add je imul add dec add test add and add add add add inc push dec inc add add add add and outsl bound add add add add add push jmp add cli add add add add add cltd add add add int3 add add add sbb add add add or add add add add add pop add add add add add add add add add add add add add pop add add add add add add add add add sub add add add add add add add add add add inc add add jns or mov add add add add add or test test add test add adc lods add add add add add add insb add add add cmpsb add add add add add add add add add add add arpl push push or test push push or loope push add add push push add add pop pop or jno test pop xchg add add pop test or or add or or add push push or cmp dec or add add xchg push add add or or or add or or or or add add ret add add mov or hlt or or add or sbb and cmp push or pop or imul or test mov push add or in or pop push mov or adc add push mov sbb dec push aaa push push add dec or add add test subps push add ja push add add emms or arpl arpl arpl test adc or mov add adc push add add adc push add adc or imul lcall adc adc add adc adc adc adc or lcall adc adc or fistl out push add adc or daa adc adc add add add add adc adc add add adc add arpl mov or pop adc add test adc adc add add adc inc adc adcb adc mov test adc or arpl arpl arpl pop pop or lret add add push test push test push test push test pop mov or out push push or stc pop push push or mov push push or fistpl test sbb add add add add add add add add add sbb adc add sbb adc add sbb adc add sbb sbb sbb or mov dec or add sbb or out sbb add sbb push add sbb add insb add add test sbb add add sbb push adc dec sbb add add xchg add add xchg add add add sbb add add add add add add add add add add add add add add add sbb or add add add adc mov sbb or add add add add add add add add add push add add add add add add add add add add add add add add add add add add movb add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add sbb sub add add add add add add add add add add add add add add add add add add add add add add add add add add sbb add add add leave add add add add jae or add add add jae or add add add jae or add add add add add add add add arpl add adc popl jg and xor add add add add add add add add add add add add add jge add add add add add add add add add add add add add add add add add add fwait add add add add add add fwait add add add add add add fwait add add add add add add add add add add add add add add add add add add add add add add add add add add add add add lods add add add add add add adc call add add add add add add add add add add add add add add add add add add roll sbb nop add add add add add add add add add add add add add add add add add add add add add add add add add and add add add add add add roll or add add add roll sbb test out add add add add add add add add add add add add add add add add add add add add add add add add add add add add adc cli add add add add add add add add add add add add add add add add add add add add add add add add add add add add add int pop add add add das add add add xor dec add add add sbb xor dec add add add sub adc dec add add add aaa add add cmp push add add add add add add inc add add add push add inc add add add push add inc add add dec add add add add sbb dec add adc dec add add inc add add add add sbb inc add add inc add add push add add cmp push add add add adc dec add push dec add add dec add push sbbb push add sbb push add outsb add push adcb add mov push add pop add push sbbb add pop add push add xchg push add inc add add inc add add add push add inc add add add push add inc add adc mov adc dec add add xor sbb dec add add dec add add cwtl add add mov add add add dec add add cmp add dec add add add add add add dec add add mov add sbb mov add dec add add add dec add add add add add add add add xor sbb mov add push add mov add push add cmp push add add add add add add add add add mov add add add mov add add add add cmp add dec add add add add cmp add mov cmp add dec add add sbb dec add add cmp add pop add add add cmp add dec add add add add dec add add add add add add inc add add cmp adc dec add add add movl int3 add add dec add add roll add dec add add add fiaddl and dec add and dec add add add in push add mov add add add mov add add add dec add add add and sbb dec add add jmp add add add icebp add add cmc add add std add add pop add add or and dec add and dec add add add and and sbb sbb add dec add add dec add add dec add add add xor add add add add dec add add cmp add dec add add add push add dec add add cmp and dec add add add inc add add mov add add add inc add add jmp add add add add add add dec add add dec add add add add and dec add add and sbb dec add push dec add add dec add push sbbb dec add sbb dec add outsb add es add add add push add add cmp add add mov add adc dec add add dec add add add xor add add add dec add add add add sbb dec add add roll adc dec add add add cmp push add inc add add add push add inc add add inc add adc dec add add add add add push add add add push add push add add add add push add inc add add inc add add add push add inc add add add push add inc add add inc add add add add add add pop add add imul add jo push and add add sbb add add add add add push sbb add add add add add adc das add add add and add add or jge add or add add inc add (bad) add add add add pop add and add add pop add and add add sbb add add add and add add or add add add add add sbb add add add add add add add add add and add add add add add add and add add add add add add das add add push add mov xor add add add add add add add adc inc add add add push sbb add add add push add jns add cld cmp add add sbb add add add add add push sbb add add add add add push add add add add add adc dec add add add adc push add add add add add adc push add add add inc add add push add mov inc add add adc pop add add add add add roll add push sbb add add add push sbb add add add push or jne add cwtl dec add add push or jne add add add addb and add add dec add add push or add add add add xchg add add add add add sbb add add add add add add mov add add add mov jmp add add add add inc add add add add add sbb add add add add add add mov add add add mov adc add add add add inc add add add add add sbb add add add add add add mov add add add add add mov inc add add add add add mov add add add add sbb add add add add add add mov add add add mov add add add add add mov add add add add sbb add add add add add add mov add add add add add mov (bad) add add add add add mov add add add add sbb add add add add add add mov add add add add add mov popl add add add add inc add add add add add sbb add add add add add add mov add add add add add mov cmpsb add add add add add mov add add add add sbb add add add add add add mov add add add add add mov cmpsb add add add add add mov add add add add sbb add add add add add add mov add add add add add mov roll add add add mov add add add add sbb add add add add add add mov add add add add add mov (bad) add add add add add mov add add add add sbb add add add add add add mov add add add add add mov cld add add add mov add add add add sbb add add add add add add mov add add add mov (bad) add add add add inc add add add add add sbb add add add add mov add add add mov (bad) add add add mov add dec add add adc das add add add add sbb add add add add or orb add push add add nop push add add xchg or add rclb add xchg or add push add add xchg or xor adc add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add adc add add adc add add adc add add add add add add add add add add xchg sub add add xchg sub push add add xchg add add xchg sub add add add add xchg xor mov adc add add add add add add add add add add add add add add add add add add add add add add add add add add add add add addl adc add add add add add add add add add addl adc add add add add movsb add add xchg add add add add add add add add xchg add add add add add add add addl adc add add add add addl adc add add add add add add add xchg movsl push ja adc add add add add add add xchg sub add add add add xchg lods push popa add add add add add sbbl adc add add add add xchg sub add add mov xchg mov popa add add add add add mov xchg mov add mov xchg mov add add add sbbl add add add add add add add add add add add add add add add add add add add add add add add addl push movb add addl push jne adc add add add add add add add add add xchg and popa add add add add add add add add add add add add add add mov xchg sub add add add add add add add add add add add add add add add add add add add add mov sbbl add add add add add add add add push out add add ret add sbbl add add add ret add sbbl add add add ret add xchg add incl add add add add add xchg add pop or adc add add add add add xchg add pop sbb les add add add add add xchg add pop xor add add xchg add pop ds add add xchg add dec add add add xchg add pop pop add add add xchg add pop push add add add add add add add add add add add add add add add add add add add add add add adc add add add adc add add add adc add add add add add xchg or pop sub adc add add add add add addl adc add add push adc add add add add lret add add addl adc add add push adc add add add add into add add addl adc add add add add add add adc add add add add add add add add push adc add add add add add add xchg sub add add xchg jecxz push roll add add add add add add add add add add xchg and jb push add xchg and jns push add add add xchg sub add add add add xchg sbb add add add add add or add add or add add or roll add add push push add roll add add push push add add add xchg or add xchg or test add add xchg or add add push push add aam add add add in aam add add add pop addb add add add pop jns push add add add add pop ja push add add add push push add add add add add push sbb add add add add add add add add add add add add add out add add enter add stc add add add add add add add add add add add aad add add out add add or add add add add add add sub aad add add out add add sub scas pop add add aad add add flds add add scas pop add add icebp pop add add testb add cld pop add add add add pop inc add add add add add add add add add add add add add add add add add pop inc add add add add add pop pop add add add sub add add sub add add add add add add add add add add add add sub add add sub add add ss add or add add add dec add add or or add xchg roll sahf or mov add or rorb in mov or sub or sbb ret add xor roll or imul or add add add add push movb loopne movb repz movb or add (bad) or add shufps dec rdpmc add add push add add roll add fmull xor xchg loop xor (bad) psllq xor xchg lar stc add add add add add pcmpeqw sbb leave pcmpeqw inc add vmwrite inc add (bad) add add bndldx flds adc xchg or sub inc or add add add dec adc push add pusha or jnp gs add mov add add add sub or rcll lcall add add add adc add add add adc movswl xchg add fisttpl xchg add adc or add add add add or add add add add adc or add add adc mov sub add add add adc mov or dec or or or add or add add adc adc adc mov add mov adc adc adc adc roll adc or add jecxz popa add jmp adc out or add add add or sub add add add or add add adc add add adc leave add add adc leave add adc or add adc or add adc or add add add add add or add or arpl mov add add add add or add leave add add jne flds jns xchg or add add or sub add add add add adc or add jne pop add adc or add adc add adc or sbb pop add sahf adc or leave add add adc or jne popa add add adc or jne push add mov adc sub adc push adc pop adc gs jo addr16 pop add add mov adc mov jns cmp mov add pcmpeqw dec add adc into adc (bad) adc fist jmp add adc call sub add add add add add push push jne push add gs add gs add insl push popa add jne push add adc jns jne push add add add add push mov psubusw push add add add add add add add add add add add add add add push mov mov lods or sbb lods or mov push mov push roll or mov push leave add add push pop add add push and mov push roll pop cltd or add add pop test add pop mov pop popa add add add popa add add add add add add add add add add add add pop xor flds lds cmp mov int3 pop popa add cmpxchg out pop popa add add mov sbb or add add adc pcmpgtb daa sbb mov xor jnp loope cmp add inc push xchg add add add add add sbb adc pcmpeqb loope adc xchg pcmpeqb daa sbb sbb sbb sbb or mov roll sbb roll sbb sbb sbb adc xadd rcrl lds stc add sbb psubw negl pop add add add add add add sbb (bad) add add add add sbb sbb sbb je adc push add sbb adc pop add add add adc adc pop add sbb adc and dec sbb adc add add aaa adc add sbb sbb movsb add add add mov movsb sbb sbb movsb add adc lods add add adc add sbb sbb xor add adc sbb flds (bad) adc adc insb add sbb jl daa sbb cltd add sbb cltd add pcmpeqw inc add add add add add adc add sbb adc add sbb adc add adc add add add jge flds lds push adc add xchg leave add adc adc add popa add add popa add add add add add add mov add xchg pop mov sbb sbb sbb add add add adc sub sbb adc add push add add adc adc adc add add add add sbb adc mov add add add add stos sbb or mov add sbb sbb sbb or cld sbb test add adc adc mov add add sbb add add sbb add push popa add sbb add sub sbb add add sbb add mov add sbb add add add sbb adc add add add add sbb add add add sbb add add pop add add add add add add add add add mov js or mov jge or nop add add add mov pop add add sub mov add add push add add push cs or push add adc add add pop inc add cmp add pop arpl push add add pop mov pop mov add add pop rolb add add add add add add add add jae add mov mov add add add pop add add add inc add add and pop add or test add or or add sbb add and and add xor push add popl jb popa add add add add add add add add add add add add add add add add add add add add add jl add push add add add cmp inc or or jp sahf or or test or or or or or or or or or or dec or mov rorl loop in or add push push xor cmp inc push inc push pop push bound jp lcall push sbb and dec pcmpeqw xchg sahf lgs lret pavgw adcb adc test sahf adc adc adc adc adc push adc jge xchg adc adc add add add add add add add add sub or jbe cmp pop or or or or (bad) or decl pop prefetchw adc add adc adc pop adc clc adc inc add add add sbb sub add add sbb add add add add mov add add fcomp add data16 flds add add add add add add add (bad) adc add add add add add add add add add add add add add add add add add add add add add add add add add add add push add add movsb or add sub add add add or add add add or add sub add push or add add add add dec xor add orl add add add mov pop add add add icebp or add pop add add add and add movsl pop add add add pop or add pusha add add add xchg or add add add add int add add add or pop add add add add add or or add add add add add add add add add add push add add add add add add add add add add add add add push add add add add add add add add add add add sub sub add add add add add add add add add add xor aaa add add add add add add add add cmp cmp add dec add push add push add add adc or mov add add das add add mov cmp or add or add add or add add add add or add or add or add or add or add or add addl push addl adc jns imul add imul fs gs add add arpl jae data16 push imul jae arpl inc jo insb imul inc popa jae add arpl jae data16 push imul jae arpl inc jo insb imul push gs imul inc outsl insl jo je jb dec imul je push imul jae arpl inc gs arpl add add arpl insb imul arpl jns je insl add add add add add push add add add add test ret ret push popa insb jne push jns gs mov ret ret inc outsb jne add popl ret ret dec jne je arpl je gs gs je add xchg add xchg add xchg add xchg add xchg add xchg add cwtl add cltd add lcall add popf add mov dec jns gs imul fs js cs jns inc jo insb imul push gs imul add jae gs cs outsl outsb imul je outsl outsb add add push add lar adc add add add pop add sbb add je imul add ret add lcall add add add adc add insl outsl jb push je gs insl add jae gs cs dec add add add add add sbb add add jg add addl add add ret add pushf add ret add lcall add inc jbe outsb je jb jae pop add adc adc add add add push insl popa jb push je arpl jb insl add popa jb inc jae gs bound push insl popa jb inc js gs imul add gs popa insb imul push jns je insl cs jne je insl gs gs popa insb imul add (bad) add ret add xchg add push jo outsl popa fs gs jb dec outsl imul arpl push jns je insl cs bound push gs imul popa jo je jo insb imul je arpl add jae gs cs bound push gs imul outsl je arpl jae push gs jb imul imul add sahf add ret add add jae outsl jae bound add add add add push outsl ja jb fs jns je jb bound add popa jb inc jae gs bound inc je jb bound gs add push jae jb jbe insb jne pop pop add add add je outsl outsb popa jb pusha xor push jns je insl cs outsl insb insb arpl outsb jae inc outsb gs arpl dec push bound outsl js add jae gs cs gs inc js gs imul add jae gs cs insl insb add insb push jb je jb dec imul jbe outsb je popa outsb fs gs push jns add arpl imul je outsl outsb add jae gs cs arpl imul outsl fs inc add push arpl dec dec dec data16 je inc js gs imul imul push outsl jb arpl outsl jb adc push add adc adc sbb sbb add addb addl addl add add add xchg inc gs jb arpl fs jae add jb gs xor cs insb add mov ret inc imul add jae outsb arpl jae insb je inc jae outsb arpl insb insb bound imul outsb fs outsb jbe imul outsb jbe imul popa outsb fs add jae outsb fs outsl jne je inc gs gs je inc popa insb insb bound imul gs gs je inc jae outsb arpl popa je add gs je inc jae outsb arpl jae insb je insb jo bound inc jbe outsb je fs imul outsb fs dec imul je ret ret push add pop add or add add adc add add adc add jb jo outsl push jb outsb jae outsl jb add jae gs cs arpl imul je addr16 jo jns sbb add add add jg add addb ret add (bad) add ret add xchg add xchg add mov add mov add mov add mov add mov add lea add mov add popl add nop add ret add xchg add ret add xchg add ret add xchg add ret add cltd add ret add pushf add ret add sahf add ret add add add add add add add or add add lsl adc add add sbb add add sbb add add addb ret add addl ret add xchg add mov add mov add gs fs outsb outsw add jae gs cs gs arpl outsb add mov add mov add mov add lea add mov add popl add nop add ret add jae insl bound ret add xchg add ret add xchg add ret add xchg add ret add cltd add ret add sahf add add add add add add add (bad) add add adc adc inc gs bound arpl je add jb popa insb imul dec outsb outsw add jb popa insl imul gs add add sbb sbb sbb sbb add add add jg add addb addl ret add xchg ret add mov ret add mov push push inc js gs imul je jb jae push jns je insl cs push imul add push gs js gs imul je jb jae ret add mov ret add nop add ret add je gs gs push dec add outsb jae dec inc add je bound jno gs add bound jno gs add imul jae jb gs jb add insb outsl popa fs gs jb xor fs je add popa imul imul popa insl add imul fs jns jne bound add xchg add ret add xchg add inc gs gs imul gs gs xor cs insb insb add xchg add inc gs jns je insl dec gs imul jb xor fs insb add cwtl add inc gs jns je insl dec outsb outsw add cltd add ret add fwait add ret add popf add add inc gs jne je inc jno popa insb jae inc gs popa jae inc outsl fs je imul jo jae add outsb je insl gs outsl insl jo je bound imul bound add jae gs cs jne je insl gs outsl insl jo insb gs gs imul insl jo insb popa je outsl outsb push gs popa js je outsl outsb jae je jb bound add jae insl bound imul outsl outsb inc je jb bound add jne addr16 bound je jb bound add jae gs cs imul imul jne imul jae inc outsb gs je fs outsl fs je jb bound add jae gs cs outsl fs outsl insl cs outsl insl jo insb gs inc imul jae bound je jb bound add jae gs cs outsl insl jo outsb outsb je outsl fs add imul jae bound je je add insl jo insb gs outsb gs je fs je jb bound add bound jb imul imul imul push push je je arpl je imul push inc push push inc je jb bound add arpl imul arpl inc je jb bound add popa jo outsl arpl outsb je gs outsl fs je jb bound add insb inc insb gs outsb je je jb bound add jae gs cs insl insb cs gs popa insb imul add cwtl mov lea scas movsb call xchg jb jae jne arpl add fs js cs gs jne arpl jb,pn jae jne arpl add popa jb inc jae gs bound push insl popa jb inc js gs imul gs gs jne arpl arpl jb outsb je jo add popa jb inc jae gs bound push insl popa jb inc js gs imul gs gs jne arpl cs je jo,pn add popa jb inc jae gs bound push insl popa jb inc js gs imul gs gs jne arpl cs outsl jb jo add popa jb inc jae gs bound push insl popa jb inc js gs imul gs gs jne arpl cs outsl jb ss add popa jb inc jae gs bound push insl popa jb inc js gs imul gs gs jne arpl outsb gs outsl jb jo,pn add popa jb inc jae gs bound push insl popa jb inc js gs imul gs gs jne arpl outsl imul outsb add popa jb inc jae gs bound push insl popa jb inc js gs imul gs gs jne arpl ja,pn jb imul outsb add popa jb inc jae gs bound push insl popa jb inc js gs imul gs gs jne arpl jnp,pn outsl outsl jge jo add popa jb inc jae gs bound push insl popa jb inc js gs imul gs gs jne arpl cs jne je imul bound xor sub xor sub sub sub data16 bound cmp add outsb je insl gs gs jo jb add je bound arpl insb jne add outsl insb gs outsb add je xor inc arpl popa je jb inc jb popa je dec outsb jae popa outsb arpl push jb arpl jae inc gs jb arpl jae jae jns popa insl add je add jb outsb add je dec outsb addr16 add jb jns push je insb jae dec imul je push imul jae arpl inc outsl insl jo insb gs gs imul jo inc jb popa jns inc outsb arpl imul je insl cs gs add je inc gs jne je inc gs jns gs inc outsl outsb arpl add je jb arpl outsb add jbe jb outsb add arpl jns inc jb popa je inc imul jns inc imul jns outsb outsw add insb add je je jb bound gs inc imul bound gs push jns je insl cs imul inc outsl jb jae inc jo insb imul add je inc js arpl popa bound popa je add je push je jb dec outsb outsw add outsl arpl jae je jb dec outsb outsw add je inc imul jae je push gs popa outsb fs jb dec jne jo je jae je push gs popa outsb fs jb dec outsb jo je jae je push jae push push js arpl add je inc jb popa je dec outsl push imul gs push gs popa outsb fs jb inc jb outsl jb push je jb add je push je outsb fs jb dec outsb jo je push je gs insl push jb je jb jae je inc jne outsl inc insb jne push imul je addr16 dec gs imul je add gs add gs inc jb popa je dec bound arpl gs popa je inc imul dec popa je inc gs dec popa je push gs dec popa je inc popa insb insb add imul outsb jbe jb imul jo add imul je dec imul push push arpl je add gs jb jb push arpl jb jb push gs jb push arpl jb jb inc jb popa je push jb push arpl jb jb addr16 inc push inc dec dec add jae inc insb outsl jb je insl add insl jo je dec popa jae add insl insl gs imul imul pop dec gs jae je dec outsl fs jo gs outsl fs gs je inc arpl jo outsl jb inc outsl outsb jbe jb add outsl insl inc popa jae ss je imul outsb jae outsl jb inc imul arpl inc gs je imul outsb fs gs dec popa outsb popa gs xor je push gs imul imul gs add je jb je jb push push inc jo push imul add je push imul jns add outsl arpl jae imul jns add gs je jb add outsb arpl outsb popa je dec bound arpl outsl outsb imul outsl insl jo jb dec bound arpl jne insb add je js arpl imul insl bound push gs jne arpl popa outsb popa addr16 push jns je insl cs gs jne arpl add jo jns inc gs bound arpl gs gs outsl insl jo je jb addr16 inc imul insl add insb gs jns je insl push jb js add arpl jae data16 push imul jae arpl dec jns gs imul imul je jae inc outsb fs jo add add insb insb arpl gs jb arpl jae jns add je jne jb outsb je jb arpl jae push dec outsb je xor inc gs jns gs jb insl dec popa outsb fs add outsb je insl gs jns gs popa outsb fs add jb push jns je insl cs jne je insl gs outsb je jb jo gs imul je gs gs je inc outsl jb jne arpl outsb push outsl imul gs gs je add je je add outsl arpl jae outsl fs add outsl ja jb push je jb jae imul inc popa jae inc fs jae add outsb jne gs je jb push jns je insl cs outsl insb insb arpl outsb jae dec outsl jbe dec gs add je dec outsl fs gs push jb arpl jae outsl fs gs outsl insb insb arpl outsb add popa fs outsb insb jns outsl insb insb arpl outsb inc popa jae add je outsb jne gs je jb addr16 inc jne jb outsb je addr16 dec outsl fs gs popa insl add jb add jb popa je push imul outsl push dec outsb je xor dec jae jne insb dec jb insl jo jns inc imul je jb push outsl dec outsb je xor push outsl dec outsb je add data16 inc insb outsl arpl outsl jo add gs fs je jb add je dec jae popa arpl jb jne add je add je inc jne jb outsb je push add jb outsl push je jne je jb add gs inc insb outsl bound add insb outsl arpl insb outsl bound add je imul add outsb arpl outsl outsb imul arpl cmp cmp imul jae inc jb jo outsl push je gs insl add jb popa insl add jns je push je gs insl dec outsl fs popa add outsl jae add je push push inc cmp push gs imul pop dec popa push jb push imul imul je push imul arpl dec popa arpl outsb add imul jns inc gs popa insb jne add outsb push jne dec gs dec outsb je jb add add inc gs popa insb jne add pop inc jno popa insb imul popa outsb imul jae jne arpl je gs insl add gs je inc outsb arpl jo outsl jb inc inc push inc jb jo outsl push gs imul imul gs imul pop inc popa jns addr16 dec outsl jne add je dec imul gs push arpl add imul inc jb popa jns push jne je insl gs imul fs add je push outsl jae je outsl outsb add imul gs imul add outsb add je push outsl jae je outsl outsb add jb popa jns addr16 dec outsl ja addr16 pop gs jb addr16 dec outsl outsb je add je dec gs popa add je xor dec popa js push jb je inc jns add inc inc jb jo outsl push gs imul imul insl insl gs imul imul insl pop insl insb push je imul gs je dec gs inc outsb gs je dec push add je dec gs addr16 dec push add arpl jo add jns add jne push insb inc insb outsl arpl inc insb gs jb inc jb jo outsl addr16 jo imul je outsl outsb add je jb outsl arpl add insl jo jb inc js push add insl bound add popa jb push outsl push jo gs push dec outsb je xor push dec outsb je add jns add outsb je xor push dec outsb je je add dec outsb je xor inc outsb fs imul dec jae je je arpl push jb je inc je jb bound gs je imul pop inc imul add je dec popa jae insb gs outsb je jns add je insb gs outsb je jns add je dec jae jns data16 je dec jae outsl imul gs dec jae jb popa jns inc gs jb popa jns popa outsb imul gs jns add je dec jae jb insl imul je inc jne insb dec popa insl add jb outsb addr16 jne insb fs inc jo outsb add je dec jae popa insb jne push jns add je dec outsl fs add fs add je dec jae outsb jne add insl bound dec outsb outsw add je dec popa insl add data16 outsb arpl jno popa insb jae addr16 inc outsl jne je addr16 dec je insl add je inc jae gs bound addr16 dec popa outsb imul fs add je dec outsl fs gs gs imul gs dec gs fs je push outsl imul inc outsl outsb je imul inc gs popa insl add jae insl bound popa insl add pop dec outsb gs popa insb imul dec popa insl gs popa arpl dec popa jae dec outsb fs data16 bound jb outsb add jo popa arpl addr16 inc push inc jo inc outsl insl popa imul inc jne jb outsb je outsl insl popa imul jae gs bound jae push jb je push je jb inc outsl arpl outsb je dec gs jne add je inc outsl fs popa jae add je dec gs add jns outsl insb insb arpl outsb add jne gs je jb addr16 push gs imul je inc insb gs outsb je je imul pop dec push push gs imul jb je outsb addr16 jns je insl add je push insb popa je outsl jb add popa je outsl jb dec inc add je dec outsb outsb gs js gs imul gs add je inc popa je add imul jb add outsb je imul insb insb arpl outsb add outsb jne gs bound inc gs imul imul arpl outsb je push push inc cmp arpl imul push gs push jb je jb push jo imul jae outsl insl inc je jb bound gs addr16 push popa outsb imul gs outsb addr16 add je dec jae imul gs dec jae outsb imul gs inc popa jae push jns add je imul imul insb popa addr16 addr16 push je arpl jb arpl push jb insl add fs data16 popa arpl jb arpl addr16 inc jb insl gs outsl jne je inc gs jb insl add popa arpl jb insl add je dec dec data16 je push push inc bound je js gs imul push popa insb jne add je outsb je xor inc gs gs outsl add je outsl fs popa jae add imul imul gs dec je insl add fs popa jae add imul imul pusha xor push outsb push gs js gs imul je popa outsb fs gs push push inc js gs imul je popa outsb fs gs popa fs push outsb push gs js gs imul pop push push inc js gs imul push jns gs addr16 inc js gs imul pop inc js gs imul arpl gs dec jae gs imul add imul outsl jo jb jns push jb jo jb jns outsb outsw add je gs gs outsl add je outsl fs outsb outsw add je inc js je outsl fs outsl outsl insb gs outsb add bound imul je arpl add je push jb add je push imul dec je jo bound jno gs add jb imul je jae je inc js arpl xor outsb je outsb jne add je push gs imul je inc jo insb imul inc js gs imul jo bound imul je arpl add je push jb js add imul inc insb gs outsb je push jb je inc outsb fs insb gs outsb je add add add add add add xor add add aaa add xor xor popa add data16 add add add add add sub add add add add xor aaa add xor cmp add jge add popa add add add push add add add add add add add add add add ljmp sbbl (bad) ret add mov pop jg aad cmp mov pop push sbb mov push adc or push adc or push adc cmp push adc adc push adc add adc push or push adc add sbb push or push push add sbb add adc push push add add add add add add add add add add add add add add add add add add add push adc push sbb or adc adc push add push or adc cmpb push adc push add adc or push adc or push adc push adc sbb push adc and push adc push adc push sbb adc push adc adc dec or adc cmp push adc pop push adc or push adc xor push adc add push adc push adc pop add sbb push adc pop add adc sbb push adc cmpl add pop add add dec add adc add add add add or and add and or and push add add add add push pop add sbb add add push pop add add cmp or adc add add push add add push add sbb add add add push add add dec add add sbb sbb or adc adc pop and add or popa or add or or push push sbb add sbb adc inc adc cmp gs and add adc adc popa adc or push push sbb add sbb adc inc adc cmp and adc or or adc adc or add adc adc adc and or adc push and adc or adc pop and add or popa or add add and popa sbb add popa push and add sbb or popa push and or sbb adc or gs and or popa add or pop adc or or adc or add or or add popa sbb or gs and or or popa push and or adc or add popa or gs and add or add popa adc inc or gs and add adc pop and add adc and adc adc add add add and or gs and add or add mov add push add add add add or add adc add add sbb add sbb and or and add add sbb push or and add cmpb and add or add sbb add or and adc pop and add and add add xorb pop and add and add or and or and add inc or add sbb push and add orl adcl add adcl adc add sbb add and and add push and add sbb and add push push or add adc inc adc add push sbb and add cmp insl push and add cmp add adc and or xor and add pop add add push add jno add adc and sbb add inc push and add addl adc add push add push add hlt add add and add pop add and sbb and adc and adc and add cmp and popa sbb cmp gs and add popa add add add and add sub inc add pop pop and add adcl popa sbb adcl and add jne jns and or add add inc push add add inc sbb add add inc sbb or add adc sbb or add sbb sbb add add inc sbb sbb sbb add add inc sbb sbb sbb or or adc sbb sbb sbb or inc sbb sbb sbb sbb push add add inc sbb sbb sbb sbb sbb add add inc sbb adc adc push and add addl orl adc add je insl cs arpl imul imul cs arpl imul jae imul imul insl jae outsl jb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp add push outsb insl popa outsb popa addr16 outsl fs and and add jge and add addb add pop pop and add inc add push and add sub add push or add addb add push push push push and add andl sbb adc push adc cmpl or add add adc adc add and add dec push add mov add add push add push jb jo outsl outsb inc js gs imul ja add add or add add or add xor xor xor xor add add and ja jb and and popa jb inc jae gs bound ss xor xor xor add and add sbbb add add pop add or push gs jo popa je pop cmp xor xor xor add and add subb add add or add add add add add imul je push imul jne imul outsl jb cs gs imul imul gs imul insb gs imul popa je jb xor xor xor xor add add push push add popa insl adc imul arpl outsl popa jo push or insl gs popa arpl push das das ja ja jae popa jb popa jae gs bound arpl das ja bound jb imul insb outsl popa fs gs jb dec outsl imul add dec popa insl gs gs jb imul imul push push or insl gs popa arpl push das das ja ja jae popa jb popa jae gs bound arpl das ja bound jb imul jo jb imul inc push das das ja ja jae popa jb popa jae gs bound arpl das ja bound jb imul insb outsl popa fs gs jb dec outsl imul gs gs push dec add sbb add add inc popa je push jns gs popa jae ss imul add je jo das das ja ja jae popa jb popa jae gs bound arpl das ja bound jb imul jo jb imul outsl popa fs gs jb xor add adc or adc or adc cmp adc adc pop add or or add sbb add add add add or add push push adc add adc add add add add pop add add add add sbb or add add add adc adc add in add push push pop or or add push push push push add push push add adc add push adc push sbb adc adc sbb push adc pop sbb adc sbb adc add add add pop push sbb adc add sbb adc sbb adc add add push add or sbb push adc push push adc push sbb sbb push sbb push or or sbb add or and or and add subl sbb add or add xorl adc add sbb add push push push add add push or add push adc pop or push push push adc or push and add addl fsts orl push push adc push pop add and sbb add sbb sbb add add add and add adc and sbb add push pop and add sbb add push push add add add push add orl adc sbb sbb adc add addb test add push add add je add adc add sbb or adc pop movlps addb push adc or inc adc dec adc add add add adc andl imul add sbb add add add push add add add jns and adc sbb xorl pop add or add add pop add add pusha add add fs add push insb add add jo add push push sbb add or pop add add or add or add sbb add add adc adc pop daa adc add add pop sbb adc adc je push adc xor add sbb or sbb or sbb adc add adc adc add dec adc add sbb push add sbb adc add add add add or pop add or add add adc or add orb add push sbb add add imul sbbl push sbb pop adc cltd or imul or and adcl xorl sbb add movsl add adc sbb sbb and adc add subl push pop and add add add and add add adc or or or or add add or push add add push push and adc add jno sbbl imul adc imul add add and cmpl add or add or mov pop and add subb or or or sbb sbb lods sbb or sbb add sbb add add add add add or push or or or add add add add or pop or or or sbb or push pop add or add pop add or adc invd or or or or or sbb or or or or or or or or or or or or pop add or or pop or or or or add or push or or add add add add add add add add adc adc add sbb add sbb sbb xorl or add push add push add add add or add adc adc adc adc adc add and and or add add loopne push adc sbb adc adc push add cmp adc push adc or adc xor pop add add add sysret or or pop add or and adc add sub adc push push sbb pop adc push or sub adc inc add sbb and add add or or add jno and adc or add xor jno adc and add add and adc adc add add or stc add or push sysret or xor or adc push add add or pop pop add or add or std or add jno pop add jno add add dec adc add adc and adc adc adc pop adc push sbb and adc adc adc pop adc push sbb adc push adc (bad) add in add movsl add or movsl add or add inc or add adc pop adc adc and adc sbb add push add add sbbl jno jno push push adc add inc adc inc adc adc or sbb or push adc adc adc dec adc or addl (bad) add addl (bad) add in adc inc adc adc adc xorl inc sbb adc inc or addl sbb sbb add adc push push and adc add xor sbb adc push add adc push adc or or sbb addl sbb or adc adc adc (bad) sub insl adc adc sbb sbb adc add add add or pop add or addl xor push add push push sbb adc or adc adc add add pop add addl addl addl push or add push adc push pop and add sbb pop add push push and sbb adc pop add adc (bad) cmp add sbb or add adc adc sbb or or adc adc adc sbb add add adc add (bad) dec push add sbb pop add pop or add pop sbb pop add inc adc pop add orl (bad) dec push add push push and sbb sbb adc pop adc add sub addl sbb adc add add push pop and sbb add pop or add addb add subl add subl adc add add add xchg add add add add and add inc xor add add add add fxch jne jp out es mov (bad) adc cmp sub sar and push cmp ljmp adc cmpsl out sarl repnz mov rolb imul ret addr16 mov mov (bad) mov in dec testl or cmp cmp mov add sub xchg and sahf call sub add lret add add xchg add add jae gs cs gs jne arpl cs gs jne arpl gs fs and arpl insb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push jns je insl cs gs jne arpl cs jne je insl gs gs jne arpl gs add add add add add add inc push inc inc push cltd jecxz lcall add or dec mov lea inc push add add and sub add idivl scas mov lock std cld cli sti std sti ljmp in mov in in mov in mov mov mov lcall std cld cli jnp sti ljmp in lret push in lds int xchg rcr mov rcl (bad) shl popf mov repz test loopne int3 int mov in (bad) test sahf lods scas scas mov mov mov (bad) cwtl pushf aas ficoml ljmp jecxz loope ljmp int scas mov pop fwait mov (bad) cli sti std mov in mov in mov in in mov in mov mov mov cltd mov cld cli stc std sti ljmp in mov in cld mov cld mov mov mov lcall sbb cli lods std sti ljmp in mov in in mov in mov mov mov cwtl mov std cld cli sti std sti ljmp in mov in in mov in mov mov mov lcall std cld cli sti std sti ljmp in mov in in mov in mov mov scas scas call lock mov ljmp in mov and mov mov mov lcall (bad) cltd xchg xchg sahf sti ljmp out mov out in mov es mov mov lcall (bad) (bad) cwtl std sti ljmp out mov mov mov and scas mov lock std cld cli sti std sti ljmp in mov in mov repnz scas scas mov es std cld cli xor dec ljmp in in mov in mov mov mov lcall std cld cli sti std sti ljmp in mov fucomp mov lods scas mov cmp cmpsb mov cld cli icebp jecxz loopne (bad) cld jge loopne mov push ljmp mov popa test psrad enter jnp dec ljmp jl and in mov mov mov xchg mov sbbl mov sti ljmp aad ljmp ret mov sahf test mov xchg cli sti idivl in mov (bad) or in mov (bad) ds in mov xchg jns lods mov lock std cld cli stc std sti sti xchg mov in lea (bad) mov fmull scas mov repnz not cli call mov in (bad) ljmp out xorl mov mov mov stc cld cli call shr (bad) mov in in mov in mov les jecxz cmp mov std cld cli sti std sti ljmp (bad) in out int3 (bad) jle test mov lcall jno cli sti out clc les rorb in mov xchg lods shr mov rclb sahf std cld cli stc in (bad) jmp ret ljmp stc fmull scas test mov (bad) mov cld shr (bad) repnz lret jmp ljmp out (bad) jnp mov mov lcall (bad) out loopne (bad) int3 xchg mov in (bad) ftst mov int3 (bad) js mov pushf (bad) mov repz mov sti std std cltd test ljmp in in lea xchg mov test hlt cli sti out clc jecxz adc sub in mov aad cli mov mov xchg mov out mov into ljmp int xchg ret cli mov mov lcall xchg inc mov (bad) mov mov jmp mov mov mov nop pushf jecxz fwait pushf xchg aad cli sti (bad) loopne ljmp add cltd or xchg test xchg rolb cli sti imul adc lahf adc lahf adc mov adc scas fidivrl lea mov mov mov hlt xchg mov sti loopne (bad) ljmp in in and adcl mov lahf dec xchg std cld loope mov mov mov shr cli mov mov lcall std test mov sti (bad) in mov in lcall mov in mov mov pushf pop mov lock (bad) ljmp ja in ljmp int3 insl cmp mov mov mov lahf mov pushf cmp cli lock sti sti out xchg hlt rcrl jecxz ret cli mov std scas mov sbb mov (bad) int cli hlt std sti ljmp cli movsb in lret (bad) fucomp in adc xchg mov mov mov clc cld cli stc aad ljmp out mov in in mov in mov mov pushf mov xor mov popf int cli hlt std sti ljmp cli movsb in lret (bad) enter rcrb cmpsl mov xchg jmp jmp movsb in mov lds fcoml mov cltd mov std cld jmp out (bad) jmp ret ljmp stc fmull scas lods mov lcall not cli call mov in xchg in cwtl call lret mov xchg push mov scas sbbl stc loope (bad) out data16 ljmp rcrl (bad) mov lods mov adc fwait pushf (bad) int cli (bad) sti ljmp lock dec decb mov xchg test mov fcmovnbe push call mov in xchg in cwtl in xchg or in lea mov lock std cld cli ror hlt ljmp (bad) mov jmp mov mov mov xchg mov push fwait pushf lcall out mov mov shr cli test mov lcall jmp xlat in fildl sbb in cmp repz mov mulb mulb stos cld cli icebp aad jmp (bad) sahf out ljmp int lods stos xorl in mov std cli std sar std out call xchg ljmp cli cmc lods scas scas mov mov icebp mov iret cld cli cli in fmul mov jbe loopne mov hlt shll mov movsb std (bad) lcall sti jl sti std inc mov in mov (bad) out es das cmp jo cwtl rcrb std cld jmp movsl sti ljmp mov ljmp clc xor mov xchg cmp xlat sbb (bad) sbb out pop loope add xorb mov in clc mov lods scas mov mov adc mov clc repnz jo test int ljmp mov cmpsb xchg mov popf xchg cld (bad) xor sti ljmp shr in out mov lods scas stos test lods mov clc out mov cld cli (bad) in call cwtl out (bad) in ljmp in scas mov cli lea test xlat sub aad ljmp in mov lds dec mov loop test jae fs cwtl ljmp jmp cmp mov mov xchg cld mov mov cld (bad) xchg popf sti ljmp in mov insl in ljmp xchg mov cltd mov cld sti shll pop in mov cld mov rorb movsb stos movsb fistl xorl test mov ljmp in cmp cwtl std sarl or dec xchg movsb jl pushf cwtl aad cli sti sti rorl mov out mov in adc jbe inc jae mov xor out sbbl sti std icebp cld fist jmp mov call scas scas cmpsb xchg and xor mov lcall ljmp jmp lret (bad) sub mov jae stos setp sahf sti aam sti std icebp xor mov in mov in in mov lods scas scas sarb lcall std cld cli or mov in cs mov in in mov in mov mov mov lcall std cld cli mov mov in mov in in cwtl cltd mov mov xor ret xchg mov lock pop std sti ljmp sbb movsl ljmp xor (bad) adc lea cli in mov lock mov pushf mov in mov mov test or sbbl mov mov popf test (bad) in mov in std mov mov lcall std cld (bad) rcrl (bad) in mov xchg mov in call cli mov cmpsb rol mov mov idiv sti stc cld icebp mov in std (bad) aam jbe adc (bad) mov mov sahf movsb mov (bad) (bad) (bad) sub les in pop pop mov jmp out in mov test mov nop test stc cmc rcl cld sti in decb movsb or loop out adc rol mov mov jno sti std cli ret ljmp std in mov in addr16 xchg mov mov mov std cld jmp mov std cli sahf addr16 mov in mull and cmpsb stos inc lcall std cld cli test (bad) std sti sahf cld pusha sti ljmp cld nop lods scas scas mov lock loope (bad) cld fcmovnbe stos in mov (bad) scas rcrl jmp in mov mov mov mov lea shr int3 lret out ljmp ljmp scas movsb xchg dec mov or cld jmp ljmp pop cmp int jmp loope (bad) out int3 jl lea cwtl nop sbb in mov cli lcall loope cmp lods repnz lock lock in cltd sub call in cld (bad) hlt mov ljmp mov mov test mov cld icebp ljmp out ljmp faddl scas mov fcomp mov (bad) (bad) xlat xchg in mov (bad) jno in mov fucomp mov in mov scas lods scas mov xchg lcall std cld cli out std sti sti xchg mov in (bad) shr stc fucomp mov in mov lods lods scas mov xchg lcall std cld cli sti std sti ljmp (bad) in out int3 (bad) jle mov mov lcall idiv stc in icebp int3 lret repnz loopne scas rclb or mov push mov mov std cld cli stc ljmp mov jmp scas rcrl clc lods mov mov xchg lcall cli icebp xlat ffree add out (bad) in mov in mov mov pushf fdivrs mov (bad) clc out (bad) clc lret in mov out pushf lock test mov rclb sahf std cld cli stc in (bad) out xchg cmc mov jmp scas rcrl clc mov sarl mov push cli clc int ljmp in mov clc repnz loopne repnz lods stos (bad) cmpsb xchg mov mov xchg cli sti stc clc std stc movsb loope lea (bad) scas roll rorl scas scas mov lock loope xlat icebp fildl rorl (bad) mov stc movsb call mov fstl pushf xchg xlat fcmovbe pop fcmovnbe push out mov in mov in in mov sti xchg xlat mov aad mov fistpl sahf mov shr fldl jmp scas test scas rcll test mov mov loop icebp fildl rorl (bad) mov cmc movsb call mov fstl pushf xchg xlat fcmovbe pop fcmovnbe push out mov in mov in in mov lock xlat mov aad mov fistpl sahf test shr fldl jmp scas out (bad) orl inc mov rclb sahf std cld cli stc out (bad) out xchg (bad) mov jmp scas rcrl clc mov sarl mov push cli clc int ljmp in mov cli mulb lods stos (bad) cmpsb xchg mov mov xchg cli sti stc xchg fwait in mov (bad) scas rcrl jmp in mov mov xchg loop cmp mov xlat and adc ljmp in in mov in mov (bad) out scas scas movsb aad mov (bad) mov pushf lods std cld cli sti std sti ljmp cmc xchg (bad) out out in mov xchg mov lods xchg lcall fistl test ljmp (bad) in mov fmull scas stos mov lcall cli ficoml (bad) scas rcrl xchg scas mov jmp (bad) shrb mov lcall out cli (bad) fnsave cmp ret ljmp lret sub mov xor mov lcall lahf in mov shrl xchg mov in (bad) stc aad scas scas stos xchg mov mov in call (bad) clc fcmovnbe jmp (bad) cld (bad) mov xchg lahf cli mov mov lcall std cld cli sti std sti ljmp lds ljmp cli mov mov sahf mov sbbl loop inc ljmp in mov jmp pop sti in mov xchg jmp scas stos sbb mov negl jecxz hlt ljmp out in test int3 testl (bad) in test mov negb ljmp iret ljmp cld in mov xchg jmp scas stos sbb mov negl loope jmp stos mov out in insl icebp mov call push push pop cmp sub int cli stos std sti ljmp cmc cli pushf in in xor cwtl fdivrl aaa andl xchg (bad) adc sar std fs jecxz jmp ret ljmp repnz mov lock (bad) push rclb test ljmp mov mov mov mov lcall mul xlat aam repz mov mov mov test test mov pushf sahf stc cmc xchg (bad) std sti loopne (bad) xor test and in (bad) shll loop mov fdivr mov in cli in sti ljmp in xchg (bad) cli ljmp mov and mov sti xchg xchg sti loopne mov out (bad) rcrl shr cmc ljmp test cli xchg (bad) cld cld cld loop in int3 in xchg in mov jmp cld lds add xchg dec nop rcrb (bad) std cld jmp mov roll in add mov test mov mov lcall in sar loop lahf (bad) ljmp in mov mov scas scas cmpsb mov cmc icebp mov aam sti std icebp cld adc loope add cli jecxz out lahf sarb mov lcall int cli into std sti ljmp xchg ljmp fldenv jmp fwait int3 sahf (bad) aam cli std std repz mov ljmp dec lods scas scas mov cmpsb mov xchg sbbl (bad) std sti loopne movsb (bad) lret (bad) or in out mov jecxz int scas movsl leave mov (bad) rcrl std std out out (bad) jmp ljmp and xchg movsl aad mov aad adc cli sti notl ljmp in and andb mov xchg popf mov int cli sar sti ljmp cmc cli pushf in in xor xchg fdivrl test push cmp jecxz sahf idiv xchg (bad) std sti loopne add mov in stos in in mov in mov mov mov mov mov cld lock call ljmp out lahf enter shr lods scas movsl mov (bad) scas mov (bad) sti stc rcrb out mov in mov in in mov out repnz aas mov mov fcmovbe xchg sti ljmp in cmc in in mov in mov mov mov lcall jmp xlat clc fcmovnu rclb adc mov in mov mov scas mov test loope mov or clc int ljmp in mov out repnz out scas clc rorl mov mov pushf xchg cli sti stc in call lea lret fmull scas stos mov andl std clc rcr (bad) or out mov in mov in in mov notb mov jp lea sar cld cld shr ffree sbb lret out in in pop out scas rorl scas mov lock xchg cli sti stc xlat jmp mov cli movsl cld lret scas call call scas scas movsb aad mov icebp cmpsb fwait pushf lcall ljmp in mov xchg leave mov call mov xchg xchg cli icebp fcmovnbe xchg leave mov call icebp fucomp mov scas mov xor mov clc mov xlat hlt (bad) ret ljmp out mov (bad) data16 rorl cmpsb movsl divl mov cli (bad) xchg scas std sti in xor in xorl insb mov cld mov mov test mov std cld cli sti std sti ljmp out mov shl int3 out cli jno lods movsb mov mov xchg xchg cli call or idivl in mov in in cwtl call test movsb mov lock incl jmp add mov out out mov mov mov mov div rolb cld ret ljmp std in mov in pushf cli xchg out scas test mov sahf mov sbbl stc xchg ljmp jmp arpl in add adc scas aad mov jl mov aam cli (bad) (bad) xchg addr16 mov call loopne mov clc fs lods aam mov mov mov cld lock mov call ljmp lock test sub loope mov xchg sti std (bad) jmp pop out jmp in mov in pushf cli jmp scas test mov cltd mov sbbl stc xchg ljmp ljmp out (bad) rorl aad mov jl mov shr fdivr xchg ljmp in or out add push std mov mov cmpsb scas in rep sbbl sar sti out out out in mov (bad) fucomi std in mov in pushf cli popf xchg scas test mov cltd mov std cld jmp xchg ljmp ljmp out (bad) rorl aad mov jl mov and lock cld ret ljmp std in mov in pushf cli scas xchg mov or cld jmp xchg ljmp in arpl in add test dec fidivr scas mov (bad) cwtl rep sbbl icebp loopne in lret loopne push out adc decb mov test mov lock std imul (bad) out inc jns ljmp lds ljmp scas stos test mov lock std cld lock and jecxz add in xorl mov call (bad) scas test mov cwtl mov std cld jmp xchg ljmp out (bad) jecxz mov ret mov fldt (bad) mov pushf (bad) std cld cli sti std sti ljmp rorb in (bad) roll scas scas mov icebp lcall add (bad) sti std std cltd jno ljmp lds ljmp scas cmpsb leave add mov cld lock add dec in mov lahf sub in addl sub (bad) nop pushf sar xor sahf mov std cld lock xlat int3 lahf add in subl ljmp rcrb shll mov sahf stc xlat xor sti ljmp in (bad) shll out in (bad) ror lods scas test test out mov cli rclb jecxz in pop mov ljmp test test in mov cli rolb repnz jmp jmp in (bad) rcr lods scas test xchg nop mov mov cld cli std aad ljmp jmp pusha in in pop in mov mov mov lcall out mov cmpl (bad) dec in mov sahf push mov ljmp jecxz mov sub sub cld cld xchg xchg cli ljmp stc ja dec in mov lahf inc sti mov mov lcall std cli mov cld sti in and in (bad) xchg scas mov jmp mov mov mov pushf mov lcall ljmp in cwtl ret mov cli mov mov les adc cld cli std out jl mov lret in mov lds ljmp fnstsw mov pushf sahf sti aam sti std icebp ret ljmp lds out test mov lcall stc aam sti std icebp test ljmp notb mov mov mov mov pushf (bad) sahf and sahf std clc jp std sti out decb jmp (bad) shrb test pop and lock jge cli sti stc ret mov jbe in xchg fucompp mov in mov lcall mov mov cld (bad) xchg outsl sti ljmp xlat (bad) rcll mov jg cli mov addl out mov mov push ljmp mov and in adc lods scas test push loop mov mov and jmp mov mul mov mov xor sub mov mov fisub mov cld cld cli sar sti sti xchg hlt ljmp repz in (bad) rclb lods scas movsl mov fdivs mov not or std ret ljmp (bad) ljmp mov test xchg mov (bad) hlt in repnz aad ljmp in mov cld call sti lret in scas mov cli mov (bad) cmc in repz leave cmp out movsl ljmp lock mov adc std mov sahf stc out call dec sti ljmp rolb mov aad scas scas stos test mov lock testl icebp sub in xorl out in in cmp mov sbb mov lcall jmp in add push (bad) out cld hlt mov mov mov jle aad les sti (bad) (bad) hlt les in pop pop mov jmp call mov xchg mov mov inc fwait xchg sahf std cld cli stc std xor loop ljmp or mov cld lods scas scas mov lock cmp (bad) fstpl adc in in xor mov xchg scas movsb test cli xchg mov (bad) call mov sbb mov in scas mov mov rcrb call ljmp mov mov mov nop push lods cmpsb mov sahf std imul (bad) in dec loopne cmp mov lds ljmp jno nop mov mov cld fidivrl mov in mov in in cwtl xchg xchg mov mov movsb mov lock mov mov neg std aad ljmp out sbb ljmp addb xor movsl test test cli sti cld mov in mov hlt movsb std lret not in in (bad) loop xor mov xchg stos stos test xchg mov xchg jge cli sti stc repnz jbe loopne mov insl mov fucomp mov xchg int scas cmpsb cmp addl cli out inc pop sti ljmp in mov (bad) jmp xor scas scas (bad) repnz mov clc in mov mov popf mov repz mov decb cmp or mov in (bad) loop popa sahf out ljmp (bad) jmp cli mov mov lcall out stc and jmp out mov ljmp scas movsb aad mov repnz fwait pushf lcall out xorl in cmp fwait loop repnz call scas scas movsb xchg sbb movsb std mov sahf stc out incl cwtl out xorl xchg movsl ljmp scas mov dec lcall out clc jmp in cld aam jbe adc enter in cmp cwtl cld lcall mov mov cld lock xchg ljmp in in mov lods scas scas cmpb mov std cld cli sar sti sti xchg hlt ljmp repz in (bad) rclb lods scas movsl mov pause mov sahf imul (bad) in repz aam ljmp (bad) mov ljmp stos iret loope mov cmpsl arpl cmpsb sahf std clc xchg movsl std sti loopne movsl jmp mov pop decb mov mov mov mov lea std sti jmp shr in and repnz in lea mov mov mov test mov rcrb sti ljmp decl shll mov stos push mov mov mov cld cli icebp aad jmp (bad) loope mov push mov out test mov mov test mov cld cli std aad ljmp vpor in mov in iret cli rcrl mov xor mov push fwait mov loopne clc ljmp in cwtl lret pop hlt les mov mov lcall loopne cld ffree xchg ljmp out mov cld rcl test xchg mov movsb mov lcall sti ljmp in ljmp jmp lods stos cmpsl mov mov xor lcall sub decb jmp (bad) clc in repnz xchg mov andl call dec std sti loopne add fwait jmp in xchg test rolb cmp lcall in cld cli stc std hlt ljmp in mov fucomp mov lods scas scas fdivrp mov mov sahf std cld fmull xchg rorb in scas cltd mov mov hlt mov mov inc movsl add sbbl std jge ljmp in mov sahf les mov mov lcall sti jl sti std inc test int3 pop hlt lds mov ljmp call mov mov stc call ljmp (bad) shr ljmp inc lods scas mov mul into mov cld cld sarl ljmp adc shr in (bad) sarb xchg scas mov pcmpgtw jl cld cli sti std sti ljmp push test repz in popl repnz mov clc ficoml sub les in (bad) xchg xchg mov jmp mov fiadd fldt sahf std cli test test mov ljmp fcmove mov mov mov mov std xchg mov mov in (bad) lret cmp les in popl loop mov mov loop add sti in xchg imul in lea xchg mov in (bad) fiaddl inc mov mov cli test std sti out int3 push enter adc ljmp scas iret loop mov (bad) mov pushf (bad) std cld cli sti std sti ljmp adc aam testl stos pop lcall addl in mov les ljmp cmc lret mov mov lcall stc (bad) jp std sti out (bad) xor jmp mov call lods scas and mov cltd incl pushf xchg ljmp rorl imul in call lock scas jo faddp mov stos pop popf mov sahf std cli sarb std sti loopne movsb loop lahf hlt rorb sbb xor xor mov icebp cmp cli icebp cmc in mov and push hlt enter in xor lea lea mov lock mov mov cld cli icebp and shr ljmp mov xchg lods in mov test mov lcall jmp repz ret mov (bad) mov (bad) jl sahf sub imul rorl lcall std (bad) (bad) in incl out in mov loopne inc ljmp test repnz cmpl in mov std (bad) sti jmp addl cmpsl mov xor (bad) popf test cli sti cld mov sar mov cwtl in in mov in cld lods cmc mov cmpsb xchg clc mov push std cld lock decl ja (bad) mov mov mov push (bad) lcall ljmp ljmp ds mov std adc lods scas test xor lahf cmpsb nop sahf movsb mov add adc cli mov fucomp mov lods scas mov xchg test xchg not or (bad) jno ljmp mulb cmc xor repnz test mov cld lock in jmp mov in fucomi in adcl stos fstl test xchg jne std icebp in hlt shl ljmp jmp cli mov adc mov mov lcall mov std sti jmp movsl ret std ja loopne in xchg hlt shrl movsb xchg ret mov nop movsl sbbl test insb mov in (bad) sarl mov insl sub mov icebp fs pushf sbbl popa test movsb mov in hlt cmc in in (bad) clc in mov lods cmc xor xchg mov lcall stc out sti stc sti jecxz jbe inc in mov nop test jmp (bad) jecxz aaa fisubl mov (bad) mov call fwait jmp (bad) xchg int ljmp clc in repnz lods stos test pop mov rolb add add (bad) mov in mov in in cwtl xchg and mov xor movsl pushf movsl xchg loop std cld lock xor ljmp (bad) addr16 xchg inc ljmp scas cmpsb scas mov mov cld lock cli shr out add mov out mov mov mov sahf fwait mov aam sti std std stc call ljmp loopne mov nop mov sti sub xchg jb (bad) xor ljmp in mov fucomp mov in mov mov mov scas pop push fwait pushf lahf aad cli sti imul test ljmp in in out in mov xchg jg scas stos mov mov mov call mov in mov in les in xor test mov lock sub cli icebp loopne fcmovne (bad) loop cltd test mov out pop ljmp (bad) jbe mov mov std idiv in pushl adcl add mov icebp fmull scas xchg mov fwait mov sub cli std (bad) cmc std cli movsl jmp leave ljmp fsubrs xchg mov lcall add sti stc in test mov out inc or fisttp aad mov xchg dec cs mov aad les cld cli call jmp int3 aam cmp ret ljmp rcr lods scas movsl jle mov mov cld fistpll mov in mov in in cwtl cld (bad) iret sti mov pushf mov ret insb xchg mov jmp pushf fildll hlt les in pop fisttp ljmp movsl mov sarb lock xchg mov not std jnp sti ljmp in mov lds mov out fiaddl scas scas clc mov test dec mov mov mov (bad) out stos in mov lds in out movsb les scas mov mov mov (bad) cli mov sti ljmp in mov shr xchg xchg mov mov mov lcall sti aam sti std icebp test mov out lret cmp les in (bad) xchg pop lods scas movsl mov mov mov cld cli std and iret (bad) (bad) xor xchg int3 ljmp inc lods scas test test sti mov sbb cli in sti ljmp in lods lods in in mov stos subl hlt mov movsb pop fwait pushf cwtl (bad) stc shrb sti in (bad) mov in mov in (bad) in in mov in mov xchg xchg scas scas cmpsb xchg mov mov xlat fcmovbe pop std sti ljmp rorb in (bad) shrb mov lcall (bad) fdivr sti std test mov xchg repnz cli mov mov test stc lds std sti shr rcrl shr ret cli mov xchg scas mov lock xchg mov std cld lock in or mov out (bad) roll test xchg push scas scas cmpsb xchg jl cmp pusha mov fiaddl test lds in ljmp inc xchg mov lcall les sti std cld lret cmp mov jmp popa ljmp scas movsb lcall mov cld lock int mov popa mov jmp sarl jmp mov pop lcall fnsave adc pusha ljmp ret cli mov sub mov lock fucomp (bad) std shll in rorb mov fmull scas mov mov lcall or in (bad) repz in add (bad) mov les mov lock movsb lea cld cli std mov ljmp out (bad) out lret (bad) jne mov mov lcall shl out add (bad) cltd push mov out add in xor mov xchg scas mov rcrb cmpsb std cld jmp adc ljmp lds in ljmp mov test test xchg mov mov aad ljmp in mov les mov nop mov mov std cld jmp cmp ljmp mov out js in and mov mov mov cld cli call mov in mov in cwtl lret pop hlt les mov push mov mov (bad) icebp (bad) rcrl (bad) shr rcrl jp in adc scas test stos mov lcall std cld cli sar sti repz ret ljmp ljmp movsl iret dec mov mov xlat stc icebp (bad) sti in les or lods iret lds xlat mov cltd jae stos setp sahf sti aam sti std icebp xor test or std in mov in scas cli mov scas mov mov cltd mov sbbl rorl sti ljmp int leave cmp mov xchg add mov cmpsl fs mov cmc aam sti std icebp (bad) lock xchg (bad) std lret les mov mov xchg mov mov cld cli icebp aad ljmp out lret (bad) sub mov jae stos setp sahf sti aam sti std icebp xor mov xchg mov in mov in leave mov mov (bad) lods scas scas mov lock cmp (bad) (bad) into cmp ret ljmp test add test xchg mov mov cld cli icebp in loope add movsl in out test pop and test mov xchg xchg hlt fdivrl fildll ljmp lds cli scas xchg mov scas leave fwait (bad) fdivr cld sti loopne clc ljmp in cwtl xchg nop in mov int3 pop fisubr xchg mov lcall (bad) not sti sti stc ret ljmp in in xor xchg fdivrl movsb mov lock mov mov cld cli icebp and loope outsl rol cli in mov in icebp mov lret cld lods scas scas mov lock loopne (bad) loope fildl enter jbe in pop add mov les stos mov movsl pushf mov jne fwait pushf (bad) int cli pop std sti ljmp in mov cmc rol ljmp es rorb lahf std cli cld (bad) mov ljmp jmp mov insb mov mov mov lcall sti xchg imul mov ljmp pop popf std rcll stos cmpsb mov test cli icebp (bad) hlt shr rorl roll loop adc mov xchg pop mov test idiv repnz sti jmp addl shr mov fmull loopne mov mov cld std cli icebp call jmp xchg (bad) imull out repz call mov cli mov mov not push lock bswap imul pusha (bad) mov out scas movsl ror mov lods pop popf mov sahf std cli rorb sti in les leave lods ret mov mull test mov mov popf cli sti mull (bad) mov in mov in in mov mov cld lods scas scas mov lock and cli icebp aad jmp xor mov lds ljmp cli mov movsl mov hlt fwait mov aad sti sti sti (bad) xor mov les ljmp stc fmull scas scas mov lcall fucomp fisubr jecxz adc mov popa push mov in mov xchg mov mov std cli xchg insb cld sti in movb mov in in mov in mov (bad) scas movsb xchg cmpsb mov mov std cli in hlt (bad) les ljmp sbb mov sar test mov lret lock jmp leave jecxz (bad) jmp pop jmp in (bad) ljmp scas cmpsb nop mov mov sbbl sar cli ljmp jecxz cmp les in (bad) clc stos test test cltd mov neg das fsubrs hlt les in (bad) in lds ljmp repnz dec scas scas stos test cmc orb imul call dec loope inc out imul out in in cmp mov stos test test lods movsb iret fwait pushf xchg out cli jmp fnsave iret cmp ret ljmp ret cli mov scas mov (bad) loopne mov cld fidivrl mov in mov shrd test mov lock sub sub aad ljmp in (bad) icebp (bad) imulb mov pushf mov sbbb mov icebp rorb decl (bad) sub out adc test mov mov mov lahf cltd mov aam sti std std ret ljmp xor lahf shr fistpll mov lcall int cli cmp ljmp enter adc out scas movsl mov mov xchg stos fs sahf sti sti shrb sti in repnz lock or stc lret mov mov mov cli xchg mov (bad) stc xlat adc stc xchg jecxz mov cli ja loopne loopne into lods ret cli mov stos mov push out mov mov cld cld rcrl cli mov std in mov in mov in cli scas (bad) out mov mov std cld jmp decb icebp movsb repnz mov (bad) loopne ljmp scas stos mov lcall std cld cli loopne (bad) ljmp in cwtl call out clc lods xchg mov pop fwait pushf xchg aad sti sti mul (bad) fildll in (bad) inc shrb cmpsl lods xchg stc mov lea test sti idiv loop mov sti ja out mov xchg jg xchg mov mov aad cli sti sti rcrl mov (bad) call out movsl in in cmpl movsl mov orl mov mov in out nop in sub in mov fmull scas in mov mov std cld cli test sti ljmp lds out xchg fisttpll scas mov rcrl sahf not and fisttpll in mov xchg decb mov push mov fwait stos test jecxz std clc test std sti out sbbl add leave mov mov lcall mov cld cld rcrl out or mov std in mov in mov rol scas mov mov sahf mov sbbl test cli ljmp cli out in in xor cwtl fdivrl mov insl lock (bad) adc test (bad) in mov xor ljmp (bad) mov jae stos setp sahf sti aam sti std icebp xor (bad) rorl xor fisttpll pop lods scas movsl lea sahf mov inc (bad) (bad) mov sti loopne movsb repnz cld lods cmp les in (bad) rorb lods scas test mov cltd test loope cli sti std sti ljmp in mov in mov hlt lcall mov lock int cli call jmp in add mov out xchg fucomp mov les cli mov mov mov testb jmp adcl ljmp scas stos mov in mov cld (bad) xchg out cli ljmp xor ret cli mov xorl and mov cld cli std aad ljmp or ljmp mov mov sahf mov sbbl test sti ljmp cli out in in cmp cwtl fdivrl mov insl lock (bad) adc test (bad) in mov xor ljmp popl setp sahf sti aam sti std icebp xor (bad) rorl xor fmull pop lods scas movsl lea sahf mov inc (bad) (bad) mov sti loopne movsl repnz int3 lods cmp les in (bad) rorb lods scas test mov cltd test loope cli sti std sti ljmp in mov in mov hlt lcall mov lock adc cli icebp adc in (bad) cld andl test scas in xchg idiv mov mov lcall ljmp in mov cmc mov test icebp xchg jg test mov fcom mov fisubrl in add in pop pop mov jmp mov in xorl sarb mov mov lret fwait (bad) fdivr cld sti clc int ljmp in mov div movsb sti lret mov mov lcall std cld cli clc int ljmp in mov sti mulb lods movsb xchg mov mov xchg cld cli sti std sti ljmp int int3 cmp mov xchg sbb xchg adcl and movsb loop mov (bad) out scas rcrl mov jle mov mov mul xlat repz (bad) in mov xor mov call scas mov lcall out idivb mov in stos mov test mov sub scas scas call fadd mov hlt shlb jmp or scas cmp les in popl push mov mov (bad) test std (bad) in int3 sbb cmp ret ljmp rclb lods scas movsl mov fdivs mov lock sarb out pop xor jmp sbb mov mov sub sti aam sti std icebp xor mov (bad) in out ljmp scas mov jns test sbbl mov sti ljmp in mov out int3 sbb cmp rolb scas test mov xor xchg (bad) rclb sti loopne (bad) shr rcrl xchg in in add mov xchg fstl call (bad) not push idivl in mov in in cwtl xchg xchg mov mov push mov mov push cli sti mul (bad) in in les lret pop leave mov mov mov mov pushf sahf sti aam sti std std ret ljmp (bad) std scas jmp mov mov xchg mov mov std cld cli mov sti sti xchg ret ljmp ljmp mov jne mov cli in loopne (bad) int3 cli xchg mov ljmp rorb and mov mov cli test std sti out rcrb out (bad) and cmpsb in mov xchg data16 std mov sbbb not leave int3 fcmove cmp ret ljmp cld aad scas scas stos xchg jmp mov idiv repz and mov mov out shr mov cld mov mov sbb mov std cld cli mov sti sti xchg ret ljmp in add in adc mov (bad) mov push add mov adc in mov (bad) add ljmp in mov fwait mov not adc mov ljmp out std shr shr sarl push mov mov notl loopne ret ljmp in out loope ret cli mov mov ret pushf xchg lods push and repnz ja ljmp in mov in clc mov mov mov mov mov sbbl (bad) call ret ljmp xchg cmpsb mov mov mov nop xchg mov not add aad ljmp cli movsb jmp in mov in popf cli mov mov sahf mov sbbl test sti ljmp in mov (bad) mov ljmp cli lods xchg pop mov fadd mov cli sub mov out add mov ljmp scas cmpsb mov xchg xchg sti std (bad) in int3 ret xchg ret ljmp rcr lods scas movsl jle test arpl cwtl mov mov and jmp mov mul mov mov xor mov lock mov stc mov mov test hlt sti std sti ljmp in mov (bad) mov mov mov sahf movsl lea fcmovbe cld jge ljmp in mov (bad) mov ljmp loopne xchg pop mov fadd mov cli sub mov out add mov ljmp scas cmpsb xchg xchg cld (bad) cld fstpl adc in in pop lea mov cmp and mov sti out mov mov xor icebp in mov in (bad) cli mov scas mov mov mov xchg sahf std cld cli loopne (bad) ljmp in cwtl xchg xlat in mov adc mov pushf mov (bad) (bad) mov out lock xchg stc mov call loopne pop mov mov mov mov xchg adc fdivr xchg ljmp cmp mov les cli mov mov mov sahf xorl clc out ja loop ljmp ss mov mov mov lcall std cld cli xchg xchg sti in mov in xchg (bad) mov in mov mov mov xchg movsl and icebp fdivr cli icebp rcl xchg mov std xchg mov enter lods subb xor mov sahf stc in clc (bad) xor in out (bad) hlt scas std lcall mov mov cld lock popf shr xor fwait jmp in mov in mov (bad) call mov mov std cld cli (bad) fdivrl repnz out lahf inc (bad) scas out notb add lock (bad) adc loopne (bad) ljmp in cwtl xchg xlat in mov aad cli mov mov lcall popf lock out stc ret ljmp xchg stc mov call movsb test loopne clc in mov std cli clc xchg jo ljmp xor ljmp aam mov js pop popf mov sahf std cli rorb sti in (bad) call out (bad) rorl cli mov xor scas test pop xchg (bad) lcall mull in rcll ljmp in mov in fisttpl cld lods scas scas mov jne xchg idiv out std sti ljmp rep out xchg imul in adc lods scas test nop rcrb sar cld jmp les icebp movsb mov mov hlt rcl test lea and mov mov mov (bad) cmp mov lds in ljmp mov xchg mov mov cld lock cli ljmp lds (bad) in mov xchg mov jmp mov mov or fwait pushf lcall ljmp insl shr call cli mov scas scas lock lcall neg test mov mov data16 hlt movsb call mov (bad) popf mov mov jl sti std inc add roll mov cmpsb mov call movsb mov push lock std clc in mov lea mov addr16 out mov ljmp fdivrp mov sahf or fwait pushf lcall adc cmp in (bad) xchg aam mov shr subl mov lods les sti sti test in mov andl in mov (bad) aad mov mov lcall not out jmp mov loopne call out dec in mov test xchg pusha mov mov std imul add (bad) cltd push mov out add in or or mov mov lcall int cli jb sti ljmp in mov aam mov in test (bad) mov cltd scas cmpsl (bad) xchg mov out (bad) shlb loope (bad) xchg clc mov jmp adc xchg mov mov aam sti std icebp test int3 ljmp int3 out int xchg rolb scas test test sti mov sbb stc aad ljmp decl ljmp jae mov lcall mov sti jmp mov in stc nop in xchg in in mov fmull scas icebp mov mov mov out cli cmpb call ljmp ljmp lods stos xchg inc mov sbbl sti std std shr ret ljmp jge mov call xchg mov sahf movsl cltd repz cld cld cld xor ljmp jmp roll mov mov mov sahf (bad) movsb xor cld stc xchg jb in (bad) xchg loopne ljmp ljmp jno lahf mov xor xchg mov fisubrl roll sti ljmp jmp out in (bad) ret cli mov test scas xchg mov andl rcrl mov (bad) call in (bad) mov mov jmp in lock std cld cli sti std sti ljmp lds ljmp cli mov mov lcall sti xchg sti std push roll mov (bad) out add mov lods mov and mov mov test cld cld xor ljmp fs jmp (bad) ljmp scas add pushf mov cwtl shr clc xchg je ljmp lds ljmp xchg xor mov mov mov sti mul (bad) int lret cmp mov call stos aad mov lock (bad) not es repz ljmp lds ljmp jno mov pushf mov sahf std test roll ljmp in in mov ret mov lock xchg mov not cli std shr call (bad) xchg loope ljmp and stos lods shrb mov mov sti and in xor lods int3 int int repnz mov mov sahf mov adc fdivr shr shr (bad) ss sbb ljmp xchg mov lcall std cld (bad) xchg jae ljmp in (bad) call ljmp mov xchg mov sahf std call mov mov out fucomi in mov in mov mov pushf andl test pushf loopne xlat loop xchg arpl mov xchg test in (bad) ret mov les mov lock xlat cld cli clc int ljmp in mov lock sti lret mov les popf cmpsl cmpb (bad) cmc ffree cmp lret mov jmp lods scas scas mov (bad) lcall sti fcoml shrl ljmp lret xchg sahf ljmp xchg xchg mov mov sub roll sti ljmp lret out in in sub cmpsb sti mov mov lcall aad cli sti sti ror (bad) xor (bad) dec int3 (bad) pop jmp in mov mov lds mov loop add sti in out xchg cld ror vpminsw out pop in mov lcall mov cltd scas mov icebp mov cli icebp jmp hlt shrl add in mov les mov mov lcall (bad) sub shlb sti ljmp in mov lods mov mov mov lcall std mul (bad) (bad) xchg rorb in mov (bad) ljmp scas mov repnz cld cli shlb roll sarl cmpl mov icebp lcall cld aam cli std icebp test mov out aad mov (bad) fimul mov dec shl mov mov lea cld lock cli ret ljmp (bad) ljmp xchg mov mov cld aam sti std icebp loopne enter (bad) sti not in in (bad) in cmpl mov les pushf sahf stc (bad) idiv aad jmp sub mov into in mov insb mov mov mov mov sbbl cmc stc rol in mov stc movsb jecxz mov (bad) dec mov ljmp mov movsl mov fildl stc hlt push inc rorb scas call in (bad) (bad) mov pop scas mov movsl mov fwait sbbl fldl call add (bad) mov (bad) test stos mov cli xchg lcall ljmp (bad) mov fucomp mov in mov loop scas mov xchg xorb stc rclb decb out (bad) out (bad) xchg stc mov mov mov push test pushf repz sbbl std and iret (bad) (bad) xor xchg int3 jmp pushf ljmp jg xchg pop mov mov cld lock fwait out (bad) jmp in add xor mov scas mov fldenv or sbbl call icebp xchg rorl in mov xor mov xchg int3 scas scas stos mov mov add sti sti in ret ljmp (bad) int3 cwtl in std mov movsl xchg (bad) fcom mov mulb in (bad) std mov out std mov jmp pop fbstp xchg in mov lods test scas cmpsb fcom mov cld lock mov les in (bad) xchg xchg in mov int3 add mov mov lcall jecxz add add (bad) decb ljmp scas mov lret lcall std cld cli mov ljmp jp test imul lock or hlt mov mov in mov lock (bad) pushf (bad) rolb xor mov in movsl cld cli icebp ljmp mov (bad) shr in ljmp stos test and push andl in std ljmp popf lcall fwait out les hlt mov hlt mov mov cld lock cmpsb sti ljmp lds in ljmp cmpsl mov mov mov not dec std sti in std (bad) std mov in cld (bad) sti ljmp fildll mov cmc mov sub roll sti ljmp loopne xchg in in (bad) lret sub mov xor test not div aad jmp and mov in mov mov movsb scas mov fcom mov fmul shrl ljmp lds cli nop shrb mov jo fwait mov loopne (bad) ljmp in cwtl lret pop hlt les mov mov lcall stc xchg cmpsb sti std std int3 xchg hlt ljmp in out inc in mov xchg mov mov mov (bad) (bad) mov std icebp nop xchg hlt ljmp in out inc in mov movsb xorb xor movsl popf movsl lea loop icebp int3 loopne mov mov sbb andl mov test test mov (bad) stc (bad) (bad) sti std jmp std (bad) ret ljmp lret sub stos mov fmul mov not dec std sti in in mov cmp scas lods ret cli mov stos mov push out mov mov cld cld stc fnsave cmp ret ljmp loopne mov jg xchg pop mov mov cld lock mov call jmp in mov in pushf cli or scas in out mov mov fwait pushf vpaddb rcr cli ljmp (bad) shr rorl adc mov lock mov sbbl call (bad) in mov in call lock cmpb lock mov repnz cli sar not push (bad) (bad) icebp rcll in (bad) ret cli mov mov mov mov sti jp std sti out (bad) push xchg scas mov jmp pop jmp test mov mov mov sbbl sti aad ljmp insl xchg (bad) out mov xchg mov push cmpsb pushf mov sahf mov not cli std aad ljmp in pop in in mov lods scas test test mov popf int cli fdivr sti ljmp in mov lds call lcall lea fcmovbe fst pop ljmp in (bad) cltd imul mov adcl mov divb lcall cli ljmp (bad) mov lds ljmp scas fnstcw lcall std clc mov out mov in cltd ljmp (bad) in mov subb mov testl sub sti sti shrb mov jmp pop fiaddl scas movsb xchg jp xor mov sahf std clc shlb std sti in (bad) xchg in repnz in mov lds mov ljmp mov lock int cli sar sti ljmp ja mov movsb mov mov mov lcall cli cli shlb std sti in movb mov fucomp mov lods scas mov lret lock in lret (bad) in jo and in mov shlb mov jecxz mov (bad) cwtl xchg push divl pushf sahf cld div cld cmc std ret ljmp (bad) cmp test mov lcall std cld sti mov (bad) lods scas call in mov cli movsl ret pushf scas mov fincstp mov mov (bad) jecxz test mov call in mov mov stos cmpsl test lock icebp xlat aas not sub (bad) mov in mov cli adc (bad) repnz scas stos orl lret jbe cmpsl in mov pushf mov xlat stos mov mov cmpsl push nop mov not adc int ljmp in cwtl call in mov lret in scas mov repnz clc sub rcr jmp jo (bad) ljmp in lock lock and movsb scas mov negl mov xlat aaa not sub in lcall mov mov mov mov (bad) jmp (bad) push sti ljmp cmc adc popf (bad) cli mov pushf mov mov std div cli std jecxz imul pop loope and (bad) pop loopne push cli test mov lcall sti jmp (bad) fildl sti xchg cld hlt add in in mov shll mov lea sahf stc jo sti std cli dec jmp clc in repnz in mov dec jmp pop in mov nop cmpsl test xchg jb nop rclb sti std cld jmp stc inc scas mov ljmp in mov sti xchg in mov mov popf sahf mov rcrl sti ja in mov dec mov pop mov jmp add (bad) rcrl scas scas mov stos mov jmp stc stc hlt call mov shll call ja lods scas scas mov mov add sbbl ja sti ljmp in pop out pop loope push scas xchg mov lcall std cli jecxz fcmovu xchg scas mov call addr16 in mov cmc movsb loop stos mov mov mov pushf mov std cld cld (bad) not cmp lcall mov in mov mov mov lcall jo cli sti cld loop lock in cli mov mov in dec (bad) std jmp scas scas mov lock int cli ret std sti ljmp call (bad) lock movsb lods mov mov sti in stc jno ljmp dec mov push in mov movb mov lock or cli std in call mov jmp mov fmull scas enter stos iret fwait mov call mov lods mov out in lds ljmp in lods (bad) dec decl mov aad cli sti not out incl in mov (bad) adc ljmp mov xor mov std cld lock (bad) (bad) int3 lahf enter lock push test mov mov mov addr16 std icebp cltd test ljmp test mov decl mov and mov in clc xchg mov mov in mov movsl mov mov call mov lret xchg mov cld cli std out inc sbb in out repnz ljmp cmpsb mov push lahf rorb fwait jecxz sub sti ljmp in out repz cltd push mov mov out stc pop jecxz lcall xchg mov in and (bad) cmc cmc ljmp adcl nop clc mov xchg cmc in repz mov ljmp in loop clc jmp incl mov faddp mov clc mov sahf imul repz movsl call jmp and cmp incl mov faddp mov loope cltd test jmp idiv lret iret scas and or mov xchg fsubr in (bad) cld aad scas scas cmpsb mov mov xchg and lock sti jmp mov in mov in mov cmp mov mov std cld cli test sti ljmp in mov in in mov les mov nop mov nop rcrb idiv cld jmp mov ljmp hlt out in in cmp sbb cmpl (bad) jecxz lcall sar int3 in out mov (bad) jno (bad) mov sti scas mov mov mov hlt sar in xlat repnz in mov lds mov mov lock std cld cli sti std sti ljmp (bad) fucomi in out int3 (bad) jle mov mov lcall fcmovnbe mov lret in mov jmp mov in mov push scas scas mov cli mov mov cld clc sarl or xchg ljmp lock dec scas scas cmpsb xchg dec mov mov cld lock sti ljmp mov (bad) mov pushf (bad) xchg mov lcall aad cli sti sti shr out mov in mov in in mov repnz xlat mov mov insl mov std cld cli sti std sti ljmp bound mov lret into jo mov mov cli rclb xchg ljmp out outsb ljmp lods mov mov mov lret cwtl popf (bad) mov ret ljmp sarb mov lcall fcmovnbe mov lret in mov call mov in mov push scas scas mov cli mov mov cld clc sarl or xchg ljmp lock dec scas scas cmpsb push mov mov cld cld rorl sti ljmp lds in ljmp xchg mov mov in jecxz clc push movsb dec test mov lahf fmul (bad) into mov mov std cld cli sti std sti ljmp int push pop mov pushf fmul lret leave stc mov mov pop clc fwait cltd lahf popf fwait sahf mov sarl roll jmp lods scas scas mov in andl shl (bad) (bad) fisttpll out (bad) mov mov movsb negb test stos test pushf popf int cli hlt std sti ljmp cmc movsb in lret (bad) enter rcrb dec mov mov cld lock sti ljmp lds in ljmp mov scas mov cli mov mov cld cld sar sti ljmp in mov in in mov repnz xlat mov mov insl mov std cld cli sti std sti ljmp stos mov out outsb ljmp lods mov mov mov (bad) sarb outsb ljmp jmp ljmpw lods scas test test lcall std cld cli sti std sti ljmp (bad) in out int3 (bad) jle mov mov lcall aad cli sti not or xchg ljmp loopne outsb cli mov mov lcall sub shrl ljmp call cmpsl xchg mov lcall aad cli sti sti roll mov les in pop add mov les mov mov nop mov std cld cli stc jecxz xbegin ljmp int3 cli jecxz inc lods scas test movsl fldt lahf mov pushf movsl cld cld cli xchg std sti sti les int3 mov out (bad) iret ljmp movsl mov lcall sti sar fisttpl (bad) testb mov not add in mov mov mov (bad) out (bad) out ljmp cld in fldl loope call mov mov test leave (bad) (bad) cld in adc je popf cwtl popf mov (bad) mov call call lods aam mov lods scas lods (bad) sbb pushf popf cwtl sahf mov (bad) lret scas lret cltd rorl lret leave (bad) ffreep lds nop sahf mov test loope dec out dec out push stc jmp xchg cwtl mov loop movsb test sahf xchg xchg (bad) ret or jmp mov out jmp lock mov (bad) cld stos test ret loope lahf aam sahf lea jmp in movl mov in std (bad) loopne pop cmpsb lds loope (bad) loop mov call mov in loop in cwtl ret mov cmp cli mov mov lcall std cld cld (bad) cld (bad) lock (bad) mov xlat sti ljmp add fadd (bad) (bad) out ljmp (bad) popf mov mov scas xor lret enter (bad) testb clc cwtl lcall pop lret and (bad) mov sarl xchg lods loopne xorl lcall loope or rcll stos test stos mov in mov lea mov out (bad) in mov out in xchg mov xchg cltd (bad) mov pushf sti stc xchg rcll ret std (bad) lock (bad) in movsl call int3 mov (bad) out sti ljmp mov mov cltd ret push test int sahf stc (bad) xrelease ljmp in in mov in mov mov mov mov stos test clc roll std sti ljmp in mov in in mov cmc xchg xlat mov mov mov stos xchg rorb sti in (bad) scas rorl roll rcrl jmp lods scas scas mov jmp movsl mov cli rcr (bad) or (bad) mov in mov push mov mov mov lea mov in (bad) lods scas in sti sar (bad) mov ljmp mov dec add xchg (bad) out jmp fucom pop mov in mov (bad) mov add hlt scas scas movsb xchg adc xor lods sti sti not jmp lcall pop adc pushf fnop enter scas mov fcoml popf sahf not sti out out (bad) sti jmp jmp iret ljmp fnstsw fldt mov std clc ret sti ljmp cmpsl out adc pushf (bad) lret lret scas fsubp lock std clc shrl mov out leave in mov lds mov mov orl mov cmp in jnp sti ljmp dec jbe mov pushf (bad) enter ret xchg lcall pushf cld cli incl jecxz or in mov fmull scas int mov nop stos xchg mov sti std sti std rcrl mov in in mov (bad) outsl icebp xchg inc mov ret mov scas xchg ljmp adc ljmp jge cltd mov mov cltd lahf aam sti mov movsb out (bad) jmp mov jmp out mov (bad) sti ljmp test pushf lods fisttpl (bad) in movsb fdivrp call jecxz imul call lock inc test andl test cli loopne std ljmp in cwtl xchg mov mov leave xchg xlat mov xchg mov jecxz mov sahf stc (bad) xchg idiv sti in mulb mov in repnz cld pushf jo stos mov pop in mov cld cli (bad) ss ljmp rorb mov mull and mov fsubrs std mov lock mov into int3 cld jmp cli mov adcl hlt mov lea int3 (bad) jmp sti jmp out (bad) mov std stos stos (bad) test std mov or fwait pushf lcall stc jmp rcll in in (bad) shll scas stos xchg mov aad sbbl sti std mov in (bad) sti in jecxz in mov lods mov lea xchg fwait jnp sti ljmp in mov stos in mov adc scas mov lock in not loopne repnz adc rcrl int3 sbb std mov mov pusha cld iret testl mov mov xchg mov ljmp mov loop (bad) mov std cli std jge ljmp jmp (bad) xchg int3 cli mov fadd (bad) in (bad) out in repz xchg in not flds test mov jmp dec in in mov lret leave vcmpunordss lods lcall std cld (bad) ljmp insb shr in (bad) loop in test mov test mov jecxz lock sti enter (bad) icebp and ljmp insb xlat ljmp out rolb rorl mov clc icebp in jge ljmp jmp out std test cs sti test test mov loop fwait mov fnsave adc jbe mov (bad) mov mov mov inc test mov out (bad) out jmp mov cmpsb ljmp loop lret mov lea cmpsl mov mov cld in ljmp movsl (bad) out fistl mov insb aam in (bad) shr (bad) ljmp scas movsb lcall xchg push mov hlt ljmp loop cmc fstl jecxz xchg mov cwtl hlt leave clc scas scas stos mov mov sub cltd mov lcall int3 mov (bad) jecxz mov mov aad scas scas cmpsb stos lods lret fwait mov stc (bad) testb cli aam ljmp out stc mov scas movsb aad mov dec jl std (bad) repnz xchg call aad in (bad) stc cld cwtl sti shr stc cld mov scas movsb stos mov test lcall (bad) shr jmp jmp in lods fwait iret mov in xchg (bad) ljmp mov movsl mov pop or in out in mov cwtl cli (bad) loopne and mov in lea mov add xchg (bad) out jmp cwtl cltd pushf lcall repz (bad) divl orl orb mov xchg insl jmp in cmc cld jmp std popf cld jl mov xchg loop int lret test or je jl (bad) mov mov adc lcall mov lahf add mov mov mov fmull sti call jbe adc std xchg shr in (bad) jmp ret mov lock fwait xchg std lds jmp jmp aam in (bad) lret repnz adc lea (bad) xor cltd xchg sahf les loop ljmp lock xchg sti hlt std xchg sti cmc sbb mov mov mov loopne cld cli jmp divl movsb loopne xchg stc icebp std lcall mov mov mov pushf loopne call sbbb cmc hlt jmp call in mov lock loop mov mov mov push in leave aad out iret mov in lcall cwtl hlt std xchg jmp mov mov cltd xchg xchg xchg scas cld sti loopne mov in cmp cli cwtl mulb xchg in lods scas movsl stos stos mov xchg rcr cmp out out loopne popa jb mov into mov (bad) ror xchg cmpsb xchg lea scas mov loop cli xchg sbbl icebp imul std ror (bad) shr in and mov ljmp scas cmpsb (bad) cli mov lea cld cli enter in mov orl mov ljmp scas movsb cmp mov lods pop xchg lea mull sti int3 mov in mov in in mov in mov mov scas scas dec mov lcall std cld cli out std sti ljmp in mov in in mov in mov mov mov lcall idiv stc out hlt int3 lret popa stos ljmp int3 (bad) hlt cwtl mov mov jns mov pushf xchg std cld cli sti std sti ljmp xchg jmp in call cli mov mov lcall fnsetpm(287 sar cld sti in out xchg icebp rcll lahf jnp xchg loope mov mov ljmp fcmovbe sbb rolb out mov in mov in in mov icebp lahf (bad) xchg mov movsl mov std clc in push loop shll (bad) std jl jmp out repnz mov movsl mov jecxz loope mov in fwait xlat ffree sub sarl lock mov ljmp scas (bad) mov lcall jmp xlat icebp fnop std fistpll pop (bad) rcrl repnz mov aad scas scas stos lods mov xchg (bad) sar cld sti in out repnz mov sti mov jno mov scas aad mov test rolb sar stc aad jmp (bad) in jmp loopne mov xor mov fmull scas iret mov clc mov (bad) out in (bad) icebp int3 lret (bad) mov nop mov mov mov mov fstpl lcall std sti ljmp in mov cli cmpsb cld leave lock scas stos shlb cltd scas xchg mov fst std loopne jg (bad) mov xchg jmp in call cmpsb mov mov mov subb stc rep add cli mov test lcall mov cmpsl stos scas fwait mov std cld cli clc int ljmp in mov lds in and lea out pushf lcall ljmp in cwtl call out ljmp sarl mov cli rorb std std mov out add ljmp inc test (bad) mov pushf add jecxz cld cli call sti ljmp in mov in in mov sti lahf (bad) mov mov insl mov std cld cli mov sti sti out repnz in mov sti movsl dec ljmp stos mov mov scas xchg mov pop not or in int mov loopne stc jmp cld cli mov xor loope mov cli (bad) cmpsl sti ljmp xchg mov sti jmp in jecxz mov das movsb lock rcr repz std (bad) xchg test loop scas cli mov frstor lahf aam lahf mov in hlt in mov sbb mov mov mov mov mov lds xchg cli sahf std clc shr int ljmp in cwtl call call test leave mov popf lahf aad mov (bad) hlt icebp roll push (bad) loop lret mov out repnz mov mov test xlat lcall stc icebp shl sti repz mov out repnz in mov shl std mov repnz xchg imul mov pushf pop std cld cli mov sti sti out repnz in mov clc movsb std lret ljmp stos mov xchg mov icebp rclb test scas ljmp out decl scas mov lock pushf jb mov (bad) in inc rorb in mov nop test xchg xchg mov mov lcall out ljmp in call (bad) mov scas test mov popf mov push std cld cli call mov in std ljmp ljmp scas mov lock mov jmp sti std (bad) ljmp fimul ret cli mov shll xor cltd lea cld cmpl xchg imul jmp test lcall xlat cld cli in roll mov (bad) xchg fucompp mov in mov mov mov pushf movsb mov cwtl xchg mov cli sub mov push scas enter in sub mov test xchg mov mov std cld cld rorl ljmp xor enter xchg push scas scas cmpsb mov fwait mov in mov cli icebp xchg ljmp decl lods in mov test mov lcall std cld sti jecxz leave int3 out sahf jo shr mov cli movsl ficomp mov mov (bad) ret sti std jmp cmp in add mov stc call dec test cli in mov mov loope negl in mov vpor out out mov aam mov jmp repz cld cld std xchg jb in (bad) sti call ljmp push mov mov fwait mov push cld cli std mov in popl (bad) (bad) adc and in (bad) scas test test mov sub pushf cwtl mov xchg in mov ljmp fimull mov mov mov std cli icebp loope call mov jmp mov fmull scas xlat mov add daa sbbl stc ljmp clc lret jmp roll stos movsl test mov fadds mov hlt rorb (bad) shr rcrl ret mov xor scas stos mov mov lock jecxz add pop mov ljmp in test sti scas scas stos lods lea mov int3 pushf sahf not out cli std std shr ljmp stos in lods lods in mov test mov lcall ljmp in mov shrl movsb mov in sub lods scas or mov cmc cmc and dec cli sti sti shl (bad) push ljmp in in mov in mov (bad) out scas scas movsb lods mov xchg jge mov cli in stc pop std ret ljmp fucom mov in mov test stc mov xchg fwait push jmp xlat neg std cld out sub les ljmp mov test rolb sbbl call mov in icebp ljmp ljmp scas xchg xchg movsb jl pushf cwtl pop cli in fildl cmp mov dec (bad) repnz mov mov mov test cmp out lods aam hlt les in (bad) lret pop hlt les mov sbbb xor xchg add fwait pushf lahf jecxz dec cli std sti int3 ljmp mov dec ljmp mov mov lods call add sti sti pop in cmc test lds in ljmp jge xchg mov test stos dec (bad) mov cld cli std pop std not in jmp mov repnz addr16 in mov sti mov mov lods adcl sbbl (bad) aam hlt les in (bad) lret pop hlt les mov lcall mov fsubl shrl ljmp (bad) cmp ret cli mov dec mov fsubs mov push shrb jecxz adc (bad) hlt int sarb cld sbb mov fsubs mov fsubl sub ljmp push jbe mov mov das test sbbl fildl repnz dec (bad) cmc jecxz sub cmp rolb scas test mov stos fs sahf sti pop cld in fstpt ljmp lret sub add cmpsb push test sti in int3 inc cmp ret ljmp fwait nop jge xchg mov popf lods call add sti sti pop in repz lret cmp mov dec ljmp stos (bad) push pop jl sbb mov add adc orb adc aam add push scas scas mov cmpsb mov cmc sbbl sti sti mov movsb fcmove cwtl out xchg xchg aad scas scas stos cmpsl mov mov shl fldl sti jmp ljmp (bad) xchg pusha mov mov (bad) mov cld cli pushl test out addl lods scas movsl test lock cmpsb mov cli add aam ljmp cmp mov in push mov pop mov mov (bad) sub aad ljmp in mov nop xchg nop lods scas scas mov cmpsl mov testb sub std icebp lock mov out movsb sti lret xor mov xchg xchg mov out clc rorl cli std jecxz call loopne sti jmp mov mov mov lcall idiv stc out clc int3 lret (bad) mov jmp mov fmull scas cmpl mov jb sti loopne mov (bad) jl xchg out in call cli mov mov mov mov fisubl not adc xchg (bad) out scas xor add jmp pusha in mov stos test xor fwait fwait sahf std cld cli loopne (bad) ljmp in cwtl call call test sub nop mov sahf std clc stc xchg jno ljmp in mov out addl cmp ljmp mov push lods cltd out std cld (bad) clc stc sarl pop ljmp test mov mov mov lcall std cld lock xlat xchg mov cltd ljmp mov mov in mov mov mov lcall stc ljmp mov out jmp xchg out in (bad) stc aad scas scas stos movsb mov cmpsl js mov std cld lock sti shr in cltd ljmp (bad) in mov in mov mov mov lcall stc in repnz ret ljmp sahf jge ljmp aam mov lcall (bad) (bad) not adc rcll ljmp out out decb movsl mov mov xor fwait mov cld lock jl mov cld popl decb movsl lea iret sbb lcall ja cli icebp and shr ljmp xchg in mov in mov mov mov lcall fcmovnbe pushf cli std icebp ror sbb mov in in mov in mov mov mov mov stos test clc roll std sti ljmp in mov in in cwtl jmp ret movsb lcall mov cld lock adc cmp in ljmp ret mov mov mov std cld sti loopne call (bad) fucomi in orl loope in sbb mov cmpsl mov lock xlat cld cli clc int ljmp in mov clc hlt movsb in lret mov xchg push mov in sbbl ljmp icebp mov out in mov lahf jecxz mov mov call push sahf std mul rcr ljmp out (bad) repz mov lret mov mov lcall idivl std lcall or mov call scas xchg mov (bad) mov clc sub std sti jmp iret ljmp in out pushf in mov push scas scas mov cli (bad) out (bad) fwait xchg loopne cld cli ljmp ret ljmp loopne (bad) cli mov mov lcall testl in mov testb int3 lods scas stos jo mov mov cld lock cmpsb in mov (bad) in out test fsubrs xor mov adcb pushf in mov cmp ljmp loopne adcb int3 mov mov mul icebp xchg xchg jmp adcl in in mov stos mov mov movsl ror mov mov cld aam sti std icebp cmc loopne xchg mov xchg (bad) ljmp sti xchg jmp scas stos movsl scas iret out icebp lcall sub shrl test (bad) ljmp scas mov mov out (bad) fwait xchg loopne cld cli ljmp ret ljmp ljmp jg mov lcall cld cld lock mov iret ljmp sti mov mov lcall loop xchg xchg cld sti loopne (bad) ljmp in (bad) iret ljmp scas mov lock pop dec sbbl icebp loop test push mov jmp jbe enter cwtl push pop jl jmp mov add std sti out aam pop adc in mov fucomp mov lods scas mov mov mov stos test icebp sti stc test (bad) pop ljmp cli mov andl lock xchg mov (bad) jp,pn std sti out (bad) bound mov jmp mov fmull scas idivb mov mov neg ret ljmp (bad) sbb scas lods scas scas fdivrl mov mov out sti cmpb call ljmp mov lods scas mov xchg mov stos xchg xchg mov std cld lock call lahf mov jmp mov xchg cli cli mov mov lcall std idiv ljmp rolb out in mov xchg mov fsubl (bad) fwait mov stc repz shrl sti ljmp jecxz ror call (bad) xor mov xchg xchg rorl out inc pop xchg std mov cld jmp out (bad) loopne jmp ret mov hlt mov mov cli icebp call out decl in in (bad) sti call movsb mov (bad) test lock div mov out ljmp in in mov lods scas scas adc lcall cld cld cli sar sti ljmp in mov in mov mov add mov scas sbbl ljmp in mov out loope js iret stc mov mov lahf adc mov fdivr sti cld xchg cwtl in mov aam jmp in mov loop jmp aaa xlat lea lock (bad) sti std test (bad) sti call mov bound xchg ret lods scas movsl fmulp mov cltd mov out xchg sahf std out (bad) cld sti loopne push call mov jmp adc rcrl loopne mov cld test (bad) sti jmp ljmp xchg shrl orl cwtl (bad) clc or sti jmp mov xchg mov out or in mov mov cmpsl mov std xchg xchg sti loopne ljmp ljmp xor scas scas (bad) mulb mov cld test (bad) sti jmp ljmp xchg les mov mov subw jmp sbb in mov aam call lods scas stos scas mov rorl sahf std std xchg jnp sti loopne (bad) jmp mov (bad) sti jmp scas scas rcll mov mov cld test (bad) sti jmp ljmp ret scas scas fmulp mov cltd mov loop sahf std std mov sti jmp or in adc mov in xchg cli ljmp xor (bad) andl lahf std test cld sti ljmp jmp xor push lods scas scas iret mov mov clc hlt (bad) in (bad) jo mov fisttp clc lret xchg push scas scas stos aad mov lea pop test (bad) sti jmp ljmp cli mov stos mov xor xchg mov sar fnop aam cli (bad) jl jecxz sbb cltd sti loop xchg (bad) stc scas test lods scas stos mov int3 fildl xchg ret (bad) xchg (bad) clc jmp jecxz cli bound fdivrs mov in in mov stos mov xor stc les out jmp cs ljmp aad ljmp pusha ret xchg scas scas mov icebp mov lcall loopne lock adcl ret cli mov xlat scas mov hlt mov sahf cld (bad) (bad) sti std cli stc in cltd in mov incl loopne lock mov mov adc lahf std testb ret ljmp xchg lahf mov mov mov fwait mov std cld (bad) cmc stc ljmp jmp and in out xchg in mov stos test divl cld movsb jb jl loop std cld (bad) xchg jbe ljmp jmp mov out (bad) fisubl mov idiv sbbl sti testl rolb xchg std cli mov aaa mov cltd test jmp xchg jae ljmp in adcl sti mov mov cmc add adcl orl loop andl loope cli cli mov mov lcall div test jecxz pusha mov out loopne in loopne add mov ret ret mov std cld cli lret ljmp in mov in in mov fmull scas fidivr lcall in hlt (bad) jae sti loopne add mov push xchg icebp cli mov xor iret pop lock mov cli sti mul (bad) lret sahf mov jmp xor xchg fadd fsubrl mov mov idiv sti (bad) sub mov call ljmp cli mov mov mov cwtl mov (bad) ja std icebp lock std mov mov mov into mov in xchg xlat (bad) mov cs or lcall cltd sub lock xchg lahf in mov lahf inc cli mov mov lahf mov and xlat cmp (bad) sti ljmp clc mov call test test mov std clc xchg push sti loopne or in lea push jmp add scas scas scas mov fbld lock idiv sbbl sti std icebp ret ljmp xchg popf mov call movsb movsb cmpsl pushl mov mov ljmp dec mov in push mov in push cli mov mov lods mov mov sti std jo in mov mov sub ljmp lods mov lock mov (bad) stc clc std sti xchg cltd mov call out (bad) arpl mov mov cwtl mov (bad) mov std incl add (bad) mov ljmp rcl mov lcall stc xchg xor std icebp test mov out mov mov aad mov in (bad) (bad) mov mov fwait mov cld xchg mov push ljmp xchg popf mov call movsb (bad) xor stos lcall std (bad) (bad) sti std call jl mov popa fisttp mov mov lcall stc xchg insl cli std icebp rorw in mov aad mov in (bad) (bad) mov mov lcall cld xchg mov loop ljmp xchg popf mov call movsb and mov lcall std (bad) (bad) sti std call jae mov popa jge ljmp xchg jb mov mov stc xchg pusha cli std icebp cmpsw mov in out in mov aad mov in (bad) (bad) mov mov fwait mov cld xchg mov jp ljmp xchg popf mov call movsb sar mov mov (bad) mov std incl add (bad) mov ljmp rcl mov lcall divl sti std cli test stos in mov xchg cltd mov call stos sarb mov mov test xchg cltd mov call out (bad) je ljmp and stos lcall std (bad) mov std incl sahf mov shll in mov decl sbb divl fwait loopne cld cli call dec std mov mov in cld jmp loope insb test lods scas stos mov int3 sti xor mov sbbl (bad) out repnz popf mov call ljmp lock movsb and mov lock orl xchg clc ljmp out clc ljmp movsl mov xchg add sbbl icebp (bad) mov call ljmp lock fsubrl mov mov cld lock in mov lds jmp out out mov mov mov out mov clc xchg outsl cld sti loopne sub in addl sti ljmp movsl fmulp mov mov add stc orl mov out outsl in in (bad) loop (bad) (bad) mov mov lcall mull repnz xor icebp in mov in mov cmpsl lods scas scas addr16 lcall std cld cli loopne (bad) ljmp in cwtl jmp call scas stos rcll mov stos sbbb and in lea mov in (bad) cld rcrb lods mov jge in mov adc (bad) shrb ljmp xchg lahf shr in sub mov cmpsb iret sbb mov mov pop std cli icebp out repnz incl in test or mov mov mov mov mov std cli icebp xchg push jmp add sub ljmp xrstor xor into mov push sti sti notl cwtl loop cli shr in popl xchg xlat scas mov lock mov (bad) clc xchg push cli std icebp test ljmp enter adc mov scas mov mov std cli icebp xchg push jmp add sub ljmp cmpb mov lcall std notb rolb mov (bad) mov ljmp hlt mov out fwait test dec (bad) add in test inc in in add mov mov stos cmpsb iret adc sahf lahf mov jmp in icebp jo (bad) cmp mov in mov sti ljmp scas mov lcall stc xlat mov in mov cld popl rolb mov lock std std sarb popl movsl out std lea (bad) mov mov test (bad) popf mov jge push xlat cmp mov out repnz in in (bad) jmp test mov (bad) movsb ss pushf cwtl add sti stc clc test ljmp in call cli mov mov mov popf mov xchg fwait pushf lcall hlt les in pop pop mov jmp call mov cmpsb mov mov cld cli sar ljmp in mov fucomp mov lods scas mov xor and (bad) in std fucom (bad) in lret loopne sbb (bad) mov call scas movsl fldt mov lea (bad) cli sti stc cld test ljmp shr shr sarl scas mov test fwait pushf sar cld jmp mov cmp mov lds in out fsubr mov xchg (bad) scas scas cmpsb ret xchg mov mov stc cli in sti ljmp rcrl adc lods mov test mov inc fwait pushf lahf xlat cld cli call mov in or in cwtl lret pop hlt les mov mov lcall test in mov (bad) lcall mov in mov lcall mov mov std cld cld shrl inc in mov (bad) mov fucomp mov in mov mov scas mov popf fsubs mov loop add sti in (bad) (bad) in (bad) sahf inc mov in (bad) mov fmull scas scas mov mov xchg stos fs sahf sti (bad) test std icebp ret ljmp (bad) in mov fmull scas and mov xchg stos fs sahf sti fdivl push mov in mov xchg push mov in clc inc mov mov mov popa shrl in add in (bad) cld pusha test mov test (bad) mov rcrb xchg std cld jmp dec (bad) cmp mov sti add ret cli mov mov fwait mov mov std sti sti int3 das (bad) cmp ret ljmp sti xchg (bad) scas scas cmpsb ret andl sbbl in std sti ljmp rcrb adc jmp mov mov lahf mov pushf mov std sti sti int3 loope cmp ret ljmp sti xchg (bad) scas scas cmpsb ret andl sbbl (bad) sti ljmp rcrb adc lcall mov mov std shr int ljmp in cwtl lret pop hlt les mov mov fwait mov cld (bad) (bad) std cli sar call mov in in cwtl lret sub mov mov rcrb cli sti cld mov in mov (bad) lcall mov in mov lcall mov lods sbbl std test ljmp in mov lret cli mov scas mov popf fsubs mov cld sti shrl lret jmp test stc fmull scas lods mov mov xchg stos fs sahf sti ljmp (bad) in (bad) xchg mov (bad) mov test mov lcall aad cli sti sti fisttpl mov pusha (bad) mov mov (bad) lods (bad) mov rcrb xchg std cld jmp inc aad repnz int stc in in add xchg (bad) scas scas cmpsb ret out mov mov (bad) cli (bad) sti ljmp ret pop hlt lds mov ljmp in mov fwait mov cld lea (bad) mov in mov in in cwtl lret sub adcl sbbl std test mov stc fucomp mov in mov mov scas mov popf fsubs mov cld jbe std sti jmp (bad) in (bad) xchg mov (bad) mov test mov lcall aad cli sti sti fldt in ljmp mov (bad) lods (bad) mov rcrb xchg std cld jmp std aad repnz int cmc in in add xchg (bad) scas scas cmpsb ret out mov mov (bad) cli (bad) sti ljmp ret pop hlt lds mov ljmp in mov fwait mov cld lea (bad) mov in mov in in cwtl lret sub andl sbbl std test mov stc fucomp mov in mov mov scas mov popf fsubs mov cld jbe std sti jmp (bad) in (bad) xchg mov (bad) mov test mov lcall aad cli sti sti in data16 mov in mov xchg int3 mov in clc fidivrl mov mov push shrl in add in (bad) xchg xchg mov out mov inc mov mov mov mov shrl in add in (bad) xchg xchg mov out mov inc mov mov mov mov jae sub aad ljmp in mov mov test (bad) mov rcrb nop std cld jmp push aam repnz xchg imul in out mov push scas scas mov rcrb nop std cld jmp mov cmp mov xchg imul in out mov push scas scas mov rcrb sbb cld jmp xchg aam repnz sti add ret cli mov mov fwait mov stos std cld cli jle sti sti xchg mov hlt nop (bad) out out in mov xchg mov lods xchg lcall fistl ror sbb mov (bad) lret in mov mov mov lcall fcmovnbe dec cli std icebp ror sbb mov in mov test mov xor lcall in clc sti out stc ret ljmp in in add sahf xlat mov lods mov lea std cld cld in into rol jmp rorl out (bad) arpl sahf pop mov out xlat scas mov movsl xchg cmc pushf lcall fcmovbe clc not add mov lret pop jmp imul in adc ret mov rcrb sbb cld jmp movsl cli ljmp stc cli pop in in cmp movsb fsubrl mov cmp mov (bad) xchg dec cli ljmp in and mov ljmp data16 xchg jb test mov xchg (bad) stc in (bad) (bad) aam repnz lds loopne call scas cmpsb nop insb mov mov cld fdivrs mov in mov in cwtl ret cli mov mov inc cmpsl xchg cld cli icebp jmp (bad) lret les in in pop pop mov mov pushf mov xor push mov paddb (bad) sub in cltd ljmp (bad) in movsl lods in mov test mov lcall cld cld lock rcl int3 in push in mov cli sar mov stos ljmp cmpsl cmpsl lods int3 sbb xchg (bad) fwait mov mov mov movb in mov fmull scas mov lahf daa mov jno sti std cli test cld (bad) aaa jmp out imul (bad) mov mov jb lahf mov pushf mov std sti sti out pop pop out pop pop ret mov (bad) cli mov mov mov in xchg mov pushf cli insl stc cld insb aad cli mov rorb in mov mov test lock aad sti sti sti loope cld scas in sub in or cld mov frstor inc cmpsl lcall lea sub roll sti ljmp mulb (bad) mov nop lods scas scas mov mov mov sbbl icebp out aam mov add in addl mov xchg lcall xchg cmp in out out in mov (bad) dec jmp out call cmpsl (bad) mov mov cmc dec lea xchg mov std icebp ret ljmp lret jmp pop in mov nop lods scas scas mov lock sbb sub aad ljmp (bad) or (bad) rcll test mov lcall imul (bad) out (bad) test mov out (bad) jecxz cld clc roll movsb test movsb mov mov cwtl addr16 repz push cli ljmp (bad) xchg sti in xorl xchg lods repnz mov (bad) cmc in repnz subl in and bound std fistpll or out (bad) cmpsl pushf mov (bad) stc ljmp ret ljmp jmp mov test mov (bad) out cli jmp in cld fs mov adc stc mov hlt in mov aaa lods scas mov mov mov stos test clc xchg mov ljmp movl scas lods scas scas sub aaa fwait mov sti (bad) xchg xor sti loopne add lcall mov jmp push scas stos mov cwtl out (bad) fwait xchg mov std cli icebp fstl int3 cmp ret ljmp test cli mov movsb test mov sbb std cld jmp ljmp mov cmc movsb dec lahf dec jmp and mov int3 testb mov xchg (bad) or jne xchg out in ret ljmp call ret mov (bad) mov push cld cld lock ljmp cld fiadd jmp mov aaa (bad) scas scas mov icebp lcall std not jecxz sti loopne pusha int3 cmp ret ljmp xchg push lods scas movsl mov xchg mov std cld cli stc aad ljmp out scas int3 (bad) xchg add in (bad) roll scas scas mov divb pushf sahf sti (bad) cli loope jo in pop in xchg ret ljmp cli mov mov mov sbbl sti idiv std mulb jbe in in pushf (bad) mov scas add mov cmp sbbb stc lret ljmp out int3 leave cmc in mov mov cli mov mov cld (bad) stc ljmp mov out mov sar lods sar mov lcall stc xlat imul jg pop ljmp stc fmull scas and fisttpl mov inc cli sti std (bad) out test sti mov in in mov lret mov adcb xor scas mov sbbl dec jecxz mov out test (bad) xrstor xor mov jecxz cld cli (bad) (bad) clc xchg inc mov call ljmp mov lods scas (bad) cmc mov lcall std cld (bad) stc (bad) xchg and mov cwtl out ljmp loopne hlt pop mov (bad) aas mov icebp push fwait pushf lcall ljmp in mov out sbbl in (bad) clc mov mov lcall andb stc ret test pop ljmp adc popf cmpsl scas mov lock std clc stc sarl ljmp cmc movsb jmp js cli mov mov mov xchg std (bad) jmp sbbl movsb jmp cmp mov xchg sbbl stc incl out mov cltd rorl mov das mov mov std cld cli sti std sti ljmp jmp mov cwtl mov mov pushf test mov cmc cli in sti ljmp xchg pop ljmp cli mov xchg scas mov (bad) mov pushf lcall ljmp in mov out xchg pop ljmp scas stos into lahf mov (bad) movsl mov cli call add out mov in mov in in mov out repnz mov aas mov mov fcmovbe xchg ljmp in cmc in in mov in mov mov mov lcall jmp xlat clc fcmovnu rclb adc mov in mov mov mov sahf mov mov (bad) out scas int3 (bad) hlt jb mov (bad) adc jmp lods scas scas mov repnz mov cld cli icebp mov rorl in mov (bad) jno mov mov lcall std clc stc sarl ljmp clc movsb jmp jne cli mov mov mov xchg std (bad) jmp sbbl movsb jmp xor scas movsb xchg pop mov xchg sbbl stc incl out mov cltd rorl mov and mov std cld cli sti std sti ljmp jmp mov cwtl mov mov pushf test mov cmc cli in sti ljmp xchg adc in call cli mov out scas mov (bad) mov pushf lcall ljmp in mov out xchg adc in (bad) stc xchg sub mov (bad) movsl mov cli call add (bad) mov in mov in in cwtl call mov xor fldt (bad) mov pushf mov std sti ljmp rcrl les mov mov andb popa cld cli call add (bad) mov in mov in in cwtl call mov xor fldt (bad) mov pushf movsl std cld cli sti std sti ljmp fstpl lds mov ljmp mov divb dec adc cli sti sti mov mov cmc movsb jmp jno cli mov mov mov out xlat cld fildl (bad) scas rcrl jmp in mov mov lods mov xchg stos fs sahf sti (bad) mov std icebp nop out mov rorl in mov (bad) jno test mov lcall fildl ror sbb mov in in mov in mov mov pushf test mov (bad) cli hlt std sti ljmp cli movsb in lret xchg sub in (bad) rcrb stos mov mov hlt mov std aam int3 (bad) cmp ret ljmp cmpb test mov (bad) cli hlt std sti ljmp mulb in (bad) rcrb stos mov mov ljmp sub in (bad) rcll in mov mov scas mov test loope mov or clc int ljmp in mov out stc movsb jmp xrstor nop rcrb push std cld jmp out (bad) jmp xchg dec mov jmp mov faddl scas mov repz call add (bad) mov in mov in cwtl call mov or fistpl xchg pop sti ljmp cmp cli cmp mov nop lods scas scas mov mov mov loopne xlat cld fildl (bad) scas rcrl stc fucomp mov in mov cmp mov mov or call mov in (bad) ljmp in lret mov xchg push mov movsb sbbl stc out (bad) out xchg dec mov jmp scas rcrl in mov adc mov mov jmp call mov in (bad) ljmp in lret mov xchg push mov addl jmp call xchg inc mov jmp mov fmull scas stos mov andl fst or out mov in mov in in mov out xchg xlat mov adc mov std cld cli imul lock call cli mov mov lcall fcmovnu rolb mov call mov in mov mov mov lcall jo cli sti cld out xor out lahf addr16 in mov lock mov mov lcall movsl jno sti std cli xchg pop mov call ljmp clc leave jle scas stos (bad) or sti pop (bad) fwait xchg jecxz cld cli (bad) decl xchg cmp in (bad) call call scas stos mov fdivrs pop (bad) fwait xchg pushf xchg sti stc stc xchg pop mov call ljmp (bad) aad scas scas stos mov sahf mov std cli mov cld sti loopne pop jmp sub es gs mov fwait mov std clc clc fiadd cld jne mov lahf pop jmp addl hlt dec mov inc pop pop incb mov orl jbe adc in in mov mov mov mov cmc pop lea insl cli sti std stc jmp scas call lret sti pushf xlat xchg mov mov mov cld cli (bad) out sti ret ljmp dec in mov movl mov xor mov in cld cli call xor mov adc cltd push mov mov inc scas mov aad les addr16 sti stc mul rolb mov jmp out in mov xchg int3 scas scas stos mov mov cld fdivrl mov in mov in cwtl (bad) mull mov lock incl (bad) out xchg inc mov jmp cwtl call lods scas test test nop mov sahf std clc in clc (bad) loope idiv (bad) rcll call lods scas test xchg ret xchg sbbl sbb fs lahf fdecstp mov cmp jmp xor mov mov mov sti xchg arpl std std xor lods ret ljmp ljmp cmpsb mov mov mov std cli rcrb mov inc mov in mov in in mov mov cld lods scas scas mov lock xchg sti stc xlat out xor ljmp lret cli lahf (bad) ljmp lods xchg pop test andb lock faddp out add mov decl stos test arpl mov add repz mov cmp mov leave fldcw mov lock std clc jmp in out out mov out out in mov xchg int3 scas scas stos mov mov cld sarl mov in mov cwtl call je scas stos lods (bad) nop movsl (bad) cwtl repz (bad) and std icebp test mov out xchg pop mov jmp mov mov jb mov lock push cld cli call xor out repnz in mov (bad) adc in ljmp lods scas stos iret and and in cld cli call (bad) decb in call cli mov mov (bad) mov incb hlt movsb jecxz mov std mov loope jl mov mov fwait mov mull cli sar sti loopne cltd ljmp imul sti test mov lcall out (bad) sti clc repnz movsb lret (bad) iret adc fmull mov mov addl hlt push in mov (bad) push stc fucomp mov lods scas mov test xchg xchg (bad) or rolb ljmp lds mov out in cmc mov mov mov cld cli call std call pop in mov fucomp mov mov and adc lea rcl fstp stc jmp sbbl movsb lret lret lods mov mov push lcall std cli (bad) aam out xchg pop mov call ljmp cli mov (bad) mov mov xchg cmp sti sti stc test ljmp in in and repnz mov xchg stos test div inc lea std cli std aad ljmp in (bad) jmp in mov in mov rol scas mov mov nop mov sbbl stc loope (bad) imulb jmp fwait int3 xchg daa cli mov mov pushf scas cmpsl addr16 in xlat jmp ljmp in call cld xchg scas mov rcrb pop std cld jmp xchg in (bad) (bad) in xchg inc mov jmp (bad) clc mov mov xor repz cld lock mov jmp jmp in lahf ljmp daa mov lock incl test ljmp jmp sub cmpsb lods rolb mov mov clc (bad) in xorb out mull (bad) mov (bad) jno mov mov lcall std imul call test jmp xchg inc in mov call movsb (bad) lods mov lcall sti and adc (bad) mov cli mov mov mov out mov incb call loopne xchg (bad) loope scas call test ficom xor mov sahf std clc in cli (bad) call stc jmp mov subl cmpsl rcll mov lcall std clc je into (bad) lock in mov decl scas movsb test cmpsb mov mov std cli std incl decl in in cmp mov lods fildl mov mov rcl stc jmp push in mov out cmc pop in mov sti les rcrl scas movsb mov sahf mov sahf idiv in xchg ljmp in mov xor cwtl in les cli mov mov sahf fwait mov sti clc call cltd add ljmp call stos jo test xchg mov sbb jmp (bad) repnz jmp in addl (bad) (bad) dec mov ljmp mov les pushf loope cld cli mov sti ljmp in mov in in mov in mov mov mov lcall std cld sti call mov in adc in cwtl call call scas lods fildl mov mov cld (bad) jne stc xchg pop mov call ret mov cmc movsb iret pushf scas stos lods fisttpl mov cmp std cli icebp (bad) stc xchg pop mov call std lret lret pop mov mov mov shlb dec cld cli call pop call (bad) std rorb out test inc movsb lods lods fisttpl mov mov loop (bad) xchg mov cli mov out xchg cmp in (bad) clc rorl mov mov mov std cli icebp sti (bad) out mov (bad) in mov out mov jmp mov xchg mov mov ljmp (bad) aad sti sti mul (bad) aam jmp mov jmp mov mov mov cmpsl fisttpl xchg mov cld (bad) cld movsl xchg mov out repnz in mov imull mov rcll jmp cmc incb frstor in (bad) stc jmp cwtl (bad) mov movsb mov lock sti clc sbbl std call cmp ja ljmp mov push rorl jl pushf cwtl mov es mov out out in mov (bad) out lahf xchg pop mov mov mov out mov cld cli push shr in mov call jmp in mov xchg lahf lods rcll mov mov dec cli sti stc in out (bad) xlat jmp sub push ljmp repz mov lcall int cli jae sti ljmp dec mov jmp repnz mov mov cmpsl stos js mov std not clc not add mov out out in in sub xor mov mull scas stos xor and addb (bad) rcrl out push (bad) leave mov mov mov mov mov push rorb call mov out out in in pop lea test lock fwait sahf std cld cli sti std repnz in mov fucomp mov in mov lods scas mov xor repz iret mov jmp (bad) imulb in mov hlt rcrl lods movsb cmpsl mov mov cmc sbbl adc stc xchg push mov call loopne rorb sbb test jp mov std cld (bad) xlat int xchg pop mov call loopne xchg cmp in lea inc scas mov inc lcall std clc xchg push cld sti loopne mov out repnz in in lea orl mov sahf mov stos jb sahf div clc orb call ljmp out out repnz mov mov popf mov pushf xchg sti stc stc xchg inc mov call loopne ljmp scas aad mov pop lcall not call in mov out repnz in mov (bad) jae ljmp scas mov mov fwait pushf (bad) int cli (bad) sti ljmp bound shr pop mov cltd test mov ljmp lahf xchg inc mov jmp mov shrb stos xchg inc frstor lcall std cld (bad) xchg or (bad) xchg and in (bad) call call add (bad) lock mov stc incb rcrb lea out popf xchg rcll xor lcall xchg and std icebp call mov out repnz in in (bad) (bad) decb stos iret dec mov cmc aaa sbbl sti std (bad) call mov out popf xchg pop in mov out popf xchg lods scas stos mov lock mov stc (bad) in xchg ljmp in (bad) in sar xchg jns cli mov mov mov xor mov in incb loope (bad) jmp call ljmp lods scas scas ds lcall (bad) clc xchg pop cld sti in sti movsb into lret repnz decb mov cmpl icebp lcall std xlat lock (bad) sub (bad) push stc ljmp in mov stos mov mov pop scas mov lock stc iret sbbl (bad) xchg pop jmp (bad) stc call jmp out lods ljmp stos xchg sahf mov mov mov (bad) sarb jnp in adcl lret mov mov sbb mov mov dec popf sahf not repnz in incl fwait out xchg dec ljmp lock arpl cmpsb in lock mov int cli mov sti ljmp out add scas mov mov xchg xchg add fwait pushf lahf call in jmp cmp jp in out jecxz movsb hlt pushf mov mov cmpsl pop out sahf std clc rcll std sti ljmp in mov in cwtl in repnz mov nop mov sahf std clc jecxz in in xchg pop jmp add mov (bad) cli push mov mov mov jmp call and in (bad) cltd (bad) mov jmp xchg jmp (bad) rcrb test mov loope out stc div movsb lock in mov out stc xchg (bad) (bad) scas sbbl mov js (bad) adc clc int ljmp in mov lock movsl in lret mov xchg push mov scas sbbl stc loopne (bad) sti scas xchg push mov jmp xchg xchg xor xor fstpt cmpsl insb fwait pushf popf int cli loopne sti ljmp cmc movsb stc lret leave ja pop mov mov mov pushf mov popf int cli mov sti ljmp sbb iret adc fcoml mov mov cli sub sti sti mov in mov les in add in mov out nop xlat stos mov mov (bad) out (bad) fwait xchg mov mov add in (bad) (bad) ljmp lock lods scas scas out lods mov xor idivb clc aam sti std std shr loopne pushf ljmp call mov stos stos scas lcall std cld cli dec std sti ljmp in mov in mov enter fnop iret testb stc in xchg mov (bad) in (bad) sahf movsl lret mov movsl (bad) enter aad popf mov stos cmpsb mov mov mov std cwtl mov (bad) int cld mov xlat sti iret rol into mov mov test iret cwtl lret rcl stos mov in mov sti cltd (bad) cmp aam leave out xchg enter out out std cwtl scas lahf (bad) (bad) sti ljmp in mov mov int push lods scas scas sti stos mov ja jl pop roll xchg push lret pop scas loope mov xor (bad) push insl loopne dec and xchg jnp inc sub cmp pop test pop push mov push mov mov cmp (bad) loope inc lret add std clc push mov inc push daa pop sbb test loop mov xlat cmpsb jae mov jo std inc pop es and inc mov int push sub in insb add enter sbb jns push pop jb xchg dec pop xchg popf shll pop pushf aaa sub xor xchg sbb les cmc notl imul into add adcl std pop lahf inc and and adc mov mov sarl nop ficomp and xor mov inc (bad) std inc jns xchg inc add dec xorb jp xor jne lods aaa in mov mov pop mov (bad) (bad) ds jno jno xchg gs out out movsb sub pop sbb add outsb and dec addr16 jge fcmovnu cmp pop and stc (bad) stc js jp mov outsb jb add (bad) xor addl loope mov pop sbb jnp jl dec xor fdivs mov inc (bad) mov adc cmp (bad) movsb sarb in add pop mov fdivrl sti inc mov push dec out popf jo (bad) imul sub dec fstl icebp ljmp mov popf rorb into loope fwait call test nop notb or mov mov jbe mov mov dec movsl xchg add jg outsb mov icebp or jo fwait (bad) icebp sbb cli and cmp mov add mov xchg imul scas aam mov lods outsl stos aas sbb jmp jne popa mov arpl pop push and andl rcr push xor pop push out add mov fwait mov je inc pop int xchg imul insl cmp dec iret mov mov dec leave push pusha adc push xchg sahf sub sarb xchg addl bound adc in xchg loope scas mov fldcw add push sub adc mov mov movsb add out cmp scas aas cmp mov cmpsl dec push pop lret aam test imul mov cmp mov ljmp out mov cltd pop mov dec (bad) les xchg inc imul ret dec stos mov add jge cltd (bad) ss lods in mov mov sub (bad) dec or dec xchg fwait mov ja mov (bad) push mov in push xchg adc dec outsl (bad) in cmp xor hlt adc mov adc dec setno inc pop stos inc lea in out gs cmp imul push dec inc out adc loope or mov nop push fsubrs dec (bad) mov test push dec xor leave xlat cmp mov js in add icebp aaa sahf mov out mov in jmp dec mulb sbb aam in pop and push xor adc stos inc adc mov push mov andl sbb mov lds test lret jp stos pop jb pop mov sub push int rcll jge xchg mov xor mov pop push scas fistpll stc dec or and mov neg movsb scas push repz and jns push jnp lret add arpl mov inc adc push mov pop mov (bad) mov (bad) ds repnz das mov mov pop insb push stos dec out push cmpsl lahf (bad) vandnps (bad) mov stos inc jb arpl lea ret inc jle add xchg cld stos adc mov repz out out (bad) xor jmp sub and fadds push mov nop mov pop jg adc cwtl icebp xchg mov lock mov xchg rcrl push (bad) sti mov inc pop mov call mov dec scas dec movsb push adc ss adc stos aam and imul stc push pop lahf jge push insl mov dec insl arpl imul lock sub (bad) scas sti push out sbb addr16 push xchg cli dec jmp dec xchg mov outsl mov push cmpsb js push fsts (bad) push mov jo mov and cli leave mov scas movsl mov ja xchg (bad) aaa std and xchg or add mov xchg cmpb (bad) fadd sbb push sub jp cmpl js out jg mov call lock add mov fstpl jne bound jns push cmp jmp dec or pop xchg mov cmp dec push (bad) inc mov cli push dec inc cli fs leave fnstenv cmpsl ss inc ss adc mov pop cs clc adc xchg dec test sub fsubs mov lds cmp add lahf pusha (bad) cmp ljmp push mov in dec and mov add (bad) and cmp cmp pushf add pop mov shrl cmc mov cli jp,pn test inc sbb add cmp jl movsl mov pop es les sahf xchg pop mov fistl in outsl fstp mov jmp add mov aaa push jmp xchg mov stos in xchg cmp hlt scas adc addr16 movsl test mov lret and das pushf and out mov in scas mov push out negl hlt dec arpl les jg sbb inc pop ret and (bad) and ljmp dec sub and loop push fwait out bound icebp inc mov adc fbld (bad) (bad) mov mov fwait ret (bad) xlat jns add (bad) in sbb sub add add decl push sub xor pop cmpb sbb xchg push stc shrw mov movsl jle lods test jno pusha mov xlat int ss aaa jno wrmsr lds imul and imulb cwtl pop movsb cwtl loope ss jb mov cmpsl fst jmp adc jno xor das mov lret add jmp cltd scas mov push sub sub jo std test pop (bad) fistpll imulb inc pop mov fildll sti sub xor call outsl icebp cltd and ljmp cmp adc (bad) fwait dec push hlt fwait xchg daa xchg jmp xchg ja add aaa adc ret lret push std push jg aad iret in adcl inc mov scas push dec shrb ficomp test sbb and push mov dec jbe add (bad) xchg ficompl jae popa int scas push sub jp shrl mov out faddp test cs (bad) int3 push dec dec push mov loopne push pop les cmp add loopne lret ss (bad) fdivrs pop mov fnop out and xchg rolb lods aas (bad) mov dec inc call mov sub xchg jb push out adc xor aam out cmc out outsl sbb inc xorl xchg push push xor fs aad enter lea xchg loop ret test (bad) mov cmp lods cmp loopne bnd push out inc mov rolb aas dec in imul mov add scas push dec in or in jge adc mov iret insb mov xor mov ret inc dec imulb ds loop mov push dec cmpsl sub sbb mov cmpsb cmpsl (bad) dec cmp mov push dec mov and hlt pop xchg add ljmp pusha and sub ret inc lods mov fdivrs out (bad) (bad) int push dec (bad) mov fdecstp jmp sbb mov mov and cwtl sub shr popa pop lods push sub xchg push push stos ss sahf ficompl push mov daa out add cli and and jl das pop sbb push dec out cmp rcrl push dec dec xor pushf jmp inc std sbb mov jmp flds lret or pop js push sub cld dec lods push sub shr adc pusha in and jecxz pop push (bad) dec mov je das nop lds inc je repnz into inc sbb inc xchg les push mov hlt mov push (bad) fwait repz push dec lds ficomp pop out into inc sbb inc subb lret les xchg nop (bad) mov loope mov popl mov cli adc xchg into push dec sbb lahf sti ja cs movsb rclb fistl mov (bad) pop push loopne jae cmpsb (bad) xor dec inc xchg cmp lcall fadd and addr16 fisttpll arpl imul cltd stos xor pop pop pop (bad) jnp push dec jg repnz pop test adc popa bound int sbb xor xor mov stos lcall arpl lods js ja add cmp push (bad) ljmp fs insb js (bad) dec and lea inc dec add aam jmp fdivl mov loope insl lahf or jo inc pop jbe fnstcw stos jle divb (bad) cmpb fidivr jge cmpsb out push sbb mov mov jecxz loop lods mov fcoml mov push mov stos fs dec inc fildl xor bound hlt movsl out addr16 mov pop repz push test out add call lea fst in leave lods mov cmp loop and xor xchg xchg stos out cmpsb adc mov test jge push sub mov mov into jle and push pop mov incb imul xchg popf inc cli sbb mov cmp jno repz movsl and mov add sti movb inc test push fldcw mov push iret repz das pop mov test shll mov stos push sub test sub sti adc jne sub clc int cmp xor scas add ljmp dec popa pop push jo int xchg call cltd push lock cmpl dec ss inc push add sub mov inc add mov sub outsb ss cmp jns nop mov mov push xchg stos push sub or push test xchg sub jae inc pop in push push mov movsb or dec push add push sub repz jle or mov js xchg mul cmpsl movsb outsl (bad) aas mov jbe pop rolb jg rcrb adc (bad) call es jge jb fidivl das (bad) jo mov test inc lods adc ret (bad) sarl adc repz sub cmpsb cli sbb pop pop test or adcl cmpsb fistpll push dec pop cs sbb pop xlat cwtl test sub imul call xor stos out cltd cmc pusha stos or fs adc ret pop mov xchg push jle jnp punpckhwd jne js rcrl sub outsb arpl les test or mov or test inc adc sbb fbld xor rolb lret addb pop enter loopne and xchg fidivl mov fsubl in lret dec push xor mov or insb xchg add lock dec jne and cmc adc imul in xchg push push test bound imul sub xchg xchg adc pop pop and push dec ja mov cli or jae xlat stc sbb jg mov nop (bad) in push test mov dec sbb jb push sahf push ret xor mov in hlt and rorb imul adc repnz mov dec scas ss sub mov mov ret xor xor push pop jb mov sbb clc scas (bad) mov xchg sub dec clc sbb mov jae add aam pop pop push mov sub xsaveopt dec outsb adcb inc ljmp adc pop cmpsb fdivrs sub faddl pop mov xchg das adc dec insb inc scas (bad) rcrb (bad) xor xchg loope and inc mov dec cs ljmp mov mov inc sbb pop incb mov jbe in hlt dec inc leave (bad) scas ss clc sub and or sub dec hlt mov sbb mov inc dec cld mov jo nop (bad) jns mov in (bad) fimull cmp xor dec xorl and jg mov mov sub pop inc push (bad) int3 or add xchg scas xchg lea sarl dec mov xchg mov jo xchg or nop dec push (bad) cwtl sti and imul adc fiadd sbb jl sti popa loop cmp sti push mov cmp or lds push ret jecxz lret dec adc lcall xor jno mov jae call (bad) sarl mov xchg mov and jl ljmp cmp jbe shrb mov stos dec sahf push dec jp push mov enter fbld or or adc cmp pop ja std fwait orb sub sbb nop ficom mov inc mov jae sarb mov mov je xchg enter dec dec xchg sub (bad) addr16 sbbl jbe into rcl ficomp std sti ljmp ret mov fcomp mov mov mov lcall mov sti ljmp mov ljmp cli stos lods scas scas cmp jmp lods jns pushf mov cld cli fdivrs ljmp in in mov mov scas scas mov dec cmp sahf pop std leave sti (bad) sti ljmp in mov in mov push scas scas insb mov lcall std cld cli mov mov in mov in mov in mov in mov mov mov lcall std cld cli call mov in (bad) call in mov mov mov lcall std cld cli sti std icebp ljmp fimul shr int mov lds (bad) icebp fimul (bad) idiv push mov int out pop in push mov in push sti xchg lods movsb scas push mov xchg mov (bad) call call (bad) call orl scas imull sbb mov mov aas clc (bad) (bad) in ljmp add jae cli mov lods mov mov mov cli cli mov mov out shr jmp xchg out mov in in idiv jecxz test sub lock cmp movsl cli std std push jmp daa jmp pop mov scas dec lods cmpsb mov add cwtl std xlat (bad) (bad) stc std ljmp movsl (bad) out jmp mov test loope movsl mov sti mov stc out cli outsl stc test decb jmp sub mov in in inc (bad) jecxz test jae cli mov aad popf pushf jp add std std jmp adc adc pop call push stos mov std movsl jle pushf mov xchg cwtl std cmp stc std ljmp arpl jmp xor and ret mov std cli cli inc clc mov jmp cmp mov in in imul lods test dec mov jne aad popf pushf push movsl cli std std cli in mov in in test mov in in decl mov mov pushf mov std mov ljmp mov pusha ljmp in mov xlat mov sti cli cli ds mov ljmp mov jmp (bad) in in push cld imull out cmpsb test push pushf popa sti mov std std (bad) in mov in mov mov stos jecxz cmpsb mov pushf mov std mov ljmp mov mov jmp std test fisubrl add adc sahf cmpl adc out cli push cli jne decb decl clc in pop std xor mov cmpsl xchg lock xchg cmc jb std std call in xchg loop mov in movb movsl imull int pushf mov mov xchg cwtl std test mov std ljmp pop andl jne out mov mov mov cli cli (bad) mov ljmp mov in (bad) repz movsl test ret mov test lock ret pushf adc std jcxz mov in cmp cmp cmpb (bad) cli mov jle cmpsb mov pushf mov lods lock idiv ljmp jl mov ljmp lods add cmp ret mov idiv cli pop divl out loopne mov out sub test je test mov lock inc mov lock std stos loope sub fsubp and fwait out cli xor fbld sti pushf mov mov xchg cwtl std cmp mov std ljmp pop (bad) fwait out mov loopne icebp mov mov mov mov cli cli popf icebp shl ljmp mov mov in in pop mul lods test add xor icebp ds std xor in push out test in adc cli mov mov mov mov fcomi adc std ljmp mov mov lods int3 mov in std ret mov std cli cli jne mov loope ljmp in in sub jecxz test or sub push lock cli std std adc mov in in jl mov in in adc mov lods scas (bad) lock mov std fcomip mov xchg xchg loop cli mov lret mov repz fimul (bad) repnz popa repz loop ljmp ljmp scas mov (bad) lcall std cld sti jmp pmulhuw mov in mov out mov in in mov jecxz cli jae test test cmpsb mov mov idiv (bad) cld sti ljmp in stc in in mov in icebp cmc mov mov lcall cld idiv (bad) jnp cld mov jecxz ljmp jmp mov mov scas scas imul mov sti hlt std shr in mov in (bad) in mov in jecxz (bad) in mov mov mov mov lea cld cli xor loopne aam ljmp in and cli mov scas scas dec stos mov mov sbbl sti std xor iret mov mov cld in mov in stos cli repnz lods scas mov lock mov cld cli jg sti ljmp in mov in pop cwtl ljmp scas mov loope mov aam pop std idiv sti std pop sti in mov out (bad) ljmp loop mov jae sti scas jbe and mov pop cli clc cld jmp test mov mov in or scas idivb mov push cld stos cli pop std js cld mov mov and mov in cltd cli push mov cmc mov pushf adcl lods std or out mov in lods stc in mov in mov sti stos lods out mov aad insl mov out cld cli xor mov in mov dec lcall je mov test clc mov cld out sti std cli jmp mov in mov std mov stc in mov in in cli mov movsl scas mov ret mov lock mov adcl imul ljmp in cli in sub ljmp scas mov in mov (bad) cmc pushf test std sti sti std idiv in mov in out repnz in in mov lods shrl lock icebp std fsincos sti cld sti ljmp popf mov in in mov in xor mov mov lcall cld test lret cld sti jmp mov cli mov enter mov cli lcall mov mov cmc stc jns cmpsb jmp mov in sar in mov in push mov cmp lods es add stc mov jmp cli xor jb vpcomuw in mov loopne mov lods mov mov (bad) cltd popf sahf std sbb sti std jbe push mov mov in mov cli in mov xor scas mov lock mov subl pushf cld cld cli cwtl ljmp cmp out mov in jg ljmp scas mov out mov (bad) and sti sti std or in mov aaa ljmp leave hlt mov aaa lods adc xor nop mov xor ljmp push mov in out ljmp lods pusha mov lcall (bad) xor ss cli jmp mov mov in mov in cmp cli jl scas scas mov icebp fwait mov std sti sub sub fisttpll fmull fucomi icebp jecxz lods mov mov mov mov std (bad) icebp pushf mov in (bad) icebp cwtl mov in sub cli dec mov scas cmpsb mov pushf mov std lods fidivrl sub stos loopne ljmp lods mov pop mov xor xchg cld cli cli xchg fdivp jmp mov dec ljmp in in dec fnstcw test jg mov test popa stos fwait (bad) popf pushf mov out std std lock mov in int cmpsl mov in cwtl mov push test cmp pushf mov pop pushf cwtl std add hlt cld std ljmp cmp mov rorb mov mov adc adc std cli pop rclb in mov fdivrl jmp mov fdivrl mov in int3 lret insb lods mov mov pusha (bad) mov std fldt mov in test sub cs lahf cli xlat lahf push scas mov ds sub mov (bad) std add paddb ljmp fdivrs mov lods das pushf pop mov sahf mov (bad) ljmp mov fistp (bad) mov in mov lods scas mov mov orl in std cmp (bad) mov in push fiadd cld in adc cli scas cwtl mov sub mov mov insl iret icebp cld in ljmp xor fimull sti stos lods xchg cltd (bad) mov nop mov (bad) cli cli jb push jmp and jmp sub mov pop jecxz mov sbbb cli std decb dec mov mov in cltd in (bad) call mov mov jbe mov mov (bad) std leave pushf jl ljmp ljmp das mov sti stos lods pop leave cmpl cli hlt xchg cld cli cld mov xchg xchg out in mov imul lods test rcl mov dec sbbl ljmp in jo fwait (bad) sti in stc stc pushf call push scas cmpsb mov mov (bad) std inc mov ljmp ljmp out and stos lods xchg adc mov movb out pop stc in cli xchg pop cltd ss cld in mov scas (bad) mov dec orl in std sbb popf sub inc out (bad) cli jmp out stos cmpsb mov pushf mov std pop js clc in ljmp mov into out ljmp lods cmp addr16 fisttpl jmp stos jp js out mov out mov mov clc das out (bad) movsl aad rorb js ljmp mov in or mov in pop or jmp cmp sbb fwait mov add mov cli ljmp cmp mov imul mov mov sbb sbb jl in mov push jmp mov push mov in popf jb test scas nop xor movsl (bad) lock add lcall std jg inc mov in sub mov in push add mov bound push sub lock mov mov ljmp xchg add call inc (bad) mov mov sbb adc pushl jmp mov data16 in mov jcxz jmp (bad) jo lods scas scas aam or sbbl cli std xor mov in sub mov in cmp icebp out (bad) cli dec or scas cmpsb stos mov mov xor aas std std ljmp insb sub jmp push sti mov mov sbb cmp xchg mov cli mov mov mov test rcl loop aad js mov int jae ret std lods jge dec rorl rorb aad fistpll or lret int3 or jge pop mov cs jmp push cs ljmp lods lods dec mov mov lcall out cli stc std dec in mov in lcall mov int cli mov mov scas test (bad) std cmpsl loopne std stc ljmp decb call lods scas scas mov xor lock cli loop out ljmp in mov in adc cli jb scas scas mov ljmp sahf std cld cli std std jb xchg mov in cltd enter in ljmp lods lret mov lahf xchg or cld cli sti std cli ljmp cmp lods out adc sub sahf mov mov pushf cwtl std loopne sti std sti ljmp jmp fmulp in mov in iret clc push mov scas cmpsb mov lcall std cli cli xchg fsincos ljmp jp in in je ljmp mov mov lcall loopne cli cld std aaa into in mov in iret call jmp add mov mov cmpsl and test (bad) lods mov mov je repz sti mov repz mov in and mov mov nop mov std ljmp mov mov in jmp cli pop test mov addl data16 push mov in in in mov in cli mov repz mov sub test imul sti std std ljmp xor mov fisubrl mov mov jg inc pushf mov insb sar std sti ljmp clc mov in mov in out icebp and mov lcall std jmp ljmp add ljmp mov mov popl add loope sti ljmp sub mov (bad) mov mov mov jb mov pavgb cld out hlt movsl ljmp leave jmp (bad) mov mov test sahf std cli cli clc fcomps mov in mov in fildll subb sbb mov scas sbb sahf std cld cli std std sbb jmp (bad) in mov in ljmp lods push (bad) mov lock mov sar cli sti std std ljmp shll in push (bad) lods mov xor nop jg inc pushf mov std sti ljmp lds ljmp scas mov lcall cld aad pop sar ljmp mov ljmp mov mov lcall aad sti (bad) std push (bad) ljmp in ret ret mov mov mov ret sbbl stos cld aad push mov sti mov mov lret mov mov test sbb fwait pushf sahf std ljmp mov fimul in mov cli out lahf scas scas mov fucomi mov std cld cli in std mov xchg mov in test in mov in ljmp lods negb lock movsl push (bad) ficompl std std ljmp pop mov in in inc xlat lods in scas insb mov mov popf (bad) clc into sti std sti ljmp test mov in (bad) cli xchg call sub stc std mov ljmp mov ljmp cmpl sbbl mov mov in iret jmp movsb mov in mov mov cwtl pop mov mov cmp data16 mov sarb sbb push mov lods scas scas (bad) mov aam inc mov pushf sahf std lcall mov mov (bad) pop fwait scas scas mov shlb sahf std cld cli popf (bad) adc in pop fucomp mov in ljmp lods push cwtl mov call iret pushf (bad) (bad) sti std in ljmp fnsave sti in inc int3 (bad) lods cli scas sbb mov mov fistp std sti ljmp mov mov in cwtl cli out ljmp lock ljmp ljmp test mov in mov lods lods cmpsl xchg in mulb mov mov stos in mov in lahf ljmp lods mov mov (bad) out (bad) lock lret fwait pushf (bad) std and mov lret mov cld mov aam mov lods scas scas mov sahf cltd mov (bad) fwait pushf sahf std in cli xchg les mov ljmp pop in (bad) cli jmp scas mov lret fildl cld cli ljmp in popa lods in mov in std mov lods (bad) call xchg lock mov add cli sti std ljmp ljmp sti in mov scas xor mov mov mov pop mov std sti ljmp mov push movsl in mov in cwtl cli arpl out xor mov std cmpsb cli lahf mov ljmp test shr mov stos lods or sbb mov std das mov cwtl ljmp ret cli mov xchg mov mov dec mov ret mov cld mov rcl mov lods scas scas mov dec popf fcomi rorb std in cli bnd movsl call mov in mov in test mov scas scas mov into (bad) mov andl sahf std cld cli ljmp in lods movsb in mov in std mov sar clc out mul mov lock stc add cli sti std in ljmp pop (bad) ljmp (bad) icebp scas js mov mov std adc sti std sti ljmp mov push mov cwtl cli xor ljmp lock std mov ljmp test fldl2e in mov stos lods stos out fstpt lcall mov or cwtl ljmp bound mov mov mov cmp ljmp cld mov scas test sub scas mov mov xrelease fwait pushf sahf std in cli mov mov mov in mov in gs loopne (bad) sti scas scas mov mov mov adcl std cld cli ljmp in jge in mov in std mov lods mov mov sub cld cli sti std in ljmp mov ljmp mov adc mov mov (bad) jmp out std loopne sti std sti ljmp pushf mov mov mov in lahf cli mov mov lcall decl ljmp popf mov in mov stos lods imul mov lcall mov out mov mov in cwtl ljmp dec mov cli mov std sbb mov (bad) mov incl in mov cld mov in xor mov out rcr pushf sahf std in cli mov inc ljmp in mov in inc rclb cli xchg int3 scas scas mov mov jecxz sahf std cld cli in std cmpsb mov movsl mov mov in cli mov cmpsb dec clc lods out mov lock pop sbbl cli sti std in ljmp sbb ljmp mov scas es xchg fisub mov std les std mov mov mov mov in cwtl cli jg inc lods sub xlat les xorl adc cld in cmp mov ljmp loope mov lcall mov stc outsl std jg in mov in lahf ljmp inc mov scas jno (bad) mov mov lea xchg loope in mov sti mov test dec in cmp scas mov push lock pushf sahf std in cli push lods (bad) jmp mov in mov in lods fsubrs (bad) scas scas mov mov jnp sahf std cld cli ljmp in cltd xchg mov in std orl mov mov clc push fxch xorl mov cld cli sti std ljmp ljmp sti in stos (bad) lods pop scas mov lock aaa std cld cli sti std jnp cli test inc mov in in mov lahf fcmovbe call mov lcall cli sti std sti ljmp stos mov mov in or lods lea cld lock lcall test sti ljmp inc fisttpll in mov cmp into mov mov or in mov in or sti test das in mov mov lcall mov ljmp mov in mov insl mov int (bad) jo pop cli mov mov cmp sahf std jl in fstpl mov mov in mov in mov cli test outsl lods scas scas mov shrb pushf (bad) xchg cld cli sti std in ljmp cmp mov in call scas test mov mov fldcw pushf inc std pushf xchg sti std sti ljmp xor and lahf cli jecxz sbb xor mov std daa cli xchg xchg sti ljmp pop mov in and ljmp repz mov lcall mov xchg test mov in lahf ljmp push orl mov push out sbbl das (bad) adc lods stc ljmp mov mov lods scas scas xor imul mov mov mov in jnp cltd jmp add scas scas test xor jg scas out sahf std cld cli push mov mov in fstps push sbb out cli dec lods ret mov scas jmp jle cld cli sti std jge pop xchg (bad) in jge adc ljmp fwait inc scas pop scas enter xor nop jg cld pushf push js sti std repz sbb ljmp lods push mov lcall decb cli scas mov ljmp adc ljmp mov mov lcall sahf add lahf in mov in pslld xchg (bad) in push mov lcall aad pop mov mov pavgb ljmp mov mov mov pusha mov std jg into cltd clc out push mov mov mov in call scas scas mov ljmp sahf std cld cli popf incb mov lea in push xchg in mov in mov inc lods push (bad) mov call fs fiaddl push leave out int3 call ljmp popf xchg test mov nop jg mov js std sti ljmp jmp mov in psubd call and cmpl adc ljmp mov ljmp (bad) cmp lcall xchg fwait cli (bad) cld push imul ljmp imulb cli mov mov fimul sbbl arpl std jmp or imul in cmp scas and popf mov push fwait pushf sahf std jp xchg xchg lods out jmp push imul call scas scas mov pushf aaa mov std cld cli in std xchg insl in mov in cli mov sub sub lock in adcl sti std in ljmp pop add in in mov in js push lods mov mov mov icebp cwtl xchg cld pusha jae std sti ljmp decb ljmp lods mov push sub sub (bad) jmp ljmp test add lods lods lahf (bad) mov lcall lea in cld sti ljmp push xchg add sti mov in mov mov fwait sub sbbl add mov in mov stos mov iret mov mov mov xchg sahf std lcall mov popa mov in mov in xor sti cmp scas scas mov shlb sahf std cld cli popf (bad) adc in stc gs mov in ljmp lods and mov call mov cli sti std popf jmp stos jmp sbb in in mov hlt jp (bad) mov nop test dec push cli mov inc out enter in mov in lahf cli pop fidivr mov lcall stc (bad) stos outsb sti ljmp or adc in mov lods lods mov mov mov or aad mov mov in lahf ljmp cmp mov int movsl mov lcall std jno lock lret sub in mov sti mov mov fucomi aad mov mov stos mov fwait pushf sahf std ljmp mov mov in mov in (bad) icebp xchg mov scas mov mov ds std cld cli in std adc mov in mov in cli mov xchg mov mov mov mov stos popf push pop cld cli sti std in ljmp pop sub in in mov in insb addl mov mov cld lock sti std sti ljmp fmull ljmp lods xchg mov lcall dec sti imul in mov in mov rorl ljmp aam mov lcall xchg dec in mov in lahf ljmp mov lods mov mov mov lods xchg dec jmp sub sti mov adc pop mov mov stos mov ljmp mov dec mov in mov in leave hlt adc mov scas mov lea mov std cld cli in std bound inc dec in mov in cli mov xchg mov mov mov loopne stos popf (bad) pop cld cli sti std in ljmp test mov in sbb xchg mov mov negl sti std sti ljmp fmull ljmp stos xchg mov lcall clc int lret pop sti ljmp mov ljmp das mov push lcall jge clc into cld fwait inc in mov in lahf ljmp sub mov cmp and stc jnp clc into jmp and in mov sti mov in add scas mov sbb mov sub cli (bad) jg out aad mov mov cmc in scas in mov ret scas mov jb lea std cld cli in std lcall inc in mov in cli mov xlat incl mov or xchg sti std in ljmp lea in hlt jp lods in scas and mov mov cld pushf (bad) jo sti std sti ljmp test mov in out stc fs scas in aas or lock std mov ljmp mov ljmp mov mov lcall out (bad) mov mov in (bad) push call mov lcall movsl leave icebp or mov loopne adc mov push daa ljmp popa pop mov lods mov jno xlat mov std cli cli sti jo out mov ljmp adc (bad) sti (bad) add mov faddl fdivr std std sub (bad) mov mov in ljmp lods pop add lock mov cld cli (bad) std ljmp movsl cmp in int3 mov in mov stos sti scas aam mov mov or lcall fucomi ljmp mov pop in mov in (bad) cli pop and adc subl out dec sti ljmp rorb in mov mov mov lcall insl fs mov mov in (bad) xor mov pop mov mov sub mov mov test ret jmp cmp in mov jmp outsb jl mov lods scas scas cmpsb mov (bad) mov xor cli sti outsl arpl mov push mov in mov in mov sti es scas scas mov bound mov (bad) and sahf std cld cli std std xor mov mov in ljmp lods pop sbb test ficomp nop test popf xchg dec cld cli sti std std ljmp lds ljmp imul lock mov adc dec sti std sti ljmp mov ljmp scas sarl mov cld popf sti pop dec sti ljmp aam mov in ljmp cmp mov lcall imul pop in mov in (bad) (bad) in lea mov cs cmpsb loope loop mov loopne ret sti cltd jmp cmp in mov in and scas cmpsb mov stc mov xor std cli and jmp mov mov in lods pop stos ljmp mov data16 sahf std cld cli cli std jecxz je xchg test in in mov lods ficom mov lock fiadd cld cli sti std std ljmp popf xor in in mov in lea stos shrl lock mov sbb lcall sti ljmp cltd mov in mov in mov mov mov lcall std mov pop cmp ljmp (bad) (bad) lahf in sub ljmp fidivrl mov jg cmp ljmp aad data16 mov lods scas cmpsl pop and mov mov fsubs std jnp in mov in mov jmp sbb add mov mov sbb popf std mov ljmp out mov push sti mov mov je add std (bad) cli mov (bad) popa in mov in mov in stos mov cli xor mov pop stos xor cld cli sti std std repnz xchg (bad) in sbb cmp mov in (bad) mov lock xorb popf or cld cli sti std clc ljmp jle ljmp stc inc mov xor lock mov sbbb sti std sti ljmp ds jae in mov in mov mov mov lcall fmull addr16 sti ljmp imul in mov mov cwtl sbb and lcall in loopne std pop jmp mov in mov stos mov ss dec in mov mov mov xor popf std mov in inc mov in mov out mov cmc pop xchg add daa sti mov mov outsl mov fwait pushf sahf std (bad) cli mov mov mov in mov in stos mov into mov shrd test imul clc std mov ljmp out mov adc xor mov lcall clc ljmp sub mov in iret stc inc mov xor mov sbbb sti std sti ljmp hlt mov in mov mov mov lcall pop mov cs mov in mov ljmp shr mov mov mov sbb cmpsl dec icebp lcall std std cli adc sti ljmp in mov in mov in sub scas push cmpsb mov xchg mov cld cli cli std stos hlt in mov in adc in mov in add cli (bad) mov scas mov lock mov fwait pushf lahf std jne sti std stc ljmp sub ljmp cli mov mov lcall std (bad) cli sbb sti ljmp out mov iret in mov in fnop mov cwtl mov stos mov cld cli stc std mov in mov in adc in mov in or (bad) faddl inc cmpsb fwait pushf lahf std (bad) fdivr std cli ljmp sahf scas ljmp cli mov mov lcall std std cli dec (bad) ljmp out mov in mov in sahf sarb xchg mov mov push aam cli cli std pop ret in mov in mov in mov cli movb mov test cld sar std (bad) ljmp xchg mov jb mov mov mov lcall std std cli xchg sti ljmp out mov in mov in icebp xlat mov xchg mov cmpsb mov cld cli cli std xor in mov in insl (bad) in mov in in cmpsb ljmp scas mov lock mov lods fwait pushf lahf std fs std cli ljmp icebp mov stos fmull lahf mov rcrb sahf std std cli cmp mov mov in mov in adc mov andl mov cld cli stc std cs mov in (bad) aam mov in jne ljmp scas mov lock mov fwait pushf lahf std leave mov mov ljmp push lods mov mov mov lcall std std cli jb sti ljmp in mov scas in mov in nop mov xchg (bad) mov int3 mov cld cli cli std adc mov in insl int3 ljmp scas mov lock mov fwait pushf lahf std or into ljmp in in mov stos mov mov mov lcall std std cli push mov ljmp in mov movsb in mov in movsb mov lods scas scas fpatan mov rorl cli stc std mov in add in mov in inc ret ljmp scas mov lock mov enter std push mov std cli ljmp cld (bad) in mov lods pop jecxz mov lcall std std cli cmpsb mov ljmp out mov in mov in push scas pop mull (bad) mov cld cli stc std jb in mov in sub in mov in sub cli jcxz scas mov lock mov int3 fwait pushf popf std popf mov std (bad) ljmp je ljmp cli mov mov lcall std clc cli scas lods sti ljmp in mov mov lods stos mov jmp mov mov cld cli cli std fidivrl add dec fucomi in mov jnp scas scas mov lock mov std mov sti std clc ljmp pop (bad) in out mov mov inc cld mov movsb lcall std (bad) cli mov addr16 xor jl mov out mov fisttpll cld cli cli std dec mov and xor cli stos sti scas scas mov lock mov aad pushf lcall ljmp and ljmp cli mov mov lcall std cli cli mov mov mov in mov mov insb lods mov loop mov mov cld cli stc std mov and sub ljmp scas mov lock mov fstps mov sbb ljmp arpl inc hlt mov lods lcall std (bad) cli mov add out mov mov in test mov out mov mov cld cli clc std cmp push mov mov in loope ljmp scas mov lock mov std or ljmp (bad) (bad) ljmp cli mov mov lcall std clc cli negb out lea mov mov in jl mov fsubs ljmp cld cli stc std out mov mov in sbb in mov in or cli stos enter mov fwait mov out pushf lahf std test ljmp pop out ljmp cli mov mov lcall std std cli and outsl xchg xchg mov in mov popa (bad) mov in sbbl cli std pop xchg mov in test in mov in and xor scas scas mov lock mov fwait pushf lahf std icebp xchg sti std cli ljmp mov mov mov mov mov lcall std (bad) cli repnz ljmp in mov in mov in sub sbb lock stc mov cld cli cli std cli mov mov in rcrb sti ljmp scas mov lock mov std mov sti std cli ljmp dec std ljmp cli mov mov lcall std std cli (bad) mov ljmp in mov cwtl in mov in pop test lds or cld cli cli std into imul jmp or mov in jno ljmp scas mov lock mov std aad sti std clc ljmp nop or in in mov mov jg mov je mov std (bad) cli mov mov mov in mov addr16 mov in mov lods lods scas mov lock pushf lret cli cli std dec popa in mov in mov mov in mov cli and scas scas mov lock mov xchg ja std cli ljmp in pop ljmp cli mov mov lcall std std cli xchg ljmp in mov jge mov in loope mov sub sbb cld cli cli std lret js mov in and in les ljmp scas mov lock mov push fwait pushf lahf std pop outsl sti std stc ljmp in ljmp cli mov mov lcall std std cli sbb ljmp in mov in sbb scas insb sub mov pushf mov std (bad) jb mov in sbb mov in inc adc in mov pop xor lret cmp sbb arpl std cli ljmp mov mov lods and sub mov std cli cli sbb ljmp in mov jbe mov in lds lods scas scas enter xor cwtl pushf ds cli (bad) std sub mov in mov mov in fcoml divb scas scas mov lock mov pop fwait pushf lahf std pop data16 std stc ljmp xor mov jno cli mov mov lcall std std cli (bad) arpl ljmp out mov jae mov in shlb lods scas aad mov push mov cld cli cli std (bad) jne mov in test in mov in rcll ljmp scas mov lock mov std cmp ljmp int3 sub in out mov dec mov mov mov lcall std (bad) cli push pop sti ljmp jmp mov in loope mov sbb sub cld cli clc std xchg mov in adc mov in pop sub in mov imul mov lock mov std lds std cli ljmp test ljmp cli mov mov lcall std (bad) cli push pop sti ljmp jmp mov in clc pop mov sbb sub cld cli stc std and mov in jl in mov in std sub xchg or add lock mov daa fwait pushf lahf std inc pop sti std stc ljmp scas das ljmp cli mov mov nop mov adcl cmpsb std fldl2e mov ljmp mov mov scas adc jecxz jg rcrb std (bad) ljmp pop test in inc mov lods decl hlt xlat cmpsl mov std pop stc or pushf ljmp inc mov (bad) inc in mov scas cwtl mov cmp jecxz dec (bad) and std sbb rorl mov pop xchg (bad) in enter leave scas add cmp pop std (bad) lret cmp push mov add sub pop (bad) sub xor sbb std insl cli or ljmp mov mov in jp (bad) fldenv jmp cli cwtl insl out sti mov mov call inc in pop xchg out in js dec mov scas inc mov jae jg sahf popf idiv pavgb cld cmp pop xchg out in xor push xchg out in int sbb movsb sti repz push jo lahf mov cld sub jmp lea imul ljmp fucomi addr16 inc movsl mov mov jmp xchg std or mov mov sub lds call cltd lock mov add jmp mov in and repz xchg cmpsb mov mov xchg aad insb ljmp xchg mov imul mov lods (bad) scas in adc mov lret subl inc dec mov addb clc sti cmp leave scas icebp mov or paddd addr16 push add dec in vpshufhw in mov cli out pop mov mov std mov adc nop mull loopne mov popf loopne mov addl fisubrl out inc and push mov inc aad mov mov in aad or mov int3 mov (bad) mov sub push (bad) cld jp loopne out in add int3 and inc scas sti xor sub add cld jne popf push leave jmp mov mov mov andb stos mov imul and or jne sti out daa inc dec xorl pop and pop leave scas imul daa xchg push (bad) cmp stc xor ds in mov out mov inc dec cli arpl jp jb popf mov gs decl out ljmp dec mov inc loope dec in notb cmpsb pop stos stos adc and push sar jp iret inc rorl mov ret out cli sub mov push mov sub xchg sbb adcl ja pop xchg (bad) in or out mov inc and lods in add mov pop adcl push cli mov cmc loopne mov inc mov popa mov subl push lods sub adc shlb (bad) cmp sar cwtl inc and cmp add pop cli xor je xchg mov dec mov jp cmp pavgb (bad) in mov out in cs stc clc push scas lods add mov cmp test gs sbb std out (bad) sbb ljmp push out je sub sti movsl das lock adc push icebp inc std mov in jp aam mov push and out cli jbe lds mov sub push imul jmp and ret and out mov repnz lods xchg add mov mov xor push cli scas push pushf ljmp in int push test lods shrd xor ja jb mov std mov out jp test shr or fadds xor leave hlt sub ja ja f2xm1 mov jl inc out clc call popf lea (bad) scas lsl mov movsb leave pop cmp int push clc dec push add idiv out mov (bad) mov lock lret cmc dec and test testl test out jp jge jmp adc dec mov mov daa std mov popf negl (bad) cld bnd inc jmp and in and sti jnp stc add mov movsl ficomp test xchg xor movsl jmp xor mov lcall inc repz jmp pop stos fist jge loop or add notl mov in and test call enter cmpsb mov mov fisttpl xbegin pop call sbb xor call mov sub mov jne pop xor repz clc std push push call jmp and fucomi xchg push aas mov lods stos dec lock xchg mov mov mov inc test sub fiadd xchg out fsubs dec loope (bad) cld add mov push (bad) jae (bad) sub xchg push dec repz lcall daa lcall std jae and lea mov inc (bad) sub dec repz clc inc push sbb add call mov push mov mov mov sti cmc cli sti adc jae ja jg adc add repnz pushl mov mov sub pushf cmp imul pop ljmp mov mov lock (bad) xchg test cli movsl sahf pop cmpsl mov repnz sti (bad) push (bad) out jge fild in mov out fsts scas imull push pop and and and das std aaa inc inc (bad) ss ret inc sub shr cmc cli out push leave scas fdivrl stos mov sub pushf xbegin push popf es sub es in jge imul add pop fimul out (bad) std stc dec push (bad) jmp mov stc call mov mov adc mov icebp push daa les test lcall out aaa inc icebp test call insl cli dec mov scas adc sub inc decb loopne cld and pop es insl ljmp in dec mull mov movsl inc pop gs push negl cli push addr16 or or jp (bad) mov cmp dec pop cli repnz les mov in jp mov cmp decl or test repz ljmp out in mov out cmp push xchg (bad) in adc cli inc scas push add jo std mov lock push mov inc test inc mov divl out or mov aas mov mov bound std or mov aam fucomi sub movsb (bad) clc cli jp xor in adc jb pavgb test pusha out push xchg (bad) in cmc mov adc pop test mov test cld jne dec push gs mov loopne jl daa pop dec mov jmp scas lods inc or mov lock sahf sub fs jb dec inc inc fwait arpl cmp mov pop and add or push mov test adc pop decl cmp jb pop and and jmp pop inc pop call jbe pop mov jne addr16 std or ljmp sbb sbb mov in jne lods dec lods push adc (bad) mov mov daa call lea aam jae adc pop out clc enter loope push mov movsl xor dec pop std mov decl call insl mov scas into push mov inc (bad) fwait or stc jge test insl mov test pop enter push dec xchg stos push scas push mov imul sbb push pop out lea out dec inc out lea in or add leave scas jns adc fsub mov stc sub std and jno cmp ljmp or lods jbe lcall mov orl repnz or aad movsl mov imul ljmp fwait jmp fildll mov nop cmp and push pop cmp ss and scas pop xor jg dec mov popl pavgb jmp jbe inc out enter mov xchg inc (bad) lret test mov mov mov cs int ss pop ljmp pop mov pop xchg lcall scas stos push mov aad loopne push rorl out or mov call sbb xchg adc enter imulb sbb mov pushf scas (bad) push push jmp inc clc (bad) jmp xchg (bad) in test shrl scas mov in ds jmp pop (bad) lods mov pop mov (bad) int3 pushf mov mov nop mov repz mov cli lahf insl dec mov inc mov je mov (bad) cmp push fistpll hlt in mov xor pushf idiv stos dec add and pusha ljmp sbbl cmp mov sub (bad) (bad) xor push nop ljmp test sub dec xchg mov loop loop and jmp lahf popf lret cli mov jge ds adc sbb add xchg in call leave scas icebp mov fisttpl mov std mov stc mov in lods (bad) and sti sti stos jae mov inc nop sahf mov cld stc cli xlat incl out cmc out call mov in mov cmp and or jp (bad) std mov fs in (bad) mov in enter mov xchg scas shrb std cmc lahf mov std (bad) stc xchg (bad) ljmp lods mov jmp (bad) mov mov loopne mov stc cli mov mov mov in ljmp mov jmp pushf int jl aad mov insb mov in shr insl mov in (bad) mov cmpsl cli cmp mov das (bad) rcrb daa cmc aad mov lret mov in sar lods lea nop icebp rorl cld cli jl call mov in or outsb mov in mov cli rep or cmpsl and test pushf (bad) std mov cmp lock mov mov lods out inc mov lcall cld out test mov mov in (bad) cli lods mov mov dec (bad) mov std test in shr mov in mov cli call mov orl fwait (bad) call out xchg ljmp mov lods out add cmp pop (bad) out cli mov cmp (bad) mov mov in sar scas mov repnz rorl xlat cli fdivr call (bad) shr fsubp out mov in movsl mov movsl in stos or orl jg mov jmp jmp jmp cld mov mov (bad) sbb cli cmp dec mov mov in sar mov scas jmp lock xlat cli mov in lods xchg dec in shr xchg inc in movsl mov xchg cli call mov cmp xor enter mov mov inc mov lods out pusha subl ret pushf sahf std cld cli in std cli ljmp in mov in in mov movsb andb stc flds ds pop repz hlt dec jecxz adcb jecxz subb out lock cmpsl sub sub pop (bad) pop mov testl loope (bad) mov (bad) adc loopne into loopne imulb mov lods cmp mov divl insl out test insb out test jecxz xchg loop hlt loope (bad) mov cmp pop xchg jno insb repz jmp in leave xchg jecxz in xchg jecxz cmc or mov scas pop (bad) jl mov in ret ljmp xchg cld psubd jb dec cltd inc cld cmp add scas mov loope cltd mov int (bad) in inc jmp in cmp xor sti sbb cmc (bad) lods call int (bad) mov loop fwait or sbb adc outsl jmp jae inc ljmp pop lcall in out leave mov pop mov in pushf imul out mov mov stc sub inc pushf push clc ss add lods mov mov mov cld cli pop push mov in mov (bad) out mov in out mov in scas cli mov mov mov pushf sar icebp cli icebp std mov out loopne ret ljmp repz xchg (bad) lods mov scas mov xchg mov orl hlt std cmc ljmp fwait mov in clc mov lods cli scas lods sbb xor mov pushf cmp (bad) into mov in cmpsb ljmp shr clc (bad) lods test test fimull sar lret cli int xor in pop call and jb xchg scas xchg mov out add std push cli clc hlt lock xor test movsl andb inc repz movsb stos movsl mov mov xchg and adc adc mov loopne in xchg or fidivr mov das lea xchg pop cli std sti jmp mov mov in mov pusha cs (bad) sti sub mov mov inc pop (bad) std sti jmp mov mov add jmp lods test mov popl fcoms std sti jmp mov inc mov in mov shll jmp mov pop lods loop mov icebp shll sbbl cli std sti jmp mov mov in lea lods scas scas mov lock std cld cli stc std sti ljmp in mov in leave mov in mov mov scas scas mov lock std cld cli stc std sti ljmp in mov in test ljmp scas mov lock std cld cli cli std stc ljmp in mov in mov mov mov lcall std cld cli sti std sti ljmp in mov in mov in mov push scas scas movsb mov cltd mov std out cli in std in ljmp hlt mov in cmc mov in nop cli movsb lods mov mov lock std (bad) fdivrp fsubr lret in scas ljmp shr mov subl mov pushf mov std ret ljmp aad test in cltd cli mov adc mov lock and es sti std jmp fisttpll in mov in and fcomi mov mov pop addl incb jmp mov sti (bad) int3 lret enter hlt ret mov cli jmp cwtl xchg mov cwtl orl cwtl and mov fiaddl loop fsubr (bad) ljmp sahf nop aad test mov test lock enter (bad) lret test in in repnz scas test test mov orl ret lret repz mov loopne fwait std cli mov les sahf mov xchg mov xchg in xchg leave int3 faddp mov iret int3 xorl (bad) icebp pushf cwtl lahf mov cwtl mov test mov insb add cmp dec das sub and sbb or sbb jl sbb or insb or sahf and lods stc mov (bad) int aam int3 into rcll (bad) in xchg (bad) xchg popf mov mov in mov orl xchg fxch fcmovb iret aam (bad) repz lock leave in cwtl mov mov sti cltd test test sti test clc (bad) ror ret xchg jmp repz (bad) sahf incl (bad) mov in int rol enter mov out repz mov stos mov scas (bad) std mov ficompl sahf in mov leave fcmovnb (bad) aam cltd clc std clc out leave ljmp xchg mov cli test fstp rcl (bad) lock stc cmpsb enter std cwtl (bad) cli mov lahf (bad) mov (bad) mov std sahf sahf loopne iret fxch scas in ret in in test lret jecxz idiv std mov sahf sahf loopne cltd std (bad) in fisttpl sahf lock test int3 (bad) neg int loop test xchg mov xchg in lret in test loop dec ret fcmovnbe lds (bad) hlt out sti std mov xchg xchg sahf test movsb mov test lret enter (bad) (bad) (bad) ljmp stc lock mov out mov sti sub lret rcl rcl lret lahf jmp repnz mov mov cwtl flds movsb out cwtl mov into into out notl fwait aad xchg xchg lahf xchg mov (bad) out mov movsl lret in xchg into jecxz fcmovnbe aad lret lret lahf jmp lock mov lahf std ljmp cltd mov cwtl ror int jecxz iret int3 out out loope in fwait aad xchg xchg lahf xchg mov (bad) in mov jmp mov mov ret vpmovmskb in sahf lcall mov lcall in enter in (bad) std mov aam int3 into xorl repnz mov mov out lods sti mov aam out rol int rclb negl xchg xchg pushf mov sahf mov ljmp test lret (bad) fmul lret frstor lock in icebp (bad) scas mov orl lahf loopne cwtl cwtl in ljmp fcmovnb fsubp iret out (bad) clc icebp repnz jmp cltd cli test mov out mov test stc xchg (bad) enter rol aam lahf hlt jmp sahf scas test scas out sub cltd loopne sbbl enter in (bad) int (bad) sti cld jecxz fwait aad xchg mov sub fisttpll mov xchg enter in rcl aam rcrl dec cld mov mov mov mov xchg (bad) fcmovb iret aam mov jecxz (bad) repnz xchg lret stc test out mov cli dec (bad) fcmovne enter xchg jmp ljmp (bad) in int3 mov cwtl (bad) fwait cli mov iret fcmovnb mov cmc in sbb ljmp scas mov addl orl fcmovb ffree rol cltd jmp fucomp mov (bad) in ficoml cmpsl scas test mov into (bad) in (bad) cli (bad) ljmp (bad) (bad) xchg mov (bad) (bad) cld lea in mov (bad) aad lret loope test loope imul stc sahf lods mov in fstps cli mov movsl out aad (bad) (bad) fld (bad) lock repz in in iret ljmp mov xchg ljmp scas jmp iret ror lock cli repnz xchg cltd cli test orl pushf test xchg into lods std ffreep fxch shr cmc in out pushf fisttpl mov in test in sahf mov call xchg call in cwtl mov stos lret cld orl test ret repz lock in loope stc sahf mov mov lret sti mov mov in rolb rcl iret leave out ljmp xchg mov sahf test test lret addl mov xlat (bad) (bad) mov mov cli out out mov scas out pushf sti (bad) sahf cli addl cli jmp xlat (bad) jmp loope jmp xchg xchg std mov cwtl in mov orl fnstcw stc cld jecxz loop lock xchg cli mov ficompl int3 xchg mov xchg mov mov fucomi out out out sahf mov xchg mov (bad) mov iret addl into int out (bad) call stc call xchg ljmp mov out mov ret scas repz rol loop int in (bad) out sahf test mov les cltd in test fwait leave fldl2e lret (bad) lcall mov (bad) cwtl mov loopne cltd in sarb fstp mov xchg lret in out pushf xlat lods mov mov xchg in enter (bad) sahf lahf iret mov std (bad) ror (bad) int mov hlt push cwtl mov mov cwtl mov test mov cltd aad cli (bad) rcr mov in clc or std xchg cltd mov int3 pushf mov sahf lods sti lea loop into in fst into fldlg2 shl (bad) sti cld in cmc pushf int lahf xchg sahf mov in fiaddl test mov ret repz lret out into icebp cld out sar xchg cltd cltd (bad) std mov mov mov xchg sahf cwtl in xchg fstps ror ret test cli in out call xchg cltd xchg xchg enter xchg lock cwtl in xchg xchg dec leave int3 ffreep aam lahf hlt mov lock cmpl xchg lods std sahf lahf loopne cwtl cwtl in ljmp ret fyl2xp1 int3 sar (bad) repz in (bad) ljmp ljmp xor cwtl test mov ret aam ror loope out in mov call xchg (bad) mov (bad) sahf cli addl orl (bad) (bad) ret aam loope fucomp mov mov ljmp jmp cwtl in cli sti (bad) lret iret (bad) cltd out in ret in xchg sahf (bad) (bad) cwtl sti stos lahf cli popl cwtl mov xchg sti (bad) (bad) fcom aam lock loop out out jmp mov orl in mov sti mov ret lds out aad fwait xchg cli mov popl cli (bad) in (bad) cwtl in mov ret enter ret xchg out shl hlt (bad) decl orl test fisttpl mov mov ret (bad) rcr shlb loopne (bad) fld1 cwtl xchg mov in cwtl in lret stc addl test ror ror iret in sbb clc icebp repnz jmp cltd cli test mov cld test lret stc xchg (bad) enter enter xchg jmp in notl xchg (bad) sahf call cltd std cwtl test test ret fcmovb int loopne out cmp in repnz mov orl cwtl out test mov (bad) scas repz rcl icebp xchg jmp std in nop mov mov test jmp mov mov ffreep int into (bad) mov jmp xchg mov (bad) std (bad) sahf out mov ljmp lret into ror loope out in mov cli out in xchg popf xchg sti scas mov (bad) cltd loope mov mov ror (bad) ljmp cwtl cld test in enter xchg cltd cwtl in xchg xchg dec int3 aad lret (bad) jmp out out fstl xchg ljmp and ljmp out ret fbld out ret sahf mov xchg xchg ljmp sahf test xchg fcmovnu xlat out ret (bad) mov cli in (bad) sti std mov orl test xchg test loopne into ret repnz loope pushf lcall mov (bad) lahf ljmp ljmp mov enter ffreep aad cltd out icebp mov mov (bad) xchg mov lock xchg fxch (bad) (bad) int3 lret (bad) lcall lcall in shrb mov mov mov lods jecxz xchg stc rcr repz fucomi icebp in cmc std cwtl lods mov ljmp aad in cwtl test lahf clc aam lret icebp leave jmp out (bad) std lock fwait lahf lahf std test and mov xchg loope mov enter mov repnz negl mov in mov cmpsl mov (bad) fmulp int3 mov shl jecxz cmc iret negl sti mov (bad) cltd scas cld addl xchg fildll int3 xlat lock bnd xchg cltd xchg popf lahf fstps stc mov out xchg fildll lret shl xchg dec clc imul cmc cld mov cwtl test (bad) in ficompl scas out pushf call shll repz or in mov xchg cwtl mov out test test mov fcmove rcl int3 ret call cli call scas xchg (bad) sahf mov cmpsl (bad) out cltd cmp mov scas sti enter out into loopne out clc fildl xchg test sahf lods sti lea in fsubrp (bad) int3 (bad) leave in sahf (bad) jmp xchg cwtl xchg sahf (bad) sti mov in mov mov cli out (bad) stc ret xchg sti jmp or (bad) mov mov cwtl mov mov ljmp iret xlat lds shr std lock test mov sahf fnstsw cltd fistpll into fwait lcall test mov in repz lock nop lahf lahf mov sahf test test enter cli out ret (bad) into into fmulp (bad) loop jmp xchg mov mov in cwtl in fisttp xchg stc lahf mov ror into andl in out xchg xchg cltd lcall and lahf out in test mov fstp int3 into mov mov in jmp mov in test ljmp xchg leave (bad) ror int3 (bad) into idivl (bad) out sahf mov xchg test mov cli cltd (bad) out lahf clc ret in fnop shl xchg dec jecxz fldl2t ljmp (bad) lahf cli mov scas mov mov into mov sti out jmp sahf xchg xchg sti mov cltd lahf call xchg (bad) lcall (bad) test popf mov mov xchg xchg enter mov lahf aad cmpsl mov xchg pop iret (bad) rol out or (bad) lock pushf mov lods mov mov mov out lods (bad) lods fwait mov scas addl ret out cmpsl mov cltd xchg cwtl int3 mov ficompl in lods xchg (bad) mov jmp test mov enter mov mov mov xchg popf (bad) mov cltd nop fnstsw ret (bad) mov fadd in shlb scas mov fwait mov in stos xlat pushf mov mov fdivr in ffreep ljmp loop fsubrl xchg lods mov rcr int3 mov sar into icebp loopne notl xchg ret std fldl2e enter test stos rol iret mov aad into mov movsb addl cli out in int sarb enter fadds aad (bad) cmp mov scas addl out lcall cli xchg fnstsw iret xchg into cmpsl (bad) lcall fwait lcall nop fucomip mov jmp fucomi lret sarb mov mov mov test mov lret (bad) mov int ljmp mov fsubrl mov rorl cmc rcr ret out xchg sar lret stos mov (bad) pushf rol iret mov scas fcom fwait rcl test mov out sahf fcom aad out mov div scas mov xchg mov out test adc ljmp loop ret fdivr into enter (bad) in mov xchg lds (bad) mov xchg (bad) mov nop fucomip out fdivp xchg out fdivl fsubrs stos lcall pushf int3 test icebp orb cmc movl mov xchg xchg int mov fldl mov sar pushf imul hlt enter (bad) mov (bad) fnop jmp into lret mov mov (bad) ljmp scas out cmpsb (bad) (bad) mov in in loopne loope xchg jecxz loopne stos (bad) cmc mov test mov leave rcrb into rcrb lds imul fdivr fcmovne mov (bad) mov lea fisubr nop ffreep jmp mov (bad) call fwait cmpsb mov mov jecxz xchg mov xchg out lret (bad) lock cmpsl cmc iret fnstsw lea test mov fdivrl (bad) std mov nop xchg scas addl mov xlat xchg fadds test nop mov orl fmulp xchg out not ret rclb scas mov mov mov lods lahf cmpsb in mov mov les out leave clc fucomi loope out fidivl mov clc mov popf lods mov fcompl mov loopne (bad) in stos mov mov in (bad) mov rorl jmp (bad) (bad) xchg mov fnop std div call stos rol iret mov mov mov cmp std in inc out bnd rcl (bad) mov mov fistp mov rcrb stos out hlt ficom loop loopne (bad) in (bad) sar rorb in cltd ret mov movsb std mov xlat xchg dec into xlat repz mov mov test mov rorl and popf (bad) rol lock scas test scas leave mov clc fsubrl ficomp into xchg scas addl repnz (bad) in xchg xchg (bad) scas mov test mov idiv cli (bad) jmp in lock cmpsl mov lret lods popf (bad) stos mov mov fisubrl in frstor fsub sar nop lret repnz mov mov mov fnstsw lcall fsubrp (bad) xchg mov (bad) mov mov mov scas fcom in stos xlat pushf loope fistpll sar std (bad) xchg (bad) mov fdivrs ffree mov lcall movsl sti fisttp clc mov mov popf xchg enter mov fisubrl lods mov fisttpll mov mov mov addl out fucom loope (bad) mov mov sahf loope lahf int3 lods mov mov enter fcmovne cmc lock cli xchg cmpsl mov lods mov xchg movsl mov mov sarb (bad) fwait mov int fucom in lret icebp mov mov scas xchg sar rorb (bad) mov movsb (bad) mov ret (bad) xchg fldz lock stos lcall fmul mov ret shlb lret mov (bad) cli cwtl int3 mov cmpsb pushf mov test mov (bad) mov (bad) lahf enter ror mov (bad) cmc (bad) stos lock enter mov fnstenv aad fisubl imulb testb in (bad) mov xchg sarl cltd lahf jecxz cmpsl fcmovbe xchg ljmp int out andl leave pushf mov mov std mov mov cli cltd nop (bad) fsub in jmp cwtl fucomi int cld (bad) icebp mov (bad) xchg mov xlat pushf fisubr xchg cld mov xlat cli loop out in jmp std fldcw cwtl mov lock mov lods enter (bad) jmp jecxz mov fxch jmp rol iret mov mov fmull mov lcall cmpsl mov lret stos lods mov xchg fcompl mov fcomp mov mov cltd nop (bad) vpsraw iret mov cli ret aad cltd mov scas popf lcall pushf icebp test clc mov fistp fisubrl loop sti cmpsl mov xorl in mov clc sub lret ret mov ljmp lret andl xchg mov addl mov ljmp lods enter enter test lahf in test ret lret (bad) lret test (bad) jmp mov nop mov stos int mov fiadd into lods xlat ret loope aad loope frndint mov sar (bad) mov subl lcall ffreep (bad) cmc lret (bad) shl ret mov test xchg mov xchg mov movsb xchg les fwait rcr dec stc fimull sar mov fwait mov movsb mov scas lcall std mov mov cwtl iret out fnop repnz leave test xlat aad fsubrp enter cwtl sar sar lods mov nop fwait xchg lahf mov enter in cmp sti (bad) int3 stc mov rcl (bad) iret mov mov nop scas ljmp (bad) mov (bad) out aad out pushf mov fdecstp nop fwait test mov cwtl stos movl flds mov rcl out mov repnz mov (bad) mov sarb (bad) mov in xchg cld sti loopne cmc test mov enter (bad) (bad) cwtl mov mov mov test lcall rorl fwait mov lahf mov pushf fyl2x cmpsl sahf loopne fsub mov fnop iret mov in in in lret fsubp leave repz nop sar sar cltd lods in cmpb test out lret fwait mov ret mul mov lock stc std xchg mov mov sahf mov cwtl stos cmp in lret ror (bad) out fcmovbe out fsub loopne fdiv pause popf xchg lahf std stos xchg test mov sar sahf (bad) jmp dec stc ficoml sar enter lea mov test fisub fisubl aad rcr int3 jecxz int mov stos test mov loopne lods fistpll cmp lahf hlt fst lret out sarl cmpsl movsb sar rorb ficompl cwtl mov aam in enter cmc ret mov int3 sahf fsubs cmpsl (bad) xlat in stos xlat pushf loop mov (bad) int3 enter rcl xchg out ret ror test aad xchg mov (bad) sarl sar mov xchg (bad) xlat rcrl in (bad) test nop movsb sarb sahf test xchg mov xchg scas addl fstpt mov mov xchg int3 scas fcmove fxch lods fstp movsb (bad) mov enter rcr rcl cmpsl mov (bad) cld fld mov pushl fidiv jmp xchg (bad) leave mov int mov mov test loope stos ret into fcompl xchg hlt repz mov mov fmul mov jmp xchg (bad) repnz movsb lods int3 ljmp mov loopne mov xlat pushf xchg mov loopne enter out cmpsl lds lock iret fmul mov mov lahf (bad) cltd sahf in cltd movsl iret scas rorl jecxz mov out cwtl out fcmovnu jmp stos (bad) int3 mov mov (bad) mov lods movsl mov mov in xchg cli mov mov decb ret fnstcw lods mov cltd (bad) xchg out stos mov enter sti faddp fwait mov andl mov cld mov cltd (bad) not into mov icebp lods hlt lcall lods mov sar pushf lods fistpll sahf clc enter iret leave xchg mov fldcw mov mov decl iret mov fcom (bad) enter jecxz mov out test pushf mov (bad) into stos out mov ret jmp mov ror cli leave loope stc pushf xchg enter cltd cwtl (bad) sahf fadds xorl jmp jmp aad lret mov mov fwait lahf lea mov (bad) fisttpl (bad) mov fsts stc fcomi rcl lcall movsl fmuls lods mov lock lahf lds rolb cmpsl stc fcomp fdivr in lods scas leave int3 mov mov iret lahf mov mov iret mov jmp fcomip int3 shr repz test in mov fcomp stos lret fiadd mov xchg rcrb cmpsb ljmp aam xchg mov test jmp imulb mov in (bad) mov test cld mov ffreep repz repz rol iret icebp loope test fstps mov in into (bad) cltd rorl in cli cltd nop (bad) cli test negl fsubr scas lods mov lods mov in fldl (bad) out ljmp lock lcall int3 out repnz mov (bad) xlat in stos xlat popf enter lcall mov fdivrp xchg enter xlat xchg in lods mov mov mov mov fsubrs mov jmp xchg rol fwait cmc fdivr mov cli int3 scas test fwait test stos mov sbbl out lret sti sahf popf adc stc mov lea fnstcw shrl call aam ljmp xchg fucom loope ret faddp mov test pushf mov lahf enter mov ret out ror fisubrl xchg lcall lds mov (bad) and stc ljmp mov mov mov mov rorl enter sub xchg rclb out out aam ljmp (bad) fdiv cmpsb mov mov mov xchg mov mov iret test not in mov aam hlt (bad) iret in negb subl mov aam test repnz loop mov cmpsb mov lods mov rcr enter mov fcmovne movsl int sahf enter xchg idivl stos fcomi scas stos stos mov stos xlat popf mov frstor negb leave xchg out cmpsl mov mov test lret cmpsl (bad) sarl cmpsb fild jmp rol (bad) cld jmp clc icebp call ljmp fwait (bad) mov test movsb fwait mov in out leave ror popf adc stc ret sti mov mov mov into mov aam ret (bad) lock xlat into (bad) int ret int3 hlt mov addl (bad) clc movsl leave xchg fcoml cld xchg xchg mov cltd out xlat aam jmp mov into xchg mov mov mov test mov mov repnz loop ret mov xchg lahf lret scas mov mov fcomp lcall mov mov lret int in std in stos fldcw mov mov xorl into ret loope cli popf adc stc (bad) sti test mov mov mov fnsave (bad) mov iret mov aad loopne call movsl lret into faddp aam stc (bad) into cltd xchg lods mov mov xchg fstpt mov aam xchg mov test (bad) (bad) stc sar xchg xchg mov mov (bad) mov into sar mov (bad) imul cwtl in int scas lods fidivrl rol faddp fwait mov cltd pushf out test fstps mov in sti sahf popf adc stc lds mov mov call faddp fcompl mov fadd aam clc (bad) ljmp lret ret fisubr lcall (bad) into mov fistpll ljmp movb in out int mov nop movsl movsb lock enter sahf lods mov stos lods mov mov out in stc lds stos clc (bad) xchg mov fcmove xlat rorl xchg lcall (bad) fldpi xchg stc rol add lret incl test (bad) lret cli mov mov enter iret rcl leave mov loope jmp mov (bad) mov mov iret mov lock mov sar fsubrp ret cmc lock adcb mov repz (bad) mov into sar (bad) lods pushl clc jmp (bad) mov cmc mov enter sti lcall loopne (bad) in sahf in out (bad) cwtl (bad) mov aam (bad) aam cltd hlt out incl mov (bad) sahf fimull out cltd in iret mov mov fcomp hlt ror mov leave loop rcl (bad) lock fwait mov pause mov mov mov ljmp lock jmp cmc aad mov xlat popf mov test lea mov std xchg in cltd (bad) aam mov shrl (bad) xchg mov movsb lds cmpsb in subb pushf enter mov leave mov mov stos mov fcmovbe fadds nop mov in (bad) call mov mov hlt lods enter test rorl cmp xchg ret (bad) ficoml xchg fsts cmc icebp iret mov mov mov fbld rorb fwait cwtl int3 lret xchg scas jmp xchg lcall sahf mov mov mov mov fmull (bad) xlat rorl lahf (bad) in (bad) loopne fyl2x lods ret rcrl stos mov mov fstp fstps in mov (bad) int3 lret nop rcrl fwait mov or mov icebp cmpsb mov cmpsb fmuls mov popf lret in int mov int out mov scas fidivrl in stos xlat pushf (bad) in fstpt ret in lret lock cmc fucomi jmp cld fld mov pushf sti (bad) leave lock (bad) mov popf xchg jmp test (bad) mov mov (bad) fimull xlat shr stos xlat popf iret xchg fsubr ffree repnz in int3 test fdivr shr scas leave iret test leave sar lea test aam mov aam (bad) out aam xlat mov repnz fcmovu mov fisttp icebp lcall xlat rorl clc lret int test fmulp in (bad) jmp mov mov mov iret mov stos mov mov les in jmp mov fwait mov mov mov rorb mov mov nop scas mov mov lods (bad) mov xchg lret fnstcw mov fucomip xchg fmuls rorb icebp lret out stc (bad) xchg xchg test mov test popf mov into stos rorl clc out mov (bad) loopne fsubr mov xchg stos (bad) mov iret mov mov into lcall sahf loopne clc sar lcall mov not mov test fstps cli popf shr stos xlat popf loopne repnz xlat cmc in loopne cmc mov mov (bad) mov leave sar mov ret cltd fdivs enter (bad) iret mov repz in (bad) hlt aad fstpt xchg movsb mov xlat in stos xlat pushf mov pushf mov loop in sar fistl aad out fwait lret sahf xchg fcompl mov mov xchg cld out mov hlt out xchg out sar (bad) fsubrp mov xchg popf (bad) mov iret mov mov mov mov fdivrp cli (bad) out sahf loope stc mov fnstenv mov sbbl mov sti movsb mov (bad) fwait (bad) iret (bad) call out jmp icebp stos cltd ret mov sti leave sar mov scas mov flds cli ror (bad) mov bnd into xchg mov mov mov fnop xlat rorl inc shr (bad) mov in out (bad) enter lret stos mov iret mov (bad) test cmpsl jecxz fsubp xchg (bad) int3 lret (bad) (bad) (bad) (bad) pushl mov mov xchg loop mov scas mov test into scas (bad) leave mov lods mov xlat pushf test rclb cwtl ljmp mov jmp sar (bad) mov fbld mov fadd enter mov mov into stc sti enter mov in mov into mov lds iret (bad) idiv cld xchg xchg mov stc fbstp mov xchg (bad) call mov lds repnz (bad) cltd sti out loop mov ror xlat int lods mov sti leave sar (bad) mov mov fmul mov call jmp fmul xlat mov repnz stos mov leave xorl mov fcom rorl in iret aam (bad) (bad) in mov div in cwtl lods xchg mov scas test (bad) cwtl shrl xchg (bad) xlat mov repz (bad) xchg (bad) mov into mov test (bad) (bad) xchg fcompl aam mov loopne repnz lahf mov scas sahf test cwtl fwait in cwtl in iret mov xchg rol lret repnz in mov sti mov xchg xlat popf into nop popf cli xchg fstpt mov stc fcom out aam mov loopne (bad) cmpsb mov les lahf jecxz stos mov xchg mov sahf fsubp rcr dec aam mov (bad) xchg test cmpl (bad) test movsb out xlat rorl (bad) int3 fsubrp iret lock jmp mov scas (bad) fwait lods (bad) rcr mov movsb mov mov (bad) in xchg loop test lret clc sti (bad) lret int (bad) ljmp (bad) fisttp mov (bad) hlt into xchg lret aad lret in ret aam xchg mov mov rorb shlb ret out fdiv xchg enter ret test fadd mov std vprotq cli iret aam loope loope sahf mov (bad) imul lea test mov mov sar movsl in xlat fcoml mov iret mov mov nop mov (bad) ljmp mov mov lock hlt int mov lods lods test scas roll in addl nop lret (bad) mov rcr leave aad lods sar rorb in mov mov aam popf aad xchg lock sar shlb xchg mov (bad) mov mov sar orl loop mulb loope lret mov mov rol iret mov mov mov mov stc (bad) lret call into rcl rcr repz mov popf nop xchg mov int rorb mov loopne enter into test in rol fadd mov (bad) mov test fnstcw ret (bad) hlt jmp sar div out fnsave les stos scas mov xlat pushf mov cltd cmpsl cld mov (bad) std fcmovne loop inc sti mov (bad) int mov and cwtl fistl xchg xchg (bad) out in jecxz lock leave test cmc aad mov iret mov (bad) scas mov mov mov icebp std icebp call mov sahf mov xchg sarb cmpsl test lods mov pushf lds cli mov in shlb fadd mov iret pushf fcmovb fsubs mov pushf xlat xchg fcomi rcl dec lds cmp or cwtl fdivrs sar int3 aad (bad) fcmovnb (bad) mov in aad mov xchg mov ret movb ret xchg xlat in xchg scas addl out hlt hlt fnop (bad) les mov lret enter leave rcrb test cmc lock iret into sbb mov xchg mov mov mov fsubrp xchg test ret mov cltd nop ffreep loope xchg lret mov mov mov mov in stos xlat pushf jecxz mov mov ret out rcl in lds jmp idivb lret mov int mov xchg fst mov sar xchg std in fsubr (bad) stc xchg jmp xlat (bad) fsubrp xchg fidiv movsl popf rorl mov xchg scas addl std (bad) in std dec lahf mov les fcom rorb nop mov lret imul rol xlat xlat lahf hlt mov ffreep sar rorb rcrl stos icebp fwait (bad) sarb icebp xchg jecxz into int3 scas enter mov (bad) cmpsl fcmovu mov mov enter (bad) xchg sub loopne fdivr ret into cmpsb pushf mov iret test mov movsb scas fnstcw fstl rcl shrl (bad) lock mov mov xlat rorb flds in sahf lock fldt cli aad rol fadd mov int mov enter xchg in sahf fwait jmp mov xlat shr (bad) leave mov scas lds call leave sar cltd mov loop stc ror fcmovne fucomip scas xchg mov iret mov mov xchg test mov lods mov iret fxam div int mov lods mov mov shlb mov cli cltd nop fnop loop (bad) (bad) mov ror jecxz scas fmul mov scas sbbl pushf clc mov mov mov pushf fmul loope cmc cli loope test fnstsw lea scas in nop (bad) stc xchg sti mov nop xchg scas addl mov in jmp test fisubl leave rcrb mov aam in lret in sar icebp int3 ror rol fadd mov mov scas (bad) mov lret loopne cwtl xlat xchg ret call mov stos fisubrl mov fstps sar lahf (bad) (bad) clc rcr clc les scas fadd nop scas (bad) ljmp pushf (bad) mov mov mov out cld in hlt int mov iret lret les test mov mov (bad) (bad) mov cltd nop fucomip call sahf scas loope mov (bad) mov fistp stos xlat pushf loop pushf scas (bad) andl shl cmpsl xchg fucomp int cmpsb pushf mov mov lods xchg ret cltd (bad) mov test (bad) movsb scas enter xchg scas addl jmp lods mov mov sahf (bad) xlat rorb cmpsb scas rclb lock xchg sti leave (bad) sar int3 rcr rol fadd mov int3 mov cmpsb lret out movsl leave stc ret fucom xchg (bad) cld out call ret sbbl movsl xchg ljmp clc mov (bad) fmul (bad) (bad) iret mov xchg test mov sti mov sub mov xchg scas addl loope icebp (bad) scas xchg mov scas scas std (bad) cmpsl lret cmpsb fnsave xchg lret lods mov neg cli in sti jecxz fwait cmpsl mov xchg xchg mov mov cwtl xchg mov hlt sti enter stos shl in stos int3 xchg sar rorb mov xchg xchg mov (bad) cmc (bad) leave icebp xchg leave (bad) sti rcr cmpsl mov mov mov into mov xchg test stos rcl mov sar into loop enter into xchg (bad) xlat aad mov (bad) ljmp xchg movsb sbb cld clc in test rcl int mov out lret mov xorl in mov enter ljmp shll repnz xchg mov xchg mov mov mov mov ret mov rol (bad) cli stc lret mov fadd movsb cwtl stc (bad) mov mov xchg lcall mov out scas fwait mov out mov mov mov fcmovnbe mov xchg cmp sti mov mov mov sti xchg test cltd in stos in sahf test lret fsubl xchg out loopne shrl mov out popf movsl clc xchg scas enter (bad) (bad) lahf lods xchg (bad) xchg out int3 test in mov mov lea mov mov mov mov (bad) fxch lds scas repnz xchg xchg mov mov xchg mov lcall nop mov pushf ret push stc (bad) mov stc imul jmp lret mov mov test mov ror test enter lret out mov lods mov xlat popf ret cli (bad) aad loope fcmovnb and in ret lret in leave rol (bad) in sar mov mov fcompl clc test jmp xchg out int3 out in test mov test leave lods fwait lahf int mov fidivrl scas fmul (bad) mov ljmp std in enter mov xchg fcmovu (bad) (bad) xchg sar jmp popf adc stc sti aad iret (bad) mov fwait aad (bad) pushf fbstp shl fucomip (bad) repnz lods rol mull mov nop (bad) mov mov aam mov xchg scas mov mov loope xchg int3 (bad) hlt in mov repnz shl out cmpsb xchg mov popf frstor test div call iret mov (bad) call cmpsl rcl mov into mov (bad) aad ljmp xchg jmp cld out (bad) cmc out (bad) mov cli sti mov hlt idivl mov fnstsw mov mov mov fucompp test (bad) icebp stc movsb rcll xchg test leave sar movsb aam out (bad) mov lahf fdiv (bad) loop cwtl loopne mov faddp mov (bad) enter call test xchg xchg mov mov loope int mov test clc mov (bad) icebp mov int3 loop lret int3 out movsb in mov mov xchg leave andl icebp shll mov mov ret jmp jmp cmpsl xchg test test (bad) xlat rorl lahf scas in sahf in lahf out hlt sti call sarl cmpsb mov mov mov popf rorb fldt cmpsl (bad) lret xchg xchg mov mov (bad) shr mov int lret mov lea (bad) fimul kmovb mov in cmpsb (bad) int scas mov stos and xchg (bad) mov (bad) mov repnz shr xchg ret mov in test rcrb leave sar fnsave loopne (bad) aad (bad) mov loop (bad) ljmp faddp mov (bad) stos aam scas mov xchg mov mov xchg ffreep (bad) repz xlat xchg out jecxz (bad) fcom enter lds popf loop (bad) xchg mov (bad) (bad) loopne repz xchg cmpsl mov mov xchg lret lret into add (bad) rcrl mov lahf mov xchg fmulp sahf out cmc cwtl fnstcw fstl into fsubs leave sar xchg mov fild out in shl sti jecxz xchg fmulp in mov leave xchg mov (bad) mov mov movsb (bad) (bad) icebp ficoml (bad) icebp mov mov xlat lret hlt roll xchg pushf mov out mov (bad) jecxz lret cld xlat aam fwait mov in stos fwait mov nop cmpsb mov mov mov mov mov into lret icebp cwtl loope ret mov ljmp (bad) fwait test nop aam mov lea sti int3 (bad) int jmp popf adc stc ljmp mov mov test jecxz mov icebp ret xchg loopne ret enter faddp mov movsl sbbl xchg mov mov lret in fwait in call repz mov mov xlat in stos xlat popf mov stos xchg (bad) stc les mov ret sti ljmp xchg fwait movsl ficompl mov into sar fbld stc loope (bad) enter lret lock in (bad) xchg mov nop lret test popl mov movsl rol mov vcmpss enter rolb mov mov lods sahf fsubl (bad) fisttpl hlt int3 rcrb ljmp (bad) mov scas les std (bad) (bad) mov cmc leave ljmp call rorl in movsl mov mov in (bad) (bad) cwtl lret loopne aad clc lret stos repz out mov cmc (bad) lea xlat in stos xlat popf lds lcall lcall xchg lret cmpsb (bad) out icebp scas aam test mov stc lods mov andb lods mov fwait xlat int3 cli cwtl jmp mov (bad) test mov nop aam mov or cmpsb inc mov (bad) lock shl cli out std fnstenv cmpsl movsl int test rorb lret test (bad) (bad) in xchg popf adc stc fdivl int3 cltd mov mov mov mov lahf rep fcmovne iret notl loope cmpsb lods in rcl sahf faddp mov mov mov aad fdivrs xchg xchg mov mov fldlg2 cli test lcall mov fstps clc mov int3 cltd ljmp cmc mov mov mov sarb enter sti stos mov (bad) int (bad) (bad) fcoml out mov sti faddp fwait test add mov in fxtract ret mov enter into mov iret sahf mov mov sar pushf mov ficom in jmp call lods cld mov mov mov scas cmpsb mov mov fwait loopne in xlat sar mov jmp sahf faddp mov lea fstpt out out (bad) lcall mov cmc hlt test movsl (bad) movsb into pushf xlat in stos xlat popf ret incl test lahf (bad) out fstp aad in aad mov out in fstpl lret flds mov into sar mov vpinsrw ror aam (bad) (bad) rcr test cltd xchg addl lcall mov xchg fmulp imul out movsl mov sti stos test iret xchg scas pushf fcomps test shrl cld enter les fdivl lcall out cmpsl lret loope mov mov jmp xlat neg sti fwait hlt mov (bad) hlt mov mov int3 cmpsl mov cwtl mov mov (bad) in xchg xchg mov leave dec dec xlat iret out iret fdivrs fcmovu mov in (bad) mov shl ljmp mov mov stos xorb lea (bad) (bad) lds mov xchg fimull jecxz jmp mov (bad) fwait mov mov mov (bad) mov into jmp popf adc stc mov ret fldenv fcmove mov mov loope mov mov loope fdivrp lret aad stc mov mov not mov lret lods mov scas jmp fdivr mov stc mov mov xchg xchg mov mov mov out mov stos fiadd (bad) (bad) mov into sar rcrb xchg (bad) in hlt out xor fxch out lods int rol faddp fwait lahf mov mov xchg popf scas (bad) lcall (bad) repnz sahf popf adc stc fcmovbe hlt (bad) repnz mov test (bad) mov iret mov enter in (bad) stc ret mov out cwtl pushf mov mov lahf in mov sahf sar cld fadd loop cwtl (bad) popf hlt jecxz call (bad) fmulp lcall lret lcall nop xchg mov in loop xchg shr lock cmpsb test lret (bad) mov mov test fcoms ljmp xchg in out std fwait lret (bad) sti mov out ret out xlat ret rcrb stos (bad) (bad) mov (bad) rorl fisubrl mov aad cmpsl int3 fbstp popf adcb xchg mov mov xchg in (bad) negl jmp stos into nop xchg test mov mov sar lcall mov in (bad) xchg std stc int3 mov test out leave out iret in mov mov int3 mov mov mov mov (bad) lock loop lock rcr call faddp mov mov mov mov lahf mov (bad) call sahf rcl mov test mov xchg iret shrl (bad) aad cmpsl mov mov mov mov out mov rcl xchg cltd or pushf fwait (bad) in mov lcall (bad) ret sti lret in mov into loopne cmc (bad) call scas sahf mov call into sar lods mov ljmp xchg inc in mov fdiv mov popf cmpsl stos lret stc ficomp int3 rcr loop hlt call out (bad) fwait test aad out (bad) fildll (bad) fwait mov mov rcr aad ret fisub ffreep in stc cld aad xchg in lret iret cltd ret lods mov xchg stos lods mov mov in aad fiaddl rcl fisubrl mov pushf scas ret (bad) loopne lea pushf (bad) leave out out int3 test mov icebp (bad) stos test test fcomps mov mov ljmp div int3 repnz int jecxz (bad) leave out mov xorl mov in cmpsb cmpsl (bad) mov xlat lcall xchg int3 jecxz lds (bad) mov sbbl mov mov cltd mov fcmovb ret rol cmpsl mov mov scas mov cwtl out fildll mov mov mov enter mov fdivp enter mov (bad) xlat rorl mov mov popf in out out cltd out repz not aad cltd fwait mov sarb mov mov mov in fcmovnb in ljmp faddp mov (bad) (bad) popf fucomp test lods xchg xchg fldenv enter ficoml sar mov (bad) (bad) mov test (bad) (bad) mov fimull lock mov shr sti mov mov mov sahf cwtl adcl popf lds test cld loopne lcall xlat in fucomip icebp repz lods test fwait (bad) (bad) mov ficomp mov xchg in ljmp stc (bad) rol stos nop mov rorl mov mov ret jmp cld cmc repnz mov fdivr (bad) mov mov iret lea movsl mov fildll lret mov leave iret (bad) hlt ljmp mov int cmpsb (bad) cwtl aad test sti test int aad testl stos xchg mov nop lahf stos enter subl (bad) mov mov aam rcr enter out mov (bad) int (bad) leave sar mov mov mov ljmp mov dec ror mov xchg mov scas scas (bad) ror (bad) lcall xlat (bad) fdivr call jecxz shr stc sahf faddp mov fmuls mov mov lret mov test fadd (bad) lock iret xchg mov mov mov fidivrl ljmp ret mov (bad) negb mov in mov mov mov int3 fwait xchg sahf sahf shll icebp mov aad cmpsb mov stos jmp (bad) out jmp (bad) int3 mov lods fcmove test fwait mov sarl jecxz (bad) lods call shr les lock out xlat les mov leave sar xchg xchg test int3 iret xchg (bad) fdivr fcomip nop lret xchg int cli ret sahf faddp mov mov mov loopne mov int mov leave (bad) fsubr xchg (bad) test (bad) mov mov in stos xlat popf out stos lds mov popf icebp icebp sti jmp in in fdivr lret xchg mov in popf mov mov adc in enter rol mov fsubr leave in hlt fst mov xchg xchg lds ffreep lods mov mov lods inc mov icebp jmp fmul lock lods mov fidivr leave sar sarb out in ret repnz int mov cmpsb mov mov loopne fnstcw sahf cltd (bad) movsl (bad) leave fucomp xchg xchg mov xchg loopne ljmp xchg lea (bad) mov mov std sahf (bad) mov loopne fdiv jmp (bad) lret xchg pushf lret xchg movsb cmpsb shll mov (bad) mov std repnz mov in rcl mov mov mov leave sar scas adc sahf mov int mov enter mov lods mov xchg movsb mov mov loopne stos shll mov aad popf fwait call rcl aam in lret repnz mov in stos xlat popf movb sbbb jmp fmul into movb in (bad) mov mov movsb mov xchg aam mov xchg aad in (bad) cmpsb jmp (bad) out xchg (bad) sti faddp fwait sahf ret mov (bad) fdivrs cld iret sti loop int popf adc stc ljmp xchg lret mov xchg (bad) mov (bad) mov iret mov repnz fcoms cmpsb shl (bad) loopne test test xchg int3 mov nop (bad) mov cmpb ljmp (bad) cmpsb hlt out mov xlat icebp xchg mov lcall (bad) mov into sar ficomp std std out into xchg shrl aam lret lcall cmpsb clc addl lcall in nop mov jmp xchg out out out cli rol mov xchg mov rorl cwtl movsb faddl in fsubp shr loope (bad) lock mov xchg scas mov loopne cmp fldlg2 test mov ljmp ficoml xchg (bad) ljmp popf ret mov fnop orl mov fsub xchg mov movsb loop in fisubrl xchg stos mov movb mov ljmp xchg jmp mov mov sahf fiaddl cmpsb mov lret push into jecxz (bad) repz scas (bad) ficoml (bad) fnop mov clc fidivr icebp into sar call popf adc stc out cld (bad) mov andl cwtl lret xchg mov iret mov rol in loope (bad) (bad) leave (bad) mov stc rcr lahf cwtl mov sub mov call shl xchg mov add lret out mov lods (bad) fidivr into sar mov shrl aam mov aam cmc int3 jecxz rorl (bad) fwait cmpsb fisttpl lret mov mov fdivrp repz (bad) repz shr aad (bad) cld enter mov rorl sahf lods icebp test lret ljmp mov mov enter cwtl mov popf fcmovu cmpsl xchg xchg fstps mov scas mov mov stos xlat popf jmp mov stos mov iret (bad) into cli rclb mov int (bad) stos mov mov fisubrl roll nop ffreep (bad) icebp test int3 fcomip aad out lcall test mov loope movsb enter lock fwait ror jmp popf adc stc fmul loope fmul mov mov jecxz mov subb std (bad) jecxz enter std dec ljmp test (bad) mov lret lcall sbbb xchg mov mov mov mov jmp mov xchg jmp fcmovu (bad) mov leave fsubp jmp (bad) mov enter mov scas fdivrl rcl mov xchg dec loop idiv iret aam mov loopne mov ror stos mov fwait movsb mov mov cmpsl fildl pushf (bad) (bad) loop cmc fstpl stc lret rol cmpsl mov mov test mov int3 loop in mov iret in mov icebp loop sar sahf faddp mov (bad) fcoml sahf jmp enter aad sti div lcall fistp mov in stos xlat popf mov mov in repz xchg fwait in mul repz fdivr out (bad) call mov xchg int sahf mov into sar test aad call in test shr cli lods rol faddp fucomip mov mov leave mov lahf fcmovne (bad) lock xchg leave mov lods cli (bad) sti mov (bad) cmpsl movsb stc cltd rorl stos mov pushf mov in aam out mov fistp lret mov mov mov lods mov iret mov (bad) hlt jecxz int (bad) lret int3 (bad) iret sti leave loopne clc jmp xchg xchg mov popf out stos cmpsb jmp mov jecxz test xchg rcr cltd xchg int out mov mov mov test test mov repz cld xchg int enter int out in rcr lret sahf pop sti faddp fwait cwtl lds fcomp fisubrl xchg rcr out in jmp popf adc stc ret mov ljmp (bad) movsl (bad) (bad) scas xchg mov (bad) mov iret mov (bad) cltd cld fwait (bad) ret xchg call cmc mov scas aad mov xlat in stos xlat popf fsubrs scas ljmp aam cli icebp aad into (bad) mov movsb aam int mov popf mov fldenv fdivs jmp fcmovbe repnz out in stos in rol faddp fwait mov xchg lods mov lahf (bad) imul fucomp ror (bad) hlt (bad) jmp loop clc cltd lahf mov fstpt clc mov mov call in mov shlb mov lds ljmp iret pushf sti in xchg xchg mov test (bad) call mov mov mov test xchg cmpsl fldenv xchg xlat lock jmp hlt lret (bad) stc mov mov mov (bad) scas fdivrs scas fwait mov mov (bad) (bad) repz cld aam scas mov mov leave sar (bad) orb in fmul xchg in sti leave call mov sar mov fstps mov (bad) mov mov iret mov enter ljmp in mov mov scas mov stos enter into test loop mov sahf rcl xchg ret fsubr int3 rcr int mov scas mov scas mov loopne faddp xchg (bad) cli in (bad) fildl mov mov cltd xchg xchg scas popf pushf mov fild clc fmull xchg (bad) fndisi(8087 xchg mov rcr loop ret (bad) leave cwtl int fwait mov (bad) into scas xchg call test lret fstps leave in fwait popf adc stc (bad) movsl jmp les fwait ret mov (bad) into lods (bad) mov iret mov sar stc fcmovb jecxz ror popf xlat in mov sti fld leave mov stos xlat popf ret mov ret mov loope popf aad fwait cli in call scas fisttpll mov fcmove mov mov into sar fcmovu lcall repz (bad) repz (bad) ljmp fwait cmpsb stc nop mov lea out (bad) cwtl fldl ror sahf popf adc stc cmc into clc lret icebp cmpsl mov mov sahf mov mov popf out lods (bad) cltd jmp shl mov dec mov faddp mov lret shlb mov sbb repz xchg xchg mov test mov aam mov mov mov popf in test fnstenv lds (bad) (bad) iret stc lret mov mov (bad) mov lret sbb xchg cwtl mov clc (bad) lods mov mov jecxz aam (bad) out push icebp lock cwtl lods lcall rorl mov int3 (bad) notl shr out (bad) mov (bad) int3 icebp cltd lahf mov mov sub xchg (bad) test iret mov iret (bad) enter loop repz in loopne lock lret mov in stos xlat popf cld mov ret scas mov mov lret mov out in test repz lahf mov xchg cltd nop test test clc mov cmc lret fyl2x push enter sti mov (bad) sti faddp fwait mov mov mov mov repz sahf popf adc stc out cli jmp test mov cwtl mov aam test mov xchg out xchg div shr jmp lock (bad) mov (bad) test lea fdivp (bad) ficom mov cld xchg xchg mov mov (bad) std int3 lahf mov cmpsl mov cmp leave out mov (bad) (bad) (bad) in iret fwait stos mov mov stos mov mov xchg mov mov clc fmul xchg rcrb clc (bad) stc lahf mov mov in cmpl pop mov loope xchg popf adc stc cmc (bad) call ret fcoms fsubr movsl mov mov iret mov repnz cli xchg lret (bad) mov iret movsb mov in stos xlat popf loope aad mov lods mov mov in (bad) sar xor sti lret test mov fistpll mov clc mov loop sahf repnz xchg test or scas in rol faddp fwait mov scas aam xchg or xlat clc enter sahf popf adc stc loopne lret lret mov (bad) (bad) stos (bad) mov (bad) mov iret mov lret dec popf vpminsw out out (bad) mov stos leave iret nop mov enter ret mov mov xlat fsts in xchg mov cld les mov in (bad) mov into sar pushf mov mov (bad) (bad) call lock in jecxz lret int rol faddp (bad) fstps test ret fcomip sahf repz popf adc stc leave lret lock mov mov test test (bad) mov iret mov rcl aam int out ret test mov mov nop fistp xlat popf iret test rcr movsl std cmpsb mov negl rclb cmpsb in out mov scas mov mov mov or mov xchg faddp mov (bad) mov sti shr (bad) div movsl int3 mov mov leave sar sarl fimull repz out lds cmpsb mov fbld stos (bad) fbld test loop (bad) ficoml ror (bad) jmp leave shrl mov cmp mov cmpsb cltd ret xchg out lcall cmc icebp in lret (bad) icebp mov mov (bad) lea int3 test mov xchg xchg mov mov int3 out mov (bad) in leave imul fld xchg xchg mov fcom rorl (bad) fwait cli fbld in xchg out (bad) repz xchg (bad) fnop hlt cmpsb mov xchg xchg mov mov mov test mov mov xchg mov add enter fisubl lods lods mov mov loope (bad) mov into sar sbbl jmp leave aam enter rol faddp fwait lods lret mov loope aad (bad) mov icebp fyl2x (bad) into jmp cwtl scas in rol aam mov cmpl fcmovbe mov sar lods andl fsubrp icebp out les shlb mov mov sbb mov lret test ficoml shll fcmovu (bad) les into mov mov into sar mov in std in iret test (bad) mov fmul mov (bad) sti faddp fwait (bad) lret clc mov stc (bad) xchg fxam fwait enter (bad) (bad) clc xchg xchg (bad) (bad) icebp lods mov movsb xchg scas std test mov sar rcrl in xchg sbb in sti out in lret in in mov test ret (bad) aam mov out leave mov xchg loopne xchg xchg mov sahf stos (bad) sti cmc mov mov test popf into popf (bad) mov into sar xchg movsb mov xchg repz (bad) in lcall test leave scas fdivrs scas mov mov (bad) mov ret mov lret lods out leave xchg mov into cwtl addb sar mov (bad) mov cmc sar fsubrp in cmpsb in lret ljmp pushf sahf mov iret test mov fwait xlat iret lret in xchg adc stc mov repnz iret enter xchg (bad) xchg xchg int3 cmpsl mov lds test cld xchg subl std mov faddp fwait mov fdivr lods mov rcrl sahf popf subl std mov mov mov ljmp fwait sahf repnz cltd mov sahf test ret sti scas cmc test mov mov mov mov xchg cld int and enter mov xchg stos ret roll lods fistpll movsb mov xchg fsubp jmp cld repnz mov leave scas xchg lods scas (bad) pushf ljmp xchg xchg cmp xlat fcomp lret negb hlt les cwtl popf lret pushf xchg scas out stos popf frstor (bad) mov iret mov enter into fadd stc sti mov lret xchg mov cwtl mov xlat popf out mov into cmpsb movsl in lahf lds lret lock in mov mov int mov rcr fsubr mov (bad) into movsl mov xchg ficomp mov mov std mov xchg mov leave sar (bad) mov loopne fstpl out mov ret sahf faddp mov loop pushf mov xchg test mov ret lret mov xchg fnop mov imulb mov enter mov mov into sar cwtl cltd enter icebp xchg iret loopne fidivl (bad) mov (bad) fwait lahf (bad) cmpsl mov pushf test lods lahf cwtl shlb jmp popf adc stc (bad) cli mov mov lods sarl out popf xchg out mov fdivr fwait cli (bad) in (bad) lds call mov lds shlb mov xchg mov mov out in sar (bad) jmp mov mov sahf mov stos (bad) mov into sar test out cli jmp repz out mov (bad) sti faddp fwait xchg cwtl mov (bad) (bad) test mov mov fcmovne xchg cli mov leave aam repz in into (bad) nop test orl sar (bad) fcmovnbe stos cmpsl ret loopne lahf cltd iret lcall in mov (bad) mov scas iret lahf mov subl popf loop xchg xchg mov xchg (bad) ret int mov int3 (bad) int3 xchg (bad) test ljmp into mov fdivr ret int test cmc stos lret (bad) sti faddp fwait mov scas mov lods lods mov mov fmul fnsetpm(287 loope fsubr lret ljmp mov fisub clc mov fucomip stos mov lret (bad) mov sahf faddp mov xchg xchg fsubs mov movsl mov mov ret hlt in aam mov movsl enter mov stos xlat popf mov mov jmp fnstsw (bad) xlat call mov mov pushf or mov rorl mov mov ret call rol hlt mov leave xchg lods scas lods mov leave sar test fnop scas mov jmp cwtl notl into loope in mov mov mov fbld mov iret mov loopne out xchg (bad) cmc fcmovbe and fsubl mov mov into xchg jmp popf (bad) scas cmpsl lahf in (bad) lds mov ljmp mov xchg stos (bad) mov into sar test xlat out fcmovne mul in mov leave int3 not mov (bad) fwait (bad) (bad) (bad) test fistpl jmp cltd int popf adc stc iret ret repnz mov movsb stc fcompl mov iret mov xlat into ret mov (bad) (bad) mov fstp out mov xchg lcall int3 fwait scas jmp aam icebp cwtl mov (bad) loope xchg (bad) cmpsl mov cmpsb in ror mov mov int3 test (bad) xchg leave mov cmpsl lods mov mov lret into loope mov jmp divl popf fbld xchg loopne subl out aam fcmovu sar popf adc stc ret in stos test mov test lods (bad) mov lods nop lcall mov jmp enter out sahf xchg (bad) lret xlat in stos xlat popf rcll (bad) scas mov sahf lret (bad) iret loop call mov mov sbb mov fmulp mov mov xchg (bad) mov (bad) mov in mov scas xchg xchg cltd (bad) enter leave sar mov mov mov (bad) (bad) aad sar cli hlt cmpsb mov mov orl mov ficoml shl xchg stos loopne fucomi into fdivl movsb mov mov (bad) mov into sar (bad) fucomi xchg repnz lcall leave call aad lods rol faddp fwait stos rcl fdiv fisub (bad) mov fprem out int popf adc stc in call mov mov test test mov call (bad) fdivrs mov movsl flds (bad) xlat in stos xlat popf ljmp fcomps in out out lret cmpsl mov mov leave stos mov iret mov jecxz mov mov mov (bad) shr mov repnz lret fdivr mov pushf stos scas xchg lods mov leave sar sahf mov lods mov in in in (bad) fsubp lret lds cmpsb mov mov xorl lahf (bad) xchg (bad) mov xchg xchg mov test (bad) int3 std mov les mov into sar (bad) fsub mov loop repz in xlat iret stos lcall fnstsw fxch lods xchg test shrl loopne iret fstpl stc mov movsb lea enter mov xchg icebp fnstsw mov fyl2x mov hlt cli in out cltd stos ret mov xlat popf shll mov movsb mov xchg ljmp enter mov mov mov mov jecxz and cmp fstpl (bad) mov (bad) repz cmpsl test into jmp jmp nop mov nop lods (bad) (bad) xlat rorl mov call int adcl ret sahf faddp mov mov mov xchg popf repz (bad) ficoml rcl xchg stc (bad) into jmp xlat clc lret fbstp or (bad) mov into sar faddl loope jecxz ret movsl jecxz call imul fdivrs fwait mov sbbl enter lock sahf popf adc stc into out fdivp mov mov mov test (bad) mov mov lahf mov int3 stc lret in stc ret fsubr icebp notl ret faddp mov sarb movsl mov lock mov xchg fcmovu pushf test xchg mov (bad) xchg roll loope cli int int aam std mov mov lret fimul clc mov out lods mov lods lcall fdivrp loop xchg jmp neg lret lret xlat inc les popf cmpsl into cwtl mov mov ljmp shr cmc stc enter loope shrb mov mov sar or mov int3 jmp (bad) in mov jmp hlt cmpsb mov mov popf cwtl enter clc mov fidivl (bad) in ret dec fdivrs sti in out fimull mov in stos xlat popf lret clc fisttpll in mov loopne iret iret mov mov mov fwait mov out cmpsl fmulp test lds fdivr push mov loop fdivr lods cli stos xchg (bad) sti faddp fwait (bad) rcr movsl out (bad) fadds mov mov (bad) jmp popf adc stc iret (bad) hlt idiv fwait int3 mov test xchg mov mov mov lahf xchg std lret imul aam ljmp mov aam fstpt mov iret mov int imul xchg sahf fcmovnbe icebp (bad) cmc (bad) leave in leave xchg lret (bad) xlat in stos xlat popf int xchg fdivrl std mov test rcl call (bad) fptan lods stos mov lods lods roll mov into sar cltd fdivr stos rol std enter lret mov lock jmp stos scas fldt fwait mov xchg mov jmp cwtl cld xchg int call loop ror fcmovnbe ror (bad) (bad) mov mov mov sar mov stos lock (bad) mov enter aam out xchg int stc fstp in mov fist cwtl mov into xchg sahf cli into sahf cli (bad) (bad) cld xchg xchg mov xchg lods (bad) mov xchg mov int3 test fwait shlb (bad) test stos enter stc fsubr shr mov cmpsb in scas mov test pushf fsubrs mov mov mov (bad) into in rcll out hlt cwtl cmpsb mov enter leave sar lods xchg test scas in fucomp decl lret iret (bad) mov int ret cmpsl cmpsl mov lcall xchg mov in xchg xchg mov mov mov sarb fisttp loopne stos in cmpsl fprem test in jmp fmul lock mov mov mov mov lret mov fiaddl xchg pushf jecxz xchg xchg orl fwait (bad) int sar fcmovnbe fdivp xchg cmpsb mov mov leave sar mov mov scas clc aam fadd sti icebp jmp iret in mov mov enter adc (bad) ret (bad) (bad) fld nop int3 stc out leave xchg stos mov fstps xlat in stos xlat popf call cmpsl sub std pushf xchg std nop in ror lret mov mov mov int lods mov lea mov cwtl jecxz rcr lret in jmp xchg rol mov movsb fidivl (bad) fwait mov mov out orb mov into in into int popf adc stc mov in enter int mov lods lods loope sub mov mov mov fstp in aad (bad) enter stc loopne (bad) xchg cwtl (bad) test int test lea in mov fcoml rcl mov lock mov mov les test mov dec jmp cli mov mov cmpsb in iret mov cwtl addl fnstcw (bad) mov aad (bad) mov mov ljmp xchg test rorl cltd fsubp movsb (bad) enter (bad) aam xchg xlat jmp cli fdiv leave sahf test mov mov test mov mov mov pushf ficompl mov mov clc negb (bad) xlat in stos xlat popf fisttpll out andl ljmp (bad) int3 fsub (bad) int stos popf mov (bad) lods xchg mov clc sahf (bad) in (bad) ljmp (bad) test test cmpsl mov (bad) sti faddp fwait mov fstpt fcompl int nop jmp popf adc stc lret mov (bad) cld cwtl test ljmp fisub sti mov fsubp call mov faddp mov loopne mov mov mov mov test cld (bad) in lods out rcrb mov fsub xchg sub stos test lret enter repnz loope sarl in test mov (bad) mov fsts mov mov ret lret xchg (bad) cmpsl cli movsl out cwtl mov in mov (bad) cwtl mov (bad) pushf call cld xchg mov popf adc stc mov popl popf (bad) xchg mov mov lods (bad) mov (bad) ret enter fldl2e out mov mov mov (bad) call mov int fcmovne mov xchg jecxz lret jmp iret jmp int xlat hlt scas cmpsb mov in stos xlat popf std scas scas mov fistp xchg rcr loop mov fadd loop ljmp fwait ret mov ljmp clc stos xchg xchg (bad) hlt jmp cmpsl into jmp fstpt movsb xchg (bad) icebp lahf mov mov test fdivp imul out roll in lds stos cmpsb (bad) movsl popf call fisubl mov cltd ret fwait popf adc stc ljmp nop iret fwait popf mov (bad) sarb mov scas ret in fmul in rol fwait mov mov mov fisubl fcomp xchg fcmove mov loopne into leave jecxz lret lds scas into repnz mov xchg into mov in stos xlat popf jmp cltd iret mov mov mov loopne cwtl cwtl fld1 test (bad) shr aam lcall loope cltd (bad) mov mov (bad) xlat fcmovb nop int add (bad) icebp (bad) int3 mov cwtl (bad) xchg test fmulp stos stos lds mov (bad) mov jecxz jmp fsubr leave ljmp lcall fadds cli mov hlt (bad) (bad) repnz popf adc stc (bad) mov out xchg mov int ret lret lods (bad) fidivr mov fcoms (bad) fcoml cld cmc loopne mov mov fnstsw fadds out mov shl mov sti div mov xchg mov in stos xlat popf stc lea mov xlat fucomi mul sahf int3 cwtl repnz test test mov mov mov into sar fdivrl lahf jecxz ljmp rcr icebp (bad) ljmp into fdivl stos mov flds xchg fdivp fsub test rcr loopne mov mov ffreep shlb lods mov scas int3 (bad) ljmp shll cli fisubl mov fsubrs rcrb pushf int mov jmp ret fistl mov faddp mov into andl popl test cltd into iret in mov (bad) ret in nop xchg mov stos xlat popf icebp mov mov pushf ljmp leave cmc mov in mov stos rorl ret (bad) cmpsl test (bad) mov mov xchg cltd int3 loopne xchg jmp aam ret (bad) enter mov fwait test lods mov mov mov (bad) fdivrl fsubrp lods leave xchg pushf leave mov xchg fcmovbe fdivrl mov icebp hlt (bad) aad fsubp popf adc stc clc shr scas mov mov mov mov sahf (bad) (bad) call ret xchg cwtl repnz call mov rcrl lea ret xchg (bad) ljmp mov jmp std lock mov mov jmp cwtl mov lods mov stc (bad) ret (bad) hlt xchg in int popl movsb fistpll fmuls mov jecxz lret test lock out call fadd mov (bad) lahf in scas fdivrs std fwait pushf sahf movl in (bad) leave pushf mov mov out mov mov (bad) lret rcl (bad) (bad) lock std in mov xchg scas scas xchg mov fdivrs popf lds mov xlat out xor cmc scas xchg (bad) cltd stos mov mov stc fild fsubl aad (bad) into mov stc (bad) mov ljmp cwtl fldcw xchg test lahf andl in into int3 (bad) notb fisubl mov out test lcall xchg popf out xchg xlat sti xlat loope cmc xchg lret out mov imul iret les xlat in stos xlat popf mov movsl jecxz stos xchg cmpsb xchg mov jecxz mov imul out ffree loope loop (bad) lcall test fwait aad movsl mov stos clc stos int ret (bad) jmp cli mov clc (bad) in shr jmp leave mov lods lcall xchg xchg (bad) rclb out lret (bad) mov mov lahf mov aam loop or repz shl rcrb mov int3 xchg mov mov mov lea decl (bad) popf in call cld jmp jmp rorl fsubrs repz out shl fistl mov hlt stc ret out cltd mov xlat in stos xlat popf mov test mov ret push cmpsb shr enter lods scas movsb xchg lods (bad) mov stos mov into sar subl loopne rolb into cmc scas rcr lods cwtl mov xchg sahf mov out test mov xchg xchg ficom mov repnz mov lahf stos mov sahf mov mov stos mov lret cld out rcrb stc mov stos lds ffree xchg cmp xchg mov (bad) aad ret aad cmpsl or test hlt mov mov mov lret mov scas (bad) xchg jmp (bad) ror stc loope test lods shr ror mov xlat in stos xlat popf mov leave fsubr into mov leave std aam xchg out aam cmpsl mov mov mov cltd nop lods mov mov mov mov lret lock aad ret (bad) aam out lret test fwait mov xchg int xchg fstpt lret shr call loop ror xlat leave test (bad) (bad) mov clc stos sahf test mov cwtl int3 cltd iret (bad) int3 loope scas scas lods std jmp stc stos int3 mov popf mov mov mov mov jecxz sti xchg rorl stc cld cmc div cmc stos mov mov ret mov call mov (bad) mov (bad) mov (bad) cld mov mov mov mov mov mov mov mov scas fcoml jecxz cmc (bad) mov mov mov mov (bad) (bad) mov sti rcr jecxz fnstenv mov pushf mov cwtl ljmp loop repz shll fwait test fwait mov mov fcmovnbe rcr out in jmp mov mov scas sahf int adcb sar mov lahf mov loop (bad) bnd out fsubrs movsb lods mov aam mov fdivs lcall in ljmp mov mov pushf loopne stos iret scas test (bad) lahf lcall mov mov sar ret cmc fstps nop cwtl fldcw mov in scas neg std fucomi in call mov test fmul (bad) xchg int3 lods mov clc test in into dec shr aam fdivp (bad) lods mov (bad) fwait mov xchg mov mov xchg sar neg xchg into (bad) cmc rol lods mov mov stos mov fcmovbe mov sar mov mov mov out xchg xchg lock iret aam cld test subl mov mov lcall mov mov fcmove icebp lcall scas mov xchg mov stos fsubr mov lret in aad call mov mov mov fldenv scas mov std fmull rcl iret in xchg cmc xchg leave fdivrs mov (bad) cmpsl (bad) sarl mov mov lret (bad) enter hlt lcall call lcall mov sar mov and (bad) call test rcl fwait xchg scas mov mov mov iret mov lret ret lock mov ror clc sarb iret lcall mov mov mov fstl aam loopne loopne ret test xchg nop mov test loopne (bad) mov into sar mov leave in (bad) hlt in int cmc int loop iret std movsb into scas scas stos xchg cmpsb mov mov in stos mov (bad) mov cmc xchg (bad) ljmp lods jmp (bad) mov leave sar test cwtl out icebp ret aam shr hlt scas xlat mov (bad) leave lods hlt (bad) mov fnstsw mov mov fwait mov iret mov mov sahf std bnd ror int lock stc fwait lret lahf andl sarl out fcompl xchg xchg mov mov stc stos enter popf lahf mov aam mov test cmpsl mov in (bad) fstp fcmove mov mov mov lods stos mov icebp (bad) stos rcl stos in fcmovnu enter jecxz lret test (bad) cld stc divb movsl (bad) sti faddp fwait mov lea (bad) mov scas idiv out int3 lock stc xchg fsubr jmp icebp scas int iret xchg mov movsb cmpsl test (bad) mov sar fisttpl mov (bad) lcall mov ret sahf faddp mov test mov fsubrp lods fmul ret into lcall (bad) sbb lock mov orl iret mov int mov (bad) mov cmc in lret scas lret fcmovbe std scas mov mov lods lahf mov cmpsb mov fucomp mov test repz mov stc in ret icebp ret neg mov (bad) fcmove mov ret mov mov test clc fprem aad sahf popf adc stc (bad) mov (bad) lret mov xchg mov fsubs mov fdivr (bad) jmp in xchg jmp (bad) roll scas mov xchg leave leave fwait mov xchg loope leave call lahf (bad) in mov in xchg xchg mov xchg (bad) in fdiv hlt ljmp fild ficom mov fst (bad) stc (bad) fnstenv mov movsb lods xchg mov mov fcmovnu mov mov scas roll lcall mov fcmovbe cld stos mov fwait xchg (bad) lea mov aam mov rol clc sti sahf popf adc stc stc int3 lods leave repz mov out xchg mov enter sti mov cli aam loop mov in mov fist mov loopne test fadds xchg aam xchg xchg mov cmpsl (bad) in out repnz mov scas mov into sar sahf xchg mov (bad) lahf (bad) (bad) xlat in xchg stc test fisubrl (bad) fwait mov movsb mov fimull cwtl (bad) mov enter fstpl stc cld (bad) repnz sti movsl popf mov mov scas (bad) cmpsl mov repz mov mov mov (bad) cmc ret shr mov lods into (bad) rorl rorl int3 scas mov rcrl mov les lods out mov lods (bad) mov (bad) (bad) mov mov mov fwait (bad) int3 stc cltd repnz out fldt cmpsb in into lcall mov lea lods fisttpll (bad) mov in sti in xchg into ret ror lods mov mov mov mov repz mov leave lock stc cli popf adc stc int mov stos mov repz mov addl mov (bad) (bad) out loop ret mov std lods cmpsl popf mov lods (bad) xlat in stos xlat popf fdivrl mov cwtl popf sti enter lock lret call mov mov test test mov cli orl (bad) mov mov (bad) cmc mov in mov mov fcom rorl cmpsb mov mov fbstp xchg aad loop sahf lock in mov mov lods mov loop aam jecxz aam mov mov xchg in clc (bad) not rol mov lret in mov ljmp cltd icebp fstp loope cmc ror loop xlat out sti ljmp sti faddp fwait sahf fisubl iret test enter mov pushf fcmovu sahf popf adc stc mov xchg sahf pushf lock fcos fisttpll mov iret mov mov cltd sar (bad) lret loop (bad) mov lret cmpsb mov (bad) (bad) mov (bad) in mov mov pushf in lahf int mov stos int3 rol into test mov mov lds mov mov aad (bad) not test mov mov test sahf cwtl lret lods cmpsb in (bad) cltd fidivr sub stc stc dec nop (bad) nop lret test mov (bad) sti faddp fwait test mov (bad) mov (bad) mov (bad) in xlat out sahf popf adc stc (bad) lret hlt in pushf mov mov fistp mov iret mov mov cld div jmp leave clc std mov test sahf int mov xlat popf lods xchg mov int3 lret repnz into lret mov mov lahf scas cltd xchg lods mov loope xchg stos adc fsubrl xchg ficom popf mov aad xchg popf int mov xchg cmpsb out xlat rorl mov mov loope jecxz (bad) (bad) call mov iret leave mov mov fisubl ret lret mov mov (bad) into xchg int3 leave test mov cltd fisttpll sar mov ljmp (bad) mov ret cmc imull faddp fucomi fisubrl cmpsl scas (bad) std mov call sahf popf adc stc std iret aad rorl test sahf frstor cmpsb lods (bad) mov iret mov enter icebp fdivp xchg into mov stc ljmp into mov popf lock loopne mov ficom mov cmpsl mov mov into mov mov mov fsubrl test (bad) mov fdiv out test shr mov icebp leave xchg xchg mov mov leave sar fstpl lds xchg mov loop mov mov in mov xchg test lods mov mov fucomip mov lret mov mov in std sar in les mov mov fcom (bad) (bad) mov into sar lcall pushf jmp xchg repz shrl lods rol faddp fwait mov scas xchg sti mov mov popf mov stos (bad) cwtl rol loop in mov ffreep leave stos xchg lret xchg lret xchg (bad) std mov mov sar lcall mov lret xchg call (bad) jmp sahf faddp mov call fcmovne fisubl mov (bad) in xchg xchg mov enter into shr int stos (bad) mov mov enter ljmp xchg (bad) iret ffreep aad cld shr test (bad) jmp mov mov cmpsl mov fnop fcmovb mov loop mov (bad) cmc (bad) leave xchg ror cmpsl into push xchg mov (bad) mov sar sahf test lret ret cltd aam rorl mov sahf faddp mov mov cmpsl in test fist mov cmpsl lods fucompp out int in (bad) mov lods cltd (bad) mov mov into sar sarl loop rcr lret stc in into jecxz icebp fldcw sti faddp (bad) scas scas stc test loop ffreep int3 rcl mul sti sahf popf adc stc sti mov (bad) mov mov iret lahf xchg (bad) call mov sahf mov mov iret mov cmc fdivrp cld enter divl movsb in lds in stos xlat popf (bad) movsb mov ret fild fdivp ror cld into roll in fstpl test cltd in test mov test int lret popf into (bad) jmp fsub (bad) int movsl iret mov (bad) sti faddp fwait mov lcall pushf xchg lods int3 popf iret leave in sahf popf adc stc mov div scas xchg movsb xorb mov mov ljmp jmp xlat mov sar in int pushf sbbl mov (bad) enter std mov jmp xchg mov test out aad lret (bad) mov xchg fild sbb popf (bad) mov into sar lods mov fsub call xchg std loopne mov xlat cmc mov (bad) sti faddp fwait cmpsl out scas (bad) fidivl mov fistp adc stc (bad) test test mov stos scas lods mov (bad) mov std mov in lods cmpl jmp ror mov leave loope lret sahf faddp mov jecxz scas (bad) lods aam (bad) lcall in xchg xchg mov cwtl fnstsw repz mov cwtl xchg test call lcall rcrb cmc mov mov xchg cltd scas pushf test movsb ljmp scas stos movsb lret test mov in leave iret ret jmp rclb fwait xchg lds fildll mov orl in fisubl loope rclb fstpl leave sar mov lcall out fdiv ret iret into mov pushf cmpsb mov lret mov xchg cld lods cmpsl mov mov aad xchg repz fsubrp ror enter mov mov xlat in stos xlat popf lret lods sahf test lock lock movsl loopne out rcr scas (bad) mov fcmovnu icebp frstor ljmp mov lret lret lret jecxz (bad) jmp mov out scas ror movsl test mov movsl movsb clc popf mov stos xchg (bad) mov xlat aad lret mov jecxz idiv mov lods mov (bad) xchg cli scas fstps mov out mul cmc enter cmpsl stc (bad) loop movsl stos xchg les test mov mov lret mov xchg hlt sahf xchg mov mov sahf faddp mov mov test into lahf (bad) fisttpl les jecxz (bad) loop (bad) mov lods xchg int3 mov scas (bad) sbb mov int in lds aad mov ljmp stos stos cmpsl into mov jmp sahf mov stc int3 int3 fwait aad cmc lret shl cli jmp fprem1 fsts (bad) mov mov loopne fnop ljmp int aad clc xchg int3 xchg int test (bad) mull mov test int mov mov fistpl movsb in mov stc mov mov faddp fwait pushf lods mov lret mov popf test (bad) lcall loop shr fcmovne in ljmp mov mov sar test mov jecxz out shl shrl call mov mov mov out (bad) enter mov fsub int xchg lret vpor rorl (bad) into adc mov mov int3 rcl out mov mov stos out lea mov sbbb mov sahf int mov mov mov clc les lods mov pushf xchg cmpsb stos sti mov lahf clc call out leave into rol (bad) ljmp leave cltd cmpsb aad xchg mov ljmp xchg lret fwait (bad) int3 nop neg mov sti iret jmp xchg mov mov (bad) int xchg sti xchg mov push jmp xchg aad xlat (bad) (bad) fsubr ror mov fcomp mov (bad) mov (bad) mov aad mov jecxz loopne fdiv rol popf sarb in mov mov lcall fidiv lret sahf loopne fcomps shll cmc cmpsb lcall stos lret (bad) in addb (bad) lock xlat sti (bad) in into (bad) cld out ret (bad) ror mov mov loope (bad) out orl mov in in int3 lret jmp (bad) test in (bad) (bad) mov (bad) mov cld fnstsw (bad) mov (bad) fcmovbe idiv loop mov ror sahf test mov xchg mov stos xlat popf in stos ret fisubrl loopne jmp into stc xchg stc aam out ljmp mov lods scas stos loope mov mov hlt xlat (bad) (bad) ljmp mov xchg xchg iret lret fcoms (bad) lods fstp cld mov (bad) in leave shr loopne (bad) mov mov ret cmc xchg lods mov xchg cld sbb xchg ljmp xchg faddp ljmp enter scas xchg xchg mov fwait test fisttpll in aam fcmovnbe out fwait popf adc stc in test (bad) stos movsb mov mov movsb mov lods sbb movsl xchg (bad) mov rol lock lret lret mov mov int mov mov or loopne jecxz in fadd test cli clc (bad) lahf pushf stos mov xlat popf roll stos loope pop mov (bad) out call repnz lods xlat jmp scas not pushf int3 lea mov fadds mov mov aad enter aam mov xchg mov test nop mov fisub call loopne loopne hlt repz mov test int3 subl mov fwait std mov mov int3 stc stos (bad) fmulp aad lods cmpsl lds fadd movsl movsb loop mov (bad) mov into xchg sahf (bad) xchg sar popf adc stc std lock std into mov xchg lcall iret (bad) mov leave (bad) movsb mov in in sar cld fmul pushf std (bad) faddp mov fidivr jecxz test mov shr in into call hlt loop ljmp stos xlat in stos xlat popf fimull lcall repnz fdivrp aad xchg mov out stos in leave fisub fnsave mov into sar scas cmpsb in inc fucomi xlat iret cmc clc ret icebp out mov mov mov mov cli lcall (bad) fwait icebp sahf clc shr out rol stc jmp dec les (bad) fwait stos rcrl fildl lret cli (bad) repz out lret (bad) icebp stc int fnop cmpsl cltd iret lret xchg mov mov sar fcompl icebp int3 ret (bad) lret aad clc (bad) (bad) in xchg leave mov mov fisttpl mov test ret cli into ror sti rcl sahf jmp into int3 stos in faddp mov ret mov pushf fstps scas leave int3 lahf loopne (bad) call lret ret fadd in lock test aam movsb test scas (bad) mov mov mov in push mov xchg mov shlb into mov out xchg jecxz hlt test lcall sarb mov mov ficomp clc fnstcw (bad) cmc (bad) mov xchg mov enter mov mov nop mov loope mov mov stos std mov repz shl xchg mov ljmp sti faddp fwait pushf (bad) mov lds mov popf ret xchg cmc cld icebp int3 enter into fldt cltd mov mov ret mov cmp fdivr stos hlt repnz out (bad) testl leave mov mov mov int mov mov hlt les out int scas (bad) out fsubrp stos lea fdivrl fucom test iret mov icebp cltd fld1 vcmpps test fadd int3 stos repz (bad) sahf mov mov xchg rcll in (bad) cmc xchg lret mov rcr scas (bad) stos movsl mov lods mov stos xlat popf fnstsw mov mov (bad) lret xchg cltd xlat aam repnz movsb xchg ret mov (bad) (bad) int lods mov into sar fstps fmul in in fdiv mov decl (bad) fwait mov xorl mov mov fmulp int popf adc stc mov leave movsl sarl mov fcomp aad fwait xchg mov jmp xchg push (bad) shr out mov mov int mov mov rorl in xchg xchg mov cmp ljmp mov mov popf (bad) mov into sar xorl popf iret in enter repnz cli lods stos int test ret test mov std lods pushf in mov mov xchg ficom enter out jmp repnz mov xchg lret (bad) enter mov (bad) in cmpsb lock jecxz in fdiv fwait popf adc stc ret aam lds stos aam mov mov popf lcall (bad) fdivrp ror test mov fbstp mov fdivrl lahf int xchg sahf mov ret (bad) call test in (bad) movsb call movsl mov popf std mov fcmove test (bad) cld xchg lock (bad) mov div fisub leave mov mov mov sar sahf mov jmp xchg out lret vcmpsd scas repnz (bad) mov loop mov repz icebp fsubr jmp jmp popf adc stc (bad) xlat (bad) iret mov (bad) xchg sahf fidivrl (bad) test mov iret mov ret sar xchg cli lds lods icebp iret enter sahf mov test xchg lret jecxz cltd lcall fsubp xchg mov popf ffree mov out (bad) xchg test mov ficompl mov into sar fsubl out loope jecxz lret out scas std in rcl in test mov mov nop mov fimul icebp cwtl mov (bad) mov fsub xchg aam test jmp mov lods popf test xlat rorl scas (bad) lods stos sti mov aad cwtl (bad) sahf sar fnstenv mov mov lret mov into mov (bad) into fdivrp mov lret mov cwtl inc (bad) (bad) scas std lea test fistpll ljmp movsl call int xchg aad int3 (bad) fptan leave (bad) cld mov (bad) fwait stos jecxz (bad) mov in mov loop icebp (bad) sti lret repz leave xchg mov out (bad) fnop mov xchg mov mov mov sar mov mov stos (bad) out pushf xchg (bad) jmp lahf in in out cmpsb mov mov mov mov test xchg xchg mov mov mov test lea cwtl cwtl call (bad) mov into sar movsb (bad) mov fdiv mov enter mov stc lcall mov fstpt les (bad) pushf in sahf popf adc stc (bad) fucomi scas repnz cmpsl mov mov rclb iret mov (bad) leave xchg ficom mov fmul fldl2t stc cmc xchg int mov xlat popf ret (bad) mov sbbl aam fucomip (bad) jmp stc rolb in (bad) pushf xchg mov pushf int mov mov cwtl clc mov mov jecxz mov (bad) cmpsb lds rcr enter leave sar mov mov loopne into std int3 test hlt cmpsb mov mov in xchg mov add (bad) mov mov cld xchg xchg mov mov in in lock mov nop cwtl xchg cwtl fwait and (bad) mov into sar ficompl (bad) mov xchg iret mov fcmovnu (bad) iret mov (bad) sti faddp fwait mov fiaddl mov (bad) lods xchg repz sti jecxz jmp popf adc stc (bad) cmpsl lods lods lods xchg xchg subb mov repz mov mul (bad) leave cld cwtl cmc test mov fnsave (bad) xlat in fisttpl std ljmp (bad) aam ljmp mov clc call test sti (bad) mov mov fcoml (bad) iret mov in div in cld mov (bad) std scas and in lret (bad) std (bad) mov inc rcr loopne out out in call xchg (bad) xchg xchg mov mov mov ljmp mov fnsetpm(287 in (bad) pushf fildl xchg test ljmp addl scas addl ljmp stos mov out xchg icebp scas movsl shll xchg cld mov lcall shll scas (bad) mov xchg int3 xchg cmpsl cmpb scas fildl xchg std popf fcomi fcmovb nop xchg cmc xchg out in out vpsubd rorb fstpt mov mov out jmp (bad) int loop ljmp lret mov ret out in stos xlat pushf fnstenv fyl2x sahf cld (bad) lret out imul icebp (bad) fld ret cmc ret mov fsts pushf mov mov sar lahf loop pushf in enter xlat xchg shr aad clc enter into mov lods mov cmpsl (bad) cld mov into xchg scas addl rol jecxz aad cltd xchg xchg mov fiadd mov lret (bad) xchg mov lret fcmove ret rol rol cmpsl mov les mov loope fwait lock movsb mov mov iret mov cli divb std out lock sar rorb out movsl scas loopne cwtl mov mov (bad) nop mov sarb loope into lods mov mov scas (bad) xlat in stos xlat pushf enter into lods test int loop lock lcall mov lea cmpsb fadds repz leave stos fstp (bad) into jmp xchg scas addl cld ljmp lret mov into movsb xchg xlat rorb mov (bad) loopne sbb enter mov mov lods fdivrs mov mov mov nop (bad) cltd xor lds sarb mov xchg mov int3 popf mov mov mov lret sti sahf mov loopne mov mov movb mov mov fstps sahf ret ret mov mov mov enter out cmpsb lret mov xchg std mov cltd lret imul aad (bad) xchg xchg (bad) ljmp mov popf movsl sahf fidivl lahf (bad) enter cmc ror cmpsl mov mov int xchg mov scas mov stos lods loopne (bad) mov cltd nop (bad) call xchg idiv ret shr cmpsl lret xchg stos mov stos xlat pushf fdivl test (bad) in lret aad aam lret movsb test pushf mov mov fcmovu lcall mov xchg scas addl mov lock popf lods mov stos mov leave rcrb mov fsubrp fsubr lret in enter (bad) lods ffreep sar rorb mov mov xchg mov lret std loope sahf mov fcmove repnz int leave leave xchg lea fistpll rcl mov sar popf in mov rcll out shr mov out cmpsb mov mov fwait mov fimull popf xchg scas addl shr lods ljmp int sahf loope (bad) xlat rorb cltd fcomi cmp int3 lcall stos (bad) mov lret iret rol fadd mov mov mov fstp mov cld out xchg out hlt fsubrl mov sbbl xchg leave sar mov fcomps jmp iret shr icebp mov movsl mov (bad) ljmp mov out stos mov div in int ror cmpsl mov sahf xchg xchg mov pushf mov mov mov cltd nop (bad) xchg clc xchg xchg loopne std mov in cwtl mov mov mov mov sahf loopne lret ror notb fnstsw lea mov or stos fcmovnbe mov (bad) mov nop xchg scas addl sti mov stos mov mov out xlat rorb test out mov fstpl stc (bad) shrl jmp rorb stc fimul lret mov int xlat xchg lods out sar roll subl rcl mov sar int3 iret lcall jmp mov cli jmp test mov rol iret mov fwait mov scas mov lret lret (bad) div hlt int mov mov mov cltd mov (bad) mov stos (bad) mov cltd nop (bad) xchg mov icebp out rcr mov xchg test xlat pushf rcl popf xchg cli mov cld fwait call rcrb pushf mov enter jmp fdivrp mov mov (bad) mov (bad) mov (bad) (bad) mov iret fistpl (bad) ljmp cltd (bad) fldcw cld lahf pop iret ffreep sti fxch sarl into fmul lahf lret enter pushf mov mov popf mov (bad) hlt fucom fmuls enter stos in rol fadd mov cwtl rcr out test iret mov fsub mov xchg fldl2t cltd in jecxz iret out mov lea fcom in stos xlat pushf mov mov ret fmul (bad) xchg fnop mov cmpsb pushf mov mov lret mov test cltd xchg mov fmull ljmp (bad) icebp enter pushf mov fwait test xchg add lahf aad into aam xchg lock leave cwtl rcl xchg fdiv int mov mov mov lods lret ficomp shll incb enter iret xchg lret rcl aad cli mov cli fadd mov mov cltd mov test ljmp mov cmc rcr lods lret mov test test mov stos fmulp jecxz std (bad) icebp call (bad) ret mov lahf mov enter call mov lods sti nop xchg scas addl into mov test mov ret (bad) (bad) out movsl stos rcrl loop cld into mov mov mov nop (bad) pushf lea out xchg mov stos (bad) mov cltd nop (bad) iret out (bad) lcall fimull stos xchg xlat pushf lds aad mov aam fcmovb ret lds cmpsb pushf mov (bad) mov fwait mov fldt xchg enter jmp (bad) fwait stos (bad) stc repz mov (bad) ljmp (bad) in mov lcall lret (bad) out sub ror cmpsl mov xchg test cltd xchg mov fdiv lods fdiv mov sti fwait mov hlt jmp hlt out ror int (bad) fsubrl fadd mov mov mov mov ljmp jmp out sti scas clc roll mov rorb xchg stos stos call loopne ret cmpsl test cld into hlt cmpsb pushf mov mov xchg mov roll out mov scas jmp xchg scas addl ret aam out xchg int3 xchg xchg mov xorl mov xchg pushf repz shl cli mov mov lds lods mov sbbl cli cltd nop fnstsw nop fmul neg adc stos lret cltd xchg lret mov lea mov fiaddl mov fcompl mov out (bad) fcmovbe stos xchg mov iret (bad) into mov lea mov sar mov mov popf loop xchg (bad) lret mov mov enter mov lret mov (bad) fsubrs xchg mov mov addl fcmovne aam in (bad) nop iret (bad) mov leave fist xlat rorb lahf mov (bad) (bad) shl div movsb hlt (bad) cld loope in test xchg (bad) mov mov sarl mov cltd nop (bad) iret mov int3 xlat mov shr (bad) lret int xchg mov stos xlat pushf cli fstp cwtl stc (bad) mov loop jecxz enter sar jecxz jmp (bad) sahf cmpsl loopne movsb shll mov sar test idiv ret loop cmpsl mov in out mov stc fistpl ljmp mov mov scas iret mov ret in lahf leave sti rcl int repnz out mov out jmp xchg mov mov test rcrb mov xchg ljmp mov rol fadd mov movb ret sti mov loope sahf mov enter repz mov movsb fsubrp mov in mov mov sar mov call mov (bad) (bad) stos mov rol iret mov fldlg2 cltd cmpb xchg int3 fwait rcrl ror int mov xchg mov mov mov mov cli cltd nop fcomip enter loop lret cmpsl rcr stos nop les lods mov in stos xlat pushf lret mov sbb mov lock jmp fsub shl (bad) lahf mov ffree (bad) (bad) mov rorl std (bad) inc (bad) iret (bad) cmc mov mov lods lods mov xchg lahf and mov mov mov stos lock iret enter ret mov mov in test leave rcrb ret jmp cmc stc out out cwtl fnstsw mov lret mov cmpl loope lods aad mov nop fist iret (bad) jmp fmulp cmc jmp mov fstps test mov ret fdivrp clc stc jmp mov divb stos mov scas ret lcall rcl mov sar mov xchg loopne repnz fsubr leave mov (bad) pushf mov mov loope mov loop in into xchg scas addl xlat mov mov stos stos movsb test aam mov clc mov mov mov jmp fsubr (bad) (bad) cmc mov cmpsl mov mov stos xchg xchg stos fildl mov cltd test cltd nop fistp into cltd rol (bad) lret stc (bad) mov xchg test mov rcrb mov out lods adcl mov enter into test test scas mov sarl cltd clc lcall (bad) std into cmpsb pushf mov test mov mov lds aam xchg jmp xchg scas addl in cli mov rep mov xchg mov mov mov (bad) cmpsb fwait sti mov clc cwtl call enter scas mov xchg sahf cltd fnstcw xchg les (bad) (bad) mov cltd mov fdivs (bad) repz mov (bad) mov into xchg movsl mov mov sahf (bad) out loope sahf mov fcomi mov lods mov mov enter (bad) rcl mov sar mov rcrl lock fld cli xlat int test (bad) ljmp stos stc mov popf into sbbl shl in cmpsl mov pushf mov mov lods mov clc stos (bad) mov cltd nop fucomip int rcrb rcl rcl mov cmpl adc in (bad) clc hlt lock adcl int cmpsb pushf mov xchg pushf lods scas out cmpsl adc cmpsb mov mov nop xchg scas addl ffreep int3 xlat ror lcall aam mov (bad) mov test (bad) xchg inc ljmp mov (bad) test mov fwait mov mov cltd nop ffreep ret cltd lock leave fcmovu jmp mov mov fimul xlat pushf lods mov fisubrl (bad) ljmp icebp ret (bad) iret pushf xchg mov into mov xchg test scas mov clc mov cltd mov call ret mov stos lret (bad) mov mov shll movsl mov cld call (bad) divl xlat test test lret nop sahf mov (bad) mov xlat rorb cmpsl mov jmp repz mov jecxz icebp sahf xchg int3 sahf lcall out mov movsb mov cltd nop (bad) rcr in mov call jmp int3 mov stos mov fidivr mov fildll mov cli inc leave sahf mov fsubp enter xchg int3 sahf mov sbbb rcl mov sar test aam lcall in fucom shrl mov rol iret mov fwait mov test cwtl lret fsubrp fiadd cmpsl mov test mov decl lods popf (bad) mov cltd nop fistp enter ret mov xchg lds in stos xlat pushf enter loop xchg into mov xchg rclb fmulp lret in xchg mov xchg scas mov fwait mov mov sar ret mov in xchg ljmp std cmc into (bad) stos lds iret mov mov aad mov out rcr ror xchg hlt int mov lods les mov sbbl xchg loop jmp ret rol xlat movsb in out (bad) aam mov fadd mov (bad) lods ffree mov fmul int3 shr inc xchg fnstsw mov andl popf rcl mov sar mov fucomi int xchg ret test (bad) mov int rol iret mov cmp cmpsb mov xchg fdivr mov (bad) aad in hlt int mov xchg mov movsl mov fdivrs mov nop ffreep aad in (bad) mov stc jmp ret out cwtl mov xchg xchg scas fwait mov in stos xlat pushf fnstenv (bad) mov cltd icebp call mov leave xchg nop mov fisub out mov mov sar mov jmp (bad) ftst xchg sti test icebp stos scas mov (bad) ljmp cmpsb mov scas fsubr mov xlat (bad) (bad) enter mov rcl ljmp xchg cltd rorb mov jmp stc loop rcl in cmc mov out int3 stc rol fadd mov in mov (bad) (bad) fyl2x xchg mov leave lret stos leave xchg mov fldl rorl (bad) dec in stc call jmp lret std mov (bad) ljmp xchg cwtl cltd repz stc mov (bad) in cmpsl mov fldcw xchg mov ljmp mov cltd nop fcomip aad lcall mov movsl cmpsb lahf lret lds in stos xlat pushf in sbbl (bad) ffreep sti fadd cld cli xchg test cld fnstsw lea popf out test cld lcall into fcmovnu mov addl jecxz aam sti call scas (bad) sbb mov mov rcrb xchg jecxz (bad) std div (bad) clc jmp mov sar rorb into cwtl adc mov int3 movsl out std mov mov mov int xchg mov xchg mov mov rep rcl mov sar int cld (bad) in mov jmp xchg jmp (bad) lock lret stc fldcw mov mov mov lret addl lock fnop rcll mov enter leave rcrb leave out (bad) sti nop mov mov rol fadd mov (bad) mov (bad) lahf lahf jecxz mov std cli xlat xchg out iret leave fsubrs test in (bad) stos rcl mov sar movsl sahf popf cwtl lret xchg out mov leave ret clc hlt lret xchg sahf xchg xchg mov mov loop fcmovb fidiv fdivs addl cli mov stc into cli xchg mov rorb xchg mov mov fstp (bad) rorl lods (bad) cli ljmp test cwtl mov mov xchg les nop (bad) xchg ljmp (bad) loop aad iret mov fwait mov in stos xlat pushf cli mov mov sti out ret cli divl cmpsb pushf mov mov lcall xchg (bad) test (bad) nop xchg scas addl jmp rcl lret jmp mov lods mov xlat rorb mov (bad) xlat in (bad) mov fdivrs ffreep sar rorb iret fisub call rcl out icebp xchg loopne iret hlt stc fisubrl mov xchg fdivrs lds sar enter lcall out mov cmpsl into clc fcompl ljmp mov leave sar mov icebp loope lret sub out mov mov rol mov mov mov aam leave sar (bad) mov stc fcoms sahf stc int mov fxch xchg sahf mov iret mov mov cmpsb cmpsb fwait mov pop mov rcr lret hlt int mov fwait scas mov scas int3 mov rcll enter cli cltd nop ffreep lret cmc repnz (bad) rcl cmc mov into xchg leave mov in stos xlat pushf mov xchg scas int3 mov shl cltd mov out leave aad (bad) stc shrb mov (bad) mov fadds mov sar xchg iret lret loop ror (bad) int mov out lret shll mov mov sahf movsl test fsubs scas addl loope sti fsubrl mov test (bad) mov cltd lret fsubrs lds in cmpsl mov int3 cwtl mov mov mov mov (bad) (bad) mov cltd nop (bad) lret sar enter mov stos les (bad) mov xlat pushf cli mov mov mov aad ror in add fnstsw lea popf int3 mov icebp mov mov nop xchg scas addl clc mov xchg int3 lods mov int3 cwtl mov leave rcrb xchg leave (bad) fist xchg out shr ret in rol fadd mov mov mov jecxz cmpsb mov into mov sahf (bad) ljmp fcmove shr lods mov sahf mov stos xlat pushf cli mov (bad) ret mov enter iret iret mov rcr lods lds (bad) iret subb mov clc lret (bad) leave mov ret jmp fnstenv fcmove (bad) int3 xchg iret xchg mov mov stos xchg cmpl rcr mov sti fdiv mov enter (bad) lret fsubrl xlat rorb lcall loope call ret mov (bad) iret rol fadd mov enter fsubrs mov mov jmp (bad) lret xlat xlat mov int into cli lods fildll mov mov stos xlat pushf in fisttp int mov out loopne fsub ret stos jmp mov popf xchg cltd cltd lcall mov call into mov ret mov jmp cwtl in std jecxz mov scas out stos int ret mov (bad) xlat rorl mov pushl ret (bad) out ret imull faddp mov (bad) mov jecxz mov fisttpll cld xchg xchg mov mov lret aad jmp rcll int enter rorb clc mov pushf lcall movsb stos int3 (bad) in lds test fwait mov sti into mov xchg fsubp in sti shl loopne test lret fidivr fwait scas stos movsb in pushf cmpsl mov fwait mov lods rcrb int3 popf adc stc mov les frstor mov fnop xchg rcl lock mov (bad) fadd (bad) mov int test stos loop aam mov cli lea cltd sahf (bad) mov loop out imull mov mov mov fwait mov ljmp sahf into iret in in lret cli jmp sar aam mov (bad) sti faddp fwait mov stos mov xchg popf lahf fcmovnu fxch (bad) fcomip in (bad) xchg fstpl stc fcmove repnz movsb xchg mov (bad) movsb movsl enter ljmp mov iret mov idiv clc stc xchg lock out lods mov (bad) mov mov sub xchg into cmpsb mov lods enter cwtl fstl shlb call lods (bad) into mov enter shrl fisttpl cwtl loop push (bad) out fildl cmpsb in sti mov mov fcmovbe popf lcall stos call stos lds aam repnz sahf icebp (bad) mov lcall fsubp into mov test stos out (bad) cwtl (bad) int popf adc stc (bad) in stc enter xchg mov lods (bad) mov xchg mov stc hlt (bad) cltd loop fadd mov rol (bad) xlat lret lock iret sbbl xlat popf fisubl xorb out lahf lret fcmovbe mov mov mov mov fmuls mov mov xchg faddp (bad) stc nop fadd fcmovnu mov lods xchg xchg lods movsb lea mov sar mov lcall mov test mov mov mov mov (bad) fnstcw aad loop int3 jmp repz out stc lret jmp mov lret xlat in stos xlat popf fsubs cwtl int3 pushf mov std fcmovnb fmul xchg hlt mov iret into (bad) lret out movsb xchg mov mov mov mov into sar fstp enter in (bad) iret int3 enter ror icebp fsubrs sti faddp fwait fwait lret scas mov mov mov mov shll xlat out mov lods mov into test (bad) fistp mov iret mov lret lret out aam aad (bad) repnz sbbl mov shrb mov lcall cmpsl mov mov xchg cltd movsb mov mov lea in fstpt xchg fsubp clc xchg xchg xlat leave ret rol stos leave mov mov (bad) enter leave sar test xchg sti jmp (bad) lcall mov test lods std mov out mov mov loope fcomip int loope test mov (bad) iret scas mov test test jmp stos lret mov out mov out xchg mov cmpsl ret aam in out mov into mov popf (bad) mov into sar (bad) mov cwtl in into out in xchg fbstp in mov (bad) sti faddp fwait mov popf lods fsubl mov fcmove sar sahf popf adc stc out lret fadd test fidivr xchg xchg movsb xchg fcmove lods (bad) mov iret mov aam rcl fld out lcall stos xchg mov xlat in stos xlat popf fiaddl movsl (bad) mov int3 int lret fld xchg in cld int xchg (bad) mov popl mov stos (bad) test sti mov lret call (bad) into shr lret mov fwait xchg rorb pushl fdiv into std call in in mov cmc lock lods xchg cltd mov stos rorl scas sbb mov sahf iret loop fmul sti div enter cmc out in movsl iret mov lds mov fild mov jmp neg out (bad) enter in out jmp nop scas mov xlat in stos xlat popf in mov mov pushf jecxz jmp negb cmpsl mov mov mov xchg xchg fbld mov fcmovu fmull mov ret in mov mov lods in lods mov fcmovu fcom rorl (bad) mov mov xchg std cwtl clc (bad) mov ret cmpsb mov ret stos lcall mov ret mov xchg stc in xchg int idiv loope stc leave fsubp (bad) in mov xlat in stos xlat popf out into sub mov (bad) repz int3 loope mov (bad) (bad) iret cwtl xchg ret iret test ljmp movsl iret rol enter fstps rcr in mov cltd (bad) sarl lods lods mov (bad) mov (bad) out (bad) mov jmp test aam xlat rorl mov icebp xchg mov ficomp rcll ret mov lods movsl mov mov into mov ret lahf jecxz xchg xchg mov (bad) lock out out in call mov cmpsl xchg sbbl test fnop int in ret shl out ret jmp lcall add stos in mov out fnop lret in ljmp adc stc lret (bad) fsubrl xchg fidivr stos mov mov mov iret pushf in (bad) (bad) in int out stc loop lret (bad) (bad) mov leave lahf mov xlat popf mov test movsl ljmp lock mov mov mov stos iret mov (bad) in lahf clc mov lods mov mov ret sarl fstp xchg fcom rorl lods test mov lahf call xchg (bad) xchg scas lods mov mov xchg xchg std fcom popf repz xchg out rorl fldt (bad) (bad) int xchg int3 mov fcmovne ljmp xchg mov mov fwait leave fcmovb mov lcall xchg fucomip (bad) leave fisubl mov fidivr lods mov mov lret xchg popf mov scas out iret scas lret cmpsl mov popf mov (bad) xchg fiadd xchg jmp ror xchg out xor mov mov scas mov mov scas in mov sbbl lea fsts stos std test enter mov mov ljmp mov iret ret leave faddp aam mov (bad) pushf enter lahf pushf (bad) (bad) scas in (bad) loop stos in sahf scas and xchg fwait leave lds (bad) cmc jmp (bad) cli call lcall test sahf mov scas mov fwait rol (bad) (bad) xchg out jmp call sahf lea test (bad) mov (bad) into (bad) into ret lock clc shr in cwtl xchg mov cli cltd in (bad) lcall (bad) lahf cli cli stc rol vcmpss pushf decl out xchg mov in ljmp mov fnop call shr lcall xchg lcall out mov cltd sahf in into (bad) cwtl ret ret lret ret out fmul (bad) leave in out imul cmc ljmp (bad) sahf out add xchg mov sti xchg into aam std vpaddsb out shr cmc (bad) jecxz int3 cwtl fwait stos mov xchg mov cmp icebp enter ror (bad) rcll clc stc fildl lahf mov sti mov in test fcmovnu ret fbld fucompp lock jmp mov lret cli test in cwtl in mov in (bad) icebp notb fwait lret xchg fwait cltd xchg sahf cltd in lret in test loopne mov cli clc fadd ret (bad) (bad) repz out loope in pushf fstl (bad) (bad) mov sar mov scas fstpt fmulp cltd xchg ret out fptan cmpsl lret mov or stc cwtl mov mov cltd stos call in stos in sahf lods in sahf enter loop xlat (bad) fsqrt jmp xchg (bad) mov out (bad) cwtl (bad) mov pushf out mov cli std enter lret icebp lahf test sti std mov addl stos in sahf mov sti cltd (bad) fcmovu leave aam mov (bad) out int3 in xchg xchg lahf cwtl mov in out (bad) cltd (bad) mov test fcmovb iret aam (bad) out vpsubsw call test nop xchg pushf mov (bad) cli (bad) in stos in sahf mov (bad) rcl lds (bad) hlt jmp sahf mov stos out sub in mov fwait ret lods jmp aad xchg call pushf stc cwtl mov mov sahf in lret std mov lahf fcmovnu (bad) (bad) rol ret divl fwait (bad) icebp mov ljmp sub lea (bad) lret lock repz (bad) repz lock sub (bad) out mov (bad) ljmp ror into lret mov loope out pushf fstl popl call mov stos rcr lret in int3 aad (bad) enter lret std std xchg cltd mov lods xchg lahf mov test sahf mov cli stc rol into into (bad) into ljmp cmc lock cwtl in xchg rcrb sti scas cmp (bad) into mov decl sti std mov sahf xchg test mov sahf mov popl out lahf into bnd leave leave xlat roll loop stc int mov cmp mov mov cmp cwtl loopne aam cld lret mov loope out fcomip pushf xchg popf sahf std mov stos out mov out xchg xchg in int3 ret out fcmovbe out (bad) clc out pushf fildl sahf sahf mov sahf mov ljmp xchg in out lahf into repnz into int3 iret (bad) mov incb popf xchg mov mov loope mov mov std xchg aad scas enter jecxz (bad) call repz xchg xchg sti pushf lahf mov test icebp mov shrb sub loope mul int3 cwtl (bad) xchg xchg mov mov sahf mov sahf cwtl pushf (bad) enter iret rcl out out int3 in (bad) (bad) ljmp sahf mov mov loopne sub (bad) cwtl (bad) lods (bad) ffree iret aam (bad) out vpaddsw hlt out sahf mov mov mov xchg cli ljmp ret int3 clc fcmovbe out lcall cwtl cld mov sub sahf (bad) mov lods test lahf leave lods jmp int3 out sti in aam call mov cli addl cwtl mov (bad) in fistpl aam xchg mov into cli out stc in std mov (bad) (bad) cld sahf test lea xchg xlat scas cli (bad) iret sbbl std repnz mov scas cld cltd cwtl out lods std sahf lahf test lahf cwtl in mov into (bad) loope (bad) sti icebp mov (bad) call mov mov mov mov ljmp jmp (bad) fpatan test cli mov jmp xchg mov xchg ljmp mov jmp fcmovbe shlb clc mov (bad) call cwtl mov mov lea sti mov ret (bad) leave enter lahf call call nop xchg xchg lea sahf (bad) sti xchg in lahf in sahf mov lahf enter aam rcl adcl fisubl scas (bad) cwtl test (bad) in fisttpl mov fcmovnu scas (bad) aad (bad) (bad) (bad) cli fucomi jmp xchg sti mov mov (bad) test (bad) in mov (bad) fsub lret (bad) mov test out jmp mov test test fldl fildll aam mov cli jmp test popf sahf mov (bad) ljmp fsubrp iret mov shr into fcmovnbe flds in cli out out scas lahf lcall xchg std ljmp xchg scas sti rol repz icebp cmp leave in out stc in mov mov mov ljmp mov sahf fildll (bad) int sahf out mov out out sti nop cltd xchg (bad) std mov cmp mov ficomp sar fcmovne div std in clc (bad) in mov scas mov (bad) cwtl in ljmp (bad) mov jmp vmovq out jmp out sti pushf mov (bad) in test mov test mov ret std (bad) aam cltd call out out popf xchg sahf std mov (bad) std mov test xchg ret mov fcomip out out call cltd xchg sahf mov mov icebp mov out out ret xlat (bad) mov ret stc sahf scas mov test (bad) in lds mov mov out mov ror aad xchg jmp ret rcrl movsb (bad) in in out (bad) cltd (bad) mov (bad) in mov jmp into cli in loopne pushf lret xchg sti lcall mov mov scas aad rol inc aam mov cld pushf icebp lea cwtl (bad) ljmp (bad) cltd mov test ret leave mov sahf (bad) sti mov repz mov test xchg in mov in fstp (bad) int3 cli lock clc int icebp sti std fwait lahf (bad) mov movsb (bad) in in into (bad) cltd mov cltd icebp enter rol into xorl sti sti std fwait lahf (bad) mov test sahf stos sahf call (bad) jecxz aam int3 les (bad) (bad) push pushf mov pushf in ljmp cltd (bad) in mov lret shll hlt loope out call mov cwtl mov xchg rolb lahf fcmovne in (bad) aam mov jecxz in jmp sahf mov (bad) (bad) std pushf (bad) cwtl (bad) test mov fistpll lock xchg enter repnz sti cltd cld mov out xchg adcl mov (bad) ror int3 rolb cli jmp sahf lcall (bad) cld xchg into (bad) cltd faddl loopne (bad) xlat ffreep mov int call cwtl mov test ljmp mov test into fst enter jmp repnz popf xchg sti scas sahf mov ljmp cwtl test popf mov fcmovnbe loope (bad) sti icebp mov (bad) std cli mov lcall scas (bad) cld mov call cltd xchg mov leave lret (bad) pushf int3 cwtl popf sahf mov (bad) fcmovnu mov loopne mov fdivrp out aam xchg mov fxch cmc call sahf pushf lahf mov mov mov out test xchg aad scas call in sub stc loopne repz mov mov sahf call lahf cli ljmp mov ror (bad) fpatan xchg lcall cwtl mov out (bad) cwtl (bad) scas test mov out enter int3 mov call pushf stc cwtl mov sahf lock mov lea std test out enter rcl mov out iret repnz std mov lcall mov movsl mov lret stc (bad) into enter shlb sti ljmp cltd nop std pushf (bad) cwtl (bad) mov (bad) (bad) lcall (bad) icebp jecxz fld int3 (bad) sahf (bad) fsub ljmp movsb lods xchg cwtl cwtl mov (bad) cltd scas cld mov lret stc int3 int pushf (bad) cld jmp mov cwtl sti xchg in out (bad) cltd (bad) stos mov mov (bad) scas rcr xlat dec cltd hlt out jmp mov mov in xchg mov mov ret into loop cli sahf stc mov out ret int3 cwtl xchg xchg (bad) cwtl mov test sahf in fisttpl mov mov ret int (bad) (bad) call lahf stc jecxz neg out in xchg mov pushf cwtl (bad) mov call mov mov out lahf into repnz (bad) aam (bad) hlt icebp xchg hlt sti ljmp popf sahf mov sti ljmp ljmp (bad) mov out pushf int xchg sahf mov mov ficompl cltd sti lahf mov aam xchg mov sti in call nop mov test mov loope lcall (bad) enter iret ret test in lock out sti mov mov loop mov ljmp xchg faddp frndint aam xlat lds lock call xchg lahf xchg (bad) in mov in les xor pop push xchg (bad) mov cmpsb cmpl sub test decb jae (bad) (bad) (bad) cld mov insb dec repnz test adc mov jmp jmp (bad) cltd jmp xchg jmp in mov cmp scas mov lock jmp jecxz ljmp (bad) lret mov ljmp and cmpsb addb lcall cld cli hlt in xchg ljmp repz (bad) lret out lea mov sbb cltd lcall jnp jmp imul mov in out (bad) in std or mov test test or cmc cld clc out out icebp mov int3 mov (bad) mov mov test (bad) mov rcrb mov loope (bad) cld jmp in mov jmp mov icebp mov mov test mov lods sbbl in (bad) lret call loop imul test scas mov icebp xchg mov out jle std std clc jmp and or jecxz mov out xchg mov scas stos mov cmc lcall (bad) loope cmc div in in mov loop out out in jmp cld test ja cmpsb cmpsb cmpsb addb lcall loope lret imul clc xchg xchg jmp ljmp mov loop lea fdivr cli repz int3 mov stc cwtl push mov icebp in (bad) decb push mov mov cwtl cltd or sti jmp in (bad) clc outsb dec loopne pushf clc insl jne in or mov mov mov repz lcall clc cld jmp fwait push mov inc call stc fwait jp lods mov jns lock mov std cld clc (bad) std sti imul sub fwait imul mov mov pushf mov sti cld sti ljmp loop ljmp clc insb imul scas mov mov mov repnz (bad) std cli call mov decl jmp in mov lock js stos scas scas mov lock xchg jl out jg loopne mov decb or fwait imul in fwait jp movsb scas lods mov jno (bad) mov (bad) repnz (bad) cli clc insb imul mov cld insb inc jecxz mov test mov mov xchg lea jp (bad) ljmp ljmp sti insl popf ljmp mov movsl (bad) (bad) cwtl cltd or stc cld sti cli loope ljmp cmc (bad) sub scas mov mov jb addb inc repz sti out in loop and hlt xor stos scas lods mov stc lcall in in sti sti repz cli in push in mov hlt mov mov mov (bad) nop mov clc cli cli in call mov cld or jecxz mov in cwtl jnp mov cmpsb mov xchg std jmp fdiv loopne mov in cwtl imul loopne jmp jmp mov mov je mov out js (bad) sti ljmp in lret (bad) lret lock cmp or popf mov insl (bad) cld std stc std sti insb sbb lock lock repnz mov sbb mov (bad) (bad) sti dec in xchg out in in lock push call lcall mov mov xchg lahf nop pushf lcall clc outsl test ljmp insb sub mov fwait stos addb xchg jmp xchg in int3 mov pushl imul stos cmpsb test in (bad) (bad) lcall jmp clc outsb fs call out in in mov jmp stos mov mov xchg fwait (bad) stc (bad) ljmp in cwtl push xchg out ljmp mov mov mov add sahf std out jns (bad) sti ljmp in mov jecxz mov out xchg mov scas scas mov into cmpsb xor lcall loope out std ljmp jmp jmp in mov cmp stos mov loop mov cli cli cli loopne imul (bad) clc insb hlt loop out xchg insl hlt repnz test and mov lea std cld cli cli cli loop (bad) clc insb jno jmp push call (bad) mov mov pushf lcall or std out jp out (bad) clc int3 (bad) in decl ja ljmp xor test test sbb push dec std out neg out in fwait imul in in int mov insb jno lcall addb mov push std (bad) jmp or ljmp ljmp stos mov xchg lcall out fdivr (bad) jmp in mov int idiv insl adc int3 mov cmpsl mov mov lcall out jnp cli std lret clc insl cmp int jmp decb pop jmp stc mov mov lahf (bad) lods addl lret imul imul decb jae or mov test scas mov xchg cwtl xchg xchg adcl out jnp icebp mov xchg xchg loop mov ljmp jmp das mov mov mov sbb jmp or xchg icebp (bad) fwait push xchg mov cmp xchg jno lcall out jp repz call push out fwait xchg lock mov mov sbb pop in and fucomi in fwait push fwait imul in lock in in fidivrl lahf movsb addb lahf lcall jp call out in mov in out xchg jmp cmp mov icebp fwait cltd or mov scas cwtl xchg lcall ret mov ljmp mov xor mov cltd xchg aad xchg test lods (bad) sti xchg in stc (bad) into aam cld dec sahf jmp stc shll test test in mov fwait mov and lock xchg out cmpsb lret icebp in std cld std (bad) cli in xchg lea sahf cwtl in xchg ficomp ror lret xorl xchg nop mov scas xchg mov and cwtl cmp fld ret enter xchg (bad) in call lahf movsb mov lcall sbbl in scas scas mov lods sahf mov mov (bad) repz std jmp mov in mov rorl fwait into enter (bad) enter mov mov (bad) in cwtl (bad) std (bad) test test mov loopne stos movsl in mov lret lret lcall fsubr fisttpll ljmp scas scas mov cmpsl call repnz xchg test popf sahf mov in in sub mov lea mov stc clc (bad) (bad) sti insl sub int3 mov call mov insb dec std scas mov adc sahf mov call cld mov hlt mov in fwait push jmp dec mov mov sahf (bad) lea out cli std call ljmp (bad) in mov in mov mov cmp or bnd out xchg ljmp cld outsb enter hlt mov mov mov xchg sbbl cld (bad) jmp fwait imul in in xchg ljmp sti cmpsb mov test mov cmpsl (bad) loop popl jmp loope (bad) decb pop in xchg lock ljmp xchg stos mov mov sahf add popf (bad) push call insl test fcompl hlt in sti insb and test test mov or or lcall cld call loop imul test jecxz mov stos sub movsb mov jo mov jge sti jmp mov in lahf in jmp clc insl inc mov faddl cmpsl mov and mov hlt push clc repnz in out call out ljmp cmp mov mov sbbl std cli cli idiv or in out lock ljmp loop test cs stos and xchg cwtl (bad) xchg jl ljmp insl in insl pop out int fwait imul lds lcall cli clc call decb xchg mov jecxz clc insb addl test int idivl xchg xchg clc sti sti jmp (bad) jmp or icebp and insb pop call jno andl addl in sub xchg (bad) decl jae loop jecxz mov test aaa lods scas cmpsb movsb addb xchg fwait pushf (bad) jmp in mov jmp (bad) cld or loop (bad) std or mov or mov gs cmc loope sti insb sub loop (bad) cld or loop (bad) std or mov and (bad) in or adcl call (bad) lret sti insl dec mov in lcall mov mov sub cld jmp in in in mov decl cmp in mov test sub mov sbb aaa cld repnz out jnp out cwtl imul stos call sub cmp (bad) mov negl sahf nop loope jmp pusha stc in (bad) in xchg fucomip loopne imul xchg out mov and sub mov imul div pushf sti insl adc cld insl test lods pushf jmp add mov jo mov imul jmp pop stc sti insl test lods cmp std or cli mov mov stos mov lahf loope test sub (bad) std stc jmp xchg out stc mov jecxz out cld insb inc div sub test jecxz ret stc lcall jge in cld sti cmc imul pushf clc insb and icebp (bad) insl nop (bad) std or mov mov xchg loope sub (bad) mov jnp out cwtl imul stos jmp jmp std or in (bad) mov das mov cmpsl lods cmpsb xor xchg jmp (bad) ljmp lods fwait imul jmp scas mov xchg mov test sti (bad) repz ljmp sub icebp mov icebp mov mov mov sahf mov sti clc ljmp int3 mov icebp fwait push out fwait js mov mov xor lea std out js cmc fucomi icebp mov jmp jmp insl nop out int3 mov mov stos test mov cltd mov std std sti repz cld call or in jmp insb push mov mov movsl xor or xchg repnz (bad) stc in cwtl push xchg jecxz mov out fwait js test lods mov loop mov clc cli cli cmc out jmp call mov ljmp in int3 mov test xor add (bad) (bad) xchg sbb cld cli clc in fwait imul ljmp in jmp cs cmpsl cmpsb mov jmp xchg ljmp icebp mov in out jecxz xchg insl nop cld mov mov xchg xchg sbb jp stc fwait push mov insb adc clc decb inc in fwait jnp movsl scas lods mov imul cli cli out jnp loop ljmp ljmp mov cs mov mov addb jl stc out jnp decb repz call insb insb in int3 mov stos sub mov in add jnp repz in out (bad) or out jmp cmc fwait jnp movsb test scas xchg jno mov cld out cli jmp loop div mov in xchg call xchg out cmpsl test and icebp xchg orb idiv clc repz decb inc in xchg ljmp in xchg mov cmp mov out jge jmp mov insl push imul mov in std or ljmp cmpsb mov xchg xchg mov (bad) hlt jmp or xchg cld or loop push sub sub and in or adcl es or out out (bad) mov imul lock cmp (bad) (bad) xchg scas mov in cld cld push sti insb inc in jmp imul cwtl imul mov icebp mov mov cmp popf popf add popf mov hlt out hlt sti jmp cwtl imul repz cmpsl test mov (bad) decb xchg (bad) out jge repz sti insb sub loop out mov call xchg call cmpsl mov sbb sbbl xor jnp out test in cmp ljmp cs mov mov test std stc repz in cwtl imul mov loop hlt mov das mov loope test fwait div jmp fdiv in call lret in in out std or icebp xchg (bad) mov mov xchg and std div jmp insb and call mov in icebp mov mov mov cltd xchg sbb sti out jp out jmp pushf clc insl sub (bad) in mov in xchg pushl mov (bad) negl sbb out jle jmp mov insb fs test loope and test stos stos mov popf xchg test hlt ljmp clc insb fs or ljmp out int3 mov mov cmpsl test mov test clc xchg xorb jge jmp hlt loop or decl pop ljmp clc outsb fs mov cmpsl mov addb push clc repz xor or ljmp test scas mov repz xchg mov repnz (bad) cli cli clc insl hlt loop (bad) imul and in jmp xor cmp clc xchg addb data16 cmc loope (bad) idiv or and in cwtl jp stos test and add stos repz jnp in jp in call cwtl imul mov out xchg test mov cmpsl mov popf cltd or xchg xchg nop out jge repz jnp call out int jmp icebp mov mov cmpsb test xchg xchg test lahf mov loopne repz out jnp out fwait push mov lock in in fwait js stos test and popf lcall stc call std or std or decl cmpsl ljmp sti insl test mov cmpsl lods mov rcrl xchg sahf cld out js out jns call in int jmp insb inc out int3 mov mov mov (bad) icebp pushf mov std sti repnz fucomi in (bad) out int3 mov ljmp xchg cwtl jnp scas mov scas stos and sbb mov repz imul loop or cld or out int3 mov out test scas mov loope inc (bad) mov cld idiv (bad) jecxz test out mov in test mov mov xchg les orb clc outsb fs insl nop loop fwait push outsb fs lcall addb mov pop repz stc idiv or icebp xchg in int idiv outsb fs jmp call cmpsl mov popf mov cld sti stc cld cld (bad) jmp mov decl push jecxz xor scas mov xor lcall outsb out jns cld test movsb cwtl push jge out test scas mov lret repnz sbbb (bad) call out fwait push or out mov mov mov fwait cltd push fimull imul xchg clc outsb loopne jmp in (bad) in out loop push mov andl (bad) sbb out jp decb pop decb pop decl out icebp fwait push das inc cmpsl mov cli fwait lcall hlt out std in jmp call mov int xchg out icebp mov mov mov addb nop fwait cwtl loopne call in loopne mov lock in mov jmp cmp xchg fwait lcall gs (bad) cli clc insl adc ljmp jmp clc insb cmp cmpsl test mov xchg jno subl sti jmp mov insl adc insb nop clc insb call call cmp mov adc std std call jmp clc insl adc insb nop loop decb jae or test stos cmpsl cmpsl mov sbb jl jmp cmp imul out mov in lret fwait imul mov mov sbb push adc std clc out jp decb push decb out sti mov out decb repz or sub mov imul or jl (bad) (bad) ljmp jecxz mov in cld xchg hlt in xor test and sahf orl clc cld jmp mov lock out (bad) call mov movsb mov jo mov jl jmp cmc jecxz insl adc insl test ljmp add mov stos mov clc xchg cmp (bad) cld cld jmp in mov outsb mov clc insl cwtl cld lcall mov lods sbbl (bad) (bad) lret call test loop (bad) fidivrl mov fwait mov cld cli jns cli ljmp in mov in in mov in mov mov mov fwait mov cld cli sti std sti ljmp mov test call fadd aad (bad) (bad) in sbbl sti fnstsw in mov in mov in in mov in mov mov mov lcall std cld cli sti std sti ljmp in mov in in mov in mov mov mov lcall std cld cli sti std sti ljmp in mov in in mov in mov mov mov fwait mov lret sti std sti ljmp in mov in in mov in mov mov mov lcall std cld cli sti std sti ljmp in mov in in mov in mov mov mov lcall std cld cli sti std sti ljmp in mov in in mov in mov mov mov lcall std cld cli sti std sti ljmp in mov in in mov in mov mov mov lcall std cld cli sti std sti ljmp in mov in in mov in mov mov mov lcall std cld cli sti std sti ljmp in mov in in mov in mov mov mov lcall std cld cli sti std sti ljmp in mov in in mov in mov mov mov lcall std cld cli sti std sti ljmp in mov in in mov in mov mov mov lcall std cld cli sti std sti ljmp in mov in in mov in mov mov mov lcall std cld cli sti std sti ljmp in mov in in mov in mov mov mov lcall std cld cli sti std sti ljmp in mov in in mov in mov mov mov lcall std cld cli sti std sti ljmp in mov in in mov in mov mov mov lcall std cld cli sti std sti ljmp in mov in in mov in mov mov mov lcall std cld cli jecxz sti push mov in mov in mov in in mov in mov mov mov lcall std cld cli sti std cli ljmp in mov mov cli pop test mov mov cmp pop fist lods movsl mov int mov mov pop rorl scas add inc cmp dec fs lahf mov rcrl rcrl enter and bound fwait (bad) pop and aam adc jo (bad) lods cmp popa sub mov cmpsb sub push stos dec cmp inc es loop (bad) mov jge pop (bad) repz push jge sahf das subl mov imul jns mov (bad) cmp and shrb fsubr in inc outsb xor adc lahf jae mov js or lcall cltd icebp pop dec sub and pop hlt push adc addr16 pop cli mov fsubrs xor ja imul inc and xchg sbb mov (bad) std xchg jns and clc sbb daa and and lock ficoml rorb xchg mov out aam ret pop jmp movsl mov adcb jns pop clc iret inc xor mov rcrb xchg adc push xor int fwait icebp mov or imul cmpsl imul xchg mov cltd pop aaa push push mov inc cli add cld out and mov and mov and jle dec add (bad) inc push push les test sub pushf iret mov test mov push mov lcall fnstenv xlat mov data16 nop sbb xchg or mov addr16 ljmp cltd shld lds xchg lods ljmp ret test jne xchg push cli add pop inc into (bad) cmpsb adc insl and inc inc in jge rcll or pop cmp push xor lods daa xor push out mov sub add lock xchg or dec jmp push dec cmp lret sub xor sub cmc xor cltd (bad) loop adc cli or dec test mov loope or loopne adc adc ss mov (bad) jb dec jl fwait loopne stc mov and add push sub frstor mov int3 ret mov les loop pop cmc popf inc in or jle sbb push jne clc fsubp mov clc mov cltd (bad) sbb sbb adc inc aam (bad) lea pop mov mov mov jae dec jnp xchg repz add sub jns stc mov jmp jp frstor (bad) movsb push xchg mov lret popf mov loopne adc stos ror rolb pushf test dec push mov lcall push dec testl int3 jno push add lods mov cltd imulb hlt fwait je and adcl push mov mov cmp adc mov lret insl ja adc cli lret sub rorb movsl arpl sbb test lds jmp pop cmpsl jge cmp (bad) repnz jnp mov scas pop aad or xchg and add sbb into adc dec loope inc mov pop dec jecxz dec xchg and mov add inc sbb fist cli jnp nop cs cmp jbe arpl mov imul das sub rcll scas into inc pop cltd and push or jae dec jb aam xchg hlt call pop hlt popa cmc les push pop adc xor add out out mov jecxz ss lods jl add nop push int stc mov sbb test ss sbb pop bound push fsqrt ds lods dec adc movsl push push stc aaa cmp ret fidivrl pusha push or inc outsb inc mov test jbe test out lahf xchg js sub inc loope sbb out stos mov nop aam fwait sti into js fmull adc lods enter inc push push jle mov es pop fsubp icebp leave mov sbb jns (bad) jne or scas lret shrl adc mov dec xchg mov and or xor out mov sti add jno dec adcl inc and inc hlt in add inc mov xor jl adc mov sbb imul cmp ss lcall (bad) or pop push rcr lcall ss jle fist xchg ret ficompl inc add push mov pop jecxz jb cmp push adc adc or (bad) xor lret xor mov inc and mov fldenv fs insb lea cmp jle test iret xlat ja push cmpsl jmp xlat add mov repnz lods cmpsb repz jbe test pushf imul lcall push ret mov sbb lock pop (bad) jno push push (bad) cmp push loop mov adc arpl imul jnp (bad) loope js push pop xor popa fisub cmp lods rcrl mov test mov cwtl xchg inc enter dec push daa loop jmp mov jp call sbb jmp leave add xchg inc cmc fist lea jns inc cmp fld in push adc dec xchg scas xchg je jne dec sarl mov xor imul push or jbe pop cmc and sub jb fwait mov popa mov leave test arpl es (bad) je jb insb out fsubr arpl ret mov fisubl test (bad) je stc mov xchg (bad) mov in add or (bad) into pop sub inc jo lret ljmp aas inc cmp fistl test jmp mov lods dec push fcom xchg mov add cmp xor popa pop (bad) gs adc mov mov bound jno xchg push pop repnz dec jo or add mov xor dec xchg aaa and js mov sub nop xor xchg adc mov inc mov jmp rcrl add dec into inc pushf fcom mov icebp ljmp cld mov int3 adc mov inc dec aaa pop lock idivl cltd imul adc mov imul dec insb rcll pop pop cld xor (bad) cltd push sbb ret lret mov inc cltd xor mov insl jge add or xorl xchg xchg out dec mov fnsave mov sbb cmp sarb fsubrs cwtl xor mov mov xchg mov sub push xor mov test and mulb imul jmp mov pop imul (bad) sahf test invlpg fildll jl aas popl out sbb nop (bad) mov and mov push inc and rcrb (bad) xor push sub jno arpl lret dec test jnp xchg hlt sub push dec jno mov into mov mov adc mov mov movsb adc lahf sub inc adc (bad) sahf in jle icebp mov imul lcall lahf adc sbb dec (bad) pop (bad) fsts add xchg insb dec ret lret sub jp pop icebp jne adc xchg push mov xchg addr16 cmp out aam lret sbb push pop jne jmp cmpsl push jo divb insb popa sub push inc out push outsb out push stos loop scas mov inc icebp sbb pshufw mov xor lods adc xor mov and add xchg adc mov daa mov mov push xchg icebp (bad) dec jmp cmp ret mov outsb in push stc (bad) xor (bad) jge hlt imul fwait jno dec and pop (bad) (bad) test pusha adc lret jg lret cmpsl leave ret (bad) jae xchg and xchg cmp and xor scas (bad) xchg xor inc test and cmp repnz and pop scas rclb push lea push pushf repz pop or add imul into repnz xchg int out pop xchg lock push add pusha inc mov jmp out in pop xlat (bad) fcmovnb rol pop repz cli (bad) jp dec add pop cld mov pop mov (bad) scas dec sub xchg ret mov faddl dec push cli (bad) mov lock cmp jns sub stos ss mov movq sub ljmp daa outsb and addr16 jbe cmp xlat pop xlat jmp adcl adc lcall shlb (bad) int3 pop add mov out fstpl jmp (bad) (bad) mov mov sahf lods vpcmpeqw hlt adc popf ja aam (bad) jb int sar pop jl jb dec ja (bad) pushf sbb xchg lcall aas clc pushf jl jb outsl mov gs jl clc rcrl and or pop jns,pn mov (bad) jbe ss jns pop cmp test movq mov xchg jg scas xchg xchg add shld mov fsubl add mov inc inc dec shrb stos adc out mov pop loopne or cmp jno sub mov ret lret dec js insb cmp mov add cmpsl and scas dec iret stc mov aad adc mov mov mov fidiv cltd inc dec or inc imul xchg jmp push mov xor adc pop jno (bad) xchg mov adc stos jp test mov xor xchg mov lcall fidivl aad sti lret cli mov in push fcmovnu fbstp scas mov and aam jle sbb rcl sahf mov cs std loopne stc out mov mov cltd in mov sbb mov (bad) mov popf inc cmp xchg mov (bad) dec xor xchg mov sub add scas push jge add push pusha jmp (bad) lret sub or lds sub dec cmp in push scas cmpsb aad mov outsl dec lret sub hlt xchg in scas xchg sbb sti into sbb and and (bad) fisub jle lds jecxz adc hlt aad pop mov cltd cmpsl mov fdivrl fmulp pop add push cmp dec mov jmp cmp lret push lahf sub xchg mov mov stos dec or faddp inc and outsl scas inc mov pop cmpsb rcrl mov or mov mov lock ret daa inc jns add mov popa rcrl and inc jg enter dec xchg xchg and cltd sub mov popa popf test push add xchg lods std (bad) xchg cwtl mov mov jnp push inc jno ja jnp icebp lahf jmp cmp inc sahf ret sbb fist xor sbb pop adc jae pop jg enter out or jb (bad) push outsb pop test cmp or (bad) jp push sub pop mov xor jp lahf test xchg rorb adc and jne jnp in sub or lock int jmp mov sub jb inc das inc push inc out mov insb add adc mov adc lahf sbb dec iret sbb imul (bad) lret inc fcomip push (bad) xchg mov fsubrp popa push (bad) imul xlat leave dec pop bound add test cld fistl scas mov (bad) test lea and div pop mov fdivrs xchg lret cmp nop push dec dec ds jae icebp out push pop or js enter cmp imul leave (bad) jnp aaa add cmp fnclex sub movsl adc pop jecxz mov in movsb and mov pop xchg dec popf sbb test test push lret loope loop sarl pop and lods or sub subl adc movsb ficoml or rorb leave andb jp dec cmp or cs outsl mov push sub repnz adc (bad) push js jb dec mov xchg push inc and mov sub aam cmp roll sbbl inc loop inc sbb dec out push sbb jge jecxz aas ds out repz push add lods mov iret pop inc cmc add les arpl cmpsb adc (bad) clc mov mov and push daa pop sbb mov rol fildll iret mov adc shrb cs xor pop push fdivrl repnz mov cmp popf adc push (bad) in mov stc mov cmpsl popf addr16 push push int xchg jle call fs jmp cmp add adc jl pushf push mov dec in fcoms (bad) inc cmc fidivl dec mov in (bad) adc sahf outsb pop insl mov sbb xlat mov jno mov addr16 jecxz jmp daa sbb insb aad movsb popa test mov jmp insb mov loopne push data16 cmp ror cmp lcall pop pop mov xor inc push jb add mov push mov adc mov jmp sub (bad) shl or fstpt cmp test xchg mov mov das jne loop adc mov test (bad) jnp mov or adc pop popa push les cs or test outsl decl push xchg sub adc mov in icebp jnp mov push xchg jae adc les outsl and mov xor jne mov and adcl xor pop (bad) and jns push adc push ja aaa test xor loop in adc sub cs mov dec push addl push adc pop cmp sbb hlt sbb add or sar aas repnz push pop sbb mov push repnz xchg iret push push inc movsl mov into mov mov mov dec xchg jl jo and jecxz out jecxz orb jecxz inc cli (bad) ret pop sub jl mov (bad) leave mov pop pop mov stos fcmovne fstpt mov std fwait lods in mov sbb out mov jge push sbb aam loope adc mov jl push xor out jl sub xchg js mov fimull mov pop or shrl jle pop push jp stos clc (bad) ja push lret aad imul mov or add andb lret lods mov dec xchg jecxz mov test cmp and stc rolb dec lcall ljmp pushf mov jnp movsb int3 sbb arpl int3 fs mov fidivr push imul add nop popf mov clc loope imul adc (bad) pop movsb test jne xor and es aad shrl mov mov lcall pop int3 dec lods aas rcrb mov out lock mov bnd sub outsl jg dec xchg sarl rcrl ljmp xor dec test loop jb xlat scas into cmp mov mov sahf daa rcrl sbb and (bad) mov in mov cmpsl fs mov cs subb out imul loopne push lcall repnz ljmp xlat adc mov or add mov outsl std and popa syscall mov divl clc lods sub mov ret in (bad) ljmp sub xchg push jmp sahf cld sbb fisubrl add xchg aas jae pop scas jo lods sbb pusha addr16 inc icebp lcall pop push xor mov jp (bad) cli (bad) pop rcrb mov int xchg imul xchg push xchg out mov mov mov gs push imul xor xor dec popa cmpl (bad) and stos data16 mov xchg test lcall je pop das lret add dec movsb and pop pop cmp pop mov imul add sbb movsb xor jmp lret push sub inc fwait and pop jno lock and fisubl add out idivl sbb pop stos rcr insb push jne push loop cmp pop dec enter movsl out pop xor push pop jmp imul adc mov xchg rorb movb orb inc ss imul addr16 inc and mov sub push loop dec mov adc inc data16 and rcl mov inc shll pop gs iret pusha inc fwait sbb push cmpsl leave fcmovb call fidivrl sub xchg sahf cmc push std and std lds arpl jbe push lods iret and xor and out mov call xchg inc xchg js or cmp loopne aad loopne adc outsl (bad) (bad) xchg fstpt xchg into mov mov sarb scas clc xchg push inc or insb jp jp fisttp nop (bad) popf lahf mov stos sbb cmpsl out out enter ds aas repz (bad) bound daa adc pop imulb mov push fucomp (bad) daa jl mov mov jns in cmp clc (bad) cmp add push push test jge in or or jl std mov cmp mov into scas adc pop int3 fnsave cmp pop push rclb cld push pop movsl lds stos bound sbb repz (bad) lea dec mov xchg pop push andb lods and jecxz inc mov and bound add mov loop push cld jp inc and push faddp arpl or inc movsb out adc mov add mov dec test mov imul jno scas cmpsl test outsl inc loope cmc scas jb orl gs sub xchg fwait mov mov sahf nop sub push pop insl xchg sub jp (bad) lahf cmpsl xchg jo clc lret jno xor (bad) dec xchg js (bad) repz ret adc adc aaa add xor sub in mov sub js hlt xchg xchg and mov popa imul popf rcrb push fsubp pushf cld nop sbb cwtl jle sbb jl adc push mov cmp mov dec xor mov push popa push jge std fistl iret mov pop cmp push fdivs push rclb xorb xchg setg fistpl sbb (bad) rcl xor sub jne jnp repnz xchg cmpsb cmp add jmp outsl inc test fisubl sbb mov dec aam lds out (bad) pop mov lahf mov sub jmp xor incl lds ret gs inc add push stos leave outsl ja pusha jbe xchg cmp fiaddl xchg adc jns inc push fbstp push and out sbbl pop imulb and adc inc xor pop daa aas std xchg push in icebp pushf das push jecxz movsb sub inc call mov adc stc sbb fnsave pop repnz jbe jmp inc int cwtl push ja or push jae cltd lock dec cld add jl fwait int mov adc dec testb sbb test stos xor leave cmp dec jnp mov mov popa pop rorb xchg cmp test movsb cmp arpl dec in mov popf mov js xchg test push sub mov inc aad jg inc jno push inc dec in cmp pop lds xchg fstpt jle repnz into int3 (bad) imul mov lds xor or (bad) dec or mov mov insb jo dec test xchg adc in mov cmpsl scas daa inc test cwtl push dec inc lds icebp cmp iret xor or jae bnd pop jnp dec lret inc mov (bad) lock lret call xchg ljmp dec pop or mul in lahf test fwait movsl sub pop pop aas mov in jl inc push testl mov or mov cmp cmpsl ficomp repz loopne pushl mov dec xchg mov scas mov jp loop dec stc sbbl mov mov (bad) push add mov (bad) roll mov dec push xor movsb add and pop outsl test inc jns jl jnp cmp out testb stos mov (bad) inc add hlt mov pop cmp mov out mov out cmp imul bnd pop cmpb (bad) mov inc adc dec mov cmp fbstp out and mov jmp mov test sub xor add mov test rclb nop xchg repz mov outsb xchg or pop sub adc not sub xchg mov jg enter inc enter and or push into pop add into adc cmc dec inc gs sbb adc std push and imul jge dec jne mov roll xchg pop out (bad) xor xchg stos push cmpsl adcb adc mov leave add and cwtl or lock xor push loopne pushf jb mov cltd and cmp mov daa push ljmp enter jle jmp icebp xchg loop mov mov es int mov inc pop lret inc hlt int addl ds fisttp dec sbb xchg jl iret pop pop push dec or mov jl out idivl imul scas imul jnp push jo addr16 rorb das or test decl xchg lds xor mov lods les aaa jmp lahf fwait mov xchg and jns xchg cmpb pop js add mov rorb pop dec fs (bad) or ss push cmpsl pop lods jmp dec sub lahf jg call inc inc out lea ja xchg in mov mov cmpsl adc loope push mov mov shr pop into add cmp jl xor cwtl arpl lock clc jne push cmp jb loope mov fwait mov sub xchg std push std add scas addr16 sbb dec out hlt movsl stos mov push sub and pop (bad) int3 mov fldenv xor aas shl mov mov sarb add fwait (bad) mov repz and push cmp lcall dec (bad) dec lahf test jae push lret sbb popa jl adc loop inc lods bsr pushf inc out cmp cld xchg and jmp xor push push mov lret mov fnsave and jecxz inc sar push pop (bad) xchg ss dec scas es mov jg cmp cmp adc and mov ret repnz adc (bad) xchg sbb inc popf xor repz fstpl je fstpt sub cmp inc mov adc or jl cmp fisttpll adc dec pop mov idivb mov dec mov push testl pop aam sbb xchg or loopne mov cld sub mov xor xchg mov les sbb push scas test (bad) lods adc cltd call insl lret ror cmp clc inc sbbl pop adc jns arpl mov and or (bad) jle cs mov int push push out dec fmuls xchg pop repnz xchg mov mov push push imul cld dec jmp sbb stc push cmpsl daa lock and fs adc mov pop (bad) aaa popf out inc lods popa jmp or jl cmp rolb sbb pop js and pop mov pop fwait stos fisubr push mov mov cmp jo fs or lods adc or pusha loope mov hlt mov repz popf cmp cli adc dec mov jecxz mov call in das pop cmp in rclb mov roll cld hlt in addr16 push outsl outsl leave pop pop mov jb inc sbbb dec je sti aas data16 ret jne cmp mov sbb mov mov nop xchg sbb hlt inc jnp sbbl (bad) mov fidivr jne hlt pop mov test lret pushf pop icebp scas mov xchg sahf and inc rcrb mov push fisttpl inc xchg xorb mov dec dec movsl popa cmp je add push mov cld jne push sub imul std arpl incl roll lret aam popa sub or jmp add repz ror and pop mov addr16 adc xlat es xor push mov xchg sti fwait dec sbb js sti rol imul loope js loop mov shlb adc je inc shl adc outsl push dec js cmpl insl ds insl mov ja cmp icebp jno int3 ret std jp cmp cmpsl mov clc in out out adc add xchg adc jnp into scas mov mov ret inc mov fisubr xor rcrl fistp or sbb lret jg inc mov outsl xorl dec cmp out leave aad clc inc lahf mov cwtl jbe mov pop jge mov xor shl outsb pop add dec imul aas sub and cmp gs pop add inc sub push adc in push imul shlb cltd clc mov cli fcmove push mov out adc push sbb dec mov adc into cmc movsb int dec aas es jmp mov push xchg cld xchg and fcompl or lcall mov jl insb nop call lods sub dec cmp adc adc jbe popa mov pop xchg stos stc fisubr and sub adcl xor stc int3 xor mov in sbb ljmp mov popa mov jns in push or inc stos fwait test or xor jl test mov ret adc cmp pop adc cmp adc in dec idivb pop xor lock inc adc mov xor notb fldt dec mov ds jecxz mov (bad) ja add xor scas pop sar cmp es xchg jno,pn mov pop popa cmc ficom mov jno decb inc jecxz mov cmp push fimull inc popf jge subb ret jmp cs dec cs sti loopne sbb or and mov mov adc ret mov pop sub push std pusha mov leave sub lds jecxz or dec pop inc sbb bound xor add pop cmp sub popf xlat repnz and and ljmp in mov fsubl add mov mov mov andl inc arpl jl mov pushf sub leave sbb movsl out into pminub in inc out fs dec mov les cmp ljmp into jbe iret cmp pop popl xor and and fs addr16 mov stos jbe pop sahf add in scas lret inc mov in xchg mov mov scas fsubr xor push movsb fcmove dec ljmp jb nop add cmp popa sbb cmp mov pop insb rorb fist or lods cmpsl dec mov pusha sub sarl lock mov pop xchg icebp rcrl in pop xchg adc call dec inc add pop gs jl or (bad) sahf inc mov clc cs insb sub jb pop jmp bound jmp jl add mov and adc xor inc rcll cwtl mov insb out stos insb out dec decb xchg push sbb dec sbb push push push mov jg dec fisubl lret push pop push clc dec dec stos cli nop sub mov outsb nop mov jo jne push enter cmp adc fcompl call sbb decl sub icebp ljmp ret insl in aas jb scas mov incl sbb insb test mov or stc decl xchg sbb stc (bad) scas sub xor insl push lds ds cmc je fwait ja inc hlt fadds or sbb sub test and int rclb nop add mov inc pcmpeqd data16 fdivrs cmp and cli inc adc mov xchg lret hlt pop pop jecxz imul mov fsubl insl xchg lret push in mull (bad) push and dec data16 insl cmp mov out xor push aas lret hlt jecxz fildl inc icebp popa add lcall mov das jecxz xchg lock xchg and lods xchg xchg cmp xchg adc pop inc sbb xor ja sbb or out mov inc out add rcr xchg xchg mov movhps mov or stos adc (bad) jecxz popa andl or jbe inc dec int inc mov popa mov push sbb cmpsb inc out mov jl mov arpl jg mov dec xor lock mov push jmp ds call lret pop mov insb aam pop mov adc shrb xor add jle push push pop jno iret cmp xchg add lahf push or ret xlat mov hlt xor and mov imul daa es out xchg pop ljmp mov (bad) add adc insb mov sbb sbbl inc sub sub repz sbb sarl jl pushf xlat xchg add ss pop aad or mov mov pop jecxz into xchg mov pop loope (bad) mov lret popa mov clc jb push push es int roll (bad) inc scas bound popa xchg fadds xchg popf (bad) into mov push cli jno adcl dec adc mov scas test jmp mov push and nop cs lahf mov sbb enterw setge sbb pop sub test push mov aad dec xor cmc into sub test in mov scas sub mov dec jge (bad) ds fcomp jns push mov sub divps and aaa mov mov in inc jmp jns or jns xchg fdivl and xchg cmp and push adc ds popa cs je mov xchg insb stos inc jecxz fidivl jnp jl add shrl xor out push pusha jb aam stos out gs mov sti add or adc jae,pn cmp mull rcll ss rorb cmc push sbb sbb leave hlt mov xchg rcrb adc xchg (bad) cmp outsl mov inc mov adc outsb pop jmp (bad) jge or fimul mov cmc mov add mov das insl add movsl faddl jp maskmovq divl lods lods nop fldenv insl mov shll inc mov pop stos cmp lcall pushf andl lcall ds adc and repnz aam int3 or push mov cmp push ds mov (bad) les xchg sub push ret ja or (bad) inc push inc lcall pusha enter adc add shlb adc jbe add push cltd test cmp (bad) out mov xchg sti adc mov add js mov paddsw popa pop mov xor scas cs adc mov add in stc xchg loopne ret data16 cwtl insb dec shrl shll mov xchg ss sbb orl add outsb dec mov fiaddl (bad) sbb outsb lock mov in push sub ret pushf adc stos (bad) rol (bad) rolb mov (bad) (bad) incb mov (bad) aad into loop (bad) xchg nop jnp jnp cmp xchg fisub ret (bad) scas mov mov (bad) (bad) stos cmp aam movsl or pop test sub lret push pop ror and shrd int push (bad) xor xor mov mov mov mov add push jle or cmp jo xor xchg es mov bound push in test in add pop mov mov mov aad popf pop fwait cmp in jmp push jl sbb xor hlt sbb inc mov pop (bad) xor bound push (bad) aas test mov jecxz popa or cmpsb test jo pop push lcall outsl int3 stos sti das incl or mov lcall push fisubl xchg xchg push jne imul fdivl adcl in movsb fs ss lcall clc cmp pop repnz xchg mov xlat rcll leave push test push cmpsb lods outsb jg adc lea dec jno jnp fistpll fnsave xchg sub lds mov lock jb inc insl sub adc pop dec sbb jl push fbld jns ja xchg dec sbbl pop add lcall sub leave mov rcrl mov popa pop pusha bnd icebp popa shrl ss cmp mov (bad) fcomp lods jnp push leave (bad) (bad) fstl add jnp aad dec adc aam hlt cmp fbstp das fwait les adc mov sbb cmp pop sti mov xor jo cmp cs cmp or ret shr dec mov pop mov (bad) cmc add xor jns icebp (bad) nop imul add xor int das or and xor sbb stc dec dec and (bad) jb dec (bad) cltd ret cmovbe or stos cltd adc or jns div cmpsb jmpw jmp test fwait mov or (bad) push inc sbb xor mov adc push xor mov mov adc xchg pop addr16 xor das popa outsl mov daa ret lcall xor dec mov xchg push mov pop ljmp mov add dec add push sub push icebp sbbb movsl xor pop (bad) cmc movsb inc dec xchg xor (bad) lock jne ja mov (bad) rolb fisubr xchg dec lods mov sub lcall and mov ja mov dec in pop (bad) pop les mov jbe cmp ret push mov add leave daa cs idiv mov xchg adc and int3 sub cmpsb add cmc subb test rcr dec adc cmp pop mov push imulb test or and pop sbb push test ds imul xchg cmpsl pop mov adc loope bound and not test jae repnz push sbb pop js mov dec dec add add popa test mov sub jecxz xchg outsb mov lods push subl fimul loopne mov jmp loopne and cmc lret jbe mov mov lcall xchg inc ss scas or cmpsl pop popf test add fstpt xchg dec sbbl push in pop fcompl mov add bound xor paddq dec inc testl inc mov lret or mov inc (bad) sub enter ret xchg insl inc cmc adc (bad) cmp lods fimull xchg mov repz or xor iret pop loopne inc sub adc fisttpll mov jmp mov sub cwtl jmp sbb push pop aaa int3 movsb fistpl jp aad dec enter sbb sub fisubr pop je aad xor jl std sahf xchg pop jns push xchg pusha outsl xor mov xor mov fmull sub rolb add jg push mov sbb adc jmp push lahf fistpll cli into mov jmp and jmp cmc mov ss aad (bad) ror pop push mov int popf xlat inc mov push (bad) test ficomp inc out loope ja mov jo inc test rcll repnz in sbb mov cs dec jb lea lock inc bound pop adc mov ret xchg mov lahf call jo lods inc das aaa cmp out into push out cmp push movb push fucomi inc pop mov jg mov inc cmp mov mov ret fwait clc sti pop mov push bound and jns (bad) pop jp cmpsb test xchg inc into stos mov rcl push cmpl push ret jle sub addr16 add (bad) pop xor mov shrl mov (bad) scas mov adc mov sub push sbb push aam loopne loopne faddl (bad) ja mov or fwait roll fisttpll lds pop test sbb pop daa int3 leave jae sub in sub jne and cmp (bad) cmc fmul inc mov sub inc push xor pop or rorb jmp lahf test cli inc mov dec cwtl (bad) sbb push (bad) and popf mov pop fsub mov mov pop or aas xor jo jmp add (bad) lods gs sbb mov pop cmp mov mov mov jecxz loop dec jnp xchg push adc cli cmp add or ss xchg fistpl mov cmpsl lret es or (bad) cmp push xor mov mov imul jl lahf adc mov test (bad) ds stos pop hlt ficoml sarb push ljmp nop push push cltd loope jmp pop and cwtl into shr xor ss cmp inc (bad) mov or stos clc roll add fs into fs loope and sub mov adc int sti jns pop jno sub and adc cmp arpl mov pop das adc mov adc adc rcl mov sub test fistpll push add cld ds pop outsb icebp pushf fnsave out pop add pop lea adc cld mov repz mov rclb add aas fwait sti fsts out sub push fcmovnbe insl xor xchg pop hlt je sarl (bad) (bad) pop xor inc and inc pushf or mov mov sub gs ret add stos jg mov dec scas out and cmpsb inc cli mov icebp jmp sub cmp aas incb sbb cltd or js in add rcll mov cmpb sbb ja pop jmp test addb ret pop fdivp inc in sub test lds movsl stos lret mov fwait mov movsl stos popa pushl repz xchg jp mov cwtl mov loope mov mov dec mov (bad) icebp lods es jne cmc xlat rolb icebp fildll adc pop sub call (bad) adc loope test cmp shll xchg cmc push xlat adc xchg pop imul loopne push xor pushf pop or push sub xchg in sub out dec inc fsts mov dec insl dec in std sub fidiv or movsb add xchg mov arpl insl hlt (bad) stc nop mov sub lret icebp ficompl mov jecxz mov adc imul stc cmp andl ret adcl ja negl cs sub sub arpl out dec (bad) or pop mov mov ja add xchg fisttpll or add fildll cs mov fcoml mov xchg outsb in dec inc jge dec push xor (bad) mov repnz xchg mov mov iretw ss inc int3 xchg outsb (bad) insb jl out int imul insb pop cmp inc (bad) sbb leave or call (bad) xchg push fs imul out (bad) adc in sbb jmp cwtl sbb sbb sub jnp xorb mov pop inc push daa packssdw cltd pop pusha nop pop aaa sub pusha bound pop adc inc jb mov int mov push daa rorl mov fidiv adc jne sbb adc mov mov (bad) daa dec lods out jmp dec add fidivr scas adc (bad) cwtl (bad) jae mov shrl (bad) icebp xchg aad repnz inc mov outsb sub push cmc mov mov cld mov mov stc (bad) (bad) cmp hlt and xor xlat (bad) (bad) (bad) xchg hlt pop mov sti loopne sbb icebp pop push inc (bad) repz and dec or fs es cmp mov jp inc pop push xor mov xchg dec orl ja and mov lret pop insl pop cmc imul adc es sub insb and cmp push das rcll xlat in stos stos or arpl addl lret mov jne int3 ja sbb or sbb insb cmp mov mov js sub (bad) cld loop je jmp mov lock pusha shl addr16 pusha inc inc (bad) (bad) leave addr16 idivl mov ja int3 loopne pop dec dec jmp (bad) adc adc and mov out test incl dec cmp sti (bad) jl push lea add les sbb ret jecxz (bad) pushf xchg pushf fwait add jne test (bad) mov rol test lods jnp jb outsb insb and popa dec inc (bad) push test (bad) aas adc mov imul mov push pushf jmp aad pop (bad) loope cmp xchg sbb push pop jl mov cmp mov jns xlat cmp ds mov fst out les add xchg jg and push scas fcmovu dec sub cwtl cmpsb aaa ss mov shl ret arpl test fnstsw ret loop xchg dec pop orl mov xor rcrl sbb dec sahf cmpsl mov (bad) cmc dec call dec sub mov or pop leave add (bad) (bad) inc ljmp cld gs sub testl dec cmp (bad) sti cmp xor (bad) loop mov or or sahf stos xor jno arpl xor icebp xor jnp pmaddwd mov xchg out push out daa pop push pop leave xchg insl rcr push add pop jno fbstp sbb or push aad in fadds xor nop leave mov xchg jl push sbb xor imul js rcll xchg in pop loopne dec cld scas jle xchg mov imul mov icebp (bad) mov shlb dec push lock orl xchg mov movsl adc test es int push sub jmp jns dec (bad) sbb mov (bad) mov push daa mov mov insb cli mov jne cmp pushf sbb push mov scas clc insl push xchg xchg dec fstpt xor lcall call and cmp inc lret or mov rcll int jo pop mov jmp test je sbb fiaddl daa clc mov xchg and out mov stos (bad) pushf cwtl and dec call cwtl pop sub stos aad add inc mov mov ds mov and fistp sub movsl add pop mov mov (bad) call jnp gs cmpsl adc sub ss xchg jns,pn in push in js repz xchg adc pop fwait int orb leave dec dec cmpsl pop aad sub out adc xlat cmp push and inc cmp jne pop cmp cmpsl loopne add sbb mov arpl les stos repz pop (bad) push fwait cmp rorb sbb dec pop (bad) push stos sahf out xchg int3 inc out clc adc lds loopne and lret in jnp cmp test cltd stos stos addr16 nop mov es mov dec sub xlat add mov icebp add test insl fdivrl pop iret rol jl dec outsb hlt addr16 out add add xchg orl aad ja cltd inc pop inc add (bad) imulb xchg sub das cmc cmpsl std xchg xchg jle pop leave mov into leave sub in xchg dec sbb add mov sbb push mov xor (bad) ja add jo pop ror jo cs lea pop mov xlat pop and push stc mov (bad) popa popa out arpl and (bad) outsl mov jnp je xchg push fsts aaa push mov or lods ud2 notl cmp lds xor or sbb jns sbb cmpsl cmp and (bad) lock aas insb mov into sub mov icebp push jae mov xor adc aam add aaa int jno mov mov cmc imul pop test xchg xchg push pop test or fistpl roll adc stos add fwait adc test dec sti lahf mov rcrl xlat jnp jg mov or andl cmp mov xor mov add mov mov jnp cmp mov xor loopne inc cmc add popf dec mov ror (bad) divb lcall mov push sarb fs sahf adc mov xchg fwait jne push test fistpll cmp insb imulb mov aad sub mov sahf cmp mull push sbb cmp mov or pop mov int3 jg in cmpsb mov int cmp clc cmp hlt xchg fsubl mov xchg lods bound push and dec icebp push arpl xlat inc xor (bad) dec jno sarl or inc mov jmp rclb repz mov cwtl mov fldl fwait push cmp loope dec in xor mov or test outsb cmpsl mov imull mov aaa jecxz pop mov xor sbb mov sahf xchg and jecxz movsl repz lods addl orps in pop popa push ja es aam inc fs xchg aad mov jmp cmpsb adc mov jg ss rorb outsl scas jge enter or mov xchg outsl push and sahf xlat push pop or push sti cli js,pt jnp or fwait (bad) xchg xchg and dec call mov xchg pop enter mov mov or cltd (bad) sbb jns aam sbb jle faddp cmp es cs add push pop aas xor add in adcl sti outsl dec lahf lds js xchg mov mov mov push jp fwait (bad) jnp pop jp add mov mov test or cmpsl icebp popa push mov jmp dec jecxz lods pusha mov sbb insb ss or jecxz nop lods push mov cld dec cmp jle shll cmpb fildl (bad) movsl mov push push adcb and icebp adc (bad) cmp repnz cmp add mov mov repz jne mov aad int3 out adc lock jo dec add subl repz insb aad cmpsb xor cmp cmp mov adc ffreep lcall test gs std or jo lcall jg mov (bad) add shrb adc aaa mov cli or inc cmp test out push push push in mov lods sub loopne jge (bad) repz jo pop test dec jne cmp test int mov lea jo mov pop cmp mov and pop sarb pop mov xchg rcll loopne frstor jmp mov and and outsl jp mov inc xorl and sbbl (bad) in inc push push fs push or cmp jp push mov mov cltd test and sub push pop sbb jp cmp push jo push cld jae pop mov adc test stos sbb add popf out rcll fimul les popf lods movsb push mov shlb sbb mov jbe call int rcll (bad) icebp and mov push pop jle fnstsw loope pop ret sete push pop insb or dec cmovle jge pusha scas repz jno in ss enter lods ja jge xchg pop pop dec push addr16 cmpsl addr16 xchg xlat lret cli ds jp sub sub xchg adcb mov daa shlb adc sub xorl dec int3 pop cltd int or push fs rcrl jle adc mov popa pusha push test pop push out mov xchg sahf mov xor les pop pop fnstcw rcrl std test aam pop mov xchg movsl inc bnd imul iret into dec or mov inc fstpt loopne loop push pop jl sbb add mov and aad notb pusha fnstsw int3 mov std cmp mov imul pop inc jns cmp rolb cvttps2pi je mov rclb (bad) insb mov mov and mov lods adc mov cmp and inc sbb push stos mov mov or mov (bad) cmp add loopne jmp dec outsl addr16 mov xor icebp hlt imul cli arpl enter in (bad) call xor fisubr xor adc test sahf into push fiadd cmp mov jb clc adc loope sbb out cwtl mov mov and mov and push mov call negb insb sbb mov (bad) icebp mov sub outsl ret leave (bad) insb and mov inc xor cs cmpsb inc mov enter (bad) out out aad or ss mov xlat lcall rcrb (bad) dec pop xlat (bad) gs (bad) mov (bad) fdivr jb (bad) push stos lret cmp jno cltd jnp mov push add add mov cmp dec pushf pop xor jne or bound into adc in inc pop jmp xchg mov ja test mov int jno mov inc or push mov pop in jp add jbe jns aam jecxz popf rcr sub clc mov pop pop cmp mov inc push (bad) jns aam adc decb fbld jmp nop pushf or add notb cltd and ja push insb (bad) dec mulb xor out mov scas lds jge loop pop adc shlb std lds push xchg mov pop mov mov and jg xchg outsl fucom cmc jb (bad) dec into mov fwait ror or xor andl into movsl int xchg pop repz bound rorb cmpsl rolb fstl mov loope mov mov je dec adc es test stos sti or cs sub mov sbb (bad) mov xchg fildl adc sub arpl loopne mov xchg loopne push push loopne and dec (bad) jg push mov jmp mov adc aas subb mov test std sahf inc dec enter aam sub daa mov xchg stos mov clc ret cmp pop or pop or push movsl arpl shrl xchg lods pop pause and mov inc push jo ss dec jne aas pop dec push xchg pushf outsb fisubl pop ja out (bad) mov and out push inc add xchg stos sub movsb xor leave add mov pop mov shrl jbe aam mov test and jae cmp jecxz flds or outsl leave add imul adc xor pop adc (bad) xchg xor insl sub into (bad) out popf or pop add add ja lds fildll test cmpsl fucomip lods xchg mov (bad) cmp mov mov lret mov push (bad) xor out lcall pushf jo add loopne lret (bad) jb dec xor cld mov in imull sarb cmpsl popa int3 stos sti orl imul dec insb and cmc in fdivrs rcr cld push cmp xchg ljmp jmp mov inc or subl leave mov add js pushf cmp sti lret out jnp cli xchg pushf sarb fs or or out push add jmp pop shrl pop flds (bad) imulb xor sbb pop ljmp or jmp fsubs sbb mov mov sub mov js push cs xor sbb jno stos mov std add and pop pop popf cmp pop mov xchg xchg jbe or and and sbb add mov scas cmp push mov in outsb aaa ret xlat jne sbb call fnstsw jns push test pop add pusha dec ret and inc ja jae adc dec aad fidivrl sbb cmc inc mov inc int3 jno push shrl sbb inc dec fldt rcrl popa ds arpl pop inc jno out scas dec dec repnz out mov xchg movsb nop jle loop pop movl incl push inc sub xor das mov (bad) cmc mov mov pusha lahf ss outsl xor (bad) iret xchg or cmp inc arpl (bad) mov cli ja out inc inc scas icebp jp inc addr16 mov pop cmp fstpl out es into aas sbb push xor dec shlb cmp push push add iret mov in aaa push sub add out int cmpsl mov push call mov mov test (bad) and mov and mov test or pop mov fchs lds imul mov mov xchg mov sarb xor stos dec jno push add mov adc fmull subl addl push jbe rol movsl inc adc mov in pop jl gs adc inc pushf data16 xchg out ljmp popf mov stc (bad) addr16 or lcall xchg mov add sub (bad) inc pushf xchg rcll movsb or sub dec rcll push inc mov push test stc sub mov and jmp hlt mov cmp and or jl lods es xchg mov cmp ficomp fcomps pop push mov das add das jg and mov cmpsb or ffree inc sahf pop int3 lea mov sub jge pushf in inc je sti out (bad) mov fild jge push mov xchg popl jo ds adc ljmp mov fidivl psubusw push leave mov loop sbb cmp adc mov pop push popa mov lods or push (bad) dec mov inc adc aaa lret ljmp jnp lods sbb jl or xchg aam aad scas (bad) adc dec mov mov mov (bad) xor dec xchg bound dec lea test fistl into mov js in mov mov rcll lret add cmp mov jo push and mov fsubrs sbb clc jecxz jge xor gs movb adc fbld jg test hlt (bad) stos cmp pop cmc push test insl push sbb cmp sub packssdw inc mov out dec mov jmp push mov repz mov stos mov notb lcall xor jecxz fisttpll test adc (bad) fsts fcomps and inc pop cmp mov insl xor cld mov jmp or ret push outsl sub adc fisubr push dec fist stos pop inc mov xchg (bad) cmc outsb sub xchg mov mov ss out mov lahf jo outsb push jo adc int3 call fdivrp lret inc xchg pop adcl push add test or or ljmp les add pop (bad) jle adc int loope scas cmc push lahf jp rep icebp mov cltd (bad) lret loope inc dec fcompl cwtl stos or negb xchg mov imul imul jg std icebp clc xchg mov loop lahf out (bad) out sarl push dec aaa jge mov push prefetchnta adc icebp mov or mov inc or and sbb add dec xchg pop xchg addl movsb inc add fisttpl stos cmc cld paddq or dec int3 jle enter dec sarb mov (bad) fdivrs leave dec fisttp mov sbb aam mov je pop sub push push xchg pop push or movb xor inc cli cmp js pop pop jnp (bad) xchg outsb add movsl lods ds (bad) testl adc dec std int mov jmp jbe (bad) nop adc repz adc mov push inc xchg cmp (bad) movb xchg shll mov pusha push sub mov xchg mov lea inc mov ds out jns std dec sbb cmpsb lods stos jo xchg fstp xchg dec ficompl das shlb sbb lret mov jne xchg push fisubl push sub jmp add mov pop xor imul mov push xor test movsl into out push mov js cld cmp xchg (bad) sub into mov std push mov cmpsl dec jle cmpb add push (bad) adc movsl and dec aas and fcoms mov xlat js dec in adc lret pop iret out aas add adc adc mov pusha sti rcrb jecxz insl bound sub les inc jl cli stos and aam mov mov xor xchg in test mov mov out sub xor and mov adc call jmp addr16 cli xor xor mov inc mov inc jb or int add jb inc pop ljmp mov int3 push (bad) mov ss or sti clc insb les cmpsb ror mov rolb dec pop fimul or enter xchg nop and adc movsb out nop outsb xchg daa push adc test ficompl dec xlat test dec insb xor int3 fmul cmp movsb ret imulb push cmp and sarl ret cmc mov in pop pop std in mov or pop jp sub or xlat adc push and dec push dec lea mov sub fs jge fwait mov xchg mov xlat mov mov dec cmp and xor and (bad) xor sub in xchg cmpb insl mov aas dec lods ret outsl cli dec add cs dec clc test mov rorb sahf scas xor fs fcomip scas aam xlat jecxz gs pushl fs inc xchg adc xor shl pop jne repz (bad) mov adc push fsubrs sub jo out xorl mov or jae ret jne and ljmp cld push xchg (bad) xor sbb lea mov pop aas nop je popf or shl fiadd imul sbb xor xor shlb xchg repnz gs dec xchg repz xchg popf aaa es sahf sbb inc shrl add mov dec xlat sub xchg push jb push mov push jns (bad) jb jl ret dec sti mov ss (bad) mov shlb inc popf bound pop addr16 or push call xchg cmp push adc and jmp push inc dec mov fnstenv mov pop imull push imul stos add bound test test movsb icebp pop pop out int pop sbb in outsb inc cmp xor sbb shrb dec inc into das stos repz verr jle std mov xchg jge jmp push sub (bad) mov sbb adc (bad) fcmovu mov xlat jecxz mov push ror push sbb cmp repnz dec scas cld out xchg mov shr fidivrl lock xor xor fbld sti cmp mov lock xchg jle stos dec (bad) adc cwtl andb fstpl jns lea mov scas fsubs jno push sub xor xchg cltd into jp sahf add lea mov loopne dec dec mov adc fsubl int sbb loope mov outsl dec xchg mov stos fsubrl arpl (bad) fistp push pop movsb jge stc ret stos sub or repnz fs sbb call and dec imul mov pop je ds seto mov xor xchg and jge add and mov out push mov push cwtl pop or jbe push cmp mul inc enter inc popf mov mov jg lret push bound mov setae in push jne inc int3 jo xorl cmpsb mov push (bad) loop jmp lret xlat pop push xor sbb mov xchg fbstp dec imul sbb xchg int lret out ja ja mov outsl mov add xchg inc in movsb leave add mov add mov push scas cmpsl sub cli add rcrl arpl (bad) mov adc push mov int iret and xchg mov sbb mov jl out xchg movsl mov jmp pop cltd pop addr16 out ret pop repnz outsl or or mov int3 adc cli cwtl push sub adc lret sbb push xchg jb clc sub xor imul test xchg fs fucom (bad) js imul mov mov out mov push push xor add jg shl cmp cmp ja inc adc orl aas stos or xchg xor lds pop jae sub sub or fcomp dec inc mov mov or mov sub popa out std flds xor push inc sbb sub aaa xlat lret test jge xchg push add roll adc inc push jl pop jl push pop movsb xchg jnp push jae out jns rorb jg add xchg pop mov sar pop xchg jne test insl mov and mov mov mov outsl addr16 test mov add lret sub xorps outsl cmpsl mov mov add lea rclb mov stos ror cmp or fwait cmp int3 mov andb dec adc mov and pop add inc imul jns jmp xor int3 mov mov outsl sti dec xchg sbb daa in add push fstpl cmc adc jb repz stos push (bad) cmp or sbb push push cmpsl stc aas (bad) in xchg or cld fldcw sub xor adc pop dec and pop sbb aad pop call xor pop push adc jge sbb dec add aad movsb xor add jg and shl xchg dec jne insb into nopl stos cmc lret dec inc data16 push rcrb cmc scas imul aaa or xlat das dec lds and cld out mov adc fucomi rcrb add add aaa sahf sbb lcall aas mov aam pop (bad) aam call jecxz into addl sub inc sahf repz cltd decl ja push shlb dec push sbb mov xchg in xchg dec mov jno pushf xchg addr16 sub call test jne fwait gs xchg cld addr16 icebp cmc mov mov rorb dec cli popf loopne nop adc inc add loope in mov cmpsl icebp inc cmpsb xchg sub pmaddwd xchg adc xchg sbb sbbb xor clc (bad) (bad) add arpl clc xchg pushf (bad) (bad) cld xor xchg push inc mov mov and adc cmc lcall mov cmp mov add dec repnz cld xchg mov fidivrl dec and les mov push xchg dec clc mov fucomi rcl adc push pop and cwtl adc mov xor cwtl fdivrl nop mov faddl cmp out addl xchg stos jmp mov mov (bad) icebp mov mov aas in push and movsl lods xor fs addr16 mov pop mov adc in push xor xor sub jmp or jne or adc into mov pop push ja mov jbe inc cltd cmpsl dec mov xor push push roll sbb in scas movsb lock adc mov mov pushf mov mov add clc cltd dec subl mov fwait adc loopne gs mov and mov jge outsb out push aad mov icebp pop xchg rcl jnp and aam leave daa test add imulb sar dec je push (bad) es push jnp fincstp sbb or adc lret call dec jno es inc ffree mov cld (bad) and and (bad) mov push xchg lret lds int3 lods stos std mov stc das xor je call pop inc std lea sub (bad) rorl add (bad) mov sub in mov adc aam addr16 (bad) xor in out (bad) add out fisub lahf mov mov pop aas std push jg mov mov and and (bad) icebp add push pop cmp and pop aam mov insb loopne aaa ss or (bad) out or mov pop xor sbb mov xor mov or (bad) repz mov lahf push xchg pop sub movsb movb insl rorl mov inc dec xchg cwtl fs cmc lock addr16 jg sbb out pusha out push add (bad) enter dec push xor mov xor cmp xchg (bad) out out cli sub jb and rol mov test fnop jl and nop std aaa pop cmp mov jg push adc cmp arpl xchg adc sbb sbb je mov add mov sbbl jp inc (bad) jo jle orl jecxz aad cs jle enter xor cmpsl jp in jbe jge ret dec sub dec cmp add xchg mov call arpl and pushf pop sahf ficompl out ficom cmp jae pop andl loopne test fimul add scas xchg mov xchg nop lock lcall aaa loop adcl push pop xchg pop repz sbb clc or iret inc sbb inc and and gs fimull inc push jle data16 loop iret mov mov mov (bad) sbb cmp mov mov gs je in out lcall popf and sahf rol fmuls lods push or lret mov in or or int3 push add jmp (bad) imul mov leave jmp repz pop in outsb push xchg aas push inc aam add test mov cmp roll stc in shrl or lahf dec sbb sbb movsb imul pop movsl mov lret pop pop jns mov jb and int iret sbb adc cmpsl (bad) rorl lret enter sbb and repz pop inc movsb ss push insl dec jge arpl (bad) mov mov mov stc insl jg loop std std add mov test arpl xchg test popf jb and xchg add into xchg xchg (bad) (bad) nop jmp pushf std or add inc (bad) push push push (bad) jne xchg shlb inc sbb fiaddl stos push jge aad adc mov nop pop (bad) jno out ret pop in jmp insl les push sbb xchg cmp pop and mov pop adc push test ss mov clc inc sarl imul movsb pop int mov push pop pop mov xchg sub sti (bad) cmp clc out jge mov clc lods test imul js push ret out (bad) pushf popf cmp mov cmp stos mov rcll scas sbb xor aaa out xchg lret shrl (bad) scas inc insb fisubr adcl loopne out mov js or push fisttpl je xlat sbb xor adc arpl sbb xchg daa js jmp andl cmp ja and cmp sbb movb and popa and add fs lea xor sahf push ds inc out and add mov ss push lods jl xchg pop xorb movsb sub dec aas or mov pop movl cmpsb int3 out pop and fistpl cli call inc cmp ja sub sbb cwtl insb and jmp test arpl adc hlt or daa cmp (bad) adc mov xor lret mov sub (bad) test mov add scas and sbb push push mov jbe out shlb mov add mov mov cltd rclb xchg jns dec fs fnstenv xchg lret add in or aad fwait mov loopne movsb mov jge test aas fstpl popf aam push popf jns mov loope sti iret es (bad) icebp jns cmc out ja add mov cmp or xchg xchg (bad) lret push xor mov lods jmp adcl aam and fldl lea jbe arpl ret (bad) rorl xor dec push cmp adc sbb test sbb and inc xchg bound mov into test (bad) roll mov in or push (bad) cmp movsl sbb scas insl (bad) and xor bound fs std nop aas and (bad) int mov shrl outsb pop jae mull cmp inc xchg icebp jge dec int shlb and mov rolb pop lods jnp shlb ja loopne mov pushf mov fdivs push inc lds es xchg je test ret mull ds lret mov mov pushf mov in mov jecxz incl std sbb sub daa lret std sub add xchg into push ljmp test lea adc cltd push xor scas or fdivrs mov repz iret xor pop xchg sub lret int3 setge xchg inc jmp inc push jae xchg ds clc pop mov (bad) and pop adc jno aas and xor cltd adc mov mov insb and sahf jo outsb aam sarl nopl sub rclb js add int jmp jg jno push fisttpl mov xchg push shll and adc push pop xor fisubrl test imul push les call mov xchg in clc xlat cmp sbb jbe jae xchg popf cmp ret repnz fwait jbe mov dec mov mov daa out and popa pop rcrl add rcrb pop inc jmp daa jp inc add das popf bound mov or dec lods dec jp repnz xchg ret negl loopne cmc enter test insl hlt bnd and movl xchg je sbb js aas xchg ror fdivl inc je out or stos mov xchg xor add into std add test sbb jle mov mov lahf lret cmc mov jmp fdivl cmp and jg test or js ret adc popa movsl and push int jp sub outsb adc mov movsb stos pop mov jns mov ret mov jne fs mov xor cmpsb lcall fs fdivrl outsl adc mov mov and icebp aad xchg jnp jg ja pop cmpsb or push jbe dec jl das sarl cmpsb or add fist stc pop dec es mov sbb (bad) (bad) or out (bad) jae inc push inc add add or in jbe inc sub in insb mov sbb mov and iret xor or hlt dec inc mull stos pushf hlt (bad) add push xchg xchg pop insl nop hlt test das es push out sbb xchg shlb push ds outsl add pop js int3 repz fucomp lret sub and imul jecxz lret iret sub inc mov push jno inc push ficomp mov in adc sub loop mov clc pop adc cwtl mov push pop add lretw rorb xchg mov clc insl lahf xchg adc ret out sar mov push jg jno cmp jnp mov xchg jl aad repz icebp hlt cs xor fidivr and rorl mov movsb mov cli popa adc or lock test dec in push xchg xchg test movb std mov adc daa jno pop jnp loope sub in pop fcompl cmp test add xchg ja push in popf push inc cmp dec sub push and jmp xchg jbe (bad) (bad) sti test dec push scas insb pop loop push xchg (bad) xor push or inc int jno jne in mov dec lret pop xor jg es add dec dec jo jns out mov push or je test mov sbb sbb dec adc pop dec jl jb ja call sbb push mov push and sbb jb stos push (bad) pop sahf sub out mov sub popf or lret mov js xchg and mov pop into imul xchg enter pop imul lret loop (bad) and iret js sahf add lods xchg mov test pop decl cmp das sbb jp fidiv adc pop lcall lret and mov out pusha or mov cli sbb in insl pop mov les test xchg insb imul imul inc jo mov cltd mov jb hlt or xchg sbb int sahf xor xchg and push cmp sar xor mov pop push push jge addr16 add inc into test inc dec cltd xor cwtl xchg sbb adc leave in fimull bound das data16 or lahf dec jmp and adc (bad) repnz xchg cmp push aam mov jge dec sub adc pop cmpsl sub dec int3 faddl mov mov aas and fnstcw bound or jge or test adc add shll pop in sahf outsl add int add cmp out adc xchg rol subb push outsb mov push out flds dec xchg repz adc in loopne call xor lahf sbb movsl (bad) cwtl dec leave sub inc dec mov in xor std pop loopne cld mov and mov out adc and stc mov into cmp test aam iret jnp xor pop mov sti or imul lods cwtl arpl lcall xchg pop push xchg in inc jg jp pop sar push scas insb mov je jns cli xchg adc fwait pop leave pushf aam xchg mov sub (bad) cmpsl ja fdivrs pop pop mov jp pop xor test dec je sbb sbb cs mov pop mov and ss xchg fwait (bad) mov enter jge and in mov xor or sub dec je rcr repnz dec std lods aaa rcl scas in pop cld xchg icebp in lods push fcoml imull pop or cli pop and repz test jbe ret fdivrl mov dec jge jge repz out inc lods sbb sub lret dec sub xchg stc lock jne sub or push jb adc jo and fistl ja xchg mov bound gs lea dec and dec sbb jg aad call out pushf int3 mov (bad) jb leave push cs inc jns ss dec sub sub fdivrl ret scas hlt pop mov inc push notb mov dec (bad) loopne aas push out movsb xlat mov ja ret jmp (bad) mov in imul cmc lcall sar aam sub call mov jb scas and aaa inc scas pop (bad) nop shl je and inc fs dec mov pop dec push loope cmp mov orl int3 and in cltd mov outsl stos loop cmp roll fwait mov mov push cmpsb push jecxz loope lds in loop mov cmp into stc scas mov add inc add add aad lods arpl hlt sbb sub mov cmp cltd sahf inc (bad) rorl xor mov gs inc adc dec insl pusha ffreep addr16 dec popf add (bad) cld add je xchg xchg jne daa sbb mov mov test sbb jp jg jge sahf pop stos pop cmp sub jecxz scas pop insb push pushf xor test scas jp mov push push mov push pop movsb cld mov add xchg in jmp dec or inc adc aas hlt inc mov cs or jae negl xchg dec lea mov js ss or sub fidivrl adc xchg dec adc mov lods jmp cmp adc shrb cmp sub mov je sbb aas sub in inc fildll loope jbe lcall cmpsb cld test stos sub ljmp mov sub sbb jns dec loop cs mov mov outsl cmp lcall jno mov jns in sahf xor stos pop jmp into sbb into push and dec xchg cmp adc mov sbb fdiv addr16 sub inc lret add pop cmp dec fwait dec or jge loopne sti lahf jmp stos push dec mov and cltd adc dec cmp sbb imul fbld std xorl scas inc mov cmp mov jmp jo movsl cs aas jg push pop mov fnstsw pop cmp cmp test out push jne stos or out adc mov fwait cld pop nop cli cld enter repz adc push mov popf ss sub inc xchg (bad) stc adc sub sub add pop push imul mov cmpl adc divl inc add clc inc mov fld pusha popa sub mov dec mov loopne cmpsb arpl fldcw lea lret push mov sub inc fistpl xchg inc cmpsb loopne push mov mov or sarb (bad) fwait data16 mov pop mov inc fwait call cld clc xorl lds es xor insl xchg hlt add (bad) push sbb lock mulb (bad) call data16 dec shrl outsb stc inc push icebp imul int bound lcall insl pop pusha (bad) cli cld punpckhwd es das fimull adc dec mov cmp jae mov loope fidivr movsl add jecxz jae dec mov popf fst add out sub aam faddl cmp adc jne rcll pushf mov pop enter adc mov mov add movsb loop xchg jns stos cmc push cli push or ret cmp inc (bad) js bound xchg xchg (bad) int3 fiaddl xor loop push mov jnp dec add mov push repz xor jg bound fmull mov pop push mov mov call les cmp cld adc add jb pop loopne aam frstor dec scas aaa dec pop mov je mov inc sbb xchg mov pop or inc mov clc shrl mov jg mov repz daa pusha push xchg mov sub mov xor add std xchg sbb and xlat xchg mov les sarl cmp mov or repnz xchg bound sbb adc xor push xor addr16 outsb rol jb,pn dec cld dec jb push push ret adc jp ds fldenv mov gs stos xchg loopne rorb adc push sbb out push cmp pop cmp mov inc sub jmpw or and jbe xchg imul mov push dec xor test push lods mov mov inc jge pop out (bad) sub mov sahf sub (bad) ds cmp lea cmp scas xor pop sbb int test cmpsb adc pop mov lcall stos std cmc xchg (bad) stc fstl dec lahf shr or or pop mov sbbb inc adc mov cmp pop push (bad) or int movsb cmpsb pusha scas dec and std test push iret clc pop fstpt mov push je orl fidivr fldl sub xchg jmp sahf cmp xchg fsts es es sub ss neg jno sub mov (bad) lahf cwtl inc lds je ja dec mov testl mov sbb ja xor cmp imul (bad) push test rorb sub jp push and jnp rcr sbb mov push scas cmpsb lret push push xlat icebp insl xor dec loopne (bad) clc and adc jmp xor mov push inc or jp jle xor and out cwtl cmpsl sub into cs popf inc sbb jnp xor adc sbb mov insb mov imul cld cltd out (bad) mov inc sbb insl pushf (bad) loop lahf cli outsl addr16 sahf rolw insl mov in sub cs addr16 popa dec scas mov push adc out popa aas sub xchg mov cmp inc mov xor enter cmp out scas mov cli mov (bad) pop inc jne pusha push pop (bad) mov dec mov lock ss pop mov (bad) cmp add adc dec mov xchg jmp inc xor and dec shr cli lds in jge push ds in cmpsl add in psubusw cmp pusha repnz je xchg fbld mov jns cmpl xchg outsl repz jle xchg (bad) and push mov pop cmp dec push es xchg nop add jbe add stos mov inc cmp mov sub jl pushf pop xor pop adc pop xchg scas scas test rcrl lcall xchg jne sub push jp loope jno adc aam sub cwtl movsb mov popf test or cltd ss inc pop pop and push aas fisttp sbb (bad) ret pushf mov inc mov incb in mov scas icebp sub cs and mov test outsl mov cmpsb dec add dec lock cld call divb hlt popf or pop xor xor int3 stc sub jb mov loop dec lret inc call xchg aas jno push (bad) insb das loopne (bad) xchg cld fmul dec sbb movsl aad lds stos cmpsb and pop pop fsubp test cs adc (bad) and mov add push mov mov jp sbb mov pop mov lret lret dec loop cmpsl call mov loope jae shll inc aas add cmp xchg mov adc (bad) aam repz inc jmp test inc popf xchg and scas mov fwait and sbb jp in in or dec pop sbb sbb lods mov sub xchg test adc sub adc dec shrl dec lret pop or es adc fldl xchg dec xor mov add icebp mov fsubrl (bad) dec ljmp sub jae test mov pop and scas add mov dec add add ret mov push mov jle in sbb lods mov jg and push push jne or push loopne scas or xchg test repnz dec fldenv pop cmp fdivs sbb and (bad) pop (bad) pop jl aaa jae cmpl mov sbb fistpll aam fwait xchg xchg xlat dec cmpsb jecxz jno loop mov mov sub add xor adc and jne xor arpl cli rol push aad outsl movsl ds (bad) test inc push xor push mov cs dec push sub in pop cwtl mov mov sti in adc pop aad repnz scas xchg lods cmc and mov into negl test adc out sbb lret dec or sub clc sbb adc adc jle (bad) jb orl or fbstp mov mov or mov push pusha sbb sub loop lods mov jle mov movsb imul xor outsb jae jbe (bad) dec es jbe push insl (bad) jae xlat mov fsubp andl clc inc faddl popf iret mov pusha xchg pop adc and ljmp xchg dec pop test insl dec mov mulb or sub gs lret scas or outsl pop jge sbb jmp push stos adc inc dec (bad) mov mov inc push mov sub loop cmp xchg int mov mov aaa fwait mov jbe adc ror push (bad) les jns roll bnd imul push andb sub inc popa cmc fwait ds movb sar popf push mov mov xchg jb and sti mov idivb and add mov or data16 out add xorb js sub xor jmp pop mov mov cmp jno inc pushf in cmpsl aad xchg rcll push lret nop cld ljmp and mov incl gs or addr16 hlt xchg mov loopne jno into mov jle xor xchg dec jmp inc ret jns test pop push and clc dec dec aaa repnz mov or xor jns inc arpl cltd rorl ret mov or jecxz lcall (bad) push push pop inc xchg mov in fdivl or pop xor popa in mov mov lea xchg add bound subl xor in and push stos dec or dec xor aas cmp xchg mov in jns lds and mov fldenv (bad) jle mov test mov cmp mov or xchg mov pop addr16 and jno xchg in mov out or pop inc dec les mov mov cmp or aad lret dec cmp inc (bad) fisubl fidivrl jo adc sbb insl outsl xor int fmulp aad fisttpll fs mov (bad) in icebp (bad) stc in cmpsb fstps xor jg into addr16 notb pushf adc mov mov fsubr and insb pop push xchg add jne dec add cwtl aam jbe in aad aas pop sbb mov cli cmp xchg repz dec test rorl int3 and popa shlb mov test pop shrb push int3 fldt inc sbb fcmovnb xchg cmp adc mov icebp or and in lods xchg cmp stc xor jns jle lcall test imulb mov in adc adc fsubrl mov lds mov enter fmul mov imul push divb pop outsl jle add push sub shlb push sub in dec xchg int3 fildll pusha aaa sub sbb adc inc aad pop mov cmp xchg loope ja dec or out push mov outsb pop mov imul push (bad) repz repnz loop fnstsw mov aas mov movsb cltd mov cmpsb fwait or cmp std jo xor xor (bad) shrl jo das cmp dec popf divb adc mov bound dec pusha test sub jge imul (bad) xchg cld cwtl or rolb stos push cmc push cmp adc rorl cld push add aaa loopne mov inc mov fcompl outsl (bad) lahf push (bad) ja cmp jne inc sbb test cmp into lret imul push incl jl sbb rcrl pop insl xchg xor outsb rorl loop mov xchg xchg inc xchg pop xchg in mov add int pop jg leave xchg iret aad mov int3 jecxz inc cli pop and xchg cli arpl add sub sbbl adc dec leave flds add push mov and cmpsl add mov xor or mov mov sbb divb inc cmp jbe in (bad) dec add xor mov adc adc psadbw inc ss or (bad) arpl loopne mov loopne cmp outsb mov push scas xchg insl ss xor sbb movsl inc enter mov dec sbbl dec lret sub mov jl push xor inc test jecxz sbb orl mov adc xor rcl xchg jecxz jmp (bad) dec xchg and sbb mov dec fimul add add mov test mov xchg imul inc push mov lret sub xor xor lea inc negb ja mov or xchg test cmp cs loopne ljmp imul scas mov dec iret nop sbb test sub xchg add xor fildll test xor shll (bad) das je dec inc adc ja out aaa or push out mov push mov (bad) or lock loope sbb (bad) mov (bad) ja movsl push outsb jb lahf icebp loope ds ljmp aam and jno or push (bad) xor add jecxz pusha js movsl sbb sub lea shlb mov test mov pop out cvtpi2ps (bad) xor jae push fildll or aad xor psadbw cmp xchg and mov xor adc in cwtl lahf insb sbb (bad) or push (bad) in mov cmp push mov nop lds cmpb cmp adc lea repz cmp xor sub mov iret mov cmpsl cmp jecxz popa pop dec add shll sti xchg and mov push dec ja mov xor push fwait lds ret imull dec (bad) jge add pop shrb in jnp repz ja aad clc jns sub sbb cltd (bad) cmc insl pushf vpshufd rclb xor nop or xor and push or xor or push add adc add cmp das inc xchg clc sbb lods jp push std fwait dec push sub leave inc inc int3 add jo fisubl dec mov test mov (bad) cmc mov mov sub xchg in scas js push add imul xchg fdivr fldl aad out jb (bad) lock adc ds das pop mov mov sbb xchg push decb adc and test jae (bad) cli push dec in lods xchg dec pop lret fisubrl mov std fs jmp jmp xchg call test in cld sbb (bad) mov fisttp adc rolb ja sub dec lds ja orb insl ljmp jge mov mov xchg ja mov (bad) adc jg mov xchg jge je movsl push jle sbb cmc paddq addb fucomi push jae xor xor sbb and ja (bad) popa pushf mov add mov scas jne shrl sbb sti and adc enter lock cltd add test lds js ljmp sub jnp cwtl popa loope jle das xchg inc pop jmp cmpl lock add je xchg in jg ja js jbe sbb sarb (bad) jle jle and mov imul (bad) mov fdivrp inc add sbb ret scas inc (bad) stos aas notl sbb sahf loope cltd xchg pop call inc cmp clc imul stos mov or sub and cmp in stc mov in push or ljmp or xchg or clc cld jnp or addr16 pop sub or pusha out pop ljmp ret cs mov sti inc dec xor andb sub adc (bad) (bad) mov cwtl mov lahf add pop adcl xchg sub sbb cmp (bad) lods cmp mov cld push inc dec add (bad) test mov (bad) add pop pop jp ret (bad) jecxz and xorl rol mov mov fistpll lock cmp cmp and pop mov addr16 aas add mov push ret xchg cwtl sbb xor or add ljmp push in gs dec repz ss push aad inc mov popl pusha sbb pop push xchg sub jl (bad) (bad) in mov sbb adc push pop sub pushf stos cmp dec js push xor mov shrb popa dec sub or xor aad cmp jmp sti jnp aaa shrb mov lods mov add cmpsb push jns xor loop addl std test cs mov pushf adc lret aas pop inc adc and cli (bad) insl movsb mov movsl sbb mov cli daa shlb push (bad) loop jecxz popfw mov pop mov lcall out jp jbe loop add test inc frstor (bad) or sbb loop push mull adc gs fidivl sbb xlat repnz mov sti sbb es dec inc in mov xor imul inc sub fcoml mov and push pop lods add mov in clc sub push sub outsl lret pop inc cltd dec mov adcl mov fadd popf inc aam ss add push push or shrl ljmp je fs and loopne int3 and push js call loopne jl jmp testb shlb popa push cs add lret mov pop (bad) (bad) sbb push into fiadd iret test dec aad insl jo add in (bad) mov movsl inc and add cmp sbb cmpsb and in adc lds mov jae sbb shrb jnp movsl add scas adc add xchg mov in xchg sbb dec cmp push lret inc (bad) xor dec sub or loope call xor jne fdivs outsb cmpl mov xor (bad) jne or loopne adc pop stc pop add jp shll pop mov mov pop dec jne pop mov out push xchg xorl iret aaa es inc inc sbb lds push (bad) jo push in inc inc adc lds sbb jle test ret mov sbb ret xor stos sub cmc arpl test out sbb imul fmull jae loope mov mov sahf mov or sub repnz dec lcall sahf inc xor nop das or out lahf rclb pusha inc insl pop mov aam mov jle imul mov push enter xchg mov xor stos daa out mov jl insb (bad) dec repnz je sub add enter mov imul or cmp (bad) lods lea ja mov data16 lret xchg (bad) cmp jo pop cmp inc movsl push into les pop and mov lods jno push add sbb jnp inc add mov insb ret pop xor fimul push stc sbb mov and movsl push cld fstps aaa std jne cltd into out idiv sbb aas jnp push pop js push subb adc and sbb in pusha repz mov (bad) divl fwait inc push (bad) jl fiaddl daa cld paddsw (bad) cmp scas add popa xor xorl dec es pushf and icebp jae leave and sbb cmpsb pop (bad) jb inc sbb xor mov pop subb jl (bad) xor jae out aaa push xor addr16 mov (bad) xor roll xchg push xchg adc jbe pop stc addr16 mov fnstcw dec loopne jnp inc add push loopne iret adc or out xor xor test lret leave add lret dec xlat (bad) cmp outsb sub dec ret imul sub mov lret outsl xor xor outsb pusha mov jmp mov dec leave inc xchg aas push fstl push arpl sub jo (bad) mov pop xor insl fisubl and mov fs cmp mov pop sbb mov dec dec dec out add sub pop test insb call lahf ja (bad) jb andl push repz inc add mov (bad) test insl hlt adc mov lret lea pusha out and loopne arpl dec mov scas int insl inc inc rorb and xlat ret out xchg into xchg xchg test mov out lock fwait jae test xor push lahf popa cmp or pushf adc mov (bad) jmp lods std verw mov test (bad) js into mov mov dec sbb jno stc out pusha add int roll sub adc cs ficoml mov adc sbb push mov sub inc xor push adc sti mov adc mov cmp test mov mov outsl je or dec (bad) daa dec xchg lahf adc cmpsb aaa iret jo into xchg movsb ret push je roll imul js and sbb xlat pop mov jnp insb into push popa sets dec pusha adcl lret xchg pop cmc cmp (bad) mov cmp mov mov mov push rcrb fcmovu je push test pavgb dec pop ds cld jecxz mov movsl dec push ss hlt inc enter (bad) mov cmp sub inc pop xor negb cmpsb notb mov lret pop push push imul xchg sub adc test inc lds fnstsw xchg test pop popa std lret fs xor std cs jmp pusha out inc lret pop mov iret push xor sbb mov leave pop jo outsb inc aas xchg (bad) loopne push ss js test jne movsl lea and addr16 sbb js pusha pop dec out divb xchg jae ss xchg mov pop pusha std push fsubrl jmp or lea cmp mov subl xchg push or in pop inc xor dec inc adc ret pop bnd fsub sbb jge test xchg add or sarb sti mov out outsb jno and cmp test cld add jno fistp dec dec ds cs inc mov cmp sbb ds fs ja cmp pop shlb into idivl xor mov and dec xchg hlt popf adc mov ja test iret dec jge push inc in sub (bad) (bad) sbb out clc inc mov leave rcl sbb orl lock xchg pop (bad) push or loopne jno mov lods addr16 popa jnp mov repnz adc aas and xchg repz jl aad lock adc (bad) fsubrs jge,pn enter sub dec loop inc xchg pushf mov pop cltd aaa sub cmp call clc push dec shrb mov cli mov sub and and mov ss cmp xchg push mov sub imul xchg mov insb jl mov jp (bad) jbe inc stos jns xchg sbbl imul xchg lods pop cmp cltd loopne mov cli sbb cs in pop add into leave dec push inc fisttpll popf insb int adc fs lods gs in mulb lock stos scas xlat mov mov mov sarb mov dec test adcl push ffreep fisttp outsl mov ficompl lret test and insb mov xchg (bad) mov sbb mov mov sbb mov fidiv adc inc leave xchg data16 adc out xchg out (bad) mov dec push rcrl push sub ljmp or jle in xchg lahf mov (bad) hlt xor (bad) jecxz push pop cmpsb mov or xchg repz mov loope sahf mov push mov dec les cltd mov jno inc dec sbb loopne pop ja lock sbb sub js mov pop adc and addb add push cmp sub sbb dec fldenv fist icebp jno (bad) decb mov outsb jno nop out testl stc call jg add pop clc and inc mov icebp lock add ds xor mov int lds and mov mov call adc outsl pop xchg push adcl cmp sbb mov xchg sahf cmp outsb pop or lods add gs ret test xchg aas mov jecxz test scas inc pop es out pop xor stos pop adc and (bad) ficom in mov popf aad daa repnz insl pop mov mov push int3 jo sub cs iret ss testl mov sti mov jne ljmp sub cltd mov sub xor test lds (bad) cld test adcl mov outsb mov pushf stc mov lds dec insb mov loop or sbb sub jae mov scas subl mov or (bad) push loop movsb lea sub and adc stos push adc cld mov jle dec inc sahf push pop lock (bad) sub rorl leave push das (bad) les aaa iret pop mov cmp adc in jp mov pop aam xchg cltd mov loope mov xor out andb out cmp bound mov lret cmpl loopne (bad) inc mov push xchg pop sbb imul sbb and jne jnp jb ds adc xor and and push xchg repnz jmp jbe push jno imul or xchg xchg and scas sbb repnz cwtl in cmc sub lahf loope xchg adc icebp inc fiaddl stos sub ds push sahf (bad) sbb xor outsb test test push pop gs dec hlt orl cs jne mov subl std mov sub mov push (bad) fsubl xlat int out mov add mov cmp orb int3 loope add xchg testb inc lods jne out (bad) sbb cwtl or jmp add lcall iret push push jge (bad) (bad) out jno and or add jle test arpl in loop jecxz jnp js xor pop add mov lret mov push xor pop arpl cmp mov sbb inc dec int3 cmp dec pop js iret xor pop push (bad) sahf decb lret cld sahf fs sbb pop fdivl xchg mov xor sbb outsl sbb xchg movsb jo fadd dec jnp or (bad) call push loopne jno enter (bad) xor add sub jae,pt add std addr16 sbb aad repnz dec jne mov mov ret popa stc sub lahf int fwait dec icebp lret and (bad) neg and pop jmp jp push in cmp insb cld (bad) jbe lret fcoms xor ljmp fs rol repz sbbb mov mov (bad) jp cmpsb jp in sbb es imul push lcallw jno xchg dec lcall leave popf inc test daa ret ss aam push sub fldcw ret cmp ret inc add lods push dec or fmull movsb lods pop xor pop pop inc cmp mov sub pop fistp (bad) pop jb xor nop add or dec inc mov push jle into jnp or and xor jb (bad) jne sbb jb mov aad inc ret in leave test pop sbb mov pop enter cmp fcompl push cltd mov add outsl jge mov cmp loope push aaa sub popa sbb pop sbb mov out jge sub mov aam push mov aaa push push xchg fstpl pop sub clc xchg aas (bad) mov inc push xchg mov pop lcall lret cmp (bad) dec inc pushf das push out and stos aaa push fstpt add xor mov dec pop sub mov cmpsl (bad) call inc adc out fist or out test lods pop imul int (bad) mov and into iret xchg out mov or lret sub xchg arpl xchg inc jns and dec add subl fisubl sbb clc into gs ficompl mov int3 lret and pop pop and adc push ja popf rep sub idivb cmc clc add mov push jl pop add das test repz sbb cmp shr test mov fs push lods jb repz and lods pop xlat mov test imull adc mov inc cmp pop mov les push push jb aam insl js rolb push inc push dec pop jo lods in pushf (bad) mov mov xchg xor xchg js ret (bad) push push inc cmp xchg jae pop loop push cmpsl dec push je mov arpl push cmp pop orl das mov mov xchg mov mov adc imul inc add xlat es xchg inc pushf gs scas pop push fsubl leave jae xor sahf in push pop lret xor xor mov in or pop sub rcl xor dec loope pop dec and testb pop dec xchg outsl adc dec cmp in es cwtl and sbb mov ljmp loopne (bad) repnz repnz int lcall jns loopne mov pusha rolb jne add cmpsl xchg adc test mov cmp gs pop and push xor clc xlat xchg cmpsb fucom in js inc pop outsl push loop cli pushl and fs outsl arpl in xchg popa test ret fsub or fnstsw xor push add dec cmc pop push add mov data16 lcall imul cmp int3 rcr dec outsb pop cmc lods cmpsl scas in cli or add mov lahf fld (bad) inc test adc lret mov cmp sbb or jl inc lds push mov xchg push mov ret adc mov sub jmp xor sti dec and jnp dec aas fs shrb mov jne rcl and aam outsb xlat xor ja mov or mov sub pop xor loopne mov mov jmp or pop cmp ficoml or int3 sbb mov nop add mov add pop sub adc cmp or jbe fs mov cmp or jecxz,pn loope rcrl aad jl xchg leave push hlt inc mov call jl mov (bad) in (bad) sub sub inc cmpsb xor mov (bad) hlt rorl (bad) xor out sarb enter push xchg mov jg xchg inc cmp sub xorb add jmp mov jo push in mov (bad) jge pop insl test cs mov inc sub jns xchg idivl fwait jecxz sbb cmp pop jl ljmp enter dec lea shlb mov scas (bad) push cmpsl (bad) add mov fidivrl idiv repz pop fldl int3 jecxz jmp mov pop scas or ss fdivl jl or adc inc mov dec test pop test xchg mov shll out ror pop or stos sub push adc jns,pt outsl lock sub and cmpsb test or into inc mov das call jg stc inc pop and mov pusha push sbb xor outsl mov icebp mov stos (bad) jnp push iret fdivrl inc jle ljmp xor inc sbb cmp lds jb (bad) lock or rcrb pop adc call xchg addr16 mov sti jmp sub sbb xchg sub mov (bad) loope ja and cmp outsb lret pusha mov fnstsw xlat push xor dec sub mov cmp sbb gs shll rcrl cmp jae push fwait dec cmp aas repnz add adc (bad) sti into scas insb lods leave std gs sbb pop into pushf xchg mov pusha xchg das jae or and pop lret and inc mov cltd fsubs cmp insl add sbb icebp loopne jbe fsubl mov mov scas ffree aas (bad) mov repnz divl rolb xlat jo push cmc mov fdivrs leave adc and jl loop mov mov leave xchg adc jns cmp scas cmp sbb mov or incl enter inc ss sbb mov das xchg fs lret jb inc ja sahf adc jmp bound frstor inc or call jl pop sub jo adc jbe outsb mov mov mov mov std daa fdivl repz and adc xchg sub shlb test inc inc lods pop loop xchg and scas aaa (bad) xor aad cmp pop pusha shr push ret and icebp scas mov ds scas push gs enter insl cmp mov xchg lea xor xchg sub jge arpl cmp xor sbb adc movsb das sbb add xchg ficom pop mov ja and xchg jmp or (bad) aad jmp js mov xor stc imul dec lea xchg imul out cmp ss pop cli fwait pop (bad) into and sbb (bad) aam fwait bound and mov in repnz pop pop addr16 sahf lods rcll push push ljmp insl dec sahf imull adc aas adc js inc mov mov test pop jbe mov cmp aaa add add movsl push adc shrb jmp mov xchg xchg insb mov popa in mov and aam xor cli das xchg xchg jmp loopne mov and cmp scas pop out (bad) (bad) int3 mov mov ss sbb cmc arpl and lods dec mov jg cmpsl imul dec dec mov jo jle popa sub nop mov inc mov lcall lcall xor movsl repnz loop mov mov (bad) fisub jmp pop fiaddl in pop js jle leave aam and mov stos xor push sbb add sub jbe mov test mov adc adcl pop xor nop push fdivs dec bound xchg bound add (bad) cmc roll fstp divb cwtl aaa mov fisubrl sub mov or daa inc loopne icebp int pusha fbstp xchg aad adc hlt mov sbb cmpb out outsb sbb or mov es lock ljmp adc dec add test mov in adc jns xchg mov int3 pop pushl loop cmp adc sbb sahf negl sbb jecxz push std adc jne pop lret inc dec ret lods scas std pop mov cmpsl xchg inc outsb jmp mov std cmp adc mov sbb adc jmp rolb adc idivl sarl lret mov mov ja dec mov insl je jbe mov adc xor sub lock je sub ljmp sub dec (bad) mov jl sub lret divb cmpsb or xor pop or test movsl bound sbb je (bad) out dec std cmp ret loopne mov sbb (bad) nop jbe ret xchg pop push pop mov pop dec push js imul cmc pop xor test jbe rclb xchg pop jmp sub push jno push push popf rorl nop (bad) loopne inc movsl (bad) das rcll push popa and xchg and loop out sbb xchg nop xor xchg mov mov add lock jecxz icebp (bad) mov pop mov fildl loop jmp or jp adc call jnp insl xor sbb mov lcall outsb lcall enter xchg movsb add pop je call xchg or into jb mov das mov pop lret pop stos addr16 mov or push jo inc mov insl pusha imul fcoml inc mov mov inc push adc (bad) cmp jecxz (bad) (bad) push ret ror lcall daa dec mov add sub xor mov mov sub test push test jnp mov mov lcall cmp xor mov push aam mov cld int3 or and jecxz xlat daa mov (bad) xor pop out loope add mov lods xor das clc aas fstps out add add mov out mov dec or shrb cmpsl pop mov mov jmp jo lock insb inc add mov lods pop lea int xchg das sub adc jnp inc mov ss daa in push inc xor push fs int fstl leave xchg sbbl cmpsl std sbb xchg shrb out jb push mov cli rolb xchg mov insl gs jg push mov sbb loop dec incl sbb faddl mulb ss pop arpl jno movsb (bad) xor xchg loop into cmpsw sub int3 mov outsb lods xchg mov cwtl cmp icebp xor cli lea mov (bad) and in mov gs movsl sahf pop pop mov jle pop out pop mov pop sub (bad) (bad) sub sub idivl and xchg adc pop inc add into loope dec sub xchg daa xchg imul jg adc aaa rcrb add (bad) hlt jge test or cmpsl repnz mov push mov xchg mov xchg xor outsb jnp inc outsb dec fndisi(8087 push jmp popa push push out dec lods movsl and push sub xor daa sbb adc rorb jno imul imul or jne fnstenv fucomip lret pop bound ljmp cmp dec sbb jne mov in (bad) ds push or cmp mov ja jnp fistl mov adc dec xor sahf fnstenv mov push push icebp and std mov hlt xchg rolb mov push test out mov mov pusha bound adc (bad) mov sbb xchg out mov sub sti andb daa jp inc adc (bad) mov into push out dec dec pop sbb mov in inc mov iret nop stos pop push xchg sub enter add cltd out or dec mov mov xchg pushf je lods cltd pop inc pushf rcr ja mov xor push jmp mov scas mov push out or lods cmpsl jnp ret cmp xor jnp cmp jmp cmp jne int dec in negl fnstcw add cmpsb aad adc fidiv mov jl das xlat xor pop out jle mov or bound or dec sbb jle jo int3 xchg jb lea pop (bad) sbb mov (bad) (bad) jg movl addr16 test adc test in xor imul (bad) xor pop sbb xchg lahf add sub call into (bad) cld pop lea test xchg xchg icebp dec push rcl bound arpl shl daa pop cmp es pop les push xchg push mov stos fcomps sub xchg cmp push rorb and in inc mov jmp mov and cltd outsl dec jb mov insb push adc xchg inc or push cmpsl or cmp mov sub cmp pusha test mov lea mov repnz sub ret iret xchg push cmp clc ja adc xchg scas adc cwtl xlat addr16 mov out fwait aad or aam out xchg ficom sub negl pop add add mov cmpsb push outsb pusha inc mov scas mov adc cmpsb ror mov cltd mov inc mov mov xor jne (bad) lahf in cs movl pop test repnz jb cs mov mov lret mov into insb sbb pop aaa dec pop sub (bad) bound jge jns lret add jecxz push mov in iret xor jecxz ja (bad) mov push sbb jmp mov push or xchg fnstcw sbb hlt lea pop sar data16 cmp push push mov pushf push pushw pop sahf add jp int3 cmp scas addb cld daa push int3 fsubr and sbbb xor mov mov leave sti adc stc push movsl inc xchg outsl sub icebp lahf dec xchg mov daa cmc das das das lahf popa cltd test cmc sub adc sub les adc vmovaps scas (bad) xchg stos jnp push lods pop (bad) add loopne je push cmp jb lods or inc clc (bad) xchg popa pop add jae,pt push cmp and decb push adc push in pop cmpsl out sbb lock pop jb arpl push or jp jnp xchg jnp imul and xchg leave xchg std adcb sub (bad) xlat pop and xchg sti imul clc fucomi in dec inc mov gs inc xor jmp fldenv xchg mov (bad) mov ljmp mov mov hlt (bad) cli or test pop cmp (bad) ret cmc add ljmpw xor push fisubr and mov lea and xor fwait and xchg dec movsb xchg cmp mov cmpsb xchg sahf jnp je mov jl mov or sub or in insl rcll dec pop daa cmp inc jnp mov sbb lods or pop in push je hlt out bound ret xchg ljmp xor xchg fisub (bad) (bad) mov subl fidivrl pushf xchg cmp xchg push icebp mov shlb push pop sbb js adc popf (bad) and clc mov movsb or mov dec out sub add push push adc out mov cmpb pop sub mov call rolb sub add jmp imul dec xor pop gs popa mov xchg scas push xlat push lahf sbb dec cmpl inc fcompl push clc mov insl aaa cltd mov mov ret push in sbb imul push lahf cwtl add enter sarl stos sub addl pop cmp daa jnp mov sub test lcall mov mov dec aaa sub mov dec xchg shrl xor pop (bad) je pop pop ficoml add mov add cmpsl jne xor mov ja mov lea mov pop mov mov push add jmp rolb or sbb in adc mov or fsubs push push push sub add jl and or dec push inc hlt insb sbb cmp pop cmp and push inc pop (bad) push fadds mov jmp mov or jb cmp sub fs mov repz cld mov xchg pop jg mov ljmp add jo ds inc cmp adc cmp xchg mov aam fildl int3 mov fldenv jmp je inc xor into mov or add lock or cmpsb mov sub fsubrp mov lret sub xor jecxz or jbe out mov mov jnp and shrb shl pop push insl pop dec popf scas and mov lods cld call mov cmp adc call push jg adc ror pusha ja dec push lods cld adc shl inc sahf int3 mov mov sub fistpl scas jb in ret frstor cmp xor cltd pop sahf pop je sbb andl cmpsl sbb lret sub scas rcr bound stos fcmovb pop xor inc dec xchg repz popw inc jo enter (bad) in je and ljmp daa cmpsl sbb daa lret dec jecxz,pt dec push push std add stos xor lcall icebp pushf das add into mov pop aaa push gs xor bndldx xchg or sbb ret mov out push dec lds int sbb add fdivl and jno add or nop clc (bad) fistpll and and jbe pop std mov jmp pop repnz pop stos rcrb pop mov hlt imul repz xor cs adc in (bad) int3 insl xchg cmp or add xor push xchg inc rorb popf xor fiaddl push push lock xchg sub sub and lret subb cltd push (bad) enter enter cmpsb (bad) popf lss ja imul xchg fs xchg and dec xlat je jns,pt out sbb lock lret xchg push adc loope mov imul add jns cmpsl pop int push lock fldt mov mov roll or imul xor xchg xor ret mov jl sahf xchg mov leave je mov xor (bad) out loopne mov mov mov xchg jb rorb push push jns jle cltd lret push outsl fsubl sbb int3 mov xor push mov lahf jge ds hlt iret ror daa push mov fildll xchg ss iret mov xor adc xor pop push mov js out hlt fistpl jecxz mov in pop add imul add sub daa adc adc orb pushl mov lds dec xor je xchg sbb shrb xchg inc and mov cmc xor add jmp xchg fist repz push jb inc call inc cmpsb shrb xchg mov add cmp fimul ljmp xchg mov cmovge ret insl xchg lods mov jb,pn stos rclb jne (bad) dec cmp push cmpsb aaa and jle arpl shrb lret fs xchg in jmp stos dec jne in xchg mov test add mov popf and jl clc and test jo test xor sbb sahf (bad) push xchg shrl int inc movsb outsb out jns (bad) adc xor flds mov scas ss jno push rolb xchg repnz push xchg outsb lcall in add push cld mov cld ret inc xchg cs sub scas push inc aas dec (bad) push aas int3 arpl adc popf mov data16 mov rol ds inc jp sbb das lahf repz and xor (bad) hlt mov daa fstpt xchg pop mov dec sbb aad fisubrl adc ret pop shrl mov inc add adc mov (bad) push cmp xchg fucomi leave xchg and mov cli insl loop push mov sahf mov cmc xor (bad) push and test aas aad xor push (bad) out xchg arpl repz inc cmp pop mov jmp (bad) jo push addl pop add aam dec and out mov insb pop loopne imul xor sub push shll xor clc adc sub or ljmp xchg aaa jb nop int3 jg cmpsb loope iret jle jl inc and movsb push sub adc les mov sub sbb pop lds cld push (bad) or sar xor imul xchg cmpsl dec in cmp xor pop xchg xchg xor push mov and mov mov scas mov inc out les leave add cmp mov lea lods scas jp iret adc adc and mov add movb mov xor out jo add movsb daa mov mov xchg ljmp fs fistl test sahf daa cmp mov lds cmp fcomip repnz jnp dec jecxz int inc xchg in cmp (bad) cltd cmp xor js dec sbb or pop hlt mov sbb in or (bad) pop fnsaves stos dec shrl mov popa inc pushf or mov dec dec push jmp hlt xchg xchg xchg mov and xchg in fs enter sbb out out dec add pop sub (bad) std test inc pop push add repz je pop mov inc in jmp aas xchg xchg cmp pusha inc aam jg sub push and fadds push add xchg fcmovne aam sbb dec xchg adc jae js ja stos add int iret dec loop imul push mov ret adc cwtl xchg dec mov cmp push cmpsb cltd pop pop cmp pop mov pop mov clc lret adc dec xchg inc mov push out add add aaa int3 scas or js sbb pop insb loopne mov (bad) iret fcmovne xor xchg cmp or dec lock mov popa rorl mov in js mov outsl mov or out mov pop std inc int insb (bad) sbb inc sub cmp push pop adc inc sti nop mov fsubrs or cs jp aas jno movsl push mov adc push dec cli popa paddb iret hlt jnp cwtl mov sub (bad) in jno xchg mov cmp insb pop xchg push cwtl inc and nop sbb test sub sub jmp pop mov push imul or outsl fstpl jno sahf hlt pop xor inc jbe data16 xor xchg and fmuls test fwait pop clc mov jge sub in stos adc shrb jmp and cltd es lret adc jbe sbb pop jno pop fcomi dec (bad) mov call lock xor push pop rcll jge lock es ficom in sub adc xchg or sbbl enter (bad) fisubl lret mov pop or stos movsl sbb sbb cwtl and mov scas out in dec mov xchg or cmp cmpsl jmp out xchg fs cmp mov test mov inc sbb adc test das mov push sub fld or xor mov test add fstpt daa scas nop push fistpl stos not xlat fnstenv clc icebp inc jnp inc jle mov sbb js iret shll arpl mov pop xchg dec add ss cli jnp std push pusha mov fwait jns xor dec stc mov clc mov adc mov test lods adc test or repz ss popf sub cmp lock dec in int3 dec in mov push fimull push push push inc lock rcrb mov ds cmp jmp pop stos mov popa loop movsb loopne popa iret lds subl adc orl stc in dec sbb xchg pop mov (bad) pop add xlat hlt xchg push lock mov scas mov sahf test daa cmpsb je sahf repz fxch imul xlat sub cmp cmc pop dec aas cmp push pop xchg jp subb lock push pusha loope rolb imul outsb mov frstpm(287 (bad) lock stos dec add xor and jecxz test aas imul mull mov mov addr16 and xchg fdivrl ds fs xchg arpl sub cs push insl or subl push fdivrp push inc cwtl jge loopne int3 stos das nop cmp test mov aad and outsl mov xor sbb frstor cmp loope enter push adc lds xchg daa aam jne hlt sbb jg loop dec push mov or push iret ret aad mov add sub fxch xlat inc and divl arpl (bad) fisubr lret fldenv xchg mov lahf pushf sbb dec push rcr loopne mov sub mov aad push dec pop sbb xchg je lcall (bad) lds and sbb pop (bad) sahf stos push popf lea jmp mov pop push mov and mov pop ds cmp and inc aam jecxz sub jb in or dec sti pop push sub mov or cli (bad) mov mov cmpsb jo loopne inc and inc (bad) idivb lods mov fcompl repz xchg and dec xchg push lods hlt add pop sarb add xchg cmp cs js popa loop mov in add ljmp inc shr ljmp and ret and enter dec mov mov xor pushf mov popa bound push scas mov and adc push scas push mov in mov mov int adc das out sbb (bad) stc scas loopne clc insb hlt mov push push xor mov (bad) fs jbe mov (bad) sarl mov ficomp sub fsubl popf dec test sub and mov jp aaa or popf adc pop inc mov pavgb inc (bad) xorb add test das mov push xchg push fisttpl add outsb inc mov in (bad) push insb add scas fwait inc or push aad xchg mov sahf pop add test push movsl dec push mov cmc mov or xchg sti adc sbb adc rcll test pop pop mov cmp xchg out push dec dec jno pop leave push sbb movsl xchg mov outsb mov enter lds inc movsl rorb adc loope mov (bad) sbb or fstps rolb xchg into mov cmc clc jne aam push adc or dec push stc std push sbb lods lds xchg pop pop push xor xchg pop and inc movsb out xchg push lret fwait lods imul mov movsb test add add inc xor (bad) (bad) lret pop insl test cld out (bad) scas push mov pop int3 dec scas dec cmp (bad) stos mov pop inc mov fwait jne and divl iret pop call adc dec leave mov add dec push frstor jmp fistl cmp sbb jns jl test xchg cmpsb dec adc pop movsl lock xchg sub aas xor data16 add fldl cld out xor cmpsl test out xchg add out fidiv xor lock idivl pop (bad) (bad) int cmp inc ja movsb and sbb pushf mov mov jbe inc call mov dec scas mov sub (bad) sbb xor sub and pop lea pop xchg mov and lods inc cmpsl pusha mov adc cmp hlt pop out mov mov push out test enter or pop inc mov scas aas rorl addl insl push lahf movsb add stos jg aam jnp out popf inc fsubs sbb jecxz inc pop ljmp rol std in ja (bad) or push pop (bad) mov push xchg mov mov mov xor ja fdivrs push loope sub mov lea bound push js push divl pop jns and cs add dec hlt (bad) test fwait add je sub jbe shr pop sahf xchg mov into sub stos dec sub int3 jle cwtl sub pop out cmp push jo cmpsb inc inc xlat ss mov jp sarl hlt and rcll inc dec pop shld sbb xchg adc daa mov icebp stc add push push jge xchg mov adc jl in faddl cmp dec sbb pop jl bnd int3 mov add lahf addr16 cmp inc rcrl mov stc stc cli and repnz stos cli int ss dec (bad) les sbb cmp ljmp mov pop sbb nop xlat pop es lock jmp mov dec mov cmp add push arpl stc rorl out add jno aad aas pop lods push std int3 lahf cmp inc inc mov cmpsb xchg xor lods in in xchg out inc mov adc inc mov or stos (bad) fcmovnu mov sub sub add clc in add mov dec sbb adc add shrb mov lock popf xor pop mov push int3 cltd or or repnz rorb fdiv push outsb into xchg and loopne,pt and das and push cmp mov cmpsb int3 cmpsl in stos (bad) mov mov mov push inc mov in cmc imul xchg lods dec inc mov out test outsb flds adc xchg jp jae inc mov enter dec xchg fistp sbb dec test inc lods fwait cmp rcrb test sbb add xlat adc jb in pop outsl pop gs fcomps mov cwtl clc insb jmp xor add jecxz aas sub mov (bad) push dec dec lea lods stos or jbe gs mov xchg xor xor sub ja leave ret stos push test (bad) aam in push or bound push mov (bad) mov in xor (bad) mov aad nop sbb cmpsl (bad) loop pop sub mov mov repnz cmp enter lock inc (bad) int3 inc ljmp dec add mov test gs or mov lods (bad) sti and add mov daa jp and push pop add mov xchg js or repz push inc adc and pushf aam out adc scas insb shlb clc into lret les dec js cmc (bad) cmpsb sub fdiv adc icebp and cmp psubusw rcrb dec repz sbbl xlat sub cmp aas test je adc inc into ds push fsubrs mov lret rclb mov ja pop mov dec add mov insb aad (bad) (bad) or test (bad) cmp daa dec lret out stos sti xor push out repnz mov xchg cmpsb xchg js and mov mov inc inc pop and jnp out xor jmp push mov pusha lods mov (bad) popa mov inc (bad) mov jge nop mov adc push push mov xchg mov jge cs lcall inc cmpsb lds jg sbb imul lea cmp push jae mov data16 arpl mov and rclb repz (bad) jbe mov add fs outsl pop pop repnz fxtract mov test xor xchg and sbb or arpl add pop movsl out mov or lods xchg adc xlat jle fldenv sbb adc pushf orps ficompl inc or pop add push jp jo lret or sbb push sbb cmp pop outsl push aas daa inc stos mov cmp fldenv jae mov xor cs fisubr das inc jle fistpl sbb mov repz in sbb jmp adc hlt push pop aaa pop (bad) jmp lea push jle mov sbb (bad) mov (bad) pop jl shr popl sbb mov loopne popa mov addl jp xorb or inc jle dec jle scas js leave dec and jbe jb sub mov adc adc movsl cmp jbe inc pop push xor fs test iret jns dec adc int (bad) (bad) cmc out xchg or and push arpl enter psrld outsl push xchg hlt dec lea jb scas push test inc inc mov mov bound repnz aam adc mov lahf lds dec pushf bound xlat adc xchg mov bt inc imul push jb push mov cmp jecxz test popf push jb ss xor imul push loope inc loopne pop push test pop in fincstp add mov aas sahf adc mov adc sbb adc scas out fstps push push and or fnstsw mov (bad) clc (bad) (bad) (bad) je sbb mov cli dec cmp mov mov push call out dec mov fucomp xchg les cmpsb roll in clc inc mov mov pop ret xor pop lahf lcall jb test cltd cmp js lods jae gs nop or (bad) out int3 stos fcoml push dec ja lods cmp shll imul movsl jp,pn pop nop stos push mov mov adc in (bad) xorl fstps je (bad) adc scas ret in push aas mov insl dec test ds aam push inc pop mov mov mov sti pop jl sub pop inc push lahf sbb je cltd sbb xlat int3 push pop jb adc inc test pop inc (bad) cmpl or loope push in lods sbb xchg bound jmp sbb lods pusha fs mov cltd jecxz ret icebp loope decl mov push ficom (bad) xor mov dec adc ljmp movsl add inc stc xchg mov out adc mulb inc rcl jp lock xor dec and lret inc das mov mov sbb pushf mov or loopne in add mov clc ljmp pop adc push xor jb cmp push cmp outsl xchg mov rorl sub shrl add cmc repnz mov dec push cli push pop out mov pop xchg addr16 sub push add lock rcll push popf jle inc xor sub aam jae jp jbe in mov daa cmc jb,pn loopne mov notb or xchg and cmp mov push xchg aaa pshufw jb push push jae xchg inc xchg mov xchg cmpsb and in xchg outsl test mov adc sub out hlt stc sub mov (bad) icebp push mov jnp lods cs dec jno ljmp or repz adc cli je xchg lahf test mov inc in mov ret (bad) jns (bad) int rcrl repz or adc rclb xor cmp add adc mov cmp loop pop lret arpl pop ret dec insb adc pop dec add mov push or push in lahf and insl inc mov jae mov arpl mov fisub movsb fsubs stos add xchg sahf xor jmp and leave sbb adc dec xor fmuls lret push mov in sub out scas out ja,pn insl jl mov imul popf rcrl or mov movsl cmp jb loope sub shrl cltd lcall dec mov xor mov cld stc or xor pop ljmp push fstps jl mov in push movsl xor mov mov jecxz mov lahf pop fnsave jo std mov fidivl (bad) inc mov scas imull imul mov lods mov into les icebp int fnop or xor lret lret mov sti std fwait outsb push std popa stos dec sub rorl jnp jmp pop bound (bad) jae rorb fs push sbb or rolb es fs loope nop shr push outsl sub lds into pop scas or inc push mov xchg (bad) lods loopne fdivrl out or xchg pop cld cmpb pop cmpsb pop mov fnsave repnz inc pop fdivl jecxz mov cmp ret add insb mov mov pop movsb je cmc push add or adc dec and jmp scas jmp shrb xor (bad) or dec flds rcll lahf add out jmp add sbb imul sbb iret in decb iret bswap jbe cli or cmpsb lahf dec (bad) dec adc sbb xor mov fsubp push mov insl nop out inc cmp mov outsl lea xor add jl cli pop pop or idivb mov ror cli ss (bad) pop pusha int and push sub cmp out fcom dec xorb and fwait add pop xchg add xlat test pop bound mov out aas cmp data16 iret and inc and xor mov mov iret adc xorl pop pop fsub jecxz xchg cmp popf scas lahf jg lret into loop ss push mov stc xchg xchg mov mov inc push loope je push cmpsb xor add add fyl2xp1 fsubs popf pop adc addr16 (bad) (bad) fisttp test fwait mov (bad) lock dec xor pop mov shll rclb pop popl ficomp (bad) hlt pop xchg test jbe lods insb inc out mov ret daa push xchg out pop xchg jle je icebp stos lock jbe dec movsb dec push pusha shl das test and out jp lea in fcmove test lods (bad) push xor aas jno test into test adc out stos cli cmpsl and cmpsb pop add cmp divl in test aad push mov fildll xor iret mov inc dec int3 lret pop or sarb pushf add sbb out shrl int3 dec push and and adc leave push lahf bnd dec push lods lret pop xchg cmp ficomp gs dec inc bswap jb inc pop shll adc dec addr16 add loope lret aaa push fdivl clc jbe cld js push data16 add rorl lcall stos mov test test mov pushf push in cmp mov lods mov xchg and movsl and inc jle lahf xlat or jae call adc pop lds test push es push stc insb loop ss cmp jl movl push cmp test js sbb insb sarl (bad) leave (bad) lcall xlat cmp in mov xchg xor incl (bad) ficomp push (bad) stos daa bound stos mov ss out push (bad) pop sub or fsub ficoml push add xor nop pop insl int3 inc movsb jecxz fs cmpsl xchg sub inc fistpll mov pusha cmp xchg cmc jns int jmp mov push bound and mov cli adc loop mov lahf push repnz or notb std stc and xor cmp je test xchg ror ret push or inc xchg dec hlt or loopne mov test loopne xchg add push inc stc mov sbb jp push ljmp pop loop insb xchg test out xor xchg shrb mov sub xor sub add xor mov es push ret pop aad call jo push insb sub jge xor push xor or jbe push or cli int3 xchg insl clc push lds (bad) dec cwtl push into sarl jno icebp xlat mov sbb data16 sbb les xor pop adc push popa iret dec mov cmp cmc push xchg pushf adc out cmpb mov cmc clc jb test mov sub scas mov mov shll (bad) aam dec clc ret xchg scas cld add rcll cmp pusha adc test jecxz aas stos and inc loope push divb lret leave jl or jg decb int mov rclb mov sub aaa repnz jns xlat cmp inc xor dec lahf xchg or xchg aam mov inc inc sti cmp sti inc push mov int test mov jecxz test dec add sbb rcl cs test das push popf jns or inc in lret xchg mov aad fsubs and popf jnp pushf push adc fs pop adc ret clc repnz leave stos popa cltd xchg jecxz add cmpsl mov aad xor insl cmp (bad) movsl adc cmpsb insb int push mov mov cmp icebp jb push mov xor or pop mov stc pop push pop jno mov mov rcrl mov sbb into aaa leave dec (bad) lods sub dec xchg jmp xchg xchg ror leave (bad) ljmp or cmp repz and jmp xchg addr16 push inc inc inc pop in jp mov movsb cli jg aad aam data16 xchg ja out ja icebp out ds and push in pop add mov push sbb aaa mov fwait dec adc xchg lea (bad) mov fidivl xchg repnz xchg stos movsl outsl xor mov les pusha pop sbb loop (bad) and in xchg lea js outsl fmuls movsb xor push fistl jecxz sti pop pushf mov xchg loop inc and mov test pop dec test inc or lret dec mov mov lods inc iret (bad) push int jns inc popl jge sub arpl mov nop push (bad) cmp sbb cmp ss lret xor mov sbb notb add or data16 in divl pop sahf mov xchg stc inc sub divl jecxz or dec mov and rcl fs popf dec pop imul xchg imul sbb sbb (bad) divb pop bound pop pushf sti sahf sahf sarb js jl ret mov sub lds es lret inc lahf xor push lods imul sbb arpl jae mov push jle pushf xchg xchg scas dec movsl sub popa call lret fdivrs les lods pop mov sahf mov and cmp and sbb pop add jne sbb movsl jl inc std push outsb nop dec mov (bad) repnz sub popf pop xchg mov imul jo,pt bound dec push xor pop xchg mov mov (bad) mov pop std lock mov sub or push add aam icebp and add xor mov iret push test xchg sarl push dec mov push sti push jno adc add xchg int mov insb xchg lret insb int3 xor iret in cwtl xlat push scas adc je dec and (bad) in jne inc mov das bound lock pop adc sub push mov test sbb (bad) in ss and js imul mov fwait dec and test pop cs sahf dec mov mov fadds dec fisubrl and (bad) xor inc mov mov or jmp inc (bad) jnp in push test js fistpll inc sub sub push xchg setp ds xchg rorb push std cmp push fwait jp test sbb addb into pusha pop addr16 fisttpll sub mov sti inc and push sbb sub int3 loopne jmp sahf cmp xchg fs andl (bad) and (bad) jg pop mov into cmp xchg out or add fwait jns push mov jl loope insl aas push push mov xorl inc pop xchg dec pop inc and mov inc and movsl dec imul push cmp and loop scas jbe rcll mov dec push mov lods xchg jo jmp xchg xchg int mov mov mov push mov fcomps jne mov into jl jmp jae mov shlb aad icebp pop mov jb mov sbb inc insl out inc fs pop xchg inc std iret push mov cltd and (bad) adc cmpsl mov je pop sti add push sub lret dec es mov mov mov xor pop aas ss in ret pop pop lea or pushl mov aad cs cmp xchg fidivr mov aam in add sbb mov insb add fimull insl dec lahf cs xchg stc pop push add stos xor mov mov xchg xlat outsl jno scas enter clc mov adc jae test xchg js jnp xchg das inc stos sub xor lds lock cmp (bad) dec and aaa and push inc imul xchg ljmp arpl mov mov std cli in call jo lcall loope ret sti push jo lret negl adc inc inc outsb imul outsb mov fwait adc popa gs mov aam pop or xor pushl mov shrb mov (bad) repz jg pusha dec mov sbb arpl jmp scas movsb inc fwait out or mov cmp es jge imul push and cwtl push cmp mov sub adc mov push lcall scas in imul xor pusha jne sub enter fadds fild push dec push stc sbb fadd sbb adc stos cmpsl repnz test ret scas (bad) jo sbb (bad) (bad) in ret ffree adc popa or mov pop mov (bad) mov gs scas and (bad) adc fisub sub in inc and les pop sbb mov push mov lea pop ds clc clc movsb adc fucomip insl adc ds js js enter addr16 xchg push xor sbb enter sbb xor subb mov lock mov sahf (bad) ja xchg pop add out sub mov frstor stc xor call xchg cltd adc mov and pop jns inc into push xchg lret (bad) xor popa dec sub adc fcmovnu xchg inc add xor push add or sub jno sbb addb dec data16 fwait push test push cs fstpl stc popf inc insl jnp out sbb into je mov dec cmp test or jle push insl mov xor loop ret mov setno pushf cmp xchg aad and cmc (bad) je popa dec xlat pop stc test roll adc in or mov outsl dec inc jae adc and jno xchg lahf int3 test and pop loope sbb or outsb cmpsl in add add insl std xor add stos inc cmp mov mov leave sub out das jp jae loop mov test fwait lds lock sbb xchg mov xchg das (bad) xchg aaa mov dec movsl stos popa ljmp sub xor daa xchg mov inc inc mov xchg jns mov in push dec push cmc inc ljmp gs lds aaa loop pop pop push test xchg push nop mov dec mov dec jl xchg mov orl lret ds dec or iret pop cmpsb movsl mov mov cwtl iret cli stc push test (bad) sub pop push mov xchg test in jle or ja jo pop aam cwtl testb cld pop popf mov popa add (bad) mov loopne daa lock push pusha push rcrb fsubrl jp lods xchg cmp mov lods nop enter jp in adc fisubr mov out jg and inc fistpll pop popl insb add out outsb daa in sub in mov push mov test mov in add aaa adc push arpl or lock lods pop dec dec cltd mov popa cmpsl and repz popf or push in cltd xchg mov ret cmpsb pop mov bound lea mov push sbb jl xchg (bad) lock pop ds ss movsl ret mov int3 push or jo cwtl cmc mov xor push push scas mull adc dec cs pusha lret lret fisttpll add dec dec cmp icebp mov (bad) and jns cltd (bad) sarl adc sub jle fs pop sub push addr16 add jecxz movsl or mov sti mov vmwrite jnp mov jg mov mov nop mulb mov stos xchg pop push dec sub movsl aad repz add add sub in gs add aaa rcll dec clc mov call out cmp sbbl int3 mov mov ret xchg mov xor paddq sub xchg jns int3 mov lea movsl jl and push inc in imul pusha repnz sub or divl xchg push mov std fisttp insb cmp out into cmc fbstp popa (bad) je stos in push lds jecxz mov pop cltd addl mov xor repnz lcall sub repz nop dec xor push and dec popf lods in jl in bound mov mov push test repz in xor std test fsubrl jnp add ds into dec mov mov mov xchg push cmp popf push pushf into cmc imul pop movsl cltd mov cmp mov mov into fucomp mov mov sub mov cli rcrb popf out adc dec cmp es insb aaa movsb sbb cmc sbb repnz mov cmpsb incb mov sbb shrb sbb xchg push iret mov jmp pushf arpl sbb negb add sbb jns xchg mov adc pop mov sbb and mov xor outsl dec hlt hlt xchg add pusha call je jnp jge out push mov jo insb loope xchg lods dec inc jns jmp add dec add pop test mov sbb pop aaa or mov pop mov adc xor fstpl xor push mov adcl out cmp pop outsb leave outsb mov ds insb add stc mov ss stos jno rclb (bad) push pushf je cmp mov in fistpll adc icebp test jae cmpl cmpsl shr ret dec fsubrl mov scas repz add jo mov mov les ds out add icebp (bad) mov jle movsl out pop and push fildl cmpsb rcrl push mov data16 loopne not cmp std into fmul test cmp lock nop xchg adc es (bad) jle and cmc fdivs imul jge jl enter sbb mov add adc mov pusha mov (bad) xchg arpl mov push xor jo pop das rcr mov mov mov fiaddl inc xchg xor jae inc out (bad) lret lret data16 xlat inc out add sbb and push inc out lock lods mov popa or cli test push or ja pop cli xchg out sahf cmpsl xchg jo mov outsb jb insb sub cld jg cmc add push and shrl movsl lock scas mov cld scas mov jg inc test jbe aam mull mov notl xchg push out fwait dec mov cmp ss fistpll jne (bad) lret xor xchg test inc pop cltd pop test add out hlt lret fs std in pop ss imul pop outsl leave add cmp ja mov push (bad) adc fs xor loope push icebp fldcw mov pop add (bad) cld outsb xor xchg sbb addr16 cmp je stc mov and inc lret nop test aam lods mov ds fucomip data16 mov xor adc fmuls inc xchg mov dec jnp int3 push je xor sbb inc xor test jno mov pop sti sti push push fcmovnu int3 inc and loope out adc and xchg aas mov mov (bad) adc sbb push (bad) das and out stos (bad) cmc (bad) or or ja ret int3 sub mov loop mov in xchg mov pusha arpl and enter push sbb enter inc add sub ret sbb (bad) mov xor aam lock popa jnp loop outsb xchg loopne stos dec push sbb (bad) fs sub mov dec add jle push jmp push or daa iret lds aad cmp pop movsl xchg mov mov jae movsb mov and sbb outsl mov (bad) push pop mov fildl arpl js dec pop xchg adc mov lods push nop js sbb scas push xor fbstp loope push cwtl mov jb clc in jno movsb xchg push pop mov movsb rorl mov scas std scas in adc push push or lock cmp push fidiv adc jo out pushf leave mov pop call scas aad scas add mov xchg dec jmp jnp repz outsb mov sahf jne jge inc sbb mov cmp int pop mov lret inc push adc sub jle dec xchg add dec pop and push add movsb adc repz repnz leave sub sti mov mov mov jbe and cmp popa pop jp (bad) jno xor xor scas enter into idiv mov lds jne push imul out cmp jbe cwtl xor inc mov scas nop das sahf add fstpl mov sbb (bad) lret movsl stc pop jno je and lret pop mov cmpsl ja dec adc push mov in jge inc push xorl loop ret mov ja mov adc lcall mov (bad) test or xchg sub mov jg scas xor pop pop fwait mov mov scas scas incl test fxtract dec addr16 cmpsl das push mov repz inc cmpsb pop dec jmp dec je push fiaddl aam mov xchg mov ret ficomp adc mov daa daa lods push or repnz pop dec sbb test loop fdivr std dec iret dec inc orb add clc or aam push lods call imul pop pop or les nop pop xor push or ja mov mov cltd dec test je sub jecxz jge bound icebp (bad) mov and xor in jns icebp add imul inc dec jb (bad) jbe (bad) pop insb lahf repnz sahf insb jb stos jecxz inc mov insl repz add int3 sahf sbb jno insl int3 scas xchg push stos jmp dec stos (bad) adc sahf clc insb and xor aad fxch std lds cmp jle mov xor jl (bad) sbb mov out inc adc and aaa jno,pn xor and mov ljmp jp sub xor jns out dec xor popf rclb jge jb es and call push mov push icebp aas dec rol popa and push cli sbb push add sub cmp test lcall sub add sahf sahf mov fdiv adc fs andl xchg cmpsb sub movsl lret lods and (bad) ja jae cld and xchg mov fwait inc mov mov inc xor (bad) sbb push mov or dec xor and pop out xor ds out lret shrb loop pop popa xor int3 jb jae jo cmp scas adc sahf ja and add inc cwtl bound xor sbb insb and mov leave mov cltd outsl sub int3 pop outsb (bad) jno je test cmp and pop jae ss iret jbe inc (bad) inc push mov mov hlt jp (bad) pop push (bad) movsl sbb cmp push pop xchg xchg outsb pop adc rorl cmc pop adc lret (bad) test xor lahf push lcall movsb pushf adc je movsl sub ret sarl imul into bound pop mov cwtl mov cmp (bad) or fdivs fnstenv fisttpl orb jge jno rorb xchg jecxz test ret lret mov outsl sti sub stos mov out cmc push shlb and out movlps (bad) (bad) addr16 cmp dec lret movsb neg fildll ffree notb mov daa mov mov sub iret xor pop (bad) out jb and out mov enter into loope inc mov lcall (bad) cli pop sub ja push jns jns or test js dec (bad) cmp outsb push xor jno int sbb sub imul pop add push ret push pop jns sub mov imul or mov movsl pushf and adc add jne arpl jecxz inc or and xor jbe rorl sub insl mov sbb dec inc or daa fsubp arpl mov pop and in xchg xchg jne and fwait stc orl (bad) enter inc sbb out mov jbe mov loope,pt sub xchg call addb stc add add mov ret inc mov jle cltd fs fistpl mov jb pop fwait sub xor jno aad and test sti jg das sbb lcall mov pop mov repz push loope mov scas out bound sub jb inc sub icebp fsub adc movsb iret das sets pop dec xor adc testb xor movsl mov pop test mov in test or pop shrl cmpl das outsl fdiv cmc fs shrl xchg mov mov pop ljmp push test adc insb lret fs xor in sahf xor inc cwtl int3 mov jmp lea add or clc mov aam pop xchg sbb ficompl inc insb rorb inc inc xor xor mov arpl lahf mov push (bad) push decb js pushf push adc jne and int or inc cltd test (bad) cmp arpl ja push cld fs xor lock xchg xor mov mov cmp mov jne xor or pop xchg sub mov cmc mov testl mov test mov (bad) stc add lods rcl mov scas leave and or inc lds push call subl dec daa fbld pop ret out mov push cld jecxz mov sbb aas imul add cmp outsb and push sub push imul fistl fldt clc xchg ror mov inc ljmp push mov mov inc out in fwait cmp stos ret or mov les scas mov int inc test ja xor std or mov es shl (bad) cmc aas push mov pop push cmp dec push mov int ffreep adc cmpl enter sar pusha repnz div xchg ret arpl (bad) cmp jo or fdivr dec decl inc in xor in pop sbb xor jbe andb (bad) or and xor testb testb shlb inc jo,pt dec ret and imul adc rolb std lds lcall out push sub out jne xchg pop mov roll in mov jbe enter ja jb and cltd pop sub aas sarl pop add stos jp mov arpl loope lret xor push or xor (bad) lcall mov push fs insl and pop out inc pusha pop aam nop sub sti mov out push and (bad) loope push scas (bad) rcrb imul jne enter addr16 and mov icebp or mov xchg sbb inc xchg sarb jl mov sbb in cs arpl cmp add shll cmpsb sar lds stc shrl xchg inc sub repz push mov xchg add pushf arpl push add or jo cmp insl and aam mov les shrb (bad) jo jle push sub inc xor pusha xlat sahf lea call mov mov jo push cmp mov dec jne mov adc nop fist adc rcr dec or mov jmp hlt push addr16 rorb not push movl pop xchg test daa sub jle inc das jmp jle push negb les fnstcw add or mov pop mov outsl mov add mov mov dec sbb rcll in shl pop and lret xchg out rcll xchg popf cmp aas jle dec jbe scas (bad) inc xor sbb lock je xchg cmp rcl lahf mov ss movq (bad) pusha dec cmp out pop inc ja mov (bad) (bad) cmp sbb mul dec lahf in xor and cltd call jo stc sbb inc iret mov xlat gs dec xor or add fsubl clc std or inc pop pop jo sarl mov outsl fdivr rcrl cmp movsl mov pop cmp cmpsb or mov inc mov repnz jl imul inc and imul test mov xchg aas jle jecxz movsb mov out mov dec push xor mov dec xchg add jle int rcrl cmp in roll cmpb fwait push jne adc nop inc dec and addr16 xor inc pop lahf out dec jnp mov xor scas decl cmp andb mov inc jo fsts mov (bad) popf adc test movsb xchg sbb xor mov jle stc xor sbb xchg inc dec push fldl mov je addr16 jp mov pop jl daa sub push stc in cs sub cmp or por mov cmp insl enter test (bad) xor sbb movsl add pop mov sbb or xchg jg and sub sbb aam jnp dec adc ss aad inc pop push push std arpl mov loopne pop mov pop popa in push adc popa xchg mov sbb addl js or cmp mov clc xor in mov dec out mov dec mov iret mov loope jl leave pushf pop mov and outsb inc push loopne xchg cld inc xchg adc dec aad mov movsb jp fmul sbb test mov xchg leave aam orl testl dec xchg fsubr pushl lahf jl sub cmc jecxz xor and and dec xchg inc in lret ret xor push pop dec mov push mul test jnp repz rcrb and xchg sbb mov and fldcw punpcklbw push add xchg scas inc adc inc adc sbb aas repz adc dec pop mov (bad) out in and mov cld mov jge pushf mov or push or fs in enter in ret mov call aam mov sti sub mov pop add dec mov or scas push push sub movsl hlt loopne popa mov and lods inc add xchg xor pop addb xor sbb or sbb ret jns scas inc clc and addr16 lret addl in enter mov pop ret mov inc out dec iret ljmp cmc cmp gs xor sub inc inc (bad) xor sub outsb frstor sbb (bad) add jnp push pop subb sbb pop (bad) (bad) push out adc in dec dec xchg movsl clc (bad) imulb loop adc mov (bad) mov jge inc mov sbb or mov xchg or daa arpl cmp inc out push movl jmp sub lcall cmp cmp int3 mov gs movsb push popf mov xchg sti sbb fcom add pop add pop cmp in aam push outsb sbb xchg pop mov (bad) in rolb xchg adc mov add inc addr16 sub test scas pop sbb scas sub popl adc xchg enter push pushf dec push data16 adc push sbb out sarl sub adc adc mov stos dec fucomip push jnp out cwtl mov ds out push xchg popa add fisubl xchg or stc inc fwait (bad) cmp mov (bad) mov push sbb mov ja xchg shll and out movsl mov or fisubl or in dec xor repz inc gs or fstpl dec jns jmp inc hlt or iret out inc jecxz mov outsb or adc pop ret daa (bad) popa xchg dec movsb push lret ret sub xorl mov icebp jns in xchg mov xchg rorb or ret fwait in hlt das xor mov pop into push inc (bad) dec xchg outsb add sbb psubw pop and sbb xor call lods (bad) lea add sahf (bad) or jnp adc (bad) sub inc sub xchg jg pop cmp inc pop or cmp sub sbb enter outsb xchg push push lahf ljmp popa (bad) mov add xchg daa and scas push stos int3 enter aaa aam imul and setbe add in pop push fst repz add divl test ret movsl ss mov xchg (bad) mov test cmpsb or pusha pop push mov imul incl jo dec xchg movsl fldcw mov fistp pavgb lock pushf pop or mov bound fs jb or outsl nop in push mov lcall jbe xor bound (bad) data16 cld or enter and xchg inc sbb dec leave fbld mov pop (bad) jnp out hlt addl add inc fdivrl das icebp sub add jmp cmpsl and in or (bad) mov dec xchg imull loopne outsb lret movsl in stc test adc add leave dec dec sbb mov add jno (bad) data16 shll mov std push xor es jae ret mov bound (bad) leave xor adc and in ja add nop lahf daa (bad) mov das test iret lahf cmpsb ja cmp iret push movsb leave xchg and inc loopne ss lea lahf jne gs push cmp add stc and xor push nop (bad) lahf test lock in hlt stc cld cmp ss clc cmp push int cs out push and xchg xor dec jb jp sbb push lret sbb fsubr cmc inc xchg lcall popa outsb call xorl pop pop ds insl xorb inc mov and ja jle mov decb cmpsl adc xor push loop push adc jge in mov xchg inc xchg push push out push stos and cltd dec xchg mov fsts in xchg stos mov dec (bad) mov xchg push aas es mov loop jle jo adc mov repnz imul dec loop call mov jb or xor pop and and (bad) movb test xor and xchg jg pop add and or hlt sub loop push push or lock push fldcw dec in test or cmp adc outsl cmp add loop jg mov sarl ds divb ja and setbe inc xchg cld mov repz push test xchg cld cs pop add imul ficoml pop dec jp popf movsb stc (bad) iret loope std ret loop dec jns lds stos sbb adc fist sar fsubp pusha mov outsb lea dec pop out cmp lea orl lods in fldt ja icebp cmp pop test mov ret scas xor adc dec xor loopne movsl inc enter adc (bad) addr16 inc fisttp pusha jae push cld shlb fwait push scas cmp jo imul mov movsb clc cmp cmp mov adc inc mov and push or or adc mov scas pop xchg negb or jae adc jp or (bad) jnp dec gs cmpl out aam cmp inc clc or sarl cmpsb mov push arpl jbe,pt adc int3 movl xor push ds inc iret ret xor fucomi dec aas add adc subl (bad) inc mov push cmp cmp sub cmpsb ss sbb scas mov mov adc xchg xchg jns and jmp ret and fs mov fimul in inc (bad) in xor daa arpl pushf stos jno mov pop pop and add ljmp sbb out sub xor mov push mov or sub pop dec sti xchg ss cld xchg pop cmpsl jno loope and aad stos or xacquire pushf xor fdivr xchg movsl imul fs dec cmp sbb sbb mov movsb add fcomps xor idivl mov rcr loopne sahf jae xchg test nop lock je mov int pop adc jns andb push inc or inc cmc xchg and sub repz and jl push jecxz pop aam leave in fistp cmp jae rcrb sub mov mov popf mov insl pop out and in or (bad) aas sub enter push cwtl mov pop (bad) and add mov (bad) pushl xchg in dec xlat adc xor cmpsl xchg ljmp outsb add mov and pop lods shlb inc test test mov sti xchg sub andl and mov clc je pusha outsl fadds shr aaa xchg jp je inc test mov sub push movsb cwtl into xchg rolb sbb sub xor jecxz sbb jne or jns fidiv push xlat jnp sbbl mov push (bad) or scas xchg add push test fcomp mov xchg repz inc insl xchg divl lahf ss push pusha cmpsl sbb cmc xlat iret (bad) mov popa mov xchg arpl mov in insb rolb dec ljmp mov mov pop jne xchg hlt xchg stc cmpsb orb xor (bad) cmpsl das xchg adc (bad) (bad) mov movsl aam ja mov mov push cmp iret je stos push or adc inc push add mov je mov rolb aad dec lcall pusha dec adc mov pushf mov xor rcrl push add (bad) cmc sbb and jmp cmc loope lret or in jmp js bnd (bad) cli pop call jb xor gs xor cmp test sbb fs fist out fildl stos iret pushf xchg or mov ja jbe hlt in cmp jno xlat inc xchg sub outsb pop mov iret call xorl loope fbstp cmp jb inc in xor push push stc push dec loopne sub mov (bad) xchg cld outsl ss test inc sti ror sub cmp aaa les (bad) lcall aas sbb push push daa mov inc mov in fs movsl fisubr pop imul pop sbb mov push sahf aas pop add add inc add mov push lcall popa and push pop (bad) ja sub (bad) sbb mov das inc fisub and mov aas rcrb jnp xor sub clc xor stos or pop in push and or dec std sub jnp pop xlat test pop pop in fildll adc xchg ror or clc jecxz cmp push adc test jbe outsl inc push movsb or ret outsl ja mov std xorl std dec nop dec pop or (bad) jno stos movsb jbe icebp pop mov add dec lcall lds mov mov cmpsb push and or gs push cmpsl xorl test cmp lahf negb jae adc jns adc mov dec mov scas push sbb cmp dec call adc addr16 in mov push inc inc mov pusha nop push pop aas popa pop data16 je call and int int xchg mov popf push push in cmp xor xchg mov push cmp mov cmp fnstcw imul loop out or (bad) add xchg jae xor mov loop fnsave fadds add aas inc sbb std add sub enter pop lcall aas cmpb dec ds mov and pushf push push mov mov inc push testl inc outsl mov xchg xchg add mov ljmp fwait pushf adc ret outsb push xchg ljmp mov out mov dec (bad) adc mov add ljmp adc and inc mov cltd sbb setl (bad) ss lcall cmp (bad) in xchg inc pop sub or test mov scas lds int outsb fldt mov out rcrb jge mov cmp icebp loopne loop or test push mov jl popf sbb lret and lds cmpsb rcll pusha push shlb imul ss inc shr mov das jle push mov std mov (bad) outsl (bad) mov mov cltd shrb xor cmp (bad) fnstenv push std push fs cld (bad) nop mov je std xor enter test adc cmp dec lcall pushf jge lea cld inc mov xor pusha rol sbb jns xchg js (bad) repnz mov pop xchg fs out dec rorb adc sbb xchg ret in (bad) mov and (bad) ss mov repz fwait idivb push fstps xchg inc mov ret and mov sub push adc pushf push cmc stos icebp jns adc pop or orl stos andl pusha cmp mov repnz mov add xchg push scas adc iret mov rcl jnp jg fwait add dec and subb imul (bad) pop inc cmc inc daa pop fbld into jl mov pop rcr hlt xor fnstsw and jle dec in sub jbe int3 insl fidiv dec insb fnop pushf fistpl pusha jb inc jae sbb cmp xlat (bad) push int3 inc imul std pop and inc imul rol lods divb adc dec popf negl jbe aas (bad) stos mov sbb aad sarl sarl outsl mov in cli xchg jmp jp adc xchg rcr adc adc xchg (bad) cmp mov xchg cs xor or add sub enter pop adc dec and popf add push mov mov icebp jb fstpt lret add add lods hlt jmp out add or sti hlt sub xchg aas pop int3 fdiv adc cwtl sub dec dec in (bad) mov and and push mov fimul loope ret push repz pop icebp mov sbb xor jmp lods sti test ljmp pop mov sub inc cmp stos mov outsb jbe sbb jne andl aad pop nop adc repz mov mov dec fimul cltd icebp sbb sbb sbb je data16 lods push into popf fldenv (bad) cs subps int mov sbb jae xor push sbb sahf cmpsl in push inc into aaa adc jg push lods mov mov inc mov or push dec pop fiadd pop inc mov les js add pop jg aas xor mov icebp outsl out (bad) and dec xor adc xchg jae mov sub (bad) loope fsubl add iret mov loopne bound sub sub inc push js movsl push dec lret arpl jg cmpsl sbb add jbe mov (bad) push ss (bad) pop js mov push fmuls xor out pop xor (bad) scas jcxz movsl or mov ss (bad) sub jmp cmp lcall cmp aas lds push popf bound dec add clc out xor pop (bad) clc imul xchg xor stos adc rorb in cmp add adc xchg enter mov push aas xchg adc lret pop cmp cmp js call es out push hlt lods in cmpsl ljmp in adc rclb insb jmp jmp popa mov fldcw xor push aaa roll xlat pop push hlt push lods xorl xchg sub push pushf mov stos pop pusha xchg fsubrl cli icebp jo mov fstl cld cltd cmp sub in mov out pop in cld inc jb push push xor add loopne pusha addr16 scas loopne aam jno cld cmp jecxz jo mov pop or jp out mov pop jecxz fs push fsubp fldt cmpsl sbb pop cli mov dec mov fs pop adc jmp cmp lods pop and jo nop sbb mov push mov or ljmp aam fbstp mov negl sbb adc xor out test xor sub pop das test adc jno das xlat lcall dec sbb stos mov arpl into sub inc cmc inc adc dec push or xor jbe pop (bad) pop dec clc push fisubl mov repz enter das xchg dec mov arpl pop loope push mov int and shrb push addr16 ret add rcl sub or jae cs nop pop icebp mov daa or (bad) xor dec push jp mov insb mov lds jno ja ja int3 push dec loope push cwtl xchg sub push jmp cmp sub and jmp adc pop add inc (bad) sub cmp (bad) sarb lea imul mov loopew mov rol pop xlat sub ljmp (bad) sbb xor scas cwtl das and stos movsb outsl jne out jb or fidiv mov loopne stos lods or outsl jge dec mov sub test test sbb pusha or jbe cmpsb leave mov in adc push daa (bad) inc push sub rorl test cld subb add and or xchg and jb inc idiv mov add mov xor (bad) pushl or dec mov cld jb jae fimul push lret jbe popf stc lods iret adc adc pop ficom mov stos fidivl dec jecxz jne out imul jle in mov rclb mov repnz dec mov scas mov imul adc add or sbb push js aaa push cltd inc (bad) sub push jnp push mov cmp pop add and int3 and inc or and in sbb jge sarb call lods sub addb js or sub cmpsl mov sti dec fnstcw hlt test inc (bad) xchg addr16 je xchg fimul lods scas sbb fcomps test dec xor jo push lret movsl pop dec (bad) notb mov adc enter pop je cmp add jne mov in jle ljmp xor jle sub out in lods xchg add push xchg add mov stos clc xor jecxz movsb jbe pop mov daa sub rcrl push leave (bad) inc inc xchg mov cmp mov push pop add cltd adc jp mov dec icebp pop xor nop mov lret mov inc pop popf mov fild call pushf (bad) ljmp ljmp xor fs jb xor sahf mov ss jne test insl sahf movb inc addr16 add push pop push es inc sub xchg jne cmpsb aad pop scas int3 repz jae add jge add or adc inc xchg aas fisubl dec lret mov adc addl leave push lahf imul jl fwait push sti sbb gs ds loopne imul xchg inc dec mov (bad) data16 fisubl dec lahf mov adc ror adc (bad) sub push push in jbe lahf push lea nop pop in fadds inc mov loope sbb ds leave repnz jl,pt in and lret mov lods sbb lea int3 jo lea sub and ret cmpsl inc cmpsb addr16 test in enter mov jne icebp sub inc mov popa xor pushf lods loop ss jl lods push push popf mov test xor cmp gs out cltd rorb arpl aad xchg andl cmp fsubrl sbb (bad) jno dec xor sbb mov test daa cmp je mov xor mov mov test pusha push lahf sub push sar ds js int cmpsl cmp cs sub jbe cmp pop and lahf mov xchg dec pop aas push rcll dec and ja loopne jns add mov ret adc sub add jnp roll pop cmpsl sub std jmp aas (bad) rolb mov jp insl popa daa stos jl mov lods ja imul data16 xchg xchg push stc ja stos cmc push rcl fcmovne push sbb fcmovbe loop,pt xchg lret movsl in pop pop mov mov and cld dec in jp out pop cmp push add pusha mov jp mov std dec dec movb loop add stos lods bound lods dec or pop xor dec loop mov fcomp cwtl daa mov and scas adc xchg lret sbb lods xor mov mov cltd xor and sub or ret push mov push psadbw loopne arpl ds mov call sbb or jae fdivl inc push mov dec ss scas and popa out fidivrl or std dec lods fcom out xor or cmp cmp in push jno adc sbb pusha orl inc fistpl fist out lods sbb notl mov loopne test ror and push push je ret push pop out inc (bad) lea pop sbb pusha jnp sbb addr16 add in fsts mov in pop in push es ljmp popa or mov vmaxps js inc cmpsl sub and xchg mov stos int3 mov sub xchg sbb dec inc dec lea ljmp cmp leave xchg mov fisubl test xchg mov test jecxz lods dec test mov int3 mov sbb mov ret push in push bound dec dec (bad) testl aas xor sub fstps pop nop dec cmp jne ja mov ret jns mov pop mov and dec icebp stos rorl sahf jp xchg scas call loop push test in jo imul push aad bound lods scas xchg cmc popf pop sbb xchg inc push mov fdivrl es lds xchg cmpsl xchg lret xor lock jle fmuls pop pop data16 inc scas mov or mov add jae das sub pop mov pushf jecxz loopne pop rcrb push cmpsl stos dec mov mov pop pop xor adc xor dec xor addr16 and cmc inc jecxz mov clc inc mov mov xor cmpl dec rcl mov bound jns (bad) or rcr test push mov jns test xlat mov lret and mov pushf xchg sbb jg pushf pusha loop cmpsb iret ss (bad) xor push mov dec sti add cs fwait mov or push rorb loopne jmp insl dec jnp xor fidivrl lods popa das sbb push push pop loopne aad leave push mov fsubrl cld scas push xlat hlt inc out lods enter mov jae jge das lea cs bound and inc movsl (bad) in sub cld movsb movsb sub enter jl (bad) es fs lods test adc arpl pop push stos and xchg xor popa aam pop les jg out jb mov fldenv lds mov movsb jecxz push (bad) in pop sbb in repnz push cmpl push or (bad) cmp xchg into addr16 int3 stos cmpsb sarl pop or inc int push mov and inc inc sbb sbb loopne mov out mov mov mov dec xchg sbb add call cmp out push addr16 cmc sbb aad hlt sbb sarl adc scas out js pop cmc lcall jne sbb push mov xlat rcll pop inc stos push xchg (bad) jecxz (bad) in pop pop xlat notb shll cltd aas (bad) sub aad enter inc mov and sub add push std lahf inc lahf mov sbb loope pushf push mov out test mov lret jae ret scas xor insl inc loope and outsl into cmpsl lcall pop pop xlat mov mov loope jb sbb fwait inc cltd dec shll les mov fwait pop enter (bad) jne mov lret dec pop sub arpl data16 stc sub cmp and test out mov stos add aad add sub push sbb outsl and fildll mov cmpsl stos adc xor imul imulb inc iret inc ret inc insl sbb stc daa or mov lock lcall je cli mov jg push jb leave adc adc loopne loopne outsl pop outsl push rol pop or or fild or and mov sarb int3 inc arpl sahf xor aaa adc pop cmpsb (bad) aad xor jge xor inc test push cwtl ret jg ja int3 dec push clc mov xchg add jbe cmp and stc lods push push cld scas inc fmuls stos cltd add xchg cmp cmp repz inc adc jae sub enter movsl jbe inc cmpsl scas jbe inc fidivl sbb rcr jno mov pop popf scas or jl lahf test dec jns cmpl popf pop pop loope inc push iret and jl test cmpsb sbb stc out sbb adcl and mov push clc push test mov pop mov decl test cmp xchg cld in sar mov mov (bad) sti je ret push rcrb mov mov xchg inc adc ret push inc sbb add (bad) lds cmpsl adc (bad) xor pop test pop into inc or and scas ljmp pop out inc (bad) adc loope fisubr mov mov add and pop fwait mov mov inc jp xchg stos inc nop or add sbb roll data16 rolb addr16 xchg dec pop xorb jp push out aam pop xlat pusha test jg xchg outsb and dec mov sub adcl xor aam movsl pop cmpsb ljmp testl cmp pop repnz and testl jbe pop xchg repz lcall push sarl pop mov lock xchg dec sbb xchg stos out insl in ret es add pop fsts daa mov sub fldenv ret test or and push mov xchg sub out xchg cs daa scas sub jae jle inc fstpt ret adc aaa and sbb pop test aas jecxz mov imul jo rcrl adc cmc stos aaa jne and jb pushf stos cmpsb ret mov jno in fs adc fadds push cmp push jl mulb cmp fildll (bad) mov inc or js sarb aaa adc fdivp mov dec test jge cmpsb adc lods test xchg lea xor mov inc call pushf jo cli mov xor imulb add roll decl push pushf mov inc jmp sub cmp imul in adcb sbbb adc dec imul push (bad) iret ljmp imul sbb and getsec mov lods adc shrl mov inc lds (bad) mov xchg jmp xchg leave mov jp add push js scas orb pop (bad) sti mov or std sub (bad) push cld mov mov cmpsb lret iret dec xlat test loopne js mov mov iret ljmp or lret or in push loope cmp cli or scas adc push ret es mov mov sahf (bad) ja test sub inc mov fwait mov or je inc les sbb or sahf cmpsb mov (bad) jge push dec mov rcl jbe arpl rcll add repz pop pop push push imulb mov in fwait mov ret mov xchg lret mov adc or sub test push call and or sub imul cld mov shr adc sbb (bad) xchg push std out mov pop int3 inc popa addr16 adc mov and loope xor loope jno popl arpl jl adc cld dec in adc rcll out or out lahf and mov pop out cmp xlat aaa movsl lret insl pop cld lods ja dec test xorl dec xchg (bad) and addb out cwtl mov adc aam xor into imul dec cwtl sbb mov pop jb dec mov push ljmp pop push sarb pop mov inc jecxz push movsl sbb mov add adc sub xchg (bad) mov mov lahf xchg mov xchg mov std lods shrl repz iret movsb in pop in popf test sub xor movsl mov pop pop xchg dec fs push in popf cmp cmp test scas cld and (bad) dec pop adc data16 dec ja pop push test xchg dec idivb sbb fdivrl lret adc fnstcw lock gs je adc xchg inc out add jp lock lret adc aas xchg lods repz divb (bad) loope push cmp out or cwtl ret out jae pop lea lock xor dec out mov push rolb imul iret nop mov fdivrl daa lds and mov sub jno jmp fs test push mov out pop aad sahf mov jmp mov pop jo push xor mov push nop test je xchg mov and xchg clc inc fcompl cmpsb out push adcl out cmp lahf sti mov mov cmp mov adc cvtdq2ps or (bad) mov push push ret push xor sbb pop bsf push xor push lods add ljmp test pushf add cltd add xorl and int3 cmp push jnp fdivs or push or sbb repz add jg imul and (bad) ja pop pushf xchg lods ss mov fsubrl arpl je iret clc sbb iret (bad) scas std xor clc scas and insl mov out xchg adc pop cmp aaa mov iret push xor sub mov iret dec inc stc pusha stos and imul aaa jp inc xor popf cmpsl mov or pusha mov sbb xor and aaa imul push jge gs or into push sbb sbb push xchg imul or test cmp xchg and and popf int push bound stos push push scas jns subl cmp inc pop xor dec and mov push jecxz daa jg cmp ds push lcall aas jmp sub or aaa inc lds outsb popa rolb xchg xor ret bound mov syscall sbb jmp test xor scas adc push ja mov mov loope scas sub stos adc movsbl inc lods dec pop test pushf sti add aas cmp mov xor lods adc push push and lods mov aas add movsl sub xchg and idivb ds in shr test inc and push adc inc push icebp sbbb sub pop push popf rcl jnp (bad) cld add scas (bad) and sbb call insb inc ret addl xchg mov iret lahf stc cmp out lret imul inc in sbb push or leave movsl not pop fcoml mov mov repnz pop jge (bad) jae mov jl mov decl dec add cmc pusha or sub adc and ret lcall movsb pop sub clc add in pop nop xor pop and (bad) movsb pop out push push inc pop fcompl xor xlat pop int xchg jbe cmp dec pop jmp aam xchg push mov movl push mov xor push aaa xchg and pop sbb or adc cmpsb xchg adc test imul and (bad) ss iret jae or shlb push push out into mov ret and or incl cmp rcrb jmp das movsb (bad) xor fwait pop cmpsl lock add xor adc xor mov outsl or dec cmp leave and pushf mov pop xchg js test hlt lods hlt sbb adc insb ret xchg roll dec cmp aaa mov in fcompl cmp jo mov das jno fcmovbe (bad) fnsave mov mov mov arpl dec cmp movsl pop xor (bad) mov adc inc and cmpsl daa loopne pop ror lret imul add sbb mov pop add xchg outsl js mov sbb inc fwait test ljmp jmp es jb pop (bad) rcll dec pop fcmovu adc das in push xchg adc jae (bad) jg fbld xor fcmovnu pop push test push lret xor int dec iret icebp push popf mov sub or cmp and jns aas mov cmc ror adc in sbb int enter mov mov lds xchg add mov mov jns out sbb insl jo loop jle sbb stos inc fnsetpm(287 inc xlat imul or fild xchg and pop pop sub inc je add or lds test adc and jl out outsb add push mov mov clc cmp (bad) mov sub inc in cs arpl lods inc dec fsubr xchg sbb push adc inc push mov in ljmp xchg dec in pushf out scas adc mov and lret jb ret xor mov out out sub mov inc xchg aad scas lahf les movsb push int adc imul repnz push jge cwtl add pushf imul xor cwtl pop push inc shr aad or pushf jnp lcall stos test andl add pop inc jle call push imul cli dec push outsl dec xor scas call xchg les sbb stos aas out cmc popa decb ss mov pop add mov fwait insb xor mov adc inc and shrb add mov rcll mov dec jmp pop pop mov mov sub push and enter jne nop add js or bound adc or adc inc movsl adc scas mov test lock add fcmovbe subb test or push aaa je popf ret push cmp data16 lock push in clc push les ret dec cmp and repnz fwait mov inc nop test add xchg jnp ret cmp xchg iret into jae sub cmp sub mov and int3 loop inc in pushf mov sbb out cmp lds push popa sbb lret or out mov cli dec inc rcr rorl mov jbe push lea test dec or movsl cmp xchg inc call pop fs gs push xor dec mov js mov stos xchg cmp adc (bad) outsl lcall loopne inc mov sub cmpsl and cmpsb xchg mov das daa out pop gs xor mov movsb sbb cmp jo or insl dec into test dec and hlt xlat addr16 negb test push shl std xor loope inc pop daa insl out enter scas test (bad) aam mov sbb aad imul pop insl jle sbb clc pop pop sub pushf lret push dec cmpb lahf (bad) mov aad jecxz (bad) aaa lock pop mov dec andl push daa push jnp fldcw push gs loop imul andb mov mov loopne ret (bad) data16 in xchg mov fidivl mov je adc cld adc add sub leave iret ffreep scas push sub and scas scas incl leave ljmp mov jae in nop mov push pop nop and add sub push nop mov mov fisubr cmp jnp mov dec ret lock or addr16 aam sbb xor (bad) insb call xchg mov mov lds xor imul cmp pop popa loopne bound (bad) mov jp mov test mov test fsubrs imul cmp std das test frstor ss loop mov jo stos mov test ds mov xchg push add mov jbe sbb adc jae xlat outsl fwait dec fist inc mov pop xor push loop adc jno push (bad) int3 cli (bad) push jmp sub out or push movsb sahf pushf push and xor sbb mov cmc loop dec (bad) mov call pop jo pushf sub sbb scas jo jns rep imul xchg xlat test daa cli sahf cld mov push outsl test xchg pop pop (bad) in sbb nop lcall push jae sub push cmp xor loop fdivl lahf lock fcmovnbe movb clc jle jb fadds sarl adc xor shll inc fmuls jle loop sbb mov mov pop pop pop lret (bad) dec test movb push push outsb pop fwait bound or xchg lret test jge imul scas dec into aad into dec mov mov dec test jbe add or lahf mov clc jo pusha scas sub test adc jo in mov cmpsb rorb cltd xchg xchg and push (bad) or pop leave dec (bad) int3 int3 pop inc add into fadds push adc mov add jecxz or push dec xchg sub cmp xabort push in sub sub imul imul inc mov cmpsb mov or xor popf out bound pop jbe mov (bad) (bad) mov mov xchg cltd out int3 push dec dec test mov xor (bad) cltd mov sbb pop out scas mov dec sub push in jle inc fldt add pop pop sub add icebp or cmp mov addb jae imul (bad) out scas (bad) mov xchg dec repz je jns out ret clc test data16 adc or adc flds add (bad) and cmp jecxz iret stos pop cmp out je or push cmpsl sub std ret adc push cmp jo in fistl mov scas add fs inc xchg fsubl and ret push sbb jb mov pop dec sbb push call sbb xor mov rorl mov cmp mov adc pushf cs add push dec and inc call and inc cltd loope add sbb cmp cs xchg test aaa daa mov int3 push cmp and cld fldcw adc dec xor inc push pop imul xor sbb mov dec hlt jecxz inc mov adc pop lret pop fistpl mov or or icebp sub push xor test mov dec pop mov popa lret pusha inc cmc test mov or pop xor fcoml (bad) cmp sbb push stos daa (bad) mov adc mov jnp loop jbe ficomp test mov adc push xchg pushf pop xchg mov push cli pop cltd sti cmp cmp cmpsb incl mov xchg mov push fnstcw loope,pt je test inc mov (bad) test shlb xchg int jle jns ja inc dec (bad) mov adc adc push ja cmp jno xor push fiadd clc push or lret pushf test cmp pop pop aad outsl rcl jnp jbe icebp cltd lret sub imul adc imul lcall out inc mov mov aad xor and xchg push sbb cwtl enter mov das and imul jl mov pushf jmp dec rcll and xchg sub jge ja and add mov data16 ficompl sub out adc insl neg xchg (bad) loopne push lea push into scas xor mov xchg mov lahf jle jnp mov les jg aas sub xchg xorl fnstenv jp arpl test adc test xchg hlt cld jg xchg das movsb std mov int3 popa adc jne test sub add sub sbb stos (bad) cmp mov mov add dec mov jns pop mov mov push lret xchg lods mov cmp mov and pop js repz rcrl sahf jg (bad) out xor stos xchg pop or (bad) movsb loope pop les cmc adc and (bad) (bad) scas xchg sbb pusha sub mov mov mov inc or mov mov sub xchg into jecxz cmp out cltd lods pop dec fxtract mov inc jb sbb xchg pop outsl xchg fs xchg push mov mov js rorb mov pop (bad) or mov fisttpl scas mov shlb push iret (bad) sar loop lahf pop pop rorb cmp adc jbe aaa mov (bad) frstor imul lahf sbb out jb mov mov into ja ljmp fstl mov test xchg mov scas lahf mov sahf icebp mov mov cmp push dec pop sub mov gs jns or xchg adc lea rcl jecxz,pn mov inc jae mov jl pop (bad) xor or sub adc adc addr16 and sub pop outsl in add fcompl push je xchg pushf dec rcrl (bad) out imul add mov jns aam mov pop jg mov pop imul pop add ss mov fldcw pop or arpl (bad) loopne (bad) out push mov aas call out clc and lahf in cmp push jp insb jno enter or cmp dec mov std dec add ljmp data16 push mov sub test mov cmovne xor adcb adc push xor or push cltd js es idiv and cmp xlat fcmovbe jle (bad) jmp xchg lcall ja in cli mov push adc jp clc mov inc jae scas scas outsl push push dec sub and pop cs sub enter mov xor (bad) cli lock ret cwtl aad or dec push icebp stc xor fldt mov cmp or pop imul mov repz or mov call lock in jmp jecxz add pop rorl in stos stos loope sub insl or out into scas test mov adc ljmp lcall imulb inc lock cmp jg iret sbb dec addr16 cwtl mov or cli sub inc dec nop rorb jge push mov (bad) jmp or mov sub das lods bnd sub and cmp lret pusha cmp inc insl add dec inc mov or xor jno arpl xlat cld dec lret adc xor std mov and dec mov and fwait pop std jo add adc mov xor cmpsl lock iret loopne inc lahf lock cltd jmp popf xor jbe add (bad) dec cmp outsb cmp pushf add rcl jbe pop cmp push jo sti (bad) jno out loop push mov (bad) enter dec inc cmpsb aas enter sub aam cmp or cmpsl cmp ret inc push ret mulb xchg push inc dec rcrb mov nop mov jnp (bad) nop or int3 (bad) add mov pop addr16 sub xor scas add xchg or xchg fmulp pop sahf mov mov mov ljmp arpl ja cmp das push (bad) cmp dec xchg movsl and stos jno sbb and adc push (bad) push pop (bad) dec add fiaddl xlat adc xor push mov fstps and dec mov lret iret mov or inc repz sub lret mov out stc stos or sbb rorl inc cli lcall fmulp inc sub or popf mov das nop push scas mov cmp ret jmp enter jp or push (bad) push in sarl cli fiadd sub mov cld bound dec add data16 pop dec jae jmp iret jg clc xchg js and inc mov arpl sarb dec xchg or je fiadd or jae xchg push pop ja lods or (bad) (bad) and cmpsl aas inc dec popa cmpsb cmp fwait pop iret mov mov or les imul xchg xor mov pop sub inc pop push into and (bad) pop xchg (bad) sub dec std and pop dec test add dec and pop fiadd xchg scas pop cmpsb xchg adcl inc fs fmull mov adc or mov and aaa cmc faddl arpl cli and xchg add and clc pushf popf adc out roll jae xchg decl iret cld mov cltd or fnstcw into mov loope and dec or lret mov inc inc ss sti and imul sub iret xchg pop lock push mov pop jno ret loopne xor insb clc call xor icebp adc mov add pop xor xchg stos pop xor push stc ss mov (bad) sbb adc (bad) mov test lods stos cld sub ss lds mov xchg cmp jne int3 inc xor ficoml ret aad and nop cmp add test push (bad) stc enter pop sarl jmp enter fstpl and mov ljmp aam in xchg (bad) mov icebp cld outsb pop aas bound pushf fwait lds fist pcmpgtb and pop jbe loopne xchg rcll cs stos movsb sub pop fcmovne jb mov (bad) repnz frstor mov fcmovb stos insl sbb sub bound and push pop ror lds ffree mulb movsl int3 mov int3 pop cmp movsb pop lret addr16 flds iret fisubrl xchg jg cli iret insl push pop scas mov nop scas stc out repnz sub pushf xchg push mov mov clc callw push xor xor (bad) movsb std in je add dec ss outsb inc jne nop mov push test xor adc jmp sub and sub mov decb sub rcrb pop call test ret jo clc js pop into nop xchg sub add mov fidivr movsl ds mov fidivl xchg rorl scas int inc xchg icebp fdivrs cmp es cmpl in daa or stos cwtl pop das dec setle test mov fildll or add repz ret aas xor mov jno std in xchg jo loope fldcw lods sbb fscale cmc repnz movl mov jne (bad) aaa dec fldenv cmpsl xlat mov mov js jl scas xlat popa mov mov gs inc xor faddl jne pop or jno sbb and pop fbld or in adc jge in mov scas mov ret sbbl fistpl movsb (bad) insb inc pop push test sahf mov cmp out sub jmp cmp sbb cld out lret push adc call jbe lea mov inc ljmp pop std call and pop lock push fcoml pusha ret jmp jge jbe mulb int stos mov pop mov cmpsb ret sbb mov dec mul fst fbld ds (bad) idivb dec jb dec inc (bad) jne fs xchg mov sarb mov mov out out inc es ret dec negb add adc inc push push ljmp or jne (bad) in mov test push cmp sarl es outsb out push or ljmp repz mov mov push loope xchg (bad) iret imul sub leave fistpll jge xor scas dec lret mov sarl aas (bad) lock mov add lods in cmp minps pop push daa shrl push sub sti jmp xor sbb cmp fwait scas lods lds or add sub out imul dec pop sub dec arpl scas cmp fcoms (bad) mov adc dec or jmp (bad) les xchg pop mov dec xchg into jecxz pusha mov adc lcall xor sub xor ret out fmull fnstcw jae push cmp fwait mov sarl push out loop ds adc adc fsub out lock add test lret xlat es mov and inc enter loop and jns add cmp (bad) xor xchg push test pop pop in sub in rcrb and aad orl dec mov arpl mov fs fwait rclb xor or pop test and sub aas lods mov sub cli addl ret sub repz jo sub push mov and int int3 in aam mov adc sub dec push adc xlat cld fs lret sub mov das repz xor inc test mov nop cmpl jnp cmp sahf jmp idivl shlb jb pop adc bound xchg mov rcr mov scas add xor adc sub or and jo jb mov dec pushf std xor lods xchg inc push outsl divb rorb out push mov inc cmpsb leave out sbb or scas lahf dec pusha lret das mov out cmp mov stos inc xchg (bad) ficom xor pop pop imul sbb leave pop xor call jmp pop sbb test mov (bad) sub in mov test popa (bad) lret xchg mov cmpsb dec inc jno and cld pop xchg (bad) icebp (bad) clc movsb jnp sub int shll loopne xlat adc hlt lods clc stos sub jnp ljmp jb repz cmp adc movsb fist adc fwait mov notl push pop and xor scas pop mov ret insb bnd mov dec pop ret cltd mov cmp sub xor mov jnp fsubl in jg jnp mov leave mov xor push aas out js inc push or sbb (bad) loop xor pusha xor add pop test xchg out jg js jge ja adc jo add icebp xor pop xor mov push lds jg push lock aam fiaddl pushf mov daa incb xchg sub mov daa repnz mov xor movsl movsb xchg inc bound in push cmc xchg fs (bad) cmp loopne inc lds scas sub scas mov pop imul mov fidivr or or outsl fstpt pop rcrb inc mov cmp add aam and add lcall aas iret mov add mov add mov xlat push sbb dec jbe shrb xor dec out lods lea aam xchg ret xchg into out mov mov pop loope push lods pop adc lock test adc xchg xchg mov or sbb bnd ss inc andb mov and icebp mov adc js ja scas inc xchg pop push das lret cwtl (bad) sbb add bound aaa push xlat cmp and lret xchg (bad) lret adc idivb fcmovu push mov adc jo imul adc popf xor cmp mov rorb inc addb jmp inc dec pop inc xor or inc je dec inc pop cmp fwait sbb fbld in out in cmp fs dec es sbb push pop push inc insb sbb mov lret test push xchg push loopne insb adc push sub in imul inc xchg push xor pop cwtl lock mov or fs add dec (bad) iret add lock sub je sbb fimull sahf idivb and or jnp and mov jle in sub cli xor cli add repnz ret lcall pop cli mov hlt mov pusha hlt nop rol repz sub cmpsl jmp in jo jns mov add jecxz or or lock scas (bad) cld (bad) ljmp addr16 pop add movsl daa cwtl mov cltd rclb adc and jmp shrb rolb pushf aas xchg sbb scas push lea addr16 lock push movsl mov leave inc les mov push out ja lea xchg adc sub ja xchg mov lahf or xor loopne fstpt arpl je leave pop cld add aaa mov fidivl mov jo pop fadds nop cltd and jp movsb pop (bad) ret push ja out or gs das xor out loopne imul pop lea jecxz std or mov mov das in cmp es xchg clc jmp ficom mov push shll jbe scas mov lcall cmc lahf repnz (bad) add or jbe inc xchg mov popf mov push es out add loope loop xchg push out insb adc fidivrl xchg cmp mov mov pop jns add bound mov ret sbb mov stc mov stc dec notb call or add pop call sti jne mov mov jae test xlat mov push xchg pop inc mov ds das (bad) fldcw mov icebp insl push and cmp test inc fdiv ljmp jne mov stos leave push (bad) cli std fwait xchg outsl (bad) (bad) adc decl repz sbb mov pop push hlt repnz xor adc cmp lahf jmp stc or arpl dec and jmp push or mov ljmp faddl lea sbb and cmpl push into jge add add and scas push jle adc pop out (bad) jg cmp sub pop cwtl (bad) push mov arpl pop cmp xchg clc sahf aad mov sub xchg rcrb mov insl repz push cmp out stos inc and out (bad) dec imul nop sbb out cmpsb xor iret fidivl incl push sahf loop add test sub sarb lahf cli mov scas shr lcall jns ficompl mov cld pop push rcrl ret flds and xchg mov cmp std xor jmp and xor fadd xchg mov jmp jnp (bad) jmp pop sahf fbstp sbb dec xorl jae repz cmp push push lock cmp sub sub mov mov outsl imul fwait leave cli sbb les fistpl outsb out std mov mov push push mov out adc pop and mov inc pop (bad) bswap xor or mov and fstps test mov (bad) xchg push iret pop stc ss std mov out incl imul inc dec jp xor push push (bad) xor xchg int add (bad) dec in (bad) repz add push out add std sbb popf lds sub xor push cmp (bad) cmp sub and pop or pop sub pop std insl inc js sahf stos outsl repz push lods cmc sarl sbb lds dec aad jne ficom or int stc push pop pusha push arpl (bad) mov pop repz rorb mov add push jmp pop out xor fimul cs out int3 dec inc int3 and xor insb insb test mov dec jle addl pop and push mov aad adc dec xchg pop cltd addr16 sbb cmp int mov outsb jg sub dec mov add mov add ror inc sbb (bad) roll mov xchg hlt xlat sbb push fsts dec add sahf xor jl mov pop xor in out pop (bad) mov sub inc push iret xorl lods mov lock jmp in (bad) jb daa cld adc push out jmp (bad) nop (bad) je dec (bad) sti xchg ficomp add sbb push push test iret arpl and sbb mov sbb mov es push cmpl test cmp adc jmp sti lds fist and add sub mov mov push sbb pop cmp adc add fcmovne or sub jb out dec push loopne sub adc mov push or inc ret add adc mov adc sbb testl sub and push or (bad) sbb sub fwait cld mov icebp mov addr16 mov push and dec mov cmc rep inc (bad) adc (bad) cmp inc cmp ljmp test jmp aaa inc loop cld lods mov mov cmp notb sbb lods sbb out les fnstsw int popf jl jae test push (bad) fnstsw or dec push inc testb lea cmp push mov test imul dec dec outsl cltd fcoms cmp adc xchg mov inc jne lods scas cmpsl mov hlt lods dec jns loope pop push jnp mov cmp je jp loop mov jecxz testl mov repz adc fmull xchg cmpsl lods sub and xchg mov sbb lret sub das dec inc mov cmp movsl fisttp loopne push ljmp into xchg aam mov xor lcall xchg and sub scas add pop sbb push adc pop stos jno ja pop ja dec sbbb jecxz call inc sub add je ja jno jb daa shl mov mov rcr std xchg lahf (bad) test cmp push dec fnstsw mov dec outsl stos push scas push aaa shll adc subl cmp add push and and sub daa popa cmp inc arpl xchg call add fstp adc loope daa outsl pop dec mov rcrl stc mov or cld mov (bad) cmp mov mov pop outsl es jnp in pop (bad) cmp pushf mov sub ffree test push lock xor lock dec mov stc fcoms mov stos jae xor movb and xor push mov enter in cmpsb and cmp inc inc mov pop sub sbb test arpl decb inc rep mov lret sub cmpsb mov xchg movb mov push sbb std sub xchg fstl and stc insb bnd je dec cmc pop lret sbb push mov mov dec subl jp sub sub ja add push cltd add inc xchg xchg xor mov inc int3 or ljmp xchg xor inc test fidiv in in mov inc adc fcom popa fwait lcall jno mov cld and mov jle sub push outsb mov jl in shl or cmpsl pop sbb sub mov push pop shr xor mov push popa aad jns and xor jae lret scas and push xor jecxz es fadds dec add jne xchg sub lcall xor test lods insl and out das jno push mov aam push cmp clc or push push jmp mov pop dec or jl push add es les shrb pcmpgtb mov mov and add popf cmp mov arpl sbb jae push jb sub jmp inc enter bound jge daa pop jg rcl mov pop xchg mov inc push mov xchg popf inc loope push xchg fistl mov and dec out cmp nop jb mov adc push sbb xor cs add sbb pop insl dec sub dec xchg lods sbb sbb dec iret cmp jae sahf pop dec adc lret stc xor ds or aam lret movsb mov gs push inc dec bound faddl dec bound (bad) aaa dec ret or lea jb inc sbb sbb (bad) lahf xor bound dec scas ret sti mov or popa jg xlat push icebp push pushf sub or pop nop jl mov xor mov scas les int movsb or insb in enter and inc and outsb pop dec cmp in lret out dec xchg xor and enter (bad) pushf (bad) push pop ljmp push mov mov push mov shll push mov xchg pop mov ljmp repnz pop mov jg adc push das in mov shr xlat push dec jo jmp mov test jecxz push mov ds repz jp,pt adc decb rolb push cwtl xchg mov vpavgw in (bad) xor icebp stc cltd shrb add out xor dec inc repnz mov popa ret mov (bad) inc mov push outsl jne out gs fs data16 pop int3 inc jmp (bad) adc mov in rcll out in adc and inc xor pushf pop cld (bad) (bad) jo jecxz ss and xor mov add int aam mov cmp int jne je adc out cmp nop adc push sbb cli sub pusha push pop and out pop inc ja push xchg sbb pushf out pop call fsubrl adc fdivrs sbb and stos cmp sbb in push loopne out aad or xchg xchg sahf xor dec std adc gs cmp es sub add or pop cli fmull pop inc fcomps fsubl push adc jl inc jns sub add dec rolb sub cld dec popa xchg xor (bad) jnp outsl loope out jecxz sub push (bad) ss xor xchg fisubl pop jp push hlt mull insl out das scas dec sbb enter imulb xchg into cld and loope jno (bad) dec pusha pushf jmp fdivrs xor lahf cltd (bad) cld fnop push les loop ljmp fisttpll and mov pop imul jle add inc pop xchg push push push sub cmpsl add inc push (bad) popa ret sbb mov cmp cwtl xchg mov sbb pop rorl jb cmp fwait mov mov arpl cmp cmp mov lret test adc push dec test pop adc or lods mov fild test xchg mov paddsw push xor jo jnp pop sub cwtl sahf pop and pop cltd cmp (bad) (bad) push insl pop hlt jbe push jp pusha out dec cmpsl and ja jb dec stos mov fadd mov repnz pusha sub call int3 aas imul pop sbb fcomps mov sahf jle jg aam cli int jne in mov ja leave cld pusha mov clc leave mov loope je,pn dec aas nop mov dec adc push jp mov and cmp push pop dec jbe mov add (bad) inc test xor and mov aad orps popf movl push mov xchg dec aam test xchg (bad) jp das sbb sbb xchg mov inc mov dec sbb (bad) sub enter add fimull test mov sub insb xchg (bad) jbe push scas push leave mov cmp ror adc ljmp dec pop stos (bad) fcmove jbe xchg push mov insb in testb pop xor adc popl aas adc sbb gs je cmpsb jmp ljmp xchg sbb das popa push push pop ja and loop cwtl test sub cs lock int dec rorl or sbb shlb dec std xchg aas mov push mov push rorl pop pop push push loop aas mov aaa out and xor cltd or movsb fwait test (bad) sbb les jp pop mov adc mov les sar mov loop jnp mov stos xchg ret popf lcall mov aas push mov inc jecxz pop lcall push addr16 les (bad) outsl cmc fimull jns daa loopne inc mov dec jo aaa xlat in int3 push inc sub xchg push call or jecxz sbb nop xor inc fldl (bad) in pusha out mov scas das dec imul jle shrb ds (bad) pop movsl jae in ljmp xchg pop mov sub dec mov stos add push mov xchg jle in pop mov pusha divl and pusha fsub flds jns popf lret in call out and icebp mov pusha movsb dec xchg inc push push test jo mov orl in in mov sahf ds jge lea sti je cmpsl cmpsl mov aaa into pop cld jle inc imul mov arpl adc pop mov test sti mov pushf xor mov inc xchg jo outsb xor dec lret insb sbb cli mov and mov std push dec test push (bad) pop mov jge sub (bad) xor scas jae ret lahf add in rcrb pop ss add inc stc cmpsb mov mov dec inc jae lcall mov pop (bad) fidivl fs in xor cmpsl or inc out add push push or movsl adc aas jg icebp pop jo push or cmp dec (bad) mov icebp imul cmp xor and aam mov mov xor push inc xor mov das enter in push sahf pop adc out fidivr bound cld dec (bad) push sub xchg test bsf popa sub (bad) in xor popa (bad) jne test in (bad) xor test leave push or push push jmp add push push mov fs movl xchg fwait lea fdivr pushf add push jge fsubrs sahf adc mov mov jp add daa (bad) cmp mov sahf cmp cmp adc enter jmp xchg outsb inc ret mov pop rclb sahf mov xchg jecxz sbb stc sbb movsb sbb add push xor stos fcmovu adc test add in lcall push pop popl inc add mov jb aam stos mov aam push popa ljmp test ss xchg mov jl dec rolb sub outsb out imul js pop pop mov fcoms cld outsb imul ss push test fist paddsw popa push xor and inc or fsubl push pop xlat iret xor mov loop stos xchg call fwait push ret test arpl ficoml cmp mov jl rorl inc pop fidivr xorl aam sub jo pop push pop jb ret dec jno mov incb jnp mov movsb aas cmc rclb and lock push add mov pop jae subl or xchg inc sbbb aas xlat fs fimul mov fmul xor popf lcall bound mov (bad) (bad) clc cmp ror adc cmp popf pop cmp outsl add jae insb decl xor dec mov pop mov sub lods xchg or repnz mov popf jns or imul out addr16 daa push test nopl pop out jl mov push test mov lahf (bad) mov push sub inc sub rclb cltd add adc loope rcl gs scas push test test sub mov mov push cltd orb mov in dec inc inc bound xor sub push pop jne subl or outsb ret test popa repz dec pop imul jge aad inc mulb call (bad) xlat add xlat dec xchg mov adc and push mov stc adc jno push mov adc mov mov adc aas mov xchg and mov mov xchg daa or iret adc and mov pop iret bound cmp js cmp push out fwait dec repz faddl inc stos test or aad sahf add dec (bad) notb and loope mov inc lods sbb cmp idiv sbb xchg pop insl mov mov adc popf pop and mov rcl pop mov ret inc push and fnstenv rcl dec int push lcall lahf in iret push scas pop add outsl push pop into add push mov pop jbe std sahf cltd add add mov and test xchg roll adc fbstp adc popa mov js add sub fnop movsb xor pushf enter mov dec xor pop mov mov pop cmpl and push ja jbe in nop ljmp (bad) aam ja lock sbb fldenv mov dec ficomp imul arpl lods xchg sub clc dec cwtd (bad) sbb inc cmpsl ja pop (bad) ds sub lods xchg adc in add jl pop or pop cmp sbb icebp out inc negl push aam or aaa cli enter leave test pop int test adc fnop mov in mov pop mulps xor mov jo fsub xchg inc push testl mov jg jle (bad) outsb subl xchg jo cmpsb imul push push ficoml stos fistpl lea xchg pop mov (bad) andnps int3 push mov inc jns mov (bad) call mov sub inc pop add rorl add inc mov sbb iret pop imull in fsub pop adc jns pushf cmc push cltd jne push xchg push mov or push inc and push cmp stc clc popf xchg cmp sbb fwait aaa (bad) mov pusha cmp cmp xchg (bad) lods mov sar xor scas adc lods jmp inc repnz mov fdivrl (bad) in jmp pop das lret orb mov gs into aas fadds iret addr16 and pop mov xchg jbe dec rcll push mov mov cmp xor xor lahf call mov jo push lret aas jecxz (bad) mov mov fmuls xchg sbb pop dec dec (bad) (bad) (bad) lret (bad) out jne loope fistp mov ljmp add out mov mov pusha sub cmp push sub sbb mov mov mov sub aas mov std call cmp inc test dec cmp stos subb out insb fnsave xor fdivl push pop jg inc pop out loope cmp xchg dec popf or adc mov (bad) mov aad and pop push cmpsb cmc je push movsl jmp repnz js xor (bad) in push cwtl add dec mov adc js movb fsts add imull sbb fmuls enter add push cmp out es mov cs js mul jno ljmp sbb out sahf movsb mov mov adc cmp push pusha dec aaa sbb scas icebp loopne mov jns es and shrl inc adc dec test add lods sbb cltd popl inc in (bad) dec addr16 subb loope ret in sbb and mov push cmc stc push push ret mov movsl xchg nop arpl mov and and lock xor fwait jecxz mov rcrb sarl dec cmp sbb subl jno sub jbe call movsl mov or flds sub lret sub aas sub test mov xor nop add scas (bad) xchg add mov neg addr16 adc out (bad) sbb fstp daa mov xchg pop lcall mov mov test jne lds mov sbb arpl aad es pop mov or xor sahf shlb dec cs pop mov xchg cmc push lcall push pop call cmp enter (bad) fmuls mov adc rolb insb stos in lds sbb out in aas int3 rcll iret scas push shlb lcall data16 sub dec pop test movl inc fdivrs pop arpl add popa imul mov mov arpl testl mov dec aad cmp (bad) lock ds dec loope stos dec dec jle xchg es jl push adc repnz mov aas adc outsb jle push xor mov in pop dec cs lahf sbb mov in and out push rol repnz insl scas int out (bad) jmp mov popa daa pop sahf mov divl pop pop aas in insb jl jl call iret and std xchg push mov dec fmuls pop inc jg aam jo xchg test insl lock jmp arpl lods mov inc mov fcmovnu out jo loop addl sub arpl testl push (bad) mov (bad) das lds sahf jnp in pop aas aam loopne pop (bad) xchg ljmp (bad) cmp cmp mov xchg sti xchg xor imul hlt arpl ror jl jmp and shrb xlat daa fcomps aaa sbb shr jle loop sbb add sub mov iret mov cmp push ret mov mov adc sbb and pop (bad) data16 jnp pmulhw inc mov adc sbb pop mov mov pushf pop sahf ficoml pusha add lret (bad) outsb mov inc jo repz lods dec add mov mov inc in lret add sti jmp (bad) scas rorb icebp fbld rclb fistpl pusha std out out push orl dec call test fsub inc clc incb mov rclb dec xchg out cmpsl pop or push lods sbb stos ret in rolb and rol lret mov sub sti fisubr add mov pusha sub add lds pop cmp pop mov mov decl aas and es push mov cltd mov mov outsl mov es icebp es rolb pop adc incl ja aaa fstl mov or inc xor testb pop in cwtl int3 js lcall fimul sub push shlb neg or loop out fnstsw jo test adc imul (bad) aam loop pop stos enter fmul sub mov jp (bad) mov jae push test cmpsb jns cli rclb xor les rorl jge xchg push pop movsl add movsl push imul outsb add movl dec aad loop insb jae insb fidivl push dec fimull scas jmp mov pop mov jge (bad) sbb dec stos xchg xchg inc rolb xor test ljmp add stos and fidivl loop stc rcrl and and push xor out das loop aam xchg sbb and dec hlt push insl xor jl cmp and push push fstl or out mov outsl push pop out std or subl andl dec or fnstcw (bad) into jle jbe fwait add cs cwtl cli test (bad) cmp xor movsb js rclb std std xchg push cmpl inc dec jmp in aad push daa fmull data16 mov js push js inc out (bad) fstpt lock push sarl pop popf pop stos jle push cwtl dec xchg push lods mov jnp dec sbb rcrl push test or add cmp add ds push push or mov insb push mov adc adcl fist jae lods insl jge lahf mov loope add mov (bad) (bad) das mov addr16 jb cltd sub pop stc lahf mov movmskps movsb mov mov mov cmpsl cs push mov (bad) iret mov xor jbe out in nop mov and dec ret jo cmp rolb mov les pop cmp jge dec sub sbb sbb fxch jb add js lret push xor enter int je clc lret ret jne jmp aaa insl sbb test std adc fst pop pop (bad) mov pop dec sbb lcall mov xlat sbb ret push inc sub cwtl out repz aad sbb fnsave loopne int jmp mov mov shrb fdivl ljmp iret and push into push jbe stc xchg in bound jno test (bad) jg cmc jae push popa adc lds jmp xchg mov daa pop fsubr outsl jae shlb jmp pop popf push inc test rolb icebp mov int mov xchg stos imul pop popa ds stc lods rorb cmp aam xchg pop pop pusha jo int sbb lods inc push insl or mov sbb mov sbbl icebp test push add mov pop mov lock jne jecxz xchg xlat inc or sbbl adc pusha fistp xchg in nop sahf and pop loop xlat je data16 mov adc sahf xchg or adc les push cmpsb (bad) fisttpl in dec ficomp fidivl jg sbb or andl lods insl jo arpl cmp xlat jp (bad) mov push ret ficompl xchg push cli (bad) jns or pop xchg pop or sar jmp mov push xor add cs movsb jp dec test and sbb (bad) lret clc lret jmp out sbb jb je cltd jo mov jno and out sub stos push cli push dec cmp dec aam fdivrs push xchg loope sub fstpt icebp imul cmpsl js cmc sar fiadd push sub push lcall stos cmp mov add mov cmpsl mov xor (bad) shll (bad) int3 ja pop test or xor into lret bound push adc popf mov ret aas mov (bad) in insb add data16 or mov lds mov shrl push push movsb adc aad shlb es jbe insb mov dec aas cmpsl xchg add loopne pop bt stc push pop xchg dec xchg jp mov lret pop movb insl pop pusha out xchg fcmovb add ficom jle (bad) mov int3 mov pushf sub cs mov xchg push push push leave data16 pop roll lock cmc ljmp adc insl insb je xor test jb faddl iret xchg mov out cltd or (bad) incl addr16 aaa scas lret sub jo pop movsb aam (bad) (bad) je cmp pop push fnstenv and inc xor or rclb fcomps into and stc cmp test fstl into icebp leave enter stos jmp fwait jl xchg std jmp jmp and dec in test xchg mov (bad) push pusha lods lods dec adc inc dec cld mov stc movsl jno xchg push inc push and loop ljmp mov jne and in ret div push and sbb call dec mov adc stos jnp dec mov cmp ror orb data16 or xor add mov and sub hlt jl ds add push xor mov mov push mov insb scas imul iret pop mov or rorb mov cmp push pop and repz hlt arpl (bad) lock adcb xorl call mov or addr16 dec cwtl mov xchg jae jae add sub xor movsl adc pop xor pop sbb in or mov fbld stos mov hlt push pop icebp enter (bad) repnz scas rcrb or cli or test push popa sub mov mov outsl or fisttpll inc sbb jmp xlat push sub (bad) mov or jbe jecxz lcall mov push jg clc push mov mov ljmp lock sbb ljmp popa lods xchg dec out (bad) movsl popa mov push xor nop sub xchg out orl cmp cmp pop cmp jl lods fsubr dec and pop aaa leave mov xchg (bad) dec xor push (bad) xor ret jnp push popf pop clc inc sbb adc sahf push dec mov and xchg push pop call push fldt xchg hlt cmp add and jno imul ret lahf mov mulb ficomp icebp hlt btr adc mov addr16 xlat mov mov cltd pop cmp push pop mul lret les movsb mov out scas or int sahf cli test dec push pop mov ficompl push stos repz add loopne sarb fistpl icebp jmp out setl mov out mov sbb lcall mull stos and pop in dec adc jne call jle (bad) test fs cmp ss cmp mov loopne push pop pop shr movsb sub lods into inc ss mov xor iret in or cli push add or std adc mov stos repz stc xor adc cld aaa pop dec xchg or stc ret cs mov int ret or push mov ja push jns (bad) in addl push push lahf xor xchg xchg sub aaa ss (bad) adc insl mov jbe insb test fsts loope xor cltd sti jb jne adc movsb xchg push mov xchg mov (bad) (bad) cli cs jo cmpsb xor fiaddl icebp idivl sub xor bound xor (bad) xor int3 jb sbb push or push jmp xchg and or mov or adc xor (bad) je lea inc ja xor jle test jmp dec cli or cmp aam cmp xor pop mov add sub push test popa inc ss aaa out (bad) dec outsb pop mov faddp inc jge test cwtl sub lret xchg dec or adc pop ja inc test cmp add sub cmp sbb in xchg (bad) lcall dec (bad) push (bad) xor fnstenv dec pop add ret addr16 pushf lret insb ret jno cmp inc or cmp rolb sbb dec sub jns sub sbb das pop push fwait adc xor loope in (bad) lea dec call mull push std hlt fisttpll push sbb out mov loopne lods pop add ss mov and jmp call cmp call lcall fdivrp mov sbb out lret push pop adc inc lds test scas dec push aad add add xchg (bad) sub lahf cwtl dec loopne insb add lods (bad) fadd mov mov sub jns test xchg adcl jecxz push push xchg in nop loope xchg sti or jns sahf add mov cmp ja inc lds jl aam cmp jmp pop push add pop int3 dec xorl mov lods push add pop pop insb jmp push ja pop pusha pop push in pop scas mov jnp mov mov je,pt mov add sbb aam jmp mull jp inc adc or pop outsl jge mul jne les aas and add fistpll xlat mov out pop dec inc cwtl ss fcoms icebp idivl mov test pop cltd (bad) and or sub outsl adc or leave pop repz mov dec pop scas adc stc push ljmp popf cmc inc lret push cmp pop data16 ret outsb mov ss inc inc xchg push jbe movsl dec pop (bad) dec stc sub jge das add rolb or in icebp push mov jae mov fsubr mov add xchg sbb repnz mov das dec test add (bad) sbb xchg mov or cli jmp xchg enter xchg and scas jns dec sar mul outsb sub push xchg in add or daa dec jo or shrl cmpsl popa outsb jb mov cmc xchg pop add popfw sub imul dec or fnop (bad) lods push xchg insb push addr16 aas sbb pop sub push in les adc lret lret inc xor and in cmp enter jns aad scas enter lock pop cltd je xor test push inc xchg jnp cmp jl cmpsb mov stc mov test jo xor lcall jo fcomi rcl dec pushf and rclb loope test pop xchg call outsl in push cmp (bad) pop stos outsb and (bad) ds lock xor subl push mov sub xor and push cmp jmp and (bad) cmc or lcall cmc xchg push pop data16 mov loopne fcomps fldenv lock pop or mov cs jle xchg cmovs cmpsl or sti mov es ljmp scas sbbb inc or pop push in jae (bad) xchg ficoml cmp mov jmp fisubl es outsl aam xor ffree xor xchg fmull sbbb dec xor push adcl lcall or jb incb ja push dec or fisubl mov clc dec test or mov push shrb hlt lds cmp es and int pop mov xor xchg arpl scas ljmp stos aad and xor popf push and insb xor adc jae dec mov sbb mov xchg push sub dec or fwait ret and shll pop stos divb dec cmpsb test or jo xlat inc cmp pop push idivb jno rclb addr16 in mov repz cmpsl pop lea cmp dec jmp mov cltd sub push inc jecxz mov mov mov mov clc imul sub push lret xchg lods xor cmp outsb xor fiadd jg pop in insl xchg movsl dec sub cmpsb rorb rorb sub mov and push mov subl loope or push cmp and inc adc mov push sub cmc test cltd cmp int3 jno xor lea sbb cmp lds nop xchg shrl mov jge cmp mov out xchg mov mov ja adc lret arpl jo push pushf and cmp jle hlt cli daa adc inc push mov cmpsb xchg (bad) push (bad) xchg push lcall or mov or and leave popf insl sbb cmp add or (bad) repnz out fstpl cmp adc shll ror xlat push pop adc (bad) dec sbb sbb in jbe mov dec and iret mov dec daa cli mov cmp push push dec fcmovb add mov or mov lods loope cmp daa mov outsb lds add inc and ljmp int sarl ffree (bad) dec mov and dec movsb push add cld jp pop lds mov (bad) hlt icebp out xor xlat out add mov jne xchg mov dec inc daa sbbl (bad) cmp in es xor movsl cs shrl xchg (bad) nop hlt divps fwait out insb int3 js std mov in cmp test scas push sub fcomi js and data16 jmp sub pop add push add fnsave xor add adc pusha ret sarb fwait pop push jb push dec lea popf fcomps lret mov scas out mov lret jo call addr16 cltd add add mov cmp imul mov pop cltd sub or jmp les pushf cld daa shll aad sub pop loopne in jb xor push outsb (bad) sbb insl (bad) jecxz or cmp pop imul ffree cmp lret cmp mov (bad) call push sub xchg mov dec int3 lods ja cld xor stc push or out js pop sbb sbb fcoms outsl jecxz add aaa loopne add push out inc lret adc pop shrl (bad) bound data16 lcall jo cmp repnz cmpb insb pop mov insl lahf xlat sbb test nop xchg (bad) adc xchg or cmp test dec dec insb jecxz push imul mov rcll mov lret mov arpl addr16 aas push adc dec inc fsubs add adc loope jno mov and (bad) or aaa imul (bad) dec add dec pop pop inc in xchg push push ljmp (bad) into fcoml jne dec cmp (bad) sbb mov mov xchg xchg jle sub mov clc aas xchg pop scas fwait push test lods push fdivl pop xchg mov and aam pop loope pushf mul add pop and sub push jne pop (bad) int lods mov inc outsl nop insl pop pop and lea xor fstl sub or cltd cmpsb pop sub xchg mov in lea lcall ss dec incl in lds mov sub imul pop jae fistp je bound (bad) stos add mov pop cwtl sub and and xchg cmpsl sbb and insl jle xor (bad) aas xlat sbb je je or jmp cmp and mov stc lods ret jo jp inc push mov and jp loopne dec fsts (bad) mov sub mov lahf jne aas mov mov in and std loope cmp dec rclb sub mov dec ret sbb rcrl sub mov addb outsl cmc or les pusha pop int3 (bad) ret xchg rcr xchg dec lahf add mov pop push lea popa cmpsl js lds lods into xor sbb push xor insl push sub pop sbb test jnp sbb push jecxz adc add ljmp insl mov movb xlat mov xchg out xchg xchg xor sbb ret jge jg sti das (bad) adc hlt pop mov or (bad) push in ret lcall out fmul push sbb aam je lret sbb enter inc jg inc adc jns lret mov inc jmp das dec lea jno mov imul jns mov adc leave psubsb and pop ret cmp scas popa cmpsb fwait jl (bad) idivb ja hlt pop out aas sysret dec mov sub or fwait pushf (bad) es data16 lcall leave dec adc rcll sbb (bad) and jp dec xchg bt jg jnp jmp daa pusha std or jmp out daa enter or ljmp cs push add rcr lret dec sub shrb mov mov push jae mov jge pushf cmpsb push pop inc push lds cwtl cli test enter aas fwait mov pop mov in lock cmp or lods push mov pop jmp add xchg dec push andw dec stos sbb int adc mov inc cwtl imul in es scas push mov in repnz movsl or stc pop sbbl dec inc push lds movsb lods ljmp push push fist xchg add rcrl (bad) jecxz xor sbb jge xor int stos xor dec xlat jnp push mov add push dec add push inc xchg jne jae adc popf jae gs (bad) sbb jno sti push mov adc mov test cwtl xor cmp lret icebp sub jp int daa lret es mov inc pop dec lcall sub dec enter rcl pop pusha xchg (bad) out das adc ljmp mov adc adc daa mov fiaddl xchg inc dec mov movsl cmpl (bad) and mov push xchg sbb fnsave mov hlt push aaa test mulb lock popa loopne sub cmpsl outsb cmp push dec adc or jp jg jmp pop xor leave adc mov xchg mov repz xchg push mov imull cwtl (bad) pushf mov dec dec lds jnp pop mov pushl push popl in fildl or in and mov or out inc fdivl adc sarl xchg xchg xchg jae push das inc out pop push mov pop xchg push push inc mov test leave adc arpl pop jb fmul (bad) jne add mov or cld inc push pop test std mov cmp ja or cltd xor xlat or test cmp push fwait cmpb xlat hlt or arpl call mov (bad) inc (bad) pop sbb aam fcmovne pop (bad) lahf sarl loopne test mov cmp jle (bad) mov sti xor (bad) mov xor xlat cwtl in inc or out les lds pop (bad) sbb nop xchg xchg xor btc iret mov dec adc popl jo cmp jo push movsl rorl inc test xor xor adc hlt test ljmp ljmp dec xchg std sbb in sbb sahf stos sub int3 pop mov cmp xor (bad) mov fcoms sub dec addr16 test sbb cltd cmc fnop push mov iret cld pop jle push ss adc adc sub shlb aad js test adc in add jbe xchg mov stos pop loop mov cmpsl test jb sbb jae jmp dec test ret pop adc xchg pop inc jecxz mov movsl mov xchg inc ds divl inc fcmovbe mov jns ljmp add fisttpl jmp lock outsb sbb dec lods (bad) jo fdivrs cmp pop mov pop popf add nop fwait and repnz pop mov lret shl sti jne pop pop cli cltd jecxz dec cmpsb xlat jp mov xorb mov push mov iret outsb lret jecxz xchg dec dec cmpsb push aas jns aaa pop insl (bad) mov aad mov iret mov add mov stos fdivs xor xor sub mov push sub ficom sub insb cltd sub pop xchg mov inc loop xchg add sub pop xchg inc push bound int3 push mov imul inc test mov add push jle mov dec fcoms add test (bad) jbe out or jmp mov push (bad) cmp (bad) (bad) (bad) lock loopne mov iret bound les mov bound cld ds push dec lret dec dec fbstp rcl test pusha xchg pop into lock jns popf add (bad) or pop fcmovnbe mov into xchg jb xchg out mov rolb inc mov or insl sbb mov mov pop insl sub aam xchg stos mov dec mov icebp mov sarb in push xchg sbb shrl cwtl (bad) mov inc mov dec ficoml addl mov pop dec xor jl dec pop xor fsts xchg xchg lds push rclb aad lret mov cli jne push mov and popf sbb clc cmp fs notb dec fidiv adc adc xchg xlat adc sbb or in je insl imul lock add in int3 xor mov imul fcoml sbb pop mov fdivrs lret into or and popf ret fistp dec adc fxch sub or and cmp scas movswl push jns fist clc cmp rorl cli jg mov jge mov cmp cmp sbb xor scas dec push xchg lea into imul mov enter jno punpcklwd and repnz mov in mov inc cwtl (bad) mov shr bswap mov add imul mov int3 push push (bad) xchg movl pop ljmp loop add sarb nop in mov adc in fisttpl jns sbb fprem xor push mov imul xchg imul arpl inc push (bad) mov pushf xorb stos push nop mov adc daa mov mov imul in or repnz (bad) (bad) lea push faddl adc in mov das xchg std lds scas (bad) movsl push aaa ret insb mov pusha xchg mov jge aaa mov mov mov dec aas or lods shll lret int3 fs imul mov (bad) dec jno stos mov and loopne sbb lret loopne movsb push out ljmp adc lea cmp add adc (bad) fcomps push (bad) aam sub test test jp,pt cld loop in pop je mov push sbb test xchg insl std and lret sarb mov add inc aam fcmovbe addr16 push ja or mov adc lret push or shrb addr16 sahf mov das int3 jo dec dec inc jg mov lods fldenv push xchg sbb jecxz ja sub xor imul in sub sbb ljmp mov add inc addr16 dec sub roll pop xchg (bad) jbe shlb cmp aaa movsl inc (bad) cmp push xchg js les pushf out push insb jbe js xor push pop int3 xchg daa inc test or stos mov sub pop mov lret ficompl in jae repz mov and lahf loope jecxz xchg test fldl push loope pop add ret push dec dec push aaa mov mov std xlat xchg aaa js or inc or push clc push pop gs push pop data16 pop je ja sub jmp lods outsl loopne or mov rolb dec mov push inc inc xchg inc (bad) mov fwait cmp fild lret adc cltd and jl scas jecxz push es sub lods hlt push push dec cld dec dec pop out mov arpl xor and daa ljmp sub inc xor ficom and push pushf cmp fucomi mov cmp inc jne in push jo push mov or pop pop mov and mov push in fadds add lock add sbb xor scas insl cwtl cld adc int mov cmpsl jmp fisttp push xor enter mov push addl insb outsl imul nop addl cmp roll sbb pop sbb dec cltd adc and add xchg out mov das jno daa dec push cld add outsb xchg (bad) xor das push outsl (bad) shrl add les aaa pushl int fdivrs sbb pop jae mov mov dec lret imul bound lret sti push jnp mov fsubp xchg in pushf push (bad) sub push xchg out push push push fdivp jns out ror sbb repnz aad in xor dec push or fcom or fimull in mov (bad) push fistp xorb mov cmpsl roll aas push fsts xchg inc push cmp mov jnp xchg aam (bad) mov mov shrl out ret and xor (bad) (bad) out data16 dec xchg sub ret add and test xchg ret pop imul xor dec jmp xchg (bad) pop aaa jb test dec mov add adc fdivrl xchg pop xchg imull cltd lret xor jnp sarb addr16 (bad) jb lods sbb jge or daa sub cli jmp sub jp outsb aam mov inc push sbb mov hlt jp mov enter frstor or cmpsl mov cmp loopne leave push aad push bound mov sub jne js in fnstsw xor call cmp inc mov xchg xor aaa sti and xchg sarl mov jp out sub pusha adc mov jo inc (bad) lods mov lret aaa push sbb ss out inc jns les mov dec dec insb (bad) lret add lahf aad and mov jnp sarl imul jg ret push loopne out cmp inc inc xor pop jno sub jns add fcomip icebp nop fs hlt mov pop loop mov movsb xor xchg inc sbb bound mov push xchg sub xchg cmp enter fwait push sahf mov or jecxz (bad) aas adc jb mov mov mov pop loopne jbe repnz sub (bad) insb xor jecxz ds mov repz stos (bad) (bad) mov stc or mov ret sahf cli mov add mulb inc lods xor or adc jb or xchg pop lret add lock adc inc sbb pop dec fmul aad clc (bad) push enter aad xchg pop add les addr16 xchg idiv int3 mov insl (bad) cmp push or cmp pop xchg test negb sub inc xchg cmp xchg sub xchg call cmp sarl outsl stos pop nop mov sbbb jmp loope fs add fwait xchg pop sbb vshufpd xchg popf push dec xchg lods hlt xor push xor xchg push sahf dec cmp push jle push lods push add xchg enter leave je jge aas addr16 pop insl pop imul mov xor call cmp mov (bad) jl sub adc jmp inc mov dec mov bound pop test add cmp imul aaa cmp aad outsl cmp (bad) repz mov jg add imul in xchg push or mov xor jb mov cs mov jne stos mov loope sub cmp push out cmp push js leave cmpsb sub outsb adc xchg sub lods ljmp cmp test in or fidivr inc mov xchg enter aam sub movsl ret sbb mov data16 push inc test test std ss mov cmp mov stos mov imul adc mov jb push icebp sbb sarb jne lahf mov imul mov jne daa jbe xor rcl mov sbb (bad) fstpt xor xchg push arpl mov imul pop add ror mov mov test mov test mov std out jmp repz out mov int3 vpaddusb (bad) lods mov lods mov movsb stos (bad) mov lods int movsl (bad) mov jmp mov aad into mov mov test mov test mov mov add into lret add add xchg add add jae gs cs gs jne arpl cs gs jne arpl gs fs and arpl insb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push jns je insl cs gs jne arpl cs jne je insl gs gs jne arpl gs add add inc push inc inc push mov add cmp add mov inc or add or add add add add or add add repz add or pop jae add adc add adc add add inc dec inc add mov jl push xchg add add arpl dec add jp add addb add xor add pusha add cmp xchg pop lds add scas dec inc inc push js mov sbb aam dec push pop pop test dec push lcall cmp pop add (bad) push xchg int3 outsb inc jo dec movsb loopne (bad) rcrb mov push (bad) movsl xor cmp (bad) hlt jecxz js notl negb outsb lods jno,pn fstl dec and jecxz add leave mov imul imul int3 sbb add add imull cli fistp or out and sbb cmp add repz in or int adc lds adc jbe pushf cmp sub add adc lahf or pop ret mov (bad) xchg jmp dec adc out fwait sbb mov les push dec fisttpl sbb mov and add pop cmp push ljmp mov rcll adc in jecxz stos cmp (bad) aaa sbb add xor or std pop pop or inc add dec add scas mov sbb je aas mov push jbe push mov lret cmp js (bad) or clc loopne sbb dec lods mov test movsb pop test add push inc xchg test (bad) cld (bad) hlt inc mov ret cmp push dec sbb in scas fisubrl ds daa jl push cmc sar orb lret add notb add add dec inc dec inc scas inc pusha (bad) mov add mov inc or add or add add add add push add add ret decl add or pop jae add les add les xchg sub sbb add add inc dec inc add mov jl push xchg add add arpl dec add jp add addb add xor add pusha add cmp xchg pop lds add daa dec inc inc push js movsb xchg fildll inc adc mov addr16 shll movsb mov jge or loopne adc jne inc add mov push dec jo mov mov push xchg cmp cli (bad) int3 cmp cli push add adc lahf dec or sub aad fwait mov mov mov push push inc fs pop pop mov add pop insb loopne nop add mov sub pop push lcall or push or or jae fldcw add cmp cwtl insl push lcall add push pop or cmpsl xor pop aam add pop stc pop es fcompl cwtl or pop mov sbb out test jo mov int mov lds insl in test psrld imul jg jno ret mov xchg movsl sarl movsl pop fwait stos stc pop popa sub cmp mov (bad) nop repz pop into xchg test lods outsb (bad) enter loop or mov dec popw jno imull pusha inc gs aad sahf in push fimull mov mov pop jno popa add mov ljmp les mov pop cwtl xchg bound inc add inc in aad mov mov shlb outsl in addr16 js pushf and aas je sti daa fcoms cmp adc rclb ljmp sbb cmp xor (bad) nopl imul orb sbb jecxz popa addr16 aam push mov jmp cld mov fwait cwtl inc dec adc and dec faddp lods out ja mov pop (bad) jecxz loope cmp lret xor mov mov cmp daa loope jl (bad) dec jecxz shrl in mov (bad) es xchg sti imul fsubl xlat mov addr16 call cs xchg xor aaa lret ja mov mov dec lods push cwtl mov decb out xor loope (bad) lds bnd xchg lcall cmp sbb or mov cltd xchg xor and cmp outsl jl push sbb sbbl sub pop or push or mov clc pop or mov scas in sahf int3 add insl xor insl xchg sbb push xor out sbb dec adc stos int3 add xor or pop add mov fcoml ljmp test sahf dec push mov loop popa aad push cmp aam test int3 adc jb sahf push addr16 lods cs xor or into nop insb dec or add add dec inc scas inc pusha (bad) lret add add or or add or add add add add or add add repz add xchg dec inc inc push js pop xchg out outsl adc (bad) lahf idivb pop jnp mov fimull pop out dec xor mov pop incb mov or movb inc add mov adcl and mov mov fsubrp jl push jns cmp daa pop repnz push in jge jbe pop push inc mov es enter out cmp loope es or out push jns cmpsl out cmp jb push xchg js push jnp lcall pop mov (bad) (bad) js,pt mov icebp test sarb cmp shrl dec lret lds aaa aaa or inc xor sbb insl adcl lcall sub push sub sub inc mov nop insb jbe xchg or out jns dec movsl adc sub xlat add and fdivs js mov out xchg aas fldt jl mov (bad) fistl xor pop pop mov das adc lahf fcmovu sahf and cmpsb cltd repz inc adc enter outsb inc adc outsb dec xchg mov mov dec pop mov les sbb repnz dec out fnstsw cs xor mov out mov add aaa int3 xor jbe lahf adc add (bad) xchg bound lods stos jp jmp (bad) daa stc cld (bad) fildll push pusha adc xor stos aad mov jnp cmp sarl mov cmp xor pop jmp xbegin push push scas pop lods push cs cmp add sbb stos aam ja sub rcrl orl scas and xchg aad xchg mov js mov popf fstl stc aaa jl sub xlat add adc pop xchg sbb stc faddl push out inc sbb jmp stos aad cld addl std lds push xor xor addl mov mov xchg sub add in clc icebp movsb push scas jg pushf sahf ds adc jne mov (bad) insb and xor xor push xlat fldenv add push lds and jecxz xchg dec movsb push out imul mov add inc dec mov dec mov mov mov clc jo ss inc cmpsb cmpsb mov insl sbb cmp jecxz jns xlat jmp pop (bad) jecxz out in inc lahf out mov cmp jl jle pop mov sbb nop out cmpsb cmpsb xor inc test es sub cltd mov xchg loope iret (bad) pop dec es mov adc pop sub mov inc imul push out fcmovu ficoml dec and pop xor dec ret loope mov popf mov gs stos ljmp mov (bad) mov pop jp in mov mov nopl xchg lret outsl fildll push aaa stos xchg xor into add pusha pusha nop fnstenv xchg dec in scas decl mov mov mov add add dec inc scas inc pusha (bad) push add add or or add or add add add add or add add repz add aad inc inc push js lods xchg dec dec xchg add (bad) jg mov mull outsb mov mov and or shlb in and popf and test dec data16 btr jae mov pop jmp out lock lahf ret repz std add std orb jo mov cli mov (bad) adc add ljmp xor push orb dec js mov inc mov add loop jbe mov mov mov test repz dec pop xchg fxch out push fs cmc jl test sub pop lahf ja add jb outsb ficompl cmpb xchg xchg inc cli out sub enter push arpl aas dec inc jecxz repnz cmpsb in mov cmpsb call outsl test sbb fsubrl mov into push dec or mov (bad) mov xchg fwait jge pop lret enter mov and outsb jle add jbe push cltd xor pop mov sbb bound push xor jmp gs repnz daa dec into mov mov mov cmp in inc push xor jnp mov out cmpsl push sub jae xor nop pop inc push sub xor ret inc dec (bad) (bad) jbe add cmovo cmp xor hlt cmc rcll mov ss add mov fucomip cmp adc insl sub jb fistpll lahf ds dec mov sbb mov sbb fs aaa pop and fmull sub hlt cld nop gs push sub mov dec dec adc add jne jno (bad) jge push or inc pop outsl and mov fs ljmp pop and or (bad) rorl sub (bad) mov mov xchg test sub loope in iret mov in push sub shl add cmpsb fcmovnu enter jmp push xchg insl push adc add push out inc sub roll iret dec das mov sti push cmp fisub xchg and add into das inc inc dec inc and addr16 negb jp dec icebp jecxz and fcmovb push push or inc lcall (bad) and inc xor aaa add add dec inc dec inc scas inc pusha (bad) int3 pop add mov inc or add or add add add add or add add add xchg dec inc inc push js in popf ja fs lahf lahf out cmp in imul leave sub and mov add inc and mov inc mov sbb insb (bad) dec fs mov sub fs mov bound xchg xor adc xchg mov fstp out fsubr jae push xor cwtl add xchg sbbb aas mov fdivrl jns out cmp sbb adc jb,pt shrb mov fdivrl in adc pop (bad) jbe mov loope ja add jg stos xchg jp mov pop pop scas cmp test mov fdivp (bad) (bad) in arpl js dec jl sbb dec leave and sbb mov dec sub jbe jmp leave repz push lods dec fldl2t leave pop mov or in lret mov push pop (bad) ljmp push lods jge sub mov int fstpt adc cmpsb adcl arpl repnz (bad) popf adc inc cld cmp xchg mov jl pop test movsl mov sub arpl mov divb imul xchg mov mov dec mov xlat pop ja xor or dec add imul sahf fwait js mov cmpsb cmp pop loop (bad) (bad) int lcall adc sbb repnz std mov fcoml push (bad) (bad) fsubrs jmp fistpl cmp sub jge idivl adcl jecxz xor aas pop cwtl cltd je orl popf cltd repnz stc push mov sahf pop and push xor cmp xor xor pop xchg or push mov mov and or dec cmp out cmp ljmp fadd notl mov mov (bad) scas mov jb and (bad) fs je mov lods pushl insb lods xchg cld lret mov hlt jg xchg add cmp mov pushf mov dec cmpsl pushf cmp sub cmp js push repz mov dec xor and cmp or es and cmpl dec inc sbb mov push fildl jmp sub js pop lds mov adc sub aaa adc pop sbb inc sub rolb sahf (bad) jmp je xchg insl sahf pusha imul arpl push cmp mov and xor repz mov les arpl (bad) xor lret xor pop jbe fisttpl pop and cmp sbb sti sti jno in in or pusha ret rorb push pop pop gs stos ds js jecxz xchg arpl and pop movsb enter aad mov hlt add push nop sbb gs push and test sbb dec xchg pop cld fsub testl bnd stos mov test pop sbb xor into pop cmp aad or out mov sub push es jge cmp pop sub bound add push pusha cld push add push push in dec xchg loop sbb call repz inc pop icebp movsb clc jbe ja cmp xlat xor sbb ret inc dec jo or dec movb mov sbb loop cli ret movsb mov mov fwait adc push lock stos lock out pop pop pop fbstp fdivrl sbbl jmp ja sbb jnp je fiaddl andl and or adc bound insb mov mov jl push jno gs mov dec sbb inc pushf popa and ljmp (bad) push pop jg jmp mov jl ret push aas insb mov loop dec hlt mov cmpsl imul mov push loopne fdivrs sbb ret iret js add nop inc sub and add xorl add add push sti mov push dec xchg je cmc jp sbb test repnz pop xchg cli add jge lcall dec cmpsw decl jecxz mov dec lods mov push mov mov js lret js loope mov cmpsb rorb in or push stos inc mov add inc sub xor jnp stos sub loopne xchg sar mov fildll test xor cmp daa mov sbb mov test out mov xor adc or lcall jecxz stos inc nop adcl rcll rolb inc mov or and inc or enter mov inc aas stos dec (bad) xchg mov push sub fcoml pusha lahf mov in scas sbb pop pop xor imul das repz push aas inc insl daa fmuls pushf and lret jecxz mov jns mov cmpsb call xor ljmp pop mov in mov std rcrl in (bad) out mov sarb stos aad jecxz adc iret iret push sub mov mov inc mov xor xor imul addr16 rorb or adc jns add push ljmp jbe or mov cli (bad) mov fadds jnp add mov jle and mov jo inc call (bad) divl adc jp aad in sub (bad) sbb pop mov sub lret rolb lret inc dec dec sbb ss repnz cmpsl mov imul add cli pop jl shrl cmc imul fidivrl or sahf sahf mov gs int cmp es push lcall mov popa not addb fstp push cmp jno mov int3 test pusha mov stos fist inc cmp roll mov into cmp xchg adc shlb in pop xor iret push cmp scas fs add insl test sub mov sbb mov fs loope and pusha movsb lds ret bound (bad) xor lods cmp in or int3 adc outsl sbb enter jmp inc jg rorb jns xor outsb loope sbbl imul mov ret xor xor loopne cmpl mov xor arpl mov out inc and mov sbbl push call sub pop dec sbb and rorl scas loope jb frstor insb loope movsb out mov and cmp cwtl pusha rclb bound daa mov imul fwait adc rolb (bad) sbb sbb xor xchg xchg sub divb jne arpl push shrb es xchg and add jae jne mov sahf jecxz rclb addr16 sahf in aad hlt jp lods mov popa dec sbb xor push fbstp sbb pop ret dec add mov imul pusha sbb ret (bad) mov push adc mov adc popa loop push add std inc jp (bad) scas mov ljmp push mov imulb movsw sub lahf lods inc lret rorb cltd cmpsl fdivs and (bad) addr16 repz arpl es push jecxz push xlat and sbb sbb fisubl sbb push mov pop jle sbb loop out pop in idivl jnp cmc hlt int or dec mov jae jecxz iret aas (bad) roll xor xor xlat inc or add sub shrb and and ds sbb jo push pop pushf sbb mov mov sub xchg push inc mov imul cmpl cs xor dec adc push lret jb sbb xlat test shrb jge mov jecxz mov push popf mov xchg adc sub jne imul stos int3 jo insb inc xorl lods xor xchg aam insl jo (bad) pop loope insl pop lods scas dec out pop inc in jno cmc out fist cmp xor mov call and (bad) cwtl pop jp or or add clc push test loope cmp inc xchg rorb mov push ss and add add in aad pop mov iret xchg inc sub sbb lret inc daa scas mov mov and xchg js js test mov jno sub lret pop push and inc xchg or mov sub mov push push xchg sbb push adc xor adc sbbl and lcall or dec hlt mov out jo xchg push fwait jge lahf pop jl lret inc inc cmc xorb lret jbe xor sti sbb test sti dec dec push or xchg mov nop pusha adc jl add cmc lea lret inc loop sub and xchg mov inc and ds inc lods icebp pop dec aaa int (bad) jbe xor push inc mov pop repnz mov notl cli add loopne pop dec mov and mov test cli clc scas les xor lcall or pusha xor in and insl shrl rorl mov (bad) das jb rolb mov mov aas pop fstpl pop jbe xchg mov adc xchg ret jno es jge cmp push pop pop test adc or in push test mov cli sti xor ret cmp add aas pop or or dec inc and add imul lret (bad) fs rclb fwait push lret sti push (bad) repz pop mov fwait cwtl push or ds es push cmp push out (bad) imul rclb mov jns cltd push gs out jmp rorb pop dec hlt mov mov lds sbb mov lods ja repz dec mov sub leave mov arpl lods mov adc lret sbb mov gs (bad) repnz jl addb adcl ja xor leave and loop call int3 push sti dec imul and sbbl inc movsl roll ja cvtpi2ps mov mov nop jmp xchg jmp xchg xor mov in jno jecxz pop mov mov test imul or mov movsl lcall (bad) (bad) rcll pop xchg (bad) aaa xor sub and rolb adc lods into inc iret xchg sub mov sub cmpsb xor jl mov push adc loopne and sub adc scas daa mov sbb dec or sub int3 test lret dec cmp adc sbb adc xor inc sub inc add enter bound lret pop (bad) xor jl in xor or xchg xlat fsubr hlt cwtl fidivrl (bad) fdivrp outsb adc test ror inc xchg mov test mov cmpsl push adc dec sub movsb sbb or insb cmpsl adc jno pop mov push adc out test sbb pop add cmc cmpsb les mov mov stos stc hlt mov (bad) adc add push mov insl and mov and add mov lods mov mov outsb mov sbb adc cmp data16 std shl xchg lcall jmp mov cmp repnz test pop (bad) (bad) loope aam dec je cmp fwait sub not inc pushf fwait jmp inc push mov push lea and ss inc xchg inc lcall and xchg loopne ds pop les inc cmp (bad) mov sbb scas inc dec daa jg test and loopne sub (bad) add shr es xlat lret mov and add push test shrb insb xor mov movsb push les xchg pusha mov dec push sub adc sbb into or pusha inc mov or push (bad) mov pop ja inc in (bad) xchg cwtl cltd sahf loopne fstl mov pushf sub cmp xchg dec loope dec test mov out fwait inc dec or dec sub rol insl xchg lret sahf inc shrb lods xor (bad) (bad) mov lods int3 xchg divb add cmp ret lods loopne adc (bad) insl xchg (bad) out or andb pop dec adc pop mov inc loopne mov xchg sbb add lcall adc daa push jns cmp inc (bad) jne mov mov push jo sbb jecxz and jp xchg ret push (bad) lret mov jecxz push sbb adc jnp adc pop or mov mov scas mov add js (bad) push aad int3 inc mov aaa std mov test push daa enter hlt insb xchg adcl push dec imul sbb shrl sbb sub push xchg xchg lea loop mov push nop cs add jmp arpl jecxz ja jns inc into leave inc idivl mov push lock xchg and adc xor jecxz jge daa and das sbb stos fstpt scas ret cltd in pop ss xchg test mov cmp into outsb mov jno popf push addl sbb xor dec sub js and std and mov xchg notb loope mov fidivl pusha add add (bad) lock xor (bad) test in test lods add pop test adc sbb adcb inc dec mov mov rcrl mov loopne fbld mov push mov adc sbb sbb xchg cltd push add adc in xchg push pop cmpsl adc jmp outsb aam or mov xchg mov mov inc dec test pop push lret inc (bad) bound dec faddp sti push xor popa lods ret mov add roll pop and sti nop mov mov lret push lret and or xor movsl aad loope push neg mov cmc bound sub adc or and rcrb inc mov jnp mov pop out cmp mov cmp push ljmp cwtl adc sbb clc mov (bad) repnz stos adc stos mov mov dec inc mov sbbl inc jl test gs mov call xchg addb push es fild repnz ret dec (bad) mov and sbb add movsl jne and mov push jecxz into and nop cli lcall xor push push push push mov jmp and mov mov pop add (bad) cmc and jne jne aaa mov sbb mov mov pop fwait mov sbb adc cld push fwait sub push or lods (bad) sub test sub and data16 dec mov cmp jecxz jae fstpt sbb mov inc imul or push jle dec pop shrl popa lock or pop movsb loop imul sub sbb (bad) fsubl bound jb stc lret cwtl icebp adc cmp (bad) or mov (bad) test cwtl lds out ret xchg repz pop xchg push push (bad) jae push xor mov lods xchg mov out call mov mov push pop xchg push add mov and xor pop into dec arpl lods mov test jl xchg and push dec xor ret sbb and jge bound ret xor adc dec popa adc or fcomps orl add test pop test aas call arpl and ja test add (bad) dec xchg test mov adc test orl adc push cmp fnstenv and mov in inc jns stos insb outsl cmp js insb ret push sbb xor int cmp jge jo test and dec aam adc cmpsb mov push shlb xor fdivl rcrb test rcll lds dec ds gs ss (bad) cmpsl test (bad) nop rol (bad) and cmpsl sub pop pusha cmp jns out fcmovu ret cmp in mov xor mov and test jl xchg jp imul jge add inc nop movsl xor or enter xor mov add xchg dec sbb jle bound add fistpl scas lea fwait popf jae out (bad) dec sub and and xlat pop in fwait cmc cmp ret adc push popa mov iret pop adc insl ss and and sbb loope adc adc pop xchg pusha mov xchg bound nop inc jmp and jge pop dec mov inc dec shrl xchg iret movsl add gs or jae pushf xchg inc or pop fisubrl adc xor es sbb add test cmp adc pop sub adc and cmpsl pop sub fdivs (bad) mov addr16 cmp and out jno popf ja and rcl inc pop cld fdivs mov lds mov mov (bad) out lods push (bad) out lock push and cmpl (bad) testl addr16 aaa cld xchg sbb iret int3 mov xchg lods insb xchg hlt js sbb outsb xchg inc leave mov (bad) idiv mov jo mov cmp push jge test movsl and rorb cmp das stos mov jne or jno cmp xlat cmc cwtl cwtl pushf in das sub dec jo xorb inc dec jp inc dec adc arpl mov cmp jno adc repnz (bad) cmc pushf inc adc sbb fmul dec popa les pop imul push inc adc push dec and cli and xchg dec cmp enter xor cmp lods mov out xchg mov fwait jg sub (bad) aas mov pusha icebp das pop jle cld and fdivl pop stc lret fidivl lret jae pop iret jne (bad) mov xchg cmc int xlat xor mov repz ffreep lcall mov aad inc jbe and cmp sbb sbb jmp mov outsl lods loopne insl ret fdivl sbb and inc sub jo lret xchg das mov xor push pop scas sub mov iret fild add add pop inc (bad) jecxz lret mov push dec mov jle imul mov mov xchg push sbb int3 int3 jb int3 sbb push cs mov mov mov cld fisubrl inc pop jle mov into nop xlat mov movsl rcr pop jne jge aas clc mov idiv int mov in cmp sbb add sub dec dec dec push lods push imul push mov push sbb int3 dec imul mov inc add mov out jnp jnp mov mov push std xor pop ret imul inc mov sub dec out arpl (bad) scas cs outsb adc mov add shrb cmp (bad) cmc and xchg sub inc mov das jge fisttpll mov dec ret jne lahf cld cli xlat (bad) cmp (bad) mov sarb jge push scas (bad) scas mov mov hlt pusha test jo cmc scas jg ja lret gs (bad) lret cmp call out push inc fdivrp (bad) aaa (bad) cli std dec mov stc addl push (bad) (bad) pop in sahf (bad) (bad) std sti jmp cmpsl fucomp rcrb imul pushf jle jns movsl jb cmp mov daa or ficompl push cmpsl fnstsw inc dec scas pop pop dec stos mov push rolb pusha xchg mov lock (bad) mov out push sub or mov sub mov push les ja jbe inc jne pushf cli (bad) test (bad) fadds or or sbb daa mov jbe insb das xchg inc movsb sbb jmp cld mov (bad) pop clc lods loope add shll mov imul int3 mov aad mov jp aaa push pop jp sub adc cmpsb jo sbb adc jae (bad) cld lock lret daa dec pushf cmp xchg adc jne sub pop inc push jle scas xlat lret pop and push mov lea adc (bad) xchg shrl mov and ds out cmp dec sbb lods mov sbb clc orl sub addr16 iret xchg sbb mov push iret cmp adc cmp cmpsb and inc fcmovnb out jp popf cmp pop mov test jmp out push stos adc xor rclb lahf stc (bad) sti jle jecxz pop das add mov mov jo int3 cltd mov in sti pop (bad) push push fisttp out fidivr add cmp push bound aas ds lcall pop lods push jle lods leave push add jb sbb fistpl cld orb sbb mov pop xor in aas enter pop inc sub fidivr lock pop cmpsl (bad) (bad) lock mov das adc fstpl int or jb loopne mov cmp xor or dec loop test and mov stc call lods sbb jge jne sbb jge push sub out shld push inc pusha mov stos (bad) cmp pop xchg lret aas adc fisubl dec inc mov mov out pop pop pop aas aas nop mov sbb add lret xchg incb cltd ja push mov xchg dec dec mov mov sub lcall scas dec mov cmpsb aad inc addr16 push cwtl dec xchg es add lock pop das xorb imul lcall cld ret lahf mov dec mov bound in repnz and mov pop out loop mov xor repz ret in pop xchg xchg into pop pop je cld cli (bad) jne and call test stos loop sarl stos inc aam shrb cmpsb xlat outsb mov push pop sub ds stos arpl inc sub mov mov shlb daa dec lock mov clc clc xchg dec lahf jns (bad) mov decb add js xchg push repnz mov mov repz or gs and iret jae pop inc out mull int3 int3 int3 in mov sbb lret cmp in lds fild mov xor sub std js jno sti ret stc push cmp clc xchg lret jecxz jle iret jne (bad) shrb mov (bad) lds pop mov imul imul (bad) das test imul jg or jmp sti fdivp pop fwait out mov movb rolb dec sbbl pop mov jg push aas hlt mov (bad) pop (bad) stc inc push mov ret pop lret nop jmp mul imul fistp mov xchg repz ja adc mov das jecxz sti fxch ds in mov or andb sbb shld mov out mov mov mov cmp push mov push sbb outsb push jnp sub push jl push movsb mov push mov push out mov sbb mov lahf jl test or fnop lock pop frstor ret sbb ljmp cld out (bad) imulb negb decl add hlt mov pop pop cmp push ljmp pop xchg in (bad) lea shr jbe movq ret out jns fldenv repz rolb sarb (bad) xor jge or (bad) mov outsl jg sbb rcll dec mov (bad) call jl insl xor adc adc dec sub mov cmpsl xor adc repnz jnp jmp andb cmp jnp repz pop mov aam aam setbe daa ret xor mov inc in cmc jp jmp scas or (bad) cld mov mov ljmp cld dec and mov fistpl dec les jnp int insb ss xchg jb dec mov mov out sub es xor outsb test ret mov imul cli stos iret pop out std iret (bad) repz in ljmp test add lret daa aas stc leave negl jcxz mov pop je lcall adc rcrl sbb dec xchg in mov in fidivrl outsl (bad) loope add inc push movsl pop or es (bad) or mov stos xchg push sbb pop cmp lcall fdivrs enter out out add inc push arpl add add dec inc scas inc pusha (bad) cli add add or or add or add add add add or add add repz add or pop jae add adc add adc add add inc dec inc add mov jl push xchg add add arpl dec add jp add addb add xor add pusha add cmp xchg pop lds add jo inc inc push js xchg xchg int push popa adc lahf idivl ljmp push or std add fisttpl aad inc inc mov lea inc nop nop push fwait mov loope inc and cltd orl in cmp fdivrs out cmp mov mov cmp cmp jae sbb decb push les out jbe sbb or stos stos inc cmp sub inc push add inc lods fiadd pushf cmp imulb and in roll pop inc inc sbb mov cli mov push fstl cwtl ret fdivrl mov add mov sub mov inc mov in mov mov and xor rol out outsl pop jns (bad) dec jo sbbl ror bound mov add adc in pop adc xor dec fstps jbe (bad) jbe or (bad) data16 mov in adc inc repz inc push adc sub cmc test push lods fldenv mov pop mov out cmp gs and insl or or sbb or mov imul add hlt jnp jge (bad) mov imul inc jnp in (bad) mov xchg icebp test stos stc scas out and scas fincstp mov je lds fsubrs cmpsb pop cmp add and loope dec leave or popf xor jmp add cmpsl sar cmc int hlt mov inc in mov repnz out mov lods add scas cwtl jbe andl stos mov (bad) mov add or push and jmp into dec sub xor mov iret stc rcr mov mov fimul into pop nop test dec imul push sbb in sub mov cld pop fsubr ds mov push fcmovnbe sbb add push xor jb cmpl dec mov (bad) xor mov sbb sbb stos inc sub movsl add add dec inc dec inc scas inc pusha (bad) jb add mov inc or add or add add add add or add add repz add or pop jae add adc add adc add add inc dec inc add mov jl push xchg add add arpl dec add jp add addb add xor add pusha add cmp xchg pop lds add call js pushf xchg xor push adc jg mov xlat cwtl notl xchg push cmp cmp jne outsb inc mov aas inc mov and jle push sbb sbbb mov xchg cwtl mov imul pop hlt emms mov pop xchg dec push cmpsl sbb imul sar scas outsl iret repz imul sub clc lea in dec xor loope int xchg jo adc xchg fcmovb add xor jmp inc mov pop mov hlt cs inc or mov mov add imul movsb sub iret daa xchg jnp jl sbb loop dec mov and (bad) push xor mov cmp rorl data16 arpl fwait push add xor inc loop andl or sbb arpl mov insb adc pop sub dec test cli pop iret dec cmpsb pop sbb pop sbb sbb dec jmp push sub sub test jno icebp loopne hlt shll iret jp aaa or je daa sub mov xchg arpl sbb (bad) pop push adc jle loope clc jle das sti sub rorl push lret stc inc xor push lods lds add leave mov or jns call pop test sbb pop adc or push jge adc xchg gs sbb push mov pusha jns xchg (bad) push jle jecxz in jo and (bad) xchg mov push add popa scas xchg jecxz (bad) xchg gs cmp cmpb cs movsb push (bad) cli pop cli xor xor fwait pusha add add dec inc dec inc scas inc pusha (bad) inc add add or or add or add add add add or add add jp add add pop test xchg pop push dec adc aas pop inc and inc addl or and sub and xchg push and push inc (bad) or xchg add xor addl xchg and test nop mov pop xchg and push out jae into sbb lahf lret xor push jbe imul xchg inc scas pop dec movb (bad) sbb loopne adcl adc loopne or dec xchg daa sbb (bad) add pop xor ficoml add popl test adc dec and mov sub (bad) jb and test cmc ficomp pop pusha cld sbb push mov add sub dec in jae arpl sbb test in fimull push movsb dec jecxz or (bad) (bad) rcr jecxz,pn mov add repz std jno int mov sarb ss jns mov mov loop aaa and sbb addr16 mov mov xor jge mov (bad) orb xchg std jge jmp mov mov push scas scas xor int add jbe lret cmp add sub mov sbbb call mov shrd pop push movsl push sub movsl dec push lods xchg jmp int scas inc and insb lcall ljmp cmp imul pop mov std inc sub add pop ret fwait out xor and sub mov sub call xchg xor dec cltd rsqrtps add push into cmp iret jp dec and lret jle hlt test pop xor insl lods ss cmp in xchg xor lret sub lds jmp xlat mov dec aad in pop scas cmp test jge outsb push push push pop inc inc loope jle imul lret mov imul cmpsb out push mov aad xchg push push lret pop ret scas pop or push inc xchg sbb ret nop dec sbb std stc decb mov push mov lods xchg popf xchg sub lahf lahf xchg jmp pop cmp cmp jg scas push add rcr add popf (bad) (bad) repnz into pop divl pop add andb add int3 jle sbb adc mov inc cmp xor add push dec and dec inc dec inc scas inc pusha (bad) outsb sbb add add add add and add add call add add and add add add add add and add add add or add add add add add add add add add add add addb addb add add addb add addb add incl add add add incl incl add incl incl (bad) incl add (bad) incl xchg ja ja ja ja ja ja add mov mov (bad) (bad) (bad) push add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push add clc clc mov clc clc (bad) decl add jbe xchg clc mov add ja enter (bad) (bad) (bad) (bad) clc clc testl ja enter mov jg enter xchg (bad) (bad) (bad) clc clc testl ja call (bad) (bad) push add mov clc mov add js mov (bad) (bad) clc push add mov clc mov add mov (bad) (bad) (bad) push jg add js js call (bad) imul testl call (bad) (bad) (bad) (bad) jg add mov mov enter mov jg mov (bad) (bad) (bad) (bad) clc out testl call mov add clc (bad) mov (bad) decb call (bad) mov add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) push add (bad) (bad) (bad) (bad) decl (bad) clc testl mov mov jg (bad) (bad) vpmacssdql mov xchg ja ja ja ja ja ja ja add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp add add add add add add or add add add add add add add add add add inc add ja add jns add push add jge add test mov mov mov test mov ret add xchg pop add mov ret add mov mov lds arpl lds arpl lret xchg data16 cwtl gs fwait gs xchg imul leave xchg push add cltd insb add popf outsb add sahf imul (bad) movsl push aad insb add scas outsb add mov jne fldcw jno fldcw js fnsave jbe fbstp jns in mov jo loopne je in jae loopne jp in js in jg in ret hlt sarb mov add mov add mov mov lods add mov addl in mov ljmp add rorl lock mov not addb ret out xchg add les add leave xchg add (bad) cltd add leave cltd add into cwtl add iret popf add rcrb repnz sahf add into mov add aad add aam add (bad) movsl add fsubs add fsubrs add fsubrs add fidivl add (bad) add in add loope add out add rol lret leave movl int3 lret int lret xlat roll out fadds clc out add jmp iret add out add in in add jmp add repnz add out lock lock add icebp icebp add repz add hlt repnz repz add hlt hlt add cmc testb div add stc testb idiv add idiv add clc clc add cli std add cld incl clc clc stc add cld sti add sti cld add (bad) incl (bad) (bad) incb (bad) (bad) incl outsb cmp cmp cmp cmp cmp cmp add inc test inc test test test cmp test mov test xchg xchg cmp test js jns jns js xchg jl jns jns test test or or or add add add jo jo jo xchg jns cmp test push push pi2fd or or js mov mov cmp test pop pop pop pop pop pop or js jo jo jo xchg cmp test and sbb sbb or mov xchg test test and and and and sbb js mov mov cmp test and and and and and sbb jo jo jo test cmp test sub sub sub sub sub and mov test add sub sub sub sub sub js jo jo jo test cmp test cs cs das cs mov mov cmp test cs xor xor xor sub jo jo jo mov add cmp inc cmp cmp cmp cmp ss mov test cmp test pop pop push dec inc inc inc cmp js jo jo jo mov cmp test imul push dec js mov mov cmp test insb imul pop dec js jo jo jo mov cmp test insl insb push pop dec js mov mov cmp test push push push push push dec dec dec dec dec test jo mov add inc test test test test test add test mov mov test test inc outsl jo outsl outsl jo outsl outsl jo jo outsl outsl jo jo jo jo outsl outsl jo outsl cmp jae jae jae jae jae jae jae jae jae jae jae jae jae jae add add cmp cmp cmp cmp cmp add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) ljmp add add add add add add and add add adcb add add push add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add mov jle mov decl test decl test decl test decl test decl mov decl xchg decl test decl test decl jne xchg add add add add mov (bad) mov lods mov (bad) mov stc idiv mov lods mov (bad) mov stc idiv sti stc idiv sti stc idiv sti stc idiv sti stc idiv sti stc idiv sti stc idiv sti stc idiv sti stc idiv sti stc idiv sti stc idiv sti stc idiv sti stc idiv sti stc idiv sti stc idiv sti stc idiv sti stc idiv sti stc idiv mov add add div out (bad) cld cld cld (bad) stc std (bad) push clc cli (bad) cli (bad) (bad) push cld (bad) push stc cld push stc sti (bad) clc std (bad) (bad) (bad) (bad) (bad) (bad) std (bad) (bad) (bad) cld (bad) (bad) (bad) cli (bad) (bad) (bad) stc (bad) (bad) push sti (bad) push div push idiv push idiv push div push cmc hlt push repz repnz icebp lock icebp icebp push icebp icebp push icebp icebp push repnz sti stc idiv mov add add div icebp (bad) sti stc idiv cli sti cld jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out jmp out push repz push idiv push clc stc push idiv push div push hlt hlt push repz lock in out out (bad) in in in (bad) in in in (bad) in in out (bad) sti stc idiv mov add add clc div (bad) sti stc idiv mov inc (bad) mov jl (bad) mov jnp pushl jns pushl js pushl jbe pushl out hlt cmc idiv lret lret lret dec lret lret dec lret lret dec lret lret dec lret lret dec lret lret push hlt cmc push repnz out out out (bad) in in in (bad) in in out (bad) sti stc idiv mov add add div repz sti stc idiv mov mov rorb (bad) mov mov mov xchg xchg mov test mov out push idiv push idiv push clc stc push clc stc push clc stc push clc stc push clc stc push idiv push cmc cmc (bad) out lock (bad) in in in (bad) in out out (bad) sti stc idiv mov add add div repz sti stc idiv rorl ret mov ret (bad) inc (bad) fs mov mov ret lea ret mov ret inc mov rolb push idiv dec lret lret dec lret lret dec lret lret dec lret lret dec lret lret dec lret lret push idiv push div push icebp icebp (bad) out out out (bad) out out lock sti stc idiv mov add add div repz sti stc idiv ret lea (bad) xchg imul (bad) xchg imul (bad) xchg push inc xchg inc xchg gs xchg fs xchg arpl les out hlt div push div push idiv push clc stc push clc stc push clc stc push clc stc push idiv push div push repnz lock out lock (bad) sti stc idiv mov add add div repz sti stc idiv lds insb dec cltd insl dec cltd insb dec cltd insb dec cltd insb dec cwtl imul cwtl imul cwtl push leave cwtl imul (bad) xchg pop jmp out push idiv push idiv push clc clc push clc stc push clc stc push clc stc push clc stc push clc stc push clc stc push clc stc push clc stc push clc stc (bad) sti stc idiv mov add add div repz sti stc idiv leave xchg arpl int outsl dec sahf outsl dec sahf outsl dec lahf outsl dec popf outsl dec popf outsl dec popf outsb dec popf outsb dec popf insl dec popf insl dec cwtl gs out push idiv dec lret lret dec lret lret dec lret lret dec lret lret dec lret lret dec lret lret push clc stc push clc stc push clc stc push clc stc push clc stc (bad) sti stc idiv mov add add div repz sti stc idiv into fwait gs mov jb shll jae shll jb shll jb shlb jno rcrl out hlt cmc stc (bad) clc stc cli push clc stc push clc stc push clc stc push clc stc push clc stc push clc stc push clc stc push clc stc push clc stc push clc stc (bad) sti stc idiv mov add add div repz sti stc idiv shlb jne aad jne aad jne aad jne aad jne (bad) test call test call test call test call test call movsl insb jmp out push idiv dec lret lret dec lret lret dec lret lret dec lret lret dec lret lret dec lret lret push clc stc push clc stc (bad) mov jle push clc stc (bad) sti stc idiv mov add add div repz sti stc idiv xlat cmpsb imul fisubrl ja fldcw js fldcw js fldcw ja fldcw jo out out hlt idiv (bad) clc clc clc push div push clc stc push clc stc push clc stc push clc stc push clc stc push clc stc inc nop addr16 (bad) gs clc stc (bad) sti stc idiv mov add add div repnz sti stc idiv fsubrl jbe fnsave jns fnsave jp fnsave jp fnsave jp fnsave jb out out repz dec lret lret dec lret lret dec lret lret dec lret lret dec lret lret dec lret lret push clc stc push clc stc dec cltd imul idiv stc (bad) sti stc idiv mov add add div repnz sti stc idiv jecxz mov call mov jp fbstp jp loopne jp loopne jnp loopne jnp loopne jnp loopne jnp loopne je out out hlt idiv push clc stc push idiv push clc clc push idiv push idiv push clc stc push clc stc push clc stc call cmpsb insl call movsl imul clc stc (bad) sti stc idiv mov add add div hlt (bad) sti stc idiv out xchg push (bad) (bad) in iret mov jmp ret mov in cmp mov cmp mov jg in js out out cmc idiv dec lret lret dec lret lret dec lret lret dec lret lret dec lret lret dec lret lret push clc stc push clc stc (bad) (bad) outsb push clc stc (bad) sti stc idiv mov add add cld cld std (bad) sti stc idiv jmp loopne push (bad) push fsubrs (bad) out shlb (bad) in int (bad) jmp xchg (bad) ljmp jmp out push idiv push clc stc push clc clc push clc stc push idiv push clc stc push clc stc push clc stc push clc stc jmp mov jo idiv stc (bad) sti stc idiv mov add add cld cld cld (bad) sti stc idiv ljmp push loop push fbstp push fldcw push (bad) movsl push aam (bad) out rcrb in lret out out hlt idiv dec lret lret dec lret lret dec lret lret dec lret lret dec lret lret dec lret lret push clc stc push clc stc (bad) in ret in mov stc (bad) sti stc idiv mov add add cld cld cld (bad) sti stc idiv in into mov (bad) cli jmp mov push fbstp push fldt push (bad) sahf push rcrl jmp out push idiv push clc stc push clc stc push clc stc push clc stc push clc stc push clc stc push clc stc push clc stc push roll push clc stc (bad) sti stc idiv mov add add cld cld sti (bad) sti stc idiv loop mov out cltd jmp lds jmp les in xchg jmp ret xchg jmp ret in (bad) jmp rorl cli sti cld (bad) cli sti cld dec lret lret dec lret lret dec lret lret dec lret lret dec lret lret dec lret lret push clc stc push clc stc (bad) sti in (bad) sti in push clc stc (bad) sti stc idiv mov add add sti stc idiv sti stc idiv sti stc idiv sti stc idiv sti stc idiv sti stc idiv sti stc idiv sti stc idiv sti stc idiv sti stc idiv sti stc idiv sti stc idiv sti stc idiv sti stc idiv sti stc idiv sti stc idiv sti stc idiv sti stc idiv sti stc idiv sti stc idiv sti stc idiv sti stc idiv sti stc idiv sti stc idiv sti stc idiv sti stc idiv sti stc idiv sti stc idiv mov add add div repz clc stc cli push clc stc push clc stc push clc stc push clc stc push clc stc push clc stc push clc stc push clc stc push clc stc push clc stc push clc stc push clc stc push clc stc (bad) clc clc stc push clc stc push clc clc push clc clc push clc clc push clc clc push clc clc push clc stc push clc stc push clc stc push clc stc (bad) clc stc cli (bad) sti stc idiv mov add add lret leave (bad) dec leave (bad) dec leave (bad) dec leave (bad) dec leave (bad) dec leave (bad) dec leave (bad) dec leave (bad) dec leave (bad) dec leave (bad) dec leave (bad) dec leave (bad) dec leave (bad) dec leave (bad) dec leave (bad) dec leave (bad) dec lret int lret int3 lret int3 lret lret leave dec lret int3 lret lret leave (bad) dec leave (bad) dec leave (bad) dec leave (bad) dec leave (bad) decl add and add or (bad) (bad) (bad) sar (bad) sar (bad) sar (bad) sar (bad) sar (bad) sar (bad) sar (bad) sar (bad) sar (bad) sar (bad) sar (bad) sar (bad) sar (bad) sar (bad) sar (bad) sar (bad) sar (bad) sar (bad) sar (bad) sar (bad) sar xchg jns (bad) (bad) sar xchg jns (bad) (bad) sar xchg jns (bad) (bad) sar mov push add add xchg mov decl test decl test decl test decl test decl test decl test decl test decl test decl test decl add push add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl dec push arpl outsb push jb inc push push push xor xor pop xor push push xor cmp push dec jp inc insb jbe push push push push inc insb dec dec outsb push jp push dec ss imul pop inc push insb push imul dec jp inc push jns inc xor push inc dec popa push inc dec ja pop push outsb push inc fs fs xor inc inc push fs pop imul push push push push dec pop xor outsb fs dec xor push xor dec imul dec inc inc jno inc cmp dec xor push push cmp push push insl bound pop xor push dec push inc push imul xor push xor push insb push xor arpl pop push push insb js push inc push xor push insl xor inc push cmp ja push fs push insb inc jns push arpl push xor bound jae push dec outsl fs cmp pop imul jp xor push js xor push inc jo pop push push pop dec push insb push push xor add inc cmp xor insl push xor push cmp cmp gs inc cmp ja inc push push pop inc cmp js popa ja cmp cmp imul push push cmp dec dec arpl jne ja cmp push outsb push inc push xor dec dec dec push xor dec xor pop xor pop xor fs pop jbe xor push xor popa inc cmp xor popa insl xor jp jb push je push inc pop outsb push insb jo push push push jp push pop pop push insl pop push dec push fs push pop push jns push pop inc dec push inc push push push fs bound dec push inc je push push push xor pop insl jo pop pop pop xor push push bound push imul insb jne push cmp push je inc je push push push cmp jbe addr16 dec push insl insb ja fs xor jae inc cmp dec insb pop pop push insb push xor arpl push pop push cmp jns xor push inc inc xor cmp push imul xor dec jbe insl xor push push fs dec jo insl fs push xor inc cmp push xor bound cmp xor cmp cmp push je push inc xor push push insl je push jp dec fs push js pop dec jp inc push outsb push inc dec jb push xor push je push outsb outsl xor bound jne inc outsl jbe xor dec inc cmp inc push insb pop insl push cmp js push jbe outsb insb dec pop insl push xor xor jo popa outsb inc xor inc imul jbe push inc ss xor arpl arpl xor push xor push xor dec push inc cmp jo pop ja cmp jne inc dec cmp ja jns or push cmp fs dec jne xor jo xor xor dec push xor arpl bound outsl push outsb push outsb push push insb push pop xor arpl outsb push inc pop jno jp cmp pop dec push insb bound arpl pop inc insb ja push dec insl dec xor jo inc insb imul push push insb inc cmp xor cmp imul insl dec push and inc push push xor push xor dec push cmp outsb push outsl push xor outsb dec xor cmp inc insb je push cmp fs inc jbe inc inc jp inc inc cmp inc push xor jo xor push push push push arpl push push inc pop jns push inc push push push je xor jns dec gs push dec dec xor dec dec imul imul xor push inc dec jne inc ja push pop push dec push dec push js push dec dec popa push cmp inc inc pop bound jbe xor ja inc js dec dec arpl push push cmp push imul js xor imul inc inc push push pop push push xor or inc cmp inc outsl adc inc dec xor dec xor cmp inc dec imul push cmp xor dec xor xor imul inc inc ss inc inc and inc dec dec push inc je xor push outsb pop jbe push push jno xor push outsb inc dec push push xor and inc js insl pop jbe insb push xor dec xor push inc push push xor or xor push cmp dec insl arpl push insl arpl push insl arpl push insl arpl push insl sbb xor insl pop dec dec ja jns imul insb gs push imul cmp xor push imul inc jb push push xor push push xor inc insl dec xor push inc push dec push insb xor dec push push imul push insl pop jbe inc dec inc push push xor imul push ja outsb inc jp insl push inc push xor push push xor sbb jb push ss push xor pop xor pop push push pop push push push dec arpl imul xor push push fs pop push pop inc popa insl push inc popa push cmp outsb addr16 xor arpl dec push push push push push outsb pop jns xor pop xor dec xor dec xor dec insb dec pop pop push cmp xor insl push xor push cmp jae push push pop dec xor inc insb push push jp jns push dec push imul jp cmp push jo push inc pop dec arpl inc pop xor insb jo gs push jo outsb addr16 inc fs push popa push push jo push jns push pop inc xor insl inc je jp cmp xor insb popa xor dec xor imul push pop insb popa push imul inc cmp inc push gs fs push arpl inc push dec dec xor fs cmp jp cmp pop dec xor push outsb dec je xor xor outsl xor dec push push ss inc push outsl push inc cmp xor arpl inc push xor push push xor push popa push js popa inc dec insb push xor pop push dec pop arpl cmp pop push jns dec push imul dec gs inc jo dec push xor xor js pop jo push xor push push dec dec dec push fs push inc push xor pop inc inc jae dec dec je inc inc js push fs push xor dec push inc je xor bound cmp imul popa dec push js push dec push jno inc push dec push insl pop push fs cmp arpl xor je inc cmp inc pop jae push inc xor jns jp outsb inc jbe push xor sbb insb inc inc push inc inc push push push inc push push xor push xor push imul inc push inc sbb inc inc push inc inc inc push push dec push push inc inc inc push push insb dec push push push cmp inc push inc inc inc push push dec push push inc inc inc push push insb dec push push push jns push inc push inc dec inc dec inc push xor push push inc inc push push insb dec push push push cmp push push xor push inc inc jbe inc push xor xor gs inc js xor jp cmp push je pop insl pop push push xor push pop dec dec push inc inc xor insb push push insb inc insl arpl xor push push push push js push push js arpl push push imul dec inc xor jns push jo push push inc ja xor push xor bound jns xor popa dec inc outsb gs inc xor xor push imul imul push xor push inc dec imul xor arpl xor outsl xor je push push xor push inc inc push dec dec insb push push push dec dec dec inc fs push insb imul push dec xor insb imul insl xor xor xor push inc pop pop push dec bound je gs push xor push push xor push jns jp push xor push dec xor jb push insb dec fs dec push push xor dec push insb pop imul outsb popa insl push pop pop pop arpl jp pop pop insb fs push pop push inc pop outsb inc insl dec xor push imul push outsl xor xor push popa inc inc xor popa pop inc imul jns inc dec push gs push xor xor or jae push dec cmp cmp push insl pop insl pop insl pop insl pop insl pop insl pop insl pop insl pop insl pop insl pop insl pop addr16 push cmp inc dec insl dec jp inc push insb dec push pop xor fs dec inc cmp xor dec push jne push inc xor outsb push inc arpl dec insb bound jae push cmp inc xor cmp cmp dec fs push insl push imul push sub cmp dec fs push xor xor push jp imul push insl push imul push add ja cmp push dec inc dec ja inc pop ss inc push outsl popa pop dec addr16 push je inc js fs push xor dec inc xor ja insl cmp pop dec jae push inc ja insl cmp pop dec jp push push addr16 outsb imul xor outsb push inc arpl dec insb bound jae push cmp push dec push dec inc dec ja inc push ss inc push outsl pop push inc js push je insl insb xor push jne xor arpl jo xor popa pop dec bound xor inc xor insb jae push dec jae push inc jbe imul dec inc dec jbe pop inc xor jns imul bound insb pop inc inc xor inc jo outsb dec xor js dec dec push outsl pop push inc dec popa push outsl dec inc push jne xor arpl jo xor push inc inc push jns jo imul arpl xor inc xor push addr16 push insb arpl jns inc insb jne jns insl pop push inc xor insb dec addr16 dec push dec inc dec ja inc push ss inc cmp inc dec push push push je gs pop push push push dec bound push xor push jp push je push inc pop dec pop push inc fs jp imul pop dec outsb dec inc cmp outsb push inc dec insb dec jns pop dec xor inc ja push inc js push dec ja insb outsl xor push push push push push pop dec push inc jae bound jo fs inc popa push cmp insl je dec imul outsb pop push dec inc pop push push insl inc insb push inc dec imul push push inc inc dec dec xor push inc dec outsl popa inc pop jae push push jp xor dec push insb push dec insb fs inc je gs je pop xor inc cmp push inc insb jae xor pop push push push dec push dec push dec xor gs dec jne outsb inc inc popa xor push push arpl fs pop jp xor inc pop jp push push dec push popa dec outsb inc jb insl pop imul inc push dec xor jbe dec push jae pop dec sub push xor inc cmp push xor push push push dec cmp xor inc cmp push xor jbe insb dec inc push xor push insl inc jae push push sub pop inc imul inc imul je inc inc xor imul jns push push xor dec inc imul push xor fs add xor xor xor push inc push inc push push push xor js imul inc dec xor xor push push inc push inc dec xor imul inc push jp pop xor push or push xor inc push push cmp dec inc push push imul adc push push push xor pop pop insb push pop push js pop push xor adc inc cmp xor pop pop insb push pop push js pop push xor dec dec imul pop insl cmp push inc xor cmp inc xor jns pop inc jbe outsb push insb pop inc inc insl bound dec arpl push push pop dec jo dec imul push push arpl jno imul insb bound cmp jno push dec xor push xor fs insb push dec push cmp insb push pop push pop cmp jo outsb push insb arpl cmp jne ja cmp jae inc cmp insb jp inc push je insb dec xor insb jne ja cmp cmp xor dec inc addr16 inc cmp cmp inc jae push push cmp cmp je push insb inc or je push cmp xor outsb push inc arpl dec insb bound jae push xor jns push dec xor jp insb inc jbe xor pop push push inc gs inc xor jo outsb push xor cmp cmp insb ja push push insb pop imul pop dec jp push xor dec imul bound dec jae push dec cmp cmp cmp ja push xor cmp inc and xor imul imul push pop inc xor cmp insl push ja xor adc dec jp push xor dec insb dec push inc cmp inc xor push jo push push cmp cmp insb arpl inc or insl push ja xor push push push cmp jp push xor inc insb insb arpl cmp imul push or push cmp jp inc cmp dec jbe inc push jns inc insb insb arpl cmp jp inc cmp dec jbe inc push jns dec imul pop push dec outsl pop push push inc popa push js arpl cmp xor dec outsl pop push push inc popa push js add xor or insl insb jae push xor cmp jne xor or dec jns xor or inc xor cmp insb jp inc push je push xor je pop push jo xor push push insl push jns xor addr16 dec push pop pop dec jp push cmp push xor bound xor cmp push insb inc adc push jns insl insb push push inc push or xor fs push jns push cmp cmp xor push xor jns xor pop pop push jo xor push arpl push push cmp xor outsb push push fs inc push xor pop push xor cmp push je xor pop inc pop jns push xor cmp cmp pop push js arpl je pop dec inc bound push jne inc cmp push xor cmp push push cmp push pop insl pop jp pop push cmp push pop inc xor cmp xor pop xor pop inc xor cmp dec jno push dec xor cmp push push arpl je push cmp insb ja push xor jp push xor xor push cmp jp push xor dec insb dec push dec dec cmp jae inc xor cmp jno push dec xor push insl and inc cmp xor pop pop inc xor insb push insl insb insb bound jp pop push xor insb imul cmp xor pop pop inc xor insb push pop push xor insb imul cmp push jne push xor inc imul push cmp push cmp cmp pop dec insb or pop push xor cmp push push push jp xor pop push cmp push xor cmp xor pop xor insl inc push push cmp outsl cmp xor cmp push push dec push dec inc dec ja inc pop ss dec jae push inc inc dec inc inc xor jp ss push cmp xor pop xor pop outsb dec imul imul insl xor jne inc xor dec push addr16 outsb dec jbe push inc xor xor ja push addr16 jp jp push outsl jp inc inc inc push push cmp xor imul imul push pop inc xor cmp imul fs push inc and push xor imul imul push pop inc xor cmp imul pop insl arpl push xor push xor imul imul push pop inc xor cmp imul xor fs insb jbe insb dec xor dec jb inc push ja inc addr16 outsl pop push xor imul push pop inc xor cmp imul popa insl push push dec dec jne inc push jne xor sub push xor imul imul push pop inc xor cmp imul popa insl push push dec dec bound inc cmp cmp xor push xor xor push bound xor push insb arpl push jns push inc jae pop jo dec dec push outsl pop push inc jbe insl push push inc cmp xor imul imul push pop inc xor cmp push xor push arpl dec insb bound jae push xor jns inc push xor xor fs insb jbe outsb dec inc bound dec insb sbb dec insb fs insb jbe pop dec inc gs dec insb arpl jo xor imul pop push dec inc push jp push cmp dec insb arpl push jne inc inc xor cmp outsb dec push bound dec jb inc cmp insb jp inc push je insb fs insl push jbe xor push pop inc ja inc insb push pop push jo xor jns insl push jne inc cmp push jbe xor jae xor and inc jae xor push insl push ja xor push inc cmp push xor pop pop dec je inc cmp push xor push jns insl push jns push dec dec adc insl push ja xor popa push xor jp pop addr16 jae xor push insl push ja xor dec addr16 inc jne insl cmp dec inc dec jbe insl xor addr16 cmp xor arpl push jns insl insb push push cmp insb xor cmp push dec inc dec ja inc inc ss inc cmp dec push dec inc dec ja inc dec ss inc cmp push xor outsl jbe xor xor arpl push jns insl insb push push xor je xor pop push xor jbe lret add push lret add add add inc lret add add add add pop inc outsl jb js dec popa imul jb gs insb add and 