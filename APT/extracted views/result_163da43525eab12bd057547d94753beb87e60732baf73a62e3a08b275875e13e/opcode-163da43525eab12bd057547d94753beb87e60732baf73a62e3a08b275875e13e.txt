xor stos pop cltd stos cmp pop mov ds dec mov mov out andl push aam cmpsb push and jle mov fnsave sti into stos adc push scas push add inc adcl dec cltd adc push inc mov dec std mov imul mov dec sbb aad cmpsl aam add and xor jmp (bad) mov dec hlt mov lods in pop sub xchg dec notb add xchg (bad) aad mov cmp in sub and xor test ret iret fwait sbb fwait lock sub dec fcmovne dec rolb add push roll mov sbb (bad) mov out jmp (bad) decl mov jl jg data16 popf lods add negl sbb or and je sub or lock imul popf adc out inc xorb enter and or ret inc push insl sarl (bad) push mov out out jmp loope pop mov lods lcall sub push cmp popl gs dec (bad) or jl repz repz mov xchg push in and pop mov fadd fidivr je dec enter pusha mov sub mov cli mul gs rolb dec aad sub in dec js xor arpl or enter test sbb mov arpl pop adc rcrl rol push push hlt imul daa mov loop jle mov dec push mov incl mov pushf shrl bnd (bad) pushf nop leave cmp fist mov mov inc mov ss out adc stc lods pop icebp jecxz xorps cli dec jnp rcll setae push sbb out enter add mov mov test adc and mov movsl imul cmpsb sub lahf arpl dec push ja movsl cmp adc sbb dec shlb xchg js outsl frstor js mov mulb sti gs clc ljmp inc test inc cmc mov jp addr16 mov repz push arpl mov push jl push jbe aad iret push cwtl push icebp test daa dec adc iret int3 adc das and ss rclb push add fucomp lret lods (bad) cmp xchg push push (bad) out adc lret repnz lret jnp xor inc iret sbb jae and outsl sub int out mov cltd repnz push adc out cmp cmc mov mov ss sbb pop mov cmpsl pop xor mov shrb mov xor push push pop arpl push cmp mov cmp loope mov outsl orl mov scas jae movsb sbb inc movaps pop int3 out lret cmp enter in test mov inc shl nop cmp fsubrl les jae les adc sub into lods inc xor push push cmpl jbe inc outsl jnp movsl loop mov lcall fistp jmp (bad) xchg ljmp adc xlat pusha xor inc sbb popa dec aam rcr fwait jo sbb scas test test pop int xchg mov pop jb pop adc fs sbb loop sbb mov addl dec repz jnp cmc pop push mov mov push push push in pop fsubl push je sbb ljmp (bad) mov cmp (bad) insb bnd pushf sahf sbb push sbb outsl cvtpi2ps pop xor jmp sti mov xchg mov pushf mov dec mov xor adc cmp outsb push scas mov sahf jnp push push pop insl repz rcrb aaa adc popa add pop inc lret dec jo add mov dec jmp pop cmp cli imul push dec sahf pop lea dec fldcw sub call popa fsubrs ret mov push push loope xchg xchg test push daa pop jb xchg add sbb mov in and mov imul ds mov cmpsb mov sarb dec scas mov sahf sarb pop lahf imul ret bound (bad) in hlt xor loope mov cli int3 pop fxch aaa jbe adc jg rolb pushf scas leave stos jge cmp outsb pop mov lcall dec xchg jns jne adc push lods in mov icebp aaa inc inc test cli in jb inc add cltd xor outsb popl mov cwtl xor ror es adc push mov jns aas xor jo mov rcrb ret and mov jp mov mov cltd pop add dec mov outsl in fcompl jmp sbb jae out (bad) push loopne xchg cmp js xchg lds (bad) xchg xlat (bad) negl push jl inc std sub jb mov mov sbb adc adcl pop sub pop or in pop jge (bad) dec inc add lods inc fild lea or mov insl xor outsl add mov aam xor das or cmp clc cmpsl scas (bad) xchg push xor sbb out mov pop aaa and rolb mov jnp push push mov dec or (bad) pop inc jecxz push loop aas push out out mov mov xor sub movsb lret adc stc xor scas or cs stc (bad) jbe je inc xor xor stc lds or cmp out adc jle pushf jle push pop pop push adc (bad) jo stos jg cmp mov jg and push cmp clc negb jae push dec out gs sbb sbb mov stos mov jmp out push shr mov mov insb cmp rclb cmp push fstpt sahf inc sahf in imul andl jg in sar movsb dec cmp scas out ljmp sub lret pusha push xchg dec mov sbb mov mov jns (bad) inc dec fld and cld mov cmpsb xchg in cmpsb sbb (bad) arpl push xchg movsl out adc xchg scas dec add cmp add xor pop push mov popf adc xchg xchg out and inc fcomps pop int3 mov es in mov in pop add imul roll push push les dec push cld scas mov iret add scas cmp cmpsl insl add insb add call jp mov (bad) mov xchg mov pop aad cmpsl and and adc and stos roll cmc mov push test fwait sub add jl loop ficom std nop fdivl cltd and inc test imul lods cmp mov loopne inc iret (bad) arpl push and dec js pop jae and add icebp jo (bad) inc push icebp xor dec jge mov sti test sub jecxz push mov cld xor es jg inc les sti jl mov fisub pop out test add shrb xor jns ljmp adc jle mov addr16 or cmp faddp push ds sbb adc fst adc inc imul lret (bad) (bad) mov test sbb nop xor adc mov into fsts xchg inc lret ss add fwait daa adc mov jne push movsb mov scas inc cmpsl inc fnstenv inc imul mov mov insb ja pop xlat in pop into mov aad (bad) or xchg in pop data16 sbb sahf mov and lret shl nop call add jnp cmpsb stos cmp in pop xchg push xchg sub andl lcall (bad) fstpl sbb dec cmpsb xor rorb and cwtl jbe js xor imul cmpsb ret mov roll jle rcl (bad) js inc into push sar rcrb popf mov push scas (bad) shrb int3 or ljmp mov mov cmp push cld popf add addr16 sub push test adc mov mov (bad) iret mov mov jle push loop (bad) ja cmp sub imul sub sahf inc stc lods cwtl mov in adc outsl bound pop hlt push sbb sbb add mov les in fs pandn sub popf adc stos (bad) divb stos xchg cmp (bad) jmp adc sub (bad) sar or adc cltd lds xchg jmp sub sbb ret dec cmp fmuls (bad) aaa jb and ret (bad) xor xchg repz sbb dec sub inc jmp js and fdivrs mov pop (bad) jbe in xchg mov aaa pop push mov xchg inc divb mov ljmp (bad) pop (bad) mov ficomp loopne lods lea pop lcall into sbbl cmp addr16 add cmpsl dec icebp pusha arpl mov mov loop mov mov xchg sti jb dec mov fmuls stc inc push push cmc xor lret inc les pop in insb pop pop jnp xchg mov mov mov push popa or push or pop outsb mov mov or lcall xor sbb sub inc sub mov (bad) test pop clc aam test (bad) aas aad cs fidivrl pop jecxz dec test js stos lahf daa xchg imul sub je inc add dec outsl jmp lret popa es xchg lcall aam and imul xor adc cmp stos xchg mov push mov dec dec add into sbb add push fisttp pop mov jl mov sbb sar out push adc fwait popf mov jecxz sub jecxz arpl jns (bad) lcall loop inc out mov mov fdivrl mov xor lahf test lahf imul movsb shlb cmp mov xchg xor xchg dec out fistp test clc add scas dec pusha lods mov in jnp imul test add test jns pop (bad) stc mov add mov jne lods lea movsl insb (bad) in or lcall ret pop or int3 jmp sub fnstenv ljmp push dec and add (bad) (bad) xor mov jp mov xchg jp add xchg mov push or addr16 pop xchg setge and and xor out sbb cmpsl into xor aas jne mov scas mov cmc gs cld mov and js pop stc or push push cmpsl jnp mov les cli or dec es addr16 push imul bound rcrb or sbb cmc mov test cltd mov into jnp cmp inc fcoms mov dec pop mov jge shll sub hlt inc cmp lret sub pop add push rol push sub icebp out jp and cmp (bad) mov cmc xchg xchg lock pop into sbb sbb jg enter and pop dec popf pop add cmpl lods rsm xchg add fwait (bad) imul pushf lea mov mov stc stc aam cmp xor adc pop push in fstps mov ljmp jnp pop mov ffreep xchg add adc mul kmovb mov ret fwait out and lods dec or pop cmp cmp lcall inc add dec push outsl fldenv imul jmp sarb mov sahf and sub sbb into in push adc cwtl or fs in xor push loope test (bad) sbb jp leave xchg or loope cli inc push sbb jb ss ljmp insb push inc inc movsb adc pop xor lcall jo mul popl lcall add lea lds call pop jle xor pmaxsw or cwtl mov push mov adc pop jmp inc jno push pop push jne scas mov std fistpl test jnp fwait and push mov xchg push aad ljmp aaa fldt jmp in (bad) repnz mov es cmp jp inc add dec movsb inc or repz (bad) xor jns gs inc jl (bad) jno push add ss sahf xlat pmuludq pop jp inc mov jl into inc mov mov xchg mov cmp test mov add mov cmp fwait (bad) int outsl outsl cmp cmpsl mov cmp in sub inc mov repnz mov out outsl and xor mov loope fsub add and mov mov sbb pop jmp mov inc pop mov out popf pushf icebp xchg inc pop xchg fistl imul push out pop loope mov jno jns adc lret into xor int3 loop in and sahf xchg pop mov imulb pop fdivs mov jne xor inc jl mov mov and jp (bad) in dec cld xchg mov int3 dec out lahf dec lods test xor mov insl cmpsl ljmp cmpsb in dec adc jne jno into mov fyl2x int3 xor sub out daa cmc xor cmp cli hlt push jmp jno xchg pop int fcompl icebp cmpsl cmp pop cmp lcall jmp loopne mov pop jge aas outsb xchg sbb pop mov in sub xlat das pop or mov or mov cpuid mov (bad) gs in inc cmp lock add ret inc fistl mov hlt enter leave inc xchg adc xor in cmpsl or or xchg and sub aam subl and popa lret mov cmp imul inc js or subb test mov fnstsw xchg gs jbe shl jmp daa push fmull xchg mov push leave push or into pop mov or js dec in and inc sub pusha mov xchg mov clc mov jl jmp jne mov mov lret insb sbb flds xor mov (bad) in test jle mov int3 push (bad) dec imul fidivrl das jecxz push stos cld popa lret aam push dec adc cltd push les xchg inc inc mov aas cmp lret jo outsb pushf xchg jg stos pop pop iret mov add out inc rcl pop lcall ds pop adc rolb out pusha inc sub dec leave pop lods jno dec jge loope in (bad) xchg mov (bad) mov lods push mov pusha jo cmpsb mov adc and pop popl pop arpl stc mov dec cmp lods sub adc jle (bad) and lret sub not push into push fsubp push sub or mov jg add call outsb (bad) in pop inc and jp mov pop stos (bad) push jbe mov lret lret icebp jns inc jge pushl int lret adc fnstcw and jns sbb test sub add dec cmc bound inc inc (bad) scas dec fwait xor scas mov jne inc cmp rcrl sub mov sub out push cltd cld scas mov aaa add jle sub (bad) and scas outsl sbb jmp sbb lea mov jp clc jns inc hlt ffreep scas (bad) sub movsl outsb pop mov sbb xchg stos cwtl xor push adc fsubrl sbb rcll orl test das push push lea adc push test dec inc sub cld and jnp data16 pushf pop dec adcl je xchg aaa or add pop xor pop inc mov jnp or jbe xor pop andl rorb int3 cmp fiadd jmp aad mov xchg push push inc xchg jl dec push (bad) mov jmp lds enter xchg cmc pop roll div fidivl push mov xor enter scas pop sahf or enter sub pop push std inc stc and dec in or cmp jnp mov pop gs out mov fldt jo pop or scas jnp aad faddl mov xor add daa push fisub jge cmp pop ror and mov negl mov cmc inc scas inc ljmp sbb or fwait xchg imul push xchg xor push mov pop shr (bad) xor lcall arpl and xor ja inc addl imulb push or daa movsl lcall mov data16 mov cmpsb insb sti lea mov sbb mov add sbb adc fs adc xchg mov cmp in pop lock negb pusha enter gs dec xor insl lds inc jecxz cs jg jns in mov jle mov aam inc cmp out sub sbb ficoml mov loopne and jp in cmpsb outsb xchg jg rolb cltd cmp jge jge out lods addl mov inc stos movsl notb dec mull scas (bad) movsb mov cmpsb gs sub adc sub leave (bad) imul xchg out push mov lret jns mov sub bound test jbe bound imul dec inc shl leave dec sub pop and mov adc sbb lods leave cs mov inc cmpl in jmp scas rolb popf in ja inc movsl mov fimull insl and inc jmp lcall lahf add jmp cmp jp sbb add jge jb pushf (bad) (bad) xor mov iret (bad) pop es and lods out leave xor in fildll mov add das sub inc push mov push mov gs outsw dec fs ror (bad) sub sub mov (bad) in pop mov xchg jno popa sbb inc cmp sahf mov add fnstcw hlt and push and sbb adc mov je mov addr16 push adc rcl dec pop adc pop notb pop scas mov add mov cmp jl sbb jp bound ret ret jno and stos push adc aam lea xor loope adc lret cmp sbb xchg in push and arpl fildl call ds adc ret mov test test xchg (bad) push push out sbb push test xor or sbb sbb inc addl andl jmp addr16 sbb jnp repz adc cmp loopne jmp jge inc jg sar hlt xchg push fwait adc (bad) cmp js push jno movsb mov cmp add outsl lods (bad) push inc add push xchg mov (bad) push gs cld aam call imul ja arpl jg sahf in icebp (bad) in or lret and push pop in movsl dec lock or (bad) cld sub cmp push addr16 inc cli xchg sbb lahf inc pop stos pop aaa (bad) repnz and cmp mov pop push inc les dec popa das (bad) mov (bad) lahf sub and mov cwtl lea cmpsl cmpsl fprem1 int3 sbb int3 (bad) add push iret push xor ret movsb aas imul (bad) dec stos shrb dec lret enter (bad) stos sbbl xchg cmp mov (bad) fsubrl lods mov inc mov int jbe inc cmpsl inc inc pop repz pop icebp jo pop rclb bsf repz or jb mov std das int or (bad) jmp fisttpll xchg inc fwait inc pop sbb aad lock cmp or into sbb or out pop dec dec lds gs fwait dec cmp xchg leave icebp mov mov cmpl aad xor clc mov pop mov scas ds test (bad) push lea in rcrl mov fidivl mov mov pop sbb mov outsl lahf mov test adc xor sub cltd xchg xchg (bad) dec lahf test sbb cmpsl mov sub jg fs popf jbe sahf and mov jecxz inc mov insb push sti or repz insb and imul rolb or mov pop xor mov dec inc mov test or cli ret adcb jo fisubr cmp push pop and fidiv es dec mov or leave stos mov leave sub mov std enter mov and dec ja lret (bad) call imul jae dec or push add test sbb cmp sub test xchg out push add pusha jns ljmp mov pop jle iret daa fnstenv inc sub push ret jbe movsb sub outsl push mov pop xor pop (bad) jmp inc cli pusha xchg pop pop aam push sti xor test or xor cltd mov push jb out aaa pop aas lods adc idiv fld1 xchg mov add push jg xor stos rorl pop or fcmovbe (bad) int3 xchg sbb loopne and lds aam xor inc inc xchg cmp mov inc sub loop pop mov add out sub push mov push xchg mov cmpsl dec cli stos sub lods xchg hlt adc jno (bad) div push daa rorb sub jne pop mov push pop jbe jmp mov aam jmp adc xlat pop ret imul mov or mov xlat cmp mov push jp hlt aam loopne inc outsl lds jns shlb lret or add dec hlt in stos nop or push inc out cmp jb sub mov mov push push sbb mov and xor sub xor mov and xor les enter sti xchg scas sub cli dec ds shlb lods jne ds jecxz repz (bad) incb (bad) stc sbb adc cs lods jae popf (bad) rorl pop sub jp nop mov hlt mov sbb imul popf dec xchg sbb inc fucomi pop shlb dec jne cmp sub jbe mov adc enter mov rol mov jp aas aas push (bad) std insl fidivl xchg fcoml sbb ret popa hlt and and add repnz mov dec je loop leave cmp xchg fisttp jnp lret (bad) call call cmp sub mov add scas push xchg cmp jb decl adc js fnstenv jl pop xchg and std outsb xchg cmp mov test mov jl push pop mov fnstcw rolb ficom mov sahf rclb sbb jle test shlb pop jle inc mov mov push lret cli mov pop (bad) mov cmpsb mov aam jle cmp loop sub cmpsl or das push adc push xor or pop jns cmp xchg movsb incl das negb test aas (bad) cmp jmp jg mov mov sbbl or clc clc arpl pop dec jnp and adc or pushf lock bound push jle negl popl mov (bad) hlt sbb test inc ret outsb adc mov push (bad) sbb js das ljmp xor push lcall cmp loop mov imul mov jbe xchg pop push cltd int adc clc test cwtl mov xor inc cs sahf out inc clc out sahf sub and inc jo out or and dec sbb push xor lods call hlt or js jmp fsubrs imul or inc inc pop xchg mov fs in inc stc (bad) je mov addr16 mov lret rolb and jne fadd mov cmp pop les enter and adc fs in lods data16 mov dec loope mov arpl mov call cmc test inc stc pop lahf mov repz mov test (bad) jmp out stos insl dec jb push mov or lahf cs push add push mov insb aad mov fild dec test data16 (bad) call inc lcall repnz aaa add sbb bound sbb push sbb sub inc sbb pop jno in int3 fcmovbe fwait (bad) fisubrl push mov stc and scas outsb pop sti sub mov jmp xor inc mov out lahf scas mov addl or (bad) stos sub scas gs dec and mov dec fisub sub mov sub pop xchg popw xchg out push das xor test xor test and hlt mov mov adc test pop add jg test enter push and sub adc mov cmpsl hlt (bad) bound data16 or in (bad) test scas movsb xlat push out push cmp lret pop dec mov in js mov ret mov mov push mov fcomp notl int mov jle add mov add mov in pop adc lods fmull cmp daa rcl enter mov movsl fisubrl mov cs mov inc repnz test outsl js and lret dec inc mov mov adc or int3 push mov pop add sub xor lret xchg jecxz mov int loope sarl mov jne das lahf or ljmp adc out cld movsb fistl and mov les push cmpsl imull xor jmp fldt inc aad dec mov imul xchg je psraw in lahf fldenv lcall sub cmp leave cltd sbb or in mov and outsl testb out dec mov test mov xchg out das sub mov cmp aas and jle push jno pop mov or popa cmp fdivr pop dec in jno rcll lcall scas or data16 mov adc roll cmpsl jnp gs mov (bad) jecxz outsb data16 hlt add xlat pop push pushf mov das jae mov nop out fisttpl or mov and mov lahf inc movsl and repnz and jp push add cltd jl outsl pop jb xchg bnd out rcrl mov mov dec es dec mov cs bound test movsb sub mov hlt ja pop rcl pusha fisubrl repnz jbe push xchg dec cmp in scas pop pop (bad) (bad) dec imulb sbb push jle mov or sbb fwait (bad) xlat sti push mov mov cmp fdivrp or ret (bad) scas in sbb jecxz jp dec loopne inc jns dec push les repnz mov je dec push dec divb mov xchg dec scas dec test cmp xchg xor arpl cmc pop lret and imul mov aad cmc pop stos das leave push mov loop jge fldenv pop mov jmp stos push or bound mov adc cmp fld adc scas adc cmp sbb dec iret sub addr16 or cwtl (bad) pop mov pop mov mov je aam jle dec cmp fs shll popf sahf loop adc aad mov push cmpsb adc cmp call movsb mov outsb fcoms popf sbb mov xchg mov or jb (bad) xor pop mov inc xchg fwait inc aas stos mov and les inc adc loope inc dec imul ret push das dec out cld popf mov and dec sub or call dec inc aaa inc adc shrb fstpt cmpsb cmp addr16 and loope (bad) push add push lcall das xor std fnstcw repnz pop int3 outsb mov popa xor adc or addl inc clc lret aas aaa in repz (bad) cmp inc add es jmp adc mov sti daa dec aas ret shll xor xchg mov popf imul out outsb xor jp pop arpl (bad) jne or stos inc ja imul adc cmc add mov jnp sahf push push jg jl add (bad) fcmovne test (bad) test ret outsl xchg mov ja push inc scas jg or push cmp stc jmp mov push scas push xchg rcll mov cmc xor ficoml or flds (bad) (bad) add mov insl outsl rcrl stos imull adc pop xor sbb ret dec jge cmp (bad) out subl cmp cmpsl or divl cmp mov cld jo mov jno or push sub push test jge fcompl fstp dec pop cli rclb loop fcompl xchg popa mov mov adc and dec sti (bad) rclb inc dec icebp push mov jne mov lods cwtl xchg jg out xchg sbbb sub lret enter adc clc andl mov inc or or sbb je add xor sahf mov sbb ja ficom js mov mov adc push jae cmp fs out fistp sbb sbb test jmp sub out rorb (bad) jnp (bad) adc clc cltd ljmp iret inc push mov mov das pop inc mov mov clc push data16 sub ss pop cmpsl inc incb pop bound pop pop jecxz pushl sub inc ret push mov mov movsb xor mov (bad) imul xchg aaa les movsl (bad) daa mov jne jne imul push loop mov stos sbb pop lcall mov imul push inc lock pop cmp mov cwtl rolb xchg and inc mov jmp jbe sub inc mov lcall addr16 push popa pop lea insb orb cmpsb mov sbb xchg jno pop push hlt xchg push jle lret or aaa lcall (bad) sub inc and add cmp pop mov xor je divl inc xchg in (bad) lret mov repnz and and sahf cmp mov lcall cmpsb sub inc insb pop ds sub xor mov aam inc jp pop and mov ret mov dec jecxz out hlt fs ja and (bad) jo mov std xchg xor xchg lods cmpsl jo push add dec ja int sub fmull faddp xor (bad) xchg mov mov pop mov test mov setno lea call mov fwait inc inc mov add jecxz xchg inc rcl test push lea pop insb mov push adc cmp push popf cmpsb std mov ljmp les push addr16 mov adc in cmp test (bad) mov mov cmp mov das lcall lret adc pop gs mov inc dec xor outsl or std outsl (bad) cmp dec into lock dec sbb inc mov jns jecxz mov xor pop jo pop imul or and aam test in sub and fs mov mov ljmp pop addr16 cwtl jb xor jno rorl les push sub pop sar mov pop bound push shll inc jg add mov test sti mov std cmpsl loope test ja (bad) inc out outsb pop loopne or loope sub gs aas stc cmp arpl neg jbe andl pushf cli int ficoml repz ret push loop (bad) or push je dec jno mov jnp clc sbb es cmp sub insb add cmp cmc sub popa jmp xor daa repnz cmp mov insl push add mov nop adc dec int3 jbe outsb pop push (bad) in ret popa inc pop outsb fildl lds cmpsl mov cs lret lahf insb fnstsw xor es pop mov gs orl hlt and lods xchg mov out push repnz mov cmc int xor imull xor out and inc nop mov stos rolb jno inc cld addl cmp add hlt mov jle (bad) cmp jp test call iret adc push mov cmp push xchg cpuid dec mov das jb or popf pop fucom pop sub nop stc sub mov ljmp mov push mov test sbb jmp in sbbl fcos into loope imul fdivp std arpl adc les mov mov test fnstsw sub cmp mov sub clc aaa jns inc add fiadd (bad) fldenv sahf ljmp test movsl lcall or inc inc lods (bad) addr16 cmpsb dec outsl xchg push sbb lret movsl pop xchg push push cmp xchg fcoms mov add sub mov lea data16 inc and sub sub clc movsb fcompl xchg xlat mov mov dec or sub push sar xor sbb adc push test pusha (bad) shlb xchg popf mov adc jns sub out mov aad clc add shrb xchg addr16 adc mov or push mov int ficoml fist sub inc jns popa pushf dec and dec pusha leave dec jmp mov std fiaddl push xor jp mov xor pushf nop (bad) popa mov xor sbb (bad) mov (bad) ljmp out loopne or pushf push pop lcall push and repz in in insb outsb inc jnp shld stc pop mov fs out sbbl jecxz aam fst and cltd jg xor mov test sub xorl into into hlt mov je insb nop movsl mov mov (bad) int adc nop clc loop lea mov or xor dec mov cmp ja sub pop ss sub xchg xor icebp mov pop or insl pushf nop inc push out inc pop mov outsb pop in jno ffree mov icebp shr cmpsb icebp ja fnop jbe xchg mov cmc dec test sub mov jb cmpl enter sbb push cmc clc mov or dec mov pushf mov dec aad xchg das scas xchg sti insb fidivr mov pop push dec and inc inc arpl jmp lods int3 jmp pushf fiadd push sbb loopne ljmp subl cmpsl mov xchg js repz inc mov dec mov xchg jmp lahf push cld test aam mov and fisttpl mov inc andl xlat or das cmp xchg add test sbb mov sub incl sub sti fs stos call and (bad) jae and mov shr xlat pop lds (bad) jge jecxz jbe cmp in pop insl jl (bad) rcrl insb adc push mov sub push lret xchg xor jl xchg inc sbb ret addl sub out enter push imul repnz ja fsubs jmp cld inc add push mov fs push cmp lods fsubrs sbb data16 fwait insb jae test adc pop fnstsw xchg jns scas xchg mov cltd stos icebp cwtl adc sbb ret fsubrl xchg aaa xor arpl in mov insb movsb pop add ret jno bound fdivl aad or xchg add mov (bad) scas imul mov lcall xchg jl add cmp add pusha and (bad) xor dec mov fist or movsl or or es and pop stos stc imul insl enter lahf js dec lret leave jno mov lea xchg (bad) fdivl shrl cmp mov rcrb pop in lret xor shlb pop (bad) outsl pop pop cmpsb insb (bad) js pop mov mov cmp push fidiv jns dec aam sbb repz or inc inc pop sahf mov in sbb std adc mov mov das rclb aad leave mov inc add fildll or cli stos push jmp push mov xchg pop fdivrp push scas push and push dec leave push mov aaa leave jb dec push mov cs jb bound or inc and rclb aas movsb push (bad) adc das sub inc mov pop push pop pop inc jmp jl test std fidiv loop lcall jge add add shr cmp pop jecxz leave xchg (bad) mov jae gs or push xchg jle dec cmp mov aad and mov lods enter lcall insl ja pop xlat sub push mov xchg pop sbb daa out repz cmp mov push push adc ja dec xchg add sub in pop cld mov mov sub mov stos nop sub mov popaw add jae lds ljmp jne jecxz mov push gs jb pop enter fbld or arpl data16 aaa dec inc jmp and inc fcomi inc and es xor pop pop cld cmp dec or cmc jp lahf in daa call xor imul mov aad in mov pop push cmp add add inc movsl (bad) fimul cmpsl es jle cmc jp xchg push or sbb and dec vmwrite nop xchg fsubrs cli int3 ja (bad) stos and push in mov push mov sbb jle inc jb hlt rorl sbb and mov popa lahf inc sub mov lahf (bad) pop ds inc rep jnp jo ret or push fisubrl lock imul fsub daa daa hlt insl or loop push add xchg push jns or xchg icebp mov sbb lods sbb lds dec add push sbb movsb adc jns cmp cmpb aad xchg nop xchg and cld mov in mov pop sbb daa mov mov dec or daa lret into cmpl fdiv add nop jg xor scas mov jne insl div or repnz push rcrb jle dec fiadd (bad) pop out mov cmp test lods cmp aaa add test enter fcmovbe in push loop push into cltd popf push mov int sub pop sbb (bad) mov and in lret ss sbb mov cmp in sbb mov pop (bad) out ror scas popa push fdivl fcompl and sub pop and xchg mov rcrl in in stos scas mov (bad) stos sbb xor cwtl jg mov int3 jmp push negb sbb fs fcomps mov sub or imul inc aas adc cmp inc mov mov lahf inc dec sbbl add pusha cmpsb pop inc jmp push sbb jle dec (bad) jo in mov mov inc pusha xor rorb adc adc int fs xchg push je mov push fdivr cmp sti out sahf push and sbb cmp dec mov sbb mov fisttpll push sahf jle sub cmpxchg lret lahf test ficom loop (bad) mov mov mov xchg cltd aaa fsubrs sub ret inc jbe test test mov jne xchg xlat hlt imul add jle leave inc sub aad test jle loopne jle mov adc jnp inc mov jmp push negl rcrb sub mov lods xor pop outsb jo data16 outsb mov mov and adc iret loop push jb and ss sub mov push jg (bad) aad test ja,pt xchg or adc clc mov in add lods pop xchg or pop adc sub xor cmpsb and xor jae add ljmp mov shlb popf mov or insb adc es in lcall scas jae xor inc arpl arpl dec lds push add jmp fisttp icebp adc pop jb fildl ret mov out jb and out (bad) mov pushf xchg dec adc ds es loop xlat test xor xor dec jo cmp cmc inc xchg pop mov test inc xchg pop mov pop aad pushf enter cmp push dec cmp mov xchg imul (bad) dec jmp mov fwait stos mov add jns enter sbb and mov fistp pop dec mov mov sbb lahf fadds push mov mov cwtl popf popa inc fs push ljmp in mov je cltd or jle mov sbb pop rorb aas sbb decb or lds pop daa pop sbb cmp jns mov adc (bad) mov pop scas dec push or inc into test fnstsw aam inc das lods insb push adc fwait mov (bad) push (bad) jno push add push mov jnp jns stos xor adc dec sbb mov or and lea xor data16 or inc sbb mov ss insl jno out (bad) neg add jb enter js xchg cs mov data16 fadds xchg jle (bad) cli and leave fisubl cmp dec ja inc dec fs lret int3 arpl mov push loopne xlat fstpt call dec adc mov inc cmc test pop and xor jno in mov mov bound stos pusha xchg sub mov lock movsb in jle stc imul das das rcl daa ret sub cli ja daa xor loope pop aas mov xchg cs or and les and dec xchg push or sbb mov xchg xor sti iret xor sbb test add js pop cmp mov pop cmp adc mov sahf jae lods gs inc int3 pop mov fdivl cltd movsb mov dec popf jge adc lea push clc imul sbb pop inc mov cwtl xor xor push mov jg cs scas adc cmc pop test fildll cmp jbe cs mov mov jge lods ret jae stos popf (bad) dec das adc (bad) push sub call pop fadds pushl bndldx fdivr xchg in sbb sub js xchg (bad) xor pop mov stos call pop pop decb out pop pop (bad) cmc mov imul push scas gs (bad) insl jnp xchg cmp push push popf xchg mov cmp loopne add repnz imul sarb mov dec adc mov sbb xor xor adc fdiv jp xor sahf mov xor test je in push xchg aad ljmp aaa ja cmp mov pop cmp push xlat mov and adc cwtl lret xor add loopne fwait add je aaa sub cli sbb aas lret push jno sbb imul js lods sub stos mov out mov sub mov pop repnz sbb mov (bad) mov insb out xor push ret lea es ficompl scas pusha inc dec repz sub rolb push je (bad) pop fdivp jge push mov and mov aas fmull fidivr repnz xchg mov mov mov js mov ljmp iret or push cmp push pop repnz mov jmp leave out pop xchg leave sub push sbb cmc jns aam ljmp and scas sub mov bound stc (bad) jb stos movsl shl push jo pushf push inc xchg lods lahf xor pop bnd pop andl psubb movsb xchg sub hlt cmpsb jbe loope pop mov ja loopne loop sub adc xchg sub out sahf pop adc xchg mov or pop imul mov stc outsb int3 loope je push jns sub xlat xor clc inc sbb inc pop cltd cmpsl stos cltd add push and sar mov pop sub inc adcb add or popa inc cmc push cmpsb lcall (bad) fcoml cvtps2pd outsl add pop shlb insl jl pop inc mov inc push ret mov shrl icebp inc jns add scas xchg sahf xor mov jns cmp movsl cld push in ficoml test sub push mov cmp out jge test sub lock hlt pop (bad) in push loope and dec adc mov cmp mov sbb sub pop jb push push pop xor sub addr16 or les loopne and shrb pop lock adc insb pop mov jmp fsts or push inc sub sti cld loopne (bad) movsb lods mulb sub imul divl xlat (bad) bound mov add daa add mov add (bad) mov int3 lea in and mov adc sahf cwtl dec jae ret push jnp pop rorl and sti lods das cmpl push xor adc jb xchg adc inc popa shrl (bad) daa sbb adcl shl popf jo les add test dec (bad) cmp lea pusha xor in stos ljmp repnz notb mov jne sarb xor (bad) push fmul sbb js cltd sbb (bad) insb sti cltd leave insl xor mov and sub add xchg fldenv sbb rclb lds insb add bound jne in rcrl daa insl stos mov in pop jecxz in push test mov mov rorl dec lret lods pop push cli push pop scas mov fwait mov or lock xchg aam inc mov in jge and sahf xchg outsb mov cmpsl cmp ljmp into xorb sbb cmpsl ret in mov mov adc fldt jo lret imul dec sub mov (bad) xchg addl cmc xchg mov inc mov adc movsl pop and push inc xchg sbb sbb push xchg hlt push inc jl xchg das (bad) mov clc aam sub or pop sub xchg fldl clc int mov pop pop notl test inc aad ficom repnz pop adc movsl repz arpl ficoml mov pop test mov xchg push sub or lcall jnp cmp pop jl (bad) jo adc mov or pusha fs sub lds ljmp dec jb iret adc stos fidiv std xchg aad jg pusha inc adc mov ja andl adc arpl jns in pop pop cmp adc mov fisttp nop pop push sahf test test cmp mov popa popa (bad) sbb adc orps inc mov imul jecxz mov jae jnp pop jb mov sbb mov outsb ja outsl xor or push push aaa popa mov movsb ja xchg movsb movntq mov cmp test push mov pop ret std add inc call lds dec out mov xor pop aaa sub inc aaa les stos xchg ss arpl (bad) movsb inc lods xchg push xchg lods xor or (bad) pop cmp fsts or dec jns test addr16 sti cmp das (bad) sbb xlat mov aas mov xor hlt or call push dec lea and jle cld data16 push nop mov mov xlat xor dec insl ds loopne inc jnp mov push push std fldl ss cmpsl (bad) mov mov fisttpll (bad) mov and xor cmp setp push sub (bad) pop fcomps cmp sbb sub imul orl push push and push in mov xor jno shr sbb sbb mov and imull je in push int into or cmp and cmp std andl mov and (bad) mov fldenv lahf stos dec (bad) js lods test lahf punpckhwd mov shll in or jl fdivl aam dec popf mov xchg ja inc sahf cmp mov mov imul or shr jne pop or push lock scas sub arpl push pop (bad) and and pop stc inc mov cmp and xor sarl rcll cmp andl out jmp jmp insl lcall push and push aam cwtl sub sub mov or adc xchg or sti repnz popf fcoml pop (bad) arpl fisttp or clc mov push clc js xchg hlt inc adc jae out sbb pop (bad) iret rcll gs sbb in in imul lea jo xchg xchg ret lret push cwtl pop call orb mov loope fldl rcll ss and iret jbe dec jp cmp insl fild push test inc or faddl loopne and lods pop xchg push pop (bad) in mov jp neg (bad) xor js mov lea sub or (bad) roll sbb (bad) xor push xchg insl bound jnp popf pop jb sbb xlat cld mov xor bound fisttpll cmovle sbb loop paddsw xchg mov out cmp repz ficom sub mov push sbbb int enter bnd mov das cmp in cmpsl stos popa sub dec int3 mov mov mov cmp arpl repz lods cmp mov add sub push (bad) popf inc or mov xor jne mov mov imul lods leave and jns jno les inc pop dec xchg dec hlt xchg sbb lods add call cli inc or rcrb sub mov xchg pop xlat or dec repnz adc out incb push lcall fildll xchg sbb adc mov test aad dec daa cs mov pop and or scas or sub lods dec mov aas (bad) imul inc push out dec push popf push push fdivrl dec lret pop sahf imul dec ret scas cli xor cmp mov (bad) add dec iret push cmp popa int push jle xor leave outsl push lea dec js mov lahf shll rol sbb xchg lcall imul imul lods push mov and adc mov adc sti std dec fwait movsb cli test push outsl lret mov popf xor aas lret dec fistl dec sbb in add (bad) (bad) ljmp ljmp (bad) dec nop jecxz cs xchg insl shrl push mov mov cli scas inc int3 xchg stos cmp sub nop mov outsl push inc cmpl lea mov cmpsb cmp lret cmp rcrl rcl in jg icebp mov xor cltd mov and lds (bad) ss dec mov stos sahf or sarb and int mov cwtl add loope xor lock xor fidivrl sahf mov mov (bad) icebp (bad) frstor ret sub lret ficomp jl mov cmp push push (bad) fdivrl or sub lcall rcl push rorb mov mov inc xor scas sub pop out das pop jp mov (bad) outsl dec pop xchg es jge mov scas cltd push dec push enter mov movsb aas fmuls test inc lods mov mov lcall in jmp pop lcall or mov mov inc sub int and adc clc out in aad pop mov sub mov and sub jg sbb out aaa add pop inc icebp movsb aaa push in or push and xor dec push cmp test jmp fildll mov notl lds cmp jecxz add mov rclb (bad) pushf sbb add cmpsl jmp xchg inc addr16 jae cmp xchg and sub or adc les and outsl repnz fnsave imull test xor addr16 pop in fwait dec pop lock push arpl sbb jae (bad) mov mov out andl cltd pop dec inc andl out aad pop and add (bad) addr16 fs outsb enter js lds mov jge movsb fcmove push xor fs jnp add out imul dec cld ljmp jge jns (bad) sbb hlt lock leave (bad) jle ja xchg aas pop andb and dec xor movhlps outsl scas pop add dec cmp dec scas mov stos pop and mov in xchg fcomps jecxz cmpl sbb jg dec lret pop inc cmp stc sub pop mov cmp ja mov pop sbb (bad) xor xchg rorb in dec or aad ret or jns or adc (bad) popf dec out inc cmp mov jo or movsb cli cwtl and push push (bad) gs mulb sbb es inc push inc aas mov push pop sbb aaa push nop ficomp into mov pop xor cltd xchg xor xchg imul jnp mov pop add mov (bad) hlt stos mov dec push adc sbb sbb jae pop push cmpb push or pop js aas mov xchg lds addr16 ror aas pop out fsubrs or cmp cmp dec sub aas jl and ljmp adc inc in lods mov (bad) dec in xchg jge les lds repz icebp stc or or cwtl mov rcr mov xchg movsb jb adcb test leave bnd leave outsb cmpsb jl xor mov mov add inc xor les jno xchg cld jp xchg mov or xor in cmp loop push jmp inc mov adc out loope fisubr roll divb xchg mov loope cmc lock jns fsts mov dec test sbb cmpsl dec fisubrl cmp jae or inc mov mov cmp or scas push lock xchg add in decl adc xor add adc (bad) mov sahf xchg mov xchg inc scas lahf mov test lea aam xchg cltd mov stc fistl daa sbb xchg adc scas ds mov stos shl adc pop mov dec jg cmp xchg mov pushf mov inc add push cmp or cmp test fimul mov pop push sub mov lods in xor das jb fisttpll mov fidivrl test mov mov pop mov insl call xchg cmpsb ret xchg mov mov mov xorl mov push clc nop pop (bad) jbe aad mov test mov inc xor mov mov pop cmpsb push mov imul mov adc adc lods xchg adc aas mov push call xor xchg or jmp cmpsl or or outsb (bad) sti jbe hlt lcall xor jmp aam mov (bad) out lods bound pop sub popa lds mov cmp jmp mov leave and xchg fadds cmp xchg jle inc js es sbb and and or add insb (bad) fnsave sahf mov dec fbld pushf pop test data16 fistp in imul dec sti call ja in lcall (bad) xor sbb out mov hlt cmpsb sub jecxz dec jle mov outsl mov lea mov addr16 gs inc ret sbb fisubl mov cmp nop mov enter je popf jmp xor inc shll jg mov and mov addr16 mov mov or outsb xchg jmp jbe (bad) lods cmp lcall je sub shrb mov into lahf fnop inc ja sti mov add or sbb sub inc out jmp outsb sub mov je in and pop mov inc dec cmp mov inc je jae adcl mov adc adc mov push jae cmp add ljmp xlat xor jmp scas hlt jbe xorb std add push mov cmp movsl cwtl sub sub push popa decb movsb lcall mov adc and or imul mov adc outsb lods enter push rclb jl aam test pop outsb inc xor mov or jo sbb imul mov and and test imul cmpsl adc push xchg lods mov in xchg test push movsb testb lahf and cltd daa fsubr addr16 test dec les dec cmp testb aam aas (bad) into jne fwait or mull and fistpll loope pop xchg mov inc jbe test push jl xor xchg fsubrs cmp imul xchg adc mov sub mov jecxz dec movsl dec lds icebp imul stc ret xlat mov mov je addr16 sbb cli out movsl lcall (bad) sub imul lea xchg sub scas jmp xchg out dec rcll stc mov jp jge sbb movsb sub gs mov into dec sbb ja in mov pushf or push adc lds xor in xchg sbb (bad) cwtl and es mov adc cmc scas imul mov xchg outsl adc pop fldl xor test fucom outsl iret jb mov lahf cli mov bound inc nop nop sbb push nop loopne or push pop jno push jne ja xchg sbb in cmp and adc xchg rcrl pop icebp push lods mov jle xchg insb jae std cmp test mov arpl in push mov sub mov mov sbb add sbb lcall xchg repnz inc dec xlat addr16 aam jle adc mov rorb push lods movsl mov mov pop int (bad) and nop mov sub mov jns fmuls xchg sub dec sahf jae cmpsl bound hlt sbbl aam mov or nop mov lea dec inc mov ret or int3 cmp nop jnp xchg aad pop in loope mov fnstsw cmc mov pop push push ret (bad) dec leave cmp add cmp xchg mov mov add pop test mov xor arpl xchg imulb add ja sbb xchg fisttp add andb jg fdivs lock dec aas or jb das leave cmp pop dec dec popa (bad) xchg jl int3 xchg call das inc orl or cmpsl mov into fwait xchg gs mov mov jge jg xchg in xchg dec or loope mov xchg mov sti imulb es jne insl cmp sub jmp ror jns movsb push lcall repnz mov inc out ficompl push out pop insb mov mov mov sbb adc paddsw imulb jg (bad) daa or outsb cmc xchg enter (bad) jno loop xchg xchg rcrl jecxz imul mov fmuls or add es xchg test gs xchg and jle jns imul out lret pop xor popa movb stos (bad) dec iret bound and push cmp stos les mov (bad) mov push cmp and shlb les jnp cmpsb sbb mov adc test xor scas push fldt rcl out jl rolb rcll seto mov test mov xor ja jno cmpsl imul insb notl mov incb stos inc add mov (bad) mov and pop notb test (bad) jmp vcmptrueps adc ds mov push jg,pt sti nop loopne mov jb enter mov and mov ds sbb icebp and mov aad cmpsl mov loope lods (bad) rcrb test xor add or push bound insb faddl in jmp arpl push es call mov dec pop ds rcrb les sub ljmp lret jmp inc xor insb dec mov lcall cmp jb sbb aam or cmp pop cmp and and xchg cmp cmpsb push jle lahf icebp imul jbe fs int3 mov negl imul inc jno mov lret pop pop clc xor das ja jne push sahf insb cmp sarl pop xlat push add lret xchg (bad) push lds andb add nop mov xchg sub aam sub adc setge add mov nop pop mov adc xor rcr cmp mov out pop pop (bad) sbb ljmp push out aaa dec cwtl icebp pop push mul stos movsl clc mov repnz lret dec dec xchg adc data16 jae cmp in (bad) xor inc xchg loope and sti jae pop enter adc mov pop adc or aad cmpsb lahf es aad sub mov sbb jno add das mov mov mov dec movups cmpsb and outsb inc out movsl movsl pushf xchg xor movsb (bad) jae into push orl sub cs outsb mov mov cmp adc cmpsl js cltd fnsave in jns cmp rcl push fdivs cwtl cmp xlat aad fpatan and movsb jle sbb xchg ss or mov fwait xor fwait (bad) mov aas rorb cmp lret push aaa jae js aad lahf rorb pop es dec and fcompl outsb enter dec nop fcoml inc sub mov mov loop inc sbb pop jne xlat mov (bad) jp push in add pop pop into adc in push cmpsl incb aad repz enter decl sbb cmp test pop and and je dec add sahf push xor push or jbe int rclb sarb mov jecxz pop outsl rcl cld sbb pop cmp jmp push mov cmp push add and add (bad) adc dec shr shlb mov stos dec imul (bad) addr16 jbe sti sub mov cld inc or ret cli jae jne clc lods int3 mov dec cld jb lods xchg dec add aaa xchg pop cmp lret (bad) mov mov xor mov dec fimul in lcall (bad) xor jae iret repz repnz out push pop movsb imul sub cmp cmp adc mov xor mov jle pop popa cmp imul jae in enter test nop sub sub inc sub repz sub cmpsb out stos sub pop (bad) mov repz jmp outsl adc push dec clc inc push push xor push xchg sub roll and push ljmp rorl les xchg cmc (bad) fdivs xchg lahf dec cs je mov dec mov mov lahf inc popf js fsub mov orl js xchg movsl dec mov sub mov mov int cwtl test sub mov push pop popa xchg jp sbb cli cmp (bad) (bad) cmc and ret scas popa aam lods pop xor sahf mov rorb jp lods arpl mov mov fistpll xlat call lret aad flds dec (bad) aas xchg dec and jbe push es xchg lds loop test dec (bad) xchg push mov out jle dec cltd xor fdivl cmp insl sbb and mov mov std or js mov lods daa stos push into mov fs jo or jnp jne cmp mov enter bound lea and jae movsl data16 clc (bad) cmp shl sbb mov or in jns jmp and mov jecxz pop sbb xchg xor inc lahf rcll incb insl or mov lcall inc push pop mov loopne lods push imul mov (bad) xor stos push and sub stos rcrl add push cmp and inc or dec add push mov xchg (bad) je mov and jp xchg ret shl mov roll inc ret sahf jl xor ds or sahf mov into shr rolb std cmp mov push loop pop and in jns mov mov rol ret test call shld lods stos cmpsb inc xor push adc fbld mov lds jl mov cmp rcrb into xor mov jb dec push or mov xchg (bad) cmp lock pop fild xchg mov and sarb fstpl jmp inc dec xlat xchg ljmp push stos xor imull lahf push (bad) fisttpl imulb stos and mov fisubrl lret (bad) stos dec jge fldcw pop add sub loope adc jp or mov sahf sbb cmp jnp sbb inc mov pop adc imul pushf lds adc and fnop shlb or mov add jp xor cli (bad) xchg les jmp push test inc stc cmp dec push mov and mov lock cmp pop sub cmc adc pop insb mov mov test (bad) push out xor hlt into mov popa les inc rcll mov test out jl push cmpsb (bad) and imul movsb test and xchg inc int mov mov rolb fisub aam jecxz cld sub jns adcl loopne jns mov mov mov movsb sahf out add push mov cmova cmp xor lret loop mov (bad) ror adc pop imul xor or sbb push outsl dec movsb jmp (bad) cs xchg adc sbb jmp sub push mov lahf popf mov xchg popa inc pop push cmp (bad) roll mov jl inc adc sub xor aam adc mov dec mov cmp addr16 adc mov aaa push jl pop add stos aaa inc sbb (bad) or or (bad) jae inc mov scas cmp xchg jl fwait pop mov cltd mov dec and mov jl ret inc mov paddusw js xchg lea push or jge aaa clc sbbb js out notb test jge push fidivl (bad) mov vpcmpgtb rorl push rcl pop out sub loop mov mov cmc pop ds clc test scas insl cltd push cmpsb adc idiv cmp mov pop xor xor push pop test xchg cmp push mov jmp xlat icebp dec (bad) fwait sbb lods mov jp lret xchg dec insb sub pop dec test pop dec sub cmc jle mov jl mov test dec test xlat insb pop stos add loopne lret (bad) xor jmpw cli movsl cs (bad) jno imul pop push lret sbb ret js xchg add add and mov sub outsb insb xor push adc std adc in outsb sahf imul insb cmp (bad) iret int3 jns xchg push popa lods xchg sbb jo imul cmp fldt dec jno sahf negb outsb out jle addl out mov sub xchg test add push inc push dec adc mov jg orl xor mov sbb cmp in and dec adc movsb bound mov adc mov xlat mov add lea leave adc incl les cmp sti fwait stc pop fnop adc (bad) daa insb lahf jle lahf jns in mov pop add je inc (bad) outsb pop mov cmpsb in xor pop out addr16 ja xor pop fwait jmp inc fcmovnu push rorl (bad) push mov jg in ljmp or mov stos bound xchg aam cmpsl fisubrl outsl dec sbb jmp repnz push dec and sub mov gs mov insl rorb mov popf or mov repnz mov dec adc cld lea or jg push pop dec cmc xchg cli add mov mov sub jg jle das jecxz inc sbb int3 mov jo sbb loopne xchg push cwtl (bad) dec and idivb aad clc push pop mov int3 int3 aas add es sub mov jecxz loopne pop xor (bad) lret pop repz subl (bad) lret jb test cmc arpl push jge popf mov mov ret stc call pop sub mov cltd pop es lret sysexit or push sub movsb ljmp test es mov mov scas pop jp outsb sbb imul add nop loopne insb dec leave or mov pop cmp pop fdivs jl aaa xchg sbb push insl imul das inc sbb push lret iret mov mov sti aaa sti dec std jae sub ja icebp hlt dec adc sub sbb enter cmp xor aad out nop popa stc loop inc cltd cld movsl or jmp xlat push addr16 mov insb lret push xor mov cs aad enter (bad) stc jg in inc (bad) mull inc subb add jb movsl out enter pop iret bound pop popa push dec xchg pop dec test dec ret daa sbb (bad) xchg dec mov jecxz stc mov xor divb (bad) xchg or inc sub leave in push fidivrl mov inc inc push xchg test add and mov out es lahf sbbl jg stos scas jle mov data16 jbe sahf push dec jnp xchg inc pop icebp jg (bad) push scas sarl dec mov add jle sbb fsubl adc or into test call push in adc out dec and fdivs inc je jg and rorl jb orb out ret or je jo cmpsl cmova sub xorl and jmp cmpsb add test stos adc mov nop fstl jb mov dec pop pusha mov lods or mov test repz repz repz dec mov repz fstl cmp or in adc xor push mov inc (bad) or sub jne pop sub (bad) sbb add clc adc test sbb inc test ja push mov adc dec insl rclw cmp or lcall cwtl rcl sub mov fs ljmp pop jns dec rcrl sbb inc loope sub movsl sub fsubrs shrl stos (bad) xor mov inc inc mov mov outsl add mov jle fisttpl and (bad) lcall (bad) jle scas mull pushf xchg add adc ret (bad) pushf mov cmp pop in (bad) loopne sub push movsl adcl icebp cld out cwtl loop or cltd frstor inc sbb pushf std mov add dec in adc push xor inc or sbb (bad) add rol push test cmpsl lds popa and aaa xor push dec jnp xchg dec fnsave out mov push scas adc fimull jne add cmp add cmpl lds mov dec mov (bad) lock push clc jg or mov mov cmpb push imul iret cmp icebp cmpsb mov cmpsb iret lods out in sub cmp hlt sub pop pop ljmp rcll cli mov mov dec out mov js movsl pop and into or inc inc in and ret iret hlt fadds mov mov jne popf aam xchg lahf pop mov (bad) xor imulb sbb leave xor enter mov arpl push jmp arpl push imul (bad) jb ds stos mov xchg shrl scas xorb cmc mov in jmp xchg enter mov push inc cmp pop out pop clc pop add mov addr16 sbb sub inc jge orl dec xchg adc in mov hlt inc fidivl cwtl mov pop adc cld push sbb outsl pop mov sub loopne jecxz dec inc mov mov pusha lods mov imul insb push xchg js (bad) mov dec out fstl inc adc (bad) loopne lret mov mov fisub cmp mov jb inc test jno and mov stos nop add pushf fisubrl movb sbb pop mov iret (bad) pop pop ret scas js mov mov sbb sbb leave cmp xor inc sahf mov mov add or mov pop ss jmp aad adc adc sub xor or xor mov mov int out pop aad test pop inc in std es daa hlt push sbb mov rcrl jle push xorb xor jno pushl inc push scas mov jno int3 mov push sbb add fwait popa repz jne xchg andl adc je xchg pop out imul addr16 xchg sub mul jne push sub (bad) repz leave jne push js out hlt lea cs add ficomp jne cmp mov xor fs das mov scas mov mov xlat jp dec push add adc push or scas mov lods dec pop xor or cmp add jmp jg ljmp fcoms push xchg andl push stos pop xchg das in pop shrb push mov repz mov mov xchg mov jp jmp xchg xchg mov inc pop inc add jge xlat outsl sbb ljmp gs jmp in fucom call lods (bad) outsb sbb repz cmp imul push mov mov add push rcll js adc xor popa (bad) mov jg in imul or pop fstpt xchg js mov pop ret sub sahf push sbb mov (bad) mov adc push xchg out pop leave lea in mov pop dec hlt imul rcl adc aas cmp xor mov (bad) out mov inc stos push xor mov mov cmc lret or js push rcrb mov daa loopne fiaddl lret fldenv js into sub pop in stc addr16 cmp mov (bad) mov bound jo jmp cmp sbb mov pushf sbbl movsl pop xchg pushf jae xchg cld inc mov xchg adc sub jle xor add mov adc out shrb lcall push inc mov outsb pop aad and inc mov iret or mov xor push adc pop (bad) js int3 jl xor xchg jb shr or enter int3 int xor jle dec dec mov inc or xchg inc sbb enter test ds fisubl shlb jno addr16 fildl leave jge pop out jb out je push aas loopne nop mov (bad) dec adc mov mov jo sub and (bad) cmc push dec mov cmp adc int3 jb mov push mov adc addr16 outsb mov cwtl fist scas pop push or into mov dec jle iret fdivr fidivr lret inc push fidiv andl cmp mov jbe in (bad) repz mov pop mov jnp fstp (bad) mov jb jo lock push push mov sub sahf ljmp (bad) repnz and or jne shrl add (bad) push loopne jbe sub jg push jb scas stc ds push mov and aad lret int3 xchg sarl and rolb pop aas psrlw cmp mov jne pop stc mov pop xchg in arpl inc (bad) test rclb ljmp or pop and test notl add loopne mov negl dec sub mov jge dec push pop aad cmp mov push push loopne pop testl lds mov (bad) mov push sub loop (bad) mov inc pop std fnop adc lods jo repnz jle andl stos stos (bad) push mov outsb pop adc dec ja mov dec jle and or ljmp mov (bad) xchg mov jge nop xchg mov out inc jge cld les inc push jle fucomip xchg mov data16 xchg xchg jle add ljmp xor pushf inc and and test cwtl mov sbb dec mov jge mov pop int3 pop and sahf (bad) gs adc push mov dec push mov jle inc (bad) out cli test sbb cwtl mov add push pop inc sbb sub pop lds or mov add sub pop xchg loop aam faddl pop ljmp mov ss push pop add mov sarb int (bad) popf cltd ret or mov jns fildl in mov cmpsb popl fnstcw pop jbe scas es jb hlt ljmpw pop inc mov jecxz pop mov iret xchg (bad) leave cmp js mov xor loope pop push cmp and xor ret pop inc das xor cltd pop jno mov in (bad) pop sub push jmp jp ljmp sbb (bad) int popf cmp xlat dec (bad) stos fs jo adc enter or cmp punpckldq jns jno stc loopne pusha xchg cs and fcmovnu jmp ret jecxz (bad) fs repz mov imul insl push ret movsb mov mov lds imul das adc xor pop in add sub test xlat sub ja jecxz in inc push mov (bad) dec mov dec xor (bad) pop pop sbb js or pop jl and loope gs in mov js sar mov data16 mov pop sub iret scas in mov fidivl in loop jmp jnp jnp jge insl loope dec loopne into jne es fstpl mov jno push scas jb or push ljmp xor loope in add or xor sbb lods fwait lea mulb scas int3 add int mov cld fldcw sti out and dec mov scas (bad) mov or je flds (bad) push testb sbb sbb mov popl decl adc lcall mov imul add add int3 rorb xchg mov and movsl adc mov and outsl aad sbb pop adc lds in ss mov addr16 and subl push lcall and sbb dec dec mov sub or cli push out iret leave int3 cwtl push xchg (bad) lahf scas push mov into loopne test push cmp mov sbb clc pop movsl cmpsl mov addr16 xor or pop mov outsb pusha jb aas bound addr16 or inc shll add out jl mov cmp jne lcall jo fs loopne dec fwait mov xor mov xlat es and sti aam push xor sbb dec aas mov (bad) mov jns and add cs jecxz lret mov or push jnp adc loopne push jmp (bad) gs jmp sbb js movsb (bad) mov mov mov jg xchg lods ljmp lods popa cmp dec and in inc sbb mov inc in lret push mov lcall pop pop rcrl sbb push lods movsl addl mov fadd mov mov xchg rcrl xlat xor mov outsb int movsl mov dec aam mov mov std ds pushf inc push inc mov loope jg and mov and mov inc icebp push mov sbb in js jo xchg push daa inc sub jmp sub ljmp les sti and rcrl jns outsl xor xchg adc adc fs mov out jno rorb sarl jg int3 rcll fsubl add sbb sub add insb fisub push jnp jne,pt fwait jnp hlt pushf jb fs mov mov add lock (bad) pop cmpsb test or fnstsw rorb xchg mov pop inc xchg jbe push xor inc pop repnz in pop fmul rcl imul les imul cld inc aas in outsb dec lock inc push cmp add in xor and mov xor sub jo loopne add jne scas ds push or mov popf mov inc imul stos (bad) jnp loop and cltd add lret lfs dec mov push jo mov daa outsb jns data16 pop xor rorb movsl mov sub pop push clc int xor shlb lods dec cmpsb daa pop mov (bad) mov imulb nop sbbl test jb repz sbb push xchg cmpl lret or mov inc cmc bound inc cmp or sub scas mov jecxz sbbl sub dec fcoml pusha or jno push jbe movsb add push cmc push jmp movsl or fsubs jns imul or pop jae js jne out dec pop dec sub mov enter push repz push mov mov xor inc repz les jecxz mov mov mov out cmpsb out push cmp adc mov sub pop inc xchg xchg rolb out mov leave push sub fisub lret ljmp adc dec cmp jae pusha cmpsl (bad) scas pusha in pop push mov xor shrl inc push inc or dec or push out and cmc adc pop loopne fwait mov ret jns es fnsave push cmc mov sahf insl addr16 ret sub and (bad) bound mov and mov ja xchg into subl sbb cmp repnz xchg fadds sysenter xchg repz rcl cmpps insb dec jmp inc sbb or push sbb xchg movsb xchg in ret add push pop subb adc jge into sbb sbb flds or pop sbb test and out ret pop jb jbe sbb sub xor ja jbe and adc outsb jl sub pop fnstcw bound (bad) jb cmp xchg int fwait outsb add das fstl popl mov mov dec xchg xor std sbb movsb gs mov inc loopne arpl mov aad lahf mov fisub push sbb jae pop test mov les sub fistpl in mov es pop xor dec mov daa mov cmp loopne fildll sbb ret jo cmpsl stos xchg or pop int pop cmp cmp lahf sub cmc pop loopne fidivrl sbb aas lret sarb mov mov sahf or imul xchg jae stos fsubrl (bad) test mov add aam push orl test (bad) scas mov sbb jmp shrb ret arpl movsb lea push fyl2xp1 repnz js sub cs inc sbb mov mov lds mov jle pop xchg pop push adc xchg inc mov and jno mov aam shll jg mov lods xchg cld (bad) icebp arpl jbe add jle (bad) or xchg lcall je pushf stos std daa int leave cmp int aam clc xchg movb sbb inc popa ss scas sbb adc mov cmp aas mov and jge inc mov into and (bad) dec js movsb push rorb test out fcomp cmp mov cmp push gs int aam stos outsl or jmp (bad) dec (bad) cmpl cs nop jb lret jmp cltd scas scas jb dec sub push sti jge arpl sub repz xchg jecxz cmp nop adc imul cmp and jo shrl xchg and jp cmp into lock sub or ds jbe push pushf cmp test mov dec xor test add mov fs clc in insl mov adc sub jnp xchg mov aaa mov into (bad) sti push mov popf jnp jmp pop int3 adc or sub mov imul inc pop inc leave scas xor or fs mov div lret lods std pop imul sub insb clc push leave or fwait adc mov adc pop test clc mov adc jae mov int3 push ret sub in je push dec mov (bad) sub inc ret lock pop pop lods ds push inc mov pop test mov mov fwait push mov ja mov out loope mov dec cmc push jb scas mov fs (bad) mov (bad) repnz loopne imul cmp (bad) fidivl (bad) ss inc ljmp adc sarb mov jne mov stos in jns push call dec xchg lret test or and ret inc pop out mov int3 pop (bad) hlt pop xchg push addb add addr16 pop xchg mov sti pusha or test sub inc xor inc mov sbb or out jbe shrl mov push sub push push scas (bad) bound mov int push shl add loope out mov addr16 out inc or lods mov repnz pop fstl dec bound or add xlat jne and mov icebp jne mov clc int inc pop cli jae xor push ljmp rol ficom loope ret mov out inc bnd test mov test xchg rcrb jno sahf dec test popf push dec aad jecxz mov pop push test dec jecxz ds or push sub flds data16 and in push xchg push pop lods mov in xchg mov pop in sbb fisubrl fistpll push cmp push js xor push pop push and loop mov js push cmp mov pop cmp lds mov pop mul xor dec fbstp stos rcr hlt test arpl sub (bad) cmp paddb std js push les adc and icebp pop stc imul xor (bad) sbb push xor lret dec stc aaa xor lock xor das fildl aas mov push inc aas std jmp aad imul mov pop imul xor push shlb cltd or stos dec repz add pop inc mov mov in mov loop jnp push adc pop mov jno add sbb and (bad) adc in lret je inc test fstps imul std mov je sub jp das jb rclb sbb sub mov or mov xor pop icebp ss xor lds pop movsl mov add (bad) xor xchg dec data16 out mov aad sbb or stc mov xchg push sub mov and dec cmp fsubrs sarb outsl push and jno push and xchg mov sub daa cmc ficom adc enter insl loopne insb data16 xorb pop js out sarb fisub ja pop sahf pop es xor mov lods pop lea mov jne lret xor dec aaa or dec and sub mov shl add iret jno sub xor sub jmp into icebp and inc sbb mov mov mov cmp ja (bad) outsb add addr16 lret out ret xchg push shr aas jnp xchg addb cmp jge adc imul nop push lea popf xchg lret dec inc jge mov lds sbb cwtl add popf inc pusha cmp popf adc cmpsb mov xchg adc sub divb and stc out push lock dec mov add shrl xchg push push add jbe mov sbb (bad) sbb jle and lret hlt dec sbb or insl sbb mulb inc sub xchg xor jg adc pop lea aaa fnop imul jmp xchg fist dec dec dec dec pop mov in xor mov inc xor pop and xchg cmpsl cli imull and and jl loop decl and sarl inc pop adc xchg test mov sbb inc push fwait push call into adcl and dec (bad) outsl xor aad add pop out mov lock je icebp jbe jmp mov push bswap pop iret outsb or repnz addl arpl or scas mov loopne js hlt sbb cmpsl dec dec (bad) scas in jne mov outsb (bad) ja push add jle mov sahf jl xor mov fsubl in inc daa and xchg inc (bad) fldt or loopne adc cli push cmp rorl and and push loopne pop cmp and out imul orb jge jl cmc insl adc cmp mov scas es xchg and jnp daa adc adc xor pop mov push and sahf xchg int3 out dec lea sbb pop call mov adc call outsl std jae rcll xchg es add mov pop dec cltd gs nop stc mov pop mov adc ja adc test imul aas add clc aam cld sbb pop inc iret jae iret out inc outsb mov mov push sub cli out push pushw jmp aad cmpsb cmpsb push nop push (bad) sbb xor xchg adc lock mov mov test pusha scas lods xor (bad) lea hlt dec xchg jp test ds pop ja xchg incl hlt data16 jmp (bad) data16 jne jns aad icebp mov mov add inc rol cmp dec into pop sbb sarl fldcw test lods into mov int3 lods and jle ror lds movsb or test cmpsb dec mov clc shlb pop push in adc inc adc fldt cmp mov add sti fcmove jo dec in cmp and mov sti shll jg cmp sbb pop pushl xchg push cmp mov imul lcall scas addr16 data16 (bad) ror rolb jp jbe subl fild and sbb movsl enter xchg sbb out xorb aas fldcw or and push jne dec cmp or xchg mov cmp lods push pushf sub pop (bad) mov sbb popa popa mov scas jnp mov and std jnp add push jp sbb outsl inc or shl or in and das call jne roll add push xor (bad) mov xor roll lret mov cmpsl adc movsb hlt mov test push das and lds and xlat cmp jns sbb (bad) pop xor imul pop cltd ret cltd sbb xchg pop mov push dec leave jg mov mov rclb xor sbb les and out (bad) xchg pop fs lea inc jg nop mov lods inc enter xchg mov fscale push jl xor adc push jnp imul aaa je stos stos or das inc xor jns and andl push xchg jbe test xchg adc ficom pop ljmp daa popa aam idivb and dec scas aaa jg pusha mov jae aad pushf andl negl dec cmp fs mov inc jb mov out stc mulb into repz (bad) mov jnp adc or fwait out icebp xchg xor fidivl pop lock stos push aas cmp in jg cli jae lcall pusha (bad) loope dec sbb sti inc xor shrl outsb sub test push repnz lock adc cwtl pop aaa and dec dec iret or cmp (bad) sub cmc popa xchg repnz dec pushf fcmovnbe inc lret into xlat adc orb (bad) mov mov or dec int stc push test idivl mov fidivl cmpsl fs sete sbb jb fistl inc mov lods xchg xchg xchg cmp fldenv in (bad) dec sbb mov inc and or xchg dec xchg rclb sub push inc xchg jle addl jnp pop (bad) lahf push adc pop inc std mov pop std jmp sarb inc xchg xor jmp lcall sub (bad) and out push or and sbb push loopne sub and adc mov mov jle popf rolb idiv out icebp pop xchg xchg insl push fcompl int3 (bad) xor cld ds lahf int arpl mov xor lods cmp scas add sbb jne and sub es xor sub dec shll movsb sti mov lret test mull mov push aas fild xor fidivl xlat adc sti xchg lret xchg shlb lock add dec xor in emms aas cs cmp fistpl mov xchg pusha scas mov cmpsb (bad) pop mov mov cmpsb pop arpl mov xor iret dec rclb (bad) aaa xorl (bad) shl pop in pop xchg ucomiss jbe cmp mov gs jge push lods pushf cli sbb jmp ljmp hlt jl test mov cmpsl adc test xor (bad) test jae xor dec iret mov scas stos mov and mov scas pop adc lods mov cmpsb nop fidivrl in icebp and iret push xchg fmul add fcompl (bad) aam cli test (bad) cmc nop (bad) out push pushf (bad) inc add or pushf mov xor adc cmp outsb cmp in inc add adc push loopne xor iret loop lret push iret sub ffree aam test mov fdivp xor popa stc lahf pop stos xlat in pop arpl mov popf scas xlat pop stc xor dec scas add sbb scas mov xchg (bad) ja insl pop test jne push lret and pop inc sub sbb jo and sub icebp jmp mov jbe xchg mov lcall push enter in inc sahf test add pushf jp (bad) push out sub sub call test jp inc xor mov sub stos add dec pop insl or (bad) sub jno bound push push push mov mov cltd inc (bad) push sarl adc shr pcmpeqb push dec mov cmp out test push js clc loope xlat ret ret pusha test dec hlt lret andl dec jne loopne adc ret mov fs add cmp sbb or add add es arpl out and lods shlb pop stos mov mov loopne mov xchg dec scas push add stos ljmp mov mov out dec jl outsb mov nop in pop sbb cmp cld (bad) cmp scas stos movsl loope pop mov sub loopne iret divl xchg or pop fwait pushf adc sub mov push je sarl pop sbb or rorb imul and sahf jmp jns mov sub or (bad) sbb jae pop (bad) jne popf mov sarl or pop cmp mov je das jle adc xor fadds movsl fistpl cmp lock xchg mov push lea dec mov fs xor lods xor lds cmc nop daa mov test insb xchg cld xchg fiadd (bad) fmuls mov and fcmovu jne loope mov insl cld mov push aaa mov movsb (bad) pushfw dec jae rcrl lcall jns add fisubrl adc mov or sub dec repnz add lcall in outsb push push jge cmpsl and enter sbb arpl lods sbb (bad) dec (bad) in cmpsb push fstpl push or je jge andl mov cltd out lret rcrb adc sbb mov jb nop js or out fistpll xchg das xor stos mov stos mov es pop lods pop repz mov and mov jecxz push bound mov test inc cmp push cmp mov jno loopne lea adc mov push or push cld adc loopne add mov subb enter or std jo sbb sub in push pop jno mov mov push add or pushf sub lods mov shrb and inc adc dec mov mov mov push jg adc int3 fdivl jg dec call jmp mov mov fwait (bad) fisttpll fcomip mov dec lea jmp mov sbb out loop jl (bad) jmp iret or bound outsb lcall imul inc or dec mov xor std push mov stc xor js sub mov ds adc out fcomps (bad) push inc mov pop cltd inc loop mov fdivr jmp jecxz xor or or xchg sbb cmp push dec int sub pop xor pushf sbb jge push into cmpl mov cld shlb xor inc mov sarl call (bad) jae test scas (bad) jmp in sbb mov xor mov imul fxch sub or in jb in arpl js mov and iret push loope adc cmp (bad) and sbb out push iret pop andb add xchg jp xor mov ljmp cltd push mov in rolb in sbb xor xchg rclb sub cmp sub loop push push fbstp dec mov xor pop and (bad) enter inc jo pop mov adc clc or ds outsb sarl push lock addr16 je std dec xchg cmc pop (bad) dec adc cmp test push jg dec (bad) jns lcall cld aaa dec ficom dec add mov stos incl lods inc sub push mov cmpsl loop add out mov xchg add stc jnp,pn inc lahf fucom jno mov and cld adc push sub hlt loop call arpl inc cwtl sub jno,pn adc mov lahf ret mov mov pop adc xchg je sub cmp fldcw mov outsb scas cwtl jmp sub notl push mov xlat faddp mov push mov fimul jge loopne cmp cmp loope aam sbb mov pushf mov inc push jne stos scas lret repnz fwait adc sbb or std ja daa mov lods push adc stc addr16 add aad inc add sti push push sbb das pop pushf mov add pop xchg and xor push test cmp sub dec aaa repz cmp pop push xor cltd gs sti stos or cmp mov stos mov sub scas mov sub in psllq loopew dec sub pop je or rclb sub mov dec popf in push dec xchg (bad) push adc mov cmp negl lahf cmpsl jns mov sti ret pusha cmp pop js out sub xchg (bad) or dec addr16 jne xor pop stos leave sub lea scas andl call sub ja insb cltd adc pusha outsb adc jbe adc jno sbb scas scas jg xchg iret adc mov adc sti insl jne iret pop sbb ljmp dec xchg xchg xchg mov (bad) std sub cmp pop pop add aam fdivr out mov xor icebp insl call adc mov xlat mov sub js mov das iret and in mov std mov push mul rcrl mov sub repnz lods xor (bad) test mov sub add cmp (bad) mov (bad) (bad) cmp (bad) dec push xchg mov jnp lahf xor jne push fdivrl (bad) xor (bad) gs sbb addr16 test inc lods aam pop xchg fs xchg or fdivl lret lock jg lods jmp mov sbb push push outsb and jle cmp jmp int3 scas mov sbb rorl push jle xor cltd cld outsl movsl popf xchg cmpsb pop inc fwait xchg in cs aad mov adc lds xchg cmp ja cmp inc mov nop cld test mov sbbb int pop pop inc push pop cmpsl cmpsb aam das mov cmp clc mov jb aam imul adc mov aas xchg jle (bad) pop push pop mov xchg sub and inc sbb xlat sti and sub enter dec sub pushf fisttpll out sub pop sub xchg pop outsb mov in xor jne jns imul lods or xchg aam xchg dec ss pop xchg lret and hlt es push ret jecxz movsb xchg insl mov add fidivl lods cmp dec mov aam test gs sub mov mov inc dec jle pop mov inc cmp mov out (bad) into or dec push popf sub nop ss aas push sbb or push push mov aas sbb and nop mov and stos stos add jns rcrb sbb xchg fadds lock (bad) sti sti xchg or sbb xchg push and push push mov scas out xor out xchg push mov rorb and pop int3 push movsl dec dec dec cld push orb xchg in (bad) aam pop sbb insl je cmp push push mov dec push mov or out sub mov mov mul sbb lret pop mov shl aaa mov push push cmpsl mov sbb jno les lods cli aad stos insb sar test mov xor ret mov mov nop into add cmp lods sub cmp bound sub sti clc lods cli out xor jae cmp scas imul ror popf push inc cltd (bad) mov scas cmp fsubrp aad cmp in inc aam xlat adc xor cmp cltd (bad) mov mov sub rcpps repz fnstcw jne mov nop inc add jnp out gs mov adc movsb pushl stos popf call dec inc in mov pop sub in aad nop dec lds push (bad) aam shlb cmc push adc pop fwait stos xchg in test pop and and add xchg push repnz push xor out sub nop movsb rcll hlt test add push lahf pop movsl lret jo mov callw inc leave fdivrs shlb inc adc addr16 fstpl (bad) call test es (bad) dec xor adc mov jne jae scas push mov cmp xchg lods and repz pop add into sbb insl and testl in adc iret mov mov inc outsb and cmpsb ljmp cmp out or sbb mov and cltd pop jecxz leave addb fmul out stos xchg aad in xchg movsl cmp inc jo jle sti jecxz or xchg sbb in dec je jle dec fidivrl leave pop std mov inc stos mov idivb int les inc (bad) loopne pop imul int3 mov pop jmp mov mov mov xor jge mov ja iret test xchg dec popa aaa call dec enter fldt les rorl mov cli nop mov mov push lret fcoms dec mov xchg fdivrl cmp inc mov mov sbb fnstsw adc out lret push in das fiadd out mov loop leave sahf and fmuls xor push (bad) loop in stos dec sahf cmpsb in insl aam div mov push mov mov mov push mov pusha arpl (bad) test pop dec lods dec clc inc imul mov mov cmp clc mov xor fwait jmp cmovns movsb xchg sub fcomps pusha jge jno cmp mov stos cs orl xor iret aas repnz inc xchg shl cmp jbe cli jle and lods pop and push pop es mov adc jmp in test mov and fmul nop xchg xor push cmpsb into add movl fbld push push sbb and test push dec (bad) lock mov jb push push cmp mov inc sbb movsb movsb and cmp (bad) sbb mov push push lods jns ret (bad) jae dec pusha call movsb dec rcrb jb jae sub add sub or cs cmpsl (bad) out enter fistpl jp dec cltd fbld jecxz in iret add pop iret in push push mov push lods scas push sahf (bad) imul mov loope in add xor dec popf pop fwait mov iret xchg mov fcompl iret or data16 add sbb fucomip gs es cmp repnz jecxz jb mov imulb adc call mov push jecxz jge jge inc mov je aas mov cmp jg adc in push (bad) jo rcrl mov mov adc nop outsb fmuls mov jo cmp and or test das or dec js addl sbb dec clc test add mov mov daa dec jmp imul and sbbb das sbb pop sub ret push jb mov dec cmp sub cltd daa adc push leave ss mov (bad) aaa in sbb lahf lds cltd dec jp cmp jge bound mov push pop mov xor clc push cltd ret or xor cmp pop clc shl js mov mov das aam lahf add mov xchg mov iret mov (bad) push fbstp pop adc inc lcall pushf cmpsl aam lods ja rcrb xchg pop dec loope pop add mov movsb test jbe adc stos in into cli stc jl xor cwtl add (bad) into push sbb fsqrt dec xchg sub cmp (bad) adc loope jnp test xchg ret dec jg add mov cmp inc add jmp scas pusha dec in incb les in daa (bad) mov sbb add stos mov add insb gs mov (bad) aad fcompl xlat (bad) sbb rorb cltd adc mov mov push insl stos sbb inc xor pusha mov int3 lret adc ret les jmp in ljmp shrl mov mov xchg fbld add mov push xchg mov sub push pop cmp xchg push mov mov dec pop sub pop sbb sarb push rcrb outsb cmp movsb and xor push xchg mov aaa sahf inc push inc scas sub cmp fisttpl cmp push mov lret dec sub mov sub jne lcall mov push bound jp in or and lcall ret push push lea jge (bad) jnp sub aas and mov adc pop mov stc (bad) mov adc pop mov fdivrs outsb data16 movsb jp jns pop lcall ror clc int or daa mov push mov repz vphaddubd sar jg mov dec je daa mov hlt push arpl jne add xor data16 push inc xchg and dec mov dec or push xchg mov xor xchg cmpsb pop mov jecxz inc cs je sbb lods aas pop repz sbbb cmp lret addr16 jmp xchg dec mov fnstcw push loop xchg dec or (bad) lods dec addr16 push das or add (bad) pusha sbb shll jge mov inc jecxz aas hlt mov int3 sahf repnz aaa cltd call pop cmpsl cmp in insl popa mov sahf fs cmpl xor (bad) out cmp nop push mov adc lret jno dec jecxz cs add imul xchg mov xor mov mov xor push lock gs xor sbb xlat ret dec jns aas lahf pop push add insb sbb mov (bad) out ficom mov jge lods sub pushf ljmp aad mov xchg mov adc icebp push jmp cs aas push hlt test decl xchg push fcomp test enter dec xor adc jbe xlat xchg dec flds shrb jl dec test xor popl mov out and sbb or in aas pushf mov push daa pop and sub adc jge jecxz mov scas lea loopne jbe es sub jbe pop pop insb xchg jmp dec mov insb nop mov sub push arpl sub jne mov cmp rclb or xchg shrl xchg (bad) jns fisttpll psrld out js pop faddl std imul fstp inc inc xor (bad) leave dec scas lahf aas mov xchg push jg push jb jmp loop dec test leave mov cmpsb add sub mov or (bad) mov (bad) fisub mov fdiv lea js mov cmp (bad) push add out mov out sub loop ds (bad) fsub aas adc push xor xchg push dec call mov lret fwait mov divb in pop mov shlb sbb arpl mov sbb (bad) leave (bad) loope mov and jno imul dec leave push push daa mov adc imul pop mov dec rcl mov add jnp add lods inc aad nop (bad) in adc or mov jle adc dec adc xor dec insl test fwait and (bad) ljmp je and fsubr mov cltd arpl loop leave fcompl jecxz je or adc mov in mov or aaa jae mov enter jl cmpsb dec lods and mov sub iret mov mov (bad) (bad) icebp testb addps ret std push xchg pusha mov push test mov cld cs out jmp cmp inc and xchg inc (bad) mov (bad) xor xor (bad) xchg iret or cmp test (bad) js daa in repz add cltd nop rorb mov je call adc jp inc add fsubl rol call idiv or mov int lods add inc sti adc ret into adc out repz test cmp jnp imul adcb imul dec mov and jl xor xor mov aam mov aas add inc cmp sbb enter loope cli cltd test in sub sahf cli int dec sti inc sarl in (bad) (bad) sbb xchg cli jmp aaa jl (bad) repz or push lods dec popf inc dec fs mov das outsb jns inc mov add jp stc adcb sbb jle (bad) pop or iret add out push mov lods dec mov movsb repnz jne shrl test jmp and fcmovnb mov xchg imulb add ja dec test bound test or rol (bad) cli xchg and addr16 add ret fstpl mov xchg push cmp jo xor (bad) mov cmp stos and dec outsl call out inc sub pushf clc jmp fwait pop imul and dec mov inc cmp addr16 add xchg loop push in cmc mov ds mov jae inc imul and dec (bad) ja leave movsl stos dec mov (bad) mov push aas sti xor dec xor dec sub sub and stos push cwtl fwait mov out lock sub push mov cmpsl cltd cmp imul fdivrp je or inc or inc pusha xchg aas sbb fwait and push dec xchg icebp test (bad) mulb cld jo out inc out pop adc insl mov rcr das xorl hlt pop and aaa ret scas push aad out data16 js neg sahf jle cli inc int3 fisttp adc fnsave mov decl sahf and sbb in mov cmp ret or cmp cmp mov enter loope and push (bad) stc or jne je rcrl rcll pop inc scas mov std dec push out imul mov movsb sbb pop fwait loop pop jo fldcw mov mov pop fdiv notb shll scas mov pop adc jae fstps data16 into xor arpl sub dec push mov test cmp (bad) sti mov push xor sub jl lret testl xor mov (bad) xor cmc out jbe loopne out leave hlt js loopne fisttpl rcl xchg into mov inc adc push cmp icebp xchg rol push jle clc mov mov jno mov xchg mov cmp mov test daa pop xchg out adc mov or (bad) in (bad) pop and cld jae cmp into jmp leave (bad) je je sub int stos in sub mov je push sub (bad) gs cmc js les pop pushf xchg dec out lods outsb push mov mov and sub sub cltd andl addl inc inc sub sub test jne sbb xchg mov pop adcl xchg (bad) ja (bad) and sar dec inc fildll mov xchg fisubl popa cli pop ss icebp inc scas (bad) adc (bad) cmp lea movsb aam inc mov lcall mov sub sub fldt sub pop add fisubrl cltd mov or add pop mov pop push lock iret and idiv dec fadd rcl sbb dec push movsl mov pop fwait xor subl xchg negb test pop xchg push jg mov fisubl scas fistpll gs sub (bad) jae popa jo fimull xchg adc pop sbb adc cmp (bad) jl adc imul mov xchg in xor fistl xchg pmovmskb sti dec jns mov add (bad) or aas outsb inc jecxz (bad) js lods inc push lcall aaa push loopne loopne popa or or ret rcrb jp adc jmp cli pop mov jns out push or add sbb lds cltd xchg rcll loopne push xchg mov and push andl fdivr dec popf xchg fcmove cmp push mov adc cmp sub mov dec mov popa ljmp mov push jecxz outsb inc pop pop adc mov push pop inc fmull es pop bound in ja mov sbb pop cmp or lret ss xor aas jbe push rcrb adc xor std repz inc push xchg xor jnp cld stos xchg cwtl daa ja cmp mov pop push ds adc mov rcr or repnz xchg jp jecxz and and into pop adc lahf std clc in push test sbb pop push sub lds cs dec aad cs mov orl mov dec cld adc and xlat dec inc mov pusha xchg sbb lcall test insl cmpsb icebp cmp add jle ljmp (bad) mov lahf std or gs push sub mov xor cmp popa cmpsl or add add xor (bad) mov xlat push sbb mov lret or xchg push arpl icebp cwtl cmp repnz jge dec mov adc mov sbb (bad) ljmp fadds cli cmc pop mov int3 pop adc or les adc dec add sub sarl (bad) adc loopne or rorb pop insb and push cmp xchg dec ret jae cmpsl arpl cmpsb inc imul and dec adc fwait push and pop or lods xrelease iret mov adcl cltd sbb ror (bad) sub mov out in xor data16 add ljmp inc add or lock xchg aas xchg scas mov jp cltd test fisttpll cmp sub int dec lcall lret fwait (bad) outsl dec fisttpl jle pop sub lcall cmpsb xchg mov dec push jo sahf out or push cltd int3 pop fimull xor or das cs push jno dec xor or loop dec push loop fidivrl out pop adc cli clc scas pusha pop in pop mov mov insl cmp fdivp inc testb push cs fwait pop (bad) icebp xchg sub icebp std sbb xlat pop lock xchg repz ds test mov mov mov or and leave les add inc pop mov stos and pop lret ret aad push cmp push lret ja jl test lods mov outsl rcrl test int add test xchg pop adc push out mov add add and sub mov aad sub cmp pop push mov and imul out pop sub dec sub pop adc cmp cmpsl int3 loope add xchg dec inc popl lea ljmp mov popa repz sub cmpsl add fisttpl rolb add in outsb sbb or adc cwtl adcl mov aad cmp inc sbb bound cmp sub loope lret cwtl jg sbb sarb xchg push inc pop dec pop pop dec mov mov mov sub scas mov std dec dec mov lods repz xchg pop push sbb mov rorb rorl nop js cli mov in ds adc xor jp cmp fldenv lahf add fmuls xor push ret cmpsl addr16 xor push inc jae scas arpl xor lret les cld sbb lcall (bad) sbb sbb sub outsb fwait add mov xchg cmp movsb and pop add divl fisttp mov out call xor add xor mov dec repz mov xchg mov lea lea ss out movsl fbstp test cld adc mov and fldenv out adc push cld pop sahf mov xlat out jb insb add jp loope je mov leave xchg add ds xchg rorb (bad) adc es sbbl shrl stos push mov movsl jnp inc mov (bad) mov push push sub inc fistl lods gs insb bound int mov shrl and lock flds pop scas inc and xor xor xchg pusha (bad) cld push (bad) mov movsb push sbb push pop test je (bad) pop cs lahf dec or outsl movswl mov add out and cmp popa mov movsl (bad) mov ja insb jo mov push hlt pop mov dec into mov stos mov out jle mov mov xor inc adc lahf ljmp test ss pusha sahf int sub add pop mov inc lcall lcall dec scas daa fisubl pop jle pop movsl int push sbb push mov out loop or lret aam mov cli fwait (bad) and std fadd fiadd mov dec loope into mov xchg mov imul scas jecxz sub (bad) xchg sub cli dec pop int3 icebp sahf cmp int je dec cmpl and movd outsb (bad) out inc mov xchg (bad) mov iret outsb stc cs push (bad) mov sti outsl repnz jnp or sahf sbbl mov ret inc mov faddl shll lods into push or inc add lret and iret das in xchg (bad) add test xchg add (bad) bound xchg xchg js rolb ds add popf es mov jp jge mov inc fsubr dec movsl out cmp jle aaa jns es mov jbe out (bad) cltd lret rcrl pushf imul clc movl inc outsb (bad) popa xchg dec test cmpb cs loop and adc xchg mov icebp data16 scas mov aad loop dec cmp mov lods (bad) mov cltd bound mov cmpsl sub rcrb frstor int andb call test jmp das push (bad) lock ret ss daa jbe int3 mov cmp push and xchg jnp fwait cwtl jb (bad) cmp (bad) dec fldenv inc jg lret push repnz sub pop imul lds int3 (bad) imull and (bad) xor xor sbb cmp loop roll or int3 mov sbb loopne subl cmp popf inc insb add cli adc cmp test fisubr xchg cltd xchg gs mov sub gs xchg leave push push pop push gs pop cmp adc add idivl mov ficom push cmp xchg pop inc enter jne insl enter jecxz es xor sbb push cmpsl sbb lahf clc sahf jmp stos inc fmuls test hlt ja jg jbe rcrl xchg fincstp cmp mov stos cmp cmpsl test movb sarb loope stos add jo je pusha mov and xor pop fld cmp xchg les call scas cli xor mov xor shlb aaa mov jnp sahf add mov (bad) jmp in dec data16 mov cmpsb lahf stc ret pop gs jbe jl fsts xor inc push shrl xchg mov imul fcmovu aas loope movsl mov sbb dec repnz pop cmc fisubrl or jo sub (bad) aam sbb adc sti adcl movsl leave jecxz insb jns out popl dec iret push test test mov jo pusha (bad) std pop pop dec out mov sbb mov daa cwtl and fwait xchg push daa xlat mov rorl aaa pusha bound jns test leave lea rcll dec and mov (bad) pop mov ret insb ret movsl jbe cmp (bad) xor (bad) fisttp shlb mov pop pop cmp sbb insl in test pop sub sub lcall scas push jne xchg fbld pop mov rsm adc dec cmp out inc cwtl movsb subl popa mov sti mov out cld ret test call push cs imul int3 call les aam mov mov fisttp leave mov push daa jbe in pop jb inc sbbl or ljmp sbb repz jne stos sbb push adc or pusha cmpsl in xchg rcr pop loopne cmp mov inc pop das scas out (bad) and pop add inc cmp in add fldl or pusha cltd das outsb mov or xlat mov or adc xchg das std out fwait inc jns sbb ja in cmpsl add lcall inc leave push adc data16 inc je pop dec sbb dec out stos xor imul rcl adc jg imul mov inc xchg inc sub jns scas cmpsl mov in int pop add or cmpsl mov ds inc mov aad dec inc jnp pop in and mov sbb enter pusha jmp dec inc es call sahf (bad) fsubrp dec stos sbb lods movsb cltd dec pop xchg cmpxchg outsb mov dec add cmp int roll mov int3 mov cmp sbb or inc dec jecxz out fiadd pop jae daa in mov sbb push out shll add ror mov add dec push repz dec out mov popf ja scas aaa nop pop sbb nop mov int jmp int3 testb cmc es xchg add jge xor inc inc mov push scas sbb mov in fs ja mov mov fsincos out sub clc les rcrb sbb std cmp loope cmpsl arpl (bad) shrb scas and dec push mov das add loop hlt push (bad) sbb fimul in sub pop mov sub push mov imul adcb xor sti sbb leave sbb sbb jmp popf push xchg ljmp loop sub les cmc enter mov or lcall cltd imul lea adc cmp mov (bad) dec jle iret xor lea stos stos sbb and mov test push dec jmp dec shll (bad) scas or (bad) sbb sbb and lock sbb popf dec clc and sub mov sbb dec cmpsl push lret out cwtl cld cmc adc int (bad) imul jns xor sub jg add adc scas (bad) mov cs push imul addr16 fs int fnstcw jp push pop bound movsb jecxz rcr mov fild es (bad) aad mov xchg add vmread pop or add add push loopne loop into dec adc mov add in cmp out mov cmp push pop idivl shll fcomps or int3 sub test test jmp les add (bad) mov cmpsl pop outsb ret dec mov cmpsl ss nop fstpl add out inc pop iret (bad) xlat push add popf ret push inc inc jne aam aaa push repz data16 jbe arpl adc in fidivr jo out cmp stc adc mov lcall cli enter sub out in std popa jge and (bad) jecxz push push in or idivb sarl dec mov lods es test mov mov inc fidiv xor mov js jns (bad) imul lods push (bad) fwait mov xchg adc out rcr mov subl shrl push arpl xor xchg mov insb test into mov pop mov scas inc mov cwtl adc push loop fwait loop mov push jg loop inc adc leave and mov stc inc pop aas cmpsb (bad) adc imul pop push push (bad) loope push in mov out xlat adc cmp int outsb mov cmpsb push mov mov adc jb,pt inc push dec lahf stos test sub mov ret iret adc or shlb int mov cltd loop loope (bad) jo cmp sbbl pop and ret mov xchg mov xor or rorl cmpsl cmpsl idivb pop movsl jl idiv push cmp stc push push (bad) pop cwtl mov aas sbb (bad) aam xchg adc ret sub in in pop imul add jo sub test scas dec mov cmp rorl in outsb fwait xchg add iret push gs cmpsl inc leave jle lcall les jbe xchg lret cli cmp jb jno jg fild fsubrs push popa fnsave cli cmp les test adc jne mov out rcrl and and mov cmp outsl movsb pushf stos (bad) sbb jne test mov dec aam mov loope adc inc (bad) ficom stos int3 ret sbb lret pop push cld pop ss pop lods notb push sub cmpsb fisubr jmp sbb test sub xchg stos sub mov cli sub pusha adc pushf shr aad repz je add loope loopne sbb roll mov mov mov movsb cld adc mov ljmp daa lock aam das ret insl scas mov nop lock js dec sti cmp hlt cwtl lahf mov cmp push add scas cmp rdpmc stos pop ret sbb enter aam push sbb xchg push ret rolb mov sbb imul lret out dec fdivs in sbb cli (bad) stos fs lret pop ss push rcll and xchg dec jp cmp shrb in rorb push jmp or xlat or leave imul push stos mov add jge xchg ror mov xchg jp mov loope dec or adc nop mov xchg fptan mov push dec pop (bad) out (bad) cmp jo push xor inc push (bad) jb inc in sbb dec ds mov xor sti jecxz decl mov jno (bad) cmpsl dec dec cmp pushl imull aam dec xchg iret int jne jbe xchg mov mov sbb mov (bad) aam jnp ja fisttpl add mov pop mov pop jbe subps mov mov daa xor enter ret rcrb outsb imul repz loop mov xchg adc daa ret shlb push inc pop lahf mov fsubl xor movsl sbb adc adc mov and (bad) jno mov imul fstpl scas (bad) pop lock (bad) in fsubrl jae sub call lods xchg or idiv xlat push adc and jmp push (bad) sbb hlt dec pop sbbb xor pop fist mov inc into mov ficoml push ret inc mov dec enter dec cmpsb inc inc and cmp dec mov inc iret jecxz adc (bad) and ret fs cltd ficoml or pushf outsb pop int3 dec pop xchg test sub mov mov mov dec insb hlt push sub cmp out mov cmpsl imul push jno movsb in add jae xchg leave mov inc cltd jge (bad) pop bound lods sbbl cltd aas xor lcall aam aad lret js mov aam mov add (bad) cltd lret inc stos testb cmp in sbb mov jne out adc sub and sub inc mov imul mov jb pop sbb xor es and test dec mov pop cmpsl in xchg aas xchg mov idivl lods and dec or cmp and mov xchg int3 pop das stos jne jp or test aad test insb cmpsl push cmp sti and fnclex sub stos js pop insb mulb popf xor sub sbb xchg lods xor sub test sub push repnz out (bad) adc cltd bnd push jo cmpsb sbb add es cld popa loopne (bad) in pop jb test addr16 hlt lcall in mov push jecxz xor shrd adc int3 push stos pop mov lock pushf pop push sub ds arpl dec or enter dec cs popf lock pop out into jno mov cld repz adc cmp sahf jne scas inc lods ja add out sub out aas mov xchg popa (bad) mov (bad) es clc sub in loop rorl cltd ja fisttpl into push iret mov push xchg xchg inc or jne adc in cli lcall outsb and clc mov call insl fwait mov pop fmul les aaa sub mov iret (bad) pop dec mov pop xchg push mov push jp je (bad) dec pop inc mov mov jbe pop mov mov push or mov sti rcll shrl or hlt mov and or mov negb and mov sbb adc mov cmp std adc or or xlat mov neg fdivl test and leave out stc add mov sub (bad) rcr notl mov imul inc cmpsb xchg sbb mov xchg jle lea xor jecxz pop xchg ret mov cmc scas mov xchg inc push sub cmpsl adc popa xchg addr16 mov mov jbe push xor cmp sbb gs imul mov aas jnp xchg pop imul lcall mov rcl cmp jg sti (bad) fldl or sub cli mov dec xor imul jnp loop or push les dec sbb push imul ja jl loope popw mov or mov cmp movb aas lret (bad) mov sbb dec test cltd jmp repnz imul aas je iret aas xlat or adc out iret or xchg (bad) sbb add sarb xlat lret dec push lcall jo sti add mov (bad) (bad) pop lret fcompl and jo or xor mov xor sub js outsl xor fisttp xchg sbb pop bound push rolb imul push lods loopne cmpsl movsb mov sar clc lods lea lock and (bad) dec mov and test dec test add add daa lock movsb subl bound sub pop mov aam (bad) stc push mov pop jb push jecxz add (bad) pop cmp inc (bad) jmp jg pop xchg push enter or inc and xlat adc hlt lcall cmp jecxz dec ljmp (bad) dec imul sbb arpl lea popf sub lea push xchg add xor sti cltd jno jl lock mov popf test mov fwait or pop arpl outsl jne mov or push flds shl frstor fisttp bound clc dec mov inc popa jp fcomps das sbb or cld push iret call rcrl in bound cmp (bad) mov ss in mov in mov push into push push shll in xchg loopne dec lods repnz push jb cmpsl mov sub jle and scas or incl jecxz xchg xchg xchg sub flds push dec out adc inc ja in outsb adc pop repz xchg push scas imul dec mov insl sub jno insb add lcall pusha add or (bad) ja cli pop test push pop inc jne arpl inc mov std add sbb popa cld iret addr16 adc ja mov mov and pushf xor adc xchg and pop sbb (bad) lea push call arpl stos pop jle and jmp fildl lcall (bad) add lock rcrl inc cmpsl xchg rolb or out mov into in cmpsl les mov loope cmp pushf fild inc push out jno cwtl mov fldl2t pop jae push test dec je sub hlt sub xchg jl xchg push mov adc jae inc cmp icebp lock fsubr jecxz std cld inc mov pop mov sahf sub (bad) (bad) stos nop fldl mov add (bad) sti lret mov lret and imull xchg xchg stos mov int3 sarb push enter (bad) jne je inc (bad) pop mov xor cmp inc jg fiadd dec add popf out fcomi pop xor mov (bad) or ja test jecxz jnp fldenv sahf enter and jecxz notb mov mov xor (bad) xor xor jl cmp xor popa ds into leave mov sbb lods scas push lods repz mov (bad) mov outsl or cwtl push xchg mov ja out jl sub inc sbbb adc div andb pop inc cwtl xchg lahf (bad) bswap repz iret sbb std cld (bad) sahf pushf out dec jle pusha xchg in rorb or push fwait add or pop push mov sub jo addr16 das popa inc fistpll (bad) jnp (bad) add sti lods popa iret cmp jnp jb (bad) lret ss jo pop lret in fistl and add out mov test lret incb xchg sbb or mov es and xlat clc cmpsb aas shrl sub jp aad and cmc mov pop sub popa in jbe in in and jno xlat jg cmp test (bad) xchg dec sub mov ret hlt cli pop cmpsl insb push xchg pop rorb test add std cmc imulb jae xchg in fadds jae xlat inc xchg mov fidivl cwtl dec xchg test iret inc cld and sbb dec or xchg pop jge (bad) out bound add (bad) iret xchg jmp add stos push dec jno sub ja lock sahf rclb pop test sub mov ret or inc nop scas aaa xor inc xchg fldt out test dec and xchg daa call in (bad) bound push pop inc ljmp add fistpll stos hlt fwait (bad) inc test test and push mov adc hlt notl mov mov (bad) fsubr sbb xor cmp inc rorb lret lcall popf or push rclb (bad) push mov sahf aam (bad) ja sub fadds adc pop pop test adc dec sbb push test dec sahf mov add sub or or mov pop mov pop pop lcall cmp (bad) push test movsl and jne ja cmp sbb ret adc into jp mov and sub out adc mov sbb push xchg fsub popf jle mov outsb mov (bad) push lods cs je lods push mov (bad) mov out es lods xchg ret sahf add mov inc ljmpw adcl outsl jg pop aas mov pop scas fiaddl and pop das pop sub incl jae int3 icebp test mov push mov xchg or sahf ljmp sbb cmp jmp jb mov mov sbb (bad) mov mov xchg mov ja mov mov push xor dec pop aaa push pop pop fcmovnu xchg pop or xor push scas sahf imul ret sub sub inc (bad) jg aaa cmp pusha inc testl cmp rclb mov iret clc and out bound sarl pop mov mov das or lea dec repnz push int3 add dec xchg addr16 push fs aam mov mov fwait adc pop lock inc fwait icebp loopne test inc lret cmpsl mov mov fidivl loop sbb sbb (bad) addl dec xchg test aaa mov add xor cs xchg add jg test je xchg dec das push popa imul or xchg push sbb or and pop adc mov and lcall xchg (bad) mov and xor and cld mov push popa cs dec lods fildl imul xchg aad shll ret test outsl cwtl sbb mov lock aam add cmp pop stos mov push mov pop ja pop mov push jbe fdivrl sti jo pop fsts (bad) stos std outsl push je jns in decl repz mov inc in sti (bad) and mov repnz mov imul lret cmp lcall adc stos in pop jmp ss xchg sahf repz push jmp dec cmp dec pop adc push dec call aaa lahf xchg sti ja adc leave and cmpsl fwait mov jmp xchg mov xor sbb scas add adc int iret ss lods add cwtl bound cld imul mov pop and adc lods add xchg jns decb out test stc in pop in mov insl leave cmp cmp pop sbb ljmp and or xchg jecxz nop inc sbb out inc and push loopne fdivs cwtl in xor movsb dec fwait mov icebp les (bad) mov adc fdivl ret subl inc movsb in icebp movsb inc sub push mov js aas popa sbb mov test ficoml inc xchg (bad) cmp (bad) ror pop jb jecxz mov mov imul mov pop jno aas aaa in jbe sub enter push (bad) rolb adc adc jno jle,pn xor call cmp cmp jbe (bad) cmc mov imul jbe mov aas dec andl xchg ljmp xchg aad fs jae push add movsl push or push add out sbb aaa push imul sti stos out fwait jnp push test outsb pusha (bad) jns out xchg test mov js lea dec xor jg sbb pop outsl cmc xor add arpl mov mov cmp xchg push (bad) (bad) mov inc push pop sbbl sub stc mov les in mov notb jno popa mov std dec idivl cli stc sbb outsb nop pop pop sahf cmp push xchg and repnz push sub mov cmp pop test div leave jb xchg jnp (bad) jno out mov or lahf sti fdivr add sub mov and das not inc or out sarl lret lock adc pop dec int cmp in add insl jbe dec test push dec pop pop xor sbb loope (bad) push or out leave jmp rol daa cmpsb xchg pop jns fs pop test pop outsb inc enter jge xchg orl out and mov adc jmp (bad) lock sub mov test fidivl dec aaa pop addr16 inc add scas mov loope sub das in pop out mov mov das fs repz pusha shlb and pusha add lret shlb and inc aam mov sbb mov clc mov insl out pop addr16 insb cmp fwait sub jl out push mov adc rcl xchg push arpl js xchg inc cmp pop insb sahf adc pusha mov cmp into xor xchg loop clc aaa shrl jne popf jmp negb dec dec sbb movsb inc sbb sbb pop (bad) jae mov and adc rclb pop out or sbb insl sbb cmp fstps mov int3 pusha push cmp mov jmp push xor (bad) scas jae,pn enter cmp fimul push hlt mov mov and mov pop test mov imul adc xchg mov mov cwtl mov loope ret bound jl jle popf mov cmp scas push loope gs je cmp sbb adc std sti mov lods xchg (bad) mulb mov aaa test pop xchg mov pop jnp xor lcall into fucomi insl or test pusha jne mov insl and xor or sbb cmp aaa mov loop sub sub mov push in je dec shlb push subl mov lret test scas lods or adc call sub push fldcw pop sbb xorb in (bad) pop out scas sbb cmp sbb fidivl jmp xchg outsl loopne lahf inc adc dec xchg pop dec cltd nop jecxz jnp add xchg cmp mov jecxz orl adc pop mov sbb push and mov loopne data16 mov arpl pop pop mov or inc sub adc fildll test xchg insl les arpl jno lahf js adc sbb adc es adcb mov jne mov pop add stc jmp sbb call or sub dec inc jmp cmp mov push sbb lcall inc pop cmp fsubrs jne or (bad) jb ficom iret (bad) sbb insb lret add or clc cmp sub or adcl push andl inc sbbb pusha or mov cmc test mov addr16 adc jl mov loop xchg cmp inc and add fld adc fs daa aam pop and add pop jge cli ret stc jo mov and dec out sahf stc lahf xorl je test es test clc sbb imul pop (bad) inc je cmpsl pushf pop adc lcall jne loope (bad) jecxz ljmp in (bad) and xchg jns jmp mov repz incl mov arpl imul dec mov mov jg stc stos cli lods adc pushf outsb sub jmp subl or push mov sbb inc das and pushf jne insb lret sbb in jg mov ret add mov sbb push stc fld rclb push ss inc test xchg iret mov jo rorl jge addr16 sub insb mov jbe sub icebp ljmp cs loop jmp fidivrl mov sub (bad) ret outsb (bad) dec dec rcl movsl in jge adc fwait adc sarl jp jbe add fldenv push jp into jne popf add xor mov dec rcll roll in sahf dec jnp fnstenv inc add int3 cmpsb add mov jecxz adc cmpb imul push and inc sbb push arpl out cli lahf pop cmp push movsl mov stos (bad) jecxz mov or pop xchg dec sarb or mov fldcw repz xor lret lock leave jno and sub bound push popf stc aas ss lret loopne in pop jb sub andl pop push orl jo stc mov adc push dec jmp (bad) int3 outsb repz cmp pop cwtl bound test cs add cld insl push xor sbb xchg xchg (bad) sub mov lea cmp mull and add test fcomps or mov pushf mov leave call (bad) cwtl dec sbb test int mov aas cmp pop popa push sti pop inc jne addr16 lcall ret mov sub dec out push jge or lcall xchg or sbb test dec cld jp sub fs and bsf pushf or push enter rcr clc adc (bad) (bad) pushf enter lds xchg enter vmovddup or hlt out xor loop shrb loopne int rcr outsl adc das test dec or xchg push jno sub testb adc loope inc pop jmp cmp dec or fcomps (bad) loope jp mov and daa (bad) xor loope scas mov fldenv into cmpsl mov push sub add fimul fcoml mov jno (bad) hlt adc mov insb or cmp mov ja les clc (bad) aad mov in xor leave or test mov and xchg inc mov in in mov push jecxz push push push inc test into add scas pop aam sub mov inc sbb cmp push dec dec je sub lahf mov insl xor sub xor jg push movb in xchg sub pop mov (bad) cmp xchg lcall aad insb movsb movaps rorb imul enter or sbb mov bound or pop add rol xchg mov xchg mov outsb int3 push mov pop adc adc in (bad) arpl cmpsb (bad) add or inc push rcrb cmp sub push out pop add lock dec pop and pushf ret pusha sbb add add shr add xchg push iret sahf mov pop cmp sahf xchg fimul ret ret js ficoml (bad) icebp setb xlat jmp idivl jmp leave sarb gs (bad) jl enter outsb lret pop push xchg or and mov jp adc leave xor mov js dec mov adc sti lcall mov (bad) xor mov test jns xchg fisttpll and mov or insl imul (bad) adc jae xchg mov or lods jmp addr16 jle cmp mov jp mov push fmull sbb jmp sahf lods ficom pop jnp fcmovnbe lcall jnp pop jg daa mov (bad) aam inc cmp jmp xchg mov jns ljmp lods cmp cmp cltd loope add inc inc inc aaa mov fldcw icebp in addr16 mov cmpsl das ffreep xchg pop xchg repnz mov pop notl sbb cmpsb adc loope pop nop mov rcll (bad) out movsb rcrb and gs repz cmp add (bad) xor jne xor sub je lret pop iret lcall cli pusha sbb inc sti mov dec mov fnop fldt out pop adc mov cmpsl adc fs inc dec imul mov mov loop loopne sub and cmp loop iret inc cmpsb lock es fwait sbb pop add pop mov in int (bad) pusha inc mov mov jge lock lret jge cmpsb add mov dec std mov fstps sub or js pop xchg or in push out lock in bound fadds inc rorb mov xor mov jbe or push loope cmp and repnz roll imul mov fnstcw outsb pop test int3 fcoml std push test in jo mov push nop stc mov xlat pop jnp jne icebp mov jg,pt pop addr16 imul lock lea xchg ljmp das cltd sbb fldenv dec pop mov test daa fisttpll mov push cmpsl outsl negl jp mov fs movsl stos pop pop sub imulb lret mov adc add push jmp mov dec test inc mov decb push into imul fisubrl (bad) xor stos gs arpl in pushf push inc lret push mov gs mov inc xchg sub adc clc inc and push lock in aas cmpl adc (bad) imulb daa rolb cmc jl push inc xchg jns dec or inc jne pop and cs aas jno hlt test cs push lods insb cld xchg (bad) mov cmp adc or in xor inc inc fstps int ljmp insl mov jge jo push das xlat fisubrl push (bad) cmp jo xlat iret rcl setae mov cmp adc test mov xchg mov xchg repnz movzwl inc and push es xlat pushf mov or dec jg test xchg out fcompl adc pop aam jp adc push xor xchg cmp test xchg in push pusha stos fisub and mov inc push push cmp (bad) ss or cltd mov adc aad iret mov call cmp mov fsin xor leave stc jns push push repnz xor popa les jle cmpsb and js sub dec out mov or (bad) mov repz mov addr16 pop push xor mov jecxz adc rcrb dec dec add push or sub jne mov and in xor or xchg pushf mov or lahf mov fabs out pop pop or xchg notb imul test cmp outsl jo inc (bad) and xchg clc (bad) rcrb loopne cmp mov pop icebp push stc nop imul and ljmp pop or sub fnstenv cs aas xchg push sbb cmp ja loop orps imul dec lcall lcall adc in test rorl (bad) dec std mov cwtl iret (bad) mov std popa dec adc out out cmp pushf dec push js lret cltd popa andl test test lock pusha mov push dec pop lret mov jne hlt xchg rcl rorb jb insb sub push test push dec or add lea addr16 mov fidivrl cmp dec cmp jmp mov ret lret mov sbb dec jnp test push nop int3 pop adc test xor ficom cltd jl xchg dec fistl mov pop pushf mov mov js test inc pop or das push inc pop jg mov fcompl loopne push mov adc cli push adc jp into jae rolb into jge cmc cmp rorl mov out and sub inc pop orl divb bound and gs mov shrb gs lret notl push js jns andb jns mov cmpsb cmp add sbb in or mov push popf outsb mov adc or cmp push scas test push jae push in mov daa dec pop pop adc ret aaa xchg stc mov fxch arpl fdivrl jp adc popf mov and insb pop mov push and insl add sahf icebp movsb lahf rcr repnz loopne imulb jno lcall aad fstps cwtl adc mov cmp into mov pop jae push jecxz mov sub mov popf dec cmpsl loop mov nop es adc fnstsw sub fcomi and incl xor call out dec imul bnd mov jg add push push xchg repnz notb lods lock xor xor jl sbb mov aaa mov mov sub popa xorb inc fimull leave pop add movsb cmp inc mov cwtl mov pop pushf or xor call xor in cmpsl mov mov test ror mov jnp xchg (bad) push lahf fisub sbb loop jg and in nop fcomps add adc dec or mov fldenv (bad) std and sub lcall cmp xlat mov lods (bad) cmp lods pushf push push insb es fcompl pop mov loop sub out arpl push stos mov ljmp mov xor icebp stos push (bad) gs inc and xchg mov fwait cmp adc jae movsb inc fstpl (bad) xor sub bound pop jnp fldenv pop sub arpl cmp inc mov cmp jnp xchg dec or cld sbb fwait test xor add jb loopne inc addl pop cmp stos es (bad) and xor xor mov stos arpl xchg out xor out cmp stos mov xchg pop movsb lahf and mov repz lods repnz cmp test mov lods add outsl fldl adcb das mov inc stc lahf movb jmp outsl in lret mov mov sub lds mov divl stos push jg fsubs (bad) sub lcall pop dec test push cltd lds mov dec dec mov push xor pop xor mov dec and push popa lods cmp pmaxub inc int sub mov fisub adc dec xchg inc or pop scas or lret mov (bad) lar push jmp dec pop sub mov push das in into jge psadbw out mov mov sub movsl test sbb stos (bad) fwait ljmp mov and movsl sbb push rcl cmc mov add dec jnp decb mov cmp dec cmc sbb add imul push inc lcall int leave orl mov dec repz (bad) xchg push add jge cmp or sti pop xchg fistpl loopne sub rcrl mov mov ret or inc (bad) insb jnp jno int sub jno pop test (bad) cmpsb daa int mov roll lcall loope dec mov std dec xchg sub cmp mov dec jle inc lahf dec jae scas push lahf outsl iret dec popa inc cli ja sub into cmp popf jge add (bad) mov sti dec cmp bound arpl sbb xchg test ja dec in xor xor xchg pusha arpl shrb mov add xchg into (bad) fmull sbbl pop lcall sub ret in lret mov cmpsb (bad) add mov scas dec fdivs je pop in cmp (bad) call arpl pop xchg neg sarb xchg pusha loop adc (bad) movsl lret xchg stos or hlt mov adc call inc pop mov pop and push leave out shl insl xor adc adc arpl mov xor cmc aad test dec ret dec mov aad (bad) aam stc int ljmp mull mov cmp pop repnz lods cmpsb adc push (bad) push bswap in dec inc push out cmp inc loop xor cmp dec outsb int scas mov ja push fisttp clc jmp add iret cmpsb popf mov rorb aaa jmp pushf xlat add (bad) bound fmuls push jo ljmp cmpsb sbb lret mov jle adc aas mov add dec mov data16 repz fs sub sbb js jmp cli push gs inc dec xchg jb fmull cmpsl in mov mov cmp fstpl ficoml dec sbb sahf push sbb xor jl outsl mov sbb jno out push mov push ja mov add repnz movsb fdivs or fdivs cld cmp jae (bad) push pop int jp and fildl mov fistl aas in fsub cmp xchg bound push (bad) std sti mov inc xchg cmc xor jl xor xchg push xor cmp jge mov cmp pop sbb sub outsl ret popf (bad) or or xor out cmp push cli je mov movsb popa aaa adc jo js push shrb adc mov fstpt mov decb movsl push inc pop cwtl cmp setnp pusha xchg fsubs sub push mov sti and ret shrb insl mov (bad) cmc xchg jmp adc sbb fstp inc inc (bad) jno inc lret sub fs in add or adc pop and aam pop pop out xchg sbb loope adc loop and ds dec std and js stc adc into xchg (bad) cwtl xchg xchg adc dec rcl sbb xor pushf pop xor stos pusha sti push (bad) adc push (bad) lds (bad) sub push popf clc in hlt add dec test out or cmp adc pusha sub andl pop fimul (bad) outsl add jecxz lods in (bad) push pop fisubl fsts clc les sub clc mov push ret add jae call push loopne dec movsl movsb imul aam dec push sahf (bad) jno mov iret imul jge push sahf repz mov add jmp mov and sbb in dec dec adc mov ret mov mov inc icebp imul push lahf cmp fldenv (bad) xchg push xchg (bad) lock rorb lock xchg mov inc mov int3 adc (bad) adc dec test gs mov adc imul bound pop (bad) fcomip mov pop or ss sub and dec jnp add decb lock push clc push (bad) mov jns inc xorl adc inc inc and xor std or lahf es jg mov loopne repnz ret jo xchg dec (bad) cmp mov stos (bad) movsl dec push stc insb pop repz aam jge pop cmpl push dec xchg sbb scas xor adc xchg mov cmc fsub aam cltd subl aaa xor xchg out jae enter and enter push mov inc push push shll or les sub xor push xor push mov lock add sbb pop xor fidivrl outsl jae add aad add mov jns in xchg xor femms hlt dec jge pop mov cmpsb push imul insb mov dec xor mov mov push stos mov fbstp inc (bad) pop out fimull pop (bad) movsl jne adc jle xlat cmp aas add mov dec aas jns xor dec in push outsb fsts loope les rcr jbe cmp cld pop mov (bad) fsubr inc xchg mov mov shrb sbb inc fincstp sbb pop pop (bad) mov out dec int (bad) out mov lds sub frstor add sbb repz or adc inc (bad) js stos cmp ret push int3 scas inc dec mov icebp int3 mov test cli pop inc ror movsb sbb movsb fbld sub in cmpsl push sbb outsb movsl test cs inc xchg adc jae jp fiaddl mov pusha add push movsl dec xor or mov push enter loopne lahf adc jge stos xchg cmc rclb adc or xor inc push and push sahf pushf nop mov cs je mov jmp popf popf lds sarb adc mov xchg ja leave negl ljmp cli and lret into sar xchg sbb stos xor scas or jno into or or cmp int3 fsubl lret test in in ja call push bound cs mov sub insl mov push adcl jmp addl jns jo mov xor scas sbb lcall xchg dec rcl das push outsb into pop jmp out add into and popf mov or mov lods push aas rcl icebp cwtl addr16 (bad) mov add popf scas cs das aas popa push and xchg cltd or pop ffreep clc adc lea fstps mov add fidivl inc in sahf cmp out sbb es mov lods mov inc clc mov add insl push fistpll pushf orb cmp loopne and sbb xorb jnp xchg add jmp push push test sbb dec inc mov fs jne ja lods (bad) jecxz or fisttp icebp call sbb push out jnp fcoms pop les cmp ret cmpsb push jle imul popf stc fsubs sbb pusha outsl ja lea and jnp stc cmp jbe (bad) jae fwait xor (bad) xor mov xchg dec roll pop aaa add inc xchg rcr and lret imul mov addl cmp pop lods shrb popl mov lcall push arpl xchg pop les jge cmpsl daa mov dec xchg mov cld ljmp stos jp jp cmpsl mov xchg sbb bnd movsl adc xchg fmulp jno (bad) sbb push pop insl cs cli into adc sub in mov cmpsb adc dec xor cmp lcall cwtl out xor xor xchg push int push stos out cwtl les pavgw (bad) pop fistpl enter mov xor mov cli flds cld stos sar es dec jecxz jl cmp xchg cmp sarl or adc jecxz jmp gs mov sbb mov cmc jmp imul cmpsb in inc mov scas lea dec out out loop push or add roll fs outsl jno sub lret xor jl gs test or adc cld jne xor fs ret out aad sbb cwtl jecxz popl jb stos popf inc pop cmp movsl adc (bad) xor add mov pop dec (bad) leave outsl fwait lock test sub xor repnz and xor insl mov insl sub sub fs ds mov fsubr xchg mov add orb xchg sub mov fwait xchg loop cmp sbb xchg mov cs leave xor sub cmp mov add inc pop pop out sbb (bad) dec jg add fwait nop or ja insb idivb add sti lret mov mov dec xchg pop sbb icebp or mov dec pop sub sub scas adc and sti pop pop ljmp mov out mov mov lds insl lds incb mov dec sbb mov js in xor (bad) stos dec ret fdivrs call inc jb mov mov mov ret inc cli push fs je dec sbb movsl jp (bad) sbb xchg xor sbb call out pop sub popa push mov in fdivrl call mov add inc into imul fldcw dec and mov or jecxz pop stos lcall fdivp cmp pushf loopne pop jne jp cmpsl cmp or ss shl cwtl out lret fadds fprem mov test icebp xchg ja push clc sbb dec xor arpl test movsb jb test mov jo (bad) repz ss rep out mov scas jnp sbb inc adc das (bad) fcomi xor cmpsb lahf mov lods mov data16 push mov iret adc sahf xchg (bad) xchg lods mov in into and out out cmp lods xchg bound add xchg scas hlt idivl pop stos fwait jecxz loope fwait adc aaa xchg dec std lahf fstp aas mov or test icebp cmpsb pop aam (bad) loop (bad) movsl mov lret into sahf jge mov jg adc mov and movsb aas fldenv inc and int3 into ja push mov push (bad) sbb xchg inc loopne rorb movsl js pop mov cltd add sbbb pushf mov sbb jns imul adc cli cmc inc mov push sub inc pop cli aas fisttpl pop xchg (bad) lret cmp loop xor (bad) dec sbb fcmovne add add pop out das fisttpll shr mov xchg jno ss xchg out pop sbb adcl add dec and xchg ret fcomi lods pushf xchg jnp mov jns mov push (bad) hlt ss cmp xor mov lret cmp push scas sbb mov mov mov (bad) adc or mov or outsb popa ret sub xchg mov adc add pop fnsave (bad) sbbl test jg inc rorb out iret div cmpsl mov data16 mov pop pop jb add sub stos mov imul fstp sahf int je repnz in fcoms push int mov cmp imul inc pop cmpsb movl sbb inc inc adc aad and stos sub ljmp dec ror sub cmc movsb mov lods pop dec and sub rolb fmul hlt incb or mov (bad) out mov negl ret lret and inc les mov lock popa sbb xor gs push pop ja adc dec cmpsb mov lock add push test mov jg push jnp nop std or enter (bad) jae call cmp pop aad push enter xor and (bad) roll pop sub lahf cmc push jp pop test jne jb (bad) das lock jns fs xor cwtl pushf mov xor cmpsb and mov or jecxz mov ja or sbb cmpsb push cmp jno (bad) jo dec popa jl icebp mov pop out loopne test jae or insb push rolb jp in cmpsl inc mov jle lahf arpl out out cld dec mov lods movsl adc into push data16 stos push imul (bad) pop pop stos shlb and and adc mov sahf xchg push rorl sbb (bad) mov or aam cmpsb inc adc sahf mov adc add bound mov (bad) (bad) pop cmp jbe and popl arpl test pop cmpsb cmp mov das repnz or in xchg jmp ds aas adc pushf loope mov jo adc sti push or jne mov sub push mov cmpl mov andl ret xchg sti sub mov pop hlt sbb (bad) es insl mov in mov mov les xor je mov mov jmp cmp add lcall je sbb lods sub lds pop stos aad pop ljmp stc scas push xchg mov movsb cwtl add xor out (bad) or lahf pop std sub rcll push fstpt jbe fcomps add enter push test pop push ds mov push dec jb clc (bad) push mov gs xchg popf outsb fildl ds rorb imul fisubr jne pushf push iret lds outsb cltd mov jne test cltd aam mov inc mov sti add sbbl sbb scas cmpsl lods int sahf and push (bad) jle lahf mov push (bad) xchg shlb push data16 mov js dec cltd jp dec loopne cmp lods adc clc or cmp addb xchg (bad) push ja mov gs cld add ljmp in mov push enter mov fild lea in pop in inc push jmp rcr fistpll push or adc jmp aad xchg push pop das es cwtl mov fisttpl dec out test dec scas add pop lahf mov sub aad xchg jbe jge xor xchg xor in mov xlat inc loop jb movsl or jnp sub addr16 scas clc gs jae in push xor fwait dec jno dec pop stos sbb xor cmp mov cmpb dec cmp jle and idivb push sbb dec lea ja mov or cs into mov mov xchg dec jecxz popa daa clc jg faddl pop scas jno dec (bad) xor dec mov mov stos loope fstl mov int pop xlat cs lds test xor and lds negb (bad) dec lock (bad) test or fcomp scas adc mov mov and push add or pop cmp lret adc loopne xor ja push sub into mov sarl lods leave jbe pop fwait cmp lcall xchg aaa fistl cmc jae bnd fiadd dec cmc or dec scas dec mov mov insb in mov lret pop aad jae push add xchg xor adc loopne int pop push nop popf and and pop fnstcw (bad) stos icebp je xor sub dec mov add mov movsl xchg ds inc and push cmpsb sub popf mov jp or lret cmp xchg pusha aaa xor arpl xor jmp pushl stc xor cltd adc mov ja pop scas add xchg cmp adc hlt sub testb (bad) mov jl repz dec xor pop arpl ror pop add xor (bad) lds ja cmc cmpsb call dec mov decl imul xor lea xor pop push roll cmpl and inc hlt out push rcll xchg jg lods ljmp sti push inc sti stos push mov xor rolb insb movsb ss (bad) pop repz mov sbb dec in xor jb push inc cli rcr mov ret add or inc inc fdivrl js jg or mov test cli jle jae bound and cmc mov jmp jecxz inc mov dec mov jl cld dec xchg scas leave fbld cli outsl cmp icebp and jl jbe lea inc sub and inc sub loopne mov sub mov scas dec outsl mov or inc xchg inc stc or adc ficompl data16 inc loopne and inc cli (bad) jle inc inc in int3 sbb sbb (bad) pop jge mov mov xor hlt sub jge xchg outsl sbb xor (bad) jmp pop leave xor inc in push cmp sub nop pop pusha or popf (bad) in testb add cmp cmp cltd inc jmp adcb sub mov sahf sub sbb ja adc mov xor fisub and leave push pop xchg pop xchg inc add leave lea cmp cs xorb xor lds test out in mov mov pushf arpl mov ret inc (bad) and cwtl sbb dec lret (bad) lods daa jge (bad) pavgw mov (bad) cld jp sahf ja sbb mov data16 pop nop push loope jle cmpsl mov in sbb push add cmpsb enter xor mov mov into dec nop cmp xchg cwtl pop sub cmpsb push cmpsl inc cmp bound adc adc jge mov and push mov dec inc mov cltd hlt mov push xchg add xchg xchg (bad) pop push movsl pop xchg imul pop xor rol lcall fs enter idivb push ljmp pop fidivr xor lods pop mov mov mov mov scas shll jb mov jmp sbb xchg (bad) mov (bad) mov iret jl lahf insl and insl add hlt xlat add pop adc pushf jb insb or es pop cwtl pop xor in shll push jecxz inc or jne lret pop popf dec pop in cmp (bad) push subb mov sub std dec dec jb in fwait mov (bad) mov lcall iret pop sbb pop (bad) cmp sti mov mov cltd cmp adc shll mov cmp (bad) je inc fstps adc sub xchg lahf add dec icebp inc mov divb aas pop and cmp mov xchg jno or out fisubl stos sbb ss gs inc adc shll stos xor cwtl push cmp stos dec dec xchg stos dec (bad) lods pusha or fsubs cmpsl call scas repz dec (bad) jo es jo test push cmpsl cwtl lahf insl dec aas cmpsl gs mov adc mov jmp cld clc dec and pop stos std fsts aaa pop xchg arpl jg push sbb rolb cmpsb jo mov sbb pop lahf out jbe mov xlat adc sbb lahf or fnsave mov mov mov stos cmp in in inc mov push jl nop dec push add pop negb jmp sub rorb cmc sub lods mov lahf xchg xchg imul xorb mov mov jae mov fwait idivb call ret push adc test out xor xor push push (bad) out jns cwtl negb daa xchg in lcall popf xchg mov pop rclb pop sub add jecxz push mov mov sub clc (bad) shll rcrl arpl cmc push sub faddl aad push lcall pop cs insb add mov pop adc xor jecxz sbb mov xor popf or mov sub or mov movsl add lock cmp lret cmp imulb aaa jb fst add stos pop or xchg sbb sbb lret (bad) iret mov xor test push (bad) popl pop mov mov rol cwtl call aaa ret push inc mov test rolb lret inc int3 cs sbb and add stos sub roll push fs je push nop push mov mov xor lret mov dec scas pop jmp sbb test xor xorl leave hlt jo pop cmpb out pushf jae push mov xrelease rol mov addr16 mov jp add push mov lods xchg inc cmc aas sbb pop mov dec lret ljmp (bad) cmp (bad) fist mov shll lret and sbb push dec mov addr16 adc jns ret sti pusha movsl shl add in aam hlt pushf push test xor int (bad) jg jge mov mov add int3 das ret bound nop cltd mov js jnp (bad) mul push mov dec mov lods pop stos fildl lods lods push push es les repz sbb or aas lahf adc adc adc jnp sub pop mov clc (bad) jnp mov int3 mov push scas ss lret xchg mov inc adc ret jmp sar pusha xor add adc out fwait testb scas dec pop nop xor sarl (bad) jb bts mov pop in insb dec xlat adc add bound jecxz xchg sub stos cli inc clc test and and sahf mov and (bad) cli inc xor xchg mov pop mov cwtl lret hlt and sahf xchg jl dec push subl decl out mov lahf fsubr sub push sti jecxz mov test movsl imul and js bnd push cmp jbe scas jle fdivrs sub int leave out or cltd sub push fsubs xlat dec and push stc add xor jne aam add sbb dec mov dec xor jno movsl mov das idivl pop cwtl inc push xor mov jae add dec dec mov (bad) hlt mov pop inc ljmp jo arpl popa mov je in movsl ds in push dec inc fidiv mov xchg clc sbb out sarb bnd xor push dec xchg xor pop mov (bad) stc lcall mov sbb jne fcmovbe std push sbb incl sub hlt or gs out addl xor sub lahf mov cmp (bad) call inc adc ljmp mov xor sub pause insl push and inc dec sub jle xchg adc fs xchg (bad) xor jns cli xchg dec jae daa cltd or shr loope shlb push test xor push xor push (bad) mov xchg aad lret mov lahf add pop stc sub dec fstpl scas sbb nop cmpsb je inc push jmp push adc arpl (bad) lds or pop popf jns sub test (bad) pop xor mov (bad) cmc dec add dec pusha sahf pop (bad) jno xchg mov push iret sub push inc sub cs lods insl pop pop cmp lods mulb cmpsl or sub jno mov jge insl xchg or lret pop js testl lods in jp dec sub lock xchg sub lods bound jmp dec out inc mov dec aaa repnz push sub stc (bad) (bad) bswap int3 lea pop std dec rcr movsb fldcw aam (bad) mov sbbl cmp or std adc xchg (bad) mov inc fwait push sbb cmp jge mov xchg cmp fcompl mov popf cwtl pop and out adc pushf fs sbb into fmul dec (bad) push push cmpsb jge out push sahf mov jbe cmp fbstp or cmc hlt cmpsb int or shl adc sbb xchg mov or xchg stc pushf add xchg push sub xchg pop add popa enter into xchg mov roll lahf add inc cmp jnp into or lret cld adc (bad) cld imul xchg les xor out shrb dec movl outsb mov xchg dec pop inc das add lea movsb push sbb daa push pop bound cmp loopne out xchg (bad) adc adc add movsb bound sahf nop outsl push or mov mov inc addr16 mov xchg call sbb mov sbb pusha add pop cmp test adc xchg test ds adc int leave aaa ds fidiv xlat nop cmp dec add idivb mulb mov popf ljmp outsb dec test std scas add and dec ds in push pop jno fldenv jg push data16 inc dec pop push or jbe aaa data16 (bad) cmc jmp daa mov xor add dec idivb fmulp dec (bad) xlat cltd push fnsave outsl repz pushf lcall cld lcall cmp xchg ljmp or xor mov ficoml xchg mov or popf jge mov leave push add test mov stos mov int insl out insl add jge xor mov int3 imul xor enter fwait add les in fimul inc add int3 jmp inc or movsl cli (bad) cmp cmp pop mov test je sub push aas sbb or pop (bad) out jns dec lock movsl xor xchg push aam xor or and bound addr16 jle xor mov fnsave stos add dec imul jbe (bad) cwtl xchg jg rcrb adc and popa mov pop rcrb push or xchg mov fcmovne and rorl fs adcl xorl add mov sbb fild push add jo or pop clc or arpl jle std sub pop cmc cmpsb std fstl add ds stc sahf repz xchg fiadd outsb pop cs sbb push (bad) dec sub cmp in sbb mov dec pushf inc jbe xchg mov stc lea xor add scas jge jmp (bad) divb js std jns inc in daa inc fimull fwait inc jbe ficoml ljmp hlt add loop sbb lea xchg dec xchg test stos xor in sub sub repz pop cmp repz pop sarl js xor jnp adc cli or mov jne sub mov ljmp sub (bad) out mov xor mov test mov (bad) fnstenv mov mov inc out xchg iret sub dec push jb repnz push and pop cmp push std mov das dec pop jle xor sub sub mov aaa sub int3 xchg mov cltd mov pop sub pop dec je lds inc inc icebp mov inc sub out popa push js jmp xchg lods adc cld xlat jb inc mov jl mov sub adc cmp aam out fdivl mov shll aas add in fwait adc fistp fstpl call lods mov jmp out nop jp xlat jo insl test stos mov jge xor xlat mull insb lds dec mov dec dec es inc addr16 add pop push loope jge mov and mov cmp out roll cli or movsl aad jb icebp leave into and call mov mov mov cmpsl sbb (bad) jnp (bad) or and adcb xchg adc imul pop aaa out pushf add lods imul dec aad cmpsb (bad) mov xchg cmp inc lods xchg icebp loopne mov test or cltd test or mov es sub and dec mov imul dec lods pavgw shl lcall ret fdivrl pop outsl sbb adc popf enter sbb mov mov jns out add jno cmp pusha pushf lock movsb sbb push or int mov xor test push out (bad) mov pop popa cmp jne mov ret inc push jecxz xchg iret or aad push mov add jne call frstpm(287 inc (bad) jmp mov (bad) sarb rcr add loop or subl mull pushf inc pop negl scas mov lret shrb mov or jbe or int inc and mov push cltd cmpsl fldt dec push lcall mov push push enter and lret ja jmp lods add fsubl lock fcmove ljmp shll push mov sub add repnz xlat (bad) mov idivl fsubrs and inc jge adcl lcall clc lret (bad) cmpsl push push ret and movsb and mov mov xor (bad) inc shrb mov mov mov (bad) jns test shrl mov lds mov sbb mov xchg mov call push daa loopne cmp jge fisubl xor (bad) jne cmc jle shrb (bad) cmp call int icebp fbld jecxz out cmp mov push pop and daa xor or push (bad) lret add cmp fnop into mov ja push and push inc mov (bad) cli rcll scas and loopne and movsl incb bound pop xlat jne in sub push or mov pop mov xlat stos jbe rclb cmpl mov add mov fstpl and mov cmp mov sbb movsb faddl lds push xor push sbb xor fwait js loope aam inc push loop insl mov mov or xor sub jbe inc xchg adcl or sub cmpl pop iret and cmpsl gs pop cmp lcall call pop add add add jge xchg xor dec and push and jns mov pop inc into loope mov push sbb cmpsl mov lret xor jge sbb (bad) adc sbb insl jb mov add out int gs movsb xor dec xchg out dec loopne mov mov idivl addb shr repz mov adc push fadd idivb pop or cmp (bad) decb cmp xor mov repnz sub and das leave jg imul shrb and or mov xchg mov stc adc jp loop pop in iret mov imul mov cmp loope push test mov xor lcall (bad) jbe lahf mulb ret jo shrl nop mov movsb out sbb add test and in xchg std mov fsubrp pushf add loopne inc xor es in push aam call inc lret xchg pop in aas jno notl add repz in jle mov das je push sbb inc stos test fcoms out stos mov stc mov lret mov jo scas jl jb jb js xchg lea sbb rcr push std cmc ja mov jg out push cmp dec hlt mov mov ret rcll push js mov push sub jnp push popf sub daa push jmp inc push pop in pop aad loope sbb imul cs mov mov inc nop test ja mov dec fmul hlt add repz dec in mov jb push stos inc dec aaa aam fwait mov (bad) xchg xchg lea test xchg dec mov (bad) jae movsl mov rcll (bad) xchg (bad) daa lock pop xchg mov mov and mov cmp ds and lea jnp xorl call test mov sub mov mov mov (bad) loopne loop or inc adc or pop jmp inc xor fisttp data16 adc scas mov out inc adc arpl aas dec pop jle lea shl lret in cmp (bad) popa cmpsb sub jbe out dec dec and aaa packssdw lcall insl and dec push xor dec add ljmp push mov enter jp xchg push adc and (bad) aam shll mov rcll mov fdivrs push sti xor push or cmp pop jbe test dec fisubrl xlat mov mov repz data16 push leave pop popf lcall (bad) jge rolb pop lods xchg mov hlt (bad) out adc dec (bad) jae mov scas mov bound add mov pushf push cmc mov push mov dec sbb imul jmp rcrl push dec sub nop aaa cmp or and cmp or push pop xor and dec cmp data16 jo mov push mov aad jne shll push push pop push je mov and sbb lods push push mov mul std xor jns in jo fist pop lahf cmp sbb lds sbb les lcall inc mov pop xchg xor psrad aas jno enter xor push in jl dec xchg add push push subl pop imul frstor pop add mov pop cli (bad) mov mov push fcoms mov push push sbb mov adc mov lret jecxz (bad) inc fbstp bound popa or cmp lods jge sbb inc jns (bad) test jge jecxz mov push sub or call call aaa xor push sahf and fldenv push cmpsl fild outsb mov pop ror add mov ret enter fidivr dec (bad) int pop add sub sub jns mov loopne mov shrl xchg (bad) pop jl enter loop and mov xchg ja sub hlt jb lds jle fwait sbb add push (bad) mov and fcomps arpl cmc ret sub push push in sub jno mov push dec push push adc cmc sub push sub mov lock cmp mov sub std mov int imul mov lret ja xor add loope in fimul jne or sub push mov aaa xor dec sub fiadd in arpl movsl add or mov lahf push shll gs rorb (bad) jo cmp or repnz inc lahf add insb (bad) rcl mov lods lcall shll sub xchg add scas adc mov fdivp in adc sti push and jp mov pusha mov pop dec loop jecxz fldcw popa insl sub loop mov mov imul lods jle fcoms cmpl push das or ss push (bad) cltd jmp insb mull sub addl pop hlt sarb sbb cltd cmpsl mov dec adc out insb imul pop pop popl cmc push jae aas and repz adc lock mov xchg mov sarl and push icebp dec jae xchg pop inc orl mov rolb scas or rcr cmp outsb dec js js leave jge fnstsw loope repnz mov mov in idiv jno jae inc ret and xchg sub push adc dec push push xor clc cli fnstenv rorl dec rorl push push jae push pop mov stc loope js mov enter ret je sbb xchg sub fist aas sub leave (bad) dec rclb inc pop fcom shrb push jns dec xchg jle dec stos stos lfs sbb hlt inc lods daa jae xchg and cmp lods xchg dec icebp mov pusha dec mov in (bad) push xor mov icebp or jmp and xchg or aad daa adc jns sub pop pop xor jmp adc mov aam daa pop mov dec mov loope (bad) inc daa insl and cmp sbb adc xor or faddl sbb lea idivl sub bound xor xchg jbe and mulb sbb inc fdivr mov sub xor lret push inc call scas cltd mov mov and pop mov lcall iret inc stc (bad) repnz dec scas test movsl addr16 repz jmp mov xchg call pop loope cli jnp or in rorb stos jb sub xor inc add cmc xchg je xchg es shlb push pop mov mov hlt ficompl in xor cmp sbb int frstor sub sti and sub fs arpl int3 dec cmp xlat pop shlb cmp (bad) cltd sub bound or pusha faddp adc (bad) mov addr16 mov or (bad) sub stos mov fistpll int3 dec es sub mov dec test mov cltd imul fildll cmpsb sub clc cmc hlt jg cltd out outsl subl aam xchg lret loope cmpsb adc xor push test mov loope ja mov mov sbb mov (bad) repnz and inc iret add push (bad) imul in inc dec xor mov xor pusha leave inc push mov out sahf xchg inc lock divb mov and mov loopne jmp stc jbe and lock test add dec mov in in xchg decl mov mov out dec xor enter dec rolb in das scas loopne repz pop in sub pop mov dec nop inc test and and (bad) adc mov shrl mov adc jecxz (bad) lock repz out adc out inc ljmp xchg insl lds lock scas inc sub aaa rcrb lahf data16 push std out sub (bad) push mov or test xchg leave or pop pop movsb xchg inc xchg out inc lods enter scas loop scas fdivrl fucomp pop loop fdivrl sbb pop lcall mov test xor inc (bad) sub les shlb insl jo dec int3 sahf ss pop jo into ss fistpl scas cmpsl mov mov mov push or fmuls lcall js stc or cmc pop xchg mov dec (bad) inc pop cmpsl mov dec ficomp stos adc adc nop mov xchg es mov jns lods test jg pop push cltd std jbe xor xchg fimull lock in imul inc inc stos adc sub ds pop xchg push sub and mov or push int3 add in addr16 push mov jo je jmp cli mov fcmovnbe dec addr16 push in mov cmp fild sbb test aad jecxz (bad) mov repz aas xchg adc stc pop pop push mov push and sahf xchg cmpsl mov imul nop xchg adcl jle cli inc mov (bad) mov dec cmp push lock push push lds fisubl es jbe and mov cwtl pop imul cld xor xchg pop push push outsb pop adc push (bad) dec sbb push dec stc in fisttpl hlt or pop nop and fs je push addr16 inc aaa adc popa pop and pushf mov scas adc ds adc insl clc dec insb ss cltd push test jbe push loop pop jb cmp and xor leave mov out sbb xor and or and adcl test cmp ja pop push dec dec mov or addr16 jge pop or add push push and mov cmpsb jo cli lock mov xor xlat mov rorb push pop cmp inc arpl mov add icebp mov xchg mov (bad) out movsl pop dec lcall push jb inc mov lods inc add (bad) ja scas add and into sub xchg dec lea sbb movsl sub dec and aas decb imul cmpsb and ficom push jg dec lds sub fsubs call cmpl jo dec xchg xor sbb lock (bad) mov pop out scas lcall subb sbb (bad) jnp clc fdivl aam and mov pop add mov out stos mov and mov adc mov lds bound cmp adc sub xor fs xchg hlt or outsl xor in jae lahf daa iret rcl jbe pop pop (bad) pop and aam xchg imul sbb int in jb jl es outsl push mov mov mov shlb and push mov inc into mov test cmp aam jne xor inc (bad) jg hlt mov xchg (bad) mov push daa movsl in lret pop imul push mov loopne outsl mov add (bad) enter sarl stos adc mov mov or ljmp xchg jno pusha jb rcrb scas lret sbb fdivs xchg mov repz pusha jo or cmp mov mov sub push ja cmc (bad) push ja jmp mov xchg mov das lock (bad) aas or imul sub inc lods aad push in data16 jg cmp dec mov hlt jno mov pop repz lock sub jnp das int cmp shrl insb test hlt mov mov rorl mov dec out mov test je sub inc mov stos lea int3 mov cmp pop mov lcall repnz and scas pop adc lods mov out bsr into xchg pusha pop cmpl test adcb jne inc push sub inc mov aaa dec lret xor pop adcb (bad) movsl out (bad) mov (bad) neg into cmpsl lret inc xchg mov jecxz adc clc pop je mov movsb mov pop or inc fidiv mov or pop or shrb cmp mov dec popa pop mov and je das ds in pop loop testl adc xor sahf addb sbb scas push adc push sahf cmp sub sbb (bad) ljmp mov leave jecxz cld add subl jg dec xchg adc outsb dec mov push (bad) lahf ljmp xlat aaa xor adc decl cltd shl bound push aaa and mov push mov dec popf cwtl cmp cmc sbb and imul pop add mov out and insl adc mov cwtl fdivp add mov adc sub xchg ss xchg inc lods push dec ss scas inc lea xor jb pop xor js jo add dec mov xchg or fild jnp fnsave sbb popf xor stos insb push pop aas (bad) xchg lahf movl loop sbb cmp test lahf lahf scas or mov cltd aaa adc xlat icebp mov xchg sti xor out xor divps lret xor lcall lahf fwait jecxz and jno (bad) pop xchg popa outsb jmp lods jecxz jmp je movsb adc pop addr16 je insl sub xchg (bad) int cli scas dec lods push sub lret sbb pop mov in cmp xchg cmp sbb cmp xchg pop push sbb push fisttp dec push xchg jbe jg jae data16 push sub xchg jb adc imul test popa adc (bad) cltd cmp sub mov repnz rol inc lahf cmpsl sbb rclb cmpl call aad jmp fs shrl push fdivs mov jo shlb mov pushf add pop clc ljmp (bad) movsl mov inc inc iret or mov daa pop pushf (bad) and (bad) in or in std sbb test repz and hlt dec les fsubrl xor dec leave shrl ja int sti dec loop popa sbb cmp popa dec sub inc dec jle pop dec popf sbb xor inc sahf loopne cmpsb dec subb and or add mov push outsl cmpl int3 addl dec xor jmp lret in stc lods xor pop fdivs imul dec das mov mov (bad) in push cli fsubrl aam test jb stos hlt mov jnp inc cmp dec inc es lock or (bad) and lret jp enter jmp shrb jne mov fisttp ja xorps dec mov mov xchg test (bad) je sbb lods lcall xor into sub mov enter push test imul sahf mov mov into mov in pop mov mov lret addr16 dec sub mov inc inc fs xor loope out out inc mov js xchg or inc lret ja mov push aas mov mov call mov xchg fidivl push pop fnstenv ja sub xchg lds push cmp mov mov sarb sbb mov add push inc aaa push xchg rcl out out mov add andl rclb mov cmp call sub int3 nop dec stos daa cmp push mov mov inc repz clc repnz add scas pop iret arpl pop (bad) js lock xchg and xor inc repz mov inc (bad) fcom jb or sarl add jnp push out jns mov cmc lret add stos xor fidivl sub add test inc cli cwtl pop nop xor in xchg xor (bad) jle int cmp fnstsw leave lret add out sarb xchg xchg push mov xchg aam jl or inc test push sub pop jmp ljmp mov mov mov push add repz enter sbb and mov js pushf popf sti adc dec push loopne add mov insl pop or or out cmpl hlt rcl mov fstpl and mov dec cmp test add or jne sub add adc and adc std xchg rorb jo push repnz cld jb or or cmc test mov adc aaa cmp or loopne mov inc nop inc jp fild inc dec xlat movsl dec (bad) or movsl loop mov or xor jo and jl (bad) fmul (bad) into mov aad sbb add out adc ss push stc subl pop mov cmp jnp ret xor movsl out pop and das sbb push xchg push adc xchg andb dec pop adc mov inc sbb jno jne cltd or (bad) cmp push mov int3 notb inc mov out or inc sub ljmp pop insl push push iret mov push int cmpsb pop mov adc es pop xchg icebp dec frstor sub fxch aam ss adc sub pop subb daa addr16 inc jmp lods push cltd scas cwtl xchg cmpsl stc sbb leave setnp sbb in xor (bad) sub jae dec lret jo iret push jns xor xchg aad mov add cmp mov insb jge orb dec mov (bad) inc mov xchg scas jecxz fldpi fdivr sbb cld popa or fdivs sub jbe in jno mov sahf outsl mov cli out cli mov icebp adc push mov pop mov cli xchg lret pop jnp mov jbe sbb push hlt and xchg flds int3 jp pop (bad) aad and cmp test pop incl movsb mull test add outsb xchg mov adc in mov jp sbbl fidivrl std in pushf (bad) mov push fsubl test loop push into push sbb jb mov stc push pop ss lret pop ficompl repz cs je sbb sbb lods jns inc sahf clc push dec mov std xor mov lcall movsl (bad) sub movsl inc hlt push es mov pusha push ja ret jl add outsb fiaddl fbld cld inc xchg push jnp ljmp xchg cmp cli (bad) sub jle mov les ret cmc pop mov dec inc add push xchg xor gs in mov jecxz push lret scas add dec stos adc inc dec aad sub xchg ret mov cmp mov stc push xor loopne icebp jg loope push daa or icebp lods imul mov inc xchg or cmp fs addr16 int mov incb xchg mov or (bad) ret jmp stc in xchg mov push dec imul mov fwait xor sbb lods jp test mov cmp mov xor les adc mov movsl outsb jge cmp sbb mov and es xor push adc stc out mov negl outsb shrb shlb cli call jae xchg sub adc sarl pop xchg push mov popf out mov push std leave aas pop orb add dec xchg mov out aam nop push adc xor imul mov push jecxz rorb mov adc (bad) test jb enter mov sub test mov fistp push cmpsb inc push arpl xchg xchg fimull ret sub int sbb repz lock clc mov cld outsb (bad) insb (bad) shll sub jne js inc and adc push (bad) cltd pop mov fmull imull push stc inc sti jbe sbb dec sar mov rcll sahf mov fdivrl js sbb and push dec movsl sbb ss pop jo inc cmp push fwait inc clc cmp sbb dec insb sahf push add jg addr16 push sti (bad) lea pop jl arpl jg add repnz lea daa fcoml and daa pusha in cld xor dec test adc repz xchg and dec (bad) xor sbb mov dec movsl push sbb outsl mov arpl mov fimull loope popf movsl and xchg std cld and cmp xlat mov and and in push ret scas enter sbb or out and mov ss push pop mov or dec cld mov cmpsl push sub fcmovnu push jb push cmp jg test fisubrl popa dec mov or sahf rorl (bad) xor lret jnp inc push adc add mov lahf aam repz (bad) jg mov cwtl (bad) (bad) xchg arpl shl jns pop bound or cmp cmc xlat gs push jl leave data16 rcl adc fistp pop and icebp cwtl or cli popf lods addps or or cmpsl pop mov test mov fmuls jge sbb leave aad divb jge imul xor insl lea aas xor mov pushf les aas out or lahf xchg addl jae fnstsw sbb leave xchg fwait inc xchg lods cmpsb xchg icebp fmuls cld les aas sbb mov mov cs repnz (bad) idivl idivl loopne pop add dec fsubr fcompl in dec mov test imul push sub jmp lcall mov (bad) incb out dec lcall push lea mov popa and fistl cmp pop mov dec push stos in icebp or jo cli imul data16 pop fildll cltd in inc aad ja rcll fsubl mov sbb or pop push lret loop mov outsl mov shrb out jl (bad) jb (bad) or lret addr16 sbb inc pop imul inc and dec adc fdivs jp push (bad) cmpsb iret cmpsl inc movsb popa cs dec pop pop jmp mov rorl sub in push insb or jmp pop push add std add push inc test xchg (bad) sbb mov add nop push aas scas stos pop mov (bad) push mov or push jo pop xchg push push push int and outsl repnz loopne sub ds cmp mov or jb stos push mov mov into pop sbb pop cmp or leave add (bad) dec test int3 fninit add jle jp jo xor cld aas xchg (bad) cmpsb scas ja sbb into xchg aad jg mov popa adc or jno add (bad) (bad) mov daa mov inc je in movsl or aam out push stc and subl (bad) and (bad) mov inc nop add test mov in fmul push cld or push data16 into fsubr jle in and cld pushf lock clc into xchg push mov sahf loop popf dec xor cmp out stc cmp xor inc movsb mov cmp call scas inc rcll push mov mov pusha add mov lret xchg cmpsl fsubrl rcr punpckhdq in fcmove movsb lahf lods inc pop gs ds cs arpl xor (bad) xor sub (bad) push gs jp shrb jb int cmp dec outsl jg repz xchg jmp sub sub sub test mov out lods add push jo,pt pop popf push pop dec and fnsave inc rclb (bad) xor int3 pop and inc pop ret mov loope stc sti mov xchg loope pop or in fwait or test xor pop divl adc inc test xchg or sub adc (bad) outsl iret orb out xchg addl into data16 cld push cmpsb iret push mov movsl (bad) xor pop stos xchg jl sub jmp push jns mov lret nop in xchg pop pushf add std arpl jns cmp jo sub in stos push pusha les jb mov mov scas sbb out jns and add sbb cmp push add insl sbb pop in xlat test aad push rcrl sbb mov sahf jnp sub pop sahf int3 fisttp imul loop mov les les arpl addr16 insb imul lods jecxz mov mov stos adc jp sub sub in scas xchg adc (bad) js dec js mov popf lret pop mov addl ficoml idiv sahf ret push mov push ret test sbb sahf push mov mov icebp inc sub in mov out daa pop movsb cmp lock xchg xchg pop aam out mov fisubl mov les das lea push shr (bad) xor mov loop mov in adc xchg lds inc jge stc lea stos or insl rcll test scas mov xor mov jge or mov movsb pop shlb mov lahf mov adc ja mov xchg test mov stos dec fwait mov enter xchg addl sub sbb dec cmpsl push jne into repnz pop push push sbb ljmp xor mov aaa push dec mov mov fidivrl mov cmp lcall jmp sbb (bad) mov mov xor adc jno or clc fdivp push add mov fiadd adcl push pop push (bad) iret push mov push push cmpsb jnp out sub ja xchg fimull and jge fneni(8087 xor mov cmp jo mov hlt xchg mov iret (bad) cli scas js xor push cmp jl dec xor or icebp adc imul stos mov jl bnd inc jl pop (bad) dec dec jae mov dec mov test sbb mov sbb jns scas push push mov sti pop jecxz sti cmp mov sahf pop or sbb pushf addr16 pushf sub andl outsl dec and test inc mov jo mov jg mov or (bad) or in and add js mov stos jmp xchg push out jo jno cmp add sbb jecxz ljmp int xchg es and fcompl cs int3 mov mov fdivl cmp dec or loop mov lcall push pushf mov or xor jmp arpl repnz pop ljmp shl cmp imul fiadd fdivrp cmp loope out sbb (bad) xor bound mov mov mov push cmp aad mov int lea or pop adc imul (bad) rclb loop movsl add lret and stos ljmp out sbb xchg mov dec cmp sahf xor push mov and (bad) lahf dec dec ret popf xchg ds loopne pop out lods pushf mov outsb outsb add fdivrl nop pop loope and andb sbb ret xchg xor stc inc pushf adc js es cld imul sti dec outsb inc inc (bad) adc clc mov and pop pop jo fcompl or xor movsb movsb mov jp adc cwtl popa mov mov aad inc pop or xchg aaa push dec fisubr inc out mov leave outsl sarb loopne lcall xor idiv cmp adc shrb ja mulb mov cmc jo adc test sbb ja int3 and and adc lock test scas roll mov jl add inc cld lods pop push or jo and out push clc bound inc xchg imul jge fstpt sti int dec jno sub jo cmp aad roll pop mov jecxz inc and int flds dec xor jb add mov jge popa ret mov jne push and inc repnz out inc adc adc mov das xorb cmpsl aas cwtl out mov loope in movsb add (bad) nop add lcall and cmpsl push or mov jle rorb fldl push shrb mov ljmp and cmp add xor sbb xchg out fisubl dec jge and outsb outsb dec inc stos xor adc ljmp mov xchg push or jp ljmp jo in hlt add out mov push test or push push push repz test jbe jmp in mov add lret pop test cmp in mov cmp xor int3 insb pop dec lea imul mov cmp movsl xor xchg aaa mov xor xchg clc aad jne xchg imul push lret lcall fs test pop (bad) sahf (bad) xor cmp repnz psubb (bad) rep dec out lock mov jno add aam test xlat (bad) and mov ja mov mov insl pop mov xchg fist daa cmp jmp fisub nop nop pop sbb jle repz pop xor iret enter out pop sub mov xchg mov cs adc out add inc shrd loope pop mov cmp push jb test out inc subl pop mov mov addl xchg rorb jbe or je pop pop in push sahf aad (bad) lock insl xchg aaa gs jo or xor out xchg xor test xchg dec sub jecxz fildll adc xchg (bad) std inc adc out cli cli jecxz xor aas mov lods addb repz call in insl rcrb mov sbb lods and jb pop mov addl insb divb fucomp sbb imul xchg sbb dec repz nop xchg mov ret in cmp arpl aaa aam addr16 push jl mov lahf test inc xchg xchg mov push mov dec xchg cmp push out sbb ret xchg lods cmp sub add cmp mov dec test jb xor pop xor loop rcr sets mov (bad) lahf sbb push xchg cmp std jg dec and fiaddl imul popa pusha pop and adcb jb lret jmp (bad) je inc loope ja leave out int3 fsubrs loopne cmpsb cmp popl ret dec cmp dec jg xchg scas inc dec and movsl xor test pop std gs mov xchg jecxz jl sti (bad) adc jle dec mov (bad) sbb cmp dec mov lods and jo or cmpsb mov and push clc mov inc mov (bad) aam int mov lds cmp gs repz xchg inc ja (bad) or adc pop loop popa push (bad) jnp and xor stos clc mov pushf lret int mov cwtl stc or sti cld sbb shrb neg js push ret inc xchg push notl (bad) mov (bad) int3 fwait int3 mov sub loopne jl mov sub (bad) testl dec cmp jae scas nop sti mov jecxz inc ljmp or ja jmp sub jmp ss insb dec lcallw cld int jbe adc cmp lods pop jle mov enter (bad) sahf faddl popf inc jl or fimul enter mov (bad) jp mov (bad) inc repnz push sahf mov mov jnp cmp leave add scas orb xchg push cltd sbb pusha mov jge xchg sub lret xor and cwtl pusha sti daa dec dec imull arpl adc xor je xchg push jbe popa mov lea in jmp (bad) dec divb and movl jmp jbe js test ret mov or repnz je push imul cltd adc and test or adc or xchg inc push pop loope fs cmp push push pop push mov stos dec and lods fs pop repz test push fidiv pop (bad) fildll fs iret or mov adc pop psubd pop loop mov dec dec and add add das in jnp fsubrl dec mov cltd xor stc mov rol push jmp add xor aaa and scas jecxz sbb mov subl inc addr16 inc fs dec sahf or in cld xchg cmpsb sbb or sbb (bad) (bad) cmpsl xor lret aas inc int3 xor mov dec push fisttp sbb js pop mov ja and rorb test jno loop (bad) mov add jne adc sti cmp or int cmp ja adc fisubrl pop cmpsb inc xchg xor int3 inc add int3 mov rcrb inc pop or mov outsl xchg or jnp jge lret repnz sahf xor mov inc pop int adc jmp cmp push and jle cmpsb xadd dec mov jecxz cld ja xchg xor pop push and xor push pop cmp pusha aam dec fldenv xor adc and in insb or add mov cmp add sub jae pop sbb mov enter sbb jg push inc aam xchg jae cli cli mov sbb dec fstpt mov cld jno movsb movb lock sbb out cmpsl inc sub call arpl pop sbb jns mov inc dec fild jae push jb mov jge mov lods lds movsl dec sbb inc inc fdivrs dec data16 push imul xchg imul test leave insb lods xor and stos dec sbb pop cmp push cltd stos std call test mov push (bad) cwtl xchg sbb mov popf jo mov push aam xlat xorb dec (bad) (bad) (bad) dec jl jmp mov sub jnp inc leave addr16 mov xchg subb xchg shll mov adc les add push leave ja lahf jns,pt popa push (bad) repnz insb jp jno shrl jecxz or sub cld push pop je cmpsb dec (bad) cmp aad mov cmp popf lahf out push push std insl pop or in adc jecxz fs es inc inc jecxz dec stos lods popf xchg and or arpl adc cmc fnsave xchg mov jo lcall lods sbb or es jmp push paddusw sbb fnsave adcb pushf (bad) cmp cmp cmc adc mov addl cmp jg adc int aam mov enter adc and leave ja sbb push pop subl lea jmp loop in jbe xchg nop and idiv aas xor and sbb mov push aam jmp or cmc ret mov shlb mov stos cmp clc mov lock ja loope out loope dec cmpsb fucompp xchg fcomip rcll lahf (bad) aas fildl lret mov mov pop xor fwait or int jmp daa mov mov xchg aad subb adc fdiv rep popa sbb push cmp mov xchg movsl popa add pusha xor xchg sub xchg mov data16 jmp mov fstl fmull adc in pop cmp mov (bad) fnstsw imull shll ljmp add aad mov pop cli (bad) sub push cmp mov push inc cmp mov xor outsl addl xchg xchg aad test popa pop or ja jno mov cmpl xlat dec mov test imul int push lods enter sub xchg lods loop out inc sbb adc jmp scas rclb pop mov and stos mov mov hlt sbb xor mov das scas pop in insb loope jbe push pushf mov outsb xchg mov jb gs test adc popa ljmp sub push pop jmp xchg bswap cmp xor loopne mov (bad) mov cli mov popa mov sub mov pop mov clc cmp int3 cmp mov push movsl jle pop and push or mov jg in stos and mov mov dec add or and js pop push sarb imull outsl xchg and test cld mov rcrl mov push cmp in test pusha sub inc mov cmp stos push cmp (bad) ret adcl mov xchg sub xchg pop mov mov mov lock les mov inc cmpb inc or mov fnstenv inc pop jmp ss mov lods adc cmp rcll ficomp fnsave (bad) lcall and pop xchg lcall (bad) sbb or lock lods adc and xchg in test mov jno mov ret lods mov sub push inc pop mov mov xchg mov mov sar dec loope aam mov dec fcom pusha xchg mov fcmovu xor loope inc fldenv cmc sub sub and sub pop sti sbb sub dec mov xchg jle fisub jle andl fstps popa ja mov jecxz mov lds xor sbb scas (bad) jp int3 pop mov idivl cmpsb push cli mov lret cld test nop pop mov mov aaa xor sbb sti sub sub jnp sbb cmpsl jae mov ss cmc xor and adc loop jle adc add and sbb in lcall out or mov dec cmpsb test scas (bad) and xlat mov sub adc loop loopne xor (bad) inc loopne dec sub jns je sub in fisttp push aas inc stc ja (bad) adc push aas insb jo mov out xor push sub pop int add into jbe sub testl je rclb push inc rcll hlt or cwtl in push ret mov jmp roll repnz call xor jmp jmp mov and adc dec cmp push cmpsl sbb cmc in (bad) out adc mov mov int (bad) cmc mov jmp pop add xchg pop js jge out jge mov add sbb pop adc mov dec cli xor es insb xchg test jb lds mov in mov repnz in dec and pop mov add jnp pop sub fnstcw xchg jg sbb iret dec out xor jns inc pushf scas decb and and cmp mov popf rcrl movsb push aaa cmpl mov cmp imul loopne cmpb das mov mov sahf cld inc pop out adc mov (bad) lret mov mov out out sbb jge in imul lcall sub or pop lods stos xchg pop out dec add cmp xchg xor mov shrb inc pop scas pop pop cli out inc out adc xor fstp inc push pop mov pop mov outsl in call add pop (bad) adc movsl mov jbe xor lods ljmp add add push adc xchg cwtl pop jmp or sub and int3 push pop inc and add (bad) lods addr16 push imul lock push mov jo enter jno push mov push fsubrs mov out ret lcall fs fisubl add push adc iret sbb add mov shll jno subb lock (bad) mov sub pushf test imul inc les sahf cmp jle outsb scas inc fs loope jp pop adc xchg cs test adc fisttpll pushf adc insl fimul (bad) lock xor loop mov pop mov lret xchg lock out xchg (bad) pop incl xor adc into ret xor out repnz aam cmp ret (bad) int3 add dec mov adc pop (bad) jl (bad) ret cmp lds loopne cmp stc in daa icebp mov or lahf es dec jb,pn hlt test orl (bad) pop add and bound repnz pop mov iret mov push out xchg cmp cmpsl push jmp inc mov jecxz mov in sar push jmp push pop jle add inc fnstenv mov in push inc cmp (bad) mov fdivrs inc aad mov inc (bad) decl fbld dec je push fmul outsb mov pop daa adc dec nop das inc jl inc (bad) jl stc addr16 cmp xchg jno out sub inc call add sbb (bad) or or mov or cmpsw std cli pop pop fisubrl and lret dec mov cld (bad) lods je data16 and lods xor or sbb sub cmp mov test push dec leave fldcw sar lea mov push mov sub xor xchg cli xchg mov add popf test sub imul divb out jnp add stos inc sahf pop gs in (bad) dec mov stos push mov push stos and adc adc das daa mov js push xlat push fwait and insb push icebp hlt repz loope repz (bad) lea xor and and jae xchg (bad) push nop pusha insb xchg adc xor mov mov ss loop imul dec arpl mov inc push jo fdivrs ret or jge mov and inc xchg sbb push mov jmp jp push xchg rcll in out mov enter in insb jb lock sub jnp aad adc adc mov or mov dec xor inc stos (bad) pop lret dec fs xor ret fs mov push jne andb (bad) test jp xchg divl fldl movsb pop push mov jbe fdivl aam imul jl sub mov repz or test push lret hlt xchg (bad) xor ret mov inc aaa and mov aad mov or shr iret add jo movsl push sbb arpl pop dec ljmp cmp pusha cmpsl sbb subl mov and fs fildl sub xchg cmp and cli (bad) mov pop sub and push cld lret inc mov mov xchg cmpl adc mov add xor xchg aad (bad) jle jle (bad) (bad) into jp inc mov push mov sub add clc les cli and jg push mov popf cmp loopne in push in dec aas stos sub in push and dec addr16 xor mov je dec clc add sub sub cmpsb dec test mov push cmpsb iret imul addr16 inc cmpsb lret stc test dec sti ljmp add (bad) xor push fs lahf push add stc xchg sub aam inc cltd into mov push inc loopne idivb jae xchg mov es dec mov (bad) popl mov lahf jl gs cmp mov inc dec out and mov mulb lret xchg test xchg or das aad ja pop sbb push movsl les loope push xchg clc xor imul sub enter jmp jno sbb adc shr mov out roll mov add (bad) mov mov mov xchg out push xchg cmp lods rorb das pop xchg pushf ficomp push xor push fisubrl inc idivb mov jge mov lahf cs add inc mov outsl sub popf mov ss enter or mov test push mov cmp dec and es and xor sbb push stos dec outsl sbb mov pop int pop mov or xchg sub or clc movsb mov and insl dec iret (bad) pop jae jne fs cmp push rorl xor xor add cmp scas daa cmpl in xor fidivr mov vpaddusw inc jne mov pop sti sarb pop aaa add cmp push scas icebp test inc fmull pop loopne sub (bad) sub leave out pop std into sub adc in outsb or cltd xor push mov lods xor inc fisttpl nop add xor cmpsb ret je mulb inc fbld sbb adc fbstp jge decb xchg push inc (bad) jb cmp popa adcb mov xor cs xchg xor pop add inc and test push dec mov mov sti pop jns pop push stos sti pop int3 test lods rorl and inc and fsubrp pop jns mov cmp movsb lea sub mov inc add mov repnz jae inc xchg leave ret int mov daa outsl jae cmc ds popa lcall adc cs mov xor mov jl les pop sbb sub adc out sti inc mov pop fistp in out pop jne inc jns dec mov sbb jge push cli jg xor adc dec into and jg cmp aam dec dec int3 sbb adc cmp fcoms lahf lahf adc and sbb or xchg jbe fbld dec lret dec cmpsl adc inc sbb mov push out push dec loopne stc sub aad xorl clc fucom inc pop xchg adc (bad) jnp add in dec cmp repz mov or (bad) xor outsl rorb mov in mov das data16 xor out xor dec cmp sbbb int3 cmpsl loopne (bad) jno xchg xchg xchg cmpsb and push mov mov cwtl lds (bad) (bad) (bad) xchg jmp pop pop scas adc cwtl add inc mov push or cmp das pop or aam mov add pop mov imul (bad) lods mov add mov icebp push cmp sub mov cmp push mov push mov rcr (bad) cmpsl in add dec aas mov mov xchg mov mov loopne in notl repnz sbbl jbe in or test out mov rorl test cmp sbbl in mov pushf stc sub ss push lods loopne jl imul les jl mov sub push dec popf push jns movsb pusha leave sub xchg push cmpsb fnsave mov sbb adc test jmp mov dec dec inc pop std test jae jno push and bound sahf (bad) es scas xor sub and dec pushf arpl mov push inc sarb xchg sbb imul inc pop push rorb and push dec mov sbb sti mov rclb in cli inc xor inc cmpl mov and je add dec inc rep jns insl stos int3 cli lahf adc inc adc xor in dec clc gs adc xchg call popa mov pusha jge vcvtss2si jle out jnp and pop pop mov incl lods stos shlb and scas js fisubl aas push pop movsb xchg and mov xor cwtl sub loopne sti inc and les jo cmpsl mov nop icebp fnsave inc xlat mov xor inc iret cli sub lods jno pop pop jae inc adc add jbe sbb scas mov loop cmp cmc out pop jno push insl jmp mov aaa lcall mov out popa fisub xor test mov mov inc push xchg jnp mov sub sbb call adc cmc iret push jno sarb mov pushf repnz or es shrl pop pusha jno insb mov pusha cwtl mov inc ret cs test and pop negb inc jo mov test pushf in cmp (bad) mov pushf push bswap mov mov jle lahf test xor movsl test xlat das and mov push xchg cmp or mov mov aad ret mov push sub (bad) loop ljmp pop scas adc sbb xor dec jecxz add cmpsb adc sbb jle clc es push imul and cltd adc jnp add xcrypt-ctr cmpsl pop das (bad) call cmpsb mov and sub jle inc pop ja inc adc stos int3 sbb or jno xor mov fwait add fimul cmpsl int3 push adc xchg sub pop test mov insb mov jge popf cmovnp and xchg jne jno inc and mov sub movsl les idivl out add xlat dec jecxz add inc mov dec lds xlat jmp and xor sub sahf iret out fmuls adcb popa test stos mov adc jg adc jo in and test add push cwtl pop int fldl2t mov sbb xor addr16 xchg mov cmp mov jge push cmc inc aad sub lds test sbb out pop or lahf push push cmc mov sbb and cmpsb aas inc loopne xchg xchg cmp sub (bad) cmp aas sbbb fidivrl and sbb scas dec popa cltd (bad) inc sub mov cltd sbb aam mov jns je fistl pop mov add in mov or sarb xchg hlt out imul inc cmpb mov pop and pop in ja call mov ja lock insl pop (bad) mov xor repnz mov inc imul adc jg or dec fsubl adc cmpsl popa or out mov dec add cli sbb push mov pusha aaa adc xlat in cmp (bad) rclb jno push xlat test dec out movsb dec clc scas push mov in (bad) fstps mov hlt shrb in loopne jmp arpl pop jno and pop jae adc enter (bad) into loope xchg mov fst mov imul mov rol xchg inc xchg rcrl je popf xchg lods add adc scas adc jnp sahf sti mov fisubl into inc push icebp add aaa shlb jae cmp sbb xchg stos pushf sbb rcrb fadd sbb inc cmp pop scas repz call jbe or sti xchg cmp lret fwait pop sub in xchg (bad) mov pop in addr16 adc xchg push pop sti push mov fs loop jae stc fmuls out scas insl and mov push sbb add mov pushf subl icebp test cli pushl daa or je mov aaa mov (bad) cmp or mov sbb negb jo jb pop scas pusha and jns (bad) jnp xor (bad) cmp sub adcl fs int3 in (bad) sbb add mov sarl adc jge ret push xchg xor out xchg rcll jle xchg clc jle cmp gs testl add inc push and orb or ss or out imul cmpsl add xlat pusha aas in cmp dec sbb cmp out pop xor stc cmp sti call popf loop inc out mov fsub pusha nop fidivl fisubl test out jle test data16 inc call pushf lahf inc push push es out ret icebp daa xor or aad sahf push lods mov push sub mov (bad) aad sbb aas pushf fnstcw push out jne jl adc and aaa test mov push adc movsb dec or cltd cld cmp add in fcomps stos dec popa mov pinsrw popa test add or jecxz mov cmpsl adc adc xor fstl inc cmp sub enter or inc sahf pop repnz and inc imul mov (bad) test mov fidivrl inc clc cmp (bad) call outsl mov push mov cmc pop flds in cltd cmovo cmp movsb mov (bad) pop add (bad) aam add lock setg pusha decl push (bad) dec and mov scas dec add jle mov xchg jb rcl mov mov jmp lret (bad) jno push cmc cmp jle (bad) adc lock aaa mov push ss jg mov fldl (bad) push shlb mov xlat addr16 rcll jns rclb enter sti hlt pop mov out cmp loop adc (bad) cmp test lods aad enter cmp or stc stc hlt cld icebp testb mov das lret (bad) jns xchg xchg std fstpl negb sbb inc mov fstpl mov and xchg bound (bad) push pusha jae pop push or jb,pt sub insl push jl or shr lds sub mov jne rclb rorb insb scas jecxz or push aad dec aad jg jns or in ret mov sbb test ja and sbb sbb jmp push daa repz sub (bad) repz or cmp mov js pusha aam and push and cli icebp sbb stc jns aam cltd pusha shrl fild aad in popf xor sub mov leave mov das jle sbb mov dec andl mov (bad) or lret xchg mov in xor hlt sbb sub xor dec out xchg es add stos incb push pop sub loop xor mov inc xchg cli (bad) push das pushf aas ss lods (bad) nop or sbb push in repz sub lcall int cmp fldcw mov cltd movl lea xor (bad) mov pop sub (bad) mov jge and scas push stc mov mov mov jmp inc xchg out push lret test lea xor cli adc sub iret xor mov cs (bad) xchg in push pop fisubl and mov addb (bad) dec cmpsb add imul int3 dec inc clc test adc adc outsb inc fsubrp push xchg test fistpl cltd mov sbb adc pop dec pop int adc jno inc lahf add fmuls pop xchg test hlt stc adc stos lea mov enter jns (bad) cwtl cmp loop fidivl adc ljmp add xor loopne clc hlt cmpb cltd dec dec xchg leave ficom stc stos or (bad) dec xor lahf psubw xchg (bad) outsl les aaa int dec mov push lret xlat lds pop (bad) xor cmp xchg cli pop test sub ret mov divb int3 imul mov cmpsb add mov popl mulb mov jne mov fs lahf test lcall push pop in shr stos inc and test pop ret push xchg stos pop les pushf popa in test jb inc sub push mov or push mov inc stos cwtl or hlt je inc xchg imul dec xor push adc mov or mov xor addr16 jb cli sbb mov mov add mov push les fwait and push aam or sbb pushf (bad) xchg pop loop movsl xor lock sub xor push (bad) push mov xor xchg in xchg lahf pop jb xor adc push jge mov mov daa mov or push (bad) xor xchg pop out ss rclb daa cmp push lcall in popf stc mov lds sub xchg adc jg jge ss mov repz jecxz scas pop ficomp mov fwait lahf jo fstl push or mov rorb outsb mov jnp clc xchg mov xchg and outsb mov es call outsl jmp push mov push inc les xlat lret js sahf movsl add sahf and or lahf (bad) cli mov clc mov loope aam sbb sbbl (bad) sub inc jnp sub leave lret mov (bad) repz adc add scas insb pop sub aam mov and repnz lock pop sub mov ret leave inc cmp adc test fucomp mov lret inc mov fstps cmp je jp jp mov les pushf stos movsl push cmp dec ret inc xchg repnz mov cmp (bad) int lods test add push pop pop mov addr16 shll sti mov mov xchg ret (bad) loope (bad) jmp repnz cmp mov fcompl pop das fstps mov sbb (bad) jb mov test pop pop flds in aad movsl dec jno lea lods das pop (bad) mov sar adc or xor or jp scas idivl xchg scas aaa inc in nop clc ret sub pop xchg adc sbb addr16 adc mov stc ljmp ljmp sbb les aas sti mov dec add and xor enter add movaps jg jg adc dec adcl cld stc sub dec arpl pop mov cmp aad jle (bad) mov mov insl repz jge cltd mov (bad) xlat cld fisubr les xchg cmp push loop adc inc scas shll and xchg mov in divps (bad) xchg fstl or pop (bad) in adc aad icebp adc push pop cld (bad) xchg ljmp push add and jge adc adc loopne cltd decl lcall pusha insb or mov push adc in enter adc mov xor or and mov rcll xchg mov orb dec mov insb daa sbb data16 sub cmp push push rclb jg push loopne (bad) adc jg mov mov jbe dec cli and sbb inc roll fs xchg out insb lods int3 lock inc call cmpsb pop popa je frstor cmpl andl les outsl stos mov inc clc stos (bad) out hlt pop mov sbb (bad) fstl jl gs adc and sbb test inc push and jle arpl sub adc mov subb and fwait idivb loope,pt sbb std mov jbe mov jmp das pop push mov mov jge mov mov arpl sub and insb nop out cs imul repnz rclb test vmovss adc adc js or xchg push pop (bad) or les (bad) ljmp rcrb (bad) imull sub and xchg and cmpsl or insl lret test out inc xchg xchg mov adc inc ljmp pushf movsb nop ljmp mov fmuls in inc and push outsl mov rcrb call adc pushf ja xchg xchg bound daa xor adc (bad) out aaa imul inc repnz inc inc icebp es mov test and lahf stos cli mov (bad) (bad) mov sbb inc inc pop aas inc add pop dec popf mov call pop jae dec lock scas mov pop gs mov adc arpl lret pop cmpsl sbb popl adc adc test jmp fcoml fdivrs out gs or mov push out jno mov les push out lods repnz inc xchg add xor mov pop jmp adc mov (bad) push ret push (bad) push jl inc leave pop add out aaa pop mov lods pop jl mov pop je inc inc pop mov fldenv adc push call lods mov or mov lret hlt dec sbb repnz add cmp sbb lods sbb jle in inc jmp xchg pop mov test stc xor sub jecxz sbb movsl data16 xchg jmp or xchg div sub inc pop ror or leave sbb flds dec repz mov lock (bad) lods inc cmpsl nop mov repnz add ja lret in pop xchg mov pop mov jmp leave into scas pop stc lret pop and in jle pop push cs mov aad mov imul daa and stos loop fdivs (bad) scas (bad) adc sbb xchg stos icebp test outsl scas mov fwait aad jo lahf aas in cld ljmp test cli jecxz mov or pop sub das stos xor sub outsb dec adc xor lock (bad) popl and add dec inc into jbe adc js or inc jmp jmp mov cmp mov mov jne lret out pop int3 push push push mov cmp jp sahf xor and test shrl sub xor loope push jns (bad) hlt lock test sarb inc inc mov movsl jno push test and inc jl out mov or inc push (bad) jne daa or adc mov sub aad stos pop sub lea js sqrtps outsb mov sub pop push cld fisttp loop mov sahf cmp xor xchg cltd mov dec divl aaa ror mov jecxz mov lods aas call or ret lret mov inc or mov je xor pop out loope dec xor sub mov hlt stos pop mov enter aam sub mov cmpsb adc jo stc inc les push dec inc xchg scas and loop loop mov xchg movb aam mov in xchg (bad) push or pop or sbb push inc xchg dec and mov mov mov sti stc sbb out jne fnsave sbb xor mov popl adc rcll mov pop aad (bad) jmp jnp cmp sbb dec lret lock fs outsl insl ror leave pop ret jecxz in repz cld pop add xchg (bad) sub push bound sub jne jae popf fimull xchg call mov pop sahf add loop jg sbb loop dec cmpsb out mov rolb or andl cmp cmpsl mov and (bad) mov scas push popf fimul mov repnz cwtl push scas (bad) jne dec xor xor test xchg mov (bad) pop mov adc lock roll imul fldt and inc add push js pusha sub leave push outsl ja lods cmp mov jge daa (bad) cmc ret sti test push repnz sub inc subb (bad) jae or sar icebp movsl and cli sub sbb pop mov pushf inc mov dec (bad) cltd addr16 push movsb mov faddl push ljmp cld push outsb and jo lret pop shrl push jecxz push loop (bad) or cmpsb sub inc fsubrp (bad) addr16 pushf int3 das inc out in mov jne add lret sub (bad) add mov les mov cmpsb push out in and push xor push mov lret adc sbb mov mov mov inc mov cli jnp push add fcoml cmc push jmp pop imul xchg cmpsl xor adc mov xchg jle push addl stc and ret inc pop fisttpll out gs iret icebp lea cmp xchg cmp cmp or fsubr lret repz jp mov imull mov add mov mulb adc xchg loope add fwait or jl mov push sub jg add xor mov or and call jae sar std push jle sub mov in dec inc mov push jbe (bad) pop call stos push idiv push movsb add cmc ljmp inc cltd clc mov ss pop imul dec fstl in clc ret cmp jecxz mov pop push into jae inc pop xchg jecxz sub xor add inc cmp push mov jmp mov cmp pop repnz inc mov jbe inc mov mov jle adc or aad pop mov (bad) lahf (bad) repz mov xor mov or movb cmpsl jge enter and push xchg pop les aaa popf dec xor stc aad iret scas mov inc or gs dec insb hlt mov rdpmc and xorb and adc test in jmp sbb mov rolb loop lods loope jnp loope mov lods add hlt mov jl xor cmpsl inc jmp (bad) push jne enter enter push mov (bad) lods out mov mov adc in loope das rclb ror push inc dec inc mov sub pop (bad) fist inc mov mov cmpsl jle scas adc scas mov sti fcmovne inc lret fcom addr16 or mov adc imul mov (bad) mov dec dec jb pusha jl js stos xor dec push insl je popl mov insl mov mov jge test stc es es push aad rorl jb aas mov jle test fwait lock mov fisttpll mov sarb xor push jecxz int add loopne xor mov scas repz shlb xchg add stc out and add and lock imul mov sbb sbb pop or push sti divl jns and mov push hlt fcoml repz fwait repz push mov mov push loopne mov fcmovu (bad) lcall (bad) lock cs lods mul sub lcall fwait xchg mov popa paddd cmp into cmp ss push rclb or leave mov lods sub movsl inc (bad) sub add xchg mov (bad) mov cmp add int in push mov pop pusha adc rclb adc adc jne mov aam cs sbb test adc nop sub cwtl mov cmc cmpsl mov lea jnp rcll test cs and popf mov je insb ret dec mov dec xchg sbb jo mov mov jl xchg mov imul sub mov lcall add jp mov jge test add jmp push leave scas movl test jecxz mov fsubr mov add lret push inc je cli or sti cmpsl (bad) add (bad) cmp mov popf mov stc int xor dec jmp dec inc mov jbe mov add xchg jno insb ret xchg lock adc xchg inc loop adc sbb xlat xor sub cmp movsb in inc outsb pop add pop js xchg and adc ja ret in call outsl cs out mov pop clc imul (bad) adc stos aad icebp jo mov xchg pmulhw rolb notb sti pshufw (bad) jo adc insb enter add sbb inc sbb dec clc jne ss cmp push add int pop gs dec inc sbb mov loope adc sbb mov movsb or std enter jg sbb sarb pop push imul jo and mov push cmp lds jl mov dec mov scas inc notb imul icebp into cmp insb jnp ss lock les and rcrb push movsl jnp push adc out jb xor rorl pop ficompl and fisubl sti movsb (bad) mov dec mov mov xlat or cmpsl pushf sub cmpsb and mov int and xor pop mov cmp inc (bad) clc pop cmp nop mov or sbb jl sub push pop dec stc lret dec cld push pop stos shrb mov xor cmpsb mov mov and fcoml xchg xchg rcll lret mov push popf dec das sbb fdivs (bad) repnz mov daa in addr16 ss mov add les mov add frstor in lods aaa mov adcl imul test push adc and jb push mov arpl lret cmp aad adc sbb addl sub iret xlat mov mov inc adc mov scas sbb stos jge sub and int push fiadd hlt xor xorb push lcall sti pop pop xorl icebp xchg cmp push sbb push std mov or cli push sub adc inc jle mov xor sbb fistl cli xchg das xor in out inc jbe dec insb cmpsl mov sbb int scas pop notb push sahf pusha (bad) sub (bad) mov daa es pop push in cmp sbb cmp adc xchg mov add es frstor pop push inc movsl jb mov lcall lcall add jnp por ret lahf mov arpl (bad) ja jmp ret cmpsb mov pop pop nop push fnstcw in cmp into mov fidivrl (bad) iret sbb imul and out cld xor cmp push sub divl int3 scas inc pop popf pop mov test push pop dec pop shrb push fdivr and icebp (bad) cmpsl mov in adc mov shrl jbe fistpll and push ljmpw jge nop jns out cmp sub dec (bad) pusha jb sub cmc inc hlt xchg je jae sub in mov and mov push mov add cmpsl out jecxz adc mull mov push addr16 into inc sbb call call subl jge outsb ja (bad) xchg jae dec dec sbb adc cmp pop jecxz jmp mov popf ds out and mov in (bad) mov fildll es shl stos mov (bad) lret mov (bad) arpl stos dec rol loopne add xchg mov cli les xchg (bad) push xchg popf jbe mov lea cli movsb mov dec sbb add sub jge call imul sahf adc ret daa jno mov (bad) or scas sbb mov pop cmp (bad) push xchg jle arpl flds fiaddl sti test outsb pop or add test fstp dec (bad) lea cwtl ss inc dec lcall push lret leave aaa mov push movsb xorl and inc idivl notl insb push enter sbb rorb sbb cmp cld leave loopne jns repnz and add jne idivl mov and clc lods add mov adc cld scas and es xor and add fimul dec or imul out push mov mov fwait popf por xor and ret cmp sub or incb jge cli adc lods mov push dec pop jbe std xchg add add xchg mov jnp pop and repnz push mov jnp rorb sar jb pop sub call rolb (bad) jnp cltd aam (bad) add adc jg popl pop call or popa fmul or sub or rcr das jp push mov lret and adc adc rol repz faddl (bad) icebp inc ds test pop ds loope mov loope int mov sbb loope pop popf pop call das test jnp stos test pop ja outsb das pop fwait mov xor mov xorl xor aas mov iret aaa in loop push popf sub cmpsl test test imul sbb dec mov into popl mov and les repz inc dec lods cmp xor mov push lock xchg and push nop pop or sub fs mov in pop adc in jecxz fcmovnu aam (bad) push pop inc (bad) aas xchg jmp mov clc test cmp cwtl pop daa cli mov hlt cmp mov ds scas mov sub fwait add insb and stc pop aas mov sbbl lock add daa shll js outsl nop sahf flds inc enter mov mov inc and mov scas in cwtl jmp sbb sbb adc mov pop or sub je xor out sub push cld jecxz xchg sbb (bad) pop add call (bad) and std std xor mov cmp test mov (bad) or ror mov jnp popa push in in lds xchg shrl pop test icebp or add stos xchg jmp (bad) hlt icebp xchg bound mov adc int3 addr16 pushf inc add daa ret and (bad) adc xor in jb movsl cwtl add (bad) icebp sbb cmp stos add pop dec das aad clc push stos mov rcrb xor inc pop (bad) cmp lea je push dec sbb xchg mov xchg popa idiv das and cltd scas add fwait jge repz jp mov or adc scas add pusha outsb lods xchg xchg test xor call pop (bad) mov jmp addr16 in data16 lock jnp addl pop sar or addr16 loop push mov inc xor dec mov pop xchg adc push or push aas inc pushf fbld subl mov mov imul xchg jns test icebp aaa fwait clc mov nop xchg sbb and stos adc fildll dec les inc inc push ds xchg dec aaa aam outsb cld cli sub rcr dec ret mov fiaddl inc jnp mov add es insl cmovp cmp jge dec sarl xor cs ljmp jg fcmovu clc test aaa repnz and and jbe jae xlat push and (bad) mov test ror cwtl cwtl cli es loope and int3 repz mov add pop jl mov mov cmp outsb into and outsl xchg xchg inc sub push push ficom add xor and mov sbb daa bound cmp mov cmp xor dec cmp or aam xlat fidivl aaa jle repz lahf xchg mov out scas aam xchg rcrl ret cli pop (bad) out pop ljmp push xchg je jne add sbb add sub in sahf pop aad mov mov inc push cmp arpl mov call stos insb mov sub in lss pop pop adc scas leave inc std and (bad) or xor and nop add insb xchg jns ffree bound mov sub inc xchg hlt lahf cld and or mov cmp jmp dec in xchg push fstl cltd sub lret mov jbe fcompl (bad) scas cmp jmp stc inc cltd mov mov loop add aam fs jg addps sub sub (bad) cltd setnp xchg inc jecxz ja and push xchg push inc pop clc xlat dec es ljmp mov adc loop pop sbb subl cld xor jmp stos rclb (bad) xlat mov nop rclb mov push ja mov and mov inc and int adc xor push mov data16 dec pusha mov or or push jmp add cld jecxz sti in add jo xchg jg push pop xchg adc push mov sarb pusha pop lock mov or mov ja incl cmp rcr (bad) dec mov xor addb (bad) cmp jp add pop fistp mov repz psubb shll xor cmp add int or xor mov or mov pop push or aas subl sub jmp (bad) mov mov or ds cmp inc (bad) xlat mov mov sti jo mov lods scas xor stos out mov scas xor mov dec adcl (bad) insl jmp jae adc push cli mov dec lods xchg fisttpl negb jmp mov movsb imul out in lea cmpsl lods les (bad) out pop jnp rcrl test mov adc sub (bad) cmp fs fldenv xchg pop cmpb cmp inc mov xor out push mov int cmp xchg or inc xchg dec jl out or in sub lret mov fwait and test cmc push cmpsl mov rcpps in sub pusha xor mov arpl outsl out add clc add dec test lret insl dec xor inc sarl ret or mov sub push lods lods and push adc push ss ds add mov (bad) cmp test jecxz ss in jb mov cli sub jecxz dec movsl sub mov pop push repz jge icebp es fdivrs cs jo shrb add push xchg adc (bad) addr16 adc mov iret sbb sub mov (bad) imull dec adc sub aas hlt arpl enter addr16 pop nop cmp lock scas shr jle,pt jle xlat rclb pcmpgtd xor imul lahf int daa mov add inc and pop mov jbe inc xor cmc clc (bad) dec out loopne jl push scas push inc mov jg nop pop lahf inc jmp lods aad sbb movsl out flds mov push fidivrl push iret movsl movsl jp mov push adc orl ljmp (bad) movsb repz push push cmp push jp fist aam iret dec cmp imul fwait into hlt mov cmp push repnz hlt (bad) into inc sub (bad) push push lds mov sbb ja ja mov sbb fist bound mov sub jge adc hlt or clc jl sub mov std imul mov movsl iret pop cmp addb fs (bad) sbb loop aad add (bad) mov rcr stc xor and push loop add add cmp mov xor mov hlt repnz movsl addl sbb push fdivr inc and bound icebp xor mov mov cmp lods out fadds repz sbb pop jbe push aam idivb mov mov push stos popa or mov inc stos push jmp mov jns or xchg and jae (bad) add dec vpunpckhbw gs adc je in in lods mov jnp aad sbb pop add sub js lds pminub sbb ds es dec sbb nop push push stos dec in adc rcrb int3 addr16 stos mov cs shrl xor mov cwtl cmp into xchg mov pusha inc fucomi cmc push js xchg cmp sbb (bad) (bad) jne pop xor mov adc fs lret dec (bad) (bad) int3 ficoml pop push inc adc push push mov (bad) lahf sub insl psrlq repnz xor lahf xchg mov cwtl pusha (bad) mov push (bad) jbe sbb adc cmpsb inc push mov hlt inc mov xor punpckldq sub push jecxz mov mov in sbb dec xor jnp cmp stos mov mov pop out out stos and (bad) mov sti mov pop std daa fidiv pop fildll push stos mov cwtl mov inc daa xchg xchg ror sub int mov ret lcall ret and jne sub push xor repnz stos add mov inc cli add es in push sbb xorl inc pop (bad) pop push nop push xchg (bad) lret jo add imul jo cmc idivl lods push inc ss shr sub fiaddl and (bad) int pop pop repz and mov inc pop hlt xchg xchg dec adc fstpl xchg dec push mov sub insb ja out repnz lods pop xchg (bad) xor lds (bad) pop in sbb xchg adc scas lret jl mov lock xlat pop push jp pop jecxz pushf outsl in xor int3 and lea adc inc fnsave cmp (bad) lods mov mov aam repnz (bad) movsb sbb fildl push xchg sub xor lock jmp sub cld shrl sbb lock mov ds push push (bad) dec sub cmp mov adc popf imul add jge bound cltd gs xchg rorl xchg fadd pusha test xchg cmc jae jns pop add fdivrs mov (bad) xor xchg inc inc add test jecxz mov sub repz mov movsl lahf stos push movsb clc cmp mov test xchg sbb push sbbl sbb jecxz fsubrs xchg jnp xchg mov cli js xchg inc push or mov mov or rorb int3 neg sti (bad) add adc fsubl shlb cwtl add sub in ret loope xchg and adc jg insb out pusha add das test mov fs pop mov xchg inc mov sub loope inc test xchg mov inc adcb into and shrl dec hlt in (bad) mov jle cltd insb lds cmp push dec movsb paddd repnz cmpb lods mov dec js js cld ret sub out add fwait dec mov enter cld f2xm1 pop (bad) pop lahf mov (bad) xor scas mov and mov in (bad) cmpsb nop imul addr16 insb into inc hlt push cmp inc outsl or or mov sub popa out lods push roll aad adc sahf popa pop hlt dec (bad) out push cmp add push popf repnz imul jo inc test inc mov aaa adc mov sub jns or push clc adc jmp sbb and repz xchg out sbb jle fs or pop in pop mov adc (bad) mov mov or cwtl pop je sub test cmp jno fistpll jl sbb pop cmpsb add repnz or jecxz rorl cmp push test adc call lahf aam cmp leave mov in lcall in jno push and jg xchg inc es (bad) xor dec xor fcmovu outsb sub imul jns xchg leave sub imul out add icebp adc push jg push mov xlat roll lods rcr in iret mov mov mov movsl or call out jle pop hlt xor xchg repnz push jle xor ret sahf jo mov cwtl mov sti or xor icebp jecxz sub add dec fwait push fdivrl fcmovbe outsl les mov or loopne xor adc idivb je mov cltd mov out in jmp or xchg xor sbb xor mov jmp mov lcall loopne dec out sbb test nop iret add pop cmp mov pop in inc sarb in xorb es inc std inc rsqrtps fildl pop fild sbb addr16 stos and cmpsb xorl or push jl repz pop add cmc jb aam pop stos pop cmpsb (bad) lock int3 pop idivl icebp jp jns dec sahf or jle lock dec loop jl add xor xchg js mov fnstenv jb sbb das cli sub insl sub aas call cld cmp mov arpl inc lods (bad) je inc cmc not jl pop cli aam shrl mov xchg sti mov aam mov (bad) jns sarb add inc dec pop in movb nop pop movsb add cmp mov je or inc mov outsl sbb xor jb es imul jl ss mov jp jl jo pop cli inc je mov loop lret and mov gs cmp sbb dec (bad) js dec xor ds push xor daa jae sbb or mov je test loopne les mov and mov jmp xchg mov dec in call jmp or pop pop out mov pop sub xor xor lds test mov fisttpl lods dec in (bad) pop out out mov mov jns pop pop bound adc sbb es out fdivrl push aad in popa repz add mov fist add lcall xchg jmp mov mov xchg test imul cmp rclb nop iret fmulp push pop (bad) xchg lcall fisubrl lea (bad) ret lcall push jecxz mov xor push (bad) jle lods push test push jmp (bad) scas fistpll inc lahf push fst lret pop sub xor fist pop sub pop arpl pop or pop cld cwtl push xor ret fcompl test out cmp test outsl fmul push sub int3 xchg aam outsb adc rcrl cmp mov movsb dec cmp movsl jmp inc xchg hlt xchg mov mov sub inc xchg jo aad (bad) sbb mov jns ffreep dec nop (bad) enter arpl loop push mov pop cld mov mov xchg xor imul push xchg lods insb pop cmp mov mov test ret je mov xor pop leave xor push adc leave cmp mov popf aaa xchg dec outsl test push mov (bad) push (bad) xchg das gs mov in cs call xchg cmc roll bound push ds clc sarl (bad) insb lods adc scas pop inc imul and (bad) lods pop movsl jne pop cmpsl mov mov mov fnstenv dec fdivl or add cmp xor in mov add in push mov or in addl sub int3 pop loop dec (bad) scas xor xor divb xchg lock mov mov fcompl enter sbb and jb and push outsl stos (bad) jo or xor ds sbb push mov loopne adcb outsl jg popl in add rcl enter ffree jne lret adc int mov neg fs mov cmp and (bad) enter aas jmp out inc mov pop clc and fwait lds mov xor xchg mov cmp ficoml mov popf mov mov dec lahf bound enter mov sub mov inc imul push loopne rorb mov ja sbb mov and add mov add stc mov lcall loop dec or pop cltd push or xchg cmp lcall imulb aam xchg ret adc movsb adcl mov jbe (bad) (bad) call movsl add stos mov pusha mov lea mov xchg push ret test dec adc sub fbld loope inc (bad) push jo sahf movsl int fdivl std push mov imul sbb notl jae sbb jp bound mov movl adc loop les cltd lret mov mov jbe fcomps cwtl or mov das push mov dec into iret into adc inc outsl push mov cmp xchg mov jecxz pop xchg cmp test adc push cmp in nop lods (bad) lds pop mov imul mov push and xchg out pusha (bad) rorb add adc and fs popa lods jg ficomp dec jb push popa mov repnz fnsave (bad) bound fsubrp cmp mov add mov mov sbb push std push xchg rorb dec adc mov cmp movsl rcl fnop inc scas iret idivb mov ds ficomp lcall ds out cld scas sbb rol imul iret fstl mov xor adc jo pusha arpl inc pop lock es xchg in iret loopne stos inc sbb (bad) mov addl (bad) lods adc cld jp and divb mov inc negl popa out stos sub lods inc loopne xchg adc je xchg sub or std pop in cmpsl or xlat push mov add (bad) pop imull mov dec insb cwtl xchg fxch call enter xor mov inc loopne and aad mov cltd or sbb insb dec dec rclb push data16 mov in std dec mov sti xchg sub sub in sbb xchg incb mov mov imul and add out imul xor out jns pop xor inc movsb ss fnstenv fwait mov mov scas js lock cmp jle pop cmp test ljmp cli xor std xchg xor cmp xlat mov or cmp cmp push movsl sub (bad) cmp push pop pop cmp ljmp or jecxz test scas mov or out xchg pop inc xor popf cld (bad) push mov rcl icebp and push hlt dec icebp cwtl sub scas (bad) daa (bad) enter out jmp adcb hlt inc sahf sarb (bad) mov scas jo xchg rcrb aaa cld sarb dec push push int pop in je fisubrl inc mov cmpl dec adc int cltd movsb test popa add sbb pop cmpsb jne mov sbb sti repz sub fiadd inc push cld cwtl out and mov cmp xchg in mov sti test cld xor decl mov (bad) jno imul mov mov cmpl xorl (bad) mov jbe pop faddl test pop dec or std jnp xchg stc mov pop mov xchg mov mov inc sbb mov sbb pop lods and int inc add adc lds int push mov sub xchg xchg jae adc dec fdivrs cmp dec jae test adc movsl mov aad adc out add sbb pop clc inc xor in ret call xor loop dec inc push or mov lods out push adc cmc push stos or sub loope (bad) and push jb xchg sbb (bad) inc es push sub jge out pushf add cmpsb jb (bad) mov mov loopne loope inc push pop pop xchg add std mov lods sbb cs add mov cmp hlt pop pop cmc nop in scas push into cmpxchg not xchg std fiadd (bad) out xchg push xchg mov (bad) sbb pop mov dec imul bnd fidivrl insb sub xchg mov mov and adc jb dec enter mov ret mov ret xchg data16 mov scas clc jo inc sbb mov or test adc mov pop sbb cmp xor mov jle push sahf and push mov pop or popf cmp push fwait addr16 xor gs cmpsb iret xchg cltd and mov imul cwtl xchg and repz repnz jno jp fs cmp cs (bad) jno jg cmpsb or sbb inc lock push jae mov xchg add jnp fnstenv enter in add lods cmp fnstsw out int3 mov inc cmp aad ja dec adc push or lret xor push (bad) out mov outsl int3 nop xchg add data16 jno inc imulb sbb lea sbb scas aam cwtl hlt sbb adc lods pop (bad) mov pop repnz pop sbb test pop (bad) adc hlt push (bad) jbe cld movsl adcl pop jecxz add xor rolb mov nop sbbl inc or out pop push jp dec inc ret sub inc push fwait hlt outsb fs (bad) out pop mov insb out lock xchg mov pop movsl pop jl sahf cli cltd add sub push bound fldz xchg xlat lret dec dec dec and mov or scas aas jbe mov (bad) xor cwtl mov sahf dec xchg pop mov subb movsl add sub int3 add call je div sbb shll jb mov outsl leave fwait hlt rol stc roll ret push push mov adc push xchg (bad) xchg or dec mov int3 test cmp pop test mov xchg cmpsl test mov insl ret loope mov xor fimull aaa out pop (bad) imul jmp repnz jno dec in cmp js dec repnz out aas into fisub mov xor jg daa loop jmp (bad) jo je or fdivl test pop mov push cmpsb cmp clc (bad) fwait ds cmp int3 jo test adc stos das (bad) test cmp (bad) ret pop in in lea hlt cmc in sub push vmulsd popf push imul cmp xor rol mov cmp jno pop push sub sbb push mov popf inc leave ret leave add out xchg mov rcrb icebp sub pop add rcr mov push dec arpl mov mov les add daa jge fcompl (bad) mov push or fwait mov or (bad) shlb jno aad mov mov (bad) inc dec mov nop sahf inc xor stc add imull sub mov stos loope in aam rsm xchg push push iret mov stos (bad) in je outsl xor or sub std mov or inc loop (bad) xor das inc push stc leave stc out cmc sbb cli mov lret das in rorl inc lods repnz push test ss inc aas add or call lret pop leave loop out inc or rorl int3 pop dec daa mov mov xchg and sbb mov es xchg jge jns (bad) fisub xor sti lret xchg adc in dec or mov sbb push xor insb imul inc inc sti cmpsb stos mov imul sbb ja dec mov mov lahf sbb add inc sub dec std mov in (bad) insl out outsb cwtl fildl in mov sti pop xchg cmp mov inc ljmp bnd test roll jbe loop dec or loopne dec bound xor (bad) jne test out inc add mov xchg cli xchg cltd or addr16 jbe pop in clc push push or cmp sub cld xor in jnp cmc divl sbb jno in stc mov in adc jle mov outsl dec pop loope mov adc aad mov jae cmp cmp cmpsb fmulp mov imul and clc setp mov loop lret add (bad) bndldx fidivl mov shl cmpb adc notb adc testl cmp in xchg movsl adc or pop fstps mov je movb dec and cmp fcomp sbb fistpll xor cmpsl rcrl inc cmpsl sub jmp fildll in gs out sub inc fisubrl cmp in in xchg inc mov fstpl cmp repnz dec arpl mov stc mov cltd lret pop mov mov mov (bad) jae ljmp mov mov fsubrs bnd lods stc fldcw arpl daa cmp pop imul fisubr mov lea into cmp nop shrl inc mov lods push mov (bad) loopne inc fidivr inc xchg aam adc popf repz mov cwtl push lock js push xor xchg clc push jb xor (bad) jbe aad xchg push inc cmp add popf and lcall inc jae ss (bad) mov sbb mov ret rcll sbb dec or xor in sub in sub mov (bad) dec dec insl mov repnz pop sub lds adc pushf fbstp cmp dec (bad) mov jge cmp lahf imul jae dec nop out push xchg call test cli xchg les xor cwtl ja movsl or push inc outsb ljmp mov fs movb add add andl ds mov mov rorl xor fdivs out lods sti incl mov sbb and mov sub ret jns fwait and cs add out jp xlat sub jo push xor or mov dec lret cmp mov jmp cltd xchg dec mov mov loopne imul pusha cmpsl cmp leave ja xchg pop divb push fisubl adcl push xor xor mov js lahf cmp sub ja adc or icebp cmp mov (bad) iret pop mov jnp sub jl lcall mov xchg push cmovg packsswb or mov sbb out movsl xchg movsl (bad) mov lret nop dec (bad) cmp test jecxz xchg outsl les jg movsb push adc pop fnstcw sti inc mov push fs movsl out adc mov mov fistpll imul xor ss repnz (bad) sbb clc lods xlat cmp cltd fwait sbbb or xchg outsb test mov movsl add or jg pushf lods sbbb cmpsb lock jbe (bad) movsl or fldenvs push stc movsb mov into leave or stos in movsb stc push push imul iret pop ja cltd daa sbb adc mov loope addr16 lods xor or pop dec or adc mov iret mov rcrb out das das add cmp push mov (bad) cmp adcl aad (bad) pop mov imul sub push rcr sarl adc loop ljmp mov int3 xor mov adc mov test xor push leave cmc jp (bad) jmp int stos insl push xor add fiaddl fs jo pop cmp (bad) adc mov fistl fs pop test dec stos cmp clc push pop cli int3 rcr push aas pop inc xchg cmpl test test xchg mov lahf ss mov xchg push push dec pop jae je push mov loope cli adc fwait xchg into pop pop and mov fcomps inc lods ds dec lea das das int3 aas add scas fs in push push jge xchg sub or jp sbb mov insb ficomp cwtl aaa mov mov lock mov stos ljmp subb inc lret sahf adc or sbb dec sarb (bad) (bad) scas inc sub pop mov dec loopne or xchg sbb enter inc imul xchg sarb dec jne sbb gs (bad) fwait ja test scas test mov mov jge les es xchg (bad) cltd or cmp pop (bad) je mov or fnstcw push (bad) mov out inc icebp repz fcompl ljmp (bad) into push (bad) mov lahf fstl xor pop test sub adc xchg not sbb in mov push les dec jmp insl aaa mov mov dec xor js (bad) test xchg sbb jno cmpsb gs xlat aam fldt lcall sub repnz xor push push push jg fucom xor leave hlt cmc in sbb xchg dec aaa lret rclb idiv xchg ss data16 mov ficomp ss sbb hlt fcomps adc movsl mov loope push and scas inc pop test adc lret inc push insl pop jnp test cmc movsb ss xor ret lcall mov gs in gs push addl add mov push cmp pop das outsl (bad) or lea pop imulb rcrb mov mov (bad) jne fidivl xchg ss fnstcw aas inc out mov es movsl fcmovbe popf jecxz aam mov lods sbb sbb dec js daa test mov ds cmovp jnp cmp jne pop test dec icebp jge lcall (bad) test push adc mov lods cmpsb inc mov movsl xor xchg lret fsqrt rcl into leave sbb jne add lods xor dec sub adc mov mov outsb pop add cs dec mov xorl jns sbb enter jmp add stos (bad) push dec pop stos cli (bad) pusha mov call sub xor hlt jle stc mov xchg je test mov int aad mov das or inc xor repz or adc lcall fadds lods sub pop stc sub mov jl ret sbb fadds call xchg cmp aad mov cmp push scas imul mov fxch xchg jle imul out imul xor and xorl aas mov mov fbstp or add test mov inc cmp jle mov movsl mov or lea push outsb loopne lahf xor (bad) sub pop fcmovbe (bad) js sub lock dec (bad) xor shrb sub arpl movsb punpckhdq mov iret mov rorl inc jmp scas les adc or cmp test pop xor xchg mov xchg cmp sub or test shrl mov scas jle inc or fs hlt push lods (bad) or pop xchg or sub pushl addr16 aas ljmp adc dec xchg sub je dec ljmp dec sbb jb sub cmp sub in decl inc ds lcall in in gs insl scas sub rcrb adc xor (bad) push std daa fsubl inc mov popa and sub dec aam inc sub data16 cmp lock mov or ret imul out daa dec dec sub sbb mov movsl rclb sub sbb cmp cli lcall jle cmp les in (bad) pop addr16 cld jecxz push cmc or test nop sub mov pop jnp iret add frstor lods jne imul mov stos adc jecxz pushf and jmp adc add xchg pusha lea mov dec add cld mov int3 (bad) addb stos mov insb mov incb mov bound (bad) dec lret out and (bad) xor add and jb pop jnp lods (bad) mov enter lods test mov xchg stc sarl mov cmp sub cmpsl or test pop (bad) or mov iret sub bound cmp pushf fchs sahf daa add leave pushf imul ss sbb out pop and cwtl and rcll jnp adc imul mov pop (bad) scas out scas fwait cmp sti call fcmovnb sbb xchg inc or cmp xor cmp cwtl sbb and lahf sti sbb inc pop out movsb fpatan mov bound scas cmp push fwait adc cli push scas push mov and cmpsb dec mov xchg mov or mov hlt es or and inc fwait aas movsw imul pop mov out arpl (bad) cwtl (bad) xlat xor sub loop loope cmpsl mov lods cs xchg popa adc shrb aam rorb iret lret sbb xor xchg sbb imul jb fcoml mov inc sbb add scas jno and jg (bad) jecxz xor push ret and cmp (bad) (bad) out and je cmp mov mov insb sbbl test jp aam pop in mov lret and inc add cld push and fcomp xor fwait inc mov cmp xchg cmp jmp mov push fisttpl mov jns cmp adc cmp loopne lret push stos fs out mov test pop loope sbb movl xor and mov icebp inc test cmp xor sbb pop and loope xor jb fistpll es pop pushf sbb push mov push push or xlat nop (bad) xor ljmp dec movsb adc or jecxz add xchg sbb and cmpsl scas push loope xchg jl push inc pop icebp rorb dec cmp pop lret mov pop popf mov loopne mov push xor sub pop gs or (bad) fisubr jle inc cs inc aad test cmp xor push pop sub int pop (bad) cmp and fild xchg cmpsb subl xor dec pop loopne ljmp outsb jbe gs xlat dec and (bad) push push aad add mov sbb cmc (bad) mov pop jmp pop arpl lods sbb icebp cmc dec jle stos inc mov inc std pop cs mov roll repnz dec push daa xchg mov subb inc pop call fiaddl imul dec aaa xchg gs xchg ror mov push xchg mov ja shlb cmc pop pop and pop addr16 cwtl jno lods cmpl jnp xchg or inc jmp pop xchg inc mov std mov mov outsb dec insb in xchg nop xchg rolb enter sub jg cwtl lods mov mov add fld rol push or ja ss stos decb mov outsb scas daa lret lds (bad) xchg mov push pop outsl cmp scas mov popa (bad) adc sub xor nop mov cmp repz cmp push (bad) test loopne mov xchg gs (bad) cmp jnp jecxz mov pop push loope jnp add xor fistl cmp dec imul or jo repz scas mov inc aaa add imul dec or repz inc icebp jns lock mov jp pop loopne popf or mov fisubr shr addr16 in pop sbb jg jge clc sbb shr sbb cmpsl mov insl ja mov in sahf mov adc xor jns (bad) ja pop mov cs mov test jle repz lock test jns cmp andb push int3 mov jmp gs aas fildl lods inc jo mov ss push stos add ret jns add dec mov xor dec cmpsl sub push jmp (bad) in ficompl jnp cli and stos mov mov in push js pop loope shrb bound jbe arpl sarl pop shlb mov in cmp cld mov jo or addl out push dec lahf cmpsl add cltd (bad) or push sub cmp lea icebp xchg pusha std inc (bad) (bad) jmp lret test dec hlt stc jl into into jnp cmp add adc adc add xor repnz mov push dec fsubl roll (bad) pop xor (bad) sbb push ret ds dec outsb cmpsl mov sbb lcall xor mov aad adc dec int3 mov or mov (bad) add mov xlat xorb fdivr seto mov (bad) ljmp nop out add xchg sbb cmpsl pop in push ds mov xor or ret mov ds clc add or (bad) pop jnp test lahf dec xor jnp fsubrl pop or push out cmp inc daa pop xor std jp out dec les or fucomi jns (bad) mov cmp add adc add lock outsl or jp jmp xchg in insl xor rolb inc orl aam hlt out jg push subb cmp insl stc addr16 jbe jo mov cmp push or or ja stc int3 int3 test dec push jge and add outsl pop dec pop movsl movsb dec pop outsb push testl in mov mov xchg aaa lock adc mov inc push or push in jmp cwtl adc mov out xchg movsl adc xchg mov mov (bad) cmp subl nop sub ja int3 js xor es stc pop mov xchg sub out (bad) pusha mov (bad) cmp jl cmp pop cmp sbb jg adc sub jne or cmc pop aas push ljmp out fsub pop adc rcrl in mov (bad) push xor sbb scas or mov adc jl mov cwtl inc push test fwait arpl pop cltd std cltd adc or das or aad push mov ucomiss rolb jbe jg stos cmp inc or jno pop dec adc (bad) push xchg mov rclb and add xor dec sbb lock lret xchg out xor dec notb leave push jle pop xor xor scas rolb lret or imull (bad) jmp cmp addr16 stc and (bad) jge xchg inc adc jb (bad) (bad) cmp mov cmp popa in leave add mov iret lods push leave mov xor xchg addr16 lea ds in and out pop (bad) mov xchg and repz (bad) shr (bad) mov sar xlat xor idivl mov lods inc dec and aaa dec dec cmc jb out jno clc testb jne xorb jmp xor nop rcl push add inc popf je icebp je aad jle dec jg mov scas and sbb push scas sub int3 sbb dec iret call cmp mov lds sbb cmp pop add cld push pop xchg mov adc insl in inc mov push in iret mov leave and pop enter les arpl pop (bad) mov cmp lods xchg ror (bad) arpl cwtl (bad) sti cld or adc out stc xor mov fdivrs pop lret (bad) jae push es mov and loope out out sbb (bad) iret inc inc or in fldt sub (bad) dec push fdivs sub ljmp xchg sub sbb push adc and sub aam inc inc and cmc out pop scas pop sti into loope mov mov jno adc (bad) pop bound jmp stos aam dec xchg imul pop push xchg pop (bad) rcr lods pop adc mov dec stc cmpl test out sbb cmp aas cmp xor push aaa push movsb add loop mov dec sub adc or cmc inc xchg or arpl push sbb or mov cmp gs xor jns dec cmp int3 adc jmp icebp adc mov push xlat shr into add xchg add lods or sbb scas pop or xchg cli mov in cmp setg mov call loope mov jle test ss ljmp push aas xchg ret sbb and nop pop std cmp insl sub push mov movsl adc int ficompl (bad) jbe mov hlt sub dec aam xor push dec and popl pop inc mov test or or leave ja pop xchg sbb sub add mov xor jg add dec (bad) sbb cltd sbb xor or mov sub push push daa imul cmp mov shlb arpl cwtl add xor sbb pop sbb push test sub lock jl or pop dec std paddd in jecxz push cmp ljmp (bad) sub (bad) fdiv (bad) cmp adc out mov movsl insl (bad) pop sbb or mov mov pop std out and jg cltd shrb (bad) stc pusha fdivrl sbb sub mov and sbbl out sbb call out jno cmpsb gs jnp cwtl fnstsw incl mov or dec add jmp jns dec insb adc add xlat mov mov inc jbe xchg js mov jno cmpsl push aaa repnz in lret jle js in mov or push fisttp pushf insb orb mov inc inc loopne arpl iret enter xor andb cmc xor pop adc sti movsl jmp loop mov in mov (bad) push dec rcr xchg pusha pop sbb bound aas (bad) jl incb cltd push dec cmpsb mov jne dec xchg aam dec inc (bad) lea dec dec sub and adc mov icebp sti leave inc mov imul rcll lahf arpl mov push jmp jmp sbb stos ret frstor fistpl gs adc fnsave and xor sub xchg sbb lcall cmc push lea mov imul adc push je (bad) ds pop dec and fs mov shll inc cs push inc sbb adc into es popa adc lock jle (bad) adc clc sahf ficomp adc push fsubrl int3 mov in movb xorb and cmp jnp in sub (bad) in outsb sub push aas mov jge lds push fstpt pop out arpl in sbb mov int jo addl xor mov mov (bad) popa xor sti jno push and mov popf adc fisubrl daa pop and jno and adc test mov pop repz xchg (bad) sbb sarl rcrl sub out (bad) xor scas popa hlt rcr and out mov sti jg sub xchg pop rcl mov mov stc adc icebp push (bad) xor sahf adc (bad) jno ss xchg pop pop stc out addr16 xor xlat sbb adc sahf loope xor dec pop sahf stos lret iret mov shrb sub xchg gs mov dec push in pop imul jmp sbb jle jecxz out mov inc fist xchg inc inc jg test icebp loop pop out mov inc inc (bad) lods sbbl mov movb jle push xchg xchg shrb mov (bad) (bad) shll les movsb sub int mov loop shrl (bad) and mov hlt jns inc adc push mov divps aaa add dec jb mov mov push add data16 out sub add lahf imul jl imul jnp aas inc mov lods call jno jp insb mov or sti push push in cmp imul pop call je fdivl push cmp cwtl push lahf fisub inc ljmp in jb pusha xchg pusha pop (bad) psubsw cli jb add dec (bad) repz inc sub ret addr16 scas cmp call cmp adc (bad) mov in (bad) sbb mov ret (bad) or outsl fwait mov inc pop sar leave dec jg fs inc fisubr sub mull lret stos dec mov cmp js mov pop adc mov pop sbb lea addr16 popf sbb jg movsb test push fs lret sub or mov into cmp (bad) fbstp stos mov adc push iret ja xor pop outsb xor cmp pop adc sbb dec fnstcw dec test or inc fidivr push adc jb pushf lods fldlg2 jmp add adc push shlb out jg jo fistpll gs out xchg sub jnp (bad) (bad) push add mov mov pop repnz jmp dec ret insl jecxz sub jns ljmp cmpsb push or and stos mov xchg (bad) mov enter notb mov xor fadds ret and mov mov popa mov out jns cs dec sub jb inc nop mov sbb fwait aaa xlat loop mov imul cmpl adc in into (bad) lock popf (bad) test pop int bound pushf lret fcoml stos inc dec into in jns lahf jg fldenv mov ficomp pusha jmp shrb sarl mov outsb sahf jne fsubl push scas pop or xchg push scas mov cmc cltd jl nop pop in popa fdivl in xchg mov adc mov or inc xchg add mov (bad) cmc pop aad into js sub mov jl pop ret mov jbe ljmp loope les lret push dec jno sbb xchg dec mov mov lods sbb and (bad) lock out xor popf fidivl xlat mov pop add xchg leave cmp das test ds and lcall stos test enter test nop cmp sub cld mov iret mov push shlb sti cmpb xchg mov aam cli cld push push out jecxz mov jae adc sub outsl push dec pop push lret or sahf out inc adc jl out sahf and mov xor js cmp and mov fildl sub mov mov cmpsb or jg int3 pop inc xchg daa loopne or and insb push aaa sbb (bad) and or push xor loop idiv adc sti pop outsb or inc push jbe leave (bad) dec lcall mov stc xor jecxz xor fstl dec lods dec xor and dec inc xchg gs adcl dec out inc scas mov mov inc mov mov int or jg add add push test out and ficoml imul shll mov loopne cmp fildl movsb xor sub sub daa pop fwait cltd xlat repnz add rorb ret imul inc mov iret popf inc pop popf cmp ret enter fwait ret in push aam movsb movsb cmpsl ljmp popf out dec bound adc outsl inc shrb adc pop fbld mov jo xchg inc lcall lcall repz insb nop bound (bad) mov in jg push mov mov mov iret mov mov jge mov dec sub cs inc cmpb stc les sub das push test ret ror scas xor and (bad) icebp push cmp gs dec fisttp cmp test gs repz insb mov sub mov mov sbb lret adc push test xchg mov fstpt jg lea sahf lahf push jno rolb jb xchg push scas out dec aas sbb dec iret or sub fcoml iret xor mov push or lods xorb icebp es adc call or or xor bound inc popa int and fs cwtl pop pop dec dec enterw mov jno movsb mov fbstp and adc out scas repnz adc adc imul outsb mov and cmc aad out sub lods and pop mov dec xlat cwtl or test add sbb pop pop (bad) outsl psrlq cltd dec cmpsb or xchg pop and dec popa push dec sbb ds pavgw add inc dec mov jecxz stos xchg test mov (bad) cli mov sub movsl imul xor pop push (bad) out inc jbe mov popa xor lahf push dec int3 cmpsb rolb inc mov cwtl movsb inc js xchg add pop in cmc ja inc xchg cltd jne scas loope pusha jne ret mov lods stos in aam jne jge mov int push jns es xchg gs pop sahf insl xchg push les aas dec jns or or test in jmp adc inc cmp clc (bad) dec dec out inc sahf cmp jmp rcrb repz adc push stos mov sub loope jecxz push push sub test movsb push imul test aaa sub xchg popl xchg jo movsl jne std loopne push xchg subl mov andb cld xchg cltd ljmp mov lea add pusha mulb mov fsts ret ss adc sub adc icebp leave sub imul pop es xchg pop int sub sbb sbb mov and dec addr16 ret lret dec xchg mov les jbe dec cmc cmp pop sub fistpl or aad inc les psrld gs and pusha sbb lcall (bad) das mov mov cld sahf xchg cmp sub dec sbb cmp push mov subl sti inc dec insb mov (bad) lahf popf fnstcw lret cmc mov movb jb icebp popa or mov mov mov jbe mov pushf pop pop dec sbb (bad) pop ret and cmp sbb push aad fimull jmp imul nop out stc jp call leave in in inc lahf les pop jb cmpsl gs jg shlb stc dec mov fldcw ficomp sar mov sbb loope les xor mov daa mov imul call jmp mov sti rorb je jbe sub xchg mov ret dec shrl cwtl subl cmp push mov dec mov mov push lcall adc or xchg sahf data16 and movb xor lods sbb daa out inc insb (bad) sbb jg add sbb repnz stos (bad) out mov cli fnstenv sahf pop jge and pop enter adc adc jno insl popa or lock xor (bad) dec popf cmp iret push mov push (bad) mov inc push in push arpl aaa push je addl mov adc pop and dec leave xlat in repz call (bad) in cmc pop lods lahf cwtl inc les ret and dec stos add cmp xchg mov dec mov push dec or cmp mov push fisubl or aad loope sub mov shr lods movb and pop (bad) (bad) je ja sbb pop inc adc aas fsubrs scas mov lds mov xchg mov lret inc adc cmc mov adc or cmp je out mov cmp mov dec xor sub pop adc mov cli jecxz sar jl adc popf cwtl or add mov aaa pop push mov inc sti mov scas or add ret or sub (bad) mov das test jmp mov push (bad) jp imul xchg stos repnz and jne,pn mov sbb in jae sbb adc pop dec fimul jbe enter sbb loopne daa push inc mov ficomp pop out jb aaa sub mov push cmp out nop aas push in mov loop sub jb subb inc push jns into ds push add adc inc stos add cli cld xchg es mov jne in add ja addr16 and int xor inc cmpsl sti insb jb mov or lock leave leave pop pop loop push xlat push pop aam imul jl daa clc out sbb adc mov push mov fcmove inc mov sub andb in or cld ret adcl inc jg mov mov pop je xor mov daa lea add jne xor fmulp int3 out adc inc movsl popl lcall pop stos addr16 add imull push ret cld mov inc or popa adc pushf lods pop fs loopne xor jg cmp popf scas jne mov daa clc iret cmc arpl mov fild out movsb jns (bad) or cld cmp sbb (bad) fidivrl rcrb push aas cmp cwtl cmp xchg jmp dec mov loop cmpsb xor xchg xor dec sbb adc rol jmp cld hlt (bad) dec (bad) xorl mov cwtl rol loop popf in into mov and sbb scas inc loopne les js (bad) mov adc or ret sbb sub aam out push roll je fistpll repnz mov inc pop inc lock insb sti (bad) aam push sbb mov xchg out jge mov fistpl push inc pop xor and xchg cwtl sbb aad push dec xchg push (bad) in (bad) jmp cmp stos inc test push and jbe inc sbb inc imulb dec or icebp es (bad) and inc aas or lea addr16 (bad) test in jmp dec add inc mov (bad) sbb add jne clc nop or adc ror fnstenv adc mov cmp aad mov rcrl mov stos xor gs stc dec inc adc mov or daa sahf in and cmc pop outsb lret jnp push in loope sbb pusha popa pop (bad) cmc add ss xchg dec ss sbb aas adc loope imul cld imul or insb adc addr16 pop int3 xor dec cmp mov sbb sar mov mov push lods sbb add push mov lock cs xchg add sub add int or xor js xchg dec and and lret ss movsb pop mov xlat push xor mov stc or mov mov fstps or sub sub inc outsl (bad) xor data16 lret bound (bad) pop sbb inc inc rcrl pop mov popf push cli push dec push mov sbb stos fsub xchg push gs push lcall roll mov dec (bad) lcall jbe mov mov (bad) adc and and lahf shr xchg ja xor mov dec lcall stc out xchg pushf js ror daa lods call add dec jge cmpsb sarl imul pushf mov mov jecxz jle pushl loope cmp xor (bad) sub subl stc scas adcb in sbbl stos repnz stc shl xchg push xor and inc dec test jmp mov mov je les pushf andb mov test push scas call and dec (bad) add sbbl lods jne faddl lods dec cld imul xor mov xor cmp push stos mov and lods movsl mov sub sbb adc xchg fdivs out adc icebp jbe xchg and sbb push push push or sub push sti mov and jecxz mov pop iret sbb in cmpsl (bad) fmuls mov mov (bad) mov repnz sbb push inc out (bad) mov mov lods aam jo dec lods sti lret sbb insb pop movsb push jg (bad) mov out repz lock repz xchg xchg roll and imul call pop push iret sbb outsl mov lcall scas add push ret fiadd ficoml std xchg sub out mov (bad) fstl inc les mov push inc stos push jecxz outsl xchg sti aaa push gs scas ds (bad) pop imul lock bound sahf xchg out (bad) xor fsubl adc pop (bad) cltd lods frndint (bad) scas push pop sub sahf aad pusha push pop push mov fcoml mov adc jl cmp dec cltd add insb inc cld dec pop fiadd cs cld in bound pop pop jge ss mov aas pop loope push inc add (bad) insl mov add pusha push mulb insl lods out and pop dec adc adcb pop push fisttp cmp imull inc (bad) lahf push std add test cli lods int push lods mov lret mov jae dec enter dec sub add mov cmpsl jle outsb lea (bad) int into movb inc (bad) pop adc aad cmp int3 mov and and lcall jns ja mov sub or pop fisubr cld mov leave sbb push push cmp ret in scas or push mov sub in add mov mov sub sub push pop inc test mov mov and xlat or and (bad) lret stc outsl sbb xchg and sub insl (bad) je and ss add pop sbb je or inc test js xchg pop mov sbb adc (bad) ret mov add jp enter mov mov jns (bad) sarl jne mov or cmp cmpsl sbb xchg les in and lret sbb sbb cmp or sbb in popf sbb cltd out mov mov mov pop mov push rorl xchg inc push out jae leave xchg test sub push int3 es inc xchg test sub movsb ror jno jnp jae loope and adc mov push or addb addr16 mov fimull imul pand sbb xchg ds popa push mov cwtl cmpsb mov scas add scas test scas lcall dec adc mov pop shrb (bad) cld cmpsl inc jnp nop jbe test pusha fcoms mov or mov inc outsb and pop (bad) pop aaa xchg xchg push ja push js add pusha enter cmp xchg dec cmc in inc and div lea adc adc jno xor xor test pop or (bad) out sbb jns lods pop dec mov sbb cmp es inc pop fst cmc jae sub js sbb stc jbe or pop gs inc lcall mov mov in mov sub mov sbb sbb int stos test test xchg pop and xor inc test int3 fs movsb test dec inc cmp cld sbb pop push adc fsubr jmp in jnp data16 cmc adc cs or cli lret jno mov push dec cmp imul or mov (bad) adc or add outsb test lret push mov fwait cmp xchg call adc pop stc rorb mov mov (bad) xchg xchg xchg inc push test xor scas cmp repz addl pop jecxz push cli or mov push jecxz (bad) lret fist arpl dec mov mov xor (bad) psraw in pop arpl ret negb cmp xor loope insl lret cmp mov dec (bad) fxch (bad) std mov add lods dec int scas pop es ret push dec es mov pop fs mov xor jmp std out addl mov mov push out shll test jge sub mov pusha outsb cmp clc lods add mov adc xchg and test jns les mov fbstp mov ds cmp xchg inc dec xchg lods aas push mov cmp jno in out std cmp sbb push cmc and pop inc pushf aas stos stos (bad) out aad pop ret (bad) lea mov sarb (bad) cmp flds lds icebp pop cwtl dec cwtl imul mov sbb fisubrl push adc (bad) mov sub push pop xchg xchg (bad) iret dec and mov mov imul ret inc pushf inc cmp dec popf inc ret push ljmp cs push sub push loop popa push pop adc mov out fnstenv mov clc pop mov mov sti xor add jb or or mov in xor fstpl cwtl xorl lods jno hlt mov stos arpl outsb adc pop jns ljmp test cld (bad) sti pop test xor or mov dec mov pusha mov imul dec mov cmp xchg out xor cmp (bad) repnz js sub jmp outsb inc (bad) cmp jecxz mov xor mov cwtl push push or lret subb test adc repz insl sbb into push leave lea push push xchg adc mov mov subl lods add push ss mov aad out sub popa jb sub jl fcoml pop psrad scas adc test mov je add inc out mov mov add dec dec insb jo scas lahf add outsl arpl frstor xorl test lcall dec pop outsl (bad) and cld ret push dec lretw jge sbb movsb popa sbb jg flds inc mov fistpll adc out and cwtl das push jnp daa xlat cmp pusha stos mov sbb add inc mov cmp mov lret push mov fwait std jne mov leave pop mov xor xor lret mov insl mov pop into mov rcrl (bad) xor pop mov xchg mov mov adc xchg pmulhw pop std loop pushf mov or xor (bad) or push push pusha (bad) movsb pop mov push call stos aam pop push mov mov (bad) (bad) je adc dec sbb push mov or xor cltd xor pop frstor dec and pop neg push dec inc push data16 ja out jle mov cmp sub fisttpl cmc (bad) rorb cmp sahf mov popa daa inc sbb ljmp in enter in dec pop nop dec sti mov jne inc sti xor bound daa roll pop xor xchg cmp enter addl clc in cli pop lods sahf sub ljmp jbe pop ljmp lds add call mov cld and jmp fsts cmp aaa cmc js mov mov loop fstpt rcr int3 mov es mov jg aam loopne ss sub dec xchg pop and nop push (bad) jge mov mov into int pop mov (bad) dec loop ja sbb in negl sti insb sub pop iret push (bad) (bad) jmp sub pop xchg movsb in aas aas scas idiv call out mov daa out push fisub push dec (bad) bnd int3 js nop je pop adc jle hlt pop gs mov aam bound mov test das push sbb inc js fisub add and cmpsb inc or sub lret dec movsl cmp inc test sbb xor aam xor push sub sub pop lahf std xor xchg nop int mov jae mov xchg xor mov fwait outsl enter sub xchg push popf mov lahf repnz push movsb ds les jmp insl icebp gs push enter (bad) push (bad) mov test inc jae xchg sbb fs addr16 daa jbe les mov call dec dec test jg stos sbb das mov inc insl mov test and jp sbb dec fs fadds clc adc push bound mov (bad) int3 sahf xor hlt adcl ljmp dec mov dec ljmp outsl je nop cmc mov mov xchg mov xchg jecxz xchg pop push popa hlt add addr16 int inc xchg movsl nop imul out ss fisubl cmpsb mov aas mov ret and mov in sub nop jecxz stc inc pop add pop enter fnsave (bad) ret push in rcrl test mov fdivl cld mov and movsl or sbb inc pop xlat or scas xor outsb leave fcoms fldenv (bad) lock aam sub inc fwait std cmc push pusha (bad) je bound fnstenv loope xor pop sub insb iret lock into fisubrl xor add sbb jle sub sahf xlat jns push pop je or xchg loope repz icebp jo fildl pop insl sbb and pusha dec sbb mov repz into push ljmp add mov stc xchg inc pop adcl out lret bnd fcoms clc pop jmp pop add dec sub push in mov dec lds add outsl inc sub sbb xchg lods out mov (bad) jbe jg inc nop add dec and imull pop shr inc adc add sub cli inc rcrl sbb sti sub lods xor (bad) xor (bad) adc jno (bad) das dec (bad) cltd pop les cmpsl int3 mov push ja cmpsb arpl lds inc xchg cltd dec cmpsl add in imul push add (bad) loope rcl push or ret jmp dec sub dec rorb hlt push (bad) imul cmp shrb sbb loopne adc push out repnz cwtl xor js xor xchg dec gs outsl movsb jmp mov stos and add out lds (bad) shrl or push mov sub (bad) pusha dec movsl mov sub mov cmp (bad) sbb insb dec das jne mov xchg and idivb add jg rolb data16 movsl or call imul aad pop cmpsb inc push add movsb stos sbb imul or add imul xor adc xchg das mov daa lret sbb push clc movsl cmp fldcw and (bad) xor mov or pop dec or xlat je ret inc mov jo ret in test shrb (bad) in loop add addr16 arpl loop xor imul popf test aam and and jl push sti dec fs inc lret mov pop cli in xchg lea mov fdivrl sbb mov push movsl push leave sarb hlt insb mov mov imul jb mov jmp jecxz push aas in push pushf push daa and ljmp rol (bad) jbe pop adc jg fild scas cmp mov pop adc jns rcrb icebp sbb inc out sub jge or stos xlat xchg and or or aas imul leave in and fsubp or ret inc xchg popf mov shrl (bad) stos cmp test mov imul aaa sahf inc jle and stos pop fbstp cs (bad) mov add jns add push or lock daa call sub stc xchg sbb stos mov fdivrp dec hlt mov mov cmpsb outsl dec or push jecxz test fsubrp das out sub mov (bad) hlt cmp cltd jne lahf test adc arpl mov lock std js add imul subl adc or aam cmpsb or sbb mov movl (bad) xchg or loop jle or cmpsl or orb cmp xor xchg jno jb dec inc and lock mov or stos dec add mov in lock sub sahf rolb jbe adc sti push sub enter or fistpl pushf sub rorb jns xchg (bad) mov lret jge and or stos jl insb mov pop mov sub mov pop aas mov lods adc (bad) or pop scas movsl mov cmp (bad) and and insb xchg xor leave inc cmc pop (bad) mov std jae push scas jmp xchg dec (bad) shrb mov cli (bad) aam (bad) push jmp jns or sub inc jl aaa adc out mov sub fistpll psraw add inc adc mov test cmpl cmp imull nop in (bad) out ds dec sub aam push and leave inc insb cmp jecxz mov cmc adc and mov push jp out and inc aaa iret outsl (bad) xor sub nop pop mov add es inc pop sbb inc xor or push ljmp or mov ret mov push test add sub mov mov rcrl or nop repz arpl mov aad jmp daa in mov add pusha jbe sbb mov pop dec iret jo nop sub stos add popf push xchg scas sbb inc mov pushl test je icebp inc shll cmpsl ret inc xchg enter js cmp mov imul hlt jbe por (bad) pop mov cs and cld notl outsb cltd cmpsl pusha push jmp sbb inc adc leave add or and loopne dec or divl xchg fs push pop inc mov add jb lret sbb add insb outsl ss sbb fwait test insb dec cmpsb mov das push push pop mov shrb push insl jecxz push or sbb jmp lret mov pop sti (bad) push push movsl arpl je inc and mov in cmp (bad) jmp scas or push or scas and and adc jne dec fs mov and ret out sbb pop ret xchg repz pop aaa or jb sub ja inc dec and xor mov jl cli in pop inc pop xchg cs (bad) stc pop stos hlt sbb xor icebp pop sti lea push lret push xor int and dec adc (bad) cli and inc popa mov and pop inc inc mov adc (bad) and int hlt insb ljmp stc lcall pusha cmpsb or xchg lcall inc push and test jg (bad) mov adc mov sbb ret imul pop cwtl xchg cmpl je lea jmp xchg imull pop or pop dec and loop jge roll inc lcall dec adc pop dec push sbb jecxz idivb push loope js fwait sti (bad) ja add inc xchg mov fs (bad) cli or mov addr16 imull mov ds jo adc mov and mov mov push sbb popf movsb ret pop jg data16 sub add popf pop out adcl inc rcpps int xlat in mov fcomi call sbb xchg adc sub lcall cmpsl or jns and test inc repz mov xlat and data16 inc push mov es test pop es inc gs xchg lea lds adc ret sbb mov add fwait mov xor stos lcall ret lds add shrb cs or adc cmp xchg mov sbb xor movsb adc (bad) jns sbb and dec idivb mov stos popa jno ret push sub push jmp ljmp xchg xchg jnp xchg je push pop or mov pop inc cmp mov insl out mov add cmp iret push fs sub push push mov rclb cld and pusha data16 xor insb xor out pushl ret repnz pusha outsb aaa mov ret adc mov cmp rorl push push insl inc pop jl mov idiv stos es stc add fwait int3 outsl sbb cmp mov pushf push sbb push xor aam jmp xlat cmp mov inc jno das or or nop out icebp push cs xchg mov sub cmpsb push mov inc dec aad je push cmp mov inc call fucomp and mov or mov jecxz stos jo mov sub sub mov mov jle dec gs call in add dec pop sub js push out popa mov or inc inc push adc push (bad) ljmp daa sub jmp out out add in jne dec sub inc sbb std loop popf pushf (bad) dec loope mov stos sbb cs out out push add and sbb gs clc or into cmp inc lcall pop cmovs inc cmp out mov mov mov push inc stos imul outsl xchg dec push jae pop adc les mov aam rcrl inc push sbb sub lahf lds inc lock loop cli pop test sbb iret ficom bsf dec adc xchg ljmp loop enter test mov mov lea xor daa sub sbb dec test addl sub pusha cs addl mov dec jle dec xchg stos sbb call adc inc fs push ljmp stc xorl xchg cmp (bad) mov cmpsb outsl sbb test loope cmpsb lods add push hlt (bad) push mov push xor outsl or imul xor adc xchg js jne mov xchg mov adc lods clc ret pop jo adc xor ljmp in ja lahf gs in xchg inc xchg int sub mov jecxz leave lods lods test inc fsubr pushf and das in jmp stc std mov out test pop cmp jno jg xchg mov outsl (bad) fisttp cmpsl rcl pop jb cmpsl out mov enter jp loop pop inc or jns mov inc and in stc push pop loope dec sub jnp stc fmuls cmpsb jge xor pop xor ret mov mov stc jbe sti rorb mov and xor cld daa dec pop dec or jnp sub mov sbb and ret mov fisttpl xchg and xor ds xchg jg lea mov bound movsl xchg loopne bswap inc aas rclb addr16 push stc je or mov lods imul cwtl imul and (bad) mov getsec dec push add (bad) icebp inc test bound fcoms jne jge jno scas jns int cmp jb sbb pop push int3 lds inc jl pop jnp sbb cmp add adc xchg sbb rorb (bad) pop sbb fldcw adc sahf pusha jnp xchg sub sbb xchg test jmp mov aam outsl jo divl je cmp loop push (bad) mov push mov fcomip and and por sbb cli push mov sub fwait push pop jno setne addr16 jmp jmp cmp cmp ja ds test adc in fisttp leave mov xor icebp sub imul dec test test pop and and cli and mov leave sub pop testl mov jp and sub jae and hlt jb lahf jmp sbb negl in xor cltd adc cld ficompl dec mov movsl cs (bad) push (bad) (bad) push add mov sahf test pop inc mov leave cmp mov sbb dec and mov enter lods cmp stos cltd pop mov fisub hlt ds xor (bad) sub xor addr16 dec fmull mov aaa data16 cld es mov insb subl xcrypt-ecb cmpsl mov push pop xlat iret ret jp test pop out inc repz adc test jecxz pushf pop les aaa repz or (bad) pop inc adc pop cmp ds mov addr16 sub push and and xchg adc mov mov push sahf pop scas scas push call lret scas mov jg in mov fdivr sbb repnz ljmp xchg jl push pushf push imul (bad) mov test lds in sti ret cmp (bad) dec adc push jmp gs or dec jb and pusha js mov test cld roll daa fldt inc mov icebp arpl xchg (bad) sbb lock or inc loopne (bad) cmp sbb ljmp rol dec mov and sbb in mov dec cmpsb dec out mov or in or nop imul dec xor xchg (bad) ja lds loop pop push lea jbe pop call out xchg and (bad) fnstenv (bad) cmp fs mov xchg pop cmc fldenv inc inc mov cmpb inc add (bad) call pushf insb insl inc xor inc fcompl sbb inc repnz mov fstps mov xchg adc jb mov and pop push push add push xchg mov pop repz xor add add inc in pop rcrb test jg inc movsl dec mov pop dec test cmp cmp rolb jmp or push ja cli cmp jns mov movsl dec sbb (bad) idivl loope xchg lods pop mov dec scas jle push int3 cmc es repz inc add jns pushf cmp shlb hlt sti into mov (bad) cltd (bad) aas jne xchg and add xlat mov leave pop ja sub dec scas mov test pop cli gs xchg dec push test xchg out notl lea pop aaa lods and dec ljmp pusha push movsl add leave cwtl (bad) out pop cmc lock int3 xchg xor sbb mov pop cmp xor jp jns jp sarl push data16 repnz lods enter and adc mov cmp hlt fistpl xor std mov push into icebp fst imul mov xorl xor shlb and cmpsb imul insl lds test repz mov loope stos ljmp jg sbb mov xor inc (bad) data16 xchg xor push add cmp test mov sub subl cmp sbb lods or cltd xor test (bad) cmpsb sub daa popf leave popa stos fcoms call sub pop and cmp push jno clts (bad) adc movsl in out fs lods push test (bad) mov inc lock adc jp sub or sbb dec inc jge insl out push mov scas les xchg andl mov xchg push bound decl fdivrs mov or int3 pop lret pop add lds lea das sbb orb xlat rcrl add mov negl or jnp ret push cld pop jne stc and or adc add pop jne into push cmp cltd fs in jmp mov loop fsubrs push cmc daa push daa lret test mov pop jb add ljmp bound xchg test adc xlat or sub out daa cmpsl stos divb xor xor jge dec sbb pop and scas push pop cltd dec pop fldt cmpsl mov pop or push (bad) in xlat adc gs arpl fcoml and enter aad cltd mov sbb imul fs jecxz lods scas les ret movsb push dec and jnp ss sub (bad) inc push cmpsl (bad) push push in test adc push push and cli mov mov outsl (bad) mulb push insb jmp outsb cmpsl and pop jno pop push xchg dec es lcall repnz xchg cwtl jl lret (bad) dec inc mov int fs fiaddl sti xor sti or mov fisubl lret xor in test inc inc cmpsb mov popf xchg lds loopne (bad) jae popf aad ret int scas pusha fiaddl add add pop rcl lds mull or stos xchg xor mov push sub jmp sti fs scas add jle jbe sub sub out stos lret hlt shrl jne add xchg cmpb std sti pop lcall jae insb pop jl sbb es cli gs dec mov mov sbb aad adc dec inc and neg in or xorb lods aas jns and mov mov jb or insb adc std pop pop mov inc xor ja test test cmp cmpsb pop jmp aad jnp mov push sbb xchg loop xchg cs mov adc xchg cwtl xchg mov mov stos push js sub and call mov icebp jae cmp jecxz dec loopne sbb fisubl adc andl push aam mov push (bad) ss (bad) fisttp push mov adc xlat mov xchg hlt sub mov jp sub sub lea sub xchg insb hlt sub arpl dec aas adcl (bad) int lods fnstcw pop pushf mov jae xor lods jl dec mov (bad) movsb jge cmp aaa pop adc in add cli repnz jp sbb sti add xchg mov add xor movsl or stc (bad) xchg cmp jnp in outsl loopne nop sbb es (bad) call aam pop ret xchg cmp out pop fisubr popa jp push jmp cmp (bad) or push jno adc xor lds loop mov jg cmp std add mov aad loopne mov sarl shrb daa mov mov int adc (bad) aaa fildl clc in cs adc mov push mov push and dec dec cld in xor aaa mov fidivr ss jp ljmp mov imul mov mov mov (bad) int3 cmp add xchg sbb xlat imul jns loopne push (bad) inc adc inc rclb repnz sub cmp lcall ret pop xchg (bad) mov ljmp pop (bad) cmc pop repz cld or mov sub xor scas push or mov into (bad) (bad) aas mov adc push mov lock push xchg xor jns pop and insb inc mov sub ds out pop js in mov or cmp outsl jge pop xchg push or pusha mov sbb dec outsl push rorb movsl xor mov scas stos test or shr adc xor sbb sbbl push hlt dec pop loopne and ja mov mov (bad) movsl rcll mov jo stos loop ret stos out popa rorb int3 in cmp nop mov loop mov gs ljmp dec inc ds (bad) xchg popw jno mulb outsl (bad) push das xor test in fmull leave dec xor adc or aas inc xchg sbb xchg xlat sbb pop in in mov dec cmp mov lods jecxz and fidiv xchg call mov inc mov cmp mov pop push sbb add (bad) lock sub mov mov mov sbbl jno jne push lahf xor fmull jmp sti or cmp hlt (bad) mov sti movsl not pusha lret or andb jge divl xchg in sahf data16 stc ret push xchg jb mov out nop pop pop xor sub sbb inc ss xor ds pop popa leave push mov mov das or into lret mov xchg out sub sbb in popa push or stos test inc (bad) fucomip jb adc add adc mov arpl aaa movsl pop push push lahf loope les (bad) sbb popf cmpb xor test mov dec clc arpl aad mov jbe out mov cmp push push jnp mov pop into cmp fs mov outsb cmp and and (bad) mov sahf and sub and xorb test sbb cmp jecxz xor pop ljmp enter pop push movsl (bad) mov jno xchg mov test xchg sbb sub outsl cmp cltd ljmp stc stos inc jp test pop in (bad) cmc cmp inc push test cmpsl cli push sub jge ret lods call in mov cld mov cltd cmp clc push jmp rclb sbb fcoml stos shlb je xchg fs xchg push push dec cld dec cwtd fsubrs std xchg imul pop or push xchg lods insb and adcl fsubl cmp cld fs mov xchg cmc or inc mov xchg idivb mov cs mov xchg xchg add mov clc cs fdiv sub mov in jns and popf mov aam out call push mov inc cld xchg test add xchg ret popl sti arpl negl xchg pop cmp mov in (bad) mov icebp cmp les leave jl std cmc in and sub add fdivr mov jp mov push ficoml mov xor mov data16 cmp xchg sti inc lds mov and and or fwait ror xor fadd les outsb push dec cmp xor or inc or sbb lret sub mov fcomps mov push aas dec scas or insb sbbb imul mov and lret jecxz lret inc push push push mov xchg (bad) xlat mov adc arpl push push (bad) cmc enter hlt out sub xchg sub imul imul mov sub loop loope mov inc mov in f2xm1 xor add adc fdivrs mov outsl sub dec add sub scas mov sbb dec popa das and pop cmp add mov sbb mov dec or add mov ds inc movsb mov adc pop inc stc jl jbe pop fst aam mov and (bad) sbb add mov hlt mov lods insb lea xor mov inc movl jg aam movsb cmpsb jmp arpl mov adc xor lret dec xchg das int3 ficom jge xchg pushf outsb pop cmp out jmp push pop fstpl mov dec and mov popa jecxz into (bad) aad push sarl in mov sbb mov pop idivl in (bad) xor jle add mov cwtl sbb fdivl lret xlat push lahf add add adc fcoms cmp xor jb push data16 jl sub jle (bad) fstps add add pushf cwtl sbb out test sarl call or (bad) dec jle rcrb cltd add test pushf jnp jl bound or jbe clc mov fs and insb sbb adc jb mov or int mov arpl push test dec repz (bad) fidiv xlat push push cmpsb cmpsl xchg sbb out adc ds pop sub mov add xor dec mov aad jo cwtl or (bad) xor inc fcom or sbbb aas mov (bad) mov pop pop mov inc xchg arpl aad clc sbb fnstenv push jecxz xchg mov jl inc mov int mov push addr16 test fidivrl ret or out lcall mov sub pushf popf js mov dec lret sti pop sahf out xchg xchg imul add iret push push xchg mov lods lea mov adc xlat insl scas lds xchg into (bad) mov xchg daa jle cs mov cmp pop (bad) mov jnp bound ret repz sbb cmpsl pop and out mov cmpsw mov sub cmpsl scas (bad) jns cwtl and xchg push jl icebp ficompl dec paddb mov adc mov adc (bad) mov pushf sub out dec sbb xor xchg xchg scas in mov sbb pop or fbstp mov and push add mov dec out sbb dec imul push or inc mov ja adc inc sbb clc jge nop ret xor sbb mov int pop imul mov xchg adc in sbb bound out lds add add push loop lret dec xchg gs hlt xchg mov mov adc shlb dec mov push inc adc and xlat cwtl (bad) cmc pop in mov fistl pop mov loope adc pop push inc stc lods cltd insl cmp or jnp dec imul pop push jno (bad) xor cmp mov icebp jmp sub popf xchg mov fsts pushf pop mov inc les push rcll arpl xlat ret pop mov (bad) jae or (bad) addr16 mov dec mov iret sub or dec add sbb mov ss inc add push xchg inc add js pop cmpsb mov inc dec clc lahf out mov loopne pop iret jmp rol lahf sbb push fmuls dec mov jecxz mov jmp cli aaa jge ds xor dec es fmuls pop insb push xlat aam xor ret xchg inc idivb or (bad) mov jae cmp adc sbb lahf mov or lcall lods daa jae (bad) outsl dec push cmp cmp jae add subl push inc xchg mov dec test out add sub mov rcll (bad) stos sahf in shrb pop mov cmp jp jne out (bad) into dec xchg and jge ljmp sahf mov add push mov nop pop jg sbb js xor rcrl xlat stc nop adc jbe ljmp scas inc aam sbb jmp imull cs inc call (bad) mov inc cli ds and adc rolb mov or pop subl and repnz xor add ficomp mov dec loop cmp repnz pop sbb (bad) and xchg into sub push mov or or mov ds int3 sub inc in faddl mov mov xchg or push dec ret pop les mov or negb jmp inc into mov inc testl xchg xor insl int3 fcmove fsts and push rcl fidivl sahf mov adc addb xchg ljmp and and jo lret jecxz mov pushf push xor sub xchg cmpsl movsb das xor mov cli scas (bad) push jb push bound mov dec pop inc mov out (bad) in icebp mov or movsl add xchg add scas cmp test inc xchg mov push sbb jnp jns inc xrelease dec (bad) lahf out sbb xchg ss or (bad) int cmp imul sbb mov loope (bad) je jo inc dec lahf fbld (bad) leave sti lock test pop cmp mov pop xor int in mov inc sbb xor dec xchg subl fdivp inc push scas es mov and inc rol arpl push adc xchg xor aas ret add shrb and add sahf push jg xor js dec jo ds and push and dec xor out push xchg cmp int3 loopne fcoml ret xlat lret cmpsl jge mov mov jno fistp test pop test (bad) sub add repnz and aas mov and scas jo pop push (bad) or mov dec jb inc mov das add xor or outsl pop test aad mov pop movsl push inc ja xchg negl dec adc pop and jp test push stc insl test stc mov test and rorl dec pushf (bad) pop icebp push jl iret mov dec stos add dec lods mov out sub outsl imul sub hlt (bad) cmpsb adc xor in pop imul push ss fsubrp into push addr16 lods out xor sbb fimull sub mov or jmp xor jno sub jge sbb jecxz push jge cmp fistpl adc cwtl push sahf sbb mov sbb shrb xchg std es pop in or test add jnp loop insb inc mov inc test cmp iret mov out cmp dec mov mov iret aaa xchg aaa icebp rcr adc in loopne (bad) xchg sub mov mov cwtl dec fadds jp (bad) dec dec stc shrl scas dec xchg inc inc jo subl mov push cs flds dec adc (bad) sbb sub movsb mov lret jmp ret les (bad) xor pop aam out int enter (bad) pop dec hlt mov inc hlt jge fildll pop movsl add xchg fstpt jecxz and lcall fisttpll lock call push shlb lock mov scas mov or jb sub mov or mov and jmp pop out dec xchg loopne xor push add lods fisttp dec call aam mov (bad) xor lret lods sub sub cmp xor xchg scas sahf xchg test or test and pop lods mov sbb outsl jbe cltd mov sahf je pusha mov mov out mov pusha inc pop add (bad) jo lret pop xchg enter inc inc jae cmc aaa fsubrl cli xor jbe leave sub dec mov stos scas sti pop add mov jp mov mov cmpsl jne xor mov outsb inc and scas jmp aaa fnop addr16 (bad) lods lds pop xor cmp pop movsl scas pop imull in adc jmp mov cli fldcw mov test sahf dec and pop push xor cmpl mov cmp loopne xchg inc xchg adc inc inc nop mov xchg push mov and hlt sub jo xor enter addr16 dec cmp sub mov push aad (bad) int xchg mov xor dec cld lods dec in cld outsw xchg add fwait mov adcb add lret (bad) mov ds fistl mov mov std pop push cs rolb pop adc xchg mov mov dec add inc hlt mov sbb adcb dec cmp je adc cwtl jb mov xchg push fcompl stos mov or negb lock addr16 jg mov dec pop int3 loopne add xor sub jmp jbe into or xchg push and mov cmp in dec jmp or test or cmp pop bound negb xor mov push dec dec int3 or mov in into mov adc cltd cmc scas xlat adc and fwait push (bad) cmp xchg movsb movsb repz das aad les and mov ret mov push (bad) repz pop pop mov jecxz inc test pop jecxz pop lods pop pop mov mov sub enter stc cli xchg fyl2x jp xchg mov out push (bad) scas ret outsl cld push inc sub outsl je cmp jmp iret sub adc popf fildl jg sar pop and into adc mov sub jp cmp mov sti xor lea (bad) mov insl out sub xchg int pop bound lods mov pop pop inc jae out mov xchg movsb pop and push dec jmp mov into pop leave mov pop mov movb jle iret or scas mov mov das cmpsb mov test and cmpsl xor movsl pop pop add push mov inc repz ja in imul fwait int sub lea push sbb mov jb dec jns jge jbe pop mulb insl cmc jg push lcall push push (bad) dec stc dec add fldcw inc test dec push call push jno or sahf mov mov or jmp out push cmp pop jg imul scas mov fstl cli dec jns and xchg adc test sbb sub pop mov dec mov (bad) iret push xchg je mov xchg jbe mov (bad) inc (bad) mov into xchg cmp ret data16 xlat scas je lret dec sbb lock fisttpl mov mov mov add cmp mov mov aad or pop rolb adc fcomp or mov push mov pusha movsb xor hlt xor mov pop repz inc cmp test xchg push scas push movsl pop mulb jl inc jp lret mov jb mov test cmpsb or sub cmp int pop divb cmp mov sub clc cmp repz test push test std ret pop iret inc mov mov shlb subl in mov lock jne sbb mov js jge jb das jp mov sbb popf mulb cmp pop into inc gs outsl mov dec sub aam sti jg sbb call sub dec fidivr roll mov out push xlat cmp int add mov inc idiv inc sbb or mov (bad) sahf fwait pop sub push push inc (bad) imul hlt ret sub push insl xchg div dec mov mov mov loopne mov gs rcl cmp pusha xor lea ds test jp dec lea fstpt test enter cmpsb outsl jmp mov pop (bad) adc sub jb mov jmp mov pop xchg push (bad) mov sub jecxz rcrl out mov (bad) cmp or fisub lods jg out push adcb jmp int3 adc jp insb xchg (bad) fdivr or and repnz pop xchg data16 lea fmull loop jo mov or mov fwait mov jnp mov sbb into pop loop (bad) mov ret mov pop jae adc push insl or xchg lds arpl repnz and js sbb mov xchg sbb cld je jg pop div push sahf test fwait hlt jl bound sub fistp jnp jns sbb push js xchg sub fiaddl jg stos jbe daa gs sti jecxz test mov pop outsb mov rcll push cmpsl add dec scas stos xor cld data16 std xorl out mov sbb mov jg sub jl dec cmp jnp loopne inc aam add and xchg dec test xchg popw and (bad) or fisttpll ret aam idivl mov clc push fucomp pop add sbb push mov adc adc push lea or dec imul mov int3 pop cmc das mov push test or push mov add push repnz faddl sub scas cmpsl aas lods mov icebp jo rol out test inc pusha ret push mov ret aaa fldcw sbb mov pop mov in (bad) int mov mov push rcr and push fsubs gs lret push pop lods xchg and mov inc sarl cwtl dec jne ja push fdivp push lods fbld sub addr16 push sub stos mov or gs std inc ljmp jmp mov out fcoms je dec daa test adc insl lret push andb cmp mov scas dec iret mov xchg scas je lock xor cmp pop lds (bad) ja into out and fnstcw repz push xchg roll leave imul ret mov jmp pushf or leave sbbl (bad) inc mov fs sbb xchg xor pushf mov stc adc out (bad) xlat adc cltd push mov movsl pop aaa psubb dec popl pop in lods cwtl mov jge and gs inc cmc inc xchg dec mov aaa xlat mov xchg in dec stos pop sbb mov push push rcl shr addb (bad) push ss (bad) jge jb repnz mov jge lods jae in cmpsb xor or lret div cs pop inc inc nop or stos add sbb pop dec dec aaa imul and bound movsl lock mov add pusha mov pop ret jne call xchg pop mov sbb pop jge xorb mov pop mov sbb or mov stc jno (bad) out fcmovbe push ret pushl les mov rcrl add mov dec fsubs dec jo pop add divl js and xchg cmp add sbb sbb lods lcall lods adc push outsb loop fimull cmp mov jmp les pop imul mov and subl mov push icebp mov jecxz sbb dec ret std inc cmp mov xchg mov mov jge sub ret cmpsl sub dec fimull fsubrl negl lret lret mov adc loop dec jl cmp (bad) dec jmp mov loop,pn lret jmp in xor mov fnsave test add int ss jbe cld cmp outsb sbb push (bad) jle test enter nop incb add xchg fbstp pop insl (bad) mov jb mov sub addr16 dec repz cmp aas test or fcmovu arpl movb mov and jbe mov sub mov jno repz push inc sbb shrl dec test jge cli je or ret cmp cmpsb pusha out mov inc push mov and daa cmp mov push or lcall jne cwtl and cmp push cmp pop mov arpl call sbb lret je xchg aad jo sub mov lods dec sbb loopne xchg cs sahf testb lds std inc sub sub das scas xchg xor adc rcrb jno lock (bad) mov inc push in aad cld ret cmc stos xorl ss std mov mov fs inc inc nop (bad) cmove (bad) jbe mov or adc pop sub cmp jae outsl jecxz int3 lock stos push ret test pop jno push mov (bad) xlat xor adc aam scas push mov inc sbb ret fimul sbb pop stc inc xchg test sub outsl push and test subb lcall cwtl scas jl loopne or and jmp pop repnz mov int3 (bad) into dec (bad) addl mov mov fnstcw push test push fistl scas iret in bound movsl incb xor sti xlat jp mov sub inc test loop adc add push gs add pop and loop mov insl sub cld aas int (bad) dec sub xchg and mov daa mov mov xchg or mov mov pop test sub xchg xchg or sarl int3 arpl add cmp jnp clc cmp sahf xchg mov fistl sbb lea jb mov xchg mov std inc pop test pop test push mov pop sbb mov imull call fistpll mov enter pop addl cmp xchg lods lea or mov xchg jmp (bad) cmp jne add scas and int3 mov mov fwait sbb pop push jae xchg adc out mov mov mov cmp xor push cmpsl lcall movsl stc sbb add leave and mov (bad) mov call (bad) int dec test pcmpgtd xchg xor and and xor je xlat lret fldcw push xor cmpsb hlt mov fdivs out adc cmp xchg mov es cmp mov dec mov and int jecxz scas imul (bad) jg je fadds dec loop movsl hlt cltd mov in mov mov mov aas mov ljmp xchg and out push rcl jge xor mov adc ret les int and push (bad) imul es xor xchg fstps pop jo test sbb pop cld data16 cmpsl inc and ret imul mov hlt idivb pushf sbb or adc aaa js cmc fisub (bad) jg xchg movsl ljmp fs dec cld cwtl push imul imul mov mov inc push xor jmp xchg xchg mov cmp lcall lods lock divb test or cli dec (bad) (bad) int popa sahf loopne inc jecxz add inc notb sahf pushf sbb mov pop negb xchg loope in jl mov mov inc xchg sti push cwtl push fcomp jne daa shlb stos repz pop fsubl or push cmp icebp xor push imul aas ss cmp fwait scas cmp cmp test pop xchg inc xchg enter xor xlat dec ret jnp sbb daa sub fmuls jae mov pushf lods xchg imul push xor jge mov mov test pop xlat jnp js adc addr16 jnp lock pop or insb xchg sub shll int3 cmc sub mov jecxz lcall cmp daa sbb lahf ss push cmp test ds push jnp mov mov sub lcall push pop mov jecxz lret lcall add mov and push xchg and dec (bad) and pushf aad mov aad icebp pop and popf mov pop mov decl movsl xchg sbb add or arpl jb stos imul lahf lods outsb arpl inc data16 mov push incb enter in mov loop and xlat dec ret notb dec (bad) insb in push (bad) sahf ja adc ljmp in fcom jp fcmovu lds movsb push test fstpl mov pop cmp or loop mov insb nop inc dec add jmp out fimul mov fisubr fimull push cmp push dec adc jmp sahf sbb mov add mov (bad) xor fs lods (bad) or push and mov jp mov jmp xlat (bad) or ret popf cmc push out mov outsb xor roll dec xchg xchg xor add aam push and stos call and or mov inc xchg mov mov mov xchg cmc out pop and lret push inc fwait stc hlt push inc mov jae enter dec jle rcr push adc ja popf inc xchg in arpl pop ljmp js cmp fidiv in cmp iret in gs outsl push adc push cmp sub std sbb es pop mov jne pusha sbb js das lods or mov adc shrl jne dec out mov negl pushf cmpl pop inc jnp (bad) adc add loop cmpsl int add sbb cmpb mov imul push inc cwtl fisubl mov dec repnz pop sahf loopne or mov mov dec dec cmp or adc (bad) test test repz mov sub aaa xchg push rep sub adc pop (bad) leave cmp cwtl add aaa add roll and icebp call mov sub push jge bound push mov sub pushf jmp (bad) jae sub xorb cmp adc mov add adc dec popa mov aaa (bad) pop leave jp (bad) sub mov aas mov xor mov lods daa mov mov aad in aas mov out mov cmp (bad) in das loopne dec inc mov stos and dec sub dec push shrb xchg sub push xor lds (bad) iret inc stos mov sbb mov jle lods sarl popa fsubl xchg enter enter jns test js jg ret outsb roll sbb out jnp inc xor stos outsl and lahf dec inc inc imul fdivs into jge and lock pusha add addr16 mov adc scas xor mov push pop sbb cmp sbb subl sbb movsl fs jns fisttpl inc cmp (bad) lretw pop push (bad) mov dec inc das je mov ss xor (bad) or xor jg int jne rol rol aaa scas sbb in out adc push sub test sarl mov mov add pop fsubl scas sbb in jae lods sub int cltd cmp mov or dec inc idiv ret das ret cs mov xchg xchg mov test nop mov mov aad xor aas adc xchg aaa and inc push lcall int3 insl dec jecxz clc mov adc xor or mov push add in and adc imul repz cmp adc sbb and push dec notl mov add movsb (bad) test mov repz xchg fbstp popa sbb sarl loop das iret jmp mov mov test cmp cmpsb pop js leave mov jecxz popf lods pop imul cmp or das xchg inc cld out (bad) xchg arpl push inc or out xchg rorl pop cmp fwait iret rorl xchg adc std fcoms xor push rorb popa test in rcll and inc jns movsl lcall adc mov fdivrs ja mov jle dec repnz xor lret enter lcall out mov lds inc imul insl fadd aad add adc xor out push ret gs add aad cld gs xchg leave outsl movsl aas adc mov dec outsb and imul daa rol (bad) fsubrl push xor xchg scas push fucom rcrb leave cmp cmc movsl add jne fnstsw inc jne addr16 xor fld and xchg (bad) cmp icebp jl insl call dec lcall bound ljmp sahf xor fstpl ss xor pushl inc cmp inc mov inc andpd lahf cmp adc out icebp push mov inc xchg jno js vmovapd mov and (bad) mov sub push xlat adc or test out jg dec faddp je insl cmp sti enter pop dec mov cmp pop stc mov cmc negl insl mov rorl inc pop test push jnp movsb loop xor xor (bad) jb int3 (bad) xor xchg adc xlat pop cmpsb mov add cld xor lret dec fisttpl pop pop lcall xor fs insl adc insl jp fisttpl (bad) rcr cmpl mov (bad) outsl adc (bad) sub push push dec adc nop sub in test mov pushf (bad) dec xchg mov dec pop cmp dec int3 mov (bad) leave inc mov mov pop push dec xchg loopne scas (bad) cmp jl lcall mov nop pop lret xor (bad) add scas xchg lock (bad) pushf jmp jne pushf jecxz,pn leave fninit jmp and dec int pop adc and xor cmpsl inc je adc mov jge mov cltd imulb inc mov mov xlat nop lea sbb sbb enter mov add out aaa mov fwait dec pop pop nop stc das (bad) aad mov sub mov dec mov sti mov dec xchg (bad) cmp jge jmp (bad) mov lret push fdivrp jnp cmp mov cmp aad (bad) movsb xchg push xchg aas out jb mov pop sbb into fimull xchg shlb or or mov mov push test ret jg mov xchg das imul sahf movsb fstpl sub push sbb movsl ds mov (bad) push jl or mov sahf fiaddl mov add sub and sub adcl inc pop fcompl sub adc mov shll mov sub ds andl scas or inc jno push mov jle pushf aad movsb inc adc xor pop insl adcl imul adc jl (bad) sbb ds mov inc (bad) dec gs mov int jle jnp ret aaa mov lock cmova xor jmp sbb mov pop fwait or es or (bad) (bad) and test pop xor stos sub (bad) test add ljmp jnp push jge daa sbb or jnp sbb mov sub ja push out daa pop movsl (bad) in jnp mov lea scas sub shrb inc fstl fisttpl test loopne mov inc pop iret leave dec mov (bad) sbb int3 or inc mov jns sub loopne xlat sub push jl loop gs ljmp dec into push hlt xchg movl and sbb dec or imul add scas jp fcomps loop mov mov mov adc out inc popa in pop mov fs jecxz or ds pushf icebp vpcmpeqw mov pop sarl rcl aam scas cmp inc lahf xor and cmp dec pop lahf mov fistp add pop stos (bad) testb inc inc add js push cmp rorl ljmp pop mov ret int jp std and jg stc xchg jno mov fmull push push add shll xchg arpl pushf xor jl (bad) jmp (bad) enter push xchg xchg iret int dec out dec out popa fisttpl inc mov pop js inc sahf insb imul mov or test mov icebp sbb push popa test cmp mov cmp jge in xchg nop in popa es mov (bad) sbb shl mov xor lahf dec (bad) clc loope lcall outsl push scas insl call xlat and stos insb add push xchg clc mov inc loop loopne stos jno mov dec pop std jge std dec sub loop mov ljmp ret into sub (bad) data16 sub mov rol mov inc xchg repnz pop les cli out push cmpsl popf xchg cmpsb mov xchg aaa mov jl fstps dec ret pop adc sub inc loopne xchg pop lea andl push stc mov pop jle inc or sbb pop push cmp mov or mov pushf push jno ja inc mov push (bad) aaa cmp inc inc jns into xchg sbb push mov imul ss lcall pop dec fwait push inc rorl sbb (bad) decb cld in xor cmp aas cmp inc shrb mov pusha sub add bound mov mov sbbl pop pop jl inc xchg push mov (bad) xchg popl inc scas xchg or repnz in push xor rclb sub xor clc push pop arpl push loop iret push out adc lcall cmpsl dec and push add dec das xchg add mov jmp mov mov (bad) out xor es js or addb push xchg mov nop inc hlt push fiadd jle ret dec pop lock int mov push and and nop add pop push mov and test add cwtl (bad) bound xchg fsubrs xchg pop inc cmc cmp fisubl outsl fidivr cmp xor dec dec push inc std (bad) mov int push fidivl (bad) fsubrs or mov sub mov push enter or mov jp out call adc xlat sub (bad) stos mov or pusha and xor rcrb call lds fisubl nop pop popa adc scas adc out cmp inc sbb pop inc sbbl jmp popa push mov mov pop pop jmp pop js or cltd pop inc lea les ret cmp push mov adc xchg dec pop cld nop mov mov mov mov xor in or stos pop add lods dec jge xchg into jmp add popa sarb rcr sub adc inc (bad) mov test sub add insl test fwait (bad) imul sbb and inc test pop ret xchg or std xchg mov or into cmp dec dec cs mov pop push (bad) ret out fwait pushf outsl push pop (bad) scas in lcall adc add imul and xchg (bad) mov xlat push (bad) lret sbb and pop dec mov xchg mov sub pop xor ss mov out cmpsb xor jge xor arpl sbb insl popa daa push mov jg mov push inc mov jbe or sbb cmp stos ss pop repz mov add pop mov adc sarb mov adc int3 jle pop push (bad) push cwtl mov jnp adc mov aaa out sti push dec sbb sahf jg jle inc ror test repz xor sub rcll stos pusha int3 jnp inc and mov pop (bad) sar rorl cmc push rorl mov adc adc pop jle fsubr in sbb rcrb les in inc (bad) jle dec pop or xchg js out pop mov dec pop test lds imul jp shll mov adc sti rcll mov sarb mov notl (bad) stos out leave and cmp cmp dec sbb sub sub mov add popf jae xchg jo mov test push dec pusha xchg mov adc rorl pop repz pop sbb out es add jle stos xchg in mov cmp clc sub push lahf xchg and jp fwait dec cld dec std rcl dec pop leave xchg jne and jno inc push sbbb mov mov repnz rorb or (bad) add push int3 sub mov fistpl mov push aad xor data16 ja xchg xchg shll adc xor mov test fwait mov sub pop mov loopne pop cmp aad sub out jmp stos lods nop mov mov sub pop xchg push movsl xlat movsl pop push jp adc imul das aad mov call (bad) outsl mov arpl push fadds jg addr16 xor aad xchg add test xchg jnp push in imul adc addr16 xchg dec mov (bad) jo mov cmp jle dec mov xchg lea jle jmp push lret pop mov int3 mov fstpl mov mov cmpsb adc (bad) stc sti lret mov imul pop adc pop lret insb pop lock push sbb sarl pop rorb jns andb (bad) (bad) loopne mov loopne lods jecxz lahf push pop shr (bad) arpl jne dec xchg adc popa sbbb sbb dec inc cmp adc aas sbbl mov int push push and ljmp inc inc and or dec add push push inc inc loop shr arpl adc test adc and cmp jb insl shlb std movsb pop es dec fs mov pushf outsb (bad) cwtd pushf bound push into int out fidivrl jmp enter scas xchg js es jns jecxz loope scas adc imul push lds push shlb repz push xchg mov mov repnz adc into in cmp push jb sti pop lods xchg mov jmp dec call stos sbb (bad) pop add pop rcl mov (bad) xchg inc pop xor out ficoml mov ds clc pop xchg divl sub addl cmp inc adc or push lret test lock cmp jno xchg lret inc sbb inc in and call stos dec repnz mov cmc mov jecxz std loop jl addr16 xor pop mov test add test xchg pusha inc mov into pop arpl mov icebp pop (bad) hlt inc (bad) negl mov popa insl test aam adc sbb or jbe and mov mov pop out in js xchg or push (bad) fsubr mov add jo mov jl loopne adc insb jl mov add jnp push sub push mov loopne,pn add push sub lahf pop lods mov imul dec lret pop xlat xchg mov pusha fsubp mov xchg adc ja stos jae pop fisttpl inc dec jmp cltd dec sbb popa std cmpsb hlt call stc and sub jno (bad) sbb xchg fsubrp inc inc subb sbb add iret add inc dec nop in movsl sti jb cwtl pop jbe test shl fsubs cmp adc pop (bad) daa rorb movsl ja in sub adc iret pop pop sub mov lds out (bad) jae aaa pop sub call arpl loope dec mov cmp xor xchg cmp dec mov (bad) cmp adc mov jl lea pop mov sarb pop ret push ljmp loope loope pop imul cmp (bad) outsl dec stos ljmp imull ret inc insl lods jg in mov sub push jne movsl test mov (bad) ficomp adc mov scas cmp jecxz icebp movsl pop jne and adc stos dec sbb mov test pop je add sub (bad) inc jns in pop (bad) jp int loopne or mov push cmp into or mov sub cmc (bad) xchg clc or sub inc (bad) aas in lahf ret test ja add push add xchg stos popa lods popl mov pop and xor stos pop mov sub xor xchg rcrl mov lmsw sbbl add xor imul lahf cmp and mov mov out and jno xor outsl (bad) test xchg scas dec test xchg pop clc rorl mov adc lds push xor mov sub dec idivl jle xchg pop je mov mov add jae push xchg int mov or pop or pop (bad) mov je rol jmp push test in in test inc jp dec icebp xchg (bad) or clc push cmp mov jp push push insb pop xor dec add pop fldt icebp mov (bad) push xchg or in lods rclb push cli inc mov mov in adc popa mov loopne aam gs roll push rcrl daa leave sbb and ss jecxz pop insl out xchg push dec movsl mov int3 jmp sub or xchg fnstcw sbb add cwtl and cs imul jbe add scas mov lcall sub ja xlat enter movsb lds fildll pop rorl std mov cmp sahf outsb test push mov inc stos fisub adc mov xchg xchg movlps pop addr16 mulb fstp sub pop xchg test xor jmp xor push test hlt mov push push mov lds scas mov pushf and add xchg cmp scas and and pop shrl mov mov js outsb xchg popf lcall mov mov aas sbb jmp sbb in cmpsb pusha cld mov andl out sbb and and aad js mov xchg ss xor xchg divb or mov je jg imul (bad) imul movsb cli int3 mov ss popf push stc sar inc or gs sub loop out jo mov lret test mov push sub jnp xor hlt mov mov lods sbb xchg dec mov rorb jmp out lea leave hlt sbb push xor (bad) data16 stos jecxz ljmp dec mov leave cmp push in sub push xor sub mov push add push dec push stos inc in push dec fmuls adcb push jno or and sbb inc mov add (bad) mov repnz bound ljmp repnz lcall aaa out arpl stc dec adc mov xchg fwait lahf imul add nop push js cmp test or iret mov and sub cmp adc or mov adc sbb (bad) imull lret xor fnstcw ret nop int3 rorb test inc fnstenv (bad) fnsave and dec adc stc popf clc in fcomps cmpsb xor (bad) add inc cmp mov and mov jmp in push call sbb jmp iret mov push lds ss pop mov or imul adc mulb mov xchg leave sahf inc stc and js cmp fsubrs and and push js fidivrl add loop jae adc mov push push push adc inc cmp popl mov jbe hlt cmpsl scas aas pop ret in scas push jge xchg inc stos push and lds mov mov inc and fadd jbe fsts and outsb sbb fidivl int imul scas sub push sbb mov pop mov aas adc out dec std jge bswap jbe sub jg sti mov dec mov add ljmp fcoms enter rclb jmp cld add aam jbe pop mov xlat mov fisubrl frstor imul xchg ss leave rorb test push es out daa add fistp insl imul js mov jbe cltd lock xor ja sbb scas xor jge and loop negb lret push (bad) icebp sub iret mov pop repnz mov xchg push aaa dec out leave es sahf and in out inc xor pop iret shl ficompl jecxz dec jno push cmp mov sub xchg rcrb cli mov mov sub stc add xor cmp repnz xchg (bad) dec mov jno or imul lods mov xchg xchg mov iret paddusb addr16 int3 push add sub pop push add fstl xor (bad) cs cltd shr pop nop mov cmc jb xchg std mov sub sub cwtl mov xor sbb inc insb std add push or rolb inc xor jp xorl mov push das xchg insb stos xlat movsl dec inc mov and shr sub sub scas cmp int lahf dec inc jg das (bad) xchg jnp inc call mov cmc rol popf push sbb sub pop out insl xchg mov shll xchg cwtl je,pn push call push frstor adc adc lret fnstsw cmpsb jno adc out sahf pop popf mov call cmp movsb cmp or bound inc pop pop shll cld out divb in jmp or imul push mov daa jge push loope pop jno,pt sub dec and or cmp sub mov stos subl stos add scas pop pusha fs cmpsl sbb outsl (bad) lea mov (bad) sahf (bad) (bad) repz xchg xor xchg jnp stos loop mov aam leave rcr dec jecxz mov les push pop push jecxz cltd addr16 pusha nopl stc js xchg mov pop xor inc jle (bad) sbb jae arpl jp and loope dec jl (bad) cmpsl js and pop shr xchg sahf icebp fisttpll sbb in sub mov fs sub aad add dec imul orl cmp (bad) cmp add push xchg fimul ljmp xchg jno xchg cmp mov dec loopne call xchg cmp js sbb xor pop xor sub jae std cwtl pop jb adc inc sub aaa jo cli cmp test and popa mov clc (bad) nop dec dec pop add pop sbb sbb sbb mov jns pop dec adc int3 jo jb xor mov sbb adc lret and andb cmp dec (bad) fisttp adc in or in mov xor dec push mov aad dec ds or div in push inc (bad) loopne decb cmp xor xor stc gs xchg lret repnz dec dec push in sbb cmp and (bad) loope clc insl pop pushf add xchg (bad) sub sbb mov xchg sub cmpsl adc insl push mov out adc iret mov test push xor repz shr (bad) jmp repz scas call jecxz cwtl cmp or sub es mov pop or sbb mov cmp rolb mov xor jno (bad) shrb mov sbb and mov insl sbb in enter xchg push ljmp lods push inc fldl cs cmp int3 fild nop add sbb sbb sub imul data16 (bad) xchg xor nop jb cltd mov inc mov icebp and insb sub pushf jecxz repnz sub insb cmc push jns push sbb and pop jbe es sub call (bad) jb fimul or add mov cs mov and imul je (bad) inc push fdivp mov sbb mov mov sub sarb xlat jle in xor addr16 mov imul mov jecxz nop dec inc push xor dec das sbb cs dec ja lahf (bad) adc sub cmpsb mov jae cs mov icebp lret clc hlt jb cwtl imul stc mov mov sbb scas rorb or mov jmp stc or (bad) adc push jnp pop add push int3 jmp cs test rep fmuls push adc mov add or sub push mov insl mov fdivs adc add sahf mov setbe movsb outsl xor dec jns xchg push sub mov or lret loope xchg jecxz,pn jae push mov fistl clc sub stos leave xchg push adc sub inc cmc xor stos adc rcl icebp mov jmp or rcrl addb rcrl add cmpsb ljmp bswap or sahf jnp or mov rorl and sub rolb cmpsl cwtl or imul nop add pop adc mov insl push sahf fwait or mov pop add xchg xchg jmp push and pop dec cmp push add jb xchg cmc cmpsl leave fs xchg cmp mov and (bad) into (bad) mov mov xchg das mov imul movsb cmp adc inc inc or loope or inc sets out and mov inc or shll sahf pop aam adc lcall lods shrb int3 jns cmp xchg cmp xor or xchg (bad) shll test add iret dec and pop push jo xchg pop sbb mov pop jae xchg xor push hlt inc mov into push int icebp fwait jo mov repnz xchg push das mov push cmp push (bad) ljmp dec and mov push pusha jnp (bad) into xor mov adcl push in imulb pop pusha mov pop aam add sub imul cmpsl fild xchg pop stc lock insl push inc enter adc stc out sbb mov xchg jb ja int3 xchg int3 outsb jecxz jl mov push (bad) pusha add dec testl outsb inc xchg mov enter jmp icebp lods dec pop pop cmc adc dec js and and jle icebp dec out mov push or mov ret add lds out xor cs cs ss xchg inc int3 sub jp cmpsb adc dec mov sar jno cmp icebp js cmpsb mov pop and stc push inc lods lods gs fucomip ja mov inc pop dec sub jns lret cmp cli aas jecxz sahf clc add not cmp xchg jge mov mov xchg xchg xchg mov push jb test inc fdivs jne adc gs mov lret mov cli fwait inc fisubr sub je xor hlt arpl dec scas movsb dec push push addr16 inc xor xor mov (bad) divb cwtl push pop mov xorb jbe cmpsl mov add cs imul inc inc xchg notl fcoms inc jno mov cld mov ret in ja orl and mov roll es push inc fnsave jne mov and es jmp aas test out jnp (bad) adc jmp cli imul fimull mov comiss jle jno popf dec outsb adc in pop hlt mov mov loope insl push fsubs pop or (bad) mov add mov xlat or scas xchg fwait inc jno iret sarl mov insb add push mov cli push (bad) mov cld xor jp sbb loopne and loope (bad) jns mov mov test sahf sbbl mov andl dec mov aas and nop pop inc xchg (bad) mov jecxz xchg je out mov mov adc add enter std fs ljmp inc pop cmp xor nop stos sbb mov push or mov aad mov jae fmulp negb lods xchg add insl xchg mov addr16 out into sub xchg ret ja sub cli lods incb fisub pusha arpl sub scas icebp mov xchg inc roll mov xor out hlt lock xchg xchg pop aam push cmc fs add pop pop arpl mov hlt xor add cmp mov add das pop add jl or inc jl,pn ss push jecxz fistpl or and ss imul aad iret movsb sti in adcb call lahf mov or pop punpckhdq iret shl cwtl addr16 lahf test mov insb aaa or jg cmp jle iret fcomi push fnop mov mov dec cmp xchg push in pop xor insb jnp jb ss push or je xor jne jb inc inc pop inc dec push mov rcrb push mov cwtl sub int3 jo sbb mov ja mov pop mov mov inc hlt push loop roll inc mov add jb ljmp dec push push negb adc xlat call pusha adc in lahf mov fcompl shll pushf int3 mov jno jbe,pn dec push add arpl ror pusha sub movsl jae xor pop stos xchg mov movsl mov (bad) mov lret adc sbb test loopne and in push push jbe fmul jae sarb pop dec mov repnz pushf jo fnstcw fs sbb test (bad) push sbb sub push ljmp mov dec leave jbe xchg stos icebp add sbb xchg mov and mov (bad) jmp push sbb outsb xchg mov dec and pop lods popw jo (bad) adc jno imul jge or iret mov and call sarl cmp (bad) sub loopne outsb xor adc ret pop and push xchg dec jl ds pop jo sbb cld lock repnz test mov (bad) pushf fbld xchg clc jns push sub lcall lcall cwtl aaa mov or mov or cmp ror jns sub cld lock jnp scas bnd insl pop out clc scas xor inc adc pop adc pop push test push and shrl test jmp movsl lock cmp jne nop fldl adc scas mov push xchg roll es hlt push popa outsl cmp jae lcall xchg mov sti mov xor push arpl and out enter js shrb and inc add add insl add sbbl lock dec popa cmp testl inc push lcall push je decl inc cmp pop fldcw repnz stos cmc add rclb xlat inc mov inc lcall jno xor call ret xor outsb add add lock lock jle lret cld shrl fwait mov push aam dec adc scas addr16 scas (bad) push popa into icebp and mov out adc push out popa arpl or xor sub pop cmpsb sbb fstpt push adc mov sub adc or popa loope aad mov sub bound dec cwtl popa lcall fwait (bad) hlt inc xor cmp ss (bad) xor cmp mov add fldl sbb mov imul lock jns inc sbb les and adc cmpsl imul cmpsl mov sub xor inc cli test (bad) mov cmc lret ja sbb stos xchg or int push jecxz ljmp or mov adc pop mov shrb or xor cmpsb pop cwtl xchg add sbb dec jo imul xlat clc (bad) jns jne dec insl inc pushf inc idiv (bad) mov inc cmp sbb push inc fidivl fwait shlb mov and sub dec xorl xor push mov (bad) call cltd or xor mov insl pop sbb ja adc pop imul inc hlt ja mov jno xchg loope testl incl sub (bad) mov pusha mov sub sub out popa (bad) push stc shr dec pop or aas push push hlt add scas jns fsubr insb int pop cmc xor adc add mov aad ret mov inc add pop fcmovb dec and ja (bad) dec je mov adc ja nop xchg cs push sbb cmpsb lret adc mov mov pop pop inc or movsl push mov lcall (bad) lock cmpsb inc mov cmp sahf inc mov adc cwtl mov mov jge nop icebp lea fscale (bad) sbbl xchg cmp mov mov mov sub imul jbe xchg xchg mov push mov loope sbb inc in xor andb xor push mov scas xchg add jl rorl test (bad) dec push (bad) dec inc rolb adc pusha add imul sub jmp (bad) xchg roll sub fwait pop cld xchg sub jmp or xor in out adc push jne adc cmpsl roll jo int3 inc (bad) jecxz test cmp loopne mov jns fcmovne aas imul dec enter je push mov push sub mov mov mov inc inc pop or mov sbb mov xchg lods push imul mov xchg cmp adc adc xchg xchg fdivs or (bad) add or xor popf pop sub xchg mov and outsl mov cmp cmp mov pop pop push movzwl or test lods and pop popf js movsl mov dec lcall call jmp push add stos xlat lcall adc test fdivrs push lock xchg ret xor or rclb xor jg (bad) mov jbe inc leave ljmp pusha movntq push pop popf lods xor mov fwait jmp inc push adc aaa sarl push mov rorb cli jnp dec repz jge nop mov pop inc movsl popa cli jmp mov lock add ljmp data16 (bad) sub xchg insl push dec push fcmovbe push cmp nop scas int inc pop out cmp test push jae adc add lahf jge mov lds adc (bad) imul cmp mov jecxz sarl fldenv jle sbb mov fadd hlt mov xchg (bad) jl cmpsl leave inc in bound pop mov xchg dec cmp xchg ja adc repz lds sbb cmp xlat push sub add xor push sbb xchg (bad) lcall mov loope push mov mov pop loope sarl nop and jl test (bad) jl fiaddl rol in mov pop adc inc loopne inc popf loopne (bad) int3 out std inc mov push fsubl je xor out arpl cld dec mov mov (bad) and add dec das sbb aas (bad) dec (bad) pop outsb mov movsl inc or sbb mov stos push mov jmp clc mov mov lock leave outsb pusha push pop push outsl xchg sub lahf pop push mov push fdivrs mov repnz xchg popa (bad) clc push divl dec xor jne (bad) adcb enter fsubrl fs icebp mov stos pusha push and hlt xlat mov lods clc pop pop push adc loope xchg xchg sahf movsb sub and pop xlat dec sbb test dec lods dec loopne inc ljmp ja mov jle inc adc lret mov lahf sbb pop dec popw cli adc pusha test scas inc and pop mov out cmp scas sub (bad) xchg sahf mov (bad) out cmp sub fldl (bad) xor xor bound sahf cmp inc dec mov hlt mov sbb (bad) scas sub jbe inc push xor xchg or push adc ret mov push sbb out sub sbb pop and mov test sbb jno jne dec or in andl fild dec fsubrl xlat sub mov bound mov hlt hlt xchg sbb jg or sahf push pop loopne mov dec movsb popa nop cmp xlat cli mov rclb or int pop mov sub adcb xchg xchg adc cmpsl cltd inc not dec pop imul insb pop enter sub jl cmp cmp fcmovnbe ficompl aad lds adc sarl xlat xchg scas arpl lods clc jmp nop add mov in js cld shll roll add sub lcall not ret push adc inc fisttpll push or addr16 lds out scas das inc mov fs pop xchg stos cmp cmp stos inc lock frstor arpl (bad) test cmp scas jecxz xor or loope cs fsts mov xchg jmp pop mov in add push in push rcll xchg jne mov xor fs outsb inc icebp dec (bad) iret mov data16 pop dec jae jecxz leave xchg imul cmp adc add in push lret xchg lret fwait mov mov imul pop jno mov mov arpl pop mov mov (bad) cld sub fdivs cmpsb ficoml adc or xor jge in cmp mov push sbb and xchg mov lock enter mov int3 sub adc stc scas rcrb lcall data16 aad and push adc pop out mulb or lods scas loopne insb or add movsl (bad) push jns push fsubs pop cmp push add and imul lods fsubl and push adc push sbbb bound sbb fs xor shl fimul iret js outsl lret (bad) or ds dec pop insb dec xchg (bad) ret push lret push or movsl ret test fucom mov ficomp dec push or pop aam pop sbb out mov adc sub xor mov scas lahf stc cmp cmp cmp test xchg addb adc push dec push add scas int mov in pop adc push (bad) cmpsl pop je mov inc lcall test je stc jb mov inc xor sbb dec or cmpsb xorl xor pop jmp jp jns and xchg sub (bad) in lahf or push inc jae aad cmpsb lea add mov mov rcll cs ret fucomi andb and inc pop inc pop pop ret xor je push push sbb outsl (bad) movsb adc and sti cltd mov das bound (bad) push lcall stos inc daa clc nop jp mov mov push dec out out hlt or add lcall data16 cld inc sbb pusha xchg jecxz add popa pop xchg mov pop fldcw out loopne sub in cmp out add xor rorb adc or stc clc lods aam adc in addr16 fs or push mov mov jle fnstsw sti rcl and jmp shl out add (bad) ljmp add add add cmp pop sub cs jo xchg add inc push das cmpsl test add sub (bad) xor mov in cmpsl jp mov inc and data16 push push ljmp or dec or into call jbe add xor in (bad) mov aas adc (bad) sbb lret movsb and and lods out add inc cmpsb in xor leave sbb mov mov clc outsl mov mov xor scas mov ss mov inc call cmp sbb jns lret inc cmp cwtl int3 push gs aaa mov xchg jge push mov ljmp ret les shlb mov test adcb jmp dec notb fisubrl lcall pusha cs pop ds out lahf or pop dec jnp add mov lods ret sbb les pop stc (bad) push sub push (bad) mov adc mov je mov pop or push (bad) (bad) jmp idivl push pop jmp sub cmp dec (bad) mov add sbb rcr and scas std mov mov pop lahf mov clc jb (bad) ja aam or sub fldl and push cmp mov cld (bad) fisubrl shll mov popa ret jae out mov push inc lods test cltd gs sub sub push enter int3 dec xchg es arpl pop nop sub sarl inc and push adc mov push sbb flds stos clc jne out inc dec adc repz cmc shrb movsb mov gs jmp mov ja jb jg adc icebp lea out xor lret pop das push sub cmp hlt popf and js das push out push jbe xor push inc xchg xchg repnz mov jno and or xchg fmuls stos jno pushf and loope mov sbb cmp sub rolb imul mov cmp adc imul movsl ret xchg leave sbb sarl add jns pop nop xchg rcrl scas lods ret xor sub xchg pop sbb fnsave in repnz arpl jns inc in mov iret fbld push xsave pop lahf das adc mov sbb int jae repz sbb iret cmp dec xchg jo cld mov fucom cmpsl and sbb fisubl bound and mov sub adc or jmp imul push subl leave pusha lods test leave push inc mul sbb push push in es fildl adc dec mov and mov push cltd adc sub aad sbb mov mov push dec dec shll and in std es icebp mov lock sbb insl pop xor cli push xor arpl pop testb fisttp inc lods (bad) mov sub dec ret lods adc bound fisubl jle jl sbb or cmp xchg jnp adc aam mov gs call in in cmp in sbb dec add inc ret mov ret fistpl ret into mov mov out fnstcw js jmp in add gs sbb stos mov aaa bound fs divb push gs cwtl mov cmp and and jns mov inc add fs add (bad) cmp mov inc push fnsave jb pop add enter jmp stc aad adc inc mov mov in cmp xor xchg jae ffreep arpl mov outsb mov add xor dec mov lret cwtl xlat dec in dec test add cwtl sbb push xor adc push inc sbb and es mov jb pop fisub fs jecxz xlat dec and ja inc enter das pop aam ret xchg pop cs mov mov and sbb sub inc mov cmc or lea add lock push imulb push push hlt sub add adc mov test dec jbe call cmpsb out stc scas sub lret scas cmpsl rcll out push pop sub out xor cltd daa repnz stos and (bad) push call mov mov notb aad je pop hlt movsl inc inc rolb xchg jns fmull loopne add stos shlb jae ret dec aas or sub popa hlt fldcw sbb subl ret jmp addl aad (bad) lahf sarl dec lock jno adc adc scas mov repz mov sbb pop jge mov pusha out aas out jmp mov dec and pushf inc (bad) push ret in ljmp test cmc (bad) nop cli xchg jmpw mov les fistp add lods lea cwtl adc inc dec or imul stos ret and dec lret in lock movsb xor jo mov leave adc popa daa int3 (bad) rcrb lods lods add or stos les daa int3 mov jmp leave pop push mov mov clc and or (bad) mov mov in popl xchg inc int xor aaa je sbb jecxz mov aad movsb in clc jb dec inc cmpsl mov xor idivb pop and cltd sub clc inc fisttpll imul test pop (bad) lcall andl xchg mov mov cmp xchg mov cmp add adc popa loope je xchg and js mov sub scas stc mov ja fcom pop dec mov jge and lret mov sub or or xlat sbb stc addr16 (bad) or and (bad) cmp jns mov xor lds mov jl mov sub pushf mov mov aas and fwait lcall loope rorb sbb popf nop out fnsave sbb push fild movsl insb xor bnd inc subb mov add mov sub cmp arpl lock test nop cmp out fwait mov call dec out rolb fild nop int3 mov lods pop pop mov inc loopne adc xor or adc xchg or seta sbb test outsl cmp mov out or or ja imul not int3 xchg mov cmpsl pop xchg mov xchg pop pop dec push ja icebp push rol lret dec out inc cld inc inc out mov pop mov xchg imul (bad) out into pop in sti jp sbb lock push xchg push pop xchg xchg mov xor mov roll stos xor add xchg or es sbb xchg lods add das adc andb push mov xchg cmpsl sahf cmc shlb fnsave lods out mov add sbb inc popa stos cmp sahf test cmp dec fadds inc mov pop stos adc mov mov popa mov or and mov mov hlt lret movsl clc fmuls ss push sub aad cs fwait movsl ds movsb or cmc pop (bad) addr16 sbb outsl mov mov arpl (bad) (bad) or into sbb daa aad and ds ja push or push (bad) fucomip je out enter rolb add stos pop bound in stc push cmpsb cmc shrb or ficomp das jle out call fild scas pop lods mov roll jbe (bad) icebp jbe jb or int3 ds int jno mov sbb pop pop fstl movsb aam loopne leave movsl mov adc out or int3 cmpsl dec mov xor cmpsl sti sbb sub mov inc movsb hlt xlat dec push inc aas enter shll push fild sbb pop ret and pop add push push lds daa cmp jle push daa orb repz sarb ds pop sti shrl xchg add repnz test sarb sbb (bad) fs std xchg pop icebp or push lock int3 loop mov inc mov dec mov push outsb sub or pushl nop shrl loope jle cmp jmp fisttpl les mov cltd add sbb mov inc nop adc popf inc or outsb in xchg std mov or jae dec and int mov nop test and push add xlat repnz dec xchg outsl sub lock cmpsl push push (bad) sti (bad) aaa push mov sub xor mov imul cmpsb inc add mov pop add js outsb out add sub mov jae out sub (bad) imull (bad) movsb pop xchg hlt cwtl pop sub mov (bad) fdivrp mov cmp push and or mov inc and pop mov repnz daa cmp into cmp mov notl add jmp push dec pushl test loopne movsb cmp mov sbb xchg movsl nop xchg test xlat mov sbb add cwtl movsl out sub sub lcall mov dec mov and (bad) call in push sub adc shlb adc ja rorl mov iret fisttpl out or scas int rolb push and jbe mov je insl ja cmpb cmpsb inc adc in xor dec dec leave ss add mov mov stos sub leave (bad) dec repnz sbb xlat sub add mov inc jecxz mov aad std mov or stos xor add dec imul mov ret xor fstps inc movsb fstpt or push jge repz mov mov stos ror xchg or clc adc (bad) seta mov or data16 cmp mov add mov pop xchg outsb jmp inc mov jnp inc sub mov outsl cwtl leave adc aas push dec sub dec pop mov sub jmp imul lahf mov mov pushf xchg scas push mov popf mov lcall das in adc xchg xor pop (bad) je inc aam adc add std jo int push jb mov fstps pop pop nop xor call les dec push inc jo mov ljmp mov leave push dec lds and sbb push shrw (bad) mov jns xor sub es out push adc sub mov je repz add cmpsl (bad) pop xor mov jnp or mov mov test jo pop imul push cmp mov dec je xchg data16 sbb xor sbb add xchg das es fistpl xor leave movsl divb fistl xchg adc fild mov adc nop test push stos aad xlat test test jmp mov jnp notb sbb push cmp inc adc mov mov nop in mov arpl xchg nop xor fnstcw jp pusha iret bound push and pop mov lcall pop push jbe pushf pop cld dec movsl or ret pop inc bound adc push adc mov inc out xor out ret mov iret mov rcl cmp mov jo or add rcrb jb push pop iret xchg ds lcall sub mov sahf les adc push lds sti and decl add dec lcall inc sub push repz daa in popa popf sbb adcl mov icebp and or ljmp (bad) jae (bad) popl xchg imul cmp mov or add insl sbb jae mov mov repnz sbb xor add pop lcall jg jl pop mov mov mov push mov push ret aad cmp mov adc pushf xchg fldenv mov sbbl shll pop dec ljmp lock fcomps push push lcall mov stos hlt dec push les mov sbb mov mov in aaa or lods push aam xchg xchg out ljmp xlat in js and fsub ja insl push clc or pop mov adc pop mov jg mov and (bad) adc test pop xchg push mov shll xor lcall jns test scas fwait sbb inc les in mov and cltd leave std pushf imul add cmpsb pop in mov imul mov dec or daa mov nop ret pop jae in call or shrl insl adc daa mov lock das jle enter sub sbb sti lret fiaddl mov pop inc push pop inc mov shr mov xchg jg add loopne arpl mov sub ret mov mov sub jbe pop (bad) fs dec lods shrl adc xchg (bad) fisttpll pop cmp mov loop adc xchg ljmp mov mov (bad) mov js scas nop (bad) mov ficoml outsb and adc sbb clc xlat sub les int adc or push data16 xor es call test jmp mov jp cmp data16 sub xchg mov stc mov jecxz call and icebp adc push xor jbe loope rol push pop loope cwtl jp (bad) dec inc or push mov ret add pop loopne xchg xchg (bad) lret lock or sbb loopne inc xor into mov dec nop lcall aam into add cmpsl sahf mov aad (bad) in mov mov fldt shrl jl push pop cmp icebp mov push lret cli ret push push xchg cmp pop cmp cli aam popa int rcll dec inc jbe sbb cmp mov mov fs lret mov pop movsl mov (bad) faddl mov lret dec arpl sub push xchg push mov loope xchg sbb arpl stc mov imul cmp fs pop add flds insl out jns shlb dec bound adc mov cmp je iret fistl stc jbe sub mov lods test (bad) ja adc sub xchg push xchg cmpsl push mov ret mov pop addb into es ljmp inc cmpsb aam sub mov lods pop div and pop xchg rcll pop sti push add and mov mov ret inc or clc dec and ds pop stos sbb fcompl loope arpl sub jp nop inc cli mov fs cmp pop dec mov ja add loop test nopl or test enter cmp and cmp mov lret add and test bound iret dec lods adc (bad) mov add or add pop lea jle push dec adc rcrl mov dec push cltd adc (bad) add outsb dec (bad) push push add test adc cli rclb (bad) push jl daa mov mov iret in and dec shlb mov ret cmp xor ret loope addr16 js les jmp stos fadd add xlat dec gs pop mov out mov add movsl (bad) fsts push rol mov push daa scas aaa inc in xorl inc clc daa imul sub ds into cmp xchg leave mov iret jne dec cmp push dec js sbbb arpl imul push frstor jecxz js js clc mov cmp lahf ret in mov notl inc ds xor push sbb mov mov cmpsb inc cmp stc jge aam repnz call inc mov sub dec iret sbb das or rcrb sub jge outsb dec mov icebp fsubs rcl xlat mov subl jbe jnp mov push or mov jnp aas cld flds adc aad push imul (bad) push xor stos nop hlt add mov mov dec ret jl ret adc add mov int3 xor lock adc pop icebp push xor cmp inc repz cmp ror repnz xchg inc fdivrs mov push push sbb lcall mov stos dec mov rcrb mov pop jmp lcall add inc enter or mov call mov and insl fsts xchg xor sub sub inc xor mov add mov add add mov ss xor lret jmp push push and out lcall cmp cwtl bound leave ds pop movsb daa jb push adcl int sub mov fs (bad) fildl es lods in inc pop pop add insb xchg dec sub aad or in jmp repz lret (bad) lret sub iret sbb xchg pop test mov arpl mov scas pop stos add bound rolb adc mov rcrl cmp lock insl mov inc mov inc imul cmpsl mov rcl frstor repnz scas fcompl jb dec bound mov fadds std clc adc xchg rcll lcall popf or mov fxam sub (bad) push nop xor pop test (bad) push int3 aad in mov loopne push aas jp sar fmull in scas pop add shlb mov movsb mov xor mov sub and add jecxz movsl xchg test fistpll cmpsb sub xor or fildl mov and fistpl clc shl push mov subb ds or cmpsb jmp pop xor xchg and xor push push (bad) jnp or cmp aaa lcall (bad) sbb sub adc scas faddp lret cmpsb and xchg jne cmp inc (bad) jecxz aad adc xchg xchg pop in jb fsts mov sbb mov sbbl stc aad jge mov lret lods pop (bad) retw movsl or cmp mov cmp leave aad xchg inc loope add mov es mov mov sub cmpsb ret xor mov mov ret jbe xchg iret rorl cmp adc test xor mov ret adc lods xor arpl daa jo jecxz or cmpsl inc fild stos sub out xorb sbb add and arpl jb sub fadd pop pop cmp (bad) xor cmovge std xchg negl imul or dec adc lea fisubr adc cmp mov mov mov dec sub inc or push out and adc pop jns leave fdivs fnstsw ja test xchg sub cmp or int3 mov mov or mov sti lds fist jg or cs and mov inc shrl push adc jmp xchg mov std mov or js push jo inc push cmp jnp sbb stos out or aaa push sbb aam sbb out gs mov cmpsl fwait rolb mov (bad) sbb push mov out dec movsb mov mov push dec scas push scas adc enter outsb adc adc insb imul or dec out int cmp and mov ret pop mov xchg rcr imul test pop xchg mov test mov insl sahf jmp sbb fldenv movsb mov pop pop aaa xor pop js insb hlt popf jbe mov adc leave xor out pop popa shll fs mov out sahf out pop (bad) out in mov sub or adc cltd xchg mov test aas fdivrs adc dec cmp mov out leave outsl xchg scas stos pushf push lock enter fsubl pop les in das pop movsb add fcmovnbe mov cld xchg and mov daa pop je in push sbb mov mov adc sbb leave insb stc sbb mov (bad) pop jge dec fisubl mov xor lret jnp or (bad) pop inc sub sti leave cmc fmull push mov or xchg and mov shr sub cmp pop push sbb mov movsb sarl sub xchg sbb jp aad pop ja jns pop push mov push dec sbb and lods lahf push adc lds pop pop cmp jbe jl jmp mov repnz mov pop dec dec clc xor jge sbb leave dec xchg out dec enter jge dec cmc mov cwtl lods cmp adc pop mov mov push cld (bad) mov ds sarl stos cmp inc mov xchg sub xchg (bad) push mov insl lahf out pop xchg jle xchg cli or test test sbb inc fucomp lods sbb out cmpsl das push imul dec mov xchg roll sbb out nop xchg push mov pop rolb lods shrl pop ljmp nop jecxz in lock xchg (bad) jne pop mov pop xlat repz stos mov or or cmp mov xchg or cld shlb dec add or add sbb sbb (bad) inc jae clc sbb push push loope dec (bad) dec enter mov movsb lods adc cs cmp xor inc bound xor sbb roll (bad) icebp in jno pop inc push iret pop out mov jno and insl enter cmc lret dec sub and pop xchg mov lcall xchg mov sub push out ss xchg xlat rdpmc jl pop in idivb out sub in jecxz pop iret outsl sbb push xor hlt inc out int3 push lods in jne int3 orl fdivs jbe push lea push pop pop ret inc jmp popf dec sbb out mov jp mov pop (bad) mov imul pop pop mov out xor repz imul fstpt out bound cmp cld faddl lret stc fs cmp adc lds outsl push sbb imul jle movsl das mov bound lods aas add jl sub call sbb mov pop fs pop cmp outsb in cmc dec xor test test test and adc out pop and push outsl out push mov mov sub nop jb popf inc add cmp inc jecxz in or mov shlb add dec add int3 in adc icebp or pop shll repnz mov pop dec je mov jp push cmp jae fstp rcrl pop dec cli mov xchg aam lahf pop orl jl pop mov fstps cmp xchg cmp xchg scas mov or out ss mov std inc aad mov jns aaa mov idivb sub adc xchg (bad) pop mov inc das mov xchg push sub pushf push push adc sarb lret inc push cli ficom mov fdivr inc lcall outsl pop jle in mov loopne inc and rolb or into push arpl add dec mov push in lret cmp sub push jle or (bad) mov aam sbb mov pop cli adc mov or add sti lock cld jno sarb pop xchg lret shll xchg hlt mov pusha sahf and fidiv dec jnp rcll mov mov outsl cmp xchg insb sti iret loopne adc pushaw fsubs pop sbb jns mov test call cmp mov js add jmp int3 fsubl test mov repz adc or sub aas pop xchg push mov cmp fdivrl or fnstsw movsl or icebp shrb push enter test mov loope pop shrl scas add mov cwtl loope mov push lods js pusha pop jge mov pop pop cmp (bad) mov add xchg movsb test adc in xor stc int3 js mov dec scas mov push lahf dec fldt inc and cmpsb or sahf xchg sbb or jae stc sbb fcmovnu pushf pop roll sbb pop stos xchg ret add add outsb rcll (bad) jg ljmp pop push test or shl andl cmp jb out or pop jnp dec ss jmp mov jbe shrb cld inc test out in jl sub mov and mov dec sbbl lock cmpsb mov mov out ds int lret dec cmp jl or or adc mov push xchg jg call dec iret xor mov jge sarb scas or aam dec in fimull pop cld xchg xlat fnstenv int nop clc adc push lahf and ret xchg or (bad) jo daa adc add xorb shrb hlt jo rolb fwait jns and (bad) (bad) sti int cmp je mov insl or inc (bad) mov dec or jbe pop mov inc inc cmp inc sub addr16 sbb cmp push mov in icebp lods jg mov mov nop jmp pop rcrb inc test and popa lods (bad) mov les int3 pop cmp sbb in adc mov pop rol lods push ja xchg ret scas flds push dec insb fstpt and inc iret jbe shr mov xchg cwtl add xchg es pop dec sbb out aam dec jno mov sub push pushf clc (bad) je in dec xor push sbb mov mov xchg lahf jo cmp mov movsl adc xchg xchg and or pop les stos add dec daa lds movsl push sarl cmp or sub arpl or fisub add push (bad) pop dec pop lods jg pop ja sar jp in fsubrl (bad) sbb test add or int3 andl push jno ss stos in push inc into mov stos daa xchg jo (bad) js,pt mov je ret in andl mov mov (bad) out ljmp (bad) aas movsb sti stos ret rcl jnp lods (bad) and dec sub mov leave nop pusha mov fistp push rcl mov push xor lods xchg and mov push push mov dec and lds movsb insl xchg push test fildl mov mov iret add lahf or ret roll adc outsl data16 clc and setne mov dec and or mov push mov sub pop aam jne xchg mov xchg inc jg push movswl cmp or outsl dec lock xor mov dec in add pop push dec sbb push and lahf cmc pop lahf or push dec and pop test cmp cmp cltd xchg stos mov decb out mov adc push lret fsubl notl mov sbb xchg mov cmc (bad) mov xor mov mov ss push xor push mov dec push faddl rcr loop clc cld sub pop rcrl movl mov mov fisubl pop sub into jo ror mov push fldt xor or push ljmp mov lcall rcl fs jbe test mov or fildl in mov inc sbb lret push sti mov mov mov addl lret inc jl aaa xlat sbb pop vmread ret mov mov adc loope inc inc fcmovnbe divb in mov sbb ret jmp int3 push and movsb push lods add loop loope mov imul pop or and inc repz mov push and data16 sarl dec push cmp xchg dec push adc sbb (bad) shlb lock push xor imul pop xchg shrb les mov in dec ss mov out sbbl std sub int3 push mov mov gs jnp pushf pop jns and cmp push lahf shrd dec sub test pusha mov out sub cmp xor shr mov imul testl aam add inc pop xorl mov push xor lods imul nop pop das mov call inc std dec sahf lds clc push roll mov mov mov bound mov adc jmp jle mov fisubr movsb push mov jo fwait aas jl mov mov jl andnps and in xchg stc fwait dec das push cli cmp add sbb cmp xchg stos xlat ja dec xchg fstl clc lds jmp pop es lock xchg daa sbb test sbb mov and or clc ret inc mov dec push inc scas in lret or and and ljmp icebp nop imul daa sbb and add cs stos (bad) clc outsl adc sbb jo stos mov mov stos ds push popf dec and out and mov (bad) pushl lcall daa jno nop add (bad) cli add add xor sub or pushf insb mov das fadds shl xor or arpl cmp sub inc out mov cmpsb out insl dec xor fnstenv daa xor mov xor negl jb orb or das sub inc dec call repnz pop xchg negl std decl mov jo cltd dec dec mov pop mov inc outsb adc in xchg jp cmp mov pop push mov loopne stos inc test adc scas xor sub out add loope cmpsl lcall adc cmc xor insb in and cmp cld int cli fwait cmc addl push loope dec sti andl add push scas or pop in idivb stos push sti pop sub dec jbe cmc decl cmpsl mov loopne jmp gs xor insb daa jmp jbe mov xchg (bad) out (bad) ss push and hlt pop sbb insl js cmp or sub imul neg fsubp (bad) es pop stos ret addr16 jnp inc add pop xchg mov pop adc aam jg fcomi jnp adc outsb push pop xor push fmull jnp rorb idivb fdivl adc (bad) ja dec sahf add movsl lea mov pop out sbb stos cmp mov in dec fs xor sbb sub (bad) loopne or mov or cmc es subl lods or jge xor addr16 mov aam sub pop dec or push dec push mov int mov push test cltd push inc mov push repnz cmp mov ret and pop mov ss and gs sarb rep aas (bad) repnz popa ds add push adc push mov sbb mov inc add insb mov js sbb ds sbb xchg jo inc mov (bad) mov xchg aam push into or (bad) and inc inc das mov sbbb dec pop jecxz dec lods sub xor mov mov xchg (bad) adc fwait jmp (bad) adc lods ds pop test in xchg inc (bad) cmp notb adc shll aas cmpsl ret fsubrs add test scas mov rep inc mov add push mov mov cmpsb add cmc jbe cwtl test out xchg jge sub out scas in dec push out adcl ret lods mov test jmp dec inc dec or inc mov stos cmpsb sub jnp movsl mov add dec (bad) cmp jge lret push punpcklbw in in clc mov push sbb (bad) out loop ljmp mov push inc popa sub ds or iret scas inc sarl add hlt dec call int add sub out mov int sbb jl xchg jg cwtl jle sbbl jne sub pop push and pop mov test scas (bad) out or mov es or sbb sarb div das add divb ret push sarl adc pusha (bad) jge out adc cmp test scas mov aaa ljmp push loop jns repnz mov mov sbb ret dec nop add test push pop out add dec sbb push fist shrd mov mov in lret jge push jae mov mov bound sahf cmp sbb stos (bad) aam mov hlt jo frstor arpl int3 adc xor jg xor lahf adc pop dec jge addr16 sahf cs pop rcrl mov (bad) fucomp jecxz sbb adc mov or mov adc leave jae push push inc xor or in rolb adc sbb add pop jbe xor cmp mov adc mov xchg push cmpsb inc aam inc arpl push ficompl lcall cli xor stos sahf mov loope jo bound aaa test nop xchg dec in sar mov xchg mov loopne (bad) insl lret ds inc shrl repz aad movb out mov cmp mov cmp scas jmp xchg loope dec test cmc mov mov mov jge dec mov cli sbb adc add sub mov mov std lea mov mov xchg lea dec lods inc xchg sub fisubl cltd arpl lods mov sarb cmc leave add test lahf fwait lahf lock out jge or jns fdivl xlat in mov lods jg ds jle jne sahf popf out test insl rcrb add daa jne cmp mov xchg pop sub inc std mov ret decb fistpll pop in rep jg js std sub mov push ficompl cmp lods adc adc fwait lret add mov and out insl cmp out mov xor push test mov mov cmp mov jo aam inc or ljmp call (bad) jo in push or inc xchg and push sub jle and lahf cli mov popf and leave imul pop jo pop out lret mov inc sub adc mov jle push mov mov xchg cmc les dec xchg and inc or fisttpl xor (bad) or pop dec hlt movsl pushf mov cltd stc (bad) ljmp fdivrl inc les outsl int scas sarb dec xchg mov jmp push pop xchg mov jo test jae insb es pop and sbb sbb iret dec fist out lret jne pop mov or (bad) lahf in sub mov test adc retw scas in imul add mov lcallw movsb pusha pop cmpsl dec mov or mov fsubs push stos divb xchg mov (bad) hlt outsb decl pop xchg notl outsb stc fcompl add out inc mov push jb outsl mov js sbbl jo pop jl dec push test inc push je mov mov hlt dec cmc add pop mov add leave scas cmp mov inc pop scas or int3 pop dec xchg (bad) jo and xchg mov lods mov pop adc mov xor rol mov xchg or ljmp xchg scas shr sbb adc cwtl jbe inc es jbe sub push xchg push lahf nop dec ss ja add sub mov jb mov in orb inc idivb dec cltd into pop inc pop mov xchg dec (bad) out adc push test pop fmull mov test sbb xchg imull push lods pop xor imul mov mov mov stos or mov inc aam xor sub mov sub push xor cmp (bad) nop and nop cld jl inc jae cmp add add fcom sahf adc decb pop pshufw imul lock in jo,pn jnp mov stos pop into fwait jo addr16 (bad) lret adc mov jb lods test jecxz clc jmp and test lret imul out pop add scas mov lret sbb mov or lahf add cmc inc mov pop add pop cld nop sahf jmp pop (bad) pop aad push es insl mov xchg and inc arpl out bound jne aaa rorl mov adc xchg fist stos scas add pop xchg mov dec fstpl jmp in jmp cmp movsb ret inc leave jb lcall lock repz ss and divb movsb xchg nop and mov test loop jl mov (bad) jne imul cmp or jns sub jno sbb in cmp or xorb jb jb mov push std xor sbb inc sbb push sbb cmp pop lock (bad) jno scas ljmp popf bound ret sahf int xor push mov rolb mov mov cs enter dec hlt in cmc xor ja sbb imul test pop mov sbb jnp mov inc divb adc les push cwtl xor mov and aad js and les insb sahf sbb cmp inc lock jl call sbb stc mov hlt sbb (bad) in (bad) mov lret push mov and sub (bad) jbe dec cmp adc or inc divb enter (bad) mov xchg (bad) in dec sahf repz insb (bad) aas pop pop push sahf mov or daa jle popf out add push mov out push jbe xor and das mov inc mov inc mov xchg int pop or testb jle repz sub jne jp repz or sbb andl dec xchg fs cmp push sub jle out mov or (bad) add lahf pop ret mov das movsb cmp loopne insb jae sub dec mov les lds aam out lock sub stos rcrl sbb xor push cli std movsb popf jb jl gs fs jp push stos mov adc push or out js adc mov cmp mov jp aaa cli xchg add in scas test frstor (bad) sub das xchg or pop lahf jecxz mov int3 out ljmp cld hlt mov dec inc mov (bad) call push (bad) mov pop into mov mov fs ja je outsl xor lock pop (bad) mov jo das lods xchg add fnstcw mov movsl jo xchg jp pusha into dec push test mov adc movsl mov dec aaa push add and mov rolb add enter repnz jb ljmp ret cli imul insb insb out outsb push mov clc mov test jle push or push stos lds or movsl test (bad) sub nop mov in mov adc (bad) and cmpsb xchg pop shrb cmc arpl (bad) retw xor lods shrl sbb insl rcl (bad) fiadd mov xor into icebp mov lret repnz cwtl fcmovu pop mov jp sbb decb dec adc iret repnz int3 sub scas cmpsl out mov xchg lret daa leave cmp insb rolb lret adc fdivrl stos fcoml out and imul push sub lods in lea iret jo pop or sub lods fdivl pop add movsl mov rorb sbb xchg stc jb sbb cltd mov je push movsb mov jecxz je adc (bad) ret (bad) stos mov inc out and adc jbe notl pushl xlat dec ss cmp sbb jno enter mov fcoml sub pop add jge mov (bad) aaa mov mov sbb push sahf pop jmp fs lahf movsb xchg js sbb cltd sbb pop inc loop xor test outsb jecxz (bad) or xchg sahf and ds (bad) ja out or push popa pop icebp mov insl pop ds push cmp in dec out inc mov cltd adc cld fstpl pop cs movsl hlt cmpsl js test mov (bad) jnp or nop or fdiv sub xchg jno aaa lods popa icebp popa pop xchg lret lods pop push jb loopne cmpsb push xor mov in mov dec (bad) aad ljmp mov add jp jne add in shll gs or add nop dec fcoml addr16 out in or and mov loop (bad) push mov cld ret nop sub ss dec pushf insb test out add dec and cmp xor lahf pop inc das or cmp push push cmpps mov mov jns adc xor cwtl xchg jae cli test loope pop mov and test push dec pop test mov xchg mov xchg aam pop pushf add or jmp xchg mov xchg sub std xchg adc inc lds inc sub (bad) aam sub jns outsl shrb scas leave sbb movsl push mov std and xchg mov sub cmp cmp xchg pop adc fwait cld insl lods arpl or sti orl sbb add in into and inc mov push fsub push sub pop push imul mov std jmp pushf xlat popf cli fsts push push push xchg lea arpl xor mov lcall push stos bound int3 xchg jmp js nop sbb add insl outsb and addr16 adc in adc adc (bad) xor fdivrs or sub call iret sub lret mov faddl xchg das sub cmpsl stc fwait jb adcb xor inc push jg sbb cmp rol nop outsb jg shlb lods mov lret out jg pop fistl mov cli nop aad cmp cltd xchg loopne lock add cmpsb jo cmp dec push xor imul cmp (bad) lret sbb push loope cmp pop mov lea inc mov data16 ljmp mov fimul sub out das xchg sbb stc inc lock pop dec xor insb out sub xchg sbb cs loopne mull lods lahf imul mov push mov sbb push das xor cmp scas or dec ret (bad) pusha out mov jge jmp dec loopne add xchg jb sbb aaa sbb loop jnp xor into outsl dec imul pop adc leave xchg mov xchg pop xchg (bad) rolb insl fnstsw pop insl stos pop and scas fistp push lahf pop lea cmp (bad) xor arpl fidiv test movsl daa mov jae lods push sbb bound out inc dec and ja (bad) sbb outsl sbb leave jns,pt fmull (bad) mov xchg hlt jo and arpl fidivl cmp out pop sub lock inc loope (bad) cmp (bad) push ficom xor mov enter sub push cs mov ret (bad) pop fild xchg lret or movsl mov (bad) lcall dec adc or (bad) lock lods test sarl test push mov adc div dec jecxz jne (bad) or xor (bad) leave dec inc addl adc mov arpl data16 out sbb loope loope cld jmp lods nop mov ret mov mov dec mov xchg arpl pop je dec and pushf xchg or cmp push pop inc dec mov jp add out or les pop add lahf movsb andb sahf cli (bad) xchg mov loop jbe jg sbb cmp aaa fstps mov out test push or mov cld sbbl push push loop call scas pop push and push gs mov sub fisubr enter xchg scas push sti add cwtl dec (bad) das mov sub test mov mov mov call out and dec leave movl lret test jnp loop push dec stos cmc inc or sub leave nop fstl out push and daa loop fisttpl xchg icebp sub jle mov ret out test add lods sbb (bad) jbe lret test int3 xorb mov and or cmp and mov dec adc mov mov push fadds mov inc imul mov lods mov jp xchg rcrb pop xchg add xor jae das int3 mov inc iret adc ror add out out push cs and cmpsb mov (bad) pop jb into loopne lret shrb fwait adc mov cld or cs sub jmp and cmc and mov lcall popa pop das add mov mov xchg inc popa in push mov test out movsl push pop xor scas mov sbb push sti jo fistpl imul mov cmpsb movsl int3 dec push cmp dec fidiv cmp fildl cli in pop add repz fcmovne popa mov fistpll cmc in movnti iret mov pop aaa dec add repz inc dec add ret sahf icebp ss into in icebp fs sbb fcmovne xchg jle cmp inc fist subl lods jl add repz std pop cmp sub mov pushf jae lods pop cltd dec daa in test sbb jne mov shrl lahf into jp gs and pop idivl (bad) inc jge repnz cmp mov test jno lock cmc dec mov jb (bad) out (bad) or mov test mov rol rclb adc icebp dec xor push shll jp test aas cmpb pop or je push inc jo mov push cld mov push ja pop jbe rcrb xor ret into stos mov fmuls sub push mov test out cmp and mov lret dec adc push scas xlat popf aam shll lds lods adc cmp jp orl or je adc in stc mov sbbl icebp dec popa loopne adc jae jae dec das inc cwtl mov xchg in or pop mov lret inc rcrb cld hlt clc pop adc aad in xchg pop dec or cli mov add (bad) jecxz jo push jbe xor mov dec mov repnz frstor aas xchg mov je (bad) adc in (bad) outsl mov jmp arpl call jle lret mov popa orl ljmp jle jb and sti mov cs dec add lret int mov and ljmp and jmp ljmp cmp xchg (bad) or adc out mov xor sbb out icebp adcb pop imul jp (bad) fcoml jae sub dec arpl test adc and mov pop jmp jns and mov sbb bound sbb cmp cs pop fadd push cli xor int lret push xchg jecxz sub ja mov sarb imulb adc (bad) sti xor and push add mov xor in movb mov sti js sbb cmp notl daa mov dec dec imul out movsb repz mov out mov int3 mov out push loop jae pop cmc mov lods lock sub sti sti ds lock pop jge (bad) lock in adc shll insl jns std loop jns fcomps sub lcall mov out outsb js or mov and ret lcall stc leave lahf xchg addl outsb into clc cmpsl add adc icebp cmp pushf rep lods push in in test push and loope push dec rcrb ljmp dec fsubrl add repnz mov or xor sub (bad) mov lfs mov stos pop test pop pop pop mov aas fwait lcall inc sub or ret cmpsl mov fldpi int3 addr16 xor cmc adc fs cli insb xchg loop xchg loope mov sub movb subl mov lds push pop leave push sub je mov out cmp repnz fnstsw xor or lods sub lret ljmp test lock sbb xor push das dec jmp aam mov out rolb daa dec mov sbb mov out fdivrp push push inc fwait sbb movsb xchg mov lcall outsb adc loope add cli leave fbld loop sub insl mov jge xchg jle inc ss lret inc xor cmp lcall std push icebp jle icebp shlb dec jl (bad) aas jb jmp subl sub mov out movsl sub (bad) rclb push push repnz fistpll jecxz fidivl xor jnp (bad) add mov jge testb fdivrl jp mov sahf stos out or lock xchg nop popf out pop or xor aam fwait inc std mov mov fcomps jne ds (bad) lret mov fidivr sbb je jno out mov push insb subl push lret fidiv andb push jae adc dec ja jae sub jle mov push imul (bad) cmp and adc outsb in mov push mov call and ljmp in sar ret cmc sahf inc (bad) lods mov push outsl out lea or outsb ja cmp cmpl outsl push jmp jle fnsave xchg and dec cmpb add scas xchg xchg cs loope aas mov xchg movsb aas cwtl add dec daa ds or nop lds sbb or ljmp xchg jge jb xchg (bad) pop popa inc sbb dec jmp pop in add loop sub push inc sti movsb mov leave movsb scas in xchg pop pop or push testl leave fldln2 loopne test lea shrl (bad) rcrb das faddp scas (bad) stc push pop movsb loope push (bad) pop fbld add gs bound push data16 fdivs cltd ja call mov mov push xchg imul xchg inc inc adc adc mov out mov (bad) push dec sahf jle pop push (bad) into aaa mov jno test adc repz pusha fstpt add mov jae std popf cld lods fs jns cmpsl (bad) insl daa fstl clc (bad) enter jge push hlt jns xchg lods push pushw xor pop por dec xchg pop mov pop add or or aam repz push sub mov jns imul jne or (bad) jb mov stos fmull push mov test and inc sahf sub stos fistpll xlat (bad) pop mov xchg jb call adc sub cmp dec pop lock lahf in xchg cld jo aam ja adc loopne insb push xchg mov cwtl ja popa sub mov roll push dec push add push fistl sbb xor out ja pop fs jno jmp dec insl mov lret jmp xchg stos popf jns cmp shll pop xchg fs in mov test cmp loope stc jns cmc (bad) cld out push mov les jmp popa les rclb shll addl (bad) dec lss nop adc inc (bad) mov jmp cmp mov shl ficom sti dec push imul pop aad lcall andl mov loope pushf xchg insb dec xchg mov jl xor loop dec mov shlb repz cs jmp movsl call inc inc adc scas shll mov xor mov xor push sub mov shr jmp test mov mov out scas add nop call movsb sti cwtl xor mov pop sub dec std fistpl jne imul aam push dec mov push ret cmp pop ss (bad) jns or jp ret dec ds add out arpl xchg adc cmp lods push sub mov sbb in mov jne lea push adc in xchg popa xchg test fisttpll sub gs repz pop jns lods sti lods rcrl push cwtl repnz rcrl mov sti jg loopne add inc scas mov pusha jl andnps gs add jecxz in cmpsl int3 scas xor insb int adc clc inc push pop pop (bad) imul cmp push int dec fnstcw rcll and scas fsubs and cmc inc mov loop ja and dec out push je mov dec out adc mov adc fwait rcrb shl pop push xor mov push mov jbe mov repnz (bad) inc cs sub inc outsb mov adc stc insl add pop test jo loope push (bad) (bad) ss mov sarb cmp (bad) jb push lea mov sbb push mov push pop push xchg xor inc jg dec cmp ret add loopne hlt repz mov jae ret test or ret imull push int sbb lret lea or popa jo mov or mov sbbb add mov inc mov pop xchg jns adc xor pop pop adc imul mov jae sbb xchg or cli fwait scas repnz or in xor lock push nop add orl sti and lret dec test pop es cmp xchg xchg shlb popf rcpps mov stc (bad) pusha mov (bad) pop arpl lcall enter inc in test push and pop or fcoms loope and ljmp mov mov inc mov call xor test xor sub inc adc pop xor cli cmp sbb mov fcomi test inc gs xchg fs int3 pop test daa jbe sbb or scas xor (bad) sub out pop outsb mov xchg push scas xor pop mov rcll shrb dec pop fs pop movsl inc cmp outsb scas in mov mov fwait sub loop sub pop xchg mov xor cmp clc jp inc in (bad) jno jecxz in inc imul push mov out lcall dec fwait ja inc jcxz jno pop add (bad) fsubs imul pop or fsub jmp lcall dec jge mov loopne adc (bad) push jg (bad) or sub push imul bound jbe in and jo in pop scas jmp in xor incl dec popa (bad) outsb sbb outsl aam pop adc cmp aam sub inc daa mov lret or gs lock push cmp sbb mov inc icebp jge,pt jbe mov xchg (bad) mov leave (bad) xor xor jge xchg push rolb jne gs xchg and push mov mov mov sub jns mov aaa sarb aam pop loope or call cld xor jae scas repz test enter imul add dec scas cli dec sub es xchg shr cmp bound jg fiadd out fbstp sbb lea cmp (bad) je (bad) jns scas pop xchg pop cmpsb scas pop fstps outsl cmp (bad) and or mov push xchg push std mov inc sbb inc int xor xchg rcrl mov and loope push xchg outsl push xchg outsb mov out repnz bound mov outsl add (bad) stos cmpsl ret divb xchg push outsl lret xlat arpl mov aaa mov dec shll (bad) sub push and mov add idivl aaa cmp loope scas dec push in std cmp icebp inc mov ficomp inc sti (bad) ret ret fstl mov stos or (bad) xor dec les mov inc mov push idivb dec mov sbb xchg hlt sbbb lret outsb jle lods pop and addr16 (bad) xchg enter test aam mull cmp in aas mov hlt dec loopne mov jmp jo bound lods in out fcoms dec push pop addb push fs jbe nop rcrb ret jmp mov push loopne outsb nop lock sbb iret rol mov xchg jg inc mov sbb dec cmc jge mov imul cmp cmp gs lcall push enter stos in pop mov xor jmp pop xchg add test repnz imul iret xor mov mov xchg xor sub fistl aad jnp mov (bad) loope decb rclb outsl sbb pop iret pop and mov mov push rolb pop aas sbb sarl mov or push xchg push outsb mov jg lds jne cmp jmp jp cmp jne xor out dec add daa fstpl lods jo lahf lcall mov inc lret mov test js inc sub sahf std xchg mov mov fs rol repnz sbb push mov mov or mov mov aam sbb cmp mov pop add xor inc cltd xor inc hlt loope mov out mov push test jae inc xchg stos imul push mov imul pop fstps lcall add mov jmp xor jmp sbb sub (bad) and aam cmp dec mov sbb push adcl xchg incb jl lret scas shrb repz mov pop dec jae in lret ror jns mov dec and xchg lcall std sub jg xor xor push cmpsl cwtl stos fwait lcall cmpsb lods daa jle fwait pop jl jge and mov jge pop xchg jbe or repnz unpckhps pusha popf lret xor mov cmpsl xor cwtl cli mov (bad) adc push bound leave cwtl jecxz rorb outsb cmp bound pushf push rcll outsl fisttpll aam and add ficom cmp cmp insb es push dec cld pop stc cmpl adc ret negb inc jecxz in pop jns jns fwait insb inc inc cmc in loopne xlat or jns test sub ljmp mov aam dec fistl lahf xchg cmp inc inc clc rclb gs repnz (bad) jp jae ret mov sbb sbb fmulp pusha push outsb data16 push push lods xchg fs (bad) fisubl lahf pop pop pushl movsl cmp popa ljmp aad push inc sbb repz shll add xchg (bad) jae or pop sahf hlt int3 mov inc lcall in mov dec cmp pshufw mov mov pop cmp xlat aad push jmp cmp cmp lds imul add mov jl inc sub test xchg orl cli push pop insl arpl xor shlb mov dec lods rcl pop outsl and push test push lret jp pusha sbb daa mov test test ss subl dec adc dec sbb fs push xor out mov ljmp sub fisttpll addr16 jp adc fcmovb xor jne inc or insl imul mov sub jg pop dec or aad ja xlat pop cmp pop repz cmp imul jb pop xchg mov pusha (bad) dec mov xchg jl push loopne and xchg mov orb insl stos xchg jne leave in popf sahf fst rcll sahf ljmp imul mov rolb inc mov nop pop push mov loop push lods xchg addr16 nop mov lock ficomp lret push insl test out int mov add adc add mov shrb or sahf aas les push stc scas inc lea movsb cmp push aam mov jno ror mov mov xor int3 xlat clc push icebp test data16 insl or lods sbb fadd xchg jl sub icebp stos inc rclb mov (bad) cmp mov fcmovnb fwait shll int adc test (bad) dec cmpsl in pop cmp or and dec push pop iret test lods lret sub inc xchg pop sbb arpl add sub sbb dec fisttpl repz add sahf inc in xor lods push xlat dec clc jns mull lds and push cmp add in test mov xlat sti call out js test adc sub clc fiaddl nop (bad) roll fdiv gs (bad) sar xchg jg add aas jp fldt call arpl loopne iret lods xchg adc out imul push sti loop jno jge in cmp sub pop (bad) iret cmp arpl xor mov addr16 jae mov mov lret lods rcrb mov dec add ds mov outsb cmc out inc xor pop mov lret and int3 fwait jle (bad) in sub jns nop dec and push adc in js mov or bnd jo dec nop ds mov addr16 mov pusha outsl cmp cs xchg lods (bad) adc mov xor (bad) ljmp push or dec mov ret xchg (bad) popa jmp mov subl mov (bad) pop or sets test (bad) je sub push cltd jg jbe (bad) dec sahf lods stc jp test lcall sbb mov mov ret push adc inc mov daa or inc pop wbinvd ljmp and mov aam add or lea inc stos ss sbb sbb call (bad) adc jl loopne and sar or xor test dec xchg xlat ret lods pop in mov push loope fildll in adc out xchg mov mov mull loope js xchg xlat (bad) icebp outsb or mov xlat pop mov xor movsl mov mov sub push or inc mov adc mov xor dec imul aad movsl sub inc sub pusha adcl xchg add in mov inc dec fisttpll sub ror (bad) xchg cmp out jnp or xorl shlb cmpsb pop aaa aam sub mov jmp pop pushf inc push mov add stos dec push fdivrl push mov xchg push ret into xor add jg xchg jo add outsl add (bad) xor xor or pop loop sub and jbe mov movl bound push xchg pop aad rorb mov fldcw arpl fdivs mov dec js dec push mov jne fsqrt fs and mov jg inc popf cmc dec pop (bad) leave jnp mov mov jge inc sub cmpsl jmp (bad) sbb lret sub stc das jge xor or movsb cmp stos js adc mulb xchg loopne push cmp outsb fsubs jge inc fidiv pushf in scas fnstcw jb pop push outsb jmp jge sbb jae push je sub mov lret mov pop cli push mov and sbb cmp mov sar pop jecxz inc pushf out cmp jg sbb fidiv xor loop negl inc adc inc pop in pop gs xchg stc jae mov mov (bad) (bad) mov mov add mov in mov mov lret lods mov movsl cli es aad fadds js repnz push push test xor sbb insb aas jmp adc sub inc xor loopne jle mov dec fimul inc out or int3 dec roll insl jbe shrb push inc roll ja jb mov adc fs stc jae pop inc (bad) sub jmp (bad) mov mov ror cmp repnz popf iret add mov in in lock sbb pop roll cmpsl (bad) repnz push (bad) or lock mov nop xchg push xchg add or cmp popl test sub dec data16 cmp pop sbb jns xorl sbb xchg mov je xor divb jle scas cld daa pop xor leave cmp push fstps push dec js jg (bad) ret lcall clc fmuls pop rcr jmp aam jae xchg fmuls jmp loope push pusha out fisttpll mov push dec lcall cmc add stos pop jp and dec scas cmpsl stc mov sub call movsb jns mov xchg bound sbbl call cmc mov imul push icebp mov (bad) stos std je (bad) xor stos jo xor aam fistp subb sahf cmp dec cmpsb adc xchg inc jbe sbb xor gs cs pop xchg in push in mov (bad) push fildll mov cld lahf inc sub rclb iret sub xchg shl add (bad) pop ret xchg mov imul aad loope push mov jno pusha or aas adc sbbl mov int popa jl out ljmp dec fstpl (bad) push in bound add cmp xchg mov xchg jle cmp rorb add adc cmp fs xchg out pop pop pop mov (bad) push sbb rorb sti mov mov shrl mov push gs mov in jle pushf xchg adc xor xchg decb loop shll subl lret repnz add jge dec cmp add ss outsb mov std xor fisttpl stos sarl scas ret fwait and lret cmp add cltd sbb mov mov (bad) jge cmp add inc ret inc test cltd dec mov adc addl xlat jecxz ror mov mov repz push cmpsl je push or jecxz add imul inc shr daa shr and cmpsl xchg inc dec movsb jb or jbe mov test mov xor dec or fidiv inc lods inc jg das push jno push adc mov push outsl jbe jg mov jmp adc cmc (bad) or sarl es cmp vmwrite cmp cmp mov xchg lea pop pop push iret or addr16 add std xor popa mov mov (bad) mov (bad) cmp pop mov xchg jg nop inc push notl ljmp cmp ja (bad) (bad) pop and xor mov sti xchg and aad aaa sbb xor sbb aam ffree jle rcl or jp call mov pop cmpsb in bound sub sub inc and and mov enter mov sbb repnz fld1 (bad) sarl int pop rclb movsl sbb xchg scas js outsl fcmovnbe in popa inc mov ret mov lret psrlq hlt mov mov sbb mov movsb test in pushf addr16 gs ja mov jnp adc sbb dec inc dec push dec sbb fsubl lds dec push cmp gs pop mov (bad) std inc cmp sub mov cli (bad) xchg or (bad) cs cmp cld jge aas lcall and test into fisttp push mov push or inc cmpsl mov mov jo adc pusha sub popw (bad) icebp dec int3 scas xchg das aas mov les push and sub daa or mov lcall xchg cld or xchg sub ret adc test lcall sub cmp test xchg rcll (bad) test daa ja mov popa dec fwait inc aam push insl mov jg lret cmp mov mov xor sbbl int jmp xor sbb mov push lods (bad) cli push inc fwait xor in dec scas pop jbe pop dec inc push (bad) adc stos mov xchg inc (bad) aad add decl jecxz test in mov xorl fsincos call ret ja jecxz int jecxz mov jmp addr16 ds lock adc mov add subb (bad) pop test cmc aas dec or stc mov (bad) flds xor xchg push dec pop cmp and mov jb add loopne push shr push dec das and sub cmp push xor or lret ljmp jge adc and mov cmp mov lcall lret iret mov adc stos lret xchg pop cltd xchg inc (bad) fiaddl mov arpl lock loope mov jnp clc bswap fninit mov loop test insl sub push xlat (bad) cmp mov xlat icebp insl push aam pusha xor cmpsb cmc lods add push cmpsb mov adc inc inc jle andps xor lods jno jge repnz and push mov les sbb in or add mov lret fisttpl mov pop mov and out adc jge cmpsb dec inc lods and or cs fisubr and sbb test pop xchg rcll sbbl in fcoms mov mov mov int3 pop sub sbb adc mov fidivrl jle lahf push sbb cwtl dec jnp or mov (bad) lods jl jns jnp gs mov inc popa (bad) sub adc and pop add out int pusha push or rorb dec or cmp or adc stos sahf inc pop outsl jnp enter inc imul xchg stos xor roll imul out (bad) sub sub xchg enter into test mov xor jl add mov xor icebp pop in push and cmc mov jp fs push rorl cmpsb fnstsw movsb testb scas pop pop or mov in xchg dec cmp push dec pop sub add stos hlt mov sbb sub cmpsb xchg cmpsb call xor cmp dec and mov jmp dec inc sub sbb clc add imul add rcr jae and cmp push or roll mov les paddsb xchg jg and add dec (bad) jo xor in lds cmp outsl (bad) rcr xor ret les push mov xlat sti repz ficompl adc mov lods rcll repnz cld shrl xor ja lock fistpll das ret sti sbb or mov movsb dec movsl jl add push cmp lahf or (bad) jae fdivrs cmp sbb add xchg cs invd xchg pop mov dec aam mov rcl and rcrl jne xchg or movsl jmp into xor fwait cmpsl jbe rcrl push cltd out iret les sbb daa push xchg imul pop movsl cmp je mov out loop out mov aam cli adc and and jecxz ficoml sub sub jb xchg mov ss stos jnp or sahf fmull or xor mov inc loop mov mov repz jecxz cmc lds xchg adc mov mov (bad) sub fsubrl cld xchg leave lods mov jp aad mov or js sub in xchg call mov ret adc cwtl fwait call pop mov test divl data16 in das cmpsb rcrb pop repz pop xchg lret idivb nop pop stos loop mov xchg inc push xor mov cmp sub in cld movsl mov adc mov mov pop clc jne pop mov fiadd mov jne cmp jle lret adc mulb or jnp clc sbb aaa and sbb stos push mov pop lock es aad sbb cmove fcompl sti lcall mov loopne push add add rcll cmp sahf (bad) pushf enter outsb jge or mov in movsb notl aas xchg and mov je mov cmc jecxz pop ficompl popf mov pop pop cmpsb popf insb mov jmp ljmp sub sti and jae daa out cmp cld xchg sbb mov rcrl pop inc cmp lcall ds or pop insl fmuls push cmpsb adc mov mov fucomip pop out aam lock adc arpl cmpsb test dec fs pop iret ret aaa inc mov int3 adc (bad) (bad) push pusha in or sub pop imul hlt cwtl cld or (bad) (bad) jecxz sti xlat lds sbb lock fucomip adc sbb loop or inc mov insl sbb mov pop ljmp pusha aaa or jle or inc les rcrb dec sub xor xchg jmp sub popf jo push clc leave push in jp inc lds lods loopne int aas lahf addr16 popa dec push ret and dec xchg jo loop jo (bad) cmc mov sub nop (bad) popf or (bad) and test gs movsb sub and hlt retw lods rorb loopne nop out int3 add mov stc push (bad) adc or dec (bad) add data16 sbb mov push mov push sbb push push (bad) je push lock push shl dec add aas push cmp cmc popa lock and sbb dec or mov arpl clc js pushf mov and add (bad) loopne in dec into call inc shr pop and and sahf jmp stos lods push bound pop out inc push aam cli mov aam jl push pop (bad) repnz xor pop cmp mov jo lret mov leave movsb jecxz bndstx inc mov add jnp neg gs and lock pop and es sub jecxz loopne fiadd das inc and int3 add mov and push pop out cmp or icebp mov sub mov fstps inc (bad) inc or inc test pop js push jne xor imul lcall mov mov jmp mov loope mov hlt in mov mov fldt or xchg cmp scas ret adc xchg sub test pop mov stos lcall xchg xchg leave xor rcrb pop out inc das add pusha loopne ret mov dec rcr sbb dec jno (bad) mov sbb call daa imul lret iret mov (bad) (bad) xchg pop mov lods mov lea lea call or mov jb dec in pop mov push jb into shr jmp add jb icebp (bad) out aam stc jbe test js add jmp int3 pop jl or add pop fsub push jecxz sbb pop ficoml cmp xor mov sub rcl sbb aas daa and dec inc mov cmp mov roll mov cmpsb not push imul jns sti jg daa loopne icebp es dec mov mov add add pop sub xorl mov (bad) mov add mov ss test sub cmp sub inc scas lock (bad) shlb mov cmp adc lcall outsl imul test lahf int icebp loop xor sbb (bad) jb fucomip push xor (bad) cmp dec pop cmc jge xchg sahf maxps pusha ljmp xchg cmp (bad) cmp and das add leave jmp outsl sarl loopne push mov xchg cmp mov xchg loopne adc in pop stos in jl (bad) fcoms cwtl lods loopne pop add jge mov fwait stos mov xor popa cmc movsl add cli stc std adc divl ret dec push inc sbb sub jnp ja add and aas push fnstcw inc clc mov push xchg dec mov xchg adc pop imul ja add fstps cmp or and stc orl test ss cli add sarl mov cmpsb test mulb cmp adc adc (bad) leave addr16 xchg sbb sbbl mov and ljmp pop xor cld in mov rclb push jp pusha nop xchg jne fadds mov insb jg mov fcmovbe jecxz pop cld div shlb jb test mov xor xlat iret decl jp shrb xchg jle or inc push fimull movsb adc sub adc cmc fcom sub fist cmp jmp mov xchg adc enter daa xor test jl je or or adc xor loope je xor xor jns addr16 movsb std es mov push fidiv imul cmp imul scas movsl daa int3 xchg mov lods sub in fucomi inc xor xlat adc sbb (bad) das xor hlt popf and loope int3 fsubs hlt cmp movsl mov mov push pop xchg in je inc cmova xchg jae xor aam adc mov sbb addb sarl subl dec mov mov dec loope mov push (bad) xor dec add cmpsl cmp repz jbe (bad) xchg or cmp in or fsubp mov aad adc int cltd dec cmc jge adc pop lret or pop loop sbb and roll jle mov jmp dec mov push sub jmp in fwait sbb pop out popa js cmp je xor pop jbe nop jmp mov cs ss aam sub or push outsl out popa lahf stc in lods pop scas mov add dec divb push mov push dec cmp jl js ficomp movsl fildll xchg and mov mov shll scas xor js push movsl cmp cmp jb test dec mov adc stos loopne jp mov pop xor or enter shrl jno add xor fiaddl jb mov pop sbb inc clc cmpsb es divl inc popf fwait push adc ja cmp mov jle ret pop xor lcall or sbb stos dec outsl daa sarl jg push idivb xorb lock jecxz inc sub addr16 dec pop mov cmp inc jnp jnp (bad) ss addr16 sti shrl ja lcall dec arpl inc push call repnz (bad) mov fdivs repz je pop jle movl pop popf jmp call xchg sbb ljmp insb dec rcl (bad) lock push mov xchg push shr in push divb test movsl cmp (bad) fcoms cmpsb outsb sarl mov rcl or sti sti scas std adc inc jg push sbb cmp ljmp xchg stc mov mov xor insb gs out sub jo push ja,pn or cmpsl roll hlt inc jge int3 mov sub out cmc lret dec lcall mov imul push cld push dec (bad) mov adc mov leave mov pop movsb popf inc ret inc js in bnd pop or fldenv (bad) dec jo xchg push xchg loop aad push ret inc aaa sbb into ret aam pop adc subl push aad in daa cli test stc jae leave roll pop add mov add xor test (bad) add or cmc cli es sub out push mov push pushf xor jns repz cs mov call js pop scas pushf inc push scas push ret xchg xchg lahf xchg jle das pop leave dec or jnp push fistpll imul pop les aaa lret mov das add divl fiadd rorl xor jnp jg xlat decl add mov inc mov insb int push shrl mov cmc out lock mov xor xchg movsb (bad) cmp dec gs mov lcall adc psubw cmpsl lcall push mov mov icebp imul and jne or cmpsb bound out or push pop mov lcall aas xchg inc inc add popf pop xchg das jns aam mov stos (bad) daa adc xchg xor add pop push icebp psubusw ss add adc insl aad pop int3 fmull xchg fadd je pop and enter sbbl xor or out lret jno jp test outsb xchg push sub fcomip cltd call jp add jno lock mov pop stc in rol pop hlt xchg and addr16 lods popf pop pop rcrl xchg addr16 fsubs icebp add cmp fidivr test mov xor xchg inc push loopne add pop in push daa dec push jge lcall aad cmp jmp movsw scas xor je nop jl insl jmp fldenv lock scas fs add imul lock aam hlt mov inc sbb cwtl xchg nop cmp xor int3 push jmp push cltd cmp cli cmp mov mov dec jle loopne lahf arpl mov lcall hlt lahf or fwait pop in xchg sub movsl lea sub loope pushf aas and pop mull (bad) ss jbe push push je in sbbb movl cmpsl das jg sbb push mov pop sub pop mov jge ret ret sub mov mov je mov push inc mov jecxz out pop xchg push cli inc dec sub and adc ljmp push leave mov or sbb idivl pop push xor pop add ss push fisub sbb std sub pop lods xchg push adc sahf loop mov cmovno lods sub mov pushf sub xchg dec mov push xlat movsl jbe sub int nop xor insb or adc mov fistpl mov xlat mov das icebp (bad) sbb (bad) aam clc cmp imul jg cmp fisubl fs (bad) push aas inc and and (bad) push dec cmpsb inc mov sub (bad) fsub dec daa dec bound xchg push test mov and mov out cmpsb and push add xchg cli repnz or lahf std les xchg jl les (bad) fs out mov test iret (bad) inc dec in push push mov std xlat inc mov fwait imul or movsb (bad) jno inc in cmp decl aaa or es inc cwtl sahf push mov call inc lods dec pushf inc cmp cmc dec ret mov xor add inc fstps in lods jnp and outsl push inc popa inc ret decb ljmp stos push pop mulb pop push pop in (bad) and iret sub lods ret fsubrl and ret push adc inc hlt daa pop fwait leave lods aas into or push imul push pop mov adc mov xor (bad) test sbb mov mov pushf cmp sub xchg pop popf push adc sub das cltd mov sbb mov add fwait inc (bad) mov (bad) jecxz sbb dec pushf mov sbb xorl cmp xor xchg or mov pop add inc push sti pop int3 in adc add push outsl movsl adc push aam ljmp push and push out jp icebp repnz dec and jo dec ret test mov movsl add and inc pop or stc (bad) lds mov cmp es dec jge das xchg pop lods xchg int jle ss mov jg adc inc or out inc lds cmp ret pop sub aas dec rcrl inc mov cs push addr16 xor adc gs mov icebp ss hlt loope dec adc into dec (bad) out addl in push mov iret aad arpl bound ljmp mov jecxz mov les adc pop or xchg xor adcl sti mov mov and xlat lret xchg (bad) sub (bad) jge fcmovb jnp lea pop push mov sbb xchg popa xchg int fistl inc add lret cmp loopne cli dec cmpsl cs push scas (bad) adcl insl ja ret test es push repz pop cmp outsl pop icebp gs jmp leave mov ret aas cmpl std mov sti cmpsl nop push rorb cmp test xchg mov dec in mov scas and cltd (bad) dec ds outsb mov xchg fnstenv mov in and fs stos nop hlt inc call cmpsb jb icebp loop int inc (bad) fnsave int3 scas push aaa jns imul jbe lcall test jne (bad) or sti addl lahf add xchg divb aad outsb clc sub adc das mov (bad) ficomp test hlt sbb ret (bad) fldenv aaa xlat (bad) fcoms sbb mov xchg stc bsr cmp lods lret (bad) sub sub inc sbb xchg mov xchg and mov adc jg add aam inc pusha xchg cmp push scas xchg and sbb rcrl pop les add xor xchg dec sub popl sub test adc pop xchg jbe ror cmp or rolb inc fisttpl stc inc mov bound push dec fnsave pop call (bad) out shrb add xor adc xchg ficom out es lret outsl mov clc jecxz sbb out cwtl scas scas data16 das lock inc mov bound mov adc and sub incb daa mov adc mov inc (bad) into jge mov mov jecxz xchg sbb call out int3 shrl je push addr16 lahf daa add jb sub inc mov insb push lahf idivb mulb insl xchg stc and (bad) mov sbb sbb inc mov jge push xchg (bad) je leave loope add arpl stos xchg arpl shr in pushf xor int js cmp mov xchg mov outsl aad js outsb push mov inc pop stc xor mov int clc jp or pusha mov mov sub pop xor subb lds inc outsb push dec mov push sar repnz test dec and mov lea mov pop repz sbb (bad) mov xchg loop and divb jg fnsave mov sub (bad) mov loopne xchg push fsubs push xchg je imul shll inc ljmp (bad) stos push fisubl frstor cwtl adc dec mov (bad) outsl push sbb mov pop cmp orl clc mov scas es mov (bad) pop mov push lahf (bad) (bad) xor fsts sbb bound cs outsl mov mov ss mov mov loop xor or cmpsb xor pop pop in jae arpl lds repz adc pop sbb xchg repnz xor and std hlt mov jmp pop push aam xlat inc xchg sti pop dec adc jo fstl aam sbb movsl push xchg add cmp xor imul repnz mov dec lods and pop call out or es xchg and push xchg sbb js and cmpsb not cltd cli inc and fsubrs sub xchg movsb jg mov jne mov xchg js sbb mov sbb mov xchg fldl cmc fldl adc mov pop pushf (bad) mov adc repz jmp and cs out and repz mov push mov and imul (bad) or out sub jo pop movsb push inc scas jbe xor aad test mov imul (bad) jmp pop or scas fsubl sti les aam cld or (bad) fstl roll pop pop pop (bad) cmpsl add pop cmc lods fisubr mov mov sbb mov push call shr int cmp mov push add jl ss xchg movsl mov mov int3 xor out xchg sbb and mov adc jb in (bad) jmp mov dec dec faddl ret andl sbb push add sub leave pop jecxz (bad) (bad) sub jmp mov mov cmc lods (bad) test int cmp mov mov dec pop pop test cmp imul testl mov (bad) popf sub pop icebp pop push repz aas testl add jbe aad test shrb mov test aam call push inc ja lods ljmp (bad) clc test in jle mov lcall inc jg jnp and push jns dec js cli add sub sub mov mov stc cmp lock push adc xchg negb sbb xchg js jbe lret fcmovu cmp test in or ja mov ljmp aaa lods notl pusha data16 aam or and jp loope add loop iret roll push (bad) jnp mov mulb push mov cmp mov popa pop jnp mov add loopne fidiv jnp movsb push sbb xchg lea jl dec xchg notb adcl push pop out or out or push bound loope and dec adc je lods or sbb test rorb dec loopne mov (bad) outsb push outsb add inc (bad) mov (bad) push fcoml cmc into test or adcb pop scas push cmp addr16 pop or stos jnp pusha insb movsl and movsb repnz aaa push mov lods jge mov (bad) stos xlat imul stos push decl sbb add (bad) or roll gs pop mov cli mov subl fnop cltd push into rorb hlt in inc xchg lcall repnz std xchg xchg and xchg or cmpsb xchg lods rolb and add cltd dec push adc movsb cmc inc inc or mov and jecxz dec mov pusha mov insb sahf sbb dec nop mov cld idiv lahf pop in cmp sbb test gs dec clc xor adc adc stc repz adc daa cld adc addr16 sahf mov inc push icebp jnp dec xor adc stc add jl mov mov xor int dec mov xor lds loop sahf mov xor adc mov popa addr16 test lret das nop pop (bad) and std fstpt loope xor adc mov inc das dec dec jg popa mov loopne push xchg inc adc mov sti rolb xchg popa ja dec pop mov stc cmp push xchg lods das and cmc xchg iret push push aaa hlt pop xchg add sahf dec cmp movntq out sub pop insb mov jmp pop nop jg cwtl pop ljmp pop cs (bad) jmp xchg mov rcrb testl push sbb mov inc mov ss inc sahf xchg mov aas test insl stc cld pop test sub (bad) repnz jns lret push aad and add xor jmp pop popa ficoml mov inc rcrb xchg jbe scas mov cli adc ss add dec testb or mov f2xm1 aaa push (bad) rcll test xchg mov mov sarb sbb in sbb dec cwtl dec dec lret jae shl xor gs inc test fcompl leave pop jbe cmp mov jecxz push repz xchg std jns popa push push xchg pop das inc mov leave sbb pop add (bad) jns pusha push (bad) hlt into sbb cmp (bad) jbe lock xchg and and cmc push or or sahf orl pop jbe movsl (bad) movsb (bad) loopne pushf les and cmp loop dec pop pop (bad) push ds aas dec or into fstpt fildll sbb cmpsl dec jb (bad) and cmpsb ja jno sbb arpl sub arpl mov pop push cs popw inc add popa push and jae mov or dec lcall add jp xor outsl movsl frstor into cmp arpl aas andb mov repz in outsb movl and mov (bad) jmp push xchg dec and cmp jbe inc push ljmp repz dec adc outsl imul aas add ss xchg in push mov in (bad) fiadd jnp dec mov mov sub add repnz int sbb or mov cli xlat adc jo adc sahf std add adc jae add and fwait or sbb stc mov dec and sub jnp lods jne jne fidivr out push rol pop fist inc jp mov push adc loopne dec bswap int3 idivb andl push dec add xchg mov out pop mov std test dec fsubp das gs pusha sub and add int pusha xorl imul cld xor ret lret cmp pop jnp (bad) fnclex dec cmp and xor mov inc fbstp nop add dec adc (bad) xor fistpl lods push pop xlat negl cli pop cmp mov dec mov fs test mov dec dec repz dec dec dec and scas test add in and dec mov cmpsl das icebp dec xor aam (bad) adc mov add lods jge jp out out add mov (bad) fst push or inc add mov sub xor mov mov call dec movl jecxz arpl mov xor add ljmp sub stos mov test mov mov xchg add dec sti lock ret insl inc cmpsl or (bad) lret sbb jb mov hlt in add add xor add mov mov or adc push jp xchg je ret into jo jb insl mov hlt outsb inc and cmc imul fistl xchg fucomi push imul xchg inc les jp add xor mov mov jae jno pop pop in cmp xchg dec es xlat or xor jge cmp dec mov fistp adc orb pop jb mov pusha pusha test pop push pop std sbb inc insb call andl xor bound test in pop pushf dec enter loop cmc push adc and es pop adc fiaddl std prefetch (bad) lods sub mov mov xor add and inc mov sbbl inc fcomi or mov ret das inc int and repnz in push and lret jmp or mov in in sbb mov pop sbb fsubl (bad) mov jbe sbb push cmc push cld fcoml out jns cmp fcoml lock fcomps mov add aam sub or adc push mov ret (bad) ljmp or or push shrl std adc data16 xchg movsb cmp sub push jbe pop imul in inc add pusha xlat dec hlt push out or cli push fnstsw ret rclb add dec jg mov jge xchg inc jle int3 out bnd cmp call movsb pop ror add roll inc xchg dec cmp add js mov xor dec mov loopne or jb push lea insb cmp jae mov (bad) and js rclb mov xchg js push (bad) add pop mov jecxz div andps aaa cmpsl dec cmp pop xor pop ss add or lds pushl mov xchg mov sbb dec data16 dec pop fstpt std popa ficomp (bad) pop sar inc mov mov test into test in cwtl insl js adc sub sbb es ljmp push or subl cmovge mov xchg pop push adc jl inc mov jnp negl jno lret dec mov leave mov pop in sub jo sub cmp stos sub bound adc mov movsb cmpsl fistpll lret mov (bad) push xlat pop or pop sbb mov fidivrl fistp sub inc out push mov cmc cmc jnp outsb lods stc rcr imul push scas cmpb lcall mov cmpsb lret jp aam dec and and cld lods cmpsb stc jo push popa cli xor cmpsb (bad) xor adc mov (bad) mov lahf test inc dec loope add dec adc dec clc xchg mov dec outsl xor out or insl lret add dec push lods or (bad) (bad) push out scas cmpsb jle dec pop insl aas and pop sub mov test out aas cmp loopne jb mov lods cmp inc call push insb scas jb imul enter ljmp sbb mov lret sahf ss sbb notl lock inc cmp mov lea imul loope and daa jae jle mov push cmpsb mov into ret popa test (bad) add push jge aam fnstenv sub (bad) sbb imul mov cmc rcrb dec xchg sub mov test jb sub shll fwait dec popa je aam jge insl jp jbe and mov call mov rorb pop jecxz loop icebp pop xor jo jl dec leave pop jo cmp fisubr iret cmp out scas movb jecxz negl stos sub mov or mov xchg sbb sbb mov or add dec and leave jl add test push push repnz movsb lahf pop lock outsb cmpsb fdivr (bad) push lahf inc pop scas jbe movsb jb mov fisub lret push fsubr adc stos (bad) mov fisub jmp inc fsub test jmp or roll inc xor mov push dec add push arpl push gs and out gs fs insb outsl xor dec cld mov xchg fs mov xchg push pusha cmp xchg leave pop pop fadd rolb mov mov adc xchg dec mov and or pop adc mov push mov loop out push out adc ret nop adc fstpt pop push pop in jp sbb ret lods mov lods out js loop outsl les adc ret popf or push sub sub loop pop mov incb insl jo mov pop aaa inc adc (bad) in mov adc fsubs jns fimul add adc mov imul pop subl cmp add jae push faddl dec lds sub std cmp in sbb lods (bad) mov cmpsb into and stos rcr push inc mov push cltd cmp leave rcrb mov or sub insl cltd (bad) jno xchg cltd mov out ja xor adc inc lds call and jo ficompl xor pushf repz sbbl mov push and shrb cli shlb xor in jmp pop fcmovnb cmpsb adc lock push jecxz cmp test test jnp gs sub dec mov push clc xor dec pop adc stos add int3 lods out test mov jnp jg insl aam imulb aam rcll cld data16 mov fiadd inc jnp jb mov jo test mov movsb add and pop jae aas sti aad xor dec sub stc mov stos into jnp jnp jg ss fisub mov ss (bad) ja mov xchg cltd fldenv outsb xor loopne xor mov push imul (bad) xor test inc mov mov lock cmp stc daa repz call rol sbb ja mov cmp push xor cli jb out or insb mov xor xlat mov ljmp stos es add cld shrb es idivl (bad) into adc movsl (bad) cmpsl repnz mov loopne test rorl stos jae cs movsb and pop push xor push das mov sahf sub mov pop test sub jbe cld daa add mov push and lret mov mov jns or and and hlt gs sub xchg jo or mov outsb sti inc test sub pop jge and sahf xchg test iret in lret cmpsb or sbb or mov das and scas jnp fnstcw pop pop cmp sbb ja mov in or test sahf (bad) adc hlt or lret xor nop clc jo leave das jae add sub imul lods add xchg dec sbb stc inc std inc mov dec es xchg jmp loopne lods inc push inc cmpsl das ret jne out adc jge adc (bad) sub pop icebp pop mov repz push lahf push jno adc divl cmp push sub jmp mov and dec dec jge xchg mov test cmpsb pop add push inc sub std stos fisub pop (bad) cltd (bad) lea lock pop push subb addr16 jg sub fmull push push mov sbb cs std lcall xor or add cltd fisttp jle fcmovnbe (bad) sbb aad fs mov sub pop imul outsl js pop add mov fiaddl fmull mov inc pusha mov por sbb (bad) enter jnp movsb jae loope mov xor dec and out popf bound repnz iret mov test xchg lcall add popa test or scas ficompl xchg pushf sbb stos push mov add data16 mov adc fwait repnz cli shll mov push ret into insl push pop js aas (bad) inc repz push fnstcw out cmp js and xchg (bad) push insl dec xchg lahf test cmpsl mov insl cmpsb fmull sub mov je mov cmp sbb adc movsb in xchg movsl xor mov and int3 xchg iret xchg adc cltd inc insb adc lahf stos rorb mov lock pop (bad) adc cmp cltd pop jae insl negb xor imul adc sbb aas pusha xchg add xor pop ds out xchg jns aad add mov push je orl cmpsl cmp jp xorl jge mov mov bound push jo cmc cltd shrl xchg or (bad) mov add xor sub imul add xchg (bad) sub sahf lock aam dec lods pop mov and cmp (bad) sbb jb fucom dec and cmp mov mov mov clc xor stos xor sti (bad) mov mov and loopne xor ss repz pop mov in or jbe xchg stc (bad) movsb or mov ss in cs imul adc aaa int3 aaa popa out shll int pop (bad) leave push out mov pop (bad) dec leave mov movsb jo (bad) mov frstor std jle rorb inc adc sub addr16 jne mov sbb (bad) xchg cmc push enter xor lds sbb pop or mov add mov inc (bad) and mov cmpsb pushf pop test jp sub mov push pshufw sub addr16 das push lcall sti push jge and mov adc xor push jecxz sarb cmpsl fs inc jne test xor mov int3 mov xchg mov push mov lcall fwait adc (bad) scas jg iret and test ljmp outsl aad nop call lret ret add mov imul push sarl xchg and jg inc mov fidiv push jb mov in dec loopne inc inc xchg push sahf enter sub in fildll out cmpsb jle mov out mov xchg adc les rorb aad mov in xor jns ja shll push aas adc out mov insb into inc outsl mov cmp in shrl pop push or mov in out cmp cmc xor and cmpsb jle sbb inc jmp cld ja lret inc ss add bound (bad) cmp dec pop lret pushf pop out icebp mov stc dec loopne pop adc lods mov bound sbb adc mov aam loopne mov inc add imul movsl es pop cmc xchg cli lret dec push int3 adc call push mov inc out and cmp xchg add in jns and inc mov cmp push xchg ja lcall imul jmp sbb adc mov sbb ds xchg outsl cmp dec (bad) jo mov lret xchg jae sbb cli pushf aas fldcw push and (bad) std lret push adc mov add nop loop xchg xor dec pop divb ljmp xor jbe (bad) fildl push xor cltd movsl out stos loopne aas loop call inc fist lahf aam add xchg dec cmp cli dec test xor sbb or lods clc jg clc aam inc movsl adc jne pop mov popa fisubr repnz fmul xor jbe jae test ja cwtl pop cmpsb cltd jbe add cmpsl xchg mov and in fldenv mov xlat lcall mull mov sar push iret cmp xor xchg imul lcall xor (bad) shll (bad) or leave xor call clc jno mov iret mov popf or add pop sbb or jge mov push mov frstor jp shr inc movsb xchg in xchg push push jle bound push mov adc cs pop orb std es fcomp jne sub add subl push sarl and test lcall pop sbb cmp push xor push xchg push nop push sbb push add nop loop insb dec xor enter adc rcll ficomp mov pop mov pop (bad) xor adc dec imul inc add or xor fsts inc int3 and ret xchg into call loop scas adc mov or cmp cs push leave fist sarl enter add das mov aad or fdivr inc sub mov sbb jo sahf cltd sub jns popl fidiv ret movsb add cld shl mov rorl or push je cltd xchg clc rol inc fistpll xchg mov pop lods insl or xor enter data16 (bad) jae outsb jp mov (bad) push xchg xchg outsl scas (bad) pop or (bad) lds test jge popa cmp mov test and sbb bound jmp ds pop mov xchg cmc aas faddp incl add int push in aam arpl mov pop cmp jg and subl aam jl outsl xchg inc pop mov mov pop add fisubl out xchg pop inc (bad) std sub push xor mov inc or loopne pop ja les aad cmc nop cmc test inc dec cmp cmp push ret jo mov scas popa push rclb sbb (bad) jmp rorb cmpsl cmp popl (bad) (bad) and lds mov loop notl xor mov loop sbb mov xchg aad mov repz sahf (bad) nop jns jge dec ret push jmp adc mov pop push xchg fwait cmpl push shll mov pop test mov sub shll mov jp or lock subb cmp cmp sbb mov xchg pop das add inc or test or lock inc mov arpl popa push lods pop pop int out aas inc and cmpl rolb xlat or stc jmp mov mov mov pop loope add cmp lret (bad) arpl nop lea xlat mulb push in or push lods (bad) jne call mov jbe adc mov sarl rcrl sub xor xchg stc daa or imul dec cltd jae inc pop fdivrl sub inc and mov mov add test pusha jne aas jmp inc and cmc mov data16 ja jmp lods lods call sti loope iret dec fstpt mov scas ret inc std shrl divb sbb test cs mov andb or fcmovnb dec push (bad) dec fstps decl (bad) mov and pop inc (bad) xor xor jns inc jp sub aaa pusha in xor xchg jo pop push ljmp (bad) mov xor rorl aas loop xchg jb int iret inc (bad) dec lcall push cwtl cmpsl adc inc imul (bad) push adc sub mov cmc mov aas mov fsubrs jmp clc push cld mov xor mov dec adc xchg or lods (bad) sbb dec sahf push fsts jb or popa data16 int3 xlat notb mov fstpl adc fucompp jnp mov stos mov dec lock xchg std cld cmp lds push add xchg mov lret ss dec mov aad jl jno xchg les pop push ss mov cmpl addr16 add jg out (bad) adc xor pop lods popa sbb cmp dec xchg inc mov rclb (bad) in inc push aas cmp popf sub outsl dec lcall dec das inc (bad) in sub lods je xchg hlt cmp das xchg outsb std cs add popf cwtl jge cmp dec pop push pop loopne mov popa data16 stos sub fldenv cmp or (bad) mov repnz out inc push or jno inc and (bad) inc and lods stc dec mov inc and cli sbb aaa enter cli scas inc ret inc sub jbe inc loope (bad) jmp dec stos out mov mov rcrl enter xchg pop push sbb cmp or mov dec sahf jmp inc data16 xor mov (bad) in add into lds imul mov or lods jecxz and or sub adc lea rcrl push add out out mov mov aad (bad) jbe inc cmpl int rcrl dec loope cmpsl inc sbb nop lods mov jne push in cmp pop dec or and cmp adc nop insb imul or xlat test pop sub and dec mov outsb imul lock cs ss sub lret pop ficoml inc xchg mov jle xor xchg fdivrl cmp mov sti pop out movsb leave nop dec call test pop sub insb lods (bad) adc add test xchg out mov push aas lret push add mov pop lods cmovs xor popf ja (bad) mov pop cli or xchg mov lods or and lahf sti jbe std sbb inc add mov notb mov or (bad) dec jo aaa mov and cmpl faddp push or jbe incb add sti ret mov jmp xor cmp xlat inc sbb push add jns cli in mov dec (bad) imul adc cltd push mov pop arpl stos ds mov bnd sub sbb cmp ds fisttpll rorl jmp pop scas outsb out (bad) lea pop scas xchg cmp or in push sub mov icebp jns rorb jo lahf enter push jne and mov mov push cltd (bad) jne sub test pop idivb sub xchg aas push push inc je xchg ret pop hlt pop dec jmp fimull cli shll in lods xchg shrb fsub and jecxz fwait or xor xchg (bad) movsl xor mov mov out popa pop jmp cmpsb popa imul (bad) cmp test jnp sarb mov jnp sub cwtl sbb mov pusha jmp jle popf hlt ja sub pop mov cmp test mov shrl or and imul aas adc fwait orb (bad) popf lods xor stos adc out cwtl pusha cli xchg bound mov (bad) cmpsl add imul push scas lcall mov (bad) mov pop pop jle enter add outsb add ret loop pop repnz jb push jns and out in imul shl pushl test push and (bad) mov mov in stos add push push pushf (bad) or mov sarl push js pop clc rcll dec popf mov neg jmp and adc inc (bad) mov cs fsts xor xchg inc dec loop push lods nop pop (bad) pop add mov ret mov xchg mov sub inc mov mov test nop adc pop adc xor aam sbb fildl ds in mov pop dec dec mov xchg fwait dec mov sub (bad) xchg iret xor iret cmp outsl xchg push popf fld push sub in push cmc imul test cwtl sbb mov addr16 cld sub adc sub or xlat pop addr16 push push xor jae mov ret js push dec mov fadd je jnp pop sti nop int3 mov pop mov mov mov mov mov xor xchg lea mov loope adc dec mulps fisubl add leave bound test out and inc and xor cmp addb int jns out mov inc fs adc call xorb lods mov xor imul in pop mov aaa daa mov mov scas push mov jge je inc sarb cli jae out mov mov jecxz push mov out cmp dec rclb jmp fcoml or pop lea pop (bad) int3 jo mov sti mul pop inc sahf or aam pop inc in sbb pop jae popa mov fisubr out add movsb inc xchg push clc mov lea or cld sti cwtl lea push into xchg cmp es dec mov pushf in or jo hlt fnstcw lcall mov xlat rcll out mov pop test mov outsb jb push jl (bad) (bad) inc (bad) in orb mov ds mov mov mov dec loope mov faddl xchg shll push xchg xchg call pop mov push cld aad push push repz sbb enter cmp fidivl lret add xor ficomp imul jmp add mov dec popl fwait jecxz xchg sub rcr ret in push bound jbe repnz rcrb (bad) jnp jbe sbb inc arpl sbb inc shrl sub mov mov pop adc mov lea push mov (bad) in insb ficompl mov xchg mov lahf cmp in jp pushf outsb dec mov xchg lock xchg in sti xor adc add mov fimul jo test pusha js jae or add pop fdivrp xor pop push and pusha sahf ja mov (bad) fstpt fisttp mov repnz add sbb (bad) lock add fwait test sub shll fcomp jmp add push add cmp rclb jg jp pop (bad) fidiv mov pop mov sbb dec lods add add int3 mov and or xchg xor int3 inc pop out stos dec pop jb adc nop loopne add aaa insl dec in xor ret data16 inc xchg xchg add (bad) shrb mov xor mov jno xchg jp xor into cmp jae adc lods icebp fwait add or stos shl pop andb repz push out daa (bad) mull dec loop,pt adc sub push xchg sbb inc mov repz jge pushf sub outsb mov lds movsl and movsb ret pop rol pop ret and lret pop aam dec or out popf orb push push xchg mov sar sti les add daa jg aas sub dec incb push lret sbb cwtl lcall dec insb outsl (bad) xchg and pop in sub mov (bad) (bad) cld sub and mov inc aaa call jb ljmp hlt dec pop cld jae push shll data16 repz in cmp ret in inc jnp je sub sub loope jle clc push insb adc stos into imul sbb inc stos ret sub ss outsl fwait es ljmp fistpl push js imul scas push mov dec dec scas push cmp aam mov add cld (bad) les push xchg cwtl mov rcrb inc lret imul int3 jnp nop aad fs outsl pop in mov mov roll mov daa mov xchg dec clc mov sub xchg mov mov cmp stc mov pop dec (bad) or popf jge adc add xchg int3 sub push fnstenv pop fs pop jns adc mov movsl jae inc jbe ret jmp testl jle es inc add rcrb test out pop aas call sub shll inc adc xlat data16 and mov das xor aas outsl aas incb das stos popa sahf xchg xor scas mov jl mov test cmp rclb mov leave inc es ljmp (bad) pop inc cmp aad movsb lcall movsl xchg mov scas test and in insl xor xor push ret xlat sbb scas xorb sbb test pusha fdivrs dec jge jg out pop sti or call add test mov ret push fnsave repz jb aad mov mov out push out adc or popa push fucomi xor int cs ret xchg rcll notb xor dec (bad) mov inc jnp adc add sbb data16 jmp mov pop jmp mov and out cmp flds enter push out ret pandn mov cld call cmp sbb dec flds div jl add ret repnz fwait xchg jo lret mov das xchg cmp xchg test repz pop arpl inc scas je jge xchg xchg jnp or xor jbe inc mov sbb jge push and (bad) xchg fimul repz test and mov pop jb leave stos loope rcr int int adc and negb imul incl insl jb lahf inc pop mov (bad) repnz ja dec dec push aad push add aad inc loop fstpl inc (bad) stos cmp mov mov xchg jns popf cmp (bad) pop dec icebp push sarb cltd jecxz xchg movsl jmp bound fwait xor pop js jnp and mov outsb cld xor push jbe (bad) xor adc leave pop and mov sahf xchg (bad) nop ds sub es test je mov push inc ss fs arpl es xchg lea addr16 jmp repz pop push cmp ret ret hlt pop rcr jp mov adc fdivrl (bad) sahf bound scas push jg mov inc imul (bad) icebp (bad) imul push inc cmp lahf fsubr lret into in out sbb (bad) push (bad) push sub or loope mov jmp popa pop push push pop cmp lahf push pop (bad) dec pop dec int3 mov fsubrl or xchg dec lock xchg jge enter push lds inc in pop mov or fdivrl (bad) and cmp push adc icebp add fldcw (bad) push fwait push shl dec pop mov jecxz push pop insb pop leave lret adc xor jg nop or xor popa test sub push dec aas add (bad) incb and pop jb jnp fmuls jge scas lock sub jno dec insb inc rcll and mov out pop mov sti push xchg sub js lods out mov dec mov dec fmuls push jno and and mov gs ds push iret cmp push into stos int popa aad int3 stos xchg mov or les cmpsl dec je mov lahf into lahf mov les add jecxz inc cmpsl and mov mov push adc dec aam (bad) cmpsb (bad) mov jle les repz inc mov pop mov stc adc js mov aaa nop push push ds pop in sbb inc mov mov clc (bad) or (bad) cmp loope addl jnp fsubrs out and jle adc mov push test stos leave mov cmc enter mull lds (bad) and out xchg ljmp fwait pop ja shll in cmp adc negl data16 mov test push int dec aaa pop ljmp inc loop arpl test xchg dec (bad) testb push xchg inc xchg cmp call cs cltd sub je mov data16 ja inc push fmul pop enter out inc jp xor push ds push or sbbb loop daa push aaa xchg pop je adc mov pop sbb pop shrl xchg test loope andb outsl das dec inc repnz lret fdivs mov xor (bad) aaa push mov lea and js pop stc dec mov stc adc movsb sub sbb jp add scas cltd inc loop call ljmp ja es int dec inc push mov arpl mov dec xor mov (bad) xor xor int xchg mov fisubl fnop inc lret cltd test int3 push (bad) into jle mov cwtl in inc or push cltd push bound je clc dec fs ja (bad) arpl dec cmpsl mov inc mov adc mov repnz xchg jle (bad) mov mov movsl xchg incl sbb push mov lds js sub dec and addl sbb cmp dec xchg fidivr movsb call (bad) sbb jb lock and test pusha pushf mov dec lret call cmp mov pop (bad) je sub (bad) jmp dec std add xor lret sarb dec sar (bad) jnp jae xor (bad) mov jmp rcrb cmp test add fwait pop xchg out testl in (bad) pop inc adc mov sahf cmp cmc sub (bad) rolb insb add mov xchg (bad) lds add je push sbb mov xor out ljmp sarb faddl pop cmp pop adc daa fisttpll into lods fst mov xchg repz insb fistl hlt lret sub lahf sbb orl inc mov jmp add aad lds cmpsl add cmp mov pop mov cmp scas adc xchg (bad) push xlat (bad) push jns jns iret adc adc je loop pop mov sub push or and cltd aad sbb jecxz test jge xchg xorb mov and jo fisub (bad) xchg cmp sub mov adc nop scas lahf dec rorb fcmovne shll mov sbb adc push (bad) lods jbe iret stos popa dec ret addb push test mov pushf jae cwtl out mov inc jmp test fistpll pop mov sub popa sahf (bad) shll sti or jns stos inc negl mov sub stos jg clc mov scas lds cmp fistpll dec fidiv and test out push inc je pop nop icebp fnsave xlat mulb inc (bad) and pop mov out sbb pop pop ja mov cmp push and cltd mov xor adc in pop sub or and pop mov cmp lods insl imull sub imul sub xchg dec xor xchg dec iret repnz pop js sub mov lea push and add fcoml (bad) test out shl (bad) mov mov shll xor in mov sbb cmpsb mov lock mov xor cmpsl pushl pop mov imul es mov mulb (bad) sbb pop mov imul xorl (bad) mov xor call addb iret xchg fldcw cmp scas fsts jae xchg xchg cmp and das insb push dec fscale jb int mov hlt cmpsl icebp (bad) stc sbb mov sbb pop cli jge add ficompl sahf stc pop data16 sbb stc cmpsl sahf cmc rcrb and movsl cmpl pop push out xlat call cli add xchg or arpl xor jne add repz into xchg outsl jb in push loope (bad) loope jo into fmul adc lahf sbb pop mov inc mov (bad) xor outsb rcrb fdiv pop rorb mov xor test pop xchg lods data16 adc data16 loop repz fadds mov aad inc (bad) sbb push jb xchg mov lds push insl aas lock adc fwait out cli inc dec (bad) out push push adc push xchg pushf lock mov pop out pop int3 mov mov (bad) movsb xchg mov or fidivrl shl pop pop inc xor pop mov dec sub je pop in inc lret fcompl (bad) (bad) dec adc fstps and out mov sub ret out cmp loop lds (bad) aad mov jo (bad) xacquire mov rcr insl lds pop xchg xor cwtl push cmp sbb popa nop pop popa or inc arpl jae xchg shll test arpl movsb sub add push lea repnz sub mov dec outsb sbb adc inc dec fsubrs inc jo mov lret icebp or loopne mov (bad) pop rcll mov xor cli data16 cltd mov sub enter sbb mov addr16 scas es ret and fsubrp repnz add (bad) and clc stc (bad) lea sbb and in mov push repnz pop out popf lock inc pusha (bad) mov push cmp in adc sub jb neg test cltd add cmp in mov lea int lahf xchg cli repnz sbb es mov sbb int3 jmp sbb fistpl lea fxch jns jl mov cltd mov push hlt test xor andl or mov cmp orl cs and inc or ret lods (bad) testb nop fisubrl mov lds add push cli pop push cltd inc test jl icebp (bad) pop into mov (bad) adcl int3 cltd mov out (bad) dec mov mov test into sahf or sbb jno cltd ja not push adc mov jbe sbb push and (bad) xor stos mov mov js (bad) sub or dec xlat data16 clc loope fldcw test mov stos cmp fbld mov out jb mov jne push lea test mov out add aam fmull test xchg out scas or out mov jno lcall jnp mov js lds pop cmp stos cmp repz cmp add xchg shlb inc jl jp imul sub outsl seto mov pusha out push pusha movsl xor pop insl push pop add clc mov lock jecxz jg inc mov push mov sub mov pop inc sub push inc in enter int3 ss push dec add push mov adc inc lds pop jnp dec in cmpb pop (bad) sbb out mov jmp jge call mov push aad pop (bad) xchg sahf imul mov add sbb sahf imul pop inc enter pop mov push sbb rolb shll loopw out add mov mov stc add gs pop scas lock fild cmpsb sub jp js jmp or call and in leave into push out mov add sti push addl dec aaa (bad) lret adc addr16 sbb loop mov in jmp mov in std sub push test add fsubrp mov gs cmp xchg mov mov jns cld test mov pop je (bad) lcall (bad) mov sub mov mov mov push ljmp addr16 push mov inc mov ror sbb daa xchg fwait psllq jnp sub mov cmpb stc jp mov xchg imul add dec add pop daa movsl cmp out dec pop rcrl cmc js js push sub push xchg mov adc testl jae xchg or or std out (bad) or mov repnz add (bad) push push cmp out fisubrl fsubrl mov xchg adc sub aas pop (bad) inc xor add push mov js,pt adc dec xor push in lahf push xor in dec push mov popa iret or jmp adc clc push cmp dec inc (bad) popf mov pop mov cmpsl stos popf stc or xchg jb test jns (bad) xchg fwait mov daa test mov xchg mov andb incl dec lods xchg mov in mov in jmp jmp add lahf js rcrl xchg pop stos (bad) cld cld push enter ss adc xlat push in inc enter (bad) push mov and or pop in mov add aas cltd out xor mov pop lcall mov mov inc and xchg ljmp loope or inc or xchg stos add xlat jne rclb xchg jecxz popf add mov std inc mov xor mov daa jle pop pop xor and mov icebp xchg inc pop jbe cli cmp loope movsb push push cmc mov pop (bad) icebp ret shrb movd jp mov dec hlt lcall cs jmp xchg jae adc xchg sub test cwtl imul (bad) mov jp lock test adc push mov sub mov das or movsl bound dec shl dec not icebp jbe jnp inc pop inc rcll shr jmp mov adc add ds shrb inc cmp divl mov fcoml (bad) leave adc and leave mov xchg adc std mov push lock mov mov jmp ret push int repz xchg push mov fisubr xchg sbbl (bad) icebp cmp jno iret inc fbstp xor popf sbb pop loopne mov mov lea shlb clc fcmovb push push lods movsl or sbb sub aaa and ret stos cmpb inc iret fstpt dec lcall xor xor popa es bswap pop data16 popa mov in ret fisubrl mov outsb mov add push iret iret mov scas leave dec add imul iret mov call xchg adc (bad) ds roll popf fcompl dec lahf inc sbb adc fstl xchg xchg rcl add rcll mov incl push and jnp scas imul jge mov add mov mov js pop (bad) leave repz mov and sbb clc jbe or shrb sub stos xchg ret jns inc jno idivb sub repz loop aas stc jns es out pop ficompl rol enter sbb add mov fsubs jp mov push aam xor mov shll sbb mov sub lods xchg pop or scas popf cmc pop dec (bad) sub outsb mov rcrb or or jl jo dec int inc adc dec dec hlt inc lea cmpsb sub push ficompl aad and lds ljmp aam dec lahf repnz or dec cmp out lods into subl icebp call jge jbe movsb push xlat push mov test sbb (bad) adc or pop pop jne pop push (bad) hlt and (bad) push das mov add imul pop inc jne cld sbb cmp jbe jle or scas in int rclb arpl test loopne sub leave xor popa sub (bad) xor test roll fs imul cmpsb xchg shlb xchg mov mov sub movswl inc xor jg mov sahf vmread int pop (bad) test fcomps fist dec out aas xchg loope mov leave jne imulb test rcrl inc adc insl push mov mov iret (bad) sub fs push sub pop inc das adc scas stos jp mov call mov jge fmul push stc inc mov and jecxz dec jp push or pop mov inc or or stc inc inc (bad) mov add xchg xlat mov add pop fcmovnb xor js pop popa rol test sub decl stos adc xor repz loope jb adc popf adc jbe jb daa lea xor xchg adc sbb pop cmp out jmp cltd jbe fiaddl xchg mov incb dec dec movsl sbb push fs out arpl ja xor das mov adc push sbb xacquire das lahf test mov out pop aad and aad lea stc iret mov mov (bad) std jbe pop dec mov stos lea insb loopne add dec adc ss pop add dec mov and inc mov mov stc dec pop mov sub xlat es pop into mov cltd push ss and repz les addr16 mov es jae and shrl addr16 add jle je adc mov sbb sbb adc sub (bad) sbb bound cmc sub sub sub insb pop fwait lret or lcall fadd xchg mov insl out stc fs push mov add mov push xor jp insb pop cmpsl sbb mov adc test hlt lret inc inc mov lods mov cmp sub loope mov ds repnz std jns push aam sbb pminsw jnp popa int3 sbb jecxz mov ja icebp dec dec ljmp lret aas dec out fistp jne and lea ds inc aas xchg stos hlt mov or jnp cmp sbb cli and flds lcall out xor or cmp mov bound and leave push dec push jno lea or cwtl pop mov pop xor mov mov xchg rcrl out movsl jbe inc xchg or mov and xor dec inc pop in inc cld sbb pop and fildll add stc shrb xchg mov cli xor pop add dec dec stos xchg mul daa xchg insb ret mull dec push es dec fidiv (bad) and or cmpsl pop int3 push xor ret sub aas push mov aas les add xor cmp loopne in dec insl adc incl cld or cmp mov jg pusha pop adc sub mov rcl sub shl adc jl ja dec push (bad) ljmp cmp out icebp cmp addb fs mov pop mov fsubs jae cmp movsb sub test pusha mov fnop jg xchg (bad) jo add (bad) fldcw sub sub lods mov cs mov (bad) and pop sbb jmp jge xchg dec mov cmp popf pop mov jp scas push roll push sbb cmp lcall xlat adc mov out adc xor pushf pusha push add rorl jle test mov jge scas sub adc cmc arpl aam adc push daa push fcoms add rcrl mov mov cmp cltd add jbe out dec inc sub sbb pusha stos mov dec (bad) js push lcall xchg pop imul mov add aam cmpsb push imul mov sbb popa or mov (bad) cwtl test enter stc pop stos mov aaa fdivs adc push je sub add stc jns iret cmp adc mov lahf das std lahf fidiv xor push mov aas repz dec jnp mov push add pop pusha cpuid movsl jge push adc loopne and and popf mov push push ds outsl dec gs scas repz mov sbb outsl xor inc shrb jp outsl pop mov and add pushf out xchg test das or es out iret (bad) cmp cld clc jo mov loope jmp jmp sbbb ret jbe pop pushf dec lcall fs andb jns,pn insb daa (bad) or in lea adc pusha sub inc jecxz push movsb dec xor hlt clc call push jb aam sti (bad) arpl push dec mov mov mov cltd lock inc push leave dec dec lcall test push repz int3 cmpsb lret lea ljmp and lods xchg scas fisttpl jno mov (bad) fimul and aad cvtpi2ps cs xor shrb pusha or or (bad) aas pop int3 addr16 jmp js test (bad) jb data16 (bad) fs leavew lock les inc dec push dec cmp fst sub fldenv mov (bad) mov test push es inc dec inc loop aad out movsl push in fnstcw fcompl popf fcmovnbe pusha dec push cs jne add dec lahf sub push cmp mov repnz cmc xchg xorb mov dec inc mov into fucomi daa fwait pmaxub xor push push mov and (bad) imul add push inc cmc mov loopne inc mov push int and xchg fcmovne sbb cmc scas cltd ss (bad) bound mov jl scas mov jg scas and in imul (bad) hlt jno aaa push xor mov sbb xchg jg (bad) outsl test xchg aaa and jo addr16 out pop stc out sub add xor inc or icebp add and pop in inc fisubl ror mov (bad) (bad) (bad) in push and jne inc int3 lock mov mov lcall or sbb imulb std sbb arpl jmp mov aas add fnstenv sbb jle movsb sub fs cmp std outsl sbb (bad) pop cmpsl jmp cs es out cli jmp jno outsl sub cmp push or push out (bad) fistpll pop push pop mov (bad) adc mov jl dec jmp xor jmp xor cli dec movsl push idivb stos xchg cmc pop pop or dec jnp cmpsb lods je push jbe mov out adc (bad) in setne call or out aas mov mov into pop sbb and adc jne adc outsl popf mov xor pop or mov pusha (bad) cmp into popf cwtl imul test es sbb fimul lods cmp add mov gs add sbb insl subl pop lds lmsw sar xlat aad xor cmp insb rcll mov cld or das ret and jnp pusha in or ret xlat aas test cmc and test xchg pusha ja jns pusha cmpsb xor xor dec call out adc xchg mov jns and scas mov cmp jb or int xlat and push scas data16 fdivrs sbb into mov pop pop add fldcw or (bad) mov rolb jp test and les rorb fwait pop das inc repnz dec sti add cld fwait mov mov cmpsb dec xor popa lods and mov dec jns inc dec test cmpsl out jb bound mov jge cmp je,pn xchg fisttpl push xchg lahf test leave inc jbe gs adc std xchg xor bound and sub and sahf xor cwtl jp fs mov mov xchg inc es xor dec jno int3 scas sub iret out or jbe adcl and mov cwtl pinsrw shr mov lods scas lds jae lea xchg sahf stos int3 insl dec rclb inc jge ret mov sub adc xchg test or cltd popa out mov pop push std jb push lahf in pop add pop and mov pop out jnp mov mov push sub dec jp scas xlat push ja daa insl rolb xor push scas lea cwtl mov sub lds cmc lock jmp repz jg jp add adc enter mov mov in cli cmp inc fstpl add scas cwtl jnp popf inc mov jl jle popl push sti mov mov (bad) popa jns ja mov rcrl je outsl test jae or stos gs imul inc push pop mov mov pop xchg cmp mov jns adc cs pop mov push sbb data16 fidivr push add mov in daa or pop rorb xor daa lret shrl popf or aad cmp cld shrl (bad) adc fldl cltd cli (bad) push mov (bad) aam loopw mov xlat div jp inc push xor (bad) or or and stos jo sti (bad) cmp xchg mov pop or sub lods shll leave cmp (bad) add (bad) (bad) fwait dec add fucom shlb int3 cld test mov popf gs xchg sti sarb xchg xchg jns popa pop push insl rcr les lret xor int3 dec aam xchg jp mov das pop rorl cli pop jmp or bound movsl int mov inc fistpll mov xor cmpl add push jge or cwtl push (bad) mov dec cli in cmp in hlt call xchg mov shll inc sti leave jecxz mov pop mov mov cltd inc insb jge push xchg clc das xor jge mov dec mov or arpl adc jge js jecxz addr16 adc add fistpl in pop pop add sbb aam or lods or mov stos push int3 push jne jl data16 outsb jp push push test sub and cwtl fldenv ljmp rorb les sbb adc dec dec pusha fcomps jmp adc jns adc dec sbb out xchg push loop mov mov mov (bad) and xor adc sbb jne test in (bad) int ss pusha push sahf mov xor push and push inc jge jp jnp aas es and jnp enter adc mov xor ret pop pop mov mov icebp cmpsl xchg (bad) sbb adc cmpsb mov out addr16 in pusha test cld js or inc lds lret fstl mov addr16 sbb test or inc pop cmpsb insl sbb inc mov cmp mov sub cmp test arpl leave insl add dec ljmp cwtl out mov stc pop imull js sarl in call into push jae pushf push pop dec cmpsl ficomp ret test leave in lcall dec sti mov imulb adcb ja popa push xchg imul (bad) fucomip sub test cmpsb jp or ljmp movsl stc (bad) pop (bad) inc push icebp (bad) std lds (bad) jl push xchg je repnz test ficoml test fildl and (bad) (bad) and fistpll stos push sbb pop mov add (bad) xor (bad) out nop stc lcall loope scas cmp xchg sub jp push sbb dec cmp loopne pop fsubl cmc test mov pop rcl sub fsts jbe test jp arpl leave pop adc jno data16 vmwrite js test mov mov stos inc icebp mov aam popf cmp cwtl ret out sar sub aas pushf clc xchg repz fldl (bad) mov pop loopne mov test mov push lea icebp pushf and sub jg mov cld in out adc sar sub cmc gs xchg insl gs sti inc jge (bad) loope adc sub clc loopne mov add jmp push enter (bad) xor and call and add aas xchg jl sub adc stc ficompl mov fs inc imul add imul hlt aad out inc es adc or cmc rcrb test jo mov into dec xchg cmp mov add inc adc adc lret (bad) lea cltd (bad) out cmp sbb fdivs pop loop sti arpl lret in pop pop mov xlat and aas fwait ret adc mov test mov pop xchg pop pop mov rorl add or xchg pop sbb or jp xor loopne inc push cmpsl adc push sub lea (bad) jns push xchg dec xchg push shrl push lcall jno dec lods popf sbb mov in mov jns dec lds or mov test pop loope mov (bad) repnz ja and cld rcll pop imul inc add ss add and jns in mov push in loop (bad) mov out inc dec (bad) xchg xchg in scas jmp (bad) cmpsl pop popa mov push mov bound add xor mov cwtl dec cmp cmc mov pop push das daa pushf fcoml bound mov arpl loop ja loopne stos dec in nop test xor add fnop or add inc (bad) cld fnsave add out lret (bad) mov inc pop mov xchg stc out pop stos mov daa iret dec pop iret in mov jp mov pop loopne cld xchg pop mov mov jno bound inc (bad) (bad) push sub fsubrl lock ss fdivrs (bad) loopne imul outsb sbb add ret mov popf mov mov lret mov jp (bad) lock push out sbb out mov jge mov jae dec add sub adc sbb cltd xorb mov (bad) lds cmp pop pusha sub int3 and sbb inc fs sbb or pop int into sahf xor push or in xor rcrl enter jl nop inc mov lods sbbb and sbb lds out ficomp sbb jmp scas push push outsb lds enter dec es push pop test push sbb jle cltd jge xchg daa lea imulb push jg in cmpsb (bad) mov ja outsb jmp pop ds clc dec movsl jae xlat ret and popf push lret mov movsb cwtl pop xor cwtl stos or mov dec test and test dec test inc cmp push stc loope loop mov adc mov xor out adc jmp cmp mov stos jmp addr16 fucomip test lock fwait mov enter sub stos mov lea inc fs movsl cs adc jne xor into mov xor lea pop movsb popf adc mov lcall adc clc cltd ss out and jl movsb mov push lcall add push nop sbb loopne xlat les int movsl jmp pop cmp jle shrb lret push aad in jns jg jmp mov cmc adc sbb push xor or in and and xor rorl push out shll xchg dec sbb out mov sbb aad pop shll mov push fxch push int3 gs mov adc jmp and loop pop push push andl rorb cmc std xchg inc cmpsl mov sbb dec sbb jecxz inc pop mov lea push or test inc jl orl cld xchg scas (bad) sub sbb imul mov (bad) cmp arpl mov add cli jno push sti repnz cmp sbb imull push add push (bad) jbe dec inc dec dec fsubrl mov add mov ja adc or (bad) push sbb (bad) mov adc hlt shll jecxz aaa pop cwtl adc jno jmp sub sti or or nop rorb add outsb pop push adc call xor push jae mov cmpsl ffreep es fld jns sbb mov push cmp pop mov dec (bad) xor lods pushf sbb mov xchg outsl push jmp mov cmp fwait mov cmp sub add sbb enter xor and xlat fisubr sahf dec jl (bad) add inc xor jecxz cld insl lcall mov xchg scas cmp popf call fisttpl ja aaa add jae mov repz push clc sbb fstpl rcrb mov inc pop add sahf fmuls cmp int ljmp pop cmp push jp push ja clc pushf inc mov hlt or mov push sbb negl sbb pop inc xor idivl insb sub and cmpsl xchg out icebp mov sub out into add cmpsl aas ss pop push push sbb repnz push hlt add adc adc cmp pusha sub pop inc xor mov std push cmp sbb or int3 jo out in mov pop test push aad dec test mov dec cli cmp sbbl popa inc jbe lret aaa movsb mov jecxz and jo fwait in (bad) jnp ljmp fwait leave xchg popa fs adc cmp pop mov sbb cmp test mov sub clc test mov pop stc mov xchg jg addr16 aaa sbb popa imul add add mov loop (bad) xor adc mov mov push push leave jb sub mov pop (bad) jge (bad) jae stc pushf pusha mov add push mov adc sub mov or xlat fistpll mov sub in jne out jecxz out call rcrb add mov into outsl add or mov out mov push cmp das xor cltd adc int3 inc add pop jo mov mov mov mov imul push popa enter lea mov popf push add mov xchg fcmovne popf xlat inc stc sub and xchg lret xchg push mov fcmovbe sbb cmp std cld rcrb sub dec adc stos cli or test pop (bad) lret xlat stos pop mov dec mov test xor fsts test loopne (bad) outsl sahf mov and add mov addr16 jmp mov push mov mov or stos push icebp stos push in mov sahf ds (bad) icebp dec scas cmp xor mov jo ss es lods cli mov mov xlat aaa jecxz cmp mov xchg adc fucom jecxz cmpsb pop inc adc dec jmp gs notl adc mov sahf fcompl popf mov push andl sub jmp mov push cmp mov out repnz imul xor pop movsl inc out mov testb mov sub into scas sbb pop loope jbe ficompl mov mov and sub notb pop aas and mov in (bad) ds or testl cmp mov gs push mov pop lea rcrl test and (bad) mov je cmpsb add push ror subl add (bad) xor movb or sub lea xlat std insl loopne sub and (bad) mov rolb mov dec sbb xor jns idiv rcr das inc inc out push popa incb sbb pop test xchg sbb mov jmp inc jb cltd inc (bad) xor in nop cmpxchg push test mov loopnew cmc xor aaa and pop fisubrl xlat sub or push stc ret adc scas lcall dec mov xchg sbb lods mov das mov out jb xchg test push or mov pop sub out mov fs mov rcr xchg mov (bad) lock imul lods xchg dec stos mov xor pusha in out cmpsb (bad) mov mov sahf das cs out imul push lods push mov mov mov (bad) mov jno inc pop jmp pop sub mov jl repnz in mov push xor mov xchg add aaa insb movsl (bad) xchg lahf lods adc adcl (bad) lahf insb fdiv jnp sahf push add inc ret shrb xchg rol mov sbbl push add adc std xor test jb enter cwtl mov rclb push (bad) mov xor xor jno ret aaa lahf xchg sbb sbb inc and lock idiv aad push imul xorb sahf sub enter sub and or jge xchg pushf sub sahf or push rcl mov pop out or pop cmp sbb sahf mov or sbb inc add aas xchg xor fucomi inc and outsb xor mov pop stc fldenv mov das (bad) iret push cs clc fistl sarl repnz popa mov push dec fmulp cmpsb enter mov jle repnz fucomip jp mov (bad) test cmpsl cmpsl sbb test sub xor xchg movsb pop pop call loop pushf sbb and mov jle lmsw fsub adc or push ss push sti ret pop arpl jle mov cld enter sub push jmp inc popf ss ljmp test clc (bad) fild aas addr16 ds mov and mov xchg imull in or mov mov sbb add int3 fdivp imul pop scas idiv ds imulb cwtl cmp inc push lret outsb mov sahf add out inc mov or inc jle sahf stos push dec pop test out and aam push repnz sub mov mov cs mov lea bound xor repnz mov and scas mov mov inc test or mov fxch push and rcrb inc mov mov in inc pminsw inc mov sarb mov fidivl cmp xchg or jae out shlb aas or pushl in inc lods int sti in lock stos push lods fisttpl repz cmp popa dec mov add mov jl mov and hlt xor adc mov xchg popa lea pop movsl (bad) jmp outsl rolb or data16 cmpsl clc xchg out push sti icebp mov cmp lods jae sti lahf pop icebp sub repnz mov insl lods cmp subl sti (bad) in push xlat fisttp mov out out clc sub xor mov mov pop pusha rcll inc lcall loope cli adc cli add cltd sti outsb dec push sarb xor dec mov push gs data16 cmpsb scas in cmp (bad) and pushf push test aad push fisubl test jg sbb dec push pop lods jbe or sub adc add (bad) and xor fbld sbb and in lcall mov jno in adc ss imul int fldt mov je fs test dec cmpsl xchg (bad) dec pop dec mov jecxz xor xor in fwait dec out jno loopne xchg mov movsl push adc jg out pop imul pushf aad or jl jecxz cwtl cmpsl cmpsb push ja stos scas and and sbb add inc sub cmp mov dec call (bad) mov insl xchg iret (bad) dec jae mov inc mov mov shld aas (bad) push gs add xchg gs mov mov addr16 and mov (bad) adc fsubs sahf pop adc test xchg jno in add cmp fnstsw mov sbbl mov cs mov xchg nop outsl pop xor pop jge push mov cmpsl inc loope fcom cmc inc mov rcl lods jg push or in jp and inc outsb adc aaa inc or push into sub ret add sub stos dec sahf push fldcw cmp push movsb in test (bad) out scas in mov fbld addr16 mov test mov fs sti cwtl pop leave jns fs rorb sti jg inc cmpsl stos lcall inc fnstenv sbb lret iret and jmp xchg adc movsb rcrl jge,pt xlat repnz (bad) clc decl push dec mov xchg popf shl mov insb in ljmp mov stos adc jne or gs popa lods inc fcomi mov fistp icebp xor outsl addl xchg adc xor jnp mov jle jg clc cmc add pushf mov jae xchg test dec gs inc loope xor inc mov ljmp (bad) lret sbb push lea movsb adc adc test call jae out out or stos and inc push ss and push mov pop fsubl iret mov mov ss das lds cmpsl fadd mov xchg push cmp lahf je (bad) leave sub insb bound int xor mov jmp sub fimull mov push rolb add mov dec cwtl mov stc icebp loop jmp inc push xchg add push lcall and inc je inc in pop and cmpsb cmp dec mov popf pop or data16 test mov out stos xlat sub push nop xchg scas and push dec pushf out cwtl out push sub push xlat inc shlb ss push (bad) jle inc pop sbb dec shr inc iret dec sub iret jnp outsb or jo dec outsl int outsl in ja jno push (bad) pop movsl rol rorb cmpsl jbe add xchg outsb js pushf int addr16 imul lods idivl jge adc (bad) adcb clc fimull lcall mov (bad) cmpsl xchg mov jbe sub stos inc mov sub fdivs mov lcall popf ret cmp mov fldl sbb ljmp fisubr out adc outsl mov leave dec (bad) jnp idivb sbb xor popa testl das lods push mov mov sbb ret sbb cli cmpsb or mov and xchg xor dec or imul dec loop lret xchg lret cmp dec inc orl add shlb dec popa (bad) negl sbb mov popa dec adc iret pop imul xchg out dec adc popa cli lcall mov std sbb cwtl (bad) jecxz push mov lds cmp jnp or mov jmp and inc scas adc jecxz lret and nop mov lahf mov or xor push clc sub jle push fldcw inc sbb pop jns cmp int3 out ret mov push (bad) mov dec ss insl icebp cmp nop sbb loop adc xor jp dec lret adc inc fcompl pop or xchg mov mov arpl (bad) arpl inc inc mov jne out jne mov push push dec and sub and call mov push enter mov xor ret ja push adc pop ja (bad) out sti lea xchg fcomi mov xchg (bad) xchg cld daa stc pop and xchg push in dec inc sbb shrb ljmp std push in mov cmp fwait mov test sbb mov jno leave jg jne xlat in xor in jp xlat pop inc mov pop and and pop inc cltd push loope,pt and xsha1 cmpsb (bad) (bad) push (bad) iret into ret pop es lods lods (bad) xor in cli pop cmpsb enter jmp scas popf cmpsb mov daa cmp xor dec repnz mov or clc cwtl aas sub xchg xlat fildl movsb imul cmp adc push mov push test out mov mov mov cmc mov imull repnz lods (bad) jne xchg inc scas xchg scas and popa ljmp popa and cmpsb iret (bad) pop push or lahf sub dec sub ss mov adc cmpsb sti xchg into xchg pop lcall pusha and jg jne xor lret jle xchg or push sub imul shlb lahf xor mov xchg loop das jg sub sub dec or repnz mov add jbe or cwtl outsl inc loop dec call xchg dec cmp std (bad) rcrb pushf test jmp (bad) in mov jg (bad) ja and pushf sti out (bad) ret outsl popa stos lret ret mov mov dec xchg pop sbb and loopne jo xor adc stos stos xchg ss rcl and xchg and int (bad) mov test mov (bad) aas mov dec lock dec shll in cwtl test adc mov (bad) or mov das mov in gs dec sbb aas and (bad) cli and cmc jecxz imul and and cltd sahf mov mov jbe std mov mov cmp sbb out test xchg adc fstps test lods add outsl jmp in and shlb (bad) pusha inc dec scas insl aas push and sub jg push ss movsb aam sub (bad) neg dec cmp cmp xchg jnp repnz xchg or pop loope pop jne adc or insb mov ret scas push or enter xlat mov lcall add lcall movsb cmpsl xor jge dec sbb pusha jbe leave add lcall mov test repnz sti or adc cmp lock inc (bad) mov lock outsb mov sub lcall mov mov sti dec sub xlat sbb das js mov lret bound stos gs stos xchg push imul ret lret lods js push jne xchg in lret lcall xchg sbb std icebp cmp psubq mov cmpsl push sub sub cmp insb dec mov stos mov pusha adc add fdivrp xchg push mov jne inc in xchg (bad) mov cltd test jae gs sti roll push dec (bad) sti imul lea jle test xchg xchg call dec mov xor and add pop insl je pusha dec mov add mov mov cli pop outsb cmp lock loop inc inc add dec mov loop bnd mov cmp popf loop sub xor aam inc imulb pusha pop cs js ja insb push cmp test sub or dec enter add add (bad) and cmpl outsl cmp xchg mov add idivb push hlt insb cld xchg inc aad rorb mov xchg pop or sub mov and cld push rcl nop push test xlat pop int (bad) sbb insb ret sub fadds f2xm1 fnsave icebp pop nop pushf test mov fimul mov mov and adcb mov mov popa shll ds cmc adcl in cld outsb inc bound pusha mov pushf cmp push mov lret push push add mov add movsb into dec (bad) xor sti push test or cmp in dec pushf pusha dec jle mov call fidiv or and cmp and add popa rorl scas jbe add fdivr call xor mov popa fmull outsb and jns dec push lea cmp mov cmc xchg mov add cmpsl cs cmpsb les xor mov orb (bad) lods (bad) hlt cmp test mov sahf icebp dec pop mov mov jmp mov or jl dec jnp out add push ss inc imul out mov pop ja xchg daa stos nop pop xor or test xor ret in pop pop dec leave sub loop or jge into xor mov jmp in add lret jno stos out xchg xchg call mov cmp xor mov rolb cmp in pop callw add addr16 into add outsl adc call adc mov ficompl mov shrb bound je sti (bad) rolb sbbl adc pop adc insb push push mov cmpsl sub sub jnp (bad) mov push pop icebp jo mov mov hlt inc std lock cld (bad) mov int fs xor bound xchg mov cmp mov sti push inc lretw pop sub mov pop ret push mov and pusha xchg jp sbb sbb aaa dec sub mov popf ds or cmp call sub xchg jp add dec inc repz orb sbb scas lret fldt (bad) mov fldl lret pushf xor daa mov pop xchg jmp mov xor push xor enter mov sbb lods (bad) hlt mov es jno push cmp xchg or scas fild cmp or test fildl aam scas (bad) aas cs pop out fwait and sub xchg sbb jecxz repnz insl js lcall cs mov stos rolb scas mov jmp test imul je xchg js out fdivs outsl pop pop lcall test scas das add pop adc call test xor jb pop jne jae (bad) outsb out mov adc into out add movsb cmpb mov inc stc push sub sub les sbb (bad) jb (bad) hlt adc fadd imul inc jb add aaa cmp xchg add neg fadds add ds cmp xor test push inc cld jbe push loop in mov xchg inc lds (bad) ljmp sbb lea mov add add mov daa dec std inc adc scas pop and inc dec cmp mov sbb add cmp xor or jnp fcoml inc lahf dec test stos sub pusha shlb add mov inc arpl sbb cmp mov add push pop mov cmp lea out adc cmp push sbb push mov cs daa enter pop movsb pusha inc pop jmp and dec xchg dec inc xchg jne sbbl mov adc scas iret jbe (bad) aaa xchg movsl mov xchg adc outsb dec bound pop xlat dec pusha inc (bad) loop repz fstp push daa das pop xlat addr16 stos push (bad) (bad) xchg add js sbb mov test jl xor in lahf push add out das outsl pop ret xchg movsb xor pushf sti sbb scas xor incl dec sub divb cwtl push pushf adc adc mov aam inc jmp add xlat shl mov (bad) mov stos fldcw jmp mov dec xor jae push roll mov mov sub out out or pushf jnp push cltd sub push push xor aad jge mov push fisttp daa cltd out es pop sub mov popa aaa cs and mov fdivrl pop push adc imul loopne fwait cmp jl xchg mov add jl stos inc mov pop cmpl xchg pop outsl inc inc les add (bad) arpl push push sbb out dec push push mov mov jg jecxz cwtl dec cmp mov out push mov std push pop (bad) cwtl (bad) cmp jecxz fdivs xchg dec inc push add (bad) lods mov cltd add pop lea js inc jle and insl data16 in sbb mov jge or clc iret lods jecxz mov jle nop adc jge repnz push sarl sbb cmc arpl dec adc add push enter pop imul sbbl xchg sbb pushf pop cli mov jo cmpsl (bad) aaa lods sub push xchg into xchg add jecxz inc in or and xchg cmpsb jnp sbb and dec cmp (bad) sbb es mov and aaa cmpsl lahf sahf adc test ror adc stos test mov imul add sbb cmpsb incb push push test xchg sbb pop mov mov jge ds js sbb test dec jmp outsb or sub sbb cli pushw arpl push stos lock movsl rcl (bad) bound insb fldcw scas dec hlt pop jle or movsl cmpsl dec sbb fwait push outsb outsb ss stos dec mov int adc and mov jl push lods in adc fdivp mov inc and test add aaa movsl out adc orb and and mov outsl mov pop daa aam nop or cmp sbb into and cld out sti bound rcrl insl push iret fdivl (bad) test leave or lods jmp in hlt xor jnp dec in repnz repnz mov in mov hlt movsl sbb pop mov ret cld arpl repz int mov mov inc aad and sar sub out xor adc jge adc cmc dec push out sub inc fcmovnb push mov add cs push (bad) and movsb mov adc jle add xor js inc hlt xchg dec mov mov push mov add fadds sbb fistp pop fdivrs xlat stos insl mov test pop in xchg call xor cmp jecxz js sbb and adc insl shll xchg je xchg sub pop shrb in or or ljmp jo mov ja sahf mov rorl and call inc (bad) fwait mov xor cmp movhps bound mov inc jbe lret add sbb (bad) (bad) xchg sbb sub push sbb popa xor add nop call mov xchg jae and dec and jecxz xor inc add sub push push dec cltd adc lods sub popa out insb add push (bad) scas icebp inc decl adc fnstcw dec dec xchg mov repz test or sahf xchg dec pop push mov jmp or out xchg mov pop and je enter call dec in push pop scas js,pt aas pop es pop fisttpll dec sarb cmp pop sub push pop jne cmp inc pop jo mov pop pop sub mov (bad) in adc mov (bad) jl jno xchg loopne,pt inc pushf in addr16 loopne hlt iret sbb mov sub out pusha push inc mov sbb push cwtl jne xchg stc cmpsb lfs in adc dec cmp mov xchg or pop mov mov pop cmp cli push mov mov pop xchg pop rcrb cmp inc loope fimul jmp inc cmp stos adc xlat dec jne addl inc sahf scas and test je mov mov je dec aaa test pop rcrb ss insl (bad) xor jno mul and push xor (bad) aaa mov enter push leave fwait outsl xchg mov xor fsubs jl mov in and aas hlt sti pop test stos cmp and mov push outsl pop ljmp jmp les mov xor inc loopne cmp or out inc fwait and sub push dec dec cmp push test fiaddl dec mov pop mov iret std loopne stos in stc push add std aas repz enter outsl mov xchg dec ljmp outsb pop cmpsb cmp xchg push stos fadds mov andl add cmpsb sysret int aas outsb mov (bad) out ds or mov cli movsl push mov inc push imul push mov ja add cmp jmp loope call mov push sub cltd loop loope out jae mov add inc jae push pop sub jecxz xor add es dec call jp inc push sbb divb jae cltd arpl lret adc cmp enter cltd push add popf data16 cli or mov jnp cs int3 sbb push cltd mov pop mov mov xchg sbb adc xchg jne cld insb xchg pop rorl loop inc xor loope mov in (bad) jo outsl and cmc xor inc pop sub int3 cmp mov je ja mov popw and leave and aad jmp ja push or jge clc cmp dec je mov jno adc lret (bad) (bad) js dec xchg mov mov std stos (bad) shrl xchg sbb pop mov jbe mov out dec addl shll add fnop (bad) mov mov je movsb sub loopne cmp mov mov cmc and mov dec outsl pop push or out bound jl stc push xor mov cs fxtract ss mov add or jge into push or or daa or mov repnz rclb sbb leave in cmp sub and bound fs insb (bad) cmp addr16 mov xor inc loope mov ss push leave aas add data16 (bad) icebp xor lahf jg pop out lret popa jmp mov loopne aad jg orl sub flds jecxz ficoml clc dec mov xchg dec xor dec scas pop popf loop mov aas dec outsb inc (bad) stc mov lea std mov aad push pushf mov ret fwait addr16 push movsl inc fstl inc mov xchg cs rorb sbb pop rcl xchg jae jns cwtl add lcall divl push test loope inc or add (bad) dec scas rolb movsl push or lock add lcall sbb add jns movsb xor dec adc adc add loope fstpl mov mov movsl ljmp cmpb mov xlat imul sti inc adc adc loopne repnz jo ja jae pop lods or xchg cmpsl call ljmp adc fstpt jmp mov and lret int pop inc divb call sbb test fwait outsl adc fsubrs pop cmp or mov pop shlb cmpl pop fisttpl rolb jl lea xor push cmp or stos das lea add jns shr jno gs das mov xor mov out pop fwait pop lock jmp sub mov loop seto xchg aam lret (bad) in (bad) les sti cmpsl pop jns mov jb cmp adc repz push mov mov add rorw xchg cmp and push xchg inc cmp adc scas in stos xchg mov (bad) xchg pop jno and fildl je stos adc gs pop roll ficompl iret mov pop and and jmp loop pop sbb ss push (bad) sbb popa test inc xchg adc (bad) jae jne sub rcl loop and pop cmp and mov pop bound or je ret jb inc or jnp pop inc in mov jmp xor jne push mov mov xor outsl pop mov mov add sarl sbb push mov insb mov add jns pop or mov jnp sbb cmpsb popf rcll dec stos sahf jbe (bad) fstpt stos cltd sarl inc lea xor sub (bad) push push mov sbb fbld test lock (bad) push arpl arpl sti es xchg xor jnp ja out inc push call fdivs enter mov inc cmpsl imul outsb jp and dec or push mov sub fisubr les out add decl pop jae push icebp fildll cmpsb add add xchg lahf mov and fcmovne imul aad repz or or sub and enter sbb (bad) mov mov or mov test fcmovu cld lret test inc fstps mull cmp pop xor push aam jno in cmpsb mov cli imull cmp cmpsl lcall cli xor sub lds sahf std jo pop push popf xor cmp dec lret in xchg testl in aaa sub sarl loop mov add push pop in int3 (bad) xchg sub movsb cmc adc stos mov fisubr push sahf mov pop daa inc mov arpl sbb mov or ret clc xchg push clc hlt pop fnop push and lcall in pushf arpl loop notl mov mov jns (bad) testb insl (bad) pop fcom mov addl xchg xchg ficoml mov repnz mov rcll sarl scas std mov pop call fmuls xchg mov or xor sub add mov stos xor (bad) imul rorb test in push mov fstl add fsubr lret jae add into sahf je adc stos (bad) out xchg aaa inc cld test mov jmp cld aas adc pop cmp sbb pushf mov rcrb arpl mov push mov push jp jge mov out dec pop xor jae mov jne and fmull sbb ds aaa cltd inc pop adc sbb leave fisubr out mov push add jl gs fstpl arpl mov mov (bad) cltd xchg jbe mov mov inc mov pusha sub push fwait jp dec jl,pt xor fwait out test aas icebp popf scas sbb pop xchg xchg add mov cmp std popl jne (bad) shlb int3 and inc daa and mov loope jmp mov inc imul scas sub inc int3 sbb out dec inc mov pop stos xrelease or js in jb in or in ret ss lret xchg sahf or imul pop push adc inc dec popa cli (bad) lock xchg pop out rcll sbb clc sub sbb pop or divb mov std push (bad) fucomi sub iret and arpl jb arpl cmp mov stos inc push in xor mov test mov cmpsb sbb cmp jl out xchg cmp or rclb dec jno fdiv dec mov bound jle mov in pop das jne jecxz test (bad) mov test in inc clc mov xchg sub jge das sub mov or xchg ds sub pusha (bad) lods cs pop fwait push cld lahf stos jns and js lods fs sub mov dec in in cltd aad lds jno scas mov ror adc xor dec mul xchg pop xor lret mov push mov (bad) ja cmp xchg jns xchg jb sbb jg loopne lret sub (bad) (bad) scas xlat (bad) jo mov sbb js in les jae inc pop mov add int3 inc push sub movntps enter mov fwait enter inc loope jecxz loope add push (bad) lea roll pop cs inc add inc inc roll outsb sub test pop inc imul push loope sbb add lods rorl int clc out loop (bad) mov sbb adc test pop (bad) xor pop push in inc dec dec pop inc std cli cmpsb (bad) (bad) int mov cmpsb lods js xor xor lock test cmpsb jp push ds fild mov shrl jg lods sbb test add stos cli pop jno fwait dec jge loop or out mov push adc mov dec cmpb mov clc js leave xor imul push test cmp ret test dec je xor sub fwait rcll pop xorps push push cltd xchg jle icebp jge insb cmp and repnz pop js jns addl test movsb sarl (bad) xor push add inc (bad) push daa or lds int3 cmc jg fild lods outsl mov jne fsts or push mov sub cmpb jmp out sub call pop mov lock push cltd mov sub pop mov pushf in push xchg pop jl mov pop test jecxz aad inc mov out or nop cmc mov (bad) mov inc mov cli adc pop xchg xlat aaa inc sub adc jnp add sbb mov add outsl pop aaa add ficompl (bad) or shrd lcall (bad) stc jmp cmpsl adc cwtl mov lret sbb cltd mov in add pop jne into (bad) and sti cmp lahf mov xchg sbb data16 (bad) les movsl mov sub push repz inc pop xchg loop sub jecxz sub dec lahf adc in stc sub jno sbb push jmp cmc inc xor sahf fiadd test test xchg pusha lahf dec ficoml push in outsb repnz inc push push fs je push and fcmovbe or aad inc pushf (bad) es jmp lods adc les xchg adc jl decb xor pop add pop adc aad jge jp pop test push jle clc add xchg or adc aad xchg mov push aam xor mov inc pop xchg jp cmp outsb pop sbb push fstl fldl push adc and adc pop mov cli add std icebp outsl cld test mul jmp xchg scas movsb or lods sub into mov lcall add hlt xchg sub sub pop add test jnp mov cmp xor sbb xchg aam into mov jae out scas dec or bt lds or (bad) enter push xchg gs int3 popf shll xor ja jg dec fs mov std jg sub iret ret mov divb mov icebp out pop andb push dec dec mov das xchg lret xor (bad) int adc clc lret xchg xchg xchg adc addr16 ja ljmp mov (bad) aas and or ret sub insl mov hlt jnp mov inc popa and add jae bound cli dec test dec mov stos cli mov and jle mov jmp jae pop out ret dec addr16 mov sbb (bad) call sub aas call xor shrl inc mov fnop dec cmp jl xor pop shrl jecxz adc test insl ja push jne (bad) jmp ret out add (bad) adc scas cli and adc pop dec jbe lret ljmp xchg sahf add aaa bound jle jae cmp les out add jle dec add femms sub inc (bad) mov xor ficomp add aaa (bad) mov push cmp repz mov popf movsl add mov mov (bad) or jmp (bad) scas pop adc cmp arpl push mov pop test dec gs jge jbe or dec loope xor adc sub idivl scas (bad) lret sbb xorl in inc mov test pop jl fistpll icebp shrl pusha lea sahf push jmp or dec lcall push adc ss dec ficoml stos imul loop js or in sbb mov mov sub xor jb out lock mov mov stos xchg cmp dec aas adc jl sbb mov adc cmp les stos fist (bad) jge sub mov imulb xor clc test popf add mov sub repz mov dec out push add mov mov jle jge insb nop cmpl les sbb addr16 mov movsb (bad) xor xor ja dec adc rcr lds hlt loopne mov inc add jnp (bad) popf bound fdiv (bad) jp sbb inc mov jbe (bad) fisubrl adc pop repz pop mov pop xchg cmp imul ds ret mov test cwtl mov sub xchg inc (bad) jg jp mov inc xchg test sub mov pop lods fs rol mov adc cld jo rolb (bad) mov push pop pop inc push mov or jecxz ss (bad) push cli push xchg insl push loopne inc cli jecxz aas push adc mov jbe sub mov lods jecxz mov and seto sub fldcw pop jp ljmp rol inc add imul mov or add arpl dec (bad) and mov dec repnz data16 leave or pop mov add loop insb movsl loope lea loopne lds adc (bad) rcrb cmp out mov mov mov scas add push loop add cmpsb fidivr leave lahf mov cs adc mov dec pop xor xchg popa push pop add loopne cmpsb repz insb pushf push mov clc mov jo (bad) xchg outsl mov inc rcll jne adc (bad) loop aad push mov scas and jnp loopne xchg das xorb stc push pusha xor fwait daa fidivl ss inc cmp les js fwait int3 mov xor adc jne test (bad) fidivr xchg decb aam mov ds inc bound loop mov sub imul pop out add aaa stos mov out aaa fcompp pop dec daa pop sub push sbb lahf scas pop and xchg dec mov push mov js inc (bad) andl jecxz add outsl sub or xor or or adc in xchg sbb es xchg and dec cli insl pop cmp lcall jmp in lret ja pop xchg xchg lods xor clc insb pushf nop push pop sub push inc hlt xor inc out mov or shr xor (bad) sarb mov sub (bad) shrb aad ljmp mov or mov mov jbe popf data16 cltd test pop inc jb decl stos stc pop sarb (bad) out addr16 std mov (bad) in aaa pop je nop aas jmp cmp popa jbe mov and shl xchg stc push jb push je dec push test (bad) add and cmp sub pop mov popf lret push mov pushf jl aaa add jnp mov push imul (bad) cli mov push mov pop pop (bad) cmpsl adc das inc or push and xchg addb fisubrl dec ja loopne mov pop xchg mov xchg mov inc mov sbbl mov lds xchg xor pop adc and push fstl jl adc or add xchg loop xchg pop adc inc mov je sub stos inc sub fst lret addl test mov mov pop lahf sbb scas stc fnstcw scas jl fisubr mov outsb xchg loope add out cltd das fadds gs inc (bad) fildl pushf cmp push lahf mov in sub cltd repz xor (bad) xor insb aaa lock add mov sbb iret cld out add lcall pop add jne add inc divl push int test adc int pop lock daa jne repnz jae loopne,pn cld inc cltd adc into fwait push jno inc or sub cld sbb sti mov sbb stos or xchg test or xor jl cmp icebp inc popf xor jae dec sub mov sub push mov or cmpsl push jb daa insl pop mov lcall cmp rol fld dec inc dec jmp cwtl xchg or jno jl (bad) or incl jno inc sbb fidivl dec mov in sahf cltd sbb xchg out dec cmpsl daa add and in sub in int cmp mov add popf jmp sub fldl pop jbe aam jne add stos pop pop scas out push (bad) loopne and cmp je in sbb in xor hlt (bad) sub aad or pop or mov push and sub push repz xchg sbb out btc lock das mov xchg push sahf or xor mov push inc nop or clc outsb sahf and pop subl les cwtl push loop pop movsb es aam xchg dec enter aam mov push test push pushaw pop mov or cmp les xlat jp inc pop es bnd pushf mov nop lods test adc leave or (bad) adc pushf cmpl sub jne jns rolb fdivl repz ja in pushf cmp lods add adc aaa mov gs fwait cmp push xor aaa sub lea test lcall fdivr cltd jl dec bound movsb in jmp push in insb cmp cmp jl (bad) pop mov (bad) das scas pop nop aaa test jmp repnz sbb jle inc cmpsl xor xor rorb push mov inc adc lcall lods cmp sub lock pop xchg hlt fcmovu aad fsubrs repz lods mov cmp ds mov push xchg (bad) mov ljmp dec arpl aas sbb ja ds inc xor out mull add sub and mov (bad) lock in xchg push mov test cmp xlat xor les jge insb and inc in out int3 mov inc jbe in outsl movsl xchg fistpll mov into adc cmp mov push nop shrb imulb xchg outsb push in xchg bound push mov mov or pop popa rolb xchg loope push insb (bad) imul jne ja,pt jmp xchg inc icebp aad fisubrl andb push mov orl cmp fcoml je sbb jb dec mov fisttp inc (bad) xchg xor mov data16 add scas or ficoml xchg xchg cmp (bad) xor mov fwait dec hlt (bad) sbb stc aam rolb (bad) dec cld adc out xor fsubrl sbb repnz sub xor mov call addr16 insb into pusha adc test push scas add sub xor in pop pop inc sbb jle icebp mov xor mov scas xor loope xor cmpsb (bad) cmp mov and into int3 or sti sub hlt jp inc or test xchg pop cld mov inc pop (bad) fimull inc and push (bad) test lret cs mov fld1 inc adc jnp xchg in mov sarl mov outsb push and jecxz add negb stos cmpsb popa jno sub or pop fsubl pop scas loop scas sbb adc inc fmul sti stos push cmpsb pop dec aam jns mov loopne rorl cmc mov dec sub xor inc in popf subl subl popa test loopne cld call sti ds and loop mov stos xor aad (bad) cmp cmp pop sub adcl dec clc and shlb add adc repnz mov out xor leave int faddp ds cmp dec aaa push imul lcall movsl jno jp ljmp jecxz mov popf aam lret ficomp push insl pusha and sub aas mov test jno std push incl pushf cmpsl jp icebp jnp es fwait mov test in inc fidivrl aaa mov or ja sbb push pushf jae xchg xchg pop hlt test xchg sbb pushf ljmp loope test shrb shrl notb mov add push (bad) cmp nop rolb jp clc xor add mov or movsl push add lret call outsb ljmp xor mov jno notb xchg imul fidivl cmpsb test dec lock mov mov clc (bad) dec (bad) or int aas in loopne test (bad) jno sub scas add xchg imul mov int3 xchg fsubrl push push ffreep mov mov shll sbb cmp mov mov add and mov sub fwait loop or int inc pop rcr in scas mov aaa or sub das inc leave or loopne pop jge std frstor inc xor (bad) push rclb outsl clc fistpl push and xor sahf dec sarb adc or in mov sub cmp outsb test push sub inc push daa mov je dec inc pushf sub jmp fs cmc inc sarb pop adc dec cmpsb test lahf iret inc lret mov jnp popf cmc xor int sbb cli push and inc jb sarl notb mov inc js sub push aam mov negl out xor imul add push into cmpb dec mov mov test cmp shl pop movsb inc cmc fwait jae fcomps mov xchg mov fidivrl cmp aad sub (bad) and push sub xchg or dec divb cmc xchg push daa call add mov mov jae insl inc lahf je,pn pop adc hlt inc lcall lret mov fldl dec dec fidivr sbb roll insl rorl cmp xor les dec cmp mov insb outsb decl jl hlt jge aam mov es addr16 enter cltd jg push or add das or jmp sbb cmp push cmp mov xchg sbb movsl mov xor inc jo rorb xor mov cli cli dec push loop push roll jbe mov mov inc lahf jno scas enter xchg cmp mov ds xchg or jg stos data16 clc pusha pop nop mov imul arpl pop cmp imul sahf jg inc pushf cmpsb pop pop lods xlat test in loope ds mov xlat cmc stos cmpsw iret and xor les mov (bad) inc xchg test lahf in mov xor inc pop movsb lret push repnz jle lret pushf es repnz (bad) mov sbb mov stos (bad) aaa je (bad) cld fsts out or mov flds dec mov cld mov cmp mov (bad) mov mov scas sub stos pop or cmp movsl sub inc mov inc rolb dec dec jnp dec test call testb push mov ljmp popf jnp call rcrl sub jae sbb mov pop pop hlt xor lret insb mov xchg add inc daa dec adc cmp push enter fadd sbb sbb stc pop nop lock xorl jecxz xchg or out daa pop or mov mov dec or aad cmp out pop inc mov cld lret cmp lret (bad) mov xor or jge xor rorl ret adc mov orl and ja notb push (bad) sbb inc test mov cmpl xchg jl mov test pop and pusha dec jl arpl sbb repz inc mov lock and daa fwait lods jl pop jbe test mov inc movsb das mov xchg mov iret adc hlt test test (bad) mov insl fldcw das dec fwait sub adc shlb sahf sbb mov les je icebp cmc sub repnz pop cmpsl inc fldl sbb cwtl mov sbb roll jb dec fsubl repnz push insl lock loope insb cmp movlhps (bad) mov shrb cmp or pusha stos xor push push pop push roll cmp loopne adc aad sub out dec mov pushf cmpsb test dec das lock in push iret xor int lret ljmp negl dec and in addr16 xlat sti clc pop jno or hlt add inc xchg test sarb cmpsl sbb (bad) and jno stos fdiv out or sub in inc addr16 jnp sbb dec cmc popf ret data16 das sub icebp jl sub scas xchg jns jbe mov push arpl stos enter cmc lahf fsubl call clc push pop test mov lahf nop jmp out aaa push xchg push (bad) ljmp push fistp (bad) test rolb mov call xchg sbb pop sub jns sbb fcmove push (bad) and pop push rolb pop mov movsl shlb aas out mov or fistp int3 jmp cli xor mov add jp xchg aas xchg xlat add inc xor push pop cmp mov into popf xchg lods push out cmpsl jmp mov lcall (bad) and outsl mov es sbb mov xchg inc mov jmp inc adc dec ljmp xor aad clc mov or add iret cmp xchg mov adc adc dec mov leave xchg loope add inc lret js dec adc cmpsb outsb pusha cmp in xchg jmp outsb pushf loop push into std fimul add lret aam pop jne xlat lahf jno and cmp dec test repz lds dec add push jecxz cld adc or push dec les scas adc jle lret add in mov bnd or pushf add cmp aaa fistpl sub or sahf outsb jno xor lea add aad pop pop cmpsl pushf add ds cmp stos xor pop push add cmpsb in inc scas mov mov pop sahf pop pop nop dec sub iret and or pop mov inc (bad) dec lods imul sub in pop (bad) push pop inc inc pop jne imulb mov aas cmc into lahf push jnp jne cltd sub xchg pop xchg adc movb (bad) imul (bad) push inc fnstsw adcl incl (bad) and lds push xchg xchg sbb mov jle (bad) jecxz movsl cmp rcrb mov jmp sub pop pusha push fimul popf stos lahf and imul pop ffreep scas jp mov mov cs xchg out je mov jmp loopne dec in or sbb test in cmpsl daa in xchg (bad) cmp add mov rorb cwtl pop push mov sub add dec rorl enter (bad) ja mov (bad) or fs roll xchg ret jnp popa insl stos xor cmp xlat inc xor push push or pop outsl pusha push mov loopne push arpl movsl jmp in xor mov fnstcw and stc mov outsb xchg leave sbb les inc push daa xchg imul dec fwait jmp (bad) psubw orl pop stos jecxz jl repz lods and fisttpl flds scas sbb pop xlat addb push or pop test aam fcmovnb lods nop dec adc call nop inc sub je rorb divb push mov fistl fdivrs out test jl lock inc sbb xor dec sti xchg fiaddl mov popa test lods int xor xchg sub outsb dec enter int3 xchg xchg cld adc fcomip shll inc aaa aad fdivr dec cltd pushf mov xor rcll add sub cld inc mov (bad) cmc sarl jge add popa xchg mov aam jns add sbb mov in or data16 mov push std jns cld cmp pop mov mov inc ja icebp (bad) jmp jmp faddl (bad) movsl rol adc xor popa mov jo mull in mov and mov and fisubr or adcl pop dec add push mov add mov pop pop xor insb mov push jp dec (bad) js adc mov mov mov push ds mov gs addb xchg jg stos es add add data16 das lock les test sub xlat dec cmp (bad) int3 iret inc les pushf loope sbb add mov jl cmp out mov cmp lea fadds jg jae loop jl call pusha in loop add lret mov les or pop pop cwtl xchg jne or mov mov xor (bad) (bad) add lret add das xchg push xor dec or inc jle (bad) lods add xchg and lods jmp mov and cmp (bad) scas lcall dec cmp xchg stos fidivrl pop lahf in mov jecxz sbb nop rorb and cld xchg jmp sbb nop sub (bad) adc out sbb fisubl popa rcll mov push out arpl rol add adc sub push gs pop pop pop mov in inc outsb inc sub loopne stos cmp cmp loop cwtl mov xchg cmpsl stos stc out jae mov mov out sub xlat sub xor cmp pop loopne sub and mov lcall adc lds hlt and jmp out je mov push push adc push and ret mulb inc rorb inc dec mov (bad) and clc dec outsl hlt and out sub push pop mov sti push sub cmp push pop sbb leave and and jae mov push int3 push add jge cmp and push sub gs (bad) xlat mov dec jno jne nop popa adc add pop ret leave xchg push test xchg fistpl xor jne,pt jnp jle dec sbb dec jo pusha (bad) out pop popa pushf frstor sub cmpsl ja push sub sub push mov push push xor sar es ja inc aaa stc xchg andb fs or inc mov popa outsb out sub repnz aas mov (bad) pop xchg mov inc or or gs repnz mov mov (bad) jge ret out mov enter fstpl pop mov jb mov into dec xor dec mov mov pop adc push decl aam adc cmp dec cmpsb jns orl lahf cwtl (bad) mov out hlt jns jnp,pn in xchg in inc or pop movsb cmp int3 clc cmp lret sub ret cmp inc sbbl das pop notb in inc mov or xchg ss shl aaa add cmp mov mov int mov mov outsl sbb xlat sti loope lcall xor jo xchg push jg ljmp stos pushf (bad) xor mov push fwait adc pop loopne pop shrb insb pop pop scas fildll add jp add loope fucomp negl test fmuls fs pushf pop jmp mov (bad) out mov xchg mov push enter mov push ret shr enter xchg inc fnstcw xor push xchg std mov inc adc loope (bad) in sub adc jb cmp mov (bad) dec mov adc pop clc fildl and mov cmpsl mov mov ja xlat (bad) fiaddl gs and and je push sub sahf in dec jle or push movsb jb loopne std pop aaa hlt cs and and xor inc sub not mov pop aaa data16 nop (bad) jge push ljmp add (bad) std add mov mov ss fidivr xchg insb xchg or or lods sub push insb or push adc xchg sub add mov pop fidivl lahf shrb ret push das fsubp inc dec inc adc incb push inc (bad) mov int mov int ffree sbb sub xlat push mov cmp pop adc jle add ljmp mov jbe dec insl jecxz cmp mov movsl jl sbb mov mov aam inc shlb mul mov mov fs adc stos fnstsw pop addr16 dec mov arpl mov sar insb lds gs adc xchg ficompl loopne data16 xor out push and adc pusha cmp cmpsl mov jge fisubl cli and pop mov out xor sub (bad) push xor adc ss sbb sahf nop xchg push jae or and pop inc push popa ret loopne ret adc int3 inc ret mov out test mov pop test add hlt push dec lea jmp pop or cmpb fstpl inc leave push sbb add cmp adc cmp lds fild loopne bound fnstsw bound fs pop and xlat jno cli add pop pop cld movsb dec mov mov es jg test sti rcrl pop mov rcrb pop push pop pop push cwtl cmp add sbb push xor (bad) add daa push cmpb xchg fmul cld loopne cwtl aaa sbb jmp fisttp scas push cmp dec call push sub xlat jle mov mov outsb mov xchg adc mov push pop xchg or lcall dec sbb push jnp xor adc xchg test adc inc push push mov lds cmpsl int inc in fbstp mov or sub xchg xor gs dec int mov add lret test xchg lcall imul pop outsb fdivs ljmp mov inc loop roll int3 pop sub outsb jl mov std jno test cld sbb les push test rcr outsb je xchg mov adc push xor mov cwtl stc ja xchg popf je pop (bad) mov jge and stc mov dec stos clc xlat pop mov and pushw and int mov pusha out sti mov icebp out cmp (bad) aaa pop xor test mov xchg ficom mov xchg mov sub fidivl lds push notb sbbb jmp loop mov dec sbb shlb jmp fadd scas dec push push sbb cmpb jns rol inc bound pop jno mov mov sbb lret mov ret or sub into lahf decl mov sbb push xchg ljmp inc clc jl jnp mov loope test cwtl dec cmp data16 dec xor stos les outsl hlt dec push add cmp ljmp mov pop cmp iret xchg mov int3 cmp pop and xchg xchg pop aad pop xor and jb push jg orb test aas push arpl sub sbb stc mov lea aam cmc sub pop adc shrb cmp mov (bad) iretw mov lods fidivr (bad) repnz (bad) jmp pushf dec pop pop enter daa cmpsl dec ror xchg jge out mov jno aas jmp xchg push pop push push inc push jnp mov dec mov add fwait xchg sub mov jp,pn or mov icebp aam sbb add les jge xorb xchg (bad) fisubl mov sbb push inc xchg rorb jno or jmp bswap (bad) jo (bad) nop cs sub jl jno stos sbb xchg scas in insb test mov mov lret loop lret and in sbb xchg out int3 (bad) movsl sbb imul inc dec insb dec hlt call xchg push subb in mov push fdivr rcll out (bad) scas push push loop movsl sbb in xor vsubss mov cltd pop popf jbe pop jl test xor push cmpsb (bad) imul cmpsl pusha or mov in nop nop loope xorl sub repz test fcmovne mov sahf inc enter sahf call out xchg jns outsb test xor test in dec cmp push jae sub (bad) push (bad) call imul fistp test push pop sub mov (bad) jnp (bad) movsl mov mov cmp ja mov push pop aam mov push sbb aas ja xor imul in das mov jp les xchg cmp sbb imul pusha std and lods mull nop jbe imul leave (bad) pop mov mov iret xor dec pop daa cmpsl jo lahf ja in pop (bad) dec in mov inc xlat xor sbb adc (bad) lcall mov mov outsl loopne add lcall in sub das loop mov pop sti push fcomip cmp jno and out stos das add dec dec xlat call mov and fcom pushf and loopne pop xchg mov xchg sar movsb and insl push (bad) lods xor add pop insb adc jl ffreep pop jo stos rol push lods insl jp add out int3 imul or pop js scas out out in (bad) sbb push shlb mov dec xchg xchg ljmp sbb dec jg stos in jl jb inc out mov jno shll xchg sbb clc icebp pop sbb mov in cmp stc push ret xchg pop leave stos rclb fs jmp dec xor (bad) dec sub cmc imul inc outsl xor ror mov mov inc mov inc dec pop icebp decb outsb out mov sbb mov sbb out daa test pop xchg je movsl push push jnp leave sbbb mov lcall jle or ret cld dec std adcl pop scas cltd (bad) mov add mov sub outsb cltd mov inc lods adc and mov mov jnp inc addr16 push sbb les jg cmp arpl jle inc rcll das scas mov mov lret mov push ljmp dec (bad) les push sub rorb pop (bad) xchg adc lods sub mov call mov jge adc (bad) stos add leave mov pop push imulb popf and leave sbb std mov adc mov add jmp pushf push mov sbb ret adc jge out inc (bad) inc add loopne xlat sbb push lds fisttpl sar icebp jae pop pusha and rol and mov mov popf sub dec pop vpsllw scas sub js les jo mov and (bad) lock mov fidivr xchg and sti mov mov mov pusha icebp pop aad ret mov ljmp mov or xor xchg jne rcll xchg lret and sbb clc (bad) cmp push ss dec (bad) cmp mov fistpll inc hlt sbb (bad) clc imul ret idiv out (bad) dec in jne dec mov subl jmp dec and push int3 loopw,pn add jle mov dec sbb les test inc fildl sub fsub ret arpl leave xor outsb or or mov movsb add sub lret mov jb sub inc mov ret js push mov sbb insb pop outsb arpl xchg and stos (bad) adc mov inc dec inc das xor xor into xchg jl in loope pusha scas ljmp or out addr16 test mov aam jae adc arpl roll sub fldenv or mov (bad) jecxz cmp inc cwtl out cmp loop divl imulb rcl mov inc mov mov (bad) jmp push cld xchg imul jge scas and pop cmp fnsave fistl pop popa std cmp test imul les hlt rcrb jnp ret mov mov xor cmpsl push jle,pn jne gs jge push lods pop test add fcoms mov xchg dec es xchg jp pushf and pop cwtl sub repz and sbb sbb adc dec ss adc xchg insl mov adc ljmp cmp mov xlat jecxz add fisttpll in sub into pusha scas xor jnp sbb xlat icebp cmp add repnz inc jle mov fs mov sub (bad) push push outsl lret lahf negb lds mov out repnz pop in mov or sbb pop (bad) xchg dec ja cmpsl dec (bad) push mov (bad) scas out pop das push mov dec xchg fs call inc fisubl lods loopne sbb ljmp lods push out fild out dec mov rorb cld das push push cltd (bad) push push dec jns ret dec scas les and in xor sbb inc sbb arpl das outsb pop fdivs or sbb xor loop lds or or popa mov add rcl rcrb cmpsb xchg ja clc fistpl test dec dec sbb arpl lds xchg push cltd cwtl xor outsl add push inc insl jmp test adc iret (bad) hlt add lock dec sbb les leave aas (bad) test popf mov pusha push insl inc loopne hlt mov pushf cmp mov sub fadd cltd mov imul mov mov aas add inc jnp add cli cmp sub push mov sti in scas loopne outsb pop inc jl dec adc xchg inc pop inc push and repz lahf push push loop iret aam enter inc lods jp lock pop inc ss add mov add cmp adc in mov pop adc arpl xchg adc xchg adc stc add pop jns icebp popf pop adc daa (bad) and or sbb test xchg imul outsl int3 insb into js insb (bad) daa add popa push sahf out fdivrl cmc and out jae test outsb inc out loopne cmp into push push decl xor addr16 xchg push out mov mov xchg xchg add out popf inc mov xchg clc mov inc outsl rorl adc lods pop sbb sbbl adc push push movsl mov xchg mov repz jg stos fmull jb test push or adc popf sub push pop scas loop xchg ljmp adc cmp jno aam out push in cmp pop mov gs xor je stos push mov inc je je push inc nop in scas (bad) fsubrp and test imul lea lods xchg (bad) lods mov outsb das adc (bad) xchg movsb sti push and pop cmp or mov pushf cmpsb xchg pop mov enter rclw push pop arpl movsb mov and mov cmp and mov fprem mov add mov jge loopne out or xorb adc xor inc dec cmp outsb movsb mov test (bad) mov popa cmp out and inc mov dec mov and adc mov sub cmp int (bad) out lret cld mov sub (bad) add mov mov insl adc mov outsl pop adc xorw inc loop adc cmp pop push adc jnp fadds cmp in out sub fldcw pop cmpsl lret xor lret mov data16 int and pop or call (bad) bound push outsb enter mov jne jge sub subl adc mov dec mov mov mov ljmp aam nop push cmp sbb push cwtl adc ret adc xor iret int int3 inc or cmp xor pop xchg cmp mov movsl sbb xchg mov in cli dec sub imul daa sbb jmp into push repnz out jno repnz je sahf xor int jmp sbb push push mov pop push add addr16 adc or inc sahf and xor jmp xchg sbb push call adc or mov mov add movsl insl ret sbb lods sub pop lret xchg bound pop sbb add cmpsl pop (bad) movsb outsb sub sbb mov pop aad cmp dec or fdivr xchg or in sbb xchg or cmp ljmp push stos stos inc sbb jo mov mov ret mov das push pusha mov dec int push inc pop ret jge fdivrs xor or lods xor shlb push dec cli popa cmpsb sub xchg jl or test xchg (bad) xchg js ret sbb sub sahf xchg arpl cmp test fwait les dec aaa aad adc or mov pop jne imul or int3 push lea push add daa dec mov in (bad) sbb jl mov jne push push out xor fstl test out xor add mov pop jmp addr16 jp dec or mov xchg setg add movups mov lcall hlt mov inc mov fisttp inc repnz cli es idivl ret pushf test mov mov in outsl xchg mov (bad) push cmp push sbb ljmp mov bound pusha jns inc mov mov pusha fnop pop push es pop add daa and stos stos stc jle frstor cmp pop and cld lds push arpl sub or sbb (bad) xchg leave mov clc fimull adc lcall insl sbb pusha sub jae xor jg pop jl pop sub add dec iret popa push push ljmp mov aad mov and or mov cwtd inc fwait mov inc jno jbe lods loop mov cmp mov cmp mov and daa push push pop add push mov jns (bad) stos mov and imul mov test mov dec xchg ss test push jecxz jle or push push scas mov stos xchg cltd imul mov push cmpsl fwait cwtl mov jns dec sbb xchg mov scas test repz push inc fadds pop scas sbb adc mov lods xor inc les (bad) int inc jl sub call mov xchg fildl push jl aam popf call cld adc cmp cwtl lds mov fdiv xor jmp dec dec js add fmulp and mov and or in sbb adc (bad) ret inc push mov pop (bad) jle mov push xchg mov enter inc add pop mov add push sbb fistp out mov movsb sbb xor push dec push rolb push ret cmp loop adc xchg (bad) outsb cmp cmp (bad) andb xor push lcallw sbb popf icebp and out pop dec leave jne fldcw call les (bad) mov subl or inc cli scas sub mov sub pop mov add inc jle mov dec lods inc cmp jbe imul add adc (bad) jae into pop out fistl dec test xor loopne pop stos and adc pop stc test mov aam push mov enter jno dec mov daa das jecxz xor sbb (bad) or xchg stc mov movsl or jns jae repz pop xlat push incl test mov mov jmp adc and aas cltd mov scas call (bad) gs lret adc dec aaa mov pop xor popf mov in xor sarl sarb cmp insb add jecxz out cmp sbb addr16 inc mov movsl add sbb inc or loop test sahf out rcrl push cmpsl jo sub loope mov popa dec cmpsl xchg cmpsl ljmp movsl test cmp cmc sub cmpsb mov jae rclb loop out sub push sub inc idivb mov mov mov ret fidivr pop popa imul mov stc icebp (bad) stos lods jp fwait add or mov fnsave jp mov (bad) xlat (bad) sarl add mov xchg sbb fisttpl jns mov mov add loope dec jl mov int push xlat sub jae iret jo sbb jb sub pusha shlb mov ret lock aam xchg mov mov sti or jmp mov jnp pop cs cltd lods pop call or adc jnp lods cmp sbb arpl mulb jns xlat and adc add push dec jg xchg mov adc push fsub add push sub or mov sub mov lods add inc push mov rcrb out mov or pop jno (bad) ret (bad) in sbb sarl adc jge push les lret jmp imul or je push std or pop lret sub xlat loopne int3 or sbb sub adc mov pop test fcomp inc xor or sbb mov loope sbbl jno test xor mov jge pop loopne sub lea fisubrl and lods push sub xchg xchg pop (bad) adc movsl sbb out mov les add (bad) jmp mov std cmpb fiaddl aas call lret test pop push call add imul inc stos int3 or jno sub dec jo xor out int lea out std lods push test lock push sub (bad) ja dec add js or je xorl or pop rolb in out sub out dec outsl clc pop mov pushf mov nop pop cmpsl insl (bad) in cld mov daa ret jge and add or lret inc cmp fwait std jg movsb push mov pop xchg stos jo gs inc inc fcmovbe mov sbb xchg insl sbb cltd dec xchg insl fmuls sbb xchg add (bad) repz xor adc sbb es mov (bad) cmc imul mov mov mov fdivrs add mull or push js jge aas popa pop xchg xor dec pop ja jle fsubrs and fwait in fildl test lret jb mov jne stos push mov (bad) xor ljmp mov jmp fnstenv pop pusha daa pop inc sbb scas int3 dec aaa bound mov adc in mov lahf hlt sub into pop adc les push icebp mov das push imul sub sub pop jecxz add insl cmp and fdiv (bad) push mov cmp jae push cmpsl jae inc or lret insb test xchg es add icebp test sbbl push add movsb loopne (bad) loop mov lods rclb mov sub std jmp mov sbb test lods (bad) adc ja movsl lock lock cmc idiv mov int3 jp insl add pop pusha inc pop loop movsl cmp pushf repnz sub shrl or add and add push jo mov and inc inc sbb adc xchg int3 inc or fmulp jb jmp leave dec pusha jge roll lds dec pop sub pusha inc sub push sub js out lcall cmp stos hlt scas inc mov lods xchg or jne popf in dec test dec mov insl shrb and lahf pusha push mov lods cmc mov mov stc xchg cmp aam inc adc mov mov push mov or mov or mov jmp xchg ftst adc or js mov sub scas cmp jbe out adc pop in icebp insb and fdivs int fmull int3 cmp add shll outsl or jl pop fstl xor xchg jg xor push push cs mov sub xchg push sbb bound mov push and outsl hlt testl sub fsubs imulb in sti repnz mov sub push cltd mov or (bad) daa and jecxz push mov push out or dec mov jle outsb outsl ficompl add cmpsl and vmread pop notl (bad) jns mov ljmp cmp sbb sub test (bad) push lock jmp cmp popl iret loopne (bad) mov outsb dec xor sahf xchg hlt mov (bad) push cs dec fnstsw xlat cmp jle std cmpsl or mov setno lret cmpsb add jle jl push ja inc pop xor and pushf pop inc inc adc and pop adc (bad) inc outsl add jg jnp mov add inc pop dec or icebp dec stos cmp dec fwait ret fistp mov lahf fnstsw in xchg into fstpt scas add inc cmp les movsb mov mov cmp push imul mov popa inc and fisub (bad) ljmp cmpsl iret mov mov mov cmp into add sahf inc arpl add mov adc cmc push ja lret jnp mulb in pop hlt push mov outsb prefetch xor jl idivl mov mov loop add dec sub mov jnp inc or xor mov into sarb sub outsb in cmc lock andl js xchg aas lea ret pop xor leave popf ja push dec add or stos cmp mov mov lds xor xchg fs test or pushf ss addr16 (bad) pop cmpl inc out xchg xchg lds les jno cmp jbe mov negl xor loop movsb inc dec push mov test bound and testl mov outsb lret push pusha stos out mov sub jg mov fnstcw mov shrb mov cmp (bad) sub stos jmp daa cmp loopne push xchg cmp leave ss pop inc call test push sbb jbe sbb ret sub fsubr mov outsb scas inc sub push mov movsb dec and sub mov insl mov pop xchg sbb loopne (bad) mov add adc mov dec addr16 (bad) ja outsb mov out outsb leave xchg cmpsb lret pop mov push mov sub push sti or (bad) test cmp (bad) dec (bad) mov lcall (bad) jecxz mov xor cmp adc fmul xlat add mov and cmp and xor and cmp insl loopne shlb push in pop cmpsb or sub pop leave add cmp push xor cltd sarb sbb cmpsb adc dec add add add add add add add add push or add call add add sub add push sub add push and pop xchg lock add sub and (bad) xor sub add sub sub add sub add add sub add xor add adc add add add add add sub add or add or push outsl sbb add or outsl sbb xor add or cmp add add or sub add or and add or pop dec loopne adc add pop dec adc pop dec adc push loopne pop push adc adc sbb push pop adc and icebp into rcll or push xor or inc fwait adc cld xor adc cmp add add adc and dec adc and dec pop adc adc and adc adc das add or pop dec sub adc sbb sbb dec loopne adc or sub adc sbb sbb dec sbb add outsl adc push incb adc add or pop dec sub adc sbb sbb dec loopne adc adc sbb sbb dec sbb push adc sub add or push and dec popa adc pop adc or adc adc adc or or adc pop adc adc adc incb sub push rcrl pop pop adc add adc pop adc adc adc adc cmp (bad) (bad) lcall adc adc pop adc adc push adc inc add push adc or sbb or adc pop sbb adc adc adc sbb adc pop sbb adc or or pop adc add sbb pop adc sbb adc add sbb adc pop or pop adc and push pop or xchg and addl sahf adc pop or push pop or pop or pop or push pop or adc pusha sahf adc sbb push sbb popa sahf adc push adc push xchg adc pop xchg popa data16 adc push xchg and inc pop or and push push adc push xchg and mov adc push adc push xchg adc pop or or sahf adc pop or push pop or negl adc and mov lea and push pop or push pop or mov sahf adc sbb and push push xchg pop sbb and push sbb push sbb adc push xchg sbb and push pop or push pop or xchg popa data16 adc adc pop or adc adc sbb push sbb adc pop push adc pop push xchg adc sbb push sbb cld pop adc adc and adc adc pop adc pop xchg adc pop or sbb push sbb add adc sbb push sbb and movd pop pusha sahf adc sbb push sbb adc sbb popa sahf adc adc push xchg pop adc adc sbb push sbb add adc adc pop or and push sbb push sbb inc pop ret sahf adc pop xchg and xor pop adc adc sbb push sbb adc push xchg popa sahf adc pop adc pop xchg and int test sahf adc push xchg pop mov and add adc adc pop adc pop xchg adc pop or push pop pusha sahf adc pop or push pop or test sahf adc push pop or and push sbb push sbb xlat popa data16 adc pop or push pop or daa cld sbbb adc pop xchg and js pop adc adc push pop or push pop adc pop xchg and sahf adc pop adc pop xchg adc sbb and sahf adc and adc adc sbb push sbb fcompl adc sbb push sbb or pop pop pusha sahf adc adc pop xchg pop stc pop pop adc adc adc sbb and and push pop xchg sbb adc push sbb push sbb add adc sbb push sbb pop sahf adc pop setne punpckldq and push pop movups pop setne adc and push pop xchg pop sti pop pop adc adc adc sbb push sbb adc sbb push pop movups pop setne and adc pop or sbb and push pop or push pop or pop sbb pop or push pop or adc pusha sahf adc adc sbb and push sbb and push sbb push sbb push sbb push sbb adc push pop xchg sbb adc push push xchg pop inc pop adc adc adc pop or adc adc adc pop xchg pop out pop pop adc adc pop or and adc pop or and mov in popa data16 adc push sbb adc push pop movups pop setne nopl xchg popa sahf adc pop or xchg adc pop or and push sbb and push pop or push pop or lods pop sahf adc adc sbb and push pop adc adc pop or xchg adc sbb push pop setne bound and and push pop setne bound and push push adc sahf adc adc sbb adc adc sbb inc pop adc push sbb push sbb mov push adc push xchg adc push xchg popa sahf adc adc push xchg pop lret pop pop adc adc sbb and xchg pop dec pop adc adc mov adc push pop push adc pop push xchg and sahf adc pop or push pop or popa data16 adc sbb push sbb and sahf adc sbb and mov and push sbb lcall adc adc pop setne mov push sbb adc popa adc pop pop pusha sahf adc adc push xchg and (bad) lcall adc adc pop push adc pop push xchg adc pop push xchg popa sahf adc adc push xchg pop push pop pop adc adc pop setne adc and and push sbb adc adc sbb push sbb out data16 adc pop movups sahf adc sbb push sbb sbbl push xchg and pop adc adc push sbb adc and push push xchg pop rcrb adc push pop or lcall and and push pop or add adc adc push push xchg pop pop pop pop adc push push adc adc adc pop push xchg and stc (bad) lcall adc adc adc push xchg pop lods pop pop adc adc pop movups pop setne jmp sahf adc adc push xchg pop sbb adc adc push adc sahf adc pop or lcall and push pop or add and and push pop or add adc and push pop push xchg and (bad) lcall adc and push pop or lcall adc adc adc pop push xchg and add pop pop adc adc adc sbb sbb adc adc sbb and sbb pop or adc adc pop or add and and push pop or lcall adc adc pop or and sbb and (bad) (bad) lcall adc adc pop or push pop or jno sahf adc sbb adc adc sbb push sbb xchg pop sahf adc sbb push sbb popa data16 adc adc pop push xchg and pop adc adc pop push adc sahf adc sbb sbbl push sbb and cli (bad) lcall adc adc push sbb pop dec pop pop adc push sbb and adc and icebp bound and push pop or and push sbb jle sahf adc sbb (bad) lcall and push sbb push sbb xchg and sbbl push pop or adc adc pop push adc pop push xchg adc pop or pop or xchg and sahf adc adc pop or add adc adc pop or xchg adc and pusha sahf adc sbb add pop adc and push pop or adc push sbb and push push adc push xchg adc push xchg popa sahf adc sbb push sbb adc sbb push sbb adc push pop or pop dec pop pop adc and push pop or pop ficomp adc adc sbb (bad) lcall and push pop or xchg and sahf adc adc pop or add adc adc sbb push sbb popa sahf adc adc pop or and (bad) lcall adc adc adc pop or and (bad) lcall adc adc adc sbb adc adc pop adc pop xchg and lock mov adc sbb adc adc sbb push push xchg pop xor and and push sbb adc push pop or and pop rcrl and and push sbb and push sbb and pop xchg pop bound and push pop or and adc push xchg sbb and push pop xchg sbb adc adc adc pop xchg pop ficompl adc adc push xchg pop cvtps2pd and and push pop setne bound and and push pop setne icebp pop pop adc adc adc pop setne bound and push pop or push pop or pop sahf adc sbb push sbb xor data16 adc adc sbb adc adc adc sbb and and push pop xchg pop stc pop pop adc push push adc sahf adc adc pop xchg pop negb adc adc adc pop setne bound and and push pop setne bound and and push sbb adc and push sbb and and push sbb push pop push xchg sbb and push pop or push pop or xchg popa sahf adc pop movups adc pop adc sahf adc pop push xchg pop and and push sbb pop xor adc adc adc pop xchg pop icebp pop pop adc adc sbb and xchg pop rcrb and and push sbb pop ret adc adc pop push xchg pop out pop adc and push pop push xchg sbb adc adc adc sbb pop cvtps2pd and and push pop xchg pop sti pop pop adc adc push sbb pop out pop adc and push pop xchg sbb adc adc push pop xchg sbb adc and push pop or adc adc adc pop or adc adc pop adc sahf adc adc pop or adc sbb and and stos wrmsr pop adc adc sbb push sbb iret pop sahf adc pop push adc sahf adc and loopne jnp adc adc push xchg pop or and push pop adc pop xchg adc pop xchg popa sahf adc pop push adc pop push xchg adc sbb popa sahf adc sbb push sbb and stos wrmsr pop pusha sahf adc pop movups pop setne dec out inc add adc push adc push xchg and push lock pop sahf adc pop or push pop or and adc push push adc push xchg pop adc sbb push sbb or sahf adc push adc push xchg adc and dec insl fwait pop pusha sahf adc push sbb pop adc and push sbb adc push pop adc pop xchg and sub iret pop sahf adc pop or and adc adc adc sbb pop adc adc push adc push xchg adc pusha sahf adc pop or and add add and and push sbb adc adc pop or pop stos pop adc adc adc sbb pop adc adc adc pop or add adc adc adc sbb pop adc adc adc sbb adc adc push pop or lcall adc and push sbb adc adc adc pop or adc adc adc pop or adc adc pop or and adc sbb sbbl or push pop or xchg popa sahf adc sbb push sbb jle sahf adc sbb and xchg pop pop bound and push sbb push pop or push pop or adc pop or push pop or adc sbb push sbb xchg and push sbbl or and and fstpt int adc push pop or push pop or jle sahf adc pop or push pop or fidivrl adc sbb push sbb dec pop sahf adc pop or and pop setne and adc sbb push sbb popa sahf adc sbb adc push pop or and push sbb sahf adc push pop setne sbbb and push sbb and dec mov adc pop or and and push sbb adc push pop or xchg adc sbb adc pop setne lea add pop pop adc adc pop or and and push sbb adc adc adc sbb adc adc adc pop setne rcrl adc adc adc pop or adc adc pop movups sahf adc sbb push sbb adc sbb adc pop or adc and push pop or and push pop push xchg and adc adc adc sbb adc adc adc pop or adc adc pop or and adc pop or push pop or pop popa sahf adc pop push adc sbb or and adc pop or xchg popa sahf adc pop or and and push pop or push pop or and cld mov pop or push pop or adc push xchg and sahf adc and outsl push pop pop adc adc sbb and push push xchg and sahf adc push adc push xchg and cld mov push adc push xchg adc and rep add sahf adc sbb and xchg add cld pop sahf adc pop movups pop setne push sbb push pop push adc pop push xchg and pop in pop sahf adc pop xchg and mov adc adc sbb and push push adc push xchg adc pop or push push xchg pop pop adc adc pop adc pop or adc sbb popa sahf adc sbb pop sbb adc pop xchg pop push bound and push pop adc pop xchg sbb push pop or push pop or adc sbb push push adc push xchg pop bound adc pop or adc pop or popa sahf adc sbb adc pusha sahf adc push adc push xchg adc pusha sahf adc pop or and insl mov push pop or adc pop or push pop or adc pop or push pop or adc pop adc pop xchg adc sahf add inc adc adc sub add or or bound adc adc or add adc pop inc incb adc adc sub sub adc push adc sub add pop and adc maxps adc pop maxps push adc pop maxps pop adc dec popa and sub adc pop adc add pop pop pop adc adc adc incb sub add add add add add inc or nop jb add add outsl jb js dec popa imul jb gs insb add add dec inc add add add add adc add jbe xor xor or test add lods adc add jle add add add and jb outsb addr16 add add push add adc add and dec inc add add add hlt pop add and outsl bound add cmp add adc add and dec inc add add add add and jb outsb addr16 add add add add add and outsl bound add push pop add add add and push add add add inc add add or add add and add add add add sbb add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add adc add daa add add add add add add add add add add add add jg add add add add push sbb push add sbb push add or or add sbb push add popa xor add add add add xor xor add xor xor add xor add ja or jns ja push add add xor xor add xor inc xor fdivs sub sbb push add sbb push add sbb push add aaa push add add add add aaa popa xor add cmp push add cmp push add cmp push add aad push add aad push add add add cmp push add cmp push add cmp cmp cmp push add sbb push add cmp xor add cmp cmp add ja push add or add add add cmp aaa push add cmp push push add cmp cmp add cmp push push add push push add xor add add iret cmp push push add cmp xor add cmp xor add cmp cmp add add cmp push add cmp push or inc cmp xor add jle or lods cmp xor add add cmp xor add cmp push push add cmp sub xor cmp push add sbb adc jnp aad push add add cmp lret push push add cmp add push adc and push ds add in push add sti cmp add push add add add add add add add add or or pop add add add or add add add add push add or or pop add sbb add add add add and add add add add and and add add sub add add add add add add add xor add add add add add cmp add adc hlt xor add add add add add add add xor add add add add xor add add add add xor add add add add adc jmp add inc add add addb add add or xor add add add add add add add in xor xor insl add add add add add adc add mov add add adc add fdivl add add add add add add add add add add aaa add add add add add aaa add add add add add add add add push sub or add add orl std or or add add cmp and jmp cmp and adc add add adc add add cmp and fcoms cmp and push adc and rclb add add add add adc add add insl add add add adc mov jbe add xor sub push sub pop jns add movsl pop sub sbb add add insl add add sbb add add movsl add add sbb insl push sub and and add add and add add sub and xchg sub add add sub sub add pop sub sub cs xor add add xor add add xor xor sub xorb xor mov add ss add add add ss add add add xchg sbb add add add or add add add add xchg add mov add add add add add xchg add add adc add add add add add add add push add add xchg add add add add add addb and sbb add andb add xchg add add orb add add add add pop add add addl pop xor add mov add add sbbl or add les add add addl or add add sbb add add add add add add addl or add test add add xchg add add sbb add add add add add add add add add addl or xchg sbb add add add add add add add sbb add add add add sbb add add add add addl sbb sbb add add add add add add add sbb addl sbb and add add add add and add add add add add add add add addl pop xor add adc add add addl pop test and add add add add and add add add add add add add add add add add and add add add add and addl and add add add add add or add add add add add add addl xor add jl add add addl daa int3 add add add add add add add addl sub add test add add addl sub add add or add add add add add add add daa add add addl sub add add addl sub add add add addl sub mov add add sbbl or add add add add addl das xor add inc sub add add add add or add add add add add add add add add add add add add add add add add add add add xchg sbb add add add xchg add xor or add add add add add add add adc adc add adc and add add mov add add adc and add add add xor add add adc adc and add pushf add add adc and sub add jo add add adc push xor add add add add add inc add add add add adc sub push add add add add adc adc add add add adc mov arpl add cmp add add add add adc mov jns add lods or add add add add xchg sbb add add add or add add add add or add add add add or add add add add add add adc and add add add adc push xor cmp add add add and add add adc jae cmpsb add add add add adc sub mov add cld cmp add add add xor cmp add add add enter sarb add add add add adc imul add cmpb add add add jmp aas add add adc jg lock add inc add add adc xchg add add or add add add add or add add add add inc add add xchg add add or add add add add add add les push xor rolb add add add add add add xchg add add inc add add adc sub or add hlt inc add add adc adc sbb inc add add adc push xor add add add add xchg or xor add jge add add addl add xchg or add add add add inc add add les push xor test add add addl add inc dec add add xchg sbb add add add adc dec ss add add dec add add xchg add xor add inc dec add add adc jae pop add add add add arpl add insb push add add adc test push add mov add add cwtl push add add adc xchg ss add fs add add adc lcall or add add add add or add add add add add add add add pop xor sbb mov add add or or add add or or or or or add add or add or xchg add add or or or cmp add add add or sbb scas cmp jno iret cmp addl addl cmp sbb xchg add add add add add add add add add add add cmp add add cmp add add or add add add cmp or add add add cmp add add fadds add cmp add add cmp add add cmp cmp add xor and imul add dec add push add fs xchg add add mov cmpsl add lods add mov cmp add loop sub (bad) call cmp add mov cmp push jmp push and fs push sub xchg cmp push addl sub sahf cmp push loope push xor push xor or imul (bad) add add or inc add or cmp add push adc or lahf push addl and push cmp daa cmp dec cmp or lahf push and addr16 xchg cmp fiaddl cmp or clc push and xchg cmp or lahf push addl sub or xor popa add or sub xor popl mov add inc ds pop jns or xor jns outsb ds repnz add add add add mov add adc add repz add jmp add mov add mov add mov add add add add add add mov add add add add add scas add jg jg jg add add add add add add add lret pop add add add sbb add push add add add and add sbb add fadds add sbb and add add add add add add add add add add add add add add add add add add add add add add add add add inc add jns cltd add aad out add sbb push pop push lods push mov into push in out push sbb sub popf pop ret pop aad loope add sbb insl pop mov add add add and add add dec repz aam (bad) jmp and bound divb adc js stos push stos jmp lahf (bad) ss cld xor daa mov test shrb shrb (bad) call xlat add pop call mov cs sbb jbe and sahf fs and popa int mov addb add push aaa (bad) jg add add add push push add add add add cmp add add add add nop xor add add add add sbb add add pop cmp add aad add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add or test add add or add add add adc test add add addl add addl add addl xor add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add xor add add add xor add add add xor add add add xor add add add add add add add add add push mov arpl mov outsl push scas add mov jne xchg add push xchg add cwtl add (bad) add mov incb mov add pop or and or and pop test pop pop lods add or and int3 add test jp call add pop xchg test push add add add add add add add add add add add add add adc inc add popf add add add add add add add add add add add add add add and test add add add add add js cs add gs subb stos loop stos loop scas loop lods loop mov orb lods loop mov subl mov subl stos loop lods loop stos loop stos loop stos loop stos loop mov subb stos loop scas loop mov subl stos loop stos loop lods loop stos loop (bad) loop lods loop (bad) loop scas add subl loop stos loop mov subl scas loop stos loop mov subl lods loop stos loop mov subb stos loop scas loop stos loop scas loop lods loop lods loop mov orb (bad) loop stos loop (bad) loop mov subb mov orb mov subb arpl outsl jb loop lods loop stos loop (bad) loop lods loop lods loop stos loop (bad) loop stos loop scas loop (bad) loop lods loop mov subb mov subb stos loop stos loop (bad) loop lods loop stos loop stos loop stos loop lods loop lods loop mov subb lods loop stos loop scas loop (bad) loop mov subl lods loop (bad) loop mov subb orb stos loop mov subl mov orb mov orb scas loop (bad) loop mov subl lods loop scas loop stos loop stos loop lods loop (bad) loop lods loop mov subl lods loop lods loop lods loop lods loop lods loop lods loop stos loop stos loop lods loop scas add subl mov subl scas loop lods loop mov subb loop (bad) loop scas loop mov orb loop scas loop mov subl lods loop lods loop lods loop scas loop mov subb stos loop mov subb loop stos loop (bad) loop stos loop lods loop scas add loop scas loop scas loop (bad) loop lods loop stos loop stos loop mov subl stos loop mov orb lods loop scas loop mov subb stos loop mov orb stos loop lods loop stos loop mov subb mov subl loop scas loop scas loop (bad) loop stos loop scas loop scas add subb lods loop lods loop stos loop mov orb mov subl loop (bad) loop (bad) loop scas loop scas loop lods loop mov subl stos loop stos loop (bad) loop lods loop mov orb lods loop stos loop (bad) loop lods loop stos loop (bad) loop lods loop (bad) loop (bad) loop scas loop stos loop scas add orb lods loop mov subb lods loop mov orb scas loop (bad) loop stos loop mov subl (bad) loop (bad) loop lods loop lods loop mov orb lods loop stos loop scas loop lods loop stos loop mov subl scas loop scas loop lods loop lods loop lods loop mov subb scas loop stos loop stos loop scas loop (bad) loop mov orb stos loop (bad) loop stos loop (bad) loop lods loop stos loop stos loop stos loop scas loop scas loop scas loop mov orb scas loop lods loop mov orb stos loop lods loop scas loop lods loop stos loop lods loop lods loop mov subb lods loop stos loop lods loop scas add orb lods loop scas loop mov subb loop lods loop stos loop stos loop mov subl loop scas loop stos loop lods loop stos loop mov orb (bad) loop stos loop (bad) loop scas loop mov subb stos loop lods loop stos loop lods loop scas loop stos loop lods loop mov subb scas add jb jne insb push jb je arpl gs gs xor cs insb add orb stos loop stos loop mov orb (bad) loop scas loop stos loop lods loop scas loop mov orb stos loop stos loop stos loop lods loop stos loop stos loop stos loop scas loop stos loop (bad) loop scas loop scas loop mov subb stos loop mov orb lods loop lods loop lods loop mov subb scas add subl lods loop mov orb scas loop mov subl stos loop mov orb stos loop scas loop scas loop scas loop (bad) loop lods loop scas loop mov subl loop stos loop mov subl loop mov subl scas loop lods loop scas add arpl insb imul gs jns add jae gs add subb lods loop mov subl mov orb loop lods loop mov subl mov subl mov orb scas loop lods loop mov orb loop (bad) loop lods loop lods loop stos loop lods loop lods loop mov orb loop stos loop scas add subl loop lods loop lods loop stos loop stos loop stos loop stos loop scas loop mov orb scas loop stos loop mov subb (bad) loop stos loop scas loop scas loop scas loop (bad) loop stos loop lods loop mov orb lods loop mov subl mov subl stos loop scas add subl scas loop stos loop stos loop scas loop mov orb (bad) loop lods loop stos loop lods loop stos loop scas loop stos loop lods loop stos loop mov subb stos loop stos loop lods loop lods loop lods loop lods loop stos loop stos loop scas loop stos loop (bad) loop stos loop lods loop (bad) loop lods loop lods loop stos loop stos loop scas add subl scas loop scas loop mov subb (bad) loop stos loop mov subl lods loop mov subb lods loop (bad) loop lods loop (bad) loop lods loop mov subb lods loop scas loop scas loop stos loop stos loop lods loop scas loop mov subb stos loop stos loop stos loop stos loop scas add orb loop stos loop lods loop mov subl mov orb scas loop lods loop (bad) loop (bad) loop mov subb stos loop stos loop stos loop stos loop mov subb loop (bad) loop mov subl loop stos loop mov subl loop lods loop scas add orb stos loop lods loop lods loop stos loop (bad) loop mov subb mov subb loop mov subl lods loop stos loop lods loop lods loop (bad) loop lods loop lods loop stos loop scas loop stos loop lods loop lods loop lods loop lods loop mov orb loop lods loop lods loop (bad) loop lods loop scas add arpl add orb scas loop mov orb stos loop lods loop scas loop stos loop mov subl lods loop scas loop (bad) loop (bad) loop mov orb mov subl (bad) loop stos loop mov subl mov subb loop mov subb mov orb subb loop mov subl loop lods loop stos loop lods loop lods loop mov orb (bad) loop stos loop scas loop scas loop scas loop stos loop lods loop scas loop stos loop stos loop mov orb mov orb stos loop scas loop lods loop lods loop lods loop stos loop stos loop mov subb subb stos loop scas loop stos loop lods loop stos loop scas loop scas loop mov subb loop lods loop mov subl mov orb mov subb (bad) loop lods loop scas loop stos loop mov subb loop stos loop (bad) loop lods loop stos loop lods loop stos loop mov subb scas loop scas loop mov orb stos loop mov orb lods loop lods loop lods loop stos loop scas loop scas loop lods loop scas loop mov subl (bad) loop scas loop mov subb lods loop (bad) loop scas loop stos loop lods loop stos loop (bad) loop stos loop mov subb loop mov subb subl mov orb loop (bad) loop lods loop scas loop scas loop lods loop stos loop stos loop stos loop mov orb scas loop mov orb mov orb loop lods loop stos loop stos loop (bad) loop lods loop lods loop mov orb (bad) loop scas loop lods loop stos loop mov subb arpl orb (bad) loop mov orb (bad) loop stos loop (bad) loop mov orb scas loop (bad) loop stos loop scas loop (bad) loop stos loop stos loop mov subl loop stos loop mov subb loop lods loop mov orb lods loop lods loop stos loop stos loop (bad) loop lods loop stos loop scas add orb (bad) loop mov orb scas loop scas loop mov orb stos loop stos loop lods loop (bad) loop scas loop stos loop lods loop mov subl lods loop scas loop scas loop stos loop stos loop lods loop lods loop scas loop stos loop lods loop mov subl stos loop scas loop mov subl subb (bad) loop scas loop lods loop lods loop (bad) loop stos loop lods loop stos loop scas loop mov subb lods loop (bad) loop lods loop mov orb lods loop scas loop lods loop mov subl lods loop scas loop scas loop stos loop stos loop scas loop lods loop lods loop mov subb loop scas add jb popa insl add jae gs cs dec add orb mov orb (bad) loop scas loop scas loop lods loop mov orb lods loop lods loop stos loop scas loop lods loop lods loop (bad) loop scas loop lods loop (bad) loop mov subl lods loop stos loop mov subl (bad) loop lods loop scas loop (bad) loop mov subb lods loop scas add orb mov orb stos loop scas loop stos loop scas loop (bad) loop mov subl (bad) loop (bad) loop mov subl (bad) loop lods loop scas loop lods loop (bad) loop scas loop scas loop (bad) loop (bad) loop stos loop stos loop mov orb loop mov orb scas loop (bad) loop scas add subb lods loop scas loop lods loop mov orb stos loop (bad) loop scas loop scas loop stos loop (bad) loop lods loop lods loop lods loop lods loop scas loop scas loop scas loop lods loop mov subl mov subl stos loop scas loop scas loop stos loop (bad) loop mov orb lods loop stos loop scas add subb stos loop mov subl lods loop mov orb loop lods loop scas loop stos loop scas loop scas loop mov orb loop lods loop mov orb (bad) loop mov subb lods loop lods loop stos loop stos loop stos loop lods loop stos loop mov subb scas loop scas add subl stos loop stos loop lods loop mov subb (bad) loop lods loop scas loop mov subb lods loop scas loop stos loop stos loop scas loop scas loop scas loop (bad) loop stos loop (bad) loop mov orb lods loop (bad) loop lods loop lods loop lods loop stos loop mov subl scas loop scas add subl stos loop lods loop mov subl mov subl loop (bad) loop lods loop stos loop lods loop mov subl (bad) loop mov subl scas loop scas loop mov subl stos loop scas loop stos loop mov orb mov subb subl scas loop scas loop lods loop stos loop (bad) loop scas loop lods loop stos loop stos loop (bad) loop (bad) loop (bad) loop mov subl (bad) loop stos loop lods loop mov subb scas loop stos loop lods loop (bad) loop lods loop mov orb lods loop stos loop stos loop mov subb scas add orb stos loop stos loop scas loop lods loop mov subl loop lods loop stos loop scas loop (bad) loop mov orb scas loop stos loop stos loop stos loop stos loop mov orb mov orb scas loop stos loop scas loop (bad) loop lods loop stos loop mov orb lods loop scas loop scas add orb lods loop stos loop lods loop lods loop lods loop stos loop stos loop stos loop scas loop mov subl (bad) loop (bad) loop lods loop mov subb scas loop lods loop mov subl mov subl mov subl loop mov orb lods loop scas add orb lods loop (bad) loop lods loop mov orb stos loop lods loop mov subb stos loop mov orb mov orb stos loop scas loop stos loop (bad) loop mov orb (bad) loop mov orb mov subl mov subb scas loop scas add subb lods loop (bad) loop stos loop mov orb loop lods loop scas loop scas loop (bad) loop (bad) loop stos loop lods loop scas loop lods loop stos loop scas loop stos loop lods loop lods loop scas loop stos loop scas loop lods loop scas loop mov subb loop lods loop (bad) loop (bad) loop lods loop lods loop scas loop mov subl lods loop lods loop lods loop (bad) loop stos loop scas loop lods loop lods loop scas loop stos loop lods loop stos loop mov orb lods loop stos loop scas loop stos loop stos loop lods loop mov orb scas loop (bad) loop scas loop lods loop scas loop lods loop mov subb scas loop stos loop stos loop lods loop scas loop lods loop scas add subl mov subl mov orb (bad) loop lods loop stos loop lods loop lods loop scas loop lods loop (bad) loop lods loop (bad) loop mov subl loop scas loop scas loop mov orb stos loop mov orb mov subl stos loop lods loop scas add orb stos loop lods loop lods loop (bad) loop (bad) loop mov subb (bad) loop mov subb scas loop stos loop stos loop lods loop stos loop mov subl lods loop scas loop scas loop (bad) loop scas loop lods loop stos loop stos loop (bad) loop lods loop (bad) loop (bad) loop mov subb stos loop lods loop scas add orb scas loop stos loop mov subb lods loop (bad) loop lods loop lods loop scas loop scas loop mov subl lods loop (bad) loop mov subb loop mov subb stos loop lods loop lods loop lods loop lods loop scas loop scas loop (bad) loop stos loop lods loop lods loop mov subb mov subl mov orb loop stos loop scas loop scas loop lods loop mov orb mov subl stos loop stos loop stos loop stos loop lods loop lods loop lods loop stos loop stos loop stos loop mov subb loop mov subb scas loop mov subl subb loop lods loop mov subl loop lods loop stos loop stos loop stos loop stos loop lods loop scas loop mov subl mov orb lods loop stos loop stos loop mov subb stos loop stos loop scas loop scas loop lods loop mov subb loop lods loop scas loop scas add subl scas loop (bad) loop scas loop mov subl loop stos loop mov subb mov subl mov subb loop (bad) loop (bad) loop scas loop mov subb lods loop lods loop mov orb scas loop (bad) loop stos loop mov subb scas add subl scas loop stos loop scas loop scas loop stos loop lods loop (bad) loop mov orb stos loop mov orb scas loop lods loop stos loop (bad) loop lods loop (bad) loop scas loop scas loop lods loop mov subb lods loop mov subl scas loop mov subb mov orb subb loop stos loop stos loop lods loop stos loop scas loop stos loop stos loop stos loop scas loop mov subl stos loop mov subl (bad) loop lods loop lods loop (bad) loop scas loop (bad) loop lods loop stos loop scas loop (bad) loop lods loop stos loop stos loop stos loop stos loop scas loop (bad) loop lods loop stos loop scas add subl stos loop stos loop stos loop scas loop mov subb stos loop scas loop lods loop lods loop scas loop lods loop scas loop (bad) loop lods loop stos loop lods loop (bad) loop stos loop lods loop scas loop lods loop mov subb stos loop lods loop mov subb (bad) loop stos loop scas loop lods loop stos loop mov subb orb lods loop lods loop lods loop lods loop stos loop mov orb loop (bad) loop stos loop mov orb stos loop stos loop stos loop scas loop scas loop lods loop mov subb scas loop (bad) loop mov subl stos loop stos loop (bad) loop mov subb lods loop scas loop scas add subb (bad) loop stos loop (bad) loop mov orb (bad) loop lods loop stos loop lods loop lods loop stos loop stos loop lods loop lods loop stos loop stos loop mov subb scas loop stos loop stos loop stos loop scas loop stos loop mov subl (bad) loop scas loop (bad) loop (bad) loop mov subl add subb lods loop mov subl stos loop scas loop scas loop scas loop lods loop stos loop lods loop mov subb loop stos loop lods loop lods loop stos loop scas loop (bad) loop lods loop lods loop (bad) loop mov subl stos loop scas loop stos loop mov subl scas loop scas loop scas add subb stos loop lods loop lods loop scas loop lods loop mov subl stos loop scas loop mov subl loop stos loop mov subl lods loop lods loop lods loop (bad) loop mov subb mov subb loop lods loop lods loop scas loop stos loop lods loop lods loop scas add orb stos loop mov subb mov subb scas loop scas loop mov subl scas loop stos loop stos loop mov subl scas loop scas loop mov orb stos loop lods loop stos loop scas loop (bad) loop scas loop lods loop (bad) loop lods loop scas loop lods loop (bad) loop mov subb subl scas loop scas loop lods loop (bad) loop stos loop (bad) loop (bad) loop mov subb lods loop lods loop stos loop stos loop stos loop lods loop stos loop stos loop lods loop scas loop lods loop mov subb loop stos loop lods loop lods loop lods loop mov subl (bad) loop stos loop stos loop scas add orb mov orb loop scas loop lods loop scas loop scas loop lods loop mov orb stos loop (bad) loop lods loop stos loop (bad) loop stos loop scas loop scas loop lods loop mov subb (bad) loop scas loop scas loop lods loop (bad) loop stos loop (bad) loop mov subl loop scas loop lods loop scas add subl mov orb stos loop lods loop stos loop lods loop lods loop lods loop lods loop scas loop stos loop stos loop scas loop stos loop scas loop lods loop scas loop stos loop (bad) loop lods loop lods loop mov subl lods loop scas loop (bad) loop mov subl mov subl scas add orb mov subl mov subb mov subl loop lods loop mov orb lods loop scas loop mov subl loop scas loop scas loop stos loop (bad) loop stos loop lods loop lods loop (bad) loop lods loop scas loop (bad) loop (bad) loop (bad) loop (bad) loop stos loop scas add orb stos loop lods loop stos loop (bad) loop lods loop stos loop (bad) loop (bad) loop scas loop scas loop mov subl (bad) loop (bad) loop (bad) loop mov subb mov subb lods loop lods loop mov subl loop lods loop stos loop (bad) loop lods loop scas loop stos loop mov subb subb (bad) loop scas loop lods loop mov orb lods loop stos loop mov subb stos loop scas loop stos loop mov subb mov subl mov subl stos loop stos loop scas loop stos loop scas loop (bad) loop mov subb mov subl scas add subl lods loop mov subl scas loop mov orb scas loop lods loop scas loop lods loop (bad) loop stos loop stos loop lods loop mov subb stos loop stos loop lods loop stos loop scas loop lods loop mov orb loop scas loop stos loop lods loop scas loop lods loop mov orb orb loop scas loop stos loop stos loop mov subb stos loop lods loop lods loop stos loop scas loop lods loop stos loop mov subl (bad) loop stos loop lods loop (bad) loop stos loop scas loop lods loop lods loop lods loop (bad) loop mov orb loop scas loop lods loop mov subl scas add subb loop lods loop stos loop stos loop (bad) loop scas loop mov subl lods loop scas loop mov orb stos loop (bad) loop lods loop stos loop scas loop stos loop stos loop lods loop scas loop lods loop stos loop stos loop lods loop (bad) loop scas loop lods loop (bad) loop stos loop lods loop stos loop scas loop lods loop stos loop scas add subb (bad) loop mov subb lods loop mov orb loop (bad) loop lods loop scas loop stos loop lods loop scas loop lods loop scas loop scas loop lods loop lods loop lods loop lods loop scas loop lods loop scas loop stos loop scas loop (bad) loop scas loop (bad) loop stos loop stos loop lods loop lods loop stos loop stos loop stos loop mov subb subl stos loop (bad) loop scas loop mov subb scas loop lods loop scas loop stos loop (bad) loop lods loop mov subl scas loop mov orb lods loop lods loop scas loop stos loop scas loop stos loop (bad) loop mov subl loop stos loop stos loop lods loop mov subb orb lods loop scas loop (bad) loop mov subb loop mov orb lods loop lods loop stos loop mov orb lods loop mov subl lods loop scas loop mov subb lods loop lods loop lods loop scas loop lods loop lods loop stos loop stos loop stos loop scas loop stos loop scas add orb loop lods loop scas loop lods loop mov subl lods loop scas loop lods loop lods loop stos loop stos loop scas loop lods loop mov subb (bad) loop lods loop mov subb scas loop scas loop scas loop lods loop stos loop stos loop stos loop lods loop stos loop stos loop mov orb mov subb subb (bad) loop (bad) loop lods loop scas loop lods loop (bad) loop (bad) loop stos loop stos loop stos loop scas loop lods loop lods loop mov subb mov subl scas loop stos loop (bad) loop lods loop (bad) loop lods loop lods loop mov subl mov subb loop lods loop stos loop scas add subl loop lods loop (bad) loop mov orb scas loop stos loop scas loop scas loop lods loop scas loop mov subb loop scas loop stos loop mov subl mov subb mov subl lods loop scas loop mov orb (bad) loop stos loop (bad) loop scas add subl stos loop lods loop scas loop stos loop lods loop (bad) loop lods loop scas loop stos loop scas loop (bad) loop lods loop scas loop stos loop mov subl scas loop lods loop stos loop stos loop (bad) loop stos loop scas loop lods loop stos loop lods loop (bad) loop (bad) loop lods loop (bad) loop mov orb stos loop mov subb subb stos loop lods loop mov orb stos loop stos loop (bad) loop (bad) loop stos loop lods loop stos loop scas loop (bad) loop (bad) loop stos loop mov subl stos loop (bad) loop mov subb mov subl mov subl loop lods loop stos loop mov subb orb mov orb (bad) loop scas loop mov subb scas loop stos loop stos loop mov orb mov subb loop (bad) loop (bad) loop (bad) loop (bad) loop stos loop lods loop stos loop lods loop (bad) loop mov subl lods loop lods loop stos loop scas loop scas add orb mov orb lods loop mov orb loop (bad) loop lods loop lods loop stos loop mov subb scas loop scas loop (bad) loop scas loop scas loop mov subb (bad) loop scas loop mov subl mov subb scas loop (bad) loop mov subb lods loop scas add orb lods loop mov orb scas loop lods loop stos loop mov orb mov orb scas loop scas loop mov subb loop mov subl loop mov orb loop lods loop stos loop stos loop mov orb loop stos loop stos loop scas loop scas add subl (bad) loop scas loop stos loop lods loop (bad) loop stos loop mov orb scas loop stos loop (bad) loop lods loop scas loop stos loop lods loop stos loop lods loop scas loop mov subb lods loop stos loop lods loop stos loop scas loop (bad) loop stos loop lods loop lods loop stos loop (bad) loop lods loop lods loop (bad) loop scas loop scas add orb (bad) loop stos loop scas loop lods loop lods loop mov orb mov subl (bad) loop lods loop scas loop (bad) loop mov subb scas loop lods loop mov subb lods loop mov subl scas loop (bad) loop stos loop stos loop (bad) loop lods loop scas loop stos loop lods loop scas add subb mov orb mov subb (bad) loop lods loop (bad) loop stos loop scas loop lods loop stos loop (bad) loop lods loop lods loop mov subb stos loop (bad) loop (bad) loop scas loop (bad) loop lods loop scas loop stos loop lods loop mov subb stos loop lods loop stos loop mov subb (bad) loop scas add subl stos loop mov orb loop mov orb (bad) loop stos loop (bad) loop lods loop (bad) loop scas loop stos loop mov subl mov subl mov subl stos loop (bad) loop lods loop lods loop mov subb stos loop stos loop stos loop scas add subb loop mov subl mov orb mov subb (bad) loop mov subb scas loop lods loop mov subb lods loop scas loop lods loop lods loop lods loop (bad) loop (bad) loop mov orb scas loop mov subl stos loop mov subl subb scas loop scas loop stos loop stos loop lods loop lods loop lods loop (bad) loop stos loop (bad) loop lods loop stos loop lods loop stos loop stos loop (bad) loop scas loop (bad) loop stos loop scas loop scas loop stos loop mov subb scas loop mov subl lods loop stos loop lods loop lods loop lods loop stos loop scas loop scas add subb loop (bad) loop scas loop scas loop (bad) loop stos loop mov subl loop scas loop scas loop scas loop mov subl mov subb stos loop mov subl scas loop (bad) loop lods loop lods loop mov subl stos loop lods loop lods loop stos loop scas add subl loop (bad) loop stos loop lods loop lods loop mov subb scas loop lods loop stos loop mov orb (bad) loop stos loop lods loop stos loop lods loop scas loop lods loop stos loop scas loop stos loop stos loop mov subb (bad) loop stos loop (bad) loop stos loop lods loop lods loop stos loop (bad) loop scas loop scas add subb scas loop lods loop scas loop lods loop (bad) loop lods loop lods loop stos loop stos loop (bad) loop scas loop lods loop mov subb loop mov subl loop stos loop mov orb lods loop scas loop mov subb lods loop stos loop (bad) loop scas loop stos loop scas loop lods loop lods loop scas add orb stos loop mov subb (bad) loop scas loop (bad) loop scas loop scas loop scas loop stos loop mov orb lods loop mov subb lods loop lods loop (bad) loop stos loop mov subl stos loop lods loop scas loop mov subl scas loop stos loop stos loop stos loop stos loop scas add subb stos loop mov subl stos loop mov orb stos loop lods loop lods loop scas loop stos loop mov subl loop lods loop scas loop lods loop stos loop mov orb mov subl loop scas loop mov orb loop lods loop stos loop scas add subb loop stos loop lods loop stos loop mov subl stos loop scas loop stos loop mov subb stos loop stos loop stos loop stos loop stos loop mov subb lods loop stos loop scas loop mov subl stos loop stos loop stos loop stos loop mov subb stos loop scas loop scas add subb lods loop (bad) loop (bad) loop lods loop lods loop stos loop mov orb stos loop lods loop lods loop stos loop lods loop mov orb scas loop stos loop mov subl scas loop mov subl lods loop mov subl stos loop mov subl add subl mov subl lods loop lods loop (bad) loop scas loop mov orb stos loop scas loop (bad) loop scas loop stos loop mov orb stos loop scas loop (bad) loop stos loop lods loop scas loop lods loop stos loop stos loop mov orb (bad) loop lods loop (bad) loop mov subl subl scas loop scas loop stos loop lods loop scas loop lods loop mov subb lods loop mov orb scas loop lods loop stos loop stos loop lods loop mov subl lods loop scas loop scas loop mov subb stos loop mov orb (bad) loop lods loop stos loop mov orb orb stos loop stos loop stos loop stos loop stos loop mov subb stos loop scas loop mov subl mov subl (bad) loop (bad) loop lods loop stos loop lods loop lods loop stos loop (bad) loop mov subl lods loop (bad) loop stos loop stos loop lods loop lods loop mov orb subb scas loop mov orb (bad) loop stos loop stos loop lods loop scas loop lods loop stos loop lods loop stos loop lods loop lods loop scas loop lods loop mov subl (bad) loop lods loop lods loop lods loop lods loop stos loop mov subl loop lods loop (bad) loop lods loop lods loop stos loop stos loop scas add orb loop lods loop stos loop mov subl lods loop stos loop mov orb loop lods loop stos loop scas loop scas loop lods loop mov subl lods loop lods loop scas loop lods loop scas loop stos loop stos loop scas loop mov subb scas loop (bad) loop mov orb scas add subl lods loop lods loop (bad) loop lods loop stos loop stos loop scas loop scas loop scas loop (bad) loop (bad) loop lods loop lods loop lods loop lods loop lods loop scas loop lods loop scas loop lods loop stos loop stos loop stos loop stos loop scas loop lods loop lods loop (bad) loop lods loop stos loop scas loop lods loop stos loop stos loop mov orb scas add subl loop lods loop scas loop lods loop lods loop scas loop lods loop mov subl loop scas loop mov subl scas loop (bad) loop (bad) loop (bad) loop mov subl lods loop lods loop (bad) loop lods loop lods loop lods loop scas loop lods loop lods loop (bad) loop (bad) loop stos loop scas add orb (bad) loop mov subl loop mov orb loop stos loop stos loop mov subl mov orb stos loop mov subb stos loop scas loop lods loop lods loop lods loop lods loop stos loop stos loop lods loop lods loop lods loop mov orb scas loop scas add orb loop stos loop lods loop stos loop stos loop mov orb mov subl stos loop mov subb lods loop lods loop (bad) loop mov orb loop scas loop stos loop stos loop mov subl mov orb mov orb loop scas add orb lods loop (bad) loop mov subl loop stos loop stos loop lods loop lods loop scas loop (bad) loop stos loop mov orb stos loop mov orb stos loop stos loop stos loop lods loop (bad) loop mov subb lods loop stos loop stos loop scas loop stos loop (bad) loop stos loop lods loop lods loop scas add orb stos loop lods loop scas loop lods loop stos loop (bad) loop lods loop mov orb loop stos loop mov subb lods loop stos loop lods loop stos loop lods loop scas loop lods loop scas loop stos loop lods loop stos loop lods loop (bad) loop stos loop stos loop mov subb loop (bad) loop stos loop mov orb (bad) loop mov subl lods loop lods loop lods loop stos loop lods loop lods loop mov subl stos loop mov subl stos loop lods loop stos loop mov subb scas loop mov orb (bad) loop scas loop (bad) loop mov subb mov subl scas add subb mov orb scas loop mov subl scas loop mov subl (bad) loop scas loop (bad) loop scas loop lods loop lods loop mov orb scas loop mov orb lods loop stos loop (bad) loop scas loop mov subl stos loop scas loop scas loop scas loop scas add subb stos loop lods loop (bad) loop scas loop scas loop mov orb (bad) loop stos loop (bad) loop stos loop stos loop stos loop scas loop scas loop stos loop stos loop stos loop scas loop stos loop lods loop stos loop stos loop mov subl mov orb scas loop lods loop lods loop stos loop (bad) loop lods loop stos loop scas add orb (bad) loop lods loop scas loop (bad) loop scas loop mov subb mov orb scas loop scas loop mov subl mov orb loop mov subb scas loop scas loop stos loop lods loop lods loop lods loop scas loop mov subb loop lods loop scas loop scas add subl scas loop mov subl lods loop mov subl loop lods loop stos loop mov orb stos loop scas loop mov subl mov subl stos loop (bad) loop (bad) loop stos loop lods loop lods loop mov orb scas loop stos loop scas add subl lods loop (bad) loop mov subl mov subb loop lods loop lods loop stos loop lods loop lods loop stos loop lods loop lods loop lods loop lods loop mov subb loop lods loop stos loop scas loop lods loop scas loop stos loop stos loop (bad) loop (bad) loop lods loop stos loop stos loop scas loop scas add subb loop mov subb scas loop mov subb lods loop scas loop stos loop mov subl scas loop (bad) loop scas loop scas loop lods loop mov subl mov orb stos loop lods loop stos loop mov subl loop scas loop scas loop stos loop scas add orb stos loop mov subl loop mov orb lods loop stos loop scas loop mov subl loop mov orb (bad) loop (bad) loop stos loop lods loop lods loop scas loop mov subb lods loop (bad) loop stos loop (bad) loop mov subb (bad) loop mov subb push inc insb dec push inc push dec inc outsl push inc dec inc popa inc imul jb inc add jae je jb inc push je jb push push dec dec dec inc inc inc bound inc push inc outsl dec push inc outsb dec push jns dec dec jno push push push dec js dec imul (bad) lods add (bad) mov and xor and xor loope mov add (bad) movsl add push dec je push jae push pop inc popa push fs gs addr16 push push add jo outsl insl popa imul inc jae gs bound push jns je insl cs gs arpl outsb add (bad) mov push jns je insl cs jb ja outsb add jp inc add (bad) test push jns je insl cs imul inc outsl jb jae inc outsl jb inc outsl jb gs je insb gs (bad) mov imul jbe ja push push jb jp jae dec push dec inc jbe jne push push addr16 dec dec push ja jo fs dec dec jo inc jbe jns arpl inc inc add inc dec bound dec je popa inc push dec push jbe insb jp pop jno push add push fs gs add jae gs cs arpl imul je addr16 jo jns dec inc jb jo outsl push jb outsb jae outsl jb add and add je push arpl gs outsl fs (bad) movsb add jp add (bad) mov (bad) mov loope mov inc outsl insb outsl jb loope mov (bad) test loope mov (bad) mov inc jbe fs arpl push jns je insl cs arpl imul arpl push jb popa dec pop push jae push jp jae inc addr16 js jae dec pop push dec dec inc push dec inc outsl outsb je imul jae gs cs outsl insl jo outsb outsb je outsl fs add arpl imul push inc inc push dec jp jbe jb add jb add inc bound addr16 inc inc imul pop push jno dec imul dec push outsb js push inc inc dec dec push inc dec addr16 insb jns push jbe inc dec push add outsb je jb jae inc imul imul add imul push popa jno je dec dec dec bound popa addr16 dec js outsb dec inc add push dec push push insl addr16 push outsb inc bound imul dec insb inc add imul push je jp dec push push jbe ja inc inc dec fs addr16 add insl dec imul push inc dec outsb inc outsl push dec outsb insl bound jbe pop inc add jb inc insb outsl jae outsb addr16 jbe outsb je jb jae insl inc ja arpl dec je dec bound je push jo push push push push insb push dec dec jne dec inc push inc inc dec inc inc ja imul insl push jo insl dec push insb push jo inc add jb jns addr16 dec inc pop jb jbe pop addr16 jne dec push bound pop jno bound push push add push push dec push push push dec jns fs push dec jo jns dec je popa inc add jae insb jbe inc jbe outsb je jb jae push jns gs (bad) test (bad) mov loope test (bad) lods add (bad) test (bad) mov loope movsb add (bad) test (bad) movsl add bound dec push push dec dec push popa pop outsb push push inc pop dec inc imul pop dec dec pop inc inc push dec jo jno push dec push jne inc jb dec jne push arpl add push jp bound jb pop dec insl arpl dec outsl je push inc pop jne dec pop arpl inc inc dec inc inc dec js dec jae inc inc fs jno je insl jbe gs add jb arpl inc push inc push dec dec pop dec inc push jb push dec jb push inc push jb jbe insb insl imul push fs imul data16 popa push jne inc add add insl push imul je jb bound add jae gs cs jne je insl gs outsb je jb jo gs imul jae insl bound jb fs popa jb inc je jb bound add jae insl bound outsl jo jb addr16 jb bound add jo jb jae dec insb fs jae inc je jb bound add jae gs cs jne je insl gs outsl insl jo insb gs gs imul jae insl bound imul outsl outsb inc je jb bound add imul jne add jae insl bound jb fs je je jb bound add jae insl bound imul imul jne je insl gs outsl insl jo je bound imul bound add insl jo insb popa je outsl outsb push gs popa js je outsl outsb jae je jb bound add jae insl bound outsl insl jo outsb jns je jb bound add jae insl bound outsl outsb imul je outsl outsb inc je jb bound add jae insl bound gs jb jo imul imul gs outsl fs popa jae add outsb je outsl insb add outsb je imul je outsl insb add outsb je push je imul insl gs imul imul outsl jne arpl popa outsb popa addr16 push jns je insl cs gs jne arpl add outsl outsb add insl outsl jb push je gs insl add xor gs xor sub gs jne arpl jb,pn jae jne arpl add outsb imul gs jne arpl jb,pn jae jne arpl add je add popa add popa fs jns add je dec outsb addr16 add outsb je xor push jne je insl gs gs jo jb add imul inc jb popa jns push jne je insl gs imul fs add arpl imul je insl cs gs add je push push inc cmp inc gs je imul gs add data16 inc insb outsl arpl outsl jo add je jns gs jb insl dec popa outsb fs add outsb je insl gs jns gs popa outsb fs add je insb gs outsb je jns add gs je dec outsb jae popa outsb arpl dec outsl fs add je dec outsl fs add je inc jne insb jns jne insb imul insl add je inc push dec popa jb push gs dec dec push push inc dec inc inc add je je add pop inc js insb imul je add js push jb je add jns je push je gs insl add jns je push je gs insl dec outsl fs outsl jae add jb popa jns dec outsb jbe imul gs popa outsb imul jae jne arpl popa insl gs dec inc jbe fs arpl popa arpl jns push jns je insl cs arpl imul inc jne jb outsb je outsl insl popa imul outsb fs popa jns jne add add je inc jne outsl push arpl gs imul outsb jae inc outsb jbe jb outsb insl outsb je inc js je jae je inc outsl outsb je jae je dec popa insl add je inc outsl jb inc outsl jb gs je insb add je dec popa jb imul outsl fs outsb outsw add gs je add outsb arpl add je popa je add imul insb add gs je inc arpl jo outsl jb push gs popa je add je inc jne outsl push arpl gs outsl fs je inc insb imul add je bound arpl gs dec arpl add jae gs inc outsl insb outsl jb add je inc jne je outsb dec imul je jae je inc outsl jb inc outsl insb outsl jb dec inc outsl insb insb arpl outsb add jae gs cs outsl insb insb arpl outsb jae addr16 inc jbe fs arpl addr16 inc outsb je jns outsl imul je je insb add popa jo imul add je dec popa js insl imul jae je push je jb push outsl jae je outsl outsb add jb push je jb push outsl jae je outsl outsb add outsb je popa outsb fs gs popa fs dec outsl popa add jae insl gs popa jns jne add jo imul add outsb add gs arpl outsl outsb imul je insl cs push imul gs push gs insb jbe inc jbe outsb je popa outsb fs gs popa fs push gs jne arpl gs insb jbe add insl jo outsb outsb je gs jne arpl popa outsb popa addr16 jae je push gs add jb inc insb outsl jae outsb addr16 jbe outsb je popa outsb fs gs popa fs inc outsl jb inc insb outsl jae outsb add popa jb dec inc outsl insl jo jb bound xor inc imul jb pusha xor push jns je insl cs outsl insb insb arpl outsb jae inc outsb gs arpl inc gs popa je push je gs insl add jae gs cs dec cs outsl insl jo gs imul jo gs imul add je dec je insl add je dec popa insl add outsb je imul dec inc outsb jne gs bound xor push je imul fs inc jo outsb add je imul jae insl bound inc gs js arpl imul insl bound jae je dec gs jae je dec push add popa bound imul jns gs push gs outsl insl jo je bound gs push outsb fs outsb addr16 gs jne je add add jno inc mov hlt fild add sbb sub add add add sbb adc add add or add sbb or or mov pop push sbb mov push or and add adc sbb or add or add sbb adc add adc adc or push adc add adc push adc push sbb adc add add push adc and add add or and add or add adc add add or push adc push and or adc add sbb add or adc or adc or add add and add or add or add add or and add add add adc add push add or add or add or adc add push push add adc add or add add add add adc add adc add or aad cmp adc add push add sbb or add add push or adc add push add add add adc add push add add push or add push add sbb add push add and or add sbb add adc add push add add or adc add push add add or adc add sub add add add add add push or add push add sub add push add xor or adc add push add add add adc add push add add add add adc add push add xor add adc push add add push adc add adc add sbb inc add add add add add add or adc push add or and add dec add adc push sbb add adc add sbb push or add add adc push add adc add push add add add or adc add add add add push or add add push pop add adc jo jb addr16 and xor xor add add add add add xor xor xor xor add add and fs xor xor cmp bound cmp cmp fs add add add add push add add push add push jb jo outsl outsb inc js gs imul ja add add or add add add add sbb adc add subb add sbb and or and add add push pop adc sbb or sbb add add or add add add dec adc or add or sbb or dec push add push add roll add sbb add push push or add adc or add adc or and adc add adc push or pop and add add wbinvd or or or or or or add or or add or add add or or int and push add add or add sbb or add lidtl add add pop add add add add pop add or or pop push or or add add add add pop add or or or or add or add or or pop add or pop or or add add pop sbb sub or or or add add add add add or or add add pop pop or or or add pop add add add add pop add add or add add add pop and add pop push or add add add add add pop add or sbb adc add or loope and sbb or or or push and sbb sbb or or sbb pop push or or sbb pop or sbb or or and sbb or pop or and or or adc or pop or or sbb and adc or or or sbb and add sbb add or pop pop or or sbb and add sbbb or or or or or or or sbb adc push or sbb orb andb sbb adc push push or push or or and sbb or xor or sbb and adc or push or or push add sbb and add sub or or or xor pop add sbb or or or and add subb xor or add adc adc adc sbb and adc add add adc in push pop add or or sbb adc add add xchg add add inc or add cmp addl adc pop and or or push and add addl add adc or add inc sysret or adcl sbb or and add sbbl sbb or sbb add adc adc or add or pop add add add adc or push adc adc subb xchg push push and add andl add add push sub sbb inc adc push adc dec or xor adc sbb or or or or or add push add push pop adc push push push or sbb adc add add or add add or subb add add cmp and add add add add pop adc or add or or adc or or sbb adc push or addl add adc or sbb or pop pop or dec or or sbb add add mov and dec mov int jo add add aad add lret add add xchg add add jae gs cs gs jne arpl cs gs jne arpl gs fs and arpl insb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push jns je insl cs gs jne arpl cs jne je insl gs gs jne arpl gs add add add add jns je insl cs jb ja outsb addr16 imul jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs push inc inc push inc inc dec mull mov adc mov adc mov adc mov adc pushf add add add dec add add add add add add xor xor xor add add add cmp sub add add add xor add add and add add add aaa add add cmp sub add add add xor sbb add and add add add aaa add add cmp sub add add add xor xor and add add add aaa add add cmp sub add add add xor dec mov add xor xor xor add add add popa add xor sub add roll add add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add jne add add or or add or add add add pop or add add mull add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add cmp push js in roll and fwait insl (bad) mov (bad) fs xchg sti sub cmp add mov or clc fdivs int3 cmpsl dec push jns cmp cltd cmc aad mov dec add push pop cltd rolb pop mov nop lock loope xor pusha dec iret nop mov (bad) push lret rolb pop stos mov lods cmp jecxz call call ficompl iret adc into (bad) fnstsw or gs aad test test jbe pop imull mov shrb add dec pusha jp pop jne jp call jo test mulb xchg dec add movsl mov pop push mov dec ret loop dec adc stos mov sbb sub daa adc fmuls mov jle sbbl fsubs aad loop imul xchg mov xchg cli jl mov andb or push fwait das dec lds mov and test ss lret je and add jecxz xor push mov insl iret ss inc lea ljmp inc iret inc (bad) xchg sbb xor fcmovnbe loope jmp push pop out incl loopne mov sbb insl (bad) lcall mov jecxz mov movsl shrl jne or test pop dec lods and pop xor and daa inc mov mov mov sub pop jp imul mov stos les mov sub iret jecxz sub nop push xor movsb pusha pop pop jns mov popf sub jle mov sub addr16 pop xchg mov stc pop clc mov idivb push push out (bad) movsl xlat dec out je (bad) xor (bad) gs cli dec popa (bad) bound mov test repnz js fisttpll or dec jne pop jp sub lret mov sub pushf out xor out inc cmpsl adc test mov mov mov cmc scas xlat push mov push xchg dec pop xchg push cmp jo daa pop adc cmpb ret xchg lds push cwtl lods scas outsl push pop adc daa dec sbb or das cmp or mov cmp push fmull dec cmpsl xchg xor rolb pop xchg add mov lock adc push xlat fxtract bound (bad) stos push mov data16 mov addl (bad) jecxz sbb mov cmp push ror jno sbbb sbb loopne add cld push ja,pn sbb iret lret outsl jge daa mov jge (bad) sti adc scas sbb sbb xor mov mov xchg sub cmc sub push aam dec xchg push pop xor stos bound lods mov jg dec xchg jb adc repz ret inc inc and mov add inc and mov sbb xor dec popf arpl or (bad) or arpl mov rorb (bad) push inc (bad) jne roll stos jecxz stos push outsl (bad) push subl jnp cmpsb jp push lret ljmp push out sbb fwait das dec hlt sub mov mov stc loopne and (bad) insl xor inc adc or dec jns cmp lahf stc cmp in lods and ret mov out sub fs scas mov cli lea jne (bad) lsl adc cs test inc les add cmpsb roll adc movsl test cmp and addr16 dec sbb sti cmpsl jnp,pt shl xchg sub jno ljmp fadds (bad) cmp sbb push jnp push movsl dec rcrb sub lea mov or js dec inc fldt pop cmp cmpsb xorl pop push fs jge mov sbb dec aas cmp jbe adc cmpl out push lret xchg mov mov mov enter push pop mov push jge lock inc lea dec sub jbe mov mov pop (bad) std aam xchg fidivr sub cmp inc int3 loope push insl mov mov lcall pop mov mov dec mov cmp enter sahf inc or pop out sub adc insb dec inc inc or out int xchg subl fisub xor fs xor aam xchg in incb mov inc mov push mov mov xlat lret xor and cwtl (bad) push adc in shrb sbb or sahf sbb push loopne dec out popa adc sbb push push (bad) jns fnstcw dec ljmp cltd add je mov mov fidivrl (bad) leave lcall orb adcl mov test add or dec popf xor xor mov pushl inc pop out imul into mov movntps push mov xchg clc xlat ret inc cld cmp (bad) mov mov aaa nop sahf add xlat mov lods stc sarb scas cmc push daa (bad) (bad) jno sbb imul jecxz dec sub test mov out push sbb add popl xor xchg push hlt arpl ds cs out (bad) test mov cltd adc mov jl gs icebp pop and xor aam jo outsb and pop lcall xorl dec mov inc movsl or test cmpsl imulb insb fisttpll pushf out fimul dec adc push popf add (bad) scas xchg mov repz sbb mov out xchg add cmp xchg lahf xchg scas loop xor insl xchg add adc mov aad lock push xor in xor inc push loope das mov or or aad cmp jnp out jge lret roll lock push dec decl call inc lahf andl pusha dec in ss (bad) and mov pop in lock pushf lds data16 icebp (bad) enter sbb jne mov adc mov lret xchg iret cmp xorb mov or jp sbb scas xchg and call mov insl ljmp xor mov push dec imul or pop adc addl and incl jae (bad) xchg movddup outsb jns in jecxz lret out inc jle sub push xchg sub loope nop xchg xor jmp xchg cmp dec (bad) pusha fisubr and popa pop (bad) sti push and pop jge push and outsl int int lahf mov jbe add aam into mov (bad) xor lret xchg ljmp lret push or mov mov sub sub loop out add mov inc stos jns leave jl mov test pop push xchg jg mov movsb mov lock jnp call or les mov cmc arpl xchg mov inc mov sbb std jae clc adc fildl cmp rorb xorl and int adc dec stos jge and aas pusha inc inc or sti fs out and rcr dec xlat mov jl mov mov shlb jle dec or aam and adc ds rcrb rcll xlat adc stos or ret jmp jnp aaa test mov movsb cmp cmp (bad) cmp fdivrl xchg rolb push rcr mov das test (bad) pop bound cmc adc cli jmp std out aad dec xor lds insl orl jge cs out jae imul lods adc test cld ret ret shrl mov jnp pop mov sub insb xchg shrb arpl dec shr and dec insb xchg imul ret sbb sub out imul push sbbl pop mov enter fdivrl push pop mov pop ss fcompl inc xor iret mov pop inc (bad) xor adc inc jbe test aam mov push aaa push popf sub inc push adc dec jp sarl sub jbe dec (bad) add sub inc mov adc shll inc movsb sub fcmovne mov stos and pop pop stos mov ficom inc movsl aad cwtl mov mov ret adc shlb roll mov mov rclb mov lea push push add and sti pushf adc nop mov push incb mov jae fidivrl xor fwait pop int3 or or dec je in push ret cltd add add mov in stos add xor stc gs dec aad roll fwait call mov fstl inc cmp sub jnp inc aad out and insb insb mov dec divl mov stos lret pop aaa inc ret sbb (bad) jb sub aam xor outsb adc push jb rclb sarb inc adc jo scas fld mov mov dec push orb movsl es inc mov fcomps aad cmp mov push xchg stos lret ljmp mov in cli movsb (bad) sbb jle sbb xchg xor cmova (bad) outsb jno sbb pushf mov jecxz call inc mov sub ljmp pop rcrl fnop daa fcoml aad push cmpsl mov mov jno and inc xor mov loopne (bad) xchg mov push add cltd inc xchg in mov push mov pop jns lea pop repz shr lahf rol pop jmp mov inc loope xor cmc aaa sbb xchg ss (bad) or mov es and aam mov adc loop inc add arpl inc push xchg ret aad cmc cli xor repz mov and add pop aaa add in xchg or jns ret mov cmpsl inc nop push fmull inc and mov push xor jmp inc bound dec out gs in dec rcrl xlat jne shrb add ret dec pop mov add gs push cmp outsl int3 xchg xchg sub jmp arpl daa (bad) pop pop mov and fcoms cs mov cmp shlb outsl lock push xor mov or pushf xchg jae sti dec cmc lcall nop aas fwait xchg jo ljmp popf ds fucomip (bad) xchg lcall pop inc mov test (bad) pop sub jb push ficoml mov lcall push das fdivp fidivrl lods add jmp mov xchg sbb ficompl lret mov fdiv cmpsl jo inc push jl repz ja test cld jecxz nop repz jnp sub add mov sub push enter inc aaa std adc inc cmpb sub mov aaa fistpl lods loope in cmp adc lods mov repz or hlt movsb pop sub das or jae push bound xchg xchg mov imul cmp lds bnd dec (bad) lahf popa adc xchg pop cmp adc js cmp call push fsubrl and push xor fist push sub push xchg xchg test adc imul imull adc loope mov mov shr es mov (bad) repz or pop mov jns imul fyl2xp1 fwait xchg les mov jmp imul mov test jge in andl hlt (bad) jo xchg mov cmp and push mov mov (bad) (bad) mov and jp rolb jge xor mov test mov in xchg pop out ds push in iret es or mov mov mov (bad) negb jno outsb mov push ret inc icebp stos xor jb pop mov addr16 call jmp mov mov cmpsb and out jge dec push imul push je outsl push jae,pn test pop mov fadds push xchg sbb (bad) inc (bad) adc ds fcmovbe adc repnz or push inc lret add jno pop adc mov mov dec lret pop (bad) clc jb sahf mov in inc insb int3 mov push xchg lret notl in sbb jecxz rcrl jl jne lock test push sbb xchg stos or lahf rcrl xchg mov lds addl orl lock ja pushf adc mov mov sub dec xchg add (bad) sbb (bad) add sub pop dec and push jl mov jno call adc lods and dec mov std leave (bad) push cmp xchg ret shrb xchg jg movsb lcall dec pop jo or dec xor cli lahf js inc bound pushf lret shrb cli lods lea repnz push and mov add push out xchg or std pop inc mov push fs dec fist cltd sbb push movsb push ds cld xchg in (bad) dec pusha mov (bad) fcomps mov push and sbb push push xor inc jmp popa jmp addr16 movsb and push mov xchg mov pop loop mov in pop iret sub fs aas sbb push js,pt adc xor mov fidivr (bad) cmp out jbe fbld or xor push push mov xchg rcrl stos inc xor fstps lahf in adc mov sub es mov cmp orb sub pop inc xchg inc sbb pop sbb out push xor or outsb loopne test lock mov adc or add inc imul sub push xor dec pop inc cmc inc pop icebp negl repnz and xor pop daa mov (bad) sub xchg jns sub push push ret mov dec mov jmp sbb mov loope rcr mov jo inc cmpsl and jmp lea stos mov lahf push jecxz sti jae popa push xchg and mov (bad) push nop mov lahf jp xor mov arpl adc cmp fisttpll mov les push inc mov cmp lods ror inc insb loop push add inc popa inc and push push sub (bad) std or das int insb rolb mov notb aas push mov pop (bad) mov (bad) cmp gs dec arpl lds cwtl (bad) adc xchg sbb out xor or jo cltd lods sti push call (bad) (bad) jge inc fldt negb pop sub add in or mov sti sbb aaa ds jnp jne jae xor lcall or xchg inc inc pop or sub add xorb fistl jg jbe xchg ljmp shll push incl fwait (bad) stos mov xchg iret ret jmp inc xor mov push aas fwait jmp je ror mov xor imul shl dec (bad) xlat or movsb push (bad) lock pop test test movsb jne lret bound xlat jp mov aaa mov and mov (bad) out mov adcl push popl lcall popa fcomp dec gs imul das mov mov test addr16 jo mov add (bad) loope nop xchg jle mov inc lret and xchg bound cmp setp outsl dec ljmp xlat pushf ss and test mov out (bad) enter adc adc int pop mov mov mov test (bad) out adc mov sbb inc jg dec stos cli jmp (bad) hlt ss mov imull sahf cmp in repnz arpl stos lcall aaa (bad) jp push mov fcomps ljmp add mov pop xchg mov pusha fistpl add adc in bound lahf inc dec cwtl call mov inc test dec aaa jo cmpsb movsl lds or mov mov xor push ja loopne mov sub push or jmp pop push add add jne sub into test mov sbb stos jbe fstl pop sub stc inc mov mov js mov push cmp jno and lods cmp xchg mov out push fwait icebp xor sarb cmp pop pop mov jnp or mov daa lods out pop (bad) push out xchg stos pop and test jl cs ror ret pop push out es je jle or mov (bad) inc loop sbb jge test out mov dec jnp popf stos insl and lahf iret sub mov fcompl movsl xchg movsl fdivrs test xor out mov test imul roll mov adcl lock adc pop mov insb xor rclb cmpb pop pop dec cs lds sub leave daa je mov mov mov and and loope aam ret clc adc aas fcomi lods ja or sub call (bad) aam rep into loope inc repnz mov nop ret cmp fisttpl adc pop inc xor pop notl cmp cli test call inc sbb fadd add xor jae lods adc cmp xchg outsb out dec adc sbbl test cmp dec out incl (bad) es aaa hlt jp adc or mov or cmpsb mov xchg mov mov dec (bad) imul xchg mov lods imul lods inc and cmpsb xchg ss lock cmp push sub imul paddsb rorb jae aad dec jle shr sbb imulb ja outsl inc lds mov or xchg dec iret xor lret push dec insl jno test inc test scas ret cmpsb xor mov inc lcall test fisubl push leave xlat addr16 inc pop aaa adc test mov call sub rcrl cmp sti push adc mov sbb sbb test inc xor movsb cli add jo xor cld outsl adc movsl mov xchg sbb and xchg (bad) aam jle xchg sbb ffree push fwait int3 ror cmp jg fs adc sub lods lcall loopne or xchg lcall imul loopne test cmc inc dec xlat rcrb inc bound cmp xchg jns lock gs xchg sbb loop test sbb push pop rclb test adc pop fsubl loopne jb sbb ficompl push mov dec fstps xor push mov adc (bad) aas dec lret daa sbb or or out jg jo mov incb and imul jp dec ja sbb fstpt dec inc inc pusha pop mov pop enter mov mov add adc pushf cld sbb xor mov pushf outsl cmpsl movsb pop cmp gs bound push xor adc sarb mov pop shlb nop dec and divb lret mov ret into inc icebp ret sti loop push mov and test outsb lock push adc push insl cmp loop sbb loopne (bad) test lods pop aad pop lock data16 lea dec jnp sbb test mov jl xchg lahf sbb addr16 int3 jne addr16 push enter mov imul sbb mov iret push or ror adc (bad) (bad) repz mov xchg or sub stos cmc stos jns push scas js push cmp sbb xlat sub lret icebp push xchg dec pop (bad) xchg bound cmp sbb lahf in (bad) decb rcrb cmpb arpl or rcrb xor and mov lret mov mov es rcr inc sbb inc leave sbb add and add bound xor fidivr mov xchg mov sarb xor popa dec lcall add mov (bad) cs nop sub sub repnz sahf dec mov bound fucomip outsb ja adc mov jge adc sbb lret in scas stc jge cwtl popa (bad) mov adc lret pop pop mov and mov cmp jp push inc out mov lcall mov pusha ret push insl out sub jecxz repnz out add jp in enter ss fstpt adc add dec adc iret popa cmp imul push aaa mov pavgw jo lcall clc add mov push cmp pop lods mov (bad) shlb sbbl ficomp rcrl fdivl ja add popf cmpsl jp aad push mov or or jnp mov (bad) aaa inc repnz or icebp popa or es adcl mov inc push rclb mov fs and in ljmp push je andl and mov push jmp ljmp movsb pop dec pop pop adc (bad) insl outsl lods gs rcrb xor imul mov outsb pop in les sbb mov pop cltd test iret ljmp rorl jl,pn adc loop subl jno mov cmp loop subl or inc call mov nop movsb push scas xchg sub sub stos mov scas xor fucomip adc popa mov and push mov (bad) ret push ss jnp mov outsl cmpsb rcll out imul dec popf sahf (bad) lret or pop ror sarl aas neg sub jmp dec pop in ret sbb mov dec dec mov or jnp (bad) push sbb mov xchg pop loopne ret and aam pop xor dec sub cmp jmp push sti pusha pop push inc jmp mov cwtl add (bad) jmp repz inc inc and sub sub jmp adc mov outsl xchg jo arpl mov mov inc mov sub fcmove cld inc or iret xchg fnstsw sti sub or sti (bad) xchg sbb scas (bad) xchg dec loop pop mov jno sub sub repnz stos fs ja aaa jmp popf pop fcmovb fwait insl frstor leave ljmp sbb iret xchg insl shr sbb ficomp push outsb push repnz aaa imul jae rcrl jno dec cmp pop sub inc jp inc insb or xor repz sub lea or into mov or and push ret pop xchg in (bad) insl les sbb in vpor xchg cs mov cs std pop rolb xchg pop push sub pop (bad) mov pop push lret mov loopne push inc push orb and jle daa aad pop mov pop cwtl lods nop rcrb (bad) pop dec sbb pop icebp sub fsubrs xchg movhlps out in push push hlt out (bad) mov push push jg scas pop mov dec adc repnz xor leave sub or mov push sbb mov divl inc sbb ds or pop sub push adc (bad) je loopne imul mov outsl pop popf (bad) add cmp pop mov pushf fadds adc (bad) aam mov mov lock movsb push fdivrl (bad) push mov or jl inc sub add pushw fisubr fstl jle mov xor icebp pop cmpsb fstps jmp outsb add push outsl push cmp mov iret pop xor mov push ret imul xchg rcll or aad pop cs cmp or mov fdiv dec ljmp test dec test xor shll mov sahf xor mov dec divb push fs popf dec fdivrs dec ja push add das scas gs lret push and add test movsb dec jl sbb pop lods shrl add cmp sub or cmp loope (bad) mov (bad) push (bad) or rclb add xor addr16 aam pop pop and mov pop mov cmc clc aam sahf lods orl xchg fiaddl andb xchg pusha outsb or jp push ret jne or push cmc cmp push lock fdivrl mov ja jle sbb push cmpsb mov mov or loopne or xor pop enter push (bad) (bad) or std movsl sub cmp jne scas pop xor aad sbb inc push sub mov std adc inc lret clc jns inc aad cwtl mov jge cmp or jne cli loop lock pop (bad) sbb ret inc sub sub out test popa mov negl mov fmul cli xor xor mov insl pop jb xorl icebp test (bad) and test mov movl sub push mov mov mov movsl or cmp testb xor inc in and mov jg test fwait dec pop ror pop pop insl rcrl dec in movsb shrb jns cli push insl in pop xchg mov sti lods adc jg inc jle mov ret data16 aad test or sub mov outsb (bad) das or movsb test mov jo sbb mov cs (bad) lock pop dec in icebp xchg rcrb add dec sbb xchg fimull inc add pusha add lcall pop das inc sbb sbb sub cmp inc ja adc mov addl push and mov or xchg push movsl jo,pn das jo sti mov lahf mov int xor inc imul or aaa outsb insl cld lods cmp data16 int3 pop rorb lcall push lret aam jns push nop flds sbb push icebp sub movhlps mov jne lods fs pop (bad) das loop mov ds rorl or push fcompl inc int3 cmp iret lock push adc es je out sbb data16 xchg sub js sub scas ret mov out mov dec sbb xor aas daa mov test movsl cmp leave xchg imul push mov arpl inc sub jl adc mov int lcall shrl pop flds inc fcomps xchg mov test jecxz,pn adc pop push cwtl test mov movsl into sbb sbb inc mov push dec ss sahf adc loope stos outsl pop mov out sub lret movsb cmp mov pop push fstpl adc hlt movsb leave mov or aam fwait sub pop or aas cmp adc lcall ret imul add mov cmp rcrl cs inc push and cli sbb nop or mov pop sbb sbb push cwtl mov fiadd inc jecxz adc leave mov in stc xor mov mov repz push (bad) sub andl js js rcrl pop or loope dec outsl ds mov lods xchg lea adc int repnz and mov dec in nop add loop xor add mov mov or or sbb popa dec bnd add addr16 bound movsb adc cs aas jmp jmp pop dec out mov push jne loop out imul fsubrs push pusha cwtl jb cmpsl (bad) and mov or in push ds mov lods cwtl out mov test lret xchg mov aaa mov add enter mov rorb scas adc sbb pop clc mov xlat mov mov dec mov aad cmp rorb push rol sub (bad) mov pop aaa hlt fmull xor add and data16 call push icebp ja addr16 call aad out imul dec jge ret daa (bad) movsl scas idivl ss jg or mov sbb xchg rcrb ret mov mov ret nop mov (bad) xor jl xor ja outsb inc mov and or outsl mov sbb fdivr xchg inc cmpsb push popa test fs push and daa or int mov (bad) mov fildll loop jg cmp push add sub jge sub leave pop es jnp mov lret lahf sbb cmp ljmp or push adc shrl fistpl cld (bad) sub lcall insl nop fadds cmp pop dec inc xor and mov lods (bad) sbb inc fstps mov pop cwtl and or imul push data16 in lcall sbb addr16 repnz repnz insb cmp out push sbb add je loopne pushf pop aam insb sub ljmp rclb push in je pop movsb mov ret cmp sub xchg test xchg scas dec enter push sbb inc add repnz stos outsl mov loope jmp loopne movl sub jmp addr16 test jbe adc cwtl enter mov dec movsb push cmp push xchg mov (bad) cwtl sbb (bad) sub xchg insl daa xchg mov je dec or xlat fst jno add loopne jae ror mov dec jbe ror pop mov jns int3 xchg cmovs xchg mov stos sbb or ret add imul dec loop sbb enter jno mov jae cli cmc test pop fcomip push or (bad) pop jo jne int3 adc fsub ret bound cmp fwait cmp imul cmp xor testl inc int push pop scas sbb or pop out ja or aad pop lahf cmp (bad) js sub pop insb (bad) jmp cltd xor xchg popa add jns jmp mov xor (bad) nop sti icebp fbld ljmp les nop xor dec push xchg mov adc test mov xchg icebp sti lahf add mov enter xor pop xor in adc cwtl test cmp mov sbb das fwait or cmpsb xchg mov mov (bad) gs fisubl into push pop pop loop add imul or pop mov (bad) and add sbb repnz (bad) (bad) dec add adc ret lret xchg fdivl mov test xor sbb sub lret lret dec jae in mov ds inc inc lods and add (bad) and mov ja in sbb lcall std adc cmp mov fwait aas cmc xchg sub insl pop sub in cltd lods mov popa push ret or leave loop add jmp mull mov jg lods pusha sbb bound dec mov xchg cmp push stc push sub pop push jo inc and mov test cli cmp xor sub mov or addr16 mov sbb insl mov (bad) sti into ja or fdivrl ret pop mov cwtl idivl mov in jns insb repnz fildll or xor mov lea and movsb cmpsl out push inc (bad) xor pop stc or loopne,pn xor fisubrl iret inc xchg ret (bad) lds push mov add pop mov repz xor subl inc sti xchg notl stc jmp sbb inc nop push in xchg push (bad) sbb ljmp (bad) or pop push test nop cmpsb cmp in inc in outsl jns sub push scas or ret xchg scas mov movsl ss pop adc ljmp adc mulb mov mov pop stos cld lods mov les cmp or lods push add push out rcrb inc sbb jnp mov lea jp xor add lcall (bad) sub call and mov dec scas in test mov test pop fs stos or mov fstpt jbe and out gs push lods in (bad) loopne and inc sub fsubrs lods notl inc and xchg sahf sbb pop xchg jo mov arpl or sarb sub outsl jmp fmul in adc cmp rcl xor mov enter lret test fbld xchg mov xorb push cltd or mov lcall cltd cmp or xor (bad) nop mov test or les sbb inc add mov or pusha push aaa (bad) and push and mov daa jp or dec jb insl jmp cmpsb pop icebp mov cld mov jecxz xor das xchg aam cmpsb and lock mull out call mov imul push push inc xor cmp add sbb rcll add add lods js test andl inc rcll mov cmp xor js sbb jo adc push fisubr or inc stos xchg arpl cmpl mov push dec cmp insb push inc pop jp nop in push (bad) sbb pop loop icebp leave dec aad loope jmp pop ret sbb pop xor push add push dec pushfw jecxz inc fsts cs jo mov xor aaa scas cwtl mov stos (bad) mov adc jnp pop cmp pop xchg (bad) jne sahf xlat xor jae cs mov add adc mov lock and mov iret in pushl cli cmp insl fdiv loope (bad) mov std fadds add cwtl aad lret rcl test movsb in pushf and arpl ror and (bad) jns mov sbb jae jge ljmp sbb inc dec outsl iret repz ds adc mov mov push adc shrb bswap xor inc (bad) xchg push mov and aas les adc mov xchg aad cwtl mov lods push xor mov sub cmp inc inc cmc xchg push mov ficomp test daa cli test xchg repnz pop fimul popf int arpl pusha mov cmp daa push icebp push les mov jns in push lds jg rcrl fwait addr16 add or aad (bad) jle adc inc push fcompl push ss mov popa sub ret lret std inc mov scas dec jns and sub in pop dec stc scas xlat mov into test imul fild mov adc push aaa push aaa sub (bad) mov cmp xchg cmp lcall push fmuls fstpt scas sub jae mov push inc mov std outsl shrl push incb pop jge mov mov inc insl sub js iret inc in rcl lahf and dec add xchg (bad) xor jg adc add (bad) mov dec or and mov dec ss or insb mov inc int mov fcomps xor inc (bad) fwait add rcll popf pushf add cmp or xchg pop jns loope enter mov iret sti jae adc repnz test jle into adc ljmp call sbb push imul adc inc std push inc lock stc mov outsl iret xchg rol sbb sbb or ret push inc and test les cmp test lcall adc xchg dec jge lods stos pop push inc sahf or sarb arpl pop les (bad) jo (bad) push rclb xor rclb es push lods inc push out ja lret idivl in xor mov into cmc mov push cld mov sub scas int3 int3 pop lock dec sahf out rcr icebp cmp aas dec out jae jo push lcall ss roll mov mov (bad) xchg adc hlt mov jo aas xor sub pop imul cltd inc push leave (bad) and push jno repz sub push add jbe pop add mov (bad) cmp or rolb imul sub push pop cmp mov fcom cli mov mov sahf push fildll rorl xorb imul dec stos jecxz std int3 and push add push imul adc lds xchg push inc pop pop xchg (bad) test mov (bad) jne insl cmc xor hlt rol (bad) rol mov pushf outsb mov pop aam leave add mov in aas pusha and sbb xchg iret xor xor aam loope lret dec cwtl addl jno (bad) mov sub sub out inc lret dec (bad) gs fdivrl in (bad) aam fs sti (bad) mov push mov mov adc addl adc sbb sbb inc add cltd ljmp lahf ds sti sahf sti xchg sub sti pop in ja aaa mov xchg stc pop in or dec mov and leave jbe scas xor fnop add mov js pop or jo inc int3 out dec out cwtl adc xchg pop lret xor arpl mov mov add outsb adc popf inc mov pop pop adc std cmc in sbb stos pop mov fsubl insb je mov xor mov movsb cmc in inc push cs les jp cmp and mov loope repnz cmpl (bad) movsb sub dec les xchg dec or xchg or cwtl ds xchg cmp jnp,pn scas push scas insl xchg nop and enter ret (bad) mov mov stc imul push and cmp in xor cli add jge das push arpl fstpl mov ret bnd jl sbb mov gs call adc scas repnz inc fistpll stos sahf clc mov pop popa push sar adc (bad) pop bound push add push dec test aad gs adc into pop sub xor loop lods stos push jl hlt push in mov in dec push fucomip hlt lret mov rclb dec js rorl jmp dec pop je ds movsl adc iret (bad) mov mov and (bad) sbb sub ret push repz mov add dec add pop lds mov lret dec mov test std popa mov in call popa xor inc inc rol cmp fimul in sbb xor and xor jne jmp insl cmpsb mov push push mov cmp add testb xchg mov aaa and out lock in aad imul or lcall out andb adc lret mov dec out lods pop int rolb dec pushl jo enter out mov (bad) into fstpt ror push sbb jge mov icebp into xor or pop jle sub orb adc add mov xchg cmp (bad) je std imull aaa jg jo lock shrb inc cmp test xchg mov jmp notl fisttpll push push cmp rcrl jae lods jmp fdivs adc inc iret lahf mov xchg sbb mov pop in nop mov xor repnz inc xchg (bad) je icebp cmp call cmc enter jns dec fstl push pop jmp xchg dec (bad) push mov pop aaa push (bad) imull jp addr16 (bad) dec pop mov jne js jne adc (bad) in and push fidivl xchg or sbb push sub mov xor or lsl inc pop mov aaa pop stos mov add fcomp mov rcl scas cmc mov loop mov sub js sbb loop bound scas jno inc in mov dec and aad pusha or adc shll cmc adc rcll cs imul outsb imul fs xchg mov inc push pop jo sbb xor xchg push jns shll pop push dec mov or stos stos in lds push mov add xchg sar jns sbb inc inc cld out adc enter pop rcrb jg jnp pop out xchg inc repnz daa xor fs int3 jae mov xor mov mov jl push pop inc ljmp and mov lock inc mov addr16 (bad) mov out cltd pop cli push or shrl sbb mov stos jmp mov sahf xor pusha shlb ja inc push test jl test hlt in inc pop sbb jle mov push inc push mov int out mov sub xchg cmp (bad) adc sti and js pop (bad) push pop test mov xor and mov cmp dec mov imul xchg int3 push das mov das jne jle add push (bad) ss push push push (bad) cmp xor cwtl std pop add xchg mov mov ss jp or dec jle xchg repz inc sti jg dec cmpsl fstp test imul pop xchg jo sti add test push xchg cmp mov fucomi jno cwtl dec icebp sbb unpckhps cmc fisttp fidivl dec push and cli mov adc dec test lea sub movsl jle adc fnstsw inc push pop dec inc pop cwtl out push mov sbb or xlat rcrb call jecxz popf mov add xorb or xor sub aad std adc xor cltd es adc pop add popf fidivl xchg (bad) mov notl ficoml cmpsl xchg mov mov gs and lcall fnstcw pop inc push lods (bad) ds call fsubrl scas out lods scas lds pop enter les aad in jmp aad fcomip in sub xchg xor xchg jnp mov jmp xchg inc push arpl cld sub push lods xchg adc xchg push xchg mov xchg dec xchg dec popf dec xchg mov leave ret add push mov and ret insb dec in movsb push push jp or dec lahf push adc pusha cmp out insl movsb dec scas jmp fwait push adc hlt in dec push ja (bad) call int lods cwtl inc popa fcom fisubl sbb std nop push mov arpl notb sub mov cli mov cmp cs mov mov int3 cmp or mov scas sub cld push stc xchg mov bound daa pop test jae pop mov push pop insl xor dec cmc inc popf call arpl pop add data16 shlb pop adc das xchg push or adc inc pop fnstsw or adc add xlat xor push out mov add mov jo mov cmp add push bound call cmp lret pop mov in xchg clc (bad) mov out xchg stos (bad) (bad) std jb arpl addr16 ret and addr16 mov imul sbb out repz ja loopne xchg out inc fcmovb hlt into repnz fist insl cmpsb sti imul push sbb aas push jge xor pushf add push jg cmc pop xor add daa xor pusha jl xchg cmp sub repnz mov sub subb sarb inc andb test jne fcmovb mov cmp dec into out rolb loop addr16 popf movsb xchg xchg and jl mov mov les mov and adc sub aas and in aas push mov mov lret push or dec repnz jp stc xchg and pop mov and and jae mov rcll cmp cld incb push jmp stc fadd xor or ret pop add push mov out xlat xor push inc add cwtl (bad) and lea jg inc adc rcrl and cmp push cli inc xlat or add xor (bad) dec fs addr16 sub in lahf ret movsl mov mov cmp mov ret outsl pop dec inc mov pop sub pop mov sbb mov mov movsb push (bad) into fnop mov pop (bad) fstpt mov stos sub imul jge je mov lahf in push aad xlat (bad) jl jae repz fwait cmpsl fdivrl mov pop jle sbb mov mov fmul inc in pushf leave and mov test daa (bad) shll and fcomps inc xor cld pop ret enter mov repz lods dec mov fidivl lods out stc (bad) mov pop fidivl sub movsb pop lock and flds inc lret popa nop dec push pop dec pop ds push xor mov out in shrb fidiv sbb rorl popf sbb sbb out adc andb adc mov pop movsl mov jge (bad) lret jg (bad) inc (bad) fsubr cmp int3 xchg cmpsl mov aam mov push adc adc mov data16 je push xor lods (bad) jl lods mov aaa je jge sbb dec (bad) mov mov das lods mov sti ja inc call mov das cmc dec cmpsl rcl mov xor mov (bad) dec push mov rcrl fbld sbb popf or and pop aas call xchg push jge push mov fldcw cmp add inc jbe out les or loope dec (bad) aaa cmc xor mov push or jl mov outsb dec loope dec je add xchg (bad) fcompl adc ss inc push pop pop inc push adc add push lock aaa sahf adc das lret sbb push push push (bad) mov pop and add fldcw out sbb stos fiadd aam cmpl out xor pop xor andl pop in push (bad) call scas adc scas add mov ficoml flds add pop xor pusha jge aaa cmp inc shlb adc mov out popa adc pop mov dec sti mov xchg push ret pop adc fwait inc xor add stos mov mov add lret pushf xor imul or sub sbb lds test or enter adc out or mov cmp out sub add out sbb ja mov sub je cmpl adc repz ss and cli mov dec xor cli push jmp aaa orl xor lret leave mov lods mov cmp pop push inc sub push (bad) xor sbb xor sbb cmove xacquire lock xor outsl stos and xorb das xor sub call (bad) repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out lcall add aas cmpsl mov and lahf nop mov dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add ja add add or or add or add add add pop or add add mull add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add cmp push js in (bad) push bound sbb popf mov mov (bad) mov fwait out jbe cmc loopne lods (bad) xor add orb insb or push outsb mov xchg les pop clc dec sub inc sbb or mov push jnp dec mov pusha test das xor adc repnz pop test data16 jecxz or xor pop cmp mov mov bound outsb inc lret cmp inc xlat dec inc repnz mov aam or into data16 pusha (bad) jbe insb dec pop scas xor xchg cmpsb xchg inc push lods sti jo loopne negb test inc mov mov jmp cmp gs fdivp (bad) out add out jb inc or movsb adc xchg outsl push fbld or test test cmpsl lea adc mov push pop mov (bad) cmp ja out dec cs jp out cli adc mov ljmp (bad) cmpsb pusha jnp insl or mov fmuls inc jmp cmpsb dec push (bad) js pop xor adc jae iret in pop jp push sub imul mov test je mov ljmp mov mov (bad) imul aas cmp inc jge mov fdivl cmp (bad) add sub add gs or fdivl mov mov cmp nop aas pusha cmp shrb loope scas push sbb xchg cs xchg lea push adc xor das mov (bad) jl sbb adc es pusha push (bad) inc jge sarl fld out ja inc ljmp in push add stc in jno sub adc loop lea adc pop and and dec ret mov jle dec imulb mov jae mov int xchg jge push jecxz adc je adc push jle mov stos mov add test ljmp nop rcrl mov imul pusha ja pop dec inc hlt lods iret xchg js cmp mov rol sbb inc pop jnp fildl jg xor cltd mov sahf ficoml gs fsubrl inc sbb decb and jmp push insb push (bad) pop shrl jo repz addr16 or testb mov imul or adc cld andl dec (bad) jne testb shr repz out jnp (bad) hlt ret mov les mov fnstcw in pop lret mov xlat xor into imul push pop aas fmull (bad) (bad) cmc aad push mov repnz jae into inc gs int jmp pop mov mov cmp out lret dec xor mov xchg xor fmuls mov dec mov fcoms jp adc dec outsb lret inc mov jno mov into mov subl imul xchg sbb sub (bad) icebp bound pop and xchg test push adc jecxz inc lcall push addr16 dec fildl lcall push lods mov and cs dec jo adc push cmp shl xchg dec rcrl in or mov and mov mov add sbb pop or mov sub fs adc sbb or pusha es push push test sbb and mov inc add hlt push sbb pop frstor into imul xchg jmpw mov repz (bad) dec daa rorb test je fbstp jg movb jb push mov or or test mov cs inc jmp pushf cltd scas pop incl inc pop repz or int mov icebp cmp xor sub mov xchg and jg xor jg cmp sarb push jb iret jmp in out xor xchg sub pop push orl sub cmp xchg cmpsl gs insl ret push (bad) shll push faddl jmp icebp es or cwtl lods mov test xchg xchg (bad) push call out cmc repz mov mov fs sbb aad imul mov push push jge add xlat shll pop pop popa out and dec and in dec inc pop jg out adc (bad) lock xor scas mov mov mov outsl adc sub mov sbb adc iret push ljmp or fdivs xor and mov pop lret mov (bad) call (bad) div lret jle mov insl cmp test addr16 decl sub or insl (bad) out or aas pusha loopne (bad) ds lods adc push jae int3 gs jl dec daa pop pop aad add bound adc sbb (bad) mov imul push cwtl (bad) daa dec xchg lret loopne jg imul mov ja out ret loop pop pop or (bad) nop jle or leave or lret out sub stos fsts sbb xor inc mov pop dec iret into mov add lock sub sub add in pop mov dec dec int shlb cli push push ljmp sub push (bad) ja data16 inc out out or sub sub iret inc inc push bound nop sub and add add inc xlat cli and fistpl fadds dec xchg in ss bound dec xor cmp xor lcall lahf scas xor mov fisttpll push mov frstpm(287 cmp int3 mov and sahf lcall lock fstl out jle enter mov pop mov jmp mov lods pop arpl inc scas mov xor sbb xchg cmp sbb (bad) hlt out (bad) fcmove inc lds sbbb stc dec cmp movsl push jb sub mov lods sub sbbl addr16 mov mov enter je mov pop mov push scas xchg mov mov mov mov add xor aam xchg lods fwait sbb sbb roll stos sub push loopne lds out addr16 jno xchg pop mov pop xlat scas mov cmc mov jl pop mov mov dec push pusha cmpsl addr16 mov loope mov les mov add mov loop int into sbb mov push xchg movsl xchg mov in cld movsb xchg mov mov adc pop push inc movsb outsl pop pop or mov adc push fnstenv jne or sub shr in cmp dec mov scas mov test xor lcall adc or jl (bad) mov sub mov (bad) lock out or mov stos push mov dec push out iret test pop mov sbb cltd lock popf jle and pandn lahf shlb mov dec sbb mov xor ja mov sub sbb sbb popa mov rcll repz popf lcall fcoml adc inc mov mov jnp cmp mov mov (bad) mov fs dec inc xor push inc xor mov imul loop int3 lea dec jmp jno sub sbb sbbb shlb push (bad) (bad) jo (bad) (bad) outsb push xchg js inc cld sub (bad) and shr pop xchg mov xor mov outsb ja sub fs push insb add ds dec xchg adc cs iret or imul inc aaa cmpsl mov (bad) pushf mov jecxz inc icebp pop enter adc (bad) and mov sbb jo sub dec add lock adc mov test mov icebp adc or push mov xor nop outsl incb hlt pushf popf iret mov cld mov (bad) cmp mov push jbe lock or ret popl xor cwtl stc popf xchg popa and cltd push cmp out pop dec pop imul mov adc fwait lcall mov mov inc cmp jae pop xchg call outsl lods xchg mov jns dec icebp clc jne nop xchg (bad) icebp sbb int jge jb pop mov sbb and leave mov xchg fcmove jl cmp mov pop jle xchg mov jne and pmuludq jnp mov and fs rclb cmpsb insl xchg and cmp pop enter leave cmp xchg pusha add dec lea cli and pop aad ss xchg rolb cmp adc je out mov push jns mov mov pop push in mov addb and mov jg inc mov dec (bad) sub xor into ret xchg iret in xorl and cmp movsl int3 test add inc lock mov jl push out ret xchg add jge sbb push mov loopne adc mov mov out jnp mov inc jns stos outsb fistpl (bad) mov sbb dec mov (bad) mov push xchg gs mov add test je in das jns popf cmpl repz jmp jecxz wrmsr sbb jne dec or imul xchg lret xchg jno jne sti mov mov mov ds mov inc (bad) mov insl (bad) or test push clc or repz (bad) outsl shll cmpb adc (bad) xchg hlt leave sbb or pop dec mov fsts imul cs and jle cmpsb clc call xor lods insb fmuls arpl std fwait cmp mov or jp xchg sti (bad) jmp cli cmc xchg and (bad) fnop pop jmp adc inc xchg lcall sbb pop mov movsb or enter rorb (bad) and test cmc fdivrs sub dec or into jge fldl outsb lcall mov mov mov mov cmp (bad) sub add pop fwait xchg xchg ret daa mov nop scas pop iret mov aam andb xchg xor mov addl cmovge mov lret sbb inc cs aaa lret sbbl cmp int (bad) xchg jg xor mov fcoml rorb ficompl repz addr16 sub (bad) mov pop movsl insl and je inc (bad) in icebp xor pop jecxz pop jp push les sbb sub insl cmpsb or (bad) cmp stos in mov clc loope mov mulb ljmp push sbb dec adc inc xchg repnz call nop and cmp adc mov aas inc mov lods fcompl out enter xchg fdiv imul (bad) jp mov mov shlb repnz and in jmp mov sbb xchg sub jnp rorb popf pinsrw mov popa adc gs shr es shll test push pop lds cwtl (bad) outsb push mov xchg (bad) imul inc add mov pop mov ds (bad) jl push inc sbb xor and ret lods adc out ret jnp pusha push mov mov popf dec xor jmp fstpl xor add mov js (bad) fild inc cli shr pop enter xchg mov mov jbe adc add xchg (bad) pop popa cmovp scas cltd mov (bad) inc cmpsb cmp popa pop cmp iret cmp mov sar mov mov loopne popf cmp jb and stc lock inc fbstp outsb adc aas sar aad pop popf lock movsb push (bad) and pop cltd gs jge mov push cmp (bad) loopne aas hlt outsl dec (bad) nop imul dec pop mov addr16 pop adc mov jp mov sbb sub xor fiadd xor inc jb clc pop fwait jle enter sbb push push cmp xor fdivrs cwtl or cmc push mov and jnp push jl outsb xchg out aad das hlt and add out repz (bad) pop jno out lcall xchg loop fisttpl (bad) xchg add test push sbb les fwait clc cmp nop in stos and cld push imul or sub or xchg push mov dec daa cmp adc adc das cmp sahf push ljmp scas int sbb mov andb xchg add push stos or jbe sub dec jp mov push das adc pop push dec jno outsb aam xchg xor fcoms xor aad or mov and call mov loope fs mov mov push insb xchg lahf (bad) push jmp arpl push (bad) popf jo push lea in fdiv ficomp ror lahf fldt lahf mov mov in adc fs push fisub addr16 sbb pop sbb vpaddq mov (bad) mov icebp inc arpl enter lahf mov hlt inc ds and add test arpl sub and cmpsb mov fisubrl push or scas (bad) (bad) das xchg out pop movsb jbe sbb push (bad) lret pop mov adc fidiv fsubl xchg or dec pextrw mov mov ljmp xchg mov xchg mov xchg push inc or loope iret sub pop dec mov adc shrb je,pt push ja orl jl sub mov popa popf cmpsb scas xor movsb cmp stos cmp xor adc cltd push gs outsb inc fstpt in dec hlt mov rcrl push jo int3 aaa aad inc cmp imul dec push cmc daa jns test mov lock (bad) popa adc inc test mov movsb cmc test dec daa adc dec dec lods scas xchg cmp sti lret bound mov test lea add pop pop dec aaa (bad) jno add or add (bad) adc dec add dec fs cltd xchg mov dec (bad) es popf es cmpsl repz into push jbe rcrb fisubrl ret cmpsl adc stos pop jae enter mov in stos xchg sti lea lret hlt push and sub nopl add cld aam inc adc push inc pop push cmp sarb jmp adc in and or xchg mov xlat in xor inc mov lods or (bad) cmc cmc mov faddp jge mov out dec sbb or bound shl sbbl pop cmc lahf movsl lahf jno fwait into sbb inc data16 (bad) sub lock add fsts inc movl xchg dec sbb sub insb das cwtl mov and fisubl std lret test cmp xor jae mov in frstor xor ret cs (bad) (bad) enter mov sub divb outsl xchg mov addr16 testb mov adcl inc xor mul jge mov rorb add dec scas jmp ss pop xor fwait push mov int lds test or xchg (bad) pop mov in sub pop jp push loopne outsb push xchg or or push sub xchg outsl adc dec aas fmul xchg push sahf sub pmaddwd fs sbb pop int3 mov adc push mov gs pusha pushl xor add cmp fistp mov mov xchg pop push cs out rorl push push int add call jmp fwait jle cmp sarl jg inc repz repnz pop jecxz push jo mov not mov xchg (bad) fs addl sarb jg xlat (bad) das inc out jb sub mov aaa xlat (bad) jp mov (bad) gs fsubrl pop sbb xchg lods shrl mul stos mov ja call ja jecxz rcrl mov sbb adc adc inc int3 push dec sub xchg or cli loope in sahf cmp mov int in xchg inc clc mov and inc leave ret out lods fimul mov xchg out (bad) and jp push cmp push xchg pop imul sbbb fldcw lret int3 scas aad and jo adc (bad) pop test lcall mov inc mov pop xchg pop xor cmp dec out push inc sbbl and jge ficompl jne jge test adc cltd into sub out push xor int ret cmp xor imul cmpsb out nop push mov icebp push sub lret or mov sti loop rolb scas std pop xchg sarb mov sbb mov adc and jle adc sub fcompl cmp int push jbe add pop xchg jae mov scas dec push mov nop ret ds mov jns jge imull rorl cmp shlb or xchg aad cwtl push daa scas mov pop xor xchg jb mov pop dec js iret push adc or movsl jno pop push sti ficom fadds dec stos ret adc les and ret bound or xchg mov scas xor in mov not xchg sar xchg or loopne iret pop push cmp rcrb push add fldl push in add and stos pop cmp stos xchg xchg aad jbe xor xor push lock rorl cmp (bad) sub repnz lock frstor jne cmp push aas fistp mov sub rcrb jge loope mov push mov xchg and das mov sbb lods nop fbld cmp jnp add std sysenter add cmp insb loop (bad) fdiv or mov jge or xor mov cmpsb inc shr movhps jge js rcrb cmp ret sub (bad) fldt pop fiadd movsb push xor loop cli xchg bswap push pop mov repz es push sbbl dec (bad) (bad) into fdivl mov lods (bad) loopne mov imul cmp insl or aas (bad) aaa ret and lret and test cmp jmp push (bad) or std or pop sbb cmp pop icebp insl fnsave mov jnp inc insb sbb stos mov mov fisttpll fsts and cld cmc xchg lods (bad) aad insl aam (bad) mov loop or leave xchg mov (bad) xchg inc inc pop mov sub loop mov aam inc push cmp out push mov push fild push xor or xor sub cmp sub mov and or pusha scas (bad) xor (bad) jns lahf pop (bad) and outsb dec test inc fcompl fcmovnb mov lock push test push inc xor mov rclb pop shlb repnz mov arpl out pop out (bad) inc cmp mov jb mov mov dec pop cmp pop jae xchg in stc or out adc xchg inc lods cmc jg or inc push repnz lods jae pop imul mov mov lods sub stos cmc pop pop scas divb sarb mov adc sub sbbl (bad) mov or shrb (bad) ja js push cmp jbe mov imul lea add ss jecxz sub jnp xlat mov call (bad) adc outsl adc in sbb adc xchg and inc aam inc add out pop loope pushf and cmpb push push pop pushf out inc jae mov scas fwait aaa movsb sbb mov jne jl lods iret jmp push stos mov inc adc dec xor mov shl in jo out jns (bad) popf push in int3 fadds mov xchg lret pop jo loope xor mov movsl aas mov mov lret jle jle scas mov lea push lock sub icebp rcl test out dec rolb das mov les inc sub or xlat shl iret xor adc movsb movsb (bad) repnz inc inc int sbb cmp cmp iret cmp adcl inc (bad) in enter mov or fbld mov xchg mov cmp sub mov xchg pushf ror sub push fildll in (bad) repz je and mov pop sarb insl pop mov jle dec cmp xor test push xlat inc lret push stc mov lock inc sbb (bad) cmp shll xchg stc inc inc inc dec cmp fisttp and ffree nop sub pop or cli hlt ljmp cltd pop insb mov fiaddl dec lods mov cmc cli std sbb scas ja je ja arpl adc dec scas in fimul jae or and mov ds fsts cmp push rol je sahf mov cmp repnz test mov add mov mov pop xchg insl or roll xor ret sub fistpll scas insb jns sbbl cs cmp test dec setle add loope push fdivrl xor andnps mov mov jnp pop leave sahf inc ss lock xor pusha lods repnz daa outsl fidivr rclb xor xor bound out add or icebp lds in cmc test not push mov mov inc adc pause cs vfrczpd sbb pushf sti insb mov ljmp inc fwait xor dec daa push fdivp jecxz and shrb adc das xor (bad) or call add rclb mov stc xchg fisubrl fstl sub jmp inc mov cld icebp add xor inc mov in add xchg jg mov movsb dec cmpsb cmc fiaddl pop inc addl xor xor stc mov mov into add hlt mov ss vpinsrw or push sub mov push sbb jp ficompl add insl mov test lods loop jg jo jecxz (bad) push movsl xchg call aaa in lret cld jmp mov push and arpl sbb push mov sub movsl shrl add setns outsl pop cmp stos sub mov xchg mov pop ret dec jle mov sbb mov lret xchg mov dec repz add and or cwtl jmp cmp fstps fwait ss movsb mov (bad) int3 mov les pusha dec push sub cmp lock xchg mov ret pushf (bad) int3 scas lret sub lods mov dec sbb fmulp ss pop pusha ds je imul out dec dec (bad) cli es (bad) pop pop sub mov (bad) jne fcoms ret out push and inc push cmp push push xchg cmp cmp add fstpt out xchg in cmp cmpsb mov popf fmul push sub inc fnstcw xchg mov sbb mov sub mov jnp mov sub ret popf jp cmp cmp into rorb pop mulps push jge jo arpl cwtl inc aaa and mov mov inc fs ret push shrb lahf fdivs cltd loope repz inc jnp test xor fs dec gs push in adc pop adc in (bad) (bad) enter jbe dec inc xchg mov inc nop adc dec mov rorb leave je adc and mov je mov sub std mov mov mov xchg je mov dec cmp mov jne xchg inc out test dec pop xor sbb mov and in dec adc (bad) mov loopne loopne jns mov gs add inc adc pop jmp dec movsb clc sbb cmp mov push cmp add mov ret fwait rcr xor or or popl mov xor cltd jecxz (bad) add adc and das insl inc fisubr pop inc pop add imul std pop pushl cmc out xchg jo idivl scas in mov movsl fcomps pop popa je popa popf adc mov inc stc scas scas sahf les mov mov sarl dec stos add mov stos dec jne fisttpl dec or push ret pusha test fmulp xorl fndisi(8087 xchg movb adc bound enter loop lahf lods mov lods inc imul sub pushf frstor mov cld jp push mov mov scas lea (bad) add pop jmp dec fildl mov (bad) iret int dec mov cmpsb jge or int3 sbb rol fdivrp insb bound and mov movsl loop mov adc popa add push les (bad) in out popf mov sbb outsb sub and mov aam and std xchg lods outsb inc cmpsl add sub (bad) jo outsl into cmp xchg and cwtl stc out dec fldenv cld pop xor loope in adc add (bad) icebp adc add test jbe (bad) inc iret orl mov ret enter mov sarl adc pop ds leave pushf mov mov jae xor (bad) jno and fwait dec jecxz pop loope mov je iret push mov push imul dec out mov sti leave sub orl lret mov lcall clc sbb enter icebp (bad) push cld enter fiaddl ret add or mov out fnstenv (bad) mov sub pusha pop int3 stc or pop int pop cwtl mov mov xchg mov sub sbb outsb jno push ja or scas jns fiadd sub cs push rclb cmp fsts xor repnz notl std sahf cmp popf push hlt lcall sub xchg sbb push mov dec xor or (bad) repz adc mov in mov or lret test and arpl pop add jnp pusha and and pop arpl inc cmp arpl push inc xor sbb add nop leave nop xchg jo mov aaa mov pop dec adc test outsb jl inc ljmp inc fbld (bad) lahf sub cmp stos dec pop mov shlb nop dec sbb mov (bad) xor hlt xbegin add imul insl xor loopne pop xchg test fs movsl bound sbb dec and aas mov outsb adc (bad) iret jae sbb pushf jecxz cmpsl les out ss daa and push in in sbb inc mov js andb pushf in inc popl xchg jmp jae mov inc test sub mov pusha or mov stos jle dec in repz mov ficoml sbb sub arpl xchg rcrb lahf shl mov xchg pop ljmp mov or sub xchg lret lea adc loop jle mov mov jg cmp cmp mov lds cltd mov fstl add sbb stc ds and call out sbb (bad) loope inc sbb dec mov mov inc iret das sahf aaa insb xchg arpl aas or add push and add mov pop xchg adc nop out lock cmp pop popf rcl in xlat inc jns cmp (bad) repz call pop xchg (bad) lret stos sub data16 test rcrl dec in sub adc push inc jnp cmp xchg out add pop pop and mov sbb lds cmp pop mov and arpl je push gs arpl icebp pop das mov fidivr (bad) sbb out jne js lea hlt scas adc xchg dec pusha jno shlb add or mov ret stc ret iret cmp adc repz gs jno jp mov cmp adc in cwtl xor add bnd xor loopne adc (bad) aam aaa ljmp or xchg (bad) sbb add ror xchg je dec or lods add mov nop lea sub and pop push je push push push inc xchg jecxz aas mov pop scas or fist outsb data16 cmpsb loop mov es addl push or ja cmp add xor popa pushf sub jp jmp notl mov push cld cltd imulb fs jae pop insl repnz dec aas icebp fstp lock adc scas dec insb cmp popa mov aam inc xchg in inc xor decl mulb add add sbb cmp scas test lret lods adc mov xor inc jmp lds ss xchg sbb add int dec mov xchg dec mov rcll lret cmove cmp sub rolb pop pop test cmp test add mov push xchg or cld sub push imul lds (bad) cmc fs mov xchg mov ret lret mov dec sub sbb sti adc dec pop nop pushw xor sub loope xchg out les dec lret sub subl pop dec cltd outsb nop jae subl cmpsl int3 ficom inc js cld lds inc and dec push hlt sbb mov xlat lret test inc std or mov cmp dec inc pop incb andl mov adc test std insl rorb aaa mov xchg into sub stos mov jecxz mov mov mov (bad) sbb or push (bad) fstpt es inc nop es mov and imul dec (bad) mov adcb mov jo stos cmp or pop pop adc loope movsb pop cmp movsb scas inc int rep (bad) lahf (bad) or lock hlt jnp or test mov sbb cs push out adc shr mov stos out or mov (bad) lea adc les push aad sahf cwtl mov fwait lea enter dec nop jle xorb push or pop aad cld dec outsb cmp push push dec out int3 push js das aad cld in inc jbe test jno lret adc jno psubsw jnp push pop pop lret cs cld int cmpsb sbb popa out lcall inc inc and pop push push int inc and pop lcall les dec lret lcall jg movsb les inc inc std pop call mov adc stos bound xchg pop mov (bad) aas dec adc jmp fild jle dec dec test sbb (bad) test gs call inc (bad) ljmp int icebp dec dec pop jg push mov test movsl aas ja push (bad) jecxz and cmp jne aaa jns frstor adc cld push mov popf xor sbb (bad) sub xor sahf data16 ret dec ret push cmc mov lock pushf out xor repz mov inc and sub lret xor sbb cmpsl out je xor jne or shrl mov sahf pop leave mov and das xchg lcallw push imul insl roll scas jo jnp stos push lahf jns and outsl loop rorl jo cmpsb mov or lock es test xor or sarl push das mov mov adc add sarb sbb xor sbb loope add loope outsb icebp pop cwtl push cmpsb roll xchg icebp sti rcrb loopne (bad) mov sti mov xchg mov adc aaa popa xchg push pushl clc inc dec sub ss (bad) sbb mov repz xchg mov mov mov aad inc cmpsb cwtl fiadd lcall cmpsb daa dec cltd dec arpl cld sub pushl movsl stos xlat movsb pop in push dec push add out mov fbld cmp xchg fwait pusha ret pop cmpsl pop subb scas xor (bad) xor or sbb mov jl aas fsubp add data16 jbe arpl loope call clc fcoml sti test adc sbb rorb pop xchg into outsl mov repz jp mov dec shlb sub inc addb leave lock xchg roll (bad) mov adc cmpsb cltd xchg push adc xor sbb xchg pop testl (bad) mov shrb mov add jae xlat pop dec shr mov mov jns sti fimull lods sub sarl pop scas or mov xor xchg lods gs sahf sbb out div mov rcl negb sbb repnz aaa sarb jmp adcb add add add es sub ja je xchg movsl loope mov (bad) fildll mov cmp stos aas inc jp sub push add sti scas push cmp ficoml cmpsb cwtl push push cmp dec pop jae movsb (bad) push pop and cmp addb or inc lcall add scas cli mov (bad) ss xchg paddq dec out outsb fdivs (bad) rorb cwtl inc hlt mov cmp cwtl pmullw jl mov or das cmc sbb cmp (bad) pop xchg and addr16 mov xorb mov dec pop xor mov jno adc jno rcr sti push sub push sbb adc loopne popa push rcl ljmp ret mov sahf xor fwait stc ljmp lock push add mov lods inc aaa add push push mov jg pop mov xchg mov movsl int3 repz mov out shlb jo xchg loopne aaa dec cmp popf cltd mov mov int3 cmp add inc xchg js cmpsb mov sarl leave and jp push scas (bad) lret jae inc in cmp and les les pop out and mov mov hlt push mov dec repz sub xchg je xor movsl repnz clc sub js popa movsl sbb pop or inc sarl sbb mov sti inc out ljmp pop cld sbb out dec int3 adc push mov mov inc in xchg lods (bad) out aas (bad) es mov das dec mov jns cmp inc xor nop (bad) add sahf xlat cmp loopne movsl gs add test enter xor push pop loop shll stos and outsb mov mov loope adc xchg es shlb mov and hlt roll jbe dec cmp lret push cmp jg call dec push sbb fcoms xor jl sub subb mov cmp fcmovnbe sub arpl mov hlt xlat xchg shr faddl sbbb dec out popa mov cmp jecxz mov pop jmp (bad) fdivs dec sbb in push pop lahf inc sub aas stos mov fmul clc inc mov into mov outsl adc cld push rolb sbb jb lret jl mov cmpsl adc cmp (bad) lods das stos mov inc adc adc in jo cmp push push imul sub es stos xchg aas inc push sbb push mov jge mov or xchg les mov test movsl data16 mov push sub jb add jnp fadd daa mov cmp mov xchg jge inc and bound adc enter popf jns xchg insl mov out mov lahf sbb jno outsb add sti stc jecxz xor adc mov setns pop (bad) pusha jp push sbb push push push adc leave sti jle (bad) decl test imul adc or adc jbe gs pop dec stos or aad lods sub sbb repnz sbb call insl test dec adc fldt push pop pop pop in mov cmpsb fpatan jae dec (bad) lahf daa mov lds mov nop mov andl ss cli xchg repz jo aas push aaa (bad) fcompl xor mov leave and popf fstl test rorl xor lods popf in sbb push mov (bad) jb stc test mov sbb xor and and or or inc mov jg sbb or jb or lret bound movsl inc or jo pusha mov jo push in sti lock (bad) (bad) push stc sahf pop in sub negb mov push pop sub jno inc movsl loopne xor or and xor mov pop jl lods mov xchg test dec xor xchg jl sub shlb mov or lahf pop pushf pop push pop xchg mov push stc add sbb fsubs loop sbbb outsl pop and mov fwait dec test xchg mov (bad) ror mov je inc pop and push jg mov lds push mov xchg pop (bad) je cmp xor xor pusha leave andb dec jno das inc xchg mov aas out sub jecxz mov arpl add leave mov movlps daa mov aaa xor and jmp pop jmp mov push sub and cmpl mov pusha mov cmp push pop inc push xchg jae mov mov mov jp jns pop push push cmpsl in popf lret fistpl jb shrb fnstcw jmp adc push push pmullw jecxz mov stos push adc sub mov dec lea mov pop push hlt xor pop inc daa les push mov subb shrb mov cwtl sbb or aas xchg dec xchg mov and test subl or inc mov sti int out pop or int xchg (bad) sahf pop out out pop xchg sbb insl lock ljmp adc mov or ret xchg or stos into leave xchg in arpl loope cmp lods pop popa pop cltd xlat hlt aas fcomps (bad) hlt gs push mov sub loopne dec movsl jp leave xchg stos mov daa or fs mov cwtl pop pop cmp clc (bad) (bad) shll jno and subb js out pop push stos das mov lods std movsb sub hlt jbe jmp inc mov fldenv rorl sub xchg mov dec cmp cmp adc mov mov scas pop rcll xlat call dec sub adc xchg cld (bad) ret xor adc addb inc pop inc clc inc out and sub ja xor jne xor enter js sub cli fsubl aad leave push outsb or sbbl js inc pop push jge xchg outsb pop addr16 mov mov jg arpl xor push inc aam into push out clc lock sbb xchg in push push rorb mov sbb scas mov push lcall and mov xchg sub cmp jo sub pop xchg mov xorl jmp push jmp daa cmp repnz jge push mov dec inc ficom cmc cmp xchg adc mov sbb push push fcoms add inc cmc xchg insl cmp sbb jb sbb jo (bad) in (bad) loopne push insb pop ret push xor sbb (bad) in adcl pop rolb int adc xchg daa or push clc outsb data16 cmp jb add cmp out pop xor mov and sub (bad) inc lock leave sbb adc mov test fist push push jns fldl pusha test daa aas or add nop insl inc inc mov stos sbb mov xchg jle frstor jno push push jns orb push pusha pop xchg (bad) (bad) push xchg adc xorl fisubl cmc movsb les mov stos inc in xor cmp rorl push inc inc mov dec rcrl int3 icebp push push dec pop movsl or sub das pop icebp out mov insb push aad mov add dec aad (bad) ja xor lods fcmovbe lret (bad) push jns scas push xchg hlt jo jae orb loopne push cmc xor div mov ljmp sbb add mov dec dec rorb push jnp mov in adc notl dec dec adc ret in mov mov mov sub cld mov push adc cli lds lods les jns in fsubrs cmp faddp imul shrb cli ds jnp (bad) cs fs mov xor pop mov inc imul jns pop jnp adc push pop idivb mov (bad) jp loop or lahf dec jmp adc cmp jnp in cmpl mov adc pop loop test sub loope pop leave xchg push add int3 push fiadd rolb jge popa loop add mov fld mov call mov mov in pop add pop jl imul mov clc mov sbb in fidivrl jns dec or cli in icebp sbb dec jl cwtl daa jbe aad (bad) cmp cld std fwait jnp fdivrl or cmp jb and and leave ja das xchg xchg test mov icebp fmull in sbb sub jge inc push cmp dec xchg lahf dec std ret in ljmp xchg dec push and jb xor fcompl sbb push lcall addl (bad) adc sub jno in xchg xorl ljmp mov jb pop out iret ror arpl mov inc ficomp in in or lret add loop repz ss je lods jbe dec es (bad) icebp fsubr adc sub inc js adc mov mov xor sbb arpl push lods sbb or inc push push fildl and fwait add bound jb mov ss leave cwtl jge mov mov pusha mov xchg bound std pop sbb daa fs leave push xor push and push arpl push inc cmp stos push or dec xor test test mov or jbe mov dec lods pusha sub fistl cmp jne aam pop iret (bad) pop or cltd or ds dec mov mov ret add cmpsb push fnstenv push pcmpgtw xchg fmul fcmovnbe dec sti fs sbb sbb cs pop pop mov std fiaddl sbb or cwtl mov or cmc cmp idivb xor mov es (bad) push lcall xchg mov lcall imul lea or lahf (bad) mov repnz dec clc cli lcall fwait push gs insb push add andl xchg movsl mov cmp rcrb sub sub loopne vpsrad (bad) mov and clc add mov jmp popf dec gs call dec sbb cltd or out sub (bad) clc jne xchg or leave std test fidivl mov mov lahf sub mov hlt xchg adc (bad) push ja into xor dec (bad) mov ret in jmp fdivrs (bad) mov add (bad) push out sbb add jp push (bad) xor mov adc fdivr push (bad) xchg xchg xor inc adc push and xchg jg push sub adc les movsl aad in jne adc jmp ljmp in test mov scas popf jnp push adc mov jbe sub gs push mov scas fsubrs decb jl adcl jae bound xchg lods pushf fwait mov mov (bad) call lret and sbb pop xor xchg in ss movsb mov vmovss movl in (bad) push lret jle sbb scas test cmp imul push jbe mov cltd jmp inc mov dec pusha dec and cs push inc (bad) mov fwait std negl lret pop cmpsb push daa mov sbb sarb daa je inc or pushf push jo (bad) mov in lcall orl in jo mov adc mov mov out pusha mov pop cmpl daa mov sub data16 fcmovnbe stos rcr xor xchg lods imull es fs gs (bad) mov fs rolb inc and rorl gs inc repnz xchg mov cmpsl xchg ret fstl mov ret adc xor push ja leave mov cmp lock ret and test adc mov ja pop aam inc xchg repnz data16 push and sub mov adc andl dec push lods adc ljmp jp test mov fiadd cmp and pop fsubrp outsb lahf add hlt mov or add adc out mov mov sub push sahf pop sub sti sub lock dec lock movsl lods in inc mov gs fldenv pop out cmp adc inc xadd js pop stos decb ret sahf ss mov jbe outsb or aas xchg loop xchg lods sub std ja pusha pop loope xchg mov in scas fildl ret jne (bad) push in cmc js loope,pt das sbb xor mov test ret or stos xchg scas push cld daa push das stos jecxz dec aas jl (bad) jo frstor imul iret mov int cltd inc cmp sub inc cmp call sbb mov aad jl aad cli jae push xchg popf add hlt add cmpsl and add lds (bad) dec mov pop and pop scas insb (bad) push mov xor ret cmpsl mov inc cli (bad) nop jl xchg jl mov cmp test (bad) sub fistl pop xchg mov test xor adc (bad) divl pop (bad) imul or dec push pop dec push push adc cwtl add (bad) inc jg fcoml scas sbb ds jg cmp inc lret inc fimull mov xor cmp shlb pop test jns mov xchg repz push push js mov sub cmp int3 sarb xchg sub stos mov inc (bad) loop stos fidiv mov xor adc mov rol in push lock mov xlat lea mov mov pop push inc cmp inc jecxz jge push lret cli ret lret xlat adc cmp xchg movsb sbb mov adc orl fnstcw mov push push sbb mov insl jae or lods xchg mov cmp fcomp pop or stos xchg jns ss (bad) push pop adc call popf pop mov mov ret xor mov js addr16 jns rcrl xor int std cmp data16 out pusha or lret pop cmp shll outsl sub (bad) icebp or xor dec jnp (bad) push scas or adc ja sub mov pop xchg push lods insl daa addr16 cld and clc stos xchg iret xchg mov daa adc or xchg imul mov mov rcll sahf add jmp mov adc push inc push gs ds std mov jl fnstsw pop mov push lret push dec mov and movsl sub int3 mov loopne push jg pop mov nop dec lods fs mov imulb mov lcall test sub int sbb fs mov lods sbb pop int3 rol stos imul insl or push arpl xchg jmp inc sbb js pop outsb inc mov mov and out insl jnp les add xchg and bnd mov daa push loop (bad) repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc incl add pop (bad) or dec pop gs add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add jns add add or or add or add add add pop or add add mull add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add cmp push js in (bad) push xchg and push imul insl (bad) insl (bad) inc iret loopne adc dec les add pusha add out lret dec in imul cmp cmp adc mov orb xor out fs into pop cmp mov jmp push stos js aas xor cmp adc or rolb inc jb pushf pop lret mov repz jmp cmp sbb xorb and pop cld inc lahf test mov ja out or or idiv dec shrl pop insb (bad) mov add in (bad) jl (bad) cs push pop jo jp outsb jge sub jnp jmp xchg xor (bad) dec sbb mov mov mov xlat xor (bad) mov sbb daa ret xchg scas sarb shrd dec push mov test pop jne adcl aam popf in push mov cmp (bad) repnz xor cli nop or cld add mov lea mov inc sub jne dec mov hlt lock xchg jle lahf clc pop movsl les xchg stc cltd mov push mov push loope fdivl xlat call hlt cwtl lahf test test mov push xor (bad) dec mov aas push or mov adc xchg add lret stos cmp xchg cwtl in (bad) xchg pushf mov or adc orl loop cs lcall xor add or clc pushf push push adc fs push add add adc push sbb rcrb idiv enter imul jp mov push imul push in (bad) mov lcall or add cs pushf hlt xor ljmp push add fdivrs repnz subb das lock in dec inc mov enter addr16 mov jb or cmp mov dec das jb xor rorl pop and lret call test push aad lcall cmc xor push stos pop mov sbb adc inc orl cmp mov clc out out or (bad) int imul (bad) mov push clc mul sub (bad) sub fcoml cmp push fwait lcall in loope mov repz fwait jo test sub jecxz negb mov sbb sbb std test inc push adc rorb mov push push aad lahf (bad) mov aaa rcl and inc mov or fbld and inc in js call mov dec fucompp fidivl movsb and fcomp ret xchg aaa jno dec lea imul sub (bad) clc les loop mov pop xor lcall movsb mov push push xchg or fs add jg push mov mov cmp sbb dec aas (bad) faddl or insl mov mov sub push std (bad) loope mov xchg or bound pop arpl shll call sarb addr16 cmpsb hlt (bad) cmp loop in repz adc xchg pop cmp (bad) mov rcll rcll test xor scas pop mov or inc nop fcmovnbe sbb mulb rcr mov push in jp and imul jb stc (bad) clc loope rorl and or pushf les sbb add insl incb rcl mov jo adc popa pop (bad) repz xchg data16 cmpsl push adc divb addr16 dec ds sub xchg add shr sbb daa or insb scas xor xchg xlat cmpsl enter in xchg jnp rorl push dec mov ret popa cld push ljmp mov xor cmp movsl outsb or rcrb js mov (bad) cmpsb jns aad push clc fs (bad) jb sbb pop dec int3 lret sbb scas jl jp ficoml nop pop (bad) cld xor jno push jne jecxz cmp imul jmp in int3 lcall mov push hlt lret (bad) aad int daa insl mov imull scas sub pop jne mov xchg mov pop std pop cmpsb jge aad test in cmp sbb mov mov jge out or jb inc xchg xor imul mov addr16 push pop push mov into xchg fs add sub pop cmpsb out dec lcall xor lds icebp out js imul lret inc leave pop in and rolb enter inc iret sbb inc test call test dec mov lods cli mov add leave lea push jo jbe popf ss xor test popf mov cmp (bad) mov sbb cmp dec pushf cli cmp mov cmc mov sbb sbb mov sub jge mov addr16 mov cmpsb or in ja push inc lock popf (bad) aam mov sub rolb inc in ljmp stos popa add mov push xchg test jnp loopne xor pop sub jl adc jns dec popa ja jno lods dec sub testl daa xchg xchg mov add fldl jp iret fst dec xchg xor xchg cmp repz push roll mov push sub sbb sub pop enter mov mov sarb mov clc in cmp sub mov and pop xchg daa je inc test ficompl sbb and lock stc pop clc out inc dec and dec (bad) xchg je orps in rclb jb xchg hlt xchg dec inc mov ret cwtl es push iret mov inc ror sbb jg pop test jle push (bad) jb jge inc lret pop and or and dec adc push or xchg pop ljmp roll cld cwtl jno or pop or test aas push mov mov lret xlat sbb inc repz sbb ret mov xor sub fcom shrl ja pop xor dec scas lods fidiv rorl jno fucompp mov or jp ret inc pop add mov lods jg pop daa cmc sahf xchg xor neg (bad) mov sbb jns (bad) jbe subl push mov loopne xchg inc inc cmp stos sbb jg pop stos inc mov xlat mov ja ja (bad) das xchg jmp mov push adc and inc fsubrs and push mov xor out dec dec (bad) push inc sub enter mov jnp xor aaa jne cmp sbb lea stos mov shrl ja das bound mov shl int stos (bad) mov push cmp cmc jecxz rcr aas mov popf call mov pop ret sti hlt ss gs pop fcom or sbb mov lcall inc sti push push sbb lret mov push mov add mov ja push push push pop xor mov movd aad ss ljmp or cli mov pusha xor cmp mov es push imul btr dec cmp (bad) mov int push cmp ret inc in and leave call jmp cmp addr16 aad idiv pop es icebp xorl xchg addl and inc pop pop mov sahf stos cmc lea mov pop xchg loopne repnz subb xchg lea pop loop push sbb dec addr16 stc stc movsb cmp xor js js pushf insb mov or (bad) cmp fidivr mov mov xchg (bad) xorb push and sub imul mov jmp mov repz push sbb rorb data16 and adc dec mov cmp aaa mov add sbb clc push addr16 shr xchg notb (bad) out jnp sub dec ror mov xchg repz adc push mov lods in ror imul loope adc mov push fcmove stos out jbe lret push mov push inc add mov sbb rolb (bad) push mov pop insl jns pop mov add sub test push jne rcl mov leave or adc cld xor cmpsl sbb xchg push adc outsb jae lahf lds mov (bad) cmc (bad) dec mov push cld cmp and sub xchg or lods sahf fcom cltd and out ret lea pop mull push mov cmc xchg lock sub mov xchg and imul cmc test mov mov cmp cmp push aad (bad) call pop ljmp push mov call and rorl push add push and aam int3 or mov fimull xchg push inc rcrb jno icebp scas std jmp (bad) mov sahf data16 out in stos and lods mov add pop subb jge xor rcll fcoml (bad) cwtl or insb repnz sub jb or mov xor sub bound fsubl xor adc int3 addr16 fs movb popa outsb loope add jae ja ret sbb aad cmp sbb out or rcl lds jl mov adc scas (bad) nop xchg xchg inc push mov cli or sub idivb inc mov pop ret adc xchg fisttpll enter mulb xor cmpsb pop and mov sbb iret fsubp and mov adc mov insl es cmpsl pop sub (bad) mov scas in ss xchg cmp xchg popf ret mov sub jns adcb pop movsl push out jg repz fdivrp clc lods ds je pop call and push rcrl and fld lea mov fiadd mov jae inc ja mov fs xchg (bad) push or xchg pop jp sbb add mov je push aas jecxz popf xor lcall cltd inc std es leave adc lret (bad) clc jmp fist or mov sbb or je mov adc mov ficomp push fild pusha mov pusha xchg jne mov cmpsl mov dec pop jne je push in mov pop insl into jle bsf repnz div xor cmp mov nop jle jmp das cmp jne xchg test xchg pop push dec rcr (bad) in pop sub repz add out mov andl outsl lock int imul mov mov je or and lods cmpsb addr16 cmpsl mov pop repnz add es (bad) out mov inc les enter outsl test sbb sbb imul ja add push and scas nop mov jle dec test adc (bad) sahf pop mov pop pop sub aam mov in cmpsl stos mov imul test iret or data16 iret jb cmp xor in shrl pop cs xchg fdivs ret clc cwtl rcr out xor pop mov push loop fdivs adc mov popf jb sbb les lods sub or and lret xchg xchg sbb mov mov adc mov pop fildl sbb sub sbb ret inc (bad) loopne pop lahf in mov cmp push mov fldpi fmuls out jmp sbb pop mov pop fwait xchg repz lods sbb test push dec andl xchg mov and cs in push xchg lds cwtl roll ret dec pushf jecxz ljmp pop add add mov inc and mov sub xchg cmp push xor inc add mov mov add xchg dec jns mov les jle into add ds int3 repz (bad) ja xlat mul pusha (bad) mov out imul pop xor xor fild (bad) ja rcr xor movsb ret (bad) cld or sub rolb or inc pop in cs loopne js mov test xchg jle gs push or int push push rcrl fadds add mov xchg xlat negb movsb arpl adc adc ja lods xor mov xchg xor (bad) mov xor shrl mov (bad) shll loop test and and and cmp fsubl test push push insb xor jge sbbl jmp mov out out in mov (bad) call jmp nop or and insb clc enter and lcall lcall imul fisttp (bad) in ja call or mov cwtl fldcw mov (bad) (bad) lea test push (bad) in aam jle rcrl ds sahf fsubl or enter mov mull or adc dec fbld aad mov js nop (bad) mov jnp and push stos pop jns push sarl xor mov (bad) jp in or push inc insl jg repz insl ljmp cmp std inc aaa pop and arpl mov rolb out push popa loop push std jnp xor sub aaa jae sti imul inc lea dec ljmp and and jno inc add cmpsl fstpt sahf dec push test xchg adc icebp js jae inc sub hlt push add stos (bad) xchg or dec adc push adc fsub pop inc xchg mov dec push dec or sub repz xchg js inc inc outsb mov test cmp loope xchg sub hlt pop cmp nop mov mov ljmp cs sub in jl (bad) sbb orl ja sbb cld ret jo pop push or outsb pop lret repnz dec mov ss mov into pop hlt jo xchg bound (bad) xor xor std and movsb sub icebp (bad) and popf (bad) enter dec and mov dec into and xchg aad (bad) loopne inc in sahf fsubrl pop mov mov mov pop xor push dec mov sahf jb jbe cs pop mov rcrb lret add sbb xchg xchg aas mov or in inc xchg pop pushf sahf pop out (bad) xor stos sub out loope adcb bound roll cld sbb iret dec clc int3 lea inc sub lahf stos lea inc dec dec xor and repnz shrb mov addb push jmp sbb mov jg lds dec dec cmp inc cmc mov mov mov push ds mov cli rorb (bad) add repz mov fisub mov push data16 idivl dec adc inc gs sub cld push bound (bad) push xor lea mov js jecxz xor push fwait push dec adc add jne lahf dec les movsb mov int or pop bt sub sti cmp scas push fimull sub test data16 cmp lock cmp ret pushl dec es xchg cmp sbb movsl (bad) xor mov pop pop test xchg inc aas add cmp mov xchg inc inc popf push and insl pop ss fsubrl adc add pop lahf sti and call add xorb sub ret mov test dec and fidiv std mov or mov dec sahf cwtl pop aad adc sbb adc lea adc into xor inc fsubl lods or ja js iret lahf jb xchg mov adc push (bad) fildll outsb pop sbb movsl sbb xchg in xchg and jp scas stos xchg test push xorl jmp add pop call jnp sbb push push scas (bad) jae dec cmp lock stc mov jge sahf imul lds pop flds jmp pop cmp adc call adcl addr16 imul mov fcomps add movsl dec sbb daa or and fcompl lcall adc or add ds mov rcl call jo lock push in shrb pop dec mov lds sti dec lret adc imul addr16 xchg adc stos cld pop inc insl cwtl inc cmp iret jle cmp in xor addr16 (bad) adc sbb aas ljmp rcrl lock les sub (bad) mov xchg int xor (bad) push xchg push les mov sahf lock mov add mov es or push mov scas in popf imul stc adc xchg fs popf push stc fstps or insl adc mov push test inc mov ret mov push add dec rcrb sbb pop cmpsl dec mov push mov inc xor jnp mov and xor mov jmp add sub adc mov pop mov hlt push jo lods aaa lcall das jnp lcall adc jb ds xor push dec (bad) icebp or xchg adc sbb imull subl sbb (bad) rclb add xchg out xchg insl movsb mov fistl mov movsl sbb dec push xor push popa cmpb or daa mov insb jo pop push and xor mov pop cld shll lea cmp push movsl mov cmp in push sbb mov mov xchg subl and jne sub rcll jl mov (bad) lock out xchg ljmp (bad) dec subb and clc call jp pusha add pop loopne push push outsb push or push mov dec pop push rcrl scas xor fstp sbb out (bad) jp lret addl inc or fbld cmp aas sbb hlt out insl insb jns adc xchg pop rcrl mov aad stc icebp cmpsb lods push adc xchg mov mov outsb (bad) es xor fwait dec add stc push add in and (bad) mov icebp stc jge (bad) push ret push jbe add out lea int jmp push xchg sub jge test std imull push jns,pt outsl cmp loopne xorl ljmp sub ss cltd nop enter push cltd (bad) arpl scas pop rcr imul cmpsl jbe bound cmp mov xchg imul lea sarl xor mov sahf cld cmp add fist aam icebp outsl mov lret cmp jnp push or lds sub xchg mov jb jp adc ret add sbb nop pop leave or aas das mov add movb mov or xor and scas idiv iret popa or jno mov mov cltd rclb movsl test dec mov movsb jg mov sbb mov xchg lret adc mov pop xor xchg dec repnz cmc add adc xchg shld sbb mov bound adc or adc jg cmp add loope xor sub cmc pop ja dec in lret (bad) jne ret jnp mov lock aas cltd cmpsl and outsb xchg clc out pop lds mov push (bad) lea ret cmp mov shl arpl adc lahf mov cmp shrb push enter xchg iret lret lss call (bad) in bound push iret test inc imul popf pop int outsl sub test rorb imul daa rol test and xchg in inc sub stos jecxz lds jnp insb and scas jne xchg xorl rorb push sbb push pushf mov inc sub and xor cli sbb std mov sub scas into pop inc mov or scas hlt add inc or pop inc mov dec mov scas jmp mull fst movsb push jp jle mov inc (bad) xor jb pop pusha xchg jge and ja fs sahf loope xor pushf int adc sbb push mov push in rcl sub mov sub xlat divl shrb inc cmp outsb aam jne xor jb notl loope mov outsb test xchg push sarl fisttpl jg (bad) push add std mov and jge popf push mov adc rolb (bad) xor repz add push and sbb mov out mov add mov lock icebp cli add jle mov sbb xor mov loopne jp bound and lds push or cs cmp insl dec add push hlt mov pop jbe inc out cmc roll leave xchg imul scas jbe sub pop push pop inc add imul mov pop mov (bad) mov adc pop push imul jns mov mov cmp xchg sub jno scas sbb dec sub aad test es roll mov push call stc or es pop (bad) dec cwtl sub test xor jns rorl sub push mov and mov (bad) pop xchg cmp bound sbb mov fldlg2 pop lcall adc test imul pop xchg add xor xlat aaa out mov movsl jmp inc mov mov (bad) fstpt mov aad mov add psrlq decl icebp (bad) mov jmp movsb pop mov (bad) pop (bad) push (bad) jle add mov push xchg mov add pusha jnp xchg divb jmp jg int aam jno mov test pop dec sub xchg (bad) push dec dec add sub arpl jnp jo bound popf mov push fdivl mov jmp daa rcrb mov leave add push (bad) into test xorl lahf push gs push add icebp lods sub xor mov fisubr mov leave (bad) (bad) xchg xlat int fs inc mov test cmpsl and rcr in push or inc enter cwtl add in sbb dec sub jns xchg push imul jne ret aam mov sarl mov cmp mov mov mov ret test xchg iret pop pop cmpsb sbb jns push divl and fstpt xor adc sbb cmp sbb jg mov adc add adc imul ja mov enter in or jae push cmp adc jmp and adc mov stos jl cli cld pop add dec sbb xor add sbb repnz imul mov cmp (bad) mov ret scas out es jmp xchg loopne in arpl xchg rolb inc inc xor pop jno mov inc cmpl mov daa js add xchg adc lret jmp lret or out lods aad lcall sbb lret inc cli mov data16 push mov outsl mov mov fs adc fsubs add int and push sahf xor aaa loopne test cld mov xlat cmp sbb scas ss xor cmpl and sahf out hlt mov xchg xor or rclb mov divl ss sub clc sub xor les bound int3 daa cmp pusha (bad) lea xchg mov push stos mov xchg push fscale push and xchg add bound insl fstl shr jmp add iret (bad) out das aad aad repnz test xor insl pop jg sub pop aaa in mov jg pop jmp adc imul imul sub and bound mov int3 roll mov or dec fldenv sub call mov adc cs dec xor insb cmp push jle jmp rcll cli int pop mov xor jbe xor shrl test adc into jle adc imul and (bad) cmp enter icebp clc xchg inc add mov cmc jge sar mov bound sarb jnp push rolb xor daa pop dec mov mov dec rolb aad sbb (bad) lock rcrl pop ret (bad) sbb lcall pushf rclb das pop roll (bad) std test mov and adc cld mov cmc mov int3 fwait stc out sbb pop push rcrb jl lods lds cwtl in mov test cmp mov out repz imul or mov pushf mov in mov pop push dec aaa xor negb es dec dec pop out pop inc inc and insb or bound insb mov mov repnz lret mov repnz mov aaa sbb rorb jl imul (bad) mov leave sub pop mov adc cmp movsb cmp mov out dec fld ja out pop and push mov jge dec push push xchg pop cmpl test icebp out add aam aas mov fldt ja hlt mov xor out sbb insl mov jle jmp (bad) aad cmp outsb mov cmp hlt pop fisubl je push in xlat dec mov xchg xor aas (bad) fsubrs jnp mov dec and fwait push dec mov jo cs cltd cmp ja lahf scas sbb xchg int3 dec out jge clc sub sub test and mov roll rcll mov in fiaddl mov test xor popa addl inc sub push jb imul std ret inc popf test and sub lret push xchg aam iret stos sbb test ret icebp (bad) in pushf jae cwtl incl into mov or sbb mov ljmp push and movntq out xor pmaddwd ja pusha xor push pop int3 or imul pop decb pop jecxz xor in and add push cmp aad inc and jl ja jbe jbe xchg add (bad) ljmp jge aas in (bad) and jbe loope jle incb and in xor stos fsubrl mov mov fs inc mov mov push pop pushf aaa insl sbb cmp lcall or lret lret and lret test sub (bad) fldl in mov lock ret pop adc hlt iret cvtps2pi ds loope push mov out addr16 and aad inc inc lcall ljmp arpl stos pusha jnp int3 mov loop jnp push repnz pop sbb imul lret pusha mov ss out mov outsb pop cmpsl (bad) inc scas cmp out and jne sbb mov xor mov add jge mov imul mov lcall xor cmp fwait (bad) jecxz or mov (bad) addr16 into sbbl mov jp ds stos cltd (bad) insl sub push int3 jns xchg mov sbb dec mov or aaa fsubp dec mov jl dec stos inc or dec movsl aaa scas sbb inc cltd movsl ljmp ja rorl cmpsl cmpsl add mov std aaa lds popf mov inc or sarl int3 pop mov add fcmove xchg sbb test pop aad cwtl cmp je mov xchg cli (bad) je sub or mov mov les xchg repnz std pop in pop adc push jne cld lock stc fsts xor pop aaa push imul push incb cmpsl mov inc sbb fdivs mov out mov adc out add jecxz dec inc daa fcomps adc cli xchg cwtl lret imulb sbb mov gs das pop cmp cmpsl inc dec xchg adc lcall aaa (bad) mov mov add push add outsb out arpl and outsb dec dec mov inc repnz in test adc push ficom add mov push ja pop lods mov arpl xchg aad pusha (bad) sub dec dec add adc inc xchg dec xchg mov mov nop cwtl mov mov inc insb xor fs fwait out (bad) out bound aad mov mov xlat dec xor test mov outsl hlt jnp pushl ja mov mov pop outsl jno mov ret into pop test lret dec mov mov xchg lret sti mov ljmp pop sub (bad) shr xorl cmp push cmp push jb imul je movsl push xchg jb push xchg cmp or or jp insb xchg fistl add (bad) into push inc fmul fildl mov mov push pop test enter cltd xchg sub xchg lock popf jbe fmull push xor ffree xchg stc jne adc pop dec cmpsl cmc iret inc mov sub loopne push sti cld adc fs ret fidiv and and push inc mov (bad) mov push xor sub mov add dec pop pop jns or add arpl inc mov mov fisttp arpl movsl outsl xchg pop popf (bad) mov pop test lea and adc jbe cmpsl xchg add pusha jo jecxz test inc (bad) dec mov (bad) rorl and jbe sahf add or dec xadd xchg mov mov sti test dec mov xchg mov jae fwait jbe movsb inc lret insl (bad) push pop out (bad) lock push pop inc mov push push cmpsb sub pop stos jmp rcrl sub cmp int mov inc (bad) (bad) iret jp cmp add add mov inc out cmc fwait (bad) dec adc scas aad push hlt ja (bad) push adc jb cli imul xchg mov les adc jmp jne sub pop push and loope cmp jns pop loope cmp std lods fsts adc ret pop xlat (bad) jo pop shrb and hlt in arpl (bad) dec in sbb mov ljmp loopne xchg sub cmp or xor lahf push jl adc jns daa cmp jb pushf stc mov popfw fstpt mov outsb dec sbb add loopne movsb call sbb xor adc pop mov jnp or pop push pushf movsb mov adc loop fisttpll push inc mov test lock adc xor repnz pop jge in adc aad bswap pop xor loope lret push fstpt loope les dec test dec sti (bad) icebp dec rcrl dec mov pop fwait mov or dec movsl xchg lahf jb (bad) xchg pop pop (bad) jae push push sarb and jo cmp push cmp jl,pn (bad) hlt shrb cld lcall add imul push fcmovnb mov xchg cmp jmp pop repnz repz popa xor inc lret imul cmp push and clc mov repnz push fmull xchg test js std andb xor inc jecxz add push xchg push add sbb (bad) cmp inc addr16 call cmp jl or gs into enter fisubl add (bad) cmp inc aad (bad) test mov sub xchg (bad) test mov jmp mov mov sbb inc mov pop sub movsl imull cmp lret jbe cmp sub icebp movsb add sbb arpl aam pusha add mov cs fdivrl push stos jae sub ficom repz inc daa jnp mov push fisttpll push pop push mov in mov out mov sbb into adc mov ror imul jae sub stc sub movsb cli mov cmc pop outsl dec or imul arpl clc sub push inc push jp xchg fdivrs popa in aaa jp add int sbb mov adc scas icebp inc (bad) and leave sub aad push (bad) stos and adc fisubl enter adcl test cmp add xor mov jb fwait shlb out nop dec pop fstl and lret add cltd outsb cmovg mov jmp test xor inc daa push mov adc cmp mov sarl repnz iret lock mull cli imul lcall fsubp adcl add jb aaa rcl or rcr inc mov les int3 insl idivl mov mov add dec mov pop jnp mov test push movsl or js add popf jns insb lret push out (bad) mov push pop inc mov xor test test xlat addr16 jmp mov adc sbb mov and xor add aaa (bad) ja push sbb das or or pop mov scas lcall lods adc jp outsl add add sbb jae shrb (bad) mov out bound mov cs out cmpsb (bad) insl mov test jp xchg inc mov inc sbb jno push mov push add fnstcw ljmp jno sarb gs inc (bad) nop js xor lret or je ficom jmp jmp inc xchg xor lds fdivrl mov sub and and (bad) test fnsave not jmp sti das insl nop mov repnz arpl or fdivs or dec lcall pop jae mov sbb movsl data16 fstp xor and xor ja test or aaa arpl (bad) mov push add (bad) fsts push xchg mov push cmc push pop nop mov adc mov call xorl inc jne,pt test xchg lcall fsts sub daa test aaa imul inc pop xchg mov call cmp and inc and cmpsl mov fwait cmp (bad) mov mov dec jl stos push cmp out dec push movb or sbb xor dec push mov mov test (bad) pop lds jl adc imul adc sub dec jne popf lea xlat (bad) cld nop or je ljmp loop in fstpl loopne aaa cli inc punpckldq inc shrb ficompl fnsave pop idivb lcall dec (bad) lcall out push ficomp adc sub in inc ficomp push jecxz insl lds sbb mov lods bound add cwtl mov fwait lahf pop cmp daa pop mull jmp push out inc jge push jle pop ret out mov dec addr16 mov test in push je cltd and in in cmp or popa std mov fcom mov mov les mov mov in in imul xchg xor in lods rcll aam lea (bad) sbb (bad) fistpl lods movsb repz mov mov idivl pop out js inc push xchg icebp sub or pop jne lods xor dec leave mov add jge imul mov (bad) fsub jns jmp fdivrp jns inc sbb or sbb lock xlat inc (bad) cmp das nop aas add jg mov cmp and or lea out sbb push stos xor arpl or test nop push xchg xchg and sbb in mov sbb fnop add mov adc fninit pop ja inc fistpl std jl jg cmp sarl into push jnp out js mulb mov push (bad) outsb (bad) add xchg out jge sub adc (bad) call xor xchg sub shlb sbb addr16 push (bad) adc pop (bad) lods or dec sbb xchg hlt mov pop mov and inc adc into hlt jae xchg inc push pop (bad) stos mov out jnp pusha inc addr16 pop test sub push daa int3 dec cmp addr16 jbe pop les push xor dec jne xchg add xchg dec fcmovu sbb test and bound loope or mov ja pop or lods inc in sub (bad) movsb test je push fildl call inc pop fisubr adc dec jge js adc int3 test mov sarb inc bound adc enter imul lea arpl ret (bad) cmp or and cld das aam call insl xchg scas stos sbb cli sti gs loopne mov mov les mov sahf shlb pop adc jae adc mov std stos sub int3 jb movsl pusha (bad) ljmp pusha add (bad) ss lods (bad) pusha sub sub leave addb cmp gs insl fnsave mov mov femms fidivrl mov mov addl mov pop loope cmpsb mov loopne mov mov add mov and mov shl push fwait lock test (bad) loopne sbb cmc mov cmp stos xchg cmp push daa jo into xchg pop movb pop inc lret inc insl cld mov xchg cmpsl jp cli pop xlat fisubr mov dec and cmp add clc or jb (bad) (bad) sub jbe sbb xor push bound shrb mov popa idivb xchg mov test add sub push inc fldenv sbb push pusha ljmp sub push int3 inc or fisub loop fisubl push pop cltd mov fldenv push xchg mov adc sbb dec xlat inc fisttp sbb xor (bad) in jp shlb das fist movsb mov negl mov leave movsl adc xor inc mov rcll sub xchg sti or mov dec call fisttpll stos mov pop das mov jl lds das rclb pop cltd int3 dec jbe jecxz or mov inc or sbb jno stc ror leave cmp insb (bad) sbb sbb push xlat gs dec insb pop cmp js cs pop push lock xchg or aaa jnp lock lret jno imul ret xchg clc fxam xor adc cmpsb fcmovne (bad) mov cmp ss cmp sub jecxz iret and sti enter jns cmp imul pop int push pushf sahf add ss pop xchg cltd test arpl push test insl mov push and lods mov pop add ja xor push dec imul inc (bad) mov sub dec (bad) add mov lods (bad) in adc inc ja fisubr mov aam inc mov iret incb jge fsts pop mov or das push ret sbbl sbb push add mov mov mov js xchg mov (bad) in out fisttpl sbb loopne andl cwtl xlat aaa dec lret pop test sub cmp (bad) leave test push or xor lret or jmp (bad) and xchg ja and rol pop jle out (bad) fwait inc (bad) or loopne jmp hlt cld bound or push sbb ret popa (bad) fsubrp mov dec xor inc lods mov inc test inc js loop cmpsl pop cmp lret pop mov call mov scas or pushf xchg xor xchg data16 sbb es out fist xor shl push out dec and movb mov or ss test add sub repz inc xor adc push sbb push sub aas in call bound xor sub pusha sub xchg ret jae popa pop dec inc in adc and inc pop pop (bad) sbb pop sbb adc inc pop lds gs pop mov hlt ds push ss xor stos fisubl push andl (bad) pop lahf mov push inc movsb roll data16 inc xlat iret pop out dec jmp cld inc je call ja mov repz test data16 dec ja sbb lret test dec or cmp cmp sbb push or sarl mov out add adc push rcrl pop jb int3 xor sub dec and and insb dec push packuswb push cs incl xlat mov and mov inc mov fbstp arpl cmpsb or pusha and cltd adc pusha xchg adc jbe inc xchg push pop mov daa jne push add push jo int3 mov mov fwait mov sarl sub subl push repnz dec jp jns xor (bad) sbb scas aas sbb jmp mov push (bad) loopne lcall or clc mov xchg push stos imul push (bad) movsb add adc mov sub adc push sbb daa pop loop sub fdivl stos ds add lcall push xor adc pop jns rolb popf inc or push xchg xchg repz insl dec es fcmovnbe xor or add cmpsb xor pop jae sbb inc adc lret jl mov int3 adc push or cli shrl dec sbb cmpsl hlt stos dec xchg dec in dec leave lcall xchg adc push popa mov mov or cwtl leave mov dec fs popa jb call das cmp andl cli repnz jl xchg xor and push js ficomp xlat fistpl xchg rcrb loopne jnp cmp loope aas xor outsb cmp xchg addr16 jns inc jle xor xlat lods push cmp cli mov dec in mov jmp xchg and cmp xor sub jle addr16 and scas pop jne xchg test fs out mov sub push pop inc test mov out out lock push inc pop jb not dec jp popl inc or push lret push (bad) in outsb mov jl mov mov inc jecxz mov add ds mov push dec lcall rorl or dec or or mov sbb lret cs xchg pusha stos xchg test push mov jno fs movsl out mov ret xchg les or je cmp int3 sbb lock mov cs push imul xor loope or std fild in popf lea cmp xor (bad) incl cmc iret jae cmp jmp in call lock test xchg lock mov mov ret jb mov dec lds cmp jge lret fistpl xor into mov (bad) push (bad) mov cmp mov pop jge pop mov scas shrl adc cs test mov add push sbb inc dec xchg mov mov lods xchg movsl adc (bad) cli inc hlt andl dec loope cmp fs fbstp test sub or jl lcall dec adc pop dec xchg pusha xchg xchg push icebp mov scas xor or shlb mov mov cmc subl mov adc xor out jo int3 rcrl dec dec arpl imul sbb mov jnp div insb sbb loopne mov mov adc outsl dec dec dec or push jg jmp cmp (bad) mov push outsl jp sub mov xchg adc cmp scas fstps shl enter loope movsl stos stc test pop push test pusha adc incb ss stos sub (bad) jno mov js ja pmulhuw fucompp jmp jae or mov sbb clc iret adc push pop push outsl test mov mov mov push mov loop pop daa dec jecxz mov bound mov faddp or xor je shr inc adc loop std mov or into lods ljmp xchg inc loope repz mov in and test xor outsl cmp mov insb mov cld jmp xchg xchg (bad) push cltd mov cld lock jns cmp mov inc or bound cmp jbe movsb sahf xchg (bad) out xlat mov outsb xchg cmpsb mov cmp jb sahf aad jo addr16 std adc jno es movsl push arpl dec push jbe in fdivrp xor (bad) fwait jne add mov out movsb pop mov int3 dec xor scas loop pop clc jb lret (bad) outsl jo dec movsb test cmpsl mov lret lods sub push dec int3 mov popf or xchg cwtl arpl mov shl loopne push test popa pop ds xor (bad) xor sub pop push jnp les pop mov fimull xchg arpl pop lds mov inc cltd pop rcl mov fisttpl inc pop and jp test stc dec lea xchg adc mov jg ja mov or gs push pusha add hlt lock push and lret push (bad) out mov jae (bad) push sub push lret lods sbb sub data16 lds xor lret mov in lcall cltd push pop inc jb aas enter xor fwait js int3 push adc sbb (bad) lret les mov cmp mov fidivrl inc push inc aas ja mov je lcall fidivr mov pop xchg xchg cmp out lds sub push shlb inc pop adc push pop leave aad sbb dec insb icebp daa mov cld mov adc ds lods mov cld pop hlt daa sbb or faddl xchg mov push sbb dec mov je mov movsl lods fist gs dec js pop push cmpsb lods dec les sbb and daa outsb mov mov push ljmp in add pop sbb jmp and pop pop aaa icebp jg jo pop out jbe clc add mov xchg push mov stos jo (bad) mov xor insl sbb xor or cmc bound js jg xchg or fidivrl adc xchg lds jge cmp ss loopne push push test je mov hlt inc mov sbb gs jo jmp jg test inc xchg lods loope test mov pushf test arpl test enter cmp inc pop shll push (bad) std mov cmpsb fscale jns into (bad) jmp icebp int js inc ja xor pushf adc mov jns aaa jbe jecxz scas setno jne js dec add aas cmp loope dec jge dec cmp out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg jg sar cli (bad) or mov add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add aaa sbb add mov inc or add or add add add pop or add add mull add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add pop (bad) inc push js in xlat cmc and add icebp rcr (bad) jmp cwtl into cltd cwtl out lcall retw aam rorl popa lcall jl xchg xlat jnp adc add add sub inc ret sahf jnp xor scas (bad) mov jle mov movsb xor lea dec mov comiss sub pop test bts sti dec gs dec rolb (bad) in and sbb lock sbb mov test int pop imul out mov mov shll into (bad) fmull loopne das adc cmp imul rcr mov (bad) stos stos xor sti xor or xchg dec rcr inc (bad) fcompl mov sbb jg dec or cmp adc or out inc push cmc mov sub xor movsb out sti add fdivrl sahf (bad) and out in (bad) movsl (bad) (bad) dec add (bad) jae dec jge xlat fwait sbb inc inc sub jl jne push rcrl ret das int3 mov adc push cmpsb (bad) sahf fyl2x jnp mov loope aas mov mov sahf sub addr16 (bad) lods push sub fcoms pop jmp push js dec ss sbb stos mov jp push adc mov inc lret lahf pop xor jl cmp hlt push iret xor mov xor aaa shrb mov lahf mov movsb std repnz loop jne sti into pop mov xchg pop pop pop dec xchg xor xchg dec loop das call push mov in nop das aaa sub lret push lods stos shll js popl gs popa rcrb mov xchg pusha fcmovu inc xchg lods (bad) (bad) sbb sbb fwait jbe pop test jne jmp jge push mov stc xor xor push sbb fwait jne cmp in in out mov roll jmp lcall cmp mov jmp cltd mov idivb scas xchg mov ror mov push cmc push xchg aaa cs cld adc mov and pusha add cmp aad xor (bad) sbb jmp cmp out jae mov lahf std jmp sub mull es ljmp push fsubrs add and lock ljmp xor rcl and sub and lods or dec scas pop jmp vpsubusb lock test sub call (bad) mov pop loop ss dec gs (bad) mov xchg dec push and xchg push notl or xchg mov fcmovb sub lock push add loop loopne out cmp or clc sti or sahf lods out test inc xchg daa daa fsubs push mov adc in inc fstps pop hlt pop adc mov pop cmpsl adc mov jb aaa cmp ja inc lods (bad) lret data16 imul xor dec xchg and mov mov xchg xor setb mov cwtl lret adc pop lcall or imul add inc add stos lret out cmp idivl leave dec aaa aam cmp mov jo (bad) std sub icebp xor push in imul pop sub sub aam std mov in rclb jecxz sbb or mov or mov pushf mov jmp ret cmp mov out and push (bad) hlt (bad) bound dec sbb les add inc add mov xor mov mov add cwtl adc loop sub testb sarb pop flds into sbb loope loop push push scas adc cmp fs daa xor ss je mov test mov xorl jae scas loop xchg fdiv jb mov popf das sub (bad) notb fild int mov mov je pushf int ret out dec pop ljmp and push lret ret or mov push add cmpsb or mov insb insb js and xchg cwtl push xor or xchg push (bad) leave outsl fiaddl lcall mov pop dec mov imul inc or jno cmpsl rep cld int loop cli push daa xchg xor lock mov push call jne jnp and jns aaa lret jo jmp (bad) mov (bad) adc test inc icebp orl les xchg jns data16 (bad) out xor push cli pusha dec xor fwait aas ret lret adc mov imul pop repnz in and xor mov movsl js or sub ret xor xlat dec or adc int3 ret cltd shrb dec push (bad) scas mov lock xor fsubl or sarl xchg mov jne int dec lds arpl fbstp hlt loop or dec mov dec loope push dec sub xor xor jnp cmp add sub rcrl jae sbb cmp pop mov mov fstp rcrb mov lahf inc cmp pop sbb daa cmp mov data16 adc mov ret xchg out cs and mov mov mov adc scas adc pop js xchg push jae leave mov mov insb cmp sub inc movsl pop jb xchg mov arpl push cli stc lods add scas sub jns fsubrs push pushf mov pushf sbb iret inc sarb inc mov outsl lcall test lock jl mov mov sub insl xchg stos aad and cmp fs xor mov sub lahf lret movsl imul sbb in in jle mov push adc lret jp add and shl das xchg xchg jle icebp add xchg inc cs sbb cmpsb addr16 aad mov push push inc in lock pop loopne or das inc imul lahf mov pop imul mov pop push (bad) es (bad) das aad dec bound add test xchg sub ds lock adc xor aaa pop daa jge pop lahf sbb (bad) and lods adc xchg nop mov fs loopne dec cmpb lret xlat and xor mov pop movb sub rol push test ja cltd mov fwait aaa (bad) (bad) insb fcomps xor dec pop mov pop mov sbb sbb pop jae cli hlt sub mov cmp pop gs lock dec pushf cmp fs jle cmp inc (bad) mov lahf xor xchg mov push dec jl mov shlb sahf movsl pop fdivrs jmp out jno jbe push in test lea jge ss mov xchg lods fwait mov rcl test cli stc sub mov mov les push mov xchg xor (bad) idivl mov je mov jle adc push icebp fild out out addr16 aad push arpl popa mov adc clc fidiv jmp sbb cli pop push mov fcompl adc call rcrl aas pop mov das mov pop int sbb sub sub pop push inc repnz in mov loopne inc jecxz dec cmpsl loope pop lret ds ljmp nop push xor sbb sbb arpl popf cmp xor scas push jne mov (bad) or xchg movsl aad ljmp xor cmp pop mov pop xchg rorb addl test idivb push cmp cmp fldt movsl mov rcll cld adc jge and cltd mov lods mov data16 mov in jns mov push mov scas pushfw inc lcall add fs push ret and lods (bad) icebp pop fsubl sbb shll mov je (bad) fistp xor inc icebp cmp nop xchg push sahf ret in xor movsl push mov leave fwait jp sbb (bad) movsb jo xorl (bad) xchg mov movsb fnsave mov xchg xchg push sbb push rolb pop adc pop push sti les inc mov jmp add dec sti mov fcos mov adc xlat push cmp repz xchg scas push xor in in push ds sar imul ds adc jp sub sub add std sub in idivl sub dec idivb xor cmpsb nop inc xchg mov sti and push mov popf js jle (bad) inc jg sub xor roll testl repnz pushf shrb pop mov inc cld pop xor lret xor sub pop fucomp mov push pusha mov jp stos not and les push or dec adc jl adc dec mov mov icebp or xchg neg xchg jecxz pop leave hlt shll cmpsl jecxz or pusha add lret xchg jl mov sahf fs sbb mov push es pushf push divl in daa mov jne mov pushf insb mov fwait or std xchg jge popa cmp ret ret cld cmc mov push xor push inc dec adc movsl ds call cmc mul pop or dec or mov xor jo inc push notb iret adc sub inc imul int in sub repnz cmc icebp pop sub pop mov sbb xchg loop les test popf fucomp mov push lock jp stos rclb nop rcrb mov mov sub loope push das hlt les push jb into adc and cmpsl mov cmp sbb inc sar dec cmp mov adc sbb hlt jle add flds (bad) in cmp cmp imul mov sbb pop sub push (bad) and and or leave add (bad) fadd push and mov jl dec cmp mov scas mov xchg loopne mov pusha test sbb inc stos sub push aas pushw (bad) loope jecxz in dec and std mov inc push lret call or inc cli mov sbb stos push sbb outsl sub mov cmp cmpxchg jno (bad) pop scas add sti ss dec pop cmp cld lods mov jne (bad) (bad) push adc add push push loope shr das subl (bad) int3 mov fldl jne mov fmulp push pop push mulb (bad) cmp hlt xchg sub (bad) mov jl mov ret jmp das mov outsl out call sar jno pusha cmp lods jns pop lss xor mov mov dec xchg jo pop push mov pop push in mov dec ret icebp js pop cmp jno lcall repz or push pushf or insb popa jo push lock cwtl (bad) aad rcll leave mov jns xor sbb adc rol (bad) int3 ficom sub fbstp push ret (bad) xor stos jecxz movsl adc popa ljmp xor mov xor xchg and imull lcall loop lret nop inc and ret rorl push mov test data16 lock in jmp lret (bad) fisttp ljmp xor cltd push test xor jo ds mulb pop push inc shlb ja xor add xchg mov xchg hlt xor jp sbb mov out or mov push movsl xchg fldz sahf (bad) clc daa ss scas das out sbb sbb pavgb jbe imul lret rclb cmpsb pop and fisubrl jbe inc outsb push mov (bad) mov adc or jge aas sbb pop call xor push mov pusha bound pop sbb xchg or sub xor or das mov call jge cmpsl sub rorb jl,pt sbb cmp (bad) or int3 and sub (bad) lahf jg ss ret lods xor js sbb frstor rcrb test dec jnp cld gs dec fidivr mov ljmp bound sahf cli rcrb dec stc pop rolb push mov aam test xchg sbb ret insb pop mov dec sbb xor int loopne sahf xor xor test ret insl cltd pop or movsl ret adc lods mov sbb push arpl (bad) and xchg push jbe sub adc mov fs cmc lret insb ljmp scas addr16 or jbe lcall sub jns jns nop lret and xor ret mov mov sub inc adc inc mov pop pop (bad) sub adc daa add (bad) xor mulb push rolb add pop push jle jno es cmpsb scas adcb daa jne pop cmp jb rclb mov into bound out lcall scas lds cmpsl ds enter mov scas scas cmpsb cld add orl loop scas cmc pop cmpsb xchg pushl mov imul cmpsl inc sbb add test push and cmp push out mov js and lods into aad mov cli std and int sahf dec movsb xor mov fistp jmp inc jno dec and xchg jnp outsl push xchg mov cmp mov sbb test and mov xchg cwtl fistpll pop pop dec push ja loope rcrl (bad) lret jo jb rcrb or int3 andl popa inc test (bad) cld jae shrb lods (bad) dec inc gs aaa pop lods mov xor mov mov sbb in out outsb lret (bad) in js jle cmp mov or sub out mov fistl rorb dec insl xchg or lea out mov es sub add push mov mov rorb insb xchg jge xchg mov in cmovns push push mov bound out jo mov pop inc jnp (bad) test ljmp mov jbe add js sub mov jnp mov js clc pop sbb xchg cli mov lods outsb cmp sub jp (bad) ljmp jl fsubrs jl popa loopne clc adc add aad cmpsl pusha clc lahf loop roll lcall fsubrs fildl mov adc push and mov notl cld insb nop rorb insl fsubrs mov cs popa clc out pop cmpsb sbb mov push fcompl data16 jge mov nop shll mov cwtl inc mov stc cmp inc mov (bad) push sbb mov jns dec push fildll lock lods dec xchg dec xchg push push repz mov pop inc mov lods add xor incl call in (bad) fcoml mov push gs js dec pop mov lock ficom mov jle call xor xor mov jnp shl pop push jl xchg pop push scas stos and lods xor jle iret xor sahf jmp jg xchg sbb mov sub mov fwait ja outsb pop inc das xchg sub add cmpsb cmpsl int3 fdivrs hlt ficompl push jg ret jbe mov push mov (bad) xor int3 adcl fidivr inc repnz es cmp imulb int mov dec movb adc fildl out sti xchg pop inc cltd xor jns popf cs pop cmp mov mov (bad) jae iret or mov bound inc cmp or sti int cmpsb sbb push lret push arpl clc leave aam push test lret inc ss jmp adc push xchg mov jnp ret jnp cmp data16 cltd popf inc cli shl into mov or out fidiv or arpl jge sahf ja call imul dec stc lretw mov pop out mov xor jge sub push imul rolb es sahf xchg dec push and call insb mov pop sub outsl mov cmp adc adc scas adc dec clc sub daa push pop std pop adc inc cwtl mov aas xlat icebp lods mov pop fldt ljmp aas cld cmc jl aas inc dec out (bad) out fisubl push xchg fs push and (bad) add xlat (bad) clc movsl bound out (bad) pop aaa js sub test cmp xchg pop mov cs lahf xor test jge loope xchg in mov cmp (bad) jb mov lds push jmp andl add jmp add xchg sbb and stc (bad) jmp add movsb rcrb sbb scas xchg jmp push dec mov xor icebp (bad) xor clc sbb push (bad) sbb dec sbb ret or out dec negl jbe pushf loop push add sub xlat repz fs icebp dec loopne add push (bad) jle jmp xor movsl jo push push sub push int3 call clc jbe xor jae icebp pop jae (bad) cmp mulb sbb xor stos add ljmp jo je call ljmp add xchg mul (bad) pop mov out lret popf and fwait cli outsl mov mov andl sbb xor cmp shr pop sub out xor push call mov sbb and (bad) cwtl or push sbb pop les nop (bad) insb movsl jbe mov stos push or xchg test cltd mov add sub add or mov jnp mov or sub dec adc and sbb sub jmp cmp in cmp fldt xchg rolb (bad) lret jbe ljmp ret lahf adc xor stos cmp mov pop or push sbb adc loop cmpsl ficompl xlat enter mov rol pop pop (bad) ja scas call dec dec xchg fldcw outsl cmpsl fs dec fsubrl xchg and fsubrs or fldl shrl adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc xchg incl add aas stos mov mov add dec inc scas inc pusha (bad) or add add add stos aas pop add lret add add xchg add add jae gs cs gs jne arpl cs gs jne arpl gs fs and arpl insb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push jns je insl cs gs jne arpl cs jne je insl gs gs jne arpl gs add add add add add add jns je insl cs jb ja outsb addr16 imul jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs push inc inc push inc inc loopne daa xor mov daa xor mov daa xor mov daa xor mov daa xor mov iret cmp push ja negb ja negb ja negb ja negb ja negb ja negb ja negb ja negb ja negb ja negb ja negb ja negb ja negb ja negb ja negb ja negb ja negb ja negb ja negb ja add add add add add push add add add add add add add add add add add add add add add add dec add add add mov add add add add add add add add add add add cmp add lar add add add push add and arpl xor xor add cmp sub add bound sub add add add add bound arpl xor xor add cmp sub add bound sub add add add and add xor xor add cmp sub add bound sub add add add jl add add xor xor add cmp sub add bound sub add add add add and add xor xor add cmp sub add bound sub add add add add and add xor xor add cmp sub add bound sub add add add bound arpl xor xor add cmp sub add bound sub add add mov bound arpl xor xor add cmp sub add bound sub add add add add xor xor add cmp sub add bound sub add add add lock and add xor xor add cmp sub add bound sub add add add add and add xor xor add cmp sub add bound sub add add add insl add and add xor xor add cmp sub add bound sub add add add stos add and arpl xor xor add cmp sub add bound sub add add add and add xor xor add cmp sub add bound sub add add add add and add xor xor add cmp sub add bound sub add add add add and add xor xor add cmp sub add bound sub add add add bound arpl xor xor add cmp sub add bound sub add add add bound arpl xor xor add cmp sub add bound sub add add lret pop add and add xor xor add cmp sub add bound sub add add add add xor xor add cmp sub add bound sub add add add pushf add and add xor xor add cmp sub add bound sub add add add fiaddl and add xor xor add cmp sub add bound sub add add add sbb arpl xor xor add cmp sub add bound sub add add add add arpl xor xor add cmp sub add bound sub add add test arpl xor xor add cmp sub add bound sub add or add arpl xor xor add cmp sub add bound sub add add bound arpl xor xor add cmp sub add bound sub add add push add bound arpl xor xor add cmp sub add bound sub add add add bound arpl xor xor add cmp sub add bound sub add add push add bound arpl xor xor add cmp sub add bound sub add add add add xor popa add add add sub add xor sub add add add add (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add jbe add add or or add or add add add pop or add add mull add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add cmp push js in xlat add mov mov fucomi fsubr fdivs (bad) out add sub adc add or add faddl lods adc cmp xchg pop stos shl lods sbb mov add dec and or and sbb mov jecxz mov cmpsb scas push jae inc push (bad) mov psllw bound push es mov adc jae sbb movsl jmp mov dec daa subl pusha sub jecxz pop (bad) and push addr16 in dec enter repnz es adc pop push leave or mov mov fsubrs les hlt or pop (bad) int dec enter loope mov add adc xchg lock outsl xor lahf sbb xchg das cmp add add (bad) cmp loopne loop (bad) jl leave cmpsb fsub sbb loope icebp add loope,pt les or stos leave mov fmuls xchg cli aad push dec andl cmp inc orb test xor inc pushf sbb stos mov arpl xchg dec adc clc (bad) mov jmp sub cmp or loop jge pop dec test (bad) std pop push rorb (bad) cmc ret xchg push mov insl and add adc dec or adc je scas cmc dec lods push adc or jns pop sbb ja dec fcomip imul clc jae cmp jbe dec in jl cltd iret push test push add add imul jecxz jg lahf bound lret inc int (bad) icebp cmp fisubr scas in in pop cmp jnp loopne and das sbb ja out xchg jne mov pop fistpll fldcw rol inc or scas ja cmp mov cmp in sub cmp aad mov or shrb lret fidivr ja push out loope adc xor pushf mov xor repz (bad) in sub das ficompl sub adc dec dec xchg scas (bad) inc lock stos les and jbe pop inc dec test adc out popa in sbb jns mov mov test es arpl and and adc lds cli adc pop popa lret or mov fsin (bad) popf aam (bad) (bad) mov movb or popa inc pop inc movsb lods cmpsl sti fisttpll add or (bad) adc gs jb imul test pcmpeqd repnz adcl xchg jns jno xchg adc enter inc mov ficom sbb cltd and loop (bad) mov ja pop nop cltd mov adc pushf inc gs xchg add mov mov push mov (bad) repz mov ret jp inc lcall test xor and adc adc inc in ficoml adc or mov mov or inc out ss (bad) je or ficomp aam fiadd shrb fwait add and (bad) in addl jg ret mov dec jbe inc xchg idivl sti pop mov rcll push add mov fldl mov push adc stos pop inc out cmp scas xchg popf loope ret hlt clc mov pop mov shll jns lcall lods pop push adc jns adc dec pop (bad) loopne int3 test jl or (bad) pmaxub daa pcmpeqb cmp xor sub pop mov mov mov xchg scas pushf push and int mov les out dec add xor sub mov leave push out xor nop lahf adc in pop fwait cmp aad pop repz and inc mov sti sub adc pushf pop aas mov push pop (bad) cmp in adc push cmp imul sbb pushf lods test jle mov inc inc cli jno pop xor pop fisubl lods fwait rorl cmpsb jne clc data16 add inc dec jnp mov inc mov pop icebp jne push xchg xlat icebp mov sub call add or dec dec mov jns jmp cmpsl fnstenv fistpll lret xlat aad jecxz call pop lcall mov and out mov push fldl js xor out mov inc jecxz jg and cmpsb jbe gs pop ret sbbl iret lods lahf jbe pop or and outsl repz inc mov and aam jecxz (bad) call push pop inc rolb shrl inc leave call ss outsl xchg cmpb mov and jns cmc mov inc es inc mov mov mov (bad) fcoms sub int3 jns rorl cmp adc inc adc shrb sbb insb mov dec movsb (bad) and mov and shrl ja add add das lcall aas cltd jge mov ss sbb fs sbb push xlat pop movsl addl fdivs (bad) jmp test test je popa pop cmp jecxz insb loop mov inc add fimul test mov jo push lock fdivrs jae (bad) jl inc popf push inc adc fdiv mov dec pop and into jecxz out sahf and mov mov lds xor les (bad) lock out inc jmp lret jmp add fidivr xor sbbb push cmp sbb ds sub jbe xor lds lcall std adc xchg loop pop test cmpsl mov push push cltd mov test xor inc jecxz (bad) mov add cld and insb ret xchg jge sub or mov popf in or jae or mov stos jl push (bad) mov sti or lods cld pop js sub fwait loop xlat or scas into in aaa cltd inc dec shlb jb lods je and popa pop or jmp mov (bad) ds imul in sbb out lea aam push mov sbbl mov cmc adc add push or gs test dec (bad) rorl pop cmp mov xor nop xchg scas mov pop sbb int3 rcrb fmull out jno repnz jg ljmp fnstcw dec les addl dec faddl movsl outsb jae aam mov sarl inc stc mov lea loopne sti fstl faddl cmpb fs insl and mov pop fsts pop sub adc cmp pop sub ret sub loop lods test lret push adc aam mov out jl (bad) push test imul mov adc bound imul (bad) setbe sub and js cmp or and or rcrb mov dec or pop inc cmp push mov pop sbb sub arpl cmpl (bad) jno jp ret inc sbb ljmp inc popa gs mov fst rorb or cmpsl inc add into jmp xchg ret xchg inc dec fdivl adc lcall outsl jecxz nop ds insb mov and jb mov mov add add mov sahf (bad) ss loop xor repnz xor les aas imul mov call (bad) jnp xchg ret test lea cmp mov test dec lret nop sbb adc dec push push push or mov aas jp popl adc fldcw lret lods lods scas xor push stc xlat ja mov lret push cltd cmp sar xor das bound pop repz xlat xchg adc lods aas gs mov mov loop jle leave test push cli and cmp lds adc aam int3 loope in jge cwtl push jbe lahf push mov in cld (bad) fisubr iret fdivl jo in cmp cmp xorb cmpsl fnstsw adc lret test std notb push sarb stos jg sub pop xlat dec xchg cmpb test jb lret lds js mov cmp mov cmp mov das lret outsb ret out cmp loopne leave mov xchg add leave inc xor add (bad) jnp sub pop (bad) out inc push stc jnp xlat ds out add les mov es push call pop mov ds notb test mov inc mov mov dec xorl and dec out cmp sub sub outsb xchg mov jae push jns fiaddl mov or cmc gs mov add sbb fwait push fldenv icebp xchg sti push or add sahf je adc dec mov mov or mov in int out mov mov les repnz inc test addl cmp mov adc xchg imul mov sub (bad) (bad) (bad) leave jb mov cmp loop add (bad) pushl fsts jecxz les jmp pop fcmovnu out outsl int3 (bad) mov jmp sbb xor pop sbb xor ret adc loop jae mov mov mov xor mov dec enter ljmp andl xchg or cld push loope subl dec in pop xchg or aam outsl fwait add inc and inc test adc xor jb pop or (bad) inc pop rorl xchg cmp adc stos mov or (bad) imul in int3 or icebp push push mov mov pop imul jb add mov and xchg dec ficoml xlat push or rcrb mov jne icebp mov loopne in ja fcompp stc mov cmp insl sub adc lret cmp push stos fistpll gs iret xchg inc inc mov cmpsb test pop pop jmp jb lock mov jge adc jnp movsl test mov stos and mov xchg sub int rolb xchg sub push bound cmp gs imul out xchg push sub pop ds inc xlat xor lods fldl mull sub cwtl or dec repnz mov pop jecxz mov inc fistpll scas add loopne adc cwtl jge inc add cli test add add adc enter (bad) xchg inc cmpsb scas xchg les and int dec in xlat (bad) cwtl in enter call call cmp sub (bad) out or push (bad) idivl jecxz xor js and jo nop push mov cmpsl pop pop je lahf fsubrl push (bad) out pop jg or sbb daa push jecxz mov test mov sti adc popf mov cmpl ror fwait pop (bad) in lock outsb xor or cmp mov xchg adc inc sarb dec in fdivl daa sbb or xchg pop stos insl rorl mov pushf push sbb push int3 sub pop aas adc xchg dec pop repnz lret fstl sbb xchg lds pop xchg xor push cmp (bad) mov jp popf stos push ja ret fistpl xchg adc sahf negl fild movsb and sub stos mov and sbb das pop or xchg and fidivr add mov push xchg call dec xchg push ljmp jg inc jecxz aas (bad) xor fprem cmpsb fsubrl cmp sbb push in mov push pop mov and es add rcrb cmpsb push cld push mov jns in bound ljmp int cmc push jae testl jnp fwait ja in push fdivr je in add subl loopne pusha sub xlat sbb push sbb roll call daa js xor dec push ss repnz sbb mov repz or cs add adc mov iret push or xlat xor bound pusha xlat mov les rcrl mov and mov cmp fild jb sub mov add ror mov sbb lea in push adc pop shrl jns (bad) mov mov sbb adc mov inc sub xchg mov mov fdivrl loop pop inc cmpsb int xchg popa daa in sbb dec (bad) fstpl test lea ljmp call xor dec inc cmp inc test scas adc push xchg push dec jbe aas sbb add xchg nop mov mov xor pop mov jbe jmp imul (bad) test in add pushf jno cmp adc mov sub lahf inc cltd pop xchg sbb pop or mov and jmp jns test jb jb clc ret out daa subb cmpsl dec fist test xor out gs insl xor xlat in in add nop pop mov sbb rcl in loope sub (bad) in insl xor frndint pop (bad) scas jns xchg sub adc arpl or xor inc inc lret mov mov pop xlat xor jle mov adc or inc aaa in shrb out mov mov cld inc mov mov jmp adc jbe lock or mov stc cwtl stos fstpt rcll cmpsb mov clc int3 pop jo rorb pop cmp sahf inc or add je movsl push sbb out jg pop (bad) loopne inc loopne adc lcall lret fcomps insl (bad) lret push pushf fist add jge call mov cmp jl call ret repnz jecxz popa sub icebp pop pop leave movsb out mov sbb dec jne push pop xchg jge lret xchg pop and in pop fstl call or mov aaa pop push cltd sbb test mov mov inc cwtl jmp movsb iret rorl pop mov pop lret adc mov dec mov iret sub and sub fidivl adc (bad) pop mov mov inc test dec mov cmpsb (bad) pushf jnp mov mov je popa test xchg sub cltd jns int xor push data16 int3 pop add sbb push sbb jno jae pop lock iret push idiv fwait jl pop loop pop xchg lahf xor mov and stos call aaa jle insb lea xchg push cmc inc push push mov dec in ljmp xor (bad) (bad) sbb int3 sub xchg cwtl js sub iret xchg mov sub aaa pop das out jp fwait std pop sbb movsl mov repnz daa test out dec loop mov ret and rorl js sti xchg xor outsl insl mov lods arpl dec cmpsb imul loopne test (bad) into out add cmpsl ret repnz adc push pop cs mov in inc mov shrl mov cli ja cmpsl cmc mov fs nop xchg sub in clc and cld stc jp scas pop mov mov or test push in xor jnp aam xor mov cmp pop in mov mov inc mov test add pop lock lret cs cltd dec stc popa outsb adc cmc mov xor mov repnz mov faddl mov dec pop popf mov or mov (bad) fisttp dec (bad) xchg insb movsl (bad) cmp (bad) (bad) imull sbb and inc or sahf mov aam push mov (bad) xor mov mov push (bad) push fwait popa mov mov jns dec lock test cwtl bound sar cmp mov (bad) mov in movd xchg cmpsb sbb xor lret or push call das jmp jge mov add sbb (bad) fs (bad) decb cmc int pusha xor movsb mov sbb fcomps nop in ds pop sbb mov push ret or sbb test mov cmp mov or adc je add fcmovbe aas popf adc xor mov aaa jmp jecxz repnz out pop jl and mov mov das sbb in jb jg iret push cli aad scas test add fmuls xor imul rolb (bad) les dec mov jne call push pop cs inc jl dec pop xor pop and sub jge out pcmpeqw mov sbb ret push sahf cs pop jo dec pop fdivr sbb xchg mov push or out movsb xor pop jge fs xor scas roll sti sti jns daa test sub jle sbbl pop inc loopne outsl or out sub out lea iret jecxz movsl adc lock cmc rcll out ret mov test ret mov push sub push je xchg jecxz xor sbbb mov add mov (bad) push and mov push lea icebp push movsb shl in stos xchg add decb in (bad) add hlt cmp pop int3 lock test lea test jne mov fldcw mov pop stc cs xchg in and cmp add minps mov dec jnp pushf dec sub psrad fst mov test mov lahf dec es mov lods nop or in pushf (bad) push mov call xchg iret cmp push mov add pop (bad) repz adc cmpsl clc test ficompl stos (bad) std ljmp fst cs in jp sub in (bad) icebp ljmp pop push mov xchg in inc (bad) mov inc xchg pop pop aas sub mov dec pop out lret addl inc mov syscall shlb nop divb and push mov mov dec ss (bad) xchg pop mov test sarb test pop jns xor cmc pop and pop or in push push push fldenv push repnz mov movsl aam jl fs sbb inc mov test int out add gs ret fisttpll scas outsb cwtl (bad) cmpl add pop cmp inc bound clc cmpsl bound outsl xor outsl outsl xchg add add xchg xchg xor mov push das (bad) pop ror add (bad) mov push std and pop leave push outsb icebp test mov mov mov icebp mov mov adc adc pop inc in dec inc arpl test jne cltd stos int3 das adc add into dec nop inc and mov dec in adc jmp dec lods mov jo frstor push enter inc leave and stc movsw and int cmp mov mov mov test inc shlb add push arpl ror sti insl pusha ds push or test into jle lahf pop mov adc mov mov pop (bad) into dec jle jno cmp sahf adc xor arpl movb xor out ret mov rorl xchg add mov xor sahf mov xor adc inc shrb in (bad) shlb mov daa mov call push mov pushf adc jo push cmp inc jl icebp leave push mov or xlat lahf stc or sarb mov jl in stc jl (bad) xor jb inc or mov sbbl lods fildll out or bound andb cmpsl or repnz in dec cld xchg stc adc cltd lret repnz fisttpll sub sbb test enter rcrl out pop mov (bad) in arpl push xor ret ror jno imul dec mov sbb imul mov aaa and add sub adc dec push stc jb inc (bad) fldcw xlat or icebp and std add (bad) mov inc je int arpl movsb pop and adc adc insb popf add into outsl frstor rol pop xchg (bad) mov test and cmp insb adc cmp shl movsl cmp dec cmp sub je outsl lcall fisubr out dec arpl jb outsb push cmp cmpsl and xchg mov mov movsl stc cmp (bad) in rcrb shrl inc jae call jecxz scas pop sbb push in int fcmovnb and add das mov pop (bad) out into mov cmpsl arpl dec aaa push adc into xchg add loopne mov clc icebp mov insl dec push cwtl dec (bad) push sub jp sub push (bad) enter stos adc pusha pushf and sub daa push mov (bad) lods lods sub pop rolb popa jmp or jge decl insb mov jns sarb and push jl cs jb mov pop jg mov loopne mov dec dec popf and jmp push pushf repnz test shlb movsb push repz outsl das les fstpl hlt ja and shlb dec push addb loopne xor stos cmp and mov sub mov out imul inc fisubrl xor inc dec divb fwait les aam scas jp lock lock xor or sbb jge fstl js cmc out xor sarb fiaddl cmpsb mov loopne sbb (bad) or shll sub fimul and xchg stos insl data16 mov test (bad) cmpsl mov adcb pop push or adc inc bt sub pop scas bound bound and cmp daa adc sar (bad) mov hlt mov push pop popf in sti sbb mov outsb lcall sbb fisttpll sbb clc inc out jl addb mov sub ret popa dec mov cmp lcall xor push cmpsb inc loopne adc mov jl fstpt fldl cltd or cli in or cmp inc jo sahf out aad inc sahf jle lods push cmp loop xor int3 sub xchg lods lret cmpb fs dec inc add jmp fwait adc scas xor fidivl out jp push data16 adc adc pop mov fistp leave or mov jne orl dec xchg jmp ja mov (bad) scas stos outsl xor sar leave jecxz cmp mov lcall imul cltd cmpsl insl insl fcompl rol jns sti outsl pop dec inc int ret push (bad) movsb shrl (bad) add adc pushf lahf in fadds adc pop pop lret cmp mov add xchg ja add push rcll fnop fstpl or cmpsl dec fsubrs je mov mov loop imul insb outsb and push sahf cmp xor mov (bad) fadd inc imul lcall (bad) push arpl jo mov push dec loopne inc negl pop (bad) mov faddl dec lods sub add sbb ret movl mov inc (bad) leave sbb dec std and xor lock repz xchg ret adc sub cs cs jmp dec xchg xchg in pop jo stc pop push cltd push cmp mov xorl in loope dec pop pop iret inc jb pop xchg dec or leave mov mov inc mov or fbstp xor xor xchg xchg dec fst adc out mov test mov (bad) negb or insl in jg mov pop clc orb or adc bound push mov pop mov push ret es xchg fldcw push ds stc ss adc jae mov sbb nop mov add push in nop cs lahf pop xchg es test mov xchg adc mulb sub jl mov leave mov or mov xor and cmc sbb mov jmp into notl inc adc bound and sti or sub push clc sahf adc xor insb stos insl and (bad) dec std xchg repnz fmull jp cmp aad mov add xchg test mov nop movsb dec jno pop inc loopne sbb (bad) (bad) jmp cltd leave lock cltd insl fdivl shll push add jecxz jecxz pop mov and addr16 inc sub js add call mov mov (bad) dec mov or in pop fcmovne sub mov mov mov hlt cltd inc xchg jnp inc mov popl inc enter (bad) xor cwtl ficomp es rclb push xor (bad) repnz sbb (bad) enter push ss pop outsb adc out and mov sbb xor fwait push fcmovbe aam icebp pop sbb xor or fildll imul outsl dec lret dec das and lahf lods push mov add lcall or and leave dec jbe cmp sub dec test or andl inc je or pop and fdivrs push (bad) ss hlt dec push out in jp sti sub add push lods into std inc pop cmpsb xchg adc push cmpsb stos add and cmp in pop sub imul loop jb or ret inc or jmp mov xchg rolb iret lret pop push popa mov inc mov iret xlat pop adc das pop pop pop push jns sbb fist add cs fsubrs (bad) pop fcoms jae add iret inc je xchg adc and out notl das (bad) rorb cs shll xchg pop add mov pop dec mov out xchg push mov cmpl and mov jb jg sbb lret (bad) in push push divl jmp (bad) test push jp xor mov push imul outsl fnsave add push fadds cmp idivl adc xchg xor (bad) pop mov pop sbb scas in ret pop and and sbb lods push sbb loope jp negb fist dec lock insl (bad) jnp mov fdivrp inc les fs imul gs adcl jae xchg test pop (bad) mov (bad) mov lahf into loopne popa mov and or add mov pop jnp sub mov pop repz nop sarb (bad) insb jg push popf out aam cmp mov (bad) inc xor pop cmc mov jae shll pop xchg mov push pop scas inc mov mov repnz jno pop add jbe cltd mov mov cld out push mov mov cmp sbb cmp flds repz repnz (bad) mov adc mov cmp jo int ficompl add ljmp sbb addl sbb xor out jp xchg int3 jo sbb (bad) rep xor jmp hlt cs sbb rorl cs movsl adc jecxz sbb pop icebp add aas in push pop movsb mov loop cmpsl and mov ret cmp xchg xchg inc dec or add mov insb ss adc xchg xchg scas cltd jl in je fsubrs movsl inc push fwait lds cmp pop ret fnstenv arpl dec adc ss mov mov pop xor xchg xchg cmpsl fnstsw ret arpl test int scas insb cmp xor cmp aas mov ret inc (bad) push jmp cmpsb lret dec jg mov mov inc vpaddusw mov mov out pusha outsl hlt and or outsb clc daa into or xchg call jge imul or fstpl push xchg sub mov mov sbb adc adc xchg xchg xchg movsb inc enter cld add xchg lahf into out popa pop and movsl fdivrs aam ficoml dec in cwtl xorb xchg aas jne lret add push fidivl push xor jg and sbbb xor jl sbb mov lret sahf mov incl sbb jp fidivr xchg scas rcrb in in repnz sti ljmp mov pop sbb (bad) sbb faddl into mov and (bad) xor daa hlt mov and or jno xchg lods dec mov aaa jg shlb cwtl sbb xlat xchg aad das lret lret pop xor and js ds xchg mov mov sahf mov adc pop and std sti jo enter jl adc cmpsb into popa pushl push sub pop mov adc xchg inc sub jmp mov jo ret bound xor jae leave nop dec sub aad iret imul fcoms mov jle int3 pop repnz repnz in jae in dec mov loop or imul add pop sbb idivb sbb push cwtl dec push sub aas cli sbb xor cmp pusha hlt inc mov in and gs out xor ss or mov lret sub push pop xchg lea mov popa mov roll hlt mov jl lods test jle sti xchg out adc pop xchg int3 mov push jb lcall hlt adc sub push out movsb inc push push aas cmpsb (bad) sbbl test add (bad) jo jp imul repz repnz cmp mov ss add lods inc ljmp fmuls xchg mov popf call fs test in sbb cmc xchg adc jno fistl ret nop call cmp (bad) arpl out push jns sti into push push dec and bound xchg or lcall and push pop icebp mov scas ret gs scas sbb repz sub mov cmp addr16 jp fidiv xchg xor push inc fildl dec test sub hlt xchg dec inc and icebp pop sbb jg test cmpsl call xor (bad) (bad) xor sbb jge dec mov arpl lcall pop mov hlt push icebp clc mov pop mov push leave aaa xchg cmp pop (bad) mov or jo push pop pop imul (bad) push ret test push out mov enter js daa push sub insb out push scas pop mov es mov lods jno mov loopne stos data16 cmpsb push test add outsl ds pop xchg xor loop pop and xor (bad) fnstenv pusha adc jl loopne fwait push divl mov loope add test ja lcall adc mov xchg pop imul mov mov stos (bad) cwtl xor jl test cli jl sti cmp std adc popf aaa test cmpsb inc pushf outsl dec lcall jecxz stos xor dec mov xchg mov push sti mov mov mov jmp rorb push les clc lock sub cmp xchg cmp idivb std fisubrl cmp mov fcompp and in adc inc mov adc test add jns inc out mov cwtl xchg aas js out les scas test negl sti cmpb cli loop cli mov fadds push push mov sbbb (bad) mov fistpl (bad) mov cmpl out mov (bad) mov push pop in dec lret lret (bad) lcall scas or repnz jge jecxz and (bad) je push xor in cmp xchg mov pop iret xor inc lea (bad) push fwait pop xchg loope negb sbbl in mov jno pop or je aas cmc push xchg insb xchg xchg js pop xlat sbb popf add sub mov out sub jmp mov (bad) mull testb flds outsl mov cmp cltd popf das rcrb gs jae movsb and add or lea cli test mov mov push mov ljmp stos lcall mov dec in sub adc jle push jno stos out jg dec mov loope (bad) jl or mov ret xor xchg and jbe test repz mov dec test iret xchg sub inc (bad) lock out sub dec push mov jae inc adc outsb test dec jge insb jg xchg movsl lock cltd adc mov sub and ljmp inc fcmovnu pop or scas jp sub sahf rolb stc mov fdivrp cmpsl add cmc in and enter cli aaa jo out mov xchg add repz outsb push cld std les jae std mov lret test cltd sbb iret aad add int iret jbe daa in mov lret int and mov adc adc push out cmp je (bad) aas jno into or lods js sarl dec (bad) cs incb test push inc xchg (bad) jecxz je popa xchg shrb fcompl iret and or push sbb pusha dec notb sub int3 enter pop nop movsl or xchg sarl aas push nop push jg (bad) and fwait xchg add (bad) addr16 cmp pushf iret out sub call test cmp fldenv adc popa sbb add popa mov jmp lahf movsb sub daa push dec faddl xchg sub lods mul call and stc cmp cs insb lods inc lcall jmp pop adc popa js push inc movsl add movsb sub xlat aad je add cmc sahf popl adc das push sahf fstps and jg xor inc jbe negl outsb rol outsl mov or dec add dec jbe push add imul pop dec add inc inc lea addl sub pop lahf daa cli and mov (bad) lret jb mov dec cmp sbb (bad) mov rcl mov jp (bad) in cmp push (bad) ljmp lcall add mov push arpl int flds and fwait ss lea mov outsb dec repz outsl sub add sbb outsl cmp cmp jbe push imul jnp fmul sub mov push sub add or cmp push aas (bad) in into inc call lds cld out cmp fstps fist iret add pop inc xor push sbb xlat sub cmc lea aaa adc inc xchg jb mov fidivr in test rolb stos movsl mov push mov xor std aas das lods idiv dec mov add hlt adc jb data16 mov jge push (bad) dec (bad) stos fld cmpsb cmpl rcl jg mov inc (bad) cltd ret sbbl mov das cli imul adc mov iret xchg push mov cmc lock (bad) adc add popf mov in xor cltd jle and test mov or stc roll nop or xor mov or adcl (bad) xlat les das adc sti call adc fmull pop int jbe fist gs push xor and and push mov fcoms faddp int3 jnp mov push mov sbb add test rolb mov cltd pop mov pop xchg pop (bad) or outsb (bad) lret mov and jbe inc jb cwtl pop sub pop sbb mov (bad) cmp cmpl push mov dec sbb mov jmp imul push aaa inc lock iret je cld mov (bad) adc push mov out faddl data16 (bad) mov xchg push mov lcall xor xchg dec lods stc pop (bad) rcll sahf adc xlat xchg in fistp cs (bad) add push add dec lahf movsb clc mov data16 aad or imul loope pop in mov test jge js jbe data16 sbb outsb pop scas push mov sbb inc loop inc cmpsb repnz ret xchg mov dec mov jmp add bound cltd xchg adc mov mov inc add and cmp data16 mov cld fwait outsl inc negl adc mov mov mov pusha repnz (bad) push sti mov movsl loop ficomp mov fild int jbe stos mov sbb call push icebp push addr16 xchg adc (bad) aaa sub mov hlt inc adc fild jecxz xor pop stos shll imul lods aad xchg mulb int notl bndstx ds cmp jns xor sub cwtl loop lcall shrb sbb xchg dec std sub icebp xor cmc jne loop sbb lods stos rorl lds shl fild push cmp dec jae test push dec xchg adc cmp movsb jnp andl mov jae shll push insl add xor adc inc icebp sub stos cmp xchg and jmp cmc fdivs fdivrl data16 shll hlt jnp lret adc hlt mov rcr loope iret out sbb out jl into adc cmp insl rcll mov leave mov add pop dec adc sub dec fdivs add push sub and push in loope push std (bad) in mov adc push test in testl in jmp dec mov lds (bad) pop mov dec and adc scas mov fidivr mov sbb mov sbb fldl sub xchg lods cmp jne mov add mov or aas jecxz dec mov mov sub mov mov ret xor pop outsl pop cmp (bad) (bad) test data16 sti mov out cltd in flds outsb fnsave sbb mov mov rcrb loop pop hlt ljmp xchg cmp data16 pop push mov xor loope and xchg fsub (bad) add jno adc fstpt sub mov sub xchg int3 sbb dec push ror mov jne lahf or adc cld add mov jno pop mov push ret movl jg cld jo add clc lds sbb jno mov pop insl xor in jmp xor mov rcr dec xchg das add addr16 mov jle push push and stc inc adc adc rolb setae jg pop adc xchg aaa mov cmpsl pushf add cmp dec xlat in adcl add sub add roll lret add iret mov mov repnz cmp repnz mov inc aam push lods sub pusha jb repz cld int jp andb ret fldenv or dec mov test pop les inc insb jnp cmp (bad) mov sbb adc adc sbb jnp cli addr16 cmpsb call repz ja jns xor inc repz paddsb fwait mov pavgw sub test in (bad) lds xchg sbb fwait mov rcrl aam out inc inc mov lret data16 sbb mov push stos (bad) jo sub or xchg call inc (bad) enter sub inc mov xchg fstpl outsb scas test lahf aad cmpsb push mov mov jl and inc jl pop mov sbb mov dec xchg scas js jno out mov lcall das mov adc mov mov cmp sub and idivl jbe jne xchg (bad) pop std jno bound cmp jns sbb lods stos fsubp inc mov xchg xchg dec jge int addr16 mov cmp sub push fdiv loopne stos jo mov repz sbb aaa push dec adc sti ret adc fcomps push (bad) and shrl ja mov dec ljmp inc loop lret ret in pop or mov sub (bad) mov ljmp movsl imul lds mov ret or jns imul jg cmpsb popa jno (bad) scas cmp dec jmp iret adc inc cmp add pushw inc stc xor hlt mov repnz loop push int3 lock (bad) (bad) xchg pop mov xchg mov lret jmp stos cltd inc mov push mov mov ds xchg cld or add mov xchg pop movsb out out push mov mov scas or xor and push ret aaa aad sbb loope or inc sahf xchg les or or adc rorl fs lds mov addl and and and adc outsb push sbb subl rolb data16 pop jno inc repz mov sbb (bad) jo inc lret push std loop inc or fwait push mov cmp mov lds aaa pop sub and out mov inc sti stc pushf xor (bad) test pop ds insl pusha fistpl enter (bad) stc lock mov into mov lds fadds in jae (bad) pop sahf mov in sbb xchg and adc jae jne fcom rcr push push xlat imul mov mov jp dec or (bad) int3 add cmp dec and cmpsb sahf sbb cmp mov xor mov xchg or aas dec test iret sbb (bad) cmp and cli jnp subb cli adc mov (bad) sarl imul sbb mov inc jae xchg push jae dec popl test jo mov test (bad) or or (bad) insl hlt movsb push enter sub js push out xchg arpl cmp or out xchg setb push rcrb shr fsubr hlt data16 pop add (bad) xor int3 mov test lahf int hlt mov or ja,pn inc std push in scas mov jg mov in sub push cld add rcl xorl ljmp pop sbbb add pop jg lods jnp and (bad) push test jo mov cmp mov fs adc icebp pop inc xchg add push cmp lds xchg xor xor insb cmp mov push push and adc imul in or xchg inc push jp outsl add in lock xchg pop or xchg ljmp cmpsb arpl inc lock fisubrl or cmc rcl in out lret jmp pop outsl push add mov cmpsb mov jp push add js js lods xor pushf pop xchg mov in lcall cmp inc inc jb cs dec xor cwtl inc xchg sbb push push fldt je jns push add out xor and insl je sub (bad) scas jae repnz int cmc lods rorb cmp sbb add mov insl orb push mov pop test bound adc add out leave push int3 stos rcr pushf mov sahf in add push sub lret mov (bad) fs xchg insb cwtl jmp in pop test sub daa push and inc test lahf sub in cmp sti int fdivp sbb (bad) roll push lret cltd pop movsl mov dec mov cmpl in stos mov movsl test dec stc jmp mov sahf add fs movsl adc int3 sub jg cltd out or movsb ds xor add aaa mov (bad) out adc in mov repz bound stos stos or es mov ds cs outsb adc mov dec movsb lds pop jmp aad lret pop aas paddsb push pop cmp enter outsb test xor mov push sbb popa mov and dec and push dec xchg repnz adc pop addl pop sbb scas inc ljmp sub xchg dec mov int3 bound mov mov push xchg sbb loopne push std mov dec mov outsb (bad) jo,pt cmpsb lahf adc (bad) aaa loopne fldl test push jg cmp mov jb dec popf pop mulb add fcompl or outsl or add js jge addl jne jmp mov pop int gs or sbb fcmovnbe pop or loop lods jne lods pop movsl xor fdivs lods pop (bad) lods mov fs sti pop es sti pop push nop (bad) into dec push adc lock pop inc roll clc (bad) (bad) sti popa aas fst lret and cmp mov mov dec fisubl sbb jg inc dec cwtl add fsubs sbb adc jmp ret jg sbb std xchg enter sub pop mov imul or dec out pop pop int and rcr and inc fisttpl jnp in mov jg jmp xchg xchg pop mov aas enter add les sbb cli inc (bad) in sbb push test outsb repz ljmp ret std mov sahf pop add push imull push xchg jnp jge add xlat mov scas sbb mov stos jnp xchg data16 mov pop xor adc int3 and inc adc in mov xchg xlat adc lret (bad) (bad) pop inc leave fiaddl popf test dec or push xchg test call (bad) sahf push mov mov out jae loopne push out in scas cwtl outsl mov test inc es insl rep add adc inc out cltd push mov jecxz out fsubrs insl enter das in push repz add cmp cwtl lcall pop mov sbb dec push mov shr jne pop dec (bad) lock mov mov sbb pop and pop outsl adc je lods mov pop es jnp sub jl (bad) and jae jo mov cmc jmp dec popf in fcmovnbe cwtl das mov lret or xlat push or (bad) push mov xor out repnz push fstpt idivl (bad) int (bad) icebp stos inc or lcall add (bad) and jl mov mov mov mov pop iret dec sub jle fwait nop loopne bound dec lahf in das mov cmp adc repz fbstp push divl mov insb cmp push cmc or dec lods xor mov mov (bad) xchg add sar scas pop adc push or aad sub add test push add out fbstp xor ret dec xchg mov pop mov (bad) idivb in xor mov nop pop mov clc arpl jnp pop mov cmpsb std mov dec out add jg test push mov (bad) rolb jbe jo cmp dec sbb xchg jns into nop int pop cmp fsubl or hlt (bad) xor ret subb push ficompl xchg mov lret movsl fcmovbe jl jmp inc pop adc fdivrl clc mov call jl sub (bad) mov cmp pop cmp jge mov jb xor mov or es arpl mov add sbb (bad) repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc incl add add fisubrl add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add ja add add or or add or add add add pop or add add mull add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add cmp push js in (bad) push bound sbb mov (bad) insl (bad) mov cmpsl mov imul jecxz add or add xchg jge hlt mov add insb xor mov xor inc sub jns cmp sub aad mov out loopne repz cmp aad add push lock popa fnstcw push (bad) cwtl add cmp mov data16 std in daa cmp mov push (bad) xor mov fsubr gs and daa lcall fistpll scas ror fnstenv or pop jo addr16 fildll sbb inc divb (bad) and pop xchg imulb add and adc repnz jae ss mov push jb je xlat mov sbb cmc jnp jecxz push test mov in rorb sub je repnz xchg fiaddl leave pop xchg dec lods sar ret pop cs mov test sbb inc loop push in push test outsb add cltd loopne stos pop (bad) xor jbe push cmp cmpsl and push sar pop ret mov xchg adc jl movsb dec and jp dec loop jns cs inc and inc cmpsb rcrl mov sbb sti mov cld jecxz mov inc stos lret mov or push mov mov cmpsl jo adc sbb scas adc or ret popf add in sub mov and adc outsl mov and sbb dec fbld mov jg and fcomps jns mov inc dec dec cli leave lds test xor pusha inc push (bad) jl inc scas adc adc fs mov sti fist xor jmp xor enter faddl lret je test pop loop push pop sub rolb push lock pop push mov in divl test inc and rorl cmp jl xor xor out and xchg in push push insb adc and ret sub or fildll mov sbb adc bound loope jle sub in cmpsb icebp inc push rcrb test jbe mov jae scas loope,pn and mov dec push mov pop inc mov inc add inc pushf sub lret cmpsl inc mov pop add push scas xor adc inc sahf ja cmpsl (bad) jle ds lock std and jg outsl and icebp dec mov jbe imul repnz xchg inc or sbb pop pop sub or int3 outsb inc push jp movsb adcl jnp mov adc loop mov lock xor sub in dec jb pusha imul loopne pusha push and (bad) mov ret cs jb gs clc add inc das push arpl and dec xor call and xchg jecxz popa mov pop mov shrl repnz mov pusha xchg sub inc cmpsb out (bad) dec shrb mov cmp sbb ja,pn outsl push mov orb xchg push bound rcrb sbb out mov fidivr sbb dec fidiv je jmp ja and sbb lret sub dec call or or push mov lahf sub mov aas movsb cmp shl fildl inc add enter int3 mov pop mov mov add je mov jo mov jo cmp xchg and dec xchg jbe subl dec pop fmulp sub inc jge jcxz cmp pop and pop vpsubb cmc mov repnz insb or lock fcoml mov pop inc sbb or mov sub mov xor addr16 addr16 ret add xlat test and cli test pop stc and cltd jg fwait sbb jns call xchg test (bad) xor sbb mov or bound mov in sub shrb and icebp push xor stc cwtl jns (bad) lret jbe popa (bad) mov es xchg xor cld push sahf aaa xlat fcmovnu jae push hlt sti int3 ljmp les sbb pop ss sbb dec push cmp or adc xchg push jbe (bad) mov adc adc cmp arpl stos in into dec push adcl mov add cs push cltd add adc (bad) fwait cmp out mov add jge repnz stc cs cmp aad sbb add cmp cmpl inc (bad) pop mov adc mov jno mov xchg sti scas cmpsb movsl sbb xor imul pop pop in xchg out data16 cmpsb mov pop lret jno sbb je fwait sbbl out xchg inc mov fcomi in in int3 jbe std (bad) repnz xchg jl push cld js or scas out cmpsl fisttp ret push movsl and das test pushf pop sbb push cld rcrl movsl xchg add lods mov inc push sub add das lods (bad) adc sbb movsb jle loopne mov dec push neg xor test cmpsb sbb pop insl cmpsb fisubr (bad) and jne rcrb dec test jae repnz jnp aad movsl scas xchg or les ljmp lcall cmp cmp add cld loope push cltd or lods and sub in imul or rcr out mov aad stos sub test dec pop adc sbb or adc or sbb dec fldlg2 popf aas aaa mov rorb xor inc testl aad dec sub push pop inc cmp fwait mov dec mov pusha cmp in inc mov or fimull add movsb push scas lret cli adc push and or ljmp jmp addl add adc xchg pushf les and aam (bad) in pop xor sub mov sub (bad) hlt ret dec jnp dec loope jmp call and sub andb loop sbbl adc es in (bad) xor jmp enter sub mov and roll add or fbld in rorb (bad) mov mov js out popa xchg and outsb mov imul ficom pop mov mov sub inc aaa call icebp xor xchg iret xchg pop cltd sbb mov shrl jp movb loope rcrl test inc mov lcall inc mov or icebp pop pop mov je pop lods sbb shlb mov pop icebp pop or bound pcmpgtb push or out hlt jp push cmp test cmc pop call xor mov and inc adc xchg and ds dec (bad) js dec push push stos mov push add jp repz dec lret inc ds fs jp (bad) adc xchg add mov or or outsb cwtl ds cltd in sub cmc in data16 or adc add adc in sbb (bad) sub pusha push mov pop mov xchg in stc sub adc fyl2xp1 mov dec ja mov push daa leave fnstsw sahf xor test inc mov rcrl hlt or or shll mov or xor dec ret fimull insb inc test adc aaa add xchg in push add pusha and and mov cmp in dec xor aam xchg cltd rolb int sti ficomp mov pop pop lea xchg dec es js test dec pop xchg out leave mov xlat int stos xor xchg movsl and and cmpsl pop jbe int sbb test rclb insb mov lods cmp ds cmp fbstp (bad) roll faddl xchg mov push das cmp pusha int3 push int3 mov lds data16 bound inc (bad) (bad) out cmp call in bswap push jmp cmp (bad) mov stos and jecxz (bad) cmp add fcoms repz in adc sub sbb movsl dec inc cmpsl into mov cmpl xchg adc (bad) adc mov sub adc (bad) push (bad) xor cs adc dec xchg shrl cmpsb pusha pusha js hlt in (bad) ja out push fildll pusha or pop shl jecxz fisubl sbb fsubrs adc mov xorb cli int dec mov sbb xchg add and cmc or inc inc jo scas inc imul jo aad fdivrs imul leave dec and inc dec adc (bad) mov xchg lods and pop push mov fst jle gs int3 inc bts scas sub mov clc arpl sbb push push and push jge ss divl inc mov push xchg add imul jecxz cwtl cmp aad adc add rclb aaa push jg fisubrl push add loop cmpsb in xor mov jecxz movsb add xchg mov pop outsb aas jl fldt dec sti (bad) aam mov or int mov je inc pop rcr push icebp (bad) xor mov repz fcmovu stos jbe sub mov mov int xchg sub xchg out imul pop lret (bad) xor jne push mov sub fwait pop adc and fbstp fnsave mov test int xchg and mov in push (bad) (bad) fadd negl scas cli jb aaa or push hlt sub stos xchg imul cmc mov gs mov in call jp pop mov push nop daa push xor insb addr16 (bad) cmp cld inc mov xor mov pop les adc lcall pop das xchg mov cli scas fisttpll xor outsb insl (bad) mov imul jae xchg mov loop jno xor cwtl push dec les and mov inc fild sbb clc push pop sahf int3 (bad) push add jle push sub dec inc or test loope scas nop push rcrb pop scas jb cmpsb mov call cli mov mov or sub mov xchg jbe pop cld int loope jno dec sub arpl inc (bad) insb sbb aam out lahf cmpsl mov jg test mov pop aaa cmp loope push lret ret pop hlt push sub out das mov adc outsl ds push fdivr insl fs mov add outsb in jbe arpl sub fiadd xchg mov jle scas (bad) mov ss adc inc jg push sub adc push in out inc ja or sarb (bad) push jae add lods into cmp sahf scas xchg ret xchg jmp fisubl and adc add or fwait xchg test sub add mov pop aam imul (bad) cmp pop fcoms cmp or fst pop or repnz and mov sub mov pop pop (bad) jmp fimull les adc adc lret add call adc cli adc cmp xorl ds jo add mov push cmc and mov mov push rorl mov xchg mov mov fsubrs lods dec lcall stc aaa loopne enter sbb push dec mov sub enter fucomp jnp add lods add es mov ja iret jo dec shlb aad mov mov xor xorb lds cs jno or xor or push idivb aas inc sbb arpl xor xor bound push lahf fcmovb movb jl lcall jne sub enter repnz adc fdivrl iret add jnp cld inc dec cmpsb stos (bad) nop mov adc orl jecxz lret lods clc mov add xchg mov and and sub sub inc lods es test popa outsl inc in sub js jno or stos adc xchg adc ds sub int3 rorl scas fbld sti scas lds les lret jb out jo nop add sbb std dec out (bad) jmp fimull das lea or sahf sbbl scas adc sub in fs andb out xchg rcrb and fcmovbe insb in jbe hlt xor xchg pop stc fild pop adc cli mov xchg mov jae mov vpavgw sti adc loop sub or push fcoml mov jae push mov dec orl cmp lea pop mov enter inc jns pop in or rorb cltd mov cmp imul call out mov in fisubrl mov addr16 ret mov mov in mov mov js xchg push ret cmp mov mov jns aaa and add add sti cmpsl pop xor std out cmp mov popa scas and mul pop mov xchg scas pop scas loope jp popa pop es or mov test mov roll sub sub jb push loopne or nop and lods mov sub int lret loope mov lea mov mov repnz lods mov bound dec fnstsw stc loop push push mov jmp sbb repnz cmp pop sbb cmp mov dec inc mov (bad) push push mov mov or out sub jnp outsl scas push addr16 idivb imul push popf imul sbb add lcall ljmp ljmp call mov inc push (bad) out pop insl push jg dec test fiadd aaa enter dec movsl mov sbb pop sub mov ds das out inc out (bad) lock loope cmpsl cmp xchg cmp fsubl test pop jno cmp pop adc cmp loop icebp xchg mov sahf cmp push mul add stos xchg sbb inc sbb loopne mov and mov (bad) arpl insb (bad) push push aam sbb or stos aas inc test jle pop out call cmp push sub sbb inc sub dec pop out out jg ds mov test jnp ja das adc mov cs test test fcomps insl push lret out orl andl in adc test push dec nop das dec int3 das push and push cltd into adc and incb sbb dec xor insl inc pusha fsts dec push cmp gs xor push loopnew push sbb pop jbe ja aad fsubr dec hlt mov addr16 shll pusha and xchg icebp leave fs adc mov dec mov loope jo and xchg ret scas aas imul mov sub test mov cmp pop flds dec fcomps in imul int3 xchg dec add fwait and jnp and sbb inc insb enter ja xor cmp stos mov dec daa sbb (bad) sti movsl cld cmp scas scas sbb icebp adc test lods mov jns dec mov dec sbb das rorb sbb or data16 mov mov lcall cmpsb jp int3 stos mov pop loop jnp mov jnp mul insb xchg mulb xchg and fcmovbe fldt pop (bad) (bad) cmp (bad) mov jecxz out mov cmpsb les rorl mov (bad) add or push lret cli popf aad mov and jno cltd movsb mov fidivr or cmpb roll dec test mov icebp sahf mov cmp sub push repz jecxz mov jnp mov in mov push xchg std inc pop xor mov pop xchg adc or adc jp pop jnp or sbb (bad) je inc sbb mov mov dec push push inc fmull movsb iret lods xchg push mov jecxz hlt fcmovnu jg movsb cmp call inc rcrb lods xor mov mov push and dec sbb ja jp sysret xchg jo aas pop cwtl add jae xor daa std and (bad) xor mov xor and inc pop mov loopne mov dec xor pop vandnps dec (bad) ds jno dec xor enter cmp xchg jp lret lret or leave test jecxz push data16 movsl cmp pop push push fwait bound jns lock xchg push cmp push js ja jg jmp jp xchg sub cmp data16 xchg (bad) arpl cmp mov lret mov imull out mov dec adc add mov push dec adc xchg das outsl cmp (bad) cli lods dec jne jp fs pop cmp xor mov add in inc push jo jle ja (bad) notl fbstp sbb fsubrs xor sbb fistpl int mov cmp cld adc popf (bad) or push repz xor xchg mov xor divb inc mov (bad) mov hlt mov int3 (bad) mov pop mov dec push xor scas (bad) cli das gs mov outsb clc push push out sub or fsubrs imul test testl or fiadd std sti dec inc mov aas fisub popa mov jge pop fiadd cmp sub and or push sub enter (bad) xchg sbb iret movsl ljmp pop je mov repnz xchg sub push (bad) push into int3 xor lods or inc and cmp lcall mov dec stc xchg lods imul mov loopne sbb loope stos cmc push icebp lahf jb sub (bad) and nop lds jle pop enter jge push mov sub dec xor arpl sbb test mov pop subl push arpl fs arpl mov lea loopne iret jge insl sub (bad) repz or andl xchg mov jae inc adc gs jge sbb fimul in leave dec mov mov sub and leave adc inc adc test (bad) adc fsubs push aas insl dec add int3 icebp fucomp insb inc hlt icebp cmp xchg push inc add sub (bad) or cli mov mov inc pop sbb outsl pop sbb scas mov dec push push scas and dec sarb pop push xor push adc dec push mov adc incb jecxz movsl pop pushf xlat cmp inc adc xor ds in aad add addr16 sbb (bad) popf xor movsb test inc fdivs inc dec mov pop loope mov (bad) in (bad) bound bnd xchg mov roll pop mov mov mov xchg dec and shrb loope pop sbb insb arpl cmpsl ja out sub mov cmc in push daa mov jbe pop arpl xchg xor fwait mov and rcll test push test imul mov xor mov rcrl adc cmpsb mov and push lahf pop mov mov out mov fnstcw bound popf lea push inc hlt popf fnstenv cmpl fist mov frstor mov adc push ret jge insb fcomp loop loopne adc sarb pop xor or fwait push add sub outsl pop fsubl sub jnp pop dec imul cs out xchg test adc add jns shrl push xchg xchg lahf adc push jl dec clc xorl cli mov push jnp test dec and mov lret mov lret ljmp dec sbb in mov inc notb test movl jle dec and cwtl sbb (bad) popf mov inc cmp pop and cmp lcall xor test or jns inc or or mov mov popa arpl cmc sub adc jle das test mov cli lea mov out jb cmpsb lds inc pop sbb mov cs out dec clc push dec push and add fcmovne or sub fiaddl pop popf inc add int3 mov adc and add aaa outsb push ret mov rolb add in dec (bad) sub scas and xchg out addr16 add xor fisubrl push adc test cmp mov jne mov mov jb jne sbb fnop jg int3 int outsb lods aad or pop fs push insl movsb rcr shr enter mov push sbb inc or rcrl test mov inc jns lcall out xor pop loope mov call fistpll inc add out jne insl pop into sub scas in and mov jno jno mov inc mov (bad) xchg inc jno loope lret data16 fsub mov add out fimull mov (bad) xor lret push pop adc sbb arpl pop sbb sbb mov jnp,pn gs or mov mov test adc cmpsl in in scas cmpsl sahf jo pushf sbb inc call mov (bad) push in adc jns (bad) jg cltd movsl aad jno xchg (bad) rcll jb lock mov xor out push xchg lea lcall jbe pop xlat fisubl les loop sub out popf and or jecxz faddl mov adc test loop push pushf loope dec adc aad cmp arpl sub test and call aaa xor lods nop es int3 imul cmp and push hlt icebp jp push insb in aad push pop xchg stos inc icebp pop or lods ss and xchg dec mov test mov in movsl pusha pop mov ret or lds repnz nop and daa mov aas jno mov add dec daa and xchg cmp and mov jns or mov test xchg (bad) pop loopne es push add mov cmpsl sub sbb (bad) push cs rep fadds jne cld ljmp inc (bad) mov shll mov lret pop ja das test jnp fisttp out jo jle ss popa jbe sub push pop mov xor xchg push xchg call test adc add movsl (bad) popa dec inc int3 mov mov lret pop daa insl gs mov jle adc icebp sub jmp mov adc lea inc sar fimul dec lea in inc pop insl inc (bad) mov je cwtl xchg lds push mov cmpsl out mov mov mov ret mov fwait jbe inc leave mov out sbb inc in mov out mov jp mov loopne out mov fldt mov push dec test sbb or out xor mov addl in popf mov sbb inc mov pop sbb cli and jbe cmp orb jbe push xor pop lcall ss add sbb inc mov xor movsb jo test lahf pop pusha dec xor jp es mov mov lcall aad outsb mov pop stos out in lds xor rolb out dec popa sub mov push sub popa xor jae (bad) xor (bad) imul popf add in mov sysret shl imul inc lds enter xchg mov int and sar arpl jl mov sbb (bad) and loopne push fidivl call push sub sahf and mov int pop loopw,pt in mov sub sahf imul xor mov xchg nop push mov sbb sbb push roll in cmc gs or clc fdivrs clc dec push arpl lds sbb idivl movsl aad push pop xchg jl (bad) mov aaa out cmp lds inc xor jecxz xchg cmpsb fs mov xchg cmc rol aaa bound mov push arpl cltd pop aad (bad) pushf sarb ds sub decb fsubr sti out jae das rcr cmp enter sbb inc cmpsb stos test icebp daa sub (bad) jecxz shrl xor cwtl add lret jp cmp inc jno mov xchg hlt push jb test mov mov adc repz inc lods stc les aad jno ja pop insl xlat in jg adc mov fmull cmpsb cmp in (bad) cltd inc repz in or jge imul scas aas push ljmp adc mov xchg cmp test aaa lret iret ret mov aam mov inc ljmp les movq in jg jg cmp and pushf jle ja nop sbb imul jp cmpb cli insl stos push jmp int aaa cmp jb add and xorl enter dec xchg mov out cs dec jne inc lds out test out insb or out int xchg mov (bad) push data16 test sub lret jge (bad) xchg outsb dec xchg rcrb ret ret insb testl les movsl cmpsb push pop lahf cld jnp repz sub jae inc sbb xor jne add adc fwait cmp inc jb (bad) rcl insb stc jb jle inc fdivl (bad) in nop mov loop push push daa pop jl add mov xlat ja jno xchg mov xchg adc xchg dec adc xchg push out sub xchg add push push ror xchg add cld and sti and cld das fstl das xchg pop lds js sahf (bad) mov ljmp mov shr xchg lock push int3 iret leave shld or and sub xchg (bad) test xchg scas inc rclb lea ror gs pop loop or xlat clc push sub testl addr16 out inc mov pop int dec dec js aas xchg repz pushf out and bound inc inc outsb inc jae inc ret addr16 mov jge xchg adc mov ja nop test mov mov ja leave cmpsb test jle cmpl push push mov mov in movsl pop lods ss fidivr fistpll lcall or add call leave xlat push lods popa (bad) in and fnsave jne out jno loope sub push aad mov xor add ud2 mov psubb cwtl jmp mov mov sub pushf out sar mov push pop mov data16 and fbstp sub mov sbb push cltd mov sti jecxz sarl faddp jnp dec xor pushf push notl mov xor pop (bad) jle cmp xchg shl push sbb in shl ficom cmc lock scas or pop add xchg add in je in mov leave and lods jne lods sbb hlt push or fld pop inc dec cmpsl stos rcll xor ret xchg lret lods jg das cmpsb cmp jecxz mov pop pop mov divb in pop test movb adc aam hlt popa ret nop mov jle test push jo pop fildll pop hlt imul sahf jecxz jmp mov or sbb pop fistp lahf nop movsb ss add sub js (bad) mov xchg je jb lahf lcall adc clc test sbb push lods rcll xchg push andl sti int cmp mov fwait sbb aaa aaa mov or adc jae js dec (bad) imul or push pop or mov clc clc and mov inc xchg test mov fisttpl insb push mov ja pusha or pop pop inc mov rcrl lds and into mov rcrb push push adc fcompl and mov mov aam xchg dec adc push daa mov adc xor jp push sub dec sbb sti mov xchg and add jne adc (bad) stos pop sub cmp lcall mov push lret popl je sbb xchg and imul jnp test jb mov xor push xchg iret loope shll (bad) jb pushf into cmc mov xchg xchg clc xor out sbb xor adc jae fwait and scas cmp iret (bad) out pop mov or fldl jno cwtl and pop int3 mov push leave inc movsl dec push mov int mov data16 xor jp (bad) sahf jg push lret add fs add xlat or jp sbb int3 or out loopne aam jne es jmp cltd (bad) mov dec jecxz xchg (bad) add sti dec xchg sti rorl shrb push aad loope mov popf mov jle mov mov mov jle int lds dec bound push test jmp scas mov adc mov out jmp cmp push js into mov add cs mov (bad) lock in cmp mov enter call mov ret jl js adc sahf inc test sub data16 xchg sbb push jo les gs (bad) int3 sbb xlat and into gs lahf out mov cmp mov out rcr mov popa xor repz popaw ror push adc mov clc cmp pop lds cmp scas jns lret pop in pop push pop add pop rcll xchg jbe mov push xor mov jg lock aas imul jnp out sbb mov insl jb jo jl es insb mov mov mov stos and sub sbb pushf mov fildll sub out mov add arpl bswap addr16 test jl pop (bad) in inc test add aam aas mov jae pop cwtl cmpl idivb cmp sti sti push jne pop mov mov mov sub repnz xchg mov jp sbb in jl arpl sarb rolb sbb and mov mov (bad) aam cmc jo (bad) jp jae cmp popa fdivr adc adc fisub pop (bad) and lcall (bad) dec ljmp das push clc jb and jbe lret int3 xchg fsubrs xor cmp negb pop cmc mov cmpsw inc push inc push and jno int dec adc cmovo mov in push jne pop fdivr test fxch or mov addb xor lock gs push xchg sbb inc adc cmp jne xor popf das add insl mov stc push cmp (bad) mov sub sti aam pop dec imul add fdivrl hlt into jns adc mov sub xchg lods adc jne fbld fisttp fucom jae leave xchg mov cmc xor roll fsubrl popf mov sub lcall jecxz cwtl outsl cltd inc cwtl jp lock dec and in inc sti and test or pop inc test sub sub outsl jnp xchg xlat (bad) xor ret popa jae add sub jo and aas xor push and push lcall xchg loop add cmp add dec sbbb push lret adc and incl jns pop pop sbb fsubrl mov popf stos lar into into fisubl (bad) shrb add loopne (bad) (bad) dec pusha mov mov push xchg sub ficomp adc jbe lcall mov cmp icebp or jl xchg out or loopne push stos hlt sbb (bad) and out mov scas aad out cmp test adc mov gs mov mov pushf mov pop push jmp pop jno lods push mov dec subl imul fbld test lret cmp sub cmc cld fldcw push cld ret daa (bad) push iret sub or and and dec cltd pushf stos mov arpl mov or xchg or xor cmp xchg daa cmp push test push pop insb loop pop sbb repnz ja ja push xchg jp into push mov inc add sbb std pop cmp cli lds sub push (bad) fimull addr16 cmpsl lcall hlt mov rcrl fs enter scas std xchg sbb xchg sub xchg push push xor xor add clc idivb std popf (bad) sbb loopne add inc push dec je xor daa sbb pop scas cmp push fs push sahf call cmp (bad) fwait pop in xlat mov sub inc jbe js push inc xor dec dec rolb ss int3 fldl mov dec rolb gs mov std movsb jle stc xor adc mov (bad) addl int lcall stos dec xor cmp popw push daa add enter std xchg cmpsb adc jno,pt adc std (bad) jo rcl xor lcall lods and jp out out sub dec lds sti jb jmp in es or repz cmp addr16 in call (bad) mov scas lcall push loope (bad) into fcompl inc clc pop pop imul adc lds leave scas sbb loopne cmp and jle inc mov outsb cs pop js stos ret into mov addl pop hlt adc jne dec sub sbb mov lcall jnp pop inc sbbl mov dec stos jae ror lahf insb stos adc data16 pop xchg add jne jmp lock dec pop lds pop cmp cmc mov cmp mov popa pop or repnz mov fwait sub lcall hlt dec fsubs (bad) in sbb arpl int pop jbe daa loope jp xor je dec je,pn add adc js subl sub leave xor jg xchg fwait mov mov pop mov pop push push cmp gs movl lock out shrl sub je push fisubl push and scas inc mov movsb in daa dec pop push popf clc fwait jb xchg or adc dec add pop and fldenv xor (bad) call adc adc adc mov aaa leave arpl shr sbb dec mov xchg adc mov xor mov loope jno pop inc stos repnz loope stos in notl ffree ret test mov sbb dec outsb push imul jle and pop xchg add pop mov dec push sti js or (bad) fnsave cmp jbe dec (bad) fistl or fisubrl scas mov dec out call xchg jo pop ret (bad) lods mov aad xchg add not kxorw fsubrl lahf xlat push loopne jo lock ret gs in test sbb xrelease mov insl add aam inc pop dec ret les pop fwait scas loopne (bad) loopne (bad) jo sbb (bad) lock pusha fildl mov push push decl out xchg fcmovne inc mov mov xchg rorl fs jp ficom adc in loop hlt xchg or inc and jnp lea dec pop (bad) jp loope or push push mov lcall sub xchg adc or mov loope movsl test int3 mov xchg push les insl out jle mov inc std and pop iret mov mov shrb mov sbb les and mov stos (bad) xor (bad) push test mov jecxz scas mov (bad) int leave frstor cmp shll (bad) cmp arpl cmp mull mov add push ficompl aad dec jg mov add movsl mov hlt dec (bad) sarb mov pop jmp jns imul mov mov cltd xor in insl push adcl movsl test dec cli scas fcmovbe pusha repz jno pushf notl fisubl imul scas mov jmp adc notl pop out and jne in in sti test push lahf (bad) test jbe xlat sarl add add sbb add adc (bad) insb push aaa aas lock xor addr16 fsubl decl lds fisub shll stos aam pop cmp mov push push xchg mov and adc push or sbb add lcall pushf jne jb stos sub or fdivrs mov lds loop push cwtl pop xchg (bad) push xchg aaa mov xchg cmp imul imul hlt jge mov inc push add pushf rcrl mov dec hlt std xchg push rcr jo fs aad imulb mov add mov and or shrl out ds fwait cmp imul sub push mov lret and inc mov call sbb dec pop test jno xlat pop mov cmpsl push mov jecxz fwait push and mov mov jp arpl sub adc fwait out sub pop aam dec sub sbb out mov pop adc xchg roll sti fnstsw adc les inc adcl jno or jmp das and adc sbb repnz lods inc sarl push cmp das sbb andl rorb or and decl lods dec cmp fiaddl cwtl add loopne inc or aas push mov mov xchg fisttp cmp jbe or scas xchg aaa sti js sbb aam addr16 daa or jmp popa shlb aad test cli mov cld popf std repnz not lds pop adc stc mov sbb inc mov out orb out cmp add mov fucomip in push inc sti lret (bad) pop mov mov jo in jmp decl popf pop fsubrl xor repz sti cmp and das jns mov ds popf push sbb adc shl sub add dec push movsb test sub pop test rcll pop mov push mov push or negb or inc les fistl dec addr16 push rcl ret or std push dec xchg test pushf sub jge jnp cmp xchg pop mov xor popa imul pop rcr repz lock inc (bad) mov hlt mov and xchg aam push mov pop (bad) lds in cmp cli fcmovne out (bad) jo push fwait mov xchg push cs jp movsl mov int3 mov insl pmulhuw dec ror fidivl aas pop imul js cmp out adc lcall shrb les cwtl jb ss mov mov dec test iret jmp mov lods mov in pop inc stos push int3 jnp fucomip mov in dec dec inc test cmp xchg pop testl cmpsb aam cld lds inc mov add push je les pusha cmp negl inc aas xchg gs bound or pop test sub scas jmp xor push pushf cli cmpl inc jle popf aad xor mov mov outsb sbb icebp aad cmp lock cld rcr add pop lea icebp into xor js push scas dec aaa popa mov add aam fs mov popfw xchg xor cltd mov cli insb out (bad) pop (bad) jb addr16 movsb leave fisubrl insl cmp sub int3 jecxz push (bad) push rcl stos jmp push pop sub pop pop sti mov inc pop scas adc mov add push add mov inc and push jne cmpsb push adc jp fwait lea cmp xchg leave add aaa push and frstor movsl inc lock (bad) (bad) das scas xlat outsb and xor lods mov adc dec cmpsb or ja pusha js lcall lock dec rcrb and imul jge cli xchg lahf notb sub dec adc mov sbb dec sub push icebp popa rcl in or sti push iret and mov cwtl hlt or jl (bad) (bad) adc cmpsl cs mov popa or jns leave fsubrs adc icebp push lcall icebp mov fwait pop cld pop mov sub push nop test pop fisttpll mov jg sbb push stos lea lret adc icebp adc leave out lcall mov stc fist jnp dec sbb or mov xchg shll bound jecxz and adc mov (bad) je repnz js mov iret sub rol add (bad) mov pusha mov aad jle inc roll (bad) out imul or dec das popa push hlt adc pop add mov mov fmulp jae jb xor addb xor mov lahf imul push jle xor icebp pop xchg lcall push (bad) in (bad) or loope and shll pop dec lret or hlt movsb mov sti nop pop (bad) les xchg mov pop lods mov int3 add push adc mov sub test xchg dec and dec test sub movsl mov out mov (bad) testl pop pavgb fidivl mov enter fidivrl sbb xchg pusha push push arpl xchg or (bad) cmp mov outsl pop aas cmp decb test jbe push lret ljmp jbe pushf enter movsb fsubp push test xchg gs pop adc (bad) fbld (bad) adc std icebp cltd enter pop lret outsb adc push scas and jmp push add push dec (bad) (bad) ficompl inc push loope movl test popf jbe lret pop mov jl sbb popa test sub inc loopne and push repz push pop jl arpl jne inc or mov stc mov and adc js dec inc aas or in adc out push lods fs mov mov cmc cmpsb notb push out ret arpl bnd test adc insb test jl sbb rclb (bad) and (bad) mov jo in xor in cmpsb sbb test imul scas dec loope sbb mov ja dec pop lods jp (bad) mov jns imul and dec xchg (bad) cmc cmp ja xor outsl vmread stos pop push jge add adc sbb sub mov dec xchg scas xor in in loopne stos push push (bad) ljmp add mov rorb out mov mov fwait push call aam or insb aam mov jecxz mov cld sbb lock push fldcw pop aaa js rorb push (bad) in pop cmp adc xchg cmpsb push cmp stos rorb mov aad pushf dec (bad) fisubl popl ret add dec sub push stos repz addl xchg andl lcall jle stos adc sbb push inc imul or jne xchg scas inc cmc pop dec sar insl (bad) jecxz adc aam into mov loope inc (bad) mov nop or xchg lret add arpl mov mov jo ret mov mov lea xlat mov jo pop xor call popf xchg sub jno movsl test mov scas push fwait add and mov arpl adc sbbl cwtl sub push jne dec push (bad) xor adc shlb xchg jge pop or cld hlt outsl dec cmp or movl jns add adc push addr16 xchg push fstps jp sub fcmovb ficomp cmp xchg jns push sub lods inc cmova inc cmpsb cmpsl (bad) or pop add in std rorl inc sbb (bad) and cmc fwait das (bad) out xchg (bad) pop adc fcomps add pusha sbb sub lods mov cmpsb sbb repnz in sbb pop dec inc jle add outsl leave mov sub sub aas jmp cmp mov jns cmp add cmp jcxz push (bad) pop int xchg add jbe pop dec lret dec adc sbb adc sub bound adc test aam (bad) jno jbe mov push adc add sub movl movsb inc dec rcrl xchg xchg aaa (bad) imul pop fstl cs fwait nop iret sbb lret ds int3 ljmp push push lcall mov out push xorb insb (bad) adc (bad) mull pop test rcl cld inc cmpsb adc cmp inc (bad) push inc jnp adc add xor aam mov outsl lds fbstp (bad) std test (bad) fmull fimull cmp cmc xchg pop movsb insl jne lea pushf cmpps xchg inc pop (bad) (bad) test xor inc jno dec adc mov (bad) cld mov adc xor add lahf (bad) mov xor dec frstor mov jno stos add divb sub rolb inc call stos push cs dec jecxz mov jecxz outsl push rcl lret (bad) repz mov cmp mov insl mov lds nop lea rolb aaa mov in stc decb loope (bad) pop adc fs cmp jmp sbb negb lods inc jl mov ja repnz fcmove inc push fsubs or rclb je lods mov adc xchg mov (bad) js sti jle into jge xor rorl out dec lock aad xor sub cmc (bad) jmp sbb pop lods inc movsl shrb insl daa divl add cwtl insl cmp test xor mov insb stc push cld sti pop jns int3 adc lods inc pop lret mov xchg pop lods int3 test sub (bad) sbb iret stc mov insb lret xchg ret or mov cli inc in ljmp movl pop add xchg lret jo jns mov xlat fsubl dec mov mov jecxz lret popa fnstcw xor cmp xorl popf sbb fsubr rol and sub or sbb sahf mov push movl iret test or sbb fadds arpl and mov jb jns std or xlat jp fisttpll pop aas mov gs in pop cmc push mov (bad) xor data16 xor pop push add xor dec bound and into ljmp ror loope dec adcl rorl or pop ret pusha (bad) arpl fnstenv dec cwtl pusha mov mov ret into or enter adc rep in in std in xor cmp pop imul mov mov mov mov dec xchg xchg mov test adc pop sub daa inc sti int3 cmp pop lahf sbbl js xor sub xchg lock aaa fdivs sbb loop push jb inc add and fidiv data16 push lret sbb lahf (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret decl add pop inc xor ret xor add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add jne add add or or add or add add add pop or add add mull add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add cmp push js in xlat add mov mov (bad) mov cmpsl arpl mov mov incl sub adc add loopne add or and std or ds pusha inc aas inc xchg mov in icebp pop mov (bad) or jg out mov lods cwtl mov stos mov sbb xchg jno dec int3 add dec or ss out mov leave xchg scas fdivrl cmp lret sbb dec out xchg loopne mov add bound mov loope into dec (bad) (bad) inc mov out mov mov arpl (bad) and pop arpl inc in data16 lds cmpsl pop scas add ja mov andl xchg stos pop fimull xchg jo jo call xor pushf dec jecxz daa xorl ljmp mull mov xor cmp ret clc pop leave push mov push pop mov mov cs sbb addr16 in gs pop movsl mov into nop mov vpsllq call ja mov sbb inc inc sarb adc into sub (bad) fsubl mov and inc dec ret fldt lahf js outsl ja sub loope push sbb push mov insl mov cwtl mov sbb mov stos dec inc or sub (bad) xor pop cs clc test cli pop insb mov inc adc fmuls mov in mov xchg sub push aas xchg fwait push je lock sbb xor mov leave ja or gs (bad) mov pop js in pop sub push mov nop stc pop nop push (bad) dec mov out or adc push and mov pop mov adc sbb rcr (bad) daa push (bad) pop xchg inc mov push add jno pop xchg lods cmpl loope cld icebp fidiv jp xor xor and sub rcrb js in cmc es cmp add leave xchg mov pop sub mov xor test push pmaxub cmpsl mov repnz dec ljmp sbb mov testl dec or ret ret insl inc je xchg sbb mov data16 pop stos push sub nop xor jb jl cmpsl int xor rclb inc sub xchg or inc mov mov mov mov mov jno outsb jb int3 popf pop adc int shrl es aad shlb in out push jge fnstsw pop sub adc aad cmp add mov and gs in cmpsl movsb pop mov loop push sub loop mov fmull (bad) movsl dec lods jg imul pop insb cmovs popf or dec add adc bound and inc outsb and cmp data16 std leave push test xchg aaa es outsl ljmp mov adc mov test xor jmp mov push (bad) fmuls scas imul (bad) or mov cmp shlb fsubl (bad) nopl push xchg mov rol cmpsl lods int3 jo pusha dec aas xor adc dec sbb insl pusha imulb mov das add das jecxz push imul and jne dec lds xchg mov inc movsb (bad) and pop roll adc jecxz leave test gs insl repz mov cmp mov rol mov leave outsb ja adc add mov xchg pop xchg and adc mov repnz jmp xor jne add fld leave mov (bad) int3 (bad) int3 or mov (bad) mov rorl jns jcxz xor push rcll add mov pop js (bad) and pop lret cld lret adc jp jmp sbb pop mov scas test dec inc mov fistpll nop jp pop in lret jnp xchg mov sbb mov sbb pusha rorl dec hlt mov fwait (bad) jbe and or cs out sahf push mov jae fcoml repnz jp mov fwait test lds pop or arpl mov xchg push inc stc and pop pop movb mov adc popf jmp fdivl cmp jmp fcomip mov mov mov std dec mov (bad) icebp xchg (bad) loop sbb into in and repnz cmpsl mov popa leave lea arpl cmp pop jae in fnstenv sbb xor addr16 cli ret xor push addr16 pop push out cltd gs push jmp fldenv lret sbb mov pop or mulb fistl mov js mov or jo xchg in xchg or or xor (bad) fidivl xchg (bad) stos in repz sahf gs stos dec and mov lcall cmp cmp loope fwait (bad) sbb aaa cwtl call jns adc test mov inc arpl hlt add xchg dec xor int3 or pop addr16 inc js in (bad) hlt jle adc in ret orl mov scas xchg xchg cmp out mov sbb pop xor or loopne or or daa lds daa sbb push stos mov xchg push push aaa jmp or fiadd xor jp jno dec inc cmpsb je mov jmp test push sarl cld test lds pusha and call addr16 cmpsb and lea fwait int3 into rorl movsl popf mov jmp mov pushf inc (bad) pop dec test mov mov mov jb fisubr test cmpl add xchg cld mov pop int add and push pop mov addr16 test push enter (bad) xchg es xor pop or add out les pushf loopne ljmp push and outsl jae jnp mov mov shrl ja pop inc or lock in mov push pusha mov sbb cmp adc xchg xchg or sahf or mov and mov xor adc cs push fldt clc insl push das shrl xor xor push adc add xor mov or insb (bad) mov mov test lods cmc mov cwtl (bad) (bad) mov imul popa stc mov push push sbb inc mov mov jae ret inc mov (bad) jb fs mov das outsb lods jbe sbb add repz jl inc (bad) jno js test cmp cmpsb xor push stc push das jmp add mov push xchg popa and or xchg jp scas adc fsubs lds inc adc xchg fstps loopne sub je mov cmp mov lock mov stos push js shrl sub mov sarb ret mov push mov (bad) repnz or fidivr pop rorb jae xor mov ror or mov mov mov fbld adc loopne ss pop icebp sub sub lds (bad) xor jl pop cmp loope jecxz sarb sahf aad push adc shrl inc mov dec in das (bad) je aaa fdivl orl je aad add pop hlt xor pop xor pop repz vmovaps pop cmp (bad) pop sarl js popl popf mov dec in xor out (bad) ret cs div fwait pusha je xor push rorl icebp in scas mov hlt leave outsl inc dec loopne or shrl pop scas jbe add push fild mov and bound push daa mov pop lods pop (bad) jb addr16 pop mov dec aam push mov outsb jbe sub mov shrd jo in std adc mov (bad) pop add sub xchg jmp xchg (bad) xor sbb shrb dec pop mov mov pop insb repnz fsubrs xchg imul mov xchg push mov lock mov fcomps sbbb sarl stos dec movsl add fwait mov movsl mov jne into jmp mov sub cmpsl gs outsl frstor pop sub cmp inc adc bound lahf andb mov lcall in push cwtl (bad) mov dec fcoml outsb push cld push lock test mov sbb mov ljmp mov outsb dec out clc mov nop je ja fistp das addr16 xor sbb or push xchg aam push loope lcall aas iret dec cmp jge lcall daa outsl pop sub mov adc mov (bad) cmp mov inc aaa mov inc aaa xlat fcomps mov dec (bad) fstp fsubp dec out pop mov (bad) cmp add out adc mov add (bad) add jle rorb stc pop push mov inc mov and adc xor push push sahf enter push sar pop cmc mov mov push dec ljmp mov loopne loopne scas and or mov les rorb rcll pusha imul sbbb xor js push jp pop sbb (bad) lahf pusha call add push sahf push mov movsl std mov pop outsl aad out jge xchg inc xor xchg stos rcrb imul (bad) pushl mov clc jmp cmc sbb sarl outsb sti loope psrlw sub sbbb cmp and mov dec dec arpl lsl cltd (bad) notl pop add and sbbb adc inc stc add pop mov ljmp ljmp lods sub int3 adc js sbb lret jnp jmp sub add sub shl popa outsb stos ljmp cltd loop insl outsl sbb sti inc ljmp pop popf dec lret lcall (bad) pop scas cmp adc jecxz xor adc ret cmpsl mov (bad) rorb or fsub (bad) mov pop pop sbb cmpsb mov or subb shl mov arpl mov (bad) mov dec pop repz dec js sbb out stc out mov lret mov stos adc jnp xor cld xor popf andl push and push fisttp fldpi lods dec out int3 cmp push mov jp add mov adc inc inc pop jmp adc call fsts sbb sahf cmp jle mov inc xchg into stos cltd pop movsl sahf cmp in push rorl fistl out shlb mov (bad) pop sbb lods inc lock pop push rep and fmull jecxz (bad) lods xchg cld adc dec jns dec cld mov clc (bad) jne pop xchg inc stos xchg into rclb test push xchg pop pop (bad) pop aad in in lret push push or test hlt in push shrl loope adc jl xchg call ja pop js mov sub xor pop repnz sub rcll jno cmp addr16 jae push pop inc push adc adc nop push pusha insl fwait jle dec dec in push sbb add (bad) in xchg popa jae lods sbb inc call shlb push jb push jne lret into or call xor mov xchg dec sbb mov imul mov dec sarl imul push fldenv test hlt and xor icebp into int3 mov jecxz jbe fidivr lret aaa mov in jecxz sbb or mov inc sub outsb push mov test inc sbb xchg mov xchg xor (bad) xchg gs mov sti jge push sti fidivrl bound xor cmp jle cmp in lods pop fwait jp adc xchg popl adc fisttpl insl imul mov (bad) mov adc ficoml sahf stos sub addr16 pop pusha pop xchg xor push (bad) push sbb jae pop xor rolb adc aad (bad) js inc aas xorb sbb (bad) mov loop jecxz out (bad) iret std push jns cmpsl lds popa xor out arpl (bad) or mov (bad) cs out xchg pop enter cmpsb fs lcall sbb jae bound mov iret aaa xchg lea ljmp add dec pop mov std push jbe sti int3 xlat or sbb ret adc pop xor test fcoms push mov mov pop pop xor fadds ds or sub mov addr16 sbb or fbstp ds jns mov sahf mov mov cli addr16 out arpl test aam fdivrl outsl hlt pop daa popa adc xchg fwait cwtl out test cmpsb jmp mov xchg pop fdivrp cmp sub add inc jns or xchg insb daa xchg out cs leave jle arpl push jle lock inc pop pop add (bad) syscall ret ret sub je or mov adc adc push add test inc scas leave rcrl inc scas nop add add out adc mov mov xorl outsl sub scas daa lret xor lret inc pop orl push dec stos mov or jbe es pop inc inc add push pop dec cmp out mov jns xchg (bad) adc popa sbb mov xchg xchg cmp or pop aaa add inc pop add jl xchg push gs jno icebp fist push movsl adc and push cmp and sbb mov add mov out (bad) dec loopne lret rcr jle sbb jmp sub sub outsl mov cmp cmpsl jg lcall jnp into test (bad) (bad) jb outsb jo stc icebp shll fwait jo lret mov jge jg mov push lds xor faddl sti add lds jl inc mov bnd pop out mov xor or jae les add orl sub jecxz jmp adc test (bad) mov and add mov jne dec fmull arpl pop add mov pusha pop les loop out testb jge popf sbb xor pushf lcall scas popa sub loope lds cmpsl in repnz (bad) jg mov out sbb mov mov les (bad) mov inc inc ss aas lods test repnz aam cli xor cmpsb xor mov aas cmp sub sbb mov mov mov popa ffree bound dec mov lea jo xchg rcl into pop xchg xor adc push push add ret dec hlt outsl lds xchg pop ds cltd xor daa xor sub lods clc stos and jmp mov inc jae xchg xor pop push test lods jne xchg lods mov mov dec dec inc pop xor pop xchg sbb bound fsubrl push scas inc push fidivl fstp mov pop orb stc mov das jbe (bad) xchg lcall jne push enter cmp sub sub mov mov push sub and mov mov mov loope xchg repz clc jecxz inc sbb shlb jge mov sbb inc xchg mov jne mov sub int3 mov mov xor lret push mov cltd fdivrs (bad) pushf outsb je xor test jns add mov stc aaa jae adc stos mov loop and jne (bad) inc jbe int jmp outsl mov xor sbb pop dec ret dec xchg lahf jns fistpll cmp mov jae repz aaa cmp mov push jmp out iret or testl clc das xor mov jmp icebp cwtl je mov inc or (bad) mov test push adc mov outsb cmp push test and jg dec add cmp xchg sub outsb jo (bad) call jp or jae lods mov out data16 enter dec xor add pop mov mov jae js xor mov mov jecxz add andl adc sub mov or cld js jb stc adc gs fwait xchg xchg dec pop adc fildll stc cltd inc add es rclb add jne pop out xor xchg lahf inc inc out in rorl push inc fdivrl in cmp mov test lahf (bad) stc pusha sbb cli stc or fnstenv test addl sub scas hlt push imul mov ljmp push (bad) lds dec cltd xchg aad mov cld sbb jne or rclb cmp out cmc fstpl inc roll dec jge add mov divl jb (bad) xlat cwtl sub lds pop sub jge xor dec mov aas pushf loope bound (bad) (bad) push mov cmp xor xchg popf jge (bad) add xchg scas cmc out inc insb adc xchg ret imul sarl adc insl je cmp (bad) enter mov imul xchg pop aaa out push inc jo lcall cmp aam jle dec lock or int3 push aad adc sbb pop mov mov fsubs sbb cmpsb adc adcl dec mov and das jp popf cs in dec mov out sub adc mov sub or sahf aas xchg (bad) aaa dec sbb jle xor xor inc scas push jecxz jae stos push jnp test roll cli ljmp (bad) cmp inc add mov addl and popf or xchg jno push jo cmp std jg mov mov mov (bad) jmp cmpsb mov jle jg dec pop xlat sub jmp das cmp mov scas js adc outsb fadd cld cmp (bad) enter loop jnp (bad) aaa (bad) xlat mov mov out cmp adc outsb jno sub jb xor mov stos push popa (bad) jnp lret mov int3 inc adc pop cld push sub pop cwtl sbb adc gs into cmc lods jg push xlat mov add lret inc mov jl popf ljmp in pushf push mov sahf leave jge ficomp inc jb repnz sub jl pop pop fs pop push cli pushf add sbb lcall push shrd sti jae aad xchg movsb sub mov jg pop mov das stos mov out xchg pop enter popf out bound xchg sub sahf push roll cmp adc mov cmp clc push jno cmp mov (bad) aas mov adc lock push rcr xchg cmp pushf pop adc push xchg js sti mov push sub push push ret push fs clc es mov enter sbb xor lods popa out push jne push loopne sbb mov pop dec shll dec add pop xchg xchg out add add mov test mov addl jle jmp mov movsl xlat inc pop mov push jae fist sbb lea jge cmpb movsl (bad) or pushf int inc xchg xor out cwtl sub inc (bad) aad sbb shll (bad) push or cmpsl mov jge jl inc roll rcll fildl jbe inc aam imul stc mov jp ds adc xchg sbb inc leave popa bts fbstp pop jns (bad) negb sub scas (bad) int add mov and out aaa loopne ret aas jns mov jbe fwait cmpsl sub idivl mov sbb outsl dec lods into and lahf out sub (bad) cmp dec into mov mov insb mov mov jmp js sbb inc xor nop fcmovnb sbb mov cmpsb cmpsl push adc mov fldt push daa inc lods push fstl movsl or icebp je pop clc in cmp pop in lcall (bad) sub sbb in inc movsb mov cli mov push push xchg (bad) in test (bad) jp cmp xor data16 stc ss pop jge aas ss sub ret movsb aaa loop pushf or push gs pop shl jl jl cli xlat imul inc insb divb push mov ficoml lods repz push in sahf lret scas fstp icebp mov daa fcoml bndldx mov (bad) in fstpt (bad) test loop cmp and sub sub (bad) cmpsl add xchg popf jmp pusha pop push mov sub pushf push jns fs call add popf fildll jle ret mov scas ficom adc jecxz xor mov cmpsl push ljmp or adc mov (bad) fimul mov mov loop test mov aas sub sub push (bad) xor (bad) pop sahf lea les mov rolb imul movb cli aaa leave aad push xor jg dec aaa mov cmpsb inc mov add jne push lret xchg jbe dec loop cmp mov addb xor daa das hlt in das rcrl loopne (bad) jmp lock xor jns mov mov inc inc xor dec pop aad dec sbb les and loope lret pop fwait jmp int3 mov jnp adcl jp aaa lret ss cmc ret inc repnz mov movb sub aaa and flds arpl cmp ja (bad) add dec sbb test fnstsw xor mov (bad) jp pop dec iret (bad) stc or or pop mov mov inc ret add push stos push xchg xchg add push xchg mov inc mov adc cmp adc fidiv xchg fisubrl push sbb out icebp test dec push (bad) fadds mov xchg loope sub lahf mov and aad mov (bad) fcmovnb nop (bad) popl push push push fwait push mov andl rorl pop dec test into out lea imul popa xor xor sub xchg inc mov insb sbb ja je jp jmp mov lds xor int cmc into lea into inc pop inc jb cmp int3 dec xchg pop (bad) je sbb (bad) enter xchg inc push push (bad) jo push insl sbb jle or int3 cmpsl fsubl jg (bad) pop arpl xor test inc imulb das mov push mov sub and jns push mov jg mov push push shlb stos sbb stc or cmc pop loop lods jae ficompl popa popa sbb inc scas dec loopne or pop andl push leave or push mov jae xor and movsl mov in call xchg in or push cmpl dec pop or (bad) aam fwait sub cld pop sbb subl lods dec out and lods (bad) jns and out mov repnz sbb pop mov xchg dec popa ret adc dec or loop mov popf xchg aad insl sbb outsl int push mov jns fidivr adc sbb xor adc adc icebp lahf in pushf xor aam sub mov jmp pop (bad) int pop mov fstps rolb cmpsl aam push pusha pop jnp fs fild push mov and dec cltd push xor xchg mov pop sbb or lock out int3 iret push xor mull idivl xor ret push stc call or adc inc (bad) lock jo lods in mov test push mov popf lods and xchg nop add js hlt mov loop cmpsb push les fs and add insb adc shlb in ds push fisttpll outsb imul lret out rdtsc fcom jo xor scas and test mov dec in cld push repnz js push mov jl lahf (bad) add arpl lcall sti idivl mov pop mov pushf loopne movsb adc adc test int3 (bad) imul lock mov adc push ss cmp pop adcl sbb ja lock fwait clc fcompl addr16 jl outsl inc fsqrt jge adc jecxz je mov cli movsl inc or mov mov lcall mov adc ja sbb lods push lock in pop inc (bad) pop inc xor jg insl testb xchg lea sbb push adc in dec jg insl jg mov insl cmp jae call sbb js cmpsl mov call lods push xchg fs push cmp pop lods icebp ljmp lea mov mov or mov nop popa mov lods lcall dec mov test and mov dec xor test dec (bad) loopne ret mov enter mov mov inc cwtl jnp fwait popf or dec mov and mov adc add pop popa aas int3 push sbb jecxz mov pop jae and xchg dec movsl or push ficompl ficoml rcl (bad) lea and jno mov push out mov (bad) fcoml and mov cltd lcall push (bad) and jl fbld push push xchg stos pop je ja icebp mov in cmc ds loope fbld lcall test mov lods xchg fisubl mov inc jns jnp push test jp bswap imul sub jbe xchg or cwtl jno mov rcrb adc mov roll mov jnp bndstx (bad) insl pop xor lcall jmp add test cmc sti mov ret test xor mov xchg (bad) in mov pop inc loopne (bad) xchg mov jno loop out cmc mov sbb mov int3 push lret test cmpsl pop xchg hlt mov test jp and jne movsb ret mov imul mov cs mov mov ja cld sbb int (bad) rcrl pop xchg addr16 movq or shlb mov ljmp pop pop mov jge daa icebp stos sub cmp xor dec ret xchg inc lds cmp jge cltd inc out cmp or xchg popa aam pop cmp orl aad pop inc and sahf add add js ja fwait sub cwtl (bad) into dec (bad) jae mov fsubr xchg pushf les push in xchg dec mov dec xchg mov xchg dec scas sub icebp out push loope adc (bad) loopne pop stos (bad) rolb inc loop jg fldcw sbb mov leave and and movsb mov xchg sbb xor (bad) jnp,pt inc pop test xchg pop xor int xchg xchg pop sbb cltd dec adc jae fcompl shlb mov mov lahf add push push rcll mov je inc insl nop push ljmp and sub mov je pop xchg pop or adc xor sti xor mov xor dec inc fist insb iret and inc cmp dec decl fdiv pop jg int mov cwtl mov or push push jge pop gs dec popl mov xchg mov aad and pop stos inc cltd outsl adc pop cmp (bad) int and sbb xchg or (bad) dec push xchg xchg (bad) pop sub out fwait jbe lcall int3 (bad) sub daa (bad) into sub sbb cltd mov mov enter xor loope push in sub or sub test adc and out add jle cmp out inc sbb cmp lods xor adc xor out pushf and push add push bound xor adc xor imul outsb sub nop sarb cmpsl xchg in jae iret pop mov (bad) popf imul stos push sub lea xlat outsl cmp (bad) movsb (bad) aaa mov jge pop decb mov mov aas mov jl leave sub pop xor sbb repz aas mov ss or adc mov push pop int3 popf aad gs imul adcl mov jno lcall test inc js cmp jbe or rcrb mov add popa adc push mov xor push ss ljmp push movsb xchg popa jae ffreep or sub lcall sbb push push fdivs jb stos das sub ret inc pop mov mov iret out popa movsb mov stos ret mov or test xchg mov sbb inc or ds mov xorl push insl test pop mov sub dec daa mov dec sub dec clc mulb cmc andl jbe ss pop rorl mov ds jg insb jmp cmc pop hlt mov adc cmp mov or lds int3 out mov iret stos ss xor sub xor pop push jne lret cmc push leave je addr16 lock imul lret movsb lahf xor cmp or hlt add adc lods ret fs mov xorl pop sar mov sub push (bad) pop mov ret shlb aam cmp fcoml adc lds test repz addr16 test cmp lret adc or nop dec fcomps mov fldenv and ljmp push in jae add mov js jns imul pop mov jbe lea into lcall icebp jge or jo cmp icebp insb aaa and cmp std xor mov or jge xchg mov mov push adc adc shll int3 int3 fdivl mov xor dec sub or mov inc xor sbb xor inc sar in mov test stc jno xor dec fs mov popf sbb xchg and jno dec jmp xchg mov dec jg daa xchg ljmp arpl inc pop xchg xchg dec fsubrs pop push sub mov mov fcmovne sub and dec jle test nop or inc clc test mov and dec es pusha push stc repnz shl mov test inc dec add fmull sbb jge jmp mov orb push stc testl icebp test push jge mov sbb fnstenv add pop adc inc (bad) hlt jns and lret outsl sub sub in mov inc jl aas push jmp and notb (bad) rcl mov and dec fldcw xchg sbbl xor je aas rorl out repz mov sbb ret test sbb mov pop jns,pn push repnz nop push mov mov pop out ficomp inc add sub test loop mov int mov inc cld cmp mov push scas popf add mov mov leave xor insb stc scas mov into add nop sbb xlat movsl jmp mov mov lock jae mov adc stc js or and jg xor add ret pop test (bad) out xchg push fldt add cmpsb push (bad) pop mov cwtl sbb ret cmp sub and bound xchg and pop dec add xor mov cltd aam hlt bound adc stos dec sbb es (bad) xchg dec mov sbb jnp in inc cltd push fwait (bad) xchg jae jo jmp inc sub stos sub fnstcw push insb jno or sub push xor sub fidivrl jnp jl lods ret push rorb rol lahf mov add jo lret or mov sub sbb out ja mov add push fildl scas and jecxz or mov push mov jecxz jnp je cltd sub and daa in mov fstps push shlb outsl jb scas jl push je mov rol or pop iret and jnp stc lcall jo add sbb lds mov test jge lret add pop and xor jo push jl (bad) dec mov aam push xor mov imul in jb enter or mov lret mov push stos add pop div dec outsb jl (bad) pop pop and dec jge cmp into adc fdivl addr16 (bad) imul test and inc aad or mov fcomp and mov inc jo jb xchg inc xor bound mov jle sub aad cs js (bad) lahf inc out lss pop out xchg mov cld xchg (bad) (bad) psraw pushf dec call sub scas les iret aad xor (bad) les adc or cld mov cmpsl inc popf mov sub je,pn push or enter mov mov sarl dec es (bad) mov sti pop sub (bad) xchg pop insl push pop lcall std stc lods call cmp mov jns mov pop add inc inc mov int cltd push jg cmc adc dec jmp cmp push cli loopne dec fidivrl sbb xor fsubr or pushf loope lods push push dec cmp xchg inc popf xchg jo (bad) push sbb dec fimull dec xchg mov mov das and lea mov scas stos dec nop pop outsb or jp dec sub sub repnz cli dec xchg xchg and push jle ljmp ss cwtl mov pop fcoms out jne xchg mov mov pop adc (bad) imul inc cwtl notl bound je in dec bound je insl sub cmp dec push pop jae pop xor inc les jg insb or xchg daa xchg movsl lcall sub js mov mov inc mov lret iret shrl push loopne fs sub jnp sti sub mov fisubrl enter xor mov lock (bad) in int3 mov sbbl xchg (bad) aam or cmpsl push adc scas mov and das lcall popf inc lret jl pop loop cmpsb insb mov push cmp jmp popf mov add push lds andl iret fdivp sarl (bad) mov fs pusha ret cltd mov sbb or xor mov test rolb lret jl and (bad) mov sbb pop jnp lea fisubl aad insb xchg js push cli (bad) lret (bad) jp add jbe je mov add adc adc xor dec or loop xchg mov xchg imul outsb xchg jb es jl cmp cmpl xor sahf mov jle xchg push (bad) or push jge mov or ljmp pop out sub xchg test in inc adc inc cmpsb popa and lcall addr16 xchg jl push dec mov xchg ja (bad) fwait addr16 call pop jae xchg mov pushf pop test or cmp mov sub mov cmp repnz (bad) mov lds aad mov pop mov je insl iret stos jno (bad) pop mov dec pop sbb lcall loope out lods xor dec jg sbb lea stc push cli xchg es enter aaa cmp pop add mov xchg add mov das lock push repz ljmp ljmp enter mov es call insb ret lock sub lds cmpsb push lods pop in sbb sbb xor sub add xlat mov jae rcpps (bad) mov push das mov mov jae test lock sbb jns in fisttpl and lcall (bad) mov adc inc aam sub pop popa popa mov mov push daa xor insl xchg dec push jno mov jle mov insb mov scas adc lods adc jmp mov jbe lcall test das xchg out pop cmp aaa xchg aam (bad) mov (bad) subb or and xor xor lcall mov fidivl aam fsts xor push adc sahf inc or stos addr16 xchg fwait sahf push lret push lods cltd lods loopne outsl jle cmp lea in sbb sub push sub mov inc jmp ds mov cmp mov dec xor neg into xor cmc fnsave mov cmova shl mov clc sahf out cltd mov loopne arpl dec mov mov mov test les or sti or scas insb popf jge int3 push or inc testb ljmp dec mov mov outsb aad in add movsl aaa push loopne xchg bound popf sbb das (bad) loope lahf add test idivb setae mov aam call or (bad) daa dec cmp push pop push lahf push nop push pop mov dec push mov pop xor repz pop xchg stc mov dec insl jo adc push jmp add or idiv mov shrb mov and xor sbb dec or pop sti mov fiadd mov shrb push in lahf rcrl and sub test push xchg ds jge jp xor aaa adc dec sbb push movsl cltd inc jmp inc lock mov int3 std push xor pop push adc push jne cmp add int3 mov addb enter frstor inc mov cs fisubrl rcll out (bad) fcmovbe out adc (bad) iret push mov repnz adc pop adc (bad) and cmp sub scas dec jg push arpl or sbb mov (bad) es fnstsw mov dec out xchg mov ret or loope inc bound inc int3 ret mov inc stos sbb sbb (bad) lock cmpsl and ret inc out fs fidivr inc dec loope dec push aaa aad mov xchg les clc push into (bad) insl hlt pop adc in jle cmp cmpsb adc lcall (bad) icebp (bad) jae push les arpl xchg repz mov jmp out pusha out jns stos lock out mov jne gs lret aaa loopne push cmp shll add xlat sbb dec push in cmc out in ret cld pop xchg loope roll ret subl movl repz dec dec adc movsb enter jns cmp mov jmp sti add jb mov adc mov out inc pop sti lret xchg dec cmp inc mov ret mov nop add xchg xchg int3 pushf mov scas fnsave jmp sub xor stos jecxz mov jb jecxz das mov pop cmp xchg fdivs addb popa ror into popf mov or or push fbld gs jae fidivrl lret dec jnp fs hlt mov add test push sti jns lret xchg mov loop mov pushf sub pusha mov repz shlb out mov lods adc lcall rcrb dec and ret inc dec sahf sub out aas inc mov mov dec pop dec pop ss jle pushf push sbb out fcoml pop imul insl adc cmp sbb jmp fnsave loop pop mov mov cmp jmp fisttpl addr16 rcl fstp bound (bad) imul jnp lock and and fidivr int3 popa push or mov jbe ds mov adc jnp pop xchg jae aam gs leave enter movsl sbb leave out stos cltd addr16 sub pop lock pushf lahf loope push xor mov aas incb cmc cmc xchg mov or jae xor xchg enter mov sub repnz movsb lcall in (bad) push xlat int3 aam int jne jle mov in mov pop in (bad) xor xor repz lea jmp test je xlat jmp ficom xchg nop xchg rol mov xor xor mov stc add mov jp sub mov int xchg mov adc pop divb mov scas push (bad) mov jge xchg xor sbb movsb sub mov jns je or imul xor (bad) sub sub sbb dec ret popa mov push jae push xchg push lds movsb pop mov push or into push lods xor inc lods sub loope andb push loopne pushl data16 pop out cs rcr cmp inc add sub (bad) mov adc sub (bad) cli push in or lcall call push (bad) mov cmpsl daa inc inc js les pop fnstcw loop (bad) lret inc pop movswl add scas mov add lret fadd add xchg xor xchg test push add mov rol add cmp and enter cltd insl xchg dec pop jo (bad) jae cmp xor xchg subl sarl pusha jle mov push mov xor xor jo setp cmpsb jb pushl jecxz sti test push adc xchg (bad) mov ret ljmp push xchg xor sbb cmove jae jbe and sarb stos xchg dec into jecxz push subl (bad) cli push or jle jge cmp loop fs clc xchg cmp stos in sub sbb lock or ret rorl xor pop pop aam cmc mov xor lods sar cmp push xlat pop adc ss xorb gs rcrb or mov arpl lret lahf lods xchg adc shrb jbe push mov mov lret pusha fcompl and jp jle lods jle add add in adc pop and jnp push pop in repz rcll adcb and push inc or ja mov lahf sub enter loopne jle lret stos cltd ja jnp shrb in andl outsb mov mov dec out mov in sahf arpl jmp mov sbb mov inc popf xor inc in cmc (bad) jg mov in mov lahf stc or iret fadds (bad) add mov add sbb add ret inc movsl nop jl mov cmc jl or icebp push aas sahf adc (bad) sbb in movsbl xchg or mov inc jno dec mov repnz sub push inc and mov rclb sub dec sub ret pop and ss (bad) dec push enter popa pusha lods (bad) shlb stc or lds cld int xorl pop xchg pop imul adc (bad) push inc xchg ja inc data16 push nop cmp lods scas das sbb sub and jmp push lea aaa unpckhps inc lahf push and push fs icebp das push jbe cld mov mov fs repz out add cmc pop inc test (bad) sbbl (bad) xor iret dec aas mov sbb js jbe sbb stos rclb xor popa aas insb add xchg add (bad) rcll or sub jle (bad) push mov mov xor ret add pop shlb jnp jecxz pop dec cmp jecxz je jmp pop sub push xchg (bad) and sbb cmc add mov or lods aas imull xchg mov add or ret and fist data16 xchg cmp lcall add sahf lock xchg in (bad) lret std lea outsl outsl mov adc xor jge std cli add and xor cmc xchg mov adc gs (bad) hlt stos in ret add cmp in shl adcb mov sbb mov into adc cld pop mov pop xchg ljmp clc pop cmc fcmovb dec jae in push shrb aaa xchg mov add push je lea pop push xchg xchg loop fidivr inc jno in (bad) mov sub je push popl fsts outsb mov (bad) addr16 es sbb std jle xchg add jmp dec adc add mov aaa jne or cld jl repz xchg sub and mov mov cmc divb (bad) imul pop jns mov in mov pop aad mov inc sbb xchg insl popf nop and imul outsl pop mov or push xchg enter xchg rcr mov out adc mov insb sbb add sbb int pop dec div mov fcomip adcl lds jecxz test ja cmpsl push das dec mov lret loop jo ljmp sub outsl loop add adc popa (bad) lret or rorl add pop ss outsb into aas fnstsw dec les loopne inc pop push jmp ss and cmpsb stos les mov hlt push cmpsl add loop iret and addr16 jmp sbb insb aas repnz (bad) jmp jl lcall mov sti insb xor rcrl sarb sahf push cli (bad) int3 mov pop mov jle,pn jo mov outsb rcr stos mov push jmp dec jp add std or stos jle ljmp push jb cmp imul xor data16 inc mov pop xchg jg cmpsb inc mov in xor dec movsb lea adc inc movsl mov (bad) mov jmp loope stos and xchg in pop or sub les sbb pop repz sub mov push mov fs js xor out lret lea sbb mov sub lret pushf incb das clc fsubl lock xchg pop test sbb insb pop or or test and inc jne xor mov dec adcb fildll mov push push movsl pop mov or sub cmp loop dec jne jecxz addr16 imul cli pop sbb divb cmp stos ret mov jb lock push out pop inc (bad) fadds std cmp cmp insb loope insb int ror (bad) jecxz loopne mov and insl pop pop lret xchg push outsl cltd lret rclb or mov sbb lea loope pop lret cmp outsl pop push mov sbb cmp push jp mov sub push or pop clc mov fstl inc leave out dec in aas mov fwait mov mov enter cs and lds cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz add (bad) add add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add jnp add add or or add or add add add pop or add add mull add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add cmp push js in xlat add mov mov cmpsl arpl mov mov movsb arpl mov (bad) adc xor push add cmp add mov jns adc incl fbld cli sbb lds add inc pop or out in or push and lcall mov pusha iret mov movsb and or movsb jge (bad) xchg push pop or mov push add (bad) jmp outsl add das cmpsb (bad) mov fldenv jbe add clc lods mov mov imull mov adc pop jns mov in xor xor sahf in mov out add dec mov call cmp push (bad) pop leave push test push lds and out xor pop mov sahf push or pop insb (bad) shrl and jmp or jge dec adc and bound jp scas sub mov jno xchg pop iret stc pop push mov inc sti jl call jecxz lock sub mov inc or push and cld loop dec into jecxz pop inc xchg jbe cltd mov dec or sbb out mov inc aas xchg popl jge in call jge add add popa mov rcr mov cli clc inc subl insb mov jmp js cmpsb std aam movsl rolb fnstenv mov jge fwait ljmp repz lods jg xor roll das rorl xor push in mov push pop popf test pusha mov in xchg call xlat imul mov inc push add mov dec push sbb jge sarb jmp insl sti aas (bad) lret xlat mov sub adc adc add sahf and loope cmpb jg xchg subb fisub pusha sahf rcr daa mov pusha inc push mov aad mov pop loop push cmc xor jno lret xlat faddl push xor mov (bad) insl cltd jne xchg popa out into jge xchg daa les jno lea dec aas xor ljmp adc wrmsr pop stc das xor jl jnp adc int3 pop lods xor xchg or stos gs mov push loope pop in popa jg and xor jmp stc xchg rorl ret loopne mov pop mov pop icebp jbe fildll imul in mov pop gs hlt inc rcll scas addr16 jae or xchg pop bound sbb xchg push push pop pop dec sbb popf cmp mov sub sbb inc fcoms (bad) lea imul in out mov mov jecxz inc sbb mov (bad) pop rolb lahf mov or sbb pop mov dec cs and not insb lcall movsl adc sti xchg push popf int xchg push sahf add and lret xor dec mov fcompl test push (bad) aam inc lcall hlt loop cmp enter jl sbb cwtl fnstsw out pop adc int je pop in sarb xor loopne out lret mov stos dec js (bad) lods mov arpl sti mov inc sub shlb xlat cwtl mov sbb out xorl (bad) fnstsw and aam outsb fstpt lods mov leave mov jmp dec inc mov jle dec xchg pop cmp dec push inc loopne,pt pop or mov or bound mov sub jge xchg movsl arpl loop or and and icebp ret fs mov mov dec push mov pusha outsb cmp mov mov lods xor cltd fsubrs test iret mov test cmpsl sbb xchg mov mov sbb mov and subl mov mov (bad) cmp or in push outsl movhlps and inc addl dec loopne mov icebp or cwtl int3 or push inc aas dec lods xchg mov aaa pop js push sub test pop add aam sar mov sub lods sarb dec sub (bad) jmp or adc jb mov movsl js jl adc outsb xor dec pop sti xchg (bad) sub (bad) notl mov jmp xor dec in popa or jo sbb lea test stos push adc test loop xlat mov inc inc in fidivl mov mov movsl hlt cmc js (bad) mov cld sahf in adc (bad) pop loopne not add aaa test dec inc test add push cltd xor push sub sbb jno pop pushf mov sub imul roll ss xchg push pop sub mov push sbb dec rorb pop dec in cmpsl cld inc pop and fs push divl xlat inc andl or popf cmp xor das mov xchg push cmp adc jp jo push ja cvtps2pi sub dec out pop mov lcall or and call add fcoms sub sub call sbb push mov adc cmp xchg test jge adc mov pop sub (bad) ljmp sbbl cmp arpl pop jb into inc mov (bad) faddp xor xchg flds incl xor out arpl cmp dec dec cld inc shr xchg test cmp lret rolb sbb sub rclb ljmp xchg insl clc xchg jo outsb mov add xchg out dec ret jnp adc iret stc popa adc mov mov (bad) mov cmp fdivs inc enter and pushf in imul cmpsb movsl (bad) icebp sahf push inc das popf mov adc ret aaa push pop pop push push push or cmp cltd xor cmpsl mov cli inc adc cmp push and mov or call add in push iret mov mov popa sub sbb leave cmp pop pop cmp stos inc repz leave mov cmovns jg (bad) inc inc cmc mov fcomps or mov push push xchg in outsb call mov js out stos or mov lea cmp xor jne jmp ja mov aad outsl lock mov jb adc (bad) lock rcrb clc mov add ret leave mov movsb mov into or mov pop push sub ds loopne sub add leave mov stos (bad) lock lret in jle xchg add mov cltd loopne pop push dec fidivr pop pop pop cmpl sbb loopne jae das lahf lret jno sbb or shlb and push pop shll movsl dec mov inc or std ds cmp imul pop adc mov (bad) push ret cmp inc mov loop ds sarl lahf and into orl jnp cld jle ffree std push push push stos in push pushf jg ljmp mov hlt pop cmp mov (bad) sbb jo xchg or and adc lds imul inc xchg aas out xor inc cmpsl mov in jp into int inc fdivr dec fbld xchg mov outsl push aaa mov (bad) xor adc out cmpsl sbb out test cmpsw push lahf sub ret lahf (bad) mov or lea mov pushf sub rcrl pop sub or aaa rol es pop and lahf mov adc dec mov mov sbb xor pusha lods push (bad) jne jmp ja jmp sbb inc xor xor out imull or or out xchg ret cmp enter mov les lcall cmp pushf mov and mov repnz cmpsl les stos jecxz mov xchg or in mov call dec test aad xchg pop cmp cmp idivb cmp push out addr16 (bad) insb pushf push mov ret mov jg scas jne js pop xchg push mov fadds add jne lods stos mov inc stc in jl ficomp jl stos or mov aad bound xchg xor leave (bad) pop scas xor arpl jbe pop push movsb insl mov xchg mov neg ficompl jmp int adcb fdivp push paddw and dec push lods loopne xor cmp adc test xor ss sbb out outsl jae stos std leave pop (bad) loopne adc ret sub xor loope dec inc fwait mov scas stos add dec ja jbe or arpl pop xor ret jl dec in jg jmp xor dec iret hlt xchg pop mov mov or js sub nop das bound sbb jge fs scas push (bad) sbb and cmc adc or rcr mov jne ljmp hlt loope dec and sbb inc xchg mov pop js jb in ja mov pop cmpl sbb call addr16 movsl in mov (bad) and mov out xchg add dec rcll scas lret adc push xchg lcall push and (bad) xor aad movsb and popa repz jno jbe fs push inc cli shlb push gs mov daa jnp cmp ljmp (bad) repz dec lret out outsb jge sbb inc mov push les add cltd pop mov loop lahf cltd fsubl mov fistp sbb jmp push outsb push loopne repz jns jb test out add in sahf jne sub pop push dec (bad) mov out xor and adc sub jmp jmp jb fistpl add lock cmc movsl sub push rcl mov test adc inc call lahf adcb cmp mov (bad) lcall hlt jno push jo les or or repz testb jbe dec cmpsl stc cli jmp mov js icebp mov jl jno jns loopne lock mov add roll bound sahf sar cwtl adc fcoms lret xor xchg repz push jo sub stos pop sub je cmp (bad) lock pop testb push sbbl or adc jne fcompl push xchg imul sarb pop ljmp xchg jbe mov and (bad) mov daa test nop dec jle sbb stos jmp cmp sub cmp mov dec dec push xchg pop sahf or pop add lret sbb push pop fnstcw cmp push and dec stc mov sbb out dec fnstsw stc std divb lahf les sub aas std fs jge je pop lds cmp adc or test test popa ret (bad) std add pop and push push pop mov mov mov (bad) stc and (bad) adc cwtl dec mov xchg enter sub xchg out (bad) cwtl sub (bad) incb push inc inc negb ja pop xor cmp test push enter pop les (bad) cld lods das rcll repnz pop lods aaa outsb sub sub inc jge mov add test lret in nop inc add icebp mov (bad) pusha cwtl push sub gs in adc addb mov (bad) mov sbb or fnop mov out in adc mov mov mov rolb or stc cmpsl (bad) (bad) xor inc mov cmc xor fwait xchg cli daa jp adc stos (bad) ficompl xchg test cmpsb mov cmpsb pop push rolb mov xchg test cmp cmpb shll movsb (bad) arpl adc mov pushl adc dec mov cli jecxz xor adcl add mov push fcoml jb hlt cmp push adc les push mov cmc xchg lea mov pusha dec roll (bad) fnop daa aaa imul xchg mov int3 inc cmp dec push dec mov sbb dec shlb inc or aaa adc mov cmpsl stc dec add (bad) inc xchg cmp push mov ret orb movsb stc enter or mov enter inc and sahf cmpsb push mul out xchg xor (bad) outsb pushf cs push push int3 add shll nop les pop and rcll or cld nop mov sub cmc jge mov sbb popw xchg sahf push dec rorl in adc push adc popa test adc lret ret mov ss sbb stos cmp je or sbb repz xor into adc imul xor add adc inc push rcl inc fdivr jmp lcall cmpb xor dec inc out or mov sub pop lret jecxz pushf mov mov add mov in pop adc (bad) imulb cli and pop and lds cmp mov test fisttpl loopne sub push dec jl pop xchg addr16 pop bound addr16 xchg push imul cmp imul jbe adc shr sub add cmp mov shlb out cmc xchg sahf imull mov pop pop aas popf push sbb insl mov int3 mov pop sbb add insl (bad) fsubr sahf jno adc push xor sbb xor inc sti jne or mov or cmc (bad) loop add sar movsl dec lret jge movsl fistpll pop loop aaa cs cmp jbe loop ret insb inc jp fisub xchg sarb adc mull jmp (bad) jb jae pop cwtl loope roll out outsb cmp fisubr mov mov gs insl cmp dec in (bad) popa into push negb dec test rcrl sbb pop nop pop sti addl and and in rsqrtps in inc stos popa jecxz aaa cmpl mov stos out aam (bad) xchg mov sub jge sbb arpl arpl push repz mov pop rolb and push sub jg cmp js,pt add aam nop insl and imul cmp lcall scas xchg mov repnz pop in push data16 or mov loop aas outsb test dec int mov mov (bad) jg enter sub test jg das push inc je sahf mov cmp test pop call jl pop or adc sub outsl jne imul jmp jge out sbb fwait mov sbb push loope scas mov aaa push mov add push mov das inc cld xor sarb sbb ljmp mov sbb out stos daa pushf add dec sbb pop mov insl rcrl je ds push jl outsb add dec pusha ds push xchg rol aaa aaa mov inc int inc pop mov (bad) out lret mov dec sub mov mov mov insb cli int mov imul cmp mov pop push mov mov or sub dec in jle jle mov jmp cmp lods push xor adc cwtl lahf in mov sbb movsl repnz dec xor out jmp faddl sub lahf nop in xor mov pop scas mov inc ret ds pop sub scas and sbb sbb pop ja nop or lods test mov cltd jecxz lcall divb push testl or stc and cltd adc pop sbb dec mov pop fnstcw fstp mov cmp mov insb repz cs cmc (bad) mov scas ret test push int3 stos mov xchg sbb (bad) mov mov sti test aaa or and cwtl pop rcll xchg lea call lea xlat bound cmpsl subl test sbb inc out mov and lods xchg pop cmp pop mov inc push jo (bad) sti xchg or add scas (bad) push int3 mov mov rolb mov les nop test in jl and adc xorl mov or cmc jecxz sti pop sub adc push and mov rep xor and and test mov pop mov cmp test shrb aaa xor mov arpl cmp push sbb call in aad out aaa rcrl xchg sbb outsl cmp mov sub jns mov daa jne jns lea test cltd sarl rclb negl es add push add jmp fwait data16 cwtl pop xchg ret or sub mov imul orl fs popf cmpsb popa lds fidiv sbb push mov push mov data16 lock std outsb push jnp shrb cmpsl stos pop and (bad) stos mov dec mov push pop and mov int lahf xchg pop nop xor test shrl loop mov test xchg push jbe push xchg adc dec pop fidivr (bad) fstpt test call js bnd cs pop aam add test cli pushf cmp inc push push jg jecxz int andl (bad) pop add stos jbe (bad) sti lret add sbb aas mov cmp test pop es cwtl mov push jl sub cltd mov mov adc daa fisttp and (bad) xor sbb ss outsb mov jnp cwtl add and jb jl fnstenv and in bound hlt jg,pt mov dec ss adc mov pop or imul sub insl mov inc push outsb cwtl mov mov movsl in popa pop mull ret (bad) ss cli sub bound mov add into lods and xchg push nop and sbb loopne lods mov fnstcw fucomi or lret pop jge pop les cmp xlat fs mov cmc int add stc push imul cmp pop fidivl mov cltd jge in mov repz test das test pushf sbb arpl cmp xor (bad) pop (bad) scas or xchg or xlat cmp aaa jae mov std lret loopne nop and es sbb add mov or pop cwtl pop (bad) (bad) lock fst test call ret clc jmp out cs dec jmp rcll and mov cmpsb push je jp sti sbb leave aam insl xchg inc test stc out sub inc test pop jecxz decl loope call aaa scas xchg mov cmp ljmp jb adc and out xchg pop dec push mov inc add cmpsl leave mov sub ret pop cld mov jg (bad) xchg sahf dec inc sub mov jp xor cmc jmp jl lock lret iret and xorl push dec sbb jge insb rcr cmpsb rcl mov aas xchg movsl mov sub xchg xchg sub pop imul (bad) out jle cmp rcll add sbb icebp daa xchg inc popa cltd sub clc sub mov or in ret (bad) inc add cwtl les push adc in sbb xchg xlat repz ljmp movb or popa xor in push adc push out sar in sbb add sbb mov and dec (bad) mov into adc cwtl loop xchg jmp push imul cmp push popf jp (bad) push mov cmp inc xor or fucomp int3 (bad) add lods sti pop sarb loop sbb ljmp mov dec dec mov into sbb pop and (bad) loop push add mov mov dec popf dec movsl es ror sti out repnz push fsincos loope hlt pop (bad) std push xchg repnz or mov mov mov xchg adc aaa and jnp add ret (bad) sahf xchg push outsl clc loopne add popa fbstp shl add mov lock push fmuls xor enter out jae jb and fnstenv sbb and pop adc lds pop mov movsl push mov mov sub add push inc nop ja jl jae lds into movsl lock jns outsl xor hlt ljmp je ss sbb and loop pop cwtl push pop add push sub pop inc dec mov xor mov loop sbb adc mov repnz push push ds jne pop jae jb call cmp or add sahf mov pop (bad) rclb xor mov add (bad) stc dec mov push add fbld fbstp jp jno push into lea test ds sub xchg sub out js lcall fsubr push scas data16 xor xchg gs outsl push dec aaa cmpsl add fcompl and orl cltd xorl add sbb outsb lods pushf in ret popf enter outsb repnz dec or test sbb enter loope stos cmp inc daa cmpsl mov in lods fwait cli xor mov push add and out stos ja jo dec mov push sub push lahf lret cmp jo ret gs int3 pop hlt pop jo popf fstl jle and cmp jne mov cs stc dec adc add push addr16 xchg and das mov jns inc sahf xor adc mov je xchg ret mov dec jns int3 mov and insb gs mov jnp cmp hlt (bad) (bad) push add pop ljmp add and sbb mov push or fcmovnb sbb shrb jne push sti fcoml cmpsb jns pop xor loope adc lahf (bad) lret cmpsl (bad) out mov mov push xchg idivl cltd sbb daa loop sub popa pop out pop fdivr vcvtsd2si mov repz and scas push and in arpl adc mov xchg fimul pop xlat rol cli xlat jnp jp add inc imul ja xchg fwait or sub out xor repz sarl aas push lret push xchg fiaddl scas xlat dec aam cmpsb (bad) and xchg push cwtl adc sub xchg sti and mov dec in and clc fisubr pop sbb adc mov cmp aas xchg shlb inc insl (bad) xchg movsb xchg sub adc add lods pop dec and andb insb adc xor sbb mov adc xor adc lret lods inc cwtl outsb lods and mov ret fidivr insb repz mov cli jb out div imul xor dec mov or adc xor sbb icebp insb push out xor js adc inc in adc jnp sub repnz daa mov insl out xor jp xchg cmp movsb outsl sub jp mov xchg sbb movsb dec fiadd push fmuls ljmp in pushl lds cmp push add std fstpl sbb lds js stos mov idivl popa fldl loope add push std sbb push cmp cmpsl sti arpl fsubrl push pop jno and sbb sbb (bad) je (bad) cmp fisttp lods aaa push mov mov mov adc or xor (bad) sub dec jae mov cltd stos dec dec adc mov repnz xchg movsb sub stos or and xor lods mov std and jno push cmp fnop inc das cli push out iret jmp push xor inc xchg ffree cs out mov arpl jns test mov decb pop mov pop fidivl shrb and lods insl dec cmp sub lds daa xor out test divl or push cmp ja jae dec ljmp (bad) mov loopne movsb leave je add insb xlat pushf aas dec inc bound sbb lea inc mov pop mov dec mov ljmp pushf add push in mov lret ss (bad) xchg push xlat jg nop adc call cwtl repz bound xor push fmuls xor stc out loope adc add jecxz (bad) ja insb jmp mov fistpll inc gs push (bad) mov in inc mov addl outsl xchg (bad) es mov push repz pop jae pop mov in aas pop ficompl aas rorl and aaa mov push jo rol dec jo mov enter sti ds xchg js fcompl les push push adc aaa push roll ret push bnd imul fidiv mov movsb jmp int3 rcrb lea xor xchg leave es cld ret out dec (bad) mov gs mov xchg mov jbe mov icebp andb sub dec test cmp jno sub (bad) notb aad ret (bad) cli rcrb mov lcall pop arpl sbb in or (bad) test sbb and jmp hlt adc sub ret cli aaa test cwtl inc sbb mov cmpsl xchg fidivrl jmp mov pop jmp inc or fstpt cltd xor pop daa mov fdivrs inc sbb xlat fmulp adc iret mov lods xor inc add pop push sub cmc xchg aas cwtl pop ret in fwait xchg lods mov mov and xor out xor push jl inc ret sbb add out notb outsb insb xchg daa mov cmc mov or inc add out xchg xchg imul stc push pop xor push xor fcomps loope pop sbb pop inc mov out mov mov inc cld lods push xchg mov push mov (bad) jb scas mov out sub iret or movsl push and popf sbb jae lods loop adc fimull cwtl xchg (bad) lock xlat pop leave std mov add test push pop fnsetpm(287 imul xchg insb movsb cmp fstpl lret mov push mov mov push inc mov pop sbbl stos cmpsl xor cmp (bad) dec ljmp dec adc push ret xchg (bad) adc adc loope pop lock xorl jo cmpsl dec sbb push adc pop fcomip (bad) ss sub popa mov or cs test insb arpl or lcall sti enter mov mov lods shr data16 add xchg sub test gs lds xchg sbb ret sub xchg das jle sbb xor (bad) movsb inc leave (bad) scas and rclb int je xchg (bad) dec int3 js lock ds dec (bad) sub jbe movsl or adc test testl inc cmp (bad) sub or mov in adc push loopne (bad) xchg movsb lods insl xchg push ret adc daa test sahf cmp or jnp test ja sbb outsl ljmp and in xchg or sub lret sub xchg cmp and stos cs imul ja dec mov pushf pop int3 and pop cmp jg test push mov sbb call ds jne adc pop (bad) or push sbb pop mov rcll push lods fwait ja ljmp jo dec loop mov jmp mov jb pop pop push fs cmp inc cmc popa pop lret cmp adc loope cmpsl pop fs dec scas pop xchg scas mov sahf sub pop test jl dec call lahf add stos cmpsl sub mov cwtl lea popa lods shrb decb aad aam in popa fwait xchg jae mov mov test pop ja (bad) xor sub pop into movups mov mov sub adc es rcrb cltd mov mov adc inc mov loope and (bad) cmc mov aas jg movsl (bad) push jnp jmp jecxz xor mov or jl adc int3 and mov out cmp xchg dec loop xchg sahf jne ret jne jg jle mov ficomp dec loopne mov andb push mov add xlat cltd or in adc arpl or dec das push leave inc mov and (bad) mov mov pop mov mov inc out ret cmpl ret jle (bad) mov xor cs mov les ds lcall push insl aam sub xor orl fwait jne int gs cltd push push fucomi xor pop or and leave es push cld stos dec pushf int jp int3 mov and aas psrld mov or mov gs outsb subb cmp or cld dec test mov push lcall mov test jno dec pop add sarl cmpb fstp dec push mov jns xor sub out fcompl jmp mov in scas xchg mov sbb (bad) loopne jbe cmp and and xor add pushf cs mov movb sub out lret mov mov call xchg push and xor mov or xor jl out inc (bad) mov mov aaa out pop push std xchg or sub sti mov js test and dec in xor je loop sub mov aad jecxz shrl mov pop imul dec adc mov hlt adc add clc or inc jo mov mov (bad) inc cli imul and mov inc or xor gs mov cmp dec xchg push aas cmpsl arpl daa xor dec jo mov (bad) pop push or jns jnp xchg adc shlb and xor scas xlat sbb rcll repnz inc dec push pushf test push outsb push cmpsb pushf pop cmpl lret cld mov dec dec mov jnp inc arpl imul cmc daa movsb push mov int3 add in dec clc xor or add or push or xor out jae mov out pop jb ds or aaa xlat cwtl call repz xor inc xchg loopne aam (bad) test ror xchg test xor mov (bad) dec jmp enter insb aad sti sub (bad) insl cwtl andb ja fcoml std fcmovnbe jne incb out repnz push out imul les add dec jo ret je icebp push lahf jg or cmpsl push jno xor mov mov out mov push icebp xchg rorb lds pop mov mov repz es mov enter mov lahf xchg adc outsb cmp (bad) idivb aam subb (bad) mov add ret push call lcall hlt add mov or adc popf cwtl scas jb gs xor test mov cltd mov sbb sub pop push jo mov pop push and outsb das lcall icebp arpl inc (bad) imul inc adc out push cmpsl ss pop xor adc inc pop and xchg fsubl mov outsl mov cmp or aas bound jmp add add mov scas push mov cmp jo add mov aas pop loopne fwait or negl or and pop mov push pop popf mov outsb push mov push mov mov loopne mov fsubrs mov rcrb inc (bad) loopne daa push push les mov popa cmp sbb pop jne popf xchg xor xor inc cmp cs push jo or or addl insb cltd or std xor push sarl and inc mov sbb jp jno je popf insl aas dec jmp es cli mov dec ret push cld mov jp and mov shll push sbb es xchg or pushf lcall xchg add sti sbb adc sub or cmp loop add xorl arpl mov push xlat jp hlt jecxz cmp test and push imul scas gs sti cmp insb adc jp stos lahf addr16 xchg bound or aad lea or mov inc inc mov imul sbb daa (bad) sbb pop inc xchg es gs jp jno ljmp sub fs xchg jecxz int cmp shll xor ss mov sub test inc pop adc mov loopne pop imul test idiv mov test inc lret xlat daa mov dec inc stos and and cmp sbb inc fnop lds dec pop dec cmpsb mov daa and mov inc xchg arpl bound mov imul in and pop jnp add mov clc (bad) sti out aaa mov stos nop inc std (bad) pop repnz cld mov clc or sub add pop fucomp aas dec mov inc adc pop sub mov jl orl or fild out xlat mov or aaa aas ret lea es mov cmp mov add loope scas subps (bad) fldt cmpsl aaa jo sub gs cltd scas loop,pt xchg sbb test inc addr16 or adc adcl jb sub inc imul and pop arpl enter push lcall xchg fnstsw rcr push pop popa sub in mov push sbb fdivr fucomp out aad aad fidivl mov (bad) push js xchg stos cmp pop mov xchg sub mov mov cwtl inc pop cli icebp adc sbb bound xor jae in pop test (bad) add int mov or sbbl scas xchg xchg clc fs test mov ljmp ret into stos in xchg repz sub das shrl mov in (bad) jp scas pop imul ljmp mov cs fs jno xor mov cmp push mov or push jg,pt mov xchg and add pop xor fsubp sub mov jb in std jo mov out cmp call adc mov addb bound push mov cmp jno push push and orb xor les out xor add outsl fmul scas js mov mov mov imul xchg sbb loope adc or lret loop fs or sbb xchg repz jmp stc add leave leave add ljmp mov pusha ret push xor mov popa mov sahf out mov popf sub or jl in mov mov mov cmp jecxz jbe rdmsr iret xchg clc aad fdivs push outsl cld mov in repz dec xor outsl popf and scas cmpsl sbb ret lret fstps outsb outsb outsl (bad) fidivr lea sbbl push stos sbb xchg lret dec popa sub jp sbb mov push lock test mov out xchg in or addl subl enter adcl jl outsl mov sahf pop xchg fldl add xchg cmpsb jno add adc mov and mov pushf pop lds enter mov push lret scas push mov das mov mov mov rol lods push cmpsb dec lea outsl sbbl mov addr16 xor or imul pop (bad) cmpsb pop adc lcall mov pop ss vhaddpd out lcall xchg mov push repz lea mov push mov ja push push insl out lods cmp adc add add jne jo push fisubl out dec ds ja add xorl leave sti test scas mov rcll and and jecxz nop push ja mov shrl adc sub aas sbb jno clc and es push inc inc sub push pop or jbe mov shrl into xchg lock sub push jns fmull xchg int3 ss test mov fadd sbb ljmp cmp (bad) in pop pop cmp sbb jo out xor mov call push pop jae or and mov dec inc jp movsb dec decl or int3 jbe push jbe add mov pop pushf cs adc daa insl pop sbb cmp push (bad) dec inc cmp xchg sbb xchg std fbstp aaa fiadd adc push mov adc les mov int mov gs loopne,pn scas fadd cmp jae cmp lret mov fist enter add fmulp (bad) jo fnstsw mov int3 or mov lock lret addl pop mov aaa sub retw and loop cmp jg mov inc adc imul loopne jnp inc push cmp adc data16 fisttpl push (bad) lret leave rcrb popf test jae lcall (bad) aaa lret adc xchg mov sub cmp push add mov aad adc pusha fcompl mov das gs fldl2t xchg mov cmp ret adc (bad) gs adc push mov aad dec add xor outsl mov (bad) ds fist xor ficompl mov cli mov fcmove adc sub xor mov sub xchg (bad) lcall daa imul rolw test (bad) and les lods and jno xorb mov ret ljmp inc xchg dec xchg fbstp cmp movsl (bad) push fmull out mov cmp mov es push inc pmullw inc (bad) out xchg add (bad) lahf adcl pop push jg xor push repz and ret jecxz inc push pusha adc dec outsb pop mov and enter inc mov pcmpgtd xchg cmp inc pop fwait sahf rcrb arpl or inc js cmp dec vpcomw inc cmp mov jb jae xor das lahf ja sbb cmp loopne xbegin aam outsl ja pop cmp fimull cld mov mov pusha mov fcmovb lds arpl push data16 insb mov shrb and and jns cs mov inc mov adcl sbb call insb sti mov scas fs mov mov (bad) mov and jb sbb imul dec stc mov loopne mov icebp xchg (bad) xor mov or ja testl xor jecxz clc sbb cmpsb call push fwait sbb dec sbb jae les into cld mov mov outsb xchg add xlat popf cmc (bad) loopne aaa add dec and shll lods jae dec aam xlat or sub mov ss mov lds in pop inc cmp sub in or add sbb fs adc jbe mov or into inc mov int3 lret xchg idivb push ds rcl hlt add fiadd adc pop mov push repz int int3 adc dec jnp add sub mov imul xor lcall movsl aam dec lret xchg push leave popf (bad) lret cld push sub test inc sahf fnstsw lahf daa in nop jbe push mov jno pop cmpsl push insb clc mov cmp scas ljmp push jae xchg sub and ds cmpsb add dec cmpsl mov (bad) mov sbb leave ret cld insb push repz dec lea jnp cli add jb not xor sub (bad) cmpsb popa xchg add popa cli mov out push andl int (bad) mov ja movsl push jecxz push addr16 pop rorb mov cmp test sbbl rcll sbb iret xlat pop xchg (bad) push outsb test cmp cmpsl daa push mov loope decb aas pop push pop dec jge push cmp gs pop mov mov popa xor mov jns pop scas xor out fwait or movsb jge xor data16 inc sti les rcr push sub sub mov mov adc dec inc mov fwait (bad) jbe ret test jns imul bound fwait in hlt jg loope pop jecxz enter sti mov mov test xchg inc xchg test jg outsl imul lahf in out aam mov (bad) fistl inc inc imulb out sbb pop scas out xor dec imul lret cmpsl xchg xor lods pop addr16 ljmp je insl daa mov xor scas (bad) cmp imul leave ret pop sub mov std xor dec jecxz push pop cmp rcl adc aam sti icebp in out adc ljmp mov test jno dec mov adc fisttpl push adc (bad) daa mov mov jmp pusha adc sbb mov cmc imul (bad) gs (bad) leave addr16 xor mov fidiv pop incl jns mov push or aad sbb imul ror outsb out mov pop pusha std jne mov xchg lods jl mov test mov neg add jae scas ja adc jns enter sub mov push cs add loop add fidivl adc gs sbb add pop and inc sub sti mov inc (bad) mov (bad) mov scas dec (bad) push sub pop or mov lds mull fnstsw pop mov cmp stc push pop lds lcall mov adc mov mov push fldl xor pop xchg sbb pop inc push mov sub out stc pushf mov inc push add pop mov jns jo dec call icebp test ret js fmull je arpl movsb imul pop in aas cmp cmpsb cmc das stos jne cs sub adc jnp fidivrl cmp and pusha lahf rcrl sub inc inc in ret cmpsl kxorb dec cmpsl hlt dec mov lods fist mov lcall inc dec push push bound es cmc ret cs adcb dec call pop jo sbb ret in push sbb push (bad) es shll xchg xor mov fwait jne xchg and ret ss cld mov fwait jge dec movsl rcl incl into imul adc sbb cs gs cmpsl lds mov aaa inc imul aad sar ja jmp mov mov cmp in in aas xlat xchg leave cs jmp adc inc sub rcrb and inc sub push inc test lret push cld js es fmulp xchg push mov pop mov sbb pop aam cmp dec jle ret fs lea pop or fnstcw fisub xchg and test and and fdivrs dec cld (bad) cmp jmp mov and pop inc lahf insl cmp jp sbb mov xor scas jle or or and es adc test sbb xlat cmp xlat add jmp mov jecxz sub pop xor stc lret add test and lds xchg fidivrl vminps into fucomi sbb cltd repz imul push pop sub inc les repnz movsb movsl xchg dec sub cmpsl imull and mov mov stos jg testl in test adc rcll sub cvttps2pi add and push pop leave lock int scas fildl add xor xchg rol add dec cli pop and into imul push fiaddl scas les pop pop sti (bad) pop add ljmp mov cltd or mov sub addr16 mov cmc inc mov lods sbb imul dec imul add das scas lods inc int3 pop push cmp ret lcall mov and repz push fnstsw inc pop push and push jmp cmp mov sub and pop stos (bad) cmp fnstenv jmp inc lods mov sbb mov arpl in insb pop mov pop push cmc cmp cli fs sbb pop arpl aaa cwtl daa inc es inc out fcoml xchg cmpsl jbe pop cltd push fidivrl ret sbb dec mov push sbb faddp push inc (bad) cmp fdivs (bad) fmuls fwait ret xchg in jecxz ds inc aas lods or ret stos add je jmp push mov xchg cmp push call inc scas ret sbb (bad) lock arpl ret and stc popa pushf ds insb xchg repnz mov les rolb add stos push push or sbb (bad) (bad) dec stc dec mov icebp xchg lret cli sbb ljmp lds mov ja xchg lea adc test dec scas sti imul pop sbb mov mov xchg js push pop xor or mov xor push and lahf add std fldcw push pushf sbb dec and lret push push mov jle popa andl sbb or pop jecxz repnz lcall and sbb inc pop mulb mov cmp cmp pop jno shlb xor iret (bad) aas pusha or stos es xor mov or rcr adcl or aad sbb jp jbe cmp hlt test mov lret popl sbb sbb sbb cli mov mov and test jp mov inc dec sub mov es cmpl jne insl and in mov out pop fwait xlat insb repz mov push mov movsb mov lret test mov ja (bad) push adc xor sti and stos into or enter mov cmp repz out cli loop cli in (bad) mov push gs neg shlb jnp and mov pop adc sahf in inc div das test pop stos pop adc mov mov jecxz jne push in sub repz mov out sub mov inc jl pop mov push popf xor xor nop out sbb mov add xchg lcall lods lcall ret repnz mov sbb and sbb dec loop xor shrl cmp and fcomps cli fimull lock mov das inc dec mov ret add xchg xchg hlt sti jo je cmp cmpsl and pop fsubr jge lcall cmp aam xchg loope fwait push mov imul mov and icebp clts (bad) add out lcall fisttpl or int3 inc inc xor test cmp or jmp jbe push cmp aas (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz lcall add jg add fcomps (bad) add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add jns add add or or add or add add add pop or add add mull add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add cmp push js in xlat add rclb mov (bad) insl (bad) fucomi sarb clc xor add push jnp add add nop inc pop test lea jae,pn (bad) jno mov fcmove test inc test xchg sub cmpsl cltd cld mov sbb sahf xchg adc mov xchg aad arpl call leave xor popa inc movsb gs and pop add and xchg cmp push cmp cmpsl dec lods xchg sbb (bad) imul mov mov jne pop pop add outsb mov test lods popa addr16 mov lea and xchg out popf xlat mov sbb fcoms mov adc mov push gs push into or subb gs int3 cmp add cmpl jb mov fs sbb test pop sbb push jecxz mov daa pop leave stos push dec gs rcr fsubr inc inc test dec add arpl xor cmp jb xchg push test imul dec push outsb (bad) cmp pop dec popf inc dec imul cmp out (bad) out jge or ret jmp and mov je mov lock pushf xlat aaa (bad) jae xchg (bad) sub sarb or or ror or pop in pop cmpsl je push and dec (bad) push mov mov insb mov stc dec sub mov xchg xor ljmp imul dec scas out lret roll out xor or dec mov pop rcll rorl (bad) (bad) in outsb mov sbb popf and cmpl in or mov lock pop into stos sahf push mov repnz insb lock mov add test out xchg inc aas push sub cwtl (bad) mov das add pop cmp mov dec cwtl ds pop clc stos lods dec in out addr16 unpcklps mov out mov pop xor js xchg or insb daa js jmp mov loopne pop imul xchg jmp lods pop outsl inc (bad) mov out cmp inc xchg pop adc add int push je jl and mov flds pop pop push mov pop repnz xchg leave notb sbb (bad) (bad) addr16 inc cmc mov add xchg aad mov xchg daa pop push icebp push push adc sbb mov out cmp xchg sbb je aad push jbe mov xchg jno push xchg add stc stos adc int jae cmpsl pop cmc mov xchg je mov fisttpll loope and fsubrp out inc addr16 push adc jae mov out loopne xchg cmp jae in mov hlt pop shlb icebp loope xchg and das and loope mov mov fistl aam inc xor cmp cmp xlat push data16 pushf pop sbb pusha dec setge and mov adc or loopne (bad) fsubrs cli (bad) push and in mov lcall inc pushf lret das sbb lret ret mov dec nop push inc arpl or mov xchg push lods cmp clc enter adc xchg xlat mov or dec (bad) fcos sub or jp enter xor xchg call mov pushf aaa xor (bad) jl inc mov and jbe inc push stc les jge cmp push dec (bad) and fsubrs imul jae add sub ret movsb and rcrl xchg inc fcmovu (bad) (bad) mov cltd shll jp (bad) xor pushf cmp aaa cmpsb dec test repz mov stc mov inc leave xor je sarb mov push mov jl sub jmp mov mov jbe stc mov jecxz or xor push dec pop add xchg cltd ja cmp cli or call add icebp (bad) jb lock dec rclb lret mov iret faddp jne aas nop std inc (bad) cmp fwait mov std mov cwtl jbe jmp gs sub jbe dec outsb lret inc and je inc mov loop or jecxz push jne lcall std test insb rcll sbb dec call add push or fdivrs push mov xchg pusha xchg dec mov (bad) pop mov lret sbb out mov sbb pushf sub dec sub test inc fnstsw mov dec out aaa mov add lods mulb jl jmp jl shll je sbb mov pop pop xchg pop add mov cld mov push dec jmp cli addr16 pop test adc pop or sbb mov lahf arpl jb rsm lods daa arpl fsubrl pushf dec inc mov (bad) and add iret mov jmp inc pop pop adc inc test outsl inc imul mov mov xchg inc jmp and in clc and out out jns mov jp or mov pushf aas loop xchg (bad) outsb subl xchg xlat or in dec xor popf gs add call xchg push xor xlat or dec inc mov out inc sub pop add pop mov inc mov add and jne das addl and ljmp loopne ret dec sbb in enter sbb shl ljmp add sub mov mov sbb pop pop mov in int3 push cmpsb pop out jb xchg sbb adc jae fmul in jae xchg test outsb pop es cmp or xchg lcall xchg pop dec fcmove cld mov sahf loop sbb mov in arpl and push fstp mov mov inc add int3 fidivl std or inc aas add sub notl inc dec test lods in sbb xor inc addl sub pop pushf lods sub fadds lret cmc mov js xchg push jg loopne dec cmpsl ljmp xorl cmp das mov cmp jo xchg cmpb repnz repz inc aas cli inc imul jge aam cmpb stos lods mov pop or ficom out ffree or fs sti and mov push mov mov insb jmp xchg dec (bad) sub shr mov (bad) mov xchg pop jno nop (bad) ss xor jno push repnz mov fwait jl mov int xchg jp sbb jne fcompl shl (bad) mov repnz xchg cmp outsb fucom xchg movsl aad insb adc push add fwait call xchg dec mov fbld stos push scas scas outsl lret andb xor push fnstsw push mov xchg mov imull std in fs fwait add lods ds pushf pop mov xchg enter xchg sbb xchg push or jo popa mov cmp leave out jmp cmc inc mov cmpsl gs in jmp adc je ja daa push dec adc data16 addr16 push jp adc into or insb arpl jmp push pop lock lahf movsb xchg dec rol add aaa xor lret std hlt in mov pop js insl push lret sub jecxz dec adc cmp lods movsb push mov into xchg pop imul mov sbb push xor into popa lret cmpsb or inc xor lock sub push sub xchg arpl jbe out cmp push imul and loopne push jge push xchg sbb pop insb lods mov add fwait into dec jp jecxz pusha loop add jo leave sbbl pop (bad) xor mov mov pop fbstp aas aam sbb scas push and sti out push xor (bad) adc jbe mov pop loopne dec or test sub sbb adc xor dec into lea jbe in and aaa fs pop cmp pop inc push imul mov fisttpl ds or mov mov fwait xor ljmp adc jecxz push lock lods xchg and jp mov (bad) xchg xchg ds test repz mov imul pusha xor cs ljmp imul xlat fldenv out jle in test push insl or (bad) cmp int bound sti jge mov xchg stos insb movsb (bad) dec (bad) enter sbb outsl not loop,pt mov mov faddl pop cmp mov enter sahf lock insb xchg push mov or add add pushf xor push xor push inc notb sbb sub cld dec addr16 cmp or ja xor and adcl fwait jne sti int3 or mov rorb push jns rcrl cmp cltd cmpsb aam xor ret sbb aad and inc addr16 fcoml jnp fcmovu (bad) jb lock mov (bad) dec jl pop int xor (bad) or cmpsb mov mov (bad) (bad) cmp lahf cmp adc pop xchg (bad) jp rolb or mov xor lods xor popf shrl je jmp push (bad) push or sub adc loop adc sar insb gs out cmp and lods xchg icebp adc inc inc sbb movsb cli inc in xchg adc cmp int imul cmp jnp cmp add sub pop loope push mov jmp lds ret xor mov add sbb xor dec push adc push ljmp add xchg pop cmpsb lods into mov (bad) xor inc xor leave inc sub aad lcall test lcall jp test pop mov fcmovnb pop mov lds mov iret (bad) push stos cmpsb or push inc dec mov pop lret pop fs int3 scas insb cmp mov inc out push pop clc fwait lock mov and fld out daa mov sarl or stos aam mov test pop sub sbb lret jl loop movsb loopne add sbb in imul mov cs dec cltd pop xchg imul lea into cltd cmp daa and sti pop add sub roll sahf les push xor sbb push lahf jb sbb into cmp sub sbbl sbb cmp or (bad) and mov push xchg fs mov push xor and xlat jg clc cmpsl fidivr xchg rorb inc sub pop xchg pusha js mov sub or mov pushf pusha pop dec in jae ret inc mov (bad) (bad) jmp pop scas dec push jno adc mov cmp xchg cmp jnp mov es jno outsb and inc (bad) (bad) adc (bad) mov jge aaa ret add mov fnsave movsb fmuls inc cmpb ret sahf outsl or push inc push scas inc test cmpl mov clc sub or ss into ss in cld add xchg xchg xor outsl lret stos xchg mov lods daa movsl fsub add sbb test nop aas rcrl in aad loop das push push xor mov ljmp sar stos add out cmp shll push in dec cltd or cmp jmp shrl push popf xchg rorb ja pusha mov jmp sub and rorb add xor xor cli addr16 xlat int lea pop in jae cmp (bad) mov loope cmp sahf dec inc or cmpsl data16 lds in cwtl cltd inc adc lods xor adc (bad) (bad) jge sub inc inc sbb (bad) jge popl cwtl test mov adc mov sarl (bad) cmp sbb fnsetpm(287 stos mov ja dec sarl mov fidiv rcll mov xchg daa ja repnz adc sub insl jbe jae cmpsb cwtl mov rcll inc test push cmpb add sub mov aad mov mov sbb jle or sub stc out mov cmp cwtl jns sub ja das push in sub push mov gs popf stc sbb into insl ljmp or push cwtl pop (bad) lret dec fstps push jmp jmp (bad) imul in fsubl jle lods je into in or mov aas cmpsb mov clc ds and adc es mov fist imul pop mov push ficoml sbb test xor mov pop loope xchg dec push stos ret jne ret adc mov into pop push repz into and cld xchg mov (bad) adc lds adc mov jge xchg call cli (bad) cli sarb mul dec (bad) adc out cli cltd divl dec mov lret push mov xor inc scas pushf outsb sbb jo push je fdivrl into lea mov pusha imulb cwtl dec ja adc xor inc shrb stos inc cmp cwtl push and push jmp xor mov or je push push cltd jbe push jmp call ss test fwait cmc xchg (bad) xor ja out jns shr xchg inc mov (bad) and sub (bad) cld cmpsl inc mov mov mov scas arpl dec xchg shrl pop or xchg in insb push fistl and (bad) repnz ret push inc addr16 stc not sub adc stos push mov aas push xchg and out cmp pusha and cmpsl mov cmpsl dec roll ja int3 jbe js cwtl popa je (bad) in test pop dec adc cld push and (bad) repnz nop cmp or add imul adc sahf or push mov mov mov xlat add jecxz js mov rcll les fnop cltd dec cmc xchg adc jmp nop mov outsb adc fwait mov iret and jge sub push shrl pop (bad) js pop (bad) flds sti mov xchg or add adc jnp mov mov (bad) (bad) xchg cmp and lods pop xor jge andl sub mov loop dec adc ret loopne loopne stos jmp jp les xor push stc mov stc inc push xor jne stos sbb mov or daa jecxz movsl nop popa (bad) xchg pushf scas dec mov mov mov cwtl xchg gs and mov outsb test mov jl (bad) add mov mov mov add loop mov push xor mov mov sub push cmpsb pop les mov inc adc pop xor and xor inc in fucomi imul aam bound (bad) stc ret push or push mov sahf lret sbb add fist jl xchg pop xchg int3 bnd popf add or add mov test (bad) xchg popa fstps dec clc (bad) bound jbe aas frstor enter ss lds rolb or vmptrst sbb sbb dec mov mov std jge popa shr add in stos repz lods test loope dec inc mov push ss cld cmc mov fwait push pusha inc es (bad) jle mov test inc or adc out cwtl pop xchg les mov scas out sub in xchg and xor mov mov repnz xlat outsl or push ja jge ja aam js cmp out icebp xor mov mov sub cmp push xchg add pop mov bnd push jnp (bad) pop outsb cmc mov ja in mov je adc (bad) jne loopne std pushf mov cmc out or sbb jg inc xor mov mov jno lret adc xor push leave mov add ds sub fcmovbe daa daa icebp sub push adc mov std jns pop xchg and jnp mov scas add pop js in gs lea loope mov add and repnz pop xchg rorl hlt jno out xor stos data16 push push cltd frstor pop ds shrl push aas ds ficomp int3 dec pushf add inc cmp cmp sti adc lods pop arpl pop jmp jbe fiadd out sbb push xchg fwait addl and (bad) jecxz push push (bad) aam and inc call and das or sti dec mov bound rolb xchg lea repz mov xor mov push or in add or mov inc sti enter pop popl xchg pushf sbb je pushf lret sbb hlt sbb dec andl loop or shrl xlat ret jmp xchg insl jno imul movsl xchg in (bad) mov out hlt shll push rorl add jae jecxz and and mov mov push pushf pcmpgtb imul cmc push cmpsb adc mov pop jl out in jle sub lea mov loope xor xor dec or imul jo sbb mov (bad) pop mov mov fdiv pop rclb int xchg and pop ret jg sbb (bad) dec xor jmp rcrl sub jle icebp icebp mov xchg notl cmp lret mov mov mov and fmull insb orb lahf in sbb lods xchg cltd and icebp das aas pop sbb cmpl aad shlb test (bad) and test (bad) lea and shrl ret inc mov loope pop test pop cmpsb dec xchg test (bad) or mov xchg mov cwtl cli push aam lret lahf int cmpsb imul mov (bad) mov adc and push test imul inc push jo pop xchg sbb mov bound aad cli dec (bad) jbe in ret mov inc fs into cmp stos add loop push es xor mov sahf stos stos movsb fs das push cmpsb das push (bad) cmp mov and push push mov and adc outsl sub mov outsb data16 sub cmp push arpl (bad) call or mov fwait jnp ret aaa insl lcall les jae push adc sub stos and into mov aaa out outsl jmp popa xchg and mov push lret push push fsubs mov push loop loopne inc imull xchg add pop jnp insl sub jle decb cmp aam pusha jne push xchg test mov cmp dec je xor into xchg nop adc adcl (bad) in and inc jl or mov xor dec jbe add or add movsb in aad add sahf lret xchg jge dec and movsb lock adc fdivrl (bad) adc xchg in or incb aas loop mov jmp pop cmpsl add mov cmpsl popa fsubl and dec divl das jmp shr cmp test fdivl xor xchg xchg lods lods aad test mov fisttpl mov ficoml (bad) out dec xchg pop imul sti jp,pt and sbb or pop je js mov hlt cltd daa xor sub xchg cltd adc imul stos cmpsb mov mov mov jle ret pop sub aam and subl outsb enter scas lea dec push cmc dec daa movsb sub ss xlat repz and (bad) das jmp imul nop ss (bad) das add fsts pop mov cmp aam and xorl push fistpl mov int3 or xchg pop inc cltd arpl and push cltd cwtl (bad) cmc xor lds mov ds xchg fldenv add add lds and mov adc into (bad) and pop cmp cmp mov xor pop call js sbb xlat mov stos out vmaxpd es mov cmp adc int sarb push mov out or mov dec testb sub dec popf xor adc (bad) dec cwtl mov je into add and jge dec jl xor and stc fstl (bad) fmulp push mov or cmc add and push insl pop (bad) aaa ds adc xchg xchg pushf mov lock test sbb loop repz mov or push lahf sub (bad) mov lcall cli sbb and push adc and mov mov fsubrs jnp push pop mov inc loop fisubr mov jb loop xchg sub pop pop cltd daa adc clc scas jmp cmp (bad) and movsb in dec pusha out pop repz cmp jb,pt jmp jecxz mov add stc or std out sarb mov and test xchg inc mov gs addr16 inc mov mov cmp sarb adc sub xchg or pop inc push scas fcmove sub (bad) lcall in xchg fnsave sub fs lock movsl jbe nop (bad) imul ret xor cmpsl data16 fimul bound lea jp sbb mov fnstsw mov lret mov je sahf lahf cltd (bad) clc pop insb nop xchg aas xor pop cmp jns movsb clc xor and and pop xor mov scas inc pop push mov aad icebp xor and jns ficom mov movsl cwtl fldenv xor ss xchg test sub sbb cmpsl adc hlt push or lcall ret sub loopne aaa xor pusha addl cmc insl add incb aaa xor push xor loopne cld mov jb inc pop push mov inc xchg ret (bad) pop jmp cs in dec lods push lods je adc cmp insl loop push mov fs bnd lret mov lahf mov and mov (bad) inc nop dec or push fdivp pop xchg sub (bad) or mov loopne (bad) and inc fldcw push pop lret pushf out inc sub aad hlt or sbb int3 ret add les in jg (bad) (bad) mov jl stos mov push sbbl cmp mov ss mov out jmp loope scas mov cld sub xchg cmc mov mov adc (bad) jg inc arpl call pop pop cmp iret dec adc (bad) xchg push mov into fsubp lds pop push pop mov fwait scas jo pop test in mov and js lcall cli and adcl roll mov movsl xchg stc je xor sub pop pusha mov xor in divb rcr push out pop cmp jb pop sub test cs stos jno jne outsl mov cmc daa xchg ret mov shl push mov fldenv enter dec addb and cmp and xorl pop xchg sbb cmpsb scas fidivrl push push fldcw mov xchg and (bad) inc gs mov mov sub push sbb daa pop mov out mov aam loopne xchg cmp ret test data16 daa inc and pop push cmpsl push cmpsb xchg ret inc insb or inc xor dec insb pop xor int lret scas adc pop loop cmp mov lock notb inc add xor push inc das inc insl xor int scas sbb pop mov (bad) push mov loopne sub xchg xlat imul mov jg mov cmpl cmp fisubl xor xchg mov or cmp js mov cmc ss push sahf sub mov adc inc push mov xor mov out xor mov inc enter or jae cs (bad) inc push movsl push adc pushf mov mov adc lea jo cs and inc jp int arpl xchg cmc jle sbb cld shrb int sub jb sub push into sub xchg (bad) loop scas or shrl stos lret fs push frstor or jl mov or fs iret xchg pushf out outsb andb int3 push test mov aam push cmp dec (bad) mov xchg cmovle push jns bound mov cli hlt aas pusha xchg jg sub (bad) push mov test lods jno xchg and movsb repz rorl jge call and cmpb loop cli xor out ret add xor cmp repz push mov cmp outsb std or sub mov int inc fwait dec (bad) imull out push mov mov mov out pushf push nop test sbb add sbb mov inc mov mov gs push xor mov mov outsb xchg mov inc shrl push and aad ret sub and and ret call mov mov int3 mov inc push lahf pop dec mov pop cli cmp sbb aad cmp subl mov push mov xor add push and push inc shll xor ja jb xchg sahf lods adc add stos adc inc jbe repz pop je mov adc inc dec cmc cmp pop and int3 fcomip push pop pop (bad) js jp aas out or icebp and popa sti out push and cmc rclb fisttpll jnp sti (bad) shl ss jns enter test sub out fnstcw push xchg mov cltd mov mov pusha stos popa (bad) repnz nop jbe addr16 shll push test into cld loopne ja mov pushf sub mov xor push enter pop jl xchg dec and push jae cld jge lret cltd ror (bad) xlat dec push jle xchg fildll push mov adc or jmp and xchg pop add add jecxz xchg cmp gs out in (bad) xlat jmp stos jbe push and jmp fdivl bnd or stos dec dec jp mov cltd ror rolb insl xor inc sahf jg mov out sub push in in cmc imul inc xor inc mov mov notb insb inc cmpsl adc pop repnz pop jb mov jnp mov cmp leave jl movsb pop out (bad) dec aaa dec cltd imul daa jb sahf fnstsw add loope jecxz xor adc adc pop dec lahf sbb (bad) jle xchg sub idivb mov lods adc xchg clc (bad) cltd inc hlt addr16 in fwait xlat mov mov cmpsl fnstcw fnstcw xchg fidivrl pop mov push xchg add jg mov dec aaa push xor arpl (bad) (bad) iret sahf mov pushf inc pop jno pop sub cmp xor xor int push jmp dec sahf dec lea loope sbb notb sbb mov mov push dec pop add sahf adc or cmpsb hlt inc adc sub jge and test cmp inc jae inc outsb stos xor or or out lock jg sahf dec sbb (bad) je dec jge xchg cmp inc pop fimul out pop insb jb add xor pop sti pop call mov pop mov mov cwtl push shrl fs sbb pop sar cmp mov cwtl mov xchg mov stc ret lea fsubs stc xchg ljmp pusha and jns inc jmp repnz (bad) pop arpl les sarb or movsl mov xchg mov xor movsl jmp adc mov inc mov push jae pop cltd popf daa fildl sbb mov xchg xor lods movsl out jnp or fnclex xchg cld dec pop lea jo mov pushf jp xor nop cwtl and shr sub ret ljmp fistp rolb mov inc mov fdivrs and jo jne outsl cmp loope fdivrl aaa jle cs mov inc sub pop pusha negb js imul jle int les mov loopne mov jae and mov pop ds xchg push push insl mov cs and add icebp (bad) icebp nop js xchg jecxz push xor mov test int3 or out movsl in lret jmp nop xchg ret jmp xor test aaa mov sub or and scas stos and pop jbe das aas fidivr or mov sarb dec lock push mov fldt and arpl xor popl insl adc and fcoms xchg pop or or push push loop ljmp fstl int3 mov sarl das in mov aas cli cltd std (bad) pop ljmp fwait pop push sub cwtl das cld ja jmp mov fstpt xor jno cmpsb xor iret add sub icebp les push imull mov lcall shrl fldenv ljmp sbbl fs popf adc movsl dec dec popa stos imul je ret jb in jnp fsubrp test cmp mov add in gs sub ds addr16 sbbl shlb xchg cmp (bad) jmp push mov fwait push pop (bad) sarl mov sbbb jmp ret cmp mov sub push mov fwait or (bad) adc rorl sub dec xor pop int3 (bad) stos mov push movsb sub adc inc or xchg mov xlat jns pop imul movsl sub jle jno lahf sbb mov es or dec mov inc mov in xor loope inc aaa fstpt aas mov ss cmp pop ja mov and xlat arpl jb fnstsw xor xbegin mov loop,pt movsb (bad) mov and addr16 hlt scas nop xchg js ret arpl add das lods jg sbb mov mov aaa pusha ret sbb push iret xor mov push dec sbb mov xchg add jns icebp sub jo mov cs dec cwtl (bad) in sub in push inc xchg xchg sub mov sbb lods ja imul fsubrp enter push dec lock cmp xor inc andl add in outsl xor jnp mov adc rcl (bad) adc jecxz and add je es push inc mov mov outsl mov cltd push loopne fwait mov xchg jmp jge push xchg stc fcmove loop push or push pop and fiadd movsl mov jae in iret fs xchg stc mov fstps or push lcall mov orb adc sahf push jne jbe or push movsb into push iret ss (bad) mov xor cld sbb imul push and lret mov (bad) and arpl pop sbb cld xchg sub in mov jge leave in dec addl mov popf fcmovu gs sahf push adc es test or xor in mov cltd pop fldenv adc (bad) enter cmp lret lods lret jb in gs inc loop push push sub inc mov pop and xchg test ja lahf xchg sbb adcl subl and (bad) mov inc leave dec lock sub mov cs loopne stos inc dec fsubs and xchg lods and (bad) cld imul jno ja popa out faddl sub sbb inc and sbb nop call push inc xor cmpl rcr mov pop andl or and mov dec lods pop jns adc das dec clc pop pop je sub div mov faddp dec cmova repz push or int ljmp repz push jno insb test sub sbb in bound (bad) adc into call scas pusha arpl xor stc mov lds scas fwait inc jp lea lcall mov loope ror repnz es aaa ficom push gs je orl fstp dec out fisubrl cmp repz lods or cmpsl adc movsb shll jmp test add ret mov gs xor inc jb inc dec das adc rorl test xchg jmp sbb push mov stos xor popf fmuls cmc or fucom ljmp movsb jae mov (bad) dec jbe xchg testb pop addr16 enter dec (bad) jnp ret in mov fsubrl sbb and mov and mov dec cltd or popa mov rcrl dec mov jnp iret dec insb sub ja xchg mov sbb lods (bad) and pop jnp (bad) jge sti call dec inc out inc jnp stos call mov cmpsl pop pop add out cmovs mov (bad) test fistpll cltd xlat sahf lods ss fldenv sbb ds pop mov pop pusha and cmp push lea std push fist push push imul fs lea xchg dec push in aaa mov pop clc xchg push lds push test cmp jbe add cmp and out lahf inc aaa jmp adc gs jne push rorl mov add pop insb dec out (bad) incb movsl mov cld mov call mull lret pop or mov and mov mov (bad) mov (bad) aad loop,pn cmp (bad) or inc pop push pop hlt pusha arpl pop scas push sarb xchg xor data16 fdivl scas je es jmp adc fs mov cmp ret in jnp mov lahf push dec rcll fbstp sub lahf cmp pop sbb mov rorb je stos sbb test icebp imul (bad) mov inc dec (bad) nop xchg mov data16 loopne mov sbb cwtl sub ret or pop jb dec and in adcl jns arpl dec xchg in xlat mov pop movsb push mov insb hlt pop repz and xchg nop dec pop mov call pop cmp jp insb xchg dec fcmovne sbb insb or lahf xchg cmp mov imul cmp les xchg addr16 jno fildl and cltd mov jmp lock outsl rcl dec mov iret mov push mov xchg cmpsb stc iret pop cs cmc out fdivrp movsb inc mov sub xchg sub popl gs sbb inc inc into cwtl jle (bad) sti xchg mov call loope lea imul cmc sub js das inc and push in push xor out imul and jno sub xor fisubl cmp add mov popa sub jnp pop pop mov add pop daa mov hlt xchg inc lods inc and jne data16 orl enter jmp enter mov inc ja fnop fwait add xor mov push (bad) xchg jmp cmp xor dec enter out loope pop xchg enter cmpsb cli enter scas jnp xlat mov fucomip ja push inc jnp dec andl sub cmp jle push xchg inc int3 out dec stc pop mov push loop sbb insb loope arpl mov jne cmova mov frstpm(287 pop (bad) pop inc dec (bad) mov aam add loopne enter jge lret and and cmp jge jnp jbe jb sbb xchg adc cmp out jo add jb or out (bad) mov lcall push or mov xor cmpsl lds cs in (bad) (bad) repnz mov divb mov jg ret or add enter pop in popf iret sub add arpl fnstenv cmp arpl std lea inc mov repz dec mov and jbe std call (bad) les add mov pop mov mov dec fsub adc icebp or test data16 mov jae xchg in orb loop push sub outsl pop inc cltd and adc sub imul mov int cmpsb (bad) cltd pop jp (bad) ljmp xor pop aad js nop pop lret xor roll adc xchg mov sub push xchg inc add sub inc mov xor cmp loopne cli loopne pop or outsb cwtl lret adc scas cmp inc ret inc es xor xlat (bad) xlat jns mov fbld jg dec mov jecxz mov dec add add mov inc jge cmp fsts mov and pop dec xor xor mov insl fsubrl clc mov jecxz and mov mov ja xor divl fsubrp sti dec xchg cmp jecxz add imul mov inc dec xor push cltd dec loop sbb cmp mov aad loop push mov push xor or pop or xchg pop fmull data16 mov divl adc xchg aas cmc (bad) cmpsb push (bad) ja push (bad) les mov and push xor sbb cld test fistp jae addl jb pop jne lods lcall pushf in lret addr16 pusha or cmpsb aaa js dec into sub hlt or movsl sti jb dec ret sub hlt fldcw lcall imul jecxz and push jg lret ds mov out dec es jne mov in mov xor cmp (bad) dec loopne or dec scas std xchg xor jno jbe fisub jmp sbb pop mov xchg mov and mov lea and inc cmp pop jecxz xchg pop call push sahf sbb add push fstp test sbb adc fcoms fcoml inc and mov and dec push mov mov push mov js cmpsl dec pop mov jb xchg mov dec cmp cwtl addl lret add cltd or rorl mov mov pop add iret pop stc add or std fwait mov stos push lods pop mov inc (bad) movsl inc cmp xchg xor add and pop sbb sub xchg (bad) adc mov lock jns mov aam outsl cmpsb sti or aad dec out lret jmp ljmp outsb fucom int or and pop (bad) add jbe mov sbb pop dec mov xchg push das loop dec push fs das arpl cmp xchg pop inc leave cmpsb loopne pop out xor in mov daa or cltd adc sbb dec js pop insb addl icebp movsl pop ljmp sar xchg adc pop jo pusha adc aaa inc lock push jmp loopne push sbb scas mov ss sarb in and fmul dec enter sahf jle gs jge push lea lds iret iret push (bad) xchg loopne push add cmp dec mov (bad) pushf in xorl ja push insb jnp sub pandn stc scas mov (bad) (bad) jo fildl jae mov cmp or lods daa test js mov inc xchg push mov inc int3 loopne cmp mov pusha (bad) push shrb add das cmc aas mov jbe mov nop nop push ret aas movsl mov insl xorl mov ret mov push in mov ret incl lcall out sub jle xchg lret fwait xchg div dec movsb insb jne xor outsb shrb mov dec adc idivl pop outsb jp mov mov stos pop pusha mov jb stos outsl adc mov scas jno (bad) in inc pop jge mov loop,pt push mov test shll xchg jg outsb mov into pop sbb inc dec loop (bad) and sbb fsubl dec jbe pop mov mov jecxz call cmp sbb scas pop lods and inc push cwtl dec sub push mov sub pop push or sbb mov inc and popa popa mov ljmp mov push adc dec outsb outsb sub lret add lcall push iret add je jecxz sbb mov test jecxz jle scas (bad) rcr nop inc decb pop data16 adc notl push push lahf clc test in insl add sub lock fdivr cmp xor inc fisub movsl incl sti and lods jg add inc or clc mull dec fsubrl notl mov cmpsl pop dec mov mov pop fyl2x dec nop jb push aaa out pop dec (bad) popf mov adc lods inc xor insl (bad) xchg inc cmp fsts sbb popf nop push adc out xchg pop rclb mov jle mov ds loopne sbbl xor lcall test lret lret sub dec enter fs movsb icebp in sarl (bad) jmp stos xchg xor addr16 jp aaa or xlat cmpsl jb popf lock pop mov mov dec mov rclb lds imul insl mov push mov int jae sub int3 sub mov sub fildll xor sbb sbb sbb inc scas pop inc adc in inc imul ret jb sbb outsl sub gs daa adc sarb sub dec adc js test pusha xor xlat push inc movsl cmpsl test or test out out push (bad) sub fisttp xor aas mov and xor and mov cltd sbb push mov into xchg pusha pop fnsave xor push jne xchg les pop jnp push push xchg (bad) xchg lahf add pushf (bad) xor push sub xor add jb adc sbb pushf fcoml jb xchg or aam fcmovb pop test mov sbb data16 subb cs cmp xchg in test pop push push adc (bad) andb mov movsb out xor mov (bad) push jne cmpsl mov inc lds sub xlat pusha sbb (bad) inc pushf aas (bad) jmp (bad) movsb or mov fistpl ljmp xchg add push cmp lret inc stc mov adc gs mov and shlb mov test scas and add sbb push mov mov pop fsubrl in add movsb rorl in jnp xor dec and push (bad) divl or aas inc mov in xchg sub std mov or dec repnz xor and pop dec adc jg cmp sbb xchg adc lds cmp aas addr16 bound clc cs push cltd xor icebp int3 pusha repz es sub mov add inc sub (bad) (bad) xchg add jmp imul add mov enter fstl out insb jle in out inc enter and dec test inc and mov fldcw clc mov daa xchg xchg test xchg xchg cwtl cmp fs dec iret or js push fwait push mov dec imul mov jp inc dec jge mov ss xchg mov arpl stc cltd pop xchg jge es inc fwait push xor and iret (bad) call jg bound push mov imul into xor add inc adc clc xchg push movsb sbb std inc insl aam cwtl cwtl stos aad imul loopne (bad) or fwait push xor popa int3 xchg lods aaa dec insb pop cmp pop sbbl loopne xchg repz push icebp jg stos (bad) xor sbb mov mov test push fwait cltd (bad) out and ret xor sub fdivr test pop cli fs push arpl pop xor loopne insb clc xor dec push pop and mov pusha and sarl faddl insb dec aas fwait cli scas push mov and mov push sub xchg scas mov call gs fst std sub push (bad) adc (bad) icebp pop in subl cmp dec scas pop or scas dec lret fldl2t hlt ja emms sahf in push xchg xchg sti push loop or cs xorb inc dec mov push jmp mov lds sbb pop push js mov jmp inc and fucomip lret into repnz or mov or mov jge mov pop mov clc cmp pop jns leave fwait sub leave add stc sub dec hlt push sub mov inc jp push gs pop loopne xor loope mulb xchg dec inc aas in fwait jle xchg mov add popf adc pop lret adc xbegin sub jo rorb cmp scas mov (bad) idiv pop rorb faddl ret mov js and repnz cs fiadd or adcb imul dec pop (bad) and add push popl cmpsl lock inc dec mov sub sbb mov lods call sbb push popa push push jae aad push rcll mov into dec stos sbb push and in cltd je (bad) pusha outsl out pop mov push or xchg mov xchg jmp dec shrl movsl imul jecxz xlat pop xor cltd sbb fisttp test mov fsubr rolb mov pop and rcr aaa xor or xchg mov mov (bad) repz fwait loopne mov call fdivs or std jo sub rol or cmc (bad) xor movsl arpl jnp in ret fwait jmp (bad) cmc sbb mov imul (bad) cmpb pop sub pop cmp dec jno out jl sub inc and out loopne stc lods jle inc add outsb outsl cmp or ret stos dec addr16 jle mov lods or push (bad) push (bad) xchg mov sbb and mov mov fimul gs xor and push insb adc testl pop mov and push fwait or push cmpsl inc pop (bad) scas test repnz insl scas jbe dec insl outsb outsb loope jg sub iret inc mov mov dec jne or lods dec loopne jbe (bad) xor in mov sti imul imul iret imul mov mov cmp pop outsb xor jno jmp rclb les xchg mov adc mov cmp test xlat out cmp or cmc mov int cmp movsb lods inc pop xor xchg fbld pushf push shrb cmc mul jmp mov add inc aas cwtl leave and lods pop or mov adc into cwtl push stc cmp arpl jnp test imul adcl jmp push in xor outsl test adc adc jnp (bad) dec (bad) adc mov in adc fidiv dec inc sub mov cmp cmp shrb cli push test cmpb rcll fcoml xchg ds lret lea mov pop (bad) xor daa pop push mov add or or xlat mov out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz add unpcklps adc add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add js add add or or add or add add add pop or add add mull add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add cmp push js in xlat add rcrl insl (bad) fldt fildl or or sahf inc les add jne add pusha add xchg out into sub jne jo dec inc loope (bad) (bad) xlat cmp adc sahf lock jno cwtl xchg insl jns pop adc push push mov and push stc xchg lds mov cmp jmp jecxz or jo int mov jo test imul shlb movsb adc in pop pop pushf or mov popa dec dec (bad) fdivrl cmp test aaa sub clc lods cmp pusha adc mov daa stos sbb cltd js iret cmpsl popa (bad) repnz (bad) mov data16 pop pop sbb mov mov fldenv or dec dec xor jg push call rorl (bad) dec icebp dec dec loope mov lock and inc adc es repnz test dec into (bad) add out push rcrl inc subl rcrl popf loope mov fist or psllq mov sub and adc je jae mov jo push int3 cli shlb or adc idivl cmc adc shll popf sti push push fsts into fdivr cmc stc rorb pop jmp out decb dec in icebp sahf sahf pop push sbb in xor std in pop pop out add inc xchg jns push fisubl jge jle xor and in repz push mov es pushf rolb loopne cli repz bound jno cs sbb dec popa mov mov push push inc lods int3 jnp or or lods jns adc lods mov loopne push lar xor fidivr loope sti pop cmc pop mov popa mov cmp add jnp mov and icebp cmpsl push fucom (bad) dec xchg cltd mov int inc mov jbe fldl xchg xlat stc stos fwait cmp cmp mov mov sub in push dec outsb mov mov xchg loope jecxz mov (bad) maxps insl mov rclb push movsl mov mov into pop pop or mov mov mov xor and push pusha (bad) add cli xchg (bad) push scas lcall imul lods pop out push icebp mov lock ds or jmp je lea mov dec dec and mov jg fcoml jecxz pop popf shrl inc insb mov xor stc js mov push cld data16 and int3 add cld sbb (bad) xchg xchg push xchg (bad) movsl jmp fwait xchg movsb (bad) into clc jbe hlt subb enter (bad) fldenv mov xor ljmp jb mov stos sub adc dec ret aad cwtl popf mov das fidivr je inc dec jb mov in mov std sub sub lods pop js inc insl cmc rol mov xchg adc mov jo mov lods (bad) cmp cltd mov fcompl push xor push stos lods mov sub aas inc cmpsb (bad) mov (bad) in (bad) dec push xchg xor push aaa jo fs scas jns rolb inc testb mov sub insl mov cmp inc in js cwtl push leave cmp rcl aam xchg jle mov iret xchg insl test les test push pop cmc add push push orl aam test mov out mov push (bad) push out mov add mov push in and mov mov (bad) lods cmpsl pop inc ret jno fnstcw sub dec mov movsb adc xor jbe je loop xor sub es or jns mov fcomps dec and sbb arpl mov pcmpeqb ret fsubs mov xor mov push popa stos ror sub mov sub xchg (bad) daa jmp test lea mov or push sbb mov sti jge dec mov jns in pop lahf sbb lcall cltd sbb scas inc lret sbbl pop jb pop fnstcw fs xchg in fwait jae mov xchg or incl add popf cli rcll decl in cmpsl cmc sbb hlt fsubrl jb pusha cmp and lcall repz or push pusha sub sub dec jg sbb cmp inc sub jmp call scas mov mov dec into xbegin clc jl out push aad pop mov jle adc out xchg dec adc stos cs push dec fisubrl sti scas loop dec pop xchg push add jp mov mov sbb xchg lods les push sbb lds cmp je dec aad xor data16 (bad) mov xchg js inc xchg dec lret jmp mov stc cs subb xchg jge xchg push jp xor xor aas jle lcall cmp in cmp cmp (bad) testl clc adc mulb (bad) sbb xlat xchg cld lea sbb les lds in out arpl stos cmpsl ja outsl inc sub pop sbb pop lret mov jnp push aam les lods (bad) dec popf cmp mov push pop fs popa repz cmp push mov adc sub (bad) adc xor fcom flds push jp ret push (bad) nop rcll rol call xchg pop out adc sbb pop clc pop lock push cmp loop lea fdivrp psubsb jle mov daa dec scas push clc fcmovnb xchg rol outsb jbe pop pop jp add or push lahf jne dec call into dec cmpsl dec cmpsl mov adc xor xchg sti xchg rorb in add pop pop lret lgs fnstcw xchg cmp jmp js xchg cmp push and repnz dec inc out jecxz jbe xlat mov outsb out ss (bad) bound or sbb jne mov sub dec xor (bad) fwait cwtl scas pop int xchg lcall sub push jne cs or mov jg out ss sub dec xchg mov sub jno xor push inc fnstenv pop cmp inc scas inc stos js (bad) and cltd jmp mov div mov xlat pop rorl jne out sbb iret loope int3 inc adc fcmovnu cmp mov scas mov push and mov xchg enter and jno test jae dec pop iret andb jno mov aas outsl cwtl jns movsb add xchg inc or cmp bound ss pop mov insb pop das dec aad push dec loopne pop mov test inc adc inc cmpsl clc add or jp add push inc cmc mov inc xchg jg fdivr ja nop lret out (bad) xor ret rorb push dec lcall add leave xchg cli push pop gs fmuls iret test push jl and xchg in js imul mov pop je xchg jbe add inc fsubrl or int3 lock in movl leave adc lret test adc (bad) int3 loopne xor sti andb bound pop xor adc pop sub mov ljmp divb lret loop int xor (bad) xor cmp rcrl fdivl ret test cmp (bad) cwtl clc and and jle sbb jle cmc add in push ljmp imul fmull std mov out jle test cmpsl or sti cmp adc mov lods stos movsb push jge fdivrs jg jne jns rorl dec call lods sbb bound cmp mov sbb and test push jle (bad) pop pop lock mov jbe stos (bad) pop aas int adc (bad) xchg mov (bad) jae loopne int lahf sub pop xchg or popf loop repz pushf mov rorl push iret lds or jmp cmpsb dec test mov sbb xor xchg fcoms or bound stc xchg (bad) ljmp mov pop push adc lea dec pop cmc pop out negb scas mov std and mov hlt cmp (bad) or fmul adc jns dec mov push fstps push xor or aad xchg fcmovbe pop mov jbe dec jmp imul test push or ss out adc shrl xor sub scas int3 dec and cs rorl mov jns js pop std xchg mov shrb and outsb push scas pop decl adc mov pop mov cmp sub ret imul xchg stos sbb (bad) push jbe mov or fsubs and aaa cmc pop jp cmp xchg outsb adc lcall jbe mov jo repnz aas (bad) mov scas ljmp out mov popf insl lds gs sahf (bad) mov and dec sbb nop data16 pop lods xor sub ficoml dec lock xor xor xor popf insb jne mov cmp and fidivrl mov ds pop loope (bad) (bad) mov and add addb inc push imulb daa xor mov out mov pop and into das imul mov ss jno sub popa push ja stos dec jnp pop and lret push lret or bound shrl push out enter aaa jns cltd cmc cmp mov or ror and mov icebp dec xchg (bad) sbb mov push adc rolb rclb cld shll cmp xlat popa jnp shl pop std rep xor mov ror mov movsl cwtl mov repz pop cwtl and mov adc cld mov scas sbb jne jecxz xchg pop sbb int or test or pop pop push movaps jo mov push xchg mov loope stc add icebp push fmuls pop inc or ret scas pop pushf jp icebp test xchg dec and and cmp imul lret xlat or fsubrs ret aas lock lret jno das loopne pushf dec (bad) ljmp jb mov and jp rclb cmc jl (bad) jp mov mov sbb in aas imul adc adc inc lods mov std in imul xchg dec stc cmovp ss or push cmp scas sbb cmp add movsl icebp pusha dec outsb in adc (bad) or inc fs sbb das sub imulb das sub or mov inc sti jno jo sbb lea jbe daa fs add push ficom (bad) sub outsb sar mov leave cli test jns clc dec xor ja std mov cmpsl das xchg sbb aad jae mov stc imul mov aad addl push scas insl lahf pop pop sar push sub mov sub xor jmp fcomps jmp jae icebp xchg add (bad) in sarb mov (bad) sarl enter pop and mov lock fldcw insb mov mov test mov push fimul push sbb or pop mov js mov pop loopne inc mov imul popf inc aam stc ret jg dec mov pop ja fist test dec xlat subl loope jno add pop fwait inc imul jg sti cwtl adc into cmp jp xchg jno sub scas or mov fs push sbb popf mov leave rclb in jp,pt push inc mov and cmp scas out or sbb lds cmpsl (bad) stos adc sbb xlat rcr and mov in lcall mov movl dec inc loopne cmpsl es or mov ds popf dec push ja stc push push mov or jo out lret xchg jb scas pop stc je pop cmp pop jns push sarl and pop fisubr jb imul popf movsb test inc xchg imul mov arpl xor imul mov out xchg lock cmc sub popa lret sub fwait cmp or or (bad) sbb fdivr mov adc lock addr16 leave addl jl cmp ret mov dec aas or cmp dec xor daa pop xchg or test dec shlb or dec lds pop imul adc dec inc mov fstps sahf mov cld loope out xchg enter xor pop pop jno ret ljmp mov and or sbb lds mov shlb jg data16 lret xor jge inc or das sub popf sub xchg jae sbb mov sub iret mov into hlt enter xor pop push lods cmp adc add sbb sub pop or cmp sbb insl ficoml (bad) adc mov lcall sub loopne fcomps dec shrl lret das sub inc cmpsl sbbl inc push ds dec loope jge sbb push ljmp out push mov faddl fcmovbe mov pushf inc scas jo xchg sti fnstcw jle adc add leave adc ljmp jle cli ljmp stc dec xchg add fisubrl jbe and out jo inc sub lahf xchg xor jmp frstor sub test out xor adc (bad) ljmp inc sbb out bound mov push leave mov sahf xlat out es push out test xchg fs cmp xchg jg (bad) mov sbb incl out pop inc movsb sub (bad) test pop sub aam mov jo dec ret mov test notb and inc push inc dec (bad) and mov xchg lds xchg out mov cmp jmp call imul inc lcall mov add mov out and aas cmp or adc pop loopne lods or jge (bad) push (bad) cmp mov fisttpll jne sbb add add push add dec xor sti xchg lret int jmp push xor movsl adc pusha cmc ret das fadds xchg imul inc dec out frstor cmpsb adc jae leave lcall mov outsb (bad) aam jecxz pushf fnop not out push or mov ffreep mov add (bad) mov shll aad movsl push adc push divl gs pop loop dec and ficomp mov fiadd (bad) adc leave add or inc int3 out jmp std mov mov push pop (bad) xor jl xor pop jge jle ret aaa aam je cmp add adc cmp mov xor enter push lret scas sbb aam inc movsl or jae or arpl mov outsl in ret cs lret cs cmc imulb dec push std push sti cmp ret out jge cmp rorb stos adc int out push xchg (bad) mov mov out mov jle lock mov stos ja iret pop push arpl adc mov (bad) fist add mov int imul aam pop jnp push sbb (bad) out adc or (bad) ja test add adc mov fbstp pop sbb pop dec cwtl jno out cmp mov (bad) sti movsl mov sbb lret popa xlat in int mov adc xor outsb sti xchg cmp dec inc mov nop outsb cmpl pusha push mov adc push and imull in mov (bad) insl lods fisttpll jb sub adc cmp inc aad mov faddl out call xchg jp jmp imul daa jmp mov dec in js inc xchg ljmp jo in pop sbb mov scas repz in iret adc aaa int3 cmp rorl faddl jno test call into inc sub and mov icebp dec into (bad) lcall or and roll sbb sub enter stc adcl cmp repnz pushf cli (bad) call push outsl pop or xchg push inc in push adc pop rclb scas jae sbb sub inc xor dec adc fistpl xor lock loop dec fisub loopne jecxz cmp sbb sahf pop push insb cld add fs and xchg pop stc push imul pop jae push sub mov mov or or sub sbb sbbb xchg jbe mov fcompl call sbb shlw mov jmp jge mov imul idivl sub call xlat je xchg adc es div enter lock daa adc push pop sub xchg add daa pop insb aam ljmp xchg nop add jae neg mov mov int xor add imul xor mulb dec cmpsb inc lods mov add ja jns daa adc popf push mov push inc adc mov and loope inc dec dec dec add insb daa aaa and mov fsubrl xchg das mov std jae lahf sub es mull ficompl jl push outsl mov inc int3 jp aas test loopne and and dec lcall outsl sub dec hlt mov push test mov loope sub xor stos sbb nop (bad) or pop aad fimull push or mov mov xchg in aaa mov or lods in popa loopne pop (bad) xor or mov push sbb mov inc in loope ljmp and push or xchg xor ret xchg push subl or jl shrl outsb rcll sbb pop sub sub pop repz xchg push mov test push (bad) pop sbbl stc icebp inc push and icebp add (bad) iret add sub popf in push lcall cmpsl js cwtl imul sbb cmp sub and fs leave or int3 or sbb mov dec cmpsb (bad) mov (bad) (bad) or cmp aaa (bad) inc sbb jne dec test (bad) sarl sti add adc jge mov ss add pop dec popa or jae dec pop inc or (bad) ret inc frstor pop and mov scas cld and flds dec enter lock subl js std inc bound and sbb cmpsl dec push lods addr16 push cld rorb popf fwait popl dec fcmovb mov clc test psubq jg add out outsl aam aam ljmp push pushf xchg std cwtl dec xchg lea or pop clc inc or fdivl jge and les and arpl push mov repnz outsb lock popa add and xor and pop scas adc sarb aas mov popa xchg das loopne loope movsb jne es inc rorl in sub sbb jl sahf jbe sbb lds mov insl jbe jmp or cmp rolb mov sub (bad) jbe jo (bad) xor xchg test fbstp cltd mov mov mov mov outsl fidivl inc test inc pop int mov push call cmp (bad) dec inc mov cwtl lcall or and xchg and cmp jle cmp inc adc add fnstcw jmp test jnp mov (bad) fcmovne adc loopne inc in sbb mov pop addr16 sub aam in and mov (bad) shrb and jns lods or dec or movsl pop stos sub (bad) or or (bad) or fwait lret push loop les push (bad) jmp jecxz je dec or (bad) add sti dec (bad) aad inc dec loopne mov outsl bound (bad) jmp js adc ficom das ljmp mov push inc mov sbb xor js aaa push loopne (bad) lret cmp inc mov loope test cmp aas sbb sub mov push arpl mov or inc cmp daa movsb push imull in out push hlt and (bad) lods pop dec (bad) cmpsl xor adc cmpsl movsb xor jae inc sub and xchg jecxz mov mov xchg subl push mov out xlat jbe ret mov sub push inc insl (bad) cmc ret dec and pop gs xchg imul clc daa push add lret iret das fwait enter out dec push sbb adc and jb mov mov inc mov movsb sub arpl ret xchg or sub cld jp jecxz data16 mov mov dec pop imul lds sbb out nop insl push and int or cmp loope push sbb or and faddl cmpl and add mov call mov xchg dec call enter mov add insl cmc cltd cs (bad) dec xor mov jg mov frstor (bad) fs fs repz rclb sub jmp lahf cmpsb sub push jo push dec call push sahf xchg dec das lock cmp and (bad) fimull jecxz mov out sub test cmc jge fistp stc or in je out dec inc xchg loop (bad) leave add pop ficoml lds push ds sbb push in fwait repnz push in fwait or cli hlt popl icebp xchg mov fwait (bad) push sti movsb mov sub (bad) lock scas and (bad) cmc jnp dec clc or hlt sub xor not push and cwtl ret andl inc or dec jp out lea sbb mov jp jo adc in mov ja cmpsb int3 xchg lahf dec (bad) iret mov rclb pop gs or rcrl (bad) in and xchg aam xchg in pop ljmp call hlt int3 addr16 aam lret int3 cli sbbl mov pushf addr16 repnz lock sbb dec sub popa add fiadd cs clc subl inc popa cwtl xor lock add xchg jbe out out (bad) stos mov fldenv mov push and lock sti imul div dec xor das out aad pushf enter pop int3 insl dec push lcall outsb repz add jmp jmp pop push cmp adc pop lret ja mov mov inc cli or pop add push (bad) pusha mov mov cmp mov inc push and lret into icebp les clc (bad) (bad) aam adc movsl cli xchg sbb inc (bad) roll fistp test jge sub popa jbe sub in out outsl imul pop or add movsl or rcr add dec les bnd and into fs sbb cmp repnz (bad) ficompl or pop fisubl cmpsl add mov mov jle jecxz ret mov gs fld loope dec mov jns mov jecxz sub cld loopne sub xchg dec jecxz mov loop add fsts (bad) cmpsb xor out cmp mov aad mov clc icebp jecxz cmp push stc xchg cmp xchg out fnsave lea pop and dec add pop lret jg push enter fildl daa push (bad) in fisubl bound cld xchg mov xor and into es cmc cmp insl js das adc icebp hlt test pop push mov or jnp and iret dec jb stc cltd xor jg mov lds jno inc es inc xchg test mov mov lea adcb xchg sub cmp dec (bad) xor push int cmp lret and inc mov setns cmpsl js hlt stos sbb cltd sbb xor xchg mov aaa popa pop or je adc cmc push shl jb sbb mov mov pop les cs xor push adcl imul inc cwtl les lds pop pop jno cmp mull loope add outsl add dec xlat add std sbb cltd dec jno pop and in mov fsts push xchg int int fildll cmp jl inc adc out (bad) jae sub push adc push cmp fistl mov jp dec jb movsl adc mov cmpsl inc js jl fisubr fisubl push adc loope jecxz lds addr16 in mov lea jbe xor (bad) and in (bad) sbb jg ror out xchg inc ret in out push pop lock pop lods xchg push inc shll scas add or mov lods sub sti push ljmp mov lcall insl xchg (bad) outsl fisub push (bad) sbb mov sbb fcomip js xchg rol jmp aaa (bad) dec sub push mov faddl dec inc movsl stos (bad) faddl pop and (bad) jbe pusha xor jno dec mov mov xlat adc cmpsb lods ss xchg icebp loopne inc les sub imul enter jl pop jae dec pop xchg xchg mov pop pop mov mov push fxch sbb dec adc insl inc xchg adc or clc outsl insb push pop xor or mov das (bad) cmc jecxz adc xchg call aaa push jb popa pop xchg sub cli jae,pt inc xor xor pop sub jo jecxz loop sbb lea jns ja js mov pop mov (bad) (bad) jl dec pop mov xchg push in mov sbb das (bad) jne hlt hlt mov mov iret and fldcw pop popf pop and jno insl repz cmp xchg add lock repz xor imul cli scas inc adc insb adc nop mov fsubl dec sbb push (bad) mov inc les xor daa jo inc loope ret xchg test imull push repz cmp ljmp (bad) push lock pop xor stos mov out push imul cmp sbb cmpl sub pop fdivr mov adc push test mov or push xchg roll scas imul ret jg xchg mov pusha xor inc pusha push fucomip or add stos sbb dec stc pushf fdiv mul dec clc adc cmp pop sbb fcompl adc imul dec cltd fnop (bad) sbb adc and jb inc xor xchg sbb or rclb pop push xchg mov incb fs nop mov mov pusha add insb adc mov imul sub jecxz inc dec mov xor inc pop mov out pop stc repz dec jmp lock mov jno clc jg call lea adc (bad) or and shrl cwtl pop int adc xchg mov mov shll mov mov loop and enter inc insl inc or iret xchg pop mov xor dec arpl insb cmovb inc dec rcrb test pop mov mov lods aas je jnp test imul add xor sub cmpsl mov in xchg sahf dec inc mov jmp add hlt sub xchg rcll push push data16 jb inc sbb pop fadds xor call (bad) cmp add mov xchg push push xchg dec xor push jbe adc and jb int3 int sbb push aad dec add dec push fcmovnbe pop push fbld pop cmpsl sarb push inc stos (bad) fstps jne popf jp out insl out mov lcall in cmp sti inc je pop das ss rolb ja jnp jno cmp out bound test push push aad js mov dec and fsts les aam popa loopne sbb movb js mov mov fsts jmp mov xchg popa ds bound inc and mull insl mov lods pop sub inc icebp sbb pop fsubrs xlat pop inc (bad) push xor cld ljmp insb xlat inc or and arpl or nop inc lcall out xor add lods fsincos movsl or sbb add test inc mov mov pop jno in iret pop fidivrl or hlt fstpl mov mov dec fwait xchg sarb xor pushf (bad) xchg or lret adc rolb test into js dec or daa mov (bad) fst xlat ret mov or pop mov pop stc iret idivb mov cli out mov repz sub push lahf add sub mov and fstpl sub fldcw and mov imul sbb jns jp mov clc fisubr jmp in (bad) lock data16 out aaa jmp loope push mov int3 fs ss or fcoms adc test xor lcall incb xor jbe jae lahf mov inc xor jnp js xchg dec fwait dec cmp (bad) cmp rep cmp push daa push faddl mov fwait mov out aam std iret lock pop (bad) push gs mov test xlat jae jp arpl clc mov into in mov push pop jp ljmp into sbb popa stos jne mov push mov cmpl xchg sbb add mov jne cmp mov push xchg ret (bad) push call insb xor push sti mov ret outsl call dec ljmp sti das sub sbb push lret scas xor or push mov inc and adc xor shr or xchg out add (bad) es inc push enter push gs or cmp sub jo (bad) bsr adc repnz pop movsb aam jge cltd cmp bound or dec and fwait sarl jne out mov adc cmp sub push xor jmp cmpsl sbbl xchg adc mov shr cmpb mov fidivl xor jae imul frstor jge fldcw rorb fs stc cli dec jne addr16 mov leave lods sub cmp sbb inc std ja cld mov push sbb adc sub out test test fbstp enter pop mov jno and js fldl dec or insl xor and push out aam jge divb dec les movsl call jb add or jb (bad) stos cmpsl jno adc mov int3 dec test inc icebp cmpsl jno sahf pop sbb adc std pop jbe cmpb adc inc inc sub xchg hlt mov mov out xchg ljmp scas icebp gs cld cltd dec imul xchg xchg jl inc loop mov leave mulb jae inc or stos ret mov fildl xor xor inc shll xor lret mov push leave movb roll push incb fwait pop cwtl jbe adc int3 mov push pop mov out and fmull leave mov adc lcall sub (bad) push xchg sub sti scas push pop pop mov in ljmp (bad) cwtl add sbb xor jg inc jae sbb pop xchg cltd ss roll dec lods xor jle mov sub hlt movsl and enter add dec or sbb std xor add push psllw cmp push fcompl iret and into sti repz iret cmpsb leave stos adc sbb cmpsl insl sub jmp dec xchg aad inc lds jns pop lret cmp out movsb cmp sub popa fwait clc push data16 imul leave cld and sbb loope pop aas in push icebp call sub pushf adc and jae daa imul jno arpl mov cmp xchg rcl inc cld add jb and popa mov push fucomip mov mov or sub xchg mov fidivr popf adc loop or ljmp in or test push dec mov int3 jae adc icebp in pop xchg or and rcrb inc negb xchg fiaddl stos cli sti xchg pop inc in mov je pop clc into mov aam (bad) xor xor fildl jge add das and sub jecxz mov jne jecxz cmp (bad) rorl ret ss sub push xor mov in std xchg ljmp jmp cmc stos cmpsl icebp dec add add pop jmp mov aaa xchg push and mov cli imull xchg aas in add stos aaa pop xor repz gs adc gs xor test scas pushl stos popa imul push lret pop cs imul add pusha lock inc push sub (bad) in jae dec lahf int sbb mov aas sub adc pushf js lcall imul and xorl repnz vmovntps pop add lret sbb push xchg xchg ss pop xchg mov or imul loope sbb add pop cmc mov (bad) cmp sahf std cld mov int3 movsl sub test lods adc inc test sub fadd lret jns repz xor andl aad push push movsl scas adc int3 mov in hlt xchg scas jmp clc data16 dec push pop lret test xor mov dec sub outsl cld orl sahf fnstenv (bad) test or pop pusha jle stc jne popf push pop enter inc enter bswap mov data16 jg icebp jnp addr16 mov dec jle pop and movsb imul cld aad inc or dec pop cld adc push or sub or and pop hlt push test shrb sbbl hlt push imul push and mov test scas ljmp adc jp or jo mov ret mov xchg push cmp mov fimull jbe addr16 (bad) mov leave adc scas sub xchg sub into inc int bound rclb dec cmpsb cld imul sub dec lds cmp jo jnp lods outsb popf inc scas sub mov (bad) cmp mov mov or mov sub cmp aam jge rcrl aaa dec fwait and test jecxz mov jns insb jl sbb aad scas roll inc sub andb push inc mov inc push daa push dec cmp cmp push mov (bad) arpl lea and inc loope shrb ljmp popf pop jns (bad) jo js (bad) jmp and add xor (bad) into outsb les or dec push push mov test rcl pop dec fdivp sbb pop (bad) mov ret mov sti pop and xchg or imul or into push sahf into mov push aaa sub mov dec sub adc sub aam sbb mov add shll es lret mov and push xchg pushf adc fwait cmpsb xor xor push pop inc dec enter fwait lods lds xchg fistpll push std mov rsm jg dec out xchg in xor pop fidivr test push mov mov addr16 mov mov nopl movsl or repnz jmp inc and aad cmc in outsb mul aad pop inc sub loope ja jnp loope and mov sti pop dec add push add push fild fildll mov dec push xchg xor out out stc das fwait inc cmpsb mov mov outsl jne lods and gs cli xchg out mov out dec (bad) cmp ret adc push jo xchg pop pop sub test lahf xor flds mov add jp popa push and adc clc imul xor sbb lods mov jb aad imul pushf and dec cmp repz and imul mov loop iret inc flds pop pop lods jne ret addl xor pop fsubrl jge xchg pop dec jmp cmpsl lods loopne sbb popa xchg add jne aam loopne ret imul xlat jo adc ss cmp fcoml clc in inc xchg (bad) push fbld pusha jle aad xor xor xchg mov cmp push jg loope insl and mov (bad) ret jl ficoml jb sub loopne aas jne pop jmp dec mov (bad) sbb cmp stc jl cmp mov (bad) fxch leave mov sti inc clc imul adc scas scas cmp ret test dec push jae dec adc push es sub dec in sbb mov (bad) lret xchg or fdivrl xor aaa fwait (bad) (bad) mov decb xlat mov mov or and pop pop daa mov fldcw push cmc sbb xlat jle pop shrb inc push mov nop or (bad) pop push (bad) and or dec adc js into (bad) rclb icebp cmpsl scas repz aam mov out adc je int xor clc add mov pop in out xchg push movsl adc out sub rclb inc adc imul inc jge mov cld inc adc insl adc ret mov xor dec js xlat xlat je scas std jae mov idivl movsl push into inc pop jbe mov mov adc adc mov pop gs popl xchg stos mov and in add xchg mov movsb jg lret mov dec mov fs (bad) out jp lret push cld pop hlt pusha test xchg (bad) mov loopne inc adc dec int3 bound out lret dec dec out scas xchg out jmp jns in adc pushf xchg push (bad) les mov xchg lods or lods das cmp ds outsb (bad) and cs icebp jp cli push push cltd sub test (bad) icebp pop add cmp sub lahf adc mov or cmc adc mov (bad) sbb les adc sbb jbe or or inc jbe addl jg sahf mov mov imulb inc ss jmp and in popf and ds pop adc cmpsl dec jmp fistl cmp fs das fcompl test repnz out fdivrp addr16 fs mov sarl cwtl sahf sbb pop cmp push jns pop loop pop mov pop ficompl les mov sarb orl and ljmp jge stos xchg mov xor adc bound and add pusha mov imul mov insb and jae add fisubr test mov and pop xchg rcl mov jp je push mov push test mov sbb dec and inc push mov pop mov adc add in clc or (bad) jne pusha inc pop out pop les cli push push jmp lret lcall fwait cmp ret (bad) aam bound pushw (bad) dec jle adc dec movsb xchg xor mov mov push mov dec outsb pop pop test lret stc jne loop pop jp push jmp push pop es mov dec xchg jecxz push cmp je and xor push fwait daa leave pop bound sbb xchg shlb pop out add sub enter sbb and les mov pop xchg mov xchg mov dec sbb xchg pop cmp sbb sbb push (bad) daa loope mov xor cmpsb gs jno xor sub inc or (bad) mov (bad) add xor lds sbbl mov adc jecxz dec nop cs cmpb (bad) sub or movsl pop imul popf or iret addr16 adc jbe test insl stos cmp pushf mov lods mov cmp or rorl push ss sub mulb push sbb xor cmpsb int3 adc loope add ret jge pop pop or arpl xor mov and aas push insl xor imulb xor enter loopne pop cvttps2pi push add lahf popf iret inc fnstenv ret repz add add ss into push fwait cmpsb rclb outsl add or or nop movsb jg sub or mov (bad) cmp pop cmpsl popa inc sbb lret add call push pop add and or sub cltd les or aas idivl push add mov test (bad) (bad) ljmp xchg test mov out call jmp push add or add jecxz or sub lds std mov paddb int3 xchg inc jge lahf jbe cmp fs pop bound pop ja cmpsb aas push lods mov repnz jnp imul add ja rolb pop push jae adc inc addr16 insb punpckhdq (bad) in ficompl jb inc push mov and stc shr xchg call jp and mov inc adc cs add sub inc xchg and mov push (bad) call jb clc add aam dec (bad) in push mov nop mov pop test lret xor push les pop xor mov jle int3 stos icebp and xor inc jno lret in sbb adcl push push js xchg ret pushf mov (bad) dec fwait adc sub (bad) scas mov enter cmp cmp dec xor (bad) jg (bad) pushl lods inc mov and dec dec mov jle nop inc mov xor jg loop fwait aas loopne sub negl push repz fadd mov push data16 jbe in popa pop pop mull xlat ja cli lods ret cmpsl adc lods jb out pop dec rdmsr scas pop xchg pop aas lcall push or push (bad) out adc adc sub aas jo es xchg ja iret jp mov pop sahf scas and (bad) hlt lea and fbld daa in inc cmp jb cmpsb pop daa add pushf gs cmpsl inc lcall cmp jbe std inc cmpsb jge movl push sbb dec paddsb and call cwtl bound js fs mov lods aaa (bad) mov inc mov mov insl mov inc lds repz pop in push jo cmpl mov fadds enter jnp,pt lods and (bad) push push cs mov leave sub aaa mov loope iret mov sub test (bad) mov mov repnz rorl test test jnp mov ret xor mov cld cmp ljmp or mov lea xchg enter adc in push jbe pop into cmp mov mov test inc pop sbb arpl loop pop gs sub and jge or sbb adc mulb xchg push add out movzbl or insb xchg xchg sbb int3 rcr mov and jnp dec test aad insb outsb pusha sub jge les insl push mov add sbb mov push pop dec shll loope xchg ficom lahf repnz pop push jbe lahf pushw cs mov hlt arpl jo repnz adc and (bad) sub lret addr16 push xor sbb and subl mov sub sbb lods rclb (bad) (bad) das rcl lock push stc loope insl push adc lea and jle mov fimull adc adc mov or xchg call xor sbb fstpl cmpsb jmp nop xchg pop and hlt xchg pop xor sar jmp pop push pushl xchg sbb nop in jae (bad) daa test icebp aam pusha sti faddl dec mov cltd push cltd (bad) add or bound lods push fdivl (bad) out aaa pop (bad) pop pop sub push fldt insb es sub cmp dec sahf dec lds mov mov push out aad cmp push ja jnp aad push loopne jae test test mov rorl test jmp or fimul fdivs push nop ja lods (bad) out jne dec lret pop and cmp pusha adc adc out dec test roll outsl jl je (bad) sub jae and test stc mov add mov je lea (bad) xlat inc stos mov pop xchg and hlt adc aas xchg cs jle mov pop (bad) mov dec add sbb and gs out or mov sub (bad) lods mov xlat iret fwait cmp in sbb (bad) aas xor icebp hlt les (bad) adc xchg cmp (bad) xchg arpl aad xor sub in xchg pop sbb adc jns or ret push (bad) aad inc xchg mov in or in (bad) cmp cmp clc sbb sbb clc nop movsl and inc cmp mov (bad) jne popf mov fisubr inc dec xchg mov cli jb scas stc adc cmp jecxz ds addr16 push (bad) je dec into xor lcall pop out std fnstsw lahf mov lret mov xchg pusha rcrb rorl lret (bad) and inc mov fmul arpl imul sub cmpsb push mov xchg xchg outsb push push lret pop and adc leave sbb xchg and mov mov movsb inc fisubr ljmp sub jbe push mov sub mov sahf stos pusha dec out mov xchg xor stc dec adc iret ret cmpsb dec movsl sub ds inc inc cld cmp mov test pop xor jne mov pop inc or in (bad) fidiv cs jae add mov movsb lds cmp das cmp ljmp lahf movsb cmpsb jl xchg pop (bad) mov push mov sbb aas xor adc test pusha push pop adc in aas stos sbb div cmp sar push mov and in sbb sbb fnsave movsl dec shll mov call lock lcall add pop pop jmp mov loope jae (bad) push mov jb jns dec clc jp ret sub insb dec sbb xchg push pop sub add xor movsb outsb push or sbb loopne adc rclb aaa pop inc add fdivp les mov xor push sbb das mov imul jno dec fisttpl mov pop lock inc stos pop daa adc cmp mull xor push xor mov jo sarb in call cmc mov mov movsl es dec in rorb loope push inc xor sub push xchg sbb cmc fildl aad gs mov sub lods mov jecxz xchg das jle cmp cmp out or pop fnstsw subb outsb push pop jecxz mov icebp or mov inc dec push push mov adc push pushf lods rcll adc xlat outsl aaa scas or faddl fs lea fldl sarb cmpsl or (bad) mov scas sub leave fisubl pop mov in daa push cmp (bad) sti xor imul in in sbb addr16 and test adc sub insb and pop push rolb pop mov addr16 mov jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) aas add incl mov jge pop add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add jnp add add or or add or add add add pop or add add mull add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add cmp push js in xlat ret jp or insl (bad) mov mov (bad) ss jg out idivb test or loopne add add dec or lret inc loopne mov inc cwtl int3 push dec xchg lea xchg je adc xchg stos (bad) xlat jmp shrb out mov ds js mov xchg fisttpl enter gs lcall push push popa sbb xchg (bad) xor xchg xchg repnz fnop or add insl inc pop popf mov aas dec in mov scas mov mov sarl mov mov mov mov jg roll test stc pop cltd push mov pushf pop sub pop cli xchg sbb jns (bad) mov stc mov rorb sbb les ret xchg lahf pop icebp stos test movsl int pminsw xorb mov adc push int3 enter fnsave daa add jb xchg pop or dec (bad) xor cwtl ficompl icebp xor (bad) xlat add jbe push cli (bad) push cs aad cmp repnz data16 in out (bad) mov xchg shlb xor in adc pop jge pop mov insl jg clc mov in (bad) push cmp movsb push aaa mov lods jns out jg mov fldcw push pop rclb pop jle in ljmp xor dec dec pusha into jg sbb (bad) (bad) ljmp testl mov aas sub xchg sub mov xchg loop pop add scas ret aad or xchg xor mov sbb dec dec sub lods movsb xchg mov jl insl mov gs test xchg bound mov or ds push subl (bad) icebp push adc add lods adc cli das jo,pn push in repnz cmp jns int (bad) ja cmp lods (bad) clc or xchg dec imul xor fwait cmp out adcb xor mov xorb daa jae adc loope mov sti (bad) arpl mov pushf js mov iret mov push das ds icebp adc adc lock mov (bad) pop jl sub or std out pusha jg out imul cmp mov cs ror (bad) mov push mov mov pop lea in or jne std movsb leave dec dec inc push pop jge int3 repz jmp and adc fidivr jmp cmp out pop mov in mov ss jnp cmp jmp sub jg scas xor xor fstpl add xlat fwait mov push mov jg lcall mov (bad) fs sbb cmp sub xlat mov mov ds aas sbb sarb test lret subl and mov and out push push pop (bad) dec pop jnp xlat ds lea lret lods call (bad) (bad) jnp adc inc push fcmovb das lahf repnz or adc jg mov inc jo mov adc sbb mov aad adc insl pop fild cmc mov mov adc fs shrl sbb rcr mov inc mov repnz jp mov das mov je push ljmp mov je inc jbe sub test (bad) jbe mov push xor sbb mov lea (bad) aad add loop in sbb dec ss push and xlat shrb test and push dec into sbb lret loope cmp xchg lcall aad push mov call insb push sti mov push push push sbb add xor nop cmp sbb mov loop mov sub fdivrs push add sub dec test ljmp sbb jnp bound jp xchg xchg test xchg leave mov popf cmpsb cld add dec mov scas mov scas loopne pushf pop rcrl mov push andl inc mov mov xor pop pop loope jmp test cmc add lock hlt xchg test adc test test psllq movsb cmpsb xor in add jmp inc fistl sub add push sti fisttpll dec aas sbb test stos lcall imul fs and out xchg ljmp rcll mov xchg ds icebp mov dec test lds ficoml push mov sub and lahf addl push and imul mov aaa pop dec xor icebp inc mov outsl scas xor add xor adc test mov bound cmp jnp pop pop (bad) pop stos in gs stos mov xor sub arpl cmp pop xchg add and (bad) push cmp stos in leave push mov sahf mov xor adc pop and aas jno pcmpgtd out jb je sub insl inc rcrl loopne hlt cwtl int out jecxz cmp ja mov lods add mov (bad) scas mov lds inc jns mov cld xor movb cmp xlat dec sub mov sbb add aad bound ret stc ret inc fs xlat int3 jnp es cld aaa scas scas and jmp and sub test js pop lret dec fcmovne scas psrad insb (bad) dec psllq sbb insl add xor xchg add jg (bad) fcoms in std pop xchg cmpsb inc cltd (bad) icebp addl mov dec inc adc mov imul xchg jecxz and inc js sti mov iret mov cmp pop mov push (bad) test jg out fbld sub cmp inc sub push (bad) dec xchg (bad) pop inc test and not popa lret decb insl push fs fwait mov stos andl mov dec dec stos inc mov roll push mov push mov xor outsb orl pushf cmp cli adc pushf jg cmp mov sub cltd mov add and lods xor cmpsb out add mov cltd pop push or out and out push jmp mov (bad) hlt mov jge sub (bad) and xchg mov xor call cmp and mov push lcall xor push cld test xchg enter xchg mov sbb jl mov sbb lds test ret pusha cmp mov mov (bad) push cmp mov mov aam jo adc pop mov cmc inc dec inc cmpsl mov mov data16 out sahf or and aas xchg cmp sti stos mov leave push aas pop loop jb xchg lea mov enter fidivl lret pop mov lea popa in data16 js lods cmp jp sub mov mov mov shr dec inc insb ret sarb dec orl push push xlat cmp iret sarb dec pop xchg repnz mov popf jl cmp (bad) int3 in ja test pop inc bnd jns mov push pop sbb pop xor rclb inc pop add les push add pop sbb out jno cmc (bad) stos mov xor inc jns lea sub mov jbe jne mov test shrl (bad) mov (bad) lahf mov push in lods outsb lret scas cltd sbb lods rolb jae mov pusha mov mov sub mov popf or dec dec mov xor adc sbb push mov enter cmp jbe push lret jae rorb dec xor iret sbb fiaddl jnp xlat mov mov fwait dec mov addr16 pop lret push mov insb jecxz inc aam test cmp mov or cmp add lods and pop (bad) push loope adc cltd mov cld jno cli cmpsb addr16 and jge xchg xor cmpsb pop es xchg pop iret inc lret xchg mov (bad) push and mov push sbb xchg pop inc mov push sbb mov sbb xchg or jae cli mov jbe adcl sub pop push aad imul xor cmp fmul fidivl xor adc mov ror call pop mov dec aam adc mov jp xchg lods shlb lods xlat xlat xchg mov mov outsb ljmp cmc jge adc xchg pushf inc ss ja imulb push stc iret cs push dec xchg in cltd fs xchg lahf aam lock (bad) in mov enter dec lods pop out andl inc dec imul ljmp jl roll insl mov mov mov cmpsl stc cmp mov das stc movsl inc dec outsb out (bad) cwtl mov inc loopne lods ljmp mov cmp inc pop test add in cmp stos lock mov flds and dec inc mov push mov es cmpl xor pop push mov jle fcomps clc jb cwtl add (bad) and iret xchg mov sub push mov jb insl adc lods scas mov (bad) mulb mov jo test and arpl or sarb push std aaa ret cmpsl jb lods es js icebp dec mov fdiv add lcall adc inc scas je mov fucom lea xchg out adc cmpsl pop mov pop cmp (bad) pop sub in jge cmpsl sub pop aad stos shlb (bad) push sahf and mov mov ja sti lret xor aad scas xchg lock or (bad) mov fsts sub dec gs lahf mov mov jl push inc ss and mov push ds xchg lds sbb jp hlt (bad) mov jo lret sbb inc pushl or imul aas sbb dec ficoml xor ficompl test and and adc addr16 mov sahf or xchg push xchg add cmp add addb push mov mov mov push cwtl xlat outsb insb cmp cmp test sub adc or sbb adc push sub (bad) mov lret stos leave iret dec xor dec inc fcomi daa mov lret and and ret jbe fcmovne inc shr xor rorl add mov cld (bad) lock outsb jecxz cvtdq2ps dec push iret jp int jl insb jmp or (bad) cmpsl mov dec pop mov out pop push dec push sarl mov aaa mov jno insl fimull dec jbe cltd sub xor adc jnp loop and xor enter adc shrb js add loope,pt stc ds shrb xchg sub ljmp inc gs fild aam icebp adc dec add sub jle jge rcll (bad) mov cmpsl outsb fs outsb pop ja aad jnp adc es je mov cs pop (bad) cmp jp adc (bad) adc xchg push sub mov lahf mov sbb xor mov dec xor adcl repz pop push inc sub outsl mov cmp mov rcrl mov int3 and adc cmp sbb loope mov inc xchg cmpsb jmp fucom jne xchg sub push lret add adc movsb repnz jo push sub push repnz mov push sbb loop mov add js sub inc scas mov adc in das int3 cmp push lods pop push mov (bad) mov mov (bad) mov ds sahf stos out mov or cmp adc scas aas dec push outsl inc cltd mov dec adc inc adc mov int xchg in cmp mov and mov xchg add in imul jnp les and inc rol popf lcall sub cmovno mov icebp add mov xlat xor gs xchg mov es add or lret push mov inc test sbb icebp insb daa inc xlat inc and pop not lcall leave and (bad) enter mov fmull or dec mov mov movsl subl scas out ret xor push popa or mov es in xchg and mov mov lock mov ret mov fwait jne add pop mov xchg mov std mov rcrb ror negl xchg stos jge sbb jo dec mov adc mov stos inc xchg pop push test xchg push mov outsl (bad) jno (bad) dec sarb jno cmp movsb nop and mul push movsb jne popl addl stos inc out mov out lahf cmp pop repnz jp pop mov xor jmp test fstl mov mov clc lret adc pop popa jl jno sub xchg popf sti add dec sti mov jl dec xchg cmp fcmove sti std outsl sbb sar and (bad) cltd loope vpaddw int out xchg js cmp push jbe push stc outsl hlt idiv mov lcall in push jp repnz mulb mov in push xor hlt mov push add and xor pushf in push push hlt repnz mov mov jle icebp out fnstenv imul sti out mov loop push and mov scas sbb mov xchg add (bad) rorb push in cmp idivl (bad) (bad) xor clc mov pop cli ret mov les fcomi sbb sti cmp (bad) jo ljmp mov xchg mov cs jno hlt mov dec movsl scas rcr mov arpl jb dec push in (bad) mov jnp int outsl rcll out pop ja xor cmp adc pop pop pop sbb mov xor mov dec (bad) jb push inc xchg jae cmp shlb ds cli pop jbe imul pop and es jo enter inc movb and and cwtl inc data16 dec dec test ja mov jae pop or pop orb and incl bound push pop xchg dec insl mov and pop out add fstpl cld ss insb and mov lcall pop stc mov sub pop aam fnop mov gs cwtl dec addr16 ror push mov stos cmp push loopne arpl pop test stos jb dec leave sub (bad) mov add imul popf loop imul xlat (bad) cmc outsl enter jmp imul cs imul xchg movb cld lret add add fcmovbe fisubr mov movsb pushf ret cld sub xchg dec cmpsl cmpl mov mov imul mov lcall movsb cmpsl mov (bad) jo shl insl (bad) push aaa (bad) stc mov sti (bad) or stc mov (bad) addr16 les dec divb push add dec orl mov lods repnz int cli sahf inc loopne mov and pop into fwait add adc push add xor pop adc mov cmp pop add add shlb in outsb lret int cmp lret iret push and inc push repnz or and imul dec scas jmp arpl cmp nop pop mov dec lahf out jg ficompl jp pop sti sbb hlt vmovaps jmp cltd out repnz jmp push lcall or mov mov das mov lret cmp mov or cmp ss in or jmp lods inc xchg add ds add mov popa jb mov inc xor sbb xor mov or out dec jp in call rolb int sub dec add call cltd cmp mov pop (bad) ja loop scas (bad) mov adc jns test push sub inc inc mov push cmc cmpsl inc jmp and jg xchg bound in or jo mov xchg ret pop roll xchg in inc (bad) cwtl adc int3 lret cmp sbb loopne mov and les push and inc sbb (bad) rolb pop das jg mov lods stos and xchg icebp fcoms roll popa or mov repz xchg loopne add stos popa mov xchg aaa and mov ret movhps cmpsb xlat loope inc cli orl or fimul mov inc pusha inc (bad) pop cltd jp test pop lds repz fwait adc jg test je push into rorb sahf shrl movsl xchg loopne push movsb xor mov and cmp cld sbb cmp fmuls (bad) mov lods loope cmp jb repz stc sbb xchg pop lods jmp jge sar shrb aam shll cmpl adc movsb mov lds jo js das loopne adc mov push pusha mov cmp jl add mov pop out cmp outsb adc mov hlt and out xchg xor (bad) mov sbb pop subb test popf test mov or push out imul jbe ja mov fcmove int3 sub fistl movsl sbb aad xor push aas pop jns addb hlt lea dec (bad) xchg jb ficom scas fistl sbbl gs and pop and sbb mov mulb dec jo (bad) stos xchg mov mov pop dec xchg sbb cmp adc mov stc sbb lods int xor mov sbb mov outsb dec push adc ret xlat lods xchg cmpsl pop sti jle in sub or xabort xchg (bad) std sub mov imul pushf addr16 cwtl iret and mov mov cmc hlt repz cld mov pop adc jns inc sahf dec mov add mov cld mov and cs ss or cmp adc out bound xor pop mov or mov mov push cld jbe adcl sarl mov ljmp (bad) movsl and js adc es int add xor (bad) push fstpl and loop jb jae ret sti fistl push sub jb mov dec jl dec inc test sub lret fs mov jle and xor inc push mov jno xor push scas mov push inc arpl (bad) or in lds movsl loope pop repnz push mov cmp sbb xlat fstps leave mov rolb jmp inc sbb jg or sbb nop inc into sub aad xchg std data16 mov test jns mov sahf pop and xchg js mov jecxz lret std mov or outsl sarb in jns jg in push loope into mov test sbb das jne cmpsb out aaa fisttp jae and push cmp in insl xor loopne out cs jbe push or mov push mov mov rdmsr sti outsl mov mov or sbb jbe dec nop mov jb call mov adcl mov push lahf test and adc jg insb mov (bad) (bad) gs sub add mov jb fcoms pop sbb xlat inc mov sub pop stos test iret xor adc in lahf jnp and adc or push ror push into mov outsl xchg fstp (bad) mov dec rol mov and xor xor or xchg movl pop pop pop loope add sub pop aas sub jnp jl mov mov addr16 es jno xchg sub pushf fincstp es sti cld loope jnp test movsb push dec push jmp xchg and mov rolb and aas or sbb jne push sub and ret sar cmc shrb add pushf lea and xchg bound inc mov mov jae dec arpl sahf cs rolb lcall sbb imul frstor pop sbb (bad) cmp sarb int3 out mov xor in stos mov into fs dec mov negb out test mov mov sub iret jb mov enter popa jnp cmpsl out fisttpl jl scas and pop and cmp movsl jle mov and loope or sub (bad) mov xlat adc sub cli lods jo inc sub aad ret xchg pop in cld push fmuls mov or pop adc or adc xchg sub jg and mov push dec cmp inc ljmp inc pop (bad) in add pushf dec xor pop jb repnz inc cmpsl cmp mov jb scas cli add jbe cmp into and fistl std (bad) lea mov (bad) xchg aam cld cmp inc and dec mov xor mov push mov or pop xchg mov sub sub xor jle or mov xchg jae push xchg orl inc aad sbb sub lds fcoms outsb xor mov stos pop fcoms push fnop lods or (bad) dec repnz mov insl mov in outsb arpl addr16 test testl jo daa popa inc addr16 jl xor sbb syscall pop jb subl xor (bad) mov xor ljmp stc test mov gs push outsb bound movsl add xchg sbb or (bad) add pop sbb jecxz cmc xchg fucomip jno (bad) (bad) nop (bad) adc sub sub push gs inc push shrb mov movsl (bad) xor jmp jbe lods push mov mov add push push jmp data16 jae fimul jns arpl movsb faddl xor scas mov add jle imul out mov test cmpsl clc out jle and push and movsl movsl test mov add int icebp in inc sbb loopne xor fwait lock inc cli fidivl xor xchg jae mov gs fdivs test xchg xlat sbb divl lret mov rolb mov push cmp add jne gs add jl out loope cmp mov and add loop inc addl shrb cld popl lods in sti cwtl inc mov out imul lods mov push lea loop mov ss cltd bound stos add out ljmp mov loopne lock inc and fdivrs cmp ds dec push or mov mov notb arpl (bad) xor jne fsub adc xchg test mov sahf jecxz ljmp mov out sbb shlb loopne pusha mov movsl ret movsb pop movb adcl pop ss orl cmc cltd mov or mov mov bound movsb lret jecxz mov push adc mov imul fsubrl insb or ja nop and movsb lret jmp ret mov mov dec inc sbb xchg jp push xchg pop inc aaa inc popf test pop test icebp test into out adc cltd lea push (bad) sub dec sti imul cmp push jae inc sahf and add out inc xlat (bad) xor ret sbb sbb xor subl push clc sub xor mov (bad) sbbb pop sarl sub stos insl sbb add imul rorl sbb aam inc cmp lahf dec stos mov pop cmc mov or mov xchg test inc jmp mov jns mov sbb sub xor les daa dec daa dec adc mov mov fbld xor mov fsubl inc (bad) dec data16 daa test cli inc andl lea popf cmp mov add inc cltd sbb lods mov mov xchg push int3 dec mov inc mov push aam jmp dec push daa je loope jno out cmp sub outsl jnp loop inc mov dec pop push (bad) icebp and sbb (bad) out pop sub jae inc cmpsb lock aaa and push pushf mov mov in lea pop cmp ljmp add dec cmp fldenv cmpsb int inc stos faddl sbb pop loopne daa cmovp mov pop neg fstpt dec rol shrb enter mov stos jg mov adc out pop cmpsb jns mov movsb loop adc and and int pop nopl (bad) arpl ljmp cli push push shll mov dec mov aas ja out cwtl int3 ja sub sbb sbb jb scas adc jbe das outsl pop nop add add cmp ffree mov call xchg jns aaa fdivl (bad) cmc test cli shrl jne mov ljmp fsubrs pop jle fs mov pop test dec mov int3 hlt pop adc int3 lcall push cmp xchg xor fstps or sub pop or push or jecxz ret imul mov inc fdivrl jne add aas sub mulb in icebp test (bad) mov cmp or xor adc imul in sbb xor cmc lods in cs cmp mov adc sbbl mov and push std jge mov (bad) sarl mov push jecxz test ffree xor mov xchg jo into inc inc test add add xor inc add push in (bad) pop sbb push mov dec push jo xchg iret fwait sahf xchg and add mov shl out outsl scas (bad) rcrb ret test into cld push and cli adc xchg daa jne push enter and imul sbb pusha in jl mov call fwait xchg sub push sbb mov (bad) push cmp cmp jl dec (bad) nop jmp sub cli adc push ret ss outsl scas adc and sbb shl and inc les sub mov push insb fstl dec fnstcw or lods cld sbb cli stos in inc inc iret and out pop pop or test dec (bad) call (bad) pop cmpsl push jne ds (bad) sbb mov mov cmpb arpl mov add xchg and push add pop jp jle cmpsb fiadd in roll mov in sbb add sub and lret fcompl pushf pop int3 addr16 jmp mov sarl mov jg fldenv ror lret (bad) cld mov mov xor mov pop sub div adc pop dec daa mov std add sbb pop xor and adc outsl stos les dec mov or packssdw cmc loope decb mov sbb bnd call xchg fildl xor or mov das sbbl test cmp cld mov dec dec outsl mov xchg xchg (bad) mov test (bad) cli rcrb inc fwait out xor xor lahf mov or cli orl inc pop xchg add stos (bad) (bad) cltd jo sti and bnd decl jae mov int3 fmull and xor ds jmp rcll cmpsl mov adc xchg aas add shlb mov jno pop out sbb mov jg ds or popa imul loop ss sbb scas mov jae xor lret sti jnp jne sub mov sbb xchg loope sub lahf pop out adc pusha mov mov xchg xlat inc and and pop subb addr16 test dec adc mull xchg mov mov mov cmpsl add dec int3 or push hlt cmp jle (bad) (bad) fldenv push imul movsb dec in xor into or ret push jge sub and sbb jle sbb and mov shl dec push leave movlps scas jecxz push jge emms int3 inc mov fidivr aam pop lahf jecxz or aam mov out (bad) fstps cmp jp cmp mov adc jmp fsubs in (bad) jno lret jae jno pop mov fmulp sub lock adc xchg inc orl addr16 sub icebp jmp (bad) lds lods scas movsl xchg hlt (bad) dec mov in mov andb cmc xor or or dec mov push mov fs inc cli lods mov adcb into xor dec pop ret inc push dec inc xor mov sbb out and stos fstpl repz add fwait xchg push xchg test cmpsl pop sbb jnp std rorb fildl sar cli mov add push imul jl push stc mov mov mov gs xor subl sbb xor in call mov push inc js mov mov or aam pop rorb mov mov nop (bad) out leave fs fsubrs int dec cltd std mov mull sahf sub sub push xchg add and idivb push test scas jo xor out insl and xchg scas xchg fcmovbe lods mov movsl ret cmpsl fstpt das outsl out pop loop sub push sbb roll inc fwait dec mov lods into mov adc mov jge jg cmp lret stos dec sbb out dec es sub xchg mov adc andb addl (bad) repz cld jnp inc lds xor addl aam insb test aas movsb xchg (bad) and pop adc pop lods adc pushf or (bad) cmp jle ret mov or movsl xchg sub loope xor inc js pusha sub mov ljmp cs cmp addr16 xchg cmp cld push or and test iret das push imul add int ror pop adc dec pop pop mov loopne jae xor inc inc jnp pop shll int cmp cmp or enter (bad) fisubrl test inc mov sar sub mov jecxz sbbl int3 es mov or (bad) mov jnp (bad) out pop push pop stos imul arpl out je cltd and mov cld outsl or (bad) fs mov and js sub inc push add inc xchg out ret fildll dec xchg je push mov inc lods dec xchg js sbb add (bad) fdiv aam sarl cmp xor nop dec xchg lcall nop adc sub and adc sub notb out scas scas lods imul lahf inc or int adc add dec xor out test es cmp xchg xchg cmc jmp fmuls imul nop jecxz popf mov cmpsl mov jl ja nop fwait insl push mov outsb push scas mov andl pop cmp rorb sub mov mov pop aad sahf jbe stc aas repz xor adc scas pop xorb hlt popf loop jl es mov nop imul in inc dec mov loopne sbb aaa stos in mov fcompl jno or loope (bad) dec loope fcoml bnd mov call cmpsb insb les jbe xchg jns cmp fmuls jmp mov pop les fmuls loopne scas sbb fs cltd (bad) imulb test inc mov adc push add icebp mov pop or cli sbbl mov push xor ja dec mov sahf test inc inc sbb jmp cli int je mov xchg cmp rclb sbb int jge sti sub add xchg jl rclb sbb fidivr dec xchg push pop mov shrb sbb mov nop sahf and (bad) aam repnz call and nop mov (bad) cmc inc lock mov test ds loop fcmovb gs xorb xchg jns jne aam xor hlt (bad) dec and outsl push fistp mov jae push movb (bad) cmp (bad) (bad) scas loop and lods (bad) jbe lea adcl and ss rcll out cmp (bad) jmp push jle out aad mov sahf movl call dec pushf (bad) jo sbb (bad) call fwait jecxz adc cli fwait test arpl sbb je ret jge or test mov out fildl pop add out mov das add mov das daa jecxz lea mov sti push outsb in out pop lcall js int cmp cs xchg xor inc das cmp lret scas (bad) gs loope push pusha mov hlt (bad) (bad) cmc sbb das je popa or shll or cmp add movsl add xchg push int dec lock mov dec addr16 cwtl rolb (bad) pop cwtl xchg add and cwtl jne push test (bad) mov adc sub add sbb pop push lods frstor movsl and jle xor mov test (bad) sub pusha or xor sub and sbb and dec inc les xor cmpsl imul dec pop stos enter xor lahf inc mov nop mov pop jb test hlt jbe mov or sbb insl add sub jb xchg and stc xchg loop addr16 andl in xor repz mov (bad) ljmp adc push cld arpl cmpsb cmp out inc mov addr16 pop mov repnz fs jbe adc pop cmp repz mov (bad) mov enter ljmp pop cld fsubrs rcll cmpsl inc pxor mov mov cmpsb mov adc scas jno xchg push sarb negb mov outsb adc mov xchg scas jno cli (bad) mov jne bound pop mov jg xor insl arpl pop fistl inc faddl jb and negb movzwl lods cmp and mov int cmpsb dec gs nop fnstenv and xchg adc sbb out cli out dec outsl fnsetpm(287 adc sbb ret cmp lahf movsb daa out mov scas les cmc xor push jle xor icebp roll mov ss xor jecxz mov dec aad lret fsts inc pop jno stc pop sub addb lock fstpt sbb ret or mov movsl and jae in hlt jae and cmpsb or out add inc mov outsb jbe push pop (bad) mov mov aas sbb je xchg jno jbe adc int sbb sub outsb adc or cmp ljmp jmp in push testl andl bound adc dec xor loopne sbb outsl shl jle push mov jns movsb lock cld mov enter mov mov ljmpw mov mov leave neg xor pusha ds inc mov mov mov das cwtl mov add test in int cmpsl sbb mov or cmpl jns (bad) ret enter mov adc addr16 mov sub in jnp (bad) gs mov loope pop xor divl jle dec mov xchg cltd dec dec fucomip clc and imul jl das push and adc in mov icebp push pop cmc add cltd push cmp shr pop adc xchg xor jg push loop fwait stos fs (bad) adc je loopne scas repnz lock repnz fcompl outsl in xor xor in pop jo xor cmp repnz mov or dec push sub lret stc sbb das or loopne stos mov mov flds and push xchg mov push (bad) jb add push in fisubr xchg das or int stos cld mov jno scas fimul jnp mov std cmp adc mov pushf push push sub cld mov xor mov push sbb outsb in lock cli sbb popa mov mov cmpsl (bad) in fnop cmp in jnp and add mov jno push xchg push jecxz or and push push gs xchg or cmp js lcall mov mov pop push sbb loope pop inc into in inc sub (bad) loop cmp and ljmp dec pop sahf xor call xchg adc rol fidivr popa cmp xchg push ret mov push pop (bad) adc imul xchg enter or jle cli (bad) jae add sbb lea jg sub mov xchg and or cltd mov insl pop lea sti je ss loopne xorb cld daa out jg pop aas jmp mov add or cmc rcl dec mov out sub or push inc insl pop and popa imul pusha je mov rolb inc outsl fwait xor scas push test aas adc scas enter push sbb std out dec inc mov in into ljmp dec mov add jp push or out lods (bad) hlt xchg sbb imul loop or nop bound add add movsl lods dec pop and adc es xor xchg outsb inc std aaa les mov pusha mov cmp cmp dec push std (bad) (bad) mov jecxz stc adc aas sbb iret mov inc cltd xlat or jp movsl ror fs push scas sub adc push inc and mov inc and insb cs push sub mov sbb xchg xchg push stos stos leave scas push (bad) push dec sub dec or adc push push mov sub mov add (bad) mov and daa mov cmp ret fwait outsb mov cmp dec ja dec movsl xor sub das adc dec lds dec cpuid aad jge dec sti xchg std mov fcomps out xlat outsb daa fildll loopne xor mov mov or pushf dec mov sbb push shrb push aas mov mov dec insb mov xchg xor in rorl call mov popf xchg (bad) pop sub fildl mov xchg lods cwtl repz lods xchg mov aas sub lods push jne mov scas das pop inc xchg addr16 dec fwait cld sbb push xor inc cmpsl jno (bad) mov cwtl aad jmp dec xor xor aaa (bad) out mov push in or out int insb stos jge in rolb out dec xor or cld scas sub jo loopne xchg popa cmp mov stos insb fnstenv out call aam insb jmp push sub lcall js add fstpl repz cmp call jmp mov push mov incl push daa les jno std lcall and out dec ss xor repz lods out cmpl movsl mov cs ficompl es fistp lods lods cltd stc pop lods int insl sbb insl inc repnz dec repz and in sub or dec and add stos inc das out cli notl pusha mov jg dec aad pop test mov mov int3 add bound mov lret cmp divb add sti shrl (bad) sahf movsl ds scas push cwtl pop push and out dec push test into pop fxch add xchg and dec jl call lcallw xchg xorl repnz pop adc (bad) jp jnp ja outsb iret or ret pop mov mov out mov cmp cltd jecxz fdivs rcl push xor repz insb cmpsb push cmp fstps add add dec repz lret aaa arpl mov push fs push outsl (bad) mov test ret xchg insl in or push js in rcl xchg xchg fisubl fidivl adc inc dec cmc in arpl rolb mov fist aam icebp jg cs ds loopne imul adc jno (bad) push outsl sub xchg mov add sub pop (bad) out mov test push inc movsb jecxz mov loopne movsb xor icebp inc xchg das adc xchg call sti in dec xor (bad) or mov outsl and inc dec add repnz gs jge mov pop cld push cmp jge dec mov jno xchg nop jge mov mov aas (bad) sub pop inc pop gs cmp movsb aad sbb pop jnp mov push ret push adc divl mov sbb pop jae out sbb adc out pop sub xor je outsb loope fwait lods and push lahf jg fmul es sahf mov dec push repnz ja mov push popa sub mov jne xor daa dec movsb fucomp mov adc jns imul out cmpsb fdiv pop cs or inc fs int stos push mov push push daa into xchg imul jb fsubp jae test jg loopne into or jns fist out mov mov xlat dec sub or pop int mov (bad) add mov jge sub ds cmp push psubsb mov mov dec cmp or xchg push mov mov dec cmp or xor call movsl scas arpl ss jo push subl nop and pop jbe out pop loopne jbe scas pop push (bad) jbe shlb mov pop sbb aad adc xlat test cld cmc mov inc lret icebp (bad) repnz xchg xchg sub add jbe stos idivl mov sub out aaa or not mov aaa cmp push leave xlat dec adc cltd jb mov rorb pop enter add add xor lods inc pop adcb xchg xor sti mov cli or push cmp xor fidiv sub add sbb xchg fdivs (bad) std cmp int mov push dec outsb xchg loop mov mov sbb fs into mov add pop loopne ret xchg rep cmpsb mov inc cmp mov mov imul fmull rorb cmpsb jb push mov stos xor std pop rolb fsubr mov and out aam decb xchg lret mov sbb jb dec push mov inc xchg or mov hlt sbb icebp xchg sbb and sahf pop and cs int3 js (bad) (bad) pop or xorl dec popf shrb loopne repz imul mov push dec bound or scas sbb cmp push roll pop pop jb cli push mov (bad) cld stc lods fcomip out aaa pop ss int (bad) mov cltd insl les push insb stos sbb outsb mov lret or sub push mov fldenv outsl pushf push inc stos sub inc int (bad) (bad) cli fdivr xchg ds fildl or and leave imul mov sub popl test or mov scas add sub xor mov loopne jbe push movsl pusha sbb sub (bad) pop pushf movsl popa jp scas mov mov mov fistp mov ret mov out and scas daa divl mov enter push fisttp loopne stos movsb clc fs arpl push sub in rcll and jle enter jmp and aad mov mov push aas bnd std inc int3 test les fnstsw stos movsl and push sbb call (bad) xchg das call xor out pop js jl in into dec ror lods popa hlt jle jl leave (bad) pop cmp xchg addr16 add pop imul mov out lcall dec mov sub (bad) fdivs in std test notb jp mov insl in test fwait add clc push ret (bad) (bad) std inc or jbe arpl pusha mov jo into mov lock lods mov push mov push jns ret fmul push mov enter pop push aaa scas mov mov mov js fdiv add cmpsl xor popf xchg push and test xchg ret iret sti jae out and dec rorb pop jp arpl aam inc imul int3 push imul aaa pop adc adc icebp stos loop pop xchg sbb push jecxz mov fcompl (bad) scas inc inc jo daa in lret mov adc out mov pop je mov js outsb out inc insb inc xlat gs test arpl lahf pop push (bad) mov mov sbb movl gs jbe mov pop xor lock xlat mov jge add and call add add add pop insl inc (bad) dec aas jecxz data16 push xchg arpl addl ficomp scas ljmp fwait arpl lds aaa fwait xchg sbb adc push daa out sbb jmp cs cmp test jmp mov mov inc shlb (bad) mov ror rcll inc xchg dec xlat imul pop pop dec roll fidiv mov rorl out sbb fcomps (bad) insb push rcrl test out mov push repnz out xor test dec sahf push inc xchg test arpl pop sbb gs mov pop xchg sbb dec xchg (bad) jge push out pop jne aam xchg in aas xchg xlat push sbb xchg or cltd int3 pop lret (bad) pop adc aaa and lock mov pushf mov dec and sub or lret sub insl stos pop in mov add dec (bad) jecxz insb dec les fdivrl cs aas pop sbb jnp ret int3 bound adc push pop (bad) out out sbb mov stc ljmp popf mov mov popf mov and xchg xlat push adc mov jns mov pushf fsubs movsl imul cld sbb mov aad rolb movlps sbb inc cmp push dec sbb int3 cld cmp sbb or adc (bad) ss add xchg xchg adc pushf cli mov nop mulb lret stos mov xchg xchg cltd in movsl mov and fidiv mov or sarb pop pop push stos loope lret mov push rcrl pusha add or mov fs xchg jnp xchg leave push lahf push mov outsb je jl cmp test idivl cmc ffree (bad) add std imul cs or bound aaa aaa test stos aaa sbb sahf es add lock cmp aam mov addr16 or sbb inc mov (bad) repnz fs ror outsl imul jle inc fcomp jge scas icebp mov out (bad) pop mov dec test inc jge mov lock outsl mov out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg jg sar (bad) xchg aaa loop jmp add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add je add add or or add or add add add pop or add add mull add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add cmp push js in rolb (bad) sbb xlat mov fisttpl mov (bad) pop imul fcomps dec popf mov add loopne add mov (bad) lcall inc jbe sbb jmp sub mov lea shrl (bad) in ss jne (bad) in into lods cltd iret movsb (bad) stc dec pop mov mov and insb faddl (bad) lds adc jae loope lcall insl scas jbe dec xor lods outsb ret mov popa xchg imul mov rorl fstl push lds fcmovnu pop (bad) xchg push arpl in scas imul in (bad) and (bad) aad jecxz lahf out xchg icebp mov mov inc and jge cmp dec mov push scas iret add sbb fs lret mov sub inc cmp adc insl pop xor lds lret push cmp outsb and sub fs insb sbb pop loop insb hlt mov xchg or add lret loop lea mov inc sub in pushf mov jg stc mov cli cs ds insb es je rclb popa push dec aad and in mov xor in notb pop mov enter sub xchg mov repz lds (bad) ret pop loopne pop cmp jmp les push das cmp jle stos daa xchg dec in push mov xchg pop add popa xlat lcall roll xor insb dec stos lods pop push push imul lret push adc (bad) pop scas mov jae mov push or fsubrs rcrl cli cmp stos pop pushf in les and adc sbb mov push xchg into xor pushf adc cmp lods int3 cmp pop cs mov mov pop outsl aad in into push (bad) aaa js add repnz xchg inc insl jmp dec jno std in xor in and fiaddl mov mov js rcr lret ja mov jns mov pop lea out lret push cmp mov insl mov or pop inc mov mov push dec mov sbb pop and lret es pop imulb aam sub sbb sub stc sbb cmp cltd daa sbb pusha outsl sub adc stos or push jnp sbb outsl pop pusha pop mov repnz pop sbb scas or or in repz imul andl ret stos lahf adc enter cs sub loop lds iret dec js add rol mov add mov adc and scas push mov test testl jno ja icebp lret stos and mov adc stos pop daa mov dec jbe in scas in jae repz lods xchg cmp sub fcompl rorl out cmc popa push mov push aaa scas call jg (bad) dec adc mov adc jmp aam insl or mov ficomp (bad) test test adc pop or mov xor jmp cmp imul mov ret pop inc in mov out dec cmp sti inc and xchg push jle push dec push mov mov sub daa xchg jge xor popf or jns push movsl mov xor addr16 jp rcrl cs stos dec push jmp cmpsb movsb sub mov fist popa popf or gs cmp dec rep cld ja in or nop add pushf fwait xchg or mov ficompl push call in and jae sbb adc stos in jge aad mov pop lods jo xor jne jno movsb or cld and in mov ret cmpl sbb sub std add pop in cli inc cmp mov jns dec add mov in int stos or and xchg mov jl jne pop push shll je push inc lock jne xor jae inc dec dec inc push sub js sarl dec cwtl je hlt sub sti inc rorb ds pop inc jp jge fidivrl sub stc test rolb mov cli iret test movsl xchg push jne incl in mov stos mull mov rorl sti jbe rcl jb sbb jge lock xor mov fbstp test push ret inc pop jbe push push push push imul repz mov jnp push lahf sub cmp dec ficoml or or or push xlat pop dec or loope add adc insb mov inc stos mov mov imul enter in test int3 jbe dec cs aam pop inc and xchg movsb jp mov movsb lretw je (bad) movl enter dec aaa fcoml mov jle sub mov pop outsl lret and mov xchg inc fnop lods ja movsl mov fisttpll mov and ds loop scas ror (bad) push stos jle (bad) out pop outsb mov rcrb data16 push and inc jno sub push sbb inc mov adc mov xlat inc push (bad) out add xor push negb xlat adc in inc adc xor cmp inc mov jbe mov sub in movsb imul dec pop ss int mov jle in pop lods stc lock or (bad) cltd aad pop xchg or lods cmpsl psraw insl sbb mov lcall fstpl add icebp ret clc iret push or mov in sub mov sub pushf jp mov mov adc sahf inc movl cmp out mov jbe add fdivs jg mov cmp mov or xchg inc mov jnp es xchg outsb push xchg lcall lret pop dec stc cmc and add js jno sub gs imul ret stc sahf inc addr16 push push in mov fimull aam add into xchg dec add adc je push sub iret pusha fiaddl das fdiv ret (bad) push sub stos xchg xor sti test push (bad) adc mov fcmove (bad) repz testb rorl (bad) push scas pop lcall js notb das jp outsb xchg jnp push pop call xor repz mov aas xor aas ds fdivrl sbb rorb and xor xchg and inc mov cmc cmc sbb or sbb das fist in mov jne pop es sub dec dec cmc mov inc mov push lret fsubl in lret rorb pop push repnz adc adcl xor mov sub (bad) inc into bound dec cli xchg aas or popl addr16 lahf enter inc adc sub jo mov cmpsb add test push in aam push jmp movsl enter xor or sub adc in lock push gs sbb hlt dec (bad) mov inc inc jb push add fstps dec cmp stos test inc lods pop inc mov insb ret pop arpl loop jno mov in xchg and sub es mov insb cmpsl add loopne push insb mov or mov xor pushf jecxz xchg push subl loopne cmp add pop fsubrs and loopw,pn (bad) adc add fcmove loop (bad) adcl add lods xchg fisubl cmpsb scas bound mov mov sub cmp jns jo dec fistp pop jae imul pop xchg push sbb outsb sub icebp and call inc cld cmp push sti mov cmpsl xchg and arpl inc or push pop out test pop cmp dec pop inc iret dec sbb sub pop pop sub xor fistpl adc mov or (bad) xlat and (bad) push pushl inc jbe pop dec ret shrb lcall cwtl mov cltd scas sub stos dec cmp icebp xchg push fildl mov dec and cmp or popf xchg push outsl fisubrl sbb je test imull sti inc jl mov xor push cwtl xchg imul adcb xlat mov (bad) dec jbe in lea cmp (bad) loope fistp fildl imul movsb mov jns and sub stos loopne test lret jne xchg loopne push push lret pop pushf lods je daa xor mov scas mov sub (bad) (bad) push push daa sbb xor mov pop into xchg leave lret dec mov mov xor mov idivb sti addr16 add adc jge (bad) in in sbb dec sti fmuls cwtl adc mov dec test inc je stos xor sbb lahf cli mov xchg jg add lds push sbb push test xor rcl in xor sbb int jbe daa repz xchg lcall aas (bad) dec adc mov mov and sub jnp sbb sbb jbe push add inc (bad) sahf (bad) jge test js lods int3 dec in xchg stos fwait cmp xor jae dec adc (bad) js or (bad) int sbb jle outsl into pushf test xchg push add mov xchg aas int inc dec lret lahf ret mov leave scas ljmp imul lret cli out inc in fcoms dec inc ret (bad) fiadd jb inc mov rolb fbstp pusha cmp (bad) ja xor out inc addr16 leave ss mov jge rcl hlt call pop stc xchg daa and jle mov dec rcrb cmpsl sbb out dec cli jl mov sub fdivl ljmp adc fisttpl add aam inc in pop popa test mov subl mov mov (bad) and ret les aaa or negl pop xchg sub cmp inc addl repz add inc roll xor out adc in adc push sub out xchg push mov test pop cld sahf mov lods and pop xchg adc cmp sbb xchg pop mov jnp in scas shll sti es mov dec lods imul testb xchg sahf (bad) rorb out mov shrl mov sbb aam (bad) int mov (bad) into popa dec daa test fldcw (bad) adc push xchg sub test or addr16 clc cmp mov mov insl mov cs mov xchg pop inc scas cmp mov jg sbb and cltd sub fisttpll inc sub jmp or loope xor sbb mov inc pusha jg jae fstp in and push cmp or push loopne repz test pop lret cld cmp dec leave pop rorb hlt fwait and jns or rclb inc push dec inc jbe lea add push cmp fisttpll push ficomp test sbb dec into maskmovq push ss xlat (bad) xchg mov int3 insb cld jp data16 jecxz cmpsb push lcall mov xchg xchg jo mov sbb mov out scas cmp add fldenv xor je and iret aaa inc pop jae test in orw popa mov inc out xor push repnz (bad) and gs add push or cmp push inc into clc (bad) js adc or insb inc cmpsl mov push test push repz mov sbb adc bnd out les loopne push adc loope loope add clc lret fs outsb push xor popa adc and ds lods je jg push push sub cmp adc pop fwait insl int3 push push cmp mov inc sbb jns std dec pop mov sbb cmpsl push push cld push add lods mov (bad) cmp int mov insl push mov jge add loop js lods inc push sar mov pop mov cmp push or cmp push inc xor xor in push jo inc cmpsb dec cmp lret bound test dec xchg mov jmp das in inc mov xchg ret cmpsb leave sub jns mov cltd aas mov in and lods bound push adc fmul inc mov fidivl nop sbb push repnz or dec ret push sahf inc scas in inc add jo imul add ds or cld and outsl xchg mov into jo outsl cmpsl daa lock rcrb dec aaa in add leave xor jb fwait xchg cmp push out aaa fimul ljmp je ss and (bad) ja arpl adc mov ficompl push mov aaa xchg fmuls cmp mov push iret stos mov pop inc fldt cmp cmp sbb shl jge test push pop pop fdivs dec mov aad je push std mov pop xchg aaa int add test test repz mov xchg popf outsl xchg and fstl rcrb call and pop xor push ljmp pusha sbb pop cmp outsb mov adc inc mov sub adc bound out repz loop cmp jo insl sbb or pop loopne aam adc cmc loopne push mov (bad) cwtl test or mov push xchg lahf add cmp inc insb sbb popl scas mov (bad) outsl mov movsb push pop jmp cmp shr mov adc insl out negl pop jg lock rcrb sti push test in jae dec cmp add insb and or neg repnz cltd and sbb repz pop loop (bad) xor jmp fs (bad) sbb fdivrp xlat cmp xchg cmpsb (bad) stos adc jbe dec dec iret dec cmp bound lods inc mov jmp sbb insl xor in (bad) cmp mov repz push jnp repnz jnp cmp inc pushf imul inc add sub fucomip jns out jbe jl mov sarl mov loopne inc test pop fisubrl das sbb inc dec xorl aam popa dec (bad) mov cmp incb xor push insb pusha inc mov adc std pop dec sahf test enter movsb push test pop imull xchg sahf lret in es inc lock (bad) pop cmc iret xor inc adc loop aam jl lahf fucom mov (bad) add cmp push out int3 sarb mov pop push dec addr16 mov and loope std fs add sub cwtl sbb mov push mov push cmpb ja setl jns sub or pop aaa (bad) mov mov test lock add addr16 int cmp fnsave lock fmuls mov pop repz push adc rorl ds pop idivl sub xor mov roll pushf jno aaa movsl xchg jmp loop or adc in mov push (bad) dec mov mov mov scas int lds or mov push adc dec xor fsubrp jnp mov (bad) es sub mov repnz insl (bad) int inc add dec fcmovu das out test hlt imul insl ljmp sub push in mov clc rcll mov jmp pop add repz pop in mov in les repnz (bad) repz in add outsb fs pop mov xchg les iret shll leave repz ljmp push dec adc daa insl cmp xor sub out cmc pop ljmp mov popa scas inc sahf add repz ljmp sahf or or jae aas mov (bad) lods inc out xchg int or mov daa adc jge xchg test mov mov ds adc sub or pusha jg mull test data16 push push outsb pop pop xchg push lcall movsl mov shrb leave (bad) fidiv je sub sbb pop fld push jmp das push mov dec leave insb inc out call invd mov repz cmc or lahf cmp pop inc push add xchg and aad jmp mov (bad) dec cmc cmpsb sub inc adc test outsl int3 movsl mov xchg push mov xor pop pop dec movsl dec out xor cld repz xchg movsl and sub aaa adc popf arpl ret aaa mov mov fmuls mov icebp stos dec push mov mov dec adc fldl insl mov mov jl iret (bad) (bad) cwtl add test addr16 test imul mov push or gs loopne addr16 jl mov in jmp mov push rcr xchg fsubr lods jb ljmp sub cmp lret mov inc pop cmp fcmovnb sahf ret (bad) mov sbb sub cmpsb sbb and mov pop ficoml mov into mov imul sbb add out xrelease add jns (bad) and inc outsb inc loopne cmp xor dec mov xor rcl hlt leave lods out test dec or sahf outsb imul or dec rcrl adc cs insl cmp mov xor mov mulb xor push adc je push dec xor popfw orb repnz push stc pushf xchg mov loope lcall push push loopne scas sub push pop addb cltd cmp xor jle inc test cmpsl mov sarl xchg mov push in pop inc rcl cmp sbb les adc and cs movsb mov adc pop in xor leave daa fbstp lahf inc ret sub loope adc jmp xchg mov inc push lods sub cmp jle icebp in add and ds dec mov xor cltd xor (bad) dec push faddp (bad) adc mov or insl sub dec jnp clc sti pop pop jge lcall push xchg (bad) inc cmp std mov daa sbb fisubl jo repnz movsb hlt sub dec stc mov call bound in jle cmc xchg push enter es (bad) je mov sbb hlt ja mov push mov or daa jb test loopne mov cwtl xchg ljmp fistpll push subl rcr loope cmp pop xor cmp dec adc fs addr16 xor or add pop leave inc adc ja arpl push inc cmc movsb add cmp (bad) xor loopne dec inc imul imul push inc fiaddl outsb insl ja loopne mov nop repnz leave (bad) jo scas dec (bad) pop (bad) gs leave sbb shll cmc jne or jns loopne inc pop pop jbe sbb lods cmp (bad) push dec jle inc sub xchg pop and into mov stos movsl test cs mov cld push pop in lahf mov pushf mov bound scas cltd mov (bad) aaa clc inc (bad) mov xchg cmp (bad) xor jle in and mov xor mov je push out xor bswap scas cmp jo lahf jns cmc xchg fcoms push (bad) mov inc movsb inc mov mov push (bad) lods and dec mov hlt push insb frstor out or rorl xor (bad) xor mov sahf jbe push cli pop push out rclb jge and inc and push and loope les cmp mov sub jecxz xchg pop mov aaa les imul pop push mov int3 sub popf rcrb dec dec incl sub adc in or push jl lahf in mov gs movsb sbb es outsb mov ss pusha xor sub fsts pop adc mov es and lahf pop (bad) jg enter dec push imul or rcr sbb cmp pop push and test xchg stos (bad) jecxz outsl fs loope (bad) mov inc and adc dec sbb push jne dec in scas js pusha int3 xchg sbb pop xor add and sbb or cmp pop cmc pop sar mov pop mov loop add pop loope cmpsb mov pusha inc (bad) jg out iret jmp dec lahf dec in jmp mov jle shrb jo xor loop mov out leave test mov xlat ss mov jle cmc lods lret andl and loop fsubr test or add mov jg lea ja xchg push (bad) in test sbb dec mov mov stos mov and xor sub cmp (bad) xor sbb dec mov in iret xor (bad) mov mov loop imul lcall out push cmp mov dec xchg or roll xchg insb dec ss jo mov hlt inc aas xchg pop mov xchg sti or ja sbb push fcompl mov xlat lods push sbb inc pushf mov xchg cmp rcl cltd sbb imul sub xchg xor std add or mov add add adc std mov jp ficom or fistpl imulb insb sti roll push clc cmpsb push adc (bad) cli aad nop fidivl (bad) xor cmp aaa sub stos sub data16 xchg insb add add (bad) (bad) jmp add add pop jg lcall das xchg inc sti loop sbb push addr16 xchg insl mov jno xor pop pop xchg or jg xor xchg jecxz jo int or fs es dec mov mov mov sbbl dec daa scas xlat pushf loop lret pusha fadd ss or out or push int3 shlb xchg mov jge push mov jae mov popa add (bad) pop iret xor pushl push pop es xchg cs jl arpl push aas xchg xchg mov (bad) mov dec xchg pop jo imul sub xchg cmpsb or scas out pusha insl cmc adc repz loopne dec lahf fwait dec fs push enterw leave inc fcomi or insl daa int dec push cltd push rcrl cmpsl dec or cmc xor xor mov jmp inc mov shrb dec js sub add outsb xchg xor inc or inc or push mov sub test cmp pop lahf and lods push push int3 mov push inc add out pop pop scas pop scas out ljmp int3 stos out stc pop add pop push push aad pop mov inc mov push rorl mov jge mov flds cmp pop aam xchg mov sub pop loope inc sbb mov icebp inc mov fmuls subl mov popf mov xor push sti xchg hlt std and lea loop mov lcall cmc xchg xchg ret xchg fnstcw mov pop mov jmp xchg dec dec in cmp mov xchg lods pop adc cmp add push or fisubrl mov push test bound rcrl mov cli xor ds cmpl movsl and pop cmp push jle cmp mov arpl lods push cmp add jecxz ret dec adc or pop xchg clc push xchg add sbb cmc sbbl push cmpsl fwait imul (bad) scas je pop or sahf (bad) mov (bad) ds fidivr jp rcrl into jae in cmp sub adc or push in imul lcall add add nop out dec lret test inc adc fsubrs mov repnz xchg dec push pop in xchg mov pop ja cmc mov aas dec dec daa inc or mov mov (bad) inc mov rcll xabort dec push int aaa femms pushf inc (bad) rolb sbb cltd cmc xor pop rclb dec test jo sti fs sahf pushf out mov call scas sahf les push dec into lock loope adcb cwtl data16 or sbb jmp popf mov xchg inc or pop and bound addr16 add (bad) jmp pop shll imull sbb sbb imul cmpsb or popa jge mov jecxz test jmp or mov dec or jae pusha add aaa cmp cmpsb fild ss xchg iret dec ljmp or pop rcr pop and xchg pop push cmp jb mov jge int fiaddl cmpsl js xchg movsl (bad) icebp xor dec add pop xor mov fmull hlt mov jl lea sbb out mov xor fldl mov sub in sub in xor arpl add fimul add xchg movsb test jge xchg fsubr push jl arpl in mulb inc dec push mov test sti insb add je add adcb jnp je adc pop adc adc je mov out sahf xor gs call mov std fistl mov je shrl sub pop jnp mov push xlat or jae push jno dec stos aas or shrb xchg insl adc outsl iret aad or loop adc cmpsb hlt push vxorps jmp outsb test xchg inc inc movsl or or xor insb and adc jb outsl add movsb add jmp pusha xchg dec pop pop ret pop inc ffreep sub xchg mov loope or adc xchg dec mov push arpl sbbl int3 nop mov test imul loopne es (bad) neg ret repnz mov push int3 jl negl dec cmc pop xchg dec cmp je pushf aam xchg xor rcrb push mov vpsubusb push sbb sbb lret inc adc jecxz cmp sahf push xchg xchg jp cwtl ds jbe divl test pop mov imul and push arpl (bad) mov push sbb cmp xor inc or inc int xchg mov imul shl fucomi mov insl popa in xchg sarl outsb insl adc ds icebp mov fistpl xchg mov inc jbe (bad) mov sbb inc aas push xchg mov xor popl pusha je imul push imull cltd sub (bad) sub sbb js add pushf lds nop jl mov and data16 push enter cmp in push iret lods pop adc dec cli sub out cltd ficom cmpsb jmp dec (bad) imul movsb adc jl sar adc xchg inc jnp inc pop and fiaddl dec dec test lds dec cld mov jns sarl mov sub lahf mov or sbb mov and sbb (bad) hlt neg inc xor push sub lods (bad) sub sbb call dec xor movsb sbb sub pop (bad) fwait dec daa js cmp mov mov gs fdivs xchg dec imulb out out pop push push or and sub fsubrl das adc dec and push into aas xor cs inc cwtl dec dec jnp sbb mov sub rcrl idivb icebp (bad) popl clc jmp jne aas fs fldln2 cmp enter add adcl nop fnstsw sbb pop jl or mov addr16 or push repnz cmp in cmp pop cwtl lret sti jno std into aas out pusha sub sub add mov leave out sub sbb mov sub or adc mov jecxz dec xchg push ja pop adc ficom xchg fwait cmovns pop scas lret pop test (bad) into lods iret dec loope push ret call out sub fistl enter xchg mov fwait inc push lahf dec pusha jl xchg fs cmovge sbb inc fdivs into mov jl add xor jne pop outsb xor push call fistpl mov add cmp fildl pop sub lcall fs test lods aas js rorb and insl pushf mov cmp pop aas dec sbb sub and lret push pop in stc jo shrb mov xor sti and lahf in in adcl push std vxorps jne int and jl jecxz inc loope (bad) and in rcll sahf test mov push mov (bad) adc ret in stos ret and xchg xchg test lea lock or pinsrw repz int3 xchg cmp sub pop dec jge sub incb int3 inc jne je test test sub dec add fwait jno push cmp jae adc and mov in mov xchg lret ss jge cmpsb sbb xor repz ret mulb mov or xchg mov test (bad) sbb inc (bad) adc sub daa sub cmp (bad) maskmovq negl jbe out addr16 mov pop hlt outsb sbb pop aaa test sbb adc jmp (bad) lret cmp sub cmp or cld xchg mov add jecxz clc scas mov push fs arpl xchg or (bad) mov aam loopne scas dec push sar xchg xchg inc xor push clc add jg push lret jne ja bound push fnstenv xchg xchg les xchg es mov fisubl jbe xor ret push cmp mov pop pop cmpsb jle or dec shll cmp aad xchg loopne cmp sub aam inc je (bad) (bad) sbb mov pop jbe movsl sub (bad) cld add insb jge (bad) cmp cmp fldenv sub iret (bad) out lret mov ss xchg sub mov or outsl (bad) sub jle arpl cmc push stc and pop ljmp iret xorl leave sub fsts sub mov sub sbb inc fldt lea adc dec and iret out add inc bswap lock lods addr16 (bad) aaa inc cmp inc cmp (bad) outsb out xchg dec lods insl xlat aaa fcmovbe test cmpsl dec inc pusha ret outsb outsb dec movsb leave add mov mov mov iret and inc lock lea mov mov mov push pop adc jle js test das decb (bad) enter outsl mov pop fcomp movsb xlat sub xor je shlb fiadd stos sub lcall shll jp xor adc leave and js sti xchg adc inc mov xchg daa xchg aam push ds push jle ffreep sub les push jne jle fdivs inc sbb andb inc adc dec push mov jp cs ljmp sub ret cmp rolb xor fdivrs shlb aaa mov mov rdtsc mov pop in sbb enter or push stc (bad) iret pop loop or dec cltd (bad) rorb aaa and jecxz dec lahf xchg in inc dec outsb in cltd pop push pop fild (bad) loopne loop repz mov addb xchg push xor test xor mov (bad) dec fisubl daa ss or fldenv cmovbe pushf in iret jl pop lock clc sub (bad) int3 jmp or cs push lea adc cwtl pop hlt dec in test hlt dec scas cmc fsubs fmuls xchg sub xchg lcall andl push hlt ret or fisttpl xor cmp (bad) adc jae,pt lods push and ljmp (bad) or sbb sub xor xor in clc xchg dec push xchg mov mov aas outsb cmp ficom pop lea sti fst jl insb xchg fcmovnbe push inc loope push fidivl nop mov xchg jae loop push test pop and sbb push lret (bad) ficom bound xor or jmp cmp sub and outsw pop (bad) xchg cmp shll jne xlat ficomp adcl repz pop lahf pop insl mov mov cmp pop mov sub push lea push pop sbb jmp push leave aad nop out repz inc fadds insb repnz mov adc fnop push xchg adc adc ret inc lret mov jno sbb add fwait (bad) push inc movsl jmp movsl andb insb repz xor into adc and dec iret xchg test inc adc scas bound mov out (bad) pop inc and mov scas adc icebp fs cmc mov aas mov repz cmp inc sbb ljmp ret mov (bad) jecxz xlat movsb mov stos cltd mov sub jl add mov into push add xchg pop xchg push lcall dec ret xlat cmp ds cwtl iret cmpsl mov int3 adc imul ror and and mov and pop pop pop jno push sbb sahf push ds cmp push add mov rcl inc addr16 es add and inc pusha dec imul addl xor fwait push outsl adc push cmp pop enter sub lods (bad) packuswb ret push (bad) xchg faddp loope sarb xlat int xor dec call inc pusha adc dec outsb sub sbb xor rcr inc aad loopne dec mov cltd es scas cmp mov xor mov popf in stc (bad) in rol xchg pop aam dec mov pushf add (bad) (bad) jno add imul fidivr loope and jmp stc lds test jg mov and arpl inc push sub call (bad) (bad) inc addl sbb xchg adc testb loope pop outsl int ja jb out push xor dec aaa mov (bad) inc pop push (bad) je popf cmp inc fs ja outsl pop int3 fdivrl loope inc mov push dec mov lret bound cmp movsl lds call lods xor test lds pop or in and vpcmpgtd out insl push mov cmc out pop and push iret cmc dec pop sti cmp dec mov push repnz cmp mov mov jo and dec sbb lods jle (bad) aas xchg aaa adc daa fsubrs fisttpl popl ficompl leave popf loop ret push cmp cltd fsubrl mov loopne inc (bad) cltd jno outsl popa dec out pop add loop mov sbb pop pop out mulb (bad) jecxz jle mov movl push mov mov out mov in xor mov pop scas imul shlb push ljmp ret (bad) cmp cmpsl lea cli mov not aaa and cmp leave xor jmp sub mov sbb jl test sbb aas push daa faddp loop in xchg lcall adc push rclb xlat test push pop aaa sub jge pop xchg jmp ja pop (bad) mov mov aaa bndstx js pop jnp pusha sbb sbb sub mov (bad) xlat loopne imul mov test xchg mov ljmp packssdw inc cs scas xor scas mov movsl es mov cli sub test subl sub mov sbb pop (bad) stos cmp mov pop std push (bad) add xor out jns push lods xchg pop mov bound imul cmc add lcall push aaa insb dec and jg xchg out in movsb insb arpl dec aaa xchg xchg or inc cmp (bad) mov mov and sub xchg jb dec push sub mov mov sbbl mov push inc (bad) dec jg mov jb lret iret mov inc xchg stc or imul xor jecxz xchg js stc es mov pop idivl int3 in dec fadd jg cltd ret jbe int push outsb in repz xchg add pop jno rorl insl cld iret lock cmp inc adc mov xchg idivb testl test in (bad) mov stc add xor mov sbb dec mov push cmpsb pop (bad) scas fstl out add push xchg lcall cmc (bad) mov mov repnz fldcw fmulp test (bad) jne pop pop push mov in fdivrl xor ja cmp xchg out push lcall aaa inc call decb inc popf aam cs in push inc ja push mov inc orl rol sbb outsb mov dec adc je data16 xor and pop (bad) mov lock jbe popa mov mov pop call lcall pop dec pop cmpl jg mov incb jbe fisttpl cs insb in lods inc fildl and outsb mov push jl lea inc jl nop cmp cld sub xor test pop ss cmp cmp or push lret in neg movsl mov (bad) lcall fsubs in sub (bad) int ljmp ds call and and fcmovbe cmp xor and loopne cmp xor push (bad) int3 add loop pop sub cmpsb bound xor push sub sbb imul loope movsb shll imul les sbb jp (bad) aas sbb repz add inc movsl or pop shrb jle push es imul lea pop (bad) push lret lods inc enter jg xor aaa jl ljmp ss test insb dec dec xchg call jnp sub add push in push mov roll sub push pop jbe jbe popa and imul aas push sub xor inc or std sbb sarl dec xchg out lahf fstl jge out pop les xlat stos ds mov inc dec sub mov mov cmp bound dec std xor lea negl inc inc jle das rcl insb loopne jno lret adc mov fwait xor ss adc cmp iret sbb sarb enter lret adc lcall add lcall pop dec xor fnstcw out popa adc out mov pusha stos xchg mov jns movsl in mov jmp int3 clc xor mov (bad) nop inc cmp icebp bound mov or push xor (bad) scas lret mov xchg cmova jns xchg sbb cmc loope imulb (bad) popa dec and mov mov sub insb mov xlat into dec xor cmc stos adc imul lret mov repnz ret or jge mov push cli adc int xchg sbb add arpl insb xchg pop inc icebp arpl push xor mov aad pop fiaddl jno fidivr popa repnz jae jbe adc mov fldcw out clc popf adc (bad) mov adcl mov adc lods inc pop outsb dec int3 test inc mov adc in pop or sarb push cmp sbb stos cmp shrb leave test incl jecxz dec imul mov inc pop out hlt shl sub pusha (bad) lods and leave lea jnp jl iret sbb pop and hlt je sub test add jae sbb cld mov (bad) push das dec insb mov cmp xchg and loope movsl cmp mov test lods dec and sbb mov mov aaa imul fs inc adcb push and cmp shll mov jo jns cmp ds jmp xchg insl mov mov stos je and and add mov and je sub cmc cmp sub (bad) xor out adc add inc ljmp sbb adc bnd sbb lds (bad) cmp ret repz xchg test pop mov sub xor leave jl cmpsb daa cltd mov add xor or clc add incb cmc sbb rol dec push cmp pop inc inc lods lret dec sub mov or fstpl scas xor add je popf pop mov mov js mov imulb dec mov gs push xor nop sub fxch xor fcmovnbe xchg arpl shl add imul loop xchg loop loope imul insb pop imul sbb fstps call lea and cwtl imul mov loopne inc xchg lcall adc lahf pop xchg enter ret movzbl loop inc jnp addr16 push mov pusha pop sahf inc push or pop adc inc xchg ljmp sbb out cmp push fwait test add xchg hlt push cs cli outsl or mov gs cmpsl mov mov xor cld sti and mov jo pop mov push push or shr xchg jo mov ds jnp in dec or mov fidiv test cmp rcrl push lcall fisttpl jmp push push testb orb mov fild and cmp push jae jecxz int test push adc inc inc mov mov push stc pop xlat (bad) stc gs xchg cli pop xlat icebp (bad) ret mov dec call lahf fs jnp test inc sbb jno jg push enter mov fistp (bad) cmp jae push adc jb out (bad) call dec dec in fcoms mov or lea insb ds imulb dec mov (bad) push pop ds lock out and repz fistpll movsb xchg (bad) adc out lods xor out sbb and repz jle dec das aam ja ror addr16 push daa stos cli sarl mov mov fcmove (bad) sbb loop daa das arpl push pop mov jns cmp cmp mov mov loope out sbb into xor push mov adc inc inc cvtps2pd mov mov inc cmp daa cmpsb inc push sbb (bad) xor sub xchg pop cmp jbe lea imul lahf in fcoms push mov inc cmpsb pop lods sub mov orl xor outsl insl inc add push mov (bad) sarl pusha xchg sti ds fimull pop fwait cmp ljmp or or xchg mov call sahf idivb sbb push js outsb jo mov sbb js (bad) loopne push jno (bad) gs xchg jno,pn lret imul xor jmp out mov sahf and push mov or sti adc adc stos ret jb pushf sbb mov cld loop mov mov leave leave jnp or sub (bad) lods sbb or (bad) in (bad) or mov stos jmp and mov cmc push sahf mov ficomp adc (bad) sbb jbe cmp ret and enter jle (bad) add insl dec sub dec jge decb cmp shll sbb in incl mov ds insl mov inc std mov out out xchg and sbb sub add or pop jnp cmp pop stos cmpsl sub int3 push movsb inc stos mov inc xor jno out inc jbe sahf hlt ds outsl pop xchg jo inc or mov call pop adc loope xor xor clc lret push stos dec hlt cmp cmp push dec test push ficoml clc inc movsl out dec lret mov pop aas pop lahf out fnsave or xchg push mov adc or (bad) xchg cmc lds cmpsb xor (bad) mov addr16 pop sbb xchg mov adc insl shrl stos fdivrp leave and xchg ret sub mov mov or xchg bound sti stc cmpsb fisttp sbb xchg stc loopne pop int insl push xor stos test roll rcrb mov fs test cli mov cmp loop adc lret je pushf pop add xchg daa aad dec repz ret das or repnz test mov xchg rclb mov xor push scas sbb adc mov xor adc mov repz add test xchg test inc xlat jmp inc add movsl in jle in jb xor test lds sub sbb je mov dec add aam fsubrs fistpll xchg or push fxch jge xor test test fistl xor addr16 adc cli (bad) xchg scas popf addr16 sbb inc dec push inc cmp inc daa inc outsb sti mov mov pop add push mov sub movsl outsl or sbb fs push mov fwait adc or into xchg dec xchg jnp repz xor jecxz addl icebp cmpsl pop fs (bad) sti mov loope pop add cltd jp les lock (bad) fidivr sub add test sahf dec cmp and dec cmp hlt fwait daa mov adc (bad) shrb mov pop (bad) add cmpsb mov out in and pop add dec push gs xorb (bad) mov (bad) fs mov movsb mov mov bound imul adc jae fucomi arpl cltd or fs ja mov mov add ds dec and mov nop lret mov or pop punpckhbw fildll insl dec imul cli (bad) addr16 ljmp sbb orb (bad) popa pop outsb pop decb sbb popa ja lcall add mov sub jnp push subl aaa xchg test fnstcw lret loopne jo add paddsb or imulb (bad) jb mov mov mov jnp aas ds mov (bad) fmull ret outsb push scas mov xchg in xor scas enter push mov xor std out mov and movsb push mov cwtl enter int3 and mov and adc push and xchg mov in adc aam sbb add int stos mov mov (bad) cmp rcrb push jbe and cmp out fsubs sbb (bad) js (bad) jno clc mov testb dec aaa push jmp cmc and pop ret sub in fdivrl gs push pop jecxz add inc push (bad) mov xor dec iret clc push into aas sub xor js (bad) adc insl ds jmp sbbb aaa xchg into loop sub xor loope in mov jno pushf sub xchg sahf pop movsb fmul mov cli stos jl testl aaa (bad) (bad) popl loopne mov sbb insb xchg daa in loop add xor sbb jb clc (bad) repnz call aaa (bad) add inc fsubr mov mov lret cmp gs addl (bad) es xchg push inc loop lahf lods xchg sbb icebp cwtl ss cwtl ss dec data16 sub rcrb ret (bad) insb in int dec adc movsl notb pop sub loopne (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz lcall add aas mov cld push lods mov lcall dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add jp add add or or add or add add add pop or add add mull add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add cmp push js in (bad) add mov mov (bad) mov fldt insb cmp daa (bad) xor adc add faddl add mov or jno sub outsl imul push std int daa movsb mov jp in xor mov (bad) ljmp sub into int (bad) mov cltd and xchg cld cli mov inc cmp and daa (bad) imul scas icebp jae ss push push cmp fnsave ss cmp ret ret adc cmp and mov daa ss dec iret into adc xor scas sahf orl pop movsb aam mov xor sub gs push cmc sbb test nop loopne pop je mov movsb sti aaa or lahf adc push and push out push xor or fcomip pop lea icebp mov fldenv pop xchg mov xor ret ja subl aad jg jno fldcw inc mov sbb loopne out out test adc popf cmpsl mov push xchg cmp rorb cmpsl sahf adc sti or cmp mov std call push test sbb or or jmp adc dec je add cmp pop adc imul ja or imul (bad) push ret pop loop div cmpsb mov jmp out sbb das sbb xor incb lds neg leave es pop fisubr push outsb push imul adc mov daa enter jb xchg push mov movsb setnp xlat rcl mov fsubs or (bad) aad int and lods add sub push mov dec insb leave fbstp cmp movsb in or sbb cmp mov or mov daa outsb fs fnop enter popf negb mov lock dec mov cli push mov lahf addr16 ret into cmp es or jp xchg cmp mov ret mov and (bad) fwait cltd addl mov imul sahf stos jl std xchg sub mov pop mov jne ja pop xor sar push xor repz (bad) xlat jge,pt icebp dec mov cmc test push enter fdivl andl lret mov mov xchg cltd fbld and inc pop fimull ror jae (bad) cmpsl pusha clc dec mov movsb fdiv movsl imull sbb aaa or mov sbb and mov pop xchg or jae pop in ret xor fistp dec inc (bad) pop lea int (bad) fild cmpl lret adc push cmp pop decl cmp cmp nop xor ss (bad) pop pop adc and adc sar scas jns and mov fs sub jge cmp test daa fs imul mov mov stos repnz clc jecxz add (bad) sub or push (bad) push cmc out inc jle std cs jns in out push push or arpl pop inc or icebp test cmp decb sub xchg shl mov pop sub push mov ljmp rcrb cltd mov mov mov inc adc (bad) lret mov setae out add cld mov fs dec out adc fwait hlt (bad) jo or insl call sub sub int fcmovnb inc and jb xchg pop lret (bad) mov sub or cld shll lods fidivr cmp cmp add imul pop mov insb xchg sbb push add or sbbb in push push and jge add pusha lret mov inc in push fisubr push xlat stos cmpsb add push and mov jge movsb dec xor mov stos insl fwait std sbb mov call xchg sbbb pop jle xchg int mov push push test roll fwait dec in je sub xchg test jg nop sbb add pusha push js out jmp ret xchg (bad) hlt jae daa dec push jmp ljmp add sbb mov pop mov dec push cwtl or hlt adc popf inc loopne andl mov mov push xchg arpl dec mov dec ds out pop stos enter dec scas sbb repz xchg stc inc rcrl push push jae xor test push repnz mov dec mov hlt orl cmp les mov arpl pop cmp sti insb popa aad and xor call fisubrl sub cmpsl add sub sbb ret cmp adc adc pop xchg out pushf imul or or cmp mov cwtl dec lods in call sbb jae xchg xchg push ret push out mov mov int3 lret mov or stos in mov ret adc (bad) fildl lock dec insl cmpsb cwtl inc daa cmp pop lret push sub xchg xchg xchg fs decl add movsl (bad) mov popf call or (bad) incl ja shrb ss pop push bound or orl add ss mov bound (bad) loope test add xchg xchg stos icebp inc into (bad) cs scas icebp inc mov add ljmp inc mov dec les sub or mov outsl cmp push push push mov or xor sbb and mov aas jno sbb dec jle mov pushf (bad) jmp inc and ljmp jbe loope ds fidiv and shll (bad) lret inc mov mov inc aad pop cmp cmp ljmp xchg push sub inc mov (bad) pushf in sbb inc movsl xlat sub sub mov (bad) stos repz cwtl adc imul stos test cmpsb xor shll cmp movsl and ror inc xchg (bad) xchg or inc dec fwait jns push movsb jb cmp push push ds adc adc fucomip (bad) xchg inc cmp adc push mov aas stos jnp add push dec or (bad) dec and dec cmp adc pop mov pop jns nop fdivp int3 imul add iret sbb ss out cmp popa test xchg imul pop mov fildll inc jae lahf in rclb lock cli daa mov sbb (bad) in je lods and das lret jnp and jo dec das pop cmpsb pop imul mov clc fwait cmpsb xor push sti movsb and xchg mov pop movswl fwait lcall and jae pop and xor sub (bad) sti test xchg bound cmc mov jnp pop out mov int adc push push cwtl xchg jno sbb jb xor movb push repnz jl out jnp das sub rcrb push pop inc lds push mov ss jl dec xchg insl cmp ljmp add xor cmc test cmp pop mov mov adc mov (bad) in outsl inc inc push xchg fcoml xchg lds dec pop jnp mov lea push lods sarb push mov pop jl jmp or sub inc hlt mov repnz xchg dec in add xchg cmp je push xchg mov rol cmpsl adc in sub push mov test out stc stos fildl sub xor xchg and in push ljmp icebp fsubs jecxz sub jbe sub stc adc jae fcoml cmp dec pop les je popa dec or cmp dec imul dec jl hlt push push ficoml es out push cs in cli rcrb dec jg cs xchg clc ljmp sub fisttp ljmp sahf test push jne pop sbb roll and sbb out nop int3 repz fwait pop lods (bad) push push inc push out xor (bad) mov mov ds inc sub in dec leave arpl inc pop cltd in jno lds test jg ret dec lcall ret push add mov stos push int xchg imul data16 push scas insl adc lods cmp lods push adc mov les xchg inc sbbb jo jb lret dec in fimull test dec bnd pop pop cli jecxz lods lods lods ret cmc jne mov ljmp sbb add mov cmp (bad) mov ficomp out (bad) stc por sub call inc popf push (bad) aaa and mov jae adcb or rolb xor je es fistp push icebp push scas jnp mov fsts push lods or mov mov roll iret shrl (bad) mov clc jge leave les aam test in or xchg mov sarb cld ret leave pop repz lock (bad) and inc inc jo mov sti lock cltd sub inc sbb in sahf mov fmull ljmp in std jb lcall sar ds ret adc shr fsubs add dec adc jno sti lods popa inc adc sbb test and (bad) mov mov fsubrs insb lods fbld pop adc mov adc outsb and mov subl into xor xor mov add xchg addr16 pushf or into es clc out pop popf cmovno out lcall ror in lahf cwtl xor out cld (bad) aam cmp mov and daa and xchg cmp adc loop inc test or inc jp push fisttpll and insl mov cmp sub push insl nop std cmp rcrl xchg push adc pop fld push fstps push outsb sub out mov outsb cwtl gs fsubs jne and dec loopne dec jge and push fimull mov orl scas fwait inc arpl xlat add jmp sbb lea lret int3 push mov daa std pop daa push or std stos (bad) or pop stos mov add int enter dec cmp inc xor sub sti cmp mov pop movsb jns add mov shrl stos xchg jl sub fstps sub insl mov sti mov mov xchg and push fnstenv pop and jo enter mov loopne in xchg sahf adcl out fimul iret in cltd adc or inc daa sub imul dec mov in xchg xor ss test sub xchg pop leave inc popa dec ds call and andb mov xchg or gs cs sbb dec mov or faddl pop loope dec sub repnz cmpsl xor sbb cwtl jae sub fimull (bad) adc ljmp aad adc cltd jl ret loopne jecxz aaa out xchg mov lock pop rorl push testl mov daa lahf jo and std pop xlat inc es fisubl jns cmp mov dec jne mov loop jp inc cmpl xchg sub or lea push icebp repz dec rcrb push push mov dec jb icebp jge imul xchg cli sbb addr16 xor outsb push out mov das enter and push mov fnsave loopne fildl lret cmp (bad) loopne push sub pop cmpsb (bad) push sub push mov repnz mov inc lods iret and popf xor outsb jp rcr icebp (bad) rclb mov (bad) cmpsb jg ss xchg shrb push pop aam and cmc jge mov xor add popa and popa test daa lock cmp (bad) mov into mov push (bad) insb test outsb jmp and push ret lods pusha and sub scas popf out idivl push jns push cmpsb and xchg mov jae sbb sbb cld cwtl xchg fstps push insl sbb decl insl outsl leave sub xchg in mov iret xor outsb leave (bad) mov mov lret mov cli loope and sbb ss mov xchg sub mov xchg dec push loope sbb inc add je lods sbb sbb cmpsb jmp outsl shlb ret in pop popf add and inc ror mov negb mov (bad) xchg (bad) jmp sub rcl add mov cs pop pushf subb es stc lret sub add mov das mov mov xchg xchg push push pop pop orl loope mov pop bound pop cli push cltd lret or pop pop lcall dec fiadd incb jae loopne enter push push je add mov push clc cmc lods jnp in faddl test enter lahf stc lcall dec test push jmp sahf sbb ss add icebp negb loopne adc fisttpl arpl subl xor sbb and sbb aad call dec in or jne ss adc xchg test sub mov imull movsl xlat shrb (bad) push push sbb adc push inc insl mov xchg aad negl and mov pop (bad) push and push addb lds out scas adc fisttpl pop mov mov scas aaa in mov daa dec addl xchg push aaa out jbe fiadd in in xchg pop les rcl int3 xor pusha or (bad) sub stos mov nop push pop insl and lea cmp xor decl sbb test dec mov movsb into push adc or pop dec add mov cmp insb pop xor jg (bad) ja mov lods rcll adc pop sub dec or repz lea push mov push insb movsl inc imul out les leave out mov jb int shll cli shrl icebp addr16 jl aad xor rorl repnz loope push inc ds adc hlt pop mov mov push movsl cmp jne roll (bad) xor aam jg dec fwait lds or mov loop hlt test in ret dec out jnp adc mov movsl test or (bad) mov rol mov sbb xchg jbe bound push aad and enter sub repz nop addr16 mov mov loop (bad) jae jp cmp fld add loope mov iret or aad insb push test or movsbl mov push (bad) cltd je pop mov push or fimull lcall roll out mov ret and hlt dec mov in ret and int cmp aas aam imul scas mov ja test mov ljmp dec inc out dec or fwait repnz test inc push cmc (bad) (bad) add jo mov mov icebp mov sti pop cltd sub loop (bad) lock adc sub mov sbb adc mov clc fildll hlt dec xor ss push test test stos icebp push cmpsb shrl mov int3 (bad) mov pop xchg mov jo xor add shr fcmovne or and or sub push imull rolb iret int3 dec imul imul pop hlt lock and push mov xchg sub (bad) stc and es hlt (bad) xlat or jg xlat push loopne,pn cli cmpsb roll pop pusha add pop leave bswap sub cltd sub cmc cwtl and in sub ret testb iret cmc jne mov push out inc push fdivrs cmp ja (bad) mov sub cmpsl (bad) and xchg inc arpl ds ret mov push (bad) pop pop sub negl mov pop dec pop aas cmpsb pop and cwtl aaa out imul inc int xchg das sub rcrl icebp or add ror popa aas or or push aam cmp xchg jmp sbb ljmp mov sub repz jb xchg push sbb cmpsl fnstsw push loop aam mov in adc pushf out ljmp cmp sub faddl loopne inc and cmc jp ljmp out icebp jae lcall out xor addl popf shrl adc mov xchg push pop mov scas or xor jae push ficompl addr16 (bad) div scas cs push iret push ja jnp icebp imul dec movsb cmp mov xor mov rorb fldenv mov out pop test shrl (bad) insl cmp or cmp addr16 out pop or out or xchg clc xchg loop or mov stos enter add ds push lahf jl sti adc cmp push adc sub ljmp sub ljmp jecxz std je ja addr16 je sub aad push mov wbinvd pop sbb pop adc insb jmp (bad) sub lods aaa call lahf sti dec data16 movsl jle fimull gs cmp in mov jno adc push push gs push cmpsl aas mov hlt repnz (bad) fsubrl cmpsb cwtl dec dec loopne fistl popa gs int repnz jge jge aaa push pop dec dec shll fdivrp sbb fidivrl mov push mov in add (bad) or xor xor rorl add (bad) xor dec inc fistpl dec inc aam cmp in add jmp add mov data16 sub xor loop sub notb into shll inc mov jne fldenv icebp or in jns cmpsl sbb insb push add stos adc dec add xchg (bad) inc add mov out cmpsl iret push lahf xor in int3 add js fdiv nop cld dec cmc jl push jne xchg aaa sbb loope jb bound jo test lods jge sbb arpl iret jle cmp jns add add clc imul lods repnz outsl xor add leave in mov addr16 xor mov mov cmp jle adc lahf sbb fcoms mov jg or jbe cmp shrl fdivrs aam or ja pop jl inc lea je lcall lcall cmp iret or jne mov xchg call and ret sub push daa daa stos mov bnd cmp push lahf lret mov cli (bad) jno outsl insl cmp leave test loop sbb pop sbb pop dec insl aam pop cs sbb push push push jbe test adc mov push insl mov xor push mov xchg dec mov and xor xchg dec dec or or cmp push push mov shlb inc push mov mov (bad) aam arpl mov xchg (bad) or insl mov shlb shlb fist leave loop xchg les push data16 mov mov adcb fidivr mov rcrl in clc sbb jle hlt add push xor lret and cld lock ret insl inc mov mov cltd pop daa push stos aaa add rol test pop lret loope fwait imul dec lods (bad) pop (bad) (bad) scas xchg sub imul push jne lea sbb xor add aam into push xchg (bad) pop outsl cs xorl vcvtdq2pd jnp fildl dec and jp fyl2xp1 lcall and sahf arpl loope adc dec arpl (bad) dec daa push into vpsrlw pcmpeqd jns push or xor lock fcoms cmc inc jle int3 gs adc aas ret sarb sub mov jno sbb jp inc fsubl outsb sbb pop mov pop cmpl pop xor test (bad) mov xor jge lods int xchg or pop pop cli lcall cmp jnp sti or js popf pop or loop aad out daa or insl in push inc jo std cwtl (bad) mov (bad) iret cmp das jno or sbb out idivl pop xchg scas fdivrl sbb mov cmc imulb and adc sbb adc xor mov ds js out or repnz jp push (bad) xor test sub cwtl pop mov sub fdivl popf or clc xor mov dec bound inc mov inc clc jge add mov jne and and loope int3 jns mov in ss loopne (bad) cmpsl adc dec mov mov mov data16 dec les xchg (bad) add pop xor lods mov jno cmp insl mov pop in sbb xor push pop mov out mov popf xor cli sub cmc or jle notl ja sub sub pop jno jg push mov sahf shll gs xor icebp xor sbb stos addr16 cwtl ljmp mov insb mov in mov ret addr16 sbb xor lret inc inc ss call fs or (bad) inc int3 xchg cmp xchg sbb ret xchg movsb stc (bad) into iret rcr icebp pop cmp push cmp stos or sti push lret mov inc dec aas adc and insl out lret and or addr16 pop popf test lods cmp lahf mov scas rorb sub pop jl bound out cmpsl lods xor push dec adc (bad) cmp mov repz cmpsb (bad) nop icebp jle mov cmpb mov pop mov (bad) xchg (bad) jecxz xchg pushf xor jp mov sbb pslld xchg jns xor jmp jae sbb fsts pop pop aas sub fistpll or ss sahf sub mov out push mov shr cli hlt cmp inc gs rep dec adc push lods mov insb sbb ret xchg (bad) adc pop fs cmp mov cmp jge sbb mov mov fild xor cmp ret in xor data16 jne mov jl arpl rcll (bad) test pop in dec lret cmpsl pop dec mov in or mov pop dec xor xlat shrb push outsl push cmp dec fldl push in bound xor add xchg jle fcmovnbe jb gs lods rcr rclb dec ss pop sahf mov arpl xor jnp pushl mov fcmovnb arpl ret rcr call int adc in xor mov xchg cld aam pop js or mov insb inc mov xor dec push jbe ret jecxz adc mov hlt xor inc (bad) xchg and lcall dec movsl cltd xor or cli out jl fwait sub inc xor lret fcom (bad) add pop and pop and sbb mov lea sub pop and fildll push (bad) mov (bad) imul stc inc leave sbb dec sub cld lea insl (bad) or popa pop popa push test inc ret add ds xor and mov pop jne xchg (bad) jecxz lea addr16 jb add stc inc cmp test cwtl add xlat add mov jle cmp in mov push (bad) idivb andl lret jle aam js in jno sbb push scas div push (bad) fimull ror in (bad) aaa xor popa jge and (bad) jecxz mov in and enter test je xchg xlat jae sub xchg or movsb fmul shrl sub pop roll je cwtl stos aas xchg fdivl jp loop (bad) arpl or mov pushf ret cmp mov rcr mov (bad) es nop std pop jns stos sti push ffreep sbb sub sarl cmpsb lods and jp adc in popl bound push push loop push in jmp jecxz decb adc or jno cmp xlat arpl shlb js movsl mov sar arpl js daa outsl pop mov inc imul ss sub les add cmpsb push adcb lcall outsb push mov or insb imul ja push sbb mov jg and out test mov adc xor jge push dec icebp test mov mov push inc out (bad) lahf push pop lret mov outsb mov add imul pop jp (bad) adc mov and cwtl fistp ljmp sub add and jno insl test testl lods cmpsb sub out jecxz jg add in jp inc dec scas jb cmpsb mov gs jmp mov lea add xchg sbb shlb cmp add mov push xor (bad) jnp or jg sub mov into xlat mov es insl adc inc add negb push nop pop adc pop test in jmp insl rcrl xor data16 dec sub mov mov jecxz push (bad) and dec and pop adc mov jle xchg pushf xchg pushl mov mov lahf pop stos or and dec push outsl sbb and ja jge into insl xchg pop mov mov insb lret jbe lahf icebp pop in xchg push pop xor xor or jbe mov jmp das mov mov test popa rorb pop jno sub jo (bad) scas xlat dec fdivs mov add in aaa popf sbb or cmpsl addr16 cltd jb pop xchg sbb xchg (bad) push hlt mov aas clc cmc dec and cld xor mov adc push and icebp movsb push xchg or negb (bad) imul sub mov call pop mov jae add lea std out ljmp iret dec xor jmp and push dec (bad) scas jmp push dec sub push xchg ja mov mov clc dec leave xchg inc pop add in jge mov xchg cmp mov dec les pushl xor je xchg sbb inc dec cmp jne and shrl stc aaa imul into out in outsl xchg inc bound mov xor or mov fsub jl xorl cmp pop test pop aam out xchg nop clc mov (bad) lea sub shlb xchg popa mov loopne (bad) js push dec (bad) popa pop sub cmp lods loopne push out jmp insl int3 jge lcall loopne or push xchg (bad) xor dec xchg mov jnp sub insl repnz (bad) (bad) and test adc sub aas inc cli hlt movsb aam cmpsl xchg mov pop fstpt xlat push xchg jb fisttpll lret fistl sub in scas (bad) sub pop mov out jl ds bound jp inc in xchg icebp subb cs push ss fdivrs rcl push inc cmp enter mov add test push dec xchg clc jnp lea popf inc mov stos cmp dec fidivl les mov cmp fildl mul lret dec cltd out cs xchg dec out mov pop repnz mov push xor dec test daa xlat ret movsb lods (bad) mov push adc negl lds aas inc sbb ret dec dec sub push sub xor cvtps2pd cmp lret mov and jno xchg mov (bad) ret jl bound and (bad) js sti pop jne add and fistpll mov xor sub mov cmc bound (bad) pop inc nop ret hlt fnsave jmp pop cmp fwait shr xchg sahf ss add xchg mov fsts jp xchg xchg in pop pushf scas cltd jp mov xchg add pop les jp jecxz pop xlat movsl mov pop shll shrl cmpsb mov arpl mov mov lcall or test (bad) inc (bad) or sbb outsb icebp mov hlt shl cwtl mov push cmp sbb mov push mov in push aam loopne jb das mov push dec sbb adc rcrl shlb inc sbb rorb mov cmp jg in xlat lock out and adc adc lods pop ret ss dec sub lret mov mov cmp jns sbb sbbb test stos and imul cmpsb aas or pop (bad) pop movsl cltd fstl inc mov cmpsb test test jmp sahf mov int mov jo and add inc lds std add sbb aad jo ja xchg outsl sub cmp mov outsb push mov lret xor fsubrl pop stc add cmpsl call sub fwait repz popa lahf dec pushf mov lahf aam les cmp mov cltd addr16 push fnstcw lret rclb (bad) fs mov adc mov std pop or clc shlb sti xor xor popa outsb inc cwtl push notb pushf jg dec pop aas push mov jp xorb xlat push mov pop inc sbb cmp loopne pop das popa mov or xchg int3 sbb jl sbb (bad) pop dec sbb pop (bad) xor test jle sbb inc out (bad) xchg pop decl add jp loop imul in pop xchg dec pop mov push sbb mov arpl pop push jb incb push jbe jb jb xor (bad) pusha or adc xor ljmp mov movsb (bad) repnz rcl out lret (bad) icebp insl pop push rolb push popf cli roll sbb xor pop test scas sbb out imul daa adc fcoml cs insb jp int3 fmul xlat mov jns rclb xchg jmp scas dec xchg add (bad) xor subl (bad) movsl daa xor mov sbb dec fsub inc push add inc movsl push mov xchg xlat cmc out addl add fsubs jnp xchg insb dec mov fwait out test push adc and jns test loop stos push jno cmp (bad) hlt int3 icebp test adc fldcw out insl fstpl movl push (bad) jge push out cmp cli aam int3 lcall repnz push call sub movsl jl mov fiadd (bad) xor iret sub xchg rcr loop mov push xlat dec cld ds mov imul fbstp insb mov ret jae out inc mov test sub fcomps adc jmp push or stos mov cmc xor push pop pop jecxz loopne test rcrb add scas fimull dec mov mov mov lahf fisttp (bad) sbb in dec sbb test out xchg xlat add lock (bad) data16 scas test ja addr16 or jnp sub or xchg sub adc cmpsb in xor jmp nop les or sub scas ljmp cmpsb cwtl out or loope jmp nop cwtl mov mov sub cs aaa pop pop add imul enter mov stos clc sti (bad) ffree loopne nop mov jne lods jno push je jg mov mov ret mov jle jmp cmp sbb push (bad) int jmp push test mov mov popa push and jns shlb pushf sbb adc mov insb mov out fs ret inc push roll mov aaa mulb mov push dec pop dec cmpsb fcoms cmp fimul or daa inc cwtl mov add cmc push adc jmp pop lahf push (bad) sahf xchg (bad) ffree sbb scas jle out push clc outsb adc ret jmp enter scas aaa mov mov movsb fbstp repnz notl stc movsl push and in mov lea xchg mov int3 outsb push push sbbl mov cld data16 and out pop mov into (bad) mov test cmpsl adc iret and negl popa pop clc jmp xchg xchg dec push (bad) mov inc pop xchg or xchg movsb inc daa jne jbe inc pop lods insb fistpll call in cltd jg test pop inc xchg xor push or push (bad) hlt add dec push stos inc out mov dec std popf pop and rcl in cmpsb push mov sbb mov push cmp adc or sbb xchg push dec pop jl xchg mov xchg mov sbb and clc ficoml faddl paddusb ljmp pop push adc mov or gs xor aad pop call mov jbe add xchg cltd dec call call mov into sub sbb fwait in rclb and mov jae cmpsl bnd push dec push imul dec mov sbb iret cmp xor push popl xchg ds roll or repz xor mov mov lcall xchg dec or insb pop lods dec xor jno addr16 lds mov les jae (bad) jns jne mov imul mov (bad) or adc push ja jne call test movups fsubrs arpl das je adc mov sbb and insb std hlt shlb scas mov je xchg xchg js in add jo push jecxz js mov pushf xchg mov lea insl je cld icebp js cmpsb sahf shrb mov push fsubr jb xlat cs xchg in push xchg jle dec add mov jne mov outsl sbb or aaa fnsave cli push repz mov cmovne push lock xlat add orl (bad) das xchg dec ss (bad) mov ljmp mov push inc xor (bad) jae sub dec mov iret mov add cmp (bad) sbb jle shll dec jmp add jmp das fidivrl das sub push in int sbb sbb (bad) xchg mov jl mov leave xor or sub dec dec pop movsl mov inc sbb aad sbb mov daa mov xchg sub movsl mov and out pop insl xor cmp ret pop push test mov jae rcrb in sbb repz mov sub and stos cltd frstor mov push push adc insb lcall lret scas ret cmp sarb inc and (bad) ja popa mov faddl jmp add inc test (bad) adc adc loopne hlt push mov or mov daa enter es mov or add mov adc mov int3 sub movsb lahf leave sub out cmp mov mov xor add cltd xchg add inc neg mov (bad) mov ljmp or fsubrl js pop (bad) cmp inc addl bound outsb mov stc cmc mov sbb aas cmp mov rorb inc gs fsubs js mov dec adc and ss push lods stc push ss xchg add lea jae cmpsl int out (bad) mov inc insl (bad) aam mov cmp insb mov pop into xor mov repz sbb mov xchg inc (bad) fsubrs pushf stos negl insb iret sub out mov sub inc sub sub repnz mov arpl push or and into call or test jmp cld rcl aad xchg (bad) or insl sahf pop jnp mov lock adc into jno movsl xchg loop xor mov stc lea dec push jg jns pop sub les mov jnp mov xorl mov cs mov and jmp push jle out push mov mov dec int3 xchg imull jg inc cmc outsl pop and and cmp movsl pusha hlt aaa sbb and ret (bad) xor sahf cmpsb (bad) adc insl cmp stos test push aam clc mov (bad) out sbb adc xlat (bad) and lds (bad) inc push jno mov stc sbb cmpsb add adc sarl pand outsl imul mov sub js mulb shll push jle bnd jge neg xor add sub (bad) jnp jns pop cld mov nop inc aaa lret inc jmp (bad) mov (bad) aad mov cwtl out add mov data16 cltd insl mov adc ficoml inc int out mov or scas arpl test (bad) mov in mov and ja and movd lcall mov ljmp aam mov pop out scas pop mov sti loope dec dec data16 idivl popf in xchg sub pop stos pop pop sub jae dec shrb loop flds pop mov xchg and push inc xchg jg dec fisub call push add inc stc hlt fcomip mov sbb das cli cmpsb or cmc mov repz fstpl xor inc test addb push fstpl movsb dec xor add dec incb pusha xchg addr16 sub movsb add add dec test mov negb jne cmp and cmovb mov (bad) jne subl xchg or dec mov cmp pop sbb scas ret and out stos add sub and lods or in jae aas jecxz nop outsb cltd aaa popa mov sub jo repnz add mov adc pop mov lock daa imul adc xor sbb push sub out les fist stos xchg fimull sbb adc pushf lcall jg mov mov int3 sbb ss in das dec ljmp xchg loope xchg (bad) popf sub dec jbe int3 pop (bad) cltd pop sbb lea dec mulb sbb ret push add repz xlat sub push pop dec test pushf in das (bad) rolb jge pop pushf and in xchg mov pop rcrl mov add xchg jns push or mov adc push cmpl stos jge (bad) xchg mov stc mov and push and and mov or aad mov xor pop jmp icebp fldl cmpsb add mov pusha aam mov repz rcrl dec mov lret scas in insl mov push loope ja sbb pop xor cmc or test faddp std pusha test fdivrl sbb lods add popf sub ficom mov in cmp jnp pop cli insl adc mov mov adc arpl jge sbb dec and mov ja insl and dec sahf dec (bad) push subb sbb inc dec lcall sbb scas mov arpl push aas jae adc dec xor cmp sub inc hlt inc cmp cmpsl push js lcall dec pop leave ds dec add xor gs xor add insb rorb jg cmp outsl je push ret adc repnz call gs sbb pusha sbb mov or sahf push pop shr (bad) push xchg shll es aam iret insb xor mov in aaa fsubl mov sub fnop adc or add mov cmpsl add inc pop jge popf pmulhw add adc (bad) cld enter pop jge aas sbb movd mov ret inc popa push lahf push repnz xor clc out sbbb xor add add xchg orb xor xchg (bad) divl pop rorl adc or mov xchg mov pusha mov jno xchg scas call repz cmpsl cld js outsl out dec cmc cmpsb mov or inc (bad) fisubl jne repz loop mov mov sub and pop and jmp rclb dec xchg int3 pop adc test and jmp xchg dec jmp ror cld pop pop out loope push js pop cwtl fsub leave cltd jo call (bad) clc push and mov arpl lods js cmp pop jb outsb sub xor mov or lahf inc ds sti jmp mov dec mov adc cmp in adc mov sub jle inc jle adc fsubrs adc jo xor movsl sub test sub jmp lret iret cmpsb and mov xchg dec int movl hlt cmp inc cmp push pushf pop ds push adc repz rcr out roll frstor cmpsb mov test sub icebp and cmpsb fldenv sahf gs sti sbb (bad) iret or lods (bad) fistpll cmpsl adc or mov xchg and jp outsb mov sbb jmp sbbl std in ds xchg (bad) lods and es leave data16 jge push sub std mov xchg mov pop ss dec inc xchg push cwtl andl stc mov mov push mov (bad) hlt test xor mov push cmpsl stc bnd mov sbb adc sub aas push mov ljmp loope fdivl adc dec outsb push dec pushf push cld outsb int3 loop scas mov test mov or js mov mov pusha mov rolb adc mov nop (bad) pop mov or mov pop xchg xchg inc pop and test xor fbstp lods mov mov fldenv icebp in int mov jo lret push jg shrl test or js or or mov adc xchg call inc push int3 int3 ror in cltd xor pop loopne subl test mov mov fsts nop lret pop push mov mov xlat push pop icebp inc xor push aaa and scas and sbb (bad) in (bad) add push cmp in pmulhuw insl clc mov out aaa inc pop dec sti aad and jmp fild jle add fs in xchg xor rcrb pop das rcl test fisubl jmp push test loop mov lock add into or mov jecxz hlt fcoml mov push jo mov in lcall pop data16 mov cmp mov dec jns test lock out xchg inc push push aad out lock cwtl stos popf sbb clc jle (bad) xor inc (bad) inc add inc mov pop cmp pop mov add and dec xor out xor (bad) xchg std inc into std icebp in inc sub int inc pop sub or nop arpl sub imulw and jno dec sbb dec cs bound sbb lahf (bad) repz dec add sti jnp test (bad) (bad) lds outsl das xchg pop inc add adc and bound movl sub fwait pop mov repnz jg icebp sub scas cmpsl icebp cwtl lahf in addr16 imul popa add push outsl dec shll loope lds popa fwait mov adc and cmpsl mov jae sub outsb jg loopnew pop add sub repz push pop arpl pop adcl add pop fadds aas mov (bad) ret push testl dec aas js pop push dec fist mov cmpsl push stos lock roll push loop lods fcmovbe cmp (bad) fxch imul push nop push pop cs mov mov shlb stos mov repnz add ss sub int3 sbbl push hlt push push jg jns loopne pop jb fldl xchg xchg js cld call in jbe jb nop cld pop cmpsl inc mov jo in lock ds xor daa (bad) (bad) das ljmp cltd mov lcall add insl je cmpsl inc int (bad) xchg andnps dec mov xchg cmp adc sbb (bad) aam dec ret jne int3 dec loope fabs insb adc mov inc shlb inc push mov dec jp imulb lock pop pop xchg fdiv lds adc (bad) xor lods loopne arpl fnsave xchg test lock clc or (bad) push lods les cwtl call xor push jle iret fisub xchg sbb fidivr push add hlt mov ret loopne mov jo xchg sbb ds sbb or sbb jne mov jp (bad) jbe inc jbe lret xchg add jmp shl cli lods xchg loope notl scas ficomp mov push nop adc jne fidivr cmp lret xorb out push xchg inc fldenv mov out xchg xchg mov add (bad) mov xor lret (bad) push or push ficompl inc cmc lahf sub dec shlb or loope test test int push mov test into add fsts imul dec and mov les addr16 mov add or push popa dec cmp mov cmc mov ficomp mov daa sti jp repnz inc loope xchg inc add adc out push pop xchg mov popf or jo cmp out insb popf mov jno out dec adc sub ja out loopne adc ficomp (bad) inc mov push icebp sub and sbb lods mov cmp aas dec dec adc hlt jge pop data16 inc push jge mov or jb loope repz out push icebp pop sbb sub mov (bad) cmp pop mov mov dec sbb arpl sub mov cmp fbld movb xor faddl xor pop std leave mov test bound or adc (bad) mov cmp fs add jecxz mov cld push lahf dec jo pop sti inc cmp mov mov and cmp pusha pop xor add clc lods xchg mov xchg imul pop or cmc iret (bad) cmp mov imul pop push cli push mov lahf pop hlt and push rcrb lret sub movsb cltd xchg ret jecxz sahf cmc in (bad) cmp cmp nop xor (bad) icebp adc gs idivl jecxz sbbb test xchg outsw pop sub int3 push sub push int3 fildl test jg andb mov jp push mov xchg scas dec mov sbb inc xchg ficompl xor mov orl and (bad) arpl ljmp xchg mov cltd test cs inc enter mov dec pop adc jp loope push sub test push test loope add add lcall insb dec fmul mov inc lods sub out cmp push fistp mov popf dec test call xchg rcrb sahf insb mov in (bad) popf int cmp imul and mov push mov adc notl jae sti xchg mov stos push subl hlt aam popf daa faddp cmp std cwtl xor shrb pop jo cmp ret adc mov (bad) fwait arpl xor xchg and bound (bad) jnp daa mov bound sub and (bad) fidivrl jle outsl add repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc incl add pop push sbbl test sti add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add jp add add or or add or add add add pop or add add mull add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add cmp push js in (bad) ret bound sbb mov fldt insl (bad) leave mov mov in lods into add js add add add xchg ss jb std shlb xor push (bad) mov cmp ss push ret pop xlat orl mov adc (bad) (bad) stos cmc ror imul (bad) xor call mov (bad) dec xor fcomp popa jp xchg or mov push aaa in test jnp int mov ljmp and movsl frstor sub or add addl scas in push xchg fistp adc mov adc xchg cmpsl popf nop or bnd (bad) repz adc jno ljmp and sti adc aam loopne push fnop sub cwtl and pop mov loope fisttpl int3 sbb je hlt in stos mov add ret inc subb popf lock mov inc mov add mov mov (bad) cmc imul xchg dec dec jge,pt jecxz fadd jle mov dec repnz sbb add pop cltd mov jg mov into int add cli push xchg addl jno and or fmuls into xchg mov jg and cmp push das jmp (bad) int3 sub or clc jae fbstp or xor mov pop cld cli inc cltd xchg es ret lds dec inc xor and add fstpt cmp inc xlat arpl cmpsl in mov mov and mov mov ds flds cwtl cmpl hlt call popf push pushf cmc outsb mov cmp jmp xor sbb dec jg stos adc push repz add mov (bad) (bad) (bad) mov push lods (bad) hlt pop arpl xchg lahf pop scas in pop dec in jb pusha or dec push fs ja jb cmpsl xchg out sub hlt (bad) fwait jecxz leave or pop add shrb mov and insb cmp sub xchg sbb mov bound sbb shrl es lahf insl mov inc cmpsl xor (bad) rolb push stc adc sub imul (bad) shll lods sub stos jl lods pushf inc or push jbe jge dec in inc pop mov add arpl add pop jb xchg dec (bad) out daa jmp addr16 push dec insb cld adc mov test pop sbb movsb add jge stos jge cmp xchg jle and sbb loop daa test fistpll (bad) movsb mov mov xor sub (bad) sahf push and inc mov add in or pusha mov jge pop adc (bad) xlat mov pop xchg mov test pop pop mov or bound jbe add imul scas (bad) ja cltd mov mov jl mov rolb jecxz inc push jo aas ds cmc push sbb daa push icebp xchg sahf insl inc aas adcb add ficompl pop je hlt aas mov fsubrs sbb add push and loope mov jg in inc dec xor adc mov repz popa subb inc dec je xchg outsb fcomps xor xchg lret xchg mov cmp and xor int3 or push jmp mov pop cli jbe daa js dec bound pop out add lret data16 ss call push (bad) je sbb (bad) xchg sbb and (bad) loopne out es or orb loop xchg push mov lret xor rol inc lods jmp adc leave inc or cld add negb repnz adc sbb push pop stos ja xor fnstsw mov bnd popa jmp push push pop adc cld movsb inc dec pop jle ds adc repnz jle pop pop push push xchg xchg or pop and dec push mov lret hlt popa cwtl or push mov mov aas fdivl (bad) (bad) sbb sbb mov mov add cld adc inc pop or (bad) mov sub (bad) sbb loop aad push fiaddl cmpl shrb mov insb dec push jmp stos pop xchg or das jnp stc mov fcomps cwtl dec mov sub scas test loop popf sub mov popa xchg loopne and loopne cmp or inc notl ljmp sub jle xor jle cmc push fsubrs cmp cmp add sbb fistpl pop sbb dec xchg in out test mov ljmp fwait iret mov jle xor insb or dec xor fwait xor pop or inc popa popa xor xchg outsl lds mov sbb daa and jo gs mov cmp adcl inc inc or je sbb mov in popa imul call addr16 repz jno (bad) divb adc les push mov popf popf push insb mov jb cmp fsubr inc mov inc fiaddl mov inc inc and (bad) (bad) cmp or sahf outsl lcall mov lret and push jg xchg inc pusha xchg mov test popa cmc in mov hlt fucomip ficomp mov data16 jnp dec push push dec push jb adc repz xchg fiaddl sbb xchg lcall mov stos dec jo jp pop adc and sbb popa int3 mov mov (bad) icebp dec push test inc imul push movb jl mov aaa dec loopne or mov push out ss mov lret push pop pop pop aam addl pop out sahf imul push jae xchg imul jg inc sti je mov jl incb xor sub stos adc fdivr or mov mov ret lock mov pop mov add cmp sbb jmp xor sahf aaa aaa mov adc jle (bad) rcll sahf mov lods mov (bad) mov sbb leave mov mov jle add arpl pop xor lds addl mov or xor inc xchg lods sbb cmp jg or pop ljmp outsb fidivrl faddp les enter insl cli xchg pop aas addl cld push (bad) ffree xchg sub (bad) cmc popl push outsl outsl stos sbb push mov xorl into pop (bad) jge std popa push pop nop push sub test icebp (bad) push xchg mov movsb push in push mov (bad) pop push ljmp std or inc pop cmp inc add je jp jecxz dec dec ret pushf add fidivr and cmpsl inc lds xchg mov inc or mov in jg (bad) cmpsb loop fistpll js xchg add ss aad mov (bad) xor mov cmpsb stos clc sbb shrl pop pop dec push or fcoms stc and pop add out adc iret leave jbe fidivrl in scas mov repz inc pop fildll loop lods mov in mov xchg into mov and test push pop dec sub jb mov mov (bad) shl lods enter and movsb outsb adc mov fwait les push push fdivr mov push pushf mov cmpsl test into fldcw ds fcomi pop and lods jnp jae mov pusha cmp dec jo push pop push test sub pop jp or scas and push adc rcrl das lret mov iret mov and ljmp ret daa aam push mov adc adc mov or stc xchg mov lret nop dec sbb jbe pop bound dec std rcl inc jb xor shrb pop popf jno inc cmp jp add pop dec xchg stc mov imul adc mov pop ja jge dec dec scas cmp pop (bad) jae sbb pop inc cwtl movsl ror mov pop jp and jmp dec adc and jl rcr sbb jb mov shl in mov adc scas push mov enter push icebp in out mov jno inc iret push dec ret jmp aad sbb jno adc or push ja pop scas addr16 inc push pop nop loope jg mov add sbb xlat mov push repz outsl rclb lret loopne in inc push out pop or adc or adc mov jo cmpsb add fdivrs mov fcom popf fwait pop jo pushf sbb mov adc jg dec loopne les add adc pop jmp push int3 lods pop popa push in push push test dec ret clc rcll sahf fstpl jle rclb sub leave adc sbb adc adc mov cld mov sahf jge lret sbb and gs xchg jecxz adc lret xlat popa sti or mov test mov push cmp adc mov dec jmp mov ja xor ljmp imulb lret cltd (bad) add cmc push mov mov je push dec mov sbb xchg mov jl cmp or in sub mov test dec ljmp jg int add mov sahf aaa pop scas xchg fcompl jbe pop (bad) (bad) icebp daa push in movb arpl lods sub pop sbb and aam sbb imul pop xchg (bad) or xchg pop pop in aam cli scas mov jmp fwait mov add icebp cmpsb bound (bad) imul idivb divb insb mov and or mov mov adc push fcmovb xor and fcomps and mov cmp xchg pop scas imul rclb and sub sti push repz push sbb push stc stc (bad) cld mov or lock add mov jbe notl (bad) mov and pop fldl scas pop mov inc js ret inc and ja iret movsb sub or popa clc adc xchg mov stos or stos ljmp mov jge fiaddl xchg push repz dec jecxz es jnp repnz lods mov mov stos mov ficomp out pop testb push gs push mov inc repnz pop dec push cmp fwait mov sbb pop jg cwtl imul cmc scas popa jge pop imul out adc push or ja,pt in push fcomps fnstsw jno cs in jnp mov (bad) mov add js (bad) mov xor jmp insb dec jmp aam lret mov icebp into std daa (bad) lea sahf pop stos add cmc xor inc sub dec mov sbb mov xchg mov (bad) jmp mov test xor mov and lock xor push in in or mov xor xchg fsubp adc lds cwtl movl and (bad) aaa xor push or mov dec pop (bad) enter es je pop or test out mov rclb push mov inc adc jae out cli push rcrl lds xchg push lret mov int jb mov mov push enter mov pop loopne and pop lods or push imul in cmpsb dec popl jnp dec push (bad) arpl mov insb scas es (bad) mov adc addl mov mov dec jecxz xor js pop jecxz repz mov xlat loopne mov test add dec fwait pop inc mov add andb in mov jbe outsb out por pop push push scas std cmp ja mov aam sbb (bad) adc jb pop in xor jp movsb loope cmp mov cwtl icebp inc lds inc jno xchg ds xchg cmp xchg mov adc mov pop xor sahf sub ret inc inc out push (bad) add push popf stos fsts adc inc test cs mov push mov mov out in mov mov xchg jbe pop outsl cmpsl ret test mov xchg je lds add in cwtl sbb or movsl andb (bad) cmp jne (bad) and xchg bswap cmpsl sbb add jae nop mov xchg ret push pop ss mov xchg into std mov add test add pop adc mov push push fsubrl push adc or pop je push xchg pushf and or cwtl iret dec inc les mov cmp inc and insb mov movsb das push scas lea testl xacquire jae mov jno stc sub cmp bound fnsave push addr16 leave aad sbb addr16 lret or fs (bad) imul ja stos sub mov lock lahf cs pop pop add dec outsb orl les sti mov insb cmp jge mov xchg cld mov lock pop (bad) je leave sub fidivrl fdivs jno das enter add add int3 das or add out sbbb push jae (bad) mov push in ljmp iret leave loopne (bad) cmc jg inc pushf ret fdivs sub xlat mov ja aad sub stos insb mov stos xor jnp inc jo outsl sbb repnz cmpsb mov cmp xchg roll les xor enter sub push and inc cmpsl or xlat lds cmc loope movsb stc pushf outsl fs push jo into pop mov out push and lcall pushf stos dec mov xor aad mov sub jge (bad) daa lds and mov daa cwtl add insb mov and pop jnp andl dec nop fistp or ret jae xlat mov or and and ds pop xchg rorl adc dec xchg pop in dec mov inc push push mov adc ret or bound (bad) or push jge dec adc push pusha in fs adc test inc pushf inc push add or add jl ret mov xchg fimul or daa xchg xor call and (bad) mov push cld cmp lret adc loopne mov inc mov pop mov inc push cli mov aas xorb sti cmp mov jo or into cmp or notl mov sti fcoml jmp mov js into and add sub push push jno mov jmp (bad) ficomp adc lock fdivl fcmovnbe cwtl mov mov mov and adc xchg jbe jb cwtl andl push inc adcb (bad) or aas sbb or sbb jnp rcrl adc (bad) jae mov (bad) mov jb xor sub mov arpl push push ret jbe and sub xchg repnz ja in inc mov mov and mov add hlt mov push loop stc dec out push cld stc popa sub shrl hlt (bad) xor mov mov out cmp adc jl aas mov loopne jle inc repz xchg les jne je and lock jb adc iret icebp inc push test add jl jbe lock stc mov sbb pop repnz std inc test lcall fmull or imul (bad) mov aas sbb punpckhbw sbb repz out rorl stos jecxz loope xchg enter jbe loope cli aam loopne pop orl inc xor push pop mov ret movsb ljmp ret xor movsl mov dec jecxz (bad) scas or out cmpsl cmp or scas inc xchg inc imul lret inc lret call ds sbbl mulb sub es and add adc (bad) in mov (bad) pop cmp movhps sbb push nop cmpsl jecxz inc xchg int3 push shrl dec sbb mov cld fdiv cmp jle xchg xchg xchg and dec sbb ljmp or push cld insb scas lods mov mov cmp daa jns mov loope and (bad) jge mov orb cmp stos test pop mov mov mov lea push rol mov mov jl add add inc stos jnp mov and ja mov cmp call addr16 lret push orb (bad) loopne pop fwait lahf ja or jmp adc std push sahf xor std push cmp adc jb fimul icebp cli push jge cmc ficompl inc push outsb add ficom shlb (bad) leave (bad) mov out mov addr16 or cmp loop fisttp jo,pt xor dec loopne fidivrl cmp sub jmp inc in loope add jo pop inc fsubs dec and subl push pusha (bad) aam xlat scas mov mov imul dec shll sub mov sar and in pop insb add (bad) aas jno lods or inc ja ret adc jno imul pop popa pop sbb je (bad) fidiv dec je sbb pusha movsb cmp mov test sbb mov dec xchg mov iret in pushf xor imul out iret outsl jo shlb nop mov test scas jge rorl arpl lds out leave rcl test sbb jnp imul adc mov arpl pop stc repz sbb push sub pop out rolb and dec mov pop xor cld loop fisubr adc or add je mov je outsb fwait in xchg fwait repnz and or pop cmp mov shll lock xchg fs stc dec xchg sti ret push ja pushf xchg mov outsl mov mov adc cli hlt push test mov cmc lods lret out fcoml mov mov dec lret jno fisubr and pop pop dec aaa incl sub call (bad) inc (bad) mov jp sub sub pop test loopne in or cmp aad push addr16 xchg jno jg cmpsb shrl stos icebp inc pusha add and (bad) sub lock outsl insb nop xchg lock gs stos inc inc add sbb add xchg push gs imul or popa (bad) mov jl jno movsl sbb popf jle add or outsl (bad) mov xchg push in shrb lret mov push xlat mov movsl fisubrl xchg xchg sbb lods repnz adc mov xor ret out mov jg cmp pop inc xchg fucom rclb pop out and (bad) cmp lcall jge add mov aaa push adcl (bad) ret pop pushf inc jmp xor aas mov and inc xchg pop popl add push call imulb xor add mov inc pop loop push stos and mov pop movsl xor mov add es fiaddl adc imul (bad) rcrl mov shlb int imul aad adc jg mov add dec aad sbb xor jmp inc stos dec lahf popa xchg int lahf mov add sbb pop adc dec repnz lods sub push ret jmp add insl lock xor xor movsl xlat ret ret scas std mov das push mov or xchg xor test adc mov aam inc data16 mov xchg mov dec xchg pop add or lret mov jge mov sbb es jg into xor xchg pop pop jle pushf leave xchg push enter pop daa pop arpl xchg enter (bad) mov shll popl lods push arpl mov add fs mov push in dec push mov jb lea pop orl int fdiv cmpsl push call pop mov sub cld clc jge ljmp dec push xorl imul mov cwtl adc rolb test add or dec call dec jb add pop ss inc sbb (bad) pop lahf sub js test and scas scas pop or imul nop or cmp jb pop dec add pushf mov xchg add jmp jge cmp add inc pop mov popa fstl scas lcall push mov out mov and pop insb ret in pop cmp mov jnp ds outsl push idivb add sbb dec inc loop mov mov sarb hlt mov (bad) jne insl std aad inc push sub lock xor mov lea xbegin cld adc hlt dec (bad) aad xor cmpsl ljmp (bad) dec cli inc imul loope test rcr or outsl mov mov je and call inc xor cmpb jo mov sub mov fs mov fadds mov dec in jae insb pop pop jle out adc pop daa fs lea jae jmp mov clc jne ds aaa cli sarl rcll adc arpl les test je into dec xchg or pop xor mov cmc jge hlt sbb enter mov push push out rcrl fprem mov jp,pn sub pop xor jne aad inc sub push and pop inc mov cmc addr16 or mov and xor aas fimull xchg push mov lds jle xchg pop sub mov pop push add int insl jge pop jbe les (bad) in pop imul pop mov (bad) xchg and aam xchg push mov lcall lods cmp mov jae add fist clc push xor dec nop mov cmp iret add push rclb dec adc and js dec push xchg imul in xchg cmp dec add js xchg and fiadd xor pop jmp mov (bad) dec shrb mov xlat mov lds cmp subl add pop jge mov cltd aad sti mov pop xor xchg stos divb xor jge in adc sti scas iret pop pop jbe sbb dec enter std pusha inc fisttp inc imul gs aam pop sbb jle cmpsb push mov cs test jne cmp js adc popf cmc inc add or (bad) sub test xchg cmpsl push jmp pshufw movsb ret addr16 sahf sub insl scas xlat cmp lea ror or lds sub repnz mov jns lock ficom mov stos js (bad) cmp lret popf cltd pop push int cmp lcall push sbbb test push push dec dec lret mov xchg push test dec inc push repnz rorl cmp or popf stc ret mov aaa sbbb dec lcall ret jae pop out sub add sub sub dec cmpsl std dec iret int3 xor xchg call pop sub fsubr adc cwtl lock mov rolb ljmp in mov xor xchg or or xchg mov add jl pusha xchg mov incl mov test inc adc cld adc insl shll mov pop jle lret dec xlat stc aam fs fsubl ss aad (bad) dec push push sbb push fsqrt add push aaa dec test pop ficom xor adc int movl sub inc mov adc cmpsl (bad) inc fbstp sarb xchg (bad) loope push addr16 fisttpll addr16 inc loope das mov std mov add add jp les (bad) inc adcl loope (bad) mull rorb inc repnz cmp iret mov inc cwtl add das push or outsb repz adc lods ja leave push loopne in leave fwait repnz sbb push iret or imul inc movsl int cs add (bad) jae push mov ds shrl sahf imul mov xchg add insb sub lret cmpsb sbb (bad) (bad) insl stos and jno outsl sbb pop pop lahf mov test push jae xchg dec lea leave cmp cmp pusha mov xchg push cs adc mov (bad) (bad) mov xchg popa jnp mov cmp fucomi jo jb mov xor mov jg das and imul mov pop imul push or sbb inc movsl jmp scas lcall scas mov jno pop or inc xchg dec sbb in xchg cmp xchg or add pop mov clc cmc jmp lods insb cli xor inc mov nop add enter in mov or test add jle push enter or pop jle mov sub fwait sub lret or cmpsl std icebp nop aam inc adc jne in and ror (bad) (bad) loopne loopne in ss mov cmc mov jbe dec mov cmp frstor mov punpckldq push jno adc xor add in mov mov dec jns mov mov mov or xlat das push ss fs jge jns xchg mov ds push jmp fcomp lahf insl push mov (bad) std sub pop movsl fidiv xchg test mov cwtl pushf xchg lea push cld (bad) push int3 jb popf int fsubrs fs cs xchg or ret lcall mov aad gs mov xchg test outsl (bad) stos jecxz (bad) int jb lock sbb lcall inc jg hlt pushf test (bad) adc sbb mov dec add push pop jbe fcoml push cltd pop mov pop add mov sub es dec pop in aaa ja adc and into mov pushw sar pop add jl jb pop fwait lcall add in in jl pop and mov sbb xor int mov js lret pop loopne push ret lret neg xor xchg jbe (bad) fcompl dec sbb imul sub push rorl stos loopne push andl js test fistp pop sub push xchg sub mov outsb mov (bad) push jge xor sub cwtl outsl scas es or xor mov gs cmpsl xor jge xor testl negl sbb inc dec ret mov test iret lock jg aas or cli fisubl rclw push int das lret leave std fistpl sbb in iret mov push inc es fisubl das outsb inc jle adc mov push dec les cmp loop fist or pop stc rorb and mov mov mov adc mov jo,pn leave jne pop arpl jp outsl mov test fcompl xchg cltd enter pusha lds faddl mov pop inc add cmp push adc mov sbb addr16 pusha outsb into mov lods or scas jnp call cmpsl or ret (bad) sub dec test mov sbb es mov or inc inc and out outsl outsb lret sbb xor or mov jg enter adc sbb fidiv sbb in inc cmpsl enter cwtl outsl lds xor inc lret mov (bad) dec sub jno leave je lock push xor cmpsl pop mov dec inc mov loope insb sbb dec idivb and jns mov adc sbb add out cmp pop lea sarl mov pop push sub inc mov cmpsb jle push inc rcrb sbb sub and cmp inc daa imul dec in dec mov inc push in inc in cmp mov and outsl test subl in or jl push pop mov cmp jbe jb (bad) or sub fwait in jnp jnp mov pop test out sub cld loope jle js arpl ss pop sbb mov dec stos into xchg ret or insl pushf mulb mov test popa pop lock jbe cmc mov jg push mov jg in mov cmp xchg and dec mov cli ja mov and test gs pop lret (bad) cld xor lahf loope sbb stc pop push lahf mov or int3 adc pop and xchg adc pop les jno adc cmp scas scas sbbb cltd pop int mov mov hlt js mov les mov dec insl dec push icebp inc push mov and xor sub (bad) (bad) cld jns push mov fstl sub mov int3 imul mov sti iret sbb lods test lea mov mov movsb hlt sahf out jb mov sub xchg les mov mov or adc pop jg adc ficoml cmp and icebp mov adc call (bad) or or sbbb and lea push adc (bad) fldt jl sub (bad) xchg jecxz les mov aam xchg (bad) stc pop cmp xor (bad) mov mov inc aas mov insb aad ljmp in cmp loopne leave pop xor cmpsb and push test push push jno stos push fcmove imul mov daa jge movsb jne mov lods pusha call xlat gs pop setp negb mov scas sub add out test (bad) and dec in sbb or loope test (bad) cs pop out jecxz dec aam push shlb jecxz adc sbb mov sub adc outsl lahf fistl test mov rclb ret push adc jl mov pushf cmpsb push lret in push and push in int imul adc lcall aad adc push inc mov mov std pop stos leave mov bound aam sarl loopne pusha mov inc mov push pop pop jp movsb repnz lods or outsl out or clc nop shrb push xor push dec movsb or in mov fsubrs inc xchg es ds leave cmp into lret sub cmp jl xor sub lcall shll ja sub sub mov lods sub or cmp mov inc mov mov std jne mov movsl leave hlt and mov mov push lods push and std shll or in cmpsl insl inc (bad) fstpt adc sub nop adc cmp in mov test insl aaa cmp and out leave cld mov xor sbb jb xchg cmpsb jp inc push or (bad) fs fwait push adc push insl dec lret xchg (bad) clc mov mov clc xchg mov inc or and push add dec xor into xchg cs adc pushf in (bad) int push dec std movsl fnstcw mov xchg sub dec push hlt leave test adc lods arpl pop cwtl rolb mov jmp sub into xor loope or cmp iret ror es pushf addl bound inc pop xchg lods pop fwait sub mov adcl pop aam mov cmpsl cmp sub sbb xor imul xor in sbb cwtl mov sub mov xchg hlt rcrb dec sbb sbb iret push sbb sub popa sub cwtl jno push mov mov sbb jnp rorl mov out mov sub popf mov sub popf xor jle,pt xor pop jle in jle ja sbb xor ror xchg mov lea lahf in adc mov icebp loop sbb leave fcmovb (bad) (bad) pusha push and ret cs xor mov cmp (bad) in mov jge dec lahf movsb in insb push repz mov fdivs fldln2 dec push cld push je dec int3 cmp (bad) hlt inc push pop test push outsb shrb bound inc sub jbe adc pushf rolb adc jb or lret (bad) sbb lea in dec dec lods icebp fidivl rol dec add popa shlb inc popf in xlat xchg or mov jecxz sbb popa cmp std adc push or xor mov rorl mov idivb clc (bad) fs std cmp outsb sub jmp sub sti jmp xchg std aad inc dec test xlat rep xchg scas repz popa push add xlat cmp pop jne aam pop in sbbb (bad) xor push lea call jmp shll sbb insb jns jl pop xor fild sub adcb mov xor and sub pop stos xchg adc jno ljmp imul loop and fmuls pop stc rolb scas lods outsb data16 data16 mov add sub loope (bad) cli ret data16 leave cltd mov xchg pop popf dec mov pop inc push mulb xor pop xor testb pop cmp and (bad) mov lock or (bad) aaa in aad mov inc push aad dec loop daa add pop loop cmp adc jle subl out sub mov mov push adc imul pop inc mov test adc xor mov fsts imul scas mov add or out mov pop fimul push jns mulb push add scas push mov insb ljmp mov js pushf xchg cmp aam xchg pop push pushl pop push mov sbb insl sub or ret daa fwait xor in mov mul loopne mov dec sti xchg xchg iret add push inc cmp aaa inc add adc push mov scas push cmp pop js jmp out mov jle cltd jg jnp outsl pop add (bad) mov adc or or cmp or xor lods fildl add lea adc pop inc (bad) jbe out fwait mov lods dec mov jo sub hlt xchg sbb mov ljmp pop mov add pop or fsubr jo roll push test ss sar push in movsl cld fcoml test and out gs aaa push shrb mov loope adc xor mov lds jge mov stc mov imul jo bound cmc lods mov inc mov jno popa roll lods (bad) aad out cmp add subb scas add dec loop hlt insb dec sti inc adc pop jo push sbb mov adc inc (bad) (bad) push ljmp loopne pop test (bad) push jo lret jg test in or clc inc or fs lcall fistpll lcall mov fwait (bad) repz int3 sbb add stos fldcw (bad) pop cmp jne and xchg mov lret js outsb je xchg movsl fiadd stos bound sub lods faddl mov rolb movsb cmp addr16 xor lods mov mov xchg sahf cs cmp lods mov mov mov xchg adcb call push outsb xor stos loope adc push sub jno cwtl push pop mov mull and mov push (bad) fildl mov (bad) jne dec sar bound jmp insb xchg mov loop ffreep (bad) jnp and cmp repz adc ret push mov jb mov push notb and call popa iret or sbb sbb pushf xor repnz sub pushf pop pop ret dec (bad) pop mov dec dec or inc dec cmp mov loopne inc sub lods mov push sbb in inc xchg mov xchg push jl idiv mov imulb mov xchg xchg adc dec mov frstor das pop mov insl dec adc lods jns icebp mov sbb xorl out add adc roll imul xchg cmp and int3 mov aaa add mov ss pop js xchg fs or mov push lods neg std inc or pop shr insl les mov mov int3 sub outsl pop outsl cmpsb jg (bad) or cmc xchg pop xor push dec out mov sti jl aam out aas xchg mov ja xor adc lret sub (bad) negl test inc inc mov push stos inc push cmc add pusha popf fsubrs pop lock jmp or push in mov push cmpsl jl mov enter pop dec aam push cmp (bad) lea pop fs sub (bad) lahf pop cmpsb mov sar pusha jl pop ret sub sub (bad) or out aaa sti jo mov into aaa std fnop clc xchg cmpsb pop mov outsb arpl stos cwtl fcoml js jg dec xchg mov fsts ret add mov or mov mov mov push in popf fisttp push add test or xor test icebp mov mov adc xchg jno (bad) mov mov popf jl enter jle dec jl adc xchg (bad) adc ret jno push aaa dec int cmp mov int3 lods imul sub mov inc sub add mov jp,pn aam dec pop nop repz addl out xchg xor adc ret jo mov push jnp loopne adc sti fmuls fsts mov cmp cli cld test aad in adc push out xchg cwtl lock sbbl ljmp xchg add inc sbb (bad) notb adc jno mov aas shrb inc out pop adc and ss mov xor mov and pop test mov jns (bad) jl jle pop cmpsl xchg popa repz js shll js jnp mov push xchg cmpsl fcomi (bad) lret xchg cmp push imul inc rorl sbb push or xlat shll loopne outsl mov lods cli je fcoms lods repnz pusha daa lret and sub and dec dec add ficomp into mov divb enter and xchg pop and in lds int cmp adc into fisubrl add dec push divb mov sbb loop xchg fidiv loop loope sbb bound pushf pop ret adc enter mov outsl cmp imul enter aam cmp arpl lretw das sbb sti les push sahf mov mov push jne rolb addr16 in ljmp dec mov jle jne jo sub mov pop mov sub std mov adc ret decl pushl adc shrl stos ret icebp (bad) jbe jge xor rcrb inc arpl bound js (bad) imul cmc in push xor mov xchg jae jmp mov fimul or call push cmpsl and xchg xchg pushf xor popa jmp es (bad) jnp push rclb push push jne inc and xor out adc xlat ja jl jge jb js scas push test fildl mov push sub and cmp mov inc enter push add xchg mov sahf bound fsubp dec mov int3 sub or ljmp push mov rcrb pushf stc mov dec sbb inc roll enter mov clc push dec sub xor dec (bad) and rorb test stc in repz imul and and pop insb je and sarb test jecxz xchg aaa mov push test dec inc repz lret or mov mov loope pop mov inc fs cmp pusha push cs jp movsb es adc and ficomp add ficomp and sahf jmp mov imul call lcall pfrsqrt incb mov dec xlat jns aad push cmp mov sbb mov or mov lcall (bad) cmp jae pop in (bad) cmp mov jmp and clc insb repnz testb push or aaa mov lods dec movsb xlat mov sub pop scas xchg mov mov inc jne dec push fwait mov inc sbb test (bad) add mov or cmpsb mov jb or test adc xchg xor cmp sub fucom cmp sub adc (bad) push ja add daa mov (bad) xor lods jl jg inc icebp adc repnz lock icebp cmc push sti mov and das and jnp hlt cmpsb leave mov jl mov aam test loope mov faddl adc xchg and mov and mov fldcw xor ds xchg leave lcall inc jns sbb adc cmp outsl mov push test sub inc pop outsb push mov not loop sti fbstp je mov sub dec outsl leave push inc cmp loope aas cmpsl jo mov or enter and and mov mov inc in (bad) xchg rol (bad) fs xor push sbb sub pop jns scas (bad) adc mov pusha xor adc pop ds sti testb jb les aas add and jp (bad) or mov sub dec rorl jmp mov mov imul jl xchg xor or sbb mov adc rorb mov and pop ja or mov std rcrb fcomi jo xor and ja xor in loop decl leave mov lahf loopne inc rcl nop in std lock mov mov fdivs mov loop push pop jecxz dec sub sbb mov pushf int3 repz into lahf test mov sahf cli lods jl jmp jl mov xlat mov rorl inc out das movl fstpl adc push fisttp dec mov dec fs loopne lret xchg lret out sbb lods aas cmpsl test lds xchg mov out mov ror push fnsave lock jecxz sbb (bad) jmp loope icebp mov fist xor fisub sub loopne outsb aaa cwtl es xchg xchg rclb lods push sbb inc out imul xchg (bad) repnz sbb or lds fildll ds xchg mov test stos sbb cltd mov addb cmp testl fcmovnb sub in push stos rcrl push add std adc and adc je arpl xchg mov sbb mov test push adc jg pop jb bound insb mov jae test adc addr16 out arpl jmp sub pushf jl int3 mov roll cmpsl adc xlat mov ret xor jmp inc fnstenv fwait stc pusha test daa in cld (bad) adc lret mov pop dec popf je xor and repz xor hlt nop aaa aaa daa je jo sub cwtl mov mov lea or pop pop popa fcmovnu popf sbb jl aam fisttp dec add insl outsl mov (bad) mov (bad) loop dec and and sub aaa sub daa jl jb sub in test cmp jecxz movsl insl adc xor adc shrl xchg mov adc imul xchg sub mov jbe bound mov sub mov fnop pusha xchg xchg lret in cmp mov pop arpl jno out push dec daa fbstp jmp xor dec jge cmpsb loopne sti (bad) xchg leave xchg daa jae or (bad) int mov inc pop mov jp out xchg outsl sub adc call push xor lret loopne cmp test bound (bad) cmc jae fisubrl psubq je or dec fucomip stc dec shr aas loopne sub jmp adc pop test push fstpt jmp cmp jns out jmp push cmp cmpsb mov fdivs popf loopne jg and data16 shrl (bad) lahf inc xchg and xor das push jbe cmp add cmpsb fdivrs call add mov xchg pushl mov jns cmp jnp xor imul xlat push jge scas cmp clc xchg lret adc ret (bad) xchg dec cmp jnp push inc mov outsl and mov push sahf out cmp cmp test (bad) sub scas pop push push mov pop or add and or sbb inc lret (bad) scas scas sub gs fistl xlat push xor push ljmp adc aam or sbb xchg or add add popa mov mov ljmp inc dec scas addr16 fstpl xor mov mov mov sub imul gs loop and push pop jae mov hlt and mov push test fucom (bad) (bad) xchg cld roll push js cmpsl test stos aam ret ds mov and je fdivs (bad) call fisubl and lods pop cmp mov in jae push inc xlat pop call (bad) push cmp mov cmp rorl in cmc sbbl subb sub jge push pop jns fsubrp call lock clc mov sbb and shrl adc jg jb and stos pop and xor or sub sub call ds loope cld adc add pop test mov jp ss cwtl push (bad) lds sbb shl jge in test ficomp mov sub pop out leave jg insl (bad) cli pop pushw mov adc inc sti pop inc stos test rcrl jg push notb pop jae loop popa pop mov adc and inc and dec inc jbe js mov xchg mov cmp (bad) icebp sub mov and jmp fistl jno xchg aas paddd xor imul neg push enter push stos mov push xchg lcall mov sbb mov sub (bad) clc add ret sbb addb jae mov pop inc mov mov mov sbb ja push sub add jmp inc xchg jno adc (bad) or out sub xchg test mov cs push addr16 push or cmp mov mov pop out out (bad) je mov stos daa dec cmp jae out mov push sbb sub iret pop mov adc (bad) fildl xor fild mov ds mov mov jmp or cwtl pop add mov or iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz lcall add jg sbb (bad) mov arpl add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add ja add add or or add or add add add pop or add add mull add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add cmp push js in aam bound pop (bad) (bad) mov je fucomi and das mov cwtl cmp mov adc fmuls popa aaa xor or mov adc das sbb pop xlat sbb add in loopne and sbb xor cmp addr16 and xchg into xchg add (bad) mov loope out pop jp mov fiaddl and daa xchg cltd mov mov inc mov cld and mov stos xchg dec mov out xchg and out out xchg in dec repz pushf jns fdiv xor enter mov ret cmp lds jle ja subl lret icebp or test nop out test aaa fcmovu push js adc push push lock cmovb and adc test stc iret icebp jmp sub arpl mov movsb dec sub cmp out and push pusha add mov xchg and push xor aaa inc nopl mov dec cmp mov sbb mov flds mov rorb and jle mov mov je mov mov rol adcl inc mov xor cmp cmp sqrtps mov fmuls dec lret sbb push cli outsl (bad) in popf insl dec imul pushf rclb in mov mov sahf test outsb jne pop push fdivs pop add and xor and rol aad sub mov cmp iret jnp xor xlat jb mov imul movsl int3 ds push adcb mov rolb dec or and lcall dec push pop push cmpsl cs sahf xchg xor xchg jo push in test in dec icebp lea out xor jle scas lret mov lret outsl jae jae jecxz negb call loop loopne bound sbb mov adc cld bound xchg mov int3 pop imul and ror mov cs jecxz add sub pop dec xchg xor lock mov (bad) mov adc xor mov push rol inc pop or sub jae sub ret inc mov loope sbb dec shrl in inc pop xchg adcl lods arpl out and (bad) jne xchg fs pop pop pop lret call fcmovnbe roll mov test imul loope mov push addr16 xor out dec push cwtl xor fwait in dec out push mov jp or sub xchg cmc adc (bad) fcomps jno or sbb jp sub mov sbb lds xchg leave pop pop pop or icebp stc (bad) mov sahf int3 js pop xchg (bad) (bad) insl or jno sub aas xchg dec ds enter dec mov or ret or jecxz stos pop pop mov ficom stos mov pop lds out lods and push mov add cmpsl xchg out xor stos sbb or hlt jbe xchg aas mov or out les popa shufps enter ret adc jp jne push xor xor or or mov call cmp leave sbb bound mov test cmpsb mov movl mov fmull cltd push lock pusha (bad) pop or push arpl (bad) and aad lods ja add pop adc (bad) xor cmp mov sub call mov add and cmpsb (bad) lret xor xchg ljmp stos mov ret cwtl and js loop fisub or mov iret pop stos or adc push push enter imull test nop mov mov aad mov jno lahf icebp push pop pushf jg dec and mov and cmp shlb pushf repnz dec jg scas and inc xchg js ret xchg dec ja mov stos or fcmovne push mov cmp and (bad) pushl repz xor adc mov in mov popf sti pop pop or rcr jg and push cmp sub daa test and cwtl inc ss mov dec ja push sub (bad) lret (bad) jnp fiaddl nop (bad) sbb cmp addr16 out xchg pop adc inc mov in or lock jns lds or jge inc xor data16 push aas sahf insl push mov mov pop inc in lea and jo insl sbb clc mov fldl (bad) fwait int3 pop mov sub mov xor loope mov mov ret push mov pop inc mov (bad) rcl add es and scas ret mov loop movsl adc or outsl cmp ljmp mov or sub insl pop cmp mov outsb je (bad) pop in ret enter ret daa adc xlat aas jbe xchg shr pop les das int hlt or fisttpl jae shlb gs js sbb push sti sbb (bad) mov mov cmp add cmpsb push dec and and repz inc dec (bad) jmp pushf pop fs das sbb sub jne clc pushf lds sbb cmp xor test je dec cmp ds mov mov cli xchg xchg aam push dec clc sbb cmp leave dec and cmpsl jecxz jb mov daa sbb movsb cmp adc cwtl sbb or push cwtl cmp insb dec mov mov sbb insl mov insl xor xor fiadd jl fwait dec xlat jae cli int3 in repz test js xor xchg mov in push add sub xchg jle jg repnz jmp xchg xchg sti stc aad and in adc dec inc pop insb dec inc jmp push pop inc xchg incb and mov xor not and pop shr lods cmp lods pop push faddp dec les mov mov sbb lods outsl adc loopne mov inc insb push add mov xchg fidivr popa movsb mov pop pushf xor xchg jmp call fisubl nop fisttp test repz dec outsl or cmpsb mov dec xlat cmpsb data16 pop mov cmp cmp icebp xor xor sub loopne into inc pop mov insb add int push dec sbb xor inc data16 call scas xchg mov test clc pop mov and out jns cmp push cwtl bound jno push mov mov je lods aad xor dec inc add jmp in ret (bad) mov inc sub subl xor sub mov mov mov int3 sub test or mov xchg xchg xchg inc or push lods push repz fcoml push lea call test pop repnz test mov mov lods xchg (bad) and inc test cmp mov test jmp add repnz insl inc pop push decl xchg mov sahf and jl gs mov insl iret fisubrl mov jmp scas shrb mov sub arpl push movsl out (bad) dec dec pop adc inc xchg adc add daa fsts (bad) (bad) mov popf ja pop orb std or scas out (bad) mov pushf sub inc mov jge add jbe push orl ds stos add stc pushf push repnz adc push fwait add push lods stos push adc or fcoms mov push aad lahf cltd pop dec (bad) mov sub lret pusha inc iret push sub push push les cs add mov pop push mov jb rorb cmpsl pop jmp imul adc out fdivrs add jg jp daa lds sub mov fdivl mov repz int outsb imul push push add mov push imul sub aaa fisttpl stos push adc xorl cli dec jne lods mov mov aaa out in sub add inc out jae (bad) fildl clc inc pop jnp test loop imul cmp inc inc pushf jnp mov cld daa icebp cmp in pop mov pop jnp loope sub push mov les ss enter repz test jnp inc pop dec inc pushf push (bad) subb xchg movsl in aas cmp popf arpl xor test jns jp xchg pop cli push add adc cmpsl pop nop jns ss mov fldenv jo mov mov (bad) mov aam clc loope jg xchg mov (bad) xor inc popf pop into xor dec jge fidiv popf cmp daa dec mov push int test or sti mov gs rol ss lcall adc pop jl es subl (bad) mov mov push jo mov fsub add xor sub xlat adc inc wrmsr repz pushf aas cli out xchg sub add xor mov or xchg test jl andb xchg fwait sub add (bad) int3 add cltd pop adc jg jl lods in xor loopne xchg stc mov xchg sub cmpsb stos adc in lahf ret push jbe enter or dec loop movsl pop sti inc push pop sbb stos mov imul scas mov pop inc pop mov mov pop flds nop jl ds lcall lret imul int lds sbb (bad) dec and jo std nop inc in (bad) arpl xor jecxz sub int mov leave popa dec sbb mov inc jmp cltd xchg lods xor lock mov add outsb and jp xchg ljmpw daa sub pop mov daa xchg adc cmc push mov jecxz adc loop lds insl gs jp sub sbb pop cltd push jg out push sbb in movsb xlat jge call add push fs aad mov and movsb adc xor mov push scas pusha dec inc mov cmc jmp es enter mov pop jno insb outsb jmp sti mov aaa enter inc pop iret push (bad) cmp fsub (bad) lock addl cmp arpl push daa leave cld es xor bound pop ffree outsl add sti rclb or cmp out dec and mov push in (bad) scas xorb in push gs jne jl repnz aam popf pushf pop add out (bad) mov rcl rorb fidivr not test add pop or lods pop dec icebp cli pop jge lods jne loope jle xchg mov outsb pusha popf adc pop jne mov aam inc xlat outsb ret jg out repz xchg and jecxz xchg sahf pop notb inc popf lods imul sub sbb (bad) int3 lahf aas stc add xor pop outsl nop jnp loop lock fiadd lret xor mov pop pop xor fwait cltd sbb aad jg out mov and inc xchg test mov movsb push lahf dec mov push ret (bad) lds jl jmp dec mov in insl add adc xchg out cmpb mov es pop jns sub mov sub loope push jns xchg pop imul mov mov in sbb sbb imul cmp dec mov repz pop sbb cwtl je pop dec inc inc pop xchg ja add fiaddl in rorb fucomip xchg or mov push jge sub gs push mov (bad) cs addr16 daa or jp pop inc jg stos sub inc js subl aaa (bad) and (bad) fsubs daa jns (bad) shll test rol add mov xchg mov js xchg sub fcoml or mov (bad) xchg cwtl inc fdivrs xor adc (bad) mov mov iret sarl lret jne mov add jle sbb (bad) loop test (bad) (bad) lret or push jb or (bad) in dec jbe mov scas sbb cwtl movb test ret push daa imul movsb xchg cmp je or xchg cld mov mov add sbb iret scas les cmp dec jmp mov (bad) fs jecxz adc les cld mov and outsb jnp lds iret jbe sbb ds add dec push sub inc pushf sbb or loope std xchg jnp push gs add icebp mov push loop xchg inc lret gs mov or mov sarb jmp jnp loopne xor ret xchg xchg inc (bad) pop sub cwtl add xlat xorb mov jge push jnp mov into cmp jl,pn outsb jae loope sub mov clc or aad adc or sbb popf pop inc lcall xchg cmp jb,pn cs jae fnstenv push arpl incl je loop ds inc and rorb rolb lahf add jecxz pop xchg clc or add add xchg dec addb (bad) aam sbb dec mov mov cs aad adc repz (bad) add (bad) pop mov int jae les movl cmp lret sbb jno loop xchg push cwtl (bad) cmp ret cli inc stos mov ds in mov test dec or add adc out ljmp xchg jmp (bad) jno (bad) aad jle xor nop adc dec fldt xchg lock mov or fistp outsb popf pop daa stc or pop (bad) (bad) xor aas fucomip adc mov loop pop xor add cmp fildll fld addr16 addr16 lret xor push add je popf pop js jns add stos lock cmp icebp daa mov or and fistpl jmp sbb add jmp pop or push fnsave mov insb lahf or pop xchg lock push cmc pop je shl xor xchg sbb jo in clc mov sahf mov and cwtl mov pop lods mov lods add js add xchg sarl adc in arpl nop cltd fs cmpsb imul sbb movsl repnz pop xchg stos fdivl inc sbb mov pop testb call mov pop mov cmpl mov loopne aad push inc xchg nop mov mov popa jecxz std jno xchg add mov jmp xlat jns jmp shlb or mov sbb xor mov data16 lahf lock idivb mov mull jnp mov and std mov push adc adc xor jg inc mov cmp pop int ljmp mov rolb jl and xor inc jg scas xchg lret stc imul mov bound cmp xorb (bad) sub out and lock xchg xchg lret sub ret aas and int3 mov icebp jbe pop loope fs jb es inc repz mov data16 jmp or clc cmp mov cmc dec push inc int3 enter ret pop jecxz ljmp adc mov imulb inc aam imul push sahf mul sub jno (bad) mov aad fisub mov jle (bad) fsubrs mov sarl inc (bad) dec test add cmp sub pop loop cmp xor sbb cld sub cmp cli cmp push es arpl pop adc mov cmp fcomps mov jge push pop out outsb sub jo xor sbb bswap xchg adc push mov cmc in sbb pop (bad) repnz xchg dec std aaa cmp mov jle stos mov or enter out rorb jnp jmp cld shrb jnp sbb cltd ret adc fnsave jp popa sub mov mull in movsl dec pop add sbb ds add ror or insl mov lahf and fimul lods (bad) push (bad) mov xchg repz push clc dec xchg je lret and and sub shrl ss es pop daa mov call popf outsl add mov dec xor jl adc adc and loop (bad) pusha (bad) icebp dec push mov xchg cmpsb and enter fwait sbb bound mov rep jbe adc (bad) sub in cld rep adc pavgw fisubr or sti jle test hlt add mov addr16 pop fnstsw and mov sbb cmc adc sti cmp mov or scas mov daa icebp subb or loope add imul mov or ror stos and xor jecxz (bad) cmp out sbb add call je psubusb (bad) (bad) push dec ret sbb xor iret adc adc fsubrl cltd aaa jnp (bad) ja fdivrs xlat stos add popa pop inc je jge movsl repnz sub das xchg push push push rclb push je stos js mov stos jae cmp orb popa ljmp ud2 (bad) mov out outsb mov sbb and fcomi sub and enter jp (bad) aaa cmpsb pop sub dec psubsb adc test adc cmpsl fwait aas out lds sub pop outsb scas imul (bad) push mov push add dec pop xor fsubrl mov roll xor or cli js inc lea cld inc pusha (bad) mov dec loope cltd notb sbb ret dec xchg cmp pop xchg sarl pushf ret mov pop sub xchg out push pop mov push scas push aad xor mov popf pop mov cmpsl daa mov mov into mov div add and xchg add sbbb dec or outsb pop mov mov imul or jne mov in mov xchg mov lahf gs cmpsb dec cli mov jg popa jb adc shll or imul mov and pop push and outsl mov and sbb dec and rol (bad) jo add jl mov xlat inc push mov jl movsl dec mov push xchg jns cmc clc sub push in fldt in loopne adc push cmp (bad) in insb sbb aam rcll cmp adc inc mov jns dec jl mov push cmpsl data16 push inc je jb in inc mov bound icebp mov push adc mov jae inc dec xor movsb and cmp push int3 add jno movsl sbb fcmovb cmp in jmp pusha out inc jmp aam fsubl dec pop fcomps xchg cmp xchg mov sub js xchg call jbe hlt and cmp and loop jno push xchg das jnp jge divl fstps mov sbb push jg out adc mov and push lods mov push pop in ret mov pushf jbe repz pop sbb xorl lods pop fsub (bad) cmp push adc out and mov cld push (bad) mov (bad) (bad) sti cli arpl inc js dec insb (bad) jbe repnz adc fcoms pop pop int3 sbbl js (bad) add sahf outsb adc je and cmp cs pop adc inc dec arpl test ljmp xor in fdivrl imulb addb dec jno movsb sahf pop pop clc inc mov xlat std push notl gs lea aad pop mov add ljmp dec jae add push dec adc js test test stos or pop loopne add xlat mov mov test fildl xor out push (bad) rcrl fdivl mov arpl shrb add adc pop popf (bad) push mov push ja test out das jnp rorl cli out lcallw xor daa leave fs inc arpl sub in pop and pop sub (bad) pop mov and out sub jns mov push cwtl cltd loop hlt sti ja outsl mov xor test (bad) cmc loopne fdivrs or mov inc add test push xor (bad) gs jbe notb inc add rcl decb (bad) pop push cmpsb in jo sub mov (bad) imul popf jp push push cli lahf arpl outsb cmc dec mov push push push mov jnp popf cmpsl sub nop mov cs mov movsl inc test arpl sbb lods fisubr sarb rcrb out movsb ret shlb or adc inc xor ljmp mov aas fcmovb leave lret pop xor add les sti into pop ds xchg xlat pusha shrb (bad) and xchg xlat aad aas enter sub rcrb xor and outsl outsl mov inc sbb clc fmull jecxz dec and jnp xchg (bad) sarb lods mov aas mov out xchg cmp add xchg mov jb or movb jb mov mov (bad) idivb cmp mov cmp dec xchg shr aad add mov jns jge (bad) jo cld cld lret pop xchg aaa cmp mov mov add push int sbb dec sub add mov ljmp dec sbb lret movsb test les jecxz adc popa or (bad) or cs pushf cmp mov xlat mov int loop add inc add cli xchg imul cmp fwait pop stos cs pushf or and mov stos pop movsb cmpsl adc (bad) pop ret push cwtl iret gs mov sub enter xchg xor aaa sub pop std cmp mov xor dec insl fidiv mov lret fidiv ja push cs test jo lods gs in (bad) push mov push push inc les xchg rorl add lcall outsl xchg cmp jmp je mov mov jg sbb js into mov jmp (bad) lock dec push mov aad jns sbb jg adc adc push lcall mov idivb lods aaa pop in xchg sub fisub xor push inc js imul sub mov mov ret nop fcomp push mov mov sub (bad) or add inc test neg ss sub inc fcmovnu jle (bad) loope dec mov je enter test sbb pushf pop fs std xchg ss repnz dec jne inc das enter sub add jl int xlat sub add pop and xchg vmwrite into adc jnp sub sbb arpl xor push jns lret sub imul adc mov out xchg mov dec hlt mull adc lahf jl insb stc mov jns or inc in in cmp data16 daa aad daa stc add outsb lods jl lock xor rolb xor mov outsb and mov mov add fldl es sbb sub pop fdivl cmc ljmp out sbb mov jp notl popa retw aas das mov inc push inc sub pop sbb clc push fdivl dec popf iret xchg push ljmp add jb jp mov shlb sbb adc add das mov inc fidivrl scas out jnp push je jne cmp mov jne jle sbb test cwtl mov test dec lods or pop js push adc sahf xor lock (bad) lret mov xlat xlat es pop test sbb nop ja push cmpsl (bad) fsubrp les mov (bad) jno jp add mov clc jo jae jecxz mov jne inc arpl push mov jle jge test icebp adc sub adc movsb mov mov pop pop add testb jp lcall jnp lret cmp gs call arpl dec jae movsb dec mov (bad) stc stc cmp sub cs lcall push popa mov movsb enter cmp add inc jle xor or scas (bad) movsl jno out ret mov xchg iret cmp xor push sub inc test test out fsubrs and add (bad) mov outsb adc mov data16 leave pop mov mov dec lea xlat int aaa jbe popa outsb mov lcall test jle daa js push dec push (bad) jle scas or lahf cwtl inc sub aad dec fstl sub sbb (bad) xlat sub sti popf sub mov loope xchg dec repz lock jmp jb jno xor insb adc or sub cmp dec cmp fs sub inc das mov push mov frstor push std xchg sbb add mov lahf ja push jae cmpsl ret xchg mov jl outsl lret es aaa push in test aas lods fincstp fwait dec push int lret sbb (bad) mov scas lahf fcompl cmp lahf pop sbb dec jbe xchg mov leave movsb xchg (bad) rcl cmp in fcoms fcmovb cwtl mov push inc outsb mov pop cld lret cmp (bad) cwtl xor icebp into in insb imul cmp stc xor add aad lods das loop mov (bad) lret or push negb xchg (bad) or mov int3 cs (bad) dec ljmp in jbe push enter std dec cmp insb jno js movsb cmp sub popa icebp xlat xor cmp stc lock mov ret push pop fwait mov jl fwait add push (bad) fmuls in jns lret rcrb add ret aaa in adc arpl outsl out gs in leave sub jp jmp imul daa add cmp add int mov dec dec mov sbb jae add or pop aaa (bad) in xchg neg sub rorb push ds adc mov jo mov xchg lods push mov dec adc test imul ret sbb pop fisub movsl out (bad) adcl sahf sbb pop xor inc add insb aaa push pop pop mov out les push cwtl mov push pop inc imul push sub push in mov sub mov mov dec mov inc or (bad) jg lock push sbb ret dec xor subl and xchg les xlat xlat cmc (bad) cmpsb xor out (bad) aam test (bad) ss icebp pop std mov call push stos stos cmp mov mov dec je pop jmp add push cmpsb sbb adc fucomip call mov sbb mov fisttpl jge into (bad) testl mov test mov mov inc lock sbbb xor aas sbb addr16 stc and cmp rcrb sahf push jb pop cmp hlt test jbe shll jg pop jno sub repz ds repnz xchg (bad) stos dec xchg mov xchg and or leave bound leave push dec cltd stc shrb shrb pop xchg fsubrl imul popf lock stos sub lea lods pop inc call outsl mov cli sbb decb push fsts mov rcrb clc xor cmpsl repnz sub nop mov push incl jmp int3 and jo in sbb add enter leave and (bad) scas push mov push scas inc mov stc sbb call stos out lds mov aas xor adc xchg dec adc out inc push std xor aas ss push push pop gs push cmp sub cmp in push int3 pop repz pop jo les pusha or sbb mov scas (bad) or mov xor in sbb mov cmp es or dec out and stos sbb sub push adc jecxz jmp xor sbb stc mov dec sbb and mov push loop sarb (bad) adc scas pmaddwd (bad) in enter sbb jle insb pop cmp and push popw inc add sti xchg sub mov jle in mov sub fisubl cmp add add int3 add call cmp inc mov or scas adc mov jecxz ret ljmp out outsb mov cs out data16 or scas inc mov mov mov push xchg push outsl sbb call xchg sti jg iret outsb push dec mov mov mov lods adc nop sub push sub stc sbb insl in scas cmp (bad) pop notl mov insb insb pop mov in ret shlb add js jg sub cltd pusha (bad) xor (bad) je adc xorb ss sbb add (bad) mov out xor pop aaa push dec insb inc fwait mov rol xlat gs vmread out add add jecxz sub and cmp pop xorb out pop cmp pusha push jmp mov sbb sbb (bad) icebp nop jmp ret push gs mov jg pop jge pop pop fsts xchg pop xor stos fwait dec mov ret ret mov jle (bad) (bad) ret jbe sub pop (bad) jg loopne cwtl shlb xchg cmp inc (bad) sbb lcall xor imul (bad) lock leave push fwait lret mov scas mov pop inc push loop in (bad) rclb hlt mov gs cmovbe mov xor loope fwait xchg inc push (bad) outsb (bad) or stc popf mov xchg repnz ret cmc lcall in cld es leave sahf add stc mov (bad) rcrb jo jg dec and and insl lock jo add mov sbb fistp mov das imul aaa fcoms dec jl jg dec jnp sti xor jl inc xchg lods cmc and dec lcall pop sub mov pusha or jno xchg clc and xor fldl push mov fisub sub push pop mov jno or stos fs push adc inc cmp xor cmp ss add daa jne loope cmpsb pop jne scas pop jns decl and movsb (bad) loop cmp or lods adc fcompl jne adc enter xchg mov cs sub (bad) imul push pop (bad) pushl mov pushf sti jle data16 lds push mov test popf adc lahf pop push cmpsb xchg mov insb push pop jle adc lahf cvtdq2ps inc sub xchg inc jae dec sarb jmp cmpsl cmpsb pop mov out cld jecxz loop out mov pop xor xor sahf dec sbb bound addr16 inc and cmp flds dec sub jae xor shlb jmp cmp sar stos and mov mov push xchg imul (bad) push inc mov inc lahf jmp mov cmpsb lods loop repz cli ret mov aaa pop in push or mov fs les dec xor mov xchg mov mov jo mov jmp jae and (bad) dec pop mov push testl xchg mov or xchg insb insl lods into adc clc cmp dec push xor add repnz mov adc lds push fst ss je loopne in ffree lcall and out jmp dec mov cmp stos fwait imul sub (bad) cmp mov mov rorb cmp test cmp aaa in outsl jbe fimul push mov movsb jb or mov cld pop adc push xchg mov add dec lods push sub or push adc imul push cmp xor mov dec cmp hlt jbe jns rcrl scas idivl or push rcrl mov jo xchg movsl pushf push imul xchg jle and mov jnp pop loop insl aam int pop (bad) cmpsb xorl mov and sub add leave loopne pop cvtps2pd (bad) push cmp cmp mov call dec je fadds into sub push dec ja push es out xor cmp jmp ret ret and stos add rcrl lahf sbb add xchg (bad) or jno push popa adcl sbb xchg inc inc cmp cmp out add fwait mov xor xchg adc xchg adcb test fwait repz lods mov mov out out mov fnsave lock push loop rol push loopne xchg lahf cmpsb push imul loop aam dec addr16 mov in mov hlt sbb mov scas and ficoml add add movsl sahf sub jns enter incb jnp,pn sahf jge jg rcr mov jg (bad) mov pop adc push jne cs push xchg jne cmp sbb cli (bad) cmp dec fisub and pop jge adc push xor imul jg mov jp xor sub icebp cs mov add mov inc inc idivl movsl lods bswap push add out pop pop mov pop inc and mov fwait shrl sbb mov clc test jno inc leave fsubrs cmc sbb daa and fcomp push ss (bad) lock mov std pop loopne lds dec cmp sub adc sub (bad) push stos push dec or or jno pop cmc aaa cmp push imul fcomps or pop rcrl iret dec add mov push imul add iret cmp js stc aas lcall add popa xlat (bad) jge outsl cwtl imul les insl fldcw pop (bad) in push shlb push jbe enter sub adc xchg mov mov dec pusha imul dec (bad) sti sub movsb leave ret cmp test pushf stos dec imul in sub dec in xchg push fisttp imull lret jecxz dec cmovl jge sub testl sub dec lds add hlt test fadds fnsetpm(287 loop out aaa or test and cmp push loop ds push pop cmp push push lcall rclb pusha bound in or push repnz mov cltd xor aas shrl and pop push mov dec ss cli xchg cmp mov fdivl fcompl add add cmpsb mov mov dec repnz xchg lods fildl push sbb push xor lret je (bad) je loop jl mov pop mov add mov pushf sub fistl pop or sub add adc adc mov cltd xchg outsb push stc pop add sar cmp cmp cs adc inc dec arpl sub scas std pop push or or cmp sahf add stc mov mov mov xor test mov sub mov lcall icebp in adc rcrl std inc adc cmp pop gs ja xor cmpsb sbb cmpsb adc add mov xchg insb pusha push sbb je mov es jbe iret out fnop adc xchg std mov gs mov push cmpsb add or fmull mov mov inc bound push ja dec xor decb xchg popf adc dec lret les mov in or add jnp cmp jns bound sbb cld incw ret pop adc sqrtps xchg add jp mov sbb js add mov rcrb ficompl in das or sub push (bad) aas outsl jle pop ja mov sub sbb jae lods and in sbb loope push mov popf pop cli sbb and arpl (bad) push inc adc insl mov sarb cmpsl popa shll mov add and test pushf lahf icebp idivl and or jns inc push fst xorl xchg es jmp cmp dec or (bad) mov lods rol inc pop sbb xchg clc pop and lret xor adc mov and cmp imul mov mov icebp xchg add fisttpll xchg pop lock nop repnz xchg es test loopne stos cltd inc push lods mov insl cmpl jp stos stc jb and cwtl bound scas mov subl cltd inc pop jp test push lods in jecxz mov out cli fmuls pop jp pop xchg push xor int lea test in pop mov and and adc in dec mov lret push xchg xor pop sahf cmc movsb scas orl (bad) jbe lock cmc fnstenv mov and xlat out jmp and jmp call scas es jle ret inc sbb inc aaa push jne dec inc xlat loope cld andb outsl dec adc in inc lret test out dec mov lahf xchg test jl jae sub fdivl andb push out mov aad sbb ds out sbb movsl (bad) mov push cld in inc je (bad) xor out mov daa in cltd and es imul mov or pop cs adc divl sbb mov hlt xchg push out sti nop ds test jne mov add lock rolb add inc push xchg mov inc sub add mov jns mov out movsb sub mov cmp sub (bad) ror outsb mov ds cmpsl adc push mov fwait shl cmp js call pop int3 ret in xlat mov popa ret test mov xchg mov icebp cld js cmp jp cli add clc xor (bad) mov (bad) stc dec and (bad) pop or jle fld xchg out mov push dec test imul inc or mov xchg fbld adc push call jns lcall insl cwtl cli add outsb fsubs inc push rorb inc in movaps mov sbb lret addr16 sbb stos jae pop bound push push cs mov mov notl mov and inc mov pop push sbb push xorb popf mov in mov and sub and movsl inc sub ds fsubr repnz and scas aas or aas pop popa push cmp adc movsb sbb addr16 cltd jnp mov test mov sbbb in pop lahf add in fwait cmc or inc pop pushf inc cmp scas imul or push xchg push mov scas push in push aas rcr pop inc add push xchg mov cmp pop mov mov push push push out or dec call mov and out (bad) xor dec fcmovnu addr16 or push add and mov mov and xchg add dec pop std sbb pop imul sub xchg insb xchg add outsb jnp test cmp jmp xlat sbb add xchg adc push sbb sahf lods dec cs cmp stos pop push hlt dec sub loope js push pop cltd call inc and push je ret adc out xchg nop pop adc aas sarb cmp and jge in and dec pop aad ja jns out sub mov test jbe lods aad sbb cmpsb lds jecxz dec aad adc movsb xchg and cmp or adc hlt fild (bad) and jo adc and jecxz jge mov cmpsb inc xchg jmp pusha adc loope xchg sbbl jmp ficoml loop mov (bad) sub and xchg sub cmpsb (bad) bnd fidivl fmulp inc sub jo lock out lret mov add jbe dec bound push pop nop stos cmpsb loope sbb pop jl push xchg inc cltd out es or incb and outsl lods movsb js lahf sub mov pop (bad) and repz pop (bad) push (bad) jnp push call add pop mov add fisttp popa mov arpl lea psubusb ficom test outsl jl cmc aam test call pop jl mov sbb mov xchg fstpt jns imul mov push add xchg fsubrp xorb out cmp fs push mov mov and aaa cmpsb inc out mov push sub add out roll pop jmp insl das dec push xchg sub inc push mov ret into mov xchg pop mov sbb out sbb dec (bad) cli push int or add movsl loopew ret push out test push pop mov xchg cmpsb clc std and mov jge rclb fild xchg dec push inc loopne xor add notl ret je scas or push mov dec hlt jmp mov cwtl popf cvtdq2ps jnp pop mov mov test sbb ret push mov sbb or outsb aas dec repnz icebp cmc aad mov loopne push dec or lock adc mov (bad) mov arpl fs pusha (bad) push fsubp test and push stos jle,pn repz sbb insb dec out xchg sub rcrl inc pop jne (bad) mov and push mov inc and sub inc push cmp cmp cld mov mov popa xor hlt lahf jbe jne mov in and inc jl sbb hlt jo mov faddl fistpl test ljmp imul inc pushf fwait (bad) std mov sti (bad) stc pop mov rcl sub xor or inc sub mov jb xchg push or push call bound xor into sub adc repz ret adc sbb mov jge mov les insl sti fldcw jns dec fcmovb xor push aam arpl jmp dec xchg sbbl xor push dec dec xor push movsb pop andl ret dec add stos test dec push arpl mov mov mov inc push jge add mov push xchg jns mov lods fcmove movl mov and pop and dec sub rorl xchg mov les push mov push lds test xor bound mov (bad) cmp stos mov xchg (bad) mov loopne scas fs add pop adc jo ret test out popf test and push dec mov cmpsl mov xchg stos fisub mov lds jo fildl (bad) notb add rol pop xor mov push fs jne push jbe mov test inc mov mov mov sub jmp xchg xchg cmp push test and into cmp cli inc mov cs stc dec notb leave flds add ds pop cmc int loopne pop sub insl stos leave movsb fwait sbbb rcl aad jg leave aaa jno das or mov dec push (bad) into clc adc xchg sbb shll mov xchg push jno jge int dec call es cmp xor es and pop cmp out lret test daa hlt sbb push scas jns fs ja push icebp es xchg mov xor inc mov repnz xchg inc (bad) fmul data16 lods cltd movsb push jecxz mov xor xchg (bad) imul gs mov sub sub out xchg xor or stos xchg sbb mov inc iret pushf add cmp jge sub push in (bad) fidivr cmpsl ljmp xor mov fimul inc pop cli pushf shld dec inc inc xor int3 push shrl jmp or shrl cli stos mov lds push lock jle push add movsb and in jbe lods icebp in cmpsb (bad) repz shll mov jbe aam jno dec stc (bad) je jecxz push xlat lock dec cli jmp fidivr (bad) and jns pop (bad) in addr16 cmpsl mov fdivrl lods push pop ficompl (bad) dec rcr or (bad) movsl and cli cmpsl cmp scas test and arpl adc rorb fist mulb mov xchg dec pop xor sti jo out dec and xchg sbb and out adc dec mov mov inc in rolb sub dec lods mov dec xchg ret mov push xchg outsb cmp jmp and xchg sbb mov ret jge mov inc jo shrb jp out mov outsl cmp (bad) mov xor jge dec or cltd stos pop insl stos dec pop call dec out ja pop adc out lahf hlt push mov sub xchg rorl cmp fildll mov sbb xor es scas leave cwtl jno xchg icebp outsl cltd dec ja lret (bad) sti bound ficom out add mov ja mov repnz sbb (bad) ja jne mov mov and or push fcoml jecxz cmp in fwait cmc clc subl mov orl jg loope (bad) sti adc test add mov out cmpsl bound in cltd inc lcall mov stos jmp xor jp sti push add cmp sarl mov subl or pop fisub jb xchg dec and jp mov dec ss shlb (bad) cmpsl push mov stos jae rorb (bad) int3 xor gs adc aas add idivl jge add add push mov loop or clc les icebp mov xchg outsl outsb xor adc xlat cli pop adc pop mov add push pop movsl icebp jge and movsb mov enter jge rcll mov push std je xor (bad) hlt stos cltd and mov jecxz or xchg push ret (bad) xor insb popf and ss and pop aam das dec jo (bad) jo adc dec cltd pop ficoml test sub mov mov push out and lods fsubr cmp sub mov cld jns scas push pusha mov and dec arpl inc lea fstps push into xchg xor mov fcmovne pop dec sub adc jmp sub and jmp ja adc push push xchg dec ds add add mov test ret dec insb fbld and nop mov pop (bad) pop or push std cmpsb push repnz aad pop jg sbb iret xchg add mov pop pop xchg jmp push dec loopne xor add sub clc fs add mov adc rclb in in rcrb test outsl ljmp stc (bad) stc or into movsl xchg xchg pusha out lods mov call aad popfw leave push jmp push iret inc imul or inc mov dec cmp popa pop outsl pop fdivs inc inc leave int or (bad) (bad) sti insb inc and mov aas ss push and inc inc jns jae or repnz inc repz sbb lahf sbb adc or or mov pop mov outsb adc cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz add pop cmp dec jp push add add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add jp add add or or add or add add add pop or add add mull add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add cmp push js in xlat add or es (bad) (bad) mov fidivr mov push pop fldl add add push push (bad) decb mov cmpsl sbb xlat xchg iret inc stos dec clc mov scas and dec sbb insb jp mov lds add dec mov mov std and sahf lret fstpl push fisubl or add pop cmp shlb mov cmp mov in loope aas add add add mov jbe sbb shlb mov xchg fs in in lret sub xchg mov mov and test sub cmp push inc sub pop jge data16 int3 stos mov fildll pusha mov fwait shrb sbb (bad) cmp in sarb mov jo,pn hlt pop jecxz es xchg add xor aas aaa fucomp add dec lahf add inc lret jl mov pop mov jle sub loopne ja rol insl imul push out out or inc mov xor xlat pop jl (bad) stos add in push push xor (bad) arpl pop cli push cmp mov add add lcall jp loope movsl xchg fucomip cltd mov test sbb cmp in jb cld sbb and outsb dec out inc and in dec mov fnsave (bad) cmp add adc jecxz push inc int3 ret mov into xchg rorl popa movsl out adc and fbld lds cmp lret out sbb xchg mov mov jno jp xlat hlt cmp dec mov jnp xchg mov cmc stc lret lods ret and cwtl fs add sbb fld add jecxz cmp jo dec pop mov lods test (bad) sbb jl dec dec hlt push sbb pop dec das inc cmc xor aad push push sbb imul dec sub xor or xchg push out jle (bad) mov mov (bad) jno imulb fs adc stc andb mov xchg aas fidivr mov push in inc pop sub ja inc test mov jo xchg outsl flds das mov push ljmp pop mov xchg xchg push mov loopne cmp ret dec jl or adc dec sahf inc ja add dec iret testb and or fcoms (bad) push cmc addb push pop jbe stos jle xchg iret out outsl (bad) fsubrs xchg jle test aas push adc push sbb mov mov (bad) pop jp sbb (bad) adc ljmp pop fdivs mov jecxz or mov cltd cltd in lahf and cli enter fnclex xchg jp sbb dec xchg xchg mov mov subl mov bnd fwait inc stos jge test jo stos arpl xchg (bad) mov test add rcrb lods or and adc and xor add (bad) or loop js sub js (bad) stc xor sti mov or adc cld xchg lds lods fmul jmp mov add mov mov pop imul cmpl icebp arpl jns xchg lock xor jb,pn sti sahf loope add jno movsl adc pop pop or pusha cmp repnz sbb loope jecxz sahf cmc gs sahf mov mov ret push or xor inc lret fs jns dec jae addr16 out xchg inc mov sbb test lahf mov mov loope sbb addr16 cmp imull pop jne sahf pushf mov mov adc icebp adc sub jle daa mov push dec les arpl cmp sub sub cmp test shlb jecxz inc decl jmp lahf xor test cwtl loope test push je imul out push xchg xor cmp pop push ljmp orl sub and jno es mov and scas xchg mov lcall out test add adc inc push push push (bad) xor in scas adc and stos jae aad in mov bound or dec sbb cmpsl int3 addr16 pop out mov (bad) mov incl out dec in xor in mov sub in xchg cmp imull mov pop and xlat cmp pop jo or cmp and push loop test push add xlat dec dec push jne test mov (bad) push xor cld cld xor jb lret sbb lods sub (bad) repz sarl push pop lods pop out icebp jae pop jnp mov or lret (bad) insl jge mov jne xchg fwait call xor aam lds aas pop sti and outsb divb xor out test loopne add xchg xor ljmp sub into dec sub mov divb sbbb arpl (bad) mov data16 push test inc jge dec or mov ljmp les jns out sbb pop (bad) std or leave call aaa cli arpl xchg and sub mov mov (bad) mov xchg xchg js pusha adc sub mov and mov fwait and imul imul add pop dec inc push mov inc push mov jp add pop (bad) lret jp push jp inc ret (bad) mov pop cmp lods jmp outsb js push aaa daa mov push sarl fisub (bad) das in sti scas es repz fild mov js pop sbb adcb loopne lds movsb xchg ficom cmp notl push lock gs mov dec mov sub pop xchg add iret mov lea push mov je loopne cmp sub cmp jbe mov cmpsl xchg xchg fisub aaa mov jp xchg cmp sub hlt lret enter outsl loop and clc test adc rcrb jecxz ss and nop xor push xchg push jno adc das test cwtl adc test jae jo xchg adc and inc mov push fsubrp (bad) lds adc pop adc fmul orl inc fildl sbb cwtl xor xchg insb std insl sbb add shlb mov aas movsl mov jl or cltd add jno inc mov notb sub imul mov inc dec sub mov jnp cltd cs add addr16 or (bad) xor adc imul fisubrl mov std xchg aad iret and push (bad) repz loop or (bad) lret dec pop pushf inc dec lock inc push push mov ret adc and ret fisub movsb mov loopne xor fcoms push pop or cltd sbb add mov movsb movsb cmp inc jle add repnz pushf xchg in (bad) adc insl xchg and dec mov (bad) mov lret stos movsb add fmull and js jg push fcoml stos call inc ret jns add fisub push call aad fs mov cwtl push dec cmp (bad) les add stos out jne sbb jae jp mov sahf xchg or mov lods xchg mov cmp flds loop (bad) sbb xchg dec call daa add sub ret inc push mov sub dec inc icebp scas xor pop sbb nop mov in push jge test sbb loop insb fbstp or addl sub xor push mov mov in adc sahf call mov std inc pop dec xchg cmp dec int outsb add pop mov xor (bad) popa (bad) aas call add js jmp dec dec pop mov pop jg adc mov pop fbstp in insl fsts push and mov in or imul mov add push outsb or mov or dec (bad) add push dec pop outsb push data16 (bad) in adc es adc adc push or pop adc lret enter fistl sbb sbb (bad) mov and ja jmp call xchg in jge fcompl (bad) iret mov xchg leave adc dec ja mov inc outsb test push dec push mov pop popf lds pushf and cmp sub xchg cmp sub mov ss dec push adc test pop xchg add and add imul inc mov mov xchg jmp mov or push add mov rclb arpl ja push stc lock cmp mov addr16 cmp add pop sub shlb je inc lock pop fistpll inc push das bound add xchg inc push mov jg mov xor rclb inc inc sub mov add or add xchg insl mov mov lret mov sbb (bad) add xchg dec and (bad) pop test mov or mov jl jl andl and adc push pop dec sbb repnz mov mov push lods data16 lods (bad) jae adc push push mov in out adc push lret ret pop test dec cmp test add fisttpll xor jb int3 mov or (bad) mov pop imul scas test repnz (bad) inc sbb dec pop ds jb lcall fcomps xor jg mov pusha test out inc cmp sbb push std leave stos aad mov arpl cmc lock leave test ljmp push in add mov aaa test dec add mov (bad) repnz dec pop pop sbb out sbb idiv dec repnz ja sub mov mov push xor mov movsb xor adc mov add lods dec (bad) sub dec lock mov xor pop mov ja cmp lret pop decb adc mov mov inc popa xor fcmovnu aam push dec lock addr16 in outsl jno or and cmp sbb mov stc out dec mov sbb jns sub pop push mov dec xor and xchg mull ljmp (bad) mov mov push aam std rorb insl mov dec adc sub push cltd cmp lods leave and and sub xchg xchg scas js adcl and imul stc icebp adc ror popf sbb mov mov adc addr16 call push inc xchg test mov lret (bad) dec fnop jmp mov in leave movsb lcall push pop stc inc sub pushf je sbb (bad) jne dec aaa stc int push data16 btr pushf mov aam cmp sub mov cmc ficomp mov mov push xor mov fcmovb dec dec mov sbb jmp and movsb push loope add test adc imul movsb loope and mov popa pop xchg jno iret push adc mov insb xor stc add fwait add dec adc adc cmp shrl cmp (bad) adc sbb icebp int xchg les lds inc gs xor ret mov (bad) mov (bad) or xor aas popl mov stos lods push or and jbe lcall gs pop add pushf xchg test scas int push pop dec cmp in aas je cmp pop or push jb and nop leave lods and sub out aad js fcoml call les scas sar mov jb push sahf mov fmull sub mov jg push stos mov mov data16 pop inc bound add cs nop sbb jl mov aas xchg out and cwtl dec (bad) repz cmpsb pusha or ss fs int3 roll lock aas push movsl clc xchg iret insl nop add xor push pop mov loopne jae loopne stos jmp jmp dec cld arpl xor sbb sbb xchg inc xchg in pop lret xchg (bad) cmp fldt test push je shll test xchg fldcw cmpsl xlat add popa lods pop ret cltd pop daa loop fs xchg push ja pop adc lcall add int3 mov mov sub decl lret xchg pop jbe into in loope in test test iret mov cs sbb jg popa int aas scas pop xor and mov rcl mov xchg je sbb lea shll (bad) or out cmp nop imul popf mov inc pop jmp ds ljmp jnp xlat adc dec and rcrl and and repnz sti outsl outsl mov popf stc repnz fwait cmpsl (bad) fmulp insl push loopne movsl mov (bad) ljmp fild jp das xor les mov adc xor icebp dec mov out ret je rorb (bad) jns jp dec push icebp xor fstpl dec push in mov insl jnp push test imul xor pop es inc in sbb and mov addr16 aaa insb je mov dec (bad) das pop mov cmp sub or test push les jmp mov lods fsubrp and mov cli (bad) rcrb dec inc xchg push sbb cmp addr16 ljmp sbb fild mov leave adc les scas mov mov jecxz mov out test cmp rcrb mov out mov and push (bad) xor fnsave aas mov jle fstps mov fs or push gs das test jno inc cld fsubl mov loop cmc out adc jge or insb out out popl mov mov and out dec mov add jnp scas inc scas push orl out push and adc mov mov or leave mov test inc icebp cmp dec lea inc sbb mov sub or add (bad) ss xchg inc subl xor aas and mov movsb mov mov test xchg (bad) jle pop (bad) int pop mov or push add aaa mov inc sub pushf jmp mov xchg jge negb fildll aad mov push in (bad) mov mov cltd xor jecxz lods xchg call jmp sub sub test es adc bound loop imul pop mov imul push ficompl mov outsb pop js lea pop out ss stc cmp loopne mov jg push in mov ret repz inc jle fadd dec xchg je xchg cmc fcmovnb and rcl aaa adc cmpl inc movsl lods cmp andps loope stos out outsb aam mov mov iret or lods cmp fprem1 dec and xchg sbb mov mov xchg mov out jmp adc fldenv mov mov and faddl pop sti call fsts pop lret imul jns or cmp add sarb decl (bad) (bad) ss and ret pop fstl and out xor pusha and dec push rolb lahf jmp sub sahf mov lea add test xor daa ja dec mov jge std jp fidivr mov mov push pop fst xor call ss adc or mov cmc xchg movsl inc cmpl (bad) daa lock push jmp cmp cmpsb outsb xchg ret fs leave pop or cmp xor jmp add call jmp int sbb ret mov imul movsl lret sahf jg hlt in push jle lret call xchg ljmp adc add enter cli mov cmc out stos leave popf repnz sbb mov or sbb daa mov pop mov or mov inc bound daa push pushf imul mov dec lods adc lahf sub push dec sbb adc or jecxz movsb mov sahf sbb rorb imul daa fs mov dec xlat sub inc movsb xchg pop dec pop rcr gs loopne in sbb das stos xchg sbb loopne cmp cli mov mov pusha (bad) stos push fmuls pop lret pop cmp test adcl fisttpll scas adc idiv inc push and fsubs pusha in rcll rorb mov dec fistl sub loopne pop push outsl (bad) mov inc jne or (bad) and xchg pop add push mov std jmp sub divl jae sbb aas mov and bound inc xchg fcoms loopne inc scas out xchg (bad) xor xchg aam and sbb fwait test gs test nop ss add incb inc and imul pop jb es adc xchg pop add mov jne jb,pt and (bad) or dec dec xor lret movsb cwtl rol das dec imul xchg xor xor (bad) int xchg dec jmp movsl test mov sbb cli call dec shrb ss jne mov inc mov (bad) xchg jmp cmp rolb or hlt mov popa dec push mull sbb mov or fisttpl roll pop mov pop mov and movsb cmpsb scas fs faddl mov ljmp out mov add lret test mov push aam leave inc xchg dec push sub sub push xor dec dec mov mov sbb lret adc cmp bound adc and and dec mov jmp out rcrl inc sbb xchg arpl cmp inc iret (bad) dec in fimull jbe jl mov rcpps aas mov xlat mov mov inc push icebp call pop or jp mov jb jmp mov stos jle adc fisubr adc imull lea push fdivr inc aam out sbb andl stos rclb pop adc jne mov or add fstpt scas nop fnstenv mov xor je cli rcrb nop adc popa stc cmpsl pushl add xchg adc inc aam clc add push loope lret inc cwtl fnop adcl aaa mov popf push sbb pop inc inc jl push cmp rorl xor arpl repnz cmc inc or in bound xor into mov test icebp cmp stos mov pusha dec dec jns iret scas push es pop popa dec jae pop stos das inc jno jge fs pop sbb mov incl iret addr16 mov sub les sarb inc negl popf (bad) inc in mov bound mov out and lods mov adc add dec sub enter fcmovb fs rcl sub cltd xor sahf mov shrl out jg incb mov roll sbb mov repnz jle int out adc movsl fstpl gs ds mov aam or daa jbe add sbb cwtl xchg sbb mov (bad) icebp or das adc out push pop sub fdivs xchg andb mov cld xor inc lea out daa and shll outsl push stos lcall fucompp (bad) mov clc xchg push jge pop fstps lods (bad) xlat (bad) out xchg pmuludq inc mov loope je xlat inc and mulb (bad) jg or daa test pop test mov (bad) in xor lea out xchg and arpl jmp jl icebp ret scas pop fs push adc (bad) ljmp mov xor cwtl inc notb cmpsb mov xor jp,pn (bad) insb leave insb fs and xor stos leave (bad) mov dec dec pop mov or add outsl sbbb shr test out hlt outsb bound int3 scas test jl stos popa out push cmpsb loop dec sbb fstp ja add es rcll mov js xchg pop xchg cmpsb shlb gs les imul sahf test stos cmpsl out (bad) repz std pop adcb lahf (bad) dec out or lods ret push mov or dec cld push mov iret jno adc push fcomps lcall inc mov sbb push sbb bound mov ljmp test ret pop movsl lret add lods fidiv jge fistpl pusha cmpsb dec addl dec popa inc mov clc out dec sub push add cld pusha inc stos scas mov add outsl pop fistp repz repz push iret jle push cld push cmovbe or mov xchg mov movb add dec aas xlat and stos fisubrl data16 sti inc les movnti lret lret or rcrl sbb pop ljmp les inc mov jp inc test mov mov jne (bad) pop inc aam cmp cmc rolb (bad) (bad) stos (bad) loop add jge ror cmpsl dec sbb mov push fisubr sbb lods mov sub mov mov adc ret xchg lret cmc push outsb jp xchg jo xchg sbb pushf mov mov (bad) cmovl jb xchg cmp mov rcl or data16 fninit cmpsb mov scas mov data16 iret add adc mov inc cmp mov cmp aam fmuls (bad) mov or iret fildll or adc stos sarb xor hlt and mov imul inc pop imul outsb or aas addr16 popa aas add in dec add ja dec lock mov mov lahf fucomi outsb (bad) sub mov loope mov daa mov inc cmpsb pusha loop loopne mov dec into into add imulb mov jbe jge xchg pop or xor sub loopne cltd (bad) pushf mov popa lahf call mov sub push cmp mov inc mov in out loop xor or adc add ss add scas aaa mov mulb jns and lods test xor lods inc call inc jle cli je test mov test (bad) (bad) add out xchg pop pushf push lods fisttpll jp outsb inc test push cmp cmpsb mov or lret add in repnz mov cmc cmpsl and rol mov jae inc je mov imul rol lock or inc cs sbb scas scas mov fucomip loopne in or and pop lock insl fdivrs sub dec add mov cmp sub ja es cs orl mov sbb mov mov xor push fsubs ja jmp sbb xchg sti lods xor xchg push jg mov int xchg lds mov (bad) shlb and test xor and test leave (bad) lcall mov nop hlt addl mov arpl fildll out cltd stos fisttp mov cwtl jb sbb adcb adcl cltd lcall int3 (bad) inc or mov fwait dec push and mov das ljmp test es addr16 iret bound ret sar dec push mov ret into mov cwtl xor mov add mov mov jb push or xchg jecxz nop ja jnp iret dec in (bad) or push not xor pop add inc jecxz pop or inc nop leave negb clc inc mov mov in mov in test ja sbb xchg jge jecxz test rcll jecxz mov add ret je cmp adc adc sbb pop add cmp adc mov xor cmpsl shl jne jne icebp fs ss arpl or fucomp outsl stc adc xor sub inc andb push xchg mov sub push addr16 rcl mov imul xchg (bad) movsb xor jmp sub mov mov lret jecxz jno out sbb ss frstor call icebp aam sbb das and scas push pop pop into and mov mov fwait xchg pop fstps xchg cs in mov ljmp fist mov jnp xor xchg in stos jne movsb shrl fistl cli mov cmpsl imul mov push insb dec jo xchg jge jg mov sub add call or xchg mov leave insb mov cltd pop dec pop xchg mov mov sti mov sub test std aad fadds mov stos xor icebp addr16 fadd mov pop mov test push test lret mov add movsb test pop (bad) lret iret fldenv mov (bad) or jp nop fidivl loope push jno pusha fcomps ret repnz decb aad push pushf sbb popf push or test and xor adc or sub outsl aam xchg fcmovu inc jbe inc and fs pop cmp mov push adc mov and iret adc push lret add int out mov ja imul leave dec mov and dec inc (bad) stos fmull pop pop in mov (bad) xchg xor jb pop xchg es pop nop test or and or and stos loopne rolb loopne sahf hlt jecxz sub push fisub pop mov sub ds leave (bad) sahf mov lock xchg imul loopne (bad) jo pop adcb xlat lods mov fs cmp stc mov fidivr or fdivl cmp incb sbb fmull repz stos bnd mov mov mov leave xchg jmpw loopne dec das sbbb popa test adc cmp inc test mov xor xchg movsl pop sub jne or addl inc mov sub jae cmp js cmp jmp out adc inc in cmp dec xlat cmpsl pop add imul repnz push or push xlat add je sbb adc dec sbb pop xchg push cmp push sub ds and call add inc ja movsl fcom jmp add sarb stos imulb push sbb mov cltd sbb mov es and mov (bad) push xchg push sbb pop loope shr roll dec inc mov test mov es inc xchg sub inc into shll fisubr jo xchg push testb je insl mov ss and pushf fcomi mov (bad) js adc push in mov (bad) je mov test bound cwtl fisubrl stc or cmp adc (bad) lods push mov sub insb cs (bad) icebp popa data16 out sbb stos jmp push lods cmpb loopne mov dec adc xchg xchg pop popl push insb xor mov or mov sbb pusha add push fsubrl xor stc push add xor and or xor add cmpsl mov pushl and mov or icebp aaa jg or mov cmp cltd push pop and xchg insl mov decl pop dec adc jle cli xor push pop push (bad) (bad) jb adc js sbb idiv jne sub cmpsl push ss jg orb fwait inc aam insl call xchg sbb jle jl mov imul xchg stos xchg and mov and fwait int3 cmp jne call push mov adc push std sbb inc cmc ret add sub cmp lods cmp ficom adc jo out pop or pushf jge inc or lahf cli adc cmp or ret dec in sti lcall xchg add in fadd lea push shrb push push cmp cmp gs cmp sub xor mov sarl pop (bad) je or or push nop jge lret mov insb loope sub inc lahf xchg xorb push jb pop lods push sarl xor lcall in jecxz insl andl (bad) xchg aam mov test gs (bad) cmp cld xchg pop fucom dec jp popf sub ja insb das push loop outsl push adc repz pusha or xor sub shrb pop mov and mov jl inc lret push adc fs lds rcll fbld xchg stos leave (bad) add lods adc jecxz imul sahf inc cli cmp in ja lcall cmc aaa cmpsl adc mov loop cmp sub mov xor inc push frstor cmp sbb pop push rorl sub clc notb or jl cwtl imul rclb ret aam jmp cld fisubrl test add cmp loop mov dec in mov xchg sbb pusha mov (bad) mov js push or iret xchg xchg xlat xor push (bad) scas sahf rol imul xchg loopne push roll fdivrs and add stos cmp mov or xlat xlat pop mov (bad) (bad) cmp jmp dec mov dec aaa pushf xchg xchg rorl cmpsb cmp xchg add fsubp (bad) and inc repnz dec lret loopne icebp pop mov loop out and cmp sarb mov addl (bad) push cltd hlt pop cmpsb out xor imul and movsl outsl pop imul int call pop jns inc lds cmp push pop addb loope (bad) fistp je inc hlt inc nop fs mov popa mov push out sbb inc cmp mov andl test insb out xchg jnp or imul adc jnp adc lret xorl (bad) enter (bad) sub scas out jo pop cltd inc inc or aas push mov rcr out outsb push pop dec out lock jl or mov mov add sti xchg push jg je dec cmpsb ret dec nop orl outsl pop rolb or pusha scas or ljmp lcall imul dec loope add adc xor test jbe jle lret nop lds nopl inc push imul pop pusha es mov pop jae faddl mov mov cmp pop add xor int sbb push jmp mov xchg xor into cmpsb stc rorl or test fistp adc loop loope insl sbb or pop sub push cmp scas std ja add rorb push fmull mov mov cmp in dec dec ret mov lea add loop sbb and ret dec jns ljmp out push sbb mov or jmp mov repnz out lret adc xor int sub adc cmpsb sahf jne (bad) stos add btr inc aad pop push rcrl movsl nop push aam aaa cmp adc xor push mov enter or stos (bad) es xchg push vunpcklpd mov jb jo jecxz inc popf xor pushf inc cmp psraw push mov bound test dec mov test das sub and andb fadds adc and inc iret jl mov arpl fisubrl xor stos lret das or fstpt mov mov fidivl and lea dec aas sub lods inc cld bound lret fsubrs loopne mov popf jns mov xchg lcall pop sub pop xchg sahf dec push (bad) mov call add mov movsl mov lds jge orb pop inc lods mov mov dec adc pop shrb jp popa xchg and mov add scas mov ficom cmp xor leave iret int3 in sbb nop xchg push lea and add add (bad) xor test stos mov pushf (bad) (bad) daa out jge mov jecxz rcr call pop dec bound add pop push sbb xor push push notw ret cmpsb push repz pop sub lock movsb add jmp (bad) int3 sub xchg push dec push daa pop fldenv or sbbl daa inc pop mov fnstsw rcrl aad (bad) mov xchg jno cmp pop shld or cli les test push notl push jae insb mov sub xchg in and leave adc lods cmp push scas push mov cmp add mov test nop or scas pop test cmp sub mov (bad) xchg cs pusha inc or adc and fsin mov pop mov mov mov enter xlat push subl mov out sub or sbb adc out push mov int push sbbl (bad) cmp lods pop sbb mov les movsb push scas inc jmp cmpsl addr16 lea push push out or cli sbb loope or sbb sbb fistp fcompl les cltd or cmp pusha mov movsb mov in or (bad) cmpsb add inc popa mov mov out or incl push xor (bad) fimul aad sub sub jae inc mov enter inc jl rcl in popf push fdivl loopne lret inc stos xor inc sti jnp loope xchg imul scas lods addr16 pop hlt into sub outsl or inc sbb push lds lods and xchg push sub xor (bad) and xchg xchg fwait push inc (bad) inc icebp mov adc in sbb cmp call xchg scas dec sbb jecxz sarl mov cli cmc dec and (bad) jb mov inc adc adc cmp sub lods adc sti add test sti in ret data16 movsl in arpl mov sub in stos das xchg jns daa jnp lret or ljmp pop in (bad) hlt jo or enter aad or mov push loop xchg mov dec inc mov lock pop arpl pusha sbb push leave pop repnz mov ret adc push out ret pop jno std out push stos jecxz jmp cmp dec mov arpl fwait lcall xchg stos insb or inc lds addl pop popf movsl mov mov mov repnz mov daa aaa pop dec pop mov repz pop sub ficoml andl imul mov nop imul ss add in aad (bad) lock adc dec lret dec idivl sbb rorl xlat in pop mov pop and inc dec test ret xchg dec scas test lods lods rolb cmp push or pop cmpsb cs dec daa jle xor rcrl insb into xchg pop imul stos outsl fadd (bad) jae dec mov loop mov (bad) (bad) xor es mov imul xchg jne in fstl lea mov sub outsb in pop inc inc imul ret mov movsl orl push fnsave out es inc jno sub push inc dec (bad) add scas (bad) je je or dec cs jns sarb movsl jecxz push xchg jbe mov iret or jbe and leave es lock negl mov add jmp lods out (bad) adc out cld jmp cmpsl out cltd popf mov pushf js int3 xchg jno jo dec es sub sbb lret jnp sub aam les mov and pushf mov subb icebp movzbl inc push push xchg scas mov push and stos add mov jl mov mov and int3 cmp in push and and pop icebp sub rcr fucomp jnp xor or xchg or cmp and jmp cmp push out inc push orl sbb loopne setae xchg std pop sub sbbl push and cmp movsb es push out sbb sub dec jp lods jb push adc add xchg pop repnz je sbb adcb scas movsl out dec repz in mov sbb shrl mov dec fbstp aas push push mov pop xchg add and cmpsb aad ljmp les jbe add inc dec (bad) (bad) cmc mov mov pop inc movsl fwait aam push inc or push mov lahf inc cmpsb push add push sbb mov xlat stos ss add push ss and sti (bad) rcr cmp lock mov scas pop test jae pop mov ja lods jns and xchg sub and imul lods jb or dec cmc leave dec sbb inc imul lahf mov arpl sbb push out xor mov (bad) jecxz adc in sti sbb (bad) jbe push cmp cmc xor cmp aam sbb pop test xor inc cmp gs mov jmp xor cwtl fidiv fnstenv mov nop sbb mov cmp jg push inc xchg sbb xor das out pop mov or test jnp clc call faddl pushf stc in aaa push mov scas sbb (bad) xor (bad) cld enter add jns sbb insb ficompl push std or cmp out add inc loop dec and jle xchg mov pop arpl lds out pop push push js jo leave mov xchg sub xchg jmp dec mov (bad) arpl mov push xchg in aas pop pop lret mov adcb ja aaa ret test mov adcl icebp xlat jb arpl jl movsl push sub mov dec mov outsb dec cmp jge and jecxz mov int pop mov inc xchg sbb mov loopne push and movsb js inc dec ret sub add push cld ret push inc scas (bad) adc xchg cmp and (bad) es (bad) int3 lret dec and aad push inc outsb mov addl dec pop das (bad) insl xchg mov (bad) outsl push and push jl jno (bad) adc jg push fstps pop idivl out adc (bad) mov decl in sub es cltd (bad) jo or in repnz xchg test mov mov roll ja popf add lret mov adc pop cvtps2pd mov (bad) pop mov xorl dec dec cmpsb jle lods movsb and xchg cmpsb rorl loopne or mov mov jne mov xor mov jo mov jecxz fs inc mulb pop jns out mov faddp add xor addr16 fistpll ja sbb sbb inc push sub (bad) xchg ljmp rorl imull add pop es rorb adc ss inc les out shrb cld flds scas push push (bad) out aaa push scas pusha sbb int (bad) fcmovnbe lods adc or dec cmp pop rcl in insl push aad std push (bad) xor jp add pop stc pop into jae and inc mov dec std dec mov cmp data16 mov call shlb and out pop sbb gs dec mov mov or test (bad) popa repnz mov mov into test lea out mov rclb sbb jno (bad) xor testl cmp imul (bad) cmp mov dec jns test push hlt mov (bad) ds cwtl jmp xor mov (bad) pop arpl scas ret add pop icebp rolb out adc lods mov fsts movsb sbb jge dec mov jecxz mov mov mov inc (bad) xor or push loope or add pop icebp and insl imul inc mov mov xor repnz imull lret push push adc and cmp pop cltd and inc jle test out or test icebp adc (bad) cmc jo push fwait jne rclb sub push bound pop xor push xchg les inc jae in xchg popa mov xor (bad) mov sti stos hlt pop push xor push adc inc xchg mov mov pop mov add add dec fsubl movsb imul pop cli pusha xchg popa test and xchg lds inc inc jl cmp into pop ret loopne insl sub (bad) adc and push in bound popa insb shll cmc jp xchg (bad) mov shll inc call mov xchg in out cmp data16 cli add mov fadds xorl into and sbb fisttpll je jecxz dec or jb in (bad) jle in test pop lea mov test mov dec addr16 cmp add stos shrb adc das cltd daa int3 push sbb and test xor js xchg mov mov jl in push adcb enter or pop (bad) and cmp aas and aaa cmp dec fucomip cli and xchg cmpsb mov adc mov aas cmpl repnz inc xlat mov in imul je out repnz je clc jnp and ficomp movsb xor out add faddl nop sub aam push addr16 aam dec jp xchg es aaa sbb imul popa in mov xorl and and mov jecxz stos mov mov mov js loop adc int repnz bnd fbstp dec out push gs mov dec out adc mov arpl mov adc push jg fsubs (bad) jg stos xchg xor mov adc imul fstl nop inc pop cwtl xorl cmp mov mov insb push (bad) dec mov jne movsb out mov es test fstpt adc test mov pushf adc pop addr16 pop hlt fucomi cmp jno fsubrs shrb (bad) mov jle add mov and jno cmp xchg hlt loope rclb xchg divb stc push dec pop test push addr16 cmp fidivr or dec test sbb (bad) fimull negb inc or pop xor insb inc addr16 mov push jle int mov pop sysexit lcall ljmp in jecxz rolb js inc ljmp scas jecxz dec dec das jle pop lahf loopne test push push mov inc xor daa popa mov push pop popa dec jg repz iret (bad) cmp imul (bad) sbb icebp jecxz popf jle sbb stc xchg loopne ret rolb mov sub inc jbe xor in inc add sahf cli push push sub dec fwait lret xor aaa inc lods mov cmpsb outsb leave cmpsl push xor in insb add les movsb pop xchg les insb lock popa add fcmovnb mov adc pop ljmp mov stc pop das addr16 in mov in mov cld imull or (bad) mov adc out ret stos ljmp or ljmp mov addr16 inc (bad) xor mov test call adc in aaa (bad) mov lret mov imul mov int fldt inc sbb push pop icebp adc in call out sub sub scas inc fidivl sbb dec (bad) movsb sbb shrb xor mov iret cmpsb lcall dec pop xchg mov jmp shll es cli and in pop xchg pusha fildl pop adc cs jno mov rcrl jnp and fstpt ret sbb in inc repz dec mov add xor jg pop xchg mov (bad) repz push lods nop jns adc (bad) xchg iret stos ss (bad) cmpsl ja out jno sbb notb adc lcall dec lock push push jb mov in cmp push xor jle mov pop xor adc xchg and cbtw xor push push cmp (bad) sub sub and into or fwait cmp mov mov push nop sbb mov jge hlt jp mov mov fmull jae es imul dec pusha mov aaa fwait rorb push mov sub out loope in and sub call fcmovnbe popf add and icebp and push pop jae mov into push std sbb pushf mov pop lret enter jo xchg mov cmp inc cmpsl cmc movsb mov or dec jae repnz jne lods das insb or sub adc lds inc std xorl sar rorb push and lret cmp div ds hlt inc bound or scas jmp xor aam mov ja pop mov lods mov or (bad) pop dec ss and mov xchg in mov lret out movsl ds inc pop xor push mov movups push nop scas or loope jb mov lret xchg push or pushf arpl in (bad) ss jbe aam dec scas add add mov les lods cs xchg cmc shlb cmc jecxz shlb loop ljmp rolb inc out pop or jg loopne fbstp add fwait cmpsl mov or int mov adc outsb cmc jb fstl movsb pop xor arpl out int scas xchg cmpsl mov (bad) cmp xchg arpl and cmp bound jnp jmp daa icebp add les mov aaa div mov (bad) or negb dec into xor sub (bad) adc pop out in and dec mov add xchg lahf xor mov lret lahf inc aam pop fistpll and dec scas inc (bad) and sub rclb sbb jae push xchg or mov cmp orl adc incb fisubrl (bad) fsubrl mov repz enter ret dec sar imul adc loope mov sbb aaa xor popf cmp dec sbb lahf pop je push mov int cli aaa enter push pusha int pop mov lret test mov ja xchg in mov loop dec test fiadd dec out inc in pop out adc push mov pop sub imul jle mov out insl mov mov scas cmp dec andl adc out inc cmp push lea and inc roll stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld incl cmp inc mov mov add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add ja add add or or add or add add add pop or add add mull add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add cmp push js in xlat add mov mov (bad) mov (bad) adc xor adc add lock add push add cmp popf pop in mov out dec test ret xlat call cs cmp aaa out add mov push dec hlt rcl add loop dec jae ret jb xor push xor inc ret xor repnz enter lds addr16 icebp cmp inc mov (bad) call sub add repnz (bad) pushf out lret addr16 enter scas mov and sub movsb or leave into loop lods jge push cmp mov and out enter xchg sub mov cmpsb add mov inc push jl in xor les lods or lcall jg mov inc fwait inc mov inc adc jecxz loope (bad) cmp mov movsb (bad) cmp mulps in sbb jae mov and cmc mov aaa mov lret or imul in fimul ret inc imul cmpsb xor leave and adc cmp dec mov push in fistpl jae std push and cld fisubl out mov add leave aaa jns (bad) adc movsb sub daa pop xchg daa mov outsl xchg mov or sub ret out sbb out clc sbb fsts ficoml sub outsb dec (bad) and mov inc cwtl test cmpl movsb scas pushf inc mov mov cmc mov mov fcmovnbe (bad) (bad) gs div push inc push mov std or pop aaa add movsl (bad) movsl scas or xchg imul gs out int fsubrs push stos push jmp xor out pusha sbb mov loop (bad) repnz mov pop add pop dec out inc xchg in stos dec iret and mov mov dec lret mov adc xor rol cmc addr16 dec imul dec jecxz mov pusha inc adcl ss hlt repnz dec jno sub ror dec dec aas cmp popa mov loopne cmp jae iret cwtl jns push adc mov (bad) jbe shl pop mov test mov imul mov pop cwtl push adc dec test push add xchg cmp (bad) jecxz stc clc lea in mov lcall lods push pop fdivrs int3 icebp mov ljmp test xlat and lods fidivr or mov inc mov out mov mov repz xor orl sbb std mov shr (bad) jp mov mov add (bad) push scas (bad) hlt cmpsl ss cli pop sub fs decb mov cmp (bad) repz mov jno (bad) dec fmull xor xchg xor fsts or inc ss fmull jmp and je mov subb cmpsb mov sahf stos es cmc leave int3 push stos or add mov or jbe in loope inc test cli into mov push mov in or jle and enterw xor mov mov movsl xchg orb fs (bad) loope scas orb in pop cli leave pop and pop insb das or test icebp push mov test int3 iret mov ss add pop rclb mov (bad) cmp fidivr in stos push xchg fs rolb ja cmp jno xor scas adc stc sahf loopne call in pop imul push pop add pop mull jmp sbb shr test cld mov in cmpsb lahf popa sbb push out mov mulb ficomp mov in jno jb ljmp cltd mov mov clc ficom push sti dec in mov jle inc mov mov jle sub ss aad add dec out aaa lea xor pop xchg cmp shrb jb xorb in cmp cmp push add movsb mov sbb jo nop (bad) inc or sbb pop xor mov mov push call xchg xchg mov loope das bound test jnp movsl movsl mov std adc cmp pop out rol lds push aas cmp idivb push (bad) mov lds hlt call adc in add pop cmp stc (bad) cs leave push mov ja (bad) mov (bad) xor das mov int lods movsb loop sbb inc outsl lods dec mov or mov outsb sbb dec cmpsl ret (bad) mov sbb arpl (bad) jo mov mov mov lea xor das add out xchg loope (bad) fsub out lret xchg inc pusha push test ret push xchg outsl divb aad dec lods jle add xor push xor sbb jmp cmp lahf jp xchg fistpl cs inc scas popa lods xchg fild clc jecxz pop or mov jbe (bad) or cltd in mov xor sbbb orb mov inc mov scas adc loop push push mov and sub add xlat dec cmp pop inc mov sub xor inc (bad) cli gs xchg push lret xor sub sub test out rcl sub push or jns push ljmp sbb push or mov dec in cmpsb ja sub mov iret sub cwtl imul inc xor mov mov dec mov fcoms jge jmp mov js int3 mov pushf int xchg out xchg ss and xchg in test into cmpsb and inc mov lods test pop movsb xor adc mov cmpsl inc inc dec sub mov out sub sub mov mov fcmove movsl jg clc adc stc stos fmuls add adc add loopne sbb sub xchg das jo addr16 cmp pop pop cmp xor sbb pop fdivp and mov pop pop cmpsl sbb pop pop (bad) popa insl xor and jnp dec inc sbb gs pop and ret mov repnz js ficompl aam jnp add xor mov cltd bound xlat mov push cld pop ss lock jge inc xor inc mov ret dec fldcw add test inc lods iret jns sub cs adc (bad) pop (bad) pop stos or xchg mov mov push cli insb xor ret dec jge je,pn mov daa ss dec scas call les mov test cmc pusha imul or repz pop jne push sbb daa mov add adc stc ja ja xchg jge inc fdivrp mov test inc shlb mov mov jmp xchg jno in pop shlb sbb jo sub nop mov dec sub popa jp int3 ror vmwrite addl flds cs fnstcw les test outsl mov push scas sti outsl cmc xchg mov repnz jle lea mov pop jmp out ss sbb jmp aad mov sarl adc rcl jne pop imul clc shlb out std lsl cmp sub push xlat jl fstps add xchg das std mov jns adc stc sbb mov ljmp dec pop inc inc mov stos addr16 popa mov adcb clc and cmpsb sbb int3 in or xor mov pushf adc jle mov arpl jae popf pushf push or xlat jno inc or leave mov xor pop std sbb and lods dec fistpl (bad) js or test movsl mov jo loopne repz fcmove xchg add jnp xchg imulb test push adc and xchg adc mov out mov enter sti pusha jg arpl lret adc adc daa mov xchg jl (bad) shrb xchg scas (bad) jae adc cmpsb rolb sub rcll pop loop push cmp dec in jns push push mov jecxz jbe aaa sub fisubl daa mov (bad) inc sub lods lea mov jns jecxz mov cmpsb mov dec jbe sbb insl cs (bad) sbb cmp jl (bad) and sub and xchg mov add test repz or ficom scas scas inc enter mov enter inc aaa mov iret and inc dec add sub inc lds lea insb xor or aad dec or sub mov pop std mov pop push ja jns fcos pop jmp dec (bad) sub xchg dec push testl and in pop fwait cmp stos mov stc cmp pop incb lret test stos mov (bad) jne xor test test add aam (bad) push mov scas sub ds shrb ret leave push dec push xor pop add (bad) mov bound jno,pt jp nop fcoms xchg xchg (bad) aad push std mov or lret push out adc mov sub sub add neg in arpl scas mov (bad) lret or scas pop pop js pop js inc adc fld (bad) inc js inc xor (bad) loop stos mov mov popa fnstenv xchg mov ret pop cmp outsl sbb hlt mov sbb adc jmp jno in mov sbb gs leave fwait sarb sarb sbb cmp xchg lock adc sbb push jl in cltd pop add xor xchg xchg push and repz jge cmp jmp and mov or xchg aaa test lea fiadd jae stc mov push in cli repz adc mov imul add in int or dec addl dec xorb adc loope dec es clc les arpl lea les (bad) iret or fisub je rcll data16 (bad) or outsb jnp adc add adc (bad) fwait je ret aaa sbb xor jb movsl adc std movsl adc je add or sub push mov lds icebp xchg sbb cmp sbb cs imul add es jg lret (bad) aaa cwtl xor imul (bad) pusha iret cwtl jne insb xor sub adc mov outsb fisttp (bad) dec insl xor push movsl addr16 jbe add stos int3 or inc dec cs rorb cld test fimull cmpsb paddq push fstpl inc sahf fidiv inc sar mov repz rcrb movsb cltd or lock sub daa je dec inc xorl dec in jns dec ret push pushf popf adc ljmp ja adc jae int popa adc (bad) sbb jno dec add ja jne cmpb imul cld cmp in hlt mov sbb sbb test enter lock inc lret addr16 mov adc stos pushf (bad) push xchg jns add ljmp (bad) mov inc inc stc cli mov add leave and repnz mov mov or mov xor push push and mov icebp adc icebp push cmp xor push cmp faddl testb cmp add mov idiv daa cmpsb mov incl sbb xor jmp and ss lret sar es lods push and (bad) shll sbb inc xorl mov dec pushf push mov or sbbb js jnp sub or xor lds (bad) jecxz push xchg mov push dec adc je call std sbb imul rcl jmp pop add sub scas lcall push jo scas mov inc ljmp and add xchg and inc cmp push fsubr lcall jl dec adc push cmc mov push gs dec and mov test xchg jl shrb (bad) out ljmp xlat loop dec push cmp sbb dec es mov roll sub mov jmp cmpsb mov pushf and push scas lcall ret push popf js mov sbb or jmp movsl repnz sarb inc xchg popa xchg jp pop movsb movsb cmc cmp jae cwtl enter mov fnstenv sbb inc xchg xchg mov scas or aas pop push js xor gs cli mov test xchg xor xchg iret push fnstenv fstl pusha add addr16 aad sbb inc rcl outsl lahf xchg sarb popa shrl mov in jb lods push (bad) ljmp rcrl jbe mov clc insl cmp jmp daa sbb jl loopne gs mov cli inc fistp stos mov jns icebp add cmp xor xchg enter add (bad) jl daa test xchg jo mov movups pop insl addr16 jg imul cmp sbb mov push mov incb fdivs add stc into in dec iret pop adc mov dec mov mov or mov repnz icebp xor mov inc es and mov (bad) lea sub out popa inc into loopne push lock jl gs pusha jmp scas pop mov mov cmp dec (bad) or je rcrl xchg das xchg loope push pop cmp inc das lea jp mov scas push (bad) or loopne jmp sub imul adc scas lods jo jnp mov add sbb jp arpl cltd xchg sub pop pop inc lcall out shlb dec lock jge jne push imul and add ss jbe jg mov push adc (bad) mov add mov jle or (bad) pop and lock push cmpl repnz and or add and xchg imul insl in sub sub lret and inc sub sbb sbb test sbb loopne (bad) negb (bad) push clc out cwtl and in xlat rorl cltd ret test cmp imul aad int3 sbb fwait sbb rolb sahf add jo (bad) pop rol sahf testb nop mov (bad) sub push sub sub xor cmp or pop cli xchg fdivs daa xor data16 lods push mov mulb rcrb das push xor pop lcall nop inc xchg das sbb add test loopne imul cmp dec pop jge mov or mov lods insb test shr inc push add adc cltd mov cwtl out xchg fistpll sahf aas adc pop out xor push jo xchg mov scas outsb outsl dec imul cmp xor mov js adc ljmp movsl xor ret xchg (bad) in push movsl aad insb xchg jns (bad) xchg xchg lcall xor cmc sub dec mov in imul and sbb dec pop insb xchg insb mov outsb dec xor or aaa jle (bad) popl ret xchg pop (bad) jne cmpsb repnz push (bad) and sbb repnz clc fdivs mov fcomi push mov xchg arpl xor pop push sbb pop (bad) das xchg push lcall (bad) scas mov or push stc les xchg xor stos popf cmp mov push lahf nop sti aaa loopne adc ljmp in insl inc lret mov (bad) sbb push sub mov fldl test sahf in xchg mov dec scas insb mov push xchg loope je movsl (bad) lret adc mov jbe fnstcw std rclb push into std sbb inc in sbb add sbb fsubrl dec pop dec mov (bad) and lcall push aaa jne ja (bad) sarb iret stos mov cmp xor and and and sbb cmp push arpl pusha adcb lea cmp inc out rcl xor sbb sarl mov inc (bad) adc jge jno nop dec sub (bad) repz mov jl das and push xor cltd xchg enter sbb dec xchg (bad) mov push loop xor in mov pop push repnz pop jecxz xchg (bad) fucom cmp ffreep dec push adc jno sub xchg pusha push in xlat mov sbb jns or cli aas std or sub notl cmp ss mov xchg xor pop cwtl je push jbe push mov fisttpl jg sahf push mov dec outsb mov sub adcl xor ret xor jmp divl stos add pop (bad) ss cltd and mov and dec decb decb (bad) ds mov and jl pop xchg inc iret mov rorl call pop add icebp stos inc fcomp cs add or mov ds mov mov rorl loope sub push jmp lock cwtl xchg jecxz pusha outsl fs cmp pop loope jnp (bad) mov maxps and jns cmpsl movsl lods pop fisub fs and cwtl push cli pushf mov sbb movsb cli (bad) nop outsl or stos push (bad) jne mov ds fsubrs push dec hlt cmp sub and cmp xor push js sti and rorl scas stos js repnz lret add leave add jecxz loop pop in jae pop shlb or inc mov cmp sub es jl and leave pop push stos dec js test push cmp sahf add aam sub fidivr cwtl sub pop mov (bad) mov mov stos imul ret pop inc les push mov add ds jae ja loopne add andb xor imul movsl lret outsl dec sub movsl push mov cmp data16 mov into fidiv sbb outsl cmp jmp mov roll jbe add (bad) mov (bad) cli xchg sub test popf jo sub shrl icebp ret in call out popf int (bad) lcall pop or xlat sahf cmp ret cli out sbb mov iret ljmp pop cmp xor mov push sbb mov icebp daa adc sti pop jmp test xchg insb cmp outsl add push xchg fcoms dec (bad) mov xor aam ljmp sahf xor jnp jns jo aad mov in cmpsb xor mov sub jae pushf aad scas and lret sbb mov adc or add dec (bad) sbb mov mov scas pop cmp fdivs or sub add shr loope mov fdivr pop sbb jge pop sbb js das cld loopne and push (bad) jl xchg adc inc into (bad) and dec daa sbb mov outsb mov (bad) pushl pop stc aad cmpb aad test jne rclb adc imul mov data16 xchg test jae xor adcl lods out lea mov push repnz push xor pop xor imulb int (bad) negb jns mov mov dec fcoml mov hlt aam xchg mov bound xchg lea dec and mov pop in jbe popa adc pop xor and mov movb jnp push fidivrl (bad) xor lock jp or out mov xchg adc add aam mov out push pop add add in cltd xchg popa cwtl sub cltd ja sub pop xchg mov divb mull or jp xchg cmp (bad) mov xchg jmp sub aas cwtl lods fdiv daa mov or nop sarl sbb stos nop cwtl outsb add repz andl fucom push dec pop dec add cmc loop add iret push pop adc ret mov xor or mov pop hlt arpl sub mov test je out arpl mov (bad) sub out jbe sub sbb daa adc or (bad) out xchg (bad) outsb xchg addr16 mov sbb stos dec jnp cli ret addb js mov mov cmp adc mov inc pushf fbstp lock cmp test cmp les pop (bad) mov xchg and xchg xlat sub sbb mov stos lock mov (bad) lods out inc add inc imul insb scas out sub (bad) das shrl xchg push xor mov xor dec mov xchg nop push outsl sbb pop nop aam sub dec (bad) or nop addr16 inc test and push jp jo pop cmpsb (bad) mov inc mov in push arpl test and mov cs aam faddl xchg bound inc fsubrs push xchg fs sbb outsl cmp dec adc popf out shl xchg lds ret dec (bad) push (bad) ret cmp cmc jg test movsb cmpsb jno jo mov inc add bound xchg mov daa movsl std es push sbb cwtl mov push into jo jnp aaa push shlb mov push pop es jns inc or call push popa sub test inc sub negl mov int cs mov adc mov mov stc dec inc sbb sbb bound hlt sahf imul lcall out cmp sahf lcall mov add (bad) sbb ljmp xchg jmp xor inc xchg loopne pop mov mov movsb pushf cld test dec jmp inc pop xor xor push les sub and addr16 push pop mov xchg mov jno jbe ds mov (bad) and loopne sub adc mov movsl add mov loop jb cmc jbe xchg adc xlat adc movhps (bad) sti scas xor data16 cmc jg pop out je sub mov out mov pop add mov ret inc rcrb pusha out and mov ret or add push pop bound outsl push mov jb pop inc (bad) pop cli push fs xchg push das sbb icebp (bad) pushf cwtl adc (bad) xor mov add cmpsl mov or inc pop inc ds jp inc xor pop sbb inc ja out je dec sbb fs outsb shrb adc push dec imull inc mov sbb sar xchg (bad) daa adc push and dec xlat inc test cmpsb (bad) mov dec inc pop push frstor fildl (bad) insb sub push leave iret scas orl pop inc flds shrl inc repz jl sub cwtl out in dec popf push fimull cli jno jg sub jge inc push shrl mov popf push adc pop aas or notb fistp jge inc and sti sbb and lods jne,pt add jmp movsl or movb in add in jo lds ja push mov cmovge cwtl jno lods js cld sub push dec and imul bound mov inc arpl loopne push aad pop call xchg aaa repz (bad) or fwait mov jae xchg pop sub add push lret std pop sub pop pop aas in dec and lods push sbb fwait xor mov iret xor cltd push mov push adc mov jmp xor ljmp mov pop pop fbld sbb mov test jg push xor pop dec fistl (bad) repz aad fldenv or out cmc fwait cmpsl and movsl repnz mov jmp xchg mov sub insl sub fbld mov movb into pop (bad) push xorb mov mov jp push bound dec outsl imul popf mov repnz es pop pusha call or insb enter xchg jle xchg dec cltd mov fbld inc sbb mov mov call add mov (bad) cmp or dec xchg and mov mov test or sub lock ljmp xor cmp cwtl in xchg xchg je sub mov pop sti lds sbb fwait push fbstp xchg sub mov pusha clc std jns shrl or fidivrl cmpsl movsl fildl cmp and mul loop iret loope (bad) lods scas mov xchg fsubrl insl pop arpl pop les mov xor (bad) dec orl xchg int3 xchg mov mov xchg push and xchg aam into (bad) stc push in cmp jne xlat pusha push loop cmp add mov mov xor daa movsl outsl int3 push xor test rol jae lods jne in inc fldt fs pop jns jnp xlat pushf rcll test movsb in fwait (bad) mov test fsubrs aad mov int3 inc pop ja inc mov out ret xor dec or (bad) push xchg lret loopne ja or cmp icebp daa js mov jmp dec or cmpsl test bound or daa lods adc fnsave insb iret push inc loopne push add xchg (bad) aam jg rcrb data16 sbb inc out fist xor insb and popf les clc dec lsl pop mov and and inc sub fwait in and into dec sbb cmc or cwtl movsl pop push fmuls push mov mov insb (bad) cmpsl and adc andl in aaa jbe imul dec call fiadd xchg push xchg cmp sbb lods pop rclb outsb adc insl in lar xchg or (bad) aam stos or jnp faddl mov xchg dec out and pop xor jnp cmp inc aad lods dec inc out jp js mov in (bad) out cmpsl pop loope rclb lahf push or xlat cltd lret je (bad) mov add adc pop mov jbe fsubrl mov (bad) cmp push cmp shll jbe push mov insb inc xlat out dec out mov repz dec mov cmp mov iret push lock dec outsl xor (bad) ljmp (bad) sub call scas mov mov mov dec imul and sub push xchg xor mov mov stos mov fwait int mov mov jb fsubl (bad) testb repnz push in decb mov (bad) xor leave mov xchg int stc add icebp mov test sbb fisttp fstpt xchg pop scas cmp lret roll pop (bad) mov push popf jmp in ds add mov in dec out inc fsts dec push pop aad xchg neg mov inc push arpl lret sbb pop pusha cmpsl cld enter xchg mov and and shrl adc fucomp add jb cld pop pusha mov xor adc mov enter mov out cmc push pusha jo mov (bad) je stos dec sbb outsb xchg add pop aam pop lods mov ret jae sbb mov mov sbb adc jp movsl inc jb mov popf xchg dec aas popa xchg (bad) dec loop es inc into fsts push cmp repnz insl sahf imul scas pop xchg lret mov cmp inc jp stos ja nop stc inc lahf rolb test cmp xchg inc div mov cmpsb xlat xor arpl add outsl xchg mov adc cmp std hlt cwtl clc mov push pop decb xorb add fs ja inc sbb xor mov mov xchg pop cmp cmp jb mov mov push lcall push inc inc icebp adc outsl sub mov fdivs inc hlt (bad) movb js std data16 lcall fiadd rorl xorb aas cmp rclb dec sub and adc jle mov test add add add daa push movsl fstl dec js push fldcw inc pop or add mov push jge inc jmp pop mov sbb std adc sbb push xor cmpsb int (bad) xchg in mov jmp or pop sbb lea sbb jp cltd and adc jg inc shlb cmp ret cmp inc inc frstor fisttpll mov jecxz mov mov addb pop sub xor repnz and pop jg imul xor repnz mov xchg dec (bad) test xor test sti sbb ret rol mov sbb sbb inc sbb push pop aas stos adc mov out leave pop rcrb jnp (bad) cmp pop je xchg enter and enter loop (bad) fldenv xor xchg std (bad) stc fwait or cltd divl cmp cld das pop cmp popa cmc mov fidivrl inc loopne nop (bad) mov cli call jae bound outsl inc or and sbb aas das stos push lods nop cmp out xchg jno nop xor fmul inc lock pop cli push popa imul arpl dec sti divl sub aaa icebp adc scas cmp aam sarl loope add (bad) jne shl loopne aas sbb dec inc hlt adc dec mov sub (bad) xor int3 mov cltd and cld inc inc (bad) mov ja lea pop lahf jbe push repnz loop ja iret mov cltd jb rcr and jle pop pop cmpsb mov dec inc jge stc dec mov cmp mov popf in test adc pop fisttpl mov xchg lds mov out (bad) (bad) or jnp aas and add xchg mov xchg mov add and inc cmpsl sub cmovs cmp rcrb xchg fstpt pop inc mov xchg (bad) xor sub pop fwait test test loope sbb mov xchg and (bad) push sarl out ds mov js sub gs jnp jb jecxz popa mov (bad) xlat adc xchg loop dec pop mov fs mov pop scas sahf push (bad) or sbb fwait ret enter aam pop push dec lds mov mov cmpsl inc fs xchg inc inc pushf xor les iret sbb cmc xlat fimull in test xlat add jle movsb in or sbb popf pop jmp mov add cmpsl mov pop lods dec and pop jecxz pop mov xlat hlt das addr16 sbb xor inc pop pop sbb lods or mov movsb mov aaa adc push movsl int jb scas mov push mov arpl sbb mov bound jnp das mov push pop jns lret stos fcmovbe outsl mov sub pop movsl sar stos in mov cmp (bad) int cltd dec daa rclb scas push push jp stos adc out aas xchg xchg lcall jae cltd jle leave sbb cmpsl sbbl jp add repz gs push pop (bad) jl repnz scas je icebp adc call and imul mov sub orl test push cltd xchg mov cli lods stos cmpsl movsl fidivl pusha pop push imull out adc jmp movsb pop into jmp mov test xor (bad) in mov loop sahf lret test jns (bad) inc out sub cmp dec mov jnp xchg das jmp push mov mov (bad) stc repnz xchg rolb xchg sbb jbe sub push adc in arpl es in dec sahf out cmpb inc in (bad) lret popf xchg jns and push loop dec call cmp (bad) jno add lock mov movsl cmp movsl notb std xor nop xchg dec scas push addr16 cs pushf push mov test in add sti cmp pop movsl pop add mov dec movsl inc add push add inc or adc sbb push clc xchg (bad) es cmp stc sbb mov xor xor nop adc ret dec add sub sbb lods and jbe je adc inc jecxz icebp imul add mov test loope push mov xor cmp xchg das mov fldl2e dec dec (bad) enter or imul mov and pop movsb ja in dec adc sub or jle loope in mov pop inc ds repz roll add push push loopne cmpsb or xor xor cmp add bound inc repz xlat jb nopl xor jmp fidivrl scas push add xchg fist in sbb mov and jmp test dec lock lea outsl jne xchg fidivl and xor ja out dec subb out or xor ds lock int3 adc xchg cwtl pop and stc cmpsb xchg loope cwtl mov push mov insl sahf or sub cmp inc mov dec aaa test scas cli fcmovb in dec je push in clc inc cmp push mov (bad) xchg repz aaa cltd mov cmp pop shrb pop sub jo push sub mov fmul orb repz or cmpsl movsl inc out and clc sbb cmc add cwtl and jns aaa out add xchg out into scas mov mov xchg jp cltd jb push ja fsubrp mov xor sarb xchg push movsb pop lahf outsb mov sub cmc cmc mov imul andb jnp fnop mov cmp add test jns jge (bad) fdivs dec mov cltd and mov fist int3 outsb call adc cmp pushf push mov pop ja and fbstp movsl xchg inc (bad) jae data16 (bad) lods imul push or out mov push mov jo,pn aam js xchg cmp push or out ffree pop adc mov lods xchg popa sbb pop push scas mov popa repnz cmpsb cmp pop loopne sbb iret add out mov pusha pushf insb int and adc cmp inc jno cltd sbb add fidivrl sbb mov push inc clc or ja pop jo mov in push dec rclb adc sub inc add pop out lret mov mov pushf mov sbb xor stos and mov jae or push sub cmp sub add outsl std sar lock dec and mov jmp call mov jecxz sti jmp mov test xlat add mov jecxz sbb repnz adc icebp insl data16 std aas dec jno scas jmp rolb and subl cltd cmp outsl jnp jno xor aaa pop int repnz fildll loop js inc pop scas cmp add mov mov daa fs sbb mov push push mov ss data16 movsb mov mov jns stc cmp lds mov push test pop dec and push push mov jnp jns cmp inc cmp das pop and dec (bad) int mov call push push es and (bad) jbe mov push push jmp add in lret xchg jb mul fiaddl je pushf inc cmp mov or push leave mov inc fcompl lods (bad) int mov sahf inc nop sti xor insl aad jl dec sbb mov jns mov iret in dec mov mov jne push notl (bad) fldcw mov mov jle adc jo test sub and mov add fistpll movsl cli call jp mov mov xchg dec pop (bad) mov mov imul mov push ret inc gs add or push mov inc sbb push scas jne jo xchg sbb pusha and js xchg pop (bad) or mov mov xchg or add in sbb pop cmp and or call push sub sbb add outsb xlat push enter dec clc mov dec jge out test jmp sbb test lods gs and dec lock idiv push int3 fs inc sbb idiv jnp fisttpl jmp dec in arpl std push cmpsl subl mov cs mov xor loop inc lret add add lcall scas xchg push mov fldenv imul jno stos or push rcrl loope sbb mov add insb and push xchg jo sahf cmp into push push and dec inc inc and call sub outsb int outsl lock jno in aaa paddsw ret aaa jns or dec inc adc orb pop lds lock jle ja shrb sarb aad jnp mov sti test test arpl xor leave outsl cld call or cs ficomp fwait mov and movsb les xor and mov iret (bad) xlat scas xchg lea imul (bad) jg cltd jns inc sub rolb lods sahf push rorb pop lcall sub pop mov imul sub push lds in pop popf jne aad stos cmpsb add push dec mov ret xchg sahf ficomp int3 jp jbe mov mov and mov stos add cmp lods cmp repz ds adc cltd xor clc in das mov fwait stos pop addl jge sarw fcompl lea sub xchg (bad) jb loopne jae inc dec push push int xchg into loopne inc test imul mov sub in and mov jae pop (bad) mov sub dec jbe and (bad) rcll cmp lret pop jmp pop pop sbb sub add test ret mov jl inc push xchg jno mov push jmp addl data16 bound fwait add int3 and fiadd cli js leave or ret or pop adc lods fcomps test mov loope movsl sbb das out (bad) je fwait mov dec mov ficomp jno mov loope pop data16 popa pop xchg push jo mov mov mov hlt xchg dec jb sbb (bad) in inc jae outsb mov dec mov leave js mov xor pop fisttpll test mov mov aad nop fs inc aad sbb pop jg stc xor ret test sti xchg ret movb pop nop sarb push mov cmpsb sahf mov mov loopne mov push xchg int3 inc ss sbb scas ljmp (bad) dec inc cwtl dec jo jns pusha mov mov cmp jl mov rorb and pop mov fcmovne xor or sub mov dec call std cmp lods lock adcb xchg or xchg (bad) aam aad scas jb dec sahf mov mov dec adc iret jp pop and xor data16 addl or dec sbb (bad) mov xchg jle push pop sub or xor fisttpll cmpl push fs jecxz sbb cli sbb sub mov mov mov int aaa not int adc cmp je mov xor fmull out faddl popa jp movsl add sub in test mov mov sbb adc jnp das pop dec and xchg int3 leave xchg xor dec rcll popa sbb and push imul mov adc pop jo imull adc iret mov decl out dec inc test je inc mov repnz pop xchg lahf or lcall inc (bad) xor mov cmc (bad) shll fcmovnbe sub adcb or mov push sub mov out shlb ss (bad) addr16 mov fstpt xchg loope rolb pop popl dec popf adc aas (bad) xor xchg ficompl sub aaa fadd test jb inc jl and push daa incl and pop mov ds fdivrp push (bad) lcall jge push pop jnp sbb jnp popf xorl or (bad) out out cmp mov (bad) iret fwait in lret or mov test mov dec mov mov mov mov inc adc sub sub jne add lock lret outsb ljmp test enter movsb insb out nop sbb mov push sub out jno daa or jl insb mov xchg xlat mov andb iret cmp (bad) xor push xor adc sbbb mov push jo outsl lcall cmpsl push xchg mov imul insl jne or addr16 mov fsubrl xchg and dec cwtl outsl (bad) fistp jns xchg test scas jecxz jmp fsubp jmp cwtl adc inc (bad) aaa dec outsb mov mov pop pop sar fmuls movsl fildl mov cmp shll sti pop jle (bad) (bad) loopne ret test cwtl lcall push pop fcoml and fisubrl cld icebp and or inc movsl movb pop pop lds inc in loopne jmp jne fdivrl shrb test mov addr16 xchg sar dec jae insb and test cmp das rolb es mov mov mov mov (bad) mov jge push jmp hlt xchg int inc xchg and stos ds addl and mull rep cmpsl mov mov sbb adc jno popa (bad) inc mov cld movsb xor or lods orl mov jp into outsb jl sub xor (bad) divb pop cmp jbe les xlat bound mov jle js std sbb or mov mov sbb ljmp sub bound sbb adc lcall mov lret push jne mov pop cwtl inc and inc addr16 pop fcomi lret mov xor push xchg iret sti gs mov and xchg sbb push mov cmp jle insb jno or out loope jne repz movsb xchg jg or loope push rcrl into stc sahf stc (bad) jp add in adc call jb and test cmpsl or xor dec jmp or dec cmp jmp imul arpl fistl ret mov rcrb jo cmp pop pop sbb outsl ja ret adc loope sbb std add sahf sbb jb (bad) pop js (bad) test into test jmp repz sbbb fisubr xor jne fwait push fmull sub punpcklbw push cmp adc dec xchg callw hlt imul push cmpsl lret imul jo ret pop push popa (bad) call sub cld cltd and mov or stc mov adc add scas in push inc adc iret jno in (bad) out into cmp lret (bad) pop rorl (bad) dec lds sub popa ljmp out inc cmp (bad) lock push mov cmp mov dec enter cmpsb jbe mov inc cmc testl push add fstps mov pop ficoml and sub sbb xor cmp xchg fwait pop cmp xchg push and rorl rcrl fisubrl jecxz scas fwait lret imull sahf mov inc jl test nop xor cmp divb cs cmc mov xchg push loopne jns or repz lods sub test cmp lret inc popf inc jne pop orl lret sub jle push call (bad) aaa stos fwait dec stos imul inc and nop test ret pop xor mov push or sub popa (bad) in xor sbb roll xchg lret out jns lahf jae dec cmpsl dec imul jl cmp por sub xor movsl addr16 sbb cmpsb aaa (bad) fcompl (bad) mov clc fdivs clc arpl aam lods xor fcmovbe gs push in (bad) int3 lds mov les lret and sub mull das int and xorl lock out out mov test nop jb (bad) pop adc and movsb cmp xorl mov cmc pushf out (bad) sbb jb into mov call inc icebp jae or (bad) mov push mov pop arpl je xor aaa pushf cli push (bad) push add and cmp inc push cmpsb cld dec mov adc add inc jecxz or xlat ret ds add push pop data16 ret test fwait in aam add repnz sub mov repz mov add mov jae loopne xor lods jecxz pop stc dec adc dec adc cld adc mov jp xor add pop mov adc test (bad) je pop or and pop out leave xor push cmp and pop mov sbb jmp sbb lahf ror or out jne scas pop xor arpl test je lock mov sarl xor pop dec in test push jo cmp int jecxz aaa enter cmpsl mov inc and xchg aam das jg test inc mov mov push jge add add pop xchg pop add push cmp mov and adc push clc das ret daa mov dec push push cmp adc inc mov pop pop xchg xor out clc pop pusha lock lods mov imul xlat flds aam pop rcrl mov iret xchg xchg out fldcw jo ds and iret inc or addr16 loopne fwait cmp lods adc out sbb stc mov cld into dec add push sbb cmp and in jns jecxz div sahf popa dec mov pop mov insl addr16 int xchg fldt and lock xchg ret test std (bad) xlat jmp sbb aaa mov add adc popa in xchg mov and xchg gs adc jb les add sahf (bad) scas add stc mov inc popf xor xor inc (bad) adc jecxz adc xchg loopne push mov ds xor lahf js stos push adc and push xchg cwtl push xchg aam push or pop ja xor jb pop and ljmp lea mov rorl mov loope and mov push mov test pop fucomp lahf loopne in sub lret jecxz or push popf jae ficoml idivb cs lods ret lock push cmp push pop fimul (bad) sub out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg jg sar aad or cs push add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add jp add add or or add or add add add pop or add add mull add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add cmp push js in xlat arpl mov insb (bad) ja fisttpl mov (bad) popw fistpll adc shl add pushf add in shlb cwtl enter sbb sti mov mov dec icebp inc push popf out arpl ljmp das cmc cmp pop sbb xchg xor jge in xor sub pop jl fdivs fisubrl fbstp test add jbe mov jp jo test out mov inc sbb mov sub jle push rclb out fldt test pop in pop lds loop push xor (bad) outsb inc hlt scas pop inc (bad) std daa ja stc imul imul cld fistpl iretw ret mov or imul inc mov fisubl or sbb out and scas pop or xchg stos sti lods fistpll fcomi pop sub push mov lret cmp cli mov and or or mov pop mov or sub daa mov cli inc cmp (bad) push jns mov adc stos hlt dec pushf nop push pop std in push aam xchg push mov jb outsb fldl add or push clc xchg sub mov lock fsts push jnp dec lret outsl sub shr mov dec fiadd ret rcr adc ss add mov mov pop xor es aam xchg xchg cli ja insb dec mov mov andb pop push cmp lcall inc mov rcr cmp cmpl in imul push mov shrb imul sahf popf jg lods mov xlat bound mov xchg inc testb mov and andl pushf dec xchg out (bad) aaa or mov shlb nop fldl or mov fist adcl dec arpl pushf cmpsl fisttpl sbb mov iret repz or xlat adc dec int3 test cmp xor (bad) iret stc icebp mov pop jmp iret je iret push rcll lds dec sub push hlt popf movsb stos sub das jns pop lret jno add add daa sub mov mov cld adc pop outsb in lahf push cmp cmp jle shll mov lods mov lds les aad aaa cwtl ret cmp in in outsl jbe insl out test jne,pn cmp push mov ficom lock dec test insb pop dec sbb (bad) scas hlt mov hlt push ss orl movsl outsl cmp mov shl pushl fild aad call sbb jns or add mov pusha lea std inc cmp mov or out into aad outsb mov mov (bad) fsubrp push negb cli cli fwait cmp cmpl ljmp test dec xor and and push push fnsave inc jnp pop (bad) jae dec mov push enter xchg jbe arpl jg out mov cltd ret rcrb sub sbb sub fidivr out xor stos insl jae xchg push pop xchg push test jnp inc inc cmc fisttpll xchg mov decl in inc mov in frndint inc pushf (bad) or cmp test mov xlat xor jmp sbb out cmp inc insl cmp call aas fldenv rcrb imul test mov and sub shrl cmpsl loope,pn and or sub hlt mov pushf shll orl mov xchg cs scas data16 push xchg test jmp js (bad) mov out add inc cmp jbe push mov cld movsl mov pop scas and mov jbe xchg mov inc lret push stc pop cld mov add test cmpsb loopne adc or es jle (bad) mov fsubrp loop pop xor add imul stc call lret aaa cmpl les xchg xchg pop dec imul pop pop jp jecxz divl jmp in cmp popa xor aaa adc cs jns incb jmp push in mov add sub adc dec js jb popf xor lcall int lret push call bound mov push dec add dec test cltd push popf jno pop fs sub sti mov pop mov aas lahf arpl dec sbb mov enter jg cmp nop dec inc dec pushf outsb clc jg and ret mov into add dec arpl jp and jecxz lret pop push or jp inc into rcll ret mov push xchg push pop inc lcall call sub jg repnz fst dec dec stos jae sbb popf repnz aas pushf stos lock dec js sbb cltd test push mov ret maskmovq negl rcrb inc sub mov xor nop ffreep dec mov and aas iret inc sarb roll (bad) or and sub in pop les and repz cmp xchg aam pop dec push and cltd and stos adc lds repz inc jae ds fs ljmp mov xchg dec int insl movsl or inc jno jg or dec xor (bad) into out imul in mov fiaddl sti xchg push mov cmp sarb xchg movsl xchg std jno cmp fdivr dec out pop int3 adc mov lea adc push (bad) sbb addr16 mov push jge push add in iret cmp (bad) aas inc ss xorl incb lds jge adc cmp movsl and push int3 rcll fmul mov stos ljmp cmp fnstenv add into outsl hlt push stc dec outsl int fwait jne inc imull or xchg mov jae pop inc cmp jne insl xor sub add cmp add push mov stos lcall jnp lret js enter idivl push mov mov sarl pop dec hlt mov popa or jae stos adc je and (bad) xor inc adc out call shrb je push test push clc shlb test or insl aaa notb xlat dec inc jg adc pop push dec inc mov int3 xlat mov popa mov and outsl stos nop stos scas movsl jg loope das (bad) or jecxz ret lods adc loopne or cmc stos int3 imul jns xor xor and sbb mov mov push daa jp ret ljmp jmp (bad) into or jnp sub stos fstpt mov push add mov xor sbb xchg fistp and cmp clc (bad) sub dec loopne xchg stc sbb pusha pusha adc cmp adc mov push xchg dec lret xchg pop mov and mov loopne aam movsb cmp mov addr16 xor icebp andl imul or push inc inc mov fisub sar or out ss lods mov mov jmp pop jne rorl mov sub (bad) ja xchg cmpsl lret sti mov cmp nop aas stos ljmp or push adc and or jg adc mov sbb adc imul add sahf shr push fisttpll pop cltd adc fisttpll xlat pop push sub xchg cmp mov cmpsb insl stos rorb push insb lods jne mov jno cmp call sbb lret push sti xchg jge mov iret adc adc pop dec xor jb es hlt inc jge pmaxub lds cmp jae fldenv int3 cmp dec push push adc mov mov cli rorl dec xchg xchg lret sti std mov mov jl andl (bad) test popa (bad) (bad) lret rorl sub add mov insl cmpsb movsb push inc xlat add xchg push mov test pop mov mov dec shrb jg movsl sub mov sbb cmp push lds mov push mov cltd dec outsb fisttpl faddl enter xchg xor jno stos popf sbb int adc sub mov into push int mov mov pop sbb popa fs cmpsl and jl sub sbb mov mov std rorl jecxz pop jb pop (bad) daa out push push pop roll mov lret scas push xor xor push jmp rolb ss in fldenv hlt or icebp pop lods lret loope popa mov mov insb fnstenv shrl idiv sub repnz jo lcall xchg repnz xchg add in mov push out outsb repnz mov lods ss aaa cs fisubrl pop jo mov rclb testb dec adc aam add adc out es mov (bad) mov mov pop push stos add leave mov lahf add pop push (bad) das cmp test fucomip imul or in or pop sub mov mov or rcr out sbb add pop jnp add xor neg orb lods add ss adc xor in mov pop xor jp xchg in fdiv jns mov xor or jle jecxz inc (bad) cmp loopne adc jg ja bound xchg push test arpl popa pop fwait loopne int3 jae shll mov dec aas push add mov les sbb add ljmp fisttpl popw ret es (bad) fcomps test loop imul inc mov imul adc jp (bad) jbe into adc jo inc pusha loope int3 mov pusha (bad) mov pop jmp mov inc pop pop into inc std dec (bad) clc xchg inc adc jb push notl xor in jge adc sub fildll jo push add call mov or sarb fidivrl jb mov lahf push pushf and cltd in cli ss ret and or lret dec sub adc flds (bad) pusha daa (bad) mov int3 jns out pop dec out inc popf dec xchg call enter aad fimul pop sahf xor std inc jle sub scas popf mov or in mov cwtl popl jo mov mov repz jno out stc inc add push outsl scas sbb and fs dec js add rcrb popf adc arpl popa (bad) hlt sbb test (bad) jo mov sbb adc imul stc inc jno xchg repnz movsl popf call xor xchg pop dec fmull sti mov xchg gs adcl hlt sbb sub xchg jecxz rclb das ds sahf shl xchg jnp test pop insb inc dec xor sbb (bad) loopne fdivl push sbb ja jb jg stc (bad) in std dec les push mov cmpsb xchg xchg sub pop inc test jno mov cmc dec cmpl cmp inc std push lret xlat aad in and mov sbb ja in push (bad) stc sub mov pop lock add adc aam mov mov aaa and and fiadd or jp gs daa adc stc out cmp data16 dec arpl cmp fstpl (bad) aaa adc and scas in lcall ja xor daa cltd hlt mov mov (bad) jge push stc xor push int pushf (bad) xchg popf ljmp aas icebp imul adc xorl add pop add cmc loop hlt sbb and jno orl xchg popf lret lcall enter mov jp rcrl push es mov xchg jno sbb inc push shrb mov inc mov loop insl lods nop ja push mov dec adc inc adc pushf inc pop push test and outsb jecxz addr16 cli test sti imul mov jge call ds adc fidivl sbb sub mov lock ret or mov inc inc mov stos fldl leave cltd lcall jl pop sahf xor inc hlt dec xchg clc mov les insl (bad) stc daa fidivr (bad) cli repz push lcall test outsb shl add (bad) sub xchg or cmpsb adc cmpl das dec jb sub pop stos arpl pushw std aaa std sbb adc push or mov sub cmpsl jns out dec xchg and pushf cmp and fildll leave shlb rcrl ja mov or daa cs cmp das jmp movsl xor popa out movsb jno mov or lods out jo adc enter cmp jecxz cmp add hlt dec push push cmp pop stos inc mov add stos sahf add dec bound mov mov push (bad) push adc pusha xchg in fiaddl and xor das inc and aad sti push lahf adc pusha dec mov pushf jbe shl sbb (bad) (bad) icebp adc adc shrb xchg mov dec xchg sub in inc push pop xchg imul das (bad) (bad) jbe pop mov pusha xorb or fmul out jne ja and jb dec adc repnz jo sub cltd jmp cmp (bad) or xchg push test cmc xor mov cmc ja or mov (bad) pop push aaa push and dec inc mov scas andl inc pop jp loope ss mov lret sbb xor rclb cmc mov cld imul push push push adc cmp std out dec and xchg in sbb inc add xor fiadd clc cmp and mov pop sbb cs adc pop mov push jge jae xchg outsb inc in or inc push mov adcb out sbb pop cmpsl mov aaa or lock mov icebp sahf mov push pop pop push fidivrl lods pop mov cltd stos lahf or repz loopne jno rcr jo sub insl sbb xchg sbb addr16 pop shl ficom fsubr dec adcl jbe xlat pop sbb dec mov into in repnz pop stc push jmp nop dec or or sbb adc popa mov cs hlt adc cmp mov jb cmp notb mov add mov jb cmc insb lea pushf push int xchg ret icebp push out jmp inc aas shrl xchg add xchg jno or cmpl aam je cltd pop add lcall mov lahf push (bad) pushf (bad) jl shrl push inc in arpl mov and lea ljmp rcrb mov push add aas dec add cmc mov mov sbb push push and into add mov in xor test jge mov mov aaa or cmp jno pop fnstsw mov jg scas inc xchg add mov mov aas out rcrl fadd jmp dec cmp lock andl xor (bad) ss fstl bound sbb mov push mov mov add insl sub dec xor lcall and enter ret insl lock ror xor dec lea pop pop gs mov insb pop sub and sub mov and cmp inc sbb out jmp inc cmc cmp and daa jb or daa sbb pop insb xchg or ret push movsb xor or inc lock dec syscall imul sarb pop mov pop xor or cmp aaa adc fsub (bad) shl mov fnstenv adc cs jg iret stos lret jnp sbb mov fstps jge mov (bad) xlat fdivrl test adc out cltd inc lds mov mov scas mov sarb ss sbb sbb cmpsl stos js shrl aas int3 test fldl jbe xchg fistl push fs sbb and cmp pop push in or ja adc xor cmp push and aas cmp scas xorl movsb mov jns jns lds sub pushf push aas mov jb jmp dec jge adcl push sub push js sub jno jns sbb dec xchg add vcomiss push std jns xor lea mov loope cmp mov iret es fwait pop pop and aad in mov dec push cmp mov lahf lret pop push cmp mov push pop jbe or sub mov inc dec in or xor cwtl mov mov test repnz dec jle push sub mov cmpsb push call cmp mov insl les rep inc mov push xchg adc mov imul or je mov ljmp pop sbb mov out ljmp push pop (bad) jb inc sbb das adc shr in mov cmpsb fs jle dec int mov jmp push xor lret dec xlat daa mov scas outsl pop pop and ljmp outsb (bad) sbb pop mov loopne int3 pushf pop pop pushf lea data16 and sbb xor sbb shrb mov dec movl je stc inc outsl pop xchg xor mov scas (bad) xor sbbl xchg rorb insl (bad) jo xchg cltd push dec dec imul jge movb mov (bad) cltd leave cmp out shll imul jns or mov scas (bad) sbb sbb xor ss sub and fisubr daa adc imul sub xor cmp mov ret cmp imul sbb sarl pop or sbb insb rclb fs cwtl inc mov dec clc jnp pop popa push or and mov repz jbe xor hlt mov dec lods adc cwtl push xchg out aam jle aaa addr16 inc int3 inc cmpsl pop and fisttpl cmpsb inc rcrl mov sbb scas pop jne lods popf xchg cmp inc popf add adc and shl faddl mov pop lods leave psubb mov xchg jge mov mov cmp xor mov adc movb imul jmp pusha xor mov stos clc popf jne adc dec ret (bad) xchg jp add jecxz or stos mov dec push sub adc xchg push push out push add leave lea xchg testl daa mull cmc adc in in push loop cmp fadd mov out aam pop and sub sbb mov dec mov fwait sub add cmp inc and push fcompp dec hlt pop in or movsb enter in xchg sahf shll mov idivl mov fistpl imul imul test push out pop call cmp cmp inc jecxz jbe cld and jbe popf lcall in outsb xchg xor xlat dec nop iret shl das ja xchg imul mov add lock jb stc xor repz adc test insb or dec sti xor xlat in icebp mov xchg sbbb pop or push pop out jl (bad) mov sbb test mov dec std cmp pop mov ret imul stos mov je aas mov xlat nop loop push pop or add divl es mov adc (bad) inc add scas stos mov mov dec inc mov fcmovnu jae pop cmpsb out sub jnp,pn (bad) cld adc jbe sub cltd xor push add jecxz add push and mov sbb mov lahf jbe jecxz or and adc icebp pop sub push pop les adc mov outsb mov fsubs aas fldt mov in xchg and xchg mov cmpsl add (bad) or rcrb xor xor js data16 bound add imul outsb fmuls scas in pop fld mov lea loope inc cmpsb push aaa out push ds pusha lcall (bad) pop outsb shrb fiaddl icebp mov lret lcall cmp lahf in mov mov (bad) aas mov cltd les add add bnd sahf out mov mov aad xor (bad) aaa mov adc jp sbb (bad) add loope add aad lds or enter imul aam push inc int insl sbb stc cltd jbe pusha popa out jae push push jg sbb mov lds sbb cmp iret mov mov push test dec push xchg pop data16 cmp pop jg scas jae sbb inc inc gs dec add fisubr mov sahf xchg cmp xchg lret add lock mov add cmp pop int mov cltd jecxz mov pop cmp mov or out mov dec xchg inc mov (bad) in push icebp adc addl adc rorb mov pop in sub mov jae movsb add (bad) (bad) push fldenv sbb push cmpl adc mov lods insb stc xorps mov dec adcb das dec vldmxcsr cs mov or cmpsl std jp dec (bad) fmuls jns pop sub ret pop les add inc das loopne ljmp adc xchg pop push call sub bnd les aam lods icebp aad xchg lcall fdivr ds jae jle add out repz daa imul in pop scas outsb mov mov mov es dec scas and mov pushf mov pop lahf sub das aas jb xor inc repnz push aas aam dec jae adc mov leave mov inc and xchg into xchg or (bad) in lret and adc push cmp lret movsl and xor js or jnp (bad) pop inc xor jl pop mov sub fs icebp sahf outsl push push jp mov or or das mov fldt fs and jo insl arpl test (bad) push scas add call mov inc cmp sbb xchg out xchg fcmovnbe movntsd cmp dec bound push aam lahf pop dec scas pop xchg (bad) arpl cld add lahf aam or pop mov imul movsl movsb jle cltd jp in (bad) shlb lock inc fbld arpl jne stos adc out sub iret sbb int adc in stos mov jl mov xchg mov repnz inc (bad) bound cld xor xchg loop or es out imul jp (bad) pusha loopne outsl lea jl fcmovne arpl mov cld mov movsl aas inc adc mov xor into sbb movsb insl mov lds xchg clc push notb lds push das mov dec (bad) fwait pop lea movsb jle sbb gs adc push rcrb sbb xor pop mov hlt adc sub inc mov out sahf push or pop fsubrs stos sub jae mov jle call pop add out or push sbb loopne mov mov jg push push je push jmp aaa mov clc xor push xchg inc mov pushf dec insl dec popf arpl popa enter sbb mov shll mov cltd inc movsl push dec gs sub xor test add jne insl loope mov cmp lea stc (bad) cmp sahf sub mov xchg mov dec xchg dec lea sbb loopne jl sub cltd roll imul jp jnp pop rep sbb iret in sbb lods outsl dec gs cmpsb cmc jmp mov inc (bad) xor test jge bound (bad) fcomi cmp es ret stc cmp subb iret lods or fsubrs jo bnd sbb cmc int jle dec sub les pushf int sbb dec jbe cmp mov iret mov mov and loopne lea add xor ret pop dec cmp or in je sbb mov and es daa scas or lods dec in shl out jno fdivrl push fwait lret insl aam xor std jns test ret sbb add mov and jnp ds and (bad) mov pop test shll out in and push nop bound outsb lock mov (bad) mov jnp movsl lret hlt daa push cmp shr loopne xchg or (bad) jo inc dec (bad) mov xchg jo xchg pop jge pop or test loop xchg inc mov cs jl or nop pop pop inc mov nop bound dec push pop or arpl lcall add xchg data16 insl push dec fwait sbb dec xchg (bad) mov roll push aaa imul xchg adc fidivrl inc pop ja ss pop push rolb mov (bad) in (bad) fisubrl aaa xor (bad) mov mov ja dec mov outsl loopne test pop leave sub dec add notl leave adc mov mov jmp xchg sub (bad) js cltd je sub call adc mov (bad) fcmovnb mov or ret cmp les jnp push fdivrl and lods subps cmp out (bad) cli inc iret negb scas popf lock sbb and cmp hlt mov push in fucom fsubs popa add shrb scas mov inc adc or inc xor enter loopne loopne pusha xchg loope mov in in jbe pop rcr xlat lds lea lahf sbb mov stc adc in test pop cmc jge daa (bad) cmp inc fpatan adc xor lcall (bad) dec mov repz or stc addl movsl cmp mov les sub test les test lods (bad) out inc into mov adc cmpsb jb jmp out pop mov (bad) loope bound and mov adc pop fisubrl inc and xor roll jmp mov call xchg rclb (bad) jg out sbb popf mov aad jae mov push into fcom inc cld xchg (bad) test xchg and adc (bad) dec xchg mov mov cmpsl fidiv push shll and ss leave push xor jae xchg stos dec hlt (bad) imul inc out or xor dec and inc mov adc movsl jae int call push dec push push mov negl decl sub mov int sbb push pushf rorl aad xchg lock fwait jnp mov fsubr cmp fwait push xor imulb in movb insb inc cmpsl lods outsb repnz sub mov jecxz cmpsb push rcl std shlb (bad) or xchg outsb ret dec mov push mov and (bad) adc lahf mov pop std dec aad and dec lods (bad) addr16 mov sub xor mov fs mov jnp incl add mov cltd cli push cmp loopne xchg push lahf xor insl xchg mov cld hlt insl lea decb adc cs mov xor inc sub sbb andl cmpsb inc or and push mov mov int3 mov mov add div adc cmp rcll and fadds aad sti out push call aam mov dec mov mov rorb cmp out mov mov (bad) inc clc ret jge,pn push sahf push popa push stos push push and push nop (bad) lahf pop push mov add dec push dec adc popa and outsl insb adc fsts lods nop mov pop es std inc inc lret call pop in cmpl sti sub sbb mov pop mov pop xchg cld adc jl pop adc and sahf sub push add pushf jne aam mov mov push xchg movsl iret pop sbb push jne fsubrl mov pop test iret mov push das int cltd cmpsb incb test and xor jl outsl cmpsl cmp out cmpsb jle pushf popa mov pop fiaddl loope rorb cli pop xchg adc insb xor xlat xchg jns xor out cmp xchg sub rcll pop movsl fsubl push or adc mov lds sub push das gs fadd in (bad) push adc gs mov frstor mov cmpsb and aaa sub icebp rcll inc inc aam divb and jg ficom mov fcmovb push xorl sar jmp dec lret in je and pop imul in imul lcall popa (bad) daa repz fistl ja jl or adc or fadd mov loope jle mov cmp sbb pop jo aas jle (bad) fcoms ret fcomip daa in fisubl sbb cmc sarl pop mov xor lods mov dec mov sbb adc iret pop bound loop mov lret xor lods movsb cld (bad) jmp mov (bad) insl xchg inc jnp cli arpl scas lods mov sub lcall aaa or or test dec sbb pop add leave lret arpl imul push dec cld rcr mov pushf add je sub pusha mov sbb adc and cmp push out jns dec mov add add mov xor or mov aad mov inc inc mov inc xchg out push in (bad) std adc inc mov push sbb push gs sub data16 sub xlat shrb addl jae cmpsb mov std mov or push fstpl stos push sbb jmp push ss mov and mov inc outsb test (bad) xor ret mov xchg into pop fmul dec jae hlt cmp jl dec push mov in jns cmpsb xchg mov pop cwtl (bad) aas sub mov inc push cmpsw dec hlt orl mov jbe xchg mov out inc inc mov int3 jne lahf jbe lods aam mov pop ja or cmp push cmp mov call pop test fcoms jno (bad) fiaddl aad pop inc fsubl cmp adc sbb sub vmovups pop cltd sub mov lahf mov hlt mov cs fs or cld fcmovnbe xor pushf hlt pop dec aas sbb dec sbb jne in inc or andb fild lahf out stos sub dec pop mov mov and bound stos inc sub jo scas in sbb adc pop aas ror jle popa or mov mov test pop lret aam jnp or mov gs shl (bad) inc mov ret mov push mov arpl lock sub std mov add je pop adc loope pop (bad) cwtl jmp pop aad mov pusha mov add loope inc inc scas sub insb dec push add mov adc inc push (bad) push pop xchg pusha lods gs mov adc push fs into sub into sbb sbb jg scas bound mov and sar mov mov mov sub mov dec pop sbb sub movsl lcall int int3 jecxz adc rsqrtps sub xor lcall add jb lret xchg add shr es mov inc pop and and push ja daa das call add dec cmpsl inc pop xchg movsl and (bad) dec cmp jmp fidivr jnp movsl inc sbb hlt xchg mov loop or repz ss jp xor mov inc (bad) lock lret add fldenv lods mov mov mov lcall cvtps2pi jl jmp push mov adc jg addr16 sbb cld stos ja aam cmp mov repnz insl adc jle adc out int3 jg,pt sub cwtl and scas mov mov (bad) jno sub jecxz sub fidiv adc mov inc add push pushl sbb push xchg scas push hlt clc and cmp les iret fdivrl lret loope cli xchg mov lods ja add adc scas jmp out fsubrp je stc and push pop dec xor adc jnp add cli dec sub jno sbb xor lock lea jmp sbb aad xchg (bad) sbb gs jae sub lea sbb jg leave pop (bad) cs fsubr into jo or popf xor adc pop aaa xor dec push cmpl push ja cmpsb add rorl jbe das pop xor xor pop mov (bad) xor pusha jo xchg sub dec mov out add inc lcall pop lret xor xor pop in (bad) mov sub pop test sti xlat mov sub sub cmp (bad) mov cld fisubrl push push inc pop stos add iret xchg add cli pop jo mov push pop aam lret cli cmp xchg out mov push ja decb sub pop fistl adc vmovapd call (bad) push aam dec sbbl dec cmp jae out loopne (bad) jmp mov push lret jge mov jp or out xchg add les in mov mov inc cmp push out (bad) fadd in fidiv insb ja in (bad) cmc out xlat xor fcmovu dec lret js mov das flds jno idivb mov xor jnp icebp push iret add sti mov or pop fs out testl inc push xchg or loop (bad) (bad) mov int3 or (bad) (bad) add (bad) mov pop pop sbb push jo pop inc xchg dec and je test loopne jle es aas daa jne or imul scas add movsl sub in sarl push lods and mov pop cmc inc sub fidivr add lcall sub mov mov jbe mov cltd out das aaa inc cli ds add aaa aam xchg cmpsb xor and jp fisub add add imul icebp mov repz in mov shrl pop out ljmp mov dec and push js out imul popa daa (bad) out jbe mov push xor mov pop add arpl cmp xor inc or loop mov mov xchg mov stos cs gs jb add jg pop jo lods sub inc jnp addr16 fwait sbb ffree sbb cmp sbb pushf jae pop push nop dec jmp cmc cmp int insl fucomp bswap loope mov push movsl repz mov aas or gs and mov pop push xchg scas rclb or out pop int add push sub adc ja inc dec test mov lahf dec inc cmpsb mov scas mov jl dec fldl fmuls jnp es xor imul lds gs stos mov sub in pop arpl sub ds fild add icebp jmp movsb lds bound test mov jbe pusha mov adc push dec or xchg pusha mov dec pop mov mov mov pusha inc in cwtl fucom adc jle mov mov data16 out pop clc arpl xchg xor lods add jl xor dec cmp adc cli push cmp popf pusha mov aad movsb inc pop inc inc stos pop lahf (bad) jmp lock mov test xchg (bad) xor xchg xor mov mov movsb and mov push mov das inc scas push mov cmc repnz cli sub gs inc ljmp outsb add shl cs dec and mov jp lods xchg lea inc outsl int3 outsl cltd repz dec fs (bad) jae into and fdivl popf and sbb out xchg push sti push std xchg stc mov es les popf fildll repz jmp or push (bad) in outsl or or sar hlt lahf cmpsb sbb sub mov push pop xor mov pop adc adc push pop cmp fnsave push mov jnp jl push xchg jecxz aas sbb mov ljmp push xor adc out or sub mov in cld scas xor jmp fldcw mov cwtl lahf repnz jno mov test jl clc clc jnp faddl mov out cmp and stos and scas jp and mov pusha xor sti push push popf imul or dec fs jle add lock mov cs jecxz inc lret xor mov mov insl mov (bad) out insb rep xchg loop rorl adc (bad) or adcl mov pushf and rorl imul add clc dec outsb fnstenv stos sbb mov (bad) in bound sub cwtl jp cmpsb cld mov mov out mov mov add subl inc sbb or pop js pop pop jecxz nop sub pop mov rorl push push insl xor pop icebp pusha lods push xchg and dec and lock pop or add test gs jge push out in movsl dec pop and pop and loop je and xchg xchg (bad) aam inc add xchg push inc jne sub aad adc loop add xor push cli (bad) in test jno push lcall addr16 fsubrs iret dec inc daa sub mov and xor int rorl ja fldcw js lds movsl mov into sub xor outsb dec jns mov dec rclb cltd pop pop cwtl xchg cmp fwait mov add dec adc lret sbb (bad) das fsubs pop sbb (bad) ret xor test adc (bad) jne ja mov sarb sbb (bad) mov adc sub sub es sbb jne jns aad (bad) fildl cmp push sahf nop mov push sub ret xor (bad) aam imul es addr16 std pop fldt inc mov xchg sub scas sbb mov mov mov repnz (bad) push pop je mov int into and sbb add movl jnp jae and pop jge xchg sbb xor movsb mov inc das sub sbb and dec jae mov popa push lret (bad) push sub mov loope mov add and sbb movsb add jne ljmp add rcl hlt dec or add inc pop cmp cwtl pusha xchg out rcrl push jl stos int3 cmpsb into jl (bad) sahf inc aam aad addr16 adc adc fdivrl xchg pop rol pop les add fnsave push test aam adc sub out push loop mov repz lret cmc sub add mov (bad) adc xlat push mov or adc ss outsl lahf add rol dec cli mov inc loope mov daa outsb sbb cmp sbb lds and mov mov or sub adc jns adc push pop mov jno adc xchg dec sarl dec or xchg dec ljmp mov xor ficoml jmp sbb aas and lfs jecxz dec stos enter ljmp lock fistp adc inc jl jl lds and outsb (bad) je pop mov jbe pop cmp xor inc add cltd jo ja popf test mov test mov into and mov test mov ds lret or cltd pushf sbb xchg je mov push mov nop dec jne jnp pop dec mov add mov cmpl adc inc sub xchg push mov pop xchg fld adc xor pop js sub repz adc adc outsl test stos imul rorb cmp sbb ret out into loope arpl sbb pop pop mov loope orb xor sbb xchg out mov sbb out subl lods movsl push (bad) pop test mov adc mov push push pushf xchg (bad) ds outsb lea pop mov rolb insb mov add rorl add lds scas pop div sti pop outsb ds xlat mov mov pop icebp add dec cmp mov js (bad) lods push add imul movsb xor push jmp test mov movsb push inc jbe pusha lret outsl out inc addr16 ljmp and sbb and inc in jge jb adc iret jne sub into fs test pop sub cmp in in sub xchg cltd (bad) sbb inc jmp jecxz push push xchg dec adcb fcmovne sub adc addr16 sub outsb xchg in mov stos stos xchg andb pop test add xchg pop mov mov pop call push jecxz in sub subl insb popa les add ficompl mov inc fwait jle jo repz xchg in jns inc ficom icebp jle xchg scas lret idivl enter push sub loop daa xchg mov and xchg out mov xchg inc pusha out (bad) in mov inc pop xchg fisubrl out stos ficomp inc push ret ret (bad) in mov jnp sti js mov movsl (bad) cmc sarb and outsb into outsb loopne fs mov inc (bad) iret pop cmpl daa dec aad pop cmp (bad) xor sti cmpl mov hlt add mov jno inc repnz cmp and lret sbb stc sbb (bad) push bound sbb pop (bad) scas test mov pusha sbb (bad) mov jp jp fdivp jp sti adc stos cmp aaa sub cmp adc clc mov je sbb and push and push je idivl repz mov in jp std pushf daa sar ret shrb cmpsb stc xchg push lock mov int xlat movsl jae outsb in cld add adc mov and fwait call orl sub adc sub shrb les xchg fbld xchg (bad) cld sbb ret push cwtl rolb cmc ret insl or or jecxz lea scas cmp jg,pt cld test loop xchg in xor (bad) shrb sbb push lahf in roll sbb add int3 xchg or aaa jp std push mov sub out rol push sbb fdivrl xorb sub xchg sub lods icebp repz and inc mov ljmp lret cmc and repnz fsts std nop mov repnz scas jne sbb mov push xor lea mov insl arpl dec pop mov testb clc mov stos lcall pop sub jl dec mov pusha fdivl jmp push jnp in js inc or cltd pcmpeqd jg jg inc cmpsl mov test leave dec bound std push das push mov in push aas cld sub mov stos mov dec xor dec mov outsb scas out pop cmc jbe xchg andl xchg sbb jne inc mov daa stos cmp push es (bad) mov cmp enter or aaa ret ret outsb xor mov push dec je leave adc notb sub nop xchg int add sahf push data16 mul mov jle mov sbb push push lds mov ljmp dec fdivl jle aas test addl push mov dec and shr mov mov imul cld ljmp pop jbe sub and sahf or lock push sahf movsb cbtw add dec jns mov aaa or loop inc dec xor lds loope rclb in int3 jl dec js sbb adc mov (bad) or hlt mov shr pop jae loopne popf or cmpb sub ficoml ljmp loopne inc sbb xor scas push in dec pop inc adc mov xor or dec cmp aas cmpsl pop inc sub xchg enter lret lcall sbb int (bad) fist fistpl in rolb push sub xor inc inc imul das int repnz sbb pop mov stos xchg pusha inc lahf xchg loope lret ljmp push leave dec stos fdivrl add inc adc repnz into and rcll jb pop (bad) shlb xchg sbb sub test push std adc iret jae mov push cmp imul aad loopne insl pop lret in andb (bad) dec xchg incl scas cltd mov (bad) inc inc data16 int3 stc sub int scas mov icebp pusha mov out pop mov rcr fwait or mov xor adc add psrad jb pusha enter or stc mov xchg xchg inc je cltd pop inc pop dec xchg aaa cmp sub push fistp mov sbb gs adcl jbe les popf xchg sub add adc or (bad) incb inc pop (bad) fiaddl lds mov and rclb aam lret ret leave insb fwait cmc jle jmp push sub add adc gs aam clc pop xor pusha test jp rclb or inc int sub cmp ds sarb jp sub ffree jg,pn xorl mov mov mov pushf (bad) push dec fnsave imul test sti scas mov decb jge arpl lea jp mov arpl dec jb mov arpl sub mov dec and push fmull fidiv fidivrl sbb lret cltd addr16 push cld or dec rorb js enter mov jmp xor mov jo fstpt pop cmp sub mov test pop lds xchg leave push inc fadds in push loop call lahf dec cmp push dec mov test imul add or das cwtl or mov rorl aad (bad) xchg in jl sahf adc scas sahf mov cmpsl rcl pop xchg dec mov push mov jp rolb xchg cmp (bad) clc cmp xchg shrb movsl pop fs int3 xchg xchg aas xor xchg repnz lods dec fcmovb out insb in mov aam lods jle mov jle xchg stos (bad) mov inc loope add inc mov pop sub loopne data16 mov xor test popf or push lret into (bad) out popl call (bad) adc fwait cwtl les sub div sub dec test dec add ljmp aaa jg lods les ret xchg ds jne aas dec ljmp mov push scas shll xchg xchg addl xchg add ret stos mov cs and lods xchg lock jl push cli sub inc adc push (bad) aam fs lock pop (bad) lret inc jl sub mov rclb inc je test push in xor aam js fistpll lahf (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret decl add aas rol and add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add ja add add or or add or add add add pop or add add mull add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add cmp push js in aam inc and fwait insl (bad) dec mov (bad) fistpl or adc add ja add jae adcb adcl mov sbb sti cld push inc mov push in fmull out add adc incb pinsrw inc pop or popa fwait cmp cwtl and imul aaa xor dec cmp push cmpsb jmp iret ds mov push inc push add xchg lods pop adc call psrld inc lcall inc imul xor lods adc add or adc inc in in (bad) xor mov sbb fldcw and mov push fisttpll ret cmpsl or jp dec and or test test push add pop sub inc test ja daa push inc xchg pushf dec loopne push test mov pop lods lret data16 subl mov mov jg lock push sub xor jns jle and ljmp push test daa rcrl cwtl scas (bad) ja stos adc movsb push pop cmpsl out mov pop jle idivb mov test and lods rorl andb adc ljmp push bound lret lahf xchg xchg mov test cmp add das ficom movsl xchg jmp inc push loopne shrb in add lret ret lods jb cltd pushf ja imul outsb sub or xor pop or and pusha jb adc add cmovle xchg push in push jnp test cmp cmpsb sub arpl enter and stos (bad) jle sbb int out and sub adc mov cmp int3 jle sub test lods or fcmovne dec inc cmpsb xchg lods (bad) pushf mov xchg fmuls push call push in pusha fisub xor adc (bad) sub pop test jbe mov lods es stc pop fcmovbe xchg leave cmpsb popa sti fs sbb sahf ror mov fdivl dec mov notl sub pusha shrl test and out or mov out mov inc test inc pusha (bad) fidiv or je enter pop add roll imul xchg imul fstpt sbb mov inc faddl sahf push or jmp shlb ljmp mov frstor ds ja (bad) rclb push xor pop std scas call push xchg jae (bad) hlt les pusha in lods pop cmpsl xchg push jg pop pop add dec xlat js or add repnz fistp stc test lock cltd add push call push fist addr16 mov sti push or int3 insw push leave mov xchg sbb inc gs mov mov jo pop mov sub movsl ss out in add (bad) xchg mov push dec sub mov push xor sbb dec out fidivrl push shrl (bad) fild jmp mov pop outsb cli or cmp xchg jae (bad) rol cli scas aaa (bad) xchg or or and push ret fmul jle jl add xchg rol mov scas fcompl push rorl bndldx or out push shl arpl sbb push jo mov push repnz fsubs pop xchg sub jns (bad) jb test inc pop adc and int3 lahf loop push test ja ja push cmpsw pop jae mov cmp fild (bad) dec cmpl sbb xchg in jmp (bad) push dec lcall xor arpl call and mov inc bound jns add xchg cld in mov call mov in decb mov stos dec cmp shll fmuls les jae lds sub insb mov addb mov clc jno jge in push ficomp or movsb xchg mov mov pop jno mov gs cli outsb pop lret outsl (bad) jnp mov popa pop call cli insl cmpsb jne jns ljmp add pop jle xchg sahf push xchg add scas xchg inc dec mov adc cmp (bad) pop hlt dec dec ss cmp pop mov pusha sbb mov imul dec jecxz fidiv and cmp pop adc mov sbbl fmuls int3 (bad) lods cmpsb sarl sub out or ss fiaddl push add xor out pop lea xor cmp pop js test xor outsl push push or call cmp sub push daa push mov scas xchg rcl inc lcall jg pop add addl ja leave lret push cmp add dec sbb adc push adc fcoms imul mov mov int repz jl sbb test andl movsb mov jg or pop dec in repz jp jl rcrb aad aas mov sub (bad) fdivrl and push cmpsb in insl test jns daa xlat pop mov pop repz mov lods cmpsb lea cmp push or sub cmp xchg push xchg ret mov sub or add mov inc xchg sbb fdivr push add or mov mov movsb xor daa cmp repnz xor arpl icebp mov (bad) mov mov in sbb (bad) xchg cmp cmpsb rcll adc lahf jo,pt cmp aas call jle adc aaa cwtl xor xchg mov ljmp movsb mov divb jae xor xchg fimul rcrl inc stc mov mov xchg sbb imul repnz iret (bad) cmp (bad) adc or sub jo sub jno sub inc mul add mov pushf testl bswap jl sbbl out and leave dec mov pusha push inc out dec pop mov enter test pop push cld mov popf movsb pusha xchg jae jno mov xlat push pushfw mov cmc xchg mov jmp test xor pop fsub mov out cs mov enter fdivs jge push aaa sub (bad) cld repz popa sub mov pop mov ja xchg lods pop mov cs mov cmpsl xor cmp ret int es (bad) cmp in imul mov lods jge adc les in mov (bad) fsubrs (bad) cld adc mov mov cmp ret mov sub push push arpl or imul xchg pop js and sub call jns bound adc (bad) enter mov mov mov aam cld inc push pop cmc cmp cmp stc xor addr16 jle inc dec int mov (bad) rcll pop push insl mov stos inc inc fdivs mov add pop push push dec xchg jp and jne mov pop outsl mov leave nop dec sbb in gs add aas sbb or aas pop stos xchg xor push imul fisub pop xor test mov push int subl jnp andl and and jecxz lock dec rolb push cmp mov xchg (bad) mov sti mov add mov push jg into ret lock pop mull xchg addr16 loope into test popf es jmp xor mov ret out jbe jbe pop xor mov (bad) imul testl jmp lret push imul push (bad) hlt pop popf inc pop xor nop add or leave int enter ja push mov pop push dec push jbe add lds and push xlat mov add into push xchg pusha inc push out sub push sarb in mov das sub push out hlt test mov dec mov mov push leave insl pop cli xlat sub jl mov mov je (bad) inc push scas (bad) clc notl fsubs lock xchg and loope push or pop cmpsb sub push inc jne mov int3 mov or lock gs loope adc in (bad) js sub pop mov push push rol add imul dec mov (bad) jbe mov pop fistpll ret and in pop (bad) xchg movsl out ss mov add mov and mov mov lds cmp dec inc into call mov xchg and repz push gs xchg clc adc int3 xchg xchg sbb xchg cmp sti add dec dec addl pop jo pop repz and loope fidivrl (bad) lret stos mov push jmp sbb jp jg pop jne (bad) sar mov mov lds cs lds in dec lea push fidivrl inc add pusha add sti lret jecxz imul mov and std xor xchg xor outsb (bad) sti mov inc rcl and cltd or jg mov adc enter lea cmp inc hlt out and or lret hlt add jmp cmp enter int mov mov inc outsb mov shl pop and lret (bad) nop sub jp xor pop loopne jmp (bad) or js (bad) fs jo out aad mov xor sub lea sbb xchg in rclb mov incb jns pop push lret xor cmpsb push test xchg gs sahf loope mov leave stos inc out pop out fisttp sub and popf jg sbb lret add adc inc cmp jne add or add mov xchg (bad) out fcoml in mov loope push xor sbb rorl cmc push lds push pop test jno out std cmc aam popa in jb lock inc jmp jno lds jb lds (bad) iret vpaddb push xchg xchg jbe mov aam adc jne pop lret or dec rorb mul ror mov pop ret repz out push popf rorb push push cmp jmp aas xchg mov dec aaa add dec xchg call lcall and pop jle push inc mov jns xchg lods data16 insb pop fimull std test mov (bad) mov add mov sbb mov adc mov std jne push repnz adc test stos iret add (bad) int3 xchg (bad) (bad) (bad) fs dec popf mov mov fs mov roll (bad) xor idivl and loopne in sub xor xchg cwtl call mov push notb (bad) sahf ret inc call xor popf and std or push aam lods jl loop cltd pushf das shlb xchg cmp pop stos sbb dec inc mov les cmpsb push mov lret push xor loope adc add sti mov lods fmulp sub mov dec mov push cltd xchg lods xor arpl mov jo jl and jno fdivs jbe pop movsl loop xchg jecxz cmpsl jno aaa jg out je ret fnstsw adc inc fs testb ds cmp nop xchg mov cmp xchg or inc mov mov fwait call pop xor xor fs outsl es pop aaa inc pop cmp in test dec fnsave loop dec pop xlat outsb add push into mov mov lods shlb in scas fisttpll mov repz std cmp jae test cmpsb xor popa inc xlat xor sbb dec sahf in mov out jo fisttpll lods pop data16 loop jno add addl jne adc xor dec pop or dec (bad) mov dec fcoms imul jbe sub mul jo inc test cmpsl cmp ret mov inc or jne lcall lock push aad pop push push sbb sti dec jmp cmp fwait cltd xchg gs and jbe and lds popf pop loop lock dec enter test inc and movsl or repz jp nop mov stc daa mov mov jno or imul mov pop xchg sbb xor mov mov out icebp jle sbb bnd sub aaa xchg js iret inc mov (bad) into in (bad) jo sbb xor sub adc jge push jb jmp call pop adc mov fist inc popa dec add push pop dec rorl (bad) mov out jbe aad adc pop inc shll enter test int3 aam sub ja test push sub xchg aaa xchg dec divl xor mov xchg jmp insl jnp inc push lret mov xchg inc imul (bad) sub fsubp mov mov lcall mov or cmc sbb mov shrl fwait fs mov js inc adc mov sti jp push outsl (bad) in shrb mov mov pop cmp fimul inc push insb add xorb sbb xchg rcr or (bad) and jae mov scas (bad) xor sbb lods pop mov sti or (bad) sub dec inc push jg or jb jl mov inc lds mov pushf (bad) jb dec ljmp cld bound lret xor push clc pop je fnsave mov xor fist adc cmp cmpsb jae fmuls inc push mov cmc es jb cmp sbb mul mov cmc into imul in in ljmp aas xchg js dec cltd pusha pop push inc xchg adc jg mov ja fnop adc jbe pop add mov out mov jp (bad) test jns (bad) mov movsl jl sbb pusha jno cwtl aaa adc xchg ljmp call dec pop inc mov stos (bad) (bad) loopnew inc lcall ljmp fs jecxz adc fistp pop mov (bad) loopne,pn ret add negb addr16 inc aam inc mov mov or repnz or pop into lds pop pushf les xor push mov hlt dec xor repnz fnsave inc inc push fwait repz jl jo inc dec jnp in dec pop mov ja xor fs xor aad gs or (bad) aad sub (bad) hlt aas pop jl bound mov pop stc popf (bad) ret mov dec inc ljmp lods int3 jecxz cmpsb sub cwtl xor cmpb cmpsl lcall jp,pn insb mov out scas mov inc (bad) dec or dec mov push cmp aaa bound mov push call mov fdivrl mov push into adc loop sub cli insl scas and add int3 lods in lcall clc movsl push ds jl test ret pop xor adc sbbl xchg cmp aas sub dec sbb adc jge movsb sbb pop arpl or bound dec lock xor mov adc push arpl fmuls lahf lret adc xchg fistpl sar jnp addb xchg cmpsl push aaa push inc mov mov scas insl jecxz lret or xor into daa jb xor testb aaa pushf sti mov mov in pop fwait push xor add mov (bad) out mov enter pop mov dec inc imul loopne mov xor (bad) or (bad) jne cli jecxz mov mulb repz (bad) jo sub jb sub xor test jo sub jns xor mov sbb or xor push jne es sbb (bad) aaa fcmovnbe mov addr16 adc (bad) out or jg lock cmp outsb xor sbb icebp cmp jo loope out pop loope lret int xor loope sarl lods mov es stos dec push dec lret inc stos push popf push hlt repz rcrb add ret shrb xorl xchg dec xchg data16 insl je adc imul jmp fmuls inc jns stc mov fnstcw add push mov ret sbb rolb scas mov xchg inc mov mov out cmp (bad) sbb push dec bound fcomp or rcrl daa idivb ljmp popa xor dec shrb push roll and rol pop cmp rcrl jge inc cwtl stc xchg insl mov push ret adc mov xchg xor pop in pop cmp cmp (bad) (bad) jmp mov dec mov or adc mov ja cmp faddl in mov fwait mov sub mov shrl xchg or roll arpl mov cmp loopne mov int3 pop lods mov test stc arpl lods test jmp lods push push orl into pop add enter outsl xchg in imul cs adc inc mov insb das not add test cld fisub icebp mulb fmull rorb mov repz fwait push mov (bad) or sub jbe mov (bad) mov xchg cmp sub xor sbb aaa jl mov jge in pop dec xor xchg jp mov pop popf xchg mov push ds divl ss xchg cmpl in mov or sbbl movsl xlat std es pop sahf dec push rolb adc (bad) or cli jmp adc into mov mov mov sbb sbb dec push cmp inc dec daa cmc pop xchg std jle icebp lea lods out jno mov dec imul xlat clc mov pop sub cmp add aaa pop int3 ljmp xchg mov jmp inc or jo,pt dec sbb mov adc cs fs dec nop push add outsb lock repz push inc (bad) dec jno pop lea mov inc pop js test mov negb inc (bad) aas push in int3 out mov leave push xorl cmpsb dec or out gs js outsl ret cmp cmp cs dec mov jp dec xor into aam mov sbb in out pusha repnz jne and ss push lcall add inc xor cwtl mov push sti stos add insb pop in outsb push sub xor sbb es int3 adc sti sbb xor inc mov in cli jnp insl mov jg fstpt push mov (bad) jl push sbb aaa push mov pushf xchg push mov sbb push test inc and cmp sbb fidiv js xchg fidivl gs (bad) in popa mov (bad) dec sbb movsl lods mov mov jmp inc pop jmp lock mov sub in movsb (bad) lock dec xor cwtl cmp and and in jo pop sbbl test adc (bad) adcl icebp adc mov or lret push sub test dec adc cmp cmp jge pop stos cmp rorl enter and out std cmp lods in arpl stc sub in cwtl or cmp test out and adc out pushf cmp (bad) jo insb insb rorb adc cmp add push pop sbb mov inc push jecxz mov push mov lds cmp out data16 cld fiaddl dec xchg mov nop insb xor sbb jle mov lock pop jg dec aad je inc or mov and or repz ja xchg faddl or inc out pop insb cmp push (bad) fnop sbb pusha add add mov stos popf divl std fs pop (bad) push jbe add test loope ret sub repnz popa xlat lcall lret push test ficom dec mov and aaa mov adc or pusha cs jmp inc lahf xchg (bad) clc mov xchg into push lds arpl mov mov repz cli into arpl xor cltd inc imul push test or xchg xchg jbe or lods add mov divb aas aam in sbb adc or imul aad sbb xchg nop jecxz andl roll adc mov mov dec xor ds dec dec sub inc dec jnp fdivl or insb inc enter mov adc inc lock fisttp sub mov inc sub sub stos scas xor leave and mov pop mov add ljmp jecxz pop int leave xchg jae es sub inc test ss xchg fistpll inc xchg movsl mov inc sub push mov iret dec fidiv ret push jle xor lret cmpsb inc adc mov movsb pop jne sub push fnsave mov insl orb adc js je cmpsb sbb inc sti xchg sbb dec in scas cwtl ss mov mov fstl pop cltd cld pop or mov je pop enter aas inc cwtl mov or out add enter push pushf jle loopne rolb xchg xor mov pop sbbb stos mov push aam push je testl sahf repz sub pop sub mov jb xchg out mov jo lds jno into pop sub or dec in stc (bad) cmp mov and pop movsl adc xchg jp xchg bnd add xchg inc sbb mov pop outsl in and jg call jle repz adc fwait lock scas ret std les push aas sbb sar sub (bad) (bad) xlat xchg sub jo int jnp out rcl dec and pop repnz dec fwait and jl ds insb xchg imulb mov rcl add add pushf popf mull add and jbe jge insb xchg aam cmpsb test in mov push sbb push inc push icebp pop divb sub xchg pop dec pop or (bad) daa fdivp dec in pop repnz xor add jecxz push pop pop movnti adc push pop xor dec les mov inc imul imul jae jnp out xlat cld mov dec mov dec mov sbb pop pop and jg jae lahf pop ds repz loopne sub ror pop push je pop jns xchg dec shrl add lock jb pusha sub out jmp aam inc jp push cmpsb imul shll xchg mov fwait mov or int scas sub mov aas shll (bad) lock pop lret das or xchg gs jle sub sbb push jg fmull push sti dec add je xor mov cs cmpsb xor jns jae xor add xlat sbb and dec or add stc in xor out pop xchg cli (bad) jg test mov mov dec mov cmp or std out outsl cmpsl push lds jns inc mov stos fsubrs outsl (bad) shl fmuls cmp repz imul cmp incl repz dec cmp mov insl (bad) mov mov movsl call cmpsb adc mov int3 cmp and adc call adc pop (bad) and dec inc sub cli arpl xchg dec lods mov and xchg adc xchg adc repnz sbbl cs mov mov jno cli lcall sbb dec in dec lcall mov jo cwtl push out rclb cmp mov popf sti sub das xchg imul aaa jmp (bad) or leave mov jle mov mov cltd xchg enter fwait push dec int orb cmp imull sbb fdivl push jns lods inc inc pop xor push shl xchg sbb dec scas dec inc subb les es pop int cmp adc subl push jg add rclb lods idivb sbb bound sbb adc lret sbb mov jno jnp js mov (bad) cmc hlt pushf mov cwtl sbb inc rcrb pop or xchg xor outsb mov mov shl imulb xor in out inc lahf clc sbb mov push pop push mov adc or mov mov jmp xor loope fsubr arpl cmp inc and fidiv cmpsb adc movsb cmpsb jge and push mov push lds hlt sti xor cli negl inc loop dec mov push cmp xorl mov mov fcmovne lea pop mov ret mov sbb xor pushf mov mov xor xlat and cs movsl xchg or leave iret popf add push jns jne mov push insb idivb scas sar loop mov pop inc in addr16 imul cmp dec add (bad) push push adc push jne les repnz enter or or xchg (bad) ja add add (bad) ret inc pushf xchg pop push push call ja xchg cltd push jno movsl clc mov (bad) data16 jns clc push lds and pop popa enter std sbb ljmp movsb sbb mov test dec pop les pop stos push cvtdq2ps out fsts movl into mov pop dec mov testl and int3 mov pop push and or jns (bad) nop stos lods mov mov mov sbb rcr test fadds sbb sarb std aaa push movsl jae ror jns out mov lcall sbb pusha fcoms dec (bad) inc mov xor push cmp dec push sbb aad test cli sub jp mov int test aam (bad) cmpsb mov cld dec sbb sub mov add lds dec sub scas fimul mov push mov jno inc int3 in mov mov cmpsl and or cmc ss jo dec and pop push xor fisttp movsb in pop lds jp hlt and movsb test in sbb fbstp flds ja xor sub push push jno insb inc xor cmp movsb movsb out lahf in les adcb ds test mov sti ja bound mov dec outsl pop dec ss jp mov and mov (bad) lret and outsb ss cmp movsb sub pop dec add and dec fild (bad) (bad) jge pop scas add mov lock jle and sub xchg inc inc movsb dec cmp stc repz mov lret test xchg xchg xchg sbb cmc lea sub cmp mov adcl push stos jb pushf and lock ja sub mov ds (bad) rcrb mul inc or (bad) fisttpl sarb out mov (bad) add gs mov mov cmpsl adc and outsb inc adc sbb sbb pop lret test mov out mov pop xchg dec in mov push insb scas adc shr mov lock pop pushf mov adc and push mov xor and cmc loop shll pop in xchg int cmp fcomps rclb add or add pushf stc sbb xor pop shrb fwait aad add shll (bad) sbb das sbb sub stos jg cli jnp inc fsubr pop fldt in pop cmp pop push pop (bad) rolb std (bad) xor dec daa js movsb cmc push ds sbb mov mov mov popa sub jl fnstcw xchg push xchg xor imul (bad) mov inc jb push cwtl lret decl cmp inc cmp ljmp sub sarl call mov aaa loop sub jp push jecxz insb mov stos leave stos add das jmp scas mov scas fstl or pusha fcmovu popf hlt dec (bad) test push jecxz (bad) notb popf sub add movsb cmc les mov ret aam cmpsl push mov insb cld lods sbb dec pop (bad) ss inc fcompl mov pop push jno xor movsb jge stos mov xlat dec mull cld outsl xchg jnp xchg (bad) mov insb mov orl xchg sub mov in cmp jbe and pop imul pop mov sub (bad) add sbb adc dec (bad) ret test push inc in (bad) xchg add mov xor mov mov mov pop cld sub cs icebp pop mov xchg outsb imul adc imul (bad) mov jle add stc dec scas push adc and mov xchg push daa jp push loopne or lods mov mov cmp cmp sub jno insl lods scas cmpsb xor push cmp popl sbb mov sbb lods pop negb rcrb and or push in iret test jns jns fist mov mov push mov jmp call xchg lret ljmp sub and into adc rcl insb and outsl add (bad) lea pop in and out dec popf cmp test (bad) or pop insl adc inc xor pusha jle sub mov adc dec pop dec adc js xlat leave sbb cmp shll xor (bad) jne mov or aad adc or push lret mov or jbe lock mov hlt add push movsl dec lahf xchg loop sub rcl xchg inc mov scas ror dec and fwait push xor add jo pop sbb (bad) cmpsl xor (bad) or mov jl sahf and lret sbbl inc aam mov and bound (bad) xchg adc repz dec cmp ficom adc je pop insl dec icebp jge push mov out jbe dec dec mov lock or sub stos mov or pop xor repnz repz cmc aam ret or test cmpsb int3 add xchg inc mov stos push dec (bad) dec sti mov cmp or bound inc subl jbe sbb pop mov mov lods iret dec popa and adc or pop stos pop popa pop cs aas dec loopne mov je mov fistp sub lods stos xchg jne daa ja and popf mov add adc xor (bad) iret inc add in movsb out push xor scas mov jns sub cmp sub mov mov push cltd fs inc fnstsw xor push dec push cmp mov imul inc push push push ret jg adc sbb sub shrb insl clc fucomip mov pop into out nop sub lock cmp mov and add push cmp jmp jmp insb mov repnz mov ljmp lds sbb cmpl jbe jne fs sar shrb test inc push pusha sub inc jno pusha adc cli stos mov mov jl xchg push daa (bad) lcall sti xchg xchg push out divb jne xchg mov pop out pop add push nop adc out test fdivl dec xchg mov xchg dec add or mov and mov sub adc flds mov push sub (bad) fadd push cmp mov ja pushf push jbe and push mov mov (bad) mov negl lods and data16 imul mov rorl pop int3 aam dec (bad) push sub push and jp adc stc pop dec test pop cs inc imul jb es mov sbb das and into adc dec adc inc imul fdivrl mov std mov (bad) hlt sbb mov lret fimull aas addr16 inc scas sub cmp sti lret cmp jmp call sub mov in and sub (bad) sbb or adc sbb mov or adc fsubrs aas xchg bound dec rcrl jle mov mov iret pushf sbb scas cmp push pushf loope or (bad) into cs and popf xor shll push dec cmpsl cli int3 push sar inc push sti lock mov sub pop xchg clc xor lods rorl in sahf rcl xchg push mov loop or lock into aaa xchg jmp clc sub in sbb in add bound hlt (bad) push inc popf mov sub bound loopne sub cmp xchg mov mov movsl rcll xchg loope cltd dec jmp ljmp das and popa insb mov push mov or xchg out mov (bad) pop mov lods mov cmp or sbb and xchg cmp nop cwtl mov rorb lret jnp adc lds in push push faddl outsb jle insl popa dec clc cld or fbstp imul (bad) mov outsl sub adc lea fistpl (bad) out fidivl movsb dec inc mov pusha insl jns dec xor iret cli out mov aaa lret test pop lods and cli add and jle lret push lret xchg inc sarl add dec test or push push pop in fsubl inc shl jl out stc and pop jl in sub mov push mov adc xor int or movsl out lret mov (bad) jg imul or or fidivl ret jo push push jg clc mov pusha faddl stos adc cli jmp xchg add jp (bad) xor (bad) pusha pop (bad) enter out es pop adc in jbe out sahf sub or clc dec sbb jge or or sbb xchg cmp pushf cltd and xchg bound int dec repnz or cltd sub cmp mov push in and fadd aad dec adc sarb jnp dec or cmp cmp and push push lret or push mov in xchg lds xlat inc adc dec movsl icebp hlt sub sbb lods and dec jmp inc ret jle insb jge xchg aaa jno xchg dec xchg push nop add xchg pop sahf lods add mov ds push in les mov mov sub scas jns popa jnp inc cmc xchg fs arpl loop int3 addr16 xor push adc (bad) sahf lea call sarb mov test push mov push fldt pop fisubl fs fnstsw sub lods push and js scas mov jns mov dec and push cmpsb (bad) lahf lret aas stos fisttp or sub and jnp (bad) hlt cltd pop mov rorb cmp sub orb les outsb leave cwtl out in jnp lds cmp leave or xor jp ret lods int push adc mov sub mov shl sti in aad xor jbe or insl insl hlt pop sti jo sahf or loope dec sub mov xchg rcll std or xor adc xchg jne lods push or dec fild lcall and scas cltd rcr addr16 ret mov bound insl movsl sbb sub jns mov dec out push mov pop mov dec mov loop pop insl pop ficoml jp jnp (bad) stc ljmp fcomps je lret mov jg jg rcrb jo pop scas xlat pop repnz mov in xor jo mov stc lret pop pusha gs aaa fbstp adc dec hlt pcmpeqd pop daa mov sub push es xlat dec pusha sub pusha or mov out lret fs adc stos jnp inc jle insb or (bad) int lds idivl or push fsubl pop lret push sub and fcompl (bad) xor add adc sbb (bad) repnz mov cld scas mov xchg cs sub outsl inc enter mov cmp repnz mov loop insl in xchg mov leave mov fisttpl jl test mov jb adc xchg stos mov (bad) fwait sbb je pop cltd mov mov sbb movsl out jecxz rcll enter data16 rorl jns xchg xchg paddsw cmpsb jecxz or dec pop mov sti hlt sbb add inc jge cmpsl and repz setnp fsubr (bad) mov xchg and mov cmc mov xchg and push mov mov xlat push or mov loope aaa ret adc divb cld jne adc xor jne pop jno fdivrs xchg ljmp pop xchg or push mov lcall push push push sub cwtl pop int3 imul pop cmp cmp sbb rorb and mov jp outsl cmp outsl stos pop xchg shll es stc mov cmpsb lea dec js jl cmpsl mov bound lcall cs xor mov and sarb (bad) mov pop jecxz jns push jecxz xchg shll rclb (bad) ss arpl cld cmp (bad) dec repz jle lods fcomip sub and mov mov popf cwtl cmc and and cmpsb fistpl xchg mov mov cs dec inc pop fst outsl xchg repnz stos and and cmp xor bound movsl in fcompl sub in push mov sub ss fldcw lcall pop call and adc mov add lods std fiadd ljmp push mov test divl pop rcrb jns xor das sahf es pop fstps pop pusha jle xlat dec push mov xchg push je fnstcw push xchg loope push outsb lea out jle outsl imul inc cmc inc mov jns movsb das jbe or movsl test lds xchg mov jge int add test or test sbb (bad) push out aaa mov sub or push scas or les or adc in test push clc not xor lret shl ljmp mov pop pop fs xor in dec push sub cld roll in outsb adc fwait testb ljmp in cld clc cmpb lret sub ret int3 lods into mov in scas adc and mov clc cs xor imul scas insl loop ficomp mov add cmpl cwtl push xchg cltd loope fistpll add add push dec cmc inc cwtl lods arpl push pop lods (bad) mov inc jg lods lods pop sub in mov push mov mov and and sbb xchg mov lods dec ficom fwait xchg sub or xor dec adc (bad) xor sbb push daa hlt xor push mov inc (bad) jae rcrb xlat (bad) sub mov add js inc imull xchg mov mov cmp xchg mov cwtl jge int3 or xchg jmp lock aas cmp jne ret lea cmc pop adc test aad enter sub mov clc and push addb or incb sub mov shl fstl dec xchg or lret loope add sub cmpl sahf es fistp sub pop jle rcrl xlat pop sbb jb pop fbstp xchg mov in mov mov mov lods sti adc ds sub inc lea xor shrb aam stos cmp ja push (bad) xor outsb xchg sbb sub sbb xchg sub cmp jne es fcomp (bad) and dec stos cmp lahf out mov out adc mov out dec mov test sbb or dec jns dec inc jbe adc mov ret test adc shl add xor sbb cs ljmp mov add jns dec xor push dec stos in (bad) iret xor cmp and mov jmp in cmp outsb or push push insb cmp test loope mov cld pop notb pop lret (bad) xchg adc setne rcll test push scas js arpl dec scas adc repz xchg lods jno inc inc pop (bad) mov dec addr16 fmuls and ret pop pusha xchg push xlat or (bad) jp jp xchg es sub add add imul int3 mov adc imul faddl daa rcll dec xor sub pop jg arpl shlb cmp leave out stos mov mov jbe inc sbb dec mov rcr js and mov inc mov mov sub (bad) lods aam decl or xchg lods mov data16 fimul jne inc jmp sbb mov (bad) mov clc aam pop dec in mov adc sbb add cmp pop mov subl mov mov mov mov mov fdivr test adc xorl nop (bad) in cmpsb inc add push (bad) xor stos or xor jne out (bad) or inc mov loopne cld dec fbstp mov dec cmp out inc sub movsb jnp or pop nop xlat test stc cmp push mov pop pop loopne add pop or jne out sbb mov add sbb sbb lret fcoms and mov addr16 add stos sbb jmp addr16 fld pop dec mov mov iret cwtl or xchg sbb add add (bad) pusha icebp add inc xchg movsb bound mov sbb mov push aas mov xchg xchg xlat add repnz xor rorl scas mov dec outsl cmp xchg jmp xor inc insb lret out ret fnstcw push mov je mov adc movsb mov test les fidiv lods add mov mov xchg pop imul lahf aad les mov (bad) cmp popf imul mov scas cli push inc pop cmp aas adc and stc lods jge fcmovu mov xor popf jp xchg mov scas test test add push add dec pop xchg pop sbb loopne xchg outsl pushf bound jmp pop jno mov pop push inc pop loope sahf les jecxz sbb (bad) adc inc cmpsl inc gs out dec (bad) cmp xor popa (bad) fcmovu fcmovnb cwtl xlat fcoms mov xlat lods fisubrl pop adc lods fwait jno out std jo xor sti xor aad (bad) (bad) jl dec xchg subb cmp sub inc cmpsl pop cmc dec pop (bad) roll cli mov add dec rol jg lcall repz xor cmp jmp adc popf fdivrs js or push xchg xchg popf stos mov sub push mov mov adc fstpt scas mov fdivrl into push shr xor dec mov insl js push and dec mov into gs bound mov imul add je dec xchg adc ret pop arpl mov mov scas cmp js inc mov push gs add mov jbe fdivl mov mov jmp aad add stos js sar enter pop das sbb fist dec mov push inc outsb test mov hlt push jo shl popl je and stos jge insb xchg pop cltd data16 cmpsl dec inc lahf or mov or aaa sub scas mov ds dec xchg les das dec sbb test shr in mov int insb mov pop jl xchg repnz imul (bad) and dec cs or xor outsb push int lcall and and jle ja aam mov cmp cmp mov out cmp es xchg sarl jecxz xchg push cmc sti enterw push xchg mov (bad) in lret nop push mov pop out mov das shl lods cmp stc ljmp mov pop sar bound cmc decl mov inc (bad) xor mov in jle and lods xchg lds aas adc fldl cmpsb aas jecxz out cmp call jge pop out loopne je pop xor fist push lods jb aas dec jl dec fcoms daa sbb pop jmp cmp insl (bad) sub ds mov ds lods rcr jne clc push push das push adc ss dec cmpsl xchg lds pop pop xchg cmp repz sarb push or dec xchg pop mov pushf push and sahf sbb or sbb dec mov adc not pushf ljmp xchg sbb mov mov sbb mov das les cltd in sub inc hlt lahf dec das inc ret nop mov std xchg loop mov repz ror jl roll cmp or neg mov sub fild arpl jmp mov leave rcrb or or jno mov jmp ds dec bound in bndstx push pop pusha inc dec jmp add insl leave xor dec dec push fwait lret decb aad fnsave mov mov push pop pop push cmc sub loope xor daa jmp pop out adc test bound in fwait adc stc mul adc bound (bad) dec add sbb (bad) (bad) adc lods pop or into loop cmpl (bad) cmpsl mov xchg fstps jecxz mov cwtl cmp mov mov xchg xchg mov stos sbb xchg adc divl cmc ret sahf mov sub add and adc cltd xor mov pop mov jmp cmp mov sbb lds cli test mov adc mov mov add into push or mov in fdiv xor lcall adc mov mov push jb mov pusha push mov mov cmp aam sbb xchg dec lods mov out mov mov push inc in ret icebp add std jne dec jnp ja mov lods mov mov push xorl movsl mov push pop jbe mov imul adc pop pop add nop clc xorl push mov test in (bad) ss nop cmc out add (bad) divl cli mov cmc mov or hlt inc test add popa jl (bad) mov sub cli jns stos sub rep aam xchg (bad) (bad) in sub cmc movsl push fcomps leave or in push mov cmp repnz adc cmp xchg and xlat je jmp sub xor cmp daa and push push sub lret cli dec mov mov jp and idivl out pop sbb mov jmp sub dec adc xor lock (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret decl add aas ret pop rorl add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add je add add or or add or add add add pop or add add mull add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add cmp push js in (bad) add mov mov (bad) mov (bad) insl fwait repz xor js syscall add adc add insb inc aam mov cmpsl fisubr and aas mov out sub pop fwait adc adc pushf sbb push or lds das stos mov pop addr16 (bad) repz or ljmp hlt insb inc sub into pop divb inc je push mov stc adc pop outsl mov in push mov mov inc adc xor mov sarb icebp mov pop push cmpl scas lock pop ss test sbb in (bad) sbb push sbbb inc in push jno push cltd jno push and xchg fwait jo pop cmp mov mov cmc arpl imul xchg and mov pop fwait mov xchg sub sub inc ss xor cwtl pop repnz jne addr16 in in mov imul xor lret dec push sbb or and jp decl test and add sbb daa loopne pop enter clc mov sbb push stos cmpsb xchg loope mov out out (bad) push nop cmp xchg fistpl push (bad) jl aas mov push sub adc stos shll inc imul movhps imul and cmp xchg push (bad) push add cmpl push movsl mov data16 imul xor test xchg mov dec and in push xor pop mov insb rcpps pushf insl pop pop sbb mov xorl inc (bad) cmpl gs jns cltd push fwait inc pushf sbb jnp mov add pop orl enter test les sub sbb icebp or imull cwtl xor push les and xchg sbb lea negl aas add xor out mov cmc test add mov inc rorb lret mov cli stos pop add movsb sub stos test sub out mov addr16 sub and add sbbl sbb lds shl add mov aam inc push insl jle je (bad) scas stc or sbb loopne imul xchg lcall mov dec adc iret test cs ret dec xchg popa fisubl notb pop cmpsl test adc stos adc adc mov jecxz int3 add adc repnz push aas sbb push rol dec inc add adc and mov mov fcmovnu sbb in addr16 mov rcll cwtl xchg mov (bad) push ss cmp les aas inc and loopne es jno repz lea ret je daa cmpsl jno mov sub push xchg sbb jne mov inc test sub lea sbb out movb es dec aas xchg inc sbb lcall push push or addr16 adc (bad) scas and (bad) div ljmp data16 movsb add clc add fidiv sbb aaa xor fcomps (bad) cmp adc mov push or mov jge cld nop cmpsb ss cmp xchg lods cli std test sti out add psadbw call xchg push leave movsl int push mov sbb das outsb dec mov fmull inc stos pop incl mov and adc mov movsl inc and push mov inc pop push hlt xchg gs fidivr cmp scas and pop lods fadds and jmp mov mov aad imul ljmp sbb (bad) ret mov adc push out mov pop mov mov dec (bad) aam arpl fimul push xchg cmc mov mov mov mov sti add incl xchg fucomi aam pop mov pop loopne lahf cmp jne out out or adc enter mov adc test dec scas adc sahf jne bound jl jle mov in or rcrl insb xor lahf sarl or and mov xchg add orb inc lret repnz sbb shrb (bad) xchg jecxz cmp mov movsb pop push cmp arpl lods sbb xchg push bound ret (bad) jb lds das test cmpsb push cwtl sti jbe test xchg pop xchg int icebp ss xchg insl scas (bad) js mov fnstenv int3 or shrl mov pop subb (bad) (bad) add jne inc xchg jno clc rclb pop adc movsl (bad) aad dec sub testl mov out stc jp pop and or push sarl push xorb xchg xor into fdivrs hlt (bad) aaa jge sub dec lods adc std cmp neg mov jnp and aaa pop sbb ss sbb loop mov xchg or inc popa mov (bad) and ljmp sbb push sub idivb iret adc mov ss cmp jp incl out lcall cwtl stc iret mov inc test fildl cmp adc fnstenv jno enter fmull es fwait mov pop inc push mov sub insb dec test pop lahf lcall or mov jp pop test cmp insb sub out (bad) and mov shrb int3 cld mov mov loope outsl stos cs mov popf jnp sbb iret je add mov orl lret jno cwtl cltd jp push or jno je call lods mov lret scas int in jle sub outsl std nop hlt or movsb jnp aam movsb mov inc es in xor sti cmp leave cs pop lds arpl push xchg push adc movsb push int lods jmp dec mov xor (bad) in jp xchg cwtl dec insl mov jb stos cmp and cmc mov inc dec mov les sbb fwait xor cld xor pop stos push inc jb push mov imul lcall mov loopne insb loopne pop pop (bad) int3 fsts add mov dec repz dec cmp mov test decl ja xchg cmp inc inc mov in cld aam daa inc icebp test sarb sub add cmp jb and pop (bad) das loopne bnd hlt mov pop (bad) into jp lret int mov dec sbb sub das loope (bad) push repnz and push lds inc les (bad) push jb cmp xor mov lcall fiaddl jns imul repnz xchg imul cwtl dec lahf fiaddl int ss aam mov mov stc imul pop les les and jnp cmp je cltd add out fs repnz jle,pt inc je shll repz jmp insl jl aas cwtl jl (bad) and mov sbb pop insb enter orl dec in lea adc push jl push fnstcw movsl cmp cmc jb dec sbb xor daa inc frstor cli jp (bad) push push or or popa out in lcall inc jne adc sahf inc sbb cmp out (bad) or (bad) sub pop jg movsb sti mov xchg jl cmpsl testl jb sub adc inc sti and push icebp cmp jo lods (bad) repnz aad int and pusha int sub lods dec inc rorl mov call or inc cmpsl icebp add dec or cwtl gs cld inc xlat std mull xor mov push jmp xchg pop xor stos sub sbb xchg xor jl inc cwtl mov adc add leavew add ja test lods es gs adc and mov test inc icebp rcll ret lret movhps iret mov ret sub ret inc mov movsb addr16 outsb repnz adc mov pop sbb sbb outsb inc inc mov and and mov jp (bad) (bad) aam mull add cmp sbb inc or jl mov fs rorl and les sbb adc lock inc adc xor stos cmp (bad) inc jae push fnstenv fwait push movsl movsl dec adc clc (bad) int3 (bad) jnp out push inc aad (bad) xchg test (bad) jle xor dec add pop sub xor je or call fsubs mov push dec and mov xor xchg movsb xchg mov dec ret (bad) mov in push inc pop mov fdivrs jne ret mov les movsb mov dec (bad) or sub sti (bad) adc mov outsb cmp or lock sub pop xor mov and or jb and lds cmp or and jns inc andb and or jo lock fwait xchg push in sbb adc cmpsl enter xchg xchg jns jbe inc scas int lret lcall pusha adc sub push iret dec (bad) call pop push cmp mov popa xchg mov pop push mov sbb jno dec rclb lret sbb cmpsb in scas jbe mov jbe adc pushf xchg adc cmp jp into jg dec xor pop inc ljmp leave mov rclb or movb jg cli or jns je cmc and mov mov xor sub call mov dec clc mov out daa bswap xchg cmp popf pop xor and out add sub jmp stc cs ds sbb out or fcoms insl jp xor add cmp iret adcl pop std push cmp cltd cmp jae xchg mov mov loop and loop int es fiadd jl scas mov adc pop xchg outsl push mov mov je adc testl not push movsl pop aam cltd insl mov dec ficom xor popf push fidivr or sahf dec ds mov mov xchg leave pop test jg lret sbb mov add jno dec fistl push adc mov jnp ds push xchg sub mov repnz (bad) (bad) cwtl add jns and popf adc pop movsl lds adc xor lods xchg in push bound enter add jl mov incb adc inc ret rcll lret es push pop (bad) ja out lock test and imul add inc dec lds push in out or lds ja xor in dec pushf movsb cs imul or or rcl inc inc fdivs sti lods test arpl loop sti add inc addr16 xor frstor adcb xchg sub add jmp sbb stc clc test inc xchg sbb sbb in (bad) sbb mov mov ds addb dec test rcr lea xlat scas mov cld mov lret push xchg xorl fs push push (bad) xor push push push add cmpsl fs dec js clc cwtl addr16 mov fs iret pop push pop cmp push aam cmovl test pop rol sub or xchg and data16 pop outsl (bad) aad cmc das jno sub inc xor jmp and inc in jae mov jg nop fwait xchg xlat and and adc sub inc push aaa mov pop out rcll repz mov ja push mov mov (bad) (bad) cwtl jns sbb mov es sbb mov inc outsb inc arpl cmp pop scas push push xor int inc mulb dec sub add inc imul cli cmc test pushf adc mov jle cltd jmp jle dec push (bad) stos xlat cmc xor inc insb lahf lock ljmp mov ret popf push nop in outsl jg cmc jecxz shr mov mov fwait cmp sbb je or mov cmpsl js idivl adc imul (bad) mov add test scas sub mov lods sbb test (bad) je dec loope push loopne sahf (bad) dec mov xor and and sub pushf or lock outsl jb mov cmp ret test sarl jge loopne dec adc movsb xchg sub add add fs lret negl repnz movsl insb fsubl pop push or sub or (bad) and orl adc xor daa mov xchg in sbb push cmp mov stc test clc mov call sbb jle lods xchg add dec fisttpl popa pop sub pop clc rclb mov xchg adc pop dec xlat ss sbb and shll inc int sbb std cwtl mov xchg out fwait lret inc mov sbb and rcrl inc lret dec bound bound sahf arpl mov es fiaddl jmp hlt and (bad) pop cwtl sahf cs add loopne jbe push (bad) push xor out cmp cmpsl mov xor lcall lret and mov jo lods cli push cmp dec (bad) notl xor imul jge in loop mov sbb ljmp stos sbb (bad) fildl mov push inc pop pop ljmp stc and sbbl mov out lock pop mov popf push loop ret int loope inc and cmpl out adc adc fmuls mov lds cmpsl xor push and pop pop and jnp fwait lea (bad) andl out fistpl inc mov dec mov int3 push (bad) and xor cmp and ja cld imul test int3 insb dec add call imul mov (bad) inc adc mov mov sbb sahf push xchg pusha fwait jne inc jno popa mov cs fnstsw dec inc inc inc jmp mov jle loopne adc xchg movsb scas sbb je aam push rcr push xor lahf outsl pusha daa and mov fldt dec mov mov xor clc adc fstpl xchg cmp repz ret (bad) leave inc shrb pop add ret scas jmp mov mov enter ret mov lahf add dec lret out sub sub icebp das arpl test push gs xlat add push mov mov movsb jmp ja outsb jl jmp in mov push xchg mov cmp btc js sub stc repz and lahf icebp mov aam jecxz (bad) fldl repz sti std adc mov xchg es pusha lea out repz in (bad) (bad) adc jns push fmul jae stos outsb mov push dec jne bound inc inc mov jecxz and icebp pop imul pushf rolb mov xor pop push jb pushf mov mov in push mov int xchg test (bad) mov push inc and add int or lods or mov pusha pop mov fldt sub jnp insb aam dec mov (bad) mov lahf loop pop add jle int3 add lods push xor jl mov adc sbb cld xchg rcll mov test idivl add jnp and or lds inc pop push cli outsb repnz (bad) sbb fimull mov nop outsl push aaa aam clc nop xlat pushf sub clc es les ds mov cmpsb ja paddusw dec les xor add jae add dec sub mov pop and jmp sbb out push aaa aaa sub leave pop ljmp lahf sub push add add and into cmp sub mov push mov aaa adc (bad) in popw xorl mov pop cmp ja sub ret xchg je push push adc insl cmc dec ret ss insb lret movsl cmp (bad) add push pushf cwtl fidivrl ljmp js loopne mov js add sbb sub jp dec push inc add insl sbb mov jo pop aad cmpsl imul in sarl adc pop inc mov push dec jne ds cld mov test sbbl push xchg push mov cwtl sbb and sub mov out jl dec into jle (bad) cld mov mov adc push sahf lods push scas and pop sub cmp inc inc push mov into push fcoms scas add std test (bad) pop out fcomip push sbb jmp xchg jne mov pslld ss out mov push mov dec repnz cmpl xchg repnz jmp popf movsb mov (bad) imul movsb lahf push mov mov xor cmp add cmp inc cli inc sarl das popf cs jb or cltd push scas fwait ds lret push xchg push mov loope sub pop call xchg inc cld pop movsb shll jne adc mov jmp fstps jp mov xor jle pop mov repz stos and push jne stos dec std jne iret stc dec mov je cmpsl push sub mov jmp dec jno lahf push (bad) jp lret jno and fcmovnbe xchg add and pop cld and cld jae (bad) xor jno stos fildll cmp pop test imul enter out cltd or push movsl aaa jl (bad) push dec cmp push mov push or roll xchg mov and jecxz jmp jnp lds (bad) lahf xchg out xor sub stos push out lock xchg out adc rolb xchg adc xor fcoms add ds inc cmpsb lock and xor mov add ss lds push push pop add lea cmp sti mov mov push aad ja (bad) cmp cmc adc and bound test out daa inc popa dec push (bad) ss aas or in inc add mov mov fist mov out (bad) xor inc fmull jnp rorl mov repnz mov pop cmp jmp imul mov pop imul or imul push mov jno mov xchg xchg xlat jmp and test das push ss out stos mull mov movsb fstl addr16 int aam in (bad) jno nop inc xor adc out cld pop (bad) pop lret xchg aad test lds ret orl inc out into mov in pop mov dec movl add sbb adc sar sub or sbb (bad) dec mov fwait inc in pusha jle mov pop pushf sub and popf dec push xchg mov inc cmp insb in dec inc repz xchg xchg or daa test jns lods inc inc dec outsl outsl mov shr or rorl into stos cli fsubr xor xlat push mov cmp sub nop xchg idiv lret push pop and xchg enter jmp mov int3 xchg rcll popa cwtl jo popa or jle jmp jge gs stos jbe push lock shrb sbb push xor into mov test jnp xchg std push add push addr16 dec adc mov cmc bound test cmp pop xor pusha xlat xchg (bad) push (bad) out jg hlt scas test add jnp fldl cli xrelease jp cli dec rcl icebp xchg push or mov stos sbb mov insb pop mov lret sbb scas mov cmp in pop test mov push pop shlb push decl out inc test dec popf mov mov hlt sti pop fdivp mull ror (bad) cs sbb sti push xor in aas sbb mov leave inc int3 cs movsb in mov loope sub in push test (bad) insl imul sti push fcomi push sub popf adc pop and popa enter (bad) mov out mov cli adc jmp test add xor inc xlat dec (bad) ret andb push je,pt inc dec sub xor sahf cmp jnp dec test loopne mov cld push xchg adc jle xor test add sbb std jge rolb push add js nop imul enter cmpsl scas jnp test nop test push pop lahf test xor (bad) adc xor or mov dec imul jp les push (bad) pushf jno xor jecxz add mov add aam mov mov das mov fcoms jg jmp xlat stos xchg es insb mov push icebp mov aam mov mov xchg cmp imull data16 mov add vmovntpd mov outsb fcomip sub lea xor xor mov lea jl jge pop xchg mov jmp leave cmp mov mov cwtl aaa mov xor lret lahf adc mov ss rcrb sbb jne lock imul mov pop mov mov sub pushf jne test test arpl pop loopne aaa xadd mov in push shrb sub inc push int3 in out scas xor ljmp pop imul jmp lcall cmp push xchg addr16 or test mov repz negb decl add xor sbb adc or rdmsr mov test mov xchg cld push sbb fdivrl dec (bad) nop ret sahf add gs jecxz add xchg lods pop and pop mov insb out sub incb imul push fcomi mov xchg mov in mov into (bad) lret pop add cli sbbb xor mov (bad) sbb and push loopne stos loopne pop dec nop ficoml mov (bad) dec add jne xor mov repz cmp fdiv js inc out lods push into dec xor fimul jbe sahf jge sub push lret sti add cmc mov pop xchg repnz push jnp and addr16 jne jp cmp lret icebp adc xor cld and movsb inc frstor in pop fstpt jb pop (bad) cwtl mov xorl dec js lea pop addl aas sub xchg imul pop leave fisttpl loopne push cmp pop mov fildll mov stos fsts inc loopne (bad) xor out inc xchg dec in or rclb adc lea jnp mov test out bound enter fwait mov mov ds mulb adc cs test loope fistpll xlat out aaa dec test adc popf dec mov add jns dec mov daa xorl sbb add aaa pop jne,pt gs (bad) dec ret xlat xor stc jne jle inc (bad) pop xor jmp in test aam sub imul sbb es jmp push cmp add dec dec fsubrs dec insl mov outsb push ficom lret sti dec or cmp (bad) je push cmp test ds or xor fstps divb ret inc outsb add lcall sbb (bad) jmpw insl test leave sti cmc roll dec dec outsb sti sti push icebp pop cmpsl and fs mov pop aam xchg add lret jmp addr16 push xor or ret es xchg test sbb int3 mov push xor inc rol adc (bad) xorb xchg imul lcall jae nop pop (bad) and mov pop inc sub jne gs sub push push divl fcomp aas sbb ret imul xchg adc add push ficom mov idivb fdivs in xor dec mov (bad) xor mov xor repz sbb push xchg aaa or andl iret lret mov int3 push push pushl adc repnz aam push sub roll pop and stc test popa lds fld inc lock add test fs xchg mov stos dec lahf pop pop ret jae js,pn mov leave cld xor mov jecxz mov (bad) xlat rol into stos and xor arpl lldt (bad) adc aas loopne mov lahf (bad) aas sub jne,pt (bad) adc mov or add ljmp nop sti xchg push dec jp mov jno movsl xchg fstl push je imul cmpsb ret sub popa mov insl mov (bad) xlat into adc loop cmp or push mov cmp inc shlb add cli (bad) cmc jae popa (bad) mov sbb (bad) repnz push lods cmc pop mov sbb or bound push jnp mov pusha adcl (bad) fistl icebp loope add cmc fist jle,pt scas mov pop pop mov (bad) mov pop jbe or es and cltd das sbbl mov mov (bad) xor (bad) hlt int pop sub into nop adc out adc add movsb testb popf xor cmp scas inc add fs cmp js cmp adc in (bad) in xchg subl daa jbe pusha scas dec mov pop cmpsl cmp jne or sahf sbb pop in mov into dec xor mov jle adc test aaa fdivl mov mov subl je pop test lds out shrb inc rcrl mov in jmp xchg add sarb xchg in lods push push inc in pop imul sbb clc jo daa inc mov mov pusha ss imul mov cld cmp and push imul scas les outsl dec imul shufps push xchg xor ljmp cmpsb cli jbe mov push popa mov movsl mov mov or cmp push cmp xor mov mov xchg flds pop lods mov (bad) push (bad) adc mov jns in or xchg fmul repz popa ret cmp inc pushf fadds sub add jno or lcall and pop xlat test sub mov and out dec lods xchg ljmp jle es cmpsb push clc mov lahf or xchg push mov adc push movsb mov nop jle mov mov fldenv mov adc sub (bad) addr16 xchg jnp cmc inc out pop push cltd pop sub es add aas stos insb sti inc jl cs mov inc cmp adc and repz mov loop adc andl sub test rcrl lea dec negb or loop lods jle mov pop adc shlb adc movl (bad) movl test enter ret mov movsb xor and int mov sub mov xchg inc ret sbb and sub fistp mov add mov jns lods xlat aam mov aad mov mov fwait andps adc repz push dec call orl xchg fistpl sub std xchg mov repnz cli xor sub repnz lret jmp inc (bad) dec scas inc bound jae js fmull push dec lock push test (bad) addr16 mul push mov shrl sub repz movsl movsb mov pop popa or push cmp test or sbb push test add fist in arpl and add pop xchg jne cli mov sarl sbb call sub (bad) mov push jb stos jge adc fiaddl inc cmc xchg mov jle subl cmp or pop js out pop and adc es shll xchg or ss mov outsb jne xor sbb (bad) fcompl jp gs pushf mulb inc cmp push hlt sbb iret scas sub bound (bad) inc scas jge imul outsl and and int3 dec or cmp push ret jns mov test les dec adc iret imul and ds adc mov inc (bad) out push jecxz or cmpsl jnp adc arpl inc fcomip sub insl xor cmp pusha lods sub insl mov xor add push std jns insl mov arpl push je (bad) mov (bad) aad outsb cmp add leave push (bad) adc lcall add (bad) push sub and movsb or dec dec aam and cs addr16 fsubr cs xchg push int3 mov xor adcb mov fnop aad mov dec notb inc jbe mov dec dec popf fcmovb negl scas dec fcomip cmp cmp push xchg outsl sub leave lcall aaa clc iret inc xchg jnp nop sub ret leave out xchg add and and cmp movsb push pop call (bad) push aas out add mov fnsave insl xor shrl sbb and push dec or pop adc or cmpsb negl mov pop hlt imul or xchg xor divb xchg push pop xor cld scas sbb addr16 shr cmp push mov popf into pushf in repnz mov mov iret dec and dec fucomp push (bad) xor mov (bad) ds xchg and fs jmp inc and es scas push inc mov test push arpl dec nop xchg leave scas xchg call jns or insl or and or std xchg mov popa repz mov stc dec pop hlt adc movsb in lahf call imul xchg lret js outsl pop leave jne shr enter imul mov inc lret mov sbb inc icebp (bad) xchg lock jle mov ss lahf inc mov insb int xchg int fisub movsl mov mov out sub adc insb jecxz push call inc pop int pop aas pop pop ret imul iret cmc jl bound inc imul aam inc pop in mov (bad) stc inc aad sub cmp mov stos cmovo insb aam sub (bad) dec lcall xor lcall lods scas pushf and or (bad) bound cmpsb mov sbb ret pop mov fdivrs outsl divl pop inc clc (bad) enter out (bad) ror jg fcoms aad (bad) xchg dec adc call push (bad) jl loope paddq cmp loope frstor sub xchg add aam lea imul das xor in sub mov test add rcr imul sbb lret loope cmp sub dec fmuls insb pop lods xor jecxz adc pop movsl dec outsl xor jmp ljmp push pop dec push ljmp xor cs sub aad mov lahf inc mov pop cmp ss and insl inc mov sbb outsl inc nop or sbb cwtl xor leave test jge add jae loopne cmp add pushf jbe sub adc jne test inc lea xchg inc test cwtl fcoms jmp clc sti or adc (bad) (bad) repnz adc scas dec (bad) call xor pop js mov sub mov inc mov outsb mov xchg or popa sbbl inc in push sbb mov (bad) mov and mov (bad) pop loop or pop push or (bad) mov out enter pop jmp inc incl jno cmp les ss inc mov roll mul inc repnz jno mov sbb xor push pop mov pop rcrb push add and test dec insl cmpsb les lahf (bad) push mov cltd ljmp popf mov sbb mov loope xorl add roll aaa lcall xchg rcl xchg (bad) in clc inc sub test andb jmp push sbb mov sahf or out repz sti dec daa add xor jo fcmovu sub fwait pop cmp out adc scas popa push mov and dec inc push add adc fxch insl mov loopne sbb fistp dec mov fild test (bad) mov jle aaa andl sti (bad) pop mov mov jecxz sub pop xor xchg sub int fldcw xchg hlt adc inc andl outsl push pop adc mov push or enter (bad) sub loope dec mov push add xor cs or ja pop xchg sub cmp lods ljmp leave sbb test and sbb lock pop lock xchg pop adc cli lcall cmc fs push fwait lret clc cmpsb popf dec xchg push or dec cmp pop les (bad) mov aas test popa pop xchg leave sub outsb test jge jbe sbb testl pop aad push dec mov nop clc dec dec dec add ficoml fimull aam jns adc pop cmpsl pop gs mov xchg movsbl (bad) test xor or lret mov push jp pop add mov xor repnz ljmp jecxz sbb mov adc mov sarl enter mov cltd push test jno cmpsb test aad and push daa fldl (bad) lock je jbe jns mov popa jmp clc push or cld insb outsb mov pop dec pop mov mov sub xchg (bad) or test inc and push loope ret xchg je movsl movsb test shll cmp dec mov cld ja jnp xchg xchg cmp xchg scas jg loopne cmc loopne fnstcw cmp dec xor mov pop push (bad) faddl (bad) imul dec icebp fnstsw aaa jno push inc inc cli movsb das mov lahf mov cmc js lock lcall enter faddl ret popa mov adcl and out mov push push stos fadds push js inc testb cmp mov add pop sub xor adc lahf stos or sub push aam adc cld xchg sbb (bad) xor sbb push pop fisubr mov mov lcall cmc pop fistl xchg jae pop in enter mov push fstsw (bad) lret (bad) jg stos xchg mov xchg hlt add pop or outsl movsb dec mov mov mov rcll pusha mov stos push cld sub pop jmp jno push adc mov dec lds push push xor aas scas jl leave cmp push ret push add mul addl sahf mov xchg icebp inc fucom loopne pop mov outsl pusha dec mov cwtl scas or mov pop test push sub in push inc rorl mov idiv mov jle push pop mov inc or aam js aam add push cmp push xchg jnp daa adc and (bad) xor push je cmpsb sub (bad) push or cmp mov (bad) insb shr aad xchg jbe inc xchg mov inc xchg inc fstl pop mov jp adc jns xor mov mov in jne mov orl testl jmp fdivl clc push xchg inc jbe test sbb push or push rcl pushf cld mov movsl data16 out lfs mov jne ja xor cwtl clc or sbb push cmp pop data16 cmc push and ret movsb ficoml inc and arpl sub pop jp movsl pushl stos gs xchg jg rol clc stos push test leave inc push add stc (bad) xor (bad) xchg (bad) mov lret or push xor icebp ds jmp mov imul inc add test jg jbe jno pop xor mov dec ja pop dec sbb in jae push ficoml int jb orb sahf and es sub out rcl adc cmp imul movsb jl (bad) out out mov out repnz xor cmp push aaa sub outsb lea cmc xchg sub cmpsl sbb fsubrl cld pop or sbb jne xor jns dec or pop and jnp sar or cwtl add imul cld rcrb int3 sbb push sbb push or fucomi fdiv fist repnz outsl aad data16 idiv mov dec cmp cmpsb dec (bad) fwait push popa xchg sbb sbb jno push lahf mov jge pop sbb cli test (bad) mov dec inc pop loope cwtl sbb rclb iret mov loop jg jge push or hlt lcall xor xchg or andl popf xchg ficomp cmp push mov inc fs andl push test lahf and xor out enter inc mov sbb cmp mov ret mov je xchg jae bound and fsubrp and jae mov daa add jo lahf (bad) loopne push andb jp test fdivrs aas sub ret sub cmp and arpl data16 into mov jp mov imul sbb aam xor fldlg2 xchg movsb popa ret enter shr dec xlat (bad) sbb xor cmc shll testl lcall xor push stos cmp pop inc xor mov mov clc cmp xchg lea icebp (bad) mov stos ds (bad) icebp fildll adc or popf das rcr xchg sub bound xor lods sub mov pop and jmp or popf adc je push dec mov sub int3 pop xor test loop or out iret push dec mov jp xor movsl ds lret lahf or sarb and jle xchg mov push push mov mov jp aas out cs in add adc cli leave dec iret sti cs add adc adc std cltd ficoml push (bad) leave inc sub jp xchg mov inc (bad) iret dec pop xchg push daa test xchg cvtpi2ps mov and mov push mov mov or push lcall mov push outsb scas sub ja pop adc shrb and out jecxz inc xchg out out out cmpsl clc popf int3 dec adc xchg mov (bad) out jbe in push cmp pusha dec add mov (bad) pop outsb (bad) dec (bad) jns xchg lret mov inc mov scas stc rcll cmp fcomi pop daa pop jecxz sbb pop dec shl stc std and movsb popa mov mov lds dec adc jmp stos push mov and mov mov jno mov inc xor adc mov or push lret sub jle mov pop or arpl jge fcompl and cmp jno ss lock sub xchg sub push fimull packuswb sahf leave mov lahf aas pop add shr jb movsl mov lahf adc push mov and adc add mov jno xchg xor push xchg cmp jmp or fisubrl push testb or cmpsb xchg push dec ret sarl test xchg mov sbb pop xchg enter xchg xor (bad) jo popa mov int lret (bad) (bad) lock xchg sbb ds sbb lahf pop fisubr push and outsl cltd or sub cli push mov add mov icebp test cmpsb stc lcall pop test sub mov cmp xchg dec popa and dec inc adc jmp sbb xchg movsl insl jne sub xchg mov push rorb and xchg mov sbb fnop sub bswap xchg push jno mov xchg xor ja stc mov rclb out (bad) cmp dec outsb cmp jl mov and (bad) repz loope xchg fs test sbb fistpl lds mov je std mov sbb mov stos jp fcomps add fsubrs sbb mov in or lods call push call into out scas push sahf or pusha sti pop and pop inc sub push cmp pop data16 (bad) bound mov lods fisubr pop rclb cmp insb outsl cltd jl mov test mov fidivl jno sub xchg jle cmp pop std aaa lahf js mov ficoml or repnz les sub xor sub cwtl xchg out enter adc sbb dec or cmp lock mov lock jmp dec std cwtl xchg adc xchg in or daa adc cmc pop dec or sbb mov aaa subl xor sti scas pushf inc js lcall jl jp mov xlat pop sbb mov xchg xor pop shlb xchg inc in jmp (bad) outsb stos stc mov pushw and and rolb mov push push pop adc cwtl les adc sbb mov sub jecxz xor fiadd scas icebp push imul cli xchg stos in das fdivs bound jne in int mov pop cmc repnz ljmp faddl mov pop sahf addr16 jnp mov mov dec add mov inc jae cs jmp pop pop ja cmp jmp imul ja fimul call mov sbb out xchg jns cld lods xchg mov lods fwait lret nop sbb pusha xchg out cmp test dec jno aam lds scas jne sub cmpsb addb sub pop (bad) xchg mov fsubs scas mov mov jae in pop lahf add pop outsl push jbe mov (bad) fisubr cltd mov cmc adc fsubrp jbe jns mov pop sub ljmp lods in dec add add mov test pop in pop jbe xor pop stos aam loope sub xchg xchg repz add sbb cltd cli (bad) sarb shr das int sub pushf mov mov fcmovu outsb sbb mov pop cmp add or mov stc xor xchg adc adc cmp cmp imul dec imul lahf outsb test cs (bad) loopne add push push es jg sbb rcrl mov imul ret mov hlt xchg vzeroupper inc stos inc or dec cmc insb sti inc sahf xor push push fisubr or push clc cmp push mov je mov cmp push cmc lods test mov adc (bad) cmp nop mov push sub push adc and sbb lods nop mov scas mov xchg xor (bad) add mov call divl repnz mov xor sub jbe sbb dec jae xor jecxz mov mov mov dec fcoms movsl push cmp cld enter xor data16 cwtl in out jle (bad) sbb mov xor pop ja fbstp or clc pop and add mov test lahf jge rorb sub ret push sbb jle adc xor xchg pop (bad) stc test (bad) mov ret fs adcl enter push lahf xor cmpsb push sub mov jbe les loopne,pt jnp sbb test cltd sub dec frstor clc mov idivl mov mov mov popa mov push mov sub inc aad inc sbb adc roll or ss inc ror sub shll scas rcll jae cmc ret mov cmp cmpsl mov mov sbb out fwait movsb mov mov dec pop insb daa xchg adc and (bad) jae arpl xor cs add jg xor mov shlb mov jp arpl aam adc clc (bad) push inc pop je int iret cmp jae movsb jge in xchg pushf inc sub jecxz jmp mov lahf dec or and adc jno lea data16 pop push mov aaa sbb adc fnstsw mov stc fistpll jl lret imul mov fdivrs or jle test jl or xchg push xchg jns fldl jl rol flds adc ljmp fwait adc xor xlat add xchg lods sbb cltd outsb in loope insl inc push jns (bad) xor mov int pop ret cmpsb aad inc gs sub ret xchg ret iret jae in xor mov cwtl (bad) aam cmp pop dec sub and ficompl movsb mov mov (bad) mov xor xchg xchg sbb rcl jo jns inc mov cmp cmp out jle mov or shrl stos iret lds test xchg inc stos xchg push add sub jno jb,pt dec mov fs in mov cmpsb out push jne int jbe cmp add xchg js jge pop (bad) mov dec in in push lods lret mov cwtl (bad) out test or adc jae push iret or or xor rcrl addr16 sbb jle jp push mov (bad) or loopne loop dec adc xchg mov sahf sbb clc (bad) xchg pop bound inc ss sahf hlt adc in std (bad) jo fnop bound mov loopne jb lds (bad) lret iret adc sbb lock outsl test sub sti mov negb push pop cmc mov (bad) leave adc and mov dec loope adc out negb push jbe call push aad push scas stos popa cld sub (bad) call cmp cmp mov imull xor dec cmp jae out pop sbb outsl add and ljmp push lds xchg mov fdivl mov add pop adc xchg mov mov sub or cmp shr sub jmp out pop dec popf pop call test jmp mov ljmp lods in cmc lret pushf dec fsub lldt and test sub mov mov shll xor lret out adc inc mov int3 daa (bad) hlt xchg out into xchg inc (bad) xchg andl repz pop xor (bad) stc rorl or jl jecxz push jle or pop mov dec int3 cmpsl pushf lret mov jns inc testb xor or sahf aas jno in clc dec cltd mov les adc stc sbb out cmp insl stos jecxz,pt lods dec pop xor stos repnz sbb sahf cmp jo repz ret inc mov mov mov cmp mov pop jno dec sub lret js leave ds sub das pop or pop daa enter jecxz fbstp outsl pushf jo loopne popa adc sti aaa xchg add xor icebp sub les mov outsb push movsb dec jns movl es stc add sbb push mov jge pusha inc push mov (bad) mov popf lods jbe (bad) fistl adc out fisttpll aad adc pop xchg lahf mov xor leave mov lret inc sbb mov mov pop mov mov xlat push xor ljmp xchg inc add iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz lcall add jg fs fisttpl add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add jp add add or or add or add add add pop or add add mull add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add cmp push js in xlat add mov mov (bad) insb (bad) fwait adc push (bad) xchg scas add add add les jae mov lea jo inc insl fstpt jns sub (bad) loopne insb pop and mov addr16 lea mov adc inc pop (bad) es je imul adc mov stos pxor and cmp mov (bad) insb mov popf pop rcrl sub push cmc sub sbb sub mov mov fnstcw xchg pop jb int inc cld ds cs xchg jg jge (bad) jecxz hlt js das pop flds push lcall fldt out inc (bad) std sbbl or fnop inc (bad) lock add adc insl sbb das loope inc fnstenv testl cmp sub cmpsb sub out test jg cwtl pop jo xor and mov loope inc data16 stos add inc negl inc pop mov aaa mov or adc cs fstpt cwtl ret test lfs fnstsw movsl pop rcll test int mov int3 mov repz jge out sub jge,pn hlt (bad) icebp or int3 add jle xchg mov xor dec gs cmp and scas adc (bad) mov push fistp sbb pop les clc lret test push cmc push pop lock in lods pslld popf pop mov adc inc mov fistp ljmp es xor loope xor in aad xchg pop data16 inc jle aam pop ss shl fbstp push jg dec jbe mov xor (bad) pop mov inc popa (bad) notl (bad) lret push in cmp and call loope mov arpl movsl (bad) pop sarl push push repz in iret (bad) cltd repnz gs jle dec push loop jecxz sbb lock pop mov in divl icebp loop lock ficomp roll mov push jmp sti repnz jp pop adc dec add int pop mov ret dec xor xlat outsb aad xchg sbb (bad) outsb xor adc inc lcall incl and roll in fistp sbb and xchg into jmp xchg jle (bad) mov sahf out mov jmp jno ret lret pop je cmc xor scas fiadd and sub pop pop movsb pushf stos inc fcmovnb test data16 (bad) icebp sub sub xor pop stos cmp fcmovb sub fcmovb mov lods add (bad) stos rclb jbe or sub cmc jp negl mov loope xchg popf cmpsb sbb rcr movsb mov inc jbe scas repz or lret dec and xor mov cmp mov jne mov gs (bad) jae enter popf mov ret aad cltd ret mov rcrl (bad) dec sarb rcl pushf adc nop je xchg dec mov fldenv jg and dec mov and fnop inc insl mov or enter ret dec or popa push dec cltd dec test jle outsb xlat push push pusha jle jb lret int3 jle pop test (bad) sti inc push not fcomi or adcl cmpsb xor xchg inc sbb inc movsl hlt mov daa sar in stos ss fistpll sahf mov push mov lret cmpsb (bad) repz outsb xchg adc ja fistp add push std int3 dec outsl shr sbb arpl mov cmp jae jnp inc repz jno add inc mov mov stos outsl out fisttpl fdivl mov mul pop in cltd call shlb mov add xchg fbstp dec pop imul mov jl mov add xor mov push sbb and dec fildll inc adc pop xor mov les and dec adc add mov movsb enter in lret sub daa or loope clc fbld push aam sub mov sub cmpsb inc movsb in lahf ja dec push mov inc fcoms popa pop lock popf mov shlb dec pop inc mov jl std mov cmpsl jecxz das add pop mov (bad) cli jo cwtl cltd rolb xor mov mov negb dec xchg mov cmovns cli jns xor xor jns jbe inc lcall lods fcmovnbe push adc imul xchg (bad) or in pop pop gs add sub xchg pop out dec push push hlt jno ficom iret jns inc mov jge jmp jmp mov and scas xchg test mov adc dec or xor adc mov mov cld mov lret (bad) xor in jnp sti popf (bad) fsts mov gs ficoml ljmp cltd push ret clc daa cmp fwait add dec inc mov push (bad) mov test mov data16 popf loope xchg push xor jne and fs mov int (bad) fs js addr16 dec pusha jle fdivrl sahf mov (bad) cmpsb and xchg dec mov mull jns (bad) push (bad) pop or add repnz dec popa or lcall js pop mov into add cmp ljmp cmp loop mov xchg inc mov cmpl jb bound (bad) fistpll outsb aam shrl dec std mov enter pop xorl idivb push mov nop add pop inc movsl mov push out lods pop scas jg std pop or lds mov addr16 pop pop lds adc shr dec rorl call xchg add mov (bad) cmc add mov mov sub shl mov popl sahf scas push push push lcall sarb popf pop and mov imul xlat mov or fisttpll mov sbb in sub pop jl mov sbb mov test pop (bad) xor jnp mov pop in adc xor jne jmp jl (bad) xchg dec sub jne mov lea in mov cli pushf loop mov outsl xchg jb iret cmp push int xchg pop jp pop es push into adc push dec jl xor push aaa mov mov popa nop xchg xchg push daa inc bound dec test lds push repnz xchg inc mov out mov repz cld fistl mov xchg xlat psubd mov insl sbb (bad) loopne pop xchg imul and push ret (bad) xchg mov leave sahf test das or or popa test (bad) jns insb inc rcl mov orb movsb dec test sbb test (bad) rclb nop mov adc hlt mov inc cld fs sbb clc xchg mov cmp push mov aam or xor pop pop adc cmp mov jne and jno dec lods sarl jno cmp aaa arpl or lret xchg fs mov stc lods fidiv mov push dec cmp jp mov adc lahf add sub adc lcall xor jl jl movb addr16 sub sahf je jns sub fistp sar dec pusha mov push xor sub adc adc inc fucompp das cmp psubb pop push jl dec roll push cmp jo add cmp push jnp frstor or sub xchg aaa lret mov inc inc jbe inc ficomp outsl xor and sub jno ret and loope js insl add dec stc bound jbe xchg mov mov stos xlat xor stos dec mov mov fs add stc inc in sub or sub mov pushf mov xchg (bad) cmpsb mov mov sub (bad) mov ljmp (bad) imull jo cs sbb inc cmp (bad) jo lock sub jae mov inc fstpt xchg cmp push adc cmp adc cs add stc sub dec jle inc sbb adc or mov xor xor popa lds stos pop xor xor inc (bad) aaa enter dec xchg repnz ja,pn push lret adc bound mov insb inc je sub loopne imul inc push insl xchg fnstenv lods push daa mulb xchg out call shlb xchg xchg xchg gs or cmpl inc fwait inc or sub dec xchg or jo add xchg pop xchg in adc int jnp mov divb outsb std mov fsub lahf repnz lahf fwait inc sbb jbe jp jne in mov mov pop pop imul sbb aam pop jb add xor imul jg xchg xchg clc jb push or cmp sbb mov mov pop mov lds dec int3 sub cmp or in je inc sub cli aam clc mov inc adc cmp xchg inc sbb jecxz rolb lcall push inc xchg xor jg arpl cmp cmc popa es js insl addr16 mov push sbb sti movsb mov pop sbb or mov ficoml neg stc sub mov (bad) out adc repnz popf dec pop dec push push imul ret push jno shrb mov or jg ja cmp sub or mov push sbb repz cmpsl inc sti jne gs mov rcrb xor mov or cs lds and repnz leave lods sub negb mov (bad) sbb or shll aaa scas xchg std mov (bad) lcall add adcl mov jle fadd in out out pusha cmpsb movsb loopne (bad) rcr jl sbb rcll sbb (bad) push in cmp mov push sbb outsb test mov dec mov ret loop call cmp int3 (bad) psubusb sub adc sbb sbb in jbe bound int3 add xor sbb mov jne push lahf dec mov adc jo popf clc mov mov mov daa cmpsl sahf push scas sub xchg jecxz out jnp scas jg add xchg dec pop xor test hlt pop vpackuswb dec mov sub add fcomps mov lods adc sub mov loop ror mov je push popf cmp fistp pop cwtl xchg enter push add pop repz mov ret jp inc adc pushf arpl cmp push lret rcrb add outsb push hlt popf fistl add or push xchg or add or inc (bad) sbb rolb repnz adc ss mov add rorb xchg int3 fwait xor dec jp test pop adc xchg cli pop pop popf fdivrl and or sbbl and push lea iret jne sti adc test lock in fcomi in hlt xchg jns outsl in (bad) mov hlt cmpsb loope imul xor pusha stos add inc clc sub xchg scas lods cmp push nop cmp imul ss sbb inc cli mov aaa or je mov in dec pushf out mov pop cmpsl pushl cld cmp repnz sbb mov pop lret add jo jno push mov add std mov (bad) imul repnz (bad) cltd mov leave pop rorb sub jp push rcrb (bad) adc dec lret ficomp pop sti or cmpsl adc inc add push inc add jne and adc sub sub (bad) cld xchg repz jecxz (bad) mov cmpsb idivl cmp cwtl lahf adc add jns aaa sahf shr sub lods add stc out jmp jmp or out cmp cmpsb sahf push mul jge push ljmp inc xlat fwait sarl dec stos fidivl jb dec cmpsb arpl xor stc clc sub rolb arpl xor push daa pop scas push inc enter sbb loop or mov pop xor xchg stos mov pop fidivr out and loope cmpsb pop mov mov mov loopne sbbb cmp ljmp paddsb mov arpl loopne je xor int rorl mov xor mov imul (bad) fistpll push daa jne fdivl nop xchg arpl jbe (bad) imul scas pop adc fucomi out aad add loope int imul ficompl push and dec pop jl sbb (bad) cmp cli sub xor jl mov outsl push inc (bad) scas jne add mov jge mov mov pop mov adc enter (bad) jae gs imul pushf rolb jae out sti jmp xchg (bad) pusha cltd cltd pop jl pop mov pop pop (bad) pop jle insb mov mov les lcall push das pop cmpsl xchg pop test push mov (bad) out mov jne outsl cmp or pop in sarl test dec xor xchg out push icebp dec js sub gs imul test mov sar ss dec lock mov inc in inc pop push (bad) das addl sub lods xlat dec cmpsb roll (bad) imul xchg das sub insb adc dec addr16 test xor std lea pop sbb mov gs addl lock popf or jg and lods dec jecxz test jecxz push daa push scas push sbbl cltd (bad) push frstpm(287 leave jg jecxz inc mov imulb pushf je dec (bad) icebp mov push mov pop ljmp (bad) push movsl lods fiadd xchg cmp pusha ret cmp stc dec ja jmp pop mov in fistpl push xchg pop (bad) cmp mov or mov push iret lds cmp cmp repz fdivl adc fs dec pop cs daa or inc adc test push dec in int mov xor and xor sub push mov call outsb stc lds pop daa cmp mov and xor imul out ss das dec (bad) xlat lcall test ljmp jp cmp inc mov add add pop daa add jno pop pop cwtl cli out pop movsl cmpl pop sahf add adc jp int3 lods les cld inc test std subb cwtl push adc dec aam inc loope jecxz xor ljmp mov and in push (bad) jnp cmpsb fcompl into rcll lods out push (bad) insb cmc add sub ss insb aaa icebp adc sahf jp aas xchg and fiaddl iret repz iret ja sub sbb sub shll sarb loopne and fisttp into cmp out scas aam ret jle dec sub pop test mov mov inc push out and push push and dec mov fs and sbb jo pop and cmp jge jg or xorl (bad) sub add or sbb sub mov inc std cmpsl out fildll add cltd fsts insl mov sub pop in subl jmp pop xchg cmp mov push fwait mov push pop add xor xchg fwait in mov dec push in lret sbb mov push jbe orb out pop jecxz insb jo sub jb arpl or xchg mov sub jb xlat push clc movsb xchg mov bound or iret dec addr16 cmp sti mov scas add gs cli sbb inc movsb ja adc jno loopne or push push lods jae mov pushf pop add mov jecxz dec insl cs inc mov aam mov adc testb dec aam test adc or push pop pop jns or mov test addb in add mov push xchg test pushf xor loopne cmp hlt adc fisub stos xor mov (bad) jo xchg pop xchg xchg mov push std mov cmp adcl cld in fnstsw cmp fwait mov sub in dec pop popa call sbb jmp add mov add lea outsl sbb sub ja test inc lret jno lock xchg dec mov xchg inc xchg inc mov jg mov pop lds xlat sbb ljmp ret jae sbb adc cmp ret xchg xchg or stos dec mov das dec jo sti cmp in push test fsubrp sbb mov adc sub insb dec je cmpl push aaa xchg mov mov mov out (bad) je mov or mov inc (bad) push sbb stc mov jae insb cmc push idivl scas push pop pop xor lock imul xor adc cmp stos sbb add add inc push mov aam fdivrs jg pop mov loope sti jnp cmp pop jae,pn xchg mov or test repz fwait pusha xchg xor pop mov jl insb and fbld mov cld movl sub mov testb jns or lock (bad) iret mov pop cli lret inc je fsubrl sub jbe pop (bad) fcoms add mov arpl cld bound pop cmc adc pop jecxz leave add test ret lret lahf mov fsubp aas cwtl mov out sub (bad) pop in mov outsl push push cli test pop fsubrl mov idivl mov sub cmpsl xor fmuls dec sub and xor (bad) dec popl mov data16 and adc jns adc out fcmovb ret out sub jmp sub (bad) aaa into dec push mov outsl mov rorl pop jo dec mov cli imul xchg pop add ds mov mov pop icebp dec cs cmpsl cmc imul (bad) lock pop pop std inc dec pop jecxz push add sbb inc addb xchg call stos and pushf mov or aas mov xchg and and lret lods mov or es gs out lret inc pop pop dec sbbl sbb xchg push pop xor push xor pop dec sti insl je daa push push xchg into xor cmc lods mov pop pop movsl in out pop adc add out jp out mov mov lea imul or xchg clc inc lods inc and jne (bad) repz cltd lods loop imul mov push xchg cld repz mov fimull cmpsl hlt cwtl cld xchg cmp cmp jg xchg rcrb mov mov pop pop negb mov lahf xor mov dec movb test mov cmp or mov push inc stc xor arpl insb or imul (bad) sbb stos test cmpl cld cmp repnz jo cmc pop xchg push fstl mov lret push rcr fwait mov lcall (bad) xor sub std cwtl cmp adc push inc mov xchg xchg cmp xchg jge aas and icebp fs js mov scas test leave xchg pop mov in cmp (bad) fcmovb mov cmpb sub xchg cmp sub imul test outsb cmpsl inc sahf xchg ret mov loop pop lfs adc aam jecxz leave xor pop ljmp shrl inc cli out ja rcrb dec ret (bad) mov xor pop cmp rcrb mov es pop sbb mov jge dec xor test mov sbb mov mov add outsb insb jecxz shrb inc aad mov sbb mov das cli mov orb dec scas mov xor push xor xchg clc es cwtl mov outsl std jae and or sub inc clc shlb mov push jecxz adc xor mov mov mov cli mov pop mov cld std lcall insl mov int add cs adc out into shr cld stos lods xor int3 adc xchg mov faddl les xchg movsl shll mov out and addr16 sbb mov dec mov dec sbb add mov dec xchg vpackusdw dec push (bad) icebp hlt fistl pop mov out pop cmp ret out or push mov repz mov sub xor sbb ljmp xchg scas xor insl das (bad) sub pop cmp mov mov (bad) and cmc bound or outsb pop or mov sub out add push mov xchg ja pusha bound call sub pop push ja xor cli lret enter hlt xlat push fildll fidivr add and fcmovne das insb adc cmp out aad ret int xchg mov out and es pushf mov loopne mov xchg stos push adc outsl jg es or mov mov scas mov sbb mov add fcomps inc mov testb xor jg mov adc lds (bad) cmc clc lods mov pop hlt sub sbb jecxz push fsubrl sbb mov icebp mov xchg test (bad) mov lods sbb sub jmp pop adc push sbb mov push aam sub pop ljmp outsl stos je inc xorl out mov ja sub dec rcrl cmp fs ret data16 inc (bad) movsl jne daa neg add pop enter pop inc push mov out mov ljmp test stos mov lret lret and cmp movsb and imul data16 das movsb cld and dec lock pop ror dec jb jae cltd imul pop aas add mov push or pop sub or movsb jnp out or pusha std xor jmp shll ret mov in xor sbb jl or push add mov mov sbb cmp cmp sub mov adc sbb pop lea xor movl or mov (bad) xchg dec add push cli loopne test xchg insl pusha sbb inc pop les dec out or pop decb cmp cmp in and sbb mov shrb call (bad) test jp inc mov js iret xchg jmp fidivl and or jmp pushf sbb sar lea sbb data16 pop jno daa (bad) jbe scas mov ss inc xor cltd or dec or inc dec cwtl or dec (bad) insl mov xchg nop mov leave jo or cmp jno movsb inc icebp fidiv adc test cmp call inc iret xchg fs adc mov sbb (bad) ret pop mov push cwtl leave jge icebp push xor dec sti xor jecxz lahf xor test jnp gs lods gs outsb fsubrs sub (bad) mov inc inc ret mov std repnz outsl and aas inc mov lods aas push sub jno (bad) aam out out test mov xchg xlat dec scas cmp cli add inc push sub rol (bad) fisub sbb fidivr dec mov mov into add stc push push je mov and cmp mov lcall sub (bad) jno pop cmpsl dec imul mov push dec in out rcll arpl movsb imul xor sub inc push stc popa push push rcr jns sahf fnsave cmp dec enter push xor fcomip dec inc mov fcomps lret iretw loope or mov mov pop (bad) xchg mov (bad) xchg sub pop sti (bad) jb or pop cmpsb mov mov iret insb je cs jae out insb sbb mov jnp (bad) gs pop push outsb jmp popf orb ds daa sti sbb mov incb mov daa pop dec lods bound push mov hlt test xchg pop std lret cld mov cmp cmp daa test cmp (bad) aaa mov jne dec lock inc xchg imul in (bad) orps xor or fucomi add xor sub popa sbb push mov or inc sahf insl test jmp add in fistpl mov mov cli cs addr16 js pop out test sbb ret aam mov jnp clc test inc xor lret cwtl adc iret mov in out adc mov jae movsl sahf out aam in insb test das xor dec int jecxz xchg clc adc lcall jmp push xchg cld dec dec fistp lds xchg add in xchg scas mov cmpsb (bad) call stos jmp pop cs (bad) loopne mov into lcall add or push in mov (bad) jne mov dec pusha fwait (bad) xchg (bad) push mov and jno pop and popf mov sbb fwait inc (bad) js or hlt cmc outsb mov insl xchg or jle fisttpl ljmp push shrl incl and lret ret mov ret xchg addr16 insb repz imul add lds fcoml inc pop test dec fidivr stos lods dec adc leave imul in jmp or dec dec adc mov cld xchg aas inc repz push or xlat mov shrl xchg sub in or fstpt adc inc lahf lods cmc xor les sub mov cmp push and cwtl pop into mov shll movsb sbb insl test xor xchg pop sarb int test loope mov sub pushf fstps fs mov jnp push push inc cwtl xchg loope push cmpsl adc mov dec push push mov es scas and sub push xchg scas test push mov mov iret scas push repnz mov xchg test (bad) imul (bad) or addl fs loop aam (bad) insb out pop xor jmp and inc (bad) mov outsb push pop xchg push mov sub test imul push mov xlat xchg icebp xchg sub pop ds mov call fldenv mov sbb repnz pop sub push fnsaves test push cmp lods xlat cwtl je push mov xchg adc adc inc push mov push (bad) xor sub mov pop test getsec (bad) je cmpl jbe and (bad) lods in addr16 fnstenv pop call inc mov jmp push adc test dec lods xchg ljmp lahf adc adc sub push and vpshufhw mov mov push rcrl xchg rcll inc out push mov call adc add fisttpl mov mov rcrl or in fucomp mov pop jmp push arpl cld (bad) loop and xlat int3 or clc xchg call les aaa andb xchg xchg sahf or ja cmc jp cltd je dec (bad) mov lds stos xchg cmp lods cs int3 mov cmp lock mov xor and mov add out icebp inc mov jl xchg pop cmpsl cmp sbb imul inc adc push jne and vmovss xor or mov and enter punpckldq and int pop scas add jnp dec outsl test clc out leave mov sub add lock mov mov xchg sbb sub inc and jno ds (bad) jl jo lds inc add dec loope (bad) outsb mov xor xlat out (bad) mov stos xor out sahf (bad) icebp and dec sbbl pop push mov inc rcl jge lret addr16 inc mov icebp jnp movsb xchg div scas dec cld mov fldcw mov jg pop call inc popf hlt (bad) outsb mov pop test jae cmp test cmpsl dec mov xlat lock and mov inc and push dec jae mov adcl call or push test int3 mov test mov stos fsubrl test aam dec mov sub sub fwait mov dec jbe mov daa inc popa cmp add mov xchg mov subl mov pop into out outsb fcmovnu push mov ffree mov rorl jns adc pop lds pushf push jecxz or xchg icebp add push mov xor mov shr mov shl movsl movsl mov mov push sti shrb jb push gs sbb pop mov mov js pop mov out pop add ss in cmp inc lcall or lret out sub xchg daa sahf jae sbb mov cmpsl mov and add xorl xchg mov lds (bad) cmp aaa push fdivrs inc loopne repnz xor in nop icebp cmp mov cli jno jge dec pop insb sub aaa aaa inc and rcrb std dec jmp fwait jp mov sbb sbb jbe xor and mov push add enter mov stc pushl call push sbb inc clc mov (bad) pop fidivrl pop mov lods neg sbb ja jo mov std or pop mov das pop sub sub sbb or push ljmp ljmp xchg push aas mov push sarb inc in stc scas mov stos cs (bad) jnp and lahf xchg inc add dec and (bad) std out jl mov dec addr16 fisttp mov lock xlat jae leave jne jbe outsl jnp clc out data16 (bad) arpl (bad) lcall adc (bad) enter mov dec lock pop in scas aas les or sub add cmp pop aaa mov adc idivb ret lods sub mov pop and int3 outsl xchg (bad) mov jl scas xor fcoms or xchg jbe into xchg sub xorl pop cli pop fcomps (bad) sub out stc push cmpsb mov xchg sti pop jl out scas xorb mov (bad) inc rcrb sub add f2xm1 bound sub movsl int3 mov xchg jmp and mov cld mov xor and std pop push popf inc adc sub pop int3 rcr insl icebp add ret cwtl cmp mov dec fimul or mov cli rcl popa outsb sahf or and pop scas aaa jne fs mov jno outsl or mov (bad) jo dec mov je cmpsl mov fdivl clc outsl sbb outsl mov add mov cltd (bad) rolb jns pop mov xor pop dec cmp xchg int3 dec js dec and out sub and cmp outsb push scas adc stos mov dec inc cmc or mov xor jae,pn (bad) hlt xor dec fwait xchg sbb mov stc psrlq loope rclb clc jbe lds movl xor aaa fistpl push mov sub mov cmp fs jno cld mov add push or (bad) cld push sti pop dec lods jl roll scas scas lock mov add push jecxz sbb jge hlt xchg arpl adc jns hlt lcall std cli push sub mov out loop or pop rolb mov inc aaa push lds cmp mov sbb xor xchg fldl inc ss repnz and test (bad) es pop jl pop fiaddl xlat clc mov xor jge dec ret xchg lret mov stc inc scas rclb pop pop push neg test push pop mov pushf pop add adc pop sti dec lea or scas ret mov outsl mov stos dec inc cmp push add sbb push sub lret mov out divl fstpt pop and or out mov enter pop enter mov inc mov and repnz cs mov daa out xor push mov push (bad) (bad) cld pop ret or inc jp sbb repz cmp and dec xchg into aaa push int mov and lret adc arpl sbb aam std test out test jns int3 mov xchg dec sti cld sahf fsub loope dec rolb inc syscall popf sub lahf add cmp xchg das jae mov stos ret jb inc (bad) xor dec test jge cld sub adc fadds in xchg mov adc iret pop xor dec lcall aaa xchg or imul dec and xchg fidivl pushf push (bad) lret ss into push mov add aaa pop (bad) cmp and and xchg pop push es inc ret mov xor inc ret aaa xchg movsb inc sub daa scas shrb push xchg rorb punpckhbw out pop mov push or cmc pop sbb lcall mov or xlat leave xchg mov xor sbb mov les sub es mov lods and pop xor decb outsb insb xor add sub mov sbb jg pop jmp (bad) jae pop jb into mov icebp mov adc insl mulb or add int mov xchg lea (bad) stos adc pop dec mov xor rcrb mov mov inc int3 xor mov sbb div dec xchg or es lods lcall lods inc push dec leave out push pop arpl (bad) lret fdivl in mov je push aam movsl cmp dec fnsave (bad) mov inc (bad) and (bad) push cwtl add mov cwtl gs (bad) leave mov (bad) jecxz leave lcall in in test pusha mov inc outsl iret cwtl and jg rcl (bad) and mov cmpsl jno sbb mov pop ljmp jl xor xchg xchg pop push jo into ss aas cmp call mov (bad) jae inc mov cmp mov pop mov ljmp sub shl or add and pop (bad) inc (bad) jge rcrb aas notl mov aam arpl mov xchg outsl mov mov dec por fidivl fnsave dec xor sbb cmp pop inc and pusha pop aam xchg jbe mov cltd loope inc inc stos push insb pushf dec fistpll fsubs mov pop inc and fwait or mov fist jmp stc gs out inc jb and inc or push mov mov mov clc in push sbb and mov (bad) ljmp arpl mov push jo mov (bad) xchg sti int js cmp rcl or incb ficompl ret outsl (bad) js popa pop pop lcall cmp push loope xchg test scas pop cmp rcl shrb adc popf cwtl pop (bad) leave sub add sub dec mov (bad) mov pop test stos fist adc lahf cs sub test fisttpl jno scas jecxz das jne xor sub mov dec out lds std cmp scas adc pusha mov jne xchg out xor lahf popf aaa cli xor fldl2e cmp lret push int mov test xlat inc fldl pushf jae sahf cld mov cmpsl test call negb sbbl inc int rol loopne imul mov push fisttpll ror xchg enter movsl out jae lods (bad) xchg push mov dec movl daa lret push insl add test lret aaa jo lret or pop mov jg push bound repz imul leave lds push (bad) out les mov jge (bad) (bad) mov mov dec mov imul mulb lods pop xchg aam sbb cmp mov adc js jl aaa ficomp lods push pop mov test popa cli in adc mov mov lcall cwtl js aad fadds ja xchg mov mov call sbb cltd dec cmp push out dec std dec push xchg dec push adcb je js es in in cwtl scas es inc pop dec xchg mov lret rorb push cmp fstps adc inc imul fwait pop lock inc imul pop (bad) rcl mov aas (bad) clc scas xor (bad) scas cli pop shll jmp add sub xor push mov js xchg or jmp nop ljmp fs xor adc inc sti les call mov aad arpl hlt xchg (bad) int3 cmpl push fmuls mov imul movzwl xor xchg push lods imul hlt xor ljmp lret pop add (bad) fucomi pop fs mov repnz (bad) xor insb and adc mov pop test (bad) (bad) daa push xor and push jae les rclb push lcall xchg dec outsl and mov jne fs (bad) ss adc cmp arpl rolb xor ja xchg mov sbb in mov add cmp insl mov cmp sbb in and loope,pt pop sbb daa scas jmp cmp lcall sub sub out jg imull xlat lcall lret pop mov je push xchg dec and push sbb in or xor rolb mov addb cmp cmp cmp stos mov scas test std adc fild cs cltd pop mov jmp dec rclb or int jge pop mov mov jo inc mov mov test push mov add mov or enter adc and ja inc call fiadd ja sbb shll ret in inc push or mov sbb fldt ja xchg mov jnp jnp cmp inc lret fildl stos mov addr16 mov and pop pop mov pop mov cld aad jne push mov xchg shrl call and repnz mov les mov lret fwait stos fsts jge mov add nop sahf mov adc pop gs ss js lret pop stos sub in popf arpl (bad) fsubl push mov mov leave or call ja cmp repnz outsl bound xchg call pusha mov push mov sbb xor jns nop jecxz lds xchg mov jg mov aas jecxz inc das js pusha sbb scas (bad) imulb sbb jnp push jmp (bad) pop clc test (bad) mov call ss mov or jnp outsl cmpsb adc sti add jmp pop jmp scas adc mov icebp dec loopne mov ficompl popf inc mov andl into (bad) dec mov in leave sbb movsb cmc jmp fnop and and bound ret cmp pop enter leave dec (bad) lock push ret shll out pop cmp mov adc xchg fisttpll inc jae movsb shlb fisubl adcl (bad) mov cmp cmc push xchg (bad) rclb mov pusha mov mov xor inc stos mov lcall lret icebp xor cmp mov dec dec lcall push ret movsl leave test pop loop adc mov pop cltd fnop inc lods (bad) jg xchg add arpl inc cmpsb jge mov fidivr add movsb inc repz je iret cltd outsl add ds pop dec jge push pop popf repz test push inc dec mov lods lods jns pop pop call (bad) icebp xchg in mov cmpsb mov mov sarl inc ret imul pop inc or push mov lea divb sahf mov and jp sbb jmp push sbb dec mov mov jl xchg call fdivp push cmp sahf imul test leave or ret lds jge sub hlt adc cmp pop and xorl xchg mov mov pop pop lods outsb data16 push inc scas xor sbb daa dec insb out push pusha int3 ret je out xor mov cmpsb in xchg adc rorb add mov shll (bad) pop mov aas jmp in repz push dec mov push add in push out or dec inc testb cmp xchg mov loopne int std leave mov mov addr16 repz clc fdivl sbb cmp iret fsubr push rcll loope fcmovb int mov int3 mov push les xchg cltd cmp mov sub jnp and dec in popf int3 jno nop inc push repnz xchg or cmp loope push push into mov loop dec inc imul mov or icebp jecxz sub das insb pop out fwait negb lret dec push sbb fwait dec mov test outsl add sub aam pop adc in fsts adc pop dec rcrl subb test xor xchg inc (bad) sbb adc mov fwait ret arpl pop shrb std out inc das lods ja cmp lods insl negb shr or call xchg in test jns das (bad) push sub out and pop xor fiaddl enter je xor or popf lahf xor inc (bad) or ret enter scas inc ds pop inc cmp lahf sbb das rep pop outsb jbe push mov sub push lods adc lret sub pop and push shr (bad) push sub mulb mov jne lahf repnz dec aam rorb add mov test xchg mov inc sub jno les xchg (bad) push pusha sbb jmp sub ja jns (bad) dec sbb in rclb mov clc push mov insl icebp mov lea jo ljmp aaa les dec lea or sbb cli inc xor (bad) repz gs cld or (bad) (bad) gs call cmpsb std xchg repz sub dec jmp pop (bad) (bad) movsb and movsl sbb mov pop push fmull mov shrl popa adc mov imul scas inc sahf or (bad) lea lock pop ret xlat lods cmp mov (bad) aad in addr16 push push mov or insl insb cmpsl pop dec scas dec jne int3 daa stos cmp gs mov mov (bad) int3 adc nop (bad) (bad) repnz test cmp bndstx stos (bad) movsl xor sub xchg and xchg inc call add test dec or push ja mov call push jns mov adc je (bad) jo int3 inc test and push sub (bad) repnz int sahf cmpsb inc dec nop xchg cmp add ficomp push sub cli orl fldenv mov cs mov jno lcall fdivl sbb adc ss loope pop inc pop push xorl cmp mov nop sbb push dec sar stos fwait movsl test lret sbb xchg pop cs or add push fsubs in mov stos faddl imul aaa popf fnsave cmp or mov dec aaa inc push (bad) push push mov bound imul xchg sbb pop add push jge mov lea xchg pop add add add fnstenv mov adc sub mov aam (bad) inc sti mov xor jbe mov jecxz xor xlat xor jmp in lock cs mov ret mov jle mov insb push es (bad) hlt xchg add pop stos cmp popf lods mov xchg cmp sub xchg out ror or sbb mov dec stc and mov pop adc cmpsb sub sbb adc clc add sbb icebp insb sbb xor jb icebp pushf cmp mov xchg hlt stos mov pop push dec out xchg inc cmc pop (bad) neg test pop jmp dec cmp outsb mov cmpsl pop lret jl adc (bad) sub mov mov inc or in enter push cwtl push pop ja popa mov jno js or idivb mov pop lret push (bad) pop popa pop pop imul jo in push or cmp cmp in add adc imul popfw push arpl call push and cmp nop out pop and shlb (bad) add (bad) cli xor add xor (bad) pop and scas pop mov movzwl or mov sti xor push jle jns out push adc dec enter imul mov popf out dec adc cmc xchg push lds inc (bad) mov mov sub (bad) daa push cwtl xlat sub loop xlat enter mov cmp outsl in ds add imul out inc addl cs sbb les lret sub inc xchg mov mov popf mov mov fiaddl cmp xor sbb (bad) xor out and mov adc xor mov push inc lahf mov js movsl sahf add (bad) mov or or std xor mov rclb insb cwtl movsl add iret js adc pop rclb dec add fldl xchg mov hlt lods in inc pop add out arpl fnstenv test mov (bad) push dec mov push dec xorb (bad) ds jno hlt jo sub pop push mov mov aam push popf push mov adc cmpsb ret pop jns cmc cmpsl xchg mov pop mov aas lret push andb movsb mov pusha dec std jg add jo ret icebp push mov (bad) icebp sahf xchg fstps jmp add push ret fcmovne jge mov lret (bad) mov sahf push int repz mov fsub out ficom pop pop push sub cld add rcll push push pusha sbb inc orl mov sahf ror mov push (bad) ja mov xchg lods mov lods xor cmpsl inc dec add or popa dec andb ret mov mov push ds lret pop mov fsubp mov loopne popf fldenv daa sahf rorb adc mov addr16 lea shlb jo dec mov jg or test mov jbe jge sar pop mov jle (bad) inc add xor push (bad) jbe nop or xchg leave mov mov mov xchg arpl fsub jmp jecxz outsb sub leave lock lahf or lods icebp sub movl adc out jmp cmp lea mov sub push mov scas repz pop push das pop stos in inc fwait scas dec inc add jecxz mov scas arpl imul or dec jecxz jo incb repnz je in aad xchg mov (bad) mov jg in or movsl pop repnz popl sahf lahf xor cmpsb jmp lock (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret decl add aas rcr pop es xchg add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add jl add add or or add or add add add pop or add add mull add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add cmp push js in (bad) arpl or add adc mov (bad) insl mov sbb insl mov mov cld cwtl sbb sbb add mov add push lods cwtl pop push mov daa sahf or js pop test sbb or cmp adc dec lock jl jmp mov int3 das pushf mov sbb and psubusw jg and mov mov cwtl jl push cmpsb cli push mov inc into hlt adc mov jns mov jp daa cmp sbb inc bound adc dec lds push je jp orl add jnp mov dec push pop subl cmpsl dec sbb out fldl sub jmp pop lahf lds (bad) xor or sbb repz mov lods jbe jge mov cmp or cmpsl push test cmp (bad) jge inc lret enter and insl adc loope or sahf fcmovu ljmp adc dec in xchg pop pop into pop xchg add sub shl rcll lds dec mov xor jecxz stos xor mov and sbb inc fdiv pushf mov mov mov mov lcall inc clc addl daa and orb out negb xchg fmull ja ret (bad) dec js,pn ds clc insl jp sub aad icebp pushf mov and jo hlt into xchg out cwtl js loope sbb lcall imul add cmc xchg mov je cmpsb or loop sub jp mov (bad) adc and ret push or push (bad) pop rcrb cs push or mov or ljmp psrlw paddusb pop pop push aas mov mov sbb mov adc lret mov sub or jns mov (bad) xchg mov jbe fidivr pop jge sbb sub push inc inc xlat bound inc insb and mov push pop xchg outsl lock int pop das mov or xchg mov fld dec in cld in mov js add jle jecxz rcrb xchg cmp dec cmp pmulhw mov test mulb rolb pop ret cld and sahf fsubp cmp or xchg dec iret enter mov pop ljmp popa test mov add in mov pop mov cmp ja arpl jecxz inc fistp aad pushf stos push mov add cwtl or jge pop adc xchg jg adc loopne pushf popf (bad) scas add (bad) cmp pop xchg inc ror rolb and inc xchg (bad) unpcklps out push pop aad cmp (bad) add ret in aas push mov iret adc fistpl imul hlt inc pusha dec outsl testb out jbe jmp xchg xchg mov mov sub or lret jns (bad) movsb ds push xchg sti sub xor pop out test loope test and xchg jb orl shrl into pop sbb mov mov sub push fcomps leave outsb mov cmp xchg or inc sub pop call xchg pop push adc cld rcll jnp mov leave push fs fistp hlt pop push pop fisubl inc adc or sti movsl mov mov sub and mov or add ficoml fwait addl jle (bad) push push pop bnd push test fnop (bad) sti dec ljmp inc mov (bad) int jecxz inc xor push sub sub jae aam sti sbb and fcomps into in xor inc push dec fisubr or jecxz in sub or jbe lret aad push push dec fucomi inc xchg (bad) xor push jbe iret loopne xor dec call mov dec cmc jno mov mov mov imul jae adc cmc mov xchg xor aam mov dec lods and mov (bad) and insl test test aas inc dec mov sub addr16 dec jecxz das mov jb inc add data16 insb pusha mov adc sahf cltd cld dec adc push std (bad) xor les daa testb xorl mov jnp adcl or or sub jle sbb push imul out repz mov inc std ret mov ret inc adc ja das test popw lahf xor mov add cmp loope sub and mov cmp mov mov rol dec mov clc xchg lahf cmp imul pop das push xchg add subl pusha cwtl adc enter sub xor cmp push pop loop (bad) clc loop xchg dec push lock xor or xchg inc stc xchg stos mov jecxz pop (bad) in test mov add popl repnz jbe xchg loope mov hlt sysret (bad) xchg and pusha mov xchg ja cwtl icebp movsl jb in int or cmp inc push mov ret jns rclb int rol xor cmp xchg fistpl xor and add mov pop and xor jl imul xchg gs test ljmp mov (bad) adc xchg sbb mov movb cmp dec mov sti or fmul out inc xor dec movsl (bad) sub cwtl mov cmp sub add add lods nop and leave ss push iret jns cmp fimul popf push jbe push movsl mov xlat outsl pop out jo movsl mov jmp dec (bad) mov div mov xchg push call icebp cmp cmp lcall sarb incl mov jg cmp xor fisubr sbb push hlt pop mov jmp pop sub mov scas pop js or dec rcrl sbb in js loopne mov cld pop cmp push roll divl push jp and (bad) les bound jnp mov loop cs (bad) xor rcrb xor ret pop out jae and pushf divl dec cmp ss xchg int pop add out mov xlat (bad) aam mov inc call insb in lret cltd insl sbb jae cmp pop and inc mov loop std insb mov mov leave add mov shlb add mov sub mov out aaa and int loope pop mov sbb mov mov pop cld js idivb movsl (bad) xchg cmp outsl cmpsl mov pop cmp adc stc mov cmp and pop lods pop xor cmpsb js pop pop rol out pop jb or cltd xor mov lahf dec mov mov jmp push dec in xor rcrl mov dec sbb mov (bad) fs out inc lock sbb inc fsubrl fdivs sbbl jne mov fs or and bound push pop int3 xor fnstsw jne and pop fidivl jne ja mov out jbe sbb dec ja imul pop and lock sbb loop sub adc scas inc lods inc cmpsb add sub cmc xor shrl scas (bad) (bad) movsl bound sbb pop mov inc inc orl xor repnz mov dec std cmpsb aas sub loopne movsl pusha scas lret into inc xor repnz mov mov repz xchg mov insl fwait mov xchg inc clc jp dec push push (bad) fdiv clc or mov ret xchg fs push fwait dec in sub arpl mov inc es inc add sti dec adc int sbb inc mov sbb iret pop pop insb pushf jle push dec jg imull aaa push mov and pop mov ret into in lock mov jb lret push sub enter pop cli mov clc cmpsl and sub xchg adc cmp (bad) notl or js inc cmp call lahf xchg xor mov insb pop mov js dec (bad) cwtl cli pop pop mov mov xor out jo push and xchg or in pop cmp rcl (bad) mov repnz loopne push jne test push pop stos mull lods jmp mov loopne scas and push in aad add fmul fwait or xchg (bad) or sbb or xchg fsubs gs pop sti xor jae (bad) push pop add dec sub mov stos mov mov cmp movsb or sub cs add inc call sub stos push xor add or stos arpl mov cwtl popa sbb mov gs inc mov stos cli fcomi in imul adc in ret xor in ja and xor imulb add iret mov sub mov pop lods inc cmp mov lea orl mov test push lret dec test loope sahf push xchg mov (bad) inc dec mov adcl mov lods sahf cmp test sbb lret or mov mov fstp test jnp lret jns pop fstpl adc jbe stos xchg push sbb (bad) inc mov sub mov imul les nop mov mov xchg fisub xchg (bad) in pop push inc pop push sbb data16 sbb sub in mov sbb lods (bad) repz pop and frstor sub dec int3 les inc ds ss cmc inc call push xchg ds inc xchg xchg (bad) call nop mov jecxz dec (bad) in (bad) js movsl xchg rcl inc push adc push repnz fildll shl iret int icebp add cli mov int3 push cwtl add movsb addr16 idiv fcmovne in mov sahf and or shr mov sbb adcb icebp add push ss stos add stos jae sbb notl aam mov daa mov sub fs jecxz mov push call adc ret push mov je scas scas out or (bad) lock mov ds push sbbb jns mov jno call scas and push les cld lahf (bad) lret (bad) hlt fwait xrelease data16 sub mov pop cli scas jl cmpsb push inc lret jecxz jb push jnp (bad) mov xor lods rorb or mov dec mov jl js lea pop jmp pop and cmp sub xor icebp inc mov addr16 xor out stos gs push push es mov pop popf pop (bad) pop push loope sahf (bad) mov lods sbb cmc addr16 sbb in mov mov mov ret data16 jge loopne out xchg or push sbbl dec push or scas sbb cmpsb icebp arpl push sub push mov cmpsl mov fstl gs (bad) jge adc lret cmpb adc or cmp jno inc mov cs stos test sarb dec aad xor push cmp imul pop movhps ljmp lds data16 repz fstpl cmp shl (bad) (bad) xor icebp pop push repnz in pmulhw adc and mov jb cld shrb mov sub int fistpll popf daa and fucomp fcmovne rorb mov push popf lret mov xchg sbb cli pop bound or push cmp subl subb sbb add xchg jnp clc cmc leave inc lret pop ffree xor imul stc cmp or (bad) insb and inc or xchg mov nop das ljmp sub and test and lods sub push dec push dec push ret lods jle add xchg dec lds and add lcall (bad) dec mov imul ret pop fisubrl (bad) or aam out pusha jbe pop add daa das mov xchg lds subl lock xor mov mov inc enter xchg sub in loope pop fisttpl inc lea rcll adc pop and dec repz (bad) enter add mov gs pop clc add (bad) or xorl fs ret mov mov sti sub or je dec je lahf push js and (bad) xor dec outsb loop (bad) movsb scas notb jbe fistpll outsl std test push sbb stc inc jmp es mov fstpt xchg repz or dec jmp shll xor mov (bad) aas (bad) lock in std mov xchg sahf cmp leave addb fistpll movsl pop or push inc stos test mov push xchg jae push in imul les pop addr16 stos sbb dec jg jnp cmp or sbb and adc pop or fwait push add sbb add push and aas popa inc and mov fsubr inc mov inc hlt sbb jmp ja xorl xor pop add test test or mov mov rcrl jns push mov stos (bad) aad jmp sub icebp sub pop movsb inc lods inc jmp test jb inc gs add addl xor fs inc pop sbb push mov mov fsubrl iret pop push (bad) mov sub in mov cmp fildl xchg xchg inc push ret jge jo sub ds push mov cli loop jmp ror es cmpsb lds push jne push lods scas fwait pop add sub ficom and push jl sub cwtl adc nop xchg (bad) lds mov cs inc and outsb dec pop mov xor xchg xchg pop shrb jb jecxz cmp xor aas in cs push adc lock add (bad) mov ficoml jbe repz cmpsb and add lock aaa stos jae xchg and popa push cmp (bad) (bad) repz mov cmpsl mov jmp xchg or dec fidivr out jbe cmp push lret fiaddl and mov mov xor out fs fs cmpsb xchg mov lods inc mov xor mov jmp mov mov movl push mov rcl or inc test fmul push out dec cltd jmp aad fistpll push add inc leave ret dec add addl cmp and in mov ja aaa mov mov outsb aas sub xchg push inc adcb xchg cmp pusha pop xlat sti hlt test add sub sbb lret pop and xor (bad) pusha fs push scas insb inc fisttpll and inc push jns cmp loopne out ret arpl and imul jl mov iret stos pop mov in dec sbb push mov jmp fidivr call adc cmpsb leave mov rcrb stos xor xlat cmp sarb int3 repnz sub mov mov or mov xchg sbb inc movsl lods or mov pop int in into cmp stos inc xchg fmuls xlat adc xlat in lea loopne xorb mov mov inc sub int rcl out xchg add jae fwait sti dec dec arpl fwait push mov mov insb and mov and pop cltd pop xor pushl pop dec aad push cmp mov sbb add stos mov cmpb cli fs test push xor cltd dec sbb inc leave ds (bad) jp (bad) mov pop push pop imul sub loope jl adc fmuls je dec mov in fwait sti cld cmp nop lsl divb jle and lods inc xchg pop push mov inc push pushf jne push out outsb dec mov mov aas or mov mov nop pop xchg sub jns fsub fldl insb clc jmp stos in aas pusha ds adc arpl rclb jle push cwtl jae movsb test movsb mov and shrb insb lret fadd adc mov dec divb insb jge in inc xor xchg adc gs cmc call in inc jp test mov mov cld fs imul std sbb push arpl jmp inc dec add stc dec outsl in push add lds (bad) add xchg jge mov jbe xchg es jae scas addr16 jecxz jl mov mov push push dec jbe int and and ret scas mov jb inc mov in adc push inc loope mov das out mov fsub setae scas jnp pop mov jo (bad) mov jbe jo outsl pop and push push adc xor jne pop push mov add or push cmc aam xchg jno or jge lret imul mov sti xlat sbb jle sub clc xor (bad) mov mov adc aam movsl mov mov scas data16 cmp xchg fnstcw in imul pop jne mov imull cmpsl popl jecxz adc or idivb xor das imulb lds adc jge pop das sbb inc insb std jb shll or es pop dec ljmp mov (bad) sti sub cmp jb iret push sub xchg inc popa mov int fucomp jp jne (bad) int3 adc mov dec jo in pushw mov jecxz sub cmp jae loope test (bad) cmp (bad) ror sub sbbl add dec pop sub test movsb pop (bad) xor xchg push jne std push ljmp test fwait pop test push sbb jbe push cmpsb in std inc mov je or xor jne movsl out pop mov fnstcw and adc push movsl inc divl inc ss jge mov nop decb mov test fstpl jecxz mov arpl out fisttpll shrl push fdivrl test jge test add xchg push jns pushf incl mov test push add (bad) pop imul inc pop das lret mov lret jge daa lods cmp repz lea xchg fiaddl add sub cwtl fiaddl (bad) push mov cmp call jnp cmpsl adcl push sbb jg out inc les mov add jge adc and in fdivs and outsl loope sub pop fisubl arpl add je movsl mov cwtl arpl outsl (bad) sbb fidivrl pop push das ficomp inc mov into rcrl jge cmc xor or dec stos (bad) xor mov cmpsb popf sbb imul sbb jns xchg pop jno inc jno sub sub and fucomi popf andb cwtl fcompl movl jb jmp js adc sub push adc int int3 sbb rclb out (bad) pop inc (bad) popa popf or leave cmp xor mov ficompl adc push mov xchg add aas inc inc xchg rcl and shr repz loop or mov lods push dec mov lahf xor push call pusha jle sub pop sub outsl cs xchg test (bad) mov adc (bad) jb loope lods mov cltd das sub mov leave cmp dec sbb loopne mov dec stos jp xchg test jle ret mov or mov inc mov dec fs jg jl inc inc stos adc mov mov lcall lcall jg mov lea les cld mov pop cmp add popf scas push ja js cmp mov popa mov push insb dec cmp push pop lret (bad) lret out and fwait popa es mov mov enter mov scas fisttpll dec in add sub jmp sbb jnp ja shl test mov sub fwait dec and dec scas mov jge lock and cmpsb fidivrl jne shrb movsl test aam (bad) cmp in push fnstsw push outsl pusha pushf jbe gs int3 imul push sub les (bad) jecxz out jecxz (bad) dec mov xlat mov dec pop add jne sub pushf and bound into cmc mov jmp sti jb popa add or popa add mov pop cmc mov or dec ss adc sahf hlt xchg xor ficomp jmp repnz push out inc (bad) push insb outsl out fwait inc je cltd pushf sub pop hlt shrb dec lret rolb scas int pop leave stc test push mov sbb in cmp jg fdivrl sub cmpsl mov add cli fdivs and or popa sub jle jno cltd jmp (bad) xor cmp aaa adc dec hlt cltd subl jle pop in add xchg pusha sub addb sub cmp test pushl lahf aad cmp loop cmp mov dec iret ret xchg or push daa pop fisttpll xor sahf cs push xchg jge or arpl nop aad push stos notl dec aad jno cld and mov into push fbstp repz int3 lahf aad lds enter jno stos rcll inc push add sahf sti bound clc aad sbb repnz jecxz inc add aaa mov adc or push adc pop dec loope dec cmp mov or outsb push jecxz cmc in iret iret scas xorl jbe fisub cmp inc cmpsl nop pop in add in push stos sbb add inc adc mov add pop sbb xor xor arpl mov repnz sti dec jo dec test mov dec or add jno das cmp or enter xchg sub aad pop xchg lret or call std repnz fwait sub adc mov lods sahf xor rcl inc aaa imul popf imul jp (bad) xor mov jp lea fidiv mov pop stos scas dec cli lret scas mov mov adc sub aas cmpsb inc stos add mov pusha int3 cmp push adc repz or xchg inc mov xor mov repnz loope push jp aaa add int3 insl test mov mov xchg and loopne fcomps xchg push adc lahf insl pop andb cmp popf (bad) mov sub clc cli jmp sbb push pop mov mov and jns pop (bad) xchg mov inc mov stos icebp mov pop xchg xor sbb mov dec dec mov cmp pop and mov fstl (bad) enter (bad) aas loopne adcl (bad) cwtl pop lds jmp pop shr mov fldt fdivs pop xchg adc lret mov in xlat and mov lea dec sub stos jmp mov in push inc mov sbb cmp xchg jle add push lods jns or sub and or add adc iret jmp jge mov (bad) cmp movsb leave ret in jmp mov popw iret lea fwait insb mov outsb cmp pop insl pop mov xchg push fwait addr16 push jno mov xchg jo rcl xchg adc shr mov sbb daa data16 lds lret fdivr xchg ljmp or sbb xchg addb outsl loopne aam sbb ss push mov imul mov hlt mov stos ret mov pop inc push adc in mov jno mov xchg mov add aam jge mov sub xor dec cli or lcall cmp push add mov js push or xchg cli ljmp in sbb dec xlat pop loope and add es jp pop push mov addr16 add cli popa fisttp scas add mov movsb xor cli cmp cmpsl std adc test dec popf sbb adc jno daa (bad) (bad) mov out (bad) test stc icebp int add xchg gs push std pop sub stos jecxz nop int jo push cwtl fcmovnbe (bad) repnz sub test xlat ds insl icebp add (bad) cmp gs inc dec dec xchg in push sub nop lea xlat mov imul addl ret outsl out nop mov mov lods test or test add pushf xchg sub mov (bad) je sti pop cwtl mov mov jns xor and xor inc ret mov and (bad) lods rol jae jmp mov push cmp inc or mov out loopne mov mov aaa and pusha sub or adc (bad) sti cs (bad) aaa into daa int aas jbe fisttpl out pushf push test (bad) incb call push mov mov mov inc add cs imul (bad) movsl outsb cs cwtl lret dec cmpsl test es mov lds add cld int push enter jle cmp es push mov aas mov push arpl in fdivrl cmp mov xor and mov jne mov dec mov jns cmp andnps inc sahf lahf add xor pop pop pop (bad) movsb push jl or std sub jle mov sub push in cmp lcall pop dec divl jmp adc pushf inc inc in cmp pushf sub sbb loopne call sbb jg movsl je mov adc dec (bad) fcompl fistpl fistpl mov pop add hlt test lahf xchg xor stc sar add movl mov xchg dec jo sbb cs loopne out push and pop test cmp mov imul aad sahf pop std push scas lahf icebp lods mov and pop sti jp call icebp in insb inc addl xor push xchg (bad) arpl jbe xorb in mov jle add cmp xchg pop icebp iret mov jl xchg outsb jl jle xor lock push sub (bad) std cmp subl icebp add pop loope cmp iret pop cltd xchg cmp jmp lea or mov add fisub cltd sbb mov inc hlt dec (bad) pop mov mov xor fimull add xchg (bad) sbb dec xchg lahf stos mov mov mov (bad) into ss loop gs hlt inc add js (bad) sub xor xchg imulb jae or xchg cmp sti repz xchg push push std or ja cmp lret push call mov jb ret rorl add jmp dec inc mov loopne loope or loopne inc leave xchg cli cmp sbb dec sub sub ret add sbb lret inc mov stc xchg stc jecxz push movb push cmp jg mov xlat popa ds mov mov test pop xlat int3 mov lahf cmpsb iret shrb add cltd xlat pop and imul xchg push jns lds cmpsl push aas pop add leave xchg or pop mov in mov or cmp in pop dec ss incl jns std lods sub mov xchg int3 dec xor maxps and push xor sti dec pop insl or pop adc cmpsl add mov andl xchg dec test ficompl mov imul arpl pop pop sub arpl mov xor add (bad) call les dec push adc out mov dec sub or shl cli ljmp outsl into pop mov ficomp cmpsb sub out xor negb ljmp cmp xor loopne jnp inc cmp test inc cmp mov adc sbb (bad) dec sub sub sbbl mov add mov sub arpl daa mov and iret icebp fistp and xor out sub into jg pusha faddl mov lock jbe sub rol aad adc sti jg sub inc add insb pop adc cmp inc mov jle cmc dec test inc das mov cmpsb push or push or rolb sbb jns or (bad) fldl jns out out fsubl push mov push jae push cli mov out dec jg movsl mov push pop fwait sub and pop inc hlt out daa imul pop pop clc test pop (bad) rcll sbb js outsb mov outsl lock jl mov push stos mov mov popa jg cli ljmp (bad) push sarl xlat push shr inc mov test or ret fidivr xor out push pop (bad) dec aam rcrb std fiadd je and imul into xlat xchg xchg xor pushf movsb cmp jb mov add outsl mov or mov repz notl and ficompl pop popa fldt int ljmp lea pop stc push mov into out adc lods mov mov inc push cmp add sub aad dec adc and mov xchg addr16 inc xchg xchg test mov or sbb lahf pop rorb lock int aad inc pop jg insl xchg pop or popl and test mov js cmpsl lcall push pop xor les xchg and cmove and ret jp xor cmpsl aam pop add sbb sub sub pop fs push sub inc pop fcmovnbe out push aas push or mov movsb sub xchg (bad) sub pop popf mov aaa adc lret cmp loop loopne dec inc dec popf push (bad) sub inc pusha outsb adc lahf pop cli sbb pop movsl rcr sub and les pop adc cmp insb mov inc pop mov push xchg and mov xchg repz push xor jb jbe pop std sarb jle gs nop jl cmp mov ja sti (bad) xor inc dec lods xchg xor xchg into add fldcw in cwtl mov mov daa sub lret push pusha mov mov mov pop les loop mov jle subps jge cmp xchg fimul add push daa test mov roll fist (bad) aaa mov xor jle js (bad) xchg mov fbstp ja and es fsubs sti push stos jl pushf inc sbb cmpl lds xchg or mov popa add and push je aas lsl rep (bad) xor sbb dec add add movsl jnp mov cltd dec mov fadds fnop pusha sbb ja sbb (bad) pop add aas push mov aaa pop out call sub mov call insl sub addl cmp cmpsb xchg adc mov icebp (bad) sti nop test mov stos lret push movsl jge call xchg jmp dec sbb and dec xchg icebp not dec cs push stos push ds jns call lret divl cmp pop in cmc push mov lret mov stos sub xor pusha les dec xchg xor dec lds xor enter or pop jl test mov (bad) jns pusha inc in xor in mov inc inc inc cltd push clc or push and into mov mov cmp testb xor jmp cmpsb mov pop sbb sub mov inc mov rcll rorb xchg xchg push inc pop outsb dec outsb inc push outsl int3 mov add das leave in pop xlat push xor fild dec mov jae sub in fwait in cmpsb cmpsl cmc addr16 aam inc push jnp (bad) je xchg xlat lds popl push pop cmp sbb pop iret dec mov jno adcl aam xchg mov data16 dec and jns imul jmp test shlb test push cmp fcomps cld cld fs pop adc xchg xchg lcall (bad) cmp sbb out scas or cmpsb sbb and jno or insb stos in pusha xsaves test stos (bad) negl xor mov out gs pusha insl sbb push push jecxz,pn mov stc sub sub xor cmp sbb popf or jge nop lret push ja dec xorl inc xor dec add cmp out jo (bad) mov cld scas out mov (bad) dec sbb into push stos cmp (bad) jns ret pop jae out cmp or stos and in scas inc mov mov pop jne cmp adc and lret negl mov lahf mov out xchg xor aas dec pushf aam mov pop jbe jmp das cmp in mov jge lea iret pop jle and and cmpb cmp es fmul mov sub mov adc call xchg push sbb idivb sbbl jae rorl pop (bad) negb das fs idiv jg movsb insl sahf in cmpsb push aad xchg mov add xchg pop cmpsl push adc and cmp ljmp jno (bad) xchg dec or mov xor ja fcmovnu cmp xor dec mov add adc clc jmp mov mov or popf mov mov mov sub es push pop inc gs sbb out icebp push out int arpl push add inc xor loopne xchg jg in jle and cmc in lods lcall mov out jecxz sub add (bad) mov nop sbb or shrb aaa jns stc jb daa mov rolb daa or (bad) fisubrl lock imul xchg cltd imul ss jge adc xchg pop sti xchg out push les mov push jle adc xlat pop mov rcr or adc inc ljmp xchg repnz fstps or aaa or es inc sbb in aaa mov stc inc dec movsl sub int3 inc jne (bad) pop xorb jb jecxz or jecxz push and cmc mov or xchg pop outsl cmp test fimull loopne stc subl adc push mov xchg push sub mov push punpcklbw cli add jl dec or sub out scas push scas loope sbb mov loope loop lahf pop dec sbb jle add cmp cmpsl cmpl sahf (bad) pop xchg mov or or jg imul sbb in jge jae (bad) xchg sbb vcvttpd2dqy add dec xchg ret jo push rclb fistl (bad) inc xchg fstl and dec mov cmc into repz mov gs daa mov test ror test fdivrl stc sbb out shll mov jecxz xchg (bad) cmc hlt stos mov fwait and add cmp adc outsb mov lea fwait cmp sub jge mov ficom roll sahf push adc movsl push rcll jno pop adc mov push aas add xor in inc xlat enter inc and dec sub loop dec nop fistp enter stos jl xchg xor ret sub ret sub jb cs xor cmp clc ss xchg sub lret or out mov xor push (bad) mov or test pop rcll addr16 loope in xchg add imul mov cmc rcll jns xchg cmp xchg xor inc daa pop add ss bound lahf jl adc and loopne push imul outsb mov fildll sub cmc sahf jle cmp mov rclb cmp add lds loopne subl cmc je jle aad cmpsl mov fisttpll cmp cmp mov fsubp fwait mov (bad) je fidivrl movsb pop mov rcrb imul shrb sub xor push sti (bad) aad pop cmpsb test loopne mov adc stc xchg jnp jle mov xchg in rcll pop xchg push inc ja cli iret mov loopne push and add push outsb addr16 repz ja adc int3 sub pop xor test xchg xchg (bad) jmp popf mov cmp add lods push jmp nop cmp mov jo dec sub mov mov dec mov daa out loopne lea lcall lret ds adc movsl xor dec mov daa pop ds cli cli pop mov fwait or jle jmp call lcall insl std sti inc lret jns iret and jbe jno pusha cmpsl dec in jae (bad) repnz sub enter lcall pop ret scas inc fwait adc mov and xor ljmp xor push repnz cld push or cltd pop add push loope cmp lahf sbb imul int3 pop bound out cwtl cli lds nop push inc dec test cmp jg out sub sbb inc push in dec jo out insl pop jge aaa mov bound (bad) dec aam adc pop movsb push mov push daa push lret inc test enter daa je icebp sti push mov int inc xor js dec sbb dec test mov sarb inc lret sub ret stc inc test fucomp jge rol push jne rcrl lret ret pop xorb ficoml push pop mov sbb jmp aas div sbb fisttpl lock pop xor add popa imul iret pop stos imul push jg cmpb lods pop mov inc add cmp push addr16 mov jg jmp insl jne pop xor mov cmp push ret mov hlt sbb andl xchg out (bad) xor or movb dec pop fidiv push mov enter cmp xchg negl bound pop mov xchg push xchg add (bad) cmp and cli rorl xchg imul jbe ljmp lret mov inc xchg popf bound lea movsl icebp sub pop jp in iret push mov sub syscall dec inc in sbb cwtl add mov mov out in daa loopne es mov push fisubl test fstp jb (bad) arpl jne jge int3 cltd push loopne pop sti rorb mov insb jge bnd and das (bad) in xor sahf pop sbb add dec jl sbb or out ret jmp shlb xchg pop add push in test push cltd or push lock enter cld jge push adc loop mov push fstpl test sub or mov inc out stos sahf shrl dec jne xor aad lcall cmp setge mov stc popf mov fcmovb jno add jp jb inc mov (bad) and xchg ds xor inc ljmp push xchg incb pop mov imul and stos adc icebp xlat or xor test jg sub (bad) xchg and xor lret cmp pop imul decb shll je jg scas jle hlt mov icebp sub leave fist ja cmp push sub dec mov jno or call mov pop das add or inc addl in pmuludq adc decb stos fnstcw jo or flds push cmp inc (bad) hlt mov ret ja add mov scas mov inc sahf jbe sbb add out cmp xor stc or cmp ret mov mov repz lods popf and scas push push fcoms loope and jb xchg repnz adc (bad) sahf push pop movsl test xchg (bad) icebp pop mov int into pusha aaa mov jno outsb test icebp fimul sub push in mov push cmp sarl out in rclb rcr jmp sub fistpll out mov push (bad) je mov xor out das loop iret lcall cmc clc ret dec cmp mov repz xchg jecxz push mov fs cli aad push push insb jb sbb inc (bad) xchg popf lret mov jo,pn xlat mov scas movsb adc dec jne jnp adc ret es cmpsb pop out adc in add and ds out iret fwait xchg sbb movsl fildl sbb dec in mov push adc or pop imul pop pop enter xor (bad) mov dec jo mov and mov jns rorl neg lahf jmp scas popa sub add push jb mov mov mov xchg into fwait and xchg ja and inc cs mov pop push jmp push cmp les wbinvd jbe dec and adcb inc insb inc push jnp mull push push lods cli and pop ljmp js jns hlt outsb jg and mov adc (bad) mov sti lahf aad (bad) mov daa mov xchg pop das ja or cmp dec rcrl dec lea out test adc js stos mov cli mov (bad) hlt (bad) and xor insb sub push lods adc mov jns (bad) sbb ret orb jmp mov cwtl (bad) pop add (bad) xor movsb push (bad) xor ljmp sub repz fsubr sbb xchg rorl add pop sub data16 and dec int3 test in cld adc mov mov mov add es pop xchg xchg lods xor sbb (bad) adc cltd jae inc xchg mov mov sub adc mov mov fwait int3 insl cmp sub push movsb jne or int sbb push mov push jo out repz push xor dec mov fcoms sbb add sbb arpl inc (bad) repz xor jne pop mov fscale aaa lahf lds in jbe clc rcrl sbb movsb xor push xchg outsl jle or test idivl pop jmp and push jg xor mov adc pop pop in jbe add pop (bad) aam in mov (bad) dec mov push (bad) (bad) sti scas (bad) pop inc cmp iret mov and test add in (bad) sbb pushl sub in (bad) dec ficomp addr16 call adc mov loope jo lea lods cwtl dec or loop mov repnz inc cmpsb pop enter scas repnz cltd push dec pusha call (bad) negl and xchg jne jl push xor or (bad) (bad) jne or jns shlb jne xor fs push test lods fs movsb gs popf imul jmp lret dec ret hlt push and (bad) cli aam adc lock pushf mov repnz jp adc mov sub in sub bound jne shrb lret adc push (bad) cmpsb cs pop cmp (bad) mov pop lahf mov addr16 push hlt movsl seto test aaa fnsave mov mov fsubr add (bad) mov mov dec mov ret lcall cmp pop xchg lods das call jns pop pusha inc test scas cltd mov es call in or (bad) mov sbb jns nop stc out inc sbb (bad) cmp sbb mov pop mov in pop mov and jl out xchg cmp inc cmp sub add ror fdivrp int3 iret adc sbb xor (bad) add test lods (bad) (bad) hlt inc adc shrb es adc lret (bad) out insb incb cltd dec aaa pop sub mov pop mov test mov imul mov jle movsb mov out push xor sbbl call cmpsl xchg lods jle mov xchg xchg lahf or xchg sub mov icebp sar sbb adc dec xchg inc and mov sar rcll cmp into jmp xor and imul ljmp xchg ds std (bad) lret std xchg cmp mov cmpsb iret pop sub sbb pop ror push and (bad) jbe inc adc testl mov (bad) mov (bad) xor lahf pop add mov (bad) ret (bad) xchg adc int mov xchg dec jbe psubd repnz lea (bad) xor cmp jl lret mov cmp test mov sbb mov mov lret ljmp cmc fildl ret xlat cli faddp cs xchg std inc fs aas lods mov in or sbb sub subb aaa or stos mov int add ljmp mov data16 jno cli lcall fisubr test mov dec inc push mov dec loop sbb fisub mov js mov idiv mov (bad) mov cmp jmp dec test xchg test rcll xor pop or or mov adc clc enter out cli in lock add mov int loop mov ret scas (bad) or push jle add in push jmp sub outsb repz jns mov jnp in pop lret cs ja rcll mull ficomp dec (bad) mov adc mov mov mov popa inc cmp adc push fimull pop sti dec add rcr jge or push cs jge cwtl das or adc shrb or or cwtl dec es mov rcrb rcr xchg notb insl insb jg push push mov inc js and ja dec mulb dec mov jns pop nop fisubr test (bad) scas sub or or rcrl outsb and xor jecxz cmc cmp jo mov sbb popa lret (bad) aam xorb and lds jbe adc pop inc clc js dec push jecxz,pt cmp adc fmull (bad) cmp cltd mov mov iret push add outsb shll pop jae in push imul (bad) js xor jp inc test in sahf stc mov inc cmc insb jno and sub aas clc div into xor lods repnz add (bad) ja xor rolb mov fwait pop sbb jecxz jge (bad) mov sbb sbb inc xchg jae in movsb inc ficompl adc pusha and sub popf cmpsb lcall clc loopne mov insl test add lahf (bad) ss jae fnstcw inc rorb push gs mov rolb das aam push push les mov xchg dec inc lret jbe add cmp cmp jl test xor js inc pop mov bound jae (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld incl cmp push loop clc hlt test add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add jbe add add or or add or add add add pop or add add mull add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add cmp push js in (bad) add rcrl mov (bad) insb fwait pop mov (bad) cld or inc inc and shl add (bad) add jae and add push call add mov mov push aam jl cwtl xchg inc jae mov mov mov push mov push ror push ljmp mov or mov orl (bad) jno sub xor mov sbb mov jne lods adc and jp pop inc jl addr16 ss inc fdivs aaa push (bad) sub iret fstps jle std cmpsb cmp pop lcall and icebp or push mov cld sub lds add push insw xor aaa xchg loopne cwtl mov orl add lahf out push dec push loopne pop test add test jecxz xor jae rcrl roll push cmpsl iret lcall fidiv movsl and mov jnp mov dec lret ret arpl push jns push into mov cmc cltd xor cmp sub in fcoml scas sbb xchg bound cmp clc cmp dec imul sbb add jle stos and hlt add dec mov scas fidivl xor sbb sub sbb cld (bad) sub scas pushf aas xor imul push outsl scas push insl sbb out out sub in insb pop addr16 test xlat dec push push push inc xor lock ret cs test mov aam out xchg insb xor outsl pop icebp (bad) dec mov pop sbb repz movsb scas mov jbe adc dec movsl das test push dec cmc cmpsl push nop mov lcall mov mov jnp cmp shll lahf mov imul sbb hlt imul (bad) repnz push dec imul (bad) hlt notb push jne cmp cmp fisubr dec arpl mov repnz popf mov xchg and popa adcl fwait data16 into sbb dec (bad) and jb mov jp pop int3 dec fisttpll or mov aam jns jge sub mov hlt leave es jle rorb jle or stc ret jg jg hlt adc inc xor and cmc pushf test adc leave mov mov inc popa das js mov shld bswap sub push mov pop add loopne movsl (bad) cmp xorl lret std jae ja mov adcl ja lds cmp rcll inc (bad) shlb adc in mov lcall xor mov inc popf sbb inc mov xchg and jecxz cmpsb mov (bad) and and jle xor das insb cli xor roll (bad) jbe and xorl iret ret jb int3 jnp cld jns jecxz xor mov lea je js test loope xor out ljmp jmp mov mov rclb mov mov add adc xor adc inc mov lods pop test xor addr16 roll shll (bad) inc mov fwait das mov clc and jb mov xchg cld rcll add cltd xchg jmp mov lods mov sbb in hlt clc cmpsl (bad) (bad) or and mov mov mov cwtl insl popa and cwtl dec and adc and jns insl xchg jae push inc inc push daa aad mov sub sarb pop sbb test test fmul xor ss mov icebp test fidiv add stc sub dec insl xor push inc out lret jl adc sub scas loopne cmp out xchg mov pop xchg lods js enter pop movsl movsl (bad) addr16 ss inc cmp test push sbb push imul sysenter repz shrl jp sbb sub loopne movsb dec test or dec punpckhbw cmp dec adc push pop in dec bound fsubl out jl xlat enter ljmp cmp pop lcall adc and loope imul mov pop gs je add insb xchg lods ret push adc out add ret adc mov sbb aaa mov outsb pop mov arpl cltd mov cld push push test hlt or sahf fs test js sahf jne push fs loop mov xor and decb push jo jmp lret mov lods enter jp,pt push lret ret arpl sub cmc scas ret cmp adc stc inc cmp mov cmp int es (bad) lahf cmp push cltd jl fs sbb pop xchg mov call jne cs cmp aas ja push in lock adc and xchg movsb (bad) jecxz shr iret hlt in inc xor jmp (bad) xor fdivl es fnsave dec mov sti movsb clc mov gs xor (bad) push jp fbld repnz cmp lods movsl int push jle loopne out (bad) mov add fdivr stc or xor sub jmp cmp test clc arpl dec xchg jge into aad add and fmul xchg push aas xchg int3 jp dec mov cmp mov sbb das jno inc inc movsl sub mov or fbstp and ja mov mov sub mov lock out cmc add fidiv and les (bad) in (bad) inc push (bad) in pop rclb dec mov sbb (bad) pop (bad) mov xchg repnz and mov divb dec insl xchg (bad) (bad) paddb pusha outsl mov fidivl ret and add lea xor push mov xchg inc addr16 das sub inc stos loopne roll jmp sbb jge inc dec pop fldl dec push ret xchg test pop insl dec push std (bad) les mov std movsl sub or mov (bad) ja adc adc sbb sbb gs adc mov pop and lcall xchg stc jecxz divb lahf lds cs jmp dec enter ds jne fldenv movsb movsl into (bad) sti pusha ret (bad) lahf sub mov pop cltd jbe (bad) fistp add dec jbe in inc das aam ja push lret in push ret inc sub or dec int3 ss mov in adc and mov cmp stc insb push sbbb push push movsl int3 add insl mov mov lret fsubl das pop jecxz add in ja insl jge adc sub pop gs popa jle xchg push push pop push in fsts sti roll push mov lods inc mov out fnsave lds jmp push dec pop and xor xchg scas movsb mov pop pop fcoml sbb (bad) push pop in mov movsb cmpsb aam jl mov mov fcomps sub adc (bad) and pusha ficoml out jl cmp push xchg out xchg mov (bad) mov into test jnp mov rorb popf aaa pop xor lea jne cmp cwtl lret roll sbb pop ret inc sahf ss mov pop xor icebp test (bad) sbb loope lea enter loop aam inc inc pop sbbb rcrb lahf stos int (bad) addl cli rclb sub (bad) or sub lret std mov pop cmp (bad) xor pop stos inc sarl add jge xchg adc mov movsl xchg mov jl arpl lods es add (bad) mul jno lcall sti jno xchg fsubs sbb dec sub or and cld imul sbb notl flds stos and inc dec push scas mov or mov or scas push fldcw inc or xor lods xor sbb push jae repz sub fildll adc dec stc jno outsb mov aad mov popa lods mov and or pop pop adc (bad) adc lock loop ret inc xchg cmp or add xchg insl xchg inc hlt dec dec inc frstor incb mov mov scas or mov repz jp or lret jge ja sbb in push bound inc cli shl push lods cmp test pop push mov xor movsb sbb mov pop das stos sub out fcmovnb (bad) fcompl out in mov sbb adc test arpl sbb aas (bad) sub jnp xchg loopne out fs stc push or push push push cmpsl test movsb add inc in cmp xor out rcll sbb add cmp or and fwait adc push push dec and fwait mov pop push mov cmp lock mov loopne loopne mov sub push fistpll rcll das adc pop das pop xorl push add sbb lods fldcw xchg jmp pop arpl mov push xor jnp push add ljmp clc call js cmp sub fs scas push lods outsl jmp mov data16 in (bad) inc adc icebp rclb or pop adc decb int3 in (bad) mov fwait push sar jmp mov cmp push sbb lds in inc fisttpll insl xchg shrl pop loop mov fsub ja mov add aas sti inc aad pop sub hlt push test test lods jle adc outsb enter adc cltd fisttpll jl (bad) mov cmp das cs insl iret inc lret (bad) mov inc addr16 int add leave cwtl jb pop aad ds dec fdivrs dec xor out push nop jae mov jb test fdiv and jl jle cmp cld xchg pop in (bad) hlt lahf fnstenv or sti addl xlat testl mov mov mov sub mov pop (bad) sub in mov xor popf fisubl add std out mov push or or insl int3 or sbb jno lea fidiv pop push mov dec dec xchg mov (bad) push inc push sbb and push loope test bound mov cmc fwait (bad) xlat je fdivrl stos (bad) fs mov sbb and out jns dec cli lea push dec dec pop mov movsl movsl add jbe aaa daa stos mov insl adc (bad) mulb stos sbb or adc mov cmp dec cld je jge add pop xor lcall int icebp xchg dec add cmp aaa cld mov pushf adc jl aam stos sbb jg xor xchg icebp jp sub pop lock mov lcall push adc or data16 decl out movsb fist sbb adcb inc iret fmul icebp aas cld rorb orl insb mov fwait sub imul push pop in enter in sahf addr16 xor es fisubr adcb test mov ljmp std add jp lcall and inc xchg or aam push ror or xor rcrb xchg pop ja fldcw dec ret mov xor push fcomps cmp aam test sub jb cmp std xchg push mov adc add or hlt inc pop xor mov call subl dec sbb outsl movsb jmp mov cs dec imul outsl jecxz jecxz push adc push lahf cmpsb into pop dec xor fiaddl add (bad) lods int cmp mov push xor sbb and xorl jnp inc fwait or jne push lock dec ljmp mov stc xor aam or sub or cld pop fcomip insl xor es test das xchg rorl xchg jne or das repz mov pop add stc and je frstor pop cmp scas push mov lcall jg enter int3 add icebp rolb leave push pop int3 test out ss lods xchg into push cmp fadd sbb fld1 data16 inc push jmp push icebp loopne inc adc sub lret pop mov adc xor pop fimul ret popf push and mov (bad) adc fstpl and rcrl int3 jmp jnp mov imull jmp inc sub dec push pop pop cli jo pop pop pop sbb mov push fldenv lods xor mov adc xchg and enter repz pop mov out inc mov add lahf loop sub sbb sbb icebp jnp dec shrb dec fmull jno sbb iret fwait mull mov or jns inc xchg pop adc add mov add jns xor sub dec push subl mov sub xor imul jecxz xchg mov test ficompl call iret and mov mov xchg pusha nop (bad) (bad) jnp mov popa popa add mov test xchg jno int hlt fwait jle nop test in in push rcll ds lcall xor jns cmc push sbb lods std fwait mov test int3 fdivrl add adc push shr xchg insb jb sti cli popf sarl sbb leave call shr mov push add inc inc aad xor or xchg xchg add dec je jne adc mov stc pop sub aam lds ret dec fisub sub fnstsw cmpsb cmp inc ja cmp test out push mov sbb lcall ret mov scas pushf dec push sbb jmp fadds jge push insl pop add xor jmp mov roll cli or xor insb jbe rorl push imul lock pop pop bnd fisub mov mov push jb nop adc ret rcr cmpsl pop push fnclex inc dec sti fildll sub adc out sbb sub add out fcompl xchg add pop pop sub cld lods test jg sbb orl sub (bad) fcompl or aas mov xor std mov cli cmp popa rclb lds fnclex fwait xor cmp jnp (bad) mov dec in clc and pop xlat push cmp jl mov add arpl jnp push push xor xchg dec leave pop sub imul in sbb test shll ret (bad) hlt push fs int3 (bad) inc imul push js stos adc mov cld pop jb or (bad) cmc push stos movsb pop mov cld cltd fs mov repz mov push sti in ret pop icebp lods push xor add stos (bad) arpl leave pop xchg xlat test stc mov popa inc (bad) jae in jns mov mov mov dec mov sarl xchg and jcxz pop bsr (bad) dec push out xchg movsl jns int ds cwtl mov test mov lret aad xchg pop sahf gs rclb sub cltd cmp out sbb or imul imull add stos lea mov push cwtl add loopne jae cmc gs mov pop mov fnstenv mov push (bad) jbe mov in orb in jbe or pop push xchg pop cmpsl xchg sbb push icebp in movsl dec test or xor ljmp mov cmp and mov jle push xor (bad) stc pop div jle mov aaa idivb and lcall xchg movsl pop pop lret jp dec inc mov sbb push pop xchg mov adc jbe add cmp inc push cmp into cmc in in push adc aaa (bad) jge clc adc outsb je push jle dec lds sub cltd xor aad cli jno movl jecxz lods aad (bad) mov sahf push imul dec or pop or mov mov iret mov dec inc jg xchg mov lret adc aaa push push insl mov inc and test std test insb sub and xlat mov mov or sub mov xor lods loopew (bad) and hlt mov insb enter jbe (bad) mov fwait add cmovae test dec push int test mov cmp pushf xchg js rcll repz rcr mov in cld idivl jae sub sbb push (bad) clc mov xchg cmpsl shrb xchg jl repz jns stc mov or push lahf push lahf lcall jo fwait loopne movsl cmp inc sahf cmp enter cmp mov out mov arpl xchg or clc lret aaa arpl mov adc push add adcl adc and xor add sub mov mov pop insb in ljmp test and mov sub in dec stos sti ds lock xchg mov inc push xchg (bad) icebp push das daa cli or in loop mov sahf ret inc xchg cmpsl popa xor mov adc pop test fdivrl imul add fs xchg (bad) cmp cmp popa lahf insb lret sub leave jne add xor mov insl mov pop repz inc push jle jge xor in call mov cmp mov jb or loopne push (bad) lods out shrb test push lcall add or mov xor push ret (bad) jl xor adc lea popa lods jp hlt mov daa mov push (bad) out in ds test cmpl loope xchg in mov rcl in das sub adc lea dec repnz movnti sub jno jp loop sbb dec lcall fcmovnb test js and fsubr (bad) pop lods enter push cltd inc push mov sub stos sbb adc xchg (bad) adc push cmp clc xor cmpl mov and jmp adc gs mov in pop sbb mov push mov decb fstpl add jmp in je mov std and adc cmp std fistp mov fisttpl add mov out push add lds add cmp cli dec rclb mov push ja ficomp jle or cmp xchg jns mov dec loopne mov imul sub mov test jo or out add lea push jg sub test push xor and popf fucomp repnz int add mov dec daa cwtl gs jo xor mov or fldenv aas push mov addr16 mov inc aad cmpsb mov outsl dec es mov mov add mov movsl jg jbe int3 or or outsb cld or rolb lahf adc xchg fcom das rcl inc movsl pop and lahf and jp aas xchg or or mov jne mov cmpsb in push xlat subl fisttpl push pop adc xor outsb (bad) fmull adc icebp adc call mov jp inc lcall pop je popl cs iret mov and sub ja mov mov dec pushf cwtl mov shlb jne aas xchg imul xor pop and ljmp mov mov mov sbb jns and pop in clc xchg lret or inc in jmp vpackssdw sbb and add js sti lret fwait xlat pop add outsb in test daa int inc std jne ret imul mov push adc inc jecxz arpl dec xchg push aam dec (bad) je arpl mov mulb push test dec arpl aaa and lds push mov cmpsl pusha sbb (bad) cmp fwait xchg mov pop cltd repnz adc test movl out test cmpl mov test movsbl jge cmc nop xlat ljmp jmp jo cmp loop paddusb add xchg jge xlat inc xchg mov outsb cmc jns jecxz clc sbb inc push stc jno xchg pop inc xchg jl lret insb push dec mov subb leave mov pop mov int3 cmp lcall es scas add sarl daa xchg xchg sub ja,pn cltd mov push dec xchg mov adc pop push cmp in dec pushf and mov gs jb popf rcrl sbb ret out pop orl jns enter sub jns sbb jge xor ret rorl rolb bound mov (bad) xlat repnz push inc leave mov sbb stc ret pop xor in jmp cmp cli push andb jne sub sbb push mov aam sub push movsl (bad) fldt push mulb jnp cltd pop mov in (bad) cmp push mov xchg add push orl push ret enter cwtl sub mov ret and sar cmp xor out mov shr sub pop push in rcrl mov pop pop jo divb add in sarl nop jne inc rclb cmpsb rol das pop lahf jnp call lds inc inc nop dec pop inc ret gs xor push pop inc test jo lock sarb jmp lcall inc mov bswap int3 ja lea dec addl mov popf notl incl or mov pop jmp scas jno fild hlt fwait add inc movsl hlt mov mov push or mov aaa lret push dec arpl inc cld jae push insb sub bound or push xor add xchg mov inc add mov adc adc daa push loop not rclb imul or (bad) nop sbb mov dec je cwtl aaa lea push xor arpl jp mov sub xchg stos scas outsl dec mov inc lahf xchg pushf arpl pop insb dec adc cmp popf stc xchg push push inc int repnz cwtl lods jae jp dec mov mov (bad) dec mov xor cmpsb fsub aad enter dec xchg adc adc enter sub std fistpl aaa adc xor fabs in ds mov test cmp xchg repz mov sub or sub mov (bad) repz or xchg out cmp sbb adc or inc adc stos mov mov loop ja arpl and stos xchg push mov xchg mov icebp pop dec xor jg ret xor xchg or mov fcomps add jmp notl xchg push js rorl pop (bad) (bad) out ret xchg addr16 inc mov cmpsl mov fwait (bad) mov in push push or jg mov sub jp outsl and (bad) cmp inc cmp test mov andl loopne jbe hlt mov xor cmc (bad) mov pop out push or inc ljmp aas out pop mov xchg repnz lahf cwtl jp mov adc pop adc jo mov inc ret leave insl mov mov jo (bad) int mov sbb sbb popf std mov rcrl jo push jge (bad) xchg aaa pop insl out adc (bad) sti jbe dec outsl cmpsl push add dec and push aad cmp pop icebp mov imul push adc repz and sbb bnd mov fldl xor jmp mov lods mov pop and (bad) arpl mov (bad) and or dec and dec pop pop cmp mov push jle fs and adc fwait jbe push sub loopne popa mov jb test popa insb loop jno roll and (bad) mov cmp test js cmp or mov imul int3 adc fisubl sbb sarb lods mov cwtl cmp daa cmp sbb xchg in fdivs pop test adc stos inc cmp loopne,pn lods testb adc out mov shrl lahf (bad) dec imul mulb outsb idivl data16 jle or xchg (bad) cmp stc je dec mov mov cs mov cmp xor outsl mov and fdivrl insl in divl fbld mov andb (bad) pusha dec mov sbb sbb sahf out mov xchg loope xorl push xchg aam jge loope leave mov jle and pop (bad) dec lcall inc aad inc loopne (bad) xorb into test jl cmp dec outsl idiv mov pop mov dec std dec fistl inc xor adc sub imul sub fwait mov push aas cmp mov test gs push push adc dec rcr arpl adc inc scas mov popa sub dec cmp jns out cmc flds sbb int push fldcw push inc fwait mov xor sub (bad) push jns insb rcl sub pop adc sub test cld pop pop cwtl nop js adc bound inc (bad) jecxz xor inc sbb xor mov push add add ja adc cmc aas add push (bad) or dec mov adc sbb xor dec (bad) dec out xor jno push divb flds push aas (bad) arpl sub popa ret call lea popa popf mov dec mov ds xor sbb aas bound mov sbb jmp movsb pushf push shrl mov insb add jl insl add jno test xor or jg pop adc in stos sti mov sbb push clc and mov dec and test notl outsl notb mov xor cmp call std or scas into inc outsl pop clc xor out sub lcall cmp stos lahf push insl jne push jmp (bad) fimul cmp dec inc inc nop (bad) add sarl jo (bad) xlat pushf jecxz cmp sbb or jle ja inc xor cltd pop mov and daa add xor pop (bad) fwait mov inc push jns mov cmp or (bad) int xchg ret sbb pop mov mov (bad) in data16 sarl push adc sbb mov ja test dec pop imul jne das cmpsl cmp int3 pop nop (bad) jl jle add inc aam jnp insb dec addl loopne stos mov fdivrp xchg mov adc ficoml jnp,pt rol xor or and test enter sub dec fprem je jecxz lock dec out jle jne into xor add or stos adc xchg cmp jp pusha xor pop or push shrl lcall mov mov pop rolb lret mov das xchg pushl incb sbb pushf cltd push (bad) imul lea je add inc inc sahf cmp jmp or cmp dec jo scas cs daa mov jle mov add fcmovu pop setb sarb or jmp and push jle pop cmp pop and leave gs call or insl pop mov cmp xadd std movsb test inc call out (bad) mov lcall xchg dec push stc jp xchg outsb fistpl push sub aad adc mul sub loopne cs pop sub (bad) mov lods ljmp push push xor and cmpsb stc dec xlat mov or ljmp neg mov xor enter rolb add add (bad) hlt push repnz cmpsl clc and push cmp push pop sub fistl pop and mov xor mov add or inc addl adc mov mov fwait es cli repnz fs fdiv ret jl fistpll je into (bad) mov add popf mov jns mov mov ds mov mov mov push inc sahf pushf jnp xor lock cmc sbb and mov push jbe paddsb cs pop stos frstor outsb ss test shrl jl mov push addr16 subb inc jl cmp xor movsl add pop pop stc add les das scas dec xor adc lea insl out xchg out (bad) pop mov jge push rep sub pminsw xor mov pop sub (bad) ds add andb aam jle aas (bad) lret and pop or (bad) or pop std out push push ljmp or aaa mov pop push pop xor dec ficompl jne jecxz push jp ret add popa mov adc stos cmp (bad) test out imul cmp pop dec addb push cwtl insb mov js sbb mov movl es pusha jle sahf add push or into push mov pop sbb loopne fbstp dec ror dec inc cmp lock or cmpsl dec insl jecxz push int jns cmp and adc push out fistl ss cld xor cli sbb add xchg or sub adc nop sbb mov or jmp mov xchg add std xor int3 mov enter sbb les mov cmc aaa (bad) inc xor xor and jo sbb adc xchg push fmul cmpsb sub inc mov test xchg out mov cmp mov add into std and les jecxz pop inc pop fdiv mov int3 int3 adcl loop mov or (bad) fnstsw pushf adc mov and test sub mov lcall movsb sbb and adc jae js lock adc call pop cmp in push mov add sahf jge shl mov ljmp mov pop sub pushf adc sbb or pop fcomp mov mov jge ljmp and bound std mov jns inc and xchg bound inc rcr ret clc dec dec es test repnz pop xchg mov lods or or sbb dec jl popf sbb add imul sbb fisttp rolb popa jbe jmp jb sub add inc movsl mov aad cmc data16 add jo inc xor inc inc lret hlt or cli clc enter or jb mov out faddp mov add pop pop jecxz mov cmp or jmp or dec xchg xor aas mov mov addl adc push ficompl and sahf mov sub mov int sub ja rcrl (bad) xor call adc clc cmp mov mov aad inc loope pop push xchg cmpsb sbb xor jp pop out mov nop jge ret movsb xchg leave xchg lods cmpb dec lds jnp popa out dec ja mov test push daa or sti arpl popa mov add push dec sub push mov jb into mov xchg (bad) or subb inc shrl (bad) (bad) sub xor lret decl dec pop add rcll jmp lahf add in jecxz sub iret dec inc jp pusha pop add mov shrl std mov movsb hlt js in cmp or fsubl hlt sub or ror cmp mov dec xchg xchg hlt xor sbb movsl push stc sets pop scas sbb push fistpll or xchg sti or jl cmp iret cmpl push stos push xchg mov sarl mov sbb inc (bad) fwait stos jae data16 rcrl pop int ficom (bad) movsl out and movsl (bad) cmc imul shll int (bad) jbe mov sub sti std cmp jl popa jo mov lods mov repz pushf pop mov xor jecxz es push add scas clc je das push js in shll mov test leave cmp shrl dec out pop xor int mov dec jmp leave push out cwtl add cwtl mov jno into dec daa push lods adc flds hlt cli dec jnp add lahf adc cmp xchg xor mov and stc mov int3 lock jp (bad) outsb ljmp or loope mov or dec fs xchg adc push mov int3 jmp xlat adc push xorb sub or xchg movsl jae int push nop cmpsl push sub ljmp lret pop leave inc inc sarl cwtl push and mov das mov aaa jp pop (bad) push jae jne gs push or call dec movsl add fldz daa and insl mov add add xchg mov adc mov push inc or dec or push sub xchg jg fwait jp rcrl cmp rcrb inc stos cmp (bad) bound cmpsb sub mov mov sbb stos xchg jp add imul or (bad) xchg cmp dec inc mov in push cmp inc fisubl cmc movsb sbb lahf pop call xchg adc mov rcr mov (bad) pop lock hlt ja cmp pusha jno pusha lods lods jo mov push pop sbb cmpsb push aaa add into (bad) mov outsl imul int3 ret pop xchg fldt jg inc inc push mov push sub and jae (bad) icebp or add cmp cmp sbb xchg arpl inc fmul (bad) mov sbb jmp mov rol add add jne inc sbb outsl xor sbb jecxz mov pop out xor and outsb ds inc dec xchg adc xor jo cltd insb or inc mov xchg (bad) aas outsb (bad) mov in mov pop jnp add cmc ljmp jge lret fsubr sub mov shll mov pop xlat xor jge and (bad) mov jbe dec xchg pop or xchg xchg mov push hlt mov fldcw call stos in fwait imul and cwtl and sub test jg test xchg mov and or pop ja dec and jae jp imul js inc and and movsl call push imul clc in inc and inc add test or addl fist lret sbb sti int3 fwait and cmpsb sbb sbb pop cmpsl ret sbb jnp mov mov iret mov cld or std pop loop leave push ficom jae pop in in call das push jnp jge xlat mov mov out punpckhdq mov push push paddusw dec ffreep xchg xlat dec fnsave (bad) fmull xchg xor pop and cld mov enter lea cmc test cli mov mov pop pop push jb adc pop addl push mov dec sbb mov add and je jmp adc push mov or push stos (bad) orl in mov jl dec (bad) call test and scas lahf mov addl sbb shlb push adc dec cmpsl xchg or (bad) sbb fldcw out jbe push mov pop mull inc xchg movsl fisubr cmp rcrb jge enter jnp adc imul (bad) (bad) fstpl adc xor sbb jne pop sub in jne jae mov scas int3 (bad) (bad) pop mov push (bad) adcl rorl lahf out dec push ja add in or adc ja pop dec xchg imul sbb mov sub or add out test hlt cwtl (bad) push sbb push xchg js jnp sti and cmp jg xchg dec jmp js xchg cmpsl pop cmp xchg cs xor adc int ss pop jge push mov lods (bad) outsb out mov mov (bad) pop je fimul xorb stos and (bad) mov cmovae sbb lret orl push pop outsl lods mov loopne inc xor insb in fcomi mov cs roll xchg ficompl outsl repnz nop sub adc out add subb push pop xchg in jge sbb fidivrl xor les popf xchg stos jl adc lods jmp push cwtl push sbb dec je incl out and sbb mov sbb jae ficompl cmpsb adc and lods cli (bad) cmp sub mov notl test int3 int3 xchg test test cs push or je or ljmp rcll pop mov insl sub mov in movsl dec push in mov (bad) dec jns and xchg jnp or stos subl fsubrp xor fs xchg and xlat pop jle lods xchg cmp mov mov dec or scas les vminpd bound fwait ret cmc (bad) lcall jecxz jge cltd adc jo jl fsts stos sub inc in decb sahf (bad) jnp sub push pop sub xlat sub fdivrp in xor adc mov inc lods shll push mov je mov lret jl rorb (bad) sahf fsts or cmc mov or test cld cmp pusha stc pop mov in imul mov lahf stos nop mov vxorps mov loop xlat sub enter xchg push fcmovu fdivl stos andb pop mov dec idivl fs loope mov mov cmp and push dec add test push mov stos xchg insb mov adc add pop push jb xchg cmp pop inc loope sbb mov cmpsb pop (bad) pop xchg mov cmpsb fucom mov cmp fiadd and in mov adc xchg lret lea bound stos stc in push (bad) push xor pop push clc adc scas in cmpsl pop jbe std mov mov and jo pop push repnz mov xor into pop mov insb push adc clc mov sub mov pop clc adc mov fimul push push push push std imul push jge push ret (bad) sarb loopne daa adc and mov das mov sbb and adc fdivs jl xchg cmpsb orl sub inc sub dec sub loop lods add leave push inc pop xchg add aaa lods int clc ja sbb lods adc inc pop dec addr16 pop sub out adc andb adc jo fs insl jbe mov mov and push mov mov dec push push mov outsl and rcrl in outsb leave lds or pushf mov dec ljmp in push nop (bad) aam ficom lret xchg out test adc xchg jmp jp movsb dec pop push dec or add mov nop xchg mov arpl popa out dec iret push adc inc mov std and gs push call adc or cmp stc cmp (bad) pop mov jecxz stos imul push and cmp hlt arpl sub mov mov int (bad) or mov into out mov sbb aad pslld push add dec dec push repnz int3 pusha popa push mov jg mov jne cld loope xor mov mov mov jnp shrl lods data16 outsb xchg in repz stos push jne pop das adc ljmp lds cmpsb cmp es mov cmp inc fisttpll push cmpsb bound mov jae jnp in adc inc sub (bad) push cmp jge in in dec jp,pt pop test scas sub into inc xchg jle cmpsb jns jno mov fwait inc lock out sub inc repnz xor in aam xchg std cmp je inc lcall jnp test mov mov pop je int3 mov xchg mov or or es cwtl aam xchg cltd sbb xlat xchg mov xor loopne jmp sub xchg lcall pop cld call xor sub test (bad) fidivr push (bad) loope rcll xor dec aaa rcl rolb or in popf rorl out jb in jbe pop pop inc sub mov xchg mov adc sub out outsl jae mov mov test ds inc push mov fs mov fdivrl shrl mov jge sbb int pop mov dec jecxz ret adc xor ret gs test rorl fwait ja arpl xchg popa popf and movsl mov xchg push leave pop mulb loopne sbb mov stos je push andl vpaddb sahf sub mov scas loop daa psrad hlt divb movl lcall dec cmpsl sbb mov fcoms pop mov ror xor mov in iret dec xchg in xchg push popa movsl lret add mov mov sub ljmp lock add sarb add nop cmp loopne popa push xor js pushf loope sbb pop ss fdivs rorb sub test imul adc rcrl mov and mov adc dec pop sub or inc cli enter mov inc jle ss dec mov xor sbb and mov cmp out out ror dec fidiv ficom or in jbe loop and pop outsb call jmp cwtl mov sti xor jns frstor aad xor pop inc sbb add jne xchg lds cwtl jno pop xor fsubs js js test outsb test repnz fnstsw push cwtl add lret mov leave mov and sub jle test jl shrb push outsb xchg insl sub outsl dec out mov stc (bad) imul pop xchg mov std adc stc je ficoml sbb add pusha dec xrelease aaa daa aas stos sti stos in xchg stos (bad) je popa lods pusha push rol mov sub lods xchg idivb loop (bad) dec scas add xchg sbb cli sbb aam push pop or mov lds les sarb adc inc (bad) pop jle ja loop sub push jnp cli push aaa adc out shr push psubusw and lods sbb adc int3 ret xlat and test clc xchg dec add mov xor loopne imul cmp popf (bad) (bad) aaa and js mov insl mov push mov or add ror push dec int3 les js adc (bad) xchg and pop inc jl xchg push cmpsb arpl push cmp xchg ja mov lea or pop pop frstor and mov out jge mov mov mov inc lea outsl or (bad) pop adc sbb cld xchg xchg or rcll ss inc or dec in pop in pop sub mul in in sbb ds shrb push int push sti stos mov xor aam jle bound stc data16 push imull imul call gs aaa (bad) xchg pusha xchg test sar cmp xchg sbb or sub hlt sub push jae xchg in push gs (bad) lcall leave lds mov or cmc sub and inc jno sahf mov jle ret arpl stc inc sahf push push xor (bad) mov and sub push jl jbe test int3 ret adc pop das xchg sub mov inc (bad) aaa cmp outsl iret aas insb xchg jns xchg xchg aaa test mov mov les and jne pop lods nop mov sti and push test adc stos pop inc ja (bad) sahf daa lds inc push enter rcr pop jg nop and adc in cmp aam rep xor das loopne pop push jmp es xchg movsl aaa aam popf sti in jo daa dec (bad) mov dec (bad) movl out cld sti push cmp stos jne pop mov insl mov sub mov push mov pop (bad) lahf insl mov mov pop sub push xchg data16 push push scas xchg push arpl push cs out adc mov in in js mov bound sbb cmp push call adc mov pop scas or mov fs inc leave loop fmul ret in sahf lgs push in adc jg ret dec pop loope add inc jbe xchg sub inc push dec das adc (bad) cltd push fnsave (bad) dec xchg mov loop lret push je xchg pop xor inc mov pop xlat incb dec inc lret sbb data16 push push int jmp jle ss mov inc (bad) jbe add test pop jnp and sub js repz inc push mov shrd cli jbe jmp xchg sbbl repnz pop inc rol cltd (bad) push sbb xchg pop sbb jmp pop and adc das call and push jl movsl fldl je mov mov inc inc outsl push cmc movsl pop xchg iret and leave pop std and pop (bad) lret xor jnp cld (bad) cmc sbb jl into mov sbb ret mov dec cwtl add insb ret mov roll or xchg mov add xor xorb xor cmp notb imul cmc mov sub lods dec push add pushl cmp jg inc add adc jb fimul test lock movsl mov scas mov js rorb or mov jae sub (bad) into sub add mov inc pushf ret cmc mov jb sub flds pop hlt aam sbb imul inc jecxz sbb inc sbb leave fildll movsl inc xor fyl2xp1 into xchg cli (bad) test test jne and push sbb lock add cmpsb jns sbb (bad) mov inc inc les or fadd add scas es dec sub xor nop push mov push xchg insw inc imul mov pop pop inc stc push inc or lods clc sbb dec pop push loopne into cmp std daa push shll rorl add loope jge pop or aad jo repz mov jnp popa ret sub loope xchg add in leave xor addr16 enter fldl insl xchg sbb lret jbe push mov inc (bad) cmpsl pushf push jo push adc popf cmp or repz mov pop ss push cld push jnp cmp adc jecxz mov add push fsubp and mov jg fildll xchg pop out cmp mov xchg popf xor out iret std pop or and or dec scas mov movsl aad imul dec mov or ljmp les (bad) sahf pop cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz add bswap xor outsl out jne add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add js add add or or add or add add add pop or add add mull add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add cmp push js in (bad) push bound adc mov (bad) insb (bad) fldt push ja popa jg add inc add movsb jne mov mov ret xchg dec (bad) or adc mov (bad) cmpsb aad jbe pop fldt out mov xchg cwtl sub pusha out push jl jge lods inc jmp inc jno insl ss add xchg jno ds cwtl fistpll pop popf xchg test ret xchg enter xlat jno xor call insb mov add sbb push leave jbe dec xchg add cmp ds leave xchg or jg push jae pop scas test adc leave xor mov dec scas xor ficompl or xchg repz jp dec mov fdivl pop fadds inc lea fcompp pop ret xor popa sbb ljmp cltd inc gs cmp pushf or mov in jae (bad) jp mov vpsraw bound (bad) lods enter ret lea test std int xchg es jmp jb lods adc jo loop sti inc es movsl push test dec rcll xor ds xor shrl xchg push test mov push stc inc pop cmp sbb (bad) imul (bad) fbstp adc jmp loop lea rcr ja mov mov iret pop inc subb push lea and sub pop int test dec imul hlt cmp (bad) xor mov popf or add push loope push pop fnstcw push mov pop insb fldcw lret ja push mov arpl loop (bad) jl mov xorps movsl loop jno incl scas jns into sub rcrb push int cs ss add ja cmp adc pop and clc inc inc jmp jge jae lcall js imul sti loope xchg std sub cld cltd in mov push mov and jo es inc cmpxchg lahf sbb sub cli lock (bad) sub je lock (bad) push xlat push mov inc stc stos leave cmpsb lock imul dec enter loope lock popa mov mov std adc test xchg mov popa fs pushw mov repnz push enter and push jbe add fiadd xchg sbb repnz stc xor js jne inc dec leave das sbb sub xor push negb ret push sbb sub cmp and cmpsl ds loop movsl add loope dec test and test neg stos imul jne mov fstps rclb mov mov in adc (bad) and mov dec movsl es (bad) decb aad cmp imul int3 fst in sbb mov mov ret push push dec add pop fmull sbb daa roll xor mov ljmp int3 (bad) jnp jo cmp iret scas dec movl imul int3 cltd mov sbb dec cmp stc icebp cmp in sbb (bad) mov pop sbb or into (bad) int xchg and (bad) adc jo insl fldl repnz shrb fmuls push inc inc jp aad cmp lea mov mov and lds lock dec sti inc sbb xchg inc mov outsb mov inc add insb ja popf sbbb data16 int fdivp pop sbb and test leave out ret push sub jle add out dec inc and sub jl pushf adc xchg lds mov sub or call push lea cltd cmc fild mov jo outsl popf inc mull mov insl cmc in (bad) in mov aam int3 push cli sahf test aam dec sbb in inc jle pop sahf les jg xchg push jbe aad aam or and and addl ss pop jb inc sub mov sbbl add sbb repz add test faddl or inc bound sbbb sbb (bad) leave pusha and jne xchg gs cmpl push out xchg or dec fucomip ljmp pop or fcoms pop and call mov xor (bad) sbb mov (bad) sub dec dec cli dec jbe push fildll mov call inc jle push outsb dec insl add pop dec pop pop mov cli shrb outsl push pop dec mov xor jo mov (bad) sub cld and cmpsb mov xchg sar movsl loop mov push push cmp nop fnstcw and adc ss pop ss mov inc insb mov xchg add pop fidivr pop movsl inc movsl mov cmc int stc out push add in xor scas or cltd jns push inc xor mov mov hlt imul mov sub hlt ja pop cs jmp ss out pushf idivl les loopne es leave xchg cmp insb sub repz mov fsubl jge mov adc cmp inc jg sbb push cmp cli mov cmp (bad) lahf nop jecxz movsl adc insl jbe in or fnop (bad) insb dec xor push adc add mov lcall rcr (bad) fidivrl sbb mov push dec push lret inc loope sub inc gs pop (bad) jo dec xchg sbb (bad) jmp sbb cmp outsb pop xor gs mov jno add mov adc or or test mov jl lods pop sub cmp aas daa mov push mov fucomi xchg mov adc (bad) push bound jp cs incl hlt enter inc pushf in push movb insl (bad) mov shl mov fldenv dec sub lods pop ss pop scas (bad) adc push jp outsl into addr16 jno jbe xchg jl in or inc cs pop cli pop enter das xchg xor out push mov (bad) pop inc aas sub in popa and jbe sub imul jg les mov or xchg leave and xchg mov rorb out fwait cmp aad (bad) push pop jne cmpsl shrb inc movsl mov sub icebp outsl push jbe ret sub lock leave dec loope push scas repz cmp fildl cmp stc add and sar pop push int3 imul movsb out and push add sub xor aas mov sti or arpl fisub mov mov or jl and das inc pop call push jne fs (bad) icebp jecxz push sbb adc and sbb les pop int stc cmpsb std mov cs call insl cwtl out pop inc add xchg hlt mov mov cmp dec fiadd in pop mov xor lret add and test adc cmp mov test (bad) scas cli and push (bad) push (bad) dec jo cmpsl mov xor mov sarb mov mov loopne movsb cld inc ret jg inc jbe adc fldl leave sbb inc repnz aas popf mov outsb xor mov add mov jno pop (bad) pop jle nop je imul mov lods pop sbb dec lret js mov pop fist loope hlt or pop inc stos sub jecxz lods mov dec lret stc in ret xchg (bad) cld addb dec fadds mov inc add cmp cmpsl cltd dec rcr jno inc hlt nop (bad) mov repz pop fwait cmc ja stos mov mov faddl xor jo in pop sub in pop stos mov add daa cli mov aam fs iret loopne push in mov xchg test mov (bad) xor ror inc xor dec mov nopl out cmpsl adc test out ficom mov jb imul and in or add adc jge rcrb push jb lret cmp xor shld xor adc mov inc cwtl pop mov (bad) jge push loopne dec imul mov cli adc mov xchg xchg dec mov jmp lock jo hlt scas add idivb inc mov mov sbb movsl inc dec push scas or inc rcr mov push push pop cs imul mov and in pushf add jno addr16 sti push jmp outsb add out popf dec (bad) jns ss mov stc or or lret out ja das cmp int jae movsb dec loopne,pn push push xchg ret jmp aaa add pop addl push fist mov and push cltd (bad) out cmpsl call mov pop test es sbb iret imull cmp add mov leave push cmp idiv xor and xchg cmp mov in add (bad) aaa and rcr or shrb adcb aad dec fisubrl pop test sub and jg mov ljmp dec lods mov push jns jge cld fxch test sub imul push psubsb hlt lock sbb pop or dec rclb push cli out or ret (bad) push lret jp (bad) jg jb sbbb scas mov je aaa call cmc ja sbb jmp into push popa cmp mov stos dec inc mov lcall iret mov ror (bad) in lea sub cld dec jecxz insb cld clc push mov scas test jp (bad) and dec int jmp sub clc mov push (bad) add insl sbb push cmp and and sbb out lods cs shr lea (bad) enter jne push mov cli inc and jecxz rclb sub and cmp mov hlt pop adc idiv pop dec mov sbb idiv sbb scas das hlt xor aam and pushf sub mov inc inc daa cmp out jne out jp inc pop lea adc mov lcall imul (bad) mov mov mov xor dec inc leave aas sar aaa mov mov andl in fnop fwait jns (bad) loope aam int3 adc pop fs ret push cli sub bound push lret repnz mov jg cmp mov sahf imul lcall xor push xchg xchg fdivs pop stos enter int or movsb lret xor cmp loop fnsave stc stos adc sub loopne std cld sub std sbb sub pop push add sub cltd test mov je jno fisttp ja dec jns jns push adc bound sti pusha push das test inc cltd hlt lret push jno test lcall jl cmc sub jns mov fsubrs pop test iret bound jo lock addl cwtl push daa inc sub mov adc or jb mov mov add fsub out sbb and (bad) call in mov pushf (bad) repnz mov fmuls jge ret cld sub mov xchg dec les fisub or loopne outsl test sub and add (bad) imul jge ret addl dec jge jae arpl das xor loope aas cs enter jo cli pop (bad) fadd adc fild jnp xor jge mov gs call add push sahf sbb dec ljmp repnz adc insl imul ds (bad) xor push mov mov rcrb dec pop push daa sub fisubrl popa xchg pusha inc push sarl push xchg jo cltd lods (bad) push lcall cltd in data16 sbb push flds xchg nop test ret sbb push lcall clc jecxz ljmp mov or rcl mov std jl cmp movsb or mov or push (bad) es pusha push clc es cmpsb jae scas scas stos push (bad) jmp outsl add or in loopne test jle add divb in mov add cmp jecxz and (bad) adc inc test (bad) jge arpl mov xor pop xor inc adc mov xchg cs and cltd clc mov xor (bad) and sbb imul cmp fdivr popf pushf jb pop push mov imulb mov mov (bad) pop cmpsb and adc and (bad) rorb int push stos insl loopne fcompl mov test cmp adc fisubr mov jb shrl das test cmc arpl les and test lcall cmp cltd push mov imull dec rorb xor (bad) ficomp push testb cmp or mov inc cmpsl fcmovnbe adcb mov in fdivrs push sub mov idiv sti cmp dec adc mov dec movsl cli cmp or sub imul jo xchg decb cs ss push and xor idiv (bad) jb sub daa dec test cld xchg addr16 fnstsw movsl ret enter fdivrs rclb rol mov add sub push mov xor stos daa in inc xchg dec adc (bad) lea les pop pmulhuw xchg test cmc push add pop test inc push adc daa cld into movsl or hlt in clc out outsb hlt cs in out les push and test add std or hlt mov inc gs jo ret fidivl push (bad) and rcrl mov lea mov inc push ds cld push cltd and out inc cli pop insl into push inc ss shr loop mov jle nop mov sbb adc xor mov sbbl (bad) mov in mov ret neg das dec cmp inc cli mov inc push mov inc (bad) stos sbb stos inc daa daa outsl cmpsl nop mov sub orb sbb sbb leave jp imul or xchg in mov dec iret mov pop pop mov dec inc testl xchg lahf jmp mov ret pop dec mov mov fildll jmp aad or mov addr16 mov addr16 lahf sbb jae xlat xlat cmc (bad) divl mov push ret sub pop add loop dec lods enter int3 pop test out outsl cs out cmpsl jl jno adc mov cmp (bad) mov sub (bad) jg,pn nop iret icebp add jp sti mov sub popf push inc jbe out mov fucomi sub mov pushw jg lahf mov stc and add mov stos pavgw add movsl cmp ljmp enter mov dec enter aad shrb pushf fwait jl aaa jle pop push xchg add and insb sub sub jle xchg mov pop clc test icebp xor jl sbb shrl xor mov add movl or (bad) std out stos arpl or and outsl out jmp (bad) icebp xorl push lods out mov adc icebp lea mov mov pushf std sub sarb fstps push mov loopne add push jmp and (bad) mov aas stos jmp hlt sahf sahf movsb dec add movsl and (bad) ss ret push mov push cmp jno add out int3 out aas pop push push xchg mov mov lds clc mov les dec into mov pop scas pop jl test pop fisttpl and sbb xchg (bad) fiaddl adc cwtl and jge icebp fwait shlb cld cld in pop or jmp mov push push mov and clc mov xor sub fwait dec hlt mov sbb inc mov lock in jge or (bad) xor xor cmp sbb stos imul out mov inc jb push sbb pop rorb or jnp call cwtl mov cmc and sub push pop cmp int3 negb xchg sbb les in loope test jl popa xor cmpsb inc cmpsb mov shll sub jl scas stos divl cmp scas orl mov inc xchg cmp rclb push (bad) sub stc sub or (bad) mov loop imul gs push dec mov ror mov xchg xchg je lock icebp xchg inc push sub add insb mov fisttpll and lea test (bad) and enter hlt jecxz push sub (bad) inc sbb mov repz cmp xchg inc push jbe xor pop jbe xor mov ffreep pushf dec xchg mov dec inc pop cltd adc dec push cli jmp enter ss push scas js rcrl xor test push jge cmp sub push jl sti (bad) loop jle jecxz xchg (bad) addr16 jbe mov sti pop sub adc test cwtl int jo or jecxz into movsl fbld mov xor insl imul lds add lcall nop sub arpl push sbb ret cmp add sbb jecxz lret jae in xor loopne mov mov push ret mov (bad) dec repnz add push and push jb sbb adc mov or repnz jnp mov cwtl pop aaa fdivrs jns cmp jo push push mov outsb subl pop xchg sub xor (bad) stos push and sub push cmp xchg xchg enter (bad) loop dec rolb or cs pop xor fldt inc xor jg sbb xchg aam repnz pop or pop push fiaddl inc stos xlat (bad) rorl int3 lods int3 addr16 xchg dec xchg stos ficoml aaa push (bad) jb push mov jle and xor (bad) (bad) (bad) or push jl mov int3 jp sub mov mov out xor jmp jnp icebp lds decl jae test jb xchg xchg data16 dec cmpsb outsl out jns add cmpsl orb jno out enter lea inc fisttpl push int std sub jnp xor add sub notb inc pop push ss push das sub movl mov mov ljmp mov pop scas push adc fild jb mov cltd or enter cld mov jne add or sub fs aaa cvttps2pi mov adc notl test pop mov outsb adc shl fsubrp test arpl call mov jmp enter int3 cmp int3 adc xchg pop ljmp fstpt jmp (bad) push dec test mov sub xlat fwait loop pop and (bad) dec sub mov add repnz add andl movsl pop push push in jne leave sti test xchg shrl lods and push lahf dec or xchg fs popa xlat lcall into fidivrl leave movsl (bad) sti push enter sbb arpl jns dec add aad shr hlt loop dec bound mov cmp mov inc dec mov hlt sbb cmp xor sbb inc dec add pop xchg jp repnz xchg or das jmp fldl adc pop add sarb sub or sbb push cmovb jg dec pop mov inc idiv rcrl or clc dec (bad) cmp loopne outsl inc outsl les cmpsl cmp jno notl (bad) pop arpl div pop push out (bad) sub or xchg repz in nop mov ret mov imul mov or jb cmp pop adc mov sub dec cmp vmread ss mov repz pop cld cmp xchg inc pop xchg mov pop push push movsb dec pop dec push sarb sbb test add insl sbb add test addb enter paddusw int3 jp aad aam mov test mov iret add shrl lret pop inc aad adc push sub inc cmpl mov in cs mov fadds xchg and ret addr16 add mov sbb inc dec lret cmp mov shr xor gs mov mov aad aad mov mov pop cld push mov mov xor test lods pop cmp push jmp dec cmp dec dec outsl movsb outsl jl cmp out pop adc fstl jbe (bad) repnz out mov notb test in enter mov sbb cmp andl sub mov fwait sub bound xlat out cmc test nop dec add stos xchg data16 adc adc xor (bad) mov outsb pop jns dec daa sub push stos mov aaa jo cld cmpl or clc (bad) mov adcl push push or jo push call add ret dec in mov ss int cltd jbe inc dec loop add mov xchg cmp or push arpl hlt jle pop jno popa mov xchg push mov cmp pop sahf and sarb xor loope,pt es int mov jno jmp iret xchg jbe jb xchg adc into xchg mov insl mov popa mov jns leave or adc mov (bad) dec adc fildll dec jae inc gs test mov popa fs test mov sub movsl mov pushf bound cmp adc jnp mov stos hlt xor mov lret jl push ja in cmp push aad fstp xchg mov insb mov inc les cld mov dec mov pop test mov (bad) stos stc add xor lds pop je loopne (bad) cmp outsb lds pop fwait js cmp sbb gs icebp add (bad) int push adc xchg cmp mov pop and mov and push je movsl push fnsave dec inc cwtl daa cmpsb repnz jbe mov iret decb or pop xor or insl gs or les cs seto ret jg xchg add dec popa in or fs adc aaa nop loope popf xor mov mov and or popf jo out mov imul sub jle xor push add xchg or ret lahf bound or pusha in xor paddusw push (bad) in lea scas bound imul inc pop sub or or push rol xlat out inc imul inc mov mov aas adc mov mov js xor nop sbb mov aad push in mov adc aam fdiv xchg hlt push dec jg mov sub pop psubd dec call dec faddp cld icebp push movsl sbb lcall loop lret ss shlb in sahf mov push cs je loopne int pop mov inc mov mov test loope mov xchg jbe mov add adc loope lret iret jg xchg add push fsub push inc stc hlt out mov imul into out mov mov xchg cwtl sti scas insb jo in fwait sub in pop push sub call or ljmp push inc sbb subl fbstp mov add and adc das in pop mov jl sub das movsb mov mov adc fsubrs cmp mov lret mov dec sub pop cmp xchg xor lea jnp mov xchg hlt jg sbbl popf popf cltd loopne stos push fisttpll std icebp mov popa pop inc fwait add sbb mov sbbl popf add push cmova add daa cmp call dec movb xor push divb or xor push shlb cmp push jl out js mov sub fcoms adc cmp outsl std es out out repz lds xor mov hlt mov fistpl inc insl sub cmpsl (bad) xchg jb xor imul and lcall (bad) and xchg dec sbb push (bad) jne and insb mov data16 pop (bad) pop mov adc popf fbld cmpsl sbb sbb stc cmp and sbb in gs and adc mov imul pusha (bad) pop mov jecxz fmul cmp mov mov xchg jge ljmp aad dec outsb mull divb pop adc adc fild push add cmp jno mov jnp (bad) cld and leave lahf xchg sub adc xor push cmpsb (bad) cmc stos push add jae aaa cmp stc pop adc (bad) hlt movsl xchg xchg mov cmp sub scas incw adc mov cli repnz loop cmp jl xchg aaa mov (bad) bsr add sbb in sbb outsl test (bad) mov test loopne (bad) shll sbb mov xchg rorb js mov mov sbb shrb (bad) je lea mov fistl sbb push adc ret lret jle repnz cltd sahf add jb xchg js xor (bad) std adc and test adc and push je pop aam hlt cmc fchs orps sti cwtl out jo add mov imul fld jnp ss adc and pop fmul mov jmp pop fwait cltd les mov push xchg notl dec lods dec dec loop (bad) repnz dec inc sbb outsl mov or jb mov lcall xchg xchg sarb mov fsubl inc or xor and push repz mov mov test cmpsb (bad) lea jge xor fst sti inc jle test (bad) mov ss mov hlt lahf daa fcoms icebp cmp adc lods (bad) cmp test jle xor adc mov mov aaa and jae cs pop je loope xor arpl and sub pop mov xadd test imul pop gs or cmp (bad) jmp dec popa sbb in cli cwtl inc fwait scas or mov lret movsl xchg add jle adc lret mov lret mov jns mov enter mov pop xor call jmp xchg jnp (bad) arpl mov or push (bad) mov mov cmp pop movsl outsl dec addr16 repnz jns test das sub sub mov punpckhwd scas fsin inc iret rorb mov test popf adc mov sub lds fwait popa inc cltd cmpsb test lods hlt push cmp adc jb add jge idivb roll in (bad) jns cmp std lret pop jl,pn mov jo inc das mov pop mull fwait push in (bad) sar fcmovu js out pusha movl ja imull mov out pusha out mov or popf pop mov mov push xchg pop insb scas inc out fisttpl cltd test sub cmp cmp adc and loop sbb call es mov pop adc sti pop (bad) js movsl and push and and lea xchg xor inc ja dec jns xchg sbb cltd lods (bad) push insl stos (bad) cwtl ja test leave int push or xchg scas xorb jp mov jmp and or fs addr16 push push pop push repz insl cmp xchg cmp sbb loopne inc mov mov pusha ret pop jno cli (bad) loope lret push jg lret mov (bad) cmp dec mov lea outsl (bad) jmp mov xchg test mov repz xchg push xchg aas int fisub add addr16 inc fdivrs out mov mov test or xchg push dec popf mov mov mov add and push and and add in icebp movups loope jno xor call clc jno cmp dec lret push cltd insl sub dec outsb push nop sahf outsb arpl cmp fldt sbb xor (bad) fwait mov and push mov jl leave push insb mov xor lret insl push fwait sbb cmpsb pop and xor xchg scas push xor in mov out and cmpsl mov inc ds mov call xchg cltd adc insl and dec xor add jg imul add jl cmpsb mov dec mov push out fs icebp iret nop js fwait inc (bad) pop out subb adc mov cmp mull sbb jns fistl sbb cmp mov add sahf dec jnp fstps cwtl jmp ljmp insb cwtl cltd xchg ret sbbl pop sbb je dec call sub adc xor movsl je dec outsb or cmpsl sub push adc cld cmpsl mov mov cmp mov ret adc adc xchg jne subl ffreep add sub jne jns dec xchg pop call xchg and or in cmp sbb sbb lret movsl jle sub repz shr ja jp imul bnd lock ret shlb adc lods cltd js arpl jl (bad) repnz (bad) sbb hlt fsubrs je stc call pop and movsl and xor or add arpl sbb imul mov cwtl jne cltd mov (bad) loop dec sub fbld cld repz rol arpl push dec subb sub dec testb adc dec push or cmp rcr cli lahf jge xor xchg (bad) mov repnz and adc out lahf insb push cmp (bad) xchg jl sbb popa lods inc in cmp js jp mov add lea enter std sahf adc mov imul ffree cltd mov add mov movsb push ss jbe lods mov rol js int3 jns sub je popf pop data16 iret dec idivb imul jne cmp daa push mov lahf and lahf sub inc pop dec add (bad) leave aam data16 xchg icebp inc test sarl lcall adc push mov je sti lret inc icebp cmp ds mov xlat movsb out pop xchg or push mov inc (bad) aas fsubrl mov setae pop (bad) cmp or (bad) lret ret daa cwtl sbb call sub sti lret xor (bad) lret ljmp xchg add lods adc aas int jbe popl push xor jae cltd xchg jp insl xor jle sub cwtl xchg test xchg adc mov setae jnp xchg shld add or das inc movsl sti mov mov pusha int add add inc ds dec dec xor out sbb (bad) call mov add sbb loop lret mov mov stc stc jno xchg or cmp ja stos mov xor out sub sub push mov adc (bad) hlt (bad) enter popa shrb jle push xor in sub mov cmp inc push stos pusha jmp lret ja iret shlb inc stos repnz bound bound jne pusha sub inc mov lea stos xor jo push dec fildl adcb enter mov int std in movsb enter (bad) inc adc cmp (bad) aad push lds or mov dec xchg cltd push xchg jecxz cmp mov leave push nop aaa push xchg cmp xchg call arpl push jnp data16 xor sbb jmp sub cmp mov add or out rcrl add out mov out lcall fisub fcomps pop cltd add jo or or stos adc pop repnz xor sub push mov mov stos xor (bad) in sbb into lea popf lods sub mov mov ja push cmpsl and (bad) push jo fisubr xchg lock int3 stc inc fdivr add fistpll pop xchg mov imul push xchg lods pusha int mov jecxz pop pop popa sub dec ret push or in xor pop xchg and pop lea bound lret mov xor jge push mov xorb les cmpsl fist addr16 xchg dec sbb jo jno gs pop dec (bad) aad push fcmovnb adc jns (bad) clc sbb push cmpsl in jle and leave lahf testl mov push push xor stc cmp push loope cld push mov mov cwtl and sbb push mov pushf ret xchg das (bad) xchg out push pusha out cmp mov rclb sahf cmpsl popa cld rep pop test jne jmp adc adc rcll cmp xor shrl outsl dec mov scas pushf call call icebp push inc or sbb push ds push dec gs in cmp adc push sbb cmp pop xchg inc mov mov sbb pusha hlt ror or or out loop cltd xor dec jge adc in xchg lea outsl sbb xchg mov rclb push ror sbb or xchg insb adc jmp dec test pop nop lcall inc inc stos or add lods adc outsl push rcrl jle or jp fsubp adc into movsl cli sub jbe add pushf pop inc sbb out divb push and outsl int3 pop and push or loopne leave jp (bad) inc dec fisttpl shr paddb push push xchg sbb insl mov aaa lahf loopne add mov (bad) sub rorb xchg sub jbe pop je jmp pop push sub rclb bndldx lcall aad push inc cmp jle mov mov jne (bad) and loopne mov scas aas dec pop pushf add pushf sub out mov sbb push scas mov inc jmp scas cmp sub (bad) jl or or inc out push imul cmp cltd xor call sahf outsb sbb mov xchg jo push (bad) mov mov shl insl jle in arpl mov jb xchg jp not push adc (bad) andl adc mov cmp fdiv fucomi jle xlat push push mov repz sarl push or mov adc jmp call iret pushf push cmp lret jns add mov fdivl leave (bad) cli sub mov (bad) sub cltd push out nop aam push (bad) scas imul cwtl fiadd loopne outsb sbb mov adc and inc xor or call je scas incb pop add push cmc xorl es jp cmp fs lahf and inc sahf pushf sar jnp insb gs xchg push cmp inc vmread jl push and mov repnz inc ja iret sti mov xchg push jae jns fisub call es mov aas rcll push xchg jbe add fucomi xor lods lock push enter cld sbb jno out sahf mov fwait inc and xor jnp test aaa scas add stos mov (bad) mov jp data16 pop jg int3 adcb sbb ret repnz aas cmp ret or lods ljmp out push stos ret inc sbb mov adc js imul cmp fiaddl mov enter (bad) mov xchg cmp mov add test lds pop aaa in cs xor mov sahf sub xor out mov mov jge push mov xlat jmp inc pop sbb test sub enter ja xlat adc fmul iret cmp fnstcw stos mov stc imull mov push jge loope fisttpl mov fldl or and or jb cmp jb imul sub jne rorb lds inc js adc dec fstl ljmp (bad) mov adcb aam adc enter cmp jle cmp inc out adc jnp adc jg lret addl adc push mov mov fldcw xor push push fistpl mov push dec cmp xor xlat imul insl lods lock dec fs mov fsubrl das adc push and movsl sbb inc lcall shll outsl rorb pop pop push jb cmc mov pop jecxz in xor mov cmp and lahf mov inc outsb pop jae fdivl jmp jo pop dec dec lcall (bad) les fnsave lret out mov and push cld add jmp pop mov mov pop adc loopew cwtl outsb adc call dec add test push test arpl jmp (bad) mov nop test shll fwait test and add sub loope sub jae push bnd mov test mov pop sbb mov js inc pop repz pushf fsub jg inc arpl jbe jge jne pop sbb push (bad) out out and imul and mov xlat outsl add sub and lahf in push xor pop push pop pop dec cmp test cli loope negb add btc arpl mov fcmovnu xor pop inc and std xchg arpl mov xchg stos (bad) dec ficom cld mov (bad) cld dec sub out (bad) mov lds int fs lods repz sti (bad) das lock iret out mov push mov add repz cwtl jg fnsave add xchg add out in cwtl std push or mov push jge push adc push repz push push dec loope scas sbb jge and jp (bad) aam repz (bad) and and rorb xchg and nop xor pushf in inc jns push fucom mov hlt pop sub movsl clc mov sub in ss ja std das add cmp loop and lods pop lds or cs pop sbb js fcoms mov mov inc cmp jbe,pn push ja lods and or das lds in cmp cmp add xchg insb sub cli fldt mov mov lock and insb jno and popa lahf imulb mov jo sahf add add pop cmpsb and paddsw mov pop sub inc adc ja jae dec adc push addr16 dec fcompl jp and fistp mov xchg mov mov inc xorl leave fstl cmp fs dec xor inc hlt mov lret adc shrl mov insb popa scas sub mov cmc fcmovu jmp mov mov sbb cmp lahf rolb sub int push add push xor fidivl add inc popa iret aas inc mov xor mov lcall fs pop movsl std and mov lcall pop int3 popf popfw mov (bad) lret hlt rclb inc or movb pop mov ds and xor aad or mov int3 stc sub mov mov scas fwait sbb fcmovb (bad) out stc mov clc (bad) bound push daa pop jg enter adc sbb dec pop push pop mov gs sub push mov dec scas pop stc pop outsb call lahf pop xchg xchg mov repnz imul and (bad) ss pop adc dec lds sub inc pop pushl push cmp cld pop imul into mov pop inc popf imul inc inc loop xchg pop xchg popf cmp dec repnz xor cmp xor adc pop les cmp sti cltd jle cvtpi2ps cmp loop jae test dec aam and cmp push xor inc test mov sahf (bad) mov sub push and out xlat bnd inc adc push mov add int out mov inc xchg js sbb jecxz mov loop cli jmp ds xchg outsl into mov aas push or jno fstpl aas cltd aam add ret add jg mov lods jmp pusha mov ljmp mov push lock pop xor cwtl sti dec arpl xor mov mov xchg xchg das sub insl sub rol jns add clc in aam aad rorb idivb xchg shl pop ret std mov dec and jg into repnz ljmp incl xchg movswl rclb outsb cld repnz lahf sbb test (bad) add fs loope scas addr16 cmpw inc adc arpl jns lods jno loop and (bad) std (bad) jnp push mov in outsl (bad) dec scas jo repz sarb cmp dec lods sti inc test (bad) pop xchg gs nop icebp xor (bad) xchg cltd sbb (bad) push loope xchg xor test mov movsb jnp outsl xorl insb sub sub js cmp sbb idivb pushf lock cltd xchg mov mov test xor jmp and js pop xor jp jnp aas addb xchg inc push test mov enter sbb sbb (bad) xor lahf sarl les or movsb pop sti (bad) (bad) in xchg loopne add inc xor add or mov cmc iret mov int3 jb sub imul jno jb test lcall mov xchg insb sub fnstsw xor adc dec sbb test push pop cmp cmpsl or scas pop addps inc (bad) cld adc mov out add aas push popf sbb jl sub leave and mov imul fs adcl dec push sub repnz mov iret jbe dec sbb push out icebp inc (bad) imul inc xor lcall mov stc xchg mov sub xchg jp inc rolb mov cld cmp cmp cmpsb imul aad aaa aaa adc (bad) ds or and test adc inc jmp mov jp jmp rolb sti clc cmc xlat mov jge nop fisubrl cmc sti addl shrb in xor mov cmpsb or mov test add sbbl xchg cmpsb pop cmp inc cmp stc sub pop sbb or jg fnstsw std aaa dec dec fsubrl cmp je xchg mov hlt inc pop jmp dec pop dec iret out mov and and cld add in iret pop mov insb or in mov cwtl nop jp stos lcall sub sub and xor jns cmp xchg xchg pop imul sub int xor rcrb or jmp sarb add int3 xchg pop call sbb mov mov out dec shlb dec das inc rorl mov lcall add inc pop orb sti dec (bad) add dec jl sbb jno les ljmp sub setl scas mov mov or mov out pusha cltd or dec fist xchg (bad) shl jmp adc ret clc popl pop jecxz ret ret and xchg cmp mov or aam cmp dec mov cs mov xor mov neg popf nop out and or and sub and leave xchg les lock mov popa lcall cmp (bad) sub cmp je adc inc scas cmp (bad) lret das add xchg fdivrl popf dec or (bad) fsubr (bad) mov cltd push les movsl scas je jl inc xchg push cmc jo mov jge adc iret call lcall iret dec adc (bad) xchg repnz sbb jo sbb xor cmp mov iret pop les pop addr16 inc out dec roll jb cmpsb jle and in gs cmp sbb xchg lret das mov push inc std add sbb sub adc repnz mov cli (bad) int movsl dec mov pop pop xor push nopl scas jbe (bad) pop rcrl popf push xchg pop push das jmp jo add push push lods (bad) cmp test ficomp movsl pop xchg js test lods out push out xor (bad) push (bad) data16 inc xchg mov pop imull mov out test cmpsl jl gs mov cmpsl and jb in and xchg dec xchg push js inc decb pop xor jns xor lret fucomip stos fisub cmpsl es inc imul pop je lds aaa fiadd push stos cli aaa jbe sub dec inc outsl push push jno out (bad) cmp cli xchg inc rcll dec lret andl dec cmpsb push mov into sbb fcompl jnp jnp push lret inc js and lock int3 pop add lcall pusha jecxz xchg xchg mov cmp xchg test daa dec repz ja setg ffreep dec mov clc les and add and sbb mov fistl cmpsb cmp negb inc push dec jl jmp and cmp cmp loope xchg in rcll sbb or mov push mov gs dec (bad) mov and sub mov adc aas sub shlb (bad) fcompl gs jb mov jno pop pop add sbb or (bad) jb popaw jne jl js shlb add rep jmp lea xchg jns pop rol inc adc fbld (bad) pop cmpsb daa jmp ja push inc test sub mov mov in cmp pusha pop sub jns push fstpt divl movsl (bad) imul movsb dec jo jl push repnz imul int ja xchg lret jbe,pt adc mov test mov and inc adc (bad) push cwtl mov xchg and lahf je or into xchg loope lcall popa popf mov pusha pushl sbb xor out jns in jmp pop mov ficomp in aam icebp or mov dec push fwait jne dec sbb push sti cld dec insb subb lret mov or push hlt cmp jg xchg sub pop movsb ja gs xor cmc sub adc ret ljmp lock (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret decl add aas mov xor dec adc jb add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add jne add add or or add or add add add pop or add add mull add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add cmp push js in int inc or mov es mov (bad) (bad) mov mov add jo add add add outsb lret sbb in pop aam repnz lods (bad) add or clc in (bad) push sbb pop jns lahf cmpsb mov sub cmc hlt imul inc lods sbb xchg xor pop mov mov and add dec cmpsb bound pop clc sub mov adc scas xor adc xor push cltd add mov pop mov fsubr sahf inc push outsb call shr lods pop jle daa xchg test or pop pop arpl mov test and push test (bad) in (bad) cmp mov sbb jno cltd scas imul aas push (bad) fisttpl scas adcb in pop pop stos xchg popf sub jae iret stos xlat jne outsl xor cmpb inc cmp scas or or enter cmp inc adc out fchs push mov icebp ss inc lret fadds aam ds lcall push add movsb (bad) aad cmpsl cmp mov push ret mov pop imul lret xor mov (bad) lret mov sub repnz stos (bad) out adc (bad) ja aas add popf subl mov js fsub mov adc add xlat das xchg pushf mov mov (bad) sbb xchg scas pop adc lods inc arpl popf jae xor mov fs gs mov es mov popf and and pop cli mov xor xchg xor imul mov or test lret insb out push push sbb imul sbb data16 push pop or (bad) ja ret sbb bound xor jmp sub inc in adc pop ret cmp dec popf ljmp mov add sarb andb jne lock inc popf je mov adc (bad) lahf (bad) (bad) mov mov mov mov ljmp ds mov sub test inc je xor inc shll dec inc pop mov adc clc add movsl or push xor lods mov mov sti cld xchg xor lods std fsub jb adc cwtl lods (bad) push (bad) nop in sbb and (bad) popa inc and (bad) repz push push inc (bad) lock jecxz into adc mov inc movsb decl das mov dec and push xorl lahf (bad) xchg push add inc sub mov mulb and cmp nop inc fs and pop or lods and mov mov jle sbb gs mov (bad) mov fsubs mov sub pop jp (bad) push out pop or fstl hlt push or subl loopne into pusha adc imul nop sub sbb jmp cli nop jno sub movsl fsubrl pop push lods roll int ss jns or aad in cmpsl jbe inc sub dec outsl dec pusha cltd mov outsb cmp sub inc out loopne xchg popf inc lods pop stos gs jo das sti jbe repz inc add add addr16 pop xchg sbb xchg push hlt push rolb in rcrl dec rcrb push sub (bad) cmp or cmp push rcr or xchg (bad) int3 mov or lods mov xor enter xchg inc js inc leave fbld addr16 inc xchg cmc aam mov xor lds or stos scas sahf jno inc add hlt bnd adc adc mov (bad) mov pop lahf mov loope pop push dec mov mov lds stos xchg cmp ret and sbb lds push pop sbb sub jle mov mov rclb lea scas mov bound fstps pop leave pop pop js test or stc cmp cmp sbb fstl std idivl cltd sar fwait inc fadds fidivrl test lods pop xor gs or or inc lret sti rcll stos sbb mov or pop or sti adc jne adc cmp subb jmp lret dec mov dec (bad) repnz fcoms push sub sbb mov push cs stos icebp cmpsl iret xchg sub lods dec mov sbb ficoml insb (bad) cltd push mov jmp nop test test sbb (bad) mov scas push lcall and inc pop pop aad in test mov cmp bound xor dec push iret daa mov bound rcrl fsts stos cld adc sub push pop call inc add lret stc dec or adc xchg movsl repnz jns cmc int3 mov jmp mov dec fstl jmp cmp bound test mov sahf je test fistpll jbe clc inc shrb push dec (bad) mov jecxz inc cmp add push ljmp mov pusha ljmp mov dec push fnstsw lret fadds mov push (bad) inc aaa das hlt in test fistl xchg test push into into rcl xchg pop out repz and andb arpl aad lret adc clc dec dec in mov xor xor xor out rorb mov cmp dec jmp and or xchg lea (bad) ja ffreep inc xchg push mov xchg insl mov lds fild ja pop out pop sub mov ja adc decb jns mov xchg xchg sbb lods nop adc pop in out aas ret jge pop ja (bad) fst adc js mov std mov lods es xchg out add jp lcall imul insl flds mov push lods jge fnstsw in rclb das hlt xchg test les cld pop movsl lret inc xchg lods ljmp mov mov jmp and sub push push mov cld mov loop mov lret popf cmpsb and push fsubp fisubl and iret sbb add int movsb pop inc lods sbb push mov fiaddl cmp out xor lods aaa jge push adc pushf out xlat fildll xchg lds mov mov outsb bound cmp ja pop imul push aas adc aad sbb sbb lret insl xchg dec jp stos fwait leave push in and into mov ljmp inc mov adc nop jle sbb jb insb test pop sarl dec and mov jnp cmp cmp les xlat sub movsl sub push sub aas int3 push xor adc add ss sahf imul iret push mov mov cmp fdivs jl adc mov sbb and pop cmp mov mov sbb or mov mov cmp sar fstpl loopne mov (bad) and sub pop mov jne fdivrs loop jecxz xor ja cmpsl divb loopne and rcrb gs xor mov push push dec (bad) mov in mov add mov push stos gs repz xchg xchg sbb mov mov jle push jb pop out insl push cli adcl sub out pop inc fsubrl test pop cmp fbstp xor inc int3 pop xchg sarb rol loope ret shlb les xchg mov shlb mov repz repnz pop xor mov aam inc popf cmp rorl push popf test cmpl xchg or stc into jle repz jge jno jns,pn ds js mov jp insl ja push mov pop mov insb sbb inc dec pop fcompl inc cmp out nop jns pop lret inc leave xchg test imul lock repnz pop mov sbb das and mov push data16 mov pop test (bad) pop out (bad) adc cmpsl sahf fs cmp sub rcrl cmp (bad) ja into es aad jno and jo out lock ret cltd add mov dec cmp loope aam inc jnp adc gs lods jmp or sbb mov das (bad) and (bad) mov test xchg push cmc push ret fidivl cmp imul push add repz push jnp xor jb xorb popf mov lock loope pop outsb pop dec push fidivl sub add or lahf and cmp add push leave cltd outsb cmp dec or lods gs or repz push in mov addr16 adc xchg or mov stos fldenv mov pop bswap xor xchg ret sub fdivrs sbb (bad) in flds cmp and or mov (bad) jbe insl testb jae jae mov (bad) or xchg rol xchg ja ret movsb add cmp inc movsl fist push fs test mov jns sub sbb pushf push fldenv xor or fsin push ret stos push inc mov xchg mov pop dec jns sbb jp pushf test push cld fs sub icebp jge faddl pop je xchg sbb arpl gs test adc sahf xor roll push mov mov repnz (bad) sbb or jno pop idiv jae mov test outsl fnstcw pop int xlat in adc add xor out (bad) sti xchg int outsl push xchg sbb push mov xor or stc and sarb xor arpl xor repnz into inc mov cmc das mov xchg push xor mov mov add in inc adc fiadd daa pop sbb inc jmp jbe add leave jno xor test dec in loopne test outsl popf (bad) leave mov insb push cmp (bad) xor sub js pop lods out ds pop arpl fdivs addb or adc mov mov xadd lret mov out popa lret mov aad lahf pop test inc add out mov mov xchg adc mov test movsb mov add dec dec in sbb rcrb inc inc pop cltd data16 pop xchg cmpsb lds stos cmp lds std and inc push sub rolb pop pop leave xor push mov out jb mov loope jmp add int3 sahf jo in fcomi sub or shll jno in je push lea jmp jmp and mov xchg outsb mov push sbb pushf (bad) mov fwait lcall lret cmp pop ds or (bad) jp ret out lahf call and (bad) (bad) cld imul pop lahf and ror cmpsl push and jle bound rcr inc lds xor mov nop xchg (bad) cmpsb xchg fcmovnbe scas mov (bad) xchg cld rclb dec test shrl cmpsb and int3 (bad) cmp or cmp leave stos dec pop ficomp ret add lods lret call dec arpl or inc test xchg sbb fisttpl addr16 in push shr addr16 cmp in pop scas lods push adc fisttpl adc xchg movl jg xchg xor cmp inc pop mov mov mov jno mov add into inc sar jl dec or sub cwtl dec stos mov push sti loopne mov cmp pop lcall dec mov xchg imul aam loope mov sbb cmpsb mov xor clc addr16 and mov lret cmp inc lea sub insb mov int3 sub aaa adc (bad) hlt cmpsb xchg scas push xlat inc push cmpsb (bad) mov int sbb sarb jns fnstsw xchg xchg sbb xchg imul sub inc push mov orl xor add iret popa mov and (bad) fsubl lock dec outsb jle rcrb out inc and cld scas call je shrb inc mov jnp inc sub int and scas inc stos sub mov xchg in pop adc mov call xor test inc sti cwtl mov mov push sbb adc sbb fsubs in fcmovb jge mov (bad) dec aad push aas scas cmp mov and cmp pop aam pop jl adc sub push hlt test xchg dec les in pop xor ret inc mov (bad) das imul test inc ja out sub pop dec loop test inc in adc sub popa js decb jno xchg sub ficoml or inc imul addb imul sbb pop out sarl mov imul mov mov repnz cmp mov insl rcr lret mov dec scas cmc pushf int3 out xchg cmp pop lcall or cltd (bad) and inc fmuls mov fcoms cmp in lret insb (bad) ret lods mulb imul xor orl or cmpsb popa dec (bad) ret pop inc sbb or jno fldcw cmp adc popl or jp dec xchg mov lret es xor outsl addr16 pop xor jnp ret mov sbb in lods mov push mov push sub pop (bad) stos and jns bound fcomip in faddl pop popl jmp pop add fidiv xchg or fcmovbe sahf cli push gs mov std dec (bad) negb xchg hlt (bad) xor outsb mov xor cs mov (bad) push jb in add fdivs bound test xlat outsb cltd adc mov push shll inc es push sub jle lods mov fadds lds jae roll fcompl cltd into jle stos leave sbb insb jge sub pushf jge aas xchg pop ficoml push inc lods (bad) pop cmpl mov xor loop inc and push std fidivrl repz ficoml scas je scas icebp or mov mov dec add sbb notl sub pop push mov insb push dec push (bad) mov imul push jae out adc pop mov outsl jbe repnz mov dec push and pusha mov scas add mov and inc or in (bad) dec inc push sub dec push dec dec jno lcall cli mov scas adcl mov js ret jl faddl hlt sbb test push lds lret mulb cmc or (bad) mov scas (bad) lds sbb ljmp sbb push inc pusha (bad) mov test sub or shlb ret sub aas (bad) in popaw jp hlt divps lods mov rol add out (bad) repz mov push ljmp mov sti fbld pop or cwtl movsb pop mov ja dec out and mov enter mulb scas sbb imul or xchg aaa fwait jbe outsl jo xor (bad) add push fs jge or repz int3 jnp lock (bad) mov inc xchg add in adc test xchg loop lods lods stos add stos (bad) mov mov rcl imul stc push loopne jae adc dec lret cli imul test imul out outsb push gs fildll outsl xchg mov lahf cmp mov cld xor imul or jo test dec (bad) jno add enter addl cli xlat mov aas fisttpll pop push ret xchg int3 mov inc mov cmp cmp roll add imul jg,pt adc jo js test lods fisubr xchg (bad) cli incb xlat jle dec jp adc pop popa cmp and fidivl ja ret test sub pop shrb jns and xchg adc leave push cmp xor gs cmc sbb mov outsb fnstcw loope sub push loop adc in jb cmpsl xchg fcomps adc adc xor imul out pop lret sub fprem1 jmp pop xlat data16 dec dec jns fild ja rcll mov mov cs sbb pop ljmp fimul lods ret out push push jecxz cmpsl xor stos jg or xor rclb inc fisub cmp adc cld stos inc test (bad) (bad) dec and mov sub (bad) pop in push aam mov fidivr in test inc or imul test mov icebp dec fmul popl dec mov mov cwtl pop int and adc nop mov movl xchg ret (bad) xchg cwtl mov in pop movsb imul xor cmp test js cmpsb mov push lods add sbb or out int dec cmp lds inc ret jbe inc in in cli lods and sti push dec adc jae mov (bad) fidivl xchg pop fldl pop adc adc dec jbe testl clc mov push jl xor mov insb ret push xlat in (bad) js lahf sar fs sub cmp jge dec push jno imul and out jmp jge sti test sbb fadds je mov sahf jb daa mov test cmp and push mov out add cmp in dec rorl (bad) call in lea push cld ss sbb push inc cmpl lret and imul sbb lods icebp imul cld mov push mov pushf aad stos dec push mov imul mov (bad) cmp aam mov push and mov in cli sarb push test test cmp movq or (bad) idivb jbe loop popa push pushf imul aad sub jmp mov xor adc and xchg or cltd dec xor xlat insb push dec dec lret cmc jno or or stc cmc jge add adc add inc push mov xchg and pop add dec (bad) xor xor mov sti pop xchg xchg inc xor sub jp lock and mov mov inc (bad) pop rorl insb enter (bad) mov dec sahf hlt sub dec mov int3 pop movsb inc lods mov mov pop imul (bad) sbb sub sub jno dec int3 test dec inc imul fsts sbb lgs ret pop mov push pop outsb jmp inc jno mov cmc xor dec xor push xchg js add cmc (bad) or out ret jne dec xchg inc push mov mov or and sbb aad int3 aad and cmp fucomip imul out jo jecxz int pop push push cmp dec (bad) pusha inc call pop push add and dec lcallw aaa push insb in ja arpl xchg jae jns cs xchg jmp arpl push mov pop lahf lods sbb scas or loopne xchg mov adc aaa xchg cmp jne jmp ds pop fisttpll cmp (bad) fmuls xorl cltd pinsrw xchg inc jle add test mov mov lahf scas mov lcall jne pushf and push jns mov jnp fisttp fwait push loope add les fiadd pop jmp add push in in fwait roll jae shr lret dec scas rorl int cmp push xchg (bad) loope scas fcmovnu fstpt sub add ss aad (bad) es or shl lea xor sbb ds test and das out xchg xchg outsl jl faddp bound cmp sub repnz and pusha into int (bad) loop pop ja repnz pop sbb rcr ret jle data16 arpl sub pop dec das pushf das (bad) xor jb push cmp add dec mov add fistl addr16 jge add lahf repnz jo dec jmp xchg (bad) xchg lock cld mov pop adc xchg data16 outsl jne out sub or mov adc (bad) outsl outsl dec sbb daa (bad) in cmpsb push gs mov repnz movsl pop iret movsl pop cwtl std jbe push pop xorl insb or fldl xor mov ljmp adc cmc std mov mov mov into mov popa stc jbe jnp pusha xchg add sub (bad) imul std insl push pop push lahf push sbb push push dec mov popa movsb mov cwtd mov inc pushf cltd outsl mov sbb or mov mov jbe add or popa mov jge,pt fsubs pop jns mov pushl loopne cmpsl mov test jmp int pop add divb aas es js in jno test gs fist mov imul sub mov mov inc xor mov mov pop push xor push xchg sbbl inc and add fdivrs pop out cs mov jne inc out lods movsl and sbb pusha sub mov dec popa stos cmp cmp dec inc and jp push cwtl sub or cmp scas push push cli jnp (bad) jg je sub pop push insl mov call out xchg repnz sub stc xchg faddl cmp call fmull mov rcll in shlb xlat dec inc add mov pop shrb (bad) sahf jno repnz lds hlt aam nop rol andb fcmovu mov or roll iret mov mov xor mov adc sbb rorb call xchg jbe cmp pop shlb pop pop xor add inc lock jno cmpsb add in mov or ret std addr16 inc fistpl and jb inc les imul ret insl jge jno add cwtl repnz (bad) pop push (bad) push scas test push bound xor ds ds jmp pop sbb push je es sub mov pusha getsec aad jb adc in mov pop pop sbb inc pop pop roll cmpsb insb shrb lods in mov mov xor sub fcomp push mov sub jmp jecxz pop mov in xchg xor xor sbb pop pop pushl and jb xchg inc push sub ljmp scas fldl cmp lahf daa outsb xlat push sbb aaa pop sbb mov test pushf push in pop xor dec push popa pop stos push pop pop (bad) ljmp movl jae cmpsb divb mov movsl fucomip lock fmulp cmp mov pop scas sar cwtl jg push and insb (bad) mov pop or push inc push jb dec in pusha addl sarl jbe add in dec out (bad) jle push mov xchg mov hlt sbb aam jae lock xchg jp xor cmp mov adc sbb jbe scas icebp out jmp mov aaa mov (bad) scas xor rcrl icebp push push jae xor push mov (bad) and sbb hlt lahf push jns nop dec aas cmpsb movsb pusha and lahf (bad) lock cmpsl add (bad) lods (bad) out imul and pop insb ret in inc out pop push push or mov mov in js ja jge jecxz in lds enter sbb mov fcmovbe loopne mov push xchg add jp mov outsl outsb push sahf push pop add incb dec sub ret rorb outsl xchg lods sbb jae lahf rol pushf out jo sbb mov push lcall xor cmpsl adc (bad) fmull lahf sbb dec movsl dec xchg mov pop lret mov pop xchg ss js push sbb testb adc setge (bad) std mov xor roll jg mov sub popa mov cltd pop mov insb (bad) mov in popa out int3 imulb lods xor push scas dec je aaa mov stc outsl sbbl and jb in and xchg inc sbb inc sbb cwtl push adc ja fisttp shrb leave dec popa outsb daa scas mov or bound mov andl (bad) cmp imul push pusha pop std pop in fsts sub dec sti and cmp xchg cmp mov pop push insl sbb and xchg lcall xchg test loope pop jne cmp dec ret xlat iret int3 xchg int jae dec jl fwait scas mov sbb fnop jg fistp cld mov mov test cli clc scas pop mov push data16 mov and push faddp fbld cmp (bad) loopne gs (bad) push and lods pop out testl and lcall shrb push cmp dec rorl push cmp mov movb popa aaa js jo pop lock andb lds loop dec add clc (bad) enter lds jg inc mov dec into ret inc or ss js pop adc pop ljmp arpl jae sahf pop test add cmpsl rcl rol jns inc in mov fcmovnbe loope push sti cmp mov imul mov cld or jbe add loope out jns xlat pusha (bad) add (bad) movzbl xchg (bad) int leave sbb loopne aad mov icebp adc icebp or dec jge sbb ret inc addr16 mov lret sub cwtl fwait mov test mov sub add add xchg mov jns das stos std add mov jg mov loope in ss sub aad insl cmp movsl dec push add mov add in sti push aad (bad) and lock je hlt jbe frstor mov mov es mov scas jb jge xor rol ljmp push cmp dec pusha lret (bad) test sub cs enter (bad) inc int scas std sub outsb (bad) cmc mov sub mov sbb (bad) iret fdivs jle push mov mov in xor das mov add mov jle (bad) sbb ljmp push push mov push (bad) cmp iret in xlat cmp in cmpsb adc scas imul repz xor cli cld push scas push mov mov inc stos push push es or stos test dec lcall xchg rcl cltd mov icebp addr16 lock test clc movsb mov mov jle mov mov push and push push mov cmpl js inc and jnp mov insb repz push mov pop xchg lods mov push jmp mov mov and aaa insl dec cwtl mov xchg andb xor jp ficoml mov bound cli jne and sub xchg push adc insb jbe stos fucom mov iret jne pop or cmpsb cwtl push pop divb mov cmp call adc lret push bswap xlat xor rcrl imul push push in mov mov loopne loop xlat out clc cwtl fstpl leave push lret cmpsb loope popf nop cmpsl fldl aad mov stos into lds pop sti jl add pop scas dec es cli imulb pop pushf xor repnz sti cmp mov rclb test mov sub das sub fldt inc mov sbb aas mov and sub cmp repnz jnp jg movsl inc stos movsl push push aad ja and lcall out adc sbb rcrl mov mov in pop mov lea add mov adcl lods push xchg or out inc dec aad push sub mov test adc addr16 mov out mov lock mov mov sub adc push sbb mov xchg insl and (bad) cmpsl xchg lahf test rcrl sbb imul clc scas scas dec sub adc dec mov mov inc xlat fldenv adc pop movsl ljmp xor in dec or and test or les addr16 sahf inc imul adcl xchg cmp (bad) dec lods test enter mov push gs push (bad) in sahf fidiv lcall (bad) jmp cmp sbb int jl cmpsl sub ret pop jae sbb xchg pop jno test and mov (bad) jns ret push sub imul repz sbb je or and jno xorl lret lret push lods sbb pop rclb loopne dec add push mov push into cmp inc fs pushf xlat dec xor mov int3 dec (bad) mov in and push out jae shlb es cld rol iret xor ret (bad) lods push sbb ja and out leave pop mov add mov or mov pop mov pop subl fdivrp fidivl fsts push cmc xchg icebp clc test xor pop jnp in pop inc lcall push (bad) push lods cmp ljmp mov inc mov mov addr16 in xchg pushf das popf push inc add dec xor and lahf mov daa jecxz xchg pusha mov pop pop or lret or adc scas fiadd fs pop fnop pop jne pop insl adc push gs ja mov daa xlat pop sub das icebp inc dec loopne out jno insb or insb cmp pop in cmp aaa push and cmp std hlt test icebp scas jns fadd sbb add (bad) cwtl in movhps dec out push push pop (bad) xlat and cmpxchg8b push popf call test push ret cld in sarb leave jns cmp adc ss jmp cmp pop cltd xchg sub mov add bound mov mov mov sbb shr pop test jecxz call fidivl pop xchg std pop (bad) imul out xor imul mov data16 gs gs mov gs popa and movsb cwtl sbb movsb lock cld int cmp push mov mov lea xchg call pop inc aad rcr add lock jl lahf sub test push test add (bad) loope dec stos int dec add sub fsub pop xchg sub dec insb sbb dec mov cmp add divb jae jae imul mov sarl outsl add pop test add push scas jnp inc mov bound stos mov or adc xor es popf outsl into pop movsb (bad) js pop xlat inc add je int3 ja add sahf mov push sub mov jnp lds fisubl add mov jnp pop sub clc add and in cmp aaa sbb jge mov jae inc popf jg dec out test add cmpsb aad into sbb shr mov cmp mov inc adc pop hlt add sub and adc mov sub push cmp into sbb xor mov jns imul mov push sub xchg lock or fdivrl shrb lea stc and add fsubrl fnop out jo test dec adc xchg scas and pop xchg stos dec insb push jno mov insl adc inc pop adc cmp fsubrl lahf add pop cmpsb xlat xchg rcl mov mov ja les outsb aam lret outsb ljmp adc push dec add lock mov (bad) mov mov fistl mov cmp scas mov mov cli repnz and jmp mov outsb jns sbb mov cmpsl icebp cmpsb std mov pop jne mov cmp adc pop scas imul or aad lock mov mov outsb xchg and cmp pop aas es add (bad) sahf inc dec cmp adc pop dec cmc sub and and push jo mov in jb call sbb adc push jle ja (bad) (bad) das js cmp cmpsl (bad) jae push jp mov xor mov mov jle call aaa or (bad) aaa push dec add mov arpl mov mov (bad) or inc pop (bad) jns adc xor addr16 sub sti (bad) (bad) bound les mov jbe cmp cs out xchg jns mov lcall xchg push pop dec jmp or xor out rcrb int3 push jns test js or dec into sbb xor lret pusha fsubs sbb movb push (bad) cmc subl test or sub pop add xlat sub dec cltd cwtl ss adc sti jne push sub mov fiadd cmp and movsb xlat add insb and cmpsb jg out xchg mov fbld add enter lcall cmp lcall stos fldcw shll (bad) call rclb mov bound add xchg sbb fstpl xchg lods mov imul out fstl popf mov std rcl mov and adc cmp (bad) sbb sbb jecxz in jns (bad) cmp je dec adc inc sub pop out int sub sub repz clc fwait cmp adc jnp gs mov add mov dec pop sbb jmp in mov xchg push xchg jg mov loop retw repnz mov or mov cld mov jl loope fwait jl push (bad) into pop out and xchg push adc andl mull hlt inc repnz mov mov repnz ja lcall mov lock and pop push fnop pop stos pop ljmp dec pop ret out call or push add outsb jmp fs adc xor push xor mulb cltd mov pop lcall into ret int3 ljmp call ret push fwait xchg outsl ret fnstcw shrl mov jnp mov and jl and push mov addr16 inc xchg imul mov insb mov fwait insl mov arpl push fisubr lds shll pop xchg dec lcall xchg cld clc rcll or call cmpsl mov and imulb adc adc dec sbbl (bad) dec loope test sbb dec inc data16 lret insl std add jbe adc popa mov cmp inc das shr out sub pop ljmp jmp hlt dec out or push movsb cli ret bound cmpl stos stos fadds iret cmpl pop ss test adc sub add or addr16 xchg inc jmp sbb sub out int3 pop loop lret push test pop cmc mov fnstenv xor jp ja cwtl lret call repz sti les sub ficompl out imul leave dec nop (bad) mov jmp push dec add dec mov les testb fstps lods lcall (bad) inc lret push mov (bad) sbb movsl pop daa sti xchg xor pop push cmp movl out repnz pop adc mov notb sbb test push adc xor sbb sti les into xchg mov mov insl cltd sbb movsl sbb cmp jne (bad) (bad) jb mov leave xchg mov sub fsubrs (bad) xchg cmp inc mov notb inc shlb daa dec rcrl jge scas dec mov ret inc push arpl sbb push mov lea jg ds or iret cmp fisub pop insb lods lds ficomp xchg sbb sbb mov (bad) jg jnp test jmp insl and pop aas testb push (bad) sbb dec (bad) jo dec ljmp imul out dec pop repz (bad) jae and adc inc pushf stos je push test popa clc rorb push popf jne cmp out mov mov decb inc hlt xchg out sbb jo cmp fdivp jae stc repz cmpsb mulb dec xchg aam xchg mov cmp fwait (bad) inc loop mov xchg scas mov sbb sub std fisttpl inc pop jns jle ds add mov jne iret mov inc or mov data16 mov pop mov (bad) cmp adc or mov cmpsl xchg sbb out adc movsl mov lahf push xor inc iret or imul adc adc leave jnp sbb icebp into lock (bad) mov cmp aam inc mov fisubl idivb test iret dec sarl insl fwait jnp out adc in (bad) jb lret pop xchg dec out int jnp jne adc xchg push sbb pop pop mov orl fimul data16 sbb pop cmpsb ret lret and mov push dec add scas test ja out aam push lock sbb mov ljmp andb adc add jb push test fwait call out stos or fs pushl cmp cmpsl jbe jb in sbb dec add pop cmp add stc notl pop cmpsl mov or movsl cmp out dec inc sbb paddusb notl in push ret sub and jg xor xor xchg mov scas iret les ja and ret adc lret (bad) mov mov fbstp jmp or sbb mov lock jno mov sarl cmp inc push pop call in movsl mov fdivr mov inc clc ret push cli imul and or xchg or ret es stos pusha int3 std fcomps repnz dec sub pop jmp (bad) lods pop jnp pop leave sub jbe dec mov into sub lock test jbe jmp iret insl dec mov in fnstsw dec cwtl rcrl pop ret xchg or push mov jmp mov lock (bad) jne out adc pop scas cltd xchg lock xchg adc (bad) jb lea xchg mov xchg outsb pop pop mov push cld sbb stc ja popf out rcrb pop (bad) fnop mov mov in ret in jns mov pop stc aad xor mov sbb jp cltd mov in mov lock ret jge mov cli test outsb sub and scas xchg imul inc mov sbb fbstp loopne inc clc out sub pusha imul out mov faddl cltd scas out daa and pusha daa fs or (bad) (bad) les out aam aaa pop fwait sub mov sub xchg adc mov orl ds mov sbb push mov mov sbb jmp call in loop fcompl out mov push inc sbb icebp or push gs ret cmpsb ljmp sbb pop lea xchg pop mov testb cs out aas mov add adc sbb je mov mov jns ret xchg fnop mov sahf inc xor sbb gs loop add pop (bad) xor test add xor push (bad) mov rorl jbe xchg sbb xor rcr mov ja out stos fsubp jns sbb dec push sbb and movsl dec and pandn stos mov scas sub and push inc ljmp insl cmpsl inc pop adc add sti inc push adc negb xchg dec lds mov hlt sbb (bad) negl push call mov and inc mov cli mov lea adc test jns nop nop mov (bad) popa icebp ja mov and aaa sub imul loopne cltd cld pop mov xlat mov xor aam (bad) and push fdiv movsl mov clc dec mov or dec aaa xor call cmpsb sbb adc mov mov cltd and sub jo sub aam add cmp push loopne fsubl ds iret cltd icebp (bad) aam je push push xchg mov fnstcw xchg imul pop pop idivb or ljmp mov add int rcrb push scas data16 sub cltd mov pusha (bad) enter push dec outsl scas push scas lock rol cmp pop enter mov cmc inc stos cmp sbb cmp cmpsl inc xchg leave jecxz scas nop ds test stos jecxz (bad) mov jmp in jne xor jae lret mov js lahf push lcall sub cmpsl push dec push pop scas mov jne lock mov xchg or xchg jecxz fs shl enter add notb dec pop jo dec cwtl xor mov das es sub pop push lret sti bound lock cli sub fcmovu cli lret mov mov iret and data16 popf loop iret stos add fstps mov inc dec ret push mov pop push lret sti outsl test fadd sub out idivb rcrl push and in xor pop (bad) jo mov loopne cmp stos jnp lret out stos ret repz sahf xchg add sub jmp or xchg inc sub outsb movsb lods aaa jne jb icebp sbb (bad) xchg pop sub test or mov or cli data16 insl aaa cs lea ja in aad or faddl cs and lods fwait sub int3 sub pop sub mov push dec and pop and inc or jecxz pop ja xchg inc mov xor cmpsl cmp mov jmp ret in popa mov popf adc or sahf pop xorl mov test cmp loopne push add into mov adc xor mov test out into mov cld cmp clc jae imul pop jge or stos outsl out arpl (bad) ficomp mov ficom xor dec fidivr dec ss popa dec (bad) adc outsb push idiv dec pop or xor adc mov sahf gs lods pushf sar mov mov cld psubq les mov jae jne add pop cltd frstor loopne repnz cmp daa add ss loopne push imul mov add sti pop pop mov repnz dec xchg xchg pop xchg inc and popf test stos hlt shll lds test (bad) adc pop push xor push es add into popa mov cld jp cmp push push xchg loope push mov cmp mov cmpsl gs dec and sbb sbb mov movsl addl (bad) dec std cmp jbe hlt cltd xor out insb out sbb sahf adc addr16 pop sub or popa js dec mov adc or das out and jb out push or cmp das jge fcoms jp std pop dec mov imul xchg inc dec bound lods and dec addr16 add mov ret add out adc mov push fwait mov mov xchg adc (bad) jae cs push inc dec out jae inc (bad) ja (bad) jmp ret mov ret test mov (bad) dec rolb fstl ja loop mov or in andl sahf stc xor inc push inc mov fldcw divb adc xor jle jae mov push flds lds test scas sbb cmpsl fiaddl repnz sub dec addl addr16 or aam xchg scas out jo add movsl inc les test imul pop pop cmp xor adc fisttpl push lock sbb push (bad) mov dec out jnp daa push push out jno inc pushf dec or pop and sarl ds inc aaa mov (bad) pop xchg add cmp repz sarb mov xchg mov data16 ljmp sahf add lret outsl aas adc mov cmc outsl arpl pop adc xchg rorl js ja pop mov nop cmp push js and xor stc arpl xchg ja fmul add or enter (bad) cmp dec pop movq popa pop (bad) push cmpsl cmc lahf mov stos pop loopne sub mov cld fdivp xchg jbe incl jnp call dec sbb out mov pop mov mov mov std pop push dec sarb xchg imul dec inc jbe into pop push repnz test adc jo fisttp daa fstl fwait jecxz mov inc nop push lods je outsl jge adc pop mov jnp add cmp and sbbb fnstenv fimull cli test dec out test pop push mov cli push sbb in push jge loope into sub jno imul mov mov pushw faddl leave lahf xor sub cmp mov call hlt scas xchg mov cmpsb aaa sbb or push fstps (bad) testl popa jo jg mov mov xchg xlat rcl inc fldl2t (bad) sub and cmc add adc inc (bad) fucomi inc ja add into or inc jbe ljmp mov cmpsl and sbb leave sbb xor mov mov dec or lret mov hlt inc jge cmp fsubrs lock aaa in jbe push lock inc ja scas mov loope jae cmp shr in lock into and inc sbb cmp (bad) (bad) idivb push cli cwtl ss loop movsl cmpb cmp mov sub enter ja xchg dec test xor stos inc leave and jno clc push shrl loopne adc pop js jae xor and push aad mov imull gs xchg movsl scas xchg xchg add test pop lods lcall pushf sub sbb jo sub mov (bad) mov adc (bad) cmp dec enter rcr push cmp mov inc fwait aam push das cltd popf push xor mov aad mov xlat (bad) or movsl mov jb outsl mov jge mov push leave (bad) adc aam mov in sbb daa imul mov sub mov scas lret sub shll xchg fwait xchg inc fs sbb loopne popa and clc iret (bad) cmp and pop push pop sub sarb cs cmp lods xor popf mov aam fs decb in jo add popf mov lds sub or mov icebp mov insb or pushl mov mov dec jle mov mov cmc xchg aas xchg mov fs sbb sarb jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld incl cmp clc sub rclb add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add js add add or or add or add add add pop or add add mull add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add cmp push js in (bad) push bound adc mov (bad) adc insl (bad) (bad) xor add mov adc cmp xchg repz aaa lcall movsb or dec popf sbb mov adc adc test mov cmpsl rclb mov stos xor fidiv push jae (bad) icebp (bad) push test xor sti gs sub stc sub lea and into inc fldt test out dec mov rclb es in push aas add dec dec dec cs loopne mov lea push pusha add test cmpsl ljmp enter sbb fstpt push das data16 push int adc iret mov xor lds push mov dec insl inc bound mov xor es push dec xor adc dec xchg push imul push js out xor adc mov movsb (bad) sti or jge sub sbb das sbb inc push push pushf fdivr adc jg cmp mov mov and rorl je cld adc mov aaa cld push out int3 fwait adc pop dec ds mov mov push lret inc fimull jae push xchg pop test sbb pop test and mov jne xchg jmp sbb rorl mov popf pop add mov (bad) std push mov mov jnp lcall jae (bad) cmp dec mov test push push jae jb lret sti jp fisttp lcall or adc (bad) cmp pop ret mov push jmp sbb xchg sarb add cs dec mov cld add jmp dec add lcall insl sub pop cs dec inc pop (bad) cmc (bad) cs fadds push aad movsl lcall pop pop dec test cmpsl and sub xchg mov add clc fsubl out lods pop dec mov fsubp test cmc hlt cmp (bad) xlat repz mov xchg sar or jns dec and push cmp in fidivl mov adc xchg and rcrl icebp aas in lock push aas sub cmc push adcl or push movsb jne icebp shl push push out adc and into adc adc adc jns faddl dec arpl adc je sbb mov dec dec aaa pushf sahf or xor in pop push into clc shrb inc sub mov arpl cltd add stos pushf sub in data16 int3 jle pop insb fisttp mov jg stc dec lock dec sahf adc sahf sahf ds outsb mov (bad) idivl jnp xchg inc ds (bad) push test idivl cmpsl lods stos inc test test adc dec sub stos idivl fstps nop dec aaa or outsb inc sbb fistp or adc xlat dec adc pop pop jbe test adc push insb push mov xlat add sub std imul inc adc repnz mov cld cmp (bad) mov out out mov fnstenv icebp pop test push xor jb sub xor inc ljmp mov mov fnstcw sbb stos dec stos mov and (bad) aas fwait stos xlat add lods in pop add test cmp inc xchg inc dec call xor dec pusha dec stc add add dec movsl aam and add dec push dec testl cltd cmpsl dec xlat stos aaa mov jp xchg xchg fs mov pop lcall and cmp pop ja jp hlt mov xor nop xchg loopne or pop or (bad) sub test jl inc dec add jnp scas ret test jnp lods cmp ret int daa jg lret dec adc sbb inc loopne popf push mov mov pop in mov mov cmpsb mov dec xlat xchg lods xchg mov test ret lret rorl cli sahf fmul ret cmp (bad) jle xor fbld jnp dec out mov xchg lods xor push mov and jl push repnz or out mov push popa addr16 ds dec xchg testb sub xchg xchg and jp cmp (bad) pop adc mov mov mov je dec add sub sbb pop jp pop mov sub jle fldt insl dec mov les cli fwait push insl stos test shrl (bad) iret loopne insb test sbb addr16 add or push push leave xchg mov scas mov (bad) fstl push inc jmp mov mov xor push mov rcll into and jno out dec xlat mov icebp mov add jmp add icebp fimull pop ret inc scas mov scas in out dec mov push sub call div ficom pop adc je mov rorl xchg fstps cmp test lret stc jae rcrl mov and (bad) sbb (bad) mov push divl xor sub push or std in push rorl adc movsl (bad) sbb and outsl and frstor xlat xchg lcall push add idivl fidivr sub mov xor mov gs sbb push into or mov lret loop mov push mov push pop mov clc push (bad) xor dec inc rclb lods movsl repz push imulb xlat dec xor inc lods xor pop add gs add data16 stc xchg fwait inc pop lock outsb dec (bad) popa lods lock jmp andl fs lret loopne mov pop jnp adc lcall stc dec std and and sub lods fcom or in fldcw mov xor stos push add pop call and xor xchg fwait gs add dec stos popa inc lea dec xchg adc out stc mov (bad) xbegin xor lahf aaa sbb xchg pop xor sub sbb aad add (bad) jp pop cmp mov outsb (bad) shrb ret hlt call rol rolb dec insl inc hlt iret or (bad) leave pop (bad) sbb mov inc xor into fwait inc pop inc cmp in jae push cmpsb push aam addr16 pop addr16 ret shrb fwait pop and push xor test sbb sbbl xchg and mov call cmp icebp repz js sub jb xor cwtl in mov imul lret imul popfw pop in push add test mov mov stos cmp sub mov in pushf js data16 test sbbl sbb mov les lods mov push sub in sbb fiaddl out mov sub popa in enter push ds aas xchg mov enter adc inc ss movsb mov (bad) xor fidivrl adc fs mov mov (bad) out inc sub movsb add xchg fnstenv fcoml mov sub sbb fbstp loope (bad) mov (bad) jne and or lods ss adc pop lea pop xchg jo repnz stc push iret out jb add pop andl push dec adc test xor dec mov aam pop or mov ljmp cmovae mov lret stos aaa mov xor dec out and popf and adc xor icebp aam jno pop stos sbb in jne gs adc mul adc sub and test and push ljmp sbb jnp int3 pusha mov ds pop jne fildll inc int3 loop imul jnp ja pop in xlat jl sub fwait pop outsb jecxz push jno dec cmp aaa rcrl dec mov mov push xor mov addr16 jmp mull je mov add inc inc lahf mov mov int insb xor sub ret loop xor push xchg cmpsb sbb dec addr16 daa (bad) mov fistl fcompl push mov sbb dec iret ret mov aaa push fmull adc adc imul pop cmp xchg add adc jb xorb add push movsb in insb scas sbb add dec xor scas in push xchg pushf cli fsubp jmp int cmpsb sub jge jge inc popf fidiv xchg in xor pushf pop and or sbb mov pop out enter push (bad) stc and ficom and outsl adc cltd pusha (bad) ss mov xor out inc repz jp cmpsb dec fdivrl ja xchg cmp jecxz xchg mov sbb divb push cmpsb inc adc jl fistpl xor mov jge fisttpll adc jle out mov push repz (bad) int3 ret xchg fdivs or fisubr test stos mov call lcall (bad) cwtl call push mov not div cltd dec into inc pop out push sub out roll les mov sbb (bad) mov mov xlat adc mov pop imul mov jmp leave cwtl aad push lods dec push xchg fiaddl dec fsts xchg aad mov cmp jno mov xchg sahf adc stos mov jo jbe cmp (bad) sti sti add jno mov fbstp cmpsb (bad) jb aas pop dec add cmpsl or jns je loope addl mov dec fwait jmp pop sbb lds inc mov fcompl rorb roll or pop push mov mov lods test dec mov jmp negl loope out pop cs loop das dec popf xchg stos xchg xor xorl pop bnd add lea sbb dec xor mov data16 (bad) aad dec jb or cmpsb mov jae sub sahf push inc cmp mov add in mov movsb xor in sbb out push loope inc add aaa fcmovnu xchg inc mov xchg (bad) xchg insb fnstsw pop aaa push scas mov inc repnz loope push stc jge or dec xor mov cmp xor inc dec jg fistl push sub lret mov or cmpsl pop push and sbb (bad) push lock out (bad) enter pop (bad) jmp and jl mov insl push enter xchg inc dec (bad) mov pop and sbb mov push sbb sar (bad) jne loop imul mov push push push in xor sti outsb repz js push inc cmp xor stos aam fsts mov (bad) iret xlat ds movsl xor mov cmp xchg xor sub pop mov mulb or (bad) dec test iret arpl jmp sub inc lret ljmp push outsb or stos stos mov mov shll leave fmuls enter jno xlat adc ljmp sarl mov xchg aam lcall mov cmp push in cmp ret in inc jmp rep scas push add leave add iret pushf add jns cmpsb loop jl,pt repnz push sbb xchg mov cmp push dec in mov pop insb xor (bad) test lock jno mulb add xor xchg bound lahf mov xchg xor repz sub int3 outsl mov or cwtl in jno (bad) ficomp sub jae pop cmp movsb fisubl dec cwtl pop push (bad) or or stc scas jge je jo fisttp dec and mov pop dec jae stc jbe mov ficomp fldl (bad) pop out dec xchg ret imul mov sahf mov xor sub push ja add xchg sbb popf cld scas out add mov ret lds xchg or or inc pop dec int mov xor xchg dec loop jp dec mov sbb sbb or push jno test out xor cmc and pushf mov sbb jmp dec divb sub std loopne (bad) xlat mov aad dec popa dec and mov mov out lock call jge or lds pop xchg ds (bad) xchg imul imul fimull div repnz pop test enter mov xchg lods out lock daa sbb fwait std adc inc mov add inc xchg (bad) dec fsubl jo ja or icebp or mov push mov dec lock fcoml sarb inc mov sbb out rclb and dec dec mov cmp jg inc test add mov mull dec lds or lock push test inc into lds outsl mov fisttpl flds cmp addl aam push int3 outsl xchg test insl outsb jp stos pop gs std (bad) cmp add mov mov aam jno xlat add (bad) xor add int inc aad adc sti les xchg das leave int lock push fcompl dec mov mov fs adc ja mov sub retw arpl push sub in out mov (bad) lock xor push adc enter idiv mov imul insl jno mov mov cmpsb mov lock or sti inc jne pop je mov mov xor mov inc mov mov gs sahf test xor mov jo inc and adc mov pop frstor xchg aas enter in jecxz mov ljmp cltd pop imul jmp xor push dec sahf aad rorl rcll mov sbb (bad) pusha lods xor jecxz cmp xchg cmp sub sbb xchg pop jne into dec xchg mov aad adc dec inc sub adc test mov or cld mov and (bad) sub sub cmpsl pop mov adc decl lahf jne leave pop inc out jno (bad) in inc jns mov out divb negl cmp rol outsb cmp ss dec out ja push sbb push cmp adc rcl dec push insl pop sub adc pop fnstcw cmpb xchg imul push das std icebp xlat (bad) xor sti int3 mov imul jnp fs (bad) stos pop push (bad) cmp sub and (bad) add outsb pop push cld ret sbb xchg scas scas jg adc out mov loop mov cmp lock pop pop cld lock xor mov dec jo push adc pop sbb or repnz and mov leave mov push push in fs cwtl js into dec rol jmp inc scas repnz loop mov shll xchg and ja sub rcl mov shrl inc push dec adc ja push and (bad) and (bad) lret clc test daa lret fcomp lret mov testb leave xor push addr16 mov mov jp jge push js dec and pop inc ljmp daa data16 adc (bad) sub nop xchg push inc jge sub das pop aad insb es gs adc mov jl cmp xchg icebp ja sbb rcrl (bad) lahf mov xor mov xor ljmp add inc dec mov daa fdivrs or xor dec mov iret and dec insb movsb adc ss fs insb jge sbb add push or icebp je inc add dec jo mov pusha and mov mov dec ss sub lret or arpl jg mov push push (bad) (bad) insb jecxz cmp and xadd shrl cld mov cmp pop pop pop mov (bad) cmc push lret cmp xlat test adc fdivrp inc mov int out (bad) or sub inc and mulb clc stc fs or insl sub pop inc les cwtl push mov lds push adcl and dec sub pop sub je std pop or push jnp pop fisttp pop push lret out adc cld pop and lret add lea sbb pop fimul cmp insb pusha pop sub or outsb insl inc xor icebp push test cs pop inc sub je cmp outsl jbe imul sbb and js js arpl mov jg jge push pop stos stos sub out mov shrb fild pop mov adc (bad) scas adc outsl fwait jno inc and (bad) xor xor jno and mov inc pop xor mov cs (bad) ss pop stc lea and gs sbb and jno mov (bad) and sub jle push dec lahf icebp jg popa mov das push dec mov fidivr loope adc sbb adc js,pt xor jle (bad) fdivrs lcall push mov repz push push jg lods adc ja in jmp sbb and xor outsb jno mov lret rcrb sbb stos pop outsl in sbb xor lcall inc mov inc dec je push mov test mov or cmpsb or mov pinsrw into pop fdivs adc fnstsw hlt mov test sahf fcomps es pop inc push out stos pushf idivb aas pop xchg mov adc repnz mov push pop add (bad) xor xorb in dec mov mov (bad) mov shrl cli add leave push bound xor jp out cmp lea dec iret mov jb test mov (bad) je cs and dec popf stos cmp rcl fs fisttpll mov lret xor jnp mov stos lea fcmove or dec test sti push mov not insb mov rolb cld pop leave lods (bad) (bad) adc sbb clc bound or fnsave push add std es rcl add in push and out mov xchg iret scas call notb push ret outsb pop cwtl int3 and jg xor iret cmp pop cltd and xchg xor pop popf fwait stos pop ss lods inc sbb and adc lret xchg movsb push sbb popa push es xor push stos add mov stc pop insl dec push icebp (bad) (bad) inc xchg and cli popf cwtl mov mov ret mov clc insb jo push jg (bad) dec xor pusha add fcoml in aas and pop sub movsl lods xchg inc sbb dec push push sbb movl inc pop cmpl cmpsl mov push adcl lock jne jb nop xor je push sub arpl (bad) int dec leave inc shr lea cmpl ljmp (bad) mov popa sbb nop rcrb or mov jg sbb leave inc cmp hlt xchg or mov mov sbb imul pop jecxz mov lret adc bound mov and adc leave jmp mov mov inc mov stos in push sub push mov test imul jae lcall cmp mov add push stc and mov add mov xor lds and dec xchg hlt mov and adc push xchg cwtl divb repz ret adc lahf addr16 jae adc or or ret (bad) fscale mov js mov push inc imul lahf and mov in movsl inc dec fdivrp std sub cld add cwtl pop push adc add test jb push fcoms loop dec mov dec fild daa bnd jecxz int enter push cmp mov int3 popa mov (bad) ja add pop jae dec pop repnz jmp mov jp mov fsubl inc cmp fs xchg rorl arpl xor test maxps cmp sbb mov mov rep add lahf mov sbb inc or push push inc jge jecxz in push jl int add push idivl imul repz mov pop mov jp mov xor andl sti push adc enter mov xor (bad) loopne dec pop mov mov jae dec out (bad) mov add mov mov test ds lea xchg adc jg jb dec xlat cmpsl and daa test jnp out mov and out imul xchg jp ljmp pop push xchg pop xchg dec (bad) cmp jge and cs mov mov cltd xchg (bad) (bad) rcrl stos or sub inc mov cli push jmp (bad) stos sbb push and hlt mov aas adc mov (bad) jbe test push lds pusha pusha (bad) ljmp cmp les sub jecxz pop (bad) sbb or jl mov xor adc pop jbe jle mov jmp je scas test or hlt cli fistpll scas lods mov cmp fst jmp and xor imul inc ljmp jp dec nop leave lds adc cli jnp jnp popf dec or int3 xor movb insb add push dec lcall mov cmp call rcll dec (bad) sub imul dec or lahf push add mov ja cmp jb or pusha out bound pop mov outsb pop push xchg data16 adc push enter (bad) out or aam and mov frstor imul stos pop pop repz repnz mov push shlb sub call test mov cmp shl xor pushf jae push adc lahf inc out rclb dec xor sub add ret mov (bad) int3 (bad) dec test aam clc pop (bad) adc adc jnp pop dec dec xor rclb fwait xchg pushf mov outsl sub stc xchg iret mov sub pop push clc ja jmp negl jmp sbb sbb into clc or stc xor pop enter add leave outsb jno mov into sbb lds xchg test pushl sub jne stos push mov insb mov stc sub mov push add dec in adc jmp fs iret inc push sub cltd xor cmp and adc or xor (bad) mov pop in popa inc push (bad) cmc lea mov add mov insl jbe cmp out dec mov (bad) mov pop push mov sbb mov ja sub mov shl mov daa test mov imul sbb ret push ds fnsave icebp int push int3 cmp and dec sbb adc or push (bad) (bad) cmp jnp xchg sbb jmp add imul xor add xor or jmp or sub in inc mov mov add lods cltd insb pop xor fcompl xor iret cmc pop dec mov arpl ds adc sub rol (bad) pop sbb sbb xor int3 addr16 push lret inc mov mov repnz in and int leave cmpsl or repnz aad pop test sub jnp int fsubrp sub dec imul addr16 lods in lret add aam scas sete or scas xchg int and roll in mov divl cmpsb sbb push int3 sbb and and dec cmpb sub mov outsb and push bound ret push inc sub outsl cmp add aam (bad) dec cmp mov mov push out xor stos pop bound pop push adcl pop scas pop repnz mov pop pop add out xchg mov cmp in lods (bad) mov xchg in push or imul dec leave (bad) in jg mov inc cmc jge (bad) leave addl sbb adc imul push push xlat lret insb imul push je mov sbb mov inc jge aam adc inc cwtl loope cli pusha sub pop xchg movsb fs (bad) xlat add xor lods add lcall pop fistpll sub mov test mov jns test and dec cltd push xchg adc fs mov sbb push stc aad out insl or (bad) adc jecxz lahf sub test loop cmpsl add dec icebp in mov mov pop cmp orl cmp xchg popa arpl nop call pusha mov jmp sub mov inc cld test mov in pop xchg mov pop xor add loopne cli xchg push adc pushf jo push scas cmp cmp das repnz arpl ss cs (bad) jbe test xor ss mov pop pop mov mov (bad) or pop leave icebp fiadd scas sahf mov mov (bad) xor (bad) divl add cmp test lods fldenv adc inc aaa sub mov push inc mov and lea ja imull ss mov hlt aam jg les sahf cs jne xchg xchg lret xor jne xchg jne out data16 jb sub cmp dec mov dec ss pop push lea nop jecxz call (bad) stc jae sbb (bad) data16 xchg sub enter lahf out jne stc sub lds or xor jae mov push pop jo sbb iret cmpsl sbb fisub fldenv das (bad) jns mov in ds pop fdivr lds fistpll call mulb jecxz bound push xchg ret cmp (bad) out pop adc mov test jo std ja insl clc dec mov sarb mov ljmp jo decb out sbb repz int3 leave fildll adc inc out scas xchg out inc mov out aaa leave push mov mov stc outsb nop lahf pop pop jbe,pn cmp dec in mov movsb out add dec cmc add pop stos xor (bad) loope pushf cmp test scas dec (bad) cltd int pop mov inc mov in cmpsl adc fnstsw sub xlat cmp xchg or dec jb mov cmpsl sub dec (bad) xchg and mov int3 push notl push mov push aad xchg sbb dec (bad) cmp add sbb xor mov ss stc pop call test push dec pop xor es xor and sbb das inc scas stc dec xor in mov or lock inc dec enter mov sti enter and or les cld lock fimul test or inc sub popw das add movsb xchg mov nop jmp shrl popl xorl pop mov push dec push mov xchg push je cli mov cmpsb adc out call hlt arpl ss (bad) jle push ret and sti aaa out loop add fiaddl bound push imul mov stos arpl pop sbb push sbb xchg hlt cli pop add lcall adc popf dec jns aad mov xor sbb ljmp mov icebp or mov fnop mov test mov cmpl ret sub enter sbb cmc daa push push in ss jns jp or push clc xchg jo mov lock cmp and cwtl xchg inc loopne lahf (bad) loop outsb imul xchg jg jg ja push push gs sahf test mov fdivrs notl (bad) mov int3 and ljmp jecxz mov inc gs and das push and cmp jecxz stos cmc pushf dec enter test xor mov (bad) cmp outsb mov push jno adc sbb jmp mov scas jae popa push mov ss out movsl gs jecxz inc fstpt mov fdivrs pop aas pop cmp push cmp push add int3 outsb iret mov xchg cmp lcall pop test loop sbb pop mov push pop xor xchg enter test cs pop fisubr out data16 das cmp insl xchg in fildll pop push movsb mov les sub test dec push pushf xchg pop fwait out das js pop sbb jmp mov inc fcoms or add cmp mov shll dec adcb pop (bad) mov cmp pop fisubrl adc fstl sub inc pop stos in sahf out push sti addb aam (bad) sbb lret mov jns cmp cli mov das mov addr16 mov aaa pop adcl mov cmp and and pcmpeqw dec decl dec stc or jle aam sbb sbb mov pop or and not mov (bad) dec daa mov fisttpll add push jno test (bad) sbb xchg mov pop std fwait dec pusha jecxz push cli mov insl arpl xchg test ds mov mov xor cmpsl ds clc sarl sub or push mov in inc sar mov xor cltd loop paddusb xor test mov call jg mov inc roll repnz es data16 or sub jl in jno adc andl cwtl cmp or jne sub push mov fwait mov addb push jl iret push popa js push adc xchg nop mov push loope lret pop add jmp rcrl push aaa inc xchg jmp jmp sbb fsubl push out clc jmp cmp daa int movsb and jno rolb leave pop (bad) cmp shrl xor inc add jg mov sub xor sub loop xchg pop fstpl imul out sarl addl and roll sahf sbb pop inc pusha in cmp mov clc popf jg jbe inc mov inc (bad) sbb jae rcrl mov jmp jne mov jbe jo lahf ds fwait mov outsl movsl fsubl out pop cwtl or aad push sbb adc (bad) icebp dec xor pop sarb cld sub inc cmp stos or popf js mov in stc dec sbb enter repz je rorb and jle in jl jae ss loope subb xchg mov push xchg loope pop arpl outsb syscall xchg cmpsb adc cmpsl jl mov mov push or hlt ret add lds int dec enter pop popa cmp mov inc stc (bad) sbb or fadds cmp stos cmp int ljmp xchg cmp xor orb (bad) jo add pop es jns (bad) inc nop cmp test inc jecxz add lock insb stos imul push ficom jne lock negl int3 push not add or shrb add pop cmpsb push push lcall xor sbb xor gs aad lret es sub mov addr16 mov sbb mov pop imul xchg mov (bad) xchg inc jg xlat loopne clc aaa adc xor shrb dec loopne jne fidivr add jecxz insl pop mov fcompp (bad) out pop leave lds cmp mov rol repz mov xlat mov adc jle xor sub gs sbb (bad) mov xchg mov xor mov lock call gs push test jl je mov outsl mov roll pushl push mov cmp push adc adc push je mov pop push pop imul incl stos mov or (bad) ds xor orl xor stos mov pop adc add mov gs xchg cmp pop jecxz cld push pushf dec sti pop pushf push and cwtl das cwtl out mov fdivl push nop (bad) adc out stc mov cld pop bound add add enter cli loope out pop sub sahf in dec fldl2t mov cs xor pop adcl lods jne cld test pop mov pop mov adc imul mov jge mov and dec fldl scas mov jmp jb je fxam fwait pop mov push fisub insl pop mov dec adc or or and sub sub dec scas jmp push daa fcoms ss mov pop in xchg pusha xchg sbbl lods nop movsb shll aam ret mov loopne jns in inc mov adc out loope pop xchg xor inc shll lret std sti inc mov pop dec push xchg fidiv clc adc push aam repz sbb xchg xchg stos sub xchg scas adc mov popl xchg xchg pop sbb fs mov mov mov cmp cmp (bad) loope or pop js cltd shr repnz xor out and sbb aaa add xchg mov pop cmc mov inc xor dec cltd cmp fidivrl (bad) lods push test (bad) int movsl out repz in lcall ret xor lcall test dec mov movsb dec mov aaa jo xchg jmp add push push popl add pop test insl lods clc lret (bad) push xchg sub mov push inc push out incl sub xchg mov xchg mov xor out mov push xor pop push jae cmp (bad) hlt pop push inc mov (bad) push xor fs and xorl cwtl cwtl out cmp aam push cmc popa pop jno jp ds push fisttpl mov je mov jo mov xchg xchg int3 repnz nop fsubrp xor (bad) int3 mov call mov mov ljmp mov mov les mov xchg mov sub scas addr16 jg pop loope aaa or xchg out mov sbb push js sub into sub (bad) (bad) xor xchg pop push and lahf das jp pusha mov inc (bad) jno lcall rcrl add mov iret adc stc pusha inc xor lcall adc iret lods xchg cld sub adc (bad) mov jl push push gs imul mov mov bound test dec sub addl lods movsl loope jo stc mov dec inc les lock dec sub mov daa movsb movsb jbe push fisubl call call pop or cmp fistp (bad) sarl sub loop insb push lods cmp or mov pop movsb pop ljmp jne popf cmpsl pop fimull or sub lcall inc xchg fdivs (bad) mov pop mov out repnz jmp outsl jns cwtl jp mov sub hlt je dec pop arpl data16 mov push in cli rolb xor mov adc mov push cmpsb fnop mov xchg jmp into cmp push xchg xchg test out or or dec push pushf xchg push xchg cmp xchg mov mov lods xor jle lods cmp sti pop jbe or mov sbbl bswap movsl jge in mov movsw leave sub mov insl jle and mov sbb les gs mov fnstsw add out cmp cli adc add pusha xchg loop nop sbb hlt cmpsb mov jbe popa xor clc mov loope aaa mov jmp push push xchg or and ss icebp into cwtl hlt lods xor pop jg adc test adc jg mov (bad) cmp push daa sbb cld inc or push ret (bad) mov push cmp cmp sub mov push pop adc xlat dec push lret out add out pushl cmp push movsb pop fidivr popf adc loop jae sarb cmp fwait pop popa sub enter movsb aaa movsb das jno xor cmp jno (bad) cmp or ret mov in adc mov or ljmp testb jae mov jg imul mulb push fiaddl push mov and sub loopne imul cmp add mov popw sub mov or jnp sub lods out mov enter or (bad) sbb cltd test jnp jmp xor jae sbb lods ficomp test mov icebp add arpl mov or push push mov sbb icebp cmpsl in mov leave jle es (bad) xchg cmp cmpsl test and (bad) jle and imul xchg (bad) cld popf mov adc jl inc test or inc xchg jo mov iret inc out inc mulb cmpsb jl jno push movsl jp pop pop ss jne dec mov push push out (bad) scas jo cmp mov pop push fisttpl in or adc adc add sub sbb or xchg xor pop out aaa dec push rclb dec mov mov xstore-rng cmpsl add imul fiadd or cmp push in pop and mov sub xor (bad) in ret jne popa push sti je cmp lods out xor test adc jbe (bad) mov pop cmp sbb or arpl sti testb andl sbb xorl add jle adc and outsl xchg icebp cmpsb and jnp lret fstl push das mov and cs push adc stos sbb push inc or push add stc fsubrs cmp js push lds sbb outsb adc mov push insl push xor es fildl add scas loop aas dec movsl mov xor cltd idivl (bad) lods push fsubrl cld stc repnz testl jno xchg int lret les (bad) out push cmpsl repz push push add fwait (bad) xor ret cmpsb and adc popa pop or inc pop jp loop (bad) xor (bad) pop jl dec push sahf mov enter jno and dec push js xchg pop pop adc lret std aad cmp imul movb dec sbb sbb pop lds push out dec mov divb js dec jle out fnstcw xchg out mov xor push inc dec jbe subb arpl stos dec cld clc xchg lret push neg dec xchg daa and sbb add js cmp inc sbb push mov and sub icebp push aam sbb push sbb jae sub pop jo xor testb dec les xor xor mov add dec shrl popa lret and and stos inc in mov out stos (bad) jmp test add insl mov movsl icebp mov sub xor cmp xlat int3 adcl popa and sarl in xchg sub out sbb fldl pop adc lods stos and (bad) pushf mov push enter adc push cld jle pop sub jae enter outsl (bad) mov fs lds sarb aam add cmp push imul fisub dec fist push inc and xor push scas pop jbe or jbe mov mov (bad) divl push ucomiss mov xlat mov sub mov cmp and sub or jbe daa mov pop int cwtl cmp (bad) push pop push lods std popa cli jl and test xchg loope hlt add jl pop sbb fildl or dec jae (bad) sub add (bad) sub je,pn sub push push inc sbb mov aad inc add fisubl sti sub pusha pop xor sub dec aaa lahf adc jle inc stos or sub leave push mov je mov xor fidiv mov roll mov je adc aaa push or (bad) mov mov lods (bad) mov adc push push sbb outsl dec pop insb xor cld stos adc pop push out xchg xchg pop enter pop inc jl fwait sahf mov mov inc mov arpl or in mov std mov push push and mov adc movsl arpl mov popa xor xchg cmpsl xor sbb std cltd hlt cmpsl outsb shrl sub xor sub xchg aaa lock mov les mov int cmpsl mov add sbb sahf cmp out in pop mov sub pop jl out mov xor inc scas test in (bad) push aaa push sbb mov into push dec pusha mov movl scas pop jle push insb jle mov fldt fwait jmp fdiv push fisttp cmpsb in mov fidiv xchg cmpsb aam cmp (bad) sbb outsb imul loopne cs mov or adc lret push insb dec adc cmp and xchg sub mov xchg jno (bad) sbb sbb mov incl jb dec xchg jl xlat and xchg aas or dec sub stos xor fimull push insb enter dec gs pusha test cmp insl jge jbe fisub lahf lret adc pushf mov mov dec jo add jne aaa mov mov sub aad outsb sbb adc mov xor xchg sti mov rorl jecxz mov cld push push sbb out aaa stc sbb and adc scas lcall pop out stc pop sbb fwait xchg cmpsl in fdiv stc push jb (bad) rorb adc rcrb outsl jg aam fsubp mov das in fs loopne imul adc scas dec fisubl in dec (bad) pop xchg lret mov push jno pop andb inc pop inc mov add (bad) fisub cmpsl popa jns data16 int mov sub sbb (bad) sbb or adc and cmp sub loop push (bad) fwait test mov getsec fldenv xor movsb out in push aas xor scas test out pop hlt push (bad) cli xor std movsl xchg cmp dec stc pop outsb mov ficom ret adc mov int adcb imul and imul mov (bad) add and cwtl shrl sbb popf jae adcb adc and arpl mov out mov les stc mov inc in jae outsb lret in test or clc cli pop mov pop lds cmp adc (bad) icebp test enter sub add out mov shrb add daa jg in inc out push jle pop xchg add or push adc jmp jmp adc stos push ja scas sbb add sbb leave or sbb pusha call and sub fsubr xchg xor aam loop clc mov inc mov mov pop xor ljmp pop aas aas test pop (bad) cs scas dec cmp sub mov cmp jae fisttpl stos push sub jl xor idivl es fwait jmp cmp sub aas sub fstpl sahf adc mov xchg into mov adc or xchg scas fsub pop sbb mov pusha movsb ret dec leave mov repz lds aas jne outsl xchg sbb cltd faddl sahf jnp mov outsl scas mov pop or ljmp xchg out cmp std adc jbe xchg add pop mov push stos push inc ja push push mov test stos outsb and mov mov ljmp xchg aad loop iret add mov ficom xchg aaa cli mov xor push test shrb sub sbb ja xlat xor outsb add pop mov adc sub dec sbb rcrb push pop stc faddl in popa jge fmuls add sbb mov (bad) fildll or pop push inc cwtl out pop mov leave in loop sahf je std jecxz xchg sbb mulb enter xchg scas fisub nop (bad) mov std fistp hlt (bad) mov jbe dec jp xchg sbb dec ret push mov cmp jl cmp xchg loope or pop fsubrl test aad pop clc and adc in (bad) out aas pusha sbb mov in out jno dec mov sbb test adc leave mov dec dec loope mov add pop fwait ret jge sbb std jmp mov cmpsb mov and lret xchg pop push push (bad) cli (bad) or lret push mov or cmc fucomi pop mov and iret dec int3 push loopne add ds mov dec aam sti enter call push adc rclb xor lea loopne xchg data16 sub repz out fcomps inc (bad) or call cs pusha jno inc rcll outsb idiv (bad) addr16 imul and dec decl and rcll push inc sbbl scas mov adc movsb dec xor mov mov ret add jg jb pop or int das add add sbb popa xor add test adc (bad) lahf adcl in pop fistpl xchg daa orl xchg adc add jl cmp addr16 inc in jbe pushf popa cld std mov loope cmp mov mov subl imul fidivl fwait mov sbb out sahf inc pop sub int3 push pop lcall mov mov es jl xor pop mov cmp sbb aas xor pop arpl movsl and gs mov insl sub push icebp test dec sti pushf ss jns sbb cmc sarl sti push (bad) pop push cmpsb test dec jae pop xchg mov add fwait stos jae push addr16 add sarb mov adc es pop adc (bad) xor push push xlat xchg pop pop rcr push mov cmp in inc xchg mov jmp sbb movsb icebp push sbb cmp loope fwait jae sti dec or sbb out pop (bad) leave fsts icebp pusha jb mov roll sub mov push nop push ss xchg (bad) pop rcll iret (bad) fdivrs test inc dec stos sti inc jge aaa ss scas sub inc sbb sbb outsb push inc mov addl (bad) and sub movsl aam inc movsb (bad) arpl cld jno insb movsb jg cltd dec lods pop sahf les jne mov shlb lods hlt in testl sub faddp rorl jnp fstl inc in pop enter mov clc ja ret aaa ja add sti fldt into xor dec inc adc fstps std mov mov or mov cmp xchg les shr pcmpeqb stos popa lods or push lcall mov add inc jl push sub rcll mov adc fwait inc mov movsl imul cld inc sub aad push adc mov inc scas inc xor hlt cwtl iret sti and fwait xchg insl imul cmp loop inc daa (bad) sub jbe aaa stos out inc insb xor mov fnsave icebp imul and out (bad) jbe mulb mov mov ja xor lea cmpsb jmp fstpl jmp in cs mov clc and and imul push and fiadd loopne (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz lcall add jg jo out push je and dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add stc add add or or add or add add add pop or add add mull add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add cs dec inc inc push js in xlat sarl mov test aas mov (bad) fsubrs (bad) (bad) mov mov jge and add call lock and xor not mov sub cmp ljmp mov sbb std shrb rcll jp sbb push ja mov sbb (bad) or ret dec or jl mov mov dec mov sti jle adc int3 xor mov fdivl or push outsl jp cld out and mov test fidiv or imul outsb lock clc mov dec inc fisttp fwait mov ljmp loopne test pop xlat push adc push je lods mov xchg test jmp mov shll lret sub cli inc cmpsb inc outsb dec gs mov ljmp push or ljmp pop pop enter mov imul das cwtl call daa dec add mov and jecxz (bad) lea sbb push jle mov or daa jns pop add mov dec addr16 inc xchg cmpsl int3 xchg insl jmp mov loop ds lret xor inc push js mov mov shll mov cmp inc in rolb mov mov jnp push push repz cs call push dec les push shr mov inc jecxz sbb popf cmp fisubl and push and jp imul fiadd mov mov jo push jae insb lahf movsb lret add stos out fsubrs and mov imul mov aas (bad) shrl nop jb daa mov adc imul testb and cld cltd rcl xchg jns mov imul dec ret js pusha pop pop lds jmp adc fwait sub (bad) fildl jp inc ds sbb enter aad mov mov cmp xchg xor cmp dec popf push scas inc jge inc xchg pop syscall das pop cwtl inc mov adc push and jl or ss test outsl pop mov cmp fdivr dec sub push dec sub hlt outsb push adc fcompl bound xchg (bad) dec fmuls mov sti push push push mov xor dec fisubrl mov dec pop mov xchg test and xor add push mov xchg dec int fstl lahf daa adc xlat dec test mov pop jle rorl or dec mov mov clc int push pusha neg out add cmp xchg jae add pop out int3 in in movsb mov or ret fisubr rcll neg inc hlt mov inc lds sbb sbb adc scas inc sub mov push pop and lea aad scas jbe lcall scas xor push dec cmpsl std sub or (bad) (bad) aas xor sbb leave notb mov lea clc pop mov lea pop xor incb xchg outsl and cmp xchg outsl inc jmp ss out mov jp xchg aas xchg insl (bad) int cwtl (bad) cmp and jmp add xor fs push mov bound jb mov jb in ja es int out notb xchg inc inc sub loope xchg jg cmp insl pop out aad into stos add push and or stc fwait clc jle (bad) xor jb cmp fucom xchg fsubrp cli mov int lods or cmp bound pop cld fisubr loop dec (bad) mov mov cmp gs popf mov popf jbe (bad) popf or push adc cmp mov lea cltd sbb arpl outsl fcomps pop int or fisub mov sub stc jecxz icebp sarl adc dec into inc pop ret test pop mov cmp jle cli int mov ret xor mov xor ret xchg xchg adc loopne stc xor inc mov add cli popf sbb mov cmp pop or add xchg stos xor and mov inc inc cmpsl jge outsl cmp jno gs repnz (bad) divb cmpsb popf dec or sti push mov lds ja rolb pop clc and dec sub cmp pop (bad) push cmc cmpl sub repz mov in das (bad) pop adc pop nop scas mov adc push push icebp loopne xor adc scas jmp mov mov sbb dec (bad) jne sbb jmp int3 sahf or mov push repnz push adc into adc fs fucom xor and (bad) lock jge pop ss out and sahf test aam inc lds sbb imul lahf add loop xlat (bad) in sub add mov jmp mov scas mov pusha test incl push add roll mov fdivl adc sbb adc jae in lea xchg xchg (bad) fs jb xor (bad) lret js sbb cmp or inc sbb stos (bad) (bad) (bad) mov lods (bad) pop or xchg push lods pusha fsubl lcall pop pop pop sub js clc int mov out cs imul sbb jo (bad) fs cld cmp add lret loope pop xchg pop lret cmc inc pop lds xor add ds rsm mov jne ret sub jnp xchg adc andl nop shlb or in mov jg adc add dec mov popf adc mov mov roll out sub mov rclb data16 add sub sub and cmc xchg xchg sahf gs dec rol inc push lret (bad) ss sub cmp xorl icebp int3 pop xchg stos fsubl xchg pop jae add shll sbb lcall in or pop or popa iret add insb clc es cmc sahf dec mov cld push sub or xor (bad) adc push mov out push orl push sub mov int cmp (bad) (bad) int clc and scas aaa aam lahf in pop sub mov insb jne cld test notb xchg sbb mov call dec mov push jp mov and mov jmp clc rolw push insb sub jp add aad fwait cmp hlt inc jb out mov popa xor inc push call cs xlat ficom dec push mov inc repz scas or inc push xor movsl fldl dec mov fs jecxz push sub outsb sub mov cmp or (bad) int3 ljmp mov fwait push xor mov in (bad) (bad) into xlat xor mov mov jbe mov imul mov push inc outsb jbe mov pop into sbb stc sbb adc xchg mov ja xor fiadd or lret call sub sbb bound xor lret jmp sbb mov sub adc add insl jno push (bad) out mov mov push push mov jbe fidiv pop xor lret add ljmp cltd sbb out fcompl out scas sub adc movsl (bad) push push out xchg push stc mov push mov adc out iret and xor fbstp cmpsb lret push xchg arpl repz jg adc inc sbb test sub cltd mov (bad) into rorb jg add or (bad) in dec mov lret mov mov sub test mov (bad) mov inc fadds popf sbb es jmp aad inc in lret or add mov mov dec cmp sub push add ljmp xor xchg imul shrb add movl mov hlt sbb cmp mulb inc pop lcall (bad) dec aam movsb xchg sahf jo mov clc pop je jmp arpl cmc sbb enter mov inc and mov test rclb push int scas mov loope ljmp into push xchg popa xchg push mov ss lds lea push insl or ds enter fsubl push popf mov dec cmp xchg fdivrs leave into test lcall mov scas dec inc pop jp xor repz push fimull xchg jmp int aam cmp inc ss mov sub push cmp iret sub dec mov movsb jnp jbe xchg sbb mov out xchg jp daa adc test inc fisubl mov cmp sarl enter cmpsl roll loopne stc cmp (bad) push inc mov int3 in add jo dec rol cmp xor dec add mov dec dec in push mov push push jp lret xchg cmp xchg (bad) mov sub jae fdivrp add ja sub lods and mov (bad) out outsl out ds cmp jg loopne loopne dec sar lea popa in in fstpt lret jne sbb jne pusha push rorb jle xor int or dec popa clc mov xor xchg mov xor stc outsb jecxz test mov mov outsl lahf mov push (bad) and ljmp xchg cs shlb outsb push jg sub scas sub int3 sub hlt cmp stos roll or sbb dec into or push test xlat pop mov push ret pop (bad) or out sbb loopne jo shl aad push scas mov add push fbstp shll int mov lcall clc sub dec pop (bad) mov xor scas lcall sbb subl pop mov adc push cltd das cs daa xor lretw sbb xchg inc fistpll mov cmpsb pop aad adc jbe pop scas push icebp movsb pop stos fcoml sbb adc in cld dec sbb pop jmp xchg lret lret testl xor inc ljmp out repnz movsb aam dec arpl adc ret cmp outsb mov jne xacquire call (bad) fnstenv pushf mov xchg lods cmpsl rorb imull sub scas test ds sti popf pop and iret xor es mov mov pop sub in inc cmp enter sbb (bad) add jae aam jnp inc fwait jne or sbb and scas cli daa jo and xchg cld ljmp in pushf add ss rcrl out imul adc aaa inc mov fdivrl push mov rolb or cmp divl sbb icebp mov mov movsb inc jb rcr mov mov jle mov or cmp xchg mov ss pop jg or movq push fdivr hlt jae and sbb leave inc lahf jp in adcl adc mov mov (bad) or popa sub sbb cmp sub push mov pop insb sbb (bad) lahf inc pusha sub in push xchg push dec push fisubr push cmp mov push add mov mov mov sub adc das lret pop lods and out call lret pop adc loop jp dec jno out sub adc mov or repnz mov xor push lods jns adc outsl and cmpsb pop (bad) enter repnz push icebp xchg jae es pop dec mov pop jl xchg push dec mov lcall fidivrl sub cmpsl in dec push out inc fs jp dec lret cmp icebp and clc ror mov xchg icebp outsb xchg rcrb push jns (bad) je lret sbb xchg movsl ja dec mov lods hlt (bad) mov stos in xor adc xchg sub scas ja leave fldenv out repz xchg aad xchg stos sbb mov (bad) test fstp adc pop adc jle stos pop xor mov xchg std dec push mov push add inc mov push push es enter ret pop in and addl mov cmp shrl inc sbb add mov ja int mov fadds sti and and inc mov sahf push sub xchg int xor nop sub sahf ja adc push cwtl xchg ds (bad) std lcall jbe jmp add notb lret or push and mov scas lods adc cs jnp jge loope dec or xchg push push add (bad) frstor movl cmp mov dec cmpsb xchg pop shrb or mov dec mov xchg lds xchg xchg mov dec fistpll popf cltd mov adc movsb mov jp push xchg mov int3 repnz je push sub (bad) sbb jbe test adc sbb push loopne sbb push fsubl std jecxz fldcw mov jb repz stc or (bad) adc push rolb dec mov or xor adc mov mov fistp std sbb test or sub roll int jo xchg fldt cmpsb bound mov xchg movsb rorl ret adc (bad) repnz add sub je jle fiadd push push mov pop imul push pop xchg cmp xlat add sub imul fild test sarb clc inc xor fdivr rcrb mov dec stos movsb sub dec scas xchg xchg outsb add pop mov push inc aad sub cmp add imul iret icebp (bad) and xchg and fwait sub or fadds js mov lret popf scas out sbb aad stc mov push pop mov aam jne xchg sbb arpl ja xor sbb and pop into xor cld outsb and xor inc pusha cmp mov or dec sub jl imul lods push mov mul sbb jnp push xor adc (bad) (bad) in fimull out (bad) shlb lods daa out cmp out scas push mov mov lret dec xor pop repnz inc in movsl icebp push push and fwait loope dec lods fbld cmp adc rcrl insl fucom push ss in jbe outsl (bad) je mov mov adc pop (bad) es mov inc pop movsb push scas ds fidivr test clc pop mov sub pop (bad) xchg je call cwtl add (bad) mov ficoml out pop ljmp dec push mov mov inc out imul cli inc sbbl lock popf imul insl test cltd jle (bad) loop popa inc nop push movsl xchg or in clc scas fdivr cmp sbb cmp int3 xor nop xor add xlat iret and xchg insb mov dec fwait aaa inc mov push jg daa adc or les mov fwait insb cs (bad) mov pop pop sub add jp inc and lahf push leave jmp ret (bad) mov (bad) sub (bad) mov sub and lods sbb sbb mov xor and mov xchg addr16 mov sbb sar pusha sub test jne dec stos mov mov mov push mov jl and inc push (bad) int3 (bad) mov pop and popl xor call xchg jmp pop dec roll mov mov pop cmp mov sarb dec and lcall insl pop arpl sub mov inc dec fcmovnb xchg (bad) add mov stos popl sti addr16 jns stos mov fildl jmp xorb test stos jo push iret jno pop addl lea insb pushf jno out add rcrl cltd and xchg jmp dec lret repz faddl popf inc mov ljmp mov add outsb dec sub pop xor test or ljmp mov sbb unpckhps out fistpl dec imul jne in in xor jmp adcl jbe leave ret add dec cmc ss leave inc cmc pop mov and iret pushf xchg xchg arpl out dec push adc adc rcrb lods das mov ret mov xchg or out push or jb sti jbe enter fdiv xorb xor scas xlat jp jmp pop push or imul nop add in sti pop add push adc push xchg testb or mov cwtl rclb fs inc lret mov inc fnsave lds faddp jge xor in cli jl pop int3 add push test xor fidivr dec addr16 xchg sbb cmpsb xor imul xchg test pop or lea loop,pt pop ret imul mov sbbl add nop lcall sbb and push sub sub (bad) mov stc jnp xor adc add rorb sub out mov scas roll inc inc add in dec out dec ret scas adc and jns and lock add loope jg sub das jmp dec mov inc pop inc outsb dec mov ret mov pop push scas add jno popf sub fisttpl inc sbbb adc (bad) mul enter cmp xorb in repnz mov or mov mov leave xchg pop mov xchg xor out (bad) dec xor xchg shrl ljmp call mov pop clc call push jl cltd pop xor inc out lcall (bad) ja jp add (bad) mov cmp daa fdivp pop (bad) gs pop adc in inc push movsb daa aam les dec and movsl lea lds mov push int3 push mov inc addr16 mov test push nop je mov jne inc push leave adc pop (bad) nop cld loop (bad) jmp out adc les mov les lds dec dec inc sbb or pop std fidivl mov cs in popf inc and add jmp mov js mov das stc into mov enter mov ret xchg shrl add jbe lret cmp sti ficomp push mov fimull dec push call (bad) sbbl cmp adc in fcmovu out inc mov hlt add cs push (bad) add clc cltd adc loope pop or mov (bad) xor adc mov ja inc jne rclb inc or test mov dec cld xor insb xchg add loope jmp orl xchg arpl xor xchg jl cmpsb test jmp push repnz pop jecxz cmp in xchg or subl inc xchg sub xchg imull aad add fcmovne xor sub and leave mov or jne jnp enter lods mov jecxz xchg ja imul jns aam sti jge add mov xchg jo,pn nop jo push push jl adc out inc fstpt hlt cmp std pop js lcall loop imul inc xchg sub push test das adc and clc sbb cmp insl xchg xchg mov push cld jmp psubsb bound lretw jnp cmpsl insb cmp adc push lods pop adc pop mov (bad) sbb dec pusha outsb dec out (bad) jb pusha cmp cmc mov mov icebp inc loope ds into push imul out lea iret or stc mov fdivr cld test ja and or dec std sub js inc dec xor jbe xor sbb push push pop xchg sub popf push out jae or shrb xor pop pop jnp cld jo rorb xorl (bad) jnp fdivrl scas shr sub jae cmp or sti pop adc enter mov (bad) mov roll aad lds push sti mov popa add repnz insl fs jmp int fdivr hlt out or ja mov jae mov test inc cmp mov add mov jge mov pop (bad) cmp sub outsl mov adc inc xchg ret jl or push mov in (bad) cltd jmp or fildl adc std and dec dec repz sub push xor lret lock dec jo cmp xor je push xchg (bad) (bad) insl ret xchg dec fdivrl mov jecxz cmp inc test ja mov dec lret fnop lret inc adc sbb sbb lea (bad) mov rorl decb pop adc push push imul popa rcrl mov cmc popa mov cmpsb aas dec cmp xchg sbb lret daa jg jb jmp adc aam icebp adc adc adc mov fs mov (bad) int3 push movsl (bad) icebp sbb mov inc or and push add and stc loopne pushf stc (bad) mov adc (bad) adc push test pushf mov adc jno mov shrb mov cli loop sbb bound test call lcall mov sti push ja sub push mov fcoms dec or fist mov out int in pop pop lcall in pusha xor lcall in dec push jb sub push xchg outsb mov and std mov xorl sub xchg nop inc aad or jns jge mov mov (bad) jb mov (bad) jp xor jl push cmc mov sbb jno cmpsb hlt mov jmp pusha out xchg test xor dec imul push sahf test in fwait push sahf sti outsb in popf add mov xor jns,pt ljmp push jle outsb xchg cwtl and or nop add dec sub fimul pop popf mov mov out sbb cmp icebp mov mov pop jns ret scas cmpsb adc mov je outsl and push add add sbb push sub fldcw push mov (bad) loope,pn stos fwait and mov mov xchg dec outsl cmp pop icebp or daa test mov pop ret cs seto pop scas fxch dec out mov cmp inc fwait mov cltd mov enter (bad) jnp gs out jecxz adc ret aaa stos insb or xchg dec sbb enter jle mov in nop imul add push in mov test xor aad add es cmpsb sarb adc sub pop rcl int pusha pop xchg add mov ret jle ret nop sahf bound mov push jmp mov xchg xor jne lahf add rcrl mov mov mov stc rorb ret dec mov mov pusha arpl loope and ret in inc jg or cmp in xchg sbbb out lods pop dec sbb (bad) fisttpl addr16 aas stos push stos loopne pop inc pop test pop fmull inc cmpsb inc jo fsubr shl (bad) stos fs cmp pop fdiv mov or jno inc or ljmp daa stos sub push xchg in iret mov pop sbb push cmpsb lret push movsl add add aad xchg fimull pop cltd xchg out dec sub adc mov movsb or mov stos adc leave or fsts insl mov outsb not (bad) fincstp lds xchg hlt (bad) sbb mov jne lods mov push fistp aad mov xor sar enter jno mov pop push data16 div or stos jo xchg inc jecxz mov sbb cltd bound incl push mov adc cmp xchg adc out dec xor rolb dec pop lret dec inc sahf sbb push jne js notb arpl xchg inc or pop nop leave cmpsb rcl pop mov pop ret and mov sbb popf push das and jg mov xchg std cmp xchg cwtl or dec ret loope and inc ljmp pop xor sbb add imul imul clc dec repnz ljmp pop hlt adc subl ret daa loop (bad) mov test dec cmp outsl or jo cli mov jge pop sbb icebp mov pop out (bad) (bad) pop push mov sub aaa mov fdivs xchg lcall xlat inc fdivrl (bad) mov or (bad) je jnp loop js jae enter mov sub int in jne inc jg sarl cs mov cmp inc imul inc and mov or pop aas clc push jne mov (bad) sub je push cmp les popf dec mov sbb dec dec sbb test sub repnz jb test xor jns push cmpsb push and cli add or stos in push loop (bad) in and in lret es addr16 loope mov int3 scas insl inc push fimul mov xchg push ja xlat pop pop mov mov mov imul cmc xor adc ljmp or pop sbb mov fcmove (bad) in xlat cmp out popw cmp fistpl scas pushl stos push inc lods (bad) in push dec inc sub ret mov rdpmc cmp sub mov sub outsb xchg loopne repz add jno je add or js cli (bad) jl xchg xor dec push jge (bad) push push call lds pop xchg in pop jne notl push adc mov jns jg add cmp pop mov sub pop iret jno fwait push pop dec into cli movsl sub mov push xor pusha inc push cmp frstor adc cmc inc add fstl stos cltd mov imul je es xor add mov cmp mov xchg push lret clc rclb lock pushf movsb lods movsl jmp ss inc neg mov inc cmpsl (bad) xor fisttpl test push add loopne fcmovu cwtl inc xchg adc lods jle push enter xor outsb xor xchg stc scas inc mov push dec dec daa or stos and scas jecxz or out jp push lahf sub sub mov mov xor mov arpl in (bad) jle mov sub mov jnp data16 stc add sahf shl (bad) test movsb enter hlt mov push mov ret fsub rol lods inc lods shlb mov inc xor dec jle ja push loopne mov jbe call inc cmc loope adc jno xlat (bad) int out ljmp aam add repz data16 subl cld gs jbe,pn dec lds adc cmp cwtl push jp test xor xor xor pop mov and (bad) xor cmpsb jle stc lods imul in dec ret addb xlat xor rcrl test mov cmp push inc push mov not in adc shll cmp frstor adc jno loop xchg inc sub inc push test add addr16 in cmpsl dec mov (bad) mov pop mov pusha in out jne fldl imul mov sub mov dec or and push mov dec dec sbb xlat push scas push nop ja add je jmp imul (bad) ss and push sahf sbb pushf cmp and jl inc adc test push stos popf push or fwait gs and push pop pop fildll mov and pop addr16 and mov test rclb jp ljmp push jmp jle mov imul push mov vpcmpgtb pop xor mov or and mov cld outsl inc mov mov (bad) out add in scas push pop movsl sbb fs (bad) call jge arpl sub hlt inc fwait call pushf (bad) test daa xchg call mov sub fwait dec jb aaa push test xchg aam pop add mov dec rol out test dec push inc nop or mov jl add cli scas pop daa inc push enter inc or inc jno xchg mov arpl push js leave cs stc fcoml mov jmp rcrb mov adc out push xor pop clc jns daa mov call lret clc pusha bound mov adc or stos mov jnp stc lods jl in jbe inc ja cmp sbb pop push push in dec pop dec outsb out xchg xor inc stos aad (bad) cmp push movlps mov and push dec cmp in icebp ret outsl xor xlat dec mov xor fcoms (bad) and mov xor repnz mov lods pushl sarb (bad) mov lret sti lcall xchg adc inc cwtl xadd pop sbb sbb inc push outsl arpl jae loop or sbb add nop in jb xchg jp adc loopne mov add lret pop into ficomp and dec or enter xchg mov or dec pop std xchg imul sub push test pop sub cwtl inc shrb scas lock xchg dec fstl push fwait pop mov insb ficoml sub xchg sub stc inc pushf jnp hlt mov dec add mov xor adc fistp sub aas mov popf out mulb test ret in mov pop mov xlat xor outsb xor sti add inc test sub (bad) rcrb jl mov shlb and mov mov imul into cwtl xor fstps add xor push push (bad) sub adc int sub mov dec rorb lret or (bad) xor (bad) xor pop push fiaddl adc fcom mov adc pop xchg icebp rol out inc xchg push push inc pusha in stc mov sub adc add inc and jecxz (bad) fcompl xchg xchg sbb dec push loopne mov inc cld ljmp adc pop push jg (bad) mov lcall lds mov pop movsl shlb sub aaa mov dec mov xor cmpsl fistpl push sbb cld xor ret xor sub xor (bad) repz insl jns mov mov push adc jb adc paddusb pop jle add cltd push call fisubrl adc xchg cmc jne dec add dec xchg mov pop cltd fnstsw stos xor mov and and cmc addr16 push cwtl (bad) leave jns clc push vmovhps loope push outsl mov std movsb rep arpl cmp xchg fwait add or loope fidivl addr16 or in scas and dec pop ljmp push cli popf addr16 mov lret sahf cmp mov cmp sti js cld pop fsubrl sub jns xchg mov pop xchg shll dec cmp ss xor fwait in mov mov aaa mov shll mov sbb pop pop fwait cmp nop adc adc or shrb into xor sti jb inc mov xor inc sub jp or cmp imul out mov jle cwtl movsb (bad) je loop mov cmpsb sti je adc pslld pop mov icebp sbb shrl pop dec adc xchg aaa mov inc ljmp (bad) fcompl stos les push xchg fisttpll aam push lock jns push lret mov xor push mov adc out add mov xor mov cli cltd add movsb mov mov lcall fiadd roll cwtl out mov gs lds test jmp lea jp icebp add xchg inc into std fmuls jmp out and xchg xor sbb inc cltd and inc push cmp popf mov mov ja push fs leave dec daa popf and rcll pop pushf cltd fisttp add fcompl jno or loopne mov cmp adc popf jmp insl iret xchg jge shll fildll sar (bad) popa jno aaa rclb pop ss pop adc xor enter dec nop mov push mov (bad) adc and in push push lods add loope push cmc fs adc inc cld xor cmp adc push fwait rcrb jl mov sbb aaa js test cmp (bad) mov ljmp mov loopne,pn dec insl repnz lcall push lock mov sbb in stos cs cmp xchg and mov xchg movsl push mov dec dec movsl adc pop fisubr (bad) aas sub aaa jns lds sbb shrb ljmp gs cmc movsb lret stos iret pop les out add mov das fsts and adc dec es mov cmpsb shrb (bad) xchg inc mov into (bad) push and fnsetpm(287 mov int inc push sbb mov out xchg (bad) mov icebp imul inc jns dec jle repz aas dec jno daa enter and faddl adcl les push lds push add mov leave repz sbb mov mov sbb adc sub sub jns push lret jae aaa mov jae repnz jp movsb pop adc std sub scas aaa outsb das xchg das adc pop pop ret xchg push test fisttpll push sub mov cwtl sti mov jbe mov frstor pop push inc and jb cltd or aas dec jl adcb xchg dec xchg out xor icebp mov (bad) hlt dec xor jno loop repz jp mov insb cmp (bad) lock push sar rclb jmp cmp jecxz mov (bad) mov mov fistpl pop test int3 jae ja pushf jp push xchg cwtl div jge push xchg adc call repnz mov (bad) fdivrp sbb in add push sub movsb cmp fwait popa (bad) fnop mov roll mov cmp (bad) xlat inc push cs xchg xor (bad) xor lea mov js add cmp xchg or mov sbb popf es mov xchg adc xor stc inc xchg xchg cmp imul cmpsb adc sbb and lret jae cwtl push cmp test lods push push (bad) daa jmp xchg and jle cmc (bad) or mov cmc sbb cmp pusha mov std out adc movsb jns (bad) mov test pop mov shlb test clc sahf fisubrl js cmpsw inc mov push fs sbb sbb repnz in cmpb (bad) sbb sbb jmp mov movsb push or ss mov nop jl push and aam cmp bound lret pop pop mov test pop jae fisubr in adc cltd cmpsl out fildl enter js mov dec mov mov sub fs fnstsw shll xor loope xlat mov pop dec jecxz jo in and ret movsb dec xchg out cmp cltd mov clc ret in mov hlt imul mov in negb and xor pop sbb cmp sbb mov (bad) dec and mov mov (bad) imull xchg cmp mov push jmp lcall out sub pop jno mov xor cmpsb (bad) rolb pop mov sar out mov dec add dec ss aaa jnp hlt inc fnstsw imul push inc pop fldcw cmpsb ljmp fidivr shr fwait ret movsb mov pop xchg dec mov mov add jno sbb shll push add jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jecxz (bad) pop aas jle clc icebp jg add pop rolb pop jne pop pop add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add jns add add or or add or add add add pop or add add mull add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add cmp push js in (bad) add mov dec (bad) mov (bad) mov je (bad) add ja mov cmp add rclb cmp jbe xchg xchg fbld push sub les out xor jmp mov shlb push repnz icebp and or faddp mov sub sub sti shlb addr16 jmp pop xor mov sbb and iret jae pop push and sti stos cmc mov (bad) out mov mov (bad) adc sahf adc int (bad) xor xchg mov negb xor ret insl cmc arpl jb mov mov xchg popf lock fisubrl (bad) fsts or fcmove test enter mov push (bad) gs pop cltd jae inc outsb push cmp mov add jg xor jns std fldln2 xchg ret and pusha push xor ficom xor call cmpsl pop mov mov lret cmc and jecxz pop add xor leave (bad) sbb sti pop sarl pop cltd inc xchg and cmp mov adc inc xor sub shl fldz push pusha insb dec jo in test cmp out inc push push insl inc sbb sub fs fisubl sub mov and mov cmpsb lds mov cld sahf mov fcompl repnz cmp rolb pop sbb fsub xor inc adc xor enter sbb sbb or mov rol mov mov rcr test sbb pop adc cmp leave out (bad) lret fs mov sbb jns or sarl sbb sub mov arpl sbb push test push pop xorb out insl (bad) mov rcll jnp adc gs mov xchg and push std push mov push incl ds adc and jno jp adc lods pusha lods adc lods mov (bad) jo ret fstpt out inc lea dec xchg xchg jo dec push pop and les sub (bad) xor cwtl insb pop cmpsl mov in rcll pushf pop mov (bad) xlat rcr inc cmp sbb sbb loope fnsave lds mov add (bad) and aaa sub cwtl mov invd scas push dec into iret sub mov mov and cmp inc mov pop xlat outsb (bad) call out cmpsl cmp xchg dec sbb mov push pop and mov inc pop sbb pop inc lahf fisubr xor jl cmpsb dec rclb fldt sti icebp mov push jg inc pop cmpsl push cwtl dec and mov rorb mov movsb mov scas mov cmpsl into sbb addr16 sarb sub and sti imul push inc enter mov xchg (bad) mov cmp testb push aad sub cmp mov mov ja gs sub cmp leave movsb xor lahf fadd sub popf jmp push dec mov jge loop mov mov pop sub out xor sti sbb mov dec mov ret (bad) bound xchg out lock fdivs jns cmp and xor or adc gs nop test mov add mul jnp push push mov cmp cs cs in jg jne icebp les cmp out jns pop inc fstpl mov test fisub shlb clc dec or ss imul nop sbb adc test adc cli pop push push mov and xchg and mov adc pop int3 jg icebp into rorl xchg lcall movsl xchg lock push sbb inc lahf inc push sub sbb push adc ja sbbl mov sub push mull xor aad cld xchg das out jmp jge cmp cli mov scas push cmpsl (bad) andl dec xchg imul adc xor das sbbb mov and add sti out xchg mov jae aaa lods jbe jo jne enter sub cmp (bad) aaa jno dec outsb sahf sub and mov xor pop jne fldt and mov sbb leave fisubl adc or shrl mov repz sbb mov cmp test test or inc and mov sub int cld pushf or aas hlt loop fisttpl movsl pop daa outsl out ss sub jge addr16 jl das pop and mov in (bad) aas cmp push ds sub stos push outsb xor test mov push (bad) cld out lahf pop jnp leave inc out and push and notb es xchg add and or repnz and loope,pn pushf outsb movsb sahf repz push cmp jmp push mov or jmp xorl mov in jae add in xchg jns fadd push inc adc inc xor add (bad) aad pusha pop loop jge addl xchg xor xor jmp cmpb push jb,pn in cld jno inc push popa pop loope clc ja je mov sub xor fcoms pop sbbl test pushf and mov lock dec cmp mov inc mov outsl shrb xchg in and inc sbb movsl sub add push mov aam pop and jge adc pop incl mov xor and fldenvs pop into dec add lret (bad) push fstpl jmp xlat into push pop xchg and int jge mov js or inc repz dec jp sbb cmc or out sub adc inc ljmp (bad) cmpsb fmull pop dec mov fwait mov inc mov push clc adc lock out lods aad push sbb push hlt cmp stos jg push lods shl inc add testb xor lock adc sub dec cltd jnp jo xchg mov and xor repz sub rclb pop incb or and add aaa push je into jge xor add adc pop negl jle ss stc icebp sahf dec or mov (bad) lret xor cmovae test adc loop dec ds in popa pop mov fadd xchg sub push push jne push test in rcrl adc mov sbb movsb les imulb mov mov jns xlat into push xchg mov mov mov mov add leave adc adc icebp (bad) jmp cwtl or sar popa jge or (bad) pop lods mov aad mov push js aad or sbb sbbb xchg cmp icebp enter add push ret test and out sbbl aad mov lds mov add (bad) lea popa fdivs in fnstcw jecxz sbb ja push (bad) sub or ja or push test fimull dec push int dec enter daa xadd repnz cmp in adc jg inc sub lcall ja mov loope addr16 setl xor cmp lret (bad) sub or inc addb imul add adc xor ds arpl cmp insb nop sub push sub push in cmp xchg push dec lcall lock test push adc cltd sbb hlt mov xchg pop and pop hlt mov pop insb (bad) fcoms mov jns xchg jl out clc fidivr mov jle mov in sbb roll inc call das aad cmpsb test clc test cmpsl pusha push adc insb push arpl out jae mov xor stos (bad) out jns mov out shlb sbb stc push inc clc pop xchg dec sbb loopne int3 out sub mov dec scas cmp insb push xchg ss js xorl xchg and in ss xor cmpsb rorb lret cmc popa test icebp push xchg lea push pop sub lret add push and inc int mov mov sbb mov push cmp iret add movsl sti es inc xchg adc push lods setno inc (bad) jle xor pop fdivrl inc pop loopne sub icebp mov pop jns mov adc dec fwait sbb stos (bad) scas mov pop sbb adc je aaa addr16 pop outsl out pop in dec pushf (bad) stc neg dec xchg or popf subb jp lcall and push cltd (bad) jnp mov hlt repnz int3 loop clc ja add xchg add sti iret xchg ffree gs vmovd jp dec and sub mov and or cmp cli cmp sub jo out mov lods stos lods fwait inc dec inc jmp in sub imul fidiv orl inc fs push xor ret push iret (bad) cmp push push jmp cld fstp mov loope inc bound lret add jmp rcl mov test mov js ds pop mov daa call decl jmp insb add mov inc and mov dec inc mov outsb and xor outsb sbb xchg or xlat divb xor (bad) scas xchg jb mov in mov adc sbb mov sub gs mull or ljmp xchg fistl addl test enter or aaa dec cmp dec or rcrl sbb pop stos popa sbb cs sub pop negb lods loopne mov movsb sbb dec push aam jo push pusha inc and sti outsb xchg pusha push test aam adc jno or roll cli adc out sbb insl cltd xchg mov cmp sub (bad) enter ljmp adc dec and negl inc loope cmp fcoms pop (bad) sub mov pop clc dec adc mov in and xor pop addr16 repnz pop repz mov gs or xchg inc cltd mov dec adc push ja mov fistp push jbe test jae lea int3 iret out push push lret imul sbb loope sub int outsl pusha int fcomps inc nop adc adcl lret popa push sub xor inc sti ja out aaa mov jbe adc jo pusha icebp push ret (bad) mov mov bound daa mov push ljmp cmp pushf icebp cmp shrb sbb imul inc lea ret pop adc mov and ret imul jle push dec cmp cld push adc cld add mov sub loope pop lcall adcb movsb jno push cli xor jecxz pop roll sub fwait rorl push mov cltd inc repnz cmp cwtl mov adc mov (bad) push sar sub fimull add mov stos add xchg out lcall leave inc mov test mov cli lock int3 or dec jo (bad) cli fcomps lock imul sub lds jns cltd pushl popa dec (bad) jbe enter mov mov or out aad xchg out mov sbb or popa not push add rorb gs fldl imul or cmp adc fdivl mov xchg lcall pop stc mov movsb adc test add mov shr pusha and ds dec jne pop mov stc insb jae sub ds push mov mov push push insb insb loop lods pop xchg and adc mov iret lahf mov mov movsl movl pop sub pop mov scas add test fmuls mov lret scas pop les jbe (bad) fnstsw push mov loopne cmc leave mov loopne int jg or jno cmp dec or leave pop in jbe adc inc test pop ljmp in (bad) xor stos sbb pop cld push movb in test and jp or mov mov xchg addl fsts fs lret jb out rorl fisttp push mov nop imul fcomi xchg push adc leave mov int mov sub movsb cld adc fiadd je jno rorl shr inc sbb mov (bad) xor adc mov jle pmaddwd or leave xlat pop add jle insl out xorw stc or mov add pusha pop and (bad) js xor fidiv std out sbb in cmpsw fsubrl jmp push or dec lock xchg addr16 inc and cmpsb sti in dec lret lods adc lea lret mov jbe cmpsb (bad) jmp andl dec jecxz mov ss jbe clc movsb movsb inc jo out pusha lret icebp add repz push sub loop adc dec out test or mov sub mov or imul inc stc js ja fxch sbb mov in fmul inc mov lcall jl fildll in cmp mov sbb add or adc pop mov scas daa stos sub rclb mov and ljmp fs ret and lcall adc add in insb (bad) dec jg iret aam mov fisubrl xor icebp mov aas xlat jb mov std dec mov mov jo dec adc mov push xchg adc pop mov mov push (bad) sarl negl (bad) xchg faddl xchg xchg imul mov cld pusha ret sti inc jo in push loop mov and fdivs or xchg dec mov outsl mov jp adc sbb iret lods (bad) mov enter insl pop jmp adc call dec mov out je push pop mov add mov mov adc inc dec jns inc fldcw jns dec mov icebp sahf xchg mov inc pop rorl aaa mov popf cmp inc mov mov ljmp icebp pushl mov push pop cmp and or sub cmp mov test cmp ret repnz ret xchg pop test cli and pop jecxz in mov dec movq data16 jp gs pop mov push mov les das sub in xor push sub js inc sub mov shlb jmp call and sbb test add adc fsubs xchg jb xor mov cli dec jmp out fwait je mov mov fdivs dec xor out pop pop repz hlt les sbb popa ljmp fadd lods sbb mov stc scas pop outsl mov popa icebp lds sub aas and cmp mov pop pop lahf push mov test cmp (bad) add cmc jge fsubr xor out je mov add sahf pusha jmp test adc mov fmull enter mov enter xor lahf adc sub stos movsl mov jnp lods ret xchg mov aam push push dec push or or in mov pop cmc push pusha xor pop clc jle ret addr16 lret test cmpsl loopne imul sub jmp iret daa das addr16 (bad) jb out imul mov pop jo in fcmove or testb inc cmp (bad) xor in cmc mov scas lahf adc adc lahf icebp xor pop fstps sub dec (bad) push (bad) mov jb call stc stc add or sarl dec mov fs enter repz xchg dec stos xchg sub mov adc inc jo pop andl push mov mov hlt and pop ret adc xchg (bad) aaa addl loop push cmp stos data16 scas push test xchg out mov in inc popf add hlt enter xchg faddl ret mov pandn add and sbb test stos repz test lods push dec jnp pop ds jg cli sbb fsub mov add sub sub data16 stos mov dec rorb dec or sub jns test sbb das outsl lret fcoml ret iret (bad) leave in test mov mov out icebp inc cld xor jnp aam mov in nop pop fwait idivb inc xchg dec test gs int3 or sbb loope pop cmp call inc clc sub movsl cwtl xchg fsubrl je inc jns outsl mov and mov scas out dec fnsave dec movsb cwtl sahf pop iret jg aad sbb inc in lcall popf mov sub push shr hlt rclb mov pop insl pop pop pop mov mov lcall jg and rcrl mov int stc jb mov std fistpl pop jle add dec add sub (bad) xor sub xor dec mov mov jl adc pushl stos pop sarb xchg imul push cld inc mov push adc pop stos out inc mov cs cwtl movsb (bad) mov inc enter and or (bad) adc mov jecxz mov or jb or movsl xchg cmpb in or bound ret movsl xor stos mov xchg subl pop pusha pop sub popa or out mov imul sbb testb in aam sub outsb xchg push inc xor es test lock or out xor add arpl outsl insb das mov test sbb fstl ret pop add xchg mov and and negl inc dec xchg out imul push ret aas insl js jle mov xor jne outsb out (bad) xchg aaa inc shrl std and jge add push in les push xor xlat pushf aam arpl je imul cmpsl test repnz sbb mov mov dec (bad) (bad) pop xchg fmuls pop imul test mov dec cmp and add mov mov cmpsb fiadd out pop rorl xchg cmpsb arpl in in (bad) dec lock inc adc mov jns cmp mov frstpm(287 mov sti js lret jne sti jno outsb notl mov jnp sub notb mov stos ja or xor into pop mov iret int or jge repz push or call test data16 jb or xor pop mov jecxz jg fist adcb mov ficom out jae sbb outsb imul (bad) out bound jl and int pop inc rorb mov lea pop xchg shr mov xchg fmulp sub cli add push rcrb cmpsb das mov and sub adc sub (bad) jg inc sbb addl jmp jno inc mov setle iret push cli mov pop data16 add pop pushf rcll cwtl mov pop iret lods or sub pop jp jl (bad) dec cmp mulb outsl ret add lods and sbb push aas ror push jno jbe sbb push xchg push or shl inc add inc lods mov pop xchg iret js and repnz dec fist ja pop and sub ja clc out fnstenv (bad) jl xchg or dec inc enter mov or mov insl out add testl mov call btrl shrl add jae pop pop dec loope lods dec jne lods push cmp (bad) and mov cmp in adc mov ret test iret sbb push add mov ja,pt jecxz jge outsl stos ret ret fisubrl movsl xchg sub jle jmp dec out lret pop iret mov inc adc sbb js fucomi shlb sbb jnp pop push arpl ljmp mov xor (bad) fstp xor add push push sbb cli push test push aas test jae mov inc mov int and push add xchg addb ljmp popf jae and and and fisub int enter inc cs ss push das stos fsubr adc movb mov stc dec or inc jb jb push sbb cmp mov pop das dec inc push movsl (bad) mov xor mov push pop aaa scas aam add mov jp pop mov xor add mov and mov inc negb adc out adc imul (bad) dec mov movsl stos jg adc dec dec imul sub sbb fcoml imul lds push cmpsl jl lods loopne xchg dec jmp fs cmp cmp (bad) inc leave mov in loopne aas xor in push sti inc push xchg sub leave outsb jmp cltd aaa icebp cld mov inc int addr16 xchg and mov es mov pop loopne xchg adc hlt movl int push mov inc dec pusha mov mov mov jecxz fsubrl insl sbb xchg mov gs stc cltd out ret or outsl ja popf insl push xor xchg push pop aad out adc pusha (bad) movsb jecxz inc xlat imul cwtl inc inc movsl inc in mov sub sbb sti push jnp stos jg mov jbe and fildl inc gs sub mov das cwtl (bad) adc movl dec int xor fist jns es movsb jg push cs mov push cld pop ljmp and sub inc ds stos pushf sub mov out roll inc sub fcmovne aad push (bad) lea clc out xchg jnp mov inc mov mov push mov sahf sub into pop pop xor es data16 or push inc (bad) out fisttp adc insl cmc cltd aam (bad) sahf jp pop sbb push aaa lods adc dec sbb jno popa sbb xchg movsb stos aam mov insl rolb cltd xor inc aad mov add or (bad) pop sub cmp or sarl pop jne jne cli int3 jb jnp jge cmp imul cmp lea xchg lcall mov inc ret ljmp roll inc xor pop icebp lock das cmp pop into xchg sbbl cwtl jo pop push pop stos adcl push loopne gs and cmp mov pushf fsubr stos bound cmc in adc push cld xlat push pop dec inc pop xchg lcall adc cmpsl xchg xchg out movsl sub cmp sarl cmp ret mov mov xchg iret mov fimull mov (bad) push pop mov jae movsb out cmp in daa adc cmp add mov scas std loopne mov xorl or mov dec mov bound cmp fwait in push or push fs jge hlt bound fwait add inc jmp pushf xor (bad) fdivrp sub inc and push pop bound pop pop push cltd inc xor gs mov mov cmp jecxz fistpl add fcomip dec nop movsb std stos ficom xor inc mov push fwait or (bad) sub jbe jg adc mov pop adc je jae cli push push stos arpl dec mov int3 jle pop mov fucompp loopne lahf lods dec sbb lret fimull or sub pusha stos inc push rorl fs and les xchg in in in jle lret decb xchg jge xorb lds push stos loope les sub adc sub lods sbb (bad) lods dec mov or sbb dec sbb imul ljmp inc dec mov xchg xlat xor xchg dec test jmp mull xchg sub pop jg push jge repz pop cltd cmpsl js mov and mov cmp cmp inc sbb call sbb (bad) stos push out shrb gs xor mov inc or loop insb inc mov pop paddsb and mov adc mov mov mov loop push (bad) pop xor and es pop mov out insb imull out xor out in jnp,pt pop fildl imul (bad) push or jo in or iret out out iret xchg and popa inc repz xchg (bad) cld stos push xchg sti push test and jp xor dec pop cmp mov push in cmpsb pop es adc sub xor arpl (bad) repz into outsb jl les adc mov push imul rcrb adc in repz cmp mov out or stc jb jb add and dec push sbb das adc sbb jo mov mov ret out jae jnp push xchg dec mov fnstsw adc mov (bad) enter es fwait and or dec in cld sbb cmp adc push xor inc jns add cmp popa test or fisubl push ljmp cmp pop pushf push mov das loope (bad) loopne out sbb in and popf mov sahf fstp mov or push inc and jp inc xor jmp add insb pop mov jns mov (bad) adc mov xchg xor into sub push adc int3 and enter sbb cmpl aam mov jg leave nop lock cmc je daa add dec cmp imul and stos mov mov cltd dec loop sbb xchg pop xor lahf scas mov adc js mov pop mov sbb adc jnp jne fidivr jmp ds in rcrb sahf (bad) repz fiaddl shll fwait les repz outsl mov inc and mov lods enter das jo sub lcall outsb loop push cmp mov pop loopne fbstp fsubs movsl xor cmp stos cltd aas mov stc xchg cli xchg insl or je in add mov adc (bad) cmp jecxz mov sbb pop push dec rolb cmp inc sbb push pushf mov sahf fistl mov ficompl xor loop push fldl sbb mul lods cmp mov (bad) mov das stc xor pop dec mov pop push mov int3 sbb pushf sbb dec mov jo enter sbb jns mov inc xchg fisubl dec outsb imul mov push push mov sbb mov fadds add pusha lahf int3 pushf lods negl and outsb mov arpl sbb jg outsb ficompl in call adc frstor test jge call jns jmp sub out (bad) pop add nop ret cli movsb (bad) hlt jne lods push mov leave ja ljmp dec repnz subb fwait inc orb pop push adc insl in loopne jns and hlt outsb sbb shlb (bad) xlat addr16 into ljmp or lea push dec outsb cwtl daa test sbb cmp sti inc mov test aas arpl rorl in xor dec mov iret jg inc xchg adc test stos and fnop iret cmp xchg lods dec xchg cmpsb mov out adc aas out in add xchg loop sbb pop divl push insb lcall inc cmp or lret cli dec std pmullw dec iret loope pop das nop add insb dec jne cmp sub sahf clc mov jns push aad or jne add (bad) and jno inc repz mov out mov lods adc fs icebp test aaa fidivr sub push lret std dec pop sub mov or repz jp les dec mov enter push test adc lret test into cmp cmp je nop js push pusha es push loope push jecxz lret mov jle or xchg iret aad xchg lds fsubrl leave mov push cmp (bad) cmc scas jle packsswb in dec push in insl xchg jns xchg popf or scas inc jns push fidiv test loope sbb shlb int3 mov pop lahf scas xchg dec sub sbb pop arpl (bad) xchg or inc pusha push enter cmpsl sub (bad) pop pop xchg and and shll wbinvd mov lret into addr16 sahf lods cmp jle aad ds pop mov push rcll mov jnp or inc add jge lods rcr aas cmc pop mov pop out addr16 xchg in fsubrs sub jp iret xor rcrl das out dec dec xor sub sub and bound push in lods test mov mov scas push xchg xor or pop outsb popf push lods mov jb (bad) mov push popf inc cmp lds cltd pop pop (bad) out inc loope adc lock lret jle imul call jmp cmpsb orb sbb repz lock icebp lret jle or jno mov cli lret pop ja out inc test pop (bad) or (bad) dec mov dec ret and xor ds leave imul add ja jnp push js (bad) pop adc and ret dec fstl or pop (bad) in jge sbb mov xchg mov cwtl nop ds fdivs enter outsb inc scas sbb sbb pop fbld dec cld ror cli mov clc ds repnz in out pop rcl pop inc aaa ficomp pop cli and aam xchg cmc repz mov inc lds jge addr16 xor in pusha push cs call or mov (bad) in scas cmp mov ss mov test xchg dec pushf stc mov sub fistpll and jo and and or movsl inc arpl scas xchg push fist inc fcomps push cmpsl or (bad) int3 lods lods dec stc xchg mov and mov shrl out xlat aad push rorb stos adc (bad) (bad) out pop mov xchg jg mov lea mov cmp cli sub jbe movsl rorb cs xchg out out cwtl (bad) je (bad) in xchg lret int pop scas jp jno or sbb pop add xchg rorb fwait push insl adcl fstpt cmp xor add mov repz pop mov std sub rolb jno test jae shrl stc pop lods xor cwtl add hlt adc add xor and sub xchg add jge xchg push push cmp cmp mov xchg cld mov mov add movsl mov jno scas shrl cmpsb adc rcr in jns xor rorl scas data16 xor inc sub dec imul enter leave or shrl sti (bad) inc jg and jmp rcrl (bad) inc movsl hlt cmpsb adc movsb mov lret addr16 inc icebp mov and push mov enter xchg mov xlat cmpsl xlat push push mov cmp add ret lea sbbl sbb sbb stos xor daa shrb jmp and in fwait sbb aas lock repnz or sbb sub push movsb lret sub pop xor test movsb mov pmaddwd ja mov (bad) xor ja lcall call ret mov fnstcw pop pusha jg cmp rcr mov bound push rclb or mov fistpl inc arpl lock sbb cld inc jo mov add mov xor lea or pop cmp pop scas add dec out jl (bad) movsb test xor repz or jb push jle pusha mov pusha sti popa mov pop mov inc stos inc mov xor dec stc fdivp and (bad) mov jl sub cmp pop sti (bad) jmp jmp and dec (bad) jo push cld fwait lds and mov or jns xor adc sbb dec or ret int3 int in jmp mov cmpsb lret imul les xor dec jge mov xor int3 inc out xlat xchg int3 cmp pusha jb subb jns inc mov fs adc adc cmp xchg mov or jo xchg mov insl sbb adc fadds stos jl xchg jns imull add shl (bad) mov sub repnz xchg sbb push loopne xchg dec cmp push imul push or shr scas or mov hlt mov ss sbb pop mov inc test pushf sub xchg cmp inc fdiv mov push push sbbl pop (bad) lahf push fiaddl div xchg push mov clc fxch and adc sub mov adc jmp movsl iret push pop add repnz push xor pop sbb scas and out mov (bad) std and adcb adcb xor adc xchg fmull jnp cmpsb jge xchg xor ljmpw (bad) jg adc pop cmp inc testl dec jl addr16 mov hlt push daa lods inc dec sub repnz xor sub int sbb mov loop cmc xchg cmp add sub mov into dec in rol push mov shlb pop mov sbbl inc ja lret cmpsb adc push push aaa rdpmc enter lods jbe aaa frstor mov fisubl addr16 pop mov pop mov les notb push sahf addr16 pop nop scas test jle movsb lods dec mov xor mov mov cmp dec hlt mov push push pop andb xor mov mov rcll jecxz pop jae aaa inc push adc notb and popa mov imul ljmp (bad) cmp dec movntps xchg add jns gs cmpl aad adc rcll ficomp in add mov cmp outsb xlat loope test loop das cmc dec call add je push test sahf adc and jg js outsl incl pushf insb mov daa pop mov fwait mov test jmp inc ljmp dec in cmp jbe cld fs add je addr16 inc adc push inc cwtl fdivr cmp repnz mov add lods mov xor xchg cmp (bad) sub dec dec in adc das xchg cmp dec fdivl and mov leave sub test mov pop push add sbb and adc cmpsl mov enter jl adc and loope lret xor hlt mov xchg xchg (bad) jbe cmpsl mov or lret popf idiv ds xor fucomp lods (bad) movsl or lcall jo sbb sub xor mov xor fiadd rcrl jl les (bad) cmp adc add mov movsl imul jmp dec jae pop jl subb jnp ss lods push xor sbb mov jmp pusha mov js lds lods add movsb (bad) ret aas loop pop in and push in movsb aaa out fisttp sbb (bad) sahf popf ljmp outsb sub mov out mov inc lcall cmp arpl adc js orl inc test adc ja mov xlat or rolb scas mov push call leave mov mov sub sbb inc adc mov inc loopne cwtl sub fxrstor cmp xorl into lahf dec stos and xchg sbb aam cs dec mov dec sub and or (bad) idivb aaa imul sbb insl sub (bad) mov xor jmp push fs les cmpsb pop in and shll cmp pop call sub inc sti add and out xchg das ja add bound setne in adc lret mov repz sub sbb mov push enter test inc iret lock call rcrb pop pop lcall fsubl push enter add pop fldl je iret xchg insb cmc xchg movsl cmp (bad) inc sub bound stos push push stc fcoms lock aas mov xchg and nop pusha or jg test pushl aam pop dec int mov int imul xor mov daa pop cltd jge sub mov lret cmpsl cmp inc sti xor in nop adc ljmp (bad) sahf mov (bad) fistp push fcmovnu mov je (bad) push rcrb out out adc sbb testb fs pop mov sarl mov mov push je jp lea bound add in stos push lds jge loopne rcll fnstsw imul pusha repnz jo sbb rcrb je mov pop inc idiv adc mov ja movsb inc out xlat sbb addl out push xlat jp test repz mov pop cmp lods and xor int push jno outsl add sub ja and roll sbb mov sub xor popf sub cld push cmp imul sar inc jno je pop sti push mov mov mov lahf and push aam inc jp dec int div or nop dec aas call insb inc mov push mov push pusha int push fwait sbb jo push bound mov popa mov insb cli adc or jle jecxz out out ljmp cwtl jo ret test mulb push cltd mov out xchg ljmp xchg mov lds fildl sub leave xchg dec cmpsl popf push enter sbb xchg int push and int dec sbb popa stos push rolb insl jg fs movsl xor add pushf mov cmp out fidivr into lods xchg pop inc pop int3 cltd adc out aas or rol je xchg mov js push xchg cmp pop push aas clc sbb inc fnsave jo or cmp mov mov push lea mov aad dec and je jo mov outsl inc cmp fmulp lea int and out mov enter test xchg pop (bad) arpl dec ret mov xor xlat cld rorl loope stos mov lret loope rcll and inc (bad) rolb movsb gs andl mov (bad) dec push loope sub cmp int mov add inc dec pushf xchg testl xchg mov orl jae xchg roll jmp loop mov pop jge lds push lea stos jmp cltd (bad) imul cmp fsubr xchg push jo pop iret (bad) push fidivr gs add jmp jbe jp adc push pop mov xor jecxz int3 or add xor push (bad) cmc xchg (bad) jae jmp mov pop cwtl sub push jae push mov fld shlb rcr mov out nop adc aad stos xchg xor mov inc sbb insb movsl mov movsl sarl dec leave ja push insl mov (bad) dec lea push lahf imul cmpsb inc push mov push fidivl ret lea fucom xor ret out and hlt popa jge enter test jns jl sub mov cltd aad mov (bad) mov je mov idivb cmp push out leave sub aaa mov fcmovbe jmp adc pop fsubr jp mov ljmp dec and pop and fsubrl dec imul clc mov mov dec test xlat enter popf xchg int arpl xor sbb add jne xchg cmpl mov mov daa or pusha scas add dec xchg xlat pusha dec pop aam mov mov sbb mov fildll mov jge or in xchg faddp pop in ja adc (bad) test dec cmpsb icebp mov dec jp sar cli out call push inc jle clc and fisubrl mov mov mov repnz and and pop adc loope fmul mov mov rcrb sub fistpll push add shrb (bad) mov inc sub iret mov sub jb iret iret add jmp mov mov rclb xchg add movsl adc aaa in iret mov mov adc mov sbb cltd neg sar fistl sub (bad) push mov leave rcr test call sti insb iret xlat icebp aaa or xlat negl sti stc ficompl jle bound pushf pop ss xchg lods or pushf push incl pop les xchg lods out gs sub adc push mov aaa push (bad) cmp pop repnz out xchg jg fwait outsb rorb sub mov cwtl push sub popa dec sbb inc popa mov pop fwait or loop lret and call cmp ja cs mov cmp fmul jae test adc lcall in lahf ss push mov js fstl and mov mov fmull out sti lret sub push inc cmc ljmp jae roll push push sub cmp (bad) mull inc (bad) ret cvttps2pi std pop xchg fs or call mov (bad) sub ss fcoml test jge inc mov dec int and jle mov mov jmp (bad) fistl dec testb and (bad) pop jb mov outsl lds pop mov sbb call outsl scas fwait insb jnp push and lock sbb loop mov ret (bad) jae rorb mov testl add inc ffree ds push xrelease mov repnz pop cld hlt mov inc bound ss xchg das stc mov xchg movsl lahf faddl cmp inc in sub imul imul push jb xor popf sbb pusha or int3 lcall icebp push pushf mov and pmaxub push mov add adc mov addr16 stc cmc ficoml push fwait push cltd mov cs and stos ss lods sub xchg ljmp lcall xchg scas inc or add cmp in push jno dec cwtl adc xchg das xchg daa mov sahf out adc adc enter lock cs add xchg call fidivr aad sub mov loopne fs inc out xorb mov aam (bad) pusha std notb or (bad) mov cmp jge xchg (bad) sahf jo pop mov jb fstps mov jne inc ret mov inc enter mov daa loop outsl adc sbbl inc loop mov flds inc inc in lea adc orl push ret xor xor and out cli ljmp pop fnstsw (bad) shlb ja pop and aas nop out lcall mov sahf mov push cmp and or push mull bound cld (bad) loopne popf inc xor sbb (bad) cs push adc push sub sahf lods push jns pop xor inc sahf or cs sub lcall rcrb (bad) inc (bad) and mov mov stc sarl shrb arpl push imul test cmp cwtl push jns lea (bad) out scas rorl mov loop aam lahf push push pop and adc scas je add push jecxz loope sub jg lods sbb push nop dec (bad) sbb scas adc jae or cmp outsb sub fidivl push iret aaa dec or inc pop es aam push sub xchg ss cmpsl and ja fbstp inc jo fisttpll xchg bnd fiaddl mov scas xchg xlat outsb lahf jg pop dec jle push push jb jb (bad) ja push imul and fidivl xchg lock sub xchg ror xchg xor ret pop dec lret inc cltd or dec cmp (bad) inc jg inc test jnp push leavew push xchg inc sbb xor pop adc arpl aad popa divb mov mov xchg stc push rorb jmp sub jns jg test ljmp lahf ror add imul cmp or xor adc rcll scas cmp push clc pop movsb aam adc mov mov and je push dec mov add xchg arpl inc adc adc pushf cwtl aaa daa fisubr xor or stos cs or add jae bound xchg aaa jbe xchg xchg lock push pop data16 ret mov mov in aad lods xchg test pop mov repnz das ret fsts jle or add daa repnz pop in mov sub and daa cmpl ljmp pop adc arpl (bad) mov aaa sub cmp movsl scas hlt jp jns test (bad) mov dec sti xchg data16 jne mov pushf out inc sub mov bound pop add ljmp jnp mov je in pop sub insb sbb sbb push arpl mov call (bad) sub (bad) jno mov mov ficomp or outsb in loope mov sub xchg sbb test sub mov out sarl in adc add cmp addr16 mov sbb mov aam cmp dec mov lea movsb cmp pop jge fwait and insb and movb lcall xchg das cmpsb mov cld xor cwtl adc dec mov call push pop idivl mov lock sub mov in and pop and lret xchg lret pop cmpsb aaa nop adc data16 pop incl push (bad) cmpsl cwtl xor (bad) push out sub push inc int3 sub sub stc xor sti mov in mov xchg xchg add jmp insb fcomip imul and outsl icebp (bad) mov or (bad) ror pusha test push int movsl dec inc out pop jmp mov iret test sub test xchg pop ljmp push out jae sbb in cmp insb ret sarb xor jmp lret jb lahf mov sbb (bad) popf mov adcl (bad) mov xor aaa les dec nop and push jns mov rclb xor out jle sub ja add pushf adc popf inc ljmp fisubl push lret (bad) ret test jae mov fst mov sbbl xchg or lret movsb mov or movsb add xor into insl sub mov fmull nop imul push sbb sar adc icebp mov mov xorps and repnz xchg mov sub jmp jb push sbb mov mov fidivl mov in and add stos mov cmp out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg jg sar outsb mov inc out add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add js add add or or add or add add add pop or add add mull add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add cmp push js in (bad) add or mov mov arpl mov (bad) insl (bad) add or aaa mov sldt mov sbb or sub (bad) sbb insb lds mov jo inc inc std pop cmp push mov (bad) mov cmp (bad) mulb lret lcall shr loop decb cmp rcll jmp clc cmc fcmovnbe hlt rolb cs loope aaa push or inc push mov aas lcall jecxz mov ret add ret jg push cmp insl push outsl popf fidivl mov dec stos add and cmc (bad) xor fisub jo push icebp sahf psubb or out stos scas sbb add call repz lock dec add push mov add sahf push fs pusha cmp ret out in add and add outsb pop add mov imull movsl push mov push stos (bad) dec insl and lods (bad) cmp push into xchg mov fiadd outsb sahf inc cmc xchg sub popa and lcall dec jns inc add cli adc push or xor jle cmc inc xchg adc (bad) test xorl adc shrl adc sahf xchg cmp jp inc lods sub in xchg or jmp (bad) in lahf inc ss loop pushf and bound push dec sarl pop adc int3 popa mov sarl (bad) mov cmp test and or xchg mov mov mov jbe hlt mov cmc and insl push jp pop sub cmp xchg sub mov sarl rorl jg ja inc iret loop cwtl add pop adc dec cmp mov aas into loopne xor outsl dec sub out push rcr testb cli pop sbb xchg loope mov lret ss addr16 ja or cmpsb mov sahf lret jbe add aaa sbb data16 xchg ror sbb daa enter jns xchg lods out ss add ja mov data16 je mov jb jbe inc andl pop xlat rep pop ds lcall loopne sti push test mov push lock gs jo and stos xchg pop mov mov inc mov fs shll stos (bad) push ret and out sbb mov test mov or inc pop push imul fnstcw in mov lahf leave jl mov add push push push jp sbb inc pop in xchg and and int3 xor ret pop cmp (bad) std cs decb in in test dec fstpt xor sarl js cltd push icebp leave xchg xchg mov sub xchg adc aam dec xor inc xchg repnz aad les mov popa sbb inc dec andb test inc jne shll int idivl and sbb jne aas hlt leave adc xor push add and in leave jp jno ds push in push loop dec cmovle push inc pop cmp movsb inc fcompl cmpsl mov scas xor push test adc xor dec inc pop mov mov imul pop fisub cmc ja js sahf add das push adc mov fildl cmp jg add xchg sub mov push sti out xor and sbbl push inc jae jns push and inc sbb jo repz mov xchg (bad) (bad) lods pop fmuls stos movsl sub shrl repnz push xchg jecxz mov je shlb cmc cwtl xchg push outsl jl xor dec mov jle clc sbb movsb mov (bad) and ja and inc popa cltd pop call mov out js enter clc cmp jge popf mov mov pop (bad) lods (bad) leave cs pop mov out inc xor inc xchg xor jle lahf xchg in mov cli in lock mov add incl test push or xchg mov jl movsb bound popa pop dec (bad) pop add adc test or xor pop fstpl mov addb inc or jnp xor jl leave ja aad cld adc xchg adc lock pop push mov pop push xchg dec int3 jno dec dec ljmp or and das loope push dec lahf fsts pop jg ja (bad) mull insl dec jmp insb xor loope jbe imulb or rcr fs in leave hlt dec dec push pushf out mov bound cltd jl jmp aam push jbe sub arpl xchg repnz insb fisttp mov mov lcall adc xchg cwtl mov inc add stc cmc push (bad) fsubrs (bad) mov fsubp into xchg lea insb adc xor call xchg lods hlt aas or sub out push ds dec ss cli mov inc and xchg sub xacquire sub jae imul mov mov xchg inc adc sub nop or repz inc xchg lcall add jp jp jb mov fs mov push lcall xchg mov mov addr16 (bad) push inc inc out fsubrs lock xchg leave gs push xor es into push in push mov outsl ljmp pop shrb jno rorb inc imul dec ljmp stos loopne xchg cld add imul movl (bad) andl ficom adc jmp data16 push cmp inc (bad) jno jne cmp jnp lock or pop testb insl sbb lahf fisttpll int3 dec jecxz cltd lcall std mov imul movsl xchg iret mov dec rorb adc aad pusha aas or cmp lds or jb lock xchg cld fcompp and push ror ret dec mov xchg or and pop mov enter outsl sar cmp pop add push scas ljmp sbb cli stos loop (bad) in xlat (bad) xor pop fdivp mov jecxz mov std fwait icebp pop push xor push ljmp retw and xchg sbb dec sub idivl mov loop adc lds inc lcall inc jbe les in mov inc (bad) rep cmc orl pop adc mov and ret gs insl push leave xor aam stos (bad) enter mov pop test (bad) mov (bad) outsl mov lock jmp inc mov call lods sub inc nop cltd pushw inc inc xlat sbb push scas dec into xor pop push test inc add out cmp ret lret pop mov fisubrl hlt out sbb mov sub pop je mov xlat add jb jns (bad) and rcll fdiv stc xchg fwait pop rorl aas rcr lahf (bad) and push flds fldl push mov or xchg pop jge push jae sbb fild cmp jne mov push xchg mov jne (bad) or fstpl mov scas cmc movsl jnp cmp mov jb xchg sbb repnz nop jns jle pop inc push cmc icebp add cmp dec mov push ret or aas (bad) xcrypt-ecb cmpsl dec mov (bad) xchg mov pop addl (bad) or jno sub and inc ret sub dec or fwait lock mov or dec icebp sbb xchg xchg dec nop test icebp stos scas js lret mov pop fcomip (bad) xchg hlt icebp ret test mov test or imul addr16 ret repnz pop inc jle xor scas out mov pusha mov and jb rol sub or mov jle (bad) cmp stc sbb xor ret or test lret int3 adc cmpl pop cltd push xchg xchg adc popf adc mov std pop testb pop ljmp aam jno inc (bad) push lahf xchg xor (bad) pop inc rorb dec or add pop rcll or or lock cmp mov sub jbe or ss push mov xchg jae ficom leave inc cmpsl (bad) or adc cmp inc adc out xor in cwtl and cmpsl sahf test int3 outsb xchg mov cmp nop and push cmp lds xor cmp inc call pop jb movsl mov xor bound push scas jae mov mov dec rcrb add dec pop das enter or inc adc lahf jecxz xchg push mov fwait data16 mov (bad) insb scas adc add out fstl call mov leave cmpl add jg ret inc mov mov aas xor push mov gs inc enter mov xor fstl sub xlat addl fcomi mov mov mov and out mov or scas popf repz mov (bad) (bad) xor fildl push idivl mov push pop mov mov dec xor add mov pop cld pop test xchg sub leave (bad) or iret mov add jl test mov pop adcl mov je out sub lods hlt rorb jb leave inc loopne pushl adc jns mov mov test mov stc mov adc xchg test lds xchg movsl js sub lods clc push lret stos repz mov sbb lahf fcmovne xchg cmp pop insl fistl add jno inc aad jle scas outsb jbe aas mov sub xlat jmp mov imul pushf pusha inc imul js (bad) push xchg in or xor jecxz jae mov ror aad stc xchg lods insl and ds adc sbb add aad or mull jno loopne inc call inc mov add sub lret mov add cmpsb or hlt push fs stos sahf push add add xchg std addr16 push cmpsl icebp popf xor imul loopne xchg test scas inc mov imul pusha cmp (bad) ljmp lods add jl pop pop icebp mov outsb inc (bad) roll mov fdivrl cli xor xchg mov pop loope push andl jne sbb fwait jl stos sahf cwtl or adc and (bad) push int3 push andb push push insl cli repz (bad) imul cltd insl arpl (bad) cmpsl loopne inc push push scas int3 notl jne push jo mov add mov xchg mov inc jne inc icebp push xor mov loop popa andl test movsb out mov mov cmp lret sub cmp or out lods mov jmp ret inc adc lahf arpl js inc sbb imul call inc xchg lds adc mov add idivl mov adc cwtl pop lcall ss mov stos and jmp mov leave ds repz sti add ficoml pop dec mov call xorl and js fisttp fs notb cwtl ss xchg push es hlt pop or (bad) push dec fidivl loop inc mov out div mov add ret push push pop jno add mov iret cmp int3 adc ficom es stc outsb ret pop xlat jo movsl jne outsl add cmc out and mov cmp out push lds ja dec lahf inc mov js xchg out lods mov pop mov pop inc (bad) dec pop lcall xchg ret inc sbb mov movsb jp dec (bad) sub dec push xchg pusha mov lcall and out repnz jb sarl lods fucom scas fs loopne imul sbb pop outsl mov cli cmp lods stc imul loop inc push mov sbb add (bad) or xchg cmp imul mov (bad) (bad) jmp rorl es outsl mov fist cmp jmp loop lcall pop add rorl int3 (bad) push mov loope push cwtl and jne flds std sub inc jo adc es or fist pop das pop dec cmp pop divl xor add xchg mov adc jle inc mov sub mov sbb mov fs into push dec in addl xor aas in mov icebp std dec adc scas and cvtps2pi (bad) ja lahf sub mov leave pushf pop cmp addl repnz sub pop call dec inc aas (bad) aas push xchg mov mov test sbb ret test dec xchg adc aas jbe fbstp add (bad) pop adc (bad) int3 jns xor xchg pop and push int sub je mov cmpsl aad sbb pop out arpl xchg aam push pop or leave stos out mov mov or inc or cli in in imul or adc addr16 add test lea (bad) jp dec into aad sbb js icebp fnstcw test loopne insb push and (bad) or shrl mov sub xor jg mov (bad) cmc aas and jo les sbb hlt inc stos pushf hlt jo inc push jne ds add cs in push jl mov dec addr16 adc test (bad) fcomps out rcrb mov movhlps xor sub mov ja in jno or cmp ja insl jo leave mov sbb and leave xor jbe push add xchg int3 sub mov push repz sbb and fdiv jns icebp push daa or std pop adc add sbb jbe sub out andl into fisubrl or push add push inc (bad) in mov mov mov dec mov test and xchg or mov data16 jge popf pusha rcll jnp out xor mov std pop pop int fstl ja mov cmp lods test sbb pop imul add jbe out popf cltd add and mov inc aaa sbb loop mov inc scas lds push fwait test xlat add and out lods pusha and jmp inc cmp inc incl push xchg push mov jg inc fiaddl jo inc cmp stos subb mov mov lods and in int3 push sti sbb stos imul (bad) mov xchg fcmove in ljmp adc test in mov add cmp xor fcmovnu sub jp hlt popf test ds loope aad loope es xlat adc pop dec movaps ja mul scas adc jb fwait dec and jl rorl iret mov jge xchg fldt rclb inc roll ljmp dec mov testb dec movsl into addr16 inc cmp rcrb jle jmp ss xchg xor loopne xor xor daa sub fstl pusha ja stos ret scas add lahf call add sub fdivr andl arpl xor jbe push idivl aas popa (bad) ljmp inc ljmp inc iret sbb int cmpsl mov jno scas outsb or hlt std fs sahf dec insb cmpb (bad) xchg fnstenv negl xor pushf shrb push sub sbb add pusha xchg aas add sbb jl ljmp xor es mov mov cli test in push in shlb les movsb dec out lea lret out loop test inc sub cmp scas and iret mov sub incb xchg lods jecxz test out fcomi or mov loop call fnop cmp jmp mov scas push inc loopne rorb dec enter jp (bad) cwtl cmp cmp pop leave jge pop mov shrb das mov mov inc cmpsl dec mov pop sbb dec jb xor adc inc or sub ja loope sbb lock pop (bad) push xchg rcll outsb movsb dec enter out fwait arpl or sbb jle (bad) mov ds mov ljmp jecxz jmp xchg lcall jns movsl fucomi xchg popf push xlat (bad) pop rcrb cltd and pop clc sub xchg push or lods pusha (bad) out clc maxps jns lds fincstp (bad) rcrb push inc imul jmp mov mov xchg outsl out pop push mov push add lock cmp scas scas adc sbb dec jnp sub or jo (bad) and xchg or pop xlat sbb pop pop mov hlt pop sbb out jmp xlat addl push jmp std inc and lds test jp stos (bad) jmp bound mov fsubrs data16 xchg xchg and mov enter push push push push pop mov fsubrs insl mov add and repnz push or dec pop stc jo inc push sbb xor mov xor adc pop cli scas cmpsb hlt jp sub push jge into lahf fist cmpsl sub push mov sub xchg mov pop cwtl insb ljmp cmp ficoml ljmp (bad) adc or sti xchg sbb inc adc fimull dec xor (bad) cmpsl cmp sti dec or dec jo ja imul push xor addr16 daa adc out pop das dec (bad) je mov push mov mov dec subl gs orl inc jno lods lret or pop out jns ror add sbb fcmove int3 icebp jnp sub sbb nop push xor std add in in xchg pop push ret xor push adc xchg mov or out loope add int insl xchg adc mov xor mov jae xchg fldenv out push adc out or and aam daa push mov mov daa insl cmp aad or ds ljmp imul cmp inc fs (bad) push in xor scas dec push mov mov cmp arpl jb jnp repz jmp cmc in mov dec lret xchg inc (bad) roll xchg (bad) mov jo xchg cmpsb (bad) xor sub mov int je das mov xor or sbb test pop sbb out lret pop and out pop push fistpll loope enter add inc (bad) pop ja xor mov add cmp dec (bad) pop sbb and inc mov pusha lods testb adc test cmp inc out mov repnz pop xor cmp lcall iret daa in inc sub and loope and push (bad) ret test xor loop xchg mov out mov int mov xchg jmp fistl out cs and sub xor test cs ja test fldcw and and jmp pop fdivrl data16 repz mull and mov and adcl outsb mov lods jge adc sarl jl repz pop das jb xchg fmull sub jge (bad) jecxz inc xchg add js test ja out out orl mov clc mov (bad) hlt sarl adc mov shlb movsl lret sbb pop add jl mov cmpsl gs xchg cmp jge rol test and mov mov aaa jecxz or fs (bad) cmp push xor fidiv sbb sub jg repz xor dec rcl mov mov ret aam enter inc (bad) hlt mov push cmp sub push mov fstl aad aam sub sub push mov repz mov outsl jae mov and nop mov scas popf frstor sbb adc push jbe imul or and aad adc loop adc sub jle pop mov push pmullw cmp and arpl mov adc xchg and ss pop movsl sbb mov shll popf or and add in pop inc int3 cli jge jbe push out dec fcom out aas inc push cwtl sub sbb mov xchg jp inc and jle std jnp fdiv xchg jg enterw fsubl xor stos mov or out repnz lcall push xor (bad) int3 scas daa in jnp jns jbe mov fsubp out mov mov lret jne (bad) add inc ficomp push add pusha sub clc or nop bound fnstsw cmp outsb jno xor lret (bad) stc jecxz xor (bad) push and xor loopne or push xchg mov and iret cmp xor ljmp ret jle mov bound outsb icebp fmull mov (bad) popa incb mull out pop addr16 xchg daa aaa rorb dec mov neg sbb xor outsb in das xchg mov icebp and cmp push es sub pop or cli loopne sahf js inc mov dec inc aam movsl pop cli das adc das adc jne aad add jl fisubr popa jne mov adcl push fs dec pop pop push pop xacquire bound out nop sbb int and push fwait in call mov call inc xchg push scas sbb inc (bad) mov xor (bad) fsub lcall pop insb daa loopne mov in ss pop mov pop pop in stc nop sub stos das jle jnp lret lock add and push out mov adc rcrl cmp xchg xlat out mov mov sbb test mov mov jmp enter inc aam adc stos jae fwait int3 push mov cmp adc adc inc jmp push sbb mov mov test push mov fs lods or inc jmp sti inc rclb fs push outsb push cmp and jae movl xchg push xor pop or imul xor arpl and test cmp lret jae int lods and cmpsl or cmp fldenv jp push mov and pop pop mov stc lcall cld scas in rolb and mov and iret dec mov pop stos int3 xchg das dec inc jp dec repnz leave xor pop and bound adc inc pop lret inc jno shrl xor lret pop adc adc fwait adc nop rclb and out mov fsubs dec cmp xor stos mov jmp lea lock inc push mov cmp adc (bad) hlt loope mov or sub mov and add and out xor mov or mov fist cli pop mov or sbb push jle sub sbb push (bad) (bad) movsl sub stos repnz lods xchg push lods (bad) dec jmp dec cmp scas test sbb stos cltd xchg shlb or mov dec sub lock out mov aaa cmp test cli (bad) jne rorl jne mov leave mov cmpsb mov xchg (bad) les out (bad) jo into mov rcl adc mov testb push sbb add add and cltd cs ret test add sbbl fstpl adcl dec js push ljmp pop loopne pop (bad) push retw cli enter mov mov add mov sbb cmp add stc or rclb jmp inc idivl cmp das dec sbb lea leave inc cmp add or dec cld mov push bound or bound scas insl mov mov int xor ds shlb jg loope adc inc cmp mov add push inc test jg pusha inc add insl dec int3 mov rcrl les pop getsec jl ret mov jecxz xor in sbb mov mov push leave push (bad) mov out aas add mov icebp sbb repnz data16 or sahf mov pushf jae or xchg push and repz iret cmp cltd xlat fwait lahf pop adc push mov mull les lcall mov mov cmp outsl and loope add jle lretw dec mov fsubs fisttpl shll xchg add enter mov popl stc push into (bad) sbb es (bad) push testl mov addr16 andl loop loopne leave popl mov sub mov xor push test hlt imul repnz fistl ja mov pop stos push subb mov inc xor sub pop bound aaa mov daa (bad) je or and jle inc cmp sahf jae lods lods inc mov jmp int3 fidivl aam jns ret add mov sub adc mov repnz xchg add iret cmp mov dec ficomp ja sub mov das (bad) mov push pop bswap sub xor scas cmp mov insb adc push push cmp sub in lods sbb scas ret inc into ljmp addl jns and (bad) and and pop cmp add mov pop mov jp xchg addr16 pop cmp xchg pop dec jmp mov test (bad) or lcall xor (bad) es addr16 (bad) out sbb es pop push sarb bound cmc movsb pop mov push or pop jecxz rcrl scas jg movsl mov push pop (bad) cmp mov and aaa sbb dec lret push in stc das mov repz push jnp (bad) sbb in cmp pop aaa adc xorl lods and das scas aad and lahf xchg ss into inc fsts fdivrs push (bad) dec jbe dec add sub xchg scas loopne sbb outsb xlat fsubrl int dec jmp jmp insl or xor pop pop dec aad out jb ficomp jg and jbe ds popa es jnp add xlat sub xor sbb int3 lods mov or push std arpl or in nop mov sti fidiv ret fisub (bad) mov lods push inc jmp cwtl jno pop adc mov cmp jne cltd je gs std mov enter scas aas dec jbe add adc out ja leave sahf sbb add ljmp push clc inc jno fisubl (bad) mov cmc and sub scas data16 shl jo xchg out dec jmp xor inc xor xchg inc jo outsl mov cld leave mov shl data16 mulb mov xor or add sub lds fidivl xor and mov popa adc sub dec xor lahf out (bad) es bound xor cli and ret xor inc add lret mov mov out movsb cmp insl cmp outsb dec ret adc (bad) mov xchg mov xor xor scas movsl mov lret outsl mov repz pop push aas pusha fdivr adc not pushf scas icebp or pop xchg mov add rolb (bad) cmpsb xchg dec mov cmp jo stos xor xchg enter sub xchg push cmpsl cmp jecxz add mov ss pop add add fsts jge and pop push fidiv sbb scas push std mov mov clc fstpt cmpsb cmp lea mov addl xchg ret std in cmp inc cmp pop fbld add clc fildll push jl loopne dec inc dec outsb insl jno addr16 hlt mov xchg out js sbb loop gs adc cs test (bad) cld jne stos fst mov testb in outsb repnz jbe mov jb bound mov pop (bad) aaa push cmp pop in push movsb sbb into jae and test push iret mov test mov add mov in jo faddl lods in les iret movsl and push test cmp push and out iret xchg int3 jl scas mov mov xor cltd xor roll or scas sub dec push (bad) out lods fsubs test repz push cli adc jl mov inc cli fistp sahf mov pushf mov pop cmpsl jl and xor push mov out adc pop mov test repz mov inc sub xchg or js,pn cmp test jp lock sahf (bad) fidivr call mov scas sub test xor add rol add mov inc dec pop add xchg les pop lods xor cmp pop inc lods mov sbb (bad) pop cmp int stos pop ret icebp (bad) jecxz cmp mov pop cmp dec std lahf out sbb dec popa fadds (bad) cmpsb dec pushf jnp mov call scas inc nop adc inc inc sbb int mov sbb lret push cmp insb ss push push lret pop frstor xchg push inc cmp jo std pop addr16 dec in fmull sub daa movb cmp testb jo leave stos pushf jnp test js mov xor arpl lds inc cmp addb sti (bad) fiadd scas mov test lahf cwtl jae xchg and sbb loopne es iret fstpt pop movl xor dec xor dec in std push out lcall (bad) cmp add das jmp je or xor js xor jl ret mov adc xor ret push inc xchg int xchg ja sarl outsb inc push xlat call inc adc fmulp dec and xor pop fcmovnb scas imul xchg fs les les ja pushf jge inc fisttpll stos fcom jne mov sub lock inc imul shlb cld push jne mov jae leave mov aaa pop ficom sub out imul and push or jae xchg xchg icebp add loope clc test cmc out dec mov cli cmc test nop push adc mov in mov inc out test cmp mov push iret and cltd mov mov cld test lret sub outsl or pop mov mov and lahf inc and pop (bad) (bad) push pop lret test xchg iret and and adc nop stos je gs sarb sub push hlt cmp jae jmp mov fnstenv cwtl aam nop cmp and mov ds jno stc hlt ss xchg jl outsb sbb in inc sub dec cli mov mov or jae es out jp shrb pop and arpl fwait movsl lods jmp sarl pop daa and lods lods pop aaa add jo push scas fwait push lret outsl jecxz enter sub inc or arpl xchg inc xchg sbb out into pop xorl mov adc push xchg loope cmp ret cmp enter cmp and aaa (bad) fidivrl mov arpl mov insb daa dec adc xor xchg push cmp outsl je incl xchg sti lret pop inc or out loop enter push lret addr16 or rcrb dec pop (bad) sbb sbb test cli inc xor out test pop inc setp ss mov leave sbb push movsb jecxz push fcompl lret jo inc daa sub adc repnz or in popf pop mov pop and sbb icebp add xrelease icebp sbb outsl or add inc cmc sub outsl pushf inc dec lea icebp sub mov hlt adc sbb xor jg xor repz sbb out xlat fdivrs cmpsl mov arpl (bad) fdivrl das sub mov mov xor or or mov pop lods sbb outsb pop sbb mov lret jno (bad) (bad) mov push notb pop int3 in (bad) mov hlt sub cmp mov push iret imul mov mov mov ds pusha cmp addb insb in push fwait sbb popf lcall push sub int std pushf scas mov (bad) fwait cli cwtl hlt pushf or popf dec jae mov cmp (bad) shrl jge pop inc ficoml inc divb orb (bad) dec les mov mov scas jnp jbe shll push fs (bad) fimull mov add (bad) mov adc in jbe mov or push mov in push (bad) outsb or xor jmp push fildll les ja lcall xor inc mov sbb dec mov call xchg inc out push stos rclb mov daa stos mov mov cmp shr je push out fisttp lea sbb or jmp aam mov (bad) push mov push cmpsl lods push sub jne stos scas repnz and or js jle inc or push and out dec iret rcr cmp sti insb and inc adc (bad) sub out xchg dec pushf mov jbe sahf stc out mov push jle in gs bound jg mov cs mov js repz repz pop mov xchg fcomps sub loop add arpl xlat sub ret xchg or lahf fisttpl cmp imul jo sbb in std into into push testb inc inc xchg loop add or and xlat or cmpsl and loop sub xor push jnp rclb pop push push inc imul arpl std xor add imul inc jl mov lahf cmp fs sahf (bad) jnp xor fnstsw (bad) fildl dec jmp mov (bad) sub cltd loope rcrb and mov push std sbb push aas shrl sar cli and (bad) (bad) (bad) xor int pop and (bad) xor add lods (bad) imul cmp mov sbb jecxz into cmpsl popa jge pop xor ret dec cli in mov jbe mov mov cwtl cmc lock mov xor dec and aad jecxz outsb movsb movsb mov test andl cmp push lea and adc xchg push cmp (bad) xlat bound lea jle test out push sar fstl push mov mov call fsubl stos mov (bad) dec pop adc sbb inc push xlat cs mov mov add add and jge sbb sub insb (bad) sbb cltd dec pop out sub clc loop lods imul pop sub lock xor mov xlat adc or mov fs xchg xchg xlat loopne test enter mov mov push (bad) sbb pop inc int int3 dec push adc movsl push inc outsb xorl xchg stos lock pop mov cmp sahf ror push push inc data16 (bad) mov sbb clc fwait mov mov repz (bad) roll mov cmp ljmp mov pusha or cwtl cmp scas jns incb xor aad push mov cmp dec scas inc push push imul je jne jo push pop lods dec hlt sub insb add rcrb sbb loopne arpl mov cltd sub mov bound data16 addl dec cmp and and pop ret mov or sbb and jg mov add mov dec xchg pop aam andb cmp mov lret add sub dec jns adc inc or add dec dec mov mov or push test test ret add xchg rcll inc xor (bad) push ficoml pop (bad) sti pusha and aam jmp in fcmovbe (bad) outsl dec call and aas jl cs ds mov pop sub xor push xrelease adc int xor shr fs jo shl rcr popf dec lcall cmp in xchg dec jecxz mov xor std jge push imul mov xor outsb (bad) dec loop lret or push into es lahf pop test (bad) sti sub xchg lock mov pop enter jns adc into or imul push mov push sub dec lock or mov rclb stc sub lahf xor inc mov icebp jge pushf sub cmp andl popa add jno call jno sub sarl in mov and sub rcrb faddp aam clc mov ljmp (bad) jnp mov addr16 cmp mov rclb mov sbb dec sahf lahf add cmp rcll fmuls sbb and jg les sbb iret jnp (bad) pop mov or dec (bad) ss mov pop add daa popa xorl out jne jp mov cwtl lret aaa dec sub cmc fucomi xchg push push (bad) (bad) in inc sbb cmp push or icebp stos push negl outsb test in mov xor fwait xchg test bound mov insl (bad) or out push or push movsl jae mov dec js sbb cmp stos adc hlt mov mov adc sbb push shrb cmpsb push push fs ja stc mov xchg fld xchg dec jge jae inc mov pop xor imul and fistl jae popf or (bad) push outsl sub push and fcomps lcall sahf shr enter sub jnp jmp jo push ja inc and jmp clc das cmpsb (bad) adc popa inc push outsb ja push mov xlat or jge orb shl movsb cs icebp and xchg mov imul or (bad) pop push cwtl pop dec fldl enter mov leave (bad) sti je dec repnz adc aam in adc mov or push jae sbb aam push daa (bad) lcall sbb push and test xor rorl xor jb and adc dec mov jge dec cmp addr16 cmp scas adc cmp mov push jb cld mov ret shr mov jae in add mov (bad) ror lret xchg lock push cmp scas mov outsl xchg jl push jecxz call out loope mov iret sbb adc imul inc jne jae adc test sbb adc mov stos push xchg inc mov adc inc pop mov mov je sub shrb jecxz aam clc fdivrp pop pop ljmp mov xchg popa movsl mov nop leave das mov sbb mov bnd movsl data16 push in cmp cmp (bad) cmp or adc cmp xchg sub int lcall lods or loope leave adc pop push dec pop mov sbb mov fcmovnu pop adc sbb loop aad imul pop mov out mov jae xlat lods and adc mov js cmpsl dec pop cmp push lea setae inc jb scas test lds sti xor ljmp add xchg int3 shll mov out aas call aas sub inc push cwtl gs test pusha xchg dec lock hlt cmpsl jle addl dec sahf inc fbstp outsb into lret sbb je movsb movsl push mov jg subl in sti or jl ret dec ljmp cmpsb and mov leave insl aas frstor std mov stos pop jmp std popf cli (bad) jne (bad) mov sbb aas dec adc and les add fdiv cmp pop sbb inc inc pop cli insb inc jae and arpl daa sub (bad) rcll xor (bad) push idivb mov push subl pop cmp add das add inc jnp add jp pop ficoml sbb cmp jl ljmp fmuls int or xchg lock xorl cli lea cwtl sub icebp out jle sbb or push cmp andb into fstpl stc push mov stos cmp (bad) incl popa mov in shr pop sbb popf lahf cmp xchg lcall hlt jae scas dec js bts addr16 into jle pop js sarb sub mov ficoml aas fwait out jmp shlb (bad) cmp outsl mov and je add add dec push dec das (bad) enter xchg (bad) fisttpll dec xor lahf xchg cmpsb jbe jno ret lret mov in mov mov dec or push xchg cmpsl sbb adc into into adc stos mov push sub sti jne push imul fsts fdivs fs cmp hlt jns cmpsb jne aad mov hlt loopew int sub gs dec aam xor xchg fcompl fwait or dec jno dec adc dec mov pop adc sar mov mov sahf fildll rcl daa leave rorb and sub mov mov mov or (bad) push and retw imul or jns inc ficompl mov rclb and in cmp lea in and ss shrb sahf jo pop jmp dec mov fstp in mov xlat lret sti xor ds jmp scas xchg sub (bad) mov scas cmp rcr jp dec addl cld out jl fs cwtl pop cmp mov addr16 aam xor pop cli cmpsl test inc inc inc int3 dec (bad) mov loope dec xchg dec jle ds inc xor inc lock xchg insl rcrb stos xchg (bad) les lcall shrb mov mov imul inc out stc call arpl jae vmovups adc cmovno das dec test scas cmp cmp jmp fsubs std push xchg inc (bad) popa xor aas lcall pop push dec pop mov leave mov adc lock pop push (bad) mov jg inc fcoml xchg ret ret jl in call ss mov dec xchg add fs fstpt imul jle pop adc and add cltd and cs call jno mov in scas xor mov xchg lods test sub bound flds push pop dec xor inc lods add aam inc stos imul add xor jb adc jnp ss sub mov xor mov mov cwtl jno scas loopne,pn test cmpsl mov cmp sbbb cld push pop repz and ret cmp gs (bad) mov loop jns insl xlat sub xchg add popa jmp inc cld cmp je xchg incl and mov cld ds lods and jmp ds popf incb testb jns outsb sub and insl or aad int3 fxch jg push mov mov pop fwait (bad) push xor sub inc mov xchg mov and repnz (bad) jno (bad) lods lds out (bad) popa mov push iret inc inc xor dec mov inc imul cld xor push adc xchg sub dec push into mov ret adc fcomps loop (bad) dec aad mov sbb add ljmp adc jb loopne test xchg (bad) push push jb mov mov jb cmpsb ljmp mov outsb nop inc adc pop push sub or mov and xor mov fcmovu fidivl mov ss mov mov mov and push mov lds pop fwait decl ret and add fistpl or jns iret or sarb scas jno (bad) inc jb xchg xchg jmp orb push adc dec das xchg xchg ss cmp je sbb jmp stos aaa movsb jae dec ss aam (bad) inc (bad) sub pop xor (bad) mov fstps sbb cmp push pushf and mov push clc mov cmp adc xor mov mov leave cmp adc into push and movb jmp push mov lcall sub pop dec inc int3 lahf pop das mov and cli imul fidivrl push out pop subb xor das clc (bad) les hlt loop insb sbb cld je iret lods out mov hlt fimul mov ds and xchg lea jno or scas and dec movsb jns pop insl test fcmovnbe cmp (bad) popf dec pop shrl sbb aad data16 sti push hlt popf push pop push mov loope sbb mov ljmp mov pushf dec mov mov aas (bad) xor lret ror and dec jnp and call ja scas stos jp or mov sbb sub dec ficom dec (bad) mov xchg out pop pop adc scas rcll int xor jg pop xchg sbbl xchg mov jecxz inc mov cld shlb sub pop jmp inc dec xorl fisubr es push dec mov loop aas lock xchg stos aad mov adc inc lock cmp mov mov mov or ret sti jo jg xchg in notl mov mov bound jp inc adc mov xchg in mov jg popa leave fstpt xchg jns mov call int inc mov out mov mov loope mov xchg add (bad) fsubrp cmp leave cmp add out jb dec cmp (bad) rcrb push scas lds das dec dec ja xchg stos pop dec jns loopne into in into mov mov ret mov cmp popf cmc dec add js push pop dec mov xchg ljmp or out out jo stos cmp (bad) shl jbe cmc add cmp push sbb jg push ret mov sahf adc cld add out mov pop adc pushf int fcoms push stos daa pop lods sub mov pop inc pop fnstcw nop sub repnz aam test sarl (bad) hlt xchg and sub (bad) loope xchg jo fiadd dec cltd dec lret mov cli adc cmp push jmp int les push ja dec lret fistpll inc cmp mov xchg das scas ds cmp mov pop cli or daa hlt sub movsb jb pop ss adc icebp aaa push je or rolb nop mov js stos arpl push clc lcall push in sub mov push sub cmp mov push dec sar mov adc test jo std or mov or push ficom jnp repz inc shll xchg add fstps pop cmc aad or lea pop jge mov add in dec imul cli inc fiadd cs mov out shrb aam lret adc stos xchg xchg add inc enter aas (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz lcall add jg cmpsb dec pop or mov add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add jp add add or or add or add add add pop or add add mull add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add cmp push js in xlat add rcrb mov insb (bad) (bad) cld or inc inc inc add cmp add and add repnz dec scas fnstsw mov xchg xchg jecxz (bad) mov sbb cmp inc mov mov sub add movsb mov xchg mov mov test nop lcall jb,pn and mov adc into (bad) js or mov push mov popa mov popa (bad) sarl add pop mov fwait cmp (bad) std aam movsb cmp mov or ja mov loope cmp xchg mov cli xchg xor mov (bad) jb das mov lods lock dec ret and fdivp outsl pop sahf mov fsubl (bad) mov add dec sub push push push into stos lret xchg (bad) pop inc in mov sub std clc xchg repnz and cs add fwait test push jmp fnsave adc xchg sbb sub xlat inc roll (bad) jb fwait imul lret out mov mov cmp lea and pop xchg inc inc repz sub (bad) ja xchg cld loope xlat pop test cltd xor inc stc std xchg push sbb mov loope jl loope sbb mov and and mov dec stos jge adc dec (bad) push out nop je pop popf mov cmp jae mov and insl mov sbb pop sub pop mov cmpsb addr16 out inc iret movsb jl nop cmpsl mov xchg imul push inc vmread movsw mov sbb jmp or addr16 call dec inc dec sbb inc jecxz dec daa sbb jp or pushf pop cmpsl add jecxz mov push sub push (bad) repz fidivr push ja pusha mov dec cli mov aam (bad) jne shrb push outsb fisttpll mov mov stos xchg fnstcw mov test nopl xor xchg (bad) data16 xchg jl inc (bad) int3 add mov ds lret xchg sub into movsb stos sbb (bad) repnz (bad) sub xchg dec mov imul xor xor repz jne outsl dec pop call push adc (bad) std ret jae hlt (bad) cwtl mov push daa mov daa in mov mov (bad) sbb ljmp sub sub es outsl fcomps mov es movsl popa (bad) xor and inc lds dec ds clc clc (bad) repz sti pop push mov jae movsb add mov das fwait and mov mov dec addl inc aam add and add push ret mov pop cmc xor lahf sbb cmp push fisttpll rclb adc stos push inc sbb inc lahf cmp loope test ja insb jmp (bad) xor xor cmpsl xchg xor movsb sar lock gs pop dec jmp push or mov jp inc cld loopne cmpsl aas fs dec popa xchg fsubrs add (bad) arpl gs or sub mov mov sub inc cli inc or cmp push ss xor xchg js cmc mov or insb gs addr16 mov ja mov out jg (bad) movsb pop int push inc iret jb inc fs jnp subl push idiv repz xchg fs adc mov fdivrl cmp repnz sarl dec jb jbe and pop in sbb adc mov out pop lcall stos sti and pop sub jb ljmp jmp lods xor pushf scas sbb and jb or outsl mov xchg cmpsb dec mov push mov rorl sub pushf arpl inc mov xor rol rolb mov xlat and jbe mov xchg insb mov pop insb pushl xorb jns imul fisubrl movsb cmp fistl aam fsubrs sbb sub add hlt xchg test int mov sub push in inc or push dec (bad) push ja arpl out lahf xor xchg rcrl jns fldenv inc daa les jns (bad) pop imul and sbb xor sbb leave and jge add (bad) (bad) mov mov cmp rcrl xor enter adc imul lods or adc stos testb cmpsb pop and pop pusha xchg inc out fcomp pop xor pusha jno,pn aad jns fwait and xchg add (bad) (bad) mov sub adc test xchg les push xor jb xchg mov out mov insb xlat lahf jo adc adc dec ds lods mov into pop add cmpsl out or mov cmc sbb div (bad) sbb cmp stos xor cmp xor jg xchg scas mov mov xchg xlat push mov fwait xlat push push inc mov and sbb mov mov push xchg and lods scas ljmp test clc cmpsb dec mov cmp mov and std jp dec mov mov add sahf adc stos int3 je mov call inc out mov dec inc (bad) xlat aad or cwtl jbe add jns ficoml push pop sbb adc xor and pusha cmpsl imul loopne inc jmp pop pop test adc jge jl push cltd jo jmp cmp ds fs or fimull mov mov lea aas xor in mov mov push pop mov out repz push and xchg hlt cltd pushf cwtl out js fsts gs jecxz clc es outsb mov pop pop add xchg jno pop and or or test jge mov js mov xor (bad) ljmp jle xlat cmpsb adc add das gs lea sub dec mov push shl mov jecxz movsb int xchg stos add jb cmp and (bad) loopne std xchg cs jp inc xor jbe add ret shll arpl ror sti jnp out add and rcll neg dec mov push nop out (bad) test gs scas dec inc leave or adc mov hlt dec mov jecxz aaa mov jle sub (bad) daa lods faddl cltd insl mov xor fidiv (bad) xor subl jno mov dec insl jno into daa fmuls (bad) dec xchg jne movsb psubusb sub shrb ficom inc sar in xlat cmp cmp pushf test (bad) pop repnz jle test clc aas cmpsb ja adc lods adc and loopne mov in lods jp int cmp cmp cmp aad (bad) jne adc add pop jp test movsb aad push add les sahf mov ljmp jo addl mov int lods addr16 cmc pusha test lds cltd clc xchg into pop xlat test and jne stos les mov addl stos pop add mov mov or js data16 js mov xchg push std jae lahf mov sub jp (bad) outsl inc mov mov lret imul leave mov push cmp fst outsb or pop jle xlat fs lret pop or mov push cmp js add or xchg and insb push arpl out xor jle mov popf pop addr16 dec lret xchg test pop sub adc mov repnz cmpsl leave add sub mov pop push cld pop adc sbb push loop jns sub loope int xorl jae pop add push or cwtl push sbbb and sbb cltd repz aas fnstsw int3 jle mov jnp pop mov dec mov (bad) or jbe adc push enter inc js imul mov cmp inc push shr insb dec cmp mov shrb sub aad push inc cmp gs jmp fcompl mov xchg data16 pop fstl sbb dec adc pop xchg (bad) push xor ret and testb into in insb pop test in cltd popf pop outsl lods inc cmpsl repz sub arpl hlt js fwait int in or and clc pushf idivl aad stos (bad) push jne xor sub pusha xchg sarb sub cltd jb ljmp addr16 lahf test les (bad) (bad) stos je ljmp and dec pop mov in into negl xor rcll repz inc adc xor push xor push dec xchg pop lds cld add mov and push pop popa mov int jmp gs std xchg aas daa xchg and (bad) fcoms inc and push mov es (bad) jmp into add mov add push sub lock daa orb jnp insb xchg addr16 adc loop int3 mov ret xchg insl daa movsb inc adc fdivrs mov push data16 pop mov xor cmp push pusha inc (bad) inc outsl inc or push or sbb inc cmp aas add jmp mov andb inc insb lock push popa data16 es rolb and imul test xor dec dec dec mov jecxz add cmp loopne add orl lea dec iret fistpll dec repnz movsl out popf inc lock fldenv lret mov push mov pop insb loop ja out jo dec mov sbb mov bound mov mov (bad) in into test aas xchg stos in pop mov clc cmc enter pop push mov aas add out int dec inc jmp icebp add mov mov mov mov and cmc cmp int3 fxch iret xchg mov add add cmp les je inc dec sbbl cmpsb gs enter pop jne sbb pop pop in jno (bad) hlt imul xchg in push mov mov dec gs lea xchg popaw add loope jb fnsave sub ret adc test xor mov call xor xchg outsl lods fs mov pop jle fcmovnb or lea stos sahf xchg xchg push imul xor mov inc and push (bad) lods sub dec mov insl add scas mov std jecxz test sub inc mov push cmp sbb sahf repz rolb lcall addb push aam pusha xor lcall push cld or sarl and call or pop (bad) mov dec in call xchg fnclex bound (bad) add push imul adc jb stc sub fs mov jmp sbb lock ja pop cld pusha jecxz lret movsl mov mov lea insb shrl stos xor out mov or xor lock mulb fs adcl add cmp xchg int3 or mov push sti xor mov mov mov push stos jp pusha mov mov sbb gs out test adc in aaa adc add and sub cmp inc dec dec ss push cmp xchg push les adc mov sahf mov push xor mov sub sbb xor jge daa (bad) jmp push lret fcompl icebp push rorb ja fildll jge daa cltd cmp popa push in adc arpl push mov fsub insl call sahf add jns mov (bad) bound es rcll cltd das addr16 icebp aad mov ja outsb xor inc and jmp insb xchg inc sub adc les inc xor jne fwait rolb ret sbb xchg out (bad) pop jns push aam lea lods dec mov nop int3 mov dec aaa dec aam roll dec loop push sbb xor xor mov lock or jbe fdivl adc cwtl adc xor push mov scas jle xchg setp call mov pushf iret xchg add jns pop pop mov inc je into test fs inc test stos lahf add dec lods dec pop clc or and and inc xor lods jecxz inc add int cs (bad) js icebp rorb mov lods pop sbb ret mov add cltd sub xor or adc or sahf mov pop test xor inc fnsave push xor pushf dec mov lcall xor xchg mov mov pop or pop mov out pop cmp ficoml lahf xchg sarb in in dec leave mov cli xor movsb aam sub loopne pop and and mov outsb (bad) mov or in add xchg daa mov xchg loopne mov call mov ffree mov fimul ss loopne sbbl cld sbb pop aam and push ja dec inc xchg lods aam push add push js cmpsl ret inc xor sub and and xchg mov aad ja pop push in xchg add aas in push testb mov outsl cmp mov mov (bad) in (bad) mov repz cmc subl cwtl jecxz sbb dec out js push arpl adc inc cmpsl cmp adc mov xchg fdivp mov adc loopne mov push xchg loope sbb mov xchg jl or and push out faddl cmp fxch enter cmc mov hlt add stos push daa cmp lea lea adc iret and mov mov ror adc cwtl add mov add add fwait xchg jo cmp lods add xor dec je into test xchg rol fisttpll sub aad std js xor (bad) daa fs (bad) jno popf outsw jp jno xor mov sahf sbb sbb out daa imul loopne cmp xlat outsl dec mov jbe cmp push push push jae jmp mov push or push nop add push aam sbb test movsb shr inc roll scas pushf mov or ucomiss ljmp (bad) out test xor pusha mov push pop inc mov and rclb mov mov inc fistp push cmc imul sub pushl push jns ret mov push inc arpl xchg (bad) shlb insl sbb adc push out push cltd cmp aaa (bad) jecxz xchg movsb bound dec xor or gs xor pop je sub jecxz (bad) aam sub vpunpckhbw mov das pop and jnp sahf dec push sarb test ret je jnp clc xor ds rolb das in jnp push adc mov imul pop xchg mov insl inc aas lret xor repz push sbb (bad) rorl jge jb in cmpsl dec jo movsb push fstps out sbb and jmp inc adc sbb jmp ljmp mov mov push mov ja inc pusha xchg stos and stos dec js dec mov and mov lahf addr16 mov sbb cltd pushf outsl or lcall or sbb mov mov imul mov dec repz popa sbb fcomps cmpsl mov das xchg outsb sti cmp xor adc cmp loopne inc xorl cmp sbb jae push xor adc gs repnz leave (bad) pop fistpl adc icebp fnstsw xor loop add mov mov inc inc inc rcrb fnsave or or xor insl shrb cwtl xchg inc insb and adc sub push pop mov sbb cmpsb sbb fwait out clc or pop mov mov mov (bad) out sbb or inc jg push sbb cwtl adc sbb mov out sub insl stos xchg sbb pop repz push addr16 lods add add adc test stos mov pusha inc hlt adc mov ret fistl jle ds push pop mov les mov inc hlt cmpsl out cmp ja nop mov mov mov mov pushf and xchg lahf movhps xchg inc int3 mov (bad) cmp inc dec int3 cmp aas and pop out jb add (bad) dec jnp mov and mov dec ja sbb je cmp jae sub pop pop push inc inc and sbb push arpl mov pop pop bnd dec cmp pop test pop aas jecxz push fcmove inc jo fucom add dec mov pushf mov fimul lea fisub mov dec fbstp adc ret jb clc xchg mov cmp lock ret adc sti mov dec sahf pop imul inc xchg scas jge ljmp pop test sub mov out cwtl push cmp lahf push scas xor je adc sbb xchg fdivrl sti movsl mov imul lock rcll cmp sub push insb es mov fiadd xchg push push inc mov mov popf sbb out sub xor inc test sub (bad) push sbb adc jl add call cmp nop jmp jns jbe sbb lods mov sub (bad) or xchg lcall xor mov insl jmp out pusha push aad jo cmp jns sbb dec mov test aas mov outsb xchg xlat ss push dec xor (bad) jb pop sub push push xor dec lea or or or in (bad) mulb icebp icebp scas mov dec push stos pop jo pop xchg xor fsubr push xor fs push popf rcrb sti test imul loop lods pop cmp mov mov cmc insb stc add idivb inc (bad) push iret cli imul pop sub fstpt and xor dec neg imul adc popf pop inc mov mov cmp push dec int and loopne xchg ret repnz mov xchg cli push movsb loopne sub aad cwtl sti mov (bad) ficom cltd lret imul cmp jbe (bad) or in inc dec (bad) (bad) fisttp cli aaa adc or divb movsb xchg push mov mov xlat xor mov adc cmp pop mov and stos pushf andb cmp push pushf or and outsb or push xchg hlt aas dec mov mov test xchg xor int3 int dec sbb xor in cmp (bad) cmp out divl sbb inc dec jle dec jle mov cmp pop into shl mov adc xchg adc notb pop shl mov rcr mov stc stos pop xchg mov mov cmp daa imul inc mov cmp xchg ffree inc icebp sub or jg mov sub pop setl mov loop inc stc sub mov jns lret (bad) cmp je out (bad) xchg cmp fadd jnp and call cmp mov loopne xchg cmp gs inc ret movsb ret or aad mov adc int3 fchs mov cmpsb cld push sbb adc adc inc loop clc movl shlb add addr16 mov sbb mov lret xchg or mov mov (bad) cmp cs mov std sub pop push mov dec mov popa in pop sub scas adc dec dec mulb imul push decl enter cmpsb out mov icebp add jne xchg sub xlat sub in inc (bad) lret and mov mov cmp xchg mov popf and cwtl (bad) mov jg mov jb cmovge insb out mov fcoms push pop mov pop cltd je cmp and insl push dec or jbe mov cmp sub pop add idivl nop jnp sub insb pop mov icebp sbb push retw cmc push test adc mov push pushl ja loop or dec aaa push sbb xchg push std add test lahf lods inc mov push jnp mov mov stos in xor or test (bad) and (bad) xchg std test rorb dec bound pop dec (bad) push push jg add push loope stos lcall xor scas mov dec jb push pop mov pop cwtl pushf inc fisttpll cmpsl ret or push dec add out pop cmp cli nop in rolb push dec and scas fdivs xor mov call js mov ficomp mov js and decl dec fldcw dec or pop sub cmp sbb ss rcrl or ja jno pcmpgtd mov or (bad) xor push addr16 pop mov add mov fucomp mov test jecxz mov mov divb (bad) sub or insl push or bound or mov sub (bad) cwtl jns jbe fdivrp jbe int mov push mov xchg movsl movsl dec aad outsb cli mov leave into push (bad) inc jnp jp fcmovu pop fstps mov xchg scas xor push fnsetpm(287 jns clc outsl push repz lcall fs mov scas ss adc pop mov stc cmp setnp and pop loope repnz les xchg popa imul jnp (bad) xor (bad) jo sub stc jp adc stos xchg cmc aas cld gs sar jno loope jo sarb clc xchg mov int3 dec dec push push clc sub sbb jae jbe sub or je popa (bad) fisubrl ficomp testb pop addr16 or stc jle xor jmp cltd mov (bad) xchg and insl cld ret xor fwait arpl jl xor push pusha mov push sbb lret cltd rorl mov xchg or movsl repnz sub sbb or pop pop sub int3 mov adc or (bad) nop add out bnd cmp inc or fistl repz je push xchg outsl mov pushl xchg or sahf jns std jl jo insl imulb add aad and cwtl push and cmpsb pop inc xchg lods rol add cmp push addr16 mov mov popa movsb cmp lcall add jl push inc cli shlb jno inc cmc mov push mov pop stc sbb std mov or cli mov sbbl gs insb std popf inc jle inc notb jno mov in je sub rclb nop lahf into je movsb sbb adc sub xor in repnz lret int test jbe jge lock or stos jp fsubr sarb add (bad) xor cmpsb xchg out mov or mov cld ret int loope or cwtl jne sbb jmp mov inc repz sub xchg fnsave lods xor add inc cmp inc mov enter fistl pop xchg test repnz cmpsb popf mov push cli lcall imul jne loopne xchg mov in lea fstpl dec mov mov mov sub mov inc aas aam dec xlat lret addb cltd je add add ds and iret sbb dec dec rcrl shr (bad) and and cmpsb adc shrl inc sub sbb adc mov add xor xchg lret cs xor test push cmp nop cmp aam xchg hlt inc pop fs xor daa ja outsl jge fildll mov jae mov in cltd pop inc mov aad and enter addr16 ja jb mov xor lcall in mov movsl sbb imul pop or cmp int3 out xchg rcr jecxz out jne add int3 mov nop cmp in icebp (bad) mov xchg push jns insl or xor repz mov add icebp (bad) pop outsb mov and popa mov (bad) push pop stos adc test xchg pop pop dec xchg fsubr mov mov lds movsl cli jnp mov and imul mov sbb das rol push jnp fwait xor cs ljmp call sub icebp add sub push mov cmp mov inc ja cmpsl push test xchg mov or mov mov das cli mov cltd (bad) stc pop push jge hlt mov cmpsb and cmp (bad) aas and cmp xsavec aaa and insl jns popa adcl or insb and fbstp sti pop cmp popf dec in cmp into popa fild and push lea data16 sbb (bad) pusha fist pop in cld stc pop jne fbstp in fcoml lahf test sub test cmp dec movl add fiaddl fcomp les mov mov push jecxz pushf push insb sbb jmp (bad) sub pop inc movsb inc sub adc hlt aaa adc mov and pop adc sbb add dec sub mov jmp and cmpsl adc imul dec mov xchg addr16 pop shl iret pop xchg sub loopne rcrb pop sub pushf mov adc add shlb and sub xor (bad) das adc xchg mov arpl jg sbb test cmpsb insb (bad) cmp mov dec mov push inc (bad) cmp add or mov int3 sub jo mov stos sahf cmc shl jle xchg and nop mov mov (bad) in cmp mov (bad) stc add das push push stos int xchg out lret and (bad) hlt push repz jns jp cmpsl and push push dec xor das mov jg cmp jl cli jp dec int mov push cmp cmp or jno xchg sbb lcall mov mov ret push pop pop lahf or movsl loope rcr out push mov sub mov loop shlb xchg xor mov int3 lret jl aad (bad) push sahf xchg ljmp push shrb stc dec mov sbb addr16 idiv lods push scas mov pop ja push popf jo dec and fdiv insb pop fisubr orl in jg sbb pop bound mov rcrb fmull fdivrs mov popf (bad) xor inc test mov aas push scas stc das adc push mov add cmp jg push xor inc lahf jmp test cmp lds fsub aam mov push dec outsb or test and add mov fcomps daa jns mov mov pop or cs jl dec cmpsb lcall jnp test mov arpl outsb add fwait push (bad) xor outsl stc mov fsubrl jns icebp arpl into test ljmp push movsl dec inc jmp cmc cmp mov test das outsl int pop ja in or in fs (bad) shll fwait push push xor xchg aad inc xor in and (bad) rcll imul rcl movsb and dec rcrl mov push fisubr cmpsb inc push in cmp scas sbb fsubs int3 es fild into fildl inc lods or out js mov push push mov (bad) and mov sbb mov mov mov insb aam and ds fldl sub push pop push cmp dec mov add shll cli mov and hlt cmp sub push jp movsl jg or jbe cmpsb pop sbbl mov aam adc mov xor or jbe fisubl mov data16 js xor test jne call ljmp lret mov jns dec mov dec xor stos outsb imul and addr16 mov popf insl and imul out mov mov or mov cs sub inc xor push or int3 roll inc add in mov sub or (bad) xor pop lcall mov sub repnz addb bound in mov cld aad add mov andl lahf or imul cmp gs mov sub setp dec xor lds (bad) pop mov fisubrl mov jae mov imul lea mov adc cmp aam inc dec enter int3 xchg mov dec dec mov int or out dec jb jl iret and cmp popa push inc dec push jge add (bad) out xor or cmp push mov jo jb jp and setb push jg pop (bad) sti jge jp enter in adc and sub aad xchg inc lea jnp xchg fs js out orl scas mov in in (bad) (bad) leave fwait lds cmp fdivl sets aas mov imul aaa inc mov dec push pop clc int sub cmp mov sub fisubrl lcall cmp or fstl xchg dec fsubs aas add jb cmp sub icebp adc jb fmulp mov les leave add mov add pushf outsb insl (bad) mov sbb enter xrelease push out jge ljmp xchg and mov jae mov test jg mov fidiv daa lock sub dec (bad) ret mov aas mov aam insb and aaa jge divb adc add scas lahf addr16 mov xchg out mov mov cwtl dec in pusha scas call cld mov xchg out jg (bad) aas outsl nop inc inc pusha push dec stos sti sbb ret nop push cmp cmpsl cmp add xorl ss movsb iret leave enter and lcall cmp add mov or jecxz mov mov inc jb loope xor lahf and repz andl movsl xlat push mov mov push aam test jecxz xchg sbb fbld and sub push cmp cmp pop xor int mov dec cmpsl fild dec mov xchg cmp and sbb mov int fildll fwait (bad) lock or int lret jmp and inc and aam xchg dec scas es jae loope test ss fcmovne jecxz jae aas xor cwtl pop xor fistpll add and test mov sub sub mov mov jmp xor jno fwait mov xchg and dec pop lods sbb sub sub jns mov add mov aad mov pop sub loopne cmp jo (bad) fs fistpll test add or inc dec sub push daa ss jecxz jecxz or xchg push jo adc and in dec xor mov out fs mov or mov std xor stos cmp cld push imul icebp inc mov pop push aam out inc and pop je in dec pop xchg and pop mov push push mov sti js leave adc mov in popf xor lods and fstpt and sub jge pop sub (bad) or cmp mov aad outsb mov mov jl mov popa pop aad jecxz fadds push jns and inc lcall push loope mov mov jl add orb (bad) jb xlat adc or xor push sub mull bound mov push lret sub loopne aam xchg and aas and jge or outsb jp sub aad cmp dec push adc xchg push aam faddl cli push fdivs test leave (bad) sarl sub (bad) popf or fnsave xor or sub cmp loop aad stos loop sub rep dec add mov imul int3 xor imul movsl mov data16 mov fimull lea cltd loope (bad) mov inc sub push and repz mov out inc shll gs pop gs fisubr jnp fucomip push outsb push mov sbb dec mov call xor jbe cli rolb adc in ds push int3 shrl lock pusha jg or out call scas xlat mov les (bad) les aad outsl dec push scas xlat sbb sbb mov dec push pushf sbb push sub aas fs ffree add inc rclb gs mov inc xchg mov add inc push sub jno adc or out xchg and push mov xchg mov sbb icebp lea lods mov jmp imul cmp (bad) sbb pop jp lock cmc jbe dec mov movsl cli pop daa or xor iret inc push xchg and dec addr16 jecxz outsl or sub sub call xchg dec add std std scas dec out cli lea jb dec jmp or xchg push ss cs stc in (bad) fcmovne sbb push es out mov outsb das lods jae sub int3 sub cmp jb in jns in or cmp (bad) clc pop jle sbb fs dec aam push inc adc out inc faddl outsl adc xor loope out sbb push insb cmp loop outsb aas hlt (bad) mov sub or aaa and mov sub jnp pusha lods mov adc dec ret pop and push in in or sub jmp cmp cmp outsl clc cld addr16 jno clc xor mov dec pop cmpsb mov cmp inc xchg ficom xchg (bad) stc inc sub mov mov daa fwait (bad) repz bound cmp cmc in add repz fdivrl sbb xor jl pop jl aad leave das scas push add int3 jp inc (bad) sub pop pop push mov out pop pop push xchg push fdivs jno inc out mov rorb cmp mov xor xor imul or add adc push scas fisubr fs in jge (bad) xor add xor out lret or mov into mov push sti mov hlt push dec imul xchg xor dec add mov and mov and aas roll jo pop pop das xchg jmp push push std dec aad (bad) mov call das dec mov sub in adc cld fiaddl mov ret ja xlat and stc lcall inc and jno mov xor (bad) cmc stos cmp and fwait cmp fnstenv or mov and jo jne rcrl pop cmpsl xor lea roll js test psraw and pop sbb dec test push fcomi ret (bad) add cmc mov jb mov sahf (bad) push mov pop ror pop gs or or int pop or jns test inc mov imul mov pop es es fildll or mov in aaa in cmp outsb lret insl test inc or loopne mov loopne cmp je xchg adc inc dec test std in data16 push fcmove or mov lea mov dec dec fs lods into aaa pop insb sbb outsl add jge in mov xchg jmp xchg xchg xlat inc lods sti rcrb popa gs imul push and add sbb inc pushfw testl loop jmp pop inc or xor mov cmp xor jge movsl ret xchg aad (bad) mov jae test movsl lret out push mov int3 js push lahf enter fstps push sbb push add pextrw ss mov add imul mov enter negb mov mov push inc mov (bad) adc ja cmc (bad) aad inc (bad) push jnp sarl push mov mov mov add pop push jge mov in pop outsl fild mov jae (bad) cmp outsb std jnp mov test popaw repz call and es dec fdivrl mov push out addr16 pop fnstcw add hlt pop stos xchg popl enter jb in cmp push jge adc in repnz jge xor jl sub in or or or xor (bad) jmp xchg pushf adc (bad) aam dec (bad) xor push xchg stos in xor mov cmpsb popa cld jl andl repnz xchg xchg int3 (bad) out jle js xchg jecxz mov shrl dec jecxz mov push jne xchg test push cmp iret mov fwait ja ljmp cld mov sbb adc das out lret std cmc xchg push and mov cwtl pop jge fs inc xchg cmc inc addl mov pop popa pushf (bad) call xor push sbb out dec inc fsubrl mov push mov movsl jecxz adc imul sub mov mov rclb fstp fisubrl test stos push adc (bad) mov add mov int3 hlt jne sbb push clc push inc xchg push mov pop mov mov mov xchg mov mov aad call sub push mov inc popa repz cmp enter (bad) imul xchg std out in mov js (bad) pusha clc xchg test call cltd ret sub adc inc sbb xchg cmp inc lcall test pop sub mov icebp push add rcrl scas add sti cld jecxz outsl and ds xchg in adc and out out inc jp clc ss cli inc xabort repnz mov cli mov xlat and sub pushf xor sti jmp dec pop lcall dec dec aas adc test lahf jl shrl cld shl push std jp adc ficom stc pop and sbb jl repnz jnp inc sub hlt leave lods jge je cltd cmp lds sub int3 mov inc js ret mov mov cmp push popf aas jnp aaa dec lcall inc sbb xor popf lea jns les roll dec sahf loop adc insl sarb add xchg mov ficom lods and paddusb mov imul fcoml fildl imul cld jp adc sbb ret pop rcrb inc ficomp and add adc inc pop push icebp or iret pop push (bad) ficompl in adc mov mov cwtl outsl sub inc cmpl cs inc arpl cmp xor push shll pop fild les out push xchg push jae adc add fstl out into (bad) jb mov pop insb sbb mov inc insl pushf repz pop ss pop push fcompl lock pop sbb pop add rcll cld adc adc mov mov xchg xchg aaa ljmp xor and cs sbb out cltd out push cmpb mov push pusha jg pusha dec in mov scas pop je daa fnstcw or mov xchg dec in sub loopne push pop ja xchg dec pop cmp push jmp push insl and or sub (bad) int dec cmc dec in mov inc jp mov sbb das jecxz mov fdivl cli mov and jl orl mov and jmp pop test js inc mov mov sub inc mov (bad) hlt dec cmc mov mov lret push fxch mov mov popf pop out sub pop pop pop mov (bad) cltd push dec jnp jecxz push test cmp add jmp and add or aad ja lock ret shl xor out test inc sahf jb das repz mov dec lds ja dec fisttpl ljmp lcall fs imul ja rolb add idivb sub popf jae (bad) (bad) loopne jmp mov fstpl inc mov cmpsl cli iret addr16 scas pop push cltd daa jl lcall pop sbb (bad) imul push sub mov aaa sahf mov cs nop imul pop fstl adc lds test in pop clc sahf sub push jl xor insl je pop pop nop lcall mov test push repz jb rorb movsl dec jo es int sbb jo mov jae sbb lcall jp cmpsl xor push pop mov xor cmc mov sbb sti or insb rorb xchg out aaa pop xchg decl sub popf inc xchg jmp adc mov or mov cmpsb mov lods jno mov pusha mov mov dec dec adc dec (bad) cmp fildll dec mov cmp test movsb inc orl push push xchg sbb jp pushf ficompl aam mov jp rolb jecxz scas hlt jecxz add dec stc fwait mov sub jmp daa pop pop cmp scas push xchg test movsl lods rolb adc pop std out push push sub pop cmc adc inc sbb (bad) push mov insl cmp pop inc mov inc mov or mov mov xor mov sub lcall inc pop sti xor lods push stos cli (bad) jp in xor push rolb or push sbb arpl push into mov mov insl dec xlat enter and dec subl scas lret inc push clc mov jmp mov lea xor sbb jle mov daa sub inc out dec xchg xchg rcrl into rcll aaa xor sbb and clc or dec or rcrl pop aad push pop ja sub imul xchg dec aad xchg sbb cmpsb xchg mov add lds nop arpl adc out loopne cmp sbbb cltd je out mov cmp rclb jnp sbb std je or xchg rcrl mov add mov jge mov into dec inc (bad) icebp fsubrl fs dec int cli and push scas add jno push xchg mov xchg mov xchg xor lahf jns mov (bad) pop insl cmc test rcrb cltd or mov mov fiadd and lahf das pop mov popf push and mov xor mov sbb jecxz (bad) jns outsb or test jle push sarl cmpsb xor scas mov stc sub adc movsl rcrl stos and sbb xor repnz xchg mov xor loopne adc incb inc xchg add adc sbb add add sub mov cmpsl lods lds std pushf mov pop js pusha inc xchg in inc ucomiss mov jle ljmp jae pop or xor xorl fildll jecxz xor xor sub and or or inc divb jo jns sub inc insb xchg mov movsl or dec hlt mov daa repz jecxz clc jecxz adc xor pop sarl adc push out mov das push or hlt mov mov fcoml mov sub lahf and push xchg lods push push fs cli mov xchg or sub inc je xchg mov sub xlat les add mov es xor push mov lahf jmp in inc and stc aad sub mov inc (bad) testb out lock adc loope jno shlb mov sbbb mov fadds (bad) je cmp negl aaa pusha adc imul pop pop xchg and loop pop test cmpsb inc sbb mov mov pop adc sub insl pop in dec into mov dec inc cs push pop stos stos xor mov mov pop cmc adc mov xlat ss inc sbb jp stos mov push and xor mov je and stos fiaddl dec enter or call movsb xor ret adc das nop mov mov xor mov mov jae cmp mov ljmp push push nop scas scas enter xlat mov inc sete mov (bad) sbb sar ret setge or (bad) lock (bad) test aaa sub test dec sub inc push les xor ret dec cmpsb jnp stos push (bad) ds jmp jb pop aam or test mov loopne mov addl mov dec push pop test push add je inc pop jl fwait int mov adc cmc test loop mov ja inc sbb pop push (bad) pop jnp call xchg mov mov sub in mov mov loope xchg fisubrl or xchg xchg cmpsb int3 mov lcall push adc ret test out les dec push dec push nop or mov test mov mov xlat (bad) cmp mov sbb cltd cmpsl test sbb into dec push dec add (bad) jno jns lcall jp lods pop or lds pop lret (bad) xor clc xchg rcll mov ret mov or mov insl xchg jl cmpsl out and out pusha xchg mov cld cmp pop stos xchg add push adc fs jae pop cmpl push pop xchg inc fcomps mov xchg mov mov sbb arpl out or popf mov andb sub cmp mov std stos pop sbb pushf aas xchg (bad) sbb lahf mov adc stos fsub inc ja ss (bad) in out push mov xchg inc cwtl test out mov fucomi sbb fs jb lds jno jae insb mov in fs insl mov lea xchg sbb aas cltd adc sub pop add (bad) push sbb (bad) xchg lock js popf std stos popf orl dec cmpsl mov repnz insl incl clc pop call sub mov cvtpi2ps out popa mulb dec fistpl into push (bad) push inc or test lods movsl jl add ljmp ret jbe cltd call mov mov add xchg enter jo adc lret pusha stos call dec lods mov int test stos cmpsb push int mull in adc mov lods add repz add imul cmpsl pop push cmp (bad) das into and inc sti and test out push insb sub ss sbb mov cld push inc or fisttp shrb (bad) enter das jmp push out inc pop mov ret pop aam lahf hlt xchg xchg dec int inc jo pop and xchg mov call cmpsb loope cld xchg lock mov ljmp push add mov movsb jbe cmp sbbl loopne sbb cmp sub dec mov push xchg xchg xchg stc inc loopne fsubrl stos popa sbb mov jb sbbl adc dec fstpt rcrb mov push fbld jge adc jge out (bad) xor pop lock (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret decl add aas hlt xchg xor daa xor add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add js add add or or add or add add add pop or add add mull add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add cmp push js in xlat (bad) jbe mov mov (bad) arpl mov mov mov cmp in cmp (bad) jae add jmp add (bad) (bad) pop pushf inc std jbe add xchg dec sbb sub or lret or idivb data16 mov or pop addr16 arpl lahf lret in jne jmp test push rcrb stos jb or out nop into out push push sub cmc cmp and jnp sar inc xchg push push jno push jl insl sbb push (bad) dec push jecxz xor jbe pop ljmp outsb or xor es (bad) mov fbstp nop sti (bad) negb jl inc push nop add hlt aaa jmp rorl mov (bad) mov bound fwait jmp or decl ret (bad) out or jne enter ljmp and scas sbb xor lahf je sarl sub xchg daa push mov rolb loopne pusha dec or inc sbb xor push outsl into add js roll rorb daa aad out sub xchg cmp or jns test mov mov adc outsl add dec cmpsb int std rcll xchg (bad) cpuid mov icebp or mov repnz popf shrb push and adc adc fistpll cmp cmpsl adc in das pop shrl leave inc das into jg xchg xchg cmc mov je fnsave lods movsb popf xchg outsl mov mov in mov fwait lahf ret pop lds inc cmpsb dec cli sub mov adc mov dec nop and and fnsave xchg sub rorb jno,pn sbbb inc or jae jnp stos jnp dec ja push rolb test add push sbb bound mov push add scas pop add push xor mov pusha mov jne cmpsb daa sbb or dec (bad) rcrl fldl2t push jecxz xchg mov jns fcoml jns jl push or hlt les mov sbb and push sti inc push lods pop imul test jns inc lods pop fldl sbb leave mov dec cli (bad) fidivr aaa rorb (bad) outsl jle scas movsb jl,pt dec mov mov jns aam sub call in ret or or jecxz notl adcl mov mov xchg push jno sbb xor add scas cmp mov popl push scas mov ljmp push das dec jno jb dec test fninit sbb stos (bad) cmp push pushf fistl sub mov (bad) mov mov mov cwtl movb repz out or test jp mov xchg xor add pop lods enter and cmc push into mov pushf sbb pop test pop cmpsl in gs popa aas pushf repz jbe dec cmp jbe adc pop fildl ljmp cmpsl (bad) daa mov or push sub mov sar or sbb and adc pop js and shrb jg cmpsl insb and es (bad) jo xchg sahf cmp (bad) ljmp xor lods xchg (bad) or xchg mov pop das and mov or fdivrl lea sbb data16 xchg pop je mov inc sbb cmp cmp sahf mov and pop inc mov dec je shrl lcall ds dec sub (bad) lret ja mov pop in xor arpl loopne inc sub test pusha add fldcw adc stc subl cmova push pop outsb out int3 out sbb and dec imul pop or jmp xchg pop test fdiv cli xchg pop inc or in mov jne pop xlat hlt push sbb loop sub je mov pop pop (bad) mov sbb pushf fucomi movb lahf or xchg pop pop call popa outsl arpl xchg cltd clc mov mov test mov mov fwait mov dec pop or push sub sub clc mov les gs popf inc adc pop mov flds pushf push xchg xor jmp nop js hlt orl test push add mov sahf cmp idiv pop dec andl mov outsb movsl enter add jne sbb sbb xchg stc outsb mov lcall in fbld imul out fisttpl adc out out pop xor push dec (bad) hlt sub arpl cld arpl dec sub mov (bad) popa in std lahf fimull mov mov test xchg push std adc movsb shll mov jno fdiv lahf (bad) mov pusha repz xlat fwait test xor in push loop mov fimull addr16 sub sbb incl icebp mov mov rcll dec stos std and lea lahf inc pop stos addr16 xchg fs out out push pusha push je xlat adc out insl inc pop ret lods in mov das adc xlat push jmp (bad) fimul repz adc inc in xor sub hlt dec mov mov fs out push sbb xchg cmp jns inc inc test push sahf (bad) mov mov pop sub push popa pop fistpll fisubr (bad) jne dec mov aam outsb dec xchg xchg sub inc mov and cli cwtl fcos mov inc cld add out mov (bad) repnz repnz push ds mov ja jle mov or adc sbb out addr16 lods sub mov adc push adc in js jno int3 sbbb or je int3 cmp add pop lret mov jg and inc jbe lret in sbb mov sub push cmp jb maskmovq idivl sub imul and add mov add sub or and (bad) xchg fsubrl xor stos inc push or fmull pop push int3 pop xchg dec (bad) rolb test cmp (bad) idivl add xchg (bad) and cmp or cwtl or jmp cmc jnp cltd mov insb sti bound ja and out cmpsl jnp mov mov push mov mov jb outsl addb leave movsl adc cli rcr lcall inc mov adc sbb pop pop subl xchg add mov adc icebp int3 test pop push test xor loop cmp sbb loopne inc outsl inc sub jae mov inc and mov mov add cs ljmp or mov mov xchg cmp out stos lret inc mov loop (bad) cmp shll inc cmpsb push test int3 or or loopne (bad) aaa and aaa jb,pn push jo push jg pop pusha adc adc add out bnd dec cmp mov ss cli xor dec out mov mov adc jle pop sbb icebp jg loop nop psubd cld je push cmp mov (bad) dec xor movsl mov push out movsb push in cmp (bad) dec rcr stos fs add (bad) cmp push sti jbe fadds clc cmpl ja and mov insl mov dec dec jne in cmp in mov mov test mov adc (bad) data16 mov loop inc pusha mov inc mov (bad) pop and lock jae std lret inc cmp xchg cltd sbb sbb adc into out jb cwtl cmp movsl mov xchg push pop outsb cmp fisub inc xchg (bad) repnz push add xchg add or fidivrl jle mull stc cli (bad) (bad) cmp mov fs push sbb mov add ud1 fcomi (bad) idivb jb (bad) repz mov push addr16 jge leave loopne ds cmpsb push popa add bound or pop jle mov push iret push fcomps mov jo stc mov faddl xchg push aad mov out cmpsl inc adc repnz pop add (bad) loopne scas xchg jo scas mov cli sub cld mov fwait inc jecxz cwtl mov adc and movsb xchg test mov and pop shrl into dec xchg addl fbld daa inc aas jnp sahf fdivs inc cwtl push das es xor xor stos cmp inc pop add inc sarb jmp rorb mov push es mov insl cmpsl mov (bad) mov std data16 jmp and xor adc xchg adc and scas inc test mov dec and imul jg cmp lret push jns mov enter mov cwtl ss mov and inc pop xor repz (bad) faddl sub (bad) mov fbld repz mov xchg adc xchg push aaa xchg inc cli movsl jnp sbb enter or roll imul pushf xchg popa dec rorb or daa in sbb lret push push cmc dec call in pop std pop subb pop mov dec popf push gs and xlat ljmp bound xchg jp sub fdivl mov xchg cmp push rolb adc push sub and pop add jp pop mov push out xchg es xchg push test sahf sbb leave xchg testb jmp mov enter in rolb inc or fs cmp xchg adc repz insl pop mov repz psubq add mov pop fidivrl jb jecxz mov jge push int push psllq adc mov cmpsb divb in and icebp pusha mov (bad) in arpl insb movsb pop inc aaa in flds and cmp test inc mov inc stos mov push clc xor adc inc push (bad) popf cmc int fmul int3 xchg add or stc cmp gs cmpsb es cmp test test inc je mov jnp iret sti pop imul mov fwait into cmp and movsl sar in les xchg inc jne jns adc cmp leave js mov test xor add adc out (bad) popf insl sbb leave mov decb dec xor mov pop push scas dec test daa jb mov mov mov dec movsl insl mov or jnp adc outsb add decl sbb pop lcall xchg sbb push sbb (bad) (bad) mov sbbl sbb lock and insb (bad) jno cli inc push je test rclb insl iret in lahf inc add adc cmp xor xchg mov in cmp jge mov dec mov sbb pop decb mov cmpsb lock xchg cs aaa xchg pop inc (bad) jg push mov mov out ljmp sbb inc xor movzwl inc or into imul outsb add mov dec mov push (bad) ror mov inc xor insl jge xchg clc push std (bad) mulb paddsw leave push pop aas mov push pop push sbb mov arpl lcall xlat pop jmp jnp lds dec fs addr16 cmp add out dec lret jbe jp push enter call sbb fcoms xor inc mov dec mov jb sub xchg ss inc inc fisubrl jo int3 repz jb cmp cmpl or pop scas add imul lcall inc push jb xchg out leave gs aam (bad) out jge lds pop add inc sti (bad) cmc mov call lcall out jp cmpsb test ljmp inc jns cwtl adc das pop cmp lret mov xchg fnsave test mov jecxz xor cmp popf loope sbb xor test outsb pop cwtl mov ljmp inc sbb fs sbbl mov outsl ja jb and xorl inc sub call push popf int jle push jle rorb jb mov xor sbb adc inc xchg jecxz or fidivr dec jne scas fimul jbe add add pop (bad) ret cli mov arpl lret call xchg adc ret push insb addr16 mov mov stc cwtl mov push xchg xchg sub lods inc int sahf mov call cltd pop and pop push test cld stos jle imul scas fisubl mov dec in and jne fisttpl gs in shlb mov add and lea xchg jg mov les lcall mov jno scas mov inc sbb fistl and out mov pop popf adc dec mov std cmpsb stc dec mov negb fcmovnu int pop loope arpl sahf sbb rorl adc xchg cmc shrb xor push enter sahf push in into push jp pop mov rol and mov xchg not mov out adc mov jo inc xchg and mov ljmp xorl and inc adc test movb mov movsl mov lea jo dec and in out pop cmpsl aad jb ljmp add or sub lock and cmp stc push (bad) mov ret aaa mov push enter (bad) div test (bad) dec dec int mov adc nop and push cmpsb mov push cmp adc les push mov xchg aam lahf sarb popf sbb test cmp lcall aad mov insl sbb mov lds mov das xchg leave mov in cmp fsub add inc xor out mov xchg xchg in mov xor jns aaa testb hlt xor lds je pop mov add es je (bad) inc cmp cld dec sbb and imul rdmsr incb mov xor pop push (bad) outsl pop adc and mov mov xchg out scas sub out or addr16 mov (bad) jne adc lds vmovsd imul xchg mov pop rcll mov cmc and fistpl daa xor rolb or sub outsl in sbb popf pop jns divl mov mov push adc mov (bad) out test add sbb pop push sar dec fnstsw mov test jbe ja xchg jl (bad) repz mov (bad) repnz dec lahf push mov push pop (bad) xchg rcrb mov pop push lahf push jbe loopne jno push cld dec add insb fnstenv lcall int3 adc dec daa mov lds into dec sbbl (bad) xor sub add push jecxz and cmp xor leave mov jns rolb dec push popa sbb push test xchg push cmpsl in cmp mov xor out addr16 enter mov jb jno lds inc sbb je loop jne addr16 int or test sbb adc mov rcr insl stos sahf push mov dec add and add or aad pop jmp adc sub mov xor jge dec mov sbb sub addr16 dec inc lods pop ljmp (bad) aaa adc mov in out push jbe mov movsl stc xchg es (bad) xor cmpsl fs pop or sub (bad) fnsave xor push ret push mov add jns xchg (bad) xchg aas inc js xor ljmp out stos dec scas (bad) inc arpl inc jns or mov inc jl mov aas (bad) jo sti lret scas adc addr16 cmp ja aas inc inc jmp outsb (bad) jae add mov inc mov stos dec out iret jb into movsb dec sub lret sbb (bad) int3 in fcoml push cmc or xchg mov repz or dec aaa jae popl add adcl sbb test ficom jle movsl in lret mov xor arpl lret lods sbb icebp cmp xchg xor adc pop lods mov xor ret neg movsb les cmp jb insb push leave pop (bad) fdivrs scas out or adc in pop jle push stc mov daa test arpl adc pop ljmp les sbb fstl push cmp fsubp in inc icebp add out dec cmp jnp xlat add dec or jae ja mov pop lret aad jb inc notl imul outsl sbb (bad) lret adc mov inc sub mov fidivl dec stc xchg and scas adc xor mov jae cmpsl cmp adc call pop cmp leave fistpll fldcw mov jp je fistpll cli int3 jge popa xchg mov push sti outsb into mov add push and out jo adc xchg mov pop scas lcall mov (bad) cmp mov rcrb setg push insb sbb addr16 dec sub cmp mov jae sahf mov xchg divb lods repz inc adc add or add vmread mov dec sub cmp jg and movsl adc push jmp popf icebp xor fdivl mov (bad) int push arpl add les into sub dec cmpsb dec nop (bad) shrb jnp lock add sbb lea outsb mov scas push add (bad) int3 mov xor push adc add lcall outsl data16 fidivr jle mov (bad) popa mov jge xchg leave push test aaa je cmp jne lods ret push or (bad) in xor cmp sub inc mov mov in imul cld add sub add mov pop ja dec scas adc enter rcl arpl push stos mov or pop icebp jl xor lea ljmp (bad) and cwtl pop test push dec divl sti out andl cs mov ljmp xchg mov movl inc mov popa xor rcrb lret pop pop cmp das (bad) xor xchg stos dec fcoml mov sbb jecxz cmpsb leave or loop push jge cmp add xchg pop cmp xor and out dec add mov sub lahf (bad) dec (bad) in (bad) mov fsub les sub inc cmp (bad) into aam jmp loopne jecxz cmp (bad) mov lea ret insb int xchg inc es (bad) jge jmp stc cmp add mov xor out ret aas faddl sbb xlat sti sub xor mov mov dec pop jge mov dec xchg and mov inc mov jmp insl addl outsb cmc call sub mov stc stos sarb push cwtl push xlat (bad) mov fldl pop and cmc dec movsl jecxz in or pop mov push push fwait js repz mov sbb pushf cwtl inc adc xor xor jl loope ljmp movsl pop push or xchg gs fcoms push stc sub xchg dec xchg loopne sub inc or das out cmpsl inc jg fldcw pop cmp (bad) mov xor (bad) xor jecxz push mov lret orl movb testl inc rorb xchg add gs cmc adc cld jbe gs loopne or leave fiadd fadd push add test jae cmp js lea jno xor cltd fcoml fiadd gs sbb arpl pushf dec mov hlt lea xchg inc adc adc dec or js cmpl xchg aam push inc test xor pop mov jno mov cmp bound faddl out sub pop pop test sahf clc ja inc push cmpsb aam mov push mov mov out pop sub decl loope pop mov sbbl push dec cmp scas jns xor or std fwait out mov adc dec test cmp mov or and les cmp int xchg xchg jno data16 les xor mov outsl push dec sbbl insb (bad) or fstpt es call push mov push adc add jmp iret call adc pop shrl dec xor xor aas frstor (bad) fisubrl push push adc mov outsb and xchg mov or or xchg bound dec dec dec sbb mov pop or dec xchg adc sbb xlat notl jne mov cmp out dec fstpt shlb mov mov (bad) (bad) sbb add dec xor insb fstpt ret fisubl mov xchg mov mov push cmp jecxz test mov imul cmc aad pop in jl inc adc cs add lock imul les (bad) in mov jbe nop dec bound vmovaps sbb icebp loop mov jne shrb js cmp cmpsb mov adc jno (bad) mov inc dec test adc add cmp les jbe dec or inc lcall lret and nop ret out mov ss adc xchg and mov inc xor cmp inc add xchg aam fisubr inc adc or jo mov push stos in jge ret xchg mov jmp std rorb aam imul pop les in jmp pusha fs jae sub mov jle loope imul sub aad outsb mov jae jle fs or das imul inc push rcr sub stos add je cmp cli pop jnp mov adc jmp dec stc jmp adc and jne (bad) dec jo ja aaa mov cmp pop aas jb cmpsb and mov xor stos jae mov loop add sub aad push cmp fcomi cmp lock push xor addr16 dec jne pop sahf inc pop jno push rorb pop mov jb data16 das or lea js and lret cwtl xchg pop adc jns mov popf dec pop lahf lock fcoms push aas xor jo aad pop call xchg stos push cs xchg xor (bad) adc mov into xchg cmpsb mov dec into xor repz pusha pop fcoml arpl jle into sbb sbb ror mov ss cmp idivl mov sbb inc ljmp mov mov push out ret ss adc (bad) ds jle mov (bad) xchg (bad) mov jne add or cwtl cmp sbb dec outsb mov cld out mov outsl outsl data16 outsb or pusha sbb orl mov sub adc or mov cli arpl outsb cmp ret sub inc pop dec stc inc jl imul adc addr16 (bad) and push out pop int xchg lods shlb test lea adc aas es out in arpl out push xchg push cltd xchg push dec pop add aam dec cmp pop ljmp sub insb push movsb andl dec mov ljmp movsl repz jae cld xlat cmp and (bad) hlt xor sbb adc jp push lock cld adc enter cltd outsl lcall aaa cmp jp dec or jns or sub insl (bad) xor mov add jl mov dec (bad) inc scas add sub push and shl dec mov cmp jne add xor xchg mov mov scas fidivr int test mov scas (bad) xor lret push lret inc movhps mov xor xchg cltd popa pushf iret xor (bad) cmp mov (bad) repnz inc (bad) add jno (bad) fdivl push out fsubp push xor repz (bad) loopne xor faddl sub jecxz push inc mov out fwait es repnz jmp mov xchg bound sub add (bad) mov jnp lcall (bad) mov call xor stos cmpsl aam pop push andb lcall scas jg add mov pop shrb scas add stos jbe or mov pop xchg iret (bad) sub xor pop adc mov mov ss repnz rcrb push es dec in mov adc cmpsl adcl cmp and jns xor mov movsl jmp push pop cmpsl rolb lea repnz in jl,pn in sti popl adc outsl in rorb mov mov inc mov pop arpl add pop dec data16 push mov sub jb sub (bad) mull mov jnp stos gs mov mov and sbb sbb cmp mov mov (bad) out shrl das jmp fidivr (bad) push lods inc mov pop addb jge scas xchg jmp inc (bad) sbb scas test test add xor mov push xchg push push add mov leave imul inc enter (bad) xor stc mov gs scas fiadd mov sub lods dec sub add pushf divl aas test stc out add (bad) rorb jae jl push adc (bad) mulb mov xor cli push cli sbb cltd insl jbe sbb inc (bad) mov dec mov pop sub lds jmp les pop repnz adc movsl je add (bad) rcll test movsl cwtl adc cwtl xchg inc sbbl stos xchg (bad) lret (bad) cmpsl dec pop insl (bad) mov cmovb xchg std insl xchg sub cmp adc push stos xor repz dec push mov xchg and xor push mov dec push mov xorl xlat inc clc sbb repnz mov cmpsl call dec and test fidiv xor add mov pop into add adc cmp mov jno inc fbld (bad) loope pop mov mov push pop cmp movsl and pop repz clc test inc mov xor sti mov pop aaa popl enter ret push sbb inc sub leave hlt or fdivr cltd enter fiaddl cmp jg mov sub sahf pop fdivr es jg jge int lods sbb les jae out lods roll call pop mov (bad) dec mov xor dec fs jecxz xor (bad) xor jecxz adc sbb cltd inc pop jbe inc bound xor fstps xor fistpll sti mov mov ljmp mov xchg aas and mov call inc mov cmpsb insb mov out cmpl dec jb movsb mov cmp imul jg int cs dec mov dec adc lds outsb scas adc sub lret lods sub into js (bad) shrb mov out fwait aas cwtl (bad) mov inc imul test or pop js,pn and lods push int ja and cs mov mov test lahf into cli in mov cltd pmullw mull mov movsl fsubr in mov mov imul cltd addr16 inc jecxz push in adc sub pop fs cmp pop jmp scas or rolb rcl jae imul dec cmpl (bad) in mov icebp mov movsl and test in inc pusha inc adc lock inc les add jo roll xchg push (bad) push sbb adc (bad) fcompl lea das (bad) xchg pop cmp xchg xchg mov data16 pop push bound outsb cmpsl cltd outsb push imul sub push call les loop gs push xor leave jmp sub adc movsl stc cmp push add imul inc jmp (bad) idivb mov mov fistpll lahf sbb or rcl xor pop std add xor cs push inc mov fs pop jb or and cmpb pop pop pop mov out insl test mov push test mov ljmp and dec leave or sub adc ljmp icebp in push repnz shrb xor inc mov sbb mov mov insb fwait sub jecxz inc lods pop add cmp insb lahf adc jnp fs jbe popf outsb pop mov xchg insl out es push dec jge xor call aad sub dec je inc jmp ret pop and leave out cltd mov jno das xor stos addr16 dec push aas stc dec mov add (bad) inc jl andb adc xor or push orb popa mov sub rclb inc (bad) sbb dec test into add pop push push ret fisubr pop sbb mov fsub inc repnz jne out bound bswap inc nop aad lods push cmp cwtl xor fnstenv cmp xchg inc fadds mov cmp mov sub push fdivrs sub divb mov push loope jmp aaa cmpsb hlt arpl pop leave push dec mov (bad) dec cld rolb dec xor stos push out mov movsl repz or pop loope mov mov mov cmp jo mov ja mov sub adc (bad) cmp pop fs popa dec adc adcb dec dec daa (bad) shlb cs mov arpl test test jbe dec scas pop xchg cltd jne sti cmp xor add add sbb cmp sub dec push movsb adc popa mov loop jl ljmp stos je flds push cmp (bad) xor fsubr icebp test (bad) lcall push pushf sub pop in sbb jmp repnz mov sbb inc lret stos stc mov xchg jl ja incl or pop cwtl lcall aad sti adc (bad) vmread mov ds mov mov cmp mov fidivl inc lea (bad) and sub mov mov mov pusha jg pop pop xchg insl lods (bad) arpl xchg dec outsl clc (bad) jmp sub push insl inc mov jbe mov jne xor mov (bad) mov cmp (bad) sbb int dec std xchg jg and lret int3 mov mov mov loop mov cli daa (bad) dec mov mov in sub sbb movsl push cmp mov and (bad) mov and loopne inc inc in pop mov mov pop mov lds jae inc xchg mov fnstsw push int3 daa inc repnz jbe out iret stc cmp scas fmul lret iret sub out xchg push xchg mov mov push aam test lods inc in repnz sbb out icebp leave pop ret in sub in pop dec aad in cmpsl xchg xchg jae mov jl push mov mov push dec jo (bad) cmp adc cltd mov loop adc in ss jb jb sub pop dec out (bad) aaa mov inc pushf xor test (bad) outsl stc movsl ja daa test lcall shrb xor sahf das fist xor aam sub ja push jge insl sub inc cmp (bad) and mov mov insl test popf xor cmp sbb pop and xchg sub pop mov cwtl xchg addr16 inc sbb xor xor jbe mov fnsave in icebp push les mulb leave lods rclb aad cmp jmp gs inc test xchg adc dec cmpl ret jno jns push ret loopne popa rcll negb nop add (bad) dec xorl fcoml je out loopne dec das adc insl mov xor cltd out cmp out sahf stc imul cld and icebp ljmp push dec sarl sub and call add mov adc ljmp out and mov scas hlt insb and pop mov in hlt stos push sbb in enter scas cmpsb (bad) loope adc cltd inc aam cld xchg out mov xor rcl mov or lock loop stc shlb divb add sti sbb push push jl outsb and add sar inc mov (bad) mov test cmp test inc push mov xorl vdivsd mov mov lret sbb in mov pop xor js push push out scas lods in mov iret dec popa int arpl mov pop rorb mov test loop sbb (bad) sbb sbb outsl jo arpl xchg push shl imul sahf xor sbb mov rol push mov mov popaw das das (bad) bnd sub mov stos mov xchg inc bound push inc jle dec mov and xchg sub sahf call pop pop dec pop ret stos popf pop mov sub lcall push and mov sbb xchg mull inc dec jns or (bad) cmp mov (bad) jne repz sti mov adc fwait xor in fcomip xchg mov cmp adc dec mov push (bad) je xchg add jnp sub aam sbbl or sub mov in aaa outsb out insl xor outsb frstor nop repz lcall xor sub dec pop inc xchg rcrl push imul sbb pusha add into shrl cmp fdivl loop pop jmp mov mov inc push sbb jno push push std fnstsw pop xor inc (bad) lret mov fs mov xorl pop test jl jo push dec (bad) lcall ret sbb cmpsb sahf mov xchg inc outsb mov addr16 cmc mov pop pop or sub es inc std and jbe add jmp sbb mov or xchg in ficom sarl jns jo nop in movsl add inc inc jbe out mov ds pop ds (bad) movsb scas sub cmpsb jecxz imul add outsb outsb push sbb or outsb js int push sub mov xlat sub mov add iret das movsb popf cmp test fcomip (bad) insb push and xor or inc mov test cmpsl pushf shr xor aad popa jns jp cli jle jecxz adc xchg pop rorl (bad) dec inc pop popa stos add push rcr bound mov and xor jecxz xchg and or xchg out add mov daa ja in aam scas mov push xlat loopne add cmp xchg jp pop sub gs or sub sbb jl jns out test xor xchg cs ljmp and lock out adc dec fnstenv sub sub xlat push (bad) repnz mov push inc and push mov rcl (bad) into imul scas push mov jae lds mov inc call push loopne pop mov sub cmpsl es mov xchg mov fwait (bad) test cmp add dec push je xchg addr16 sub (bad) jle mov push adc mov xor jno (bad) arpl daa popf inc aaa dec sub sti pop xor jmp jg mov jl xchg ret loope (bad) adc and lcall ds pop cmp mov out mov mov add sarb imul push sub jecxz mov cmpsb cmc aad repnz sarb mov cmpsb cli inc pop int3 lahf pop mov in adc xchg ljmp shl or scas add sbb outsb shll icebp sub leave add imul xchg ss out xlat les test mov popw out adc inc sti loopne test imul les cmpsl pop sub jae rcll sub lds mov jno insl es mov js jp in pop sbb out lret hlt ljmp into cmp push out inc and adc xor jl nop add movsl aaa iret lea xlat pushf adc cmp lods fs pop incl cmpsl pop add vsubpd orl push xchg fdiv call xchg and sbb sbb mov and outsb les mov ret test rep aam pushf mov mov jp jmp adc (bad) mov jle,pt paddusw rcr mov xor movb hlt in push jne (bad) mov xchg stos (bad) fidivl jmp xor mov xor arpl xchg cs test (bad) cmp add test call test test scas mov dec out sbb push jecxz hlt jl fwait das dec xchg xchg icebp push xchg ss add inc jp mov pop stc in inc dec (bad) mov adc xchg xor xchg sahf bound (bad) pop ret fwait add lea movsb inc jp je mov insb pop popf ss jmp out add sti cltd xor fnstenv dec sbb add fsubl shll adc cmpsl (bad) add dec (bad) outsb xor outsl add test repz xchg in push adc out lock pop frstor adc and jmp lods jecxz inc out mov insl loop test dec rcl fisubr xor iret mov (bad) roll and shrb hlt pop xor inc lcall push fs lahf insl adc mov xor cmpl xchg out xchg rcrb pop pop out sub mov aaa mov mov lods icebp aaa pop (bad) jno in push mov xchg js testb pop (bad) cmp push push fcmovnu xor add inc js fidivl loope mov loopne (bad) in sti jo not push adc fstp les or (bad) (bad) sbb scas pop std lds or push cli dec jp insl adc mov mov nop add clc mov or add test rcr mov lahf shr shrb rol int in inc addl add inc pop fsubrl jge jo jb xor xchg mov sub lea add mov clc std test mov call hlt (bad) mov mov mov jmp pop lods or sub jns es add ror inc fs (bad) into aam dec inc push and movsl lret stos sti imul daa icebp sbb xor loop mov enter cmp xorb (bad) ficoml dec js push das push das dec mov adc add sahf cmpsl hlt jae imul cld imul jno sbb loope bound mov cltd jle arpl (bad) lods (bad) subl and sub jge repnz mov fwait or xchg cli sub cmp stos addr16 sarb int or jnp jecxz jnp adc jecxz inc mov mov loop and addl or mov icebp in outsl cmpsl cmpsb adc xor xor jmp or add jl jbe mov bound mov sarl es adc push loopne mov decl pop pop jmp sbb (bad) icebp (bad) mov lcall test lea cmp inc cmp outsb les outsb clc push sub xchg jecxz notb (bad) xor push sbb test dec dec inc mov cltd fldt jns push sbb push les or das jge call pop gs mov push repz pop lret xchg mov iret jnp daa dec outsb sti adc popa dec (bad) cmpsb inc lret fs fisubl adc rcrl or sub adc lods mov xchg jmp adc push or mov or mov jge (bad) loopne add hlt push or bound pop (bad) int dec push (bad) iret movsb jbe xchg dec xchg iret mov clc ret (bad) xchg xor mov data16 push into xor fwait insl test lods jae jl mov xor out or fsubp dec cmpxchg gs stos pop std movsb bound push jg lds sub adc and inc in lahf push mov js fwait mov int3 out out ror test data16 (bad) mov xlat scas pop fs mov std test or mov outsl pop push pusha jl push xchg fs jecxz jl stc cltd subl jae orb adc pop fwait inc and mov insl xchg ss push (bad) dec inc sti dec in dec fwait and nop (bad) stc inc in mov xor mov (bad) jo pop (bad) inc div leave xchg or icebp mov pop inc xchg inc bound fbstp jge sub xchg fcmovnu push inc xchg mov inc sti popa repz cmp pop scas jae jnp pop std das xlat ret lcall adc enter or push lcall xor mov cs out mov or sub aad das cwtl repz lds (bad) int loop pop jmp mulb daa pop jmp push not pop pop add insb (bad) cld sahf mov clc mov sbb lea mov icebp into dec add jae jl dec mov xor cmpsb adc lcall rcr adc cmpsb xchg gs xchg mov adc push std or mov popl sarl rorl fwait jp ja add xchg sub dec lea lret mov mov aaa cs lock cmp adc fisttp xor out fstpt aas cmpsb scas lods adc pop sahf popa lcall adc movsl mov dec (bad) fsincos xor hlt dec pop dec xchg lret inc mov idiv inc fwait dec movsl xchg inc sbb push xchg inc mov loopne ja (bad) shlb sbb pop xchg inc cmp (bad) mov pop test nop lods push out mov bound loop scas mov jge rdmsr je xchg fwait dec sbb pop mov sbb adc or sub push lahf sbb aaa jge mov jmp cmc or ret jb sub adc rcrl push add adc xor test daa adc jns les fwait jecxz rcrl cmpsl xor scas sub popf es and cld pop and xor mov fild pop (bad) int jecxz mov addr16 xor fsubs push sbb dec mov jne out aaa jl mov pushf mov addr16 jbe repz mov ret jp sub mov mov daa adc jecxz push or cmp push push pop xchg pop cmp mov pop push sub lds or jle shr jo pop pop icebp (bad) or es mov mov loopne ljmp fidiv mov mov sbb inc imul les pop jl add out es jns and cmc (bad) ret fdivr rol jmp pop cs lods in aaa xchg insb add adc lds xor jo mov pop outsb js into pop or xor cmp daa pop lahf adc mov xchg enter (bad) call cmpsb jmp gs pop pop fnstcw pop mov cmc mov aad sub sbb scas scas mov push je adcl dec (bad) cmc divl xor fwait push and sbb pop xchg xor mov mov lret pop jecxz mull jno pop je mulps pop sbb cmp jl sbb push out int3 mov and (bad) ss iret lret stc jne and das sbbl aas mov and and or push int fmuls mov and pop int3 (bad) mov jg aaa (bad) stos pop mov push add dec movsl jmp in (bad) mov xor lock add aad cwtl mov in cwtl jmp js iret push mov imul lahf das and jle pop or push adc popf cmpsb fildl xor add cmp dec loop jl mov mov and push fiadd je xchg nop lcall outsl jle inc push mov xor insl clc dec jns cwtl xchg (bad) fadds repnz xor sub stc leave jl subb (bad) mov in addr16 stc or dec cmp adc test imul sub cmp fnstsw in call dec (bad) lock shll andl sub xor jecxz icebp xchg adc aad out scas or or and push imul out mov xchg mov push stos dec popf xor add pop outsl fimul repz stc shrl (bad) icebp sub or roll xor or ret jle dec stc mov dec sbb fdivrs fcoml mov (bad) mov int3 das mov sbb rorl jbe dec sbb mov cmp mov sbb or lcall pop pop xor insl and mov enter mov je mov imull xor and dec call add jno popa push push jp or adc mov pop stc sbb test js xchg mov adc out xchg inc mov gs imul or and inc jb out mov mov out jmp pushf aas mov inc sbb mov ss cmp add adc std and je jge xor mov inc leave push out and push out ja loopne loope mov cmp pop scas lcall outsb loope pop mov (bad) loopne cmc popa pop mov jle xlat mov cmp out or das fs fisttpll daa loope addb ljmp and jp fildl cpuid mov in fnstcw js pop push sbb cmpsb stc jb adc add inc mov sarl add insb xor sbb mov inc addr16 cld fnsave sarb lds push stc or jb mov mov cmc adc ja pop test fmull adc cmpsl lret aaa mov jno fyl2xp1 sbb (bad) mov clc mov sub push les inc inc xchg xchg cmp inc fsts jb and pop loope stc ret test je (bad) int ficoml pop pop add inc sub shr dec js push push pop loope adc test add mov icebp xchg or push stc xchg inc in stc mov xlat into dec (bad) or sub ljmp inc adc dec loope scas jg mov mov rorl push and stos mov outsl mov mov fmulp push iret mov mov push aam sbb call lock sbb and sbb insl adc inc jnp stos push repz pop dec stos cld inc jnp insb inc sarb lahf (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) aas add incl mov test cmpsb add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add jl add add or or add or add add add pop or add add mull add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add cmp push js in ficoml es sub aaa mov mov mov fucomi fdivs fisttpl out or int3 pusha aas arpl add mov add push mov data16 xchg aaa pop add cmp mov sti outsb sbb sbb mov lds lret xchg pop add aam fdivs sbb inc xchg push lret xchg cli xchg pop repnz jne movsl dec add sub das dec cmp shlb lahf mov outsl mov cld jne mov nop mov div add xchg iret sub mov and adc adc push ficoml push lret cmpsb pop inc and in in dec inc mov in outsb mov cs out divl mov or inc hlt xor pushf dec sahf adc sti (bad) aaa in lock movsb pop or xcrypt-ecb cmpsl mov xchg and add sbb fnstenv fsubrl or adc icebp push pop mov push cmp xor or sub test cmp or push xchg leave fwait xor aam xchg fcomps push jecxz inc mov cmp pop leave mov lods mov hlt ljmp orb (bad) sub lahf addr16 sub repnz imul pop sbb push push jnp (bad) fcoml test cld imul aam out cmp xor test inc mov and or fmuls pop sbb pop jne dec dec fidiv call sti sbbl pop jb arpl jg mov mov jmp sub xchg and jecxz ret mov mov aad adc ds cmp inc sbb xchg adc pop cwtl xchg mov mov fist test cltd test scas aad add sub add fwait test sarb mov xor and in mov add mov inc test loopne movsb xor lea sti xor pushf loope mov adc xlat mov (bad) movsl or aam pop add test mov mov xlat popf or push adc pop dec push imul iret cmp xor int jge cwtl imul subl mov repz jno (bad) insb jge rorl or sbb std outsb pop popa inc mov inc mov les mov jecxz sbb inc sub sbb outsl imul jno sub or fcoms push fildll lods (bad) adc jge bound jle push jb das mov adc pop les jae daa xorl mov movsb popa rcrb add into sub lock push enter mov in push or loopne push insl loop sbb mov dec mov lea or rcrb xchg loopne fild jl sbbl cltd push fsts sbb test hlt outsl mov leave fisttpll push mov sahf ja cmp xchg js shlb xchg jle sbbl pusha fs cmpsl (bad) sub push fcoml dec push outsb ja in mov lret add mov outsl ds in fwait out movsl test or add mov ss and inc das loope (bad) pop adc sbb sbb lods loop fwait mov scas div sti mov out and stos mov dec pop pop xchg mov fmull xor mov aad jnp das sahf es adc lods aad aaa inc lock xchg pop les in push pop inc std sti jno out out nop add mov push or clc cmp push and or mov sbb sbb jbe mov pop movb test push (bad) out fidivr test (bad) lods mov pop (bad) jnp push or push fldenv xor cltd mov and out (bad) hlt incb push inc in mov push mov inc pop mov int xor pop (bad) in out xchg mov lahf sub ljmp mov loop adc jmp das loopne ficomp es sarb data16 pop inc and repz daa in inc sbb mov and mov gs mov roll fwait sarb lahf dec sbb or mov stos aam imul push out push push hlt xor mov les inc sub or xor push (bad) popf dec xchg aas cwtl or push mov clc inc cwtl mov push xor cmp repnz and jno insl int lds pop fsts mov test sub mov dec in loopne mov cmp rep push mov cli add jle adc incb xor mov inc pop mov aas mov (bad) ret popa movsb cmp xchg mov xor inc adc xchg pop push and aam add scas repnz dec js js stc (bad) loop or fdivl loop fsubrl and mov sbb sahf add nop fmull rorl outsb aam imul jbe sub lcall cmp push call xor sbb adc subl fisttpll cmp mov jmp test jecxz and les and sub pushf test dec pop xchg dec cmp aam rol ret cmp mov sbb cld or (bad) jbe in dec mov push addr16 inc mov mov mov ja add dec imul push inc aam ret pusha sbb mov (bad) push stos fildl jno (bad) (bad) or fdivs loopne cwtl iret inc lret xor cli mov aaa push jg xchg lock repz outsb popw int sbb jp xchg mov inc or sub sub pop int in sub dec mov scas scas mov dec mov bound dec mov push mov xchg or mov or pushf xor push xor jo fcompl or jge push jnp pop pop lret push cwtl mov and jg std pop mov pop outsl (bad) pop xchg and ret (bad) sbb lds push lds and js (bad) push mov xchg rcll (bad) loop mov fsubp sbb (bad) xor push cli in mov mov aas xor insb mov jecxz stos cmpsb fimull adc mov popf mov xchg fs cmp (bad) sarb xchg and push push and jne jge int3 das ljmp (bad) cmp ja lock add out fidivl test out fs lahf adc movsl xlat imul arpl loope mov inc hlt sub pop fwait add adc sbb hlt dec repz (bad) sbb test pop push mov lock xchg mov das popf xchg int cmp add (bad) push adc out dec or or outsl lret and repz sub dec pop bound fwait sub push aad negl cmp jge in xor into xor rcrb or jnp (bad) mov jecxz insl sub orb sbb pop xchg inc (bad) jmp mov arpl movsl andb xor lods lret (bad) dec inc inc inc outsl fwait (bad) mov fwait ljmp xchg adc jns mov jmp pop movsl rcll or fildll dec mov in jecxz les mov aad pop jmp mov (bad) leave jnp adc ja rcrb (bad) pusha xchg inc cmp jb or and aaa fs mov loop int sbb (bad) mov outsb in jge jmp sbb fdivp push cmc js sbb imul inc mov xor gs rorb setle jecxz xor lods aam xor lret repz mov mov popf out shll std mov or dec pusha ja push (bad) movsl cli mov xchg xchg sbb lahf std add call repnz xchg dec or lret mov out and pop xor stc push scas lahf (bad) mov or add aam es or cltd push mov jae (bad) hlt push sbb sub (bad) faddp rcll dec bound jg xchg insb insb lcallw mov inc and jb adc roll mov add daa (bad) jmp in adc pop or cmc xlat jb andl jp push push mov loope les mov pushf stc add aas push mov inc inc sbb outsb pop jecxz dec cmp xchg (bad) cmp data16 push lret and or jecxz ljmp lock mov sub repnz jo call std sbb xchg orl dec inc clc repz cmc adc or push aam inc lods (bad) lea imul mov ffree push cwtl adc add sbb xchg rorl hlt sbb jle mov dec in stos xor cmp or outsb arpl loope dec clc es out mov (bad) aad movsb (bad) faddp dec dec xor dec add repnz jle pop push fcoms das scas or out jl imul mov ja test enter movsl push xchg inc in add out jnp xor call xor cmp fwait leave mov pusha or jb xor cld movsb jno test mov mov sbb jl sbb les push rorl jne pop cwtl mov mov in lock jecxz sub cs inc dec mov xor rcrl orps ja ret pusha push push dec into js mov cmc dec in ljmp xor out jb mov xor and dec pop (bad) jle ret inc sbb dec sub dec jge adc scas jge mov sti (bad) xor mov adc repz mov into jne adc jne or fldcw and les ja sti outsl push or fxtract pop adc loope cli mov bound and xchg and sub cmp xor aad clc add mov xchg leave gs jecxz mov cmp jle loop fidivl in aam hlt enter pop inc jbe xchg (bad) mov imul cld jp adc repz loope jle sbb rolb ret out mov mov cmp sbb cmp lret xchg xchg mov bnd in test mov xcrypt-ctr cmpsl pop cld test icebp push popf (bad) mov int3 jge xchg mov sbb cmp loope lds pushf xchg push test mov pop daa dec lds fcoml and insl sbb fcompl add jle sbb hlt (bad) mov sahf dec mov dec xor mov imul xorl into inc leave lahf idivb lahf ret (bad) in adc data16 lds insb in jno lret mov dec jnp loop xor xor jge pop test sbb xchg pop mov movsb cmp ja jne int div mov incb sbb rorb jns in pop mov mov jl pop popa sahf adc or inc sub lods add mov pop fidivl addr16 inc inc or jge xor lret inc and dec adc (bad) loop sub and adc cmc bts in repnz adc movsb gs mov mov in adc stc dec mov xchg mov test out push pusha ljmp aas inc and or inc clc das pop inc dec and xor mov call data16 repnz push fistpll jo daa adc or push add xor sbb (bad) push outsb dec cmp inc daa (bad) inc fstps fnsave mov push daa adc inc leave or adcl xor enter dec or les fldcw cmp rorb rcr jecxz and call inc sbb scas lahf test push or (bad) inc pop jb lods stc scas sub pushf jg xor cli mov sub sub test and cmp mov ret add push xor cmp push mov inc or rcr es loope mov icebp mov lock scas jbe adc lahf cli cmp or xchg in sub xchg ljmp sbb mov fisubl xchg push (bad) imul pop mov sub push (bad) pop add adc mov dec rcrl lock lds or add xor aas mov add and sbb in mov and dec loope xchg lock cwtl lds int3 push ficompl jns popa into fs sbb jno sarb pop jl movsb (bad) scas adc push cmp sbb (bad) adc fs test jg fadd xor repnz fistpl movsb and cs lahf and out mov adc lret xchg int xchg je inc addl inc arpl mov cmp jo xor inc xor jns aaa es addr16 push dec push outsb jnp (bad) xor jecxz cmp inc ss fldenv xor jmp ds xor into jb lds icebp pop fstl fadds imul xchg cli inc ret dec (bad) mov cmp dec or movsb aam xchg orl lods or mov and push lock sbb fs std bound (bad) (bad) dec mov adc scas sbb add js addl dec adc cmc push mov cmp fsubs popa push notl pop sub add xchg lret push sbb ljmp arpl xor (bad) (bad) fcompl and inc push sti cmp inc or enter nop jnp push xor xchg je mov sbb push push stos cld and popf fiadd xchg (bad) ds aam mov js sbb pop dec ret scas rcrl mov inc sub (bad) shll adc (bad) mov xchg mov scas test pushf xlat mov sub arpl js mov and push ljmp push lock jo jo (bad) stos xchg xchg (bad) test hlt mov xchg data16 out mov mov fisubl insl mov ja jg mov add xchg sti popf and mov fxch lcall xchg dec mov fsts push pop aas lahf mov fdivrs sbbl lret jecxz or out mov stos mov out push or xchg das movsb inc popa pusha add mov mov gs inc (bad) inc into aaa decb push (bad) inc cld rorb dec xchg lret adc daa mov sti ja test sti jns adc cmp andl pop fcoms in cmp adc fstpl ss fcmovu cmp sub seta js adc fwait xor into inc lahf popf sbb incl mov sti clc fprem mov mov leave in loope jns sti insl je stos decb clc mov bnd inc sarl push push mov leave cmc cmp outsl dec push clc mov into pop cmp ret push shrl insl push mov ret and push (bad) popa push cmc bound jae jb mov daa insl lods adc inc pop insb (bad) ljmp inc bound jge into ja and cmp das (bad) (bad) mov out stos push out cmp loope mov sub jo out dec mov movsl and movsb sbb bound push (bad) pusha in jns or adc mov decb fldt mov clc in add mulb add mov aam lds push pop leave mov out or xchg icebp out pop in cld cltd inc ret sub std sahf movsb addr16 test pop int mov data16 xchg sbb adc sbb cltd mov dec adc mov movsb fs loope pop cmp out push ret loopne or imul xor std cli or inc xor mov hlt shrl lahf incl cmp cli sub pop cmp stc xlat (bad) pop outsl out xchg jp (bad) flds or mov push test and push int3 xchg add (bad) je jmp pop dec xlat dec cld insl and clc mov std mov imul sub sub arpl adc and mov sbb (bad) sub (bad) in or adc dec lcall scas pop mov insb jbe and ljmp add iret popa adc std and dec aam fcmovnb enter stos (bad) jno getsec pop fs push sbb or add fist push gs je mov mov loopne pop xlat and imul fs inc mov rol adc add cmc inc inc popa or pop enter daa and sbb sub mov jmp dec or jne repz xchg sub fimul addr16 mov mov je adc pop popf and dec add or dec xchg sbb mov sub fnop adc mov sbb loope xor or sbb push jo imul into pushf aas insb adc xor iret push jmp scas (bad) in lret scas pushf inc pop hlt push push and mov inc rcrl mov xor mov mov cmp shr sahf bound (bad) rcr sarl lods inc pop cmp ds pop ss cmp aam pop rcrl mov mov stos imul cmp dec arpl clc and push lea sbb cmp add cmpsl sbbb dec dec stos lods mov fdivrs mov add dec cwtl scas das (bad) xchg imul lret shlb outsl mov push in insl sarl lea (bad) shlb (bad) and test dec cltd roll inc sub call jmp xlat push nop (bad) dec (bad) pop mov mov andl fnsave mov mul adc jb jecxz jbe pop jb into add adc mov aam (bad) push sbb mov lods nop cmp outsl das mov jg scas inc and rorb cmp xchg sub enter pop push jnp daa jg test mov outsl movb int3 mov adc in jle repz scas cwtl pop sti mov dec sbb loopne sub les push ret sbb orl cmp fistp add and cli mov xor push je cltd mov ljmp lds (bad) pop movsb ficoml sub leave mov mov adc mov pop xchg icebp adc inc out nop mov insb pop lcall dec pushf mov jae jbe cmp jo lret dec inc ljmp ficom jns inc sbb pop sub das xor fcoms in mov jecxz in mov ja xchg hlt lcall stc pop shll cwtl xchg and mov push dec mov out fidiv sub lcall jp daa popf cs push push (bad) xor add push rcrb lea mov push jbe push ret xor inc lret test jmp out add pop out mov pop out dec and jl aam xor mov pop out or and repz inc aam ds mov (bad) mov and mov mov aaa pop movsb lods cs rcrl sti or mov leave sub jbe push mov aam icebp aaa pop push push ret xchg std orl jmp call jmp lds xchg (bad) aas repnz cltd mov fcmovnbe pop mov loop (bad) scas mov js cmp and (bad) mov and mov in out jle mov int jnp cli xchg or popa out xor and cmp outsb das (bad) jnp lahf psllq pushf or push jmp stos leave mov push rcl das movsw mov movsb mov fs fwait (bad) xor shld sbb sbb pop sbbb mov out cltd jns lods add sbb (bad) cmpsb test enter mov out or js,pt inc and scas push push jbe adc push in test into push and xchg mov and sub fstps sahf adc data16 rcll and add fnstenv adc (bad) idiv xor cld xor test xchg out fnop stos in lret lea insb test mov fmul add mov je inc mov lcall push in xchg mov das test jbe pop in push loope pop push sarb dec rcr lock int3 fcomi js xchg mov jle,pt or dec fstps push add mov mov jns push out push mov leave and jae fdivrs pop fild cltd push dec and mov test jbe xchg (bad) sbb lret (bad) ds xor movsl fisub push dec (bad) xchg rcr add push pop movsb ret push sbb jp nop inc (bad) pop loopne (bad) jmp stos jnp es push xchg push stc iret mov ret adc xchg ss cmp sub enter rcll and gs frstor mov mov pushf push nop cltd int3 data16 jge xchg daa pop iret stc stos push es loop in cwtl mov or xor in scas repnz cltd imul repnz inc rcrb imul inc fcomps dec icebp dec gs dec movsl or dec jns int3 imul adc mov stc sbb mov fldenv jo pop sub push adc lock addr16 iret or test clc fimul pop fisubrl inc clc enter mov sbb ja outsl push mov adc scas nop sub xchg xchg adc mov jg cmpsb cwtl jmp lea lds xchg mov pop pop lods dec pop bound roll dec pushf sbb sub push les and pop out mov inc mov sarl jb ficom mul clc js or jl scas dec sahf or imul mov ret add push (bad) pop cmp int or repnz adc sti jae outsb test ljmp fcoms add mov pushf and push xor stc popf cmp (bad) jle shlb (bad) out stos and cmp mov jmp nop repnz add ljmp test das mov inc inc out not mov mov push xchg xor xchg push mov lret mov xlat cmp imul add jns je (bad) dec jnp rcrl pop jge xor cmp xchg repz or or in frstor fisttpl lcall mov mov xor repz and lods in out adc and sub mov adc loop cwtl cwtl loopne push dec inc xchg jecxz scas adc std popl pop cmpsl cli ja dec push mov sti popl mov adc pushf ljmp adc mov cmpsb imul negb nop inc ja scas adc imul bound clc inc mov xor push nop mov daa add cmp out sbb push sub clc cwtl in repnz dec push andl pop rcll xor arpl mov aad into out stc insl mov add inc cltd cltd jp in mov movb xchg mov pop scas (bad) cmpsb xchg aaa daa into pop cmpsb ljmp testb test sub inc mov aam cmpsb sbb lods or (bad) adc push scas fwait sbb push ljmp fucomp movsb hlt fsubp pop dec (bad) int3 pushf pop xor lods pop (bad) mov or popf pop andb xchg mov aad lret pop xor jae lahf pop loop,pn and push add dec sub xor jmp rorb sahf hlt inc or addr16 mov xchg rolb fs lods xchg lahf cmpsl pop lods mov in fstps bnd sub icebp sbb push daa xor and xor outsb xor dec popa ja mov push pop mull fmul mov lock lcall jecxz xor lea (bad) inc xchg add (bad) lahf rcll imul je inc xchg mov testb cmp or imul gs into cmpsl popf outsb bound lcall cmp dec not iret adc adc cmp (bad) icebp clc jl inc cmpsl icebp jecxz sub jns out imul stos icebp sbb jl xor inc je sub sbbl pop (bad) outsl lods lods mov sub xchg xchg psrlq ljmp es jne sti ja pop mov popf (bad) loope add jg movb cli fs test adc adc in pop pop mov loopne push cs dec ficomp jbe mov ja cmpsl inc xchg mov ret dec push fsubl mov movsl dec pop divl loope mov scas cltd lret fstps fs sub cmc push loop push std inc call out scas mov test nop out jecxz repz jg out sub inc pusha pop lret xchg mov mov inc jno inc test (bad) ljmp stos insl mov fildll movsb or dec out sbb icebp mov ja jb ficomp mov mov or loopne not mov sbb repz sub push adc (bad) cmp push lahf aas adc imull loope add dec push xchg mov pop andb add callw inc jns bnd insl jns mov fldenv push or shrl leave mov mov mov mov push jo add stc fldt adc (bad) dec es cmp pop sti mov movsl mov insl inc adc ja add pop std jae xor sbb xlat inc aam or jbe or (bad) ds mov (bad) mov and aam imul clc test xchg (bad) or dec mov inc cli adc mov subl sub mov test xchg mov xchg cmpsb fcomps (bad) repz mov cltd cmp je aad jl mov sbb xchg add jl das mull xchg (bad) stc loope popa push rorl add (bad) icebp pushf jno mov icebp cld pushf ret sub (bad) jmp (bad) icebp jmp mov fistpl pop (bad) (bad) loope xchg cltd fldt loopne adcl adc and into sub orl mov int3 mov ret sub test sub mov (bad) stos cmp inc xchg out ss inc push sbb dec frstor pop fimull mov mov aad movsl sub ret or out les mov xlat mov push or jp cmp popa fmull mov mov (bad) fisttp dec test ret cmc insl scas mov aad icebp lods push repnz pop push aas or and push mov (bad) pop push pop jmp movsb in sti mov lods call addr16 pop arpl or lea inc or cmp xchg sub imul push adc aam (bad) inc or iret jle into jp lcall test mov roll sbb leave lds ss mov aam mov jae and rcrb xchg fstpt or mov inc push int3 (bad) hlt xchg fimul lods cltd loop stos clc pop (bad) xor cmp or in sbb jae pop incb or cltd js sbb xchg push mov das sub hlt icebp push stos repnz cmp pop pop ljmp xor cmp ljmp das gs loope fadds repnz outsl ret add sub cmpsl inc cmp cli sub ss ja fisubrl sub test lock jbe jne dec sbb cmp or jle jmp push loopne push add or movsb aad pushf imul in xchg or ljmp clc fiadd mov cltd and adc test test mov mov xchg inc sbbb mov fwait mov inc pop or ljmp xchg mov dec mov jo and iret mov adc jmp xor dec xchg cmc lea out leave imul xor fbstp in je mov dec in mov rcl pop cwtl lods int in fist lcall or adc sarb sub push rcll cwtl movaps addr16 pop aad fwait stos push push cmp jmp addr16 dec pop sbb cmpsl dec sbbb (bad) xchg fcoml test test cmp cmp push pop loope test xchg xor ret adc mov bound loopne mov daa mov ds nop pushf mov sub incl popf jmp adc push test add in push add mov xor inc push sub sti mov mov ja push xor xor adc fcomps or stos rorb lahf xor daa mov jo mov cli mov ret jo mov add dec lock push jl daa jns hlt mov mov pop and aam xchg sti (bad) lds ds mov cmp mov movsb sbb jg roll movsb mov mov pop ret jae lock push pop (bad) mov jge sub frstor mov dec dec outsl pop je ret add mov sub pop movsb sbb stos jo test and xchg mov push int3 dec stos push nop mov movsl iret mov jb pop scas pop (bad) mov sarl cmpsb lods mov je lods ficom add mov cmp push sub sahf loopne sub jecxz sub xchg and test sbb dec stos jns fist lods and das rclb push das and insl xchg stc cmp aam test mov (bad) in stc movsl push adc jbe leave (bad) hlt ret add dec xor testl push pop dec roll xchg jmp push xor les mov fcompl and inc sub jno mov sbbb fstpl cmp add dec push out aas add iret mov int sbb jne sub das (bad) mov mov xchg arpl mov jne adc xchg in sbb outsl andb inc ficom dec or cmp jb ja cld ret loop xor add adc in psubw jnp cmp and mov sbb pop push ds sbb mov cli mov into daa clc sub push and je pop add cmp mov sbb sub sub cwtl sbb sarl mov mov adc inc xlat lret mov clc addr16 pop xor add aam jne push aas adc dec pop xchg pop mov sbb mov cld xchg loop dec jg into insl fnstenv add push mov jl daa repz push lret popf notb cltd stos mov mov mov (bad) mov dec out adc xor xchg into add jae mov sub fwait xlat lahf dec (bad) mov sbb pop pop xchg lret imul jo cmp sbb or je ds aad in mov mov cs je pop shlb push dec xlat mov fldl pusha sbb mov push and stc test cld adc xchg popf (bad) loope fwait push mov (bad) mov mov clc sbb xchg lcall sbb out jmp push enter mov mov push inc add xchg dec daa xchg xor icebp xchg stc sub or out movsl cmp xchg lcall clc pop push (bad) jnp push or fs inc adc or lock int add shrb dec mov test xor imul lods mov test and in xchg insl ss test jl xor mov adc mov fsts cli sbb aad fisubl fsubrl pop xchg js into xchg add push shlb push je cmpsl fwait add repnz or pop into add out dec sub jns sar shl ss cwtl xor rol scas xchg test arpl xchg (bad) sbb cli aad mov pop pop into cltd fbstp and cmp nop push pop dec inc loopne push sub and into dec inc cmp sub test pushf enter mull arpl flds push in int lret or (bad) cld jo cmpl inc stos mov mov iret and aam test inc push psrlw push icebp vpcmpgtd cmp sbb icebp ret or and push aaa iret (bad) pop jmp les stos (bad) cmp std jns mov out inc xchg clc daa leave pop cmpsb inc (bad) and or test add (bad) add or jl aad fistpll mov mov mov adc or pop and js imul cmp (bad) push dec xchg cmp test in call movsl dec mov pop loope cmp hlt fwait mov jp xor pop mov test jns imul cmp jl jo sub jnp int lret out out dec cmp (bad) mov ss sub inc (bad) inc repnz fidivrl aad mov lods or push pop mov fstpt and add std push mov lret cmpsb xchg out mov sqrtps mov ja mov add je int repz mov rcll add adc fbstp nop fs ljmp mov mov and mov aas jmp inc jbe fildll leave sbb aaa shl adc outsl loop out lahf push jl ja sahf cmc outsb lahf or cmpsb push add and xor fbstp jge (bad) imul das mov mov mov in mov push or add (bad) mov in and outsb (bad) push push das or lods sbb jp inc fwait inc cmpsb jecxz imul fbstp outsb into mov xor or cmp inc lret pushf in cli mov dec push rcl movsb bound and and clc sub fwait mov cmpsb and mov push test cmp jge call sub pop insl pop daa xor cmc dec and std push shll sbb jge cwtl and pop fldl cmp xor xchg cltd add mov pop (bad) xor mov fisubr sbb cmp push sub movsb outsb push clc jle cwtl cmpsl int mov in call and dec sub out fmulp repnz (bad) push les in fstpt sub bound mov sahf push into lock shlb and lods loope cmp add add mov cmp jle mov (bad) xor lods push mov outsl mov pop test in sub bound dec int repz sahf faddl sbbl sar aas roll ss push cli stos mov insl mov arpl mov outsb je (bad) (bad) xor dec movsl jnp push push add sub les aaa cmp stos push or sbb sahf in or dec push mov lds shr add movsb sub cld outsl mov jg insl jbe (bad) jne arpl pop and pusha popf cmp test mov in xchg jge (bad) mov ficompl mov jo cs arpl loope dec adc pop dec jb adc test pusha rcrl mov fdivl movl sbb push sbb jle cld sub cs lret mov push (bad) push push dec inc stos std xor mov inc mov fisubrl (bad) ret jmp test push cmp insl jae add add mov test shrb cmp jnp movb push add addr16 pop repnz dec pop imull cmp test arpl or ss mov addr16 testb cmp imul arpl fcomps rol push stc cltd repnz pop add sub pop sbb mulb imul xlat out sub jmp adc inc dec out testl dec insl dec inc fwait cmpsb cmpsl mov stc xchg (bad) cmpsl or clc and cwtl xchg aam orl (bad) xlat lds and lret loope push pop js or pop push cmp call aas push jae inc mov mov sarl pop push sarl push movsb mov xchg sub adc push pop push test (bad) idivb ds sbb add mov or xorb push stos jo add cmc loopne sub jp es dec adc scas push stos out leave xor add mov xchg bound lcall or lret mov mov (bad) (bad) jnp xor push nop and cmp cmpsl stc xchg pushf inc pushf iret mov inc ja lods sub dec int3 arpl mov sbb adc das cmpsb sub daa jb imul or ljmp pop pushl insb cmp dec int rol sahf mov scas xchg fstpt pop or popa or das sbb rcr dec pop add sahf mov enter push xor int3 scas xor jne mov testl push mov outsb clc in insl cli sbb push es mov cmp enter insl pusha sarl xor fs std xchg adcl ss push fidiv pop xchg cmc lods into ss push inc add je test adc dec pop icebp add sbb lret push mov testb sbb cld ljmp push add pusha js or ret push shlb add (bad) jns cmpsl xchg sbb daa int3 inc push dec pop fmull inc xor lea cs ja jle sbb shll rolb and sub sahf jbe subl cmpsb pop or iret mov pop div lea mov shr stc stos push inc std jl std xchg and (bad) int3 insb popf shrl nop and xor inc imul (bad) cltd xor les mov and jo outsl rcr jmp (bad) cmpl cwtl out outsl xor les xchg sub hlt lcall sub jge call push imul dec pop mov jmp mov es enter ret xchg push repz jo fidiv push std hlt jp (bad) cwtl test (bad) xchg fidivr or stos ja or or ret rolb nop jp pop mov jae mov or ljmp adc mov enter int movsl sbb adcb pop test and lret pop mov sahf mov mov (bad) sahf adc lcall (bad) cmp hlt push popf ja cwtl cltd fmulp adc pop xlat jmp mov inc or fdivrs inc and adc add pop outsb popa jae mov jb fldl2e out inc add cltd xchg jl mov in cmp insl cmp add dec or stos mov push mov fdivr sahf fiadd clc ret cli vmovdqa mov mov icebp and pop mov out pop daa sbb jns pop jecxz call lods loope fcmove xchg rcrl shlb sbb (bad) fisub shlb fwait cmp cmp iret mov lret and push adc inc xor mov jle dec mov push sub hlt outsl adc notb xor gs (bad) sbb cmp aas jge cmp adc dec inc fwait push shrl jae sarb jne xchg xchg popa (bad) xor ja das stc jns stos mov xchg hlt cmp into arpl fcompl push jmp aad cmc xchg and pop pop lds xor sbb lret cmc je into jns (bad) dec sub mov aad aas stos push in cwtl loope mov cmp jecxz (bad) lahf and es xchg (bad) and adc mov jmp int3 xchg cmp add imull dec dec push pop pop out out cmc into lret scas push push dec gs stc fs add cmp xor mov addr16 inc mov cmp in sbb xchg or jb (bad) inc scas cmp cmp mov out pop pop inc pop add fs mov jmp xor and push stc xchg mov adc xchg (bad) push dec stos jbe xor dec (bad) jo sbb fstpl jae lret out mov xchg jle ss loopne mov outsl cmp add jl insl mov jns add jno arpl aam cli mov adc sarl iret out gs stos xor mov clc adc ror adc mov xchg xor dec je jp mov cmc lods es adc dec add adc jns rol xchg pop in rorb lret or cmp mov fwait mov lods lcall ja in mov jno mov push mov rcl mov insl in je insb inc test mov cmp sub stc mov mov add push push or call inc in fwait xor ss inc loopne cli jl hlt inc add movsl icebp mov lods add mov clc dec dec xlat dec aas dec mov push pusha pop mov das jnp cld jle (bad) repnz push test push pop (bad) mov xchg (bad) subb iret mov test adc ret xchg cs jb pop js lahf or lahf inc inc cmp cmp aaa in popf push data16 les mov and dec add testb cltd mov jne jge loopne cs lods divb ja scas imul popa mov adc pop add rclb push jbe mov inc stos gs mov insl mov loopne lods test in bound xchg lea pusha (bad) loop and cld rcrb or dec adc cmp cmp enter pop lret jbe mov test jmp mov fwait dec in cwtl mov xor dec (bad) mov push push pop push xchg addl fldenv outsl (bad) cli pop imul push insb mov mov mov loopne mov pop test lock scas dec mov dec out cmpsb loope push leave pop push loope inc dec mov das int3 fiadd daa xor push mov push jl mov out imul xchg mov fistl and sti outsl mov xorb xlat daa les pop xchg repz and (bad) out and popa inc pop jmp into mov or aam mov mov bound adc xor pop mov sub repz jbe cwtl (bad) mov add lods sahf roll mov (bad) rorl in adc pop outsb mov addl ja cltd push inc add gs lods leave sub add mov mov imul mov dec lgdtl push jo pushf in dec cmp mov xor adc (bad) mov sub es or iret and push pop lods pop inc es inc jno pop icebp cmp push push ja jb sbb repz sub mov out nop sub test (bad) jnp into mov inc stos or cmp push push test push psubsw (bad) (bad) xchg mov fidivrl mov insl loop mov mov add dec ret dec (bad) cmp loop fdivr xchg push pop in sbb xor push mov jge mov xchg outsb dec mov fsts jg fsubrp iret adc jb jbe lret test roll cmpb and mov dec and mov repnz push push add xchg cmp scas ljmp or ds out loopne in pop ds or dec imull call xchg sbbl xchg ds (bad) xor mov (bad) mov inc shrb lock jmp out imul and adc lret cld popa es cld fwait sbb pop jae adc lods movsb (bad) xor imul jns ja shll and add or sub mov mov insl jg into xchg add push aam icebp scas mov xlat pop mov jnp add cli stos push stos andb pusha fstpl mov cmp cmp inc mov pop (bad) daa icebp loop int3 es mov (bad) jmp and sarb dec dec mov leave js mov repz hlt movsl fnstsw (bad) aas mov mov xchg in clc sub add lahf xor jle push gs dec push ret push lds inc cmp mov adc mov xor dec inc push mov mov js popf cmpsl pop cmp ds sbb out into psubb pop mov xchg icebp ss cmp push sbb adc sbb sti cmp cli outsb cmp cmp mov mov mov sti mov mov pop jnp push popf dec mov sbb xor fsubrp push ljmp jo lret and jecxz pop add mov xor cmp test pop nop fsubr cmp jle cli and mov add aas ret adcl cmp out sbbl sbb icebp loop divb scas cltd aam jo sub jbe std inc or inc in adc fisubrl mov jno cltd jb sarb (bad) jns int3 ss and loopne jmp roll push (bad) out add sub push (bad) outsl add inc movsb and dec inc mov xchg pop sbb mov (bad) mov ds mov das mov add pop pop fstpt sbb dec xchg mov pop add sub lcall jo dec pop inc dec dec insl scas add pop push pop mov in pop cmp xor movsb add fimul (bad) cmp xor hlt pop jmp pop aad jnp and mov lret jns fs popf out pop cmp loopne xchg popf loope lahf jne sub bound in fxch repnz push cmp push dec in and loopne dec (bad) fidivl out jae mov xchg cwtl fimul sbb out xchg pusha inc add cs xchg mov jnp gs fmull mov hlt cmp xchg jecxz mov out xchg or sbb inc movb aam mov notb aaa popl sbb jno cltd imul jge lret push lods mov dec (bad) jl lods pop shrb and mov cli inc push jp xor mov push int imul jno scas push cwtl shlb mov add or rcll out rorb sub fsubrs pop jae mov fnsave jle popl cmp mov xchg mov lret movsl sarb in or xchg imul movsl cli cmp mov js jecxz add push mov les je pop lret gs jns and or pop jno in sbb sub cmc loopne jmp xor sbb sahf lods ret jg repnz mov (bad) out and repnz xchg push fwait scas cli clc mov in (bad) outsb scas xchg gs or mov pop or out (bad) ficoml xchg jo test aam jle es push stos mov or add out lahf test lcall sbb cld enter sbbb push lretw lock adc xor jbe ret jo and mov dec or cmc mov mulb inc cmp (bad) mov cli ds in into popf pop negl aaa mov out jno clc jae pop add mov inc aad pop lods xor cmp les and cmp in sub add iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) clc aas lods fsubl pusha nop push in add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add js add add or or add or add add add pop or add add mull add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add cmp push js in xlat add rcrl insl (bad) fistl insl (bad) repnz or inc inc and shr add inc add dec (bad) cmp call push test scas pop and inc int dec in rcrb pushf ret test cmc push add sahf fldenv dec cmp xor sbb lods sub ss sbb push or mov inc mov xor push or sub pop add mov mov sub fstps push movsb (bad) mov ss mov fistp cltd int3 rcll xor out (bad) xchg enter or add jge loop and jbe push pusha mov insb addr16 fimul inc sbb iret (bad) jg divb push loop stos jne cmp cmp mov and sub inc sbb mov cmp loop and mov and jecxz push icebp imul xchg jno pop jle push mov jbe adc push iret rcll fwait cmpsb outsb data16 mov jne pop add mov scas insb andb data16 inc pop mov fsts xor outsb xchg jo hlt call scas ss js fldcw add nop stc inc jecxz insb imul in dec cmpsl icebp loop mov adc pusha cltd ds xchg inc aaa repnz mov ss xchg mov inc or or dec test jae push fs fisubrl out pop mov test jg pop shr push lret stc cmc cwtl xchg repnz int xor jne and inc arpl (bad) push mov mov jne mov pop push iret mov popf cmp pop in jnp mov test push imul cli sbb cmp push (bad) mov in lods das loopne jb or roll or insb cld rclb dec das jae xchg sub int imull cmp xorl mov inc adc (bad) daa scas aas mov lods pop or pop (bad) sbb mov xchg add or in lods fwait mov loope jns in sbb pop jns hlt daa sbb fsubrs stc mov xor mov dec add dec insl jle std in mov mov pop gs sbb (bad) ja adc roll xchg push add inc call lret cld icebp enter insl pop nop mov std leave and inc add in adcb (bad) enter scas loop fs and incb sbb add cs xor push rcr mov jl (bad) xchg add pop or lock cmpsb adc pop negb repz fisubrl (bad) ds out jg enter call adc (bad) mul pop sub fldenv fs in insl mov mov sbb negb xchg pop mov call pusha loop add jecxz (bad) fnsave in mov jmp jp,pn pop pop ficomp cmp cmpsl test xchg xchg lcall or aas jecxz xchg sbb sub adc mov cmp (bad) sbb jg jecxz mov mov inc pusha xchg xchg inc mov stos sub shrb adc rcr xlat (bad) xor fidiv push mov (bad) fistpll in inc mov lock xchg (bad) aam scas and lcall repnz jno inc dec scas daa sub or push pop int3 mov adcb adc or xchg (bad) imul lds lret ficompl ret mov cltd ja and inc xchg cld sub daa jns ja push (bad) jnp lock mov inc test into (bad) shrb (bad) loop sub lods mov xor xchg inc mov dec push and jne rcrl mov mov dec insl cwtl xlat lock popf out xchg movsb jg pop inc xchg (bad) ret mov xchg xor stos sbb push out lret les jo fstl negb cmpsb and mov adc and xchg sub adc xchg imulb jecxz movb inc jl sti cmp mov into jne mov shrl inc jmp stos cmp dec pop lret xchg push pop mov xchg lea aaa lea mov xor rclb test mov aad int icebp or ret popl fiaddl jne dec inc or es (bad) xchg ret pushf cmp pop out jno movsb rorl sub enter push lea popf cmc inc lcall jge (bad) inc bswap cli movsl arpl repnz inc mov data16 xlat or hlt aad push in adc mov xlat loopne je mov mov movsl dec fsubrs or repz dec sbb mov notb mov mov sub ret jecxz xchg out in aad xor outsb fsubs test add sub inc jae mov pushf sub xorb fist cmc jbe or or and ret push pushf xor push xchg lock mov aaa xor outsl jnp fidivl pusha (bad) bsf adc mov out fcomip daa xor inc jne into into dec mov jle and clc sbb repnz lods pop mov xor mov (bad) and les inc dec sbb cmp fnsave out cmpsb push fstl cmpsb add sahf dec or and mov insb in jmp fdivrs xor mov sub call (bad) pop add mov sahf stos jp mov mov and ds push push lock dec push and leave loopne push pop or mov mov lods add sbb add fwait sub mov jb add lret cmp lcall mov sub pusha bound bound icebp sub jns push jl (bad) scas out pop ljmp movsl add mov dec mov sti xor ds jmp sbb mov cmpsl arpl xchg (bad) lods pop pop dec sbb sbb imul cmp mov jnp dec mov jnp xor xor cwtl sbb xchg pop pmaxsw mov inc or gs (bad) leave jmp shrl mov jne and cltd lock out add push mov movsb insl hlt cmp js xchg leave ret fidivl or imul call sub je outsb les fwait mov sbb lods or insl cmp cmp sbb and add or loopne add scas pop cmp out pop repnz add xchg cld cmp out insl mov push int3 rclb jne stc insl sub adc mov cwtl ss push xchg in xlat sbb out dec sbb push int3 (bad) pop stc adc jp fidivr inc idivb mov pop ficomp jge push decb sahf pop arpl rcl cmp aaa adc mov hlt imul notl loopne mov arpl mov sub lahf call mov mov test pop movsl (bad) call add outsl add push and (bad) ljmp incb stos adc push inc inc sub sbb decl sub xchg push mov inc jb add inc inc ss call dec xor inc or jne ljmp pop mov mov movsb dec popf push scas push movsb mov int3 adc push cmp dec scas js (bad) dec xchg xchg (bad) hlt rorl sbb and mov cwtl clc pushf (bad) mov test mov lock or cld lret insb cli sbb fidivr das sub xchg ja dec or pop jmp or lahf (bad) (bad) stos cmp loopne adc test in mov mov loop in xchg xlat add push xor inc sub mov xor sub xlat sbb mov rclb mov sub xor mov jne inc lods or insb xchg ret mov in fwait cmp sub ret faddl shrb hlt cs inc mov jo stos movsl mov push xlat xchg imul cmp aas pop adc shr jb add mov mov add (bad) push inc xchg mov xor adc hlt jo dec mov ja xchg xchg cmp notb scas sbb lods jbe icebp movups in inc movsb into jp sbb sbb movsl cmp clc les mov push leave add insb mov aam add push mov mov jo ja xor sbb subb pop xchg outsb loopew push lds addr16 xchg aad cs and jecxz fnstsw inc pop mov movsb push rclb loope and add dec cmp int (bad) xlat arpl cs icebp sub lret (bad) sarb push xchg xchg fdivrl insb test jg ja mov mov frstor push jns adc and je jp push jle sub lcall adc xor fwait mov pop jns xor push xor es mov js cmp xorl daa leave push xlat jns fcompl out push aas dec dec sahf call cld adc call daa mov xchg cmp out nop dec in pop into inc mov std and leave les icebp fmuls mov mov fdiv mov sbb in add xchg lods mov cld rcrb cmc test push pop fistl les push jo push mov (bad) inc leave jmp mov cli adc jae sbb jle cmp fsubl inc test sbb xchg bound xchg push sbb sbb jge cmpsl pop (bad) and addl fldpi stos movsl jecxz fsubrs es lahf sub bound repz enter inc enter push in and jnp andl std xchg adc dec inc jle pop idivb jb cmp ficompl popf cmp sbb mov aam xchg aaa inc ret aad jp,pt xchg xchg gs loope inc pop fmull xor or lea aas sbb sub push stc jecxz dec pop incl xor pause inc arpl mov cwtl in fwait pop outsl ja xor lcall lods repz outsb mov add mov sub jbe mov mov fbstp lret roll mov jecxz andl sbb data16 jne mov mov (bad) addr16 das mov rorl inc cmp pushf (bad) dec inc pop jae mov cmp jno int xor leave cltd mov dec fwait xchg ret add push in jns js xlat push xchg (bad) mov imul xlat xchg add fbstp mov jmp inc icebp je push lock adc xchg pop inc jnp aam stos mov jbe out aam mov scas jp in dec adc fidiv push jb jno mov xchg dec and inc add dec mov mov int3 test movl xchg sbb mov jge xchg pop notl inc movsl inc cmp daa insb aaa mov lcall and jp (bad) int add adc sbb ljmp iret dec xlat test ljmp lcall movsb mov jmp insb add jl sub fnstsw xor insb inc (bad) sbb lcall scas pop hlt jae xchg out sub mov inc je xlat mov sbb neg leave push xorl mov mov pop mov pop movsl test pop dec hlt mov cld push or mov decl xor dec cmp sub mov lahf imul ret pop enter out sarl jne popf xchg xchg movsb rclb ret cli push out cwtl adc sub inc xor (bad) xor mov fwait pop (bad) or sbb mov shlb pop add cmpsl jge sub pop push inc push ss xchg or jbe sbb add test and dec flds cmp sub mov inc ret test repz xchg dec jb decl inc inc mov popa sbb push xlat es mov dec loop sub jne test gs cld sahf mov xchg cmp or fcmovne dec mov mov mov repz adc stc call popf psrlq pop fldl dec pop iret insb arpl repnz test pop ss inc push bnd or lahf pop jo in sti mov xor scas je mov cmp jae in incl hlt push push mov out mov dec or je dec mov fadds (bad) imul mov sub insl pop sbb cli hlt jnp jns test sub les sbb sbb or out jmp inc loope mov movsl hlt xor hlt pop sub mov push inc ret jno sbb stos mov push sbb sbb repnz fildll mov adc mov shr cmp les fildl or mov imul fiadd adc cmp loopne push test rcl xchg (bad) loope mov push js sbb lahf pop aad imul je adc movsb (bad) inc loope cmp mov xchg sub mov es pop lea mov xor jmp ret loopne mov sbb ror or inc inc dec leave cmpsl stc push mov loopw (bad) push test adc pop out pop in and mov jno pushf fwait and cmp xchg std call xor int mov inc mov insl lret rcl mov push icebp pop hlt mov mov mov xchg pop push arpl aam mov das mov stc repnz data16 dec add xchg cmc pop cmpsl pop leave xchg mov loop sub ja loopne cmp enter push xorb std xor cmp stc sub or mov ret fldenv aas outsl xor jmp push cmp aaa loop ret adc add cli inc xchg in in xchg sbb xchg pop and ja pop insb jge jmp jae outsl popa sbb jns fwait sub dec mov jne fldcw das int3 in jp mov mov lret rorl pop sub ds cmpsl adc xchg pusha dec push xor pop pop (bad) dec cli mov xchg push or test ds mov sub je mov dec and mov insl into rorl mov repnz sbb ss mov push fs fstpl loope arpl arpl ret (bad) xchg cwtl push adc iret cmpsl fdivrl clc sub pop dec pop sbb nop inc jl dec sub jmp push and sti rorb mov xchg insb mov jmp and imul ja (bad) pop jnp hlt add xor leave mov cltd xor jmp lods mov dec pop lods xchg fwait insb stos push xchg adc stc or into lcall aad sti push aad inc aad mov xlat xchg pop push sahf out aaa sahf jne sub push inc dec out xor inc pop repz jg mov mov mov mov fisubl jb jb pop fsubs neg xlat push stos mov (bad) movsb xor xlat (bad) pextrw jae mov pop (bad) fsts repz gs rorl pop int3 cld push movsb popf sub push inc inc lahf mov andw sti xor mov sbb jbe inc lods into scas lret mov and out jbe push dec adc inc dec pop jp pop enter sub imul cld jle gs sbb adc push cmp stos (bad) cmc lahf enter ja test ss mov xchg push xchg jmp xchg or into bound jecxz push frstor jnp cmp stos dec dec sub movsb push (bad) xor add add lods xor das mov add push (bad) lahf jge jbe push pop (bad) mov xor pop std pop lea pop jecxz notl das fsubs rorb cmp mov push adc push data16 xchg jp movsb adc (bad) mov insb dec xchg adc push lods jg xchg outsl jle sbb movsb stos xchg (bad) sti fwait cli jge xchg and hlt dec call add adc call popf cmp popa add aam pop inc xchg je xor mov fimull stos (bad) ffreep outsb test sub outsb xchg xchg sbb and push jg leave pop pop aaa adc loopne outsl jns xchg jne lods sbb dec aad dec lods outsl xor fs or (bad) mov push aas push lods lret rcl jmp push loopne ds stos adc and push scas lret mov mov xor test imul xor xor faddl das test in mov mov je icebp add in mov fstpt std mov int3 jns fidivl es inc push xchg cmp lea mov stos adcb cwtl xchg jg test cltd push push aad adc jb fstpt mov ja ds jl es add call js aas test imul ds (bad) ret je bound shll ficompl push jns gs and xchg das enter push sbb pop es outsb nop jne and sti mov xor jnp sub adc cltd add mov and sub or pop rcl cmp cmpsl push cli jnp mov int lret fldl2e pop jp or pop mov xor sub mov push mov mov jbe ret enter cmp and and pushf cmp mov aam (bad) repnz sbb push jae sub jae inc ficomp popf sti mov inc cmpsb cmpb incl jmp inc aaa jle movl mov test add aam mov xchg push (bad) mov sbb and pop jg inc pop mull mov push and out pop out lret xor cmp jbe in add xor inc dec jae aaa cld jb push jl outsb imul loop paddq jbe sub or sbb sbb fiaddl xchg mov sub fcoms adc pop repz ret ret movsl popf sarl nop aaa xchg mov pop popf out (bad) negl mov dec push cmpsl inc shrl lods ror sar pop mov popa cmp pop mov mov (bad) inc adc or and sub mov jb and insb pop cld adcl js jae call jnp xor int3 jle adc aas jp data16 mov es testb xchg or lea fidiv lret pop arpl adc mov sub or dec test sub cmc frstor cmpsb xchg xor mov sbb mov inc (bad) mov fildl sar jno sbb dec cli int3 sbb outsb adc sti test in out std negl mov mov mov pop popf sbb jecxz cmp test dec dec jp iret mov mov ljmp dec int lcall push rclb in pop cmp push sbb test rcl cmp repnz add insl scas aad leave push push out and gs fildll mov insl mov out pop cmpsl mov int das scas ss aaa inc mov sub out rorb in incb or jl mov and mov movsl xor add sub jb xchg daa in inc daa cltd push pusha mov call xor dec imul pop pop xchg inc mov pop dec out stc les push inc push push mov call sbb ret add mov sbb out push dec add ret pop and push jl test jne aas pop lcall mov mov or les jnp mov add aaa popf dec (bad) sti cmc adcl imul inc mov bnd (bad) and popa add out les add pop pop das out fistl mov mov pop ficoml fsubr xchg movsl adc push pusha js daa dec outsb xchg jb dec je cmp xchg out cmpsb jg imul ficom lods aam add dec icebp sbb jmp mov mov cmpb repnz test movsl adcl mov xor xlat test sbb fbstp lea (bad) jl rcrl (bad) repz cmp adc push loopne leave subb int pusha adc cmp loop pop jp cli out xchg jge (bad) aas dec cs ret fcompl mov xor mov sbb add insb pop test xchg jmp pop shrb lods aas aad scas sbb mov mov imul xchg sbb arpl jp push jno add dec jg repz cmpsb clc jl sub dec je lcall mov mov cmp pop fsubs icebp inc xchg cmp addr16 icebp nop add push jmp rcrb (bad) mov lahf jecxz movsb rcl lea inc xor clc add mov loop cwtl dec mov bound daa jge mov inc (bad) mov out icebp cmp out (bad) mov adc stc sbb fiaddl das setno jb rcrl jae mov xor mov movsb out aam inc es sbb mov aad sbb (bad) mov mov cmp out cmc push xchg dec jmp in sar lahf xlat jg jmp pushf mov cmp add mov rcr fdivrp lds addr16 sub nop and dec out mov inc lcall mov xchg test aas fwait leave mov arpl adc enter adc mov xchg mov jle mov (bad) mov je repz fild cmp add jmp imul bound addr16 mov cmpsl arpl popf inc adcl xchg (bad) cmpsl xchg xor lahf adc mov shrb (bad) push cwtl xchg adc jp dec xchg insl push mov add in test sarl (bad) rcll mov fldt pop dec xor push jne push cmp es cmp aam or test mov sbb xchg fsubrp cmp pop pop cwtl stc sub lds push fdiv stos repnz jp mov or push in xchg mov push imul repnz fdivl in cmp push mov xchg or add mov inc dec inc and mov pop int3 scas adc jecxz or test in adc loope inc fnstsw (bad) jmp pop jno push sti les arpl xchg jg scas and xchg or sbb rcr out push in into fcmovnu mov aad sub adc lea iret jl lods cmp fwait aaa push mov sbb mov mov test xchg adc inc js jne insb and mov aaa mov or add lods mov cmp dec leave sbb push rorb mov xchg sbb sub popf cltd sub jb pop push gs aam xchg leave idivl fidivr enter pusha lods enter push mov cmp jge xchg cwtl jge ja lds and insb rcl fldenv pusha jecxz aad popf xor movsb jne mov push push add scas xor fwait mov jl movsb xlat inc jl bswap mov out mov add add mov fild int3 lret xchg jmp adc pop nop pop insl adc mov into sbb mov test movsb scas add lahf sub cmp adc or xor in mov push dec mov test sbb mov or addr16 int3 pop lahf movsl sub pop mov pop xor jne sbb push xchg cld stc incb push mov insl cld pop xchg push (bad) cmp jbe cmp sub subb in cmpl out cs inc push js arpl mov js or dec leave mov mov dec mov sub out pop test movsl dec push jecxz rolb adcl xchg mov loope in and sub lds js jbe dec (bad) push adc xchg mov int sbb and test cld nop pop inc add ret pop out int add xchg lcall fisubrl frstor addr16 cmp leave test dec sbb pop inc (bad) push adc (bad) lock js jl pushl fdiv (bad) shll and mov sbb push adc (bad) out rorb test xchg (bad) xchg (bad) mov push (bad) mov add inc push loop sti add lret scas pop pop mov xchg inc in leave pop sub sbb jb (bad) lds stos or test cmc xchg repnz stos adc (bad) mov cs nop stos push loope mov in push mov dec lcall test jae mov aad in push das inc mov negb dec popf (bad) stos push stos mov pop mov (bad) cmp lss pop or popa je add ficomp mov aaa push mov imul pop jp jo rorb push mov jge dec out data16 push xor loop mov mov jecxz call xchg ja fldcw vrsqrtss ds mov mov jp es pop xor insl pop push mov fdivl or cmpsl add cwtl sub pop jecxz iret pop fucomp push adc fdivr sarb adc stc adc out xorl mov push scas lods fstps mov popf cmp aam insb xchg ror rclb sub lret adc es fwait mov sbb pop pop dec (bad) aad and sbbb lahf jne push pop xor pop xchg push sub add gs push xor out and aas loopne mov sub push mov xchg rorb push testb dec mov inc add loopne push add dec mov cmpsl repz lcall pop inc mov push sbb imul aas stos sub int3 fistpl cmp mov and pop mov push lods and dec pop int3 push sbb test aas xchg in mov jne sub or repz lret repz cmp scas and pop dec lods push sbb sub out adc (bad) cmp popa imul lcall sub adc stos sbb clc fdivl sahf mov ret popa (bad) test or xor mov std sub mov pop pop lcall xor and inc enter in mov dec mov repnz push jae pusha rol mov pop pop pusha adc cld sbb popf fidivr jg icebp xor push sbb cmp sub nop jns mov mov scas sarl xchg pop adc push pop aas pop xor repz pop cmp cmp pextrw mov xchg roll adc inc sbb jmp mov push adc sub lret mov inc sahf out test icebp in (bad) call xor pop popa inc (bad) mov stos les sub jnp inc add call (bad) cwtl cmc pop dec jno,pn pop xchg movsb ret test loope push push sub ret mov leave das lods ret add jns inc addr16 pop iret (bad) xor cli mov and lret xor mov cmp inc lock enter call cs jmp jbe dec xchg jo movsl rclb cmpsb rclb or cwtl fistpl pop jae dec int test imul mov push gs adc popa cmp stos lahf pop rclb dec dec mov hlt jns sub inc pop ret outsb inc (bad) rolb aas mov mov pop stc stos push mov push lahf mulb and cmpsl stos mov jp fwait adcl imul push cmpsb lcall mull sub and sub clc movsl fsubl dec push pusha faddl repz push leave adc add cmc out leave scas and dec mov inc rcr in pusha xchg inc jbe xchg adcl dec shll adc cmp dec mov dec dec sub jl iret insl inc fs sbb cmp and dec fnstcw popa addr16 inc or mov add sahf mov leave push sarb mov pop arpl loopne shrl cmpsb inc mov inc lods out pop cs in (bad) sbb xchg cmp aad adc and cmpsl jl dec push push ja sahf dec push test in iret pop xchg cmpsb or xor fnsave or push inc mov out or pop pusha mov ja iret aas xchg adc or lods jnp mov cmp lret fwait or mov mov lret ficom rolb insb orl mov in push xor inc inc movsl and shll xchg jge xor outsl imul insb or mov cmp push aad push xchg mov xchg ffreep cmp iret sub ss addl pop or (bad) stos push push and inc inc bound and cltd mov or cli add in into cmp test orb (bad) pop jmp ret or ja dec push cmp rorb jnp leave or dec in daa and sbb xchg call jo xor in xchg gs scas mov fmull pop imul mov push sub repnz aaa xchg push rcrb xchg sbb lods cmpsb push mov scas (bad) into sub movsl inc dec sbb push jle fiadd sbb xchg notb outsl cmc cmp mov sbb inc fldt (bad) lcall push mov call jge jbe cli test or dec push pop data16 cmp pusha mov movsl pop and outsl shrl stc rorb or sub nop cmp fisubrl pushf adc mov sub mov sub aam add js mov lods pop ret bnd (bad) outsb or push mov mov mull (bad) dec mov stos out adc mov mov dec insl cmc sbb inc test neg mov push or fnsave fisttp mov sub cmp dec sbb mov in push icebp pop lods cmc ss push jae pusha mov push lds inc enter mov mov or cli fstl mov push jmp rcrl pop xchg pop sahf test inc inc cmpsl and popa mov mull jmp rcrb sbb lret mov shr les jne out mov lods rcl sti pop cld out jle cmp xchg and add xchg int shl push mov cmp xor dec (bad) (bad) lret pop push inc pop push ret dec movb cmpsb jg rolb test and mov jle cmp xchg jb jno sbb ret inc pop xchg jae nop stc ds out (bad) movsl leave dec popf call imul push dec pop movl inc in scas mov xchg dec movsl dec push mov and inc sbb inc addr16 pop sbb lea arpl in fmull inc mov mov fisttpll jge out daa mov or ret adc pop cli push sahf mov add mov mov and xchg sub push int xchg js movl mov jns or pop test sub loop rol push movsb xchg add addl push and lods adc xor (bad) (bad) mov stos loopne cmp jo movsb sub mov (bad) (bad) bound loopne sub fist (bad) jmp js xor sti mov or mov push stos aaa and out jle push xchg out mov xchg pop adc add pop adc xor xchg push je ds push xchg mov lret pop ficoml (bad) sbb bound sbbl movsl data16 mov inc push xchg rclb pop popa arpl push lahf dec mov cli rcrb dec mov jno push rolb ja into xor inc scas pusha and inc and ret pop ret jmp nop jb and aaa loope arpl sahf stos jp xor (bad) pop xorl std cmovge fmul mov les (bad) (bad) clc pop cwtl fwait inc mov lret cwtl (bad) in ds movsb ljmp mov mov jne jb ret (bad) xlat jns adc dec or or ds sarl cmp sbb push push mov je lds lds cmpl pop out jmp lret push in test pmuludq je (bad) lds fcom jle fucomip mov ja and push in jne push cwtl fadds jg push pusha xor aaa xor out mov imul lds xchg lods fs adc inc loop pop jbe in dec jbe int stc shll inc mov sub (bad) (bad) or int jnp xor div shll sbb dec pop and icebp pop or call popa les xchg jge mov int inc insb daa sbb sbb pop mov adc daa cmp and es mov cmp and stc mov adc inc mov sub and popa cmp push mov add dec mov xchg stc jmp jle jle mov jo hlt dec xchg add cmc lret add insl sub or xor pop loopne mov loopne cli add add test add mov testb or insb and gs imul es and mov into test add and aad jae xor adc movsb add mov xor push pop add xchg cwtl mov jo jp xchg mov mov lea xor mov ret add mov pop sbb xchg icebp push ja mov rcrb push sbb fsubl add mov sbb mov in inc and mov call jb cmp test in (bad) test add mov and lcall shrb (bad) mov pop (bad) fistp std sbb rcll sub lret gs stos sbb pop cmp lret pop lods repz adc or mov aam aad cld xorb xchg adc sbb push jmp lret mov hlt aad stos insl cmpsb xchg xlat mov or aas and stos icebp stos mov jmp lods (bad) jle inc mov outsl and xor push mov xor aaa pop pusha mov sub xchg xchg fstpt inc insl fwait xor inc push jg and mull int3 popf mov and mov add jecxz or mov add jae pop lcall mov roll outsl gs jnp loop mov ss das repnz add push push out sbb sarl sub xor jae pop sub xchg dec lds push js push adc xor mov add int mov inc movsb stos xchg push add adc add stc push dec (bad) cld rcr push std (bad) test jno mov add cmpsl fadds (bad) rcrb mov ja fistpl in es idivb xor leave (bad) je movsl lret test repnz in jl (bad) fdivl push dec jae (bad) mov fstl (bad) ss sbb pop jl out xchg test fist dec stos out stc sub mov pop sub jnp mov cmpsl cwtl dec movsl cmpsb mov xchg inc out bound out int push inc pop clc ljmp cs (bad) (bad) xor jns sub jae cmc pusha stos sub sarl mov pop inc aaa cs or dec adc add push lret mov in lock mov xlat mull call inc rcrl ds xchg sub xor ljmp das pop hlt mov cmp into enter mov mov sub sub int push jge out ficompl xchg loopne push leave mov rclb sbb jne (bad) (bad) stos pop fwait stc test cmp cmp add sub xor int (bad) and jle test push btr mov xchg inc cmc cmc pop fstpl popf jae je mov sbb pop cmp ja ja dec std lcall ja mov dec xchg insb jmp dec in insl (bad) gs sub int jge adc add lds sub cld int mov outsl int3 lds (bad) mov mov xchg cmp sbb ret mov jl pusha fdivrs sub fwait jmp sbb pop push inc xchg push sahf pop pop add cmp push cltd and fisubl push scas into cmp xchg cltd (bad) pusha stos in fisub ds stos fldt mov lahf and mov ror xchg ds testb pop test outsl push pusha push (bad) adc imul push and jmp add lcallw andl xchg mov jmp inc mov test mov call lods nop pusha (bad) push pop ficompl pop rcrb scas arpl hlt add lods adc mov cmp fsubs je jbe das mov icebp sti and mov or fcmovne jne out push cld or mov pop and bnd mov sbb cmp (bad) icebp sahf add pusha iret and jbe (bad) lahf dec pop jns mov int3 (bad) mov scas daa hlt dec sbb iret mov and inc jae lods inc lcall fnstcw lods and (bad) sti and jge mov stos in inc sbb adc sbb out std rclb stos xchg xchg dec push sub cmpsl adc mov sbb (bad) shll out in dec popa out fwait into lahf push pop insb push stos jg arpl addr16 int daa daa push in popa fisubr and push mov xchg mull outsl mov or outsb add and cmp sahf fidiv mov add sub mov mov cmp pop dec push mov jmp or sahf jns ror in sahf test jge mov sub sahf test sub addr16 pop mov dec decb repnz outsl lds push test inc xor inc into int3 mov int3 or xchg pop enter pusha adc fwait xchg test (bad) jle sbb in inc push add stos popf or stc mov popa jecxz test add mulb jg mov aad jle sub cmpsl jmp ret and test nop sbb hlt es test dec jp or stos pushf dec andb sub movl cmp fsubrp popw call adc cmp ret pop sub stos sub (bad) out dec fildll movsb mov enter movsl addr16 sub popa inc xor or fwait xor ror lods fs mov xchg sub pop adc pop adc ja repnz push shlb sahf inc mov aas arpl mov jns iret lock clc out push jns push ljmp stos stos push mov xchg dec xchg mov repnz les cmc (bad) fcoms out (bad) sub dec and inc aam fildl cmpsl fnstcw in je iret sysenter fdivr popf (bad) das mov dec xor in lock cs pop xlat mov scas xor xchg fsts sbb (bad) mov push fcmove mov inc test inc lock cmpsb dec fs ret lods test out mov jle pop push lods daa test ss xor aas test pop push das mov (bad) mov pop add sahf mov out cmpsb mov dec adc rol pop mov movsb jb loope sbb aaa jns mov repz adc push (bad) jmp dec pop sbb mov add pop jp loop pop cwtl push out lea push and pop jnp ret cmp inc xchg es cmp js mov or repz cmp xor xchg xchg xchg sti add push adc dec les into pop mov cld or adc sahf mov push repz pop test xchg scas ljmp pop in scas sub push imul adc shlb ss (bad) jae in iret inc das stos jmp xor or orl cli aas jbe xor mov adc xlat loopne dec stos xchg lock idivl adcl fsubr outsb mov js xor sub add or cmp dec cmp and jmp int3 int loop jecxz lcall flds mov cs sub into stos rcll inc in lea sub lret cltd jp hlt test push loope pop dec xchg mov mov jmp scas inc sbb inc cmpl iret jno js stos out mov lret cwtl cmp and jno dec xor xchg insl repnz icebp jl cs lret repnz sbb sub dec dec insb and mov dec jbe sbb popa push xchg fsubl mov arpl lahf pop jb adc icebp in adc add adc inc aas mov test es stos mov pop in lcall dec fcompl scas ret (bad) das mov or add into mov add clc jle sbb int leave lret add iret aaa fisubrl sbb push repnz mov stos into jle movsl and jp rcl mov jmp or pop add fstpt int mov (bad) mov lea loopne push popl push sbb mov jns pop pop out xor sbb lea idivl call cmovnp fist (bad) sub pushf dec adc dec in pcmpeqd cmc mov stos inc adc mov popa and test sti dec mov inc xor es dec ljmp dec in jbe jne adc mov xchg (bad) mov xchg bound mov leave lret in push xor add and push sbb add fxam movsb xchg adc xor cwtl arpl push xchg mov pop repnz mov mov adc and cmp (bad) push insb adc cltd pop std rorl mov mov sub push frstor loopne test repnz call xchg aad mov fs add jno adc dec add das inc mov and sub sbb sbb sbb pop jb inc sahf aaa mov xchg int3 out add loopne cmpsl (bad) addr16 adc sbb gs pop outsl out int3 or in enter add pop xor aas lea fsubrl pop cltd add aas fldenv adc jp aas mov xchg jmp dec lcall jo fbstp arpl mov cmp xchg out push jg xor rorl out test sbb xor xchg mov sbb js mov xor test lds lret jecxz ljmp aaa rolb push aaa outsb in xchg xor cmp jmp fbld cmp inc cld dec scas jmp cmp add push push mov push mov sarb dec xchg imul loop fsts pop inc pusha mov pop xor ljmp adc in xchg cmpsl adc mov mov imul jle sti mov jg and mov ret xor lret scas cmp lahf popa mov lock enter mov and mov adc jno jmp imul lahf loop inc test push clc mov push mov sub clc dec sub push cmp mov or cwtl push and mov sub movl inc or xchg dec loopne pop inc mov inc fistl outsb cwtl loopne in ds jne xchg lahf test mov testb bound and sti lcall mov and arpl sbb or sarb (bad) mov and push cmp lods movsl push push or (bad) insb loopne stos mov dec mov xchg popf (bad) pop dec scas sub jno out outsl xchg adc scas xor mov push push aas or mov jb jne push dec fs dec jbe xchg push (bad) pop pop add xchg cld into (bad) dec aam add in mov imull rorl cs out out mov jmp sahf push mov popa xchg dec addr16 and in popa add or icebp imul mov in fsubrl pop btr lea pop push xor and fldl (bad) dec cmp es out aaa push mov sbb sub cs pop sub (bad) mov loopne mov xchg data16 jmp push sub sub or gs mov ja dec js fsubrp pusha dec push mov xchg or cmp adcl stos das jb iret mov sub push stc lods push push push es into (bad) enter xchg sub adc test fnsave fist cmp movsl add xchg xor aas or push inc xor or push and aad mov mov ficoml cltd dec sbb push loope in movsb pop and mov xchg mov fs or pop scas test popa (bad) mov dec mov push sub jno jno jle loopne pushf and or or push jp jb adc aas xor mov ljmp sbb je xchg adc movsl into test jp pop (bad) (bad) lret imul pushf aam or dec mov jge and leave xor in daa stos and push cmpsb push or push push pop out push (bad) rcrb aaa push fwait inc (bad) aam fs jg pushf sbb jecxz jb fwait mov mov aad mov dec std xchg push lea pop cmp xchg pop xchg repz adc fiadd lds test pusha push pushf rcrl into mov cs test test jmp jmp fsubrs stos in push sti mov xchg idivl push jne pop xchg mov fs bound xor xor aad cmp sbb push decb in bound mov jg adc fsts out mov lcall fdivr ror out idiv loop xor ret mov adc mov mov test outsl xchg sbb and pop imul jmp lret dec pop sub mov je mov xor or out loopne or aam (bad) call jae fisubl data16 stos sarl sub enter stos mov nop cmp mov push mov negb xchg add xlat dec add mov mov cmc insl jno sbb adc notl notb scas out cld adc mov or leave add enter jae push dec int3 mov and fsubrp jp aam dec scas and push sub idivl push push movsb xor addb mov fidivr pushf fstpt lea ljmp ret or nopl mov test rolb aam mov rorb addr16 stc jae sub jb add sahf (bad) jnp ds mov ja dec mov (bad) repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out pop add pop insl (bad) or dec add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add jns add add or or add or add add add pop or add add mull add inc dec inc add mov or popa add jo pop jae add ret add push ret add outsl test add cmp push js in xlat push (bad) and xchg mov (bad) insl (bad) push fidivl fwait inc iret loopne and mov add add add mov xlat lcall nop push rclb nop movsb jl bound adc call movsb aaa shr adc pop cmp cmp jbe shl or movsl sub outsb imul int3 push push mov push xor adc mov mov shrl jecxz in (bad) jo add jbe fidivrl fiaddl hlt daa push mov sbb mov cmpl gs cmpsl xor xchg lods jno and popf decb jo shlb enter sub xor stos sarl (bad) in inc nop pop mov lcall push rolb lcall xchg xchg and push (bad) push push push sub addl das mul add mov dec cwtl je insb je mov jbe pop push nop jns insl mov mov ret test or push out (bad) cmp lret pop js pop sbb sbb pop mov mov jae pop pop inc iret das jno jg cs ss dec xchg lds ficomp pop xchg pop add rolb shrb jl jo adc mov js icebp (bad) lods mov mov adc mov mov ret sbb sbb gs pop stos fnsave sub mov mul sbb xchg dec int3 repnz inc mov cmpsl mov push sub pop pop (bad) hlt arpl xchg add es (bad) mov cltd cmp stc aas or adc inc ret hlt mov jle enter cmc test fwait mov mov pop sbb psrad inc add or add pop mov xorl sbb add inc xchg xor inc loopne xchg mov cmp cmp (bad) jmp repnz sarb les push nop addr16 mov cmpsl jg mov cwtl add dec test cmp (bad) dec sub iret mov pop pop test sub sahf out jg or mull adc cmp insl mov mov fidivl into xor lcall xchg xchg test jae cs mov outsb cltd inc (bad) cmc jns imull aam and movsl xchg out dec cmp sti sbb rcr mov and popl or rcrb add sarl in cmp scas popf nop pop adc fisubr mov jp jbe out sti lret (bad) in pop jecxz mov call xchg js push fprem1 sub loopne xchg movswl out xor sti fistpll inc lods xchg movsl (bad) pop xchg aam dec sbb mov lahf pop lahf and dec (bad) fcoms add pop mov out mov jne,pn lret xlat lret std and stos (bad) xchg sbbl in sub sbb sarb aad sbb pushf xchg aam mov mov push fwait and fildll outsl fcos nop and cmp jl adc xchg outsb aas shr decb inc (bad) nop xor aad or pop push or loopne push xorl adc push adc stos lods mov decl xor xchg mov ret icebp das push pop mov into or ret sub inc and pop add decb sub sbb or sub orb insb dec and adc mov cmp out sti sbb add mov frstor ret dec fisubrl popf or dec cmp (bad) cmp and ret js jns,pt out add xor xchg xor inc push test inc loop push into insl push nop add dec dec gs (bad) data16 (bad) dec push mov xchg mov mov xchg clc push mov mov test add or and mov sahf add stos cmp mov mov test (bad) inc movsb mov dec test negl inc pop icebp xchg pop outsb in sti lods or push sbb jae push jge jle fsts mov sub mov adc mov cmp lret xchg push adc ja lcall ret fistp jg jl outsb pop aaa call das sbb outsl xlat or pusha fs iret outsb gs push test aaa cs ret (bad) fstpt inc ror jae sbb in mov mov (bad) imul mov push inc xchg stos xor pop shl lods aad (bad) jbe adc (bad) inc dec daa scas xchg pop dec jno loope (bad) xor inc mov outsb fstl pop ja movsb test adc add fdivs jle sti sub add add dec mov sub es test pop mov add testl jp imul stos push loope cmp (bad) mov imull sbb cmp add mov cmp lret or (bad) mov shrl notb fisub sbb scas popf mov movsb xchg je loope sub pop push dec icebp shl arpl mov xchg lock adc pop (bad) bound mov roll xchg and mov incb mov inc and push pop jmp loope mov pop mov outsb mov fcompl mov inc mov xchg add jnp pop adcl cmp sbb repnz nop cmp je push test notl dec inc adc movsl cmp sub adc push (bad) cmc inc (bad) xlat xor popf adc push std stc push insl mov inc xchg push out in fmuls hlt sub jp lods jecxz pop jecxz mov mov cmp adc lea cs add pop dec or jmp adc pushf pop pusha or pop mov sbb cmovo scas lret out sbb push mov xor decb push clc jmp sti sbbl add sub mov loope cmp adc pop push push imulb lds cmpsb sub sub ficoml pop xor cld (bad) movsb push bound xor adc mov inc pop in push icebp decb xchg mov cld xor or out pop mov jns imul lock xchg cmp cmp test jmp push cmc mov (bad) mov les imul (bad) xor jnp aam sub nop cltd mov dec push or ror add rorl pop or (bad) push ss xchg rolb pushf ss adc je mov jo aam mov out fs sub or mov lcall sbb imull pop dec mov push call xlat push jl es gs fnstcw rol mov loope icebp (bad) out sub dec lods std and dec imul seto fnsave inc sbb fadd xchg jbe dec cltd and jmp div jns je jnp cmp movsl xlat mov push pop imul pop data16 popf cmp jnp or insb jl jmp into add xchg ret test rorb jmp out mov popl mov cmpsl in adc (bad) outsb sub (bad) dec dec adc push test lods pop into pop ss (bad) mov or or ss push jb cmp int cltd in (bad) aaa daa lret jns xlat popf (bad) jl adc lock push lods adc jns ljmp fs mov cwtl shl addr16 (bad) sbb std leave sub add test lds mov dec push sub adc push fildl xchg push sarl ret add shrl std insb and lcall sbb data16 mov (bad) mov outsb sbb cmpsb and sahf imul sarb jl pop adc daa imul sub and out sti insb or and cmp lahf inc mov movl xchg and test mov movl inc int pushf mov sbb popa iret in mov testb mov jno in push ja mov sbb test test jno sub aad enter or and cmpsb ret rcr add mov mov mov mov ret mov adc bound (bad) outsl xor xor sub popa sahf repz cmpsl scas icebp imul in pop xchg pop stc dec out pop std push fsts sub inc loop (bad) mov cmp jb add jecxz adc pop (bad) mov gs imul push incb xchg mov or sbb mov xchg gs shrb dec jo or push mov in cmpsl push int3 insl adc in push push fnstsw sbb gs lret cs rcll outsl cmp mov and dec lods andl das pop inc adc xchg xchg sti mov mov mov ja int insb hlt and cmp stos sbb lds jbe sahf pusha inc mov in xchg std jmp pusha sub imul or and pop pop daa inc add ret add pop incb sbb push push or sub sbb mov ret in and push es xchg mov xchg repz adc lahf dec sub (bad) fiaddl pop inc jge cmp pop and scas xor aaa int inc push stos or or cld iret adc pop cwtl (bad) decb sub xor cmp xchg mov sub add xor add or popf and out and rolb sub loopne push mov inc sbb xchg imul xor call ja ja xchg mov mov mov aad xchg sarl (bad) xchg mov in std mov sub adc in xchg pop fs jno leave test add push xor jg fild into (bad) mov icebp jns pop repnz int3 mov cmp sbb adc pop fnstsw insl lahf icebp add idiv inc or int lret jne cli insb dec and outsl or adc push stos mov adc push cmpl cmp cmpsb push mov test cmpsl mov pushl push adcb mov jge jns mov pop lret imul mov jb jp xchg hlt das xchg out movsb xor inc repz mov mov sti jmp push xchg call sub push push nop lret dec data16 or sub mov and xlat data16 mov std lods mov or lcall imul cmpsb rcll bound int3 xchg ret jg and pusha mov mov adc ljmp repz (bad) (bad) cmc push sub in mov sbb rep mov pop xchg adc and inc addr16 cwtl loopne lods lods stos mov pop or mov cmc jno inc andl adc mov aaa scas cs lret outsb pop into mov insl out or mov xlat mov popa out rcrb scas jnp jmp loop ljmp jg ljmp neg and test sbb addb leave sbb in pop sarb and push mov dec enter je loop movsl mov jmp mov or pusha orl cmp pop mov push gs inc mov (bad) arpl popa arpl xchg pushf sbb mov push pop fwait jbe xchg rcrl add xor dec jns fcomps xchg imull push fstpl (bad) fldt xchg mov daa jne lret les outsb mov xchg xchg scas sti fist shlb xchg pop or jp loopne in aad mov or insl adc rorl (bad) dec add push pop cmp lret and pushf pop ret popa dec jecxz (bad) rolb adc push popf test stos cmp mov test mov mov sub lea aam stos push xchg xor adc mov lock inc (bad) mov sbb test fdiv xor addr16 mov add stos ficoml daa mov dec loopne in mov movsb es mov pop fsubrp (bad) insl add cmp cs adc divb dec stc add cmpsb and out jmp jl arpl mov pop or aam jecxz and push rorl out push mov addr16 aam scas lret js mov sub xchg daa inc outsb jnp icebp imul push and fsubrp xor sahf es mov imul mov push std mov mov fistpl mov into jecxz and add sub mov fs js mov add cmp jmp mov sub push fwait in mov dec int3 dec or leave mov push fwait popa mov daa dec pusha push mov sti lods pop frstor adc aam aad test mov mov (bad) mov pop mov in outsl xchg aam add dec mov add cmc jne cltd out pop sbb mov and js pmaxub cmpsb add lret lods movsb mov lods (bad) mov cmpsl or mov sbb adc sbbl sti shr cli in xchg xor nop xor ds xchg mov and loopne and inc icebp fist inc movsl int add xchg inc test fisttpl sub ret into and push or dec push cmp or mov adc sahf clc add int3 cwtl jo adc pop mov sbb aas xchg xchg lret loopne or mov sub scas jbe repz lret and or mov mov mov jp in adc cld loopne iret xchg lods negl fsubrl test sbb inc scas test xchg mov push or inc mov dec (bad) (bad) jle dec inc mov dec aad adc sub imul dec mov mov sarb lods js pop aas xchg sub ret outsl mov push lea imul rcrl rcrb and aaa or pop fs std xor adc xor stos or inc addr16 sbb mov out sub (bad) cltd sbb inc dec inc push movsb jecxz mov push push or pop lds arpl push or and lods inc xor mov and stos bnd aad cmpsb out fisttpll es daa cmp cmpsb cmpsl sub mov out pop mov mov aam inc lds lret mov mov inc flds mov and std push sub addb ds jo mov fcoml dec es in sar add scas out aad sub aam mov xchg or xchg fmul jg outsl cmc dec jle fdivrs popa js and and sub roll xchg ja jne jl enter lock jns fbstp and jge add mov mov jbe js jae lea fdivl inc sub mov gs imul js sub outsb mov ljmp cld fs pop sti enter aam mov data16 mov insl jo jo pop popa push decl or sub mov jge pop push and sahf fcoml mov cmp and cmp jg call nop (bad) in pop mov mov sub mov sub idivl dec push aam js stos je fs dec or (bad) fdivs pop jl inc les out and out or mov mov mov mov insl leave cwtl fs cmp xlat push hlt pop (bad) sahf pop pop in in aad adc cmc stos repz enter xor notb lods daa xchg stos js mov cmp clc push cmc and mov push dec in sbbb adc outsl sbb iret or aaa push and nop inc push lret fwait add mov in push fwait and push popf sbb cmp or scas xor jbe mov push sbb dec mov jmp mov rcrl dec movl pop mov inc push gs cmpsl xchg mov mov dec dec stc ror in cmpsb in jmp inc dec repnz mov pop jae lret addr16 adc inc pop adc mov push arpl mov aam lods add sbb jbe mov ljmp inc pop xor sahf movsl mov xor or adcb dec out nop xchg in jno push pop xor fmul popa icebp add js fisttp es push ljmp outsl ja fisubl and mov add stos fistl and xchg lret ret xchg sti sbb repnz bnd sub inc cmc xchg cmc out cmp bound fistp xchg aas std cmp mov imul xor iret add jmp repz leave xchg insb sar cmp and dec daa add movsl pop sbb and inc (bad) mov lods mov and xlat fstpt sub aas cmp jbe es cmp xor mov pop fwait xchg mov push insb pop xor arpl sub loopne pop lcall or pop sbbb sbb scas sahf lret mov dec pusha je dec imul xchg test aaa xchg sub push jmp (bad) jne lret aad fiadd mov daa mov sbb cwtl std lods jno jbe pop or bound fnclex pop loopne xor sub rorb dec cwtl sbb lea stos push scas movsl jno push les adc pusha push scas inc cwtl cltd jns lahf int3 add roll dec loope iret lret loope or popf call cmp ljmp das aaa aas aad sub cmc xor (bad) mov loope and cmp inc shrb aad test dec mov (bad) pop sbb (bad) (bad) dec imul mov xor pop iret movsb mov mov adc and push in sub sub jbe repz jne ficomp jnp imul fbld push fwait sbb mov test ds add mov mov scas dec cli mov out or test and cmpsb ljmp clc and icebp or jle pop (bad) inc or ja cmp mov cltd outsl les cmp in mov das xor lods jg jg fdivl (bad) rcll or loopne fnstcw mov cli add push pop adc xor mov mov mov mov in xchg pop sub mov pop (bad) xor sbbl jbe dec inc mov jo test popl das leave jnp cmp test jae cmpl push mov xchg pop sbb movsb jmp dec jp sub add stos loop repz inc dec (bad) mov jp gs enter jae inc cmpsb jns mov xor loop out test and pop cli (bad) aaa fbld dec jl mov pop jbe xchg push scas push inc inc stos mov lcall mov cmp lcall adc (bad) daa je xor ret add int3 push push sbb cmpsl lea imul fisttp sub in mov lcall pop or aaa fidivr loope cmpsl cmp ljmp mov sub fisttpll pop push sub and dec mov jnp cld xchg mov adc inc enter xor in popf sbb repnz insl jmp stos sub and (bad) adc cmpsb pop ret lret sub xchg and mov mov out cmp mov mov sbb jge jae or pop or pop cmp gs das fcompl push das mov push pusha fild mov lret xchg push nop inc pop or jns xor xorl inc aas mov push stos add push in mov daa fsubrl jne mov test mov addr16 mov les xchg rol or (bad) mov or es std fisttpll xor pop inc mov nop jecxz mov mov push jnp mov adc lret (bad) sbb (bad) mov mov and pop push lahf mov pop jl js jge sbb fdivrl in cmp mov add xchg and into xor add mull and sbb fst xchg jne xchg ret scas dec inc sbb add notl je and jmpw fwait mov mov dec out jmp sub aad repnz xor aad push dec and cltd sub and adc jg neg or xchg jnp cltd aad jo sub vpcmpeqw cld fwait nop add outsb and fiadd iret lods test mov xchg lahf xor pop test pop ficoml adc xchg sbb ss jne,pn sbb sti fmuls sub mov in pop bnd rorl sbb lods test jmp repnz roll addr16 sbb sbbb lock pop xor cs fidivrl cmp (bad) out jle push mov xchg lahf insl hlt testl mov pop flds add insb cmpsb cld add lahf cmp dec push jne sbb scas je or pop mov push inc dec rolb popl and sub jle add in ljmp jno mov pusha mov popa dec pop mov lret scas aad xchg orl (bad) repnz push loope pop pop inc or (bad) push imul cmp pop sub das push fistpl xchg mov or adc dec xor xlat xor orl jl xchg in dec insl mov pushf or fistpll scas ficomp out inc jbe xor sub or pop in fdivr sub movl clc insb lret adc pop mov data16 mov inc cmp sub cmp ds pop leave sub mov or xchg outsl mov fdivl mov decl int and xorl mov lods nop pop rcll mov jb jmp fistpl fist adc test push sub xor sahf mov and jns sub in mov dec xchg jecxz into jmp mov fdivrl or dec mov mov cltd mov mov jo inc mov in stos aad outsb cwtl jae jmp and xchg sub ret pop pop xbegin mov ds mov sbb stc push out ljmp cltd push mov stos xchg nop pop outsb jle jb loope int pop lds xor (bad) repz xor jnp pop xor xor out dec mov test popf rolb mov push fnstcw mov incl jnp movsb dec push mov shrb in cmp shr dec ss call mov imul out mov push outsb int3 dec inc cli sbb jl mov aaa pop mov adc mov mov call inc mov dec mov sbb gs in mov fnsave and mov stos iret push push adc jecxz mov push test cltd pop add notl dec pop cmpsl pop test jae pop push (bad) push sbb les push or fadds xchg cmpsb dec cmpl (bad) cmp hlt xlat cmp dec scas push movsl daa arpl sbb xor add ljmp adc popa jb fwait inc int3 imul test ret pop xchg add mov aad push dec mov pop dec les xchg sub mov add lret arpl jp jo rcl movsb sub das fs scas sub cmp fcoms fdivrl loope,pn loop jl add or out (bad) lods pop adc pop (bad) aam mov (bad) out inc ss xchg push insb test xchg into and mov cmp popf cs dec xlat aaa pop sub xchg inc scas cmp movsl mov push lret mov mov jle jb mov jns aam (bad) dec add cwtl jge jle ret and push add out mov faddl mov (bad) xor sub mov ret fistl lcall dec bnd and in push mov (bad) lods loope test dec inc adc decl test jl jle sbb lods mov xchg in sub mov sbb xor or lea dec out fisubl pop lea sub or jns out push bound inc jnp jno push dec mov fwait dec pushf pusha in imul pop and std ret (bad) (bad) jns xchg and arpl in add xlat sets add push je pop add (bad) insb xor int lret push adc mov scas cmpsb fsubrs es clc outsl sbb push addl xchg fidivl sub or xchg sbb and in pop xor sub inc and out push sbb or jl mov aam lods int jns pop mov sub les dec xlat cli int add xchg mov in inc insl mov insl das cmpsb and movsb xchg sbb xchg xor movsb insl jl push sub test xlat imull movsb pop sub loopne jg and add push movsb (bad) cmp mov fdivl inc mov test int sbb into mov (bad) sbb pop sub sbb xchg stos cmp cli and xor insl imul popa xlat clc jle jle or jl ret and adc das js popl cmp (bad) mov (bad) (bad) imul fimul ss fsubs mov mov (bad) (bad) jmp pushl mov bound out adc xor push es xchg cmp mov dec call aas jp xchg jg or mov dec nop cmp adc out ret loop stos in xlat call outsl imul cld dec cmp testb ret push cld scas (bad) push or lods popa jg rcrl scas imull in movsl mov movsb in lods stc into imul es ss bound out inc mov xor jmp into xor or push mov popa icebp clc scas mov inc xchg in fsubrp (bad) fs dec mov add into enter xor repz pop and sti jns xor int3 pop sti je scas inc sar insl cmp and add ret push mov mov sbb pop xchg (bad) sub jg and (bad) xchg and nop pop std sbb pop cli lds and stc jns outsb push cwtl inc out push (bad) cmc in pop push push arpl lds stc sub mov add jne aaa imul and (bad) cltd push push fisttpll cmpl and pushf sarb inc jp movsl in repnz mov push xchg pushf ret insb cwtl dec add jl push pop and mov lods daa test xchg fisttp pop pop sub hlt lahf jns jp lcall setne (bad) mov dec inc jecxz ret out mov icebp test mov aas loop das jnp push sbb xchg xchg mov insl xor mov lock (bad) lea jmp cli jmp add mov xor mov int pop mov dec adc pop cwtl inc in inc les icebp icebp fwait and sbb aam pop daa in dec (bad) test or fwait cli sbb sub pop and aam cmp push mov xchg rorl aaa xor adc cmp mov inc sbb dec pop xchg iret cli inc cmp lret mov pop sub dec out dec fwait xor and inc cmc pusha xor data16 or or lock scas xor std add out mov push push test lods mov dec pop sub xor jnp or push es stos (bad) mov and jns out mov fcoms imul xor in inc or iret movsl and mov mov aam shl pop pop sbbl (bad) mov (bad) imul or jle adcl decl sbb outsb jecxz (bad) fcoms dec gs in aam lretw testl jae pop push imul sub jmp mov jno test mov ljmp lods pop (bad) rcr popa or inc ljmp lcall or test arpl in mov je xchg test xor (bad) xor inc sbb mov sbb inc cmpsb push cld std fidivl cmp or inc jecxz ja,pn adc sahf imul inc mov pop stos aam jns xorl and dec bound mov fcom in pop stc mov mov jb or dec inc sbb mov lea mov or loopne mov je xor mov pop push mov dec mov mov int3 lods xchg dec inc sbb cld dec xchg out adc int3 ret push and jns leave cmp leave in call push imul lahf movsb or lods add push mov sbb imul pop imul ret push mov and cmpsb in test flds ret cmp loop pop jp pop mov pop nop sub (bad) push cmovnp jbe jb test lods (bad) xlat imul ja dec inc jg cltd stos inc out test bswap in (bad) jmp push xor imull jno lahf incl sbb ficompl pusha lock fmulp push dec (bad) mov imul inc mov and lea lea test dec push xor jl les cli lcall scas int3 jbe jecxz insb mov call and jp pop les dec data16 loopne ss (bad) mov xor xbegin out mov mov pop pop outsl out xchg outsb mov jns addr16 je adc fisubrl je jno hlt cmp push aaa sub jmp mov xchg aam push sarb mov cwtl call push pop sahf lahf mov scas sub inc rolb (bad) lods fistpll bound mov cmpsb xchg jmp dec mov dec cmpsl fucomip push (bad) sbb xor xchg mov add js sbb dec dec xor mov dec ret cwtl cmp xchg stos push xchg adc in sub mov pushl pushf sbb or js leave mov mov repz lock lcall rcrb jno lods mov dec test jmp mov or sbb cmpsb and cmp cmp xlat lods popf dec lahf sar repnz iret insl movsl adc xchg bnd push mov xor pop and fildll insb jae mov imul (bad) pusha cmc jnp (bad) mov push outsb jmp mov pusha cwtl adc dec push sti sbb (bad) adc out dec dec out push xchg cmpsb orl pop adc mov pop mov dec push or push fisttpl xchg stos sbb dec ret xchg inc adc fwait aam (bad) and mov push mov push das in mov adc mov out in dec add jae inc sub or lret jne ljmp xor xchg ljmp and popa mov dec int3 jge je push sub mov lock xor mov fildll add cmp sbb loope (bad) fistpll movsb sub adc (bad) and ja cmpsb push sub pop xchg repz in sub push sbb movsl xchg in lea cs sti sahf mov (bad) mov and cmp outsb jbe adc jle cltd adc test or inc push and es popf std sahf int mov cmpsb sbb xchg in std xor lea adc mov (bad) hlt fsubs data16 xchg loope bound vpmulhuw pcmpeqb mov add loopne mov jo test imul or in add mov add add insb xchg in movd and and mov sub test sarl fdivrs aas fadd mov ret loopne (bad) ret cmp pop pop mov xlat (bad) mov adc jne test addr16 mov xor xchg mov test fnstsw fdiv jno sbbl and and in cmpsb xchg xor hlt push je repz repz adc sub stc adc in nop xchg push xchg les idivl jg inc ds dec xor aad insl inc (bad) xor mov imul jmp cmp xchg pop (bad) cmp dec xor sarb and mov loop test xlat stos pusha (bad) mov repz repz (bad) xor jecxz mov or xchg out mov pop orl cltd mov repz fnsave mov mov inc lret mov addr16 dec dec fisubrl jmp xor adc (bad) (bad) mov fcomp jne push mov je js stos pushf jle add inc push aam jae push arpl cmp adc (bad) adc ljmp mov push mov jmp mov dec stos or bound cs cmp stc int out push data16 mov out es popf mov test fstps dec add das inc add or ss sahf aas leave jl lcall push cld (bad) add or sub shl std xor jmp out and lcall loop,pn pop push mov add mov jmp mov push push mov add fisttpll push into fwait push fistpl pop lea xchg test jo push jb jno daa jmp xchg inc sub add out fstps mov dec or cld es cwtl mov push nop stos xor xor movl push pop pop lahf lds cmpsb lea fdivrp push pop mov fmul mov enter push ss fs fist stos xor cmp das sbb adc imul jae adc inc lret dec or in mulb cli lods or dec jl sbb sarb jecxz add cmc addl frstor ret sbb fcmovnbe inc mov inc jne rclb xor dec jae xchg and dec out mov gs mov cltd test icebp repz je icebp dec orl (bad) nop stos scas xchg pop gs sti ljmp pusha xchg inc test and scas pop pop xchg rclb xchg in pop sbb (bad) (bad) pushf fcmovnu stos imull pushl movsl out test in mov jb jno adc pop xor fiaddl push (bad) or addb addr16 mov jbe pop ja test jns sbb data16 daa sbb push jg jge jbe and ja push lret ja mov in out push xchg xor mov rcrb jne mov (bad) sti cmpsl xor push fwait mov cld es dec xor pop push inc sbb mov jmp dec addr16 fnstenv test jo test xchg xchg mov push push lret pushf xchg dec leave (bad) mov sbb jns test flds add sbb mov xchg call xor into adc fisttpll mov rorl imul incl xor jns mov push cmp in fcomps fsts neg es add in lods and cmp lods mov sub push mov adc insb sbb xor in addr16 insb sbb push addr16 imul imul lock scas push stos fwait test mov pop fldcw inc fwait or shlb xchg jge pop pop repz mov or out mov pop mov in mov jmp cmc std add arpl cmp dec push xchg adc jecxz xor ret int stc push mov lock add mov enter scas sub sub mov mov out mov fimul inc add push stos pop in dec pop rcrb int dec push xorb adc fldl and clc pop lds jne or lods out sbb and jmp lret stc adc mov adc cmp ret aaa mov int3 hlt into mov add mov aaa mov or es loopne xor pop cmp fstps dec bound sahf or repz hlt inc mov sbb push or push ljmp call sbb add sbb pop je movsl sub out mov nop xor and inc loop lret in int dec mov adc dec adc sub in push pushf (bad) jno ja xchg jno hlt cmp add leave or push imul addb jmp stc loope idivl sub jno mov in clc xor pop mov ret push outsl or push jl lock imul pop js sahf inc dec (bad) mov xchg lahf jns (bad) into adc pop or mov xchg xchg inc fcmovnb test or pop add push in dec pop outsl xor xchg add push aad sbb cmc lods mov or sbb xchg mov dec ud2 sub cmp mov pop or jne scas and mov mov pop push aaa imul ret test sbb scas fadds popa hlt pop mov popf scas rorb dec notb iret test mov mov pop aas pop add sub mov pop fs pushf sbb add lcall sub sub pop mov bound xor rcll add pop das (bad) fs pop lea mov mov pop cmp mov and adc inc fidivl sub adc jg sarl pop in push (bad) jp or and (bad) pop pop add fldcw pop ss pop adc test jmp xchg cmp std daa popf jo pop out idivb repz fisub and enter int daa scas xchg xchg mov mov mov pop movb add push iret jne jl,pn xchg sub dec das inc mov iret rep adc mov cmc push fistp cmp mov popf jnp loopne imul mov loop lock fs out push pushl lret xor jb cmp xchg push imul push into mov mov or fwait sbb movsl (bad) std stos leave dec addr16 mov xchg sti cmp mov add lret push (bad) sub cmp or mov cmp mov or mov (bad) rep push pop cltd xor push scas dec shlb lds or bound aam cltd ficomp inc into sub inc sub mov cmc ja add jmp lahf or (bad) and mov mov sub popa outsl outsb push fistp jo icebp push sbb lock dec pop lea out jae pop inc xchg xor mov push push fiadd in orl adc test inc pop in push xor xlat ret fisubrl lods popa mov cld aaa xchg inc lods push outsl pop jmp inc pop mov push lds fdivrl daa jb lahf inc rcr push xor push pop cmp sti push cmp std push push icebp mov repz sbb mov (bad) movsl pop dec ret imul lock je fcmovnbe inc js pop into pop inc sarb int3 rcrb nop jle push (bad) dec mov mov mov lock daa lods and and cmp xchg sub push xchg or scas push cmc pop xadd sbb inc pop sub sbb dec rcrb lret add mov iret mov idiv pop xchg sbb (bad) int scas jmp or inc dec (bad) mov lret add pop jbe lods jle daa sarl or inc xor jnp lock mov loopne pop fidivl xchg mov jb aaa jae push aad mov lcall ljmp in mov in mov fdivrs sub imul call push aad js (bad) jp outsl push imul lret movsb popa clc xchg mov jnp call sahf push int (bad) loope imul roll pop pop or pop testb mov push dec jnp cmp rolb leave add in insb xchg xchg add mov sbb push mov adc sbb fucomi pop ficompl call and movsb scas inc mov cmp rcr push pop pop xor xor xor lahf xchg inc scas fucom loopne les xchg xor or out rolb (bad) mov subl mov mov xorl sbb loop sub (bad) or xorl push (bad) das xor aas push mov notb push fwait rorl popf inc enter sbb push cmp call (bad) cld test xor les loopne dec fldl push (bad) negb and add mov aad jecxz adcl mov sbb out into jmp mov push cli mov cmp fildl test stos sbb sub xor lods mov cmp sbb jns insb xchg out mov xchg mov adc xchg inc dec sbb dec inc adc sahf cs cmpsl sbb (bad) mov jge sbb dec dec mov mov jns ret std mov cmp loop test lahf sti and iret cwtl pop mov xor fidivr cmp mov inc xor mov jne jae imulb std xlat ficom (bad) pusha je sub out xchg mov xor mov lods imulb ret cld shlb clc jno dec out xchg lcall scas ss cmpsb fidiv add in lahf push stos sub gs sub cli int3 fcmovnb ljmp cmp nop cmp add int3 test decb dec add jbe push (bad) mov in iret xchg jbe icebp xchg rcl push mov test dec in sbb xchg imul cmp jmp sbb scas out sbb cltd lock shrb jle,pn (bad) mov in mov push andb fisub rcll jne outsl ss pop ret sti sub lds mov scas gs data16 push dec inc mov ficompl imul (bad) popf popf out leave imul pop push outsl test sub cmpsl xchg movsl stos cwtl mov sti mov xor cltd lcall decl mov call add stos push js (bad) out xlat pop test les lods scas iret movsb int mov test neg fs sub mov push cmp inc iret (bad) iret pusha sbb add outsl push call subb jno mov fmull repz mov adc adc nop nop dec in xchg lea mov int3 adc sbb scas lcall jae out loopne fidivrl push and sbb lret and sub jbe mov pop nop push das pcmpgtb cmc sub xchg cmpsb add jno adc cmp jae mov adc loope negl xor aad (bad) push mov rcr mov jl gs jbe mov push lret sbb or (bad) icebp or and push mov out mov jb js xor jg mov aaa and push jmp fiaddl adc inc lods test cmp mov enter lods pop dec call xchg cmpsl push pop roll sub rorb jno cmp arpl (bad) mov (bad) (bad) cmp ljmp sub dec cmpsl push adc push push jg mov xorl or sub sbbl int orl or cli add jecxz cmpsb xor pop push stos jns loopne aaa mov stos rolb jns jg,pt mov inc rcrl sub out ficomp push sub dec or push inc mov bound fcmovu jbe xchg das gs cltd jae push stos lahf and loopne stc mov inc jecxz ret or gs sub push sbb push pop mov roll outsb mov in aaa in pop and sub data16 dec mov xchg cwtl cld movsb into xor xchg arpl pop test cmp ljmp push insb popa push pusha call insl lret push fsubrs lea xor inc pop (bad) jecxz pusha les pop cmp inc ja inc pop xchg or out ja popf jge and dec adc (bad) dec jecxz lret into arpl xor jmp mov mov jp scas lahf cmp loope lcall xchg push or jle add sub hlt aaa pushf ss jb aaa and mov das xor in lcall scas scas sbb xor mov pop jno mov (bad) ja mov push aam int3 (bad) xor inc cwtl mov movsb and rclb add in ret sub in jge jo fsub je cwtl jae data16 addr16 fwait jb jno mov icebp mov jno inc inc jns mov inc jnp rolb ret push xor flds dec pop pop mov mov dec jp fistp cmpsb cmp mov psllq push inc xchg imul outsb mov cmpsl movsl aaa jecxz jae fidivl cmp adc xchg xchg nop aaa cmp bound jg ja xchg stos (bad) mov mov mov je in repz leave fwait ss imul push ret add fistpl sbb jnp insl inc shlb out in mov push leave shrb hlt lret mov (bad) and arpl pop jns pusha mov cwtl call mov lods dec mov fidiv adc fist leave jae xor inc xor pop fnstenv mov push or mov in outsb cmp daa js stc jbe or sub mov push stos add repnz scas (bad) imul sbb mov sub xor sub add add xor mov add mov in iret call fdivrp push jne movsb call sarb sbb mov js xchg je (bad) cmp and stos mov imul mov jmp pop dec iretw adc fwait xchg mov je cli stc xchg jne xchg xchg xchg pop rorl jge dec ljmp popa mov lea xchg inc jle xchg add stc push comiss mov pop pushf dec mov fwait pusha push popa imul fist addr16 or xor pop mov dec scas dec sbb adc push mov mov mov adc popa in les in clc mov ret leave mov jle cld mov dec pop mov sub cltd mov adcl repnz jb loop mov push pusha inc cmpsb test mov lcall mov mov push dec clc pop or xor push mov add fnstenv dec test sbb xchg push icebp mov push lea lds cmp jmp jmp and movsl pop push xchg jg inc dec mov mov loope lock fdivrs and jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) stc iret jg repz (bad) cld out (bad) aas add incl sub fldenv stos mov add dec inc scas inc pusha (bad) or sbb nop jb add add add add and 