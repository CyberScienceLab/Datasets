call add mov jmp add or or or add add push mov push push push push mov cmp push mov pop jl push pop xor div sbb (bad) (bad) in incl imul add movzbl and ss mov shl or mov shr nop out call and mov mov sbb in jbe push and and mov add dec cld outsl (bad) in pushl test jne movb jmp mov dec movb push add idivb jbe or mov shr rorl jmp cmp andl add add in call or pop leave ret cmpl mov jle mov int aas lods mov test jl mov movsbl and xchg adc in adc sarb shrb lahf jecxz mov mov inc inc aas daa push fstpt inc or or mov inc jmp negb in mov and push push jae push call in (bad) or or je push pushl mov mov sti (bad) sti idiv push add push cmp pop ja cmp and js mov call jl push or aam and in pop mov negl or mov (bad) js mov sbb push test (bad) jne call lock pop gs push js imul insb lods lods jmp xor std jbe xor mov push push fcmovnu in dec movsb mov cld sub test cld lods sbb push jle adc push push scas push sbb jle cmpb pop es data16 and cmp (bad) dec (bad) and cmpl and sbb je cld lds cwtl clc add inc scas pop or or into ret dec add in mov fucomi push cld sti push call ret mov or test push push fistl int3 icebp xor call (bad) fmulp decb sbb inc inc push cs dec add in and jmp aaa push scas pop fsts bnd push fildl ss jmp sub mov cmova push cli pop leave ret mov dec add push or pop je or mov (bad) or cmpl jbe adc or push inc adc rorl mov mov pop jo hlt add sub pop xchg or mulb push inc mov in push mov and xor imul lahf cmp or xor cmp je cmp jbe aad clc stos dec or xor and or xor xchg cmp jb fs lods inc pop dec repnz jp fcomps clc mov data16 in (bad) lods pusha movl mov inc and mov push mov mov lcall or pushl inc stos xor dec gs hlt repnz lods mov pop or and cmpsl sbb push js test div out mov cmp jae fildl imul loopne mov pushl dec call imul lahf addb xchg and jle (bad) negb (bad) dec sub lea pop sub mov pop push decl repz mov add push jecxz sub sti arpl inc cwtl adc dec push jecxz,pt sti notb mov jl push mov mov adc (bad) out add or mov jp nop and (bad) lods loope cmp mov call (bad) mov mov add add mov (bad) sub and and mov cmp lea push inc add loopne pushl xchg add cld je incl jmp (bad) pop and fwait arpl icebp incl or xchg fcomip push push jl and mov xchg sqrtps ret les in xchg leave mov mov dec push push sarl ret out push enter and sbb xchg ja (bad) mov push xor mov and adc and and jo or dec in repnz inc push je cmpl inc sar lcall and jp out add mov je fs mov inc or adc lock and sarl jp sbb push jg stos mov gs add pop add je lcall add es aaa sub add test (bad) sti aaa lds imul push cmp xchg sbb adc push pop xor sub adc inc xor xchg movsb shlb or cmp pop xor add std movb push mov and fidivr rolb or imul jne push add pop cld stos adc or fimul push (bad) sbb test and sub cmp test aas mov mov or je push xchg jns out imul movb push outsb lret mov push mov cmp dec int cmp push push adc add sub shl popa sub fidivrl xchg adc lods clc test adc insb sahf sbb fisubl loopne adc xor push xor in push aas ds push push mov mov push test or or jne sub lock mov push cld push cmp fs inc bound or xchg push cmpsl lods jo push or or dec mov fidivl out enter sbb cmpsb je inc sub pop sbb push xchg inc xlat add xchg push and mov mov pusha dec rolb xor andl jle lahf sub mov mov andl add jge popf jmp push rorl call add repnz jns mov outsl push cmp stos jne push adc xor adc scas mov jno sub inc xor jle mov outsb mov jl arpl leave inc jbe sbb and and add inc pop pop (bad) add arpl test push scas mov cmp sub (bad) sbb cmp pop lds add mov xor and jae aam rorl cmp pop fstl push adc imul mov jmp add xchg adc jae decl or les jge cmp lret dec mov sub mov mov xchg add shll mov cmpl or sbb inc stos mov shlb test lods and in cld inc xchg mov je jns out adc test xchg daa and popa mov (bad) add dec pop pop cmp orb adc incl inc jne adc add or jne mov push cli cmp xor add add incb lea push push into cli lods (bad) out scas mov orps adc lods ss outsl push cld push pop insl add sbb cmp inc and das inc rorb or (bad) out addr16 push das dec mov xor dec adc ss notb cld std lea push push fldl pop or std add and inc lds addl mov fwait pushf fdivr les jbe rolb inc xchg inc or sbb mov je outsl jle sbb mov push xor or (bad) sbb xor cwtl mov nop data16 sub jae or jne inc cmp jl lods inc xor fsubp mov push sbb jno call pop adc jne lock cmp xor add dec mov hlt jge (bad) sub push decl and or adc cmp je clc neg sbb inc cmp jl test scas or mov lock lock push movsl lods das ds adc mov mov cltd or in sub cmp dec push mov lock rcrl and clc movsb dec adc dec sub mov lds or xor xor mov out adc cmp lea mov dec cmp mov sub push (bad) mov mov xor pop mov add dec cmp shr push xor dec pop jle mov fistp nop mov ds add lea cmp push cld or (bad) lea fstp inc jge or pop decl das jmp fdivp lret push test jl (bad) pushl and in jg orb inc cmp int3 loope fiaddl jne hlt and sub mov mov fstpt pop mov addb jnp push add mov mov push xor sub ret or pop stc and scas cmp inc adc sbb js adc lret adc and dec ja je in test or bound jne jbe or jo adc testl aas inc sub bound push addl cwtl mov mov cld mov xor fidiv pusha xor pop xor pop cltd test sbb sub add dec fistl mulb add xchg pop mov xor inc sbb mov xor enter pop jo cmc jne iret bound (bad) fbld (bad) movsl lock push fidivr add cld icebp int3 add mov rcrl div xchg mov lahf mov rolb xchg push mov daa mov fldl pop pushl add lcall adc addr16 shl dec in jne fcmove clc mov xor scas mov cmpsl add cmp clc imul jne sbb loope (bad) mov xor clc add pushl mov jbe sbb pop lahf push pop push int arpl and push ja jecxz shrl sbb or pusha aam and scas mov mov dec call sbb mov icebp cmp push lahf ficomp outsb test push ret pop lock mov movl mull (bad) stc jne sub pushaw cmp (bad) xor loopne insl or hlt icebp sbb ss loopne add jmp add inc or icebp andl inc lea or inc add jge stos daa xor sbb enter add pop imul insb inc call test mov pop jmp pop jbe shlb fmull stos mov bound cmp or push mov mov add shrl jbe mov adc in cmpb push push xchg in cmp mov rclb (bad) idivl sub fdivrl and mov cmp push pop lret jmp mov dec lock ja or mov rorl sbb adc test pop loope movl test jg inc sbb sbb mov pop and jl lea ror lods fidivrl mov or rcrl or cltd pop mov and push imulb jbe cwtl push imul mov dec shl add mov add aas sub cld sub adc add push ficoml or mov xchg pushf idivl xchg push xor pop adc push mov push iret cmp cmp iret jo addl rorb xchg push add jmp sarb mov add mov sub dec jns xor arpl fucomp les mov mov sub mov repz cmp pop add fldt (bad) inc pusha mov and movsb inc enter fisttpll mov inc hlt mov mov mov jmp mov mov shr fbstp pop add int3 and mov push mov orb cli stos ljmp push fdiv and adc test loopne push jae dec and pop out sbb and loopne gs std or mov js mov mov mov push adc sbb adc xor add adc dec orb pop push push xor scas test push xchg cmp mov inc lock mov shrb push lret push out mov inc jle adc data16 or push or mov add inc xor mov dec call or pushf test sbb fisub rcl call scas push mov inc cld xlat movsl mov sbb ret mov jmp lea xchg cwtl hlt cmp pop (bad) (bad) or sbb sub jl jmp imul (bad) mov ja mov hlt and (bad) xor or (bad) mov inc cmp bnd dec imul lea (bad) rcll mov sbb xor push inc stos mov or loope pop and dec lea (bad) adc pop mov and push and add clc test dec or int3 push or jmp ds cmp and mov mov mov or call nop cmp mov mov dec push sbbl jns inc mov je sbb and les lock pop cmp and jnp and iret jno sbb inc cltd cld loopne movsl sub dec test push in adc fcmovnb and add std mov pop xor in test lods add xor int lahf adc shr mov mov adc add mov aad sub pop es shufps jnp dec push dec dec pusha imul mov icebp or mov sbb adc and inc add mov (bad) jo out push pop dec dec xchg add adc popa out jle mov xchg loopne xor sub sbb aaa push and or fwait (bad) popf pop stos fwait out sub inc xchg mov into inc cmpl lcall inc mov cmp xchg xor popa je and mov jle adc mov or clc cmp push sbb xor mov add mov xchg cmp or push push push cld nop pop clc test dec pop fimul jg or push jo add loopne push jmp mov add xchg in je push or and cmc inc mov shrl and std sbb or push sbb ret sbb rclb lea xchg sbb aaa jo sbb inc scas mov rorb fdiv sahf push sbbl sbb std adc test mov fdivr dec xchg clc insb jnp fbstp gs addr16 pop insl invd rorb mov (bad) jg mov xor imul outsb xchg incb add testl lea jo pop jg and xor adc aas fstpt or mov sbb pop (bad) sbb pop sub add jmp fstps or xorl push ja pop cwtl jecxz push xlat dec imul push mov test (bad) xchg (bad) fistpl (bad) loopne xchg xor mov cmp ss cmp jl push (bad) push or rcll pop xchg jns adc or testb orl adc cmpsl mov add adc mov sbb out push cmp pusha or into call push push outsl mov aaa mov mov mov push bound inc hlt xchg push pop or leave hlt lea loopne fisttp add scas rcll or (bad) jne gs pusha (bad) pop (bad) and fcomps out push adc (bad) out rorb cmp les pop clc sub mov or ljmp nop or add in dec add xchg sbb dec add sbb call hlt cmp cmp sub jne mov test jle cld out ljmp sahf pop movzbl inc jmp xor inc and dec xor dec repz leave inc cmp jle and cvtpi2ps inc adc mov imul mov inc cmp jl xor add add jge add cmp cs (bad) lock dec stos sbb clc pop insb mov loopne movb ds cmp scas or xlat je inc add cmp hlt add add adc (bad) dec adc pop xchg fiadd mov or cmpsb or inc add push xor xor jb mov clc and add iret lock (bad) lea jg lock mov pcmpeqb stc aas je or ret xchg add jne jb rorb inc mov sbb idiv into jle and inc adc inc dec pop pushl mov push jmp mov clc add inc imul ficom xchg (bad) clc ja push jle jle cmpb je inc subl decl jmp mov push inc ret inc out mov je or or leave insb cs mov js std outsl add je cmp jle test and icebp scas mov add cmp jae into imul std jbe add dec or sti jg addb (bad) mov mov mov cmp jne cmp jne adc jbe imul dec adc adc jbe or adc lds mov inc mov add (bad) jmp cmp push sub mov pop adc mov into and inc push cmpsb push ja xlat into je push imul cmpsb inc sub mov imul sbb es test and jbe add jle fdivrl xchg (bad) cmp and nop popa fnop xchg xor mov pushf inc push mov dec pop and xor pop jge mov adc or or inc cmp (bad) aaa les je add or or sbb sbb cmp sub ret test pop adcl mov adc jne or jne xor push mov pusha imul std test in sub add mov add dec cmpsl dec lret sub imul out sbb sub push mov ret sahf push sbb mov inc jne test sahf test shrb test popa push sbb push push sbb insl out xchg adc push (bad) punpckhbw jno fiaddl adc add je aam les inc sub fbstp inc sti arpl stos jmp push sbb adcl inc test mov cld cmp lahf jp or pop cli mov or incb (bad) stos sarl repz push in cmp push aaa pop std inc rolb mov push ret and push push es inc clc andl and or lock sbb insb jg rorb pop xor roll inc imul push push mov fs jl jo pop loopne sarl push or sbb inc add loopne orl adc (bad) push test outsl pop ds cmp xor sub insb fsts dec fs push test mov nop pop and sbb or xor sbb or sub cld pop pop jl dec out jge fnop add adc jo cmp cmpsl sub js lock or fiaddl cmpl mov xchg leave jle jnp cld (bad) ds add jo jne push cltd pop idiv xor xchg pop sub add inc dec or lea dec add fldenv mov pop mov aas push lock jl xor inc add sahf loope mov popa jl je fs mov sub imul sbb push sbb add clc nop adc sub hlt ucomiss inc pop leave orb pop adc jg add fcmovne lret xchg jo outsl adc push lds loope test sub pop jg,pn inc adc xchg adcl push leave inc stc (bad) insl adc add sub sub stc cmpl adcl jp cmpb iret sbb cmp inc add mov or cmc gs xchg xchg adc add xchg in pusha xor dec xchg push loopne faddl mov and clc or push popa mov mov push push push das or sub (bad) sub cwtl and movd pop hlt adc xor ja inc inc push pop dec ds lock pushl call pop add push out or pop mov jns push test push push mov cld out xchg lock ret push mov rolb js andl mov add or sub add pop or jle cmp jo pushl jno mov adc outsb jge enter mov arpl lock icebp jl sbb inc cmp sbb jo add push or ret xchg cmp cltd cmpl xchg stc adc repnz lcall in imull sahf mov lea in pop jecxz push dec pop pop movsb popa dec loopne xchg test push pop hlt test cmp pushl es inc cld jns xor es add fild (bad) loope sbb lcall jb cltd xlat test or fmuls scas nop pop leave or ret and dec or jb adc flds xor dec or clc xor adc sbb pop fnstcw sub hlt daa and inc fwait sahf stos sbb jne mov adc (bad) dec and or lea aas add sarl add cmp test mov and sti aaa jns orl je inc sbb pop dec xchg sahf adc mov je jle xor inc enter insw mov add test jl add dec xchg mov ret outsl insb inc jns sbb push mov push stos mov xchg (bad) jo popa shrb mov cmp daa call cmp lret add mov sub rol add fsubr int pop or (bad) negl rorb pusha pop rcrb cmp outsb or insb pushl mov ret dec je add dec sub or push dec sbb inc loopne pop lock hlt adc bound push push add push push add adc sub xchg xor sbb sbbl push subl aad push cmp and dec ret stc push jecxz call or ljmp jns cs or push jne aaa xor cmp jb push pushf or add push cmp add mov aaa add push int (bad) push loope fisub jne jb push adc clc lahf push cs js neg sbb and push mov sub rolb sbb or dec push push loopne nop jp mov xor or dec jmp xchg clc or add or inc pop fst push pushf xchg add mov adc mov negb push sti cmp jo mov jmp cmp clc les pushf push or pushl test aaa fmuls add pop (bad) add or pusha lret (bad) jge fdivrs rol in popa lahf or pop movsl inc push inc add cmp add pushf sti pop adc in les sti mov adc (bad) test mov ja pusha push adc ds sahf add pop aaa lods in jecxz cltd mov enter (bad) cmp orb push insb jo xor outsb mov dec add mov aad add (bad) clc mov push and mov mov shrl and add mov (bad) aad ret mov cmp test call mov loop sti or push or andw sub test xchg xchg push jecxz rorb mov fidiv and (bad) jae sub pop sbb cmp and scas or xchg mov inc sbb adc lea lock or popa dec lea (bad) mov sbb imulb or scas adc mov sub cmp cmp adc push adc pop ret add adc pop jmp adc pop or sub jmp mov dec add jbe test pop and fnsave adc arpl pop cmc cmp add mov sub lahf push pop adcl sub mov ret and lea inc push cld xchg mov mov xchg sbb jno push and lret inc sbb es mov and inc add or sti push scas push push std jae rolb xchg add xor and mov sbb adc jp out les adc mov dec pop dec ficompl js je sbb push loopne adc add scas xor inc addr16 xor add and mov sbb test push clc cltd mov test cmp loopne pop addb push push mov inc test or xor and add cltd jb (bad) or aas push pop imul inc sub adc sub cli loopne push push xor mov xor xchg mov call ljmp xchg jl adcb rorb jmp mov inc mov push jle pop stos cmp inc ja mov pop sub push lcall jnp adc call and pop clc push and incl mov roll (bad) dec pop mov cmp pushf call xor (bad) xor sbb mov lock imull mov pop lret xor inc (bad) push xchg into notb mov cmp rcrl popa push jae divb pop cmp jle imul add cmp add inc adc cmp add aaa lock jmp dec loope add clc push add cmp (bad) mov int or adc jg or sub add leave leave inc sub add push pop (bad) sti mov sub and push pop xor jmp sub xor in out push cmp adc push mov sbb aam xor int sub cld cmpsl push push and push push (bad) push dec adc cmp mov negb in push (bad) arpl incb call sbb nop xor add std sub and test sub loopne (bad) call stc or cld dec push adc roll push push sub cmpb jns and mov sahf mov je sub repz into std cmp add cmp cmp adc cmpl call push or mov push cmp in in mov pop add mov pusha adc mov fwait outsb mov add jmp sub dec sbb push mov cmp or mov ljmp add mov push mov adc (bad) lret repz sub cli mov imul sbb inc sbb adc inc adc decb adc std push or cmpl cmp mov add mov mov das pop cld cmp inc pop cmp cmpsl mov cmp mov je push mov jbe call jbe cld cltd cmp mov jnp lods mov sub cmp pop push inc loopne pop mov adc dec loopne push adc fs mov in or jl cld cmpsb jns test rolb pop rcl mov push push aad sub mov mov add loopne mov or add mov test add jo inc add add jnp sahf inc and clc add fisubl fist add jne xchg int3 inc adc js xor (bad) dec sub add add mov int3 pop push mov (bad) mov xor fcompl inc inc cmp inc movsl add xor mov adc xor sub fcoml or arpl xor (bad) jne cmp inc add mov pop fstpt jbe jb dec ljmp frstor dec jp xor mov xor sub pushl xor push daa inc xchg cmp push push insl sti adc add push rclb subb mov rcll inc mov push and lret add enter jle fiaddl les movl push adc jbe (bad) faddp je dec les sbb push adc enter sbb ja or xor and add mov loop jl pop (bad) mov mov mov mov ret push andl xchg jne mov adc inc sbb push hlt bound mov and mov lcall adc scas add inc js int3 or add sub cmp mov adc sbb and sub and jbe pop sub rolb push sub loopne cmp jne test repnz out ljmp mov test xor clc push pop les push pop fnstenv mov cld push sub adc mov je (bad) xor (bad) push fdivrs push nop je add push jge fisttpll outsb popf cmp je push add push aas in lds aaa in sbbl add and adc popa popa cmp loopne (bad) sbb xor and inc test mov mov bound push inc pop jo paddsw sti push or jge xchg ja xor add movb cmpsb push lock mov cmp shrb add cs or pop jne push repnz sub sbb dec loopne jo xchg jle xor ret enter add cmp adc stc jmp jmp mov in loopne mov test divb jne sbb jge adc xor rclb jecxz and dec jbe or xor push in push jmp sub pop mov daa arpl push (bad) lret push or shr in lea sbb add mov sar inc shl rorb jg fst xlat nop add (bad) enter push jne add rcrl push mov jne jp sub and mov clc (bad) dec ss pop (bad) inc push mov or mov rcll bound ret add xor sub mov or orl (bad) sti jl cmp je inc inc add shl push or and cmp cmpsl in add faddl mov mov inc and sub pop jmp sub mov iret lret rorl gs and mov add out dec test enter pop gs dec inc je pop iret mov popa jl dec lret jmp mov sub inc xor loopne lock (bad) repnz push mov mov adc jmp les dec or mov imul mov jae push xor addb sub cmp xor cmp push push add add cmp ss dec test jl adc dec mov shl push pop mov rcr call addr16 adc lock inc add mov lea std sub push mov xor xor decl cmp mov pop cmp push out imulb sub mov mov incb pop adc pop mov call testb je mov mov mov (bad) idivl fidivr dec popf inc adc adc stos mov add dec mov add xor lea inc or adc enter sbb dec mov fcmovnb inc int3 or clc or lods lods add aad sub int popf je mov jne push mov mov jnp jo mov nop add inc push in out push mov cmp cs fisttpll gs adc sbb jl imul dec add testl sub adc or scas sbb push xor jno cmp in or cmc add cmc add sbb sbb (bad) repz adc jno push pop push pop push mov aas xchg push pop jmp (bad) je fmuls aas push ja ret insl and and adc (bad) int3 jbe sahf push movsb pop mov dec inc or sub ja fsubs mov dec in gs xor pop cmp push add push imul andl mov pop into dec cmp cltd sub push shrl inc push or xor or shl mov dec xchg sbb out hlt call rcrl cmp or pop clc mov cmp out sti jg mov mov cmp jbe mov (bad) sub inc es inc xor jbe sub push adc cmp push or incl hlt subl jl jl cmp lea sbb je movsl xchg and mov and cwtl cli jb aad jg je mov add sbb out jne decl subl add jns jg jb ret rclb or pop or push je add dec sar pop ja movzbl test inc inc mov or (bad) pop jae push (bad) mov pop jmp test decl or jmp push jmp shr cmp std ljmp in outsb insl fcomps adc add divb sub add add loopne lea add incb mov push or ret jmp xchg (bad) jg outsl cmp and leave sete (bad) ficom jle add push add adc pop jo ja addb repnz add flds test divl cmp loope popa xchg push push cld call pop xchg incb or ljmp out in movswl insb cmp (bad) call mov dec or push je subb jp xchg cltd int3 push mov jne enter cmp cmp push jbe lea test sbb inc cmp in and add jmp pop out sub cmp pop push cmp loopne and into add jp ficoml or mov push mov fldl lea dec jo lods cmp sar add sub pop jns push fcmovnbe test sar xchg pop push adc push sbb leave call iret cli mov adc je mov push jl and arpl jl mov je cld pop sbb and repz outsb push mov mov sub push sarb in ss pusha jno inc inc mov lahf fdivp je cmpb and push je mov inc or pop popa cmp clc cmp pop jne push or jmp jge lock dec leave cmc pop lcall loop sub cld dec pop jne je inc adc and pop or inc notl test jb inc lea push inc adc add or pop (bad) imul pop jne imulb jecxz ret fs stc and outsb cmpb mov sub movb pop out or test or mov pop and xchg inc adc inc cmp cmp pop add push sbbl ret sbb inc ret jb arpl push mov jbe or cmpsl inc dec pusha mov lea mov mov incl add sub jmp jne addl jnp test xchg jae lret mov inc arpl push inc or insb inc push xchg xor and jns or mov loopne push pop pop rcrl add mov xor mov into adc aam or push faddl or mov add test ficom xchg sbb test pop pop sub push and je push rolb cmc xor jae jb pop cmp push sub push dec es xor cmp or inc add cltd test aas mov add mov clc outsl add mov dec inc cli add or cmp jae ficompl sub cmpb adc shl js adc jns rorl das cmp aas mov xlat dec dec mov inc xlat (bad) xor pop xchg rol insb adc and or sbb insl cltd popl add pop outsb rorl inc jbe or std imul jb cmp jge mov fildl int3 les adc fsubrs mov pop sub cmp jl mov (bad) jl add push cmp clc insl inc ror popa mov mov sti xchg ret jmp mov push cwtl outsb (bad) cmp popa outsl rcll pop push fsubrs aaa int and lods lret popa stos inc cmp or sub inc add cmp and test mov pop stos push or loop add or and mov je mov mov pop sub push lahf pop mov (bad) loopne rclb sbb add or ret mov sbb cmp rclb push mov pop xor and jge arpl or enter lret sbb mov bound push ficom movsb xor pop mov test push pop fstpl cmpsb arpl dec or pop push push pop movsb test (bad) adc add jae push subb push (bad) jo cmp xchg and pop cmove subb push jmp push jnp sub data16 imul cmp xor add mov cmp xor lret fsubs jns sub jae inc or jge aam sbb add jmp push (bad) je or rol inc hlt add add mov mov je je js test aaa mov out push (bad) xor push mov rorb leave mov lret adc jne mov or insl inc sbb hlt push jo dec pop insb inc jecxz sbb out add cmpl je pop inc mov cmp jb adc aaa xchg jae lock mov inc notb cmp notb das cmp pop pop dec lea mov sete imul je xor pop shll (bad) sub inc das pop call ss add sub push push push push aad sbb push dec pop push icebp mov add jbe ret mov or je cmp lds xor and ja ret loope cld dec pop jo mov test and dec stos push sbb jo lret mov dec mov add push shrl mov xor push xorl daa mov or test or lcall popf pop xor pop or flds hlt push jno popf mov arpl pop cmp mov push sub (bad) sbb (bad) in push push or pop (bad) testl jb pop rcr pop push sub fdivs dec cmp (bad) outsl pop pop pop adc push pop jbe sbb mov js sub pop test inc add outsl dec pop add arpl hlt push je push insl ret imul add or mov or mov inc sub dec sub push call lock sub in lahf sarl inc lock test xor cmp jl loope adc je mov out dec add pushf movsl pop push cmp out xchg or push xor push xchg and arpl add pextrw add add sbb inc jns push es imul xor fsts movsb pop mov adc stc in fistpl sub imul insb xor stc pusha jge std push push jns subl scas in pusha sbbl pop lods pop inc and push cmpsl jb dec cmpsl mov pop test orl add daa push cmp xor mov (bad) pop cmp pop and popa jmp mov mov test sub mov adc mov push mov sbb pop inc mov xchg clc (bad) cwtl and pop mov sbb mov das xor add cwtl aad pop sbb mov js adc cmp lock movsl lock cmp xchg add and or push mov add daa fstl pop sbb jmp jb (bad) out jne pop xor ret mov pop add xor in mov es dec lods pop inc sbb sbb add pop lock or inc xor jo push aam mov dec mov movsl pop jmp push das lock arpl dec fbstp (bad) cmp xchg mov push add imul xchg and imul loope inc pop leave dec addb sbb inc jge adc mov imul dec inc fiaddl xchg dec jl or adc fildll shll fnstcw cmp xchg push cmp jg push iret std sarb inc sub mov repz xchg fcmovnu push (bad) xor add clc jne pop jns fsts adc inc add mov or stc mov push cmpsl push jne in pushf les insb xor pusha pushf les (bad) mov add push mov cmp out mov nop or adc mov push clc xchg test bound fild cltd mov mov adc enter sub adc mov dec fdivp rcll mov hlt int3 push xor jg nop xchg pop inc xor jae cmpsl push sub mov inc inc stos cmp sbb enter test inc add xchg outsb outsb jmp inc xor hlt dec push and push add pop hlt imul mov rol dec xorl adc push iret mov mull sub sub js xchg sub push fcoms aam testb aam cmp (bad) outsb sbb sbb jne dec daa aas push or cmp (bad) pop cld (bad) (bad) jne add mov xor and push andb push sarl or fwait loopne sbb adc fsubrs sbb movsbl add rorb or push cltd dec dec pop pop fwait push rolb push mov loopne or cmpsl push and dec mov ficoml mov and cmp scas xor int3 add mov xchg xchg xchg loopne pop xchg mov ljmp dec pop mov cmp or shrl push inc (bad) pusha mov test jge,pt pop adc test xchg and in sbb inc mov mov adc fistl add scas scas repz push sbb jl insb push inc add fiadd fwait adc roll cwtl mov pop cmpsl or ret sbb adc in out adc mov sub pop cmp pop and pop mov dec mov jle and mov shl or rorb mov and cmp push jge adc mov adc pushf in or and adc in cmp aaa je js push mov inc loop dec adc lcall xadd sbb pop das cltd sbb add mov adc mov lods dec or adc pop ja mov xor xchg pop (bad) js stos out push sub outsl arpl test cmpsb cmp cwtl push sbb push sar je orb test sbb loope mov adc add pop popa arpl add sbb (bad) (bad) ficompl xor xor pop mov jl xor or mov nop add xor enter mov xchg inc scas lods or call aad mov dec mov insb pop adc or inc add xor sbb test xchg sub int3 fwait adc das es fs popa jno push sub (bad) dec or rorb nop leave inc out fwait add inc incb incl pop add mov mov inc nop outsl mov rclb test cmp sbb lcall (bad) mov mov sub lods adc pop add test xor orb sub je aaa jmp (bad) xchg ret add inc and popa js dec push adcb mov jbe ret cmp stos mov cmpsl imul mov sub fnsave notb andb mov enter and test (bad) adc xchg pop adc xchg orb (bad) cli fiadd clc xor (bad) cmp in rcrb lock fwait xchg push rorl jmp cmpl jne out iret cmpsb xchg fistl push push push js pushf or mov (bad) int3 add xchg mov inc negl scas xchg loopne daa cmp and (bad) mov loopne cmp test cmp adc push shrb sub sbb enter (bad) dec xchg arpl and cmp sbb sbb jge cmpsl push test mov xor sub inc jo mov push cld push mov pop push push imulb adcl inc cmp dec outsl iret and jmp xchg fwait test sub ds cwtl mov add jecxz or test xchg in mov jmp gs sbb (bad) push cs vmovsldup push jmp jmp ficoml cwtl mov cmp add sbb test inc rcrb or cwtl and push push push call jle jo loop cltd jno push andl xor sub mov or xor sbb sub fcmovb sub shlb rolb cs loopne or add enter xchg loopne faddl or test jg nop ja div mov lock push cmp fcoms das clc cmp xor das and push mov sbb imul xchg add imul enter sbbb cmpb ret ret dec sarb cs mov push mov jge and lcall mov xlat jbe and mov pop push sarl jecxz push addb and pop sub mov dec jecxz mov les rolb sbb das add adc movsb push test push imul xchg sbb xor mov sub mov dec sbb pusha push (bad) rorl sahf out and insb std call adcl mov cmp inc adc inc (bad) dec (bad) mov jo dec cmpl cmpl adc sahf jnp push push mov jmp pop adc addl rorl or pop and dec hlt sahf fs mov std pushf and inc and jns lret inc movb sti loopne lea pop and pusha mov loopne inc lahf sbb inc inc jmp mov lea fiaddl dec test xchg arpl in push and add dec es xchg dec insl push pop and mov les cltd pop idiv xorb lss loopne mov imul adc pop mov mov in push test cmp push repnz jg pop jo pop imul popa in outsl scas mov cmp mov in cs add inc cmp xor cli mov lcall or xchg imul or dec push push push push sbb lea or je rcll sub xor dec mov je mov mov sbb jns push les aam loop mov adc add shlb push mov clc std loopne mov jne popa and fistpl add fcmovb or dec mov add je ret sbb add out mov mov dec ja sub leave jno cmp loope rorl adc sarb inc je fnop insl and add hlt fisttpl dec mov mov icebp pushl add je cmp je dec leave jmp cmpsb mov insl jb and jmp fisubr test scas mov (bad) pop jne inc loope push insl out add add add cmp adc adc (bad) ficomp xor inc add and loop add or mov decb push push pop mov pop jne xchg pop push inc add hlt push call bound insl fiaddl pop inc mov out xor mov in xchg in xchg or xor cmp jne mov mov xchg cld inc push or pop imul add jb clc pop setne leave adc xchg push movsb mov lods jne mov sbb dec cmp mov pop clc std mov push mov mov mov xchg inc sub add call lret and fsubrl mov push pop mov call and jb cmc adc push in adc add ret mov enter sub mov pusha add loop and mov rcr inc pop sub fisubr adc add xchg popa adc inc mov mov in cmpsl sarb scas cwtl fwait ja push adc mov ja jns (bad) (bad) push push lret jmp xlat dec xchg movb jmp pop orl in xchg xor push jg cmp jmp data16 mov jle cmp dec cli add mov pop add icebp cmp repz or mov cmpb mov add lock das inc dec push loope inc movsb in xchg and inc popa mov je mov push sbb nop adc push xchg xchg pop pop mov pop insl jo sbb sbb ficomp fs sub loopne lock mov add (bad) dec fisubr push inc push inc ds call lods adc notb pop jo fcomps mov nop xor shrb and lcall leave and test test dec lahf rcrl sbb mov mov inc or inc sbb addr16 fs inc stos adc test inc dec daa sub rcrb fadds sbb ds loope inc pop je mov cld aaa sub and xlat cmp mov jmp aaa pusha jmp iret int test stc je shlb lds jg mov icebp fdivl or and das add lea cmp push push (bad) mov jo add hlt add sar inc add cmp jle ss push loopne cmp xlat and mov jo or inc inc call movsl mov jmp outsl (bad) add paddusb rorb pusha std cmc jg shrb sti jmp outsb xor push add test sbb je inc push push add cmpsb test lods pop pusha cmpsb sbb clc je sarb pop pop inc sub adc or insb jge test cmpsl pop jge and subb push add pop cld cmp loop sub clc adc test hlt sub mov push adc (bad) pusha cs loopne loop jge inc cmpl and jne in loope sti (bad) xor enter adc sbb push fldl leave cmp negl or sbb lock in fsubs fisubrl int3 cmp push (bad) fildll loop cmpl movsl adc xchg popa shr jmp mov or cmp inc add cmp test ret add or int sbb dec adc rcll roll push insb dec dec ret sbb shl sahf addl add es xor test mov add add das add cwtl insb push xor aad pushf cmp inc cwtl cmpsb mov (bad) adc push mov ret or adc push out mov cmpsb daa into movsl aas xcrypt-cbc and add je pop loopne in dec cmp mov pop xchg push sub enter ficompl xchg hlt mov adc cmpsl lahf xor xchg and mov dec movsb mov sbb xor int rorl lock and dec lret fcmovnbe xor xchg (bad) adc cmpsl xor clc inc jae nop jno dec arpl push imul or in (bad) push xchg adc mov frstor fs out and xor outsb test rcrb xchg lea and push inc sbb dec xchg mov imul ja adc sub push mov add movsl push icebp dec (bad) dec mov or xchg jmp clc test and std inc addr16 add sbb mov xor (bad) adc jno mov sar cmp mov pop daa cmc xor sti dec xchg in inc jb lods test mov xchg xor loop les inc and mov and scas mov into xor ja push out enter or add mov or (bad) pop push orl pusha cmp mov mov popa fldl xlat arpl cmp test and or or femms mov inc pop lock push icebp jb test push mov test mov mov sahf jo and (bad) mov cmpsb mov pop insb jp add or add out push mov pop fildll cmp push int3 add pop setne pop inc repz cmp pop (bad) push (bad) jne (bad) test mov sbb xor mov and add ret add jg cmp xchg adc test push outsb jp mov pop sub add push fildl push inc scas jbe in fimull rcrl push push les lret pop add adc mov dec psllq adc adc inc inc cmp add push xor fs or fimull pop sahf jp jl test fdivrs pop inc cmp orl cmc push not jo mov push test addl (bad) je cs negl add push push push inc das aaa jo push mov cmp push push lods push std movzbl orl cmp test sub rorl lods xorl and or add mov add sbb inc cwtl jnp dec adc mov and sbb cmp sub aaa and int or mov push and mov jbe mov push pop dec cmp mov cmp mov ret mov cmp dec movsb mov or adc movsl dec cli daa iret xor scas xchg testb push lea mov adc sub fimul mov inc loop,pn inc add into mov jecxz add adc mov movl dec add push xor mov loopne inc adc std les pop mov (bad) or sbb lcall xchg test sbb inc xchg mov feni(8087 insb push arpl jno adc add cmp aas lea cmp inc mov adc dec adcl call pop mov in cwtl add cwtl or fnstsw imul icebp cld lods mov je jmp push jmp and popa punpckhbw inc rorl push ret shlb repnz mov and stos dec loopne or popa add jne and stos arpl ja imul or xlat cmp sbb and add mov movsl lea repz movsb adc add push test jo dec sbb movsb push jge fimull scas jae push mov jmp clc mov sbb and sbb sbb or mov aad and mov xor sbb jo jne mov nop fsubr subb mov xchg gs or inc push jns and mov test or mov movsb inc js outsl or xchg popa testl loopne ja or pushf dec xchg jl inc mov jne dec ret sbb cmpps mov mov hlt adc std xchg or mov and shlb pusha push add shrb in loopne arpl aaa jmp adc xor or aam shrb adc call fbstp dec mov ljmp mov sub divl push or mov add nop sub push mov or rcrb xchg jbe add dec sbb push jp xor inc mov or xchg xchg scas dec jge jge add loopne push sbb xlat ret data16 cld mov in xchg sarb add push xor movsbw aas mov loope mov mov mov push pop jb dec rclb add xchg inc and rcrl int3 enter inc js jbe jnp lods fisttpl out add nop mov inc fmull xor xor dec popa jns lcall adc inc loope ds push das jae inc loop bswap sub add mov xchg cmp or jg xor xor cmp adc cmp orw insl sarl cmp inc inc xor jne mov jmp jo addl rol add lock push imul cs add sbb call outsb xchg inc aaa sub xchg test or in pop nop add push push xor (bad) int ja,pt ja inc xor jmp ret push mov push mov mov mov push mov xor ljmp cmp in cmp adc (bad) das xor and jo push mov cmp and add sbb test add xor mov aas push push ljmp dec fcoms test cmpsb sarb (bad) in push xor cmpsb cmp in ret mov arpl test sub dec dec insb push lock jb fcom lods push inc add cmpsb cmp bound add mov mov loopne mov mov enter xchg and stc test les push pushf push lods cmp lcall inc add xchg cwtl push pop sbb or push push cmpsl sbb and test fadd ss pop mov js,pt mov clc add jmp mov call mov mov inc and xchg icebp leave xor sti sub add shl sbb inc cmp jge sbb outsb mov and xchg or lock push mov mov sbb xorb insb rol cli inc fmulp jecxz pop jl mov mov mov stos test add movl rorb negl or inc loope mov add push fcmovu add jb mov or adc lock loopne add dec lret es mov loopne rorb mov dec sub inc jbe xor movsl push mov jmp xchg mov pop push xchg jo mov xor xor pop out inc jnp add outsb stc sbb add mov inc lock in cmp lock mov in push mov jae and stos xchg loopne decb out cwtl add enter scas addl cmp flds test or add sbb add rolb and jg cmpsl rolb testb fimull jbe subb adc inc loope fistp (bad) out cmp jb jmp lea cmp icebp jae adc shr mov clc jle mov sahf (bad) xor sub in pusha or popa mov or subl test mov jmp rol test xchg push and adc jns repz mov push or ja loop sbb js cmp lea jns jo cltd jb add sbb decl or push lock mov aad pop and cmpsb and xor jmp pop add icebp scas js cld inc adc lock or jl inc push mov in in xor daa in inc imul call and sbb add push or xchg pop lea xchg inc and out cltd mov adc cmp ret int sbb xchg xchg iret inc or nop mul xor push inc jbe cltd nop inc inc in cmp jp in pushl popa ss cwtl jbe sbb (bad) lock jl mov outsb jmp (bad) xor add mov int3 subl (bad) cmpsl in xor adc popa addr16 adc (bad) jge lock add mov pop clc pusha xor ret mov push inc sub jo (bad) mov lds repz add std mov push pushl mov rcl call dec outsb iret call fsubrs adc add imul lock or test dec rcll shrl rol lea pop pop mov inc call ret (bad) mov push jecxz stos xor test push fistp xor fcoml push add push or dec jno in jp mov xor jmp xor loopne fdivrs mov mov and push (bad) sbb fsubl or mov jl jbe or inc inc mov jl add xorl jbe sbb std add aad mov flds (bad) cmp jo loope lcall xor fisttp push mov sahf ss (bad) arpl je cmp je gs and add sbb nop or push push stc dec es sarb sub popa sbb orl mov ljmp xlat (bad) adc mov add add inc add or sub xor mov add xchg pop cmp mov add push mov insl and cmp sbb jnp scas ret fist popf xorb fisttpl sub insl push push test movsl pop pop inc jne pop scas std mov orl and mov das jne push test mov fmull xor xor pushw insl sub xor imul jge fimul scas jne push mov je mov test jo add cmp fsubrs pop add jp sub xchg and hlt or mov cs test or jge add adc pop fisttpll xchg add out sti sbb pop add loope inc sbb push dec mov xchg rcrb cmp cmp shrl sub sarl inc cmp sbb xor jo mov ss dec or cs pushl push push out and sbb jmp push jo push or popa sbb jbe jno push mov mov jns loopne push and xor adc push lods leave lea xor sub call rcl jno push rol xchg adc dec lret pop sbb sbb inc mov push or mov pop pop add aaa jae and jmp sbb adc pop roll cld add cld mov push jge jo add pop adc xlat jecxz imul or dec xchg sbb mov and mov je inc sub cmp xchg je and adc sbb nop outsb push sub test cmp add outsb cmp or jnp mov xor push orl jne dec jp mov jg (bad) jle dec push pop iret jmp mov mov cwtl or push lret dec push aas jl lahf add mov cmp loopne and or dec add test lret mov add lods sub call cmp pop lods pcmpgtw or add decb xor je add adc sbb aad push enter popa xchg (bad) pushl movl sub lea (bad) (bad) adc push jecxz pop cmp xchg pop rolb mov sbb enter jbe sbb inc push loope inc cld into push cmp icebp cld inc dec inc movsb add adc mov out inc inc clc bound daa adc mov push add lods das and jo imul mov inc sbb add sbb pop sbb test pop inc inc aam xorb xchg push jg int3 divl neg in jl in jo and inc mov scas das out pop add pushl push ret int xor mov stos push or cmp mov es out ljmp ret je mov cmp je push inc inc add add sbb or jg lock jmp mov mov bound xlat add cmp push add das mov push xchg (bad) add testl adc xor mov cmp jb sbb iret push add push push dec cmp add pusha add call push loopnew das ret xor orl cmp add or xor sbb (bad) cmp aas mov add dec les adc es mov add add and inc adc scas addl lret flds add mov addr16 mov nop inc xor mov jns or xor dec shlb lods or mov xor push cmpsb fidiv call mov test adc subb mov lcall add rcrl adc jb mov fadds jge jg out clc mov mov call dec xor (bad) int3 inc int3 mov dec loope ret jle jl sub sub push mov pop sbb xor rol daa push sti add push or dec int ljmp inc clc pusha movsb incb sbb lock shl out mov int3 jmp outsl js aaa xlat jle mov sbb pushf push xorb out dec dec mov sub repnz adc sahf (bad) sub or pop add sub push pop outsb (bad) mov inc add xchg (bad) lea adc (bad) nop mov mov add fwait sub rcll cs jbe stc das inc orl or cmp xor lock dec dec jmp gs adc and jp into add push mov (bad) int dec xchg add jg fild jnp mov incl or push hlt push xchg arpl lcall cmp mov push push jns xor push add and adc inc sbb add mov mov and inc scas adc jb mov mov ret sub insb and insb and and nop inc ret dec sbb cld (bad) and adc sub add pushf push push mov enter xchg popf jbe enter xor test hlt mov pop pusha or adc sub and in in stos mov jne dec push sbb mov nop cmp sub cwtl cwtl push mov and push and or inc mov sbb mov lret push push xchg push push call xchg sub test or imul es fwait mov test jno push incl xchg mov or mov dec adc adc or jbe or jbe lea daa in pushf xor dec lock insl sbb ds sahf inc cld cmp fnstenv fistp out mov ret mov cmp and rolb add (bad) fcoml leave cmp jle daa ja mov push add packuswb sub add or or mov sbb mov mov pop inc sub rorb add push jae (bad) loop mov test push sub les (bad) mov je sub or jbe xchg test popf jp push out pop nop sbb xorl pop lock jg pop xor mov aaa subl mov xchg mov or sbb xchg xchg add movsb inc jp test cmpsl das cmp xchg mov add (bad) nop mov jno,pn jbe cmp test inc xchg inc inc inc addb aad mov xorl sbb imul and and and and xor jge or push xor cmpl xor push icebp adc pop bound adc daa aam add xor (bad) mov inc or aaa popa inc icebp inc add add and ret mov ljmp adc popf and dec xchg stos lret pusha mov dec push push inc pop push cld outsb roll mov test ss je arpl pop negl leave jno adc (bad) pop cmp add mov adc add cmp sub push pushf or push ljmp jge inc push mov xor sub movsb insb sbb fistl push mov incl mov ja scas mov jecxz data16 push or std add sbb dec rcrb inc js mov sub add or pop mov inc mov sbb test cltd (bad) pushf xorl sub or mov push sar mov or push gs mov roll fidivrl push or lea dec push jmp repz lret or int3 aaa sub mov mov push cmp sub cmp push xchg and jl sbb lea mov jle xorb dec adc cmp cld and ret push sarb jae fwait mov push and cmp roll adc add sbb dec cmp scas push mov push mov adc adc xlat or movsb sbb add push mov arpl push sbb jbe mov fstl daa sub fisttpll dec mov jne cmp jne or and mov mov or xor cmp lock inc push sbb dec clc ss mov mov orb testb jbe (bad) or xor pop push imul cld jno ret lea push push xorl test rclb dec adc js jge xor int3 dec add push mov clc jne ret fmull rclb test in test cli xchg rorl rcl ds or push in inc pop mov push adc sarb push push mov lods sahf lock shl mov sbb or pusha addl mov pop fimul cld data16 int (bad) sub inc add add sbb xor js add xchg jle adc pop pop and nop sarb mov pop pushf sarb or call adc aad test daa mov js das add clc dec loop pop pop (bad) jle lea test or test test shl lcall (bad) nop ljmp jae and add cvttps2pi xor pop cwtl hlt push push std fwait jle xor pop div adc cltd idiv mov imul in mov push push jae sub int movsb data16 sub add adc cld xor (bad) xor (bad) addr16 int or xor int pop lock fcmovnu roll jo lock xor or pop imul adc rclb arpl xchg cmp movsl loope mov push (bad) mov test xchg imul ret cmp add and pushf (bad) cmp sbb (bad) test lock jp add and shr adc es mov pop or cmp fstpt push loopne inc jecxz dec mov push dec adc pop push sbb imul push xchg dec test or sbb pop sbb or test inc test data16 daa or aas (bad) sbb add cmpsb dec inc lock mov mov (bad) xor clc jecxz (bad) lds sub fs mov inc sub int3 add cld cmp sbb outsb pop jl xor ja mov ljmp add add push mov and lock paddsb xchg popa jne lea aam and add cmp je lcall pop and popa or (bad) decl mov pusha ret (bad) sbb push mov mov cmova nop add js sbb inc ss push push (bad) out aas sub inc es (bad) ja sbb inc mov push jg daa das add push cmp pop xor add rorb sub imul push call (bad) sbb pop pop push insb push mov jmp mov inc xor or add sbb lret pop push adc or (bad) fistp mov push neg sbb push and mov mov inc adc rorl cmp nop loopne shlb or fldt add inc sbb insb dec and leave je xorl icebp loope je xor push out mov call sbb fldcw pop stos mov add test inc mov or adc out cld sbb loop add cmp (bad) or pop test fstpt jo or sub jle jne push jge pusha sbb repz push in dec mov xor (bad) mov jns lock xchg cld pop mov mov iret mov jge fdivr orl fld inc or jmp stc movq fistpll shl mov mov ficompl mov push not and (bad) cld out inc rolb cmp jne mov fstpl and cmp cli sub or out pop scas adc rsqrtps inc inc cwtl push outsl arpl add push sbb sbb mov add adc pop daa cmp sbb cli add pop movhps ss xchg ret dec mov push aaa sarb sub mov or (bad) fsubs inc xchg push add jp cmpsb sbb addl int movb or add mov push loope inc cmpb je movl popf loop sbb sbb jmp inc mov shr rorl jbe and mov dec dec loopne push orl out insb outsl fistp loopne leave mov or mov mov mov cs cmp adc pusha lock incl shl add div test je movl faddp mov test pop out sbb add push dec cmp push push aad insb xor adc std jne inc add test mov or testb inc add push xor inc xchg cmpsl lahf (bad) cltd pop and dec or adc mov or (bad) xor lret leave fstpt movl push icebp xor xor hlt add imul jge dec inc mov sub add loop add mov nop mov fwait or pop mov gs pop sti mov sti gs mov rolb sbb jnp sub add leave or mov ret inc add sarb or fadd add fadds ret test push or jo sub xchg inc cmpsb in add rorb (bad) adc xor loopne mov fiaddl lock mov dec ret loopne inc or or jne or aam stos mov insl adc cmp repz xchg mov int movl push out push ret cs adc pop or sbb push jne add mov adc clts push push pop add fadd cli cli (bad) pop scas push mov in push cmp (bad) fcmovnb cmpsl (bad) in js mov cmp add xor xor fcomps jne lea mov jbe adc sub push inc loope ret cli mov fadds xchg fnop ja and fidivrl mov mov (bad) or movsb (bad) jg or cmp jl or jg ljmp xor mov sarb popf test insb (bad) push cld push nop push call xchg lret add ret mov and (bad) outsl outsb sbb mov shl mov hlt and ds push pop outsb dec cmp or push les adc inc pusha dec mov loope ljmp dec sub push je xor sub pop dec inc cmp hlt pop cmp cmp push xchg and xchg sbb test pushf cmp or sbb dec or lock cmp aas popa cld fnstsw xchg mov push hlt movb push lea loope jno insb xchg pushf jle sub mov or lea xchg sub mov outsl mov mov int3 icebp or mov pop ret cli (bad) aas pop mov cmp push je mov cmp je insl push je cmp je or push lret add insl pop push inc jbe xchg mov and adc mov sarl sbb adc mov inc add xor push xor and hlt jecxz (bad) int3 and mov clc or test notb pushf mov insb jb add jnp mov jl jb xchg pusha cmp jne dec imull xor jne imul ljmp cmp dec adc or hlt mov jo hlt sbb sti stc and or js jle das shrb add push dec sar fidivl rclb add push or cmp mov nop rcrl mov dec (bad) loopne jg sub outsl jo cmp lds push pop hlt push sub mov sbb inc xor jnp sbb cmpsl and push dec pop push push sub push xor jle and addr16 ret leave jne cmp sbb adc and and movsl dec dec dec enter add xor mov loopne sbb shrb mov push nop popa insl sub adc inc jmp hlt mov or add adc add idiv insl xor lds add cmp out mov jne mov lods jl cmp add popf lcall push cmpsb out sbb (bad) rcrl jle stos mov dec add jo mov xor mov and rep or or sbb sbb add shr mov adc and adcb insb push cmpsl and push and mov push pop jmp adc pop push push jo mov jl outsb (bad) jae adc inc and pop mov lcall or pop push ss (bad) adc jbe pop push sti lret pop mov lret mov jno orb movsl cmp loope rep sbb fstpt mov jno add mov mov js in divb sub sub sbb pop cmp loope sbb clc xor inc pop jg xchg add aaa pushf jnp adc sub jno lcall sub mov jecxz,pt fisttpl push dec sub push inc cmp outsb dec loopne jl push sub cmp ret out mov addr16 mov jge push lods fidivrl xchg sbb mov pop ret pop push into sbb (bad) neg push adc loopne inc xor cmp mov push mov push or ds imul ret (bad) mov (bad) jp dec js push call outsl movsb sbb push push push insb jns pusha add insb insl inc inc js je jo pop pop pop add mov and mov psrad pop push inc insb sbb xchg imul adc xchg jns sub push push sbb inc fs std das js je cmp jb sub mov leave mov jl or jbe add inc sub push (bad) das add out push enter ficoml push test (bad) aaa mov mov sub sub push je jb inc dec mov add push push mov or adc push mov lock mov ret rclb or and loop (bad) xchg mov xor lds call pop adc pop and jp ret lcall imul rorb or aam adc add mov inc aad leave addb outsl jnp jmp inc and mov cli sbb (bad) jb mov mov mov fwait sbb das mov jae dec mov idiv sub sub mov jae mov dec cmp lds sbbl stos and add lds es lods add cmp gs add sub add pcmpgtb lods lcall into add fcoml sub sti xor adc add ds add push lea mov incb loopne out testb dec add shrl and and push jo or out (bad) mov mov addb es sub fdivrs fld (bad) add lods sub mov inc inc sbb faddl mov rclb mov cmp lret xchg lock jecxz or pop inc or lods lret mov pop mov std mov nop push pop mov inc packuswb jmp les inc xrelease jle push inc dec inc (bad) sub popa mov or jle orl aas adc and stos ds xor pop cmp sub cmp ret push fs cmp test sub or pusha push je push daa loope ja mov add push adc pop inc pop inc cld add dec (bad) mov cld dec sti mov inc sub sub mov scas inc push inc nop dec add fisttpll inc mov xor pusha xor test cmp mov jae out std (bad) ds mov lock inc into jmp and call cld cmp mov xchg or ds bound js sbb insb sub orl or test jb dec mov icebp test inc cs (bad) cwtl push js jb shl jl rorl xchg nop xchg rorl dec shl dec inc sbb xchg mov fwait jne mov jmp rorb sarl sbb ss mov xchg dec dec jo cmpsb xor dec and outsb or insl mov push js popa pop out data16 mov nop ds and stos and ja or cli mov xor repnz inc dec cmp rcrl loop mov idiv jo sbb lcall xor ret add push push mov test cmp je int3 lret mov add mov ss sar pop ret sub pop ret sub pop (bad) pop pop sub (bad) lods cmp lahf adc jp popf test je push sub dec test cmp popa sahf xchg sub cmp mov add fstp sbb or decl cltd add mov adc or xchg pop and pop sarb ljmp insb push outsl add outsb jbe or dec inc jnp and sub (bad) cmp ficompl in stos movsl xchg stos cmp sbb leave in lea inc add inc sbb fidivrl adc roll mov inc and jne fs inc xchg cmp sub push or add lret jb mov lea mov call aad sbb mov in ljmp sub ljmp push dec dec mov jb js mov mov cmp jbe lcall arpl lock jbe call or sub xchg shlb mov sub push sub loope or int and dec add add cmp xor mov leave ret dec pop (bad) ss sbb test into inc pop mov push subb je js (bad) enter pop or lock ljmp je sub fisttpll add push push add add push jo test push (bad) insb mov mov cmp dec in cmp pop das lock repnz mov icebp sahf sbb nop inc sbb rclb (bad) mov mov ret lock inc loop (bad) and jo xor or mov push xor aas out jnp dec mov inc pop ja test fistl adc push push rol xchg push aaa push sub push mov xor push inc xlat inc andb imul call add push and addb add push adc and mov lock xchg jne daa testl dec insb inc dec mov (bad) jae adcb xchg out jns mov adc jo dec xor fs lods je sahf movsb sub push dec movsb or sbb add adc or inc and test dec popf enter sbb sti xchg or add lds cmp and push pop ret loopne sub push push js jecxz add xchg inc (bad) or adc jne dec lods xchg fisubrl sub (bad) xor cmpsb cmpl mov orl xor push movsb cmp sbb (bad) (bad) mov xor out and mov imul xor pop add adc inc push outsl stos add data16 mov imul jne sarl pop sub push push and rclb fisttpl repnz push push sub pusha and push push adc add cmp mov addr16 inc xchg popf inc (bad) or cmp out mov inc rolb movsl xlat dec cmp jo pop rclb inc imul dec or fisttpll arpl push jl add out cmp inc jae sub dec jmp sub add mov lret xor jno test add jne stos add adc pop sbb sti add pop jns mov lock sbb dec (bad) mov shl add mov mov inc bound movl add inc and enter loope iret fldt add cmp (bad) push cmc in add add int pop shr shr sub jg aam and adcb ss sub mov pop loopne scas cmp add out cs inc cmp push pusha sub sbb push sbb (bad) cmp mov fcomps test fs xchg jmp add pushf leave lods push add cli loopne les mov dec mov jl dec ret jb mov mov negl (bad) lret jne pusha push in out cmp out add cwtl xchg cmp loopne add mov ljmp hlt push jge leave cmp dec sub inc cmp jne xor mov (bad) sub les rorb and leave lock sub dec test in test mov push jno dec dec push xchg test mov inc in mov or push jae out (bad) mov jno out or dec hlt dec lret pop test cmpsb dec jne sbb lock sahf cld sarb (bad) repnz pop jmp sub pop loope and cmp xchg or add lea fmuls (bad) repnz cmp movsl mov mov insl in adc dec cmp inc add push ja fsubs sub popf xchg adc and or js addr16 inc sbb pop push cld push sbb push jae mov mov aas dec cmp pop pop sub dec or inc push rolb and jp pop or mov ljmp dec mov mov and add call push (bad) xor cmp mov add push movl adc or or or or jae test add adc cmpsl aad rol adc dec cmp (bad) jo xchg jge (bad) push int int3 pop scas (bad) sbb adc int loope pusha cmc pop dec or cmp into out mov (bad) rolb mov loopne jb pusha mov adc jae jns (bad) bound lds inc jb sbb fbld inc adc push push movl mov add xor adc cmp xchg ljmp (bad) add mov data16 add push out mov jae call and cmp push sub push mov jnp fcmovb or adc inc insb push jb mov adc adc rorb push roll aam inc cwtl clc cmp cmp push lret jp out std js sbb sub testb jp hlt outsl mov adc dec repnz popf (bad) pop jno mov lret push movsb rorb jmp xchg add adc outsb jl rorl or add ficomp iret add sbb insb and les aas enter lock or cli add mov outsb add xchg add xor pop (bad) push xchg inc ret adc cwtl cmp inc insb cmp inc xchg (bad) cld out pop sub idivl jne xor mov xchg pop lds and fldl sbb inc push push test lea sub mov cmp into sub jo inc push add sub adc inc or int data16 aaa or and adcl sub or test jns sub cmp mov popf inc pop clc jbe lock mov ds fs or iret mov dec push push inc inc push and dec adcb push inc rcll js rol push pop or loope adc dec xor mov inc scas (bad) enter repnz adc inc mov add add add add pop xor mov sub (bad) pusha lret movsb jmp or mov sbb popl ret jge test push mov iret xor in popa mov push ja mov and adc mov sbb in dec popa pop rcrl cmp push sub pop add popf in and xor dec push outsb jb sub inc shrb jnp outsb test sub inc fisubr add fs inc sbb xchg mov jns ret add sbb das les ja (bad) xor adc or sbb iret cs jo inc lea mov dec ja scas xor mov push xor push push push (bad) sbb fildl push xor pop ljmp (bad) add test push or fstl xchg (bad) push addr16 xor pop push popa push cmpsl addl xchg sbb mov mov or adc std push jb and out jmp ror sub mov (bad) inc dec mov arpl mov push (bad) mov int outsl dec movl sbb pop sbb nop (bad) dec and jl sbb fcoms dec mov jge cmp adc dec or mov movsb cmpsl fldenv mov sbb sbb and push mov pop xor push or inc mov ja js push loope les and pop rorl stc or adc je jl in push jo or sub jmp aad outsb or push cli xor push cwtl add js insl cs outsl (bad) mov adc andps rolb push dec cmp sbb push xchg aam mov (bad) jns mov and (bad) in add int fldcw add or jns lock sub push movsl call in mov pop ficoml sbb ja inc sub mov or inc incl std and rcr pushf cwtl sbb mov popf out into nop or dec (bad) mov sub sti mov add add sub faddl aaa call neg adc clc shl add fs pop or repnz adc add repnz and and and cld cmpsb or enter push sbb mov or pop xor and and es jne mov mov jp adc push mul mov ja pop (bad) inc pop sub pop or pop adc mov in xchg cmp and inc loope mov movsl das or mov lahf lret adc push mov xor movl nop sbb push and mov mov xor gs lahf hlt fimull sub or inc jecxz fild ret aas sahf push xor or mov add adc add jne sbb ss cmp mov movsb jmp in out mov sahf or pop or add pushl cmp pop or mov repnz ja or or mov push xlat negb mov dec mov inc mov or mov sub mov cmp into pop shr mov pop cmp sub ret shl mov add aaa sub dec dec in sub push inc mov adc sub add (bad) push adc or pop mov add or xchg andl or dec mov (bad) xor push das add mov mov into dec shlb xchg inc adc sarl fist adc scas sub cmp rcrl fbld push mov shl and dec repz addr16 cmp mov sbbl push (bad) aas cltd mov lea and push sbb dec lock sbb in jno xchg test ret cli pusha js clc or lea add push jo xor movl daa jbe mov xor push aam jg mov cmpb jne jns cmc fidiv jnp cld lea fsts or int3 push mov shr or push or ljmp sub lret bound clc test dec add cli ja cmp je leave push push jmp fs jmp idiv pop sbb inc add mov shl repnz adc mov mov xchg xchg adc (bad) ret test lret js and repz clc testb sbb and cmp cmp push add add mov cld shl je add or push xor mov test sahf pop sbb sahf inc inc (bad) ret push sahf cmpsl mov leave cmpsl adc fcoms and cmovno lock mov lock rolb je push sbb jecxz add loop test mov mov rclb rcrb xchg lret sbb cmp loop mov cmp js add adc inc shrb or call ds pop and xor jp out mov sbb aas xor test push adc push movw mov sarl (bad) dec mov cmp add or xchg mov icebp pop rcrb arpl add or loopne out add mov cmpsl rorb outsl mov mov jno cli mov sar cmp jl push out add or jmp dec and mov mov add mov test arpl (bad) adcl jo mov and subl sar cwtl dec mov mov mov loopne mov lods sub scas add aaa js dec xor adc mov orl jmp sti pusha xchg dec mov jne rorb test inc lock scas add lahf add sbb dec daa inc fdivl sub popf roll jge ret or ret jb sbb ret jo xchg add icebp sbb push sub dec (bad) fdivrl mov pop add mov sbb mov lea jp adc mov popf ja jge mov jg mov adc (bad) jb jne mov mov inc sub scas mov jne sub sbb sbb push push (bad) push shl mov xchg push les mov ror (bad) xor mov cmpsl dec and cmpsl daa andl mov adc inc mov push sub mov mov cmpsb int3 mov add mov mov popf mov fstl cmp xchg imul mov xchg mov sub movb pusha fcoml invd mov xor adc jl movl lds fwait lds or cs ds jg and inc jmp (bad) xor push sub clc push popa pop inc cmp adc adcl xor insl and test (bad) (bad) mov iret add sub and (bad) pop lret or ljmp inc rcl (bad) cmp push lcall les fs push insl mov lcallw add ss add push xchg clc in sub test test mov jno mov cmp inc loopne jle dec xor insl cmp cld dec sub popa add push ja out jg (bad) fisub cmp sub mov call mov push pop out add mov pop and dec mov test mul dec scas and jne sbb dec test and add jo sub push mov dec xor adc add shl push sub dec movb jmp ret jl sub jp xor dec (bad) leave je push push dec or mov mov pop sbb and add mov rcrl sbb out lock cld inc lea xchg push dec and pop aaa sub cmp inc sub and inc ret daa nop in adc sarl xchg jbe jne dec rorb mov jge ljmp outsb or mov adc push enter mov dec (bad) sbb xchg mov mov sbb jg sbb (bad) cwtl push aam sbb push clc jbe pop push lea clc xchg dec add cli mov (bad) je cmp jge add lock cmp cmp je out ja adc xor jg sbb pop adc out leave jne add push add or xchg add sbb mov or mov jno decl jle adc loopne add bound jle psllw adc sbb mov inc sbb js and pop mov xor mov sbb push mov js rorb jle add inc mov inc enter sti add jle inc push sbb rorb and add mov rolb dec push push mov add sbb aad cmp dec and pushf fcomps dec pop and pop mov pop aas loope xchg push xchg imul xchg rol mov xchg mov cmp loopne add jns push fstp outsl or jmp inc xchg pop cmp xor and out push je and ret jge xor dec mov mov outsl rorb jl cmp jle sete pmullw outsb dec push mov sub sub dec aaa inc add mov sub iret loop lea xor mov ds roll aaa dec push stos or cmp or add idivl inc rclb adc data16 inc adc push cli inc or jle inc test sub std out in imul pusha sbb inc icebp out cmpsb jmp daa mov cli or (bad) push add nop stos loope mov and or repz stos inc scas in mov mov ret subb (bad) jbe cmpsb mov pop stos and push fcmovnbe jne mov (bad) jmp movl add into dec outsb and pushf dec add ret xlat ret sub nop scas out test cmp push test (bad) ss cmp sub pop and mov inc test cmp decl (bad) mov push push xchg add imul (bad) je test shl insb sbb stc pop nop push adc pop inc nop loope or nop lret dec cmp loope mov sti xchg (bad) xchg add or gs sub fisttpl mov out xor add popf push cld inc nopl mov int jno fadds sub push int inc lret cmp int cmpsb mov or test and outsb push sub mov lock out adc pop xchg jmp loope lods jo add push in loopne xlat dec shrl xor lods sub xchg or shll fidivr lret adc cmpsb inc add (bad) xor cltd xor adc cli dec cmp lahf adc mov mov shr sbb push push jns push jecxz mov pop lock add sub ds (bad) cvtdq2ps popf (bad) sbb roll rcll mov jne iret inc mov adc and mov test adc mov outsb nop subl inc inc add (bad) add pop out sub jo or lret nop xor nop sbb sbb mov mov ret ret inc push cltd xchg les jmp xchg sbb xlat imul pop pop and pop pusha add sbb std inc shl cmpl repz (bad) xor jns cmpb cmc push lahf dec sub cmp mov inc mov xor mov inc shr cmp pop setbe mov popf js mov mov scas clc mov out or shr shl dec lret shr mov mov inc add add sbb xor test movsl mov adc mov push inc jnp arpl sar or or push sti cmp jle xchg pop inc add or jle (bad) mov inc dec xor add (bad) sbb sbb (bad) pop rorb push adc and mov aam adc mov inc not lret xchg and jbe not cmp mov bound loopne xchg dec aad dec into lods icebp inc cwtl pop lea leave popf mov add add inc cmp inc dec mov out push aas and xchg (bad) adc push shll adc xor stos mov js pavgb dec adc mov jecxz addl xlat and mov das mov adc dec and mov inc bound add int3 dec mov dec cld cli push pop jo xor adc movsb testb inc pushf add or lcall mov mov fwait aam mov dec or or sub jbe sbb sub invd inc rorl cmovbe push and inc cmp add je jle inc and aas cmp adc sbb dec pop add pop scas sar sub in dec adc sub outsb push inc or fadds fldt rolb clc ljmp xchg jne cwtl test inc ret loopne push push les jp aad sbb in fstpl inc outsb sub or sti outsb sbb push lea xor lods and lock inc mov shrl jge outsl adc xchg sbb adc pop test (bad) rol je mov movsl push call sub cmpsb dec inc inc jne jne adc inc lea xchg out and andl ds mov dec add addl xchg add sbb add fldcw and mov loopne in add ret ret nop aas mov test mov add mov add jnp sub sub dec jae adc lock mov hlt lahf sbb dec ds jb adc (bad) xor mov add aaa mov mov inc sub mov nop clc fs addr16 mov es dec ljmp fisub mov push or out xlat pop clc adc jo jb jbe fs and in pop fsts adc mov add jae cmpsb ret jo mov mov inc push mov mov and ja mov lock jnp cmp cs pusha mov jo add adc cltd fnstcw inc mov aad or mov aas pop inc sbb dec jmp sub pusha addb je inc ret mov lret ss mov or inc or je cmp adc test sub dec bswap jle mov fidivl movsb push lcall xor adc push pusha jg cmpxchg into push push jne sti pop inc cmp jbe ja jmp inc dec mov cld xchg lret mov lock in int3 gs int xchg pop or fstps push ds adc xchg sub imul fist dec cmpsb (bad) incl inc mov imul adc add push push (bad) loope pop xchg pop or mov add add lods mov adc outsl loopne imul dec out fdivrs (bad) test scas lea and xor lods and sbb push lahf adc sub (bad) outsl sub insb fs std orb push push mov lods arpl nop pop pop jns cli jbe cmp je cmpl or pop cmc mov push cmp inc or sub enter lods and out push cmp (bad) adc pop sahf out sahf pusha fs add jns jl mov mov add mov test jne push out dec add jne cli sub add mov mov call add jmp mov jmp sbb cmp xchg ret movb jbe dec jmp (bad) jae mov insl loop jg cmp jne dec sub cmp jne cmp mov jbe or mov mov adc xor cmpsb ret add and clc jb lea or mov push sub lret push pop adc inc add (bad) cwtl fdivrl in je xor add xchg dec pxor lret das jne mov fidivr mov mov (bad) jns sbb inc mov inc mov clc sahf adc inc cmp jb cmp repnz xchg outsl add cli mov in and loopne (bad) lea sbb add inc push cmp (bad) cltd add shrl lea mov (bad) mov mov fsts mov dec test mov data16 push insb push push sub mov mov adc inc ss les sub fisub test fldl int ret jle cmpsb xchg dec cmp test adc js push push and sub imul les (bad) cld sbb or mov jge (bad) pop sub sub in mov popf (bad) dec mov (bad) add jae mov add loope (bad) push jno add mov mov lea pop je xor test sarl mov inc imul sub xchg push inc mov xor mov shr mov xor icebp sarl push sub mov je jmp dec ret xchg push xchg pop pushf ret cmc or sub sbb xor cmp adc pop sbb shr jle roll jae mov incl loop add push inc add neg and shl mov sbb cmp xor inc inc mov unpckhps movsb daa sub cs push scas push add or jae cs cli dec push mov aad fsubrs xchg cmp out in std scas adc xor shr push jne jne movsl sub lods and mov pop jo (bad) lea mov add sub push clc push or jne sti (bad) sub rorb adc test mov sar aad inc cmp jne xchg xor mov dec lock or add sbb (bad) dec mov cmp js sub inc sub push lods out mov pop test in jge jo xor sbb push xor add sbb push push push (bad) or add subl (bad) rorl ljmp jecxz sub mov nop cwtl jl mov push es push test ja xchg jne dec bound sbb cmp xchg pusha orl stos fild outsl das call inc sbb call jns (bad) sti jne mov insl inc cld je cmp and pop inc int cs push aaa fs je test dec and inc pop or cmp xor mov mov add (bad) adc scas movl adc adc ret jg popa inc cli add imul inc or std fdivs sbb sub sub mov lcall and andb push adc sub dec test aad dec out inc mov push push enter movsl jo mov out int imull je dec nop mov lret adc sub std sbb add adc rclb jo mov add inc sub xchg sub xchg inc lcall loopne add pop mov faddl lret outsb jo gs and mov xor jbe cmp xchg push (bad) adc imul xchg push and xor (bad) (bad) push clc inc sbb incb sub dec inc push jecxz cmpsb jmp mov sub lahf sub insl pop xor mov mov add test data16 cmp (bad) mov add or inc cmp loope insb push jge mov cmp lret into lea mov mov dec add ljmp fcomip ret adc or (bad) or std pop add add jno call and sub imul add pop out ljmp dec mov (bad) adc loopne cmp push adc sub sub imul ja stos cmp aad inc cmp pushl mov xor sub adc and add push or jg mov icebp xor inc sub cmp pop mov mov sub add sbb cli mov out cmp jbe sub (bad) int push mov inc inc dec jne xchg pop jbe pop dec push pushf fnstsw jmp sbb sub cmp outsb and or mov cmp lahf add push mov cmp fisttpl ds sbb mov inc rorl add cmp sub cmp add (bad) fsubrl mov mov je mov fadd mov push pushf aam fchs (bad) cmp push and mov lods outsb inc sbb push ss or and dec or cs mov jnp adc sub and push and je scas add mov in cs mov sub out cmc mov imul mov mov daa ret push sub inc int add xchg lods add xchg mov xchg push push mov stos pop pop add rorl jle dec test mov push sarb cli jb cmpl adcl pop and out dec pop pop push push popf mov or fbstp bound scas adc mov sar and push jne test cmp add or loopne enter and test push pop in or and mov mov mov pop sti inc add scas adc cmp push dec add sub add xor xor cmp mov jnp pop push push dec inc cmp insb cmp xor mov in sahf out fimul in in lock out lock hlt clc clc or out cld lea es clc (bad) cwtl lods int3 inc icebp shlb inc mov sub popa mov or and ret push andl push lea jl adc or clc mov out adc neg rol and mov and pop nop and dec push jo add inc xor mov mov push xor lea push out push lds push nop dec dec addr16 mov gs mov push int3 push aam mov repz in hlt pop es out faddp sbb sbb sbb adc out sahf adc adc or out or aaa mov jnp inc and sub cmp pop lds outsb push inc add fmuls mov sub insl sub add or push in imul hlt sbb test push bound push dec inc sub xor je sub mov lock add mov mov cmpsl adc ficom mov cmp ljmp sub test jo mov cs je icebp pop loopne push fistp sub (bad) (bad) sti fildll fimul test pusha inc jne test xchg scas cmc pop jae mov jecxz pop rol push (bad) jb push xchg dec testl or inc je sar out push dec xchg cmp rcll mov pop outsl out push mov push xor test jno sahf pop jmp daa push xchg pop rcll cmp loop push dec add fbstp add ret andl or or mov or and incb inc push or add out or in outsb push popa sbb jns push add ret in add into adc push pop dec je jbe xor mov ljmp fmull pop pop push add es push aas fstp rol dec out inc add adc xor dec mov adc addr16 movl xchg sbb sbb sbb movl mov inc push cmpsb int fisttp cmp clc inc push inc sbb mov or push (bad) lret add adc iret inc ret add jle add mov sbb add sbb out or push inc movb add sbb dec insb mov and aam xchg cmp xchg adc mov sbb jo pop dec push std std and cmp mov aas add or xchg neg imull jne subl les jmp mov mov add mov sub push xchg decl test add add fidiv xor and push add jle fild pop mov adcl mov and inc lock and mov lcall push xor lock std mov daa cmpsl mov mov (bad) sarl repz pop sbb fstpl fwait sbb es mov je outsl adc pop adc insb jne sub push and cmpsb bound xor sarb add ja xchg mov pop mov icebp add pop orb pop cld imul dec stc xor clc or dec dec imul popa mov test scas inc lea addl ja add ret pop shrl dec mov xchg inc loope cmp push push xchg fs push call push inc test push enter insl test iret repz cmp xor and add mov (bad) js nop push inc test lock mov pop push test ficom push mov lock ja mov or push mov push clc cmp (bad) int3 aam sub add fiadd add sbb loopne fdivs push loopne add pop jae aad nop xor or enter or in enter cli out add in mov and mov xlat (bad) pop inc cmp ret mov mov xlat jne out add push imul push lea sbb pop popf out (bad) and xor repz and fwait adcl lahf inc rol ljmp jmp and xchg lcall inc fbstp cmc sbb aaa adc stos mov adc push cmp jl decl js mov mov jmp mov int sahf lret (bad) in aam scas outsb and pop cmp jg mov js in mov setge dec dec les or das outsl cmp adc push nop add dec push fucomip call pop in dec sbb cltd or or add dec or mov pop cli and mov cmp je movzbl add sub ja stos add pop sbb fisttpl mov imul add sbb pusha inc dec add jns xchg add add adc scas adc loopne dec pusha iret sti jg mov cmp je pop add fwait pop enter add cmpb push xchg in (bad) xor pop pop jb add cs or or fwait jb mov or and enter pop or cmp pop loop or pusha out rorb pop or mov mov push xor cmp ja lcall adc xchg add push pop adc fwait sub cmpb adc seto out adc (bad) lahf cmp pop ret adc jb fiadd adc cltd inc push nop aaa adc addr16 jns push pop xor and sbb fdivrs or iret in repnz sbb add sbb mov (bad) sbb ja jns pop mov jb dec rorb sbb jge add jns sbb add inc pop pop fs das or jne add add sub inc xchg or addl add cmp xchg sarl and push in push in jno repnz mov adc in xlat repnz aad in in add mov ret dec sahf out push enter mov je dec mov fsubrp push adc fidivr bound xchg add sbb ljmp jmp out in jns push imul inc push nop ja inc in sahf out addr16 jns jge xor and lock pusha xor xor inc jmp pop enter repnz add in out std repz leave std hlt hlt (bad) aaa jb sahf or fwait mov sbb cmc inc jg testb add negl popa push clc cmp clc cltd adc inc stc inc sahf lret add cld cli cli mov sbb iret sti sti sbb stos cld cld cld je cld push divps mov repz repnz sbb incb je mov jmp inc or sub ljmp roll scas lahf (bad) jb pusha inc shl repz dec in or xor or mov stos cs inc fsubl push or inc mov stc daa xchg sti add dec inc out out cltd leave and dec sti inc xor insb nop out pop jmp jmp inc pop xchg pop (bad) in add cli popf cli nop cmpsb jb sbb pop and insb out cltd push lock das xchg inc das cli push cli cmpsb jb pusha sbb pop insb nop repz sar mov stc dec adc stc sbb mov jo xor clc add repnz stc out clc push lret sti lea popa cmp scas enter inc orl mov dec dec push inc ret std and test cld sub mov fstpl jno push icebp mul pop (bad) testl mov out xlat enter cltd (bad) out enter inc mull imull sti imul (bad) adc dec sub sbbl insb out out add inc notb xchg test cmp nop negb dec push repnz pop inc push mov inc xchg add lds adc pop clc cli pop jo jno sub add mov jo hlt inc pop jo pushf and mov test push or xchg hlt inc jne and (bad) add dec pushw (bad) data16 hlt std adc inc push (bad) ljmp adc sub push loope loope loope loope push jno cwtl repz loop scas repz cmpl dec push in enter test jmp or repz push repnz sbb imul call cmc xchg repnz xorl inc lcall icebp orb and cmc nop pop pop daa add and push cmp sbb ret icebp jns jo xlat mov xchg icebp divl test or inc push icebp pop test cmc cmp cmc add cmc xor inc ret jbe fstpl imul call cmc push lock xorl sbb push lock test ss add imul negb push sub out movsl ret inc cmp ds add in cmp add and add jp xchg xchg rcrb inc lock jne dec jo adc dec add ljmp dec add pop faddp pop dec rcrl or mov mov cmp pop cmp push or inc cmpsb inc push out aaa into pushf adc fwait cmp aas sti inc insb fidivrl iret repz ds insb iret ss scas cmp ds inc jge out out and push popf cmp scas jge out add das lahf xor jae jg or cmp adc xchg rolb es push shrb inc bound data16 lcall jne mov mov push inc scas and mov fwait clc mov je push jbe cmp cld adc xchg shr rol push push inc mov add mov or pushf mov fs mov sub mov hlt lods sub dec pop mov cmp sahf push insb add ja hlt push push cmp inc sbb push inc add fdivrl sub and (bad) fadds add (bad) mov lock or rcr pop sub mov ljmp sbb push or nop push orl push inc cld (bad) hlt pop add jae loopne sbb in adc or and jb mov cmpsb add fdivl sbb sbb mov movsl das repnz std outsl inc mov dec or insb sti flds sbb or inc xor pop push inc pop and pop imul xchg xor add pop push push add cmp ja (bad) movsb (bad) jne popa inc test lret add dec mov mov imul lahf ss call push je mov xor adc int inc sbb mov popa adc add lods enter nop call jg (bad) cmp jbe push pop mov jae fisttpl (bad) jne in or xchg or scas imul icebp mov push out rorl push nop cmpsb cs loopne imul fwait scas or test lock push cmp cli sub push jne xchg inc jle jno push cmp xchg and dec loope push push and lcall es sub pop daa popl les ret push out stos adc add call pushf inc (bad) aaa or rcll (bad) or or add jl dec lods or mov inc mov dec inc rclb scas xor loope push cmp sub cli cld lock cld pop cmp aad mov pop xchg cmpsl (bad) (bad) leave dec or mov popa js jne inc std mov gs test push pushf xchg pop adc inc lock (bad) jmp insl inc sbb sub nop push outsl dec mov scas test (bad) cli mov pop cltd lea and pop sbb nop push push dec sub stc mov add outsl push push dec adc push and jl repz xor push dec and push jg mov inc or jbe jle xor clc out es jg jg jo mov jl pop fnstsw mov jge (bad) sbb and or dec or adc cltd add xor lret bswap and clc xor sub dec or mov or jne cli into jg,pt test and add sub push pusha inc pusha adcl (bad) out sbb pop pop call xor add dec add sub pop imul jb clc lock rep sub push jge jmp (bad) jne faddp rol xor (bad) dec in in push jnp cwtl or and or mov or pop mov and xor mov pop cld (bad) jp inc mov mov andl xor in int3 jge adc out dec out or lea fildl nop aad inc push cmp sti inc lods inc inc (bad) jo test sub or adc clc loopne cmp and push hlt or sbb add sub add gs das push sub fiaddl aam mov shlb hlt rep xlat cs adc pop scas lock push ret push call add sub push push aaa cmp sti dec invd (bad) sbb leave add mov loop inc fwait bound pop jle jmp jg jo (bad) enter add xchg cli aaa loopne cmp inc adc jl sbb pop cwtl dec adc leave in inc jl xlat or xor inc adc cmp jb dec push and lods mov hlt or clc je dec xor pop jnp ljmp pop push cmp (bad) xor sbb cmp mov in mov test inc stos out and loopne sub push mov inc cpuid (bad) js or add and inc dec or xchg pushf push jb adc and pusha jge xor cmp mov inc mov in cmp cmp mov mov je push rcrb or je or (bad) and push nop clc add sbb call sbb add das popf js test mov jne sbb xchg mov sub and jo xchg or add jle mov mov mov fist cmp imul mov pushl cmp xor cmp and jno push outsl add add sub fadd jb push out add test int3 cmp mov xchg push or push movsb pushl cmc sub push pop cli daa mov dec add jmp jge adc sub rcl aam cmp mov outsb cmp ljmp shrb iret outsb call cmp in sbb icebp inc push in dec pop cmp cmp push cltd jle or dec jae adc cmc pop push pushf xchg movsl inc or fstp mov jbe push push mov pop cmp sbb or jmp dec sub push mov dec cmp xchg outsb lds inc pop or inc or mov jb rclb outsb sbb push jb mov dec sbb popf push out in cmpl rorb or xor mov adc mov int3 inc xor cmp stos divl (bad) pop ja push jmp inc pop and xchg (bad) mov inc call inc mov fistp shl mov stos mov xchg call add addl dec mov orl jbe jmp iret pop rorb jnp negl or pop jne cmp push push sub dec pop xchg cmp push push clc jne test add mov dec (bad) jb sbb jnp (bad) sbbl sub xchg je mov pusha jo xchg andl (bad) es and loop rolb push and cmp dec push or xchg test aas lcall ret jne and (bad) jge jne push push xor sub lock push sub pop sub insl push mov loop test push xor and pushf rol mov int rcr push push jg adc and xorb jp jo mov jb or inc imul mov div enter adc rorl jmp sub into jne sub ja add push pop fs and in and sti pusha pop fimull insl movb inc cmp mov (bad) (bad) mov sbb mov pop test and or bt in inc push inc insb jmp (bad) push (bad) or mov and fiaddl rorl (bad) divl (bad) mov fnsetpm(287 push bound aad xor add jmp sub mov add pop out or sbb sbb adc mov in adc movsb sbb loop sub add push push cwtl je pushf sbb fdiv adc ss jl push xchg jmp ds into in lock addb fcmove xchg pop xlat mov pop pop pop adc mov addl mov inc pop sub test daa dec inc enter mov add or imul fisubl add leave cmp or sub mov xchg or addr16 sub push pop imull push inc cmpxchg xchg shll or push mov and mov push sub loop fcmovbe add fidivl lds rolb (bad) clc mov stc xchg aam push sti lock (bad) jecxz pop pop ja ret int3 or mov fidiv inc das shlb xor mov lret xchg hlt nop sub fimull fildl add xor pop add push mov or aad int3 shlb data16 dec test push imul (bad) lock push aam testl cld je lea xor pushf lea mov xor out jo fisttpll inc adc pop mov or call sub or shlb jmp je add sub cmp insl cmp fidivr xchg sti mov push adc test adc xor hlt adc xchg and push ljmp mov jo cmpsb push adc aaa xchg sub or scas hlt outsl xlat jmp or das mov mov inc dec inc loope or dec movsl or jmp adc sti ja xchg jne pop out mov push add loop fiaddl add sbb (bad) push add cmp je dec jne mov cltd push mov sub and cmp mov popf into icebp xor stos mov add cmp mov fstpl add add loopne xchg adc mov cmp mov push imul inc push cmp or and lds sbb dec test push fist fnstenv cmp (bad) jae aam xor int jmp dec push jo test or jbe (bad) mov jmp cmp sbbl pushf or add repz jge mov push addr16 and lcall jge add mov mov add xor xor adc testb outsl clc xorl in dec mov lods test pop add nop inc ficompl ret adc std cli inc call je jge mov es or cs mov add adc jmp mov add cmpsl outsb dec lea jno dec add add lea stos add pop rcrb pop sub mov mov inc xor mov sti mov adc xor fist push push lea xor inc clc out mov mov test sbb jbe mov mov xchg lods out cltd mov (bad) neg insl clc jb mov push movb pop mov mov add pop and add enter into lea push add (bad) inc mov inc insb fsubrs pop mov cwtl enter mov mov aam mov sub lea int3 mov push bound dec sub mov inc add es outsl dec fimull mov mov pop rol not je orb mov and dec in je and mov dec jmp movb xchg cmp lahf jo sub cmp outsl adc push sub lea cmp ja xchg push hlt scas xchg push mov jmp cli and and sbb adc lods out push insl loopne cmp mov mov stos mov pop imul insl jl test clc mov icebp inc jo sbb mov shrb inc push sub or inc stos aam jnp sbb push fldl cmpsb and jno dec mov jp inc push inc or dec loopne mov add dec pop test xorl sbb movl cmp je rcr orl pop dec bound inc mov jmp push out mov xor inc add jmp ja or mov cmpsb leave and mov xor mov test jmp js push mov fadds jg sub shlb mov (bad) push lock lods (bad) xor add push jmp and mov jbe mov and lock test push mov sbb xor inc inc aad add sbb imul (bad) clc xchg out movsb inc jnp xlat iret fwait mov sbb jp pop leave inc dec loop cmpsl (bad) bound xor clc adc pop lea mov pop mov ds jmp loopne lods ja fild cmp jbe gs pop xchg inc inc cmpb shll xlat add jle (bad) or das lock movl push pop add add mov andl loopne btcl inc dec jne mov inc mov add rcrl divb xor rorl inc or inc dec jne fs jo mov test add jnp or scas jmp cmp or test mov sub lock and push mov (bad) add add jmp sbbl add pop js outsl push mov add rep andl push sbb dec arpl cbtw mov fdivrl push ret cmp fcoml (bad) inc adc sbb aad add subl (bad) jbe sbbl mov jne xchg clc add dec add int3 mov jle fiaddl sub jmp xor inc sbb dec sbb mov add sbb incl inc jo insl adc cmpsl dec rcrb daa push push push popf (bad) xchg push aad xor and test cmp daa mov pusha add xchg scas lods sbb pop cmc jo push and pop inc lods pushf mov mov dec maskmovq add mov push je cmp dec or je cmp daa js fidivl sbb mov jbe jae adc (bad) xchg mov mov das jnp fisub jo inc inc sbb mov roll fcomps rclb sub and rcrb cwtl ror jecxz ret cmp rol push test jne push mov aam imul clc test loopne pushf xlat jp cld or cmp mov add pushf nop add dec jne out icebp fs sbb aad call imul scas sub push sbb mov sbb pop inc sti (bad) enter mov das cmpl or pop ret adc fdivs (bad) mov or mov adc nop add dec les xor popa movsl mov push xor je jae mov je mov push and push gs jge test pushf xor sbb jo xchg push add sub (bad) and mov xor sbb das push out jmp mov pop xor add sub cmpl dec repnz cmp jbe int3 push mov cmp pop rclb jle and inc (bad) add push pop shr mov push adc or jg adc mov sbb cmp jne or and adc cmp (bad) imul jge inc mov fimull add push mov mov fnsave loopne mov test and aas mov clc or lds dec xor (bad) mov scas cmp jle push cwtl (bad) mov mov hlt roll test repnz int3 mov ret ljmp out push out loop and sbb (bad) inc pop lret pop mov mov or inc cmp xlat shlb daa add cltd and push push adc insl sti daa (bad) inc or je xchg sbb or psubq dec adc dec test add cmp lcall (bad) ror cli push push jnp or insb jle sbb adc push inc add sbb push pop dec imul push xchg push out mov mov inc adc movsb push test fwait cli fs adc rolb movsl cwtl loop xchg sub ljmp test mov shrb xchg lea inc fcmovnu cmp add icebp arpl jo pusha nop adc ret call push sub xor jle mov ja add adc ffree pop fidiv test clc call ficomp sbb bound mov and sbb sbb mov (bad) loopne pop popa outsb lock xor inc pop and push push ljmp adc add or roll push or inc sbb lea loopne dec cld xor cmc xor mov cmp dec loopne ds adc lcall lcall aaa add int xchg inc orl (bad) stc sub in push adc push pop inc xor ret inc std mov add cmp ret mov aas outsb inc es xchg push mov add or dec in (bad) or lods adc mov pop push mov adc sub adc push or add imul imul jns dec sbb xorb mov inc adc dec cli mulb jmp movsb out subb inc cli or xchg aam cwtl clc push stc cltd mov xchg popa mov sbb loope dec push lds mov cmp scas pop add bound mov and inc and or or (bad) push mov das loope insb shlb mov jl notl cmp jne decb mov pushl cmp fistpll adc pop fisubl mov or movsb jmp in mov test cmp mov orl and mov jge or inc add sub add rcll adc rorb shl mov pop pusha xchg add sbb fsubrl add lock into sub mov or fsubr mov push fildll add inc js pop xor pop aas rolb aas pop jl out aad dec call adc and pushl or imul fdivl enter pop push inc or (bad) scas jmp xchg and incb pop pop gs je xor shlb push test sub insl cltd cmp out sub decb adc jbe test ret add inc (bad) cmpsb add pushf daa test pop inc jne imul dec pop fwait test imull add sub je,pt pop lods outsl jo sbb clc dec cwtl je mov idivb push push jae test adc subl mov cwtl je or sbb loopne pop cli add inc add sub push sbb outsb push and push xchg xchg outsb and adc and ljmp push add or add add xchg pop psrlq dec jmp leave pop pop pop fstpt loope (bad) insb pop std sub pusha dec sbb call test xchg adc pop leave pop jl jne mov data16 aaa fwait in (bad) mov push inc insb gs xor loope test test add or xchg mov cmp in cld push cs inc andb lcall mov push mov aaa lea shl fdivr adc nop mov fcoms aam ficoml outsb add mov push add mov pop dec aaa mov xor inc dec xchg add loopne ja hlt sbb jb or push cmpl sbb std cmp scas cmp fcomps push inc jmp add mov mov lcall ds cld or jg or pop fldt testb dec mov fcmovu les jg jne inc push jmp dec push mov (bad) sub (bad) outsl inc inc jae adc loopne aas mov adc xor sub fisttp jno cld mov xchg add mov icebp add outsl std test sbb push mov dec pushf aam fcomps lods loop enter imul sub in jo jne sti inc push or cmc sbb pop movsb mov ljmp int3 iret outsl pop jnp mov leave cmp mov add mov push fcoml in jno mov cmp divl mov mov or inc loopne pop shrb int push out scas mov cmp mov push mov clc add or ja bound pop js orl pop cmpsb adc xor jge push sub rcrl xor mov or mov movsb add test jb or jae in add cmpl cmp or push ret cmp mov push outsl js (bad) enter xchg add sbb enter ror push outsl repnz or sub orl xor mov push call outsb outsb mov dec or cmp leave sbb pop test push inc xchg mov sbb daa adc mov mov push loopne out bound dec mov add cmpb dec and xor jg (bad) cmp add push stc pop sahf outsl or add and adc cs push cs sbb push lea (bad) push cmp inc cmp scas rcl dec jns data16 sbb mov insb pop jb je sbb jns test or add mov rol xor sub mov mov sti push jecxz cmp int3 bound xchg mov fidiv wbinvd sub sub mov inc jmp mov push mov mov pop divb addr16 iret xor test mov ret fstpt cmp or mov jle and mov (bad) jecxz xor mov mov add sahf add test jl add movsl test push inc mov test mov or mov stos lahf xchg pushl dec inc nop (bad) call inc cld pushf push pushf push sbb rcll lods imul out lahf icebp adc push aad aam adc cmp xchg out stos mov rcrb jbe stc mov mov jb xor push or sti jl push mov xchg add test jno sbb cmpsb imulb clc imul mov ss add adc jno imul hlt inc mov xor test fadds push test push or adc aaa scas bound in or sub jno xchg je jecxz mov xchg ret shll (bad) addr16 dec aas (bad) cli add jle mov mov jle fiadd push cmp aam mov add mov or pushf pop jnp cmp lock mov inc add sub dec xchg dec ret sbbl (bad) xor or pushf mov and and inc jne jne cmp mov dec ds jge pop enter sbb ds jne arpl mov mov jbe jmp cmp mov mov mov add push add and and enter jnp lods addl rorb popl pop mov imul lahf or (bad) cmp inc jno push add fldl inc or or mulb je push test and mov jg jl jae neg es neg jae nop enter adc cli fistpl push xchg xchg adc pop mov (bad) or jne and (bad) ss mov lods call lds jg xor cltd push adc xor popw add and lea jae movb sub int3 mov into cmpb cmpsb pop std es add inc jmp mov ss inc in jmp dec push or push enter cmp sub (bad) (bad) sar nop jp mov aad dec xor in repnz je push inc xchg popf sub mov test fisttpll adc add enter stos push sub sub pusha or insb inc jnp inc (bad) in aam mov jmp mov xchg mov scas fmull mov push stos adc dec jne lret out dec data16 scas ret mov cmpsb fmull nop push aas sub js jle push inc sarl cli xlat (bad) jne xchg add add pop jg jmp mov imul sub and pop divl mov add inc dec sub repz adc sbb push or dec cwtl loopne mov xor sub fwait lahf fmuls xor leave ret fidiv addr16 cmc inc add jo push xchg int3 add out jns or push or std add add inc push out ss adc and and cmp movb pop je sbb fisubr mov xor cmc inc pop test sbb adc add out mov or xorl jge cmp add adc sub and pop and es dec jbe adc aas or test cmp mov or pop popf js adc mov dec xchg jbe sbb ret push or jl jno jns stc inc (bad) movb jno (bad) insb frstor push mov ficompl dec orl xchg pop jo aaa dec lods inc inc cmp jbe sbb jnp add push mov mov sub insl js fcomps ror jnp inc push loop or incb mov push push mov pushl or rolb adc mov fcmovnbe out mov mov push (bad) add je push xchg and push setl das lea adc or mov mov cmc mov pop mov push push push push adc das xorl insl sbb push pop mov or ljmp fistl mov ret pop ret push jae xor sbbb pop or xor adc cmp jne outsb and add (bad) mov mov (bad) xor mov adc pop push cmp inc or jg mov stc cmp jge imul mov andl sbb mov add and sarl (bad) mov mov cmp or mov push and pop pop cmp test pop orl nop sub cmp lea cmp jmp pop pusha mov jbe mov jmp fnstcw dec clc xor jo or xor leave adc es cmp or (bad) sbb xor (bad) fwait rolb cmp ja stos orb cmp (bad) call jmp pop push or lea rcll scas jne out sub imul mov mov movb xchg test adcl jp roll push add push inc add shlb hlt cmp cmp push jmp dec pop xchg popa push inc orb jp outsb sub pop cmp push pop mov test and dec cmpsl fild loopne mov add cmp jne mov fidivr adc mov int jne pushl and pusha cltd test decl shrb mov mov mov xor subl mov mov cmp adc mov push adc cmpsb cmp pop (bad) pop sub or sbb inc xchg adc xor add or inc pop fildll incl mov je inc (bad) dec xor cmp je or jne adc cld (bad) movb pop in adc insl add adc push sub dec jmp xor mov cld pop cwtl mov cmp inc adc add insl push mov pop je pop es stos fldt pop jne int mov cmpb (bad) lock xor pushf inc cld fbld sbb adc add or mov cld mov cli je or add je cmp mov mov push jbe leave or int3 push pusha jp into inc add xchg fimul dec insl mov sbb and adc mov push dec xor jne add add pop and mov add xor jnp pop cmp sbb sbbb push jge mov mulb push jb scas sub jae lcall inc sub add mov inc mov (bad) je jge (bad) push push sbbl mov dec pusha imul mov push pop cmp inc data16 xor pop jne faddl mov lds andl das mov or nop xor jae (bad) fiadd jo scas je add or jo mov sub push sar inc push inc push lahf sbb pop (bad) je cmp fisubr cmp cmpb push imull loope test push fwait push popf ret hlt push xchg pusha test clc add jmp adc mov and nop adc xchg roll sti or mov xor inc (bad) iret fstpt push push push mov add shlb nop (bad) xor push ja roll xchg cmp jne pop push xor jmp mov or mov xor xor ret fcomps or or lcall push and or adc inc or push pop add into jo iret es (bad) mov data16 mov cmp dec std push sub mov or or insl pop pop sbb push xchg sbb add nop and sub andb and push (bad) add adc (bad) cld rcl sti out dec pop cmp push mov cmpsl add fistpll cmp mov orb add cmpsl mov dec test jne push nop jg sbb sar and rcll add lock or inc add mov roll lahf jns leave loope idiv les hlt inc adcl pop (bad) or xorl sbb or orb jmp (bad) xchg orl push pop or xor push int cmc push fadds sahf je sarb push add loopne aaa xor or call inc pusha dec add adc sub (bad) popf or push add mov sti add mov add inc inc xchg xchg loop repnz push inc ficoml dec push or cmpsl les jmp inc cwtl push xchg adc outsl fmuls adc shl sbb rorl nop lcall pusha mov adc or jb pop sbb fadds add pushf sbb sub stc dec je push jl dec mov fs adc es push dec mov mov xor adc test and sbb test add and or sub mov jno std or ret je not mov mov movsb cmpb jne lea sbb cmpxchg fisttpl mov fs hlt xor and add dec mov or in (bad) loopne or mov rorl mov ss cmc pushf sbb cwtl adc incl pushl add add pop sbbl mov or and loope push xchg cli jecxz mov into adc adc or inc push cmp mov jl push pop mov push mov mov jnp jmp adc lds icebp rclb subb xor les and dec nopl cmp fcompl jmp push cwtl mov movaps push push jg ds sub push or jne push ret imul sbb sub cwtl jmp push shll add mov sub arpl jne orl dec int ss pop pop add (bad) pop daa mov lea add fdivrs repnz cmp mov fdivrl push popf inc xchg inc add sub insl and mov fs mov insb out ljmp or jl aas add loop mov add cmp add sub and jb mov adc ljmp inc scas clc sub mov sub xchg cld shr mov stos js imul push nop cmpsb mov push or cld inc push or adc xchg push fmuls outsl fwait js test pop or je cli add cmp jge mov cmp jne and pop test and sbb sar inc jmp dec add shll pop mov and and jmp lea mov pushf mov pop test push dec pop add and dec hlt mov hlt or mov pop jnp cs jmp clc and out xchg sbb push sbb sub and sti add lock xor dec pop cmp (bad) fstpl clc fimul andb cmp je add xchg inc loopne add and push lret and add fsts dec loopne mov or jno mov xor dec pop add (bad) pop push push sub jp and sar (bad) mov pop mov dec mov or push (bad) loope cmp jne mov mov inc mov push jae cmpb xchg xchg sbb cmpsl push or pop mov inc dec or jmp dec adc (bad) push mov or scas call mov js add pop enter xchg mov adc cld aas mov inc mov dec or jp push call mov gs push or fdivrs andl add hlt (bad) adc cwtl rorb cmp pushl push adc or and adc std leave pusha mov mov adc push lea (bad) inc add fst std int3 sub mov adc out cmp mov or mov stc mov dec or sub jne sti fs or cmp xor nop aad dec sbb jp (bad) loope cmp cmpsb scas mov addr16 pop push test add test jo cmp push pop sbb push sub pushl push push add inc fucomi fwait orl or jbe incl mov aad stos dec movsl test sub mov adc fcmovnb add inc push mov mov imul aaa fdivrs cli inc clc pop mov add rorb jne adc mov shl inc or repnz inc pop or jnp lea popa daa test adc mov or aas lock xor dec clc incl nop cld or adc pop sub push mov inc cld lock jo scas mov iret dec jne or jg aad add inc add negb repz sub sahf adc mov pop mov mov in test push mov jg clc clc jne or shr shlb sub or xchg inc add or lcall sbb sub pop shr sub rolb cld and icebp push jecxz add inc dec adc mov test jno je inc xchg fnstenv (bad) cmp jle sbb dec cmp aad sbb jbe xchg pop push pop cmp or pop inc sub inc push clc or mov jbe pop add pushf nop mov dec or adc enter sub add insb xchg hlt xor sub ljmp add cmp mov cld out (bad) ja aad cwtl hlt lea jbe mov outsb adc or cmp (bad) lcall push (bad) pop adc int incl sbb adc iret jo and and loop js xchg dec jno xchg pop loope imul cld insb xor add shlb add push cli mov xchg xor js dec int push lcall pop sub pop mov insb pop xor push sar dec cmp pop or dec mov testb jl fwait adc xor cmp pusha nop sets into fdivl jno sbb push cltd dec addl xchg fstps (bad) ja ja stos (bad) (bad) pusha (bad) sub add adc dec into (bad) jl or mov mov dec add loopne adc pop push shrd into mov xchg jae lods into pmulhuw scas or cmp dec bound movsb mov cld dec adcb pop mov in cmc push inc inc sub xor push cmp (bad) xchg adc push push jge push pushl call mulb inc or mov cmp and (bad) rorb sub fmuls int3 mov sbb sub mov test or sub mov xchg push push lock or arpl add adc xchg jns aam hlt sbb or subl idivb pop and rcr roll sbb ret (bad) fidiv mov mov dec int3 pusha inc fcompl iret jne mov dec lret (bad) adc cmp mov pop jmp jmp ja push in out dec mov and jne push cld mov mov push pop leavew or inc push pushf mov sub or loop cmp fistpl lock stos adc shl dec decb pop cmp jge add int3 iret dec test push inc (bad) cmp inc and mov scas ret decb ds in in or sub jae in lea dec mov pop mov (bad) cltd pop dec bound or or into and xlat out loopne loopne jp decb popa das inc mov mov das pop das or insb roll inc or ret mov or inc cld or sub adc inc or push mov sub out or mov push jo into sbb add lock stos fstl test movsb (bad) in jo mov push jne,pt cmp and add sbb lea mov fimull das cmp rcll xor test pop add jae cmp or pop xchg fwait es adc and aam ja pop repnz pushf pop mov mov pushf pop sub je push dec in sub pop call int3 loop and imul testl sbb loopne loopne mov mov fistpll lock lcall dec out sbb in pop or xchg and push dec add xchg mov (bad) mov xchg mov negb inc arpl jnp and fwait add mov scas xor xor xchg fcompl pushf jnp cmpsl test bnd inc and push pop cmp adc imul iret mov xor push lea xchg push xchg (bad) inc xchg or add xorl insb enter and dec xor (bad) mov and repnz sti lock jmp fild test push aad jno add push xchg je roll test out jbe push push and dec ljmp lock mov lea sub or inc test sub jl inc call jmp cmp mov mov roll or js or faddp inc loop shl push (bad) divb mov adc push or mov loop test xchg shr dec or stc jb scas cmpb ret sub (bad) jb lods sarl or (bad) cmpsl mov push add dec jge idivl xchg cmp in clc movl (bad) or lahf xchg inc or stc xor mov and call test add js pop pop leave cmc add xor and ret popf bound xor arpl jo push jo loope xchg and stos mov icebp imul add (bad) jp mov add (bad) jae inc add push pop movsb inc insb add fcmovnb das shlb es or add push inc add pusha repz or adc imul push and scas (bad) xor xchg cmp pushl popa ljmp in (bad) jecxz sub xchg sub je or adc dec je mov scas rcll jmp mov push mov fbld jecxz or addr16 loopne movsb sub pop add mov lret xchg ds inc mov (bad) and mov or mov sti add sbb push int3 aam inc pusha mov fimul mov inc mov inc mov jbe imul sbb jge mov rorb pop mov fsubr fucomi dec xlat pop inc mov xor sub push fs dec jmp pop pop (bad) and ljmp or adc mov push mov adc sbb js sub sbb mov mov or lds cmpsb adc push mov lods inc mov push or add aad add mov je add and int3 cwtl adc mov cli push dec inc adc dec xor decb addl xor (bad) mov loop loope jmp test ret pop in jo pop int cmpl dec sub mov sbb mov jne pause movsb and xchg test sbb fwait jmp push push push push push push adc mov inc dec sbb mov movsb xlat sbb dec ljmp jo (bad) (bad) push push mov sbb cli adc bnd lea lea or cmpl int3 cmp push inc mov cmp mov popl adc pop testl push and stos or or xchg mov dec mov adc call xchg pop inc adc mov rorl and pushl add sub cs sbb mov dec (bad) or pop insl ljmp push inc cmp ds cmp sbb inc push sahf push cmp push mov pop inc aam leave cmp pop mov roll popa mov mov sarb pop jne into push nop and stos add xor push pop dec add notl mov iret cs xchg xchg add add add pop inc add and sbb or aaa dec push sbb sub call xor rclb iret imul loope into sub in push rcll cmp inc scas push fidivrl and nop (bad) jmp hlt pop sbb jecxz sbb pushl lea inc cmp push cmp xchg fdivs sbb mov repz mov mov cmpsl lds adc clc (bad) test (bad) lea (bad) push insb sub mov and mov mov sub test (bad) mov add pmulhuw in or adc xchg xchg fldt sbb xchg xchg xchg xchg sub xor mov mov inc adc jb jb and push jb jb push pop pop pusha jb jb fs jb je jl mov in cmp mov and dec mov xor xor movsb test sub xchg mov sbb je mov lds mov adc je mov insl bound adcl xor adc sbb int3 rorb and adc pop xchg adc jg pop adc cmp sbb cmp je inc dec jne je mov mov add add lret sbb test pop ljmp add push add jp call ss xchg movsb icebp mov ljmp lea insl fmull jae lock cmpsl sub scas or xor sub adc iret pop ret pop jle rolb lahf aad cmpsl jne enter lret rcll rorl jg jp inc mov je dec rorb dec xchg dec outsb out jns gs cmp int3 fmuls xchg pop push push lcall les sbb cwtl add pusha decl sbb pop icebp lea repz sbb pop or ljmp pop inc test loopne test popa add mov pop daa xor inc shlb xchg (bad) rorb inc rorb dec sub or mov call xor call call push clc orl pop push mov add jne iret inc xchg add test test inc test pop addb jp xor test lahf pop add loopne dec jle cmp mov (bad) je loopne pusha lea loop pop cli or lods ret inc jae dec jns mov (bad) arpl adc clc (bad) xor cmpl loopne pop jg pop int3 out shr adc sbb inc adc cmp or cs or pop lcall and or je orb sub (bad) lods je inc push dec sub or cmp sbb loopne push xor rorb or xchg test rorb adc dec jg lea add add sbb or inc add idivb jl pop loopne dec adc testb or or mov cwtl cltd sti test inc add fdiv imul or outsb addb orb lea xchg int3 sub inc mull push nop cld cmp popa inc sub adc mov pop nop sbb mov xchg int3 nop adc movsl add int and mov adc sub pop pop pop jmp add test adc fildll push std mov push cld fs es jo lock jmp inc lock and pop (bad) mov loopne notb cmp jb push mov push push js test jmp ss add fcomps mov sbb mov xor mov adcl pop mov (bad) mov dec adc roll xchg add pop daa dec pop add mov pop sbb jge jp xor pop outsb jl push xor fldcw mov cli sbb and add imul push cmp pop cmpsl add add cmp push xchg loope xchg xchg pusha cltd test (bad) push lea (bad) mov ds add mov add sar cmp mov out outsb pop adc mov sarl not iret xchg in (bad) test jecxz sbb sbbl jo leave mov fwait mov sub std push sub lock insb clc dec dec mov aam inc pushl mov inc adc adc add inc and test push test cmc dec andb fadds out jle jbe mov and lcall nop inc cmp movb inc sbb js clc std dec out push mov mov or sub pusha sub test push jmp adcb fldt test pushf sub add pop cmp (bad) (bad) mov rolb push mov jmp test mov mov test sub sub add cmp in push lea fs push adc test pop mov leave insw add cmp mov movsb push push sub shl pop xor adc dec cwtl fidivr pop sarl jne mov sbb popa add dec sbb jbe add call cwtl push add add cs aaa ffree (bad) xchg jmp cmp add add movzwl mov cmp roll push dec aas cmp and mov and jne mov mov sbb sarb jp in lds (bad) dec (bad) pushl popa clc xor mov mov in xchg inc (bad) xor jae adc icebp fdivs jle dec inc (bad) jo jbe xlat (bad) jno inc lea icebp sbb call lods add je ljmp daa push movsb mov prefetch decl or add adc mov (bad) popa mov pop (bad) jb mov sub or xchg push mov adc iret xchg xchg add adc jbe mov sbb addb mov mov xor sbb or lods mov pop inc inc addw cbtw jo dec mov adc add das add jae sbb jb ja inc add cwtl insb sbb lods push lock add or inc xchg cmp jmp daa mov pop inc sub rcrl lods add inc or sbb add and pop sbb push add fisubr in addr16 xchg sub fwait dec loopne aas push les jmp roll add (bad) jns aas insb dec xchg mov lea sti stos icebp je add push jg jmp aaa cmpsl inc lock mov lock arpl dec xchg push inc mov sbb push pushf pushl (bad) or pop lods mov xchg outsb mov (bad) mov or pop inc unpckhps loope jmp jmp pusha icebp test sub movsb ja pushf cmpb cltd push insl sbb mov or inc pop shrb push push lea add jne sbb add les nop xchg cltd arpl rcrl jne leave es js mov jo mov jmp or cmp in fwait jnp and aam (bad) or mov test test sub or jmp daa sbb sbb or adc push rol popa sub add add push (bad) adc imul sub adc (bad) mov mov and test inc cld sub scas inc clc faddp mov inc fbstp push pop jne jg mov jge mov sbb rorb or mov push mov lds add sub sub inc imul and cmp push jl push pop inc or fadd jmp mov popa add inc mov mov lods xor iret loopne js and pop movsl ljmp popa add mov test fcmovbe shr jg movsb fnsave cmp sysret lea hlt sbb adc jne orl fsubrl jl mov adc push movsb and sub inc sub gs mov xchg push pop pop fldcw icebp mov push cmp jl inc mov push bnd out mov in dec (bad) stc adc and sub or jmp inc adc add add test or inc inc les sbb rcrl pop or outsb je xor sahf pop xchg pop cwtl push je outsb das aaa mov mov add jmp mov inc and jg dec inc fwait inc insb or xchg (bad) pop incl pop or mov sbb jg inc mov jmp movsbl or sub mov xor fildll lahf int3 pop pop cmp mov shll ret push inc add je fwait add push dec scas dec daa pusha xor or and jle and xor dec sbb push inc pop add andl xchg cmp int3 data16 xor add js mov sbb inc jge jp push add or mov cli stos jl pop cmp bswap add aam pop cmp mov add adc or mov or add xor add jge cmc sub mov and cmp jne inc push imul aaa clc adc lret mov or push adc rcl mov jle cmp jl jp inc xchg push ret push pop push or ljmp dec mov hlt out adc gs cmp sbb mov (bad) out mov bound jmp push cli insl cmp rcl push dec test dec or fldt mov rorb push scas inc dec sub adc push add push add sahf xor mov cli mov sbb scas ret mull xchg xor cmova sbb (bad) inc push mov jno or inc jns (bad) out fcomp shr rcr or jne div pop dec adc inc div out mov out jb cmp or cmp or xor (bad) sbb or and fisubrl mov mov iret pop ret cmp fwait daa stos cmp cmpsb sbb shll mov addl cmp ljmp add fisttpll mov push movl lret xor cmp sbb pushf push mull ror icebp inc add hlt add fs xchg dec jb push mov aaa sub mov or cmp xor sbb subl je scas push jg sbb jo mov or loopne stos cmp or push testb add cmp push js ret movsb and jmp adc cmp xor mov es andb xor sbb fwait push jb xchg test xor add (bad) movsl adc jecxz or push inc push adc jle add mov jb ret or and imul mov inc subb mov adc dec add mov adc stos add (bad) xor inc mov movsl or daa inc sbb mov mov adc std mov or adc or idivl loopne add sub negl mov cmp (bad) mov or das test rol add mov push jb andl hlt add push cmpb and pop notl jnp inc test sarl jecxz mov aam cmpl popa inc push or out lock outsb and mov pop outsb pusha xchg roll mov jl pop xor push push and and rcr test or and pop or adc outsb add push ret mov sub or outsb adc and jbe adc push xchg js adc pop inc mov sbb sbb pop jmp insl adc adc clc jmp mov cmpl aad sub cmp jne mov mov pop dec push mov adc adc inc add imul pop pusha movsl addb addb mov push lods pop rcr add add loopne adc stos not sub and or mov xchg sbb hlt ret sub dec mov adc pusha (bad) fmull enter mul add pusha or test adc add pop xor inc cld mov pop cmp loop inc aas icebp mov lea pop outsl (bad) mov add xor mov lret lcall dec jne push push jmp or jmp idivb or push fidivl loopne adc out sbb das pop pop stos icebp xor or shrl push mov mov sbb jge aad or mov xor std js test mov push sbb movsb pop in sbb or je mov sbb fcomps sbb (bad) xor push push pusha sub xor mov sub divb ljmp and sbb jmp cmp and adc mov ja jne fs dec mov aad add push arpl xchg xor lock add push push push test add and jo mov movsl xor jle or mov clc sbb push pop mov stos push sub div movsl js cmp inc (bad) insb add xor xorl std sbb aas add call sub pop mov in lret out sbb pushl sub test push inc jmp push test fdivrl add aaa loopne xchg les testb cmp aas test roll or (bad) js aam sub push repz push decb addl push insl sub pop (bad) add inc and cmpl pop mov cmc sbb mov add adc ret mov pop adcb (bad) mov mov xor scas fmull mov sub jge lea cmp je mov jg cmpsb rolb cld jg insl (bad) xorb fidiv in dec pop (bad) rep rcrl jmp cmp adc mov add test enter cs jmp dec loopne shll xchg jmp fisubrl mov lock lock sbb adc cwtl nop and out mov push mov mov mov les dec out fimull mov inc xchg adc ret icebp lods (bad) sbb addl lret test cmp dec insb stos movsb adc les push enter lods cmc sub rclb sbb sbb sti xchg cld add dec xor sbb leave jno mov cmc pop and sbbl lods cmpsb mov jg push test dec jmp mov dec js test test inc jne rcll inc pop bound jbe ret or mov imul mov cmp push inc sub mov dec repz add lods cmp sub ret pop xor sbb add rol add sahf add dec pop or aad adc adc inc int3 outsb rcr mov mov jmp pop jp jmp cli (bad) pop mov jbe inc mov sahf and inc lods in insl mov loop xor adc push lret cmovl sbb in push sub push push and and jge pop hlt mov loopne iret (bad) mov cld add int add add and loop hlt es in push mov xchg lods sub add pop repnz push and orl add es ljmp in add movl push adc imul call add xchg dec add jne sub lcall push xor movb mov cmp inc cmp and scas and fsubr or jge fdivl pop jne dec add add lds addb sub mov movzwl add add xor or mov mov enter lret sub cmp sub add mov mov mov sbb push mov daa loope loopne cmp jbe sbb lds sbb and pop or pop adc sbb pop mov sbb add je mov cltd fdivs outsb insb xor sub inc xchg pop sbb daa cmp movsl and inc fcompl ds cld call notb add pop inc popa fstpt mov push mov test xlat mov sbb mov push sub pop pop dec insb add inc mov out adc add (bad) cmp pop ret xchg mov pop or or mov mov mov mov sbb or int3 je push and outsl add cmp jb cmp ja add cmp mov ret (bad) cmp cmp adc adcb aam rcrb add flds pop add add (bad) ror fs push (bad) push test ret pop xchg mov fst dec push pop push (bad) (bad) enter mov out outsl (bad) push fs cmp jne fisttpl push jmp or jmp add je cmp insb fmuls mov dec mov mov xchg cld and test sbbl push or pop xchg fdivrl in jne outsl movsl xchg (bad) or popa sbbl jnp pushf (bad) loopne mov notb mov jmp cs mov jmp orl (bad) adc fcompl sbb adcb mov xchg and sarb rolb movsl cmp push xor xchg pop testb movsb mov popa xchg adc sub or clc pop in aad add test cmp gs mov js and add mov test mov add testb pop rolb push push xchg add loope and sbb inc adc adc add cmp call push mov (bad) movsb adcl jns or mov (bad) sbb cmp jns mov vmptrld sbb mov loope adc cmpsl or mov xor inc add scas or add jge movl cs out je mov subb iret test mov jmp fmuls and jnp jecxz push adc and add divl lret (bad) stc push sbbl fmulp xor cmp add sahf add scas and cltd rorl pop or (bad) out inc cld lcall out dec add mov fldenv and ret mulb ja mov push aam xchg pop addr16 (bad) outsb or rclb and testl repnz pop cmp lock movsb mov out add fcmovnbe inc or rcrl mov shr and push cltd or and pop or mov inc mov mov xchg inc inc pusha test cli adc mov inc dec adc or scas in cld jmp dec pop pop xchg push jmp xchg or mov rcrb movb dec and dec lods xchg loopne pop inc add lock mov cmp xorl jge movsb cld push or adc mov (bad) pop sbb pop out push addb xor cld fisttpl into add sub mov adc bound popa push jbe adc jne or cmp and (bad) mov adc xor jg mov andl fsubr add xor dec add loopne in add xor cmp adc lock jecxz aam hlt and mov icebp fmuls push add and inc int3 lods inc rolb addb xor push xor push aam rcll add pop pop and lods mov mov popa adc ret pop out mov xchg loope sub push cld shrl mov or cld addr16 inc and inc jmp jmp popa stc outsb add pushl or lods loope pop jne adc inc push cwtl fdivrs pop push xchg add pushf sbb ret add or push mov out rcrl mov inc (bad) ja mov jmp das imul gs add push cld sub sbb add fdivrl dec add add fcoml call jl push adc in jge neg loop bound xor ja cmp jbe scas or fiadd (bad) push int and fbstp inc cmc cmp in aam cmp cmp dec adc inc xchg imul and pop adc cwtl test stos inc sbb xor pop jmp xor repz pop adc call push aas ds cmpsl hlt mov inc cmpsl adc into dec popa out mov (bad) call rolb pop enter push mov lret sbb ss (bad) mov or movsl es push dec jl cmp pop mov loopne movsl pop adc pop loopne je push add or add je mov mov bound loopne aas shr pop dec ss inc xor insb pop inc cmc pop inc xor gs in mov out add test jae aad sarl push fimull or lcall mov push cmp jle adc sub (bad) je,pn push push lea sbb lea popa mov daa cli ja xor push cmp addr16 push mov fildl insb fs push sti cwtl enter rolb (bad) fcomps into add pop or mov mov push inc or jmp punpckhdq stos lea sub cs ret or dec cmp add rcrb mov and into pop sbb and and jbe je clc dec lea cmp xchg outsb xchg sub out (bad) je sbb push cmp inc cli push int3 and pop fcoml sub outsl test sbb or test or (bad) (bad) (bad) call dec inc loopne sbb popf sub mov adc dec push sbb push (bad) jo and sub fwait (bad) aaa sarb jg movsbl rcr stos mov mov imul stos inc movsl add sbb jl shl dec or xchg ljmp loop lret cmpl mov and push pushl lret cli mov push cmpsl sbb mov clc sbb cld add add xchg sarl or xlat sahf sub xchg stc (bad) sbb add cmp adc stc rcll mov push imul pop inc sbb jne test adc or or push adc sbb jp dec lods xorb repz cmp and pushf jle jno xchg push rolb add cs (bad) inc xchg ror je add roll add dec jl or pop test inc or push jp scas out loopne ret in jno mov or aas pop jle push mov pop xor pop add enter add xor adc dec fdivs push movsl scas orl loope or fnstcw int clc jg push hlt cmp jl cld mov mov adc mov dec add int3 out mov cmp jmp adc mov dec mov or loop or fldenv or push pushf add add push sbb inc xchg sbb jecxz clc mov sub daa jns mov mov add movsb ret and mov add xor loopne mov rclb outsl mov insb mov mov and sub cmp xchg xchg dec test aam clc sub inc or sbb je (bad) mov stos pop jle nop jg mov cmp mov das (bad) in mov cwtl jno insl or add int lods or rolb and (bad) fs mov test enter rcl cmpl icebp inc cmpl mov adc lret pop jne outsl mov fstpl imul in adc pop sbb insb mov dec aaa inc inc or xor and ficomp or adc or sbbl test (bad) notb add or sub mov lock mov in (bad) and repnz mov and and push sbb dec pop iret push pop sti repz mov andb test je lods aad scas insl stos (bad) cltd mov dec mov xchg sbb jl jp jo jmp imul jne ja popa xchg je mov (bad) int3 dec xchg sbb jmp push xor sbb push and add enter mov (bad) xor jae mov mov push xor mov insb pop call fsubrs pop adc push into push cmp outsl jge jl inc rolb je dec jne sub push pushl or cli push add jmp xor dec mov jge add nop les mov sar insb add add pop adc es mov pushl mov jmp lret inc sti sbb dec mov or or mov outsb sub popa mov mov loopne shll in hlt lret cmpb lea in sbb je pop fisttpl fimull and popa xor in adc add test bound jne ja add jb,pn mov xor pop push cmp jl dec dec add add mov hlt inc neg pop faddl cmpb sub inc jne clc cld mov or mov movsb outsb or fadd push into push mov (bad) mov cmpsl aas sub xor add mov scas add scas push push mov or pusha dec dec or push push aad jl enter xor mov cmp mov jne scas out mov movsb ss (bad) dec je dec sti or test add push (bad) xchg popa xlat push add xchg adcb aad (bad) push pop dec add lea jo adc lods mov add gs or dec pop pop ss push add xchg adc fnstenv pop (bad) movl mov lcall imul inc js and scas add in jnp lea les dec or add cmpsl test (bad) jo sub sbb sbb jle add rclb jbe jbe mov insl aam ds xchg mov add call popl cmp sbb test inc inc (bad) mov insb ja pop xor mov pop and jle jbe pop push pusha adc shrb add inc jg js sub nop orl out inc mov hlt push data16 das loopne push xchg cmp mov cmc or out test adcl push jmp push mov jle jno jo std or lcall cs adc dec adc or imul push or inc and cmp shll push push dec or inc (bad) (bad) rorb mov cmpsb enter inc lret ljmp test ret or dec movsl movsb imul sub sub lahf ret cmpl movsb rorb mov push mov incl cli es adc xor push or inc and nop or push and data16 loopne mov jne cmp lods jmp mov mov cwtl cmpsl jb jecxz add mov cmpl loop call adc daa mov push or jbe xchg inc rolb add in outsb call jmp xchg and cli xchg mov cmp ret mov push push push andb push aad push iret inc mov flds sub mov pop es jmp adc mov mov add leave and scas sbb jl push sub push dec jb scas cmpsl pop inc pop fsubrs sbb jle imul out xchg lea lea (bad) dec clc push xor inc bnd jnp sub push or shll lods cmpsl pop jp pop push push xchg pop testl and dec jnp notl add sub and jnp xor inc pop push or cmpsl and mov shlb enter repz aas shl bound pop adc push in ret adc xchg rcll sbb out mov jg loopne (bad) jb cmp jb sbb adc xchg sbb fdivr mov jb nop insb mov add mov pop add lcall loopne (bad) pusha cmc mov clc mov cmp ja movsb mov (bad) sub mov faddl pop or lea sbb xor pusha notl cli cmp xor pop loopne arpl xchg and adc xor fildl and icebp sti ficoml sub push mov pop mov xchg push ja loop xchg push add mov aas fwait jp xchg lock cmp insl lock or or jl es mov cmp add bnd lods mov add or mov xlat loope clc push mov adc fsubs jg vshufps mov mov cli test cmp jle int3 into rorb stos leave cmp int pop mov pop dec shr aam pop out icebp imul mov je or jne add movl aaa push jp fsts xor adc fcmovu daa nop clc lret je adc cmp enter push dec jge push lcall inc aam inc in push xchg adc sub test loope test xor push fmuls dec add inc xor mov jg mov roll jmp inc jo adc pop pop cmp dec call inc jbe repnz inc ret mov pop push packsswb mov push adc js mov (bad) insb sub pop popf loopne jne out adc aas fwait jle les (bad) lsl rolb lahf and enter mov in sub in incb inc sub sub pusha xchg cld xchg jp push mov rolb mov fldcw pop imul xor nop cmp sbb mov push xor push or ret push ss adc jns les je nop xchg (bad) fbstp in (bad) add lea sub pop push cmp loopne and enter xor add test es sti movsl adc int3 xor xchg dec cwtl push outsl cmp push insb fisubl arpl jge loope pushf jbe mov imul adc adc rorl mov les push jb in jne and dec push fistpl jnp and sub dec jne and dec pop mov popa sub nop pop xchg xchg andb repz inc adc sbb (bad) int3 xchg mov les lea mov imul mov (bad) adc dec or push mov (bad) jle sub cmp nop cli es mov push test push insb cli aad add test add add and icebp pop or popf popa adc mov (bad) (bad) repz mov adc inc add pusha add adc or movb jo sub mov insl ja call push (bad) js je xor xchg cmpl das jo scas sarb test scas jns mov mov jne test xchg lret pushf add mov movsb cwtl lods pop movsl (bad) jne xorb mov cmp nop add jne lods rcrb sub les mov sbb aam mov mull push test in xor fsubl outsb not adc shlb jge push mov jns std mov je pop mov adc and jb jle jp adc jnp xor xor out cmp mov (bad) mov adc and leave roll xchg jnp lahf frstor sbb hlt xchg jnp xor cmp mov or (bad) or jnp xor mov push push cmp mov xchg int3 xor inc das adcb das or shlb cmc in mov aam inc dec fcoms sub push lahf lcall sub in lahf mov and add or das jno adc adc cmp xchg sub xchg xchg jl mov pushf nop or popa pop cmpl push ret sbb adc or popf mov mov test push jl cmp cmpsl cmpl and mov fisttpl and xlat movsb adc cmp sbb ja sahf or loope (bad) fistl add (bad) mov add cpuid les pusha cmpl pop movsl xor lahf push imul mov add jne mov dec pop push enter adc mov mov nop add dec xor push insl add sbb ret lahf out push outsl mov xchg or loop sahf out cmp fsts jecxz push jns out pop mov int icebp pop in daa pop iret repz arpl mov jbe in add adc popa cs jo insl mov xor push loop inc (bad) lcall inc mov dec aaa cmp mov add or fdivrp lahf int rorb adc rclb sbbl dec aad cmp incl gs popa je and add (bad) pushl jns imul xor xor dec gs outsb sub and std sar popa imul inc add or sbb or pop push add (bad) fmulp add add adc fild adc adc add pushf xchg pop adc jle pop adc scas repnz adc out push adc or sahf out sahf pop or or jns or or out add lahf add add mov pop enter fcmovnbe inc or xchg xchg xchg pop or or xchg xchg or test notl adc pop or idiv push or or (bad) sbb out sub insb in sahf out sahf sbb pop fdivrl jns out jl add out and jns adc jns out jb or out sub jns sbb jns out jp push xchg jns out cmpsb data16 out sahf push xchg push (bad) ss sahf out jbe push mov jns out cs outsb out sahf out sahf push sahf pop fidivr mov jle add out and jns adc jns out jno or out sub jns sbb jns out jns add sahf out and out sahf adc mov sahf out jne or sahf out sub out sahf sbb mov jge adc sahf push push push xchg push push sahf out sahf rcl xor mov jns out jae repz jns out mov jns lret lret sub stos stos jns out imul sbb jns out fwait fwait pop pop sahf out sahf fcmovnu cmp mov jns jnp sti pop out sahf out xchg jns mov jns out addr16 pop out sahf out xchg xchg push push sahf out sahf xlat xlat aaa aaa mov jns out ja div movntq out (bad) (bad) dec dec sahf out sahf iret iret das das scas scas jns out outsl outsl out out pop out sahf out lahf lahf pop pop sahf out sahf (bad) aas aas mov jns jg push cmp jmp inc push and push iret repz xor dec sub iret repz pop cmp repz repz and adc cmp cmp (bad) addl ret pop cmp repz jnp add add adc iret repz sbb adc repz repz push push push mov adc sbb adc push or add cmp sbb pop xor jns or add inc cs or or xchg mov or push sub cs (bad) iret jnp sbb adc adc adc and sbb sbb pop and sbb push jb sbb (bad) cli out xlat lahf mov aas adc adc cmp cmp adc or mov and inc or push mov les addr16 dec or xchg adc idivb adc mov cwtl sub xor jns cmp xchg push pusha cwtl sbb jnp push andb mov push xlat or jbe ffree sbb sarb stos fadds push push or pop dec popa jb and insb gs pop or xor jp out cmpsb adc pop sbb and repz pop push xor inc push cmp repz mov iret ret jecxz add mov pop pop lea (bad) pop inc or xlat sbb and inc popa out out jns sarl push add sahf out sahf add or jae jo ds add add adc adc inc add sub (bad) decl mov push push outsb imul outsb and arpl je outsl outsb pushl push cs imul outsb arpl gs outsl (bad) (bad) cmp xchg jb dec inc push dec inc dec xor cs dec dec fnstsw mov outsl inc gs inc insb jae jb gs pop repnz gs popa insb jne inc inc insb insb outsl arpl arpl mov jb js je jb gs insl jae push and inc daa pop adc add pop push dec ucomiss enter stos pop adc and and sub sub cs (bad) ljmp xor xor xor ss cmp cmp cmp ds adc inc inc inc inc inc dec dec dec dec dec dec dec dec mov push push adc pop pop pop pop pop pop pusha popa bound clc xchg insb insl adc jb (bad) push cld pushl ja jns jnp jge jg cmp popf add shrl xchg rclb sbb rclb push and in xchg dec inc and lcall inc sbb ja sbb popa jo insb imul jae insl popa pop (bad) lock adc je,pn insl adc je and fistpl push fs stos push jb jns dec push fwait cltd test jns or xorb inc popa arpl fldt daa mov jne pop xor and insl enter rcl insl inc cs xor sub sub dec rcrb lcall mov mov insl (bad) shlb and jbe mov push test fisubrl mov inc jae es jne push and je and push cmpl ds imul lcall and mov push in fldenv daa sub or decb das arpl cmp arpl cmp dec popa sub fsubr sbbl jb inc xchg movsl inc (bad) add imul imul int3 or push mov gs pop in inc push xchg popa pop xor gs push fbstp xor pop sbb cmpsb cs jo or xor xchg mov shll (bad) inc mov hlt pushf insb gs pusha sahf pop dec aaa (bad) fisubl outsl outsl ss outsl xor jo cli jbe add inc mov mov xchg or loopne pop in pop push gs das push or lock cmpl stos andb outsl push or sub lods out push cmp add xor inc aaa or jecxz insl in ljmp adc imul sub popa pop or sub inc jno (bad) shll stos xchg leave nop or xor insl cmpsb js sbb jb adc stos popa in xor add or push and adc insl lret push cmp imul lock mov inc sub adc jb push sub add xchg lret inc sub pop dec jmp dec or add cmp pop addr16 adc jne add gs (bad) pop or dec and dec cmp out xor jb (bad) push gs scas stos inc adc outsb inc outsl js mov jb insb xor or and in in sub dec add es addl add jg add fiaddl addb dec sbb mov and add add add push inc incl adc push mov add mov rcrb add add (bad) call sbb pop addb xchg lea call xchg xchg xchg cwtl cltd lcall mov cmpsb cmpsl test stos stos lods lods scas scas (bad) (bad) (bad) pushl mov mov mov mov ret (bad) (bad) enter int3 int iret (bad) (bad) (bad) call rcl rcl aad xlat fcomp fcmovu (bad) (bad) loopne loop in out call in out out stos sbb push icebp repnz cmc div clc stc cli sti cld std (bad) jmp outsb mov push inc add test test jmp add mov decl jmp insl insl cmp fs in jne and adc add das das jmp cs push push mov dec xor xchg cmp adc clc xor inc jne jne loop in insl dec jne xchg outsb gs jo imul pusha arpl inc gs fdivrl daa dec popa outsb adc cmp scas cmpsl xchg popl xor addr16 popa mov fs mov inc mov jae push gs imul int sbb dec outsl outsb and (bad) out mov ja pop dec inc (bad) or ss xor xchg push and hlt add insb jl dec insl roll imul jae mov sbb mov dec dec dec insb jns daa pop pusha and push jns mov bound fs inc add mov pop pop addr16 cmp add cltd cmc push int jbe mov jbe pop push dec imul lds push push inc mov sub sbb shlb lret into nop popl and jle cmp push add push gs fcomps mov pop pop push sub jae daa add cmp nop (bad) jno insb call inc push popa push out subl ja xchg lds mov popw or xchg inc push push push push cmp inc dec push jne repnz add push xor pop outsb enter cmp sbb scas gs jge jg sahf dec and imul call or jg test jl jae popa jb insb xchg cli mov popaw adc lods and lds pusha push or inc aad pop das je lock outsl xchg xlat bound jmp mov popw pop push jl es or ds and sarl inc jl push scas sbb jle sub sub xlat add push jl and lahf das sub iret sub jnp sub sub push outsl jo add sbb dec dec and cmp ja nop ds xchg dec scas push or addr16 push jb jne push xor adc xor sbb push cld test push or fstps jo mov ret cltd adc cmp sti stos fwait call push aam mov mov pushf nop test sahf out dec jnp push lods cwtl js out xor je and jo insb push push fs pop push dec repz repz inc inc cmp fdiv cmp xor sub and repz repz sbb adc or stc cmp or cld push clc sahf out sahf hlt lock call out fnop aam mov mov nop test lods jnp push xor (bad) adc cmp pause insb dec and cmp repz clc adc push in fdivrl rep xchg js xor mov out cwtl je xchg loope repz outsb fcoml cmpsl das pop mov insb add pop sub test adc add in fildl push push add add add push and push pop pop or aaa xor push push cli and adc imull movsb add adc js or fistpl add add or iret (bad) jg addb add xchg test mov adcb pop sub in add jle push push mov sub lods fnstenv mov int3 push jo addb ja mov stos or push mov das (bad) cli test dec add addr16 mov outsl rcll jne daa pop lea dec fiadd shlb push inc push cmp in add or cs cmp inc or (bad) in add sbb test sbb das adc and loop ret test or or mov sub inc sar adc push inc gs dec dec dec push push and inc (bad) dec lock mov fdivs cmp (bad) add mov add sub xor (bad) icebp mov data16 (bad) std incl test xor das add faddp xchg inc add outsl push and dec sbb sbb popa and fidivr inc addr16 push jo and jbe cmp sti inc data16 ja xchg imul add push push dec push push daa push and stos dec add dec jecxz mov sub idivl imul push jl mov ljmp gs ret inc jle stos push ljmp shlb jne fs imul or imul outsl sbb xor ja push sbb push popa aas mov push ja jns add pop idivl add outsb xor xor arpl insl mov fmull call fneni(8087 jge sbb addr16 inc mov idivl cmp fbstp fs add dec jae pop imul xchg push xchg pop inc subl push daa pop daa add addl ret xor lahf fldt popa subl out jo push sar sub adc scas xchg stos sbb mov jae jae mov mov pop (bad) clc (bad) shl and bound sbb dec jae and nop imul repz push lods data16 inc ret pop in push arpl popa testb add fisub mov jo dec arpl cmpsl mov mov bound or ret mov push add add push dec insb jo sti icebp xchg gs inc pop push add ja loope aaa jp repz add orl xchg jecxz into lods js insl inc imul orl sbb outsb jg jb sub sbb dec pop mov push addb pop push xor add movb add insl addr16 fwait test xor pop add fsubrs scas rol loopne jmp jns popa add into add jecxz push arpl subl jae and das or dec arpl mov cmpsl mov add js mov and pop addl sub dec add mov adc or and sub test aas cmp fisubl addr16 gs inc mov xlat push lahf data16 popa add adc dec inc mov xorb mov mov add jmp mov jae and and ja cmp xchg jns outsb add push (bad) popa push iret fild iret xor and sbb jo cld dec movl add lds push lahf push dec jo ja add push test dec mov inc (bad) jae ja mov pop inc addr16 adc scas jecxz or mov adc cmp rclb fimul out (bad) data16 and outsb and or and jecxz mov idivl adc xchg pop sbb jp aas or dec dec icebp jnp out jbe sub inc sbb dec add xor push sbb daa loopne jo,pt pop sub or fwait jo outsl andl movsb and test xchg xor pop push add jecxz outsl (bad) insl pop fildll push pcmpgtd rolb dec iret xlat xor mov ret sub fwait imul arpl add pop imul add sub inc mov fidivl arpl sti aaa test mov lahf out imul imul inc bound mov aas xchg xor addr16 inc fsubrl push pop (bad) popa add daa add je outsl pop sub xchg (bad) sti lea rclb add and scas lea addr16 jo mov sub add push push cmp movsl inc jns rorl pop ret je jecxz xor xor vmwrite inc fwait pop fisttpl rclb bound jne and push jne jb and add xchg sbb jecxz mov push je ret das cmp push xchg arpl inc shll sti adc mov mov xor pop xor cmp sbbl sub (bad) adc pop mov out cmpsb lods test ja dec lods js jmp push pop repz insb aas imul mov repz add jo call sub xor fildll pusha xor add cmp bound test pop scas fwait dec adc test lret pop outsb outsl jo push test stos gs maskmovq (bad) or mov push outsb add add lea push sub inc add dec add push and jle pop sbb xor out stos add cmp outsl arpl loopne jb bound cmpsw push adc pop fistpl push xchg inc inc aaa mov xor push add sbb add inc push push (bad) mov mov dec add and push addl outsl subl mov pop (bad) jne or pop sub imul test add pop and lret je aad push xorps inc inc or push dec test daa arpl aaa fimull add mov mov cmp cmp or scas or add or push scas xchg aad mov insl adc sbb adc arpl jmp aam mov mov (bad) pop inc sbb adc iret or iret sub out add bound call gs (bad) dec pusha aas outsb jae sbb inc cmp sti pop stos sbb iret push lret sbb inc adc out or and mov aas push xchg mov xlat testl pavgb fwait imul adc xor mov scas push stos and (bad) push int (bad) (bad) daa ss mov je jne jb push jns inc push pusha sti aad aaa aas fs cs mov popa add mov inc and xchg push loopne mov jo pop push negl (bad) (bad) shlb insl imul xor xchg and pusha inc cld push scas jo imul pop xchg data16 or scas mov add je adc dec inc shrl and shlb jae rorb add add adc (bad) sub shlb arpl add clc and push add sbb and rorl or clc adc and ret icebp and inc and scas cmpl jae mov ret insl dec fwait orl sub test lahf pop xorl sub pop popa stos test sbb stos ja (bad) pusha or icebp (bad) pop sub xchg sub pop or jo outsl sbb test outsl out pop xor je mov pop dec (bad) ja mov jg xchg pop inc daa shlb stos mov xchg adcl movsb ret insl repz cs sub add push push and xchg nop mov inc icebp test ret or jb sbb sti push adcl test jae xor inc inc sub bound inc push cmp out ja push sub push add stos scas fwait add mov or (bad) mov lahf jb lret pop rorb adc je outsb ja dec inc push inc jne insl imul or arpl inc bound fwait mov and xor add mov outsl and in mov bound movsl js cmpsl mull je pop dec jle (bad) imul fs lds popa aas push sbb pop jae cmp inc or cmp inc pxor scas inc or lahf and addr16 push add scas mov or sub xor adc or andb jno jecxz jae pop jno mov inc dec insb dec sbb and push adc or jge xorl sbb inc inc and jb (bad) jo inc xchg mov insb sbbl fs lret ja aas push dec add push inc sbb push mov cmp dec mov xor mov sub jae push and lahf cmp mov add mov mov ret enter pop or push sub dec movsb loopne sub add pushf mov or sbb sub addl (bad) dec xor insb and jnp pop arpl iret dec adc mov push pusha mov push adcl fiaddl test jnp add adc or (bad) stos mov xchg cli mov jns sub leave xchg dec dec cmpsl and lea sbb xor daa push add push and and outsb movsl mov (bad) iret and shll imul popa mov cmp add out or cwtl adc (bad) and test push sub add mov xor popl push sub sbb or adc sti mov dec pop or bound jg or inc sub jnp dec add inc sub or push pop mov rcl iret rolb add dec inc xor add outsl mov or add push je (bad) call orb pop mov pop aaa jo loop add push add inc sub jnp mov or daa or cmp out dec add sbb push jno lret outsl fwait orb add mov adc adc sahf or orl aaa and xor mov jne xchg (bad) ss sub xlat int3 and jo xor in adc jnp pop xor adc xchg or and insb xchg insb jp push leave or fild push fs inc imul jbe (bad) dec inc push add es jnp push aaa mov inc aaa roll jae inc test push daa cmpsl inc lods (bad) out bound jbe dec mov pop xor out movb sbb inc mov arpl jae xorb inc dec jg lret pop cmp test mov push jae xor xor mov add stos cs mov add rorl dec lea or and sub shrb (bad) (bad) (bad) (bad) cmpsl or sbb arpl sbb pop inc jo out fildl adc popa scas xor pop pop lret pop popa stos xor or jg subl add aas sub gs and adc xlat cmp addl push or pop ja xor es adc jecxz pop stos inc sub das cmpsl roll lahf lods xchg adc (bad) daa (bad) mov add sbb sub push inc or pop je lret jb add loopne test push or sbb mov insb lock pop cmp iret pop add sub inc or fwait pop add jo call popl add add xchg subl lahf add test mov sarb (bad) mov xor rolb jne scas cmp sub pushf fwait dec repnz push xchg inc mov sbb cmp sbb xchg xor repz xor inc sbb inc stos movsl call lds movsl outsl daa and mov sub push je je jb push inc cmp xor rclb add arpl sbb aas cmp jb add push fadd outsb inc aas cs fcompl mov and mov add and push add jo iret insl shr es aaa jg and sbb sbb clc add ja insb add jl test mov mov les repz sub pop mov mov scas es inc inc dec rcrb lahf or test dec jo das pusha push or les iret daa xor sub xchg dec cwtl (bad) adc add adc dec loopne (bad) and xor inc adc mov test pop dec and je cmp popf cli and (bad) lahf mov pop rorb mov add lock mov (bad) jae pop add inc adcb push sub or fwait dec ffree dec pop jo inc jb bound xor iret pop jb (bad) repz dec xchg movb nop into pop adc and dec (bad) dec cmpl ret jnp adc cmp mov outsl dec lods (bad) loopne dec or add mov fwait (bad) mov sub pop bound cs out pop ret lret das mov pop dec popa add cmpsl sub pop scas sub mulb imul movb add add mov xchg fisubrl (bad) and add dec adc pop ss dec aas imul mov imul push mov mov and pop push xor mov das dec lods loopne inc pop (bad) xchg push or xchg sub iret aaa cmovp imul jae adc push (bad) dec gs mov (bad) mov addr16 add gs dec or and pop jnp pusha test pop sbbb jmp (bad) sub out cmp arpl push pop or pop push add add fwait mov das pop and jo or adc aaa mov setnp push sub aas mov (bad) je ficom mov cmp jne call sub mov push gs and add outsl push add push iret mov and dec ja jns push cs data16 dec and sbb cwtl inc shl sbb lea push lcall push test xor mov pop dec jg push sbb jg (bad) xor sub pop sbb pop inc and jg and cmpsl inc dec not das pop mov (bad) pop push inc sub addl sbb dec xor xor xor outsb sub iret xchg rcrb pop mov mov testl xor adc addr16 and push lret subl or adc imul (bad) inc aaa iret xor mov adcl mov pop push sbb or sbb test pop push add arpl add jb sub jmp pop jmp xlat popa adc adcl add movsl les sub fild xor add and cmp push daa outsb add (bad) push fwait or push scas popa popl loopne xor xor xor pop add inc add gs xchg inc sbb dec xchg aam cmpsl jo jmp stos sarl aaa cmp jno push pop ret shlb mov fbstp mov ja xor arpl cli adc fwait xchg int and jmp sub mov pusha xor xor jge loopne popa (bad) adc sub imul jg jg push add popa add adc xor pop jmp xor jg je jns or and xlat xor mov adc andl arpl adc and dec (bad) rolb xchg (bad) outsl scas mov cmpsl outsl outsl add je inc scas inc fistl adc jg and inc inc les repz adc push or jae add mov jne sub scas jnp sub imul and adc jns cs mov call jg jecxz mov add inc mov inc (bad) adc push insl ja jmp mov and or leave sbb ret sub ljmp out pop lahf clc adc aas addb imul pusha ret cmp adc xlat imul aas inc xchg ret jae je adc xchg sbb or dec or add jg imul aaa cmp and mov adc imul add ret lsl mov ret test adc add jg add jnp andl int repz add cs inc and dec xor scas pop test jnp dec les jb call pop bound (bad) mov cmpsl xor add adc jo or pop cmc xchg add add aam and mov adc scas addb and rcrb jo or dec pop mov (bad) xchg fidivrl push aaa cmp fistpll inc adc xor xor sub mov inc and adc xor pushl adc dec add and jmp mov ja mov dec xchg fwait pop xor gs mov inc push arpl fs int adc je inc and add adc xor and and mov imul mov popa addr16 cmp xlat loop arpl ljmp xchg icebp arpl daa jne sub xor add je das js loope dec jp cs inc mov shlb inc jg cs scas stos sbbl or inc andl inc mov xlat pop fbstp loopne bound push fwait mov sbb adc xchg pop loopne add add sub scas cmp arpl or cmpsb mov movsl jge adc push xor lret sub ret fwait insl das addr16 imul inc je (bad) mov inc xchg addr16 gs scas jne and imul add lahf jg pop xchg mov cmpsl daa dec insb add mov mov arpl jns addl dec add inc xor and test decl pop xchg mov dec add daa sbb push mov mov data16 pop ja push and pusha and jecxz pop add test ja mov jmp push (bad) jae sub lods or and mov (bad) xchg push inc jg dec mov sub pop sbb adc dec iret adc mov inc jecxz loope push out pop xor add lea add pop pop or push push push push loope mov mov dec aaa inc outsl stos addl stos daa add mov and mov mov push stos mov imul add jns je popa adc roll (bad) jne push dec pop jg or dec push inc cmp shrl and or les push add cmp sbb jb push in jb aas arpl loop,pn stos aas inc divl jo xor or jne xchg movb add add cmpsl lret add loop lret data16 popa add outsb out add imul mov fildll xor or fs push (bad) and sbb movsl xor and cmpsl sub (bad) jnp cmp cmp pop scas pop (bad) xor adc mov lahf xor (bad) jb and adc call inc dec inc add jge and aaa xchg mov add and fist test add push inc push mov xor jo cmp pop adc cltd (bad) out or insl adc (bad) adc mov xchg jecxz pop add pop push mov or push andb mov data16 and mov or push jae add xchg sub pusha andb sti pop js push mov add add add subl fwait sbb arpl js jns mov push pop movq or jmp xor add inc add jmp sub stos mov xchg xor stos sbbl xor jo je or xor sbb ljmp shll xchg sti pop rolb js subl dec fistpl inc int cwtl dec jae push insl rorb and lock xor pop add and bound adc rep xchg push arpl inc inc aas push lea push lcall xchg pop daa and pusha loopne das out scas popa xor inc xchg cwtl jo push jecxz xchg adc mov maxps les outsl lods cltd pop fcomi adc add inc adc mov adc and inc out fmul add mov inc mov out pop adcl pop mov cmpsl js or scas push out in mov xchg push inc mov fist inc pop mov jnp add adc dec dec adc sarl cmp pop jmp ds and cmp xor pop sub inc pop aaa mov (bad) mov or mov shrl test iret dec (bad) push or push sub cmpb cwtl mov push roll imul sub sti insl push pop push xchg cs push lcall jne sub jo xor adc pop adc andb out cs aad pop out jne gs pop push insl mov stos and jb lret adc and push mov jae test xlat andb add fwait pop push sbb das lahf clc add pop sti pop or add nop loop add repz mov inc dec aaa cmp add scas mov insb (bad) or push iret test jno (bad) fisttpl out inc inc adc mov scas add loopne iret inc cld mov mov mov or add loopne mov sub pop add rorb daa aaa (bad) les jb pop out xchg mov outsb sub jb out or fisubl jg scas inc or xorl (bad) xchg ja adc arpl je jne rol xchg and adc arpl jne jb push add pop outsl xor dec sub add and jae or sbb inc loopne outsl outsl orl movsl mov aaa sbb adc jp or shlb daa add nop test jae xchg or (bad) aas mov aaa cmpb xchg and push addl xorl inc xor add mov adc adc add mov pop bound fwait inc rolb and add clc insl add and lahf movsb les mov ss or mov mov shll rcll jb inc fnop or inc lahf mov sub add pop (bad) (bad) mov mov rolw pop rcr popa add gs gs sub add addl pop add (bad) rcll ss (bad) mov mov outsb outsl add cld inc mov add jmp push push fbld push nop pop test lahf aas pop (bad) adc pop sarl sti insb add sub aaa (bad) cwtl pop stos inc cmpsl push add and rolb addb sbb xchg fcoms test imul sbb pop xor daa pusha adc push cmp sahf push fwait daa inc loopne fidiv xchg push and inc add cmp movl push and addr16 xchg cmpsl ret pop add xchg ficom movsb xor jae cli test add nop subl push add and fisubr test or (bad) cwtl mov sbb pop or pop xchg sbbl pop inc (bad) pop pusha inc push test pop test scas sbbl inc add fs push jo das inc push fcomi and aaa out dec push sbb inc or and ja (bad) or pop inc loopne imull pop sub push add cmp inc adc repz mov outsb pop or inc daa sbb pusha loopne jae add mov pop xorb loope add sbb jmp sub outsl out and push pop sarb add subl les pop xorl lret outsl sbb addb divl sub lahf cwtl lods inc inc dec das sbb aaa mov out rclb je adc fstl fiadd pop arpl aad pop add dec lods sbb clts outsb gs adc fisttpl jge outsl outsb or push out jo push (bad) and push pop out push sub push jb popa insb mov adc xchg mov gs popa outsb fs gs mov cmpsl loopne inc add add dec jae mov xchg fldt adc aas loope jo (bad) inc movb subb addr16 add pop out push ss add and add adc add scas or aad sbb mov aam (bad) jmp pusha mov push pop lds movsb inc pop (bad) jg pusha add sti cltd inc adc pop dec lea pop pop adc (bad) mov pop mov push xchg inc lock mov and push push dec xchg dec cmovl sbb mov jo loop shll push add push and movq add aaa xor sarb inc xchg and xlat xor mov data16 pop push sbb pop lcall outsb adc xchg daa popf les (bad) pop ret push or sub add insb xor aaa and movsl aad das out xchg sbb test adc movsb scas cmp subl daa fbstp add xor loopne xadd sbb and clts or xor mov inc notl adc sbb pop addr16 adc and movl or fild inc push stos (bad) xchg sbb cmp addr16 mov sbb adc shrl mov add mov xor and or subb das push sbb adc mov test roll dec and and pop add or mov add outsl fldt popa sub (bad) nop push sti lret sbb lods scas push test cmp add nop fsubs daa jnp and adc addr16 inc dec pusha cmp pushl dec add loopne adc add cwtl xchg dec push inc and push adc fwait pop ret pusha inc or sub and mov push mov xor push push das adcl cmp sbb shlb mov and mov fisttp and test xor add push xor push add inc sahf or or imul loopne dec stos aam or mov stos stos negl add push add aas aaa rcrb ror pop lahf sbb (bad) inc fwait mov push jb xor xor xor fildll mov jb jb inc lods add scas mov dec int3 clc insl add shll addl dec sbb push push dec dec sbb mov mov sbb mov xchg mov outsb pop xchg fwait sub inc (bad) inc push cmp and sub cmp add ret inc dec or lock (bad) loopne cltd or lds dec cmp push add mov xchg dec fwait add add mov add (bad) insl jnp add jle and jnp insb push lock popa testl arpl mov or pop mov dec add push mov pop add scas dec or and and fsubrl lods mov xor scas xchg insl imull xchg test adc mov inc add dec adc or or adc insb pop imul (bad) scas or pop mov mov add pop push push fwait out mov add es pop scas or nop xchg popa iret ret cmp popf (bad) or mov stos push or pop dec ret (bad) dec mov test xchg and add orl adc dec lret sub jne les adc iret add cmpsb push add mov bound loopne iret out icebp std mov add sub fildll pop aaa jbe mov inc insb sub xchg push jns cmp inc mov mov mov insb scas sub nop pop mov xor adc lret (bad) xor mov fildl add cmp hlt inc jmp dec add add cmp sub and cmpsl divl test idiv shlb mov (bad) mov cmp cmp cmp aaa sub sub sub xor sti sbb bound data16 pop cmp inc inc xor inc cmp inc dec lock insb aaa xor insb aaa xor xor inc xor and pop mulb imul add rolb jnp mov or cmp pop and xor push sub fwait inc or aad xchg incl icebp aaa stos sbb jb fs outsb lods push and mov pop fs bound sbb adc push leave push movsb test iret aaa push and cmp incl sbb dec push sti push mov dec sbb inc push cmp push lock add jbe pop scas scas ret xchg inc jae and mov test aaa loopne and jp cs roll lahf ss and sbb mov push shlb sub mov lock cmp sub loop outsl (bad) adc ret ja adc pop add xor sbb test es mov inc loop call push fldl jmp popa outsb arpl jo arpl and adc outsl daa add or mov push push sti jae cmp bound mov sbb inc or and push inc jg add dec fldt mov scas inc add adc and mov xor add mov cmp push and sub pop int3 and add add push inc inc dec dec popa lahf outsl or add test fbld jg movsb mov pop (bad) push sbb mov arpl test xor adc and xlat and push and adc push imul fild bound das mov shrl mov sbb jae aad inc adc prefetchwt1 scas lea adc pop xorl cmpsl mov adc dec or idivl xor dec bound rcll add adc add mov jnp movsl adc and imul xor push or orl (bad) mov sbb sbb xor pop sub mov inc shl add sub jne and or push push sub sub add mov cmp add add rol jnp and cwtl imull ret or test cmp addl stos jne clc (bad) and pusha les fsubrs outsl cmp xchg insb pop movsb or add cmp xor sub je daa mov addl mov mov sbb imul aas mov dec or push dec sarb or test out ret sti jecxz or pop (bad) sbb dec mov mov ret mov popa aaa jb test aaa add adc les ss and rorl (bad) fidivl iret push add dec or jecxz fs cwtl mov scas sti shrl adc fs ja adc sbb and rcrb inc sub pop scas imul inc mov pop ljmp xor mov sub mov pop adc inc (bad) bound test fildll js loope es lahf jp sbb push (bad) bound lods bound out ja dec fsubrs aas push scas inc mov or mov pop ja les bound push rclb movsl xchg pop inc inc add test jnp adc cmpsl inc movsb push cmc test jae pop or pop jne popf xchg out dec insb dec (bad) cmpsl das outsb push sbb aas pop and dec xchg aas outsb test sbb sub dec xor pop fistp mov out adcl add or inc or lahf mov cmp sub pop rorb mov cmpsl push push push adc inc dec (bad) movntps lea push cmp cmc rorb xor inc bound jbe daa and mov test add and inc sub fistp fcompl mov push nop add mov cmp aaa inc or mov pop or adc ja or popa cmp (bad) mov xchg imul iret push inc fild test push cmpl out mov fbstp add andl and or xchg jno push imul rorl pusha sti fbstp dec inc cmpsl out push dec pop (bad) push xchg push xor inc rol sbb xchg add pop push xor add mov inc or jae push inc and push shrb pop or push jecxz arpl jg mov dec (bad) inc dec and adc imul stos sub mov das test out imul out push or add pop lret das jae pop sub adc sbb mov mov sub ja push mov sbb push inc cmpsb fisub push adc xorl xlat xchg jae imul add repz cs or scas dec imul and pop stos mov out adc inc pusha ja je add dec sti xlat pop sbb mov fisttp bound data16 test add or pop adc add mov mov dec jmp jnp adc loopne add push mov ret (bad) push pop jo add mov adc push (bad) jbe (bad) jg xchg inc push sub loope jg inc mov das in or out lahf cmp arpl outsl repnz decl (bad) pop bound pop push gs pop inc outsl je jo (bad) out xchg xor add mov xchg mov shll adc cmp daa scas inc cwtl fistpl push push daa aas add fmul sbb inc add add (bad) pop js test (bad) xchg push movsb push pop lods fcmovnu and lock dec add test in (bad) add pop mov jmp sbb sbb scas add out bound jmp dec push fdivr pop enter push jo in jbe xchg nop fadds incb (bad) pop jnp pop or inc aas sub inc call inc pop ds push sub inc (bad) xchg dec aas test dec imul enter notl pop rclb jnp rorb push (bad) aas mov loopne push psraw fimull cltd nop pop int3 mov push fisubr ficom dec cwtl imul imul ss insl jnp lds mov decl dec mov rolb or mov adc sub xchg mov mov jg xchg mov sub movsb adc stos ljmp rorl mov outsb mov outsl cmp jo ret aas ffreep cmc enter and push sahf daa cld push ss inc fbstp sbb in inc sbb aaa or sub ja ljmp lods notl add jae mov fcoms or add fnstsw mov add xchg pop rolb xchg pop jb pop imul mov xchg sgdtl and pop lock mov jo jg push push fiadd xchg pushf xchg pop mov leave mov inc and xchg dec mov xchg pop sarl clc call or test nop xchg xchg pushf push fild pusha inc repnz mov in fist icebp cmp mov lock ficomp push std sahf ljmp fmulp and sub push xlat fucomp inc addr16 push out pop push pop mov xchg xchg cmp cmp sub loope pop mov vaddsubps inc addr16 or in inc sti rorl xchg fild in dec mov mov loop xchg pop xor insb pop jb pop insb jle or jae xchg add insl in fildll mov je dec cmpsl shll xchg fild lds push fmul pop xor int int3 int3 push (bad) int3 inc pop mov inc mov imul daa cmp (bad) in adc add mov mov cmp inc iret pop les cs scas loope insb jnp (bad) ss sarb jge sete stos ret ja in out dec es xlat scas mov fldt fildl add push dec inc adc add shrb cmpsb imul mov andl nop rcrb das jp test jbe,pn xchg and sub pop add and push outsl mov insl gs outsl fs inc bound jnp push insb outsb xor dec jo sub je outsl ljmp xor inc mov insb jae sub jb pop inc cmp aas pop jae add pop or xor pop xor and jns jmp jo pusha push push inc xor or sbb iret push sbb or jns and data16 int jae outsb imul insl sub inc sub add xchg gs outsb push clc inc (bad) add hlt xchg sbb lret dec nop jo fistpll and movsl je orps outsb pop cwtl das adc pop (bad) inc rcrb push adc or shrb sub idivl push pusha subl push fsubrl jns jae ds das jo xor in mov push or pusha setge outsb mov aas mov inc fucomi jbe aas loopne push das pop nop/reserved mov in mov cmp js cmp shrb fstpt push adc push jbe mov mov lock in mov push unpcklps outsb mov sub je xor enter in jbe das fs aas test mov test inc aas call mov pop nopl cwtl (bad) push das jbe in jbe (bad) aas fdivrs pop das outsb mov in insb cvttps2pi mov jbe fisttpll aas clc incl das push pcmpeqd mov and jb in jbe in xor decl das bound dec outsb mov and movsb pop add (bad) inc in jbe fnstsw in pop das pop bndldx fucomi jbe xchg incl jp cmp mov in (bad) aam adc push sub mov fistl insl pop aas mov dec aas hlt sarl das push movhps outsl fucomi (bad) pusha pushl das jbe ss fucomi (bad) int3 decl das data16 aas lods mov adc mov in jo (bad) or pop nopl pushf loopne mov jle ds (bad) in jbe lcall das outsb ucomiss mov mov jle push pop jno push aas adc cmp aad jbe rdtsc jg jmp mov aas mov mov ljmp nopl test aas xchg (bad) jns cmp outsb mov ljmp mov mov fcomps mov repnz test push unpckhps outsl (bad) push add jne xor jbe jmp and in ss test inc aas ljmp nopl lcall (bad) aas (bad) insl inc mov outsb cvtps2pi mov push (bad) dec aas cli dec jbe pop xor inc pushl mov aad xor decl popa fldt aas cmpsb pop mov mov lcall sbb outsb mov ljmp (bad) in jbe test imul aas mov ljmp dec aas notb push mov call pop pushl push (bad) aaa jg jmp ss in daa aas scas pop mov aad inc aas out lcall pop in jbe fnstsw sahf (bad) jg aas aas (bad) aad ljmp das aas mov pop aas (bad) cmovg decb rcrl xchg xchg mov mov es es leave mov test xchg cltd fnstcw stc lds xchg mov cltd xchg aad dec es mov int and es mov cltd mov fs mov dec xchg rorl xchg mov es stos es mov (bad) dec mov mov dec es es mov negl scas xchg mov lahf and inc outsb stos outsb (bad) incl xchg pop pop adc dec outsb pop pop push push add movsl sub pop add cmc push add ds mov xadd fwait jne pusha jg incl or pop push popa xchg popa mov jg incl sbb xor or sbb fbstp repz cmc mov xchg jle xchg jne les lods movsl fsubs dec xchg in or and aam movsl xchg jns inc lods int sub pop xchg (bad) addr16 add (bad) test cmp aas add sbb js inc ltr aas add incl add pop nopl insb loopne aas add fucom xor xchg outsl pop sbb cmp cs inc push ljmp inc inc mov inc add or nop sbb and add aas or nop mov add add mov jle call inc into fdivrp pop pusha (bad) jns and cmpsb fisttp mov (bad) lret inc jle test shll in adc pop (bad) jg or mov iret mov in call cmp mov push ficompl test mov mov xor fcomp loopne mov jle sub inc cmpsl inc testb push add pop imulb cmp add pop inc push aam sub inc push push data16 lods push ss cs cmp (bad) add adc shufps pop sahf push xor or and or or or fidivrl out scas adc dec outsb push nop push adc and pop inc inc push addr16 das mov in jbe xorps insl shrl test das jo mov loopne push pop andb (bad) aas push call (bad) xchg add fcompl mov das mov dec outsb pop aas into aas xlat sbb cs cmp or out pop or sub inc daa inc pop lahf idiv loope pop inc dec cmp inc cmpsl or adc push pop mov xor mov repz sbb in jo out roll push push push xlat loope out push daa or fildll jnp adc ja add pop push cmp cmp decl cld cmp sbb leave leave mov sbb imulb mov (bad) in dec cs xchg xchg loop sub xchg jg mov mov or stos lds pusha das aas pop mov scas mov add sbb inc pop mov mov mov sbb xor push push iret repz dec dec inc inc cmp ds repz sbb or adc repz jbe hlt lock cmp repz in fnop repz repz int3 les mov pop mov cmp repz jo pusha pop sbb iret repz cmp or add jne inc sahf lods xchg daa inc pop jg mov in cs xchg fild pusha mov mov jp add add subb aam sbb mov mov inc test or cmpsl iret jo cmp push push iret orb mov mov and or cld rclb sahf cmp ja xchg add outsl std add aam mov jge xor dec insl add inc adc roll cmp adc push dec insb ret push add (bad) decl incb mov pop add rcll xchg adc dec pushf std sti inc or pop and rclb mov fildl out add mov pop mov repz testb fdivs repz push sbb mov repz cmp adc mov push sub iret sbb enter sub mov clc cmp out js cld mov incl push js in mov idivb (bad) (bad) (bad) (bad) jl movsb sbb push stos push test or inc mov sub pusha and (bad) (bad) incl add insl mov or inc inc pop stc (bad) xorb or lds dec jmp test add sbb pushf xor mov (bad) idiv ds pop add (bad) in jg add cltd xor cmp rol sti push dec jp xchg or pop push and (bad) jmp aas stc sar std xchg (bad) jle jg dec fidivl xlat push jmp jle int out (bad) gs sahf (bad) (bad) (bad) push enter lock out push js loope fcompl (bad) repz orl mov (bad) (bad) call and addr16 mov out sub mov dec jae lcall das mov lock (bad) call mov cmpsb scas adc pop repz fistpll and (bad) call push mov aas push push stos sub arpl jmp (bad) (bad) (bad) (bad) call lcall dec cltd cmp (bad) rcrl add int xchg lods jecxz (bad) ja xchg (bad) and add push mov cmp push (bad) cltd ret (bad) sahf mov std in jp daa sbb (bad) (bad) (bad) (bad) aas push into (bad) popf jge jnp cmp cmp pop sub xchg test xchg movsb imul mov mov stos es dec and mov (bad) incl es cmp addr16 nop hlt repz iret aas aas (bad) cld cld repz (bad) decl ljmp xchg push (bad) fistl stc dec add (bad) enter inc jg (bad) lcall loope mov cmp sub repnz xchg pop into jns call cld addl push incl pusha and jle jns orb mov lods repz fildll or ljmp imul and sub stos cmpsb xor fstps pop jmp and cmpsl sbb jle (bad) (bad) (bad) ljmp (bad) insb cmp dec cmp test pusha pop pop ret xchg lock mov jne (bad) (bad) (bad) push pop dec mov fcomps fsts jb mov pop aad test cmpsb add gs push xchg and push dec sub test cmp loopne sub jns add in stos cs gs (bad) ljmp push adc (bad) xor cld lock and xchg in jns sbb fbld jmp sub (bad) (bad) ljmp xchg lret cs sub jle fstpl fsubl (bad) jmp push sub mov mov movsl fcmovne lods push lret mov (bad) lcall mov mov jbe sbb aas testb mov das clc (bad) (bad) jnp add clc mov mov xchg mov add adc (bad) pushl int3 aad xor push xor cmp stc cmpsl outsb stos adc (bad) (bad) incl (bad) cmp and pop les outsl ljmp cs outsl push test outsb mov dec les sbbb xchg ret or mov or pop repnz subb (bad) ljmp xchg movsb push jns into push addl xor mov mov mov sub inc shlb jo je dec enter sar incl adc dec and and mov pop cmp (bad) (bad) jg popl xor repnz mov sbb mov fsubrs xchg test dec fldcw shrb add or pop xchg add addr16 add lcall das jb add jae loop mov jle,pt fmull pushl std pop movsb stos or or out jb js add in outsl cli (bad) cmp and jle xor cld jo xor jbe ljmp jg (bad) jg dec add mov cmc leave insb jecxz or inc mov mov pop cld lcall push pop decb stos add bound iret imul dec pusha cli je (bad) (bad) (bad) call adc jno je popa movsb cmp push xchg cmpsl arpl roll cmp sub insl push (bad) (bad) (bad) call cmc sarb inc ja mov sbb push and jae xor lret (bad) mov (bad) jg incl and mov sub dec inc in add nop or (bad) (bad) (bad) js shll loopne mov sub or ljmp (bad) (bad) (bad) (bad) (bad) decl sbb push std add add mov fs sarl dec cmp (bad) jmp jmp test stos jp sarl fstl xchg into add idivb test mov (bad) (bad) (bad) ljmp xor push ret adc (bad) and cmp int3 cmp test or (bad) (bad) (bad) call pushf out and inc push shrb icebp xchg fidiv loope adc shl (bad) inc in cmp dec mov xchg pusha push cmp cmpl decl (bad) dec mov sahf jl sbb lea adc in les in mov ljmp loopne ljmp mov (bad) bound lds (bad) (bad) ljmp fs pop or mov or adc xchg ret icebp int3 mov (bad) push sbb out and (bad) cwtl xor adc inc dec sbb nop outsb (bad) lcall add sub push sub (bad) pushl fcmovnu int inc sbb xchg adc imul sub xlat mov arpl sbb jg loopne add mov xchg pop dec stos mov (bad) (bad) (bad) pushl dec pop or lea outsl ja mov rcr popf xor in and sbb adc out stc out in (bad) fcoml cmp lea jb push (bad) fimul (bad) (bad) dec andb push mov xor pop xchg fstps inc jp and (bad) (bad) incl aas stos dec add add loope test adc call cli inc sbb scas cli incl andl adc xchg or add cmp or (bad) lcall or or cmp jle daa repz into add cmp adc fiadd mov ret cld add nop and (bad) (bad) incl pop push mov push ljmp mov fsubrl mov cmp mov insb test ja cmp jge and mov mov popa insb sbb ljmp dec xor xchg and sahf or ds incl xor inc sbb loopne dec inc vmovshdup (bad) (bad) (bad) ljmp stos push (bad) ss mov mov cmp or xor sbb mov mov in shlb pusha push jl mov mov or into (bad) (bad) (bad) incl cli or adc jne jmp dec jbe mov aam sub enter (bad) (bad) (bad) decl aam push data16 xchg dec cs xchg mov arpl movsb or pusha sar (bad) pushl cli add nop (bad) lret pop push (bad) pushf insb sbb fwait push mov (bad) (bad) (bad) jg pop ror cmp xchg lods clc add or add (bad) and decl push mov gs cli (bad) (bad) jmp and sar lret jbe pop dec (bad) jle inc jns repz pop lcall out push xchg sub jge jnp inc pushf pop pop mov stos int (bad) (bad) (bad) ljmp push iret or push add lods and fwait mov ljmp inc mov or (bad) incl sbb xchg ss mov and in cmc (bad) (bad) ljmp or mov pop lret stc mov test ss push dec std sti xor icebp (bad) (bad) (bad) fist enter mov inc in outsb ss mov sub js cmp xchg int3 dec loope xor (bad) ljmp jg loope cmc sbb jg jmp stos jp stos sahf nop cwtl mov (bad) call push aaa mul mov or dec popf mov stos add pushl sub dec (bad) in paddd (bad) incl add mov rclb int mov lock add xchg lds test pop mov andb iret inc jl popf incb lcall (bad) (bad) decl cltd sbb or xlat lea sahf push push ss or (bad) push std test mov inc dec cli (bad) mov cltd mov and lcall sub fstps or xchg xchg (bad) insl jbe xor xchg sbb add cltd and jg (bad) incl into cmp sbb xchg imul xchg das adc jle pop leave jl pop xlat lcall dec dec push fildl mov sbb xor sbb mov or (bad) ljmp pop dec cmp movsb inc incl inc lret loope fstl or test pop xchg sbb hlt (bad) (bad) jmp inc mov fild out fiadd xchg cli sub inc xor mov add and pushl sub mov fxam sbb push pop xchg mov cltd and icebp pushl or (bad) cld adc or inc inc mov dec mov test outsl test xchg cld inc cmc push popf inc aad mov stc out shll inc (bad) (bad) (bad) ljmp rolb mov scas pop add cmp pop cmp lcall sub jg (bad) call sarb xchg push popf jns pop pop jne out mov aad mov (bad) (bad) (bad) fidivrl xchg push mov dec mov mov (bad) fisttp adc sar pushl mov mov xchg inc xchg sub mov (bad) (bad) mov mov icebp jo bound out cmpl fisttpl lods divl jmp outsb fcomip fwait aad (bad) out ficom xchg and fistpl add cmp cld decl in pushf das adc jp je inc lds jae (bad) (bad) ljmp sub (bad) dec out ficompl cmp imul aad in sub pusha or jnp dec sbb cmp repz test cmp pushf sar (bad) (bad) incl inc and into retw ds movsb jg dec push js ficomp push lock test mov push (bad) (bad) (bad) fisubrl sbb scas inc test je jbe jae xchg push inc cmc addr16 ljmp (bad) (bad) (bad) ljmp mov xor sub imul cmp (bad) mov pop test and mov test cltd dec cmpsb mov (bad) (bad) (bad) fucomp mov pop aaa imul fisubrl pop test aas test lock call imul or lds sbb xchg mov add icebp jmp cwtl shrb dec les and jnp xor or cmp (bad) jmp in cmp rsm out popa cmp out pop add sub jnp popa sub (bad) jmp pop push movsl jno insb out adc ss stos div (bad) icebp test add mov xor aas or dec xor (bad) (bad) incl sub lcall add add (bad) add dec or lret ljmp push pop push mov ret or sbb mov call bound (bad) push lret (bad) jb lahf (bad) cmpl outsl mov mov jno jg call out cmp (bad) (bad) psrld aam xor cmpsl insl in or (bad) (bad) (bad) mov mov or mov sbb or cltd push leave sti imul decl dec rcr cmp add inc test dec (bad) sbb (bad) lcall add faddl outsl cwtl data16 or mov lock iret repz or (bad) (bad) lcall dec sahf dec loope add xor arpl xchg scas mov mov adc insl (bad) pop loopne fisttpl lcall rcr (bad) mov sar sbb add rorl jp,pt inc xor inc cld fmuls pop mov in pushl jle roll movsb loopne xchg dec sbb test js scas roll enter (bad) (bad) jmp xor inc scas cmp sti int3 push dec test movsb cmpsb sub inc sub dec push incl cld decl aaa stos mov push in aam inc sahf int3 loopne xor daa inc mov adc mov sbb insl push mov mov lcall (bad) jmp xchg push inc mov add aam (bad) adc (bad) call data16 adc xchg adc sub lret dec (bad) pop scas js xchg fwait add ljmp fwait pop gs leave or outsl cli incl out add ss bound mov jmp jge neg lock cltd sahf in cmp push jp mov jo popa gs jl push (bad) (bad) (bad) ljmp add add push in and or mov mov pop cmp (bad) (bad) (bad) decl xchg xchg insb push push xchg sub jno lds jb iret add add int ja (bad) (bad) incl mov pop (bad) aaa cmp (bad) xchg data16 adc (bad) (bad) mov dec ja (bad) cwtl jp mov data16 nop (bad) mov leave cmp adc out sub xor add cmp push mov sub stos push lret in add (bad) (bad) ljmp mov sti mov outsl fstl into out pop add arpl xorl mov (bad) (bad) pushl inc lcall xor adc arpl adc arpl (bad) (bad) ljmp into into xchg lods lods mov push cs movsl or xchg fdivs and icebp xchg (bad) (bad) (bad) incl arpl push and push push jp jne shr xchg sbb (bad) dec mov in mov (bad) (bad) (bad) call in arpl ljmp outsl stos mov xchg jo repnz dec xchg sub or push addr16 decl and out cwtl in mov mov jo fdivs sti (bad) decl push int (bad) sub mov jnp cmp scas rol lret loopne jbe pusha sub addr16 shrl pop and (bad) jg inc jne and jmp inc pop sub or cwtl scas jp adc repnz (bad) (bad) inc sbb mov outsl push ror xor lret sub add mov push jg (bad) (bad) decl scas sar or push push je lret and cmpsb pop add and inc cmc (bad) decl (bad) lcall lods mov lds scas out cli xchg cwtl or std (bad) call mov ds pop out jl mov jp cwtl jns iret scas je push cwtl (bad) jg (bad) sti xchg mov cmpsl mov mov mov fdivs xchg sub lods dec (bad) (bad) (bad) scas pop aaa push fidivl movd lahf push or aaa add jo ss (bad) into ficomp jp mov enter sbb xchg fiadd test pop dec or fwait pop add (bad) (bad) (bad) jmp inc mov adc push pusha pop dec les mov ds aas lahf outsl (bad) (bad) call lahf dec ret cmpsl divl enter rolb loop xor (bad) mov ljmp add xor xor push jmp (bad) cmpsb cmp mov add test pop dec ret pusha (bad) (bad) (bad) (bad) cmp adc adc mov dec add insb mov push or cmp mov int3 dec imull outsb mul jns jg sub std adc decb jne mov jecxz loopne outsl (bad) (bad) jmp js dec popf ret adc xchg and (bad) jmp scas adc mov outsb je inc dec push es inc movsb lcall mov (bad) fstp mov jge lods adc (bad) cmp add scas cmc icebp push lock fcmovb xchg mov sar sti in gs frstor movsl (bad) xor scas (bad) (bad) incl into sbb ss push jp mov andb xchg cmpsb mov (bad) (bad) pushl daa loop add test push fsubrs pusha jne mov ret or pushl fnstenv push pop pop adc xor test pop fmuls clc fdivs dec jnp or nop rcll cltd mov add lock decl push inc mov add dec and lret sbb (bad) fisttpl push jge clc movsb xchg (bad) cli xchg jb add shlb inc xchg clc int aas sti pop xor fbld xor or or push sbb sbb and ret jle adc sub xor das clc (bad) incl pop (bad) pop mov pop arpl arpl mov (bad) (bad) out clc mov das pop dec rcll adc loopne ljmp inc out (bad) (bad) (bad) decl jb enter pop dec cmc std (bad) sub lods sbb dec fmuls and (bad) (bad) pushl loope sti add into dec cwtl mov or mov (bad) mov pushl hlt repz cltd sub pop sbb mov (bad) out sbb inc stos incl or adc outsb iret cltd mov addr16 mov loop sub adc (bad) (bad) (bad) pushl pop dec leave lahf jbe test sub xchg (bad) out clc sbb xchg (bad) mov or adc jo jbe (bad) outsb ss add scas inc mov ds jo push sub rclb xor das push ret adc lods testl mov add xor jge inc fild fcoml inc cs clc cmp jbe pushl mov cmp imul push and movsb mov jae mov (bad) (bad) incl cmp icebp adc (bad) cld mov xchg aad mov pop jmp (bad) cmp (bad) (bad) (bad) decl sbb insl jp out jmp outsb inc mov xor mov xchg movsb scas fidivl std (bad) decl pop cmpsb jmp sub add adcl lods dec addr16 jg jmp ret addr16 fcoml in sub (bad) jp out (bad) std popf lods cmpsb jg (bad) incl leave sub add cmp push sbb fisttp stos (bad) (bad) push incl push jae cli inc jnp jl aas je sbb push popf lret or incl (bad) fidivr mov lods xchg jae (bad) fcmovne mov das add (bad) popf sbb (bad) incl and or sub push pop int aaa lock int push xor (bad) (bad) (bad) cmp xchg jns mov clc out fs sub cwtl add (bad) pop mov inc push stos xchg je aad in cmp into iret add popa in (bad) lret adc dec leave adc push loop lcall inc mov mov pop lcall mov mov pop xorb fidivl push hlt xor sar sub sarl or scas (bad) out pop out inc ljmp addr16 push fisubrl test popa pop js popf mov inc cmpsl rcrl (bad) (bad) (bad) push mov or mov adc cmp dec adc push push jo test mov rolb sahf mov (bad) (bad) inc adc into loop lcall inc sub mov cmp sbb nop (bad) xchg (bad) (bad) (bad) decl jecxz or test notl jae lcall lahf cmp mov cwtl aaa dec in (bad) (bad) decl lret lcall dec addr16 das and iret sub shrl in outsb xor (bad) incl outsl pop mov enter push ret test sub mov (bad) (bad) jmp push jg xor cld pop out mov movsb aad push mov or mov pushl or pop in repnz push jne push scas pushf dec mov add andl xlat call mov in xbegin (bad) cwtl mov add (bad) jmp xchg out inc fisttpll mov nop icebp lock pop mov loopne mov (bad) (bad) jg xor stos pop sbb or jle jne ss fcom push aaa aaa mov (bad) (bad) jmp mov fsubs (bad) bound aas xchg mov dec pop or jbe mov (bad) (bad) (bad) inc xlat test xor fwait stc adc dec pop pop mov cwtl shlb aad mov call xor push and call js in sbb cmpsl push mov dec icebp shl cli (bad) (bad) call lret cmp mov push test mov imul and ret push adc cmp (bad) loopne or cmp (bad) (bad) (bad) decl and jp xlat shr sub push sbb mov xchg sbb sbbl (bad) pop (bad) (bad) (bad) lcall sub sbb mov cmpsl sbb mov (bad) sti mov cmp sti (bad) (bad) (bad) lcall lock (bad) mov add xchg mov js dec lret cli bound iret mov ljmp lock xchg mov inc and sarl jl jmp lea les (bad) (bad) (bad) jmp push icebp (bad) (bad) (bad) cmpsb sbb es lock lret ret (bad) (bad) (bad) incl mov jge inc fchs ret bound jp fcompl clc nop outsl insb (bad) (bad) (bad) (bad) jp adc out push shll roll add mov idivl insl dec ljmp (bad) pushl push (bad) fdivr add sbb fs pushf fldlg2 das mov rcrl dec into xor (bad) in stos dec xlat jmp shr loope and mov popf cmp ds mov pop xor daa fnop sub pop outsb mov mov lcall test leave inc add data16 cmp sahf mov push pop cmp jg (bad) mov sbb loope fdivrl mov and sbb (bad) aam add stc cmpb (bad) jg add cmp xor sarb mov imul in ljmp (bad) out and pop fincstp ficoml cmp cmpsl shl test ljmp inc fidivr pushf rorl in adc scas xchg addr16 dec test sar cmp lds icebp cmp xchg mov lods cmp mov jmp jo (bad) bound js fildl push fdiv inc enter pop aas push push ljmp (bad) (bad) call (bad) lods push loop int push pop push cmc mov cmp pop (bad) xlat (bad) decl (bad) je pusha outsb jno adc push dec adc pushf outsb stos cwtl pop das jns cmp dec hlt (bad) (bad) (bad) ds or add out xor enter sbb sub inc (bad) (bad) lcall std jbe loop mull daa adc mov popf jmp push repnz xor call mov enter (bad) stos aaa pop sub push (bad) es fs cmp mov (bad) (bad) jg or mov ss cwtl mov mov sub mov sub mov pushl jp xchg je and add mov xor or push lds lret gs pusha cmc mov or xor std adcl jge adc je push and nop and clc scas xchg testb dec addr16 sahf ds dec sub repz (bad) (bad) pushl fadd sbb pop jnp and fcomps adc (bad) (bad) (bad) call test or (bad) xchg push (bad) lock cwtl mov movb movsb into pop out test (bad) cwtl xchg in lods or and pop sbb lcall (bad) lcall and fmuls ss ret loopne xchg xchg pop or adc (bad) (bad) ljmp dec stc cmp in fwait mov ss sub sub (bad) ljmp aas dec cmp pop pushf rcll fstps xchg cmc fnop or xor lock pop mov inc add dec xor or push ret (bad) (bad) (bad) (bad) cmp pushf inc mov lahf jnp (bad) je (bad) and add dec mov cmp pop (bad) (bad) (bad) inc jmp outsb mov sub clc (bad) cmp popa in movsl mov dec (bad) (bad) (bad) jmp jnp push mov imul inc push pop ret push xlat aad sti pop rcrb (bad) (bad) (bad) jge xlat rcl fsubrs ds inc push insl out pop pushf sbb lods mov ret cmp push (bad) (bad) pushl cmp repz lcall jns stos out les jae popa les cmp xchg (bad) mov push lea pusha outsl jg mov push out fsubl mov stc decb jle or inc dec dec subb test (bad) (bad) (bad) incl sub mov add ljmp out aas shr push bnd and (bad) push or adc sarb imul les push adc rol pop outsl xlat in mov pop xchg push in je lret fidivr (bad) (bad) jecxz (bad) (bad) (bad) (bad) jg ret aad push fwait js or es push rorl stos jp (bad) jnp aam dec push xlat (bad) (bad) ljmp push dec mov adc lret inc push mov (bad) (bad) (bad) jg push jl lret mov fldt shll and daa mov xor sub (bad) inc sahf jb loopne std adc pop or fwait or mov push fnop jae cmp mov mov (bad) (bad) cmp adc addr16 lods into xchg aas mov cmp insb mov ss les (bad) incl into outsb add adcl mov mov (bad) (bad) pushl push sbb pusha mov pop and push add enter mov lcall call mov movsl scas rcrb addb (bad) xor arpl sub pop popa mov mov mov rolb inc fmull mov jecxz mov das faddl iret test (bad) (bad) push sub in xchg push jnp (bad) hlt pop sub add fsubr movsb mov insb (bad) (bad) (bad) incl pop sub xor rolb xchg ja daa cltd jns scas nop mov das push (bad) (bad) (bad) jmp jl mov gs and repz jae and into mov stc stc mov add (bad) (bad) in (bad) in and ljmp mov fcompl cmpsl fstpt dec loopne cmpsl xor (bad) (bad) (bad) ljmp std insb iret add bound mov dec stos add xor xor mov pushf cmpsb (bad) (bad) (bad) jmp mov jl pop mov mov insb sub hlt jnp mov lcall ljmp xchg sbb cld fidivr xchg add es mov (bad) (bad) jg (bad) push xor jg adcl pop and sbb (bad) (bad) (bad) (bad) mov dec popf pop out das out in nop mov mov push test and xor lcall (bad) jmp (bad) cmpsb repnz movsl pushf inc mov cmp inc sub (bad) push xchg sub pop lods leave (bad) (bad) (bad) decl inc fsts imul dec pushf xchg mov push faddl movsl (bad) (bad) (bad) call mov mov mov mov pop sbb (bad) jae imul (bad) jmp out movsb in cs push ret in jno icebp mov outsl sbb in lock out (bad) (bad) (bad) cmp (bad) push jmp in mov cmc aad pop lock jp int push popf ss cmpsb xchg cmp jp jne mov inc mov insl and out mov dec cli xchg jg xchg cmc stos loop and (bad) loope sub imul out ljmp mov sbb ss das cmp das (bad) into jg add jbe mov mov dec leave outsb sbb lcall jne insl jne push cmp adc push xchg test insb aam shrb sbb pop (bad) (bad) (bad) (bad) in scas inc xor ret mov icebp mov insl xchg ret inc fsubrp xchg jne imul push mov lcall incb lret data16 add lret inc cld mov cmc xor dec xlat dec in iret loopne pop cld jmp cmp mov push and jecxz call lcall add mov mov cmp std (bad) jmp pop xchg push xchg push call mov (bad) aam fs xchg insl std pop add incl and je or mov (bad) (bad) jmp stos aam xor mov xchg enter inc add mov fsubrl sbb dec push movsb outsl popf sbb pop jmp (bad) inc outsb push cmpsl and (bad) (bad) push cmp aas bound aam pushf inc add rcl fcmovbe popf adc push (bad) pushl cmp aam xchg adc into out push pop push mov push movsb ret incl clc lahf add daa loope sub iret ret cmp sbb cmpsl movsb pop aad lcall cli push mov cmpsb mov dec sti jns sub (bad) (bad) (bad) jg roll (bad) cmp fs lock stos imul (bad) aaa mov enter aas mov sub sub outsl dec sub (bad) jmp stos push cmpsl subl xchg popf push pop scas (bad) (bad) dec aam ret dec cmpl call dec fcoms daa fldenv pop mov and sti (bad) decl ss cmp lret lds xchg sarl cmp sbb jp outsl sub mov sbb sub iret ds xchg xor popa jecxz (bad) jle (bad) (bad) (bad) decl inc outsb in cli adc jb inc and mov es mov das bound push (bad) decl repnz lea arpl sbb (bad) (bad) mov and mov sbb js cmp nop outsl xor adc inc jle dec mov enter ljmp mov sbbl or sti push cmp cmp scas mov (bad) (bad) ljmp cmpsl inc out dec pcmpgtd inc iret cmp mov (bad) adc ret sbb (bad) (bad) pushl insl adc fdivrl jae imul es jns sbb (bad) (bad) decl xor pop iret repnz or das rolb stos add mov ds (bad) (bad) (bad) (bad) js inc add cld mov mov daa into sbb insl pushf sbb (bad) sbb sbb (bad) (bad) push enter pop pop or or cld test sub dec test push pusha sub jnp out cld inc das cli (bad) ljmp jmp fiadd xchg jmp pusha cmp (bad) (bad) (bad) jmp cwtl push push and outsl lock dec dec push mov inc fisttp lret jns sahf cmp hlt hlt and imul in cli test movsl shrl push loopne mov clc cs call ja (bad) (bad) (bad) decl sbb ds daa push ret std pop fimul dec mov fdivl sar (bad) (bad) call jbe sti sbb add ja fnstcw add jmp jne es imul cmp pop xlat (bad) (bad) call cli mov adc arpl xlat gs jb scas mov xchg add lcall sbb ficoml icebp je ja mov (bad) adc jae (bad) jg ss test rcrl lret or mov addr16 rorl jne inc sub (bad) (bad) mov rcl sti cmpsl je je pop cmpsb (bad) aas cs jae fucomp mov sbb pushl mov mov cmp pop repz in sti test sbb lcall mov call sbb jge insl mov xchg xchg cmp pop fcoml cmp (bad) (bad) lcall xor (bad) adc push cmp imul hlt inc shl and and dec mov scas dec ljmp (bad) ds ss and out sbb (bad) and aaa xor stos out sbb nop arpl (bad) clc daa loopne in es xchg cmpsl les sub ja (bad) xchg lock (bad) (bad) (bad) ljmp push ljmp ss scas or mov je sbb popf dec bound (bad) (bad) call jmp pop cmp into (bad) clc lret movsl jae mov pop lahf jo shrb rorl jg push pop jmp xchg loopne imul insb fs data16 mov jmp (bad) call negb arpl mov cmpsl sarb or inc outsl out mov cld xor push sbb repnz ja adc xchg push dec mov (bad) (bad) (bad) incl dec adc cmp rcl mov test aad mov (bad) call or sbb xchg adc xchg push ret jo mov cmp aad scas jbe pop test mov (bad) clc pop pop or push cmpsl cltd mov push arpl xlat pop in push test sbb js (bad) (bad) (bad) ljmp mov pop into in xor push jo repz push jle fisub xchg push (bad) (bad) (bad) (bad) out incb jecxz,pt cmp in test (bad) bound xor xor push pop adc push iret adc and das out push and nop jno movsl ret lret flds lcall lahf rorb into pop (bad) std idiv (bad) nop shrb pop daa sub adc scas fdivrp (bad) (bad) pushl mov jae mov js imul xchg rcr jae stc shlb movsl test fldl lea adc lock sbb lea pop ss fldenv xor inc pop pop dec mov ror clc inc mov jp push fs (bad) (bad) (bad) fldcw loop fdivrs push rcll xchg gs push popa jo jne dec int3 jb (bad) ljmp loop sub push pusha push mov xlat cmp add decl ss jp sarb sbb sub insl (bad) lock scas lock mov and push jno xchg insb add (bad) (bad) test rol hlt out jl (bad) and fldenv decl std scas ret (bad) icebp mov (bad) push popf jo ficomp mull mov mov add (bad) lcall test cld arpl adc fs adc mov push arpl pop daa mov ljmp ret adc aad xchg mov repz mov adc (bad) (bad) ljmp lea dec xchg fwait int3 (bad) hlt loope push out outsl and inc dec mov dec stc and nop pop (bad) (bad) lcall pop inc ret loop inc or je push xor shrl inc fisubl sbb add dec sub test rorl std (bad) jmp sub mov pusha in lods push xchg sub xor mov or dec hlt (bad) (bad) (bad) out mov push jg xchg xor stos into dec add aad sub push inc test adc cli (bad) (bad) decl sbbl sarl lea sbb cmpsb or cmp xchg (bad) (bad) out ret or inc add sub cmpsb adc push ss call movsb xchg mov lcall std clc inc xchg scas adcl fwait test fildl (bad) fldlg2 mov ljmp test mov mov mov jno out aaa cld (bad) fisttpl cwtl push or mov add ljmp (bad) (bad) (bad) jg (bad) fs dec pop mov (bad) loope add push cs out bound test sahf mov (bad) ljmp (bad) hlt int push pusha pop cs dec adcl (bad) pop push ljmp (bad) (bad) (bad) sti sbb xchg gs fsubr mov rcrl jo add push (bad) jno sbbl loope loope (bad) jg lcall insl ljmp mov out xor xchg js xor std (bad) lcall enter or mov mov mov pop std push rol insl xor subb idiv jmp inc fcoml imul (bad) xorl in inc xor imull sub (bad) nop push (bad) jl test dec cmp ljmp push hlt lret jg repnz push inc nop ret cmpsb enter (bad) (bad) (bad) incl outsl lcall mov add (bad) in movsb out (bad) icebp dec insb pop xchg fisub sarb (bad) (bad) (bad) dec bound in out mov fwait clc pop leave mov jno sbb (bad) (bad) decl nop cs data16 fadd lret test orl (bad) sub movsl xchg sbb in in enter (bad) (bad) (bad) jge mov pop cli imul outsb jecxz rcll ja test mov call cld call mov inc push adc jmp inc clc xor dec mov loope (bad) call inc jno aaa (bad) mov es jge,pn les jl arpl popa jae cmc (bad) (bad) mov sub (bad) iret shrl jmp pushf add iret pop xchg jo (bad) (bad) lcall inc xor mov aaa add jcxz fsubr addb (bad) in (bad) ljmp iret scas cmpsl and imul push cwtl inc icebp lods add ss lods xchg jae (bad) (bad) dec insl sub adc sub loope push in cmp enter xchg pop (bad) repnz (bad) (bad) call js add jo xor repnz stos and data16 dec ret hlt (bad) (bad) jmp xchg sbbb push push cmp push nop inc int3 mov (bad) xor or (bad) lcall pop mov jmp test lods insb jp mov out jmp jg ljmp add inc adc mov push outsl adc sub clc (bad) (bad) incl es dec inc or cltd sub jo push movsb in rcll xor inc and xor push std scas fcoml sub and adcb mov (bad) (bad) (bad) decl data16 pop sbbl and bound push mov outsb movsb icebp (bad) (bad) (bad) pushl push lcall repz push imul lods add mov call pop (bad) adc cmp enter mov cld outsb adc and (bad) jno add stos insl jno popf cmp cmp pusha mov nop cmpsl lea push fnop (bad) fcmovnbe leave dec in outsb in and pop inc mov mov (bad) decl xor pop fistp pop imul rolb mov inc ror adc mov push adc clc adc sub jmp cmp (bad) (bad) call in xchg (bad) jg rcrl aam cwtl pop mov fs xchg shll push adc (bad) call test mov push je cltd in inc dec rcrb aaa sti push and gs cli ljmp cli jmp push or sbb ficomp in push lahf dec (bad) (bad) (bad) jmp jg sbb enter test and pop adc sti mov pusha ss cmp sbb cli es add push xchg pop out adc sbb or outsb pop dec std (bad) (bad) lcall dec mov push addr16 aas rcl pop mov je clc rorl repnz mov (bad) pushl mov loop subl mov mov adc xlat (bad) (bad) (bad) (bad) jp idivl jl sub dec iret mov scas loop loop adc popf into and cmp in incl int xchg notl loop mov sar (bad) (bad) (bad) cmp (bad) jmp cmp inc icebp sbb fwait pop fildll dec pop dec mov (bad) (bad) pushl fstcw stc push add jl mov fwait jno mov and jb sub (bad) (bad) (bad) ficom mov or jmp add xor xchg mov add (bad) (bad) mov pusha mov decb cmpsb stos push xchg push push sbb push pop inc inc (bad) (bad) (bad) pushl into aaa push idiv nop cmp in (bad) push lret pop ret pop inc iret imul call rclb psrld lret aad and xchg pop inc icebp mov data16 push push sar (bad) ljmp mov mov movsl enter push in adc repnz clc fwait sub mov (bad) (bad) (bad) decl aas int3 push mov lds sti dec repz out or fimull (bad) lcall mov xor in mov inc sarl clc shrl jle jae (bad) (bad) inc mov sbb orb es roll adc fcmovne dec loop mov cmp (bad) (bad) (bad) jnp test into adc xchg sbb hlt xor out xchg mov xchg mov pop gs and dec adc lea fmul add mov (bad) (bad) decl sbb clc out arpl pop cmp sub bound xor fisubr xlat es outsb xor (bad) pushl sub in (bad) mov mov xchg mov fcoml sbb (bad) (bad) fisubr popa jne les mov lods imul (bad) in cmp jns xchg jo mov sar sub shll jl xchg in cmpsb idivb dec (bad) (bad) (bad) jmp jb jbe lea fwait cmp fidivr lods push pushf sbb aam das jae xchg cmp or test fcompl in inc inc mull inc cmpsb hlt push inc out add (bad) mov ret cmp rcrl jp pop fnstenv mov mov cmp pop shrb inc dec or fldenv add (bad) (bad) (bad) ds rorl cmp test out dec fdivrl inc addr16 mov mov xchg lods jg clc dec cwtl sbb cmp (bad) (bad) (bad) jg test (bad) mov loopne adc xor insl jmp lahf lods fmul movsb shrl loope and jae or jmp int3 test pop or adc or pushl sub int3 xlat int3 cwtl test mov push mov sbb fnstenv jg sbb daa imul mov (bad) in ja xchg pop and in (bad) (bad) (bad) decl ficom xchg out sti in jge (bad) into push pop cwtl jge mov sarb sar (bad) (bad) (bad) cmp fidiv loope dec addb aaa push ss xchg mov test or nop faddl leave adc pop xchg fs cmp enter nop outsl inc leave lods cmpsb int (bad) (bad) call lahf invd fbld jle xchg fstpl in imul (bad) cmp mov cli pop ljmp dec and mov mov data16 sbb xor (bad) jmp inc mov pop inc adc fs and fbld lods out (bad) (bad) jg sub or pop inc iret data16 into pop cld dec sahf aaa fsubp sahf ss pop sbb test (bad) (bad) (bad) call pusha add jle inc mov jecxz ret sbb dec mulb into mov std int rclb vmovsldup and mov pop mov lret test and or mov add shrl lock mov (bad) test or sahf xchg (bad) (bad) lcall into and mov inc (bad) lret scas cmp out xchg and push iret adc cmp sar (bad) (bad) ljmp push mov push adc or push gs lret mov movb movsb cli pop cmp in xchg push cmpsl push sub mov hlt adc enter rcll loop stos pusha test loopne (bad) pop add add cmc lahf sbb adc mov pop aam (bad) je push and pop (bad) (bad) mov ss jb jns or rcll movsb cmpsb (bad) (bad) (bad) (bad) fldl sbb and (bad) xor mov inc addr16 ja mov or nop add aaa mov pop sub fsubs push fwait mov sub and fxch mul cld jne jne (bad) (bad) (bad) fldln2 xchg xor outsl add or (bad) ljmp and insb jbe adc mov jp (bad) jle pushf popa lret cmp xchg and lret mov addr16 lods addr16 add pop daa pop aam add outsl (bad) (bad) jmp add xchg call in adc popl pmaxsw pusha mov pop aad (bad) jg (bad) cmp insb rolb push in movsl adc fild xor repz mov ljmp cmp push or sbb imul (bad) mov mov (bad) (bad) (bad) out jge pusha imul imul cmpl inc cli scas pop sub (bad) (bad) inc cmpsb or repz (bad) hlt out fist jecxz test jp out in sbb iret iret mov ficom fldt bnd mov mov cld ds or pusha cmpsb adc outsl (bad) pushl jno jmp arpl rorl pop mov cmp cmp mov adc (bad) incl push or cld in dec jns fsubs aad sbb (bad) call xchg iret xchg aas aad mov loop jmp ss test fisubr mov lahf cmp repnz movsb xor push xchg out ja es loopne dec jo (bad) (bad) (bad) pushl cmp les mov or in push (bad) mov popa imul mov clc (bad) (bad) ljmp test pop iret cmp aaa fwait sub test adc xor mov push inc add jp mov call (bad) jno (bad) aaa sbb fisubrl jmp aad sub rorb pop out fs jae adc xchg jle fstpl sbb push (bad) sbb (bad) (bad) pushl pop push gs push movsl pop movsb cmp rep xor and popa pop pop xchg pop sbb (bad) ljmp mov or inc clc pushf lea les cmp mov jecxz add in push cmp les add fistl std jg add pusha leave and jae das movsb xor dec ljmp out mov in dec cmp daa stc dec fisttp xchg movsb add jmp idivb pushl ljmp xchg fsubrs sbb fldl dec insb fstps mov (bad) jne mov (bad) (bad) out (bad) mov lret mov and lcall outsl adc imull mov (bad) jmp test lcall lods (bad) outsb scas lock and fstpl jecxz or mov pop inc or mov (bad) (bad) jmp xchg (bad) jne push mov popa pop decl stos pop outsl (bad) (bad) jg loope (bad) repnz jp fistpll enter (bad) and je xchg xor (bad) decl or add fwait popf int dec add or sbb (bad) (bad) (bad) fcomp jae or loop pop inc lcall mov jmp rol cmpb push daa stos mov sbb cmp sahf jo fs cmp ja movsl (bad) lods dec adc dec mov lock ljmp jbe and negl je and add std jg icebp xor ds outsb push mov mov jnp (bad) fcomip push lret xor mov test cmpsb in dec mov (bad) incl imul imul mov or les lcall rcrl jp insl mov sahf and mov mov ds (bad) (bad) (bad) (bad) fdivrl adc repnz cmpsl rcl adc icebp sub mov jl add jmp enter dec nop (bad) imul loopne imul push into mov pop sarl dec xlat push mov outsl mov pop into jecxz jg ljmp cli (bad) sti ret and or add lods test dec fidivrl (bad) (bad) push add or fstps fcompl mov addr16 mov (bad) push jbe ror call sub (bad) (bad) (bad) call insl imul fsubr ret pop xchg or dec mov inc cli inc mov jne xchg (bad) (bad) incl pop aaa mov lret jmp les push adc out lahf (bad) (bad) (bad) lcall popa loop cmp inc test rcrb push lcall loop pusha mov adc stos mov stos jg in repz push and out push pop xor cs (bad) (bad) (bad) jmp inc sub push mov packuswb or subl repnz adc jno (bad) (bad) incl fiaddl stc cwtl sbb cltd mov outsl std mov mov data16 hlt mov (bad) mov loope stos ret (bad) push and cld jmp jns hlt jno clc jne cwtl (bad) (bad) (bad) ljmp cmp or pop loop movsl xchg (bad) rclb xchg mov fnstenv xchg (bad) (bad) (bad) decl leave lret push lods cs (bad) mov or fimul ljmp mov pushl mov je cmp in outsl mov sub enter in (bad) call (bad) mov add adc pushf jg sub push mov inc ret xlat sti out inc inc adc cmp add mov lcall mov adc jbe stos push xchg out (bad) call imull addr16 outsb bound jmp (bad) pushl insl int3 mov mov xchg sti xor je pusha hlt popf adc pop mov (bad) call punpckldq mov insl repnz xlat rcrb decl es test xchg or sub repz xor (bad) (bad) (bad) push iret inc pop xchg ret cltd dec mov (bad) or loop push sbb xchg xor in pop cmpb cli (bad) decl jle pop xchg vphaddubq xor pushf xor insb rcl insb out adc aaa and xchg push cwtl ret push std (bad) incl ret dec notl movsb mov jmp dec push jae push rep sbb dec (bad) or (bad) (bad) (bad) (bad) jle cs sub fcmovne ret mov das mov bound loopne jnp (bad) (bad) pushl les lea test rcrl cmc jb adc (bad) (bad) (bad) (bad) (bad) jne jbe aas (bad) faddp scas std push aam jbe sbb shrb jge out bound (bad) pushl pushf scas jmp lret xor and pop sbb iret loopne jl pop call incl in cwtl into sub popf jb aas push test aaa loope (bad) (bad) (bad) ljmp pusha sub jnp lret lds cmpb or push mov (bad) (bad) decl (bad) mov pop cld push shlb (bad) xor fsts lret mov fdivrl ljmp push pop inc (bad) xchg adc dec std push push mov loopne (bad) loopne add pop mov imul ljmp icebp mov xlat mov lods mov push jns or insl insb mov (bad) (bad) ljmp lods movsb and lahf inc sub jge out push pushf push ret icebp mov (bad) lahf dec pusha ja daa pop std (bad) (bad) decl stos push (bad) (bad) das in imul xlat sbb xor adc (bad) add in (bad) mov xlat and sbb lcall push push inc mov add (bad) (bad) (bad) decl je or (bad) lret das adc cmp clc and dec pop fistpll xor arpl (bad) (bad) lcall cmpsl jns pop xor adc inc das insl ret push xlat push push or jns rol imul (bad) (bad) (bad) (bad) call jne clc lods jecxz or mov fstpt ffree pushf call call (bad) out cld jg in mov (bad) jmp push outsb call shl stos jp mov xchg mov (bad) (bad) call sahf (bad) cmpsb jmp jb icebp stos std test xor mov mov mov cmpsb (bad) mov popa and (bad) (bad) call fmulp fnstsw jg aaa (bad) scas mov std lahf fmul xchg pop cmp ja (bad) mov imulb adc outsl mov out jecxz (bad) fadds (bad) (bad) incl cmpl xor and repz push mov jo push cmp (bad) (bad) (bad) js ss jno fisttp les mov std sub iret sub gs repz mov xchg out lahf pop (bad) pop les push fstpt mov adc mov cmp (bad) (bad) (bad) aas (bad) jne fnstenv mov jge jbe setle sbb jecxz jge,pn and pop repnz (bad) cmp mov fwait mov or mov xchg movb xchg jbe popf in (bad) (bad) (bad) mov lea mov call xor lahf mov sub repnz jg insl jl cld (bad) (bad) mov pop dec pusha xor out pop jle cmp push fwait or mov insb ret xor cmc (bad) (bad) (bad) incl in fsts lds pushf jo push xor test int3 lret push inc insb sbb jge (bad) mov cmp dec idivb or (bad) xchg mov decl cmp cltd pusha imul stos pop (bad) repnz xor (bad) cli or sbb pop jmp push (bad) (bad) (bad) incl sbb out inc std cltd daa (bad) ja (bad) (bad) sbb call das jnp sbb (bad) lcall (bad) inc int mov pop cmp cmp sbb popa jmp les (bad) mov dec mov pop inc jecxz fstl (bad) fistpll call add mov jmp or or or or add add push mov push push push push mov cmp push mov pop jl push pop xor div sbb (bad) (bad) in incl imul add movzbl and ss mov shl or mov shr nop out call and mov mov sbb in jbe push and and mov add dec cld outsl (bad) in pushl test jne movb jmp mov dec movb push add idivb jbe or mov shr rorl jmp cmp andl add add in call or pop leave ret cmpl mov jle mov int aas lods mov test jl mov movsbl and xchg adc in adc sarb shrb lahf jecxz mov mov inc inc aas daa push fstpt inc or or mov inc jmp negb in mov and push push jae push call in (bad) or or je push pushl mov mov sti (bad) sti idiv push add push cmp pop ja cmp and js mov call jl push or aam and in pop mov negl or mov (bad) js mov sbb push test (bad) jne call lock pop gs push js imul insb lods lods jmp xor std jbe xor mov push push fcmovnu in dec movsb mov cld sub test cld lods sbb push jle adc push push scas push sbb jle cmpb pop es data16 and cmp (bad) dec (bad) and cmpl and sbb je cld lds cwtl clc add inc scas pop or or into ret dec add in mov fucomi push cld sti push call ret mov or test push push fistl int3 icebp xor call (bad) fmulp decb sbb inc inc push cs dec add in and jmp aaa push scas pop fsts bnd push fildl ss jmp sub mov cmova push cli pop leave ret mov dec add push or pop je or mov (bad) or cmpl jbe adc or push inc adc rorl mov mov pop jo hlt add sub pop xchg or mulb push inc mov in push mov and xor imul lahf cmp or xor cmp je cmp jbe aad clc stos dec or xor and or xor xchg cmp jb fs lods inc pop dec repnz jp fcomps clc mov data16 in (bad) lods pusha movl mov inc and mov push mov mov lcall or pushl inc stos xor dec gs hlt repnz lods mov pop or and cmpsl sbb push js test div out mov cmp jae fildl imul loopne mov pushl dec call imul lahf addb xchg and jle (bad) negb (bad) dec sub lea pop sub mov pop push decl repz mov add push jecxz sub sti arpl inc cwtl adc dec push jecxz,pt sti notb mov jl push mov mov adc (bad) out add or mov jp nop and (bad) lods loope cmp mov call (bad) mov mov add add mov (bad) sub and and mov cmp lea push inc add loopne pushl xchg add cld je incl jmp (bad) pop and fwait arpl icebp incl or xchg fcomip push push jl and mov xchg sqrtps ret les in xchg leave mov mov dec push push sarl ret out push enter and sbb xchg ja (bad) mov push xor mov and adc and and jo or dec in repnz inc push je cmpl inc sar lcall and jp out add mov je fs mov inc or adc lock and sarl jp sbb push jg stos mov gs add pop add je lcall add es aaa sub add test (bad) sti aaa lds imul push cmp xchg sbb adc push pop xor sub adc inc xor xchg movsb shlb or cmp pop xor add std movb push mov and fidivr rolb or imul jne push add pop cld stos adc or fimul push (bad) sbb test and sub cmp test aas mov mov or je push xchg jns out imul movb push outsb lret mov push mov cmp dec int cmp push push adc add sub shl popa sub fidivrl xchg adc lods clc test adc insb sahf sbb fisubl loopne adc xor push xor in push aas ds push push mov mov push test or or jne sub lock mov push cld push cmp fs inc bound or xchg push cmpsl lods jo push or or dec mov fidivl out enter sbb cmpsb je inc sub pop sbb push xchg inc xlat add xchg push and mov mov pusha dec rolb xor andl jle lahf sub mov mov andl add jge popf jmp push rorl call add repnz jns mov outsl push cmp stos jne push adc xor adc scas mov jno sub inc xor jle mov outsb mov jl arpl leave inc jbe sbb and and add inc pop pop (bad) add arpl test push scas mov cmp sub (bad) sbb cmp pop lds add mov xor and jae aam rorl cmp pop fstl push adc imul mov jmp add xchg adc jae decl or les jge cmp lret dec mov sub mov mov xchg add shll mov cmpl or sbb inc stos mov shlb test lods and in cld inc xchg mov je jns out adc test xchg daa and popa mov (bad) add dec pop pop cmp orb adc incl inc jne adc add or jne mov push cli cmp xor add add incb lea push push into cli lods (bad) out scas mov orps adc lods ss outsl push cld push pop insl add sbb cmp inc and das inc rorb or (bad) out addr16 push das dec mov xor dec adc ss notb cld std lea push push fldl pop or std add and inc lds addl mov fwait pushf fdivr les jbe rolb inc xchg inc or sbb mov je outsl jle sbb mov push xor or (bad) sbb xor cwtl mov nop data16 sub jae or jne inc cmp jl lods inc xor fsubp mov push sbb jno call pop adc jne lock cmp xor add dec mov hlt jge (bad) sub push decl and or adc cmp je clc neg sbb inc cmp jl test scas or mov lock lock push movsl lods das ds adc mov mov cltd or in sub cmp dec push mov lock rcrl and clc movsb dec adc dec sub mov lds or xor xor mov out adc cmp lea mov dec cmp mov sub push (bad) mov mov xor pop mov add dec cmp shr push xor dec pop jle mov fistp nop mov ds add lea cmp push cld or (bad) lea fstp inc jge or pop decl das jmp fdivp lret push test jl (bad) pushl and in jg orb inc cmp int3 loope fiaddl jne hlt and sub mov mov fstpt pop mov addb jnp push add mov mov push xor sub ret or pop stc and scas cmp inc adc sbb js adc lret adc and dec ja je in test or bound jne jbe or jo adc testl aas inc sub bound push addl cwtl mov mov cld mov xor fidiv pusha xor pop xor pop cltd test sbb sub add dec fistl mulb add xchg pop mov xor inc sbb mov xor enter pop jo cmc jne iret bound (bad) fbld (bad) movsl lock push fidivr add cld icebp int3 add mov rcrl div xchg mov lahf mov rolb xchg push mov daa mov fldl pop pushl add lcall adc addr16 shl dec in jne fcmove clc mov xor scas mov cmpsl add cmp clc imul jne sbb loope (bad) mov xor clc add pushl mov jbe sbb pop lahf push pop push int arpl and push ja jecxz shrl sbb or pusha aam and scas mov mov dec call sbb mov icebp cmp push lahf ficomp outsb test push ret pop lock mov movl mull (bad) stc jne sub pushaw cmp (bad) xor loopne insl or hlt icebp sbb ss loopne add jmp add inc or icebp andl inc lea or inc add jge stos daa xor sbb enter add pop imul insb inc call test mov pop jmp pop jbe shlb fmull stos mov bound cmp or push mov mov add shrl jbe mov adc in cmpb push push xchg in cmp mov rclb (bad) idivl sub fdivrl and mov cmp push pop lret jmp mov dec lock ja or mov rorl sbb adc test pop loope movl test jg inc sbb sbb mov pop and jl lea ror lods fidivrl mov or rcrl or cltd pop mov and push imulb jbe cwtl push imul mov dec shl add mov add aas sub cld sub adc add push ficoml or mov xchg pushf idivl xchg push xor pop adc push mov push iret cmp cmp iret jo addl rorb xchg push add jmp sarb mov add mov sub dec jns xor arpl fucomp les mov mov sub mov repz cmp pop add fldt (bad) inc pusha mov and movsb inc enter fisttpll mov inc hlt mov mov mov jmp mov mov shr fbstp pop add int3 and mov push mov orb cli stos ljmp push fdiv and adc test loopne push jae dec and pop out sbb and loopne gs std or mov js mov mov mov push adc sbb adc xor add adc dec orb pop push push xor scas test push xchg cmp mov inc lock mov shrb push lret push out mov inc jle adc data16 or push or mov add inc xor mov dec call or pushf test sbb fisub rcl call scas push mov inc cld xlat movsl mov sbb ret mov jmp lea xchg cwtl hlt cmp pop (bad) (bad) or sbb sub jl jmp imul (bad) mov ja mov hlt and (bad) xor or (bad) mov inc cmp bnd dec imul lea (bad) rcll mov sbb xor push inc stos mov or loope pop and dec lea (bad) adc pop mov and push and add clc test dec or int3 push or jmp ds cmp and mov mov mov or call nop cmp mov mov dec push sbbl jns inc mov je sbb and les lock pop cmp and jnp and iret jno sbb inc cltd cld loopne movsl sub dec test push in adc fcmovnb and add std mov pop xor in test lods add xor int lahf adc shr mov mov adc add mov aad sub pop es shufps jnp dec push dec dec pusha imul mov icebp or mov sbb adc and inc add mov (bad) jo out push pop dec dec xchg add adc popa out jle mov xchg loopne xor sub sbb aaa push and or fwait (bad) popf pop stos fwait out sub inc xchg mov into inc cmpl lcall inc mov cmp xchg xor popa je and mov jle adc mov or clc cmp push sbb xor mov add mov xchg cmp or push push push cld nop pop clc test dec pop fimul jg or push jo add loopne push jmp mov add xchg in je push or and cmc inc mov shrl and std sbb or push sbb ret sbb rclb lea xchg sbb aaa jo sbb inc scas mov rorb fdiv sahf push sbbl sbb std adc test mov fdivr dec xchg clc insb jnp fbstp gs addr16 pop insl invd rorb mov (bad) jg mov xor imul outsb xchg incb add testl lea jo pop jg and xor adc aas fstpt or mov sbb pop (bad) sbb pop sub add jmp fstps or xorl push ja pop cwtl jecxz push xlat dec imul push mov test (bad) xchg (bad) fistpl (bad) loopne xchg xor mov cmp ss cmp jl push (bad) push or rcll pop xchg jns adc or testb orl adc cmpsl mov add adc mov sbb out push cmp pusha or into call push push outsl mov aaa mov mov mov push bound inc hlt xchg push pop or leave hlt lea loopne fisttp add scas rcll or (bad) jne gs pusha (bad) pop (bad) and fcomps out push adc (bad) out rorb cmp les pop clc sub mov or ljmp nop or add in dec add xchg sbb dec add sbb call hlt cmp cmp sub jne mov test jle cld out ljmp sahf pop movzbl inc jmp xor inc and dec xor dec repz leave inc cmp jle and cvtpi2ps inc adc mov imul mov inc cmp jl xor add add jge add cmp cs (bad) lock dec stos sbb clc pop insb mov loopne movb ds cmp scas or xlat je inc add cmp hlt add add adc (bad) dec adc pop xchg fiadd mov or cmpsb or inc add push xor xor jb mov clc and add iret lock (bad) lea jg lock mov pcmpeqb stc aas je or ret xchg add jne jb rorb inc mov sbb idiv into jle and inc adc inc dec pop pushl mov push jmp mov clc add inc imul ficom xchg (bad) clc ja push jle jle cmpb je inc subl decl jmp mov push inc ret inc out mov je or or leave insb cs mov js std outsl add je cmp jle test and icebp scas mov add cmp jae into imul std jbe add dec or sti jg addb (bad) mov mov mov cmp jne cmp jne adc jbe imul dec adc adc jbe or adc lds mov inc mov add (bad) jmp cmp push sub mov pop adc mov into and inc push cmpsb push ja xlat into je push imul cmpsb inc sub mov imul sbb es test and jbe add jle fdivrl xchg (bad) cmp and nop popa fnop xchg xor mov pushf inc push mov dec pop and xor pop jge mov adc or or inc cmp (bad) aaa les je add or or sbb sbb cmp sub ret test pop adcl mov adc jne or jne xor push mov pusha imul std test in sub add mov add dec cmpsl dec lret sub imul out sbb sub push mov ret sahf push sbb mov inc jne test sahf test shrb test popa push sbb push push sbb insl out xchg adc push (bad) punpckhbw jno fiaddl adc add je aam les inc sub fbstp inc sti arpl stos jmp push sbb adcl inc test mov cld cmp lahf jp or pop cli mov or incb (bad) stos sarl repz push in cmp push aaa pop std inc rolb mov push ret and push push es inc clc andl and or lock sbb insb jg rorb pop xor roll inc imul push push mov fs jl jo pop loopne sarl push or sbb inc add loopne orl adc (bad) push test outsl pop ds cmp xor sub insb fsts dec fs push test mov nop pop and sbb or xor sbb or sub cld pop pop jl dec out jge fnop add adc jo cmp cmpsl sub js lock or fiaddl cmpl mov xchg leave jle jnp cld (bad) ds add jo jne push cltd pop idiv xor xchg pop sub add inc dec or lea dec add fldenv mov pop mov aas push lock jl xor inc add sahf loope mov popa jl je fs mov sub imul sbb push sbb add clc nop adc sub hlt ucomiss inc pop leave orb pop adc jg add fcmovne lret xchg jo outsl adc push lds loope test sub pop jg,pn inc adc xchg adcl push leave inc stc (bad) insl adc add sub sub stc cmpl adcl jp cmpb iret sbb cmp inc add mov or cmc gs xchg xchg adc add xchg in pusha xor dec xchg push loopne faddl mov and clc or push popa mov mov push push push das or sub (bad) sub cwtl and movd pop hlt adc xor ja inc inc push pop dec ds lock pushl call pop add push out or pop mov jns push test push push mov cld out xchg lock ret push mov rolb js andl mov add or sub add pop or jle cmp jo pushl jno mov adc outsb jge enter mov arpl lock icebp jl sbb inc cmp sbb jo add push or ret xchg cmp cltd cmpl xchg stc adc repnz lcall in imull sahf mov lea in pop jecxz push dec pop pop movsb popa dec loopne xchg test push pop hlt test cmp pushl es inc cld jns xor es add fild (bad) loope sbb lcall jb cltd xlat test or fmuls scas nop pop leave or ret and dec or jb adc flds xor dec or clc xor adc sbb pop fnstcw sub hlt daa and inc fwait sahf stos sbb jne mov adc (bad) dec and or lea aas add sarl add cmp test mov and sti aaa jns orl je inc sbb pop dec xchg sahf adc mov je jle xor inc enter insw mov add test jl add dec xchg mov ret outsl insb inc jns sbb push mov push stos mov xchg (bad) jo popa shrb mov cmp daa call cmp lret add mov sub rol add fsubr int pop or (bad) negl rorb pusha pop rcrb cmp outsb or insb pushl mov ret dec je add dec sub or push dec sbb inc loopne pop lock hlt adc bound push push add push push add adc sub xchg xor sbb sbbl push subl aad push cmp and dec ret stc push jecxz call or ljmp jns cs or push jne aaa xor cmp jb push pushf or add push cmp add mov aaa add push int (bad) push loope fisub jne jb push adc clc lahf push cs js neg sbb and push mov sub rolb sbb or dec push push loopne nop jp mov xor or dec jmp xchg clc or add or inc pop fst push pushf xchg add mov adc mov negb push sti cmp jo mov jmp cmp clc les pushf push or pushl test aaa fmuls add pop (bad) add or pusha lret (bad) jge fdivrs rol in popa lahf or pop movsl inc push inc add cmp add pushf sti pop adc in les sti mov adc (bad) test mov ja pusha push adc ds sahf add pop aaa lods in jecxz cltd mov enter (bad) cmp orb push insb jo xor outsb mov dec add mov aad add (bad) clc mov push and mov mov shrl and add mov (bad) aad ret mov cmp test call mov loop sti or push or andw sub test xchg xchg push jecxz rorb mov fidiv and (bad) jae sub pop sbb cmp and scas or xchg mov inc sbb adc lea lock or popa dec lea (bad) mov sbb imulb or scas adc mov sub cmp cmp adc push adc pop ret add adc pop jmp adc pop or sub jmp mov dec add jbe test pop and fnsave adc arpl pop cmc cmp add mov sub lahf push pop adcl sub mov ret and lea inc push cld xchg mov mov xchg sbb jno push and lret inc sbb es mov and inc add or sti push scas push push std jae rolb xchg add xor and mov sbb adc jp out les adc mov dec pop dec ficompl js je sbb push loopne adc add scas xor inc addr16 xor add and mov sbb test push clc cltd mov test cmp loopne pop addb push push mov inc test or xor and add cltd jb (bad) or aas push pop imul inc sub adc sub cli loopne push push xor mov xor xchg mov call ljmp xchg jl adcb rorb jmp mov inc mov push jle pop stos cmp inc ja mov pop sub push lcall jnp adc call and pop clc push and incl mov roll (bad) dec pop mov cmp pushf call xor (bad) xor sbb mov lock imull mov pop lret xor inc (bad) push xchg into notb mov cmp rcrl popa push jae divb pop cmp jle imul add cmp add inc adc cmp add aaa lock jmp dec loope add clc push add cmp (bad) mov int or adc jg or sub add leave leave inc sub add push pop (bad) sti mov sub and push pop xor jmp sub xor in out push cmp adc push mov sbb aam xor int sub cld cmpsl push push and push push (bad) push dec adc cmp mov negb in push (bad) arpl incb call sbb nop xor add std sub and test sub loopne (bad) call stc or cld dec push adc roll push push sub cmpb jns and mov sahf mov je sub repz into std cmp add cmp cmp adc cmpl call push or mov push cmp in in mov pop add mov pusha adc mov fwait outsb mov add jmp sub dec sbb push mov cmp or mov ljmp add mov push mov adc (bad) lret repz sub cli mov imul sbb inc sbb adc inc adc decb adc std push or cmpl cmp mov add mov mov das pop cld cmp inc pop cmp cmpsl mov cmp mov je push mov jbe call jbe cld cltd cmp mov jnp lods mov sub cmp pop push inc loopne pop mov adc dec loopne push adc fs mov in or jl cld cmpsb jns test rolb pop rcl mov push push aad sub mov mov add loopne mov or add mov test add jo inc add add jnp sahf inc and clc add fisubl fist add jne xchg int3 inc adc js xor (bad) dec sub add add mov int3 pop push mov (bad) mov xor fcompl inc inc cmp inc movsl add xor mov adc xor sub fcoml or arpl xor (bad) jne cmp inc add mov pop fstpt jbe jb dec ljmp frstor dec jp xor mov xor sub pushl xor push daa inc xchg cmp push push insl sti adc add push rclb subb mov rcll inc mov push and lret add enter jle fiaddl les movl push adc jbe (bad) faddp je dec les sbb push adc enter sbb ja or xor and add mov loop jl pop (bad) mov mov mov mov ret push andl xchg jne mov adc inc sbb push hlt bound mov and mov lcall adc scas add inc js int3 or add sub cmp mov adc sbb and sub and jbe pop sub rolb push sub loopne cmp jne test repnz out ljmp mov test xor clc push pop les push pop fnstenv mov cld push sub adc mov je (bad) xor (bad) push fdivrs push nop je add push jge fisttpll outsb popf cmp je push add push aas in lds aaa in sbbl add and adc popa popa cmp loopne (bad) sbb xor and inc test mov mov bound push inc pop jo paddsw sti push or jge xchg ja xor add movb cmpsb push lock mov cmp shrb add cs or pop jne push repnz sub sbb dec loopne jo xchg jle xor ret enter add cmp adc stc jmp jmp mov in loopne mov test divb jne sbb jge adc xor rclb jecxz and dec jbe or xor push in push jmp sub pop mov daa arpl push (bad) lret push or shr in lea sbb add mov sar inc shl rorb jg fst xlat nop add (bad) enter push jne add rcrl push mov jne jp sub and mov clc (bad) dec ss pop (bad) inc push mov or mov rcll bound ret add xor sub mov or orl (bad) sti jl cmp je inc inc add shl push or and cmp cmpsl in add faddl mov mov inc and sub pop jmp sub mov iret lret rorl gs and mov add out dec test enter pop gs dec inc je pop iret mov popa jl dec lret jmp mov sub inc xor loopne lock (bad) repnz push mov mov adc jmp les dec or mov imul mov jae push xor addb sub cmp xor cmp push push add add cmp ss dec test jl adc dec mov shl push pop mov rcr call addr16 adc lock inc add mov lea std sub push mov xor xor decl cmp mov pop cmp push out imulb sub mov mov incb pop adc pop mov call testb je mov mov mov (bad) idivl fidivr dec popf inc adc adc stos mov add dec mov add xor lea inc or adc enter sbb dec mov fcmovnb inc int3 or clc or lods lods add aad sub int popf je mov jne push mov mov jnp jo mov nop add inc push in out push mov cmp cs fisttpll gs adc sbb jl imul dec add testl sub adc or scas sbb push xor jno cmp in or cmc add cmc add sbb sbb (bad) repz adc jno push pop push pop push mov aas xchg push pop jmp (bad) je fmuls aas push ja ret insl and and adc (bad) int3 jbe sahf push movsb pop mov dec inc or sub ja fsubs mov dec in gs xor pop cmp push add push imul andl mov pop into dec cmp cltd sub push shrl inc push or xor or shl mov dec xchg sbb out hlt call rcrl cmp or pop clc mov cmp out sti jg mov mov cmp jbe mov (bad) sub inc es inc xor jbe sub push adc cmp push or incl hlt subl jl jl cmp lea sbb je movsl xchg and mov and cwtl cli jb aad jg je mov add sbb out jne decl subl add jns jg jb ret rclb or pop or push je add dec sar pop ja movzbl test inc inc mov or (bad) pop jae push (bad) mov pop jmp test decl or jmp push jmp shr cmp std ljmp in outsb insl fcomps adc add divb sub add add loopne lea add incb mov push or ret jmp xchg (bad) jg outsl cmp and leave sete (bad) ficom jle add push add adc pop jo ja addb repnz add flds test divl cmp loope popa xchg push push cld call pop xchg incb or ljmp out in movswl insb cmp (bad) call mov dec or push je subb jp xchg cltd int3 push mov jne enter cmp cmp push jbe lea test sbb inc cmp in and add jmp pop out sub cmp pop push cmp loopne and into add jp ficoml or mov push mov fldl lea dec jo lods cmp sar add sub pop jns push fcmovnbe test sar xchg pop push adc push sbb leave call iret cli mov adc je mov push jl and arpl jl mov je cld pop sbb and repz outsb push mov mov sub push sarb in ss pusha jno inc inc mov lahf fdivp je cmpb and push je mov inc or pop popa cmp clc cmp pop jne push or jmp jge lock dec leave cmc pop lcall loop sub cld dec pop jne je inc adc and pop or inc notl test jb inc lea push inc adc add or pop (bad) imul pop jne imulb jecxz ret fs stc and outsb cmpb mov sub movb pop out or test or mov pop and xchg inc adc inc cmp cmp pop add push sbbl ret sbb inc ret jb arpl push mov jbe or cmpsl inc dec pusha mov lea mov mov incl add sub jmp jne addl jnp test xchg jae lret mov inc arpl push inc or insb inc push xchg xor and jns or mov loopne push pop pop rcrl add mov xor mov into adc aam or push faddl or mov add test ficom xchg sbb test pop pop sub push and je push rolb cmc xor jae jb pop cmp push sub push dec es xor cmp or inc add cltd test aas mov add mov clc outsl add mov dec inc cli add or cmp jae ficompl sub cmpb adc shl js adc jns rorl das cmp aas mov xlat dec dec mov inc xlat (bad) xor pop xchg rol insb adc and or sbb insl cltd popl add pop outsb rorl inc jbe or std imul jb cmp jge mov fildl int3 les adc fsubrs mov pop sub cmp jl mov (bad) jl add push cmp clc insl inc ror popa mov mov sti xchg ret jmp mov push cwtl outsb (bad) cmp popa outsl rcll pop push fsubrs aaa int and lods lret popa stos inc cmp or sub inc add cmp and test mov pop stos push or loop add or and mov je mov mov pop sub push lahf pop mov (bad) loopne rclb sbb add or ret mov sbb cmp rclb push mov pop xor and jge arpl or enter lret sbb mov bound push ficom movsb xor pop mov test push pop fstpl cmpsb arpl dec or pop push push pop movsb test (bad) adc add jae push subb push (bad) jo cmp xchg and pop cmove subb push jmp push jnp sub data16 imul cmp xor add mov cmp xor lret fsubs jns sub jae inc or jge aam sbb add jmp push (bad) je or rol inc hlt add add mov mov je je js test aaa mov out push (bad) xor push mov rorb leave mov lret adc jne mov or insl inc sbb hlt push jo dec pop insb inc jecxz sbb out add cmpl je pop inc mov cmp jb adc aaa xchg jae lock mov inc notb cmp notb das cmp pop pop dec lea mov sete imul je xor pop shll (bad) sub inc das pop call ss add sub push push push push aad sbb push dec pop push icebp mov add jbe ret mov or je cmp lds xor and ja ret loope cld dec pop jo mov test and dec stos push sbb jo lret mov dec mov add push shrl mov xor push xorl daa mov or test or lcall popf pop xor pop or flds hlt push jno popf mov arpl pop cmp mov push sub (bad) sbb (bad) in push push or pop (bad) testl jb pop rcr pop push sub fdivs dec cmp (bad) outsl pop pop pop adc push pop jbe sbb mov js sub pop test inc add outsl dec pop add arpl hlt push je push insl ret imul add or mov or mov inc sub dec sub push call lock sub in lahf sarl inc lock test xor cmp jl loope adc je mov out dec add pushf movsl pop push cmp out xchg or push xor push xchg and arpl add pextrw add add sbb inc jns push es imul xor fsts movsb pop mov adc stc in fistpl sub imul insb xor stc pusha jge std push push jns subl scas in pusha sbbl pop lods pop inc and push cmpsl jb dec cmpsl mov pop test orl add daa push cmp xor mov (bad) pop cmp pop and popa jmp mov mov test sub mov adc mov push mov sbb pop inc mov xchg clc (bad) cwtl and pop mov sbb mov das xor add cwtl aad pop sbb mov js adc cmp lock movsl lock cmp xchg add and or push mov add daa fstl pop sbb jmp jb (bad) out jne pop xor ret mov pop add xor in mov es dec lods pop inc sbb sbb add pop lock or inc xor jo push aam mov dec mov movsl pop jmp push das lock arpl dec fbstp (bad) cmp xchg mov push add imul xchg and imul loope inc pop leave dec addb sbb inc jge adc mov imul dec inc fiaddl xchg dec jl or adc fildll shll fnstcw cmp xchg push cmp jg push iret std sarb inc sub mov repz xchg fcmovnu push (bad) xor add clc jne pop jns fsts adc inc add mov or stc mov push cmpsl push jne in pushf les insb xor pusha pushf les (bad) mov add push mov cmp out mov nop or adc mov push clc xchg test bound fild cltd mov mov adc enter sub adc mov dec fdivp rcll mov hlt int3 push xor jg nop xchg pop inc xor jae cmpsl push sub mov inc inc stos cmp sbb enter test inc add xchg outsb outsb jmp inc xor hlt dec push and push add pop hlt imul mov rol dec xorl adc push iret mov mull sub sub js xchg sub push fcoms aam testb aam cmp (bad) outsb sbb sbb jne dec daa aas push or cmp (bad) pop cld (bad) (bad) jne add mov xor and push andb push sarl or fwait loopne sbb adc fsubrs sbb movsbl add rorb or push cltd dec dec pop pop fwait push rolb push mov loopne or cmpsl push and dec mov ficoml mov and cmp scas xor int3 add mov xchg xchg xchg loopne pop xchg mov ljmp dec pop mov cmp or shrl push inc (bad) pusha mov test jge,pt pop adc test xchg and in sbb inc mov mov adc fistl add scas scas repz push sbb jl insb push inc add fiadd fwait adc roll cwtl mov pop cmpsl or ret sbb adc in out adc mov sub pop cmp pop and pop mov dec mov jle and mov shl or rorb mov and cmp push jge adc mov adc pushf in or and adc in cmp aaa je js push mov inc loop dec adc lcall xadd sbb pop das cltd sbb add mov adc mov lods dec or adc pop ja mov xor xchg pop (bad) js stos out push sub outsl arpl test cmpsb cmp cwtl push sbb push sar je orb test sbb loope mov adc add pop popa arpl add sbb (bad) (bad) ficompl xor xor pop mov jl xor or mov nop add xor enter mov xchg inc scas lods or call aad mov dec mov insb pop adc or inc add xor sbb test xchg sub int3 fwait adc das es fs popa jno push sub (bad) dec or rorb nop leave inc out fwait add inc incb incl pop add mov mov inc nop outsl mov rclb test cmp sbb lcall (bad) mov mov sub lods adc pop add test xor orb sub je aaa jmp (bad) xchg ret add inc and popa js dec push adcb mov jbe ret cmp stos mov cmpsl imul mov sub fnsave notb andb mov enter and test (bad) adc xchg pop adc xchg orb (bad) cli fiadd clc xor (bad) cmp in rcrb lock fwait xchg push rorl jmp cmpl jne out iret cmpsb xchg fistl push push push js pushf or mov (bad) int3 add xchg mov inc negl scas xchg loopne daa cmp and (bad) mov loopne cmp test cmp adc push shrb sub sbb enter (bad) dec xchg arpl and cmp sbb sbb jge cmpsl push test mov xor sub inc jo mov push cld push mov pop push push imulb adcl inc cmp dec outsl iret and jmp xchg fwait test sub ds cwtl mov add jecxz or test xchg in mov jmp gs sbb (bad) push cs vmovsldup push jmp jmp ficoml cwtl mov cmp add sbb test inc rcrb or cwtl and push push push call jle jo loop cltd jno push andl xor sub mov or xor sbb sub fcmovb sub shlb rolb cs loopne or add enter xchg loopne faddl or test jg nop ja div mov lock push cmp fcoms das clc cmp xor das and push mov sbb imul xchg add imul enter sbbb cmpb ret ret dec sarb cs mov push mov jge and lcall mov xlat jbe and mov pop push sarl jecxz push addb and pop sub mov dec jecxz mov les rolb sbb das add adc movsb push test push imul xchg sbb xor mov sub mov dec sbb pusha push (bad) rorl sahf out and insb std call adcl mov cmp inc adc inc (bad) dec (bad) mov jo dec cmpl cmpl adc sahf jnp push push mov jmp pop adc addl rorl or pop and dec hlt sahf fs mov std pushf and inc and jns lret inc movb sti loopne lea pop and pusha mov loopne inc lahf sbb inc inc jmp mov lea fiaddl dec test xchg arpl in push and add dec es xchg dec insl push pop and mov les cltd pop idiv xorb lss loopne mov imul adc pop mov mov in push test cmp push repnz jg pop jo pop imul popa in outsl scas mov cmp mov in cs add inc cmp xor cli mov lcall or xchg imul or dec push push push push sbb lea or je rcll sub xor dec mov je mov mov sbb jns push les aam loop mov adc add shlb push mov clc std loopne mov jne popa and fistpl add fcmovb or dec mov add je ret sbb add out mov mov dec ja sub leave jno cmp loope rorl adc sarb inc je fnop insl and add hlt fisttpl dec mov mov icebp pushl add je cmp je dec leave jmp cmpsb mov insl jb and jmp fisubr test scas mov (bad) pop jne inc loope push insl out add add add cmp adc adc (bad) ficomp xor inc add and loop add or mov decb push push pop mov pop jne xchg pop push inc add hlt push call bound insl fiaddl pop inc mov out xor mov in xchg in xchg or xor cmp jne mov mov xchg cld inc push or pop imul add jb clc pop setne leave adc xchg push movsb mov lods jne mov sbb dec cmp mov pop clc std mov push mov mov mov xchg inc sub add call lret and fsubrl mov push pop mov call and jb cmc adc push in adc add ret mov enter sub mov pusha add loop and mov rcr inc pop sub fisubr adc add xchg popa adc inc mov mov in cmpsl sarb scas cwtl fwait ja push adc mov ja jns (bad) (bad) push push lret jmp xlat dec xchg movb jmp pop orl in xchg xor push jg cmp jmp data16 mov jle cmp dec cli add mov pop add icebp cmp repz or mov cmpb mov add lock das inc dec push loope inc movsb in xchg and inc popa mov je mov push sbb nop adc push xchg xchg pop pop mov pop insl jo sbb sbb ficomp fs sub loopne lock mov add (bad) dec fisubr push inc push inc ds call lods adc notb pop jo fcomps mov nop xor shrb and lcall leave and test test dec lahf rcrl sbb mov mov inc or inc sbb addr16 fs inc stos adc test inc dec daa sub rcrb fadds sbb ds loope inc pop je mov cld aaa sub and xlat cmp mov jmp aaa pusha jmp iret int test stc je shlb lds jg mov icebp fdivl or and das add lea cmp push push (bad) mov jo add hlt add sar inc add cmp jle ss push loopne cmp xlat and mov jo or inc inc call movsl mov jmp outsl (bad) add paddusb rorb pusha std cmc jg shrb sti jmp outsb xor push add test sbb je inc push push add cmpsb test lods pop pusha cmpsb sbb clc je sarb pop pop inc sub adc or insb jge test cmpsl pop jge and subb push add pop cld cmp loop sub clc adc test hlt sub mov push adc (bad) pusha cs loopne loop jge inc cmpl and jne in loope sti (bad) xor enter adc sbb push fldl leave cmp negl or sbb lock in fsubs fisubrl int3 cmp push (bad) fildll loop cmpl movsl adc xchg popa shr jmp mov or cmp inc add cmp test ret add or int sbb dec adc rcll roll push insb dec dec ret sbb shl sahf addl add es xor test mov add add das add cwtl insb push xor aad pushf cmp inc cwtl cmpsb mov (bad) adc push mov ret or adc push out mov cmpsb daa into movsl aas xcrypt-cbc and add je pop loopne in dec cmp mov pop xchg push sub enter ficompl xchg hlt mov adc cmpsl lahf xor xchg and mov dec movsb mov sbb xor int rorl lock and dec lret fcmovnbe xor xchg (bad) adc cmpsl xor clc inc jae nop jno dec arpl push imul or in (bad) push xchg adc mov frstor fs out and xor outsb test rcrb xchg lea and push inc sbb dec xchg mov imul ja adc sub push mov add movsl push icebp dec (bad) dec mov or xchg jmp clc test and std inc addr16 add sbb mov xor (bad) adc jno mov sar cmp mov pop daa cmc xor sti dec xchg in inc jb lods test mov xchg xor loop les inc and mov and scas mov into xor ja push out enter or add mov or (bad) pop push orl pusha cmp mov mov popa fldl xlat arpl cmp test and or or femms mov inc pop lock push icebp jb test push mov test mov mov sahf jo and (bad) mov cmpsb mov pop insb jp add or add out push mov pop fildll cmp push int3 add pop setne pop inc repz cmp pop (bad) push (bad) jne (bad) test mov sbb xor mov and add ret add jg cmp xchg adc test push outsb jp mov pop sub add push fildl push inc scas jbe in fimull rcrl push push les lret pop add adc mov dec psllq adc adc inc inc cmp add push xor fs or fimull pop sahf jp jl test fdivrs pop inc cmp orl cmc push not jo mov push test addl (bad) je cs negl add push push push inc das aaa jo push mov cmp push push lods push std movzbl orl cmp test sub rorl lods xorl and or add mov add sbb inc cwtl jnp dec adc mov and sbb cmp sub aaa and int or mov push and mov jbe mov push pop dec cmp mov cmp mov ret mov cmp dec movsb mov or adc movsl dec cli daa iret xor scas xchg testb push lea mov adc sub fimul mov inc loop,pn inc add into mov jecxz add adc mov movl dec add push xor mov loopne inc adc std les pop mov (bad) or sbb lcall xchg test sbb inc xchg mov feni(8087 insb push arpl jno adc add cmp aas lea cmp inc mov adc dec adcl call pop mov in cwtl add cwtl or fnstsw imul icebp cld lods mov je jmp push jmp and popa punpckhbw inc rorl push ret shlb repnz mov and stos dec loopne or popa add jne and stos arpl ja imul or xlat cmp sbb and add mov movsl lea repz movsb adc add push test jo dec sbb movsb push jge fimull scas jae push mov jmp clc mov sbb and sbb sbb or mov aad and mov xor sbb jo jne mov nop fsubr subb mov xchg gs or inc push jns and mov test or mov movsb inc js outsl or xchg popa testl loopne ja or pushf dec xchg jl inc mov jne dec ret sbb cmpps mov mov hlt adc std xchg or mov and shlb pusha push add shrb in loopne arpl aaa jmp adc xor or aam shrb adc call fbstp dec mov ljmp mov sub divl push or mov add nop sub push mov or rcrb xchg jbe add dec sbb push jp xor inc mov or xchg xchg scas dec jge jge add loopne push sbb xlat ret data16 cld mov in xchg sarb add push xor movsbw aas mov loope mov mov mov push pop jb dec rclb add xchg inc and rcrl int3 enter inc js jbe jnp lods fisttpl out add nop mov inc fmull xor xor dec popa jns lcall adc inc loope ds push das jae inc loop bswap sub add mov xchg cmp or jg xor xor cmp adc cmp orw insl sarl cmp inc inc xor jne mov jmp jo addl rol add lock push imul cs add sbb call outsb xchg inc aaa sub xchg test or in pop nop add push push xor (bad) int ja,pt ja inc xor jmp ret push mov push mov mov mov push mov xor ljmp cmp in cmp adc (bad) das xor and jo push mov cmp and add sbb test add xor mov aas push push ljmp dec fcoms test cmpsb sarb (bad) in push xor cmpsb cmp in ret mov arpl test sub dec dec insb push lock jb fcom lods push inc add cmpsb cmp bound add mov mov loopne mov mov enter xchg and stc test les push pushf push lods cmp lcall inc add xchg cwtl push pop sbb or push push cmpsl sbb and test fadd ss pop mov js,pt mov clc add jmp mov call mov mov inc and xchg icebp leave xor sti sub add shl sbb inc cmp jge sbb outsb mov and xchg or lock push mov mov sbb xorb insb rol cli inc fmulp jecxz pop jl mov mov mov stos test add movl rorb negl or inc loope mov add push fcmovu add jb mov or adc lock loopne add dec lret es mov loopne rorb mov dec sub inc jbe xor movsl push mov jmp xchg mov pop push xchg jo mov xor xor pop out inc jnp add outsb stc sbb add mov inc lock in cmp lock mov in push mov jae and stos xchg loopne decb out cwtl add enter scas addl cmp flds test or add sbb add rolb and jg cmpsl rolb testb fimull jbe subb adc inc loope fistp (bad) out cmp jb jmp lea cmp icebp jae adc shr mov clc jle mov sahf (bad) xor sub in pusha or popa mov or subl test mov jmp rol test xchg push and adc jns repz mov push or ja loop sbb js cmp lea jns jo cltd jb add sbb decl or push lock mov aad pop and cmpsb and xor jmp pop add icebp scas js cld inc adc lock or jl inc push mov in in xor daa in inc imul call and sbb add push or xchg pop lea xchg inc and out cltd mov adc cmp ret int sbb xchg xchg iret inc or nop mul xor push inc jbe cltd nop inc inc in cmp jp in pushl popa ss cwtl jbe sbb (bad) lock jl mov outsb jmp (bad) xor add mov int3 subl (bad) cmpsl in xor adc popa addr16 adc (bad) jge lock add mov pop clc pusha xor ret mov push inc sub jo (bad) mov lds repz add std mov push pushl mov rcl call dec outsb iret call fsubrs adc add imul lock or test dec rcll shrl rol lea pop pop mov inc call ret (bad) mov push jecxz stos xor test push fistp xor fcoml push add push or dec jno in jp mov xor jmp xor loopne fdivrs mov mov and push (bad) sbb fsubl or mov jl jbe or inc inc mov jl add xorl jbe sbb std add aad mov flds (bad) cmp jo loope lcall xor fisttp push mov sahf ss (bad) arpl je cmp je gs and add sbb nop or push push stc dec es sarb sub popa sbb orl mov ljmp xlat (bad) adc mov add add inc add or sub xor mov add xchg pop cmp mov add push mov insl and cmp sbb jnp scas ret fist popf xorb fisttpl sub insl push push test movsl pop pop inc jne pop scas std mov orl and mov das jne push test mov fmull xor xor pushw insl sub xor imul jge fimul scas jne push mov je mov test jo add cmp fsubrs pop add jp sub xchg and hlt or mov cs test or jge add adc pop fisttpll xchg add out sti sbb pop add loope inc sbb push dec mov xchg rcrb cmp cmp shrl sub sarl inc cmp sbb xor jo mov ss dec or cs pushl push push out and sbb jmp push jo push or popa sbb jbe jno push mov mov jns loopne push and xor adc push lods leave lea xor sub call rcl jno push rol xchg adc dec lret pop sbb sbb inc mov push or mov pop pop add aaa jae and jmp sbb adc pop roll cld add cld mov push jge jo add pop adc xlat jecxz imul or dec xchg sbb mov and mov je inc sub cmp xchg je and adc sbb nop outsb push sub test cmp add outsb cmp or jnp mov xor push orl jne dec jp mov jg (bad) jle dec push pop iret jmp mov mov cwtl or push lret dec push aas jl lahf add mov cmp loopne and or dec add test lret mov add lods sub call cmp pop lods pcmpgtw or add decb xor je add adc sbb aad push enter popa xchg (bad) pushl movl sub lea (bad) (bad) adc push jecxz pop cmp xchg pop rolb mov sbb enter jbe sbb inc push loope inc cld into push cmp icebp cld inc dec inc movsb add adc mov out inc inc clc bound daa adc mov push add lods das and jo imul mov inc sbb add sbb pop sbb test pop inc inc aam xorb xchg push jg int3 divl neg in jl in jo and inc mov scas das out pop add pushl push ret int xor mov stos push or cmp mov es out ljmp ret je mov cmp je push inc inc add add sbb or jg lock jmp mov mov bound xlat add cmp push add das mov push xchg (bad) add testl adc xor mov cmp jb sbb iret push add push push dec cmp add pusha add call push loopnew das ret xor orl cmp add or xor sbb (bad) cmp aas mov add dec les adc es mov add add and inc adc scas addl lret flds add mov addr16 mov nop inc xor mov jns or xor dec shlb lods or mov xor push cmpsb fidiv call mov test adc subb mov lcall add rcrl adc jb mov fadds jge jg out clc mov mov call dec xor (bad) int3 inc int3 mov dec loope ret jle jl sub sub push mov pop sbb xor rol daa push sti add push or dec int ljmp inc clc pusha movsb incb sbb lock shl out mov int3 jmp outsl js aaa xlat jle mov sbb pushf push xorb out dec dec mov sub repnz adc sahf (bad) sub or pop add sub push pop outsb (bad) mov inc add xchg (bad) lea adc (bad) nop mov mov add fwait sub rcll cs jbe stc das inc orl or cmp xor lock dec dec jmp gs adc and jp into add push mov (bad) int dec xchg add jg fild jnp mov incl or push hlt push xchg arpl lcall cmp mov push push jns xor push add and adc inc sbb add mov mov and inc scas adc jb mov mov ret sub insb and insb and and nop inc ret dec sbb cld (bad) and adc sub add pushf push push mov enter xchg popf jbe enter xor test hlt mov pop pusha or adc sub and in in stos mov jne dec push sbb mov nop cmp sub cwtl cwtl push mov and push and or inc mov sbb mov lret push push xchg push push call xchg sub test or imul es fwait mov test jno push incl xchg mov or mov dec adc adc or jbe or jbe lea daa in pushf xor dec lock insl sbb ds sahf inc cld cmp fnstenv fistp out mov ret mov cmp and rolb add (bad) fcoml leave cmp jle daa ja mov push add packuswb sub add or or mov sbb mov mov pop inc sub rorb add push jae (bad) loop mov test push sub les (bad) mov je sub or jbe xchg test popf jp push out pop nop sbb xorl pop lock jg pop xor mov aaa subl mov xchg mov or sbb xchg xchg add movsb inc jp test cmpsl das cmp xchg mov add (bad) nop mov jno,pn jbe cmp test inc xchg inc inc inc addb aad mov xorl sbb imul and and and and xor jge or push xor cmpl xor push icebp adc pop bound adc daa aam add xor (bad) mov inc or aaa popa inc icebp inc add add and ret mov ljmp adc popf and dec xchg stos lret pusha mov dec push push inc pop push cld outsb roll mov test ss je arpl pop negl leave jno adc (bad) pop cmp add mov adc add cmp sub push pushf or push ljmp jge inc push mov xor sub movsb insb sbb fistl push mov incl mov ja scas mov jecxz data16 push or std add sbb dec rcrb inc js mov sub add or pop mov inc mov sbb test cltd (bad) pushf xorl sub or mov push sar mov or push gs mov roll fidivrl push or lea dec push jmp repz lret or int3 aaa sub mov mov push cmp sub cmp push xchg and jl sbb lea mov jle xorb dec adc cmp cld and ret push sarb jae fwait mov push and cmp roll adc add sbb dec cmp scas push mov push mov adc adc xlat or movsb sbb add push mov arpl push sbb jbe mov fstl daa sub fisttpll dec mov jne cmp jne or and mov mov or xor cmp lock inc push sbb dec clc ss mov mov orb testb jbe (bad) or xor pop push imul cld jno ret lea push push xorl test rclb dec adc js jge xor int3 dec add push mov clc jne ret fmull rclb test in test cli xchg rorl rcl ds or push in inc pop mov push adc sarb push push mov lods sahf lock shl mov sbb or pusha addl mov pop fimul cld data16 int (bad) sub inc add add sbb xor js add xchg jle adc pop pop and nop sarb mov pop pushf sarb or call adc aad test daa mov js das add clc dec loop pop pop (bad) jle lea test or test test shl lcall (bad) nop ljmp jae and add cvttps2pi xor pop cwtl hlt push push std fwait jle xor pop div adc cltd idiv mov imul in mov push push jae sub int movsb data16 sub add adc cld xor (bad) xor (bad) addr16 int or xor int pop lock fcmovnu roll jo lock xor or pop imul adc rclb arpl xchg cmp movsl loope mov push (bad) mov test xchg imul ret cmp add and pushf (bad) cmp sbb (bad) test lock jp add and shr adc es mov pop or cmp fstpt push loopne inc jecxz dec mov push dec adc pop push sbb imul push xchg dec test or sbb pop sbb or test inc test data16 daa or aas (bad) sbb add cmpsb dec inc lock mov mov (bad) xor clc jecxz (bad) lds sub fs mov inc sub int3 add cld cmp sbb outsb pop jl xor ja mov ljmp add add push mov and lock paddsb xchg popa jne lea aam and add cmp je lcall pop and popa or (bad) decl mov pusha ret (bad) sbb push mov mov cmova nop add js sbb inc ss push push (bad) out aas sub inc es (bad) ja sbb inc mov push jg daa das add push cmp pop xor add rorb sub imul push call (bad) sbb pop pop push insb push mov jmp mov inc xor or add sbb lret pop push adc or (bad) fistp mov push neg sbb push and mov mov inc adc rorl cmp nop loopne shlb or fldt add inc sbb insb dec and leave je xorl icebp loope je xor push out mov call sbb fldcw pop stos mov add test inc mov or adc out cld sbb loop add cmp (bad) or pop test fstpt jo or sub jle jne push jge pusha sbb repz push in dec mov xor (bad) mov jns lock xchg cld pop mov mov iret mov jge fdivr orl fld inc or jmp stc movq fistpll shl mov mov ficompl mov push not and (bad) cld out inc rolb cmp jne mov fstpl and cmp cli sub or out pop scas adc rsqrtps inc inc cwtl push outsl arpl add push sbb sbb mov add adc pop daa cmp sbb cli add pop movhps ss xchg ret dec mov push aaa sarb sub mov or (bad) fsubs inc xchg push add jp cmpsb sbb addl int movb or add mov push loope inc cmpb je movl popf loop sbb sbb jmp inc mov shr rorl jbe and mov dec dec loopne push orl out insb outsl fistp loopne leave mov or mov mov mov cs cmp adc pusha lock incl shl add div test je movl faddp mov test pop out sbb add push dec cmp push push aad insb xor adc std jne inc add test mov or testb inc add push xor inc xchg cmpsl lahf (bad) cltd pop and dec or adc mov or (bad) xor lret leave fstpt movl push icebp xor xor hlt add imul jge dec inc mov sub add loop add mov nop mov fwait or pop mov gs pop sti mov sti gs mov rolb sbb jnp sub add leave or mov ret inc add sarb or fadd add fadds ret test push or jo sub xchg inc cmpsb in add rorb (bad) adc xor loopne mov fiaddl lock mov dec ret loopne inc or or jne or aam stos mov insl adc cmp repz xchg mov int movl push out push ret cs adc pop or sbb push jne add mov adc clts push push pop add fadd cli cli (bad) pop scas push mov in push cmp (bad) fcmovnb cmpsl (bad) in js mov cmp add xor xor fcomps jne lea mov jbe adc sub push inc loope ret cli mov fadds xchg fnop ja and fidivrl mov mov (bad) or movsb (bad) jg or cmp jl or jg ljmp xor mov sarb popf test insb (bad) push cld push nop push call xchg lret add ret mov and (bad) outsl outsb sbb mov shl mov hlt and ds push pop outsb dec cmp or push les adc inc pusha dec mov loope ljmp dec sub push je xor sub pop dec inc cmp hlt pop cmp cmp push xchg and xchg sbb test pushf cmp or sbb dec or lock cmp aas popa cld fnstsw xchg mov push hlt movb push lea loope jno insb xchg pushf jle sub mov or lea xchg sub mov outsl mov mov int3 icebp or mov pop ret cli (bad) aas pop mov cmp push je mov cmp je insl push je cmp je or push lret add insl pop push inc jbe xchg mov and adc mov sarl sbb adc mov inc add xor push xor and hlt jecxz (bad) int3 and mov clc or test notb pushf mov insb jb add jnp mov jl jb xchg pusha cmp jne dec imull xor jne imul ljmp cmp dec adc or hlt mov jo hlt sbb sti stc and or js jle das shrb add push dec sar fidivl rclb add push or cmp mov nop rcrl mov dec (bad) loopne jg sub outsl jo cmp lds push pop hlt push sub mov sbb inc xor jnp sbb cmpsl and push dec pop push push sub push xor jle and addr16 ret leave jne cmp sbb adc and and movsl dec dec dec enter add xor mov loopne sbb shrb mov push nop popa insl sub adc inc jmp hlt mov or add adc add idiv insl xor lds add cmp out mov jne mov lods jl cmp add popf lcall push cmpsb out sbb (bad) rcrl jle stos mov dec add jo mov xor mov and rep or or sbb sbb add shr mov adc and adcb insb push cmpsl and push and mov push pop jmp adc pop push push jo mov jl outsb (bad) jae adc inc and pop mov lcall or pop push ss (bad) adc jbe pop push sti lret pop mov lret mov jno orb movsl cmp loope rep sbb fstpt mov jno add mov mov js in divb sub sub sbb pop cmp loope sbb clc xor inc pop jg xchg add aaa pushf jnp adc sub jno lcall sub mov jecxz,pt fisttpl push dec sub push inc cmp outsb dec loopne jl push sub cmp ret out mov addr16 mov jge push lods fidivrl xchg sbb mov pop ret pop push into sbb (bad) neg push adc loopne inc xor cmp mov push mov push or ds imul ret (bad) mov (bad) jp dec js push call outsl movsb sbb push push push insb jns pusha add insb insl inc inc js je jo pop pop pop add mov and mov psrad pop push inc insb sbb xchg imul adc xchg jns sub push push sbb inc fs std das js je cmp jb sub mov leave mov jl or jbe add inc sub push (bad) das add out push enter ficoml push test (bad) aaa mov mov sub sub push je jb inc dec mov add push push mov or adc push mov lock mov ret rclb or and loop (bad) xchg mov xor lds call pop adc pop and jp ret lcall imul rorb or aam adc add mov inc aad leave addb outsl jnp jmp inc and mov cli sbb (bad) jb mov mov mov fwait sbb das mov jae dec mov idiv sub sub mov jae mov dec cmp lds sbbl stos and add lds es lods add cmp gs add sub add pcmpgtb lods lcall into add fcoml sub sti xor adc add ds add push lea mov incb loopne out testb dec add shrl and and push jo or out (bad) mov mov addb es sub fdivrs fld (bad) add lods sub mov inc inc sbb faddl mov rclb mov cmp lret xchg lock jecxz or pop inc or lods lret mov pop mov std mov nop push pop mov inc packuswb jmp les inc xrelease jle push inc dec inc (bad) sub popa mov or jle orl aas adc and stos ds xor pop cmp sub cmp ret push fs cmp test sub or pusha push je push daa loope ja mov add push adc pop inc pop inc cld add dec (bad) mov cld dec sti mov inc sub sub mov scas inc push inc nop dec add fisttpll inc mov xor pusha xor test cmp mov jae out std (bad) ds mov lock inc into jmp and call cld cmp mov xchg or ds bound js sbb insb sub orl or test jb dec mov icebp test inc cs (bad) cwtl push js jb shl jl rorl xchg nop xchg rorl dec shl dec inc sbb xchg mov fwait jne mov jmp rorb sarl sbb ss mov xchg dec dec jo cmpsb xor dec and outsb or insl mov push js popa pop out data16 mov nop ds and stos and ja or cli mov xor repnz inc dec cmp rcrl loop mov idiv jo sbb lcall xor ret add push push mov test cmp je int3 lret mov add mov ss sar pop ret sub pop ret sub pop (bad) pop pop sub (bad) lods cmp lahf adc jp popf test je push sub dec test cmp popa sahf xchg sub cmp mov add fstp sbb or decl cltd add mov adc or xchg pop and pop sarb ljmp insb push outsl add outsb jbe or dec inc jnp and sub (bad) cmp ficompl in stos movsl xchg stos cmp sbb leave in lea inc add inc sbb fidivrl adc roll mov inc and jne fs inc xchg cmp sub push or add lret jb mov lea mov call aad sbb mov in ljmp sub ljmp push dec dec mov jb js mov mov cmp jbe lcall arpl lock jbe call or sub xchg shlb mov sub push sub loope or int and dec add add cmp xor mov leave ret dec pop (bad) ss sbb test into inc pop mov push subb je js (bad) enter pop or lock ljmp je sub fisttpll add push push add add push jo test push (bad) insb mov mov cmp dec in cmp pop das lock repnz mov icebp sahf sbb nop inc sbb rclb (bad) mov mov ret lock inc loop (bad) and jo xor or mov push xor aas out jnp dec mov inc pop ja test fistl adc push push rol xchg push aaa push sub push mov xor push inc xlat inc andb imul call add push and addb add push adc and mov lock xchg jne daa testl dec insb inc dec mov (bad) jae adcb xchg out jns mov adc jo dec xor fs lods je sahf movsb sub push dec movsb or sbb add adc or inc and test dec popf enter sbb sti xchg or add lds cmp and push pop ret loopne sub push push js jecxz add xchg inc (bad) or adc jne dec lods xchg fisubrl sub (bad) xor cmpsb cmpl mov orl xor push movsb cmp sbb (bad) (bad) mov xor out and mov imul xor pop add adc inc push outsl stos add data16 mov imul jne sarl pop sub push push and rclb fisttpl repnz push push sub pusha and push push adc add cmp mov addr16 inc xchg popf inc (bad) or cmp out mov inc rolb movsl xlat dec cmp jo pop rclb inc imul dec or fisttpll arpl push jl add out cmp inc jae sub dec jmp sub add mov lret xor jno test add jne stos add adc pop sbb sti add pop jns mov lock sbb dec (bad) mov shl add mov mov inc bound movl add inc and enter loope iret fldt add cmp (bad) push cmc in add add int pop shr shr sub jg aam and adcb ss sub mov pop loopne scas cmp add out cs inc cmp push pusha sub sbb push sbb (bad) cmp mov fcomps test fs xchg jmp add pushf leave lods push add cli loopne les mov dec mov jl dec ret jb mov mov negl (bad) lret jne pusha push in out cmp out add cwtl xchg cmp loopne add mov ljmp hlt push jge leave cmp dec sub inc cmp jne xor mov (bad) sub les rorb and leave lock sub dec test in test mov push jno dec dec push xchg test mov inc in mov or push jae out (bad) mov jno out or dec hlt dec lret pop test cmpsb dec jne sbb lock sahf cld sarb (bad) repnz pop jmp sub pop loope and cmp xchg or add lea fmuls (bad) repnz cmp movsl mov mov insl in adc dec cmp inc add push ja fsubs sub popf xchg adc and or js addr16 inc sbb pop push cld push sbb push jae mov mov aas dec cmp pop pop sub dec or inc push rolb and jp pop or mov ljmp dec mov mov and add call push (bad) xor cmp mov add push movl adc or or or or jae test add adc cmpsl aad rol adc dec cmp (bad) jo xchg jge (bad) push int int3 pop scas (bad) sbb adc int loope pusha cmc pop dec or cmp into out mov (bad) rolb mov loopne jb pusha mov adc jae jns (bad) bound lds inc jb sbb fbld inc adc push push movl mov add xor adc cmp xchg ljmp (bad) add mov data16 add push out mov jae call and cmp push sub push mov jnp fcmovb or adc inc insb push jb mov adc adc rorb push roll aam inc cwtl clc cmp cmp push lret jp out std js sbb sub testb jp hlt outsl mov adc dec repnz popf (bad) pop jno mov lret push movsb rorb jmp xchg add adc outsb jl rorl or add ficomp iret add sbb insb and les aas enter lock or cli add mov outsb add xchg add xor pop (bad) push xchg inc ret adc cwtl cmp inc insb cmp inc xchg (bad) cld out pop sub idivl jne xor mov xchg pop lds and fldl sbb inc push push test lea sub mov cmp into sub jo inc push add sub adc inc or int data16 aaa or and adcl sub or test jns sub cmp mov popf inc pop clc jbe lock mov ds fs or iret mov dec push push inc inc push and dec adcb push inc rcll js rol push pop or loope adc dec xor mov inc scas (bad) enter repnz adc inc mov add add add add pop xor mov sub (bad) pusha lret movsb jmp or mov sbb popl ret jge test push mov iret xor in popa mov push ja mov and adc mov sbb in dec popa pop rcrl cmp push sub pop add popf in and xor dec push outsb jb sub inc shrb jnp outsb test sub inc fisubr add fs inc sbb xchg mov jns ret add sbb das les ja (bad) xor adc or sbb iret cs jo inc lea mov dec ja scas xor mov push xor push push push (bad) sbb fildl push xor pop ljmp (bad) add test push or fstl xchg (bad) push addr16 xor pop push popa push cmpsl addl xchg sbb mov mov or adc std push jb and out jmp ror sub mov (bad) inc dec mov arpl mov push (bad) mov int outsl dec movl sbb pop sbb nop (bad) dec and jl sbb fcoms dec mov jge cmp adc dec or mov movsb cmpsl fldenv mov sbb sbb and push mov pop xor push or inc mov ja js push loope les and pop rorl stc or adc je jl in push jo or sub jmp aad outsb or push cli xor push cwtl add js insl cs outsl (bad) mov adc andps rolb push dec cmp sbb push xchg aam mov (bad) jns mov and (bad) in add int fldcw add or jns lock sub push movsl call in mov pop ficoml sbb ja inc sub mov or inc incl std and rcr pushf cwtl sbb mov popf out into nop or dec (bad) mov sub sti mov add add sub faddl aaa call neg adc clc shl add fs pop or repnz adc add repnz and and and cld cmpsb or enter push sbb mov or pop xor and and es jne mov mov jp adc push mul mov ja pop (bad) inc pop sub pop or pop adc mov in xchg cmp and inc loope mov movsl das or mov lahf lret adc push mov xor movl nop sbb push and mov mov xor gs lahf hlt fimull sub or inc jecxz fild ret aas sahf push xor or mov add adc add jne sbb ss cmp mov movsb jmp in out mov sahf or pop or add pushl cmp pop or mov repnz ja or or mov push xlat negb mov dec mov inc mov or mov sub mov cmp into pop shr mov pop cmp sub ret shl mov add aaa sub dec dec in sub push inc mov adc sub add (bad) push adc or pop mov add or xchg andl or dec mov (bad) xor push das add mov mov into dec shlb xchg inc adc sarl fist adc scas sub cmp rcrl fbld push mov shl and dec repz addr16 cmp mov sbbl push (bad) aas cltd mov lea and push sbb dec lock sbb in jno xchg test ret cli pusha js clc or lea add push jo xor movl daa jbe mov xor push aam jg mov cmpb jne jns cmc fidiv jnp cld lea fsts or int3 push mov shr or push or ljmp sub lret bound clc test dec add cli ja cmp je leave push push jmp fs jmp idiv pop sbb inc add mov shl repnz adc mov mov xchg xchg adc (bad) ret test lret js and repz clc testb sbb and cmp cmp push add add mov cld shl je add or push xor mov test sahf pop sbb sahf inc inc (bad) ret push sahf cmpsl mov leave cmpsl adc fcoms and cmovno lock mov lock rolb je push sbb jecxz add loop test mov mov rclb rcrb xchg lret sbb cmp loop mov cmp js add adc inc shrb or call ds pop and xor jp out mov sbb aas xor test push adc push movw mov sarl (bad) dec mov cmp add or xchg mov icebp pop rcrb arpl add or loopne out add mov cmpsl rorb outsl mov mov jno cli mov sar cmp jl push out add or jmp dec and mov mov add mov test arpl (bad) adcl jo mov and subl sar cwtl dec mov mov mov loopne mov lods sub scas add aaa js dec xor adc mov orl jmp sti pusha xchg dec mov jne rorb test inc lock scas add lahf add sbb dec daa inc fdivl sub popf roll jge ret or ret jb sbb ret jo xchg add icebp sbb push sub dec (bad) fdivrl mov pop add mov sbb mov lea jp adc mov popf ja jge mov jg mov adc (bad) jb jne mov mov inc sub scas mov jne sub sbb sbb push push (bad) push shl mov xchg push les mov ror (bad) xor mov cmpsl dec and cmpsl daa andl mov adc inc mov push sub mov mov cmpsb int3 mov add mov mov popf mov fstl cmp xchg imul mov xchg mov sub movb pusha fcoml invd mov xor adc jl movl lds fwait lds or cs ds jg and inc jmp (bad) xor push sub clc push popa pop inc cmp adc adcl xor insl and test (bad) (bad) mov iret add sub and (bad) pop lret or ljmp inc rcl (bad) cmp push lcall les fs push insl mov lcallw add ss add push xchg clc in sub test test mov jno mov cmp inc loopne jle dec xor insl cmp cld dec sub popa add push ja out jg (bad) fisub cmp sub mov call mov push pop out add mov pop and dec mov test mul dec scas and jne sbb dec test and add jo sub push mov dec xor adc add shl push sub dec movb jmp ret jl sub jp xor dec (bad) leave je push push dec or mov mov pop sbb and add mov rcrl sbb out lock cld inc lea xchg push dec and pop aaa sub cmp inc sub and inc ret daa nop in adc sarl xchg jbe jne dec rorb mov jge ljmp outsb or mov adc push enter mov dec (bad) sbb xchg mov mov sbb jg sbb (bad) cwtl push aam sbb push clc jbe pop push lea clc xchg dec add cli mov (bad) je cmp jge add lock cmp cmp je out ja adc xor jg sbb pop adc out leave jne add push add or xchg add sbb mov or mov jno decl jle adc loopne add bound jle psllw adc sbb mov inc sbb js and pop mov xor mov sbb push mov js rorb jle add inc mov inc enter sti add jle inc push sbb rorb and add mov rolb dec push push mov add sbb aad cmp dec and pushf fcomps dec pop and pop mov pop aas loope xchg push xchg imul xchg rol mov xchg mov cmp loopne add jns push fstp outsl or jmp inc xchg pop cmp xor and out push je and ret jge xor dec mov mov outsl rorb jl cmp jle sete pmullw outsb dec push mov sub sub dec aaa inc add mov sub iret loop lea xor mov ds roll aaa dec push stos or cmp or add idivl inc rclb adc data16 inc adc push cli inc or jle inc test sub std out in imul pusha sbb inc icebp out cmpsb jmp daa mov cli or (bad) push add nop stos loope mov and or repz stos inc scas in mov mov ret subb (bad) jbe cmpsb mov pop stos and push fcmovnbe jne mov (bad) jmp movl add into dec outsb and pushf dec add ret xlat ret sub nop scas out test cmp push test (bad) ss cmp sub pop and mov inc test cmp decl (bad) mov push push xchg add imul (bad) je test shl insb sbb stc pop nop push adc pop inc nop loope or nop lret dec cmp loope mov sti xchg (bad) xchg add or gs sub fisttpl mov out xor add popf push cld inc nopl mov int jno fadds sub push int inc lret cmp int cmpsb mov or test and outsb push sub mov lock out adc pop xchg jmp loope lods jo add push in loopne xlat dec shrl xor lods sub xchg or shll fidivr lret adc cmpsb inc add (bad) xor cltd xor adc cli dec cmp lahf adc mov mov shr sbb push push jns push jecxz mov pop lock add sub ds (bad) cvtdq2ps popf (bad) sbb roll rcll mov jne iret inc mov adc and mov test adc mov outsb nop subl inc inc add (bad) add pop out sub jo or lret nop xor nop sbb sbb mov mov ret ret inc push cltd xchg les jmp xchg sbb xlat imul pop pop and pop pusha add sbb std inc shl cmpl repz (bad) xor jns cmpb cmc push lahf dec sub cmp mov inc mov xor mov inc shr cmp pop setbe mov popf js mov mov scas clc mov out or shr shl dec lret shr mov mov inc add add sbb xor test movsl mov adc mov push inc jnp arpl sar or or push sti cmp jle xchg pop inc add or jle (bad) mov inc dec xor add (bad) sbb sbb (bad) pop rorb push adc and mov aam adc mov inc not lret xchg and jbe not cmp mov bound loopne xchg dec aad dec into lods icebp inc cwtl pop lea leave popf mov add add inc cmp inc dec mov out push aas and xchg (bad) adc push shll adc xor stos mov js pavgb dec adc mov jecxz addl xlat and mov das mov adc dec and mov inc bound add int3 dec mov dec cld cli push pop jo xor adc movsb testb inc pushf add or lcall mov mov fwait aam mov dec or or sub jbe sbb sub invd inc rorl cmovbe push and inc cmp add je jle inc and aas cmp adc sbb dec pop add pop scas sar sub in dec adc sub outsb push inc or fadds fldt rolb clc ljmp xchg jne cwtl test inc ret loopne push push les jp aad sbb in fstpl inc outsb sub or sti outsb sbb push lea xor lods and lock inc mov shrl jge outsl adc xchg sbb adc pop test (bad) rol je mov movsl push call sub cmpsb dec inc inc jne jne adc inc lea xchg out and andl ds mov dec add addl xchg add sbb add fldcw and mov loopne in add ret ret nop aas mov test mov add mov add jnp sub sub dec jae adc lock mov hlt lahf sbb dec ds jb adc (bad) xor mov add aaa mov mov inc sub mov nop clc fs addr16 mov es dec ljmp fisub mov push or out xlat pop clc adc jo jb jbe fs and in pop fsts adc mov add jae cmpsb ret jo mov mov inc push mov mov and ja mov lock jnp cmp cs pusha mov jo add adc cltd fnstcw inc mov aad or mov aas pop inc sbb dec jmp sub pusha addb je inc ret mov lret ss mov or inc or je cmp adc test sub dec bswap jle mov fidivl movsb push lcall xor adc push pusha jg cmpxchg into push push jne sti pop inc cmp jbe ja jmp inc dec mov cld xchg lret mov lock in int3 gs int xchg pop or fstps push ds adc xchg sub imul fist dec cmpsb (bad) incl inc mov imul adc add push push (bad) loope pop xchg pop or mov add add lods mov adc outsl loopne imul dec out fdivrs (bad) test scas lea and xor lods and sbb push lahf adc sub (bad) outsl sub insb fs std orb push push mov lods arpl nop pop pop jns cli jbe cmp je cmpl or pop cmc mov push cmp inc or sub enter lods and out push cmp (bad) adc pop sahf out sahf pusha fs add jns jl mov mov add mov test jne push out dec add jne cli sub add mov mov call add jmp mov jmp sbb cmp xchg ret movb jbe dec jmp (bad) jae mov insl loop jg cmp jne dec sub cmp jne cmp mov jbe or mov mov adc xor cmpsb ret add and clc jb lea or mov push sub lret push pop adc inc add (bad) cwtl fdivrl in je xor add xchg dec pxor lret das jne mov fidivr mov mov (bad) jns sbb inc mov inc mov clc sahf adc inc cmp jb cmp repnz xchg outsl add cli mov in and loopne (bad) lea sbb add inc push cmp (bad) cltd add shrl lea mov (bad) mov mov fsts mov dec test mov data16 push insb push push sub mov mov adc inc ss les sub fisub test fldl int ret jle cmpsb xchg dec cmp test adc js push push and sub imul les (bad) cld sbb or mov jge (bad) pop sub sub in mov popf (bad) dec mov (bad) add jae mov add loope (bad) push jno add mov mov lea pop je xor test sarl mov inc imul sub xchg push inc mov xor mov shr mov xor icebp sarl push sub mov je jmp dec ret xchg push xchg pop pushf ret cmc or sub sbb xor cmp adc pop sbb shr jle roll jae mov incl loop add push inc add neg and shl mov sbb cmp xor inc inc mov unpckhps movsb daa sub cs push scas push add or jae cs cli dec push mov aad fsubrs xchg cmp out in std scas adc xor shr push jne jne movsl sub lods and mov pop jo (bad) lea mov add sub push clc push or jne sti (bad) sub rorb adc test mov sar aad inc cmp jne xchg xor mov dec lock or add sbb (bad) dec mov cmp js sub inc sub push lods out mov pop test in jge jo xor sbb push xor add sbb push push push (bad) or add subl (bad) rorl ljmp jecxz sub mov nop cwtl jl mov push es push test ja xchg jne dec bound sbb cmp xchg pusha orl stos fild outsl das call inc sbb call jns (bad) sti jne mov insl inc cld je cmp and pop inc int cs push aaa fs je test dec and inc pop or cmp xor mov mov add (bad) adc scas movl adc adc ret jg popa inc cli add imul inc or std fdivs sbb sub sub mov lcall and andb push adc sub dec test aad dec out inc mov push push enter movsl jo mov out int imull je dec nop mov lret adc sub std sbb add adc rclb jo mov add inc sub xchg sub xchg inc lcall loopne add pop mov faddl lret outsb jo gs and mov xor jbe cmp xchg push (bad) adc imul xchg push and xor (bad) (bad) push clc inc sbb incb sub dec inc push jecxz cmpsb jmp mov sub lahf sub insl pop xor mov mov add test data16 cmp (bad) mov add or inc cmp loope insb push jge mov cmp lret into lea mov mov dec add ljmp fcomip ret adc or (bad) or std pop add add jno call and sub imul add pop out ljmp dec mov (bad) adc loopne cmp push adc sub sub imul ja stos cmp aad inc cmp pushl mov xor sub adc and add push or jg mov icebp xor inc sub cmp pop mov mov sub add sbb cli mov out cmp jbe sub (bad) int push mov inc inc dec jne xchg pop jbe pop dec push pushf fnstsw jmp sbb sub cmp outsb and or mov cmp lahf add push mov cmp fisttpl ds sbb mov inc rorl add cmp sub cmp add (bad) fsubrl mov mov je mov fadd mov push pushf aam fchs (bad) cmp push and mov lods outsb inc sbb push ss or and dec or cs mov jnp adc sub and push and je scas add mov in cs mov sub out cmc mov imul mov mov daa ret push sub inc int add xchg lods add xchg mov xchg push push mov stos pop pop add rorl jle dec test mov push sarb cli jb cmpl adcl pop and out dec pop pop push push popf mov or fbstp bound scas adc mov sar and push jne test cmp add or loopne enter and test push pop in or and mov mov mov pop sti inc add scas adc cmp push dec add sub add xor xor cmp mov jnp pop push push dec inc cmp insb cmp xor mov in sahf out fimul in in lock out lock hlt clc clc or out cld lea es clc (bad) cwtl lods int3 inc icebp shlb inc mov sub popa mov or and ret push andl push lea jl adc or clc mov out adc neg rol and mov and pop nop and dec push jo add inc xor mov mov push xor lea push out push lds push nop dec dec addr16 mov gs mov push int3 push aam mov repz in hlt pop es out faddp sbb sbb sbb adc out sahf adc adc or out or aaa mov jnp inc and sub cmp pop lds outsb push inc add fmuls mov sub insl sub add or push in imul hlt sbb test push bound push dec inc sub xor je sub mov lock add mov mov cmpsl adc ficom mov cmp ljmp sub test jo mov cs je icebp pop loopne push fistp sub (bad) (bad) sti fildll fimul test pusha inc jne test xchg scas cmc pop jae mov jecxz pop rol push (bad) jb push xchg dec testl or inc je sar out push dec xchg cmp rcll mov pop outsl out push mov push xor test jno sahf pop jmp daa push xchg pop rcll cmp loop push dec add fbstp add ret andl or or mov or and incb inc push or add out or in outsb push popa sbb jns push add ret in add into adc push pop dec je jbe xor mov ljmp fmull pop pop push add es push aas fstp rol dec out inc add adc xor dec mov adc addr16 movl xchg sbb sbb sbb movl mov inc push cmpsb int fisttp cmp clc inc push inc sbb mov or push (bad) lret add adc iret inc ret add jle add mov sbb add sbb out or push inc movb add sbb dec insb mov and aam xchg cmp xchg adc mov sbb jo pop dec push std std and cmp mov aas add or xchg neg imull jne subl les jmp mov mov add mov sub push xchg decl test add add fidiv xor and push add jle fild pop mov adcl mov and inc lock and mov lcall push xor lock std mov daa cmpsl mov mov (bad) sarl repz pop sbb fstpl fwait sbb es mov je outsl adc pop adc insb jne sub push and cmpsb bound xor sarb add ja xchg mov pop mov icebp add pop orb pop cld imul dec stc xor clc or dec dec imul popa mov test scas inc lea addl ja add ret pop shrl dec mov xchg inc loope cmp push push xchg fs push call push inc test push enter insl test iret repz cmp xor and add mov (bad) js nop push inc test lock mov pop push test ficom push mov lock ja mov or push mov push clc cmp (bad) int3 aam sub add fiadd add sbb loopne fdivs push loopne add pop jae aad nop xor or enter or in enter cli out add in mov and mov xlat (bad) pop inc cmp ret mov mov xlat jne out add push imul push lea sbb pop popf out (bad) and xor repz and fwait adcl lahf inc rol ljmp jmp and xchg lcall inc fbstp cmc sbb aaa adc stos mov adc push cmp jl decl js mov mov jmp mov int sahf lret (bad) in aam scas outsb and pop cmp jg mov js in mov setge dec dec les or das outsl cmp adc push nop add dec push fucomip call pop in dec sbb cltd or or add dec or mov pop cli and mov cmp je movzbl add sub ja stos add pop sbb fisttpl mov imul add sbb pusha inc dec add jns xchg add add adc scas adc loopne dec pusha iret sti jg mov cmp je pop add fwait pop enter add cmpb push xchg in (bad) xor pop pop jb add cs or or fwait jb mov or and enter pop or cmp pop loop or pusha out rorb pop or mov mov push xor cmp ja lcall adc xchg add push pop adc fwait sub cmpb adc seto out adc (bad) lahf cmp pop ret adc jb fiadd adc cltd inc push nop aaa adc addr16 jns push pop xor and sbb fdivrs or iret in repnz sbb add sbb mov (bad) sbb ja jns pop mov jb dec rorb sbb jge add jns sbb add inc pop pop fs das or jne add add sub inc xchg or addl add cmp xchg sarl and push in push in jno repnz mov adc in xlat repnz aad in in add mov ret dec sahf out push enter mov je dec mov fsubrp push adc fidivr bound xchg add sbb ljmp jmp out in jns push imul inc push nop ja inc in sahf out addr16 jns jge xor and lock pusha xor xor inc jmp pop enter repnz add in out std repz leave std hlt hlt (bad) aaa jb sahf or fwait mov sbb cmc inc jg testb add negl popa push clc cmp clc cltd adc inc stc inc sahf lret add cld cli cli mov sbb iret sti sti sbb stos cld cld cld je cld push divps mov repz repnz sbb incb je mov jmp inc or sub ljmp roll scas lahf (bad) jb pusha inc shl repz dec in or xor or mov stos cs inc fsubl push or inc mov stc daa xchg sti add dec inc out out cltd leave and dec sti inc xor insb nop out pop jmp jmp inc pop xchg pop (bad) in add cli popf cli nop cmpsb jb sbb pop and insb out cltd push lock das xchg inc das cli push cli cmpsb jb pusha sbb pop insb nop repz sar mov stc dec adc stc sbb mov jo xor clc add repnz stc out clc push lret sti lea popa cmp scas enter inc orl mov dec dec push inc ret std and test cld sub mov fstpl jno push icebp mul pop (bad) testl mov out xlat enter cltd (bad) out enter inc mull imull sti imul (bad) adc dec sub sbbl insb out out add inc notb xchg test cmp nop negb dec push repnz pop inc push mov inc xchg add lds adc pop clc cli pop jo jno sub add mov jo hlt inc pop jo pushf and mov test push or xchg hlt inc jne and (bad) add dec pushw (bad) data16 hlt std adc inc push (bad) ljmp adc sub push loope loope loope loope push jno cwtl repz loop scas repz cmpl dec push in enter test jmp or repz push repnz sbb imul call cmc xchg repnz xorl inc lcall icebp orb and cmc nop pop pop daa add and push cmp sbb ret icebp jns jo xlat mov xchg icebp divl test or inc push icebp pop test cmc cmp cmc add cmc xor inc ret jbe fstpl imul call cmc push lock xorl sbb push lock test ss add imul negb push sub out movsl ret inc cmp ds add in cmp add and add jp xchg xchg rcrb inc lock jne dec jo adc dec add ljmp dec add pop faddp pop dec rcrl or mov mov cmp pop cmp push or inc cmpsb inc push out aaa into pushf adc fwait cmp aas sti inc insb fidivrl iret repz ds insb iret ss scas cmp ds inc jge out out and push popf cmp scas jge out add das lahf xor jae jg or cmp adc xchg rolb es push shrb inc bound data16 lcall jne mov mov push inc scas and mov fwait clc mov je push jbe cmp cld adc xchg shr rol push push inc mov add mov or pushf mov fs mov sub mov hlt lods sub dec pop mov cmp sahf push insb add ja hlt push push cmp inc sbb push inc add fdivrl sub and (bad) fadds add (bad) mov lock or rcr pop sub mov ljmp sbb push or nop push orl push inc cld (bad) hlt pop add jae loopne sbb in adc or and jb mov cmpsb add fdivl sbb sbb mov movsl das repnz std outsl inc mov dec or insb sti flds sbb or inc xor pop push inc pop and pop imul xchg xor add pop push push add cmp ja (bad) movsb (bad) jne popa inc test lret add dec mov mov imul lahf ss call push je mov xor adc int inc sbb mov popa adc add lods enter nop call jg (bad) cmp jbe push pop mov jae fisttpl (bad) jne in or xchg or scas imul icebp mov push out rorl push nop cmpsb cs loopne imul fwait scas or test lock push cmp cli sub push jne xchg inc jle jno push cmp xchg and dec loope push push and lcall es sub pop daa popl les ret push out stos adc add call pushf inc (bad) aaa or rcll (bad) or or add jl dec lods or mov inc mov dec inc rclb scas xor loope push cmp sub cli cld lock cld pop cmp aad mov pop xchg cmpsl (bad) (bad) leave dec or mov popa js jne inc std mov gs test push pushf xchg pop adc inc lock (bad) jmp insl inc sbb sub nop push outsl dec mov scas test (bad) cli mov pop cltd lea and pop sbb nop push push dec sub stc mov add outsl push push dec adc push and jl repz xor push dec and push jg mov inc or jbe jle xor clc out es jg jg jo mov jl pop fnstsw mov jge (bad) sbb and or dec or adc cltd add xor lret bswap and clc xor sub dec or mov or jne cli into jg,pt test and add sub push pusha inc pusha adcl (bad) out sbb pop pop call xor add dec add sub pop imul jb clc lock rep sub push jge jmp (bad) jne faddp rol xor (bad) dec in in push jnp cwtl or and or mov or pop mov and xor mov pop cld (bad) jp inc mov mov andl xor in int3 jge adc out dec out or lea fildl nop aad inc push cmp sti inc lods inc inc (bad) jo test sub or adc clc loopne cmp and push hlt or sbb add sub add gs das push sub fiaddl aam mov shlb hlt rep xlat cs adc pop scas lock push ret push call add sub push push aaa cmp sti dec invd (bad) sbb leave add mov loop inc fwait bound pop jle jmp jg jo (bad) enter add xchg cli aaa loopne cmp inc adc jl sbb pop cwtl dec adc leave in inc jl xlat or xor inc adc cmp jb dec push and lods mov hlt or clc je dec xor pop jnp ljmp pop push cmp (bad) xor sbb cmp mov in mov test inc stos out and loopne sub push mov inc cpuid (bad) js or add and inc dec or xchg pushf push jb adc and pusha jge xor cmp mov inc mov in cmp cmp mov mov je push rcrb or je or (bad) and push nop clc add sbb call sbb add das popf js test mov jne sbb xchg mov sub and jo xchg or add jle mov mov mov fist cmp imul mov pushl cmp xor cmp and jno push outsl add add sub fadd jb push out add test int3 cmp mov xchg push or push movsb pushl cmc sub push pop cli daa mov dec add jmp jge adc sub rcl aam cmp mov outsb cmp ljmp shrb iret outsb call cmp in sbb icebp inc push in dec pop cmp cmp push cltd jle or dec jae adc cmc pop push pushf xchg movsl inc or fstp mov jbe push push mov pop cmp sbb or jmp dec sub push mov dec cmp xchg outsb lds inc pop or inc or mov jb rclb outsb sbb push jb mov dec sbb popf push out in cmpl rorb or xor mov adc mov int3 inc xor cmp stos divl (bad) pop ja push jmp inc pop and xchg (bad) mov inc call inc mov fistp shl mov stos mov xchg call add addl dec mov orl jbe jmp iret pop rorb jnp negl or pop jne cmp push push sub dec pop xchg cmp push push clc jne test add mov dec (bad) jb sbb jnp (bad) sbbl sub xchg je mov pusha jo xchg andl (bad) es and loop rolb push and cmp dec push or xchg test aas lcall ret jne and (bad) jge jne push push xor sub lock push sub pop sub insl push mov loop test push xor and pushf rol mov int rcr push push jg adc and xorb jp jo mov jb or inc imul mov div enter adc rorl jmp sub into jne sub ja add push pop fs and in and sti pusha pop fimull insl movb inc cmp mov (bad) (bad) mov sbb mov pop test and or bt in inc push inc insb jmp (bad) push (bad) or mov and fiaddl rorl (bad) divl (bad) mov fnsetpm(287 push bound aad xor add jmp sub mov add pop out or sbb sbb adc mov in adc movsb sbb loop sub add push push cwtl je pushf sbb fdiv adc ss jl push xchg jmp ds into in lock addb fcmove xchg pop xlat mov pop pop pop adc mov addl mov inc pop sub test daa dec inc enter mov add or imul fisubl add leave cmp or sub mov xchg or addr16 sub push pop imull push inc cmpxchg xchg shll or push mov and mov push sub loop fcmovbe add fidivl lds rolb (bad) clc mov stc xchg aam push sti lock (bad) jecxz pop pop ja ret int3 or mov fidiv inc das shlb xor mov lret xchg hlt nop sub fimull fildl add xor pop add push mov or aad int3 shlb data16 dec test push imul (bad) lock push aam testl cld je lea xor pushf lea mov xor out jo fisttpll inc adc pop mov or call sub or shlb jmp je add sub cmp insl cmp fidivr xchg sti mov push adc test adc xor hlt adc xchg and push ljmp mov jo cmpsb push adc aaa xchg sub or scas hlt outsl xlat jmp or das mov mov inc dec inc loope or dec movsl or jmp adc sti ja xchg jne pop out mov push add loop fiaddl add sbb (bad) push add cmp je dec jne mov cltd push mov sub and cmp mov popf into icebp xor stos mov add cmp mov fstpl add add loopne xchg adc mov cmp mov push imul inc push cmp or and lds sbb dec test push fist fnstenv cmp (bad) jae aam xor int jmp dec push jo test or jbe (bad) mov jmp cmp sbbl pushf or add repz jge mov push addr16 and lcall jge add mov mov add xor xor adc testb outsl clc xorl in dec mov lods test pop add nop inc ficompl ret adc std cli inc call je jge mov es or cs mov add adc jmp mov add cmpsl outsb dec lea jno dec add add lea stos add pop rcrb pop sub mov mov inc xor mov sti mov adc xor fist push push lea xor inc clc out mov mov test sbb jbe mov mov xchg lods out cltd mov (bad) neg insl clc jb mov push movb pop mov mov add pop and add enter into lea push add (bad) inc mov inc insb fsubrs pop mov cwtl enter mov mov aam mov sub lea int3 mov push bound dec sub mov inc add es outsl dec fimull mov mov pop rol not je orb mov and dec in je and mov dec jmp movb xchg cmp lahf jo sub cmp outsl adc push sub lea cmp ja xchg push hlt scas xchg push mov jmp cli and and sbb adc lods out push insl loopne cmp mov mov stos mov pop imul insl jl test clc mov icebp inc jo sbb mov shrb inc push sub or inc stos aam jnp sbb push fldl cmpsb and jno dec mov jp inc push inc or dec loopne mov add dec pop test xorl sbb movl cmp je rcr orl pop dec bound inc mov jmp push out mov xor inc add jmp ja or mov cmpsb leave and mov xor mov test jmp js push mov fadds jg sub shlb mov (bad) push lock lods (bad) xor add push jmp and mov jbe mov and lock test push mov sbb xor inc inc aad add sbb imul (bad) clc xchg out movsb inc jnp xlat iret fwait mov sbb jp pop leave inc dec loop cmpsl (bad) bound xor clc adc pop lea mov pop mov ds jmp loopne lods ja fild cmp jbe gs pop xchg inc inc cmpb shll xlat add jle (bad) or das lock movl push pop add add mov andl loopne btcl inc dec jne mov inc mov add rcrl divb xor rorl inc or inc dec jne fs jo mov test add jnp or scas jmp cmp or test mov sub lock and push mov (bad) add add jmp sbbl add pop js outsl push mov add rep andl push sbb dec arpl cbtw mov fdivrl push ret cmp fcoml (bad) inc adc sbb aad add subl (bad) jbe sbbl mov jne xchg clc add dec add int3 mov jle fiaddl sub jmp xor inc sbb dec sbb mov add sbb incl inc jo insl adc cmpsl dec rcrb daa push push push popf (bad) xchg push aad xor and test cmp daa mov pusha add xchg scas lods sbb pop cmc jo push and pop inc lods pushf mov mov dec maskmovq add mov push je cmp dec or je cmp daa js fidivl sbb mov jbe jae adc (bad) xchg mov mov das jnp fisub jo inc inc sbb mov roll fcomps rclb sub and rcrb cwtl ror jecxz ret cmp rol push test jne push mov aam imul clc test loopne pushf xlat jp cld or cmp mov add pushf nop add dec jne out icebp fs sbb aad call imul scas sub push sbb mov sbb pop inc sti (bad) enter mov das cmpl or pop ret adc fdivs (bad) mov or mov adc nop add dec les xor popa movsl mov push xor je jae mov je mov push and push gs jge test pushf xor sbb jo xchg push add sub (bad) and mov xor sbb das push out jmp mov pop xor add sub cmpl dec repnz cmp jbe int3 push mov cmp pop rclb jle and inc (bad) add push pop shr mov push adc or jg adc mov sbb cmp jne or and adc cmp (bad) imul jge inc mov fimull add push mov mov fnsave loopne mov test and aas mov clc or lds dec xor (bad) mov scas cmp jle push cwtl (bad) mov mov hlt roll test repnz int3 mov ret ljmp out push out loop and sbb (bad) inc pop lret pop mov mov or inc cmp xlat shlb daa add cltd and push push adc insl sti daa (bad) inc or je xchg sbb or psubq dec adc dec test add cmp lcall (bad) ror cli push push jnp or insb jle sbb adc push inc add sbb push pop dec imul push xchg push out mov mov inc adc movsb push test fwait cli fs adc rolb movsl cwtl loop xchg sub ljmp test mov shrb xchg lea inc fcmovnu cmp add icebp arpl jo pusha nop adc ret call push sub xor jle mov ja add adc ffree pop fidiv test clc call ficomp sbb bound mov and sbb sbb mov (bad) loopne pop popa outsb lock xor inc pop and push push ljmp adc add or roll push or inc sbb lea loopne dec cld xor cmc xor mov cmp dec loopne ds adc lcall lcall aaa add int xchg inc orl (bad) stc sub in push adc push pop inc xor ret inc std mov add cmp ret mov aas outsb inc es xchg push mov add or dec in (bad) or lods adc mov pop push mov adc sub adc push or add imul imul jns dec sbb xorb mov inc adc dec cli mulb jmp movsb out subb inc cli or xchg aam cwtl clc push stc cltd mov xchg popa mov sbb loope dec push lds mov cmp scas pop add bound mov and inc and or or (bad) push mov das loope insb shlb mov jl notl cmp jne decb mov pushl cmp fistpll adc pop fisubl mov or movsb jmp in mov test cmp mov orl and mov jge or inc add sub add rcll adc rorb shl mov pop pusha xchg add sbb fsubrl add lock into sub mov or fsubr mov push fildll add inc js pop xor pop aas rolb aas pop jl out aad dec call adc and pushl or imul fdivl enter pop push inc or (bad) scas jmp xchg and incb pop pop gs je xor shlb push test sub insl cltd cmp out sub decb adc jbe test ret add inc (bad) cmpsb add pushf daa test pop inc jne imul dec pop fwait test imull add sub je,pt pop lods outsl jo sbb clc dec cwtl je mov idivb push push jae test adc subl mov cwtl je or sbb loopne pop cli add inc add sub push sbb outsb push and push xchg xchg outsb and adc and ljmp push add or add add xchg pop psrlq dec jmp leave pop pop pop fstpt loope (bad) insb pop std sub pusha dec sbb call test xchg adc pop leave pop jl jne mov data16 aaa fwait in (bad) mov push inc insb gs xor loope test test add or xchg mov cmp in cld push cs inc andb lcall mov push mov aaa lea shl fdivr adc nop mov fcoms aam ficoml outsb add mov push add mov pop dec aaa mov xor inc dec xchg add loopne ja hlt sbb jb or push cmpl sbb std cmp scas cmp fcomps push inc jmp add mov mov lcall ds cld or jg or pop fldt testb dec mov fcmovu les jg jne inc push jmp dec push mov (bad) sub (bad) outsl inc inc jae adc loopne aas mov adc xor sub fisttp jno cld mov xchg add mov icebp add outsl std test sbb push mov dec pushf aam fcomps lods loop enter imul sub in jo jne sti inc push or cmc sbb pop movsb mov ljmp int3 iret outsl pop jnp mov leave cmp mov add mov push fcoml in jno mov cmp divl mov mov or inc loopne pop shrb int push out scas mov cmp mov push mov clc add or ja bound pop js orl pop cmpsb adc xor jge push sub rcrl xor mov or mov movsb add test jb or jae in add cmpl cmp or push ret cmp mov push outsl js (bad) enter xchg add sbb enter ror push outsl repnz or sub orl xor mov push call outsb outsb mov dec or cmp leave sbb pop test push inc xchg mov sbb daa adc mov mov push loopne out bound dec mov add cmpb dec and xor jg (bad) cmp add push stc pop sahf outsl or add and adc cs push cs sbb push lea (bad) push cmp inc cmp scas rcl dec jns data16 sbb mov insb pop jb je sbb jns test or add mov rol xor sub mov mov sti push jecxz cmp int3 bound xchg mov fidiv wbinvd sub sub mov inc jmp mov push mov mov pop divb addr16 iret xor test mov ret fstpt cmp or mov jle and mov (bad) jecxz xor mov mov add sahf add test jl add movsl test push inc mov test mov or mov stos lahf xchg pushl dec inc nop (bad) call inc cld pushf push pushf push sbb rcll lods imul out lahf icebp adc push aad aam adc cmp xchg out stos mov rcrb jbe stc mov mov jb xor push or sti jl push mov xchg add test jno sbb cmpsb imulb clc imul mov ss add adc jno imul hlt inc mov xor test fadds push test push or adc aaa scas bound in or sub jno xchg je jecxz mov xchg ret shll (bad) addr16 dec aas (bad) cli add jle mov mov jle fiadd push cmp aam mov add mov or pushf pop jnp cmp lock mov inc add sub dec xchg dec ret sbbl (bad) xor or pushf mov and and inc jne jne cmp mov dec ds jge pop enter sbb ds jne arpl mov mov jbe jmp cmp mov mov mov add push add and and enter jnp lods addl rorb popl pop mov imul lahf or (bad) cmp inc jno push add fldl inc or or mulb je push test and mov jg jl jae neg es neg jae nop enter adc cli fistpl push xchg xchg adc pop mov (bad) or jne and (bad) ss mov lods call lds jg xor cltd push adc xor popw add and lea jae movb sub int3 mov into cmpb cmpsb pop std es add inc jmp mov ss inc in jmp dec push or push enter cmp sub (bad) (bad) sar nop jp mov aad dec xor in repnz je push inc xchg popf sub mov test fisttpll adc add enter stos push sub sub pusha or insb inc jnp inc (bad) in aam mov jmp mov xchg mov scas fmull mov push stos adc dec jne lret out dec data16 scas ret mov cmpsb fmull nop push aas sub js jle push inc sarl cli xlat (bad) jne xchg add add pop jg jmp mov imul sub and pop divl mov add inc dec sub repz adc sbb push or dec cwtl loopne mov xor sub fwait lahf fmuls xor leave ret fidiv addr16 cmc inc add jo push xchg int3 add out jns or push or std add add inc push out ss adc and and cmp movb pop je sbb fisubr mov xor cmc inc pop test sbb adc add out mov or xorl jge cmp add adc sub and pop and es dec jbe adc aas or test cmp mov or pop popf js adc mov dec xchg jbe sbb ret push or jl jno jns stc inc (bad) movb jno (bad) insb frstor push mov ficompl dec orl xchg pop jo aaa dec lods inc inc cmp jbe sbb jnp add push mov mov sub insl js fcomps ror jnp inc push loop or incb mov push push mov pushl or rolb adc mov fcmovnbe out mov mov push (bad) add je push xchg and push setl das lea adc or mov mov cmc mov pop mov push push push push adc das xorl insl sbb push pop mov or ljmp fistl mov ret pop ret push jae xor sbbb pop or xor adc cmp jne outsb and add (bad) mov mov (bad) xor mov adc pop push cmp inc or jg mov stc cmp jge imul mov andl sbb mov add and sarl (bad) mov mov cmp or mov push and pop pop cmp test pop orl nop sub cmp lea cmp jmp pop pusha mov jbe mov jmp fnstcw dec clc xor jo or xor leave adc es cmp or (bad) sbb xor (bad) fwait rolb cmp ja stos orb cmp (bad) call jmp pop push or lea rcll scas jne out sub imul mov mov movb xchg test adcl jp roll push add push inc add shlb hlt cmp cmp push jmp dec pop xchg popa push inc orb jp outsb sub pop cmp push pop mov test and dec cmpsl fild loopne mov add cmp jne mov fidivr adc mov int jne pushl and pusha cltd test decl shrb mov mov mov xor subl mov mov cmp adc mov push adc cmpsb cmp pop (bad) pop sub or sbb inc xchg adc xor add or inc pop fildll incl mov je inc (bad) dec xor cmp je or jne adc cld (bad) movb pop in adc insl add adc push sub dec jmp xor mov cld pop cwtl mov cmp inc adc add insl push mov pop je pop es stos fldt pop jne int mov cmpb (bad) lock xor pushf inc cld fbld sbb adc add or mov cld mov cli je or add je cmp mov mov push jbe leave or int3 push pusha jp into inc add xchg fimul dec insl mov sbb and adc mov push dec xor jne add add pop and mov add xor jnp pop cmp sbb sbbb push jge mov mulb push jb scas sub jae lcall inc sub add mov inc mov (bad) je jge (bad) push push sbbl mov dec pusha imul mov push pop cmp inc data16 xor pop jne faddl mov lds andl das mov or nop xor jae (bad) fiadd jo scas je add or jo mov sub push sar inc push inc push lahf sbb pop (bad) je cmp fisubr cmp cmpb push imull loope test push fwait push popf ret hlt push xchg pusha test clc add jmp adc mov and nop adc xchg roll sti or mov xor inc (bad) iret fstpt push push push mov add shlb nop (bad) xor push ja roll xchg cmp jne pop push xor jmp mov or mov xor xor ret fcomps or or lcall push and or adc inc or push pop add into jo iret es (bad) mov data16 mov cmp dec std push sub mov or or insl pop pop sbb push xchg sbb add nop and sub andb and push (bad) add adc (bad) cld rcl sti out dec pop cmp push mov cmpsl add fistpll cmp mov orb add cmpsl mov dec test jne push nop jg sbb sar and rcll add lock or inc add mov roll lahf jns leave loope idiv les hlt inc adcl pop (bad) or xorl sbb or orb jmp (bad) xchg orl push pop or xor push int cmc push fadds sahf je sarb push add loopne aaa xor or call inc pusha dec add adc sub (bad) popf or push add mov sti add mov add inc inc xchg xchg loop repnz push inc ficoml dec push or cmpsl les jmp inc cwtl push xchg adc outsl fmuls adc shl sbb rorl nop lcall pusha mov adc or jb pop sbb fadds add pushf sbb sub stc dec je push jl dec mov fs adc es push dec mov mov xor adc test and sbb test add and or sub mov jno std or ret je not mov mov movsb cmpb jne lea sbb cmpxchg fisttpl mov fs hlt xor and add dec mov or in (bad) loopne or mov rorl mov ss cmc pushf sbb cwtl adc incl pushl add add pop sbbl mov or and loope push xchg cli jecxz mov into adc adc or inc push cmp mov jl push pop mov push mov mov jnp jmp adc lds icebp rclb subb xor les and dec nopl cmp fcompl jmp push cwtl mov movaps push push jg ds sub push or jne push ret imul sbb sub cwtl jmp push shll add mov sub arpl jne orl dec int ss pop pop add (bad) pop daa mov lea add fdivrs repnz cmp mov fdivrl push popf inc xchg inc add sub insl and mov fs mov insb out ljmp or jl aas add loop mov add cmp add sub and jb mov adc ljmp inc scas clc sub mov sub xchg cld shr mov stos js imul push nop cmpsb mov push or cld inc push or adc xchg push fmuls outsl fwait js test pop or je cli add cmp jge mov cmp jne and pop test and sbb sar inc jmp dec add shll pop mov and and jmp lea mov pushf mov pop test push dec pop add and dec hlt mov hlt or mov pop jnp cs jmp clc and out xchg sbb push sbb sub and sti add lock xor dec pop cmp (bad) fstpl clc fimul andb cmp je add xchg inc loopne add and push lret and add fsts dec loopne mov or jno mov xor dec pop add (bad) pop push push sub jp and sar (bad) mov pop mov dec mov or push (bad) loope cmp jne mov mov inc mov push jae cmpb xchg xchg sbb cmpsl push or pop mov inc dec or jmp dec adc (bad) push mov or scas call mov js add pop enter xchg mov adc cld aas mov inc mov dec or jp push call mov gs push or fdivrs andl add hlt (bad) adc cwtl rorb cmp pushl push adc or and adc std leave pusha mov mov adc push lea (bad) inc add fst std int3 sub mov adc out cmp mov or mov stc mov dec or sub jne sti fs or cmp xor nop aad dec sbb jp (bad) loope cmp cmpsb scas mov addr16 pop push test add test jo cmp push pop sbb push sub pushl push push add inc fucomi fwait orl or jbe incl mov aad stos dec movsl test sub mov adc fcmovnb add inc push mov mov imul aaa fdivrs cli inc clc pop mov add rorb jne adc mov shl inc or repnz inc pop or jnp lea popa daa test adc mov or aas lock xor dec clc incl nop cld or adc pop sub push mov inc cld lock jo scas mov iret dec jne or jg aad add inc add negb repz sub sahf adc mov pop mov mov in test push mov jg clc clc jne or shr shlb sub or xchg inc add or lcall sbb sub pop shr sub rolb cld and icebp push jecxz add inc dec adc mov test jno je inc xchg fnstenv (bad) cmp jle sbb dec cmp aad sbb jbe xchg pop push pop cmp or pop inc sub inc push clc or mov jbe pop add pushf nop mov dec or adc enter sub add insb xchg hlt xor sub ljmp add cmp mov cld out (bad) ja aad cwtl hlt lea jbe mov outsb adc or cmp (bad) lcall push (bad) pop adc int incl sbb adc iret jo and and loop js xchg dec jno xchg pop loope imul cld insb xor add shlb add push cli mov xchg xor js dec int push lcall pop sub pop mov insb pop xor push sar dec cmp pop or dec mov testb jl fwait adc xor cmp pusha nop sets into fdivl jno sbb push cltd dec addl xchg fstps (bad) ja ja stos (bad) (bad) pusha (bad) sub add adc dec into (bad) jl or mov mov dec add loopne adc pop push shrd into mov xchg jae lods into pmulhuw scas or cmp dec bound movsb mov cld dec adcb pop mov in cmc push inc inc sub xor push cmp (bad) xchg adc push push jge push pushl call mulb inc or mov cmp and (bad) rorb sub fmuls int3 mov sbb sub mov test or sub mov xchg push push lock or arpl add adc xchg jns aam hlt sbb or subl idivb pop and rcr roll sbb ret (bad) fidiv mov mov dec int3 pusha inc fcompl iret jne mov dec lret (bad) adc cmp mov pop jmp jmp ja push in out dec mov and jne push cld mov mov push pop leavew or inc push pushf mov sub or loop cmp fistpl lock stos adc shl dec decb pop cmp jge add int3 iret dec test push inc (bad) cmp inc and mov scas ret decb ds in in or sub jae in lea dec mov pop mov (bad) cltd pop dec bound or or into and xlat out loopne loopne jp decb popa das inc mov mov das pop das or insb roll inc or ret mov or inc cld or sub adc inc or push mov sub out or mov push jo into sbb add lock stos fstl test movsb (bad) in jo mov push jne,pt cmp and add sbb lea mov fimull das cmp rcll xor test pop add jae cmp or pop xchg fwait es adc and aam ja pop repnz pushf pop mov mov pushf pop sub je push dec in sub pop call int3 loop and imul testl sbb loopne loopne mov mov fistpll lock lcall dec out sbb in pop or xchg and push dec add xchg mov (bad) mov xchg mov negb inc arpl jnp and fwait add mov scas xor xor xchg fcompl pushf jnp cmpsl test bnd inc and push pop cmp adc imul iret mov xor push lea xchg push xchg (bad) inc xchg or add xorl insb enter and dec xor (bad) mov and repnz sti lock jmp fild test push aad jno add push xchg je roll test out jbe push push and dec ljmp lock mov lea sub or inc test sub jl inc call jmp cmp mov mov roll or js or faddp inc loop shl push (bad) divb mov adc push or mov loop test xchg shr dec or stc jb scas cmpb ret sub (bad) jb lods sarl or (bad) cmpsl mov push add dec jge idivl xchg cmp in clc movl (bad) or lahf xchg inc or stc xor mov and call test add js pop pop leave cmc add xor and ret popf bound xor arpl jo push jo loope xchg and stos mov icebp imul add (bad) jp mov add (bad) jae inc add push pop movsb inc insb add fcmovnb das shlb es or add push inc add pusha repz or adc imul push and scas (bad) xor xchg cmp pushl popa ljmp in (bad) jecxz sub xchg sub je or adc dec je mov scas rcll jmp mov push mov fbld jecxz or addr16 loopne movsb sub pop add mov lret xchg ds inc mov (bad) and mov or mov sti add sbb push int3 aam inc pusha mov fimul mov inc mov inc mov jbe imul sbb jge mov rorb pop mov fsubr fucomi dec xlat pop inc mov xor sub push fs dec jmp pop pop (bad) and ljmp or adc mov push mov adc sbb js sub sbb mov mov or lds cmpsb adc push mov lods inc mov push or add aad add mov je add and int3 cwtl adc mov cli push dec inc adc dec xor decb addl xor (bad) mov loop loope jmp test ret pop in jo pop int cmpl dec sub mov sbb mov jne pause movsb and xchg test sbb fwait jmp push push push push push push adc mov inc dec sbb mov movsb xlat sbb dec ljmp jo (bad) (bad) push push mov sbb cli adc bnd lea lea or cmpl int3 cmp push inc mov cmp mov popl adc pop testl push and stos or or xchg mov dec mov adc call xchg pop inc adc mov rorl and pushl add sub cs sbb mov dec (bad) or pop insl ljmp push inc cmp ds cmp sbb inc push sahf push cmp push mov pop inc aam leave cmp pop mov roll popa mov mov sarb pop jne into push nop and stos add xor push pop dec add notl mov iret cs xchg xchg add add add pop inc add and sbb or aaa dec push sbb sub call xor rclb iret imul loope into sub in push rcll cmp inc scas push fidivrl and nop (bad) jmp hlt pop sbb jecxz sbb pushl lea inc cmp push cmp xchg fdivs sbb mov repz mov mov cmpsl lds adc clc (bad) test (bad) lea (bad) push insb sub mov and mov mov sub test (bad) mov add pmulhuw in or adc xchg xchg fldt sbb xchg xchg xchg xchg sub xor mov mov inc adc jb jb and push jb jb push pop pop pusha jb jb fs jb je jl mov in cmp mov and dec mov xor xor movsb test sub xchg mov sbb je mov lds mov adc je mov insl bound adcl xor adc sbb int3 rorb and adc pop xchg adc jg pop adc cmp sbb cmp je inc dec jne je mov mov add add lret sbb test pop ljmp add push add jp call ss xchg movsb icebp mov ljmp lea insl fmull jae lock cmpsl sub scas or xor sub adc iret pop ret pop jle rolb lahf aad cmpsl jne enter lret rcll rorl jg jp inc mov je dec rorb dec xchg dec outsb out jns gs cmp int3 fmuls xchg pop push push lcall les sbb cwtl add pusha decl sbb pop icebp lea repz sbb pop or ljmp pop inc test loopne test popa add mov pop daa xor inc shlb xchg (bad) rorb inc rorb dec sub or mov call xor call call push clc orl pop push mov add jne iret inc xchg add test test inc test pop addb jp xor test lahf pop add loopne dec jle cmp mov (bad) je loopne pusha lea loop pop cli or lods ret inc jae dec jns mov (bad) arpl adc clc (bad) xor cmpl loopne pop jg pop int3 out shr adc sbb inc adc cmp or cs or pop lcall and or je orb sub (bad) lods je inc push dec sub or cmp sbb loopne push xor rorb or xchg test rorb adc dec jg lea add add sbb or inc add idivb jl pop loopne dec adc testb or or mov cwtl cltd sti test inc add fdiv imul or outsb addb orb lea xchg int3 sub inc mull push nop cld cmp popa inc sub adc mov pop nop sbb mov xchg int3 nop adc movsl add int and mov adc sub pop pop pop jmp add test adc fildll push std mov push cld fs es jo lock jmp inc lock and pop (bad) mov loopne notb cmp jb push mov push push js test jmp ss add fcomps mov sbb mov xor mov adcl pop mov (bad) mov dec adc roll xchg add pop daa dec pop add mov pop sbb jge jp xor pop outsb jl push xor fldcw mov cli sbb and add imul push cmp pop cmpsl add add cmp push xchg loope xchg xchg pusha cltd test (bad) push lea (bad) mov ds add mov add sar cmp mov out outsb pop adc mov sarl not iret xchg in (bad) test jecxz sbb sbbl jo leave mov fwait mov sub std push sub lock insb clc dec dec mov aam inc pushl mov inc adc adc add inc and test push test cmc dec andb fadds out jle jbe mov and lcall nop inc cmp movb inc sbb js clc std dec out push mov mov or sub pusha sub test push jmp adcb fldt test pushf sub add pop cmp (bad) (bad) mov rolb push mov jmp test mov mov test sub sub add cmp in push lea fs push adc test pop mov leave insw add cmp mov movsb push push sub shl pop xor adc dec cwtl fidivr pop sarl jne mov sbb popa add dec sbb jbe add call cwtl push add add cs aaa ffree (bad) xchg jmp cmp add add movzwl mov cmp roll push dec aas cmp and mov and jne mov mov sbb sarb jp in lds (bad) dec (bad) pushl popa clc xor mov mov in xchg inc (bad) xor jae adc icebp fdivs jle dec inc (bad) jo jbe xlat (bad) jno inc lea icebp sbb call lods add je ljmp daa push movsb mov prefetch decl or add adc mov (bad) popa mov pop (bad) jb mov sub or xchg push mov adc iret xchg xchg add adc jbe mov sbb addb mov mov xor sbb or lods mov pop inc inc addw cbtw jo dec mov adc add das add jae sbb jb ja inc add cwtl insb sbb lods push lock add or inc xchg cmp jmp daa mov pop inc sub rcrl lods add inc or sbb add and pop sbb push add fisubr in addr16 xchg sub fwait dec loopne aas push les jmp roll add (bad) jns aas insb dec xchg mov lea sti stos icebp je add push jg jmp aaa cmpsl inc lock mov lock arpl dec xchg push inc mov sbb push pushf pushl (bad) or pop lods mov xchg outsb mov (bad) mov or pop inc unpckhps loope jmp jmp pusha icebp test sub movsb ja pushf cmpb cltd push insl sbb mov or inc pop shrb push push lea add jne sbb add les nop xchg cltd arpl rcrl jne leave es js mov jo mov jmp or cmp in fwait jnp and aam (bad) or mov test test sub or jmp daa sbb sbb or adc push rol popa sub add add push (bad) adc imul sub adc (bad) mov mov and test inc cld sub scas inc clc faddp mov inc fbstp push pop jne jg mov jge mov sbb rorb or mov push mov lds add sub sub inc imul and cmp push jl push pop inc or fadd jmp mov popa add inc mov mov lods xor iret loopne js and pop movsl ljmp popa add mov test fcmovbe shr jg movsb fnsave cmp sysret lea hlt sbb adc jne orl fsubrl jl mov adc push movsb and sub inc sub gs mov xchg push pop pop fldcw icebp mov push cmp jl inc mov push bnd out mov in dec (bad) stc adc and sub or jmp inc adc add add test or inc inc les sbb rcrl pop or outsb je xor sahf pop xchg pop cwtl push je outsb das aaa mov mov add jmp mov inc and jg dec inc fwait inc insb or xchg (bad) pop incl pop or mov sbb jg inc mov jmp movsbl or sub mov xor fildll lahf int3 pop pop cmp mov shll ret push inc add je fwait add push dec scas dec daa pusha xor or and jle and xor dec sbb push inc pop add andl xchg cmp int3 data16 xor add js mov sbb inc jge jp push add or mov cli stos jl pop cmp bswap add aam pop cmp mov add adc or mov or add xor add jge cmc sub mov and cmp jne inc push imul aaa clc adc lret mov or push adc rcl mov jle cmp jl jp inc xchg push ret push pop push or ljmp dec mov hlt out adc gs cmp sbb mov (bad) out mov bound jmp push cli insl cmp rcl push dec test dec or fldt mov rorb push scas inc dec sub adc push add push add sahf xor mov cli mov sbb scas ret mull xchg xor cmova sbb (bad) inc push mov jno or inc jns (bad) out fcomp shr rcr or jne div pop dec adc inc div out mov out jb cmp or cmp or xor (bad) sbb or and fisubrl mov mov iret pop ret cmp fwait daa stos cmp cmpsb sbb shll mov addl cmp ljmp add fisttpll mov push movl lret xor cmp sbb pushf push mull ror icebp inc add hlt add fs xchg dec jb push mov aaa sub mov or cmp xor sbb subl je scas push jg sbb jo mov or loopne stos cmp or push testb add cmp push js ret movsb and jmp adc cmp xor mov es andb xor sbb fwait push jb xchg test xor add (bad) movsl adc jecxz or push inc push adc jle add mov jb ret or and imul mov inc subb mov adc dec add mov adc stos add (bad) xor inc mov movsl or daa inc sbb mov mov adc std mov or adc or idivl loopne add sub negl mov cmp (bad) mov or das test rol add mov push jb andl hlt add push cmpb and pop notl jnp inc test sarl jecxz mov aam cmpl popa inc push or out lock outsb and mov pop outsb pusha xchg roll mov jl pop xor push push and and rcr test or and pop or adc outsb add push ret mov sub or outsb adc and jbe adc push xchg js adc pop inc mov sbb sbb pop jmp insl adc adc clc jmp mov cmpl aad sub cmp jne mov mov pop dec push mov adc adc inc add imul pop pusha movsl addb addb mov push lods pop rcr add add loopne adc stos not sub and or mov xchg sbb hlt ret sub dec mov adc pusha (bad) fmull enter mul add pusha or test adc add pop xor inc cld mov pop cmp loop inc aas icebp mov lea pop outsl (bad) mov add xor mov lret lcall dec jne push push jmp or jmp idivb or push fidivl loopne adc out sbb das pop pop stos icebp xor or shrl push mov mov sbb jge aad or mov xor std js test mov push sbb movsb pop in sbb or je mov sbb fcomps sbb (bad) xor push push pusha sub xor mov sub divb ljmp and sbb jmp cmp and adc mov ja jne fs dec mov aad add push arpl xchg xor lock add push push push test add and jo mov movsl xor jle or mov clc sbb push pop mov stos push sub div movsl js cmp inc (bad) insb add xor xorl std sbb aas add call sub pop mov in lret out sbb pushl sub test push inc jmp push test fdivrl add aaa loopne xchg les testb cmp aas test roll or (bad) js aam sub push repz push decb addl push insl sub pop (bad) add inc and cmpl pop mov cmc sbb mov add adc ret mov pop adcb (bad) mov mov xor scas fmull mov sub jge lea cmp je mov jg cmpsb rolb cld jg insl (bad) xorb fidiv in dec pop (bad) rep rcrl jmp cmp adc mov add test enter cs jmp dec loopne shll xchg jmp fisubrl mov lock lock sbb adc cwtl nop and out mov push mov mov mov les dec out fimull mov inc xchg adc ret icebp lods (bad) sbb addl lret test cmp dec insb stos movsb adc les push enter lods cmc sub rclb sbb sbb sti xchg cld add dec xor sbb leave jno mov cmc pop and sbbl lods cmpsb mov jg push test dec jmp mov dec js test test inc jne rcll inc pop bound jbe ret or mov imul mov cmp push inc sub mov dec repz add lods cmp sub ret pop xor sbb add rol add sahf add dec pop or aad adc adc inc int3 outsb rcr mov mov jmp pop jp jmp cli (bad) pop mov jbe inc mov sahf and inc lods in insl mov loop xor adc push lret cmovl sbb in push sub push push and and jge pop hlt mov loopne iret (bad) mov cld add int add add and loop hlt es in push mov xchg lods sub add pop repnz push and orl add es ljmp in add movl push adc imul call add xchg dec add jne sub lcall push xor movb mov cmp inc cmp and scas and fsubr or jge fdivl pop jne dec add add lds addb sub mov movzwl add add xor or mov mov enter lret sub cmp sub add mov mov mov sbb push mov daa loope loopne cmp jbe sbb lds sbb and pop or pop adc sbb pop mov sbb add je mov cltd fdivs outsb insb xor sub inc xchg pop sbb daa cmp movsl and inc fcompl ds cld call notb add pop inc popa fstpt mov push mov test xlat mov sbb mov push sub pop pop dec insb add inc mov out adc add (bad) cmp pop ret xchg mov pop or or mov mov mov mov sbb or int3 je push and outsl add cmp jb cmp ja add cmp mov ret (bad) cmp cmp adc adcb aam rcrb add flds pop add add (bad) ror fs push (bad) push test ret pop xchg mov fst dec push pop push (bad) (bad) enter mov out outsl (bad) push fs cmp jne fisttpl push jmp or jmp add je cmp insb fmuls mov dec mov mov xchg cld and test sbbl push or pop xchg fdivrl in jne outsl movsl xchg (bad) or popa sbbl jnp pushf (bad) loopne mov notb mov jmp cs mov jmp orl (bad) adc fcompl sbb adcb mov xchg and sarb rolb movsl cmp push xor xchg pop testb movsb mov popa xchg adc sub or clc pop in aad add test cmp gs mov js and add mov test mov add testb pop rolb push push xchg add loope and sbb inc adc adc add cmp call push mov (bad) movsb adcl jns or mov (bad) sbb cmp jns mov vmptrld sbb mov loope adc cmpsl or mov xor inc add scas or add jge movl cs out je mov subb iret test mov jmp fmuls and jnp jecxz push adc and add divl lret (bad) stc push sbbl fmulp xor cmp add sahf add scas and cltd rorl pop or (bad) out inc cld lcall out dec add mov fldenv and ret mulb ja mov push aam xchg pop addr16 (bad) outsb or rclb and testl repnz pop cmp lock movsb mov out add fcmovnbe inc or rcrl mov shr and push cltd or and pop or mov inc mov mov xchg inc inc pusha test cli adc mov inc dec adc or scas in cld jmp dec pop pop xchg push jmp xchg or mov rcrb movb dec and dec lods xchg loopne pop inc add lock mov cmp xorl jge movsb cld push or adc mov (bad) pop sbb pop out push addb xor cld fisttpl into add sub mov adc bound popa push jbe adc jne or cmp and (bad) mov adc xor jg mov andl fsubr add xor dec add loopne in add xor cmp adc lock jecxz aam hlt and mov icebp fmuls push add and inc int3 lods inc rolb addb xor push xor push aam rcll add pop pop and lods mov mov popa adc ret pop out mov xchg loope sub push cld shrl mov or cld addr16 inc and inc jmp jmp popa stc outsb add pushl or lods loope pop jne adc inc push cwtl fdivrs pop push xchg add pushf sbb ret add or push mov out rcrl mov inc (bad) ja mov jmp das imul gs add push cld sub sbb add fdivrl dec add add fcoml call jl push adc in jge neg loop bound xor ja cmp jbe scas or fiadd (bad) push int and fbstp inc cmc cmp in aam cmp cmp dec adc inc xchg imul and pop adc cwtl test stos inc sbb xor pop jmp xor repz pop adc call push aas ds cmpsl hlt mov inc cmpsl adc into dec popa out mov (bad) call rolb pop enter push mov lret sbb ss (bad) mov or movsl es push dec jl cmp pop mov loopne movsl pop adc pop loopne je push add or add je mov mov bound loopne aas shr pop dec ss inc xor insb pop inc cmc pop inc xor gs in mov out add test jae aad sarl push fimull or lcall mov push cmp jle adc sub (bad) je,pn push push lea sbb lea popa mov daa cli ja xor push cmp addr16 push mov fildl insb fs push sti cwtl enter rolb (bad) fcomps into add pop or mov mov push inc or jmp punpckhdq stos lea sub cs ret or dec cmp add rcrb mov and into pop sbb and and jbe je clc dec lea cmp xchg outsb xchg sub out (bad) je sbb push cmp inc cli push int3 and pop fcoml sub outsl test sbb or test or (bad) (bad) (bad) call dec inc loopne sbb popf sub mov adc dec push sbb push (bad) jo and sub fwait (bad) aaa sarb jg movsbl rcr stos mov mov imul stos inc movsl add sbb jl shl dec or xchg ljmp loop lret cmpl mov and push pushl lret cli mov push cmpsl sbb mov clc sbb cld add add xchg sarl or xlat sahf sub xchg stc (bad) sbb add cmp adc stc rcll mov push imul pop inc sbb jne test adc or or push adc sbb jp dec lods xorb repz cmp and pushf jle jno xchg push rolb add cs (bad) inc xchg ror je add roll add dec jl or pop test inc or push jp scas out loopne ret in jno mov or aas pop jle push mov pop xor pop add enter add xor adc dec fdivs push movsl scas orl loope or fnstcw int clc jg push hlt cmp jl cld mov mov adc mov dec add int3 out mov cmp jmp adc mov dec mov or loop or fldenv or push pushf add add push sbb inc xchg sbb jecxz clc mov sub daa jns mov mov add movsb ret and mov add xor loopne mov rclb outsl mov insb mov mov and sub cmp xchg xchg dec test aam clc sub inc or sbb je (bad) mov stos pop jle nop jg mov cmp mov das (bad) in mov cwtl jno insl or add int lods or rolb and (bad) fs mov test enter rcl cmpl icebp inc cmpl mov adc lret pop jne outsl mov fstpl imul in adc pop sbb insb mov dec aaa inc inc or xor and ficomp or adc or sbbl test (bad) notb add or sub mov lock mov in (bad) and repnz mov and and push sbb dec pop iret push pop sti repz mov andb test je lods aad scas insl stos (bad) cltd mov dec mov xchg sbb jl jp jo jmp imul jne ja popa xchg je mov (bad) int3 dec xchg sbb jmp push xor sbb push and add enter mov (bad) xor jae mov mov push xor mov insb pop call fsubrs pop adc push into push cmp outsl jge jl inc rolb je dec jne sub push pushl or cli push add jmp xor dec mov jge add nop les mov sar insb add add pop adc es mov pushl mov jmp lret inc sti sbb dec mov or or mov outsb sub popa mov mov loopne shll in hlt lret cmpb lea in sbb je pop fisttpl fimull and popa xor in adc add test bound jne ja add jb,pn mov xor pop push cmp jl dec dec add add mov hlt inc neg pop faddl cmpb sub inc jne clc cld mov or mov movsb outsb or fadd push into push mov (bad) mov cmpsl aas sub xor add mov scas add scas push push mov or pusha dec dec or push push aad jl enter xor mov cmp mov jne scas out mov movsb ss (bad) dec je dec sti or test add push (bad) xchg popa xlat push add xchg adcb aad (bad) push pop dec add lea jo adc lods mov add gs or dec pop pop ss push add xchg adc fnstenv pop (bad) movl mov lcall imul inc js and scas add in jnp lea les dec or add cmpsl test (bad) jo sub sbb sbb jle add rclb jbe jbe mov insl aam ds xchg mov add call popl cmp sbb test inc inc (bad) mov insb ja pop xor mov pop and jle jbe pop push pusha adc shrb add inc jg js sub nop orl out inc mov hlt push data16 das loopne push xchg cmp mov cmc or out test adcl push jmp push mov jle jno jo std or lcall cs adc dec adc or imul push or inc and cmp shll push push dec or inc (bad) (bad) rorb mov cmpsb enter inc lret ljmp test ret or dec movsl movsb imul sub sub lahf ret cmpl movsb rorb mov push mov incl cli es adc xor push or inc and nop or push and data16 loopne mov jne cmp lods jmp mov mov cwtl cmpsl jb jecxz add mov cmpl loop call adc daa mov push or jbe xchg inc rolb add in outsb call jmp xchg and cli xchg mov cmp ret mov push push push andb push aad push iret inc mov flds sub mov pop es jmp adc mov mov add leave and scas sbb jl push sub push dec jb scas cmpsl pop inc pop fsubrs sbb jle imul out xchg lea lea (bad) dec clc push xor inc bnd jnp sub push or shll lods cmpsl pop jp pop push push xchg pop testl and dec jnp notl add sub and jnp xor inc pop push or cmpsl and mov shlb enter repz aas shl bound pop adc push in ret adc xchg rcll sbb out mov jg loopne (bad) jb cmp jb sbb adc xchg sbb fdivr mov jb nop insb mov add mov pop add lcall loopne (bad) pusha cmc mov clc mov cmp ja movsb mov (bad) sub mov faddl pop or lea sbb xor pusha notl cli cmp xor pop loopne arpl xchg and adc xor fildl and icebp sti ficoml sub push mov pop mov xchg push ja loop xchg push add mov aas fwait jp xchg lock cmp insl lock or or jl es mov cmp add bnd lods mov add or mov xlat loope clc push mov adc fsubs jg vshufps mov mov cli test cmp jle int3 into rorb stos leave cmp int pop mov pop dec shr aam pop out icebp imul mov je or jne add movl aaa push jp fsts xor adc fcmovu daa nop clc lret je adc cmp enter push dec jge push lcall inc aam inc in push xchg adc sub test loope test xor push fmuls dec add inc xor mov jg mov roll jmp inc jo adc pop pop cmp dec call inc jbe repnz inc ret mov pop push packsswb mov push adc js mov (bad) insb sub pop popf loopne jne out adc aas fwait jle les (bad) lsl rolb lahf and enter mov in sub in incb inc sub sub pusha xchg cld xchg jp push mov rolb mov fldcw pop imul xor nop cmp sbb mov push xor push or ret push ss adc jns les je nop xchg (bad) fbstp in (bad) add lea sub pop push cmp loopne and enter xor add test es sti movsl adc int3 xor xchg dec cwtl push outsl cmp push insb fisubl arpl jge loope pushf jbe mov imul adc adc rorl mov les push jb in jne and dec push fistpl jnp and sub dec jne and dec pop mov popa sub nop pop xchg xchg andb repz inc adc sbb (bad) int3 xchg mov les lea mov imul mov (bad) adc dec or push mov (bad) jle sub cmp nop cli es mov push test push insb cli aad add test add add and icebp pop or popf popa adc mov (bad) (bad) repz mov adc inc add pusha add adc or movb jo sub mov insl ja call push (bad) js je xor xchg cmpl das jo scas sarb test scas jns mov mov jne test xchg lret pushf add mov movsb cwtl lods pop movsl (bad) jne xorb mov cmp nop add jne lods rcrb sub les mov sbb aam mov mull push test in xor fsubl outsb not adc shlb jge push mov jns std mov je pop mov adc and jb jle jp adc jnp xor xor out cmp mov (bad) mov adc and leave roll xchg jnp lahf frstor sbb hlt xchg jnp xor cmp mov or (bad) or jnp xor mov push push cmp mov xchg int3 xor inc das adcb das or shlb cmc in mov aam inc dec fcoms sub push lahf lcall sub in lahf mov and add or das jno adc adc cmp xchg sub xchg xchg jl mov pushf nop or popa pop cmpl push ret sbb adc or popf mov mov test push jl cmp cmpsl cmpl and mov fisttpl and xlat movsb adc cmp sbb ja sahf or loope (bad) fistl add (bad) mov add cpuid les pusha cmpl pop movsl xor lahf push imul mov add jne mov dec pop push enter adc mov mov nop add dec xor push insl add sbb ret lahf out push outsl mov xchg or loop sahf out cmp fsts jecxz push jns out pop mov int icebp pop in daa pop iret repz arpl mov jbe in add adc popa cs jo insl mov xor push loop inc (bad) lcall inc mov dec aaa cmp mov add or fdivrp lahf int rorb adc rclb sbbl dec aad cmp incl gs popa je and add (bad) pushl jns imul xor xor dec gs outsb sub and std sar popa imul inc add or sbb or pop push add (bad) fmulp add add adc fild adc adc add pushf xchg pop adc jle pop adc scas repnz adc out push adc or sahf out sahf pop or or jns or or out add lahf add add mov pop enter fcmovnbe inc or xchg xchg xchg pop or or xchg xchg or test notl adc pop or idiv push or or (bad) sbb out sub insb in sahf out sahf sbb pop fdivrl jns out jl add out and jns adc jns out jb or out sub jns sbb jns out jp push xchg jns out cmpsb data16 out sahf push xchg push (bad) ss sahf out jbe push mov jns out cs outsb out sahf out sahf push sahf pop fidivr mov jle add out and jns adc jns out jno or out sub jns sbb jns out jns add sahf out and out sahf adc mov sahf out jne or sahf out sub out sahf sbb mov jge adc sahf push push push xchg push push sahf out sahf rcl xor mov jns out jae repz jns out mov jns lret lret sub stos stos jns out imul sbb jns out fwait fwait pop pop sahf out sahf fcmovnu cmp mov jns jnp sti pop out sahf out xchg jns mov jns out addr16 pop out sahf out xchg xchg push push sahf out sahf xlat xlat aaa aaa mov jns out ja div movntq out (bad) (bad) dec dec sahf out sahf iret iret das das scas scas jns out outsl outsl out out pop out sahf out lahf lahf pop pop sahf out sahf (bad) aas aas mov jns jg push cmp jmp inc push and push iret repz xor dec sub iret repz pop cmp repz repz and adc cmp cmp (bad) addl ret pop cmp repz jnp add add adc iret repz sbb adc repz repz push push push mov adc sbb adc push or add cmp sbb pop xor jns or add inc cs or or xchg mov or push sub cs (bad) iret jnp sbb adc adc adc and sbb sbb pop and sbb push jb sbb (bad) cli out xlat lahf mov aas adc adc cmp cmp adc or mov and inc or push mov les addr16 dec or xchg adc idivb adc mov cwtl sub xor jns cmp xchg push pusha cwtl sbb jnp push andb mov push xlat or jbe ffree sbb sarb stos fadds push push or pop dec popa jb and insb gs pop or xor jp out cmpsb adc pop sbb and repz pop push xor inc push cmp repz mov iret ret jecxz add mov pop pop lea (bad) pop inc or xlat sbb and inc popa out out jns sarl push add sahf out sahf add or jae jo ds add add adc adc inc add sub (bad) decl mov push push outsb imul outsb and arpl je outsl outsb pushl push cs imul outsb arpl gs outsl (bad) (bad) cmp xchg jb dec inc push dec inc dec xor cs dec dec fnstsw mov outsl inc gs inc insb jae jb gs pop repnz gs popa insb jne inc inc insb insb outsl arpl arpl mov jb js je jb gs insl jae push and inc daa pop adc add pop push dec ucomiss enter stos pop adc and and sub sub cs (bad) ljmp xor xor xor ss cmp cmp cmp ds adc inc inc inc inc inc dec dec dec dec dec dec dec dec mov push push adc pop pop pop pop pop pop pusha popa bound clc xchg insb insl adc jb (bad) push cld pushl ja jns jnp jge jg cmp popf add shrl xchg rclb sbb rclb push and in xchg dec inc and lcall inc sbb ja sbb popa jo insb imul jae insl popa pop (bad) lock adc je,pn insl adc je and fistpl push fs stos push jb jns dec push fwait cltd test jns or xorb inc popa arpl fldt daa mov jne pop xor and insl enter rcl insl inc cs xor sub sub dec rcrb lcall mov mov insl (bad) shlb and jbe mov push test fisubrl mov inc jae es jne push and je and push cmpl ds imul lcall and mov push in fldenv daa sub or decb das arpl cmp arpl cmp dec popa sub fsubr sbbl jb inc xchg movsl inc (bad) add imul imul int3 or push mov gs pop in inc push xchg popa pop xor gs push fbstp xor pop sbb cmpsb cs jo or xor xchg mov shll (bad) inc mov hlt pushf insb gs pusha sahf pop dec aaa (bad) fisubl outsl outsl ss outsl xor jo cli jbe add inc mov mov xchg or loopne pop in pop push gs das push or lock cmpl stos andb outsl push or sub lods out push cmp add xor inc aaa or jecxz insl in ljmp adc imul sub popa pop or sub inc jno (bad) shll stos xchg leave nop or xor insl cmpsb js sbb jb adc stos popa in xor add or push and adc insl lret push cmp imul lock mov inc sub adc jb push sub add xchg lret inc sub pop dec jmp dec or add cmp pop addr16 adc jne add gs (bad) pop or dec and dec cmp out xor jb (bad) push gs scas stos inc adc outsb inc outsl js mov jb insb xor or and in in sub dec add es addl add jg add fiaddl addb dec sbb mov and add add add push inc incl adc push mov add mov rcrb add add (bad) call sbb pop addb xchg lea call xchg xchg xchg cwtl cltd lcall mov cmpsb cmpsl test stos stos lods lods scas scas (bad) (bad) (bad) pushl mov mov mov mov ret (bad) (bad) enter int3 int iret (bad) (bad) (bad) call rcl rcl aad xlat fcomp fcmovu (bad) (bad) loopne loop in out call in out out stos sbb push icebp repnz cmc div clc stc cli sti cld std (bad) jmp outsb mov push inc add test test jmp add mov decl jmp insl insl cmp fs in jne and adc add das das jmp cs push push mov dec xor xchg cmp adc clc xor inc jne jne loop in insl dec jne xchg outsb gs jo imul pusha arpl inc gs fdivrl daa dec popa outsb adc cmp scas cmpsl xchg popl xor addr16 popa mov fs mov inc mov jae push gs imul int sbb dec outsl outsb and (bad) out mov ja pop dec inc (bad) or ss xor xchg push and hlt add insb jl dec insl roll imul jae mov sbb mov dec dec dec insb jns daa pop pusha and push jns mov bound fs inc add mov pop pop addr16 cmp add cltd cmc push int jbe mov jbe pop push dec imul lds push push inc mov sub sbb shlb lret into nop popl and jle cmp push add push gs fcomps mov pop pop push sub jae daa add cmp nop (bad) jno insb call inc push popa push out subl ja xchg lds mov popw or xchg inc push push push push cmp inc dec push jne repnz add push xor pop outsb enter cmp sbb scas gs jge jg sahf dec and imul call or jg test jl jae popa jb insb xchg cli mov popaw adc lods and lds pusha push or inc aad pop das je lock outsl xchg xlat bound jmp mov popw pop push jl es or ds and sarl inc jl push scas sbb jle sub sub xlat add push jl and lahf das sub iret sub jnp sub sub push outsl jo add sbb dec dec and cmp ja nop ds xchg dec scas push or addr16 push jb jne push xor adc xor sbb push cld test push or fstps jo mov ret cltd adc cmp sti stos fwait call push aam mov mov pushf nop test sahf out dec jnp push lods cwtl js out xor je and jo insb push push fs pop push dec repz repz inc inc cmp fdiv cmp xor sub and repz repz sbb adc or stc cmp or cld push clc sahf out sahf hlt lock call out fnop aam mov mov nop test lods jnp push xor (bad) adc cmp pause insb dec and cmp repz clc adc push in fdivrl rep xchg js xor mov out cwtl je xchg loope repz outsb fcoml cmpsl das pop mov insb add pop sub test adc add in fildl push push add add add push and push pop pop or aaa xor push push cli and adc imull movsb add adc js or fistpl add add or iret (bad) jg addb add xchg test mov adcb pop sub in add jle push push mov sub lods fnstenv mov int3 push jo addb ja mov stos or push mov das (bad) cli test dec add addr16 mov outsl rcll jne daa pop lea dec fiadd shlb push inc push cmp in add or cs cmp inc or (bad) in add sbb test sbb das adc and loop ret test or or mov sub inc sar adc push inc gs dec dec dec push push and inc (bad) dec lock mov fdivs cmp (bad) add mov add sub xor (bad) icebp mov data16 (bad) std incl test xor das add faddp xchg inc add outsl push and dec sbb sbb popa and fidivr inc addr16 push jo and jbe cmp sti inc data16 ja xchg imul add push push dec push push daa push and stos dec add dec jecxz mov sub idivl imul push jl mov ljmp gs ret inc jle stos push ljmp shlb jne fs imul or imul outsl sbb xor ja push sbb push popa aas mov push ja jns add pop idivl add outsb xor xor arpl insl mov fmull call fneni(8087 jge sbb addr16 inc mov idivl cmp fbstp fs add dec jae pop imul xchg push xchg pop inc subl push daa pop daa add addl ret xor lahf fldt popa subl out jo push sar sub adc scas xchg stos sbb mov jae jae mov mov pop (bad) clc (bad) shl and bound sbb dec jae and nop imul repz push lods data16 inc ret pop in push arpl popa testb add fisub mov jo dec arpl cmpsl mov mov bound or ret mov push add add push dec insb jo sti icebp xchg gs inc pop push add ja loope aaa jp repz add orl xchg jecxz into lods js insl inc imul orl sbb outsb jg jb sub sbb dec pop mov push addb pop push xor add movb add insl addr16 fwait test xor pop add fsubrs scas rol loopne jmp jns popa add into add jecxz push arpl subl jae and das or dec arpl mov cmpsl mov add js mov and pop addl sub dec add mov adc or and sub test aas cmp fisubl addr16 gs inc mov xlat push lahf data16 popa add adc dec inc mov xorb mov mov add jmp mov jae and and ja cmp xchg jns outsb add push (bad) popa push iret fild iret xor and sbb jo cld dec movl add lds push lahf push dec jo ja add push test dec mov inc (bad) jae ja mov pop inc addr16 adc scas jecxz or mov adc cmp rclb fimul out (bad) data16 and outsb and or and jecxz mov idivl adc xchg pop sbb jp aas or dec dec icebp jnp out jbe sub inc sbb dec add xor push sbb daa loopne jo,pt pop sub or fwait jo outsl andl movsb and test xchg xor pop push add jecxz outsl (bad) insl pop fildll push pcmpgtd rolb dec iret xlat xor mov ret sub fwait imul arpl add pop imul add sub inc mov fidivl arpl sti aaa test mov lahf out imul imul inc bound mov aas xchg xor addr16 inc fsubrl push pop (bad) popa add daa add je outsl pop sub xchg (bad) sti lea rclb add and scas lea addr16 jo mov sub add push push cmp movsl inc jns rorl pop ret je jecxz xor xor vmwrite inc fwait pop fisttpl rclb bound jne and push jne jb and add xchg sbb jecxz mov push je ret das cmp push xchg arpl inc shll sti adc mov mov xor pop xor cmp sbbl sub (bad) adc pop mov out cmpsb lods test ja dec lods js jmp push pop repz insb aas imul mov repz add jo call sub xor fildll pusha xor add cmp bound test pop scas fwait dec adc test lret pop outsb outsl jo push test stos gs maskmovq (bad) or mov push outsb add add lea push sub inc add dec add push and jle pop sbb xor out stos add cmp outsl arpl loopne jb bound cmpsw push adc pop fistpl push xchg inc inc aaa mov xor push add sbb add inc push push (bad) mov mov dec add and push addl outsl subl mov pop (bad) jne or pop sub imul test add pop and lret je aad push xorps inc inc or push dec test daa arpl aaa fimull add mov mov cmp cmp or scas or add or push scas xchg aad mov insl adc sbb adc arpl jmp aam mov mov (bad) pop inc sbb adc iret or iret sub out add bound call gs (bad) dec pusha aas outsb jae sbb inc cmp sti pop stos sbb iret push lret sbb inc adc out or and mov aas push xchg mov xlat testl pavgb fwait imul adc xor mov scas push stos and (bad) push int (bad) (bad) daa ss mov je jne jb push jns inc push pusha sti aad aaa aas fs cs mov popa add mov inc and xchg push loopne mov jo pop push negl (bad) (bad) shlb insl imul xor xchg and pusha inc cld push scas jo imul pop xchg data16 or scas mov add je adc dec inc shrl and shlb jae rorb add add adc (bad) sub shlb arpl add clc and push add sbb and rorl or clc adc and ret icebp and inc and scas cmpl jae mov ret insl dec fwait orl sub test lahf pop xorl sub pop popa stos test sbb stos ja (bad) pusha or icebp (bad) pop sub xchg sub pop or jo outsl sbb test outsl out pop xor je mov pop dec (bad) ja mov jg xchg pop inc daa shlb stos mov xchg adcl movsb ret insl repz cs sub add push push and xchg nop mov inc icebp test ret or jb sbb sti push adcl test jae xor inc inc sub bound inc push cmp out ja push sub push add stos scas fwait add mov or (bad) mov lahf jb lret pop rorb adc je outsb ja dec inc push inc jne insl imul or arpl inc bound fwait mov and xor add mov outsl and in mov bound movsl js cmpsl mull je pop dec jle (bad) imul fs lds popa aas push sbb pop jae cmp inc or cmp inc pxor scas inc or lahf and addr16 push add scas mov or sub xor adc or andb jno jecxz jae pop jno mov inc dec insb dec sbb and push adc or jge xorl sbb inc inc and jb (bad) jo inc xchg mov insb sbbl fs lret ja aas push dec add push inc sbb push mov cmp dec mov xor mov sub jae push and lahf cmp mov add mov mov ret enter pop or push sub dec movsb loopne sub add pushf mov or sbb sub addl (bad) dec xor insb and jnp pop arpl iret dec adc mov push pusha mov push adcl fiaddl test jnp add adc or (bad) stos mov xchg cli mov jns sub leave xchg dec dec cmpsl and lea sbb xor daa push add push and and outsb movsl mov (bad) iret and shll imul popa mov cmp add out or cwtl adc (bad) and test push sub add mov xor popl push sub sbb or adc sti mov dec pop or bound jg or inc sub jnp dec add inc sub or push pop mov rcl iret rolb add dec inc xor add outsl mov or add push je (bad) call orb pop mov pop aaa jo loop add push add inc sub jnp mov or daa or cmp out dec add sbb push jno lret outsl fwait orb add mov adc adc sahf or orl aaa and xor mov jne xchg (bad) ss sub xlat int3 and jo xor in adc jnp pop xor adc xchg or and insb xchg insb jp push leave or fild push fs inc imul jbe (bad) dec inc push add es jnp push aaa mov inc aaa roll jae inc test push daa cmpsl inc lods (bad) out bound jbe dec mov pop xor out movb sbb inc mov arpl jae xorb inc dec jg lret pop cmp test mov push jae xor xor mov add stos cs mov add rorl dec lea or and sub shrb (bad) (bad) (bad) (bad) cmpsl or sbb arpl sbb pop inc jo out fildl adc popa scas xor pop pop lret pop popa stos xor or jg subl add aas sub gs and adc xlat cmp addl push or pop ja xor es adc jecxz pop stos inc sub das cmpsl roll lahf lods xchg adc (bad) daa (bad) mov add sbb sub push inc or pop je lret jb add loopne test push or sbb mov insb lock pop cmp iret pop add sub inc or fwait pop add jo call popl add add xchg subl lahf add test mov sarb (bad) mov xor rolb jne scas cmp sub pushf fwait dec repnz push xchg inc mov sbb cmp sbb xchg xor repz xor inc sbb inc stos movsl call lds movsl outsl daa and mov sub push je je jb push inc cmp xor rclb add arpl sbb aas cmp jb add push fadd outsb inc aas cs fcompl mov and mov add and push add jo iret insl shr es aaa jg and sbb sbb clc add ja insb add jl test mov mov les repz sub pop mov mov scas es inc inc dec rcrb lahf or test dec jo das pusha push or les iret daa xor sub xchg dec cwtl (bad) adc add adc dec loopne (bad) and xor inc adc mov test pop dec and je cmp popf cli and (bad) lahf mov pop rorb mov add lock mov (bad) jae pop add inc adcb push sub or fwait dec ffree dec pop jo inc jb bound xor iret pop jb (bad) repz dec xchg movb nop into pop adc and dec (bad) dec cmpl ret jnp adc cmp mov outsl dec lods (bad) loopne dec or add mov fwait (bad) mov sub pop bound cs out pop ret lret das mov pop dec popa add cmpsl sub pop scas sub mulb imul movb add add mov xchg fisubrl (bad) and add dec adc pop ss dec aas imul mov imul push mov mov and pop push xor mov das dec lods loopne inc pop (bad) xchg push or xchg sub iret aaa cmovp imul jae adc push (bad) dec gs mov (bad) mov addr16 add gs dec or and pop jnp pusha test pop sbbb jmp (bad) sub out cmp arpl push pop or pop push add add fwait mov das pop and jo or adc aaa mov setnp push sub aas mov (bad) je ficom mov cmp jne call sub mov push gs and add outsl push add push iret mov and dec ja jns push cs data16 dec and sbb cwtl inc shl sbb lea push lcall push test xor mov pop dec jg push sbb jg (bad) xor sub pop sbb pop inc and jg and cmpsl inc dec not das pop mov (bad) pop push inc sub addl sbb dec xor xor xor outsb sub iret xchg rcrb pop mov mov testl xor adc addr16 and push lret subl or adc imul (bad) inc aaa iret xor mov adcl mov pop push sbb or sbb test pop push add arpl add jb sub jmp pop jmp xlat popa adc adcl add movsl les sub fild xor add and cmp push daa outsb add (bad) push fwait or push scas popa popl loopne xor xor xor pop add inc add gs xchg inc sbb dec xchg aam cmpsl jo jmp stos sarl aaa cmp jno push pop ret shlb mov fbstp mov ja xor arpl cli adc fwait xchg int and jmp sub mov pusha xor xor jge loopne popa (bad) adc sub imul jg jg push add popa add adc xor pop jmp xor jg je jns or and xlat xor mov adc andl arpl adc and dec (bad) rolb xchg (bad) outsl scas mov cmpsl outsl outsl add je inc scas inc fistl adc jg and inc inc les repz adc push or jae add mov jne sub scas jnp sub imul and adc jns cs mov call jg jecxz mov add inc mov inc (bad) adc push insl ja jmp mov and or leave sbb ret sub ljmp out pop lahf clc adc aas addb imul pusha ret cmp adc xlat imul aas inc xchg ret jae je adc xchg sbb or dec or add jg imul aaa cmp and mov adc imul add ret lsl mov ret test adc add jg add jnp andl int repz add cs inc and dec xor scas pop test jnp dec les jb call pop bound (bad) mov cmpsl xor add adc jo or pop cmc xchg add add aam and mov adc scas addb and rcrb jo or dec pop mov (bad) xchg fidivrl push aaa cmp fistpll inc adc xor xor sub mov inc and adc xor pushl adc dec add and jmp mov ja mov dec xchg fwait pop xor gs mov inc push arpl fs int adc je inc and add adc xor and and mov imul mov popa addr16 cmp xlat loop arpl ljmp xchg icebp arpl daa jne sub xor add je das js loope dec jp cs inc mov shlb inc jg cs scas stos sbbl or inc andl inc mov xlat pop fbstp loopne bound push fwait mov sbb adc xchg pop loopne add add sub scas cmp arpl or cmpsb mov movsl jge adc push xor lret sub ret fwait insl das addr16 imul inc je (bad) mov inc xchg addr16 gs scas jne and imul add lahf jg pop xchg mov cmpsl daa dec insb add mov mov arpl jns addl dec add inc xor and test decl pop xchg mov dec add daa sbb push mov mov data16 pop ja push and pusha and jecxz pop add test ja mov jmp push (bad) jae sub lods or and mov (bad) xchg push inc jg dec mov sub pop sbb adc dec iret adc mov inc jecxz loope push out pop xor add lea add pop pop or push push push push loope mov mov dec aaa inc outsl stos addl stos daa add mov and mov mov push stos mov imul add jns je popa adc roll (bad) jne push dec pop jg or dec push inc cmp shrl and or les push add cmp sbb jb push in jb aas arpl loop,pn stos aas inc divl jo xor or jne xchg movb add add cmpsl lret add loop lret data16 popa add outsb out add imul mov fildll xor or fs push (bad) and sbb movsl xor and cmpsl sub (bad) jnp cmp cmp pop scas pop (bad) xor adc mov lahf xor (bad) jb and adc call inc dec inc add jge and aaa xchg mov add and fist test add push inc push mov xor jo cmp pop adc cltd (bad) out or insl adc (bad) adc mov xchg jecxz pop add pop push mov or push andb mov data16 and mov or push jae add xchg sub pusha andb sti pop js push mov add add add subl fwait sbb arpl js jns mov push pop movq or jmp xor add inc add jmp sub stos mov xchg xor stos sbbl xor jo je or xor sbb ljmp shll xchg sti pop rolb js subl dec fistpl inc int cwtl dec jae push insl rorb and lock xor pop add and bound adc rep xchg push arpl inc inc aas push lea push lcall xchg pop daa and pusha loopne das out scas popa xor inc xchg cwtl jo push jecxz xchg adc mov maxps les outsl lods cltd pop fcomi adc add inc adc mov adc and inc out fmul add mov inc mov out pop adcl pop mov cmpsl js or scas push out in mov xchg push inc mov fist inc pop mov jnp add adc dec dec adc sarl cmp pop jmp ds and cmp xor pop sub inc pop aaa mov (bad) mov or mov shrl test iret dec (bad) push or push sub cmpb cwtl mov push roll imul sub sti insl push pop push xchg cs push lcall jne sub jo xor adc pop adc andb out cs aad pop out jne gs pop push insl mov stos and jb lret adc and push mov jae test xlat andb add fwait pop push sbb das lahf clc add pop sti pop or add nop loop add repz mov inc dec aaa cmp add scas mov insb (bad) or push iret test jno (bad) fisttpl out inc inc adc mov scas add loopne iret inc cld mov mov mov or add loopne mov sub pop add rorb daa aaa (bad) les jb pop out xchg mov outsb sub jb out or fisubl jg scas inc or xorl (bad) xchg ja adc arpl je jne rol xchg and adc arpl jne jb push add pop outsl xor dec sub add and jae or sbb inc loopne outsl outsl orl movsl mov aaa sbb adc jp or shlb daa add nop test jae xchg or (bad) aas mov aaa cmpb xchg and push addl xorl inc xor add mov adc adc add mov pop bound fwait inc rolb and add clc insl add and lahf movsb les mov ss or mov mov shll rcll jb inc fnop or inc lahf mov sub add pop (bad) (bad) mov mov rolw pop rcr popa add gs gs sub add addl pop add (bad) rcll ss (bad) mov mov outsb outsl add cld inc mov add jmp push push fbld push nop pop test lahf aas pop (bad) adc pop sarl sti insb add sub aaa (bad) cwtl pop stos inc cmpsl push add and rolb addb sbb xchg fcoms test imul sbb pop xor daa pusha adc push cmp sahf push fwait daa inc loopne fidiv xchg push and inc add cmp movl push and addr16 xchg cmpsl ret pop add xchg ficom movsb xor jae cli test add nop subl push add and fisubr test or (bad) cwtl mov sbb pop or pop xchg sbbl pop inc (bad) pop pusha inc push test pop test scas sbbl inc add fs push jo das inc push fcomi and aaa out dec push sbb inc or and ja (bad) or pop inc loopne imull pop sub push add cmp inc adc repz mov outsb pop or inc daa sbb pusha loopne jae add mov pop xorb loope add sbb jmp sub outsl out and push pop sarb add subl les pop xorl lret outsl sbb addb divl sub lahf cwtl lods inc inc dec das sbb aaa mov out rclb je adc fstl fiadd pop arpl aad pop add dec lods sbb clts outsb gs adc fisttpl jge outsl outsb or push out jo push (bad) and push pop out push sub push jb popa insb mov adc xchg mov gs popa outsb fs gs mov cmpsl loopne inc add add dec jae mov xchg fldt adc aas loope jo (bad) inc movb subb addr16 add pop out push ss add and add adc add scas or aad sbb mov aam (bad) jmp pusha mov push pop lds movsb inc pop (bad) jg pusha add sti cltd inc adc pop dec lea pop pop adc (bad) mov pop mov push xchg inc lock mov and push push dec xchg dec cmovl sbb mov jo loop shll push add push and movq add aaa xor sarb inc xchg and xlat xor mov data16 pop push sbb pop lcall outsb adc xchg daa popf les (bad) pop ret push or sub add insb xor aaa and movsl aad das out xchg sbb test adc movsb scas cmp subl daa fbstp add xor loopne xadd sbb and clts or xor mov inc notl adc sbb pop addr16 adc and movl or fild inc push stos (bad) xchg sbb cmp addr16 mov sbb adc shrl mov add mov xor and or subb das push sbb adc mov test roll dec and and pop add or mov add outsl fldt popa sub (bad) nop push sti lret sbb lods scas push test cmp add nop fsubs daa jnp and adc addr16 inc dec pusha cmp pushl dec add loopne adc add cwtl xchg dec push inc and push adc fwait pop ret pusha inc or sub and mov push mov xor push push das adcl cmp sbb shlb mov and mov fisttp and test xor add push xor push add inc sahf or or imul loopne dec stos aam or mov stos stos negl add push add aas aaa rcrb ror pop lahf sbb (bad) inc fwait mov push jb xor xor xor fildll mov jb jb inc lods add scas mov dec int3 clc insl add shll addl dec sbb push push dec dec sbb mov mov sbb mov xchg mov outsb pop xchg fwait sub inc (bad) inc push cmp and sub cmp add ret inc dec or lock (bad) loopne cltd or lds dec cmp push add mov xchg dec fwait add add mov add (bad) insl jnp add jle and jnp insb push lock popa testl arpl mov or pop mov dec add push mov pop add scas dec or and and fsubrl lods mov xor scas xchg insl imull xchg test adc mov inc add dec adc or or adc insb pop imul (bad) scas or pop mov mov add pop push push fwait out mov add es pop scas or nop xchg popa iret ret cmp popf (bad) or mov stos push or pop dec ret (bad) dec mov test xchg and add orl adc dec lret sub jne les adc iret add cmpsb push add mov bound loopne iret out icebp std mov add sub fildll pop aaa jbe mov inc insb sub xchg push jns cmp inc mov mov mov insb scas sub nop pop mov xor adc lret (bad) xor mov fildl add cmp hlt inc jmp dec add add cmp sub and cmpsl divl test idiv shlb mov (bad) mov cmp cmp cmp aaa sub sub sub xor sti sbb bound data16 pop cmp inc inc xor inc cmp inc dec lock insb aaa xor insb aaa xor xor inc xor and pop mulb imul add rolb jnp mov or cmp pop and xor push sub fwait inc or aad xchg incl icebp aaa stos sbb jb fs outsb lods push and mov pop fs bound sbb adc push leave push movsb test iret aaa push and cmp incl sbb dec push sti push mov dec sbb inc push cmp push lock add jbe pop scas scas ret xchg inc jae and mov test aaa loopne and jp cs roll lahf ss and sbb mov push shlb sub mov lock cmp sub loop outsl (bad) adc ret ja adc pop add xor sbb test es mov inc loop call push fldl jmp popa outsb arpl jo arpl and adc outsl daa add or mov push push sti jae cmp bound mov sbb inc or and push inc jg add dec fldt mov scas inc add adc and mov xor add mov cmp push and sub pop int3 and add add push inc inc dec dec popa lahf outsl or add test fbld jg movsb mov pop (bad) push sbb mov arpl test xor adc and xlat and push and adc push imul fild bound das mov shrl mov sbb jae aad inc adc prefetchwt1 scas lea adc pop xorl cmpsl mov adc dec or idivl xor dec bound rcll add adc add mov jnp movsl adc and imul xor push or orl (bad) mov sbb sbb xor pop sub mov inc shl add sub jne and or push push sub sub add mov cmp add add rol jnp and cwtl imull ret or test cmp addl stos jne clc (bad) and pusha les fsubrs outsl cmp xchg insb pop movsb or add cmp xor sub je daa mov addl mov mov sbb imul aas mov dec or push dec sarb or test out ret sti jecxz or pop (bad) sbb dec mov mov ret mov popa aaa jb test aaa add adc les ss and rorl (bad) fidivl iret push add dec or jecxz fs cwtl mov scas sti shrl adc fs ja adc sbb and rcrb inc sub pop scas imul inc mov pop ljmp xor mov sub mov pop adc inc (bad) bound test fildll js loope es lahf jp sbb push (bad) bound lods bound out ja dec fsubrs aas push scas inc mov or mov pop ja les bound push rclb movsl xchg pop inc inc add test jnp adc cmpsl inc movsb push cmc test jae pop or pop jne popf xchg out dec insb dec (bad) cmpsl das outsb push sbb aas pop and dec xchg aas outsb test sbb sub dec xor pop fistp mov out adcl add or inc or lahf mov cmp sub pop rorb mov cmpsl push push push adc inc dec (bad) movntps lea push cmp cmc rorb xor inc bound jbe daa and mov test add and inc sub fistp fcompl mov push nop add mov cmp aaa inc or mov pop or adc ja or popa cmp (bad) mov xchg imul iret push inc fild test push cmpl out mov fbstp add andl and or xchg jno push imul rorl pusha sti fbstp dec inc cmpsl out push dec pop (bad) push xchg push xor inc rol sbb xchg add pop push xor add mov inc or jae push inc and push shrb pop or push jecxz arpl jg mov dec (bad) inc dec and adc imul stos sub mov das test out imul out push or add pop lret das jae pop sub adc sbb mov mov sub ja push mov sbb push inc cmpsb fisub push adc xorl xlat xchg jae imul add repz cs or scas dec imul and pop stos mov out adc inc pusha ja je add dec sti xlat pop sbb mov fisttp bound data16 test add or pop adc add mov mov dec jmp jnp adc loopne add push mov ret (bad) push pop jo add mov adc push (bad) jbe (bad) jg xchg inc push sub loope jg inc mov das in or out lahf cmp arpl outsl repnz decl (bad) pop bound pop push gs pop inc outsl je jo (bad) out xchg xor add mov xchg mov shll adc cmp daa scas inc cwtl fistpl push push daa aas add fmul sbb inc add add (bad) pop js test (bad) xchg push movsb push pop lods fcmovnu and lock dec add test in (bad) add pop mov jmp sbb sbb scas add out bound jmp dec push fdivr pop enter push jo in jbe xchg nop fadds incb (bad) pop jnp pop or inc aas sub inc call inc pop ds push sub inc (bad) xchg dec aas test dec imul enter notl pop rclb jnp rorb push (bad) aas mov loopne push psraw fimull cltd nop pop int3 mov push fisubr ficom dec cwtl imul imul ss insl jnp lds mov decl dec mov rolb or mov adc sub xchg mov mov jg xchg mov sub movsb adc stos ljmp rorl mov outsb mov outsl cmp jo ret aas ffreep cmc enter and push sahf daa cld push ss inc fbstp sbb in inc sbb aaa or sub ja ljmp lods notl add jae mov fcoms or add fnstsw mov add xchg pop rolb xchg pop jb pop imul mov xchg sgdtl and pop lock mov jo jg push push fiadd xchg pushf xchg pop mov leave mov inc and xchg dec mov xchg pop sarl clc call or test nop xchg xchg pushf push fild pusha inc repnz mov in fist icebp cmp mov lock ficomp push std sahf ljmp fmulp and sub push xlat fucomp inc addr16 push out pop push pop mov xchg xchg cmp cmp sub loope pop mov vaddsubps inc addr16 or in inc sti rorl xchg fild in dec mov mov loop xchg pop xor insb pop jb pop insb jle or jae xchg add insl in fildll mov je dec cmpsl shll xchg fild lds push fmul pop xor int int3 int3 push (bad) int3 inc pop mov inc mov imul daa cmp (bad) in adc add mov mov cmp inc iret pop les cs scas loope insb jnp (bad) ss sarb jge sete stos ret ja in out dec es xlat scas mov fldt fildl add push dec inc adc add shrb cmpsb imul mov andl nop rcrb das jp test jbe,pn xchg and sub pop add and push outsl mov insl gs outsl fs inc bound jnp push insb outsb xor dec jo sub je outsl ljmp xor inc mov insb jae sub jb pop inc cmp aas pop jae add pop or xor pop xor and jns jmp jo pusha push push inc xor or sbb iret push sbb or jns and data16 int jae outsb imul insl sub inc sub add xchg gs outsb push clc inc (bad) add hlt xchg sbb lret dec nop jo fistpll and movsl je orps outsb pop cwtl das adc pop (bad) inc rcrb push adc or shrb sub idivl push pusha subl push fsubrl jns jae ds das jo xor in mov push or pusha setge outsb mov aas mov inc fucomi jbe aas loopne push das pop nop/reserved mov in mov cmp js cmp shrb fstpt push adc push jbe mov mov lock in mov push unpcklps outsb mov sub je xor enter in jbe das fs aas test mov test inc aas call mov pop nopl cwtl (bad) push das jbe in jbe (bad) aas fdivrs pop das outsb mov in insb cvttps2pi mov jbe fisttpll aas clc incl das push pcmpeqd mov and jb in jbe in xor decl das bound dec outsb mov and movsb pop add (bad) inc in jbe fnstsw in pop das pop bndldx fucomi jbe xchg incl jp cmp mov in (bad) aam adc push sub mov fistl insl pop aas mov dec aas hlt sarl das push movhps outsl fucomi (bad) pusha pushl das jbe ss fucomi (bad) int3 decl das data16 aas lods mov adc mov in jo (bad) or pop nopl pushf loopne mov jle ds (bad) in jbe lcall das outsb ucomiss mov mov jle push pop jno push aas adc cmp aad jbe rdtsc jg jmp mov aas mov mov ljmp nopl test aas xchg (bad) jns cmp outsb mov ljmp mov mov fcomps mov repnz test push unpckhps outsl (bad) push add jne xor jbe jmp and in ss test inc aas ljmp nopl lcall (bad) aas (bad) insl inc mov outsb cvtps2pi mov push (bad) dec aas cli dec jbe pop xor inc pushl mov aad xor decl popa fldt aas cmpsb pop mov mov lcall sbb outsb mov ljmp (bad) in jbe test imul aas mov ljmp dec aas notb push mov call pop pushl push (bad) aaa jg jmp ss in daa aas scas pop mov aad inc aas out lcall pop in jbe fnstsw sahf (bad) jg aas aas (bad) aad ljmp das aas mov pop aas (bad) cmovg decb rcrl xchg xchg mov mov es es leave mov test xchg cltd fnstcw stc lds xchg mov cltd xchg aad dec es mov int and es mov cltd mov fs mov dec xchg rorl xchg mov es stos es mov (bad) dec mov mov dec es es mov negl scas xchg mov lahf and inc outsb stos outsb (bad) incl xchg pop pop adc dec outsb pop pop push push add movsl sub pop add cmc push add ds mov xadd fwait jne pusha jg incl or pop push popa xchg popa mov jg incl sbb xor or sbb fbstp repz cmc mov xchg jle xchg jne les lods movsl fsubs dec xchg in or and aam movsl xchg jns inc lods int sub pop xchg (bad) addr16 add (bad) test cmp aas add sbb js inc ltr aas add incl add pop nopl insb loopne aas add fucom xor xchg outsl pop sbb cmp cs inc push ljmp inc inc mov inc add or nop sbb and add aas or nop mov add add mov jle call inc into fdivrp pop pusha (bad) jns and cmpsb fisttp mov (bad) lret inc jle test shll in adc pop (bad) jg or mov iret mov in call cmp mov push ficompl test mov mov xor fcomp loopne mov jle sub inc cmpsl inc testb push add pop imulb cmp add pop inc push aam sub inc push push data16 lods push ss cs cmp (bad) add adc shufps pop sahf push xor or and or or or fidivrl out scas adc dec outsb push nop push adc and pop inc inc push addr16 das mov in jbe xorps insl shrl test das jo mov loopne push pop andb (bad) aas push call (bad) xchg add fcompl mov das mov dec outsb pop aas into aas xlat sbb cs cmp or out pop or sub inc daa inc pop lahf idiv loope pop inc dec cmp inc cmpsl or adc push pop mov xor mov repz sbb in jo out roll push push push xlat loope out push daa or fildll jnp adc ja add pop push cmp cmp decl cld cmp sbb leave leave mov sbb imulb mov (bad) in dec cs xchg xchg loop sub xchg jg mov mov or stos lds pusha das aas pop mov scas mov add sbb inc pop mov mov mov sbb xor push push iret repz dec dec inc inc cmp ds repz sbb or adc repz jbe hlt lock cmp repz in fnop repz repz int3 les mov pop mov cmp repz jo pusha pop sbb iret repz cmp or add jne inc sahf lods xchg daa inc pop jg mov in cs xchg fild pusha mov mov jp add add subb aam sbb mov mov inc test or cmpsl iret jo cmp push push iret orb mov mov and or cld rclb sahf cmp ja xchg add outsl std add aam mov jge xor dec insl add inc adc roll cmp adc push dec insb ret push add (bad) decl incb mov pop add rcll xchg adc dec pushf std sti inc or pop and rclb mov fildl out add mov pop mov repz testb fdivs repz push sbb mov repz cmp adc mov push sub iret sbb enter sub mov clc cmp out js cld mov incl push js in mov idivb (bad) (bad) (bad) (bad) jl movsb sbb push stos push test or inc mov sub pusha and (bad) (bad) incl add insl mov or inc inc pop stc (bad) xorb or lds dec jmp test add sbb pushf xor mov (bad) idiv ds pop add (bad) in jg add cltd xor cmp rol sti push dec jp xchg or pop push and (bad) jmp aas stc sar std xchg (bad) jle jg dec fidivl xlat push jmp jle int out (bad) gs sahf (bad) (bad) (bad) push enter lock out push js loope fcompl (bad) repz orl mov (bad) (bad) call and addr16 mov out sub mov dec jae lcall das mov lock (bad) call mov cmpsb scas adc pop repz fistpll and (bad) call push mov aas push push stos sub arpl jmp (bad) (bad) (bad) (bad) call lcall dec cltd cmp (bad) rcrl add int xchg lods jecxz (bad) ja xchg (bad) and add push mov cmp push (bad) cltd ret (bad) sahf mov std in jp daa sbb (bad) (bad) (bad) (bad) aas push into (bad) popf jge jnp cmp cmp pop sub xchg test xchg movsb imul mov mov stos es dec and mov (bad) incl es cmp addr16 nop hlt repz iret aas aas (bad) cld cld repz (bad) decl ljmp xchg push (bad) fistl stc dec add (bad) enter inc jg (bad) lcall loope mov cmp sub repnz xchg pop into jns call cld addl push incl pusha and jle jns orb mov lods repz fildll or ljmp imul and sub stos cmpsb xor fstps pop jmp and cmpsl sbb jle (bad) (bad) (bad) ljmp (bad) insb cmp dec cmp test pusha pop pop ret xchg lock mov jne (bad) (bad) (bad) push pop dec mov fcomps fsts jb mov pop aad test cmpsb add gs push xchg and push dec sub test cmp loopne sub jns add in stos cs gs (bad) ljmp push adc (bad) xor cld lock and xchg in jns sbb fbld jmp sub (bad) (bad) ljmp xchg lret cs sub jle fstpl fsubl (bad) jmp push sub mov mov movsl fcmovne lods push lret mov (bad) lcall mov mov jbe sbb aas testb mov das clc (bad) (bad) jnp add clc mov mov xchg mov add adc (bad) pushl int3 aad xor push xor cmp stc cmpsl outsb stos adc (bad) (bad) incl (bad) cmp and pop les outsl ljmp cs outsl push test outsb mov dec les sbbb xchg ret or mov or pop repnz subb (bad) ljmp xchg movsb push jns into push addl xor mov mov mov sub inc shlb jo je dec enter sar incl adc dec and and mov pop cmp (bad) (bad) jg popl xor repnz mov sbb mov fsubrs xchg test dec fldcw shrb add or pop xchg add addr16 add lcall das jb add jae loop mov jle,pt fmull pushl std pop movsb stos or or out jb js add in outsl cli (bad) cmp and jle xor cld jo xor jbe ljmp jg (bad) jg dec add mov cmc leave insb jecxz or inc mov mov pop cld lcall push pop decb stos add bound iret imul dec pusha cli je (bad) (bad) (bad) call adc jno je popa movsb cmp push xchg cmpsl arpl roll cmp sub insl push (bad) (bad) (bad) call cmc sarb inc ja mov sbb push and jae xor lret (bad) mov (bad) jg incl and mov sub dec inc in add nop or (bad) (bad) (bad) js shll loopne mov sub or ljmp (bad) (bad) (bad) (bad) (bad) decl sbb push std add add mov fs sarl dec cmp (bad) jmp jmp test stos jp sarl fstl xchg into add idivb test mov (bad) (bad) (bad) ljmp xor push ret adc (bad) and cmp int3 cmp test or (bad) (bad) (bad) call pushf out and inc push shrb icebp xchg fidiv loope adc shl (bad) inc in cmp dec mov xchg pusha push cmp cmpl decl (bad) dec mov sahf jl sbb lea adc in les in mov ljmp loopne ljmp mov (bad) bound lds (bad) (bad) ljmp fs pop or mov or adc xchg ret icebp int3 mov (bad) push sbb out and (bad) cwtl xor adc inc dec sbb nop outsb (bad) lcall add sub push sub (bad) pushl fcmovnu int inc sbb xchg adc imul sub xlat mov arpl sbb jg loopne add mov xchg pop dec stos mov (bad) (bad) (bad) pushl dec pop or lea outsl ja mov rcr popf xor in and sbb adc out stc out in (bad) fcoml cmp lea jb push (bad) fimul (bad) (bad) dec andb push mov xor pop xchg fstps inc jp and (bad) (bad) incl aas stos dec add add loope test adc call cli inc sbb scas cli incl andl adc xchg or add cmp or (bad) lcall or or cmp jle daa repz into add cmp adc fiadd mov ret cld add nop and (bad) (bad) incl pop push mov push ljmp mov fsubrl mov cmp mov insb test ja cmp jge and mov mov popa insb sbb ljmp dec xor xchg and sahf or ds incl xor inc sbb loopne dec inc vmovshdup (bad) (bad) (bad) ljmp stos push (bad) ss mov mov cmp or xor sbb mov mov in shlb pusha push jl mov mov or into (bad) (bad) (bad) incl cli or adc jne jmp dec jbe mov aam sub enter (bad) (bad) (bad) decl aam push data16 xchg dec cs xchg mov arpl movsb or pusha sar (bad) pushl cli add nop (bad) lret pop push (bad) pushf insb sbb fwait push mov (bad) (bad) (bad) jg pop ror cmp xchg lods clc add or add (bad) and decl push mov gs cli (bad) (bad) jmp and sar lret jbe pop dec (bad) jle inc jns repz pop lcall out push xchg sub jge jnp inc pushf pop pop mov stos int (bad) (bad) (bad) ljmp push iret or push add lods and fwait mov ljmp inc mov or (bad) incl sbb xchg ss mov and in cmc (bad) (bad) ljmp or mov pop lret stc mov test ss push dec std sti xor icebp (bad) (bad) (bad) fist enter mov inc in outsb ss mov sub js cmp xchg int3 dec loope xor (bad) ljmp jg loope cmc sbb jg jmp stos jp stos sahf nop cwtl mov (bad) call push aaa mul mov or dec popf mov stos add pushl sub dec (bad) in paddd (bad) incl add mov rclb int mov lock add xchg lds test pop mov andb iret inc jl popf incb lcall (bad) (bad) decl cltd sbb or xlat lea sahf push push ss or (bad) push std test mov inc dec cli (bad) mov cltd mov and lcall sub fstps or xchg xchg (bad) insl jbe xor xchg sbb add cltd and jg (bad) incl into cmp sbb xchg imul xchg das adc jle pop leave jl pop xlat lcall dec dec push fildl mov sbb xor sbb mov or (bad) ljmp pop dec cmp movsb inc incl inc lret loope fstl or test pop xchg sbb hlt (bad) (bad) jmp inc mov fild out fiadd xchg cli sub inc xor mov add and pushl sub mov fxam sbb push pop xchg mov cltd and icebp pushl or (bad) cld adc or inc inc mov dec mov test outsl test xchg cld inc cmc push popf inc aad mov stc out shll inc (bad) (bad) (bad) ljmp rolb mov scas pop add cmp pop cmp lcall sub jg (bad) call sarb xchg push popf jns pop pop jne out mov aad mov (bad) (bad) (bad) fidivrl xchg push mov dec mov mov (bad) fisttp adc sar pushl mov mov xchg inc xchg sub mov (bad) (bad) mov mov icebp jo bound out cmpl fisttpl lods divl jmp outsb fcomip fwait aad (bad) out ficom xchg and fistpl add cmp cld decl in pushf das adc jp je inc lds jae (bad) (bad) ljmp sub (bad) dec out ficompl cmp imul aad in sub pusha or jnp dec sbb cmp repz test cmp pushf sar (bad) (bad) incl inc and into retw ds movsb jg dec push js ficomp push lock test mov push (bad) (bad) (bad) fisubrl sbb scas inc test je jbe jae xchg push inc cmc addr16 ljmp (bad) (bad) (bad) ljmp mov xor sub imul cmp (bad) mov pop test and mov test cltd dec cmpsb mov (bad) (bad) (bad) fucomp mov pop aaa imul fisubrl pop test aas test lock call imul or lds sbb xchg mov add icebp jmp cwtl shrb dec les and jnp xor or cmp (bad) jmp in cmp rsm out popa cmp out pop add sub jnp popa sub (bad) jmp pop push movsl jno insb out adc ss stos div (bad) icebp test add mov xor aas or dec xor (bad) (bad) incl sub lcall add add (bad) add dec or lret ljmp push pop push mov ret or sbb mov call bound (bad) push lret (bad) jb lahf (bad) cmpl outsl mov mov jno jg call out cmp (bad) (bad) psrld aam xor cmpsl insl in or (bad) (bad) (bad) mov mov or mov sbb or cltd push leave sti imul decl dec rcr cmp add inc test dec (bad) sbb (bad) lcall add faddl outsl cwtl data16 or mov lock iret repz or (bad) (bad) lcall dec sahf dec loope add xor arpl xchg scas mov mov adc insl (bad) pop loopne fisttpl lcall rcr (bad) mov sar sbb add rorl jp,pt inc xor inc cld fmuls pop mov in pushl jle roll movsb loopne xchg dec sbb test js scas roll enter (bad) (bad) jmp xor inc scas cmp sti int3 push dec test movsb cmpsb sub inc sub dec push incl cld decl aaa stos mov push in aam inc sahf int3 loopne xor daa inc mov adc mov sbb insl push mov mov lcall (bad) jmp xchg push inc mov add aam (bad) adc (bad) call data16 adc xchg adc sub lret dec (bad) pop scas js xchg fwait add ljmp fwait pop gs leave or outsl cli incl out add ss bound mov jmp jge neg lock cltd sahf in cmp push jp mov jo popa gs jl push (bad) (bad) (bad) ljmp add add push in and or mov mov pop cmp (bad) (bad) (bad) decl xchg xchg insb push push xchg sub jno lds jb iret add add int ja (bad) (bad) incl mov pop (bad) aaa cmp (bad) xchg data16 adc (bad) (bad) mov dec ja (bad) cwtl jp mov data16 nop (bad) mov leave cmp adc out sub xor add cmp push mov sub stos push lret in add (bad) (bad) ljmp mov sti mov outsl fstl into out pop add arpl xorl mov (bad) (bad) pushl inc lcall xor adc arpl adc arpl (bad) (bad) ljmp into into xchg lods lods mov push cs movsl or xchg fdivs and icebp xchg (bad) (bad) (bad) incl arpl push and push push jp jne shr xchg sbb (bad) dec mov in mov (bad) (bad) (bad) call in arpl ljmp outsl stos mov xchg jo repnz dec xchg sub or push addr16 decl and out cwtl in mov mov jo fdivs sti (bad) decl push int (bad) sub mov jnp cmp scas rol lret loopne jbe pusha sub addr16 shrl pop and (bad) jg inc jne and jmp inc pop sub or cwtl scas jp adc repnz (bad) (bad) inc sbb mov outsl push ror xor lret sub add mov push jg (bad) (bad) decl scas sar or push push je lret and cmpsb pop add and inc cmc (bad) decl (bad) lcall lods mov lds scas out cli xchg cwtl or std (bad) call mov ds pop out jl mov jp cwtl jns iret scas je push cwtl (bad) jg (bad) sti xchg mov cmpsl mov mov mov fdivs xchg sub lods dec (bad) (bad) (bad) scas pop aaa push fidivl movd lahf push or aaa add jo ss (bad) into ficomp jp mov enter sbb xchg fiadd test pop dec or fwait pop add (bad) (bad) (bad) jmp inc mov adc push pusha pop dec les mov ds aas lahf outsl (bad) (bad) call lahf dec ret cmpsl divl enter rolb loop xor (bad) mov ljmp add xor xor push jmp (bad) cmpsb cmp mov add test pop dec ret pusha (bad) (bad) (bad) (bad) cmp adc adc mov dec add insb mov push or cmp mov int3 dec imull outsb mul jns jg sub std adc decb jne mov jecxz loopne outsl (bad) (bad) jmp js dec popf ret adc xchg and (bad) jmp scas adc mov outsb je inc dec push es inc movsb lcall mov (bad) fstp mov jge lods adc (bad) cmp add scas cmc icebp push lock fcmovb xchg mov sar sti in gs frstor movsl (bad) xor scas (bad) (bad) incl into sbb ss push jp mov andb xchg cmpsb mov (bad) (bad) pushl daa loop add test push fsubrs pusha jne mov ret or pushl fnstenv push pop pop adc xor test pop fmuls clc fdivs dec jnp or nop rcll cltd mov add lock decl push inc mov add dec and lret sbb (bad) fisttpl push jge clc movsb xchg (bad) cli xchg jb add shlb inc xchg clc int aas sti pop xor fbld xor or or push sbb sbb and ret jle adc sub xor das clc (bad) incl pop (bad) pop mov pop arpl arpl mov (bad) (bad) out clc mov das pop dec rcll adc loopne ljmp inc out (bad) (bad) (bad) decl jb enter pop dec cmc std (bad) sub lods sbb dec fmuls and (bad) (bad) pushl loope sti add into dec cwtl mov or mov (bad) mov pushl hlt repz cltd sub pop sbb mov (bad) out sbb inc stos incl or adc outsb iret cltd mov addr16 mov loop sub adc (bad) (bad) (bad) pushl pop dec leave lahf jbe test sub xchg (bad) out clc sbb xchg (bad) mov or adc jo jbe (bad) outsb ss add scas inc mov ds jo push sub rclb xor das push ret adc lods testl mov add xor jge inc fild fcoml inc cs clc cmp jbe pushl mov cmp imul push and movsb mov jae mov (bad) (bad) incl cmp icebp adc (bad) cld mov xchg aad mov pop jmp (bad) cmp (bad) (bad) (bad) decl sbb insl jp out jmp outsb inc mov xor mov xchg movsb scas fidivl std (bad) decl pop cmpsb jmp sub add adcl lods dec addr16 jg jmp ret addr16 fcoml in sub (bad) jp out (bad) std popf lods cmpsb jg (bad) incl leave sub add cmp push sbb fisttp stos (bad) (bad) push incl push jae cli inc jnp jl aas je sbb push popf lret or incl (bad) fidivr mov lods xchg jae (bad) fcmovne mov das add (bad) popf sbb (bad) incl and or sub push pop int aaa lock int push xor (bad) (bad) (bad) cmp xchg jns mov clc out fs sub cwtl add (bad) pop mov inc push stos xchg je aad in cmp into iret add popa in (bad) lret adc dec leave adc push loop lcall inc mov mov pop lcall mov mov pop xorb fidivl push hlt xor sar sub sarl or scas (bad) out pop out inc ljmp addr16 push fisubrl test popa pop js popf mov inc cmpsl rcrl (bad) (bad) (bad) push mov or mov adc cmp dec adc push push jo test mov rolb sahf mov (bad) (bad) inc adc into loop lcall inc sub mov cmp sbb nop (bad) xchg (bad) (bad) (bad) decl jecxz or test notl jae lcall lahf cmp mov cwtl aaa dec in (bad) (bad) decl lret lcall dec addr16 das and iret sub shrl in outsb xor (bad) incl outsl pop mov enter push ret test sub mov (bad) (bad) jmp push jg xor cld pop out mov movsb aad push mov or mov pushl or pop in repnz push jne push scas pushf dec mov add andl xlat call mov in xbegin (bad) cwtl mov add (bad) jmp xchg out inc fisttpll mov nop icebp lock pop mov loopne mov (bad) (bad) jg xor stos pop sbb or jle jne ss fcom push aaa aaa mov (bad) (bad) jmp mov fsubs (bad) bound aas xchg mov dec pop or jbe mov (bad) (bad) (bad) inc xlat test xor fwait stc adc dec pop pop mov cwtl shlb aad mov call xor push and call js in sbb cmpsl push mov dec icebp shl cli (bad) (bad) call lret cmp mov push test mov imul and ret push adc cmp (bad) loopne or cmp (bad) (bad) (bad) decl and jp xlat shr sub push sbb mov xchg sbb sbbl (bad) pop (bad) (bad) (bad) lcall sub sbb mov cmpsl sbb mov (bad) sti mov cmp sti (bad) (bad) (bad) lcall lock (bad) mov add xchg mov js dec lret cli bound iret mov ljmp lock xchg mov inc and sarl jl jmp lea les (bad) (bad) (bad) jmp push icebp (bad) (bad) (bad) cmpsb sbb es lock lret ret (bad) (bad) (bad) incl mov jge inc fchs ret bound jp fcompl clc nop outsl insb (bad) (bad) (bad) (bad) jp adc out push shll roll add mov idivl insl dec ljmp (bad) pushl push (bad) fdivr add sbb fs pushf fldlg2 das mov rcrl dec into xor (bad) in stos dec xlat jmp shr loope and mov popf cmp ds mov pop xor daa fnop sub pop outsb mov mov lcall test leave inc add data16 cmp sahf mov push pop cmp jg (bad) mov sbb loope fdivrl mov and sbb (bad) aam add stc cmpb (bad) jg add cmp xor sarb mov imul in ljmp (bad) out and pop fincstp ficoml cmp cmpsl shl test ljmp inc fidivr pushf rorl in adc scas xchg addr16 dec test sar cmp lds icebp cmp xchg mov lods cmp mov jmp jo (bad) bound js fildl push fdiv inc enter pop aas push push ljmp (bad) (bad) call (bad) lods push loop int push pop push cmc mov cmp pop (bad) xlat (bad) decl (bad) je pusha outsb jno adc push dec adc pushf outsb stos cwtl pop das jns cmp dec hlt (bad) (bad) (bad) ds or add out xor enter sbb sub inc (bad) (bad) lcall std jbe loop mull daa adc mov popf jmp push repnz xor call mov enter (bad) stos aaa pop sub push (bad) es fs cmp mov (bad) (bad) jg or mov ss cwtl mov mov sub mov sub mov pushl jp xchg je and add mov xor or push lds lret gs pusha cmc mov or xor std adcl jge adc je push and nop and clc scas xchg testb dec addr16 sahf ds dec sub repz (bad) (bad) pushl fadd sbb pop jnp and fcomps adc (bad) (bad) (bad) call test or (bad) xchg push (bad) lock cwtl mov movb movsb into pop out test (bad) cwtl xchg in lods or and pop sbb lcall (bad) lcall and fmuls ss ret loopne xchg xchg pop or adc (bad) (bad) ljmp dec stc cmp in fwait mov ss sub sub (bad) ljmp aas dec cmp pop pushf rcll fstps xchg cmc fnop or xor lock pop mov inc add dec xor or push ret (bad) (bad) (bad) (bad) cmp pushf inc mov lahf jnp (bad) je (bad) and add dec mov cmp pop (bad) (bad) (bad) inc jmp outsb mov sub clc (bad) cmp popa in movsl mov dec (bad) (bad) (bad) jmp jnp push mov imul inc push pop ret push xlat aad sti pop rcrb (bad) (bad) (bad) jge xlat rcl fsubrs ds inc push insl out pop pushf sbb lods mov ret cmp push (bad) (bad) pushl cmp repz lcall jns stos out les jae popa les cmp xchg (bad) mov push lea pusha outsl jg mov push out fsubl mov stc decb jle or inc dec dec subb test (bad) (bad) (bad) incl sub mov add ljmp out aas shr push bnd and (bad) push or adc sarb imul les push adc rol pop outsl xlat in mov pop xchg push in je lret fidivr (bad) (bad) jecxz (bad) (bad) (bad) (bad) jg ret aad push fwait js or es push rorl stos jp (bad) jnp aam dec push xlat (bad) (bad) ljmp push dec mov adc lret inc push mov (bad) (bad) (bad) jg push jl lret mov fldt shll and daa mov xor sub (bad) inc sahf jb loopne std adc pop or fwait or mov push fnop jae cmp mov mov (bad) (bad) cmp adc addr16 lods into xchg aas mov cmp insb mov ss les (bad) incl into outsb add adcl mov mov (bad) (bad) pushl push sbb pusha mov pop and push add enter mov lcall call mov movsl scas rcrb addb (bad) xor arpl sub pop popa mov mov mov rolb inc fmull mov jecxz mov das faddl iret test (bad) (bad) push sub in xchg push jnp (bad) hlt pop sub add fsubr movsb mov insb (bad) (bad) (bad) incl pop sub xor rolb xchg ja daa cltd jns scas nop mov das push (bad) (bad) (bad) jmp jl mov gs and repz jae and into mov stc stc mov add (bad) (bad) in (bad) in and ljmp mov fcompl cmpsl fstpt dec loopne cmpsl xor (bad) (bad) (bad) ljmp std insb iret add bound mov dec stos add xor xor mov pushf cmpsb (bad) (bad) (bad) jmp mov jl pop mov mov insb sub hlt jnp mov lcall ljmp xchg sbb cld fidivr xchg add es mov (bad) (bad) jg (bad) push xor jg adcl pop and sbb (bad) (bad) (bad) (bad) mov dec popf pop out das out in nop mov mov push test and xor lcall (bad) jmp (bad) cmpsb repnz movsl pushf inc mov cmp inc sub (bad) push xchg sub pop lods leave (bad) (bad) (bad) decl inc fsts imul dec pushf xchg mov push faddl movsl (bad) (bad) (bad) call mov mov mov mov pop sbb (bad) jae imul (bad) jmp out movsb in cs push ret in jno icebp mov outsl sbb in lock out (bad) (bad) (bad) cmp (bad) push jmp in mov cmc aad pop lock jp int push popf ss cmpsb xchg cmp jp jne mov inc mov insl and out mov dec cli xchg jg xchg cmc stos loop and (bad) loope sub imul out ljmp mov sbb ss das cmp das (bad) into jg add jbe mov mov dec leave outsb sbb lcall jne insl jne push cmp adc push xchg test insb aam shrb sbb pop (bad) (bad) (bad) (bad) in scas inc xor ret mov icebp mov insl xchg ret inc fsubrp xchg jne imul push mov lcall incb lret data16 add lret inc cld mov cmc xor dec xlat dec in iret loopne pop cld jmp cmp mov push and jecxz call lcall add mov mov cmp std (bad) jmp pop xchg push xchg push call mov (bad) aam fs xchg insl std pop add incl and je or mov (bad) (bad) jmp stos aam xor mov xchg enter inc add mov fsubrl sbb dec push movsb outsl popf sbb pop jmp (bad) inc outsb push cmpsl and (bad) (bad) push cmp aas bound aam pushf inc add rcl fcmovbe popf adc push (bad) pushl cmp aam xchg adc into out push pop push mov push movsb ret incl clc lahf add daa loope sub iret ret cmp sbb cmpsl movsb pop aad lcall cli push mov cmpsb mov dec sti jns sub (bad) (bad) (bad) jg roll (bad) cmp fs lock stos imul (bad) aaa mov enter aas mov sub sub outsl dec sub (bad) jmp stos push cmpsl subl xchg popf push pop scas (bad) (bad) dec aam ret dec cmpl call dec fcoms daa fldenv pop mov and sti (bad) decl ss cmp lret lds xchg sarl cmp sbb jp outsl sub mov sbb sub iret ds xchg xor popa jecxz (bad) jle (bad) (bad) (bad) decl inc outsb in cli adc jb inc and mov es mov das bound push (bad) decl repnz lea arpl sbb (bad) (bad) mov and mov sbb js cmp nop outsl xor adc inc jle dec mov enter ljmp mov sbbl or sti push cmp cmp scas mov (bad) (bad) ljmp cmpsl inc out dec pcmpgtd inc iret cmp mov (bad) adc ret sbb (bad) (bad) pushl insl adc fdivrl jae imul es jns sbb (bad) (bad) decl xor pop iret repnz or das rolb stos add mov ds (bad) (bad) (bad) (bad) js inc add cld mov mov daa into sbb insl pushf sbb (bad) sbb sbb (bad) (bad) push enter pop pop or or cld test sub dec test push pusha sub jnp out cld inc das cli (bad) ljmp jmp fiadd xchg jmp pusha cmp (bad) (bad) (bad) jmp cwtl push push and outsl lock dec dec push mov inc fisttp lret jns sahf cmp hlt hlt and imul in cli test movsl shrl push loopne mov clc cs call ja (bad) (bad) (bad) decl sbb ds daa push ret std pop fimul dec mov fdivl sar (bad) (bad) call jbe sti sbb add ja fnstcw add jmp jne es imul cmp pop xlat (bad) (bad) call cli mov adc arpl xlat gs jb scas mov xchg add lcall sbb ficoml icebp je ja mov (bad) adc jae (bad) jg ss test rcrl lret or mov addr16 rorl jne inc sub (bad) (bad) mov rcl sti cmpsl je je pop cmpsb (bad) aas cs jae fucomp mov sbb pushl mov mov cmp pop repz in sti test sbb lcall mov call sbb jge insl mov xchg xchg cmp pop fcoml cmp (bad) (bad) lcall xor (bad) adc push cmp imul hlt inc shl and and dec mov scas dec ljmp (bad) ds ss and out sbb (bad) and aaa xor stos out sbb nop arpl (bad) clc daa loopne in es xchg cmpsl les sub ja (bad) xchg lock (bad) (bad) (bad) ljmp push ljmp ss scas or mov je sbb popf dec bound (bad) (bad) call jmp pop cmp into (bad) clc lret movsl jae mov pop lahf jo shrb rorl jg push pop jmp xchg loopne imul insb fs data16 mov jmp (bad) call negb arpl mov cmpsl sarb or inc outsl out mov cld xor push sbb repnz ja adc xchg push dec mov (bad) (bad) (bad) incl dec adc cmp rcl mov test aad mov (bad) call or sbb xchg adc xchg push ret jo mov cmp aad scas jbe pop test mov (bad) clc pop pop or push cmpsl cltd mov push arpl xlat pop in push test sbb js (bad) (bad) (bad) ljmp mov pop into in xor push jo repz push jle fisub xchg push (bad) (bad) (bad) (bad) out incb jecxz,pt cmp in test (bad) bound xor xor push pop adc push iret adc and das out push and nop jno movsl ret lret flds lcall lahf rorb into pop (bad) std idiv (bad) nop shrb pop daa sub adc scas fdivrp (bad) (bad) pushl mov jae mov js imul xchg rcr jae stc shlb movsl test fldl lea adc lock sbb lea pop ss fldenv xor inc pop pop dec mov ror clc inc mov jp push fs (bad) (bad) (bad) fldcw loop fdivrs push rcll xchg gs push popa jo jne dec int3 jb (bad) ljmp loop sub push pusha push mov xlat cmp add decl ss jp sarb sbb sub insl (bad) lock scas lock mov and push jno xchg insb add (bad) (bad) test rol hlt out jl (bad) and fldenv decl std scas ret (bad) icebp mov (bad) push popf jo ficomp mull mov mov add (bad) lcall test cld arpl adc fs adc mov push arpl pop daa mov ljmp ret adc aad xchg mov repz mov adc (bad) (bad) ljmp lea dec xchg fwait int3 (bad) hlt loope push out outsl and inc dec mov dec stc and nop pop (bad) (bad) lcall pop inc ret loop inc or je push xor shrl inc fisubl sbb add dec sub test rorl std (bad) jmp sub mov pusha in lods push xchg sub xor mov or dec hlt (bad) (bad) (bad) out mov push jg xchg xor stos into dec add aad sub push inc test adc cli (bad) (bad) decl sbbl sarl lea sbb cmpsb or cmp xchg (bad) (bad) out ret or inc add sub cmpsb adc push ss call movsb xchg mov lcall std clc inc xchg scas adcl fwait test fildl (bad) fldlg2 mov ljmp test mov mov mov jno out aaa cld (bad) fisttpl cwtl push or mov add ljmp (bad) (bad) (bad) jg (bad) fs dec pop mov (bad) loope add push cs out bound test sahf mov (bad) ljmp (bad) hlt int push pusha pop cs dec adcl (bad) pop push ljmp (bad) (bad) (bad) sti sbb xchg gs fsubr mov rcrl jo add push (bad) jno sbbl loope loope (bad) jg lcall insl ljmp mov out xor xchg js xor std (bad) lcall enter or mov mov mov pop std push rol insl xor subb idiv jmp inc fcoml imul (bad) xorl in inc xor imull sub (bad) nop push (bad) jl test dec cmp ljmp push hlt lret jg repnz push inc nop ret cmpsb enter (bad) (bad) (bad) incl outsl lcall mov add (bad) in movsb out (bad) icebp dec insb pop xchg fisub sarb (bad) (bad) (bad) dec bound in out mov fwait clc pop leave mov jno sbb (bad) (bad) decl nop cs data16 fadd lret test orl (bad) sub movsl xchg sbb in in enter (bad) (bad) (bad) jge mov pop cli imul outsb jecxz rcll ja test mov call cld call mov inc push adc jmp inc clc xor dec mov loope (bad) call inc jno aaa (bad) mov es jge,pn les jl arpl popa jae cmc (bad) (bad) mov sub (bad) iret shrl jmp pushf add iret pop xchg jo (bad) (bad) lcall inc xor mov aaa add jcxz fsubr addb (bad) in (bad) ljmp iret scas cmpsl and imul push cwtl inc icebp lods add ss lods xchg jae (bad) (bad) dec insl sub adc sub loope push in cmp enter xchg pop (bad) repnz (bad) (bad) call js add jo xor repnz stos and data16 dec ret hlt (bad) (bad) jmp xchg sbbb push push cmp push nop inc int3 mov (bad) xor or (bad) lcall pop mov jmp test lods insb jp mov out jmp jg ljmp add inc adc mov push outsl adc sub clc (bad) (bad) incl es dec inc or cltd sub jo push movsb in rcll xor inc and xor push std scas fcoml sub and adcb mov (bad) (bad) (bad) decl data16 pop sbbl and bound push mov outsb movsb icebp (bad) (bad) (bad) pushl push lcall repz push imul lods add mov call pop (bad) adc cmp enter mov cld outsb adc and (bad) jno add stos insl jno popf cmp cmp pusha mov nop cmpsl lea push fnop (bad) fcmovnbe leave dec in outsb in and pop inc mov mov (bad) decl xor pop fistp pop imul rolb mov inc ror adc mov push adc clc adc sub jmp cmp (bad) (bad) call in xchg (bad) jg rcrl aam cwtl pop mov fs xchg shll push adc (bad) call test mov push je cltd in inc dec rcrb aaa sti push and gs cli ljmp cli jmp push or sbb ficomp in push lahf dec (bad) (bad) (bad) jmp jg sbb enter test and pop adc sti mov pusha ss cmp sbb cli es add push xchg pop out adc sbb or outsb pop dec std (bad) (bad) lcall dec mov push addr16 aas rcl pop mov je clc rorl repnz mov (bad) pushl mov loop subl mov mov adc xlat (bad) (bad) (bad) (bad) jp idivl jl sub dec iret mov scas loop loop adc popf into and cmp in incl int xchg notl loop mov sar (bad) (bad) (bad) cmp (bad) jmp cmp inc icebp sbb fwait pop fildll dec pop dec mov (bad) (bad) pushl fstcw stc push add jl mov fwait jno mov and jb sub (bad) (bad) (bad) ficom mov or jmp add xor xchg mov add (bad) (bad) mov pusha mov decb cmpsb stos push xchg push push sbb push pop inc inc (bad) (bad) (bad) pushl into aaa push idiv nop cmp in (bad) push lret pop ret pop inc iret imul call rclb psrld lret aad and xchg pop inc icebp mov data16 push push sar (bad) ljmp mov mov movsl enter push in adc repnz clc fwait sub mov (bad) (bad) (bad) decl aas int3 push mov lds sti dec repz out or fimull (bad) lcall mov xor in mov inc sarl clc shrl jle jae (bad) (bad) inc mov sbb orb es roll adc fcmovne dec loop mov cmp (bad) (bad) (bad) jnp test into adc xchg sbb hlt xor out xchg mov xchg mov pop gs and dec adc lea fmul add mov (bad) (bad) decl sbb clc out arpl pop cmp sub bound xor fisubr xlat es outsb xor (bad) pushl sub in (bad) mov mov xchg mov fcoml sbb (bad) (bad) fisubr popa jne les mov lods imul (bad) in cmp jns xchg jo mov sar sub shll jl xchg in cmpsb idivb dec (bad) (bad) (bad) jmp jb jbe lea fwait cmp fidivr lods push pushf sbb aam das jae xchg cmp or test fcompl in inc inc mull inc cmpsb hlt push inc out add (bad) mov ret cmp rcrl jp pop fnstenv mov mov cmp pop shrb inc dec or fldenv add (bad) (bad) (bad) ds rorl cmp test out dec fdivrl inc addr16 mov mov xchg lods jg clc dec cwtl sbb cmp (bad) (bad) (bad) jg test (bad) mov loopne adc xor insl jmp lahf lods fmul movsb shrl loope and jae or jmp int3 test pop or adc or pushl sub int3 xlat int3 cwtl test mov push mov sbb fnstenv jg sbb daa imul mov (bad) in ja xchg pop and in (bad) (bad) (bad) decl ficom xchg out sti in jge (bad) into push pop cwtl jge mov sarb sar (bad) (bad) (bad) cmp fidiv loope dec addb aaa push ss xchg mov test or nop faddl leave adc pop xchg fs cmp enter nop outsl inc leave lods cmpsb int (bad) (bad) call lahf invd fbld jle xchg fstpl in imul (bad) cmp mov cli pop ljmp dec and mov mov data16 sbb xor (bad) jmp inc mov pop inc adc fs and fbld lods out (bad) (bad) jg sub or pop inc iret data16 into pop cld dec sahf aaa fsubp sahf ss pop sbb test (bad) (bad) (bad) call pusha add jle inc mov jecxz ret sbb dec mulb into mov std int rclb vmovsldup and mov pop mov lret test and or mov add shrl lock mov (bad) test or sahf xchg (bad) (bad) lcall into and mov inc (bad) lret scas cmp out xchg and push iret adc cmp sar (bad) (bad) ljmp push mov push adc or push gs lret mov movb movsb cli pop cmp in xchg push cmpsl push sub mov hlt adc enter rcll loop stos pusha test loopne (bad) pop add add cmc lahf sbb adc mov pop aam (bad) je push and pop (bad) (bad) mov ss jb jns or rcll movsb cmpsb (bad) (bad) (bad) (bad) fldl sbb and (bad) xor mov inc addr16 ja mov or nop add aaa mov pop sub fsubs push fwait mov sub and fxch mul cld jne jne (bad) (bad) (bad) fldln2 xchg xor outsl add or (bad) ljmp and insb jbe adc mov jp (bad) jle pushf popa lret cmp xchg and lret mov addr16 lods addr16 add pop daa pop aam add outsl (bad) (bad) jmp add xchg call in adc popl pmaxsw pusha mov pop aad (bad) jg (bad) cmp insb rolb push in movsl adc fild xor repz mov ljmp cmp push or sbb imul (bad) mov mov (bad) (bad) (bad) out jge pusha imul imul cmpl inc cli scas pop sub (bad) (bad) inc cmpsb or repz (bad) hlt out fist jecxz test jp out in sbb iret iret mov ficom fldt bnd mov mov cld ds or pusha cmpsb adc outsl (bad) pushl jno jmp arpl rorl pop mov cmp cmp mov adc (bad) incl push or cld in dec jns fsubs aad sbb (bad) call xchg iret xchg aas aad mov loop jmp ss test fisubr mov lahf cmp repnz movsb xor push xchg out ja es loopne dec jo (bad) (bad) (bad) pushl cmp les mov or in push (bad) mov popa imul mov clc (bad) (bad) ljmp test pop iret cmp aaa fwait sub test adc xor mov push inc add jp mov call (bad) jno (bad) aaa sbb fisubrl jmp aad sub rorb pop out fs jae adc xchg jle fstpl sbb push (bad) sbb (bad) (bad) pushl pop push gs push movsl pop movsb cmp rep xor and popa pop pop xchg pop sbb (bad) ljmp mov or inc clc pushf lea les cmp mov jecxz add in push cmp les add fistl std jg add pusha leave and jae das movsb xor dec ljmp out mov in dec cmp daa stc dec fisttp xchg movsb add jmp idivb pushl ljmp xchg fsubrs sbb fldl dec insb fstps mov (bad) jne mov (bad) (bad) out (bad) mov lret mov and lcall outsl adc imull mov (bad) jmp test lcall lods (bad) outsb scas lock and fstpl jecxz or mov pop inc or mov (bad) (bad) jmp xchg (bad) jne push mov popa pop decl stos pop outsl (bad) (bad) jg loope (bad) repnz jp fistpll enter (bad) and je xchg xor (bad) decl or add fwait popf int dec add or sbb (bad) (bad) (bad) fcomp jae or loop pop inc lcall mov jmp rol cmpb push daa stos mov sbb cmp sahf jo fs cmp ja movsl (bad) lods dec adc dec mov lock ljmp jbe and negl je and add std jg icebp xor ds outsb push mov mov jnp (bad) fcomip push lret xor mov test cmpsb in dec mov (bad) incl imul imul mov or les lcall rcrl jp insl mov sahf and mov mov ds (bad) (bad) (bad) (bad) fdivrl adc repnz cmpsl rcl adc icebp sub mov jl add jmp enter dec nop (bad) imul loopne imul push into mov pop sarl dec xlat push mov outsl mov pop into jecxz jg ljmp cli (bad) sti ret and or add lods test dec fidivrl (bad) (bad) push add or fstps fcompl mov addr16 mov (bad) push jbe ror call sub (bad) (bad) (bad) call insl imul fsubr ret pop xchg or dec mov inc cli inc mov jne xchg (bad) (bad) incl pop aaa mov lret jmp les push adc out lahf (bad) (bad) (bad) lcall popa loop cmp inc test rcrb push lcall loop pusha mov adc stos mov stos jg in repz push and out push pop xor cs (bad) (bad) (bad) jmp inc sub push mov packuswb or subl repnz adc jno (bad) (bad) incl fiaddl stc cwtl sbb cltd mov outsl std mov mov data16 hlt mov (bad) mov loope stos ret (bad) push and cld jmp jns hlt jno clc jne cwtl (bad) (bad) (bad) ljmp cmp or pop loop movsl xchg (bad) rclb xchg mov fnstenv xchg (bad) (bad) (bad) decl leave lret push lods cs (bad) mov or fimul ljmp mov pushl mov je cmp in outsl mov sub enter in (bad) call (bad) mov add adc pushf jg sub push mov inc ret xlat sti out inc inc adc cmp add mov lcall mov adc jbe stos push xchg out (bad) call imull addr16 outsb bound jmp (bad) pushl insl int3 mov mov xchg sti xor je pusha hlt popf adc pop mov (bad) call punpckldq mov insl repnz xlat rcrb decl es test xchg or sub repz xor (bad) (bad) (bad) push iret inc pop xchg ret cltd dec mov (bad) or loop push sbb xchg xor in pop cmpb cli (bad) decl jle pop xchg vphaddubq xor pushf xor insb rcl insb out adc aaa and xchg push cwtl ret push std (bad) incl ret dec notl movsb mov jmp dec push jae push rep sbb dec (bad) or (bad) (bad) (bad) (bad) jle cs sub fcmovne ret mov das mov bound loopne jnp (bad) (bad) pushl les lea test rcrl cmc jb adc (bad) (bad) (bad) (bad) (bad) jne jbe aas (bad) faddp scas std push aam jbe sbb shrb jge out bound (bad) pushl pushf scas jmp lret xor and pop sbb iret loopne jl pop call incl in cwtl into sub popf jb aas push test aaa loope (bad) (bad) (bad) ljmp pusha sub jnp lret lds cmpb or push mov (bad) (bad) decl (bad) mov pop cld push shlb (bad) xor fsts lret mov fdivrl ljmp push pop inc (bad) xchg adc dec std push push mov loopne (bad) loopne add pop mov imul ljmp icebp mov xlat mov lods mov push jns or insl insb mov (bad) (bad) ljmp lods movsb and lahf inc sub jge out push pushf push ret icebp mov (bad) lahf dec pusha ja daa pop std (bad) (bad) decl stos push (bad) (bad) das in imul xlat sbb xor adc (bad) add in (bad) mov xlat and sbb lcall push push inc mov add (bad) (bad) (bad) decl je or (bad) lret das adc cmp clc and dec pop fistpll xor arpl (bad) (bad) lcall cmpsl jns pop xor adc inc das insl ret push xlat push push or jns rol imul (bad) (bad) (bad) (bad) call jne clc lods jecxz or mov fstpt ffree pushf call call (bad) out cld jg in mov (bad) jmp push outsb call shl stos jp mov xchg mov (bad) (bad) call sahf (bad) cmpsb jmp jb icebp stos std test xor mov mov mov cmpsb (bad) mov popa and (bad) (bad) call fmulp fnstsw jg aaa (bad) scas mov std lahf fmul xchg pop cmp ja (bad) mov imulb adc outsl mov out jecxz (bad) fadds (bad) (bad) incl cmpl xor and repz push mov jo push cmp (bad) (bad) (bad) js ss jno fisttp les mov std sub iret sub gs repz mov xchg out lahf pop (bad) pop les push fstpt mov adc mov cmp (bad) (bad) (bad) aas (bad) jne fnstenv mov jge jbe setle sbb jecxz jge,pn and pop repnz (bad) cmp mov fwait mov or mov xchg movb xchg jbe popf in (bad) (bad) (bad) mov lea mov call xor lahf mov sub repnz jg insl jl cld (bad) (bad) mov pop dec pusha xor out pop jle cmp push fwait or mov insb ret xor cmc (bad) (bad) (bad) incl in fsts lds pushf jo push xor test int3 lret push inc insb sbb jge (bad) mov cmp dec idivb or (bad) xchg mov decl cmp cltd pusha imul stos pop (bad) repnz xor (bad) cli or sbb pop jmp push (bad) (bad) (bad) incl sbb out inc std cltd daa (bad) ja (bad) (bad) sbb call das jnp sbb (bad) lcall (bad) inc int mov pop cmp cmp sbb popa jmp les (bad) mov dec mov pop inc jecxz fstl (bad) fistpll outsb (bad) std fsubs leave aam (bad) (bad) (bad) (bad) clc push lahf inc xor adc mov pop mov pop loope push ret cmp mov fs fadds fcomip jmp insl bound stc dec mov mov jl (bad) bound mov test (bad) (bad) mov (bad) jbe xor mov (bad) xchg inc test out dec mov cs gs mov jmp sub ss dec sti dec push sbb ljmp and cmp pop and and mov aas adc outsb (bad) (bad) mov lret cmp push mov adc mov subb mov jecxz push repnz jb inc cmc sbb cmp ds fstps out (bad) pushl xor push enter lret (bad) imul and bound lret fisttpl (bad) ljmp inc add rorb push jge sub decb xor (bad) (bad) pushl or dec lret stos adc icebp faddl mov sbb jp sub lock lcall mov xchg inc icebp push jnp loop inc loop loop int3 int3 adc pop (bad) lret (bad) jg ret repnz inc adc imul xchg and cld clc ret mov (bad) (bad) (bad) pushl gs xchg mov inc xlat popa nop int repnz iret ja xor sbb lods pop or xchg mov es divb faddp or lock inc push lods fisubr fildll (bad) sub scas ret add push mov jl sub xchg (bad) (bad) lcall cmp sbb and jmp jbe jns jg and sub pop insl incl dec movsl and xchg into jb and mov or push ja adc (bad) (bad) (bad) pushl fbld repz mov cltd and mov ljmp pop iret mov rcll aad push mov stos mov mov aaa mov out clc das ja andb pop out sub lea jl adc nop add insl daa loope (bad) jmp mov xchg mov xlat adc inc iret mov push sub (bad) (bad) (bad) mov test push scas xchg test xchg popf inc or adc mov pop xchg sar (bad) (bad) decl jb call addr16 inc mov mov cmp dec jg fwait outsl mov out clc (bad) pushl outsb and push call lea std dec stc (bad) mov push pop fbld fnstenv xchg je mov (bad) sti jp xchg jge cmp enter decl out pop xchg mov or std test mov (bad) cwtl mov (bad) (bad) (bad) sti sbb iret daa pop fmuls mov cs js popf mov lods push sbb jbe (bad) (bad) jmp mov mov push jb jo inc mov shlb jmp jbe out (bad) stc or shlb xchg je (bad) jo adc nop fldt mov js push daa in and (bad) jno outsl sbb sbb jnp (bad) pop loope (bad) (bad) jmp cmp jns cmp out add and lds add (bad) mov into sbb add imul stos sub aam lock mov inc pop stos sahf xchg push push popa dec xor (bad) fcomip xchg xchg stos push (bad) fisttpll stc dec jmp xchg mov push gs (bad) (bad) ljmp outsb scas cmpl shlb dec xor out jl pop fcomip (bad) dec xor into imul cmp pop or out lods xor jg es (bad) ficompl dec mov in lock jge mov movsb test scas lea jne mov pushf data16 in mov push push cmp mov sub test xchg lods push aaa mov (bad) ljmp pop shlb pop adc test or dec ret or sub sub jp loopne adc (bad) (bad) fist jg subb add or xchg loop lret inc lcall in xchg je mov push pop outsb (bad) fnsave push (bad) (bad) (bad) inc sub (bad) rcll in data16 mov scas xor scas std dec iret (bad) (bad) (bad) inc jno inc add xchg mov sti or std mov jmp nop mov lcall ljmp mov test scas push dec scas call mov addr16 (bad) lds sub mov push mov movsl xchg icebp mov add lahf xchg decl sbb pop ret popf aam (bad) (bad) (bad) (bad) sti mov fstpl or out repnz jnp mov imul jge push (bad) (bad) (bad) jmp cwtl mov das int3 mov inc aam dec arpl repnz iret jle mov dec scas stc push mov (bad) (bad) (bad) mov sbb xor or daa or out or jno decl scas xlat (bad) (bad) (bad) ljmp rorl ss mov jo nop xlat test sub lea dec push add (bad) mov mov mov test push cmp or mov push loop pop testb not and pop or cs sarb dec rcrb lahf repz in mov ljmp mov (bad) call gs sahf orl rorb test fildll fsubrp cmp (bad) decl push mov data16 pop mov aad daa insl (bad) (bad) (bad) ljmp mov dec mov adc es mov jbe outsl sub push lds decl mov push jmp jp (bad) pop pop inc int mov test (bad) (bad) jg xor inc mov outsb mov jb jecxz xor subl movsl in pushf pop (bad) (bad) (bad) ljmp loope scas jno into adc jecxz lahf inc inc sub cmpps (bad) lret (bad) (bad) mov inc ret (bad) (bad) pushl scas bnd xchg jnp mov mov outsl jo jne add (bad) jg lock repz arpl lret cs ss mov (bad) (bad) fild sub lret das cmovo pop xor inc jb ret ret sub (bad) (bad) (bad) mov lret stos lock and aaa push xor lock je (bad) (bad) ljmp stos jl jns dec test jb push outsb mov jnp add add rorl pop scas adc and mov repnz (bad) lock (bad) (bad) jg xor jo push pop cmc mov cmp mov xchg (bad) int3 ljmp into (bad) (bad) (bad) jmp jb out aas in aad pop jge sbb mov test test pop inc adc scas clc (bad) ffree and pop xor fs sbb sub or (bad) test pushl imul lret lahf fcmovbe sbb xor or or inc dec xor lock xchg sub (bad) xor mov mov and add loop mov fisubl jle mov and ret (bad) (bad) inc mov and popf adc inc dec jmp lock mov cld (bad) (bad) (bad) jg rcll fucom push add sbb push (bad) stc adcl stos out dec (bad) (bad) call fadds dec push xchg push in movsl mov ret add mov jno push xchg sbb cmp jle pushl cmp movsl (bad) xchg mov lret push fistpll (bad) lods sbb push stc mov inc in int (bad) (bad) (bad) pushl aas lods cmp push fbld sub jno lahf cmp or jg (bad) decl pop in jnp ja adc sarl push (bad) cld push fdivp push iret or mov cltd leave daa push dec lret push lcall add pop lock (bad) insb sub addl push cli insb push sbb divb sub (bad) (bad) (bad) decl lret sbb aas aam pusha lds notb repz popa jl (bad) xchg sar decl jae aas mov ret cld stos xor roll (bad) popf xor (bad) ljmp xchg or pop xchg fisttpll lds mov xchg lock int3 mov and push (bad) (bad) (bad) dec push push aad sti dec js mov mov sahf lret sub sub dec xchg iret inc sti inc cmp jo (bad) (bad) lcall push ss xor cmpsb mov add and ja push mov mov mull sub (bad) (bad) decl addr16 push lcall mov das mov xchg ss push les cmp ljmp adc (bad) jmp sbb xchg subl imul je (bad) (bad) lcall adc dec les push cld out push lods adc out jne imul jne movsl mov aas cmp and push ret test arpl sbb ficoml in decl sti sbb stc cmp mov add cmp rep fdivl ds loop lcall stos cmp repz cmpsl adc mov pushl adc out cli sbb xor jnp mov int push xchg (bad) incl sub jbe adc (bad) bound dec dec fisub js jne push jo jae jo fildl add arpl add test pop cltd xlat lods dec js outsl outsl sub mov cs push jecxz push incb sub lahf inc xlat mov stos outsl jae orl (bad) (bad) decl jae xchg sub sub xchg negl push jle cmc outsb inc repnz dec ficomp (bad) (bad) (bad) ljmp dec jecxz or mov dec dec arpl jp jl mov scas ret (bad) (bad) call cmpsl jne or ljmp and dec mov or (bad) (bad) (bad) (bad) in inc in es xor movsb push paddusw fwait iret sbb in pop (bad) int jg in fstpt clc js cs mov mov add call jl pop imul mov dec out sub dec sub dec (bad) (bad) ljmp lods mov call mov pop lcall iret decb (bad) (bad) (bad) (bad) ds lock fwait push dec sbb in loop cmp int3 or lea jo outsb (bad) (bad) (bad) call outsl orl fistl icebp lcall push add lock push mov (bad) (bad) (bad) lcall repnz scas repz adc jne sahf lds out pusha (bad) xchg loop sbbl xchg xchg repnz cltd jp loopne fwait inc cli int pop fnstenv (bad) (bad) call pop std dec mov sti jbe ljmp mov sub sar ljmp or xchg mov xlat xchg add shrb (bad) (bad) (bad) fist push popf inc pop sub out mov push lds or cs leave stos dec aad mov jmp dec push add cs xor mov int cmp pop cmp jg xchg inc jns xor test jle scas stos sbb cmp inc xchg mov scas (bad) imul std pushl push mov xor lea sbb addr16 sahf dec push (bad) (bad) fldt jl inc lods or xchg stos push push jae push js (bad) xchg (bad) (bad) mov jle sub adc cltd les sbb mov xchg scas add (bad) ljmp push push (bad) fcomp aam popf adc icebp jae mov cmp pop inc pop aam daa ja ror add int mov inc addl hlt nop lret (bad) lcall sub push xchg (bad) mov mov in loop mov mov inc pop and cwtl sbb add or ljmp xor cmp xchg push repnz movsb fwait aas cltd jl (bad) (bad) (bad) mov out nop add cmpsb pop push push dec call loope aad data16 sub repz decl inc jmp mov ret push or bound arpl push fnop pop sbb mov push shr (bad) (bad) (bad) (bad) out (bad) int jecxz pusha jl (bad) out ljmp dec std dec imul (bad) mov push pop lods or (bad) call jge pop sbb dec rcll push jmp or dec lret arpl loopne fistpl loop sti add rcr push mov xchg inc jmp add push jmp sti xchg xchg sahf ljmp jo jb cltd fwait adc (bad) decl lret dec push mov push dec mov idiv movsl sub mov (bad) (bad) ljmp push xchg bound enter dec sbb sti jnp cmc inc loope push mov (bad) (bad) pushl xchg faddp icebp int3 pop adc loop unpcklps and lret aas mov movsb lds movsl xor ret dec in mov nop test and (bad) fistpll shrb push sub mov mov lret push pushf rcrb (bad) (bad) mov sbb js (bad) lock rclb pusha sub mov or aaa std jg imul (bad) xor repz ljmp cwtl repz sub (bad) (bad) call pop (bad) mov xor mov pop push std (bad) adc insl rolb xchg in sahf lcall (bad) push inc nop pop enter bound mov cld divl dec (bad) jg call fisttpll int mov andb ja (bad) (bad) (bad) call add test xchg mov mov xor add in aas xor pop mov lcall bound into es outsb std pop jo subb js inc pop sub xor (bad) decl mov lock pusha bound mov mov pusha test lcall adc inc mov (bad) mov (bad) ljmp sub (bad) push mov or js or test (bad) mov xchg rorb pop or in adc jnp shll fldcw sti sbb xor cmp out cli call sbb or mov test xchg outsl or enter mov mov or dec popa mov and pop jl and lock (bad) ljmp push push or cmp inc jg mov pop (bad) in inc xor add xor adc xchg bound incl cld add mov loopne out sbb mov cmpb pop push xlat aam (bad) (bad) jmp jmp jmp add out adc testb add cmp (bad) (bad) lcall sbb push aas xchg add or jno adc movsb jp das cli incl aaa jo adc mov jg xlat ss aam (bad) (bad) (bad) fist cli push outsl lods xor cmp jnp aam (bad) imul jmp or or (bad) (bad) decl inc shlb add test inc push outsl ss stos xchg adc orl testb and inc addl push insl mov add xchg mov nop sar (bad) decl or and fstps add add xlat lahf shr mov cmp (bad) decl jne (bad) adc mov cli sar cs add (bad) (bad) ljmp movsb ds lcall call sbb dec or mov cmpsl pop or aam decl (bad) incl fwait push (bad) insl mov xchg repnz inc sbb stos jmp out (bad) mov inc ds add inc inc aam pop loope lods lock push jge jns push js push sarl xchg into jp sub inc add bound dec aad adc push jge push sbb ljmp (bad) jmp jmp add mov aam pop xchg mov or pop and stos push fimull sbb cmpsl cli ljmp xor mov mov dec daa hlt and or pop fnstcw xchg jmp or inc and shr mov jl jae xor (bad) (bad) (bad) xor arpl ss add xlat scas rolb lret decl mov scas sbb (bad) mov jle loopne cmc lcall (bad) (bad) (bad) mov fwait sbb dec push ficomp addb mov icebp add push (bad) pop (bad) (bad) jg sbb or mov fcom xchg add cmp les imulb (bad) call or dec cwtl mov (bad) dec mov (bad) (bad) fcomip fcomps jno fsub or inc (bad) clc push pop subb and and (bad) (bad) jmp mov or in ljmp and loop push adc cwtl and lea (bad) (bad) (bad) jmp add mov test mov popa andb cwtl or inc dec test cmp (bad) (bad) (bad) decl insb push or and pusha rolb push or gs or popa ljmp cmp and fadds xchg xor movsb call mov inc mov imul or fisubr xor ds jg std (bad) (bad) fcompp inc sbb iret imul in or iret mov jno sbb mov pushl std pushl mov enter std jns adc (bad) sub (bad) (bad) (bad) decl test (bad) mov rorb and es in popa mov add push push sbb dec sar jecxz test js mov inc psrad repz jg cmpl les mov xchg data16 mov jo pusha jmp adc (bad) (bad) (bad) jmp out ja test mov hlt sub and daa xchg add push push nop (bad) (bad) incl das pcmpeqd xchg and pop lahf mov xchg push loope dec sbb and (bad) (bad) (bad) (bad) cmp aaa aas xchg push pop add jae ret add push dec xchg negl xor fwait (bad) (bad) call mov or xor scas jle cltd inc sbb repz (bad) (bad) (bad) jnp stos mov adc loopne test pop mov jge mov sti aam mov inc sub jmp push js fsubrs ret mov insb push loopne push insl push (bad) (bad) (bad) inc popa lds bound cmp jns loopne dec lret dec pop test enter inc bound pushl push xlat jle dec iret lcall pushf add dec xchg jg (bad) (bad) jmp (bad) inc or pop add jb out pusha cmp sti sbb (bad) (bad) (bad) call dec cmp xchg add xchg test movsb notb (bad) and jne (bad) (bad) (bad) (bad) decl dec (bad) xchg dec ret out popa lods sbb arpl enter lea out sbb (bad) (bad) (bad) incl or inc and and mov dec iret add arpl xor clc or inc popl sbb dec mov clc mov pop dec sub inc arpl mov push addr16 cmp mov (bad) (bad) lcall cli mov ljmp pop push out mov leave cmp std in (bad) out ljmp jg insl jge mov mov jae or xlat out ret (bad) not (bad) (bad) (bad) jmp ret fwait xor push pop fstps dec stc mov cmp outsl cmpsl and cs push xor pop scas aam dec (bad) movsb jnp lea cmp popf dec push jbe xchg mov fs in int3 hlt lods stos push (bad) mov lcall add xor inc out jmp (bad) (bad) (bad) lcall iret sub or ret mov iret and inc mov sbb outsb xchg adc and mov out sbb ficomp xor (bad) (bad) lcall gs sti dec in and test mov mov fcoml (bad) call decl pop pop add fs stos sbb addr16 cmpsb pop sub dec std imul cs das inc (bad) (bad) (bad) (bad) jg sbb aas stos and mov out xchg xchg cli adc fnstsw push dec xor pop (bad) (bad) (bad) (bad) mov loop sub icebp lds icebp adc mov mov fs sahf xchg scas dec ja xchg pop sti add add sub lcall rorb mov push fmul roll lods mov mov (bad) (bad) jb mov lea xchg (bad) lret lret stc dec enter sub jae inc in loop (bad) (bad) (bad) fisubr jle dec jno add push aaa and imul fbld push or mov (bad) (bad) (bad) pushl shrb ja mov cmp dec jg add in push jno inc (bad) (bad) (bad) lcall outsb cmpsl ss jl push arpl in cmc jb adc push jle sti xchg lock les sub add and mov icebp adc mov lret arpl fsubrl hlt (bad) jg in cmp movsb lcall push stos enter (bad) fistpll add scas sbb cmc ds adc data16 cmp sub imul shl pop cmp push daa cwtl mov push inc mov (bad) (bad) (bad) call imul (bad) inc lea aam psllq mov push mov jmp adc xor out aam ror cmpsb push pop xlat mov mov mov in icebp jg (bad) fist dec adc loop subb cwtl int3 cmp xchg gs (bad) (bad) jmp sub or ret imul je sub das fcompl mov or ss shr adc ret dec xlat loope sahf shlb fisttpll xor or mov xor pop jo (bad) push aaa mov cltd sub mov xlat sbb push lds imul pop sbb (bad) insb stos dec inc int jb push jecxz (bad) incl std sbb bound push dec incl push popa inc cmp (bad) mov inc rorl fcoms sub inc inc cmp (bad) (bad) (bad) incl fucom cmpsb sbb (bad) jge sbb and pop cli mov pop (bad) (bad) (bad) decl andl xor int and pop icebp dec adc adc cmp push fsubl call (bad) xchg shrb or data16 out jecxz mov jo (bad) fst insl sub xchg clc lahf mov (bad) mov faddl lods aam movsb mov add mov pop jae enter dec call push incb ret inc loope jbe jno fmuls data16 or (bad) (bad) (bad) jmp push movsl popa loopne jns loop jg je jp or add ret lret (bad) in dec mov (bad) idiv pushf mov push or cmpsb cmpsl jmp pusha mov call testl movsl pop fnstenv jae out push inc test outsb repz clc (bad) jg cmpb pusha push push mov sahf xor fwait xchg rorb dec stc (bad) (bad) out aam sub pusha or mov or (bad) aas outsl cmp cwtl cltd mov dec xor hlt sbb scas fidiv aad out cmc sub in js out (bad) lcall (bad) push ljmp bts push mov ds add (bad) (bad) dec cld fsubrp std stc or pushf std mov fidivrl mov or and pop sub (bad) (bad) call repnz cmp push and pop mov icebp add adc imul dec push xchg pop punpckhdq (bad) lcall fdivl jmp jno mov cmp cltd popf mov or pop cmc call lds (bad) iret cmp cmpb int3 aaa xor push (bad) ljmp adc das movsl icebp bound and data16 pushf pop dec xchg ljmp xor dec push dec and jecxz outsb movsl nop dec inc or (bad) (bad) (bad) jg dec jb dec repnz nop aas push lods les aas fs mov (bad) mov fucomp inc and fisttpl (bad) (bad) (bad) decl add mov sub jmp std adc mov fcoml jne hlt xchg outsl les sar (bad) ljmp sub pop sbb pop pop xchg mov int scas xor ljmp xchg and mov loop mov xchg jne mov fs adc push sub in pop push xor adc inc pop icebp inc mov push negl mov lret dec mov jle or rcrb sbb mov enter jge (bad) mov mov cmc es pop mov push jp xchg adc rol xchg (bad) syscall mov (bad) (bad) (bad) cld nop xor outsb scas sbb mov lahf add lock sbb test mov (bad) (bad) pushl test scas popa mov pushf adc scas aaa mov pop mov add scas es jo ss jle cmpsb cwtl in and lcall dec cmpsb add cld movsl out sbb cwtl cwtl stc bound sbb (bad) (bad) (bad) (bad) cmp fisubrl clc leave mov inc (bad) fldt pop movd (bad) and ret cmp push clc mov jg sub push icebp sub pushf das cmpxchg (bad) (bad) (bad) push cmp pop jbe popf in iret adc mov jnp sub popa pop popa lock ljmp cli notb movb lret adc pushf cld mov lods push pop (bad) (bad) (bad) call jbe cmp push jbe push repz movsb mov push jnp movsl cld inc mov inc incl sbb mov pop sub jl mov call inc lods adcl ret cmpb dec sbb fbld in cmp push jp push xlat add jle (bad) (bad) (bad) push das xorb pop cmp and out xor add int3 inc pop popf cmc fs cmp cs (bad) mov outsl mov in xchg decl sbb mov faddl enter (bad) (bad) (bad) decl sub sbb xchg xchg inc ljmp dec std int sbb imul stos pop in mov test jnp movsl sbb stos push imul add inc sbb jno (bad) (bad) ljmp scas dec push ficompl pusha cmp enter ror es fstps in ret stos mov pushf out push xchg jb pop dec loopne jg stc je clc pop cmpsb or out mov xchg jmp incl mov mov and (bad) mov mov loope movsl and ror out vmovd mov (bad) incl jge mov decb push sbb sub xchg jle cmpsb jmp lcall (bad) loop cltd or inc jb push mov and mov xor (bad) (bad) call mov (bad) aad and xchg add daa sbb test pop xorl push mov mov adc or out test sub cmp (bad) decl inc (bad) sbb inc in loope jg jne insb mov aam dec lahf mov adc sbb (bad) std cli cmpsl mov push int3 mull (bad) (bad) (bad) mov sub ret clc cmp pop mov xchg xor nop (bad) (bad) jmp or add les cmpl std pop jns mov movsl xchg nop pop jmp dec mov ds mov dec mov outsb inc movsl pop cmp (bad) (bad) (bad) lcall stos mov aaa cmp dec sbb es mov cwtl xor jbe (bad) mov push roll jns (bad) insl (bad) stos packuswb and rolb es jle (bad) iret cmp (bad) (bad) mov cmpsb cli leave mov ja fidiv jp mov (bad) (bad) jmp iret fucompp xor aam sub cld dec (bad) iret ret sbb adc add incl add mov aas mov sbb cmp (bad) (bad) mov (bad) or es je jp sub sub xorl (bad) (bad) lcall add into ljmp mov js mov iret push lock jmp mov shrl mov push mov ja adc mov leave arpl cltd (bad) (bad) mov shrl dec sbb ss mov mov test (bad) neg call lods js mov xchg fild sar sbb cmp jp in cs (bad) (bad) pushl loope jmp inc or lret add mov ss (bad) mov lcall dec jns insb dec inc ds xchg cwtl or xchg inc inc jmp call (bad) (bad) dec adc mov and mov pop std inc xchg adc stc push shrl leave nop cmpsb jmp sub or (bad) jmp mov loop call xor hlt xor pop sub lcall push xchg push mov fxam (bad) aaa dec cmpsl adc jne mov xor push (bad) (bad) (bad) call jne cmp jg dec test xor dec add dec jle lock test jns cmp cli jbe mov xor and jecxz push das xor jge (bad) jle stc push in cld (bad) mov pop sbb testl std neg bound ss incl xchg lods out insl dec pop cld push push mov rclb addr16 push or mov push mov push pop push ret ret push mov add imul int xor data16 jo je (bad) (bad) push jle xor push int3 pop jge mov addr16 (bad) decl outsb add mov (bad) pop inc adc aad xor int3 repnz push lret (bad) (bad) (bad) ljmp pop int3 mov ja loopne sub sbb and fstp push pop cmp iret or insl andl xchg sub sub add incl arpl stos stc fldl xchg es out pop mov inc mov cmp std mov inc push mov flds clc sbb arpl fdivl and (bad) pushl cmp arpl or mov mov jne cmpsb inc sbb (bad) (bad) (bad) ljmp dec pop (bad) repz (bad) dec xor aam pop pop test ficomp push in test jmp shl bound sti mov add sub cmpsb (bad) pop arpl (bad) mov mov push hlt adc in push ja adc (bad) loope (bad) jg lock dec (bad) xchg jle or and mov (bad) (bad) inc adc push xor (bad) mov mov in ret xchg xchg inc (bad) jne sarb (bad) (bad) incl popl fisubrl lea in pusha sub loope aas push xchg mov push sbb (bad) (bad) incl sbb dec xchg dec rcll dec icebp sbb lret mov (bad) mov mov jmp outsl movsb push popa testb push pop pop and pushl dec cmp mov inc ljmp pop sub aad sub mov (bad) (bad) (bad) decl xor loop ret mov dec jne push frstor sub stos mov pop fistp (bad) (bad) (bad) pushl ds xor push pop dec pusha adc cmpl stos (bad) pop (bad) lods or aaa sub int sar je out jp es insb sbb (bad) (bad) pushl enter sub xor out adc (bad) leave ja add stc enter sub insb aam pop loopne call out idivb fldenv push test fsub aad sub mov lret cmc (bad) (bad) pushl popa in scas les mov mov push jp inc mov scas iret cmp pop mov inc pop das add adc pop adc data16 (bad) (bad) incl mov add or cs cmp (bad) js inc aas xor xlat gs (bad) (bad) lcall fld sbb test jle ret xor xor adc pop push idiv (bad) call leave ds (bad) bndldx push bound pop and push (bad) inc dec inc (bad) divb jg (bad) jmp scas ret cmpsb orb dec push sbb lcall mov (bad) cmp or add or or lock int mov outsb ds add jl ljmp cmp cli sub (bad) xor stos (bad) (bad) (bad) jmp lcall xor fsubrs dec cli subl fcmovb mov sahf mov fistl add (bad) decl and aaa fcmovu xor adc inc cld sbb mov call (bad) sub test imul mov out ret iret aad (bad) jne ss (bad) jg cmp sub and pop cmp xor outsb (bad) (bad) call lret jnp xchg push push lods xlat or cmpsl mul outsb addr16 dec mov rcll (bad) (bad) push mov add and cltd adc push mov lods xlat mov mov jno call cmp lea and call fiaddl (bad) (bad) (bad) mov dec mov jno fistl push jmp lahf scas mov push sbb pop fldenv mov sbb cld sub xor rcrl stos and call jns dec add push push ficomp xlat pop jnp jae fiadd add lock cld decl adc (bad) jno ret ja fidiv (bad) (bad) (bad) lcall push rol outsb lea popa jmp jo push loopne pand pop repz ja icebp (bad) ljmp (bad) mov mov sub (bad) bound in (bad) jg scas sbb (bad) (bad) (bad) mov push fdivp lods inc mov push (bad) jl add pop cmpsl adc pop xchg stos inc popa mov (bad) (bad) jnp cmp jecxz js sbb fsubrs sbb mov xor repnz sub (bad) aas repz shl pop adc push std repz in xchg aam pop icebp jne lds into jae (bad) ljmp ret mov es stos aaa jnp mul or inc add adc xchg lret decb mov loop push hlt push stc aad call incl pushf mov jb rcl mov mov scas mov xchg (bad) push dec ss mov icebp pushl xor mov mov hlt idivb roll insl lock (bad) mov call jg cmp push push js scas std clc aaa sti adc cmpsb loope mov sbb daa pop loop adc ret (bad) mov fwait adc ljmp pop pusha jb adc xor (bad) call inc jg push rcr adc cmp repnz (bad) outsl cmp push lcall (bad) mov out jbe and mov outsb mov (bad) insb cld jno call push clc (bad) lcall xchg pushf faddl fcom add btc adc or data16 decl je (bad) adc sbb arpl xchg shr jg (bad) mov cli repnz out mov mov jmp and jl mov adc fwait lods mov mov test lods ret mov sub lock (bad) (bad) ficom cmp mov xor pop push push sbb (bad) ljmp (bad) pop (bad) out mov ja test mov lods mov pop pop std (bad) (bad) jg push icebp (bad) (bad) jo mov pushf mov scas add add movsb sti xchg loope push (bad) (bad) (bad) mov fcomps gs inc xor je dec pop movsl cmp add in in (bad) (bad) push rolb ds daa lcall or js aad je adc (bad) (bad) (bad) pushl push xor mov push js ucomiss (bad) cmp test fsubl loope pop mov fdivs sub out inc push aas aam lds std or dec xchg lea outsb xchg push aaa pop (bad) (bad) (bad) (bad) mov std daa sbb clc inc or inc popa fsubs sub adc adc lock insb clc adc and mov data16 mov pop dec or push (bad) (bad) ljmp sbb lcall xchg enter pop pop pop xor (bad) incl jecxz out dec imul push add push test mov test (bad) lcall mov scas sti xor outsb pop inc push dec mov (bad) jmp adc jb mov lods push fiaddl sbb and movsl lret loope das rorb sub xor sbb jne (bad) (bad) (bad) lcall test dec rcll mov imull mov mov sub shrd ss adc cmpsl repz mov decl stc mov int sbb inc add mov mov clc lcall mov int3 pop xchg gs jne out (bad) (bad) mov xor data16 insl sub mov sub test pop lods je jg (bad) lcall or cltd xchg mov inc xchg mov push aad push (bad) (bad) (bad) call push dec xchg sbb add jge jl inc cmp daa (bad) jmp push sbb (bad) pushl xchg testb cwtl lcall and shrb sbb push adc inc dec jecxz pop mov (bad) (bad) decl xchg pop (bad) fdivp inc mov sub dec mov outsb jge xor xchg xchg adc or push shr lret fbld test popa jns out (bad) push sahf add pop jnp (bad) (bad) (bad) (bad) jmp rorl sbb movsb movsl pop pop cwtl mov and fbld xor (bad) (bad) jmp sbb xor add icebp enter inc mov add sub (bad) (bad) jg lods xor jmp adc mov dec dec sub out mov jmp (bad) lret sub cmpl andl lds repnz (bad) mov (bad) fcomip lcall arpl mov fst mov sbb inc fcos lcall jo ret or daa aam xor pop into push les mov cwtl movb (bad) jle (bad) scas fcompl adc or add mov inc pop push imul stc mov insl fadd icebp mov mov out in (bad) (bad) push sub push sub and ljmp dec cmc (bad) int push (bad) (bad) mov dec into xor xchg jnp fidivrl test stc jp mov call loopne popf fldt and (bad) (bad) (bad) (bad) mov adcb lods (bad) cmpsb arpl ds sbb add pop mov xchg test (bad) jmp xchg mov sbb (bad) mov jg mov ljmp imul cld sbb imul adc or (bad) (bad) (bad) mov mov int push sub add daa sbb push xchg stos cmp test fstps inc rcr mov (bad) (bad) fldcw sub sbb std cmp ss add lock and sub and mov xchg repnz test repnz sub bnd pop (bad) incl mov jl push nop les push sub sub xchg xchg enter (bad) (bad) (bad) decl ss in xchg aas clc cs fistl std movq mov scas (bad) (bad) (bad) (bad) out push outsl xlat jmp dec loop ljmp xchg mov push fcoms and push (bad) call pop pop das lods push in jbe pop mov pop or add insb ss sbb scas fs das cli pushl xchg mulb mov lock call aaa mov xchg xchg mov ja lock adc arpl stos (bad) (bad) (bad) decl pop in data16 add and jnp stc and pop fldt inc jnp pop out sub xlat inc fistp cmp jb lds jno sub add out sub stos (bad) lcall test pop fwait scas inc pop pop mov js (bad) icebp cltd jg add out add push adc mov pop mov lds mov int das clc (bad) ljmp dec scas sbb imul (bad) xchg cmp jge aad lret add pop push movsb idivb ret (bad) enter inc cmpsl adc sbb (bad) incl ja leave cmp pop jl dec cmp js mov psubsw add (bad) (bad) incl aam push sub mov iret cld sbb jmp movsb add inc lcall call mov (bad) iret outsb mov in ret fldt imul mov add mov aaa mov (bad) decl xor and movsl cmp mov stc stc lcall test (bad) (bad) jmp test sub test sub push mov sbb ds ds mov and jg sarb xor into dec mov jno jae xor outsl cli (bad) pushl pop mov xor jns popa sbb fidivrl bound (bad) cmp pushl inc (bad) leave dec sub pop push and jecxz movb fdivs clc mov pushf mov jnp loope mov mov (bad) (bad) (bad) dec hlt xchg insb ds cmp inc lahf push call in cmp inc xor inc jg out imul xor dec call flds push push fwait add fwait push mov (bad) (bad) (bad) incl imulb mov xor mov ja fs push lods aad mov jge jmp pusha xor (bad) stos lcall xchg sbb pop adc lods pop (bad) (bad) (bad) incl shll mov movsb stc scas icebp pop leave movsl arpl adc add jg sbbl (bad) call lret idivb inc sti jae lret push roll jne movsl mov xchg or (bad) (bad) (bad) ljmp (bad) adc adc loop cmp pop scas daa adc fnstsw sub push int pop cmc (bad) inc shrb push lds pusha push push sbb ret jle mov (bad) fdivrs jbe fcompl and out mov fisubl imul add (bad) push aaa push sbb inc rclb aaa lods imul or das fnop xchg (bad) (bad) (bad) jmp in sahf pop pop dec jae ret in (bad) jl dec into or fxtract push pop pop aas lcall ljmp jle jns mov mov adc add inc rorl dec jmp jle xorl (bad) (bad) call jmp add sub cmpsl and xor sub dec test dec sbb pop dec (bad) (bad) ljmp repnz adc enter pop ja lahf push adc jne ljmp xchg jge call adc arpl shr jp and inc sbb incl sub xlat add push scas xor loope sbb add jmp jno aad (bad) (bad) (bad) dec aad (bad) in lods sarl adc repnz xor (bad) xor sbb push es dec xor scas add icebp fcmovnb and push mov cltd movsl or loop push sub (bad) (bad) (bad) call pop mov inc and mov xlat and cs imulb negl mov pop iret insb mov jmp data16 xor ja int3 cmp roll movsl push out jb das cli (bad) jns adc push jno in aad push xchg sbb cld jl xchg rorb icebp mov repnz cmpsb loopne subl pop push (bad) (bad) (bad) lcall push inc dec dec sub out mov and sub sarl lds mov std (bad) lcall loopne jp popa mov aam xchg out mov popa daa add (bad) (bad) (bad) decl bound inc imul mov sti add jmp inc xor sbb ret mov mov or ljmp mov (bad) (bad) (bad) cld jecxz and aaa xor jmp int3 ret outsb push loopne andl stos incb cld xchg xchg cmpsb xchg (bad) mov sahf cmp xchg dec jns pushl clc (bad) repz fsubs aaa loop adcl add xor cli pop fmul in jnp arpl inc or incl sbb add sbb pop cld (bad) (bad) (bad) jmp add fistpl je jno inc loopne popa inc mov stos cmpsl insb movsb add es (bad) (bad) (bad) cmp adc stos stos xlat add lods imul mov sahf cmovle lret mov lock (bad) (bad) lcall mov mov pushf sbb roll sti lock loop aad jne dec sub (bad) (bad) ljmp mov sbb mov imul test stos xchg cmpsb mov mov incl cs xchg sti outsl mov jge ss mov mov sub jbe xor rorl stos data16 xor pusha and aaa mov sbbl dec out pop push inc rcrl mov inc mov xor setnp cmp mov adc popa push and xor mov imul aad (bad) (bad) lcall jp mov or gs insb pop (bad) mov or inc inc or sbb in xor sub jnp lcall lds cmp (bad) decl test jl (bad) push stos fdivs outsb das (bad) (bad) sbb xor test (bad) gs push sbb mov loope in mov (bad) (bad) aad sub (bad) (bad) pushl into stos jno stos pop into mov iret outsb out sti adc aaa in or ljmp (bad) dec xor sub sub mov pusha es xor shr jns inc adc clc gs sbb or lahf bound loopne (bad) ljmp clc (bad) inc jno sahf rorl icebp adc mov dec enter adc es addl or nopl andl jo (bad) xor jnp rcrb or mov mov mov in in adc movsl scas adc (bad) (bad) ljmp repnz pop imul pop adc test or add add scas (bad) lcall lock dec test aam das and mov add push call loopne cmp fiadd clc lret xchg fistl out nop fbld (bad) jmp sbb push push movsl pushf cmpsl (bad) mov pop movsl pusha cmp jg adcb pop cmc lcall jno pop popa and ss (bad) lods pop mov decl sbb popa (bad) add mov mov (bad) (bad) (bad) lcall cmp mov mov xorb xchg jge mov fidivrl fwait inc insl push pushf lea (bad) hlt lods outsl inc adc movsl sub pop push pop decl jle gs adc lods mov (bad) (bad) decl into clc xchg sbb (bad) jmp xlat in scas xchg pushf jb push stos mov push jl (bad) (bad) (bad) push test adc add or ja insb shr and lods aam repz jmp (bad) (bad) (bad) lcall sub jnp sub push inc or inc (bad) fdivs mul or out (bad) clc xor lea mov fmuls dec and jo adc es mov ss call cli outsl xchg loopne mov sbb ja add dec push gs ljmp (bad) (bad) (bad) (bad) call xchg and mov xchg daa cmp ficom mov mov xchg xor pushl pusha mov scas mov jmp stc imul lods enter dec sbb out (bad) (bad) (bad) (bad) out cmpsl push pop into pop dec (bad) dec test inc and std mov in lds dec jg (bad) ljmp imul cmp jmp in mov (bad) pushl pop cmpl xchg mov xchg jmp add or mov dec aad pushf pushf push xor xor stos fsubrs out jl loopne mov jmp inc inc fisttp cmp outsl out (bad) mov test or fs ret mov xchg (bad) (bad) (bad) (bad) std mov sub inc mov add push xchg fsub add xor in push push adc (bad) (bad) (bad) incl or add push adc jns lcall (bad) test fs dec sbb (bad) jmp push insl lahf lahf into insl sub push xlat aam repz sbb mov lret (bad) (bad) (bad) pushl arpl shr dec sub mov xchg das mov jmp inc jecxz pop mov (bad) (bad) call mov rolb dec fiaddl ret (bad) je push gs or mov sub sbb cmp imul mov fbld xlat jno sbb je aam dec and in dec ja (bad) jmp ss jle jle mov cmpsl sbb (bad) (bad) ljmp out cmc xor into (bad) clc push gs or sbb outsb jbe imul mov ljmp mov pop dec jecxz fwait jg iret cmpsl pop nop sahf pop int3 dec dec bts mov (bad) (bad) (bad) push xchg mov or mov sub push push gs out orl (bad) (bad) (bad) ljmp ret mov adc shrb pop xchg aas bound push cwtl mov mov (bad) or pushl hlt test icebp movsb in mov in mov fsubr mov jmp (bad) jp cltd repz fild je rorb incb arpl ljmp jmp pop (bad) aam mov mov int (bad) shll inc mov push mov insl inc inc cltd lods mov cmpsb (bad) (bad) out stos out jns stos lods xor add dec hlt and or lock dec sbb in (bad) (bad) fmulp xchg sti push pop shll fcmovbe stos jp test and test (bad) (bad) jmp imul jns pop mov add mov cmp out les (bad) (bad) (bad) mov adc fadd inc lcall in divl or pushl cld add outsl sub out push stc daa into fwait shrl dec xlat (bad) (bad) push cwtl adc dec ret lds js (bad) and js fstps xor mov and (bad) mov pop insb shrl test insb push out pusha scas (bad) (bad) (bad) jmp adc mov xor mov out xor fxch inc cmp andb mov vhsubpd (bad) (bad) (bad) (bad) inc in popa cmp cmp stos or out fadds enter jge jle push (bad) jg jmp es (bad) mov sub xchg add jge mov dec (bad) (bad) pushl dec cs cld lds mov adc cmc inc push gs clc fs incl aam xor jmp jmp or lods cmp out clc and inc mov push divl cmp xor push pop (bad) cmc jecxz jle movsl ljmp scas push decl neg sub push sti lcall aam in iret mov mov jae test repz adc pop cmp fnstenv out add push (bad) inc mov jno add push (bad) mov leave loop ja sar out jns push jecxz (bad) dec (bad) add jo mov scas mov dec ret fisttpll sub mov xor cmp cmp mov adc pusha pop cltd ja jge lock out mov cmp jl ljmp adc jecxz jge push idiv pushl js out xchg mov scas mov mov hlt stos test stos (bad) jg (bad) jmp (bad) push xchg (bad) ss pop dec push out sahf sarb fidivr scas sbb and mov jno inc mov sbb cmp (bad) (bad) jmp or movsb mov divb cmp rcll jnp adc (bad) (bad) ljmp ja add ljmp mov dec js pop add fwait sub js dec rorb lds loop sub mov xchg popf icebp xor mov inc mov loope sbb ja adc cmp sub aad mov call fdivs push mov sbb adcb or add xlat shrl inc mov stos dec lret push mov mov lods and mov push jns lcall cld (bad) (bad) jg and mov jecxz ljmp loop sub xchg jbe sar push stos sub xchg mov dec pop add (bad) jg das fdivrp repz sahf cmp mov or pop stos mov (bad) (bad) cld push push jae pop mov jne aas push mov js dec mov adc sub (bad) (bad) (bad) incl or add rcrb push inc sub js cli xor cs icebp (bad) decl in mov out fnop inc popa dec stc pop xchg jmp pusha dec (bad) (bad) (bad) ljmp xor addl dec test cmpsl push fwait nop or and adc push pop nop fisubl (bad) (bad) fcomip les jp inc lock subl in pop push push add (bad) lcall ret add or sbb fiadd (bad) jg adc pushf rcrl jge xchg movsb add jns mov cmc cwtl aaa mov push std mov in imul insl pop and aaa es jbe pop aam rcrb dec cmp dec mov out outsb jno cli (bad) (bad) ljmp mov fldl movsb stc hlt adc mov movsb lds lods iret adc loop (bad) ljmp add adc ljmp in (bad) push sub adc test dec cmp (bad) pushl std shrl mov incb jmp xchg mov adc inc (bad) (bad) (bad) (bad) (bad) cli sbb mov bound cmc add fs stc outsb and pusha push (bad) sar ficoml (bad) lcall rorl jbe fcomps or in pop (bad) dec push (bad) (bad) ljmp jb cmpsb pop clc dec mov xchg sub roll push sti pop sbb (bad) (bad) decl lods out cmc into mov jmp mov or lret (bad) out (bad) (bad) (bad) ljmp lods xorl loopne mov and js stos rcl cs add mov fnstsw (bad) (bad) jmp sub push push inc inc pop in loop pusha xor lcall fbstp (bad) (bad) incl mov call daa inc xchg divps pop xchg or lock in inc mov sub (bad) call into ds aam xor outsl ror and fs rep or or aas (bad) call mov xor scas sarl add adc push (bad) push jmp cmc adc out push mov popl iret adc jo inc xchg ljmp mov test js adc pusha aad int sahf push jecxz mov cmp mov in (bad) (bad) (bad) call fld sar outsl gs addr16 inc xchg or pop and mov or (bad) (bad) jnp cld es leave int in inc rorb in fwait add sbb and lods xchg lcall in clc es cmp or pop xchg (bad) mov jmp sbb (bad) clc ljmp (bad) pushl std aaa jae aas lods sub sbb lahf lcall pop xor jns jmp or test xor inc jp dec (bad) (bad) (bad) push sarb jno test call mov xchg (bad) (bad) fbstp jle adc inc outsl (bad) fnop xor mov aam sub (bad) jg out test and xlat add cli push das mov in jae adc (bad) (bad) (bad) pushl xchg (bad) lret jnp shrl sbb aas push out or xor jbe xor xlat sar mov push data16 (bad) cltd lahf jae jb insb cmp pop xchg cld clc (bad) decl mov jg push (bad) push adc inc adc xlat jo (bad) (bad) out pushf aad jno dec pop cmp mov mov fxch enter jmp dec rcrl jge movsl ljmp mov fwait push lds mov (bad) cmp mov (bad) (bad) (bad) call and dec nop loop int lret jg or sbb push dec nop xlat adc jg imul lahf or into (bad) (bad) (bad) lcall adc addr16 (bad) icebp mov adc cmpl cmp scas or sbb sub stos ss jl loope jl fmuls (bad) (bad) fistp cld pop cmp push ljmp (bad) cmp (bad) lcall sub faddl push ficompl mov and push inc or xor rol pop popf push jle stos jle dec (bad) dec push decl lods sbb pop push out ret or cmp popa add scas xlat invd (bad) (bad) (bad) (bad) (bad) mov paddq jae das (bad) (bad) into pop xor xchg (bad) jmp sarb xor (bad) (bad) (bad) decl sub in sarb js mov hlt test popa xchg xchg sbb jge push (bad) (bad) (bad) decl jmp imul xlat push cmp mov mov (bad) (bad) (bad) aas lock pop add fisubr sub shll cmp jo das int sbb xchg (bad) call cmc pop mov lock (bad) xor add lock (bad) pop subl xor mov mov and adc mov mov (bad) (bad) pushl fcoms mov fcmovnbe jg pop pop jg push cmp std scas mov jns (bad) (bad) (bad) (bad) in sete cld rcll mov (bad) lods cmpsl xchg adc xor call push in aaa inc push xchg clc sbb cmpsb (bad) dec dec pop test fiadd mov incb out popa add cld into jecxz cmpsb add jp inc imul (bad) (bad) decl or mov lcall lods push divb les das cli (bad) jmp dec repz scas pusha aaa in xor in sub and popf (bad) (bad) out cli add out pop insl lret test sub (bad) (bad) cmp push mov (bad) (bad) decl in mov or sub mov or pop sbb lock add adc mov or cmpsb cmpsb inc adc sub xchg outsb add fwait call and (bad) mov sahf pop shl ret jae sahf or adc dec lcall (bad) mov cmc ror jae sbbb cld je jo push aaa pop mov pop mov (bad) dec neg data16 jge jg test mov mov rcr rcll jo (bad) (bad) sbb sbb lds mov mov (bad) aaa clc (bad) fcomip (bad) inc bound and and lahf mull jo fnstenv (bad) (bad) (bad) pushl lods orl out aad fwait out pop in sbb sbb fidivr repnz and mov (bad) (bad) (bad) fistpl add xchg pop mov daa (bad) adc cli in fstps sar int jl inc js mov fs outsb mov lods xchg in xchg sbb (bad) outsb xor (bad) (bad) incl cltd jge lds push dec iret ret push jbe and (bad) (bad) mov and out (bad) js,pn js neg (bad) (bad) or leave push mov mov (bad) (bad) (bad) jmp pop mov dec dec popa sub mov mov jb repnz mov (bad) pop mov jo loope push imul cwtl clc push test jo (bad) (bad) (bad) (bad) ds leave mov popa cmc or in sbb int3 xchg insl ljmp xor and cld xchg sub das inc in lret sahf (bad) (bad) mov sbb fnstcw es cmpsb mov adc (bad) (bad) mov and cmc mov sub xchg popf ja loop int3 enter pop lock lcall mov adc cltd cmpsl lahf shrd andl (bad) (bad) decl (bad) test rorl push divl pop xchg mov jne adc mov imul (bad) ss out repz xchg sbb ret cmp cwtl std or adc mov aas dec fild pop mov lcall (bad) (bad) jp or push gs xor xorl call es and mov in mov xchg fstl cmp push test jp (bad) (bad) (bad) pushl sbb xor cmp sub test cmp (bad) jmp loop scas rcrl lock or lcall sbb test ljmp cwtl hlt or shll pop rcl (bad) js cmp je (bad) (bad) (bad) jmp sti mov mov sub ficoml mov jmp cmp scas and enter fldenv (bad) call dec cmpsb add add mov inc and push pop enter sub cmp (bad) (bad) jmp mov push (bad) imul jo cli jecxz sbb pop inc mov fcomps ljmp out sbb and cmp outsl cmp cmp hlt repnz daa adc das cltd scas lret xor add push fisubr repnz cmc aad pop pushf or out (bad) mov (bad) ljmp inc (bad) fwait mov repnz mov int cmc add cmc mov std (bad) fstl xor pop or xchg dec jnp jno mov or incl test inc pusha je bound mov adcl out (bad) pushl jl negl cli mov jmp notb ret sub sbb (bad) ljmp mov adc lds enter rcrl insl aas movsb iret (bad) (bad) (bad) call into sahf dec add adc sub mov add insl adc mov cmc (bad) lcall (bad) mov (bad) outsl (bad) pusha mov dec xchg das xor push mov sub mov (bad) (bad) (bad) mov popa mov mov aam mov mov cs clc lcall cmp in (bad) out bound pop mov std xor (bad) ljmp cli scas sahf fs imull or and push xchg fwait std (bad) call cld pop sbb mov dec sahf add call cmp dec cmpsb sbb lcall test dec insb (bad) negb (bad) sub fwait jp xor sbb (bad) (bad) call xchg lret mov inc (bad) mov aam int inc dec sub call (bad) ss (bad) pushl aad call movsl fsubrl pop jecxz in push (bad) xor (bad) (bad) mov pop loopne or sbb (bad) frstor rol mov ja ds data16 (bad) (bad) push add popa imul out sbb es repnz les push (bad) adc aam add mov aam (bad) rorl pop (bad) (bad) decl mov dec sub push or adc leave andl (bad) mov decl mov ret mov insb pushl test mov je popf xlat ret dec adc iret cli fistpll movsb fldenv fldenv add add push popa mov outsl shrl dec xor push (bad) pushf rorb rol xchg repnz das clc ljmp jmp xchg fmul fisubr add shrl xor jg mov notl jae loopne pop shl sbb repnz sbb (bad) (bad) incl mov or push sbb pop fcompl mov int adc jl add cmpsb (bad) (bad) decl cs shll jo push out stos pop xor pop or ret inc sub (bad) (bad) (bad) ds mov dec repz xchg (bad) sbb or mov int3 or (bad) lcall jae loopne fistp mov aas int3 pop pop lret jg sti lcall iret push int mov dec xor mov pop dec xor mov (bad) (bad) dec push js push cmpsb add dec in jecxz mov movsb push add jo mov push aam xlat (bad) (bad) (bad) ljmp jbe test jno test and add pop and sbb roll imul pushl movsl jmp and sub or jge inc popf jl jg call pop sub pop test sbb jno add rcr adc push dec (bad) (bad) (bad) js jnp sbb sbb mov jne daa jle cmp push clc inc pop hlt (bad) (bad) jmp push xor mov and cmp adc and jne sbb (bad) fildll movsl int3 fsubrs jmp inc push popa cmc sbbl mov repz inc mov fcom pusha or pop pop inc mov test repz sahf (bad) (bad) pushl dec push jo jno sbb add out cmpsb jo mov xchg jo (bad) (bad) (bad) mov sub jg test decl mull icebp jb push pop or fcomip dec clc mov mov movsb sub adc mov push inc cmp push (bad) and call repz or je dec push mov xor popf push (bad) (bad) (bad) ljmp xor lret add push loopne jge es les in pop pop lea mov cmpsb adc and cmp call pop imul mov cmp push pop lods jmp pop mov push pop xor mov (bad) (bad) (bad) jmp data16 cltd push insl in sub stos add lret cmpsb mov lods xor hlt (bad) (bad) (bad) cli ret (bad) inc dec mov in mov sbb imul (bad) mov xadd jne cmp (bad) out inc add jno insb lcall incl cmp aaa mov mov bound mov aam adc test fucom pusha arpl ja insl test arpl inc add into mov mov aaa cmp dec lahf push inc mov sbb (bad) (bad) (bad) jg test loop repnz jmp sub (bad) jb inc in popf shrl cmovg push (bad) jg (bad) cld pop sbb pop fsubrs mov jno arpl or mull push mov adc jge roll cwtl test (bad) negl pop imul pop lcall ljmp jno xorb sub and lret push (bad) (bad) incl xor fnstsw ret inc push push aaa (bad) aaa iret (bad) add incl outsb stos icebp xchg mov movsl scas sub (bad) pusha jp push mov sbb xchg xchg out insl nop ds push call xchg push clc push pop mov decl mov jp add insb adc sti loope and jl shrb into adc (bad) fnstcw icebp les sahf xor dec mov js aas (bad) xor out into iret (bad) clc in xchg cltd imul add imul cmc cltd jg push fnsave aaa ret pop pop xchg mov jbe inc lds or fs sti (bad) push mov mov dec lock loopne aam push enter inc sbb mov call sub adc fdiv rolb imul xchg sub jae push cltd xor hlt popa rorb cmp stos push xor mov push mov add jne or icebp lods popf test inc pop push loope inc jnp jmp or ja repz jmp das sar push bound (bad) xchg popf pop ljmp aam cmp ljmp mov imul pop or mov sahf push sub cmp mov mov idiv (bad) (bad) (bad) mov scas lret in xchg inc xor sahf cld jge int jge sbb (bad) (bad) pushl jbe jne loop,pn aas movsl dec pop sbb add adcb dec xor (bad) (bad) lcall outsb lods stc lods lods insl lret rcrl es mov ds xor and (bad) add mov ljmp test gs ds test mov dec sub (bad) (bad) (bad) std nop ss pop aad inc jb daa sbb sub sahf stos mov mov pushl push sub (bad) sub jb rclb xor sbb jns dec pop push icebp (bad) (bad) lcall stos mov adc movsl cli and arpl fcomp outsl clc mov ror jbe or enter cs (bad) (bad) jmp and jne pop aas lds lods push scas test dec dec push aad mov add incl ret cwtl xchg or xor cwtl jmp xor ljmp pop js in rcrb (bad) idivb pop lcall lret push decl sbb mov sub xchg adc imul (bad) (bad) stos scas cli dec rcll sub pop scas enter dec ss xchg cmpsl (bad) (bad) (bad) ljmp (bad) les and imul scas nop mov pop fdivrs (bad) lcall lahf lea or inc pushf dec adc mov ja imul (bad) (bad) (bad) incl (bad) inc in cmp and das daa cmpsl sub lock movsl ds clc (bad) jmp push mov adc inc nop jecxz push xlat jae xor mov mov (bad) in jbe jge idiv xlat xchg add out push xchg mov cmp jno mov (bad) (bad) call xor pusha fstpt add pushf fcoml mov mov orb lcall (bad) fcoml dec cmp scas int3 jo fwait test inc pusha hlt xor std (bad) lcall cmp pop (bad) test and arpl cmpsl pop xchg xchg stos pushf in (bad) (bad) (bad) inc imul adc icebp pop push or incl loope pushf push outsl icebp jne jecxz scas push xchg iret fisubr or test or push (bad) (bad) push out pop stos adc rorl iret iret xchg xor adc int3 je push jno adc nop iret ss (bad) (bad) (bad) call adc dec dec clc lcall mov out cmpsb sbbb lret push pop repnz ljmp std push cmp xchg int bound cmp pushf sbb fist incl (bad) (bad) (bad) pushl (bad) jno ja jne push movsl cld mov mov mov les inc and ljmp daa rcl dec mov aad or imul pop pop mov dec push ja ljmp movsb inc dec mov jnp in add mov sbb add mov mov add lahf fs pop cs pop aaa mov dec imul stc mov popa adc rorl std rclb leave xchg es and decl push ret add movsb mov lcall lcall lock in fisttp sbb inc (bad) in fdivr fcomip incl mov push into sub out into inc jnp add or jmp cld scas push out std sahf aaa and xchg adc (bad) stc mov pop ficomp adc (bad) (bad) (bad) jmp mov jge push jmp lcall hlt sar ds cmpsb xchg xchg (bad) (bad) (bad) decl cld nop jg aad hlt pop jp fiadd jb sbb cmc mov cs incl dec (bad) out sub std fwait scas dec and or fistpl sbb call movsl mov in ret sar std cmp mov cs (bad) gs test pop cltd fnstcw push aad mov in jmp xchg fadds movsl lock mov nop mov mov sub mov lret cmp jmp (bad) (bad) in stc jl add shrb sbb inc sub mov ficomp dec cli lret push cmc push (bad) (bad) ljmp adc inc adc sub lea cmc loop add repz loopne add mov (bad) loopne push (bad) dec insl push leave testl cmp jecxz fcompl push (bad) or rcll sar push fsubrs cmpsl out xlat imul rclb pushl xchg mov out (bad) fdiv aad jl cmc movsb repnz dec sbb pushl dec mov pop cmp add rorb mov sub inc (bad) mov push push out push cmp mov pop dec repz push or xor (bad) (bad) lcall test mov xchg repz popa jae das je lds rorb mov xor idiv je cltd push inc xchg bound cmp test aas aas pop jne (bad) (bad) lcall fcoml psraw aas aad jge popa pushf cmp stos (bad) (bad) (bad) decl mov movsb cmp add mov mov in jns adc cs (bad) (bad) call lcall push dec daa out test pop add (bad) ja push (bad) (bad) test outsl rclb sub jge aas sub sub lcall insb rorl test push daa xchg jp ja dec cmpsl sbb fldl mov dec dec gs test mov call lds movsl (bad) (bad) in das lret ja cmp je loope xchg jne movsb ja aaa inc outsb push xchg ret (bad) xchg cmp popa (bad) or jmp cmp roll lea sub std ja cs (bad) (bad) lcall repnz sub bound sub es loopne,pt mov (bad) loopne int pop sub insb repnz jg pushl dec mov int outsb push stos int3 xchg jo xchg mov jp dec ficom (bad) decl scas push rolb fwait imul adc lock xchg fcomps dec (bad) incl pop lea sub and xchg lcall sbb (bad) (bad) dec mov movsb jae dec cmpb cltd lret push pop mov jne jg iret mov test (bad) (bad) incl xchg jge xchg xchg bound mov hlt decb add into push cld ja call inc mov jg call mov sbbb push repnz xor (bad) xchg jecxz mov jmp dec sbb xchg mov inc pop aam daa (bad) (bad) ljmp xchg add out dec adc arpl movsb or pop jmp sub loopne pushl fld dec xchg fstps mov sbb (bad) (bad) (bad) lcall (bad) push dec ret loop lock ret pause lock lds clc lea repnz push jmp xchg jg sarl cmpl adc xor cmpsb (bad) (bad) (bad) decl ja jae pop nop pushf fsubs js sbb pushf sbb and rclb sub (bad) (bad) (bad) mov dec lods sbb aas and pop jle pop sub pop xor and mov (bad) (bad) ljmp scas loope push mov hlt arpl xchg retw xor push pop xchg lock pop fdivr decl inc xchg sub push test addr16 shlb (bad) (bad) fcomip push mov jno pushf sbb out dec or xchg stos lock sbb int sar dec rclb or imul stos xchg cmp mov (bad) xor (bad) (bad) (bad) incl mov mov cmc sub cmp jmp mov icebp cmpb movsl lods das (bad) icebp (bad) (bad) ljmp bound and (bad) dec cmp jne pop jge xor call (bad) (bad) mov jbe or sahf and and mov push loop (bad) (bad) call fisubr ret dec rcl mov lcall jne ffreep adc lcall (bad) call pushf pop add (bad) lea and and nop clc stc xchg dec mov xchg pop (bad) jg jmp jmp popa lcall incl rorl push outsb andl (bad) (bad) (bad) mov dec xchg popf sub test inc movsl dec das rcrl std stc adc (bad) add push fs outsl push inc jno inc addr16 in dec test adc (bad) mov push pop lret inc mov dec inc insb mov (bad) (bad) call mov (bad) iret pop push push dec and mov test push or sbb scas (bad) (bad) (bad) call cld sub adc jnp cmp mov inc or popa inc js cld or out dec mov cmp xor stc jns and ret mov pushf std mov cmp pop mov (bad) push mov lahf outsl cmp std int lcall out orl movsl lcall (bad) (bad) (bad) incl jo mov pop xor fisttpl lcall adc lock hlt (bad) (bad) (bad) dec mov (bad) sbb je jns inc xchg jg jle pop inc out int3 stos pushf cmpsb lret (bad) jmp dec lds (bad) out xor push inc test mov adc xor incb (bad) mov aad sub adc lea rclb mov add pop add (bad) (bad) (bad) (bad) dec mov xor sbb dec push (bad) loop dec test adc dec cmp (bad) lcall xor lcall clc fwait push inc aaa repnz rolb sti adc adc pushl sbb stos sbb mov or (bad) repz call iret test aaa std add sbb inc ss nop insb cmp loopne jp into jns and fidivr insl push fwait rcrb push ret (bad) (bad) (bad) lcall push mov mov rcll mov mov faddl icebp in stc (bad) (bad) (bad) (bad) incl pop out inc je mov out lcall sbb xorl dec (bad) (bad) sti (bad) xor push mov cmpsl lods xchg lahf out xchg jbe sbb dec (bad) (bad) (bad) (bad) jl cli jmp add ret dec xchg mov and pop jecxz divb movsl xlat push add (bad) mov outsl clc lcall push (bad) push jmp les fsubl (bad) jg cmp xchg mov cmp (bad) daa sub add (bad) mov call mov ret jge call mov mov jp fs mov sarb cmpsl xor ja ss push ja pop inc popf addr16 (bad) adc popl repz out sbb (bad) (bad) call add mov int imul out aam in fcomps sbb inc cmp (bad) (bad) incl add std ljmp mov stos outsb sub sahf mov add xchg (bad) (bad) (bad) call ds push xor add mov xor aaa movsb sub cli xor (bad) decl orl mov pextrw dec inc sahf and or (bad) std cmpb mov lcall jbe (bad) lods jg jge lods cmp (bad) (bad) incl test icebp mov mov jne scas imul cli lock adc (bad) (bad) ljmp inc jne roll lea int3 aad mov ret das push jecxz xchg sub (bad) mov cs stos mov inc xor sub push (bad) (bad) (bad) dec cltd cs in mov xor lds int3 dec repnz mov mov adc sar (bad) incl xchg xor sbb pop movsb adc and je (bad) add (bad) mov fsubrs push insl push and adc push xchg nop clc (bad) (bad) mov test pop lahf sub orb (bad) hlt cld (bad) (bad) (bad) ljmp aaa and cmp imul mov inc repnz push jp popa mov ljmp (bad) cld xchg cmpsl push dec push idivb push lret (bad) out mov push jmp (bad) (bad) fidivrl fiaddl push jns ljmp pusha mov mov icebp (bad) incl outsl (bad) mov in pop pop dec call call push call (bad) (bad) (bad) lcall shrb and int daa imul stos push ja pusha and lea clc sbb mov loopne (bad) or cmc inc mov (bad) (bad) call das out add xchg jmp sarl cmp sub into (bad) cmp loop push mov mov inc sbb roll out sbb test aas cmp mov decl fnsave jb xor cmp push imul jno and jne fs sub inc mov ficoml sub sahf (bad) cmp dec mov and inc mov jle nop test (bad) xor and push and in (bad) (bad) fisttpl rorl add and es test mov ss fistpll call loopne add inc cld inc pop cld out out rcr sub pushf lds (bad) (bad) std jle mov mov aas adc pop orb xchg xor mov dec fs sub inc add ljmp fdivp sub sbb jbe das (bad) pushl push and lret jecxz or xor popa ja adc sbb or int3 jecxz mov jl mov pop mov out sub mov gs lock std repnz mov insb and dec or sti mov jg (bad) lcall sahf (bad) (bad) dec jecxz lret daa stos cmp (bad) jno xor xchg and pop xchg std push cmp (bad) (bad) (bad) push ja mov (bad) aad dec cmp pop jnp xchg mov push dec (bad) (bad) jbe gs out (bad) (bad) (bad) (bad) jge stc xchg (bad) scas lds add std push jecxz mov cmc incl jnp ljmp mov scas push pop jecxz (bad) mov fs jmp int3 sarl jmp add mov js jo push loopne lcall test mov aas (bad) (bad) (bad) ljmp dec test insl imul movsl stc ds fdivl sub test (bad) (bad) jmp xchg bound fs sti inc inc pop stos (bad) testl aam pop rcrl (bad) jmp push in imul jo aaa xchg add (bad) pushf mov or shrb (bad) (bad) (bad) ljmp add sbb adc mov and movsl or imul in sar fcomip inc push and pushaw fisubr (bad) repnz push popl add cmc (bad) (bad) (bad) pushl inc aad fistp (bad) push jae fidiv insl aaa fstps dec push dec xor xor fs pushf or (bad) (bad) pushl decb pushf imul jp flds repnz dec pop ret lcall jecxz loopne sbb mov bound cltd pop mov jo popa orl hlt loope movsb or mov add and js cmp dec and push aad xlat sub sub data16 (bad) (bad) call xchg mov lds dec xor or xchg out cmp call (bad) adc xor leave push pop (bad) jmp (bad) (bad) (bad) mov xchg jae jmp arpl mov dec and sbb pop push mov (bad) (bad) jg lahf (bad) fmull pop imul and cmp (bad) into (bad) (bad) fcomip mov pop xor leave add mov shll adc arpl mov icebp push int aam ljmp xchg aas xlat dec lea sbb js push adc rclb loopne cmp jge rcrl (bad) lcall dec inc xor add cmp cltd rcrb mov lret aam or (bad) (bad) dec sub dec mov in jg push ret in (bad) cld aam sarl cli addr16 lahf imul xchg ja cmp cmc push mov (bad) testl pop jnp (bad) (bad) pushl ret jge inc dec adc xor shrb and mov out xlat adc (bad) (bad) (bad) ljmp push popa pop daa or sub sub clc dec movsb add sub (bad) (bad) fcomip pop cwtl and cmpsl adc ss paddsb in push adc (bad) (bad) (bad) cmp sbb fidivl or dec ret jge push dec push lods and js ficomp push mov xchg (bad) je inc lock rclb loope imul (bad) (bad) call out ror out xchg mov lahf ret fistl sbb je add inc (bad) mov or mov addr16 jl xor pop or scas cs ret (bad) decl xor ret test lds inc incb xchg and das cli (bad) in dec leave imul rorb into (bad) sub sub pop (bad) aaa pop or popa (bad) (bad) (bad) jmp jmp fiaddl dec insl fisub cmp je movsl dec lods jbe je (bad) adc (bad) (bad) pushl inc leave push mov cwtl inc (bad) cwtl dec scas cwtl add imul fnstcw fsubs insl cmp cs nop mov cmp je mov in imul scas faddp leave pop sbb fs cmpsl js imul (bad) mov (bad) fwait outsb clc call btr inc jmp cmpsb arpl pushf insb pop ret (bad) (bad) fcomip lock mov dec jno jno jmp movsb jmp test (bad) jmp out xor out pop decb test insl lea jb (bad) ljmp call xchg popa mov psraw std add inc ja push xchg lock mov aad je out into mulb pop lahf je xor popa mov out fndisi(8087 fimull sbb fadd aaa aam sbb das clc dec sbb sub mov push mov push xchg lret lods (bad) (bad) (bad) mov push xor cmp sbb insl (bad) mov arpl or (bad) incl ds (bad) push jmp shlb pop cwtl inc add push jg ljmp and test lods mov sahf xor fmuls lods movb and push push cld mov mov cmpsl add outsl popa loop gs movb mov inc dec xor mov mov inc pop fcomp scas xlat adc xchg jg (bad) decl (bad) pop (bad) bound xor push imul sbb in add daa dec push mov incl mov loopne or iret push mov test rclb pushl mov pop outsb (bad) outsb or pop cmpb dec test insb (bad) ljmp insl sbb add std popf fdivrs (bad) push out xor jg (bad) jg or ret dec mov and hlt cmpsb scas or dec cmc sub (bad) (bad) jg xchg int3 les movsb fs imul cli cs in nop push pop sar (bad) (bad) call outsl mov enter loope or ret mov sbb jno (bad) (bad) (bad) (bad) fistp inc int dec or push test int sahf pop jne leave aad sbb jecxz cmp adc add jae push ja mov (bad) xor lahf cmp arpl negl packssdw les lock sbb negb ret mov (bad) call pop push mov test jecxz dec clc (bad) jbe movsb (bad) (bad) (bad) jg and fmul xchg ds xor dec pop jge xor movsb push shrb and das sub out jecxz cltd mov mov fnstsw (bad) out lret mov out xlat (bad) idivb cmp sbb xor add add jle pop ds cmpsb aam in push cwtl (bad) decl (bad) push lock dec nop cmp popa movsl pop push cs and rcl fcoms movsb das loopne in push jmp mov jecxz pop adc mov leave xor or (bad) (bad) call push or out scas dec mov pop inc xor fild dec xor (bad) (bad) (bad) ljmp in cltd pop and sub sub adc or (bad) adc cltd fildll call inc cmp repnz mov out cld mov mulb fdiv repnz (bad) (bad) (bad) decl xchg inc push xor and dec rol xlat sbb inc cltd push adc sub (bad) lcall test (bad) push dec (bad) sbb xchg inc xor xchg sbb dec mov loope clc (bad) lcall lea xchg repz iret pop xor vucomisd xchg add cmp jl fwait mov pop or movsl inc sub dec fwait addr16 xchg dec dec insl lods std (bad) pushl xor pusha int notl (bad) lcall jns (bad) (bad) (bad) mov mov adc stc in call mov cmp pop add sub (bad) jg ret ficoml push xchg xchg cmpsb xchg (bad) push pop int or repnz iret and push sbb (bad) mov scas xchg sbb push xchg sub cmp out rcll hlt incl in or ficompl fldt jle (bad) clc (bad) push and fildl movsl int3 sbb lea lret pop add rorl mov inc stc xchg jo dec pusha (bad) mov (bad) push (bad) mov scas dec pop popa dec outsb xchg loopne mov outsb fwait and clc or pusha add mov pop xchg push lock (bad) (bad) (bad) call out sbb cmp push cmp adc push lea iret push adc (bad) (bad) lcall cmp or mov fldl mov rcr outsb inc xor inc (bad) mov (bad) dec dec mov push or arpl out sbb pop xor (bad) (bad) jmp or mov (bad) cvttps2pi repz lret xlat je pushf jg cmp in mov (bad) (bad) incl test fidivl pop lods adc cs jbe and (bad) decb pop jge dec lcall (bad) incl jle or insb adc xor stos cltd insb ljmp add xchg mov jmp ret pop cmc lcall les aam xlat fnop stos daa xor mov (bad) (bad) pushl add sbb stos stos insb in sbb mov sti je push sti jp xchg sub (bad) (bad) dec xchg adc (bad) or add fcomp or lahf test and popf call idiv mov push lds push push jns cmpsl lahf test pop out or fidiv clc (bad) decl insb lea ret sub lock jo xor push popa pop pop adcl cvtps2pi push (bad) cmp (bad) mov adc (bad) addr16 adc inc jbe push lods orps or lea jle xchg lods daa mov sar xchg popf std add cli mov jae out jo (bad) (bad) incl cs or je pop mov pop jp and or (bad) (bad) (bad) pushl les sub test out adc push lock pop test lar jecxz jb fucomi (bad) jg clc pusha iret out mov sub repz add fwait loop ljmp inc (bad) mov and out inc push pop inc in fs jecxz pop hlt (bad) (bad) (bad) jmp std cmpb gs incb scas scas push sti out faddp add call push xor fild aam dec idivb scas add sarl (bad) (bad) mov aas mov sbb adc loop mov (bad) (bad) (bad) scas pop mov lds adc mov inc hlt aas mov negl push loop inc xchg (bad) (bad) jg lods inc cmpsb sbb or lock clc clc repz orl cmp pop mov inc in inc shlb xchg fstps sbb test or xchg inc jl (bad) (bad) (bad) (bad) lcall and in ja scas incb stc adc pop adc mov pop inc cmp stos pop inc mov mov jg inc mov adc scas mov jbe mov incl jecxz neg ss pop je (bad) (bad) jg pop std jp inc cld cmp and std fisttpl mov and fcmovbe adc (bad) aas add ljmp ja cmp fdivrs ror inc das mov cmp mov inc shl hlt ljmp movsb insl mov fildl arpl insb mov enter jnp mov dec jg cld pop in and inc bnd ljmp iret or dec xchg (bad) cmp fs mov cltd jl cmpsb xchg fisttpll sbb pop and and out and inc ds clc decl xchg jg xchg jb mov leave outsl and jg ja mov cld daa stos mov adc in dec decb xchg ljmp (bad) mov (bad) leave push pcmpeqb fdivrl das clc loope call seto and ljmp dec in (bad) (bad) dec mov lahf inc jle stc push leave daa sub iret and stc je sub stc or iret (bad) (bad) (bad) jmp mov dec leave pop dec mov (bad) pop (bad) dec (bad) cmp xor es stc (bad) in mov (bad) and mov enter ss lahf dec (bad) sub mov ljmp fdivs jg sbb cmpsl xchg outsl and dec mov sbb xchg pop inc jle or call stc movsl in daa fild sub scas and ja push mov in ljmp clc loopne (bad) nop mov repnz fisubl mov ficomp mov pop cs cs ficomp in shl jecxz outsl add nop lea into mov fmull negl icebp in pop xor xchg std sub cmp icebp add push ljmp bound cmp xchg aas into add dec (bad) and lcall es js sub push ljmp cs cwtl gs mov and (bad) (bad) ljmp insl sub cmp dec (bad) jne imul adc sti jg (bad) out out push das loope (bad) (bad) (bad) (bad) jp iret ss sbb out dec jo loopne add mov fldl adc fmul push cmp jo mov mov fild push or (bad) decl mov clc add fsubrs mov imul adc (bad) in dec jo xchg ja push sub xchg and jne xchg add (bad) inc stos and xor xchg sar fcoml add ja pop ss fsubl mov mov pop pop loopne in sub push negl jo shr (bad) push add jge (bad) mov mov add push jo rcl inc outsl loopne add pop jo cmpb (bad) in (bad) in out add ds aad xchg sbb push jb notl inc (bad) xor ret incl fcompl dec shl mov (bad) jmp mov or ss jo inc test mov (bad) mov out aaa add clc pop fidiv sbb movsb aaa orl imulb sbb pop test stc mov sub cmp decl sbbl pop data16 rcrb fisttp repz clc aaa adc (bad) lret pusha int pusha mov imulb mov clc (bad) (bad) (bad) fild pushf clc je sub cs and ja sbbl jnp (bad) (bad) in inc ficoml sub not jge (bad) outsb stos movsl hlt fwait push fcomip loopne mov (bad) (bad) jmp pop mov aam adc sbb sbb push cmp dec (bad) ljmp fwait out pop cmc loopne adc ljmp sub ds in lret sub std fwait add repnz ror sub or clc das shrb jnp cmp lret mov xchg (bad) (bad) ljmp and jecxz xor xchg loope cmp mov test pop cld stos aad int3 fidivr (bad) (bad) (bad) (bad) iret or push stos cmp push lret pop loop push mov leave jb jnp pop incl push (bad) push inc shrl sub (bad) fcoms sub sub mov mov test sub pop lret cmp fadds cli in test jo jl mov and (bad) (bad) lcall into mov mov in fimull dec jno dec lret xchg enter mov (bad) (bad) mov jae inc insl inc or or lods mov sbb pushl cld sbb jecxz aaa addr16 lods pop ja mov fldz in push push ljmp (bad) (bad) mov dec jo and outsl js ret int3 aad ss push fnstsw out dec incl fisttpl out xchg imul jle imul shr mov iret mov rcrl pushf ljmp movsb repnz scas sub sbb clc lcall jle out inc sub test (bad) out idivb into subl xchg or movsb adc (bad) mov cmp xchg pusha insl pop mov sbb ljmp aam fucomp pushf (bad) (bad) (bad) incl cmp fsubp mov sti (bad) in cmpsb daa mov insb into pushf fnstenv cwtl fdivrp (bad) (bad) inc aaa xchg aam sbb (bad) das fwait lret out icebp (bad) jb sbb dec push jmp or push (bad) mov fwait jle incl push mov int (bad) pop push loop (bad) ljmp push pop inc push (bad) ss xor aam je xchg ret (bad) mov popf mov sbb lods scas int3 push jno ja stos xor inc loopne lcall (bad) in inc cli xor push sbb int movsl push insb repz push decl insl subb test insb lea jb lcall inc (bad) call cld mov xor cwtl aam mov cld cmpsl mull mov ljmp (bad) leave pop adc lock sub mov push fdivrl fidivrl sar pushl test orl (bad) and cmp (bad) mov push hlt aad (bad) (bad) ljmp int3 sbb mov push mov adc gs cmc push sub pushf repz (bad) (bad) lcall mov and xchg add mov xchg and sub aam addl mov add mov (bad) loop jl mov jb mov mov lcall loope sbb stos and adc mov xchg inc and xlat (bad) lcall pop xchg sbb cld insb ss stc xorb in jo add adc (bad) (bad) ljmp ljmp leave pop sub inc (bad) lcall test fcoms ljmp jb sbb pop mov xor mov jp sbb (bad) decl (bad) jmp push lcall mov outsl movl (bad) lcall xchg test scas iret push mov pop unpckhps hlt sub cmpsl mov xorl pop lock (bad) call xor ss cmp loope movsl pop or loop,pn or (bad) cwtl or (bad) call inc hlt xor jno cmp mov mov lcall cmp cmp aam shlb jl popa xor out sbb add shll mov sbb (bad) call das (bad) cmpsl or push pop dec call jp loop std testl outsl add fs cwtl push xchg cmp icebp adc pop dec sub lds arpl cmp ror mov je pop mov jl cmp jnp (bad) call or pop fstpt (bad) xchg nop rorl or push push lods mov repz mov dec ret jmp sub xchg jae xor mov sbb mov fcomip or jmp and jle dec scas shl mov inc (bad) (bad) (bad) ljmp imul sbb nop test and and bound data16 fcomip (bad) call pusha dec dec fistl insl xchg leave add (bad) stos fist aad dec cltd dec fstpt and jle (bad) (bad) jg dec mov push xor fs jb int3 xor arpl (bad) sub popf sub outsl xchg dec add movsl gs dec loop pop mov sub scas or ret ljmp incl cmp add pop ds mov jge scas sub into mov (bad) out cli push sahf mov mov dec sbb and cwtl mov pop cmc (bad) pop popa sbbb addb or movsl xor scas loopne je lret mov ljmp and mov mov inc popa add inc bound dec sub ret (bad) (bad) jmp xchg mov lahf or xchg xor pushf or mov rcrl cld js sahf ss (bad) jg dec mov inc jae jp nop out out pop je int fistl cli rcrl inc add xor sbb add add imul leave cmp iret mov jnp leave sub aam xor mov (bad) decl and or orb xchg (bad) ljmp adc adc cmp lock out (bad) sahf mov fstl (bad) (bad) (bad) mov lahf add mov (bad) jno js and aas out dec sbb lods xor (bad) (bad) incl pop jns push arpl pop and inc repz call adc xchg add xor adc icebp imul mov loopne loop (bad) (bad) jmp cmp mov sub or jmp cltd ljmp mov or ficompl inc inc adc dec add inc loope ds pop or (bad) (bad) (bad) call push inc xor pop scas ja mov add addl gs dec icebp xor inc jae lret int insl cmpsb dec ljmp (bad) jnp ja stos cmpsb mov mov fsts aaa mov sbb cmp dec shrl enter cltd mov (bad) (bad) (bad) ljmp outsl push fs cs push push js and dec pop xlat aas pop fstpt jg and and (bad) (bad) call out xor jmp stos ds mov mov xorl mov push andb mov rcrl std jge in push sbb test mov jg (bad) ficoml jno sub mov loopne pushl xchg test imul cld mov ficoml or (bad) mov nop rcrb pop ja movsl and mov inc test icebp nop (bad) jg lcall ret pop pop mov sub bound sahf mov dec negb add sub pushl xchg jbe mov cmpsb aas rcrl (bad) cli insl loope xchg xchg mov lods mull sub insb popf mov (bad) (bad) (bad) decl das sub cmp adc xchg pop icebp insl daa inc pop cs call ljmp ret pop jnp call xor outsl inc mov pop stos cmp (bad) (bad) jmp pop xor pushf sarb (bad) xchg cmpsl (bad) repnz stos and hlt lods loope scas add mov sub outsb leave inc ret ret mov add (bad) pushl jns jl bound es test aad xor popf fnop (bad) (bad) (bad) mov mov jb pop fidivr mov pop xor rcll in jecxz ret (bad) (bad) lcall adc into push loope,pt adc jae (bad) or inc (bad) (bad) (bad) incl rcrl jmp sub push test test fucom ret hlt mov add (bad) (bad) cmp aas mov jmp lock and cmp je pop jno decl pop cmpsb (bad) mov pop adc jg xchg sti (bad) lcall sarl inc push fs fcmovnb lret pop into es or push mov decl push xlat test or in data16 sbb adc popl xchg inc (bad) (bad) (bad) (bad) jmp sub nop adc cmpsl mov push jle outsb add inc icebp push mov push ret or add addr16 xor lcall (bad) lcall aam sub pushf xchg sbb daa xchg mov mov dec cmpsb mov scas mov dec jo stos int3 dec push lcall xchg or rcl pop sbb lcall ljmp sbb sub ret fistl push test jge (bad) (bad) mov push pushl push push mov lahf cmp inc jo or xchg push out or inc stc (bad) (bad) mov sbb ret cli lahf add ret inc jg adc sbb mov mov into (bad) (bad) (bad) incl lret jle fsubrl and sub pushf xor sub pop dec (bad) mov or or cmp js jnp insb sbb sbb fsubl xchg mov je insl add sbb sub jo inc adcl (bad) add inc and push add sbb (bad) jle rcll ss rorb mov icebp lahf inc dec outsb inc adc invd lock (bad) incl roll les bound fmull mov adc sbb (bad) (bad) (bad) ffreep int xor mov fcoml into rcrb (bad) lret (bad) (bad) jg sub xor mov mov das enter fldcw (bad) mov mov out (bad) lcall mov dec add lahf push fnstsw dec aas iret jg daa (bad) stc (bad) pushl mov imul std jmp fsubl loope and pop (bad) repz (bad) pushl pop cmp lock add outsl mov jge push fwait jl dec (bad) pop sub xchg cmp xchg cmp dec lds adc (bad) (bad) pushl mov sbb mov xor dec pop or add xchg jae out (bad) (bad) (bad) push test jno pop xchg or addr16 cmp (bad) hlt imul (bad) (bad) (bad) ljmp or mov sub sub shrb clc das into lcall mov cmp mov adc pop sar loope rcll sbb addl jge and lret (bad) jg out push jo push add xchg (bad) imul or sub lds cwtl push call (bad) call nop mov or push mov icebp inc or add (bad) (bad) (bad) pushl ret ds adc roll push jb sti adc or push cmp jmp pushf dec stos mov rorb loopne (bad) cli push pop or xchg (bad) sbb (bad) add sub (bad) (bad) incl insb lcall cmp test and (bad) (bad) (bad) pushl fisttp push cld sbb and (bad) std jecxz mov in or clc loopne (bad) in (bad) lcall (bad) mov sbb push and loop inc jl aaa and les je pop (bad) (bad) (bad) (bad) mov inc dec add pop jl aaa cld inc inc mov dec adc int3 adc daa ret std jmp jno rcll or cld push fs call fild call ja lcall fistpll repnz and test dec adc lock mov inc (bad) (bad) jmp loope or inc stc sub mov push mov xor (bad) and mov lret sub pop iret pop rcrl push addr16 jge mov aaa movsl icebp ljmp xchg iret inc mov cld cmp loopne jae fistl pop sub flds ljmp (bad) lcall lock jg ret xorb (bad) and cld (bad) jg stc jnp popf dec cmp xor adc jne ficoml add xchg sub xor in decl jbe fdivrs (bad) mov jnp in pop pop icebp dec and das sbb lods ljmp imul lock incl leave pop inc mov mov fiaddl (bad) or (bad) (bad) fnop stc inc mov inc cld jo iret sub mov dec lahf psrad inc cld dec dec jg les (bad) lret in movsl sub dec test mov mov xorl mov xchg xchg lahf test mov aas push jmp adc (bad) test daa push jmp in (bad) fiaddl cli popl es loope adc pop rclb and decl pop dec fimul jmp jg clc mov pop (bad) iret pushl les icebp push jle xchg mov clc xchg aas (bad) lret inc insb aas mov leave mov mov (bad) out idiv mov in push aad xchg mov decb (bad) ljmp jmp inc stc lahf in in mov add jbe repnz cmpsl loop or ljmp or (bad) adc ret icebp sub fist mov ret or pop sub sbb xchg jle movsb das sbb mov ret pop cmpsl adc mov jge mov (bad) icebp js hlt pop add loop pushf jb icebp and imul (bad) pop cld cmp push xlat iret push fadd in mov push pop pop aam jmp (bad) mov vdivsd xlat pop je (bad) mov pop cld ljmp jecxz incl repnz stc adc or out (bad) (bad) (bad) pushl push sahf rol add outsl pop mov (bad) popa push test pop into popf pushf xchg pop in (bad) mov xor pop movsb aas adc pop mov (bad) jg out dec in jne stos push mov scas pop fildl mov and das cli (bad) fcompl into jecxz paddsw aas js repnz std mov fisttp jmp (bad) ds add push imul out (bad) mov cmp xlat inc repnz mov push mov cmp in or out cli pop xchg cmp test and cmp push adc or stc sbb outsb sbb sbb jl mov pop loop inc pop (bad) (bad) and lret mov lcall dec jle stos xchg inc test jecxz mov sbb and and movsl outsl clc mov add inc (bad) jecxz aam xchg cmp pop (bad) (bad) (bad) in pop pop cmp sahf aas sar sbb inc sub push cs scas mov mov (bad) (bad) call call or fild aad add int std sbb dec mov fucomi fcompl dec inc ja pop push imul leave pop fistp (bad) xchg das jb push pop leave xchg inc repnz adc nop out and push leave push dec jl cmp js sbb add frstor scas pop dec and repnz push xchg sarb jg mov push iret dec insb out or lret in and lcall (bad) mov out mov pop inc in fwait test push pop jnp jle movsb decl rclb adc xlat test test hlt arpl out sbb jg jle (bad) (bad) jg fcmovu push in test or fisubr or les (bad) mov cmpsl ret pop adc sub fistp mov ljmp push enter mov (bad) pop rcrb test ds cld mov sarl mov mov sub cli lret push and fs mov stos out jge scas cmp jg aam leave rclb jge push (bad) jbe mov fild mov (bad) xchg or cmpsl nop mov mov (bad) push aam dec loopne or pusha mov mov mov jg repnz inc inc jecxz add (bad) (bad) decl data16 and or jne jnp ljmp repz cmc mov fidivl shlb loop sbb cmc push (bad) push (bad) (bad) (bad) push mov test sbb jns mov out or jge cli mov jle mov push std ds imul mov adc scas xchg lret mov (bad) decl adc loop mov loope sub les std sbb mov mov or mov cli mov cmc add sbb push (bad) ds mov jns (bad) jg incb (bad) std sbb dec inc jl ljmp aas or xchg (bad) mov repz cs decb xchg and loope or scas mov inc cmc cmp pop and jae je (bad) (bad) (bad) lcall mov xor ljmp xor mov iret cmp into cmp test (bad) (bad) fstpt mov mov sub add mov xor add outsl das mov push (bad) (bad) (bad) (bad) cmp mov sub cld icebp in xchg pop mov mov aaa mov enter out divl mov inc out mov movsl mov (bad) incl inc scas push aad cmp xor xchg jge jmp dec ja sbb (bad) (bad) cmp mov jle jecxz xor in movl dec into cmp dec jg sbb jbe out lds pushf push mov stc arpl pandn out int xorl mov mov jg es (bad) (bad) incl aaa iret imul incb mov dec (bad) or pop ds int3 lods cmpsb lcall (bad) mov out mov popa stos xchg cmp (bad) (bad) call lock jg mov in xchg pop test mov mov sub aaa cltd ljmp movsb fldl pop pop outsl cmp mov pushl in fsts mov sub ficoml (bad) movsb xor inc lock rorb inc jnp jb mov (bad) (bad) jmp mov push mov mov adcl push add pushl fcoms fidiv divb (bad) jl jnp mov xchg or pushl ljmp or repnz fstps mov (bad) (bad) jg pop stos pop cli add (bad) adc ficom leave aad cmp mov (bad) (bad) (bad) jmp pop pop mov pop push and push inc jecxz mov aad xchg xchg adc fwait xor (bad) (bad) (bad) call cltd adcl aad sub push pop dec adc or push test (bad) (bad) incl neg jae faddl lock dec mov xchg sarb (bad) call pop pop movsb adc mov pop push pop sbb jb mov in dec nop aaa fiadd popa pop add (bad) jmp mov loop dec daa iret xchg js mov xlat add inc xchg cltd repnz (bad) xor sub (bad) and rcrl roll mov pop cld jmp jg and sbb and inc hlt inc cltd pop xchg mov (bad) (bad) jmp mov pop jle or dec mov pop mov into inc ljmp fdivrl clc push sar pushl jge pop pushf sub test insb jo arpl call test mov sub movsb shl mov dec popf inc jbe (bad) (bad) incl outsl sbb stos addr16 dec mov sbb (bad) (bad) (bad) incl xchg or lret insl xchg mov fdivl shlb push subl gs add add adc sbb or xor cltd adc push imul sar (bad) (bad) incl sub sbb mov test push or jmp push jle mov (bad) (bad) pushl lds das pop pop inc push cmp mov leave aam sub sbb (bad) (bad) (bad) decl loop cmpb dec cmp popa into push js mov adc rcrb mov scas (bad) (bad) (bad) call inc jnp test stos push jle push loop stc shrb stos or xchg jmp sub dec jbe push popa scas cmp inc pop scas mov pop inc mov pop adcb dec call into cli inc inc das push popf js test cld orl (bad) ljmp mov jnp mov and mov pop fwait lds cmp stos lods dec (bad) (bad) mov push gs xor jmp jl or out imul sub (bad) (bad) decl lcall mov scas lods loopne inc stos pop shll negl (bad) jmp enter lret bound pop lds orl es (bad) (bad) (bad) (bad) fsub add sub jecxz xchg divl pop cmp jmp stos add add mov jo out aam stos aad pop mov in lret leave inc inc mov std ljmp fisttpl repz and fildl cmp into jnp pop mov rol xchg sbb (bad) mov (bad) jg jmp int inc push cmp adc (bad) ror mov mov out sbb (bad) (bad) dec mov rcrb xor test xchg movb roll push dec xor dec hlt (bad) shlb (bad) and mov push inc add mov lock fdivr (bad) (bad) decl xor rolb test add mov (bad) pushf js arpl ret mov or shrl xchg imul inc clc jne jle jle cmc lods dec push and xchg jp cmc incl sbb adc out das (bad) pop jle mov mov arpl cmc pusha add (bad) jmp popa in test xor inc push (bad) (bad) (bad) call popa mov adc push dec and mov int3 dec add and sar (bad) decl imul lods mov andl sarl cmp xchg ljmp cwtl pop xchg mov shrl adc pusha fwait (bad) (bad) call stc cli test mov js insb mov ljmp clc inc cmp popa les out xchg mov int3 shrb mov pop popa (bad) lcall leave ret cld add das addr16 sbb push lret dec ret mov push mov jmp lcall popa lods mov mov mov sbb xchg mov test mov jl push adc (bad) (bad) (bad) incb sub mov sub (bad) enter xor es out gs (bad) out clc mov data16 fidivrl or xor fs popl shrb xchg ds lcall jmp mov or xor mov out jae cmp pop (bad) (bad) (bad) jg dec mov movsb out ret jnp aam xchg adc push lea (bad) lcall push popf cmpsl and pop and add cwtl push lock mov push mov (bad) (bad) ljmp lods pop cwtl inc inc mov push sbb xchg pop (bad) push in xor xor std jg imulb xlat adc cmpsl xlat pop ljmp cs cmp pop lock mov loope xor insl cmp adc cs jmp xchg dec ljmp outsl (bad) call lods es scas in pop or mov ret (bad) cltd mov sub jmp jo repz or add push and inc (bad) ljmp jp mov lahf inc (bad) sbb or movsb movsl lods clc xor (bad) (bad) lcall push adc nop adc jns,pt xor jnp in icebp daa fnstsw (bad) fcomip call lahf xor mov icebp xor aaa lahf pop xchg adc in dec dec sar std sbb xchg idiv in xchg xchg mov mov int3 test leave fsubp xlat fcmovbe and mov loopne popa testb mov scas dec fiaddl xchg xchg mov stos push call cmc aas cld fdivr pop icebp xor stos add and outsl xor cmc or cmp (bad) mov xchg cmp mov push sub lds jle data16 outsb mov (bad) (bad) ljmp cltd mov stos inc lods cmp mov xor pusha subl (bad) mov pushl fs cmp js mov das inc nop push adc shrb sarb (bad) decl inc sbb sub xchg inc dec bound movsl xor jno or imul (bad) jmp imul adc mov ret les xchg push loope incb sub and (bad) (bad) (bad) fist fidivr xchg dec xchg cmp aaa sub lret (bad) je ljmp xchg xchg sahf nop sbb iret movsb (bad) (bad) (bad) jmp and adc je pop clc mov mov rorl adc or roll jl movsb xlat push outsb shr dec in dec cmp xchg xor mov jle jns out scas dec pop aaa cmc cli jne push sbb (bad) in in (bad) (bad) (bad) mov sub xlat ret pop aas push mov (bad) lds (bad) (bad) (bad) inc sbb cs fistpll mov nop xchg pop mov hlt je push jg ljmp pop cmc insb ret test leave repz pop scas pop rep xchg (bad) (bad) (bad) jg jnp or jle addr16 sahf mov outsl daa lret xchg sub pop cmpsl int or (bad) (bad) (bad) ljmp pop cmp sti (bad) pop in pop pushf cmp xchg out jmp call mov loopne ljmp outsb jle std mov daa lods mov in jae pop mov test and dec cmp sbb mov subl jbe sahf arpl loop (bad) (bad) call push mov sub stos fnsave out mov cmc hlt imul jge scas aas cmc les push test pop or popf fdivrs movswl mov scas jmp (bad) jg je mov clc mov pop dec movsl pop xor xchg insb stc jmp cmpsb xlat xchg ss fwait idivb cs sahf (bad) nopl gs idivb fnstenv (bad) (bad) jmp idivb dec ja sti in pop std pushf jne mov aam stc test jbe cmp lcall imul sub sbbb inc pop pop fwait cwtl clc push es (bad) cmp repnz mov jl std out mov out pop jl mov (bad) daa into imul loop (bad) aas jg pop int3 fidivr (bad) (bad) jge,pt int lea fnstsw pushf in xchg dec xchg ficomp into or cld call (bad) (bad) std fsubp arpl or aaa jle sub pop mov sbb clc pop inc pop dec mov int divl in lods movsb sub (bad) incl (bad) stc mov divl ja fucomi aam test gs push imul mov iret sahf jns dec dec mov stc inc inc mov pop dec cmp and xchg aaa (bad) (bad) incl cmpsb dec call (bad) into popf pop jp lods fldlg2 or (bad) (bad) fcomip scas jae (bad) mov dec int3 flds mov fdivrl sbb jbe call mov or jle lds sahf outsl scas dec jmp aaa outsl out loope (bad) in in shl dec mov gs sub jg (bad) cmp xor icebp loope lret loope (bad) mov stos inc jno into (bad) jg (bad) (bad) std popf ja aas scas or repnz xchg xchg lds jecxz sub stc jnp pop mov in leave sbb inc out adc push jmp mov mov sbb pop push xor mov xchg jg mov fcmovu ja dec (bad) fdiv (bad) inc cmc cmp scas jns fwait cmp je ljmp fistp sub mov jp xchg xchg test mov lret sbb pusha fimul int (bad) repnz clc (bad) (bad) pushl and scas xor jl popa insb iret mov cmpl push pop cld mov dec cmp adc clc loope pop popf jl in addr16 out adc cwtl add nop lock mov roll dec (bad) addr16 fidiv insl (bad) (bad) (bad) (bad) jmp ss push pop daa daa lahf jae cmc mov scas sbb push cmp and pushl data16 outsb pop scas sahf dec aad inc (bad) pop jnp cwtl push jb je repnz lcall sar xlat popa in xor out imulb pop in push addr16 or pushl jmp inc inc xchg rcl mov pop or xor mov (bad) pushl lods jp sub cmc pop mov cld fwait jbe mov fsub (bad) (bad) (bad) call push stos cli ret lea jecxz std pop loop sub jmp orl test out div push scas xor in in (bad) (bad) pushl push mov push push mov jmp fisubrl daa in jbe mov add (bad) (bad) decl jge test xchg inc test jno repz xchg leave bts ss and sar jg icebp aad mov xchg stos fwait mov jbe fnstcw lods (bad) (bad) (bad) (bad) mov adc data16 (bad) std (bad) out (bad) fwait pop or mov rorb call xor aas movsl orl pop pop icebp cmp decb hlt fwait pop out test (bad) decl (bad) fildll mov icebp imul (bad) dec sti cmp (bad) pop (bad) ljmp imul cli stc xchg movsl push or iret mov cmc (bad) push fnsave cld dec popf dec jb mov repnz push (bad) (bad) (bad) in aad cmpsl dec adc jge lods outsl dec std orl int pushl outsb outsb and (bad) (bad) jg mov sub loopne inc sti scas das xchg ja cmpsl les pop lds insl popf xchg jl out and incl insl mov xor testl inc fbstp push in cld mov (bad) call pusha pop lahf dec mov mov lea cli mov daa (bad) (bad) (bad) (bad) lcall jmp ret add sbb ja add iretw ret ljmp push push sbb ret ss das (bad) repz push in pop loope sub fdivrs daa stc flds sbb js popa jecxz leave out iret (bad) (bad) (bad) lcall aaa mov int3 jne jle lods dec jne dec mov fstpl pop mov lods pop repnz add pop mov jb fimul insl push mov sub out xor cmpsb jb (bad) (bad) lcall clc out pop in sbb push sbb out adc mov aam imul rorl xor jl (bad) ljmp rep jmp pop repnz test in cs pop push jbe pop inc xor (bad) (bad) (bad) pushl inc fwait dec stos aas jnp sbb ja addr16 cmc (bad) mov push dec lahf gs mov (bad) (bad) incl int ret mov dec adc mov sub ss push in push imull fld addr16 (bad) (bad) (bad) dec and roll clc lahf fnsave repnz cld pop push das xchg icebp pop cld mov aaa fwait pop fnsave mov (bad) mov setl ss mov jnp movsb jl push lcall (bad) jns fmul pop pop jns jl inc lcall into fwait rclb lock (bad) jg jge sbb dec sbb bound push pusha mov std (bad) push shl push mov out sahf dec fbld and rolb xchg je repnz (bad) (bad) mov ljmp jno inc out ja leave pushf rclb lcall stc xchg xlat ret (bad) xor mov mov mov jg ficomp adc lcall cs dec (bad) lret push pop ja push sbb push repnz test xchg imul mov mov mov mov inc push std (bad) lcall mov fldenv rcl xor or jbe cli (bad) ljmp (bad) imulb and sub call cmp lods icebp mov jmp or mov mov loop cwtl fcmovbe test call je in (bad) mov lea mov neg xchg jle lods jg (bad) sti pop (bad) (bad) (bad) pushl jno sbb xchg xor pop notl aaa fdivrl jg dec push lock dec or jp,pn test out lods or sahf pop cmp mov jbe std mov jmp mov jne (bad) lcall mov lahf ror scas ffree xchg mov cmpsb stos push and push aam pop jl leave dec jge insl mov repz mov sbb mov (bad) (bad) jmp mov aam cli fstpt push mov jb xlat pusha mov and call std (bad) sti ds out in mov std cwtl icebp mov push fdivrl loop mov dec xchg lods (bad) (bad) (bad) (bad) cld sub mov fldt in pop jae lds rclb in push out cld mov (bad) mov mov cmpsb mov xchg ficoml mov add push xchg ficompl icebp mov (bad) (bad) decl inc out sbb fnop jbe push ret xchg dec mov jge shrl mov xchg rcll addr16 and pop and or mov lcall sbb pop adc sub shr outsl das jge jns mov (bad) (bad) (bad) incl inc pop mov fidivr fisub mul std or push es push repz (bad) (bad) decl mov cld jo mov push adc push mov xor jns (bad) adc sti std stc mov pop stos xchg sbb test cmp cmp (bad) (bad) (bad) jle xchg pop jl push jno mov outsl push sarl pop push jbe xchg mov (bad) movsb (bad) (bad) (bad) lcall xor int shrl pop imul cmp mov stos (bad) (bad) (bad) (bad) jnp cmpsb xchg pop pop arpl outsl icebp insl and lahf lret mov and push (bad) ja jg (bad) ljmp cmc sbb mov mov idivl fdivl inc xchg jae pushl cld lahf cmp mov mov shrb rcrl (bad) (bad) jmp jmp cmp aad xchg jno gs push dec cmp test (bad) (bad) jmp (bad) aam idivl lret inc push sub mov mov dec pop addr16 scas std jne jge (bad) (bad) (bad) call mov jecxz arpl lds jmp or dec push jae (bad) mov fsubrp mov sbb lahf jp mov sub pop (bad) (bad) (bad) (bad) out dec jne cmp addl sbb data16 sbb stos xor je (bad) (bad) (bad) lcall jge in mov and (bad) mov data16 jecxz nopl imull (bad) (bad) pushl and popf mov gs call jbe mov (bad) (bad) ljmp out push jne pop dec out xchg (bad) xor nop mov out jmp (bad) ljmp stos gs add out inc stos mov out or (bad) (bad) call push outsb insl xchg xor mov aaa vmwrite test dec cmp (bad) (bad) incl sub stc (bad) std lods in pushf cmp push in leave mov ret cs es (bad) pushl test dec ljmp xchg sahf ss pop pop mov vorps mov sbb jge jns cli push je xchg inc pop pop dec pop cld mov inc (bad) (bad) (bad) incl int3 ficom lahf jle aaa pushf push mov roll aam lods fdivp adc mov inc int mov mov test (bad) scas mov ljmp rorb xor mov and or je shll hlt pop sti mov lcall jae xor inc aad xchg outsb mov sub mov xor (bad) ljmp aam pop repz push cli into lret dec xchg scas in sahf xor insl in mov aaa jae or mov outsb (bad) in icebp inc (bad) (bad) (bad) call push mov push stos pop inc fsubrp cmp cld out jne push push xchg jle push push (bad) pushl mov test jbe or jle fldt adc and jmp xchg imull inc or out mov (bad) lahf jecxz sbb (bad) jg jg sbb cmpsl repnz jne (bad) (bad) fist je jo das das cmp xor cs das push outsl insl insb popa das insl outsl aas inc cli jmp gs js outsb je imul call add add sub int jb push dec push push ret adc and push push das xor dec add pop sbb cmp add outsl ret scas push pop js sub (bad) fldcw ss ds push incl (bad) cmp jle outsl jp insb sub xor sub xor in data16 (bad) push add imul cmp push dec sub add int jbe in cmp sub inc in add jle sbb xor jne jne jo fdivp cmp mov sbb inc mov aas mov imul dec popa mov inc hlt cmp imul mov je push sub pop mov pop sti fdivl mov sbb push xor imul cmpl xlat sub adc fxch (bad) decl dec sub sub je push dec aaa sub (bad) mov xchg subl pusha cmp adc add jb inc (bad) mov dec sbb outsb into icebp bound cmp (bad) cmp (bad) bound xchg or jl das je test jns or daa mov out push xchg js push cmp add out clc fwait jbe mov sahf out mov or out hlt cld lcall pop insb push push (bad) (bad) (bad) lcall (bad) fidivl mov test adc fwait mov mov push xchg mov (bad) (bad) (bad) jmp ja fstp push out popf mov ret mov loop bndldx dec jl loopne push dec (bad) (bad) (bad) lcall and les lods jno adc fadd loopne cmp inc jl popa pop push cld (bad) push sti (bad) lahf out jl (bad) jae mov cmp inc add jb mov cld (bad) (bad) lcall mov pop sub sub into ds out push test pushl scas mov in adc xchg (bad) mov loopne sub test (bad) (bad) (bad) (bad) fdivs out je js cmpsl decl jp add pushl scas sbb (bad) (bad) (bad) (bad) cli (bad) lods insb into dec lahf and mov int and sub fcoml cmpsl (bad) (bad) (bad) decl bound sbb outsb into movsb adc dec repnz sbb insb stos xchg sti inc data16 (bad) (bad) (bad) push xor xchg or and ret push xchg xor stc call scas inc mov pop pop dec cld push mov sub add lds lds (bad) lcall cmc xor inc jns adc inc pop out push xchg push cld push fiadd lcall (bad) pushl idivl lds dec xchg jg and std into inc in and sti (bad) decl adc pop addr16 (bad) insb dec dec or mov cmpsl ror sub (bad) dec push rorl mov test jbe mov lcall in lods xor and (bad) (bad) (bad) mov or xchg inc leave jns popa aad (bad) cmp push jecxz scas xchg (bad) (bad) (bad) lcall negb jg test nop sbb push mov insb pop mov fstpt (bad) fiadd hlt xchg or negl xchg dec jbe out sub (bad) pushl mov mov pop test cs pop or jo cmpsb mov (bad) mov out sub push pop (bad) dec adc sub xor aam (bad) (bad) incl test mov cwtl aam cwtl imul mov dec (bad) (bad) ljmp loope cmp add notb push inc lock inc dec popf add insb (bad) decl es jmp lods (bad) cmp lahf fistpll (bad) pusha les stc mov out xchg adc cmpsl stos cmp ret lods cmp pop imul pop mov in push lods outsb test pop fisttpll ds call (bad) pushl mov jl rcll gs js rcr (bad) in incl negl mov and adc stc dec sbb sbb push sub call mov fmuls call das (bad) mov xchg ja,pt jle dec les dec in (bad) repnz xchg jp pop mov outsl add gs (bad) (bad) (bad) ljmp xlat adcb mov or jmp and movsb sub (bad) (bad) lcall or or (bad) jp pop push sbb in mov xor push mov insl (bad) (bad) (bad) jmp cmp nop sbb pop mov xchg mulb mov mov (bad) (bad) (bad) (bad) cmp jmp jbe and mov xor or xchg nop adc and (bad) out cli xor and and fadds int3 pop (bad) shrl lds and (bad) call (bad) jmp cli dec fadds in (bad) test push icebp (bad) call adc icebp jbe fidiv in fsubrs dec loope dec arpl fisubrl xchg xor adc pop out cwtl mov inc xchg adc call xchg cmp mov and sub (bad) aaa aaa mov call pop jge pop out jbe,pt out push mov jnp xchg jl cmp and (bad) decl sbb or dec hlt mov ja out mov (bad) (bad) push dec jb xchg dec and mov xor outsl into push std daa in loope xchg adc jecxz inc push xchg mov adc cmp cmp imul (bad) (bad) fldl (bad) std cmc or push int adc push fiadd mov fldcw jl adc jae (bad) (bad) (bad) call adc (bad) xor fidivrl jge movsb cli in sahf sbb mov (bad) (bad) jmp pop fidivr arpl mov dec add test testb or (bad) aaa mov lret xor cmp jae inc (bad) dec (bad) int3 jmp or sti mov (bad) (bad) decl pop mull shrl jno ja sti cmp cmp pop push cld (bad) jmp scas jo mov sub sub pop lock jmp mov ret xchg repz aaa icebp in mov aas mov dec cs or adc mov (bad) jmp pop xchg fisubr (bad) ss divb pop pop loop mov insl (bad) (bad) decl je lcall push xlat pop dec outsl fwait mov (bad) mov xorl add lahf inc popa mov dec jmp scas sbb xor les (bad) (bad) (bad) (bad) pushl mov jne fistpll add mov jle sti jge iret ja stc cmp daa cmp jnp mov (bad) (bad) decl sarl push and cmp shlb sahf mov or lods call inc push mov lret mov dec outsb inc lds loope mov (bad) (bad) (bad) (bad) stc inc xchg xor pop test loop mov into lods lock xorl nop (bad) (bad) (bad) jmp (bad) scas int and fisttpl push notl fs inc inc insb fstps pop push fprem xchg (bad) mov sbb and xchg mov fildl pusha in mov (bad) (bad) ljmp inc imul mov push gs dec xchg inc and xor in jp gs push xor lock je gs (bad) ljmp ja push les addl out jmp mov mov push cld sbb jl mov in shrl dec pop enter ljmp aaa cmp sarb mov in hlt popa lock (bad) (bad) decl cld push push stos xchg jbe rcll pop lcall gs cltd inc dec lcall lcall in push dec in repnz adc fmull xor mov mov mov (bad) (bad) cmp data16 push ror in aaa mov lcall dec xchg fs dec (bad) (bad) (bad) jmp cmpsl jne loop neg out std mov mov pop into lret mov addr16 mov (bad) (bad) call divb dec mov pop pop xchg aad pop enter push repnz (bad) (bad) jg js and popf adc mov cmp mov xor xorl in xchg insl mov jne leave jns pop push xchg into lcall push inc call (bad) pushl fadds sub into pusha (bad) adc mov lret mov sub (bad) (bad) (bad) incl cmp sub addb int cmc out adc push clc sahf (bad) (bad) (bad) call lret jae and out mov fdiv jb mov jne push (bad) pop pop and (bad) (bad) pushl sub data16 adc daa subl jge leave pusha (bad) (bad) (bad) lcall orb mov cmpsl lea (bad) inc faddp nop lea lock (bad) std repnz push pop rcrl (bad) gs cmp pop add gs sbb mov fbstp mov sar sbb mov outsl enter decl pop (bad) iret (bad) out cmpb pop add push in notb decl and mov push push xor jp jbe loopne push cmc pop lea (bad) (bad) incl cmp or adc cmp push jne push cmc or hlt push sub sbb (bad) (bad) (bad) incl jmp dec push add cwtl pop mov sahf mov dec mov (bad) jno clc sbb sbb rcll sbb mul push lods cmc subl neg push mov jmp push xchg (bad) (bad) (bad) jmp in adc cmc movsb mov inc icebp xchg cmp sub stos scas enter push xchg cmc mov (bad) (bad) (bad) pushl inc rclb cmp sub pop in dec push push cli rcr (bad) ljmp push inc ror mulb por mov mov repnz xchg (bad) sahf mov imul mov cmp push bound xchg dec inc jl mov lock shrb (bad) pushl mov add xor (bad) xchg rorl aaa mov test xlat das sar incl shl and jg test loopne icebp addr16 (bad) cmp ljmp pushl jg mov insb push sahf pop jbe test scas xor or or ret cld jmp ret inc clc inc mov and jg mov fsubl push mov inc or or daa fwait incb (bad) mov lock push jg sbb jg outsl jecxz (bad) cmc cmpsb insl lods sar (bad) out push mov outsl lods xor pop pop scas pop dec pop cltd movsl lcall dec xchg xchg fcoml enter fs sbb pop jne xor (bad) incl mov and ljmp sbb mov psadbw into fistpll idivl sub jle or jg push add and jo sub add xor mov (bad) cs dec cmp (bad) jmp sbb sbb cmpsl mov xchg popa xor stos mov sub xchg (bad) out fwait (bad) (bad) (bad) (bad) jmp push inc jne xor jne arpl jno pop jecxz xlat fldenv jl cmpsl sbb inc (bad) (bad) (bad) (bad) std jmp adc in test in insb xor push jne insl lret jo int in sti add (bad) incl ss push xchg dec sbb das mov mov mov stos rcrl cltd cli idiv out popf in jo (bad) jl push push (bad) jge dec dec in sar pop jo pushf sarb lods js loopne lock dec lods movsl cli sti in aam (bad) mov xor pop or call add (bad) (bad) (bad) jg out popf insl mov jb dec cmpsb nop stos jle scas icebp sub push cmp push (bad) (bad) (bad) jmp addr16 inc ljmp jp xor cmpsl jmp gs pop push negb and hlt push add (bad) (bad) (bad) jle mov mov inc into mov aas imul mov or or pushf pop sbb jae (bad) (bad) (bad) decl (bad) dec fwait add cltd out jno ds xchg frstor leave sub adcl idiv (bad) (bad) jmp xor push pop mov movsl pop fildl pop sarl das stos lods inc stos jno loopne imul (bad) in int scas xchg (bad) dec xorl test mov cmp leave pop (bad) lcall add push inc pop cld clc sbb mov cltd (bad) (bad) (bad) jmp push cmpsb sub mov mov ficom lds xor (bad) (bad) (bad) jmp jge outsb pop lret mov pop and in pop addr16 jp mov outsl fld dec adc ljmp mov sbb and loope lcall or popf test sti (bad) (bad) (bad) mov test sahf neg addl out pop jno mov int3 xchg inc pop or insl xor cmp rclb mov sub out and lods test in in push in (bad) cmp xor gs cmp decl fisttpl popa sbb sbb mov push sub pushl and pop out pop lret mov jbe lret xor jg inc ficoml scas (bad) aas cmp adc cmp sbb (bad) (bad) (bad) lcall mov cmc sub (bad) cli dec aam in sahf ret (bad) jl cs repnz mov ljmp pushl cltd cmp push adc dec mov ret mov dec sbb les (bad) (bad) push cwtl cmp xor (bad) test mov insl (bad) dec (bad) mov push shlb (bad) (bad) decl js pop je popf cmp lcall lods xor jp in stos subb (bad) (bad) jg ret dec fistpll andl (bad) gs mov sti in clc int inc mov psubusw pop imulb mov inc xchg mov enter (bad) sub (bad) (bad) (bad) jmp xchg push mov int mov (bad) arpl js xchg push xchg ficompl (bad) (bad) (bad) ljmp adc cmp fwait xchg cmp inc mov aam pop mov (bad) (bad) (bad) lock std sbb sbb sub push xor sub dec out call mov lcall mov add lcall inc int mov stos movsw mov lcall (bad) call pop push inc ficoml in jecxz cmpb pop xchg push mov (bad) (bad) push sbb jl (bad) inc xchg sub std mov sahf stos icebp add mov and fcomip pushl fiadd lock mov xchg sahf rclb mov ljmp xchg leave ret outsl fidivrl addr16 ds jge in das out std scas or adc scas cli test dec and sbb inc cli dec stos ja jne (bad) (bad) (bad) mov out cmp pmaxsw dec pop icebp xchg outsb mov jbe addr16 cmp in and xchg (bad) (bad) (bad) incl fisub out xchg imul xchg xor add mov mov jecxz dec inc cld (bad) (bad) ljmp mov fisubrl mov jg repz pop jb sub shrl jb add clc incl pop jne dec (bad) fwait xor mov mov (bad) call repz orb xchg xor hlt push lods fimull dec rorb mov mov fcoms out cld (bad) (bad) pushl sbb jecxz mull lahf dec cli xor sbb mov out adc sub out clc ja stos hlt jns inc es aam mov adc jmp fsubrp inc push mov (bad) (bad) (bad) dec (bad) jecxz and dec pop mov ljmp xor aas pop lock lcall lods adc adc (bad) hlt jnp sbb mov adc (bad) decl (bad) cmpsl mov xlat mov lret push sbb sbb in inc xchg mov test ljmp (bad) icebp add loope (bad) and pop pushf pop sti adc mov iret ja flds cld ja pop clc (bad) (bad) call xor mov repz fsubrs vpunpcklwd in push mov (bad) (bad) (bad) out mov mov add in je arpl xor (bad) (bad) (bad) pushl mov lods mov in or inc sbb xchg test out jecxz stos mov sar fwait fwait dec xchg shlb inc jb ss add rorl movl xor pop ret dec je leave inc aaa dec mov bound mov or mov decl push (bad) push jmp xchg imul insl add lcall mov (bad) (bad) (bad) (bad) cmp push bound mov enter insb int and mov adc cmpsl mov (bad) (bad) decl lret lret mov dec mov sub pop mov push push inc cld (bad) call roll into hlt fcomi out jno iret push mov dec out pop loop data16 mov mov aas ror jg js in (bad) (bad) ljmp into dec into iret sub sub dec int3 dec lods test dec xchg jns repnz push mov push call andl test push in test push mov (bad) jg inc adc sbb xor mov shrb call iret gs shrl or mov jg cmp insl sub sub cmp shll cmp loope inc push inc inc leave mov pop (bad) (bad) ljmp dec outsb or add mov cmpsl fnstenv mov lea in pop cmp dec dec add push test rorl lcall fwait adc jo sbb in movsl mov (bad) lea pop loop adc (bad) (bad) call outsl je mov test cwtl dec insl xchg sub int inc push mov test dec push (bad) (bad) (bad) dec jae pop jno aaa inc dec jno or sti in pop outsb iret subl sti push dec sbb insl (bad) and loopne mov dec imul in int pop (bad) fsubrl (bad) (bad) mov leave push xchg popf jno outsb lahf and and cli mov (bad) (bad) call and push scas (bad) ja test flds inc dec xchg push inc xchg int3 inc dec xor dec pop fnstcw dec mov je test push loope inc dec cltd jmp (bad) fcomip nop mov ret imul adc xchg sbb jl lea mov mov (bad) (bad) (bad) (bad) mov inc loop adc jbe notl pop fsubrl pop add mov rcl outsb fstpt push sub popf or mov mov sahf fcoms lcall mov xchg inc sub pop fidivl sar repnz jns call outsb mov test icebp (bad) (bad) loope lock jecxz jl gs (bad) (bad) (bad) jmp hlt subb sub leave sub int3 mov dec adc (bad) dec mov (bad) (bad) (bad) pushl inc out jp mov cmp (bad) and cmc push cs push push add mov dec idiv (bad) (bad) aas lds out mov jo mul or dec loop xchg bound (bad) (bad) (bad) fild pusha cwtl add dec inc sbb rolb pop and fcmovu cmc pop into aam mov idiv (bad) (bad) ljmp adc and xchg pop pop mov jo inc inc jle dec xor bound (bad) in (bad) in jae outsb push pop push or or insb add mov sub jns and cli inc and push pop mov (bad) out scas gs pop fwait push fisttpl dec or ja (bad) mov fcompl pop sarb (bad) pushl mov sbb jne test lds call adc pop js jno sub xor sbb addl cmpsb fs lock lock scas (bad) (bad) (bad) (bad) mov inc aam (bad) (bad) popf in out stc into cmp std repz and add (bad) (bad) cmp mov add mov sub lahf aaa mov (bad) jno sbb (bad) (bad) fstpt and enter lds data16 xlat adc xchg in stc (bad) (bad) (bad) mov subl outsb fs mov insb aam in and mov dec mov sbb int xor pop cmpl loopne pop push and (bad) (bad) ljmp sub xor bound adc push push add (bad) bound mov leave int3 subl incl push clc rolb push or fistpl bound ljmp or pop fcmovb inc mov in and addr16 sti mov (bad) (bad) inc sub repz xor cmpsl loope in icebp cltd inc mov cmc (bad) incl sbb push roll or push (bad) call (bad) ljmp inc lret test ss pushf fwait jle pop fildl xchg (bad) fisubrl aas scas clc (bad) lcall fistp pop pop js test push mov pop std (bad) jmp push dec hlt fiadd and xchg jae jecxz cli pop lahf lcall decl sbb popa jno or inc lcall push lods or sub leave cmpsb ljmp pop cmp mov cltd aaa rcrb out and or lahf mov (bad) jmp (bad) push xor mov fiadd push loop pop xor lahf push mov and mov test mov aam es xor mov mov mov sbb xor in push rol jmp (bad) in push xor arpl sbb clc xchg sub int3 outsb (bad) (bad) (bad) incl shrl stos loop push cld pop adc sub lds push dec test (bad) (bad) (bad) decl dec jmp insb jg jg in (bad) xchg dec aas mov sbb (bad) mov popa gs add or loope movsl rcrb decl cmp dec mov ja sbb cli push cmpsb add cltd and (bad) (bad) jmp gs mov xchg xor sahf mov xchg pop es cmp das clc xchg mov in push out pushf enter (bad) aam enter xorl (bad) (bad) (bad) dec imulb push repnz sarl (bad) pop fbstp fmuls daa jb push mov repnz jle lea (bad) (bad) (bad) incl dec das inc je and lret sub lods adc jbe mov sbb xor (bad) (bad) (bad) dec (bad) js test add jge daa dec dec fimul and xchg jmp fcmovne aad (bad) (bad) (bad) ljmp cmp cltd fwait dec leave cmp xchg decb (bad) ja sti mov xchg fwait std dec fildl (bad) (bad) ljmp stc imul enter (bad) rcll std scas cmpsb imul ret (bad) ljmp insl (bad) lods xor xor inc in and sarb xor xchg loopne mov ja mov shrb inc adc inc aaa (bad) (bad) (bad) incl movl cmp or inc in dec or adc push (bad) jecxz (bad) (bad) call mov mov repz xchg lret rcll (bad) (bad) decl cmp imulb inc cli enter mov je xchg jmp cmpsb sbbl (bad) incl cmpl scas push mov adc clc mov (bad) (bad) (bad) decl arpl cmp aaa in xor jmp pop jl dec dec (bad) (bad) (bad) (bad) mov sbb xchg pop jo fwait pop mov sub addr16 shlb xchg dec pop sbb (bad) (bad) incl cmp repz mov les sub mov dec mov mov and in hlt xchg call or mov or movsb mov leave dec xchg cs jnp movsb leave dec mov jmp sbb sbb ret cs sbb pop out or jmp dec or sbb (bad) leave (bad) push mov jbe daa mov mov call dec cli imul (bad) dec xchg mov repnz jmp mov xor in out div scas mov imulb (bad) (bad) (bad) pushl jbe jecxz sub iret ljmp and hlt adc jp cmpsl push rorl pop fdivs adc or (bad) push pop jg adc jg shrl fwait xor dec int jae fcompl (bad) (bad) (bad) (bad) call es test mov (bad) jne imul xlat movsb fimul xor arpl push (bad) (bad) (bad) (bad) mov cmp xor (bad) jg sbb sbb fsqrt inc in stc pop cmp decl cmp mov out repz pop lret setl insl fwait call (bad) pushf dec loopne mov sbb ret sar ljmp aad scas lcall xchg xchg outsb push (bad) decl mov je getsec pushf dec sub dec mov (bad) (bad) jmp lock repz xchg fistpll jno push pop cld jp push push pop mov icebp (bad) (bad) (bad) jle fstps jecxz dec fs sub xor cmp (bad) outsb sbb fwait notl (bad) pushf arpl pushf mov sbb je (bad) (bad) decl je jo inc popf fdivrs adc inc popl mov clc fs (bad) lcall sub pshufw jae or sub (bad) fstl and inc or (bad) decl out mov test mov cmp pop ja jle (bad) stos jbe pop cs cmpsb jp mov xchg loop (bad) std mov mov push (bad) int3 mov cmp (bad) je inc cmp cmp xor ja ret out (bad) mov mov push imul mov xchg cmc push aaa push clc lcall sahf jl outsb or or cmc and (bad) (bad) mov xchg mov xchg pop popa adc pop jl mov dec push int3 mov call lods xor or in fstpt rorl (bad) and (bad) call mov movsb movnti call pop push dec aam outsl mov xchg ds inc mov std or or (bad) (bad) aas (bad) xchg dec mov sbb sub imulb popa stc sahf and scas fstpt (bad) pushl sbb xor xchg in pop add fstpt negl cltd (bad) lcall or fs out dec mov pop pusha jge xor (bad) (bad) js sbb cmp jno add xchg jp in jmp in daa ss or lcall inc adc inc add stos in push imul dec (bad) out (bad) (bad) jmp sub fcmovbe ret fimul in leave mov push into subl (bad) decl xchg jae leave movsb lret and xchg gs loope mov sbb (bad) (bad) and lock lcall dec inc cli sbb sbb ficom jb push cmp lds sbb sbb xchg pushf jle push xlat shrl dec (bad) (bad) jg faddp sti jmp (bad) incl lea add aaa xorb mov in popf movsb push mov dec xchg add mov sub sub cmp sub (bad) decl or ret fild push and mov nop popa in mov mov lock cli imul push xor xchg add push les adc cwtl mov pushl lret je rolb mov pusha adc std hlt (bad) (bad) (bad) decl sub loope test ljmp loopne pop sub xchg loope (bad) pop push js or ljmp or in ror call std call test into mov lret loopne cmpl lock incl imul mov xchg or out xchg loopne xor xchg mov jmp pop rorl fiaddl int3 push and xchg push or pop mov push (bad) pushl cmp insb pop push push xor mov mov test (bad) (bad) ljmp out push icebp mov pop arpl dec leave push mov pop cmp xchg lcall out dec sub lret les lahf sbb push fsubs in (bad) (bad) call xchg fisubl cmp idivl and push jns cmc test or insb and mov fisubl ret adc dec das xor add lcall sub mov fist out stc xor (bad) pushl xchg cmp xor decl lret test test fsubrs enter adc pop adc push ds or ret or test xchg mov inc (bad) (bad) (bad) mov lahf adc les bound dec or call (bad) testl aam (bad) jmp push insb and and and sti mov arpl and inc arpl jns das jns adc dec push dec dec push push jae mov idivl imul and mulb cmp push pop mov cmp dec jmp jmp aaa cs outsb and xor je push imul push jae push imulb and outsl je mov or cmp push cltd xor mov ss arpl jo add sbb int lmsw or inc imulb outsl mov in ret push das add and or add and or push jno insb push stc nop (bad) das push jbe rorb lcall rorb pop ja xchg and ss je pop cmp xor push jo fadds bound jae jno add fsqrt mov outsl pop fs xor addr16 imul mov (bad) outsb jp inc loopne fidiv sub add fiaddl scas jl add fs cmc and sub insb push popa sar outsl push pusha inc jb insl push push inc push push jo arpl (bad) incl pop ja popa push out mov les (bad) hlt ljmp (bad) push xor mov mov push movsb mov aad (bad) (bad) (bad) decl dec mov mov sub mov sbb dec jno repz (bad) (bad) (bad) fiadd test ficompl jmp (bad) mov hlt movl imul std (bad) (bad) (bad) (bad) in leave mov add insb push arpl psubd or outsb cmp imul (bad) pushl addr16 add aam dec std test movsl cli test xor (bad) leave mov incl mov xor fild or shrl cmp ficom push xlat enter call popa sarb and mov cltd xchg mov mov or or (bad) (bad) (bad) jmp or adc stos sbb data16 inc fdivl jno add (bad) ljmp adc out mov mov movsl in lahf xor mov js stc add mov (bad) lcall cwtl push loope or insl or fsub hlt push imul insb (bad) call sbb xor dec ds xchg push insb jnp add (bad) hlt or (bad) fcos (bad) (bad) pushl adc mov mov bound ficoml gs aam pop popa add into pop cmp mov notb cld inc movsl fisttp xchg fadd (bad) shll jmp outsb xor (bad) (bad) (bad) decl pusha fidivl add in add pop dec or cmp add daa adc scas cli call or and test lahf in into push stc ficomp (bad) (bad) lcall cwtl (bad) mov test (bad) pop cmp mov cmp lods insb mov in (bad) (bad) (bad) pushl loop add inc aad scas ja popf adc push fdivl or (bad) (bad) (bad) incl insl or or push in decl xchg daa scas add mov pop jge xchg (bad) (bad) (bad) (bad) call mov add inc push imul xorb sbb push imul aam call loopne loopne rorl int3 dec fldl out mov pop data16 call mov (bad) jle shll push repnz (bad) (bad) (bad) mov cmpsb fldl mov dec ss fisubrl or scas (bad) dec add pusha jp inc ret out (bad) (bad) (bad) jmp push fbld out mov jns imul andl shrb ss push xchg ja (bad) (bad) decl add mov das es lds or sub mov cmpsl decl (bad) call ret (bad) mov sahf fldcw ret es pushf mov (bad) call or addr16 jb push add adc mov jnp jg icebp lcall mov fwait mov xchg or sub (bad) or rcl (bad) (bad) (bad) incl clc mov push int mov mul ja outsl ja mov out std (bad) (bad) cmp jo (bad) lret pop or adc sahf gs scas (bad) clc sar imul call mov loop mov push addl mov cmp cmpsl notl pusha rorb (bad) (bad) incl dec (bad) ds push scas fcompl fldenv fild cmp aaa push scas mov fidivr (bad) (bad) dec mov jmp repnz lret mov cmpsb mov sarb sub stos lods call push mov jp dec popa les sbb xchg sub test ljmp aaa mov or sbb add sub mov inc mov jae pop jbe outsl insb pusha fstl sarb xor cmpl dec cmpl imul pop add stos stos and or push xchg test xchg push push and stos stos and or adc dec inc push push push and xchg mov push outsb or mov dec loopne mov or inc gs ss outsb mov add inc js push outsb fs ror xor push int3 jae push push push push push outsl or adc push outsl insb cmp fadds insb dec outsb inc popa cld pop pop test outsb clc lods sub pop mov inc jne adc and add push push or ds add pop mov push gs insb insb sbb sti adc insb int adcl imul sbb cwtl cmp and xor inc jbe inc subl inc movsb sub pop inc imul sbb sbb fs and jge jge lret add arpl js and popa or jne gs and insb and mov arpl das jae shlb inc cmpl cmp test dec add imul dec inc dec inc push adc imul adc lods or xor scas add aas adc outsl jne je popa pop or sbb out pop xor dec inc add mov inc out push jbe mov push cmpsl mov jne or sbb xor add pop push out push popa insl mov adc xchg ret xchg in loopne adc mov jae insb mov cs bound jo inc push inc bound loopne mov je dec popa cli insb gs pop fadds inc push aad xor adc divb sub pop movsb mov xor mov shrb fidiv outsb jle push pusha dec loopne movsl das sbb pop test inc inc fs xor inc out sbbl pop mov sahf fsubs cmc lods dec inc lods inc jns push imul cmp jmp add jbe xor cli ret mov jp je insb gs imul adc fisub int sarb or push mov xor sub mov mov xchg das sbb aas adc bound jecxz jbe sub and inc imul test (bad) mov sbb xor sbb sbb mov fabs adcl mov ds or add jae adcl adc inc mov push ljmp jne inc jb push pop or outsl mov cmp ds je enter pop ja dec xor je mov jne jne inc jae sub jne jns push rcr testl (bad) mov jns pop sbb pop inc mov add mov mov or pop inc adc leave dec mov movsl mov js and and dec inc dec mov cwtl inc popa sbb mov fs fadds mov out fiaddl int xchg ja or dec xchg sub add sbb pop pop or pop push (bad) push and adc jne iret fildll pop fwait cmp mov outsb adc dec xor insl inc insl jae pusha ret rolb inc cmp inc int test ljmp or roll inc jl fdivs shrl add mov daa jl loopne mov add cli shlb out jnp repnz push and stos push or loop and je sbb fsubrs or loop and or es lds pop xor je (bad) pop lret mov push and and jno push cs jne jb fistpll hlt scas mov sub ja clc inc shll jae xor test jne jns arpl lcall arpl push pop and cmp outsl popa popf and icebp pop pop sbbl fstpl jg xor sbb inc xor mov inc and daa dec out mov fs mov mov sbb movb push (bad) clc xchg and jae ja loopne jo sbb adc sahf pop stc dec inc out aam bound push mov sbb in mov js pop jbe outsb imul (bad) and scas sbb xchg xlat xchg add push mov sti or inc mov add mov add cmp addb jo sub daa inc js pop fxch dec movsl dec stos fild lods or mov inc add test loopne shrb outsl xor pop fimull xchg cmp dec aas add clc dec dec inc aad jge mov mov movsb lods fsub push jne fs pop xchg ja mov outsl int popl addr16 mov fwait lock pop jns call insb fs adc mov sbb mov data16 mov pop jb outsl cmp sysret sub pop imul or jae orl outsl sub int3 jne cltd shrl into and sbb sbb andl mov adc iret push cmp rcrl ja jo je adc mov bound fs popa jns jne adcl vpacksswb hlt arpl add (bad) xor call add je or dec (bad) xor adc test add cmpsb imul icebp cmp push push push pop mov je mov jae movsl pop add push push add imulb les loopne add or or idivl roll xchg dec push adc lock inc out popa fcmovne pop push add (bad) mov das add add jae adc mov fsub dec fcoml mov pop add mov hlt out sbb rorl adc add jno,pn aad xchg or rcrl test adc lock ret fiaddl sbb dec add pushf mov push and push cmp cwtl pusha and add mov lods push add aaa push jmp and (bad) adc add mov lea push or jmp nop nop nop nop nop nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jb dec add jne mov sub adc adc jmp add jne mov sub adc adc jmp xor sub jb shl mov inc xor je sar mov jmp add jne mov sub adc jb inc add jne mov sub adc jb add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov jns movzwl inc push inc mov push call or je mov add jmp call popa lea push cmp jne sub jmp 