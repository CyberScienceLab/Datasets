loopne or add add dec add add add add add add add mov add pusha ja add xor add add add add adc add add or add insb sub add or sub add or sub add or sbb add add add adc sub add push jae add or jb add jo add add sub push add or add or pop jb add jo or add je add sbb jb add jo or add je add sbb add or add je add sbb add adc push adc sub push adc lcall or add je add sbb push push adc outsl or add adc pop pop adc adc adc mov aam or add adc adc or add or pop adc or add adc outsl or or outsl push add or or or or adc mov sldt or or adc add adc adc adc outsl adc add adc adc outsl adc add adc or pop lea add add adc adc add add or ficom adc add or adc fiadd sub add adc add add add cld add or add push add push add or pop ja add lret add add xchg add add jae gs cs gs jne arpl cs gs jne arpl gs fs and arpl insb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push jns je insl cs gs jne arpl cs jne je insl gs gs jne arpl gs add add add add add add jae gs cs je imul insl jae outsl jb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp mulb or xlat jmp mov cltd xor mov lods popf sahf inc jg mov sub pop stos and popf lods ret mov imul lea mov bound (bad) and (bad) enter clc xlat mov into (bad) cli pusha fdivl pushl out push lods sti lcall add into cmp push int3 pop push and pop jl,pn mov mov jp cmp in xor das xor dec inc loope dec (bad) pop int shrl dec xchg xor dec inc sub dec xor sbb test dec sub xlat inc push not xor mov stc data16 fisubr js outsl jb lcall cmp adc add dec add add add add add add or add test add loop add and add jno add add or add xchg add add or add add xchg pop add jmp add pop or add or add add pop add add add add add add add add add add add or add add or add add add or add add add xlat push add les add mov or add add (bad) or add add push or add add sti add add push add scas add add imul add add add add jnp add hlt adc add add push inc add add add push add dec add xor add dec add jae dec add xor je xor xor inc add bound push add add pop add inc add xor xor add add inc xor push add insb add inc add dec add add add push add add push add inc add data16 add add cmp push add jae adc xor push add jns jb pop add bound insl add add add push add xor jae arpl aaa add add add push add inc add js arpl xor add xor add sub add inc xor jne push add aaa add jno dec add xor aaa add push add outsb add arpl je cmp inc add outsl add pop add jne jne push add add inc add aas dec add inc add xor add push add popa add push add add push add xor dec add add dec add jns xor inc add dec add push add pop add dec add data16 add add add dec add dec add pop add add push dec add add xor xor add imul jp inc add dec add outsb add add add add add push add add sub add js add push inc add cmp dec add push add xor je push add add pop add inc add jle add dec cmp push add add xor push add inc add push add insb add add add inc add add push add jo xor add aaa add add ja insb add outsl add inc add cmp inc add push dec add dec add add jb jbe je dec add add add add test add inc inc add add push add jae dec add add bound add push add add push add dec add add add dec add add add add push add mov inc add inc add add push add jp dec add jb cmp dec add add push add add bound dec add xor jb xor push add jae pop add add pop add inc inc add add inc add add add jo xor add push add xor jae bound add insb add dec add je jb xor add add jbe dec add out add inc inc add xor inc add jb ja xor popa add add outsb add push add imul add inc add imul add jbe push add inc add dec add cmp insb add lods add ss add data16 aaa add data16 jb insl add dec add add imul jns ja push add add jbe push add ja adc add xor add dec add dec add inc add je inc add push add pop add jno cmp outsb add xor push add js inc add cld add xor jo inc add add insl add add inc add add pop add add add inc add ja xor inc add and add dec add outsb add add jo inc add imul xor xor jp push add xor jbe inc add dec add xor push add add xor xor jae pop add cmp inc add insb add inc add inc add pop add add jno ja data16 add dec add add ds add xor add inc add jbe pop add inc add xor push inc add insb add insb add add bound add add dec add add jp add dec dec add add bound jae jb dec add push add dec add dec add add inc add popa add je xor push add inc add dec add add add add add add add push add jns inc add outsl add dec add dec add dec add xor add push add inc add movsb out add push add push add add add inc add add push add dec add dec add jbe outsb add dec add pop add push add dec add mov push add inc add add ja xor dec add cmp push xor push add add insb add add jp add add dec add jno data16 add jne into xor add push add popa add dec add add push add add insb add add inc add push add arpl jno aaa add dec add pop add dec push add jae inc add insl add add imul add push add jp inc add xor imul push add aaa add inc add push add push add ja xor insb add jne outsl add out arpl add add xor arpl imul add imul popa add add xor jbe jbe xor add dec add imul add pop add push js insl add jp add add push add add dec add add push add xor add inc add jno push add inc add sbb add xor add xor add dec add add xor ja push add imul add add imul inc add jns inc add xor cmp insl add add jo jo cmp aaa add sub popa add add add jp inc add insl add jne inc add add insb add add push add cmp push add dec add push add add add add push add add data16 add dec bound xor dec add add add xor dec add push add popa add add data16 jns jns imul pop add push add add add imul add je bound imul daa add inc bound bound je pop add xor dec add popa add dec add add je xor inc add push inc add add dec add outsl add add push add insl add push add insb dec add bound outsb add imul jns push push add xor dec add outsb add bound jae push add add push add push add inc add dec add add dec add popa add jbe dec add inc add add inc add insl add dec add dec add pop add xchg pushf add inc add push add je imul add jb jns push add xor arpl jp cmp inc add push add add add bound xor jo push add cmp add jp stos ret add xor add bound data16 bound add jno xor add outsb add add xor xor aaa add data16 jbe je inc add ljmp add jp dec add imul jns inc add add dec add add add add push add push add xor insl add add dec add insb add pop add aad add push jno push add add dec add add jb outsb add inc add jns bound push add add imul add jbe push inc add xor aaa add data16 add cmp insl add je bound cmp dec add xor xor dec add add add dec add dec add add add jne jae xor xor inc add add ja data16 add jb jns lcall add jb js push add bound ja pop add add add add add imul inc add add xor push add jne add add outsb add add push add add adc add ja jp jb xor inc add xor pop add xor xor dec add popa add push add js xor add pop add inc add outsl add sub add imul xor aaa add dec add dec add add pop add add push add push add add dec add push add inc add jne dec add xor inc add add xor ds add add ja jns jno dec add dec add add jns inc add add add dec add inc add push cld add dec add add add aaa add add inc add insb add push add popa add cmp cmp arpl jo jno bound xor add popa add jb jp dec add jb push add push add add inc add add xor push add js add jno jbe inc add insl add data16 add add xor add dec add add dec add insb add xor sbb outsl add push add add add push add add jo aaa add inc add inc add jne push ja data16 data16 jne inc add dec add add xor outsb add aaa add push add imul add add jb dec add dec add js push add add pop add add add push add outsb add add add dec add jo add push add add add xor jno inc nop push add jo jp pop add add dec add inc add insl add add outsb add inc add add add push add add jbe imul mov add add pop add popa add add push add xor jae jno push add add push add add dec add cmp dec add push add js cmp xor add jno push add add add add inc add add add ja xor add cmp arpl cmp inc add add push add add cmp dec add xchg add add insb add dec add push add add xor add inc add inc add xor outsb add outsl add sub add add cmp add jo jb push add add popa add cmp je jns inc add inc add mov pop add ja dec add add dec add cmp cmp push add add add inc add add outsb add add xor aaa add lds add add jb push add add push add xor dec add jae inc add add js push add jp add push add dec add add add dec add push add add add fisubl add dec add xor add dec add add dec add xor push add inc add jp push add add pop add enter jns add add pop add xor add jno jae dec add popa add cmp insl add dec add add add pop add jns imul dec add xor push add insl add xor add cmp add js jbe xor sub pop add jbe bound dec add popa add jbe jns jp dec add add imul push add add je jbe imul js imul add arpl push add jns push add pop or cmp add add push add je xor dec add je pop add pop add add je push add aaa add pop add add dec add dec add push or and add add xlat dec mov fildl and adc add jnp pop bound stc fscale push lcall test shrb popa popf (bad) sbb adc adc bswap or icebp (bad) mov sbb inc ds das stos mov std data16 sub pop movsl add mov push xchg outsl daa sarb push mov (bad) out test stc int js xchg inc sahf and inc lahf div sub dec add mov jbe push lods push (bad) or xchg add imul adc insl ret sub std xor push lods in into dec stos xor jmp add xchg inc dec ja sbb int loopne jecxz pop sbb mov cmp xchg xor inc pop sub cmp xchg cltd push sub cmp in cmp (bad) icebp mov pop fwait in sbb pop ret mov xor (bad) push ret bswap (bad) rcl shrb or or jae test sbb sahf scas jnp mov fsubl fucom pop cltd lahf jl mov scas out inc mov pop stos ja clc imul xchg jl adc fcmovu dec sbb clc mov mov movsl mov pop mov push mov xchg mov cmp mov je hlt fmul inc das xor xor ret jp sbb jmp xchg ret idivb bound push lods cmp and pushf leave ret push fdivs popa int3 lea in jp add xlat xor notl data16 dec xchg lahf sbb jge test outsl mulb into mov test aad repz xchg xchg cli mov push imul xor cmpsb xor pop xchg mov lds fstpt add (bad) xor push ss sbb ja scas dec movsl ret test lcall cmp movsb mov jge cmp lret addr16 mov outsl out les test xor movsl jae int3 insb (bad) cmc (bad) int mov idivb test cmp or mov mov imul enter or leave or test in xchg xchg push scas and push add out rorb jg add stc adc jle fistpll js lods mov divb xchg int3 sub or push idivl adc push mov push faddl dec lds push mov jno pop inc imul addb and in arpl cmpl mov fistp jne ret jbe fdivrs adc cmpsl jmp stos mov fucomip out and (bad) cmp fdivrs (bad) mov cwtl loope pop fldenv negl mov mov aaa jecxz ret subl lds test xor popf fcompl dec xchg cld fwait mov sub pop mov (bad) nop or inc push and jmp adc jnp shl aam pop xor lcall ss (bad) enter dec jnp mov popf into jl loop fbld mov fimul mov adc in (bad) lds xor mov mov pextrw xchg mov mov push and jmp jge push jmp ffreep pop addr16 jb and pop pusha shlb ret mov adc loope dec hlt cmp xor loope jecxz mov fmuls movsl (bad) in ds pop cld fnsave mov clc inc xchg scas sub push xchg pop hlt push aam adc push jne in jns xchg (bad) out cmp scas in cmp popf dec out cmp cmp mov cmp shl pushf jl sbb sub mov pop add add jae or push jb lock sub jae shll push test fisubrl pushf jecxz enter lods pop std out daa inc mov les jne pushf in mov movsl push xlat cmp xchg sub pusha stc movsb adc fimul add out lcall mov jg sbb das mov (bad) ja add mov je pusha aas push mov and shr xchg push mov popf adc movsl hlt cmp insl adc fistpll (bad) (bad) ret inc pop mull xor jge push sbb cwtl outsb push roll xchg mov (bad) jne mov dec pause stos mov pop mov add sub repz xchg xchg pop cltd dec jp xlat movsl xor in or les rorb enter jecxz rcl xchg mov mov outsb lret sbb fsubp mov or lock lds pmuludq push popa sarb adc test mov (bad) cmp and mov push test notl xchg cld adcl jge cs fistp cmp adc popf or dec ret cld sub push pop div push ss pop pop sub dec or lods (bad) cmpsb cs cli lock adc mov popf fsts mov sub dec pushf call add push or cmpsb int3 pop pop dec cltd jmp sar sbb inc lahf cmp popf pop inc cmp xor (bad) movsb stos outsb push loopne xchg mov cmp cs clc inc rcr repz inc mov xchg or (bad) pop fstl cmp fistpl mov inc cmpsb sub imul lock test push jbe fcomi xchg shr mov jnp xchg movsb push int3 sbb xchg (bad) loope push enter adc int3 or dec adc xchg jecxz rep js lds cwtl xchg add nop jbe decb lcall pop insl mov das out test ret (bad) out in push adc cmp cmpsb push sti andb fsts add cmpsb cli jne xchg pop test adc aad push fisttpl add hlt movsl xchg pop or or daa scas aad adc xor nop loope (bad) in aaa lahf sub mov sbb mov cmc out mov xchg xor jne out add hlt les ret fstpt mov sub int3 out in push add adc inc rcl inc imulb outsb xchg sar cs outsb push out add pop add loop cld enter pop sbb add es mov iret lahf mov xor mov cvtps2pd addl jg fs data16 bound sbb push sub in daa jbe pop (bad) mov dec sbb add jno push (bad) cs cmpsb mov push mov cmp mov add push cli jl xor into lret sbb (bad) mov and fcomp sahf pop cli rclb inc jnp sbb mov xchg jg adc in mov lods loopne fwait add jg mov add dec es cmc nop adc mov mov jmp mov fsubr cld cld scas mov movl daa ret sbb imul mov inc pop jnp mov lcall loop sbb inc dec sub xor (bad) mov xor leave mov dec inc mov sbb inc pop es popf xor add xchg mov stos cwtl loop dec push sub imul inc add pushf lock dec xchg push jbe lods mov addl in (bad) sbb cmp inc lods jnp add stos jo fmuls outsb gs cmp mov addr16 and out lahf in inc iret test clc sahf mov cltd fsts lcall cmp clc mov test into push inc push cmpsl lret shrl adc push scas mov adc neg mov xchg sti gs js lods xchg or jge out scas xor insb push (bad) push dec xchg scas cmc int3 rolb fisttp fwait mov jmp in test dec enter xor scas jae mov mov test push lock in (bad) in int pop fadds lahf pop gs pop push mov test push ljmp in lods sbb or loop call (bad) cmpsb xchg ror jne das or lret lcall or (bad) pop add add sub js fwait gs mov jp arpl cli sbb (bad) adc pop jmp outsl xlat es sbb and push sub mov pop fcmovnbe jae pop (bad) dec cmc pop fisub jae out imul aas test mov ss add popa pop sbb add lret mov ficomp test stos jae ret hlt sub loop ret pop mov jbe xor push movb (bad) dec decl scas sarl movsl aaa pop inc mov (bad) adc mov (bad) (bad) je sub cmp cmp addb xchg mov repz int and inc fdivl movb xor test cmp addr16 xchg add lock cld lock push in int add into shrl outsl and test mov xor inc popf stos jmp sub push insl cmp cmc mulb push leave in sti cmp stos roll mov mov shrl jbe dec sub es mov stos movsb inc (bad) idiv fildll insb (bad) inc adc jg push sbbb outsb sbb cmp cmp push and mov rcrb mov jle push ret je mov insb pop (bad) cmp loop cmp movsl call adc cwtl fistp adc push adc inc (bad) xchg sub mov add pop dec loope out (bad) fcomi and jg mov in out jno lods imul push mov clc sarb in decb cld enter ds mov stc repz aad (bad) add xchg pop adc loopne dec push mov sub xchg mov scas stos leave test nop (bad) adc outsl add and push jb or (bad) call (bad) mov lret sub ja jbe sti into popa lods fisttpl and aaa jp (bad) aam iret shrb rcr or test lret outsb add shrl in pop add mov mov outsl and fnstsw cwtl xor and mov nop add insb jb scas and mov push fstpl xchg mov push or repz in push pop cwtl outsb (bad) sub mov push xor sbb pop fbld adcb daa sbb adc pop mov pop pop cmpl mov outsl xchg fwait cmpsl outsl (bad) pushf imul xchg cwtl xor rorb or icebp xchg jno push sbb pop jno cmp mov movsl lds xorl sbb dec icebp clc shlb dec cmp adc pop stos shl lea mov xchg aam fs ret shr repz ret out adc sub insb imul leave cmpsb in xlat aas or xchg sub sub jecxz,pn into lret je dec je (bad) enter xchg repz pop sarb dec mov movsb icebp cs pop cmp or lock xchg or out and push in sub pop sbb jmp popf sbb or xor jmp adc push xlat mov inc xchg ret mov or inc lock sbb mov jecxz push pop cmp shrb sbb jbe inc arpl cli mov sbb jp not addb in jp mov mov inc lods (bad) addr16 mov js jg sub imul pushf and jle clc ret add inc mov mov add push je inc lahf or mov jb sbb jecxz imul sub mov ss out dec sub ja and cltd jmp pop rorl push mov push xlat cmp jmp pop mov pop pop ljmp cmpsb dec rcl jbe arpl xchg inc (bad) xor (bad) stc sub loopne push nop ja and (bad) icebp inc cmp mov aas mov mov jo popf jnp mov (bad) pop mov dec mov mov rcrb ja pop sbb inc jecxz mov adc in into sub fdivrs test cmp xchg pop inc jo sti aam data16 ljmp mov iret sahf ss arpl sub (bad) daa jo cmp push mov jge jmp inc pop sub ficom xchg inc lahf dec mov push dec lahf xchg add adc int shlb jge dec xchg cmpsl shrb ret sbb mov icebp add lods cwtl and popa mov push inc inc mov inc mov fwait fwait pop mov lods insl sbb insb or jae push pop jecxz lahf aas adc dec pop lds inc out rolb gs jne cmp xor push rcrb and (bad) call cmp movq2dq (bad) xchg push add div adc in lea xchg sub or push ret lret mov ja or cmp fs das (bad) frstor out sti sub aam scas add push repnz std dec (bad) mov (bad) aaa ret out test push xlat (bad) in xchg add add xchg push mov mov mov out cmp cmc test pop mov ds push ret shlb clc leave add pusha fsubs sbb int3 push pop inc inc (bad) repz add out push cli push outsb adc dec inc cmp ret (bad) lret shrb mull popa pop xlat (bad) icebp scas lcall or xchg push cltd mov xchg lods sbb jp xlat cmp inc pop cmp pop cmpsl adc iret int scas lock pop out cmp jbe mov int push inc pop iret (bad) or aam pop pop add or adc inc mov push stos pop lods xorl inc shr mov leave jg cltd mov inc call lods mov mov jae test cmp dec mov enter mov mov mov test jle pop js iret and cmp cmp lret inc add fldenv lods addl xchg (bad) mov jns loope xor inc movsl fstpt stos mov xchg mov or add je daa jnp loop adc mov pusha cmpsl popa mov push mov push inc dec pop mov ss sbb cmp outsl not add adc xchg imul and add sub cmpsl pop scas mov sbb shr and mov mov roll jb (bad) addr16 imul and adc cmc mov mov xor xchg in lahf pop dec xchg ret push inc dec jb add push out pop ficoml sbb aad in mov jge test test xchg xor popf insl inc movsl cmp mov pusha icebp adc and je aaa adc adc jge jbe add ja mov adc cmpsl aas jns adc and in add adc inc scas sub fsubl adc push dec lcall cmp stc mov or xor les pop pop adc dec or arpl or jp and pop jg movsb jbe out out enter adcb in dec jecxz nop mov xchg mull ret fs or jns sbb pop add sub arpl dec and jge iret daa xchg test push enter sarb push pop (bad) stc imul fnstsw aas inc out inc adc lods xchg cs and add xor jno (bad) in pop add xor xchg rolb mov sbb pop mov push sub xlat cmp or push jmp jae lahf das xchg out jg iret xor negl in (bad) mov mov repnz mov add jo repnz mov pop flds sub push (bad) ss or pop sbb adc rolb cmc rolb or aaa sbb dec dec pop fsub das xor and shrl loope dec stos sub lods icebp jb cmpsl jg mov jb shrl test popf mov repnz out fisttpl pop jp fcom fcmovnbe mov popa xchg pop dec popf aas cmpsl xchg sbb pop jmp sbb sbb adc repnz cmp adc ja shrl lods lret out (bad) aam (bad) int lret inc jl or xchg fs mov daa fldl (bad) mov leave xor roll idivb in addr16 mov xor stos sti cmp inc pop (bad) jns aad in cmp and mov popa xor aas iret lcall mov fwait inc daa das push add adc lock sub and jle xchg xchg stc test cmpsb xor into jnp sub and jl pop enter add push mov roll adc ret adc (bad) std inc add mov add or and ret cli sub jnp xchg stos pop cmp sub es fcoml in in mov jg fisubr fdivrs orb and push aad addr16 mov dec xorl bound shlb or (bad) test ret push inc mov cmp in push scas std jns ret stos lahf scas push lret aaa imul add fidiv adc add (bad) and fist jo push pushf xchg fmul sub fsubp pop repnz push sti xor xchg inc fadds jp daa sbb sbb int cmpb inc mov jg dec dec test fldcw in fwait or fmull xchg and aam aas insb xor scas jb je jb clc roll enter clc cli push cwtl cmp ljmp cmc cmp jge loope fmuls xor lea insl xor dec or shlb xor jo lock fsubl loop lret mov add xchg (bad) cs mov fisttpl sub add sbb cmpsb xor and mov inc xor or push leave push sbb pop fwait arpl arpl mov push push into call outsl sub push es mov in jecxz call sbb in jmp or in fidiv int push sbb pop pop jmp mov enter cmp pop xor jmp sub imul mov hlt and in jecxz mov jbe and push lods mov fisttp popf lahf aam cli loope pop sti inc or and xchg jl mov push inc xchg fwait add das mov or stos mov sbb movb mov jno (bad) int cli pop sub ret cs movsl jbe shr cmpl ror enter popf clc insb or ljmp lods sub je lret jnp iret jle cmpsl ficoml or push sbb loope ja xor mov push fstp or and mov sti or iret pop cmp addr16 cmp nop jl mov add mov call jg into ds xchg xchg xchg movsb and nop mov pushf scas xlat int3 xor sbb or (bad) and mov pop and mov aaa dec jmp pop mov pop pop stc cmc rorb push add mov ljmp mov pop xchg mov push scas int3 sbb aas in jle (bad) xor jl sub dec mov (bad) idiv scas out adc and loop mov push fidivr push loopnew ret sbb push sub push mov jecxz pop or nop mov mov xchg movsbl push xlat cmp push xchg les addb std mov inc and outsb dec mov push push mov iret stc hlt ds scas dec fnsave or mov push hlt mov sar adc popf push loope orl (bad) ja shufps rclb xchg and enter xlat adc int bound push push cmp scas in gs xor sbb dec in cltd stos repnz xor imul fimul mov popa jae pop pop jo fcoms jno sub mov out repnz sbb jo ja cwtl push aad mov clc imul out xchg into scas hlt cmp mov push inc pop ret pop sub in xchg mov (bad) or jne pushf repz jl or mov mov mov test or and popa push jb mov ss xor cmp sbbl push push jmp sahf lahf imul push jno not shrb ror repnz mov aad imul mov lret push xchg xor xlat push push test cmp loope sub les mov call leave add aaa xor mov loop push (bad) push push xorl fbstp mov aad sarb dec pushf mov jle lret icebp mov loop push sarb addr16 (bad) sub outsb clc out es pop lds pusha loop lods jmp adc lret in or fidiv xchg adc jne,pn and push pop push bswap sahf cmp fisubrl push inc mov (bad) sub arpl mov leave (bad) mov pop rcrl pop movsl js push inc setne dec inc mov add cs dec cs leave repz aam pop jge xor sbb add dec daa out xchg mov inc jo push addr16 addl ftst pop mov sub test jo rcrl lock push pop or push adc jle sahf mov fsubrs jg aas and ret scas xor add cwtl and sub addb add mov add mov xchg aaa xchg xor adc test mov xchg lods push pop jb enter adc addl fnsave add push rcrl rcll call mov int mov jle dec test shll (bad) dec adc sub cltd push idivb lds mov xor add test xchg lcall add lret fisubl push and jp pop vpcmpgtd into cltd test jbe inc jle ret xor push hlt icebp outsl dec sbb cli xor mov fstpt outsb loopne add dec sahf movsb incl xor (bad) jbe popa xchg out dec jmp daa jp mov add mov test pushw dec dec pop ficoml lcall into pop sbb flds xchg dec sbb mov push aam cmpsb clc (bad) js adc addr16 mov repnz out (bad) ss jg pop pop cmp ljmp mov cmovb lahf xor cwtl xchg jbe andl pop lods adc aad xchg dec adc mov test jle outsb js sbb jns pop jp aaa mov or dec adc pushf (bad) jbe daa jle,pt movsw push mov or outsb mov lret pop stc pop repz iret call mov push add lods pop cmp jp stos or xor inc inc lock dec jae pop cmpsb push rorb xor inc xor sbb (bad) dec pop cli pop xor loopne add lahf pop xor inc xor push pop dec into (bad) (bad) adc xor pop adc jmp adc pop inc or imul mov xchg incl sbb scas lea icebp clc sbb repz std add sbb popf lods jae xor hlt std hlt in lcall int or stc rcll push and adc add inc test les xor mov int push cs cltd aaa icebp mov imul xor mov ret out insl gs daa insl push sub call pop adc pop imulb jne js popa leave jno in (bad) lods or in cld xchg mov pusha test orb pop test loop jmp arpl sbb or jle fldt pop push push adc and scas mov aam out shlb in (bad) xchg push adc inc lcall xor decl movsl sub mov iret hlt jg pop arpl or mov add es mov xchg xor cmp movsb sbb pop in cwtl mov movsb and outsb inc aaa push (bad) cmc mov jbe in (bad) lock ffree dec xchg mov adc psubw pop call insl mov pop adc jmp mov mov fstpl mov jmp out out and icebp xor fcoms (bad) (bad) adc test xor lea dec cmp lea loop mov mov dec aad mov add push xchg add jmp jg ret adc sbb or fdivs pusha dec aam adc aaa cmp mov mov ds sahf jne in sti aad gs rcll cli les push cmp sbb (bad) enter (bad) pop notl bound (bad) in mov jb stos outsl outsb xchg push dec and xlat xchg sbb lret hlt in mov into cmp orl dec in sub scas xor dec cmp push or (bad) xor rorb das scas scas ljmp mov mov push nop fisttp jmp loope jl stos mov jno,pt dec mov inc sub sub (bad) out push jge lret sar inc mov rorl enter jmp out add mov lock xor cltd pop call or inc adc repz pop mov mov or push dec js jle xlat mov (bad) jo,pn push ficomp cwtl or xchg (bad) jne cwtl cmp jl shrl ja push xchg sbb cs imul mov adc mov push dec lret xchg push dec outsb mov into cld jns stos push lock fwait mov adc incb in and pop inc push ljmp cmpsb dec lahf inc dec cmp add pop sahf or gs xchg repz flds mov xor out jecxz xchg jb (bad) lcall loop pop push fstl add cld mov inc dec pop push fidiv jmp push xor dec inc mov inc jne inc xor sbbl daa cmc ret or in pop stos jne roll pop xor (bad) adc add cs jg movsl mov andw sub in je jecxz xchg cmp cld insb ljmp or dec pusha mov xchg push push and (bad) (bad) cmp xor js (bad) jo cmpsl rcl call loope sti sub fdiv mov cmc ds enter xor cwtl push addr16 sub fwait bswap ret adc sub ret (bad) xor je cmp imul jae aaa fcmovnu rcr jb mov cwtl inc add ljmp mov repz xor xlat xchg int dec fild or bound mov push gs (bad) js push push pop mov int repz push add add dec (bad) testl mov cmc sub sub ret loop dec aas ss cmc std stos lods xchg push lret (bad) sbb mov or cmp call ja and push xchg jp xor inc imul rorl mov mov mov ljmp xor dec xor icebp dec dec inc ficom dec xchg aam mov sarb sbb or mov or insl mulb xor frstor lods rorb stc jp push iret aas xchg sahf pop jbe inc loope fstl leave and xchg mull xchg jae das ss lods inc (bad) je jnp fwait xor arpl out gs adc jg mov inc xor (bad) cmp movsl dec sub (bad) push sbb sub fstl inc cmpsl insl cld xor pop sub cmp js and ja push dec push call (bad) negb ljmp ja pop daa push in mov adc ret add add (bad) push daa rcr mov pop fidivl iret jp mov test scas inc cmp mov in mov push lods cmp jne mov out sti jg adc in cmpsl jne adc mov test out fnstenv js mov jno pop cmp push fcom cs cmp inc lea cmp rorl sarl xchg inc jno aas arpl adc push ret sbb repz vmovddup test push ss inc pusha mov (bad) xchg mov insl outsl popf outsb mov mov (bad) xor push mov test clc xor repnz outsb out std cmp loope sub rclb fmull add push and mov fcmove mov mov (bad) loopne push adc jo or pop out (bad) jns popf stc jmp decl xlat lret cmp sbb sbb sbb jp stos lcall int xor test or lods into cmp cmpl jmp adc or jo repz hlt mov loop push cmpsl push cli cli das rorl xor insb test fdivs push or mov les mov sbb roll cmp push push and mov sbb notb push aas sub scas popf into test test cltd mov inc mov sbb (bad) (bad) daa or jecxz dec shr mov lahf ret stos xor int push loopne add xor mov jl leave (bad) xchg je jl jnp sub xchg inc (bad) stc stos stc add stos dec lahf mov mov cld and out mov and imul adc and jl leave add sbb insb mov mov jno xor (bad) leave cld cmp jb enter sarb repz pop xor dec pop adc mov lock fidivl repz and push jns shrb lds sbbb out or imul jns adc jp push and cmp mov lds xchg or je or xlat xorb mov fldl cs pop push cmpsb xor cwtl mov inc inc mov adc inc jl dec push insb mov shrd adc jge stos mov bnd push add jle jmp mov push mov pusha mov rolb jecxz pop sbb xor fsubs xchg stos loopne and pop mov jl stos mov jge sbb cli jl push sub xchg jns jno lcall push xchg mov mov or add js in adc jge sbb jge ja jno mov lds adcl mov cltd adc xchg push (bad) mov cli cmp mov loopne into push les insl inc (bad) outsb adc lods std push fs loopne mov popa jge imul add inc mov jecxz pop js and daa add je mov mov rcl add cmp fcompl fcmovne repz pop add (bad) xor pop les lds xchg pop mov into xchg inc in fs repnz pop push je xchg lods pop fdivrs push shlb dec mov adc jo xor les divb fsubrl or xlat pop push (bad) in bound sti inc mov (bad) jmp out out and and inc push xchg mov std (bad) scas jno insl addb and popf or jbe mov xchg jo jae in hlt mov in sbb mov sbb insb lds xchg xor xor je popf mov mov inc pop cmp sub inc mov lock ljmp xor add mov out jbe add jg cwtl inc and add popa mov in sti daa fstpl adc hlt outsb inc fwait sarl cmp fadd xchg into add fimull jmp out xchg je icebp icebp pop mov bound or inc jp xlat js faddl fs pushf push push dec adc cli int sar shl cmc out rol push divb jl push mov outsb push sti and mov scas xor inc push sbb dec cmpsl int3 in js ja repz or xchg outsb aaa jae cmp mov aas fmull shr lret mov mov xchg fwait arpl aad aaa sub xorb dec lock add lds pushf imul ljmp int xor dec in psubsw mov into pop jmp or arpl andb add fwait or pop sub arpl cld or sarb inc sbbl negb daa jnp loopne movb jnp cmc stos nop in pop inc mov xchg push cmovns test sbb cld jl fs scas arpl idivl jb xchg cmp dec dec dec test inc and lods fs js jne cmp or mov imul bound or or adc clc pop insb cmp sub dec jmp mov outsb int3 mov sbb pop scas cmp inc dec xchg (bad) enter mov test (bad) xor adc loope jecxz mov loop decl add je (bad) xor mov into sub and test fdivrs mov nop adc mov mov ss dec rol (bad) movsb lret mov in adc gs mov frstor outsl in (bad) dec sub pop add pop enter (bad) clc push outsb sub dec jge movsb arpl cmp mov insb dec imul cmp lret jmp mov jne les and rclb mov popf xor push add push je sub jg dec aam test test into push xor (bad) stc xlat (bad) jno add xor lret popa in xorb nop loope jmp mov and mov cmp add jge mov cmp fidivrl (bad) pop mov test lahf jae adc mov notl pslld bound cmp xchg push jb cltd sub push add pop add xchg cmp mov adc fldt fs popa pop test sub outsl mov jo,pt sub push adc mov das sti xlat in js add popa and xor into sbb or test jmp jle lds dec jns xchg xor fstpt pushf shll lret pop pop push (bad) icebp int3 (bad) jl ljmp mov dec adc pop or sub lods jle and push dec loope push mov mov dec incl inc (bad) inc sbb rorb (bad) fadds jae dec cwtl pop movsl jge mov out push stos sbb repnz mov test xchg ss lea jge,pt jbe mov movl ret test lods mov add xlat mov dec leave inc pop and cmpsb pushf push (bad) cmp mov lret mov xchg sub out or dec cmp sub sub mov cmp sbb mov pop inc mov mov test loope pop and pop adc or or or hlt pop xor and (bad) adc cli out (bad) cld cwtl stos outsl and ret cmp or fisubr cmpsl mov call loope sbb movsl clc ja pusha outsl addr16 call push lods mov sbb imulb neg in rcrl aam mov cmp loop pop cmc cmp repnz les mov jg jb mov mov xchg (bad) call lea pushf notb inc loope jecxz jae loope ret lock cwtl cld inc or loop adc pop sbb pop xchg cwtl lret pop lea adc mov sbbb lods xchg outsl (bad) mov push push (bad) jmp sarl shr ja ljmp xor fsubs mov sub sbb mov lods push fidiv jecxz sub push jbe jnp (bad) mov fcompl push ja idiv mov js jg push xor and adc jbe fwait out loope adc mov test xor nop lods pushaw daa pop xchg fidivr addl add pusha (bad) call xchg in fsubp out inc lods or pop shl outsb (bad) push xor sbb sbb ss cmp dec popa mov (bad) (bad) (bad) into outsb sbb in add push jmp xchg or mov sbb or dec gs mov jne shll adc jnp cld ret xor xchg call ds icebp mov ljmp pop repz imul xchg cmp divl push ja mov (bad) and ss loop std push popa das not outsl inc leave (bad) adc mov lahf sbb cmp js xchg out aam cmpl pop adc push push adc rcll iret in adc aaa add mov pop mov jbe xorb fcoml cmp mov ljmp inc pushf cmp jo mov dec add mov push movsl clc imul adc (bad) out adc rclb (bad) dec jne mov sub ljmp pusha std dec je xchg imul mov mov je in pop jmp aad pop pop dec add inc dec ljmp movsb or sbb jg in xor ret mov out (bad) pusha pushf loope xchg cmp pop fist dec push daa ss pushf lock bound sub sub inc negl imul out mov inc outsl cmp push lods add insl mov xchg clc sub (bad) adc stos pop mov stos add dec jno push fldt or cltd and pusha pop test xchg sub lea or fbld pop and fdivrs movsl call mov jg outsb cmp or cmc or test and jbe sub sub mov and dec fsubr aaa call das pop sbb xchg cld cmp xchg je push orl push and jne hlt test and xchg xchg leave pop mov sub or lcall gs stos ffreep xor sub aaa add jns andnps in jmp xchg inc xlat imul and out jle mov xor fsubl xchg and mov popf xchg and sub jl popa pop sub shll movb xor mov xchg scas or mov (bad) mov es jge add repz outsl ret pop sub jmp bound mov lcall pop mov (bad) (bad) sub push dec cli xchg sbb push fadds mov push adc fldl mov xchg mov loopne sti xor add (bad) push mov loop pop lahf test or mov xchg xor sti and xor sbb jg lods xor inc mov jecxz (bad) aas sub sbb cmp repnz mov out in mov mov lds xchg dec mov outsl or jecxz jle mov xlat inc fcoms jmp jg adc in add (bad) (bad) mov lcall lds movsl repz jcxz push jae dec and dec pop daa mov jo mov stos xchg pop cmpsl cwtl adc mov lods pop test enter adc or mov dec bound jae mov or popf inc les lods fst int3 in loope les fucom test sub daa cmpsl inc fwait adc in jne int3 into xchg push sub mov xor je push inc inc sbb jae cmp push push aas insb int lret stos sub sbb sub gs aaa ds or (bad) stos inc push or cmp jg xor mull pop or cmp jae mov fmuls call lock fbstp cltd or inc lahf mov adc imul decl into or outsl inc inc insl sti les shl clc clc lds mov jmp fwait lods pushf push push mov stos jle jb jp dec je adc in mov rorb addr16 sarl mov outsl popa cltd test xchg xor mov clc ja popf in inc ss cltd mov rclb hlt mov or arpl dec incl inc sti fstps lahf sub jg xchg scas xor mov push shrb sub sar xor insl cld je es xchg or sub (bad) jecxz mov aad lcall jae sub into push into sarb xor mov sub (bad) xor int3 je mulb inc arpl out fdivrs xor push dec pop data16 aaa mov mov (bad) popf and add jg loop or loope pop cmpsl mov adc mov insl test iret push arpl push bound outsb dec (bad) iret or div fisubl push or cmp stc pop sbb jae ljmp imul int3 xor jne outsl push ret sub jmp int3 sub sub sti mov pop mov xor jno add xor ss js insb mov mov add lods sahf rol jns js mov jb inc rcl out insb or mov push rcrb adc dec jecxz in fisub mov xchg jmp mov lods push clc adcl in xchg xchg inc jle (bad) fidivr mov (bad) xor mov jne dec in leave dec aam sub dec xlat fdivr pop or in mov or inc loopne mov out xor in jns inc sub ss adc test insb sub sub lds popa add mull or xor jle jl jbe repnz (bad) push jl sbbl add and enter mov ret insl push pop hlt push outsb sbb push es mov mov cmpsl ss insb movsl out jl (bad) pop dec dec aas jae pop es call daa inc movsb jbe hlt enter xlat es adc cld pop popf push (bad) mov je out arpl adc pushf sub lds ds and inc sbb out and mov rcr xchg dec (bad) xchg jmp mov js cmpsl dec and sbb das addr16 inc pop xor push dec pop ret cmp inc pushf pop in sub in out (bad) jmp mov inc push jp popf test inc je rorb cmpsb stos mov push addr16 fild push mov jno mov push sbb push movsb inc es (bad) loopne xchg add stos loope dec mov enter cld lds jmp mov or push pop xchg pop xchg in (bad) outsb mov outsb add (bad) adc push jbe loopne call pop or dec inc mov cmc inc sub mov inc das aam es sbbl adc (bad) mov int3 cs sub aad rol mov xor push movsl push add fdivrs dec adc xchg add cli daa cmp (bad) xlat not loop or enter pop mov test mov cli stc inc das xchg (bad) or mov adc pop imul xchg mov xchg out mov sub jnp pop add ja unpcklps aaa (bad) sbb sbb sub arpl pop push ret test gs pop inc test xchg lea sub (bad) dec xor mov jno lods push jb xchg push pop stos adc pushw jmp xor cmp (bad) mov pop mov mov mov xor stos ret dec inc xchg xchg adc sub nop dec add xor lods fmul shlb nop push or mov sbb adc dec mov ret mov cmpsl mov js dec fmuls pop add loope fnstenv dec (bad) sub addr16 cltd pop repz adc movsb dec sub xor adc hlt stc aas mov add add inc and sub jnp xor call adc movl inc ja pop fbstp mov cmp adc repnz or mov jae into jge das dec xor jl pop sub jb lds imul popa inc (bad) fisttp push sbb stos inc imul les pop ret mov cmp pushf leave xchg xorl in enter fstpl inc adc xchg mov xchg fcomip push out pop cltd (bad) xchg rol cmp mov mov rorl push rcrl movsb add xor enter xor pushf mov mov dec in cmp lods mov sub orb aad adc fisub frstor insl xchg (bad) mov jb imul aad out scas inc pushf xor mov sub inc iret cmc xor mov sbb inc das sbb sub and add xor fisubl pop pop pop sbb xchg push pushf jo lock push xchg mov add jecxz and int3 (bad) fistpll add xchg dec cmp jmp jle xchg fxch loopne out ret (bad) cmp fld jae jbe jnp scas pop hlt call hlt push ljmp mov mov movzbl loopne mov fwait ja lret gs das mov jp sub std stos mov push dec (bad) out mov inc (bad) jne jmp icebp stos mov mov aas push lcall mov xchg leave mov dec and sub int push xor (bad) adc jl xlat test in or or or scas mov push mov xchg mov add push mov test xchg and stc xchg jmp les push and mov ret lods pushf or jns pusha imul ror adc lea popa pop mov cltd xchg out pop hlt inc push popa sahf mov xchg mov int sub sub push and dec lahf dec cmp or (bad) cmpsl (bad) cmp inc repz sbb jno in (bad) adc ret ja clc push data16 push pop jmp xor (bad) xor insl mov pop xchg iret or xchg hlt mov push pushl add ja imul jmp jae jmp (bad) rcll sub push ret mov cld loop ja add inc rorl or xor or xor fldt jp arpl cmp pop jo sahf pop sbb xchg inc pop aam (bad) rol cmp inc aaa repz rclb xchg xchg enter into mov imul jp negb stos arpl out aad jns push add rcrl out fcmove sub sub push push add adc adc xchg jl rcll in (bad) or fmul xchg adc pop dec mov sub xchg (bad) cmc mov out pop cs mov mov mov and std pop inc inc clc into push mov inc js mov add popf test into sbb aas and sub inc jmp sub jg sub out jo jp test test negl add add imul movsb add adc cmpsb mov jmp stos pop adc dec sahf sbb lret fistpl pop pop sbb addr16 inc js cltd ss in ret xor xor pop scas lods add lods rolb push mov ret jg xchg sbb fildll enter lahf lds sbb out sub decb cmp dec aaa and aas xchg stos fcomps or sarb cmpsl inc mov sbb inc cmp popf outsb sbbb lock test loope push leave out jmp dec cltd pusha inc mov ljmp dec sbb jle stc xchg xlat jg jl mov sub (bad) mov push arpl push inc xchg lds loop jg jbe rorb pop (bad) js push cmpsl inc push or roll xchg lcall orl inc add out dec (bad) popf mov outsb push jno lea imul ds fnop and sahf mov jae xor inc mov inc jg out rcrl fistp (bad) cmpsl add dec pop push mov imul sbb xor es pop in adcl test xor cmp popf lahf adc adc gs lods cmp cmp ljmp fstp jmp jbe xlat lods ds ja xchg rcrl icebp jno maxps addr16 in sub (bad) xor mov (bad) stos inc sub dec sti stos scas push adc (bad) cmp lahf jne fbld and pop stos je bnd movsb aaa clc ja mov popl add mov jb sub imul add ficoml das xchg lods sbb jge fwait (bad) adc outsb pop inc iret std push jg add sbb sbb jb inc rcll and (bad) sub cmp cli std mov mov mov jmp jnp adcb pop imul adc adc ja cmpsb stc adc jns lds cmp sub mov inc cmc cmp sbb cmpsb (bad) icebp mov repz fcomps mov arpl inc int3 (bad) ja or out adc dec jg out xor popf test fnop lret add gs cltd leave pop xchg int3 stos lahf push js (bad) cmp or cmp roll scas sub add pushf mov cmpsl icebp inc sarl movsb repz call lods ret cmc push aaa mov hlt mov shlb imul daa repz lret (bad) mov cmpsb leave pushl inc aad and push roll outsl mulb ljmp push ret pop es mov dec fisubl xor fisttp and test cmp popf xchg je mov (bad) dec dec test int3 ror lret outsb inc std les negl lcall dec or scas aas adc iret test push push insb xchg out addb fadds lcall and inc inc bound adc xchg in test jo and aas fcmovu or cmp les and aad fsts andl sbb cmpsl lahf jbe inc or dec inc add push xor clc fisubl jmp (bad) dec in stos rcrb cmp and jl sub jae dec leave (bad) mov pushf mov jmp fstps (bad) add stc inc packsswb loopne inc mov icebp cmp cli (bad) xor add add sub cmp dec or push das out push xchg call add ljmp daa sub sub mov jmp cmp cmpsl insl into and loopne les idivl inc dec dec les add cmp in ja and adc jmp out xchg jo dec jle in in sub and cltd lock orl add jns jae repnz ljmp or ljmp mov sbb dec sbb outsl mov add or dec and roll jl lock cmp out sbb fdivrs jae xor outsb repnz incb adc lods out out shl lahf (bad) jno (bad) daa xchg int fs push jmp jge push lcall inc shr xlat das sahf push int3 das mov inc push arpl cmp sbb adc (bad) fptan mov sub mov out sbb xchg lods stc add mov adc fsts mov push or mov imul add xchg insb mov lret sub mov inc outsb mov out in pusha loope (bad) mov mov add cmpsb lock mov mov test je lret rorl pop rorl sbb (bad) xor loop cltd pushf lahf (bad) outsl lock and xchg xor add and int3 push sub mov sti jge sbb jmp mov enter inc lock push loope jecxz mov ljmp cmp cmc dec cli rol push lea jmp frstor mov jmp jl cmpsb call dec fimul mov ret add push and jge jno inc inc jns mov test add pop icebp lcall dec rolb xor mov mov push pop pop or fnop shlb fimul dec xchg sub adc fwait pop arpl and adc jnp mov cmp cmp mov repnz insl inc jge cmpsb decb push lock cmp jg sub and mov pop xchg fbld push dec dec test fld cmp xor push adc lret push cmpsl lea xor dec int test (bad) mov and xchg mov mov (bad) lret inc outsb inc mov shll add fimull (bad) cmp mov (bad) push jg and inc call sbb pop testl (bad) in test inc (bad) rclb jl xorl and sar repz adc xor fimull pushf inc push jle std sbb popa xchg dec xor adc and push push in inc pop sub lds pushf dec ret movsl jecxz mov ret movsb fiadd imul clc call and (bad) jl out mov lods xchg ret repz fist incb (bad) (bad) mov push out jo jnp fstl mov mov lock iret sub test jmp pushf adc jl mov leave push pushl in (bad) outsl mov les cltd push movsl pop mov pop mov fbld dec in or mov cltd sbb push pop and outsl popf add js stos out repnz je sahf cwtl pop movhps cs pop fimul sti mov aas mov xchg sub xchg aas test push mov jp sbb out mov clc popa pop les (bad) loope jge inc out out jo rcl mov and movsl pop (bad) mov rolb ss push add gs fist imul mov jns ret xlat jl jno cmp test fwait jge mov mov mov push push fisttp or outsb dec xchg mov inc test pop (bad) pop fsubrs enter lods mov inc subl push dec les imul outsb mov fxch adc call enter dec pop push rclb sub stos push xchg test lret cmp sti cmc loopne jg je out cmp call insb push jbe jge sbb in xor mov jecxz pop rolb arpl adc adc in daa lods cwtl mov test fistpll push imul push or jns and (bad) dec pushf enter cmp mov jp push out cmpb ss lods inc enter jb nop lods in out insl ficomp loope xor cmc test or inc or loop (bad) lret sbb into xchg outsb daa pop jmp cmpsb popa mov jne loop inc mov in hlt xor mov xlat mov mov cltd (bad) lock in sub das push mov sbb mov mov add sub adc or sbb and int3 pop or rclb rcrb sbb push xor mov pop mov xchg das xchg jecxz (bad) xchg out test rcrb push aam out xchg or jo sti sahf inc test mov jno icebp cmp and out dec and (bad) into loopne sbb (bad) imul fbld sbb and lods (bad) sti mov xor sub mov or mov mov sbb push fs push or out jp fistpll sbb jnp (bad) in inc sbb push mov or inc jecxz cmp in xchg je outsl or pop inc inc and ds and loopne push cmc add or mov mov mov icebp in xlat and inc mov repnz shll fwait in movsb jno pop not packssdw or shrl scas fnstsw jo or dec dec ror insb mov mov mov and pop xchg or test and or adc and nop loop in jle clc stc nop sbb inc in (bad) iret cli adc lcall mov in push jl stos lea lock stos lds ret jae lahf lods xor inc call lcall inc dec ret xor repnz scas dec mov ljmp add inc push in push inc xorb and cmp (bad) mov in mov (bad) subl lahf shrl jno inc adc je call and xlat xchg int3 repz (bad) aaa dec arpl mov pop jg adc push sbb cmp mov mov pop lods nop inc repnz bound add out js fcompl test jbe jnp push cmpsl movsb gs (bad) pop xchg iret jmp mov imul enter pop iret mov pop inc mov push pop sub xorb cmpsb out std xchg fnstsw xlat adc xor jl shrl mov sbb int3 xor out (bad) jl add imul movsl dec push jmp push popf sub push xor and mov adc pop pushf or jmp (bad) mov sti inc (bad) pop mov (bad) mov ret xchg xchg cmp and push push or xchg push lret inc inc sub in adc aaa jbe dec push imull mov jg jp iret sbb (bad) lds jae jecxz out pop xchg pop (bad) push into sbb outsl fcompl popa lret inc push mov jge in dec test pop mov andl add inc imul mov out add out sub inc fwait fs mov (bad) paddq loopne (bad) int pop inc ror fwait add shlb pop in pop jbe loope mov pop (bad) sti sub inc sbb rolb inc mov ja push jge mov imul sub aaa push cmp aad mov sbb and xor scas pop sahf xor cwtl clc pop sub js mov popa mov add into mov out rcll and jns loop mov push add sbb cwtl xchg int push or popf imul jne jmp sahf mov fidivr xor dec cmp rol test call or aaa loop mov cltd push out cmp pop clc pop jo mov aad mov dec jnp (bad) lcall iret cli fisttpl mov push jle ficompl call lret dec pushl lret daa das mov int scas insl lcall shll cmp fisub repnz cltd pop lea push or loop test mov rcrb fs sbb sbb mov fidiv leave xchg std and cmpsb les cmpsl sti fbld xchg int inc icebp sub ljmp xor call imul out sub mulb cmp repz or stos shrl mov (bad) cltd adc lods mov test mov adc lret jno adc loopne cmp ja in mov xor or pop mov and lods or out in mov jp cmp mov or (bad) sub mov fcomip lock decb mov orl jge add xchg sbb loope cwtl ja xchg push inc push inc jge ss add xchg stc test dec iret lods popf lahf nop and cmpsl sub mov dec pop or (bad) lret adc fs jmp mov out cmpb jne dec inc movb in in cmp xchg inc pop test add unpckhps dec sar add push cltd jne ljmp scas les pop sub cmp lods sbb cli sub je dec sub pop add push cli lahf subl cld out in sbb mov pop sahf fldz sub dec push mov out lret push int3 call stc and movsb (bad) lret mov mov negb shll xor into xchg aaa mov sbb push aam popa std or sub pop addr16 xchg mov xor mov in sbb lods add xchg aaa or dec mov cmpsl ror shll jmp das lods jl pop (bad) hlt sbb ret add movsl popa push loopne inc jo inc (bad) pop inc call mov xor push mov aad inc push and outsl inc mov pop fwait aad (bad) dec mov (bad) repz gs cmp icebp ret out sbb rcll subb push lret daa test cmpsl pop add jne int hlt mov cltd mov mov mov ds adc out mov xchg push (bad) out adc ds xorl or jne sbb cmpsl in push pop pop mov leave stos inc nop jmp in stos gs in hlt and jmp test jbe pop outsl in dec xchg (bad) fwait or push cmp pop dec and lahf or xchg repz decl pop xor ss cld sub insl je adc add (bad) sub iret insl and pop scas push stos loop push ja in pop imul sub dec mov cmp or jnp xor jns jno jp icebp arpl scas dec sbb mov xchg test lret icebp fisttpll dec mov test pop or dec jle and lods cld mov xor push nop shlb arpl add inc mov cmpsl xchg dec jbe movsl inc pop movsb fistpl maskmovq jns (bad) and add imul in xchg in pop inc inc push in or int sub scas dec cmc es or jns or lock mov and cmp cmpsb mov aad pop (bad) pop sar leave sub bnd fistp mov in movsb aad dec adc mov and imul or and xchg insb and sbb mov jnp push jne je mov and mov addr16 (bad) gs pop cltd sub dec add xlat es in (bad) notb lods and sarb xchg mov dec xchg aas ret orl xchg cmp ds and pop cmc mov inc popl mov nop ret xchg aaa mov cmp (bad) and inc lods sbb fsubrs mov je in push adc mov push loop xor or nop cmc mov das jo insl jmp add jg dec mov loopne mov rorl mov int3 xor lea cmp push jp mov faddp sbb cmpsl sub in mov scas cld xchg sbb out sub inc into sbb add xor push mov test mov and dec jae mov inc aaa xchg scas aam xor sub popa and mov inc lock mov das fiaddl xlat lods or push jns push xchg add jecxz inc mov mov movl rcrl mov mov cmp je hlt mov aad cmp jl gs mov or push mov lock shrl sbb add cld mov mov push ja loope adc cmc dec cs cwtl add pop mov ss cmp mov ja cmp xor xor (bad) xor repnz adc jmp xor pop js dec leave imul dec sub (bad) ja add test shr mov xchg negb test xlat int3 xor ret es decb ud2 rolb mov xchg psraw pop cmpsb insl or and inc sub iret jmp int jl jno mov loope push fistpll mov test mov (bad) fidiv push sub scas pop mov cmp (bad) aas add mov adc xor xchg lret mov and push mov mov xchg jg out mov (bad) mov push and int push push push mov or (bad) in sarl dec bound and rorb jecxz or or add cmpl aam (bad) insl testl mov mov std popa xor lret ljmp (bad) lahf jecxz inc jle lods or or stc arpl pusha jecxz rcll int3 jns mov loop pop inc sbb faddl inc mov mov add cmp adcb xchg sbb out les outsb xchg outsl or mov pop or jns aas out in pop test scas (bad) jle mov bound pop adc cmpsb mov mov out mov jge and add mov xor dec pop mov fisubr test adc clc fimul sarl adc cmp (bad) lret popa mov jl mov test pop in push fs adcl imul jecxz hlt out jo mov xor dec lea loopne adc bound push pop test xchg xor xor (bad) rol mov leave lret xor push std push insb mov inc stos arpl dec or or pusha cmpsl and or mov mov cmp fcomps lret addr16 lea stos test push mov cwtl cmp xchg jbe (bad) imul loopne cmpsl jp outsl add mov jns scas popaw cltd pop fucomip inc in lock shrb icebp fdiv pop xor daa mov add call aam push mov clc jge std cmp sbb dec ret out loop jo xchg imul out push notb or ss lods pop rorl (bad) xor leave jecxz outsl es adc in pop out scas aam sbb dec js mov adc es sbb (bad) adc pusha lea in pop jecxz pop push ss mov sub and and mov sub outsl arpl and fucom in add inc mov lods mov jb in mov mov aad mov inc xor mov lods ljmp mov push cmp pop mov push mov imul pop (bad) rorb scas notl std adc adc mov and cmp adc cmp addr16 lahf xchg divl jne loope fnop js mov mov mov cwtl sti arpl pusha add pop outsb adc jbe jno xchg xchg aam andl cmpsl outsl out mov cmp sbb jne push int lret jle movsl xchg dec xchg mov and jge mov adc dec ret adc sub repz xor sahf sbb daa xor jle movsl mov push inc add sub cmp jmp push mov (bad) mov mul std inc pop ljmp (bad) testl jmp pop sbbb outsl test aas pusha xchg mov outsl mov (bad) mov sahf std jns inc sub fsubl sub push jmp into mov in jae icebp addl xor cmp add stc inc popf loope mov into or cmp icebp test repnz or clc mov lret incb push pop leave add lea pop stc jne mov cmp dec pop cmp sub mov cli xor mov xlat pop inc test aad xchg lcall add add shlb andb into sbb sub lret and and jmp mov mov jne sbb push lret fcomps sbb and stos jmp imul test aas or jg ljmp inc adc xor xchg aaa lahf test ret ljmp xchg in inc and in lret daa push mov idivl push dec rcll push dec test xchg sbb fdivs sbb add push inc add js (bad) and int3 xor jle pop int3 pop cmc xchg xor mov addr16 and pop pop push addr16 pusha jbe inc in icebp cmp fcoms jp jg adcb mov ret pop and test jmp xchg lock jge mov icebp sub fdivl es out insb mov hlt mov sub mov push mov or (bad) sub and insl mov mov mov aad dec inc pop dec jae push sti cmp jge imulb stos dec (bad) push in fnstsw es lret test jnp mov xchg pop push int xchg dec xcrypt-cbc cmpsl push push dec rolb mov cmpsl mov (bad) hlt or xor adc decl lcall ss test inc stc xchg mov mov lret pop (bad) mov fmull dec cmpsl rcr (bad) stc mov push je shrl xor insl pop adc sbb and mov mov inc push dec cmpl adc scas lock xor xor push fwait stc lods push jmp ja mov xchg mov ds jg imul mov ret mov es adc ljmp mov sbb jg cmp add push hlt push mov fbld sub int3 fistp inc gs scas sbb xor (bad) lods cmp xorl jge sub sar lock xchg fbld mov das xchg push loope (bad) test cmp ja inc cmpb leave sub (bad) stc cmpsb (bad) add mov cld addr16 mov mov sub enter pop leave loop test testb inc inc pop adc cmp inc aas lahf sbb push xlat pop (bad) std aaa mov xor call push mov xor andb and mov mov xchg dec cltd sub ret imul (bad) jg repz int stos sbb mov icebp push inc xchg lcall leave sub dec fsubrl sub inc jnp mov scas mov imul push sub inc pop jne iret adc sti sub test es int insl ret adc lret stc or test lea repz lds flds lock movsb add cmp cmc adc mov out mov or data16 sub test cmp (bad) ss ljmp (bad) repnz test dec mov xor mov mov xchg ja pop cmp testl add push aas and mov push dec stos sub inc std push dec dec (bad) lea push outsl xlat xor sbb lds cmpsb adc mov nop test sub xlat popl xchg xor roll mov mov fistpl mov scas adc ret mov orl adc fnstenv or xchg jecxz fsubrp push xchg sub gs add xchg les inc in stos xchg std int3 les add (bad) aam cwtl cmp and jbe mov cmp sub mov jns add ss mov add (bad) jns xchg dec pusha push pop pop lods pop jecxz push shrl repz outsb lods dec add cmp inc pusha pushl lds popa test or ret imul in cmp movsb in fsubrl add test call (bad) cld dec test cmpsb or fsubrp repnz sbb fldl2e (bad) sti testb and int mov lods rolb loop aam inc xor jecxz jmp into dec sub pop push push push xor cli out adc dec sub dec cltd and call (bad) ja xlat jl lret dec lods sbb enter fcoms add into pop add cmp and scas jo (bad) icebp mov xchg pop (bad) dec add mov aam sbb jle (bad) sbb test insl jo mov xlat pop cwtl pop xchg mov in mov hlt dec popf lret fistp mov lcall sub mov sub fldenv push pop rcr aaa sub xor pop mov jp imul inc push cs mov jo mov jne in pop sub inc ss data16 sbb xchg pop lcall xchg outsb adc adc rcll lret lock ret mov sub das jns movsl sbb std addr16 std jp jl cmp xchg inc cmpl sub mov pop push or xchg add lahf dec add pop ficompl insl in jle vpunpckhwd sub (bad) mov lock (bad) repnz test in pushf outsl xor bound inc jnp,pt xchg outsb (bad) lret add leave or shlb push leave inc fwait dec push mov insl lock dec and loop xchg (bad) or mov pop shrl sbb (bad) or xor push stos aam push mov sbb dec cmp push fwait les mov daa push imul xor mov jno aaa and sbb shlb cltd lods enter leave push pusha pop ret sbb and enter add ret aad loope or das std cmp std jae aam imul push popf mov bound dec inc sti out out add cmpsl scas or xchg or inc lds lds fdivl push mov jle shll mov mov cmp push (bad) jae pop loopne mov stos mov sbb rorb ds cmp adc outsb test movsb mov rcl push xchg lret dec out rcrl add (bad) outsl mov mov add movsl adc pop loop push cmp out popf lds cmp dec fisttp shrl lahf sub jae inc and dec and in test mov pusha sbb or push ret sub pop ljmp (bad) xor dec cmp ss mov push mov push clc xlat add nop mov addb icebp xchg xchg sub je jl pop sub inc xor mov add or dec jmp mov jae cld loopne cmp sbb lret cli jge cltd adc sbb push popf nop and mov roll xchg stos and loope andl repz adc scas sbb cwtl adc xchg mov dec and pop popaw mov imul xchg lret mov xorl xchg mov sti sbb imul sub daa out ret dec jge sub hlt out cmpl pop and shlb dec es mov test pop (bad) je xchg enter dec jecxz cmpsb and add cmp clc stc cmc repz mov pop sub ja pop dec pop fdivrl inc test dec inc jne into sbb cwtl lret rolb outsl xchg movsb fcoml aam xchg push jl jl and notl jo mov push pop cmp js sub or mov (bad) popl or (bad) jmp mov jbe rclb push lret mov daa unpckhps mov test xchg mov or mov sbb sti mov inc mov cmpsl push xchg mov add adc mov xor mov gs test mov jl scas cmovns xlat fdivp mov jae cmp sbb push incb and inc and mov dec ja ret das and adc dec xor sti outsb push mov out or movsl mov sbb in roll inc xor sub jnp das lahf cltd shll ljmp mov push hlt in mov pop arpl ss pushf (bad) mov inc add imul add mov ficomp inc jp sbb fdivrl fstps dec call les cmp orl nopl mov cmp movsb mov dec push xorl sti cli (bad) repnz inc in (bad) cmp and jmp popf and mov (bad) into addr16 and mov xchg les pushf add sub mov dec jmp inc jo pop mov or lods sub push and pcmpgtw fcmovne fdivr clc imul xchg mov xchg mov adc mov add add push sahf sbb pop (bad) (bad) cmp scas pop test cmp data16 lret (bad) xlat pop and subb push cld push mov dec push jbe jge pusha lock inc mull fs jns jo loope mov inc xchg (bad) jno adc enter leave test and dec out lret sub lret cmp gs jecxz ljmp pop xchg mov insb enter push mov jmp mov xor into mov push test jae lods insl dec mov jg subl rcrb movsl loop stc adc and out mov ror sbb mov xor dec pop push push inc scas ret mov pop cmp xchg and push push pop jno push mov scas xor arpl cmp and jns pop into or dec adc pop dec test int mov scas es mov fwait lahf out sub cmp cmpsb adc jecxz data16 ret xchg lea cltd (bad) xor imul pushf test (bad) repz push jne,pn loopne into sbb adcl sub mov jle pop jmp les jo inc dec loop mov sbb dec pop adc mov ret push imul stos divb mov cmpl stos aaa inc pop je stc pop dec repz gs repnz cmp mov cmp inc jle (bad) sbbb (bad) (bad) lcall out lcall push sti mov ds jp sbb pop adc cs dec dec jecxz add out in packsswb mov insl test loop fdivs es add std mov mov cmpsl add jg jle scas jnp je (bad) imull std cld (bad) push dec fnstsw orb enter lds mov pop outsb aad or ret (bad) clc mov lods pop inc stc jb pushf popa push pusha push jne jns icebp ljmp out fldl cwtl mov xchg jl jge mov ss mov push or adc sbbl sub loopne push sub dec mov mov cli mov xor movsl add cmp outsl in in pop pop iret and mov or push adc fmuls cmp fsubs iret jae repz dec inc mov jnp push and lret dec cmpsb push push xorl (bad) pop add adc jnp push leave push pop mov icebp pop data16 or and imul mov in cmpsl mov cmpsb dec jns cmp test cmp mov fwait inc mov jmp (bad) xor ss jnp mov adc int icebp ds push dec stc mov cmp in inc in fiaddl out gs lods lods (bad) mov enter push sbb ret and imul jge ljmp cmpsl and sub leave dec xor outsb xchg lea mov adc pop push cmpb ret nop fidivr adc push xchg mov aam jbe mov mov mulb cli movsl daa push sub movsb (bad) lods and js pop mov cmpsl out ljmp push jmp dec fcoml cli decb sub jmp sub data16 mov repz rorb pop (bad) xor sarl stc rcll test es (bad) adc cmpl mov jmp xor sahf test xchg dec sbb stc cmp cmp sub inc testl fcompl mov dec cmp negw pop out mov fcompl dec arpl jae push pop icebp mov mov cmp ds inc or mov enter jmp (bad) enter cmc leave fwait push imul xchg cltd xchg scas aaa xchg inc in cmovne rep mov fdivrl mov sub pop and mov cltd fwait cmp jmp fistp xorl fistl stos pop sbb aam (bad) outsl sbb es lcall sbb cmp lahf or push mov cmpsl (bad) cmc mov mov xor sub daa mov add fisttpll test data16 adc inc mov pop inc ret shr enter jmp jne and pop popa ds jge mov push aaa or popa push mov mov lret in cmc push popa cmpsl jg aas sbb cwtl mov add mov js jle mov dec mov xor std inc add andl dec ja pop mov movsl jns sbb jg sub jmp xchg movb shrb inc cmp inc sbb fwait xor fcoms sub into and mov (bad) loope lods jl addps fildl adc jmp nop xor xchg adc adc sbb data16 push test pop nop xor lods mov xchg dec aad pusha pop notb int3 idivl or test jl push adc add (bad) jns cmpsb cmpl incl call cmc and cmovnp lret in (bad) and aas push loopne lds (bad) jmp call push add xchg inc in cltd ret mov lods xor call cmp mov aad bound mov xchg mov sarl xchg mov gs rclb out push movsb int mov xor adc or stos and (bad) dec push push jo scas ljmp add inc dec mov pop test lahf add mov push add mov mov mov ljmp ds lds xchg mov dec push lock fstl fwait mov add out dec scas sub repz jbe adc sub xor fs (bad) (bad) adc mov mov and popa inc les push jmp gs jae aaa addr16 cld sbb loope or mov cmp mov cmp pop push imul sbb jo out mov ss xor insb popa test inc ret popa test (bad) push dec xchg cwtl cmp pusha icebp imull sbb das jp xorl stc test insb fistl in jp fnsave mov pop inc pop push jne mov push xchg xchg mov shr (bad) icebp pop enter push std inc cmp xchg imull mov loopne sbb xchg jge adc imul shrl pop mov popf and add mov push pop dec mov andl das jge jg cmp pop sahf sub dec out inc repz xor pop jp adc dec out push (bad) xor push pop mov out mov sldt scas push adc adc ds rcrb push cmp push dec je mov mov pop in pop add hlt ret fwait push ret push jle test loope pop mov dec inc or sub jno push jbe lds mov cli (bad) push mov das loop lret inc or mov or inc popl and pop das adc setne lahf call fild jmp add pusha mov int3 nop rcr mov and sar push pop insl push dec mov cmovb test fmuls mov push push cwtl into jle aas call dec repnz clc mov pop aam mov mov push clc aaa std das jnp cmp jmp sub je inc lods jp jne pop int3 jge dec int test imul dec rclb mov push ljmp adc popf repnz lock lods add cmp jae icebp cmp mov dec shrl ret cmpsb das hlt dec jb sub std and push (bad) loope test add (bad) jns in jno and lea rcrl and je (bad) test lret cmpsb scas (bad) add loop push (bad) ret adc or adc push sub jb rorb push cltd out notb sub dec out sti jmp (bad) dec xlat leave lea int3 mov xchg push popf pusha cmp lret into insb ret mov in sahf mov dec arpl xor or es sbb orb insl adc sbb sahf or std out sahf mov imul and dec iret lods inc roll ret xchg jle mov insl push pop pop xor mov push mov add adc nop imul testl popf dec scas xor pop pop adc push push cmp jle xor repnz xchg inc jbe inc nop lahf mov mov dec cwtl shld and pop xor pop xchg sub jg test push data16 pushf mov je add popa call adc xor imul xchg mov inc jae or (bad) rorb or fmul adc dec stos cs clc mov outsl imul push dec cmp bound out ss stc rcrb xchg jmp sub mov popf (bad) aad movsl pop sub push pop into arpl xchg jne pop or insl daa in dec sub xchg push repz add pop adc cmp jmp mov mov pusha inc out adc aaa mov cltd test xchg or lock cmp hlt xor add jns cltd sbb cltd mov lea pop push shrb or test data16 sub loopne jmp scas jo xchg lcall out dec decl mov jge mov dec ds aas lds sbbb xor rcll jle imul loop add mov pushf xlat push inc cwtl ds dec jmp std cmp fdivs jmp imulb mov dec push data16 imul jg loope pop imul test outsb (bad) and ds mov in jb push pop hlt cmp mov (bad) mov cmp repnz or add cmp mov sbb sti mov in pop pop cmpsl or adc call mov mov jge sub dec cmpsb inc or cmpsl push cwtl rcrb mov test ljmp add mov mov dec icebp shr mov inc clc add jnp cmp aam clc push inc (bad) icebp jmp pop (bad) hlt push ja lret inc stos jbe pop icebp lea popl mov dec jecxz dec movsb mov pop mov pop and dec leave xor cli pop mov xchg negb ret scas jle push lods jg gs or jge pusha and xor lea adc loop xor dec sbb hlt dec inc dec cmovo dec and sti cmp mov mov or (bad) dec sub pop sub bound lea adc xchg sub cmp and int3 (bad) adc lahf int pop stos cmpsb fdivs rcrl mov ficomp insl in (bad) lock pop mov fs mov pushf push mov mov xchg (bad) stos mov jne icebp loop xor movsb mov ja rorl inc adc jmp imul cmp cmp repnz cltd mov push dec or lods push dec and pop (bad) cmp inc push add popa (bad) add insl cmp jl xor (bad) sub adc inc pop in add push mov (bad) mov cmp dec pusha adc nop push fs outsb xchg jmp movsl xor es mov push mov pop xchg and outsb test pop aas mov xor scas mov into sub jno mov jge push ret jno out sbb inc sbb cmc add inc dec cs icebp mov fldenv outsl nop aas std cmp test call outsl fadd mov imul mov mov lds jp jae xor outsl insl inc push out lret imul flds mov push or je nop je or mov mov repz xchg jo ds nop mulb dec movb push add or popa push pop sbb dec push mov adc adc aam imul cmp adc xchg jno add mov mov dec mov mov jmp mov out xchg pusha dec insl rolb sub pop jg push fldenv mov incb mov xchg and mov (bad) repz dec ret (bad) std lds mov out out gs mov lods cs test cmp cmp andl in xor pushl cmp cmp lcall push les pop xlat xor icebp or pop std jle cli and pop jnp icebp es pushf call inc stc movsb mov cmp push loop (bad) pop sti aad ljmp pop pop std es in jl mov push dec mov jbe push loopne xor lahf mov xor insb push (bad) dec fnstcw out in jle jecxz mov xchg xor sbb push inc jne aas psrad push mov add inc sub and push (bad) icebp repz mov stos mov jecxz pusha mov enter mov pop lods sbb xor inc cmp sbb push mov mov pusha movsl es mov pop pushf add pop xchg and sti cmpsl (bad) sar clc leave (bad) outsb inc cld xor imul xchg jge dec in and cmp mov andl insl icebp mov nop or jns jl sbb push fldcw cmpsl scas cmp sbb out enter xchg or insl ja xchg (bad) jae outsl xor lcall (bad) out lock add enter lods inc add push cmc mov leave movsb xchg cmpsl push inc jno jge adc pop and jne dec out push inc out dec test (bad) loopne int jne add add scas jecxz cld test dec insl in push popf outsl stc test movsb mov sub cmpsl scas cmpsl arpl pusha scas or fucomp and ja mov cmp (bad) or mulb call add pop pop orb cmc xor mov ja dec aam xlat fdiv jb or add repz xor stos push outsl mov sahf stos adc fs dec jp imul jmp leave inc (bad) jl gs pop movsb sti lahf cmp sub xchg popa test and mov sti pop je mov call notl (bad) push roll mov xchg jo cmp cmp loopne mov loopne clc bound jnp loop dec jmp dec pushf aas xor jae sub mov (bad) mov pop fnstsw aas inc dec pop pop dec ljmp xchg pop sbb outsb pusha xor sahf xchg or mov je dec mov rcrb (bad) and lcall ja test test decb dec int3 jne (bad) cmpl jb push sub pop sbb int les imul cmp or or sub or loopne sbb inc sbb nop bound scas push insb insl dec xchg js cwtl aam (bad) mov out push cmp jmp xor adc daa push xchg mov pop push pop cmp xor jl movsb jg lcall cli insl cmc inc push outsb fs int lahf loop,pt repz mov adc and add lods add lods cs insl subb push fprem inc dec dec sbb icebp mov pop xchg std stos scas push fwait add data16 dec (bad) cmp cmp and mov ret clc jmp adc add mov push mov cmc enter or and inc iret scas sbb xor or out push js mov fnop mov (bad) push sbb arpl adc inc dec mov pop xchg mov andl addr16 xor pop xor xor pop jmp mov and pusha jg aam (bad) aaa mov in fwait push sarl fdivs mov das gs push fstpl jl add mov jnp add movsl (bad) mov scas cmpsl in inc add or push or sar insb jno leave mov (bad) mov aad mov arpl repnz mov fstpl fxch lds std test stos dec lret (bad) nop lock dec xchg loopne mov ret out int into cmp cmp sub inc insb js add out test pusha mov add loop cld jecxz jp cltd jns sbb data16 xchg mov or or pop mov aad (bad) movsb xchg cmp add mov in sbb into jnp ret fmull fnstenv scas sbb dec jmp pushl push pop mov out out dec fwait data16 mov mov ljmp jg push sbb mov or int shll xchg dec jmp mov loope (bad) hlt sub loop pop leave (bad) hlt push or jbe dec out rcrl subb adc xchg sub mov push dec call movsl sbb imul push xchg adc loop inc jecxz mov pop push adc xchg jae call lcall push sbb out jecxz repnz or das les pop gs inc inc or mov lret jne sub rdtsc inc ficompl scas push sbb icebp loope or or imul pop adc sahf das jnp xchg xchg stos imul cmp dec aaa lahf rol pop jp out in hlt jl mov cmp lret push cmp sbb nop lds js clc fs lds sub pop pop jns pusha or inc push push stos inc inc sbb inc push ror and cmp stos sbb mov fwait or ja cmpsb mov pop mov dec lahf (bad) mov mov push mov jmp adc hlt mov rorb outsl mov cmp gs mov xor or arpl or push mov sbb lods loop add movsl xor bound notl lret xchg sub mov in sbb test pop mov mov xchg stos or (bad) cmp dec in mov incl in xor xor mov pop je inc and (bad) xor insl clc je hlt nop loopne mov or mov dec enter adc jg fisubl xchg xor outsb cmpsl in pop push outsb jnp inc les xchg lods push fs and fisubr je subl test pop int3 mov insl (bad) dec (bad) jl and fmuls dec lahf mov (bad) push xchg dec lods add push and cmp push loop roll shlb adc inc js test (bad) insb pop (bad) dec jmp mov and aam (bad) push insl in mov testb imul cwtl sahf mov mov subb das out ljmp (bad) roll arpl jae sbb ds mov and aaa xchg jg fimull les imul or rol loope stc jo xchg bound into pop sbbb pop cmpsl dec outsb aam inc hlt imul leave aam fucomip mov cltd dec pop sbb xor sti xor xchg ret xchg mov dec leave jae test leave mov sti loopne int3 jecxz fiadd push dec adc push pop into fwait cltd and aas outsb imul movsb (bad) out lods fst and rorl push dec dec jbe mov cltd xlat outsb add mov push je into cwtl int3 dec in insb mov jl dec cmp cmp sbb outsb mov dec movl inc inc (bad) leave fldenv sti jb leave ret stc xor loopne scas fwait sub jp sarb in mov out adc sbb mov fs add mov push lret inc adcl jno les scas fadds movsb mov (bad) ss shrl in nop inc push test mov push outsl movl ljmp or cwtl xor sub dec dec push cmpsl mov cmp es jmp inc push xor fdivrs mov sbb insl icebp movsl add cmpsl dec cwtl xchg out in push mov jle arpl test scas cmp or add fimull mov pop mov dec or rorl mov xor sbbb push mov add test mov sub loopne hlt push dec mov jle test fcompl lods fwait sub add sbb (bad) data16 push xor sub out movb jbe mov flds jns cltd adc add (bad) xor xchg aam out stc push sub lea jns cmpsb adc and das andl lcall mov inc (bad) repnz jg inc jnp (bad) mov push xlat jno ret jge (bad) es clc push popf ret lcall lcall adc sbb (bad) jge cmp xor mov sbb sub lock and repnz pop iret int push jno inc and xlat jae push lret rorb pshufw mov xor push test cli stc sub and das jns shll pop testb mov fbld adc sbb mov inc or or fs push cmp sbb lods jle pushf mov (bad) fnop int3 (bad) (bad) sub repnz jno mov test imul push cs pop mov adc test mov xchg das popl adc xchg sbb fldenv pushl movsl xor mov or push pop stc je rorb push push out ljmp cli pop mov pop fisubl pop mov pop sub fcompl inc scas ror push daa and ret movsl gs push mov push sub movsl repnz stos sub jns or add lcall or inc cmp pushf inc int3 sarl mov scas inc shr jmp dec inc js mov or mov ljmp add movsb cmp nop jae das insb cs xchg xchg mov pop fcomps push icebp xor loopne scas sbb mov inc mov test ret sbb mov jl loop cmpsb mov lods clc xchg push xchg mov jns insb adc rorl mov mov xchg adc mov add mov dec jne into imul xor xor (bad) xor icebp (bad) pop mov xchg out jb add in or dec pop lret push aad inc jmp xchg stos mov enter loopne jge cmc xchg pop add icebp add mov lea mov fisubl and sbb (bad) in pop cmp mov jbe nop xor pop cmp (bad) jo inc sub inc sub mov idiv fsubrl mov mov mov out cmp iret mov fidivrl mov mov xor sahf repnz ja adc push imul mov dec (bad) out fs and dec sbb dec cltd test sbb mov mov push ss cmp jns xor inc add and lods and mov jge push pop pusha mov push dec jns insl enter outsl ljmpw sub push dec push imul and pop jb sbb sti xor jbe jo (bad) data16 mov popa mov ss mov fmuls lret xor movsl or sub outsl or and int sbb fist shrl arpl sub ret sahf cli sbb jmp fdivrs cmp data16 iret push out ffreep out int3 xor mov stos xchg pop add push arpl pop lock arpl mov rclb mov arpl mov and xor mov cmp mov cmp stos xor or in sbb xor cmp gs movsl popa mov push pop cmp push or cmc push cmp das cmpsb adc flds lret cmpsl pop ret and std cli xor jns jl xchg push cli cli outsb xchg add imul iret loope es outsb rep std mov push scas dec sub test movsl cmp mov pushf push jecxz icebp insb sub mov jp in jle xor jno jns mov (bad) xor jno pop xchg out jae pop out lret ja xchg or add cmpsb adc sbbl int3 mov adc test (bad) jo (bad) movsb lcall inc xor mov loope dec ret js ljmp test sub push pop and push jp mov mov jecxz xchg shrl int popf mov nop es add cmpsl mov inc out mov lea pop (bad) test popa fnstsw inc sub imul cmpsb test out mov loopne adc xchg out cmp leave push in jo dec xor out divl sub movsb mov aas push cmp test push jp jne and fwait cmp int3 outsb pop jnp jne xor js divb stc shrb sahf pop aas lock lock daa jecxz pop inc xchg jle hlt sbb mov add daa mov cmp mov test cmp (bad) cs or lea ficompl adc xor xor xor sar jnp or mov incl pop jbe cltd in jb dec jg sub mov mov lods lcall mov jg xchg inc lock lcall or mov cmp fdivs mov and mov fstpt icebp sbb mov mov shrb and lret js sub je pop mov loope shll nop ljmp loope dec jg xor pop jne cmpsl mov nop stos test std insl mov and push xor cmp js sbbl mov movhlps ja in mov dec daa les fisubr dec out les pop cmc das mov push jne out xchg das ljmp in mov dec fimul inc jo dec or and mov and lret scas nop outsb into sub fs shr lret mov imul or stos inc adc cmp jle jl pop jp lods fs pop pop sbb cs movsb sub adc lret loopne (bad) jno out dec or ja lret loope xchg dec jno aas hlt (bad) inc push mov ja mov insl add out lods mov shll (bad) push loopne pop js xchg inc adc push and mov or es jge xlat in cmp mov test lret pushf push in or sti push cltd stos dec (bad) pop cltd and mov sbb pop iret mov js (bad) mov or lret ja mov pop dec ret adc pushf pop sbb cmp dec shrb fistpll xor insl adc imul cmp mov mov cmpsl in ret cmp sahf repz adc ljmp inc repz sbb mov xor imul or pop les mov pop addr16 push jge clc or mov out mov pop push movsl stos pop sub dec inc inc cmpsl sub pusha stos mov jle mov mov sbb shll sbbb stos mov inc mov dec shr std inc imul jns cmp mov inc (bad) nop adc test sbb dec push jb cmp lret fs mov jo icebp sbb mov cmpsb ja outsl addr16 imul pop mov int3 shl imul mov inc mov das jg sahf mov pop insb xchg test loopne jnp gs xchg xchg push sbb cmpsl (bad) test orb sarl push aas in push sbb mov jg in clc cli loopne dec push movsl push aad xchg sbb fist repnz xor pop mov pop push and cmp shrl add mov or lret daa dec icebp pop sub push insl cs stos mov dec xchg stos jge loop call ljmp test cmpsb xchg pop jb jmp mov sti icebp adc xor out out mulb pushf std in movsl cli stos sub push push std fdivl mov dec imul mov (bad) mov into inc bound dec or out dec jge mov jle aaa mov sub cmp aas mov inc popf loop test bound cmpsb add mov push orb dec mov lcall or jmp lods mov (bad) xor add dec movsb or fldenv add rcll add push lods cmp call pop inc dec int aaa pop das mov sbb jg repnz push xlat cmp sbb sub movb sbb and mov test and enter rorl cli jl xchg shl test and loopne pop jmp cmp push and add test cmpsb test mov and mov lahf (bad) or loope (bad) mov dec sbb pop test push fiadd mov (bad) stc add cli cli adc add mov push pop popa pushf mov push mov in daa xor pusha fildll xorl mov sti pop dec dec fstl and pop pop mov xchg xor mov dec int fnstsw push neg xorb int3 rcll push dec imul mov cmp cmp (bad) out dec cmp leave repnz xchg cwtl rolb inc cli ret adc scas inc mov cmp pop mov (bad) loop into inc inc popa loopne cmp push sub out xchg sti (bad) push xor and je adc lret faddl popa push repnz dec gs arpl mov push or lock sub enter (bad) push das call jb loope std ret scas cmp mov cltd xlat or mov adc das inc jle dec xor xor in aam aas xchg out cld push or sbb fildll dec sahf mov repnz sbb das jnp or dec popa push add fs mov test pop shll cmp sahf test roll and mov cmc fistl mov jnp pop push sub cmp lret xchg or lock push aas or dec push dec jns dec je sbb in cmp (bad) mov stc repnz (bad) cmp inc outsb inc (bad) xchg (bad) mov cmp adc cli (bad) jbe xchg xor pop add fisubrl aam andb movlps mov cwtl mov mov push push mov jp (bad) aam lds cmp aad (bad) jo xchg sbb in or inc mov xlat adc dec and mov fcoms push push fs adc fimul xchg pop add jl fnop mov jnp sbb (bad) jmp sub cmp scas inc aam add adc scas push ss mov adc sub (bad) rcll adc in push pop mov mov aad (bad) mov jno sti xor in pusha sbb push or inc movsb in sub cmp or imul xchg sub mov fldl mov cmp or testb push and xor jp (bad) mov loopne cmpsl ss insb repz push iret add (bad) cmp sbbb inc dec ror push add sbb mov mov xor hlt and mov mov sbb ljmp pop fwait xorl imulb inc dec mov push adc aas sarl insb lret sahf addr16 in not dec icebp fsubl sbb xor je mov fildll cmp outsb scas and and pusha call xchg movsb mov call jb loopne lret adc call mov cmpsb jecxz fidivr and push dec mov pop (bad) mov aas xchg xchg adc sbb cmp mov out (bad) adc stc stos xor add mov sbb les movsl add pop push mov outsl (bad) xor lcall mov and inc lods inc jb inc xor lahf arpl push sub std sti cmp and sbb data16 mov mov sarb adc cmpsb loopne in sub pop mov mov dec xor sub push mov cli pop (bad) pop mov xor jnp jg popa sarb mov push lret adcl jmp xchg mov cmp pop inc mov pop rclb fmul aam hlt out aam loopne mov lahf push push cli and xchg mov aaa jo add dec or (bad) ja dec mov cmpsl cmp andl mov insl pop (bad) cmc std xchg fs sti inc fsts insl icebp rcrl (bad) lods (bad) fsubrs sub adc mov ret add cmp jnp dec xchg aad test xor jmp (bad) setnp cmc fldcw push jg sbb das outsl lahf icebp call lret inc inc test pop cmp arpl dec lods nop sbbb (bad) int pop pop mov leave (bad) jmp outsb fadds scas (bad) int xchg jae enter jo push sub scas rcrl xchg enter mov or sahf push es adc jp cmp shlb push fdivr mov and push cmp int (bad) dec ror lea rorl sbb mov mov test xor fnsetpm(287 iret cld sarl out mov flds incb push repnz sahf mov sahf pop sbb int nop out pop lret adc xchg ret leave or arpl lret dec jo or adc (bad) xchg insb mov insb jne push jns push pop push fdivs (bad) or dec (bad) fwait shrl repnz adc imul adc in jns sub out inc add cs mov and inc add xchg fsubp mov pop mov jmp adc jmp lds pop jge inc test or in inc lods sbb inc loope cs pop mov arpl jmp or loopne and (bad) mov cmp dec mov das jns movsl pop sbb (bad) xchg lea sti jo test pop jmp leave fistpll (bad) sub adc dec or inc call dec orb imul or lods xchg fbstp xor adc test or inc jns and insl ds popf lret pushf scas jge xor call rcll dec push inc pop jl xchg mov dec push jmp adc push in xchg cmc adc sub es xor dec cmp and xor ficoml movsb fcomps inc lds in mov fsubs repz sbb adc mov sub pop and xchg out inc push pushf lods pop cmpsb jp stos test add sbb in jae mov js mov stos cmp js imul lea sbb nop ret add push movsl xor cltd out cmc or popf ss add (bad) mov scas lahf (bad) divl mov pop in sub (bad) (bad) int (bad) movsb inc add fist (bad) (bad) add mov cld jne jo sti jl cmp push dec push outsb mov jne aam or pop sub scas or rorb mov or sahf popf lea jbe push adc cmp and je shrb and aaa inc das mov ret xor out push js dec push call movsl (bad) (bad) jp (bad) popf or hlt dec bound dec aam pop scas imulb frstor pop mov arpl (bad) ret cltd lcall ss sysret adc inc shlb mulb inc js stos sub int in add adc test mov mov mov enter mov jle cmp sbb cmp sub pop incb jg mov in push dec cs inc das jns btr dec push imul sbb and xor jecxz and out pop test decb add test add je push clc adc das in mov inc ds imul push adc adc sub fidiv or ds push or hlt mov mov push ja scas xor push daa add int lods inc mov and inc adc adc mov push (bad) loope sub int shrb cmp stc call cli mov push pop adc cmp test adc or adc cwtl and (bad) ss cmp mov xor repnz pop loopne daa daa push call cld cmp jle adc iret mov xchg xchg or mov inc cmp test sbb lret addr16 xlat push nop cmp out adc or std pop mov jle sbb inc clc push loop outsl lahf pop (bad) jmp mov jbe pop test loopne test pop cmc xchg fdivs outsl sub leave sub mov xor mov fsubs rolb ret repnz lcall fisttp sbb pop dec in mov jne fidivr (bad) mov dec xchg dec pop sbb push imul lret loope les icebp add and rorb clc in jmp pop in int sub adc jbe insb leave in jge jle jmp sub ds cmp dec cmp xchg lcall mov cmp xchg test cmp cld aam pushl test sub test lret cmp add mov push rolb outsb jle dec shrb popf insl mov or sbb nop xor cs push or xchg mov push std mov push insl cltd dec int3 mov cmp fsubrl lret sbb aad insb (bad) push xchg mov lret (bad) out movsb dec mov adc mov sub test (bad) mov leave sub loopne or mov pushl nop dec inc test mov sbb sti lea adc inc pop mov push mov out add clc or pop or jle addr16 sbb pop mov sub test call ja push pop std mov push pop sti movsl adc pushf pop icebp in mov adc addl leave cmp rcr sti icebp (bad) mov push adc rcrl insl sub inc xlat jne rorl jne aaa aam mov sbb cmp jb dec daa sbb ss adc (bad) outsl mov out (bad) xchg mov ss cmpsl leave lcall inc pop cmovg into mov xchg pushf aad adc push cli ds js sub mov imul ficomp sub test add pop push inc ret jle sbb dec int sti cld cwtl aaa cmp jae add negl jmp jge sub loop imul push mov adc pop test pop sbb xchg fidiv mov aas insl js and xor cwtl and hlt bound test int xor (bad) jno rcll cmp fldt xchg inc jge pop sbb cmp push inc mov adc in psrad xchg mov iret mov xor into mov adc push ret pop clc aad inc sbb cltd repz addr16 mov mov das add sbb aad xor xchg adc cld (bad) jno dec arpl lret jg pop xchg pop pop push leave fdivs inc (bad) call adc push enter sbb ss add in fldcw cmpsl outsl les nop stc cmc je hlt pop xchg imul shrb flds xor inc sbb addr16 sahf adc pop sub inc mov pop test jno xchg (bad) pop or bound insb push pop pop je cs es jnp dec dec dec ljmp jno in push dec iret insb out jns ds imul xchg mov les mov mov arpl pop mov in aaa sub add push cmp pushf mov loope outsl out cmp sarb repz fs inc repnz mov sub xchg push sbb cli xchg pop mov mov xor mov dec mov push lcall ja dec mov scas fs bound aad push mov sub inc scas push pandn addl mov lret in xchg dec ret insb icebp jb iret cwtl jbe add shl sbb pop (bad) jmp add xchg push gs push ret das or rcll aad aas ret xor xchg push pop or hlt insb mov hlt add inc inc (bad) (bad) je push add mov or (bad) scas mov pop cwtl inc lds arpl sub mov or hlt mov lret (bad) xchg inc sub adc fcomps pop or loope rcrb jnp cmp movsl sbbl movsl push pop out stos xchg (bad) pop add push ficoml and pop push rcll aam pop adc fldenv inc scas cli add test xchg xor ss dec add lcall not cld pop fmull or rorb scas adc lds out not aas lcall ja imul (bad) pop (bad) mov or mov das pushf fldcw dec jge popf leave push out cmp mov mov pop call es movsb sub jb into repnz cltd and outsb jnp or mov fbld (bad) xor (bad) outsb imul mov addr16 sbb data16 mov loope cmp repnz xor cmp imul icebp mov fs mov inc addr16 je adc adc xchg sbb aaa mov xchg inc mov mov cmp inc jle in push sbb push shrb dec or test mov imul lcall les iret lds fild lods xor jne lock lret inc sbb push iret lea aas in int mov push sub rcrl cmp outsb jp cmp repz xchg add mov cmp and jp cmpsl mov pop jg dec mov mov xchg push popa (bad) mov pop (bad) (bad) xchg cmp mov jno shrb ljmp xchg mov test ljmp test cmp insb add xchg mov (bad) adc dec clc test mov jae (bad) imul pop sub mov add xchg scas ficoml mov lods aaa mov jo cmp xor xlat in sarl jne push in imul or jge xor or sbb pushf cmp loope xchg sbb fnop push fwait ds icebp mov cmp sub xor jbe fidivr inc loopne jo iret jnp mov test jg dec adcl xor shrb mov mov and aas out adc pusha pusha insb dec adc adc scas add sbb test imul inc add ficomp aam bound xor fldl push push mov push mov lock sub daa nop pop xor add inc push cmp inc pop inc inc cmp jo ss jge push repnz scas fwait cwtl mov out xchg out push outsb mov aas test sub dec mov out das jne (bad) emms dec int cli jb dec xor sub or outsb mov jecxz cli fmul mov adc rclb dec mov fimul mov insl mov jle adc or (bad) xchg lahf add out and fs out or outsb fucom add (bad) sahf xchg pop mov lahf stos dec cmpsl std cltd loop mov mov in push cmc loop jl aaa cwtl addb ds ljmp jmp cmp xor pop std out jno repz sbb jl decb mov xchg add stc mov imul movntq jnp inc adc push cmp out mov mov stos in pop sub jbe dec push or enter add call lret xor imul rcl cmpsb loopne inc rcl mov out mov pop pusha sub jl cmc outsl sbb adc and push xor xchg jmp jecxz mov (bad) pop in mov ret inc add lds cmp cmpl push sub data16 nop fs call lahf aas pop sbb pop pushf mov jge aam push cwtl push fwait jns mov mov and (bad) sub jnp (bad) repnz xchg ja mov (bad) gs mov xchg fs fs inc cmp outsb inc jg movsb push jl cmc movb jp adc seta sbb adc scas xchg sbb xchg adc (bad) inc dec mov cwtl cld clc and in sti pop not js in xor cltd and popf inc jl lods jp mov pushf dec push pop sbb or push (bad) jg mov add sbb popa out es pop sub sub movsl pop lahf out movntq out push cmc dec in (bad) fildl mov adc in add out cmp push cltd and and call jp std arpl inc test aam ds lret sub call pop (bad) adc push push loopne dec xchg pop outsb adc int push insl mov ljmp jge enter hlt pop adc dec loope dec addb inc xchg xor push outsb cltd mov xor sbb nop (bad) xor fstps outsb sbb lds cs lods mov fcmovu pop xchg sbb push mov jnp adc inc push push jmp fnsave add mov xlat outsb jmp stos scas (bad) into scas rol mov int3 sbb outsl inc mov xchg jecxz imul in arpl les cmp adc push inc mov adc add js push rolb sub pop xchg test lock jmp nop imul xor mov pop push or je call push inc aad js push pop scas jl mov nop adc mov repnz sub add jbe inc insb push and dec hlt dec push test (bad) push push aad imul cmp mov cmp das std pop xchg hlt clc add push test lods dec mov sub stos jbe bound mov outsb jecxz test mov inc jo pop xor mov aas pop jmp mov adc adc mov cmc insb jge fld push dec ror stos ss adc inc subb sbbl mov mov inc jp cwtl mov pusha fldt adc pop int mov add fbld mov mov xor mov enter (bad) jne jmp mov lods mov cmp repnz push mov sub (bad) adc hlt in frstor or jmp notl mov ret inc out dec pusha or mov inc add sub stos std xchg loope test jmp mov pop push leave jecxz mov and outsl mov jns fldcw inc test add shll pop mov enter aam push data16 fsubrp pop bound and sub adc nop iret mov flds pop jns lret bound loopne xor mov (bad) stc sbb loop xchg mov popf push push xchg mov add add jb pop pop pop fwait pop (bad) sub rcrb adc and xor out rol inc pop adc sti pushf hlt cmp sub dec xchg nop sub mov test test or scas sbb jp ret mov mov jecxz inc movsl pop xor sub stos or push mov inc cmp sbb cmpsb ret pop adc xor sbb cmp test (bad) xor and arpl xor popa into push ss dec xchg test cmp push and sub or cmp adc dec mov in test mov lea mov xchg enter lods addl stos in fcomps mov lcall ret movsl ficompl stc sub add jge sbb adc pop mov test or push shr push mov jecxz insb rorb push cmpsb xchg or fisubrl rclb (bad) push xlat lcall stos and cli das loope xchg push cmp rclb mov insl sbb mov sub repz sete mov sub cmp pop jg (bad) data16 inc xor adc pop sbb (bad) sbb testb mov inc lods xchg inc int3 push mov add mov popf roll pop fwait jecxz aad mov imul and push sahf add (bad) lock cmc push add stc dec ljmp (bad) fdivr pop out pushf pop out fsubl fwait adcb hlt mov lock push jne insb aad bound sbb rcll mov shrl push mov iret es lahf fs dec cmpl cli lret cmp mov sarb pop fistp jne cmp les pushf ret aas cmc mov dec dec mov mov subl stc (bad) iret sahf or lcall sub cltd or pop popf pop sbb cwtl lcall inc pop dec sub jle outsl pusha clc cmc loope inc mov fndisi(8087 (bad) xchg or inc adc xchg imul ja (bad) or adc add int3 inc push push and cmpsb mov add xor sbb pop mov push cmp cmpsl out sub sub pushf cmc xchg mov loopne imul rorl push dec call fdivl and and pop scas ds jne mov imul xchg lahf shrb outsb ljmp pop shrb lods bound sub inc outsb in cwtl in and add (bad) mov call mov push xor sti xor pushf push mov cli mov jl mov nop dec add idivb test xchg mov pop pop mov xchg lret push movb mov add shr aad lret les mov push aaa outsl int3 call xchg push fist xchg mov mov ds (bad) in sahf lahf sbb xchg cmpl xor xchg js mov iret iret sbb mov mov (bad) rclb mov and cwtl xchg adc cmpsl (bad) dec xchg shlb enter loope sbb dec test xchg inc mov xchg ds repnz mov (bad) lock pop inc adc js sbb xchg inc xchg aaa fimul pop rep jmp mov aam inc sub mov adc push loopne add jg cmp (bad) outsl jl dec adc mov inc xchg (bad) xor das jmp cmpsb mov pop subb push xchg adc iret push inc mov pop jbe arpl push fs aad in jp ret sub std xchg xor xchg sti sarw xchg in and scas and cmp xor inc adc mov xor xchg mulb cmpsl and dec push sbb pusha cmc push pop push (bad) dec add fisttp in bound js ret adc into scas fidiv mov notb cmpsl mov mov dec arpl dec and xchg mov dec daa mov mov or mov idiv test mov lock mov (bad) fisttpll mov mov repz fnstsw xacquire stc mov jnp or rcrb imul pushf rcll in inc jl fiaddl mov or dec xchg and sbb rclb adc and mov popf ss decb jle dec mov xor ss ret and pop in dec out inc fisttpll pop in jae cmp scas cmpsb in lcall mov in mov mov add lcall mov test je cmpb mov cmp ret dec mov (bad) and shrl adc xchg stc dec std push dec mov aad outsl clc arpl shrl pop outsb dec cmp cli xchg mov mov push pop mov std ljmp fistpll inc repnz sub adc stc pop (bad) mov pop add movsl enter jp mov mov nop push jno ss or xchg sub or enter xchg mov nop ds loopne cmp orl lret xchg fistpl jo add (bad) sbb mulb xlat or mov (bad) std sahf sbb sbb in rcrb push pop clc add fsub ja es inc mov xlat cmc inc jmp push movb aaa bound insl (bad) out push (bad) in fmulp in inc loope add es movb pop daa mov dec push dec fldenv adc mov inc rcrl mov roll xchg sbb ror and mov inc xor cmp add sub push rorl push lcall mov fisttpl loope lret dec and pop enter push mov xor or jbe cmpsb vmread sbb pop pop pop std push ficompl mov addr16 scas xor push jp sahf xchg lcall ljmp xchg outsb mov cmc mov stos test inc mov stos or lcall dec mov push punpckhdq cmp pushf pop add js xchg mov jb hlt iret jns int lods xchg push ret or pop sbb sub jl lods pusha push icebp and fwait aas insl sub in test mov iret sub push pop mov mov fldenv mov jno mov push mov leave aaa imul mov or cmp sbb aas jo and and mov enter mov pop sbb insl and jno mov sub inc add dec push insb insb stos sbb push daa movsl xor xor dec sbb dec stos push xchg lret push movsl stos jo repz or pop inc ror push cmpl inc pop aad or std jbe gs rorb into push jae out cmp mov test or rorl sub lcall dec movl daa in rorl in jns das lret inc out push dec or jle xchg fwait dec push lods cld lcall cli jecxz ljmp mov test jbe sbb ror divb lret dec out ja mov and in insl mov cmp cwtl add sub dec push xor (bad) mov lods fwait hlt xchg ljmp daa fstl loopne cltd test push sbb adc and cmp shrl (bad) iret daa sub xchg scas movsl inc cmp out cld xlat mov push push ficom sti lahf (bad) jno jns pop dec inc xchg gs imul sbb les loopne push fnstenv outsl and fldenv and sbb sub mov add leave cli into imul mov lret test ret jp inc test lea xchg ret ss fistpll iret sub fwait pusha pop or ror aaa dec stos icebp inc sbb mov movhps lods cmp jge and enter jle jge gs mov and cmp jge inc ds hlt xor arpl mov push rclb mov ljmp std or xor xchg and aaa push call pop ficoml or xchg pop or sbb adc add lock inc movsl sahf ja inc test dec test xor mov xor loope rcrb icebp pop ja pop lret adc aad movsl mov pushf jns movsl jae mov cwtl repz fs and int3 nop fnstenv loop jno out cwtl subb dec repz jnp sub adc repz jne pop push enter adc dec mov push push mov or cmp int jmp push inc xor jmp and cmpsl imul data16 dec jno clc pop add push mov stos sahf outsl dec mov xor dec aaa int imul jmp push push je xlat dec inc jl mov xchg mov iret adc lods pop rclb mov inc or (bad) lods int mov push mov xor cmp mov arpl push stc ds cmpsb lahf xchg js lea mov cmp jp xor leave test inc or sub test test es xor fstp xchg std loope and push or fs pop mov push dec fild in push fucomi mov mov pop mov fwait ja pop clc (bad) fidiv je dec xor les into jle fsubs stos pusha js xor test xchg xchg in inc lcall fs xor cmpsb push stos jl cmc push pop aad dec (bad) rolb pop daa popf lods ret or sub sbb lcall xor out scas cmp push je rol mov (bad) inc cwtl sub jo adc lahf add es sub adc sbb jmp (bad) pop cmp mov and cmp aam jne mov sbb xchg pop (bad) xor adc aad add js sub mov (bad) push fistl mov (bad) jns push in mov dec icebp or add int adc aad pop enter cli ja pop movsl bound cld jecxz rcrb in into pop adc mov inc sub mov sub or xchg iret or dec adc jo cmp push xchg and sahf xor ja sub mov sub mov loope ss aaa ljmp jle ret sbb shr arpl test rcr inc ljmp or cs push into (bad) jmp fnsave lahf xchg test aam or mov jne xor mov aam imul sti sarb push sti fcmovnu xor aam pop lret movsl (bad) sub jl mov test cmpsl scas (bad) rep push out leave lods mov in mov push pop jg test cmpsl jne scas mov icebp in jb lods out push js (bad) jle pop dec cli call sub jo repnz nop jne stc gs aam or in cmpsb mov mov not or mov cmp pop insb pop xor shl ja daa xorb int xchg xchg nop push mov mov and mov adc pop xchg dec stos addl cwtl (bad) sbb fadd gs ret cmpsb push push push inc call mov or cltd dec jge jl and ret or or adc pushf jns inc xor lods fnstcw pop dec pushf leave test js sbb ss sbb test jmp ljmp inc aad or jno pop inc push or mov sbb fmulp dec (bad) xor jg pop sbb into cmpsl iret mov sbb (bad) dec adc cmp ficoml mov and out mov testl and gs mull lods xchg dec out aam cmp stos ret pop push dec xor mov dec nop mov (bad) popf dec mov xchg je stc adc ret sbb push push ret outsl out and lahf and fidivr push inc cs pop test mov jp js xlat cmp stos cwtl mov fdivr adcb gs jae cli loope xchg dec and les pop and add push ss popa pop mov iret pcmpeqw ss xchg scas cs scas mov jg call or mov nop jb or sti add adc mov pop sbb iret nop jg mov mov xor fild xchg popf sub add ljmp jno fsub push lods or mov adcb inc loopne cwtl xchg add ret xor pop insb je pusha inc insl add test daa or xchg pop xor lcall mov ret inc mov imul xor jae adc das jle push int3 out pop cmp cmp aam mov lods dec shrl pop into mov xor sub pop sti icebp jae add push mov (bad) cmp decb xlat push cmc sti movsb mov outsl fwait jbe ljmp aaa jmp decl ror stc xchg mov xchg adc leave pop mov pop mov out mov (bad) insb pusha cmc cwtl ja jp mov jns push jmp inc movsl addr16 jl dec imul out xchg xchg scas mov test popa (bad) mov rclb mov dec movsl out loope loop or shl lahf data16 jle sub and rorb push mov pop (bad) pop xchg testl or push lcall mov cld das cmc push fldenv push mov and lods push or aam dec movl lea add cmp rcll mov cmpsb repnz mov inc or lcall and jns cmp inc dec xchg jp dec rol or jle sub mov addr16 pop push and xchg lock fldenv adc xor add pop cltd jbe popf cmc ret lock pop clc adc gs popf mov arpl and mov dec pushf cmp enter (bad) mov popf push stos rcrl pop jae dec mov fisubr nop aam pop adc sbb ret xchg hlt sti xchg push aad mov mov pop push adc cmp xor out push jno mov daa lock nop push add sbb push loop shll lea scas lods sbb mov (bad) add sbb dec xchg dec pop (bad) lea xor pusha lret enter incl dec add cmp add in dec xor dec les lcall push adc jl mov adc dec std or dec inc mov stc dec cwtl dec imul jno clc cmp jl or and popa loop nop rcl mov xchg mov insl fldl mov add push push push loope cli in clc pop mov popa js adc inc adc out stc adc jb (bad) imul dec cmp es cs xor test inc fstl xchg out pusha inc push pop xchg (bad) icebp movsl cmpsl push mov mov mov push stos fsubrl (bad) sbb add lret adc pop pop xor and mov pop imulb cmp jmp push hlt push insb inc add mov clc bswap mov push sub insl jle and xchg push imul push xchg inc jo xchg inc in outsb mov mov mov (bad) pop mov outsl outsl pop sub ret ficompl adc pop mov pop int enter inc jne push xchg adcb pop add inc addr16 jbe or mov int3 inc sbb dec or into add xchg gs shll sbb push and scas xchg mov ret cmp shrl mull loop popa in adc popa lods sbb inc dec call xlat cmpsl sub fist shrb jp call adc add cmp push lahf rolb call cld (bad) ja pop ficoml dec mov push mov mov push pop jno,pn popf mov cmp sbb pop sbb sbb mov int (bad) insb cmp clc mov dec xor inc repnz cmc out popf mov push lret sub dec lods (bad) mov cli cwtl mov stc push sub and dec lock cmp or pop lea ja (bad) mov mov jb sbb inc enter jb lcall stc divb int3 add jge cmp xor mov push xor and mov add mov mov or jne (bad) stos cs (bad) push andl mov inc xchg (bad) call jg pop sub jle push cmc mov clc lret add xor aas inc dec sti mov adc or push push dec inc in inc jne cld leave adc cmp or out mov mov sub push mov (bad) lcall mov test sub push xor add add or mov xchg lret xchg push add stos or hlt or mov cwtl inc mov push add push (bad) clc icebp lret sbb and cmp je loope cwtl jns cmc jge and cmpsl pusha add sbb icebp push into clc shll rcrb cmp sub adc cmp dec sqrtps pop icebp sahf decb popa adc movsl icebp sbb addr16 pop (bad) xchg repnz pop sbb or inc imul cltd cmc pop out adc push xchg mov icebp repz popa adc mov popf jno jg addr16 xchg mov sbb jmp imul repz sub push int or pop addb fwait aam scas dec jg in (bad) hlt icebp or nop push jecxz rol movb subl pop pop mov sbb mov test xor add mov lret mov call fwait xor xchg sub xchg sar out mulb dec (bad) mov (bad) mov mov lds and xchg sub xor hlt pop sbb dec mov cwtl (bad) pushf lcall mov dec lods mov or iret sbb mov in add jmp (bad) fadds rcrb pushf leave jno dec mov in mov stos adcl rclb pop adc out mov xor mov jo and cs in dec and mov (bad) xlat ljmp xor dec cmpsl jno cmc jmp xchg test aas roll scas testl aas mov (bad) fcmovne or xchg in pop sarb push outsl mov mov cltd mov pop inc (bad) jae (bad) fs push push icebp xchg pushf loopne orb push pop mov jno sbb rcr push aas data16 push adc je int mov sub xchg or xor mov jecxz imul push mov sbb dec jno test pushf test imul js movsl bound add icebp push mov or xlat (bad) hlt xchg cmp jle jmp cmp add or pop (bad) and lahf popl sub xchg call dec cmpsb (bad) xchg rcl dec jl,pn loope mov sub mov flds les test pop xchg lahf xor rcrl xor notl ds pop inc imul or cs mov sub bound sub push cwtl sub jno les inc mov scas cwtl aad sub insl repz loop aam push vandnpd inc cltd pop fistl les dec in xor or lods pop mov cwtl mov shrl insb or std cmpsb add inc jmp fistpll sub fwait dec loope lcall into fwait out repnz mov ljmp out into cwtl jg mov or mov mov cltd cld cmpsb push adc stos in adc dec mov in mov inc data16 jnp ss pop push and cmp imul push scas dec push mov inc loope add imul icebp push xchg mov xor stos xor gs in push dec mov fcoml gs cmp xor lcall xchg adc fldcw adc hlt jne push xchg sbb int3 stos sahf push movsb call stc add jnp push dec push sub and dec data16 cmovg test cmp jge pop jmp xchg mov add sti (bad) pop pop ljmp mov ret popa cmp push loopne mov test sbb icebp dec cmpsl ret jno pop and push jl and popf xchg xchg fimull jae jbe fdivr inc aas hlt imul lea dec pusha mov or fild scas cmp nop pusha jecxz push xchg jp outsb xchg int3 aad jb mov test mov mov cmpsb add push outsl lds lcall daa iret sub inc aas mov mov outsl mov dec pop ds ss pushf adc add ds cmp inc (bad) dec test mov or cld mov (bad) clc test and mov out daa out stc in enter incb and sub jno int3 aad int3 push push lods jmp add sub sub out inc in dec cmp and rcrb inc push dec aam xchg mov or enter dec shlb adc inc sahf cmpsb xor fsubrs and jl jb pop sti dec xor fildl les stos xor data16 leave and or inc inc cmp ficomp outsb mov leave test adc jns (bad) test cmp rcll mov rol fidiv inc xchg push (bad) mov lock (bad) mov dec movsl pop sub xor fisub dec inc mov fcompl sub ljmp adc pop mov sbb inc sahf and inc mov mov cmc rol xchg out xor mov dec fildl push mov scas int3 or in adc icebp (bad) repnz sub jno and pop fidivrl lds inc jle stos add fdivs xor dec int3 mov or or iret cmp into dec inc xlat mov mov dec adc cmp or test movsl or lret out aas lret (bad) loopne,pt inc adc stos lds aas out clc dec rorl mov loop loop call cmp push ds add aas add out (bad) fucomip bound (bad) notl pop sub add jne xor (bad) test or pusha aaa mov jae rcr and (bad) loope scas iret add pop sub add stos int xor jb sarb rcrb push test mov mov jae xor and test cltd mov push int outsl push in sbb inc mov xchg shll pop rcrb scas mov or pop jle jo mov (bad) enter xchg loope scas int and cwtl pop stos enter ljmp jle,pn pop sbb sub arpl jl push mov lret push add cmpsb dec gs repnz dec sti mov pop dec cmp mov push (bad) fisttpll pop adc stc jo mov adc dec lock iret dec xchg outsb add mov mov dec rorl jae lret sub xor test mov mov sarb aas dec pusha sub in sbb add push sbb ljmp mov les icebp test cmpsb jns xchg fnstcw loope sbb stos mov rcr bound movzbl sbb insb cmp push sbb lods aam aam and scas loopne pop inc bnd frstor cltd mov pushf (bad) inc sarl adc mov loop pop fcoml mov inc sub mov inc jnp xorb push mov lock pop insl sub add xor mov xor mov lods inc mov or ja sbb xlat mov dec mov cmp pop mov insl mov push repz out sbbb iret popa xchg add mov out rcrl out xor incl popf incb pop cmp movsl mov mov and adc push and test xlat cs mov fwait xor push push insb sub and aad inc jl lock aas loope dec cmp sahf out sbb cmpsb xor addl adc jg lahf roll insb cmpsb inc pop leave dec out and or push lds xor xchg jle push inc xlat aam clc rcrl (bad) fadd enter mov mov inc dec shlb jmp enter (bad) scas popa pop sub sbb mov out xchg movsl (bad) stc cwtl inc std int jo (bad) icebp or (bad) mov xchg (bad) in lea inc hlt dec fnop lcall fimul neg aaa std sbb loopne test or sbb xchg or push aas push imul and insl jmp mov jmp mov out pop cmpsb push jle sbb and pop (bad) xchg popf into adcb lock mov lods dec mov add rcrl loope lahf push mov stc mov (bad) push in push mov outsl in rorb and bound mov dec xor xchg jno sub loope jo stc inc fs repz ficom mov add add adc jo dec les int3 push insb cmp and jp or (bad) xchg daa mov int mov cmp in sti mov or xchg dec ss cmp mov adc pop test mov bound pop ret out mov test (bad) rcrl add ret rclb outsb sub add mov arpl cld outsb xor loope,pt push clc jbe js sbb lret pop int3 xlat inc stos test (bad) loope add movsb ds push lock add adc and push inc mov push push mul and xor dec push daa dec jbe jns jmp mov pop iret (bad) in jne push mov mov mov movsl loop jo enter outsb shr pop jae mov xchg inc and mov push clc cld ds jne dec adc or es arpl push sub shr jg repz rdmsr in in mov adc sbb test dec xchg sub push pop add (bad) mov adc ror jmp into mov bound sbb xor push call cwtl inc or cmp adc sbb dec addr16 mov adc in mov dec push in leave (bad) loopne inc pop or mov popf inc out int cmp pop sbb sahf jns cmpsl lods jmp ljmp lods cltd sahf push pop mov inc mull lea add xor fisttpll mov popa pusha mov adc lahf sub mov inc adc cwtl xor jb jns sbbl out mov xchg pop mov adc repnz fimull call xchg inc in icebp jb cltd bound (bad) inc push fchs mov out cmp jno mov call adc dec xchg lahf cli add add out rcll add insb ljmp dec mov add insb and nop jbe out pop and mov repz mov add mov jp jnp push out push mov mov sbb push stos sbb mov sub lock jge inc stos mov fsts add xor jae rorl sbbb cmpsl iret pusha jns inc movsl rcrb sub lds mov jmp pop dec sbb pop adc leave lahf mov daa jo dec sub in mov xchg cld mov pushl sub or cwtl add jp adc cmp inc fcompl icebp or push subb ja leave inc pop jg and aad dec jmp popf test sbb in or jnp icebp aam inc adc ljmp shr in add sub cmp sbb lcall pop cmp xor jno stos mov fs push mov in add das scas movsb fsubl addl add test adc mov je es out rcl loopne push xchg xchg inc mov mov push mov aam jo xchg movsb cmp (bad) xchg in or or popa rcrb fadds sub pop dec pop push in pop or push sbb ss mov cmp (bad) lret sbb jns jmp addr16 in (bad) lret imull add or sbb inc rorb and test test adc pusha pop xchg or cmpsb sahf push push flds sbb shlb loope in rorb repz int3 daa push xor pop fs ss inc pop gs jns dec xchg pop or iret and adc add push pushf repnz loop lcall xchg push mov cmpsl mov sbb mov mov dec xor pop xor cmp and dec jp jno dec adc ficom add lds in push mov imul xchg xchg cmp sahf pop mov push pop loope nop pop jo outsb and dec jb xchg jno jae add push lret inc je imul dec xor les aaa jno jo in sbb (bad) xlat mov sub push scas cs pop lea loop mov inc inc (bad) jp (bad) cmc xlat sub push cmc push and (bad) js out fsubrl jns out xchg push rolb xor inc popf push inc or out xchg inc jp js sub pop icebp sub add cmpsl pop push popf mov mov in jb add cwtl dec les (bad) mov (bad) jbe pop jge adc std inc jge popf xlat clc add push cmp jnp popw stos cld push cmp ds leave inc sub (bad) cmpsb out inc call aam lret flds or jp repnz int and (bad) out xchg leave dec sti mov cmp cmp mov xor mov lahf mov clc (bad) mov (bad) cmp pop mov inc add repnz negl mov movsb inc sbb movsl (bad) out hlt es les rcrl or xor aas mov icebp mov cmp sbb dec subl xchg shl popa ss popa leave mov mov cli jne mov outsl rol push add sbb mov or test sbb mov lods inc inc sti fdivs push ss shll and jle push push mov loopne cmpsl xchg push scas mov ret mov lods cs pop or push jl mov cs jmp shll cmp sub add (bad) loope lcall and lds push adc repnz or cld mov mov jb ret fs lcall push popf push fsubr iret sub jg inc in sbb inc sbb jge or int movl mov repz push cs push mov mov call push clc adc sub repz loop into ficomp cmp sub adc cmp out sahf mov mov mov jp jae mov xor jae iret nop leave sbb ss or lret stos cmp inc andb int push jb pop shll popa clts ror pop xor jle and sarb push and leave cmp mov adc cs movsb das int3 int jbe push gs dec mov repz scas xchg loopne jno mov mov mov jmp push or and in (bad) fisub cmpb xor setne int sbb adc test scas pushf xor mov xchg mov xchg inc ret push rol add dec fdivrl mov les lcall jmp js jae adc in xchg outsl adcl icebp aaa fsubr sbbb sub sbb jmp add rcll pop add and popf pusha (bad) pop fmulp in jge xchg inc push outsl mov jmp popf sbb xchg outsl and sub mov push test pop insl mov (bad) push and mov jp pop jnp and pop (bad) (bad) dec insb (bad) and aaa mov shll push test or and add test xor sub jge divb fs and clc sub mov test cld cmp jp aas mov mov push dec lea outsb mov cld push les jle inc (bad) fs pop xlat xchg sahf jge aam icebp in pop cs (bad) jbe shlb inc dec sbb mov bound xchg imul (bad) clc sti lret mov jb out inc loopne push sti dec cmpsl cmp test mov bound (bad) je sbb jp fsubs (bad) mov shrl ret (bad) out js add pop sbb lock jnp cmpsl iret inc push test xchg fist dec sbb add test (bad) xor fs dec outsb adc mov sub ret inc add lea jnp fwait mov addl pop pop push jmp dec aam xlat (bad) test mov inc fiadd loop jmp out fcmove pushf fs push dec mov mov dec sub mov push pop into lock call daa aas add inc jecxz test xor cmp std dec repz pop sub (bad) jo add loop add int dec cmc fild sub pop or xchg cmpsb mov fs (bad) cli push aas and je out into add push sbb mov fisubrl ss repz add rcll sub add cmp test (bad) lock aam jmp mov lods (bad) cmp stos xlat stos in jns pushf or jmp xchg int or inc mov ret xchg fwait fwait lret and int dec cmp aam pop fsubrl dec leave sbb lea fistpll mov xchg and in aam stos fistp adc add int3 sbb pushf popa push xchg sbb dec (bad) int repz or jmp bound or mov or repnz in pusha sbb (bad) in dec sbbl fsubr imul cld mov repz jmp adc test ljmp pop add jae xchg stc pop stos xchg int out xchg and xor dec adc gs sbb cmc inc push iret aas clc and sbb popf sub mov inc lock insl sbb pop xor xor sahf pop xor jle push pop xor aas jle hlt lods mov mov lret dec cli xor sbb push imull loopne cmp sub (bad) frstpm(287 jae ds insb jb lret mov xchg cmp inc hlt (bad) ja (bad) cmovbe pop and sar xchg mov stos leave or mov sbb or pushl inc cli stos xchg mov jmp out test mov mov dec jecxz (bad) sbb adc mov movsl mov aad fild and cli add repz mov mov sbb repnz mov out ljmp jp xor jns jg (bad) or popf and add inc jb lods lret sbb mov scas (bad) int3 xor rcrl clc neg mov cwtl xor push push cmp loope xor sub pop sbb mov or lea insl jle jae sti pop ja addr16 enter scas jecxz fisttpl fimul jno rcll add push fidivr test or pop push stos adc cmpsl inc movsb adc dec (bad) ja xabort out out test cli push pop jmp sbb push fcoml (bad) xor lds mov mov stc stos cmp out popa insl pusha out outsl dec imul out stc jmp jecxz jo mov dec push dec mov pop sbb arpl xorb adc dec push mov inc cmp adcb lret scas adc push pop mov imul mov stc outsl jb and scas push xor clc pusha test cmpsl jmp cmp (bad) xchg movsl fild add jne jle clc int comiss inc mov out dec iret fwait test mov bound xor test sbb icebp data16 js and push sub mov call mov adc lods jecxz mov outsl dec adc (bad) aaa popf ss stc stos loop dec xor imul xor sub divb push or jb push outsb dec jb js loop imul out cmp jns push lret xchg sbb lock pop cwtl sbb sbb jb mov icebp add fcmovb outsb in pop loopne int adc sub stos fildll sub test vmwrite mov rcll fild sub sub adcl out and xchg in lds js call xchg jp sbb test into pop xchg mov cld xchg scas and sbb mov dec in xor xlat xor push (bad) pop mov xor xchg cmp ljmp ljmp adc inc scas add jno lods push movsb imul pop fnstcw aam je pop xchg xor int clc movsl mov pop stc aas adc sub out and mov pop pop lahf sub add dec mov testb jp andb or dec adc lahf jno pop lods xchg sub jecxz push into sahf sbb fcmovb mov int3 je add fs (bad) pop dec loope (bad) and lcall sti jo cvtpi2ps pop je cmc aad and push dec icebp sub sub int addr16 leave dec xchg xchg or roll (bad) push sbb stc out and mov dec add cld dec add pop jae jg and cmpsb cmp (bad) std icebp sbb sarb xor (bad) mov inc and inc push adc (bad) pop jecxz pop je arpl lds add int (bad) xchg mov inc sub cli xchg and das cmp cmpsb ret inc cwtl mov stos jo ja nop mov mov (bad) pop lds or or daa gs sbb in aam imul inc out mov mov mov push (bad) and fwait cmp sub ss aaa js mov cmp pusha and push imul sbb jmp push mov ljmp inc std test inc (bad) cwtl sbb sub (bad) and mov push push push (bad) (bad) xchg mov xchg rclb icebp ss out jo dec imul in jp fsts out xchg pusha xor pop cmpsl add adc inc sti mov mov pop mov mov jno and adc inc pushl rcrl cld mov or pop (bad) lds addr16 mov xor into adc daa pop inc movsb or ds cli (bad) outsb or xchg mov aas (bad) addb sub dec je mov sbb fdivrl inc std sbb adc adc xchg add adc xchg xlat sub and sbb mov (bad) or imul je and cltd ss aam inc stos cmpsb jle lock mov xchg dec and jno add push stos daa hlt test lods test pop sbbl or sbb test fisttpll negb sbb mov jp negl inc jno xchg (bad) fnstenv mov js push (bad) hlt add mov loop popf xchg popa and mov push dec ds mov repz into and cmpsb sub in clc mov dec lods xor enter mov aas xchg mov or xor push xlat inc aaa (bad) (bad) outsb arpl xorl jecxz dec nop pop push mov mov mov fisttpl mulb mov std cmc pop fcomp jp test push stc pop lods pop push push and mov sub nop clc mov add adc mov fs pop test jne cli push clc std push pop sub ds mov sub sarb add das xchg inc jmp or push fst sbb mov jns (bad) mov (bad) enter and stc mov imul loopne int3 dec subb cmpsb sbb cmp inc and pushf jne jp popa xchg js das adc loopne mov daa dec ret mov adc outsl stc mov jbe mov jae jg in les aaa inc push xor test jp xchg xchg jmp mov (bad) ss iret xor or add cmp and mov stos sahf rolb sbb cmp dec mov test rorb test jns les xorl scas sbb push or addr16 add mov inc fstpl sarl pop pop rcll vpsubw cmp out push es cmc and mov loopne jmp mov outsb adc mov movsb addr16 sti dec sbb repnz jmp hlt bound push std sbb std dec cmp daa (bad) mov and mov pop sbb push out sbb cmpsb stc xchg je push jmp cmp inc mov xor adc ja call cs mov call mov rcrl push add aam (bad) aaa loop rorb jecxz fcomp sbb inc fistpll add (bad) in lea xor push test nop dec mov mov (bad) jb mov dec mov ljmp pop outsb imul xor out adc adcl lret jae xor pop or add pop xor insl (bad) push das ret xor stos add xchg inc lock pop cmp pusha movsl ret pop mov cmpl push mov in mov in jle adc pop mov insb cmpsl (bad) call and ffree push cmpsb and jl add test mov lret aas push repz ret pop or movsb push out test aaa test cmp shrl sub jnp test stos jmp lcall (bad) and ret mov add aam mov hlt jo jne cmp ret mov sub arpl sub sub jl rclb hlt test push inc (bad) movsl add cld int3 inc (bad) in adc mov cmp mov loope data16 inc cmp ret push mov push js (bad) push xchg mov pop mov adc sub les lea jp xor mov cmc dec adc dec cltd cli mov out mov xchg inc and movl xor or and push arpl es das mov movsb sub (bad) cmp sbb add dec jo rcrb mov icebp mov mov inc hlt jbe mov (bad) mov fcmovnu pop ret mov sub imul jns dec imul mov pop ss outsb in sub adc aad mov std cmpsl xchg jae inc mov fisttpll cmp or ds push in inc ds xchg fstpt imul aaa mov mov jbe popf scas cmp adc dec mov jb cltd movsb sar js push pop cli cmp data16 or ret dec add and push jmp clc rcrl call outsb in lahf pop cmp mov cmp ds out out sub inc sbb test and inc adc mov outsl in out push dec add js aam mov cli popf mov (bad) (bad) sti cld cmp mov xchg mov popf mov iret jbe xchg push sub mov dec outsl or loop bound cmpsb dec jb add xor mov inc xchg test sub push cli nop mov and dec push mov ret lods push mov (bad) jbe pop mov xchg loopne dec jnp clc std cmp out or xchg repnz pop xor aad icebp sarb dec sbb push mov call add mov sub (bad) (bad) mov add imul adc repz test push mov sbb shlb pop xchg sbb xor mov repnz pop imul inc cld adc jecxz pop je jae sub inc nop push push loope mov sbb int3 cmp jge sub dec sbb inc add loopne icebp (bad) xor outsb ffreep dec push daa iret (bad) lock jecxz sahf and scas aaa aaa add mov leave jb sbb add mov aaa (bad) cmpsl ret arpl mov mov loopne ret cmpsb mov aam ret cmc test pusha test divb pop sbb jne and adc or push inc in or lahf pop mov adc sti dec je sbb sub out xchg xor and (bad) pop cmp and lea pop sub mov dec pop imul jge xchg ds and and mov xor iret shll inc insb mov les loop aam xchg sub jp mov pmuludq cli dec cmp lods insb in add sub fiadd insl fstpl mov out scas adc jnp,pn push jno add cwtl int3 xlat dec xchg daa aam cmp lret lock ds mov fcoms xor mov push int mov xchg adc cwtl imul push mov jne and xchg push cli pop les call cs sub jge (bad) ljmp inc xchg mov sub sahf movsl push jl (bad) mov arpl in xor xchg sub ja and test fwait mov and mov pop cmpl sbb ljmp (bad) or pop or cwtl push (bad) fabs xor (bad) xor das and xchg ret cmpsl push (bad) or test inc iret movsl imul into sub imul cltd push sti push push (bad) hlt cmp sbb lods add jle hlt cmp cmc imul add pop mov xchg fsubs movsl xchg mov mov mov out jne add jns jb mov pushf fisttpl inc xor or jne decb mov xchg imul mov hlt div xor imul (bad) pop adc sub xchg inc fdivl stos sub add out decb mov shll mov xchg jle addl xchg xor dec xchg and out cmpb lods rcr or sbb mov push mov call aam gs cmpsb push lret xchg and cmp pop repnz xchg sbb test sarb pop jp push in fildll push inc mov pop jmp dec mov jno ljmp pop mov pushf mov hlt pusha mov inc pop inc mov arpl xor cmp clc mov movsb sub popa jge stc (bad) cli inc rcll ret sub and or lahf push cvtps2pd jl pop ljmp sub or pop push fsubrp mov cmp in cmpsb cmc subl fisttpll xor push ja es or xor add jg jp je sub adc cltd push shll loop mov repnz mov xchg sbb mov jecxz cmp test sbb add dec push (bad) mov xor or pop and mov in mov inc sub adc mov push sbb dec lods mov jnp or push pop mov jg sbb xlat test jno add and pushl movsl xchg mov push gs inc jo mov pop xchg sbb add sbbl faddl sub add orl jcxz lahf rcr add jno divl movsl int3 test int mov js (bad) fistl xchg fwait leave (bad) icebp push inc orl jae mov inc bound out dec outsb loope inc push dec fcompl mov cmp lret call dec je (bad) dec insb cs inc aaa inc adc xor and aaa in ret cmp ss mov insl fsubrp scas cmpb nop cld and notl jp lods sub popa jp popa out repz mov or scas std in add sbb or lret (bad) cmp notb aaa mov mov das xchg push movsl ljmp xor cmp xor les aad push faddl sarb das sub xchg outsl out in or int xor iret leave into mov iret aam iret daa mov and sub (bad) xor mov mov int3 std cli subl xchg inc mov push adc imulb lods xor test cmpsl scas cmp dec mov jge movl les jecxz xlat hlt cwtl sarl jmp fadds mov inc xor aam inc jle lidtl mov sbbl ljmp call ss jb or fxch jecxz fwait pop pop dec ret neg hlt mov imulb jns movb mov sub sbb push cmp xchg ljmp dec insb lea pusha sbb mov les or shl sub mov sub bound test in and repz out lret lcall xor loop and jno jmp mov add insb divb xchg int3 inc cmp jb inc inc ret (bad) xchg lock ss dec inc leave dec fdivl gs inc inc adc daa into std mov lret dec mov sub hlt cld xchg sub sub ret scas cltd jne jno xchg mov inc lods movsb mov (bad) jns add sub add and dec insl jg cmp jae mov or scas sub pop and (bad) jmp sub mov jp rorl (bad) and xchg adc jle mov flds and add repz xchg movsb add sbb ja add add iret popa les cmp mov lcall mov mov jge sub out addr16 lcall jle jl dec popf inc jecxz jmp push add xchg lds in nop into pop sbb out stc sbb in scas mov sbb into mov jmp push out cmpsl mov jae inc xor enter call imul sub mov fnstenv rcrb fwait leave jb mov push and imul mov imul or or stc cmp je ds (bad) imul mov add imul addb cs cmp idiv adc fisttpl (bad) int push mov inc and and sti scas mov adc or mov pusha iret (bad) in jmp pusha mov add push rcrb inc dec fstl inc fldenv adc (bad) mov sbb lret fcoml dec adc sbbl hlt xor les push xchg stos push adc int loopne jecxz adc jecxz lock cmpsb data16 mov inc inc icebp pop sub sub movsl mov xor test aas (bad) lea xor cltd mov xchg push dec pushf push out popf add xchg or clc mov adc inc (bad) xor xchg jmp mov outsl jbe mov adc stos aam (bad) out xchg outsb push ret dec les iret addr16 imul (bad) sbb or mov subb cmp insl lea out sbb fwait loop data16 outsl mov in cltd inc lea sub jp enter out (bad) jmp add daa ljmp pop add push stc aas pop (bad) mov pop mov fstpt arpl aam ficompl or insl mov jmp push push and icebp sub and lea ret out adc mov mov cld (bad) dec and push pop (bad) int3 lods push sbb inc push mov outsl jl pop mov shrb test insl (bad) jbe les adc jns stos popf or js cs adc out ret shl jecxz xor adc cld imul jns mov sub fs adc push adc (bad) out sbb movb fwait push pop cwtl in mov ret jle addr16 ds push (bad) sub push jns jb jle cmpsb ss cmp mov stc hlt test (bad) loope mov pop pop fsubrp pop push jmp bound fild pop fnop pop mov xorl cmp mov ret ja cmp fs outsl int3 icebp stos sbb push int push jl lods in push fimull push pop cmp sub ror jns fs xchg outsl mov repnz and fdivl cmpl movsb stc sar flds pop jg xor and mov xchg xchg test popf add or (bad) test repnz cmp aad or dec sahf jns outsl test test dec int3 add cmovno pop mov dec repnz in aas arpl jo orl sbb xlat lods or push cmpsl mov out into add jne jmp notl mov in mov mov in add pop and sbb adc mov push push push lahf test dec xchg dec aas pextrw dec in push and sbbb cmp leave cld and lea outsb (bad) in xlat test cmpsb pop ss pop or lret xor lea gs std pop xchg inc add insl jb push aaa mov scas cld and cmp data16 add jo dec (bad) sub fsubp (bad) push (bad) mov test xchg pop or xor in xchg or movsb xchg push mov loop daa icebp pop movsb cmc xor out cld icebp cld or add push pushl mov sti and andl mov icebp adc cmp cmpsl fs fildll (bad) cmc (bad) jne enter mov fpatan dec test les ja push ljmp popf dec js enter sahf sbb or ljmp add mov hlt rcl or loop jbe jl ss repnz aas sbb lds mov sbb test sbb dec sahf adc xchg push fidivr jb inc mov mov xor inc addr16 jge outsb in and (bad) mov roll adc inc scas (bad) mov call push mov loopne in jecxz dec sahf lret and hlt sub int cmp popa insl xor (bad) or mov mov gs cli ret sbb out xor stc or jno push out mov and push popf mov sub outsl stc lret into fwait dec push cmp es dec or mov cli xlat dec sub movsb test seta out aam mov fmuls xor inc (bad) lock scas outsb jns push cmp jmp out mov jecxz in sub subb hlt lcall popl push xchg inc loop xchg in sti test out push sub lret pop jae fmuls fsubr jle fcoml cli add sub and add push pop fist mov nop jae clc (bad) nop fstpt ffree cmpsb push das loopne ret or dec sbb popa clc rcll mov das lods fsqrt jmp dec xchg daa jmp mov dec sub sub aas pop out push dec pop rcrb adc pop dec mov scas in out loop addr16 insl arpl jb (bad) mov lret das and pop data16 daa (bad) sbb fstpl push add xor lods ret les dec lea sub fistpll jmp xor inc (bad) mov notl out mov pushf or in push in and ss lds add aas inc outsb xchg jmp cmp loop ret push fidivr int3 pop or jae aas sti test xor xchg bound xchg addr16 mov add outsl add add (bad) inc outsb ss fadds adc sub inc xor sbb cmpsl jne cmc test les mov sbb js jecxz mov cmpsb mov cmpsl sbb jmp mov test xor mov movsl sub fwait pop xor stos sub add sbb mov aas mov aas enter mov pushl lods xlat out ds popa je into sub iret enter pop test mov mov mov insl insb test jp (bad) mov test inc add mov inc and dec jecxz or xor push orl cltd arpl add bound and pushl idiv and sbb push jge loop jbe rcll movsl or lret adc mov sub mov popw inc icebp fsub shlb mov popl shrb loope mov sub lahf insl or shlb mov mov popf push add stos sarl cmp jno pushf or repnz adc mov cld movl inc adc mov mov int3 jnp aam inc jle fst ljmp fbstp int3 dec stos mov pop pop pop mov push xorl leave stos dec psadbw push mov inc int3 imul arpl (bad) ja ficoml dec outsb icebp outsb jb mov stos sbb mov mov loop pop and push pop inc cmp mov sbb jl push mov and mov stos cmp mov (bad) into (bad) jno sub and fisttpll aas sub es fsubp jb add mov mov test fdivrl mov inc frstor imul insb outsl cmp cmpsb jo cmp xchg ret adc inc in cmp jb aas adc xchg adc inc inc jns jnp sahf mov xchg jno xlat imul jmp jno imul sti xchg fistpl loopne pop fs in cmp inc insb mov push movsl out sub xor (bad) loope rolb push jno das push imul cmpsl (bad) psubsb in pop pop (bad) cwtl dec and lock adc mov mov inc and sbb pop mov jp out adc inc std clc push test inc fcmovb lcall xor jmp mov repnz pop cld jb push xor push (bad) cmp xor cld xchg sbb and sahf jb pop ljmp leave icebp xor fcomip mov loop mov sahf outsl std insl jne das xchg xchg out mov inc pop mov les jnp lods adc jnp jo mov scas stos icebp (bad) out and and and sbb idiv xchg pusha jg or dec fldenv out fdivrl cvtpi2ps dec fistp mov pop into aaa push fcomps cltd mov xchg in negl hlt insl push lea sbb xor mov idiv sbb sbb cmp mov pop jae dec add mov shlb in out push js mov arpl cmp xor jmp ja test mov daa fwait fwait jne adc add lahf popl adc add jmp xor sahf add mov (bad) outsl iret mov jecxz cmp int3 pop ret push and sahf xor push call sub cli xchg xchg sahf pop inc insl loop jne loope lods pop (bad) push insl push lcall gs jg or mulb and add mov cld lret jno mov sbb inc lret jno cmp iret lahf inc mov stos rcl testb rcll popf in std scas fbstp insb xchg pop cmc mov icebp stos sar inc gs mov adc ret cmpl cmpsl cmp inc adc adc jge stos cmp mov es dec push enter jp sbb jle jp aaa cwtl call sbb and repz jo add mov add xor out lret pop dec pop clc imul jp inc hlt push scas push stos popa ret mov lahf mov daa sub pushf mov sahf mov or sbb jnp add fdiv stc aad push sbb dec data16 mov ret push loop loope mov stc push jne cmp ljmp (bad) out sub dec bnd jae or repnz imul cmp jne scas push xor mov popf into pop xchg cmp jp lcall imul orb in fisubl test stos inc lds in push cltd push lods pcmpeqd ljmp int3 or or rcrb sbb mov (bad) pop or jmp call push pop jmp (bad) stc popa jp (bad) or cmpl mov xor inc bound mov in ljmp dec push push xchg sbb sub mov imul jl and (bad) movsl repz stos jmp aad lods mov dec cmp add insl cmp call fstpl xchg rcrl dec mov push (bad) cmp (bad) lret xchg sub sub fnsave loop pusha es adc cmpsl ss (bad) rorb nop in mov mov jb popa add adc es mov inc stos (bad) xchg sarb mov das ret add mov and xchg sahf jbe pop add imul outsb lret mov xor and mov mov scas gs inc pop xor or insl sbb mov js jns jp mov xchg out scas aas xlat rcrb jbe xor add popa or cmpsl mov mov jmp xchg or movsb jecxz js or repnz add icebp inc out adc addr16 mov and nop mov mov sub movsl pusha jnp sbb sub pop out (bad) stos imul sub pop dec or int cwtl dec xchg jmp rol mov ret mov mov test nop push and lret out fistpll add adc ficomp cltd sti push mov fbstp jnp pop mov mov pop dec sbb mov dec stc mov jne addl jb and add (bad) sub cli mov mov popa and shrb cmp gs stc jle mov xchg dec xchg sub cmp mov pop push xchg sahf in sti sub rcrb outsl sbb mov adc dec jmp out movsb jmp aas push sbb mov (bad) jne xchg mov imul or sbb shll pop mov rolb adc mov daa and dec mov adc aas pop stc (bad) bound push push out push xchg ljmp adc mov push rorb push jbe mov push pop loopne dec movsb push xor jp cmpsb xor mov xchg xchg jno inc test (bad) jns mov out inc (bad) imul sbb ja rclb push xchg icebp addr16 subl pop inc dec xchg and push pop mov mov cmp cmpsb jae push mov sti push mov std (bad) leave imul scas int3 loopne pop sub xor sbb cmc stos pop or es or mov (bad) aaa xor jecxz or and push cmpsl mov out sbb sbb add pop xor adc sub cmc pop popa sub cmp mov das push rep gs adc fs adc lcall or xchg dec adc sub mov sub cmp mov add push dec pusha xchg or ficoml lahf mov jg mov pop (bad) inc inc add sti cmc imul dec (bad) insb lcall ss scas (bad) iret out xor shr sete jno hlt mov mov adc dec out pusha jmp cs iret xor lods (bad) xor xor hlt std and (bad) jge mov gs loop rolb fs fisttpll mov push dec movsb ret int and std sahf jae push dec adc fxch xchg (bad) mov rcrb inc xchg mov and inc mov inc test inc and pop mov jnp adc pop push (bad) cmp push xchg pushf cmpsl ljmp sbb mov jp push mov mov leave lds or js fwait icebp ret inc xchg or rorb jmp dec js cltd sub dec dec mov test jbe cmp test int3 jecxz loop dec cmc xchg ss aam pop pop sub jnp xor in cs xlat add add jb out push mov loope pop into movsl in mov imul mov les negl dec jecxz bound xchg cltd pop mov bound popf or lock clc lcall mov pop fcomp mov sbb in sahf xor mov jno mov dec aas into aam out xorl (bad) lcall or pop xchg add ret jae lret (bad) pop cmp and (bad) or insl fstl es jl mov (bad) sahf mov jo sub call dec popa cld add jmp pushf bnd imul dec xlat cmp mov sbbl insb add in inc mov jmp xor mov push xor mov jns jne xor sub inc in insl es adc (bad) daa das lret xor mov cmpsb sbb das nop dec jecxz das dec and imul in sbb insl sub mov in adc add jbe cs dec ljmp inc inc push ds inc mov mov add jns (bad) sub outsl (bad) mov gs fmul ss movsb shrl push repnz inc fldcw cltd sahf sbb fcomip test push jecxz xor fisubr mov xor pop scas lock dec dec iret adcl push mov pop mov adcl out test pushf xchg imul stos rolb add jo sbb sub adc push lods sahf push add mov cmpsl pop jmp adc jb jge ss rcl stc xchg pop sub mov pop pop repnz outsb mov enter pop cmpsb mov into aaa xchg push and push inc cmc imul outsl inc xor shrb xchg je,pn mov jo imul popa jg les pop mov xchg test push mov fcmovb add or mov call jns add mov (bad) cld loopne daa or xor add xchg jg push mov jle sbb in jnp lcall and inc push pop fcomip out int3 sub xlat xor pop scas stc arpl jnp mov adc adcb pusha scas jle mov inc or cmpsb jno push outsb scas jmp xchg popf dec mov sub or fiadd outsl das loop,pt hlt cmp daa icebp add shr je in cmp cld stos or movsl (bad) jbe out sub data16 loope out jns (bad) mov adc lods scas mov (bad) add adc mov repnz jge pop mov fnstcw mov or and pop ljmp cmp jns (bad) lret sub stc popf mov dec cmp (bad) xor cmp push out loop out sub xchg fwait shrb xor ret inc (bad) xor lcall fmulp mov loop movsl mov les vpsubq call mov push mov sbb shrb jo inc fdivl test cwtl jg adc mov int loope aam sbb jecxz or mov icebp sbb es (bad) mov lea int3 xor inc out sub and push (bad) aas je movsb lret sub mov mov dec push insb adc iret aas insl push mov sti scas dec lea xor call insb add pop push jmp std stos (bad) cli mov adc jge (bad) add and mov mov rorl sbb mov lea add inc jg mov shrb mov cmp cmpsl test fistpl mov cli insl cmp jmp jbe outsl mov inc int3 xchg fstl cli test popf mov hlt sbb lret repnz push rclb iret pop mov mov pop push neg les jp mov std dec inc pop imul lds mov jo cmp repz adc mov push or xchg call popa notl pusha sub je push mov adc les jnp incl decl cmp lods and sti inc imul and pop mov loope cmp scas cmpsl xorl rorl or add aas icebp lock dec dec ficoml pop int3 mov ret inc in cli push push inc and test add pop xor lret xchg or lret adc clc sbb inc mov addr16 dec movb outsb lcall push ret mov testl push xor hlt ljmp mov add (bad) pushf shl and push data16 cmp xchg sbb jecxz jg sbb stos mov or data16 ds sbb mov cli mov sbb mov sbb dec cmp mov and or lds pop movsl pop adc jno and clc xchg inc outsl jbe (bad) mov inc mov cmp jp pop in jo loop xor cmp inc faddl insl adc addr16 cmpsb jb push mov mov jbe add or lret and stos sbb es or fsts pop add inc or inc and xchg das jb xor inc and jp mov adc cltd push xchg insb imul in dec icebp out mov and adc imul or movsl mov movsl scas add (bad) or adc sarl mov adc adc or rcl fisttpl xchg dec sub cmpsb or rcr cmp test repnz adc inc and pop scas lock rorb dec cltd je jge pop sub aad fstpt jno or xor jno jle xchg xor xchg les xor jo (bad) out xchg in lods lods sbbl div loop fwait aas cmpsb repz mov sbb inc mov cmp cltd movsb iret lcall mov loopne jae (bad) iret add add adc mov fs mov shrb or es daa and lahf shl es inc fidivl das loope fdivrl sbb mov daa iret cmp mov xchg cli push (bad) or gs adc loopne mov cltd into pusha pop jl cwtl sarb dec mov hlt das dec adc fisttpl or lds dec or lock jno inc mov push outsb mov enter mov fidivrl dec mov or (bad) loope xor pop mov pop rorb jns test (bad) mov cmpb adc shrb leave ret or in repz lock movsb test xor loop cwtl frstor inc (bad) (bad) je mov add sub shll clc fsubrl pop sbb push lock push subl pop xchg test pop and add dec xchg pusha sbb mov xchg push inc push xchg xchg es subb fucomp and into adc jnp jns xchg in iret test jb jne cmp je stos jne out pusha dec outsb xchg mov inc out sbb fcoms aam xchg sti pop mov push pop mov lods adc mov leave int3 mov lcall xor fisttpl rcl cli nop cld jle stos inc mov jae jge stos or sub mov pop nop iret fwait lods dec rcrb inc xchg pop sub out in pop mov or jns adc daa ret cs mov mov jb lods xchg sub loop fcomps push insb mov mov pop int andl stos xchg cmpl sub or shrl ja mov pop mov popa pop push push mov xor adc in sahf repnz fcomps cmp mov inc mov or popa mov imul movsb inc xchg sub imul jno lds mov inc mov jns cmp jne xchg repnz mov xchg das jle push mov clc xchg imul cmp aad cltd popf cmpsb dec insl daa mov and test aaa mov mov mov mov loopne inc out or push push pop mov call push xor clc sahf incb jmp (bad) mov ja out xchg push and jbe,pn idivb and mov inc sub xchg loopne push sub mov idivl mov lock arpl xor or pop mov add mulb mov xchg fistpl lret adc sub sub pop cmpsb fisttpll jbe movsl mov out xor mov jge xor lcall push (bad) push pop out insl push pop xchg mov or call js fcmovbe in and add and adc pop popa jbe cmp int dec and (bad) or mov jle lods cmpsl dec lret and fs leave out sbb stos aad cs inc int movsb xlat int sub (bad) mov sbb in push ret mov mull dec sub add stc dec out mov imul mov pop imul les hlt jg cwtl jo arpl sub leave popa notl xchg jne xchg aad jo faddl imul pop mov into sub mov xlat (bad) int3 (bad) popfw jo mov fisubrl push or int push rcr adc add je (bad) aam or mov dec jns pop test test and inc test cwtl xchg add xchg nop outsl das dec mov xchg aam je cmp cs loope jecxz out jg and xor je push inc pop out push mov idivl jecxz (bad) and inc cli mov sbb aam hlt xchg mov push jns dec pop or or in std fmull fsubp std and or bound jmp cmp lods xchg jne js cld fstpl roll in (bad) notb in cwtl out sub cld mov mov inc add and jle push test add ret push mov or nop arpl lds test lret cld imul pop cmp and xlat test cmp test cmp sub daa fldcw and jg pop xchg outsl push inc repnz cmc cli sbb leave sti mov or lock xchg add xchg rorb sahf add lret jl mov cmpsb mov pop mov mov mov (bad) popa imul mov pop and rorb out outsl loop adc xchg mov jmp mov sbb bound out les ja mov insl and mov sbbl fld inc sub dec mov leave xor addr16 xor stos pop imul mov and mov xor (bad) scas pop pushf xor mov negb jno out mov jle push pop inc dec mov xor xor lcall cmp sti out out cmp leave loopne pop jmp loop gs dec out aaa (bad) jmp shll mov cs jno stc sub insl bnd mov jmp iret lcall jmp fnop dec jne dec cmp inc mov or insb nop and fsubrs xor mov lock in push mov add pop jg inc jp stos lret jg aaa pushf cmc std insl xchg scas jecxz imul loopne js or call mov test data16 add in lods xor jecxz test jmp (bad) ljmp sbb sbb stos arpl shlb shll loop mov in push or push out mov push and xchg inc sbb inc nop mov mov (bad) mov sbb push jmp std xchg lret iret ljmp xchg int3 aad mov lods adc dec jno movsl ret lea ds xor ret jmp mov mov pop mov fdivr lret jmp std cli push push popf mov bound jl pop sbb in imul dec and addl jo jl jb and xchg mov cvtdq2ps aaa dec sbb inc mov es pop (bad) (bad) mov (bad) iret cwtl jnp lods jecxz xor das repnz lds push rclb lds stc addr16 or mov push sub adc sahf and std xor ljmp xchg aas popf jnp pop or push adc cmp mov sbb jae adc mov ret scas (bad) and and mov xchg cmpsl sub (bad) imul push mov aad js mov and inc adc jnp cmp repz mov (bad) hlt inc mov mov mov sub xlat call loope pop icebp cmp pop dec inc add mov dec call out movsl lcall mov jbe sub dec xchg int or mov mov stos sub repz out test adc sub stc pop (bad) or jne sbb fistl jns mov push hlt test jl lock push push adc fwait lds inc fstpt fcoms cs sub xchg sti mov leave mov cltd insl sub mov cmpsl dec dec js (bad) insl cmp ret lock jae pop lahf pandn imul movsl lds pop pop (bad) xchg outsl inc sti xor arpl jge int3 xadd fmull push in popl cmp imul pusha ss sahf sub les sub fild mov (bad) imul enter lcall adc push imul lea sbb outsl aaa popa jno xor ljmp mov jb or ds mov pop lret out mov iret sbb (bad) sbbb in addr16 fldcw insl icebp xor loope lahf mov jg stos cmp xor xor test and jmp mov inc push jp hlt ret add adc icebp jmp add push mov outsl int push and movsb sahf jp inc repz outsl cli or jbe or add add pop mov xor (bad) std cmp adc icebp ss (bad) testb push pop stos pop sub (bad) inc mov adc add sbb dec cmp fiaddl ljmp mov lods scas insb pop lret fldenv call xchg loope popf out mov push push test lahf ds mov mov pop clc or out addr16 mov test out fnstcw shlb in mov insb push sbb pop rorl pop fsubr stos or or cmp (bad) outsl cmpl and push adc sarb pop and scas push fnsave adc xchg nop fwait in in and adc sbb cli adc xor fldcw and jl stc pushf jp scas icebp xchg bound inc ret data16 sub outsb ret insl test loopne fs or out dec enter xchg sub xchg jns and cmp subl rcrl sub repnz dec xchg test pop daa mov xor lret mov ds cmp cmp pop sti in jne jbe enter ret mov xchg mov cld sub fcompl adc dec sub and xchg mov push xchg insl dec xchg mov dec or sub mov cltd push xor mov ficompl insl aam pop push jbe pop (bad) mulb and xor in jne ret shll pop insl mov imul stc test out les insl int clc jle mov inc ficom mov xlat cwtl aaa je push into (bad) std push sbb in mov add loopne mov jmp jne jo ret loopne add and jge push lea pop add or lds pop dec movsb mov movsl push imul loop gs push push dec mov outsb test add xchg adc jns xor (bad) push fsubs jo or je popa mov push icebp (bad) call mov adc xor dec rorb test test ret lcall fdivrp in sub fimul jl (bad) cmp mov jmp popa push push sarl loope mov call ja inc adc nop js jecxz and ja scas mov and orl out aad sbb aaa scas aaa sub iret nop jecxz sahf push pop iret les inc mov dec movsl dec xchg lods ret adc cwtl or mov or inc in sbb cltd sub cld jge mov cmp pop cmpsb or sbb fstpl or xchg cltd cmpsb jge clc call jge sub addr16 in popa inc sti adc iret mov leave cmpsl inc shll and stc mov out mov fisubl pusha cmp mov fldl xor mov (bad) arpl imull push mov mov hlt sub add dec in (bad) lods std dec or push add mov cmp aam dec and enter shl jmp loope jecxz or (bad) lret xchg adc bound mov ror rcl mov push sub cwtl push or mov jecxz inc adc jns xchg bound pop xor cmp (bad) mov cmpb jne lea clc insl cld pop out pusha mov cwtl in mov (bad) into pop xchg lret push cld jo pop frstor ljmp pop cltd xlat cmp push aam or jecxz push clc icebp orl push mov xchg push push jne test rolb imull ljmp sbb (bad) negb sub cltd testb test jo jecxz sbb sub divb lds popf xor push and lods cmpsb jns xlat pop icebp mov xchg lods add ljmp pop cld cltd imul adc jno lds jg jb leave test mov mov push mov mov and mov xchg imul loopne cmpsb or andl lds mov shlb mov jnp popf mov std xor and ja ret aas mov jecxz aad push pop scas push adc in in dec in stos pop mov xor cwtl inc out aam jle mov push in sbb or push jno pop mov shl cmpsl mov sub jne jo cmpsl cmp outsb adc sbb push xchg push inc and imul lods dec sub jp sbb fstpt xlat cmp sbb cmpsb pop sub divb not xor xor cmp (bad) repnz mov lods out shll push hlt cmpsb xor adc js ficomp mov cs or and in enter xor add into ss shll stos std popf pop dec cmp push mov pop jae jmp push (bad) es mov dec xor bound repnz insl loope push test push and xor add xchg and fstps adc cmp push and cmp cld lahf push push inc aad js cmp jmp pop xchg rcr mov out (bad) pop pop jnp push sub sti test lahf dec orb ljmp sbb fucomi in jae into je mov dec cmc xchg adc inc xor push pop dec gs cwtl out sub xchg insb xchg xchg mulb fs fcomps into mov (bad) bound adcl rcrb pop jge pop fistl cmp add pop mov sub test jne and insl push out mov lds and mov in pop mov add xlat arpl sub pop xchg and mov mov insl pop pop dec mov (bad) sahf int (bad) lahf or xchg aaa mov insl or cwtl xor rcrb sahf or xor pop in xchg push xchg xchg std cmpsb push in xor loop pushf fisttp jo imul mov icebp ds pop sbb insl sub pop pop sbb inc push add mov das xor dec iret loopne (bad) rorb lret std inc faddl jbe outsb cmp mov push (bad) iretw aaa fwait imul cmp sahf sahf repnz inc sbb lret or addr16 (bad) jg sbb mov inc cmp (bad) xlat cmpl xchg pop aam stc jmp rclb pop fdivs (bad) out push jecxz add dec pop or dec in push mov fbstp arpl popf or add mov iret mov stos mov stc outsl add mov mov mov and pop pushf js cs xor dec out pop pop fisubrl push fistp inc inc add popl dec xchg nop stos xchg insl pushf mov out dec inc das in insb sbb cmpsb push cmp mov pop (bad) aas pop and push mov dec lcall mov mov nop andl add (bad) repnz mov cmpsl dec inc adc cli imul repnz int3 sub and out cmp adc aas and (bad) fs dec bound lods cmc pop imulb add and scas into daa pop lock addl mov movsl scas xchg mov adc sub adc dec or dec arpl sbb dec popa mov sub jp and pop cmp gs std xor into popl mov rolb nop lea test mov mov fcmovne xchg mov fldcw mov dec enter mov mov jns sbb pop xor pop sub gs sub cmp into sub pop nop popa mov jb push dec push out sbb sbb rorb (bad) test adc pop xlat push loop jg pop push lds mov and in mov popa stc das xchg bswap (bad) in fstpt xor fisubrl pop mov repnz pushf mov movsl add mov xchg icebp (bad) fldcw push data16 nop mov inc pop push test jge ds sub mov mov lods pop movsb mov test jecxz mov xlat sub or negb xor jge arpl pusha imul mov repz mov jmp (bad) fwait mov test jno adc push push add lret sub fwait in pop xor dec (bad) dec dec jns cwtl adc out fadd jb dec movsl pushf adc aam sub les jmp jge sub push in pop mov sub push shrb ds (bad) mov lret jae ret test sbb shrl dec or fisubr or xor out mov in mov (bad) call aaa xlat int3 pop repz and dec jnp cmpl mov xor sbb xchg inc mov sub cmp notb pop popf aaa add insb nop xchg mov sub push mov push (bad) or sub (bad) xchg jmp xor or jl adc aas (bad) fsubr mov mov add arpl mov sbb fld push or stos out xorl push and or pop mov mov mov jp lods pop inc fisub adc iret mull sbb (bad) jl push je int3 and inc jge outsb xor je fdecstp loope clc add fsubrp hlt loopne xchg fldl jb aam int3 int add xchg sarb out mov push loopne lahf ss icebp pop and stc mull (bad) mov ret in imul sbb inc gs and jle push in xchg dec push pop xor hlt pop ret iret aaa and push xchg pop stc out mov cmpsb rcrb (bad) jns out leave call es nop orl pop ret push cmpb mov adc repz sub or int3 xchg xor sbb cmp (bad) pop or sub js pop insb pop xchg sub hlt fs adc dec mov pop and jl mov les and test popf sbb hlt lods sub lods xchg add ja stos lahf mov sbb sub (bad) mov or fsubrl je repnz dec fcompl lret sbb addr16 mov das addl scas in xorb scas test les xchg dec xchg sbb or inc and and rol and scas iret xchg aam cmp push in (bad) push rcll xor pop pop subl fwait je add and mov loope ljmp pop iret pop cld add xchg ficom es loopne out sbb cmc or push mov ds aas and daa add das xor aas clc push dec pushw punpckhwd adc leave sahf xor call or xor mov sarl mov enter (bad) push mov or ja mov (bad) fs test adc mov xor push daa mov cmp ret mov inc dec inc mov iret test pop out push outsl sub mov or (bad) mov sbb mov jns lret inc gs sbb fmuls cmp and adc imul sbbl std and sub testl mov add negl fbstp loopne mov shrl js inc pop sbbl inc jae lcall rcl and mov in sbb in loop mov push mov cwtl lahf dec les ret xchg adc ja out cmp adc pop adc and (bad) fdiv sub mov loop out pushl pop xor fisubr stos xchg add or arpl outsl faddl shrl mov das mov xorl inc pop fiaddl jg (bad) jmp xor lods xor push adc push push (bad) mov std mov idiv inc add fdivrs in or pushf jmp sub fwait enter out xor mov inc mov dec jmp lds aad outsl jp pop or mov mov cmpb out jnp and inc cmp mov insl test mov stos mov lea sbbb ss add jo fistpll (bad) ss inc jl out inc hlt hlt dec test jp popa dec mov push scas push cmp xorl mov mov mov lds dec inc push clc (bad) sub imul movsl lahf inc pop dec sub xchg pop dec jne xor mov fimull mov xchg sbb or in cmp inc and scas pop inc add fs movsb and mov out jp rorl add lcall imul and and push push js aad adc adc movsb dec fistpll jae adc xchg push jne sub (bad) jp lods add (bad) jo dec data16 sbb ja mov int pusha in dec scas out add mov push mov dec xlat mov cmpsb ret push lea cmp rorb cmc clc lea push and (bad) pop mov int3 sbb jne ret jl jmp loop test add imul scas xchg jb push sub aad mov fidivl mov aas mov or jns repnz das out mov imul loope xchg test (bad) fld iret cld lcall or (bad) mov adc cmp push les mov aad jne inc test mov pcmpeqb into lahf mov and leave adc or dec sarb repnz mov lcall mov mov popf int or lahf lret adc es add and js stc cmpsb sahf in es push or je mov cld xchg adc mov or fbld roll rcrl cmpsl cli gs fst push sub sbb sub and data16 adc iret or mov fist loopne pop jae into lds mov pop push cmpl lcall popa je std dec dec jg je ret push pop cltd fsubrs and in insl cmpsl ds adc out xor xor jne mov lea cwtl insl inc (bad) fidivrl (bad) stc jns sahf dec loopne out push pop in enter adc std dec sub int fcompl pop sarb xor call imul and lods xchg push loope jge dec aas mov outsl (bad) loop push xor mov nop aad test mov popf hlt mov roll iret xor dec or ret inc sbb adc adcl adc and fbld aam ret xchg insb xlat outsl testl outsl xchg bound jg cmp xchg rorl fstpt mov sbb aaa cmpsb enter fistpl leave inc aas test push adc push jge pop add in loope in es rolb repnz dec hlt cmp (bad) nop mov aam out imulb jge sbb push std bound xchg jle dec mov sub or aas mov mov enter test fs lods dec ljmp fisttpl lret stc xchg lock fcoml sub lcall pop mov pushf dec xor xchg movsb js movsb mov mov rcrb movb xor addb loopne fbld clc fnop xor sub int3 xor cli cmc xor xor fistpll lahf aas (bad) jmp push pop mov jns (bad) es ja test scas sbb rclb mov sti jp xchg cmp lock add jp jmp cmp adc pop cmp std mov lea (bad) aaa test jle movsb rorb lahf jecxz jle cmp jnp push call adc or sbb mov aas adc nop pushf fidivrl in pop pop push adc (bad) in popf lea insb (bad) fcoms call addl push mov or push xor inc bound nop sbb xchg mov loopne or add stc pop aad dec jg sub inc loopne ret push sbb cltd cmp mov xchg cli xchg and ret jmp cwtl fnstenv or int cld pop jle mov xor sub aas jno jecxz aam sbb xor scas cmp mov into xor orb adc mov jnp inc xor cmp pop mov (bad) or push push mov stc push inc xor sti negl mov in xor xchg lds fisubr cmp test popf int3 sbb outsl daa xchg adc stos jle jns rcl sbb hlt gs cwtl ficom push xchg xor dec sbb fwait xchg (bad) in xlat jbe loope mov je repz ret push and out mov xchg or aad inc out inc aam das pop fstps fwait xor sub lds pop imul or add or popf lods gs call jl cltd dec out cmp lcall call imul or sbbb fnstcw sbb mov adc sahf jp out push icebp inc push shrl int push xchg dec sbb (bad) das test stc rcrb pop jb mov and addr16 cs adc mov rorb jo xor jne xchg aaa std daa fidiv cwtl xorl mov adc jne repz push pop xor inc aas ja add icebp inc ret pop sub inc mov aaa mov aaa (bad) negl xor leave add pusha pop fdivrs xor daa cwtl cld scas test out mov repz xor or adc inc (bad) pop pop mov or add sbb dec xchg pusha jno and push imul mov outsb incl or sahf decl out scas dec jle push adc pop rcll xchg imul shrl inc sub push ret test fidivr popa sbb mov fcomps les ds xchg call and clc aam sbb fbstp add sub mov xchg clc pop ja test sbb xor fsubs xchg mov test add mov cmp out sbb std mov addr16 out sbb xchg sub sbb sub dec sahf mov pop mov and mov or adc hlt aas pop or adc or scas jb je ret pop jge inc aad or aaa lods fcomps mov pop pop inc sbb xchg jle pop cmp sti test rcl int3 repnz (bad) dec loopne shrb pop int3 (bad) out outsb xor (bad) dec std leave cld insb cmp push jns cmp lds add scas movsl and dec pop mov mov (bad) mov ljmp sti xor dec cs sbb in jmp std inc cs xchg sub stos fistpll push push dec andl push sbbl cs push loopne out rorb imull jo inc sbb jae xor xor lret daa repnz inc and mov inc enter or cmp rcr cmp mov add mov dec pushf adc stc imul cmp in scas mov int3 loope movsb xchg push inc mov je xchg adc int enter mov fcoms int or imul in add jns or ds dec add fnstenv pusha push decb adc adc pop jne rcr imul pop jle mov stos fildll enter mov sub fimul dec aas cltd in daa fsubrp popf loope pop in xor ljmp dec pop jbe fild (bad) insl inc test xchg fwait mov test test add fsubrs punpckhdq popf fisttpl pop sahf xchg (bad) cmp repz mov (bad) repz fidivl pop aaa and xor dec mov push push fdivl das jbe sub sbb iret roll push adc fcom mov mov in outsl popf gs lods inc scas push iret push push lds outsb in movsb pop sbb push icebp addb xchg (bad) push lea imul fsubrs dec ds out dec adc rcrb jmp gs jmp dec xor mov sti sub or dec cmp dec mov mov sub scas out jmp je add xchg mov into xchg mov add add dec or mov ja out push sub inc inc push inc leave in fnsave ret outsb cmp mov jg jno mov xor cld mov lret (bad) xor outsb adc inc gs aad sub pushf mov push and clc test xor scas mov dec test jae icebp jmp subl mov jnp fwait mov ljmp out inc sbb mulb lods mov (bad) mov and movsl repnz mov jg jno aaa cli lea loope inc stos nop repnz dec std or rcll mov jne mov (bad) lret fnsetpm(287 in mov adc mov lcall jae (bad) dec lods mov lock loope cmp test jne test rcl and xchg cmpsb iret fidivr fisttp jb adc popf call (bad) mov (bad) cld mov lcall jmp pop cli adc jp les sahf push lods sbb xor hlt clc xor lret andb xchg das pop mov mov jns add inc jle mov dec stos or inc inc xlat or fidivr cwtl clc iret mov dec int3 clc pop cmp aas jno cli (bad) ss jp xchg jae sub and mov pop mov mov (bad) dec aas push in test hlt cmp fdivrp fs fistpll adc test xchg sahf fcoms fsubl lods and popa test mov je fwait jl add insb sti xlat adc outsb mov addr16 scas xor cltd mov push cld ds mov adc scas test sub or incl sub test jle lock mov push pop add aam jb mov jle sarl jno cmc adc pop cli xchg movsl lods xlat pop push xor ret ss lea aaa gs push insl int3 jne lahf mov adc dec pop lahf test mov xchg inc divb inc mov aas cmc push ja stos or jae cmp push mov test arpl sub dec pop push loopne mov mov lods and jg cwtl test jbe sub push cmp jae adc sbb mov aam fxsave jmp add or xchg inc or sbb jo aad xchg shlb mov add push xchg mov shlb cli das pop jp mov inc cmp sbb push sub popa mov pop lods shl (bad) in movsl jg ds ljmp mov adc sbb jae inc sbb (bad) out or mov loop clc push xchg lds and inc jecxz insb in add cmc cmp repz into test add fidivr dec jo inc mov mov fs mov data16 jne adc out sti gs jbe or js int3 fidivl andl cmpsb jmp dec jne loop lea cs xchg push (bad) shl add icebp mov loop mov cmc cmp pop xor xchg test loopne (bad) icebp insb inc lds push test add stc cmp shrb je push je mov fisttpll adc out mov sub jnp xchg jnp js sbb aas (bad) movsb arpl out nop push add lods mov mov divb mov das push lcall lods (bad) daa subl sub fisubrl cmp dec xchg sbbb nop pop xor fisttpl fisubl fist outsb push mov cmpsb ss mov pushl fisttpl (bad) insb movsl out cmp sub mov add or jbe cli aaa dec scas je jle (bad) sbb int cmpsl mov lahf imull push test pop pop iret jae jns jbe jae mov inc xchg repnz je sbb outsb cmpsw fdivrl shlb inc loop popa dec idivl dec adc sbb xor inc loope sbb cmp jb push mov jbe aad push xlat imul sub jle fwait int3 test cmp pop push mov bound cmp fst adc loop insl mov mov movsb repz inc mov xor clc pop out and inc jne fmull ss ja es aas mov push out (bad) and movsl jo imul pop xor and pop mov sub popa cmp (bad) test pop mov aaa aas call outsl fsts inc popf int pop lods mov (bad) ss sub loop in add pop loopne mov lret repnz sbb fprem1 ljmp mov loop test pop stos cmc add xchg shrl fldt imul jp push push xor xlat cmc movb scas jb lea fadds es aaa inc sbb dec sbb out (bad) push aad xchg sub pop (bad) xor test je xor push inc enter mov sbb sahf adc add out addr16 jnp sbb add inc jae add adc cmp mov dec les mov stos fldcw mov iret xor push loop push or jmp out roll repz dec fisttpll aam sub insb push dec pop fwait sahf push shrl pop sub (bad) in dec shll int xchg dec (bad) out outsl sub mov stos (bad) loopne nop sub mov lock xor push dec test imul cmp mov dec les push fxch jno cltd add mov lret ja aaa and jns mov enter add fdivrs test lds pop jb jne out mov xchg je sub mov lret adcl add jns dec leave mov xor mov pop out lds dec mov push aaa sahf (bad) daa iret scas or repz insl arpl and jae insb and (bad) inc lods and out inc or dec pop jecxz dec lock stos jge inc notl enter inc sub movsb dec leave mov in imul sbb popf aad aas mov sbb jp xchg movsl mov cwtl daa pop aaa adc jae xchg xor sarb arpl dec jmp xor dec adc mov adc sbb dec int3 pusha and add (bad) jo sub lock (bad) aad repnz hlt jne (bad) outsl xchg divb popf mov xchg mov cmp adc push mov int3 push pusha fldcw xchg loopne outsl mov mov aam mov add jecxz jg mov and jmp (bad) stc bound sub repz data16 mov push fstl sarb cltd pop cs xor fimul sub mov fidivrl cmc pop into jo mov dec mov (bad) pop in pusha popf nop ret inc popa jno jmp xor aad jnp ja xor popf inc ljmp push pop cmp push insl inc mov jp lea sbb ret in push jge sbb fisttpll mov pop inc shl mov xor sbb jne sub gs outsl test pop add and sub push shr push pop cs rorb fcoml or lock imul and insl scas mov imul stos cmpb adc es mov stc out fbstp test in jp adc mov xor inc mov fdivs cmp lcall mov mov fs fmull mov mov mov or cmp jge xor and enter mov idivb fsubrl dec jecxz xchg cltd and imul out xor jbe pop or loope mov xlat in ret cmpsl sbb inc cmp movsb dec mov roll out mov out adc call jecxz ret add add jecxz and dec sbb pushw push jno mov js inc push test push flds cld jg sbb push cmpsb ja xchg fstpl inc cmp (bad) mov je jge ret jg ja subb jae je add pop push (bad) ljmp pop push sbb cmpsb sti xor push jle outsl out mov insb mov ja das jne mov and add out sub mov cli adc add jo xchg cwtl adc fmul dec lret add jns xor mov push (bad) push ja out das push pop lea roll xor pushf cmp repnz repnz adc repnz or imul cmp adc test (bad) clc sbb inc in mov test gs sub mov out pop gs and dec test clc outsl mov fnstcw cmpsl mov adc (bad) scas xchg iret add (bad) fiaddl push adc dec pop mov jecxz sbb inc hlt cmpl cmp push pop lock dec (bad) je and jmp test imul inc jno test and xlat sub sbb std mov push adc xor adc fdivrl cmp sbb and xchg push push out cmp dec andb popa js push test in js popf adc and rorl mov or mov sub mov add cld pop fwait out push cmc out inc sub inc jmp jbe add negb cmp adc into or and daa insl cmp repnz pop add fadds scas dec inc push adc adc mov mov xchg push sbb pop jae imul sbb xchg xchg mov dec repz repnz or mov mov aaa cmpsl jo mov dec adc cmp cmp stos pop into loop in stc in sarb dec pushf adc cmp sub movsb cli notl das add mov push lds xchg cmp or scas out (bad) xor jo out xchg lret sti pop jno mov rorb cltd dec sti cmp insl inc (bad) movsb cmpsb stos sbb ds push frstor push fist mov sarb sti fdivs push add fldt cli scas sbb xor pop stos push sbb ss bnd sbb xor xchg sbb cmp lahf inc test jbe xor xorl cmpsl inc mov mov gs sub push rolb addr16 xchg or je jecxz fidivrl loopne out and shrb decb sbbb lock dec js jne push jns (bad) leave sbb push js loope mov lret cmp fisttpll xchg add mov stos std pop out mov cmp add sub es and insl jnp repz aad (bad) roll hlt jge sub std cmp stos popa sbb out movsb pop jb aas push xchg out bnd fbstp sahf mov mov pop inc mov jle lock xchg xchg cmp lods (bad) xchg mov cmp test xchg jno sub stos stos push mov aas loop pop jp dec jmp cs xor pop or (bad) jb clc aad movsb ret mov inc cmpsl sahf ret push cmp mov rorl or sbb mov shrb cmp pop and xlat sti bound pop fldt sbb cli mov out pop lock lds sahf movsb push loopne pop rolb fwait loop pop cli push popf sbbl (bad) into push enter add jno into insb stos ljmp push or push mov push fs ret sahf mov and in iret shlb scas sahf aad aas cmpsl or out push std cli out cmp out dec leave jecxz mov add or outsl and inc bound inc xor jbe cmp arpl sti pop inc aad mov into jmp insb jl ficomp lea fbld sti push push sub rorb dec lea sbb jmp push js mov ret lret or pop push loop (bad) add mov lret xchg sbb cs inc ljmp scas aaa adc push fs int3 xchg fist jbe cmp test lods inc sbb mov jmp (bad) mov js aaa (bad) xor fmull add push stc sbb xchg imul insl xchg bnd faddl dec sti dec inc or mov cs cmovnp sahf jbe fnsave sbb fisubr arpl xchg inc mov sub xchg fwait mov icebp sub jmp (bad) push (bad) loope pop xchg aaa hlt xor scas push cs mov xchg enter sarb popa stos cwtl fsubs stc insl repnz sbb cmpsb cmp dec add xor push mov sbb inc sub jnp pop in inc mov test adc push dec jo push push push push nop jle,pt test jbe dec xchg sub sub sbb data16 fildll icebp push int3 lock imul (bad) outsl lcall ret cli lcall jne add popa sub sub rclb fwait sahf cmp sbb fsubrs in out jns call (bad) mov mov dec sti mov sahf ror xchg (bad) lahf rolb cld cltd and push test jge or in cmp jl notl hlt add arpl and je jne pushf arpl or or push popf and (bad) std pusha int popa nop and gs xlat jmp dec adc add mov jge jb jg subl stos cmp cli leave aam xorl push push mov mov lods mov aas inc jmp sub mov movsb int js repnz pop aas test sbb and ss mov enter and pop push pop in imul dec in jp dec fsubl loopne cmp cmp push lret add mov mov jle orl test out xor clc jge loop inc shlb push or mov outsb out mov sbb shr add sub xorb mov cld inc je insb cli shrb pop mov shrl mov cmp sbb outsb je iret cmp push or or and xchg lahf xor mov movsb loop jge inc cld imull push xchg mov sbb lock xchg sub sbb repz mov mov (bad) pop and insb insb mov sbb std push dec stos fcoml jge je sbb cmp loope or jae decl leave adc mov or incl cmc imul adc pop mov adc jg dec cld fstl notl negl adc mov call mov mov lds inc mov cmc adc push negl fcomps movsl push cmp or sub mov pop cmc rcrl jmp lds push dec adc pop (bad) gs repnz dec cli sahf (bad) dec add push int xor insl jbe xor and mov push cwtl sub bound (bad) mov push mov adc pop aam mov jg (bad) mov ror sub in adc dec outsl or ret jle xchg mov push (bad) mov adc fisub aaa xchg mov ret push cmpsb sub and js mov sbb mov rol mov mov clc data16 mull ret dec mov fiadd popf xchg pusha call mov adc or ret jg push scas mov xchg andl pop aad xlat pop inc mov jl add sarl mov xchg ljmp jae mov addl insb cmp mov je pop repnz push add (bad) cmpsl cmp jnp pop cltd mov push inc ja add mov inc xor push fisttpll sub repz aaa mov fldenv add movl dec pop cmpsl or stos shrb jle addl sub push inc das dec mov insl fdivr cmpsb push std jp mov jg add jle test mov xchg mov xor add call fnstsw pop cmp outsl or test mov xchg in cmpsb adc xchg mov jmp jge mov or lods int3 add scas fildl mov (bad) jl fisttpl lock stos or das and lea sbb pop inc pop jp xchg repz jecxz cmp mov out xlat cmp popa inc jecxz jae pop les jo inc fdivs mov jnp lock mov das push push (bad) xor nop sub stc mov imul xchg cmp (bad) sbb dec sub mov and (bad) inc and push jne fwait sub xchg and add pop lods test cmp xlat mov cs fdivr repnz lret addr16 mov negl rolb fisttpll bnd cmpsl out sub lea lea mov sub or std dec outsl inc cmp loop (bad) mov dec fadd repz (bad) call test repz sbb inc fstps fdivrs push fwait (bad) dec cmp add in jbe loope gs sub sbb cmp dec sbb pop add or and pushf sub jecxz jge dec aas xchg jns shl sub pop xchg into mov shrb jecxz movsb dec mov xchg je adc push sbb out jnp sbb aaa xchg pop popa mov outsl retw clc xchg inc and fcmovu cmp jmp pop pop sti roll fsubl or (bad) adc shrl inc (bad) sbb mov gs push mov xchg test fs outsl lcall and mov push push xchg (bad) mov xchg loopne jle pop imul (bad) mov jae (bad) lods (bad) xchg nop (bad) popf mov mov cmpsb addl (bad) rcll lret (bad) daa js fildll (bad) mov sti ret push insl ss jmp addr16 sbb dec bnd dec stos dec (bad) ljmp int daa (bad) enter xor inc pop push (bad) xchg sbb inc push test decl fstl pop mov ret movsb jle jg mov sbb (bad) mov stos je inc mov les add imul rclb and test repz gs xor mov add and adc insb dec dec imul add pop int3 sub dec movsl push lcall mov dec fmuls (bad) pop inc stos std imul xor imul iret sbb out adc jnp dec jmp jge lret sbb mov and fs sti xchg (bad) inc (bad) icebp mov pusha pusha sbb pop int xchg (bad) jae loop sbb pop mov das mov icebp mov sub addl sahf cmp sbb addr16 inc sub popf mov jp xor and dec lods in frstor sub jmp inc jl xorl mov or lds jnp and sbb cmovnp or aaa sub dec jmp (bad) xor shll pop (bad) or or movsb pop and js fwait mov inc repnz stos or fs ret popf and jp xor mov out or jnp fcoml lods insl xchg dec lret mov and (bad) xor dec imul gs (bad) sub and fidiv mov imul in pop inc fisttpll sti test scas sti std dec sub (bad) notb repnz stos jns push loop sub and lahf clc xchg test (bad) scas or add aaa inc mov xor adc sti frstor enter sub ljmp popf mov repz outsb push in add (bad) je inc add xchg jns je inc (bad) cmc pop aaa int3 out xchg dec push jle dec inc xor jl add or mov lea cmp in int idiv or lret iret popf call sub loop lret xchg out aam push icebp (bad) sarl jnp fstl jno ficoml in es mov lret or mov mov or loop jle adc jnp pop (bad) mov and daa add xor sub push mov ret (bad) int3 lock lods xchg lret xor pop mov sub mulb push sub mov je mov or or xchg mov ret fmul and mov sub out xor stos and (bad) repz pop mov out in xor fcompl push fwait add adc loope hlt hlt or add popf test pop dec icebp sti stc or (bad) add pop mov xlat jnp inc lret inc (bad) test xor pusha jecxz lahf lahf aas stc lods mov faddl dec inc inc sbb xor push push test scas in call jne pop mov lds out roll insb (bad) push subl call cmp (bad) cli inc decb xchg (bad) jecxz int jl mov cmp jp pop scas (bad) lods movsl mov xchg mov cmovne adc pop cs xchg sub add mov enter xor test daa sub sub inc mov rcrl (bad) jle jge cmp and pop lret push jb adc push or dec push mov jne mov fldl cmp (bad) ljmp push cli adc pop int3 xchg xchg imul mov cltd cmp std and mov fwait in shrl inc dec jnp push push icebp test cmp push adc mov std loopne xor dec adc dec cmc (bad) jae mov fist push ret xchg lods inc adc mov pop sahf hlt mov data16 adc lcall outsb lcall cmc pop jl out xchg jno push pop pop mov push je outsb pop cmc (bad) xor (bad) cli sbb and fcoms push cmpsl cli add ljmp jno adc lds fcomp testb mov psubusb loopne cmp mov pop aam ret (bad) flds sub mov in sbb jg sub jo or push in and xorl ja mov xchg dec pop mov mov test jno push in std pop xchg mov inc mov jecxz mov test or push ret sarl adc push xor and fs adc cmpsb sti push addl xor insl (bad) or lret dec ret into inc push mov iret (bad) lods pushf das sbb push adc xchg pop cmp test xchg jmp jl jae pusha in push fwait lock push pop xor xchg adc (bad) mov (bad) mov xchg ja cwtl test xor scas and ljmp and fisttp dec push js jno push mov shrl inc int sub js xor out sahf lods jnp cld xchg adc mov scas testb sarl inc pop and andl sub mov jne sub aam dec dec pop das cmp dec sti ljmp cmp add jno pop popa add inc xchg mul mov es in in sbb mov cmc mov les cmp adc dec imul mov and push call out mov xlat and sbb pop call mov xlat ret xor dec inc rclb std addb jecxz dec fdivl sub jle cmpsl icebp ret jmp push data16 mov xor fwait cmpsb mov push cmpsb test int add cmc xchg pop rorb (bad) sar jg iret add pop je xchg popa das inc imul pop test loope jge scas xchg aas lods sahf in stc sbb or repnz xor stos mov cmp nop std fwait lahf iret ljmp popa pushf mov xor inc test cmp adc mov jne add cmc out and hlt (bad) mov je jo mov into or mov popf add sub mov stos cmp mov call jmp dec out fdivrs loop testl lock pop das jne cmp xor std fsub xchg push pushf aam mov ss ss cwtl in xchg mov sbb aas out jl out movsb lret pop lods fildl push and jecxz into sbb cmp xchg cmp jmp or and das scas xchg sbb popa or add (bad) xor pushf mov adcl loop ja mov mov out inc adc or xor shlb push push jle sbb xor and test cld or addr16 arpl add cld cmp jle and cli dec push dec dec add sub cmpsl fildll or fs stc push mov mov dec dec addr16 ds inc icebp arpl adc pop (bad) xor xchg incl xchg ds popa sbb xchg clc stos ret popa mov xor jge or lods inc mov in orl or cltd aaa jl popf adc dec ljmp jbe jno xchg pop idivl js mov lret adc xor mov xor xor pop outsl mov aas outsb mov (bad) fidivr adc xor loope lahf sub in sub add xor outsl jo mov ljmp push adcb or data16 hlt out ja and lret dec mov ss loop mov fildll les imul xor xor lret mov outsb test adc (bad) gs add add and xor or xchg or fs jbe inc push push or add outsl xchg push jmp add sbb add daa xchg cmp inc mov dec and cld loope and jmp fild nop insl mov sti loope adc addr16 lret es subl adc and and aaa pop xor das cmc lods imul mov sbb pop loop movb xor iret data16 stc nop xchg or out pop cmp mov adc mov or pop mov lret add in cmp repnz push cmp bound jecxz out mov mov pop xor jns sahf add (bad) and xchg pop inc fnstcw push arpl or je ljmp test ljmp fisttpl pop inc mov push enter aaa outsl jb cmp sub fwait and mov jle enter fsub adc push cli mov repnz xor pushf fcomps andl sar cmpsl mov movsl jge lret bnd and xchg clc (bad) ror js ret xchg jmp outsb sbb roll sub or cmp xchg lods es pop mov push les pop cmpsb insl into scas push cli insb dec aad pop cmp xor pop xlat test mov test ja gs outsb or sub adc cmp mov cmovns insb outsl mov mov pop sbb (bad) test int daa cmp sahf cwtl adc loop shlb xor cmp push mov mov ret add xor repz enter pop pop pop mov mov xchg jecxz jle mov lret push insl roll xchg fistp dec and jb lods outsl fdivrl sub mov aad lret xor pop in into call or imul xchg push in lock or popf mov test out mov pop cwtl dec inc movsl mov test jo push pushl and and in repnz loope pop mov jmp sbbl pop imull inc cmp jge jnp sbb or mov ficom dec xchg pop aad incl addb movsl in xchg ljmp dec sbb cmp and aam test pop and outsb cmp imul movsb fwait out jecxz and adc sarl adc or cmp cmpsl (bad) jb sbb push ret mov clc sub sbb fs mov pop imul adc loopne jns lods jp aad gs mov xchg mov push xor mov sub push adc push cmp xchg lret je jae jnp ja xor inc pop xor push cwtl xchg mov cmp mov xor cmp xlat rcrb push add jle addr16 fucomp cmc mov fistpl (bad) sbb sbb push inc pop jle jb popf dec scas sub dec adc int (bad) into mov out cmovnp mov push clc jecxz push ficom mov imul push push subl xchg jae or xor mov mov sub insl sahf and pop sbb adc dec mov faddl out adc dec inc pop push outsl xchg xchg jg mov (bad) cmp stc sti (bad) mov imul js call jle xor xchg rclb xchg push mov int mov test testl mov mov cs (bad) cmc add pop jne popf xlat rcll test shrb sub xchg mov mov iret inc sub pop push pop imul add sbb in jp (bad) pop lahf inc mov mov dec add mov push in test mov mov imul je mov pop (bad) xchg or push ds jp cwtl sbb dec mov pop mov mov xor ss cmpsl dec sarl inc sub mov mov out or fimul out clc lahf frstor in scas out mov xor or enter mov enter les lea insl lahf xor idivb test (bad) idivl repnz or push xorl in lahf jbe,pt xlat dec inc shl push add push ret push sarl pop flds fstl jb and push inc imul scas push push cmp mov xchg das and push xchg push sbb fsubl fwait adc cmpsb sahf cmp mov cmp sub mov aad or mov lcall ljmp add je push ja lods aas subb ret ret sub cs or or call push movsb ret dec outsb loop das hlt xchg bound mov inc sarb and jb push movsl push shlb aas xchg jecxz shll mov aas imul or push push (bad) ljmp xor sub dec add lds iret adcb test lahf dec loop sub mov jno inc imul aam mov cmp and mov stc push repnz mov xchg inc mov add xor sub xchg jg jp cmp xchg push addr16 test push loop xchg mov js add push mov sub outsl cmpsl stc adc fiaddl add fs xor into es adc cld inc xor jp push jmp daa lret and pop xchg xchg subl or in lret jno push ret dec cmp and daa js jo xor jno mov or les sti imul out cmpsb push fildl out ret xor mov xor pop daa adc leave or repnz sbb sti mov jbe sub adc test adc add adc push in adc popf and negb xor dec es mov adc add xorl jmp jge ror loopne stos stos (bad) shlb dec mov sbb jns pop dec sbb mov in cli lock cmpsl js mov (bad) lcall mov xchg jg adc stc les lcall ret cmpsb xchg jp xor push or or xchg pop inc lcall cmp imul (bad) mov inc adc ret stos jp addr16 mov dec mov pushf push pop stos ljmp inc cltd jmp (bad) and sub sbb inc out and cmpsl loope inc pushf add mov lret xchg aaa pop inc xchg pop adc mov dec and mov aas popa popa lahf loopne bnd cwtl pop out xchg addr16 in pop test mov mov pop push shrb fs stc imul push int3 arpl jo in cmp xchg lahf pop fadds push pop imulb dec aad xchg out (bad) sub pop jo fistp mov mov push fildl addr16 inc mov dec cmp cli jmp das adc mov dec mov and pop sub mov mov push test (bad) repz mov jecxz xor adc sarb adc stos icebp xor pop das jbe jl in push pop loope popf mov cmp add addb or out not imul push cld inc (bad) loope xchg cmpsb inc mov push xor imull add jno cli stc push sub test cs imul jl fsubl popf dec pop ds sbb inc sbb daa in or out testb cmpsl pop xchg dec arpl sbb adc rol lds mov (bad) xchg add xorl sbb push dec lcall or shlb pop addb iret hlt das insl gs jne mov pop (bad) nop add pop inc and fistp cwtl mov loope arpl xor (bad) fisttpll cmp push add cmp mov hlt insb sbb mov je ds jno adc aam cmp fcomps pop (bad) xlat mov pushf popa sbb sub nop xor adc (bad) cmpsl lods push cmp mov mov adc out xchg xchg lods xlat push sbb add aaa and in (bad) xchg shrl sbb lds or movsb or cmpsb xor gs add add call bound popa mov stc push add dec incl pop arpl add add lahf in inc lret jns pop mov (bad) pop push int3 push xchg std pop push mov mov (bad) push (bad) ror ss mov push test cs cmp pop shrb test sbb inc adcl lods jne scas jl in jae cmpl adc xchg or sub or test std or insl inc loope stc inc stos mov push xor mov inc outsl pop add dec iret les (bad) mov (bad) push mov gs jle,pn jno sti jl add pop push and (bad) mov inc scas cltd fcmovb cmp scas xlat jne inc mov std int3 shlb mov mov mov mov imul or mov dec lcall adc stos mov dec xchg xor jnp add xchg int3 sbb stc aad mov stos dec cwtl jne jb xchg pop ljmp sbb inc sar ficompl and xchg mov je adc jnp je test sbb hlt bound repnz push sahf mov cmpsb mov jnp mov cmp data16 mov test adc loop pop js sbb sbb decb aad iret pop sub mov push sub out inc aad sub out pop mov jp pop fbstp cmp cwtl mov es pushf or dec test scas jge clc sbb mov cmp and out les dec and jl cltd push or xchg xchg in movsb mov or lods loopne adc test lock fwait xor sub cmp fcmovnb mov pop xchg fidivr mov add pushf cmp adc in test icebp dec mov pop mov lret shrl stos dec adc jge aaa sbb cmc (bad) pop das cmp aaa test rcr lock xor xor add je popa adc push inc mov (bad) idivb pop je adc js out fcmovbe sub cmp cmp mov es pop sub (bad) dec mov aad jbe nop push stc or fmuls push pop jp push dec pop push (bad) imul outsb loopne jo cmp sbb mov jno (bad) xchg xlat test arpl std lods cmovbe sbb mov aaa call lods xor cmp pop lret clc in int cmpsl mov inc sub jae loope push add mov test ljmp clc add mov cmpsb gs (bad) and and ljmp mov sub mov int mov and bound sbb cli (bad) pop shlb xor fs mov stc cmpsb arpl aad (bad) xor inc je cwtl fadds adc hlt adc decl inc xchg sub and fimul ret out sub rclb repz pop pop xor pop imul lock jle jmp movsb mov cltd or (bad) sarb inc mov push imul fsubrs int3 xor mov dec push add aam sbb mov xchg (bad) mull dec movsl aaa test pusha mov mov lds xor call cwtl pop adc xchg cmc sub sub push cld mov enter pop (bad) hlt cmpsl xchg and cmp sbb cltd cmp test xchg mov loope imul and pop adc dec (bad) test mov rol imul outsl sbb mov mov (bad) sub cltd movsl or dec add dec inc test hlt push pop pop addr16 (bad) mov out inc es mov into mov shlb clc jmp sbb hlt rolb cmp jbe cmpsl jbe pop nop movl adc sub ja mov outsb addr16 or sub cmp xchg daa jle enter xor mov xor les lret cs fimul (bad) mov xor inc gs movsb (bad) pop xchg lods lods int3 add andl dec mov lock dec call mov pcmpeqd (bad) jle xchg cmp xchg add jae pushl aaa loop push jecxz sahf inc and stc adc mov scas inc in fs imul and xchg jp ss sbbb lods icebp rcrl jge sbb or test sbbl or lds in or mov fidivr negb xchg and mov mov fwait enter push icebp push inc cmp mov xor cld gs mov (bad) mov fucom cmp add stos sarb cmpsb out push inc mov xchg inc jnp outsl int3 sub das sbb mov imul adc scas sub rcrl push imul and push add insl xchg roll push mov test mov jae mov sbb dec mov or sbb fiaddl dec mov add sahf cmp fs stos ds (bad) jo jbe les push aam cli lea or scas mov fdivrs hlt (bad) ljmp dec mov out mov sub int3 nop negb xlat pop (bad) aad gs adc pop fisubl rolb push lods push mov int push and or add icebp pop mov sbb fisub lea out mov jle jmp cmc mov xor cmp cmpsb fdivl mov lahf sub pop cmp stos sub sarb into jecxz xor mov div jno movsb add popf scas adc daa (bad) mov ds cmp mov lds sbb jbe jbe aas add sbb dec mov test (bad) push pop cmp and bnd cmp ja push or ret jge mov jae lcall pushf mov fisubl cmp dec or xchg add mov mov popa rcr loopne push mov daa arpl xchg jae insl or icebp je fsubrs ja mov in imul imul stos cmp and xchg (bad) mov push arpl mov dec iret mov call mul pop push ret or jge sbb and test and sbb dec xor push cmp pop test repz or (bad) leave jg adc ret enter incl xchg mov jmp jns cmpsb in add aad vmread (bad) sbb (bad) iret ficoml repz sub ss fisubr add mov adc cmc ds (bad) nop jno bound insl int or or jg movsb outsb pop jg xlat dec ss imul add ret sar popa mov movsl rolb popa or fbld call add dec in pop adc and ret (bad) lret fbstp shr call inc orl and movsb daa cmp xchg je stc add push jl cmp cmp ja xchg scas cwtl fs jg ffreep xlat sbb jl test xor jg repz inc dec pop out sub or lcall sub fs loop sbb outsl jle mov iret sbb ret add mov fwait test in sub addr16 jmp ds scas add pop scas sbb aad aad fisttpll lock lock mov shrb jmp pop dec adc jle lods mov adc push mov push leave fs jmp fwait fwait lock adc mov mov add gs pop or xchg aam dec aad pop in popf (bad) out mov and adc xchg movsb xchg enter subl and pop sub jbe sarb push ds jmp rcll xor lds sub (bad) incb stos mov mov jg fcoms (bad) mov lahf (bad) out xor test ss int jl mov jle movsb stc movb stos mov aas jb inc pop and enter and mov jmp jge flds fisub sbb inc fimull mov rorl cmp pop mov add dec lret js mov sti mov movsl movsb mov push cmc out sahf test scas push mov inc movsb push cld fstps inc jb mov sub jg movsb mov imul les movsl inc add (bad) cmp jecxz lock gs mov dec (bad) aas xchg cmc imul lcall sbb int jl lds sbb inc popa xchg pop add mov aad icebp jnp daa adc sti jg mov (bad) sub aad in aas push pop or fdivl pusha (bad) out mov lahf add jo push push pop int3 iret pop out or cs push push xchg xchg mov or movsb sub daa jns in dec pop fsubs in sti inc mov sbb dec and or or pop xchg out repnz dec out sti outsb fnstsw rolb sbb test jle popa in push pusha cld fimul mov push and xchg (bad) movsl rcll (bad) cli int3 subb xchg insl xchg insb fnsave xchg xorb inc idiv inc mov sub lods mov sub xchg cmp sarb and stos jmp inc jns movsl out in les stos dec (bad) (bad) fwait xchg xchg dec jbe xchg push mov pushf fs xor or fidivr outsl mov inc popa push aas ja inc mov xchg mov push lods add jp cmpl or mov or shrb mov adc in adc mov add push test sub loope fucomi xchg adc pop add lahf out inc test xor repnz push sbb jns addl addb cli out and mov test xchg xchg xchg fcomi mov nop jae pop sub dec iret mov mov enter cmpsl bound dec adc sti mov mov daa enter imul xor add cmp out in std xorb or pop mov pop xor icebp jb inc les fcoms stc lock mov xchg cltd loopne or jbe jno es pop mov jae sbb xchg and sub pop inc in ret ss inc (bad) mov xor movsb js rclb lock dec add aam mov leave out ds pop je out das dec pop push xor and sbb mov and dec mov (bad) addr16 test fidiv jl out push mov ret aas jge pusha dec sub std repnz inc dec xor shll int3 (bad) jbe adc iret sarb icebp mov fld cmp push xlat jl and dec and pop out nop stos test in icebp loop inc aas mov inc scas movsb inc pop cmp mov mov divl clc cs mov popf (bad) xchg jne cs cmp mov inc dec daa or repz test and sbb xchg rcrl cmp jp mov mov cmpsl pop aaa push in dec adc aaa cmp (bad) inc mov dec popf sbb dec or xchg lahf xor push mov cltd mov push in (bad) int3 test jb aaa dec dec rorb and sahf xor cli mov lds repnz and adc and or in mov sbb mov xchg insb pop adc shll xchg pop jg in lahf leave sub mov jg neg lret imul nop pop call and mov pop out sub pop sbb nop jp mov bound not inc cld sub ret fwait stos cmp adc adc push jnp pop jb xor push sbb dec mov sbb sub shl stos (bad) pop fimull inc or loopne cvtps2pd mov fldt mov pop xor jmp xchg inc pop jecxz idivb mov loopne mov cmpsl mov pop movl pop fsubs mov cmc add and (bad) xor (bad) jno pusha mov pop and pop mov pusha test xor pop jge std xor dec mov (bad) pop je lahf loope les push dec js das jle fiaddl mov std fs jns jbe popa clc or hlt sub push and les mov inc cld mov jge cwtl cmp push fnstenv and cli mov call psubd jecxz push cmp out bound leave xchg movsb xchg daa ret pusha cltd sub dec push mov push jg ljmp sub fimull fwait mov stc push pop xchg (bad) stos and cmp push push xchg cmpsl ret xlat dec xchg mov dec hlt adc inc lcall cmpl js neg add mov dec jl aaa adc jns sets cmp cmpsl call imul jle push ljmp or dec pop decb jo xchg cli scas xchg jne dec add fmuls ds jp lahf mov mov ljmp mov push test mulps faddp xor push push ljmp mov ja popa jns push xlat inc jno jns,pn (bad) lea out mov sub out sbb arpl dec jne,pt out pop sub adc mov mov adc lea test fcmovne sub std dec icebp cmc add and sbb pop clc add imul std add rolb sbb push int cmp push iret dec cwtl into push pop inc (bad) popa dec loope pop popa inc push sub push iret outsl sub test push inc and sub sti or invd test aam subl pop js (bad) pop xchg mov fdivr mov imul call popa push jl cwtl out aad fst (bad) call movsl cli mov cmc dec mulb clc xchg sti int3 popa or rolb (bad) xor into call pop jl cmpl sbb adc xor add inc dec inc shlb push sub dec nop arpl int insb and jns cmpsb ja test jo pop xchg mov nop fsubrs test push into inc mov out aas enter rorl pushf outsb mov mov pop cltd adc popf daa gs push popa es cmp or adc test mov sbb pop into xor icebp mov lods sbb add imulb (bad) aaa xlat add sti xor test push out pop sbb orl imul fucomi lahf push ret imul pop cltd push mov push icebp aad fdivrl aas addr16 mov pop bnd adc out cmp xchg mov fcoms inc jg insb stos add sbb sbb sar or loopne push add add xor into ljmp inc in add pop mov pop ret mov (bad) or pop pop sbb ss sar imul mov (bad) ss negb fstl (bad) dec cmpsb inc lcall xchg push fild lods adc mov clc je int3 jnp mov mov call xchg push and (bad) sbb test jmp pop out add es (bad) int sub nop loopne (bad) add cs xlat jge mov dec mov mov dec adcl fisubl cmp push add mov mov imul mov outsl mov mov in (bad) addr16 sarl jb stc or (bad) into mov sbb xchg ret mov insl dec lock lea fiaddl and test sti leave movsl loope or es adc test push push aad xorb lock cwtl sub repz push sub (bad) out daa jmp or dec mov sahf jo int3 dec ret int3 mov adc fidivl push (bad) ss fistl mov outsb jne push lods adc mov and and pop dec adc scas cmc aam ja and xor out adc adc pop and daa add repz scas lods mov std mov shlb mov test pop pop (bad) inc int (bad) sub fldt aam cmpsl dec loopne mov int ljmp pop iret cmc ja dec push mov enter mov lods popf push xor add clc add (bad) hlt xchg sub pop inc orb pop popa jno or cmp (bad) dec add inc xor mov jo sbb fsubl xor movl bound clc mov clc or or sbb jae out fisubr mov jge scas dec inc and mov mov cld mov in pop int iret lds loopne int jns idivl add inc cwtl movsb push lahf ret fmull stos jg mov mov insl push push lods call (bad) cmc xchg and dec sti rorb fisubr xlat imul xchg fidivr in frstor mov lret aad scas jo push jne in pop flds hlt icebp sub lret dec sbb mov fbstp mov aad test pusha inc mov dec mov push shr adc call in ret cmpb adc jbe out inc adc (bad) lock or in ret repz or mov insb xchg cld sub xor push lods mov mov int insl pop daa adc insl rolb cmp inc push mov repnz sbb push adc dec cmp mov movsb lods jne cmp jo jno loopne sbb iret rolb clc lock mov pop fiadd test adc outsb (bad) cld mov les push rcll scas jnp add inc dec cltd int3 test add imul (bad) loopne repnz aad inc add nop in leave sub or xchg fdiv lods mov xchg iret pop mov jl ret cli loope std pop push dec loope mov aad mov je xchg mov push inc sbb rclb push leave aad or pop push jne (bad) icebp xchg outsl cmpsl test (bad) (bad) xchg push insl mov jae lods sbb mov aam mov jo lods sub outsl mov xor mov jmp loope outsb or jl mov mov test into inc clc mov xchg and dec inc insb xor xlat jns into dec js fisttpl mov xchg lock jnp out mov push push jle dec push divb push sub div test mov mov sti repz sub scas std jnp mov fisttp cwtl (bad) cmp and adc add fiadd jnp push and (bad) xchg adc and cmpsb dec cmp push pop fwait mull lds insl mov add ljmp fisttpll inc imul push mov adc xorl xor shrl fwait sub sahf div sbb push fdivrl cmp xor jge inc xchg push iret rolb addb sbb ret push add lods sub gs test in repnz mov xchg inc not imul bound (bad) lods pushf mov lea xlat push pop popa in push fnstcw jno test xchg lock movsl mov xchg fcom jl mov or xor xor mov mov fstl pop nop int3 mov fsubrs mov mov fdivr push xor mov or cltd ljmp cmp int3 sub lods mov push dec in test cwtl test push pop (bad) imul dec (bad) jbe outsl int movsl push and mov imul jl and (bad) dec outsl pop loop jmp mov xor insb sbb (bad) pop xchg imul out or and adc aas mov cmpsl adc lock (bad) sbb inc arpl rcrb push iret push mov mov mov push insb xlat sub cmp xor lea or in fs out push aad sub mov xor std js lcall add cmp lds popf out int movsb (bad) sbb call and and fcomi pop add out cmp xchg rol push or lcall mov push cmc and (bad) xor jl mov (bad) (bad) mov or inc cwtl cli xchg bnd call orw or cmp push jmp cmpsl push pop or negb out adc xor dec imul sub aam sbb jge mov push adc movsl mov lahf stos push test inc test stc xor loope mov cmpl push sbb enter (bad) mov pushf imul inc mov test add adc push add add add inc sub ret mov jl sub out push (bad) push xchg rcl sbb xchg mov testb push arpl lcall repnz pop fbld pop js enter add mov aaa adc inc jp hlt insl adc mov adcb daa pop adc cmp icebp mov jo pop shll jle repz cmp scas (bad) mov addb out addr16 push ljmp sub scas dec ret adc mov pop adc cmpl fwait outsb gs mov jno popa daa lock movsl sub mov orl cmp sub sbb dec add dec xchg xchg adc mov ljmp loope cmp and (bad) test (bad) lds loop ja fs xchg mov cmpsl sub sub ret push subl aam test sbb mov stos inc in sahf jae insl lret and lret and jne jmp or cmp mov mov inc les (bad) dec inc lea out mov jmp dec cmpsl sbb jb pop pusha ret icebp add inc lds dec rcrb sbb cld xor std test jb jmp mov mov sub sbb and sbb rcrl xchg adc je push xchg out mov daa dec xor pop jle pop sub ljmp or sbb mov imull jbe ds xor add mov jae stos sub nop test dec xor xchg push mov cmp cli mov out mov imul xor loope inc mov out adc fistp sbb jmp cmp ds sub push int3 xchg sti es test mov outsl imul jle pop jle cmp or cwtl jns mov xor cwtl shrb hlt cld and fmuls push (bad) lock lret movsb mov sbb xchg ds xor xchg int jae cmp inc ds aad mov test scas ret in push lea cld mov hlt notb sbb xorb gs pop lds aas daa push gs add and jne jae and call xchg cld jmp daa push cli ja mov (bad) lcall pop in jp xlat or adc mov cmp hlt xchg dec test mov adc je mov adc cmp xlat pop lahf push mov xchg (bad) movsb popa pop xor loopne dec pop outsl xchg (bad) movsl shrb xlat jp dec test xchg cmp bound lods and mov test mov or push loopne adc push inc outsb adc fs jo mov movsb dec cmc stc aaa mov lea mov aaa mov (bad) lea jl fist dec jge dec loop push add inc jecxz fwait jb push dec ficom in arpl sub inc cmp jno mov daa out inc in xor xlat xchg and and or inc pop xchg mov xchg sub imul mov jnp cmc fsubr mov xchg xchg xchg push test (bad) xor cmp enter mov mov stc inc inc ss pusha jbe push adc aaa movsl adc and test dec inc adc fdivl sub outsl adc push lret sbbb int3 cmp jnp adc lea xlat adc icebp mov icebp out pop jp push sub push push mov fs inc mov sti iret sub xcrypt-cfb cmpsl cmpsb cmp pushaw mov xchg (bad) mov into dec mov outsl pop mov fwait sti xchg test jns sub test xchg push repz pop adc out and mov popf jnp aam clc fldenv mov mov mov sahf xor jge (bad) mov lods inc xor stos mov repz lahf adc cltd adc mov pop dec arpl or std mov mov or je cwtl enter mov inc fsub jl mov mov add out mov fwait pop jl ret clc addl push insl and sub sbb pop jae cmp ret stc or jno sbb mov inc sbb inc les dec cmpl lret addr16 out std in adc and adc xor cs fcompl or sub add jne and and mov pushf or sub adc jge scas xchg lcall (bad) push sbb adc dec subl xlat pop sbb lahf ss xchg dec rolb dec loopne imul push icebp dec aam jb sbb insl imul int out xchg fbstp fbstp inc (bad) jmp mov loop add or cmpsb test mov in adc dec xchg adc or rolb fadds pop xchg jae adc cmp pusha and (bad) mov (bad) std jo mov mov mov data16 pop inc push pop sub mov lea fbstp push nop (bad) or pop inc mov fidiv inc out and hlt cmp out mov in xor xchg jmp cmpsb pop jge or in test push mov inc dec (bad) loope mov faddl repnz test lods into (bad) cli cli pop clc hlt lock test sub jo aam iret out cmp ficom pushf xor dec pop sbb popa fidiv dec sbb cmp pop stc insl in addr16 sbb inc pop mov aad sbb mov andl pop fwait pop aas pop das fiadd push fiaddl ja insb pusha push xchg mov ret jae jge xor int3 dec es (bad) fildl mov jb xchg mov mov lret sub divb sub inc push stc cmp dec or inc pop stos mov aaa inc add xor push mov lret push dec lock dec loope repz jns sbb jg cltd adc shl mov mov cmc xchg int3 or mov mov xor and push sbb adc mov lds sti adc cli jge sarb dec test dec mov inc push cmpps sahf sbb dec add addr16 or shlb pop mov xor fwait push and mov imul popf mov cmovl sahf sub jne,pt scas adc jne out sbb and mov clc (bad) mov lcall cltd adc push dec jae and sbb test fisubrl xor fidiv aas nop in orl dec or and lret and or adc pop sbb mov data16 scas dec jno cmp xchg xor pop sub cmp mov dec mov xchg dec xor repz clc bound test and repnz mov xchg hlt test lods or adc jl and xor inc mov frstor icebp mov sub outsb adc daa cs or jl,pn lret call dec ret xchg sub mov sbb push (bad) sarb mov sub jne push sbb xchg xchg mov xchg fcompl pop out add adc fild sti aas or jle and loopne or leave cltd jb mov loopne lahf xchg test jo mov pop and sbb inc movsb and xchg and sti inc or mov addr16 or movsl mov add xchg mov cmpsl sbb adc ret mov out ja and sub into dec lret dec push aam sbb fsubrs mov pop test fnsave mov xor pextrw inc movsl lret pop cmpsb cld lret push lods imul sbb push jo cmp sub inc fbstp and cltd out jae sbb jp or out repz or arpl adc int3 mov adc mov movsb sbb mov jo pop and rorb (bad) dec inc add mov aaa lods add and out jecxz ja cmp dec cmp sbb rorb xchg les lds pusha leave mov outsb cmp cmp rclb xor insl notl leave adc adc pop inc mov fildl xchg out xor aad jmp lea (bad) cmp sbb movsl mov in stc adc mov (bad) out (bad) xor (bad) dec call mov js idivl into mov xor lahf and ret rcrl xorb (bad) ja adc int3 ret push fstps add (bad) add gs cs hlt lret rorb adc jae lcall ljmp xor pushf call cmp js ret lods sub pop xor in pop dec dec pop mov int (bad) mov lcall mov mov sbb ret mov stos iret adc das gs and fisubrl xlat dec insb sbb ljmp stos mov push fdiv fistl adc ds aaa cld and dec cmp (bad) xchg fdivr xor xchg mov push push loopne pop lods stos xor (bad) or cmp out leave cld icebp (bad) ljmp sub inc test or fwait pop jnp dec inc push ja int3 stc fcmove cmp in cmpsl pusha popa adc pop (bad) mov dec pushf data16 ja mov pop lahf cmp mov pop (bad) cwtl popf in lahf clc (bad) jo fist cmp popa and lret mov call stos subb icebp push pop sbb call push shl inc cmp pop test in cmpsl test daa mov push aas fdivr mov test stos jne and inc arpl adc sub sbb hlt xchg xchg push sbb cmp sar push insl push out adc mov inc (bad) loop test and cmp or cmp std push cltd xchg cmp xlat cmc lods aaa fisttpl or (bad) fsubr lock out mov loop mov into dec xchg out imul aas iret lock clc xorl push and inc mov cmp fcoms jg rcrl cs cmc stc negb cmp mov data16 push ret iret pop push or aad pop test rcll cmp mov dec jb or mov imul or or popf xchg lahf loope (bad) out insb fdivrl mov addr16 leave jmp das int3 jnp push popl mov sbb nop sub js mov add push sbb xchg adc jmp inc (bad) leave loope jmp call mov sarb xchg ja loope fdivs test repnz inc (bad) (bad) pop loop inc popa adc outsl jns stc inc or and adc jo mov push jmp xor lret and loopne idivl fsubr insl int out fldcw mov inc add xor xchg pop aaa cmpsl mov push into push xor clc jecxz jmp pop dec jns dec mov shlb mov fwait icebp inc and xor cmc xchg jb jb sbb dec out xchg cld dec add cmpsb loopne adc insb out sbb sub mov hlt imul (bad) dec lds in mov push into cmpl adc adc pop aaa jecxz sub call xlat xchg ret and sub mov xchg cltd mov (bad) dec mov fidivrl scas mov mov mov mov jge (bad) clc jg push sub das aad fstpl sbb rorb (bad) push jo daa jbe loop adc push pop adc mov push (bad) mov pop xchg lods sbb fsts and pop test das call test das divl aad sub loop (bad) in mov pop or push out jns and imul and adc out mov test (bad) rclb mov or jb cmp jmp add in sbb test jmp push leave pop xor jle lds jnp adcl out scas push mov xor sub xor mov test cli cmp adc aam sbb fcomi roll or aaa cli (bad) bound pop xor popf jbe xchg and fildll stos xchg cmp sti inc mov insl rorl adc pop in adc xor daa sbb cmp lds adc and insl add jecxz dec stos jns call sub inc sbb je mov clc push push rcl popa sbb iret dec enter mov (bad) icebp imul jge rcr js xchg adc fdivl inc popl cwtl mov fcmovnbe or in out fisttpl mov test fs inc dec cmp into xchg xchg mov mov pop pop adc cmp int mov mov ja arpl and mov fstpt push loope insb insl jge shrl sbb xchg adc jmp and out in mov jl out and lahf call or ficomp xchg mov aaa fwait pop insb xor das mull lods pop gs jge adc pop aas sarb mov push mov xor mov stos sub mov imul add int adc add outsb andnps cld inc and (bad) in fisttpll adc sbb inc inc xchg mov jge jnp mov and leave insb js rorb push leave js cwtl cld jg mov and xor push test mov pop adc add mov repnz xor adc leave and push ds mov add js ja out xor fidiv lea xchg clc sbb gs xchg in ss std mov push mov cmpsl sahf stos mov scas gs xor jmp push in mov insl pusha aad add inc or pop cmp and pop sub push xchg adc hlt push mov ret hlt dec lea dec imulb mov scas push dec es stos fsts neg xor push std test mov jg add xor out (bad) mov and iret lahf sub rcll or and cmpsb adc jo dec addr16 pushf dec test roll pop pop pusha mov lcall mov mov cmp pop inc sti mov in or jns mov leave or movaps add (bad) push out push or pop (bad) lock mov mov mov scas dec xchg fcmove lock cmp adc xorb mov pop shlb xor push add mov inc xor insb (bad) sbb sarb pop shlb sbb cmp sub loope xor dec and insb int3 and imul xor stc cs scas repnz ret mov inc sbb cmpl loopne mov push aam xchg push xchg lods cmp les mull aaa xchg sahf stos push leave out mov lock xchg adc lret mov insl jle mov pop sbb inc or test adc adc jle xor push push dec pop adc dec mov rorb jmp push xchg jmp inc sti lcall inc push leave imul or xchg pop sbb mov pop (bad) xchg (bad) fstps jo mov inc fidiv repnz or jnp sbb std sbb lods loop pop rol icebp ss arpl mov push fbld or xchg push inc lahf nop int3 jecxz xor mov mov pop pop test shll pop push pop push loop aaa rorl mov imul idivl xchg inc out jbe jge fdivrs fdivp movb jnp pop lret dec popf in push push sub pop sub mov scas sbb xchg aas adc fimul dec lods pop jg add adc mov inc cmp cmc inc jno scas aas mov cmp xchg in jno popa ja inc je test jmp lret rcll and mov hlt cmc cs roll out or test pop adc pop xor mov inc into push stos mov push loop fidivrl (bad) clc std pop outsl pop mov imul sahf xor (bad) xchg das cld cltd sti stc xor ds jns adc sbb xchg das ret inc mov mov cmp jg mov mov jmp repz mov pop push inc push clc outsl inc (bad) pop dec test mov mov mov push lret cmp fldenv inc ret or jno cmp push mov jbe mov loop adc sahf arpl xchg or std mov cmpsl inc mov mov iret lods xlat stos imul mov xor (bad) push into lcall in aaa mov (bad) mov push daa jae xchg mov test movsb fldt (bad) addr16 lods movsl notb inc mov push sbb inc jmp ret pop dec cmp xorb push movsl sbb push rolb xor adc xchg adc cmc test ja xchg out imul inc or mov push sbbl cmp (bad) push shll pop inc mov mov outsb loop subb push fucomp je cmp xchg sub fiadd inc mov add stos or cmp cmp mov rorl inc daa arpl jno push pop (bad) lock or addl cmp cmpsb aaa cmp outsl pop dec fwait pop sub sbb or in fsubl inc jg clc mov fistpl test dec leave dec or aad add xchg imull mov in push pop (bad) popa cmpsl cwtl or rcrb int divb cli xor dec (bad) in inc mov stos hlt fist push (bad) dec mov out enter (bad) data16 mov test leave push dec ret push lods (bad) push dec dec call jle test test addr16 fdivr xor xor xor sub pop xchg push shrb dec test xor movsl aas aam mov inc sub adc (bad) scas stc (bad) push push or iret aad aad xor outsb add dec loop jg xchg and cmova mov hlt daa mov mov xchg inc les jnp cmp mov xlat fwait or cmpb sbb outsl inc adc mov aad movsl push fwait sub ficomp psllw movsb loope out mov jl push jae push into sub xchg adc stos (bad) icebp xchg inc in aam (bad) xlat pop push adc lcall push ss ss or xor mov cmp ja cmp lock mov insl pop dec xchg (bad) mov jmp xor inc or into sahf sbb int3 mov mov cmc repz cwtl stc pushf dec and (bad) (bad) cmpsb loop loopne mov xchg das dec mov ret xchg xchg sub call stos cmp stos push aaa js insl cmp pushf cli lock fs jnp addr16 and fldenv mov push cmp imull jns daa cli test push aam loope mov mov and (bad) rorl xor or jo stc push fiadd fcoms add sbb sub aaa data16 push ds jbe movsb jle arpl shl mov lock nop das insl sbb push xchg es movl movsb inc outsb sahf dec (bad) dec xlat pop fdivs or (bad) xor mov aaa mov inc and xorl adc imul in cwtl loop mov jb pop pop imul jmp js pop cmpsl and imul outsl inc movb (bad) fnop cmpsw nop std (bad) dec addr16 sub sub aad push je jecxz mov arpl imul push je das hlt test enter mov divl push dec push aam pusha pusha pusha call pushf jns js roll adc dec sbb into loope lods adc lret dec xchg adc int jno mov test repnz je add and hlt in fsubrs and enter add mov dec ret iret dec loopne xchg pop shrb sub fwait inc lock xlat xor push mov fnstcw pop jge and shl popl add into enter cltd and push scas je int3 ds repnz cmc xor stc jae inc pop inc pop inc stos fwait push push ja add loope in push cs or and mov push mov and push mov stos test jg mov je inc jg (bad) jbe sub jl mov mov sarb loopne movsl push xchg sbb and loopne outsb lcall mov repz iret cmp mov insb xor xchg jmp adc sbb mov imul inc mov cmp out scas (bad) div fnstsw add jns ja out mov imul add pop or jecxz dec (bad) mov push jno sbb xlat lods jb add cmc xchg mov cwtd sub addr16 mov dec inc cmpsb data16 lods and (bad) fcoml les fiadd jle mov pop aad and (bad) jg sub mov sar bound loopne lretw xor xor cmp aas adc int mov add lahf mov ja jmp jge xchg cmpsb mov sbb dec xchg mov test lods inc (bad) out add xchg pop push in mov push sbb xor xorl mov xor arpl add add pop sbb add loope and loopne or dec or xor js inc rcrb bound repnz (bad) adc inc push adc (bad) jl rol jp inc lock ds ret popf sbbl and mov addl movsb test xor cmp pusha rorl rclb mov lret mov xchg aaa aam sahf push inc cmp out and lock add adc std push in cmp jo js push pop sub push jl fsubrl dec setle jmp mov rorb movsb push and jbe cltd ja movsb ss (bad) in repnz and cmc push pop incb (bad) mov adc mov mov es or push dec popa jge inc xchg push shrl push push mov in push jb xchg push in adc imul push mov ret pusha sarl ljmp ret inc dec fisttp leave mov sbb fwait cmpsl repz (bad) pop pop pusha add (bad) out scas or rcrb or arpl jnp out stc jns push push out pop insb in mov cli mov and imul pop push cmp outsb mov mov add aas pop test push dec xchg push test mov and in pop mov cmp xor add aam mov jp fadds adc or fwait pop imul pop out inc in pop cmc dec pushf or pop lea cmpsl sbb in xchg jb mov push push sarb jae cmpsl cmp xchg inc test cmp insl setb adc ja adc cld jnp cmp (bad) fsubl push sbb arpl mov lock xchg xchg ret es arpl xlat sbb psrld xchg jo jmp xchg sbb sbb int and sub sub lea push pop pop inc sub lret popa scas cmp cmp pop pop adc in jmp mov ret xchg iret dec loop and movl cld cli movsb (bad) jo push sbb loopne mov arpl outsb in inc mov jno icebp (bad) mov (bad) (bad) xchg dec into imul lret cwtl inc scas pop cmp lcall sbb in jge mov inc (bad) hlt cs movsb cmc hlt xor arpl adc (bad) jbe xor jmp pop xchg jl cs inc mov ret repnz inc dec add arpl lcall ds daa push jp pop fadds ja leave push imul jo insl dec sbb nop stos jl inc mov mov cmpb loopne xchg mov adc cmp sub xchg cmpsl sub mov mov sbb ds insb loope int3 jo imul sbb inc ret add imul pushf (bad) fwait lcall loop sahf inc jo mov jne and cmp and rcl pop cmp xlat in jge or les cmp es test jnp fstpt hlt mov jl push addr16 mov mov test mov das mov sub add inc fwait pop and out adc pop in inc out int int3 ss or stos std add out arpl xchg xor sub das and out inc cld xchg pop jnp pop jb ret pop dec xchg in dec adc mov addr16 test pop inc push jmp js pushf mov inc arpl cmp lods dec cwtl or sbb xchg add enter ds mov out jo test push ret pop bound sbb push call push jne pop mov jp pop sub popf inc push ffreep mov (bad) (bad) jge decb cld push push fisubrl cmp sub sahf or ret inc inc push and daa mov pushl mov dec and daa add adc cmp or inc lods test push inc pop sbb jl imul or fsubrs hlt mov pop mov cmpsb imul sahf push jne stc inc dec js jno xor jl enter mov add daa in push xchg aad mov fild xchg jle mov pop xor je xor cld jp add mov or call or mov xchg sbb ds jg inc mov lret adc pop pop sbb push addr16 mov int3 frstor cld iret lock mov neg cmp movsl inc dec cmpsb mov orb sub les out and sar outsb iret add pop xchg add sbb (bad) mov mov sbbl repnz das xor lcall mov dec sahf imul sti sub cmpl pop push pushf loopne jmp pusha adc loopne pop mov div clc into rolb xchg pusha sbb les mov fs ret add imul mov lret aad mov jo stc aas mov leave leave int3 mov call (bad) (bad) mov (bad) (bad) cmpsl lock test repz roll addr16 pusha xchg push test je cmpl ljmp test inc pop popl movsb test sbb cmp insb out pop pop test jg xchg add pop scas movsl insl and add nop ljmp mov inc inc movsb lahf (bad) leave pop mov (bad) mov sbb fisubrl mov jge test jp aas xchg jo jecxz mov movsl adcl jg,pt add pop jl mov xchg pusha int3 dec inc sub add lret mov nop mov xchg mov xorl imul stc push mov add push dec dec mov (bad) sbb cltd pop int outsb stos mov mov lods gs jne cmp mov (bad) xor (bad) push pushf sub (bad) stos mulb test loopne adc call mov adc pop mov (bad) adc mov sahf jle adc inc cltd sub or lret jns shlb adc pop sub lret stc push loopne fdivl (bad) (bad) jns ss push mov repz add fwait push pop cmpsb cmpb sub cmpl rcll outsl fdivrs (bad) mov ja cmp loopne gs out xchg in adc cld aam mov pop xchg and jle stos je dec push mov mov insl lret pop lahf enter ja mov aad mov pushf xchg iret xchg or fistpll mov clc mov mov mov fnstsw xlat inc xchg fs stos arpl jno cmpsb jmp cmpsb xchg inc lock and push add xchg push pop ds cs sahf jecxz sbb loopne rcrb jo sub test les data16 xor enter push and pop inc mov inc pushl hlt (bad) xor aam iret or scas hlt adc push test push jbe add and jle repz mov (bad) pop pop out stc add ds push cmp push jp xchg popw cld mov sahf (bad) loopne sbb adc movsl mov sar cld xchg push xor lock repnz jns ja pop hlt mov or out sarl (bad) push outsl mov or push negl push (bad) icebp add in adc add imul xor pop xchg repnz imul cmc push shll in mov sub mov aad enter fildl mov sub mov imul mov std (bad) sbb vunpcklps out and cli mov rorl jbe repz dec add pop cmpsl xchg call mov fwait dec pop fsubrp or push mov rcl in rcrb movsl mov loopne lea xor sub fbstp push push ret je pop add in sub in cs dec movsb sbb je loope jo aad gs test sbb int popf nop add jo fmul lret pusha cmp dec lds imul iret loopne in mov test jecxz sub or repz test (bad) stc pop (bad) outsl or and and inc mov push jmp fisub mov lcall movl enter cmc inc dec (bad) xor popf mov ds in mov jb cmc mov fnstcw iret add loopne sub adc test mov fmuls dec mov jnp xchg pop adc inc in ja js xchg and adc push push stos cmpsb pop push loopne push jae stos out repz pusha xor inc ds xchg incl dec lcall push xor and leavew add dec mov sbb jae repnz xor mov xchg insl mov xchg cwtl (bad) xor aad sub inc js dec shrl dec xor stos lcall aaa xchg sub js inc sbb arpl in push repz pop jno cmpsl (bad) fiaddl xor jb enter mov sbb or inc sahf cmp and int and scas mov ja mov jbe inc movsb xor lods outsb push mov into push mov insl push jmp subb push mov stc imul xlat cwtl mov xchg jnp lds mov fcoml add ss test addr16 xor push xchg aas adc addr16 in mov lock jg out mov xor or clc repnz out dec test cmp test popf fstpt cltd jo mov ds in out jge mov adc xor jbe repz jb gs sbb adc popf pop adc les insb lret pop sub cmp add in dec jmp mov daa shll out out jne movl inc ss scas pop rcl adc xchg daa mov add sbb xchg cwtl xlat dec pop xlat inc mov or sub addr16 xchg jnp push and in pushf mov test push aaa rcrb pushf xor scas mov xchg test lcall daa jge dec ja scas sbbl lds dec std pop xlat jns sbb push das addr16 jecxz sub mov cmpsb insl lods push sub sub push lods mov jb dec mov xlat (bad) xlat fcoml adc imul stc divb sbb and pop jae out sahf xorl dec push lea mov mov push mov ja pop push fsubs ds xchg push dec push ds mov daa xchg ds repz into mov aas aam dec movsb test cmp shrl mov aam repnz sub (bad) stos insb outsl test data16 and lds jbe xor cltd lcall fdivl pop jmp (bad) xor adc cmc xchg aaa insl imul xchg mov mov jl inc cmp jmp outsl repnz dec dec inc out mov daa mov add jbe lahf lret push lahf mov ret add data16 jae pop ljmp sub inc cmpsl stos aaa jne cmpsl js mov or lret or inc (bad) adc int3 mov cmp hlt stos jecxz ja push jle sbb lahf sub dec jp xor jge adcb loop test movsl mulb enter sahf fcompl jg adc addr16 or je inc xchg mov jbe test movb call or ret and adc mov std iret push cmp jne,pn inc pop inc mov push jno stc mov sub or fs addr16 push mov pop jo popa stc out jmp loop push push mov or cld cmp and cltd fucom lret mov in sub push mov out adc (bad) jb in sub (bad) jb mov xchg ja in push addr16 push in adc xchg std orl aas (bad) or dec je jle stos mov inc xchg movsl push dec leave add inc sub aam mov out pop xorb jno fstps sbb xor and in popf test pusha leave fisubl rclb add adc es inc popf and fldl lods ficomp cmp aam push aas aas sbb pushf pop pop push (bad) icebp fstl insb gs push adc inc mov adc rolb xor es pop mov daa (bad) cmpsb cld inc movsl xchg addr16 push in ret xchg or rorb pushf xor mov fcoml dec pop aad push push add loope pop xor ljmp lock sub sbb lret pop push ret pop and mov imul jmp sbb mov arpl shrb imul push cmp dec mov sahf sbb idivl jnp pop cmpsl lahf and jnp cmp adc aad xor aas dec and push pop push jmp add into mov addr16 pushl stos push cli or lods (bad) xor mov lods pop roll fndisi(8087 fisubrl xchg pushf add mov add stos or jne xlat xchg and jns pop lahf xor inc outsl ja (bad) mov or fiadd jae mov cmp jnp aaa sbb sub stc or add sbb jno lret inc hlt test (bad) sti dec mov dec xor loop pop imul mov push movsb mov pop aas mov fisubr cs aad mov dec push and and loopne fs fninit adc (bad) dec inc nop pop adc jnp in cmp int lcall in hlt add and xchg adc or cltd inc loopne lcall sbb push adc adc push sbb or dec (bad) xor mov into test or pop sub aaa (bad) in (bad) iret int3 repnz in add test or stc add cs out mov sub andb std or imul pop imul push pop jmp aas mov jecxz mov in cmpsb inc mov (bad) inc lods dec or pusha pop cmp cmp fwait subl inc adcl iret leave push addr16 or xchg decb cmp imul xchg out sti test and mov fs fwait cmp cs dec lahf aad jb das inc mov (bad) cli iret (bad) mov xchg xor xchg (bad) hlt aad frstor lods repz dec push sbb loopne aaa out popf fsts dec dec push or test in faddl adc adc push mov lcall aad lcall ret insl jae leave jne push stos dec cwtl xlat dec cld (bad) das cmp test pop sub (bad) (bad) sbb push jge mov lcall in xor cmp loope cmp mov ret and getsec sub cmpsl pop popf adc mov out (bad) cmpsb repz js loope mov cmp xchg jae sub mov adc fwait js jg fs in rol popf push jns test xchg sub inc push inc mov mov mov lock push jne std out (bad) mov fs inc sbb mov das cli pop icebp pop pop or rolb mov ss mov jne aas sub sbb sub arpl loop jo mov jno mov shrl dec mov dec pop sbb enter mov sbb aad pop iret jp fldl inc push xchg rcrb roll (bad) icebp stc mov ret mov cmp cld lea xchg into pop sub dec addr16 xchg (bad) gs fcoml or push push and mov push xchg (bad) jp adc int3 imul jle mov sahf sbb outsb and test out mov xor adc pushf aas and (bad) xor push adc gs mov in shl mov push or mov jmp sbb sbb inc xchg in push push xchg jno sti push mov ljmp insl outsl adc sub cmpsb cmp (bad) and jb sub pop lods (bad) pop cltd mov outsl sub (bad) aam mov or orb or loop or dec dec stos das sahf insb aaa inc fdivrl loopne mov xchg das loope add and xlat (bad) and shlb (bad) and fwait sub sahf mov and icebp cltd stos adc inc xchg andl cmp jge dec mov mov pop and and mov pop (bad) in xchg shrl ja sub inc rcrl jge ss iret out dec xor fadds and int inc push and mov (bad) add fisub cld mov and js aad mov mov sbb push sahf in sub push movsl into mov add or mov bound and aam and mov and in orl repnz sbb mov jl out jne adc dec mov mov inc ds subl andl (bad) testl and dec xchg pop lods (bad) adc cltd push cmpsb jns sarl fs aas mov adc push popa int3 add into pop lods push adc addb mov mov sarb gs pop rcrl mov pop into cli dec out mov jb xor mov std pop jnp bsr inc ja fxch enter sub lahf mov movsb into pop int3 rcrb les fwait sbb sbb mov jle mov push imul cmpl dec inc ret and rcl ret dec inc lret push sbb faddp (bad) cmc repz sbb xchg or xor iret ljmp test push dec mov sub scas mov lret dec mov roll xchg add into mov nop nop push push inc jp inc in cs out idiv xchg cltd dec fnsave xchg add sub cli jae inc je decl jp sbb aam das fwait xchg (bad) xchg push add xor push pop mov and push fimull xchg out pop stos pop xor or inc repnz shr cli sub mov pop pop loop lock rcll pop lahf movsb cld dec test mov jns jle (bad) (bad) jo insl cmc stos (bad) mov pop shrl ljmp dec cmp std movsb cmc mov push pop push sbb js lea sbb pop fldl cmp xorl pop ljmp movsl and (bad) jo cmpsb push fs fmul or bnd mov or icebp push jb sbb test adc mov bound push cs sbb adc jecxz push or jb ss out xchg in xchg lods gs mov and inc cs mov sbb (bad) push mov out hlt xchg cwtl and dec sbb pop loope (bad) aad cmp gs jl mov sbb sub leave or pop inc clc arpl and and dec lret callw leave cli xor fmull (bad) jne or cli push imul sti fwait sub lret mov xorl test xlat and iret or cmpsl cs jno hlt ficoml out mov fwait cmp add pop je pushf dec (bad) loope xchg inc cmp pop inc sub jns xchg imul aam pop and test out push fdivrs or xchg lods (bad) int fwait movsl (bad) cmc or imul sub mov pop addr16 lahf test lahf popf les hlt in inc xchg ljmp loop adc imul mov xlat and hlt sbb mov jg or xor outsb test and iret mov mov scas inc pop jle cmp popa decl xchg test sahf int (bad) aam jle or jmp test insb lds mov xchg stc pop outsb jnp and loope adc dec mov xor jge lds dec xor push cmp inc or inc arpl xor push cmp add pop mov sub mov scas cmpsl push not addr16 fmulp inc repnz enter and in lds divb sbb jno movsb dec pop xchg sahf push pmaxsw outsl lds js inc clc icebp (bad) icebp in cmp sbb fwait int stc pusha mov fsubr xorb jecxz mov sub data16 cmp addr16 and in mov push dec mov std (bad) and jb mov in sti lods pushf lcall out andb pop fdivrl ffreep push and fadds xlat sbb sub dec jno jbe clc enter ret insl jge add add mov lds xchg lcall ror jmp sbb mov dec iret xchg sbb sub outsl into xor call mov mov clc xchg xchg lret pop inc aaa or xor mov sbb cmpsl xchg or pusha jns or sarl fcmovne imul testl pop (bad) ja push nop negb aad sti add stos movsb cmpsl out mov sub mov pop mov ret cmpb pop dec fiaddl push and ret loop and hlt add cld inc shll sti fist sbb xchg add roll inc icebp lcall test add or jns cmp clc fisttpl pop mov movsb sbb loop orl jb sub imul imul rcrb pop aas cmpsb jg mulb sub lods mov mov cmpsl icebp mov mov aas ss prefetch cmp scas cmp jle inc ss xor fidivl mov push cmp pop in xor jge jae mov pusha jmp jp in xchg imul cwtl xchg and test cltd int3 adc pop rorl or jns repz jl pusha jp hlt divb or fwait inc or insb (bad) xor inc fs popf les or loope and (bad) sbb sub xor insl inc out xchg adc sub faddl movsb lods pop mov and test xor mov pop xchg repz xchg loopne ja ret loop cmp divl mull xor iret aam icebp scas notl cltd pop mov mov xlat or popf pop cvttps2pi fnstsw push mov insb mov xor fimull cmc pushf sbb stc mov add adc pop push mov dec out sbb push mov inc daa pop loopne adc fwait jbe mov and rcr pop cmpsl subl add shr (bad) mov jnp pop pop in or icebp sub mov xor fucomi and cltd dec rorl mov mov es mov xchg hlt jo fimul sar or push je imul icebp in sbb aas adc mov cmpsb push jno pop repz insl into sbb jnp dec mov cmp mov imul (bad) sbb jmp shll add les icebp cmc dec sub (bad) pop mov push xchg scas loope ror mov lahf cmp int test push jmp fdivr (bad) or jl cmp inc imul push add cmp dec mov jg je lcall jg jbe and rolb cmp xor cltd lret push fwait sahf fcomps fidivrl add mov mov jo push fs in ljmp ss popa push (bad) push ret lahf (bad) clc jle test rolb std test mov sbb inc dec andl test cmp add pop int gs inc xchg outsl add je sub push mov lds cmpps pop sbb es xor xchg dec rorb inc notl jo and cwtl imul adc add pop mov loop (bad) stc shll daa sbb add xchg pusha or or aas clc fucomp mov ret (bad) mov mov inc add cld mov ficompl xor out fs or int push dec bnd nop cmpsb push cmpsb insb mov inc jg and popf std lahf mov mov outsb daa and out orl fiadd jb and cmp cmp sbb rcrl jecxz push and int ret lea cmpsb or fstpt push lret aaa loope outsl cmpsb dec bound xchg repz shrl mov jns ja lock pop repnz das lods adc in iret and aas rcl aaa cltd add (bad) pop test mov gs xchg clc mov insl mov push xchg mov test in add or mov or jg push xchg mov mov adc insl into popf mov fdivs jb out mov sbb cmp int loope popf clc addr16 xor popa mov pop lods dec rcr cmp ret mov sti cli hlt mov fcompl ret xchg lret cmp xchg inc xchg inc fnstcw sahf or xchg or xchg lock loope pop rcll lods das lds cli mov xchg fsubrl in in jb cmp dec inc iret mov fisttpll sub push push icebp inc sbb (bad) data16 adc mov sbb movsl mov fidivl sbb sbb jno dec xchg sahf xlat jmp ds mov lahf sub jns lock add mov xorl in jne jae loope pop or adc mov mov repnz adc xchg std push cmpsb loop int cmp sbbl cmp insl fwait mov test adc cwtl cmp fimul mov out add cwtl add popa jns adc sub jmp or sbb jg pop das pop jmp imul (bad) stos xchg cmp mov mov shlb cld pop cmpsb out (bad) jecxz mov cmp ja or nop repnz scas mov add and imul or or or xchg ljmp test and stos out xchg int int3 xchg push outsl imul fist mov xchg mov sti add sbb and ret jne stos mov fnstsw daa xchg pushf pop xchg (bad) in lods sub push imul and inc sbb out inc nop dec bound xchg xchg mov cmp mov adc jne xlat pop rcr sub sbb cltd sbb inc mov xchg aaa stos xchg mov dec dec push cmp jle mov xor cmp or push addr16 repnz std push loop jns mov pop xor gs mov outsl or ret cli fdivrl mov cmp inc sub fnstsw cs subl xchg aas pop mov xchg push mov push jbe call push adc add inc pop adc cmpsl jnp mov dec cwtl add jle sti in pop sbb jmp xor pop cmp js push iret (bad) lock or push lret mov mov xchg lods popa cmp mov pop xorl cmp sbb lock stos cmp mov sarb dec (bad) mov subb (bad) cmc add adc or jns iret imul mov xchg scas jbe xchg push jge iret jnp movsl lea insl ljmp jge pop aas pop inc mov jo mov mov rolb mov rcrl inc dec and push lea add cmp ja (bad) jnp out push push xchg inc es das lret lea fisubl out shll mov (bad) push pop sub out ret or imul ret cmp cmp stos mov jne mov nop adc pop stos push enter lret pop neg jno sub leave js sbb insb fbld and fisttpll sbb and test lea inc pop je push push fbld addb cmp ss mov repnz fdivs loop fsubr mov sbb (bad) pop jmp inc mov adc mov push fstpt imul add call xlat ljmp jno lods loopne xor jge cmp mov mov pop insl adc adc mov fstl stos xchg push jo jmp mov daa js cltd leave lret xor push cmc pop ret or xchg push mov xlat mov push fsubl fldcw xor pop inc sbb cmc xlat inc jecxz push sbb fsub fsub adcb mov enter lcall outsl inc pop inc (bad) add push add adc lcall push push jl sub insb sub pop mov dec das mov mov (bad) in (bad) cmp call in push cmpsb ret lea fcmove loope xsha1 cmpsb mov sub sub out mov mov enter aaa push icebp and dec xor and das enter into popf and dec popa cltd ret sbb push adcl lret sub repz xor sub dec xchg xor mov dec fsubs mov xor div insl push dec icebp push sub divb dec xchg jne pop mov popf cmp cmp (bad) push (bad) in rorl mov stc inc cmpsb mov add dec je stc (bad) fwait loop xchg (bad) leave push dec lock dec aaa pop xor cmpsb sbb orl fcoms cmpsl in mov inc jnp loope jae or addr16 pop push insl inc call lret ds xor mov das cs adc out rcr in xor inc daa (bad) je pop sub movsb push (bad) out arpl mull (bad) ds xor add fs pop test test (bad) push imul pop mov iret sub pop mov popa shlb (bad) adc pop adc add xchg jb inc xchg jmp inc sbb mov scas es inc xor aam jae (bad) pop sub jl (bad) jb pushf int3 adc xchg fistpll xchg jno mov sti rolb in xchg lods cld dec xor mov mov (bad) aad cld push (bad) stos sub push xor add mov adc into shrb repz gs push insl aas pop (bad) clc fs mov mov jb inc sbb insl imul pop and jo leave push inc add xor js mov (bad) xchg (bad) fdiv cs pop pop inc inc sub test in shld test pop cmp jo shll hlt fsub repnz in mov int3 das xor push adcb pushf sub shrb out (bad) popf sahf in ret (bad) cli sti pop cmp pop lods popa ss pop mov subl ds or imul push loop (bad) jg lods adc mov test shrb dec ss inc inc dec and mov fdivrl and adc (bad) popf call cld lret sub test jo jmp or add inc pop mov jnp add std add paddusb mov push outsl dec pop std sbb cltd or and icebp popa pop mov insl mov push (bad) adc inc mov adc push mov cmp xchg cltd mov clc xlat xor xor mov imul jecxz and sahf dec pop xchg dec cmc stos sub xor push jns xor mov mov cltd fcompl jne dec adc in fisttpll mov imul mov cmpsl sub cmp jae mov into das loope outsb cli push fldt pop ret ret dec popf aam push and movsb sbb pop decl (bad) jb jle mov mov push pop outsb mov and push imul xor or (bad) fsubl cmp popf or xor mov add xchg das aaa mov clc aas or lret in loop movsb fmulp insl int das (bad) cmp (bad) std ljmp mov jmp lea dec xchg sub push sub cli xchg sti arpl jno or inc push loopne adc or pop stos sti add stos mov in js loope fdivr idivl inc test pushf aam push pop idivl dec lea out ret in mov cmp mov and loop jecxz lock (bad) lret mov bound pop add aam push loope or and aas aas cwtl add enter int3 (bad) and push cmp mov stc xlat (bad) push sbb xor add lods daa dec test sbb mov pop insl add enter mov pop ss push int leave cmp inc adc fsubr lret les add mov push push jnp pop mov aaa jno mov and (bad) xor mov imul (bad) int3 int or pop out lea jns mov (bad) xlat (bad) adc and and adc dec out cmp pop inc fwait lods lahf push inc mov mov add jns sbb (bad) mov adc inc (bad) xlat xor pop mov mov nop scas mov adc sub lcall push das mov repz and cmp xor jbe adc int lret daa lret pop mov mov std push stos rcrb mov mov insb inc cmpsb and adc out xor add xor cmp lea ret bnd jnp and sbb push jg test (bad) mov xor adc xor xor outsl lds fs mov lret outsl test pop dec jge sbb jne mov sarl addr16 cmp gs fmuls and dec adc stos sbbb and daa add outsl xorl mov adcl sarl push push (bad) aam jp inc shrl pop fwait ret mov popf adc int3 scas lea sbb mov jp push mov rclb fnstcw cmp std loopne and clc push pushl ror dec sbb mov cmp in or mov cmp test data16 xchg loopne jle out imul and cmc aad adc imul lcall pop jns mov adc das sub fsubrl or xchg jnp add jne jl cmp iret iret sbb int3 mov ds dec lcall stos cmp cmpsb dec jecxz stc stos into pop fldcw and adc lock fisubr and mov insb repz and jg adc ljmp aas mov mov jae cmp sbb decb adc mov dec outsb adc lahf mov mov nop mov jl pop pop inc lret push dec xchg dec pop int3 jb ds push hlt or das fdivp jge cltd je inc in jl sbb push xchg fnop pop inc nop out in stc cmp ss sbb lea test or and insl scas mov je jno adc sbb sub inc dec xchg mov inc pop or ja stc pop inc jne mov cmp mov pop out mov pop cmp pop xchg pop mov cmp pop sar mov mov idivl sti and jg,pn and and lcall icebp xchg push test fwait jae stc cmp cmp in outsb fnop jbe imul ficomp loopne mov fs aam lahf adc xor js ljmp jmp addr16 sbbl rcrl jl gs cmp adc dec or ret pushf rolb iret pop lcall inc mov fmull inc (bad) jecxz mov cmp cltd inc scas ljmp repnz in pop and test xchg ret cmp (bad) pop push cmp jl sub pusha sub stos jae mov dec xchg xchg repz and enter add inc cmp fcomi call leave inc dec and mov pop jns push popa mov call jl neg addr16 mov xchg pop ljmp sub adc ss (bad) dec pop sub loopne or lods lock lahf daa push and hlt cmp inc dec mov sbb ud1 push mov push fsin stc sbb cmc lods out arpl adc mov stc or adc mov std cmp jle xchg fwait ljmp jge push pop pusha and jns aam leave sbb stos sbbb pop loope ret push aaa icebp add inc cmp out cs enter mov push out mov popf imul decl arpl xor cwtl mov inc mov xor imul push aas lcall mov cmp jnp shll cmpsb mov xor roll test in in (bad) sahf leave fisubl sbb (bad) xchg xchg rorl pshufw jl jmp push or xor loop cmp cmp adc inc call (bad) xchg or loopne push push (bad) ja sub dec js ficompl push sti cld cld in dec adc out (bad) mov mov sbb jb imul mov in test (bad) add jbe jmp jnp or mov ss stc sti add sub mov movsb sub mov cmc popa in adc iret ret mov dec mov cs fwait add sbb add pop in pop je xchg mov or inc divl shrl cmp add or loopne mov lods adc xor mov cmp jecxz lahf repnz jmp cmp loop dec repnz cmp push cmp dec mov daa mov sbb pop pop aad sub dec cwtl dec outsl movsb jecxz and pushf pop iret cmp cmpsb daa dec push mov inc cltd xor cld sub sahf cmp fsts mov int3 xor arpl mov cltd xchg stos sbb loopne call sbb call fs in pop sub outsb fist xchg pusha dec call xor stos cli stos adc dec (bad) enter lret shr popf mov in pop ja and dec mov jmp jle popa jno ror push rorl add ja cmpsl bound sbb aam mov mov xor xchg dec xor and sahf sbb (bad) (bad) (bad) outsb cmp cmpsl mov (bad) es and mov xchg xchg jb ds sub jecxz pop sbb sub lcall xchg int mov jmp inc sahf sub jo push sbb push sbb mov insl rclb mov add ja sbb movsb mov inc adc xor push sub jge ja adc and ret (bad) cli arpl jp jne add lret shlb pop into mov xchg mov arpl lods in in push inc xchg push pop scas xchg outsl mov xchg and cmp mov xchg sahf inc test mov out and xor fstl fwait (bad) scas stc fistl imul cmp cmp orb adc sub popa lods repz lods add test push mov shll (bad) dec adc out mov movsl jnp mov xchg push mov xor insb inc cltd jbe dec ja lods neg and cmpsl shr mov jb add adc andb mov or dec and fildll push sbb push push mov (bad) jmp sub test or sub or addr16 xor (bad) jae add int3 les addr16 clc scas lret out dec mov lret mov imul and sub push mov scas xchg js lods mov mov mov jg mov (bad) scas and pop dec push cmp cli test dec dec fwait adc daa pusha (bad) sub or pop xchg pop mov fistp inc sti std fsubrs test push xor jbe adc int mov cmp xchg mov inc mov jbe xor xchg xor jb sbb dec int3 and or xchg outsb cmpsb mov (bad) fwait cmp aam test cmpsb mov js pop (bad) mov xor popf das stc add dec clc add cld popf jb (bad) cmc mov or sub pusha jecxz (bad) mov shll sahf (bad) outsl jmp xchg and (bad) add or mov or popf test fbld nop mov xchg or push ret data16 mov aas out shrl or outsb or sbb pusha cmp lret fidivrl fadds cmp dec cmc sbb dec pop jle mov out inc sbb insb or stos lret push out sti hlt cmp cmpsl je jo jp jle xor xchg popa mov or sbb xchg xchg jne sbb push lods in add mov jmp jp pusha and dec cli in in cmovge sbb xchg dec imul or adc add outsb mov push jns inc or rolb cli outsl cmp mov cmc (bad) mov mov in cmp std test scas popa sub popa rol fsubs mov dec lret push mov clc das pop sub xor popa xchg jno dec mov jne loope cmp hlt jle aad test es out das out into dec mov sarb or fsubs cmp stos cld imul addr16 dec mov xor shrb pop and (bad) cld lahf push fsubs and daa loopne bswap mov fwait psubusb rcrb loopne fdivs mov cmpsb push cmp mov nop mov push popa mov mov out int inc clc stos loope addr16 cmp jbe dec ret add and sbb pop stc popf add (bad) mov and or hlt out push (bad) push xor sbb insb pop and jg cwtl ja aam call xchg movsb sbb outsl in adc fnsaves mov (bad) jnp sub pushf ja sbb mov pop fnop (bad) cmp cmp jne inc cmp jle or add aas mov pop lret (bad) xlat fistpll in sbb pop ret jbe inc cmpsb cmpsb xchg js lea rcll lcall xchg fmul pop int mov sahf push mov fistl mov inc push sbb inc ret das lods jbe mov sbbl mov sbb dec adc pop es jge xchg cld (bad) xchg xchg push cld movsb sbbl dec mov jmp fs ret xchg leave lods jmp mov inc add add out xchg xchg (bad) inc push fucom sbb xor sub aas pop fcomps push sub xchg xor mov scas imul pop loop jnp dec sahf and jnp (bad) cltd cmp mov mov lret mov or int push adc cmpsb notb rcr (bad) jb ljmp xor and pushf dec mov incb cli test (bad) sbb inc je mov mov ror test jno cld cmc aad sbb push fsubrs notb add xchg push mov xchg sub or pop out add (bad) and jo aam lret out fisubl jg into ret ror int fwait imul mov pop sub push out sbb fsubrl sbb and push lret inc or nop add pop sbb jmp fwait or sub jae mov fdivl add cmc movsl jmp mov ja aas data16 jl or sbb lret inc xchg or and icebp pop adc pushf push test push jge jne popa xchg mov sub neg fcomps or leave add mov push xor jecxz fwait and dec push jg sub inc mov jecxz sub into cmp (bad) idivb into cmp movl lea pushf rclb ss cmp push fdivrs mov aaa sub xchg mov mov adcb sbb fsts fwait mov mov fcoms jno mov pusha int3 lahf cmc sti je jle sahf insb lods xchg inc jno inc pop adc mul ja sahf dec xor mov jp test add loope insb push int3 enter (bad) xchg push (bad) lds gs scas jecxz inc xchg xchg and inc (bad) dec mov push sub mov push mov lods add push fdivl pop mov pop psadbw dec push jmp ret mov bound (bad) jge cmpsb out lods lock jl lcall push test cmp jae lahf out sbb xchg jb push push pop adc stos scas sub (bad) repnz arpl rclb popf fwait mov insl adc fdiv jle cmc pop pop icebp pusha js push jns int mov cmp and enter mov in paddsw shll xchg jp pop ret nop aaa jle xchg jno adc jo movsl sbb dec (bad) ret jns or push xor loope or xor (bad) push sbb lods pop sbb adc and sub mov gs int push aas sarl hlt sbb and mov cmp and daa btrl dec xor sahf jl clc insb movsl inc inc pop push mov push sub sarl jle add jecxz dec push sub into and and xor imul aas inc dec in add cmp das ljmp xlat shrl subb xor xor enter icebp gs sbb pop mov sbb xor sbb in pusha dec test ror or xchg xchg push lock lock ret ret ret test pop out (bad) negb (bad) out (bad) hlt into and (bad) xor out ds cli in xchg fmuls push jae xchg loopne jmp mov xchg mov iret jp push and jns mov push push pavgw or adc xchg or arpl mov (bad) inc cmp sbb jge jg lahf sbb adc mov test shrl sarl and icebp loop jae dec inc jo movsb imul inc cwtl adc dec sarb les imul sbb mov push adc cmp test pop xor inc sbbb sub shlb xchg or cmc pusha les xor and stos push and fmul mov mov outsb cmp aad jge sub stos mov int xchg or cmp inc sbb cmp sbb dec divb xor (bad) pop push xor cmp mov les mov xchg push in hlt in je data16 addr16 inc scas shrl sahf lcall xor out mov push inc add push imul rcr (bad) lret imul jne dec imull cmc lcall jbe test lock icebp dec xor jo pop add andl push xchg clc and iret test adc out ja aaa test xchg jp cld addr16 fcmovne outsl ljmp sub ret or mov pop and pop sub stos into scas ret repz dec out or pop (bad) ds push fs cltd out jle mov jg ja sbb cmp addr16 outsl push dec arpl hlt mov mov popa pop sbb cmpsb repz lea jo pusha fadds mov adc inc inc fisttp repnz fsubrs or mov sub cmp (bad) (bad) aam std push push pop in mov fucomi out push xchg std stos les adc push xchg jnp xchg or jbe push lret cmp xchg mov test stos cmpsl out sub shrl add or pop fnstsw fstps (bad) fstps mov fwait sbb es mov and push inc mov or aam push add pushf ret jle insl or mov xchg inc jmp inc fcoms fs popa pop push xchg sahf lret push push jg mov stos daa shrb pop mov shrb sahf mov ficomp roll cltd pop or mov insl cmc clc int3 (bad) pop dec xchg xchg ss push xlat pop jmp xchg add js lret fsubr and pusha (bad) or pusha dec lock imull dec xor inc lods aam mov in test dec daa inc out call sti ret (bad) adc les mov and shlb lcall lcall mov add ret iret sub mov mov fmul jp gs shlb or inc xchg mov pop pop sbb enter cmp ja add lahf (bad) setne sbb shl stos push (bad) test ficomp cwtl sbb pop stos lcall loope cltd push addr16 aad movsb fcoms hlt inc xchg adc mov mov out fwait or push push fldcw sti out aad cmpsl mov movsb icebp push (bad) pop dec cmc xorl stos bound push mov mov rorl rol ret fimul out push jge cmp out popa adc mulb ret mov xor pop scas and push lock push ret xchg add push pushl popa jg pop inc imul xchg test clc mov fbld push divl cld jg (bad) test mov pop (bad) es cmp pop sbb aaa test xlat pop data16 pushf daa lods mov ret dec inc or xchg xchg push (bad) adc call sarb pop adc mov jns push mov cmc add out fcomp lcall push ffreep sbb addl xchg jl mov imul aad sbb add outsb lods ja in or sbb xchg ljmp int xchg dec out add push cmp aam mov xchg sti in jae insl jb pushf mov xor outsl mov xchg movsb mov (bad) sub hlt mov rcrl xorl call mov ja xor sub inc fs aaa (bad) dec sarb add lahf cmc insb push fmuls scas mov sbb dec fldpi xchg mov jmp and aaa arpl xorl dec sub out cmp dec ret in pop adc mov repz dec dec jg push xor pop aas inc and sbb jae inc fisttpll adc xchg es sahf mov int3 fldl2e jb repnz push and fcoml ja popa and add nop test xchg xor out lret and leave mov sub mov add mov rclb out xchg pop inc icebp adc in add leave inc mov ljmp fnsave loope jg mov sbb add lods jno mov stos add arpl sub loop call xchg out adc lods push pop int or lock pop outsb fidivr loope mov decb push adc add cwtl jae pop mov and jne jns xchg push dec push test scas add int pusha sarl shll xor add jno jecxz ret les push lret ret lock inc nop cmp addr16 loopne mov push scas or mov mov test cmp dec cmpsl inc xchg mov dec mov jno dec mov jmp mov and or push mov pushl setge jp pop mov jbe repz mov loop pop out fcomps pop and pop pop imul icebp aam jle push jmp xlat mov cli xor (bad) push cmpl xchg xchg add mov lock dec movsb outsb outsb xor xor mov inc lds add inc cmp leave pop sub ret mov les aam (bad) data16 loope mov aaa push out mov stos dec cld and push repnz xor lods jbe ds imul sub aad (bad) outsl pop push jno mov jmp jmp dec xchg int push dec in ret mov or jge xor loopne dec jo xchg mov mov out sub aam aaa push popf add pop (bad) aas in pop or lea in addr16 aam jl lods lods mov xchg popa (bad) jl (bad) mov jae (bad) ljmp addr16 xchg mov cmp sbb adc dec add xor and scas mov mov test out sahf addb insb xchg xor insl xor add add cmp test ljmp or or (bad) je mov cltd arpl mov cld lret (bad) and sbb bound sub or iret pop pop sahf rcr xor orl mov push jmp sbb lods js mov (bad) xchg cmp add ret sub mov repz dec adc mov inc mov xchg add cmp or movsb or jge jl adc imul stos jmp (bad) incl rolb scas std sub imull std xchg xchg mov int (bad) repz xchg cmpsl jo addr16 testb loope daa cs adc popa mov stos rcll cmp xchg fs mov pusha push fucomi fimull jno std xchg pop scas jae cltd call clc push inc loopne (bad) adcl aad jne shld ds cs xchg mov inc pop dec mov sub fldl xchg mov aad mov in aaa stos fwait or and (bad) pop cmpsl xchg in or mov lods repnz sahf lret inc add data16 push fimull xchg xchg jmp fbstp arpl iret enter lea repnz outsb sub jl in jmp add pop xchg mov cmp adc xor cmp fildl sub adc rcrl xchg add sbb out pop (bad) ja jmp or js pop push sub movsb or adc mov leave add xor pop or fwait push cltd movsb and adc insb sahf cmp inc and mov mov push pushf outsb cmp fild test js cli jecxz push into cwtl adc dec pushf dec fcomi out les pushf iret jb (bad) jnp mov (bad) dec jmp jae (bad) adc sbbl sbb inc shrb mov addb pop inc jne push rcl sub sub jae cmp aam insl push adc out mov cs jg bnd and rolb rclb roll outsl xor mov push (bad) cmp mov xchg pop nop in xchg pop scas mov xchg popf or lcall push push adc xchg (bad) insl mov fwait cld cmp std mov hlt leave jae mov adcl xchg repz fwait xor sbb or pop mov (bad) jo insl ljmp (bad) stos xchg jne dec jp mov dec mov inc (bad) ret movsl pop fistpll push push repnz pop mov cwtl mov push pop out sbb repnz sti stos fistpll arpl test (bad) mov sbb leave dec enter inc and mov scas sti pop repnz and push ret in pop xlat cmp and mov std xor arpl sub cmpb stos pop pop mov jmp jmp xor sbb in pop xchg ror or add out loopne jmp xchg and sub movsb leave mov int3 sarl mov frndint cld inc clc inc inc scas mov jp mov mov push movsl push inc testl (bad) mov push jge add jmp int cmp jns push stos xor shl jno inc stos xor or aam xchg es pop mov push and pop add rorl xchg jle fsubrl dec stc mov xchg test out js iret cmp push movsl cltd stos popl outsl in push test sub jg and sub xor fcmovb call js into movsb loopne sbb les xchg jb sub sbb mov (bad) jnp lock mov mov out test shl push insb jmp (bad) xchg sahf mov push cli or nop push sub fisttpll mov shrl ljmp mov pop stos sbb mov lock add dec pop jge jne iret stos lods mov push xchg int3 fstps adc xor lock inc ds dec arpl loope push mov jo mov mov scas add add mov add inc jnp push in (bad) jb stos cmpsb pop test cmp cli stos cltd push lret lcall outsb imull adc jecxz jns in dec push (bad) stc repnz dec cmp stc cmp ficom scas out pop push lcall and nop sahf jo jmp imulb fnstsw cmpsl sbb inc and and add cmp pop mov (bad) sub icebp mov jae xchg mov pop sub sbb sub and jmp push and mov rolb pop mov add add daa mov cmpsb xchg pop push mov jp sbb cld sub sti and push cli jecxz cmpsl lcall xlat adc xor loopne mov fwait subl mov dec mov push shrb dec in divb rorl out jns test jp inc pop setl and stc loop ds imul mov fnstcw add out icebp pop inc mov or adc adc roll push dec loopne ja int3 adc mov inc das jb inc cmp hlt jmp mov inc sbb and fwait cmpsb xor fistp push jno gs and notb outsl sar pop fbstp nopl popa cld sub fstl lcall jp lret sub arpl push pop aaa xchg pop mov sbbb inc icebp sbb pop test mov ja int3 dec iret fnstenv sti cmp outsb jns fdivr xchg adc add dec xorb add cmp andl inc mov dec jl add add gs in xor cmpsl test movsb pop jmp and and xor pop dec mov and xchg mov pop inc mov xchg inc jae dec jne inc ljmp popf mov mov xchg jb mov or jmp mov sub cmp pop dec dec pop pop push movsb dec xchg shrb rclb loope mov movsl (bad) add out std push shlb lahf cmp sbb neg data16 faddl add sbb sub or movsb pushf mov jecxz sub sbb (bad) loope je hlt js andl int cmc stc rcll clc mov popf jge add pop or pop cs out fadd adc arpl test xor inc dec jmp ss xor movsb jp rcll sub bound sahf subl mov (bad) jmp fsubrs inc iret jmp mov dec xor mov mov dec mov inc xor jns jmp leave mov sub cld shr adcl test aaa and das dec cmp popf clc cmp (bad) inc je out mov lret in ja movsb popf pop sub jae lcall sbb (bad) cwtl in cld pop cmp ja dec xchg adc (bad) mov push push add push mov das aam aaa insl xchg pop cld dec ret add pop stos outsb pop mov or shrb mov and xor jecxz push stc dec test and sub cmpsb icebp clc or and push into (bad) aaa imul (bad) cld add lret mov cltd (bad) aam arpl int3 xchg sub xchg lea adc push mov sarb iret aas jge jnp enter sbb adc push icebp dec push ds pop inc and out xor dec subb sub pop stc fs sub dec jae jo pop insb mov stos dec cmc call sub rcl stos pop xchg cmp int3 xchg mov sub adc into pop dec ret push movsl fnop out mov add loop insl (bad) imull push and adc test jae push mov and or mov push ds xchg xor pop in cltd push lret loop rclb xor (bad) pop mov (bad) roll ret (bad) das in loop pop in sti and fucomp adc subl loope,pn xchg and loop fsub (bad) mov mov (bad) inc sbb sbbl or lds mov int3 and idivl data16 lea ret sub mov fsts adc fwait js adc rcll cmpsl clc add push xor fcmovnbe std xchg call sarb mov xor test push inc push mov repnz (bad) (bad) pavgw mov (bad) xor dec inc pop mov lea daa cmc jge in out mov bound pop xchg imul sbb idivb inc xchg xorl std jle addr16 mov or movsl adc das push imul dec jmp scas idivl sub fstpt dec rcll mov pusha and inc and pop adc mov push sub mov mov je sbb xchg mov inc dec rol dec mov mov fisttpll fs sub jnp subb in or mov ret mov fisttp fcmovbe jne sbb mov imul aaa pusha pop cltd in (bad) jne ficomp sbb inc xor pop fwait jno pop jle dec and outsb iret ja sahf test and sti jo sbb mov add xlat push adc dec pusha push test (bad) push xor das xchg fisubr jg mov mov jmp mov pop inc mov int3 sahf xchg xor shlb hlt pop ljmp jp jmp sbb sbb mulb into aas push shl inc test lds cmp xor idiv fsubrl in cmp or mov mov inc xor mov pop xor push (bad) lea push mov lds iret xchg in pop jo stos and fldl2t std jmp xchg (bad) xor aam gs push cwtl lret lds fldcw cmp xchg outsl ffreep pushl call sub cmp cmp sbb add jnp push test iret sub movsb in mov fcomps loop add scas in lcall cs outsb test dec xlat (bad) negb popa pop stc mov and ljmp (bad) push cli in sub arpl roll xchg fsubrl jge jne dec xchg scas inc or jl pop scas (bad) pop adc stc fcmovbe sub sub push notl inc bound mov cld decb lret lock inc test int3 inc fs std dec int3 or loopne call or dec popf fnstenv mov sbb sbb mov push es cmpsb fisttp cli push inc add outsb cmp pop sub cld adc cmp fdivp xor test push out and movsb insl xchg mov repnz popa and mov mov fs in sub add add aaa sbb aaa cmp lret mull jnp into mov fdivrs dec and sub add xchg mov movsl inc xor (bad) movsl mov jae lret sahf push leave pop mov movsb sbb daa aam adcl addr16 test stc hlt push repnz pusha stos inc fdivrl clc and out mov push xchg movsl jb lds pop push push rcll jnp pusha pop imulb cmpsb aam jmp hlt mov shlb out pop leave xchg (bad) mov negl push daa xchg inc adc pop and pop push pop or imul dec repz cmpsb xchg pop (bad) out cmp pop xchg (bad) jo test repnz (bad) cltd pop stos jae sbb sub mov fild dec pop xor sbb mov stos das inc xor adc add rcll daa add push loope daa rcll loopne lahf xchg lds jmp and lds cmpl push mov jne enter jno pusha or push in push lds lea stos push pop iret out adc (bad) data16 pusha rcll aad jl data16 jnp push in sub xchg inc lahf or push adc clc xchg pop sahf jge (bad) cmp inc push pop jl jg cli jo cmc push add ja out pop add push pop push jb xchg push add or stc mov xlat aad std xchg shr out push push adc enter mov daa ss stc negl pop mov mov inc xor inc je and add es js or pop and paddusw cmp (bad) cmp cs out insb xor aas in cmpsb fistl add add lock inc mov inc mov push inc les inc movl sbb imul loopne cmp (bad) pushf sub sbb add es aad lds sahf scas pusha mov (bad) in lret ja fistp or jnp testb adc sbb push mul (bad) fs mov jbe movswl cmp lret mov xchg bnd cs stc mov js adc or lea test out mov in and inc lea inc or les cmp pushf loop aad lcall sbb (bad) xor sbb push ss std clc inc dec dec mov sahf jne pop dec add adc jns test in lock push idivb pop mov addr16 mov cld movsl mov mov push pushf xor rorb cmc adc sbb inc je mov rcll push xor push fwait or jbe std out sub cmp lods mov inc dec xchg aam cltd movsl fildl cmp mov shrb loope jecxz pop mov ja clc xchg jmp jne js inc adc cmpsl fs adc pop pop data16 or and ret fwait (bad) jmp lret fstp xor hlt dec int and adc jns push int sbb jp cmp dec sub sbbb adc adc xchg adc out or push test add test adc jns pop lock insw jbe iret out add mov cmpsb or dec in pop aas mov insb pushf adc push mov dec sub push cwtl lcall cltd sub movsl push push jb jle in pop sahf in sub insl leave fstl add fs dec rcl scas xchg cs fisubl rclb dec pop mov push repz je mov and mov mov cli aas xchg je jae jg xchg xchg mov pusha cmpsl cmp add data16 lret and push sub inc add lods xor cmpsl add adc jbe clc lods insb fldl movsb scas dec cmpsl mov mov (bad) jne leave xchg sub dec fsubrl ret lcall out xchg aas push xor jno jo mov and inc fstl and push inc push push inc imul (bad) cld xchg push mov leave cmpsb lods inc rorb bound push push popa mov xchg testl adc mov ret popf aaa loope sbb cwtl and dec leave pop xchg stos cld mov test cwtl jno mov scas cs add out dec mov push dec jno dec jge ret iret xchg std bound push xchg inc in movsb mov inc lea lret clc dec pop sub pop loopne (bad) adc jb cmc or add inc ja pop addl dec lcall imul mov aad aaa sbb stos push dec mov push mov sub stos out dec add xchg dec (bad) scas stos andl (bad) or inc jg pusha cmc pop out and stos ds cmp or bound inc mov test ret push add cmp andl dec test fstpt mov gs scas pop dec loope ja lret insl pop inc fidivl iret dec xchg adc sbb stos lret sti (bad) dec push (bad) clc iret hlt (bad) (bad) push lea incb shrb xchg push fdivrs jmp push pusha stos pop (bad) push pop dec (bad) inc insb xchg cwtl (bad) into pop push cmp fisubl std sbb fs in mov or sbb and (bad) idivb push test loopne pop ds dec sub ret lret xor xor push dec test push or lock mov andl xchg adc push cmc mov (bad) sub sub and (bad) cmp or and add cmc les in fwait mov mov dec push inc lahf out xor mov inc pop dec call ret jp mov into add fisttpll jmp sahf jp into pop nop push data16 dec scas mov gs inc jecxz nop rol adc aaa xchg mov bound and loop cmc or pop dec popf jp dec push and je xor cli mov rclb hlt and sub or mov cmp or inc xor dec out mov shlb cmp push icebp or decl push inc rorl jle xlat fwait movsl mov dec inc cmp or sbb rclb test push mov fwait mov into ret divb sbbl and or pop rorb jge bound dec loope dec clc pop add call xchg insl hlt inc inc jge inc xor aaa (bad) sub dec xchg insl or add gs push loope ret ret sbb dec fisttpll dec xor cmp jmp push mov sub push jmp leave popa xor loopne repz ret sbb dec bound pop pop mov mov out add lcall lret dec hlt cmp mov dec jmp adc insb pop repnz mov pop stos enter mov hlt mov push inc jno ror or dec jno mov pusha test lock sbb push xor pop push push mov repnz lods movsb dec ret (bad) lahf loope (bad) mov out push mov outsb pop jo adc sbb dec sub ffree jo lods push sarl aas push pop xor gs pop aam paddw (bad) outsl cmp je (bad) push lock aas xchg adc push sbb in jns popf push lret out in mov xchg mov cmc hlt pop cmc insl es adc push or sub inc scas setl xor jns jne jmp add mov adc out jo mov rorb pop movsl sarl pop add icebp psubsw and adc inc mov test mov add jb pushf push mov jp jge inc shrb and out ret jne jge dec popf and and mov cmp cli test xchg xchg add cmp enter dec lret mov aad icebp sbb mov jecxz andb fstps mov mov mov inc pop push out mov cltd inc les fimul mov mov in scas test ljmp mov dec xchg jl sub mov adc cmp or (bad) fsubl jg cmc insb ljmp adc (bad) and xchg sahf mov mov jle adc aam fisttp xchg addr16 subl and arpl pop jo test mov and sti out lahf in sbb stos sub mov sbb add push je popa jge sub push daa xchg mov inc adc (bad) push mov aas mov movsl cwtl push test movsl sub div or dec les (bad) jns rolb fnstenv rcrb xchg xor jb mov jecxz int cmpsb cld movsl lret mov nop aad sub imul push shlb sti sahf mov cwtl das (bad) int3 adc jns loope xchg call fmull add push mov xchg js dec ja (bad) jb test pushf scas lock lea imul sarl stos and sbb fdiv or mov mov js clc ret nop test out out lods icebp xchg inc scas aam push sub imul adc or aad and dec lds cmpsl mov xchg cmp mov adc aaa push cltd inc mov add mov xor movsl sbb (bad) cld (bad) popf dec mov push dec cltd out lcall sbb jns push jge jo mov bound pop push push je add out cmp sbb cmp (bad) sub cwtl cwtl jge jns out (bad) cmp sub test cmc fnsave or outsl xorb imul test repz fs push add pop pop or sub mov mov fsubrs cmp bound mov or lret adc std std movsl imul push mov add sahf loopne mov fidivl mov mov mov repnz dec dec sbb in mov in push repnz cli cmpsb xor roll or add popf mov lahf sbb push adc mov movsb add jbe sbb inc ss inc pop mov jge jl push jne sbb fsubrs pop cmc and sbb mov movsb pop ret stc ljmp pop lcall xchg adc cltd inc ss in adc push push loopne fldt movsl movsb lods cmp jmp int3 fcmovbe pop pop pop loopne aam mov test and xchg inc vucomiss mov repz pop das push pop lock iret imul adc cli cs cmc cmp or xlat insl push (bad) pushf es push cmc addr16 imul es ret push jl fld pop mov pop mov add jnp and test mov cvtdq2ps scas data16 int3 mov jmp or pop or jp test test jne cmpsl (bad) cli imulb push leave (bad) mov mov imul inc and in xchg adc fldl mov xor dec lds mov out xchg std cmp pusha lock stc pop push repz pushf pushf or mov in mov jle mov es mov sbb iret sahf (bad) lea pop dec jle jbe cmp arpl adc mov push inc push rcrl push les sti shrl fimull cmp cltd ret xchg jg cli xchg jecxz out jnp lret out cmpl mov aam pop xor fldl2e pop sar pusha push xchg push inc push in popf xor imul pop sub push add ljmp sbb cmpsl adc add insb inc mov cmp cmp imul push fdiv (bad) mov mov lcall or movsb pop or stos inc (bad) das mulb cmp (bad) pusha lahf enter test jle dec xor jno cmp lret outsb enter cmp outsb das sarl add repz push cltd mov dec iret mov popf cs lock and or mov add popa gs push sbb add push or pop adc adc hlt popa ja inc sbb jl pusha (bad) mov or outsb xor mov push push ja fwait stc adcl es loope,pt cmpsl push mov fdivrl in adc mov cmpsl or imul cmp inc cwtl jae aaa and dec ret fs popa mov cmp fsubrl mov les fisub and sarb push (bad) jle jp test pop xor mov (bad) push imul adc out lea jo sub mov fsubrl lret mov (bad) addr16 mov jbe cmp or pusha out imul sub cmp (bad) out jecxz (bad) popa ret fcmovnu nop dec std pop pushf xor xor jnp mov or lods bound mov mov mov pop or test repz fiadd jno push sub (bad) sbb std push int3 outsl ret inc cltd (bad) sti (bad) xor cmp mov es out xor push iret shrb loopne pushf lahf arpl pop sbb sub ds mov cmp scas pop pushf inc sub cmc push adc mov jge and push stc push mov adc xchg fdivs xor add push sbb clc cld cmc (bad) movsb int3 jno cmp dec cs mov ds add cmp lods test lods adc test jno mov xor imul xlat jle jg xor int3 in or dec jb inc jp adc inc sar lret push xor pop xchg xor sti lea xor stc int3 and cmpl push imul cmp cmp pusha fwait cld stc mov sub inc xor cmp popa rclb or xor cmp adc or aam sub adc out mov sub jle int out xchg sti or fimull xchg sub xchg int3 cs xchg add adc push mov (bad) mov and jmp adc and adc les lds call xchg jle cmc add or loope push rclb sbbl cmp inc ret mov test in les pop les mov rolb add add pop push incl (bad) aad pop jl inc dec push inc mov into mov gs push pop and lods pusha movb pushl xorl faddl test inc loopne pop shll fwait pop adc or xor mov xchg aam dec xchg mov out jo xchg pop mov and fwait stos adc cmp cltd inc mov pop or ficompl es mov xchg cld xchg cmp int3 jns xor mov test adc pop ret mov or mov mov in add cmp mov in inc repz es sub mov jbe movsb imul aad inc xor lahf das xchg mov pop stos lahf pop sbb mov push pushf popf std test daa (bad) xchg lcall adc stos in cmc sub test inc sub sbb sub and in jns (bad) lea xchg sti stos nop inc mov mov cmp cld mov cmpsb sbb pusha mov mov mov ds hlt fwait and fcoms fisttp pop xor das mov cmpsl xlat aam or rorl pop flds xchg mov inc inc cld mov lea test mov push jmp jno aaa ret call sbb add adc mov mov push ja sbb hlt cmp xor mov insb mov arpl mov inc outsl in rclb mov inc pop dec (bad) jns js pop imul popf ficomp (bad) fnsave adc inc bound cld (bad) jbe jne ret (bad) arpl dec mov xchg jbe mov sub das or pop or push fcoms bound or fs mov xchg imul cmc mov pop outsl inc sub mov stc sub shrb mov int mov rcll loop and push mov and lcall rorb adc loopne (bad) (bad) jbe mov xor mov inc push jno cwtl pop (bad) daa fwait or fst out inc add jb cltd mov dec pop enter or xchg lret enter mov idivb mov inc push icebp ja cmp out inc sub sbb hlt (bad) icebp scas sahf and sbb push xchg xor xchg int3 mov loop mov pop scas dec add lahf jg clc leave in xor iret cwtl flds cmpl (bad) push arpl sbb rorb aam or xchg xor pop inc mov push mov cltd inc sub imul cmp cld (bad) (bad) push out fdivl dec jne sbbb rorb fiadd stos jbe repnz xchg repz add pusha adc push lea mov jmp lret adc pop clc cmpsl stos inc add (bad) or icebp sbb std pop jo fs je jmp mov lret cmp aam xchg lock mov xor push mov lret ljmp (bad) fnsave pop sub inc jmp ja dec ss dec push add (bad) sub and iret insl mov sbb mov pop ja stc push arpl push ja fwait jnp jns jmp xchg xchg sub out cmp jge adc ror jns (bad) aaa hlt jne jecxz add lcall or push adc sbb and mov fcoml vpacksswb gs add stos xchg xor pushf pop scas fsub pop arpl xor mov mov sub data16 adc int mov pop aas inc or pushf sbb inc pop insb in nop adc scas jne in push fistpl lods stos mov sbb add loope adc xor cmp lods pop mov and cld fidivr fsubs test dec add mov jno mov cmp cli and pusha mov leave push ss cmp pusha mov pop sahf dec cmp movsl or inc sbb jmp dec rcll retw adc mov (bad) fcomps cmp lods stos dec negb push addr16 mov lods jmp mov xchg xchg loopne xchg lea adc inc les xchg pop mov mov imul addr16 popa rorb jmp mov mov cli sbb shrl inc inc popa jmp rcr shr mov flds stos es dec cmp pop loopne mov adc and adc sub and outsl ss xchg jae add out add fimull stos inc lret fs call rcrl cmc mov scas popa pop and mov push or std je (bad) jbe inc mov test jns mov (bad) mov outsl mov testl or pop mov fisubl sub inc pop or insb xor test call pop mov sub cld ja add sbb lods stos sub out adc scas (bad) mov inc scas add jbe mov in lds (bad) lds (bad) sub or in mov pop pop xchg iret ja (bad) mov jg call sbb sub repz jae aaa mov stos lret add aam popf rcr xchg mov xor sub lcall cli inc cmp sub (bad) mul push ret lea inc lret test jnp and stc mov fdivs aaa xor sbb xor movsl cmp data16 sub (bad) cmpsb cmpsb cmpsl mov add add or stos add mov dec test outsb inc dec jmp inc sti xor add std mov mov dec (bad) and int3 in (bad) mov jo xor ret sub fwait jno out push jmp fdivrl xchg pusha adc out sbb jo test add scas push mov jno bound adc xor mov push lcall adc add push sub (bad) mov dec je sbb xchg icebp in enter adc mov cmp and adc xchg cli shll mov and outsb push and das adc mov cli out sub mov or and mov sbb cmp sub xchg jno fstpl push gs mov pop dec js adc xchg push push jg pop int (bad) jbe dec add dec pushf rclb push out mov and jmp lret push sub push mov enter mov call jno call xor mov das rcll lea (bad) cmc in call jae addr16 sbb pop push dec adc insb mov mov or push and test icebp (bad) cmpsl bound pusha xor clc out push sbbb mov inc js and outsl loope leave loopne xor aas in in stos ffree ret ss mov and sub ds jg sub mov mov push cli or mov jl outsl aam sbb or cmp aam incb pop mov dec mov inc loop out ffreep adc fsub lods jge xor push iret mov sbb repz dec sub mov and cmp jle xchg subl xor sbb jno,pn pop push dec jae pop xor sub or mov lret fsubl hlt sar jbe maskmovq negl push xor (bad) repz push xchg inc es sbb sbb fcoml mov sahf adc xor push jns lret mov (bad) jo cmp dec pop inc ret repnz imul and pop jecxz je pop jb inc out jecxz ficoml jno test or sub fldt dec ret mov in or mov jle mov sti movsb adc sub lods inc shrl jg jle jp es mov pusha push xchg aaa inc addl adc push xor mov lret cmpsl pop sub imul fisubrl mov int3 xchg cmp (bad) xchg pop test push fs mov dec cltd push inc enter sbb jae jnp imul je ss ljmp dec lret or in stos js or dec jmp mov adc push scas mov rcll xchg jbe insb movsl (bad) les sahf rcrl sti adc jp push mov ret xor xor push cmp ljmp pop je ja and daa xchg dec das mov mov fs iret add addr16 xchg inc (bad) fwait or push rcll divb sub stos je out push push cmp loopne and inc negl iret mov xor (bad) aad sbb lods mov int dec div or or mov push xor mov push and lcall fisubr (bad) cmp mov pop cs nop add movsl popf dec cld xchg lea loop mov sub stos (bad) in pop in xchg ss out push add daa data16 jbe sahf lock cmp mov jp xchg sahf push cmpsb xchg cmp mov fsubrs or adc daa cmp les adc lahf mov sub stos rolb xchg jecxz ret and mov in mov loop cld push stos cs lcall fildl cmpsb in xor adc or or push ds xor push (bad) cmp mov xchg mov pop scas call out insl or sub and push jns sbb inc push repnz jmp xchg pop ror bound dec int3 or shrl lods jmp (bad) insl sub add imull fidivrl (bad) (bad) or sbb aaa (bad) mov (bad) fucomi dec test inc inc mov mov (bad) add mov push jle outsl inc xor rcrb pop cmpsb test xor pusha fsub stos fdivrs adc mov sbb ret inc lock xor int3 in sub fs xchg adc mov xchg int3 call and mov inc mov dec cmp out sub aaa pushf jle or adc test scas inc aaa mov out xchg ljmp clc (bad) fdivrs (bad) mov (bad) iret mov in push inc mov nop cmp ljmp sbb jle stc adc out xor mov push dec push jnp sbb jmp and daa in inc rcr push scas aaa pop (bad) aas dec enter jno inc pushf mov push adc movsl fbstp push idivl rorl push cmp int3 movb xchg pop fistp aad js les movsb cbtw xor outsb (bad) in lret dec mov in outsb cmp adc mov pop xorb cld fcmovnbe inc pop icebp lds push pop aaa cmp or movsl sub mov imulb rcrl insb gs mov (bad) lret stc popf xchg push mov lea in subl sub repz sub add mov xchg push fld1 push rdtsc or pop mov icebp push mov and (bad) jns jg aam sub aad iret lods scas and cli test cmpsl enter mov sub pushf xor pop add xor std insl and les xchg mov push call xor mov fs jle imul stos imul mov xchg cltd inc jne mov imul push and push inc cld pusha adc adc or rorl out insb cmpsb sahf pop les mov mov pop mov outsb subb push mov inc pop pop addr16 lcall mov jle andb mov xchg jg cli sub or in movsl mov int (bad) fadd ja stc dec ja cmpsl nop pushf cmp xor jp inc ja mov sub cld ja or xor cmp mov cmp mov out outsl (bad) mov xor inc mov frstor or icebp cmpsl sub mov stos test (bad) push jne mov pop outsb hlt xchg cmp xchg adc int3 dec mov inc repz outsl inc jecxz mov enter dec mov mov add sbb out fdivrs mov scas sbb dec and lcall test daa sbb or push pop cltd ds test fiadd mov mov xchg mov lahf sahf jmp pop clc xor push xor loop add imul mov and sub enter bound call adc or mov xchg pop and mov xchg jbe sub jp push shrl push (bad) xor push mov pop dec and stc insb inc daa fstpl push lret mov ret mov les push test roll jnp adc jno mov movsb hlt rcr pop imul mov pusha cs cmp or or out add lahf aad mov inc jnp cmp (bad) mov push imul clc fmull adc mov cwtl xor cmp jg outsb fidiv inc push stos mov xchg (bad) mov rorb and cmpsb int3 fistp repnz lret loop push orl outsl imul adc pushf push cmp sub cltd jns test out mov inc mov std xlat pop es xchg and cltd sub adc repz add push xchg subps jl jne adc pop sbb mov mov stos inc leave mov and std pop push jns mov cmp negb push jne mov sub stc std int3 in loope loope rcrl xchg xorb cmp frstor clc sahf sti test mov sub shll xchg ljmp in inc fs or mov xorl pop jg ds cmp (bad) je mov je dec mov pop jg add adc or sbb cmp stos mov inc cmp lods and cmp fst loope inc fsub mov (bad) insl and leave int pop hlt aaa (bad) fsub mov ret push sub loop or inc or dec stos sti push sbb add jae and aam movb cmp sub stos push jle cld jmp mov mov push and pop jle mov xchg call or pop mov pop std jbe ss push fwait sahf int sbb (bad) jg rorl and imul mov ss jecxz and sbb push push dec mov mov cmp sub dec into cpuid adc je mov in ja inc addr16 std cltd adc pop xor push iret mov inc sahf and movsl cmp mov dec and sub cs inc pushf aaa adc xchg mov dec fucomp imul int inc jg dec pushf test inc sub adc sbbb out pusha popa (bad) fs adc sbb loope xchg cmp inc sahf sbb scas divb (bad) lock in and xor insb sbbb sub in xlat movl push das dec push addr16 jecxz adc js stc and mov aaa jnp das ds icebp lods jp dec adc mov aaa enter inc movl shlb sub test cmpsb lret (bad) cmp or mov iret pop push cmp push jnp (bad) mov out cmc bound insb in in ds or push push ljmp fisub xchg jmp xchg xchg les in push sbb cmpsb mov adc or xor or jnp xlat pop movb add aaa xchg xor adc enter movsb push or pop call mov push std test out insb add and cmp xor sarb (bad) in das enter jno jnp movsl dec and lretw xchg adc loopne outsl jb inc daa nop imul dec nop xchg sbb xchg in int3 movsl adc push inc cwtl aas div lret movsl cmp add cmp shrb call (bad) and xorl mov push repnz sti popa pusha clc inc (bad) fs pushf lds jge xchg pushf (bad) repz arpl js test shrb pop inc xor stc and (bad) dec mov fimul int3 inc mov lret loop pusha add hlt ret pop add xlat enter gs and push push insb mov shlb mov cmp jle jno mov cmp (bad) sub sahf mull cli inc push add mov fmuls add mov pop cld inc adc rorb xchg cs (bad) mov pop pop and rol and add jl dec lea test shrl out fiadd adc mov bound fwait jecxz mov cwtl sbb rclb fwait cmp dec or push dec add lock js sbb popa sbb test jl adc or mov aas xchg inc hlt jno sbb insl xchg add sbb xchg pushf dec jle and (bad) mov leave loopne sbb out pop mov (bad) out rol lea dec push cs mov into cmpsl add test mov and xadd jns sbb es in (bad) aaa loope mov (bad) ljmp and add mov outsl inc mov int3 pop inc sbb xorl iret xor notb pusha add loopne (bad) pusha mov int pop test movsl cmp inc mov mov repnz dec jecxz sbb sub in add sub (bad) jne lahf ret jae rcrl pushf data16 and outsl adc sub js inc xor pop in (bad) call sbb rclb (bad) imul mov ljmp and xchg cmp scas sub push daa lock test pop pop xchg mov pop jg jmp stos daa jae pop fwait sbb mov sub cmp mov inc push test ror dec popf test xchg stc in add leave jge sub ret insl lods clc out scas fiadd adc test shl mov pop (bad) push cmpsl pop cld pop leave sbb (bad) (bad) cld cmc mov mov add adc test and mov sub cmp adc push fs clts call sbb fisubr jae mov jecxz fcoms cltd fs (bad) jno mov das push push imul repz mov (bad) sbb fsubrs push sub in loop sub popa out fs into mov jmp sbb test or out lods (bad) jl lds jo les aaa in (bad) mov inc or xlat mov out adc icebp mov dec iret repz add sbb pop inc cs mov or pop jae xchg push mov or (bad) out ljmp js adc (bad) cmp std mov out bound sub fdivs jnp idivb adc fist xchg test fdivl jp dec pop pop hlt cmp mov adc popf repnz mov loop stos push (bad) scas dec push nop test or arpl not xchg fdivp fldenv stos mov outsl jb jo test ljmp cmp das ss jecxz mov pushf loope mov lcall inc adc repnz jl mov enter or mov or cmpsl bound sti or and sbb and jecxz jbe mov inc ret ret mov adc sbb addr16 pop std fs pop fcomps cs pop int3 cld ret clc lahf jge add mov pop xor xor pop xchg cmp dec sbb and adc mov cwtl or xchg push xor cs pushf jbe dec add dec ljmp shl xchg mov notb sub cmp stos mov fbld aas add pop fisubrl sub sbb imul mov push jle arpl dec in out sub push adc enter inc int fiaddl std (bad) xor clc sub pop or mov dec aad test cltd xor inc sbb in dec jecxz mov lods jne adc push pop lret movsb fstpt sti into lcall cmp mov imul mov fs mov jge inc es xchg jl scas push cmp stos lret stos dec jecxz sbb out fistpll iret xor and dec leave (bad) xor aam daa mov push cmp xchg push jns cli mov mov adc out add dec fiaddl cs dec cmp stos in add lcall adc add pop (bad) adc jns mov add xlat int3 sbbl and or push inc xchg stos imul pop rorb pop xchg or dec cmp adc pop andl mov call push mov cltd das push push lods adc mov mov push mov aas (bad) mov mov inc sbb adc add xor test fisubr pop mov es or push dec or hlt iret pop test xchg push sbb or mov add pop test adc mov lock ja fsubrs lcall sbb js insb sub in adc imul call push lcall rorb lock mov dec add jmp sub jne lahf push fstpt mov outsl rclb ja push mov nop mov pop lahf fwait add push (bad) mov ret mov cmp and hlt adcl dec stc repz mov mov (bad) mov cs fcoml faddl push and test cld dec scas mov dec int3 sub les xchg jbe and in jbe cmp mov orl add add lds xlat dec and push into das push lock mov xor cmp and ret cli std icebp scas inc inc push int xchg loop adc inc pop out jecxz shlb fidivl cmc jg cmp cld dec add jmp daa push push push fs mov or lds outsl or xchg xchg xor scas jg mov push adc cmp mov hlt adc movsb nop pop sub idivl scas inc dec test stos xor (bad) cmp cmpsb pop ret (bad) add (bad) int3 mov popa je jbe pop repz repnz jmp test rcrb lahf push inc push jo std sbb das nop dec mov jle sti xor or nop lds fwait data16 adc ja mov push jb daa dec mov dec js jle fiadd pop rclb and insl shrl or sub cmp cmp inc sahf call sbb jmp jl push mov cmp lds lds stos test sbb scas inc mov movsb mov xchg dec jnp jmp aas add pop sbb cmp pop adc gs lret cld cmc fsubrp sar lods push dec in mov jb jae into ret fucomip pop and test xor adc xor push push push jp cmpsb cmc and mov adc out (bad) cmp or push push xor xchg sub add test sub and pop leave neg loop and loop mov mov les adc aad (bad) call cltd or xor subb or mov in sub lcall and cmp and mov bound xchg daa gs sarl inc icebp enter mov fstps loopne (bad) cmp mov pop test popa push icebp sti clc loopne int3 inc sbb adc mov loopne jno adc push inc add or mov sbb jge and sbb gs push insb subl xor leave fwait or scas xor push or push xchg or iret js imul into ds mov push (bad) lret ja leave mov and lds add dec cmp test push inc sbb dec popa cmp xor (bad) mov pop (bad) adc xor sbb mov lea adc mov fdivs ret rclb pop imul popf clc pusha and call movsb lret scas icebp push int3 scas fistpl cmc mov dec cmpsl je daa adc lahf lret mov clc mov jg hlt inc add jb data16 xor fistpll cmpsl mov test inc xor ljmp les jecxz sub lahf inc addr16 inc pusha addr16 in inc sbb lahf or jns iret push add jle ret mov shlb rolb push adc int sbb push pop xor dec cmp aad (bad) adc ss frstor mov jae adcb (bad) fild push cmpsb add cmp pop inc (bad) jecxz bound out xchg xor inc les jg sbb lods in icebp add or mov dec adc and sub dec xor inc out add jl pop mov lock xchg and repnz mov mov pop pop out (bad) jbe inc dec push mov xor xor dec (bad) inc jae add inc fdivrl iret dec lea cmp leave sbb mov push jp test iret (bad) jno adc add inc test add movl test aam push movsl add or mov mov pop repnz gs inc sti pop lods xor or mov stos dec insb aad subb mov lock adc push inc call outsb push movsb fwait (bad) repnz inc es hlt int pop fs push xchg in mov add addr16 mov jmp fild dec xchg push call add js repnz xchg enter scas adc repnz scas and ds jl mov push push cmc add loop clc xchg int3 mov lahf jge add adc clc in pop clc push dec or popf mov jge stos mul sbb mov fs (bad) out xor jbe adcl adc or fisubrl fstps jmp pushf mov clc insl push mov ljmp lcall ss jg sub or xor jle rcrl push dec imul jae arpl sbb jae mov mov call shll cmp push push fstl jmp aaa add pop aam orb inc gs (bad) imul xchg leave sub leave dec xor inc mov push mov negl imul in mov xor jl inc adc imul insl mov movl sub and sarl scas inc mov pop lock pusha mov aam dec rcll pop and adc add ljmp sti (bad) mov inc cs pusha mov add jl into (bad) test sub dec pop ret mov lds dec and xchg stc shll (bad) outsb nop push lds adc xchg jle xchg xchg int out ret mov mov or dec test andl push or push ror dec es or dec mov xchg cmp or jle push mov sbb (bad) sub inc pusha xchg (bad) das jns shl loopne movsb mov test jnp leave test adc push int3 or in lock mov mov es pop sti jle pop xchg js stc iret cmp cs outsl lret mov mov out aam icebp ffree pop ret popa and (bad) icebp or pop shrl inc fstpt divl add out hlt popf imul fbstp jo sbb cmp in lods cltd xchg lahf jp push imul dec or movsb orl leave jno push pop pop adc jbe sub push sub and cltd pop out (bad) mov sahf jge push push inc (bad) xchg sbb leave push in fdivrs cmp sbb ja sub and lahf loope pop data16 inc adc cwtl aaa fiaddl adc xor cs adc adc aaa mov daa mov fistpll push mov sar jb push xchg inc stos cld inc cmp xchg jp pop adc xchg cmp adc (bad) cmc fs cli xchg push xor mov pop test movl adc sarb into in sbb or push mov jno test (bad) out std inc movsb hlt loopne xchg mov jno xlat and push stos (bad) imul (bad) fldt mov adc cmpsl popf cmpsb rcll rcl fdivrl ret mov das mov and sbb scas leave out outsb test ss mov rorb insl pop jle les jnp cmpsb rep add push ss or push iret cmp sti inc imul mov jo push aas out (bad) pop dec cmpsl push sbb jl clc sbb mov bound sub cmp out std pop mov rcrb ljmp and fs push lret in jnp and jne stos jo jg sar and cli mov nop (bad) jbe inc mov sti outsb mov dec mov dec xlat add mov jne sbb mov fxch (bad) jo pop mov mov xchg xchg lret les int mov pop cmp mov push mov cmp loop fistpll popf xor (bad) jns lods movsl push sbb push or adc mov and adc popa insb push lret cmp cli js xor jmp mov (bad) bound dec out jg lea dec repz xchg test pusha mov addr16 test or sub pop test lock out mov dec fcoms std mov mov mov xor (bad) jne sahf and (bad) addb xchg jb sbb repz pusha sub sub decl stc xchg adc xor stc ja out cmpsb sti lods push xchg pop loope adc test mov sub mov xor adc lahf mov sbb sbb cmp std adc ret test mov mov push push pop test gs push dec insl orl sub mov and mov imul mov repnz rclb scas sbb xor es outsl jae xchg or jne in mov dec in imul jg mov mov cmp mov push dec int iret mov xchg mov pop in ret fcom pop mov mov or mov mov xchg mov (bad) jmp movsl imul test ss inc jg mov (bad) enter cli and (bad) push adcb adc mov test sbb cmp aaa jne cmp pop xchg jmp push enter jecxz xchg (bad) arpl mov pop pop (bad) ljmp lret pop test mull adcl clc (bad) lea inc sbb jnp mov jnp mov nop jno sahf lcall add mov xchg leave ds inc inc leave inc rorl add xor cld into fldt adc movsl pop or inc xchg inc fbstp adc push sub or jnp stos xchg jo insb push (bad) fimull xchg mov push (bad) fldenv mov pushf push bnd insb ljmp add lcall enter test cmp cs jge scas fnstenv and jle rorb lds (bad) sarb (bad) in xchg orl sub cli mov xchg inc push test jmp sub cli dec xor cld mov rclb hlt mov test mov ljmp arpl stos mov enter push pusha cli roll shrb sub jo mov sbb movsb jbe pop lods iret mov stos dec inc jns cld enter push mov lcall sbb sub push imul xchg or push mulps jle rcr sbb out scas into enter and xchg xor imul xchg (bad) jecxz sbb adc push sub es ds lret jns xchg and movsl dec test cld nop xchg ss (bad) xor xchg lock mov dec lea (bad) in es imul outsb out cmp sub push test mov rcr clc pop (bad) loope jbe dec imul sarl jge push gs adc dec hlt enter aas stos cmp call pusha mov fs mov inc jl in ljmp mov (bad) sub jno cmp cmpb clc xchg or sarl mov jae xchg mov outsl sahf cld adc xor mov hlt push fnsave in mov insb call jmp mov lret ljmp test xacquire inc push lock lcall lds cmpsb xchg mov arpl (bad) test sbb or (bad) or lahf rcrb outsl mov jnp jbe repz or fldl2t popa sub loop cwtl das jmp sub xchg xchg jbe cmp jle pop lock or pop movsl and mov inc lea or out cmp and (bad) loopne or mov dec test adc mov cmp add (bad) mov movsb in xchg xchg xor xchg stos xor repz popf sahf into cmp loopne adc into mov push mov xor popa pusha dec out bound movsb mov addl fistpl shll fs inc pushf pop cld mov dec leave stc xchg cmp push (bad) dec fstpl lahf stos and mov incb inc scas mov cwtl dec frstor scas out rorb and and repz sbb inc mov pushf or or sub sbb lahf out insb adc fcompl jmp stc addr16 addr16 js lret rorl mov outsl (bad) sarl ret add sbb mov sti (bad) lds mov xlat outsl test mov mov rcrl and popf fcomp sbb cli insb int3 adc lret pop mov jp jle orl mov es add and dec movsb fidiv mov xor lcall (bad) pop addr16 adc es das out sbb jnp lahf cmp sub fildl adc (bad) push mov xor mov pop mov xor enter jl fadds clc pop and mov aaa jge cmp fwait loop sbb xor and aam pusha mov push addr16 and fwait mov outsb sub mov ficom inc lret orl sub inc or sub or push (bad) jle mov loopne add movsl fiaddl mov in add add jg (bad) (bad) mov pop push dec movsb (bad) jge jb pop les fidivl cmpsb ret push call lods mov das sbb cmpsl rcll (bad) dec jl lcall and (bad) mov xor and jns movsl std es lahf iret mov jmp lcall jno push imul pop jns push cmp stc repz ficompl lock mov mov imul fst iret and aad jmp cmc mov pop inc push jecxz sub dec dec fdivp movsb std xchg inc jbe pop fincstp int int3 fstps jae lods imul jl mov ss pop ljmp out mov sbb cmpsb repz shll leave in mov nop cli cmc adc push mov gs push xor mov dec or fildll cmp jp std add sbb rcr lds fistp js leave mov pop enter adc cmp add pop std mov fsubrs clc xor lds xchg (bad) mov roll jp orb and mov sti cmp adcl lret mov imul mov lahf jg gs push mov or dec xchg lods mov ja fstpl scas outsl or insb sbbb hlt dec pop pop and add xor mov sub sahf mov in sahf mov dec add pop test sti push cltd mov test inc je ret and (bad) aaa inc popa pop mov mov leave fdiv iret (bad) mov in cmpl xor data16 lahf mov or sbb push insb pop mov dec xchg sti std mov fstl sbb and pop xchg (bad) ss pushf inc insl inc xor das fxtract jle scas stos in leave sti mov pop dec jl xlat decl cmp dec xor lcall xchg mov pushf sbb push lea test push icebp jb dec xchg loop scas jp jno cs push add (bad) push ljmp in hlt insl xchg jge or push sbb sbb hlt lret outsb xor leave pop dec lret pop in push jp push cmpsb mov clc mov dec aam sub dec xor adc call pop addr16 cmc inc or or jl out fsubl jne jmp jno mov push (bad) jl push iret add (bad) imulb inc jmp js in pop fidivrl out sub push xor jge jg mov pushl dec push ret ss aam mov mov popf outsb lret or xchg (bad) add inc xchg icebp add push add cmpsl jbe pop test gs lods jmp repz je (bad) mov js lahf in or dec jo repz xlat sbb push fist xchg pushf mov dec fidivl cmp cmp or imul clc mov jae clc (bad) fwait je (bad) xor insl sbb test jnp mov out icebp or andb mov push xchg mov xchg std jo and jne cs add outsl adc mov sub mov repnz mov loopne out (bad) mov push sbb fistl dec jmp lret outsb pop jne mov pop dec nop loop or int3 rcll movsb mov out adc dec mov inc adc mov mov stos ds or into das mov mov loopne or aas fwait cmp cmc and repnz fwait dec xchg out iret out dec lret push cmpsb ret jmp or cmp fdivrl jge or dec mov clc gs pop push pop cwtl loop (bad) and xchg cmp mov and xor aas lcall jp in stos mov gs je mov mov lods mov and inc pushf dec pop clc loope enter xchg jnp and dec sub test out mov out loop jbe mov adc xchg lret rorl cmc dec (bad) stc gs test sub mov lods mov cmp mov sub outsb xchg dec in xor jmp aam and inc mov jle add jae or in shlb dec mov xor (bad) jle cs icebp outsl iret das adc lds jbe pop icebp stmxcsr sahf cmc popa into sub ret and mov dec pop push jge vsubpd popa dec fdivs mov int fs ffreep shl sub lret mov pcmpgtb pop mov sbb or pusha loope es mov in aaa nop rcll enter loop arpl fstpl sbb xor cmp mov sub push pop dec sbb insl jl jae add in or loopne mov mov mov icebp repz je (bad) push imul mov (bad) call push stos sbb adc adc (bad) mov dec mov lret cmpsb dec push rcrl sbb add std add or daa jle cltd ljmp push mov cmp enter mov repnz les cmp ljmp sbb xchg jae mov aaa leave jne pushf test daa inc jl pop add mov jbe ror push jbe jns pop (bad) cmpsb and adc mov jae pop andb add xchg dec lea adc sbb cli out outsb test (bad) (bad) in scas mov inc ljmp xchg les dec out rorl (bad) ficomp xor push jbe adc fisubrl mov sarb pop in rorl inc push sbb mov pop push (bad) adc ljmp lea outsb es scas adc ret or stos stc mov jp add cmc insl pop test ljmp and dec (bad) call xchg cs gs jb les add cmp sbb jb sbb add pushf add insl adcl pop imul inc pop adc or scas cmpsl mov in xchg sub hlt rclb add (bad) decb movsl pop add sti cs fbstp adc mov cmpsl outsb (bad) or cmpsl cmp sahf jne xchg mov (bad) daa outsb add lret jl inc fidivl popf into sbb push add jg jno xchg in pop outsl push pop das testl addr16 in cwtl addl movsb testb cltd jae sbb insb sti push imul sbb push or push icebp pop scas jne imul cmpsb add jg (bad) xor daa lock jmp mov leave out jp into mov pop xchg lahf mov lea inc jns sbb (bad) out cmp mov jb or push int jae inc adc scas add ficomp jmp push andl push inc fidivr adc sub lcall mov push mov fstpl xor jns and jbe mov or iret push out sbb cmp xor fsubs scas cmp xor xchg jne enter lods daa pop push jae ds test into scas jnp pop inc cmpb cmp dec mov int daa (bad) repnz popf loopne mov addr16 pmaxub lahf mov cs or fcomi cmp push xor out sahf lret push aas fist loopne sbb add popa cld test xchg cmp out push ja jbe clc cmp xor aam xchg cmp loope add in jae iret ret in aaa push mov in and aad in insl jle inc dec shrb iret push fwait loope mov push outsl cmp addr16 dec mov mov outsl cltd xor inc outsl loope testl dec adc (bad) cmpsb mov mov loop popa in fisubl add sahf cmpsb cld insl and push jle inc loopne addr16 push cmp ljmp cmp fisubl adc decl (bad) bound dec dec adc test mov jge ret inc ret lock test pop cs ret cmpsb pop aas inc pop int pop jge (bad) cli sbb aam mov pop loope,pn add inc mov xor (bad) loope mov and gs into push movsl fdivl ds scas sbb dec adc jmp xchg fstpt enter cmp lret inc (bad) mov pop daa pop scas mov mov mov push cmp jno xchg cmpsb (bad) sbb xchg es shl (bad) dec in (bad) fstl fdivrs int3 mov insb scas je fldl out dec mov je sub add pop hlt dec push push and inc sub cmp jno adc sub sub and fistpll movsl xor mov fdivr repnz sub jecxz xor ss mov ficom pop rcl and adc bound data16 cmp out adc mov mov leave dec mov cmpsb dec push repnz lods std dec test xlat xchg push js ror xchg xchg sbb lret movsb insl lock jg mov stos or cli xchg jmp out add add dec ja loope push xchg or lock fadd cmp push pop jno pop cmp dec and and or push rol sub pop xchg sub jns fs in rcrl sub popl fistpl std test mov ja fisubl sti sbb jne in xchg push fstl fisubr rclb xchg mov ljmp cmp (bad) ficoml jp loope mov sarb int3 insl bt les int push loop dec mov addr16 add push enter stc adc add (bad) jmp jle insl movsl xchg cli movsb popa negb cld lods ss adc mov stos mov mov jo push cmp pop mov and mov in repnz outsb xchg push cltd movsl sbb sub cmp adc mov sbb sub aam ds push mov (bad) fnop pop adc adc insl push pop pop movsl out mov (bad) sahf clc add add jl or repz mov mulb xchg rcll out jnp movsl dec aaa mov in mov arpl xchg int3 out jmp ds test xlat rolb lret push aam mov jecxz (bad) xchg mov push roll xchg xchg ret pop and jp or push loop push daa and adc lods repz (bad) popf cmp sub sub subl pop pop fisub mov icebp xchg pop xor mov mov ss fnsave in add (bad) jne dec mov and (bad) lea xchg jg (bad) out sbb (bad) push out dec mov sub dec push xchg push lock loopne cli les or mov aad pop out sub aaa xchg popf flds das (bad) es dec repz pop push cs (bad) mov imul imul lahf jmp pop lds (bad) mov aas jno pop dec dec push cs pop insb pop pop push lea fwait and addr16 add cmp pop addr16 pop xchg cmp aam adc cmp xor jmp loope cli sub jl push mov or push pop mov xor popf cmp fs in push mov clc movsl mov lea push frstor pop bound add jl repz dec adc xor aas loop add comiss sbb (bad) xchg (bad) pop out ja inc repnz cmpsb cmp xor cmp ret mov into outsb push out cs rorb imul cmp jl and jl add mov inc out jmp std xchg mov jb adcl into mov js sub cmp push test xchg inc gs sub sbb loop out fisubr adc add (bad) sbb mov push cwtl jo dec lds fldt push (bad) xchg in adc mov xchg inc sub fs cld fwait test jns and sbb dec mov outsb stc test test aam jb ss test rorl in pop push push js jp mov popf into pop test ds call and test test mov fwait lahf sbb lret pop std jns and sarb gs push test stos insb (bad) sub in xchg loopne push mov jne cmp pop add inc sub sbb icebp or and daa add or cmp cld and mov bound pop cmp leave (bad) jp mov push xor jecxz pop lcall out dec fwait jmp and dec lcall outsl add sub jmp cltd enter outsb add dec rolb je jecxz cmp stc push xchg sub mov dec stos aam gs sarl leave dec mov cli mov lahf or jl mov sub pushf mov inc pop and aad aam cs in sbb push push mov push imul add jb pop jmp iret mov lock imul jg adc call pop mov sbb dec nop sub movsb push jo push push repz dec inc sahf sbb movsl or adc popa std jb es inc incl sbb imul jmp jne,pt sub aaa bound or mov (bad) dec push adc jecxz fucomip mov mov xlat arpl pop jne cwtl dec adc xchg jge jnp fs nop pop leave mov icebp sahf pop loopne mov jmp mov out rolb push lahf jmp syscall inc pop inc jp,pt xchg loopne mov cs and das jg sbb andb xor push loopne pop test lahf (bad) repz mov xchg inc ljmp (bad) scas adc aam (bad) mov cmpsb xchg or dec cmp xchg mov jmp repnz imulb aam mov push iret popa (bad) xchg cli mov cmp inc pop in dec push pop inc inc push inc ffree insl jb cli sbb mov outsb sbb lcall xor dec (bad) sbb (bad) in xchg fnstsw push loope mov adc in (bad) xor xlat push inc pop decl lods scas inc int mov cmpsl add es outsb jmp jge ds adc or xchg das cld xor (bad) sti inc mov in push xor sub insb mov test jo sbb xchg lea xor aas xchg mov xchg xchg sub mov lods das or xchg (bad) dec int3 outsb (bad) stc pop dec jge and inc xchg cmp dec les xchg xchg leave cmp mov into cmp dec inc dec xor cmp negl adc pop jle stc test loope push dec orl inc das adc loop movsb xchg imul fidivrl mov add jle inc std mov pop and xchg bound jns mov xchg lock cmc sub jecxz inc mov push xor xor stos and je xchg xlat dec jbe or mov js aas imul and cmp jmp pop dec (bad) mov pop mov cmpsl (bad) jge sbb push data16 cmp mov push scas (bad) in pop mov dec cmp push lds cmp mov stos or ljmp in test xchg loopne aad fiaddl adc adc or xchg mov or jmp adc push addr16 ret cmpsb test mov shrl in xchg lret jge mov call sub sub jbe repnz add jle cltd (bad) mov mov sub inc cld out adc arpl lea jns out (bad) outsb push add hlt clc inc sahf jecxz in mov jge in push push xor js jns rcll push adc pop xor fimull lahf ret insb and shll pop (bad) out mov mov int3 mov jle out and dec and ds aaa decl rcll test (bad) lods int fist fs ds push push pop in cmp sbb ret push mov popf adc inc pop ja mov mov (bad) mov inc jns pop jmp pushf movb inc fistpl add xchg xor xlat push stos jo shrb stos jne lods sub xchg icebp fwait pop mov enter scas jnp pop add sub push jae push mov dec call lods pop sbb jmp pusha das sbb movl mov enter mov out add xchg mov jl or sub mov mov mov inc test adcb iret pop cld movsl mov rorb in repz xchg fwait or push mov lods push punpckhwd mov jle and jb (bad) fs mov lock fiadd add xor lret das sbb sti outsb iret sbb jmp mov rorl cmpsl dec mov fstl outsl adc popf movsl push cmp stos mov repnz scas das aam cmc cld ret sub rolb popf scas out mov leave fcmovnu pop hlt lea pop xchg pop int nopl mov test pop and adc xchg sbb fsincos js jmp (bad) pop imul mov iret sbb jmp sub or pop mov mov fiaddl push push repz jp daa test lahf adc add sub pop sti insl andb sub ret push rorb pusha int sub add ja out pop push xchg inc dec add daa or jns cmp sbb cmp cmp imul loop dec mov mov out sbb cmp push pushf dec (bad) sbb inc xchg dec mov lds lds add push adc push xlat and shlb xchg cmpsl test xchg rcl cs out movsb push mov lret popf push inc ret scas sub mov cld xchg (bad) mov out lods push mov cld lods pop sub int3 push xchg and or adc cld xor test sarl icebp inc icebp sbb (bad) pop (bad) mov or ficomp add cli pusha mov loope jb and test add push lods dec mov or mov inc or aaa out pop pop (bad) roll js jle data16 sub jp gs push movsl pop dec cmc or xor pop push inc aad sarl xchg xor pop add outsb (bad) rorl mov les push and add xchg cs mov lcall ret mov gs sbb xchg lock daa mov mov dec clc pop cmc jo fcompl xchg adc imul and daa (bad) or inc aam xor push mov pop rolb xchg mov movsl in or mov add xchg into jecxz leave int3 cwtl scas xlat inc mov dec test inc push divb nop sbb cmpl mov (bad) (bad) adc es mov pushf pop or push sbb and mov adc adc fistl aas fbld divb mov sti sub sub mov outsl add jl dec pop jge aaa inc (bad) ljmp divb fs leave inc aam dec cltd and in imul fcmovnu pop mov lds das jmp push mov add sub ret inc mov mov js adc push pop mov mov jb rcll mov enter repz cmp jge dec aaa and push cld fimul leave pop jge icebp dec inc jge lds movsl dec repz ret cltd pop mov mov cmp pop mov pop adc leave pop rcl repz push addr16 inc push mov lahf adc xchg dec iret pop add xlat adc pop jno out and pop (bad) popl jne vminsd push movsl sbb mov xchg call aas movsl imull aam xlat movsl mov aam int3 pop xor sub (bad) fldl push xor pop ja fwait jg xchg or stc sbb and pusha xchg insl dec mov leave dec fldenv loop loopne mov mov dec mov lods xor sub xchg add sbb inc jbe repz testl bound mov jmp lahf push aaa mov and inc jb and xor mov dec je inc pop mov mov cltd lods rcrl inc je shlb mov ret mov ret in ret xor jge dec repz data16 mov pop mov ja aas lds mov xor mov gs dec sahf add push fsubl rorb lret xchg or popa add push inc push cmc cltd mov repz mov mov dec rcrb mov jne adc scas lods sahf lock and pop cs push jecxz arpl mov (bad) (bad) jnp dec mov pop jae mov jle mov fstl mov cmp (bad) jo dec fmull icebp cld jg or mov jnp enter jge stc adc pop out bswap sub jl bound enter outsl sub mov rol in add mov in xchg popf cmp jb xchg int3 xor dec (bad) popa xor sub sub loopne mov insl jae into cmp add fnstcw repnz xchg call (bad) (bad) jo pop pop daa fstpt imul dec xchg icebp and rcrb dec cs ror xchg sbb cltd or or fcomps mov test cmpl push pop stc int ja mov inc sti xchg pop lea lret mov cmp (bad) pop (bad) cmpsb fisttpl inc aas mov fwait in cmc xchg sarl sub xchg scas in adc das sub push sub mov aam lret push adcl negb stos lds gs iret or pop xchg js scas int3 cld pop sub or and or call sub pop add (bad) and dec aaa push lock jno aaa mov xor inc jb fnsave aaa lods push mov dec test cmp cwtl and out (bad) pop sbb repz inc mov or adc arpl jmp lret jmp pop dec mov cli testb loop or aas pushf and dec cmp aaa jmp subl adc inc xchg mov mov jb in push (bad) rorb push sbbb jb pusha lcall cmpsl (bad) push testl jns pop repnz mov inc cmp dec pop addr16 mov xchg sarl popf rcrb fsubl xchg push lods push cmc testb insb (bad) or add leave testb xchg inc mov icebp out xor and scas movsl pop add out or bound mov dec xor mov push cmpsl pushf popa xor inc jno fstl mov push nop push push dec push das inc mov rorl jg (bad) pop out push xchg pop mov cltd jbe inc test stos lock hlt mov cwtl repnz push and add movsl int mov push jg sub stos xchg into (bad) repz call arpl and mov out pop lds imul cmp sarl mov js dec aam push adc (bad) mov sbb jbe jo pop cli sub jp dec adc xchg inc sub movsl lret fstl mov xchg dec fsubrl dec fistpl imulb push mov cwtl fdivl loopne cmp jne jo lret cmpsl jne dec xchg lea repz sub outsl out and or sti cmpsb cwtl pop push jne enter movsl xor test lcall mov out test test inc mov (bad) jle cmp jns push push sub aad ja jnp and cmc out pusha xor fstpl sub cs popa cwtl ljmp xchg mov ret push lahf inc dec mov cmpb sbb mov jbe xchg lahf push ss cmc in test sub add mov pop scas (bad) fsubrl test pop imul popa dec outsl adc faddp gs inc fldl dec adc rcrl cli test dec dec iret mov push fwait call in jnp mov and push insl add add clc xchg out add outsl ss adc ficom dec mov xor pandn xorl mov iret pop dec mov (bad) aaa in inc mov mov idivb cmp push mov adc push and or mov sbb std push dec and aas mov leave inc inc inc hlt jmp mov bound push icebp pop sarb xchg or pushf adc jno lods neg pusha gs mov icebp repz mov jns sub mov xchg imul or push loope (bad) mov sahf rcr lea test fmull repnz inc addr16 or cmp jp std jl dec (bad) mov inc cmp sbb sub mov mov movsl sub sub xchg jecxz add clc jecxz ja mov and sub fwait cwtl pop mov inc or mov into test sbb sarb cmp iret xor pushf mov les lods bnd aas hlt arpl pop andl das jge inc push or pop mov aad add xchg or push stos push movsl mov push fnsave pop (bad) cmc nop clc mov iret jecxz sub jge shld and mov mov (bad) sar or std mov push lods scas xchg in xchg mov inc loope outsl cld stos fildl mov lods mov pushf stos scas jbe push dec inc inc sub xchg fcompl pop lods mov cmpsb dec jo jle (bad) stos les dec movsb imul mov pop pushl push jp jmp ja mull cld jae ja adc jns sbb cmp mov insb add xor (bad) rorl xchg (bad) dec test cli sub adc repz jge daa xor je lds aas int3 clc mov fisttpll jmp dec and std ficoml and or (bad) lods movsb mov mov cwtl rol aas mov fsub jno int3 sarl out adc jge cmp sub dec test dec out jmp int3 jb sahf or push xchg sbb mov out ljmp inc sub pop inc and inc add pop enter mov lds inc cwtl mov aaa and int xchg inc fsubrl cmp aas movsl or rcrl and cmpsb stos repz icebp xchg cmp leave (bad) int3 std xchg in fwait stos adc mov enter xchg outsl push xor pop outsb jecxz stos popf xor sbb clc (bad) gs lds mov loopne ja sub mov dec dec pop xor loop mov push xchg pushf cmpsl stos jnp (bad) fwait xchg lea sbb outsl xchg pop popa std out xchg and test adc cld inc hlt fldenv jecxz push lahf (bad) mulb in loope dec (bad) push jecxz sub mov jns xlat dec mov xor inc repnz test mov sbb call loope pop adc sahf jbe push push setne icebp adc xchg push sbb ljmp outsl dec lcall nopl orl into xor imul pop adc das push test pop push test push sbb out js adc insb mov fwait xchg adc or pop dec in jae add inc mov add arpl pop loop cmpsl (bad) int3 (bad) or mov mov (bad) fisttpl jmp xchg scas add or (bad) dec rcrb fsubrs clc pushf adc fimul call lea sahf clc or jmp nop add icebp insb pop pushf lret cmp add shlb test rorl push adc push mov cltd dec out daa xchg jg cmc jae pop inc jns ficomp jecxz push or in stc pop sub adc insb add jecxz cltd (bad) mov out dec fbstp push shll ret lea cmpsl inc ss xchg push pop xor outsb dec sbb mov adc nop cmp insb and sarb push jge and fdivl cmc bound ret push out std mov mov test or scas pusha xchg pop jae sub (bad) or pop sbb jns test add rorl (bad) movsl pop cmpl loop scas bound mov popf out cmc pop push xor mov pop sub lea pop sub into (bad) mov movsl repnz inc jp jb lahf jne js push lea jno mov test cmp mov (bad) sbb cmc aas clc mov out mov pop out fiaddl xchg cmc rol sbb nop mov addr16 (bad) mov shrl int test aaa adc mov push jnp sarb (bad) or rcll insl outsb sub mov pop mov fildl test fdivrs xor pop and mov leave std dec and fdivr (bad) dec jnp movsl sub fldt or dec add lahf iret sub ficompl mov in gs mov scas iret or fimul mov or inc pushf mov addr16 movsb push sub push cmpsl lcall jnp fdivrs icebp mov pop inc jns mov shrb ret sbb dec pushf or pushf ljmp inc (bad) insb cmp inc daa call jae lds imull mov push data16 and les cmpsb lahf jp xlat jno stc rorl (bad) (bad) and clc adc add xor xchg xchg lret out pop cmp mov mov cmpsl inc cmp jmp xchg addl sub sbb hlt icebp fldt jg outsb das rorb icebp test push inc push rep jecxz daa in pusha ss movsb rorl push jne in push jne out aaa nop mov xchg cmp aad in test push cs lret call add lock cld hlt jbe pusha push mov xchg push xchg lea lea rorl mov pop sub xor in pop dec cltd int3 push rorb mov pushf push mov add scas (bad) pop sbb scas dec inc pop mov mov push push test jnp xor aaa pop fs lahf sub and inc push dec mov mov stos insl add inc push inc dec adc addl test add mov iret jmp addr16 mov push in push (bad) mov cmp dec push jb cltd das pop nop leave rcrb cmpl push ret mov and sub movsl jg mov jbe xor push mov mov jb iret std mov scas lock lret mov jge sbbl shrl or xchg lods testb add cmpsl movsb rcr mov jno stos aas test (bad) mov (bad) (bad) rolb or adc jo push sti fcoml ja pop add stos sbb imull mov adc jp (bad) dec lods dec mov mov repz push in mov pushf inc jae movl insb test icebp (bad) lcall pop adc inc fcomps in mov cmp add rclb xchg es inc repz push hlt mov mov insl loop xor sub sahf cwtl push mov pop mov push cmp daa sbb in push call pop mov or xlat shrl xchg (bad) sbb xchg lods adc mov out leave test sbb fildll inc jmp inc xor (bad) clc ret insl mov pop sti stos pop pop idivb add xor mov mov push movsb lret leave hlt sub and (bad) pop pop in inc call adc insl mov outsb adc push loope cmpsb or sbb adc xchg add aam jnp mov sub js push jae add pushf jp shrl sarb mov test add pop jb rolb jb pop mov fwait std enter movl and push imul ss js aad (bad) ds pop mov sbb test bound mov sub scas int in dec jmp mov mov int repz adc fdivrp out subl stos std jns leave jmp hlt mov fdivs push dec mov inc mov fisubrl cmp (bad) (bad) jbe sub roll ret lock jl pop out pusha push aad push sub jnp and pop aad ficoml cmpsb lds push sub cmp sub dec popf cmp push sti cmp xchg mulb add cmp sbb nop loop mov or sbb xor andl in pop jne (bad) adc push lock push repnz mov sub out jbe add aas icebp fildl out sub xchg mov (bad) xor mov iret test (bad) mov adc jo jno aad xlat xchg inc and dec ret cltd cli dec mov adc dec ret es notb sbb mov popa sbb lret (bad) mov cltd mov insl call dec arpl mov dec inc pop out lea push enter pop cmpsb dec ss dec and jg pavgb and sbb cmp and lea stc adc xchg mov jo mov or push fidiv xor xchg cmpsb and cmp mov mov leave sub jns arpl (bad) push jae pushf lret xchg daa scas repnz sub cmp fstps (bad) int3 push push jae cli cltd dec ljmp (bad) mov xlat push lds movsb hlt out inc push sub out sbb jns xor lock loop xor popf dec xor andl mov push or stc arpl push clc add imul (bad) rep pop insl jecxz jmp adc movsl addr16 sbbl inc in cltd scas dec mov cmp (bad) or push sbb lcall xor lahf ss or scas lods jp push pop cld out dec lods add dec outsl xchg in push dec mov adc lret sbb das or insb fistpll pop nop sbb int3 lods stc rorl xor pop jmp sti outsb cld lret sahf loope xchg jge push outsl mov aas xlat (bad) (bad) aaa cmp or aas fistpl in ljmp lcall (bad) ret cmp sti data16 xchg xor dec push (bad) (bad) mov (bad) pushf pusha push inc mov push scas mov lcall outsl out pushf fsubl (bad) mov mov ds call jno mov arpl (bad) dec add (bad) jmp and jns dec ds (bad) ja aaa je out mov jle adc mov jp outsb lds out jle rcrb pop xor mov adc xchg lods xchg sbb cmpsl mov cmovb add jmp les jge jmp or nopl sub (bad) mov fsubs inc inc xchg cmp xchg fnstcw dec clc mull pushf or stc test daa mov loope icebp jl ret and sub mov pop sub dec insl mov aad dec mov inc inc outsl push cmp lcall call nop js push mov cmp fnstenv jecxz dec push adc mov cld xor mov ret and enter jo dec ljmp fistpll mov (bad) (bad) adc pop jge fist dec stos mov jecxz (bad) clc fldcw sbb pop fiaddl jmp dec enter ja cmpsl shrb push cmp jle mov push mov sbb rcll push cltd lds or test shr call xchg push mov (bad) dec push mov stc sbb das lret aas ds or addb imul pop adcl mov insl sub cli (bad) je test test pop or mov imul (bad) and clc cmp push pushf or outsl push mov cmp orl rcrb in scas sbb mov cltd jne lea leave test or test sub fwait cltd cld and test sub jge mov cmpsb leave mov push pop (bad) insb adc and mov and add or and lods xrelease movsb jno mov cmp hlt push mov aam jge lret sbb scas aad lods sub out mov mov movsl bound mov iret adc push out nop test cltd fmul mov or or sbb mov xchg push enter ljmp int stos fdivp jge (bad) mov pusha push or push xchg out das daa imul inc xchg imul rorb pop stos sbb cld pop outsb push aaa sub xchg lret shr jae pop es pop xchg daa (bad) lahf pop dec push dec inc cli xchg mov inc mov mov sub push push jle add (bad) jl and out ja cli cmp out push push jb popa es mov rolb sarl dec mov jns aam mov inc lods mov dec outsb sti xor mov xchg xchg dec aam pop test mov mov daa jb enter xor sub rcrb add (bad) jnp jb jl pop jge sub adc lret les push addr16 enter sbb or mov mov movsb cmp pop cmp and add adc pop xchg ja xchg push or fcmovne push lea mov (bad) (bad) mov dec mov scas sub dec xchg push stos out int3 adc jle cmp test adc cmp mov aad or fwait or ja sbb pop sub dec pop movsl cmpsb xchg dec rorl mov sahf hlt xchg (bad) fdivrl cmp pop aad push add dec dec cmp sbb sub xchg jle jmp and mov loope ss fcmove mov mov incl push push xchg ja (bad) pushf mov dec xor fist fadds sub sti inc xor sbb push xchg subl pop jp addr16 jmp fcomip and mov pop mov xor insb mov addr16 dec std pop pop outsb mov xchg jl sub ret dec lea cmp sarl movsl or sub add pusha cmp jle jno sarl (bad) jmp xchg stc mov cmp in es and fidiv ret arpl cmp and scas cmpsl dec leave addr16 push adc inc sub addr16 out inc mov mov repz mov push inc mov or dec adc out sti leave mov cmp ss pusha addb sub loop and xlat mov fadds push xchg mov ret lods adc xorl add fs sarl leave test cltd push loopne loope repnz or mulb pop inc out fdivs push xor mov ss sub push imul pop loope es es jne cmp lods lea xchg test loop fmull sbb xchg adc cmp in aad and (bad) mov or xor adc je sbb dec mov sub sub push push xchg pop leave out or pop out push jnp scas adcl data16 jmp lcall fcoms repz and aad xchg scas jge mov popa and mov call fwait xor fiadd fdivr push fsubl xchg in jle xchg fild pusha xor xor and mov arpl pop lret xchg pusha push jl mov repnz arpl jl cmpsb jp aam mov enter mov insb (bad) sub and xlat adc mov dec imul les lods adc xor sti adc adc jle stc sbb sub outsb addb adc xor xor xchg fistpll pop jl and xchg pop and rcrl stos push cmp or xor ja ficom adc push addb xchg sbb stos pop pop shrl and xchg xlat adc inc hlt fstps jle sahf cmpl insl ret inc mov or sub or popf cltd aam xchg mov lret adc or dec push sub mov sbb or bound xchg sub pushw cmp call fcompl cmpsl cmc lcall sbb (bad) out and outsb dec call mov cmc orl dec sbb pop andl lea inc inc pushf mov (bad) push xor iret lods mov inc sarb inc push aam ja into push fcoms in jb cmp fildll mov sahf pop xor dec xor xchg mov pmaxub pop stc push mov inc aaa js imul inc sti (bad) mov call xchg xchg ljmp push test rclb in push fistpll cmpl mov jnp jg (bad) add test pop dec insb dec negl dec je stos and pop sbb jecxz out sti jp pop jne sbb cld mov sti xchg sub fsubrs aad add (bad) inc clc out cli xchg jnp sub xchg mov popa inc mov repz (bad) mov cmp push mov popf pop in loop mov loope pop (bad) sbb imul (bad) (bad) mov pusha div adc add iret add popf outsb adc ss (bad) jle mov out imul sti xlat push or je rcrb inc add add popa nop mov xor push mov adc or sub pop mov dec push jp out mov push std pusha pop jg pop (bad) (bad) loopne cmp ja testb xor sbb les fwait mov jg inc sbb shl mov add (bad) je sbb ss dec outsl inc fist call sahf push stc testb mov xchg test int movsl ret mov pop sub xchg in jb in push mov clc mov repnz and mov mov xchg pop add lret mov push aas bound (bad) and add (bad) mov int3 fwait lods jno cmpsl mov ljmp and add out popf lds dec je jns sbb movsl mov loope insl inc out pop pushf bound dec cmc lods xchg (bad) bound fs cmp dec mov call and fcmove nop mov xchg adc add push dec test sbb les jmp and xchg xchg icebp xor mov (bad) jmp cmp in jp hlt adc test xchg or and add xchg xor adc lock and jae inc movsl vorps gs jne test jp or outsl fcompl andl pop dec xor xchg jecxz notb lock jae sarl mov inc jmp jp out je outsb xchg jmp repz and jge ljmp pop adc scas out push lods mov and aad or mov inc testb loopne int3 mov mov insl std or sbb stos in mov out cmp (bad) sbb xor aaa lcall mov movsl std mov and mov adc stos (bad) mov aas outsl pop or out out add add sbb jp jge js dec add stos xor jp data16 arpl xchg sti insb lcall sbb js xor aam adcb in std fcompl cmp inc mov aad arpl inc dec sahf xor pop sub mov mov or push mov mov add popa or xchg popa cmp pop aam add sarl cwtl fs or clc jp mov xchg pop jns sahf pop push cwtl mov leave js aas sti inc inc lock stos mov or mov inc fnstcw mov xchg addb stos (bad) (bad) fistpll (bad) fnstcw fs fwait (bad) stos xorl (bad) xchg inc jge jns adc (bad) jl mov (bad) cwtl andb sbb arpl je jle outsb js fsubs insb sahf cmp adcb ja or mov ret dec lods imul aas repz push leave ret sti mov movsl sub out pop (bad) aaa shrl icebp call dec or push mov push add (bad) outsl cmc fwait push adc fcoml mov dec cli ficomp (bad) in cmp shrb clc mov insb cmp sbb and divb adc out jns mov pop in and xor inc adcl dec fimull (bad) std fdivs push popf insl mov in inc cmp loopne pop add lock cmp dec popa mov sti insb push out push stc pop fs das xchg inc mov (bad) lods sbb push and negl adc int cltd sub sub cmp push cs aas ret sub std jne jno mov xchg xchg or aaa shll cmp lcall add push push fsubrl paddusb jns mov test jnp mov sub rorb push mov inc addl arpl sub mov sbb nop mov pop dec into cmc mov mov or jne pop xlat sbb or sbb (bad) dec loope (bad) mov int3 push lock aaa es jae push mov movsb test lret movsl lahf push insb or mov pop add out inc adc jecxz and jecxz mov adc stos movsb sbbl sbb adc cld cltd jg adc rorb mov addl dec xor std insb ss add sbb mov test inc mov sbb (bad) mov add lret jo aaa sub lods daa inc repnz bound or pop push push mov scas add jo fidivr pop lcall fsubl dec call (bad) int push insb (bad) mov inc adc xchg mov dec pusha adc cmp (bad) inc jle leave pop js shl (bad) imul add cmp or adc mov inc sbb and es push pop mov cmpsb adc sahf jbe cmp das ljmp mov inc fcoml hlt pop idivb jno shlb push or popf add js mov aaa mov pop push fistpl or addr16 mov mov mov jecxz sub push repz mov adc clc mov cmp aaa hlt adc (bad) mov push or push jge dec fsubrp push pop cmovg or stos or out pop out popf push sbb or in pop movsl inc dec addr16 cs (bad) loope sbb lret insl enter pop lahf push rclb jge xchg adc dec mov xor push xchg xor mov stos bound inc (bad) xchg push cli loopne adc or ret jmp pop les in sbb and cmp out data16 (bad) data16 fcoms cmp rclb xchg mov push in inc xlat jno push xchg aaa fwait in mov inc mov or or pop imul scas jp or and rol into dec je xor or popa shr cmp daa or es lret imul fiaddl popa xor movsb je sub jae xlat inc dec pop xchg mov sub test in xor adc addr16 test xor mov mov insl dec sbb cmp mov dec sbb sti lea mov sub jge aaa pop cwtl je jns leave jae das repnz mov pop sbb mov dec imul xor rorl cmpsl push mov aad es scas leave or div dec push push addb addr16 jae jno jbe leave ret xor test sbb (bad) repz cld into xor scas pop sbb (bad) xor sbb jne nop negl mov outsl (bad) jp out in (bad) pop mov mov mov clc cltd popa aam xchg dec and repz xor addr16 push cld dec mov xor push cmp or loop sbb mov mov push addr16 push sbb xchg hlt jae dec cwtl mov sub pop clc push pusha mov pop jo jmp imul inc dec dec leave ja daa popa pop cli pop pop mov fisubrl add cmp jo mov add jns,pt daa inc and sbbl inc push cmpsb (bad) lock es and sbb pop jne jae (bad) adc icebp clc lret mov inc cmp adc jp mov pushf test jl movsl push cld lds sbb sub nop push insb fwait inc icebp out es (bad) imul lods push jl loope sbb loop cs es sbb (bad) (bad) ja cmp test cmp dec pop notl lods mov (bad) jno jnp ret scas pop nop jmp xor push adc pop mov mov js sbbb out xchg cmc xchg xor pop dec mov icebp cmp ficom sarb push mov jg repz pop xorb lods arpl scas sub lods fsts fimull rcl ja pop fildl jge sub pop into mov mov repnz xchg ss lods sbb xchg mov test push outsb mov mov xor sub stc addr16 inc outsb push mov in std and or iret mov test pop gs notl and and push add loope loope mov pop xchg dec sub shl adc loop adc push iret jmp push inc fstps mov push push sbb sub inc test jge (bad) mov jecxz outsb mov push fcomip cwtl aaa adc xchg mov lock scas lock add stc mov inc fbstp add mov mov (bad) ds insb mov outsl test push sarb xlat (bad) jg or cmp adc lcall mov adc movb mul loop dec das fidivl cltd daa pushf into mov cld or cmpl loope xlat add sbb in iret cwtl mov imul call mov inc insl daa inc or les jmp je ret and xor jbe popa sbb push (bad) pop inc loopne mov mov and dec sbb ret xor (bad) mov jae and push jns nop push fisubrl cltd cmc xchg (bad) loopne hlt add inc mov push dec xor mov fs xchg adc sbb xor push sub mov fimul or xchg fisttpl add and sbb repnz stc inc scas out sub (bad) stos subl pushf stc mov dec imul rol pop xchg jl sbb push pop push sub mov loop in and jne xor pop addl enter inc sar jns test dec cmp mov lret xchg clc add lret pop cs into arpl push fwait or loop adc and les aas xadd or push ljmp push aas sbb cld lods xor repnz dec cmpsb mov fnstcw mov test aam shll mov addl sub sub ljmp imul and cmpsb mov and ja xor loope das xchg enter mov sbbl imul and add test xchg xchg sti sahf pop mov stos and pop mov aad sub pop cmp jbe mov lret adc fmull outsb outsb adcl lea repnz test ds ljmp int3 sbb push (bad) mov loop in sbb js stos test or push icebp inc cwtl and ret pop push pop enter jecxz lahf xor test movlps mov bound lds roll dec enter pop cmp xorb cmpsb sbb mov jno movsl cmpsb sub push mov inc cltd fs and gs fwait lret shlb mov add popf cmp pop fld jmp jne pop pop sahf sahf cmp (bad) dec mov push popf sbb hlt insb jmp and mov popa xor inc push or insl int mov rcrl clc add xchg jns (bad) adc jle lods add jno xchg jbe outsl icebp popf cmp xor int3 add or mov xchg imul fdivrs in dec dec cmp mov push fstp pop mov pop add mov cmp cmc fimul jo inc insl jb pop (bad) clc ljmp and data16 xchg (bad) cmp adc jp cmp mov in mov inc mov or scas aas ret jl mov push adc jb xchg (bad) push loop xor shrl pop lret lcall xchg cltd cmp (bad) sbb push std orb pop push cmp or cs ror test add subl incb stos dec dec cmp ljmp movsl in jne in xchg (bad) out into pop lods cmp fnstenv mov xor dec (bad) xchg pop daa or pop std cs xor aas cmova mov mov jmp nop sarb xor cmpsb mov dec sbb test lods aad adc mov popa inc mov mov and xchg insl lret repnz add sbb idiv push jbe mov mov in sub test test mov fildl inc sbb mul cmp int3 pop ret sub imul or inc mov or push idivl popf pop mov inc xchg inc sub pop popa pop jmp lcall sbb ds add mov mov out icebp ljmp mov inc xor inc pop push jmp sbb sbb fldcw popa clc add leave decb js andl stc sbb xor (bad) in xchg ljmp (bad) xor pop test mov repz xchg sbb aad mov test cld cmpsb fcmovne hlt sti mov out int3 stos dec (bad) nop cmp xchg outsb cmpsb insl jne out or jne insl adc insb scas push mov xchg mov shl pop inc adc pop or xor sti cli loopne out xchg pop and outsl add rcll sbb and dec repz mov xor data16 jns lahf and mov mov icebp ds mov stos sub push or lret cmp push loope subps cmc jecxz fisubr outsl jbe icebp jb mov test xorl in shlb mov adc sub mov ret (bad) lods ret pop inc or outsl xchg sti cmp or stos jp mov popa jle daa ret in ret (bad) out (bad) out aaa loope xor mov pop xchg std imul leave add xlat xchg xor push cli in xchg xchg and mov lcall xor push imul fs cmpsb into pop jl dec pushf aaa insb aaa xchg repz lods mov push xchg popa pop sub inc cli icebp aas loopne jno jecxz sub or mov dec jmp inc ja daa insb rorb aas int xchg push (bad) divl or aas sti xchg dec push outsb add inc xchg outsb xor ficom cs into sub jmp test dec and push rolb jae sbb dec mov mov ljmp cmpsl in or bound add mov push subb push jo mov pop popa pop stos into mov xor lcall ljmp pop punpckhbw cmp popf out push jp inc dec pop cmp pop push mov lahf loop lahf pop push xor adc stc sbb pop jnp sbbl (bad) hlt fucom pop (bad) in adc out xchg loope insb fcoml test xor jne rcl xor inc insb ja das jl inc popf fldt in icebp jl mov fisttpl mov dec test pop mov imul xchg cli nop or jmp inc mov lret push daa xchg push stc iret movsb (bad) jl jae cld (bad) xor loopne or or and test jl adc movsb test imull popf mov mov rolb sti push jne cmp fcomip sti leave enter cmp (bad) xchg push jmp (bad) push fildll sub ljmp stos or inc (bad) into jno cltd roll adc mov mull in ljmp push jne pop fs or loop xor pop cmp push dec (bad) mov push scas push adc outsl jo or aad xchg pop push pushf les (bad) mov repnz fs xchg loopne lret ret add pop mov mov adc (bad) adcb fcom ret subb sbb daa pop sbb in xchg popa loopne (bad) fildll mov push pop cli in cmp or and adc divb push or adc lock (bad) imul sbb roll or mov mov push pushf int daa jb loope jo add push push inc mov push sub fisttpll stc mov int jmp rorl sbb pushf ljmp add (bad) repnz adc rclb inc mov out in or mov mov (bad) addr16 mov pop push imulb dec and imull lods adc std cmp cmovns (bad) or pop ret xchg leave aaa imul scas (bad) xlat jno sar jbe test dec cmpl mov push into push sbb mov fiadd out mov mov inc scas inc push pop movsl or sbb pop mov (bad) sbb push mov push adc mov fwait mov and cli mov sarb sbb push mov nop cli addl bound lcall and mov sti stos test mov mov xchg adc lret sbb inc int repnz call sbb pop outsl jl shll xchg jns arpl fdivr fucom dec cld inc cmp jnp sarl xor outsb neg aaa leave call sub sub lcall insb sbb pop mov repnz xor xchg add lret loope negl mov imull ret cmp push sub mov sahf sbb adc out hlt inc xchg outsl xor jle sbb jae (bad) jo in push ret add mull mov idivl arpl lods xor push sahf mov mov sbbb mov stos jno sub shrl les movsb xchg call sbb sub push xchg mov sar jae cmp adc orb push mov push xchg test jg ljmp or xchg outsl mov mov aam jmp inc or add daa push sub mov inc nop fsubrs fcomps int mov rcrl mov cli iret sbb ljmp enter adc loopne xchg (bad) test adc popa xchg lcall push imul scas pop cwtl gs in into out adc pushf push or aas aaa loope cmp mov dec hlt bnd push mov mov pop nop (bad) push xor sub xor imul or lret mov mov test xchg sbb sbb jecxz insb mov sub movsl xchg inc push xlat mov ror or add xor or vcvtpd2dqx imul addb or loope cwtl and or xchg (bad) mov call inc (bad) jno xchg and sti fdivrs sbb cmp in mov jmp sahf and test pop pop lret jns mov dec ja les scas jno out jnp mov jb mov xor or int pop pusha mov jno jno (bad) push or daa sti xor fdivrs push lret or jno mov push xchg (bad) jmp pop cli pop sbb (bad) xchg fnop dec (bad) cli fisttpll lcall out aad dec inc scas cmp cmp clc rcll hlt pushf adc cld push adc jno fmuls movsb insl shrl in push aad out push rorl mov mov pop cmp xor cltd fcmovb jl lret mov jle int3 test dec mov sbb roll leave jmp lea (bad) loope ljmp xor outsl jp mov enter xchg push aas cmp add mov xchg stos push mov outsb pusha lds pop xchg lods xor push pop push push push push pop fsubrl mov xor xor xchg jne daa pop dec fsubs fnstcw adc fwait out pushf hlt or insb xor cs mov leave mov mov push jnp inc dec mov shll fs inc hlt jb std and scas push int3 ret addr16 sbb pop pop pop inc cli out mov cmp pop sbb or push jmp inc inc data16 sbb pop mov lcall out (bad) cmp sub andl push pop loopne push test cld xchg mov add xchg ja aam lods sub pop andl mov sti sbb fsubl mov pop push mov aam inc test xchg ret movsl mov mov lret xor adc lret cmp push mov inc cli rcl jns sub xchg rorb out loopne inc divb jmp pop xor repnz das in xor into xchg sub jb cmc test jo adc pop or lahf in lods jb jnp xchg dec jle mov les add clc mov push sahf lahf test push stos int sti scas test (bad) aaa dec mov xor or push cmp push cmc add sub (bad) idiv jmp mulb or adc frstor jns repz sti jnp in mov fcom movsb in fnop je call xor fmuls outsb mov insb inc add enter (bad) jbe jo iret xchg fchs outsl mov loopne into dec adc repz iret jmp int3 in fnstcw test ljmp xchg sbb in or clc adc inc and sbb ja jnp fadds pop lea in mov pop and in lcall fmull inc xchg push scas pusha pop cmc mov or repnz jecxz cltd dec push sahf push pusha mov cmp cmp mov jae fmuls jne mov enter mov pop out jns movsl call das faddp outsb mov ds xor pop xchg jno movsl mov ret test lahf mov mov mov pop dec (bad) (bad) jle daa xchg add mov xchg mull xchg inc cmpsb xor xchg jle add push inc cmpsb sub adc xchg mov sahf insl push lods cwtl sbb ljmp xchg test in adc aaa shrl je adcb xor popl add subl inc inc xchg icebp scas outsl mov pop stos arpl test jae mov ja scas aaa mov mov or es jg sbb pop jp xlat pusha lcall add xor xchg jbe inc push fs xor js sbb cmp fsubrl les mov mov lods xchg cmp stc int3 (bad) xchg imul mov shl cmp in sbb cmp pop mov aad and xor dec data16 loopne mov cmp lods int dec loop cmp mov xor add outsl lods sub push mov push inc daa out and mov aaa fisubr mov (bad) lahf mov insb push je sbb mov fidivl and jae test pop addr16 xchg xor lea pop js xchg pop pop (bad) jmp loopne mov dec and inc inc lcall mov nop das sti out iret mov inc frstor test or xorl adc pushf xor out mov stc lock or pop sub scas sarb sar (bad) jne mov clc (bad) loopne call in add out lahf out push in call mov cmpsb sbb mov fwait jno movl mov lock into sub das add cmpl push idivb pushf nop loopne gs notb es push jge lret xor lods mov xchg inc outsl cld outsl mov pushl lods inc jb cmp or cmp mov jbe fsubl dec sbb lea loopne imul fs mov xor arpl jle lret jmp cmp ds cmpsb fcos mov les jne rorl inc add ss mov push xor popf sbb add pop cli sbb test fs xchg sub jge pop cli mov mov clc add dec mov push push movsl push push inc pop (bad) addr16 lods or movsb rcl adc movsl dec lahf loope cmp cmpsb pop xchg jg cmp inc mov iret rclb cmp pop xlat loop repz loop bswap ret push repnz add and repnz iret inc inc xor lock lret movsl mov add mov mov or pop push mov dec movsb imul and xchg push cmp shll xchg mov cmp cmpsb in xor and mov mov ljmp or sub mul cmp lret cmc jae and fild jl enter inc xchg mov inc mov fisubr jae jb stos lds mov mov mov out aam and push test insb sahf jge mov push dec or inc xlat stc xchg jmp jle mov and mov (bad) loope push in enter gs dec sbb mov xor and popf in lds xchg les hlt or sti sub sub mov jl xlat iret (bad) and arpl xacquire and sub or jb pop xchg jp jb addr16 lock cmp adc mov call insl mov insl fimull hlt popf push dec cltd stc (bad) xlat repnz pusha call push ret mov dec pop xor scas sbb cld push and cmp jae cmp es dec ja jns sub fwait jg mov rclb data16 mov call (bad) out cmpsl rorl enter pop ja or mov sahf adc sahf inc out scas sub daa jmp bound je jno cmp lret js lock dec sub xchg push or je or jecxz push dec push sbb mov pop mov adc sub inc push leave call (bad) lods mov cmp push and nop sub clc cs cmpsl pop jp mov xchg jle pop sub lock add mov sbb sub dec jno (bad) lahf push das sub and movsb cmpsl adc mov loop jg cltd arpl pop jno or lock lahf in add pusha sub dec ja xchg and test add cmc push ror outsl div lods mov mov fstpl adc sahf ret lahf sti std push xchg jo or push out mov xchg rclb cld cmc cmpsl cmpsb movsl pop inc push sub xor das xlat push sub dec fild enter (bad) dec test xor pop jecxz adc ja into ret test dec fs cld in mov pop push fcoms mov fsts ret jbe outsb add ret xor pusha mov jb xchg data16 add sti cmp add (bad) mov sub fstl hlt stos cmp mov xor stos fidivl or pop mov stc xor bound in jne arpl pop mov stos xor fstl or fwait (bad) cld shrb fsub decl lock mov ss jnp sbb int3 bound movsb inc std (bad) in mov mov test pop jg inc mov cmp das add jo sub cmp lret hlt pusha and cmp leave test pop dec and lret popa outsl ret sub xchg jp call je int3 jge or jecxz mov cmp mov ss daa call das cs inc movsl popa push dec adc mov mov inc dec mov xor (bad) dec mov adc xchg mov in pop inc xchg or out mov in push les mov std stc dec lahf push add and dec xlat insb out dec cmp inc pop aad xchg xor inc daa inc popa outsb aad xchg cmc aam int cmp call mov (bad) pusha pop jno fdivs loope incl fs loopne ret loop div es inc sub inc fsubs rcrb mov cli mov inc mov ja bound lahf adc loop jmp adc pushw push xor cld sbb fldl or xchg gs xchg in dec dec sbb test adc adc mov mov mov test cmp inc lret pop inc sbb jb repz xor jmp ret dec mov mov jg add stos mov jo jbe (bad) cltd inc out cltd dec imul cmp sub xor jno pop jbe repz jo cmp add or iret in mov je jge (bad) jb call lods or repnz aad mov adc out or add movsb and mov nop push xor cmpsl fsts push pop int3 mov stos add insb ds (bad) das pop sahf test add stos xor or prefetch mov lret xor in (bad) frstor loope fdivr mov arpl cwtl lcall dec repz imul inc push jno rcrb xchg sbbl hlt hlt and fcomip and and shr lods mov (bad) mov stos int3 fiadd pop jl push add adc das (bad) mov in daa pop adc inc push pop inc mov xor jl jb out sbb sti mov leave mov ja xor jp jmp dec in movsb xchg pop adc data16 push (bad) mov test stc out (bad) sti maxps stos jnp push mov xchg sbb ss mov inc data16 es push ljmp (bad) (bad) jl clc or pop les lock push pop mov jno mov fadds stos out sbb dec mov sbb sbb insl sub cs fsub int negb ret pop cmpsb sub lods das aam or mov jnp and push leave fmul lahf jp aam jno shll and adc jnp sbb je sub leave jo or adc cmpsb bnd out cli dec xchg iretw outsb xlat inc mov aaa out ss or sbb aad cwtl xchg pop adc adc test push cltd mov rclb insb sbb sbb test and mov push sub mov es outsb xor or (bad) aas rolb (bad) pusha adc or pop jl nop out cmp xor push mov mov mov add loope stc call stc or sbb push jecxz loope adc faddl sbb adc mov xlat inc jo push push adc jo movsl hlt adc pop bound xor stc xlat or dec bound repz pushf dec aad adc mov xchg pop cmpl das push push dec adc fcoms jmp push add dec out sub lock jno ret aam lret mov fisttp gs (bad) adc xchg cmpsb pop cmpsb adc lcall dec sub mov inc mov sub fidivl fcmove jae insb xchg mov out mov iret push ds xchg mov (bad) mov stc dec add sub sbb mov and and pop fwait iret mov mov out sub add pop lds sti push push cmc outsl js std inc std dec mov mov enter clc imul faddp adc cmp adc or into pop cmp aad jnp call jl int fisttpl ficoml sbbl xorl mov sub int3 pop sub xor test pop pop in jge (bad) pusha es call fbld shrl rclb daa add out lret and in jl sarl xor sub sbb out arpl cltd shl push out cmp push lahf sbb mov and mov cltd gs sahf mov xor test imul xchg xchg int mov mov fstl in mov repnz scas mul call push fildll and mov jae cmp xchg push (bad) sbb mov xor mov pop xchg cwtl and push jp imul stos or or js fist in leave pushf mov xlat ss out fs inc sbbb ret repz mov xor xor mov out (bad) sub dec dec into dec mov and sbb rolb mov (bad) (bad) jns cmp pop jne jmp je push (bad) cltd stc cltd enter (bad) in int3 out (bad) aam mov inc iret pop outsb jmp mov dec jle std fs mov mov xchg sbb cltd xchg pop (bad) ret ljmp mov mov fpatan movsl cmp mov imull ljmp pop or cmp pop movsb xchg dec pop xchg pop xor test push test add int3 repz (bad) (bad) and das xor push inc ret fiaddl or out inc push test pop popa ret mov xor sbb insl push jmp jp sub (bad) out push cmp mov dec adc dec ds xchg lahf mov imul test imul fstps inc movl rorl mov mov lcall test dec mov das hlt loop in loopne cld add test dec lods insl stos mov adc loopne pop test sbb xchg push arpl mov sub xor je mov lret mov pushf push call inc or hlt inc pop pop dec dec retw xchg jg ds xchg push nop jnp push sub jl mov imul psubw jae push pop jbe jns repz fwait mov add xchg cmp xor int3 pop jns sahf sub lret repz xchg (bad) sub pop sbb jp mov ret push fcoml jmp mov xchg std adc dec xor xor nop cmp ljmp jmp add lock in push (bad) cmp pop jmp dec xchg push or add arpl imul xor and aam mov ljmp sbb int3 jnp push (bad) clc or adc imul clc cmp sbb stos sti mov gs loope pop mov adc enter cltd test pop fisttp and imull mov dec gs ficomp mov inc scas push cmp sub int dec xchg mov inc adc cltd divb int3 das ret lods sbb lea xor out inc ljmp mov inc pop mov push (bad) divb jns cmp enter inc cmpsl pop negl xchg xchg lcall xchg in inc xor sbb and pop aaa cmp adc xchg or aam mov and cmp dec pop cli je rcr imul in movsl mov daa push inc (bad) sahf mov mov ficomp iret imul jnp xchg dec jge aam in cltd cld xchg pop test fs loopne push gs pop inc mov (bad) jmp and fstpl and push inc add pop lods stc (bad) push movsb cmp ds pop mov jl rcll js movsb sbb mov out ja ss sahf fs ss or pop stos sti in ficomp scas mov jle in or inc cltd mov mov fwait dec pop lods mov aaa xor push jns in test shrb pop fdivs into (bad) icebp fucomi (bad) jb jns mov cmc cltd mov or scas sbb cli xor mov cwtl xchg lds into cmp sub cli test cmpsl mov add dec and push lods cs lods movsl push sub lea insb mov enter (bad) fistpll sub pop add and js insl inc test ret mov cmpb cmp fisubl xor mov outsl xor inc and or out adc jmp fnstcw mov adc inc outsb dec jecxz xchg add fildl push pop fidiv cmc mov dec adc cmp cld ret rolb and mov xchg xchg test and stos mov inc fisttpl lcall dec jne in inc push sub lea add pop outsl clc or sahf scas inc dec test hlt pop icebp hlt shrl sti jnp cmp jmp lods cmpsl dec lahf xchg mov int push dec rcll mov xchg fbld jle adc xor mov jb mov push inc adc dec push arpl out sti add add push sbb fsubrl push movl jle mov xchg pop in pop cwtl pop imul movsb dec fdivs lahf cld lea jecxz aaa mov fiaddl xlat icebp mov sbb fistpll mov in xlat add push in push xor xor push push adc jbe ljmp and jnp aam xchg mov out jns int jns sub fcmovb sub xor mov xchg fldl mov js aad and push out push cli and nop das push mov popf pop out ret dec lds cmpsb xchg xchg test push sbb ror sti test into pop xchg fimul mov sub push fs pop (bad) jae (bad) inc popa aad mov jl xchg push adc mov pop lea mov rorl pop sahf mov cs loopne out fidiv popa pop (bad) enter mov in or or gs pop psubsw out fsubp mov insl (bad) cmc js sbb mov mov or mov out (bad) or negl xchg aas dec dec xor mov js pop stc (bad) cmp adc fstpt sub (bad) mov or idivl call cmc fcmovnbe clc xchg cmp pop jae leave sti stc dec xchg inc adc outsb xchg jmp outsl test mov adc xchg pushf popf lea pop add fs leave rcrb js rcrb push jl js insb and repz pop push jns add js add out call dec mov cld pop mov xor sbb arpl into and xchg cs push out stos ja xchg and and mov mov inc adc outsl sub sbb fiadd mov sub (bad) mov fidivr insb sahf jecxz push nop mov lret xchg sub pop pop mov out ret lods shlb test mov jo int fdivrs mov add lahf out sub ret mov sahf orb inc stc pop xor fldcw rcr ss and pop jge js jb nop stos xor add xchg adc dec ficom mov inc call push imul lret xchg jmp adc sbb loop fwait imul mov fdivrs jge mov fwait cs roll int sbb push adc jl mov insb xlat in iret xchg pop dec stos adc test add mov or sbb shl jle dec xchg pop into inc adc sbb sbb into sub pushw xchg enter repz outsb popa mov pop mov pop mov inc lock loope jg sbb inc jge nop int (bad) and push mov in clc push stc jns test repnz cmp dec sbb pop sub add xor rol cmp jge iret cwtl dec jl lds push ja and or aad aas inc cmc push (bad) or call xchg fdiv bound movsl rorb (bad) cmpsl mov adc (bad) lahf int faddl xlat xchg sub js in pop mov adc pop add mov sbb jo out pop or fs sub test (bad) aam dec enter (bad) cmp movsl push shrl les cmp fs jb or dec bndstx pop push cmpsl mov or push or mov mov ds and pop cltd push inc jecxz (bad) mov aad les movaps mov xor inc imul nop dec and push and scas push addr16 sar cld (bad) mov scas push movsl (bad) xchg test dec sub lock jno ljmp lcall lods xchg xor inc ss aas xchg jle dec cmp and mov mov inc mov aaa jg add dec shlb sbb dec cmp das arpl mov mov jo cmp push jo push push mov xchg call std sahf loopne leave add sub fs cwtl movsl (bad) in and inc iret push (bad) sub ret sub popa push push loop aas (bad) jp clc (bad) jne inc sub pushf cmp (bad) vpmacswd or nop cmpsl insl xchg aas dec fs popa (bad) repnz xor (bad) sbb nopl mov je das inc cmp jo insl cmp xor dec lcall jp dec add jno,pt or movsl orl js sub and insb in mov mov loopne xchg not push lods gs inc addb inc xlat arpl push push mov mov push in push int3 test outsb movsl dec dec inc jno pop imul fsub mov adc mov repz lds ljmp fisub xor jno pop je or stos add pop mov ljmp inc mov (bad) loop clc mov icebp scas (bad) dec add and scas mov lods rcr js push out je xlat mov ja ret movsl daa push movsb pushf pusha je adc dec mov mov cmc mov sbb inc lods inc les or or shll lea js mov mov fmull loop into iret mov xlat inc mov repz lahf fcomp mov fcom or outsl repnz push pop (bad) push out jne jnp mov mov inc xchg mov mov pop pop ret cltd in jo insb pop stc mov pop incl punpckhdq xlat iret and icebp sbb push cltd (bad) cmp (bad) mov xlat inc push dec adc popa andl setge mov xchg rorb add negb mov fsubrl sarb fsubrl mov dec ret cmpsl lds mulb mov jl arpl lsl mov inc mov stc mov inc into mov fisttp int pusha movsb insl cmp cmp iret push outsl ret pop mov (bad) fmuls cltd pop xor leave cmp pop scas mov cltd lret jo xor (bad) xchg fistl jmp mov push in dec inc jmp pusha jl sbb and (bad) dec jns ljmp (bad) cmp fnstenv lock fs testb inc scas fwait jbe sbb and pop je fstps dec xor pushf (bad) sub cld repnz sbb add add les inc inc cmp pop add sti int dec stc ljmp (bad) pop xchg dec inc xchg rorb mov test or hlt or push xchg lcall inc dec clc mov mov xchg stos cmp int sub test jb adc movsb xor insl and rcrb (bad) repz popa mov and adcl mov cmp dec (bad) mov mov test outsl add fdivl push pushf and jge inc ds adc push push pop dec mov movsb push aad xchg adc fsubs mov addr16 xchg pushf and jmp xchg pop xchg mov mov cmpsl sbb cmp addr16 push mov xchg hlt out out mov data16 inc cmovle inc clc dec sub jle jnp lcall xchg inc inc xchg cli xor scas pop push inc add ret add into test push mov call (bad) and nop mov xchg mov and xlat or outsl outsb test mov sub loope sahf mov mov mov inc clc loop lahf and test dec xchg mov out sub or xor test mov scas mov mov dec adc sbb decl jno pusha je lods fnstcw mulb into arpl ret jecxz sbb mov push mov test scas loop xor sbb adc push xor xchg lret repnz push test pop js test hlt andl dec insb icebp clc mov pop shrl clc jle mov (bad) push sbb dec or or inc std pop inc into pop pop inc test sbb adc inc icebp inc xchg push cld into lret push jge jns dec push mov push mov stc push sbb xchg fstl pop nop dec push push test sbb sti inc arpl fild je jbe add xchg ficoml sub es mov sub mov push push inc xor jns in sbb pop nop jle or pop mov aam iret out int or pop loop jno fcoms push sbb in add cli mov mov movl mov test xor sub inc movsl mov push mov push loope repz jns sub adc test shll inc int notb fbstp and sub jae mov mov jl (bad) mov xchg popa sti inc mov in scas int insl mov adc pop stc loope sub cltd (bad) cmpsl sahf add fdivp mov sub movsl aam mov dec rol mov add std xchg cmp shl cmp out popa rcll es loopne xor cld fwait mov das jne rep sahf lods mov nop arpl lods scas orb gs fbstp and lret dec xchg sti testl out clc jne dec loopne mov xchg cld lods scas or idivb aaa cmp dec sub test mov mov fcoms fdiv jmp jg and (bad) (bad) in mov jns into in pop push stc adc (bad) jle jo mov into mov sub sub lea jbe rclb ss pop xor pop mov addr16 in jp and insb sub (bad) lds inc add cld adc xor mov cwtl inc dec dec pop cwtl mov push loopne lret (bad) mov loopne (bad) cmp fdivs insl movsb push sbb add mov aad aad sbb scas push aaa push dec push push es fnstsw jnp mulb xor jecxz pop push lret les inc xor xlat movsb jecxz or movsb xor sti dec lret xchg dec adc (bad) es jp mov leave push outsl pop es cmp mov jmp in xchg jbe notb sub ds pop mov jl mov cmp (bad) jne ffree sarl fisttpl test jns leave push enter cmp adc das xchg pop push add xchg jl mull or cmpsb into rcll push sub pusha xor sbb es inc int3 mov sbb mov mov cli and cmpsb inc jecxz push pop and scas cltd (bad) cs ljmp push xchg xchg nop test jns call sbb and mov mov sub add stos xor add add imul incl fdivs ret ja cmp push adc inc jb pop inc in movaps insb cmp repz jp push push adc popa data16 dec push and and insb nop ljmp fs (bad) jae movsl jmp pop ficompl test sarb mov aad inc sbb (bad) sub jle pop adc adc ret ljmp mov mov mov mov add hlt mov jmp mov and out jnp outsl (bad) jo into fsubrl shrb fnstcw sahf in jge sti rol push adcb lock jmp xchg addl add xchg iret popa dec adcl fs paddsb mov pop dec mov jl,pn sub pop dec sub (bad) mov jge sbb cli jo xchg fsub cmp push push out ss sub leave push inc ret pop add lock rorb inc cmc and sub xchg jbe cmp mov pop push ror out ret (bad) xor inc mov inc fmuls dec inc push rolb das in xor stc in sbb aaa insb xchg shl (bad) adc inc pop xchg sti mov out jp in cmpsb lcall xchg inc arpl nop cmpsl test das cmp jmp aam das sub inc cmovbe push dec fcoml inc imul enter mov mov ficomp jmp adc mov push je mov fwait xchg sar test push xchg jp dec cli jp loopne sbb cmpsb push push popa sbb shll (bad) (bad) jp mov (bad) imul xor pop inc xchg in or sub pop cli xchg es in jl pop cwtl or (bad) movsb rcr sub cwtl pop cmc dec je jae jbe (bad) xor rorb es sbb out ss and shl jmp adc int jecxz pushf (bad) inc xor in mov aaa popf pusha jl sub sub fstpt movsb adc pop cmp jns movsb aam int3 mov inc outsb or jmp sub xorl ret jg mov lret test loop mov fs add nop out add arpl xchg jge ret mov jnp jge lea mov xchg pop clc mov sub push jae daa sbb inc mov jge popf (bad) push dec mov xchg xchg out and je jecxz outsl jle fdivrl fwait dec nop xor (bad) mov xchg hlt je fimull js lret loopne dec repz pop rcll mov xchg hlt jmp lahf notl xlat xor mov cmp test add xchg movsl shll jmp test sbb loope sbb je bound popf out mov pushf into xor scas xor mov or inc lret icebp (bad) cld mov movsl rcrl decl (bad) js (bad) mov or cmpsl and sbb mov mov cmp pushf cltd call shll int cmp addr16 xchg add cmp jg mov loop lar js fcomps ds add mov insl mov bound dec pop out rcrb pushf (bad) lods inc clc pop cli mov jmp iret xchg fnstsw rol test cmp in cmpsb jge aas xor or jns scas adc gs test xchg push in es loope pop lret cs mov dec imul ds insb cmp icebp xor test idivl and add mov jae jl add jmp mov xchg sub sbb jp fs inc mov lret mov movl mov push bound cmpsb movsb dec sbb dec add ss mov nop jno xchg sahf jmp repz sbb inc je rcll pop outsl into testl inc jnp inc adc cmp add jb add lods imul cmp sbb mov in inc ret mov mov sbb fwait or bound ficompl gs out mov dec rolb mov ja aam xor gs rcl inc stos push test pop add mov rcrl pop jge mov les inc xchg lret js jge inc andb dec inc fsubrl int3 daa push add iret mov out enter je fwait xor push (bad) fnop test and mov sbb jecxz stc jle adc addr16 or xlat cs notl das test inc push mov push pop jmp andl insl movsb jne rep arpl repnz bound cmp js mov fdivrs add pop sub mov dec mov aad jle cmp js dec es jae push pushf dec adc test addr16 sbb add insb (bad) std cmp shl aaa in int3 out mov imul les lods loopne or lods push leave sbb in jbe jne push or and outsl push xchg pop test shrb push rol fbstp add mov or cmpsb dec mov pop jnp idivb inc mov (bad) imul jno mov push seta sub push es pop sarl fistpll loope mov dec sahf xor movsl adc roll inc adc out roll mov inc insl mov adc hlt cmp inc push pop adc pop hlt in stc in add imul out inc std cmp xor enter pop stc out outsb sub adc inc mov push xchg xor into ret out inc ret xchg mov movsl mov test por cmp inc adc adcb adc lods test xchg test ss in outsl mov (bad) jmp push (bad) pop sbb inc cmp cmp inc pop fsubrs mov (bad) add adc add mov inc push std sub sub bound cmp repz movl push aaa addb xor push adc ja cmpsl jb stos (bad) or (bad) call (bad) pop out stos scas adc or dec les es add push out ja push rcll pop mov (bad) lock lea imul xor ss and arpl or int3 jl sbb jle xchg cmpb sahf lcall jb call cmp sub je dec int3 in mov stc xor (bad) lods sub repz (bad) sub add jne jg push lret dec les (bad) (bad) fs cli (bad) stos and stc aaa jo ret sbb scas cmp mov les (bad) pop mov pop pop add fstpl out ficoml sbb and dec call stc pop cmp leave sub and lods and push and aam jle xor jbe and cmpsb sbbl add sub lods inc cmp lahf xchg test popa jg ret out testl lock add mov mov mov mov dec leave into pop lea cmc sub mov loop aad inc test xchg aam (bad) xchg adc push sbb or dec dec aad bound lods lods and scas ljmp (bad) or dec lds xchg je movsl lds pop sbb imul fsubrs sub or loopne sti cmp nop mov jle fabs xchg inc push and ss insb test push inc lock dec cltd aaa sbb ss sub fistpll sahf jnp nop mov cmp xchg xor sbb lods mov div mov mov pop mov xor mov mov sbb cmp lods pop jae cwtl cmp dec jbe or xor and dec xlat xorl add xchg xchg jnp lcall out jnp lcall pop aas jge mov inc (bad) mov mov push dec add push int3 mov (bad) push iret fmull xor nop mov lds ficompl xor sub inc in outsl test scas lret jbe scas pop jecxz xchg jle inc inc ss jo sub mov sub pop add mov addr16 push stos xchg dec add es lds (bad) icebp jle dec jno in or mov adc pop cmpsb clc xchg mov in lret cmp stos cli sbb (bad) xor rcl adc sub pop in xlat mov add stc in mov mov inc xchg jne add inc pushf jmp clc pop addl cld cmpsb out (bad) repnz push and and popa je push push jl xchg cmpsl add cmp sbb sub stc cmpl in mov pop addl pop lods or xchg movl push fcmove out movsl dec lods in loopne (bad) push out stos rcl jecxz call xchg dec dec cmp push adc sub adc and jbe pop pop sub fadds aad mull loope bound and and jne pop sub jbe ss cmp push sbb mov mov ficoml push jae mov or cmp icebp inc mov out and dec aaa and jmp adc jno mov mov fprem cmc aam push push stos pushf mov call mov std lods xor cmc push jg sar inc xor out std add loop cmpsl (bad) ljmp idivb stos mov adc in (bad) insl repnz insb vmovdqa (bad) iret orl int and xor (bad) mov (bad) cmc inc outsb xlat pop cmp rorb into in or movsl test pushf fadds fimul jg xchg faddl jb push lock and loop and mov xlat insb mov jge cmp xor das sub jns faddl and sbb psadbw rcrl sbb push dec fdivr loopne cmp cli jmp push (bad) sub (bad) and pusha popf push pop mov js lods (bad) movsl sahf push mov nop push mov out mov xchg bound lods std jmp xchg sbb mov movsb xor int3 rolb or imul loope leave jle mov push push aam ret adc nop faddl repz fwait jbe jb pop and cmp xchg (bad) aas gs cmpl test aad mov push dec add shrl stos mov dec aad mov adc pop sub add pop jno cltd in dec fdivrs dec (bad) aaa mov push mov push lods enter add sbb lret lds rolb lods in scas sbb repz outsl mov jae test shr (bad) mov (bad) or sub xchg or stos jge adc xor (bad) dec dec push in and push scas clc jns push int pop add jns or imul mov pop mov mov xchg add ljmp dec (bad) and loope mov aaa add pop cmp loopne xor insl push push adc jmp pop out push sub pop sti jl sbb outsb and jg mov rcrl ret lods jns xor decl and pop add cmp cld enter xchg add pop out aam aam fcompl inc sub ret mov dec or xchg (bad) mov cmp xchg adc inc ljmp or (bad) and adcb jbe repz js sub push pop rclb lock or cmc imul mov pop in sbb adc sub sub (bad) enter aas mov dec stos in outsl adc ljmp popa std mov loopne adc mov mov in inc outsb sub dec jb or test ficompl pop idivb andl mov in inc dec mov das mov das out mov jp dec popf mov add mov mov test sub cmpsb push sbb xlat jbe out xor scas adc (bad) arpl sub jbe mov and jns sub out push fisubrl sbb fwait mov and pusha jae ja nop cmp aad stos jno es sarb sbb subl sub mov popa xor (bad) js adc in (bad) mov dec fisttp adc sub mov cs sub ljmp sub imulb test mov and pop mov shll inc lret jnp ss dec cmp xchg fucomip push jge mov cwtl jae sbb rclb test pop xor ret rorl push sbb sbb mov cltd (bad) jbe add pop mov mov sub call fstp jne sub xlat cmp sub xor jecxz aaa movsl jg popl and add rolb ret adc mov jp inc cmp xchg imul lret (bad) mov jo push in lret or push push dec (bad) xor mov cmp outsl dec fistp jo ret mov pop xor pop mull ja dec test mov pop inc mov inc add out cmp call add pop jg fsubrp jo insb (bad) push cmp rcrb adc sub pusha dec icebp pop bound (bad) movsl insl push inc dec sbb inc cltd in add (bad) xchg (bad) pop add lock inc or mov enter aad enter daa inc xchg add pop mov aas cmp call out push sub or jb xchg adc cmc aas js push aad pop mov ljmp mov jo push or mov xchg rorb xchg hlt and repnz mov push mov bound lret jecxz cmp dec add push and dec into divl lock sarl xchg sub test xchg push sahf leave mov inc movsb jbe xor jb add mov or repnz xor lret push aad and int3 repnz insl stos pop push or clc scas mov imull stos test inc insl xor mov mov in inc sbb fs mov ss and mov sub inc mov inc call sub loope xchg or adc push mov sbb jp mov adc rcrb (bad) or fidiv sti xor mov test gs or xchg cmp jmp pop rolb mov adc jbe insb and rcl mov mov nop cmc inc add mov lea add std js popf les inc (bad) xchg pop adc lret and xchg inc movsl ss push push xchg out jmp adc add jle movsb mov jge dec fwait dec and dec sbb fcmovnb les jo xor push mov cltd jp xchg sub pushf inc adc stc jle mov fcomp fmul and inc lahf pop xchg or cli mov cmp divb clc pop xchg xchg shll iret mov inc xchg jns xchg fadd mov insl pop lea clc push (bad) push (bad) ja or mov and movsb hlt push xchg lock push inc or sbb loope lea rclb cmp jp rcrl mov cld xchg (bad) xor es or push mov push lcall lock sahf mov stos imul mov int stos jmp xor xchg jp adc mov out out fldcw pusha rclb xor int3 sub dec lods jnp mov lret pusha push xor dec ss inc nop addr16 insb pop or hlt jnp push das (bad) out (bad) repnz xor cmpsb xchg idiv fidivrl js fwait bound call jmp das cmp cmpsl test sti sub daa cltd into and orl jge dec jbe pop cli imul fidivl pop (bad) xor loop fs jge mov inc sub sub lcall add adc dec sti jl jmp mov pop fldenv and in imul je das ss inc sbb xlat mov sub or pop adc and (bad) aas lahf adc loopne adc stc aam mov xor hlt movsb mov mov push mov leave aam dec outsl and mov leave inc cld add cmp les sub add imul push shr test dec daa jecxz add mov out or jp jne arpl fimul ret clc dec sar pop iret adcl bound sbb xor cmp jmp mov daa vmwrite adc mov adc mov (bad) dec cltd mov and mov das in repnz mov movsl xor cltd aad (bad) and pop sub push xchg inc push mov cmpsl rep mov adc testb outsl inc outsb push jae adc cs or jbe mov js lea mov pushf mov fisubr or add aaa mov std cmp mov fsubl movsl dec call xchg mov jne mov or mov cmpsl pop mov mov xchg pop cmp sbb or sbb xchg aas bound mov pop and or mov (bad) repz shrb jecxz rcr xor cmp shll out aaa dec sbb setnp inc ss test aam in pop dec ljmp dec pop mov dec (bad) fldenv loope fcoml test pop push pop movsb cli ficom cmp push push sub loop pop loopne mov (bad) adc out jbe fmulp or int es imul mov mov pop dec pop js rcrb adc mov aad sbb push mov pop stos xchg roll add ss imul mov and pusha sahf cmp int pop lods rorl cmp ret sub popa call and test xchg scas pop adc adc mov (bad) movsb dec (bad) aam cwtl (bad) jne add std mov sbb icebp mov addr16 push xchg pop xchg cmp jns lret jmp je xor mov sti (bad) push sahf and fs push wbinvd icebp mov lea mov js mov mov sarb cmpsl push adc dec mov jmp pop xor (bad) or rcrb scas scas inc test into dec lods jns jo sub sbb sub cwtl cmp xor test sbb xor or or push jnp push sbb out lock int3 jg pop mov mov int inc movl mov popa mov sub js mov xchg jne fcmovu mov leave mov push loop cltd fdivrl aad cli add xchg fdivrs test pop push xor cld iret dec addr16 mov lock or int loope xor idiv ret xchg mov in je scas xchg mov rorl fidivl test dec ret jbe jns in fsub aam sub push jo adc inc pop dec lcall das shlb jl or in adc jae fcompl out pusha ficomp xchg jae lcall outsb adc fist inc imul fsubrs adc out aas xlat roll fadds pop xchg adc fdiv add mov sbb stos (bad) jb test sar lret bound je data16 inc adc loopne xor ret push subl nop or jns jle push sbb (bad) scas mov arpl lods (bad) pop cmp andl fisubr loope aam xor pop pop xchg dec popa jmp mov or call insl repz or arpl xchg dec xor stos adc cld ficomp or (bad) scas cs mov cmp jns fildll mov pop inc xchg shrb das movsb rcll mov xor stos fmuls push inc dec jl pop pop test pusha mov stos mov cwtl cmp jge lret sub test cmpxchg pop cmp jle adc dec icebp in dec inc add pop jne subl cmp pop mov into push xor test shr mov in in stc lahf mov mov lret cwtl pop mov (bad) dec fldt nopl or movsl inc push addr16 add lret call out pop mov fildll clc sbb add notl iret incl add mov or loope push cltd test int roll adc push xchg mov sbb loope in mov mov mov mov sbb rclb sbb xlat fwait stos or data16 mov sub or xor fmul adc cltd push outsb pop jnp xor or mov or push cmp lods jle mov fld lahf fs rol sub mov jae inc or sub daa decb movsb mov ds mov add mov add pop in call xor (bad) xchg push xchg sub (bad) xor mov sub jae mov stos and push sub xor xor or scas cld call pushf fldl cmp popf bound mov in (bad) repnz mov xlat mov or push fisttpll pop insb mov inc push mov outsb outsl and stc cmp adc jge imul or add mov sbb mov mov cltd (bad) xchg push add subl enter add sbb inc cmp rcrb cmp cmp jmp dec sbb dec out pop stos sti xor push sti arpl mov imul ret out jns dec (bad) push ja fistpl fistl sub scas sbb dec pop mov push xchg push dec dec mov daa mov push insl call xchg or push mov push pop mov mov test jne xlat lcall jbe dec xchg push pop fs xor jl enter cmpsb inc pop sbbl loopne pop bound adc jno mov dec and sub lock pop mov test enter scas call xor or gs decb pop stos popa (bad) test dec sbb inc jbe stc mov (bad) hlt test dec decb adc repz pop fs test jbe lods sbb loope adc ss mov sbb pop adc dec fidiv push std int3 mov pop cmp movsl jmp fxch (bad) leave mov cmpsl sub dec xor cld pop sahf je imulb test (bad) jo adc or cmp adc scas sub xor jb jmp cld jp xchg sbb mov lods lcall (bad) into inc mov mov or mov jl sbb pop xor xor pop mov (bad) lods testb inc outsb xorb dec je sti push push pusha imul fcompl pop sbb cmp sbb loop mov insl rclb vpaddd sub iret ja mov pop and fcoms jno adc sbb pusha andb cmc sarl je ficompl lret push ret dec test (bad) setbe mov mov les xchg pusha nop and (bad) push clc pop or inc push mov lahf inc outsl mov mov out dec aad xchg fdivl dec scas inc adc xchg movsb jle or pop jecxz adc nop xor xor out jmp ljmp aaa mov leave push (bad) sti and xchg xor in pop (bad) lock hlt add fucomip mov mov out xor dec xchg fbld and mov cld nop mov adc imul pop cwtl outsb dec xchg fs jl ss xlat push add int3 mov fwait ret mov fidivrl loopne xor pusha icebp push mov movsb inc add pushf lcall aaa dec icebp xchg jg pop mov in xor and mov ja lea mov test dec jl or pushf jb mov (bad) add sub fwait scas mov mov mov inc adc add sbb or fisub pop fwait push xor mov add in rclb add nop jo mov repnz mov jns mov test test mov mov arpl sub (bad) lods mov das pushl aad test in jmp insl push arpl pop rclb (bad) lcall xchg dec sub (bad) pop pop push jns jl pop jge iret imul and fwait sbb sub ret jbe and pop int3 sahf add sbb aaa inc negl lock out cmp ss sahf cmc cmp pusha std pop cmp adc lcall (bad) xor jge nop mov (bad) repnz repz call test cltd rorl mov inc sar mov lcall aam sub in mov mov pop je pop (bad) xchg leave call lret jmp cmpsb push jmp xlat mov xor push mov loop pop xchg or or mov push push lea dec fsubl nop ror cltd mov adc or adc into cltd enter mov int3 rcl push test lahf jo dec hlt lock pop fidiv in sbb mov (bad) adc and mov xchg (bad) loope pop inc cwtl das je dec mov stc xchg cli aaa not scas dec fadd je jno ljmp lret adc mov ss ss cmp mov pop out (bad) cmp pop (bad) mov jb popf and mov add pop gs mov mov ljmp lret cli mov or ret and mov jle adc loope and popa (bad) mov in shr mov ficompl insl jo adc push inc sbb test popa das arpl mov (bad) jp fimull pop cltd or sub outsl int3 push ret mov scas gs aaa mov test push cwtl jbe sti jo sbb std call jle adc mov push or dec mov mov xor (bad) into inc xor ret test sti lock mov in or dec and mov in mov repnz enter loop sbb mov int3 cli inc roll push enter call out test mov les add inc and and lock push sub int pop std inc loopne xlat dec mov jns cmpsb lret adc jno lods cli ljmp ret movsl cltd dec cli mov sti xor fistpll sbb lea xor testb fwait xor mov cli jb pop mov inc push lret je lcall inc sbb xor or and inc insl das rorb jnp sub jne aam es mov repz inc xchg fmul or lahf shlb lret aaa inc in pop sub imul nop sbb xlat cltd insb push icebp jb fmul dec mov iret mov je mov mov xor xor xchg leave dec rorb stos xor pushf pop loopne daa loop dec fcmovne fnop sub mov pop add stc fcmovu addr16 push in cmc dec mov sub push add add test aam jb popl test jecxz sbb je imul mov out jb outsl imul popa aas xor out rcll xchg add test or test mov push repz cmpsl sarb stc iret adc repnz xchg and dec lcall sbb add xchg aas mov roll ds test adc jg sub mov cmp ss lds xor push xchg ja mov mov dec int3 mov movsl and sub addr16 repnz push sbb mov push (bad) xchg mov ja lock sbb mov ss xchg fsqrt mov lret push jecxz jp call dec and inc sbb jno daa sub jae mov cmp js sub leave mov call jle data16 imul push mov and push mov data16 inc in inc jge int mov xchg loope mov rcrb cld add (bad) nop lock mov adc mov xor mov jne or xor xchg sub (bad) into stos adc dec or out ds aaa movsl mov sub dec jecxz rcr out lahf pop loopne (bad) clc jnp ds clc xchg rcl xor dec call out fsincos mov leave hlt call test icebp scas xchg (bad) cmp sar add nop subb xchg lods je in aaa push sbbw or inc (bad) je ds mov jmp cmp dec adc faddl xlat cmp pop inc mov sbb add jge xchg cs dec add pop out xchg jne xchg loop lahf mov mov pop xchg mov outsb or mov mov scas xlat and xor fcoms xchg xlat (bad) ss bnd arpl fstps je mov mov push dec cld aad stos test fildl in rclb in test int mov xor cmp mov push jle inc adc bnd decl sbb jge jne jle cmpl jae jae mov mov imulb jmp aas loop (bad) xchg inc add xchg sbb cmp mov fisubl nop xor jg dec imul jmp cmp pop sbb leave cmp inc add jg ja les test (bad) decb aaa add dec adc fxch hlt in out hlt jge loopne lea cmc sbb push push xchg dec sahf fnsave mov add xor cmp dec data16 or cmp (bad) movsl and xchg cmp push or fcompl cmp adc mov sti mov call inc mov push push dec mov cmp mov lcall cmp sub push cmp ds inc pop call rcl inc iret cmp xchg or popf lea dec loope and aam mov dec push nop dec int3 adc xor rclb sub dec inc ss mov pop mov pop popf jl pop iret in (bad) insb push xlat add sbb (bad) mov cmp call sub mov xor dec push pushf cli test push sbb pop mov cmpsb mov and xor xor mov cmp xchg mov loopne and daa inc fwait jns cmpsb and gs pushf jo lock inc mov xor cli add mov xor cwtl and push test negl fstpt dec sbb fldl and mov xor mov jo stos add mov clc or mov and jl dec sub inc xchg mov dec mov pushf imul cmp jne xchg pop fwait push test cmp jnp mov sti push cmp cmp stc scas in jb pop lods sbb jl iret lcall sub jbe xchg sbb fcomps sbb sbb movsl xchg jmp add jmp inc adc cmp cmp and popa addr16 push add jl xchg or movsb shl mov sti int lds imul xor mov pop sbb push out or sub push mov dec cli push cmp lods into pop ja push xorb (bad) xchg lret pop pop mov and ljmp pop mov insl iret xchg lahf lret andl out pop and aam sub push pop cmp jl xchg mov sub xchg and rorb dec sub cmpl fwait ja dec push jge cmp jmp and rorb (bad) jo stc pop (bad) xchg sarb pop int3 sub adcl nop cmp scas mov xor xchg in jg inc andl jecxz ss jg xor mov jbe or repnz movsb outsb mov sub sbb inc test ljmp dec or js xlat fiadd cmp sbb test bound sub push mov mov pop in ds shrl lret xor jae jo and add shl and adc cmp xorl sub bound push xchg std getsec std lret push cld jle data16 (bad) jnp mov out or popf (bad) xor fcmovne and xor fs jne cmp cmp adc in pop sbb lock mov add xchg sbb xor mov les dec xor push pop add lret out out adc ja jb out xor dec cmp mov lcall mov xorb dec ficom xor push xchg and ret pop in mov pop sub sbb dec gs ret adc imul xor test insb pop and in outsb mov xchg out (bad) stc cltd popf aaa mov je cmp in pop xor movsl or cs dec add pop add imul std (bad) sbb mov int inc xor mov std push sub (bad) int3 arpl jmp and lods stc and (bad) shlb aad or adc mov clc (bad) and enter les ljmp loopne cmp jle insl nop pop mov jle pop bound cwtl lea adc leave xor ret xlat add lret mov repnz int3 sub cmpsb or mov or mov rol popf fdivl mov fs shlb mov adc push xchg dec add (bad) mov adcl stos sti jno add push push repz (bad) addr16 jnp,pt and adc in iret insl scas jb loop popl push adc mov rorb outsb dec cmp sarb cmp cwtl fdiv dec or mov and mov cmp cmp negl scas sbb incl shlb sub lea push das insl jmp test xchg lock xchg call mov jmp sub popf mov or jbe ss jmp push and jg add popa jle testl mov lock dec mov inc mov xlat jnp pop mov mov add jne mov pop adc test pop sub (bad) mov jmp (bad) and lods (bad) hlt adc mov dec test cld add add pusha push push stos jp mov push jmp xor xchg dec push xor dec std xchg push cmp lods pop fdivl (bad) aaa mov pop push inc inc in dec test jb jno jg xchg das bound jmp dec inc xor in or xchg (bad) add mov loop xchg scas jecxz cmp cli sub adc sub sbbb and jp xor test push (bad) inc mov xchg ret lea aaa lods add sti mov pop mov push cli (bad) cmpsl sub push movsb arpl mov xor repnz into aam shll aam mov mov push mov pop in jbe into lret mov xor setl mov into loope pop ret mov inc cmp push rolb sub mov mov cmpsl jns add in cltd dec jbe js (bad) ja iret mov cmp cmpsb std mov mov mov dec sbb out dec pop (bad) popa mov sbb loop cltd jmp mov and inc push mov ljmp fwait pusha adc je arpl mov sub mov cmc outsb xchg aam sbb mov pop add cmpsl sub cmp push psrlw inc lret ja in aas jecxz dec and xchg aas lcall stos jmp xor dec in aas loope ljmp add daa test (bad) mov sub push jecxz sbb aas std paddusb mov ficoml dec or lcall gs mov fidiv pop call mov fild push outsl push or cmp (bad) or sub add outsl dec orb adc xchg movsl in loopne pop push rclb shrb jl pop dec and add jb data16 xchg lahf inc popa lock aad xchg inc hlt xor xchg or xchg adc push rcrb cld loopne pop adc inc (bad) sub and or shlb pop mov mov ficomp fs cld sti aad dec insl divps pop and inc add enter jae cmp adc dec jae ret notb enter sub cli push cmp dec add lods xchg lret (bad) or jge and stos mov cltd sti test loope ljmp arpl in stos and fdivs pop cmp mov sub mov roll es cltd stos sub fstl jne mov adc mov int3 push enter push out add pusha pusha inc ret rolb adc adc aas cmp insl or pop arpl dec jle mov movsb movsb mov mov es fisttpll add xchg xchg cmp pop outsl inc (bad) js sub mov les and jae int lods in sub add dec or scas lcall dec fcmovnb fstl inc out jae xchg xor ss fnstsw outsl xchg inc push bnd cmpl leave inc pop push rol mov mov enter mov jae,pt pop cmp fiadd or xor xchg mov daa sarb cmc dec insb mov push iret or add inc xlat mov (bad) nop lods push popa outsl adc daa or cmpsb add cmp (bad) or stos ret loopne push rcl cmc pop std xor test jb and sbb int inc push mov jno fs xchg fdivl and cli aas movsl dec xlat push adc hlt (bad) push push mov lcall imul push nop push inc cmpsl cmp aam jl adc stos mov push xchg dec hlt (bad) imul loop loopne test add test pop orl pop mov inc sbb cmpsl lea nop inc movsb mov aas repnz mov mov dec mov cwtl bound inc clc (bad) cmp dec jl aaa fstps mov in xlat test cmp std jno inc insl mov mov jbe push fidivl mov das loope adc ret das adcl es xlat dec push sub scas mov sarb (bad) jp add xchg cli cmp faddp xor mov scas cld mov dec (bad) hlt push (bad) push enter xor adc stos or mov sahf repnz mov adc and xlat aaa pop mov xchg ret mov gs jo jle movsl repnz adc mov xor outsb mov ret lea cmp (bad) mov mov jbe aaa test mov enter cmpsl jg sbb sub pop inc and sahf lds sub nop lods repnz lods add ret (bad) das aad stos lea sahf or aaa out dec sarl push pop les loope pop data16 xchg mov mov stc sarb ret popf in (bad) cmpb rcll div sbb and cmp xor and push dec iret cmp (bad) jae nop pop dec inc cmp jne cltd out lahf es icebp out fisub cs inc sbb mov mov lahf psadbw pop push hlt cmp lock inc xorb pop xlat cmp into and cmp inc push es jae push sbb aaa cmp dec jae cmpsb test xor push inc dec popa mov subb cmp stos aaa jbe lods in ss das jbe bound mov mov jno ret mov sbb sti orl adc mov push dec pop or fwait add popa cwtl and and push cmp inc cmp ss hlt out rclb mov out test insl xchg ljmp insl pop out cmp lea rcll clc iret imul mov fisubrl push cmp push or sub push fistp sbb add outsb dec leave test ss push ljmp inc jle mov cmp and (bad) mov addr16 and hlt (bad) dec (bad) and jno xchg fucomi xlat hlt scas mov les (bad) and sub lock enter push stos sbb push cli fistp xchg jp iret fs imul les xchg outsl je jle popa and pop inc xlat sti mov bnd or cwtl outsb sub decl cmp (bad) dec lea (bad) into std test js ret sahf and (bad) inc or in pop and sbb das push xor bound pushf fimul ss dec and scas movsl in popa pop cmp pop sti loop mov push mov lret fbstp les xor sbb xor lods cld push xchg repz sbb aam insb jo sahf sub add inc dec mov xchg aad shll lock shlb mov or xorb jo sub lahf or mov jne jae mov or lret cmp xor lea nop dec gs mov jae js jae and sbb xor lret ss cli xchg inc push jmp test dec lods pop jmp cmp xchg lret into out dec sbb aaa testl mov inc add (bad) int lods pusha into dec sarb test inc clc mov imul cmp cmpsb add stos mov inc mov test add inc push test daa (bad) testb dec jb or movlps rolb loopne jo xchg and push cld dec dec leave xchg ret out dec aad mov adc adc shll and jns cmpsl jl cs int inc jecxz jle push dec fdivrs lock movl xorb mov insb cmp out mov lahf sarb xchg pop (bad) sbb out and orl jbe fiaddl mov repnz adc lahf mov dec inc cwtl (bad) fild (bad) gs mov pop push icebp push jmp inc or pop adc sbb clc add call and mov pop int3 cld add call sbb adc arpl stos andl adc push lret outsb and xchg jns outsb and add cwtl jmp (bad) mov stos push popf inc xor imul sbb mov dec jl imul or nop xchg lahf shrl xchg sub xor fcmove sub jp xor and xlat outsl mov hlt cmp pop addr16 adc push dec aad out mov call loope or or sbb (bad) sub sbb (bad) aaa subb shrl fisttp jmp leave push jecxz loopne sub or push rcrb outsb mov xchg lahf out sbb mov mov sub fadds mov add cmpsl test xchg das inc daa pop mov icebp or fdivr test inc jnp (bad) pop and das pop cmp ret lcall iret ds pop and fcmovne pop push adc xor dec (bad) mov adc scas fwait (bad) dec and xor in jno sbb (bad) pop jle (bad) mov in adc andb mov imul in sub addb push movsl stc or in lods jo mov dec mov pop and inc xchg pop or mov arpl mov cmp je mov pop lret xor mov mul inc fdivs arpl xchg mov test inc lret fucomip mov pusha lret inc or push ret cmc push mov fcom aad lods cs movsl icebp fldl sub xor out dec (bad) lret cs inc mov in mov inc sbb push add inc adc add ret adc outsl mov sub (bad) int sbb aas jo test xor add fs test lds pop mov and data16 leave pop dec jae fstps icebp sti (bad) push int3 in inc adc dec and jns into (bad) inc or ljmp insb pop cmpsl or push test inc lahf sbbb adc call in add int sub jne push shr mov fidivr dec (bad) (bad) hlt sub in sbb dec push pop push mov addr16 push mov mov xor sahf xchg pop loop insl pop out int add enter stos inc push sahf xchg add jb test mov cld aad mov and out out mov ja bound cmc add mov or adc add add icebp lcall xor jne cmpsl arpl (bad) aaa icebp rcl popa fbld insb mov popf xchg inc sti insl mov fwait sub mov scas push sti fs mov jae jge inc xor movsb xor mov cmp mov scas bswap push inc imul push sub mov xchg inc data16 fs and (bad) xor loopne es ds push mov lods inc inc xchg adcl sahf mov inc fbld push (bad) cmp je inc xor ds push jp inc stos popf jge jecxz add adc add iret (bad) dec aam xor js lock in mov jge inc je dec stos push add and (bad) or fsubrl imul inc inc out test or sub pop mov jp cwtl fwait (bad) jge xchg ss mov sub dec dec jb cmp xchg (bad) sbb pop fldt js bound fsub sbb call inc sub mov cwtl sub pop fcomip push pusha jo pop repnz jbe jmp popf pusha and xchg sub pop (bad) jg and scas and fimull ja and fdivs pop lret fdivs dec adc xchg xchg (bad) cmp cmp lods dec pop les adc mov sub test rorl incb mov test roll mov cmp pop int3 mov inc sbb push cli cs fist iret cld mov and jno lods mov outsb rcrb mov jge test xlat sbb push cmp pop int jb mov (bad) ja test jo in add push ja sarb xor inc (bad) lret pop jbe cmp test scas xchg dec xchg movsb fwait sbb repnz fdivs or xchg rcrb insb sbb mov lahf fistpl adc stos movsb cli pushf xchg sub adc push push lret cmp xor leave icebp stos xchg jno sub js xlat insl cmp adc pcmpeqw mov xchg fist pop and cmp xor loope push arpl cmp test test dec or pushf cwtl ret and xchg in (bad) jne pop lods lahf or pop dec fwait jmp imul push sbb shrb inc imul les mov pop movsl sub jnp movsl jae cli xorl int3 (bad) adc push inc ds pop jb es orl (bad) dec xor inc jge movsl (bad) xor jle leave xor sahf mov jbe or push inc pop aam shlb shlb (bad) jg cmp sub out fsts ds lock in call call aad adc cwtl push inc inc imul pop out loope rolb mov xor sub test lret xchg mov mov cmp mov cmp mov mov idivb pop test sti push pop jg adc sbb mov adcl mov push jle push iret lods push clc lret mov inc cmc insl outsb and sub aas les iret in mov mov jg (bad) sbb inc xchg or push movsl or cltd xor ljmp cmp movsl push xchg clc idivb bound fbstp leave mov xchg mov lret jae cltd das and jmp or mov aam mov mov lods inc lds mov test xchg cld icebp sub in stos out dec ss pop fidiv dec dec imul out sahf js test ja sub sub test imul jbe inc ja test dec jmp and dec (bad) mov aam imul test std ja inc sbb out jle fidivl ss lahf adc and inc inc (bad) popa (bad) push mov cmp mov jne insb data16 sbb pop aaa test sbb and fldcw out xor jecxz push lds lea push adc or pop mov xor (bad) arpl lea cmp (bad) sti insb mov and add popa rol (bad) adc adc loope dec or or cmc lret lods push sahf sub ds jecxz jg sub xor fwait jp sub ret (bad) ret mov xchg dec fs cmp aas test jecxz xchg fidiv popf push inc lock movsb ja jns add mov inc and cwtl loopne nop imul test std leave test fadd cmc (bad) jns mov sub push dec cmp pop mov cmc cmp lds inc sub and in sub test dec lret (bad) imul icebp rcr dec fistp push lahf daa push sub not addr16 sahf jbe test inc sahf movsl out cmpsb xchg jbe scas cmp outsl aad jno xchg lods aad das xor mov aad inc clc (bad) dec add faddl xchg sbb pop lret inc mov mov cld sarl and xchg js popf (bad) mov mov out cmc loope nop and notl movb sub lods adc lret jmp xchg data16 ljmp mov and enter or dec ret sub and insl lcall push jb nop pop jecxz test insl out out stc jo sub aam inc mov jle sub jne mov gs fcmovb fmul imul pop cmp rcll jb sub xor mov adc lret scas dec and adc scas push repz inc movsb mov rcll adc mov push add and (bad) jle jp out jae and dec and and popf clc adc cs xor inc push (bad) call stc cs ja pop mov pop cmp push in andl loop or dec push inc in fstpl or loopne aaa aas lock or add pusha mov in push jae pop mov es stos push test mov jmp daa mov push cmp es push sub xor test adc ljmp rep insb popl dec out lret dec pop insl adc out dec pop test xor std sbb fstps scas cmc jg aaa out push dec xchg mov outsl in dec mov sub ja addl fisubr cmp das pop or xor iret sbb cmpsb xchg icebp xchg loope mov dec pop daa mov cmp out aas jmp lret xchg lods xorb pop (bad) sti cwtl sbb rorl movsb add jge pusha cmp sub lahf fdiv scas daa (bad) sbb enter push mov xor cmp or ret jg sbb add jb scas lret cmp xchg xor out cli jl xor sub inc cmp sub pop adc sbb data16 adc loope daa pop aas loopne les lret das aas ljmp mov nop sub and and (bad) (bad) mov loope insb call pop (bad) rcl stos or xchg sbb dec xchg mov (bad) in xchg push sbb push push enter and repz out dec mov mov inc les shlb aas mov lock mov shlb pop in xor insb enter outsl clc pop mov add jae aam push outsb lret jg iret add jl fs xchg dec ja mov (bad) pop inc mov mov sbb xor dec les int3 mov pusha fiadd pop pop mov jb cltd cmc sub mov in xchg arpl inc and push xchg (bad) cmp in cmpsl mov cld leave (bad) fildl sti lahf inc insb call das loope sub mov push cmc repnz inc mov or mov xchg mov push xchg cmpsb dec jmp inc (bad) and xchg sbb mov clc cmp cmp inc inc mov mov bound lea push ss into lea pop stc repz pop mov ret mov jmp mov pop sub lods mov add mov push pusha fmull ret rcrb dec sub aas add jb jecxz xchg push pushl mov adc mov add fstl sub out jne scas mov ficompl ret ds popa and pop ret fsubrs pop adc or pop mov decb add xchg adc jl (bad) out inc lret outsl sbb dec repnz cmpsb mov lcall cmp les adc (bad) cwtl loope adc inc cmpl jmp jb mov mov or or fstps (bad) call cmp nop clc jbe jnp mov sub sbb adc gs mov xorb and mov stos sbb test pop adc in ljmp adcb insl xchg mov and call aam push sub push roll sbb negl (bad) loopne push dec mov call icebp adc sti test aad scas hlt int pcmpeqw lret out mov negl movb inc jle cmc inc adc xchg sub div sbb icebp lods std les jbe mov sub cmp repz (bad) mov les or std mov rorl push pop (bad) aas xor push mov lret jb dec negl cmp decb add and aas sahf popa push adc test xlat in jae fcomp push cld pop push imul cmp adc push stc popf pop bound add in jl jb mov pop popa sarl sahf imul lret (bad) sub fdivrl ret test cmp test jle je into mov bound andb mov sub cmp loopne outsb adc inc sub insb rcr ljmp mov sti stc shrb mov fidivr stc test mov sarl cltd xor outsl mov (bad) jmp (bad) adc xchg popf jle sub insl gs repz cmp add pop (bad) sbb adc sbb lahf jne mov mov push rcr stos pop add mov xor iret add clc pop push (bad) mov iret out iret loopne xchg leave ljmp pusha mov (bad) xchg pop mov jmp xlat (bad) push pop jl les or fimul ja loop movsl pop loope xchg into les add sbb push adc xchg inc add xor ljmp in popa mov lods stc outsl push fbld sbb mov sar loope jg inc das sub outsl sbb das mov xor daa leave mov xor in xor xor add pushf inc or repz push cmp ret or hlt fwait add jb xor clc loope jne cmp test int sti sub inc mov sub and xacquire inc sbb push sub int and out decl sbb push mov pop jge orl pmaxub in push inc cmovno mov xor xchg and xor cli jg cwtl call js push repz sahf adc pop roll adc icebp lds fs or sbb push (bad) dec jbe pop jle jmp dec shrb or mov test mov pop mov dec jo call dec into mov push fimull loop push int3 and or push and mov inc push sub jl sub xlat (bad) pop cmp movsl jmp xor dec (bad) in pop adc nop in pop xchg adc (bad) (bad) idivb push gs sti hlt repnz stc (bad) jnp loopne sbb inc push and mov jns lahf or pusha je or and scas adc mov or mov sbb push sub xchg dec lcall movsb test mov int3 pop ds dec add int roll pop add and push stos mov aaa xor int3 icebp loop and or gs loope mov (bad) stos mov sub aas mov insl jecxz mov imul jg test (bad) outsl mov (bad) mov shrb imul int3 (bad) lock out adc sbb mov jmp inc lret xchg xor das std data16 push movl mov add outsl mov dec mov jmp add xor mov mov inc pop sbbb cmc fistpll cmpsb pop sarl stos int mov jmp daa jg mov jle push outsb out je pop push jp incl iret inc cwtl stc test sub mov xchg in jb movsl sahf (bad) xor lahf lods push inc (bad) in call fist test adc jo out mov ss js cmp jmp xchg xor movsl sbb mov inc pop rolb test push scas ret insl cld and dec mov jb sbb mov adc sbb xchg push cmp js or xchg lods jnp lds push cld xor les cltd das fwait inc (bad) xor in add ljmp (bad) shrb xchg test pop inc jo sub adc scas inc hlt inc mov inc push jge inc mov jecxz mov xor push pushf pop jno ljmp push mov mov mov fs adc sub loop jo push sbb out jg jnp cmpsl andl jge sbb in mov add push (bad) sbb sbb imul xor ss int3 and jbe fbld enter push into std xchg rdpmc inc sub push cmpsb mov add cwtl outsb rclb arpl and outsl inc push sbb in fdivrl sbb push pop cmpsb repz push gs mov jle mov cs mov icebp iret inc insb inc gs pop pop cmp popf scas and mov add idivb imul aam nop (bad) cltd adc xorl stos inc incl sbb test inc bound stos mov test sub add imul push lret jecxz xchg cmp sub aad int data16 mov shlb pop test sbb or xchg xor ljmp int xchg test rorb int inc pop mov in inc cmp loop pop hlt clc jb enter cmp bound or hlt fs fsubl jl mov lcall push sbb mov pop xchg das lcall dec mov stos inc aas dec mov sbb xchg nop (bad) data16 shrb gs adc sbb enter enter ds inc xorl push fisubl addl call and or push or int int jnp int jp mov xor in xchg sarb jns push and fcoms pop jg adc stos stc cmp xchg fcmovnu fildl add pop loopne enter (bad) (bad) xchg jbe add jge mov mov (bad) mov rcrl popa push mov fcmovb inc subl sub xchg mov cmp pop sbb mov cmc out dec mov fwait mov push cwtl pop mov xchg jl adc inc dec das jno mov cmpb adc inc push jmp xlat js jb shrb add mov push adc jle push sbb rclb mov xchg adc mov daa or (bad) into xor ja jns gs int3 int3 out jae sub xchg lods (bad) jns loopne and dec push cmp add insb add cmc cmp jb or lahf pop insl and bound pusha dec in test push dec mov sbb adc xchg int mov xchg imul xchg push and mov push dec cltd inc inc mov jo divl pop imul in cltd jb fstl xorb lahf jp (bad) daa cmc imul mov test std xchg jp push mov js jae leave lock sub ja enter aam (bad) xchg mov pop xor xchg jecxz cmpsb jecxz inc push sub sub cmp jecxz popf (bad) outsl imul stos cli pushf pop cli repz dec mov jno cmc mov adc pop inc mov lock or lret mov sub addr16 daa adc push loop repz int arpl das mov sub jl (bad) shrb add fcmove or test or aad jg push fistl (bad) ja and or ss mov arpl mov push cwtl fldt mov mov push hlt aam ljmp (bad) jle movsl mov test popa cwtl dec push sub mov jle inc ja arpl and xchg mov int dec xor xchg data16 fsubs sahf xlat lock ds iret dec repnz int ss imul in (bad) xor frstor arpl ja or mov push inc iret xchg out je mov hlt xor sub add es push sub cwtl ret cli hlt aad nop sbb cmp mov faddl clc daa enter je xor aas pop pop push jecxz xchg movsl cwtl lret fldl push pusha cmpsb mov lret mov cmpsl cmpsl add aad call mov (bad) or jle cmp sub inc pop dec xor push sbb sbb (bad) mov add test xchg adc pop pop sbb pop stos scas data16 icebp xchg pop sbb push out push sar repz jno mov mov bound mov cmp (bad) hlt and jo pop xor ficomp cmp fisttp adc mov xor cmp vmread cmc mov sbb out sub call push out fildl lods fimull mov fucomi pop cld or pop dec sti pop pop push rcrl call sub push or xlat pop hlt dec cld subb scas ret jne push mov mov decl mov int (bad) addr16 push aad pop daa jae lret mov and adc pusha mov sub ljmp pop (bad) inc bound sub xchg cmpsl lods xlat sarb inc out jne mov gs or sbb or insl movsb (bad) gs out rorb and adc mov notb das pop data16 mov sbb in and jge add mov mov lds adc xor mov mov mov outsb mov out fdiv out enter bound (bad) out mov hlt push loop or xchg outsl adc xlat ret pusha decb inc inc sbb sbb pusha or mov outsb pop mov sbb out jle xchg repnz xor mov xchg cld adc dec xchg scas pop pop testb es sub or data16 out dec xchg xor in cmp mov lahf fbstp popa sysenter rcll jno rcr sti sbb mov xchg or pop and cmp mov and cmp xchg (bad) mov jne ficomp mov movsb rcrb data16 sub xor repnz jbe mov addr16 mov dec push clc (bad) repnz in and cmp add (bad) gs mov pop (bad) leave out and mov jle std jge pop adc or mov inc gs pusha lcall pop or mov repz mov repnz frstor repz cwtl adc mov ret push sti aam xorl push inc mov adc in mov rorb ret gs gs mov gs ret add cmpsb imul jb lea rorb jae xor cld and (bad) cmp dec adc xor enter fs arpl hlt cmp cmpsl dec mov cmp arpl xchg xchg movsl jle clc mov sub les lcall daa idivb and dec gs gs out addr16 movsl ret push cs xchg cld xor psubusw stos xor push sbb push adcl pop les add les popa dec dec and (bad) fdivrl sub or test cmp mov in lds test cmpsb pop push (bad) nop fucom out mov jmp xor pushf cwtl negb cli push call and je (bad) les push inc ds outsl xor xchg and or rcrl ljmp (bad) push popa in rorb fnstsw ds xchg cli (bad) pop (bad) pushf add cwtl pop pushf fsincos xchg push xchg pop (bad) cmp sub jle push sbb (bad) (bad) push sbb stos or repnz adc dec sbb xchg xor repz cwtl int3 xchg mov mov mov test rclb and fdivl lret fisubl loope (bad) arpl xor cmpsb xchg and sti mov pop pop add pop sub xchg popa daa (bad) jo scas jg (bad) pop cwtl mov pop ss mov push pop in and inc inc push jno cltd addr16 (bad) enter pusha xchg xor add xor push popf imul xchg xor aad sbb pop sub adc cli mov mov add movsl fisub out or jae popf mov mov xchg das arpl pop mov in mov mov xchg mov adc cmp jmp lods in lods imul inc scas xor pop bound dec fidivr pop sbb movsb lods rcll cwtl cmp dec pop push clc mov in test jbe sbb dec push lods arpl xchg sbb sbb pop jb push jae xorl jae stos por out pushf call push xchg pop stos jno mov test out addr16 cmc sbb and inc jno cmp into lcall and xchg mov arpl int mov jae xchg sti mov mov leave add push cli outsl rorb pop lret and xchg sbb orb shrb (bad) jmp jbe dec pop mov cmp sti (bad) push lock push nop out pushf add push adc in cmp icebp pop push jae test xor (bad) fistl cli aas sbb lock mov inc repz sub cli sti (bad) xchg sbb clc inc xor daa mov test and mov aad mov and (bad) cli lret xlat xor jns fwait pop and lcall push cmp repnz icebp or (bad) call push icebp sbb in dec inc or out jmp int (bad) mov xor sub inc jp mov cmpsb aam fmull or dec sbb push (bad) mov fstl ja jno ss add mov shll or lret aas aaa aam xlat movq cmp in cmp mov lea out cmpb repz aaa arpl inc fisub add jmp (bad) fisttpl or insb sub mov add scas cli xchg std fst jmp mov push sub sub adc dec xchg mov sbb xchg lahf dec out xor (bad) push pop jp or ds cmc dec lret aas lcall imul mov hlt fistpl clc scas fadd jle and push sbb fistl sbb ds mov outsl out xor repz cmp add push insl fadd push cld test pop xchg test pop xor adcl scas int3 jmp cmp sahf cmc jg mov push sbb mov xchg cmp popa nop adc inc leave xor mov sbb (bad) xchg dec mov insb lock aam in and dec pop and fnstenv aad (bad) pop ret sub (bad) push pop push in mov lea lret sub sbb cmc pop xchg test dec sub jns sarb out xchg lret adc ret das sahf or inc inc cltd pop test push sbb pop cmp mov fsubr (bad) out and xor ret (bad) ds std mov jne (bad) idivl inc je (bad) jg xor (bad) int3 jecxz insl enter ja dec jno popf xor push arpl mov or or adc je in push fs and push dec adc and ja push jp mov pop jns mov and fistp outsb pop mov adc rep test push mov adc adc or xor add cli outsb mov sub add fsubrl mull or fstpt (bad) push stos jns xchg adc mov mov add mov (bad) lcall scas std pop vandps loop and push xchg sub es add cmp push push inc add repnz sub clc lock adc mov push (bad) nop int3 dec pop jne mov in pop addr16 lock test sub lcall mov rolb xchg fcoml push stos pop mov mov push jb flds stos add out xchg mov add ja mov orb out lds test mov cmp lea pop into inc push hlt in gs cltd mov sub jno (bad) cmp std insb loop cltd mov pushw insb dec flds mov addr16 aas push cld aaa cld in xor test pop je lock mov jmp lods fbstp or mov dec cli jbe xor cmpsb (bad) ja arpl orl sbb xchg sbb pusha xchg or dec sub movsb add and aas xlat lea jl std jp sub jo xlat incl add sbb pop flds (bad) push adc fmull mov ljmp in stc (bad) mov xchg pusha cmp aam shl rorb pop iret mov sbb inc pop jl adc (bad) adc mov sbbl push mov or test and and add push and ja dec sbb insl mov clc (bad) pop (bad) cmp push inc mov gs and out xchg inc setp mov xor pop or cli sub xchg fs mov (bad) xchg adc xor xor (bad) xor cld rcll xchg fisub push mov xchg xchg scas push nop je mov and adc (bad) jae mov add cmc outsb jb icebp mov in jle (bad) stc jb cmpsb sti repz ljmp cmpsl scas xor scas out dec lcall aaa fnstcw push cs mov add adc insl sub test jmp mov inc adc outsb call and mov inc jle ret push lea mov shlb pop sbb iret lds pop mov inc flds mov nop hlt jle mov ljmp test out repnz clc push cmp stc rolb popl sbb sbb jmp xor aas fisttp cmp insb pop fldl push std rorl dec scas orb xchg testb call inc xchg mov push jne mov mov fsubrl dec sahf mov mov pop cltd mov push subl sub sbb mov push imul cmp pop sub push aam xor push pop dec pop sub addl repz (bad) fisubl and mov bound pop cmp notb dec and dec and jle and pop in jnp cmp inc inc jno les push xchg pop add outsl hlt test mov scas pop andl js sub cmp sbb xchg icebp adc lods into push aad fsubrs and mov mov and add add out mov cmc cmp adc pop mov pop mov push mov clc and repz jecxz adc or ds idivb jns mov subl and inc jle adc cwtl (bad) adc mov fnstenv mov jb out jbe leave into int3 mov jle dec das lea push pop fisttpl push dec add mov pusha and add or les cmp shrb mov jl hlt adc jg push xor sbb test lret cmpsl rcl sub ret lods hlt inc daa jle (bad) and add lcall jns pop inc loopne pop (bad) sbb jl (bad) mov sub pop stos xchg mov add mov push fldln2 hlt and pop popa mov pop (bad) mov xchg inc and sahf push mov ds popf insb mov pop cmp mov outsl into js or (bad) iret mov lahf nop jg pusha addr16 loopne pop repnz adc mov cltd jp sahf adc mov mov xchg mov sahf cmp loopne adc xchg gs add inc lods and jbe jg fwait xchg cmp in jp lock sub out es push sti not pusha xchg mov sub pop jbe xchg lods imul sbb push push (bad) xor xlat fisttp shrb mov fdivs shll xor xchg stos test scas jns loope dec lea xchg shl mov pop fstl in and push outsl in mov je mov out sbb pusha sub xchg mov or lahf xor push rclb adcl and in lds cmp imul adc (bad) repnz outsl fwait xor mov mov sub (bad) mov mov push dec mov adc arpl and in push mov out pushf stos ss loope cld loopne call popf in push cmp arpl scas lret aam in xchg daa decb das add adcb jno sbb lods jno jne jle xor add jne dec xlat or sub fnstsw dec lahf lcall repz jecxz stos cmp (bad) sbb test inc test mov mov fnstcw arpl cmpsb cmp stc iret outsl stos and daa add inc mov mov mov push (bad) mov jae mov and flds (bad) fs movsb fs push pop in cmp mov rcll neg mov fs jne clc cmp (bad) adc (bad) cwtl cmpsb negl jae adc shlb inc jno jmp (bad) add mov push std mov mov inc push mov stc jne test lods repz inc cltd test sbb xor (bad) idivb inc stc arpl inc inc mov gs mov iret inc adc test and pop push cltd in pop repnz pop mov xchg pop cmp rcr call out notl and mov out test and movsl cli dec movsl aam movsb pop sub repnz ljmp and xchg jbe cli ljmp inc or sahf rorb dec out xor or mov and test mov xor nop icebp stc jo mov es and push fwait pop add mov sbb and pushf decb or dec or ffree push imul std inc loopne aaa cmp pushf dec sub push ja sahf add repz ss aam xor xor pop inc mov inc ficoml add mov sub in add inc mov sarl xchg xor push inc pop je daa pop cli push xchg mov lahf loop inc lock loope inc andb add in xchg ja into lret xchg jno hlt add cmpsb lock and mov pop rcll (bad) ja xor mov mov ret jae nop inc push inc es cmc mov rcrb pop jp pop lds mov sbb sub cmp adc mov pop mov aas xchg in mov adc test mov sub pop xchg sbb jb (bad) mov mov es imul inc mov cmp inc pop mov and in push inc popa arpl pop mov push leave sub popf unpckhps pop adc (bad) arpl int3 ret push mov pop in push cmp sbb xor and adc mov mov hlt mov add loope jo and push or test fadds jp jg sub push inc mov and mov xchg pop shl jmp mov cmp loopne mov loop insb std mov pop inc loope popf rolb mov push enter xchg sub fiaddl cmpb xchg xor inc jecxz cmpsb inc repz ss pop xchg insl pop sarb lret js les adc fmul xor sub add lret sub ljmp or mov cmp and call out add push pop inc pusha and pop fistp push sub sbbb popl cs das out add test rcl arpl fisub xlat mov mov addr16 and inc mov adc scas jle xchg sbb push (bad) and and xchg out lfs (bad) repz lds push pop repnz clc inc scas dec mov imul ret sbb int3 jo int ret xor sti lock into cmpsl aaa inc cltd dec mov test cmpsl push inc dec add push add in mov imul mov je xchg xchg pop neg sahf in or jnp out push lret xchg mov push out mov enter fimull add cmp pop je pop and jp cltd xchg mov movsb aaa xor mov dec fnsave scas inc lsl outsl mov jl xchg push sti jbe pop push inc leave dec jl stc sbb dec xor in sub cmpsl int out dec jp adc lret or or xchg lahf andl in sbb icebp orb data16 (bad) sub sbb mov test aad (bad) repz jge mov xchg insb sbb or sbb mov cmp sub sub fisubl or xor and or and cld ja or or push mov fldl dec jbe pop ja loope sbb push in movsl add and in push mov dec cmpsb movl test in (bad) cmpsl xchg mov xchg test (bad) cmp mov adc outsl (bad) dec insl lahf lret addr16 xor jno mov fwait aad test inc mov cld mov ficompl roll dec icebp xlat cmp or pop xor rcrl in testl (bad) roll sbb clc add (bad) enter lcall cmpps jbe and pop nop mov jno pop out xor imul mov arpl mov push jns jmp sub jo xchg dec lret mov testb es inc (bad) icebp arpl pop stos fwait cmp dec ljmp sbb mov pop dec mov (bad) push add shrb int mov insb jp hlt ja ja sbb nop lock arpl pop mov mull and xor sub pushf fcoml sbb xor xlat add sbb push mov ret mull fcomp mov (bad) xor xor outsl mov push xorl lcall popf mov mov or inc mov push lods push adc push sub or std iret stc (bad) and xor xchg movsl jge xor outsl inc cltd (bad) ljmp scas or pop ficom aam imul jmp lea clc arpl imul push fcoms ret fisttpl push sub cs cmp xchg into cmpsl mov xor cmc or jo outsb mov push insb faddl pop hlt or sbb aaa inc test mov mov subb xchg adc mov test clc push scas gs sub xor pop mov push mov xchg in ret (bad) stos xor or test mov iret inc sarb add push mov daa das decl iret fabs into mov fadds xor mov or sbb lret jne jg scas fldl aad sub daa mov sbb popa in cmc cmp and adc mov cmp push cmp aam push inc leave inc push xchg lret push push xchg lock out pop sub iret jl repz cld loop outsl (bad) push lret or push pop pushf lret fcmovnb nop add aaa mov sbb (bad) mov and push cmpsb imul sbb cwtl je loop xchg jg repz cltd popa shll sbb jno push sub jbe (bad) mov xchg push fcompl inc mov insb loope fsubs cmc or and dec into ficom popf clc lds mov cmp add and jnp pop inc popf inc push cmp popa sbb clc push (bad) (bad) pusha jbe nop mov jge shrb xchg inc cmpsb sbb mov cld inc xchg mov xor hlt (bad) and imul adc or adc jmp pop mov iret sbb movsl sub adc add stos cmp repnz scas push sahf push call adc fidivl or (bad) cli mov mov mov or mov lcall aam rcr lock adc fldenv jp xchg lahf dec jecxz jmp not lret dec add repz pushf sub pop xchg in sbb js in jle pop mov push adc imull pusha leave lods (bad) gs lods sbb sarl (bad) or mov loope leave or fistpl dec outsl adc xchg mov (bad) mov cmpsb mov mov rcr in loope cmp incb (bad) mov mov push test popa movsb int jns pop gs icebp sbb xchg mov out cmpsb daa sti mov (bad) loope push inc sub imul jno (bad) mov inc mov mov adc sahf and dec (bad) fistl (bad) fadds push icebp cmpsb sbb nop mov (bad) in int scas repnz in add cmp pop or or mov cmp jne mov inc sub lock (bad) outsb fiadd inc jns inc out inc xor es (bad) (bad) mov fs imul mov jmp jns mov push pop push mov sbb dec mov xor aad lea xor (bad) or mov jecxz ds scas or and (bad) fild clc ljmp xor cmpsl idivl arpl pop cltd ljmp call outsl leave and mov bound daa pusha rolb insb add xchg sar adc cltd in push sbb add jnp mov jnp rcl adc inc cmp (bad) jo (bad) (bad) shl outsl sbb addb in addr16 mov leave mov mov mov sahf sbb pop fdivs dec lock sub cwtl loope,pn jecxz mov sbb mov mov loop test push dec std cs enter je xorps in andb dec (bad) ror cwtl add enter sbb lret cmp sti and out dec rcrb pusha subb in mov add ds stos pop std cmc neg mov enter and push adc dec test add xlat sarl mov sbb sarl pop jne,pn stc adc fdivrs call mov xor inc cmp push repz xchg inc xchg mov jl ret push fnstcw mov outsb or sub (bad) clc sub mov or lods fidivr fdivrs dec dec mov clc sbb cmp mov mov adc roll outsb push fucomip mov xchg mov lds sbb jo push jns push cltd aas push push aas repnz push shrl xchg inc cmp (bad) ja sbb pop push xchg xchg gs enter scas xor loope pop loop inc test lahf (bad) mov fisttpl dec lahf insb icebp dec ljmp or pop push mov or jp inc int std sbb inc nop es xchg inc (bad) imul mov mov add test inc jg decb out inc and popf jmp out and adc mul xlat ja enter stos xchg in lcall mov ds lret movb mov (bad) repnz insb xchg fadds xchg icebp (bad) inc in cli pop cmc out data16 outsl push or arpl push je scas std mov test add testb mov (bad) add mov (bad) xor repz push ds dec popf test add add je xchg popf cwtl xor jb lock cmp dec fdivl cmp sbb mov jns inc add or or mov mov cmp xchg in sbb pop clc lods jb out cmp repnz rcrb das and mov xchg bound int in xchg stos hlt and adc sbb gs fistpl push push mov mov ljmp cmp loopne aam cld pop cmpsb lea (bad) jnp (bad) fsubr push outsb mov jle lret adcl sahf jae (bad) in ret mov shrb push mov das ds xor outsl fcmovnu aam pop xor jmp ret push add mov int jmp int3 push lahf sahf ffreep pop rcrl jmp (bad) mov add imul hlt dec std fidiv ret pop mov out jecxz or inc leave mov hlt sbb pop cs mov data16 mov push cs lods clc in ljmp mov repnz (bad) mov movsl (bad) and fstl cld xchg add add mov nop sbb ret aad call mov scas loope ljmp jne div sbb popf imul inc pop (bad) mov sub divb outsl xor jl cs (bad) pop loopne xchg xchg push popa jno mov or mov xor mov bound ljmp out fwait in outsl mov jl mov repnz movsl ds add scas xor in test add xorl cmpsb (bad) pop mov shrb fistl push in orl jge adc lods cmc rcl stc xchg popf icebp (bad) pop dec mov mov pop or dec mov loope ss in add push xor lahf or jbe test pusha pushf add xor loopne repnz aas popa sbb cmpsl add movsl popf add mov fidiv popa aam cs call mov ficompl add inc js add fstps adc pop clc fcomps and and cmc or adc cltd pop ljmp xchg pop dec inc sbb push sub in inc and xchg stc dec mov dec push lods cli inc ds ja sahf iret add mov mov cmp mov idivb inc xor inc stc pushf arpl (bad) mov scas out and in sti or add push pop xchg in test je push clc ffree sbb pop mov cmc xor in push cltd push pushf lea rorl adc dec aaa fisubr jmp sub jg test mov into and (bad) push (bad) data16 add insb or cwtl icebp mov xchg fsubp mov push movsl inc mov (bad) mov cwtl (bad) aad push lods mov xchg pop inc lret pop loopne sbb sbb cld cmp xchg pop pop cwtl xchg jns sub std jecxz add outsl mov mov jno push lods aam mov loop dec xor or cmovp xor dec push data16 fcoms ss lcall shlb stc out pop adc or ret adc adc inc shlb je cwtl js sti sbb stos (bad) jno xchg mov jge outsb cs loope or out adc test movsb lret jb ljmp mov in pop dec or add sbb xchg jo fsts call cmp sti scas push cmpsb pop xchg into fstl mov or fwait outsl jmp (bad) pusha fwait add mov (bad) or and popf les pop outsl je fsts lds jmp out dec fimul std xchg (bad) xor (bad) inc mov fcomps sub add pop mov adc in cli lret add pop cmpsl dec aas lds cld dec push mov pop and xchg hlt movsb dec xor xchg sbb leave sbb or dec (bad) jg cs mov scas push lahf xchg je sbb (bad) sub mul outsb jnp ret fs lds andl andb js adc push jns sub and rcl loopne dec fwait bound or ja insl mov push mov mov mov (bad) in out pop sti jnp cmp jl fmull dec mov movb dec pop push sbb sub add cltd cli pushf jge lcall addr16 orl icebp mov xor aas icebp or lds sub mov (bad) icebp ljmp jae dec adc imul push and movsb fldl jbe xchg mov lea bound int dec js jl lahf cld in sarb mov sbb xchg fsubl or aas (bad) cmpsl push aam pop leave xchg pop add jecxz mov data16 loop cmc mov xchg fdivrs insb iret pop and jns mov js mov mov mov push sbb rorl lock inc mov cmpsb ljmp add movl cmpsl cmp lods inc xor in adc out xchg aas jne push out rolb push popf mov adc jecxz fldl fcomip push fimul jecxz lods hlt test pop adc fs adc repnz jl and xchg add xchg stc dec data16 xor cmp jo ret test xchg jnp enter ljmp or ja push outsl jae imul mov out fisubrl sbb xor jbe pop (bad) pop mov and nop push pop not loope sbb inc jge push (bad) loopne clc mov outsb push push subb add (bad) mov mov xchg mov inc movsb fbstp pusha push jnp ljmp or xor push xchg or and inc icebp jne fcomps loopne jg loope sbb gs jl dec xor xchg ret dec fsubl pop scas call mov sarb jno jecxz push mov adc lcall fiaddl sarl add mov roll fcoms mov inc cmp push jne pop aas lods rclb lcall mulb and cmp cld in push lret mov push adc pop push lods cmpsb scas adc stos jae lret and aad sbb mov xchg dec cmp sbb inc dec cld jb xor imul push inc icebp test jp into shrb daa mov adc cmp mov popa dec cld ret push jne pop (bad) jl scas xchg pop push test sub fistpl xchg nop iret or insl clc sub loope mov rorl outsb lcall xor pop cmp inc imul adc lret mov insl fwait call push fsubrl mov xor and or ja jmpw mov mov dec xor stc popf jae loopne push adc sbb mov jmp loope clc add add jb scas adc adc out test insb adc and xchg mov mov repz or xchg sub mov je inc ds lock outsl (bad) jae in pop inc push or sbb (bad) push jp add imul popf cmpsl dec or jne push rcl jno jmp sahf cmp dec inc ja pop int ss inc mov push mov stos dec pop ret in cmp and push or jno inc rclb inc push fist inc mul sbb out cmp dec test mov jne enter push mov loop xchg inc hlt inc cmp adc movsl cmp cmc inc out out add hlt cld and mov xchg bound test std (bad) les iret pop std jp or mov in push stos dec les mov std (bad) cmp cmp xchg mov popf jno mov push and outsb add jle fcmovnu aas int3 inc adc mov dec xor cwtl (bad) and mov or ret and mov aam stos test bound test add cmp xchg push icebp dec call jecxz in ljmp fnsave mov dec test scas or in mov mov mov dec out or negl rol jmp bound test ret jg decb mov inc mov and pop sbb xor je and aas pop push into pop repnz loopne stos ret add minps outsb cmc jg jle shlb mov jle lods sub mov lods push ficompl push lea (bad) int push call mov out adc (bad) sub imul imul and (bad) sbb lahf fucomp ja int mov add push daa scas jns sub xchg adc dec mov jp nop add inc insb cltd icebp pop jo (bad) (bad) mov loop push sbb xor sbb inc call lcall pop test es (bad) xchg (bad) aas mov ret fmulp xlat leave cld test push adc rolb call cmp add sbb enter sbb (bad) (bad) dec cmpsb fdivl rcl lea test cmp xor mov out inc mov (bad) pop fwait xchg ljmp xchg pop or mov out lahf adc xlat xor jp test jns xchg sbb aaa sahf add xor jnp push movsl mov pop ja push stos jbe lret sbb mov mov and out (bad) lcall pop call mov popaw xor add cmp outsb movsl sbb cli jo mov inc push ljmp mov out push outsb mov (bad) ss iret in or (bad) mov mov mov push lcall sub mov and sbb mov imul push aas mov mov mov push ret mov push cmp test sub loop enter cmp idivl das fist adc add and jmp mov addr16 add push (bad) push xor and inc xchg jb push sbb sbb jge rolb rcr mov outsl sub dec adc add cmp enter jmp mov jb add pop dec out in mov mov (bad) ficompl (bad) fcoml xor lcall xchg xor or lds inc push ror or das push mov pop xchg or dec jno sahf fs mov scas fimull jae lds push xor adc mov test insb sub mov or loop adc inc and fs cmpsb mov mov aad jnp pop inc loopne add cmp mov (bad) enter pop or (bad) mov fs cmc lahf inc jno packssdw call and clc jecxz stos dec enter sbb jb mov sub push movsl xor xchg inc inc cmp shrl es cmp sub adcl hlt jae arpl popf dec cmp push and pop adc push push cmc ret push es and inc xor push ret mov inc jp sbb sbb jg sub or add gs inc push fsin test lock mov xlat fnstsw and jns pop imulb inc mov or lock out mov cmpsl sbb popf xor push inc (bad) cmp xchg pop push mov aaa insl test adc or dec pop inc jge adc jbe mov mov (bad) jo adc xchg cmp inc (bad) rcl mov popf lds sub pop enter xor ljmp flds push or jne xchg dec sub pop clc cld xchg cs and cmp pop sbb mov fsubrl push test enter or sbb xor loope pop xor jmp clc fnsave and arpl call xor iret notl push xor or lods movsl in sub insw mov jns adc (bad) add ficom cli incb out fidiv out ret jae daa je les jne repz imul mov lods or scas cmp jno mov jp ljmp xor or adc pop jne add mov mov mov pop clc inc test call inc test lods jle cmp push ret popa stos or cmp rcrb lock sub sbb or lds (bad) and jbe inc jb xchg sti jnp rolb pop inc je dec aad inc sti in jecxz (bad) fwait and lret test mov dec dec test jl add and insb push or cmc mov out mov lcall jno pop es js sub lods test iret das shl jae jp push mov sbb lret adc out (bad) fidiv call sahf aam imul loope jae sub pop push push mov jo stos add int or inc rcr pop test test sub add leave adc mov or stos xchg (bad) mov lods xlat xchg and push lcall ret psllw push xchg jp fiadd xchg jo push xchg stos imul enter pusha cmp jo lret (bad) sub adc bound sbb push nop scas push jg jecxz adc pop sbb xchg mov push mov inc mov dec or rcrl push mov push add div cmp pop movsb lahf sub sub jns std cmpsl loopne push pop fsts js and in inc iret call add (bad) push loop loope and add sbb mov addr16 mov sbb xchg cmp scas sbb (bad) cmc adc fbstp pusha mov sub cmp mov movsb jp and add push cmp mov js (bad) jo or cwtl data16 (bad) gs mov mov mov cmp cmpsb out xchg inc or sti data16 arpl push mov mov adc mov push adc push dec dec loop inc sub mov mov sub cld mov jbe or lret mov pop and mov jp lods dec sbb ret outsb test xor push les mov loop clc add xor imul les cs cmpsl add mov xor pop (bad) fstl inc repz js xchg testb imul push fdivs mov orl dec pop sbb sbb ret inc xor orl repnz ficompl (bad) enter mov xor hlt out into fs mov mov popa sbb ss xor popf rcl pop cmpsl mov mov pop lret scas daa call inc or or cltd fsubrs rorl xchg iret xor sahf iret mov sbb out push add push outsl lret pop push fsubp mov shrb (bad) js not movsb (bad) xorw ljmp mov dec xchg les lahf movsb xchg mov (bad) jecxz adc mov (bad) pop mov jne pusha xchg xor bound loopne stos (bad) or pop sub iret pop push jmp mov std test pop lods call or sbbb pop jbe push sbb ja jmp and jp das leave popa insl lds out lock and outsb jmp mov adc xor mov dec mov push into jns and jbe (bad) and in outsl rclb sub mov fistpl into dec mov enter xor (bad) mov lret negl sbb into bswap shlb add jb bound mov add adc mov sti mov push test das cltd pop xor mov and cmp scas aas pop clc mov loop mov sub fs mov js push rorb inc hlt rcll test negb (bad) sbb mov jge jge mov (bad) adc dec dec lock xor outsb mov jbe test test dec and and dec fidiv inc jns xchg rorl into rcrl sub cmp adc lock add (bad) lds fdivs mov stos jb xor in inc jl add sub test js jl (bad) xchg arpl xor (bad) push inc repnz sub cmc rclb xchg and scas jmp ss lods cld mov aam push jne out sbb loop adc xchg (bad) int lcall pop sub sbb loopne xchg jae pushf sbb sbbl clc in lahf iret adcl mov fdivs int3 in ret xchg fldcw lods fidivl add lea mov shrl addb jno mov xor leave xchg mov imull jmp and repnz movsl mov cli xchg add fnstcw and push sti sub dec xchg mov xor sbb adc sub in outsl out or mov or dec lcall stc push push dec and imul push in mov sbb in xchg mov (bad) je xchg adc jmp dec push mov dec outsb sbb sub pop fwait and cwtl sbb sbb pop xchg enter lahf aad lods inc jle call mov outsb test jecxz xchg out fistp aam cmc leave leave mov dec cmpsb je out sbb (bad) mov add ret in (bad) in sti cmpb lahf dec out enter fimull add push pop or mov inc xchg cmc pop daa arpl mov outsb rcl js or adc lods cmp (bad) cli inc andl movsb or int enter bound adc sub clc fisub lods in or jecxz jbe push mov (bad) xchg std xchg in mov jge sub jmp test cli mov cmp sbb adc sbb imul mov pushf jle nop (bad) mov jp or icebp std mov pop icebp fldt jae mov dec fistl adc add repnz or pusha lea into mov add jl adc pusha pusha jmp inc add stos roll inc adc xchg jo addr16 sub into mov popa sbb or outsl or xchg imul sbb jb push lcall clc repz dec jae popf adc iret adc inc sub std cmpxchg8b pushf cmp daa repnz lds clc in inc sub pop rcrl or cmpsb inc (bad) adc cmp enter sbb xchg scas cmp cmp adc dec jp aam adc rorb mov adc movsb sahf (bad) lret and mov mov rcrb push jno mov sbb in add repz (bad) cmc pop outsb sahf nop jbe cmc xchg fs mov into idiv add sbb mov mov outsb cmp cld je jle jmp mov pop sbb lock hlt jae leave sbb mov push in int3 jmp push sahf push sbb add fist loop dec cmp leave dec mov int3 or jle lcall cmc clc aad xchg push pop pop adc ret mov inc outsb and sahf (bad) fwait orl test cmp cwtl adc lret pop out dec outsl nop dec cmp cmp add imul mov mov fldcw lret or addr16 mov inc test push neg test into xor (bad) mov jle cmp push mov adc out stos xchg sbb or iret mov mov loopne fwait stc loope sub mov mov loope push mov and daa add outsl pop sub sbb or aaa sub mov popf adc and mov aad (bad) push sub jnp leave sbb mov mov mulb aas pop cmpsl add cmp mov outsl ljmp shr sbb int mov mov sbb sub ja xor hlt cmp cmp inc loop int3 cmp jl iret pinsrw adc dec cmp dec pop js rorl mov stos sbb lock add lcall mov ret or lock dec cmpsl mov or imul stos js push and add push mov cmp add fwait dec cmp sub jnp cltd rorb mov clc in es dec add and mov mov js fstpl movl inc leave loop pop jae stos xor xchg mov sbb bound std (bad) sbb mov clc mov cmp sbb lock push xchg pop in mov les jp jle imul in mov sbb push adc mov in sub fldenv dec mov sbb (bad) scas or cmpb popa aas mov orl test (bad) movsb pop ljmp and test arpl movsb sbb pop inc xchg loope sub xor dec cmc lahf aaa sahf sub fs stos mov fsubrs enter push (bad) ljmp cmpsl lret pop add lods xlat popa sub arpl mov inc mov in lret ficoml push (bad) or add sub loopne pushf stc cmp adc fwait push mov jnp inc call div loop xchg mov mov mov fs pop lock pop dec adc or aas and (bad) outsl inc jo pop pop xchg ret sub clc scas (bad) out cltd outsl push mov dec call inc fnstcw in xchg and vpmulhw lret inc insl dec leave gs icebp fwait pop xor nop lret pop pop inc aaa mov ror sbb pop pop fnstsw sub clts and mov jbe pop xchg inc mov loope xchg push or cmp (bad) outsb inc mov inc fwait push insl sbb gs int3 int jle pop push jns mov fcomps adc ret fdivp jno pop sbb cmpsl sub and insb xchg loopne outsb mov je test inc inc in mov mov push mov add mov hlt or addr16 movsl sub popf xchg repz das xchg call aam inc out sbb outsb lods pop jge sub out mov aam movsl mov fbstp cmp mov into pop test inc sub cmpsl mov jp xor jecxz fnop or insb xlat test jmp imul sub xor repz sub loop cs pop in sub out push bound push fimull dec push push push imul scas popf test sub pushf mov add inc stos out xor pop mov movsl jmp iret aas arpl jae push inc (bad) and enter xchg icebp add inc das insb test pop push and sbb jle cltd ja jmp push lret pop mov push aam (bad) aad fimull clc jg mov push ss imul popa mov insb and loopne or (bad) frstor mov adc mov pop (bad) cli (bad) ret stos test add mov or sbb loop addr16 lock mov ljmp jns mov adc xlat in push add xlat fs inc mov out mov push mov inc imul movsb mov cld (bad) test cs mov push lcall and cmp sti lahf push aaa push mov mov xchg mov imul inc fisttpl mov je adc pop clc popf std in shr fcomp mov push add jnp dec push pop pop je test mov jp out inc pop xchg sbb add sub (bad) dec push lock stc lahf outsl loop stc xor (bad) lods fs ja,pn or jmp clc or ja lods jmp ja cmp mov mov sbb jae sbb or lret loop sti add cs add fisttpll inc xor pop std insl jge test pop push sbb int sbb and mov jmp dec pop or pop rol ds add ret (bad) adc fstl in xor imul sub jno hlt sbb call out lret aam das cmp add push fwait into xchg inc (bad) ss jae (bad) or aaa adc sbb mov xor mov sub xorl je ja jbe mov pop or pop lret into pop fimul dec dec mov into inc push ret ss xor cmpsb (bad) jmp in movsb lret jnp repz stos stc lods lock outsl jnp aad xor dec pop jle mov push fildll jbe into push outsl push pop mov arpl ss push pop aaa sahf mov cwtl mulb mov pop jb cmp in daa mov notb mov add shl sbb in xlat pop mov cmp cmc adc in lahf add std adc push pop or out in push fwait xchg jp sub das xchg les mov jmp dec or repnz jp and push jmp pop in sub and adc dec call fcmovb add test xor movsb fisttpl adc sbb rcll fstpl mov (bad) jb push pop sub cmp push jecxz jne call xchg inc push xchg mov or add cmp push add in cmp adc push xor inc mov and xor sbb pop mov hlt cmp jns inc cs repz les sbb stos push ret popw rep xor pushf shrl xor push sbb shr jl cltd cld mov test lock ljmp aas leave lea sbb sbb out lahf mov mov jg out jno and fistl cmpl jae pushf (bad) jecxz jmp call mov pop fsts mov dec pushf cmp lret jmp inc dec inc cmp add stos stos dec jp adc icebp mov (bad) rorb mov jnp adc adc adc std iret and jp mov add roll (bad) xchg jge pusha push stos dec movsl dec addr16 mov es or es push jns jbe and (bad) aas jae adc loopne movsb mov insl cmc mov arpl push mov fiaddl (bad) jae or and xchg add insl adc std addr16 into jge cmp jge cwtl ror dec adc push cmp adc adc lds jg inc push cmp push gs scas ret stc clc enter call cmp stos mov movsl xchg dec scas shll aaa sbb dec jp cmp pushw in jecxz inc mov inc inc or aam and mov scas mov push je scas scas mov lret sbbb inc lods das mov in mov fs mov pop adc rorl leave shlb push fstpt in xorb sar fs or sbb add test sbb sar insb mov clc call mov fbld add sbb jne lds rol pop mov leave icebp movsb movsl es int or push add (bad) stc sti cltd push andl loop mov cmp push xor lods sub mov dec xor mov jecxz push or sahf push xchg lds ret adc or mov mov and daa mov inc shr and sub mov fldcw push pop cltd sub mov stos cli cmp ds push hlt fsubl add mov ret ret and loop mov sbb push pop outsl cwtl test jno inc int3 pop fstpt adc pop mov dec je jp sub sbb jno push (bad) divb popf mov jle and and jo pop adc mov pop jg mov call mov mov jae and sahf js add dec fidivr outsl mov in pop mov sbb mov mov out leave jo and (bad) imul (bad) aad ror iret mov mov push fisttp int lock push popa imul lds add in xlat mov mov in pop iret jecxz pop mov mov fdivs sbb mov lods notl cmpsb xchg vrcpps stos push inc xchg jl repnz aas push sub aam xor iret mov leave imul xor je int jo and jno lret mov pop xlat push jecxz stc mov mov (bad) je dec cld jle mov pop or (bad) aad pcmpeqw rcrl jno mov ss pop mov sub cmp and cld jo push push xchg sahf pop mov inc test push flds lods aaa add add mov loope movsl dec or or jne (bad) push inc xor add aam mov mov stos xchg mov mov mov xchg xor nop jmp sbb dec insb outsb sub jae (bad) jmp or es sbb cmpsb imul cwtl test mov adc bswap fstpl ret push ja pop push lcall cmpsl cltd std xor sbb cmpsb (bad) sbb mov ret push jg xchg mov dec adc xor sti mov inc mov jle ss adc lcall scas dec or sti shrl js shrl or (bad) lret dec sbb iret es stos mov jl push mov push push ljmp pop dec xchg xor dec (bad) jns inc ds cmc sbb mov xlat popa sub stos rolb xchg jo mov sarb nop mov push cmpsl xchg pop fstl pop fadd in dec sub hlt push nop insl mov sahf sbb rcr inc cmp rcrl inc lock push out push (bad) out scas gs jge cmp shrb js cmp fistp cmp mov inc cltd xchg int out cmp test inc movzbl or js xor repnz or xor mov flds pop inc pushf dec insl and xchg out add test adc in imul or mov xchg sbb insb (bad) cmp arpl cmpsl cld loope cmpsb pop push jp dec inc cmp ret scas stos iret scas movsl dec repnz scas lods mulb dec jo lret add adc ror sub pop add add lea sti mov mov jae loop xchg sysret pop mov xor pop pushf sbb cmpsl dec (bad) icebp shr movsl decl outsl cmp decl add add outsl fnstsw push pop and add cmp movsl jo insb fdiv adc xchg stos mov jns jmp dec inc push mov ret imul dec das inc sub inc xchg push xlat pop (bad) in mov inc mov fstl mov lods pop mov fisubrl cs push push adc in jecxz movsb sbb stos push cld mov les push lcall (bad) rolb lea cmp jne cmp scas and pop inc add mov inc popa xchg or push mov or xchg add mov lds xor movsb jp pop jl vpandnq fstl jb arpl sahf and xchg mov and shll sbb repnz out rolb and dec into inc lods jecxz or xchg mov xor daa xchg pushf sbb adc jp (bad) je or mov fadds mov call adc dec push cwtl fwait inc xlat iret aam cs mov add sti jle lods cld cmpsb push dec cmpsb push arpl cmp neg outsl mov ret add lahf dec (bad) fisubr fildl lret jle cmc lods movsl shl mov aaa xchg cwtl ss xchg dec cmp dec push sbb jmp imul xor enter aam mov push fcoml lods loop sub inc sub in xorb dec ss das pop enter xchg (bad) stos push add push sbbl add imulb xor cli xchg jbe add jle aam mov xor outsb leave inc fmul testb push arpl xlat mov cwtl xchg inc pop jl xchg repnz ds aad icebp cmpsl xchg dec dec ljmp or jnp and push and sbb imulb add jecxz mov mov mov pop dec sar ljmp xor pop leave push adc sbb fsts jecxz lods pushf sbb pop inc test mov mov adc out rcl and xor jg adc xchg xchg outsb nop pop cmp stos (bad) les inc push fisttp out movsl sub and in gs sbb add in shrb push (bad) or out sbb sub pop daa jge stos shrb pop fisttpl aas sub xor mov daa pop out ljmp fwait shr imul jne or std pop and cli xchg lds dec lcall dec dec ror daa mov enter dec loopne fisttpll mov and jge mov ret mov adc cmp jno xchg insb push push jg add pop fldcw ja mov mov push sbb sti and sahf flds cmp pop mov bound ss cltd into sti iret dec (bad) in xor or shl pop lahf lock test jl jb jg mov pop cmp sbbl or stos into lret fsubp lods mov push pop div jle and mov ljmp jg movsl pop inc shrl mov pop arpl mov ss in mov mov and push sbb xor xor adcl fld ret lea xlat outsl pushf jecxz shlb lods nop in xchg int inc cs mov mov les movsl pop les pop clc jmp mov (bad) repz (bad) pop mov xchg dec pop jae jmp jle das cmpsl mov sbb dec or push lods pop cmp adc inc mov or mov out mov clc mov sbb roll das jmp and pop add and sahf xlat movsb (bad) insb push lahf sti cmpsb data16 xor scas test dec ret (bad) addr16 mov ret xchg adc test loop and or stc enter pop std fwait repz xchg or movsl (bad) xchg lcall outsl jg sti mov xor (bad) imul cmp xor push xor xor insb jmp and mov mov push ja ja imul stc push and in mov repz fldt fist pop push loopne,pt out loopne sahf jp ja inc fsubs out cmp pop dec dec fucom add shll push sub inc cs iret jno out std sahf lea xor inc or rcrl cmp inc mov xchg sbb push and mov loope,pn stc push mov icebp cld dec xchg pop andl xor aad (bad) jmp ret push mov lar cmp sbb popf pusha jg int3 les jg fiaddl dec lea push adc push test pop cmp adc int3 pop cmp xchg pop pop lock enter or fldt es pop jnp test cmp imul dec cmp mov daa push insl test inc jo xor push sbb inc enter or iret adc leave push push loope cmpsl lea dec pop lods pop push ja jo cli mov jb cli outsb push jecxz pusha push ljmp mov div mov adc xor pop mov rorb out js cmc cmc into divb mov ja add xor sbb inc push inc xchg sub cmp hlt sub xor push stos dec ds leave mov popa pop loopne pop mov (bad) fidivl js xchg ljmp js lods mov adc pop test bound xor fnstsw xlat popf mov cmp (bad) inc fst adc icebp and pop aam mov aaa dec in mov mov fist ret push mov adc or xchg jge pop cltd test arpl loope lods adc mov bound dec sub jl cmp mov xchg cmp cmp push xchg rcr aas pop js or xor cmp or loope xchg int3 mov mov cs add stc jne mov cmp lahf mov mov sub clc xchg sub dec xlat (bad) ss pop add aaa dec (bad) fbld push lds xchg cmp cmp (bad) xor and fucomip and pop rorl jo out je mov mov scas cmp mov das rcrl add inc sbb inc cltd mov jecxz test das pop fcomps dec test sarl xor fidivr mov and roll xor sbb notl test xlat sub xchg pop daa scas and jecxz push xchg (bad) shlb repz push or mov push jmp sahf icebp add fisub enter rorb outsl cs and fs add xchg sbb rorb lret xchg aad mov pop jmp ficom push jl jo iret xchg xor lods ja pusha cmpsl insl scas push lret mov ret pop jp and cmc cmpsb rcrb xchg xchg pop addr16 pop sbb jae pop ret jo jns jge pop xor faddl fs (bad) adc adc outsl outsb fisttpll lea mov or addr16 pop mov enter bound test xor popf (bad) xor jl pop gs xchg mov xchg mov imul out adc js aas test cmp dec ss dec jno movsb nop sbb or in or xor mov push pop fisubrl push fisttp mov (bad) or or (bad) in fs jmp or sub mov xchg das fld push (bad) iret test xlat imul mov push push pop sub sbb scas sahf pop and inc push jnp and xor dec mov push mov pop fs pop add add cmp xchg cmpsb pop xor and jmp cli les fnstsw cli push jae lods pop dec andl ljmp and inc (bad) push subl add xor jmp add mov push adc (bad) cmc xor sub xchg cld ljmp lea insb xor sbb dec jle push add es dec push adc dec aaa fisttpl ja cltd xchg sbb jno cmp push mov iret (bad) out cltd sbb cli pop xor xor in or icebp mov popf pop gs xchg mov test push call and mov sub fdiv lods insl fimul je sub div cli iret es inc cmp in xor ficoml push divl mov loop add test leave mov repnz adc sbb cmpsl adc xchg pop adc icebp pop ret fbld cwtl daa aad mov decl xor aaa aaa mov cmp or data16 cmp hlt shrl sbb shlb js repz add sub jmp (bad) lods ljmp lcall xchg ss rclb mov lods cmp pop fcomip adc pushf xchg xlat push out vrsqrtss or mov clc call test push repnz lods cmpsl (bad) or scas in jne mov (bad) pop and cmp popf push cmp test bound jnp cmc lock idivl outsb loopne pop popf adcl stc jb cmp xor mov mov aam lods and sub fidivl ds push push leave adc push xor cmp cmp mov jb pop loop cmpsl movb stos in push (bad) adc add and bound adc outsb es mov mov pop data16 scas or sbb inc rcll in inc pop aas rcrl popf ljmp aam ljmp mov mov loope cmp pop add xchg cmp jns int aad into adcl arpl and ret push fldenv mov imul xor adc mov mov (bad) mov hlt push jg push bound sub lock data16 xchg mov push pop inc add xchg and and xor mov inc sbb pop aad jmp pop in xchg mov mov add lret or inc adcb dec lods test aad xchg xor (bad) out movsb xchg inc xor addl cmp mov mov in loope pusha test xor sbb add mov ja xchg notl mov jg adc (bad) sarb adc or or pop mov pop (bad) adc pop mov cli pusha cli (bad) mov rolb pop jne stos fisttpll out mov add sahf jo rcr jne out cli cmp gs or sub cmp mov lret loop sbb push test jns inc jb sub nop jl rcr push lds mov add arpl ret scas rcll mov cmp push and cmp add adc mov cmp les xor adc inc cmpsl int3 iret cmp insb imul and push pop jns mov dec movsl out pop (bad) xor ret test cmp dec (bad) pop jns and loope (bad) sarl enter cmp or daa pop insl sbb cmc jecxz out leave enter adcl jb imul push and lock push (bad) and ret insl cmp aaa lods push (bad) fidiv inc pop mov scas std and movsb cmp sub mov sub cmp push and sar mov imul shlb sbb arpl jg outsl jns lds out adc pop icebp cli or (bad) ffree inc add lods mov mul das push mov jle pop lret xchg xor sub movsb or lods jb push xorl cs es aaa repnz lock loope adc movsb or mov jmp fldcw mov cli pop mov lret insb ret mov mov jne xor lahf aaa mov pop ljmp sub sti pop cmp sahf mov sub adc outsl ud2 dec add repz into xchg jns lret adc or scas mov dec ss mov sub cli mov mov test xor mov dec movsl rcll ficom xor push fnstcw test mov push lcall outsl pop iret add rorl lcall dec and cltd add ffreep rcrb lea aam xorl leave xor mov push orl mov outsb movsl stos (bad) mov pop lcall hlt in jne sbb sar cli sub dec loopne jp and fsubrs pop fisubl xchg inc adc or es jle divl dec jns mov mov jne roll sbb loopne call ficom dec sub sahf jae sbb into out rcrb bound clc cmp add mov push (bad) lret pop pop (bad) cmc int3 leave div addr16 cmp in adc lahf sahf (bad) loop jg pop mov cmp cmpl popa pop fidivl mov mov cmpsb xor pop jmp pop and sub pop xor or fmuls lret lcall jp push cli out xor cmpsb das mov push stos neg pop ficom mov jns stos incb loopne jp dec (bad) mov and and pop xor shr (bad) out inc jge aas pusha inc pop pop outsb in je mov push xorl insb xlat sahf pop hlt xor lahf loop xchg aad (bad) movsl push js push ja repz (bad) dec cwtl (bad) repz push ljmp pop gs xchg das mov (bad) test test jle gs cltd sti push lahf inc sbb int3 mov mov or jmp push jbe adc cmp add cmp std push test sbb jmp cli sarl mov ss mov popa push inc andl call mov les notb lods jle lret pushf add int jp dec cmp ja xor aam push fwait sub cs and push enter lahf (bad) sub mov sub subb and lret in pop push ljmp cwtl bound xor mov enter roll sbb cwtl mov adc pop das js les and lock sbb mov clc aad add adc dec inc add or lret lods xchg and fild push jg xchg mov dec popa jmp sbb out movsb push mov outsb icebp mov dec inc adc push sub sbb imul (bad) jno inc sbb jp add addr16 jg inc fisubl lcall test jge pop or inc nop loope or es test popa and sub in gs (bad) div rorb ret jno clc jnp ljmp lods sbb sti pop mov push dec test ret loope imul lcall aaa dec lods dec test inc arpl int das mov push inc adc in shrb daa incb fwait jge lds loopne (bad) je test enter lcall icebp adc sbbl rclb pop mov fnstcw add rcrl lock mov movsl and jns jle inc into je or xchg push std in scas mov (bad) aaa popf sub sub loop outsl mov or fisubrl jae (bad) outsb sbb pop loop jmp push mov lds (bad) push pop jo push xchg dec mov pop jae mulb shlb int out inc mov jne add bound adc movsb jae inc mov lahf popa rclb in stc rcrl loope in or pop loopne repz lcall and cmc (bad) sarl dec fcomps inc pop dec test mov fist stos popa push mov and jg mov pop pusha adc cmpsb insb xor xchg mul jns cmp mov jg sahf mov push hlt adc cmp notl mov jae frstor add or ss pop negl cmp or and or in dec rcrb rorb (bad) mov xchg jl ficom aas (bad) mov sbb ds scas aaa mov adc int3 or in vandps lahf inc fcoml push pushl dec pop adc jbe jnp addr16 aaa push mov dec add adc adc cld push mov (bad) mov inc mov mov xor clc pushf adc mov lea icebp dec cli loopne aam insb jns lods cmp (bad) sbb ds and out add sbb adc in into stc push (bad) outsb mov cmp test pop cmpsl cmp mov pop fisubr sahf ret rcrl xchg mov cmpps cmp test repz sub je pushf nop inc jmp cmpb fistpll mov lods das jb les ret testb add mov sti or cs pop mov mov cmp loope out jo push mov aad adc lcall xlat lds mov sahf jae out xor add into sub mov in out stc hlt dec popw test or lahf jle std pop icebp (bad) xchg inc lcall cli lret lock pop (bad) icebp cltd xchg ret cmp (bad) inc lea xchg sub cwtl push test jne dec and shll mull mov jns aaa test loope push and fwait adc and js test mov sub ret or jne mov mov arpl fcoml repnz in loop int3 cld pushl sbb cltd imul mov dec idiv rcl decl or mov xchg lds adc shrl rclb adc xor adc jl rorl jb mov test mov adc mov fcmovnu (bad) dec arpl fidivl mov cmp jnp pextrw pop push fstps arpl or inc (bad) mov add ljmp inc dec mov sub cmp xorl (bad) (bad) jle dec push xor loop and fildll push xor bound mov std test mov cli pop xor xor mov add xor push loopne in ret mov or test scas xchg lret cmp cmc (bad) aad je inc or repz (bad) ret in dec rorl (bad) sub ljmp push inc imul xor inc sbb in dec lock clc sbb add pushw jecxz sbb inc lods fdivl sbb jns repnz add sub xchg inc sub lea cmc xchg add imul imul rcrb aam sub pop sub into jmp int les fcoml xchg out jbe ret popf jns (bad) xor test xor mov ficoml shl mov rolb ss pop ljmp int3 ret imulb lock cwtl mov int mov lods jp xor lea (bad) xlat rorl cli lahf dec ret mov pop mov jae aad pop xchg jmp dec or xchg popa and push mov sub mov xor in (bad) repz rcrb (bad) jno int cmp ja lock adc iret mov adc int3 aas aaa lret test stc pushf sarb jb in inc bound in pop mov cwtl in adc add mov adcl adcl dec and imul cli ja adc push aas xor pusha dec xor movsb jbe pop inc sahf pop sbb inc cmp sbb imul (bad) out jge add mov jle and mov pop pop sahf cmp test lea and add imul and fimull ror cs fcmovnb pop mov in and ffree add out mov xor decl xchg in cld inc push je js pop sub test scas stos dec jle cmp cs das fldcw cmc out adc mov and cmp scas xor mov mov add xchg imul mov lods loop jmp inc cmpsl aad ja dec decl push or gs loopne dec fcomip (bad) jmp cld sbb xchg cmpsl xchg push (bad) loopne imul sub push pop stos pop cmpsl rcrl and push jnp in lods mull inc and cltd sbbb fsubrs cltd sub jnp cmp sbb and mov ficompl (bad) mov and sbb fmuls mov repnz in xchg or int jmp inc jg mov mov sbb (bad) ja push xchg cs sahf loopne jp jmp sbb clc sbb lock movsl mov cmp movl or ss jne adc dec xor and rcll sub jle js cli ret jnp mov bound cld or mov mov mov dec neg cld idivl and push std dec and inc sbb mov leave push in cltd lret ficompl fcomi xchg mov xchg (bad) mov pop sbb xor or cmpsl and lret push lahf sbb hlt ja popf jnp dec push cmp in lret lret cmpsl jae test add mov and adc fs sbb mov or call jle dec xor or cmp cmp test scas inc inc mov mov push xor insb mov cmpl mov inc xor test xor xchg insl popl rcr cld rcl xchg cmp xchg mov pop rorb sub leave fnstenv mov daa push (bad) sti xchg sub lds incl insb mov push lds test lcall sbb ret fsubl xor push cmc sbb xchg jo nop push jg mov data16 xchg and (bad) out and fs lret add nop pop sbb popa rorl ds pop sti jns scas push cmpsl stos cld aas mov sub ret pop les push dec mov shll dec out ja inc pop lcall cmc pop lods xchg mov inc sub mov xchg je xchg out adc jle leavew (bad) jb sbb fs lret rcr or aad shrb cmc adc fs int mov or gs clc lea adc jnp aas mov mov (bad) enter in gs sbb add outsl jno (bad) ret or mov mov add pushf repz xchg arpl test loop jnp dec test mov push insl iret add xchg int3 sbbl jo mov std mulb lock xchg lret aas into xchg or int3 inc pop mov in xchg xchg cmp or cs mov sbb lds popf cs fistl push sbb imull adc jmp jecxz dec adc ljmp repz add inc stc sub cmpsb xchg lcall sub lock adc xlat sahf push daa rolb and movsl shr ljmp leave add lods or mov insb and or xor jo icebp pop (bad) roll xchg xchg adc add sub push cltd xor cli mov jbe adc push das jecxz sbb pop dec xchg dec test add mov jne setp jo push fmul cmpsl fisttpll mov xor or mov sub in and mov fdivrl jo (bad) fcmovnu pop mov scas pop rcrl out (bad) fcmovu mov enter dec mov xchg add and inc rcr movsl pop outsl fidivr (bad) fnstenv pop mov inc mov jbe frstor cs add cmp xor shr scas stos and mov out mov ja inc divb nop cmp inc mov ret mov inc sbb cmp popf sbb stos mov out inc and sarb ja pop clc ret rclb negl mov aas sti testb mov mov xlat and dec lret fimull add push insl sub pop jns add cmp (bad) push jmp mov inc in aas ja adc add xchg sub cmp jmp rol in push cmp daa cmpsb add je in pop add in fwait enter add and nop and int3 adc adc int iret push (bad) adc test inc in imul (bad) leave xlat push push jecxz in mov mov xor mov test cmp mov gs mov mov xor push mov push popa cmc inc sbbl sbb cmp push call in lods fidivrl xchg mov es adc jbe,pt pop mov jge fidiv pop ucomiss pop jecxz cli lcall data16 outsb insb mov jno sahf inc (bad) das mov (bad) fnsave (bad) and xchg or fnsave mov fwait pop xlat ret lods jne jbe lahf stos mov cmp inc xchg fdivl dec ja or inc hlt fadds clc xor adc rclb ss pop mov ret in jp pop xor jecxz sub sbb adc lods xchg stos xchg cwtl frndint jmp (bad) pop repz xchg add icebp jge adc shrl mov push das xchg jl xor pop (bad) and mov cmp scas aaa cli fcomps mov shrl addr16 mov sti cmp cmp movsl sub push insl push mulb dec roll lods rcl mov xchg (bad) loope adc test mov add mov mov loopne lahf jle int3 mov insl mov dec mov shll jp andl dec pop cmp lds add push mov popa pushf add in out loope (bad) ja icebp lret stos imul insb inc outsb jno jbe sarb sbb inc enter test lret add (bad) jp fiadd mov adc or fdivl add sub out sub (bad) cld sub shl loopne push mov xchg add popa lods (bad) mov xchg dec push mov pop jmp mov xor pop mov loope mov mov mov adc xchg (bad) xlat (bad) stc int pop sub inc int3 out jns lret jns add sbb or add pop pop movl outsb inc jns xchg dec cmp mov push dec fcoml push sarl ret sub and pop fmuls test lcall adc hlt stos xor cmp jbe adc (bad) popf and cwtl sbb adc movd in std mov push jle insl xor call mov inc cmp mov xchg mov xchg pusha (bad) in sti mov jmp iret loopne rcll jg xchg xchg xor pop iret (bad) xor arpl jl shrl loope or les pop ljmp cld lock add fdiv pop push rclb mov lcall js bound inc jmp or movsl jmp adc sbb arpl outsl stc pop cmp cmpl dec incb pop fdivrp fsubs ret int3 ja cld in mov pop xchg (bad) sub pop pop push sbb xor lret inc add fs xor add daa (bad) in and xlat pop (bad) xor test inc ss pop ja mov xor lock add aad ss cli ljmp scas pop fist inc aas lods add push jp push adc imul shr dec cs (bad) push stc dec jg push ror pop popa cmpsb xchg clc ds sub aas add lds (bad) push rclb ficoml lea pop mov mov hlt in jbe popf out iret (bad) push popf hlt (bad) inc pusha adc rolb sub sub xchg lock test addr16 pop mov popa lds ss push data16 sbb (bad) stc stos sbb repnz sbb lcall push hlt icebp in lret push insl lcall nop imul fs xor nop cmpsl fistpl cmp xchg mov xlat push loope lcall jne push iret mov out ljmp jae sbb out pop scas fiaddl (bad) xor fwait sub add or lret (bad) push mov jle mov mov addr16 in lods or scas addr16 in xchg inc sub ljmp imul push imul ret lods dec (bad) in cltd jecxz cmp xor lds lock jle lahf cmp inc add push cli nop mov sub jno lret jg,pn dec push sub pop mov daa add xchg lret adc popa xchg xchg push outsb fsts mov add iret and sti pushf dec jbe (bad) sbb inc push mov sbb aas jae aad insl and mov jbe xor mov xchg jp push and (bad) movsb push (bad) xor cltd and insl int inc dec mov adc jnp inc push pop outsb insb jno inc jb mov xchg fwait xchg addr16 inc mov stos inc mov adc arpl push xorl popa mov in popa mov daa fbld aam (bad) imull lods mov dec add daa nop ficom cli js push movsl fwait xchg mov xchg into dec lds stos movsl lret or xor mov mov xor adc lods sbb pop sbb aad xor testl ja mov mov mov fnstenv jb jno or mov test xchg and notl add stos pop dec rcrb push mov hlt pop addr16 lea jne pop sbb scas cmp pop scas add mov je leave push clc push dec dec dec xor adc cmc push mov mov ret push mov mov cld fdivrs lahf in pop cmpsl pop repz repz jg dec rorl out xor inc (bad) neg stos jge hlt pop mov std jno imul mov cmp (bad) jno js daa out dec xor inc leave cmp cs into and xchg mov test or pop jb sub daa push xor xchg pop sub cmp mov enter ds mov mov out adc sub inc pop or xchg xor fwait lret fiaddl stc test sbb xor and xor pushf push (bad) pop sub sbb pop xchg xlat leave out aam mov dec out cmc sbb lcall out arpl mov add in mov scas mov addb (bad) sbb sbb push ret out imul mov sti stos test hlt push jmp xchg shl push mov das scas cmc or in jg test dec xchg aas mov or add xor cs add cmpsb add notb ljmp ss outsb call lret pop sbb jno test cmp aam aad sarl jp int dec popa (bad) xchg add jmp mov pop insb inc out mov sbb xchg mov fadds ljmp mov sub pop pop int3 into repnz xor outsb aas push lock popf xchg mov and cltd (bad) bsr push fldcw xchg or cmp scas ret inc dec imul jl adc rorb int mov lock outsl push mov into dec and or lock (bad) mov or rcrb jnp adc rcrb insl mov js jp dec dec push pushf or cmp sub sahf icebp daa pop or das or rcrb and aad (bad) out into pop mov jbe (bad) js mov sub dec add clc inc cmp inc incl mov adc sbb or xchg adc dec push jmp (bad) xor and pop lret leave in mov jae xchg sub (bad) push ja inc inc stc add test pushf jmp ja cmp adc adc int3 dec sub jno add adc xor daa test pop pusha in scas pushf ds cmp hlt jl push decl loopne sbb push clc mov stc add and adc lahf fcmove mov xlat adc das aam mov loopne fs pop mov sbb sbb pop into cmp pop sbb sub inc sub adc fwait and cmp ja lret xchg iret ss shll out ljmp imul xchg inc xor outsb andl (bad) and cmp pop dec rorl and sub sub fcompl jl divl cmp add sub or mov inc gs and push xchg mov add gs jns dec lock mov bnd cmp lea pop push (bad) test bound lret mov sbb mov push add shl pop mov xchg je bswap mov xlat push lret mov cmp pop cmp inc push lahf mov mov icebp push (bad) ja mov xor lds lods je jbe push insl (bad) and or in pop pop mov pop lcall pusha movsb aaa into cmp in add mov and incb dec add (bad) dec jp lds jae rolb inc push xor or out or sub (bad) (bad) int jp or imul xchg xor xlat xlat pop das out imul stos outsb imul jg out es cmp cmp call xchg jns insb fadd sbb or ds jno jmp push ret push leave rcll mov insl sbb xor aad cmp sbb movsl push fcompl pop and dec mov inc fidivrl mov mov inc iret aaa xchg in cli hlt lahf pop jne ljmp mov stos sti ds ljmp xor jg dec push loop les cmp push xor cmp pop xchg mov sahf int push mov sub pop push mov lods push test jnp or pop sbb sub std sbb sbb cmp jg jae inc fdivs mov add xchg mov out mov cmp mov (bad) dec pop cs dec adc mov push pop cmp sbb out inc ja cmpsb movsb scas adc adc (bad) rorb pushf dec pop xorb and xlat std mov add fwait shlb mov in jne lock lods or xchg cmpsb inc js mov adc mov xor mov and or mov dec imull adc test mov dec sub mov dec or jecxz mov in (bad) mov xchg imul ficoml xchg lds aaa mov cmc pop sub mov sbb scas mov add pop enter mov icebp mov inc fisubr aaa inc pop mov sbb sub daa lods call or mov bound enter push repnz add ljmp and mov and add inc mov jmp in imul jbe imul (bad) push mov in sbb pop jmp les mov out pop sbb cmp sub aam cli (bad) das out adc (bad) jecxz sar test dec mov sbb dec cmpsb out outsl rcll je adc sbb sub add xchg sarl pop adc mov mov in adc mov dec inc addr16 fsubrl mov jno cld xor sahf dec adc sbb les push test aad outsl hlt push nop in inc mov movsb mov pop aaa in mov xchg iret and and mov decb or cli mov jne aaa xadd xor push mov rorl idivl and iret add idivl divb sub leave inc and stos pop sub push (bad) or loope jo or pop push fildl out into iret mov gs mov nop adc pop jno dec fcmovnu cs into xor add enter push addr16 iret sub jbe mov xor push add mov idivb mov es das sbb lods test jnp (bad) sarb sub inc add mov cmp in push scas inc dec jmp js ljmp inc hlt push mov mov fcompl stos xchg fucomip (bad) push pop mov cli mov or test add add das ljmp dec stos lret rolb add add mov shll push pusha arpl mov mov in add insl add repz lret adc sub push fadds shrb mov cmovne mov out push scas mov mov sbb lret sahf dec adc cmp cs sarb and xchg push dec and repnz mov (bad) add ja das push jbe stos stos mov cwtl ja or dec inc movsl lock mov divps xor hlt pop inc push xchg addr16 and mov pop adc stos cmpsb ss mov xor inc (bad) sti shlb ja cmp lret movsb ljmp clc mov test push cmp adc inc out mov sbb inc nop push pop cltd sub icebp ja sub andl xor insl ljmp dec outsb fwait cli popa jle cmp aas jmp cmp push adc dec dec sub fstp cmp jg pop sbb movsb pop xchg and mov in mov pop dec mov (bad) cmp scas xchg xchg sbb test lods cmpsb cmp in jle mov mov adc int sbb outsl das ret imul notl and cmp hlt dec nop in imul hlt repz sbb into sub mov lods lret jmp pop mov scas insb jg ja xchg inc icebp mov mov jns jbe sub mov add adc jmp outsl mov sbb gs push jno sbb jnp pop adc sbb pushl or jae pusha sahf (bad) mov cmpsb repnz or mov sbb fdivl push fs adc jge dec outsl movsb xchg xlat cmc mov stos pop rol mov inc jg add cmp mov lcall pop (bad) and arpl xor data16 inc push sbb outsb dec and lahf adc pop fistp leave rol or sub push das cmpsb xchg cmpb adc xor popf test test ss xchg jns insl fwait dec and sub shll mov mov sarl aad mov inc push stos pop mov movsl stos shll inc add xchg mov iret int jbe cmp int3 scas sub dec mov outsb push popa flds sar mov xchg dec shrb pushf clc rcl fnop cmp pop ret lcall stos xchg push int3 (bad) negb mov cmp (bad) jbe call and jnp adc sbb pop mov push jno adc jo or inc movb movsb xchg xor xchg clc xchg js repz xchg cmpsl imull fdiv xchg call repz mov xchg mov mov xchg sub add or test sbb lock movsb mov mov shrl or cmp popa hlt fwait out pop in sar outsb and ljmp adc int sub (bad) add testl out and or or dec es icebp sti repz push mov test mov or sahf push sti mov mov int divb insb pop cmc ret push in sub ficom lret jmp or xchg xor cld aaa xchg ljmp fidivrl repz js mov dec lods ss and pushf inc cltd jno int push jnp dec cmovs xchg aaa push lds jno clc cmpsl mov loopne insb ret pop push scas or ret mov in sbb or sub out xor ljmp pop jmp call dec mov movsl (bad) fimull loop pop ds mov stos xchg xchg push fcmovnb int3 xor xor (bad) dec repz xchg add cmc aam mov cmp sub and ret add dec lahf (bad) xor js xchg mov mov adc pop stc lds leave in mov push inc inc lods int test arpl imul mov adc sub dec fisttpl mov lods les mov lea daa mov sub shr imul cld jecxz or dec sub xchg jl mov scas hlt call shlb push not xchg fdivrs daa mov push mulb pop dec outsb nop mov out or inc lcall inc gs je iret jg loop xor test lret or aaa daa xchg loop stos mov aad out pop outsl es dec push lahf dec loopne lret mov cmp mov ds cli dec out mov mov or daa push and sahf jecxz aam sub rcl push jle add push fs dec mov sti ljmp test outsl mov add xor lods in dec push pop sub mov (bad) sub leave push cmp hlt mov (bad) cltd sbb sti jecxz cwtl movsl xchg mov fldl movsb in in ficom (bad) cmpsb repz dec mov xor test jns iret inc inc mov inc scas mov int3 movb add stos cli jmp jmp sbb cmp mov movsb popf (bad) divb cwtl xchg lds test ret pop mov fist sbb loope rclb and out clc or xor mov adc enter insl enter daa fisubl pop add jg add mov fs jno inc into (bad) insl xor jo pop add leave pop stos jno scas fidiv das mov fwait rcrb dec call outsb gs ja xchg sub loop scas mov loope xor adc in ret jp jle xchg mov outsb mov hlt dec push in push inc sub sbbl adc mov push adc sub ret lret bound ret icebp sub mov pop rcl adc jp int3 popf fdivrs popa jnp js push shrb (bad) xor (bad) dec lret dec popf cld adc push xchg inc out repz aaa inc add adc or sahf pushf jne (bad) mov addl mov mov mov adc xor addr16 cmp mov pop pop popf or cld xchg pcmpeqd jbe push mov out sahf in jg fcomps and aas mov sbb mov jle fistp (bad) clc jbe push or sbb and insl decl ret dec pop sbb push cmp mov aaa push adc jae call mov jg mov inc call or out in xlat mov xchg jp aad sub sti pop rep (bad) xor roll pop pop fs mov adcb addr16 pop sbb fwait jmp adc xchg and inc stc lea loopne adc or mov dec fdiv lret sbb int3 xchg dec xchg ficomp lret int3 jb jno fstpl (bad) jno pop mov out psubusb add bound cmp stc stos addr16 sub test imul inc sbb mov or sub cmp movsb sar pop pushf fsubl mov push mov sarb jecxz (bad) lcall rol mov sub mov mov mov pop xlat jo sub xchg mov sbbl lea loope cmc fsubp (bad) jae int inc das psubq dec cmp pop sbb in mov jl sbb mov pop (bad) cmp mov mov scas hlt push push ljmp scas hlt outsb cmp shrb sbb jle lcall push xchg jle sbb orl jecxz mov mov and xchg ss sar push mov pop inc lods xchg imul das rol (bad) mov push cmp lds pop jae xchg es aaa and imul adc push movsb cltd inc push cmpsb pop pop add cmp cmpsl shlb jmp sbb and sbb jp daa scas pusha stc mov in mov dec xchg add xchg rcll xchg out cltd and mov mov sub jmp mov int3 push mov lock popf rolb sub fs stos adc cmp dec push insl loope dec xor sub bound ds outsl cmp mov int or jbe xchg mov pop ret les insb sbb xchg adc test and jmp lods push shrl repz clc xchg imull (bad) hlt fdivs jge cmovl and ljmp xchg inc insb (bad) pop sub test sub movb cmpsl (bad) daa mov xchg ficoml adc jbe or push jge stos jl sub push inc xor daa pop mov xchg mov jae push cmp dec jae and mov jno sbb xor int cmp mov jae push (bad) dec or pop popa push sub pusha gs call xor add pop mov dec pushf xchg mov ror loopne xor push lret pop ja sbb lret pushf jns add or popa lods leave out pop and xor or std sbb or push insb mov dec out mov int ret pop xchg das loopne stc jmp loope xchg add loope in xchg loopne test and iret push clc mov faddl xorl sahf pushf popf inc in enter or cld cmp sbb das push js sbb sbb cmc fidiv subb dec fwait jne jb outsl pushf ljmp es add jae cmpsl adc dec dec out addr16 dec sbb inc pop jne push jne and ljmp jp repnz pusha scas jmp dec sar inc push icebp xor pushf push ficompl (bad) sti lret scas mov xchg push adc jecxz gs xorl clc repnz int div mov jecxz daa (bad) rorb rolb gs adc push sbb or cmpsl and aaa popf fwait xor adc jbe jbe sahf mov or mov cli (bad) cmc xor add adc inc mov pop les xor pusha (bad) (bad) cmp xchg cli aaa jne sbb lods ja lret dec push mov pusha xor and pusha pshufw mov sti sar fist rorl das je daa jbe push mov iret add lahf pop (bad) cmc lods add leave hlt cwtl jbe pop nop dec call jnp inc cmc loop pop adc call mov in sub cmp push or loopne xor nop push mov cli test clc fbstp sysret pop fcom pop jns mov cmp mov out lock cmpb aam arpl stos adc jne scas das stc imull fdivrl insb test dec mov out mov nop fisubr adc int adc jno xor cwtl mov (bad) mov movhps call loope popa push cmpsb idivl pusha pop fs mov stos and add adc lahf aad add lods sarl mov rorb ds cmc mov lea sub dec mulb lcall dec jne or or lahf int push test arpl xor orl lcall (bad) jo cmp and sbb jl loope adc js jecxz (bad) icebp out out cld outsb add cmp ds je mov sub je fucomp xor mov (bad) call and sbb mov cmp loopne push pop addl insl es adc jp push clc sti mov mov outsl cs jae sub cmp orb lcall ret xor lods mov jge in push or arpl into sbb cmpsl (bad) cwtl rcrb dec out cmp jmp cmp xchg cmp pop fwait mov pop fidivl push or je jg sub movsl jge (bad) ja add ret pop int3 mov mov mov pusha sar adc mov sub test roll test or daa hlt movsl mov mov mov push adc and mov js ja mov in cmp lock imul test test out mov adc or cli loopne mov cmp adc in clc sub xor out stc enter out xor inc sub sahf lahf cmp cltd xor (bad) fsubrl stos xchg add push (bad) test xchg sbb pop loope lret jbe cmp cld out push and pop clc mov mov data16 in enter push fdivrs xor lods sbb movsb mov fcoms inc pop fwait sub pop pop outsb dec jecxz pop je,pt inc sub aaa mov jne mov inc add add add (bad) (bad) incl add add add add add add aaa add add add add pop push insl inc inc dec push ja dec inc cmp push dec ss xor xor jns xor push add add daa cmp jo dec xor inc xor inc insb je popa outsl inc cmp push jo jbe dec aaa cmp insb inc outsl push inc push add add sbb aaa push inc cmp addr16 dec pop inc cmp inc je outsl push xor dec inc push add inc popa inc ss pop jp gs dec insb dec arpl jbe dec jns jb push push jae cmp push add add imul xor dec ss jne dec jp cmp inc jne xor inc xor xor jns pop add add push insl ja push jno jo inc inc push inc push jne ja jbe push jne jae cmp outsb push or add pop push inc push inc dec xor xor inc ss xor outsb jbe dec dec inc pop pop push pop dec dec push or add and dec outsb dec inc pop cmp dec xor xor jp jp push dec popa outsb cmp fs push xor push or add sbb bound bound xor insb push pop xor aaa jno push jbe inc push or add push cmp gs push outsl cmp push dec xor insl pop insl inc xor or add and push insb cmp jno xor push dec xor ss jne push je xor jbe jb or push jb inc js outsl dec inc dec inc dec imul inc inc push push add add dec fs bound jb push push jo jne xor outsl popa push je push bound dec pop xor inc push imul add ss xor dec popa arpl jb outsl xor fs dec push jns inc jp push arpl dec bound adc add and dec inc xor push bound push jno inc inc insl dec data16 insb outsb xor inc xor data16 pop xor adc add sbb dec ja dec push inc dec xor js push jns dec jp dec gs pop push adc add and xor jb xor push dec push imul imul jbe inc inc inc dec imul push adc add sbb pop xor dec inc jo xor popa inc inc push push push imul add sbb push aaa ja insl jb dec aaa inc imul dec inc jbe push ja adc inc inc push dec push jns dec fs bound popa push xor xor jbe insb jne dec insb inc cmp inc push jno push add add dec push xor push jbe inc inc xor inc insb push insb insb inc js xor dec arpl pop add add bound imul push push xor outsb jbe jae cmp jae dec push jns xor push sbb add adc inc imul dec inc cmp jbe dec push push xor push sbb add pop gs dec jo jno dec jno arpl inc push dec push pop pop push sbb add and jne jb inc jno bound aaa jb imul dec outsl push pop push dec inc push push sbb add and insb inc dec push inc xor jae inc push jp push push jp pop push dec dec xor dec dec push fs xor sbb add and push ja imul jns jbe arpl inc jp push inc push pop popa bound push insl cmp jp sbb imul xor xor xor dec jbe push push push js gs pop imul outsb push push add add jp dec push jb xor data16 pop pop imul push dec pop push addr16 imul pop add add jns bound popa push jbe jp dec push imul imul arpl jns push and add and je imul dec push jae je inc dec push ss inc push inc push pop push and add es inc xor xor imul imul imul pop xor insl dec dec bound cmp ja and add sbb dec push insb push dec push insb popa bound jo xor outsb jp insb push and add push insl pop xor jns dec inc dec xor inc inc cmp gs jno and add and xor insl dec fs imul xor xor jo inc insl pop jns js pop jp and popa aaa xor inc imul inc xor cmp jp push pop push aaa push push pushw add add xor dec pop dec data16 xor xor popa push jb xor ja jns gs push fs fs add add jns jno dec push xor ss dec insl push xor fs xor sub add and jno push dec je dec dec xor outsb imul bound addr16 cmp push inc xor data16 sub add sbb dec addr16 pop inc pop je jbe dec pop jne cmp xor push js push sub add sbb xor pop cmp push push outsl aaa push inc imul push xor aaa dec push sub add and pop outsb popa xor dec xor push xor xor cmp push cmp sub add es js imul xor xor js outsb cmp jae xor dec jne xor inc push push fs push sub dec jo push bound insb inc dec addr16 xor inc dec ja inc push add add imul pop jae inc push dec insl dec je xor push popa push dec xor fs dec dec inc insb outsl pop imul daa xor xor jb jne insl cmp dec push popa xor aaa xor data16 inc js xor imul add add jne inc dec cmp jb outsb outsb popa jb je inc jae insl push xor add adc arpl xor xor inc push popa push xor add es push imul push dec inc dec push pop push push dec push push push push popa jns dec push jb pop jne xor inc aaa inc xor xor add sbb outsb xor inc inc imul jbe jbe inc dec insl xor push xor add and xor xor dec push push dec popa inc insl popa data16 imul dec push push addr16 imul bound xor push data16 popa insl insb xor aaa inc push js inc dec xor outsl jbe jae imul ja insb pop jne pop push add add xor insb push inc outsl dec js push ss outsl dec jno addr16 dec inc inc inc pop xor push popa jae aaa add add dec xor pop jns inc push insb addr16 outsb inc pop pop dec jb jno inc addr16 dec push cmp add and pop cmp cmp dec insb xor gs pop cmp arpl bound ss popa popa jb dec pop jb or adc add cltd cs or mov mov daa xor mov bound insb outsb adc leave mov jmp adc gs pop push daa mov scas jb or xchg pop mov pusha cld push mov orl mov pop int fistp stos xlat in fcos cld cmp gs cmp icebp jnp xchg jg add leave cmp adc mov lds mov pop pop leave sahf (bad) mov movsb and push push cmp inc loopne cmp stos ljmp scas push pop inc ja dec in mull pop or aad fs (bad) (bad) fbstp mov push mov adc jp stos dec jg in in into bound push adc repnz inc dec popa pushf jp ds ljmp fcoms bound out xchg mov lret insl dec cvtps2pd int jmp lods fcompl pop cmp stc aaa dec inc mov push inc orl lods jmp and and shll dec xchg pop and sbb sbb mov lea cmp dec stos test jge fbld jmp mov ja cmp sub out popf loop call push in lea jmp dec mov pop or cld sub add lds jl sbb inc shr arpl xchg repnz dec mov mov inc cs ja add dec pop push loope mov inc call dec cmpsl inc or imul xor cwtl mov mov pushf cmp dec lret call jge fs shl or inc addr16 xchg out jmp stos rol xlat ds sbb add (bad) dec inc (bad) jecxz adc push xor fwait and (bad) aas (bad) dec (bad) cli arpl lret adc das lret push lahf adc and fsubrs pop push xchg ret add loope repz enter mov pushf and (bad) push mov push call fildl push push jmp aam movsb dec and xchg dec insl movq mov push mov add mov imul push ja pop cmp push xchg popf cmp and (bad) (bad) outsb sub data16 cltd repz push jbe and mov pop rcl imul mov sar fldt test int3 divb rcrl xor pop jns adc xlat adc or adc jb fsts cli fnsave jmp out add sbb sub (bad) jne sub decl in ljmp jns mov xor xchg xchg lods cmp and aas lea mov rcr fwait xor insl fcomps and cltd jmp int cmc icebp pop push pop aam leave das stc pop loopne and out cmp inc movsl lock inc or pop push jae xchg mov jb sub push mov mov dec jns cmp aas push popa push mov cli push and xor cwtl mov das (bad) notl pop dec push outsl loop fwait scas loopne inc adc btrl pop cmp stos sbb ss add xchg in cs sbb imul push movb dec sub adc mov lret or imulb sub (bad) mov xchg mov mov fbld adc mov mov adc fdivrl shl xor js mov xchg pushf pop cmp (bad) add dec (bad) sbb test in pop push dec mov mov out fwait xlat mov push inc in mov mov dec enter in mov gs shrb adc mov mov (bad) lods mov pop stc cmp dec xchg push sub mov popa popf clc inc push add enter imul movsl popf adc pop bound loopne inc jno test jl scas and cmp stos xchg es push in je adc leave insl nop push and cmp call sbb pcmpeqd fisub pop xor cmp rorb (bad) mov clc arpl or sub movhps lods mov dec sub pop out fldcw pop (bad) mov xchg jecxz jno dec jne push cmp push or mov cli sub scas xchg sub sbb loop (bad) fistpll add mov cltd popf adc jae (bad) ss lret dec or push push push add mov (bad) mov sar push jne mov sbb lcall lea aad (bad) pop pop dec nop int jecxz bound add and inc xchg stc out xlat jns cmpsb shlb mov les (bad) pop xchg movsb inc into cmpsb fnstsw push lods pusha loopne xchg pcmpeqw out sahf je adc jnp jge add rclb xchg inc pop dec stos stos cli (bad) sub jecxz pop andl lock mov mov inc lret or mov sbb lds ljmp scas les mov xlat xchg push sub sbb loopne aas bound pop loopne mov jecxz inc add jne push xchg int3 pushf or push repnz fs sbb js ret lock jne sbb mov mov push push push mov mov lock cs mov cltd dec push imulb das fiadd pop add imul (bad) dec and lock ljmp mov loope sub rorb sbb lods insb aas fildl adc sub push insl xchg imul push fldl2t scas jmp fdivl sti les add xor mov sahf movsl mov adc (bad) mov mov add (bad) cmp sub and inc fdivr push jg fnstcw (bad) xor dec lods mov adc sub das aam cmp pop rcr test fwait jnp rcrl sbb lahf pop in adc std xchg adc add jb inc fild in xchg (bad) pop sbb rolb xchg fcoms scas jo loopne js xchg jno jo pop and cmp adc in lret (bad) xchg add (bad) dec mov mov and (bad) fcmovnbe test lret cmp ss les inc imul pop inc jge jo sahf shll (bad) insb inc jae (bad) addr16 mov push dec into add xchg je push aam stos or pop and push xor pop stos push push sbb jns or pushf jge inc cmp outsl ja cmp or outsl push push ficompl lds or movsb jecxz lea push test sbb push inc dec mov arpl or sti in cs dec lock rorl out (bad) repnz mov aas inc std and xor mov jle dec or fisttpl jo popf or sub aaa fs cld sbb test jp std cmpsb leave jno shrb adc push sbb mov jl mov mul pusha mov xchg fdivrl cmp int3 add xchg sbbl push divl lret push sbb bound push lods lret add es pop xchg cmpsl stc addl push adc adc push lods fistp dec push fisub mov orl ljmp jne mov mov xor pop push add cmp out dec lea xlat push icebp jg dec xchg ret dec cwtl mov mov gs hlt test sbb inc dec mov shlb mov xorb adc mov (bad) pop ret idivl xorl outsb pop add push (bad) sarl lods mov jne outsl rolb mov push pop prefetcht2 and sub adc aas hlt (bad) iret mov jl xor sub jp adcl int cmp jno xchg or pop mov adc lds dec or dec test xchg je adc frstor test lds mov into push jne pop int3 cli loop sti faddl loopne xlat in and movsl daa icebp adc adc js mov inc or int jge push sarb loope inc xor push (bad) cmpsb push xor outsb jne jge xchg xchg loope cmp sbb (bad) cwtl ret sbb fstl add xor pop std jl or cmpsb mov sub ret xchg mov scas mov or movsl mov cmp push out jnp repz adc ficompl mov maxps pop sub or sub jb mov mulps pop aaa (bad) ljmp mov xchg (bad) mov addr16 shrb push std cwtl dec push mov test cmp xchg fnop out imul js cwtl mov pusha pop push fsubp and mov fxch shrb jnp mov lea and mov test add mov lret pop repnz pop sub fwait ds adc inc jnp sti fs xchg push xlat mov inc jbe aam sub mov mov jmp pop in sahf in hlt enter jbe sub orb or push fisubrl in (bad) xor pop in push je cmpsb xor ret aaa fneni(8087 mov aas fdivl cwtl mov movsb mov outsl jb xchg mov cmp xchg adc pop out pop lahf push int3 lods into outsl fwait test inc icebp mov pushf jb and sbb xchg cwtl jle add shrb adc xchg divl mov pop into jmp sahf (bad) es jg mov mov subl rcll xor cmp xor cmp test adc jecxz test dec mov xchg sbb pusha pusha fdivrl lret ljmp or sub outsb xor into mov mov (bad) pop xor ljmp mov xor inc test xor xor push fdivrs (bad) std fcmove push push inc add imul cli cmpsb and jg jle dec test ljmp cmp xchg ds fs lods (bad) movl test add (bad) into jg clc lods fdivl or mov int mov mov ss popf movsl cmc dec mov scas add mov (bad) imul aaa adc stc insl (bad) mov (bad) sti mov jmp cmp leave ja stos jecxz test dec jecxz xorl js stos test cmp jns fldt outsl add or inc sbb push add into pop push jne and jecxz inc fistpll inc test pop xor mov std cmpsl imul push push cmp cmp into pop stos adcl xchg test push and adc or stc mov orb andb test cmpsl jae outsb lds das and cs push je (bad) outsl imul jb andb jns sub rclb jmp jmp mov (bad) xor mov stos cmp pop lcall jnp mov std pop movsl andb adc mov mov pop mov stos or call repz pop dec push je inc (bad) repz add adc fwait push daa sbbb test jmp pop push mov and mov fdivrl cmp rclb xchg (bad) jecxz lea pop popa mov jle mov popf push cmpsl jbe xchg mov inc cmc nop (bad) insl dec aam jmp sbb lods cmpb mov pop or (bad) pop push jmp repnz pop push push fucomp pop mov aad data16 push jge add inc icebp das or push lahf and adc data16 cmp call out dec (bad) jmp cmp pushf dec out push pop dec sbb jg mov pop sahf mov sub jb jb cmpsb adc xchg insl fwait mov stos jae (bad) sbb jle lret mov arpl push mov ja (bad) add sbb jae dec mov add loopne mov adc sub fistp repz xchg cwtl subl dec sti cs (bad) xchg add nop test fwait movsb aam sbb lret xchg (bad) cld frstor jne xchg mov sub inc pop jb push repnz repnz hlt in fs or imul push jmp aad inc vmovaps inc lahf fidivr movsl jne xchg or notl std cld adc inc vcomisd mov adc aas data16 fistpl test fs jno inc repnz cld jns ss mov mov mov xor fmulp sarl rorb sub sub aad xchg dec lods jl pop mov xlat push cmp das sub add js mov aas cmp fsubp test xor xchg (bad) push mov or add inc aad mov jmp pushf push jae sarl stc stos or xor cwtl push push enter and xlat or pop addr16 or cmovs lock fsubs daa mov lahf out test dec scas (bad) arpl arpl sub in es aaa jo jl test sbb sub xchg imul sti pop push xchg das sub aaa movsb mov es mov inc mov shll outsb pop pop mov add and dec pushf mov rcrl jns out cmp dec cmp fidivr test cltd ret sbb stos lea lcall sbb stos outsl xchg hlt xlat dec sbb sub int3 sbb popa cmp mov sbb push test jne cs ja out or jns rolb fdivrs icebp ljmp sbb shr jge xor push push and sub dec fsubr aad add dec insb shrb pop addr16 divb dec lahf ss mov imul (bad) out jnp fsubs cli in out lret pop add adc fisubrl push rclb sbb pop mov adc jns movb call bound xor push xchg push xor xor xchg pop mov or loop inc jns mov mov add jo ja,pn push mov cmpsl xor cmp add pop push dec out sbb cmp in bound mov xor loop lods jo repnz out sbb (bad) fistp (bad) dec scas sahf enter adc jns imul or jg pop inc pop scas dec and fst jmp shll imul dec push or lcall mov push fnstsw fistpll dec data16 jge and das std push aas ja aas fnsave lods push xor mov fdivrl pop cmp insl lret inc fsub test xor pop dec inc sbb addb loope loopne dec sub negl decb scas mov sub and lcall xchg adc mov shlb xchg add cmp cmpsl xchg ljmp adc or cmpsb cmp xchg mov xchg pop das into out push adc in mov dec xlat pop jne cwtl inc pop loope pop dec (bad) jg xchg adc pop (bad) jp lds add sub sub fistpll lods and lret notb push jbe push fdivrl rcrb jnp fidiv dec lods out xor sub sub cltd mov outsb cld pop jmp pop dec sti hlt je or push out jl cmp aam xchg cmp inc repz daa xor aaa iret mov rcrb push sbb js loope fisubl mov fsubr mov adc in lods jle jbe add add sbb sub inc out movl mov pop push scas enter sbb out push cmp add (bad) gs sub jae mov insl pop bound mov xor negl jecxz cmp ret addr16 (bad) mov sub in push cmp push fldcw mov inc lret fldt test es mov add cmc pop call insl ret dec adcl push or sarb testb pop stc dec repnz adc orps sbb aas sbb mov andl jge adc fsub and iret (bad) mov lock out test cmp lret dec and jb jle pushf rclb pop cs and pop or fdivl sub aad rcrl movsb stos inc int loop and insb les xchg dec xchg sbb jecxz pop jg aam mov mov ss cmpsb xchg int xchg adc push lods insl pop outsl fiadd jg sarl ret ss push push js adc mov xchg or xor mov xchg rorl pusha xor dec push stc push sahf push arpl push and push sbb sub xchg pop (bad) adc sub mov xchg pop jnp push (bad) jne pop mov jne call fcompl es dec imul push jmp sti mov dec sbb lahf enter (bad) or push (bad) fimull push into mov add gs cmp mov dec or data16 xor inc and adc pop movsl call pop push sub inc jo lahf imul lods out ja stos push icebp push push sbb cmpsl js outsb add sbb pop repnz mov sub movl (bad) cld (bad) cmp call es sbb imul jo sub div popa nop pop jnp sarl and ds xchg jno cmp sub das push fsubp xor scas ficoml cmp stos mov mov fisttpl stc push popa lret dec repnz (bad) pop mov mov inc loopne test xorl lahf cmp sub sbb gs (bad) fldcw add pop stos mov add jb push in call lock push jp jnp stos imul inc sbb cmc jns daa mov (bad) jno hlt out andl push rcl fist pop dec jbe adc icebp pop xorl mov sarb je andb jmp (bad) stc xor loopne nop mov out jge add pop clc sub imul xchg pop out cwtl xchg and inc mov int3 jo mov loopne aaa sbb inc jne (bad) (bad) aad inc jp fwait xchg mov xchg lret push iret imul jb lret pop (bad) or ljmp push sub or inc xchg arpl sub push push (bad) call hlt mov lock and cs loopne push into adc in fwait ret sub mov shlb in les mov (bad) jge out es dec test (bad) jno (bad) cmpsl (bad) pop xlat test sbb shr and inc out shl xlat or lods insl sbb cmp bound or mov xor mov inc xor movsb adc scas mov stos and ja xchg xchg repnz scas cmp loop bnd bound and (bad) pushf mov sbb and movsb lock shl test shr repz aaa out outsl dec jno mov jmp daa sbb das mov inc mov add (bad) rorl mov pop mov in cmp jge icebp into test add sahf cmpsb insb stc js fcmovnbe and sub mov mov decl mov xchg and dec mov push out jb and jne,pt push outsl hlt push enter in fcompl enter imul insl adc cmpsl pop mov jg out mov adc ret push std fdivs insl in in inc loope push lods loopne add jns and call aad inc xlat jg pop jae dec or push inc out cwtl jbe xlat push jns ret outsl mov pop js gs lock mov jmp dec sub or cltd sbb adc movsl xor inc icebp arpl popa je inc sub push inc popf xor ss (bad) jmp mov sub push push nop aas pop pop mov mov lret or adc mov jnp pop fnsave mov lcall (bad) adc pop movb mov call pop inc push or xchg adc xchg dec aas fadd jo iret lret xor and push xor inc fidivl ja int3 adc insb pop adc insb loop out dec les call cmp dec subl out mov sbb ds push ljmp pop xor rcll cmpsl divb leave mov jb push lret mov sbb mov jp xchg mov loop and lcall sbb xchg (bad) andl inc cmp cld lods inc popf push enter mov push xchg call jg cmp scas xor dec test outsl mov push xchg xchg xchg cmp (bad) mov and stos cmpsl xor xor cld mov adc rcll scas push shlb lret out dec ret mov and adc jl out add popa xor sti xor and pop sbb nop add xchg shrb (bad) iret xor cmpsl (bad) xor inc int3 add sub pusha mov out pop xor les adc out push (bad) xchg inc mov scas add adc and jne or jp test mov cmp mov pop jp (bad) mov mov adc fisttpl les bswap addr16 push clc add or clc and je inc lcall out xor inc mov xor das add or cmp add mov fdivrl xchg push cs push outsl inc jp ss adc push bound cs scas repz cmp and inc imull lea outsl loope (bad) cmc and lds push add xor decl lds pop jg inc stos push jp jge inc push ret icebp sub fnstcw fcoms fs mov and imul lahf dec (bad) pop sub inc xchg add lods xchg sbb outsb xlat sbb jle mov inc aam mov mov std rcl (bad) rorb jg or aam in daa sbb ficomp lahf inc adc mov cmp mov rolb repnz lcall repnz jmp stos mov sub mov pop or (bad) xlat mov cmp sbb aad mov imul pop jp jmp pop add (bad) jno pushw nop repz cmpsb test ret inc jecxz jno lahf pushf jo cmpsb push jl stos xor pop divb in inc stos mov xchg loope sti (bad) mov xchg cmp and daa (bad) mov xor inc scas outsb dec xor cmp je add sub sub sbb mov inc shr mov scas mov movsb lods mov xor push xlat insb jl movsb mov js xor aad gs movsl insl xchg mov push mov or or jle jnp or ficomp mov jecxz scas jle fnstsw roll sbb adc mov (bad) jno push pop mov and cmp repnz and or (bad) dec cmp sub movsl push xchg xchg and mov jmp pop or pusha mov sbb in pop adc (bad) shl push mov je out push daa loopne clc orl add ds cmp jne xor (bad) ja mov cmpsb bound out in and icebp adc jmp pop lods aad add xchg jmp sub into xor dec cld loope imul and gs mov mov lea leave mov sub daa or add mov dec xchg pop xor dec cmp (bad) push nop adc das mov pop call inc xchg daa cld and pop lock or pushf out bts cld inc mov push cmp sub jl lret mov push and arpl leave inc std cwtl xor mov adc ret lahf scas test add popa into daa push sub and dec jbe add cwtl dec jne ds adc in cmp add mov (bad) pop push push imull hlt jns ficompl test pusha adc cltd jne jmp push lcall sarl dec jecxz sub fnop bound xchg nop cmp jmp adc stc cs lahf jno int add subb fldenv mov hlt in add mov rcrb inc fcom pushf dec test dec fldl2t xor fiaddl outsl lods cld dec jbe or jne imul repnz push jge out (bad) stos xor repnz sub mov dec cmp push xchg fcoml fmul mov and pop sub dec jno fadds dec pop lcall sti push daa cmp pop rorl jp sub jnp sub std sahf mov jg pop sub mov pop cmp in xor and cmp popa pushf cmp and cltd cmc ss pop popl mov leave sbb les mov or add lock bound sub jno push xor lret int3 xor mov inc (bad) adc or jecxz adc ja cs fldcw mov mov (bad) mov sbb add jmp fisttp fldcw imul repz xchg or sub popa test cmp cwtl pop mov cmp cmp in ljmp jle jecxz mov pop jb or lret jb add (bad) faddl sub xchg (bad) clc and les mov or pop lret icebp imul add mov ss add inc sub sbb xor adc inc lcall shrb add das jg sbb add pusha push jne negb add (bad) jle jnp (bad) repnz ficoml push adc call (bad) lods add sti cmp mov jle mov addr16 sub and cmp adc enter in fcmovu mov xor or or iret neg push cmp cmp cmp push add sbb or inc push dec je ja orb outsl inc cmpsb test xchg lods inc sbb cmp arpl cltd fisttpl or mov in xor (bad) mov mov out jb jmp jmp outsl les mov outsl sub jnp jo les (bad) jp sbb xchg dec sub xor scas cmp shll addr16 push rorl outsb push pop fwait inc push (bad) and cmp js in in inc mov lds dec jne daa out xlat mov mov cmp push divb jmp aad sbb ror leave (bad) cs mov push mov add mov lods mov movsb add push mov cli icebp pop rorl lahf iret movb cmp popf cmpb lods inc lcall sbb sub adc xor arpl fisub test adc inc das push ljmp cs sar pop dec jecxz mov pop dec pop jo outsb and stos dec movsb mov inc movsb and cltd mov dec lcall movsl pop mov or add jo jo pop xchg xchg outsl mov mov and mov pop adc xchg inc mov fadd loope xor nop ds or mov inc push mov out aam shrb or fwait mov add add sbb sahf adc pop iret ss jg xlat mov out cs pop fist in jbe fwait dec dec push clc inc mov mov test push mov (bad) ja adc add mov addr16 cmp aaa xor add jbe jb pop ljmp sub dec cltd inc and jmp add aam mov fnstenv hlt add mov pmuludq insb lea notl adc insl movsl cmp and cmpsl repnz add repz ss jo lods subl out cmp dec les or mov xor push les add pop sahf xor sbbl shrb adc movsb cmpsl scas pop cmp mov addr16 je pop stos pop pusha ss jbe xlat dec repnz dec sbb and fistpll faddp jne daa rorl pop jp daa jbe pop jl repz pop cmpsb or push mov movsb jecxz loopne bound mov push mov cmp inc mov inc (bad) or bound hlt xor pop or add (bad) jmp fcomip cmp and and cmp imul xchg xchg inc jp popf sahf adc lods fdivl inc mov test aas sub push mov and dec adc pop sub cmp lcall xchg mov adc xchg push push rolb loop push sar dec adc pop mov fsubrp or dec aam push adcl push lcall shlb mov divl xchg mov and daa jl ds jge bound pop xor and lds aaa xchg mov in ret into fistpll fdivrs ss xchg inc jp lock mov fmulp fnstcw (bad) lods pop pusha pop mov loopne gs fdivp int3 dec mov arpl lods jae jl dec pop pop in imul dec in (bad) mov in push cli cmpsl imul addr16 int cltd iret sti mov cmp mov stos adc out xor push mov insb mov inc pop pushw push daa outsb (bad) and int3 cwtl mov js fimull test in add pop ja mov imul ja aaa cmpxchg adc clc or repnz fs sti xchg in ret and bound xor jbe lahf push xor ds mov xor xor adc pop inc insl lock in rcrl out (bad) or pusha jp sub push or adc pop rorl jno stc jge mov and cld enter mov inc ljmp cmp fild jne dec and les enter pushf jmp (bad) (bad) mov aaa xor mov adc cmp (bad) add jns mov and fisubr inc sbb pop push and daa add and sbb inc in push jg subl and fmul in fistl mov xchg or push add mov dec mov (bad) sbb dec popa and mov mov les les inc mov and fwait subl xor enter pop (bad) nop aad sbb rcll xor inc (bad) mov xlat inc mov es push cmpsl shrl fcomps and add and addr16 push add insl sahf mov jle and pop loopne push xchg insl ficoml aad inc inc sub out or pop repnz pop popl mov jp fstpl and add dec fidivr mov (bad) xor jb mov push dec adc (bad) mov (bad) loope inc icebp cld or in and xchg imul ja test cmp je sub cmp cmpsl jle (bad) inc xchg aas pop push jbe push cmpsb lahf ret xor dec add decl std hlt adc dec lret mov lds adc aas mov loopne mov (bad) test lock inc xchg insl mov mov xchg push mov push mov (bad) (bad) jbe mov mov push stc push pop sti push iret sbb cli fcomip fwait xchg mov mov jg cmp sbb movsl sub or add and xchg nop stos inc mov int rcl lods ja lea inc lret xor push test pop xchg movsl pop mov push fs fucom or adc pop out jo ljmp dec fs xor fmuls xchg pop pusha sub push mov arpl xor inc jne lea mov hlt cwtl mov call xor jge adc out dec jmp push (bad) std stos pop sbb adc inc sahf test cmc fwait ss pop or push cmc insb add mov sub das jmp mov fdiv mov cltd mov push and push xchg push or loope icebp out xchg pop mov aas xchg (bad) mov les inc adc pop std sbb sub add stos leave pop pop or push dec loope jg jp pop sbb das mov adc push aam test xchg cmp cmp ja add icebp sbb loopne cmpsb add cmp fistpll xchg insb ret xor jo cmpl mul sbb jmp mov jns imulb int out or or jnp out popf jle lcall repz aam jge pop mov imul divl in neg popa pop jne std xchg xchg (bad) in push out aam flds add (bad) push flds and adc (bad) aam add mov mov mov xchg insb push iret (bad) cmp into pop pushf aas jmp aam pop jge add dec pusha mov dec lods mov mov into sub mov pop movsl into addr16 inc mov add fstp mov push xor addr16 inc sub dec addl pop scas cmp and xlat sbb pop inc cmc jb sarb int push adc movsb xchg jp adc (bad) in scas insl adc sarl add jnp add out lcall sub (bad) xchg pop add cs jge lods lcall dec or daa stos lds rclb or adc lock inc negb mov test add std ja mov pop loopne jo jl sbb mov out rcl loop jo xor sbb icebp mov stos add popf hlt fsubs jp cmp fsubs mov xor sahf lcall aas push je stos pushf add loope dec inc cwtl fdiv into rclb mov jbe inc inc or add inc mov mov test cli cmp mov xlat adc stos adc inc ret mov int3 xlat cmc pop mov loop mov insb and push cmp lods cld lock out push adc in cld adc cli (bad) jbe cmp cmp push push sbb pop mov xchg push arpl ss cmpsb mov sbb xchg flds bound ret push jmp fdivl (bad) xlat popf fadds insb dec sub lahf add ror fdivrl xchg xor lret (bad) ucomiss xchg sbb pop int3 push ja mov incb aas loope out (bad) in sbb call fistpl (bad) test insl xchg movsb fcompl ja cmp pusha mov imul push icebp cmc inc call imul dec fsub aaa repnz sub fildl (bad) aad sbb sub inc clc mov dec add popa lods sti sbb fldenv fchs mov lcall sbb rolb (bad) cmp int3 fdivl mov gs ss jmp popa pop test imul add xchg (bad) (bad) and shll cmp push sub jb cmp jg ds xchg mov int test in imul push lods pop shrb mov dec ficompl fistl hlt xchg insb jp adc cmp stos xchg mov mov mov ret push popa movl (bad) jne cld dec lcall insl arpl mov mov pop imul inc mov and mov xchg xor jo cmc pop push clc push int js inc inc jp,pt mov jno xor aam push push sub or sahf mov testl jae mov sahf adc fs test cmp or mov push and cli (bad) ds inc cwtl adc addr16 or das xlat lds out sbb mov lods or cwtl sbb sti adc in xor mov fucomip out xchg and push adc mov cmp mov sbb enter adcb jle (bad) in leave jae les xchg xor fstpt mov leave idivl ficoml inc xchg dec inc lock sub xor ret sbb adcb sub cmc sbb lea fldenv jge hlt cmp jl mov xor imulb jno adc in pop mulb mov (bad) mov add loopne (bad) in jecxz push fmull and add and push jg insl mov leave in pop cmp test adc adc mov lods sahf adc fnsave in jg insl (bad) jo repnz negb xchg adc outsl jne das cltd and pop xor test jo push popa sti outsb and out insb xchg mov xor clc push jno loop mov fistp pop push dec mov inc and inc sub pop lcall fwait shlb cli push mov (bad) hlt mov jge cmp ljmp mov cmp in clc clc xlat push movsl sti (bad) (bad) cmc in mov dec add mov pop (bad) push mov push dec (bad) push dec ss nop lds inc fisubrl test adc enter js push pop cwtl ret dec mov lcall mov pop add and in movsl jns cmp ljmp scas fisttp mov arpl pop mov adcb fnop and xchg insb dec pushf nop mov sti sbb hlt out loope add push out out mov cmpb inc add pop imul jp push mov dec pop movsl sbb mov push nop pop cmc in xor pop loopne notb add adc push fldcw sar test or pusha data16 dec fcoms mov ds mov dec outsl (bad) sub sbb (bad) xor fsubr sahf push and (bad) fnstsw push push add or mov lods enter mov gs pop out jno ss or insb jmp add or sarl in xchg aad js inc rcl sbb sub mov sub std lret dec push or in cmp or lods (bad) adc lret dec mov fistpl lcall jp shrb fstpt jbe or daa fwait cmpsw in fwait jp movsl jecxz cltd inc out aam cwtl jmp and data16 stc inc in sti mov hlt xlat aam cmp movsl jae cmc daa xor sbb cmpsb adc xchg pop lret mov jmp movsl imul add ffreep cmpsb in adc lret pop mov lock xor sbb fbstp pop xchg clc call popf decb lret and enter and subl cs lcall (bad) mov xor clc popf pushl ret or inc mov idiv (bad) add dec jle xchg aad es mov jmp ja lahf fs sub lret mov insl cmp pop or (bad) data16 xchg incl mov fsubr stc loope jle mov das sahf inc cmpsb cmpsb mov imul mov push insb dec imul sbb ss das pop jo pop mov inc frndint lret repz mov imul xchg pop or pop and sub in imul inc repnz mov or enter ss add add mov mov lea addr16 jbe mov movsb cltd push (bad) push daa sbb add mov jl lahf test rolb sbb mov and pop xlat enter fmul cmp xchg push out mov xor sub out pop xchg fisttpl lea stc ljmp sarb pop roll push sti jne sbb dec xor repz rorl adc popf in ss arpl cmp enter xchg sahf xchg lcall gs ljmp dec fistpl xor icebp mov push std sbb xor and sbb mov push call xchg test cmpsl mov pop popf mov jb mov mov lods outsl xchg repz outsb fsubrs jns inc clc les inc (bad) idiv cmc xchg adc cmc jmp dec mov inc jnp ret add lods inc xchg fwait jb lea jp push lods jp mov cwtl inc sbb mov xor mov push sub add ja xlat aaa add push inc rorb out dec mov cmpsl daa push (bad) jae sbb in and loope fcoms jno adc (bad) je and or sbb out push loopne xor add insl pushf iret push (bad) iret add or fwait or sti stos test xchg fcompl cmp ss sbb xchg cmpsl inc out dec mov sbb fildll dec inc enter jmp mov xchg aaa ss loop xchg add lods repnz cmp push cmp les leave mov jp in aad je mov (bad) icebp aas pop add jne loope sub mov or cld enter (bad) xor add cmpsl cld stos jno mov pop push push add andb mov jmp jmp jge mov aad pusha cmp les push stc lods sub fldt xchg iret mov sbb clc mov sbb and add popf repnz or push push pop jns jb jecxz cltd aam in out scas out rclb data16 lods xor jns in adc jnp sub push popa (bad) std mov aad popa pop idiv xchg arpl jns sbb cmp (bad) movsb clc ficomp insb ja fldl loopne pop fcoml pop imul sbbl fisubr mov aad into es pop cli or xor subl xor push andb lods pop dec pop jae scas xchg cmp (bad) dec push out fadd dec inc rcrl out xchg leave pop cmpsl adc popa dec jno push nop adc push push cmpsb pop xor repz jno mov adc fistpll sub xchg ljmp ret rorl push addr16 out mov inc enter and push mov mov jp popa mov push dec xor and divb or xchg fistpll into xor mov imul fdivl dec jge (bad) movsl test in sub or xchg ds and insl lahf mov movsl lds mov push xor aad cli push ds xchg xor inc sub pop cli push pusha fdivrl adc mov ret outsl subl xor add aas jo mov mov pavgb fldt adc pop nop dec push jbe mov push mov and mov cmpsl jb jo mov aas std cmp xor pop scas mov inc dec add inc movsl lar xorl xchg and fdivl or or inc dec adc imul scas or shrl jnp mov dec xchg mov stc mov xchg mov test rcl test pushf ds pop mov and insb pop mov dec push fiaddl jne cmp sti mov sbb inc gs shlb movsb call jns cmp stos xor or or testb mov jno mov pop mov in insb icebp mov out mov inc dec or test out clc notb and jge shl pop sub and mov test xchg outsb add das fucomp xor xchg lcall jo jmp sub cmp pop popa sub pop or lret mov aaa rcl insl push or jmp sbb push fldl dec cmpsb xor lret adcb test shl orl mov and clc hlt push test pop in cmp (bad) fisttpll or xchg rcrl cmp aas pop cmp cmp or xor testl cld rolb nop push or sub push std mov mov and icebp pusha sub and test shrl sbb stos icebp movsb outsb hlt mov and cmp in push mov dec cmp lds clc inc imul sub cmp int3 daa popf mov xlat outsb cld lds nop add push and inc inc sub and (bad) stc jnp pushf cmp inc cli out hlt jns xchg dec data16 sub rcrb or inc dec xor jb cmc jbe push xchg push add in add les jbe roll or hlt mov push cld test stos iret imul sub aam bound cmp push pop mov pop in std (bad) leave cli int3 loop bnd rorb inc cld mov jle push adc out push clc mov jnp iret imul aad jle mov adc push (bad) rol js pop bound jbe add pop and rol ljmp cwtl dec outsl sub inc jns shll bound pop and cltd das mov pop cmp ss out fisttp cmpsl je mov add es das or test add cs fnsave cmpsl fistp (bad) sbbl and xchg out xchg push or (bad) xor pop aam ja int3 xchg aam aam mov mov inc mov loop inc lret jne divl sbb icebp aam jno and paddb fsubrs insl out cmp add lret or mov imul clc arpl inc jp mov adc subl or mov pop gs movsl or sbb pop cwtl push mov xor dec mov inc repnz xchg xchg push inc sub dec jne mov push mov mov add rcl fs test adc aad cmp test (bad) or fldenv xor es mov test gs add out fucomp in pop xchg fdivl push sahf imul mov ljmp scas ds push add jae pop jg das sub sbb mov xchg das imul add mov pop lea andnps cli out int3 (bad) (bad) lea test pop pusha jb jg lock push js mov repz xchg mov inc push add out sub and and dec and repz jle inc mov leave inc out inc xor mov and test mulb cmc in insl int3 jmp mov pusha adc jg es cld rclb popa sbb in or fadd inc pop fsubrl fsubs daa pop sub call (bad) push fcmovnb pop xor sahf movsl xorl xor clc push clc mov sbb mov mov out jbe jmp cmp pop lods sub insb std (bad) and add xor xor aaa stc pop or mov inc sti xchg inc aaa push mov sti test arpl push aam jge data16 and jle xchg xchg fwait xchg adc das subb xor cmp cmp out mov cmp dec jl inc sbb test insl dec (bad) repnz out push inc pop push arpl scas xchg adc and xor (bad) out pop (bad) lret lea mov lock push imul inc or mov ss push test sbb cltd int sub loop rolb sub aaa loope push subl fwait add push cmc adc dec pop xor out dec cwtl stc data16 in inc fwait inc xchg push sub push jo xchg pop dec ret loopne fnstsw lea push arpl (bad) in les shrb or insl ja or cmp mov push and fcomp (bad) jmp inc mov add mov les pop subl mov ds mov mov mov dec push inc inc enter mov loop jne lret cmpsb arpl adc or (bad) and call xchg bnd pop leave into mov lds adc sarl inc int3 rcrb push movsb push insl icebp lcall fwait push cmp pop mov aad inc testb and int sbb xchg hlt repnz aaa push insb fdivrp out or data16 dec rclb mov push or sbb (bad) lock shrl jge aaa int3 fidivl jle je inc mov or test dec push (bad) hlt xchg mov inc (bad) pop and sub mov fldcw nop adc mov or xchg rcr push lret in add repnz cltd jmp out gs mov jmp rolb and adc fcoms stc cmpsl lds mov jecxz sahf mov setnp outsl popl mov xchg arpl add xchg popa mov adc or sub nop adc sti sub pop pop movsb push xor shl loopne mov xor pop jg xlat sub rol dec imul lods stc pop adc sub sub imul or ficompl jns jp add lea in cwtl sarb pop aas dec pop fyl2xp1 inc lret adc movsb pop jp je mov mov aam cmc push mov sarb push fistpll gs movsb ss in out stos sub add or sub sbb inc roll pop gs sub sub push push xchg (bad) cmc adc dec fwait loopne jecxz cmp push popa or sub adc sbb xchg xor hlt mov popf aad push cs jmp lea sbb inc pushf pop adc daa je divb outsb sub ret adc adcb mov ret testl imul xchg xor jg adc out mov into sbb inc sbb les mov push clc add sub out adc roll xor sub lret aas sbb sbb and fnop adc rcr fisubl xchg sub pop in adc dec cmp (bad) daa mov (bad) repnz mov jb mov pop mov cmp adc mov aas rcrb jae mov pop adc mov push mov xchg pop icebp and mov jb mov rcrl pop sub (bad) roll fs movsl or int3 dec xor dec dec mov divl xchg arpl sbb mov stos mov and nop cwtl mov (bad) xor jb lahf and je jae mov pop js add mov fisub dec pop jne or insb sbb packssdw and and rcrl or xor arpl jo ljmp insb loop add imul cmp xlat or cmp sub sbb sub std push sbb in pop les cli mov push movsb idivb cwtl ret imul cmp cvtdq2ps cmp jne add mov dec inc loopne scas adc les mov push sbbb ss xor fisubrl mov movsb pop mov sti pop mov mov cwtl mov mov sbb push cmpsl insl mov inc scas push push sbb sti sbb ljmp fdivrs mov insl lock nop xor adc pop out fucomi jmp push cli mov or je xchg pop or adc and repnz cmp jg insb ss mov inc sbb mov xor push jnp mov ljmp popa fsubs or pop mov inc scas sbb data16 xchg (bad) aam sub mov push outsb mov aas push mov sbb inc cwtl in fdivrl and fs test js and sbb jns inc jae scas pop mov adc or ja mov add mov mov mov fstl mov hlt decl mov push dec mov (bad) out repnz jg or add xchg dec imul aas into jecxz mov mov cmp mov adc sbb mov xchg ss nop sti add fdivl fisttpl cmp insb cmpxchg mov sahf dec mov sbb xchg add inc jmp and sub inc pop inc loope jmp push lahf ja cmp dec iret and gs jb add fiadd test test movsl fidivrl inc jb scas out adc add sub dec iret aad pop mov mov or leave ret cmpsb mov test call push pop lods mov in xor je xor or xor jno cmpsl call adc shrb push das dec jb sbb nop inc jp mov ret lcall test stos jg mov in std push lock mov jg das dec hlt scas es out out fsubs rol aam dec call (bad) mov data16 (bad) stos inc hlt ljmp daa pusha sbb insb add fcmovnu add test insb gs lods jp test lds scas sub sbb sbb test and jns shll (bad) mulb fldt push mov pop inc mov out ss add jnp mov jae sub xchg sahf push jae aas mov xchg sahf loope dec test push mov push adc out cli (bad) dec mov xchg stc lds dec fwait push or lock stos into mov push jecxz sbb cs outsb dec lcall push iret ljmp daa ljmp push ret and jnp outsl int3 xchg (bad) out inc xchg les dec fdivrs lods lahf xor and pop adc mov les xchg pop jecxz add (bad) ja jnp mov inc fisubl jnp add lea or sbb stc pushf cs mov push lret adc and mov mov cmpsl aaa cmc jp mov mov stos rcr or into mov push loopne sarb xchg mov xchg inc mov push push xchg es cmpsl (bad) test adc notb sbb outsl push ljmp in ret js dec inc divl aad xchg mov jae xor in fdivrs call cld mov pop or (bad) push push xor jmp in mov flds cs movsl cmp out pop test repnz dec cld xchg or add or lods icebp out lahf stos inc enter add ja ss into mov jp out jne cld test movsb xlat es pop popa sbb andl rolb mov push je loope pop hlt pop mov lret lods popa test ret push ret test dec aaa aam xchg outsb shrb fisubrl sub xchg or dec imul pushf add jmp das sub movsl mov stos fisubl ja sbb pop xor mov loop adc fstpt cltd xor loop mov push mov adc (bad) push push test scas xchg imul sbb es push std out arpl lea lcall or insb stc dec movsb stos lock dec cmp repz xor cmp add or jbe js mov mov mov jnp fildll mov jne mov out sbb xor sub mov lods adc push mov add jmp in xchg js or dec out mov jp out jnp aam mov ret mov sbb movsl fcmovnb test xor jb xrelease pop rorl push mov lahf daa faddl jg push cwtl pop push dec or pop js (bad) repz xor fdivl mov mov stc outsb cwtl mov pop scas hlt xchg add push jbe jp popf les ss push dec inc cmp orb cs sbb xchg sahf sahf dec rorb inc lret pop cmc jmp and fmulp jns push cli jl insb xor (bad) mov sbb ds or arpl idivb or or jmp xor (bad) pop dec fisttp dec clc mov sub jnp jg popf cmp pop xor pop mov push arpl inc fldenv mov xchg mov cmp xlat jl stc pop mov out cmp sub jge sub xchg stos imul xchg jle rolb push sbb out rolb lods je lds ja test outsl out ljmp sub lcall mov jno sbb je cmp and cltd fmul jp or lret lret xor (bad) sbb push lock pop xchg decl imul stos je inc aad sbb lock jge pop in movsb es mov lock pop pop call in xchg inc outsl mov push inc fmull mov and movsb into rsm dec (bad) in inc sub cmp dec in mov push mov add fs (bad) push jns fcompl cld pop add mov dec data16 or shrb and inc gs jge in rcrb leave pop int push or jg lcall sub adc cmp roll dec enter movsl sbb cmp mov imul push sbb jle mov and stos cmp stos pop adc fwait push xchg lret sbb adc jne mov ds xor and mov stc and inc aaa lea and sti fstps divl jns push add sarl inc push sbb xchg test popa mov mov cli xor push jno or out cwtl sbb or push xor mov fdivl into inc sar sbb (bad) repz outsl mov mov mov xor adc mov sub outsb ja cmpsb sahf mov das and out xchg sub add fmulp xchg push or outsl push les ss ficoml lds inc jp cmp in or cltd insb mov mov mov (bad) lock (bad) or add leave je adc xor xchg or scas rcll cmp out dec aas je das pusha ja (bad) mov popf lahf inc roll imul stos mov mov js enter jo mul cmp sbbl xor ret out fistp fidivrl adc dec dec iret movsb pop das test out pop jo dec (bad) cmc add dec gs xor sbb jb (bad) push mov sub adc mov jg stos mov sbb push lcall jno jmp in adc inc imul dec and add std test push and adc mov pop xchg cs jbe push xor add lea fwait negl les daa mov mov mov (bad) mov xchg adc push jmp sbb xchg outsl jno outsb pop add int aam or stos jecxz jl cwtl or cmp scas push mov push cmp iretw pop into aam pop jp mov shr outsb adc iret sbb jmp mov mov inc jo inc imul inc das pushf loop (bad) xor dec fisttpl inc dec dec lcall dec les push push js mov inc push fldl inc data16 jne inc jle dec adc (bad) hlt jae lret (bad) mov (bad) push (bad) xchg shrb lds mov xchg fucom cmc fwait stos aam stc cwtl shll cmp fmull mov out lea sub test push xor mov xor jno jnp jle jae les imul xor push xchg xor xchg adc repz ja adc push fiaddl testb insb imul pop (bad) dec repz daa je iret mov jmp dec mov test xchg mov adc iret dec lock enter dec add lcall clts mov inc loop mov jl sub sahf (bad) (bad) pop sub std adc or dec scas and sub arpl daa popa ret adc adc ret adc dec push cwtl pop cmp pop mov inc popf cmp pop jmp fstpt pusha (bad) mov add mov out in push and jae pop loope sub lea jns lcall stc jne mov lahf bound inc lea loope popa and jns adc outsb and das xchg rcl sahf (bad) movsb enter add pop std js sub cmp cmc mov mov mov mov sbb jmp loope dec cmp sbb mov dec fcmove fcoml rolb (bad) fstp cmp and daa add jg divb mov xlat mov cmpsl jno ret push inc jmp imul push push or push add fist mov push and mov push leave adc pop and mov stc sub scas rolb movsl jo pop es and dec les aaa pop or popf mov mov nop dec cli in rcrl jb dec mov push add xor cs inc cmc inc pop or fcomi cmp xchg add lahf xor push dec sbb jle jl sbb neg in cmc jge scas xchg std push rcl jnp ret push hlt sbb (bad) test clc inc and xor push pop xor loopne inc adc xor (bad) mov adc stos cltd in adc sub (bad) mov sub (bad) (bad) jb cs add dec rcl in popa sarl (bad) cmc jb lret addb push dec addr16 inc cmp xchg out mov mov push xchg dec fsts scas push shr lret insb cs push mov or leave into mov andl fs push fnstsw xor std ja pop icebp add iret jne xchg push mov in xor outsb pop dec (bad) jnp and adc das cs jo int pop insb shr (bad) push pop test mov sub pusha and out and inc (bad) je dec mov push xchg jmp ds in les push mov xchg rcll dec int mov out imul add fimul sti fildll inc add (bad) sub jne cmp stos sub dec fwait inc and push imul scas jno std stc pop aaa sub add mov icebp inc pop push (bad) dec pop out ret outsl pop into and inc fstpt xchg hlt clc sarl mov (bad) push jb,pn nop mov (bad) mov lock sbb add js sub dec sub (bad) inc aaa mov and sub cmp shl lea mov cmp jmp adc mov jg lds mov fwait xchg cmpsb cmp (bad) or xlat xor cwtl xor inc dec movsl int3 jo lods mov push jle and das decb xlat add gs scas adc insb add xchg out dec mov jns xchg nop and enter xchg and out push pop call pushf test and inc fsubl xchg push (bad) test inc push ficomp add xor or jae daa mov and dec xlat push xor add insb inc xchg jb xchg in adc xor movsl push push sub mov mov insl dec and setge or xchg mov fs xchg mov pop ret int and mov add sbb mov inc sbb ss movsl in mov inc (bad) clc mov xchg mov test cmpsb mov scas aad cmpsl nop mov imull inc in data16 mov or rcll (bad) jle cmp inc jecxz push add bound xchg pop out incb test add vandnps mov punpcklwd out icebp or pop xor jb lea imul mov or (bad) aas xchg lea jle inc jo mov dec push hlt inc xor rclb (bad) js and jnp sbb xchg ficoml cmpsb lds dec xor ss xchg std fs mov lods popa (bad) mov enter add sbb pop hlt adc pusha (bad) es inc mov jne leave fs mov push add mov fstpt sbb out (bad) (bad) fwait mov stc mov mov sbb jo fcmovnbe xor jae jle scas dec dec in loope xchg mov inc rcrb or test out or pop xchg pop pushf fimull mov clc inc xchg mov xchg imul jo in in push sti xchg or mov xchg push cmp les mov xchg dec or cs cmc jne je xchg sub jns xchg pop jne sbbl mov dec jns in or mov adc outsb dec push mov jl into push push mov mov sti cmpsl push inc jg ds adc ja mov dec sahf mov mov cltd or mov mov fwait gs jne dec stos aad (bad) lret adc iret pop cmp pop mov notb fwait mov pop mov and test pop addl repz adc bound cs mov mov scas or mov out mov inc mov in cmp loope push push ss xchg pop mov push ss inc hlt hlt ret inc fistp and outsb out (bad) mov xor pop pop mov push lea or xchg aaa dec jo popa adc xchg inc add and je jp sub pop push jne outsl sub sarb mov jl dec nopl dec stos je push cmpl out fucomi mov lods (bad) in lds loope cmp cld test adc push scas jnp push jge loope xor bound or fistp xor lret mov mov xchg xchg (bad) dec es loope dec mov ja inc mov xchg pop xor xchg adc push arpl cmc insb jg (bad) and movsl daa aam add iret lods sahf ficom mov (bad) mov popf ljmp mov js jmp adc les arpl test (bad) nop push sub gs mov or cli inc imul stc shll pop xchg enter push inc iret movsb ret imul cmpsl inc inc repnz mov or cmp push dec xchg cmp icebp jo inc xor and into js scas jnp pop mov or (bad) dec push (bad) xor jne push out cmp adc into rcrl xchg mov mov mov lret sti int repz pop cwtl push lock sbb adc inc js cmpsl push add lret (bad) fcoms std pop fimul lret push cmp mov sub (bad) and cs mov xor mov icebp iret sar mov insb inc mov pop jge stos cld pop cvtps2pi aaa leave aam std xchg in lds cmp idivl cmp push ss push stos mov pop clc fs pop scas repz mov xor cmp push imul pop pusha mov cmpsl fistpl je imul in cs stos (bad) or or inc (bad) das push xchg xor inc call negl and ja mov cld jecxz cmp pop sbbb into sbb (bad) pop add push ds mov (bad) push add adc insb pushf and (bad) mov outsl pop scas out lods mov jmp push dec test cmpl xchg lods sub jns stos jne sub ret int xor and mov pushf bnd xor imul insl inc jno out mov inc inc pusha or adc sub mov mov xchg pop (bad) xor mov push inc or adc jge enter jae clc cmp and or cmp shrl mov scas or cmp in in jmp imul jno lret mov xlat mov xchg mov jecxz cmpsl gs divl add jo pop inc call and push rclb (bad) jae lcall push nop fadd or jns int3 lds jle push mov ror rcll xchg fdivrp and pop int3 cmc es inc fstpl jnp out cli sahf pop outsl add imul pop loop jmp push ja rcrb pop sbb stos (bad) sti jb or xchg les push aad mov les (bad) xchg fsubrl fs bnd or fldt jns jle jle inc cmp adc sbb dec sub pop clc repz cli aaa mov cmp lret mov and mov divb mov sub aam adc cs cmpsb sub cmpsb pushf cmp sbb jecxz repz mov cltd test xchg mov pop cmp xlat mov (bad) inc (bad) mov dec jl loope call cli sbb in dec jge pusha divb and fadds mov in push out inc (bad) out inc (bad) fstpt mov arpl cmpsl mov mov inc (bad) dec divb fcmovu xor lret sub (bad) les call jg cmp scas stos leave adc jg mov xor jae or fneni(8087 (bad) fimul mov jnp aaa push sbb repz xchg sbb test scas sub rclb mov (bad) mov inc dec mov mov push repnz lret xchg add sbb push xchg cwtl push je pop add ret and cmp adc mov lret fidivr outsb adc fildl movsb inc sub mov (bad) xchg ret inc test popf insl inc mov stc (bad) int3 mov (bad) jl stos add inc cmp push push icebp mov inc lea inc aad mov mov std mov sarb adc cmp test stos cmpsb jg and push cmp xchg lea mov mull inc cmp xchg dec jbe xor fstpt sahf or (bad) rcrl psraw outsb push inc in mov mov jnp push or (bad) data16 cmpl push add add dec sbb pop imul imull dec cld mov inc adc out loop cmp ss push repnz mov sub outsb (bad) cwtl xchg (bad) scas arpl sub jg outsl stos sub divl inc loopne cmc faddl stc sub jnp in incl popa sbb test inc xchg ret scas push adc stc sub insl and sbb adc xchg mov mov push sub push jno js or inc mov mov pusha int ret shrb outsb adc ror mov lahf aas aas outsl xchg inc push pop dec adc gs lret cmp cltd sbb fiadd int3 cs inc mov fwait cmpsb dec pushf ja push pop pop mov je test jg jp add shll mov lcall xor pop pop xchg iret cmp xchg xlat push push (bad) sub outsb jb mov out daa adc adc cs mov xchg (bad) aad cwtl test pop mov xchg add gs movsb push stos dec adc ret inc dec pusha jne in sub xchg (bad) fsubl cmpl sub sbb mov xor mov xchg sub out push (bad) leave push jle popa shrb je jl sub push pop call ljmp rcl rclb jno xorl cwtl xchg mov sbb scas scas imul iret ds or xor xor out cmp movsb inc push pop cmpsb jmp push add push lock nop adc je jns xchg jo xlat sub cmp jge mov notb xchg inc push jecxz (bad) mov out test cmp ret pop ret lds xlat jp mov sub cmp sub push aas insl iret pop rcrl mov add frstor loopne stc cmp mov mov xchg push outsl ss add pop mov fsubrp (bad) sti push into in mov mov xor test mov inc (bad) mov push fcomip push dec push es std movb aad jg cwtl idiv push mov xor ret leave out cmp pop sub adc js jb xchg inc shrl cwtl cli pop sub ljmp xor cmp in movsb sbb clc mov lret xorb dec sar fs es cwtl pop ds imul push dec inc jnp out mov jge push rorl outsl push outsl test push int3 jmp inc insb dec adc sub test imul mov gs push adc pop mov fwait out (bad) rcrb fwait mov pushf sbb mov mov lods scas cmp clc inc sti and pop movsb out enter add fbld mov mov test test pop push cwtl sbb pop xchg xchg inc out fwait cmpsb cld js adc lea inc movsb jge int3 call cs (bad) push jae cmp dec mov (bad) mov mov or gs inc mov mov mov or movsl xchg push push lds (bad) fsubrs (bad) mov xchg loopne add ret icebp sub cmpb jmp sub cmp lea (bad) dec int sub mov mov or aam push dec sub cmp sti dec shrb cmc cli js dec daa fwait jno lret ds movsb mov inc push xchg dec (bad) mov cmp (bad) popf call arpl mov mul sahf jle imul inc or dec jecxz lcall (bad) fcoms push push into mov jg loope cmpsl dec ljmp into imul push leave inc add loope (bad) scas sbb imul aad cmp nop adc xor jge,pn mov add push add movsb sub sahf mov jns fistpll pop iret mov leave gs test xor jb xor fidivrl stos test outsl out pop movsb mov cwtl and add lea and in bnd dec movsl in aaa subl popf dec in and jns je pop je loope icebp and push aas jg mov jge fs insb js add mov push mov scas iret cmp dec int out int3 (bad) movl add dec ja insl jae jnp loopne push sbb clc sub arpl nop mov add xor add pusha push nop je sbb xor (bad) pop sub mov cld mov arpl inc jmp sahf popa xor or push jb and scas xchg cmpsl addr16 lds mov test rcl cmp notb jp arpl iret int ljmp adc jb xchg fwait mov and sub mov pop or bswap mov (bad) ljmp rcrb xchg pop adc sbb cs inc neg repz push or mov daa out xchg mov stos test adcb pushf mov popf out jnp fsubr xor fnstenv mov push add or push inc jp push mov ds push pop mov mov mov loope movb push cltd sbb sub or loope pop push adc test fidivl test cmp xchg xor scas jmp xor and and push jp test pusha std mov js lret mov loope push repnz testl (bad) dec sbb pusha dec adc mov mov jge inc icebp iret adc incb inc pop imul mov lods add and gs cmc in cmp mov jno cwtl mov or sti lcall sbb fwait pop add sbb pop pop mov pop xchg jp popa enter popa xchg pop jns mov mov or popa stc cmpl loop hlt outsl mov xor (bad) and mov lcall shr aam mov inc mov mov daa and sub scas sbbl cld add cmpsl jno jno pop pusha cld cmc aas bound xchg stos mov sbb jb mov or cmp adc dec out (bad) mov orl xchg fwait jecxz xchg mov imul or push cmpsb push (bad) xor cld sahf dec addr16 imul (bad) (bad) hlt cmp cmp sbb push movsb out test in stos leave pop (bad) jle pop pop dec daa call inc mov xchg in pop push mov (bad) adc add inc push addb (bad) sbb popa repz sub js xorl push std pop lcall insb mov add mov in inc jb inc fwait jl push jl xor aaa xchg mov xchg inc mov rclb mov hlt xor mov lock sbb (bad) xchg push dec jmp icebp into push xchg bound adc cmp loopne push cli adc loope pop fisttp insb adc xchg sub xor ss cwtl jecxz mov jge insb loope test fwait sub fcompl mov je adc mov (bad) push or test out xchg ljmp inc cs fidivl adc fwait xchg add fstpt mov js mov cmpsl stos repz mov mov pop sub lret inc nop stc int3 in outsb jge inc mov jmp xchg test dec pop ret mov enter ds push pushf fs lahf dec push or imul lahf sub cmpsb jg add xor aad pop mov outsb add faddl (bad) repnz mov pushf inc adc jp rorl icebp (bad) mov into faddl adc pop fwait jne in out or or inc test aad jo mov mov lods dec push movsl das or sub mov inc les xchg jmp test or or cld push and popf cmp in lcall loopew dec mov testb mov fidiv fimul stos (bad) ja jb (bad) adc test mov adc aad xor jmp and xor mov inc cmp cmp sbb into lods jne fistpl cltd test lahf mov push mov xchg cmpsl aad sti jle adc nop jno leave test add fbld in adc pop mov add dec adc pop dec (bad) jmp fidiv sbb or (bad) fsubrs insb mov repnz mov out cmp movsb pop lods jo mov cmp dec scas push push cmp rcll popf xorl dec mov mov mov pop mov mov stos fld cmp jg mov aaa imul push dec xchg fisttpl push cs xor and xor outsl mov mov mov or std int mov add pop iret pop mov or sub mov pop mov sbb pop and pusha push dec (bad) mov mov iret push xor jno adc shr mov stos push pusha outsb ja repz cli sbb cmpsb xlat and mov arpl or push xchg and sbb mov in fwait lret inc das adc push outsb pop cmpsl xchg jg xchg add xor mov pop mov and popa lods cmp jl xlat aad dec mov lea push sub out mov frstor sbb add insb jae or xchg mov and fadds dec cld sbb mov inc or xor pop adc lret or xchg je jmp cmp stos dec (bad) ljmp shrl jp or (bad) jbe push lock cli sub (bad) mov cmc xchg sub add aas mov inc xor xor xchg xor sub lcall inc mov jl data16 xchg scas incb mov lds jo in sbb inc mov add hlt and jmp xorl mov dec fwait int3 push add movsl psrlw addr16 mov das es fisub lret call pop push sbb xchg mov mov test iret adc adc mov xlat sbb shrl ret (bad) push call push aas or mov mov cmp dec in pop sub mov and jns outsl hlt cli out lock sbb mov in jmp pop adc cmp lret out mov lods push inc or (bad) dec add inc mov inc sahf and xor fisubr sub push add and or es lock fyl2xp1 shr int3 gs cmp stc mov aad repnz mov push int fcomps mov fisubl jnp insl or andl ret lock aam (bad) mov cltd loopne fldt adc xor out push push (bad) in cmp sarl pushl mov or je sub pushf dec or loopne mov or inc add cli repz jl push scas dec cld push fs (bad) ja es loop add jp loope dec fisttpl mov adc dec adc mov inc out add push ret testl fs imul (bad) adc and pop cwtl lds mov scas xorl sti ret and (bad) js push sbb ficompl jbe mov clc das cmp xor scas xchg into inc xchg pop gs xor push pop mov cmpsl mov sti cld jne dec push inc inc ret xchg pop mov call out popa scas test mov add sbbb leave les pop mov push xchg ja push inc (bad) cmp dec ljmp ret push mov xor pop hlt dec cmp iret jecxz,pt mov mov mov fldcw mov and jns adc popl cmp leave add js mov adc loope cmpsl popa in jp bound mov push sti pop insb aaa cmp test jae shlb call mov mov or add adc mov cmp repnz push jns jnp jge push mov pop mov pop les test mov lods pusha mov idivb fist out ret jno jle,pt push cmp negb or mov xor mov gs or jl test lods mov out jg mov lods cmp inc mov or imul imul pop cld jle mov aas in or mov inc (bad) js shl fistp pop jg mov pop sti xchg xchg mov push xor mov iret pop cmc or cmp adc in dec pop dec cmp int3 (bad) mov cmp add test inc xchg add int3 xchg mov add shrb ret aad sub mov sub outsl or popf loop xor jmp mov xor bt movsl (bad) mov adc xchg push mov in push out (bad) mov popa out pop insb test mov sbb dec sbb sahf mov aas cwtl lret mov push int gs mov sub sbb dec mov sub mov mov cmp adc push xchg or ret out pop jo repz adc call jge out mov dec fcmovu pop dec popf out mov dec test mov jb and jl jae and js xchg les sahf mov sbb push push xchg xchg xor in add fdivrl orps pop fadds xorb adc push cmc lahf mov ss ljmp push mov ret sub xlat inc mov push (bad) fs jno,pt sbbb jmp mov imul mov in iret pop out daa cmp movsl arpl sahf mov enter outsl jp std mov jmp insb pushf fsubrs mov push je imul mov sub jno bound mov outsl std stc scas repnz add lret stc ss jge or push pop ljmp dec mov out cmp mov push jno cli jmp push and insl adc clc adc nop pushf mov push scas xchg sbb in pop cmp stos andl in mov xor mov sbb mov outsl pop mov popa and out xchg lds xchg sub xchg dec mov add bound xlat sub sub push inc cmp jnp inc aam xchg mov sbb inc pop mov push int3 hlt rcrl fcomi cmp xchg or aaa ret push popa jmp push aas xor pop sbb gs je (bad) (bad) push and sti es dec jae mov push mov mov adc mov inc (bad) lcall dec adc in repz lcall lds mov outsb arpl pusha in icebp mov psubw icebp inc mov dec loope hlt sbb scas cld fldenv sbb out xchg out mov pop xlat mov xor jecxz push fcomps mov jns sbb (bad) adc aaa sbb push mov stc ljmp and add mov sti xchg cmp xchg inc (bad) (bad) (bad) and test xchg add add pop leave inc jmp les adc call mov (bad) iret push xor mov sti or fdivrs sti in adc (bad) fwait cmp decl pop jl mov push fistpll pop (bad) xor (bad) inc xchg dec or in aas cmp dec jge clc (bad) (bad) dec sub stos sbb iret fcom (bad) aaa jecxz stos xchg fcoml or repnz rcrl fwait call data16 (bad) outsb ja fcompl lock xor insl ss mov pop shl mov jp iret bound loop pushf add test mov ss jno mov outsl cmp jno arpl outsb xchg add les or in mov (bad) repnz std mov cmp jae stc rorb mov js dec loope divb push pop cmp int imul mov ljmp xchg pushf out int mov (bad) lret test xchg sbb jne dec jmp or imul mov pop dec and sbb mov sub pop mov mov movl inc cmp ljmp pusha inc adc inc mov xchg mov and mov inc xor inc sbb inc mov lods sti cwtl pop xor out sbb outsl jne arpl notb cmpsb pop lret mov xchg iret mov decb ljmp jbe mov push xor shrl xor mov lock in loopne and pop pushf arpl mov sub inc lock add fwait jge lahf xchg xchg and or andps data16 subl mov jbe push mov or cmpl andl pop ret repnz adc fdivrs ret sahf and add ljmp js,pt iret mov (bad) cmp js hlt or xor mov add fadd int3 pop ret adcl mov lahf nop inc in mov aad fst cmp imul pop in fcomp fldcw cs xchg and pop push push test lea mov inc push mov ja pop push jnp xchg outsb repnz push sti mov mov sbb jl push and mov movsl clc mov add inc xchg sub test xchg cmp lahf cmp cld int sub (bad) dec aam out icebp xchg insb jbe adc leave mov jmp mov lock mov lds loop jno in jl dec pop fidivl dec mov movsl ss jp jo jne mov out xchg aam jno sbb frstor and push mov jae iret into fadds ss (bad) and adc dec inc sub int3 (bad) or std dec cli (bad) fisubr push fwait mov mov push cld mov ss dec mov leave loope xor mov adc faddp pushl jne (bad) pop push test out mov loopne and jbe jo or add adc inc dec popf inc addr16 out imul dec popa out push jne xchg ljmp stos cld aaa jnp adc into or or xchg mov dec cld outsl jp push fistpl push push mov cmp xor jb bound scas inc mov inc xchg xchg cmp cmpsl fist pop fidiv cwtl push lret adc gs shld sbb clc cltd pop and lret push iret sbb loope sub cmp stos dec add sub outsl insb or dec ret jmp cmp dec xor or mov bound jae inc nop cmp sbb ljmp (bad) jae push dec push popf xchg xchg pop sub push dec dec sub hlt lret and jae fdivr (bad) int popa cltd fimul in fldl jg pusha das (bad) icebp insb cmpsb ljmp ds leave je jle insb (bad) pop xchg push jmp jp test dec lahf cli int3 pop dec (bad) insl dec (bad) fidiv adc shrb xchg jne aaa mov das adc (bad) cbtw fistpll mov bound jmp push add xchg pushf sti ja,pn add and mov push mov jb and popa inc iret jge cmp mov or andl in inc sarl sub out subb lea mov inc lds push jmp cld jbe cltd fbstp xchg popa xor cltd aaa xchg xchg mov sub repz sbb mulps push cmp int mov hlt bound sbb int3 ror scas repz or fldl ret inc ds nop pop jo test xlat imul ficompl pushf int3 or stc enter add inc js les sbb pop mov xchg dec push mov and pusha or into sbbl aas lcall lret test dec outsb into lods xor sbb (bad) ficom lods ret gs adc rcrb sbb and fistp xor in cmp add out cmpsb cmp das test jns bound stos mov inc xor push cmovl jo jnp pop outsb (bad) mov pop dec call pop pop jecxz hlt cmp fidivl adc mov sub ds and sbb adc and and jno leave adc or dec inc xchg movsl push stos or pop inc push xlat push sti in inc (bad) (bad) loopne,pn ja fildll jmp aad push rcl mov push inc mov in add daa and mov (bad) roll push mov int3 movsb aad ja movsb arpl xchg mov ret dec sbb or push fxtract dec lea adc and sbb pushf mov test pusha hlt push ja mov xor push inc pop lret and mov lds aam notl (bad) ljmp sbb mov pop stos std cmp sbb push sbb sub sub ja mov xchg inc int3 mov iret stos xor fdivrl adc add aam aam negb cmpsl std enter sub adc pop movl daa push sahf push js push sub jnp pop add push mov sarl xchg or cmp lret inc std in divl popa (bad) lret sti push cmpsb sbb inc inc fidivr mov popf jl mov (bad) sub pushf xor je cmpsl dec cli rclb pop push xchg imul out imul (bad) xor lcall test xorl daa push jae dec fiaddl xchg ret cltd jge daa xchg pop cmpsb sbb push (bad) int push stos or movsl inc jge (bad) stos test jmp imul jge test add insb pushf add dec jb xor and outsl nop enter inc sub pop movsl xchg imul jecxz inc pusha and dec jg lret fnsave add inc iret ret in mov jecxz int3 fnstenv ds bound inc xchg ljmp test jecxz sahf pop notl cwtl (bad) call ljmp cmp xor pop xchg lea insb fldenv mov add and mov scas sub add ss rorb inc enter aaa fwait push push lods jecxz test das (bad) lahf stos xchg in movsb aas cwtl xor adc sbb sbb lock repnz sub lret xor ljmp popf sub lahf testb pusha mov sub xor incl xchg pop popl aad inc inc ret push add mov frstor mov jne xchg add xor sub add and bound cmpsw mov pop and adc push mov lret sbb popa mov mov repz cmp icebp adc ds iret div add (bad) js mov mov insl out dec insb or jmp stc data16 mov sbb aad mov or idivl inc in bound jl dec xchg sbb pop out or repz dec ljmp xor jbe in stos add or pop cwtl in dec pop movsl (bad) in out shrb push loop xchg push adc add add mov xor cmp mov (bad) ds jbe mov icebp jb mov (bad) fmull ret push or add xor in into bound in mov push cmpsl pop jge jge and sahf jae pop pushf add addl imulb imul aaa dec push xor cli fistl cltd (bad) push jge,pt call mov push fdivrl pushf scas cmp mov dec push clc mov pusha arpl xchg sbbl cmpb cli cld xchg cld cld pop push cmp (bad) xor xchg pop sub push ja fnstenv pop push mov imul mulb (bad) hlt repz pop nop fimull and xor movsb and cs jp sub insb fcomps dec sti mov inc jle lret (bad) xchg mov add sbbl mov leave aas sahf cmp pushf rorl push and add jae sub xorb inc push (bad) pop insb int3 jmp adc in std jns and out jle pushf mov dec outsb lods cmp adc jmp xchg sub jo mov xchg mov ss add insb sub ficomp mov loope mov inc test movsl aad xor insl cmp adc (bad) call jne xor lret dec mov fstpt inc jecxz lretw add lock fistl mov addl jecxz nop in and add cmp (bad) das xor int push sti cmp xchg mov and fistp add add lock and sar dec lods (bad) jmp fs sub shll mov icebp ret imull cltd inc (bad) icebp popf loopne hlt fstpt cmp cmp in adc test gs and cmc test mov xor lret ret pop lret mov dec pop sbb sub mov sbb pop mov jno cmp cmpsb xchg ucomiss mov lret xchg lcall cs cltd out xchg and jae je fwait stos cmp xchg and cmp rol pop pop (bad) ljmp sub lods movsb inc std out fs jo inc xor ret xchg cmp enter mov xor (bad) das idivb mov dec jbe lock rcl jmp ds fwait sub jecxz adc dec mov out mov out xchg cmp adc loop cmpsb or lods addr16 sbb out shll outsl mov cli ficomp (bad) fs aas insb bound xor sub xchg cmp dec mov mov push imul into pop stc and mov insl add jns (bad) clc aas inc or xchg lods cmp sbb jge rcrl je les int dec cmp and loopne jno inc add cmp pop or mov inc es push aad add sub add push jns cmp daa dec ljmp movsl jb xor out push mov dec or mov aam movsb nop inc cmp (bad) xor fiaddl fcoms mov ja leave (bad) fmull add pop insb adc popf jnp mov push pop shll inc bound push or loop sarl flds je mov dec popf add dec pop (bad) jge sbb cli sbb test mov cmpsb mov scas fs (bad) jo fcom lock cmpsb fwait pop (bad) nop movsl push add jo (bad) or sub pop sub or mov sbb pop movsl pop nop (bad) push scas sbb push les or pushf sti pop push jle sub clc in inc and mov not sbb pop or xor xlat xor adc or xor xor mov stc inc push mov dec fldt sbbl or jbe outsb cld add adc ret cmp mov fimull (bad) loop jl and adc jbe jbe cmpsl (bad) push iret mov mov jbe jnp or xor push pop repnz pop mov inc dec sbb fsubs cwtl je lods pop dec lret cmp add jae insl mov mov sti cmp fstpl push jne inc cmp dec mov iret repnz push xchg stos inc jo pop jmp push jne mov test or push xchg scas cmp cmpsl lods lret adc xchg dec xor push cmc aas (bad) jbe cld dec dec out mov push fldenv jg lods insb and jo dec push rolb lea inc fiadd lret in mov nop push es ss insl add pushf adc in ror jne jmp mov mov add mov inc aad add jbe popa and dec cmp das mov fidivr and mov les xchg push sbb push xor sub adc test push cmp sub sbb fisttp push inc pushf in xor adc xchg lea sub cmp inc pop pushl mov and jge cmpsb dec xchg mov cli cwtl pusha std mov xchg xchg rcr call dec rorb pop lret fldenv sub xorl fidivr lock outsl pop mov fs jp push inc clc (bad) int call mov stos and fisubrl xlat es out in jno out popa dec rcll xor int push or dec dec adc movsb pop hlt sbb dec lahf inc cmp out cli inc mov xchg insb shr cmp cmpl dec and mov dec jne fstps stos fmull (bad) xlat xor mov xchg push call or repnz add scas je ja jne int xor or insl jne mov stos out sbb sub add aam mov mov dec nop (bad) arpl push outsl mov mov test jne lock ja push (bad) fs cmp push adc (bad) push hlt int sbb sbb hlt mov adc outsl add ret dec mov int mov ja imul push mov ds lds jge jg std inc xchg cmp sahf ja xor add bound (bad) mov out imul ret mov cmp pop cwtl aas pop pushf in outsl loopne nop jbe loopne lret fwait jb lret (bad) mov addr16 xlat dec xlat lods test andl jp ja sub in inc mov cmpsl lds pop ljmp push mov shlb inc xchg cmp mov xchg sub pop mov mov sub mov jecxz and mov jl sub add push pop insl mov daa aaa into and fsubrs sbb mov insb sub xor (bad) imul jb mov sbb test sbb loopne pop ja mov (bad) mov lcall fs rcl xor push and mov in fcmovu in mov adc cmp cmp iret xchg xchg test rclb mov adc jg inc lret lds in xor movsb je out test mov add data16 call pop sub loopne mov outsl les movsb aaa (bad) aam std lahf pop pop outsb insb repz test add mov imul push jo aam cmp or xchg int3 dec sub push fidivr jle pushf lahf movsb js outsl mov fisub bnd in inc pop add fisttp sub (bad) pop addr16 rcrl or scas sarl sbbb dec and add (bad) dec mov in adc xor stc dec loope cwtl shr fstpl and aam xchg popa adc adc adc fnstcw pushf out or jmp aaa xchg gs cmp loop pop xlat (bad) call pop and mov inc test cmp scas pop loop add pop aaa xchg int and ss push pusha fmul xchg pop mov dec mov test outsb push repnz (bad) subb ret or inc xchg out stos xlat dec pop pusha fidiv push mov dec mov pushf mov cltd pusha cwtl pop mov scas mov and push sar movsl jmp inc jno xchg sbb repnz jbe mov pushl nop mov jne (bad) lret ret jecxz inc dec pop addr16 push cmp in pop movsb jmp lahf cmp pushf cli test xlat call jp addl (bad) ret push xchg std mov js (bad) (bad) in pop xor adc hlt fild mov push movsl icebp popa js bound ss push inc jo sbb fidivr sub jae lahf mov ret cmp cmpsb test or push fidivl mov test nop lahf jp aam jae test data16 stos out sti (bad) cli gs pushf fimull test xor sub jbe in lret sbb adc aad pop in mov fldenv jae sti fs jl scas insb out xchg xchg in ss ljmp xchg xlat or aas es pusha sbb in loopne lahf clc lods sub xor in repz cmp addl mov rcrl rclb mov stos and cmp repz add outsl (bad) fcomip lahf test mov mov adc gs mov ret fisttp ja pop outsl stc and cmp push jo and jne addb insl pop stos push inc or call dec mov xor insb in fsubrs pop lods xor lds mov les int3 sub clc mov adc jp add (bad) sbb xor rcrb dec (bad) sub xchg mov ss lods mov pop jl add ret mov jmp xor aam inc xchg lea inc and ret add int3 mov mov ret dec loop (bad) jb lea xchg outsb add shlb and std mov or cmp inc xor inc inc cmp dec and insb in and icebp push dec cmc xorl pop (bad) out imull add enter hlt enter cld push mov aam popf sbb int dec ffree cmpsl in adc mov mov (bad) xor (bad) rclb mov jns iret loopne jle sbb jnp pop imul je je fs sub dec js cli xchg ret or sti and sub or outsb (bad) inc xchg jecxz test inc lahf test mov jbe js push pop push dec imul pop push jb movsb scas lds popf jl loope jmp sub stc nop push jne pop mov test xor sarl repz sub xor rolb xor mov add hlt xorl and daa jle mov mov int3 dec push and xor inc rorl dec adcl frndint rcrb mov loope push push dec cmpsb cli and mov xchg mov mov lods pusha call ds pop (bad) ja dec jne dec push jmp mov mov cmp aaa xchg cs mov cli mov jl adc mov aaa push push mov mov orl cmp movsl lock loopne idivb sarb in icebp je push adc popf pop stc adc pop mov push arpl jno add inc mov jae aam xchg sbb pop notl outsl stos push xchg (bad) (bad) loopne fucomip sbb and sahf jbe pop stos jmp sbb aad sbb cmpsb aad inc inc outsl or lcall inc shr jmp and sbb mov jno push loopne ret and cmp dec cmpsb xchg arpl idiv xchg jae lret jle cltd adc mov dec in lahf mov insb jns cmp mov sub ljmp sub js jne push insb push loop test cmp pop push enter ret dec xchg or insl pop mov aad adc mov add mov push dec mov lods js pop xor ss mov push sar fildl adc arpl out xchg call jecxz add mov es aaa cs pop mov pop imulb mov jns or inc and movsl xchg ss ret push mov mov fucomp les hlt cmpsb or lods and adc fbld nop sbb call dec xchg inc enter bound cltd push ds les fwait loop sbb jo popf mov (bad) mov fwait (bad) jecxz js adc cli pop (bad) xlat mov xor sahf sar mov pop pusha roll (bad) pushl cli (bad) jg dec (bad) lret (bad) sbb movsb cs adc sub mov mov adc mov test dec sti lcall pop loope jnp sub stc icebp or mov je jp add insb pop xchg push or (bad) xor lcall sub xchg xchg cltd adc lock daa push movsl inc mulb shll fnop (bad) daa rolb mov out push mov js and inc sbb imul push (bad) dec enter ret int add in pushf jmp dec mov out negl lret lods cmp sqrtps nop push inc negl xchg mov repz (bad) jns and je and push xor jle jnp mov cwtl dec sarl pop dec sarl xor mov jmp les in es jno shr lcall jecxz dec add int or push jl mov inc sbb xchg lret pop xor das es mov insl cmpsl pushf sub mov mov shl (bad) mov cltd out xchg jge or jge stc ret pop (bad) push pop dec dec xor or fdivs iret fbstp mov add sti cld imul pusha and jnp (bad) lods daa movsl imul dec jle jge,pt xchg or fdivrl mov int3 out out mov scas shlb xchg mov es fidivr in jbe in xor (bad) mov or mov addr16 mov scas ret in es mov jle mov pop fnstenv cmpl jle inc repz rclb mul sbb lret dec insb gs int3 xor jae lret sub inc jg push insl push (bad) and dec mov mov mov mov xchg and or loop pusha cmp iret icebp aaa jb xor cmp addb ret xor enter xchg jno pop xor outsl cmpsb mov repz das mov cmp fwait mov push mov inc adc sbb mov xchg (bad) std lea in test ss cmp inc sbb dec fisubr orb lods adc add ljmp dec or daa out decb sub mov and push fnop cmp scas pop lret repnz mov add scas lahf pop je inc stos or sbb shr (bad) jg imul pop pop gs jecxz and lret cmp cmpsl add flds or pop add and mov sub dec mov scas mov adc fadds roll xlat push push sbb push fmull inc mov mov jmp inc jmp inc lret jno mov pop mov inc add and shlb sbb adc pop add cmpsl inc dec fimull ret daa pushf les outsb dec or cld out rcr pop jp js mov repnz mov fisubr jnp fs pop sub rorb fstps xchg sbb and lods int jp repnz push pop test in fidivrl (bad) ja and mov sbb mov lahf leave addl gs mov cmpsb sbb mov es in pop dec pop in sub out sbb mov dec in test dec mov mov mov pop fs lock out ret ds dec dec mov or (bad) fs jns nop movsb loopne pop or push outsb (bad) xchg xchg ret movsl rcrb aaa mov fdivrs add aaa adc push xor or fistpl lahf pushf (bad) flds movsb shrb sbb xchg popa (bad) les jb dec sub jmp jae fwait js fwait inc fisttp in (bad) xor movsb lcall sbbl mov sbb jbe cmpsb lcall ret in adc aam rolb aas lock enter cmc xchg mov jbe jno mov mov and leave fsubr adc adcl je push in insl sbb dec pushf jmp inc and jno cmp ret cmp aaa call sti out ret rol insb notb pop iret pushf pop sub (bad) outsl nop lods jb int and lock and test mov push adc xchg mov dec (bad) mov sbb inc push (bad) mov int mov xchg ret inc mov push xchg lock repz fadds mov repz pop cs sbb pop cmp (bad) aam mov xchg dec addr16 cmp xor sbb sahf xchg nop push js int mov add lds imul xchg decl pop jmp adc sub mov push mov and xchg xchg sahf nop mov push dec mov ljmp fistpll cmp sub (bad) mov add andb in pop mov adc cltd aaa mov push mov (bad) dec in inc push cli or pusha mov or (bad) movsb rorl mov (bad) jl enter std sbb ret repnz jge cmp adc dec jp inc sub adc stos fldenv mov mov cmp mov dec and nop popf cltd dec sbb iret add pusha jge add xor sbb push sahf jmp outsb cmp xor and repz cld lea (bad) jb pop jno test repz call outsl dec adc mov dec pop and sbb inc insb (bad) inc or pop arpl xor (bad) mov pop add mov jg stos mov adc adc and call inc or das fadd popf cld stc imul shrl das mov loop pop sbb out and sub mov in cmc leave orl out mov int jo pop enter xchg icebp movsb add sbb icebp int3 and pop xchg sub dec mov call mov lcall mov dec fistp int3 pop sub inc push jb pop xor cltd insl leave sbb in (bad) mov arpl lcall cmp adc pop cwtl nop fwait pushw push arpl inc pop sarb xchg je daa ret inc cmpsb pop outsl lahf push add (bad) shlb add mov hlt cwtl ds mov fistpll gs (bad) pop push jge add inc jno mov ret dec arpl cltd mov icebp mov or pop inc dec dec inc sbb or inc dec sbb push bnd lea lods jne cmp aas ret lea xor jecxz rcrl ficomp dec or aam cmp push jae mov adc or mov and jnp std pop sub adc (bad) je xor test add (bad) in inc pop cmpsl pushf adc movsb enter aad out xchg xlat mov and jae jle and xchg push sahf dec lcall fsqrt in mov push mov or (bad) (bad) out sub push movd sbb add cmp cmovle (bad) (bad) and mov ret xchg out movsb mov das inc aam orl sti push xor ljmp cmpsl imul stos rorl icebp int3 fcmovnu sbb xchg fmul lods jb inc adc aad popa lods out mov je cmp sahf jnp xor push fprem1 inc adc lea test popa mov jmp jae bound jmp add mov sub js sub cmp js mov (bad) pop (bad) adc fimul pop xchg pop lods lahf dec aaa stos bound mov jnp and mov rolb adc mov xor into into push pop sub push lea insl or call fcomip pop pop push lds xor mov xor xor mov xchg rclb lret sti inc aad test aaa test sub out (bad) outsl aaa push test orl or sbb cmp int3 imul pop les stc cli fild lret pusha jae mov out jns cli lahf push (bad) (bad) mull push out aad mov or in add sub cli in lds (bad) iret enter insl xchg xor sahf ficomp addr16 das or adc fs push inc cmp rolb ds jne lahf popf mov mov push mov xchg xlat and rcr lcall add mov lods jb jg out jnp ja (bad) addr16 (bad) cli mov sti sub lds out cmpsl pop pusha dec test insl add repz mov scas ret inc rorb cmp sub mov cmp sub pop inc jle int3 loope xchg insb (bad) int3 add es sbb int nop push enter stc sahf mov sub cmp push mov jmp fdivr dec pop fdivrs (bad) aam das lea jge fsubr jge sub movsb and adc mov cmp (bad) push ljmp fs xchg xor cmp test insb cmp sbb je mov xchg ss ret pop add dec adc jge (bad) lahf cwtl mov jne in push adc and ja inc push dec cmpsl ja insb push add xor scas xor xor rorl cmpsb add cmp cmpsb leave int imul cwtl sub out aad pushf adc and out jb mov (bad) xor or icebp outsb xor int cmp in xlat pop in inc inc mov in (bad) roll cmpsl setp mov aam inc movb mov and dec mov add pop sub add std pusha adc mov jne inc nop int ffree dec test xchg sub (bad) push jmp mov sahf pop cmp leave push and add cltd (bad) gs das mov popf aaa push mov add adc push cmp insl mov outsl lea sub int3 jg jae mov test ds repz leave lcall sbb stc mov ss (bad) mul je not push dec loopne scas leave push and push std test popf fwait adc lods sbb aam mov mov lcall movsb pop mov jmp out cmpl mov push nop dec inc xchg xorl jecxz fcoml sub ret mov hlt xor notl and mov pop jle mov cld (bad) push scas imul mov push mov jae and push jecxz mov xorl inc mov rep mov hlt cmp in in lods or xor (bad) dec pop xor pop (bad) pop mov mov aaa test (bad) stc mov std jo call ret adc xor jbe cmp and push push xchg sub (bad) addr16 subl and adc imul mov cmp popf mov xor in mov lea pop int3 sti xor jl mov lret jp into cmc daa stc adc push outsl jns xor dec mov les dec mov jp in mov sti inc jnp test (bad) push mov dec aas mov push mov (bad) and into fdivrs mov mov cmp idivb sti int3 sub fist lcall clc ret (bad) leave gs into loope jg outsl fnclex sub out shlb adc sahf pop xor sbb lock lds jmp xchg push push jb pop out xchg mov sub jle jns out mov mov lea adc fsubrs xor sub hlt or stc (bad) data16 mov inc push out fild jbe arpl dec (bad) add dec pop jmp cmp out mov mov gs push mov and sub jae mov shr insb aad arpl mov sub inc daa stos inc sub subl insb xchg dec dec test mov or mov jbe mov mov jp add test pop mov test dec add sti mov mov add push add and lds cmp das in outsb rcll aad xchg shr imull lahf push cs (bad) ss (bad) lea push mov xchg out imul lahf (bad) mov add adc xor stc push fldcw aam xchg insb lods sti push pop (bad) jb into inc sbb movsl rcll (bad) xor nop insl dec push dec inc cltd sub les xor mov sahf pop mov inc inc jg inc (bad) iret fdivl adc adc jbe mov loope movsl mov inc jle stos jp sbb shr cmpl mov mov adc mov divl push ret fadds sbb (bad) push mov or int and jae rolb fcompl movsb pop jmp mov out imul rclb adc sub mov pop aaa imul cs dec or ljmp mov or cltd enter clc addr16 in sub mov test or fstpl ss inc sbb cmp loopne les aas inc test xor aas jecxz pop or pusha push test outsl xchg xchg shll cmp mov sub imul mov aad jmp fcmovne inc cwtl in pop cmp mov lods pop iret std pop in std push ret out inc dec fwait in mov fcomp adc jge mov mov inc outsb repnz mov inc fidiv mov stos (bad) cmp stos inc cmp jno pop mov cmp add xchg fild inc aas mov lea bound and loopne popa xchg push movsb push push push lret mov adc shld jns jmp adc pop repnz loop mov adc add ret movsl cmpsl in mov das jp arpl test test cltd xchg sbb sti xchg in inc out jecxz jle cmp mov jle cmp push add je sbb icebp and out and pop push pop popa jo popf cltd call lahf js cmp xor push in cmpsb add inc lret psrlw push divb sti pop bound in ljmp cltd adc testb pop ret cmp inc mov das mov adc rorb adc or add mov dec and dec imul xor mov rcr sub cmpsb jno cmp enter push cmpsl add test loopne xor jg subl inc mov lahf insb mov imul add repz add xor rcr xchg and fs into sbb xor rcrl mov pop fsubs jo add lret mov lea int3 leave cmpsl cmp (bad) pop jbe sub xchg jmp push sub jnp push pop sbb in jb fcompl es mov cmp add adc scas neg arpl pop in mov rcrl jae pop mov movq lea pop les jp or imul xlat mov or cld je cwtl fsubrl jmp xchg clc xchg mov pop sub movsb ficom jno pop dec jp xchg es out jne cmp pushf xor or cmp pusha mov inc mov xchg int outsl (bad) push dec (bad) xor cmpsl jo or jnp pop std outsl xor enter push data16 nop mov mov fildl jae jl testl movsb mov inc sbb lret inc and rcr sti orl cmp test sub ljmp cwtl stos cmp jle mov (bad) aas fwait or pop cltd and daa add ss xor push xchg icebp mov hlt xor pushf out adc push aam icebp (bad) lds data16 or mov mov aam divb jle xor test push pop jns mov out mov or mov xor addr16 push inc mov add rclb jnp jbe push stos inc (bad) stc icebp lcall mov jle mov lock push roll imul pop inc inc mov mov les out int3 push xor bound cmp js mov mov or daa and jae sub stos jg pop or pop repz inc pop adc call popa out lea outsl or jp adc mov das cltd fdivrl pop pop sbb sub enter in insl and aam and mov jb xchg out ljmp call dec mov pop repz xchg imul repnz mov xor (bad) ficom inc adc mov cmpsl mov push cmp sub scas mov movsb sbb mov adc jbe not push outsl addr16 push sahf xor or adc mov cmpl sub or int scas fiaddl xor cmpsb xchg inc leave out pop repnz cmp xchg and push es push pop call call call mov scas call mov rcrb inc sub outsl mov xor mov repz inc jo sub into mov mov jp mov leave testl push pop cmp jae cmp cmp mov add push cmp push adc out sub push fucomp lretw sub dec sbb cmp pop hlt pop jne and into jno mov lcall sti (bad) cmp ret or pop xor xchg sahf mov jo call (bad) fild push outsb xchg jno in enter fcoms lea sub popf jl or nop nop push outsb push jno ja and cmc stos fwait out add xchg aam les inc push out sbb push popa xchg push test ljmp lret aas add mov mov les sahf sub inc push lods and pop lea push (bad) fwait jmp dec lret push sub inc lcall movsl jne add test push cs fstl loopne imulw cmp divb in lret enter (bad) xchg or (bad) jg int3 stos (bad) hlt and xchg mov inc and enter pop inc int pop aad jge outsl popf in aad fdivr push mov shl cmp mov fnstcw pusha les mov lds push cld inc rcl mov pop mov xor sbb mov cwtl sub fdivr xor in repnz in lcall icebp stc mov icebp addr16 cmp add icebp addr16 scas adc pop gs cwtl sbb sub and negb ljmp and sub lock lcall repz (bad) loopne adc mov aas cmp sub roll xlat push mov pop stos add cmp sbb pusha add addr16 sbbl pop adc frstor movsb jp jae cmp lods jmp pop imul aaa mov sbb mov and (bad) and je pop xlat sarl nop arpl inc dec in repz roll mov stc inc cs xor push repz repnz andl out mov cmp data16 sub sarb test in push rcrl jmp xchg cwtl fimul sub int3 (bad) imul mov xor push in inc (bad) pushf icebp adc ret cld jno (bad) sbbb outsb lret popf push test scas inc push push fcomps inc fsubrs pop loope mov mov js or sbb xlat int insb fist jle,pn pop jmp cmp mov stc iret aad aaa xor adc jg mov loop push in adc pop or and jmp jg push out inc (bad) sub insb push push rcll sub xchg rcl jbe jnp lods outsb ret dec bound push (bad) xor test dec adc sbb out pusha mov cmp lcall push subb xor sub jns in dec jecxz mov xchg and (bad) imul xor or xchg dec aaa adc adc pusha push and xor ss push inc add jmp addl fs popa inc mov jmp or mov xchg (bad) aad dec dec mov enter ja ja movsl cmp xor rolb insl andl mov mov sti movsb push das xchg mov out add cmpsb (bad) and add add cs je mov sbb fcmovnu and imul xchg subl rcrl pop lock fistl or sbb pop dec outsb jmp mov fsts and sbb scas insl mov sbb fsts or shrl inc push xor imul sub xor out daa mov call sti xchg fcomp jae pop (bad) sti movsl ret inc sbb jp movsl std pop jnp push in in negb mov loope pushf or call xchg add aaa push stos mov push cmp dec cs out ret pusha lret out lahf ret in outsl push mov and (bad) add sbb add ret repnz jb xchg or or das mov pop loope icebp and adcl jecxz test pop and flds mov rcll aas in push push mov pop sarl (bad) aas sub cmp lret movl int3 jle aam jp leave or test adc in cmpsl jg insb mov xchg decb stos sub inc mov push xor push loope adc xchg rorl scas pop push lods popl and inc jl,pt inc mov cmp pop inc pop pop mov enter movsl cmp jle inc inc sub mov inc cvtpi2ps ss add lcall pop mov pop (bad) ja dec pop or (bad) and mulb insl hlt bound outsl test adc je ss pop and and loop shlb aas insb mov aaa cmc lret inc (bad) mov xchg movsb pop push lods mov xor dec sbb pop (bad) test repz push sub pop gs push jbe pop push mov (bad) (bad) xor rol push xchg fisubrl cmpsl fwait ds (bad) xor aas and mov add aad xchg mov out in pop je sub mov or dec rolb pop movsl iret and es popf mov pop fisttp push inc push sub push mov sbb dec outsl dec (bad) pop in adc scas xchg lds lret sahf scas mov pop adc sarl shrl dec mov outsb add mov inc fmull jae pop and popf orl mov mov or ja mov mov push mov add jle dec icebp dec es or add push mov (bad) adcl test adc sub dec cld sbb testl mov fimul cmc push sub mov inc cli aas fidiv inc mulb inc repnz lahf dec mov mov fidivrl (bad) or dec jp adc mov xor ds cmp es push insl dec pop xchg lcall dec ljmp add stos jns adc mov xchg repz stos dec mov or movsl mov pop mov lcall scas gs (bad) test pop aaa cwtl ja lea (bad) or sub iret movsb les xor fist movsb test scas inc pop sub adc ret push (bad) cmp js icebp (bad) pusha and in jo push push fisttpll aam jne stc dec lds outsl push sbbl int shrl xchg leave inc icebp cmpsb push inc inc call xor fs mov cmp cmp loope scas jl jp in lret mov cwtl sub rcr add fdivp repz push xor sub test leave stos sub xchg aaa and enter push push mov add mov (bad) into scas mov ja addr16 push sbbb sbb xor xchg cmp jle das or cltd lsl lret pop je xor add ja mov test push test push sub sahf out (bad) clc (bad) fistl adc lock shrl mov (bad) push jg clc cltd sar (bad) dec negb and jne cmp mov iret mov adc cld aam out dec popa xchg add out mov (bad) fxch cmpsb adc mov mov ljmp call mov cmp insl push test mov dec or mov dec push mov addl test and mov inc gs test xor inc mov js cli push out xchg mov ds push mov and pop push into sub xchg or mov or sub mov in out popa mov add hlt loop jecxz (bad) into ret mov pop xchg into add mov mov add pop dec bswap add pop push cmp js push cltd iret (bad) (bad) inc or dec fildl mov test adc mov jbe and (bad) jl dec shll pushf mov stos push cltd hlt fwait inc mov (bad) xor mov scas mov mov js stos dec jl lods inc jle push sbb idivb mov mov in pop lcall or movsl addr16 es sbb mov outsl mov xor aaa in cli into pop nop mov orb dec fcmovbe scas xchg sub mov dec jecxz (bad) lret (bad) mov das xchg cmp addl and pop mov push stos jno cmpsb cwtl mov xor (bad) xor jno jle jge push xor dec lret flds cld or or int out imul dec icebp push ljmp and sbb mov cli mov jbe gs push inc imul (bad) in jae pop bound add hlt roll cmp mov rcrl out mov lods pop mov sbb and sub mov enter dec ss pop int rcl dec jle iret jmp inc cmp or push rclb jle xchg jbe insl aad xor dec xchg lods loopne,pt dec cld or push vxorps sub ret sub add out mov adc sbb inc xorb and adc xor test push xor out xor int3 jmp and stos (bad) fildl out mov test aad pop mov push add push mov and (bad) outsb xor cmpsl or pop push lahf popa repz outsl and mov fbld out and insl stos test push aas nop rolb test es (bad) push icebp bnd insb dec loopne ds int in mov add xchg cmpsl es out and dec xor cli mov push jb add out mov lret movsl pop mov leave ljmp inc dec jb jle outsb out ss aaa jae adc test into dec inc ss xor (bad) or (bad) xor ja xlat push inc jns jmp mov mov ss loope xor mov cli fdivl cwtl ja sahf cld push scas mov enter sbb lods jno push jg inc addr16 cltd ret pop cli lahf lock mov lods pop scas out repz in add scas pushf dec push adc cmp xorl cmpsb (bad) jmp icebp cmp jo adc mov or out out jnp or in cld add pop xor (bad) cmp xchg jae aas mov insb outsb in jne lods xor sub fnop scas inc shrb in (bad) je aaa xor push or aaa ss cmp out inc push jle mov cmp in sub insl push mov push int3 insl pop push adc add inc or leave xchg mov jmp push jle xor sub cmp xchg daa test insb cld jns push stos sub dec in and mov push imul jmp stos xchg mov jbe or jle ficomp inc int push sub lret xor push xchg mov (bad) addr16 sahf xchg dec std jle and jg or lret inc and adc lds frstor push shlw adc gs insl jmp jns xor sahf and inc imul dec roll push inc mov jne fsubs andl sbb pop or mov in fs aas dec add mov mov sbb mov sbb or gs cmpsl fiaddl cmp je inc inc jne je je or insb cmp pop lods add mov xor mov aam mov imul pop push xchg (bad) push xor cmpsl ret mov loop ret cs and (bad) or scas ret mull dec and xor ss mov movsb data16 xchg sub jbe push dec push popf js mov dec cld fdivs xchg add pop cs dec mov test (bad) shrl pop add jne xor inc xchg rcrb mov scas in lea mov ficomp mov xchg repnz test dec mov dec mov test xchg sahf mov test loopne pop in add mov jp aad jne xor out ret cld fldcw not inc lret cld inc pop pop add divl pop xlat dec xor test ss adc pop (bad) mov stos nop enter repz test fs cmp xchg bnd add stc test movl inc mov push dec out xchg cmp fwait mov inc xchg test inc xchg iret lods rclb jl gs add jnp js loopne icebp or (bad) cmp jl pop out xchg inc test push push leave jle push popf lock jae (bad) ds push dec rsqrtps test add dec dec adc loopne and data16 fldl loop sub fsubp es daa negb sub pop inc sub pop pushf out gs data16 shl (bad) jle cltd xchg add mov int ret dec lds and sarb add outsl movsb mov pop xor xchg enter mov pop sub mov iret aaa pop pop das inc mul add sub clc dec orl cmp pusha divb sub into loopne test push movsb cmpsb mov sbb pop push stc sub hlt jecxz mov cwtl adc lahf daa inc inc data16 fwait sbb cltd out mov cld psrlq pop hlt mov std sbb popa and pop pushf repz or add fcmovnb bnd mov cmpsb icebp pop sbb cltd xchg sub rcrl sub lods icebp lcall adc loop ja (bad) dec lods sub nop cmp in cwtl push mov cmp fstpt mov ja jo inc into push ljmp (bad) fistp xchg imul mov lock stos in call adc lret sub xchg mov lock dec cmc leave inc inc adc jecxz movsb shl int3 test sbb iret jecxz adc mov push push xorl cwtl loope fidivrl sbb mov cmp popa push mov sub int3 pop cmp inc or and or pop mov cld mov push imul repz outsl mov jbe imul inc iret xchg repz inc jb mov xchg push xor cs pop outsb and xchg sub cmp out cmpsl iret outsb ja xchg jb adc inc icebp lock aas js ret imul sub out jl jmp jne aam or rcrl mov jl mov sbb mov hlt cmp ljmp test fistpll push mov leave push or out mov push sbb ja clc cmpb gs inc or popf sahf test cli xchg sbb (bad) push sub arpl sbb inc and (bad) push cs bound fldenv int3 mov jns dec adc dec adc xchg or test outsb cli xor inc inc cld mov sub fiadd rcr xor pop adc repnz jge bound aad outsb or inc lahf int3 lcall lea lea push jbe test in xchg xchg or aaa scas stos mov fisubrl (bad) cmc fstpl mov scas and xchg jecxz adc roll nop scas and and shr sbb out mov in lret xchg xchg jmp insl imul std push shll shr cmp test jmp xchg xor xchg clc jmp dec cmp rcrl arpl les mov cmc insb inc mov xchg inc dec nop push xchg into fdiv rclb je shrb in mov pop adc in and xchg fimul call push (bad) sub jb enter scas lock adc inc loope xchg imul mov lret (bad) mov and mov pop pop dec push and and out xchg sarl mov sahf stc shll or add sub pop cwtl and dec inc fsub stc xchg adc out mov mov adc repz or inc fxch pusha inc pop (bad) lods aas inc pop es pop xchg mov cmp pop mov sbb mov int test xor pop out test pusha jle loopne stos dec out xchg push jge pop int3 (bad) lods xlat dec mov push inc jp sahf and ljmp adc dec push or adc outsl in fmul out bound add cmp and out add adc and xchg nop push imul fcompl cmovbe int and pop enter cmp dec loope clc mov stc cmp shrb adc xchg loopne fs out pushl sbb adc push xchg sub and xchg gs (bad) (bad) fmull cs xchg mov ss test xor dec loope jg jnp in sub sub aaa sti (bad) stc pusha cmpsb ret in sbb xlat dec into inc pop and push in arpl push ja testb jg xor add and pushf aas lret addr16 mov sbb mov push shlb in mov sub sahf and mov nop jnp inc (bad) xchg dec loop das addr16 fwait imul mov sub inc pop imul roll xchg mov std (bad) stc scas or adc xchg bound inc sbb insl shrl pop (bad) jae sub and bnd int3 adc mov sbb lret mov lods ret mov jnp imul divl inc jmp push pop mov mov or and invd mov jp pop pusha test insb repnz loop out jl jo fisubr cmpsb or pop (bad) in bound test jmp xchg aad je data16 jg sti sbb cmpsb sbb in int adc or adc jg add lods (bad) mov jmp xlat xlat shlb and nop (bad) jecxz adc in stos dec inc or sub imul iret out push xor inc (bad) lret pop out push std (bad) mov cmc mov les jbe pop pusha lcall arpl pop dec test mov inc pop popf rcrl xchg xor pop adc jmp xor (bad) cmp loope mov dec outsl lcall adc imul ds (bad) aas sub and leave int icebp or popf cmp sub stos xchg fdivrl loopne mov xchg shll aad jns add pop stc inc nop repz fisubl xchg dec inc or (bad) fldenv jae inc sub inc sahf push dec movsl cmp mov insb aad pop push mov add lahf dec lds hlt lcall fildll mov cs jp ja mov pusha shrb test nop sahf fdiv je mov push pop xor mov mov sbb jge jnp or pop or fisttpl mov pop (bad) xlat cmp xchg aam jne ja adc arpl sbb inc fisttp sahf (bad) repnz pop inc jmp sub ficoml sub fadds ds cmp in clc aas jbe sbb aaa xchg push lds xchg and add mov fisubl sub xor xchg lret add popa idivl pop mov lds or add outsl test rcll das incb xor add sub je pusha cmovno fcoms lcall sbb push pop jo imul jp push jno push jge or stos bound in into rcrb outsl movsb shrb dec jns mov lahf test push sub hlt mov sarb xlat push popf dec call inc js pop jo mov int adc test std ret cmp xor (bad) in cmpsb cmp inc push jmp enter addr16 xor or or mov and push mov xchg jge jge movsl inc push xchg pop dec movsb je push cmc out subb push daa push sbb lret jmp xchg jae in std repz iret ret je call xor je add dec je out nop daa aam mov sahf imul lock push sub or adc jno xchg mov repz out sub cmp decb xchg outsb data16 stc es dec jo fcmovnbe and cld ret ljmp pop adc jbe push stos mov push in sub push lcall lret inc inc adc xor sub and lahf cmpsl test inc or lret call sti inc loope lock jmp test jns leave test jmp or (bad) xchg sbb cld jecxz sub xchg out push outsl pop jno xor repz mov fnsave mov push je and push lret je daa and repnz xor pop jbe pop jmp sub xlat pusha in orb mov les and mov aam ja out sub in xchg mov mov cmpsb daa mov lea mov adc pop shll (bad) mov sub mov sbb aad bound or sub mov push jle push mov lahf pushf aam sbb bound xchg lods jo loopne aam mov fimull out icebp int3 (bad) stos insb flds test inc fs xor std adc testl leave add (bad) adc ljmp xchg cmpsl daa xor pushf fisttpl mov repz pop xchg or in vandnps lret sub and stos fisttpll dec push jns cmp push xchg mov les insb push sub inc (bad) pop pop mov xor arpl mov xchg mov push adc mov mov mov mov jne ss fcom popa xor fdivl or cmp xchg push inc dec xor jae mov push rcrb sbbb stc fldln2 pop mov xchg mov push push sbb push imul sahf cld adc cmp mov jb pop js (bad) in xor sbb cs or xor into fdivp mov mov stos push (bad) push int3 lret test dec jo aad fxch loop stos pop stos dec jb adc mov movsb jnp ds xchg fistp dec and jp or inc mov stc sub sbb out sahf and call sub (bad) dec cmpsl ret sub xchg (bad) lret outsb rcrl (bad) das pop rcrl xor popa jo and out imul stos cmp inc pop ret jne add das adc jmp jnp pushf ja jle je jb xchg addr16 jno sub loopne inc cmpsl out insl cltd scas test pop lock jl repz inc ss pop inc cld push (bad) in test int mov jb pop add int cmpsb test (bad) jnp mov add mov lea leave add fldl push push adc inc and mov ss repz movsl mov or ds and test call add out (bad) cltd rclb jle sub mov cmp add or in rclb mov negb dec lock xor and pusha push lea jmp dec inc push div mov fsts or ret aaa test idivb jge (bad) das bound (bad) shrb out jae or test sub cld pop std fbstp nop es cli xor mov pop (bad) (bad) push sub mov call mov in inc jae and mov cmp xchg pop ljmp lods push outsb cmp pop sub sbb lea jae es ja icebp xor pusha inc and xor mov sbb jns and scas lea or fldt mov mov sar je dec dec scas in push add daa lods fnstsw test xchg out sbb lock pop pop jae push popa data16 push xor (bad) mov movsb hlt imul testl xor lock inc xchg repnz xchg pop enter adc mov or imull mov dec jle sbb or lcall sahf and mov cmc pop cmp pop movb jmp enter mov sbb inc outsb in fbstp pop pop outsl mov mov jg popa aam clc fstl cwtl lret mov rep cmp sub loope adc and into adc loopne fisttpll xchg insb ret jnp cmc adc xlat enter (bad) vcomiss es int3 xchg in (bad) mull cmp clc pushf mov stc mov sub cmpsl stos push dec fistl lds mov pop insl jne jp pop int cmp mov dec out inc ret enter (bad) int3 or pop stos into ja fs xchg popa adc push loop push ljmp mov cli xor repz (bad) stos dec lock jg fxch lock mov int3 cmc ret sbb dec xor mov push orl pop (bad) sbb stc dec scas test insb jns push lcall sbb ss adc sti ret pop adc stc pushl or (bad) lcall jo pop push pop dec add fs lock adc int pop into test fisub pop mov lods mov mov cmp mov xlat jl or inc mov mov pop (bad) sub insl sarb addr16 popf fldl (bad) cmp (bad) jg cmc adc jle adc fsts test imul enter into sbb xchg pop fisttpll or dec out xchg movsb int3 dec mov inc mov ret push pop cs ret imul loopne xchg jns adc mov ret sbb inc popa pop sub xor sbb pop or test ret mov sbb push jecxz sub cmp insb cwtl jmp jecxz jbe jmp stc push jb or mov in mov stos loopne out mov lds mov aam jno fdivrs (bad) lret popf dec push mov cmp pop jg outsb xor xchg pop incb lret inc lret cmp inc enter and gs inc movsl xor xlat jno int mov jle int3 dec sbb xchg sub (bad) inc or cmpsl out imul mov inc or movsl in xchg in pop dec test (bad) mov rorb xchg ret mov pop sub (bad) cltd (bad) fsubrs stos in rorb dec cmpsb cs lods push mov cmp sub mov pop dec stos sbb dec sbb mov aad mov xchg pushw stos push mov jne pusha mov jecxz cmpsb clc xchg fsts hlt inc call stc pop imul movsl cmp inc (bad) ss (bad) ja,pt movsb add xchg mov pop mov and ljmp xor cmpsb out inc fwait mov push dec ds push cmp push aaa imul xor (bad) adc sub mov mov pop stc lcall xchg stos jbe pop call ja sbb or cli cltd jo sbb lods fidivl mov (bad) inc sub arpl int xchg std int3 mov mov push in dec aaa push aas dec mov mov clc jb loop arpl scas addr16 cmc les sbb hlt mov sbb sbb pop mov cltd test in insl int popf repz in cltd inc dec fldcw and dec jge hlt mov sbb loop test push or and imul cmc jmp out dec and mov jl push cmp pusha ret jbe push add mov mov xchg lret ficomp data16 scas dec and movsl sarb xlat or push rcr cmp iret cmc imul pop mov sub adc movsb adc adc mov mov aas cmp lock (bad) add addr16 pop loop cmp xor push xor jle push bound jp andb mov pop popf ja pushf and (bad) mov ss into cs xor xor (bad) inc fdivrs inc out sbb sub repz mov dec aas jae addr16 xor or inc das movsl loopne test add hlt (bad) sbb xor fstl cmp cmpsb mov scas jb or pop mov icebp push cmpl or inc test fsubrl push movb pop lea out (bad) repz sbb pop mov sti jo xchg inc addl addl mov mov sbb aad adc add add mov xor sub jno (bad) test xchg add test aas jp fidivrl lds mov cwtl push jne (bad) in mov popl rclb (bad) mov push xchg or xchg xor (bad) repnz cld sbb and xchg sub ja insl add sbb das cmpsl mov or sbb je sub decl mov adc cwtl xor outsb les add aaa cwtl (bad) das cmpsb ds (bad) lret imul add pop popf out hlt dec cmp (bad) sub enter xchg out mov cmpsl pushf push mov jl jmp pop inc mov pop mov jb xchg push pop sbb arpl mov int3 push in (bad) enter mov imul dec adc clc scas add sub loop push push call pop mov (bad) (bad) fdivrs xchg jg daa mov mov xchg pop in dec stos fldl je jno dec fildll dec jg incl out xchg mov (bad) dec int3 pop push sub js das dec mov pop rol inc push or rol xchg pop xchg aad xor adc or nop dec xorb (bad) xlat pop arpl sub jl lcall push lods cld pop xchg adc movsb pop sub nop popf inc jo push orl addl add mov or rclb dec sbb mov mov lods call test mov adc insl sarb or sbb and dec ja test loope (bad) adc inc pop (bad) incl or fwait xor lret stos xlat out xor mov or ss lahf push daa std imul push mov into push cmp fimull sbb out fisubr and sarb mov dec push es xchg dec sbb dec xchg sub jne (bad) out push loope xor add out pusha movsl dec and out mov mov dec and (bad) imul mov sti fidiv push push lcall lret test stos add rdmsr dec loopne sub fcmovnbe inc adc sub and jecxz and dec dec or mov xor mov stc adc sub les jmp mov lahf jne nop (bad) adc mov dec dec inc idivb adc stc mov and loopne fwait cmpsl pop mov es (bad) xchg test lds (bad) int icebp loope scas jg nop jmp mov sub outsb ja and inc popf je sahf mov jo xchg repz roll fildl jmp mov dec das das shr dec int3 cmpsl add mov nop pop push in lahf rolb daa jecxz sahf into inc das mov mov mov mov ljmp into stos loope dec push dec pop mov xchg insb arpl stos add aas cmp pop sarb aad push outsb loope mov and pop push enter mov xor lahf push das mov xchg and inc pop or ret fs xor fidivrl inc dec sub test jle test sbb mov sti and or pop or jp outsl test and inc sti jge in rol fsts pushw inc loopne sub mov (bad) xchg lcall jecxz mov fwait std adc cli in call mov (bad) loop push sub sbb popf cmp dec jns push sub jge div movsb cmp jp cli mov jmp jp mov cld mov (bad) and inc out dec arpl out xor jg sub and jecxz inc js imul jp out test sarb fxch mulb sbb jp push adc loop adc cmpb icebp ds sarl ret test pop dec fwait mov lret fild sub pushf dec ja sub aas inc (bad) sti fdivrs cmp adc testl ja jno mov and popa imul cmp es iret jp lods jo xor fmull inc stos cmpsl pushf sbb xchg icebp lods adc insl aam int xor loope std aad sahf dec movsl cmp pop jno and (bad) or xor xchg dec aas fwait adc jecxz jg lock repnz sub mov mov sbb lcall xchg add sub mov add icebp mov xchg mov xchg outsl sub in scas xchg dec idivl notl add push inc mov pop push lods jbe enter les stc nop add iret fwait mov fisub fcomps sahf push lcall inc add in mov or xor jl jo cmpsl aad xor pushf adc test sub jne int or or stos cmc jne in out inc movb roll pop xor mov dec pop cli jg mov fnstcw fild xor xchg pop test sbb or cmp and dec jo push pop test add add xor mov cmp cmpsb pop rcll aad clc nop cmp inc or xor shll shll dec inc jnp push or push fistpll jo push clc cli gs sahf adc call in hlt mov dec std out fsubrl sbbb notb inc or dec mov cmp add xchg push lods movsb ja fsubl arpl pop sar iret imul aaa shr hlt cmpsb xor stos popf add sbb mov in push pop iret aam icebp roll loop mov sbb dec stos scas ss xchg jmp xchg fsts loope aaa imull cmc cmp add cmp mov push add pop cmp adc push mov jge add and adc and shrb push adc popf push mov pop add mov xorl icebp xor pop mov addb scas mov push mov leave mov mov sbb (bad) ja shll outsl cltd cwtl jp dec ret imul lret ret inc pusha mov xchg cmp ss xor jo out pop aad mov xor test mov inc test cmp cmp imull addr16 mov fwait and jbe mov aad sbb into cltd mov xsha256 cmpsb push cld cmp lea (bad) push sub cmp jmp imul mov add pop ficompl cltd pop mov and xlat fisttpll inc imul lods dec fs inc nop jl icebp and loop out xchg jle out xchg or push ficom cwtl xchg rolb stos lea xchg inc mov cmp loop sti jmp cmp popf add and scas sub cmp pop pop loope mov out and mov add js mov mov pop push dec in xor adc add or nop rorl or push popl mov test pop inc loopne jno fdivrl pushl jno into js mov bound orl mov push push sub adc ljmp fild hlt add inc xor inc and dec mov jg mov cmpsb leave jnp jae scas xor sarl fldpi push test insb insl sbb out lods mov ficoml bound pop cmc add pop push add sub out or shr lahf cltd call sbb sbb daa push mov xlat popa or popf xchg xor leave es fwait ljmp scas cmp out shr repnz or outsl pop daa add and sub dec jp aaa dec xchg pop outsb loop ficomp mov daa and push add xor mov inc xchg adc push loopne xor insb decb sbb psllq cld rcl fstl in ret mov data16 jbe dec xchg inc push stos andl sahf loope lcall mov jg mov jae inc jge jl sbb ror inc pushl shrb sbb stc mov pop push mov mov xchg lcall lods repz mov pop in ud2 imulb or negb sti je add push aaa (bad) jmp and data16 addr16 xor in mov adc and jg mov mov mov xchg fsubl jle cmp insb xchg lods mull cmp xor imul sahf rcrb mov and xchg hlt (bad) xchg (bad) push dec shlb or and sbb (bad) mov int3 out into es hlt adc jl mov sahf inc and das mov add sbb push sub and pop lds xor or ficom mov lcall or cmp mov call xchg fcompl sbb jno iret inc (bad) adc add outsb stc sti fwait in inc dec mov push lret push sbb add (bad) mov push mov mov pop loopne ds pop gs inc sbb fdivp pop mov push push incb popf test pop enter cmpl add fldt or inc dec arpl mov aam xor sti inc jmp or jl push leave sbb push imul sbbb scas pushf push inc int3 leave data16 push xor or sbb xchg popa je sbb mov xchg (bad) jl mov pop sbb mov cmp mov pusha and mov push cltd leave dec push xchg out xor push pusha jmp cmc push (bad) ljmp inc and or dec xchg inc jne (bad) cmp pop in (bad) arpl push xchg cmp or ficom cmp jo ja cs test adc frstor pop pop push lods sti mov jb movsb cmpsb xchg sbb daa repz stos jnp out mov xor daa pop popa fdiv adc repnz cmpsl push sub and mov pop jmp data16 inc stos and cmpsb stos xchg sbb aas loope cmp jp jae push sbb pop fbstp imul andl push cmc jle (bad) rcrl xor and jnp cmp sub mov adc test or mov dec xchg jnp iret sbb jecxz dec je cmp das lret dec mov fidivrl mov call repnz push sub cld jp xor fist mov jne out push addb sbb dec jg push cmpsl test punpckhdq lahf out sbb loop and xor lcall dec jg test sub repz nop into mov mov stos xor push loop push lret fldcw (bad) fidiv add xchg ret inc xor xchg inc xor addr16 mov (bad) push movsb call mov loop mov pop sahf dec test ds inc mov and cmpsl into mov gs or jg std (bad) cmp int3 or jnp inc rclb dec lahf dec dec add test cmp into xor xchg (bad) imul ja mov sahf mov dec pop inc xchg loope push scas adc (bad) pusha scas lds lods and fcmovne cmp scas fsubp pop loope dec dec inc sub pop fldt pop insl (bad) pop push dec sti xchg push addr16 orps mov push jnp jge addr16 add xchg arpl repnz cmp ja ss leave cmp add insb add lock dec add lods adc subb mov dec dec pop dec jno dec testl loope lods mov test insl sub adc addr16 pop xor in pop jbe cmp inc mov xor das mov sub xor jmp add cmp (bad) pop leave xchg repnz pop je adc lds pushf outsb sti push ret mov int sub es fisttpl pusha sbb cmp cmc (bad) pushf sub add add movsl push aas cmp mov jecxz icebp fnop (bad) fildll jbe dec fsub push jmp outsb xchg (bad) shrl push popa (bad) mov xchg pop sub add sbb mov into xchg into cmp leave mov outsb mov jp lret loop mov test lret mov aas movsb shll outsl inc dec mov jg (bad) push xlat xchg insl mov sub ss mov test xor sub popa cmp or add repnz std jnp push gs sub outsb pop daa orb test mov test push or xor mov xchg lods inc test jmp xchg sahf iret stc and mov loopne xor iret idiv fstp or ljmp inc int3 sub mov adc and daa int3 mov add jo leave mov jnp call pop lret pop int3 fldl pshufw sbb fnstcw adc ljmp push adc cli loope mov dec adc and cmp dec sbb mov (bad) jbe push and pop fs lret or push arpl stos loopne adc xlat push pop inc lea xor or xor pop arpl push dec ds (bad) test leave out mov aad sbb addr16 sub adc pop add jns mov repz xchg cmp push cmp mov adcl inc mov pop xchg in fistl movsb push std out mov xor imul cltd mov pop push pushf push cmp adc dec loop out ret es dec pushf in dec mov fmuls (bad) mov icebp shrl imul add push pop or jbe pop push sub stos js dec popf sub dec lds dec stc movsb xchg xor adc insb call xchg movsb call in cmpsb cli js or cmp adcb cmp xor pop push insb insl pop mov fmull shr mov loop mov dec cltd aas sbb mov cmp mov xchg add shll lcall fdivl cmpsb ds test cld mov mov cmp mov and jae mov in cmp sub fwait shll sub xchg repz loopne pop push ja and and out sub pop mov mov daa jne jb repz idivl xchg mov mov sbb mov ljmp fildll and mov add (bad) imul mov (bad) aaa in testl ret push mov inc jge loopne inc jnp adc adc sbb inc mov loop adc outsl cmpsl lds imul jp xchg add fs mov jo subb jge test adc push fsubrs in (bad) sub mov ds stc daa stos repz int3 movsb adc imul or push and inc (bad) data16 (bad) cmc lret jo out xlat lcall or cmp push mov xor sub idivl imull mov jl repz adc insl push cmp fsubs jp mov nop movb jo sub (bad) out stos mov xor pop rep jle lods out push stc or hlt xchg (bad) and add mov cli inc das fisubl call out dec fcompl mov push cmp jmp aas pop jle pop (bad) dec lret (bad) stc js lods es mov popf inc dec add xchg dec lods and cmp jo daa add jo ljmp push jp insl hlt loop mov and add icebp jle std pop popf mov ja test sub mov sbb add or cmpsb jmp ffreep add mov sbb push lods jg add (bad) sub cmpsb mov cwtl sub and sub pop add mov push fdiv dec movl stos dec xchg and add xchg xor fisttpll pop push dec jo loop sub das push and movsl test cmp mov add mov repz sbb popa scas sbb jmp push arpl movsl pushf aam out shrl mov mov lcall or rcrb xor fstl shll in push (bad) cmp rclb daa xor pop ja in xchg pop mov jge leave jae in (bad) enter mov lahf jge jb push adc test ss fcoml inc repz mov icebp push push lret test test xor and sarb cmp jnp iret add (bad) cmc addr16 push adc mov jb rorl clc test jl xchg pop ret mov mov sub mov sub xchg jb lods int3 sbb in xchg call aad out add (bad) sub cmpsl mov push and push cmpsb stos clc pushf ljmp (bad) int aas push ficoml popf stos (bad) mov popf sbb pop mov mov jecxz mov and adc scas mov dec fcompl outsl push pushf push cmp dec outsl dec sub lcall loop jo popf je std cs sbb dec push ficoml mov (bad) movsl or mov (bad) popa xor mov lahf or lahf jno mov inc xchg fimul push add xor pop mov lcall sub push mov idivl lcall push in decl jle je or lcall movsl out lods push jp sbb add mov and ret sahf (bad) cld aam jno ret (bad) dec mov dec jge pushf fs jns scas ljmp (bad) cmp fcoms xchg pop andl push (bad) hlt ret out pop mov (bad) sbb jo pop mov xchg fisttp loop pop insl or jne mov jnp shlb mov inc out test test adc dec shlb dec or sub (bad) sti dec pop lock push scas lcall adc mov lcall adc or mov lret repz std lret pop shrl push repz js adc lret mov jb add xor add xchg arpl in or enter lods int fsubp in cmp test push push pop aam loop or notl cmp (bad) in jne and pop push lds vpshld xor in (bad) ficompl mov std adc mov or cli sti fwait jl stos mov mov mov push cmp ret add ja scas scas stos or jns pop inc mov movsl fnstenv xchg dec lods sbb mov popf lcall push call jl mov cmp inc js ljmp cmp inc std xor movb mov pop add fstpl dec gs mov xchg pop daa fiaddl sub lret aas or js jne std push mov sub bound fiaddl bound clc mov (bad) fcomi add shl es aas int3 nop adcb jl les fiaddl inc xchg out dec lock fwait es push mov jmp push sbb sbb push mov pop sub movl xchg push mov imul jmp loop rol dec clc lds mov mov jbe rorl inc data16 push andl and nop icebp adc scas inc fadd xchg leave push lret jo call out popf mov test xchg jg cmp clc lods add pop aam jecxz xchg jp les daa add mov cmp pop jae cltd fcoml jge int dec and push or jmp fld sahf out loop push cmp add mov adc push bswap ss push cmp sahf inc mov aad jmp push fbstp nop cmp pop stos push loop jbe fiaddl cmpsl loope sarl push sti mov les ss xchg jmp push or sub and sbb inc jae cli decb mov (bad) sbb movsb test or xchg or cmc popf js cltd aam adc arpl mov mov mov es cltd fimul jae sbb int3 pop cmp push or movsl sbb lcall sub sbb sub inc sbb cld mov pusha leave sub dec ret add icebp es mov fs push imul lds ficom jle ret insl pop clc pop jne sbb aas push inc (bad) rcrl push add cmp jg jbe inc cmc jmp sub push mov or test adc loope movb sbb fisubrl fwait ret test mov ds mov scas fimul pushf mov nop call mov loop jmp cmp pop das mov cmp mov xchg (bad) enter sbb movsl mov mov sahf es mov cwtl pop cmp mov xchg jg mov mov outsb popa jecxz mov pop or ror and xor stos sub stos push and dec or sub in ja xor sbb cmp jle icebp and popa and paddb das (bad) stos sub stos sub aad cwtl fiadd or ja fwait xor cli inc and mov or shrl es es loop mov cmp aad (bad) xor rorb mov cli or std jp ret add int cld pop out push pop adc cmpsb xor call popf push pop or hlt xchg test fnstenv sbb sbb mov cmp jo in hlt xchg stos das call mov ret jg adc mov pop mov push mov inc sahf cmpsb dec ret dec int cmp movsl pop xchg enter push xor aad adc dec xchg xor sub lock inc mov jae jp pop rorb lret adc jne jns xchg cmp in jecxz lret or clc pop (bad) test (bad) mov jne push pusha xchg dec movsl add xchg and dec aad inc sarl pop and scas out lret sbb sqrtps xchg stos enter fwait xchg clc xor (bad) inc scas (bad) pop popa clc mov jl repz negb mov rcrb xchg lds (bad) mov lods ja sbb sbb xor popa ljmp mov scas push mov outsl pop sti jno into jae pop adc mov push rcrl fcoms outsb (bad) lret mov out cmp xchg out ds gs mov sub push arpl mov clc insl popa loop es mov cmp dec daa (bad) (bad) in add adc jmp popf scas leave pop jno cwtl or mov gs negb movsl mov adc mov jb pop jmpw clc aaa jae sbb in xor outsl add testl inc and movsl sbb and jl faddl inc or cmp xor test cmp (bad) xor sub sub fwait jl or in loop cmc scas hlt mov out sahf insb mov stc mov lods movsl jg lret inc dec popf and push stos xor pop call mov aam inc push or xchg lea dec jecxz call daa xchg movsl xor ds sbb je hlt out loopne,pt and or addl mov insl push loopne mov mov cmpl push fldl outsb mov in dec push mov mov mov xchg mov add add les out movsb pop mov xchg int3 iret cld ret paddusb mov fnstenv xchg les int3 and sbb (bad) ss push and subl jp jno bound mov dec repnz inc rorb in rorl cld jbe (bad) mov scas sub pop data16 sti popf xor push in push (bad) fstpl ss push sti or inc mov hlt add int3 jmp mov (bad) mov outsb dec adc les mov cld or push dec (bad) jle jae dec into testb or push mov pushf das ffree adc lock inc lret cmp jge jmp aam and (bad) or push iret sbb clc mov jecxz leave jmp inc hlt test jne lahf mov or dec cld out sbb out outsl pop lds mov xor addl (bad) xor sahf lea ret jecxz pop jmp xor lcall test add adcl adc inc xchg into daa aam cmp nop inc lret cmp loop push stos or sbbl xchg or lret mov xchg mov pop ret jge mov imul sub mov mov insb xchg in cld call lods ds icebp sti pop inc push sub pop sti mov jmp mov scas ret jae push cmp xor flds sub xor aaa push xchg lds cmpsl hlt iret mov cltd les mov js rorw xchg lcall or jno pop push jge mov ds movb loope aad jns imul dec dec stc movsb adc xorb sbb mov sbb xchg jmp add jg fstpt dec mov dec pop sub adc pop inc pop adc push imulb cli cmc cmpsl pushf std inc aad notl mov lahf dec popl jp pop fcomps mov or aas sarl negb jnp mov push fs add mov sub pop push aaa pusha cmp out add push mov (bad) and (bad) mov add popa sub inc jb jbe (bad) loop sub call inc test mov insl arpl fwait or sbb clc test fwait ljmp cmc enter pop not rcr mov mov cmp test mov insb out cmp lahf repnz gs addl aad scas mov arpl dec fisubrl insb push or icebp std ret cmc jecxz ret xor or out sub jo sbb sbb and and push push lret mov sbb mov dec cmpsb add pop repnz sbb fnstenv out lret xor ds xchg sarl jge popf mov ret mov imul scas cli test test in mov arpl movsl mov lret xchg ljmp mov (bad) in mov xchg arpl mov daa aas ret pop orl lcall insl clc mov fimul lret cmp dec xchg sbb clc adc mov sub in loop mov jp cmp pop xchg cltd popf lds cltd out mov and mov popa pop sahf lcall mov xchg and push xchg adc sbb xor pop ficoml sti mov jp lret pop int3 jae add mov insl fistp xchg adc pop xchg pop xlat sbb sbb stos push push jne shl and adc xor adc sarl pusha inc cmp inc dec sub push ss outsb or cltd or lods dec push out dec mov icebp test jns mov fistp sbb jb idiv aad jge test pop mov and inc mov adc push cmpl or push pop mov gs cmpb pop sbb sti loope dec insl sbbl jp push sarb lods pop hlt jle mov ds sbbb ficom insb pop or push lcall mov insb jb movsb push sbb sbb lock fild jmp addr16 testl int3 and add mov mov aaa xor mov into fidivl push adc aad pop cmp jp sub push movsb add pop sub in jl jp pop pop adc pop xchg or xor pop lea inc shll shrb mov (bad) fisubrl test push out ffreep jg (bad) loope cmpl cmp dec add (bad) cli fsubrp movsl hlt add pop sarl jmp stc testb iret mov test sub insb mov test and xor shlb (bad) jae mov ds xchg mov jmp pop push pop je add jmp sbb and outsl inc mov mov mov sbb inc es lret jge,pt adc xchg or pop arpl cmp cmp mov mov adc lret (bad) push sbb push bound je mov jle pushf cltd jb mov repz aas or inc inc jns xchg (bad) cmp clc xor (bad) inc mov lds ret xchg mov push shrl cltd faddp iret adc rcrl inc outsl cmp nop sti inc enter mov fwait sahf xchg in aad pop adc test repz into mov add jne scas lea insl cmp adc lock sbb pushf adc and push push movsl repz pop jl and mov ret add push popf paddsb xor negl (bad) pop dec out jne scas dec mov adc push arpl adc add mov sbb negb fs xor imul push into ret (bad) imul daa test lds sbb fwait add ss hlt sub push icebp jge popf scas add bound inc popa popa pop pop iret test jne pop and jbe enter aad and addl (bad) testb mov pop push cmp lea xchg int3 cmp cld xchg sbb lahf xchg test inc stos ss (bad) pop jae shrb sbb repnz test dec (bad) xor sbb nop (bad) adc adc push pop add mov add loop insb mov dec pop xor jbe push into push bound rcrl and fnstcw cmpsb leave jnp inc cmp mov ljmp pop stos notb shll outsb lods and sbb mov popa push mov inc sbb and js mov sbb cmp repz mov fdivl cltd jnp mov sbb loop fsubl sbb lcall (bad) and mov add movb in xchg add pop mov cmp sbb in loope jmp movsl and dec dec in in pop movb dec xchg xchg sub pop inc leave ljmp mov rolb xor and mov movl sbb cmp sbb inc push xchg adc xchg mov jmp pusha out mov stos sahf in decl jmp xor mov pop aaa mov std adc jae rorl outsb sbbb jmp push loope cmp shrl add icebp in insl shr xorl add mov test sbb mov jo js test jp pushf aaa or clc mov and sbb out sbb hlt inc lock ss or mov cmp pop in rcl xchg not cmp and out ja pop divl addb cmpsb imul xchg movl cmp mov mov leave or mov movb mov inc test int enter sbb fisttpll mov std ss push cmp xchg inc popl (bad) jge mov nop inc out pop pop movups and cmp pop inc pop stc sbb outsl sti cltd inc pusha lret stos je popa xlat out icebp out mov jl js mov pop mov rolb (bad) movsb aaa fisub and xchg ret xchg adc add and ret cmp cmp cmp pop shrl les lock mov or fs call cltd or mov addr16 pushf pop js xor jge js aad into cmp jo test fidivl sbbl test lahf dec ret es fnstenv iret sbb push pop push push sub and inc jnp inc ds pop mov ss jle lcall inc sub xor pop and les pop lods cs sub xorb jns fistp pop je (bad) inc inc inc and in out sbb (bad) mov ret je or out mov jbe icebp subl js or mov xlat xor xchg sbb or es call jbe cmpsb jb test movl push xor cmc pop add je inc push jg addl sbbb (bad) mov lea xorb and mov dec int3 lds daa outsl dec sbb xchg adc xchg mov lods jns fbstp es and out or xchg mov inc test mov cmp mov push movsl sub (bad) hlt dec arpl nop cwtl int3 dec popf jne mov aas push int3 das (bad) jmp (bad) (bad) rcrb into jl jg mov inc adc sub in repnz jmp inc out push and bound xchg xor pusha jle mov adc sub push fisub mov shll cwtl andb dec addl or pop lahf scas dec sbb testb dec test out mov bound xchg repnz cmpsb lock lock xchg scas pop mov add jmp mov out jb mov pavgb dec dec loop (bad) or fwait popf fs aaa ds lahf xor push shr hlt sub sbb or xor hlt stos sbb ss sub mov addb (bad) fnsave lods icebp sub aaa scas jbe pop ret adc cwtl lods xor fucomip pop imul std adc clc rcll push dec or mov mov cli pop cmp add clc pop arpl cltd or iret nop insb xchg mov in dec push in (bad) lods jo notl inc (bad) mov imul lods dec mov addl int out inc pop icebp add xor outsb leave mov lock jnp dec icebp inc sbb jle xchg popa fprem1 mov int sbb push (bad) push roll (bad) out jae jbe jae xchg fisubrl and iret aad cwtl popa cs in and int inc sti insb dec (bad) fidivr outsb xchg jb jnp pop inc mov flds cld mov inc icebp cli dec dec sbb mov fidivr mov push data16 push cmpsb test test push arpl sub cmp mov lods ret fcomip or scas pop pop test (bad) (bad) mov sbb jmp out and push out or leave popa xor pop jg stc jb cmp xor or jns inc imul iret insl rolb sbb les add fwait mov sbb mov pop insb mov jb (bad) leave pop test cs cmp jle push loopne pop mov mov jne roll jp sub or mov xlat scas push ja ja rorb cmp inc mov add cmp adc incb mov popa lret mov push mov mov addl ret mov pop pop sub js dec or outsl int3 add pushf sub movsb ror cmp jp fcompl ficomp imul cmp dec push xlat push (bad) in (bad) fidiv das add xchg sub pop push xchg imul ja shrl shrl push icebp mov cmp push dec call insb cmp xchg or mov jle mov arpl mov xlat dec fs pop jbe mov mov aad add jb enter sub repz ljmp ret jnp dec das mov and sbb ds lret gs cmp popf cwtl (bad) int repnz push pop sbb sbb mov popf fnsave lret push mov cmc adc fild cmpl rcrb stos xchg test arpl cli inc mov orl ds xor lods pusha pop pop jp sub lods inc fsin sbb leave stos sub fdivrs lea cli mov in mov popf xchg fwait push aad mov stc shll fldl mov outsl dec mov (bad) cmpsb into push (bad) jle cwtl std lcall cmp into inc xchg pop int lods cmp mov add pop imul lods sbb (bad) dec adc push ret mov mov rorb jo ljmp rclb inc movsl sub xchg out jg icebp inc push aad xchg fwait popf ja pop adc push dec mov push aas imul xchg mov push fwait lcall test or jmp sub mov xlat xchg mov mov fwait dec aas lahf cltd push mov jge (bad) pusha and dec rcll out rorl enter add xchg and mov and pop jno add inc scas mov test subl inc inc loope push int3 fnstsw stc cmp and lahf mov mov mov mov mov test ja push xchg sub cmp bound (bad) pushf aam in xor leave addr16 jno fwait add and shr rcr std lret fsubr push jl mov scas div hlt mov adc adc (bad) jecxz (bad) jns cli (bad) push inc loop inc sti or jle mov push push and jecxz xor mov gs aam mov jg jecxz push test fisttp pop or xchg lret pop into sub (bad) mov adc adc fistpll (bad) test iret aaa jnp (bad) jno xchg loop xor dec into insb psubsb pop dec pop sub adc inc push loopne outsl cli fmulp lock add stos or adc mov pop das inc cmp outsl mov insl adc cmp stos rcrb stc out inc imul sub (bad) dec mov cmp xlat inc jmp (bad) jmp add xlat mov (bad) mov push fistp mov xchg enter pop lock int rcrl leave call incl pusha imul xchg out cmp add mov adc std in jg rorb xchg inc stos push xchg jno nop (bad) mov cmp mov dec insb inc fs fdivl and mov popa jge cmc push adc pushf aaa ds out (bad) incb mov sti jecxz sbb dec sbb and mov xchg inc adc ficompl adc mov outsb jo mov push es aas out (bad) (bad) jb xchg (bad) push out xchg in push sub arpl in sahf sub adc addb aas pop jl pop push dec dec in out aad sbb mov xlat iret jmp ds test leave pop in fsubl jae ret subl out sbb mov (bad) rclb xchg jnp add push sbb aas test cmp loop dec pop popa dec fisttpl and xor mov push lahf in imul fcmove popa shl xor add fs popa es fdivrl scas (bad) mov push or lock mov ja jns adc and sbb lcall sbb ficoml sub cmpsl dec dec cmp test dec pushf xchg jo test cmp in outsl pop inc movsb jecxz mov test mov out daa adc dec jecxz stc stc lds in adc pop xor mov xor inc xchg pop push pushf (bad) mov add jns xchg hlt shrl mov mov sti jae xchg loopne loope negl mov jns jae out test xchg cmp mov push mov sbb sahf add int3 out cmp test dec stc sbb xchg pop push int aas adc sbb cltd fst notl jl mov xor or dec mov mov leave lea sbb xchg (bad) int3 sbb es out sub jns leave lret cmpsb in jl (bad) adc out cltd add push cmp lods ss and iret cltd fsts fistp (bad) cmc ret out movsb dec xor rcl dec test fiaddl mov jp dec fstpl adc movsb dec aam mov and cwtl sbb out xor repz xor xor dec fs loope xor stc (bad) dec sub mov xchg mov xchg cwtl popf aas test mov data16 (bad) mov fwait pop mov cmp add rorl xchg loop jmp jge les ror fdivrl mov pop jg dec leave mov std call pushf (bad) mov mov sub jne inc pop or ret add and sbb jp lret imul inc nop dec mov mov test enter push (bad) out sbb push lcall gs js loope aad idivl leave jp dec push shrl jg mov pop lahf inc arpl cmp adc outsl push ss push inc fcmovne fs jecxz jne mov dec fistp or in jge mov mov mov mov mov or cmp add mov cmpl lret std les or das mov fwait mov mov rcrl xor sub or sbb int3 imul out rorl rorl push rcll cmpsb icebp jge mov icebp and mov mulb jle mov bound add insl fdivrl cli lahf aad push in rcr mov mov jg pop les sbb hlt cmc enter les cwtl std js add jecxz inc enter cs pop outsl out sbb inc (bad) cmp roll jo mov lds int and repz (bad) mov test lret hlt lcall (bad) inc pushf fsubrp fsubrl push jge scas xchg aam pop add sbb cmpsl xor out inc cmpsb test mov pusha mov push out les xor ret sbb mov mov adc clc dec and addr16 add xor fnstenv and jo mov movsl push imul test mov (bad) xor xchg rorl add pushf sahf out cmp xchg int3 stos sahf inc decb ss mov inc xor into mov fdivrl dec pop sarb scas lcall mov cltd rcrb aam adc cmp fldl js lret daa pop or fisubl ret and mov jnp test mov in ljmp cmc or cmp leave pop hlt pop imul lea (bad) into xor (bad) cmc cmp add int push iret jo movsl bound aam outsl fxch enter adc xor add ljmp movsl aam xchg in xlat aam mov jecxz imul push push mov mov or inc pop (bad) aaa ss cltd mov gs jo cmp scas inc dec push hlt movsl shl lea mov out fs test (bad) loop mov daa dec ret arpl xchg jno mov out push mov stc sbb in mov dec cmc repz shrb mov xlat mov jno enter inc add divb add pop pushf sbb (bad) out and push test fistpll jmp mov xor loope data16 loop in xor inc outsl xchg icebp repnz clc fucom out xor push pop in adc pusha icebp pop outsb scas popa push mov insl lahf or jae and mov dec mov popf or fnstcw sbb jo imul mov into je sub xor gs mov out lret xor sti fidiv lods mov icebp out xchg sahf sub into jne cmp cmp test sti rcrl inc add (bad) dec or sub shrb push lahf loop loop pop fisttp push jnp or lret push les fiadd push mov and xchg or sbb inc dec or and pop fsub dec idiv adc or and mov aaa pop in sbb (bad) add in jne jg stos sbb ljmp inc out adc outsb test jb test pop push sbb pop lods jno push add and shrl add sti and cmpl lahf fbld scas pop repnz out and or jg adc test subb sbb mov out dec mov sub push jns shr lcall adc cmp xchg cmp pop in gs ret hlt and mov adc icebp clc pop and movsl jo arpl fldt dec outsb outsb dec cmc andl aas out jp pop xlat loop (bad) mov movsb lds (bad) xor jne xchg fdiv jle xlat add xor dec movsl rcl cmc scas decb int3 outsl mov mov in pop nop mov cltd dec sbb or mov add dec mov cmc jp leave es cmp test adc js stos roll movsb push jb ja arpl inc or in hlt mov andl cmp das adc lea int and mov add jns,pn out repz out mov sbb sahf lea xchg loope rcr jmp fnsave popa (bad) hlt lea push mov push sarb cmp arpl and lea or aas insb movsb add mov push push pop stos mov xchg in inc mulb loopne sub mov mov lea loop outsb add fmuls gs shl pop cs cmp roll (bad) jb pop xor or and push popa xor cmpsb xor adc fldl jle pop jno sti (bad) cmpsb cmp movsl mov and (bad) mov xchg jecxz insl xor addr16 mov icebp mov call sbb sarl pop out insb push jne xchg xor pusha imul fsub sbb or jmp and pop mov sbb test ja pop fnstcw flds ja adc int icebp jae aas xor mov push loopne jae fwait mov js lret das xlat mov push dec loopne (bad) test sbb aad cmp repnz (bad) enter cmp jae cld mul mov jae imul rorl repnz pop cmp xlat inc cld cmc mov (bad) mov xchg imul xor jo decb das repz repz scas leave in or into mov scas cmp jbe movsb sub ficompl (bad) xor mov sbb and fwait rorl dec push add mov cmp sub mov (bad) ds lods imul xchg (bad) fcmovb je jae adc dec adc call test cmpsb out inc movsl cmc jbe roll out addr16 lcall lret pop js sub scas mov out mov jns and pusha cmp mov inc mov jne shll daa orb in mov mov in sub cmpsl in test ss xor loop fimul rcr js sbb ljmp repnz xor mov push pop jmp ret enter in cvtps2pd cli sbb ret shlb (bad) jge aaa sub add pop adc fcomps xlat out jnp imul xchg dec or inc lods ljmp roll adc fdivrl dec test (bad) cmc mov and pop xchg xchg rcll or movsb xchg pop rolb lahf push pusha int pop daa movsb gs xor in lock add jecxz (bad) push jle aaa or lcall jmp pop scas or ss mov nop mov xchg dec out popf pop mov sub fwait sbbl mov stos mov aad in pop leave mov ss jmp lock jo cli jg inc jno cmp dec inc loop add and push add loope jmp fwait add ret and lock cmp adc push popf mov lahf (bad) dec and and mov arpl adc fwait or mov cmovne fwait jg movsb mov negb inc (bad) aad inc cmpsb test (bad) xlat push (bad) jns pop mov push and int xor adc jp out pop dec popa test pop into icebp dec adc mov mov (bad) addl sar sub and xor inc jge (bad) dec jge mov fcomps sub stos scas mov fcomip jp lock cmp pop dec jne fdivrl mov or iret jecxz pop xchg mov fsubr cmpsl test movsl je (bad) in imul into fisttp clc xor xor mov in adc or call mov (bad) std mov jne fwait aas or pop mov lds mov pop xchg insb sbb fist sarb (bad) rcrl setne movsl mov cmp in mov sbb mov add fsubrl lahf sub or sti xchg mov inc popf movsl dec (bad) loope loopne imul push out sub mov jae inc dec jmp loop mov lds dec call mov add cmpsb xchg add inc stc mov fisub (bad) fs test gs fnsave ss and fwait add push dec pop imull ret xchg rcrb nop or mov insb xchg popa lahf jbe push cmp pop add nop push out jmp push addl call arpl sub or dec std mov stc xchg mov cltd jmp jle (bad) inc popa xrelease mov push loop pop icebp inc xor clc mov xor lret add pop aam inc adc scas ret test cli (bad) pop cli cmpsb (bad) fnstsw idivb scas ror jo pop adc dec lret push dec push testb adc xchg lds mov jae push mov sub mov cs sti out (bad) (bad) out out add lret repz mov (bad) cld and xor add cmpb cld pushf in xchg (bad) into jno add data16 js sub sti mov push cmp mov repnz adc aaa cmc lret repz cmc or pop ja jge ds repz int and mov adc cwtl out pushf addr16 push push inc sub dec sub gs jmp cmp mov inc mov xchg std dec je es mull mov pop loop mov xor pop or dec leave out ds xchg and xchg popf xorl shrl xor xor xchg and xlat shlb xor lds jns xorl cmp inc inc cmc mov addr16 xchg lret push (bad) scas xor repz ret (bad) ss mov add xchg jb mov dec mov dec inc cmpsl or jle movsl clc jl sbb test mov stos xchg loope cmpsb and dec sbb hlt sub sbb and pusha out rcl inc imul inc push cltd fs add rorb repz mov pop pop fstl fisub enter das xor mov rcll xor out test jg sbb lock jg cmpsb ljmp lds pop xchg jbe ss cltd les fdiv push loope sbb aaa sti jmp add cmc pop jne mov faddp or xchg and or pop dec ljmp testb enter or jbe,pn movsb inc out jae add arpl or shlb adc mov or outsl jno imul push mov bswap pop xor inc in and (bad) movsb xor xchg std sbb std xchg cmp repz sarl pop mov cltd mov dec ss adc test mov or or lea imul out ret in sub inc jno jge and inc sub test pop call dec in movsb pop test push xchg cli mov or jo add adc jcxz,pn mov ret std out pop decb (bad) jae cmp into call inc loope sub inc or jmp mov std xor rorl pop stc fistp (bad) mov loop dec loop or cmc mov xor out sti dec (bad) (bad) adc fldenv rcl xor fs and rclb xchg fwait cli test repz xor roll ficomp ja lea loop dec pop jno ret cmp icebp test jg mov xor (bad) icebp jecxz or cld add jne or push rorb outsb dec lds ss xorb mov daa cwtl jnp,pn jl xor loop lret es orl cmpsb repnz dec adc (bad) cmp jnp xor lods adc iret dec lret lahf dec or xchg ss mov pop jo push push out cmp and mov mull pop cmp pop test push repz (bad) in jbe xchg mov dec leave dec push push or and jl aaa push popa fldl jle jmpw lock sub adc adc repz je xor pop add cmp add mov cltd addl fisubr (bad) mov push adc ret sub loope jbe dec lret daa inc mov xor jne mov fs jl aas jmp or imul cwtl fnstsw jb nop jmp xor popa push add xchg fs out and mov out (bad) rclb dec mov dec adc adc pop les xchg hlt inc aam add lahf in mov mov in xor cli repnz and inc mov mov aas dec js mov cmpsb xchg cmp lods fcoms into pop fldt xor mov sbb cmp addr16 inc add pop inc imul fcmovu popa dec (bad) xchg test (bad) std xor mov aas fmuls adc (bad) ja test jl dec xchg gs shrb sub lcall pop or fwait ja xchg push js fcoml mov mov sub xor (bad) mov cmpsw out push je mov jmp add int outsb jb pushf dec xchg shll jns popf in movsl push jne ret out inc mov xor aad or jle jl mov repnz and jne rcr push xchg hlt xchg movb sub mov mov lods cmpsl xchg xchg ret faddp mov dec lcall cli adc push sbb imul add push arpl dec xorl pop sbb (bad) fst cmp cmp push dec icebp pop sbb dec sub sub (bad) xchg leave ds inc xlat cli dec dec sub jae xchg rolb jle mov or adc pop or fs mov (bad) xor aaa insb mov outsl loope pop loop sub mov cmpsl mov sbb mov mov test mov fildll rcrl aaa sbb jg das insl mov lahf jle xchg mov sub mov add pop xchg (bad) pop mov call dec or stos ds aam rcll shld cwtl push lahf mov insb xchg or adc xchg push (bad) mov (bad) mov inc adc lret add fisttp loope test jmp data16 push push std imulb xchg push push mov pop pop inc mov scas cs fisub cmp insb sub nop jecxz (bad) lods push jl (bad) xor sub inc mov dec jns jecxz jnp mov xchg pop mov pop inc fs jle (bad) fisubrl inc das sarb or bound (bad) aam pop sbb lret xchg mov scas imul pop sbb movsl jne inc fdivrl fldl or mov push sbb dec or nop pop andl pop or out add xchg push test mov sub and das (bad) test mov stc jae or sub mov out arpl cmp ror xor sahf pop adc fwait jb mov pushf cmpl popa push adc sub (bad) sub add jg test fdivs out jb iret push cmpsb ret (bad) std gs pop mov rorl frstor dec lret pop scas and pushf and scas pusha mov jecxz lret inc mov sbb jne ror jae inc sub pop sahf push iret rorl mov cs bound adc xlat mov lret lods mov and daa jmp mov and pushl sti outsb jp mov dec sub or loope xor pusha jae out dec and lahf icebp jnp rcrb jle or and pop jb test push add mov sbb les xchg and popf into cwtl mov inc (bad) cltd repnz sub and pop std pop sbb mov mov mov jae sbb mov mov aaa add and mov mov inc mov sub out andb cmp mov lods pop (bad) xchg or mov lods sbb test imul imul fmuls jb (bad) pop pop or inc push xchg xchg mov xor out hlt inc dec dec cmpsl clc imul std cmpsb loop mov cmp popf adc inc addb adc jb sbb out dec mov aaa or xchg mov nop/reserved lock pop mov cmp push nop cs test std inc rol add leave xlat mov xchg or popa cmp fdivs mov pop sti cwtl push aam cmp xchg mov xchg rcll aas add push push in in roll and mov pop neg mov rcr xor js fcoml pop adc fdivl fs sbb push pusha testb jmp scas xchg xchg cld loopne aad aad cmp fidivl mov inc scas or iret fwait cmpsb pop xchg stos orb roll mov mov (bad) jno test (bad) push test cli int3 adc mov mov addr16 adc add jns imul and fistl sbb lret and cli push push mov loope jle lods add xor push xor insl pop div call aaa dec out outsl mov inc pop imulb les adc out xor je test push neg adc jecxz arpl jl loopne imul outsl fild stos in (bad) sar xlat pusha push lahf sub cmp dec inc jge inc push cmp push push out int3 push mov aad adc sub inc inc (bad) xor es outsb cmp xchg add cwtl (bad) in int3 xchg addr16 insb cwtl (bad) sbb sub or mov loopne pop test in sbb es (bad) adc xchg scas imulb xor and jo les fnstcw mov daa dec jae xor js xchg aas mov mov inc out scas mov cmp cmp fimul jmp mov add push ds das test scas icebp jno mov jbe jne fisttpl enter test das pop mov dec cltd or sbb in add (bad) inc into pusha and sahf and cltd add fstpt call shrl mov rcrl sub and add push cmpsb ja out popf pushf mov dec in mov sahf mov js cmc addr16 in adc pop leave neg mov sbb jle xchg movsb mov inc lods jg sub xor mov push push push dec fnstcw jne clc xor cmc push xchg inc or push jg xchg jno ljmp repnz es loope dec loope cmp fwait cmp sub mov dec ja pushf adc in aam cmp mov (bad) scas rcrl mov push cmp pop daa mov popl les rcll test sub push mov aad and inc adc shll iret or lahf mov adc (bad) aaa jne adc mov sbb and mov rol jge cmp sbb (bad) jae push dec mov (bad) mov hlt pushf and mov dec cmp inc lret add xchg test notl out movsb mov idivb sbb (bad) xchg cmpl lea icebp mov and lea mov and daa add and lods icebp or std out gs adc ss (bad) lret inc jmp mov and (bad) shrb mov push nop (bad) lcall push xchg xchg inc xor sbb mov rorb int3 lea and insl inc lcall and xchg jne xchg sub jg or add jp xchg mov subl mov inc sbb adc pop js loope loopne imul clc dec cmp arpl in or sub fs in and mov psllq lock push (bad) imul daa outsb mov into aad jle (bad) fwait cmp arpl mov push cmp mov push lds adc ficom lods stos test leave ja gs (bad) and gs lcall or jae stos dec test mov ficoml add mov cmp and negl lods mov sti lock lcall lret (bad) fwait pavgb bound push data16 pop call stos ds push aam jne daa add mov cmp mov jb clc mov push or inc pop dec dec cmp push fidivr or dec push ret iret in mov sub sbb roll cli gs (bad) cld ds test jp pop inc adc outsb inc sbb pop push sbbl test call (bad) (bad) sahf cmp mov add cld fstl mov jp mov scas inc sbb dec mov jecxz xor cmp ret ljmp (bad) aaa xchg inc mov jle out int outsl jge (bad) xchg add outsl rol xchg xor mov out mov xor or jge pop adc jb jle clc in adc mov faddp (bad) aaa sahf in into add jb test cmp mov and andl dec loopne xchg cmpsb jb rol pop mov sbb clc or or stos cmp mov pop aam mov test pop or loop adc out loopne push mov je inc in mov sub sub inc sbb (bad) aas cltd sub outsb iret sub (bad) mov mov pop sub (bad) sub mov pop xchg es in inc sub jnp ret or mov test stc cmp icebp jb and je in inc mov cld pop addr16 jo cmp xchg add ss mov push (bad) scas jbe sbb adc pop jae in fldcw cmp and stos mov inc jle (bad) or mov cmp sbb dec daa add loope stc sub mov ret mov mov (bad) pop xor push push in mov ds or out pop in outsl jmp sub loope mov and in mov or push cmpsb jno in cmc test pop imul aam cli ret sub mov std int3 mov sbb test xlat lcall xlat cmp scas push lcall gs inc imul mov xchg lahf jmp inc jmp mov (bad) aas sbb js jl cmp jecxz ja (bad) xor mov outsl adc dec or cwtl loopne (bad) mov inc xchg enter movl cltd pop lahf dec mov data16 mov inc mov mov fwait dec dec mov push cmpsl add je and jmp or add in fs push push inc adc mov jle sub and sbb push and mov push (bad) mov outsl test push in and call jecxz je push push xchg movsb inc mov insl mov dec into lcall aaa cmp (bad) ss push adc repnz ss cmp sahf mov ljmp dec leave daa cmc dec push leave lahf xor xchg dec mov call cmp and stc push and xor dec add addr16 ja imul cwtl mov adc clc mov sub aas daa xchg xor cli fisubl sbb aam stos add xor pop out ja sub jo test popf xchg sub fcmovu std adc jl data16 add sub int push cli xorb jge push arpl push cld cltd xor cmp push xchg jo sub dec mov dec cmpsl fwait inc lahf push sbb push lahf mov mov fwait push popf (bad) sarb mov or out daa jbe mov stos mov and inc int sti (bad) (bad) mov fdivrl jmp in lock in (bad) sahf fisttp pop (bad) xor mov (bad) xchg in and mov jg outsl jb into loopne mov add out iret test fs sarb ja movsl (bad) cmp movsb add add addr16 test nop jne dec sbb sbb jle adc dec add jns rcrl mov cmp mov xor xchg mov jns and mull popa daa aaa mov popf bound popl mov cld pop (bad) xor xor cmp outsb insl push lret (bad) ss iret sbb subl shrl decb adc jmp dec rolb loope jno gs test mov add inc mov push dec lock adc clc mov mov or mov sbb mov push or push (bad) aam repnz jge jnp and inc xor cwtl sahf xor push add in sbb jns mov clc mov cli or scas sbb in mov inc stos mov mov adc imul fwait sub inc cltd or fcmovnu fnsave dec shlb dec dec repnz loop xor scas cltd inc adc and nop adc jl push cmp inc lods cmpsb jo notb lea push or int adc ret cmp and lret cli inc dec xor leave not dec sub mov loop mov jne rorb (bad) and cmp pop stc arpl mov sbb cli mov arpl jmp sub aam out mov shrb dec lods cltd stos adc mov dec xchg shr mov mov dec mov in in push imul mov icebp push repnz cli xor fcoms jb mov add xchg mov out xchg fisubrl ror mov sub notb mov testb lds loop stc enter hlt xchg sub cmp jmp push out adc mov cmp cmp mov inc data16 push divl jo orb lret dec gs push jno andl les or in std nop loop or call mov sbb lea xor mov mov jmp negl dec jne dec std push ljmp fisubl (bad) pop or (bad) in (bad) mov add sub ret ljmp (bad) outsb repz scas (bad) pop adcl inc js adc insb pop dec nop sbb inc or dec xchg adc (bad) jno stos push fs aas add jl xchg jg push ss inc cltd pop (bad) xchg and loope push outsb adc ret sbb jp decb xor and fs mov xchg mov (bad) aaa or ds outsb and jne jbe pushl adc clc mov mov mov sbb mov pop sub daa cmpsb jl js fxch ss mov inc dec nop in iret adc incb xor pop xchg adc push jp jecxz push lods lcall cmpsl cmp (bad) sbb inc cmovnp inc push fdivl pop jnp lods fidivr int3 test mov mov cmp outsl adc ret mov fild fdiv lret xor popa ljmp repz (bad) mov lret clc dec add mov ja cmp inc (bad) jecxz pop dec loope das (bad) idivl pop inc data16 fsubl add stos call iret lcall mov or aaa stos jp push hlt js mov sbb popf call and ds pop mov sarl and mov inc ja sbb dec fwait test movsl cmc (bad) and and sbb add pop add sub js js les mov scas addr16 xchg pushf cltd leave scas movsl or cmpsb adc xchg imul (bad) mov das (bad) push stos xchg or leave imul dec es fisttp test sbb pop aas dec loopne (bad) ds and xor cwtl jo mov repnz cmc cltd mov inc out mov mov (bad) mov test mov and imulb incb inc ret mov sbb adc enter mov aas das pop aaa ja push lahf lret xchg stos (bad) leave or loop and add addr16 sahf in cs test ds mov adc xchg ret push or imul sub inc sti cmp fcoms ds aad mov aad lret sarl inc lods mov orb jg dec mov mov jg fs pop sbb insb jle add dec push mov mov movsl xor insl mov ffree mov repnz cmp cli mov pop (bad) jmp inc loope mov ret xchg sbb ss add out out jb lahf xchg adc jbe dec (bad) lods outsb and mov cmc mov pop lods mov mov sub leave mov (bad) sbb cmpsb clc psllq setbe mov fwait test xlat push and aad xor popl (bad) stc cmp and xorl rcl inc sub mov pop inc aas sbb dec xchg inc out sarb dec push add cld add push sub aaa jmp xor pop mov pop add out repnz push mov inc pop mov mov aaa mov jae xor xor shl xchg pop sbbl sarb fcmove mov dec cmp cwtl push dec hlt outsl sarl test jb xchg lock test arpl fstl xchg test (bad) jmp push mov (bad) push add cmp loopne pop mov cmc mov stc mov or adc xor stos pop icebp jge and inc nop add cmp sahf xor decb dec fidivrl mov xchg inc jmp ret push dec push pop pop (bad) fwait test sub insl dec fadd es mov push mulb pop lret cwtl test imul rorl xor mov loopne lea hlt insb mov push dec roll jno or nop pop or dec and outsb inc into lcall inc jbe test sarb adc repz jge ss pop sbb adc lcall ds loope or jecxz arpl jo ja (bad) pop jbe mov in lods mov xor fidivr stos pop pop fcomps dec mov lahf sub push lea test sbb add push stc and mov into dec inc icebp xchg sub jnp push sub rcll or xchg fadds mov inc pop xor mov icebp lock aas mov inc adc fistl rclb or aad icebp sbb jae pushf mov jle mov pop dec dec dec xor pop xor arpl sti inc imul movsl popa dec jns (bad) not into int3 mov push shr sbb test pop aas or in sti jae xchg ret mov mov pop (bad) pop imul sbb jae jg cmp push or notl xor jp or fidivrl int3 add xor loopne lcall pop imul push mov dec dec mov lcall and das out jl lock enter push testb iret push repz jge dec mov cs popf push jno lea push pop adc mov sti jns xchg pop lahf and sub xchg mov jle stos shlb ds dec sub mov js sub or adcb jl mov test iret (bad) push divb xchg roll mov stc in (bad) mov popa sbb sub test and dec inc pop mov fild adc pop mov fcoms je mov aas sub out popf aaa mov cltd ret shll gs jecxz xor (bad) (bad) cwtl adc sub int or pop fldenv loop mov or xor dec aaa jb mov mov int jb pushf cwtl jg loopne pop adc lods icebp int3 sub loope dec ss fs movb stos jno dec dec jae inc pop daa add (bad) jge mov (bad) or cmpsb xchg mov dec lcall pushf mov xor pop lahf cmp dec int3 int fsubl lods in adc pop lods jge jae (bad) lahf sbb sarb mov ds inc scas rcrb fwait (bad) es int3 sbb pop cmc stc movsl popf add cli (bad) or lahf xor test jb xchg mov jecxz (bad) jbe lods in cmp out cmp xor js jge movsb mov mov mov sub bound cmp mov leave xchg jns adc subb aad sub (bad) cmp sub das incl in ds inc mov incl mov sbb xor ficomp fistp sbb sub sbb fiadd int dec enter mov jg mov jnp ret fwait stos out or xchg sbb shrb mov fdivrs ss xor adc mov xchg aas jnp js and mov clc mov or cmp clc pop add scas jl mov fstps jp popa cmp fstp add sub push out fidivr sbb cwtl pushf repz es push out outsb pop pop xchg dec jle lea sti jecxz repz jne jns xor xor icebp cmp (bad) sbb jmp sbb mov add ljmp add add imul insb lock sbb hlt ss (bad) rolb or aad pop mov lods mov test mov inc out dec mov sbb xchg and ret sub or es xchg ret xor or jne insl inc mov fs push daa (bad) jg mov add push pop fisttp test dec push pop mov inc (bad) sub pop sbb jmp jo xchg jp outsl xchg std pusha testl add imul in sub les cmpsl pop adc movsb cld test enter pop ret loope lds pop and test mov jae je ficoml ljmp jp add fs fwait lods xchg shrb mulb or out mov aam mov mov inc test mov cmp jne out or fdivs pop pusha jle fisttpll sbb repnz or mov or mov insb mov jmp push dec sahf jo scas push xchg mov addr16 mov mov sub je inc xor addr16 lock in subb jp or rep popa lret test ljmp stos dec push loop aaa divl shll dec out movsl notb aaa mov mov pop xchg sub icebp pop lea push lods cli aad sarl jbe jo push push add add aas adc push icebp cmovno sbb lock insb fdivrs sahf add iret pop std mov fs sub dec int push in sarl lock fisttp lods loopne ret mov pop or in lcall cmpsl std pushf int3 and mov xchg mov jmp sub jmp cwtl data16 xor and pushf mov cwtl mov out xor in loopne sarl or adc push mov adc or adc ret fs dec (bad) lret cmpsl sbb jg xchg pop fmul sbb aad loopne popa gs out inc xchg cmp mov or pop jg mov cli clc mov rcll pop (bad) fdivs xchg in mov mov and push adc or sbb mov mov xchg xchg pushf inc pop xchg aad sub and xchg (bad) mov insb (bad) mov jns (bad) cmp xor jmp sbbl into fistp mov mov test pop aaa ror push daa testb jg ret sub out (bad) out mov sarb repnz mov in fsub adc test and adc adc adc jg dec cs sarb cld aas push aam dec xchg imul xor xchg jg fnstenv push adc sar dec call mov and aas add jbe (bad) push dec addr16 mov mov or xor mov (bad) movsl scas mov inc xchg je cltd mov out lds push outsl adc test lods add icebp dec daa xchg cmpsb mov mov clc push adc sbb sbb pop jae pop neg orb push movsl sahf sbbl add mov fistp inc xchg cwtl sbb push ret das pop aas ss (bad) mov or jb mov push std ljmp push dec dec xor nop dec aam ret insb mov jns pushf mov jp and mov xor (bad) fdivr fldt cmp add stos hlt xchg mov fwait jno ret mov ja push xor ja xor test pop lock and cltd movsb (bad) or mov adc stc inc jnp jne mov cld data16 in mov push (bad) (bad) mov push popw out or cmpsb xchg aaa stos dec int3 inc lret mov (bad) xor push cmp ss movsl push jnp adc xchg (bad) dec mov pop lods inc fisubl ds xlat jbe in (bad) leave dec jge push lahf xchg inc les ds mov dec push xchg out lahf xchg jns ret shlb pushf or and fcmovnb and and insl fisttpll aaa mov out movsl pop xchg (bad) sub ret scas xchg inc inc (bad) or xchg jmp (bad) in inc sarl pop jae inc fwait scas fdivrs fcmovnu cwtl dec addr16 mov sub in mov iret inc (bad) mov pop stos mov mov mov jg leave dec inc bound push dec dec dec jmp cltd out xor ret pop jge or and ss inc shll xor xchg push xor shl and cmc mov cmpsl cmp clc das fldenv cmpsl sbbb cmpsl int3 add pop lock or mov aad cld xchg pop cmp js or adc aaa and mov out nop sub sub and dec aas pop push rclb call pop adc (bad) jo in aad inc pop scas or mov xchg test pop inc icebp xchg dec inc and fwait adc pop push shrb mov xor pop push push sub xchg sub and cmp jnp testb jecxz xchg dec push fimul sbb (bad) xchg push in lret jns stos mov outsb cmp mov add jle adc push cld das adc cmp sub xchg cmp sub jl iret in pop test xlat jbe adc xchg cmpsb mov daa fcompl insl mov dec jge es jge scas dec jns and icebp imul push mov daa xor add jnp and daa ficoml cs sti push in ljmp mov mov stos insl cli jns addr16 lcall outsb mull xor inc push outsl push sbb and pusha ret sbb jge,pn jns adc and jg mulb divb jp sarl sub loop stc mov sbb lahf xchg xor call dec insl (bad) mov mov sub lcall daa jecxz xor lahf lret imul dec (bad) imul cmp loopne (bad) mov scas mov flds fidivrl xchg mov pop popf pop cs (bad) das jb add xchg stos cmpsb rol xchg mov stc iret push (bad) repz ret and mov jg xchg je pop inc mov jb or inc (bad) popa lret scas test gs (bad) sub inc dec pop pusha ja es daa and xchg daa (bad) imul enter sbb loop (bad) (bad) xor (bad) insl shll xchg mov ret add outsb pusha push xor cli mov sbb cwtl and (bad) mov sub adc xor repnz cmp mov fcomi jo fyl2x push lret add test dec xor mov fcom mov fcomip pop or (bad) test test cmpsl xchg xchg cmp dec xchg add or mov imul jmp (bad) jmp cs cltd lcall inc in push inc shll out xor aaa mov sub (bad) push in push xchg pop js lds pop or mov mov mov push and add sub mov cmp or es lcall adc stos push cmp aad dec cwtl sub mov push aad insl loope outsl or call adc in scas sub inc sub dec arpl lds outsl imul ljmp jne scas xor (bad) sbb ja rcrl out and and test out push ljmp ljmp jmp cmc and hlt rolb daa in sub cmp rcll gs in add jp cli mov xchg and fdivs mov ret int jns sbb jnp cmp icebp inc pop cld mov mov pop fwait pop inc nop jnp adc dec xlat mov push out jns adc mov (bad) stos ja sbb sub add sbb sahf scas popa or inc rclb sub adcl mov pop xor repz and pop dec mov outsb dec inc inc fwait dec and cs xor (bad) pshufw (bad) lds (bad) cmp dec es sbb inc leave push xlat jecxz add mov leave xchg sub and rcr gs in mov cmp fiaddl shlb clc push les or cmp jge stos dec js test lret mov push pop pop popf scas add inc into jo incb repz daa pop pop cwtl fisub mov out mov xor mov loope xchg mov cltd (bad) addr16 daa lods scas sub jge push dec mov cwtl mov lea mov jne sbb mov (bad) mov cmp cs arpl std mov inc inc insb call arpl mov rolb pop add dec xchg repnz cmp out shrl fstl int3 jo mov fsubs mov clc outsb jno lret cmpsb inc loop arpl mov mov rorb ret inc (bad) mov roll dec cld ret (bad) neg clc (bad) or cwtl jecxz clc (bad) jo (bad) scas inc hlt ljmp inc cs out (bad) aad xor push cs int ljmp stc aaa add inc lods iret popf rorb push jnp das cld or cwtl ds imul jae data16 mov daa mov mov mov lea push mov jnp inc mov movsl sub je jno xchg push or cmpsb mov cmpsb cmp call inc jecxz fsubr shrl fmul cmp insb jbe and in adc or shrl idivb bound js (bad) das push sbbl cwtl xor pop pushf push cmp jl cli mov scas loope cmc or pop mov out repnz push xchg rcl mov xchg dec xchg add or mov xchg fidivrl lods pushf divl dec mov in push addl sbb lret ret imul jmp push cmpsl push jl outsl fs xchg mov jbe ja repz add popa insl sar icebp clc arpl push cmpl cli lret pop sti dec push fwait stos popa pop (bad) sbb jbe xor mov sbb sub jne sub hlt inc arpl rcll inc jg fdivr inc lds scas cli rcr inc or jmp into (bad) int3 in push insl xchg test call lods outsb aas add xchg cmp mov fsub ret cmc dec jo scas cmp inc push xorb or cmp xchg flds stc std xor bound lea (bad) jns inc adc ljmp loope ljmp mov push mov push ja jnp scas mov (bad) inc imull and xchg cs repnz pop mov orl push gs add daa mov pop xchg sbb test add xor test leave or lods pop xor sub and shll mov out jl loopne fiaddl enter idiv xor adc popa lret bsr push dec sub cltd mov xlat rclb jbe mov lgs (bad) iret push add pop in jnp popf cmp or mov data16 decb repz mov mov movsl mov mov ret mov sbb sub imulb jmp insb mov cmp mov pop idivl hlt int3 iret nopl jae,pt add lcall loopne pop jle add repnz add ja fild pop cmp andl jmp lods rolb mov mov les scas ljmp dec pushf (bad) fild loopne movl sbb mov xchg je mov fnsave xor and (bad) je add (bad) jns xor mov adc push adc inc inc mov jmp mov shr std jmp push test jo movsl call pop cmp lds pop out mov xchg fisttpll add loop in mov (bad) out cmp cmpsb leave stc sub out leave mov and mov dec push arpl mov cmpsl pop dec fwait icebp ja mov out out ljmp aad scas dec ror mov (bad) (bad) hlt (bad) sahf or xorl pop mov pop roll mov ret loop loope sbb cs xlat inc push cmp cmp xor fdivr sbb mov pop push jg or or ljmp movsl jno mov and test jmp adc and insl and popf jecxz add fs ljmp insb cmc test jbe cmp mov lea pop imul clc ja xchg in rcrb cmp outsb scas dec jb inc test pop sub or push outsb jmp xor jp jae jne into push sbb add insl fst fsubs jl cmp jae adc xor fnstenv fidivl in push dec xor mov inc dec pop test and (bad) stos push mov imul jne mov cmp addr16 sbb push cmpsl push jae call cmc push (bad) inc push (bad) mov xchg imul arpl mov imul xchg lods or ficoml pop add addl adc or xorl je ss jnp sbb loopne in or icebp mov hlt mov je movsb or scas cmp (bad) insb daa adc enter enter xor aaa pop sub adc xchg xor inc mov jecxz pop or dec push inc pop mov sub lods mov pop mov sarl add inc out rorl es mov mov inc or sbb sbb in test out mov ds rcrb ret int3 out je out and lods int repnz push into jo mov pusha mov pop out loope mov xlat aas sar pop imul flds movsb jp mov ja xor pusha xchg faddp lods dec or shlb lret adc inc (bad) mov outsl mov call das sub dec ret dec mov movsb (bad) pop imul dec dec js mov add pusha adc iret mov aas das fisubrl mov rcll mov sahf or scas and pop jno lret sbb pusha pop or in cmpsb push aas sub jns test or fldl test (bad) mov in ja inc bound adc mov xchg and inc insb mov movsl push adc jbe aaa lock sti test int lods repz push movsl lret (bad) push aas mov inc dec pop jp mov shrl dec xchg xchg xor push add scas add xlat dec roll lock inc stc mov popa push popa push stos andl xor (bad) mov xchg cmp int3 movsb dec std stos insb cli mov hlt ljmp jae push and ret std lods sti jg loop inc loopne mov insb std je jmp lret enter bound inc enter ljmp orl stos pop out loop movsl out ss (bad) arpl pop dec lahf adc sbb cltd sub add in sub (bad) repz and pop loop adc jae or sahf push inc add ret mov jg int3 jb testl leave pop cltd push xchg mov sbb into xchg faddp jne adc sbb cmovge xchg dec stc mov xchg fwait inc ficomp fstpt jb push imul add pop pop jns jg,pt add inc dec fsts (bad) dec and js xlat xor mov andb sahf stos out call sbb cmpsb xor pop mov adc cs scas sbb in jae fs in sub bnd inc mov mov dec mov fistl scas push icebp pop and test or outsl lods mov test push movsb inc dec inc dec jle jp mov daa and cmc in shll xor imul or sbb inc nop dec int data16 pusha cmp pop push sti jo xchg push mov (bad) mov pop cli or ljmp push jne push jae into cli nop es scas es inc std jp pop add adc mov push in lods dec push push jo sbb in push inc fisub (bad) stos mov in lcall (bad) idivl int3 stos (bad) mov push scas lret icebp lods lcall call mov out push sbb shrb or je push adc add daa inc stos divl inc push in cs int and addr16 xchg sbb sbb repnz (bad) jae cmp jmp xor fnsave push dec mov cmpsb push popl repnz jbe jecxz push (bad) stos pop xor or or cli lret mov inc icebp cmc mov roll jnp jg push aad addr16 aam add (bad) pop push lret rol cld pop js aas das mov sub adc push mov xor cld mov xchg pop xor (bad) jbe adc mov pop inc cmp or repz lret mov rorl adc adc data16 push adc pop xchg jl adcl push cmp ret jg fnsave cmc fldt leave xchg cmp popa ljmp sbb mov push mov (bad) mov jbe daa mov pop xor sbb loope add les jnp cli fnsave fimull cltd adc fbstp fild loop fmul jecxz and inc cmpsb fisub pop jns mov push sub sbb mov popa mov aaa or mov push pop dec or inc icebp xchg sti dec test xchg add or (bad) dec pop sub inc cmpl push lcall mov add lock loopne lock pushf sarb mov rorb int or push loope jmp scas inc and mov add hlt mov daa arpl xor movsl push xor mov inc mov dec sti mov add mov push je mov cs in add mov std jb xchg test xchg ret fnsave xchg fdivr push (bad) jl lret jle mov (bad) test mov cmc divb test iret mov dec mov dec jno insl stos cwtl insl mov pop (bad) negl fstpt lret pop push add cwtl lods cli xchg es cmp mov add cs sub test loop pop es or ja mov push (bad) repz outsb popf push pushf or mov loop mov jne sti cs xor add repnz mov xchg dec mov mov and add mov jo imul notb add scas out in movsl sub fild add addr16 mov xor xlat inc mov jle dec fwait mov sti fistpl hlt xchg inc gs addr16 std xor mov jbe cmpsl outsl clc jbe fsts (bad) lods aam repnz push mov fcmovbe add es cmpxchg rcrb xlat jne aad push shll cmpsb insb gs mov mov mov jecxz sub mov arpl data16 das fwait test inc sub mov cmp out out mov stos insb xchg insl pmulhuw inc xchg cmc push push sub js je sbb (bad) cmp roll out jg push push sub jns mov ss inc cmc decl fldl test cwtl mov les jmp cmp lock (bad) mov out add iret xor jecxz pop (bad) rorb and rcrl mov into rorl mov pop loope aaa xchg scas fsubrl sbb addr16 add repnz inc test mov sub and fstps xor dec jecxz mov popf add insl insl sbb mov lds jp sahf sub xor cmp (bad) or cmp sbb and bound lret ds iret cld test mov mov pop sarl pop aas pop jecxz,pt cmpl mov imul lods dec mov aaa jg mov fistl sbb push lds dec jecxz sub push stos push push fstps dec fstpl in out rcll lods cld ja pop ds mov mov out push sub data16 mov int3 adc sub rcrl je ret iret mov imulb in bound jle das sbb insl das cs sub imul sarb stc hlt and jb dec inc sub frstor jo push mov mov dec outsb div mov pop lods insb daa clc add dec mov ja xchg cmp (bad) mov aam jle xor pop popf scas nop lods jnp xchg ret inc (bad) cmp pop ljmp (bad) pop xchg mov adc sub insl (bad) (bad) mov das xchg push jmp adc call divb add mov mov gs mov out sub xchg mov mov xchg or jge sbb loopne iret movsb test or call rcrb dec cmp (bad) incl movsb xor (bad) orl bnd lods scas sub dec jp outsl jnp mov data16 dec cmp xchg fidivr push push stos sbb cmp jge push negl lock test decl add cmp or mov repnz rcl shr and pushf clc push (bad) pop xor rorb divl imul cld fs or fwait insl test and rcrb notb (bad) mov mov or sub (bad) xor (bad) or (bad) push movsl (bad) lods int jge es add movsl ljmp xor dec mov adc (bad) fnstenv push sub adc and andl into jns pop insb cmp or (bad) outsl dec xchg test into repnz jno xchg popf shl xor pop xchg fldt cs into loopne pop push jp mov fwait aaa jbe xchg push push dec sahf addr16 repz mov fnstcw sbb sbb in pop in (bad) jmp cmc push adc or jp std repz mov mov movsb or insl (bad) ja (bad) scas nop outsl in pop fcoms out jmp (bad) mov out pop inc test pop and and push mov shl mov out lcall lods jmp int test icebp push les jl jmp add or mov (bad) (bad) leave dec test out lcall sbb inc fwait jp ljmp (bad) aaa movsl add daa pushf inc addr16 rcrl icebp mov lahf fisubr insl dec inc cmp andb test inc cmp js shrl popa cld scas add add jmp mov loop cmpsb xchg repz adc inc sub adc stc fldl mov hlt sbb out xor sbb sbb jecxz mul add in in add repz (bad) mov push dec xchg daa xchg in ja pop xchg push add dec ja das movsb mov loopne add mov xor sahf push clc jge mov popf push push cld xor sub sbb jbe imul push mov dec and or mov xchg mov andl loopne cmpsl mov les aam push pop xor sub dec lds mov push mov cmpb add inc daa loope sti mov dec add or dec pop (bad) jecxz in rcr ret xlat adc rol daa in cmp cwtl int3 roll ret cltd arpl gs push out dec cli outsl xor push mov and flds adc pusha (bad) ds jge xchg inc les fdivrs (bad) mov mov push mov addr16 fnop out repz adc mov sahf arpl and pop lods jne imul dec shll rorb adc ficoml xchg fistpll (bad) sub cmp inc rclb mov adc push sbb stc test pop jb out call divb dec dec adc mov jbe mov pop pusha rep shll jb aaa outsl push out fwait (bad) dec stos jp sub mov adc out mov lret repz dec xor aam sbb std xor mov fst cmpsl xchg inc lock jae cmp adc mov pop adc fwait or mov mov dec es push data16 and inc dec or pusha mov stos cltd sahf fsubrl rcl loop hlt cltd pop or push outsl jnp hlt pop loopne mov add cmp cmpsl xor lods cltd das cld ds jg fucomi std insl jmp dec fwait xor push loop bound mov jne testb icebp lods dec inc xor cmc adc jmp out cmp ficoml nop notb (bad) xchg frstor fsubp stos (bad) jb movsb fldenv sbb adc aaa mov jle test fucom sub outsb jge xor test aam aaa jg push test stos ret cli sbb inc fldl int3 inc fs divl adc sub xchg inc cli mov cwtl inc mov xchg mov ds push lock nop pop sub mov and nop fxch lods mov lret dec mov decb pop or pop jecxz repnz mov (bad) jnp (bad) ljmp stos in jns sbb mov add mov call insl mov mov mov aaa jns jge sbb push mov pop xchg mov lret cltd xor or mov test xor jl test lret andl cmp xor xchg insb aas loope add sub jo sub add cs daa cmp lods mov fs aam jmp ja cmp fidiv dec or and fwait mov mov and (bad) or dec leave scas inc push push xchg loopne loope lahf lret mov lods push sub inc sub mov mov mov mov xchg mov lods into pop fimull or adc lods adc sub js call clc ret and xchg inc shrl je imul inc pop xchg jmp movsb mov ret cmpsl decl mov mov stos push hlt test fadds fiadd jne lea frstor outsb inc out into sbb jge addr16 cltd mov data16 hlt sbb test jne sahf (bad) (bad) or shlb in cltd out fwait les in xchg push sarl int enter push arpl std cmp jl ficomp dec insl (bad) xor push dec in adc pop xchg das jp dec (bad) pusha inc fucomip jp mov (bad) dec lret mov push clc mov (bad) fnop dec adc popa jmp out mov inc lods dec in mov mov cbtw gs mov mov int dec mov mov stos mov xor icebp xchg out add push jns sbb add adc cwtl std pop jg out xchg pop loop and arpl add mov je inc jae jno xor dec outsb leave adc pslld xchg and and cltd xchg adc sub subl das lods int xchg stos ljmp test fistl adc jl scas dec mov lret aam repnz fisttpll jecxz push pop pop xor add (bad) (bad) aaa adc int3 mov fimull sarl int pop data16 (bad) loop add leave adc shlb cmp pop jne enter pop adc jl inc jle inc dec jg movsl aad mov repz mov lret pop outsl xor imul sbb test push pop push push adc dec cmp dec lret cli xchg ds (bad) daa fimull cld jae test sub popa lock (bad) mov icebp ret aam jbe lret aaa mov jo push dec xchg jns nop int3 repnz fcompl outsb ljmp mov inc aam dec xchg jns test sbb sbb push add out dec dec pop lahf mov cwtl xchg jecxz adc and push and xor test ljmp adc adc or mov nop mov adc dec mov cs mov add sub insb push hlt push stc into in mov ds xchg xlat (bad) (bad) inc mov dec sti sbb mov out sti jno adc xchg stos mov mov out sbb mov repz insb push in sbb push test repz sbb cltd sub mov icebp jle daa testb pop add stc js popf mov lahf add lds and pop mov adc add jg test push mov mov or push and rcrb mov cmc sub fbstp lcall sti mov in pusha sbbb nop in sub iret (bad) dec pop popf mov ljmp add push push mov dec cmpsl insl dec xor imul push dec sti push xor pop push sbb mov adc inc (bad) push leave and xor mov fs lret jnp stos push lods mov add cmc (bad) test push xchg mov sub lds fidivrl sbb dec pop xor adc lods into pushf cld and cmc ljmp fwait hlt sbb shlb or push and (bad) pand dec xor loope lret dec mov xchg nop jmp sub fnsave out sbb into cmc xchg test push out adc push out pop popf aas popf jmp jp les inc pop add mov mov sbb adc push rcl pop inc pop push xchg adc gs jo inc (bad) push ret out or inc (bad) sti mov cmpsl adc dec out lret loope stos in shrb lods and push ret (bad) fidivrl fmul aad lret mov fcmovnb dec sar enter xlat mov add addr16 inc xor push cmp jmp les scas or sbb xor mov push in rcr pop xchg cmp mov repnz inc mov or and mov mov dec jecxz xor ss jne and jge popa push jecxz into or gs lret aaa movsl pop cmp jg pop jns ljmp lahf shll imul add shlb lret xchg sahf or insl add roll cmp into cltd inc xchg xchg jns mov psubw or in lret loope push mov cmp fist aam push cmp fimul push gs jns fistpl rcl inc notb pop mov mov pop dec test test push (bad) sahf scas pop jb jo in or mov xchg lret pop xchg and in popf mov ds push mov dec and fsubs hlt jge cli cmp sub loopne inc pop fisub push pop gs repnz lds mov test sub mov lock sub leave imul (bad) cmpsb (bad) xor adc mov dec sub sbb ja mov jmp inc sbb cmp sbb dec push pop imul ss popa nop pushf hlt enter scas rol sbb jg aam add xchg test pop push enter lods in pushf imul jae xchg jmp jg sbb bound jmp int sub pushl pop and stos mov or lcall cs lods or mov mov mov js into rcrb push jmp insl cmc xchg push scas mov mov xchg and mov jbe jbe dec mov mov mov mov or dec lret pop or test shll add mov adc and pop pop mov push arpl jne sbb fsubrl jnp cmpsb jge outsb into sub repz (bad) std test xorb sahf or dec xor leave push add jmp fldt js or scas dec mov lds rorl in xor rcrl mov xor pushf jno,pn add jg imulb gs aas ja add (bad) jne js xor out cmp push cmpsb mov stc popf dec (bad) pop adc mov cmp lds dec xchg js xchg sub test insl mov dec mov lret dec imul xor fcomps leave cmc out fildl mov (bad) dec out inc mov sub push pop mov sbb push dec inc cmp pop inc jle lret jle jg fwait pop sbb bound and bound cwtl mov lods lea sub aas pop cmp and jno aad lea js jnp out fimul dec arpl arpl hlt inc xor icebp add and scas loopne jne mov test cmpl lcall sub dec cmp xlat mov inc add lahf loope lods lahf mov sbb inc aaa xchg xchg lods push inc pop push call sub rolb mov jno sbb adc push sbb push lret push cltd and mov jb pop mov daa jp cmp ss mov iret mov pop xchg out xor push int jne fstpl data16 lods push loope mov repnz mov int3 subb pop jbe aad mov jb pop int3 gs push js push jno sbb rol (bad) mov std dec fldl cmpsl sahf mov jecxz je xchg inc xchg push xchg xor adc xor mov inc in adc push adcb cli mov fbld scas fisttpll aad pop sub xchg add adc inc cmp enter add fsubrp call inc scas mov or xchg rolb loopne stos mov icebp lds dec pop mov mov add decb fcomps (bad) pop adc mov jae iret leave jl (bad) roll clc mov popa push cwtl shrb dec rcl jge dec mov and popa test lods xor (bad) sub inc push mov (bad) (bad) mov insl leave (bad) sarl mov cmp outsl sbb lock pop enter in cmp gs or mov jge (bad) mov imul fidivl xchg push clc call add inc test ds das sbbb sbb rcrl inc aad enter xchg inc popf cwtl push jp dec sti cltd idivl stc pop loop mov adc ret fildll mov out xchg mov sub jno mov cli idivb rol out mov ds pop push (bad) sub add lods mov call or push fnstenv mov lahf shlb lahf (bad) leave push or arpl xor mov and ret sub and aas fdivrp jnp pop mov pop (bad) and fcmovu xor std (bad) imul in mov test xor mov fisttp loope roll add (bad) daa xchg mov dec sub adc stos and sbb lea loope push xor mov call mov movl lods rol aaa in or dec mov pop (bad) push (bad) (bad) fnsave push movsl adc rolb cmp or nop jbe push jns adc adc add je pusha aas mov lods cmpsl dec lahf xor dec loopne test je pop jmp push js adc imul bound loopne ss dec mov mov inc pop jmp mov sub pushf ss call mov stos (bad) push clc and fsubrs jbe fsubrs jns or dec into xchg jns outsb popa sti les or push push pop mov subb fwait sbb (bad) mov mov xchg dec mov into and gs daa lret in jp movsl repz cwtl jle,pt mov test dec push ljmp neg cmp (bad) ja push popa xor sarl push mov xchg and int3 (bad) out mov jno decb aad xor stos jb inc sbb enter dec out mov sub ret (bad) cmp rolb insl mov ljmp hlt in mov push mov ja push outsb cwtl aas or cmp xchg gs inc mov les jp jge fidivrl inc test mov dec adc add ss outsb adc roll into nop dec add push mov pop js out shll (bad) sub or cmp jno rorb xchg iret movsl js lds into movsl ret repz jo inc and add xchg and nop cmp push sub ret xorb mov sbb add push (bad) cmp into mov lock pop shll aad dec mov popa int3 add jo loopne xchg pop outsb fnstsw xchg aad push sbb fisubrl push les mov stos cmc inc sbb inc pop pop mov addl xchg int3 inc (bad) aas fist pusha inc mov jns subl fbstp out mov inc and jecxz loop lods add inc xor ret cld adc aam imul rcrl (bad) jno out adc sbb xchg dec push mov int fnstsw cmpsl jg icebp and xor sahf xor push (bad) lods ret subb jo imul xchg outsl fild pusha jo (bad) icebp imul sub in mov ja std int sub dec and pop adc mov mov push dec (bad) pop in lods movsb ss xchg movsl in ret cmp idivl jge jle jns fdivrp adc inc mov jb or mov loop inc push mov mov xchg in aam sub mov dec (bad) ljmp ficoml adc xor leave (bad) cmp pop mov mov sub sti sahf ja dec (bad) and push sbb test enter sti jmp mov jns sbb xchg popf pop adc push fwait or cmc jno jae push xchg mov mov ljmp xchg dec in rcrl imul andl or stos add call inc inc andl xor dec mov arpl out jmp pusha lea sub mov aaa addps sub inc stos mov push jle repz (bad) nop arpl test inc pop std push out loope fidivrl xor xchg mov (bad) cmp mov cmpsb or pop add cmp pop pusha int3 pop sbb mov mov pop xchg cmpsl mov lds adc add push mov ds les jp push sub push insl (bad) mov popa xor sbb and punpcklbw mov mov jns loopne lock stos test dec push push xchg mov pop and loopne jb pop scas add ds lds push xor jg xor leave movsb xor adc pop sbb xor int mov and or in jo fimull test ds ret xor ja sub mov cmpl jp and addr16 int3 mov xchg inc lcall stos dec mov stos insl cmp push xchg add lods cmp xchg (bad) in mov mov jo in push sub xlat roll mov jbe push dec out sub test es jge xchg shlb sub pop push push insl sbb call into dec aam dec sub adc jge test fistpll jb shr clc cs je test rcll lcall mov xchg and loop mov out sub xchg add cs lock lahf inc clc imul bswap add es add mov fs into mov bound jb sbb xor (bad) xor mov enter sahf xor loope es sahf arpl rolb stc push adc sub decl fstpt mov pop mov das leave inc xabort popf arpl dec addr16 add fbld insl or push es (bad) in mov in call or rcrb shlb cld rcll in pop dec fdivp add lods or adc out int outsl push (bad) mull pop movsl and push pop mov scas adc jnp stos inc push (bad) lods stos lea imul loope mov mov test mov lcall ljmp (bad) sub daa sub mov incl xchg sahf push out arpl add testl fxch mov jns inc mov out or xlat fiaddl sub sahf xchg jle cld cltd xlat sarb xor scas pop mov outsb mov in inc pop dec addr16 xor (bad) js in test ds jo mov sahf lret loope insb aaa decb dec leave fcomps cmc fldt adc jp inc data16 cmp andl stos in repnz not sub js and cmc leave cmpsb adc xor lods cld pop lret cli mov fist test es les xor aas pop pop mov enter dec add push mov gs repz incl push cli push das insb (bad) or out jmp jne and xchg stos incl orl push pushf xchg lret xchg cmpsb stc hlt test lret movsl test leave repz mov pop aad or add sahf xchg jmp mov and adc sub inc ret cld arpl and (bad) addr16 push lods push mov pop movsb push mov sbb sbb mov sbb cs sub ss imul fsubr dec aaa cwtl cld xor and mov iret mov stc xor repnz clc lock shlb (bad) mov ficoml popa lret cld pop imull outsl rolb int sub clc pop mov and push out stos and mov jecxz scas push sbb jg out vxorps cmp jp or aas inc and test add repnz inc xor rcl jae ljmp cmp int and mov jne inc inc fistpll subb sti test out xchg xchg orl jmp imul loope std movzwl cmp flds xor xor dec (bad) test rolb and mov aad dec sbb and pop cmc (bad) (bad) call fist or arpl mov adc sbb adc push xor or lret xchg sbb pop sbb cmpsb arpl inc dec push adc (bad) dec loopne push or xor jne mov jo enter (bad) mov popf in sti mov outsl sar dec xor or pop add (bad) sub inc ret les (bad) (bad) dec inc push call or pop pop jns (bad) mov ss sbb shr subl fwait or inc inc std out dec mov mov cwtl inc add adc and mov adcl in push les xor mov jecxz sub inc enter inc mov stos or popf adc popf inc popf and inc int3 xchg into into in dec shlb (bad) xor and cmp pop cmp sbb (bad) pop lods ds (bad) mov xchg inc pusha inc es bound jle gs (bad) aaa in (bad) in fcompl lods jno idivl outsl pushf movsl xor imul dec daa cmp in push sbb and pop sub cwtl sub dec cmp fildll sub sbb pslld repz adc xchg pop and popf mov and xchg popa ljmp push pop push mov pop iret mov jmp fidivr test (bad) ss xchg mov pusha popf push pop inc adc icebp out mov movmskps mov mov jg and dec or inc xchg xor loope data16 sub outsb xorb psrad sub cwtl imul sub inc std mov fimull mov jae cmp mov stos ret stc and insb push inc callw push (bad) test inc jbe cmp fild inc call inc inc sbb cltd pushf adc ja xlat in pop lods fcmovbe roll jno enter add jne or xchg xor adc push or jae xor jge fnstenv mov xchg and ja popf mov sub adc fs push ret test xor mov cmc dec xchg push cmpsl add jl fwait mov inc adc andb or xchg xchg cmpsl nop ljmp test push cmc insl and inc mov or dec xor int ljmp mov push (bad) jb (bad) pop inc xor scas imul sbb int rcll cmpsl mov add mov dec mov push push add push enter sub or pop popf mov push lret icebp xchg mov add notb push xlat test fsubl fistpl sub daa pop pop popf cltd sbb call pop push adc inc fsubrl xchg int3 lods jle cltd stc insb dec gs ss insl popa cmp push push aam add add push call clc clc add jge cmc (bad) push mov push out aad push addl mov aas push jg xchg ret xchg ja rorb adc inc or sub mov test add xlat sub adc cmp movsb (bad) imul add cmp pop lcall inc sub (bad) mov clc test mov xchg loopne je (bad) xor test dec push xchg mov jl inc dec mov push pop mov inc loope sti pop sbb sti xor test lods sub gs inc cmp clc push jo ret out insl sbb add loop scas push ja adc inc fwait aad pop mov insl ljmp cli mov push or ljmp add jmp sbb int3 dec shrb inc (bad) xchg add and mov jle sub sub mov push add adc aad sbb sarb popa stos cmc jne mov xor call lcall jnp adc fimull jmp cmc outsb insl xor lret loopne pop sbb inc mov jecxz std cmp repnz lods addr16 adc inc icebp sub repz cwtl sub ljmp xor pushf hlt dec repz fisttp dec insb xor les imul xor loopne movl es adc aas cmp dec enter in add mov xor jbe mov add and pop aas cltd push test push xchg outsb sbb lock fisubl adc add sarb into (bad) mov push dec arpl pop stos cmp jae in cmp cmp or les xor cmp mov push xchg jno out jecxz jnp pop call jae mov cmpl test test ljmp push mov or jns out je xor popf cmp add mov lods cmpsl cmp int3 xor dec loopne mov mov dec fcomi xchg ret neg sbb dec cmp imul sahf aad (bad) jne adc lods mov pop inc cli daa and outsb add arpl sar imul cmpsb (bad) and xor test scas fildl jecxz jbe push shrb int je popa jns mov in leave rcr test jecxz jg pop sti jp in rolb arpl dec add mov loopne xchg mov cmp (bad) hlt mov shl xor int3 xchg adc fadd mov adc ljmp out pop lods mov mov jge xor mov mov lea movsl xchg in sti outsl sti aaa mov popa fisttpl fldl dec xor lock in sub das or negb test (bad) jbe add cmpb ret or inc pop sahf dec ret sub popf sbb or or jne clc mov call (bad) ret push aam aas mov out insl jns js or adc js jecxz jmp adc cmp mov xchg dec pusha inc adc or adc ds sahf ror xchg lahf mov gs stos xchg ljmp es popf in or daa incl hlt insl or scas adcb or add je dec scas push cmp fcomi sbb in mov repnz es lret fidivrl lods loope (bad) xchg mul inc repz and jle pushf xlat stos pop sbb addr16 lret mov imul and add add push adcb or inc mov test pop subb test mov xchg jmp rorl adc test mov push jle out mov cmp and (bad) lahf orl icebp pop icebp inc imul out mov ss mov add arpl popa inc xor adc inc xchg inc clc sbb cmp das inc xchg in fdivl test add ficomp push fwait lahf jae dec leave adc test jbe mov test or nop sbb dec sbb inc fwait sbb (bad) cmpsb dec les push jl cmp ljmp cwtl (bad) je add cmp add xlat lods orl enter pusha cmp (bad) test mov add push xchg jnp jmp jp adc mov pop inc xchg sub int mov cmp xor xor les xor inc pop xchg stc sbb fnstenv sti mov test movsl mov (bad) repnz stos test std sbb jns jmp cmp sbb sarb movsb nop push pusha ret ret mov mov lock lea fimull pop dec or test movsl mov cmc mov xchg add (bad) lret fldl insl ja test clc jb lret jl or jg adc add adcl cmp mov daa lret mov jo mov adc test ja gs popa xor addl xchg sarl sahf and dec add dec dec scas or push mov cmc dec jmp lea pop jg rcrl push sbb cmp outsl (bad) dec mov mov inc mov sub mov jg fildll inc sarl ret cmp test insl dec xchg jecxz dec call cwtl mov push push or xor and mov xlat mov icebp add jmp push adc fstps cmp (bad) cwtl sub mov pop call jp movsb jb mov xchg or mov data16 mov mov sub stos pop xor cmpsl mov enter sub inc stos cwtl mov das movsl ss outsl inc push inc rorb (bad) mov scas inc xor mov mov cs int out div add lret testl je popa inc xor sbb movsl xor idivb (bad) xchg in movsb hlt jmp mov jnp mov sub rolb in (bad) or imul pop int3 aaa push inc out push lock cli push adc dec adc sub test in adc or mov ret cmp lods jmp scas ss into lock lret mov (bad) (bad) iret mov loopne mov jbe fisub lods and xchg iret dec loopne pop iret xor sbb mov cwtl mov sub push std in and mov xchg mov punpcklbw push lahf add and js cmp push jae (bad) jl dec mov (bad) (bad) or mov adc addr16 pusha rorb hlt insb out mov dec adc mov mov dec daa aas aas insl bound scas stos pop sbb adc ficom jecxz lods inc aam movsb sbb xchg lods pop (bad) repnz pusha inc dec andb inc adc adc cmp inc adc je xor ja sti test mov add ss add outsb lret adc adc jbe jmp movsb and lds leave cltd test add nop (bad) stos or mov mov std cmp sbb and sub rclb push lcall cmp scas loopne (bad) adc aad push sub cmp fwait clc mov or push push push inc push in cwtl push movsb cwtl add repnz js pop std push pop pop jmp pop test cmp dec leave rcrl rcr mov push jbe popa cmp mov icebp out add loop iret sbb outsl xchg sub jno scas enter das scas lea ret rorb xchg inc test pushf (bad) sbb mov je cmp (bad) in popf les test dec sbb les daa jne in repnz scas sub roll and scas jnp mov lahf jno and cwtl xchg cs aad push (bad) push dec mov push mov in pop sbb test (bad) bt fcomps sub pop (bad) je hlt sbb sub sar sub pushf ljmp jae (bad) fs iret mov xchg out mov mov divb adc pop das fiadd mov paddd add in add shl pop cmpl or dec fs leave fldt dec push out (bad) cltd sub shll mov and sub fldt out (bad) das addr16 xchg in dec movsb and cld dec adc fldt into aaa popf lcall sbb ret fsts xorl pop mov bound add add lret mov das jle (bad) sbb pop pop and xchg pop sub and lea mov lock cmp popf xchg aam leave sub sbb cmpsl mov cli aad xor jae (bad) mov or pusha mov cmp in mov lret push aaa incb and xor scas mov pop sbb je push (bad) sub es roll xor les lret mov jl xor jbe ljmp fs sub jge pop ss jp lods das sti cwtl test jo dec mov fsubs (bad) sub mov cmpsl dec out sti lods jb sub add jecxz loope mov xchg les or sub fnstsw out es fincstp sub adc push ds xor push int3 (bad) nop outsl movsl push (bad) fnop cmc or pop hlt mov js negb ljmp mov fnstsw loope adcl (bad) into push jbe ficom sbb fsubl (bad) push push mov es inc sub lret pop fcoms dec ja (bad) fistl xchg xor or hlt ret xchg lds stos ret jl and mov push push cmpsb cli or js mov arpl or dec mov add rclb push out adc sub push rcll xor pop lcall movsb ficoml int sbb mov andps (bad) push es add clc cmpsl fild cmp mov jp adc or ror sti mov mov lods mov mov loope mov (bad) mov mov fcmovb fs paddb mov add scas dec in out fimul mov cmpsb mov lahf pop or or imul fdivs sbb dec xchg sub sub pop popf and fdivrs pop cmp dec sahf or dec push push xchg pop inc cmp ret push (bad) inc nop dec ficomp cld pop aam popa pusha inc mov (bad) fisub xchg ss inc mov sbb pop jns mov idivl mov int in or fistl xor cmpsl fstl and xor repnz or (bad) mov in mov aaa test cmp insb iret mov call add xor add mov mov push pop stos xchg mov push popa cli enter cmpl lcall mov cmpsb and mov les sti ret aad mov fsubr lods lret pop xchg pushf or or jno ss add adc inc ljmp inc dec outsb (bad) xor cld (bad) call dec rcrb inc call out mov inc mov jno outsl sub rolb shrl std cmp push add xor lea mov push sarb xor push mov push scas adc xor jbe pop (bad) imul xchg jne mov repz pushf (bad) xlat xchg and movb inc jl outsl xor or and or dec push add pop inc (bad) lcall (bad) out or add add je mov js mov dec icebp movsb adc lret (bad) aas fmul call (bad) aaa pop out ds cld es or aam jne jno in add add mov jg sbb xchg xchg test dec inc or lcall leave mov sub stos roll dec xchg (bad) xchg xor dec and mov (bad) outsb loopne cltd or loop xor inc cld mov bound arpl movsl sbb inc mov lret pop in pop xor or cmp out mov or jb out mov lret out (bad) pop add (bad) in mov popa stos pushf test repnz cltd sti out xor les fstl lock (bad) shlb add inc mov lcall leave and loop repz (bad) (bad) test inc fwait xchg add adc cld xchg mov mov pop jne (bad) cmpsl dec cmpb and outsl cli ja add ljmp mov add rcll jae or add aad inc push test icebp jl inc arpl ds cld sahf cmp fbld push (bad) jne xchg cmp jg mov mov std pushf rol lret mov mov mov addr16 loop xchg ja rolb sbb dec cmp xchg je ret mov enter or dec or mov push dec inc sub sub out (bad) or and decl mov dec test sub aad mov rcll fidiv ss pop mov es dec addr16 mov ret fcmovbe cmpsl or push gs mov jne daa lods add test sbb mov pop in or dec popf mov cli xchg int fdivrl mov rcll test mov mov inc cmpsb push mov sub arpl test adc sbb fdecstp mov mov push mov (bad) clc int das xor xchg les xor push data16 dec repnz aaa int dec sbb xchg out decl lods aad push add xchg (bad) cli enter mov xchg sub mov gs aaa imull sbb cs test sbb rcrb fs sbb out dec adc pop pushf jbe movsb addr16 pop jno rol inc xchg jne cld sbb jp mov xor jmp movb sub xchg mov mov mov inc jg aad push in xor es loop (bad) sub jmp adc arpl mov mov fsubrs repnz mov pop (bad) xor jl and ss ljmp sub jno mov and sti jmp jbe scas xchg fimul outsb iret out iret or rcrb test in mov int3 xor xchg pop jno mov inc and fs push sbb sub inc out lods dec adc cld mov int xor clc push nop jge fcomip in and lret xchg mov scas xor cmpl jns pop loop jns push leave fyl2xp1 addl dec mov pop iret je xchg stc rolb in popa fldl jle xor jnp mov in xchg pusha inc sub cwtl stos add aam rcr loope stos sbb xchg ds scas mov int3 loop xchg jae (bad) hlt cmp call fs (bad) repnz mov int ret sbb loopne ficomp adc push dec into ss mov je rcr rcrl and add notb out mov fwait and dec shl mov hlt aas arpl ljmp aam mov dec push js and (bad) dec mov cmp pop call mov push pop dec push mov xor ret (bad) jge fldl sub (bad) and sarb cmp aas sub add loope cs imul movsl xchg fwait mov cltd fdivrl aaa adc popa imul dec mov inc arpl or push lahf ljmp (bad) or xchg call jmp pop mov in les aad lock js rolb inc cmp xchg call sub or (bad) pop mov fs sbb mov sub add dec pop mov das shr cmp (bad) inc xlat xor pop pop rcll loope,pt (bad) mov and test mov idivl mov lahf (bad) icebp cltd stos fdivrp test push in cli inc pusha int3 imul ja data16 dec fwait les adc test testl push popf outsl cwtl ret std hlt mov das xor jmp scas push cmpl std cmp into mov fisubr cld out mov call ljmp imul (bad) jmp pushf insl xchg pushf int lods inc loopne cwtl sbb sub in pop jnp add mov sbbl sub dec xchg push sbb adc ds xchg push fsub mov xor test mov imul dec xor outsb dec add xchg push sbbl add rcl jge push sub xchg mov test push test scas outsl sbb or pusha and sbb repnz aad int3 sbb sub (bad) xlat and lock or mov inc mov pushl cmc mov pop mov movsb sub mov ret fcoml popa push and lahf mov and sub std adc sub popf and or (bad) mov xor mov pop adc jp adc add pop popa jg cmp xor push repnz pushf insb mov movsb mov pop fdivr mov fwait cmp cld ljmp std jge jg (bad) or mov popa outsb hlt popf jne mov sub sub outsl lcall cmp call pop frstor xor popw cmpsl (bad) insb jle jo in out aas fildll cwtl sub into xchg inc iret xchg fidivr shlb xor xchg clc push mov addl cltd imul fmull pop daa test stos sarl out sar pop adcl mov inc mov mov jbe or js in jge and mov sbb xor dec dec inc jnp mov loope stc pop push push imul cltd xlat push add mov xor mov sbb arpl mov jecxz (bad) pop inc int dec inc pop dec dec mov xchg and mov mov pop push mov test movsl iret pop decl jno lds push dec inc sub imul cmpsl lcall add push popa loope mov xor cmc inc mov int pop sbb cltd mov in pop insb shll scas cmp out les in insl iret fldl out (bad) outsl add pop call insb std pushf mov lahf inc cld and jge add cld insl jp test adc cltd dec loope xchg mov push lcall scas repz jmp lret jo push jg popf mov or jns imul or add scas dec movsb rcll pop xlat (bad) mov jg or dec lahf and and outsl scas pop int3 repnz test fldl (bad) pop (bad) movsb imul arpl mov inc lock ds pop mov or int fstl out push pop xchg or xchg je test cmpsb iret mov aaa jo sbb aas sub push xlat push adc lret pushf out nop ret cmp dec jecxz (bad) aad icebp iret cmp mov adc sbb sti cmp and cld cltd pusha jnp sbb fsubrs call jb sbb jmp dec lret popa xchg add das gs loopne xchg (bad) cltd call (bad) fwait push xchg leave xor and ds sbb xor in data16 jecxz ret and add mov push fsts sti (bad) negb in test popa adcb (bad) ja pusha in adc pop aam push jmp addl clc (bad) dec int movsb movsl push adcb pop das cld stos daa add pushf or mov lock ja adc xor (bad) addr16 xchg leave jge das enter out loopne daa sarl and repz hlt xchg repnz mov aas jns inc fild or xchg notb or dec fcmovbe lods je fs popa (bad) jae shll in sub addr16 xor inc xor idivl lahf sahf inc sbb in adc idivb inc and mov mov int sub xlat add leave enter jp xchg sbb in xchg lock sub loope xchg fwait pop mov (bad) dec stos pop sbb mov mov cltd ret mov in add adc out aad outsl push cmc stos in sub mov mov ret pop mov in mov push out ss js in jl xchg fstpl sbb dec push ja xchg idivl (bad) xor or mov scas (bad) insl adc movsl xchg sub push push adc pop iret iret imul dec repnz mov cmpsb mov and sub cltd fnsave add repnz int3 and (bad) loope dec jg loope into sub sti (bad) and sbb and inc aam lret push jle shl fstp repz andl mov xor jb xor mov xchg xchg mov lcall js in push and mov mov es repnz adc push mov dec iret lds movb sbb mov lds dec push sqrtps jge imul (bad) das (bad) scas jge dec bound mov xchg push stos (bad) (bad) cmp fiadd jbe sahf aaa clc jecxz lods dec int3 fs mov rolb sub inc or sub push outsl push jmp mov stc jnp neg or out and aas clc sti rcr mov pop rclb movsl xor mov pop js mov lret aas jle (bad) cld rol dec xchg call xchg leave test push jmp mov ret notl ds popa movsl xor ds sbb or call rclb or mov mov sbb aam jo xchg repnz js (bad) xchg (bad) in adc adc mov jmp fistl and movsl imul pop adc xor mov jne test ja or pop not dec in or ror jnp jae test rcr loop xchg dec nop outsb xchg push mov cli pop lahf xchg push lds lcall out (bad) xor bound xchg enter or ss cmp sbb inc int3 scas out xchg (bad) mov loop sub and and je scas int and clc out mulb lock pop inc lea cmc mov mov es andl mov out xchg sbb addr16 mov lea cmpsl test cwtl adc mov out sbb cmp mov xchg cmp xchg js sbb or (bad) sbb or sahf hlt das mov pop or fbld add lds mov or stc lcall inc mov (bad) pop add cmpsb jle mul jb sbb push add add adc nop (bad) popa mov decl (bad) mov mov sub and sbb jge mov loop int xchg clc cltd dec daa push fdivl push xor iret int sbb or cmpsb adc roll xchg cmp in push out and cmp pop (bad) push ret sbb (bad) cmp fyl2x mov lret aas mov insb mov inc (bad) les mov adc xlat mov adc or fidivl mov pop out push push xor jecxz and stos jns es xchg mov xchg jo inc (bad) popa lahf test inc dec inc sarb add xchg test jl out inc or lahf aad repz inc jbe lea outsl inc mov test popa test xchg ja das push jmp in imul xchg push sub out icebp xchg push pop das insl popa cld pop jnp xchg fdivl data16 pop cwtl push xchg sub (bad) mov mov loopne ret push mov and lods icebp dec test jbe (bad) xor push adc and and in cmp fiadd cmp imul addr16 pop fnop mov imul mov dec cwtl pop into jge push outsb in pop add mov fisubrl jbe lcall rorb dec iret into and mov dec adc cmpsb (bad) arpl lock dec lahf push and push pop dec sub into out jns dec cwtl mov pushf mov cmp mov jl sub jp and jo or cmp jecxz gs test aam or fildl push inc jo sti fmull pop mov or mov rcr xor test push (bad) jo sbb and iret aam sbb movsb mov add and ficompl pop mov pusha xchg adc ljmp jbe faddp into movsl mov mov and push dec int hlt testl mov sub xor loop sbb data16 mov pop loop adc jp out bound daa or js inc hlt outsl mov adc movsb test addb sub jmp xor adc jb pop nop popf push pop lea inc pop inc cltd lods pop xor add or int3 sti js push jge sbb aam sub pop jecxz test int les rcrb pop and into hlt pop test into (bad) mov sarl enter and ret minps mov xchg xchg gs outsb jge dec mov out add jmp inc jp mov xlat dec pushf sub cmp pop (bad) and dec xchg arpl jl lret mov mov out pop sub out xchg jg adc repnz cmp or aaa mov sbb sbb and push cmp push (bad) int3 inc call in (bad) out pop jno sbb jae mov je fsubr and xor cmp sub ljmp cmp and je orb mov cli jl or std ret stos call jmp call sub xchg and out in xor and call movsb lods lods mov or jno adc push insl mov fsubrl sbb mov dec mov sub aad (bad) shlb jbe or daa jns adc repnz je inc and cmpsl sub loopne cmp arpl sub les mov mov adc icebp push sbbl test inc cmp jp sahf lea daa out nop out lods mov stos push add ret repz mov mov mov scas outsb arpl inc or call lea xchg rol data16 ljmp mov xchg mov aas into sub js ror adc std add pop xchg es repz iret imul icebp fcmovne cmp out sub xchg xor rclb adc mov mov mov jo (bad) (bad) jge pop call xor inc test es movsb (bad) ja adc test xchg jae xchg xor ficom movl andb mov jnp jg jmp jmp loop das pop lock pop sbb sub das fistp dec dec xor clc cld xchg xchg xchg aam and sahf push movsl neg and nopl in (bad) jmp repz jge sub clc mov lods inc cmp push xchg outsl (bad) aaa fidivl (bad) ret inc push push popf out jo mov dec test popf arpl push je lock cmp pusha sub cmc loop das or mov ja push push lock jbe inc les pause cmp ds incl shrl rcrl scas pop jnp pop xor sbb jo mov lcall aam push mov movsl dec gs push xchg mov repz int add mov or adc lea in mov nop lds imul sub dec pop enter mov pop mov cmc (bad) sarb lods adc sub xchg repz dec popf outsb inc inc jmp inc xor test out sub addr16 in push movsb rolb xchg in jns push lods call jmp ret int3 shrb or mov mov out and cwtl pop es push out mov fldcw mov (bad) jae push lret mov xor mov xchg inc mov gs pop jbe loopne ret pusha lods and dec push adc scas and loopne in das xchg adc enter test scas mov in pop jmp sub add div push sahf int3 (bad) (bad) lret dec ss sub xlat jge scas dec jp adc mov and stos into imul pop addb clc in cmc fistpl sarb pop push rolb hlt xchg mov stos xchg add sti xchg cld xlat jo cmc or jecxz (bad) iret jmp popw pop (bad) mov mov aaa loop push pop ficom adc mov (bad) repz add adc sahf insb jnp imul fistp idiv or xchg xstore-rng push into mov dec push jp sbb push or jbe cltd stc adc xchg daa out pop or xchg loope out mov and push inc leave mov add stos imul adc jl pop or and sbb mov mov mov dec addr16 inc daa outsb ret xchg test inc rcll les fwait cmpsb jb sbb stc into cmp test ror test add sbb sub xor rcl inc scas ja jp push ds pop gs and add and cmpsl mov nop xchg popf lods push xchg sbb nop pop mov jbe cs nop mov pop adc cmc pop adc rolb pusha adc mov mov and mov dec call call adc aam ret test and mov push jne inc xor (bad) sbb mov jmp imul (bad) push out sbb pop data16 mov stos neg push movsb jae ja xor push push out sti push lret dec sbb pop xchg icebp repz inc ljmp lret dec aas pop ljmp mov dec insl xorl add insl aaa pusha inc mov test adc push je xchg xor out inc out sub test xrelease cmpsl xor int3 pushf xchg push mov or fadds bnd (bad) pop and shr push mov inc cltd adc xor inc dec (bad) and push outsl and shr shl scas out mov sub xchg ds popf mov leave and jp jb pop xor push insb ret pop decl mov mov sti xor add test ds and jbe ja stc jb bound arpl push clc xor movsb push out mov jmp xchg mov aas inc dec mov adc dec pop scas pop js mov pusha jg clc push lret inc repnz dec into jns add jmp add (bad) icebp (bad) movsb adc fs and jo sub mov push aad lds cmpsl push mov inc push jl cmp mov xchg mov push inc jns or or adc push xor and and int3 push cli sti outsl out test mov jge jle rcrb mov andb fdiv add fwait fs mov mov mov ljmp inc xchg mov sub inc or in pop ja mov je lret outsb movsb shlb cmc pop bound pop cmpsb aas mov mov popf sbb test loope,pt and in sbb fisubrl sbb dec subb push push inc xor dec inc add mov xlat xchg xchg jno mov std or adc jae das scas das fnstenv mov imul dec and push dec outsl jb gs cmp (bad) fildl lods adc xchg pop jb loope pop les sub xchg outsb and pop mov rclb cli sub xlat fcomps jno adc mov or sbb jb fwait rorl add inc jne dec cmp stc add pop xor imul xchg or dec xchg cmpsl imul mov outsl xchg je repnz mov push jnp xchg inc adc pop out xchg mov scas pop cmpsl cmpsb lods (bad) adc add sub add sbb aaa ret xor popa cmc xchg sbb sub fisubl adc mulb sahf out arpl mov (bad) jne dec lods insl and sbb int shl mov (bad) in dec xor cmp mov mov test aad outsb lret jecxz rorl adc cltd dec pop ror clc cs pop dec jge fidivr cwtl mov sub shrb mov dec (bad) xor pusha cmp mov pop mov push xchg push ljmp mov add lret mov adc adc inc mov mov xchg and in cld mov lret sub sub inc jbe mov addr16 sub (bad) mov sbb inc sti mov pop dec scas (bad) jp mov pop or sbb scas lea mov subl mov inc cs adc sti mov mov aas pop mov mov data16 fistp test sbb enter lds cmpsb dec push dec adc je fxch dec pop xor xchg data16 std ljmp test mov push in and std mov insl clc sub into mov int3 pop out aaa test arpl (bad) mov pop jae xchg jns pop inc test (bad) xchg movsb iret movsl negl cmp mov iret cltd icebp pop mov mov ds lcall cltd add insb mov ja inc jae cmp mov daa popf shrl sub fidiv pop jl fcom pusha xor aam rorl mov test (bad) or pop pop fidivr adc pop scas inc je push sub xor jecxz cmp xchg push xor lret sub fild push push lahf mov dec pop adc cmp cmp leave outsl xchg stc add frstor sarw test insl (bad) jmp jns mov lock dec stos jle popa arpl cmpsl loope mov aam (bad) xor jmp ret movsb imull rcl addr16 adc push loope int fs andl sahf insl fwait push xchg pop arpl lcall pop in or (bad) pop pop or add loopne inc (bad) cmp push sbb and scas fistpl lods pop mov into mov sbb nop neg push xor push sbb mov sub fsts fldcw out fbstp in inc stos sbb xor inc inc cwtl call (bad) adc rol pushl ss icebp loopne fdivl or xor stos mov les push shrl push not std cs in push inc inc addl aaa mov jne (bad) addr16 push orb mov jmp add insb rcl mov pop cmp add jl mov jecxz add push shll xchg leave cltd jno mov cld dec add lcall cmp addr16 cmp jo cmp xchg movl cmp push cli pop push adc pop sub aaa cwtl aam sbb mov test scas xor sbb lret pop lods lods mov add out pushf sbb mov out stos repz push xor sbb pop sub ds fsubrp (bad) cli cmp pop jo mov jno in icebp or lcall xor repnz cmp insb jbe incl jmp fldl fisubrl adc pop sahf test inc fs jmp xor jmp sub add (bad) xlat inc rorb imul pop push cmp popa fdiv je push call mov outsb (bad) mov sbb jmp stc inc or mov push pop enter cltd daa push pop sub xchg (bad) out adc dec sbbb sbb pop imul das test jnp mov pop repnz and gs xor iret int pop ljmp add (bad) sub mov in (bad) imul cmpsb cmp and inc call sbb int (bad) hlt adc xlat xlat lock dec sub jo push lret push cmpsb push sub cs insb fldl out repz pop mov adc inc leave jmp int sub add cmp adc fcompl je lret sti cmpsl loop je xor pop (bad) (bad) mov jl or cli cmpsb mov (bad) ljmp sbb (bad) and lret xchg stos jo stos pop mov sbb fwait xor nop cmpsl js cmp add aam and and xor mov jbe gs push pushf jns jnp add in mov pop mov dec sub mov sbb inc ljmp scas jg roll neg lahf add jns repnz insl out sbb mov xchg mov decb les mov lds jge pushf push and enter call dec cmp in and (bad) fimul jl xlat xchg mov sub mov out sti ficom mov mov out cld orl cmp test test cmp (bad) sbb daa cli add and repz mov or mov aam mov pop js mov dec inc cld fdiv pop fisttp push rorl rol jg jecxz sbb hlt inc xor jle int pop dec mov out cmp aam push loopne scas ficomp inc inc jns mov mov inc pushf fimul and push fs sbb or loop push cmc loop inc pusha fdivl into test inc jns fbstp (bad) fstl and push pop xchg fdiv adc jmp scas je (bad) add inc dec (bad) xchg adc cmovnp arpl test out clc mov cmpl ja xor dec mov int3 popf cmp push sbb xor sbb jns add leave insl int3 adc mov mov stos or inc out xchg push or xchg shlb cltd push out xchg xchg arpl pop pop notl mov stos sti out ss (bad) stos xchg jl insb in fdecstp push ss ret or ret in xchg pop lods mov xchg loopne jge sbb sub arpl pop (bad) lret enter jl stc dec daa inc push xchg fisub dec repnz xlat mov jmp inc insb (bad) pop loope xor pushf mov adc je rorb sub xor iret movsb in mov sbb aam (bad) or jns lods push clc cbtw xchg sbb (bad) mov in xchg sbb sbb or fcomp xor or mov test stos dec jnp mov push xorl add dec out cmp add jae xchg sarl jae pusha divl int cmpsb and adc mov pop es pop sbb dec in xor (bad) xor in fwait mov push xchg ret scas push (bad) aaa xor inc push mov cmp pop mov cs inc loopne push sub aaa jnp stos xor cmpsl lods test mov dec inc and pop pop xorl sub sbb and xchg sub pop mov xor pop sub aaa push insl cltd (bad) rcl fmuls xor inc jle jg cli and clc add ljmp mov hlt fstpl lret inc dec mov mov popf mov cltd push mov addr16 mov (bad) xchg mov popa sbb cltd fbstp mov gs or add jb aas mov sub int sub jg or mov shlb xor gs bnd into sbb xchg xchg cs sub sbb cmpsb cmpsl sub inc mov mov test into mov data16 (bad) xor sub xor in jle or repnz pop cmp push mov fistp push adc jo int xor (bad) push xchg std or mov push lods jo adc sub jg mov xchg mov leave adc je jl xchg adc xlat push inc mov cmpsl xor mov enter negl inc out movsb add sbb aas sbb jecxz outsl add mov sbb ja daa fadds pop dec and xchg outsb sarl cmp int stc cmp fs xlat insb jae mov ss (bad) xlat sbb mov in jno inc testl fcompl mov or mov pop cwtl or fcompl push jg lods movsb pop loope rcrb es cs test mov xchg xchg movsl mov inc push mov lahf fwait xchg movsl mov xor inc inc mov jmp mov jbe leave ret jg (bad) lahf setno xor xchg mov lea xor and nop mov mov sarl loope icebp sbb test add fildl int3 out int3 add clc out push push cmp mov cmpsb add test lods je (bad) sbb ret sti pop inc mov and in mov cs fldcw add neg mov scas xor lea mov sbb gs mov mov add fisub mull fsts adc int3 cmp push mov mov mov in push lahf pop jl pop or movsl inc call and ret xchg xchg xor loop andl insl ja repz mov adc mov scas pop loopne pop jle lock cld aas call pop lea jae je imul loop adcl outsl push add lds insb sub pop push loope ret lock and cmp out inc ss and (bad) push pop jae sub pop cli push add iret xchg (bad) ja push out repnz jg (bad) sub lret leave aas xchg stos push outsb mov lcall sub (bad) xor imul cli cwtl inc call lret xor jnp (bad) xor in mov dec sbb jp je dec jb lds lods mov enter insb into cmp jge mov push scas jne inc aam mov xor sahf mov mov jnp stos pop jle je mov call popa pop test shrb inc bswap sub xchg dec fisttpll pop adc push fistl or pop dec pop loopne adc aam push clc aad dec jnp and lock jp scas out mov and adc gs clc xchg test cmp rcll and pop scas test std adc mov cmp pop cmpb jmpw out xorb xor and add sub jbe lcall int3 mov loope inc and cmp push add sbb (bad) repz cmpl hlt scas mov (bad) adc lcall dec fstp dec and sti xchg cld sbb jae ret pop inc movsl xor shlb cs pop decb loopne pop add add (bad) mov negb and push cmp rcr jg mov sbb push mov dec pop ret mov fs add mov jle push pop cltd mov inc cmp jp push jae mov xchg inc xor mov inc imul cmc lcall out xor nop cli repz sub (bad) jae pushl int3 push scas pusha mov adc mov add or imul int xchg ja jecxz frstor push fsubrs es dec mov mov and (bad) in xor in xlat test and lea jg mov cwtl adc nop or dec clc clc dec add push mov jns addr16 fstpt mov jo fimul fldenv or lock lock pop sar insb movl (bad) push stos clc or leave jl test testb push call jg xchg int3 test mov mov adc and popa leave stos cmpsb inc cmovle add sbb shrl ret pop xor in (bad) aad outsl push mov cmpsb call mov stc xlat lret into sbb push nop jb jecxz add (bad) jns mov add pop in cmp fs and or mov fisubl jb adc xor (bad) decb das inc pop dec sahf jge jecxz fcomps sbb rcrb test mov or add loope push pop daa (bad) arpl dec cltd gs data16 jbe into push mov xchg clc pop jb rcr jbe pop and stos fnstenv lret fdivrl test cmp bound lods lret (bad) pop js jle scas jmp and mov sub inc stc cmp jae sub and mov dec dec mov push mov inc jae mov popa cmc push or push pop adc aad sti mov ja in lcall lock mov in dec push mov push xchg (bad) data16 push jbe mov movntq jns cmpsw mov test ds sahf out mov ljmp jl fwait dec dec (bad) push sub movsl mov fs pop cltd dec push jb push sub pop pop repnz sub or mov jbe sub repnz mov hsubpd add push aaa cli hlt push loop mov ret ret shlb mov sbbb push scas add scas inc jl stos inc add sub jl or sub cwtl jge and fldenv pusha inc nop cmp push call inc xchg js,pn add dec mov dec lret xor or imul neg or mov pop in push aaa adc pop and into in mov add ret jecxz mov fwait and add inc mov out in fptan cmp inc push inc roll pop ljmp push adc dec call (bad) mov adcl andb into icebp stos push int3 cli leave jns xor cmp mov mov fistp arpl xchg into adc cmp cmp xchg shr mov fidivl test xor cmp sub arpl sti js push loope loope sbb mov mov cmp adc int3 xchg or pop pop jmp cmp in rorb cmp stos pop data16 in jno insl and insb fstpl inc daa (bad) lock jb sbb ds jmp adc mov enter daa lea (bad) xor ss jo inc stos pop push testl pop xor js insb mov cmpsl jp popf xor insl leave (bad) mov aaa pusha ret jle ja (bad) out ret pop mov movsl mov pop lret (bad) sbb mov sbb mov mov adc sub fimull push inc cmp cwtl aaa jmp pusha imul enter xchg out mov (bad) lods mov and clc sbb lock das leave cs inc ficomp add sub scas into inc decb jns incl stos or pop dec sti mov jbe mov out test and dec xor ds push addl aas mov xchg (bad) pop std loop ss mov fwait xor mov adc cltd xor dec mov movsb cmp (bad) cmp add or xor inc std out fsubs sarb push loopne cltd push mov loop out add xor dec lods cmp int3 cmp sub pop xlat push mov lock cmp mov sbb push pop lret sbbl popa lods pop clc mov xor xor mov push cmp mov mov pmulhuw add cmc jg lcall pop repz imul cli outsl cmpsl ds sbb (bad) jb and inc xor cmp aad mov ret mov sub pop jae mov (bad) fadd ds (bad) sub cmp andl stos push inc mov in insl add jns imul mov shrl sahf scas adc mov sub cmpsl dec sbb mov add (bad) addr16 rcll lret fsts repnz jg std test cmp pop or arpl imul mov in inc fsubl jae mov cmpsb mov sbbl leave imul adc jmp mov sub pusha insl pop sub lock or out bound inc cmpsl test mov pusha xor cli aad xchg aam ss jmp in cmp cmp (bad) xor pop addr16 fldenv pop sub into pop sub sarl (bad) js cmpl lods lods aaa dec int3 negl daa sbb ret scas push cwtl test mov inc cltd ret movsb nop aaa mov fsubs out pop pop mov lcall inc mov sbb xchg jno ljmp je mov aam insl mov jle fmull mov xchg cld xorb cmp pop in (bad) mov dec jl inc insl es in pop divl das xor cli cmp dec xor push dec pop xchg enter aad adc pop repnz insl inc leave sbb jns imull sub sti lahf adc mov push inc mov jno jne lock sbb jl mov lods pop xor sbb ss cli mov call hlt push rorl sub pop rclb xor inc adc dec mov cmp stc fildl and loope dec add jo jb cltd imul sub jbe ficomp sub les stos faddl mov fwait fs and ds dec adc or xor and pop pop adc fimul addr16 xlat lret and mov in xchg jo or pop (bad) xor nop xchg int3 outsb out inc repnz pushf mov inc pusha dec mov mov pop dec push insb cltd jbe mov outsb imul push fdivl test out jmp mov imul lahf adc sbb and dec (bad) nop push iret cs fcoml mov pop add jno mov cwtl jns aam jge aas inc lahf in mov sub fist jnp mov dec mov scas jp aad inc (bad) loopne rcll inc js or in movsl and xchg cmp (bad) repz scas jbe mov or and dec push mov pop jecxz mov mov mov pusha decb popa sar pop mov cmp lahf cmp lods mov cmp test inc cmp insl dec xor inc cmpl mov xchg jns mov adc lods cwtl js (bad) jae mov arpl push jo push add sub loope shl inc icebp arpl rcl mov lock (bad) aam mov fwait add pushf mov sahf add aas jle cmp inc mov scas mov xor in cmp pop and xchg mov mov pop adc inc xchg adc call dec aaa lods mov lcall cmp sub andb int3 mov or (bad) in repz or (bad) inc in mov stos cmpl mov mov inc xor push push scas loop divw jbe ja les rorl mov clc es dec in add lods enter push fsubl xlat sub mov push ffree mov jno test mov imul int cwtl rcl mov in pop xchg dec push sub repz ret aaa aad adc jbe push (bad) out mov leave (bad) dec pop cmp sbb out sarb repz xor popa mov hlt mov outsb mov mov or jle fnsetpm(287 mov xor (bad) cmc and mov mov cmp stos lahf mov push aam lds addr16 pop pop mov and iret and sbb fnstcw aam add fnstenv (bad) (bad) jmp mov insb sbbb push sti mov data16 cltd fwait aad test sahf cmp mov xor and inc enter ds mov mov call ljmp xor adc inc ret sbb arpl sbb in test addr16 rcrl mov stos movsl mov out jbe clc pop int mov je movsb inc jle jo mov mov addr16 lret js daa xor xchg sub in int sbb incl mov mov sbb push movsb clc pop imul cmp inc add dec dec jb in bound cmp mov push cmp ja xchg clc lahf inc fs sub movsb xor mov push test scas test inc in fucomp test pop rcll mov xor repnz sub add daa les in dec push stos lods aaa aad in pop adc cwtl lods xchg xchg pushf gs mov sub mov dec pop or push es fisubl out int3 leave loop pop in mov outsl adc es mov out ds pop or mov ret (bad) sub cmp jnp cmp divb dec pop (bad) popa imul fsubs xchg jns sbb push outsl aas mov xor out in mov sti fnstenv (bad) jl cs mov xlat outsb jmp cltd xchg fcmovnb jbe sbb outsl and jae (bad) (bad) fwait pop iret (bad) cs push and jl fs mov fwait dec dec push fs rcll popf cwtl loopne out jo sub (bad) or pop jg mov and loop popf inc mov ja jnp scas arpl pushf je stos divl sub (bad) ja (bad) mov add (bad) (bad) sub mov sbb shll xor sub sbb cmp inc jle xchg xchg xchg cmp mov mov das movsb lret lret push xchg or or jg mov inc mov addb test insb fldt add sarb jnp and popf hlt cmp ljmp jge test pop les iret adc subb leave mov int loope xor scas cmpsl mov jnp jo inc bound inc out pop lock mov ret pushf inc (bad) fidiv pop (bad) mov iret divb adc popa mov std lcall adc ss jbe cmp xor fwait adc push aaa lock shlb mov ja cli add dec out cmp data16 das lods (bad) dec xor pop sub dec ja (bad) leave faddp ror repz cmp pop and (bad) stc mov pushf push adc xchg mov stos mov add (bad) jmp pop dec adc mov aaa cmp and aas into ud2 or sarb push fisubrl fild popa cmp xor (bad) mov lahf rol (bad) (bad) fnstenv sbb adc xor jl and es or in sbb bnd orb sub xor addr16 pop sahf mov movsl ja int3 int in jmp outsl fcomip repnz adc mov nop lahf es das daa std sbb cmp out inc mov and jbe cli enter sbb xchg push xchg movsl sbb and jmp sbb mov push rcrl push fcom repz and xchg jmp inc out aaa mov mov dec dec inc jno arpl std (bad) push cwtl mov iret orl ja and pop and add in imulb popf jnp stos test push fmulp fwait sbb aam movsb dec mov sar jmp pusha scas rorl adc (bad) and and mov cmp mov iret mov or icebp or sub aas and out jne push jnp int ficompl out jle sbb adc out and daa or test ds xor scas xor les leave ficoml lret out dec cmp test mov fdiv pushf pop (bad) out clc sarb in imul or fild jle les or jnp fdivrs dec std mov or mov push mov sbb (bad) int3 out inc mov jne rcrb and adc xor fsub mov jg gs out fiadd lcall into imul and mov dec pop cli dec dec jae pop mov pop xchg add ds push shrb mov aaa mov fstl test dec add lret (bad) jle (bad) mov ds mov pop pop lea loop lods mov out leave mov repz fcomps cs arpl dec xchg test int3 add cmp and imul add rcl sti mov ja inc sbb cmp mov mov (bad) push pop insl arpl mov xor in and inc movsb xor fcoms out cmp or xchg leave (bad) mov jg mov cwtl pusha dec or xchg rcrl dec xchg or mov insl push jmp jge mov add add mov test or sahf (bad) ja in mov iret mov xor ffreep pusha sub xlat pop scas mov leave dec xor ds inc cmp rorl mov gs mov jecxz cmp sub in popa pusha repnz fwait lock mov cltd jmp sub stos mov dec int3 ljmp shll (bad) div pop mov clc (bad) xor mov ljmp jmp push adc js xchg pop fs (bad) jne pop cld pop mov (bad) pop out imul add dec xchg xor enter push push imul pop or mov pop cmp pop jnp sbb push cmpsb aaa aas push scas xchg pop push leave les imul addr16 dec leave add mov mov arpl cli fistl into jnp and mov iret call xchg add pop cmp aam add lahf out rcll shrl dec repz and clc cs cmp and sbbb mov pop mov push add fsubrs jno push mov imulb cmp add sti repz fcomps lods cmpsl dec push ret test mov push inc pop pmuludq je lods out xlat aaa sbb inc or aas pop mov iret pop sbb cmc mov cmc bound data16 dec sbb imull arpl fsts (bad) fnstenv loope fwait leave and jae sub cld leave hlt jb xchg lock xchg stos adc push imull xchg in into das pop stc std inc sub sarb xor in xchg jg xchg or sub mov push push in pop mov nop icebp jns adc jge inc pop test arpl pop fs pavgw push ret adc jne inc dec mov lret pusha mov mov test xor mov sbb int pop clc jmp fs sub scas xor imul sub push mov iret in lds scas sti add mov mov addr16 push insl jl (bad) daa mov jp inc das mov in (bad) int hlt outsl pop repz pop push and fld xlat cmp sbb enter enter cmpsl mov dec push jne hlt mov rolb jb hlt lcall fcompl es adc lea or fdivs sbb and scas movsl movsl stos xor outsb pcmpgtb sbb std out lock repz out jne cmpsl push mov cmp dec mov sbb push mov sbb adc inc out je test adc rorb cs nop mov ret lods std ljmp into sub fistpl dec jg xchg xlat pop push mov adc jns in (bad) fiadd fwait sbb imul lahf imul push enter (bad) fadd aas xchg lahf mov xor inc cld mov and ljmp sub out dec jmp mov cltd jp fisubrl add cmpsl jne into mov mov movsl and inc int stc imul xlat pop aaa inc sub fcmovbe arpl (bad) cmp das mov push inc negl test cs mov out (bad) into push add test enter jg mov pop dec scas pop addr16 or fisubl inc pop icebp mov lea mov pushf pop enter aas add js clc push lahf in cmp js jecxz test dec cmp lea sbbl mov mov mov fisub or jmp sub jg sub sarl arpl mov in sbb push xor bswap push mov movsb dec lret push dec mov push push data16 inc fsubs aam or mov and pop jecxz and pop xor jecxz mov push sub cmpl movsl mov in test push inc or ljmp hlt push sub xor (bad) and std xor and cmpsl in inc fldl xor pop shll sub loopne js inc in ja insb xor dec cmp sbb out mov push cmp and int3 mov mov cwtl xchg fs int jo lahf pop outsb add ds cmp fnsave push sbb sbb fisttp aaa insl int sahf push sbb ljmp imulb stos and cmp and lock pop insb lret pushf mov or push and jp ja das std jnp mov xchg popf lods inc int3 sti lahf inc xor loop idivl fstpt push dec jge rcrl xor adc outsb inc mov sub mov les cmp jno jl js jne pusha push ljmp mov push (bad) popf sbbb mov xchg push js mov repnz out mov out sarb les inc sbb cltd xchg clc ror (bad) adc mov xchg aam int dec xor movsb movb test cmp push mov test mov dec sti jge cmp sti jmp (bad) and mov push mov insb lods xor imul sub push fimul mov and cs imul mov loopne in dec mov shlb jnp pop leave ja jecxz repz mov mov sbb add push loopne pusha xchg sub add and sbb mov sub sub xchg pusha dec mov icebp cmp adc inc adc jae mov lret cmpsb xlat jl push outsb clc jle ds fistp mov add mov jo cmp and daa add stos lret stc inc inc lods nop mov sbb xchg add adc insl arpl (bad) dec inc or jae or addps push addb mov fcomps loop push cs inc or fisub pop add dec sbb mov push (bad) push adc (bad) je push (bad) xchg inc inc and cmp pop push lret sbb sub xchg in fstl mov or je fmuls cmc push je insl stc push movsl or test push xchg les add or xchg lods mov jmp into or pop out orl mov aas rcrl or popa ljmp cmp fisubl out lods popa sbb lods pop pop xor enter and lcall dec add nop popa mulb xchg push jmp out cmc bound add xor pop xchg mov into pop or icebp jo fs jbe mov xor hlt push inc (bad) lock mov push jge loop mov mov shrb orl subb sbb (bad) xor xor sbb cmp loopne add sub pop fldl cwtl push cltd or jecxz lcall xchg in in cwtl sbb sbbb jae out mov loopne mov dec lods dec stos pop and out repz mov negb aad fldenv fidivl sub pop pop gs insl rcrl loope lahf ss pushf jno jl mov fsubrl call mov sti (bad) xchg cwtl push mov fisubl mov sbb inc add sub mov sbb (bad) and mov sub inc lahf sub lods pop loope xor inc (bad) sub mov push mov jbe sahf iret push jg inc add xchg or movsl mov shrb sub sub dec push jb insb mov stos lret cwtl xchg jo mov sub add out lea lret cmp xor add shr xlat call pop jl xor enter addr16 insb int3 ljmp es add mov sarb cld ljmp sbb (bad) scas mov fdivs sub jg fstl in into xchg ss std sub mov pop adc insb loopne push push sahf lret orb fisubl ret mov dec push sub adc mov or mov pop leave dec aad xchg nop aad and je fimul or decb ret mov in scas ljmp inc fidivl fdivrs outsl dec pushf (bad) sub int3 aas mov mov push push retw mov add aas sbb sbb sbb and rclb sbb push pop lahf jo pop cs arpl mov fcompl cmc add mov addl jmp mov scas into cld xor cmp mov insl nop lahf jns dec push pusha data16 xchg inc div sbb push dec ret bound mov and cmp lock lods shrb dec cmp inc (bad) (bad) or fdivl stos dec sbb and jmp xor rcl xchg in mov jae push mov push stc push outsb and sbb adc and test sub jns fist (bad) mov sbb jne mov icebp rorb cwtl mov leave iret sub cmp movsb stc jmp xchg mov je xor mov dec mov int sbb adc jo negl mov push mov jecxz add (bad) mov push and push sub jmp ret cmp dec dec gs xor ds repnz jecxz sbb daa dec and out mov jl inc cltd (bad) mov jmp push jp jp in gs pcmpgtw jb sbb or push xchg in jae or lcall push mov mov rol fwait xchg movsb ljmp xor aaa sbb pop jmp aas stc mov dec adc (bad) cmp lods negb mov nop cmp in add aas leave out clc mov movb (bad) insl test jge push iret or les pop out imul mov cmpsl inc push xchg mov fisub xor mov push mov aas inc pop jbe or lock lods and sub leave js jno cwtl lcall dec sarl mov rcl push mov jne sbb ja popa loopne sbbb sbb mov cld or cld pop and sbb mov pop push in call enter or mov iret jecxz test lods inc nop nop dec (bad) fsubrs xchg int3 (bad) int3 out scas xchg add inc xchg and les pop or fadd inc sub lahf xor sub add (bad) lock cmpsb sbb mov fs push aad ds jmp jns pop xor xor mov js mov mov dec adc and lock xor pop jno lods mull inc or inc rorl sbb js pop xchg jecxz stc sti dec xor frstor lret pop les (bad) hlt cmp mov rcl (bad) lds sti out push add mov int3 popa dec scas stos jns and xchg xchg xchg inc nop jmp dec fistpl outsb fwait leave scas subl stos lcall (bad) cmp jns (bad) sbb ja mov dec dec pop or mov repz aam adc jge js xchg jo push ljmp fucomip push adc inc call inc mov leave mov jb hlt loop pop dec cltd cmp popa lret adc test addr16 js dec sub loope inc out call add sahf movsl push mov sbb sbb stos rolb loopne dec fs dec xchg imul or scas pop xchg jle aam push xor jmp out pushf cmp cmpsb adc or or adc insl ret in aam test dec roll jle mov out jo lret dec int dec pop mov lret fldl cwtl mov mov mov mov (bad) sbb fwait cmpsl cmc shll sbb aaa stos pop das jo push or add and fistl js or in pushf int jb mov int bound dec lret pusha pushf mov js movsb leave fisttpll dec repnz add loope adc xchg ds mov cmp popa xor jb sbb mov test mov push imul mov sbb pop clc add repz roll and jne sub mov enter je subl outsl sub cltd fistpl pop or push pushf inc mov inc fiadd cmpsl and sar xor lcall lds add in lret sub mov inc mov repz mov lcall pusha lods es decb xchg call add popl insl mov cmp mov push ljmp cld mov fxch fisubrl insb jne mov jnp ljmp sub test dec sarl (bad) je inc in fimul int3 lds and (bad) jmp in sbb in fcompl mov imul lods cwtl or scas jl jbe pusha shlb out dec sub fwait lock mov repnz sub aad ljmp mov mov stos sbbl jge add mov fildl bound cmpsl arpl data16 fcmovu push xor xor stos mov das pop xchg movzbl data16 mov mov aad push (bad) icebp cs dec into or push in or fisttp cmp idivb mov cmp out test lret sub movsl adc xchg mov sub fnstcw into push xchg mov sub (bad) repnz pop sub mov ret jno inc push (bad) sbb cwtl (bad) (bad) ss sbb mov test sbb xlat ror movsl inc cmp mov jb xchg cmpsl loop in es sub xor lahf lods mov xor adc sarl les popf in or mov add sbb stc xor push cmp push mov addr16 dec out xchg xchg nop mov or fmuls xchg lret les or jb mov jns add cwtl lahf push insb sub pop jnp movl dec fcoml jge repnz mov xchg mov jns jle (bad) int3 (bad) mov sets test or push sub out std mov jge cltd (bad) xor and fsubrs push fistpll and jae out mov lock mov jle cld cwtl xchg stc out (bad) add insb push pushl pop ret sub fcomip lcall aam mov lret scas testl push dec push xchg enter in mov iret sub inc (bad) lods stos jbe jmp sub mov or and adc fcmovu pop jne in gs addr16 dec jns cmp jmp or mov dec cltd loope xchg (bad) ja stos and loope xchg lret mov or jg inc lcall aad lea push inc les inc inc lcall (bad) out inc push xlat cmp imul lea (bad) movsb mov outsl loop add iret and je out inc jl popa cmpsl xchg stos jg sti mov xor pop cmp jbe mov jp test cmp sbb and mov fs add pushl cmp jp sub push lret fldcw loop push pop pop pop test jl std and sahf pop call leave cmp test repz inc cmpl lods cmp ret scas cmp aas fcomp bnd mov (bad) pop rcr cli in push lcall jp push fistpll mov jecxz xchg dec lret xor push clc xchg enter push cmp mov cmp es push xlat js fwait sbb icebp fwait push add and popf add ret cmp in cli lret or mov pushf xor out jecxz xor loop fbld enter (bad) jecxz sbb movsb (bad) mov jnp in and dec std and lea inc imul into fnsave (bad) scas bound and hlt outsb neg push xchg iret addr16 out mov push mov in jnp mov adc cmp mov inc fwait iret bound add stos adc cmp cmp or cmp sar pop lret sahf testl inc stos dec or cmpsl jns lret xor xor lret xlat xor lods incb add jb xchg cmpsl mov dec mov int (bad) aad lea mov pop ss xlat (bad) push fdiv pop fild loop inc (bad) fsubl adc pop je sbb lea sbb sti xchg xchg shll add lods sti dec inc fdivrl (bad) mov cmp insl mov inc test mov imul mov stos arpl test dec push test lods ret daa xchg ret sbb mov mov enter andb sub es inc inc dec cmpsl insb dec or int3 cmpsl mov test lahf fidiv push lret jne ss out mov loope or jecxz push rorl ja or mov dec ret clc fwait popf mov dec nop sti out imul mov add mov jne push fldenv push cmpb pop loopne jnp mov inc out and lcall adc jb gs sub les (bad) inc imul (bad) cmp fidiv mov ds (bad) pop xchg xor inc sub scas sub xlat aad or cmpl into mov mov inc mov hlt mov in add xchg cmpsl or jbe push mov cmp and jp adc aaa cmp lods push xchg or cmp lret ja aam jle out icebp stc aam dec or in pop inc mov or mov xor ret mov in scas cmp inc and int insl or (bad) or pop ljmp xchg adc inc mov or jb xchg mov or fldcw les mov xor adc pop cmp dec cmp cld fisttp fisub push mov or mov nop jle adc addl add push jne rclb dec cld scas sbb mov jp pop xchg xor out gs iret mov cmp mov cltd push in lret loopne,pt aas out stos dec sub sbb cmp pop jg fldl dec push stos sbb int jp es cmpsl (bad) cmpsl xor lods (bad) sbb push imul stos mov inc jae in shl popf jo xlat or mov jb pop (bad) divb es mov jno mov push test iret clc xlat or mov inc gs nop aam push lcall adc rorl test mov mov dec sahf subb aaa stc mov aas imul lods pop scas xchg std test sub ss sub insl mov movsl mov cmpb xor cld or xchg lcall (bad) fcmovu sbb cltd les sbb inc pop push cmp in js pop andl mov cmp fptan xchg and mov inc scas aaa (bad) adc call mov out add add jnp or mov cmc ffree hlt sbb daa xor repnz sub sub pop out mov shl mov add mov pop std and ret and mov movsb xlat aaa sarl notb (bad) pop dec fnstenv roll inc mov (bad) cmp xlat ja sub xor rcrl mov popf in push and (bad) test mov adc (bad) mov push (bad) jnp cwtl pusha mov xlat lcall lods push pop mov or push adc pop sbb add es mov sub aad ret imul push add mov repz in stc icebp cmp ret bound je jecxz imul scas inc sub dec aas pop aas and mov pop stos in adc ljmp leave jecxz les jo mov jl or and or js (bad) jne iret dec jge in clc pop lock andl adc insb sbb xchg into aam das or pushf fistl push aaa pop jo mov push xchg daa add jno push push add (bad) dec push xchg pop movsl dec cmovl mov out fsubr hlt pop pop rorl xchg sbb or cmp int mov and and stos insb xchg test mov insb dec sub jmp jge mov mov notl xchg push ret xorl into insb addr16 cmp sbbb xchg popf mov leave xor push mov fmuls and and jo (bad) sub xchg jne sub icebp into addr16 hlt xchg (bad) sbb and movsb lock lock imull addr16 sub std subb pop shlb jne data16 jle int and sarl sahf mov jecxz jmp jecxz and adc fwait test jle mov repnz xchg adc aad mov mov das cli sbb push push scas stc shrl ja dec jmp arpl in into in test andl ret lcall pop jns inc mov dec in lods fnsave pop test shrl aaa fdiv stc rcrl fidivr fxch int cmp (bad) mov in pop in adc dec mov pop stc dec leave loope dec mov cmp jns outsl push xchg mov rcr jnp test sub nop idivl fstps (bad) xor cs cmc dec push cmp adc adc jns test ljmp std mov pop mov push pusha cltd cmpsb test je negb sub and jns mov (bad) daa aam cli das or jecxz mov negl mov loop imul xlat movsb or stos or nop mov ja das inc cmc mov mov add add push mov cmp je pop imul lahf push cmc aaa or cmp fldenv call mov arpl jp ljmp mov outsb cmp lea mov repnz aaa jmp jmp test sbb data16 cmp dec (bad) negb adc out iret arpl add jl push js out pop sbb jno lret lcall mov and adc test shll fisub xchg cmc int andb in push add fdivr mov ret or into ret aaa loopne push mov add or aas repz cltd (bad) lcall aam mov jecxz ret dec fs addr16 mov cmp adcl les rorl lcall jmp xor xchg dec mov dec xchg push mov jno iret out sub pop sub mov aas pop cmp mov cmp faddl add jp int3 push adc popf sti iret mov xchg mov pop xchg jmp mov dec (bad) scas and inc lds out imul xchg sbb enter ljmp pop or sbb mov loope pop push mov (bad) adc push lods out inc (bad) xor mov cmp ljmp cmp cli (bad) sbb or leave ret test and sub das push inc push loopne or jne in dec cmp push push iret leave push (bad) xor sbb call jecxz out sbb jnp lods clc mov push in xchg xchg push dec (bad) (bad) (bad) enter mov mov xor daa mov push and pop adc call loopne loopne movsb mov aaa dec int3 or call std cmpsl dec addr16 cwtl scas stos sbb es imul add clc les aam jnp add stos inc lea jp adc sahf into pusha jmp loop and fdivrs xor leave xchg loope out xor pop insb push adc ljmp and sahf out inc (bad) mov es icebp pop int3 mov jmp mov (bad) xor or dec insl or imul dec cmpsl mov add insl stos pop fnop dec mov or aam push mov dec mov lods add mov stos mov test mov insl bound jle,pn (bad) lret pop cmpsl cmp adc mov ss aaa cs ficoml lods repnz cwtl push adc stos xor pop dec dec sti scas pop pusha movsb enter cli std mov inc mov adc cmp clc push aas or repz and jne loope jo lock sbb xchg lret test outsl mov push dec cs push rorb mov cmpsb sub add int movsl hlt mov sarb inc out cld sarb rorl xor icebp mov mov into leave inc nop lods mov jne add (bad) lods jecxz mov adc out aad push pop dec inc inc sti lds outsb xlat ss rorb adc xchg hlt loop pop das push xor mov mov xor (bad) or jmp pop mov idivb and and sbb xchg js cmp ja aaa dec mov push movsl cmp out cmp adc push sbb pop or lods adc dec xchg pop lods xor sti add out neg sbb pop inc push jp dec call aaa arpl outsl jle push and fmul push aad enter cltd adc shrb in push inc outsl mov dec ret fstl push sbb popf xlat scas aas test inc add (bad) jl push add es (bad) cmp std jecxz add mov mov (bad) cs jo out mov pop mov adc dec stos xchg add aam sub dec xchg mov cmp push sti sarl fmull adc xor sub mov sub add arpl inc sub aam push xor dec shll sub (bad) in (bad) push mov cld push jo mov mov rolb push incl lea cmp repz add cmp pop fsubrs dec fildl pop out add sbb fs pop sbb stos sarb cbtw movl jl lret popa adc (bad) sbb xlat dec call add pop dec xchg sub dec push out pusha pushf fimull (bad) dec nop jl pop bound fisubr popa fwait mov or mov sbb add loop imul loop cmp or rcr icebp ret push cmp sbb ljmp inc inc cmp test mov stc sub mov fwait mov cmpsl cltd mov add mov repz mov push test sub insb gs push aaa aas incb aad dec fstps sarl xchg sbb imul pop sbb sub (bad) and fimul cmp cmpsb popa push sbb lods xchg fidivr js (bad) push xchg inc sub mov sub adc imul mov mov fwait pop test out out mov test inc pop and cwtl fsubl test inc iret iret lret fsubrp jg adc insl int mov inc add pop aaa std out inc xor rcrl add out sbb mov paddb int3 imul inc (bad) out aas jno mov popf jg subl and sbb lock loop adc ffree cwtl pop cmp scas dec in sub sub mov stc subb cli dec mov scas ret ret push xchg dec ficomp lods aam push mov push dec fnstenv jmp mov out cld in mov cmpsl adc adc sbb dec cltd nop xor in jbe jg adc cmp and lret mov bound pop dec imul (bad) sar mov jp ljmp ret push aad jno lea ret test popf jecxz es mov into sti rcrb mov popa mov sub int scas aas inc subl repz sbb fisttp repnz xchg mov (bad) nop mov xor add mov xchg loop lret fcmovb mov push ret hlt xorl sbb dec sbb adc and je xor jge les andl sub pop push pop adc repnz negb cmc push lahf lahf cmpsb adc in movsl pop jge scas scas je mov repnz mov xchg add testl xor mov push aaa sbb inc mov test int3 shrb mov pop sbb repnz arpl in xchg sbb cmp sub jbe sbb ss lods push sti jle jge das rolb or inc push pusha cli (bad) fs aad fidivl mov dec xchg mov lcall mov mov int3 aaa sub xchg stos mov add addr16 xor and jecxz pop cmpsb pop mov repnz je xor sahf mov lods lock movsl pusha int3 mov push mov es outsb in in std outsl jecxz orl xor lret add mov push lcall xor add fbstp cmpsl fistpll lock mov push fdivr or jns imulb jg add xchg data16 aam loope ss data16 xor cmpsl rol outsb test pop inc inc enter inc scas mov test mov scas push mov aaa sub xchg jle mov movsl (bad) fist and icebp mov inc test adc add sbb out arpl out enter mov inc cwtl mov std mov mov mov mov call push pop xchg push pop (bad) jne inc jb push pop adc add adc daa mov es in fidivl xor jns add push rorl dec pop movsb jmp dec or adc lcall or inc ret call or mov dec jp pop or mov fistp jle and sub je test aad popa lods call fcomps xchg mov fmuls dec loopne dec pop mov in aaa (bad) xor arpl sbb popa sti dec sub punpckhbw leave xor or enter sbb clc clc mov shr js imul jmp mov ds mov mov adc dec hlt adc arpl mov addb add dec fstl lods mov inc and dec push mov enter iret cli push jno or mov pop repnz shr in lret nop push pop int inc sti and mov mov cwtl sarl mov scas mov push insb dec int3 sarb xchg lret sub leave xchg imulb mov mov adc ret xlat jecxz adc push pushf cmp pop inc lret jmp mov inc shr (bad) and lahf mov or and test xor xchg pushf mov imul and and add pop xor je enter mov ljmp popf cmp loopne aam hlt lock dec mov or mov and jb xlat in xorl mov test sub aaa or addr16 and jae stos pop cmpsb xchg pop pushf push pushf ror lcall subl jl push and clc les lahf xor movsb fwait iret sbb cltd push leave call dec and fldenv pop push test fldenv movl imul inc inc or jno xor cmp adc imull in mov push shll lods cmpsb movsl inc pop hlt dec jne cwtl movsb pop jns loope shl push mov mov cmpsl xlat shl mov jns xchg mov cs xchg pop or fs lock inc lahf ret inc loope fsubl je cwtl ret lret sub mov pop movsl cmpb mov testl inc pop push or subb (bad) pushf cli mov push push mov and cmovae pop fwait mov jb jo mov lods xor dec fmull aaa insb jae int3 rcl push xchg arpl pop push push pop int3 push pop xlat movsl je fcmovnb pop xchg fisttpl pop jmp movsb mov push xchg imul ficom ffree adcl out in jb (bad) fmull mov jae sub or shrb mov aam rorl popf or adc or jmp jb cltd sbb outsl insb pop lahf sub fwait aam xchg scas enter int (bad) int3 mov hlt pop adc test into test mov sbb and and add and jne adc jne adc mov xchg cld sbb push jbe xchg out add int mov cmp in ljmp fmull fsubrl mov cmc insb les jno add in mov test shrl clc mov adc sub in gs decl mov lret jno and enter push out lock add mov pop data16 mov sbb aam stos jno jb xchg jbe aam loopne mov jg popf mov xchg in cli push and mov out and push daa jle jae dec ret pusha test xor mov push cmp (bad) (bad) stos lcall insb jl xchg sbb imul cmp pop push (bad) pop cmp lds stc push mov cmp inc dec (bad) je pop jl ret mov sub stos test (bad) int3 mull lea ljmp mov dec aas test pop inc test inc inc cvtps2pi inc and push and push scas das lods sbb cmc stos scas mov hlt (bad) in mov jb jae pop gs push jecxz jl in cmc ja xlat ss sub cltd mov insl test mov xor xor pop add pop popa mov aas sti imulb aas imul mov je push adc xchg cmpsl daa jo ja and daa push inc mov or fwait and cmpsl fiaddl sub les (bad) call fdivr fmuls jle mov lock push insb cmp cmpsb mov add les ss mov mov in sbb insl jbe in jae sbb push push jmp ljmp mov or es jnp mov inc cwtl jo xor pop sti (bad) push xchg ljmp push neg dec and in mov and lcall pand sub jl repnz add and and xor jo mov lods fdivs cmp jo and fstl inc int3 nop sbb mov sub arpl rorl add push jecxz fwait lcall xchg dec sub push adc xor adcb jecxz cltd pushf dec pushl fildl lods sub mov aaa mov scas cwtl push sti jle js jbe mov add sbb mov int call sbb xor int3 adc clc addr16 fisub cltd in mov and pop sti or pop inc es sti std mov push adc push and insb (bad) mov int3 push lds in je mull ljmp popf pop shr xchg pop sti ss (bad) jno in sub je je sub ds sbb jg mov inc xor fcmovbe and cmpsl mov insb jmp frstor mov sbb xchg cs in fidiv movsl or mov aad mov adc ljmp cmc push sbb lret sbb jns push nop addl jmp cmp jbe xchg and add adc andl add jecxz cmovle mov xor mov sub mov xor shrb pmaxub sbb pop xchg test adc add dec mov push lcall inc pop or adc aad clc add add inc iret sub jne andl arpl pop (bad) out add iret xlat adc test sub push fcoml xchg and (bad) aas dec pop add imul icebp mov xlat (bad) or inc (bad) imul push push mov stos xchg in lods (bad) adc in leave mov jge push adc dec loope push (bad) (bad) ss jno xor aas outsb dec rolb mov sbb inc mov scas fdivl insb ss dec ret cmp xor movsl inc inc in sbb enter fs cs ss jecxz std sbb dec adc adc cmp add cmp pop ljmp sti stos jbe adc enter out data16 in ucomiss mov xchg hlt mov hlt in xchg and dec mov cmp out mov cltd or push adc inc cmpb inc jo rcll sub (bad) mov (bad) xchg jne xchg jo out or stos push (bad) stos pop insl lods mov lods sbb jl insl test clc sbb gs adc (bad) mov xor xlat dec sub addb popa mov rcr sbb les xor cltd mov xor pop pop test lea and jne lea xchg fdivr dec aad loop loopne stos adc adc dec mov lret outsl sub fidiv gs stos and outsb in aam jl cmp inc pop mov rcl outsl cmp ret add (bad) fcmove xchg test adc inc lahf inc bound stc mov movhps or and xchg (bad) push cmp sub xchg lret jbe aas test cwtl dec inc mov mov ret loop mov dec or xor out stos adc jl xlat sub sub lret push scas loope mov mov stos mov repz push and pop fcmove jno mul mov dec out ja cmc inc pop inc outsb pushl call stos outsl sbb inc mov incb insl mov push std mov jbe loopne outsb pop nop scas mov and out repz cld ret aaa (bad) enter mov jo sub xchg es cwtl (bad) ljmp jle mov lea scas sbb test dec (bad) (bad) jbe xor add (bad) lods xor adc ss and into xlat pop int3 (bad) movsb and xlat push aam mov sub and pop sbb cli ljmp insb push repz push aad shll shr pusha inc cmc mov fstp xor stos in add or aaa insl and ret sub pop scas sub pusha punpckldq cli pop fidivl call pop inc (bad) pop nop dec mov test mov movsb push lret jmp mov out push mov test pop dec shll std mov or mov and add pop and movsb stos les sti lods insl add sub pop add movsl sub lret call pusha adcl adc mov xchg cld pop ja (bad) mov lcall dec int push aaa adc xchg dec cmp sub adc rolb int cmpsl cmpsl in xchg and jae insl repnz scas mov add stos mov movsl cmpsb test rcrb mov adc pop pop inc lock int3 into shr sti jmp push jns jo sbb out mov add mov add sbb dec ret sbb push test add dec icebp xchg lea mov mov leave mov xchg je arpl mov and notl adc outsb pop (bad) es jp sub test cmp jle cmp imull cmp mov js push mov ret popf out inc addr16 nop lret cmp pop push cmp sbb cwtl mov dec pop out lret mov sub jge sub out ds ss mov lods out cmp ljmp adc sub cs adc pop xchg popf stc xchg ret dec lret push xor int mov xor hlt sub pusha (bad) cmc pop inc rolb fxch sarb out aam lock mov or (bad) int3 fnsave in lock test pop vphaddwd dec sbb std nop mov adc cmp xchg mov cmpsb xchg data16 xchg mov mov fidiv jge inc lcall sar adc (bad) xchg adc jns rcll popa push lea lds push (bad) sbb rclb push jb addl and adc push push ret mov jns add mov or add push sub mov pcmpgtb xorl pop adc ss and (bad) xchg pop dec jge pop mov gs dec (bad) (bad) inc inc std push in lcall adc pushf int3 decl dec xor dec xlat movsb cmp sarl in fmull jecxz mov fcmovnu aam xchg xchg out stc test fmull bound mov dec fldl mov adcb les pop jb jne stos rolb call in popa arpl jb fimul cltd mov gs fsubrl mov (bad) sub ds fmull cmp (bad) bound and pusha add gs orb push inc mov inc push add cmp push in in inc mov out pop cld sbb push jns lock incl sar or dec or lods push mov adc aas lret sub sub mov lds (bad) mov xchg add sub jp inc xchg std hlt add (bad) mov mov cld popf cwtl dec xor jl mov (bad) icebp add and mov cmpsl jae pop add sbb push fdiv dec inc jmp jle arpl (bad) jmp and pop cmc jmp dec stc hlt clc test movsl dec insl lock or push movsb roll jp add xchg pop add repnz ljmp clc les adc and pop add popa fsubs lcall es push jle mov mov jg jmp mov (bad) lea push adc aad lods into cmc dec decl (bad) insl ret movsb mov and iret or cmp jge out les sbb add test fnstenv mov and nop cltd pop pop (bad) faddp mov rcl mov stos cmp inc mov gs outsb in repz xor ss or mov jle lcall int3 shlb rclb sub outsb pushl inc aas mov sti sub lods push lods xchg and xor ja mov jns insl xor pop adc dec in jb xor out cmpsb jecxz scas test loopne iret aaa pop flds add movsb cs (bad) adc dec in (bad) add sbb pop or adc pop pop xor sbb (bad) push das loopne fdivrp bound push lret mov mov adc push sbb (bad) jle and add sub hlt in negl insl (bad) sub cmp jo xlat negb push mov ja insl scas ds sub cmpps xor dec into out ja in loopne jg sarb mov mov pusha add inc rcr jae and sbbl xor movsl xchg xorb and imul fiadd jmp ret mov in ljmp mov aad in cmp ret stos ret lcall push (bad) stc repz enter adc pop and in or pop or or fs or xchg or (bad) xor aaa out jge dec sbb sahf int pushf sub mov and inc bound mov or repnz imul mov jbe add cmp std ja pop cwtl mov mov sbb fsts adc aas sub jmp mov pop loop xadd xor dec pop sahf mov xchg mov jmp daa int cs mov (bad) mov jl xor pop pop pop or into xor pop cmp inc stc cld and clc pop adc add push inc and push sti adc out pop int3 dec xchg outsl dec jl mov jno mov cmp xchg pmaxub xchg mov and int xor outsb mov dec xlat xor adc scas and lds and push lret mov and es mov movsb push mov mov pop push cmpsb pop ret xchg pop and push jae or pop inc daa cld pop (bad) mul adc xor jp daa popa ja jp push mov cmp pop push call adc sbbl push pushl in or mov das sti mov mov ret cs and mov movsl pop mov out aam clc and out dec mov sbb dec mov (bad) cpuid inc mov mov (bad) or test lahf mov lock mul and mov or (bad) xor lods or iret jbe or add mov sub test cmpsb stos dec and push es mov out in in mov lcall mov mov add out mov mov scas and mov xor std push (bad) fdivrl xchg rcll lods mov or dec cmpsb out js push mov and inc inc stos add in xchg cld fildl in inc cld adc cmpsb jl push pop jecxz mov mov (bad) fcomps xchg insl mov cmp aam cmpsl pop loop stos sub data16 test ret pop or pushf fld sti xor das call mov out call popa add push pop mov imul mov inc fwait mov push xor aas cmp xor xchg or in iret rorb movsb mov stos jl push outsb fldt loop mov mov mov lahf lea into push aaa jl jge sub pop mov jmp rcl outsb jns jmp scas in sbb sub std push or mov push dec js (bad) frstor fiadd inc inc mov dec aaa mov mov jb push mov pop (bad) pop sbb adc push cs cltd push mov or stos inc mov dec stos xor pop fisub and mov je or pop out or (bad) sub push push sbb mov adc inc jg enter (bad) push sbb mov ljmp mov jnp sbb fldt lds rsqrtps sbb cmp das lahf xchg mov inc scas test inc imulb or pusha int3 add jb push jae jne cmpsl xchg mov mov fisttp in mov les dec and mull scas push adc jmp lods xor roll subb cmpsl fistp or gs dec (bad) xchg xor gs lahf mov sbb lea loopne clc push mov mov mov cmp jle mov iret or xor mov cli iret xchg jae mov dec stc jbe inc jge xor rorb in add loopne subb mov cmp call cmpsl arpl ja clc aas (bad) mov jbe push ja int xchg sbb loop mov rcr xor and or ret jmp out inc cmc push mov repnz sub sbb mov (bad) (bad) in clc inc cmp push scas test sbb xchg pop repz lret rcrl add pop mov cltd adc sub cmp divl cmp jb pxor (bad) or js mov mov dec cmp inc test lahf cmp ror sarb or lods xor fimull jne mov sarb popa loope movsb loop push sbb aad cmp movsl mov jmp pop out pusha test nop psubd xor clc cmp insl loopne aas or imul lock repz adc add iret les lock js sub jle fbld xor dec add jle xorl ja insl xor mov iret cli mov (bad) sbb mov jnp outsb inc stc ds sbb dec insb sbb pop xchg cmp hlt inc int3 and xchg push jmp adc jecxz mov shr add out cmp adcl movsl das repz aas sbb repnz in push jbe les lock cmpsl cmp jg lods or xchg (bad) cmp add cwtl push dec cmp sbb in add jnp jmp shlb pusha add dec std xor (bad) sbb mov ret and jae jnp sub (bad) shr push and ljmp mov sub pusha adc sbb out or mov (bad) imul xor xchg push push movntps daa and sti fldcw (bad) or mov repnz xor mov out iret (bad) gs les mov inc int imul jnp add (bad) mov push sbb pop add loop add jl or mov in jae pop aaa fnop mov mov fisubrl movsb inc stos add xor xchg insl or orl pop fistp push js mov xchg add jbe andl xchg fisubrl mov jg lock lock cs (bad) push mov cs pop sub (bad) (bad) flds call mov push mov int3 loopne fsts repnz inc shlb push aam dec dec incl scas ds and add mov rcll pop and mov push sbb (bad) in (bad) mov xor push iret test shl jge push add xchg sbb popf jl xchg or mov xor outsl sub (bad) mov push push pop lret jns add cmp pop xlat adc xchg mov push inc pop jge push mov dec mov out xchg ret scas rcl inc adc mov (bad) adc dec adc sub jl push mov jg sub (bad) sti int add add leave add nop test repnz sbb dec mov dec in out (bad) sub hlt stos push aad in pmaxub cs mov fwait pushf dec (bad) lods sub fsubr out imul pop xor sbb outsl sub xor movsl aaa mov jge add pop les mov les call arpl pop andb loop popf sbb xchg out jecxz sti icebp rcrb adc and mov jl and xchg (bad) lahf arpl push xor adc jno pop fdivp pop and (bad) or jmp push or push adc repnz stc dec popf ficompl adcb xchg xchg push mov xlat sbb mov (bad) aad test mov pop xchg mov out insl or fwait icebp iret sbb fsub out mov (bad) add bound sbb fsubrl scas pop test aaa xor or inc push or xchg movsl lea mov (bad) adc and add mov icebp lcall jl stos cmp add add or scas int nop je movsb (bad) fstps lock add push push test outsl fwait cmovge mov (bad) jge mov js xchg cmp xchg xchg sub jecxz xor fcmovu mov adc es jp jbe and push ss shrl dec dec (bad) (bad) cli into mov lret push scas (bad) test add kmovw or jne rcrl cmp cmp adc push push pop loopne (bad) (bad) xor dec hlt xchg xchg add nop pop (bad) bound inc add xchg cltd or jns in adc enter add popa xor adc dec out (bad) ds jp pushf mov ljmp in or jl inc icebp cwtl imul push incb jnp ss sbb not mov dec adc mov sbb pop xor dec fiaddl sbb fstps mov push aad sbb sbb fisttpl sbb cmp adc sub in mov movsl test in push sbb mov mov icebp sti add fs push (bad) cmp popa test inc mov icebp movsb movsb pop ja xchg cmp std aam ret mov lahf sbb mov jae pop sbb shlb sahf pusha mul mov sub inc pushf in push orl scas push add orl int3 sahf xchg pop shrl (bad) cmp pop add sbbb add push (bad) jbe pop ret sarb xor or mov pop call ds xchg (bad) adc out adc cwtl je dec jb repnz cmp pop lcall cmp sbb sarb jo cld add sbb scas push xor popf pop jb jne pop xor aaa xchg scas mov movsl fwait and fcompl clc loopne (bad) xchg dec xor xchg sbb ficom or mov pusha test and and rolb (bad) dec scas xchg mov arpl xchg outsl mov popf jnp aas push jmp hlt mov cmp (bad) inc xchg test ljmp push sahf ljmp movsl mov push psubsw mov lret push je dec adc lret lods sub cmpsb test lea leave sub pop pusha push xor mov pushf xchg sbb test popf shrb imul add std push movsl in sbb mov gs mov rcl popa inc xor add cmp adc (bad) pop xor sar xor pop fxch jge jle into fstpt jnp add nop sub ljmp inc mov test aaa cmp fwait push (bad) outsb inc xorl inc jmp add xchg loopne mov adc dec jecxz ja rcl cmp stc ds ret push in and pop and int3 cmc cmp movsb mov mov call mov pop test inc aas lret or sub in loop,pn stos push xchg out xor push mov or mov pop ds fisubrl or fcmovb sahf or adc xor jl shr adc daa call rol loopne lock jbe lahf add (bad) lea (bad) mov or adc int3 mov and add xchg into jnp mov and (bad) lret ret subb inc and lret test inc in dec xor cs inc cmp nop in test ret fmul pop out repz lahf cld mov scas loop mov adc aas jo arpl mov arpl aam rorb les cmp aas or mov jo xor jp insb arpl mov repz out je lret mov or daa in adc movb push jmp ret orl ss cli cmp cmp (bad) lret les es in mov mov mov lds lret mov cmp daa clc push ror inc in into fildll fdivl push fwait ja jo xor jecxz push insb inc dec icebp lock jbe cmp popa lods or imul sub imul push xor mov lods inc jmp (bad) mov sub and arpl mov mov adc pushf jle sbb stos (bad) sub jae cmp xchg popw (bad) push mov out negb pop ret add mov or aam aad and jne sarb outsb mov sub rcrb leave sbb scas test sbb jbe lods ds popa enter inc lds ds inc pop outsb jmp xor jbe ljmp cmp fmulp pop xchg test jne inc rcl mov imul rcll mov movsb adc xchg pop loopne add imul mov sahf jbe cli pusha popa fsubrs xlat or jno inc xor sahf sub lcall lea sbb repz stos enter pop sub cltd mov xchg pop out xchg lock cmp test add cmp jl inc sub adc fstpt or pop xor and rcr lret shll push pop sbb scas push rol push pop or and add inc add or inc les sub scas frstor jmp out add dec sub mov pop push inc adc push pop cmp jo test pop ret outsb xor movsl mov ljmp insl dec cmp fbld insl xor cwtl int3 rorl movsb mov pop cmp imul scas sahf push int3 aaa mov fcmove xor jae out push sbb pop mov cwtl mov jle xor lahf pop fsts bsf push rclb push inc out scas sbb hlt push outsl dec test push mov dec sbbl pop xor or out sbb lea pop fs rclb aas lods in mov mov mov cli mov shr scas ret and inc js lock das or ret iret dec pop push clc out ljmp mov push adc mov cmp lret mov sbb ljmp (bad) add push mov add inc rol repz xchg mov push popa cmp mov pop dec add jbe shl rorl pushf xchg sub mov mulb pop sbb (bad) jne jbe cmc ja sub imul mov fwait in hlt repz fsubr sbb jbe pushf out dec pop ficoml cmpsl subl and enter pop mov loopne sub nop out fisubrl jmp test stos pop push mov test (bad) and or lret sbb shrb or mov mov faddp movsl fs mov mov xchg adc (bad) insb xor arpl xor test push dec clc pop sbb jno sub sbb or dec hlt lcall sub cli xchg in xor shlb add xchg das call (bad) mov sbb test jp xor es jns cmp stc push aam adc inc push clc aad jp mov out xor (bad) sti xorl xchg push loop out sti and fcoml mov fucomp les test mov mov lret lock lods adc repz aaa repnz popf cwtl add pop inc inc nop sub addr16 jp scas jge push int3 outsb loope cmp sti cmp or cmpsb daa or xor inc pop out xor sbb jns (bad) insb jle sbb int sahf aam popa mov test imul cli ret xchg push push (bad) cmp sbb push mov scas add fsubl int sbb fsubrl icebp jmp jle popf fcmovnb mov adc les push rclb push xor cltd fnop sub inc fdivl clc push push lcall popa xchg cmp sbb adc add xchg daa and push pusha lea dec scas push jmp push outsl pop pop mov jne ds sbb cmp sub lods push or leave pop iret test out jne mov mov cmpsb test and sbb (bad) hlt mov (bad) out xor repnz lcall dec in dec or mov adc push cli fdivrp adc fs (bad) out dec mov fs push xchg mov mov (bad) and int push outsb imul mov cmp mov into sar in repz jns enter mov aam or or cmp addr16 and inc aaa js jnp pop out rcr into or test sbb or or enter dec stos daa dec shll push dec cmp inc pusha or mov das out add mov mov mov lret push insl clc xchg imul lret lahf cmc xchg dec mov cmpsb ret mov mov inc in lods bound inc xchg aam dec mov sub (bad) decl fsubl ds out jnp test mov push in pusha jmp xor int3 or (bad) xor in aas xor pop cwtl test lds sub mov (bad) fldenv into test adc js enter fidivl (bad) dec jb insl call jle push aad mov mov (bad) jno jmp aam (bad) ja fnstsw xchg mov or jno sub cmpsb mov int3 lock cs addr16 adcl sub push pop sti dec sbb mov or sbb ss pusha dec add jecxz arpl inc (bad) pminsw pop push add std sbb lds push dec sbb ja shl sub dec push stos clc popf mov push imul mov push ss or adc insl push jg andb xchg cmpsb push dec pushf mov mov xchg mov outsl cmc (bad) mov stos mov and stos sub pop pop insb sub xchg pop mov pushf xor dec jge mov jmp or (bad) lcall xchg sub xlat xchg (bad) dec sub inc xchg add cmpsb mov ja mov test mov mov cmp pop rol test out pop lock test mov mov and out dec aas (bad) rcrl sahf push dec cwtl push or es ret stos mov loopne imul push (bad) sbb mov mov adc mov repz ficoml call cmc shrb notl jmp xchg push fwait nop addr16 jne add fs cmp pop mov sbb or adc (bad) in sbb loopne shr jl mov push clc jecxz scas stc hlt xor push jmp out dec sub in aaa (bad) inc pop push mov jbe and jle test in loop sub xchg mov movb sarl cmpsb sbb cmc call stos mov cltd imul add and push mov or inc fldl jecxz jne push insl add xchg outsb inc jo push sti and ret xchg jg jg cli cs sub test sahf push cmp call cmp mov loope jns ja pop (bad) dec es cmp sub std adc push shlb aad roll ja cmp fist adc stos adc loope add xor xchg (bad) mov mov sbb pop popf fs sti cmp fsubrs call push add fmuls or cmp push cmp les data16 mov pop subb mov repz in aaa (bad) lods jl dec sti idiv inc and xor pop jle sub mov push arpl es push and xchg imul fbstp add inc or arpl xor add les iret jno mov ss ret (bad) jne inc insb mov dec fwait and cli test dec xor fnsave pop inc adc push das add in lods jp mov ret scas xor jne sub add ret out cs fldcw inc add jmp es pop sbb push or nop jmp jbe sub and push mov cmp cmp jmp dec (bad) loopne xor scas xor out pop in orl icebp mov inc (bad) jbe inc mov and popa xor test adc jo mov jae mov dec pop or gs or test dec test and das push lock iret arpl lds hlt jbe xchg xchg stc imul pop sahf fwait or ljmp jg js inc fwait pop cli mov pushf call fmul cltd jl stos shr ret aas inc arpl test cmp mov int3 dec adc incb in insb xchg stos mov test int sti divb dec ret cmpl stc aas bound lea xchg (bad) idiv and lods adc imul dec pop lret jbe push jge lods push (bad) sbb in and clc push adc (bad) ficompl test mov (bad) sub sahf cltd pavgb xor in inc sub addr16 mov repz xchg jo xorb outsb jg fidivrl dec push aam insl sub push inc imul fsubrl repz mov ja add inc stos xor xor add jge push inc sarb out ret and jo mov pop jae push xor flds mov (bad) iret pop mov (bad) xor jae lock leave pop roll outsl insl (bad) xchg or mov (bad) lahf jb jl in push jb add pop insl adc fsubrl or xchg mov xor gs jp aam out adc adc loop inc jp sub pop cmp add fdivl shl insl xchg and cmpl aas sub movsb daa icebp xchg mov dec cmovnp in mov jp pop inc lods pop cmp hlt and lea mov add push pop lret mov popf pop xchg andl fs fdivs aam push cli in sbb andl mov adc sub add mov mov or push dec pop lods xor sub cltd sahf pop movsl fdivs stc pop pop or int rorl cld aaa in xchg mov sub call push lods xchg add inc (bad) out push or loop push inc imul rclb imul jno nop dec sub (bad) and jp (bad) or shl addr16 (bad) mov stos adc aas (bad) lds sbb dec adc sbb push std aaa cmp clc or (bad) icebp (bad) enter push mov (bad) mov mov loopne fcomps adc leave xchg jno clc insl pop inc jns mov mov sbb (bad) xchg ja enter mov sbb imul imul and daa add inc inc or sub xchg aas je mov cmp adc push push lods cmc ret mov inc fs sbb mov sbb lods mov push and inc cmc sbb (bad) adc int jmp into pushf cltd sub jae pop gs rcll pop loope lahf mov push xor mov cmp pop pop xchg mov (bad) dec (bad) mov out cmpsl or movsl cmp adc jmp jne int or pusha inc roll test cmpsb jnp push sub mov adc mov pop mov (bad) adc or (bad) data16 jno es fld pusha pop adc lea (bad) rolb lods push or inc sbb (bad) std bound xor and ret sbb push jbe in imull mov (bad) subl test arpl adc aas test cmpsb dec cmpsl mov mov divl sub jb leave enter mov sbb push and enter lret add addr16 popl mov mov add pop fs mov and mov imul xor xor push dec push mov (bad) or lods shrb xor and (bad) xchg jp js (bad) mov adc into repnz pop push and mov adc arpl in inc sub aas jno popf lock inc or sahf loope xor fldcw mov sub (bad) ds mov les mov push jbe int popa dec pusha push adc ljmp pop xchg icebp and pop cmp stc xchg (bad) hlt inc aaa add pop push mov add mov test pusha fdivl adc hlt scas imul xchg jecxz nop jle push cltd push leave adc xchg jg (bad) adc pop fwait js or push je sahf jmp into push test or pop cmp mov and call jns mov xor sub cmp inc std out jnp mov pop fdivp cmp loope or add lock cmp adc push dec rclb push mov imul loopne dec mov leave insl or lea lahf adc insl xchg or lret lods fs mov pop cld pusha lret inc sbb enter sub inc cmc lods ret test in pop jno push or (bad) mov inc pop mov rcll and inc in cs sbb inc sbbb jbe sbb add repz mov enter cltd inc push out insl lea ljmp inc lea addl add out out mov push pop mov push xchg jecxz mov inc pop push test sbb cmp mov insl push int3 adc cmp pop clc imul add pop cmc fsubrl push fstpl add fildl pop addr16 or pop mov out fcmovne faddl mov cmp imul and jo mov cltd xchg mov das fnstcw pop sbb addr16 jle fnstcw icebp and mov pop pop dec insb adc mov push test or sbb adc xchg test mov lret fsubrl cmovae or clc jmp int3 and or pushf imul and rcll lods jle (bad) mov mov xor sub inc xchg cmp pop or dec mov xchg sbb push aad and jmp adc addr16 ljmp xchg hlt bound pop lret insl pop or ja xor jp cmc imul in in push call orb and subb mov shrb jns outsb push mov xlat inc fcoml xchg lahf clc jp and lea inc notl fmuls lods repnz or mov call pop mov inc mov mov and aam xchg mov cmp aaa mov sarb (bad) pop call ja pop and adc loopne aam in mov lcall inc xchg lret push sbb mov add sbbl mov inc (bad) xchg jecxz das lods add inc jae das mul addr16 jecxz movsb jecxz mov nop bound jbe jmp sub inc (bad) xor es into jg setnp xor mov repnz jle jbe ficompl jno outsl das lds sub andb sub jle jecxz inc int3 sub nop mov dec pop mov cmpsl jg stc insl mov fcmovnu mov in nop and mov dec (bad) sahf sub jne (bad) idivb dec pop mov (bad) in bound fldcw xchg in sub inc rclb es xchg ljmp or adc cs jae (bad) xor cmp xor cwtl xchg pop xchg movsb sub jge je jp popf cs pop mov (bad) adc dec loop xchg aam stc jae subb jae jecxz movsb movsl test aad jg hlt sti fstps lods shl jb decb rclb mov sub in (bad) and push mov outsl jbe pop ds lcall jp sbb jae lahf or fdivl fildll repz mov aad fwait xor push mov dec or xorl in popa out rdtsc cmpsb lods out or xchg fisttpll jne pop jle jmp xchg data16 popa cmpsl sub (bad) xchg movhps xor icebp add adc ds int3 mov inc (bad) jne xlat out cmp insl pusha jnp mov sbb out (bad) out push in push ds cli mov push adc sarb or andl rorl xor fnsave jns adc cmpsb xor cltd icebp dec lret adc xchg mov (bad) hlt mov xchg dec cmp push dec in clc or xchg idiv mov sbb jge in into test lahf pop and mov and pop lods repz jecxz stos (bad) adc cmp xchg xor mov rcl push add decl push icebp or xchg pop jns push aam jle jge stos xor mov jp popf sub sub (bad) stos int3 mov outsl call cmp and out arpl mov enter mov cli push aad popl shrl cmp jae arpl loopne mov mov dec pop loop fisubr cwtl add mov aam jecxz lcall add (bad) sub adc xchg stos pusha dec mov (bad) movsb cmp out pop iret push mov add xchg in lods and test (bad) ret rclb stc test mov push loop outsl mov jo lods fsts outsl xlat sti arpl jg push movsb lods out fist ret lcall jo push sub dec dec mov or xor sarl xor and test aaa test mov cmp jno frstpm(287 in add push fisub jo push and pushf fwait repz sub ljmp push roll popa xor loopne insw nop sub xor repnz cmp cmp sub imul cmpsb pushf loopne repz sti inc mov lds pop dec hlt outsb dec int3 lahf int3 das mov cmp mov imul or cmc xchg in mov sub push mov sub gs idiv movl sub or add iret adc stos dec (bad) out mov lods sub rolb int3 jl inc repnz mov sarl jns sti sub push rcll inc test inc jae cmpsl jle aam jbe out and inc mov aas push sahf pushf imul push adc int in fs test pop out dec add sti pop notb enter add dec push mov (bad) pop jmp fist sub pusha aad in push lahf lcall jmp pop leave mov loop jns cmp pop pop scas fstpt test and je push inc pushf insb mov mov and xchg or ja es lret pop pusha jg add cmpl test or andl js mov mov adc les repnz mov jne int3 mov inc daa aad xor fsubs xor jge mov lret insl sub (bad) cmp cmp movsl js push dec ds andb jecxz cmpsl push mov inc mov xchg das movsl shlb mov cmp pop cmpsb popf fcoml jmp and jmp hlt adc fcoml xchg jmp cmpsl mov (bad) sbb (bad) roll cmpsb cmp movsb jmp fimull sbb cld ss sub clc dec adc sarb loop test test fsubrl add faddl nop or dec mov out sub add push dec mov (bad) das fwait pop stos incl or mov ljmp aas daa lahf mov insb rorb in fild push gs insl loop imul ret clc push inc pusha dec lahf sbb push test pop sbb or push out lods ljmp inc inc mov cs ret sub inc loope test or pop jns daa aam insb mov sahf repz dec push in lcall (bad) mov repz mov jl push cltd mov outsl cmp (bad) jb stc xor jo cmpsl fwait add xlat out pop or xchg dec pushf or in ja stc mov imul xchg fist iret (bad) cmp xchg add dec mov fisubrl dec or gs jb mov lcall stos adcl xchg sbb pop push and ds inc stos les ficomp adc scas pop adc sub stos cmpsl jmp dec xlat inc ds clc cmp dec cmp or inc cltd xorl xor pop add icebp mov pop std jnp ret inc std jl out cmpsb and loope or pop or mov push pop jbe dec add xor add js inc sbb movsb mov jecxz mov xor mov pop mov roll outsl push rol lock rol arpl popf (bad) mov adc lods (bad) jnp sub adc adc (bad) bound test mov shufps jp insl jecxz adc je (bad) xchg inc pushf mov imul xchg jmp mov sar fldcw add in pushf repz sub sbb outsl in nop xor push sti int sbb dec or scas xchg pushf jne jl xchg lret daa inc inc es mov mov cli ficompl pop imul imul fstl mov mov push pop push jnp xchg add push lea (bad) (bad) repnz mov je movsb out int3 ja dec push repz inc fstp add (bad) mov pusha jnp cltd add lret nop mov add (bad) mov lret rorb xorl mov xchg pop jle pop pop sub loope ret sbb inc or mov daa jge ds (bad) imul sub lock (bad) jns cvtps2pi sub clc sub gs push adc xchg xlat dec add sub cmc ljmp or loopne icebp sub pop lds push bnd (bad) xchg ljmp out rorl mov stos sbb mov inc mov mov cltd and imul (bad) pop mov int3 lods and and cmc jbe inc fsubrs int mov mov mov fnstcw mov ret mov and lcall mov (bad) mov lods add cltd dec lcall adc push pop cmp push int3 add insl adc test add hlt cs jecxz in add and xchg lcall pop ds fs jecxz fisttpll lds gs mov sahf ret ljmp mov pop daa in enter push push enter adc fstps inc push jno jae test inc mov rcl divl mov add adc jae mov mov xor in or (bad) insl inc push addr16 sbb xchg in dec cmp mov mov add mov sub pop sub push inc ret stc in aad or insb adc aam fnop mov mov xor cmc rclb dec lods fidivr dec fisub dec pop cmp jb sbb out add jmp push popa push jge add cmpsl aad mov cmpsl (bad) xchg adc xor sbb jno and mov xor sbb fisttpl int jge lahf xor and fildl mov ret sub xchg mov loop add stos in jns std adc lods or int mov or addr16 mov add (bad) divl mov mov push push push pop bound cmpsb add gs cmp out add xchg push fdivrs push dec iret sub adc stc sub xor stos stos jns scas xchg mov and mov pop push enter fcoml jae stc (bad) gs pop jmp mov cmpsl or or or push push pop or (bad) ds stos jge loop repnz (bad) sub xlat sbb ja mov mov add leave pop mov push lret push lahf lcall cmp sub jg xor jl sub inc cmpsl test dec push mov fcomip mov sub push xor stc and push (bad) adc aaa sub pop jbe mov adc dec test mov (bad) dec jg sbb cmc cltd pop (bad) pop ja cmpsl push fwait and mov imull xor xor add sub adc cmp mov mov xor jnp dec jecxz shll or adc push mov pop push sahf xor push (bad) loopne iret mov imul (bad) sub inc jnp enter sbb imul scas xchg test add sbb sbb jmp (bad) fadds jnp inc or femms and mov lods in jp dec mov mov negl out adc nop xchg ss lcall scas lret xchg dec mov push movsl shrl add mov add lock push jmp fadd gs sub jnp inc jne push fcomip mov shrl std or popa testb lahf sbb jmp stos xor mov push sti es mov adc std sub push cpuid pop xchg push test in repnz sbb lods aaa push imul pop and xchg add sbb cs sbb movsb xorl adc cmp pop ss xor leave flds in mov loope inc pushf jg fstps pusha dec ja inc enter jo lods mov cmp or mov iret bound imul clc add test insb fldt ljmp daa pop cmpsl add jo cmp add call xor sub inc js leave pushf stos data16 fs add adc xlat push inc loop mov push jnp loop inc mov mov jmp xor mov or pop and out jns xchg cwtl dec insb pop pop arpl insb add add aas clc cmp aam in xor bound (bad) aam ret enter add sub mov sub sbb inc jnp sbb xchg mov test dec jnp fistpl jg (bad) das js jb pusha add ss je or rcll addr16 xchg jbe cmpsb sub pop cwtl enter loope enter jle adc push and out mov dec mov fidivl imul push or enter sub xor (bad) pop fcomi fwait rclb dec sbb loope pop pop aas dec and cmp (bad) cmp mov xchg jmp mov popf cmp outsl adc jl loopne xchg fmull into sub mov mov lods fwait inc pop push lret pushf pop aaa push mov pop push push cltd add lock xor or inc in in gs fstpt sbb add fstpl sahf jmp add jnp hlt cltd cltd (bad) sti in xor movsl or mov (bad) fmulp push pop sbb dec ret fs jno cltd adc mov in adc jmp jecxz mov imul jmp movsb in sahf jecxz ja mov call mov push nop (bad) les xchg mov or jne push divb (bad) scas cmpsl jne xor pop adc mov jle iret lods ss inc lea mov ret or lret leave push sub inc mov stos inc test loop mov or aas les stos or int pushf stc and inc or adc cli jp (bad) hlt jge jno mov pop sahf icebp and mov mov add sub lods call ja movlps inc pop mov out ret in ror cmp sub sub imul cmp and add mov arpl or sahf pop xor mov mov dec xchg ljmp add cmp inc jp xchg adc clc jle and cmpsl arpl aas xor int push hlt xor jns nop das add loopne jbe cs mov outsl fistl push ja in xchg sub sbb xchg pop sbb lahf xchg mov fwait adc subb xchg push aam xchg sub ret mov fisttpll dec or pop jb inc int3 adc addb mov jg sub xor lret xor mov ja push push xchg add js add jbe xchg mulb push mov and dec sub sahf inc pop sub js and hlt jle mov push out xor test andl loope xchg push insb mov mov das jae data16 mov or xchg pop lds sbb jecxz jb pop aaa stos lock pushf and aaa pop fstpl (bad) xor cmc mov jmp xchg mov xlat xchg (bad) fstl pop in adc xchg outsb xchg or mov xor test xchg mov aad cltd mov sub xor mov lahf std xor ret lahf outsb mov in xchg mov mov mov sbb mov ljmp mov mov dec andb jb out and or mov and xchg scas and repz add faddl enter sbb pop pop xchg jb cli push inc jecxz sbb and test jl in jp dec ficoml lret loopne call mov leave sbb inc cmp xchg adc mov out push popf test dec (bad) push les sbb cld mov insl lea dec mov push sbb and in in jmp xor in ds sbb xor cmp cmp ret es test (bad) push popl scas aas xchg test fmull les push pop leave mov pop icebp xchg stos pop jae push push add sahf push aaa (bad) xchg jge cltd jae in push pusha xchg mov jmp or xchg sahf adc mov (bad) ss dec jmp repnz cs sub add inc cmp fucom mov pop add leave jns mov cltd outsb pop xchg out imul sbb rorl call and and aad dec pusha xchg pop call push jo stos add orl ja xor xchg mov push test lea add push cmp idiv add imul mov xchg loope sub inc out xor repz fsubs xchg jmp (bad) in mov les popl inc (bad) movsl mov or insl mov fs and int sbb adc cs in mov outsb cmp movl and mov sub jecxz adc out mov mov lcall pushf pop sbb aaa cwtl fs mov aam repz jo xchg sub test mov pop jp push jle dec negl in xchg iret mov in jnp xchg xor into xor aaa (bad) sub adc (bad) jl and nop xchg push ret cltd lods push ret push mov jmp int (bad) (bad) movsl inc pop xor shlb sub pop jle or scas ja pop and add adc in xor mov stos in jb xlat popa inc stos loope cmc dec jl nop les adc faddl pop xchg arpl arpl jnp mov cmpsl jo dec dec adc inc out pop rorb sub mov (bad) mov cwtl mov mov cmp lahf jo jo cmp jg fwait jb mov lods xchg or push pop xchg ja repnz jbe lds xchg sarl arpl lret push inc clc mov dec test aaa xor ret xor push push pushf mov iret mov insl mov cs sub fprem1 lret adc ret in fiaddl mov bound jmp test cmp push sub push push push inc sbb out cmpsl js jle cltd stc xchg push jne push mov or loop shr adc jmp rclb in fucomi ret outsl mov imul mov push dec mov cmp pop jae insl repz (bad) scas arpl jmp push out stc dec sub inc (bad) xor and (bad) xor adc outsb std add sub aam mov mov shr movsb data16 push and lock fisubrl ljmp popa inc nop add inc mov cli stc sbb faddl cs jge dec jo cmp xchg mov stc and (bad) test mov mov cmc hlt or mov scas cmp sbb stos xor sbb popl xor inc ljmp fistpll lods add add push cltd adc in les fsubrs fdivrs mov xlat push popf sete jecxz mov cmpl dec inc sbb (bad) mov rol (bad) mov mov out mov pop mov (bad) mov jo or dec scas scas xor gs push xchg int3 pop lahf sahf adc pop and fnsave or mov inc jle aad cmp xchg pop aad xchg add mov dec out scas lcall mov (bad) aaa add js mov mov ret xor jnp fidivrl cmp ds mov pusha iret inc xchg int adc dec (bad) icebp fbld and adc mov pop outsl cld in lea xchg in inc push cmpsl inc insb and mov imul sbb jle add and mov or push pop lahf insb jns aam mov or dec js xor xor adc jg fild cmp aad xchg inc in out pop gs stos fiadd frstor mov cmp inc xlat jbe popf pop or pop adc xor xor rcpps cmp sahf pop nop jnp jl jns jle xchg inc (bad) xor adc movsl in add rorb cmpsl int mov inc dec cmp dec (bad) and pop adc (bad) jne mov adc lds rorb and add fbstp add (bad) cmc push jnp or sub andl inc incb cli sti lcall xchg (bad) xchg fildll cmpsl or in inc hlt lods jp mov jnp inc mov fs mov ret xchg adc sti (bad) in andl jbe fisttpll ljmp and dec clc test sar cmp jo cmp push jae add loope es add ds call imul pop sbb cltd mov mov mov outsl push cmp sbb scas das out test repnz mov or jae or repz sub mov pop mov xchg (bad) adc mov popa pop out scas (bad) mov xchg inc pop ret enter addr16 jecxz aas or aaa mov inc aad in gs adc mov js mov xor mov ret cmpsl std (bad) aas xchg mov sub lret or xchg mov das pop sahf push mov cmp sub stc imul and imul xor aam sbb cli lods mov (bad) out fs int inc insl cmp fldt push xchg adc stc pop jne push movl (bad) aam jns scas stc mov movsb mov jno les or dec int mov add hlt ret pop adc jp stos cmc xchg movsb adc dec icebp negl in ljmp dec test lods (bad) lock fimul nop ljmp push jne (bad) cs fidivl aam push gs add movsl test jns jnp xchg aaa imul stc loopne (bad) adc sub test or leave mov stc int3 insb mov pop jg and fwait sti ficomp xlat or pop dec clc push inc mov xchg aaa es ret xchg lds cli xor dec aas jns leave push push divl je daa dec inc mov jno jbe pop push pop lret scas xchg aas mov jmp cmp into fldt aas jmp cmp int3 sub xchg mov lcall test xchg push mov adc push inc sbb ja cmp sahf mov cmc psrlw or je push fmuls popa sahf daa mov lds pop cmc cmp pusha loope cli data16 sbbl test lea inc out adc dec rorl push pop jecxz and mov cs inc leave stos mov jae or mov sahf arpl out jae in push jmp lea ss pop movsb lret dec stos fistp cmp fsubrl aaa and or das dec loop loop lcall sbb (bad) imul ret inc mov ss (bad) push rcll movsl push mov ss aad add out fidivrl pop clc lods stc inc lods aam and flds shrb es ljmp call rcrb stos sbbb out add (bad) xor orl repz add pop add dec push (bad) push xchg mov adc sahf cmp scas pusha dec in push pusha mov add dec pusha ficomp insb rcl inc adc push adc xchg dec aad sbb fs mov lahf ror sbb jbe dec dec dec gs aaa inc pushf stos dec mov (bad) push jmp xchg sub xor add cmp (bad) dec xchg setae push or fs ret xorl xchg test adc mov mov or jecxz adc lods (bad) jne repz xlat jnp xchg imul lods jno xchg jl mull mov sbb (bad) pop dec test mov imul mov lods imul adc pop xchg cmpsb pop outsb xchg cmp and aas or xchg mov push push sub adc loope (bad) (bad) cmpsl je icebp aas movsb cmpsl int3 lcall sub ficom mov scas dec sub ret push sahf les sub jo leave dec sub leave sahf clc loop mov pop pop fdivr sahf jge sti fsubs in add jae inc xchg mov xor mov sub mov and in dec jb test iret push sahf loop repz aas jbe stos int3 jo lods enter in xchg out mov mov add xlat push adc inc mov sarl into sub sbb js xor xor mov cmp les data16 mov cmp out ds mov jnp pop xor jge stos leave push in dec adc dec add pop or xor sbb cwtl add mov js mov push push pop jl and shr xchg inc sbb inc lea push mov pop inc pop fnsave sbb imul jo addr16 addr16 hlt push ret jo mov out leave jo cs xlat pop std pushf mov mov loope shrb mov stc mov std jecxz lods je jecxz loop mov jmp test or pop les enter (bad) iret push nop add lods aad aaa xor cli mov xchg aad data16 jae dec loope and aad cli mov or mov lcall jg jmp out mov add fnstenv outsl pop pop sbb insb pop inc inc or mov sub pop insb mov dec daa push mov push (bad) dec push aaa jg (bad) and jno sbb jbe inc cli frstor imul mov mov mov jle ja in inc pop je jmp cmpb jae sbbl and fs inc jg loope mov outsl clc jae imull out (bad) or add ja int push mov rorb sbb cmp aad xchg cltd dec push sbb test mov js js add push mov sbb and push dec jge (bad) aad fidivl bound xor push push mov mov cmp push push ret ds shlb mov fwait outsl push (bad) jne imul push rcl push (bad) cmpsl je mov int rorl outsb lahf fadds insl loop lret adc stos loop pop repz fadds cld push push or mov pushf into roll insb outsb dec (bad) dec in (bad) mov lret push fldenv adc mov xor addr16 jecxz into mov mov imul ret xchg shll test lret std sahf or fsubr add push out inc push out xchg push cmc lock repz fdivrl div orl jge es cmp dec iret ficompl push aas test jl in ret adc cmp sub mov and fsubrs dec jg imull (bad) hlt dec mov in mov xchg lods cmp inc add ja jno xchg movsl xchg insb mov outsb lcall nop jb enter outsl call sbb dec cmpsb push dec push push push jbe push pop mov imul (bad) movsb cmp mov cli cmpsb pushf dec jo pop sub movsl and daa add out mov push cwtl or inc mov jge gs test es and jecxz inc xlat pop jmp xor push test test out and cwtl sub add and and into lock scas dec repnz xor adc jecxz enter js sbb cltd hlt sbbb mov out imull out je cltd shrb leave mov pop pop leave push add dec out sbb or jecxz mov xor jp push test sarb movsl cld clc xor sbb jb xor jae (bad) inc outsl lods (bad) jbe push lds mov into pop xchg push adc jg dec fidivl mov clc ret dec add dec dec jnp in dec and add jnp jae iret ret jmp jp push mov inc pop leave adc ret (bad) push xchg daa pop outsl and pop imul scas inc jge out xor jns adc popa inc daa arpl icebp push nop je (bad) jae and xor in addr16 fisttpll imul cld shll inc mov cwtl (bad) popf cmc mov jmp mov aam fs cmpsl cli cld stos ja mov cs inc loopne or bound out mov repnz jle jo loopne ja int lods (bad) sahf sbb cmp adc push and mov adc mov sbb mov or sub (bad) ljmp (bad) arpl mov mov mov mov push repz pop pop scas xchg sub add (bad) cmp cmc or inc int inc jno dec clc inc inc sub test shr out lret outsb inc jbe rcll sbb pop mov test out in add lret sbbb in mov or xor nop mov xor (bad) mov sub and in ss into cmc jmp clc mov jl dec cmc inc xor inc (bad) dec out sbb xor jne,pn (bad) fwait insb jnp adc sub scas cmp lods fsubrs or mov push in (bad) mov adc cwtl aaa cmpsb gs add mov xlat fstps xor push and lcall sti xor int3 push out xchg sbb push mov push loopne push pcmpgtb jo,pt int3 jo xor mov mov in add outsb add sbb adc in loopne add mov popf jg inc movsl add test push push negl pop dec loope out mov xchg mov adc mov inc dec xchg inc mov pop mov roll and xor pop xchg movsb mov aas mov mov scas scas icebp lds jb out pop lods les std pop push les add js clc push lea and rolb adc mov pop aas mov es js,pn bound jns (bad) mov in lahf xchg stos xor insl into ljmp int and xchg repnz rorb lcall push or (bad) mov inc pop ret pop addr16 insb sahf pop push mov pop inc pop cmpsl sub iret (bad) es push pop pushf sbb lods fcomps lret sub add sub out sub jno stos pop cmp push ss inc xchg sub subb xchg test sbb push cltd add cmpsb in push xchg mov aad jno cltd sbb (bad) add sub popf inc and sub nop addl xchg mov int movsb push (bad) pop mov mov (bad) jge and xchg push cmc aaa sti mov (bad) adc ret (bad) int ljmp sbb scas dec movsb pop cmc sahf xor (bad) out add fisubrl iret idivb adc jle popf sbb pop cmp fdivl push push fidivrl mov mov ficom mov stc test test jb imul mov jecxz leave push sbb sarl cmc (bad) jg test arpl rolb out dec stc icebp pop jns scas cmp add fbstp pop in out adc push fwait in cli xchg aaa cmpsb imull xor dec push push jmp andb xchg add mov push push sub cmpsb mov xor jae sub jmp jl scas hlt mov mov leave adc fcoml outsl int3 ret xchg sahf sbb stos adc adc sbb and and es push (bad) push and aaa xchg lea out xlat stc or adc stc inc rcll aaa push cmp add test ja ja add or iret (bad) jno fs movsl pop leave xchg jl cs pop push mov cmpsb xchg (bad) leave jnp inc ljmp push inc fbld sub add mov scas cmp ficomp iret es hlt sub (bad) sbb idivl jne cmp and scas addr16 leave fldl xor fadds test and (bad) std punpcklwd aad shlb jecxz lahf xchg cwtl loope movsb push stos cltd mov out (bad) call mov loop fisubl out in gs push pop cmp xchg mov lods dec movsl mov inc (bad) int mov insl pop add aad mov fdivrs gs and in mov push mov jnp pop sub ret repz scas xchg mov pusha lcall pop out xchg sbb mov jns (bad) fdivr ds sar inc sarl sub repz notl dec add cs mov mov and xchg add xchg mov xchg popa imul push nop inc pusha mov add arpl ss loope inc (bad) xor rolb lods adc push icebp adc outsb rcr mov (bad) iret sbb jle fcmove cmp fnstsw dec xchg cld imul pop ljmp dec int les pop cld ror hlt lea out je movb lcall jg daa and pop fcompl adc jns scas in pop add pushf (bad) xchg xor out mov or jns mov push or pusha test push jg outsl add leave xchg jbe and sub xor and outsb or push cmp (bad) mov (bad) int ljmp xchg ret (bad) (bad) xor lods pushf sub ss adc lods adc shll roll call sarb jne pop xchg xor fistpl icebp out and fcomi mov jle sbb lret mov inc js hlt push push add cmpsb jmp shrb stc push and sarl mov cmpsl push xchg repz cli pop add sub add adc ljmp scas cmpl inc ljmp jecxz jge sbb enter popa mov cmc mov jns negb cli xchg jnp,pn rclb nop jmp data16 fwait in inc mov (bad) jbe ficoml xlat mov ret (bad) lock imul push pop sbb stos sbb xchg mov test nop lods cmp jmp sbb cmp scas (bad) daa dec scas and push sti mov jo add clc repz adc jl aam fnsave and rcll mov test pop xor je jle out mov insl sbb js or into lock aaa pop sbb (bad) insb dec dec adc enter mov pop pop and pop ret (bad) ja (bad) dec jae sbb (bad) sahf (bad) push sbb (bad) dec mov es rorl icebp mov sbb mov js mov hlt xchg lahf inc popa hlt out movsl jae mov loope dec sbb cli popa cld (bad) jne out push arpl lods or insb data16 inc dec arpl sub dec hlt loopne ss cmp fildll xchg arpl clc mov or jno or call ja pop mov test je push xor jl aas stos and adc jmp aas out fbld jge jns add mov leave roll xchg out stos scas in cmp fdivp ss pop (bad) mov or sbb ror int3 push sbb jae xor adc add xchg (bad) inc cwtl pusha (bad) int3 cmc and fmull or inc rorb cli (bad) jmp loop (bad) lret int movsb mov jmp subl adc xor lods ljmp (bad) xor cwtl outsl xchg or xor or loope xchg imul lret or dec imul push scas lahf movsb sub insb fmull and dec pop (bad) pop mov push mov inc sahf gs aad jle aaa test pop cli pushf cwtl xor shll sub (bad) mov and adc pop sarl iret push imul loope xchg out lock adc lahf (bad) movb cld pushf aad mov and cmp imul mov dec lock stc or push jno jb sbb mov lahf movsl (bad) cli push lods mov lea insb iret and or (bad) push sub push sub test mov sbb popa xor cmc mov (bad) dec (bad) es mov pop ljmp and xchg ss mov dec xchg xor loopne mov pop test pop bound push insb mov push sbb push fildl cwtl pop or in push cltd js mov mov in adc xchg mov stc add adcl mov add sub xchg mov imull lock addr16 loopne int3 (bad) clc lock hlt aad mov movsl iret xlat mov or loopne push mov jle mov xchg in mov inc stos int fcomp dec mov ja insl fisubl adc push out push or fmulp dec inc xchg cmp iret jns jae mov scas js mov (bad) xlat push notb mov sub mov outsb scas or aam inc pop scas repz js or mov mov fidivrl xchg arpl xchg xlat jecxz popa or outsl xchg mov test pop popf imul and mov sbb adc sub jo inc jle mov jne dec jbe jle add cli mov mov insb addr16 pop and scas mov add mov repnz xchg xchg test dec xor cmp mov pop faddl int3 es xchg je inc push jno xchg js adc mov sub sbb cmp dec orw and sub pop in mov mov fidiv (bad) popf mov inc bound out mov xchg cmp push test insb mov inc pop loop aaa pusha xchg lahf jns fxch add div sbb (bad) ds int3 mov orl icebp pop rol push lahf scas mov add adc enter aad (bad) cwtl mov in les add lds cs xchg insb (bad) cmp cli movsb add jno adc sahf sub cmp lds pop sub maxps ds jp,pn sub mov mov nop jle ficom cmc xchg ja std (bad) arpl jecxz push aaa aam mov js adc add lods outsb mov push rcrl xchg inc popf mov fidivrl push stc mov les push mov push fsubr into push mov push test sub ret sbb inc xchg dec stos sahf adc dec (bad) fwait jb fstps mov dec push pop pusha sub jnp dec adc shll sbb sbb jmp int xchg push pop std decb dec mov mov dec jno popa and mov xor (bad) imul pop add or call mov fimull mov hlt mov insb sub sbb stc fbld cmp sbb adc into popa shl aaa fstp fbld cmp sub inc lahf inc xor out shrb sub mov js cld sbb adc aam pushf rcll pop mov mov (bad) mov popf xchg add mov pop arpl shl mov je or mov maskmovq negl insl in sahf dec sub gs out hlt in shlb jecxz fsubs js (bad) bound lea mov enter xchg or fwait adc add mov jnp push lret cmpsl jbe inc mov std das in int3 jge stos push mov notl lea popf hlt push out ficomp jbe mov rolb repz es sbb dec icebp ds adc xchg mov je mov loop mov mov dec (bad) outsb out jmp xor (bad) jne sbb xchg xchg xchg in or pop imul hlt fcmovb sub or mov not pop cmp dec in cwtl cwtl xchg pop loope pop lret or push push and xchg rcrb or lods mov mov and or and or js and test or cmp and cs repz divl andb (bad) cli xor xor mov (bad) pop dec lcall push add push stc push insb xlat inc pop mov movsb int dec in je sbb repnz (bad) sub and stos movsl mov insb stos cs sahf (bad) sub ds mov push adc cmp scas mov (bad) mov out lret (bad) repz into mov loop loop lds pop jl mov adc cmp sub xor loopne cmp mov sbb push cli xchg decl push mov sbb jmp popa dec and ret or loope sub lock imul inc je pop and inc xchg sbb adc pop adc xchg xchg mov pop sub popf mov pop and pop mov xchg pop mov pop and icebp push scas fisub lret lret push jb enter mov mov and push es fisttpll ljmp imulb mov (bad) mov loop mov mov push cmp xor mov pusha cmp es xor repz inc mov (bad) jl es push ljmp xchg adc movsl dec (bad) sarl repz xchg ror add ds push aas xchg lahf cmp (bad) (bad) neg cmpsl call mov rcr push (bad) jbe or mov movsl repz pop fistl ja js sbb dec sbb mov dec rcrb pop jg xchg push mov dec call fwait jg push les dec jl jo data16 cmc outsl inc aaa in pop jae les js dec jb adc lods fs pop div pop inc xor nop dec xchg (bad) int pop data16 loop cmpsb xchg mov sub js js inc in imul cmc inc loope sbb cltd sbb and inc and dec push (bad) sub adc xor pop fisubr movsb fimul sti pop mov push mov je int outsb and push loopne subl push xchg pop scas lret or pop mov es cmp sti push jno xchg sarl pushf lret jne inc sbb mov push mov inc adc or mov mov lods es das (bad) push int3 pop push mov lods xchg clc leave fninit add mov imul enter into push xor mov je movsb mov in lcall sub or inc and ds jg mov or xchg jo in fidiv std ss ds xor pop inc pop jno inc dec les mov bound push mov (bad) xchg sbb int pop repz jae add dec arpl sti repnz push fiadd nop mov into inc (bad) jo stos dec cmp jno out and pusha dec cmp jl lret nop sbb sub call mov add cmpl das sbb and xor mov or into icebp (bad) dec mov mov mov push fcmovnbe popf or test xor out jp ret iret pushf ja fmulp mov repz mov add sbb test int dec or xor sbb or jge jbe pop mov movsb adc sbb out xor pop adc or cld or dec sbb adc cmpsb jge push rolb popf mov add sub into cs movsb fdivrs outsl inc pop in cli cwtl ror xchg lret jp es xchg or pop popf sbb mov int into loope arpl push leave add cs jmp sub push cltd pop jl sbb stos xchg shll sub add mov rcll je dec cli scas fidivl rcll jno push add mov lds or out jb das inc je in ret push xchg push mov jae and pop stos mov aas fnop jle jb mov jb andps int cld test adc jbe movsl mov (bad) imul inc cld xchg lods and cmc int3 dec mov xchg (bad) cmp push stos or adc daa add and aad pusha arpl pop xchg imul bound and inc dec fsubp jle mov cmp and mov cs xor xor loopne mov fstpt faddl insl lahf add add repz push (bad) pop pop xchg inc call popa sbb xlat mov mov sahf lds stc js mov fistpl je sahf mulb mov xchg push (bad) scas push popa (bad) jne xchg movsb (bad) js icebp scas repz jl mov or (bad) and loopne (bad) mov cmpsl mov lcall and mov and enter adc cmp and arpl pop nop int3 sub sbb ret cld mov jg push add push xchg adc shr mov bound and push arpl adc out or fsubrs das mov pusha adc in loopne dec sbb push or mov sbb jecxz dec push push stos shll push push sbb lds dec xchg add pop stc mov adc mov xchg jae stos in addl (bad) imul cmc pop xor lret adc add out cli in lcall jecxz stos sarl std jg xor mov push out testb fist daa test jle cmp xchg xor mov adc push incb aas fs fiadd jnp ljmp sub xchg stc stos xchg add mov mov sbb daa cmp mov cld popf fisttpl sub outsl test aas push pop lods stos dec sub incl or jecxz mov sub mov jg hlt ja pop pop mov stos hlt repz inc jbe mov jge imul add sar lock cmp push jbe dec push push adc icebp xor mov ds (bad) jmpw jg xor dec jae mov mov dec mov xchg cmpsb xor ffreep xchg inc sub inc pop add jle pop lods ljmp jno in scas scas popa leave in icebp fcompl loopne xchg test call (bad) gs sbb testb cmp shrl pop push (bad) aas jo test adc test jecxz popf hlt mov fs adc xchg mov fs mov sub divl (bad) icebp jne std icebp mov dec push xor mov nop push roll pop out push test jae sahf dec (bad) ss sbbb xor or cmp xor in sbb inc out sub mov ss test cltd inc inc fstpl sbb sub lret sbbb cmp leave mov dec sahf movsb (bad) xchg xor xor xor int push jecxz sbb das (bad) ds outsl sub (bad) in gs add imul adc dec cmpsl sti pop mov push add je adc lea sarl lock bound (bad) test and dec mov sub cmp clc add pusha and lahf in sub cld cmp cmc pop ud2 mov push loopne inc or cmpsb imul incl mov (bad) mov fiadd fdivrs iret cmp add ficompl sbb addr16 mov arpl jp int push xchg mov xchg pop or dec dec inc leave test ret test into pop sub mov and (bad) hlt ret xchg or ret mov jno inc cmp lcall and jae cmpsb jge dec aaa pop loopne push or out dec outsb popf mov mov cmp rcll or jno adc xchg xchg mov or mov add stc cmp xor ret sub movsl ds dec cs xor xchg add or hlt xchg aas xchg push sbb xchg xchg cltd mov mov pop ja int3 into inc or mov into negb shrl clc mov and mov sbb add xchg movsb rcrb inc outsl sti fidiv ret int3 xor xorl or mov adc mov lea inc dec ficom jb pop cld and sub or adc mov imul dec test adc mov push pop jo dec hlt call lods fisttp pop mov pop pop mov cwtl in xor mov mov lods cwtl out enter fstps cmpsl inc pop mov adc nop xchg out mov xchg add in xchg inc les dec pop adc adc arpl pop inc or test xor and inc nop inc jp inc sub dec xchg pusha bnd or (bad) pop stos cmc testb sbb inc jbe mov fldcw add push dec inc hlt fldcw and push mov add xchg imul mov test inc fldenv loope in and flds jle (bad) out hlt adc outsl adc lahf push or rorb jmp (bad) sub aaa jo out lahf pushf xor xchg xchg aad mov push or clc inc lds cmp out cltd cli aad xchg jnp lods cmc (bad) ljmp pushf lret out (bad) xor incl imul jne,pn mov es lds int3 xchg (bad) in stc push icebp mov mov movsb fisttpl fnstsw pop stos sub ja inc icebp pop pop mov sbb ja add incl and dec xor clc jno clc enterw sub add xchg fsubr mov or pop mov clc or in pusha loop dec jns pop gs (bad) stc mov ja ljmp mov je xchg dec mov cld push mov lea lret andl sub and stc fdiv imul mov enter mov dec add xor jne xchg ljmp sub lret pop add mov jbe mov mov movsb jle dec lret push out xchg sub loopne bound push xchg pusha sub cmp push loope jno push loope mov (bad) test dec xor push into ljmp xor outsb dec push xor mov pop into dec mov mov pop push in es pop xor imul cmp orl xor pop int3 xchg es adc xchg sti mov (bad) or dec or movsb adc jl repz inc shr ss jnp orb or jnp mov jg leave loopne test push or mov (bad) lods add mov fisubr inc xchg cmpsb pop pop sahf test push rcr adc lock xchg pushf rep imul arpl pop or adc inc sbb sbb ljmp dec inc add mov in lcall test xchg hlt sbb push icebp xlat sub mov jne scas in dec xor xor xor out xchg lock cmp (bad) imul sub xchg cmp pop cmpsb in pushf lods mov jle sbb lret and xor rcl mov dec cwtl xor xchg cmp int xorb scas sbb push repz xor fs mov add cltd xor outsb adc adc aad outsb mov inc dec sub imul roll push (bad) out ficomp pop fist test cmp jp ja sbb addr16 mov scas add dec cmp pop add jnp in aaa jb mov xchg cwtl stos sbb and insl (bad) aaa mov bnd (bad) xor jbe xrelease fidivrl mov out push imul or xorl das aas mov aad push int3 data16 mov sbb push bound (bad) mov out stos aaa pusha mov and mov pop nop out cmpsl sbb push cs lcallw dec xor dec xchg xchg cmp (bad) xchg dec and cmp push mov test lea adc sub pop std in add xor push pop shl mov mov clc mov push lods cmpsl dec mov inc inc imul (bad) mulb inc popf pop push mov out sub dec mov aas add sub pop dec mov (bad) push test outsl mov cs mov loope inc iret fcompl jo fwait loop pop pushl imull leave ja movsl mov scas xor int3 push xchg mov call sub cmpl xor sar fnstsw add xchg sahf dec sbb cmp add (bad) xor dec out arpl sbb xor push stc in sub dec jge mov insl xchg pop lahf test or ror aam pop shrb out adc jbe cmp push in mov dec or stos insl jne xor push xor jnp jne (bad) clc aas out xorb mov xchg pop ljmp lods cwtl xor sbb (bad) dec sbb dec adc dec xchg dec mov adc add jo (bad) ficompl enter jl popa call xchg xor stc popa pushf mov mov mov mov ss out fnsave pusha aas lahf fsubr sbb mov adc rorl pop lods jmp (bad) jmp xchg addr16 (bad) jbe imul sub mov push cmp aas mov sbb orl inc stc lret into dec push movsb call fldl push or mov push sub stc sbb inc and aad jle xlat mov pop xor mov stos pop outsb and push in xor and fimul pop xlat mov sahf mov dec stc xchg xlat je xor pop aad or xchg adc les cwtl rcll and shlb inc pop stc jne in pusha stos cmp mov and jns or lahf (bad) hlt jno jnp dec mov lea xchg lret mov lock or lcall mov test mov stc shl inc ret leave xchg xchg shr repnz loope push ljmp subl pop dec and pop test mov (bad) adc cmp stos dec mov xchg imull out scas subb xchg in push cmp call scas test jnp orb cmp je xchg push std push outsb xchg mov jae out sbb add and mov push andb pusha xor xchg mov mov pop in xor xor lods xchg dec xorl sub dec or adc sbb mov enter xchg sub add lds clc dec pop movsb shlb push call dec inc jl leave mov lock dec cmp lcall add (bad) sti xchg cmp out leave les pop sbb cltd ret push dec leave mov cmp xchg dec jp lea fsubrl outsl or xlat dec je repnz mov dec add ja pop push mov xchg popf lea (bad) cli mov mov adc sbb test add add movsb push dec xchg data16 dec lds xchg js js fcoml test ret xor cmp frstor jb aas adc std lock jmp xchg jae fnstsw imul push or sbb push sbb stos inc insb xchg lock or daa lcall lods fucomip sbbl scas mov imul xchg adc leave mov cli aam xor repz je repz lea addr16 ljmp dec pusha add arpl pusha jle jno and jo pusha mov adc push mov mov popa sub adc jns dec loopne mov scas push mov and cmp push int mov out mov in adc pop sbb scas (bad) mov sti push xchg (bad) mov cmpsl mov jnp (bad) push cmp cmpsb test jmp div and sbbb mov (bad) jb cld adc fs insb push mov and dec (bad) popa ja rcrb lea stos inc mov aaa jbe cwtl hlt inc mov and gs and inc sub push loope outsb inc out mov lea pop bound int cmp xchg jbe outsl nop add addr16 sub push push loope push popa fmul fstpt adc movsb lcall out mov push mov movswl dec mov std ds inc hlt sub ret rep daa mov cltd cmp cmp pop or sub sbbl in and pop push sti pop push lahf movsb xor roll imul or sbb mov jmp popa sub sbb xchg call stos lahf ds fnstsw mov scas xchg or icebp jno mov and jl stc jecxz xor stos inc adc push es lds cwtl mov les push dec cmp gs movsb xchg out push pop mov push xchg pop fcmove in ljmp es mov sahf inc dec (bad) mov repnz cmp outsl scas sub out sub or aad hlt jns fidivl jnp mov cmp jp inc insb dec adc sbb popf cmp cltd js sahf addr16 xor mov push jge outsl pop pop jp push sbb or pop sbb outsb jns sbb adc sub sub mov jp leave repnz mov (bad) pop or iret jmp mov scas (bad) insb insl pop pop push gs in mov cwtl mov inc mov call aas and mov inc xor scas and sub xor test dec mov xor dec sbb push mov aam adc add adc ss hlt push and aaa icebp (bad) xrelease fs loope or adc mov (bad) ret rcrl (bad) repnz loope jg push insb mov mov jno sti dec out pop sub xor lea fs xor faddl xchg mov push sti xchg adc loopne (bad) mov jno jno leave add das or aaa je movsl test xchg mov sbb mov add test ret imul lds dec pop xchg cmp jge jecxz push iret mov fsubrs mov sub loope xchg or imul in xchg sarb inc xor lcall (bad) dec out jo push imul cli mov add sarb mov nop not lahf and rorl insb (bad) jb fidivrl ljmp aas or (bad) mov xor cmp push insb fild sahf jp xchg sti stos xchg sub fwait add or adc inc xchg lahf std pusha cmp (bad) rclb repnz into (bad) fadds sbb fs add or xchg lahf xchg cmp dec push mov das mov sbb icebp jmp push xchg xor mov in adc loope test or (bad) xor sbb xchg mov pop rcll mov mov sbb mov mov shlb out int3 mov popa adc dec fcompl lock call popa push adc fincstp movsb jae push pop out cli mov insl jge sub fstl lret stos xor lock xchg fnstcw es xor push adcb outsb ret mov out inc mov push xor stos push push insb dec add sbb dec jbe (bad) fiaddl or jo sbb stos adc pop jl and sub hlt inc sub cli jo adc lds jnp push add bound xchg aas adc in aad imulb test int3 sbbl cltd movsl xchg mov sbb popf sti es (bad) mov jnp es dec aas rcrl xor outsl lock movb popf mov xor adc push fucom and aas sub (bad) hlt bound fdiv sub call imul xchg cmc mov jg sub dec mov pusha or insl fcomps dec sub pop xlat imul int3 cmp (bad) mov js inc dec cltd sbb int3 ficoml mov lcall jnp adc aaa jp mov inc out cli cmp mov mov pop sub xchg push sub mov mov mov jle (bad) int popl xchg out sbb cmpsb int3 popl push mov dec mov pushf call sbb sub mov out push mov cwtl ljmp cli std inc push leave in nop mov mov ja mov add sub xchg bsr aas mov or cmp dec mov popf sub dec enter shlb cld xor stos or cli cltd imul pusha pop mov mov dec ss out fiadd mov addr16 data16 xchg mov mov sub xchg and mov push add jnp cltd test call cmpsl aam jge loop dec out mov pop int and fimull adc xchg or or xor lcall xchg mov mov test lods (bad) out adc and leave mov mov cmp fwait xchg jne push hlt outsb out cmp sub cmpsb (bad) addl mov sahf aam addl inc pop sbb dec ret dec std lret bnd sub js leave mov sbb or call mov cmp fisubrl ds mov cld cld jb add or lret sub ss push or adc pop mov inc icebp stos mov fsubrl cmp and lahf aam or hlt (bad) test arpl xchg ljmp mov in je fwait outsb mov pop lock mov push push shll mov loop sbb int aad and add fdiv repz pusha daa call in cmc jmp adc divb pop ds sbb loope mov push ficoml imul xchg lahf loopne sbb jno out cltd xchg stc sub out push ljmp mov fs cmp push push jns pop dec and push push xchg rcrl ret pushf mov sub cmp cmp loop mov stos stc sub mov icebp sub mov (bad) push sub cmp push popa fldt add xor jns sbb stos sub adc lcall insb jmp pop inc (bad) sbbl ret and into ljmp sbb dec pop mov test je cwtl jae jl lahf je sub pop mov sbb pop adc scas mov and fldl insl das gs or mov pop shll mov sbb adc iret loopne xor or mov (bad) xor mov mov sub scas (bad) outsl xchg out pop test jp scas cmp roll outsl jecxz mov fdivrl rclb pushf jmp add daa dec stc adc loope outsb inc in lods into lret jg fdivrs xor push divl es clc inc insb add jp mov pop mov jp mov cltd dec fsts xor dec rclb in xchg add or (bad) jae popa rcrl sub shr ret mov lods xor out outsl aaa sbb out adc repnz sub icebp pop mov push test push dec jb mov stos sub aam mov hlt outsb std adc fwait pop leave dec jg sarb mov loope pop jb adc inc jae lcall cmp push dec inc mov cld out dec pop mov fneni(8087 adc (bad) sub mov push mov jo add (bad) jecxz shr (bad) push fadd sbb insb (bad) or lret movsb mov jae jg int int mov sbb sbb loope xlat icebp jp aaa dec ljmp jecxz xchg stos stos (bad) cmpsb cmp inc push pop pop pop scas loopne lds jnp adc xor stos dec jle in cli mov jmp data16 mov or mov pop loope dec dec icebp outsb dec xchg js pop out sub inc dec cmc push sub int mov aaa push cld xor loopne sub popf push cs cwtl fimull aad sbb (bad) dec mov sub cmc xchg imul jp ret jge add cli mov cmp push insb movsl xchg ds inc inc add push lods lock push jbe (bad) sbb outsl or pop (bad) push mov aas mov lcall pushf xor into pop add leave imul (bad) or out cmp or add mov test pop in push jl sar out psubq dec in js mov bound add jge (bad) jns sbb test jne clc sub dec or cmpsb negb js or movsb adc cld stc scas sarl mov xchg add and xchg mov jmp add xor mov cmp js sub out push lea popa pop dec std xor mov pop fidivl pusha push cld rclb rcl loopne dec push push pop jbe sarl pop andl mov mov jge in jmp imul (bad) pop stc jae fcoms stos pusha xchg xchg mov cli xor dec fimull (bad) flds cltd jp inc popa xor add push dec loope jno mov mov xchg (bad) mov pop stc add sub gs jno jns fwait and xchg push mov repz loop out pop add addr16 xor inc xor clc inc sub aaa cmpsl add or mov and mov push dec and pop (bad) dec xor push push lock rorb mov or (bad) lods in pop cwtl out pop daa fstl mov pop std fcomip mov jge inc mov adc adc cmp lcall std cmp mov cmc and fldenv movsl and rcrb enter push fs add insl sbb test mov shll xchg jne xchg nop (bad) jae out adc pop cmp std in fwait cmp push shrl dec xchg mov ss popa movsl int lods movsb or shrb sub hlt es imul cmc lcall push push (bad) rol test call push pusha cmp lahf (bad) int3 mov xlat sub mov cmp and jecxz ret pop sbb shrb sbb cs xchg mov lods sti sbb shr mov xor inc das es cmpsl loopne test cmp inc jb xor sarb out lods (bad) mov inc cld jge imul mov outsl mull clc mov push push push lods (bad) fildll push popa aas jne leave cmp lock scas lret push out das add xchg fucom mov mov and sbb mov add mov lret js (bad) and sbb xchg mov cmpsb mov add sub sub das outsl outsb mov insb loop inc sub sbb sbb mov lock fcmove cmc out stc cmp adc mov ja fdivrl jmp into adc imul and mov mov mov and (bad) popf lcall sbb enter mov add std pop enter outsb jmp aam call lds cmp leave add out mov cmp leave or insb stos dec stos pop fisubrl mov stc inc cmp test push jmp ds xor das int3 out and das pop lods jae fmulp cmp cwtl jg arpl xor sbb ret aad xchg lods out jno ss add cs mov sub fistp data16 stos (bad) rcrl pop add mov fildl imul aad sbb dec (bad) les inc fwait mov aas loopne js lock (bad) or loop movsl mov sub andl push cltd aam scas lods add aad (bad) pop in bound xchg and inc jecxz lret fcmovu inc jge xor nop clc shr ja fcmovnbe xchg xlat int3 pop bound pusha cli cmpsb inc mov or push inc aam loopne push out cmc cmpl mov lds shrl imul cltd xchg pop sbb int inc in ret jle stos xchg pop cs ja das jge out sbb inc and nop push wbinvd outsb dec pusha scas sbb cmp pop mov loop sbb pop popf or push inc gs inc inc pop push mov inc xchg lea lock jecxz push xchg test dec cmp cld aad rol or cld cmp xor mov aad stc and fs push mov insb repz xor movsb sub fucomi test mov or adc aad out mov mov loopne xor inc rcrl repz mov loope orl jge jp test popf adc push imul in imul jbe rcrb jbe aam mov jae add pop dec rclb cmp xchg cmp ret mov aaa sbb (bad) push out sub mov sbbl leave mov imul push inc mov pop dec xchg outsb aad fs or cld cltd je hlt or dec in test add adc push push push (bad) jmp fmull inc cmpsb (bad) mov push xchg xchg rorl pop mov inc (bad) mov sarl cmp push lods adc sub fsubrp push lahf mov bnd cld test jl or inc mov add das mov sbb leave jle movsl jns xchg sbb mov jns mov test test adc (bad) cmp insl loop push xchg jg inc jnp lock call sbb movb je xor fldz (bad) ja testl push xor repz lods xchg repnz mov leave fmull lea hlt bound sbb cmp sbb popf or jb push rclb sub jecxz aaa xor add sarb leave push inc add pop repnz sbb fs dec inc or imul jmp xlat jg insb fiadd cltd mov loopne orl push das sar mov pop inc aas mov jnp xlat aam test sub lahf fidivl leave mov into test mov adc push jle fcompl cmp cmp xor xor adc push inc fdivr arpl icebp lods jle mov jno adc mov mov out pop ss fsubs push gs repnz loopne add repz sbb (bad) mov cmp data16 hlt mov outsb jbe jae push loopne xchg and int3 fiadd adc (bad) jge addr16 js sub sub xchg mov jbe lret leavew mov cmp xchg or push jae jb cli stos cli mov inc or add sbb push rcl enter or cli adc push aad xor push push sub or jmp les shrl jae adc pop xchg lret fwait mov xchg cmp test jl insb addr16 inc outsl mov (bad) xor xchg leave (bad) icebp pushf imul je test push rol fistp inc pop fidivr adc mov sbb push push out sbb dec daa aad cmp outsb jp (bad) jecxz push mov pop jge (bad) inc int3 xchg xchg cld jne hlt add mov pop and jb sbb pushf jns xchg call js orl push enter xor inc ficoml enter imul or test xor cmp lret xor jmp jno lahf or jg addl (bad) mov sub adc dec into fsubp loope loop stos fistp cwtl decb xor pop fwait or adc cmp adc mov hlt cmc andl pop sbb imul push or fstpl test not jnp jmp lret pop jb cs insl scas inc imul aam popf arpl imul enter jno xor push stos je or lret xchg adc sti arpl inc (bad) sub std sub mov and es movsl jge stos negl pop push sub in jg ljmp pop jo mov hlt push mov cmp (bad) mov out lahf add adc jl inc xchg mov mov jae pop call jo add (bad) jmp lods loop inc jo xchg xchg (bad) aas cmp inc neg je fwait jle push cmpsb lret popf (bad) mov cmp xor out scas or push cltd scas aas xor jns fnstcw cmp les out adc add jg sub (bad) mov inc cmp pop inc add xor fdivrl dec subl inc loope jecxz cmpsb and inc push in inc outsb mov dec sub sbb inc lret inc (bad) pop js cmpsl mov scas jge cs push mov sbb out (bad) mov idivb xchg adc pop inc pop js andl repnz aaa adc or (bad) mov mov adc cld mov push test adc fwait dec push (bad) rcr mov jno rcr push inc test push cltd cs mov mov inc sbb jmp add sub cmpsl mov jle sarl pop jae mov cmc ljmp ss sub xor rolb push aas (bad) and push xchg loop mov les push fildl je sbb fnsave in adc call nop in mov adc push xchg push in push cwtl pop icebp je xor dec jns (bad) cmc es bound cs pop add cmp aad mov add fnstsw inc inc pop push incl jg pop inc push shrb cmp jp add loope xor stc inc into movb xor inc sub (bad) in aam xor in or push adc mov or sub or aas adc push cs adc iret stos stc xor mov jbe cli cltd nop shr mov jb xor clc jecxz mov push popa movsl mov cmp mov inc lods cmp sub or xorb dec ret pushf add mov xor dec cltd mov dec lds and xor mov daa sbb and mov cmpsl mov sbb (bad) stos (bad) mov inc adc sti int xlat test icebp stos test out ljmp push arpl mov fmul push pushf pushf inc les mov sbb or stos jle jg or fildll sbb jg std ret mov cwtl hlt push ljmp sub adc mov ds jle push jp movl sarb sbb shrd mov mov rcrb outsb fcomps icebp mov xchg icebp push add jo fbld stos aaa sbb pop jle xchg cmp das icebp dec adc sahf fsubl lret movsbl flds jnp and imul test push or pushf addr16 mov xchg gs jo sub push js in (bad) cmp movl jbe xor test dec test lea xchg or fcompl ret loopne rolb cmp mov popf pop fisub xchg mov add scas (bad) cwtl cmp aaa lock mov or (bad) jb xchg or int jae fwait scas sbb out sub fcoms mov push (bad) rcr cmpsl sti push (bad) in lods inc xchg in rcll or jmp xor xchg stc mov mov scas cmp out mov mov push and test xchg lret enter xchg mov mov push push pop pushf inc cwtl lret idivb and stc cs sbb addl inc std mov xor aas or fist test sbb pop jecxz mov roll push outsl mov jg mov das push repz scas ja cmpsl js inc fstps sbb ret mov repnz daa push or or inc inc dec test aam loopne lods jmp into imul xlat sbb or sbb in xchg pop xor aaa mov cmp fdivl shll (bad) repnz mov ljmp push cmp pop xchg (bad) push mov or xchg (bad) or or stos ret mov movsl mov add test mov mov iret jle dec lret lock xor daa push dec mul add sbb movb loop xchg pop into push out and jno imul mov xor rcrb push notl add push ds mov out retw loopne roll lcall (bad) in push mov mov out test ds inc subl lds pop rorl lcall stos outsb cmp icebp lret fistpll lods jg iret outsb fwait mov out inc adcb rclb cmp adc jo add test test jmp in rclb cmpsl mov aaa pop xor pusha or mov xchg insl outsl outsb xor lea jb call sahf pop fwait pop add and or mov jg addr16 push subl not out (bad) mov jge js fidivl jb xchg stos addr16 inc gs loope (bad) shlb and (bad) push in and xor pusha mov loope sub add inc jmp pop pop fwait idivb fdivrs jge enter dec and movsl (bad) aas mov pop push arpl xchg jge sub outsb xor jge xchg test rorb ds lahf cmpsb xor std mov xchg sub mov mov sbb jmp sahf push sub (bad) ror jle cmp inc andb clc lcall xchg jecxz dec sub (bad) pop or movsl andl xchg test not push sub (bad) call daa (bad) or mov cmp push into into das pop imul push pop fs aaa mov push sub pop daa add cmp mov cmp std mov or out rclb mov rcl push mov mov jmp outsb bound movsb movsb jmp inc xchg lcall sahf repz in enter mulb loope loope mov or in and idivl xchg cwtl add mov or daa push add sahf pop js add pop sbb out daa sbbl and aad insl dec bound pop leave xor into cmp in lahf cwtl xchg xchg jp aaa xorl mov and test lea jo sbb or ljmp loopne movsb int push mov pop sbb and (bad) hlt mov stc add outsl popf test inc mov fistp or xlat cld jae mov cs jle pop stos imul jmp (bad) jmp mov fnop shlb mov nop fsts push mov jb mov sar hlt dec xchg es dec dec push mov adc mov and out add or enter lock adc (bad) (bad) inc rcrl add lock mov jb push cmp (bad) gs cli sarl (bad) (bad) gs cmp cmpsb gs sbb push mov jecxz hlt jo inc dec adc hlt inc stc (bad) xchg arpl nop stc push mov pop stc add dec mov sub out pop mov push not sbbl mov add lea sub iret sub rcll or jl xchg pushf das imul dec ret jae cmp xchg mov stos pop dec scas mov cmpsb movsb stos push sub mov fcomip mov loop sub push shrl jns or int push outsl jmp push bound stc mov int mov cs nop jecxz inc and call lret push fldl push xchg sbb adc cmpsl aas xchg movsb rcll popf ret inc xchg mov or std xchg mov stos jbe push add mov add push lods sub lcall and fmuls enter insl daa mov popa lods lock adc arpl movsb pusha ret cs jle mov sub mov in dec (bad) je jo jmp out adc add push js int out int3 daa sbb out cld mov addl (bad) loopne push shlb loopne push ret ffreep mov fidiv dec pop stos or in mov mov mov inc mov mov dec push (bad) jbe inc sub loop jb dec push inc sub dec fmulp push popa xor dec loop fisub jne mov insb mov shrl lods movsb pop or xchg jge fcoml imul (bad) iret push test inc or mov shll ret mov adc dec mov loopne rcr js orb fdivrl add and xorb fdivr pop push cmp mov mov rcrb jo adc es ret (bad) roll add push (bad) cli pop lidtl test fs or mov push pop clc scas push mov add fidivr mov hlt and aas dec mov jo inc orl and pop dec sub jge jmp scas sbb inc (bad) je,pt lret sub mov ret call fldl fwait push or sbb es out in movl insb mov xchg dec stos daa ret xlat in sub pop int popf xor push pop movsl sub xchg movsl push divl vmovntpd mov nop std adc jo scas sti cmp pop je scas pop arpl std inc fisubr sbb je popf jle jbe jp outsb sbb or lods (bad) sbb (bad) mov gs inc jns call dec cmp mov mov and ljmp add push fs mov dec fmulp roll out adc xor loop inc ret lahf and push push stos pop jge sahf add or push les xor shll jmp inc mov in imul imul jne sub sti jmp movsl add mov adc movsl clc xchg push xor sahf jle pop imul or stc pop fwait mov ljmp fimul xor adc dec cmp mov jae cmpsb cmp sub add xchg sub sbb cmp or push (bad) cmp mov jge fs sysexit inc iret xchg pop push xchg lret cli lcall mov pop outsb mov lret jne sub (bad) data16 sub xchg inc (bad) xor push dec enter mov push lods and inc lock fxch out and inc in adc pop push cltd sbb lods (bad) daa mov pop leave adc mov test sub jecxz lahf pop push sub cwtl lret jne inc xchg push xorl (bad) mov loopne jo jae add ja stos adc mov icebp and jnp aas out xchg dec adc test rclb out sbb pusha gs mov clc or sub loop mov inc (bad) fldcw lcall in sub add icebp and insl (bad) and lods jne rolb adc loope gs loop (bad) mov nop cmp mov clc sbb clc dec jg jge mov sub inc xor pop inc fistpll clc int3 cmp dec sub mov lahf pop mov mov (bad) (bad) sbb aam stc test cmpsb test outsb outsl fbstp in test jmp imul ljmp inc clc dec gs (bad) in por daa stos (bad) xor jae mov sub insl repnz pushl mov mov out iret pop (bad) jge mov sub or nop adc pushf lret negl aad cmp push xchg in pop rol out xchg outsl nop jo addr16 and jne pop int3 es test adc repnz push ds cwtl rcrl adc mov mov inc int imul daa int3 ficom adc (bad) xor (bad) repnz outsb incb jl xor dec dec adc into mov ds inc mov nop sub jmp (bad) jno mov std test sbb xor leave adc inc mov mov imul adc sub dec es lcall cmc add movsb repz sbb mov mov adc in dec aad ja sti push outsl jle cltd sti mov push add push xchg std pushf adc stos xor xchg cmc dec daa mov jb ds mov test scas rol (bad) or xchg sub sub and call popa leave ljmp daa rclb mov aad add repnz adc stos mov stos sbb mov mov aad pop xchg sbb cmc call mov mov add mov test das jge arpl inc pop mov xchg data16 in dec jo xor repz int3 outsl mov adc cli xchg add fstps (bad) pop add push jo mov and add dec (bad) lock xchg pextrw and (bad) clc movsb adc (bad) inc std in pop iret add xchg mov aad dec bound sbbb (bad) cmp shll movsl jnp repz es mov pop in imul cmp arpl inc jmp cmp adc push stos inc xchg sbbl or daa or lods add inc cwtl fistpll les out subb push push sahf and and xor jns ret ljmp dec imull and shrb sti cwtl popa jp daa jge jle fcmovb mov ret lcall clc loope add stos aad mov dec call int3 imull js or fwait rcr lods pop mov inc gs pop fiadd push or fwait ja cmpsl push push add test mov adc (bad) loopne iret das aas and or mov mov pop fcos in orl or inc mov mov stos scas in decl loop xor popa pop mov sbb mov (bad) fstl arpl xor inc gs pop in pop mov adc sbb dec pop fmul (bad) cli cmpl (bad) and sub lahf mov pop mov hlt cwtl jecxz mov pop and sub xor and push mov fnsave bndldx rcrb clc add dec dec repnz scas lcall sahf pop in cmpsb test mov lcall jge sarl orb jmp pushf test sahf xor inc sbb cli pop into add outsl push rcrb (bad) xor in movsb mov mov js sub sbb out cmp inc test je inc setnp out lea scas cmp leave in xchg sbb push pushf inc scas movsb inc push jns mov xchg cli mov push mov push pop mov lea iret mov add scas add icebp push jge jb lods cmp xchg gs pop andl lcall mov and pop cs pusha add stos cmp (bad) stos xor xchg inc push mov add and xchg mov jecxz pop fisttp data16 mov fnstsw pop mov pop pop mov sarb mov lea xchg push js jb call push mov xor repnz sub pop test mov sbb xchg xchg lods nop mov leave pop mov xchg shlb xor mov cmpsb jecxz mov (bad) ds dec dec ljmp pop cmp add dec xor (bad) unpcklps xor enter mov push push sub stos push mov insl mov dec int movsl add cwtl mov mov pop cmc (bad) js mov add mov cltd out sbb push inc mov cmp jb clc hlt xchg adc add in test ret inc scas nop pop pop add pusha arpl push add sar jns lret data16 pop lret inc jb cwtl or and clc jb push pusha mov test dec popf pop xchg rep mov sbb out int adc push mov xor cmp push push dec inc dec dec loop sub xor mov xchg lods add push inc pop sub mov add add in aad lret es popa scas dec lahf add jle dec cmp xchg cmpsb jo mov scas dec inc mov leave pop mov clc sub mov jno scas test out or jns pop mov into popl mov clc mov push mov sahf jo xor loope sub push pop mov dec adc scas dec xchg das or mov in stos repnz int xor ret in add mov rcl ss sub in lret mov (bad) icebp shll in mov movsb out mov inc mov dec xor jecxz and mov cmpsb cmp push jl mov jb imul push rorb push jmp pop sub mov dec cld mov js inc add loop add xor into int add loope dec or iret iret or dec subl jb repz push mov je or sbb iret dec fsubrs jmp lds mov pop adc fistl pop sbb push test jl jmp outsb (bad) cmc ret dec jo or dec mov aad cmc pop ja mov (bad) outsl (bad) xor jns xchg add pop lcall jmp cs adc mov loope int xchg adc cmpsl test loopne sub xchg cwtl nop pop rclb lcall shlb (bad) (bad) das outsl es cltd cmpsl sub (bad) rep add and push add add mov insb add cmp ficomp inc pop repnz jae dec (bad) xor pop in js fwait insb cmp push mov jnp pop xor xor inc ja xchg cmpsb sbb stos or mov sbb repz pop in fnstcw in mov dec sub nop jl fisttpll adc pop xorl aas lods and sbb or and pop mov xor scas fwait inc sub dec inc sbb je stos scas rol add int3 jg popf mov jnp sub popf add cmpsl cmp pushf cmp adc rol and lods adc popa sub mov mov pop lret pop jge sahf fiadd pop sbb les movsb sub sub adc gs iret push xor test xor hlt mov (bad) ss inc sbb mov sbb add enter sub outsb gs adc jns jbe outsb int3 push and fdivr aas dec dec scas lcall sbb fnclex mov sub and cmpsl std or adc sub dec push incb out je adc icebp push or shlb sti and cmc mov dec lret dec movsl popf clc cwtl cld fdivrs test add adc pusha (bad) inc sbb scas iret sub and dec cmp nop cmpsb (bad) (bad) pop jl (bad) cmp aad daa pop sbb and xor dec mov mov mov (bad) aas (bad) mov ss stos jmp jecxz scas fld mov cli dec (bad) (bad) pushf xchg call jp or pop pop es pminsw dec xchg (bad) in sbb and sub cmp js add sarl lcall js sahf lahf push sbb ljmp pushf and cwtl aam (bad) loop,pt push or sub clc sub subl imul fimul xchg scas or aam push jne xchg cs call push inc sbb cmp mov test daa mov aaa sahf pusha insb push xor (bad) jno jne xlat push aaa test (bad) mov pop or aaa (bad) aas rolb mov iret ret mov adcb pop jae xchg add repz rolb cmp icebp pushl out mov fisttpll popf lahf cmp das js sub push imul cmp xchg xor dec mov lods mov mov adc jge loope inc dec pop mov mov stc jne into push es repz popf inc arpl pop pop mov dec and lret xchg adc ror xorl sbb loopne push addr16 idivb stc loopne push mulb bound jnp adc inc imul cmp push adc mulb ljmp cmp lods adc insl mov fwait (bad) fstps lods lock push (bad) lods adcl sub mov clc inc cmp bound dec pop scas xchg push enter test xor imul int3 jnp jg popa jae aam frstor add ret pop fistpl push mov sbb fsubs inc cmp les mov pop in dec inc adc andps pop jns,pt fistl lods dec popa das lods dec fdivrs jmp push lahf mov push jns stos data16 lock rclb mov mov sbb and push jp lahf call sub lds and fsubrl sbb and push mov xchg xchg aas push cmpsl pop mov sbb imul xchg dec pop sub jmp mov cmc xor push sub out push pop dec out add test call lea pop aam movsl jg shl sub jb nop outsl out mov jne adc sbb add xchg scas dec mov dec imul (bad) repz or insb mov xchg test dec inc movsb mov sti cmp jg xor decb into xchg fisttp xchg xchg jl inc sti push (bad) iret insb stc xchg or add cmpsl fisubl scas scas daa lret sbb pop adc std jnp jnp jb jmp stc mov call push enter sub pop (bad) roll je psubusb js xchg inc cwtl lods imul pop stos scas and imul mov icebp popa sub or stc fwait (bad) fs xchg js int3 fwait lods sub and or bnd test std test ds int3 inc int3 mov cmp or imul add sub fldt ret scas mov cmc jg xor mov dec mov mov ja es xor sub pop sub inc jp,pt inc mov jae cli imul add push addr16 sbbb cwtl jmp lcall (bad) fcomps cltd xchg add jns or jo outsb sbbl insl fimul lret (bad) jne or dec gs repz call sbb cs pop fiaddl push jmp movaps stc dec bt sub lahf outsb (bad) int mov jne sub lret adc imul xor sub sbb xor cmpb xor and cmp test lahf xor jmp fsubrs shll repz sbb out push lret std rorb fnsave ret jg int jge jbe and xchg push jg push dec rcrb rcr cmp cwtl ja mov and dec andl test add ficom clc cmpsl (bad) fdivrs push pop add xlat loope jae sub stc or stc std aam jno cmp xor stos sub pop addb fsubrs pop mov cmpsl pusha pop jb cmpsl pop ljmp sti insb mov mov int3 test and aad dec jle mov jno not iret cli jne add imul out movsb push out mov push in (bad) ret (bad) sbb je in inc fidiv cmpl cmp popa aaa ss mov movsb sub mov sahf aaa scas icebp xor lock push xor pusha jne arpl xlat (bad) mov in pop mov inc inc push arpl cmp push add mov fsubl dec add sub movsb es gs push jae loop sarl and pop push rol pop (bad) adc pop sub cs mov shr loope jmp hlt fsts xchg or mov and shrb imul mov enter dec pop push divb notl lcall (bad) aaa pushf sbb out jge or inc mov xor test pop lods add sahf test cmp push inc loopne pop inc push (bad) je add scas (bad) (bad) jo sbb or rcrb mov sub push jnp cmpl daa xchg subl dec jo or sub push into push insb out add stos adc scas (bad) mov push test repnz fsubrl dec fstps mov (bad) mov pop (bad) pop enter mov cmp or les xchg mov jbe mov loopne outsl imul bound xlat ds pop out xor fiaddl adc fbld sub hlt sbb adc jle sbb sbb and into fwait jb fidiv jmp cmp fsin mov addr16 cli cmpsb out add frndint loop shlb xchg out dec cmp adc fdivr push inc mov inc xchg cwtl test dec cmpsl enter xchg int cmp xor inc pop push jbe fstl jns push and sub xchg inc lcall and pusha lcall push inc stc pop xlat sub iret mov movsb mov mov into test in push ljmp (bad) lret testb sub in lret loopne mov test mov fnstenv sbb negl test aam cld push stos into cwtl xchg test data16 popa inc cmpsl mov or gs movsb push lods lea int3 out (bad) mov inc mov xor xchg jne cmp aas xor or pop insb sti (bad) cmp mov cmp and lahf in and nop cmp fdivr imul stos sub mov iret aad fsubl jmp xor (bad) leave cmp ret add repz pop stc sbb push jbe,pt notb jecxz push mov mov or mov sub ja mov push daa int mov mov les mov (bad) lcall (bad) sub insb fsubs out jmp sbb xchg fidivr ljmp sahf fdivl dec cmp cld jmp sbb fcompl fistl pop pop inc test int mov aas cmp sbb mov mov jge jmp mov push xchg imul cltd sahf fs out lea mov pushf test and or xchg and loopne cmpsb push cmp cmc addr16 (bad) sahf in push stc fcmovu jmp jp fsts enter xor loopne adc mov mulb daa add inc sbb jl pop addb popa mov int3 inc (bad) mov cmp xor es xchg mov (bad) mov dec cmpsb out popf movsb fs test std mov mov movl dec xor cmc stos stos sub inc push sbb pop scas add fs xor pop (bad) in pop ljmp dec int aas mov xor fisubr stos xchg rcll loope (bad) adc js jo mov pop and jne (bad) test inc pop arpl into int3 mov test push mov adc jp cmp aad xor pop add mov fsubrl mov jae mov arpl mov mov sahf inc (bad) ret push adc movsb and cmpsl adc mov nop test fisubr mov sbb mov cmp loopne pop (bad) cs jmp jno cmp pop popf (bad) (bad) xor or test pop (bad) popf jno or sbbb lods movsl sub fnstsw inc and jg sahf dec ljmp or cld pop out mov or scas jg fstps sti pop call lods out clc and cmp inc in lcall jns sti cmpsb push adc push jg test cmpsb adc inc in loop in mov push aas dec hlt in lods ss sub jmp fwait repz (bad) xor movsb cmp cli sbb cmp pop imul stos in cltd sbb cmp aad cmpl add mov sub cld inc or push ja mov outsl jg ds rcl sbb les sub (bad) les fist xchg inc lods fst jge lods shrl shlb inc popa push xchg xlat andl fdivrl (bad) cmp sbb mov out fcoms ror or popa xchg push std test dec cld inc mov sub (bad) call scas inc cmp cmp mov cmpsb dec jno test outsb pop fsubs js jp xlat xchg popa sub mov push sub int3 push sbb (bad) adc pop mov adc enter jo lret mov and inc dec and or add and nop mov mov add scas aaa mov and (bad) shlb fdivr adc movb lock mov jb pop clc mov call cli jge cmp xor inc (bad) sub pop pop jne std lret xor cmp loopne xchg pop mov and in push insb dec push mov stos test out iret loope mov xlat sbbl push arpl sub cmp mov mov lds clc mov gs loop cmp mov pop jnp sti popf lds setbe push ret ss das cwtl dec sbb mov mov js push pop xor cli in repnz xchg cltd mov jecxz xchg adc xor fdivl leave stos xchg in pop mov nop sub pop cwtl or mov (bad) lcall mov mov icebp aaa lods jecxz cmp rclb fdivrs add mov push insb (bad) nop cltd jae stos fs xchg xor mov and das repz xchg (bad) jo stos cmpsb andl adc repz gs jb sbb cwtl cmp sub xlat cmc int pop loope in xchg arpl repz lods jecxz out and and mov sbb pusha es pop or lcall pop adc (bad) clc cmp mov cli jl inc inc inc xchg sbb aad pop sbb in fisttpll and icebp jp push shrb mov xchg sub inc shr sbb lret pop loopne sbb inc push repnz js xor sub pop sti cmpl cmp (bad) (bad) insb jle mov sub (bad) add or pop fistl pusha gs pop cmp mov pop jnp stc outsl clc or test or dec mov or push jae cli xor mov pushl mov push pop jle fsubp push xor push iret mov out fnop inc ret mov insb cs jno and inc pop cmp add jnp adc push sti mov xchg stos ss in jmp je mov test mov fcompl push idivb loop pop inc dec fsubl mov aam jo mov xor jmp push mov sub cmp and xchg xor jbe loopne enter jmp xacquire xlat out sub (bad) cmp sbb sahf into dec das rcr push mov or jbe pop and fsubp imul addr16 aam push pop push fwait inc (bad) leave push mov nop mov mov je jmp (bad) mov xor inc push sbb rclb inc out inc cmpsl loopne test clc aad subl or adc int je cmpsb and js out or dec mov xor mov pop mov (bad) pushf jecxz sub add fs scas repnz test ret repnz and rorl das ds addr16 pop into ds loop add iret pop ret outsl lcall jp jle gs popa xchg xor scas adc add stos in jno push xchg cmp push mov pop jns cmpsb dec pop mov dec or cmp inc mov or mov aam jo stos rorb dec and rclb mov jbe adc cmp fcmovnbe fisubr push mov shlb pop add int3 (bad) sbbl jmp xlat mov cmc dec cmp sbb rcrb and rolb (bad) sahf xor ret vmwrite or adc in cmpsb mov jb adc dec sbb sbb roll jle jle mov mov pop jp addr16 stos cwtl jmp (bad) sti push xchg mov in inc mov adc adc in sbb icebp inc dec sbb mov leave ja ds push inc cmp mov mov sbb jmp sahf outsb inc rcrb inc mov jl inc dec std test mov mov aas lcall xchg mull (bad) movsb repz xchg add test (bad) fxch aas lcall lret in and sub fwait push xchg fdivl xor push push pushf out add ficom popa cltd mov or test xor into jl mov fistpl shl js loope add insb xchg cmpsl rcll jno movsl pop xchg mov (bad) adc inc and ret xchg ficomp inc mov jne and pop repz mov jle push shl push sub adc (bad) rorl or aad mov daa add jle adc fsubrs les inc mov rcll jae jp pop mov mov mov sbb les cmp xchg jo ss jns test jg and lods jbe aas in int3 mov addr16 xor pop inc lods jecxz jecxz fistpll sub xor cwtd xchg or out cs es add jmp xor mov and out sbb mov pop nop js and stos int sub adc cmp lods (bad) mov mov out push adc clc fnstcw inc loop cmpsb adc stos mov stos stos sbb sub mov loopne (bad) mov pop ljmp out sub xor ret xor int rcrl data16 scas pop cld or mov add cmp lcall (bad) push pop icebp pop mov adc aad cmp cmp push mov push cmpsb cli ljmp imul pop int int and cmp clc ret pop and imul mov arpl xchg test cld adc stos dec xor and repz xlat cwtl fidivrl sbb xchg pop (bad) insb mov insb lods mov (bad) arpl movsl push popf push inc push ljmp leave out adc mov inc add scas mov jmp push aam mov clc jae jmp incb adc add mov xor stc sti cmp (bad) sbb xchg mov adc sub mov mov pop fstl mov int3 arpl pop push test pop jmp pop mov pop out jle pop ds or inc pushf imul inc jmp sahf sbb int fildll (bad) push scas outsb adc jp push cmp jne sub mov lds arpl addr16 sbb repz jae insl mov adc cmp fsubrp out std inc mov sbbb int3 addr16 fdivrs in dec imul jns ss dec adc mov adc or xchg in negb cmpxchg xor out (bad) lods stos test inc loop jnp fadd aas in mov jmp in ret sub frstor (bad) jge mov xlat lahf lds mov fcoml pusha cli jbe xchg (bad) arpl and lds pop push test je push addr16 sahf push loop cmp inc and jmp inc rorb mov sub in lcall out ret fisubr stos dec jl loop cli daa cs fsts push lahf and repz xchg mov sbb jo pop enter jle jb sbb imul sub loop xchg mov insl xchg popa addr16 and dec mov pop incl inc out mov or dec sub pop ja xor push aas inc push (bad) xlat xlat adc sbb mov stos enter nop mov aad leave jb sahf out pop push lahf stc mov cmpsl sub ss dec sub or jb movsl sub and ficom ret in pushf and jae pop pop jmp and vmread out sub push jae cmpsb loopne roll cmp mov ret es ds or (bad) cmp push mov bswap sub stos fistpll push pop je mov enter sbb pop sbb cmpl xor out cmp lret in pop aaa sbbl aam dec inc icebp cmpsb lods std mov push mov mov repnz cmp or in ja sub adc faddl sbb loope push add cli jecxz xor jo adc push jne cmpsb (bad) mov das pop stc bound pop push dec pop testb stos lea and aad mov push (bad) sub sub das push aad xchg dec (bad) xlat dec xlat enter fisttpll or mov fsubrs ds jbe add inc stos fwait out dec sarl mov xchg aas fsubs (bad) idivb xchg sbb mov xlat lahf pop jecxz xchg outsl out arpl cli roll cmc addr16 cli pop mov aad hlt loopne inc pop sbb arpl xlat out add mov bound iret dec test cli std xor mov rclb add mov fsubrl fwait mov jecxz sahf jns sahf xchg ds xchg lahf pusha les lods jg adc xchg ds jae cwtl aaa mov sbb jb inc mov sub into inc inc pop xchg push loopne addb out mov dec lods sub cmc (bad) (bad) dec dec xchg mov push std mov pop mov jg jecxz or and jae mov dec fbld cmp imul add loopne stos mov mov lret adc push mov jge fwait add sbb mov or sbb lea xor into mov adc adc in fidivrl cmpsb loopne imul (bad) xor lea mov sti pop dec inc call pop xchg dec sbb push sub lock aad inc mov aaa faddp mov inc das insl cmp mov mov jbe jno das ja decb lret mov jle pop xchg (bad) jno pop in inc inc adcl loope test cs fs pusha js or cwtl dec jnp fstpl mov fcmove scas inc pop (bad) icebp test mov int popl mov jns pushl mov int3 scas jl ss push cmpl xor mov add in fwait lret je clc in add pop push (bad) int mov sub jno pop dec sub ds and sub stos mov push je or mov add inc aaa cmp inc dec addr16 stos addl icebp or (bad) cmc rorl jg incb sbb mov js sub xor inc xor sbb xor divb mov ds jmp mov mov xchg sarb call loop dec aam mov (bad) jge lds inc lea pop sub je out push out mov cmp sbb std sbb ret xor sub call inc (bad) pushl push xor insb mov pop in mov adcb mov dec lods sub aad mov xor out in scas jmp out mov dec in cwtl push clc xchg xchg in add imulb iret imul cmp cwtl push loope cs gs jmp (bad) enter push xchg lea xor adcb inc mov movsl dec outsl hlt insl mov sarl popf sti lahf mov pop (bad) arpl push in fisttpll jb xor icebp xchg mov dec xor jmp aad sbb sbb cmp pop push mov movsb xchg ror xchg sti dec dec sub cmp loop das xor sbb (bad) in inc add (bad) mov xchg mov into rcll inc push mov repnz scas jl inc mov ss pop cmp hlt rcrl sti pop lcall lods setl sub data16 aam pop les add (bad) ror mov dec sbb rclb jl and mov in mov adc scas mov repnz movhps xchg insb mov pushf mov outsl xchg repz jge std inc pop das lds imul and lret icebp mov mov fldt daa mov enter bound lret es mov aaa mov in stc mov cwtl fldl2t fnstcw out mull enter imul push push int3 inc xchg imul sub in jg jnp xorl and mov jb or aas push sub inc pop enter in mov outsb jbe ret mov jo lcall add xchg jnp dec mov jmp dec js adc xchg fldl jmp inc mov and mov cmp xor loop das adc xchg push or out (bad) and inc (bad) je clc cmp push xorl ret adc fs (bad) jmp push mov (bad) divl mov repnz gs cld inc push lret (bad) mov iret mov sti push push mov inc out fistl scas test xchg adc ds and in mov dec fstpl scas into mov sbbl (bad) rclb ret cmp stos mov dec cli jle,pn sub mov push sbb cmp pop fidiv in dec xor lea mov mov cmp dec fistpll cmc pusha out (bad) xor andl data16 xchg and sbb lret sub (bad) negl ja pop pop mov insb loope mov jecxz ss inc fild loopne aam push sti pushf fcompl shlb mov adc or xchg push push inc add xchg xor inc pop dec adcl stos pop add ror ljmp mov pop push inc fs push sub sbb jo fcomps fsubrs inc popf jle xchg and mov addl scas lcall pop jmp add adcb das add cmpsb mov xor out sar pop rep add cmp mov mov adc mov xor cmpsb and les jl jno cmpsl movsb stc push pushf jg cwtl or pop adc into cltd cmpsb sbb jle fnsave mov inc in daa xchg cmc (bad) mov jb sahf jmp movsl xchg cmp ja call xchg (bad) std lcall jle pop mov cmp or and mov push movsb dec test fadds pop insb mov mov and xlat lret addr16 and mov mov lea sbb pop mov adcl jl jmp cmovne hlt js and lock inc cmpsb jno mov (bad) jno mov sbb int3 (bad) hlt pop stos adc pushf loope arpl subb (bad) test or mov and and daa cmp pop cli out out cmp xchg jno push sub mov test lods stos mov or lds mov mov mov and sbbb mov inc inc sahf inc sbb cwtl jecxz inc add mov cld leave push insb bound pop lret cmc aam xlat bound sti js scas push xchg sbb jg cmp adc push shrb fwait push push add repz or mov xchg xchg outsb jecxz out dec sub xor mov stc adc addr16 cmp js inc mov fnstenv xchg out cmp fdivl rolb sub scas js push ret xlat and insl in pop jmp ss dec jmp push add jge fs mov sbb xor or mov mov in mov pop cwtl xchg fwait (bad) icebp jp inc mov ret jecxz cmp inc jge cltd ss mov mov push in xor mov cs lret inc inc add or popa out (bad) and outsb add push dec roll sbb xchg cmp mov fnstsw and add sub negl outsb cmp mov call out les icebp xchg (bad) ret addr16 imul je inc les in loope xor cwtl out mov lcall sbb mov ss rorl add subl icebp mov mov cmc lahf add push pop inc lock xchg xchg adc xor loop sti ret add xor xchg jo sub inc push dec pop pop (bad) dec out fidivl sub (bad) in scas jo xor sbb movsb mov aaa mov flds jge fdivl fsub pop sbb not cmp xor pop sub pop iret jle jge jnp push push iret jle mov jns std xor pop addr16 or jae push das sbb adc inc or (bad) push lods fisub addr16 in push sbb xchg dec test jnp loop pop push dec jae and dec pop xchg xchg or xchg mov loopne notb iret stos (bad) js bound push cmp push sub das loop int dec xor icebp lahf nop sahf adc ja add cwtl sub and adc mov fcompl insl pop pop test jnp stos or dec mul pop imul push inc fwait int3 jg fstl inc dec test lret mov icebp mov and mov int add inc cmp sbb add mov xchg or lods ficom lods pop aaa in insb xor inc jns inc rcr pop daa imul adc and daa add cmp cs in lret jg test fidiv inc es sub cli push sub xchg and inc ret xor sbb pop or mov fs jg lea cs ret sub (bad) or cmpsb xor dec and or shrl js mov add (bad) ja aam cld mov outsb fmull sub scas clc and mov fmul inc mov and xchg and out idivb rolb data16 loope mov loopne mov mov shrl mov rol ror les xor cmpsl icebp xor fisubl push sub imulb add push popa mov xor stos cmp dec dec aad cld cmp aad insb xor aaa movsl out inc adc cmp sub mov inc cmpsb mov lcall imul loop mov jg xor in repnz rcr cwtl sbb sti inc hlt mov lods jno rcr add xor (bad) and shr daa rolb orl inc inc fs mov pop aaa inc dec xchg movsl fwait repnz mov xchg icebp (bad) push in xchg cmp push mov gs cmp leave adc pop outsl out (bad) mov pushf and mov push inc push xchg and fdivl xchg divl jl (bad) xor sbb psubsw pusha push xlat mov add inc push fcomip xchg into push mov inc add popa fdivr and push sub add mov rcll pop and es and (bad) dec ret mov inc lods aas mov mov fsincos ficomp push mov add je mov insb inc mov inc jae btrl pop fldenv cmpsl pop (bad) int mov pushw cmp cwtl hlt rorb jge xor stos or xchg mov adc popa lahf jnp mov push jno movsl cmp sub outsb mov scas dec mov hlt jne adc and add cld aaa mov (bad) jb test xor adc sbb stos bnd mov sbb popa mov and cmp xchg xchg push sbb cmp xchg sbb sbb test xchg outsl shrb stos fldt jge cmc mov jmp or lods mov jmp and cli mov setns int or fisubrl mov mov in inc cmp push pop popl gs ja sub dec or and rclb mov add mov lcall fwait push rcrl pushf insb mov shlb out mov lret xor mov insb and stc jl lock pop fwait and mov add or jae dec inc inc inc shlb jnp add addl fisttpl dec icebp shld and pop loopne (bad) mov jbe sarb imul and fsubp xor je cmc imul shrb push adc and or add lcall call add pop stos mov adc dec mov fnstenv add jg in cltd mov and mov jnp or lds in rcll pop dec lods std imul cltd mov loopne mov mov cmp and xchg ret inc or pop or pop imul cmc nop or pop test test cs add nop ret inc nop (bad) xchg repnz push fldenv sti mov xor rcrl jle call out sar adc mov daa ret xor inc lret clc rclb mov fiadd andb mov loope xchg sbb fstpl pop ret mov ds lret lret stos in out cmp dec aaa pop gs ret ret repnz adc loop inc pop les hlt mov push pop dec mov fisubr pop add jno fidivl sub and jb je insb sub idivb jp mov xor sub ds jle sbb test push push scas mov jp add or dec sahf mov outsb loop cli ja out cmp lahf loope mov xchg mov jbe push std pop mov clc pop aaa push xor dec in ret adc dec and mov lahf lock xor out lds xor lret jge mov xchg leave cmp jae ficompl hlt jmp in test lret xor inc ss sbb dec lcall mov jno ljmp xchg fcoml (bad) outsb dec inc int les movzwl dec xchg arpl (bad) adc fdivrs adc inc mov mov bnd mov ret adc cmp out jg pop out das nop or test fwait movsl sti jg push iret sub dec pop sbb and (bad) and mov neg xor dec push xchg mov outsl std jnp mov leave pop inc sub mov mov pop outsl pop es and (bad) xlat scas adc cmpsb or inc scas or mov hlt xor sub xor repz loope movsl (bad) sbb mov lock fwait bound ror xor xchg out sub push sbb sbb popf mov dec loop lds aaa orb xlat mov sub sub jl and or xchg mov outsl and push add rorb mov ficoml mov ja pop ret fmuls add rcll jge cmp mov mov dec inc pop lock ss adc loop pop ja sbb rcll inc xchg and jae stc scas in pop mov and and sahf sub or push aas mov je,pn push fadds jmp jo jp cmp fs stos (bad) icebp cmp out xchg movsb cmc or icebp nop outsb lcall icebp lret arpl (bad) mov adc jl sbb dec push addl mov inc jns mov push pusha leave popf rcr inc mov (bad) lret push lcall js ret idiv scas jmp push stos push dec xchg jnp (bad) pop or push (bad) in or cmp lret cmp (bad) frstor int clc and dec stc dec fstpt cmc mov fildll inc sub sub push cmpsl imul aaa push popf movsb out push jbe idivl jl jnp pusha mov ret dec (bad) xor sbb jbe repnz and clc popa scas push cmp icebp add cli sub scas pop xor popa push mov mov push mov repnz stos xchg fstl adc iret ss add test xor rclb in pop add add jecxz sarb xor inc or push inc lret lock lods clc push insl movsb mov pop mov sbb jmp cmp sbb mov cmp mov xor inc sub cltd cs aad cmp lds and leave lret (bad) and jbe xchg add les insl int das ds pop ret jae jmp (bad) jno mov xor xchg jnp (bad) mov imul xchg and mov ds mov in mov mov sub test rolb scas or lret movsb push mov mov pop gs mov sub pop push cmpsl mov xor cld pop andl andl in adc in shll or or cmp fcoms ljmp addr16 push fs jno int3 in loop rclb mov jns imul popa and pop dec test arpl inc je (bad) and dec push and daa dec mov int3 js mov mov aam aam frstor xor nop mov pop rolb xorl mov pop imulb lds ficomp mov push lods mov pop mov push out xchg mov xchg out ja xor cmp add jmp aaa stos ss adc (bad) stos (bad) sti (bad) js mov xchg imul mov inc gs push test ficompl dec or cwtl xchg adc adc clc ss mov inc dec (bad) mulb mov cmp stc xor ss mov xchg pop sbb in jo cmpsb fisubr sbb es lahf pop cmovbe sbb ds aas fidivr push stos fcoml pop hlt pop loope xor add jno add cld cmpsl clc movsl pop stc fdivrs xor (bad) cmpsl int fidiv scas push mov lret hlt imul sbb dec in add test and mov mov pop cwtl mov jb fucomip aas mov push dec sub jmp sub loop fcomp or popa push sub fstps fwait pop (bad) or sub outsb (bad) imul jle mov clc pop adc push ja rcrb out iret int3 imul (bad) lock pop mov dec ds add jno daa int3 aam ljmp jne std lahf in hlt add cmp add adc jp fscale cmp jbe jbe xor lea push shr and addl cmpsl mov lret push jo iret mov popa in subl sbb lods add inc dec das or shlb bound inc insb movl (bad) or add pop aam jge popf inc daa addr16 iret imul sbb ljmp cmp loop adc and push xor xor mov in dec (bad) cmp xor cmp push xchg mov mov movsb mov cmpsl lcall sub jno fmul nop push inc std nop subl lods jg cwtl mov or stos call adc sbb mov mov fucomip sti std or (bad) sub in and pop mov inc ljmp xorl jg out pop mov out div call enter inc insb ljmp nop jo adc push jb adc push out jae mov gs or xchg and mov lods pop insl (bad) movsl (bad) mov dec pop xlat shr push push inc pop cld arpl ret aaa lods dec sarl jo inc addr16 dec mov out and inc push stos insb rcrb sub push hlt out fwait stc pop lock inc (bad) mov fadds pop jecxz movl sub leave xor movsl xchg pusha mov pop outsb add (bad) jmp imul rorb movsl mov movsb fiaddl xchg cwtl push add push in leave xchg jg jno fucomi das pop xchg mov jmp sbb (bad) mov cltd cld pusha pop sub jns inc inc dec or pop jns lods jnp mov pop pushf adc or push in jg push popf fwait push nop cld adc imul lret into aas cmp or stos subl pop pop mov lcall neg or or (bad) lret jne popa sbb xor nop das rorb insl (bad) pop (bad) sbb cli push pop ds test nop cs popa fsts test les pop out iret jmp popw dec rep cmpsl scas stc (bad) jo pop sbb inc fist mov fs sbb add in inc sar repz dec ficoml stc sub movsb cmp mov pushf pop sub addr16 repnz mov mov stc mov pop fiaddl stos add scas in sbb or fsubr mov pop das jl sbb pop mov or inc xor adc call jle cmc lret test cmp push lcall je outsb fdivs std es imul repz movsl pushf xchg xorl sub shlb mov sub pop out dec xchg mov adc nop (bad) cmp sarl mov push add jecxz outsb mov xchg mov repz dec hlt adc jb jbe sub stc int3 neg test and push daa rcrl dec gs jbe ja xor push ljmp push lret jb jl icebp (bad) negb or jmp cmp fld jns add push stos enter mov ds gs pop add pop or js scas pop (bad) jae pop mov into mov hlt aam cmp xlat popf inc and xor dec divb mov jge sbb add ret stos dec imul es or xchg outsb sub xchg xchg mov sub inc push sbb cmp dec fist mov stos xchg rclb adc jl add test dec cltd jae sbb shrl push inc mov mov mov pusha out sbb xchg jbe mov roll fcmovbe inc cltd scas nop mov insl mov nop ljmp jbe add cmp (bad) aad in (bad) mov addr16 int3 test dec mov xchg sbb lods cmc xorb and cmpsb in adc aas ss xchg mov jmp mov mov jmp dec (bad) out in ffreep push arpl xor repz xchg add iret mov sti fsubs and sub add jbe cs mov jl imul cli pop mov sub mov lahf aaa pusha loopne dec dec mov dec sbb sbb sarb lods icebp pop dec mov jmp lahf inc cmp sbb leave sub shll mov push outsl (bad) jecxz repz add rcrl or jmp xchg icebp sahf pop orb sahf testb xchg ss test loope pop push inc and enter mov ja sub std push sub (bad) xchg mov xchg jle pusha bound lret adc mov ret cmpsb sub ret jns or dec sub xchg fstpl jnp ss push fwait push (bad) add ja pop mov push int3 test fwait xor lock inc jns push push das sbb push sbb inc xor jne pop outsb test jnp dec lcall aam fcomi xor inc cltd sbb ret enter out aam sub iret jge cltd push enter jo pop inc add sbb sub xor jo subl sarb xor repnz inc jge dec lret das jne xchg in xchg mov or mov nop fimull je pop push fsts sub repnz shll fstpt xor sub nop cmp pop out (bad) repnz mov loopne aaa push pushf push jecxz push pop hlt dec cs loopne mov inc xchg xchg push or mov mov and add fildl pusha and and popf sbb push (bad) ficompl (bad) sahf pushf or out cs cmp ds lret dec jo xlat mov mov xor inc cwtl stos ja and xchg add jnp ss xor pop arpl int3 cmpsb out data16 mov cmp fiadd loop shr sbb mov in mov add shrb push inc xchg in sar add jae xor or add cmp outsl mov aas pop scas cs add cld adc or outsl daa xchg out mov out or inc add fist adc xchg shrl imul cmp push xor insb xor cmp mov xchg jno aaa (bad) fsubrs lahf std push int3 sbb mov mov dec and sub add notb mov jns rorb jp cmp fucomip push or ret nop ficompl daa fsub inc inc (bad) lock sbbl jge inc adc idivl imul sub sbb imul int cmpb jo push out test in mov xchg sub xlat and xorl xor cmpsl and cwtl jb icebp out cmp ljmp imul and fucomip mov push push lds dec pusha pop out in pop inc mov mov xchg das push icebp add mov aam test or pop adc in mov push pop (bad) scas out clc fucomip xor rcrl scas or clc or scas and aam outsl mov pop in fs popf lods dec and clc test inc daa inc daa out (bad) addb mov (bad) inc or ret int data16 jne faddl jb in mov jmp rolb popa pop pop fwait xchg push xor rcrb rorb mov cmp cld sahf jbe xchg mov pushf (bad) push and inc ret sbb xchg xor push pop mov sahf pop ret jg push push loopne out add mov loopne bnd pop mov jb lcall push leave lahf stos int3 sbb push scas xchg jg mov sarl andl sarl call jge lcall mov sahf lret push dec out and add nop aaa cmpsl fwait test mov jmp mov mov mov push sbb ja aas test jecxz lea in dec sub mov jae push inc jg cwtl sti icebp test dec jecxz or xchg mov mov push mov sub adc test push es loope cmc and test mov scas lods or leave das add int3 fsubs je push pop sbb push jp inc mov (bad) mov (bad) mov nop mov or xchg cmp nop in int3 cmp and ficom mov mov hlt icebp std jnp mov sbb test data16 add pop cmp aam mov push jne pushf ret mov sub test xlat cmp (bad) cmp mov fisttp (bad) ret int mov fld nop (bad) xchg xchg push ret mov fdivrl xchg xchg sbb add pop add adc or out mov mov xor lds cmp gs push mov movsw add or dec icebp or jp mov cli cmp mov rcr sub pop dec imul repz sbbl mov and jb cmpsl rclb xor sti jge jbe,pn fldt (bad) and repnz lods popf xchg xor xchg add push lods sar pop fs (bad) cmp cmpb in push xor loopne pop repz pop (bad) and mov mov mov mov mov dec in push in xchg scas cmpxchg dec enter sub xchg xchg popa lds and mov or stos pop ss imul lods pop (bad) mov outsb dec xor into inc out pop sbb xchg xlat push or add cltd and test push sbb std add pop jno pop jecxz add sub jp jg mov clc repz iret inc xor es ret adc dec dec or cmpsb movb iret fwait mov lods pusha mov lods add sahf sbb es add cmpl lods inc cld mov mov adc xor pop insl sbb popa stos ret mov mov cwtl sbb out cltd aas std cli mov sbb xchg xor enter xlat std int sbb jno cwtl dec cwtl inc les jnp xchg xchg enter pop pmullw movsb fidivr xchg mov xchg adc add mov dec test mov mov dec pop repz lea icebp add les adc shrb or adc xchg outsb clc repz insb pop cld mov jne decb jb or jmp orb sti int es pop dec mov int3 dec sub adc fimull leave icebp sub add xlat ja (bad) cmpsl xchg xchg lock pop dec mov and cmpsb daa inc out fs loope dec (bad) in sub sbb inc push out add clc add and pop jne sbb sbb adc gs sub jo ljmp cli push sub daa faddl sbb popaw cld (bad) dec xlat lods xor je push (bad) cli mov aaa cmp fisub addr16 stos jbe jecxz xlat imulb (bad) add mov fimull or js cmp mov hlt fcmovnbe js inc pop mov int3 and adc daa push pop push (bad) dec xlat xchg scas lcall xor xor hlt or fnsave dec jae or jns in xchg sub xchg jae sub add pop inc pop mov call cmp lock clc das mov inc das ljmp scas lds mov inc pop jp cmp lret cmp xor in xor and fs sub mov push mov lret jae jmp or dec mov into cmpsb and lds stos jecxz cmc lret dec (bad) mov cwtl push fs xor push xchg pop int sbb out das aas (bad) and jg add pop rolb mov pop pop push add add (bad) jg out dec outsl aad icebp (bad) aad xchg xchg (bad) repnz inc mov sub push lahf mov xchg fild (bad) push scas loope dec sub sbb and sub pop packuswb cs rcr mov popa xchg mov popf dec or faddl clc ret xlat push stc clc daa inc mov inc test mov sub xchg add inc ss stos sub and inc xchg and and xor data16 sub jp jge add cmp jg,pn std cltd adc cmp lahf and loope push pop adc in rolb and in sub out mov aaa repnz and icebp repz adc adc push mov pop jecxz ljmp xchg xchg add and pop cs outsl pop jmp icebp movsl bound pop or into ret (bad) aam jge push xor arpl jle call aas lret enter int enter clc aaa sbb push (bad) sub iret pop xchg push sbb push pop in jl sub stos jns mov shrb lea mov dec in xchg xor in lret xlat mov scas loopne iret mov jmp pop push sbb inc fsubl dec add mov jmp xlat das sub xor leave test fisubrl fnstcw sbb jecxz mov repnz and decl cwtl sbb or xchg or gs xchg fwait sahf popa sub lret pop jg cmp sti je stos ret sbb ds leave jns iret adc imul inc cwtl mov xor arpl addl ljmp das dec jo sarb int mov sbb stc outsb inc sbb sub mov gs ss outsb ret scas dec loop xchg adc and mov jno mov and out jmp or mov xchg mov cmpsb mov addr16 mov pop push mov adc rcll add cmp jne test sbbl push mov call jp jge pushf adc ret les mov loopne pop jmp int pop xchg inc pop test add push jae mov cwtl mov pop inc call (bad) fwait cwtl rclb leave ds sahf fisttpl scas xor jb mov pop jecxz,pn lret bound mov or int mov xchg mov inc mov les or push stos sub pop (bad) sbb lcall mov lcall push (bad) fwait aaa imulb es fiaddl lret xchg loop not hlt push xchg (bad) ficompl (bad) sarb cmp outsl inc cmc ss add dec lret mov inc push or fsubs loopne repnz cld sub mov mov lret lahf stc movsb dec cld push lock xchg imul cmp ret ljmp (bad) imul push xchg fsub bswap cli hlt pop push (bad) mov dec jge rcrb out je bound add mov jnp lea call mov pop mov dec pop lret popf loope sahf lahf imul xor mov add sbb sbb cmpl arpl fsubrs push enter and aam (bad) je inc push outsb dec mov dec imul xchg in (bad) ja sbb shlb lods fldenv add sbb xchg push js in sbb cltd (bad) mov sbb push outsb pusha (bad) mov test test inc adc bound push popa mov decl mov xchg cmp sbb cld popf sbb in mov outsb stc sti lods sub mov sahf daa popa cmp jnp (bad) jmp jns sub subl popf int3 xlat enter lds outsb add pop clc rcll and xor mov mov lea stos or ficoml add inc sbb idivb cmc enter ficoml mov hlt call lret dec pop and push movsb in fucompp daa andnps push aam add insl cwtl fstp stc jle rcll in push jne out jp outsl adc mov nop lds cli push out mov (bad) cmp addb dec lcall (bad) dec cmpsb mov insb movsb cmp mov pushf outsl lret subl js inc cmpsb movsb push and cltd push jb fcompl jae mov mov dec std dec (bad) mov inc imul lahf or add xor or push xchg jnp push mov mov mov shlb xchg cmpsb out and std push inc jl or sbb jecxz push aam jo aad outsb in add incb icebp sbb pusha (bad) loopne int inc leave add dec std pop rorl cmc sbb addr16 xchg xchg out imul lds cld je fdecstp push sub mov out lret inc jne xchg stos sub or adc pop dec cmp dec xor mov cmp (bad) fsub mov jp lds mov pushf pop cmp ret cli pop pop enter pop lods mov aam xorl mov idivl jb sub pop mov xor inc dec cld outsb cmp cmp (bad) fldl sub fisttp dec movsb or aas movsb pop pop sti xor xor imul repnz sbb jne and out push adc or lcall mov dec rorl pushf pop xor data16 pop rol aam icebp je jnp outsl mov push xor hlt push out sub pusha add xor or jmp cmp in sbb push push xor movsb pop jb jg mov push imul ret int and pop mov xor jg jp idiv ficom stos pop fisttpll mov xor jne pusha pop adc sti test add dec push daa lock mov je fwait mov pusha dec movl leave xchg jmp mov dec repnz xchg dec jmp movsb adc mov cmp xor dec sbb cmc icebp cmpsb popf sub and xchg or fcomps scas gs xor subb icebp pop inc int cmp mov out rcll jb jmp ss or imull leave jmp sahf (bad) fstpl mov sbb imulb lea lret inc or adc roll scas loop and lcall sti adc or jns (bad) in mov lahf pop mov cmp outsb call (bad) xchg mov out mov mov pop xchg iret jns loope sub inc jecxz lcall (bad) mov mov dec sub leave jns and lahf call mov xchg fsub jno pop pop lret mov xchg stos lcall (bad) mov (bad) xor push inc loope dec xchg enter lret mov int3 mov cltd mov mov stos ja pushf inc sub mov data16 xor sti or push sbb addr16 in jge addr16 xchg gs mov jmp inc cmp xchg lock add jae pop mov test movsl dec ss lods mov insl mov dec lea mov or fsubrl inc pusha mov xchg add jp jb fmul jg xchg sbb js repz out jbe push cmp pop out fstl jmp inc cmpsl sub pop test subl and cli (bad) rcll sub inc cmp sbb outsb cmp stos mov xor in lahf mov in rol cmp push pop or ds (bad) movsb dec jp enter inc sub testb (bad) cli js mov inc (bad) loope ficomp cmp in inc mov add fildll mov add ficompl jle dec idivb pusha xchg cli daa bound inc out ret and and fldcw or test (bad) mov (bad) pop adc fisubrl lea mov adc data16 imul lods mov ja (bad) daa pusha mov insl mov repnz dec outsl push outsb mov enter ljmp call fidivrl inc les or test mov aas aaa addr16 lret cmpsb (bad) out jle adc (bad) imull and mov cmpsb xchg daa test jmp out notl fisttpl jp inc sbb fimul xchg xchg daa mov xchg inc jns mov aad arpl mov xchg bound cs jmp mov push add ss push xchg dec cld push aaa mov mov mov fwait mov xchg ret sarl sbb mov add mov xchg jno (bad) cld dec (bad) das cmovg xchg loope std mov rolb mov aas lock mov rorl rcrb mov hlt mul xchg mov fstp cmp sbb movsl mov xchg mov sbb xchg stos out push cmp xor (bad) aas nop aam pop cwtl inc insb mov (bad) cmp into fdivl sub xor outsl push out (bad) jl ret xchg cmp in popf pop xchg subb push cmpsb push lcall push jbe mov rcll jmp jnp push adc outsb cli xchg xor xor lea enter or lret mov sbb jno out (bad) loope xchg mov push xorl into les aas inc mov into xchg lfs and mov movsb popf popa data16 xor sub xchg push repnz mov add adc int3 mov jp call into pop push popa (bad) iret mov fwait or fcmovbe pusha dec and and adc sub xlat lcall dec and cmc and (bad) scas sub lds mov ret or inc call jbe cs lret xor jl and pop imulb pop ret dec popw push out xchg xchg ljmp xlat add add movsb pop lock sub xor jnp jmp fwait das mov xchg jbe push (bad) jo push shll cmpsl xchg mov dec movsb push push dec jns sub jns xchg adc sub and and inc push xor xchg adc pop adc inc out out outsl sub xchg aad jbe sbbb adc sub add sbb dec add lea enter inc fldcw scas lods imul sub mov je adc mov in jnp or add mov jns (bad) lea adc dec addr16 test imul xchg fs insb addl incb das stos jp ja jg or and pop jnp call jbe jbe leave aam add push movsl push bnd inc (bad) dec jno adc mov in mov repnz aas cmpsb ret and out aam jle inc or dec pop fdivrl imulb movsb call es mov mov adc or push and loopne outsl pop adcl roll in push pop mov test cld gs fmul ror jno into adc jg loope aas pop inc mov jmp enter xchg lock lahf lea repz mov cmpsb pop xchg adc and ret or lcall (bad) ss sbb scas and fwait or movsl pop and aaa add adc jno lret adc dec jl repz push test insb adc (bad) cmp lret (bad) jle cmpl fucom sub mov enter inc add fisttpl js mov push mov incb adcb ret fwait add lds repz sarb daa mov mov loope lods dec inc es pop push dec push fnop xor mov lret lods outsl sub mov das fldcw jno push imul int test xchg sbb xor jo mov repz dec cmp mov das es jne out xchg rcr mov mov jecxz sub mov push hlt or rolb (bad) je mov test (bad) push cmp lods (bad) lods sub das test xor loope cli jmp je pop pop jnp jns cwtl push and bound lods call pop mov mov add dec jp sub fcom and mov cwtl daa push aaa movsb xor mov xor loopne pusha xor lahf and mov cld sub cmp xchg push mov adc jnp into jnp data16 xchg cld bound push jae in jge jno add adc iret inc and mov int sub ja mov mov mov jnp push cltd xor xchg mov jl stos adc xchg jae aas jns in xchg loopne mov xchg adc or rcll add jge xchg (bad) gs jbe mov xor sbb mul call dec lret js cld push lret push pop jno out xlat pop mov cmpsb in (bad) hlt inc (bad) ja mov fimull mov ja or mov mov (bad) sbb push pop out movsb mov sahf aas (bad) sub sbb dec les fs cld mov sahf mov or in icebp jae dec fnstenv hlt add lret dec lahf incl dec imull ja sbb cmp scas repnz repz mov and lret push mov mov lret arpl jae pushf fnstsw pop add push or jp xor cmp pusha cwtl out dec or aad and out mov xor das sub jg scas adc xchg xor pop in fnsave aam and int3 insb and dec pop data16 cmpl push xor cmp xor dec mov cmpsb push cmp lahf lahf lds iret add (bad) mov (bad) mov push sub loop mov dec sbb jmp sarb aaa mulb jecxz dec std cmp fs in dec mov gs in lock add test les mov fbld jno mov mov fstl mov jno dec jb addr16 cld jns cmpsl mov inc out mov addr16 and ret out mov push xchg pop cld mov test xchg or mov out outsb mov test sbb pop movsl jns jbe,pt xchg mov cld dec pop or lods or sbb movsl cmp jo lahf outsb sbb (bad) fstpt jecxz and dec xor xchg add mov add aad aam fcomps outsl jecxz in jno jb cltd inc inc mov sbb xchg addl adc and (bad) jge imul xor cmp sbb mov (bad) or xchg int pop pop inc sbb popf (bad) pcmpeqb idivb popf lret daa jl (bad) (bad) cmc aam repz jno test push ja mov outsb das inc not mov addl stos das jns loop xchg loope fidivr call add test push cmpsl shr mov mov dec xchg add nop ret mov outsb push lcall push scas mov push int jns xor mov je hlt bound xchg mov dec lds mov sbb mov (bad) sbb jo inc int out sbb ss adc cmc pop das or jg cmp add pop ja mov jne dec dec test sahf inc push fild stos shl mov stos or mov in add das push fucomip cli aad inc stos iret xchg inc mov or pusha scas insl mov movsl sub ss dec repz inc (bad) clc mov sub mov shlb mov dec xor scas repz add push mov sbb ljmp cmp pop test jae iret aad shrb xor std sub int3 in jmp addr16 (bad) iret xorl repz cld int sarl mov stos (bad) jge pop (bad) sbb iret loopne mov sbb mov dec inc xchg and jne sub (bad) (bad) push xor lahf (bad) lret jle sbb xchg es jne leave and push push (bad) es jl mov push (bad) stc jno xchg xchg nop notb popa fldl mov stos sti repnz in cli inc xchg mov aaa insl (bad) mov and xchg fucomp inc clc push add adc mov sbb mov mov pop cmp sub mov cmp test mov out add mov xor outsl fdivrp fwait push push hlt mov jecxz rol adc inc sbb cmp pop stc dec ret mov add mov scas rcll inc push lds xor add cli int3 cmp scas stc mov pop xlat sbb (bad) push ljmp std data16 stc pop mul jge jns das les dec add inc addr16 dec add xchg dec and rorb sbb jmp loope (bad) push scas xchg push push insl lcall ret fwait xchg cmp push testl and dec pop add (bad) xor add addr16 jmp stc xlat notb sbb js out add rclb jmp jecxz sub cmpsb (bad) (bad) or (bad) mov fmulp pop mov xchg adc dec cmp pusha paddsb jp add nop push dec xlat push xchg lcall popa mov add es outsl stos jge fidivr or jbe (bad) push mov mov js add cltd test call cmp push mov dec cmc dec aas adc gs and pop jl aaa popl mov dec adc fwait aam pop inc pop or xchg icebp ds inc mov imul ds pop popl sub js shrb mov mov cmp insb sbb pop out imul xor jecxz sbb ljmp or xor out pop dec xchg sbb (bad) popf ja cmp (bad) cmpsl cmp xchg call mov sub xchg mov push sti (bad) std or lret dec fs mov xor push push and mov (bad) setnp pop cld gs mov dec push mov xchg enter pop in jb arpl or in pop in out xor addr16 inc push decb sub dec mov xor cld pop aaa outsb in sub push sub inc mov in (bad) std ficomp push dec cmc cli or push lcall xor ss shl add jnp mov mov enter jl (bad) xor inc cmpsb jns enter into bound xlat psrld lahf push add pusha xchg xor push jbe lds or and mov gs pop dec push ds or jb pop inc fstpt mov std or inc pusha and adc mov xchg icebp lods jp scas or lret in fsubrs inc sub rolb cmpb sbb jge arpl mov incb out xchg aas pop cld fild add cltd adc xlat in xchg fmull jg cld sahf xor adc clc hlt xchg sbb cmc pop mov subb jmp mov xor xlat dec xchg cwtl and lcall fiadd repz ljmp rcl ret jne mov and sub repz pop shrb push (bad) out sbb mov or fnop loop push add pop push xor dec xchg jmp lret mov je jns cmp sub xchg jae adc mov inc pusha daa dec jne out stc sbb push mov push fnstsw mov mov scas scas sarb rcr inc inc fldt mov bound mov fwait xchg dec lahf jns ret sbb adc mov sbb movhpd cltd cwtl popw test jmp sbb out push sbb adcb jg adc xor jg out ss (bad) jge pop xor aad push and adc xor add mov lcall pusha jnp xor cwtl loope icebp test and fsubrs rclb jle je loop sarl add rcrl push cld cmp xor lret (bad) aad stc (bad) daa inc stos push imul out mov out dec pop jo cwtl pusha sar addr16 mov lock loop mull insl adc mov js and adc xchg push mov ret mov mov adc mov cmp or adc pop in add inc (bad) imull sbb and jp in mov (bad) adc cmpsb scas jmp inc and jo pop test mov (bad) cmp jne aaa nop xchg stos repz movsb test jbe icebp sbb mov aas das jmp adc lods sub fisubr jo mov jns xchg or fisttpll and mov inc insl adc les int mov mov xor xor out leave cmp dec xchg fdivrl lret dec call jns lods (bad) xor out and into pop mov scas iret dec ret inc dec xor rep add and pop rcll lods rorl sbb call inc inc mov pop ror ds lret push push lret mov and int3 xchg ja sti dec fucomi imul jecxz idivb cwtl push fnstcw jmp std mov stos jmp add and icebp cmp inc aas std outsb mov (bad) arpl fucomip lods pop nop rcrb push mov inc sbb loope stos arpl sub jne andl dec add ret daa and push add xor (bad) mov dec jb (bad) cwtl sbb dec in mov cld xchg sub mov sbb popa iret push or jo xor xorb fst and jnp popl lock xor bound hlt cmp jo mov add lods int3 mov inc and icebp sbb xor sub add je mov mov inc ss int3 or mov hlt sub or jmp push sub mov lea pop xchg xor adc cmp or out std nop or (bad) cli je mull jmp push sub pop jo add jns arpl sub sbb jle and xorb out fdivrs cmp cmp add js adc xor jne cmp mov push dec dec mov pop cmc ror pop jno or xchg nop mov or stos (bad) cmp insl lea rcll pop cmp or scas jl jne cmp jecxz inc (bad) movsl xor push cmpsb push icebp data16 in mov gs xorl or mov mov lods cmp in lahf mov (bad) jmp xor push std cmpsl mov cmp add inc outsl fwait movsl jae lret cmpsl ja jne push mov les das lcall cmpsl push stc xor mov std lahf rorb cmp mov ljmp jne mov mov push pop aam xor add push loope or ds cli repnz or fmull jmp jp popa out mov pushf sarb sub mov jns and sub sbb ljmp aas icebp fidiv or jecxz pop out sbb adc cmp jecxz (bad) adc sahf jp push stos adc sub add fucomp dec rcrb dec outsl push sub cltd (bad) mov pop nop jle mov and vmread xchg push repz xchg hlt stc mov or shr cmp and inc cld fsubrl leave adc mov test pop dec addr16 pop sub das insb out jae and sbbl or repnz pop lret jb dec mov cmc mov jo jecxz movsb adc inc mov popf jl mov stos jecxz pop (bad) add mov data16 push pusha push dec test test popa mov (bad) fsubl mov aam and pop aas mov xor push imulb jo inc or fwait es mov inc cmp testb jno leave xchg gs xchg (bad) pop jmp xchg jecxz jb iret orb sbb jae test jecxz jbe cmp add leave (bad) pop pushl dec xchg jns or loopne fldenv dec nop dec fisubr push cmovae and inc test je inc xchg imul inc test inc adc call imul lret lock pushf or sahf mov (bad) cmp add mov jle push sti pop std loop popa shrb mov jge or test aam sar jle jl call or dec dec cltd xor or and sub jb,pt pop arpl lock in cli mov aad insl sub lock hlt jno divb (bad) xchg (bad) mov std inc imul dec aad mov ds lods sbb fsubr jp sub sub divb push nop (bad) int push adc pop inc ljmp insl and in mov inc inc notl jg test ret aad ret cmp push fisubr sbb sbb (bad) lds cmp pushf enter mov and pop sbb ss nop sbb std movsl push mov aaa lock inc inc lods loopne mov inc mov les movsl jns sub pop add mov scas mov or xchg xchg pusha shrl gs (bad) ret and insl push js pop daa (bad) sbb sub daa sti cmp insl clc and xchg or ja vmovsd es les xchg add jg daa imul pop popa push mov xchg in fisub adc xchg outsl notb out aad repnz push ret (bad) ja ret mov into cmp xor inc sbb sti movsl adcb xlat pop mov dec leave into jge pop sub xchg ja fs cltd mov adc hlt sarb (bad) stos ret xor jp cmpsb and sbb fsubrl inc xor shrl addl adc daa xor jp ljmp (bad) xor jecxz adc test outsb xor inc cmp nop xchg mov mov sbb pop inc xchg mov inc cs mov int jl sahf dec pop (bad) jmp push pop shrl adc dec push fdivrs faddl fsubrl or ljmp adc aaa mov mov xlat xlat cmp movsl adc sub xchg popf or inc test test push (bad) cmp push mov dec aaa testl scas or inc pusha cmp push out inc movsb xchg movl in jno mov and mov push loop into movsl mov pushf jne mov popf jg mov xchg sbbb lock ja mov scas jge neg push add mov hlt into sub rclb (bad) rcr xor pop dec mov or fnsave in ljmp insl ret add pop test cmp push add sub jl push inc pop sbb out xor (bad) in add inc mov mov dec pop pop js ljmp or inc shl xor cwtl jns mov or xchg cmp sti test cltd stc imul push in pop out jnp lret xchg movsb xchg icebp inc nop jnp push mov loopne and (bad) mov pop fwait dec mulb out pop jmp xchg cmp es lock lods and dec cmc daa push or (bad) xor pop mov arpl pusha xor push pop mov out fnop leave pop call adc popf mov pop xchg xor mov cld (bad) fstpt jo movsl push lods adc imul fwait pop mov mov mov or or mov rcrb fsubrs testl rcrb sbb insb mov int xor add cmp nop das (bad) mov rolb iret push mov cmp out and data16 cmpsb cmp test icebp in scas cmpb movsb cwtl fsubl dec repnz (bad) sbb sub lcall loopne mov mov mov jp mov fadds js or outsl pcmpgtw pop add test jl insb cmc push mov mov addl inc les sbb rcrl mov sbb and xchg test inc or icebp lods or ds xor lahf orl pop clc test xor and test test enter adc dec xorl lea pop cmpsb push cli cltd aam xchg les lcall hlt adc in mov dec dec adc push xor fistp outsl mov loop push (bad) lcall mov je xchg hlt leave in sub add shr adc sub icebp fnsave xchg mov popf xchg jle pop and mov popf pop enter out repnz pop in insl loope popa arpl adc push mov adc (bad) sbb call mov inc pushf aam out imul jo mov add in push adc nop rcrb pop sbb out dec (bad) sbb mov jle subb push inc mov repz (bad) or and dec outsl andl lock dec ss lret add (bad) pop aaa inc xchg hlt sbb imul in popa or in jb adc xchg or cli lcall scas push adc jne sub mov mov pushl hlt mov enter fnsave dec dec idivl xchg mov iret fildl rcll jg clc loop les add adc daa (bad) lods scas roll mov pop inc inc dec adc movsl das mov add sbb in repz push xchg out fldl fsubrp add pop (bad) jno mov repnz jp jmp mov mov out out lods xchg mov mov pop shlb lret cltd leave mov adc loop jo lods add pop test inc cmp xchg ljmp (bad) lea xchg arpl xchg inc mov loopne,pn push add xchg les push arpl cmc mov (bad) mov jb add mov xchg dec push pushf sahf fwait inc pop mov stos gs mov mov add or loop sbb pushw stos inc jne xor mov mov stc lea jb call or addr16 inc pushf cmp pop xchg roll (bad) sub stc cmp push add aaa mov popa mov ljmp add ds (bad) dec stos insb xchg pop cld (bad) hlt pop in add xchg dec dec xchg popa jb test loopne fidiv cmp cmp jbe fcompl out push bound inc mov mov fdivs cmp sub subl in xor push mov jg les rorb add fwait sbb test dec push or jp inc mov ror mov mov mov outsl fistpll out out std pusha mov mov ds in fistpll call xchg and stos cmp xchg (bad) sbb lods add or inc xchg fsubrl xchg sbb int cmp rcll mov push mov ss test jno xchg or test clc dec popa jnp ret mov (bad) in sub mov xor cs sbb (bad) div push cli pop (bad) pop fstpt mov dec stos out lock leave loope mov fmuls add femms movsl pop add or (bad) or cmp fxch mov mov fsubp test mov das adc adc add popf add and repz xchg xchg call and loop xor fnsave push loope mov mov mov outsl ja xor adc or bound test xor daa fnstsw or pop mov and and pop xchg cwtl and mov call mov aas lahf jae in nop or minps data16 fstl in into ret and push add outsl xchg or rcll pusha fucomp and call sti jns xchg sbb xor cli ret popf int xchg and pop lods jp pop mov pop xor jbe sti push shrl cmp out mov lds jecxz jmp lcall jle sar xchg in sbb xor adc stc xor cmp or sub push jl lock jecxz dec les mov jecxz inc dec cld lret xor (bad) arpl mov stc stos inc idivl pop repnz mov jb jl push or jmp and and xlat xor push mov push jne scas push mov (bad) lcall mov add mov loop mov popf mov ljmp testl push inc jns pusha push or mov loopne xor das or inc cmp jo fadds dec les sbb imul add mov lds scas mov pxor loopne cmp ss insb sbb add cs adc xchg out hlt ffree mov lcall data16 cld clc sti cmpsl sub test sub mov inc cmp and daa add out push and (bad) push fiaddl push mov arpl push repnz sub imul fwait sub add aam hlt add loop push dec sub fwait push cld shlb jp out movsl add dec (bad) mov imul mov xchg cwtl cmp cmp ret dec orl or jo (bad) ss roll xor fsts cltd sub pop sbb mov lret push add xor push stc push fisubr pop mov sbb mov mov bnd nop popf ds and int3 pushl in sbb jae pushf dec cld cmpsb push clc jno or jecxz imulb add cmp inc negb jne in ss pop push xor mov fwait (bad) repnz in push ret dec xchg mov pop inc xchg push inc mov inc rcl (bad) imul (bad) cmpsl sbb jl mov pop add push or adc pop sub xchg and mov fwait cmp lret (bad) add repnz je dec andl and xor fucomp inc cmp call ja pop sahf jae add add arpl (bad) dec push aaa sub sti pop aaa mov inc inc hlt scas ds mov jmp mov movsl inc or push ss jmp outsb xchg leave or repnz sub push lds and std call call mov loopne pop lahf ficomp shll test xor sub cmc ja ret pop xor dec cwtl insb lahf test wbinvd fisub mov or loope jl lea ret jle sbb push sbb mov pushf arpl mov inc cltd cld call pop push repz popa sub add inc push mov or sbb (bad) mov mov out jl mov imul jmp repnz cli cmpsb mov and cmp xorb (bad) sub add cmp call jbe xchg lret std int3 outsl mov pop clc or ljmp and cmp mov push call movsb outsl scas or imul push into aaa faddp int3 inc ficompl xor xor cmpsl and jo mov out mov call fisubl jle sti xor pop (bad) adc pop movsl xor jg add nop pop sahf enter pop push xchg cmp dec sbb mov dec sbb stos imul repz inc imul lcall fnstcw push loopne out jne xor xor sbb insb dec dec sub mov aas dec in mov je cmpsl xchg fsubp jmp push sub jo or jmp negb (bad) fsubp pop outsl adc cwtl lcall mov xor cmpsb pop lahf cmpsl xchg xor add shrb add nop adc movsl (bad) stos pushf shll addr16 ljmp hlt xchg sti xor xlat hlt mov outsl std push iret test and pop dec inc dec int3 cli and mov mov repnz mov mov pop inc out adc dec sbb in and mov jge in dec (bad) push pop enter roll les jno sbb gs notl mov (bad) adc repnz lea pushf mov outsb push mov out and dec lods mov inc movsl lds cmpl inc xor ret shrb out fild int repnz adc inc add add pop mov mov mov stos sbb mov pop inc sbb cmpsl cmp lcall dec cli add cmp lret mov and cmp mov push sub jae xor xchg inc adc add js ret pop fsubr jg adc jns cmp les ljmp pop pusha xchg or div push (bad) mov int pop stos (bad) (bad) (bad) iret inc jge adc push aaa jno jns (bad) nop or out (bad) das insb and sbb or test test mov stos lods jno or (bad) mov cmp adc sahf mov push subb adc aad out movsl mov js (bad) push ret into jl outsb push inc pop mov xor lahf cmc mov push push push movsb sub sbb cld dec insb mov popa jmp repz pop fdivrs and in lds push lret jae dec xchg mov xor and or pop pop test cmpsl (bad) fisttpll sub lods sub cmp pop cmp ds cmp inc push lret hlt outsb mov cmp xor rcr adc jmp cs xor out outsl lret imul or popa test xlat xchg inc outsb push sti (bad) cmp outsl out in loope std bound xchg addr16 pop pop mov stos mov jge xchg negb add mov xor js jno pop loope xorl ljmp mulb xchg inc xor mov subl add jmp pop call mov pop mov push push out cmpsl repz mov mov (bad) repnz in push out jno lret repnz adc (bad) or add xor mov add push jb (bad) je cmpsl cli jae cwtl fldl or pop fdivs pop addr16 push cli cltd mov addb stos or cli fcomp jae mov mov imul (bad) imul (bad) lds mov gs and dec cld add jle xorl inc cmp cmp jbe mov roll ljmp mov lahf xchg (bad) lret inc jb push nop ret sub ljmp sub bound jo add jns sbb cltd mov sub repnz fdivl mov sbb aad mov fisttp dec out jmp int test sahf ja add adc xchg nop pmaxsw mov adc sti mov mov mov pop pop dec jo lcall ja or xchg mov popf sbb in stos mov or out std xchg out mov or dec iret jbe dec xchg cmc push enter in inc aad mov call int3 dec (bad) mov mov lret enter xchg adc mov data16 out fisub xchg and dec js les insl jbe inc push (bad) movsl (bad) fldcw ds mov xor (bad) push jns mov rcll xchg hlt pmaxub sbb rorl and and aam loopne xor enter push popf ret stos xchg pop cmc test dec xchg push call cmp cltd adc decb mov shl into pop jne cmpsl (bad) fldl mov push dec xor mov arpl fwait daa cmp adc stc icebp xor lahf push (bad) loop fwait icebp fsub mov cs jns cwtl mov and in in sti ds cmp push or sbb cmp and cwtl sbb mov lcall pushf fnsave int3 inc stos dec arpl jp hlt (bad) lds jae and popa mov stc int cmp lret sbb fcoml mov sbb rcll push cmc outsl jecxz pop cmp inc inc inc and (bad) shlb jae push imul mov lea sar jmp std stos mov mov xor mull call add push add rol inc xlat arpl fcmove vpmaxub icebp les js mov push or enter lods jecxz and xbegin add or loopne pop jge xchg push jecxz repz mov ja fdivl mov jnp fisub push in pop push or inc pop mov fsts out dec (bad) ss pop cmp icebp call push dec and inc (bad) cmc arpl jnp inc jae into xor fnstcw in cmp add movsb inc (bad) cwtl adc dec fistl stos jg inc or xor xchg (bad) push mov or sar sub cli and ds scas sub inc (bad) sub movsb cmp fnstcw jb mov leave (bad) push std repz dec lcall push xor sub inc into arpl add bound pop scas test add leave daa shr push fbstp jns clc pop rcrb sbb roll push adc lods leave test out push and pushl push pusha jl imull xchg push lods pop mov cmp ror push pusha pusha push sub pop cmp push ficom ja add mov mov sub imul aaa out mov sub fdivrs xchg mov cld insb mov or add pop in mov cmp jo cmp ja mov push mov (bad) daa popa and mov fiaddl push dec sbb and xchg test outsl fcoms cmp test dec push mov stc dec repnz (bad) mov stc and mov cmpsl outsb pop rcrb pop jnp rclb cmpsb scas pop lcall jmp and pusha xlat xor lahf pop dec fistl inc addr16 mov (bad) push mov pop adc fisubr dec and pop loopne mov scas insb sbb ret sub lea call fwait rcrb push ja lahf adc lcall push lcall push (bad) cs inc jle jb xor les insb sub movsb es dec clc mov movsl jbe jae imul fwait aad mov das inc ror xchg push cmp push (bad) and add stc mov mov dec outsl dec out push mov mov adc mov ret xchg or fldt add mov bound jp loop stos inc iret sub mov xor test sub mov rorb int3 mov xor push sub cmp sahf pop imul movsb add sbb mov ror pop insb push insb mov dec mov out (bad) or push lret ret jl imul imul cmp mov jl inc cltd dec dec adc sbb movsl mov pop cmpsl int mov inc arpl out adc jg data16 les clc xchg test aas mov jae fstpl pop adc insb jg cmp xor xorl mov test xchg out adc sbb repz arpl test dec fnstsw fbld popf mov aas sub sbb xchg outsb jae sbb cltd push sbb popa jle jle daa mov fs push les mov cli add sub mov push mov mov mov sbbl xor push mov loopne dec out mov jo,pn fstpt scas push jb mov jmp mov mov and iret stos stos and ja add les sbb lds fistl push lahf lcall (bad) jge aam outsl cmpsl jnp mov mov adc cld es dec mov add in arpl jl scas cltd dec mov test cli jge loopne sbb xchg arpl adc or fistpll mov es cmc sarb or bound stos fsub xorb cmpl cmp int pop int push mov sti aam sub and cmp arpl mov pop cmpsb ret je lock cmp push add inc mov int cmp mov push push cmpb sub mov add push movsb add xor ds mov push or ljmp cmp xor call cli daa sahf daa scas aad dec (bad) xchg test std je pop inc test test sbb push push ret adc dec in (bad) test mov inc sub xorl mov add daa mov test lret sub jbe dec mov stc cmc mov scas aas push sub xor sarl test mov stc jbe and cmp js nop push enter and dec movsl aas adc repz inc mov push (bad) pop push pop movsl sti push inc ret mov rorl sub sbb cmpsb mov push xlat ret sub jbe xor sbb (bad) out mov (bad) sub sub repz xor push arpl (bad) and cltd cmpsl popf sbb jg or xor sbb fsub mov in scas cmpsl pusha andb jbe das xchg dec sti pusha or push rep mov dec add out mov bound inc and inc inc jl xchg mov adc insl xlat sub jo push ss cli push sub in mov xor out js or sbbb rorl hlt xor jle rcrl insb inc mov pushf je insb lds loope lods in insl stos mov jle cmpsl push sub jae push bound inc cltd add add in adc jl fsubl mov push xchg sub mov push negb ret pushf push or cs jnp push sarl cld xor rorl rorb rcll pop sub cmpsb sahf push shrb xor inc xchg std shrl jmp pop pop jg fs mov jmp add daa popa mov cmp xor mov pop ds mov lock add xor ret push cmp test js rorl mov mov pop pop into insb cmp clc mov inc shr or jbe fxam mov pop je out dec jge sub and dec mov mov iret inc in sbb (bad) push lret data16 cmpsl ret adc dec icebp jge push popf pop push je push cmp jmp pop aas lds xchg adc leave push and adc mov xchg ret adc js inc adc lods jp cmc in popa or into outsb push outsl std add fisubrl jns xchg pop lock imul pop mov or mov ret notb in push mov cltd mov int3 out xrelease test in mov mov pop push out or add fcom fisubrl mov sub stc sbb (bad) test fwait movsb jmp inc in sbb mov popa adc repz ljmp inc xchg sub dec mov sub (bad) icebp and jmp ljmp mov inc in jmp imul sub pop (bad) mov clc jecxz lret test cmp inc (bad) hlt fdivl or mov int sbb mov (bad) jecxz or pop xchg test ffreep or pop je sub mov jae (bad) xchg lock adc cmc mov into (bad) xor stc sub sub pop push nop mov out pop cmp or jbe int sub ss add fdivl stos aaa jno dec mov xchg push sub (bad) cmp arpl cs lods pop mov aam lret loope scas jp adcl popf bound inc cwtl pop inc xchg rcrl jmp lahf rcl xchg ficompl mov les jp test push pop cmp movsb cltd out sti mov in sbb sub add xor inc or add aam in pop subl pushf jbe int3 mov mov xor and xor pop jns sti mov ret mov scas pop xchg daa mov in sub push (bad) push and outsl mov dec jle cmpsl iret dec lods dec pop shrb fiaddl fidiv ja cmp jecxz sub (bad) xor xchg test pop test lds popf push out pop mov pusha sub and fidiv iret sbb inc dec repz xchg mov cmp ds insl mov out mov push scas cmp push pusha (bad) mov cli jno (bad) jns lahf call fwait enter mov push sarb push xor or dec jmp inc movsl push pusha or lods es fnstenv and or cli push xchg aam mov cs neg cmp xchg cmp inc popf sarb inc inc in push inc repnz fsubrs in fstps cwtl mov adc cmp sub add out stos js cmp xchg mov push dec jno lcall pop fdivp mov ret aas jl out aad xor sub sbbl add add into push inc dec xchg out out xchg bnd adc test outsb arpl mov pop sbb xor jle jl sub in and push sbb mov push outsl cld arpl arpl (bad) je add addb addr16 mov adc mov mov or lods (bad) push inc imul add xor mov ljmp mov inc adc fcoms sahf mov js pop dec add js mov imul stc adc out stos xor or cmp loopne sbb jmp pop bound pop xor ja push inc and mov mov inc push dec scas or dec das lock dec jne popa and das lds in and scas jl test ret out and call adc imul lahf push or mov xlat or pop pop cmpsb mov sahf mov mov jae lret lods ss push jl jbe inc stos xor repnz (bad) jg sbb mov es arpl push inc in (bad) pop setb xor daa jmp mov repz outsl cmp (bad) (bad) aaa idivl adcl cmc adc sbbl nopl inc nop aaa sbb (bad) aaa les push out icebp jb jno leave jns ljmp dec mov (bad) and pop xchg pop loopne and add imul (bad) stos stos in rcll addr16 and out pop pop fistpll repnz int3 jmp cs test lods out jns movsb test aam lods or jl,pt mov jb pop mov imul loopne repnz cmpsl cmp mov mov out mov pop mov fldl or cmp cmp je ja push cmp and pushf test jns mov daa xor sets add mov lahf in inc dec inc sub ficomp inc push in iret outsl lods lahf jge subb stos lds ror cmp cmp arpl sahf xchg hlt add (bad) ficom fimul sub repz mov mov xchg (bad) scas jl mull frstor jo jno int3 leave push jae push lea movsl inc pusha mov add jge adc xchg xchg scas push push sar sarl stos ret aaa test jp sahf mov scas inc jbe sub jmp xchg mov fcoml repz pop xor and into and push jns mov or clc sbb repnz push dec xchg push xor outsl xchg in jg out clc out push jns xlat mov dec mov loop jbe nop sbb xorb mov idivl dec push lock pusha loop lods arpl xor mov xchg loop (bad) and nop xor dec aam dec add mov int insb lret loope out fimul gs (bad) fcoml sahf mov xor popa add gs dec mov arpl sbbl mov inc pushf loope mov inc ljmp int3 or lahf in xchg inc jecxz (bad) push pop sbb sti lea loop mov jne mov xchg pop cmpl or dec (bad) gs mov js insl repnz fcmovb (bad) (bad) jb adc int xor and push jns (bad) insl daa cwtl jp (bad) jb jne xor inc mov (bad) test mov jecxz pop mov ret pop pop push ljmp and and sub mov lahf push ret sahf fcomps mov mov aam lods lods shrb fsubs sub leave dec inc jmp movsl jle pop test lock dec dec xor inc sub outsb or lahf out mov pop repz insb adc sbbb adc (bad) lret push jecxz xchg int3 cli sbb sbb and repnz mov (bad) and aas dec pop sub and lds xchg test ret icebp mov sahf mov andnps stos jae pop out add (bad) mov sti ss dec pop jne xchg int3 (bad) outsb scas outsl mov testb mov sbb pop xor mov jge mov mov fcmovne mov dec mov mov mov popf cmp fiadd ret sub in stos mov jmp jmp imul rcrl fidivr jno iret call and push fucom mov push sbb fldcw jae mov dec pop and mov inc xchg add add in leave xor pusha lods popa dec lods shrl jecxz out sub out adc (bad) call scas dec inc push pusha pop mov pop es inc cltd jl lock test push loope fcoms jnp shlb aaa jle sbb inc xchg adc fiaddl xchg mov insb jmp push sbb sbb test jle repz adc mov inc sub xchg xchg in cmp js push dec mov mov cmpsl jg mov xchg adc fstpl or xor lahf push jns mov addr16 xor pop inc pusha jecxz insl cmp sti aad jl push icebp out xchg repz mov das loop ret (bad) icebp pop mov lahf dec dec ja inc push mov inc lock fidiv cli (bad) xchg push push jl (bad) les or icebp inc aam add int and inc xlat cld enter mov or xor jmp (bad) ficomp (bad) mov push mov mov jns lods pop mov stc dec rolb rcl xchg bound fildll rcrb mov jbe cmp or insb sbb jnp fs dec add ja scas jbe cld outsb lahf in dec inc pop dec int data16 jo push xchg cmc lret push inc and sbb fcmovnb sbb and hlt xchg mov mov jp jno imul data16 fnstcw cwtl (bad) add ljmp mov out (bad) fstpl outsl rcrb push rcll mov in aam push inc std hlt (bad) clc in nop cltd cmp dec fldenv (bad) sti mov bound and pop sbb add rorl shld adc loop mov cmp lahf lods les repz test pop clc mov dec jae fimul lods stc inc std jae mov mov (bad) imul out aam inc dec outsl movsl aam stos fs mov lock push adc insb inc push adc sbb push (bad) imul inc mov icebp cli mov mov sub out andl js pop scas daa loop fldt daa ljmp lret gs xor push mov push lahf xchg adc movb (bad) arpl dec addl xchg mov (bad) fdiv je push cmp sub test mov (bad) fbstp (bad) adc test aam adc inc scas leave add call lcall and xor lret push icebp test sti mov aad and dec xlat or xchg rcrl lcall popa jle subl dec ja and adc jns cs mov xor stos (bad) loopne pop fwait xor pop fwait sub pop pop cmpl and and sub lods hlt daa adc in sub xchg hlt push dec push jo and sbb (bad) repnz loop dec test daa sar cmpsb shl fistp push into and dec mov test sti sub fldl sarl aaa xlat pop cwtl or add jo shrb stos cltd add adc pop clc mov rorl dec jmp sbb ret or ss dec das cs test int3 in in jge mov or xchg dec jno insb inc jne cmp out ret jp sbb pushf mov fsts xchg mov inc and cmp imul popa js sbb xor in (bad) mov shlb pop sbb mov outsl in jp push sub sbb inc or or and addr16 pop cs dec imul and fistpll mov pushf out test (bad) pop push push mov test les adc inc jp pop cltd sti cmp dec hlt push daa mov push nop (bad) mov (bad) adc sbb clc or loop aam cmp cbtw cmpl sbb mov cmpsb fstl mulb lods or (bad) adc cmp cmp mov cmp out movsl aad pop mov pop lods sahf pop sbb pushl adc jge ds inc xlat adc inc mov not cmp outsb repnz nop sub in js pop stc (bad) in xor push lcall adc ja leave js xchg (bad) mov jne ljmp in stos adc sbb je sbb mov and mov sbb lds gs pop mov sbb push mov andl add in js loopne adc scas jo dec mov fs sti or sahf into clc dec push lahf inc (bad) or jmp pop imul lea pcmpgtw sub bnd lsl adc jns or adc xchg pop arpl push ficompl xchg insl jmp add sub inc mov fwait mov mov and ja (bad) cmp sbb cmp sti hlt cmpsb xor sub scas lea arpl xor shl orb sbb in xor out adc xchg dec pop outsl cs mov inc xchg imul push in rorb xchg aas sub loopne inc pop arpl mov jbe mov cmc aam dec sub test es or sub btr pop enter lea addr16 pop mov (bad) fsubl xchg or adc cmc ficom dec loopne jae fndisi(8087 mov enter fldt daa inc aam bound mov and hlt or rcll sti and push and cwtl mov push mov leave ret cmp sbb cmc mov dec nop inc scas mov test or or stc jae lret jecxz jmp mov js test dec popf pop insl (bad) (bad) sbb xchg fbld addl add ja xor enter cmp inc push inc in dec inc adc lahf xchg adc dec rcrb adc mov xchg sub rorb push rclb jne inc gs loope sbb test enter out push pushf or (bad) (bad) (bad) or dec insb cmp cs inc mov pop dec xor out xchg in pusha cmp je sbb popf ss adc sub loope iret and insb iret in add pusha cmp das test and sbbl jno lcall ret pop rcr add jg sbb gs jl dec nop idivl sbb cmp xchg bound inc je ja jecxz fnstsw push cmp dec pop popa mov mov popa fadds loope movsl inc lock sub stos mov inc (bad) lods fisub insb dec cmp jae jmp nop sub mov idivb loope xchg adc mov sub and imul sahf cmpsl in push pop push pusha xchg sub sar aad pusha and lods mov and lods arpl cwtl pop loope jge ficomp xchg jmp add pop push mov (bad) rorl scas dec xor test fcoms jmp rol mov jns orl repz (bad) pop jb sbb push push dec js out sub push mov mov daa pop lret mov mov rclb shrl jae lock xor incl sbb pop or jmp pop xor or xchg ret dec push insb lret jp xchg aaa mov xorl inc fmull pop (bad) sbb or push scas mov push jae out jb in ficomp cmp mov aas jg out mov stc xchg push out mov add sbb int add into inc loopne int3 mov add repnz scas lret scas and fld popa je cltd push in sbb cli mov jnp je pop xchg outsl xchg decl cmp inc bound push stos cmc inc pop xchg xor (bad) mov push xor repnz je cld sub inc shll cltd jg aaa loope dec sbb mov icebp mov xchg pop jo test (bad) dec addr16 ret mov and addl xchg (bad) into mov jmp sbb jbe mov sbb or testl pusha stc add adc sbb fbld (bad) sahf cwtl (bad) sbb test fimull js mov jbe idivl push jmp push sbb repz mov (bad) jecxz sbb insl (bad) loop pop sbb inc movsl jp loope (bad) roll or out ja in cmp incb push xchg cmp cwtl mov inc scas mov adc les jecxz sti pop in das dec push ja push lea dec in jecxz inc mov les lock mov (bad) jp inc into enter (bad) adc clc adc (bad) (bad) out add add xor rep push cmp and pop cmp dec into cs or notb out mov popl mov (bad) imull mov mov mov adc (bad) pop fnsave fcmovbe cmpsl xor add mov and fxch rclb mov dec cmp sbb push pushf fidivrl aas cmp add pop mov cmp fwait add mov insl add inc cmp pop and jb inc scas lds bound aad pop pop and sti jns jl or inc adc pop imulb pop xor jl pop mov xor cli or pop and inc ret mov pusha lar xor and mov and daa add mov jp xlat test mov fs cmpsb fmul lea test mov imul sub jl mov roll and js cmp push fsubrs xlat jns and dec xchg adc subb adc cmp xor mov inc rorl push repnz cwtl xchg add daa outsb cmc xchg mov and std inc pop adc push jne test mov (bad) adc cld adc mov icebp in sub cmp pop cmp test pop jmp fwait mov int push xor jo and dec xchg add sti js xor repnz inc ds test and subb test push mov out cmc mov ljmp inc jecxz jle sahf movsl or addr16 fnstsw iret jo mov or dec std jns adc inc test fmuls (bad) lret insb sarb int3 jl call push enter jae shlb mov inc adc mov xor xchg pop pusha fnstcw shrd mov nop enter adc nop push lods aaa les inc push adc aam pop jae dec js sub sahf pop pop leave jae xchg mov ds bound aam push js push ret popf and loopne cmpsl loop outsl cmp xorb lahf xlat fsts pshufw arpl outsl loop mov or ret rclb push es add cmp aad insb fwait dec lahf sub xchg aad push mov movsb sub mov lahf orl lret in rcrb inc mov sbb fs xor test xchg mov jne pop push jmp fmull out sbb jecxz pusha push xchg mov das or jge setg and lret in and out inc (bad) jno mov mov sbb test pop jle push jnp and stos and loop mov rol sub das jae and decb cmove repz (bad) lock jbe test sub add test rorb or fstps push adc (bad) lret xor int3 pop (bad) (bad) dec pusha cmp arpl push aam sub fisub outsb arpl xlat sub lods push popa dec aam jb test sub adc xchg pop dec daa mov int insb pop insb les lahf xchg orb mov imul mov js xchg (bad) and aam insl or jae cwtl xchg jl cmpl mov test aas cltd mov mov xor and aaa mov cmp and daa adc loop xchg xorl popf notl daa dec ret mov jno movsl scas jg outsb cmovle pop cmc incl bsf jge and (bad) pop push sbb ret mov xchg jl inc (bad) cmc dec addb (bad) (bad) cmp push and jae xor jbe hlt dec mov cmpsb jo mov adc stos shl sub mov add loopne dec adc adc jbe lds call rcll stos movsb stos aas movsl mov xchg test fisubl mov jg lods pop push xchg mov in mov ja xchg aaa or lret cmp sbb sti in es jecxz sub movsb clc mov fldenv add inc adc (bad) dec cmp and fnstenv jmp fst mov in xor mov imul insw pushf stos jb fbstp add in repz pop decb lret test test add xor xchg push hlt addr16 movsb adc add add adcl cmp and push xchg sbb xorl out mov ret xchg sub loopne cmp lret movsl mov xchg in ret push lea or ja or jmp and sbb mov ficompl push mov pop sbb std jp int aam xchg ja rclb out dec cmp addr16 inc cli adc mov inc cld xchg and push (bad) and xchg sub push mov pop adc lret notl rorb subb dec mov loope cmp inc xlat xor and add xchg add mov adc es cmp inc mov cmp jge cld pop sbb shrb js bnd push gs pop pop adc insb daa rclb inc and push push sti mov pop pop stc jns dec fwait xlat into stc jle jbe insb enter cmp xchg scas pushl outsb jmp pop xlat clc loop add mov add out out (bad) dec mov test movsb adc push pop out jge (bad) dec (bad) test loop out jns lock (bad) leave dec scas push pop insb push sbb push add insb imul xchg enter test mov mov test mov lods sbb cld xor mov cltd push adc out or mov test sbb push aas rorb ljmp dec sub jae jns push leave mov into jns cwtl jecxz sub jge data16 inc xchg daa (bad) push mov push aaa rorb mov xor mov ret sub or in stc xchg cmp jno dec lcall into push (bad) sub insl stc sbbl or stos push cmpsl dec pop icebp cli movsl mov insl push cmp mov out xor sbb pop lcall cmp inc data16 add cmp sti outsb test jmp xor xchg cltd cmp (bad) mov gs aaa imul das xchg cld jmp jmp loope call mov push sub push cli adcl stos inc fmuls insl pop jmp fcmovb leave (bad) xor push loope repz mov xchg jae push xor xchg inc and mov mov popa loope jp sbb xchg loop and or push (bad) push pop fsubr imul aaa inc jnp insb (bad) out adc insb vmxoff sub subl adc sbb sub in ret sub fwait iret fstps push dec mov inc test dec lock mov xchg lods push jmp inc dec sub (bad) jmp adc scas or js aad or sub mov sub push sub ret adc int3 enter bound mov jae leave jns jae mov pop vpand movsl movsl pop loop in repnz fcomi sub (bad) ret sahf add out pop or dec jbe bound test mov imul xchg orb test test jg insb (bad) mov inc xlat mov sti and xchg mov adc xor pop arpl ss cltd cmc jbe and adc pop dec jo int3 icebp jne push popf mov clc mov adc adc sub pop icebp mov insl out add popa mov mov push pop lock sti imul mov sbb aam mov cmp push jge xchg stos repnz ret stc xchg xor push movsl mov xchg mov adc negl call push add mov lods xor pop pop mov in les push fs dec in out push stos dec jmp adc xchg push pop subb ret mov sti imul lods mov pop iret mov or lods or sub xor addr16 sub inc mov sbb es sub js mov (bad) sbb sbb sbb faddl fisubl inc je in sub pop fildll daa jns jmp pop lret dec pop in inc das dec mov nop std mov xor or test loop jl mov xchg daa lea movsl loopne xchg lds mov inc cmp dec inc lcall push scas test aad pop sbb jb aad xchg push in push push pop stc push sub mov or or (bad) fs inc sti imull mov fidivl pop jae sbb mov ja mov pop lock into gs std fistpl (bad) repz addb fidivr and xor sub adc popf rcr jl aad pop (bad) cmp aas js mov inc ljmp dec cs pop loop test out adc out test les pop mov or jns ret add push test or in pop imul push inc mov jge mov mov popf xor decb clc cmc sbb push mov mov jbe mov stc fs jge push test insb stos xchg jno xor int3 jb push jnp mov mov push enter fadds lods scas add and push call adc pop insl testb sub and sub jge sbb cwtl sub popa cmp fsubrl sub scas mov bnd mov lock loope jl mov push mov sti cmp stos sub xlat cmp xor pop xor or hlt (bad) lret (bad) sub mov dec mov ds scas fisttpll adc fstps leave mov popf cmp sub gs push sub pop xchg cmpsl inc xchg arpl in (bad) jns jae movsl (bad) cld shrl (bad) in mov loopne push add lret test test lods cmp mov test inc sub cmpsl call sti nop popa xchg pop cmpsl pop lret xchg dec add ljmp ljmp push and data16 call xchg out hlt xchg loope icebp sarb (bad) rcll aas pusha daa xlat pop sti insl sbb (bad) in xor jecxz sbb mov xchg mov jns pop pusha adc sub and (bad) adc (bad) lcall mov xchg out (bad) scas fisttp cmc sbbl test test cmp add jne enter mov xchg or cmc in enter outsl cmp xchg pop in gs xor cmp (bad) (bad) lahf sbb jb lcallw cwtl jmp insb (bad) icebp (bad) mov xchg jl push mov aam cltd mov mov sub daa stc outsb mov dec mov jns aad mov (bad) je push fnsave les add xor cmp sti ds in sbb clc cmp pop fstpt xchg lret push faddl sbb mov xor je xchg push sub mov xor int xor sarl stos testl stos xchg xchg sub sbb pushf pop cmpsl sbb mov cs in aam pop lret fsubr into xchg xchg or sub mov and cld mov test mov (bad) xor mov mov xlat sbb popa jl movl jmp xchg push ss dec setae mov lods ss jl and mov cmpsl movsb xchg movsb fcomip mov (bad) lock mov jmp bound inc add xor xor jnp cmp add sahf and scas and xchg push mov scas sbb aam sbb out jb xchg mov test and push sbb xchg cwtl (bad) push sbb sbb inc mov dec sbb daa jl jecxz push es rol dec (bad) aas mov pop cmp dec pop and pop mov jnp adcl cltd les push (bad) mov imulb ja pop inc es xchg out ds push leave (bad) aad call idivb or sub add push (bad) mov sub dec inc pop mov pop sub sbb and or mov ret xchg aam mov mov int3 pushf cmp adc and mov and and push inc mov and dec lcall (bad) xor sbb sbb out loopne leave xor mov or adc and fiaddl sbb popa adc repnz leave inc aas xchg addr16 int jmp xchg mov ffree adc (bad) sub dec adc mov shrl cmp dec pop sbb fstl fdivr push xchg mov cs out stc imul std rol xor cmpsl icebp fwait je hlt outsl test sti mov sub nop (bad) adcl test std mov das jno jne cmpsl and (bad) vpmaskmovq sub dec loopne (bad) loope pxor mov sub cwtl pop in ja je add in leave arpl les pop insl sbb fcomps ss push mov push orl sbb jl sbbb fcoml sub or ja sti cmp sbb inc inc fdivs xchg lcall inc sbb mov sbb cld aaa sbb out (bad) mov xor int fs adc xor inc pop daa notb (bad) xor push sub jnp pushf fs stc sub ret cld cmc push inc sarb add xchg xchg out bound out scas jno cli repnz adc aam jnp and mov lret xchg stc sbb test ljmp push pop jge hlt mov das hlt stc out flds in je xor dec jmp imul iret jp jno ret sbb adc lods outsl or notl adc push mov shlb imul cld mov iret or jo sarb jbe lods sub push pop inc and wbinvd mov push cmc mov bound pop pop dec add push subl mov insb test mov fdiv out in cmp xchg mov rcrb jno cmp add push mov xchg pop inc negl rcll jnp and mov push je mov lahf add decb add or dec out test mov adc and pop pop jle lcall fnsave loopne hlt pop fistl stos lcall aaa aad mov gs lods add adc push js popf add sahf sub stos fwait push mov hlt mov inc fucomi xchg xchg lods mov sarl rorb push pushf popf data16 lret hlt jnp nop repz sub loope mov lret cmc dec mull sbb jo insl ljmp int3 repnz sub out lret jns aam mov inc aas (bad) lds out clc lock adc xchg xchg (bad) lahf cmp loope cmpsb fisttpl aas andl outsb sub movsl ds jmp cmp test mov xor jbe pusha in scas aad ja pushf jnp pop imul jmp pop adc cmp int3 jno dec fs pop sahf gs inc jle in adc add and enter xchg dec sahf or cmp adc (bad) and add test cltd push out jae aas cmpsl jnp fwait stos notb sub imul add jne and aad cld add mov inc xlat ret lds icebp pop loope test nop dec std dec fucomp mov test sub arpl push inc cmp (bad) mov mov or loopne xchg test xor pushf mov mov jo pushf mov or call adc cmp test mov or push sub jp dec inc sbbl (bad) mov in mov out sbb lock jo ds adc and adc testb ja jmp push cmp cmp gs mov adc pop cmp jbe andl sarb pop push and pop xchg add xchg outsl enter mov ficoml iret out and mov jge add jle lock ds sti jl subl push aaa data16 sub xchg outsl jg bound test das xlat push cmp gs add push mov std add xor pop push in sbb lods push gs and jecxz adc mov rorl mov jge dec sbb bound das cmp jg ja sahf repnz outsb (bad) jo adc cs scas cld out inc lds inc mov insl sub outsl and lea and sbb pop bound lea (bad) int cwtl dec pop push (bad) mov mov rorl push dec mov xor jne je mov daa jnp sbb aad dec xchg add mov mov sub mov cld cmp std add dec dec adc mov lret out mov aad pop loop test adc jae inc mov add fidivr cld lds out mov mov ret xchg div out xchg cltd ds sub cmp sbb cmp incb jbe and push sbb sbb push out add mov lcall cmp sub lds fidiv rcl mov (bad) mov out inc stos imul dec cld nop lret insb cltd mov cmp cmp jg movsl push decl and sub and cli rcrb je jle ja jge leave (bad) mov dec push enter pop inc test outsb insb jg icebp xor inc xor push out mov mov inc cmc fist ret or xor in ret rcrl daa popa pop loopne sti lods std movsb mov lret push loopne mov cmp fs cwtl sub scas jne inc enter mov adc mov jb ret es add mov xlat scas or les sub push loopne and adc mov bswap sti and mov jne inc sbb out dec mov sbb outsl packuswb (bad) pop xchg (bad) xor loopne in mov inc popf dec aas pop jle add aaa cmp mov pop mov rclb mov inc mov cld loop cmpl int3 jns (bad) push fs fiadd lods in into mov (bad) imulb jl dec add clts and add fdivrl fs sub push push pop in cmp push xchg pop test test cmp pop add push lods dec cmpsb pop mov imul mov (bad) mov mov pop or xchg xchg xlat lds movsb jge mov les fnstsw sti push or xchg push (bad) das mov ss or sub lcall cmp and fsubrl inc xchg push lea cmpsl xchg (bad) call mov subl shrl cwtl xchg lock pop push imul call call push mov mov cmp mov insl push mov adc adc call mov daa mov jmp jge mov std enter xor (bad) inc dec ret add inc mov mov mov adc add sbb in jne clc test cmp adc add call mov ds push push jmp lret mov dec pop or cmp mov pop out idivl xorb push movsb xchg shrl std cld sub es inc loop cltd fldl dec cmp ret cmp mov sbb ja push add push and add leave mov mov int cmp ss pop inc (bad) lock aam stc fiadd xchg cmp insl push and jbe cmp xor cmc mov cmp aas pop imull movsb jno cmp mov dec push xor mov mov jne stc stos daa hlt in mov stos dec leave xchg push pop sub jl les inc push sbb push mov ficoml mov dec fildl icebp lret or fsub jbe push popa jo xor nop sub mov or (bad) into mov mov push rorl pop (bad) cmp out leave pop pop sti je and cmp add xchg mov pop xor lret or xchg (bad) xlat pop xor nop outsb fistp and (bad) xor std lret ljmp ja out mov insl call pop mov inc push test jae loop imul daa jle xchg aaa xchg and add xlat rcl jb push into enter rorl scas and fildl fistpll pop jg ljmp or adc pop xor int cmpsb lea (bad) int or fisubrl or fldl movsb mov and out sub or pop mov or mov inc das lahf pop inc push adc mov rorb adc dec stos inc mov push mov adc mov dec mov stos into cltd insl lds bound add lods outsb mov out jae xchg (bad) scas push sub cmp lods repnz cmp mov cmpb out pop data16 nop xchg or (bad) insb lahf les cwtl iret fcoms rcrb inc cs mov imul addr16 lret jmp mov loop subl outsb test xchg xchg pop movsb pusha inc mov fiadd sub pop mov pop inc and cmp aaa aam jbe sbb cli xor adc inc sbb sub push and insl mov stos mov and fmulp jne call test loop incb mov fnstenv daa out xlat (bad) push mov adcl ss aam outsl je fs adc imul mov cli pop xor dec xor push jae jnp lods jne mov and fs and sbb das insb popf cmc pusha xor and push xor fnstsw insb pop icebp dec dec or inc sub fisubrl xor lock rorl in fisubr jae les stos repnz adc lods push sub inc xchg mov std xchg xchg xlat (bad) aad jb cmc add out mov int mov push (bad) and rcr jle (bad) xchg mov (bad) cmp push push (bad) (bad) xor rolb sub xchg loop (bad) mov daa dec pop popa xchg jae mov mov sbb jo and sub (bad) and pushf (bad) aaa movsl rcrl subb add and cmpsb ljmp ret (bad) xor into stos cmp clc loope mov scas add push add mov leave push xor inc jb cmpsb xchg mov jb xchg add jno push movsb dec pop dec ret iret mov inc push ljmp mov jmp jmp std or xchg aas cmp imulb dec mov inc test and mov cwtl gs xor pop xor cmpsl xor push xlat add mov imul insb push pop push fcom sbb pop loopne fisubrl push lahf mov mov add cmp sub dec sbb mov xchg xor jb ljmp xchg inc test hlt pop stos pop test jg xchg xor jle or mov std mov out adc sbb add inc (bad) dec pop fcomi push sbb sub popf ljmp sbb adc je (bad) mov es mov cwtl sbb push iret mov mov mov xor clc xchg aad scas xchg mov (bad) pop add hlt das jmp leave repz test xchg add jno mov dec inc cli dec mov cmp in jb loope push mov push out inc add pop int push ja add aad add add mov or test icebp dec and jle mov shrl out arpl pop insb ja mov pop (bad) push sub cltd xchg int ret icebp sub inc sbb lcall enter leave enter jle lcall sbb inc mov test jl (bad) or stc inc sub push scas popa xchg and fcmovu negl jbe ja xor nop fs fwait lcall ja and mov or inc or add rcrb das xchg mov insb sbb das cld jbe cmp sub stos das push cmp cmp dec (bad) mov push (bad) mov out mov dec and and cmp (bad) test xlat push dec cmc shrl add mov adc mov std mov add mov outsb loopne mov push lock mov add fimull and (bad) and cmpsb cmp imul mov lret cmpsl je dec cmp pop pcmpgtb inc adc push inc sti sub adc fildl dec jecxz jnp add lcall lock push and adc loop (bad) pop and cmp dec or xor dec clc pop cmp sbb out inc sub fwait mov je rclb fldcw outsl adc mov mov jl out mov (bad) sub sub and push xchg lods sbb jns mov mov mov js pushw jmp jp ljmp test push nop xchg jcxz or jne xchg movsl lcall (bad) cmp and cld cmp test adc flds pop jmp adc mov ljmp loop sbb add fsubs cmc jbe (bad) (bad) outsl jbe push vsubps mov fdivl pop cs mov sbb lret mov cli faddl adc or push cld mov jmp fs pop dec xor fimull (bad) lods (bad) test ja mov outsb (bad) push mov stos mov data16 stos clc lds mov lock into ret dec shr sub push in jbe es sahf icebp push add scas ss and or sub scas ljmp dec and or add lods frstor xchg sub sub xchg scas mov xchg mov addr16 adc and aas aad and sbb push xchg add test andl inc mull dec inc add xlat fisubr (bad) loopne mov xchg dec test sti mov and mov lahf push dec fstps fnstenv sub sbb data16 cmpl lods test cmp movsb or or inc xor fs nop inc jne jg adc stos (bad) mov xchg fwait pushf dec push daa mov cltd pop aaa data16 add mov shl (bad) jae stos xchg negb xchg and cmp inc ret lahf jo lea sbb pop xor push mov push mov out aam ret jb jl pop mov xchg std aas ja lds and xlat rcll inc orb add jecxz adc outsb lock sti sub mov add test push cld jmp jnp cmp jl aam (bad) mov jns lods pop pop and sarb dec leave out cli (bad) inc out push dec pushf (bad) test and push pop imul xchg pop movsb inc add sbb mov sahf vmovupd mov arpl imul scas arpl loope or mov adc (bad) or daa (bad) in imul (bad) gs pop pop jmp je bswap inc idivl shrb andl call inc xchg js fdiv js xchg pop arpl add mov jle ljmp pop pop ror xor mov push mov ja jmp int3 mov and mov jle int int push adc lret push jnp inc movsb dec pop mov xor test shll push adc cli inc push mov lods adc xchg and je xchg xchg clc pop outsb push mov popa out cltd lods in push arpl or or mov pop mov xchg insb xchg outsb lods push test jge push mov mov arpl cmpsb pushf xor mov push call pop test pusha ret pop pop loope pop or push sahf mov push adc jbe push xchg add jecxz lods push dec out mov cmpsb ljmp outsb lea add and pop aam lret outsl pop xchg cmp pop push dec ret imul dec inc testb push inc add js ret enter xchg cmpsl lods xchg sbb addr16 repz mov xlat pop dec xor andl jmp and add lock sbb dec leave jle mov test add leave add add mov add push in dec adc mov push (bad) or iret add sbb push in or out enter dec cmp cs jecxz mov cwtl pop sbb bound call fsubrl adc mov leave addr16 add cmovns nop stos push mov sub dec js mov cli int jle les fbstp sub or (bad) ljmp and into clc shrb xor sbb test jno dec mov (bad) xor rcrl or stos imul sub enter add pop gs mov std inc aam jbe imul scas pop aad lods push mov outsl std mov xchg aam sbb dec les pop pusha xchg mov jno ret movsb xchg mov pusha dec cmp cwtl jnp adc or mov pop mov cwtl dec cli or bound mov push fdivrs dec adc adc in js test mov call gs lea cmp adc lret xor dec sub adc je dec mov lea dec dec shrl pop mov pusha popa (bad) test dec test push add es sub shll dec push fidivr jno mov sbb ja,pt aaa pop clc xchg ret insl rclb sahf push pop into pop cmpsl sbb bswap push (bad) add scas add js repz mov scas into (bad) add movsl test outsl xlat or ss ficompl mov push test add out and ficomp test outsb out mov xchg sub out jo pop dec icebp adc or push cmp or add shrb pop xor cmp xchg jmp inc adc addr16 (bad) aam dec mov movsb ljmp fimull pop jbe jl xchg push ja repnz push sbbb daa loop jns or fcmovb int3 or (bad) xchg fcomps cmpsl cmp hlt xchg imul sub jle movsb pop pop scas push fisubr mov fs loop dec sti mov stos dec xor xchg mov repnz sbb adc xchg sub aad fidivl (bad) cmp rolb call mov fucomi add mov cs mov inc repnz add add (bad) or inc outsb and rolb fdivrs jmp mov xor mov adc or xchg ds sbb repz sub dec pop inc rcll sub mov ja imul and add mov fsts lods inc lcall loope jg (bad) adc and push (bad) orl mov pop inc push mov adc mov mov jmp loope rorb mov jge cmpsb mov xor sub je dec ljmp pop or dec sbb (bad) sbb jecxz clc movsb cmp sub lret es adc andl mov lock cs sbb cmpsl popl in dec (bad) addl call push add cmp cmp int3 push test jp sbb iret scas dec add push je aad sub fwait xchg xor mov push mov vmaxss repz cwtl icebp and scas stos dec mov and adcl push sti test mov jb sub lea xor mov mov inc nop stos (bad) (bad) jae std jl xor adc repnz adc push mov adc ds loope add mull lahf loop push sub mov lcall scas cmp in xor insb cli shl (bad) dec add push aas sarl adc inc sbb imulb data16 sub push dec les ss je or adc inc and or cwtl call rcr mov popf mov or in lods sbb test dec jl mov cmp mov pusha dec mov leave push mov dec loope or lcall out sbb xchg mov sbbl dec mov loop insl ror mov daa adc in mov add adc les sahf inc mov (bad) cwtl xor pop or cwtl cltd push add push ja xchg dec and or xchg lcall rorb adc leave les xor repz jecxz add test inc dec mov shr in sub cmp fstps shr and jno mov mov inc sarb jno and xlat adc inc sahf daa scas push sbb push lea nop adc cmp jns xchg popf xlat or add je push pop inc ja pop mov lea inc ja mov adc push cli jb add xlat daa pop leave dec sub les ret and mov push (bad) cmp push xchg sarb bound xchg std addb inc (bad) das push mov div sbb outsl inc data16 pop fs insl or pop inc pop arpl test sahf test push cmp shlb mov pusha add in lret mov add insb mov inc cmp add jns mov xchg adc out push xor mov push mov sbb inc or fildl lahf cmp adc sbb das icebp arpl pop cs mov std fwait mov add ret imul dec movsl iret push popa (bad) outsl outsl pop lock sahf cmp xor and push or or mov sbb mov inc (bad) pop mov in lods pop mov ja iret adc pop test jmp pop push or jb or out or push pop ss (bad) fdivrs ror insb inc mulb mulb pop aam sbb dec out in mov enter or call rcrb movsl repz (bad) xor sbb jns or sub pop cmpsb loope xlat loop cmp test push repz (bad) imul jl xor sbbb enter push jns mov aad and cmp mov daa mov aas (bad) xchg xor dec pop jmp loopne dec xor dec (bad) jne pop pusha in fnclex xor sti mov gs int3 frstor dec mov jmp pop inc xchg mov outsl (bad) ret int lret push jo pop inc aaa push ret add inc addl xchg xchg dec paddq push cltd movsb xor cmpsb aas test addb inc mov xor xlat fsubl push lds popf aad fwait repnz mov mov mov ror mov pop or (bad) icebp adc or int das add dec xchg mov push xchg pop ljmp inc push sub movsb adc push jmp sub xlat add rclb pop or shrl jbe fidivl arpl sbb loop pushl (bad) call push mov push inc or jno mov out dec adc dec sbb xchg fisttp sti mov mov sub sbb mov and dec les mov mov fxch push hlt fnstsw inc subl pusha cli ja mov ljmp shr je les pop fs lock pop mov sub repnz sub xchg sbb push cmpsl cmpsb out sbb lahf ljmp pusha hlt mov stc test fnsave sti sub (bad) add cmovge sub adc sbb (bad) adc inc mov enter pop pop out mov cmp mov mov or cs mov mov outsl xchg jno inc rorl inc movsl (bad) adc cmp mov mov jnp mov mov addl dec fcom adc fisttpl data16 add data16 or pop inc in adc gs lcall (bad) insb ret (bad) mov (bad) xor imulb repz jp,pn pusha xor (bad) (bad) (bad) outsl fwait arpl and es xchg mov xchg aaa repnz push xchg mov movsl inc in test jo out add xchg int3 repz xor cmp test push adc fcmove clc (bad) fsubrl into dec repz daa push push addr16 mov xor sub (bad) iret adc sbb mov loop pop pop mov repz in xor lcall push jnp or inc sub cs pop cwtl les mov jge push sbb dec and popl in shlb mov (bad) jge scas and arpl cmpsl loopne xchg ficom scas inc xchg faddl pop mov sub cmp in cmp cld dec mov cmp ja js mov cmp shrl jl xchg mov int push sti or jnp insl add cmp aaa jl pop push pop mov xchg inc (bad) and mov and fidivrl push push pop and and ljmp in and add out sub adc std gs repnz cltd in push into sub pop fldl mov lahf inc inc sub xchg add inc mov mov and jbe mov and mov popa inc mov mov faddl insl aas fldt pop testb push push cmpsl pop movsl mov push push mov aam fadd sbb pop lcall cmpsl pop xchg pop xor mov push xchg push lahf sub sbb sti in cmp outsb pop sbb ret cmp mov pusha pop into mov out and (bad) inc fcmovbe icebp dec (bad) mov pcmpeqb mov xchg sahf out in out cmp gs jecxz mov fwait lret push sbb xchg xchg loop out push sub fdivl xchg js pusha push pop inc xchg xchg dec testl xchg mov dec addr16 push adc js (bad) sub fbld mov pop test mov lods push mov movsb add pop mov (bad) rol inc sahf out mov in xchg sahf cmp fildll testl stos loop adc clc dec sub jb movsl adc enter adcl int mov sbb aaa push dec inc fisttpll cld (bad) repz jle inc jge push sbb mov jbe ds push add adc pusha jno mov cmp adc push adc adc sbb icebp inc sbb rcl mov push (bad) aaa ljmp (bad) pop rcrl add aam decb mov mov cmp shl add push mov in mov sbb into mov add push and aad insl xor repz paddsb inc loopne data16 outsl cs add cmpsb inc sbb jl mov adc lahf sti inc jmp cmpsl ja lret mov lods pop or into punpckhdq cmp sbb roll imul cmpsb cmpsb lcall pop leave sub clc cmpl outsl mov cmp lret jle push mov cmp fsubrs cli stos fiaddl xchg xor sbb daa icebp les ret add jnp (bad) sbb or rcll lret mov and jecxz or loopne mov mov sbb fsubrl mov sbb clc push pop xor or push or stos pop push out cmpsl pop cli data16 aam (bad) loop lcall std ja push jno popa mov jecxz mov mov (bad) cmc push movhps mov and pop fs out das (bad) in es lret mov xorl lret mov sbb pop test in sbb lods es and mov (bad) andb enter dec rcr mov cld and sub push (bad) js pop fsubrs push lods sar xchg xchg or cmpsl aaa imul push inc fcom (bad) mov hlt test xor mov xchg (bad) shlb pop repz mov cwtl loope cmp clc and incb stos imul xchg hlt andb orl jg push (bad) nop mov out pop ficoml pop out or xlat sub clc adc add pop inc arpl movsb cmp arpl inc mov dec fidivr in data16 pop mov lret pop mov or sar mov sub and mov (bad) mov (bad) jmp cmc (bad) lea adc and pop add push jne (bad) jno xchg jae ret xchg xchg cmp pop arpl adc mov pop pusha push cmc enter dec jae sub (bad) mov adc jl cmp scas xchg and push pop xchg popf les (bad) pop mov ljmp or negl adc out mov cmp xor fucomi jmp jmp dec push adc mov rcrl mov and cmp pop sbb ds shl pop or movsl fdivrp in pop push lock xor lahf sbb xchg push xchg mov adc jno xor xchg sub test mov xchg mulb pop add repnz sub lahf mov mov aam xchg lea push call test or lea shrb jecxz or sarb and xchg insb jns das addr16 push add xor je adc test popa mov insl lret ret or and add or mov jmp (bad) mov mov mov test push (bad) out testl in repnz jmp (bad) lret inc cmp cltd mov insb fstpl scas popa mov ljmp stc and in dec in mov ret movsl xchg mov int pop inc pop mov imul push cmp (bad) rcll ret movsl in pop or mov hlt lahf xor (bad) mov data16 sub notl sbb or test (bad) je in sub sub xchg pop inc dec inc popf xor pop cmp push push push xor or es inc out cmp push and aam and mov sahf cmp ret xchg in adc in notb adc pop test mov xchg scas repnz mov pop add and mov mov mov sbb cltd sbb adc inc inc inc loopne ficomp xchg cmp pusha pop lock test lcall (bad) cmp xor iret pop cmpsb cmp xchg aaa lods pusha xchg lcall xor or test mov dec (bad) (bad) xor pop test push cmp pop push enter xchg popa jecxz adc pushw jge xchg push sbb (bad) jo hlt mov fwait jmp das dec pop sub daa dec lret insb aaa rclb (bad) push cmp ja or or mov repnz repnz fdiv pop jns sbb test xor adc sbb xor aad lahf lcall pop mov add fsubrs push outsl fiaddl outsb call stc (bad) xchg pop mov pop pop scas addr16 dec push sahf sbb mov and dec or mov mov lods jge cmc jno mov pop push mov sahf lock call imul push in dec xchg mov jl cmp inc repz (bad) xor or (bad) mov pop test pushf popa sub dec loop nop (bad) pop in nop gs cmp icebp adc ret and dec mov scas add fisttpl in decb addb add ret dec lcall ret sub rcrb sbb mov xchg adc sbb cwtl loop addr16 out cmpsb xor ficompl fist jo fimull fidivrl sbb mov inc mov in pop repnz mov lahf pop cwtl mov outsb mov add cli imul jecxz adcl test mov or jb addl data16 fild sub xchg mov loop inc jae das cmp cld ds mov inc ds insb insb stos push sbb add sub mov mov rolb rol jno mov mov mov shlb jae call add or push xor inc or push roll sub icebp or ss lock jno rorl mov add (bad) push inc data16 insl cli push jnp fistp sbb ja das jb mov in in xor cmc mov out push negb xor mov test push dec cmc fcos loope adc cs movsl (bad) mov dec aas inc in sub xor movd sbb dec inc inc out and mov into adc cmpsb enter test jmp out inc sti mov lahf push pop cmp in xchg push mov xchg push dec clc ja in mov mov icebp inc icebp and add adc xchg inc cmp xor or mov and popf fsubrs xor insb add fsubrs sub divl fnstsw imul (bad) leave and jbe insb xchg outsl mov push stos data16 jnp and test mov add icebp mov dec (bad) dec inc les aaa out xlat mov push call pop push wrmsr outsb movb xchg je out cmp fiaddl (bad) mov dec adc cmpsl dec or and mov or popa adc add mov aam xor inc fwait pop aaa jno cmpsb lods mov dec stos in out push push or fwait mov jmp xlat add push addr16 js mov (bad) (bad) pop xor mov push popa outsb mov push mov (bad) imulb pop dec mov les jl stos fidivr out push pop jb mov pop ret dec mov pop ja dec jg xlat inc xor xor jp pusha repnz jle push std mov pop mov dec push in stos clc and add addr16 inc add dec orl push orl inc (bad) ja pop pop movsl jno cmp test popl sub inc sbb jno mov fild shr push jecxz sub add add stos cmpsb fistpl scas jae and decb popf ret shr dec enter arpl sub rclb hlt es xchg aad add pushf cmp hlt xchg imulb push mov add jmp les outsl mov test inc mov cmp jbe jbe fwait ret imul int3 sub nop cltd fisttp ret sub push mov popf cmc sarl and jge fimull movsb mov shrl cmp adc popa gs rcl mov jb cld adc outsb ss sti xor pop inc pop xor imul roll adc pop pop ja xchg add mov sub lods add (bad) repnz cltd cmp and ss out mov aad mov or pop adc jo xchg fstl sbb mov loop ret inc pop imul rdtsc and lahf sbb and leave test shll mov mov mov sahf mull rol call mov jo (bad) aas inc andb xor cmp jbe sbb into (bad) pop aad imul add xacquire cmp mov pop cmpsl jmp arpl or inc lret repnz fild out leave xor imul xchg mov (bad) mov je mov or pushf mov push adc test push jg xchg mov cli test or pop xor jns fcoml or and push cltd data16 xchg popf iret sbb rolb lret adc in inc mov daa or stc std add outsb sarl sbb outsb cmp (bad) imul fdiv frstor mov jb mov add xorps (bad) int3 xor push sub int3 test or lds jb mov adc jecxz add dec jp divl in ficom imul add pop fild into cmc pop sbb repnz push jo test jb jl dec cwtl sub push xchg jne (bad) ljmp jmp shrl cli push lahf mov xor daa iret mov cmp (bad) or stos fdivr xchg (bad) lock add cmpsl mov inc jne loopne iret aaa pop ret cli push and sar repz (bad) push loop mov int3 orb sbb mov cltd cwtl ror in push pusha and clc repz pop in xchg inc in les mov lods xor sub imul adc cmpsb inc fwait ja ss mov pop inc sbb cmpsl sarl pop sbb cmp movsb dec mov pop cmp sub mov ret cmp fninit add stc ret pop mov dec ja pop inc addl sbb scas mov aas fiaddl sub lea loope and xchg jmp inc xor inc mov loope fistp sub mov std push call (bad) loop (bad) ja popf mov ret outsb jg push aad shlb movsl adc fcomps jo out inc mov nop jne mov pusha jb imul cmp jg shl cmp stc (bad) push rcll fisttpl test pop in test xor mov lea jl sti jle lods xchg inc add ret aam jmp and jecxz out (bad) xor and clc push jecxz xor ret insb jbe inc xor mov adc (bad) repz mov and cmp inc sbb ds sub lea inc test sahf (bad) nop adc dec repnz test push gs js das push inc loopne cmc cmc mov int daa mov add ljmp enter out add xchg lock cmc mov xchg ss fidivrl mov dec movsl int rcl jne or ss stc lods xchg ds inc int mov adc push stc sbb das pop cli push pop aam daa pushf inc mov adc lea mov popa push cltd xchg jno cmp mov shlb mov hlt faddl mov adc (bad) movsl test xor xor and add (bad) jl bound xor test sbb pop push stc in jnp sti shll scas or xchg mov dec (bad) adc inc lcall loopne fs jp xor inc or addr16 mov loopne push lea repz test and aas aam andb pop test cmp inc add dec movsb mov clc fstl push mov adc sub popf pop jge pop jmp aam js pop leave sub xor test sub ret mov mov dec dec pop jmp add xor jmp pop sbb aad test popa inc loop es les xlat mov (bad) (bad) mov push mov daa cs xchg leave pop inc sbb add lcall gs pushf inc xor daa sarl sbb pop mov pop loope sbb pusha outsb adc lfs jne je inc addr16 pop out iret jp mov xchg jecxz inc jmp adc enter mov mov dec sahf dec inc fistl add test push mov xchg gs sahf insl and dec orl fldcw xchg pop (bad) mov fist flds pop outsb mov in test movb xchg outsl aas cltd mov shl or (bad) sub xchg inc sub aas orl and dec in sub adc adc inc clc xor xor shrl adc cs push in jns cmp sbb pop mov jb mov push mov je lret (bad) repz (bad) imul scas jb aad xchg cmp les fmuls jne iretw jo (bad) mov in stc in jae cli enter xchg xor add bound andl in add out mov fwait inc test dec jmp cmp mov cmp std repnz daa stos int and mov cli pop or aas or dec insb add (bad) popa push or dec imul bound ret xchg push adcl push int mov lds (bad) js xchg in jb scas lock repnz aad add fstp sub stc movsl sbb cld imul or aaa test dec movsl (bad) jmp cwtl push push dec insl hlt sbb cwtl xor xchg xor push and xor xchg js cmc aas mov mov lret cwtl push jmp jae into inc icebp rorb mov cs pop lds mov stc inc ror lahf dec aad insb pop out mov ret out in in leave adc dec gs sbb aas lret xor mov or ds push cmp jbe inc (bad) xchg sub and std pop lea in inc rolb dec (bad) cmp pusha rcll nop adc cs and cmp push fiaddl repnz (bad) cmp dec jmp and fistp add sub or lahf or adc push mov sub or call adc pop cli (bad) and xchg cltd mov adc ljmp loopne sbb repnz fistp stos bound pop cltd fnstsw test or and push imul es mov sbb jp xor nop and dec cli sub ja inc movsb xor inc out sti addl mov mov add dec (bad) pop in int cmpsb xor lds fisttpl mov jbe push sbb mov imulb xchg cmp jb lahf loop xor bound out xchg lods idivl das fmull mov ret (bad) xor addb ss loopne in sbb lock push pushf sar mov lret mov jecxz xchg or mov mov jle and inc sbb int cmpsb sbb pop lahf sbb or imul (bad) idiv mov sub mov cli or incb or mov scas sub lahf add jg cmp in imul lock test xor mov push mov sbb lret (bad) stos stos je hlt int xor das dec mov mov sahf push sbb popf pop jecxz faddl std pop rolb inc dec xor mov push sbb push push je xchg ret js bound insl es incl call dec subl mov mov mov pop adcl sbb jne inc xchg xor sbb cmp stc fnstcw mov js lods ss or inc xor dec push fsubs jle jb push pusha xchg and fidivl test xor mov push jle dec push popl stos cmp inc or jns scas add outsl sbb add xor fcmovne sbb ss outsl mov mov loope pop pop pop es pushf faddp pop dec (bad) cltd mov (bad) aam stc jae and orl cmc nop mov push sbb or mov and pop cmp outsb cmp jmp sub test mov mov adc cmp (bad) lea aam js inc sbb mov ja pop les mov xor ja inc xchg inc or std cli sub pushf aad adc add (bad) lret pop les pop pop test lea (bad) es movsb xchg sub inc sbb jl jb hlt mov pop add xchg cmp xor and lock idiv push adc cmp lds jae outsb lds pop dec sub pop cwtl sub daa inc leave sbb xchg ret and pop clc int loop push jnp push sub adc rcl scas dec sbb (bad) lret jle dec in sub add inc out mov sbb (bad) outsb (bad) aaa jae nop jecxz ror popa outsl out nop pop (bad) fsubl lock lock rcl cmpsl push stos jno adc jb adc xchg (bad) (bad) pop scas aam aas mov into out xchg cli xlat jb in jne out sub cld fwait outsb arpl int3 or pop ss aad mov int3 mov btr imul ds ret xor xchg push add mov cltd pop and pushf inc mov data16 out pop pop dec lret jmp js iret loope das sbb mov sti mov jecxz pop jbe aam sub pop mov test inc cwtl add js cmpsb cmp in pop std (bad) adc cmp pop insl imul pop xor nop aad jle cli mov out mov in movsb ljmp jl and mov lds mov movsl add cltd pop in pop outsl mov add mov (bad) bound popf scas mov jne mov jmp into js jo ds push mov or mov out aaa lcall int3 cmp xchg pop sti out inc jle jne and sbb inc xor pop cmp test add loope xchg nop mov add (bad) dec push adc pop dec aas mov add cmp dec xlat xchg scas adc push cmpsl outsl std mov ljmp cmp mov cmc xor mov adc lret mov sbbl push xchg xchg adc sub jecxz inc inc bound ljmp ror sub ret lods push xchg test lods dec das jbe mov into dec loope sbb test and jo sahf imul mov sbb or cld lret pop xchg add outsl pop in xor xchg sbb push or into ret (bad) daa cmp cmp dec fiadd pop mov add aad push dec (bad) outsl and orl mov repz mov movsl adc negl mov mov sbb aam or mov xchg ret sti add push cmp gs and ja insl pusha andb or call inc flds addb inc rorl dec clc test arpl in jns aas js fmull lock and mov ja adc cmp in push bound outsb pop jmp addr16 pop xchg jp scas mov inc out xlat sub pop lods add cmp mov loopne (bad) in xchg cmp mov stos outsl mov dec jg (bad) pop mov pop cmpsl sub enter ja push call (bad) mov test xor lcall sub pop mov mov push inc test (bad) jno xor js out xchg or cmp sbb roll loop repnz (bad) aas lahf push push lock cmp pop adc adc and mov mov add xlat xchg jmp cmp mov mov mov push cmp adc push pop fnop cmp sub sbb and xor lret adc sti bound cmp mov icebp sbb cmp jp out push outsl dec sub mov add and and loop leave sbb mov fdivl shrl rolb fdiv sbb xchg outsl cmp push xchg dec and scas mov or or and add out sub push push sub sbb adc mov (bad) hlt jb ja aas leave jmp jg cli imul hlt push jae xchg jne pusha lds call and aad cmc test loopne push push std and lahf pop sub (bad) jmp sub cmp add shrl cmp insb aam xchg xor insb imul aam xchg pop pop (bad) xor pop push in xor mov mov loop inc add mov (bad) and sub mov call cmpsl ficom mov movsb sbbl or lcall in mov into incl xchg pop ret movsl xlat sbb shl fucom jbe in imul pop loopne orl adc mov loopne ljmp pop int3 xor aad lea mov outsb (bad) int arpl cmp push je jmp dec xor roll scas inc aam popa adc mov mov cwtl push inc rol push data16 add xchg xchg arpl pop lds push jae,pn std adc jno ss lahf or push das push dec int push movsl pop (bad) jmp xchg test jl mov cmp push in mov pop je or mov mov fimul sbb adc addl add cmp int3 mov je cmp push sahf jnp sub pop loopne lods mov insl mov gs mov xchg mul (bad) repnz add stos or rorl (bad) jb loope or gs outsl mov enter adc loop sbb das pop into out cmpl in dec sbb dec push pop push fwait imull ss inc addr16 pushf push cmp test jnp int cld push push or scas stc mov js sarl adc sbb jle adc jp push fnstenv aaa hlt sbb cmp test sub push loop lods aad cmc out ds cmc lods vdivsd dec fnsave xor in out cmc lock add jo enter shll fstpt test push pop test adc dec pop xlat cld mov jmp pop enter test cmp pop dec into adc pop sub jae test pop pop dec scas push scas (bad) loop out ss mov hlt cmp cmc or mov push dec nop mov add in xchg in sbb jnp data16 mov (bad) ja test mov add in add inc clc inc dec and je scas xor adc and cmpsb cmc mov adc mov sub or xor stos push aaa fildl insb dec jnp stc sub outsl mov adc shrb jecxz addr16 xor jmp xor lods stc das arpl hlt pop adc jge jb lods lods sbb dec cmp xchg mov xchg test push push sbb fcoms mov mov dec jne adc push out enter sub jecxz jge std aad cmpl sbb mov lods pop rorl jno push pop (bad) and dec sahf pop test movsb dec cli (bad) mov jbe addr16 aam pushf (bad) mov add dec pop and adc outsl xchg cli inc (bad) cmp iret in xor sbb push pop add test or fisubr jne and xlat jg or fsubs sub xchg sub mov mov mov leave add shlb sti fildll xchg imul dec add push loope shrb dec negl cli cs test adc ret insl pop and lods push inc test lcall pop jb xchg je mov popa cmpsl nop repnz aam mov jae fwait dec jb inc cli andl sbb popa lds pop xchg pop iret or (bad) rorl ror jnp xor iret into pop aad sbb or sub cwtl mov mov test adcl scas sub jge (bad) xor xchg pushf xlat aas loop push jle mov in fidiv push mov test dec cli iret sbb icebp daa adc rcrl cmp sub imul pop mov fstpt cmp int3 call dec dec dec inc negl pop out push mov das lods mov int sbb stc xchg mov pop mov jge pop and adc xor mov lahf pop daa ja inc enter sub cs push add shrl mov pop cmp pusha fsts dec jns and orl xchg adc push jns das (bad) and push mov xchg (bad) inc mov outsb push inc add fsub mov sahf mov fnsave fsubs pushl inc jns in push lods and test push cltd jmp cwtl btr das and sbb dec enter ss xor xchg (bad) xchg jle (bad) inc mov or je sarb scas popa cmpsb jle mov fwait fs pop mov mov negl in mov in pop scas push mov aaa mov ret test (bad) bound add and adc mov or mov gs and ds fldt cmpsl clc iret in out out lods mov dec or xchg mov data16 push add fldt and loopne das sub adc mov lea push scas and push mov mov adc (bad) mov int3 adc (bad) pop dec push jle adc mov (bad) mov adc in mov inc (bad) push inc (bad) fs dec call lds out fcos or xlat xchg in js xchg test dec insl push loop cld cmp sti push inc das jbe sbb test xchg xor lock cmp and inc xchg mov pop jns repz push add xor mov jns add dec xor inc lock jmp (bad) pushf orl iret in idivb insb scas pop ds inc adc fistp and sti aad rcrl lods mov test adc jo inc test mov pusha sbb int cmp mov fstl dec mov pop cmp cmp inc inc or lcall in or jnp in pop xlat scas mov push es addl ljmp bound jp mov sbbb outsb adcl push arpl lret (bad) mov lahf ret mov leave mov dec rcl std lret push je add es aad cwtl movsl jmp sub ret pop push xchg pop orl sahf mov cmc rcll ljmp pushf inc mov and adc adc mov clc (bad) dec cwtl mov lds leave sub push movsb scas dec pop stc rolb xorl mov or mov mov call mov push xchg add or mov (bad) mov dec fucomip mov rcrb dec mov pop lock jecxz jmp push sbb into mov adc mov (bad) adc (bad) add cmp sarb mov cmp xchg adc jge in popf cmp outsl dec sub adc test movsb push mov push jl (bad) or sahf sub dec jno fsub leave (bad) jmp es fs addr16 fsubrl or cmp scas leave mov push push dec ss xchg mov wrmsr lea jae,pn mov mov shlb (bad) iret pop inc sbb fldt repnz in mov dec jmp or bound out shr cmp inc out lock outsl (bad) mov pop (bad) jbe pop stos enter xchg nop or push cmpsb das jg andl mov (bad) stos movsl push cmpsb and mov (bad) cmp js leave inc dec sbb jnp mov inc js aas ror loope inc in xlat dec push (bad) (bad) lret cs (bad) clc sub mov gs mov ret (bad) adc popf in and xlat mov cmpsb cmp test push stos stos mov sub xchg cli add jbe ret cwtl gs pop inc mov adc iret aaa mov inc sub cmc scas setne andl xchg sub push add cmp js into mov popa pop fidivl pop iret cmp (bad) outsl movsl add mov test mov icebp sbb lock sbb xor sbb mov push push mov je or ljmp fisubl decl inc push pusha or adc and adc ja mov or cmp dec ljmp jo mov loope xor xchg jp push add scas push in fstpl add xchg adc inc icebp ret xor and or (bad) lcall rcl int add mov push add mov pop push leave mov sbb imul cwtl push jbe mov inc sub sub and lret (bad) push inc (bad) pushf pusha negl ljmp adc xlat daa rcl ficoml push xchg push (bad) aad dec outsl cmpsl and push push cmp in testl xchg push or mov fdiv nop cmpsb and jle xor addw adc mov inc movsb push insb adc mov sub pop mov adc jne test adc xor mov fisttpl push les lcall jecxz rclb jns sarl insb adc jge adc maxps (bad) jp dec pusha adc rolb scas scas xchg cld gs dec andl ret hlt mov ljmp dec add xchg (bad) pop ja mov sub hlt mov cmpsl jb and aam or or mov adc (bad) outsb mov jg mov xor ffree fstpl sub cmp (bad) fstl jmp lock dec adc mov inc xchg inc lock es in enter adc jl dec fmuls int3 outsl mov (bad) lds mov adcl bound das push pop xor leave push rorl inc xchg sub sub cmpsb js cmc mov addr16 outsb adc int3 sub mov shrb push stos jae insb stc div pop rcrb loopne mov loop xchg aaa mov fsubr std push flds xchg movsb and fs test and pop fimull jne (bad) repz mov iret (bad) into lods insl lods ja insb xchg test cli idivb es adc push push enter or test pushf out and mov inc push push or addr16 (bad) insl loopne push shrl mov repnz dec popf popa jnp mov cmp cmp xchg arpl enter mov movsl rcrl ja (bad) xor mov or lret movb xor imul out test andl test les das js shrb scas xchg cmp mov cmpb arpl jmp aas leave sub cmpsb jge (bad) idivl cmp negb (bad) dec clc loop (bad) rorb adc dec sub in repnz xchg fldenvs mov mov in xchg int3 mov sbb mov (bad) mov lods inc mov mov inc xchg cmp push aad sub mov add jbe pop nop lahf pop inc mov call sbb cmp insl lods imul test ljmp mov gs jo (bad) mulb jecxz icebp adc imul sub inc xlat in and push inc inc cmp mov xchg mov cltd cmpsb mov adc (bad) xchg mov add and (bad) xor fs ss cltd xlat mov mov in stc xchg lahf inc fcmovnb mov jl fnop lret dec sahf and sbb and mov and or fs xchg and dec test pop cwtl mov insb dec int3 mov es sbb xchg jg push ljmp lds outsl jne add or mov loopne jecxz ja mov push fwait push inc das cwtl (bad) fs (bad) enter jnp,pt not leave fucomip dec (bad) jbe outsl fwait mov clc andl mov fstl js gs test push mov push push loope pop (bad) (bad) repz fisubrl pop xchg xchg adc or call cmp dec xor xchg sub add mov repnz fsubrs cmp add or iret jmp add repz inc fsubr mov jmp leave xchg hlt cmp sub mov push adc xor lds lcall adc lret xchg jae sbb lods xorb adc sti test push icebp ja aam xor loop mov repnz pop das or mov sahf outsl xadd aas dec fcoms adc adc in stos out mov in outsl repz cmp mov out fiaddl pop lcall aad aam xchg loop push (bad) push xchg pusha fwait outsb ret sbb insl mov jb icebp inc push imull pusha lcall push icebp call sbb insb dec or addr16 push test sub and dec leave cwtl in (bad) repz inc inc sub push inc sub inc loope cmc add sbb sarb inc sub call inc jl pop cmp (bad) dec mov incb std mov pop das jmp sbb cs hlt ljmp pop lea lods int3 pop xchg cs test sti mov in inc shr adc mov push mov push xchg test lods mov (bad) mov mov and add aam repz daa and sbb and rcrb adc add xor sub aaa inc mov outsl inc add (bad) (bad) mov sarb mov movsb or in xor sbb or dec inc movsl push jmp mov pop push cvttps2pi push fcomps or stc xor sti jmp nop xchg adc lods sarb fidiv cmpsb add or dec (bad) pusha pop push sub andb leave loopne mov mov bound scas loop shr push xor int3 enter int mov jle stos adc aas sub and cmp iret pop xor inc shrb xor mov inc mov rol stos cmp mov cwtl dec jmp add or cmpsb lret sub lds dec adc add mov shlb mov popa mov fldenv cmp and rolb mov push jg push pop mov add xchg ds bound rolb push pop cmp rorl (bad) mov movsb lds or inc or push out fldenv or cmp popf jg sub dec lret sahf mov sub es xlat dec mov jae cld lret (bad) xor cmp movsb jmp ss clc test mov pop loope cld scas push xchg sbb aaa mov loop inc arpl ds clc fsubrp test mov and in and fs mov (bad) sti jae pop scas mov inc js iret and xchg fldpi inc insl xorb sub sub sti mov (bad) adc call or fdivrs ss mov std pop jg cld adc push ss lods mov lahf add or popf inc insb in test cmp aad mov lret ret mov sbb std xor aas mov lods push cmp adc push aad jnp out enter seto or mov push push test imul pop mov add mov (bad) mov fisubl pushf adc cmp call inc mov fiadd cmp popf dec lds shlb les fmuls leave mov jno push out dec push xlat adc push cmpsl push rclb lea mov fldcw in or cwtl cmp cwtl mov xchg pop dec mov mov sub in cld test xchg ds aad (bad) in inc aam fisubrl inc cmpsl (bad) add in sub fs in pushf mov gs loope mov movsl mov out shrl ret cmpl cltd lret sbb loop push dec cli mov call jmp inc xor nop push push outsl daa cs fcomps mov push adc or cmp sub insl mov mov das inc and push mov imulb jb mov mov pop aad xor fistpll add sarb xor lret sub repnz xor (bad) mov fldenv pop cmp imul add lods popa addr16 stos imul lret rorl stos enter mov (bad) push xor iret (bad) bound fidivr cld int3 lcall lcall cmpsl sub xor adc cmp call adc lods fild (bad) mov aam fcomps es push adc push jp mov (bad) leave daa popf xchg test pushf jl mov ss push lods aas xor fsubs (bad) jle outsb add xor and test lret push jg mov insl mov sub (bad) xchg xor out jle push xlat cmp sub sbb lret or frstor enter dec adc aam gs mov xchg cmp add cmp lods dec push popa mov lcall sti or std mov iret lcall inc pop mov sbb fistpll mov add cmp or sbb mov lea loopne test cld or jno icebp insl test iret mov negl mov pop je or mov lcall xchg std mov sub test movsl sarl fcoms outsb mov dec lret mov push out aaa jp orl bound rcr (bad) fwait sahf jge mov pusha sti cltd adc jbe mov jmp sub jb sbb push addl adc in imul fstps inc push out xor jmp mov xchg out or jl push aaa pop inc popa test jp bound decl ds repz dec stc (bad) ljmp mov mov xor les incl mov sub cltd movsl out imul rdmsr lret push es xor push xchg adc repz ja (bad) (bad) mov insb scas ljmp cmpsb sub pop icebp xchg push out inc out sti inc push es fisub mov xlat cmp sub xchg and and outsb xor fcmovne xcrypt-ecb cmpsl leave mov clc cmp mov push insl mov sub xchg mov and jge mov jns les sbb xor push adcl and das (bad) pusha mov pop xor fadds mov arpl jbe sbb arpl out insb bound sbb jnp insl sbb ja pop mov repz sbb inc das std mov (bad) sub mov mov into mov pop ret mov repz sbb mov xchg pop pop inc cli dec mov enter xchg ja gs xor pop lods jge sub insb xchg cs scas pusha jl mulb (bad) dec (bad) jno mov aam xchg mov insl mov shl ret mov or bound pop sbb mov clc popa mov sub pop or loop loop das adc and lcall es jmp les in ja lds gs push lcall cltd jmp enter or lret add loope shll xor andl xchg mov jge rcl and and xchg mov mov or adc std in push xchg das fisttpll aaa or sbb xor js mov leave jecxz add mov lods pop pop ja mov (bad) bound pop pop jecxz push fsubrl dec sarb pause pushf gs fwait (bad) lret jp std shl je aas sbb jne sarb push mov fild inc pop iret push mov cmp pop lods cld pop shrl pop pop sub pusha repnz movsbl jae jecxz xchg test jle adc pop inc sbb and out loop shrl mov push cld push or aam jns mov mov xchg and imul push or mov scas inc mov adc iret pop mov or mov (bad) lods jne mov sarl loope pop stc xor aaa inc hlt enter adc cmp pop adc and iret and push adc xchg ficom ljmp jecxz fildll ljmp divb and aam inc pop out loopne data16 imul pop mov sub in test sti fsubrs cmc arpl stc scas dec or in pop movsl mov or and jp std jbe add and lahf jg xor fnstsw push fistpll test into lret aaa jge xchg or lret or jo lock (bad) mov xorl sub or out add rcpps (bad) dec add adc mov int xchg rol mov or lods cmp cld scas aaa mov cltd bound push inc nop jmp mov pusha flds inc mov sti cmp jae pop pop and (bad) popf adc cld daa push sub add iret push les sbb subl push sbb je cmc data16 mov stos adc ja xor xor int3 cmp (bad) xchg scas mov lret rcr test sbb lock adc add push rolb or xor xchg out adcb aas cltd push test stc pusha inc jns stos add cld pop ja mov or mov xchg pop sub pop lret push jb div fnstsw gs les xchg out xor shll insl jne adc fldcw in aas fmuls sub test (bad) nop outsl lahf inc push sub shl and int3 sbb testb and dec js mov and jge adc inc sahf (bad) cmp mov mov jl lds mov push sub and and jmp stos pop shrl sbb sti sbb pop mov lea jns aad in mov lret mov sti xchg xor test or pop in in fsubrl cmp mov jno pop mov mov scas mov and hlt push insl je pop inc cld cld pop (bad) sbb and in call arpl mov cltd mov mov flds lret je mov dec popf aas pop mov pop (bad) cmp cld and (bad) hlt inc and jp sub fldpi rclb adc add adc jl sbb repz lds clc mov jns fidivr lahf adc in (bad) adc pop iret dec xor nop out mov cmp xchg iret jmp test sbb mov pusha bound loope mov mov frstor xor cltd xchg mov jmp cwtl inc lods jbe addr16 into push or in sub enter add cld ret jnp lcall push fistpll ss push imul lahf jbe mov test adc and fdivs std ret add inc add pop das call stc aaa inc dec sub sbb iret mov fcoms fnstcw push pushfw iret mov pusha or mov push loope cmp push je and push or cmp loopne inc (bad) and mov pop ja sbb sbb xlat dec pop leave popa adc jl enter js imul inc in or out nop and stos sbb cmp lcall lea push mov movsb orb add mov push xchg dec push lods mov sbb mov and popa out push jg outsb scas lds (bad) or lret push jbe and ffreep loop fistpl fistl ret mov dec xchg imul mov repnz jmp call and adc cld mov sbb test aam ficompl outsb (bad) and pop xor repz xlat mov inc xor scas pop popa pop dec aaa test cmc out lock pop lods adc mov and mov adc jbe mov sar inc xor pop das popl inc loop mov cmpsl xor hlt jle push cmp push xorl adc mov add inc xlat xor repz repz shrl jecxz fdivl jne sub sub fsts xchg mov popa dec dec xchg dec neg mov (bad) mov cmp test lahf push push pop cs orl push nop (bad) popf loopne mov mov mov mov dec mov int3 loope pop push pop push or out sahf in mov jo in add pushf dec adc loop sub xor cmp xor andl repz or fwait lea es sbb hlt push mov and fcmovne inc movsb or jl lahf push add pop fidivr out popa das nop push std xchg (bad) mov and (bad) fild add jge rolb mov pusha mov push mov gs mov mov in scas push ja pusha pop in jge rorb iret add aas xlat imul push mov (bad) not dec xor test pop movl and jo push sub (bad) jl push xchg or ficomp fcoms loopne jmp cmp pop cli iret in push push cli stos pop mov nop pop adc test jnp lret jns cwtl jmp sub push cld imul sbb sbb imul aaa push adc and add mov push fs iret repnz or push cmp sbb xlat pusha ss icebp adc push push inc pop pop in sbb jo movsl or jne cmpsb xchg ficompl cmp repz aad cltd imul (bad) (bad) jnp adcb push (bad) or sbb out popa adc (bad) pusha push push movsb add test and mov lcall leave adc lret lahf add insb fs and mov mov roll mov mov bound (bad) or (bad) push dec xchg aam dec cmp in pushf incb int3 insb sbb or mov idiv pop inc insb repz sub div mov sub and aam push xchg push jae mov fbld int (bad) mov pop xchg andl hlt cmp push and pop jns jge cmp (bad) sbb or pop les dec cmp sbb jnp inc mov in dec mov or pop mov adc cmp adc adc sti sti and mov lea (bad) cmp pop sbb mov jne mov scas mov std xchg jp push cmp ret sub lret mov (bad) xor add and push cmp jnp jmp mov pop xchg xor inc adc and xchg jecxz lret jecxz add pop cwtl push inc loope jp xchg jge cld test addl fdivrs sbb test hlt xchg dec adc aad xlat sub inc push call les cli lods (bad) mov pop in xchg or xor js add out test mov popf push xchg cmp shl data16 or inc sbb test jo cmp (bad) xor pop mov rdmsr sub arpl fistp adc mov cs (bad) std les loopne dec pop xchg loope in pushf and jbe mov xor (bad) fcmovb push sub mov mov mov jae stos adc test ja dec cmp pop in cmc into adc jb in adc xchg jmp push psllq sub stos scas adc js arpl sbb mov mov aaa cmp xchg jno jle fcoms aas and imul xor fwait dec fdivs iret add inc mov (bad) jecxz cli xchg add inc rep jp popa subl push adc (bad) xchg push inc test lods call jb sbb data16 add pop pushl sti pop repnz inc pop lret ficoml xchg repnz test ret sub jb mov gs sbb cmpsl and xor pop shrl cli movsb mov jmp lds mov sbb sti fsubs and ss int3 in cmp mov and ljmp lret inc add inc adc ss mov cmc flds sti mov push lret add data16 xor pop test (bad) mov xchg fstpt pop push je sub rolb fldcw aas mov pop cmp (bad) cmp out stc ret cmc sbb lods sahf popf lret mov sub rorb push push mov dec ret repz rcr test mov xchg pop dec cmp dec or popa push rolb scas or stc ja pop lret xchg or pop mov imul mov pop daa lret push notb inc xor adc dec cmpsb in ucomiss jp lahf lahf jbe scas or daa cwtl stc push scas sbb jl testb sbb in dec xchg push stos xchg rcr push movsl sahf mov mov add adc push xchg add aam sti add clc (bad) or in mov out add jb xor scas xchg mov mov ficoml cli push or jo std jno fistpl mov repz adc test (bad) sti mov fisub mov jnp addr16 dec iret dec inc or xor cld sbb jl test xlat fiaddl in ret add movsb stc jbe sbb fs enter xchg das out out sub push mov sub xor xor push in adc xor lods xchg jle mov test add repnz cs ljmp clc jecxz add nop icebp xchg mov pop (bad) stos dec out leave inc test mov and push pusha pusha pmaxsw cmpsb mov xchg (bad) push or push dec mov popf adc dec fwait jno cmp data16 jecxz xchg sbb out jg xchg imull mov and jne jno inc lods adc xchg push dec push outsl lret fmulp out jmp stc mov int inc cli mov push sbb sub sub cmp xchg jecxz data16 sub jns (bad) data16 or mov push js pop les xchg leave sahf das mov mov mov jnp pop (bad) mov inc imul jno loopne out pop mov iret add dec subl lea fimul ljmp enter xchg out jo fs and dec jae mov mov cmp cmc in mov (bad) arpl adc roll prefetchwt1 mov pop jle and xor adc jo cmc aam or leave add sti pop push ret push sub loope stos push lret repz fsubs pushf fistl sbb in outsb mov loope imul cwtl xchg or jne sub and daa add xchg jo hlt and test idiv sbb push mov je shrb sbb das out fs dec xchg cmp (bad) and pop bndldx or lret test enter xchg notb int add ljmp ret out cmp cli lea cli out jo dec fwait xchg test cmp fldl hlt xchg cmp push sbb and adc mov sti fs mov push mov pop mov cld cmp loop inc stos xchg icebp xchg push pop add cmp das ficomp cmc pop and (bad) jle pop mov in mov cs mov std push jb push mov cmp ss sbb nop/reserved addr16 cmpl sub mov push mov lahf cmpl mov mov push jo popa sub decb lods (bad) add (bad) cld add loopne out xchg loop pop or ret outsl test cwtl xor lea mov mov sub sub arpl cmp xchg mov test xchg mov push lahf mov fcmovne cmp (bad) xor (bad) sbb scas inc shrl mov ds pop pop aam inc ficompl cs mov jge add (bad) mov mov imul repz push call aam sbb pop xlat push lea or (bad) mov pop and adc cmpsl jl adc (bad) mov fnstenv shrl test xor mov hlt inc popf outsb inc icebp push jmp mov in fldl insb adcl pop or pop dec xor lods push mov jge and xor dec mov jecxz gs xchg push test jne add mov out sbb mov mov insl mov pop int xor in repz pop dec ljmp (bad) icebp insl push fs xchg and subps and loopne,pt cmp sbb sub xchg adc dec insb imul pushf add adc aad dec fildll add test inc ror mov aad sbbl xor push in jl js pop fwait inc (bad) hlt lahf (bad) icebp decl jecxz in and pop mov sbb test aas cmpsw pop aad clc rcrl mov cld add or mov stos and outsl add pop imul mov arpl std cmc inc lea loope sti test inc out xor scas xlat inc xor imul jo sub lea lea lret iret push inc inc sahf mov pop xor daa fdivs lea or xchg push rol mov lret lret xor test (bad) pop add push dec inc cld jno jmp cmp cs jnp lock xchg push (bad) dec xlat dec mov jp jbe sub aaa push and outsb out push adc pop mov (bad) jb je leave outsb fs and icebp mov pop repz lcall push xor gs (bad) push aam pop addb sbb mov cmp mov jo (bad) xchg popa adc repnz mov pop jnp je jae pop lock loope mov sub insl in xrelease leave je jbe add jnp sub pushf lods or or add fidivl fcompl cli pop mov test notl je je jbe pop mov dec (bad) xchg subl rcrl imul les sbb repz sub or sub sbb add js push cmp adc lret or jge movsl xor iret mov sub mov inc jle jg popa adc or (bad) test jb sub in jno and jno or aas lret mov lock dec adc xor imul sub sub add xchg std (bad) mov sbb sahf xor lea push pop xor xlat xor lea or or das negb dec repz mov xchg cmp pop pop rol pop add push push (bad) jo into out lahf aam clc in add sbb and stos push adc es mov xlat idivl or xor xchg cmp test andl movsl xchg sub enter (bad) sbb mov test mov clc loopne enter xchg jnp jno lods jge mov cmp mov neg xor xchg xorb in push data16 jnp test push pop sbb movsb pop ret dec mov out (bad) push cs sub into lds sub jno lcall dec (bad) imull inc out xchg movsl jmp jae scas mov push in mov ret push pop mov shlb lods ficoml in dec imul pop xorl mov adc jbe sub push sbb add xchg (bad) mov mov repz mov rcll hlt addl test ljmp mov fs movsb insb icebp xor lcall subl xchg pop jmp xchg daa xchg add pop aad or insb (bad) das in mov xor jo push inc movsl int sahf dec lcall or cs popf test add test jge sti clc add or sbb stc imul ret ljmp int3 gs xlat jecxz fucom fdivl inc sbb outsb push ret das mov imul push xchg xor jns xchg xchg adc cmpsb mov repnz push in pop jb gs imul push test pushl push out ret add movsl xor imul int3 in data16 adc mov add push aam stos scas nop xchg in mov mov (bad) jp cwtl dec jge mulb (bad) or jg inc imul pop cmp mov sbb inc and add cli rcr fstl cltd (bad) lods cmp fadds repnz imul xchg add pop or mov ret shr jg in jp add fdivl out and and inc pop xchg testl mov test mov rclb or out push test sahf jecxz push shrb sbb xchg mov (bad) sbb es xchg mov iret pop xchg test test out pop mov adc gs jmp jp pop (bad) imul pop xor or stos addr16 lods and fisubrl out lret popf ss cmpsl sbb js,pn out adc xor stc push insl push (bad) dec and lock (bad) push sbb adc cmp enter mov insb daa (bad) cwtl xor inc pop mov int3 sbb add or ffreep ds imul ficompl mov inc sbb push cmp fsubp sub dec pop push pop inc dec sub je test (bad) add pushl push xchg push and leave mov push popa ds in popf loop div adc rcrl inc fcomps mov addr16 repz add dec insl mov loop scas ror cmp cmp dec test jmp repnz imul nop cmp jecxz movsb jo (bad) cs lock or xchg (bad) dec mov push pop pop test jmp cmp adc add ljmp stos outsb push (bad) pop cli (bad) iret decl call fildll push adc arpl jle hlt add aam inc inc push inc sub (bad) push sbb pop jecxz jp fsubrl xchg daa xchg fsubrp ret (bad) dec mov xor mov repz enter cmp mov std dec mov push mov sbb push and or mov dec (bad) insl dec mov call sbb adc js pusha jne add mov and ds sub xor rorb in jmp mov hlt stos in daa repz icebp pop roll lods pop inc (bad) jbe mov in inc loopne dec test lahf ret add lods dec xchg adcb stos fist push leave dec out inc repnz xor jnp inc js adc mov ret call clc dec xchg cmp xor movb push aad jno pop cmp rolb sbb pop cld out mov cs inc sub pop movsb and (bad) in dec inc sbb cmp pop mov inc mov lods inc mov outsl jne js adc (bad) mov out rep (bad) ret adc (bad) std addr16 stos mov loop fs fstp (bad) xchg or lahf or inc addr16 popf xlat or pop out mov (bad) call cmp xlat xchg mov inc fdiv dec cltd mov repz fwait lds xchg ret sarl andl xchg fisub stos pop data16 xchg add jl push popa icebp adc inc add mov int and sbb cmp enter xchg loope or lds loopne aad xchg mov pop or jne xor lods inc inc or imul lahf out sahf xor lret ja inc adc mov adc xchg inc lahf les test mov sub cmpsl adc pop stc sbb mov mov in ss pop fxch mov add add lea xorb mov push add in sbb addb sbb mov adc stc adc test mov mov push mov ss ja idiv mov cmpsb and lods adc inc out insl call repz hlt adc scas cli mov jmp xor and jae scas imul imul jo xor pop nop/reserved and js mov jg daa xor (bad) ja cmp je cli or fldt xchg movsb lock xchg in je jno xchg pop aaa lods dec jae cli push stos xor repz cltd mov and sahf pop int3 cltd js in out and sti mov cmp das lret add std int xchg mov and mov sbb jl fs sbbb mov inc mov ret add xlat add scas pop add pusha and je xchg mov inc jecxz push push loopne xor mov lds jecxz cltd imul xchg clc notl dec mov out dec pop xor cmp inc xchg stc or fwait loop sub inc fimul mov push (bad) jo mov inc scas into mov jno (bad) fidivr mov pop jns jbe iret add outsl dec adc je mov jb inc movsl sub test mov push loopne sahf inc cmp jle aas aas jne jle popf daa add xor inc into rorb ret lea rorb xchg test and cltd jg cmp subl cltd lahf jg pushf repnz bound xchg cmpsb sub or jge lea xor dec (bad) sbb je sbb xchg fwait pop sbb adc jb aad insb inc sti fnstsw leave mov xor lret push add sbb push sbb loope ds fldcw cwtl add js aas fcmovnbe gs and out call js mov lahf add mov dec add sbb call test adc je cltd push push adc cmp jbe mov stos xor test and push les dec pop cmp pop je jae sub lret mov xchg or xchg fsubrl mov mov dec cwtl ss mov push lds and inc push negl imul fldl lret push jmp loopne call aam rorl push in test das leave popa rolb sub mov ss aam in imul aad add or mov mov dec out push push out dec cmp and into aaa notb dec jae sahf push popa call or jne fbstp mov fiadd add xor repnz (bad) shrl pushf mov (bad) stos idivl mov in adc rcl mov bound test enter dec or or les pop ljmp or mov dec adcl sub inc jnp push call test jnp (bad) cltd pop sub add push loop test add (bad) hlt ljmp (bad) add and mov fldl cli out dec fxtract cmp js inc inc aaa adc or fistpll leave fiaddl fldl xchg call out ficomp mov into push mov fistl xchg mov es inc fsubrp cmpsl sub cli jle pop pushf shrb popa js or xchg cmp push jp es iret mov and mov push add fimul push clc fstpt xchg enter sub rorl cmp push jecxz lods and adc xchg daa jns xchg inc arpl jle and inc adc add icebp out jbe aad icebp mov cmp jae jnp mov dec add in and mov adc push pop cmc inc mov pushl pop adc mov ja repnz cmpsl jecxz dec cmc cmp cmp push (bad) mov inc sbb int3 xchg mov dec mov push cwtl sti sbb sub dec dec or add mov push cwtl (bad) rcrb fimull scas fisttpl rorl pop jge jb or inc shrb stc popa into sbb xchg add xchg add adcl and mov xchg mov mov jbe mov add mov clc sub inc xor cs lcall adc test and scas jmp mov and (bad) sub cwtl mov pop jecxz (bad) push lahf pop or sbb and loop,pn push mov insl mov cmp mov mov ss or iret xchg mov shrl fs arpl sub sbb (bad) jo pop pop xor adc addr16 cmc (bad) imul or fisubl xor mov inc insl xlat xchg cwtl ljmp sbb nop mov mov divl in jmp mov lret xchg xchg mov xor dec in popf sub aam scas sarl ljmp jg lret inc xchg xchg ja das lds cmp cmp sbb dec add jp je insb loope inc (bad) sbb cmp scas mov int xchg push push je cmp out jbe jbe mov add push and cmpsb aad push pop (bad) lret push mov dec cmpsb (bad) cmpsl xchg in dec xchg mov jg je jae inc enter imul pop loop jle popf out fisttp push mov ljmp or leave adcl leave pop out add inc push push sti adc cmp sub repnz dec or mov and loop (bad) cmp xor divl jae mov addl add lds sarb jg addr16 rolb je mov loop scas (bad) xor pop jo xchg leave sbb mov cmp mov out (bad) and shlb sbb shl adc out jle xor and mov jle xor out (bad) inc xlat cwtl frstor lods sbb gs std pop idivb push jg mov xor aaa push arpl cmpsl scas mov jb bnd ror lds ret cltd cld xchg mov pop push pop cmp movsl stc jae sbb xor sti pop loop pushf xchg lret data16 insb mov dec bound pop push fiaddl jmp pop dec sub (bad) pop decl je sbb ficomp popf aas jb mov xchg push or push (bad) test adc (bad) jb mov xor xchg movlps dec dec into inc lret in mov lods cmpsb pop and pop and scas push in mov inc imul outsb inc xchg xor and lods (bad) jmp loop fisttp pop cmp lea add (bad) mov push xchg xchg jbe inc jg test lds insl adc sub cld shr loop adc insb mov sbb in fcoms fcomi and insl xchg mov call push xchg mov lret aam sahf add inc addb fldt xchg lahf aad cmpsb cmp xchg outsb and shrb out adc cmpsw or insb nop cmp in xchg popf lret mov dec mov inc pop mov pop out adc mov sub ds xlat xor inc pop sbb enter jmp add mov ja lds outsb mov mov (bad) scas or inc fimul sub adc cmp mov lods and jge,pn mov sahf inc inc fdivs jp cli jg sub cmpsb js mov mov or xchg jb lds mov mov scas jecxz mov dec jb jne test mov sbb cltd sub cmpsl adc sahf cmp mov sahf jne push mov xor addr16 cli cld sahf ss call fucom pop adc sub mov (bad) cmp jo mov rol sub mov adc pop bound lds dec (bad) jmp mulb sbb out cs sahf jno xchg inc xchg fidivr jae add cltd std xor and repz shrb or xlat mov outsb add loopne fwait jae push popa mov cmpsl icebp or pop fsts jge mov adc sbb les push insb mov pop clc out inc addl cmp cmp setnp jmp frstor pop roll ljmp push add cmpsb cmp jo jecxz xor scas dec cmp push ljmp fstps stc das xchg popf or jbe aas sar mov push and push pop push sub es cmp decb cltd je mov lahf (bad) mulb mov adc fisub jb outsb out xor cmp push cwtl loope mov fcmovne mov mov jb icebp pop sbb outsb fcomi ret test sbb sbb mov mov mov mov rcrb jl loope dec inc loop ljmp jle dec je inc lret out fsubrp mov imul into and (bad) sahf dec cwtl call ja stc jns mov pop lcall xchg sbb push pop test stc push xchg xor imul imul pop inc adc cld sub cmp lret adc call mov data16 aaa jecxz lcall pop rcrb adc pop pushf inc cmp cli nop mov sbb nop cld ja jo testb cmpsl outsl movsb lahf push mov mov xchg mov mov in inc or or add addr16 cmp fmuls adc loop mov or push lahf btl (bad) mov mov push mov push in scas pop cmp mov fisttp mov xor mov stos mov repnz test das cmp pusha adc jmp xor cmp ja sbb push push mov xor fwait cmp ljmp adc jns test sbb test movsl idivl mov and clc jno xchg inc pop cmp cmp lret add cmp iret stos xchg das leave or sarb fisubr cltd add fidivrl ret cwtl cmp push mov (bad) enter and push pop cmp mov std lock cmp nop rcll es or movsl ficompl push repz mov lea aaa test in ficomp or mov fucomp lret addr16 and push pop dec cmpsl stc inc test rcrb jae int lea mov sub insl cmpsl xor out pminsw shr dec inc sbb (bad) not in je aad pop mov cmp xchg dec (bad) (bad) mov mov (bad) repz loopne popa push mov in xor lock adc mov mov xchg into xchg scas sub push sti sub fistl lods scas sub push fsubr xor xchg movsl mov ljmp mov rcl pop sub lcall int cltd inc ret popf sub sbb orb (bad) cli mov sahf outsb mov jg scas add push insl cmp mov jne sbb fsubl xchg adc sbb call hlt cltd xchg stc jp (bad) mov inc xor (bad) ljmp add test inc or ret adc or dec jg cmpsl and faddp ds aaa xchg out out or lcall rclb das cmp push sub (bad) inc add sbb add (bad) into mov aaa mov dec xlat lcall sub loope je fldenv sbb jp sub lcall sarl mov (bad) cmpsl xchg jbe ficomp pop loop in fdiv fisttpl adc push lock lods pop ret pop cwtl push dec nop inc jnp clc push int3 inc mov and es jle push push adc cmp (bad) jb mov mov enter lds dec test scas out push mov sub or cwtl inc stos sub inc sbb add mov outsb mov mov jb ret sbb mov call popl pop or test push cmpsb addr16 or jo lea pop jge lcall addl cld cmp sub adc ds adc jmpw xchg lds push jnp mov and dec mov mov jbe int jl inc adc push (bad) std outsl rcl lahf push mov data16 fimull push (bad) mov in es insb in xchg xor push dec daa cmp aad fsts fwait push dec aad add loopne cmp push jne aaa jg aas xor mov cmc adc sub pop push out hlt push pop in lock pop jnp pop push inc and movsl rclb mov xchg or divb xor call or je inc jp js out mov sub popf fnstcw icebp test mov inc xor push jb fs out pop push mov pop es mov or loop popa sbb push push add inc outsl push sub adcl mov dec sahf cmpsb mov push insb popa ja in mov clc push (bad) pop cli sahf movl mov add nop dec dec mov imul cmp sbb ljmp jge mov xchg out mov or push notb (bad) push rolb sbb ja inc mov lock js incb pusha andb mov inc and ss add loop dec sbb (bad) repnz mov pop mov mov xor in ljmp jae sbb (bad) mov pop xor divl repnz nop ja outsl and mov mov int3 sti movsb add xchg sbb mov sbbl add (bad) sbb imul dec sub shrl mov jle push push mov movsb jb mov fisttpl push xor adc mov jo xchg (bad) xor out xchg rorl loope mov xchg cmp pop sub push lret mov or inc adc pop add jne roll jl push jmp push das fcomps add add and arpl movsl js stos outsb sbb dec dec lock mov push jle (bad) jg cs gs std pop mov int add ss adc je mov mov xor jns xchg (bad) inc pop pop loopne in push adc add je cmp cwtl lods ja adc (bad) (bad) fist mov pop bound dec adcb inc aas mov jnp sub popa xchg xchg mov bound xchg mov aas outsb push shrl xchg (bad) pop add mov outsb decl imulb ret or rorl sub pop es aad add mov cmp xor push dec fbstp lret pop mov mov pop mov (bad) fdivl sub repz stos inc inc fistpl inc dec xor xor cmpsb int3 inc xchg mov sub fidivr adc and xchg sti iret sub xchg lods adc mov adc mov (bad) jb nop lock mov test xchg mov inc pusha cmp dec sbb mov adc clc mov insb shr sub pop fnstenv sbb loopne add adc test clc scas mov xchg mov pop (bad) cmp add sub push (bad) (bad) add orb ja call add and sub mov sbb dec mov xchg jnp mov fisttp lea subb sti add and je int3 ss mov inc out xchg xchg or loopne fldt repz inc add cmp mov add dec lcall adc mov push mov jmp addr16 push notb idivb ljmp jmp in rcll scas mov mov or ret pop xlat xchg jns push (bad) cmp movsl fnsave mov rcll sub cmpsb int pop fstl or mov loop mov sti imul data16 push or xchg dec dec rolb es repnz hlt xor adc test cmp cmp insb sub add mov add shll (bad) fdivr fisub das add out arpl fsubrl pop mov sti push mov dec test push fwait inc das or jne test push gs push xchg xchg mov jle lret movsl flds lsl ret xchg mov adc dec sarb les lds rolb jg pop adcl and mov cmp andl jo mov cmp cld dec inc mov jns adc sbb movsl insb int inc push call mov add iret inc mov (bad) fisttp mov cwtl movsl jecxz movsb adc std jle push mov xchg cmc fs ss cli sub xchg mov or xor cmp ret add inc mov loope mov and sub or push dec in aad popa cmp pop loopne jmp xor jmp cmp pop push xchg add pop mov add addr16 cld push add daa loop xor sbb lret push out dec leave add jnp (bad) mov out scas cwtl leave adc xor push mov jle es adc lret aad adc testb mov sbb lcall sbb cmp dec jp iret cld xchg add inc mov aad lds push mov sub icebp jne dec stc test cmpsl (bad) int3 or or stos mov pop js mov hlt scas (bad) fcomps loopne or pop xchg fs inc sti and pusha xor in push dec cltd arpl in popl sbb cmpsb inc jl cmp adcl insl int3 sub mov in popf pop loopne aam jg jl inc sbb dec ds iret pop mov sbb add push loope (bad) loopne sahf jo jle test arpl pop js pop call repnz dec call adc addr16 in jb dec sub inc in out xchg sahf jle pusha dec popa jl repz push xor sub xor daa scas imul outsb sub jmp jg jae mov (bad) int pop imul repz xor pop pushf or mov dec enter in bound (bad) testl cmpsl jne xor cs sbb or mov adcb add movsl mov les fldl and movsl clc stos and (bad) xchg push sub es dec sbb and adc adc pushf pop int3 cltd push cmp jne cltd mov or addl (bad) dec test mov jl push fdivp jo pop mov inc xchg push adc push or lock ss test inc or movsb mov movsb in dec inc inc sbb xchg jge bound nop pop jp xor shrb ror pop sbb cmp push mov and mov xor and dec pusha add sti pusha jae rcl xchg outsl in jns arpl pusha scas xchg dec xchg and shll js in jg push cltd sbb idiv push adc push adc gs sarl rol push mov or jne mov jno sti iret aam imul lahf test pop mov test jno gs lret movsb mov repz repz inc push add sti push add pop call sub punpckhdq popf leave loopne lret mov pushf push iret mov and xchg xchg outsl in or dec test stos enter lahf mov inc pop jnp sbb lds pop pop not fnstsw mov pop ljmp loop iret cwtl or ret (bad) mov mov cwtl aam pop jbe mov or stos cmp adc scas or iret sub (bad) insl cli push push mov aaa test shr jo cld (bad) dec add out mov mov mov ltr add stc jle ljmp and mov int3 pop mov push pop enter test in ss adc sub and xor movsl nop loope cmpsl mov mov adc mov cmp nop pop std xchg or add imul imul adc inc adc fs jno scas sub mov stos xchg pushf fistpll pop push test jecxz pushf mov repnz pop pop xchg adc insb dec das das push xchg push jl pop or mov lock mov dec jno popf lcall fimull xchg stos jbe sub dec xor dec and xchg lock xor sub test lods adc add in adc hlt out cmp std out mov ja test pop popa adc jp push js xchg and call loopne pop std daa aaa inc nop mov loop push inc addr16 loope inc cmp xchg xor add jno mov adc sub jo mov mov lret dec clc cmp inc dec xchg or mov sub je mov iret aas scas and daa mov insb dec movsb cld add add in or jns jmp lahf sub xor mov inc or xchg and jecxz mov ljmp jo int3 xor ficompl mov or hlt lods out cmp xlat lahf test sbb (bad) jecxz outsb xor jnp inc jb arpl sbb inc cmp mov xchg mov sub cmp xor mov outsl sbb (bad) cmp adc in adcl pop adc les adc fst loop jne les pop out ficom adc xchg sub pushf (bad) dec push arpl pop addl adc xor cmpsl jbe jg test push stc test push mov xchg in jne sub inc mov cmc cmp andl stos cmp or xchg mov fbstp imul adc mov mov shrl imul xor xchg jle cwtl in test xor jae xchg xchg jo loopne dec addr16 xchg cmp cmp lods hlt into ljmp jbe cmp pop adc incb mov es add dec std sbb sub loop pop sub test pop inc aas and xor std mov daa std inc dec imul jle adc xor scas pop test and pop inc fsubrl mov jo les dec les or (bad) loopne js jns mov push mov icebp mov loope add in fwait sub mov sbb (bad) mov loope addr16 cmc mov cwtl ss or inc lods repnz adc cmpsb gs add inc imul (bad) push inc jecxz xchg std push iret leave cmpsl mov icebp or pushf adc mov fidivrl add bound int3 xchg outsb (bad) js and dec lock cmpb call das push hlt mov xor push cli inc cwtl and mov (bad) fldpi (bad) sub cmp sbb popa mov mov sbb test push adc nop les insb mov call mov negl pop decb les jmp jns mov or adc xchg mov iret or mov shll push add arpl sbb (bad) enter rep jbe adc (bad) mov and fwait out adc mov ret jno adc imul test (bad) xor cmc mov fstl mov (bad) and jmp dec into mov adc ret mov push call adc inc (bad) mov loop mov (bad) mov push mov aas mul adc movsl repnz scas jp xor dec fsubrl pop pop jne jge pop sti mov mov inc add pop movsl loop lret icebp jl and repz sbb idivb les cltd imul leave insl sbb and mov das clc out jecxz (bad) dec loopne (bad) mov cmp pop test sbb shll fcmovbe add repz test subb mov shll mov cltd pop jmp mov in scas pop push xor enter adc inc out stos lods jle ja mov and std jecxz mov (bad) movsb mov adc arpl jno pop dec mov push out int push pop cs jne in je fsubrp je dec ss mov and inc add movb std cwtl sub jne push xchg cmp lcall dec inc push loop (bad) into movsl ret cmc (bad) cmc ficompl dec jno aam imull icebp addr16 dec data16 or (bad) repz pop pop cwtl jae aaa loope stc cmp les dec adc testl clc ret push dec in fwait insl jmp cmp test push or adc and fs add pop mov cli pop mov jmp std rolb mov xchg pushl bound dec in sub loop mov repz repnz aaa js iret insb cmp jmp sbb mov pop mov and cmc jl mov mov cmp cs pop cwtl mov daa and mov xor sub aad iret fisubrl nop jno xor pop lret xchg cmp sti shl xor repz adc rorb cwtl xlat cmpsb mov je lods and pop lcall mov sbb inc pushf popa dec insl mov (bad) jg adc shrb pushf mov inc sub dec adc push mov sub (bad) jecxz pop std adc and dec fidiv stc test scas aam and pop pop adc mov inc sub loope mov pusha xchg mov adc lret imul sub mov leave mov int push jne adc outsl icebp dec mov mov shrb icebp add scas call sub mov stos jo mov js aaa shll imul and xor pop andl lcall xor pextrw stos fs jle popa push cmc push or adc adc sub and ljmp inc lea std xor cmp lcall jp,pt sbb xchg mov mov inc and sbb jecxz jnp xchg mov mov push int3 jge daa out mov pop es pop shrb adc jmp stos and imul gs sahf xchg xor lahf aam mov jns out or xor imul or jno xor adc popf lds hlt mov cmp (bad) (bad) jmp jg jge xchg push mov cltd sbb fnsave push cmp hlt addl pop mov mov arpl pop push enter mov hlt jbe stos test mov ja xchg mov rolb jo adc orb dec pop jge das jne enter pop lcall ss xchg nop or pushf rclb mov mov pop push inc popf jno mov mov xchg in push pop dec lock xchg (bad) pushf movsb xchg mov movsl jp lcall cmp (bad) mov xlat dec jecxz je or push jmp mov mov jl jne cwtl lods xor fstps icebp cltd sbb jbe jae (bad) mov outsl roll fisttpl in fisubl jmp sbb sbb dec jl push sub leave into xchg (bad) outsl sub push sub pushf fisubr rolb push (bad) jbe xor mov lds cmp inc or push mulb sub or xor leave fwait rcl sub push insl lods add mov scas cmp push mov push stc es dec data16 dec push xor jecxz mov mov mov mov mov clc sub sbb add pop test jae (bad) xor cltd push incb mov adc mov aaa or push or push mov into (bad) sahf loopne int3 push cld enter xchg outsl dec push jo (bad) mov pushf hlt (bad) or mov mov xchg mov daa cmp (bad) add lret fidiv sbb imul cmp sbb xchg inc icebp jbe icebp negl push sbb ljmp push jg jne jae aad fadds hlt dec inc jae jge xor xchg jbe xor (bad) mov mov xor test into les test in (bad) fwait or pop test fcoml sbb xchg or xor (bad) cmp or add xchg ljmp out fs addr16 test lods push notl ffree iret push mov lock mov xor cs jo and mov and in mov js mov sub jmp sub dec push enter (bad) cltd cmp fisttpll pop and add (bad) outsb cmpsl in cmp out push xor xlat or adcl out sbb hlt dec lea adc std pop inc add push dec xchg pop push push mov icebp sub lret bound add mov rclb lods lods xor js cmp dec mov push fisubr fwait xchg outsl jbe mov gs jbe fistp inc sbb adc and xor inc sbb and aad xchg test adc in push adc imul jae cwtl lret fnstenv inc mov outsl sub icebp out jl js jg das adc loopne push hlt inc mov in daa ja xor popf ja ja data16 add sbb outsb imul dec sbb or cltd pop dec je cmp mov pop xor fbld xchg mov adc in je pop sti out lock mov or xchg rclb xor scas add pop fistpl sbb icebp mov add lret cmp fmul std and inc out lcall cs jle pop (bad) sub sti cwtl mov out cmp in scas xchg or xor repnz in jle lods enter mov lods pop push js mov into pop lock sbb pop aam mov fmuls movsl das push inc push clc popf das daa add mov sti insb dec xlat fdivrl fwait and inc inc push fwait pop sub push adc add add push push hlt xor add add pop mov pop dec outsl mov sub sub fwait pop inc cmp bound cmp (bad) ss daa ficom ja js ljmp imul dec adc das movsl or enter movsl jns cmp mov pop arpl push jmp out inc test dec mov test cltd mov fcompl insl jb mov adc pmulhw inc inc push imul mov xchg lods sub in (bad) xlat ds popf jb ja jae jo scas inc pop into popf jae ret (bad) subl mov dec dec lea dec push call test xchg push inc inc es mov dec and push sbb adc shlb mov ret pop fistpl pop (bad) testb push inc loope insb or sbb dec inc movsl fcmovbe pusha ljmp ret push lds jb pushf push cmpsl popa sbbb rcrb xor dec mov push dec rcr and sbb shrb adc pop xor xlat les xchg scas repnz sub popa pushf lret repnz lock jp out lret dec xor cltd fdivrp (bad) push pop push stos push test push mov imul stos les mov repz popa cltd dec adc pop mov mov (bad) cmc xchg adc sbb inc mov popf add dec mov mov dec push push sub dec or jecxz daa dec sahf push int3 xlat std mov xchg popl repz (bad) mov cmp daa inc pop imul and xchg push cld lahf shll jecxz sbb xor add xchg xchg or fwait sbb sbbb dec mov push or daa out out inc sub lcall gs inc leave sbb jo jmp lds insl imul adc fsubrs sub jno push loop adc dec int3 dec xchg pop outsl stc cwtl sarl ja pop xor mov loop jmp xchg movsl sub jmp call pop lahf pop movaps lock lea cmp lock push jne dec bound or outsb xor loope add xor movsl lods cmc sub mov cmc push imul aad or fwait ljmp push fs push pushf into mov pop xchg xor mov inc inc dec sbb xor or (bad) lods out jecxz add fdivp cmp push outsb nop (bad) push mov (bad) int3 pop sbb stc js xchg stos clc sbb mov push insb jns mov pop pop es jmp into pop cwtl mov push shr add stos dec push lds or mov ljmp sbb jo cmp cmp inc cmp dec dec insl xchg or sub in out sar jge pop icebp cmpsb sub rclb add pop push or xchg test sti loop insb add fistl ljmp push xchg push jle sub mov stos or (bad) movb xchg mov mov adc add pop sbb pop out xor (bad) jmp gs add sub dec bound inc test push pop sahf jno loopne mov mov push xchg push xchg inc pop xchg aad aas push add cmp xchg mov cmp push or push or paddsw adc jo movsb add mov mov std adc jbe jmp fistpl or cli add rcll adc push fistl dec sbb xor enter imul cmp or xchg outsl dec cld mov inc ja sti inc enter xchg je xor shlb cs push and ret mov mov push btr daa mov mov push test jne jbe ret cltd (bad) roll sub sub test dec mov inc call movsl mov cmp xchg mov sbb daa out out test (bad) push rcl mov movsl push cld je mov shrl inc or leave pusha (bad) divl jge stos out mov jecxz pop insl popa jo lock rclb xor ds inc in add popf jmp sbb repnz fmulp sub sbb xchg cltd cmpsl addl stos jnp xchg mov sub mov das sub push jmp repnz mov jb cmp int pop es addb dec dec fs jno test sub stos mov lock or (bad) mov inc jp fmulp insb dec xlat mov lret mov notl adcb cwtl push xor sbb inc xchg and dec sarb xchg (bad) dec (bad) enter and aam jnp push insb sub dec lret scas cmp ja gs cs push (bad) fisub (bad) mov psrlw mov xchg mov rcrl mov lret jne mov roll imul add inc outsl push ret fisttpll out add es ret es mov sbb (bad) xchg mov push cmpsb (bad) mov push jb jmp lock jbe aaa cmp mov xchg les fs in xor int mov adc xor mov xor pop mov in fstps xor xor mov jmp mov cltd mov popa int3 aas ljmp push mov stc bound adc idivb cmp cmp out mov push sbb aaa pop mov addr16 push aaa dec adc dec add int movsb and stos pop stc lock lods pushf dec or xorl inc mov adcb cld push imul (bad) jle scas js and ret push and jbe and out sbb insl sub pop sub arpl xchg xor aam cmp aam sarl lcall in ret scas push pusha into int sti add mov mov test outsb adc fnop loope add insl lds jg mov outsb xor ss jl insb cmp pop dec orl cmpsl mov and fs fnstcw mov aam lock mov in movsl jge adcb jge movsl sbb or movsl (bad) and xchg jnp pop cmp data16 test jnp cmc mov jge gs jnp lock dec int inc lret sub and test das jnp or mov add cmc (bad) pop repnz scas push push into call lods sti popa fsubs cmp dec dec mov or add mov dec push add in ljmp mov xchg mov cmp std cmpsl pushf mov mov mov sub subl jl enter mov add mov inc sahf (bad) xor mov mov fwait loop imul dec loop mov inc test xchg mov mov pusha js mov adc or xchg and aas (bad) hlt aad loope xchg fdivrs pop mov bound push sub int lahf push push fstpl sbb (bad) hlt ja jo sbb lahf add (bad) mov push xor or stos test cmpsb sub in popf inc pop jmp sbb loope pop adc dec insb loopne jnp push sbb test or cmp jge sbb rolb pop (bad) fdivrs sub sub std push das notb add notl test sub dec int (bad) adc adc xchg add jne ret push mov and leave test xor dec inc and xchg dec mov mov out sar mov sbb xor pop jae aaa cli std push xor pusha (bad) mull (bad) xchg push jmp stos sub mov dec and jge outsb mov push scas das sbb add pushf inc pop (bad) xor aaa sahf clc mov and push mov mov or or ret inc add adc xor pop iret cmp outsb inc loop or out in dec (bad) hlt int3 sahf notb scas sbb jmp inc out fnstcw mov or lret push pop adc jp jmp add jns divl and pop xor (bad) jnp insl or fidivl fisubr jp test sbb jnp dec xchg jge jno in rclb popf xchg mov push fmuls pop jp push ss jb cwtl mov inc dec loop xchg mov loopne sbb mov xrelease movsl (bad) psrld cmp mov sub push jo test xchg cmp adc ja lcall les sub add das sbb pusha lds adc add xor xor xor sub mov jno xor and add xchg lds sbb mov lock mov pop clc dec mov mov mov ds sti (bad) jbe cmp cmp and mov push out fistpll mov push pop pop cmp sub pop or add aam inc lds test pop (bad) sahf push outsl outsl adc pop jb std (bad) xor hlt cltd hlt cs pop loop enter adc out xorl xchg mov sub scas jo repz loop lods aas les sub data16 sub mov push adc lahf xchg cld xor mov dec pop aad sbb int fcomps js inc ljmp fistp jbe xchg (bad) and in leave (bad) lock mov xchg lds sbb loopne inc sub jmp pusha sbb stc (bad) mov clc dec hlt pop dec cmpsl add imul test int test loopne fcmovnu inc and and popf mov fwait jns aam lods imul mov mov fcomp cmp roll add xor mov shlb mov sarl jecxz mov mov inc push push cli or sbb fdivs fistp int mov pop xchg cmp jno mov mov add test test push sbb jae sub push js insl in jo (bad) fildll push push bound jo out xchg push jns mov pop pop (bad) popf jmp mov daa dec mov ljmp jo jg fsts cmp stos add add (bad) je xor imul xchg ss jl lret ficom lahf aad ja fdiv sbb sbb arpl jle jle pushf inc ja mov jbe and insl mov iret (bad) hlt jge test aad leave dec lods pop xlat in mov aas xor pop pop leave aad ret lds or and stos jnp int sub in jae pop scas int mov adc xorl adc (bad) into pushf sahf adc jne aas push pushf inc lock leave aad xchg pop (bad) cmp (bad) out sub lock push and and iret inc orb lahf dec push mov fmuls insb sahf psubsw cmp mov xchg test inc movb push (bad) jae,pt imul stos enter repz ret ret loopne gs scas (bad) mov (bad) push outsb mov lock aam test popf mov repz sahf or cmpl adc fidivrl repnz inc mov adc and cld and pop and int mov lock aam outsl scas testb mov into sub and incb adcl xchg and inc dec xor dec ja jmp add repnz jnp mov stos xchg (bad) dec add pop pop add nop mov leave fsubrs push sbb in cltd xor mov and cmp dec movsl adc cld cmp adc pop int3 fwait repnz (bad) mov jp lahf or lea mov add add xor repnz ja in (bad) pop je scas je pusha out dec (bad) dec sbb pushf jnp cmp imul test loope into sahf int3 bnd push fscale or test xchg (bad) jg xchg xor sbb insb in sub mov jmp cwtl loopne sbb mov mov inc adc test scas mov stc jle les mov movsb stc sub (bad) pop and insb movsl popf adc or arpl dec adc mov ss or mov cmp into nop or sbb cwtl mov mov orl cmp xor outsl (bad) jnp cld outsl mul push pop sti add fstpl test aas (bad) mov mov cmp xchg xor xchg stos mov out loopne,pt cmp call or lods push mov xor dec enter mov mov mov ret add repnz daa mov ja loopne xor es cmp in daa jmp or adc pushf inc mov mov cld ljmp dec push mov lahf mov es adc fildll jb or push jle lret sbb js pop cmp aaa jmp call rcr pushf dec arpl sbb cmp js xlat idivb movsb ja lea jns sub xchg add add push mov lods ja mov push push and and repz push fwait or xor sbbl jns lods mov or movsl sub add jno jae popa fnsave in dec hlt pop test adc xchg daa push pusha scas leave mov dec jo negb leave mov roll mov add jo push mov mov dec jmp mov popa negl lret dec fwait and repz mov fiaddl xchg (bad) fisubl add jae popa imul lahf sub or jle inc or jl (bad) int3 cmpsb (bad) mov and inc movsb loope aaa dec cld sub pop ret and int push push cmp jno lcall adc es inc push cld xchg (bad) pop pop lock pop xchg lret ficom scas xchg sub ret cmp inc (bad) push not pop cmpsl ror ds or mov cmp dec ficoml je pop adcb or add aaa mov mov adc sub rorl pop jns jo lods insl (bad) mov je jne pop inc inc test fwait sarb ret addr16 loope jecxz cmp xchg lods push pop test into pop adc mov or lods into push leave xchg out out dec pop pop std daa xchg (bad) pop pop (bad) fidivl mov mov push mov push add ljmp lock cld and imul sub mov xchg pop adc dec cmc and imul jne mov and push roll xorl xor mov std into cmpsb aas push or mov xor clc es mov push scas movsb shll cmpsl aad sbb mov imul fimul push in iret gs mov lret das xchg scas xlat xchg xchg rcll je cmp sub dec cltd aas cmp fiadd outsb in test or cwtl jge mov push dec jnp fstpl pushl cli inc popf xor fdivp sub jnp addr16 out imul mov mov push ja xor push into or pop (bad) imul (bad) jge push mov (bad) xchg jns and dec ss fnstcw xor cmp push ret adc cmp in jae mov scas ja jle xor lods add pop and push adc push mov in sbb pop popa adc (bad) mov ret pop xchg aaa outsb mov test sub mov movsb (bad) decb bound mov outsl and add (bad) mov cwtl dec inc inc xchg xchg fs jae jns jmp out imul push push sub jb mov inc mov andb inc iret jbe lds cld sbb xlat jl test out ljmp mov cmp inc imul mov shl (bad) nop call aam mov adc pop mov sub icebp sub add mov xchg sbb popa cwtl xor sbb jns adc xor xchg (bad) mov xor mov or adc cmpsl neg test dec fiadd shll pop lods cmp sub jb add icebp outsb push ss popa and sub scas lahf push jae xorb push inc dec loope (bad) and fucomip sub lahf mov dec jne es xor mov dec into adc jle push movb and mov dec add mov aaa imull mov rcrl int jge in adc push mov lock fstl (bad) rcrl push mov lods sti sbb outsl lret lds lret xor pop leave or fimul ja dec mov and xchg jbe enter ljmp cld sub sbb (bad) xor xchg sbb fadds aas xor cmpsl in and pop aas cmc cmp xor lods mov lret mov inc insb aad cs push push sub aam icebp in dec cmpsb mov xchg jo ret fwait int test dec or pop sbb add outsb ja in int3 nop push mov dec call push testb and mov sub cmpb mov xlat divb idivl int3 flds fidiv test mov ds lahf and ja inc xchg xchg call iret in stc (bad) lahf ss sub je push pop and mov push fldenv inc dec mov jp sti xchg or lock int mov adc and sbb mov jecxz cmp scas mov int3 mov or mov cmp arpl pop xor data16 ja sbb bound arpl mov and pushf add cmpb dec shl outsb aaa icebp or mov jl out fistl mov mov rolb xchg leave or leave adc outsl (bad) in cld pop or cmp hlt sub lret fwait pop inc addr16 leave cmp out add push nop pop rcrl fwait bound xchg pop mov sbbl mov popa fbstp dec fistpl mov out arpl loopne jl sbb inc mov test pop adc pop mov dec fsubrs jmp add cli stos (bad) mov loopne push (bad) enter jb lock andb loop movsl arpl push mov mov adc sub push xchg mov (bad) hlt enter adc hlt fsubrs jbe mov sti test cmp movzwl xor jmp rolb iret cmpsb add into test bound dec shlb in (bad) mov xchg xchg sub (bad) cmp inc add sbb cmp dec mov scas insb cld aad loop cwtl dec jo sbb push popf and cltd enter pop dec and mov jecxz push orl and into pop out jecxz sbb loop cmp in (bad) jns cmp scas and dec jge imul mov pop divl adc or and push sahf outsb fistl ficoml out pop dec mov test lcall (bad) ja cmp das test and mov jbe inc cmp xor jg cs cmpsb aas and inc mov lret mov xchg call ficoml mov jae loope xchg xchg push repz xlat sub outsb cmpl clc mov shl pop sub jmp add jl adc mov pop adc stos stos push xchg adc pop sti inc arpl int insl out dec int cli ficomp mov cltd mov push sbb add fsts out flds fdivl es popa mov dec mov push stos xchg sub pop sbb cld sahf sbb mov xchg cmpsl (bad) cmp hlt mov push mov xlat ret jl pop cltd pushf xlat jne push leave pop insl mov push push or ljmp jg xchg movsb push adc push aas push mov xchg xchg bound shrb jo mov xchg xchg aam gs pop (bad) dec hlt jno xchg out movl (bad) or mov jp test aad jo jmp lcall jne pop push negb pop cli adc push jne scas mov mov inc fdivs push ret shrb cmpsl in and in (bad) stc xchg aaa imul popa mov push xor shlb xlat iret xor push ja and mov lret inc lret out call ds (bad) fisubr int mov std jb stos aas int3 mov imul das test push mov out pushf popf jb pop sahf sub sub lret lret int adc add data16 je sbb cmp mov xchg (bad) mov mov add pop fwait xchg fs pop loope sahf jno push lea aam (bad) push xor ret sbb add mov call pop inc test xchg (bad) (bad) xchg ja mov (bad) or jl cmp notl paddusw xor mov aad jnp pop or ja xchg cs ror stos int3 add sub xor fwait daa insb ja mov pop jmp jg or adc cld adc push and jmp mov sub arpl jae xor lcall jb inc xchg push rcll fwait xor shlb hlt idivl mov mov mov mov in repz sarb std add movsb push in data16 sbb sbb jle mov je popa loop xchg xchg push arpl push pop mov sub cld ljmp mov and sub movsl sub stos clc and pop stc add xor jno (bad) outsl repz xor das out (bad) mov xlat roll ret (bad) bound or popf aas js inc ret es insb add inc mov sub pusha mov push cmp loop push sbb out xchg in dec aas fistp cmpsb xchg test repz and jae add lock jmp sahf fnsave out xor fdivrl jge notl pop aaa nop jp scas (bad) mov sbb call lret mov pop fs pop stos je out push jge ret jbe scas sbb push int3 les mov inc push cltd dec rclb and sub jne ljmp test fiadd xchg mov xlat mov fsts sub ljmp loope pop mov test rolb add mov mov xchg fbld adc pop xchg jns inc (bad) stos stc and cmc out in lds mov stos sub inc ja xchg movb dec cmp jne bound mov push fcoms add scas aas and fadds lahf push mov fsubs lea inc mov movl lds test cmp cmp cmp xor push fs les imul mov mov adc subb add in jecxz clc ret or icebp call repz dec adc mov mov rorl dec stc aaa adc jb xchg fwait inc call mov lret bound mov (bad) fildl (bad) movsb adc ffree test out jle inc bound xchg xchg aad xor int3 lcall inc aam ud1 push pop adc loope mov outsl mov add mov or sqrtps gs mov cltd daa xor rol xchg das cwtl insb jl sub imul int3 movsb and cld mov (bad) fild mov insl adc jne inc inc mov aaa jae mov xchg mov dec fs in push or insb jp pop pop jne aam adc and cltd jl cmp cmp fldt push aas ss test mov ret mov sub jae jmp inc cmp push into push icebp and xchg xor jge dec out xor lods xchg ds sub cli scas lret lret fstps mov fdivr shll es leave inc jbe icebp jg jp xchg inc clc and stos test (bad) in pop scas cmp imul loop lret mov mov mov or mov jnp lret leave lock (bad) test jl mov mov pop jecxz pop xchg cmpsl aas push repz add cmp es dec ret loope scas jbe or psubsw xchg test imul fsin gs (bad) push in sub call pop xchg adc shrb push push stos popa enter xor mov addr16 or aas andl push xor dec outsb inc mov mov test adc dec (bad) pop enter fimul test insl push int3 xlat sbb lods cmp test leave int3 fnstenv jno jg push popa fmuls adc pop pop arpl cmpsl adc inc adcl cli cld sbb mov out dec (bad) out stos pop stc cmp lcall mov int3 fildl inc inc pushf psrld loopne mov or out loop xor addl insb sbb (bad) cld test loop pop mov test faddl dec test (bad) imul lds sub cmc stos popf sbb inc xchg add cmpl sbbb insl leave push clc jl les mov jae in mov (bad) push mov push jnp aaa cmp or mov mov mov fadd add push add sahf push mov test push mov pop sub (bad) divl pusha push je ficompl es roll add adc sub mov cwtl sbb out pop push and insl mov cmpsl pop mov xchg std add and ja pop push push rep je test inc mov cwtl inc cmp jl add mov in in cmp dec scas in out xor lds pop inc ds fwait (bad) xor ret mov push arpl sub cmp mov clc rorb and je xor dec or inc lahf inc jmp (bad) xchg xlat cmp daa pop or push adc sti push cltd xlat dec mov mov push adc dec and fidivrl inc mov clc mov sbb mov sbb fsin push mov stos jbe inc jp mov mov les sub and fcompl loope push mov pop xor cmp adc mov icebp cmc xchg std mov lods lret push popf xchg stos fadds cmc je mov ss outsb dec adc sub (bad) ret ss (bad) mov inc jbe iret jle push ljmp add popa xor inc inc push inc cmpsl lods movsl int3 pop inc jae std (bad) bound mov out or xor test inc pop jnp xor or mov xor add sbb jl sub pushf or mov cmp add ret dec mov fidiv mov mov xlat test scas stos hlt push jno jbe cli stos loope stos popf add inc stc scas test das fldenv lret xchg std xlat xchg test mov xlat sub ds int3 pop out cmp dec pop ss or imul sarb xchg and fstps xchg loopne pusha ja mov cmp inc (bad) push pop jl dec mov jo mov jne (bad) les mov in pusha push movsl lahf imul inc inc jecxz lods inc repnz adc icebp jecxz cs test ja push sbb xchg lods xor in mov mov mov xchg dec mov ret mov add add pop call fmuls (bad) sbb inc (bad) icebp jbe dec sbb daa cmp inc mov movsb push xchg push ds pop test fdivrs daa and adc pop (bad) mov fnop adc mov out or stos pop add cmpsb frstor push jge mov lock popf xor fist movsb test push cwtl nop inc cmp lods loop xor aas lret cmpsl dec aam adc add jnp popf xchg (bad) nop bound sub or sbb mov xchg scas js leave mov dec mov pop ficoml lea icebp dec xchg xchg stos cmp in xor das inc aas (bad) loop jne mov mov adc jb ret jne aad jb push icebp jo test mov and pop fnstcw std dec dec or jns mov lods aaa push scas cmp or ds pop call pop ret mov mov sahf pop in pusha fisubl mov sbb jae add push xchg mov jno je add mov mov inc mov inc test cmp dec in xchg sub sub popa arpl pushf inc gs pop or and scas (bad) out insb lahf mov cmp enter push xor ljmp pop orl cli es js ljmp (bad) iret jno mull cmp lret (bad) mov add push sub in gs pop pusha rol rorb in mov stos scas sbb and fldln2 dec call idivb ss pop mov xchg stc jns aam pushf adc fnop inc enter jmp mov aam lds test mov inc dec cmpsl dec mov mov arpl adc out ljmp jne jmp sub cmp (bad) or dec push (bad) int3 pop cmp pop (bad) repnz mov lret leave xchg sbb je ret xchg shl xor sahf mov add (bad) sub out cmp sbb sbb imul mov pop cmp ftst cld mov inc gs lcall call fidivl add ja out (bad) dec cmc add adc pop js mov inc add fbstp lcall adc insb push mov jmp inc jns jns mov fsubs ret out mov into mov jp sub push jg arpl xor push test lcall dec jle xor daa mov adcl pop lahf std pop xchg or out ret ss decb mov mov inc jp add stos cs sbb mov and insb cwtl or jecxz or dec cmp mov mov lret mov dec and fild or insb out and sbb mov pushf js push out in xchg mov push (bad) arpl pop add cmp insl push test pop add cs (bad) aaa mov inc sbb sarb pop cmpsb mov and and fldenv or dec mov push sub aam add push cwtl push pop mov lock pop cmp push inc pop jg fistl jecxz icebp mov pop imul inc and mov arpl jae mov sahf inc mov add xchg imul repnz data16 scas fstpl inc (bad) fmuls sysret fsubs jbe dec lods je push ss in jp sub pop movsb sbb mov cmp lods dec sub sarb lcall out iret pop aaa mov mov mov lret push lahf jecxz fs imulb lods cmp xlat je xor mov stos adc adc in jge sbb push jns cwtl popa mov lock (bad) mov loope das lock jno jg cmpsl (bad) rol sbb test add xchg dec push push lret jge imull aas (bad) fsub mov cmc adc mov and out sub push lea (bad) fsubrl lods xchg sbb xchg fwait insb and adc xchg movsl xor xor popa sbb and xor mov dec nop movsl jns push movsl sub fsubl xor imul movsl adc push imul enter inc adc push das add ss sarb mov push neg call add sub and (bad) inc sbbb lock jbe ljmp (bad) sbb ja add test adc ret aas ret loopne xlat aas pop insb jno adc ja inc mov cmpsb in mov and fistl push mov leave xchg test aaa jge or cmp fcmovbe lods inc je xchg xchg ror push jbe rclb mov aaa pop (bad) arpl cmp add fs shrl icebp pop adc pop sbb sti leave push nop lea mov (bad) pop push xchg mov outsl repnz push stc sbb movsb int3 movsb xchg bound out insl nop subl je inc cmpsb inc addb cmp leave mov inc ret aas aad and cmp inc mov mov mov pop pusha add (bad) xor pop push imul add xchg xchg (bad) les dec out movsl mov dec scas add pusha mov dec nop xor add pop mov xor push xchg mov mov out xchg push rorb leave and xor clc adc jbe loop push int3 ss adc xlat fcompl out je add out mov inc icebp (bad) popf gs pop ret dec xor ss pusha notb lcall cmpsl push mov push je inc mov or inc dec cltd inc jmp andl add sub xchg inc add xchg jne inc xor lods push cmp mov gs (bad) jne test ret lret imul cmpsb cmpsl or and mov inc pop xlat test icebp imul leave dec idivb mov pushf aad dec popf (bad) mov pop ljmp mov sarb popf and (bad) ss mov into loopne loopne jb mov lcall dec fnstcw and push push outsl jle sbb dec in dec xor pushf dec je ds dec mov in hlt dec mov sub xor push or inc push outsb inc xor ret jmp dec add inc pop lcall xchg xor ffree xchg leave pop stos pop mov gs popa jp push dec mov movsb or movsl repz out sahf or fsub rol xor sbbb mov inc dec mov je jne add add daa or sub mov pop mov add cmp cmp mov nop cmp jp scas mov sub inc (bad) push inc aam sub fdiv pusha (bad) fwait xchg call inc mov in rcrl add or lret es or jo lods das sbb lds ss and clc or cli or ret mov mov mov stos stos and dec fwait jge int push popa ss mov ret pop mov loope in repnz iret arpl lods mov add insl out lods popa loope pop ss daa mov mov mov or aad outsl mov popa xor cli nop (bad) out nop lods hlt push push adc out (bad) mov loopne stc jmp fsubrp in notb cmp pop aaa scas adc cmp or mov pop enter mov and loopne hlt fwait cmc inc pop outsb (bad) mov push fwait xchg sub cli clc mul in scas scas mov sbb (bad) add (bad) loopne fstpl and inc xchg mov adc out mov shrl sbb (bad) xor pop pop adc jl add ss addb inc clc (bad) test xor pop (bad) mov xor xchg sarb fwait push aad fistpl or pop jecxz inc mov int push in jp mov mov (bad) or outsb ljmp and std dec pop xchg clc mov jle (bad) out jno or inc sti xchg mov inc push je xor cmp cli add sub test lcall ret mov pop sub push adc xor add xor xor mov out adc inc je push and inc movsl sbb mov cmpsb ficompl jl (bad) int jecxz mov in (bad) jle call add mov (bad) mov inc sub add dec push mov scas (bad) scas sbb fs inc sub test fdivrs mov jle mov push daa jg sub push push xlat sbb cltd (bad) inc aam push inc popf jl pop popf jns dec sahf pop mov jnp lea loopne pop fisttpl ljmp movsl sbb mov jecxz popf lds nop fs mov jl pusha or fsubs loope and pop mov pop jb stc aas pop out movsb mov aad push adc dec xchg or cmpsb pop inc sub enter add adc sti adc loope jg test mov (bad) jmp or fidivrl mov movsl adc fcomi popa jecxz pop lods inc (bad) adc fnsave sub out jne sbb jecxz (bad) and negl xchg ficomp xor jg icebp inc push pop jns xor fsubrl sbb sbb nop repz cmpsb pop fisubrl adc cmp dec mov jp add and sbb int3 or cltd sub cmp and (bad) xchg (bad) mov mov outsl notb lret addr16 sahf pop popa mov xchg push in insb pop icebp fs hlt mov xchg data16 js stos subb out push loope incl jmp lods (bad) lds cmp fdivl sarb stos push xchg add enter stos or and mov mov sbb inc out push in sub push lock mov leave or push ja scas xor jge imul mov mov das test ret scas mov stos mov sub push cld dec nop inc into sub int jno arpl outsl repz pop lcall outsl mov imul mov lahf mov ljmp sub subb sub aad push rolb mov or pop jns out pop out pop insl adc cmp and cwtl xchg jo outsb dec jne test out hlt pop inc repz mov mov push (bad) sahf and movsb inc inc lock push fdivl ret addr16 cmc pop sub cmc lea sbb scas fcomi out pop scas mov shrl in cmp iret (bad) ljmp pushf mov popf xchg leave push std xchg adc adc stos inc (bad) int3 or data16 sub adc push insl xchg mov bound lock dec cmp adc pusha mov (bad) aaa inc vmovss fisub (bad) cs add push sub mov pop lods es dec rcll clc rcll pop xchg scas cmp arpl data16 hlt inc fnstenv and mov inc insl inc cmp shr fdivs and les scas out sub es fildl dec popa jb sbb adc jns pop or test jge js imul jns or xchg push hlt sbb add bound inc xchg int stos and das mov iret jno dec cwtl je fimul stos nop movl in dec out and or cltd fsubrs mov pop cmp inc mov insl pusha dec repz cmp push xchg stc push mov push push mov pop jae mov add pop insl and xchg aaa sbb add add cmp add jmp test imulw enter adc add aad call fwait lret adc insl cmp mov aad cli out lods (bad) cmc aas ja cmp mov and mov sub icebp je pusha aad rcr paddb sbbl (bad) sbb nop rorb (bad) ficoml or mov (bad) nop in stc inc repnz fs mov stc cmpsb and jmp fadd push push sbb dec xchg sbb jae aaa in push xchg cmc mov xor push out mov (bad) int3 xor popa mov orb xchg sti fcmovbe insl xor xor std faddl (bad) idivl jo fisttpll and pop pop adc and xchg aad sub stos mov test adc shl mov xchg fwait test jnp and in adc cmc xchg lods cmc stc frstor cli pop fidivr xor daa shll push jb rcll inc imul popf into sub sub jle movsl cmp adc xchg push nop or xor jnp test adc sahf or notb sbb sbb notl lret adc (bad) or push push loope mov jecxz popa inc sub or imul cmp and adc sub cmp pop xorb fdivs test lret and decl mov in aad leave mov dec or adc sbb and mov push clc mov (bad) fdivl daa iret adc cmp leave mov xchg xor mov divl hlt (bad) (bad) dec fwait mov xor rcr sub push rorb xchg and or outsb push repnz scas pushf push int jb adc test mov sub adcb daa outsb inc movb mov inc in (bad) and lock pop cmp sbb sub inc xchg sub lahf add aas adc adc adc icebp or sub pop mov add mov or popa xor out inc (bad) aas cmp push clc push hlt outsb shrl int3 test dec inc stos cmp inc std fild outsb push aas jb push dec rcrb jmp adc adc adc int gs jo or (bad) jle dec insl sbb mov push aaa push pmaxub jb leave adc les mov xchg int3 or inc sti (bad) out ljmp xlat inc in dec jne jns cmpsb xchg inc out sahf xchg ds cmp cmpb xchg pop mov cmp in mov mov into lea jecxz (bad) orb cmp call xchg lea and lahf fnop sbb adc enter test xchg test sub in cmp cmp inc fildl mov cmc loope mov scas lods (bad) sahf aad (bad) mov insl or mov inc add incb and outsl movsl adc or mov pop xchg mov or shrl add adc mov cmp bound mov or mov or jle sub dec dec cmp jmp rol push in dec cmp mov ds (bad) sub test adc mov cwtl mov cmp and pop dec jbe mov cmp int3 nop sub mov sbb xor mov xchg xor fnsave mov cmp scas das and pop int push mov or enter mov test inc loope imul cmp add addr16 jmp lret mov xchg mov ljmp xor leave xchg out sbb aad mov shrl fcomp (bad) ja sub jae xor pop arpl mov jmp sarl jne in fnstsw and sbb or sub and (bad) cmpsl xchg lcall mov inc daa (bad) dec loopne sbb lods (bad) cmp xchg mov subl inc jecxz cmp xchg arpl cwtl (bad) stos imul popf loop sub sbb test arpl push pop and push clc jecxz adc xchg out leave dec outsl aas pop aas cli mov dec sub cwtl adc aas inc pop sbb mov jmp aad addl gs mov icebp loope push jo fsubrs push jecxz mov inc inc pop (bad) fcmovbe out ss decb pushf fs and sbb fstps iret sub fwait inc or adc daa in inc push imul and outsl push movsb and inc push pop jns and out adc and cs push lock xchg js xchg lahf push call jge cltd (bad) (bad) fnstenv push and jne mov adcl es lods jmp pop sub inc mov dec push xchg mov mov cmp repz lcall push sar or outsb scas lods call pop and or cmp push xorl xor inc das iret test stc lods jmp (bad) out sbb pop pop popa cmp outsb rcrb out movsl fldt mov lret pusha cmp dec or sti inc loopne pop cwtl fcomps xchg cmp (bad) ret jbe nop (bad) into leave inc bound rep decl scas push mov jo stos clc jle xchg or add jl xchg sbb mov int sbb imul jmp sarl adc les push sub rep enter sti xchg jmp or das or insb push adc or push popf aas into cmpsl cs mov and xchg fldt arpl xor mov stos add fcomi in gs rol inc mov test dec icebp xor push sub push fstp addr16 rcrb clc push aad ret xor addr16 ss sub std sbb inc lock xchg inc and ret add nop sbb adc xor mov lds fsub into ret cmp cmpl shrl mov rcrb sub push je mov inc sub sahf lea call pop adc jp lea (bad) jmp repz mov arpl test in jle cmp mov pop sbb xor add xlat mov or jg iret push lds sti pushf idivl (bad) xor notb xchg and movsl xlat data16 mov inc cmpsb insb and mov ja ss push lds adc xchg rolb lods jo jo dec inc xchg aad jns icebp out (bad) and (bad) pusha dec cmc mov repz dec shlb mov cmp push inc je inc lret mov ljmp dec pop sbb jno movsb pop add mov dec sub pushf movsb dec addr16 aas int cmp and xor in pop xor xchg adc das add adcb xchg lods popl (bad) fs xor stos in mov pushf stc xchg jg loopne sub xor je pop push jbe pop mov adc (bad) gs or test lods push ds (bad) xchg mov (bad) lahf les and mov add xchg and sub ja mov xchg add fist js cmp pusha test imul pushf outsl sahf lret (bad) xchg mov in test lock call jb jmp (bad) cmpb stos test stos das loopne add mov dec add push ljmp cld scas or leave xchg adc cwtl jg (bad) jmp push jae addr16 leave std stos add jns jo push pushf xor addb and es add xor aam (bad) mov sub lcall popf dec (bad) cld mov ljmp sbb mov or inc jp repz jae push xor push test push mov xor mov xor xchg inc bound adc loope iret and sub inc int mov dec ficom jnp push xor mov add cmp mov ss mov test loope pop in (bad) test scas dec jmp mov icebp dec bound dec cs loope mov sahf xor jl and mov jae or ja loop mov push add pop dec mov imul mov fisubl (bad) mull cmp jge fisubl ficompl xchg (bad) ljmp imul call xlat orl dec mov aam dec mov ret adc cmp movb insb das test fidivr (bad) fdivrs aas aas mov fisubr (bad) add mov jmp addr16 frstpm(287 daa shlb xor xchg loopne pusha cwtl jae jnp pusha shrl mov xchg xchg dec lcall sub xchg sbb in jbe cwtl hlt (bad) cld jp aas lcall mov dec cmpsl jge push movsb mov cld mov sub mov mov push stos mov xchg je xor sbb movsb jg call jmp cmp test dec sahf sub mov out std push sbb cmpsb sbb dec jnp jnp push sbb adc mov sub fistpll lret pusha dec push mov add push divb and nop cmpsl jle cmp sbb sub (bad) aaa add xchg cmp sbb call cwtl or pop hlt mov xor sahf (bad) dec rcr ficoml jg aas pop lret lret sbb push inc mov cmp dec mov (bad) dec fbstp add sub aam gs daa xchg adc xchg push inc xchg cmpsl ret cmc fdivrs fadds xor mov mov fisub cmp push out cmp xor pop cwtl int jb int3 xor jle cmp les and stc add ljmp cmpsb jge mov or jg popa jae jnp sub pop subl mov push push (bad) xor or push fisub in jae mov loopne ja cltd mov sub inc mov sarb push lahf mov xor ficom out imul pop jmp hlt repnz inc pop jg jle mov mov test mov je lret push fcomip ja fcomp outsl cltd stos test das lds into mov xor cmp add jae pop xchg rorb push sub arpl (bad) mov xor add push sub cmpxchg mov sbb dec jne cmp into rsqrtps mov jb lods arpl fldt adc arpl test sub and dec jg aam lcall or out sub test push or xchg int cmc lcall sahf jecxz rcll scas ja lcall jo shlb stos jle fildl imul dec mov adc rorl xchg into scas mov (bad) xor mov in pop pop enter xor stos btr add data16 dec pop (bad) ret inc xor sbb insb pop fs ja lods sub aas int mov mov bound xchg outsl mov pop cmp jae pop dec xor leave shl adc pop pusha jp mov test popa int3 out cmp push es sbb ja xchg xor mov dec pop push push jmp ret cltd jbe in push push jnp add enter xchg in aad pop sub fs call xchg pop cmc out push mov loopne fwait mov jb,pt pop loope test cmp imul insb repnz pop pop push hlt adc or mov rcl sahf popf je je addr16 push cmp icebp xor jo imul mov push int lock es repnz cwtl pop push sub jbe push xor mov andl leave sub jno fdivrl fwait pop adc xchg mov mov jno mov lcall test mov ret pop movzwl mov jp sub cmpsb loopne pop xchg sti (bad) jns outsl (bad) popl xor ret (bad) adc sbb push (bad) iret jg jmp mov sub jmp xchg (bad) mov jg lea xchg test mov call mov ret or jmp fcmovnb fldl idiv iret add xchg dec inc jbe inc mov mov loopne mov dec repnz xor xchg jb in and push jmp xchg js xchg pop (bad) es test mov sub jo movsl pop pop arpl inc push stos test jnp pusha js xor xchg inc mov mov lock imulb and mov rorl mov insl sbb (bad) aam push mov mov scas push push icebp mov test (bad) sbb mov subl jl sub loopne test fcmovu stos cmpsb mov es sub pop test adc test out loopne leave sbb pop sub xlat out or pop popf daa fcoml xor insb push nop add cs jp push and jge cs leave dec xchg (bad) sub (bad) cld mov pop add sti out int3 or in add lret mov ffree inc outsl sub out lret cld push dec lcall lcall sti (bad) push bound sub push cmc pop das sbb xchg in rcll inc ljmp inc test outsb fisttpll (bad) mov lods dec jp aad mov inc lcall pop sub xor mov xchg mov in xor (bad) shlb sub xor and insb xor iret mov callw stos sub push xchg adc jg add or cmpsl insb je daa push and sbb inc daa pop dec dec loop in push shr pop out cmp pop shrb add xchg lea sti test sti jle fiadd sar or repz call or in mov sbb movsb lock (bad) sub outsb jns adc sub inc out test or popf lods faddl insl push cmp test jge ja insl imul (bad) sahf cmp xor xor mov lods add cmpsl push inc rorl test lret jecxz jmp xchg ret sub mov es and mov test xor mov and or adc ljmp inc dec xchg mov outsl xor push loope cmpsb ficomp mov js mull rolb in repz xor (bad) decb lock jge xor fwait inc psubw (bad) flds ret jg (bad) mov js lea mov mov pop rorl push dec sarb fisttpl jg (bad) mov cs iret xchg dec fnstcw pop push or or loope lods cld sbb mov jecxz orl mov xchg repz xor dec iret mov cltd rcll aaa repz (bad) int3 cld push sub (bad) (bad) test or xchg out push cmpsb push mov int mov decb imul jb push inc inc in push fcmovnb pushl jb pusha dec xchg pop mov mov mov daa into pop sub ret mov jae test mov mov (bad) shll pop clc xchg fs out sbb loope jg cmpsl jns push pop and stc test adc imul xchg jbe sub xlat pop inc mov nop fisubr xor dec fidivl mov (bad) outsb push xchg inc and mov inc repz or push dec cmp fisub add mov in xor adc cltd pop cli (bad) jp test sbb push pop icebp cmpsl sti pop jmp pop pushf je aaa (bad) das adc adc lock in stc jmp adc arpl out fstpl and fstl testb pop jns outsb popa or (bad) out test dec fnstsw jno mov pop push jnp std jle in cli roll xchg cmp sar ret pusha icebp (bad) jl popa push ret jle pop aam sub xor or outsl xor xchg lods popf pusha lods dec and cmpsl popf push pop int3 shlb imul popa fmulp inc aam stos shll aad jecxz fstl and dec xlat pop lahf dec loopne imul push jl and dec popf jle jnp xor into jb insb xchg sbbl push and xlat push les or add jne int and lahf enter sub out dec mov add loope js test in int pop loopne clc or push mov jg (bad) dec divl and push enter je sub adc cmp stc xchg mov clc inc mov cmp aaa xlat dec inc iret push fnstenv mov lea mov outsb inc cmp lret jne outsb pop mov jg mov mov push mov hlt (bad) dec pop aas into jg in pop xchg jno dec mov xchg cltd pop pushf mul stc add lds dec daa add aas (bad) (bad) mov pop xchg mov aaa je stc inc stos loopne dec jmp (bad) (bad) xchg mov std cmc cltd hlt xor les cli mov jmp fwait sbb das (bad) fcmovbe cmp insl mull adc and pop fistpl imul sti mov cmpsb insb adc imul rcll ds inc mov addr16 sbb je mov and inc enter nop jb dec dec pop stos repnz imul shrl mov aas or repz jns stos xor movsb add adc cmp stos cmp sub shlb add dec outsb in xchg mov lcall pop xchg adc lret push rcrl and cmpsl jg inc faddp or repnz sahf rclb test scas or fcomps (bad) jle mov mov sti test ret shrb and lret sub cmpsl insl in scas jae fistp sbb jb popf cmpsb into mov mov add push in jo or lret jo cmpsb rorb mov repnz std sbb cmp add xor daa out jbe xchg (bad) loope jno mov hlt pushf adc sub sarb imul lods adcl jae into cmp repz mov push adc jae add xlat mov enter xchg (bad) push adc stc sub daa stos or lock mov outsb mov testb xchg jns js pop and xor and pop lret movsb movsb ja into add leave js dec push adc push rcr subl xchg out out pop jecxz (bad) xchg push cs sbb lcall decb div repz je (bad) jecxz stos pop xchg cmp rcrl pop jbe mov xchg (bad) mov mov adc fstpl lret gs mov call stc add mov loop push popa inc mov add in mov imul cmpsl xchg xorb jbe cltd mov xchg fs cld mov pcmpeqb pop jno insl and sbb aas movl enter cmp lret adc mov add inc jp lcall fsubrs test sbb cmpsb sub mov dec mov and mov push sub or mov loopne jb outsl xor lcall (bad) stc dec lahf test inc dec daa push test fdivr test out repnz push push dec push pop les (bad) push jle mov push dec dec mov cmc jg dec (bad) ss jle push enter hlt jnp push sbb cmp cmpsb rcrl loop sub dec ret and mov jmp jge enter mov mov sbb sbb xchg jo push (bad) (bad) cld loopne push or xchg popf jnp inc cmc and (bad) cmpsb insb stc mov inc mov xchg stc js mov cmc je add adc dec rcr mov fsubrs mov ss sar loop decl xchg test dec dec push push subl cld ret js xor push xchg repz mov push dec jge mov xchg or (bad) (bad) add icebp pop sti outsl int popa add inc adc and int mov lea outsb fildll and jo cmp sub cld adc (bad) cmp int3 sbb inc outsb add cwtl xchg sahf movsl push jg jne adcl into adc cmpsb pop nop (bad) sbb xor adc jp sti jmp pop mov out mov xchg jl rclb shll and push out cmc mov mov jno mov test ret cmp xor add dec imul sti mov jge mov mov add fst rorl sbbl fwait xchg jle xchg sbb jns jno (bad) mov lds ret cmp adc add jno add and sub pop mov in push and mov fwait inc mov add cmp out int test ljmp cmp pop xlat mov rcll pop sbb outsl jnp (bad) push ljmp stos rcrb (bad) ja cmp movsb cmpsb pop jl jne and repnz xchg enter xor xchg jb adc aaa scas xchg mov push jne hlt insl pop nop nop or or sub add pop daa sbb aaa sbb std xchg mov xchg cmp sbb ficompl jae imul loopne leave pop movl sti int int dec mov dec cs dec or outsb and xchg pop jle fimul enter add or dec insb ds ret ret divl jno xchg cmp add mov data16 insb push xchg push ss pop mov ds mov pushf dec sbb mov stos imul inc xchg push sbb dec inc dec adc ror adc shlb mov fsubrs mov cld sbb pop pop inc xor inc call jb push je imul sbb mov movsb std mov or sahf enter and and xor scas lret outsb inc imul or mov fcmove and call sub sub inc jae insl rol fcompl jmp pop (bad) mov dec or insb popa incl (bad) cmp int3 jns dec jge push or mov insl jecxz add fcmovb outsl dec pop (bad) or push mov dec (bad) in xor or lods jno pop adc les rcrb or add and mov cmp jmp leave fsts and mov loope das inc sbb jb orl inc xlat jmp mov and (bad) lret inc and js jnp xchg int xor xchg mov loopne cli insl popa lock add or lret daa or and pop int3 cmpsl (bad) dec in aas xor dec mov rolb popf fstpt xchg out aaa xchg pop popa mov cld ret mov lret rcrb push aad or add cld aad (bad) lds popl xor in movsl pop adc mov jmp clc in sub enter lret mov outsl mov dec cmp mov aaa rcrb enter rolb mov pop add adc aad xor xchg lcall out aas or xlat mov sbb movsl cmpsb dec fwait pop scas clc dec ret repz addr16 clc repnz jmp cmpsb push or roll cli push gs aam cmpsb pop push lods fwait jl xor in jl ror in jl sub adc adc addr16 xchg enter int mov adc js test es jo jno push cltd dec dec mov dec lret cmc add (bad) sbb cwtl mov (bad) insb jg mov cmp xor jb add jmp pop daa push pusha int cs imull xchg cmp push andl mov bound test outsl push mov into pop mov mov lock aaa fistpl (bad) jg mov sbbb sbb or or adcl in aam push xor lods out in mov mov fiadd lods mov mov fsubs xchg mov popa (bad) (bad) (bad) jns or cli xor cmpsb (bad) add (bad) mov jge xchg dec imul je cwtl push aas lret add popf (bad) fcmovne arpl fldcw gs rcrb jbe sbb dec jg inc lret adc imul sbb (bad) mov stc js out mov mov adc push and pop sub aad cmp jne mov fldl pop mov les data16 push xchg fwait mov lret nop pop sub jae mov push out cltd inc fcmovu dec ja push arpl enter addr16 xchg cmpsl aad pop cmp sub mov push or les das mov sahf xchg xchg addr16 inc ret and repnz mov lret jb aaa cmp pop fs pop notb push and add jmp and pop insb push aam repnz fistl jmp ss and pop and roll stos (bad) mov cld or (bad) negb push sub ss push loop sbbl aam jnp into mov sbb rcrb (bad) (bad) adc cs nop popa push mov mov incl (bad) shlb jbe inc ret int3 popf gs call mov jecxz add dec rclb cmp or repz push aas stc xor dec and xchg cmc inc (bad) mov fsub or dec cmp mov cmpsb pop repz push push (bad) xchg inc imulb lcall lods stos pop xchg pop lret das cli jecxz add scas shlb pop fwait test mov adc and lods dec (bad) fldcw cltd sbb in cmp sub ljmp jge mov dec cmpl popa cmp and lahf xchg fsubl int3 dec fsubr cwtl fdivrl inc adc cmpsb push clc push ja xchg popf fbld adc mov cmpsl imul daa sub mov mov jb or mov cld pusha mov xchg cld mov dec mov jnp sub xor xchg push xor xor int3 cmp push lea sbb and jp mov ret add push roll xchg jl xchg stos out sbb out jno sbb push push cltd jmp test gs sub or push mov mov adc jbe dec loop (bad) arpl dec lret push rolb xchg push es aaa xor cmc add cltd pop cmpsb call fucompp lea inc sarl jns stos pusha mov gs pop mov sbb mov mov cld outsb jbe sub push cmp inc imull sbb das outsl clc push and and pop pop cmp adc jns mov aam fcmovb cmp or mov add jb cmp clc out and call shrb push or clc icebp (bad) push movsb xchg cmp rclb movsl cwtl pop loop (bad) inc lret inc adc dec (bad) or aad fstpt (bad) setg (bad) adc rolb repnz xchg rorl jae xchg out mov hlt je ds enter in dec mov insl aad sub movsb add out jnp push fcoml fildl lahf shl add or div pop pushf push call repz mov mov push sbb fwait xor rorb cwtl (bad) mov xlat sub adc inc xlat cs imul mov push dec fiaddl shr jb jge popf cmp fwait adc aam and dec insl jne mov ds fistpl ljmp sub loope popa clc loope push (bad) mov imul dec or dec call ret mov pop sub jl (bad) mov and bound pop add xchg jge cmc jle xor pavgb mov cmp ds cmpl mov mov pop mov cltd push inc into pushf push gs add lret xchg std push jecxz int cld fwait mov inc dec add mov cld lret mull scas cmpl inc gs pop dec aaa adc mov pop mov leave dec xor nop cld mov jge sahf test shlb out (bad) xlat adc shll aaa rorb add scas sbb sbb sub dec and mov rdpmc and xchg lds pushf adc dec push mov insl mov out je dec add jle adc and shrl inc (bad) ss lock jne ds cmp push dec jg (bad) push bound std jns bound xor iret mov pusha or daa out insl fisubrl and (bad) call jmp inc enter adc pop std dec push pop loop (bad) daa sub mov add sti movsb xchg mov dec imul xchg movsl pop push fcomi jb scas lcall insl xchg mov xlat scas in jp out les sub or lret cmpsb pop aad push mov xor mov std das mov xchg lods sub les cmpsl sarl pop test aaa iret mov (bad) insl pushf sub xchg cs cld and mulb rorl add pop mov adc iret push mov sbb ret stc cmp inc mov xor cwtl add jo ret popl inc xchg rol pushf in inc inc (bad) cmc and (bad) cmc xorb push imul push mov mov cmpsl test push insl mov ret mov push scas jo mov jg inc or pop ret mov xchg aas lcall mov or ljmp imul fmull cmp xchg ret lods cltd enter jmp xor cld xor inc (bad) adc mov aad cltd xchg out ljmp rorl movq daa test mov jecxz fsts inc (bad) out mov mov push cmp xchg pop jo into daa sbb jae jge cmp addb and icebp dec and xor lahf sbb insb stc popa outsl inc pandn cmp inc lds lea bound pop es fsubl sub movsl jg cmp add mov sub out insl add cld and cmpsl mov popf sbb ret mov xlat addl xchg lods and sub xor add sbb in inc mov inc adc inc inc or call lahf mov mov adc push pop adc mov or and (bad) fnsave sbb stos dec pop cmpsl (bad) dec leave imul cld aad and pop (bad) cli mov int inc cmp xchg push pop add dec leave push lock add or pop pop addr16 loope jbe and rol sbb add pop mov lods push mov call jp pop add or xchg dec clc (bad) cmc std dec inc lret sbb inc imul test inc stos and lret dec js in fidiv mov (bad) rol xchg rcrb in in push les sbb addr16 cltd (bad) mov sub adc (bad) sub outsb pop pop out repz ret aas sti cli out scas fist in cmp sbb dec pop daa in inc dec rorb mov sub ljmp lock xchg dec ds adc adc xor inc iret xchg jbe xor adc mov inc sbb out pop dec push pop push adc std and sbb inc ret es jge mov mov cmp cmp sbb imul (bad) js mov jmp pop sub mov push ljmp and outsl push pop outsl adc fimul inc mov dec rorl add adc mov fldt xor sbb vmread sbb cli jmp movsb je in push popa jns stos add add test outsb popf mov loop ja jbe sbb out enter notb push shll (bad) xor fildl sbb fs dec push xchg sbb adc das aas xor cmp push or pushf lock mov cmp (bad) scas pop call xchg or adc push add fs inc mov mov les repz repz div cmpsb pop (bad) stos add cmp call and and into or dec ja scas mov mov sbb pusha cmovbe ljmp cmp (bad) in xchg xchg mov lods movsl in popf stos mov clc jns adcb fcoms push or mov (bad) rorl loopne jns pop and fimull and inc xor inc mov push mov sbb in mov nop mov nop test or popa inc cmpsl xchg cmp aam outsb mov or sub mov iret lock or ljmp popf adc movsb mov mov inc add cmp dec add popf dec inc cltd mov jns or (bad) mov in fbstp jae adc jle inc std stc imulb dec fisub test rclb nop or xchg cmp in mov pop push push jl push mov (bad) pop stos mov std jmp gs hlt movsl enter pop scas arpl lahf add or dec pop daa xchg cli sarl leavew push jg fmuls inc pmulhw aas test mov mov out mov sub adc roll stos fmuls cmp hlt mov pop push cmp cmp cmp jmp add sub sbb (bad) push psraw jne cwtl jo scas dec jg mov jle shrb sub fidivr sahf push lods fdivrs push dec bound mov dec dec lcall inc adc lods pop in mov mov pop in jo mov mov mov out push mov cwtl movsl pop pop dec (bad) jb xor adc xlat insl insb outsb mov lcall jb mov ficom out pop add arpl push push adc pop inc push rclb js push mov xlat add sub jne mov in jge movsl xor inc insl or adc out adc mov xlat nop mov mov popf sbb icebp int js test in aam cmp push jge and fs loope out xchg movsb hlt push push mov ret inc and sysexit in mov repz add inc sub inc inc push and arpl rorb jle mov cmp inc xor push mov jno fisttp pop jle sbb outsb mov dec aad adc loope jecxz cmp jb xchg push ss cltd mov jg fstpt mov pop adc ljmp pop inc hlt (bad) mov into lock sarb test push aam fimul xchg sbb jge lret cmp push arpl pop sub imul aad sahf ljmp aad cmp movsb pop inc and into add inc sub bound push push dec aad nop mul mov rolb fbstp dec xchg icebp ja push pop cmp movsb jo pop xchg (bad) int xsavec push add aam inc aad fcmovu dec sti std pop scas xchg lret sub ret int lea pop xchg les fstl jb out ljmp ret sahf inc lds or adc stos rcll jb and cmc sti (bad) add aad inc pop shlb cmpl leave push push call hlt (bad) out mov dec imul add in adc jno xchg out adc dec jne enter sbbb stos cld dec cmp xlat pop or sbb push push push pop ficoml les pop enter stos mov cltd jo cs jle jns xchg pop test adc repz rcll push cmpl push jle addr16 adc in xchg sbb ljmp lcall imul mov push roll push (bad) mov aad leave mov mov push mov or cli movsb dec repnz sub push sbb and xorb shlb push add fisttpll xor xchg sub out lods pop inc inc test jno test cwtl test fist into pop dec push xchg inc js outsl imul cltd xchg dec cmpb or ja test jge or shrb cmp loop test insb enter sti movsb imull fsubrl push divl mov sub cmp pop pop mov cmp adc shll pop js dec ljmp xchg jbe (bad) sahf mov or aas leave dec (bad) fldt push sbb gs mov test ja aam mov add fidivr inc js scas mov outsb leave gs loopne pop push adc dec test cmp fidivrl fbstp xlat mov movsl xlat std xchg jb iret inc shrl jbe out inc loopne je xor jbe mov (bad) adc lahf int3 jne xor fwait push sti dec fldenv mov mov shrb sahf adc test idivb jg imul cmp cmovbe out adc xor mov mov mov (bad) dec imul lods cmpl enter pop sub ljmp mov test cmpsl jb (bad) or stos repnz xchg xor (bad) xor adc in jnp push hlt pop mov push stos flds push movsl jne inc cwtl out mov hlt call cmp (bad) jo (bad) or jo inc mov (bad) xor and pusha jle adc in (bad) ja loop pop dec in inc jmp jecxz ljmp mov adc adc notb scas or testl or jb jmp out roll test sahf sbb xchg loopne push les inc mov movsb out pop out fnsave (bad) xchg xchg lods cmp scas and cmova das cs cmp cmp pop cld das jae orb ss stc into add jo and loopne mov test imul dec jmp add mov xorb jle push imul lods push xor sbb mov and jge je popf repnz mov hlt mov fmuls movsb loop imul outsl in mov sarl das cmpsl fsubl pop pop mov sub dec test dec cwtl cmp xlat add (bad) mov jp mov leave mov imulb mov add loope mov pusha lock sub sub mov jns mov pop imul or push sbb lea sbb mov pop xor sarl adc pop sbb push mov adc popf push sti or (bad) mov xor adc or push xchg cmp int3 xor cmp cmp mov sub sahf mov (bad) movsb jp fisubl mov xor jb call xor push dec call scas push sarb jo cmpsl mov clc fidiv aas (bad) pop adc pop pop jg xchg fmull fldz xchg ss dec outsb fs stc pop pop lret and add mov stc imul add or mov arpl mov jge push ss je push push in push push js or mov aas push in dec mov aas std scas cmpsl xor mov inc sbb mov mov into enter mov and imul adc and jg pusha movsb lret (bad) imul in stos xor and call mov push sub add mov (bad) dec mov jge or incb pop adc dec jno jb sub dec (bad) xchg mov (bad) and rclb mov dec in sahf jp or sub or lods push mov and adc aad pop lods dec push cmpsl sub mov inc int mov call sbb inc cld (bad) xor sub ret insl jmp dec (bad) stos insb or scas das xchg in cmp cmc lcall xchg stc movsl sbb notl pop fwait add insl push aaa sub jp popf or in xlat cmpsl aam stos test aas imul jp xor arpl pop lret test dec xchg sahf and xchg mov pop lods bound (bad) cmp insl out and inc add mov clc inc sub cli cmp push add aam jmp jecxz popf das sbb sahf add jmp fwait mov mull mov xor addr16 push and adc or and and pop rcr ret lret je mov push lods dec mov repz mov push push sub xchg (bad) in mov test or std pop out cmp movsb pop mov inc mov in insb lret fxch roll lock xchg scas add push mov mov lock jmp inc push repz (bad) mov inc out roll or adc into sbbl inc test jle cmpsb dec mov fdivrp xor jl nop sbb adc mov js xor xchg js aam mov jmp add ficomp mov popa out mov in push test inc jg inc ret ja lods js and decl sbb mov sub jns cmp xchg sub push insb in push jb out and je leave call xor or pop mov movsb jno shlb ret jns xor fdivl sub xchg push out leave ja scas loop arpl negl inc int3 jge dec xchg mov fnstcw sbb pop loope enter in outsb xchg ret push jecxz pusha jl mov cli xchg pushl mov jp mov test add movsl test (bad) sub inc dec int3 dec pop cmp mov std cmpl insb and jne jae sub jne dec mov movsb je out pushf push push add int sub (bad) repz push aaa push scas mov or and pop clc mov aad and daa add lret cmp mov test or dec sti hlt in xchg stc pop and lret dec fs add inc xor lods xchg (bad) pop mov lods xchg xor add push mov cmp insl out jne int dec aaa mov pop jmp mov in leave pop mov dec aad popa push jmp (bad) repz test nop scas rorb or push push (bad) js stos mov in mov (bad) cmpsl add enter and je xor out std pop loop incl mov out insl xchg (bad) fcomps add (bad) push mov stos pusha dec (bad) je outsl lods cmpl in dec sub push aad or and mov push int3 adc flds cs sbb test imulb add std jmp outsb mov loopne jl lahf xchg mov test adc stos scas mov sahf mov adcl ret mov dec xor stc mov dec movsb adc fst int3 mov hlt les xchg js scas scas pusha xchg sahf clc dec outsb and dec pop jb xchg sbb add or mov inc stc jo dec (bad) xlat aaa shl dec in stos sub mov outsl inc adc hlt mov fnstsw test fidivl paddusw scas mov imul popf movsl cltd outsb adc dec data16 inc dec dec jle arpl movsb cmp aad sbb sti gs inc lea flds lock jle test or popa mov mov (bad) (bad) cli push jbe fdivs mov add xchg shll out stos xchg sbb add lods notl adc jl inc and cmp lods pop cmp das cmc imul (bad) mov jl xor divl dec cwtl add dec nop lods pusha mov sub cld gs cltd movsb aaa arpl jmp call pop mov jae insl cmp jmp sahf jmp dec leave gs sub push push pusha sub push popf add mov or dec hlt jne fldl ret enter sti cmp pop testb dec inc fidivrl lcall (bad) pushf imul movsb icebp dec pusha push shr mov xor negl dec (bad) fisttpl xchg xchg arpl jmp jecxz cmp mov shll jbe push aad mov aaa ds xchg push lds lods sub xor push dec inc (bad) sub sbb mov js nop andl loope lods push push mov lods mov imul push xchg arpl dec insb frstor (bad) cmc push fildll mov pop bound mov sbb mov stos fistp adc pop adc push shl jnp pop mov aam test and push mov dec xor enter les outsb stos imul incl xchg pop push arpl outsb lds mov int mov push dec pop and mov mov in outsb add and cwtl or push iret jge xchg dec xor cwtl popf ret and out scas movsb js push cld out iret das negl arpl inc aas mov mov xorl imul nop fidivl (bad) bnd imul mov cmp inc or loopne xchg sbb pop adc int ljmp mov lcall pop xchg loopne adc (bad) mov mov sbb in jne cmp mov xchg enter sub inc sarb imul mov shlb jb rclb and inc jb xor iret popl cmovle xchg add lods aad scas std into xor pop push sbb dec pusha (bad) adc outsb pop (bad) in xchg cmp mov mov cltd sbb aad xchg fisubr lds test mov push into cmp inc mov call cld lods mov mov push sarb dec cmpsl inc fdivl xor xchg loopne or xchg subb scas sub subb aad xchg leave jg rcrb xor test outsl adc xchg lods sbb loop pop cwtl xor mov fucomi add adc dec jge fiadd cmpsb or call popf in popl mov mov nop and xor repnz in shrb and daa addr16 jmp ja into roll insl or sbb std loope push (bad) (bad) jl mov jmp (bad) mov (bad) int sub xor xchg push jo jne jle mov loop inc mov repz jmp mov movswl and and mov mov stos dec jns into pop sbb xor xor mov mov mov adc out sbb dec jmp dec (bad) bound into jmp cltd ljmp jmp jmp sarl das in dec popa and mov cmp hlt mov (bad) das fwait in dec mov imul sarl shrl cld cmp push jmp outsl cwtl fisttp sbb push aaa push and int lret movsl jp inc dec mov test les pop adc add call fcmovne imul ja and lcall idiv jge arpl sbb xor aaa push lds arpl in sar insl xor popa mov mov fsubp dec stos arpl or xchg lret and cld pusha add mov fwait and ret sbb fisubrl aad adc sub bt imul add or lcall outsb pop test orl rorl adc js adc pop pop and sahf dec pop repnz fbld mov pop mov jle cmp push inc xchg jmp inc (bad) cs sahf stc pop xchg sar std daa mov iret ljmp mov add jmp cs fstl cld push pop aas cmp push and loope ja sbb pop jno push popa cmp int3 mov xor int3 mov fwait cmp mov xchg inc pushf xor mov sbb mov fwait ss lea je (bad) cld les push insb jns sti mov sbb stc pop dec jbe add aad xor ljmp mov lcall mov test inc add dec pop push out or clc pusha nop jge clc inc ljmp push imul movsb (bad) pushf or sbb test rcrl subb or imul mov mov orl adc xor test jne or and fistpll mov xor loope or mov int3 sarl jo jbe outsl push and ret lcall push adc sbb sub xchg fcmovnu mov in outsl adc cld jge or pop int out lods fdiv and popa mov push or imul or or std lcall and pop cmpsb (bad) nop cmp cmp inc into jmp or cs test loop push iret loope fstl js push mov xchg and fwait ljmp xchg addl jl pop push or and lds push mov adc mov adc or outsl test in fstps cmp popf mov mov sub aas inc dec pop dec les add mov lret sarl fnstcw out in scas (bad) fisttpl insl pop dec mov das clc mov and sub loop sarl dec jp pop cwtl repnz repz popl xchg sahf movsl rorl orl (bad) cli dec xor enter push in into adc and mov xor adc mov es mov scas cmp pop arpl and mov inc in aas jne fstp in rcr sbb mov dec fdivs leave (bad) aaa rcrb cmp jbe or (bad) mov shlb add dec adc mov or xchg inc out lcall add lret jg mov std idivb scas push inc adc sub cmc cld or in loope add adcl ret xchg je das sbb loop adc sbb inc dec sti push (bad) imulb pop cmpb fs shlb lret lahf sbb add dec (bad) xchg sbb adc mov mov dec mov pop or lret fucomi mov call lcall mov mov into sub sub mov imul repz leave les mov iret hlt test mov aam rcr sub push mov mov pushl mov jecxz and fildll negl gs mov pushf pop testl fiaddl dec mov inc xchg xchg arpl es pop stos or add sub (bad) xor out dec and or cld js add push inc mov mov pop inc outsl (bad) xor addr16 mov dec dec sub sbb and lods dec cld sub jno loop leave cwtl dec push add stc and xchg or int3 push add xor mov push aam mov and insl std jg ljmp mov xor scas pusha xchg (bad) adc sbb xchg sbb (bad) int xor push leave sbb adc jmp push insl (bad) dec mov mov add fwait es push mov cmp adc gs push adc xor inc and cmpsl mov loopne push jno popf mov sub loop jne push insl gs stos mov cltd mov rsqrtps and jmp shrb xchg aaa les je pop sbb mov and aam adc bound test mov mov or add arpl (bad) lock xor xchg adc (bad) push mull jmp dec jo cld in lcall and push movlps push iret (bad) test push stos inc lods sub cmpsb and enter pop mov aad jbe push in sbb outsl divb repz push mov and test xor lret pop mov shrb xor inc rcl sbb xor lcall lods push das ret sbb cmp adc shll loope insb dec (bad) or das ja incb jecxz clc xchg fimull dec (bad) hlt (bad) pusha pop test cmp loope out inc mov out into cmp pop fdivrl in mov push inc scas movsl shrb aas lret add sarl mov xor popaw push push loopne mov cwtl in pop jb cmpsb xchg roll mov (bad) mov sbb stos dec mov pop test mov inc add mov cmp cmp lods scas (bad) cmp cmp mov push scas push popf inc (bad) mov inc pusha inc xor lret sub orl adc dec xchg outsb enter push xchg or cmpsb pop mov int3 and repnz call test rolb mov scas dec jno push rcll jo xor call add clc bound sbb mov nop scas in mov xchg xchg cmp jp push jecxz cmp insb loopne outsl or fisubrl int insb stos mov mov adc popa sti and mov pop sub es inc ffreep dec das aad mov dec mov sarl and arpl jmp fbstp mov lahf cs lret add sbb lods xchg fwait popf fsubp mov fildll sub sbb sbbl cltd divl imul enter in repnz pop hlt inc xor xor data16 mov cmp iret cmp cmpsl enter push lahf mov push cwtl lret mov out jge test mov pop xchg lds popf and mov and jl sbb notl cmpl test mov ds pusha cmpl int test arpl or inc xchg (bad) mov shl test push cmp mov or lret mov dec je pop and sti or sub adc aam sbb movsl jg xor addb ret enter jl mov mov xor out xchg xchg cmp or fisubrl insl xor popf pushf jl add lea int3 addr16 xchg cli ja inc mov clc adc cltd shr cmpsl incb (bad) notl imul mov mov popf dec or xchg push mov das dec xor or ror mov mov in fnop addr16 mov dec sbb xchg xchg fs pop (bad) xchg xchg mov icebp jmp aaa roll int scas out mov jae add lret aad sub or add jae into inc sbb cs dec stos pop or cli pop mov (bad) leave int3 (bad) in jb xor jo nop mov jp,pt pushf sub jnp lock fildll sbb cmp sahf sub xor out addr16 adc xchg or xchg dec and repz and xor jle pop dec xchg clc xchg in fldl sarb stos (bad) xor out dec or or movsb push fcompl cs mov adc aam test jmp jns (bad) cmp jle mov sbb xchg mov mov scas je fucom dec (bad) mov lods inc dec or icebp call (bad) ffreep scas push rcll lods rcl lock jo dec and mov cmpsb or into push xchg inc or or sbb pushf lahf sbb sub fsubs int3 mov mov call jg add enter jge test mov ret je dec (bad) ja and lret add adc pop sarl sbb mov xchg jns xchg mov sub mov ja or fcompl jp and mov sti fsts lds (bad) mov cmpsb sti ds inc mov fwait and pop test push sti inc loop aaa xadd inc jecxz mov push mov dec sub lcallw popf xor pop scas in and aaa repz fdivrs sbb mov jle jbe mov scas pop jecxz add popa mov les push repz (bad) mov aam aas lahf fsts jl (bad) xlat outsl divl pushf push pop mov dec xor jnp and ljmp push ret lds push in add sarl mov adc xlat sub lods pop xchg repz ss inc inc cmp mov cmp cmpsl std add xchg icebp leave mov mov jl dec (bad) in dec ffree pop jno movsb pop ret aas iret cmpsl out pushf sbb (bad) xchg pop push pop push data16 out push lret inc je lods les sub inc subl push mov movsl das sahf enter jl push mov mov dec (bad) or sti sti jecxz sbb dec in xor cmp jb sbb dec cmc out sar fs pop add data16 cmc fistp loope push pop jecxz xor pextrw mov ss and jl jl sbb sub push pop sti mov stc sahf mov add je imul adc jns jg mov arpl mov push cltd sub cmp push stos call in and rep pusha pop lods mov mov and inc pop mov lret xor cwtl xchg xor sbb mov and sbb cs negb bnd lea ret mov mov and dec fcmovbe xor testl xor adcl dec push (bad) push push sbb ds lock lods jns jge and pop pop sbb imul dec jbe push mov jecxz pop cld ljmp pop sbb push xchg addr16 xchg or xchg push in (bad) pop sbb imul int3 fwait xchg push mov nop mov ja int inc bnd popa mov push xchg cmp cmp inc (bad) pop ja (bad) gs test sbb movsb repnz adc ja loopne std dec insl movsl inc push mov jmp mov inc out mov push lea xor imul push xchg out (bad) jae jbe nop out (bad) lea lods sbb dec pop add cmp sub mov adc sub xor pop jnp or loop sbb push sub in fistl outsb or shrl push cmp jg fist mov add jb push decb in cld jbe lock pusha daa (bad) ds int3 cmp call movl add outsl inc in sahf and mov adc (bad) xchg arpl pop xchg imul jo cs xchg scas pushl xchg cmp pop or das das das push xorl cmovp rcl dec pop enter sbb xor dec pop dec stos sbb in pop cmp ret lahf std stos mov repnz push pop ss dec adc xchg inc rcrb arpl ds mov xor into mov addr16 data16 jmp push ja mov sub sub dec insb ljmp lret fs xlat add in jno jmp lods fiadd push sti and (bad) pop div shll aas fsubs lock rolb cmp leave mov ret outsl push mov (bad) insb js iret test ss das popw adc mov mov push testl popf or mov jo cmpsl mov fldenv mov (bad) call xchg imul jae aad jp xchg xor outsb clc sub mov push pop jecxz xchg in cwtl outsb popa fstpl lcall fcompl pop sub mov sub fnstenv inc leave mov int cmpsb mov xlat push dec enter xchg (bad) xor xorl lea and pop push clc adc push cwtl bswap dec jne cmpsb dec pop jp mov sub gs lahf out mov pop ja scas inc mov or mov mov in push inc jecxz (bad) push cwtl fimul jp xchg (bad) pop or (bad) push scas or push loopne dec popf int3 outsl push insb call and ror jg int3 and mov lods push add repnz dec or xor ja arpl hlt fmuls inc rclb inc mov jae rol dec fwait call ss sbb and ds and mov mov cmpsb leave or push repz mov add push lods or subb sub mov (bad) aam push jne mov (bad) lea ja dec insb test xchg xchg adcl leave in arpl mov scas sub xchg mov addr16 scas cmp jae pushf les mov dec int cli mov scas int3 or lcall pop cltd cmp (bad) lea sbb xchg out test jne or js popf loopne jnp rol xchg daa push and call movsl incl lcall mov inc jp or add call pop adc mov xchg or dec ja mov inc (bad) imul jmp jl add shrb mov jge dec sub mov jg pop push lock test mov ficom imul repnz pop scas xchg mov stc mov add mov cmp shr pop xchg iret cmp add sub mov cmp push sbb jb cmp (bad) mov pop and ss push pop add repz mov lods pop ret rcl push cld dec push fisttpll push or (bad) call xchg loopne (bad) imul clc dec stos xchg addl xchg xchg loopne scas call scas outsl test xchg idivb jmp or mov mov int (bad) mov jns mov inc jg sar or in test mov push cmp mov pop dec xchg xchg xor clc fistl or aaa mov aam ret stc jmp imul mov fwait pop dec dec inc orb (bad) pusha sub inc test insl fldenv dec stos les gs lea mov push ficomp push cmc cwtl (bad) adc add add add sub iret adc jns mov gs push (bad) andb das dec out xor jecxz enter test pop adc leave aas sahf sub lods pop rol int3 pop mov mov sbb mov sar mov enter mov mov add aam lods jne pop mov inc xchg stos fiaddl shll jp stos (bad) lret xor mov sub mov out imul sti and adc ds shlb insl and sub sub pop cld sub dec or fdivl xchg mov in mov cltd lret rol cmp sbb sub aaa mov and push fnstcw ret loopne fcmovne cmp sbb testb insl sub lahf xor inc cmp imul repnz fs popf popf in sub inc xor cmp adc popf mov and xor fcomip jp mov mov lock aas cwtl dec mov cmp xchg je ret xchg or nop test mov fisttp dec cmp imul inc insl incb in pusha clc idivb mov xor repnz jmp sub sbb imull or xor dec mull pop mov iret pushf jg jns es (bad) xor dec lret jae gs popa popf jnp stos cmpsl add std fcoml icebp cld jle cwtl out and pop pop add or mov sub outsl dec fisttpll push push mov or push (bad) adc jg xchg cmp fiaddl dec inc (bad) jo shrl daa fbstp sbb add jge push or cmp mov dec push mov into (bad) mov fxch in lcall push mov cmp test add cmc nopl sbb jmp mov mov movsb mov aam sbb mov je cmp hlt pop imul inc add mov push es cmpl push js mov (bad) int push cmp pop popa push in out xor mov mov cltd out mov popa (bad) xor std xor push mov inc stos mov mov cmp das outsb fiadd xor stc mov adc fcomp push lret idivl lret fimull pop enter orl sub push xchg add int3 shr mov sbb sbb jne jo cmpsl xchg cmpsb pusha mov test clc (bad) clc cmc and add jge repz dec push outsb mov push xor jne lcall push sbbb sub mov mov decb sub aam imul popa dec cmc add add lret incl inc int subl arpl pop xchg or xor shll add int idivb pop pop ss popf sub mov xor fild adc dec movsb xchg xchg xchg pop pop test and imul scas pop sub inc pop hlt and loopne and es lret jb arpl or daa sub mov or xchg js stc loopne mov or and (bad) pop mov mov adc fistp sbb aam xchg es pop dec imul mov mov nop inc hlt popfw cmp sahf add dec dec stos or xchg mov mov mov out les mov adc jl gs pop test adc jne sbb push xchg loope loop bndstx push int cmp dec jl das (bad) mov leave fisubl sbb out mov loope jb cltd fstl add xchg ss jecxz data16 bound or xchg testl call cmpsb ljmp inc aas mov xchg jns or imul mov and int3 ljmp or pusha mov movsb jbe xor adc stos sub lock in scas stos add aas scas or xor gs loopne movl jne stc push fidiv cmpsl fsubrs sti cmp outsb gs je (bad) out addl and mov mov dec adc mov stc aam inc pusha add fwait mov jbe loope iret insl push ds shl push fcoms jae add aas and out ret cwtl scas mov clc cmc pushf sub push jle stc outsb jb int3 or out cmp and (bad) fistpl sbb jmp add inc xlat in pop mov jb test mov ja js scas neg or or cmc add in addl lcall dec rcrb jbe mov xchg fidivl or out jle push push mov pop or push mov lods test add inc loopne add xchg cmp jbe nop jno shl fbstp push adc jecxz sbb pop std xor shrl adc push jge nop push add test jp aam sub rcrb inc or dec pushf (bad) mov nop rorl jl cmp jp movsl enter cli clc aam add mov (bad) rcrl adc xchg std cwtl cmp inc xor fistpll rorb mov push mov push loopne add out je in iret inc jle inc mov outsb add jb js mov (bad) hlt pushf js ficomp pop hlt mov xchg fsub jbe (bad) pop cmp mov push fucomp insl mov xor inc into xlat bound adc pusha lcall mov sbb lret pushf ret pushl adc jbe xchg jns aam sbb ja lds gs push mov and pop or mov fsincos or jae sbbl push pop enter fcmovb push push outsl add inc xor ljmp imul sti adc adc cmpsl popa mov dec (bad) mov mov subl jl pop xchg mov mov xchg enter and pop ret leave xor mov dec adc ja or or push test dec adc push aam push push js and mov lods fmull adcl mov enter sbb pop pop (bad) fsubp mov pop push movsl inc aaa fistpl es adc pop mov imul cmpl stos cld rolb stos dec pop ljmp xorl jge sahf and fs dec movd std clc pop jnp mov dec push insb (bad) out cmp sub add cmp imul or cmp mov xchg pop stos jo in xchg rcll repnz popf repz cwtl shrb jmp out addr16 push outsb rcr subl lcall sbb add (bad) test lcall adc pop cmp pop add jl rorl or aaa sti or sti adc (bad) jno gs dec xor inc inc and out sub add fldcw testl mov mov iret pop xor (bad) jo cwtl arpl push lcall mov pop pop sahf inc popf adc lea lret std lds mov dec dec mov aam xchg (bad) imul mov add test mov inc sarl inc xchg jne fstpt test xchg xlat fsts or sahf pop in leave xor jo mov insb (bad) push sti xchg in js fmuls xor cwtl pop aad (bad) dec je push (bad) jecxz pusha enter scas or pop push xor jb jp push arpl outsb xchg cmpsb lret sub cwtl xor or clc pop lods mov cmp dec out js pop push fdiv hlt jo xchg addr16 rcll out adcb pop jb lods jo lret fisub jecxz and add mov enter rorb add mov loope fwait pop mov lea add xchg test dec stos (bad) ds sbb mov dec adc pop stos pop adc xor (bad) scas push mov fisubr mov loopne enter stos xor repz mov out mov mov in (bad) sar pop or movl stos jae movsb ljmp xlat mov repnz xchg in ja fnstenv mov cmp xor mov adc adc dec test pushf int (bad) xor add inc dec xorl fwait and push addl scas fiadd mov scas sbb fcompl popa xchg dec xchg jns outsl dec sti pop push mov add sbb in and nop mov mov or into jle mov sbb mov xorl inc imul fs push cmc dec roll int ja push xchg push cmp mov fimull add dec sub fwait addb (bad) lret xchg sbb roll sbb push movsb sub cmp and push pop int aas stos jmp test push and fstpl pusha fisttpl add add (bad) scas cmp mov fcoms mov aaa inc ret xor pop push dec (bad) dec cmp int and xchg mov adc iret cmp cltd pop xchg xchg in mov rcrb lods daa nop or (bad) mov xor lcall lods sub cli ljmp mov loopne mov pusha mov jne xchg inc bound aam xchg pop jb push fwait sbb mov mov shrb jo mov lds cli cltd pop repz imulb dec sbb (bad) in popf scas xor out imul imul je (bad) sub lret or cmp mov cmp or push dec inc push js mov sub sub push repz xchg xor (bad) jne xchg adc and mov mov xor or loopne das arpl repz insl dec bound loop imul and mov jg repnz add das in out mov sub push int mov iret pop das adc and daa add mov jae xorb mov xchg add andl ljmp call lods sub dec jb ror test pushf or jge shll add mov xlat ja test scas add jbe xchg std jp jle jp xchg mov popf repz jb jo jg roll mov push and add mov sbb sbb xchg test cmp jnp fwait (bad) mov imul (bad) dec aaa fidivr xchg add repnz test mov or fmull mov add aad add inc push sbb cmp insl lods mov stos cs mov (bad) mov xchg lret pop or ja out icebp adc adc xor shll cmc mov mov cmp movhps cmp sub arpl xor sub ljmp iret fildll aam popl adc jo ljmp insl mov incb mov or mov frstor repz add lock rcrl or mov hlt mov push iret fwait cmp rclb xor cmp or subl scas cmc push inc out jl dec stos fldt iret aas dec (bad) jo inc push inc enter into cmp cmp test fmull cmpsb in jmp or fwait xchg cld pop dec aas stc mov xchg inc pop repz inc rep jae shll cld inc sbb aas pop fidiv mov les mov push shrb rcrb (bad) std pusha mov pop icebp or scas xchg cmp iret daa icebp and sbb cmp and cwtl int and mov shll xchg mov cmpsl push xchg addl inc divb push cwtl imul mov mov mov jbe mov imul mov push push ljmp cwtl adc mov jge imul (bad) mov cmp dec inc xor adc ficompl mov mov cli jnp ret test imul adc arpl lea dec stos xor or jge fs je cwtl jb dec call sbb mov int (bad) push dec lret rep xor loop mov hlt jmp sbb jb aam pop or push jl push in xchg pushf cmc jno jae cli mov movsb cli xor sbb dec adc pop imul aas sbbb cmpsb xor inc icebp or push mov inc add xor test and xchg push hlt ds dec addb cmc pop leave ja decl mov jle aam adc add jge adc mov cwtl lret jmp dec inc repnz dec popf fwait (bad) mov add addr16 mov sbb cmpsb cmc xchg jecxz int3 das push dec xlat mov outsl dec xchg jo mov in lcall jmp sub hlt or outsb sub xchg or mov repz mov (bad) aam and fsubr lods push cwtl inc movsl loopne mov in jo stos mov adc sub xbegin ret mov xchg push pop mov fdiv in mov adc sub push arpl imul popf and hlt xchg imul sub inc leave je xchg lea or push xchg xchg and (bad) (bad) (bad) das add mov andl rorl jae jne test xchg xor jo push int adc arpl push aam inc mov sbb ds adc out or mov add cmp repz xor sub or movsl jbe cltd repz in jae pop aam sbb cmpsl shl roll in pop sbb mov sti jae les scas loop dec int3 add sbb add jb lea jg xchg mov fidivrl push not outsl dec xchg into icebp (bad) dec cmp fsubl minps popf test mov stc dec mov int mov testb and gs mov mov gs and cltd xor push adc push adc lock pop mov mov dec sarl loop pop out mov inc xor cli mov loop cmp adc cmp hlt je mov pusha or push push cmp loop pop jge jmp mov mov sbb xchg divl clts mov in clc mov cld mov xchg sahf cmp rcl pop scas dec iret xor movsl jb sbb mov jge push insl bnd ret stos loop inc stc pop jmp mov jecxz js lahf mov xor mov jbe sub sbb (bad) fidivrl xchg (bad) sar in jmp cmp sahf pop leave add mov cmp adc jl setge mov or movsl int rcll hlt xor mov call dec xchg call rorb push je insb jb dec loope (bad) int3 jge xchg sbb (bad) add mulps add xor lahf push outsl push cwtl insl and fcmovnb push lahf jp push push mov push movsb in add add scas ljmp xor sub int3 mov std pop xchg dec daa in mov enter pop jne mov nop or mov push sbb ret cltd (bad) or test lar push jo jnp jns inc out stos mov into xor push or (bad) fimul pusha mov addr16 mov or addl xorl fsubrl add add cld (bad) adc push stc movsb push ja ja xchg pop rdtsc mov sub mov iret mov jno icebp or movsb cmp fcomip psrlw adc mov jge cmc lahf les or rol (bad) lret dec cltd cmp insb and test push pop lret fild cs inc sbb imul lds or lcall sbb xor leave jp or ljmp pop cltd mov lret int3 dec cmp icebp and sub loope xchg mov cmp jbe sbb fcmove rcll int3 xor mov jmp jno or lds mov push push push orps jg sti in in dec add jg fmull jl out (bad) adc pop mov (bad) insb mov clc mov mov sbb dec dec icebp ss mov jns lods mov inc int mov inc xchg dec scas loope mov (bad) out movsl out rcrb mov jge mov into and pop nop mov xlat or nop adc hlt in mov and gs add push lods add jle cmc jp (bad) inc ljmp cmp xchg xor js movsb lock mov mov fsub cld mov sti (bad) cmp (bad) stos jb push movsb ljmp dec les jno outsl je and bound ja dec inc add in test ja jle add mov push push push outsl (bad) sub pop ficom mov mov pop call call and mov mov scas (bad) push adc sbb xchg (bad) aas add imul inc stos and movsl aas and int push (bad) pop orb fistpl test jb,pn dec arpl sbb ds jge sub rcrl push jb fbld inc loopne cli dec std mov insb pushf ss push repz sub outsl enter push xor mov or xchg mov push imul cld (bad) imul int add dec scas rcrl mov aas push adc xchg inc iret push xchg jno call iret add jp jp fild mov sbb int aaa inc push jge rorb lret (bad) inc push aaa clc sbb jle jb mov mov in push mov xor addr16 bound mov in sub stos mov (bad) sarl loope add jg mov lods pusha arpl and lea adc pop fsubrl pop adc sub test stos dec mov push push push jge pop mov jmp mov mov pop in mov push shl (bad) mov jecxz test push inc (bad) xor popa jno pop xchg shr mov fldenv xchg push mov mov cmp push (bad) dec aas dec cltd loopne push fcoms sub enter add ja clc fiaddl sbb sbb ss or into push sti and mov loope mov pop xor mov cmp lret sar fndisi(8087 inc cmp jp mov lea sub out dec loop add (bad) lret sub jl mov scas (bad) sbbl insb sbb test xor mov stos (bad) push dec xchg repz inc cmpsl jp insl jnp ret pop xchg push scas push mov inc daa hlt jb frstor popl jp test test out xor xchg out xor mov xchg and daa int jp sub fsubl loop (bad) jno and mov pop test mov cmc enter jmp pushf mov lahf icebp and and xchg ficompl cmpsl shrb mov shrl out jmp cmp imul mulb fwait sub aam in std jo inc popa sub push cmp (bad) mov into faddl dec insl cmp pop mov sbb aaa push gs jbe lret jno adc sub inc mov daa fisubl call xchg dec adc leave mov xchg lar ja lds dec into sbb sub xor xor xchg dec cmpb pop dec sbbl out jns insl insl or push push pop fistp incb xchg js and paddd dec in in (bad) jo and mov clc push pop add dec insl je stos cmp (bad) jnp cmp cmpsl ret insb xor cmc push lea pushf add out gs adc in inc cmp das and jns dec cmp pop adc xor sbb inc inc pushf dec in xlat mov pushf mov jae mov outsb ljmp sub ja push leave lahf mov daa adc sub mov sub push (bad) push adc fiaddl mov push add or push cmp xchg jnp cmpsb mov push inc rol sti inc repnz lock xor xor aaa push cmp pusha jae xchg ja adc insl fdivr into movsb push mov inc xor repnz mov xchg in fldenv add xor andb xchg enter sub jns lahf and add add pop pop sub outsl mov das xlat cmp xlat sub ja clc mov xchg mov xor les pop fdivr repz sbb (bad) loope cld lods xchg xor jmp push push inc mov loopne cli shll mov ffree mov adc or rolb inc cmpsb int (bad) cmp and jae push or dec jmp and imul dec (bad) sub inc lock add mov dec loope inc pop orl push cli in sti add jp clc pop inc xor adc push (bad) mov add or ret mov fidivrl out pop lcall jb xor leave das or std inc (bad) mov scas pusha cmpsb movsb jns xor adc adc popf movsb jo fdivrs mov das fcmovbe jp mov xor and mov lcall loopne cmc cmp add xchg jo push cmp ret insl ljmp pop push fisttpll mov inc ljmp in mov push lock cwtl cltd daa lock add mov fistl mov (bad) xor mov fldcw subl push cmc pop dec sbb (bad) adc push aas mov icebp sub mov insl sub adc xor pop loope ds push cltd (bad) jl arpl lds push sbb iret push mov and insl xchg inc adc mov adc fsubs mov xchg jecxz in fcompl cmp push imul and push dec (bad) fistpl into loope (bad) jne xchg es (bad) mov cmp dec js or inc mov inc adc jb lret fisttp imul push (bad) aam sub pop imul sarl mov sub lock fsubrs lock xchg fist std pop jle push out pop test clc xchg idivb or xchg nop (bad) lret sub sahf dec adc hlt xchg xchg jno lcall popa cli faddp or lahf nop lahf xchg mov mov cwtl mov and sbb inc add cltd nop das sbb aaa push test pop cmp outsb xor fldt dec mov mov pop cmpsb lds stos and sti cmp arpl sbb xor mov (bad) jno mulb sub lods stc adc cli xlat jo mov cld lods int3 pop pushf pop test test jne mov adc lret mov dec pop cmp cmpsl or xor arpl dec leave dec repz sub xor push mov imul popa pop push cmp lret imul inc mov sbb inc xchg fisttp or scas call es cmc mov mov inc cwtl daa daa sub and or clc ss xchg or pop aam pop sbb div imul sub loopne lea lret dec (bad) insl mov jl psubsb (bad) pop ret mov out das in adc fs outsb mov jl (bad) cmp dec sbb imul cmpsb inc cmpb push fist cmp ret and imul out cmpsb adc cmp push add cmc cmp scas and lcall mov mov xchg arpl dec and mov int3 daa frstor mov fwait out xlat add daa jae fimul add shrl or leave (bad) sbb fcomps sti mov fldl es push es sbb idivl popf sbb lret ret (bad) rcrl sarl popf xor dec sub inc ret daa into sbb pushf iret sbb pop sub or fs bound daa jecxz pop mov ljmp or sub repnz shlb sub arpl outsb mov mov fisubl push popa sub sbb sbb push push loopne lock cs dec insl cltd xor in (bad) out xor push push pop fwait mov dec pop pop adc scas js sub jno fimul and enter inc in movb push or das aaa lds stos jle adc test jno dec jmp hlt push es repz mov insb cmpsb adc inc roll xor jnp push xchg test mov xor pop sbb imul jmp xor int jnp dec insl mov adc lods sub fdivs lock std pop inc mov mov aad fmul cld mov sub sti pop lahf addr16 sbb xchg dec test gs (bad) fisub pop or leave (bad) mov and ds js mov cmp lahf or fbld repnz sbb outsb loope scas sar scas push xor fsub iret mov dec (bad) jecxz (bad) add inc xchg mov (bad) repz loopne clc jle add fimull fadds dec push stos push mov (bad) jnp xchg push cs sub xchg xchg push adc bound lahf fwait cwtl int3 add cmp rclb adc test push jne test pusha push rcrb push mov mov jnp push push lods in fidiv stos adc xchg adc pop or mov mov pop jns gs mov mov mov ja cmc fwait jle int3 inc nop sti test ds mov mov xchg fdivr jno hlt mov call xchg ret add out inc mov repnz call dec popa pop mov sti test cs divl mov ja shrl outsl jecxz lods cmp xchg add clc fs push cmc sub adc and lods jmp mov or sbb inc pop ret inc std add int3 mov notb jg ss arpl lds lods cld pushl psadbw hlt xor fistl mov or mov sub stc xchg mov gs pop jno mov cmc mov bound adc out jns ds ja inc mov pop nop movsb xlat xchg jns and and sub cmp dec fidiv mov add push xor orl cld mov dec aam cmpsl scas dec loop mov in sarl add adc and es pop mov pop out bnd sarl test into sbb out adc ret ss bound xchg pop js pop popf fldl int pop pop sub ret or stos idivl mov mov mov pop dec mov stos insb inc fistpl (bad) or inc bsr dec outsb jge cmp insl inc jle xor xor lret mov push (bad) mov (bad) loope addb icebp fsts cmp cltd rcr dec push mov sub inc or adc je insb addr16 fdivl jns iret insl lea (bad) (bad) jo lret sbb sbb sar add jmp clc pop (bad) sbb addl sub pop push mov and testb pusha js mov cwtl add cmp mov and scas data16 aad or mov jge inc push xchg iret cmp mov stos inc push mov pop mov setle jae inc inc test mov fsubl fisubl (bad) cltd fwait add mov sarl inc stc jo out jecxz lahf pop pop jae movsb cmp (bad) push push dec clc cmc pop mov iret mov imul mov fwait adc cs out mov and mov iret and (bad) shrl mov jno mov test xlat loope insb ds cmpsl nop fcomp test ret rol sbb repz in sbb and cmp push nop xor test inc add lcall lret out test lcall sbb insl xlat cs lods inc addr16 xor push xor daa int3 mov jb jbe incl add cld ds and aas pop cwtl inc dec mov loop (bad) std and jle pop ja mov test pop stos xorl mov jle out fs movsb xor stos dec ljmp cltd loope fistl in les jl xorl sbb movb out lods into xor mov xor mov lcall adc movd pop popf rolb xchg mov mov repnz pop mov fdivrs ja repz lret sahf (bad) mov sub xor (bad) lret (bad) repz mov dec mov popa test sub sub pop sbb es sub mov push mov cwtl sar fisttpll xchg dec int3 inc inc lods mov and sub jmp (bad) jbe movsl sbb int3 dec mov inc ret ret pop lods sti push mov (bad) jnp bswap sti rorl (bad) clc movsl push stc xchg and fmull je pop enter mov add sbb jmp (bad) sbb lods movsb mov iret mov inc enter push jo sub cmp loope es out sbb adc push out xchg and int3 cmpsl imul (bad) (bad) je das je sbb in mov insb mov push jecxz loop xor mov test negl push jo xchg notl sbb sarb jle xorb push idivl cmpsl leave ret imul and pop pop mov jnp (bad) imul cltd xchg incl outsb inc jne mov dec adc sbb sub stos (bad) idiv dec xchg arpl add hlt ss add xor or (bad) pop roll cmp sbb mov xor push decl mov in mov loopne sbb nop je mov into mov mov in (bad) cmc mov sbb lds mov push lods ret pusha into mov loop popa mov nop jecxz xchg pushl push ljmp popf dec roll mov cltd fimul xchg (bad) rorl push repnz mulb gs xchg pop mov xchg jl ljmp xchg sub (bad) cmpsb addr16 stos xor std pop aas and sub (bad) fcomps leave cmp icebp push sub sub out mov inc jle das sbb mov dec (bad) pop cwtl (bad) dec mov lods push and pop imul jno daa and jge scas sti aaa xchg mov sahf mov mov les arpl mov jle cwtl sub insl rcrb adc ret pop popa iret sbb pop jmp and push das popa rclb jecxz push stos orl shlb push orl call push xlat cmp addr16 mov rcrl out js (bad) and ljmp fldl push ret daa lret lret sbb movsb mov lret push (bad) icebp addr16 je es rol mov lcall shlb dec push (bad) dec cmp pop das mov mov xchg and cmp mov adc lahf push push mov sbb push sub push inc ja xor aad stos sub xchg test add sub jge mov pop pop mov push rsm daa mov adc repz faddl xchg ret dec mov das sbb jmp aas repz in (bad) enter mov int test rolb jecxz add pop pop jp fwait and mov inc mov or sbb adc push mov mov mov cmp push cmp mov int3 rcrl mov out mov or in xor mov sbb orb pushf and dec jns fistpll xchg adc push pop mov add shrb (bad) mov fcoml jo sar cs push jae add scas push das repnz sub xchg cmp sahf sbb xor mov inc iret enter addr16 adc push adc fmulp or lret ret xor push mov adc test jle sub push (bad) push mov inc dec jg xchg dec inc cmp cmp mov adc (bad) or xor sbb adcl test js (bad) nop push je xchg daa outsl inc lea andb cmp sub sbb xor mov lods (bad) data16 dec imul out negb std sahf pop imul movsb (bad) mov mov sar hlt (bad) adc popf divl ret xchg add push inc sbb pop pushf test ficom cmpsb or adc aas repz mov popf (bad) mov vcmpge_oqps cld sbb imul cmp cwtl lcall inc stc and xchg adc jge adc rcrb sahf enter adc inc adc jb lock aaa adc sbb rcrl rorl cmp out pop leave xchg (bad) out ret sbb mov jl nop pop lahf dec stos pusha pop mov dec push push inc mov psrlq int adc les icebp mov shrl call clc insl push lods daa mov adc jmp xchg repz add pop mov xor adc ja in loop xchg mov sbb push enter cli pusha jns inc sbb loop pop test aas inc mov andl jl xchg or gs pop mov mov sub aad sbb inc jne pop sub inc mov pop xchg lea or dec xlat dec and cs int jl cmpb into xchg fdivrl pusha cwtl lods and sub leave lahf pop addl das movsl out pop add mov ret test mov sub cli sub pop dec and pop mull sub inc rcrb shrb pop ficompl adc imul out pusha idivl mov mov pcmpgtd mov mov inc insb lret lds in mov lret jno pop cs jg xor add mov sar dec inc jmp test mov add jbe jo (bad) sub adc inc cwtl sub fwait and aad mov lods pop xchg mov inc (bad) or (bad) pushf xchg mov add mov dec test (bad) xchg and enter xchg stos sub int add add and pop roll cmp jecxz (bad) fisubl out dec jle gs inc fimul xorps aas mov pop and lds fidivl in xchg xor shrb xor and repz das fistl sub add lcall dec fs cmp mov sub dec fcoml iret js sub popf dec test and inc push push dec je popa or dec cltd jmp lea inc aad (bad) cmp bound leave add xorb xchg lods (bad) clc lods sbbl fiaddl push and xchg (bad) xor mov mov sub inc xor lea lea mov xchg sub xchg (bad) push xchg ds mov push jecxz xchg lods cmp sub fldt inc mov jl imul shrb jne aaa movb and test adc add scas cmp jle call pop clc and xor push int3 and lds in rcll jae mov inc (bad) or (bad) shlb dec (bad) sbb xchg rcl addl inc enter and pop cmp cmpsl xor std adc popf lcall xchg push (bad) lods and (bad) (bad) pop fs mov insl out sbb dec stos mov sbb adcl jp pushf scas xor out ret addl mov int ds cs cwtl sub mov jecxz stc jo cmp nop cmp dec pusha shl cmp fnop int3 pop scas pushf (bad) shrl pop out int3 iret pop or hlt out pop push mov aam pop mov mov (bad) sbbb mov or cmp mov push mov pop and xlat fmuls pop mov add jb scas sbb dec pop cmp push notb jns add push inc mov loopne inc pusha push ja push xorl xchg jmp mov push imul and adc repnz out sub aaa add pop sub (bad) xchg adc pop cwtl out icebp cs push test (bad) data16 xor or add cld inc daa sbb popa dec fsubrs or movsb stos loope call sub jne ret ret mov aam sub add mov cmp push push mov cmp xchg mov icebp dec daa fcoms inc mov repz in adc jg add aas shr es sub sub (bad) fstps enter addl ret pop das fistpl iret mov inc ret xchg cmp mov mov mov cmp push iret xor hlt leave and jl push (bad) sbb push adc insb jb rcll into xor (bad) sub test ja insl arpl sbb int3 insb stos push test pop outsb test adc pop pop dec sub js cwtl and rcl jmp or aas xor fidivrl mov mov mov sbb imul data16 loop mov jg jecxz mov sbb int3 and ljmp movsl add xchg icebp or push add les (bad) lret bound or inc jmp outsb rcr imul mov and adc add or lcall xchg xor (bad) aas push sbb jbe cmp sahf addr16 iret push sti mov decb in (bad) mov pusha mov dec and pop ljmp or dec ja insb cmp sbb cmp inc insb call movsl out fwait lret cmp ficompl xchg xor inc or xchg dec fptan loop inc sub sub stos ret loop and lret jmp ljmp (bad) xchg lods cs sub cmp xchg cmp cmc cmpsl adc addr16 or sahf cmp aad sarl mov push iret xchg xchg sti outsb lret lock pop mov out push mov dec push enter mov xor jns iret or jp jae mov clc shll mov inc iret mov scas add add mov xor jae cltd adc xor pop jo cmp out jge popf cltd or add fcompl pop add push popa pop mov sbb in adc je int jbe pop outsl ja jbe jnp pop dec cmp cmpsl pop loope add lcall test (bad) cmp dec push sbb cwtl jne xor xor adc rcrl cmpsb aaa mov or jae loopne jmp or nop addr16 jge or cmp pushf xchg pop dec leave adc mov loop jae stos mov sti aam jb xor cli out out inc sub aad mov jnp shrl insl jp jne fldl2e (bad) in repz dec movsl push dec sbb (bad) faddl jmp fdivrs lock mov or push aas fisubl cmp push push pop and pop mov into test or inc in mov push inc jp jle bound xlat xchg ljmp clc loop pslld or rorb iret je ds pop mov sbbl jnp (bad) loope lret rcrb adc icebp rorl pop mov clc test sbb and pop cmpsl popa pop mov js leave notb mov pop adc fild and daa push cld sub inc clc jg in lods loope insb pop jmp xor inc les push ja in push cld sbbb fidivl mov and sbb jbe add sbb jno xor lahf push add xchg xor lea jl js cmpsb cmp lcall mov jns test adc add loope fwait mov add and js add lock popf xor aam xchg mov scas test pop add jecxz and and inc jmp or ret mov push (bad) jle and hlt push xchg pop test or fnsave (bad) jno jl cmp push in or test fs fist or stos (bad) mov out push cmpsl adc xchg psubusw cmp cli stos lods cmp inc push fstpt test inc enter outsb nop repz stos mov and xchg jno inc sub jae push mov in inc mov mov out (bad) imul fldt (bad) ds mov xchg jle push inc faddl add loopne jmp add pop mov sarb rclb stos pushf int (bad) cmc enter mov and pop pushf adcl gs cli mov in jle fdivrl inc mov jne cmp (bad) push scas ja iret out push pop imul mov pop (bad) push pop clc (bad) repz xchg mov repnz mov jae sub mov sbb repnz xlat das cmp rcl dec jnp dec mov adc xor call sub pop and testl sbb sub nop out xlat lock push push cmpsb ret xlat stos ret push jecxz inc mov popa sub imul sub push adc inc sub cmp call cmp push out movsl push sub or inc lds or leave lret movsl in push adc mov cmp mov scas in xor popf xchg call jmp jae dec push mov jecxz or (bad) or popa sub icebp (bad) jecxz,pn fsubrl dec or xor cmp imul add (bad) and addr16 jecxz popa mov jl push rorb xor push push les mov mov ljmp ds cmpsb dec mov xor dec adc mov je adc ret int mov cmp push add mov in mov dec add adc jmp add (bad) ds push pop imul inc les scas hlt mov jg faddl jg or (bad) (bad) push adc sbb fs cmp lock mov scas push enter pop data16 cld dec pop xor int sarl mov std jae mov or fs inc ss notb mov dec jmp jge push mov and push cmp mov pop sahf xor mov movl push subb ret jl or popa xchg pop scas cmp and out or hlt mov mov or insb push pop pop xor push loop add mov pusha mov lds push or pop mov xchg push inc cmp daa jnp push fldenv popa jle jg pop fmul sbb pop ss or addr16 inc lcall adc xchg push rcrb (bad) lret fisub add xor sbb bound adc xchg push pop cwtl pop inc out jae loope lds add xchg add xchg mov sti inc add push shrl mov repnz xor js scas mov push or xlat xchg mov movsb imul aad sbb dec or cli jno ds fistpll in xorl imul insb mov icebp mov mov pop jecxz mov inc inc scas mov and ja pop mov cmovae add sahf mov cltd rorl arpl iret ljmp xor xlat outsb mov dec cltd inc cmpsb movsl ss or fs xchg mov repz lock int mov push hlt scas push pop fcomps stos and push adc out into pop ret sub enter xchg aad das stc push out out adc (bad) mulb in fistpl sbb ret jbe popf pusha cmp sbb add sahf add repz fisttpll test cmpsb pop test cli gs cmpsb jbe hlt fwait fwait lahf clc and data16 addl xchg push mov mov push cmp arpl popf icebp out jle enter mov push andl add rcl xchg mov insb scas in xchg xor ja xlat mov push pushf mov mov mov or push xchg or in leave cmp mov (bad) fs xchg or dec cmp and xchg (bad) xchg add movsb insb jge rcl lods roll sub cli or leave mov push lods lahf cmc sub push in push push add jmp es mov out xor adc jge out sbbl pop psubb xchg mov mov arpl in je add test mov adc jmp dec lahf or movsl adc int ret rol push mov sub loope fwait or mov jg mov add sbb cmc out cmpsl add jmp and add rol cli jae imul and adc scas out or (bad) sbb daa add mov jle adc fdivl mov cmp add push pop addr16 jae jecxz stos add adc lds (bad) cwtl inc fisttpll sbb xchg imull mov mov test mov (bad) jb xor inc sbb and movsb fmulp orl push out pop scas (bad) cmp inc sarl cli pop pusha dec addl pop dec rorb push and pop pop movsl shlb stos sbb cmp mov ljmp imul aas push xor xor dec fildll dec or dec pusha sub repz ja scas rcll loope or mov mov cmp addl push addr16 aaa mov clc cmc add out icebp movq push pop add (bad) push xchg or adc or in mov in (bad) nop xor movsb test cmp outsb call test xchg add iret pop orl aad mov inc mov xor mov xor in inc jge sub fsubl add mov insb xchg jle enter pushf aam testl dec cmc mov push cmp fcompl (bad) cmpsl mov dec (bad) notl in cmpsb addl das gs jns (bad) decb inc sbbl std stos cmp rolb push fimull notb cmc sub outsl jo xchg cmp mov pop loope sbb inc data16 lret js mov dec adc ja dec incl sub aam in jb sbb fisttp inc ss es hlt push mov inc lock fmulp pop pop push cmpsb sub add adc int3 sub icebp inc and push mov lods adc mov and adc jmp test gs loope into je in ss clc in in lahf int3 fwait loope jmp cmp or int3 out out cmp mov xchg pop cmp dec ja xor imul std jnp mov loope sub jbe fwait incl aas jg sub sahf cmp or pop jp sub cmc mov push ljmp out inc (bad) lods xlat xchg fstpl shr add push jg sahf pop or (bad) test or into mov rorl (bad) test pop jbe dec dec fimull adc clc stc lahf es or push loope inc scas inc rorl inc sub pop push cs mov inc cmp leave xchg icebp xor mov fs inc test sbb cmp dec rorl sbb xchg xor sbb push push pop repz cmc sbb loopne sbb inc into pop push nop faddl sbb jo stos ja and mov mov push in cmpsb je lds imul xor scas sub rcll sub andl jge inc pop in dec aam adc push and cmp cwtl jns dec lods adc (bad) mov stc xchg add dec ficompl loope xor xchg push scas sbb add sub pop and mov push jp sbb mov iret cmp xchg sub cmpsb or out sbb dec dec clc loop sbb jle je lret cmp add mov cmp sub mov mov xor clc out fs aad insb mov (bad) pushl sbb sub add and cld les rolb lret inc repnz xchg jge fadd rclb cmpl add leave std mov in movsb jb ficompl jns insb and cmp mov adc xor mov push lods (bad) ljmp sbb negl rclb pop push xor mov push jb jo popf adc std and addl cmp adc jecxz pop xchg adc mov mov xor dec dec imul and lods cmp test aam js dec shlb lcall je loopne adc jnp push fs mov out test jb cmpsl mov cmp add subl ds xchg adc ds adc push dec xorl out stc loop pushf sub leave mov aas es jmp out jb mov sahf lods lcall pop lds enter test add jns test out adc mov (bad) incl jl (bad) vmovsldup lcall dec mov jp fimul inc or jns jmp and movsb jne les adc imul ja mov jecxz sbb jns (bad) aad and ja (bad) sbb sub popa inc sub or ficoml leave int fsub sbb or je mov mov adc xlat xor out cmp push sbb fistl mov cld enter xor pop out imul cmp fs sbb lcall or fs repnz jbe sub lock xchg repz adc jo mov mov jle sub adc or pop push mov add scas sti dec dec xor xchg popf add dec outsl repnz andl push sub in lea jae and jmp or aam (bad) sahf mov inc lret stos xchg sub jbe cmp cmpb add dec jge cmp imul jp jns rcrl cs cmp mov push cmp hlt sbb in arpl pop jbe sub fidivrl push jl add fcmovne dec arpl test imulb mov pop clc mov mov add lret pop dec dec scas scas pusha loop (bad) pop lret (bad) bound jl xor mov add fisubl ja adc jp (bad) imul pop hlt fdivl mov jns xchg rep add xchg mov lcall or jmp lcall or out jmp sub int clc push sub sbb test in fstps pop adc push add cvtps2pd vhsubpd jg,pt shll stos cmc js ljmp cmc push movsb add das jo je xorb lods jge incb or roll es push (bad) sub push imul push cli scas (bad) shlb insb fcompl (bad) repz and xor add out lods and mov stos mov adc mov cmp outsl add and add dec jecxz xchg inc add outsb lcall jbe inc mov dec movsl out and loope cmp add mov sti mov inc inc push lds pop adc lahf mov shrb mov pusha push push lahf aam inc sub push es dec sti adc cmpsb jmp les adcl jmp sti cmp xchg outsb hlt out call or std lahf mov jbe sub dec jnp add sti (bad) (bad) mov aad and loope clc cwtl stc sahf push scas fiaddl cmp aam orl jbe mov and sbbb xchg lock cs arpl and in pop mov (bad) pop fisubr jae or or mov es adc adcl push jne jne jae cld mov ljmp (bad) xor push push sbb dec in daa imul fbld pop mov aam inc xlat jbe fwait sbb mov call mov cs arpl lea inc adc out ja test jge pop lahf mov fs es pop (bad) xchg inc daa mov gs and ret out pushf push iret ficoml jmp add arpl sub mov mov clc incb lods xor ror cmp xor sbb out es pop pop jbe mov xor je in fisub dec pushf xchg add xchg or pop cmp mov add shrb in mov test cmp sub bound int pop inc movsb fs or iret mov and push data16 divl dec mov ret push fninit sbb push xchg mov xor sub je cmc cmp sbb sbb ja inc lcall in mov flds jle or rorl sti mov mov fcmove popw jno jo std mov push sarl mov jg mov scas div sarl mov adc mov pop (bad) adc inc or mov (bad) repnz mulb ror jb mov mull sbb jp sbb add dec mov fnop mov fisttpll xor xor lcall (bad) jne sub add mov xor imul sar les scas pop aad sub sub fidivl les cmpsl int sbb dec dec enter loopne xchg aaa ss (bad) bound adc jae jbe pop aad dec pop sub add movsl je dec rol lret mov cwtl ljmp nop mov xor mov or aaa popf fdivrs jns and push inc pop stos pop call add adc adc leave pop mov fwait xchg cli inc xchg sub xor add mov mov xor mov mov scas jno lods push cmp mov out push pop pop sarl push inc ret sahf loope pop lock inc mov cmp inc nop (bad) lcall addr16 mov jns addr16 fldl mov lods cli cs int3 out jg dec int insb cmp das out jmp adc sbb cmpl lock lods jo icebp pop wrmsr (bad) gs inc (bad) pop lret pop adc jbe jb pusha sbb pushf movsl push mov aas xchg pop stc cltd mov pop imul (bad) dec aas sub fldenv pop xor hlt adc adc dec xlat xor push aad xor cmp jmp or gs sub insl mov add in paddsw jo inc outsb clc fnstenv push sti jl les jl pop dec xlat scas nop stos inc jne cmc adc sbb inc pushl stos (bad) fdiv lret aam in int or dec insl cltd xchg jno ljmp mov cmpsl xchg (bad) dec std roll xchg lods sub cld testl cmpsb jo xchg push andl mov pushf xchg mov sbbb mov sub cmp es xor leave hlt lmsw sub sbbl das fisttpl pop mov jnp push xchg scas pop cmpsl sbb insl icebp aas shlb (bad) xchg xor repnz fidiv push sti fdivrl (bad) stc jecxz rorl ja pop and sub outsb jle or push add out lds stc ja test inc shr or fistl mov ds xor or sub and into mov fsubr push xor fcmovne add adc mov (bad) add mov stos mov jl and jbe pop out pop xchg xchg mov rorb and sbb mov xchg push xchg imul ret and add xchg cmpsl scas in pop jmp lock xor (bad) or sbb dec sub scas scas (bad) lahf lret sub ret mov dec dec insl scas jae xor aad push inc pop xchg dec int sarl test xor dec stos loope and cmc inc sub scas and pop mov bound mov ds jp sahf std pop mov lods sahf cld mov mov jb lret mov cs shrl popa mov into icebp shrl aam lcall jnp jne lahf sub fwait dec test jb (bad) jnp jae mov fidivr pop mov mov cmc mov inc int (bad) push ficompl lahf sub inc push push add jmp shll scas inc ja (bad) fcmovnb cwtl xchg jge jl sub push pop mov js dec in add imul je out js (bad) mov icebp (bad) enter hlt jl mov push js push jl add push (bad) adc stc mov xchg mov sub (bad) popf mov scas mov or negb xchg xchg adc out or mov ficomp mov sub xor sbb leave out or xor push insb adc cmc fdivl into mov out fstpl adc prefetch int and cs jg std arpl popf xlat xor ret enter mov pop lods es lea push jmp jae insb and incb dec es jmp repz mov dec push (bad) movsl sarb nop iret mov sub iret add test into add pop pop sbb pop jmp pop or dec push (bad) jo imul push sub mov stos add ds cltd mov ds inc neg jecxz and lea or cmp pusha jb sbb inc xchg pop pop ljmp push xor and and jae jbe (bad) cmpsl dec pop xlat rcrb popf push pop cli or mov mov jbe fs mov cmp xchg pop xchg adc mov xchg dec lahf in stos out xor adc mov (bad) cmp (bad) (bad) aas aam (bad) cwtl stc mov je sti xchg or addr16 in push push cwtl scas add mov add gs jns and cmpsb jecxz lds aam mov mov xor in sbb jle imull mov scas and sti mov lret dec repz cmpb fsubs adc adc outsl pop mov jb negb sub fistp enter jbe lahf adc popa push pop out cmp dec movsl in scas imul rolb mov cli sbb jl dec jl and cld fbld jbe inc adc out icebp fdivl push or lahf enter pop inc push in or mov add das add in jge (bad) jb mov dec mov inc xchg paddusw stos popf movsl add pop movsb fimull mov insl mov rol mov loopne pop popf mov icebp mov pop dec sarl lods mov mov setp and add inc je and mov scas push pop (bad) cmc repnz rorb adc cmp nop dec es xor dec cltd sahf push mov mov sub popf cli loopne in adc push mov inc divb jo jns mov xlat (bad) push cmp test insl test aaa jns mov sahf sbb test inc les or sub in pop and stos out mov lods sarl mov ds imul mov ret mov movsb push addr16 mov cmp stc xchg repz andl (bad) xchg or imul clc (bad) jnp dec xchg cmp mov int3 push das ds jb and xor (bad) scas inc jl add xchg (bad) mov jmp popa decb sbb ret xlat push in pop cltd ret mov (bad) sti bound clc faddl lahf xchg lods repz jl lret shll outsb loope cmpsl pop fcoms cltd inc add mov add (bad) xor mov (bad) pop sbb in (bad) mov jle lods mov packssdw sub lods mov pushf rolb push xchg outsl insb hlt repnz jmp ret jp pop fistpl mov push push pusha mov fdivp cmp lock cmpsb testl pop jb xchg addr16 dec shr xchg data16 mov pop js test es jl xchg popa fs cltd add mov cmp and or notb push cmp mov inc and mov jno jnp pop xchg jae into and sbbb mov dec mov adc imul shrl pop das in xchg scas iretw (bad) mov bound pop pop sub or scas (bad) lcall and imul gs sub stos insb leave arpl scas js (bad) xchg push dec in mov das dec fwait lcall push in out mov aad hlt repz pop (bad) ljmp xor adc outsl dec cmp loope insl fcomi sub cmpsl or jl mov jmp pop sahf jp push xor add (bad) cwtl mov mov movl mov shrb mov mov (bad) das scas mov sub add xchg fcoms pushf repz addb lretw shll lds and leave mov jo fdivrs lock inc push jne mov mov xor (bad) cmp mov scas fcoms insb cmp cmp sarl mov jno adc push xchg cmpsb mov loop sub movsl jne orb lods mov xchg mov cmp mov pop jbe insb jmp mov in xchg loopne mov add jmp repz pop jne xchg int3 xlat enter jbe push hlt mov (bad) pushf xor fisttp jmp cmp mov mov sub mov mov aas xchg stos sub ja add in test pop and xchg inc in or inc popa ror push mov lret cmp leave or std enter enter cmp stc and pop lds pushf mov mov sub mov xchg push mov xchg jne jne mov push sub push jb leave jecxz mov (bad) dec das (bad) iret xor adc insb adc push sub cmpsb or mov insb ss pop add pop fiadd and test rcrl (bad) add aaa sub mov (bad) (bad) aas pusha (bad) adc int3 icebp gs stc mov or push aad dec xchg shl nop lods fwait popa ret insl mov (bad) mov ret mov dec fild push stc push add cmp out pop jne sbb xor (bad) insl dec test ficomp mov or in mov mov mov mov call and xchg mov xchg push pop pop adc mov loopne fisub sti ljmp lds (bad) shll fs push gs jb sub sbb pusha cmp mov dec jle rolb notb popf cltd sub adc movsl cwtl mov repnz and xchg lods inc jnp inc xchg mov hlt addr16 sbb (bad) mov jecxz xchg ja,pt shrb push cwtl pusha inc sbb pusha jns pop faddp mov mov push ret cwtl test or (bad) mov out gs adc std pop enter push lea inc pop sti or mov popa hlt dec mov mov int3 cmp cmpsb mov push ds (bad) je jl outsb dec mov adc add (bad) test push bound ds cmpsl loopne enter push sub fcoml (bad) mov pop sub sub xchg loop (bad) fildll fldl enter or dec stos xchg int or (bad) es movsl and push pop in xchg lock fsubs sahf xor in push xchg imul cmp lods cmp scas pop sub (bad) mov jle jns sub inc cmp push adc inc (bad) jbe pusha ret pop pmaxsw push xchg jne imul aam (bad) aaa pop xchg subl push dec inc movsb insl inc ret dec loopne out sub inc adc mov (bad) jns sbbb aad (bad) sbb fwait mov mov test fwait and cmp or and fldenv lcall push xlat cmp cwtd add sbb inc xor or js,pt mov mov add into lea (bad) lds scas or push mov mov xchg mov inc cmpsb and repz loop mov (bad) call jecxz jmp mov int3 in ds or (bad) clc (bad) mov mov adc adc dec push aaa loopne jp stos and arpl in fs push xchg stos aam sarl ds test and inc lahf xchg jp cmpl test mov insl push shl popf das add pop mov sbb push sub test jl rcrb dec sbb bound cwtl xlat jg int xchg sub call xor outsl push or sarb test cli lods aad loope sahf inc fs lock push add in xchg fadds das mov cmp into (bad) mov push shlb (bad) jge lahf sbb (bad) jno xchg out xchg and (bad) fild add in push negl and loope cmp push push xor mov fisubl mov inc mov adc inc jae gs add (bad) arpl into mov sbb push push mov xor pop daa in cltd jnp inc scas in fcoml jl mov and (bad) cmp pop sub adc mov or and mov sbb adc mov jb stos jbe and mov xchg mov inc sbb jno cmpsb mov (bad) mov (bad) lods sub ret or das (bad) repnz rcr insb aad fs rep decb mov dec and test jp arpl mov loopne scas sti push mov pushf add dec or mov movsl jnp sub mov jecxz ljmp dec hlt shlb (bad) lods in lret cmp sub or jbe outsb dec ja jl mov mov or jmp orl je out insb push fs leave push adc sbb mov fs dec xchg es inc jno mov pop jle nop or fs cmp das roll mov cmp push repnz sub jbe stos rolb subb sarb out (bad) adc jecxz das fcmovnb dec in (bad) pop inc fs dec xor clc push daa adc (bad) out inc sub xchg in loop xchg scas cltd adc cmc rclb push xchg ficoml sub aas insb iret ret addr16 inc xchg stc rorl inc (bad) ljmp fcmovne jb sbb (bad) push pop mov popa jmp sbb xchg jg fcmovnb sub jecxz (bad) (bad) loop xchg push push es (bad) mov addr16 idivl mov mov cmp fadds into xchg cmc pop dec and mov sub iret insb pop adc popf inc cmp push fimul mov mov shr adc inc dec mov mov imul hlt insl outsl push adc andb jp push sarb imul xchg js cli xchg push fisubr cmpsb daa (bad) xor xchg ret call jb stc push outsb (bad) aaa push adc jae mov cmpsb mov jno stc es ret adc popa mov std dec hlt movsb sti fadd cmp and movsb lea xchg out pop xlat dec pop cmp or cmp outsb xchg testl xchg pushf stc (bad) jne push sbb cltd movq xor push pop hlt xor jne cmpsb xor lods ror xor fstpt popf sbb flds cli lods push daa jb int dec cmpsl fisttpl in stos adc xchg mov (bad) (bad) scas sub inc inc leave lods pop sahf outsl mov lcall or lods mov popaw loopne mul cmp or mov movsl hlt add or (bad) and bnd sbb mov dec call call inc loopne pop inc lds mov iret jmp jb or out cmp outsb lahf daa sub inc loope or outsb pop js sahf jge in dec mov je sbb add sbb pop call pop arpl fildl repnz loope pop arpl fstps stos pop or dec (bad) pop popa mov pop push int shl xlat sub fs push push fimull jbe adc mov lods push sub xor js push call ss stc stos cmp movsb xor mov mov push push adc jle mov lea push mov rorb and push inc and in cmpsl jmp std add ss mov or cli mov call ljmp shrl dec inc clc ficomp xchg or outsb scas xchg (bad) mov cmp hlt adc sar cmc cmc test in lret (bad) into es sbb jl and adc fisttpl shrb adc jp dec push mov test cmp test (bad) xor jno dec push cmp imul push inc push dec push sub cmp in insb fs enter add jmp xchg imulb sbb or sub and sub mov aas ljmp sub fsubp mov ljmp nopl aam aaa fdivs addr16 cmp pop aas clc add jp xchg inc fistl fwait xchg pop sti (bad) or inc mov jg mov push cmp sbb insb pop jp andl shl sub dec xor arpl xchg inc (bad) or pop cltd jl outsl popf sarl add pop lret and mov sahf push fstps push fsubrl insb adc out or jmp (bad) (bad) push push inc gs mov sbb pop ja imul testb and add add mov popa or imul out fcmovbe pusha fwait cmpl and adc add push (bad) cmp push sti aad (bad) jecxz pushw cli dec mov test cmc dec mov imul push ficomp inc stc rcl daa leave test (bad) pusha jge xchg add ds push add pop mov fimull pop xor pop xchg (bad) dec rcrb push je mov out cmp roll and enter cmp mov xlat push cs sbb adc jmp pop das cwtl ret cmpsl ret lret cld into sarb jnp pop jl jne dec jg mov iret bound dec sbb aam dec (bad) sub cmpsl lahf push lods sbb cmp arpl jb jmp imul xor dec (bad) fisubrl xor addr16 iret sbb fstpt dec xchg and jmp repz test inc nop rorl in data16 mov dec aam mov or faddl decl add pop pop fneni(8087 xchg add inc or jne adc nop scas xchg or mov xchg das insb lcall xor insb cwtl test xchg jno pop out imul or pusha xchg inc push insb mov xor and dec cmp dec xor sarb ficom xor push xchg mov dec (bad) adc add xlat fucomi std scas mov lret push or dec notl dec das add sbb fwait adc data16 mov (bad) pop clc (bad) out addb or pop neg jae xchg icebp mov xchg int3 sub sbb cmpsb jb into popf mov sub std jl jmp xor or adc or pop pusha int3 and in cmp fcompl sbb mov push sub add sub ret test adc lret icebp add adc xor imul pop cmc test push sub dec fistpll in jge lods pop jecxz imul xor sarb mov (bad) repnz cmp jl sbb and int lret mov or jmp xor push jae adc js outsl dec push push icebp jnp sub mov push aas dec or cmpsl adc pop out cmpsb mov add pop jne jle stc adc sub fisttpl dec mov sub (bad) mov push in push fidivrl pushf pop insb sbb push test popf add pop enter imul mov or out sahf mov and std and arpl push popa test sbb inc pop ret dec mov add repz aam add pop mov stos push push or or fcmovne adc mov jg not cli test repz scas int3 xbegin push mov pop (bad) jb xor and xor loope xor ja cmp lock mov lahf aaa pop mov adc gs fwait hlt add jb lock jecxz mov and pop or cmp jb cmp jbe stc lahf sub je dec je lret cmp insl mov and lcall sbb test push push ret hlt insl or xchg fimull es out add cmpsb jb sbb stos out add imull add lds in push pop enter xchg push sbb bound leave or xlat jp sub xchg adc mov push jns dec jae sahf into and insb jl es dec test (bad) repz in push repz nop movsb out pushf inc dec repz cmp add cmp push data16 sub cmpsb pop sub adc lahf cmp push xchg jmp (bad) fiaddl jge jne icebp and xor dec scas mov xchg xchg cmpsb cld test (bad) jae cmp sbb stc (bad) mov inc lods inc adc or icebp push int mov dec inc (bad) rcrl stos in scas ret imul hlt pop into or push pop repz mov fidiv push and cmc lock lcall push out pop mov aam inc pop out mov push lds jno adc pushf cmp cmovae adc jno,pn data16 test add cmp inc arpl xor test mov into mov push mov daa xchg dec or inc in sbb and add cltd push repnz mov add and pop jns xchg imul push out ret jo and push cwtl sarb ret outsb push or popf mov fisttpl jp je out mov incl mov ss cld adc cmp int3 insb sbb mov pop jae and jmp fldcw adc mov adc xchg mov xlat cltd out movsb notl loope pop xchg loop lods pop or add cltd xchg arpl pushf into inc mov push adc pop pop std cmp sti mov test lret push add aas mov lods and xchg cltd je or test mov sarb add or sbbl sbb add (bad) mov clc push cwtl pusha add mov (bad) jle into sarl sub push cmp jnp enter adc and aas or ret pop xor dec or nop mov in scas stos push adc push or or stos repz dec stos and cld or pop push xchg xchg imul pop clc sar rorb mov mov fs mov pop std lret cli rcll (bad) in inc adc leave pop xchg mov or push bnd movsl in jbe jno int3 pusha outsl cmp mov pusha jb daa movsl cmp lods and outsl or dec push mov and push dec movsl test fisubrl xchg pop popa test imul pop jb adc sbb sbb ret lds adc call (bad) adc jmp test dec sbb adc sub mov and dec imul (bad) xor xchg mov and shr adc lcall (bad) movsb fisubr fstps notl insl pop push into rorl pop xchg and frstor jae cwtl pusha sbb stos xchg sbb arpl test (bad) ljmp pop das dec mov fmull loopne dec bound cs xchg adc ja mov lret and in jb xor jno and mov push dec adc (bad) fwait (bad) push adc xchg push pop inc sbb push lcall xchg or (bad) scas stos adc in fdivrs stc jecxz imul jbe in scas jb popa mov pop fmull (bad) fmull nop mov rcrb int3 push mov inc icebp call dec cs xchg jl sub fnstsw mov rorb dec sub or inc cmp cwtl push pop xor pop incl paddd fldenv jnp xor dec mov fnstsw cmc mov pop pop sbb mov xchg push push jle sahf and aaa scas enter inc mov test pop inc aas mov sahf in mov aaa ja jb pop mov addr16 adc fadds sub adc ds dec mov std push mov or mov xor jns push pop pushf pushf popf ljmp daa xlat cmpsb loop loope aad addr16 dec xchg sub mov inc xchg data16 js fsubr inc add add lea mov les mov dec adcl out mov fstl push movsb add xchg lret fisttp cmp (bad) adc mov push jne xor dec mov js and sbb mov aas mov repnz jmp dec add fidivrl sub mov mov mov fsubrl cmc jl mov setno in xchg insl data16 addr16 ljmp sbb push add pop mov aad pop cld es jae ljmp (bad) mov push xchg aad push inc ja push int3 std dec (bad) jmp hlt repz (bad) shlb or and xor in inc mov xor (bad) repz mov jb xchg add xor push inc xor test loopne sbb pop sar cli imul loopne sbb jg add xchg xorb jbe pop adc mov sbb inc sbb dec jbe cmc mov (bad) (bad) cld mov (bad) mov xor (bad) (bad) xchg ret dec cwtl pop pop cmpxchg inc push jge inc jl adc sbb jbe iret push punpckhdq mov cmp mov hlt je andl outsb xor ja xchg fsubrs xorl jle je cwtl adc xchg stc mov mov jo xchg jle js cltd mov adc xchg jle jge mov testl jne jg (bad) xchg mov xchg jb mov outsl fistpl gs adc jecxz iret adc inc insb pushf outsb lods add pop sbb mov push icebp jl mov nop fisubl out jno adc bnd fist stc leave pop mov cmp jno in cld in sti mov and mov and das xchg test pop add inc lock (bad) push rolb mov pop xor jle stos jge mov stos loope repz lret mov dec mov xor mov mov in push xor lods iret cmc icebp add pop adc setg sbb xchg dec (bad) repnz pop lea fldenv (bad) out loopne jge outsl test mov mov movsb pop mov mov out push add and mov push pop mov or rcrb or divb adc ljmp popa popf mov jno dec or pop hlt popf (bad) shrb xlat in dec and ret lcall aaa mov inc insb lods pop and mov das jg outsl ds lods adc stos repnz ja imul (bad) sub inc gs sahf les ds stos add jle mov push call aaa xor loopne jns and mov and dec adc (bad) mov aaa pop mov cmp push fs dec insl roll in scas or pop les test (bad) faddl psubusb lcall mov push rorl cltd cmp dec (bad) adc leave daa popf cmp xchg sub (bad) iret xor dec and ret cmp inc cmp (bad) mov repz repz shll sahf int3 sbb inc xchg es adc test xchg bound addl dec rep dec lods fidivr sub mov leave and push xchg cmp dec ss push fstps dec repnz lods push ss mov ret aam lcall push insl inc sub sub sub test sti clc push gs add jg jl ljmp xor pop cmc sahf jge jle xor mov xchg sahf or add push jle daa cmp imul jne das mov xchg aas sbb mov test hlt out xchg mov aas into mov dec clc cwtl xchg or sub std add mov cmp xchg dec add shll mov mov ss ret or push es inc addr16 fimull (bad) (bad) jle imul daa test fdivs push or xchg mov mov ficom pop jecxz loopne xor cwtl ss add jmp push jns sbb push jb (bad) jp mov flds imul xor pop add jae sarl mov aaa pushf xchg arpl aaa push test pushf (bad) adc rolb hlt and in push enter outsl cmp (bad) (bad) es mov sahf fdivrs out jns outsl fpatan das and int3 inc popf popa dec dec ret (bad) imul mov mov sbb out mov lret loopne sub nop xchg scas ret pop xor imul inc push add push xchg cmp fsubrl dec sbb adc mov mov divb cmp or test and jne jle ljmp inc inc sub rclb pop lcall dec stos adc out jb and jl ljmp xorl mov sbb aaa and push jg pusha imul sub (bad) cmp xor insb mov pop mov adc xchg and imul pop fisub sbb push xchg mov pop imul xchg lds lret sub enter jg leave add lock sets dec push adc sbb mov pop mov pop push out ds call mov add jns ret stos adc into cmp ret sbb add roll in push flds mov les mov roll leave testl inc sbb cmpsl mov cltd das ret cmp jg ret jbe fimull out fdivr adc mov fdiv cwtl jl inc xchg adc cmpsl mov nop mov movsl fcmovnbe stos lcall xchg sbb data16 or jbe int3 ja dec fdivs nop jge sahf ja ficom xor mov data16 xchg bswap rcll cltd pop add out in push shlb xchg xor lock mov lret sahf lahf in sub pop addl movsl mov (bad) adc sarb mov jge icebp xor push sub push outsb jns fnsave sti in divb xor (bad) js loopne sbb sub es shrb testl mov test add mov xchg cmp inc jge hlt and rcr mov imul pop cmp xor sbbb pusha inc mov pop mov cmp dec jae xchg je mov sar cmpsb test dec cs dec (bad) dec (bad) pop xchg inc sbb js lods lret adc dec jae (bad) arpl ja mov mov sub lock adc movl icebp rorb ret mov mov push pop mov mov push mov repnz mov mov sub mov add adc xchg (bad) subl pop fs (bad) loope icebp rcl clc adc dec xchg mov fwait inc mov (bad) push test mov jbe roll repz jmp sbb fsub sub ljmp jbe xchg call xchg push mov push movl outsb sub (bad) or (bad) sub (bad) aam cmp nop std in xchg jae cwtl daa mov test js ds or int sbb jp jnp mov push ret in fbstp jno mov pop int3 mov cmp lods inc aaa mov cmp mov int3 (bad) repnz mov std insb dec pushf mov js testl stc hlt cwtl jp jg inc (bad) mov xorl cltd push mov repnz cmc jg jbe lods push repnz das jnp loope,pt jne dec and sub int sub push mov test add (bad) jmp rorb pop scas sub addl mov insl out pop cmp sar inc cmpsl pop sub xchg int3 mov xchg sahf add fmuls xchg fdivl pop push ret ret loopne fildll in ret sbb mov movsl inc pushf leave mov xor in stos cwtl mov cmpsb xor (bad) dec das dec lods ljmp rcll add or ds jbe xor clc dec jne and gs in aad fstpl icebp inc jp stos lds jg push adc imul adc mull pop mov fwait xor push jns push les pop lods inc sbb push nop hlt sti lret in aas pop repz mov sub xor sti jmp add adc push sub repnz mov jl fsubrl rorb xchg insl nop jo sbb fnstenv mov sahf adc icebp js jb (bad) jbe add loop in push sub and mov repz notl xchg adc shlb sbb leave mov jge xor repnz popa xor cmpl popa aad xlat dec push push ljmp pushf insl lcall imul repnz lret shrl loopew push cmc adc xchg lret out fistpll int3 push jo inc adc adc or outsb jp fiaddl ds adc outsb adc leave sbb in and lods mov jg clc cltd push imul xor mov add dec jb icebp adc call inc ret pop push aas imul jbe and (bad) (bad) xor sti xor jmp mov fild push fsin mov (bad) mull push movsl xor inc popf jp cli jae dec xchg movsl adc scas jbe dec sti jb jg fs insl or mov sbb clc cmp xor xchg fsub mov jmp and enter sbb fisttp outsl jb ret mov test cmpsl aad popa mov pop mov pop pop mov and shll bound scas scas mov ja roll jbe pop outsb sbb xor push addr16 scas mov cli pop rol inc cwtl pop int leave and gs lret pop xchg or inc jge scas dec lahf inc fidivl dec push sub pop jbe xor mov les mov mov std xor cmpsl inc clc pop pop gs (bad) outsl or cmpsb lods or fwait and jmp adc sbb cmp and ret xor mov hlt dec (bad) cmpsl lock xorl mov cld fwait push ljmp jbe xchg mov lcall mov push movsb andl int nop sbbb pop in xchg fisubrl faddl jp jecxz cmp jae (bad) aad notl cltd cltd sub sub sub mov xorl cmp mov pushf cmp ljmp cmp subl mov repz outsb mov (bad) daa js jo ror add pop xchg daa testb inc and mov cmp inc test or clc cmp (bad) in inc jg outsl dec icebp sub sbb int3 adc add imul jp mov scas lods inc jno mov cli mov les out xchg and es (bad) arpl pushf sub cmp xor cmp lock add and mov in fildll inc (bad) (bad) (bad) mov mov pop sub jne int das addb pop lcall jg pusha (bad) sbb adc inc pusha inc divl popa clc xchg in dec inc cmp or (bad) pop test adc call inc push outsb xchg ja jns sbb adc es xchg lret push push cmp orl mov pop in dec dec jnp lods mull cs repz sbb mov xor push sbb add sub ret jae xchg jo roll and and or dec pop jecxz insl aaa push cmp lea fs daa idivl xchg out dec cmp sbb xchg jp outsb jne fild cmp clc add and jecxz jecxz out cltd pop gs sti imul xchg repz iret sub xchg dec (bad) cwtl mov adc test adc sbb rcll jecxz push test daa jb bound sbb sahf jnp insl stos or repnz fdivr sbb out data16 add cs xor dec sbb mov adc jp push add xor (bad) mov or jl xlat stc (bad) xor sub data16 mov divl nop loopne arpl ds push bound pop push jmp pushl decb cli cvtps2pi test jne xchg ljmp lds test lcall xchg pop add cmpsl and add sbb (bad) iret aad xchg imul add rolb adc or mov (bad) xor fdivr repnz aas lea xchg xor or imul cmp js cltd les imul jecxz xchg and pop jmp push push inc rcrb cmp sbb inc je outsl stos addb popa inc enter adc push xchg or pop xchg push dec js lds fdiv data16 sbb xchg push mov jne aaa cmp enter repnz or mov mov aas lret mov lods cld sub jge lret aam cld xchg dec push dec sarl fwait add pop mov into loope xlat pop mov xor push mov sub int idivl jb popa add jg test add push xchg and sub int3 cmpl pop sarl xchg xor out mov xchg inc xlat je outsb and mov popa dec mov mov leave xor cmp jecxz out aaa mov mov imul and push push gs add pusha and push mov xchg test mov fldenv rorb jg ret cmp pop shld (bad) pop or (bad) rdpmc sbb xchg loop cmp xchg cmpsb fnstenv lods mov cmp insl mov cwtl fwait cmc out fwait jns and orl sub sbbl mov mov imul mov pop insb jge sti ds ljmp cmp mov or inc add cmp leave pop push lock (bad) fistl push xor xchg sbb pop jle mov stos xor inc cmp fisttpl xor loopne adc pushf js (bad) cs xor roll mov mov xchg xor jne jno sub stos jne and imulb je call pop mov std or iret jns xchg or cmc and test call jecxz cmpl inc mov push sbb mov jno femms std in sahf das jge (bad) lret cmp inc and dec in mov jbe mov leave mov or mov nop rclb mov inc nop dec lahf adc pusha sub adc mov mov stc out cmovb insl mov sub loopne dec dec in mov bnd adc and imul lods es sti mov sbb cmp mov or and fmuls repnz andb add es push js lcall sub mov mov sbb jb dec or cmp adc je adc iret loopne int3 pop or pop jle nop sub push test pop jb (bad) stos cltd std jns mov xor push jecxz loope mov jns leave fmul xor mov iret subl js or push bound sbb jl outsl dec mov sbb mov lds adc mov repz test inc xor xchg cwtl and lock sub fnstenv jae mov (bad) mov gs (bad) or fstps jmp jnp push jmp cmc in imul adc mov dec xor sti stos je loope xor or push das mov mov xorb jns int3 mov data16 pop jno cmpl stos pop push xchg sub sbb push pop addl cmpsb push pop dec jmp dec jns pop cmpsl inc int xchg aad loope sub adc pop in lods (bad) out pushf or stos hlt mov (bad) sbb xchg int3 inc mov lret xor out fucomi mov aaa iret inc inc inc shll sahf mov fcoml sbbb add xor xor mov inc iret cmpsb ja mov je mov mov push repz push subl inc jmp jl ret outsb push add fidivl adc jbe aam adc add adc je push jmp xchg pop push (bad) cwtl xor loop arpl or jb xchg pop mov pop stc call push decb push and jne or cmp insl sub dec push sub outsl adc dec stc dec inc (bad) xor test lods js jge test mov (bad) int push mov bound imul cltd push sub mov pusha sub (bad) or scas pushf (bad) jb test out (bad) out cwtl xchg jnp in fcomps lock ret rorb loope mov enter inc ds stos in inc dec cmpsb mov or mov jae inc jb pushf or imul ja and out add lods or pop lods (bad) imull js test adc ficoml (bad) cli push sbb aas add push xorl fstpt in sbb adc rep repnz mov mov cmp out pop mov in pop sbb cld xchg call mov xor inc in cmp cmpsb lret inc fldt xor in xchg cltd xor inc cmpsb cmp push jl jg,pn je loopne mov scas or sub je inc cmp insb pop aas xchg add mov sub and movsl shr push jecxz ljmp cmp pop scas jb lret add popf loope lea push imul notb test push test outsb fucomip gs data16 pop jg sbb in xchg daa and mov in lea jnp stos pop lds dec pusha jmp idivl lds cs dec push fs inc inc push jg sub pop (bad) ds std divb or fnstcw push pop in inc jns adc ja mov mov pop lret sbb loopne inc cmp pop push xchg sub cmp popa push xchg xchg mov mov pop inc push dec lahf jl sub sbb pop cmpsb vpmaxuw pop add sbb scas int jnp mov sub ret mov jmp outsb lahf (bad) std insb xchg cmc or mov add xor pop and push (bad) mov sti push ds pusha sarb push sarl cmp jnp cltd and movsb rcrb jle cwtl jg lea sbb loopne sub or mov xchg pop push jnp scas ss (bad) mov (bad) cwtl test add nop sbb and dec movsb scas mov out out mov dec or jb cmp lods (bad) out imul aad fbld jge std popa imul push sub sub lret fisub mov popf add out xchg push add mov repz mov test push (bad) enter mov cmc scas movsb insb mov or (bad) xchg mov (bad) xchg sahf xchg call mov lcall xor aam inc lret and movsb xchg push (bad) mov outsb movsl lcall sbb and fs mov xor (bad) push xor aaa push jne inc clc movsl add pop (bad) and out out sahf xor mov mov sbb int xchg bound jbe (bad) and repnz fimul cmp fwait in sahf dec insb popa inc fcompl sub cmc insl and iret sarl sbb inc mov fcoms lahf in pop in add cld fidivr (bad) jnp stos or psraw das sbb out pop jl or loopne notl (bad) mov xchg das xor cmp fsub sbb adc test push mov icebp sbb sub mov (bad) mov push cmpl loope pop ret mov (bad) jae stos xchg je data16 stc out into inc mov push mov mov xor mov outsb ret pusha cmpb fsubs xorb mov lea test cltd neg cmp and push stc and fldt gs test jmp push setbe sbb cmpsl jp in ja iret lds mov or mov int3 jb jne add or pop inc jb ja jb or xlat daa dec inc mov jo fcoms jne int fdivs xor add jae cs sub imul divb add imul loopne add fdivrs mull mov ja cwtl add fwait loop mov sbb lods inc in jmp adc mov pop sbb cs mov ljmp cmc mov mov or push add mov and jae inc or dec cmp adc fcoml adc pop mov (bad) arpl lds xlat push xchg dec mov pop cltd arpl enter mov mov push dec rcrb xor enter mov icebp pop lahf mov push mov mov lea scas jg inc and pop in inc rol jae jb lock int3 sar sbb xchg jmp rclb aam mov mov inc cmpsb idivl lods iret sub lea xchg add dec xchg fisubl and jmp (bad) loop pusha dec rorl gs int shlb inc mov or fstpl mov fptan dec lret inc loop jp gs lret dec pop pop daa mov rclb jns test sbb lahf pop and icebp (bad) stc xchg push outsl and add jbe cmp int3 dec inc cmpsb jg iret inc jecxz adc and jbe adc lods test rorl rorb hlt pusha subl mov test inc adc fisttp out pop pop pop cs jmp pop add test inc dec xor jbe adc mov lods push xor cwtl adc popa add jnp (bad) cmp cwtl cmp and insb cmp pop lret (bad) (bad) enter (bad) call mov out adc sub sub mov orl add push (bad) adc fistl adcl pushf jno mov cmp inc daa movsl add rol mov sbb arpl jne fucom mov push or pop fadd jmp xor pop sbb mul xchg jmp jo push sub jg je jl rdpmc cmp data16 mov cmp arpl (bad) mov adc add sahf inc fcmovnbe mov jo cld hlt addr16 mov adc repz cmpsb mov jae adc and xor aaa sbb sahf cmp lahf aam and out cmpsb inc mov lcall stos xchg dec push add dec jbe add test or fcmove imul pushf xchg pop adc pop xchg jb jne and in mov sbb mov mov cmp and aaa psubb and les stc and mov sbb xchg (bad) pop addb or xor frstor data16 adc rcll addl repz add inc mov icebp add inc inc fwait shl and dec and cwtl ja mov jns (bad) push pop sbb lret shrb and scas mov mov add insl out test stos js stos mov mov data16 sbb arpl dec in (bad) in and xor sbb pusha jp or or mov gs jb and xchg loop sub dec jo pusha mov sbb or or push mov scas mov cmp (bad) mov xor inc pop std cmpsl fwait push dec add jg inc (bad) jb rorb lret out je rclb adc cltd shll shr in inc xor push lock bound (bad) out in inc fmull mov fdivrl lods loop jle xor or bound mulb jl add mov and cmpsb jae in roll xor mov push sub test ljmp inc movsb jo (bad) fcmovb fnop cmp add push mov (bad) lret stos xchg or jg push mov push push repnz (bad) lret pop cmc or clc mov out jle xchg add sbb xchg xchg xor fdivp dec popa push and es arpl dec movsl and mov (bad) pop test add (bad) notl and xchg xchg mov into mov pop mov inc cmp mov xor loopne outsb xchg and mov fnstenv inc sbb and flds sub loop jno jecxz jno sbb pop das jne test imul or push or xchg push in fucom popa inc dec xchg push and das movsl dec dec xchg adc jle ret xchg push ja ljmp stos cmc cmp mov or cmp push adc dec push jo jno jo jle dec dec lock scas test shlb (bad) scas dec dec xor loope add fnstcw jecxz aad iret popf lret lods jge clc out (bad) out sbb ret ljmp cmp xchg inc mov push dec add sbb adc aad imul test aas repz cs xorl imul sub or shrl negb ja jl lret out jp pop pop dec inc and in dec push mov fimul cmp mov test add inc dec cmpb pop call inc sar xor jle les jp movsb inc jecxz mov pmulhuw (bad) xor jp movsl cli mov loopne lret dec cmc mov pop (bad) dec xor rcll mov xchg fidivrl insl sub mov push dec into xor mov roll and and jg sub hlt adcl icebp aad outsb sub fcmovu xchg and jp (bad) lods xchg push out mov or test and sub mov jae xchg (bad) in or bnd call rorb pop fs add or cmp repz addr16 mov add mov dec fistl push mov fwait lret sbb (bad) dec out aam inc test stos das pusha clc (bad) dec mov add pop mov jmp js cmp xchg mov aam cmp ljmp push addl push mov (bad) icebp inc fimul int3 shr xchg and xchg (bad) jg pop push jl jmp xor mov mov bound and xchg sbb jge xchg xor pop mov mov inc stos pop (bad) mov aad pop ss or into push inc iret or pop jl adc add das cmp jmp outsl dec pop sub xchg es mov std mov inc mov subl inc add fdivs (bad) jle sub cmp pop (bad) cli mov or mov xchg xlat mov repnz or call or jbe mov add shll push inc jmp mov stos inc (bad) sbb fs rolb xchg lcall push rcr xor addr16 xor sub jns cmp dec icebp jl mov and in jo lcall lea mov push and add push xor cs cmp test loopne cs (bad) imul out mov pushf fisttpll test outsl imul mov call pop adc imul inc mov fs fisub sahf jmp lcall cs in (bad) cmp jmp ret pop adc xor sarb xchg in clc repnz repnz scas dec dec js (bad) lret push arpl mov and stos adc clc cmp push adc shr jmp loope add ja iret dec sub mov bound std sbb icebp xor ljmp lock xchg push xchg jge out idivb iret movsb sbb das into cmp ret push daa js (bad) cltd iret sub inc xlat xor xor roll enter sbb popf inc fdivrl nop movsl test cwtl add push push out idivl sub loop dec xchg lds fdivs pusha jnp arpl ja push xchg add arpl jmp jle pop jp xchg pop jp xor xor insl add add xchg hlt pop xor clc and mov call add push lcall push or outsl sbb adcb scas mov aaa subl test jns loope push inc fucom cmc dec out loopne cmp cli jmp jo sahf mov aad xchg inc push in leave add loop incb imul push test ljmp xchg mov scas inc sub mov push sub pop enter cmp iret incb mov pop into mov push aas mov test mov mov fild xor in xlat jl mov sahf cmp outsb mov mov cmpsl dec mov arpl xor shrl nop (bad) imul add add adc stc (bad) cmp insl loopne fdivrl xor sub scas loop jbe dec into ja sub sub jne or fwait nop lock lret fldt dec ds ret pushf cmp lret jg add sahf jle rol repnz inc test inc cmp cmp cmpsl mov outsb mov pop cmp inc mov sub pop addr16 outsb test movsl dec add and jbe cltd push xchg or inc sub cmp (bad) ljmp xchg je mov aas loop inc mov loopne or and xor push push inc sub fisub mov jg addr16 les adc les insb xor and insl cmpsb push sub popf (bad) jns mov dec imul and jp pop enter icebp mov ja (bad) xchg cltd lods ja test sub pop push mov add psrlq push mov jl adc aaa popf sti mov fcomp sahf dec pop inc xchg fdivrl popa in xchg mov ljmp and ret lahf iret cmpsl adc mov adc mov ss fildl xchg sub ds xchg pop jb cli and mov les nop mov mov lcall push xchg (bad) mov mov hlt jnp dec incl aaa dec sbb mov ret fcmovb dec std sti (bad) sbb jo xchg sahf push xchg xor in in add add xchg test cmp nop out dec ret lds xchg std adc jns adc stos pop outsb inc fcomps sub xor mov and sahf ror mov add lds fwait xchg je test addr16 push iret xchg sbb lea scas (bad) sbb cmp sbb inc add push push push stos lods (bad) xor outsl out dec push (bad) in cltd cmp stos mov in jg rcrb sti fbstp lret pop inc dec add and inc int mov jmp lods mov mov lret jmp icebp adc lret sub mov or pop pop insb xchg and push adc rcrl pop xchg mov (bad) jl pop fimul aad bound mov out and (bad) add or pop jnp xor lahf fildll test cmpsl scas repnz ret jl mov push fidivrl mov fistpl cwtl out movsl ficom mov movsl es aaa or fildll imul mov lahf cmp andb inc and ficoml loop jnp inc gs out movsl push and (bad) mov xor out popf cmc jge aad mov adc sbb xchg out add movsb push pop dec sbb sub ficom dec adc cltd in push nop cmp movsl movsb sbb add lock push pop inc in orb lods pop push inc (bad) hlt sbb cmp out dec lock add jnp insb dec mov fnstsw rcll mov lret popf and sbb ret sub icebp sbb movsb jo sub or cltd mov pop mov sbb adc cs xor inc jmp jnp mov or sub je repnz add popf dec (bad) (bad) xchg mov clc xchg add mov cmc mov popa shl xor (bad) xor addr16 loope adc cltd test mov fcmove add mov or into fadds push lea adc int andl jne jmp fwait jl mov popf lods lcall in out aas movsl test mov leave inc mov mov sub xor pop in gs sbb bound cmpl fcoms or inc scas and jge imul inc and push sub aaa andl ljmp xchg mov xchg or fwait ret pop cmp add in stc rorl or mov sub lds and scas lods pusha fistpl add (bad) int3 je or lret jnp xchg aas pusha jg gs mov xchg add jle iret adc jecxz lock sbb fisubrl cmc pusha sbb insb jmp dec fmuls testb xchg push (bad) mov adc movsb push sbb jae iret push arpl addr16 jno,pn faddl in sub jecxz enter xchg sub xchg lock (bad) mov mov push dec dec sbb dec out test sub (bad) cli movsl cmpsl rcl nop xchg int push cmp loope sub sbb jnp sbb sub cmpsl pop push sbb or sti push mov bound add dec xor mov mov jae loope fistpl stos lods and stc sbbl clc sub into iret pop xorb inc mov loopne ljmp ss mov and test mov and fsubr fnstcw push sub inc or stos fisttpll cltd outsl shrb ja icebp cmp es inc ficom xchg imull xchg inc leave scas or mov bound rorl in aam aas aas insl out pop dec fnstcw push lret pop cltd outsb mov loopne test push adc mov or add gs sti test xchg mov jns inc dec jns xchg lods adc mov lret pushf jns (bad) (bad) icebp (bad) adc mov cmp cmc adc xchg mov fcmove pop fistp arpl gs es mov inc mov dec mov or and lret repnz imul pushf in sbb aas pop lods inc jp insb jne pop mov push int push (bad) mov jg (bad) out inc ljmp push cli or push add adc iret or jg sbb mov fiaddl popa pop cmp outsb add sbb push push xchg xor loope xorb jl pop adc mov ljmp cmp sub dec jb fldl out xchg mov push (bad) ja mov imul lea ja push cld in loop push mov jmp push fstl fadd adcl imul dec ds inc or addr16 xchg fwait cmp into in test ja std pop mov rol popa inc pop push out mov adc push sbb hlt call ret mov jecxz rolb sar jb stos dec push and cwtl mov popa lcall lods pop mov jno or sti mov pop mov sub jl adc mov cli (bad) pop es jecxz popf mov xchg movsl jmp sbb stos push sbb sbb push aaa lahf jne shrl enter sbb lea (bad) sub dec mov sahf inc push pop inc stc mov out add out mul xor xor sbb movsb int xchg in cmc loope ja stos xchg scas pop add cltd shrb ljmp xor adc fcmovnu out stos xchg fwait orl test push pop pop jecxz shr adc divb push jecxz pop lret out xor adc movsl test aad sbb mov and and cmp sbb ss jbe mov mov fdiv sub adc sbb cmc enter adc sbb jnp mov repnz (bad) xor mov loopne mov std popa mov fimul mov pop jge cli push fcmovb sub (bad) jle ss mov ljmp dec adc mov sbb push jae pop or push mov adc cmp shrl outsl popf rorl daa xor cli pop inc pushf push mov mov cmp test jmp push jmp arpl sbbl data16 cld popa jp sbb xchg sbb nop test push fildll cmp pop xchg dec adc out cmpsl xchg lods xor dec or dec repz xor xchg cmp sbb mov aam jb in push call mov cmp repnz sub outsl arpl popf fmull (bad) idivb mov insl out jmp loope ss popf mov or mov dec push leave push insl dec xchg inc mov mov popf cmp adc sbb and xchg xlat pop xchg inc ret jg test pop out dec inc push push mov push mov sbb mov sarl test cmpl (bad) pop hlt sbb dec dec mov dec add adc mov nop fstps push xchg push aaa mov add lods cs dec pop xchg movsl mov lret and addr16 cld (bad) xchg clc popf je xchg xchg mov pusha push fxch stc mov into inc pusha mov fsub or stc push aad xor fidivr fsts and mov ljmp mov int mov ja shll mov add jp incb lds inc mov fdivs add adc in add mov (bad) repnz popf pushf stc jmp xchg (bad) fwait iret test in pop mov idiv inc mov xchg jmp push in test or int das (bad) rcl mov mulb cltd pop inc mov xchg test jg jl or cld scas nop repz xchg scas and mov or cmp xchg into inc or cli mov sti adc jmp pop cmpsl add std call jns out mov aas sub fistpl lods inc push push adc push aad mov sbb pop inc insb cmpl popf movsb jle or mov sbb fdivrl xchg stos push imul pop roll inc inc leave jnp fwait push repz rol jp and les push xor cmp mov outsl mov arpl fstl add fdivr mov lock add iret dec adc movl loop test sbb sbb cs jge test movsl mov jg,pt fwait std mov ss int mov aaa inc jl xor push movsl div clc push int add idivb sbb clc inc xor jno loop in gs xchg sar sti dec aam adc adc daa sub xchg pop pop mov cmp stc inc scas rorb roll xchg ret js cld lcall js imul mov or rorl add outsb push lods cwtl xchg (bad) xor jl mov test mov adc gs imul mov cmp xchg and (bad) push dec popa dec es lahf and mov sub call pop imull (bad) push mov orps cmc inc mov cmpsl mov in cmp xchg pop sbb push sbb mov imul ret sbb cmp in test cmpb lods bound mov sbb movl mov cwtl pop movsl ret fist add xor adc (bad) les sti cld ret inc jle aas loopw ret inc scas les lds mov test ss jg aas stc stos lods inc les or dec shr push neg add popa rorb push mov cmp das xchg xchg dec and jae mov mov inc xor mov leave lahf adc es lods lret cmp movsl mov lock or inc rcrb std out stc pop add mov cmp push int adc mov inc std adc out sub lock xor adc mov or ja jne in (bad) ljmp test cmp hlt mov push mov inc lds rorb fst mov push jle pop mov ss adc arpl sub ret cld and test or in out je or add dec loop lea sarl pop xchg fcmovb push imul xchg lahf test push std and inc sub movsb xchg mov cld jl lea repz jg inc mov je scas cwtl in insl or xchg mov lock in fisub or test and inc pop pushf dec push repz push sbb xchg push enter lock pop decb jae popa insl movsl mov xor jg xchg (bad) (bad) xchg orl mul inc dec ss jp add fwait test mov int3 mov mov add dec sbbl clc faddl sti (bad) push nop iret push push sub popa movsb ret add push push fs add sbb xchg fninit adc and sub add les test lds lods jbe int3 fmull push mov test (bad) into dec fs fiadd pop mov adc into sub (bad) xlat decl insb lods lcall sbb imul aas cld test sbb jae shr push test xchg push aam dec jno ficom inc leave mov mov mov test mov mov and enter ss jno roll cmp dec lods cmp push mov xor sarl jecxz in jnp push xchg out mov push gs pop jle cmp push inc ficom stos sbb cli fistl inc jae xchg xchg mov jecxz les xor loop jae xchg fadds nop push fstpl icebp jo leave mov cmp pop mov cwtl mov insl shlb mov and and daa or xchg mov loopne out dec or sub or int3 mov pop mov jmp rorl or cs cmp pop stc mov test mov jge sbb pop popa rcrb inc mov inc popa sarl dec push sub push mul or rol push jl or pop push pop sbb jnp mov in fcomps ret addr16 dec rcrl scas inc jae psubw mov mov out popf adc loopne inc lret popa and cli in jbe iret xchg xor fisttpl mov mov sbb dec bound xchg cmp mov gs mov das push movsb ljmp lret add pusha cwtl (bad) enter xchg pop mov sarl lods (bad) hlt sub push mov mov mov mov add dec dec fisttpll add jnp push addr16 and sti in push fs push cld pop xchg pop sub ret frstor jle mov ss adc add mov cmc sahf push mov aam jae mov adc pusha or leave push cmp test fdivl add jecxz jb out lds add imul and and aad inc fnsetpm(287 push push rcrb and mov and pop imul cmp pop cmp add (bad) cmp inc and sub cmp cmpsb clc sbb imul ret inc fpatan mov cmp jae (bad) popa xchg jl xchg incb jno pusha loop (bad) shl icebp push in dec push mov xchg cli ret push ljmp lds sbb leave and andl test loopne mov push xor and sub mov mov pusha mov dec test add (bad) jl xchg mov pop mov jge cmp mov add cmp push jo repz rcll cmp bound lea add outsb mov rorb inc push cmp inc imul lcall xor sub sbb loopne jl jmp (bad) test or cmpsb andl jecxz jl lret push test sub (bad) or aaa jmp adc add imul pop shl add ds mov cmp adc xchg cwtl ret mov and push pop es jnp cmp addr16 pop es mov fnstsw push inc add cld adc lcall jo jg and je insl pop jle push sbb mov idivb push rcll repnz out insb xor inc imul insb sbb inc fwait test or mov in jmp mov iret arpl inc sub scas decb bound add lods or sbb push pop pop into adcl adc pop mov inc inc fldt sub push jmp or loopne dec xorl fadd cmp jne out sbb lret js call add mov enter mov xchg add in jbe scas popf jle leave je mov dec sub cmc orb jge jno and cli sub jg sub ret jae,pn sarb jge fsubrs pushf mov and or aam scas jp test push aas out scas popa pop inc pop push arpl add hlt mov out pop xorl (bad) lret insl xchg sti push repnz ret insl aam mov mov dec pushf popf and jp into jns sarb stc xchg push cld test push and jo ret daa pop push cmp adc inc pop jb arpl and pop cmpb mov test in lahf lret jg frstor xor test ja sub push mov (bad) ljmp adc movsb pop pop xchg aam add test insl loop mov lods sub mov jae mov sub int cmp or and dec lea daa divl xor push fnop dec in std jle mov ftst jp pop add mov (bad) adc mov inc and cmpsb mov mov sbbl clc rcl and lcall cmp (bad) push cmp ret inc xlat stos cli hlt in loop xor mov jo cmp cwtl pop insb dec cmp or jge enter inc jbe icebp fsubrp lods mov into into adc cld pop sbb mov ljmp pop pop cmpsb and inc rclb aam rcll sti lret (bad) pop adc jp adc lret xchg sbb adc faddl ds adc in ficoml dec lret jg pop out xchg enter jae sbb test or clc movb negl mov jecxz and mov and and adc and adc inc or xchg push int3 nop mov pop mov dec (bad) bound dec pop fidivrl fisttpl cld sbb loop mov mov xor sbb arpl sar inc shll mov mov mov lahf sub push mov fidivr or bound inc enter cmpsb hlt jns pop mov xor mov pop xor divb pop mov jp in sbb add pop popf data16 and rsm push dec aaa pop (bad) icebp sub or jnp mov mov mov loopne cmp mov jno jne push cli daa lods push dec sub add sbb out xchg jge add add int3 int jg popf xchg fbstp (bad) mov cmpsb jmp pop sub push inc enter je inc fcmovnbe add lds pop rclb or sbb mov sbb cmp fnsave xor (bad) out inc mov sbb repz mov cld and std push mov mov mov lret (bad) push dec mov fs xchg mov push jae mov repz xchg mov jno cmp push mov sub (bad) stc cld fisubrl insl sub mov xchg mov cld repz pop maxps divb xor test nop jne rcrl (bad) aad sbb sbb out pop inc outsb cmc aaa jo mov mov lods mov sub scas lods mov roll xor add cmc cmpsl insb xchg and loope aad aad pop cwtl cmpsb rcrb stos (bad) mov cli mov add jns mov mov sbb ljmp jne inc inc dec or (bad) lock cmp jl push pop sub movsb inc adc push jne cmc mov sub cmpsl cmc inc or fxch repnz mov dec cmp repnz mov xchg icebp mov or mov sahf dec cmp mov add xchg mov adc insl push sbb inc xor cmpsl sbb stc xchg lods xor push jbe int mov test pop adc js sbb clc lds xchg lcall movsb (bad) movsb jne repnz mov cli add ljmp dec pop bound mov xchg cmp mov jecxz out fiadd in push lods cli push pop popl cmc icebp icebp call sbb cmp adc cmp pusha test adc notb pop adc xchg jge sub cmc out lods mov lea cmp xchg pop stc mov ficoml mov shll outsb sub fisub ret nop push loop add stc xchg in dec fcmovnu and fisubl lea insb stos into sbb xchg mov and push xor pop imul jne xchg fiaddl or movsl ljmp push or xor loope fistpll jns mov (bad) mov out mov sti ja leave mov shrb dec xchg cmp movsb out push and or std scas pushf int3 mov inc sub imul mov movsl adc or cmpb leave (bad) cmp mov aaa (bad) or (bad) lret dec in push mov mov das fidivrl mov nop jmp sti xor inc mov outsb dec adc sub scas out arpl enter dec addr16 pop mov jecxz push mov adc jmp hlt jnp jl mov add jle imul pop loop mov rclb push cmp mov je (bad) repz andb test mov loope lods cwtl lcall pop (bad) (bad) mov cmpl lods mov dec jp mov push dec inc add stos fsubrl cli in repz or mov nop xchg nop cbtw icebp xor int3 div popa out movsb pop xchg jge jb ja adc lret xor loop sahf lods mov gs mov push dec pop lods pop cmpsl adc and inc mov ror adc xchg mov adc cli mov mov loopne (bad) mov mov pop cmc stos clc xchg pop stos mov or xor adc enter fs addr16 cmp jns les hlt cltd mov leave push xlat es jbe xor and adc repz pushf push and repnz lcall inc pop or test mov test cmp gs and lcall cs xor and sahf sub outsl aam xor jg shrl iret pop andb xor xor xor inc cmovp cmp test xchg xor loop xchg lahf add dec xchg adc fstpl loopne mov cltd and xchg cs in cmpsl dec in shll xchg cs push in (bad) enter or scas mov popa pop cmc aas xlat pusha mov xchg xorl addr16 stos jae adc and push xchg stc jmp jp mov jp xchg pop je mov adc orl jecxz mov sbb fldt xor stos negl jmp fldl jg hlt clc clc xor xor or das movsl (bad) fadd dec dec xor xor and xor inc jmp jno xor cmc cli push push fistpl jmp jns roll adc pop cld int3 shll cs hlt dec pop daa fldcw negl rcrb or stc aam mov lret (bad) insb out mov mov xor cmp mov imulb dec pop mov and (bad) dec test cmpsl mov in cmp into xor and popa pop pop sub cmp fsubl jl mov pop daa or and jb cmp adc int cld sbb aaa adcl add mov pop dec movsl jl and test add daa lds pop loop rol mov and in lahf lret add pop (bad) repnz fwait fwait sbb roll cwtl mov jns inc or daa movsb dec sub outsb loopne (bad) repnz pop jae test pop bound xchg pop cmp repnz pop jg nop push fist iret sti mov loope loope mov aam int3 into (bad) sub push mov mov inc inc push in jg cwtl bound jmp adc jae aaa adc andl cmp in fnstenv js and mov std in ljmp (bad) xor (bad) mov mov in test or cmp loopne jmp push mov scas jae inc rcll (bad) fidivr hlt das adc jmp hlt ret dec (bad) mov sarl jbe,pn rcr adc and sbb sub in xor test (bad) cmpsb add idiv cmc sub int3 cmc xor int sti fcoml (bad) and rclb mov roll sbb inc mov fiaddl (bad) cmpsl mull mov sub push mov mov cmp shll aad insl (bad) push ret (bad) adc xchg add push sbb sahf test lds fistpl in mov repnz dec xor loop cmp pushf cltd ljmp nop and or in dec mov sti xor arpl pop cmp popf pop jo xchg mov enter inc sahf mov nop dec roll mov rep enter ror sahf add mov jmp sti std outsl xor sub cmp sti and scas imul pop fwait cwtl push or test mov dec imulb lods aas mov push xchg mov inc in insl add sbb jo sbb stc stos loop mov pop push pushl divl cmp xor jecxz cltd (bad) imulb jns pop scas test scas cmp add test divl sti or xchg andb xchg push fcmovnbe les and out jbe mov xchg mov xchg xchg mov jl clc lahf cld stc and sbb add dec inc lret pop cmpsb adc mov mov xchg jnp arpl out or test cld jle xchg jecxz xor cltd mov cmpsb sarl sbb into shlb sub and fcom jne jno push sarl inc mov int lret nop push das dec stc mov mov sub mov sbb sub dec jne (bad) gs daa push pop lahf mov dec cs les leave sub es mov std mov dec stc jns in jge in addr16 pop push pop (bad) mov daa cmp or icebp sub mov sub and inc mov mov fdivrs mov lret push mov es (bad) fistpll gs outsb movsb xchg push incl nop xchg (bad) hlt jbe mov stos and dec aas and into (bad) rorb inc repz jecxz mov (bad) rcl fildll out aad jne sti fstp jb mov mov pop lret popa mov dec fadd xchg (bad) es orb xchg clc pop cmp addl jp pop cli roll (bad) out out xchg jo test sbb xchg mov inc fcomi data16 es jle mov mov ret push mov sbb add adc dec inc daa push out cmp and sub mov js imul xor icebp inc xchg pop xchg shlb mov sub dec jnp std push inc mov xchg mov lock xchg dec inc xchg add hlt out movsl iret lock clc or iret loope int jo sub rolb pop fwait daa add xchg jo in and fidiv imul es mov fimul dec and pushl fstpt push sti and mov xor push in mov and xchg fldenv pop fisubl or add popf jns js mov mov (bad) xor dec popf (bad) clc movsb roll mov or jle xchg in fnsave fldl inc cli mov out nop js mov repz lds xchg sar loope repz xchg add jbe xor or mov lcall mov adc inc in iret daa lods ja int3 sub pop lcall add mov mov lahf pop incb int3 pop push cmp jo pop xor fdivrl data16 push jl xchg negl scas mov ja je dec add xchg push fiadd mov lods movlhps dec pusha movsb addr16 lea stos jl mov out mov cmp pop xlat and sbb mov nop mov push ret in xchg pop in jnp push ret ss sub aaa pushf movsb repnz (bad) jns lods mov push insl dec add stc (bad) mov loopne or add lods mov (bad) dec test pushf add sbb cli and in pop (bad) test or (bad) stos insl dec inc push sahf mov cmp push xchg xchg and ja dec mov (bad) pop das or (bad) pop icebp mulb mov mov lea sub ja fs arpl cld xchg hlt dec or jb sarb je fildl test loope and jp (bad) cmp push pop or (bad) leave insl cmp bound icebp push or cmp shll add lds push fdivrs stos jbe aas xor test sti in aam and cs out lahf jb mov dec xor bnd call xchg in push cmp add push mov les cwtl inc les sub pop xor cld adc stos mov add sub arpl xchg lea stos cmpsl cmc xor lods xor jns lcall out jb mov sub mov sti pop loopne or and jnp (bad) scas ljmp sub int stc jmp aam out fisub scas (bad) out outsb xor out xor pop and (bad) (bad) mov dec sbb xchg gs pop pop rcrl repnz lret scas cs cmp inc roll sub lods jne test aaa adc aad mov stos mov fiaddl ret cld jp sub cmpsb add scas nop inc cld jbe pusha adc sub mov mov adc out mov push stos jle mov or sub push xor mov cmp jecxz std fnstenv ds repz mov mov mov xchg add (bad) sub std nop pop xlat pop xor and mov cmpsl xchg ja outsl repz iret arpl scas cli mov subps xchg leave loop in add sahf jg mov mov imul test inc sti xchg sub out mov lods mov ljmp repnz cmp adc pop inc test inc fsubs fisubr push lock addr16 das imul les out aad popf fistp out (bad) inc dec sub jl (bad) push cmp jnp pop push cmpsl aad sub enter pop pusha mov or seta fist lahf data16 div pop cmp jae xchg pop aaa xor loope in and or idivb mov in or aas test movb sub mov mov lock dec add jb xor and aam inc inc jo repnz idivl gs into and mov enter adc or jle bound out fdiv addr16 xor dec aam pop and daa or pop fistp mov daa mov or test aaa test (bad) (bad) sbb xor and push nop mov ss and adc xlat bound xor mov hlt mov cmp lahf xchg (bad) inc scas arpl mov push mov mov jl fdivrl idiv and push lret push cmpsb inc mov jne push sub int3 in sbb cmp rorl cvtpd2pi lods jecxz add mov mov mov jo out gs stc incl dec lahf flds cwtl and gs adc cmp insb inc popa cs out jmp xor test jl xor xchg mov roll arpl std or sbb scas bnd (bad) lahf fisttpll mov push outsb popa rcl mov lea loope addb mov xor lods mov roll out imul loope fldt ret cltd mov cmc xchg mov sub mov into daa sbb sbb ror pop stos or jle and lea (bad) jmp xchg or and inc lret mov fcomps jb jb fild int3 scas fnstsw add out jp or add pop push dec js pop nop ljmp aas ficom adcl xacquire mov clc mov xchg out call shl mov xor dec mov je loope xchg aas (bad) fsubl popa jbe data16 pop (bad) out fwait movsl jns push or je sub push adc bound or and sbb in divb mov xor mov dec mov add add testb loopne test mov mov inc jle mov adc jbe mov sti sub xlat mov or das cwtl ret sub gs stos add jecxz and sbb push xchg xor fnstenv cmp sub dec push scas mov or xchg xor es and sbb pop cmc scas sti mov je sub icebp cmp and leave xchg mov idivl or ret jo pop lahf icebp inc call xchg jno fs nop pop ficoml test lods in push xor and pop push mov xchg adcb flds add jp inc xchg sbb jne jae jmp mov pop ljmp scas ss clc leave not arpl lds in (bad) js pop xor int3 inc sbb xchg stos mov cld mov shrd sub imul enter xchg mov pop pop test inc jae sti push pop pop or sub cld xor insl lds cmpsb inc fwait push test ljmp adc bound stos (bad) sbb bound inc mov test sbb test pop jecxz (bad) push subb jae inc push jns daa or fistpl test mov ret call stos call mov lods ficomp xchg pop cmp mov adc jg push inc leave xor mov mov cmpsl std sub (bad) (bad) push call mov adc pop fsubs or pop xchg jg xor cli (bad) std or cmp xchg imul clc push jno inc and push inc pusha outsl adc test jnp orb divb rorb sub xchg mov push mov out cmp or enter inc dec inc mul inc in or mov sbb mov leave pop daa sbb push push nop pop out cmc scas sbb inc cmp shr fs fstp cmp mov xabort mov pop int push xor scas bound push movsb pop clc adc jae inc ss icebp pop xchg gs xchg (bad) lock jnp,pn ja push iret sbb movsl push jnp inc pushf mov cli mov sub fisttpl out xchg or imul xchg fidivl loop cmp outsb sub mov fbstp jns (bad) repz stos mov xor out shrb adc dec lock imul adc jl push mov (bad) out push test rsm imul jg (bad) in sbb fist mov out cmp pop das jns mov sub jmp lea shrb jae mov cmpsl mov dec stc mov inc add dec jecxz lock pop inc xchg pop dec dec pop and mov rorb into lock xchg lahf sbb mov icebp sub mov stos xor jne in rcrl aad jns ret ss dec repz inc ffreep lret jbe xchg aad sbb lea aam lods leave pop pop or data16 outsb arpl push sbb insl sub pop mov mov (bad) jbe inc mov jnp ljmp cmp add addr16 sub in je cmpl xchg and adc dec mov push scas cli and negb dec push leave jnp jmp xor mov xlat iret add add repnz push pusha jb mov jle sub xchg adc fisttp (bad) adc das rcl leave ja shl ljmp xor scas jl movsb lds scas es rcr adc jbe fcmovne psrld dec mov pop nop adc scas rclb mov lds js (bad) sti cmp mov pushf jb,pt push mov add pop fcomip inc inc inc sub mov or stc dec in inc cltd cmp inc jnp rcr and adc push fidivr out lret jle cmp lcall (bad) out xchg mov pop cmp xchg or or imul out test (bad) inc jno xchg mov sti push pop jne xchg je pushf out pop ljmp incl repnz cmpsl movsb arpl mov das xchg push or fs inc cmp popl pop iret add (bad) jbe jo loopne adc mov bound add loopne dec adc nop cmpsb mov push jbe pop pop mov scas popf or sarl movsl out call or jg add test out cmpsb out sub mov rcr mov jecxz inc test xor dec les xor xchg test (bad) inc mov movsl xor mov and push repnz ja mov loope pop lds mov ss xchg movsl mov fist lcall movsl (bad) adc push call cwtl shll mov jo jmp sahf jnp popa fsub jo xchg and lahf or (bad) popf js add xchg mov xchg and (bad) lods push jnp imul cmpsb adc test in xchg outsl xlat bound jmp pop push xor inc adc cwtl cltd inc orl repnz mov jle push sahf jge cld popf cmp lahf mov (bad) push fchs (bad) icebp (bad) pop iret ds jo sub sbb imul xor les addr16 xor mov test lods es (bad) jge gs (bad) xor ret mov out mov adc or loopne cmp aad aaa out sahf push orb push adc push repnz sub inc jo pop mov push xor dec ljmp and sbb fldt xchg push push add push xor adc push sbb loop and cmp pop push ss sub leave pusha stos (bad) flds cmpsb sbb lods xchg xlat imul adc pop in dec or mov outsb cs mov inc ss xor cmc add (bad) push inc lods (bad) aas push push (bad) lret dec adc icebp cld push mov rcl lock push (bad) sub lods inc lds pop add lcall dec xor insb into xor xor inc sub mov mov xor insb mov cltd mov push mov cmpsl dec (bad) imul sub es in fiaddl pusha stos jb lea cmc enter lds aad int lock ss out in add mov ja adc testb pop mov fstps jge (bad) mov adc push pop js or std xor cwtl cmp int mov cmc jb mov inc inc inc (bad) fcoml mov mov and xchg inc fcmovnbe cs pop ret jl jns mov dec inc repz mov mov inc jmp xlat int3 lea or sbb mov jb bound cld mov xchg insl pop faddl push (bad) orl loopne and mov bnd es sbb andl pop push sbb or xchg adc aaa xchg xchg enter push leave push pop or or lahf sbb jmp lcall mov pop notl xchg xor sub daa adc and sti sub arpl mov daa dec call xor jecxz or inc mov add sbb adc int3 dec pushf pop fxtract push (bad) mov mov mov adc push (bad) mov inc push mov ljmp pop sbb loope xchg dec xchg test sub mov pop pop imul sti jo lock adc fistpll fwait notb icebp jno sarl inc push jecxz test mov cmpsl push cltd lods movsl fnstenv jmp (bad) pop jmp cmp ret mov mov paddq out xor imul jnp cmp ffree div mov push data16 mov out xor xor mov inc inc adc out jb sbb lods mov lahf xchg sar mov adcl xchg sbb dec sbb add jp mov adc hlt nop push mov push bnd jg dec xchg repz add test in cmc mov or mov jle nop mov leave (bad) xlat jo jnp xor aad mov or mov clc je outsl xchg cmpsb fidivr nop repz fisttp adc mov xor mov pusha lret mov jmp dec sub sbb enter inc out aaa js jmp aas repz push pop (bad) mov loope add fldl jo fwait or jmp mov mov inc push xchg adcl out push (bad) fdivp or loopne mov mov fstps mov fwait pop jb dec cmpsb jbe pusha pop mov xchg ret je xor dec out jb ss jmp dec jecxz fcmovnbe lea (bad) or mov (bad) mov imul mov push (bad) pop xor xchg shll pop insl (bad) (bad) enter push jb cwtl leave cmp orb packuswb int3 dec cwtl hlt lahf mov jo dec pop pop aas clc sub cld push dec leave std cmp adc daa in and (bad) clc add dec jecxz pop sub mov and test subl lahf cmp cmp mov negl test ljmp xor (bad) xchg push (bad) rcrb jecxz insb mov mulb add mov test dec mov jmp stc call jbe jbe sbb pusha inc scas imul jne iret or mov adc pop jmp xor cli inc push xor ds enter (bad) inc sub out jg mov cmp les movsb mov xchg xchg push pop jge mov inc push or jbe jle push sbb inc inc inc pop cmp inc lret insl fsubs fs ret std repnz push push (bad) sahf inc aam addl add loope arpl ret repnz pop jmp jge mov gs pop and inc mov jnp push int3 or mov sbbl add out cwtl mov popf into mov mov jmp test in aas xchg repz dec daa mov push push push lret fmull add jp movsb imul add or xchg sbb sahf mov imul faddl jl mov xchg ss jl cmp inc faddl sbb cld movsb fst mov adc xor dec roll std add xchg xchg das inc mov stos lds mov subl pusha idiv mov xchg (bad) mov js sub or cld push lods stos mov adc mov addr16 insb aad addr16 mov jae adc test je aad mov loope pop rorl sti test dec jbe in cmpsb mov (bad) jne das jge cmpsl jmp insl mov xchg push test lret mov cmc movsb fcoms int3 sub jne lret sbbl call into cmpsb test lea inc push in sbb mov jle fsubp push mov out and leave dec jns pop or xchg dec xchg jne xor mov lock cmp adc fbstp data16 xchg inc adc add das add add add pop inc and fcoml rcrl ret pop jl dec mov inc insb add sti add push in lret btr popl cmp push jns inc fistp sbb xchg (bad) adc jg ret (bad) jne pop cld cmp pop sbb jp jbe jns add mov sarb repnz mov jecxz push mov cwtl mov pop sbb ds jle rclb sbb gs xor jg outsb jnp iret mov add add sti iret repz xor xchg add xchg in int mov mov repnz sahf or cltd add enter jg aam mov push inc inc ret jge mov and mov sbb out jnp inc movsl cmpsb aaa fadds pop scas arpl popf adc scas (bad) into or xlat test in addl xor mov outsb and ror sub mov aam or mov dec pop or sbb ss repz mov lcallw in dec mov push scas jmp popf xor push pop daa dec imul les ljmp stos mov push cmp xchg cmp sub adc adc orl lret repnz aaa xor (bad) bound xor cwtl leave mov fs sub mov (bad) and xchg dec out ss loop push fld and imul sbb cvtpd2ps mulb push and xor and sbb mov repz out mov xlat pop inc data16 xor gs push and loop mov mov pop aaa loopne fsub ss movsl cwtl mull inc out dec insl rol decb dec orl push adc mov jmp jae cmp mov inc jne,pt (bad) xor les adc daa pop mov gs loope popf inc cmovs adc mov es aaa dec push inc pusha ds arpl jmp mov outsl sbb mov mov jae xchg icebp mov psubb sub xor sbb (bad) in jno mov jnp fstps push jecxz stos in push icebp cmp stc or xchg or cmp fs fisub scas (bad) xor add or cmp or or arpl psrlq sbbl cmc inc push out sbb jmp dec inc in rorl cld cs mov jmp insb pusha sbb test add jb subb jns and pop pop rcll test mulb pop jge mov decl clc push adc add push and scas push inc sub bound jae add push pop push push inc (bad) out cltd push adc in nopl sbb mov ljmp push push fs addr16 cs stos and mov fs sub or xor or in movsb mov lret adc lea inc movb aad insb cltd dec push andl sbb int into arpl pop stc (bad) je dec xchg pop pop into adc mov xchg cli sti daa mov (bad) fwait ret mov out fdivs dec adc cmpsb dec sti push ja outsb mov ret int3 dec jmp push mov xor es dec test inc jl std adc int3 lods mov dec sarb imul mov sbb adc mov jo movsb cltd adc xchg mov mov dec dec inc cwtl dec aad sbb lret adc icebp and mov into ret ret nop mov jmp into sbb (bad) insb cmp or je pop in (bad) ss mov or jl je inc loop rolb out je mov push insb rorl fucomip sbb popa je cmc pop jnp xchg mov iret cmp (bad) mov cmpsl pop dec shrb sahf xchg jbe out dec (bad) lret scas dec xchg ficomp fdiv imul push mov popf gs out (bad) arpl mov insl mov insb outsb inc dec dec dec cltd inc addr16 aam das loope stos inc dec mov mov sub inc jo push leave test xor aad xor dec sbb adc mov out data16 test daa jmp sbb jnp inc scas xor (bad) mov push in icebp push ljmp lods or inc inc or pop xorl xchg cmp call aas arpl pusha sbb fdiv sub es xor mov adc js jno mov hlt fisttpll cmp add pop sahf dec shl (bad) push pop lea adc cmpsb aad out dec (bad) jne imulb add cmp lahf cmp lds enter add stos inc xor lret push insb std fbstp mov sub ja cmp cltd (bad) jmp cmp sub and cmp xor mov sub pop test or pushf lcall or or incl repz sbb sub sub pop test cld aam sbb lods push fwait in lahf mov shrl mov rep xchg push push sti icebp ficoml xchg gs xor inc jns outsl lock jmp je or pop push ret add stos gs mov fwait into jns and pop jbe dec mov js psubsw bound cld call adc ret pop push icebp add pop aad out cmp addr16 imul movsl cmp sbb dec rep ret sarb fstpl mov pop sub mov push xchg jp lret inc cld (bad) fdivs out hlt xchg leave jbe lock outsl out es cltd dec add adc rolb xchg fs addr16 negb mov push cmp addb popf sar adc jne push fisubrl mov (bad) fstl mov lea dec lret icebp cmp outsb xlat ljmp mov jecxz fdivrs mov or (bad) jp xchg or dec dec out lcall xchg or outsb cwtl mov into cs jns negb mov push cmovnp (bad) jae sahf xor loope in in jmp cmp sbb mov cmp sarl maxps inc test adc xor cmp hlt cmp mov outsb pop imul or out cmp fisub cmp insl aas xor push pop lret xlat sbb jbe aaa call (bad) hlt lods add (bad) sti ljmp mov je frstor xor lahf aad jecxz (bad) mov ja adc (bad) jno push adc fsubrl loopne outsb xchg xchg jnp (bad) scas cmp mov inc mov mov jecxz add stos inc xor in and xchg dec cmpsl aam mov insb lret into jbe test dec pop lcall movsl add mov notb xchg je and adc aam jo pop and mov pop xor cmp jecxz hlt xor subl inc repz ror or cmp jnp aaa ret fs push fwait pop imul adc sub ljmp outsb out aaa mov loopne jp jbe out add out inc fwait xor add adc repnz insl scas (bad) int3 out dec pushf adc pop popf pop leave jb rcrl std jne test push pop sbb xchg mov or int3 and sbb int3 jne shll or mov mov lods fidivl or mov out (bad) repnz and les es sbb ret dec es je mov xor inc sub or jb cwtl dec fistpl push push mov and xchg xor mov jl test mov inc cli ret push push adc in mov (bad) sarl push xor cmp andl insb inc push inc popf aas push mov adc addl sub mov mov add sub jno mov push mov fdivrs pop addl loop int3 push test outsl push sub test add push mov ret and pslld mov int3 dec arpl xchg and xchg mov mov dec mov popl out mov pop mov or mov hlt outsl mov pop dec sbb pop dec cmpsb clc jo and push insb stos inc push xchg cmp dec scas mov jns subl adc push (bad) dec scas lods sbb jns add mov mov push (bad) fistl pop push or add mov outsb fisubl and arpl (bad) imul notl fsub (bad) sub test adc int sbb cmp mov pop cmp int lret sub scas fnop lock push mov mov test rcl xor cmovae mov push cli adc popf sti sbbl daa rclb or out out stos cmpsl mov aad jmp jbe test pop mov adc push lock fisttpll stos dec add cmp add imul push sub adc and out or xlat lret dec rol cs andl imul clc lds cmpsb jnp daa cmp mov in adc ds aad rcr or inc fistp push push int push lock jne mov outsb dec and pop test dec mov push mov loopne andl movsb adcl mov adc inc or cmp out pop js pop xchg repnz test inc fist xor mov fmul xchg pop jb xor cltd loopne das xchg push fs mov ja push (bad) jbe (bad) inc sub xor negl adc outsb sarl fs movsb xchg pusha xchg cmp or mov xchg jae xor pop test mov lret adc out pop inc inc scas popf xor cmpb das mov mov repz stc arpl test mov int3 or out sbb jbe cltd pop enter xchg in adc rol negb outsb (bad) out test aam scas inc push dec inc add add add add or add jbe xor xor add add add add add and add add add push je imul add push add hlt add add push push add push add adc add and dec inc add add add cwtl add add inc insb outsl bound add add add inc push add or add add add add add add add adc add add add add add add add sbb add add add add add add add add add add add add add add add add add add add add push add add stc add add add add add add dec add add add add movsl add add add add add add add add add add dec add add add add add add add add add add add add add add pop add add add add add adc jle mov add add add add xchg add add add jl add add xchg add add and add add add add add add add add add add add add add add or mov push add ret add out pusha add add add add add add jno mov push add add addl addl xchg or inc add xchg add add fwait add add mov add add mov addl or mov push add add add add add add add add add add add add add add add add jno je add adc add add add add push add add add add add add add add add add add add mov in xchg in mov mov outsb je insl jae outsl jb imul gs cs imul inc outsl jb jae cmp xor jns xor push cmp push jns push arpl jns jb jae jne arpl add mov in lods in mov mov mov mov in popf add mov in mov mov mov mov in mov dec bound arpl jns je insl add gs imul pop dec outsl ja inc fs imul outsb fs outsl jo dec gs push push mov in fwait in mov in mov mov in xchg add je xor push jns je insl cs outsl insb insb arpl outsb jae inc outsb gs arpl push gs jne arpl popa outsb popa addr16 push jns je insl cs gs jne arpl add insl insl gs imul imul je insl cs arpl imul je addr16 jo jns dec inc jb jo outsl push jb outsb jae outsl jb add jo outsl insl popa imul insl bound push jns je insl cs gs arpl outsb add je outsl fs outsb outsw add arpl je outsl outsb add arpl add add je jns gs jb insl dec popa outsb fs add outsb je insl gs jns gs popa outsb fs add je inc jae gs bound inc gs bound arpl fs popa outsb add outsb jne gs bound xor push imul dec popa outsb popa gs je dec gs jae je dec push add gs je inc arpl jo outsl jb push outsl inc jb popa jns push jb outsb jae outsl jb inc imul arpl addr16 inc jne jb outsb je outsl insl popa imul add je inc outsb je jns outsl imul push jae add jbe imul gs dec gs popa add jae popa addr16 outsl js push push imul jae insb je in mov mov in mov in mov mov in mov jo insb popa je outsl outsb push gs popa js je outsl outsb jae je jb bound add jae gs cs jne je insl gs outsl insl jo insb gs gs imul outsb je insl gs outsl insl jo je bound imul bound add jbe jb imul inc outsl fs je jb bound add jae gs cs arpl imul dec add push add jns jp xor pop add add cmp jb imul arpl dec add jns xor push add xor add add push add popa add dec add add push add add insb add add inc add push add arpl jno aaa add dec add xor add add pop add xor add jno jae dec add popa add cmp insl add dec add add add add push inc add add add push add dec add xor add dec add jae dec add xor je xor xor inc add bound push add add pop add inc add xor xor add std xor mov stc inc cmp or xor mov pop add or or add or or adc adc add add or or sbb add adc adc adc sbb add add push add adc add and and add adc add add add or add adc add add sbb add and sbb or add sbb and adc sbb sbb and push add push add push add add or add or add add push add add push add push jb jo outsl outsb inc js gs imul ja add test jae gs cs arpl imul imul cs arpl imul jae imul imul insl jae outsl jb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push imul gs imul outsl outsb add add add add aam or out mov add loopne or add pop inc outsl jb js dec popa imul jb gs insb add add add and 